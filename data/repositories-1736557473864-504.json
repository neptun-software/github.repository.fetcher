{
  "metadata": {
    "timestamp": 1736557473864,
    "page": 504,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jgm/pandoc",
      "stars": 35367,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 2.08,
          "content": "task:\n  name: macos_arm64\n  alias: macos_arm64\n  trigger_type: manual\n  timeout_in: 90m\n  macos_instance:\n    image: ghcr.io/cirruslabs/macos-monterey-base:latest\n  brew_script:\n    - brew update\n    - brew install ghc@9.6 cabal-install\n  env:\n    PATH: /opt/homebrew/opt/ghc@9.6/bin:${PATH}\n  cabal_store_cache:\n    folder: ~/.cabal/store\n    fingerprint_key: macos_2023_03_12\n  deps_script:\n    - cabal update\n    - cabal build all -fembed_data_files -fserver -flua --dependencies-only\n  upload_caches:\n    - cabal_store\n  install_script:\n    - sh macos/make_macos_release.sh\n  macos_arm64_artifacts:\n    path: ./macos-arm64/**\n\ntask:\n  name: linux_arm64\n  alias: linux_arm64\n  trigger_type: manual\n  timeout_in: 90m\n  arm_container:\n    image: quay.io/benz0li/ghc-musl:9.6\n    cpu: 4\n    memory: 12G\n  env:\n    CABALOPTS: -f-export-dynamic -fembed_data_files -fserver -flua --enable-executable-static -j4\n    GHCOPTS: -j4 +RTS -A256m -RTS -split-sections -optc-Os -optl=-pthread\n  cabal_store_cache:\n    folder: ~/.cabal/store\n    fingerprint_key: linux_arm64_2023_03_11\n  deps_script:\n    - cabal update\n    - cabal build --dependencies-only $CABALOPTS --ghc-options=\"$GHCOPTS\" pandoc-cli\n  upload_caches:\n    - cabal_store\n  package_script:\n    - cabal freeze && cat cabal.project.freeze\n    - bash linux/make_artifacts.sh\n  linux_arm64_artifacts:\n    path: ./linux-arm64/**\n\ntask:\n  name: linux_amd64\n  alias: linux_amd64\n  trigger_type: manual\n  timeout_in: 90m\n  container:\n    image: quay.io/benz0li/ghc-musl:9.6\n    cpu: 4\n    memory: 12G\n  env:\n    CABALOPTS: -f-export-dynamic -fembed_data_files -fserver -flua --enable-executable-static -j4\n    GHCOPTS: -j4 +RTS -A256m -RTS -split-sections -optc-Os -optl=-pthread\n  cabal_store_cache:\n    folder: ~/.cabal/store\n    fingerprint_key: linux_amd64_2023_03_12\n  deps_script:\n    - cabal update\n    - cabal build --dependencies-only $CABALOPTS --ghc-options=\"$GHCOPTS\" pandoc-cli\n  upload_caches:\n    - cabal_store\n  package_script:\n    - cabal freeze && cat cabal.project.freeze\n    - bash linux/make_artifacts.sh\n  linux_amd64_artifacts:\n    path: ./linux-amd64/**\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.38,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{zip,docx}]\ncharset =\nend_of_line =\nindent_style =\nindent_size =\ninsert_final_newline =\ntrim_trailing_whitespace =\n\n[*.{markdown,md}]\ntrim_trailing_whitespace = false\n\n[test/*]\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1,
          "content": "test/fb2/reader/* -text\npandoc-lua-engine/test/*.custom\t\t-text\npandoc-lua-engine/test/*.txt\t\t-text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.77,
          "content": "/*.*\n/build-artifacts*\n/dist-newstyle\n/dist\n/ctags\n/LOG\n/TAGS\n/bench-*\n!.circleci/**\n!.cirrus.yml\n!.envrc\n!.editorconfig\n!.gitattributes\n!.github/**\n!.gitignore\n!.hlint.yaml\n!.mailmap\n!.stylish-haskell.yaml\n!AUTHORS.md\n!BUGS\n!CITATION.cff\n!CONTRIBUTING.md\n!COPYING.md\n!COPYRIGHT\n!INSTALL.md\n!MANUAL.txt\n!Makefile\n!README.md\n!README.template\n!RELEASE-CHECKLIST\n!SECURITY.md\n!Setup.hs\n!cabal.project\n!changelog.md\n!pandoc.cabal\n!hie.yaml\n!flake.nix\n!flake.lock\n!default.nix\n!release.nix\n!shell.nix\n!stack.yaml\n!weeder.toml\n!app/**\n!benchmark/**\n!citeproc/**\n!data/**\n!doc/**\n!linux/**\n!macos/**\n!man/**\n!pandoc-lua-engine/**\n!pandoc-server/**\n!pandoc-cli/**\n!src/**\n!test/**\n!tools/**\n!trypandoc/**\n!xml-light/**\n!windows/**\n*.bkp\n*.orig\n*.o\n*.hi\n*.dyn_o\n*.dyn_hi\n*~\n.*sw?\n.DS_Store\n.stack-work\n"
        },
        {
          "name": ".hlint.yaml",
          "type": "blob",
          "size": 2.67,
          "content": "# HLint configuration file\n# https://github.com/ndmitchell/hlint\n##########################\n\n# Specify additional command line arguments\n#\n- arguments: [--color=auto, --cpp-ansi]\n\n# Ignore some builtin hints\n#\n- ignore: {name: \"Avoid lambda\"}\n- ignore: {name: \"Use bimap\"}\n- ignore: {name: \"Use void\"}\n- ignore: {name: \"Eta reduce\"}\n- ignore: {name: \"Evaluate\"}\n- ignore: {name: \"Reduce duplication\"} # TODO: could be more fine-grained\n- ignore: {name: \"Use &&&\"}\n- ignore: {name: \"Use String\"}\n- ignore: {name: \"Use camelCase\"}\n- ignore: {name: \"Use fmap\"}  # specific for GHC 7.8 compat\n- ignore: {name: \"Use isDigit\"}\n- ignore: {name: \"Use <&>\"}\n- ignore:\n    name: \"Monad law, left identity\"\n    within: Text.Pandoc.App.OutputSettings\n\n- ignore:\n    name: \"Move brackets to avoid $\"\n    within: Text.Pandoc.Writers.CslJson\n\n- ignore:\n    name: \"Redundant <$>\"\n    within:\n      - Text.Pandoc.Readers.Docx.Parse\n      - Text.Pandoc.Writers.MediaWiki\n      - Text.Pandoc.Writers.OpenDocument\n      - Text.Pandoc.Writers.Powerpoint.Output\n      - Text.Pandoc.Writers.Powerpoint.Presentation\n\n- ignore:\n    name: \"Redundant return\"\n    within: Text.Pandoc.Citeproc.BibTeX\n\n# With recent hlint this rule has given false positives on TH\n- ignore:\n    name: \"Redundant bracket\"\n\n\n- ignore:\n    name: \"Use <$>\"\n    within:\n      - Text.Pandoc.Readers.LaTeX\n      - Text.Pandoc.Readers.Markdown\n\n- ignore:\n    name: \"Use camelCase\"\n    within:\n      - Tests.Writers.Docbook\n      - Tests.Writers.Native\n      - Text.Pandoc.Citeproc\n      - Text.Pandoc.Extensions\n      - Text.Pandoc.Lua.Marshaling.Version\n      - Text.Pandoc.Lua.Module.Pandoc\n      - Text.Pandoc.Lua.Module.Utils\n      - Text.Pandoc.Readers.Odt.ContentReader\n      - Text.Pandoc.Readers.Odt.Namespaces\n\n- ignore:\n    name: \"Use forM_\"\n    within:\n      - Text.Pandoc.Readers.DocBook\n\n- ignore:\n    name: \"Use Just\"\n    within:\n      - Text.Pandoc.Citeproc.MetaValue\n      - Text.Pandoc.Readers.Odt.ContentReader\n      - Text.Pandoc.Writers.Roff\n\n- ignore:\n    name: \"Use list comprehension\"\n    within: Text.Pandoc.Citeproc.BibTeX\n\n- ignore:\n    name: \"Use list literal pattern\"\n    within: Text.Pandoc.Citeproc.MetaValue\n\n# TODO: check\n- ignore:\n    name: \"Use second\"\n    within:\n      - Text.Pandoc.Citeproc.BibTeX\n      - Text.Pandoc.Citeproc.Locator\n\n# TODO: check\n- ignore:\n    name: \"Use sortOn\"\n    within: Text.Pandoc.Writers.OpenDocument\n\n- ignore:\n    name: \"Use tuple-section\"\n    within:\n      - Text.Pandoc.Readers.EPUB\n      - Text.Pandoc.ImageSize\n      - Text.Pandoc.Readers.Markdown\n      - Text.Pandoc.Readers.RST\n\n# fromRight is only in base >= 4.10\n- ignore:\n    name: \"Use fromRight\"\n\n# Define some custom infix operators\n# - fixity: infixr 3 ~^#^~\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 2.02,
          "content": "Adam Brandizzi <brandizzi@gmail.com>\nAlbert Krewinkel <albert@zeitkraut.de> <albert+github@zeitkraut.de>\nAlbert Krewinkel <albert@zeitkraut.de> <albert.krewinkel@tourstream.eu>\nAlbert Krewinkel <albert@zeitkraut.de> <tarleb@moltkeplatz.de>\nAlbert Krewinkel <albert@zeitkraut.de> <tarleb@zeitkraut.de>\nAlexander Krotov <ilabdsf@gmail.com>\nAlex Ivkin <alex@ivkin.net>\nAlex Ivkin <alex@ivkin.net> <alexivkin@users.noreply.github.com>\nAndrew Dunning <andunning@gmail.com>\nAndrew Dunning <andunning@gmail.com> <adunning@users.noreply.github.com>\nAndrew Newman <andrewfnewman@gmail.com>\nClare Macrae <clare.macrae@googlemail.com> <github@cfmacrae.fastmail.co.uk>\nHugo Roy <hugo@fsfe.org>\nHugo Roy <hugo@xps.ampoliros.net>\nJohn MacFarlane <jgm@berkeley.edu> <fiddlosopher@788f1e2b-df1e-0410-8736-df70ead52e1b>\nJohn MacFarlane <jgm@berkeley.edu> <fiddlosopher@gmail.com>\nJohn MacFarlane <jgm@berkeley.edu> <jgm@Johns-MacBook-Pro.local>\nJose Luis Duran <jlduran@gmail.com> <jlduran@users.noreply.github.com>\nMarc Schreiber <schrieveslaach@online.de>\nMasayoshi Takahashi <maki@rubycolor.org>\nMatthew Pickering <matthewtpickering@gmail.com>\nMauro Bieg <mauro.bieg@gmail.com>\nMauro Bieg <mauro.bieg@gmail.com> <maurobieg@Mauros-MacBook-Air.local>\nMauro Bieg <mauro.bieg@gmail.com> <mb21@server.fake>\nMauro Bieg <mauro.bieg@gmail.com> <mb21@users.noreply.github.com>\nMauro Bieg <mb21@users.noreply.github.com>\nNils Carlson <nils.carlson@ludd.ltu.se>\nNils Carlson <nils.carlson@ludd.ltu.se> <pyssling@ludd.ltu.se>\nRobin Lambertz <robinlambertz+dev@gmail.com>\nRoland Hieber <rohieb@rohieb.name> <rohieb@users.noreply.github.com>\nSebastian Talmon <35015406+stalmon@users.noreply.github.com>\nSergei Trofimovich <slyfox@gentoo.org> <siarheit@google.com>\nSergei Trofimovich <slyfox@gentoo.org> <slyfox@inbox.ru>\nStefan Bj√∂rk <stefan.bjork@gmail.com> <stefan@airistotle.local>\nThomas Hodgson <hello@twshodgson.net> <twsh@users.noreply.github.com>\nTimm Albers <timmm.albers@gmail.com> <timm.albers@open-xchange.com>\nYan Pashkovsky <yanpaso@gmail.com> <Yanpas@users.noreply.github.com>\n"
        },
        {
          "name": ".stylish-haskell.yaml",
          "type": "blob",
          "size": 5.82,
          "content": "# stylish-haskell configuration file\n# ==================================\n\n# The stylish-haskell tool is mainly configured by specifying steps. These steps\n# are a list, so they have an order, and one specific step may appear more than\n# once (if needed). Each file is processed by these steps in the given order.\nsteps:\n  # Convert some ASCII sequences to their Unicode equivalents. This is disabled\n  # by default.\n  # - unicode_syntax:\n  #     # In order to make this work, we also need to insert the UnicodeSyntax\n  #     # language pragma. If this flag is set to true, we insert it when it's\n  #     # not already present. You may want to disable it if you configure\n  #     # language extensions using some other method than pragmas. Default:\n  #     # true.\n  #     add_language_pragma: true\n\n  # Align the right hand side of some elements.  This is quite conservative\n  # and only applies to statements where each element occupies a single\n  # line.\n  - simple_align:\n      cases: true\n      top_level_patterns: true\n      records: true\n\n  # Import cleanup\n  - imports:\n      # There are different ways we can align names and lists.\n      #\n      # - global: Align the import names and import list throughout the entire\n      #   file.\n      #\n      # - file: Like global, but don't add padding when there are no qualified\n      #   imports in the file.\n      #\n      # - group: Only align the imports per group (a group is formed by adjacent\n      #   import lines).\n      #\n      # - none: Do not perform any alignment.\n      #\n      # Default: global.\n      align: none\n\n      # Following options affect only import list alignment.\n      #\n      # List align has following options:\n      #\n      # - after_alias: Import list is aligned with end of import including\n      #   'as' and 'hiding' keywords.\n      #\n      #   > import qualified Data.List      as List (concat, foldl, foldr, head,\n      #   >                                          init, last, length)\n      #\n      # - with_alias: Import list is aligned with start of alias or hiding.\n      #\n      #   > import qualified Data.List      as List (concat, foldl, foldr, head,\n      #   >                                 init, last, length)\n      #\n      # - new_line: Import list starts always on new line.\n      #\n      #   > import qualified Data.List      as List\n      #   >     (concat, foldl, foldr, head, init, last, length)\n      #\n      # Default: after_alias\n      list_align: after_alias\n\n      # Long list align style takes effect when import is too long. This is\n      # determined by 'columns' setting.\n      #\n      # - inline: This option will put as much specs on same line as possible.\n      #\n      # - new_line: Import list will start on new line.\n      #\n      # - new_line_multiline: Import list will start on new line when it's\n      #   short enough to fit to single line. Otherwise it'll be multiline.\n      #\n      # - multiline: One line per import list entry.\n      #   Type with constructor list acts like single import.\n      #\n      #   > import qualified Data.Map as M\n      #   >     ( empty\n      #   >     , singleton\n      #   >     , ...\n      #   >     , delete\n      #   >     )\n      #\n      # Default: inline\n      long_list_align: inline\n\n      # List padding determines indentation of import list on lines after import.\n      # This option affects 'list_align' and 'long_list_align'.\n      list_padding: 4\n\n      # Separate lists option affects formatting of import list for type\n      # or class. The only difference is single space between type and list\n      # of constructors, selectors and class functions.\n      #\n      # - true: There is single space between Foldable type and list of it's\n      #   functions.\n      #\n      #   > import Data.Foldable (Foldable (fold, foldl, foldMap))\n      #\n      # - false: There is no space between Foldable type and list of it's\n      #   functions.\n      #\n      #   > import Data.Foldable (Foldable(fold, foldl, foldMap))\n      #\n      # Default: true\n      separate_lists: true\n\n  # Language pragmas\n  - language_pragmas:\n      # We can generate different styles of language pragma lists.\n      #\n      # - vertical: Vertical-spaced language pragmas, one per line.\n      #\n      # - compact: A more compact style.\n      #\n      # - compact_line: Similar to compact, but wrap each line with\n      #   `{-#LANGUAGE #-}'.\n      #\n      # Default: vertical.\n      style: vertical\n\n      # Align affects alignment of closing pragma brackets.\n      #\n      # - true: Brackets are aligned in same column.\n      #\n      # - false: Brackets are not aligned together. There is only one space\n      #   between actual import and closing bracket.\n      #\n      # Default: true\n      align: true\n\n      # stylish-haskell can detect redundancy of some language pragmas. If this\n      # is set to true, it will remove those redundant pragmas. Default: true.\n      remove_redundant: true\n\n  # Replace tabs by spaces. This is disabled by default.\n  # - tabs:\n  #     # Number of spaces to use for each tab. Default: 8, as specified by the\n  #     # Haskell report.\n  #     spaces: 8\n\n  # Remove trailing whitespace\n  - trailing_whitespace: {}\n\n# A common setting is the number of columns (parts of) code will be wrapped\n# to. Different steps take this into account. Default: 80.\ncolumns: 80\n\n# By default, line endings are converted according to the OS. You can override\n# preferred format here.\n#\n# - native: Native newline format. CRLF on Windows, LF on other OSes.\n#\n# - lf: Convert to LF (\"\\n\").\n#\n# - crlf: Convert to CRLF (\"\\r\\n\").\n#\n# Default: native.\nnewline: native\n\n# Sometimes, language extensions are specified in a cabal file or from the\n# command line instead of using language pragmas in the file. stylish-haskell\n# needs to be aware of these, so it can parse the file correctly.\n#\n# No language extensions are enabled by default.\n# language_extensions:\n  # - TemplateHaskell\n  # - QuasiQuotes\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 7.63,
          "content": "# Contributors\n\n- Aaron Wolen\n- Adelar da Silva Queir√≥z\n- Agust√≠n Mart√≠n Barbero\n- Akash Patel\n- Akos Marton\n- Albert Krewinkel\n- Alex Ivkin\n- Alex Toldaiev\n- Alex Vong\n- Alexander Batischev\n- Alexander Kondratskiy\n- Alexander Krotov\n- Alexander Sulfrian\n- Alexander V Vershilov\n- Alexandre Franke\n- Alfred Wechselberger\n- Amar Al-Zubaidi\n- Amir Dekel\n- Amneesh Singh\n- Amogh Rathore\n- Amy de Buitl√©ir\n- Anabra\n- Anders Waldenborg\n- Andreas Deininger\n- Andreas L√∂√∂w\n- Andreas Scherer\n- Andres Freund\n- Andrew Dunning\n- Andy Morris\n- Aner Lucero\n- Anti-Distinctlyminty\n- Antoine Latter\n- Antonio Terceiro\n- Arata Mizuki\n- Arata Mizuki\n- Arfon Smith\n- Arlo O'Keeffe\n- Artem Pelenitsyn\n- Artyom Kazak\n- B. Scott Michel\n- Bastien Dumont\n- Ben Firshman\n- Ben Gamari\n- Ben Steinberg\n- Beni Cherniavsky-Paskin\n- Benjamin Bray\n- Benjamin Esham\n- Benjamin Wuethrich\n- Benoit Schweblin\n- Benson Muite\n- Bjorn Buckwalter\n- Blake Eryx\n- Bodigrim\n- Bradley Kuhn\n- Brent Yorgey\n- Brian Leung\n- Bryan O'Sullivan\n- Caleb McDaniel\n- Caleb Mclennan\n- Calvin Beck\n- Carlos Scheidegger\n- Carlos Sosa\n- Carsten Allefeld\n- Castedo Ellerman\n- C√©cile Chemin\n- C√©dric Couralet\n- Cezary Dro≈ºak\n- Chandrahas77\n- Charanjit Singh\n- Charlotte Koch\n- Chris Black\n- Christian Conkle\n- Christian Christiansen\n- Christian Despres\n- Christoffer Ackelman\n- Christoffer Sawicki\n- Christophe Dervieux\n- Clare Macrae\n- Clint Adams\n- Conal Elliott\n- Cormac Relf\n- Craig S. Bosma\n- Damien Clochard\n- Daniel Bergey\n- Daniel Kessler\n- Daniel Maslowski\n- Daniel T. Staal\n- Daniele D'Orazio\n- David A Roberts\n- David Lazar\n- David Martschenko\n- David R√∂thlisberger\n- Denis Laxalde\n- Denis Maier\n- Derek Chen-Becker\n- Diego Balseiro\n- Diogo Almiro\n- Dimitri Sabadie\n- Dimitris Apostolou\n- Dmitry Pogodin\n- Dmitry Volodin\n- Douglas Calvert\n- Edwin T√∂r√∂k\n- Eigil Rischel\n- Elliot Bobrow\n- Emanuel Evans\n- Emerson Harkin\n- Emily Bourke\n- Emily Eisenberg\n- Eric Kow\n- Eric Schrijver\n- Eric Seidel\n- Erik Rask\n- Ethan Riley\n- √âtienne Bersac\n- Evan Silberman\n- Even Brenden\n- Ezwal\n- Fabi√°n Heredia Montiel\n- F√©lix Baylac-Jacqu√©\n- Felix Yan\n- Florian Beeres\n- Florian Eitel\n- Florian Klink\n- Florian Kohrt\n- Francesco Mazzoli\n- Francesco Occhipinti\n- Fran√ßois Gannaz\n- Frank Seifferth\n- Frederik Elwert\n- Freiric Barral\n- Freirich Raabe\n- Frerich Raabe\n- Fyodor Sheremetyev\n- Gabor Pali\n- Gabriel Lewertowski\n- Gavin Beatty\n- George Stagg\n- Georgi Lyubenov\n- Gokul Rajiv\n- Gordon Woodhull\n- Gottfried Haider\n- Greg Maslov\n- Greg Rundlett\n- Gr√©gory Bataille\n- Guriy Samarin\n- Gwern Branwen\n- Hamish Mackenzie\n- Hans-Peter Deifel\n- Heiko Schlittermann\n- Henrik Tramberend\n- Henry de Valence\n- Herwig Stuetz\n- Hikaru Ibayashi\n- Hos Es\n- Hubert Plociniczak\n- Iacobus1983\n- Ian Max Andolina\n- Igor Khorlo\n- Igor Pashev\n- Ilona Silverwood\n- Ilya V. Portnov\n- Ivan Panchenko\n- Ivan Trubach\n- Ivar de Bruin\n- Ivo Clarysse\n- Jaap de Jong\n- James J Balamuta\n- J. B. Rainsberger\n- J. Lewis Muir\n- Jackson Schuster\n- Jaehwang Jung\n- Jaime Marqu√≠nez Ferr√°ndiz\n- Jake Zimmerman\n- Jakob Vo√ü\n- James Aspnes\n- James P. Ascher\n- James Scott-Brown\n- Jamie F. Olson\n- Jan Larres\n- Jan Schulz\n- Jan Tojnar\n- Jannik Buhr\n- Jan-Otto Kr√∂pke\n- Jared Lander\n- Jason Ronallo\n- Jeff Arnold\n- Jeff Runningen\n- Jens Getreu\n- Jens Petersen\n- Jens Oehlschl√§gel\n- Jesse Hathaway\n- Jeremie Knuesel\n- J√©r√©my Bobbio\n- Jeroen de Haas\n- Jerry Sky\n- Jesse Rosenthal\n- Joe Hermaszewski\n- Joe Hillenbrand\n- John KetzerX\n- John Luke Bentley\n- John MacFarlane\n- John Muccigrosso\n- John Purnell\n- Jonas Scholl\n- Jonas Smedegaard\n- Jonathan\n- Jonathan Daugherty\n- Jonathan D√∂nszelmann\n- Jose Luis Duran\n- Jos√© de Mattos Neto\n- Josef Svenningsson\n- Joseph C. Sible\n- Julia Diaz\n- Julien Cretel\n- Julien Dutant\n- Juliette Fourcot\n- Juliusz Gonera\n- Justin Bogner\n- Justin Wood\n- Karl Pettersson\n- Keiichiro Shikano\n- Kelsey Hightower\n- Kevin Broch\n- Kolen Cheung\n- Konstantin Zudov\n- Kristof Bastiaensen\n- Krystof Beuermann\n- Lars-Dominik Braun\n- Laurent P. Ren√© de Cotret\n- Lawrence Chonavel\n- Leif Metcalf\n- Leo Heitmann Ruiz\n- Leonard Rosenthol\n- Lila\n- Link Swanson\n- Lo√Øc Grobol\n- Lorenzo\n- Lucas Escot\n- Lucas Viana\n- Lucas V. R\n- Luis Rivera\n- Luke Plant\n- Marc Schreiber\n- Marcin Serwin\n- Mario Lang\n- Mark Szepieniec\n- Mark Wright\n- Martin Joerg\n- Martin Linn\n- Martin Michlmayr\n- Mart√≠n Pozo\n- Masataka Ogawa\n- Masayoshi Takahashi\n- Matej Kollar\n- Mathias Schenner\n- Mathias Walter\n- Mathieu Boespflug\n- Mathieu Duponchelle\n- Matt Dodson\n- Matthew Doty\n- Matthew Eddey\n- Matthew Pickering\n- Matthias C. M. Troffaes\n- Mauro Bieg\n- Max Bolingbroke\n- Max Heller\n- Max Rydahl Andersen\n- Merijn Verstraaten\n- Michael Beaumont\n- Michael Chladek\n- Michael Hoffmann\n- Michael McClurg\n- Michael Peyton Jones\n- Michael Reed\n- Michael Snoyman\n- Michael Stahl\n- Michael Thompson\n- Micka√´l Canouil\n- Mike Tzou\n- Miko≈Çaj Machowski\n- Milan Bracke\n- MinRK\n- Morgan Willcock\n- Morton Fox\n- Nathan Gass\n- Naveen\n- Neil Mayhew\n- Nick Bart\n- Nick Berendsen\n- Nick Fleisher\n- Nicolas Kaiser\n- Nikolai Korobeinikov\n- Nikolay Yakimov\n- Nils Carlson\n- Nixon Enraght-Moony\n- Noah Malmed\n- Nokome Bentley\n- Norwid Behrnd\n- OCzarnecki\n- Ola Wolska\n- Ole Martin Ruud\n- Oliver Fabel\n- Oliver Matthews\n- Olivier Benz\n- Ophir Lifshitz\n- Or Neeman\n- OvidiusCicero\n- Owen McGrath\n- Pablo Rodr√≠guez\n- Pascal Wagler\n- Pau RE\n- Paul Rivier\n- Paul Tilley\n- Paulo Tanimoto\n- Pavol Otto\n- Per Christian Gaustad\n- Pete Ryland\n- Peter Fabinksi\n- Peter Wang\n- Philip Pesca\n- Philippe Ombredanne\n- Phillip Alday\n- Pranesh Prakash\n- Prat\n- Prayag Verma\n- Puneeth Chaganti\n- Quinn\n- R. N. West\n- Ralf Stephan\n- Raniere Silva\n- Raymond Ehlers\n- Recai Okta≈ü\n- Rowan Rodrik van der Molen\n- Roland Hieber\n- Roman Ber√°nek\n- Ruqi\n- RyanGlScott\n- S.P.H\n- Salim B\n- Sam S. Almahri\n- Sam May\n- Samuel Tardieu\n- Saumel Lemmenmeier\n- Sascha Wilde\n- Scott Morrison\n- Sebastian Talmon\n- Sebbones\n- Sergei Trofimovich\n- Sergey Astanin\n- Seth Speaks\n- Shahbaz Youssefi\n- Shaun Attfield\n- Shim Myeongseob\n- Shin Sang-jae\n- Sidarth Kapur\n- Sidharth Kapur\n- Simon Hengel\n- Simon Schuster\n- Siphalor\n- Stefan Dresselhaus\n- Stephan Daus\n- Stephan Meijer\n- Stephen Altamirano\n- Stephen Huan\n- Sukil Etxenike\n- Sukka\n- Sumit Sahrawat\n- Suraj Patil\n- Sven Wick\n- TEC\n- Tarik Graba\n- Tatiana Porras\n- Terence Eden\n- Thenaesh Elango\n- Thomas Hodgson\n- Thomas Soeiro\n- Thomas Wei√üschuh\n- Tim Lin\n- Tim Stewart\n- Tim Wisotzki\n- Timm Albers\n- Timothy Humphries\n- Tiziano M√ºller\n- Todd Sifleet\n- Tomas Dahlqvist\n- TomBen\n- Tom Leese\n- Toni Dietze\n- Tristan Stenner\n- Tristan de Cacqueray\n- Tristano Ajmone\n- Tuong Nguyen Manh\n- Uli K√∂hler\n- Urs Liska\n- V√°clav Haisman\n- V√°clav Zeman\n- Vaibhav Sagar\n- Vanessa McHale\n- Vasily Alferov\n- Veratyr\n- Viktor Kronvall\n- Vincent\n- Vlad Hanciuta\n- Vladimir Alexiev\n- Waldir Pimenta\n- Wandmalfarbe\n- Wentao Han\n- Wikiwide\n- William Lupton\n- William Rusnack\n- Winnie Hellmann\n- Wout Gevaert\n- Xavier Olive\n- Yan Pashkovsky\n- Yehuda Katz\n- YI\n- Yoan Blanc\n- Yuchen Pei\n- Zihang Chen\n- 3w36zj6\n- arcnmx\n- a-vrma\n- andrebauer\n- black-desk\n- blmage\n- bucklereed\n- bumper314\n- chinapedia\n- cholonam\n- closeobserve\n- csforste\n- d-dorazio\n- damon-sava-stanley\n- dbecher-ito\n- ebiim\n- ech0\n- favonia\n- guqicun\n- harabat\n- hseg\n- infinity0x\n- jeongminkim-islab\n- kaizshang91\n- lawcho\n- lifeunleaded\n- lux-lth\n- luz paz\n- lwolfsonkin\n- mbracke\n- mbrackeantidot\n- mh4ckt3mh4ckt1c4s\n- mjfs\n- mt_caret\n- nbehrnd\n- niszet\n- nkalvi\n- nuew\n- obcat\n- oltolm\n- oquechy\n- pacien\n- perro tuerto\n- piq9117\n- priiduonu\n- qerub\n- quasicomputational\n- ricnorr\n- robabla\n- roblabla\n- rodja.trappe\n- rski\n- samuel-weinhardt\n- sdhoward\n- shreevatsa.public\n- takahashim\n- taotieren\n- tecosaur\n- tgkokk\n- the-solipsist\n- thomjur\n- thsutton\n- thron7\n- timo-a\n- vijayphoenix\n- vkraven\n- wgevaert\n- wiefling\n- willj-dev\n- wuffi\n"
        },
        {
          "name": "BUGS",
          "type": "blob",
          "size": 0.15,
          "content": "To view a list of known bugs, or to enter a bug report, please use\nPandoc's issue tracker: <https://github.com/jgm/pandoc/issues>.\n\nSee also CONTRIBUTING.md.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.48,
          "content": "cff-version: 1.2.0\ntitle: Pandoc\nmessage: \"If you use this software, please cite it as below.\"\ntype: software\nurl: \"https://github.com/jgm/pandoc\"\nauthors:\n  - given-names: John\n    family-names: MacFarlane\n    email: jgm@berkeley.edu\n    orcid: 'https://orcid.org/0000-0003-2557-9090'\n  - given-names: Albert\n    family-names: Krewinkel\n    email: tarleb+github@moltkeplatz.de\n    orcid: '0000-0002-9455-0796'\n  - given-names: Jesse\n    family-names: Rosenthal\n    email: jrosenthal@jhu.edu\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 19.35,
          "content": "Contributing to pandoc\n======================\n\nWelcome to pandoc! Very soon after its beginnings in 2006, pandoc\nhas been influenced, improved, and modified, by users, devs, and\nnewcomers alike. The project thrives on its active community. It is\ngreat to have you here.\n\nHow can I help?\n---------------\n\nThere are many ways in which you can support pandoc. Here are a few\nideas:\n\n  * Participate in online discussions. The [discussion\n    forum] is a good place for this.\n\n  * Help with questions. Every request that is answered by the wider\n    community frees time for programming contributors. This will\n    speed up development of new features and issue fixes. Don't\n    underestimate your knowledge, please share it!\n\n    Good places to help are the [discussion forum], Q/A\n    sites like StackOverflow, community forums (e.g.\n    [RStudio][RStudio Community], [Zettlr][Zettlr Forum]), and, for\n    technical questions, the GitHub [issue tracker].\n\n  * Write or improve documentation. If you ran into a problem which\n    took more time to figure out than expected, please consider to\n    save other users from the same experience. People writing the\n    documentation tend to lack an outside view, so please help\n    provide one. Good documentation is both difficult and extremely\n    important.\n\n    The official docs are not the only place for documentation.\n    Pandoc also has a [Wiki][pandoc wiki]. Private blogs can serve\n    as documentation just as the official manual can.\n\n  * Contribute code. No matter whether it's a small fix in a format\n    template or a huge lump of Haskell code: help is welcome. It's\n    usually a good idea to talk about the plans early, as this can\n    prevent unnecessary work. See below for more information.\n\n  * Last but not least: consider funding the development and\n    maintenance of pandoc financially. You can find sponsor buttons\n    on the [pandoc website] and the [GitHub repository][GitHub\n    repo].\n\nA rich ecosystem of libraries, editors, filters, and templates has\ndeveloped around pandoc; conversely, pandoc builds and depends on a\nlarge number of libraries. Contributing to any of these projects is\nanother way that can help to ensure stability, and to keep pushing\nthe boundaries of what is possible with pandoc.\n\n[RStudio Community]: https://community.rstudio.com/\n[Zettlr Forum]: https://forum.zettlr.com/\n[pandoc wiki]: https://github.com/jgm/pandoc/wiki\n[pandoc website]: https://pandoc.org\n[GitHub repo]: https://github.com/jgm/pandoc\n\nHave a question?\n----------------\n\nAsk on the [discussion forum].\n\n\nFound a bug?\n------------\n\nBug reports are welcome!  Please report all bugs on pandoc's GitHub\n[issue tracker].\n\nBefore you submit a bug report, search the [open issues] *and* [closed issues]\nto make sure the issue hasn't come up before. Also, check the [User's Guide] and\n[FAQs] for anything relevant.\n\nMake sure you can reproduce the bug with the [latest released\nversion] of pandoc---or, even better, the development version,\nsince the bug may have been fixed since the last release.\n[Nightly builds] are available, so you don't need to compile\nfrom source to test against the development version.\n(To fetch a nightly, visit the link, click the topmost \"Nightly\"\nin the table, then choose your platform under \"Artifacts.\"  Note\nthat you must be logged in with a GitHub account.)\n\nYour report should give detailed, *reproducible* instructions, including\n\n  * the pandoc version (check using `pandoc -v`)\n  * the exact command line used\n  * the exact input used\n  * the output received\n  * the output you expected instead\n\nA small test case (just a few lines) is ideal.  If your input is large,\ntry to whittle it down to a *minimum working example*.\n\nOut of scope?\n-------------\n\nA less than perfect conversion does not necessarily mean there's\na bug in pandoc.  Quoting from the MANUAL:\n\n> Because pandoc's intermediate representation of a document is less\n> expressive than many of the formats it converts between, one should\n> not expect perfect conversions between every format and every other.\n> Pandoc attempts to preserve the structural elements of a document, but\n> not formatting details such as margin size.  And some document elements,\n> such as complex tables, may not fit into pandoc's simple document\n> model.  While conversions from pandoc's Markdown to all formats aspire\n> to be perfect, conversions from formats more expressive than pandoc's\n> Markdown can be expected to be lossy.\n\nFor example, both `docx` and `odt` formats can represent margin size, but\nbecause pandoc's internal document model does not contain a representation of\nmargin size, this information will be lost on converting from docx\nto `odt`.  (You can, however, customize margin size using `--reference-doc`.)\n\nSo before submitting a bug report, consider whether it might be\n\"out of scope.\" If it concerns a feature of documents that isn't\nrepresentable in pandoc's Markdown, then it very likely is.\n(If in doubt, you can always ask on the [discussion-forum].)\n\nFixing bugs from the issue tracker\n----------------------------------\n\nAlmost all the bugs on the issue tracker have one or more associated\ntags. These are used to indicate the *complexity* and *nature* of a\nbug. There is not yet a way to indicate priority. An up to date\nsummary of issues can be found on [GitHub labels].\n\n* [good first issue] ‚Äî The perfect starting point for new contributors. The\n  issue is generic and can be resolved without deep knowledge of the code\n  base.\n* [enhancement] ‚Äî A feature which would be desirable. We recommend\n  you discuss any proposed enhancement on the [discussion forum]\n  before writing code.\n* [bug] ‚Äî A problem which needs to be fixed.\n* [complexity:low] ‚Äî The fix should only be a couple of lines.\n* [complexity:high] ‚Äî The fix might require structural changes or in depth\n  knowledge of the code base.\n* [new:reader] ‚Äî A request to add a new input format.\n* [new:writer] ‚Äî A request to add a new output format.\n* [docs] ‚Äî A discrepancy,  or ambiguity in the documentation.\n* [status:in-progress] ‚Äî Someone is actively working on or planning to work on the\n  ticket.\n* [status:more-discussion-needed] ‚Äî It is unclear what the correct approach\n  to solving the ticket is. Before starting on tickets such as this it\n  would be advisable to post on the ticket.\n* [status:more-info-needed] ‚Äî We require more information from a user before\n  we can classify a report properly.\n\nIssues related to a specific format are tagged accordingly, e.g. feature request\nor bug reports related to Markdown are labelled with [format:markdown].\n\nHave an idea for a new feature?\n-------------------------------\n\nFirst, search the [discussion forum]\nand the issue tracker (both [open issues] *and*\n[closed issues]) to make sure that the idea has not been discussed before.\n\nExplain the rationale for the feature you're requesting.  Why would this\nfeature be useful?  Consider also any possible drawbacks, including backwards\ncompatibility, new library dependencies, and performance issues.\n\nFeatures are very rarely \"implement and forget\", as all code must be\nmaintained. This is especially relevant for large or complex\ncontributions. It is helpful to be sympathetic to that fact, and to\ncommunicate future plans and availability clearly.\n\nAny potential new feature is best discussed on the [discussion\nforum] before opening an issue.\n\nPatches and pull requests\n-------------------------\n\nPatches and pull requests are welcome.  Before you put time into a nontrivial\npatch, it is a good idea to discuss it on the\n[discussion forum], especially if it is for a new feature (rather\nthan fixing a bug).\n\nPlease follow these guidelines:\n\n1.  Each patch (commit) should make a single logical change (fix a bug, add\n    a feature, clean up some code, add documentation).  Everything\n    related to that change should be included (including tests and\n    documentation), and nothing unrelated should be included.\n\n2.  The first line of the commit message should be a short description\n    of the whole commit (ideally <= 50 characters).  Then there should\n    be a blank line, followed by a more detailed description of the\n    change.\n\n3.  Follow the stylistic conventions you find in the existing\n    pandoc code.  Use spaces, not tabs, and wrap code to 80 columns.\n    Always include type signatures for top-level functions.\n    Consider installing [EditorConfig], this will help you to follow the\n    coding style prevalent in pandoc.\n\n4.  Your code should compile without warnings (`-Wall` clean).\n\n5.  Run the tests to make sure your code does not introduce new bugs.\n    (See below under [Tests](#tests).)  All tests should pass.\n\n6.  It is a good idea to add test cases for the bug you are fixing.  (See\n    below under [Tests](#tests).)  If you are adding a new writer or reader,\n    you must include tests.\n\n7.  If you are adding a new feature, include updates to `MANUAL.txt`.\n\n8.  All code must be released under the general license governing pandoc\n    (GPL v2).\n\n9.  It is better not to introduce new dependencies.  Dependencies on\n    external C libraries should especially be avoided.\n\n10. We aim for compatibility with at least the last three\n    released ghc versions, and sometimes more. Currently pandoc\n    can be compiled on ghc 8.6 an higher. All pull requests and\n    commits are tested automatically on GitHub Actions.\n\nTests\n-----\n\nTests can be run as follows:\n\n    cabal install --only-dependencies --enable-tests\n    cabal configure --enable-tests\n    cabal build\n    cabal test\n\nor, if you're using [stack],\n\n    stack setup\n    stack test\n\nThe test program is `test/test-pandoc.hs`.\n\nTo run particular tests (pattern-matching on their names), use\nthe `-p` option:\n\n    cabal install pandoc --enable-tests\n    cabal test --test-options='-p markdown'\n\nOr with stack:\n\n    stack test --test-arguments='-p markdown'\n\nIt is often helpful to add `-j4` (run tests in parallel) and\n`--hide-successes` (don't clutter output with successes) to the test\narguments as well. Collecting all options in a `cabal.project.local`\nfile in the project's root directory can help to keep `cabal`\ncommands short. E.g.:\n\n    flags: +embed_data_files\n    tests: True\n    test-show-details: direct\n    test-options: -j4 --hide-successes\n\nIf you add a new feature to pandoc, please add tests as well, following\nthe pattern of the existing tests. The test suite code is in\n`test/test-pandoc.hs`. If you are adding a new reader or writer, it is\nprobably easiest to add some data files to the `test` directory, and\nmodify `test/Tests/Old.hs`. Otherwise, it is better to modify the module\nunder the `test/Tests` hierarchy corresponding to the pandoc module you\nare changing.  Alternatively, you may add a \"command test\" to\nthe `/test/command/` hierarchy, following the pattern of the tests there.\nThese test files should have a meaningful name, which can include the issue\nnumber and/or the feature that's being tested. For example, `5474-tables.md`\nrefers to both issue and feature.\n\nYou can rebuild the golden tests in `tests/` by passing\n`--accept` to the test script. (If you're using stack, `stack\ntest --test-arguments \"--accept\"`; or `make TESTARGS=--accept`).\nThen check the changed golden files for accuracy, and\ncommit the changes.  For docx or pptx tests, open the files in Word\nor Powerpoint to ensure that they weren't corrupted and that\nthey had the expected result, and mention the Word/Powerpoint\nversion and OS in your commit comment.\n\nCode style\n----------\n\nPandoc uses [hlint] to identify opportunities for code improvements\nlike redundant brackets or unnecessary `Language` extensions.\nHowever, sometimes there are cases where there are good reasons to\nuse code different from what hlint proposes. In these cases, the\nrespective warning should be disabled in the file `.hlint.yaml`.\n\nThere should be no errors when running `hlint .`; this is checked by\nthe continuous integration (CI) setup. It is recommended that\ncontributors check their code with a local hlint installation, but\nrelying on the CI is fine, too.\n\nA good way to ensure no new warnings are introduced is to use a Git\n[pre-commit hook] which runs hlint on all updated Haskell files\nbefore creating a commit:\n\n    #!/bin/sh\n    git diff --diff-filter=MA --cached --name-only | grep '\\.hs$' | \\\n      xargs hlint --hint .hlint.yaml\n\n(If you are using GNU `xargs`, add the `-r` option immediately\nafter `xargs`.)\n\nSaving this to `.git/hooks/pre-commit`, and making the script\nexecutable, will prevent accidental introduction of potentially\nproblematic code.\n\nBenchmarks\n----------\n\nTo run benchmarks with cabal:\n\n    cabal configure --enable-benchmarks\n    cabal build\n    cabal bench\n\nWith stack:\n\n    stack bench\n\n\nUsing the REPL\n--------------\n\nWith a recent version of cabal, you can do `cabal repl` and get\na ghci REPL for working with pandoc.  With [stack], use\n`stack ghci`.\n\nWe recommend using the following `.ghci` file (which can be\nplaced in the source directory):\n\n    :set -fobject-code\n    :set -XTypeSynonymInstances\n    :set -XScopedTypeVariables\n    :set -XOverloadedStrings\n\nProfiling\n---------\n\nTo diagnose a performance issue with parsing, first try using\nthe `--trace` option.  This will give you a record of when block\nparsers succeed, so you can spot backtracking issues.\n\nTo use the GHC profiler with cabal:\n\n    cabal clean\n    cabal install --enable-library-profiling --enable-executable-profiling\n    pandoc +RTS -p -RTS [file]...\n    less pandoc.prof\n\nWith stack:\n\n    stack clean\n    stack install --profile\n    pandoc +RTS -p -RTS [file]...\n    less pandoc.prof\n\nThe code\n--------\n\nPandoc has a publicly accessible git repository on\nGitHub: <https://github.com/jgm/pandoc>.  To get a local copy of the source:\n\n    git clone https://github.com/jgm/pandoc.git\n\nThe source for the main pandoc program is `pandoc.hs`.  The source for\nthe pandoc library is in `src/`, the source for the tests is in\n`test/`, and the source for the benchmarks is in `benchmark/`.\n\nThe modules `Text.Pandoc.Definition`, `Text.Pandoc.Builder`, and\n`Text.Pandoc.Generic` are in a separate library `pandoc-types`.  The code can\nbe found in <https://github.com/jgm/pandoc-types>.\n\nTo build pandoc, you will need a working installation of the\n[Haskell platform].\n\nThe library is structured as follows:\n\n  - `Text.Pandoc` is a top-level module that exports what is needed\n    by most users of the library.  Any patches that add new readers\n    or writers will need to make changes here, too.\n  - `Text.Pandoc.Definition` (in `pandoc-types`) defines the types\n    used for representing a pandoc document.\n  - `Text.Pandoc.Builder` (in `pandoc-types`) provides functions for\n    building pandoc documents programmatically.\n  - `Text.Pandoc.Generics` (in `pandoc-types`) provides functions allowing\n    you to promote functions that operate on parts of pandoc documents\n    to functions that operate on whole pandoc documents, walking the\n    tree automatically.\n  - `Text.Pandoc.Readers.*` are the readers, and `Text.Pandoc.Writers.*`\n    are the writers.\n  - `Text.Pandoc.Citeproc.*` contain the code for citation handling,\n    including an interface to the [citeproc] library.\n  - `Text.Pandoc.Data` is used to embed data files when the `embed_data_files`\n    cabal flag is used.\n  - `Text.Pandoc.Emoji` is a thin wrapper around [emojis].\n  - `Text.Pandoc.Highlighting` contains the interface to the\n    skylighting library, which is used for code syntax highlighting.\n  - `Text.Pandoc.ImageSize` is a utility module containing functions for\n    calculating image sizes from the contents of image files.\n  - `Text.Pandoc.MIME` contains functions for associating MIME types\n    with extensions.\n  - `Text.Pandoc.Options` defines reader and writer options.\n  - `Text.Pandoc.PDF` contains functions for producing a PDF from a\n    LaTeX source.\n  - `Text.Pandoc.Parsing` contains parsing functions used in multiple readers.\n    the needs of pandoc.\n  - `Text.Pandoc.SelfContained` contains functions for making an HTML\n    file \"self-contained,\" by importing remotely linked images, CSS,\n    and JavaScript and turning them into `data:` URLs.\n  - `Text.Pandoc.Shared` is a grab-bag of shared utility functions.\n  - `Text.Pandoc.Writers.Shared` contains utilities used in writers only.\n  - `Text.Pandoc.Slides` contains functions for splitting a markdown document\n    into slides, using the conventions described in the MANUAL.\n  - `Text.Pandoc.Templates` defines pandoc's templating system.\n  - `Text.Pandoc.UTF8` contains functions for converting text to and from\n    UTF8 bytestrings (strict and lazy).\n  - `Text.Pandoc.Asciify` contains functions to derive ascii versions of\n    identifiers that use accented characters.\n  - `Text.Pandoc.UUID` contains functions for generating UUIDs.\n  - `Text.Pandoc.XML` contains functions for formatting XML.\n\nAdding a new command-line option\n--------------------------------\n\nTo add a new command-line option, you'll need to make changes in several\nplaces:\n\n- `MANUAL.txt` -- documentation for new option, both in the list\n  of options and in the section on defaults files.\n- `Text.Pandoc.App.Opt` -- new constructor for Opt and default\n  value\n- `Text.Pandoc.App.CommandLineOptions` -- the option parser\n- `Text.Pandoc.App` or `Text.Pandoc.App.OutputSettings` --\n  handle the new option\n- possibly in pandoc-server: `Text.Pandoc.Server` -- handle the\n  new option\n\nIf your change requires a new field for ReaderOptions or\nWriterOptions, you'll also need to\n\n- `Text.Pandoc.Options` -- type change and default value\n- in pandoc-lua-engine: Text.Pandoc.Lua.Marshal.WriterOptions\n  and/or Text.Pandoc.Lua.Marshal.ReaderOptions\n\nLua filters\n-----------\n\nIf you've written a useful pandoc [lua filter](lua-filters.html),\nyou may want to consider submitting a pull request to the\n[lua-filters repository](https://github.com/pandoc/lua-filters).\n\n[open issues]: https://github.com/jgm/pandoc/issues\n[closed issues]: https://github.com/jgm/pandoc/issues?q=is%3Aissue+is%3Aclosed\n[latest released version]: https://github.com/jgm/pandoc/releases/latest\n[Nightly builds]: https://github.com/jgm/pandoc/actions?query=workflow%3ANightly\n[pandoc-discuss]: https://groups.google.com/group/pandoc-discuss\n[issue tracker]: https://github.com/jgm/pandoc/issues\n[User's Guide]: https://pandoc.org/MANUAL.html\n[FAQs]:  https://pandoc.org/faqs.html\n[EditorConfig]: https://editorconfig.org/\n[Haskell platform]: https://www.haskell.org/platform/\n[hlint]: https://hackage.haskell.org/package/hlint\n[citeproc]: https://hackage.haskell.org/package/citeproc\n[emojis]: https://hackage.haskell.org/package/emojis\n[hsb2hs]: https://hackage.haskell.org/package/hsb2hs\n[pre-commit hook]: https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\n[GitHub labels]: https://github.com/jgm/pandoc/labels\n[good first issue]:https://github.com/jgm/pandoc/labels/good%20first%20issue\n[enhancement]: https://github.com/jgm/pandoc/labels/enhancement\n[bug]: https://github.com/jgm/pandoc/labels/bug\n[complexity:low]: https://github.com/jgm/pandoc/labels/complexity:low\n[complexity:high]: https://github.com/jgm/pandoc/labels/complexity:high\n[docs]: https://github.com/jgm/pandoc/labels/docs\n[format:markdown]: https://github.com/jgm/pandoc/labels/format:markdown\n[new:reader]: https://github.com/jgm/pandoc/labels/new:reader\n[new:writer]: https://github.com/jgm/pandoc/labels/new:writer\n[status:in-progress]: https://github.com/jgm/pandoc/labels/status:in-progress\n[status:more-discussion-needed]: https://github.com/jgm/pandoc/labels/status:more-discussion-needed\n[status:more-info-needed]: https://github.com/jgm/pandoc/labels/status:more-info-needed\n[stack]: https://github.com/commercialhaskell/stack\n[discussion forum]: https://github.com/jgm/pandoc/discussions\n\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 17.47,
          "content": "### GNU GENERAL PUBLIC LICENSE\n\nVersion 2, June 1991\n\n    Copyright (C) 1989, 1991 Free Software Foundation, Inc.  \n    51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n    Everyone is permitted to copy and distribute verbatim copies\n    of this license document, but changing it is not allowed.\n\n### Preamble\n\nThe licenses for most software are designed to take away your freedom\nto share and change it. By contrast, the GNU General Public License is\nintended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users. This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it. (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.) You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice. Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have. You must make sure that they, too, receive or can get the\nsource code. And you must show them these terms so they know their\nrights.\n\nWe protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware. If the software is modified by someone else and passed on,\nwe want its recipients to know that what they have is not the\noriginal, so that any problems introduced by others will not reflect\non the original authors' reputations.\n\nFinally, any free program is threatened constantly by software\npatents. We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary. To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at\nall.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n### TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n**0.** This License applies to any program or other work which\ncontains a notice placed by the copyright holder saying it may be\ndistributed under the terms of this General Public License. The\n\"Program\", below, refers to any such program or work, and a \"work\nbased on the Program\" means either the Program or any derivative work\nunder copyright law: that is to say, a work containing the Program or\na portion of it, either verbatim or with modifications and/or\ntranslated into another language. (Hereinafter, translation is\nincluded without limitation in the term \"modification\".) Each licensee\nis addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope. The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the Program\n(independent of having been made by running the Program). Whether that\nis true depends on what the Program does.\n\n**1.** You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a\nfee.\n\n**2.** You may modify your copy or copies of the Program or any\nportion of it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n  \n**a)** You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\n\n  \n**b)** You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any part\nthereof, to be licensed as a whole at no charge to all third parties\nunder the terms of this License.\n\n  \n**c)** If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such interactive\nuse in the most ordinary way, to print or display an announcement\nincluding an appropriate copyright notice and a notice that there is\nno warranty (or else, saying that you provide a warranty) and that\nusers may redistribute the program under these conditions, and telling\nthe user how to view a copy of this License. (Exception: if the\nProgram itself is interactive but does not normally print such an\nannouncement, your work based on the Program is not required to print\nan announcement.)\n\nThese requirements apply to the modified work as a whole. If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works. But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n**3.** You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n  \n**a)** Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections 1\nand 2 above on a medium customarily used for software interchange; or,\n\n  \n**b)** Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your cost of\nphysically performing source distribution, a complete machine-readable\ncopy of the corresponding source code, to be distributed under the\nterms of Sections 1 and 2 above on a medium customarily used for\nsoftware interchange; or,\n\n  \n**c)** Accompany it with the information you received as to the offer\nto distribute corresponding source code. (This alternative is allowed\nonly for noncommercial distribution and only if you received the\nprogram in object code or executable form with such an offer, in\naccord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it. For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable. However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n**4.** You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License. Any attempt otherwise\nto copy, modify, sublicense or distribute the Program is void, and\nwill automatically terminate your rights under this License. However,\nparties who have received copies, or rights, from you under this\nLicense will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n**5.** You are not required to accept this License, since you have not\nsigned it. However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works. These actions are\nprohibited by law if you do not accept this License. Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n**6.** Each time you redistribute the Program (or any work based on\nthe Program), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions. You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n**7.** If, as a consequence of a court judgment or allegation of\npatent infringement or for any other reason (not limited to patent\nissues), conditions are imposed on you (whether by court order,\nagreement or otherwise) that contradict the conditions of this\nLicense, they do not excuse you from the conditions of this License.\nIf you cannot distribute so as to satisfy simultaneously your\nobligations under this License and any other pertinent obligations,\nthen as a consequence you may not distribute the Program at all. For\nexample, if a patent license would not permit royalty-free\nredistribution of the Program by all those who receive copies directly\nor indirectly through you, then the only way you could satisfy both it\nand this License would be to refrain entirely from distribution of the\nProgram.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices. Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n**8.** If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded. In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n**9.** The Free Software Foundation may publish revised and/or new\nversions of the General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation. If the Program does not specify a\nversion number of this License, you may choose any version ever\npublished by the Free Software Foundation.\n\n**10.** If you wish to incorporate parts of the Program into other\nfree programs whose distribution conditions are different, write to\nthe author to ask for permission. For software which is copyrighted by\nthe Free Software Foundation, write to the Free Software Foundation;\nwe sometimes make exceptions for this. Our decision will be guided by\nthe two goals of preserving the free status of all derivatives of our\nfree software and of promoting the sharing and reuse of software\ngenerally.\n\n**NO WARRANTY**\n\n**11.** BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nPROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n**12.** IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nPROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n### END OF TERMS AND CONDITIONS\n\n### How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these\nterms.\n\nTo do so, attach the following notices to the program. It is safest to\nattach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    one line to give the program's name and an idea of what it does.\n    Copyright (C) yyyy  name of author\n\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\nAlso add information on how to contact you by electronic and paper\nmail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details\n    type `show w'.  This is free software, and you are welcome\n    to redistribute it under certain conditions; type `show c' \n    for details.\n\nThe hypothetical commands \\`show w' and \\`show c' should show the\nappropriate parts of the General Public License. Of course, the\ncommands you use may be called something other than \\`show w' and\n\\`show c'; they could even be mouse-clicks or menu items--whatever\nsuits your program.\n\nYou should also get your employer (if you work as a programmer) or\nyour school, if any, to sign a \"copyright disclaimer\" for the program,\nif necessary. Here is a sample; alter the names:\n\n    Yoyodyne, Inc., hereby disclaims all copyright\n    interest in the program `Gnomovision'\n    (which makes passes at compilers) written \n    by James Hacker.\n\n    signature of Ty Coon, 1 April 1989\n    Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program\ninto proprietary programs. If your program is a subroutine library,\nyou may consider it more useful to permit linking proprietary\napplications with the library. If this is what you want to do, use the\n[GNU Lesser General Public\nLicense](https://www.gnu.org/licenses/lgpl.html) instead of this\nLicense."
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 8.1,
          "content": "Pandoc\nCopyright (C) 2006-2024 John MacFarlane <jgm at berkeley dot edu>\n\nWith the exceptions noted below, this code is released under the [GPL],\nversion 2 or later:\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 2 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, write to the Free Software\n   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\nThe GNU General Public License is available in the file COPYING.md in\nthe source distribution.  On Debian systems, the complete text of the\nGPL can be found in `/usr/share/common-licenses/GPL`.\n\n[GPL]: https://www.gnu.org/copyleft/gpl.html\n\nPandoc's complete source code is available from the [Pandoc home page].\n\n[Pandoc home page]: https://pandoc.org\n\nPandoc includes some code with different copyrights, or subject to different\nlicenses.  The copyright and license statements for these sources are included\nbelow.  All are GPL-compatible licenses.\n\n----------------------------------------------------------------------\nThe modules in the `pandoc-types` repository (Text.Pandoc.Definition,\nText.Pandoc.Builder, Text.Pandoc.Generics, Text.Pandoc.JSON,\nText.Pandoc.Walk) are licensed under the BSD 3-clause license:\n\nCopyright (c) 2006-2024, John MacFarlane\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n\n    * Neither the name of John MacFarlane nor the names of other\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nPandoc's templates (in `data/templates`) are dual-licensed as either\nGPL (v2 or higher, same as pandoc) or (at your option) the BSD\n3-clause license.\n\nCopyright (c) 2014--2024, John MacFarlane\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Writers/Muse.hs\nCopyright (C) 2017-2020 Alexander Krotov\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Writers/Texinfo.hs\nCopyright (C) 2008-2024 John MacFarlane and Peter Wang\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Writers/OpenDocument.hs\nCopyright (C) 2008-2024 Andrea Rossato and John MacFarlane\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Writers/Org.hs\nCopyright (C) 2010-2024 Puneeth Chaganti, John MacFarlane, and\n                        Albert Krewinkel\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Writers/ZimWiki.hs\nCopyright (C) 2017 Alex Ivkin\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/Docx.hs\nsrc/Text/Pandoc/Readers/Docx/*\nCopyright (C) 2014-2020 Jesse Rosenthal\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/Textile.hs\nCopyright (C) 2010-2024 Paul Rivier and John MacFarlane\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/TikiWiki.hs\nCopyright (C) 2017 Robin Lee Powell\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/JATS.hs\nCopyright (C) 2017-2018 Hamish Mackenzie\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/EPUB.hs\nCopyright (C) 2014-2024 Matthew Pickering and John MacFarlane\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/Org.hs\nsrc/Text/Pandoc/Readers/Org/*\ntest/Tests/Readers/Org/*\nCopyright (C) 2014-2024 Albert Krewinkel\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\npandoc-lua-engine/src/Text/Pandoc/Lua.hs\npandoc-lua-engine/src/Text/Pandoc/Lua/*\npandoc-lua-engine/test/lua/*\nCopyright (C) 2017--2024 Albert Krewinkel and John MacFarlane\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/Jira.hs\nsrc/Text/Pandoc/Writers/Jira.hs\ntest/Tests/Readers/Jira.hs\nCopyright (C) 2019--2024 Albert Krewinkel\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nsrc/Text/Pandoc/Readers/FB2.hs\nCopyright (C) 2018--2019 Alexander Krotov\n\nReleased under the GNU General Public License version 2 or later.\n\n----------------------------------------------------------------------\nThe dzslides template contains JavaScript and CSS from Paul Rouget's\ndzslides template.\nhttps://github.com/paulrouget/dzslides\n\nReleased under the Do What the Fuck You Want To Public License.\n\n------------------------------------------------------------------------\nPandoc embeds a Lua interpreter (via hslua).\n\nCopyright ¬© 1994--2023 Lua.org, PUC-Rio.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 14.19,
          "content": "# Installing pandoc\n\nThe simplest way to get the latest pandoc release is to use the installer.\n\n<a href=\"https://github.com/jgm/pandoc/releases/latest\"\n  class=\"btn btn-primary\" id=\"downloadInstallerBtn\">\n  Download the latest installer\n</a>\n\nFor alternative ways to install pandoc, see below under the heading for\nyour operating system. \n\n**Note**: the statically linked Pandoc binaries provided by us (or those\navailable on Conda Forge) have a limitation. They are unable to utilise Lua\nfilters that rely on Lua modules written in C. If you require the\nfunctionality offered by these filters, please consider an alternative\nmethod of installation. \n\n## Windows\n\nThere is a package installer at pandoc's [download page].\nThis will install pandoc, replacing older versions, and\nupdate your path to include the directory where pandoc's\nbinaries are installed.\n\nIf you prefer not to use the msi installer, we also provide\na zip file that contains pandoc's binaries and\ndocumentation.  Simply unzip this file and move the binaries\nto a directory of your choice.\n\nAlternatively, you can install pandoc using\n[Chocolatey](https://chocolatey.org):\n\n    choco install pandoc\n\nChocolatey can also install other software that integrates with Pandoc.\nFor example, to install `rsvg-convert` (from [librsvg], covering formats\nwithout SVG support), [Python] (to use Pandoc filters), and\n[MiKTeX] (to typeset PDFs with [LaTeX]):\n\n    choco install rsvg-convert python miktex\n\nOr, you can install pandoc using\n[winget](https://github.com/microsoft/winget-pkgs):\n\n    winget install --source winget --exact --id JohnMacFarlane.Pandoc\n\nOr, you can install Pandoc using [Conda forge].\n\nUsing multiple installation methods can result in two separate\ninstallations of pandoc; it is recommended to properly uninstall\npandoc before switching to an alternative installation method.\n\nBy default, Pandoc creates PDFs using LaTeX.  We recommend\ninstalling it via [MiKTeX]. With the option `--pdf-engine`,\nyou however can specify other programs for this task.\n\n## macOS\n\nThere is a package installer at pandoc's [download page].\nIf you later want to uninstall the package, you can do so\nby downloading [this script][uninstaller]\nand running it with `perl uninstall-pandoc.pl`.\n\nAlternatively, you can install pandoc using\n[Homebrew](https://brew.sh):\n\n     brew install pandoc\n\nHomebrew can also install other software that integrates with Pandoc.\nFor example, to install [librsvg] (its `rsvg-convert` covers formats\nwithout SVG support), [Python] (to use Pandoc filters), and\n[BasicTeX] (to typeset PDFs with [LaTeX]):\n\n     brew install librsvg python homebrew/cask/basictex\n\nNote: On unsupported versions of macOS (more than three releases old),\nHomebrew installs from source, which takes additional time and disk space\nfor the `ghc` compiler and dependent Haskell libraries.\n\nOr, you can install Pandoc using [Conda forge].\n\nWe also provide a zip file containing the binaries and man\npages, for those who prefer not to use the installer.  Simply\nunzip the file and move the binaries and man pages to\nwhatever directory you like.\n\nBy default, Pandoc creates PDFs using LaTeX.  Because a full [MacTeX]\ninstallation uses four gigabytes of disk space, we recommend\n[BasicTeX] or [TinyTeX](https://yihui.org/tinytex/)\nand using the `tlmgr` tool to install additional packages\nas needed.  If you receive errors warning of fonts not found:\n\n    tlmgr install collection-fontsrecommended\n\nWith the option `--pdf-engine`, you however can specify other programs\nfor this task.\n\n## Linux\n\nCheck whether the pandoc version in your package manager is\nnot outdated. Pandoc is in the [Debian], [Ubuntu], [Slackware],\n[Arch], [Fedora], [NixOS], [openSUSE], [gentoo] and [Void] repositories.\n\nTo get the latest release, we provide a binary package for amd64\narchitecture on the **[download page]**.\n\nThe executable is statically linked and\nhas no dynamic dependencies or dependencies on external\ndata files.\n\nBoth a tarball and a deb installer are provided.  To install the deb:\n\n    sudo dpkg -i $DEB\n\nwhere `$DEB` is the path to the downloaded deb.  This will\ninstall the `pandoc` executable and man page.\n\nIf you use an RPM-based distro, you may be able to install\nthe deb from our download page using `alien`.\n\nOn any distro, you may install from the tarball into `$DEST`\n(say, `/usr/local/` or `$HOME/.local`) by doing\n\n    tar xvzf $TGZ --strip-components 1 -C $DEST\n\nwhere `$TGZ` is the path to the downloaded zipped tarball.\nFor Pandoc versions before 2.0, which don't provide\na tarball, try instead\n\n    ar p $DEB data.tar.gz | tar xvz --strip-components 2 -C $DEST\n\nOr, you can install Pandoc using [Conda forge].\n\nYou can also install from source, using the\ninstructions below under [Compiling from source].\nNote that most distros have the Haskell platform in their\npackage repositories.  For example, on Debian/Ubuntu,\nyou can install it with `apt-get install haskell-platform`.\n\nBy default, Pandoc creates PDFs using LaTeX.  We recommend installing\n[TeX Live](https://www.tug.org/texlive/) via your package\nmanager.  (On Debian/Ubuntu, `apt-get install texlive`.)  With the option\n`--pdf-engine`, you however can specify other programs for this task.\n\n## Chrome OS\n\nOn Chrome OS, pandoc can be installed using the\n[chromebrew](https://github.com/skycocker/chromebrew) package manager\nwith the command:\n\n```sh\ncrew install pandoc\n```\n\nThis will automatically build and configure pandoc for the specific\ndevice you are using.\n\n## BSD\n\nPandoc is in the [NetBSD], [FreeBSD], and [OpenBSD ports] repositories.\n\n## Conda Forge\n\nYou can install Pandoc using a [Conda\nForge](https://anaconda.org/conda-forge/pandoc) tool, like\n[Conda](https://conda.pydata.org/docs/intro.html),\n[[Micro]Mamba](https://mamba.readthedocs.io/en/latest/index.html) or\n[Pixi](https://prefix.dev). Conda forge also includes multiple LaTeX and\nother relevant packages for Pandoc (including `pandoc-citeproc`,\n`pandoc-plot`, `rsvg-convert` via `librsvg` etc.). **Note:** conda forge\ninstalls a statically-linked executable.\n\n    conda install -c conda-forge pandoc\n    pixi global install pandoc\n    micromamba install pandoc\n\n## Docker\n\nThe official Docker images for pandoc can be found at\n<https://github.com/pandoc/dockerfiles> and at\n[dockerhub](https://hub.docker.com/).\n\nThe [pandoc/core](https://hub.docker.com/r/pandoc/core)\nimage contains `pandoc`.\n\nThe [pandoc/latex](https://hub.docker.com/r/pandoc/latex)\nimage also contains the minimal LaTeX installation needed\nto produce PDFs using pandoc.\n\nTo run pandoc using Docker, converting `README.md` to `README.pdf`:\n\n    docker run --rm --volume \"`pwd`:/data\" --user `id -u`:`id -g` pandoc/latex README.md -o README.pdf\n\n## GitHub Actions\n\nPandoc can be run through\n[GitHub Actions](https://github.com/features/actions).  For some\nexamples, see <https://github.com/pandoc/pandoc-action-example>.\n\n## GitLab CI/CD\n\nPandoc can be run through [GitLab CI/CD].  For some\nexamples, see <https://gitlab.com/pandoc/pandoc-ci-example>.\n\n## Compiling from source\n\nIf for some reason a binary package is not available for your\nplatform, or if you want to hack on pandoc or use a non-released\nversion, you can install from source.\n\n### Getting the pandoc source code\n\nSource tarballs can be found at\n<https://hackage.haskell.org/package/pandoc>.  For example, to\nfetch the source for version 1.17.0.3:\n\n    wget https://hackage.haskell.org/package/pandoc-1.17.0.3/pandoc-1.17.0.3.tar.gz\n    tar xvzf pandoc-1.17.0.3.tar.gz\n    cd pandoc-1.17.0.3\n\nOr you can fetch the development code by cloning the repository:\n\n    git clone https://github.com/jgm/pandoc\n    cd pandoc\n\nNote:  there may be times when the development code is broken\nor depends on other libraries which must be installed\nseparately.  Unless you really know what you're doing, install\nthe last released version.\n\n### Quick stack method\n\nThe easiest way to build pandoc from source is to use [stack][stack]:\n\n1.  Install [stack][stack]. Note that Pandoc requires stack >= 1.7.0.\n\n2.\n        stack setup\n        stack install pandoc-cli\n\n    `stack setup` will automatically download the ghc compiler\n    if you don't have it.  `stack install` will install the\n    `pandoc` executable into `~/.local/bin`, which you should\n    add to your `PATH`.  This process will take a while, and\n    will consume a considerable amount of disk space.\n\n\n### Quick cabal method\n\n1.  Install [ghcup](https://www.haskell.org/ghcup/install/).\n    This will give you `ghc` and `cabal`.\n\n2.  Update your package database:\n\n        cabal update\n\n3.  Use `cabal` to install pandoc and its dependencies:\n\n        cabal install pandoc-cli\n\n    This procedure will install the released version of pandoc,\n    which will be downloaded automatically from HackageDB.\n    The `pandoc` executable will be placed in `$HOME/.cabal/bin`\n    on linux/unix/macOS and in `%APPDATA%\\cabal\\bin` on Windows.\n    Make sure this directory is in your path.\n\n    If you want to install a modified or development version of\n    pandoc instead, switch to the source directory before running\n    the above command -- cabal will use the local code for all\n    projects mentioned in the `cabal.project`.\n\n4.  You should now be able to run `pandoc`:\n\n        pandoc --help\n\n5.  Cabal does not install the `pandoc.1` man page, but you can\n    copy it from the `man/` directory of the source code to\n    `/usr/local/share/man/man1/` or wherever man pages go on\n    your system.\n\n\n### Custom cabal method\n\nThis is a step-by-step procedure that offers maximal control\nover the build and installation.  Most users should use the\nquick install, but this information may be of use to packagers.\nFor more details, see the [Cabal User's Guide].  These instructions\nassume that the pandoc source directory is your working directory.\nYou will need cabal version 2.0 or higher.\n\n1.  Install dependencies:  in addition to the [Haskell platform],\n    you will need a number of additional libraries.  You can install\n    them all with\n\n        cabal update\n        cabal install --only-dependencies\n\n2.  Configure:\n\n        cabal configure --prefix=DIR --bindir=DIR --libdir=DIR \\\n          --datadir=DIR --libsubdir=DIR --datasubdir=DIR --docdir=DIR \\\n          --htmldir=DIR --program-prefix=PREFIX --program-suffix=SUFFIX \\\n          --mandir=DIR --flags=FLAGSPEC --enable-tests\n\n    All of the options have sensible defaults that can be overridden\n    as needed.\n\n    `FLAGSPEC` is a list of Cabal configuration flags, optionally\n    preceded by a `-` (to force the flag to `false`), and separated\n    by spaces.  `pandoc`'s flags include:\n\n    - `embed_data_files`: embed all data files into the binary (default no).\n      This is helpful if you want to create a relocatable binary.\n\n    `pandoc-cli`'s flags include:\n\n    - `lua`:  compile in support for Lua filters and custom\n      writers.\n\n    - `server`:  compile in support for running in HTTP server\n      mode when the executable is renamed (or symlinked as)\n      `pandoc-server`.\n\n3.  Build:\n\n        cabal build\n        cabal test\n\n4.  Build API documentation:\n\n        cabal haddock --html-location=URL --hyperlink-source\n\n\n### Creating a relocatable binary\n\nIt is possible to compile pandoc such that the data files\npandoc uses are embedded in the binary.  The resulting binary\ncan be run from any directory and is completely self-contained.\nWith cabal, add `-fembed_data_files` to the `cabal configure`\nor `cabal install` commands.\n\nWith stack, use `--flag pandoc:embed_data_files`.\n\n\n\n### Running tests\n\nPandoc comes with an automated test suite.\nTo run with cabal, `cabal test`; to run with stack, `stack\ntest`.\n\nTo run particular tests (pattern-matching on their names), use\nthe `-p` option:\n\n    cabal test --test-options='-p markdown'\n\nOr with stack:\n\n    stack test --test-arguments='-p markdown'\n\nIt is often helpful to add `-j4` (run tests in parallel)\nand `--hide-successes` (don't clutter output with successes)\nto the test arguments as well.\n\nIf you add a new feature to pandoc, please add tests as well, following\nthe pattern of the existing tests. The test suite code is in\n`test/test-pandoc.hs`. If you are adding a new reader or writer, it is\nprobably easiest to add some data files to the `test` directory, and\nmodify `test/Tests/Old.hs`. Otherwise, it is better to modify the module\nunder the `test/Tests` hierarchy corresponding to the pandoc module you\nare changing.\n\n### Running benchmarks\n\nTo build and run the benchmarks:\n\n    cabal configure --enable-benchmarks && cabal build\n    cabal bench\n\nor with stack:\n\n    stack bench\n\nTo use a smaller sample size so the benchmarks run faster:\n\n    cabal bench --benchmark-options='-s 20'\n\nTo run just the markdown benchmarks:\n\n    cabal bench --benchmark-options='markdown'\n\n\n[Arch]: https://archlinux.org/packages/?q=pandoc\n[Cabal User's Guide]: https://cabal.readthedocs.io/\n[Debian]: https://packages.debian.org/search?keywords=pandoc\n[Fedora]: https://packages.fedoraproject.org/pkgs/pandoc/pandoc/\n[FreeBSD]: https://www.freshports.org/textproc/hs-pandoc/\n[GHC]:  https://www.haskell.org/ghc/\n[GitLab CI/CD]: https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/\n[Haskell platform]: https://hackage.haskell.org/platform/\n[MacPorts]: https://trac.macports.org/browser/trunk/dports/textproc/pandoc/Portfile\n[MacTeX]: https://tug.org/mactex/\n[OpenBSD ports]: https://cvsweb.openbsd.org/ports/textproc/pandoc/\n[BasicTeX]: https://www.tug.org/mactex/morepackages.html\n[LaTeX]: https://www.latex-project.org\n[MiKTeX]: https://miktex.org/\n[librsvg]: https://wiki.gnome.org/Projects/LibRsvg\n[Python]: https://www.python.org\n[NetBSD]: https://pkgsrc.se/converters/pandoc\n[NixOS]: https://search.nixos.org/packages?query=pandoc\n[Slackware]: https://www.slackbuilds.org/result/?search=pandoc&sv=\n[Ubuntu]: https://packages.ubuntu.com/search?keywords=pandoc\n[download page]: https://github.com/jgm/pandoc/releases/latest\n[gentoo]: https://packages.gentoo.org/package/app-text/pandoc\n[haskell repository]: https://wiki.archlinux.org/index.php/Haskell_Package_Guidelines#.5Bhaskell.5D\n[openSUSE]: https://software.opensuse.org/package/pandoc\n[source tarball]: https://hackage.haskell.org/package/pandoc\n[stack]: https://docs.haskellstack.org/en/stable/install_and_upgrade.html\n[cabal-install]: https://hackage.haskell.org/package/cabal-install\n[Void]: https://voidlinux.org/packages/?arch=x86_64&q=pandoc\n[uninstaller]: https://raw.githubusercontent.com/jgm/pandoc/main/macos/uninstall-pandoc.pl\n"
        },
        {
          "name": "MANUAL.txt",
          "type": "blob",
          "size": 278.61,
          "content": "---\ntitle: Pandoc User's Guide\nauthor: John MacFarlane\ndate: December 22, 2024\n---\n\n# Synopsis\n\n`pandoc` [*options*] [*input-file*]...\n\n# Description\n\nPandoc is a [Haskell] library for converting from one markup format to\nanother, and a command-line tool that uses this library.\n\nPandoc can convert between numerous markup and word processing formats,\nincluding, but not limited to, various flavors of [Markdown], [HTML],\n[LaTeX] and [Word docx]. For the full lists of input and output formats,\nsee the `--from` and `--to` [options below][General options].\nPandoc can also produce [PDF] output: see [creating a PDF], below.\n\nPandoc's enhanced version of Markdown includes syntax for [tables],\n[definition lists], [metadata blocks], [footnotes], [citations], [math],\nand much more.  See below under [Pandoc's Markdown].\n\nPandoc has a modular design: it consists of a set of readers, which parse\ntext in a given format and produce a native representation of the document\n(an _abstract syntax tree_ or AST), and a set of writers, which convert\nthis native representation into a target format. Thus, adding an input\nor output format requires only adding a reader or writer. Users can also\nrun custom [pandoc filters] to modify the intermediate AST.\n\nBecause pandoc's intermediate representation of a document is less\nexpressive than many of the formats it converts between, one should\nnot expect perfect conversions between every format and every other.\nPandoc attempts to preserve the structural elements of a document, but\nnot formatting details such as margin size.  And some document elements,\nsuch as complex tables, may not fit into pandoc's simple document\nmodel.  While conversions from pandoc's Markdown to all formats aspire\nto be perfect, conversions from formats more expressive than pandoc's\nMarkdown can be expected to be lossy.\n\n## Using pandoc\n\nIf no *input-files* are specified, input is read from *stdin*.\nOutput goes to *stdout* by default. For output to a file,\nuse the `-o` option:\n\n    pandoc -o output.html input.txt\n\nBy default, pandoc produces a document fragment. To produce a standalone\ndocument (e.g. a valid HTML file including `<head>` and `<body>`),\nuse the `-s` or `--standalone` flag:\n\n    pandoc -s -o output.html input.txt\n\nFor more information on how standalone documents are produced, see\n[Templates] below.\n\nIf multiple input files are given, pandoc will concatenate them all (with\nblank lines between them) before parsing. (Use `--file-scope` to parse files\nindividually.)\n\n## Specifying formats\n\nThe format of the input and output can be specified explicitly using\ncommand-line options.  The input format can be specified using the\n`-f/--from` option, the output format using the `-t/--to` option.\nThus, to convert `hello.txt` from Markdown to LaTeX, you could type:\n\n    pandoc -f markdown -t latex hello.txt\n\nTo convert `hello.html` from HTML to Markdown:\n\n    pandoc -f html -t markdown hello.html\n\nSupported input and output formats are listed below under [Options]\n(see `-f` for input formats and `-t` for output formats).  You\ncan also use `pandoc --list-input-formats` and\n`pandoc --list-output-formats` to print lists of supported\nformats.\n\nIf the input or output format is not specified explicitly, pandoc\nwill attempt to guess it from the extensions of the filenames.\nThus, for example,\n\n    pandoc -o hello.tex hello.txt\n\nwill convert `hello.txt` from Markdown to LaTeX.  If no output file\nis specified (so that output goes to *stdout*), or if the output file's\nextension is unknown, the output format will default to HTML.\nIf no input file is specified (so that input comes from *stdin*), or\nif the input files' extensions are unknown, the input format will\nbe assumed to be Markdown.\n\n## Character encoding\n\nPandoc uses the UTF-8 character encoding for both input and output.\nIf your local character encoding is not UTF-8, you\nshould pipe input and output through [`iconv`]:\n\n    iconv -t utf-8 input.txt | pandoc | iconv -f utf-8\n\nNote that in some output formats (such as HTML, LaTeX, ConTeXt,\nRTF, OPML, DocBook, and Texinfo), information about\nthe character encoding is included in the document header, which\nwill only be included if you use the `-s/--standalone` option.\n\n[`iconv`]: https://www.gnu.org/software/libiconv/\n\n## Creating a PDF\n\nTo produce a PDF, specify an output file with a `.pdf` extension:\n\n    pandoc test.txt -o test.pdf\n\nBy default, pandoc will use LaTeX to create the PDF, which requires\nthat a LaTeX engine be installed (see `--pdf-engine` below).\nAlternatively, pandoc can use ConTeXt, roff ms, or HTML as an\nintermediate format.  To do this, specify an output file with a\n`.pdf` extension, as before, but add the `--pdf-engine` option\nor `-t context`, `-t html`, or `-t ms` to the command line.\nThe tool used to generate the PDF from the intermediate format\nmay be specified using `--pdf-engine`.\n\nYou can control the PDF style using variables, depending on\nthe intermediate format used: see [variables for LaTeX],\n[variables for ConTeXt], [variables for `wkhtmltopdf`],\n[variables for ms].  When HTML is used as an intermediate\nformat, the output can be styled using `--css`.\n\nTo debug the PDF creation, it can be useful to look at the intermediate\nrepresentation: instead of `-o test.pdf`, use for example `-s -o test.tex`\nto output the generated LaTeX. You can then test it with `pdflatex test.tex`.\n\nWhen using LaTeX, the following packages need to be available\n(they are included with all recent versions of [TeX Live]):\n[`amsfonts`], [`amsmath`], [`lm`], [`unicode-math`],\n[`iftex`], [`listings`] (if the\n`--listings` option is used), [`fancyvrb`], [`longtable`],\n[`booktabs`], [`multirow`] (if the document contains a table with\ncells that cross multiple rows), [`graphicx`] (if the document\ncontains images), [`bookmark`], [`xcolor`],\n[`soul`], [`geometry`] (with the `geometry` variable set),\n[`setspace`] (with `linestretch`), and\n[`babel`] (with `lang`).  If `CJKmainfont` is set, [`xeCJK`]\nis needed if `xelatex` is used, else [`luatexja`] is needed if\n`lualatex` is used. [`framed`] is required if code is highlighted in a\nscheme that use a colored background. The use of `xelatex` or\n`lualatex` as the PDF engine requires [`fontspec`]. `lualatex`\nuses [`selnolig`] and [`lua-ul`]. `xelatex` uses [`bidi`] (with\nthe `dir` variable set).\nIf the `mathspec` variable is set, `xelatex` will use [`mathspec`]\ninstead of [`unicode-math`].  The [`upquote`] and [`microtype`]\npackages are used if available, and [`csquotes`] will be used\nfor [typography] if the `csquotes` variable or metadata field is\nset to a true value.  The [`natbib`], [`biblatex`], [`bibtex`],\nand [`biber`] packages can optionally be used for [citation\nrendering].  The following packages will be used to improve\noutput quality if present, but pandoc does not require them to\nbe present: [`upquote`] (for straight quotes in verbatim\nenvironments), [`microtype`] (for better spacing adjustments),\n[`parskip`] (for better inter-paragraph spaces), [`xurl`] (for\nbetter line breaks in URLs), and [`footnotehyper`] or\n[`footnote`] (to allow footnotes in tables).\n\n[TeX Live]: https://www.tug.org/texlive/\n[`amsfonts`]: https://ctan.org/pkg/amsfonts\n[`amsmath`]: https://ctan.org/pkg/amsmath\n[`babel`]: https://ctan.org/pkg/babel\n[`biber`]: https://ctan.org/pkg/biber\n[`biblatex`]: https://ctan.org/pkg/biblatex\n[`bibtex`]: https://ctan.org/pkg/bibtex\n[`bidi`]: https://ctan.org/pkg/bidi\n[`bookmark`]: https://ctan.org/pkg/bookmark\n[`booktabs`]: https://ctan.org/pkg/booktabs\n[`csquotes`]: https://ctan.org/pkg/csquotes\n[`fancyvrb`]: https://ctan.org/pkg/fancyvrb\n[`fontspec`]: https://ctan.org/pkg/fontspec\n[`footnote`]: https://ctan.org/pkg/footnote\n[`footnotehyper`]: https://ctan.org/pkg/footnotehyper\n[`framed`]: https://ctan.org/pkg/framed\n[`geometry`]: https://ctan.org/pkg/geometry\n[`graphicx`]: https://ctan.org/pkg/graphicx\n[`hyperref`]: https://ctan.org/pkg/hyperref\n[`iftex`]: https://ctan.org/pkg/iftex\n[`listings`]: https://ctan.org/pkg/listings\n[`lm`]: https://ctan.org/pkg/lm\n[`lua-ul`]: https://ctan.org/pkg/lua-ul\n[`luatexja`]: https://ctan.org/pkg/luatexja\n[`longtable`]: https://ctan.org/pkg/longtable\n[`mathspec`]: https://ctan.org/pkg/mathspec\n[`microtype`]: https://ctan.org/pkg/microtype\n[`natbib`]: https://ctan.org/pkg/natbib\n[`parskip`]: https://ctan.org/pkg/parskip\n[`polyglossia`]: https://ctan.org/pkg/polyglossia\n[`prince`]: https://www.princexml.com/\n[`setspace`]: https://ctan.org/pkg/setspace\n[`soul`]: https://ctan.org/pkg/soul\n[`unicode-math`]: https://ctan.org/pkg/unicode-math\n[`upquote`]: https://ctan.org/pkg/upquote\n[`weasyprint`]: https://weasyprint.org\n[`wkhtmltopdf`]: https://wkhtmltopdf.org\n[`xcolor`]: https://ctan.org/pkg/xcolor\n[`xeCJK`]: https://ctan.org/pkg/xecjk\n[`xurl`]: https://ctan.org/pkg/xurl\n[`selnolig`]: https://ctan.org/pkg/selnolig\n\n\n\n## Reading from the Web\n\nInstead of an input file, an absolute URI may be given. In this case\npandoc will fetch the content using HTTP:\n\n    pandoc -f html -t markdown https://www.fsf.org\n\nIt is possible to supply a custom User-Agent string or other\nheader when requesting a document from a URL:\n\n    pandoc -f html -t markdown --request-header User-Agent:\"Mozilla/5.0\" \\\n      https://www.fsf.org\n\n# Options\n\n## General options {.options}\n\n`-f` *FORMAT*, `-r` *FORMAT*, `--from=`*FORMAT*, `--read=`*FORMAT*\n\n:   Specify input format.  *FORMAT* can be:\n\n    ::: {#input-formats}\n    - `bibtex` ([BibTeX] bibliography)\n    - `biblatex` ([BibLaTeX] bibliography)\n    - `bits` ([BITS] XML, alias for `jats`)\n    - `commonmark` ([CommonMark] Markdown)\n    - `commonmark_x` ([CommonMark] Markdown with extensions)\n    - `creole` ([Creole 1.0])\n    - `csljson` ([CSL JSON] bibliography)\n    - `csv` ([CSV] table)\n    - `tsv` ([TSV] table)\n    - `djot` ([Djot markup])\n    - `docbook` ([DocBook])\n    - `docx` ([Word docx])\n    - `dokuwiki` ([DokuWiki markup])\n    - `endnotexml` ([EndNote XML bibliography])\n    - `epub` ([EPUB])\n    - `fb2` ([FictionBook2] e-book)\n    - `gfm` ([GitHub-Flavored Markdown]),\n      or the deprecated and less accurate `markdown_github`;\n      use [`markdown_github`](#markdown-variants) only\n      if you need extensions not supported in [`gfm`](#markdown-variants).\n    - `haddock` ([Haddock markup])\n    - `html` ([HTML])\n    - `ipynb` ([Jupyter notebook])\n    - `jats` ([JATS] XML)\n    - `jira` ([Jira]/Confluence wiki markup)\n    - `json` (JSON version of native AST)\n    - `latex` ([LaTeX])\n    - `markdown` ([Pandoc's Markdown])\n    - `markdown_mmd` ([MultiMarkdown])\n    - `markdown_phpextra` ([PHP Markdown Extra])\n    - `markdown_strict` (original unextended [Markdown])\n    - `mediawiki` ([MediaWiki markup])\n    - `man` ([roff man])\n    - `mdoc` ([mdoc] manual page markup)\n    - `muse` ([Muse])\n    - `native` (native Haskell)\n    - `odt` ([OpenOffice text document][ODT])\n    - `opml` ([OPML])\n    - `org` ([Emacs Org mode])\n    - `pod` (Perl's [Plain Old Documentation])\n    - `ris` ([RIS] bibliography)\n    - `rtf` ([Rich Text Format])\n    - `rst` ([reStructuredText])\n    - `t2t` ([txt2tags])\n    - `textile` ([Textile])\n    - `tikiwiki` ([TikiWiki markup])\n    - `twiki` ([TWiki markup])\n    - `typst` ([typst])\n    - `vimwiki` ([Vimwiki])\n    - the path of a custom Lua reader, see [Custom readers and writers] below\n    :::\n\n    Extensions can be individually enabled or disabled by\n    appending `+EXTENSION` or `-EXTENSION` to the format name.\n    See [Extensions] below, for a list of extensions and\n    their names.  See `--list-input-formats` and `--list-extensions`,\n    below.\n\n`-t` *FORMAT*, `-w` *FORMAT*, `--to=`*FORMAT*, `--write=`*FORMAT*\n\n:   Specify output format.  *FORMAT* can be:\n\n    ::: {#output-formats}\n    - `ansi` (text with [ANSI escape codes], for terminal viewing)\n    - `asciidoc` (modern [AsciiDoc] as interpreted by [AsciiDoctor])\n    - `asciidoc_legacy` ([AsciiDoc] as interpreted by [`asciidoc-py`]).\n    - `asciidoctor` (deprecated synonym for `asciidoc`)\n    - `beamer` ([LaTeX beamer][`beamer`] slide show)\n    - `bibtex` ([BibTeX] bibliography)\n    - `biblatex` ([BibLaTeX] bibliography)\n    - `chunkedhtml` (zip archive of multiple linked HTML files)\n    - `commonmark` ([CommonMark] Markdown)\n    - `commonmark_x` ([CommonMark] Markdown with extensions)\n    - `context` ([ConTeXt])\n    - `csljson` ([CSL JSON] bibliography)\n    - `djot` ([Djot markup])\n    - `docbook` or `docbook4` ([DocBook] 4)\n    - `docbook5` (DocBook 5)\n    - `docx` ([Word docx])\n    - `dokuwiki` ([DokuWiki markup])\n    - `epub` or `epub3` ([EPUB] v3 book)\n    - `epub2` (EPUB v2)\n    - `fb2` ([FictionBook2] e-book)\n    - `gfm` ([GitHub-Flavored Markdown]),\n      or the deprecated and less accurate `markdown_github`;\n      use [`markdown_github`](#markdown-variants) only\n      if you need extensions not supported in [`gfm`](#markdown-variants).\n    - `haddock` ([Haddock markup])\n    - `html` or `html5` ([HTML], i.e. [HTML5]/XHTML [polyglot markup])\n    - `html4` ([XHTML] 1.0 Transitional)\n    - `icml` ([InDesign ICML])\n    - `ipynb` ([Jupyter notebook])\n    - `jats_archiving` ([JATS] XML, Archiving and Interchange Tag Set)\n    - `jats_articleauthoring` ([JATS] XML, Article Authoring Tag Set)\n    - `jats_publishing` ([JATS] XML, Journal Publishing Tag Set)\n    - `jats` (alias for `jats_archiving`)\n    - `jira` ([Jira]/Confluence wiki markup)\n    - `json` (JSON version of native AST)\n    - `latex` ([LaTeX])\n    - `man` ([roff man])\n    - `markdown` ([Pandoc's Markdown])\n    - `markdown_mmd` ([MultiMarkdown])\n    - `markdown_phpextra` ([PHP Markdown Extra])\n    - `markdown_strict` (original unextended [Markdown])\n    - `markua` ([Markua])\n    - `mediawiki` ([MediaWiki markup])\n    - `ms` ([roff ms])\n    - `muse` ([Muse])\n    - `native` (native Haskell)\n    - `odt` ([OpenOffice text document][ODT])\n    - `opml` ([OPML])\n    - `opendocument` ([OpenDocument])\n    - `org` ([Emacs Org mode])\n    - `pdf` ([PDF])\n    - `plain` (plain text)\n    - `pptx` ([PowerPoint] slide show)\n    - `rst` ([reStructuredText])\n    - `rtf` ([Rich Text Format])\n    - `texinfo` ([GNU Texinfo])\n    - `textile` ([Textile])\n    - `slideous` ([Slideous] HTML and JavaScript slide show)\n    - `slidy` ([Slidy] HTML and JavaScript slide show)\n    - `dzslides` ([DZSlides] HTML5 + JavaScript slide show)\n    - `revealjs` ([reveal.js] HTML5 + JavaScript slide show)\n    - `s5` ([S5] HTML and JavaScript slide show)\n    - `tei` ([TEI Simple])\n    - `typst` ([typst])\n    - `xwiki` ([XWiki markup])\n    - `zimwiki` ([ZimWiki markup])\n    - the path of a custom Lua writer, see [Custom readers and writers] below\n    :::\n\n    Note that `odt`, `docx`, `epub`, and `pdf` output will not be directed\n    to *stdout* unless forced with `-o -`.\n\n    Extensions can be individually enabled or\n    disabled by appending `+EXTENSION` or `-EXTENSION` to the format\n    name.  See [Extensions] below, for a list of extensions and their\n    names.  See `--list-output-formats` and `--list-extensions`, below.\n\n`-o` *FILE*, `--output=`*FILE*\n\n:   Write output to *FILE* instead of *stdout*.  If *FILE* is\n    `-`, output will go to *stdout*, even if a non-textual format\n    (`docx`, `odt`, `epub2`, `epub3`) is specified.  If the\n    output format is `chunkedhtml` and *FILE* has no extension,\n    then instead of producing a `.zip` file pandoc will create\n    a directory *FILE* and unpack the zip archive there\n    (unless *FILE* already exists, in which case an error\n    will be raised).\n\n`--data-dir=`*DIRECTORY*\n\n:   Specify the user data directory to search for pandoc data files.\n    If this option is not specified, the default user data directory\n    will be used.  On \\*nix and macOS systems this will be the `pandoc`\n    subdirectory of the XDG data directory (by default,\n    `$HOME/.local/share`, overridable by setting the `XDG_DATA_HOME`\n    environment variable).  If that directory does not exist and\n    `$HOME/.pandoc` exists, it will be used (for backwards compatibility).\n    On Windows the default user data directory is `%APPDATA%\\pandoc`.\n    You can find the default user data directory on your system by\n    looking at the output of `pandoc --version`.\n    Data files placed in this directory (for example, `reference.odt`,\n    `reference.docx`, `epub.css`, `templates`) will override\n    pandoc's normal defaults.  (Note that the user data directory\n    is not created by pandoc, so you will need to create it yourself\n    if you want to make use of it.)\n\n`-d` *FILE*, `--defaults=`*FILE*\n\n:   Specify a set of default option settings.  *FILE* is a YAML\n    file whose fields correspond to command-line option\n    settings.  All options for document conversion, including input\n    and output files, can be set using a defaults file.  The file will\n    be searched for first in the working directory, and then in\n    the `defaults` subdirectory of the user data directory\n    (see `--data-dir`).  The `.yaml` extension may be omitted.\n    See the section [Defaults files] for more information on the\n    file format.  Settings from the defaults file may be\n    overridden or extended by subsequent options on the command\n    line.\n\n`--bash-completion`\n\n:   Generate a bash completion script.  To enable bash completion\n    with pandoc, add this to your `.bashrc`:\n\n        eval \"$(pandoc --bash-completion)\"\n\n`--verbose`\n\n:   Give verbose debugging output.\n\n`--quiet`\n\n:   Suppress warning messages.\n\n`--fail-if-warnings[=true|false]`\n\n:   Exit with error status if there are any warnings.\n\n`--log=`*FILE*\n\n:   Write log messages in machine-readable JSON format to\n    *FILE*.  All messages above DEBUG level will be written,\n    regardless of verbosity settings (`--verbose`, `--quiet`).\n\n`--list-input-formats`\n\n:   List supported input formats, one per line.\n\n`--list-output-formats`\n\n:   List supported output formats, one per line.\n\n`--list-extensions`[`=`*FORMAT*]\n\n:   List supported extensions for *FORMAT*, one per line, preceded\n    by a `+` or `-` indicating whether it is enabled by default\n    in *FORMAT*. If *FORMAT* is not specified, defaults for\n    pandoc's Markdown are given.\n\n`--list-highlight-languages`\n\n:   List supported languages for syntax highlighting, one per\n    line.\n\n`--list-highlight-styles`\n\n:   List supported styles for syntax highlighting, one per line.\n    See `--highlight-style`.\n\n`-v`, `--version`\n\n:   Print version.\n\n`-h`, `--help`\n\n:   Show usage message.\n\n[ANSI escape codes]: https://en.wikipedia.org/wiki/ANSI_escape_code\n[Markdown]: https://daringfireball.net/projects/markdown/\n[CommonMark]: https://commonmark.org\n[PHP Markdown Extra]: https://michelf.ca/projects/php-markdown/extra/\n[GitHub-Flavored Markdown]: https://help.github.com/articles/github-flavored-markdown/\n[MultiMarkdown]: https://fletcherpenney.net/multimarkdown/\n[reStructuredText]: https://docutils.sourceforge.io/docs/ref/rst/introduction.html\n[S5]: https://meyerweb.com/eric/tools/s5/\n[Slidy]: https://www.w3.org/Talks/Tools/Slidy2/\n[Slideous]: https://goessner.net/articles/slideous/\n[HTML]: https://www.w3.org/html/\n[HTML5]: https://html.spec.whatwg.org/\n[polyglot markup]: https://www.w3.org/TR/html-polyglot/\n[XHTML]: https://www.w3.org/TR/xhtml1/\n[LaTeX]: https://www.latex-project.org/\n[`beamer`]: https://ctan.org/pkg/beamer\n[Beamer User's Guide]: http://mirrors.ctan.org/macros/latex/contrib/beamer/doc/beameruserguide.pdf\n[ConTeXt]: https://www.contextgarden.net/\n[Rich Text Format]: https://en.wikipedia.org/wiki/Rich_Text_Format\n[DocBook]: https://docbook.org\n[Djot markup]: https://djot.net\n[JATS]: https://jats.nlm.nih.gov\n[BITS]: https://jats.nlm.nih.gov/extensions/bits/\n[Jira]: https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all\n[txt2tags]: https://txt2tags.org\n[EPUB]: http://idpf.org/epub\n[OPML]: http://dev.opml.org/spec2.html\n[OpenDocument]: http://opendocument.xml.org\n[ODT]: https://en.wikipedia.org/wiki/OpenDocument\n[Plain Old Documentation]: https://perldoc.perl.org/perlpod\n[Textile]: https://textile-lang.com\n[MediaWiki markup]: https://www.mediawiki.org/wiki/Help:Formatting\n[DokuWiki markup]: https://www.dokuwiki.org/dokuwiki\n[ZimWiki markup]: https://zim-wiki.org/manual/Help/Wiki_Syntax.html\n[XWiki markup]: https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/\n[TWiki markup]: https://twiki.org/cgi-bin/view/TWiki/TextFormattingRules\n[TikiWiki markup]: https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax\n[Haddock markup]: https://www.haskell.org/haddock/doc/html/ch03s08.html\n[Creole 1.0]: http://www.wikicreole.org/wiki/Creole1.0\n[CSV]: https://tools.ietf.org/html/rfc4180\n[TSV]: https://www.iana.org/assignments/media-types/text/tab-separated-values\n[roff man]: https://man.cx/groff_man(7)\n[roff ms]: https://man.cx/groff_ms(7)\n[Haskell]: https://www.haskell.org\n[GNU Texinfo]: https://www.gnu.org/software/texinfo/\n[RIS]: https://en.wikipedia.org/wiki/RIS_(file_format)\n[Emacs Org mode]: https://orgmode.org\n[AsciiDoc]: https://asciidoc.org/\n[AsciiDoctor]: https://asciidoctor.org/\n[`asciidoc-py`]: https://github.com/asciidoc-py/asciidoc-py\n[DZSlides]: https://paulrouget.com/dzslides/\n[Word docx]: https://en.wikipedia.org/wiki/Office_Open_XML\n[PDF]: https://www.adobe.com/pdf/\n[reveal.js]: https://revealjs.com/\n[FictionBook2]: http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1\n[Jupyter notebook]: https://nbformat.readthedocs.io/en/latest/\n[InDesign ICML]: https://manualzz.com/doc/9627253/adobe-indesign-cs6-idml-cookbook\n[TEI Simple]: https://github.com/TEIC/TEI-Simple\n[Muse]: https://amusewiki.org/library/manual\n[PowerPoint]: https://en.wikipedia.org/wiki/Microsoft_PowerPoint\n[Vimwiki]: https://vimwiki.github.io\n[CSL JSON]: https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html\n[BibTeX]: https://ctan.org/pkg/bibtex\n[BibLaTeX]: https://ctan.org/pkg/biblatex\n[Markua]: https://leanpub.com/markua/read\n[EndNote XML bibliography]: https://support.clarivate.com/Endnote/s/article/EndNote-XML-Document-Type-Definition\n[typst]: https://typst.app\n[mdoc]: https://mandoc.bsd.lv/man/mdoc.7.html\n\n## Reader options {.options}\n\n`--shift-heading-level-by=`*NUMBER*\n\n:   Shift heading levels by a positive or negative integer.\n    For example, with `--shift-heading-level-by=-1`, level 2\n    headings become level 1 headings, and level 3 headings\n    become level 2 headings.  Headings cannot have a level\n    less than 1, so a heading that would be shifted below level 1\n    becomes a regular paragraph.  Exception: with a shift of -N,\n    a level-N heading at the beginning of the document\n    replaces the metadata title. `--shift-heading-level-by=-1`\n    is a good choice when converting HTML or Markdown documents that\n    use an initial level-1 heading for the document title and\n    level-2+ headings for sections. `--shift-heading-level-by=1`\n    may be a good choice for converting Markdown documents that\n    use level-1 headings for sections to HTML, since pandoc uses\n    a level-1 heading to render the document title.\n\n`--base-header-level=`*NUMBER*\n\n:   *Deprecated.  Use `--shift-heading-level-by`=X instead,\n    where X = NUMBER - 1.* Specify the base level for headings\n    (defaults to 1).\n\n`--indented-code-classes=`*CLASSES*\n\n:   Specify classes to use for indented code blocks---for example,\n    `perl,numberLines` or `haskell`. Multiple classes may be separated\n    by spaces or commas.\n\n`--default-image-extension=`*EXTENSION*\n\n:   Specify a default extension to use when image paths/URLs have no\n    extension.  This allows you to use the same source for formats that\n    require different kinds of images.  Currently this option only affects\n    the Markdown and LaTeX readers.\n\n`--file-scope[=true|false]`\n\n:   Parse each file individually before combining for multifile\n    documents. This will allow footnotes in different files with the\n    same identifiers to work as expected. If this option is set,\n    footnotes and links will not work across files. Reading binary\n    files (docx, odt, epub) implies `--file-scope`.\n\n    If two or more files are processed using `--file-scope`,\n    prefixes based on the filenames will be added to identifiers\n    in order to disambiguate them, and internal links will\n    be adjusted accordingly.  For example, a header with\n    identifier `foo` in `subdir/file1.txt` will have its\n    identifier changed to `subdir__file1.txt__foo`.\n\n`-F` *PROGRAM*, `--filter=`*PROGRAM*\n\n:   Specify an executable to be used as a filter transforming the\n    pandoc AST after the input is parsed and before the output is\n    written.  The executable should read JSON from stdin and write\n    JSON to stdout.  The JSON must be formatted like  pandoc's own\n    JSON input and output.  The name of the output format will be\n    passed to the filter as the first argument.  Hence,\n\n        pandoc --filter ./caps.py -t latex\n\n    is equivalent to\n\n        pandoc -t json | ./caps.py latex | pandoc -f json -t latex\n\n    The latter form may be useful for debugging filters.\n\n    Filters may be written in any language.  `Text.Pandoc.JSON`\n    exports `toJSONFilter` to facilitate writing filters in Haskell.\n    Those who would prefer to write filters in python can use the\n    module [`pandocfilters`], installable from PyPI. There are also\n    pandoc filter libraries in [PHP], [perl], and\n    [JavaScript/node.js].\n\n    In order of preference, pandoc will look for filters in\n\n     1. a specified full or relative path (executable or\n     non-executable),\n\n     2. `$DATADIR/filters` (executable or non-executable)\n     where `$DATADIR` is the user data directory (see\n     `--data-dir`, above),\n\n     3. `$PATH` (executable only).\n\n    Filters, Lua-filters, and citeproc processing are applied in\n    the order specified on the command line.\n\n`-L` *SCRIPT*, `--lua-filter=`*SCRIPT*\n\n:   Transform the document in a similar fashion as JSON filters (see\n    `--filter`), but use pandoc's built-in Lua filtering system.  The given\n    Lua script is expected to return a list of Lua filters which will be\n    applied in order.  Each Lua filter must contain element-transforming\n    functions indexed by the name of the AST element on which the filter\n    function should be applied.\n\n    The `pandoc` Lua module provides helper functions for element\n    creation.  It is always loaded into the script's Lua environment.\n\n    See the [Lua filters documentation] for further details.\n\n    In order of preference, pandoc will look for Lua filters in\n\n     1. a specified full or relative path,\n\n     2. `$DATADIR/filters` where `$DATADIR` is the user data\n     directory (see `--data-dir`, above).\n\n    Filters, Lua filters, and citeproc processing are applied in\n    the order specified on the command line.\n\n`-M` *KEY*[`=`*VAL*], `--metadata=`*KEY*[`:`*VAL*]\n\n:   Set the metadata field *KEY* to the value *VAL*.  A value specified\n    on the command line overrides a value specified in the document\n    using [YAML metadata blocks][Extension: `yaml_metadata_block`].\n    Values will be parsed as YAML boolean or string values. If no value is\n    specified, the value will be treated as Boolean true.  Like\n    `--variable`, `--metadata` causes template variables to be set.\n    But unlike `--variable`, `--metadata` affects the metadata of the\n    underlying document (which is accessible from filters and may be\n    printed in some output formats) and metadata values will be escaped\n    when inserted into the template.\n\n`--metadata-file=`*FILE*\n\n:   Read metadata from the supplied YAML (or JSON) file. This\n    option can be used with every input format, but string scalars\n    in the metadata file will always be parsed as Markdown. (If the\n    input format is Markdown or a Markdown variant, then the\n    same variant will be used to parse the metadata file;\n    if it is a non-Markdown format, pandoc's default Markdown\n    extensions will be used.) This option can be used\n    repeatedly to include multiple metadata files; values in\n    files specified later on the command line will be preferred\n    over those specified in earlier files. Metadata values\n    specified inside the document, or by using `-M`, overwrite\n    values specified with this option. The file will be searched\n    for first in the working directory, and then in the `metadata`\n    subdirectory of the user data directory (see `--data-dir`).\n\n`-p`, `--preserve-tabs[=true|false]`\n\n:   Preserve tabs instead of converting them to spaces. (By default, pandoc\n    converts tabs to spaces before parsing its input.)  Note that this will\n    only affect tabs in literal code spans and code blocks. Tabs in regular\n    text are always treated as spaces.\n\n`--tab-stop=`*NUMBER*\n\n:   Specify the number of spaces per tab (default is 4).\n\n`--track-changes=accept`|`reject`|`all`\n\n:   Specifies what to do with insertions, deletions, and comments\n    produced by the MS Word \"Track Changes\" feature.  `accept` (the\n    default) processes all the insertions and deletions.\n    `reject` ignores them.  Both `accept` and `reject` ignore comments.\n    `all` includes all insertions, deletions, and comments, wrapped\n    in spans with `insertion`, `deletion`, `comment-start`, and\n    `comment-end` classes, respectively. The author and time of\n    change is included. `all` is useful for scripting: only\n    accepting changes from a certain reviewer, say, or before a\n    certain date. If a paragraph is inserted or deleted,\n    `track-changes=all` produces a span with the class\n    `paragraph-insertion`/`paragraph-deletion` before the\n    affected paragraph break. This option only affects the docx\n    reader.\n\n`--extract-media=`*DIR*\n\n:   Extract images and other media contained in or linked from\n    the source document to the path *DIR*, creating it if\n    necessary, and adjust the images references in the document\n    so they point to the extracted files.  Media are downloaded,\n    read from the file system, or extracted from a binary\n    container (e.g. docx), as needed.  The original file paths\n    are used if they are relative paths not containing `..`.\n    Otherwise filenames are constructed from the SHA1 hash of\n    the contents.\n\n`--abbreviations=`*FILE*\n\n:   Specifies a custom abbreviations file, with abbreviations\n    one to a line.  If this option is not specified, pandoc will\n    read the data file `abbreviations` from the user data\n    directory or fall back on a system default.  To see the\n    system default, use\n    `pandoc --print-default-data-file=abbreviations`.  The only\n    use pandoc makes of this list is in the Markdown reader.\n    Strings found in this list will be followed by a nonbreaking\n    space, and the period will not produce sentence-ending space\n    in formats like LaTeX.  The strings may not contain spaces.\n\n`--trace[=true|false]`\n\n:   Print diagnostic output tracing parser progress to stderr.\n    This option is intended for use by developers in diagnosing\n    performance issues.\n\n[`pandocfilters`]: https://github.com/jgm/pandocfilters\n[PHP]: https://github.com/vinai/pandocfilters-php\n[perl]: https://metacpan.org/pod/Pandoc::Filter\n[JavaScript/node.js]: https://github.com/mvhenderson/pandoc-filter-node\n[Lua filters documentation]: https://pandoc.org/lua-filters.html\n\n## General writer options {.options}\n\n`-s`, `--standalone`\n\n:   Produce output with an appropriate header and footer (e.g. a\n    standalone HTML, LaTeX, TEI, or RTF file, not a fragment).  This option\n    is set automatically for `pdf`, `epub`, `epub3`, `fb2`, `docx`, and `odt`\n    output.  For `native` output, this option causes metadata to\n    be included; otherwise, metadata is suppressed.\n\n`--template=`*FILE*|*URL*\n\n:   Use the specified file as a custom template for the generated document.\n    Implies `--standalone`. See [Templates], below, for a\n    description of template syntax. If the template is not found,\n    pandoc will search for it in the `templates` subdirectory of\n    the user data directory (see `--data-dir`). If no extension\n    is specified and an extensionless template is not found,\n    pandoc will look for a template with an extension\n    corresponding to the writer, so that `--template=special`\n    looks for `special.html` for HTML output. If this option is\n    not used, a default template appropriate for the output\n    format will be used (see `-D/--print-default-template`).\n\n`-V` *KEY*[`=`*VAL*], `--variable=`*KEY*[`:`*VAL*]\n\n:   Set the template variable *KEY* to the string value *VAL* when rendering\n    the document in standalone mode. If no *VAL* is specified, the\n    key will be given the value `true`.  Structured values (lists, maps)\n    cannot be assigned using this option, but they can be assigned in\n    the `variables` section of a [defaults file][Defaults files].\n\n`--sandbox[=true|false]`\n\n:   Run pandoc in a sandbox, limiting IO operations in readers\n    and writers to reading the files specified on the command line.\n    Note that this option does not limit IO operations by\n    filters or in the production of PDF documents.  But it does\n    offer security against, for example, disclosure of files\n    through the use of `include` directives.  Anyone using\n    pandoc on untrusted user input should use this option.\n\n    Note: some readers and writers (e.g., `docx`) need access to data\n    files.  If these are stored on the file system, then pandoc\n    will not be able to find them when run in `--sandbox` mode\n    and will raise an error. For these applications, we\n    recommend using a pandoc binary compiled with the `embed_data_files`\n    option, which causes the data files to be baked into the binary\n    instead of being stored on the file system.\n\n`-D` *FORMAT*, `--print-default-template=`*FORMAT*\n\n:   Print the system default template for an output *FORMAT*. (See `-t`\n    for a list of possible *FORMAT*s.)  Templates in the user data\n    directory are ignored.  This option may be used with\n    `-o`/`--output` to redirect output to a file, but\n    `-o`/`--output` must come before `--print-default-template`\n    on the command line.\n\n    Note that some of the default templates use partials, for\n    example `styles.html`.  To print the partials, use\n    `--print-default-data-file`: for example,\n    `--print-default-data-file=templates/styles.html`.\n\n`--print-default-data-file=`*FILE*\n\n:   Print a system default data file.  Files in the user data directory\n    are ignored.  This option may be used with `-o`/`--output` to\n    redirect output to a file, but `-o`/`--output` must come before\n    `--print-default-data-file` on the command line.\n\n`--eol=crlf`|`lf`|`native`\n\n:   Manually specify line endings: `crlf` (Windows), `lf`\n    (macOS/Linux/UNIX), or `native` (line endings appropriate\n    to the OS on which pandoc is being run).  The default is\n    `native`.\n\n`--dpi`=*NUMBER*\n\n:   Specify the default dpi (dots per inch) value for conversion\n    from pixels to inch/centimeters and vice versa. (Technically,\n    the correct term would be ppi: pixels per inch.) The default\n    is 96dpi.   When images contain information about dpi\n    internally, the encoded value is used instead of the default\n    specified by this option.\n\n`--wrap=auto`|`none`|`preserve`\n\n:   Determine how text is wrapped in the output (the source\n    code, not the rendered version).  With `auto` (the default),\n    pandoc will attempt to wrap lines to the column width specified by\n    `--columns` (default 72).  With `none`, pandoc will not wrap\n    lines at all.  With `preserve`, pandoc will attempt to\n    preserve the wrapping from the source document (that is,\n    where there are nonsemantic newlines in the source, there\n    will be nonsemantic newlines in the output as well).\n    In `ipynb` output, this option affects wrapping of the\n    contents of Markdown cells.\n\n`--columns=`*NUMBER*\n\n:   Specify length of lines in characters.  This affects text wrapping\n    in the generated source code (see `--wrap`).  It also affects\n    calculation of column widths for plain text tables (see [Tables] below).\n\n`--toc[=true|false]`, `--table-of-contents[=true|false]`\n\n:   Include an automatically generated table of contents (or, in\n    the case of `latex`, `context`, `docx`, `odt`,\n    `opendocument`, `rst`, or `ms`, an instruction to create\n    one) in the output document. This option has no effect\n    unless `-s/--standalone` is used, and it has no effect\n    on `man`, `docbook4`, `docbook5`, or `jats` output.\n\n    Note that if you are producing a PDF via `ms`, the table\n    of contents will appear at the beginning of the\n    document, before the title.  If you would prefer it to\n    be at the end of the document, use the option\n    `--pdf-engine-opt=--no-toc-relocation`.\n\n`--toc-depth=`*NUMBER*\n\n:   Specify the number of section levels to include in the table\n    of contents.  The default is 3 (which means that level-1, 2, and 3\n    headings will be listed in the contents).\n\n`--lof[=true|false]`, `--list-of-figures[=true|false]`\n\n:   Include an automatically generated list of figures (or, in\n    some formats, an instruction to create one) in the output\n    document. This option has no effect unless `-s/--standalone`\n    is used, and it only has an effect on `latex`, `context`, and\n    `docx` output.\n\n`--lot[=true|false]`, `--list-of-tables[=true|false]`\n\n:   Include an automatically generated list of tables (or, in\n    some formats, an instruction to create one) in the output\n    document. This option has no effect unless `-s/--standalone`\n    is used, and it only has an effect on `latex`, `context`, and\n    `docx` output.\n\n`--strip-comments[=true|false]`\n\n:   Strip out HTML comments in the Markdown or Textile source,\n    rather than passing them on to Markdown, Textile or HTML\n    output as raw HTML.  This does not apply to HTML comments\n    inside raw HTML blocks when the `markdown_in_html_blocks`\n    extension is not set.\n\n`--no-highlight`\n\n:   Disables syntax highlighting for code blocks and inlines, even when\n    a language attribute is given.\n\n`--highlight-style=`*STYLE*|*FILE*\n\n:   Specifies the coloring style to be used in highlighted source code.\n    Options are `pygments` (the default), `kate`, `monochrome`,\n    `breezeDark`, `espresso`, `zenburn`, `haddock`, and `tango`.\n    For more information on syntax highlighting in pandoc, see\n    [Syntax highlighting], below.  See also\n    `--list-highlight-styles`.\n\n    Instead of a *STYLE* name, a JSON file with extension\n    `.theme` may be supplied.  This will be parsed as a KDE\n    syntax highlighting theme and (if valid) used as the\n    highlighting style.\n\n    To generate the JSON version of an existing style,\n    use `--print-highlight-style`.\n\n`--print-highlight-style=`*STYLE*|*FILE*\n\n:   Prints a JSON version of a highlighting style, which can\n    be modified, saved with a `.theme` extension, and used\n    with `--highlight-style`.  This option may be used with\n    `-o`/`--output` to redirect output to a file, but\n    `-o`/`--output` must come before `--print-highlight-style`\n    on the command line.\n\n`--syntax-definition=`*FILE*\n\n:   Instructs pandoc to load a KDE XML syntax definition file,\n    which will be used for syntax highlighting of appropriately\n    marked code blocks.  This can be used to add support for\n    new languages or to use altered syntax definitions for\n    existing languages.  This option may be repeated to add\n    multiple syntax definitions.\n\n`-H` *FILE*, `--include-in-header=`*FILE*|*URL*\n\n:   Include contents of *FILE*, verbatim, at the end of the header.\n    This can be used, for example, to include special\n    CSS or JavaScript in HTML documents.  This option can be used\n    repeatedly to include multiple files in the header.  They will be\n    included in the order specified.  Implies `--standalone`.\n\n`-B` *FILE*, `--include-before-body=`*FILE*|*URL*\n\n:   Include contents of *FILE*, verbatim, at the beginning of the\n    document body (e.g. after the `<body>` tag in HTML, or the\n    `\\begin{document}` command in LaTeX). This can be used to include\n    navigation bars or banners in HTML documents. This option can be\n    used repeatedly to include multiple files. They will be included in\n    the order specified.  Implies `--standalone`. Note that if the\n    output format is `odt`, this file must be in OpenDocument XML format\n    suitable for insertion into the body of the document, and if\n    the output is `docx`, this file must be in appropriate\n    OpenXML format.\n\n`-A` *FILE*, `--include-after-body=`*FILE*|*URL*\n\n:   Include contents of *FILE*, verbatim, at the end of the document\n    body (before the `</body>` tag in HTML, or the\n    `\\end{document}` command in LaTeX). This option can be used\n    repeatedly to include multiple files. They will be included in the\n    order specified.  Implies `--standalone`. Note that if the\n    output format is `odt`, this file must be in OpenDocument XML format\n    suitable for insertion into the body of the document, and if\n    the output is `docx`, this file must be in appropriate\n    OpenXML format.\n\n`--resource-path=`*SEARCHPATH*\n\n:   List of paths to search for images and other resources.\n    The paths should be separated by `:` on Linux, UNIX, and\n    macOS systems, and by `;` on Windows.  If `--resource-path`\n    is not specified, the default resource path is the working\n    directory. Note that, if `--resource-path` is specified,\n    the working directory must be explicitly listed or it\n    will not be searched.  For example:\n    `--resource-path=.:test` will search the working directory\n    and the `test` subdirectory, in that order.\n    This option can be used repeatedly. Search path components\n    that come later on the command line will be searched before\n    those that come earlier, so\n    `--resource-path foo:bar --resource-path baz:bim` is\n    equivalent to `--resource-path baz:bim:foo:bar`.\n    Note that this option only has an effect when pandoc\n    itself needs to find an image (e.g., in producing a\n    PDF or docx, or when `--embed-resources` is used.)\n    It will not cause image paths to be rewritten in other\n    cases (e.g., when pandoc is generating LaTeX or HTML).\n\n`--request-header=`*NAME*`:`*VAL*\n\n:   Set the request header *NAME* to the value *VAL* when making\n    HTTP requests (for example, when a URL is given on the\n    command line, or when resources used in a document must be\n    downloaded). If you're behind a proxy, you also need to set\n    the environment variable `http_proxy` to `http://...`.\n\n`--no-check-certificate[=true|false]`\n\n:   Disable the certificate verification to allow access to\n    unsecure HTTP resources (for example when the certificate\n    is no longer valid or self signed).\n\n## Options affecting specific writers {.options}\n\n`--self-contained[=true|false]`\n\n:   *Deprecated synonym for `--embed-resources --standalone`.*\n\n`--embed-resources[=true|false]`\n\n:   Produce a standalone HTML file with no external dependencies, using\n    `data:` URIs to incorporate the contents of linked scripts, stylesheets,\n    images, and videos. The resulting file should be \"self-contained,\" in the\n    sense that it needs no external files and no net access to be displayed\n    properly by a browser. This option works only with HTML output formats,\n    including `html4`, `html5`, `html+lhs`, `html5+lhs`, `s5`, `slidy`,\n    `slideous`, `dzslides`, and `revealjs`. Scripts, images, and stylesheets at\n    absolute URLs will be downloaded; those at relative URLs will be sought\n    relative to the working directory (if the first source\n    file is local) or relative to the base URL (if the first source\n    file is remote).  Elements with the attribute\n    `data-external=\"1\"` will be left alone; the documents they\n    link to will not be incorporated in the document.\n    Limitation: resources that are loaded dynamically through\n    JavaScript cannot be incorporated; as a result, fonts may\n    be missing when `--mathjax` is used, and some\n    advanced features (e.g.  zoom or speaker notes) may not work\n    in an offline \"self-contained\" `reveal.js` slide show.\n\n    For SVG images, `img` tags with `data:` URIs are used,\n    unless the image has the class `inline-svg`, in which case\n    an inline SVG element is inserted. This approach is\n    recommended when there are many occurrences of the same\n    SVG in a document, as `<use>` elements will be used to\n    reduce duplication.\n\n`--link-images[=true|false]`\n\n:   Include links to images instead of embedding the images in ODT.\n    (This option currently only affects ODT output.)\n\n`--html-q-tags[=true|false]`\n\n:   Use `<q>` tags for quotes in HTML.  (This option only has an\n    effect if the `smart` extension is enabled for the input\n    format used.)\n\n`--ascii[=true|false]`\n\n:   Use only ASCII characters in output. Currently supported for XML\n    and HTML formats (which use entities instead of UTF-8 when this\n    option is selected), CommonMark, gfm, and Markdown (which use\n    entities), roff man and ms (which use hexadecimal escapes), and to a\n    limited degree LaTeX (which uses standard commands for accented\n    characters when possible).\n\n`--reference-links[=true|false]`\n\n:   Use reference-style links, rather than inline links, in writing Markdown\n    or reStructuredText.  By default inline links are used.  The\n    placement of link references is affected by the\n    `--reference-location` option.\n\n`--reference-location=block`|`section`|`document`\n\n:   Specify whether footnotes (and references, if `reference-links` is\n    set) are placed at the end of the current (top-level) block, the\n    current section, or the document. The default is\n    `document`. Currently this option only affects the\n    `markdown`, `muse`, `html`, `epub`, `slidy`, `s5`, `slideous`,\n    `dzslides`, and `revealjs` writers.  In slide formats,\n    specifying `--reference-location=section` will cause notes\n    to be rendered at the bottom of a slide.\n\n`--figure-caption-position=above`|`below`\n\n:   Specify whether figure captions go above or below figures\n    (default is `below`).  This option only affects HTML,\n    LaTeX, Docx, ODT, and Typst output.\n\n`--table-caption-position=above`|`below`\n\n:   Specify whether table captions go above or below tables\n    (default is `above`).  This option only affects HTML,\n    LaTeX, Docx, ODT, and Typst output.\n\n`--markdown-headings=setext`|`atx`\n\n:   Specify whether to use ATX-style (`#`-prefixed) or\n    Setext-style (underlined) headings for level 1 and 2\n    headings in Markdown output.  (The default is `atx`.)\n    ATX-style headings are always used for levels 3+.\n    This option also affects Markdown cells in `ipynb` output.\n\n`--list-tables[=true|false]`\n\n:   Render tables as list tables in RST output.\n\n`--top-level-division=default`|`section`|`chapter`|`part`\n\n:   Treat top-level headings as the given division type in\n    LaTeX, ConTeXt, DocBook, and  TEI output. The hierarchy\n    order is part, chapter, then section; all headings are\n    shifted such that the top-level heading becomes the\n    specified type. The default behavior is to determine the\n    best division type via heuristics: unless other conditions\n    apply, `section` is chosen. When the `documentclass`\n    variable is set to `report`, `book`, or `memoir` (unless the\n    `article` option is specified), `chapter` is implied as the\n    setting for this option. If `beamer` is the output format,\n    specifying either `chapter` or `part` will cause top-level\n    headings to become `\\part{..}`, while second-level headings\n    remain as their default type.\n\n`-N`, `--number-sections=[true|false]`\n\n:   Number section headings in LaTeX, ConTeXt, HTML, Docx, ms, or EPUB\n    output.  By default, sections are not numbered.  Sections with class\n    `unnumbered` will never be numbered, even if `--number-sections`\n    is specified.\n\n`--number-offset=`*NUMBER*[`,`*NUMBER*`,`*...*]\n\n:   Offsets for section heading numbers. The first number is added\n    to the section number for level-1 headings, the second for\n    level-2 headings, and so on. So, for example, if you\n    want the first level-1 heading in your document to be\n    numbered \"6\" instead of \"1\", specify `--number-offset=5`.\n    If your document starts with a level-2 heading which you want\n    to be numbered \"1.5\", specify `--number-offset=1,4`.\n    `--number-offset` only directly affects the number of the\n    first section heading in a document; subsequent numbers\n    increment in the normal way. Implies `--number-sections`.\n    Currently this feature only affects HTML and Docx output.\n\n`--listings[=true|false]`\n\n:   Use the [`listings`] package for LaTeX code blocks. The package\n    does not support multi-byte encoding for source code. To handle UTF-8\n    you would need to use a custom template. This issue is fully\n    documented here: [Encoding issue with the listings package].\n\n`-i`, `--incremental[=true|false]`\n\n:   Make list items in slide shows display incrementally (one by one).\n    The default is for lists to be displayed all at once.\n\n`--slide-level=`*NUMBER*\n\n:   Specifies that headings with the specified level create\n    slides (for `beamer`, `revealjs`, `pptx`, `s5`, `slidy`,\n    `slideous`, `dzslides`). Headings above this level in the\n    hierarchy are used to divide the slide show into sections;\n    headings below this level create subheads within a slide.\n    Valid values are 0-6. If a slide level of 0 is specified,\n    slides will not be split automatically on headings, and\n    horizontal rules must be used to indicate slide boundaries.\n    If a slide level is not specified explicitly, the slide level\n    will be set automatically based on the contents of the\n    document; see [Structuring the slide show].\n\n`--section-divs[=true|false]`\n\n:   Wrap sections in `<section>` tags (or `<div>` tags for `html4`),\n    and attach identifiers to the enclosing `<section>` (or `<div>`)\n    rather than the heading itself (see\n    [Heading identifiers], below). This option only affects\n    HTML output (and does not affect HTML slide formats).\n\n`--email-obfuscation=none`|`javascript`|`references`\n\n:   Specify a method for obfuscating `mailto:` links in HTML documents.\n    `none` leaves `mailto:` links as they are.  `javascript` obfuscates\n    them using JavaScript. `references` obfuscates them by printing their\n    letters as decimal or hexadecimal character references.  The default\n    is `none`.\n\n`--id-prefix=`*STRING*\n\n:   Specify a prefix to be added to all identifiers and internal links\n    in HTML and DocBook output, and to footnote numbers in Markdown\n    and Haddock output. This is useful for preventing duplicate\n    identifiers when generating fragments to be included in other pages.\n\n`-T` *STRING*, `--title-prefix=`*STRING*\n\n:   Specify *STRING* as a prefix at the beginning of the title\n    that appears in the HTML header (but not in the title as it\n    appears at the beginning of the HTML body).  Implies `--standalone`.\n\n`-c` *URL*, `--css=`*URL*\n\n:   Link to a CSS style sheet. This option can be used repeatedly to\n    include multiple files. They will be included in the order specified.\n    This option only affects HTML (including HTML slide shows)\n    and EPUB output.  It should be used together with\n    `-s/--standalone`, because the link to the stylesheet goes\n    in the document header.\n\n    A stylesheet is required for generating EPUB.  If none is\n    provided using this option (or the `css` or `stylesheet`\n    metadata fields), pandoc will look for a file `epub.css` in the\n    user data directory (see `--data-dir`).  If it is not\n    found there, sensible defaults will be used.\n\n[`--reference-doc=`*FILE*|*URL*]{#option--reference-doc}\n\n:   Use the specified file as a style reference in producing a\n    docx or ODT file.\n\n    Docx\n\n    :   For best results, the reference docx should be a modified\n        version of a docx file produced using pandoc.  The contents\n        of the reference docx are ignored, but its stylesheets and\n        document properties (including margins, page size, header,\n        and footer) are used in the new docx. If no reference docx\n        is specified on the command line, pandoc will look for a\n        file `reference.docx` in the user data directory (see\n        `--data-dir`). If this is not found either, sensible\n        defaults will be used.\n\n        To produce a custom `reference.docx`, first get a copy of\n        the default `reference.docx`: `pandoc\n        -o custom-reference.docx --print-default-data-file reference.docx`.\n        Then open `custom-reference.docx` in Word, modify the\n        styles as you wish, and save the file.  For best\n        results, do not make changes to this file other than\n        modifying the styles used by pandoc:\n\n        Paragraph styles:\n\n        - Normal\n        - Body Text\n        - First Paragraph\n        - Compact\n        - Title\n        - Subtitle\n        - Author\n        - Date\n        - Abstract\n        - AbstractTitle\n        - Bibliography\n        - Heading 1\n        - Heading 2\n        - Heading 3\n        - Heading 4\n        - Heading 5\n        - Heading 6\n        - Heading 7\n        - Heading 8\n        - Heading 9\n        - Block Text [for block quotes]\n        - Footnote Block Text [for block quotes in footnotes]\n        - Source Code\n        - Footnote Text\n        - Definition Term\n        - Definition\n        - Caption\n        - Table Caption\n        - Image Caption\n        - Figure\n        - Captioned Figure\n        - TOC Heading\n\n        Character styles:\n\n        - Default Paragraph Font\n        - Body Text Char\n        - Verbatim Char\n        - Footnote Reference\n        - Hyperlink\n        - Section Number\n\n        Table style:\n\n        - Table\n\n    ODT\n\n    :   For best results, the reference ODT should be a modified\n        version of an ODT produced using pandoc.  The contents of\n        the reference ODT are ignored, but its stylesheets are used\n        in the new ODT. If no reference ODT is specified on the\n        command line, pandoc will look for a file `reference.odt` in\n        the user data directory (see `--data-dir`). If this is not\n        found either, sensible defaults will be used.\n\n        To produce a custom `reference.odt`, first get a copy of\n        the default `reference.odt`: `pandoc\n        -o custom-reference.odt --print-default-data-file reference.odt`.\n        Then open `custom-reference.odt` in LibreOffice, modify\n        the styles as you wish, and save the file.\n\n    PowerPoint\n\n    :   Templates included with Microsoft PowerPoint 2013 (either with\n        `.pptx` or `.potx` extension) are known to work, as are most\n        templates derived from these.\n\n        The specific requirement is that the template should contain layouts\n        with the following names (as seen within PowerPoint):\n\n        - Title Slide\n        - Title and Content\n        - Section Header\n        - Two Content\n        - Comparison\n        - Content with Caption\n        - Blank\n\n        For each name, the first layout found with that name will be used.\n        If no layout is found with one of the names, pandoc will output a\n        warning and use the layout with that name from the default reference\n        doc instead. (How these layouts are used is described in [PowerPoint\n        layout choice](#powerpoint-layout-choice).)\n\n        All templates included with a recent version of MS PowerPoint\n        will fit these criteria. (You can click on `Layout` under the\n        `Home` menu to check.)\n\n        You can also modify the default `reference.pptx`: first run\n        `pandoc -o custom-reference.pptx --print-default-data-file\n        reference.pptx`, and then modify `custom-reference.pptx`\n        in MS PowerPoint (pandoc will use the layouts with the names\n        listed above).\n\n`--split-level=`*NUMBER*\n\n:   Specify the heading level at which to split an EPUB or\n    chunked HTML document into separate files. The default is to split\n    into chapters at level-1 headings. In the case of EPUB, this\n    option only affects the internal composition of the EPUB, not the way\n    chapters and sections are displayed to users. Some\n    readers may be slow if the chapter files are too large, so for large\n    documents with few level-1 headings, one might want to use a chapter\n    level of 2 or 3. For chunked HTML, this option determines\n    how much content goes in each \"chunk.\"\n\n`--chunk-template=`*PATHTEMPLATE*\n\n:   Specify a template for the filenames in a `chunkedhtml` document.\n    In the template, `%n` will be replaced by the chunk number (padded\n    with leading 0s to 3 digits), `%s` with the section number of the chunk,\n    `%h` with the heading text (with formatting removed), `%i` with\n    the section identifier. For example, `%section-%s-%i.html` might\n    be resolved to `section-1.1-introduction.html`. The characters\n    `/` and `\\` are not allowed in chunk templates and will be\n    ignored. The default is `%s-%i.html`.\n\n`--epub-chapter-level=`*NUMBER*\n\n:   *Deprecated synonym for `--split-level`.*\n\n`--epub-cover-image=`*FILE*\n\n:   Use the specified image as the EPUB cover.  It is recommended\n    that the image be less than 1000px in width and height. Note that\n    in a Markdown source document you can also specify `cover-image`\n    in a YAML metadata block (see [EPUB Metadata], below).\n\n`--epub-title-page=true`|`false`\n\n:   Determines whether a the title page is included in the EPUB\n    (default is `true`).\n\n`--epub-metadata=`*FILE*\n\n:   Look in the specified XML file for metadata for the EPUB.\n    The file should contain a series of [Dublin Core elements].\n    For example:\n\n         <dc:rights>Creative Commons</dc:rights>\n         <dc:language>es-AR</dc:language>\n\n    By default, pandoc will include the following metadata elements:\n    `<dc:title>` (from the document title), `<dc:creator>` (from the\n    document authors), `<dc:date>` (from the document date, which should\n    be in [ISO 8601 format]), `<dc:language>` (from the `lang`\n    variable, or, if is not set, the locale), and `<dc:identifier\n    id=\"BookId\">` (a randomly generated UUID). Any of these may be\n    overridden by elements in the metadata file.\n\n    Note: if the source document is Markdown, a YAML metadata block\n    in the document can be used instead.  See below under\n    [EPUB Metadata].\n\n`--epub-embed-font=`*FILE*\n\n:   Embed the specified font in the EPUB. This option can be repeated\n    to embed multiple fonts.  Wildcards can also be used: for example,\n    `DejaVuSans-*.ttf`.  However, if you use wildcards on the command\n    line, be sure to escape them or put the whole filename in single quotes,\n    to prevent them from being interpreted by the shell. To use the\n    embedded fonts, you will need to add declarations like the following\n    to your CSS (see `--css`):\n\n        @font-face {\n           font-family: DejaVuSans;\n           font-style: normal;\n           font-weight: normal;\n           src:url(\"../fonts/DejaVuSans-Regular.ttf\");\n        }\n        @font-face {\n           font-family: DejaVuSans;\n           font-style: normal;\n           font-weight: bold;\n           src:url(\"../fonts/DejaVuSans-Bold.ttf\");\n        }\n        @font-face {\n           font-family: DejaVuSans;\n           font-style: italic;\n           font-weight: normal;\n           src:url(\"../fonts/DejaVuSans-Oblique.ttf\");\n        }\n        @font-face {\n           font-family: DejaVuSans;\n           font-style: italic;\n           font-weight: bold;\n           src:url(\"../fonts/DejaVuSans-BoldOblique.ttf\");\n        }\n        body { font-family: \"DejaVuSans\"; }\n\n`--epub-subdirectory=`*DIRNAME*\n\n:   Specify the subdirectory in the OCF container that is to hold\n    the EPUB-specific contents.  The default is `EPUB`.  To put\n    the EPUB contents in the top level, use an empty string.\n\n`--ipynb-output=all|none|best`\n\n:   Determines how ipynb output cells are treated. `all` means\n    that all of the data formats included in the original are\n    preserved.  `none` means that the contents of data cells\n    are omitted.  `best` causes pandoc to try to pick the\n    richest data block in each output cell that is compatible\n    with the output format.  The default is `best`.\n\n`--pdf-engine=`*PROGRAM*\n\n:   Use the specified engine when producing PDF output.\n    Valid values are `pdflatex`, `lualatex`, `xelatex`, `latexmk`,\n    `tectonic`, `wkhtmltopdf`, `weasyprint`, `pagedjs-cli`,\n    `prince`, `context`, `pdfroff`, and `typst`. If the engine is not in\n    your PATH, the full path of the engine may be specified here.\n    If this option is not specified, pandoc uses the following\n    defaults depending on the output format specified using\n    `-t/--to`:\n\n    - `-t latex` or none: `pdflatex` (other options: `xelatex`, `lualatex`,\n        `tectonic`, `latexmk`)\n    - `-t context`: `context`\n    - `-t html`:  `weasyprint` (other options: `prince`, `wkhtmltopdf`,\n        `pagedjs-cli`;\n        see [print-css.rocks](https://print-css.rocks) for a good\n        introduction to PDF generation from HTML/CSS)\n    - `-t ms`:  `pdfroff`\n    - `-t typst`: `typst`\n\n`--pdf-engine-opt=`*STRING*\n\n:   Use the given string as a command-line argument to the `pdf-engine`.\n    For example, to use a persistent directory `foo` for `latexmk`'s\n    auxiliary files, use `--pdf-engine-opt=-outdir=foo`.\n    Note that no check for duplicate options is done.\n\n[Dublin Core elements]: https://www.dublincore.org/specifications/dublin-core/dces/\n[ISO 8601 format]: https://www.w3.org/TR/NOTE-datetime\n[Encoding issue with the listings package]:\n  https://en.wikibooks.org/wiki/LaTeX/Source_Code_Listings#Encoding_issue\n\n## Citation rendering {.options}\n\n`-C`, `--citeproc`\n\n:   Process the citations in the file, replacing them with\n    rendered citations and adding a bibliography.\n    Citation processing will not take place unless bibliographic\n    data is supplied, either through an external file specified\n    using the `--bibliography` option or the `bibliography`\n    field in metadata, or via a `references` section in metadata\n    containing a list of citations in CSL YAML format with\n    Markdown formatting.  The style is controlled by a [CSL]\n    stylesheet specified using the `--csl` option or the `csl`\n    field in metadata. (If no stylesheet is specified,\n    the `chicago-author-date` style will be used by default.)\n    The citation processing transformation may be applied before\n    or after filters or Lua filters (see `--filter`,\n    `--lua-filter`): these transformations are applied in the\n    order they appear on the command line.  For more\n    information, see the section on [Citations].\n\n    Note: if your target format is `markdown`, `org`, or `typst`,\n    you will need to disable the `citations` extension (e.g., `-t\n    markdown-citations`) to see the rendered citations and\n    bibliography. Otherwise the format's own citation syntax will\n    be used.\n\n`--bibliography=`*FILE*\n\n:   Set the `bibliography` field in the document's metadata to *FILE*,\n    overriding any value set in the metadata.  If you supply\n    this argument multiple times, each *FILE* will be added to\n    bibliography.  If *FILE* is a URL, it will be fetched\n    via HTTP. If *FILE* is not found relative to the\n    working directory, it will be sought in the resource path\n    (see `--resource-path`).\n\n`--csl=`*FILE*\n\n:   Set the `csl` field in the document's metadata to *FILE*,\n    overriding any value set in the metadata.  (This is equivalent to\n    `--metadata csl=FILE`.)  If *FILE* is a URL, it will be\n    fetched via HTTP.  If *FILE* is not found relative to the\n    working directory, it will be sought in the resource path\n    (see `--resource-path`) and finally in the `csl`\n    subdirectory of the pandoc user data directory.\n\n`--citation-abbreviations=`*FILE*\n\n:   Set the `citation-abbreviations` field in the document's metadata to\n    *FILE*, overriding any value set in the metadata.  (This is equivalent to\n    `--metadata citation-abbreviations=FILE`.)\n    If *FILE* is a URL, it will be fetched via HTTP.  If *FILE* is not\n    found relative to the working directory, it will be sought\n    in the resource path (see `--resource-path`) and finally in\n    the `csl` subdirectory of the pandoc user data directory.\n\n`--natbib`\n\n:   Use [`natbib`] for citations in LaTeX output.  This option\n    is not for use with the `--citeproc` option or with PDF\n    output.  It is intended for use in producing a LaTeX file\n    that can be processed with [`bibtex`].\n\n`--biblatex`\n\n:   Use [`biblatex`] for citations in LaTeX output.  This option\n    is not for use with the `--citeproc` option or with PDF\n    output. It is intended for use in producing a LaTeX file\n    that can be processed with [`bibtex`] or [`biber`].\n\n## Math rendering in HTML {.options}\n\nThe default is to render TeX math as far as possible using\nUnicode characters.  Formulas are put inside a `span` with\n`class=\"math\"`, so that they may be styled differently from the\nsurrounding text if needed. However, this gives acceptable\nresults only for basic math, usually you will want to use\n`--mathjax` or another of the following options.\n\n`--mathjax`[`=`*URL*]\n\n:   Use [MathJax] to display embedded TeX math in HTML output.\n    TeX math will be put between `\\(...\\)` (for inline math)\n    or `\\[...\\]` (for display math) and wrapped in `<span>` tags\n    with class `math`. Then the MathJax JavaScript will render it.\n    The *URL* should point to the `MathJax.js` load script.\n    If a *URL* is not provided, a link to the Cloudflare CDN will\n    be inserted.\n\n`--mathml`\n\n:   Convert TeX math to [MathML] (in `epub3`, `docbook4`,\n    `docbook5`, `jats`, `html4` and `html5`).  This is the\n    default in `odt` output. MathML is supported natively by\n    the main web browsers and select e-book readers.\n\n`--webtex`[`=`*URL*]\n\n:   Convert TeX formulas to `<img>` tags that link to an external script\n    that converts formulas to images. The formula will be URL-encoded\n    and concatenated with the URL provided. For SVG images you can for\n    example use `--webtex https://latex.codecogs.com/svg.latex?`.\n    If no URL is specified, the CodeCogs URL generating PNGs\n    will be used (`https://latex.codecogs.com/png.latex?`).\n    Note:  the `--webtex` option will affect Markdown output\n    as well as HTML, which is useful if you're targeting a\n    version of Markdown without native math support.\n\n`--katex`[`=`*URL*]\n\n:   Use [KaTeX] to display embedded TeX math in HTML output.\n    The *URL* is the base URL for the KaTeX library. That directory\n    should contain a `katex.min.js` and a `katex.min.css` file.\n    If a *URL* is not provided, a link to the KaTeX CDN will be inserted.\n\n`--gladtex`\n\n:   Enclose TeX math in `<eq>` tags in HTML output.  The resulting HTML\n    can then be processed by [GladTeX] to produce SVG images of the typeset\n    formulas and an HTML file with these images embedded.\n\n        pandoc -s --gladtex input.md -o myfile.htex\n        gladtex -d image_dir myfile.htex\n        # produces myfile.html and images in image_dir\n\n[MathML]: https://www.w3.org/Math/\n[MathJax]: https://www.mathjax.org\n[KaTeX]: https://github.com/Khan/KaTeX\n[GladTeX]: https://humenda.github.io/GladTeX/\n\n## Options for wrapper scripts {.options}\n\n`--dump-args[=true|false]`\n\n:   Print information about command-line arguments to *stdout*, then exit.\n    This option is intended primarily for use in wrapper scripts.\n    The first line of output contains the name of the output file specified\n    with the `-o` option, or `-` (for *stdout*) if no output file was\n    specified.  The remaining lines contain the command-line arguments,\n    one per line, in the order they appear.  These do not include regular\n    pandoc options and their arguments, but do include any options appearing\n    after a `--` separator at the end of the line.\n\n`--ignore-args[=true|false]`\n\n:   Ignore command-line arguments (for use in wrapper scripts).\n    Regular pandoc options are not ignored.  Thus, for example,\n\n        pandoc --ignore-args -o foo.html -s foo.txt -- -e latin1\n\n    is equivalent to\n\n        pandoc -o foo.html -s\n\n# Exit codes\n\nIf pandoc completes successfully, it will return exit code 0.\nNonzero exit codes have the following meanings:\n\n Code Error\n----- ------------------------------------\n    1 PandocIOError\n    3 PandocFailOnWarningError\n    4 PandocAppError\n    5 PandocTemplateError\n    6 PandocOptionError\n   21 PandocUnknownReaderError\n   22 PandocUnknownWriterError\n   23 PandocUnsupportedExtensionError\n   24 PandocCiteprocError\n   25 PandocBibliographyError\n   31 PandocEpubSubdirectoryError\n   43 PandocPDFError\n   44 PandocXMLError\n   47 PandocPDFProgramNotFoundError\n   61 PandocHttpError\n   62 PandocShouldNeverHappenError\n   63 PandocSomeError\n   64 PandocParseError\n   66 PandocMakePDFError\n   67 PandocSyntaxMapError\n   83 PandocFilterError\n   84 PandocLuaError\n   89 PandocNoScriptingEngine\n   91 PandocMacroLoop\n   92 PandocUTF8DecodingError\n   93 PandocIpynbDecodingError\n   94 PandocUnsupportedCharsetError\n   97 PandocCouldNotFindDataFileError\n   98 PandocCouldNotFindMetadataFileError\n   99 PandocResourceNotFound\n----- ------------------------------------\n\n# Defaults files\n\nThe `--defaults` option may be used to specify a package\nof options, in the form of a YAML file.\n\nFields that are omitted will just have their regular\ndefault values.  So a defaults file can be as simple as\none line:\n\n``` yaml\nverbosity: INFO\n```\n\nIn fields that expect a file path (or list of file paths), the\nfollowing syntax may be used to interpolate environment variables:\n\n``` yaml\ncsl:  ${HOME}/mycsldir/special.csl\n```\n\n`${USERDATA}` may also be used; this will always resolve to the\nuser data directory that is current when the defaults file is\nparsed, regardless of the setting of the environment\nvariable `USERDATA`.\n\n`${.}` will resolve to the directory containing the defaults\nfile itself.  This allows you to refer to resources contained\nin that directory:\n\n``` yaml\nepub-cover-image: ${.}/cover.jpg\nepub-metadata: ${.}/meta.xml\nresource-path:\n- .             # the working directory from which pandoc is run\n- ${.}/images   # the images subdirectory of the directory\n                # containing this defaults file\n```\n\nThis environment variable interpolation syntax *only* works in\nfields that expect file paths.\n\nDefaults files can be placed in the `defaults` subdirectory of\nthe user data directory and used from any directory.  For\nexample, one could create a file specifying defaults for writing\nletters, save it as `letter.yaml` in the `defaults` subdirectory\nof the user data directory, and then invoke these defaults\nfrom any directory using `pandoc --defaults letter`\nor `pandoc -dletter`.\n\nWhen multiple defaults are used, their contents will be combined.\n\nNote that, where command-line arguments may be repeated\n(`--metadata-file`, `--css`, `--include-in-header`,\n`--include-before-body`, `--include-after-body`, `--variable`,\n`--metadata`, `--syntax-definition`), the values specified on\nthe command line will combine with values specified in the\ndefaults file, rather than replacing them.\n\nThe following tables show the mapping between the command line and\ndefaults file entries.\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| foo.md                           | input-file: foo.md                |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| foo.md bar.md                    | input-files:                      |\n|                                  |   - foo.md                        |\n|                                  |   - bar.md                        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\nThe value of `input-files` may be left empty to indicate input from\nstdin, and it can be an empty sequence `[]` for no input.\n\n## General options\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --from markdown+emoji            | from: markdown+emoji              |\n| ```                              | ```                               |\n|                                  | ``` yaml                          |\n|                                  | reader: markdown+emoji            |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --to markdown+hard_line_breaks   | to: markdown+hard_line_breaks     |\n| ```                              | ```                               |\n|                                  | ``` yaml                          |\n|                                  | writer: markdown+hard_line_breaks |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --output foo.pdf                 | output-file: foo.pdf              |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --output -                       | output-file:                      |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --data-dir dir                   | data-dir: dir                     |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --defaults file                  | defaults:                         |\n| ```                              | - file                            |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --verbose                        | verbosity: INFO                   |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --quiet                          | verbosity: ERROR                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --fail-if-warnings               | fail-if-warnings: true            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --sandbox                        | sandbox: true                     |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --log=FILE                       | log-file: FILE                    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\nOptions specified in a defaults file itself always have priority over\nthose in another file included with a `defaults:` entry.\n\n`verbosity` can have the values `ERROR`, `WARNING`, or `INFO`.\n\n## Reader options\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --shift-heading-level-by -1      | shift-heading-level-by: -1        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --indented-code-classes python   | indented-code-classes:            |\n|                                  |   - python                        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --default-image-extension \".jpg\" | default-image-extension: '.jpg'   |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --file-scope                     | file-scope: true                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --citeproc \\                     | filters:                          |\n|  --lua-filter count-words.lua \\  |   - citeproc                      |\n|  --filter special.lua            |   - count-words.lua               |\n|                                  |   - type: json                    |\n|                                  |     path: special.lua             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --metadata key=value \\           | metadata:                         |\n|  --metadata key2                 |   key: value                      |\n|                                  |   key2: true                      |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --metadata-file meta.yaml        | metadata-files:                   |\n|                                  |   - meta.yaml                     |\n| ```                              | ```                               |\n|                                  | ``` yaml                          |\n|                                  | metadata-file: meta.yaml          |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --preserve-tabs                  | preserve-tabs: true               |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --tab-stop 8                     | tab-stop: 8                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --track-changes accept           | track-changes: accept             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --extract-media dir              | extract-media: dir                |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --abbreviations abbrevs.txt      | abbreviations: abbrevs.txt        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --trace                          | trace: true                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\nMetadata values specified in a defaults file are parsed as literal\nstring text, not Markdown.\n\nFilters will be assumed to be Lua filters if they have the `.lua`\nextension, and JSON filters otherwise.  But the filter type can also be\nspecified explicitly, as shown.  Filters are run in the order specified.\nTo include the built-in citeproc filter, use either `citeproc` or\n`{type: citeproc}`.\n\n## General writer options\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --standalone                     | standalone: true                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --template letter                | template: letter                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --variable key=val \\             | variables:                        |\n|   --variable key2                |   key: val                        |\n|                                  |   key2: true                      |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --eol nl                         | eol: nl                           |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --dpi 300                        | dpi: 300                          |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --wrap 60                        | wrap: 60                          |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --columns 72                     | columns: 72                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --table-of-contents              | table-of-contents: true           |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --toc                            | toc: true                         |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --toc-depth 3                    | toc-depth: 3                      |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --strip-comments                 | strip-comments: true              |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --no-highlight                   | highlight-style: null             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --highlight-style kate           | highlight-style: kate             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --syntax-definition mylang.xml   | syntax-definitions:               |\n|                                  |   - mylang.xml                    |\n| ```                              | ```                               |\n|                                  | ``` yaml                          |\n|                                  | syntax-definition: mylang.xml     |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --include-in-header inc.tex      | include-in-header:                |\n|                                  |   - inc.tex                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --include-before-body inc.tex    | include-before-body:              |\n|                                  |   - inc.tex                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --include-after-body inc.tex     | include-after-body:               |\n|                                  |   - inc.tex                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --resource-path .:foo            | resource-path: ['.','foo']        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --request-header foo:bar         | request-headers:                  |\n|                                  |   - [\"User-Agent\", \"Mozilla/5.0\"] |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --no-check-certificate           | no-check-certificate: true        |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\n\n## Options affecting specific writers\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --self-contained                 | self-contained: true              |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --link-images                    | link-images: true                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --html-q-tags                    | html-q-tags: true                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --ascii                          | ascii: true                       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --reference-links                | reference-links: true             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --reference-location block       | reference-location: block         |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --figure-caption-position=above  | figure-caption-position: above    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --table-caption-position=below   | table-caption-position: below     |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --markdown-headings atx          | markdown-headings: atx            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --list-tables                    | list-tables: true                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --top-level-division chapter     | top-level-division: chapter       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --number-sections                | number-sections: true             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --number-offset=1,4              | number-offset: \\[1,4\\]            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --listings                       | listings: true                    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --list-of-figures                | list-of-figures: true             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --lof                            | lof: true                         |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --list-of-tables                 | list-of-tables: true              |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --lot                            | lot: true                         |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --incremental                    | incremental: true                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --slide-level 2                  | slide-level: 2                    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --section-divs                   | section-divs: true                |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --email-obfuscation references   | email-obfuscation: references     |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --id-prefix ch1                  | identifier-prefix: ch1            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --title-prefix MySite            | title-prefix: MySite              |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --css styles/screen.css  \\       | css:                              |\n|   --css styles/special.css       |   - styles/screen.css             |\n|                                  |   - styles/special.css            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --reference-doc my.docx          | reference-doc: my.docx            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --epub-cover-image cover.jpg     | epub-cover-image: cover.jpg       |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --epub-title-page=false          | epub-title-page: false            |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --epub-metadata meta.xml         | epub-metadata: meta.xml           |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --epub-embed-font special.otf \\  | epub-fonts:                       |\n|   --epub-embed-font headline.otf |   - special.otf                   |\n|                                  |   - headline.otf                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --split-level 2                  | split-level: 2                    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --chunk-template=\"%i.html\"       | chunk-template: \"%i.html\"         |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --epub-subdirectory=\"\"           | epub-subdirectory: ''             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --ipynb-output best              | ipynb-output: best                |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --pdf-engine xelatex             | pdf-engine: xelatex               |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --pdf-engine-opt=--shell-escape  | pdf-engine-opts:                  |\n|                                  |   - '-shell-escape'               |\n| ```                              | ```                               |\n|                                  | ``` yaml                          |\n|                                  | pdf-engine-opt: '-shell-escape'   |\n|                                  | ```                               |\n+----------------------------------+-----------------------------------+\n\n## Citation rendering\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --citeproc                       | citeproc: true                    |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --bibliography logic.bib         | bibliography: logic.bib           |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --csl ieee.csl                   | csl: ieee.csl                     |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --citation-abbreviations ab.json | citation-abbreviations: ab.json   |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --natbib                         | cite-method: natbib               |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --biblatex                       | cite-method: biblatex             |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\n`cite-method` can be `citeproc`, `natbib`, or `biblatex`. This only\naffects LaTeX output.  If you want to use citeproc to format citations,\nyou should also set 'citeproc: true'.\n\nIf you need control over when the citeproc processing is done relative\nto other filters, you should instead use `citeproc` in the list\nof `filters` (see [Reader options](#reader-options-1)).\n\n## Math rendering in HTML\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --mathjax                        | html-math-method:                 |\n|                                  |   method: mathjax                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --mathml                         | html-math-method:                 |\n|                                  |   method: mathml                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --webtex                         | html-math-method:                 |\n|                                  |   method: webtex                  |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --katex                          | html-math-method:                 |\n|                                  |   method: katex                   |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --gladtex                        | html-math-method:                 |\n|                                  |   method: gladtex                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\nIn addition to the values listed above, `method` can have the\nvalue `plain`.\n\nIf the command line option accepts a URL argument, an `url:` field can\nbe added to `html-math-method:`.\n\n## Options for wrapper scripts\n\n+----------------------------------+-----------------------------------+\n| command line                     | defaults file                     |\n+:=================================+:==================================+\n| ```                              | ``` yaml                          |\n| --dump-args                      | dump-args: true                   |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n| ```                              | ``` yaml                          |\n| --ignore-args                    | ignore-args: true                 |\n| ```                              | ```                               |\n+----------------------------------+-----------------------------------+\n\n# Templates\n\nWhen the `-s/--standalone` option is used, pandoc uses a template to\nadd header and footer material that is needed for a self-standing\ndocument.  To see the default template that is used, just type\n\n    pandoc -D *FORMAT*\n\nwhere *FORMAT* is the name of the output format. A custom template\ncan be specified using the `--template` option.  You can also override\nthe system default templates for a given output format *FORMAT*\nby putting a file `templates/default.*FORMAT*` in the user data\ndirectory (see `--data-dir`, above). *Exceptions:*\n\n- For `odt` output, customize the `default.opendocument` template.\n- For `docx` output, customize the `default.openxml` template.\n- For `pdf` output, customize the `default.latex` template\n  (or the `default.context` template, if you use `-t context`,\n  or the `default.ms` template, if you use `-t ms`, or the\n  `default.html` template, if you use `-t html`).\n- `pptx` has no template.\n\nNote that `docx`, `odt`, and `pptx` output can also be customized\nusing `--reference-doc`.  Use a reference doc to adjust the styles\nin your document; use a template to handle variable interpolation and\ncustomize the presentation of metadata, the position of the table\nof contents, boilerplate text, etc.\n\nTemplates contain *variables*, which allow for the inclusion of\narbitrary information at any point in the file. They may be set at the\ncommand line using the `-V/--variable` option. If a variable is not set,\npandoc will look for the key in the document's metadata, which can be set\nusing either [YAML metadata blocks][Extension: `yaml_metadata_block`]\nor with the `-M/--metadata` option.  In addition, some variables\nare given default values by pandoc.  See [Variables] below for\na list of variables used in pandoc's default templates.\n\nIf you use custom templates, you may need to revise them as pandoc\nchanges.  We recommend tracking the changes in the default templates,\nand modifying your custom templates accordingly. An easy way to do this\nis to fork the [pandoc-templates] repository and merge in\nchanges after each pandoc release.\n\n  [pandoc-templates]: https://github.com/jgm/pandoc-templates\n\n## Template syntax\n\n### Comments\n\nAnything between the sequence `$--` and the end of the\nline will be treated as a comment and omitted from the output.\n\n### Delimiters\n\nTo mark variables and control structures in the template,\neither `$`...`$` or `${`...`}` may be used as delimiters.\nThe styles may also be mixed in the same template, but the\nopening and closing delimiter must match in each case.  The\nopening delimiter may be followed by one or more spaces\nor tabs, which will be ignored. The closing delimiter may\nbe preceded by one or more spaces or tabs, which will be\nignored.\n\nTo include a literal `$` in the document, use `$$`.\n\n### Interpolated variables\n\nA slot for an interpolated variable is a variable name surrounded\nby matched delimiters.  Variable names must begin with a letter\nand can contain letters, numbers, `_`, `-`, and `.`.  The\nkeywords `it`, `if`, `else`, `endif`, `for`, `sep`, and `endfor` may\nnot be used as variable names. Examples:\n\n```\n$foo$\n$foo.bar.baz$\n$foo_bar.baz-bim$\n$ foo $\n${foo}\n${foo.bar.baz}\n${foo_bar.baz-bim}\n${ foo }\n```\n\nVariable names with periods are used to get at structured\nvariable values.  So, for example, `employee.salary` will return the\nvalue of the `salary` field of the object that is the value of\nthe `employee` field.\n\n- If the value of the variable is a simple value, it will be\n  rendered verbatim.  (Note that no escaping is done;\n  the assumption is that the calling program will escape\n  the strings appropriately for the output format.)\n- If the value is a list, the values will be concatenated.\n- If the value is a map, the string `true` will be rendered.\n- Every other value will be rendered as the empty string.\n\n### Conditionals\n\nA conditional begins with `if(variable)` (enclosed in\nmatched delimiters) and ends with `endif` (enclosed in matched\ndelimiters).  It may optionally contain an `else` (enclosed in\nmatched delimiters).  The `if` section is used if\n`variable` has a true value, otherwise the `else`\nsection is used (if present).  The following values count\nas true:\n\n- any map\n- any array containing at least one true value\n- any nonempty string\n- boolean True\n\nNote that in YAML metadata (and metadata specified on the\ncommand line using `-M/--metadata`), unquoted `true` and `false` will be\ninterpreted as Boolean values. But a variable specified on the\ncommand line using `-V/--variable` will always be given a string\nvalue. Hence a conditional `if(foo)` will be triggered if you\nuse `-V foo=false`, but not if you use `-M foo=false`.\n\nExamples:\n\n```\n$if(foo)$bar$endif$\n\n$if(foo)$\n  $foo$\n$endif$\n\n$if(foo)$\npart one\n$else$\npart two\n$endif$\n\n${if(foo)}bar${endif}\n\n${if(foo)}\n  ${foo}\n${endif}\n\n${if(foo)}\n${ foo.bar }\n${else}\nno foo!\n${endif}\n```\n\nThe keyword `elseif` may be used to simplify complex nested\nconditionals:\n\n```\n$if(foo)$\nXXX\n$elseif(bar)$\nYYY\n$else$\nZZZ\n$endif$\n```\n\n### For loops\n\nA for loop begins with `for(variable)` (enclosed in\nmatched delimiters) and ends with `endfor` (enclosed in matched\ndelimiters).\n\n- If `variable` is an array, the material inside the loop will\n  be evaluated repeatedly, with `variable` being set to each\n  value of the array in turn, and concatenated.\n- If `variable` is a map, the material inside will be set to\n  the map.\n- If the value of the associated variable is not an array or\n  a map, a single iteration will be performed on its value.\n\nExamples:\n\n```\n$for(foo)$$foo$$sep$, $endfor$\n\n$for(foo)$\n  - $foo.last$, $foo.first$\n$endfor$\n\n${ for(foo.bar) }\n  - ${ foo.bar.last }, ${ foo.bar.first }\n${ endfor }\n\n$for(mymap)$\n$it.name$: $it.office$\n$endfor$\n```\n\nYou may optionally specify a separator between consecutive\nvalues using `sep` (enclosed in matched delimiters).  The\nmaterial between `sep` and the `endfor` is the separator.\n\n```\n${ for(foo) }${ foo }${ sep }, ${ endfor }\n```\n\nInstead of using `variable` inside the loop, the special\nanaphoric keyword `it` may be used.\n\n```\n${ for(foo.bar) }\n  - ${ it.last }, ${ it.first }\n${ endfor }\n```\n\n### Partials\n\nPartials (subtemplates stored in different files) may be\nincluded by using the name of the partial, followed\nby `()`, for example:\n\n```\n${ styles() }\n```\n\nPartials will be sought in the directory containing\nthe main template. The file name will be assumed to\nhave the same extension as the main template if it\nlacks an extension. When calling the partial, the\nfull name including file extension can also be used:\n\n```\n${ styles.html() }\n```\n\n(If a partial is not found in the directory of the\ntemplate and the template path is given as a relative\npath, it will also be sought in the `templates`\nsubdirectory of the user data directory.)\n\nPartials may optionally be applied to variables using\na colon:\n\n```\n${ date:fancy() }\n\n${ articles:bibentry() }\n```\n\nIf `articles` is an array, this will iterate over its\nvalues, applying the partial `bibentry()` to each one.  So the\nsecond example above is equivalent to\n\n```\n${ for(articles) }\n${ it:bibentry() }\n${ endfor }\n```\n\nNote that the anaphoric keyword `it` must be used when\niterating over partials.  In the above examples,\nthe `bibentry` partial should contain `it.title`\n(and so on) instead of `articles.title`.\n\nFinal newlines are omitted from included partials.\n\nPartials may include other partials.\n\nA separator between values of an array may be specified\nin square brackets, immediately after the variable name\nor partial:\n\n```\n${months[, ]}\n\n${articles:bibentry()[; ]}\n```\n\nThe separator in this case is literal and (unlike with `sep`\nin an explicit `for` loop) cannot contain interpolated\nvariables or other template directives.\n\n### Nesting\n\nTo ensure that content is \"nested,\" that is, subsequent lines\nindented, use the `^` directive:\n\n```\n$item.number$  $^$$item.description$ ($item.price$)\n```\n\nIn this example, if `item.description` has multiple lines,\nthey will all be indented to line up with the first line:\n\n```\n00123  A fine bottle of 18-year old\n       Oban whiskey. ($148)\n```\n\nTo nest multiple lines to the same level, align them\nwith the `^` directive in the template. For example:\n\n```\n$item.number$  $^$$item.description$ ($item.price$)\n               (Available til $item.sellby$.)\n```\n\nwill produce\n\n```\n00123  A fine bottle of 18-year old\n       Oban whiskey. ($148)\n       (Available til March 30, 2020.)\n```\n\nIf a variable occurs by itself on a line, preceded by whitespace\nand not followed by further text or directives on the same line,\nand the variable's value contains multiple lines, it will be\nnested automatically.\n\n### Breakable spaces\n\nNormally, spaces in the template itself (as opposed to values of\nthe interpolated variables) are not breakable, but they can be\nmade breakable in part of the template by using the `~` keyword\n(ended with another `~`).\n\n```\n$~$This long line may break if the document is rendered\nwith a short line length.$~$\n```\n\n### Pipes\n\nA pipe transforms the value of a variable or partial. Pipes are\nspecified using a slash (`/`) between the variable name (or partial)\nand the pipe name. Example:\n\n```\n$for(name)$\n$name/uppercase$\n$endfor$\n\n$for(metadata/pairs)$\n- $it.key$: $it.value$\n$endfor$\n\n$employee:name()/uppercase$\n```\n\nPipes may be chained:\n\n```\n$for(employees/pairs)$\n$it.key/alpha/uppercase$. $it.name$\n$endfor$\n```\n\nSome pipes take parameters:\n\n```\n|----------------------|------------|\n$for(employee)$\n$it.name.first/uppercase/left 20 \"| \"$$it.name.salary/right 10 \" | \" \" |\"$\n$endfor$\n|----------------------|------------|\n```\n\nCurrently the following pipes are predefined:\n\n- `pairs`:  Converts a map or array to an array of maps,\n  each with `key` and `value` fields.  If the original\n  value was an array, the `key` will be the array index,\n  starting with 1.\n\n- `uppercase`:  Converts text to uppercase.\n\n- `lowercase`:  Converts text to lowercase.\n\n- `length`:  Returns the length of the value:  number\n  of characters for a textual value, number of elements\n  for a map or array.\n\n- `reverse`:  Reverses a textual value or array,\n  and has no effect on other values.\n\n- `first`: Returns the first value of an array, if\n  applied to a non-empty array; otherwise returns\n  the original value.\n\n- `last`: Returns the last value of an array, if\n  applied to a non-empty array; otherwise returns\n  the original value.\n\n- `rest`: Returns all but the first value of an array, if\n  applied to a non-empty array; otherwise returns\n  the original value.\n\n- `allbutlast`: Returns all but the last value of an array, if\n  applied to a non-empty array; otherwise returns\n  the original value.\n\n- `chomp`:  Removes trailing newlines (and breakable space).\n\n- `nowrap`:  Disables line wrapping on breakable spaces.\n\n- `alpha`:  Converts textual values that can be\n  read as an integer into lowercase alphabetic\n  characters `a..z` (mod 26). This can be used to get lettered\n  enumeration from array indices.  To get uppercase\n  letters, chain with `uppercase`.\n\n- `roman`:  Converts textual values that can be\n  read as an integer into lowercase roman numerals.\n  This can be used to get lettered enumeration from array indices.\n  To get uppercase roman, chain with `uppercase`.\n\n- `left n \"leftborder\" \"rightborder\"`:  Renders a textual value\n  in a block of width `n`, aligned to the left, with an optional\n  left and right border.  Has no effect on other values. This\n  can be used to align material in tables.  Widths are positive\n  integers indicating the number of characters.  Borders\n  are strings inside double quotes; literal `\"` and `\\` characters\n  must be backslash-escaped.\n\n- `right n \"leftborder\" \"rightborder\"`:  Renders a textual value\n  in a block of width `n`, aligned to the right, and has no\n  effect on other values.\n\n- `center n \"leftborder\" \"rightborder\"`:  Renders a textual\n  value in a block of width `n`, aligned to the center, and has\n  no effect on other values.\n\n\n## Variables\n\n### Metadata variables\n\n`title`, `author`, `date`\n:   allow identification of basic aspects of the document.  Included\n    in PDF metadata through LaTeX and ConTeXt.  These can be set\n    through a [pandoc title block][Extension: `pandoc_title_block`],\n    which allows for multiple authors, or through a\n    [YAML metadata block][Extension: `yaml_metadata_block`]:\n\n        ---\n        author:\n        - Aristotle\n        - Peter Abelard\n        ...\n\n    Note that if you just want to set PDF or HTML metadata, without\n    including a title block in the document itself, you can\n    set the `title-meta`, `author-meta`, and `date-meta`\n    variables.  (By default these are set automatically, based\n    on `title`, `author`, and `date`.) The page title in HTML\n    is set by `pagetitle`, which is equal to `title` by default.\n\n`subtitle`\n:   document subtitle, included in HTML, EPUB, LaTeX, ConTeXt, and docx\n    documents\n\n`abstract`\n:   document summary, included in HTML, LaTeX, ConTeXt, AsciiDoc, and docx\n    documents\n\n`abstract-title`\n:   title of abstract, currently used only in HTML, EPUB, and docx.\n    This will be set automatically to a localized value,\n    depending on `lang`, but can be manually overridden.\n\n`keywords`\n:   list of keywords to be included in HTML, PDF, ODT, pptx, docx\n    and AsciiDoc metadata; repeat as for `author`, above\n\n`subject`\n:   document subject, included in ODT, PDF, docx, EPUB, and pptx metadata\n\n`description`\n:   document description, included in ODT, docx and pptx metadata. Some\n    applications show this as `Comments` metadata.\n\n`category`\n:   document category, included in docx and pptx metadata\n\nAdditionally,\nany root-level string metadata, not included in ODT, docx\nor pptx metadata is added as a *custom property*.\nThe following [YAML] metadata block for instance:\n\n    ---\n    title:  'This is the title'\n    subtitle: \"This is the subtitle\"\n    author:\n    - Author One\n    - Author Two\n    description: |\n        This is a long\n        description.\n\n        It consists of two paragraphs\n    ...\n\nwill include `title`, `author` and `description` as standard document\nproperties and `subtitle` as a custom property when converting to docx,\nODT or pptx.\n\n### Language variables\n\n`lang`\n:   identifies the main language of the document using IETF language\n    tags (following the [BCP 47] standard), such as `en` or `en-GB`.\n    The [Language subtag lookup] tool can look up or verify these tags.\n    This affects most formats, and controls hyphenation in PDF output\n    when using LaTeX (through [`babel`] and [`polyglossia`]) or ConTeXt.\n\n    Use native pandoc [Divs and Spans] with the `lang` attribute to\n    switch the language:\n\n        ---\n        lang: en-GB\n        ...\n\n        Text in the main document language (British English).\n\n        ::: {lang=fr-CA}\n        > Cette citation est √©crite en fran√ßais canadien.\n        :::\n\n        More text in English. ['Zitat auf Deutsch.']{lang=de}\n\n`dir`\n:   the base script direction, either `rtl` (right-to-left)\n    or `ltr` (left-to-right).\n\n    For bidirectional documents, native pandoc `span`s and\n    `div`s with the `dir` attribute (value `rtl` or `ltr`) can\n    be used to override the base direction in some output\n    formats.  This may not always be necessary if the final\n    renderer (e.g. the browser, when generating HTML) supports\n    the [Unicode Bidirectional Algorithm].\n\n    When using LaTeX for bidirectional documents, only the\n    `xelatex` engine is fully supported (use\n    `--pdf-engine=xelatex`).\n\n[BCP 47]: https://tools.ietf.org/html/bcp47\n[Unicode Bidirectional Algorithm]: https://www.w3.org/International/articles/inline-bidi-markup/uba-basics\n[Language subtag lookup]: https://r12a.github.io/app-subtags/\n\n### Variables for HTML\n\n`document-css`\n:   Enables inclusion of most of the [CSS] in the `styles.html`\n    [partial](#partials) (have a look with\n    `pandoc --print-default-data-file=templates/styles.html`).\n    Unless you use `--css`, this variable\n    is set to `true` by default. You can disable it with\n    e.g. `pandoc -M document-css=false`.\n\n`mainfont`\n:   sets the CSS `font-family` property on the `html` element.\n\n`fontsize`\n:   sets the base CSS `font-size`, which you'd usually set\n    to e.g. `20px`, but it also accepts `pt`\n    (12pt = 16px in most browsers).\n\n`fontcolor`\n:   sets the CSS `color` property on the `html` element.\n\n`linkcolor`\n:   sets the CSS `color` property on all links.\n\n`monofont`\n:   sets the CSS `font-family` property on `code` elements.\n\n`monobackgroundcolor`\n:   sets the CSS `background-color` property on `code` elements\n    and adds extra padding.\n\n`linestretch`\n:   sets the CSS `line-height` property on the `html` element,\n    which is preferred to be unitless.\n\n`maxwidth`\n:   sets the CSS `max-width` property (default is 32em).\n\n`backgroundcolor`\n:   sets the CSS `background-color` property on the `html` element.\n\n`margin-left`, `margin-right`, `margin-top`, `margin-bottom`\n:   sets the corresponding CSS `padding` properties on the `body` element.\n\nTo override or extend some [CSS] for just one document, include for example:\n\n    ---\n    header-includes: |\n      <style>\n      blockquote {\n        font-style: italic;\n      }\n      tr.even {\n        background-color: #f0f0f0;\n      }\n      td, th {\n        padding: 0.5em 2em 0.5em 0.5em;\n      }\n      tbody {\n        border-bottom: none;\n      }\n      </style>\n    ---\n\n[CSS]: https://developer.mozilla.org/en-US/docs/Learn/CSS\n\n### Variables for HTML math\n\n`classoption`\n:   when using `--katex`, you can render display math equations\n    flush left using [YAML metadata](#layout) or with `-M\n    classoption=fleqn`.\n\n### Variables for HTML slides\n\nThese affect HTML output when [producing slide shows with\npandoc](#slide-shows).\n\n`institute`\n:   author affiliations: can be a list when there are multiple authors\n\n`revealjs-url`\n:   base URL for reveal.js documents (defaults to\n    `https://unpkg.com/reveal.js@^4/`)\n\n`s5-url`\n:   base URL for S5 documents (defaults to `s5/default`)\n\n`slidy-url`\n:   base URL for Slidy documents (defaults to\n    `https://www.w3.org/Talks/Tools/Slidy2`)\n\n`slideous-url`\n:   base URL for Slideous documents (defaults to `slideous`)\n\n`title-slide-attributes`\n:   additional attributes for the title slide of reveal.js slide shows.\n    See [background in reveal.js, beamer, and pptx] for an example.\n\nAll [reveal.js configuration options] are available as variables.\nTo turn off boolean flags that default to true in reveal.js, use `0`.\n\n[reveal.js configuration options]: https://revealjs.com/config/\n\n### Variables for Beamer slides\n\nThese variables change the appearance of PDF slides using [`beamer`].\n\n`aspectratio`\n:   slide aspect ratio (`43` for 4:3 [default], `169` for 16:9,\n    `1610` for 16:10, `149` for 14:9, `141` for 1.41:1, `54` for 5:4,\n    `32` for 3:2)\n\n`beameroption`\n:   add extra beamer option with `\\setbeameroption{}`\n\n`institute`\n:   author affiliations: can be a list when there are multiple authors\n\n`logo`\n:   logo image for slides\n\n`navigation`\n:   controls navigation symbols (default is `empty` for no navigation\n    symbols; other valid values are `frame`, `vertical`, and `horizontal`)\n\n`section-titles`\n:   enables \"title pages\" for new sections (default is true)\n\n`theme`, `colortheme`, `fonttheme`, `innertheme`, `outertheme`\n:   beamer themes\n\n`themeoptions`, `colorthemeoptions`, `fontthemeoptions`, `innerthemeoptions`, `outerthemeoptions`\n:   options for LaTeX beamer themes (lists)\n\n`titlegraphic`\n:   image for title slide: can be a list\n\n`titlegraphicoptions`\n:   options for title slide image\n\n`shorttitle`, `shortsubtitle`, `shortauthor`, `shortinstitute`, `shortdate`\n:   some beamer themes use short versions of the title, subtitle, author,\n    institute, date\n\n### Variables for PowerPoint\n\nThese variables control the visual aspects of a slide show that\nare not easily controlled via templates.\n\n`monofont`\n:   font to use for code.\n\n### Variables for LaTeX\n\nPandoc uses these variables when [creating a PDF] with a LaTeX engine.\n\n#### Layout\n\n`block-headings`\n:   make `\\paragraph` and `\\subparagraph` (fourth- and\n    fifth-level headings, or fifth- and sixth-level with book\n    classes) free-standing rather than run-in; requires further\n    formatting to distinguish from `\\subsubsection` (third- or\n    fourth-level headings). Instead of using this option,\n    [KOMA-Script] can adjust headings more extensively:\n\n        ---\n        documentclass: scrartcl\n        header-includes: |\n          \\RedeclareSectionCommand[\n            beforeskip=-10pt plus -2pt minus -1pt,\n            afterskip=1sp plus -1sp minus 1sp,\n            font=\\normalfont\\itshape]{paragraph}\n          \\RedeclareSectionCommand[\n            beforeskip=-10pt plus -2pt minus -1pt,\n            afterskip=1sp plus -1sp minus 1sp,\n            font=\\normalfont\\scshape,\n            indent=0pt]{subparagraph}\n        ...\n\n`classoption`\n:   option for document class, e.g. `oneside`; repeat for multiple options:\n\n        ---\n        classoption:\n        - twocolumn\n        - landscape\n        ...\n\n`documentclass`\n:   document class: usually one of the standard classes,\n    [`article`], [`book`], and [`report`]; the [KOMA-Script]\n    equivalents, `scrartcl`, `scrbook`, and `scrreprt`, which\n    default to smaller margins; or [`memoir`]\n\n`geometry`\n:   option for [`geometry`] package, e.g. `margin=1in`;\n    repeat for multiple options:\n\n        ---\n        geometry:\n        - top=30mm\n        - left=20mm\n        - heightrounded\n        ...\n\n`hyperrefoptions`\n:   option for [`hyperref`] package, e.g. `linktoc=all`;\n    repeat for multiple options:\n\n        ---\n        hyperrefoptions:\n        - linktoc=all\n        - pdfwindowui\n        - pdfpagemode=FullScreen\n        ...\n\n`indent`\n:   if true, pandoc will use document class settings for\n    indentation (the default LaTeX template otherwise removes\n    indentation and adds space between paragraphs)\n\n`linestretch`\n:   adjusts line spacing using the [`setspace`]\n    package, e.g. `1.25`, `1.5`\n\n`margin-left`, `margin-right`, `margin-top`, `margin-bottom`\n:   sets margins if `geometry` is not used (otherwise `geometry`\n    overrides these)\n\n`pagestyle`\n:   control `\\pagestyle{}`: the default article class\n    supports `plain` (default), `empty` (no running heads or page numbers),\n    and `headings` (section titles in running heads)\n\n`papersize`\n:   paper size, e.g. `letter`, `a4`\n\n`secnumdepth`\n:   numbering depth for sections (with `--number-sections` option\n    or `numbersections` variable)\n\n`beamerarticle`\n:   produce an article from Beamer slides.  Note: if you set\n    this variable, you must specify the beamer writer but use the\n    default *LaTeX* template: for example,\n    `pandoc -Vbeamerarticle -t beamer --template default.latex`.\n\n`handout`\n:   produce a handout version of Beamer slides (with overlays condensed\n    into single slides)\n\n#### Fonts\n\n`fontenc`\n:   allows font encoding to be specified through `fontenc` package (with\n    `pdflatex`); default is `T1` (see [LaTeX font encodings guide])\n\n`fontfamily`\n:   font package for use with `pdflatex`:\n    [TeX Live] includes many options, documented in the [LaTeX Font Catalogue].\n    The default is [Latin Modern][`lm`].\n\n`fontfamilyoptions`\n:   options for package used as `fontfamily`; repeat for multiple options.\n    For example, to use the Libertine font with proportional lowercase\n    (old-style) figures through the [`libertinus`] package:\n\n        ---\n        fontfamily: libertinus\n        fontfamilyoptions:\n        - osf\n        - p\n        ...\n\n`fontsize`\n:   font size for body text. The standard classes allow 10pt, 11pt, and\n    12pt.  To use another size, set `documentclass` to one of\n    the [KOMA-Script] classes, such as `scrartcl` or `scrbook`.\n\n`mainfont`, `sansfont`, `monofont`, `mathfont`, `CJKmainfont`, `CJKsansfont`, `CJKmonofont`\n:   font families for use with `xelatex` or\n    `lualatex`: take the name of any system font, using the\n    [`fontspec`] package.  `CJKmainfont` uses the [`xecjk`] package if `xelatex` is used,\n    or the [`luatexja`] package if `lualatex` is used.\n\n`mainfontoptions`, `sansfontoptions`, `monofontoptions`, `mathfontoptions`, `CJKoptions`, `luatexjapresetoptions`\n:   options to use with `mainfont`, `sansfont`, `monofont`, `mathfont`,\n    `CJKmainfont` in `xelatex` and `lualatex`.  Allow for any\n    choices available through [`fontspec`]; repeat for multiple\n    options. For example, to use the [TeX Gyre] version of\n    Palatino with lowercase figures:\n\n        ---\n        mainfont: TeX Gyre Pagella\n        mainfontoptions:\n        - Numbers=Lowercase\n        - Numbers=Proportional\n        ...\n\n`mainfontfallback`, `sansfontfallback`, `monofontfallback`\n:   fonts to try if a glyph isn't found in `mainfont`, `sansfont`, or `monofont`\n    respectively. These are lists. The font name must be followed by a colon\n    and optionally a set of options, for example:\n\n        ---\n        mainfontfallback:\n          - \"FreeSans:\"\n          - \"NotoColorEmoji:mode=harf\"\n        ...\n\n    Font fallbacks currently only work with `lualatex`.\n\n`babelfonts`\n:   a map of Babel language names (e.g. `chinese`) to the font\n    to be used with the language:\n\n        ---\n        babelfonts:\n          chinese-hant: \"Noto Serif CJK TC\"\n          russian: \"Noto Serif\"\n        ...\n\n`microtypeoptions`\n:    options to pass to the microtype package\n\n#### Links\n\n`colorlinks`\n:   add color to link text; automatically enabled if any of\n    `linkcolor`, `filecolor`, `citecolor`, `urlcolor`, or `toccolor` are set\n\n`boxlinks`\n:   add visible box around links (has no effect if `colorlinks` is set)\n\n`linkcolor`, `filecolor`, `citecolor`, `urlcolor`, `toccolor`\n:   color for internal links, external links, citation links, linked\n    URLs, and links in table of contents, respectively: uses options\n    allowed by [`xcolor`], including the `dvipsnames`, `svgnames`, and\n    `x11names` lists\n\n`links-as-notes`\n:   causes links to be printed as footnotes\n\n`urlstyle`\n:   style for URLs (e.g., `tt`, `rm`, `sf`, and, the default, `same`)\n\n#### Front matter\n\n`lof`, `lot`\n:   include list of figures, list of tables (can also be set using\n    `--lof/--list-of-figures`, `--lot/--list-of-tables`)\n\n`thanks`\n:   contents of acknowledgments footnote after document title\n\n`toc`\n:   include table of contents (can also be set using\n    `--toc/--table-of-contents`)\n\n`toc-depth`\n:   level of section to include in table of contents\n\n#### BibLaTeX Bibliographies\n\nThese variables function when using BibLaTeX for [citation rendering].\n\n`biblatexoptions`\n:   list of options for biblatex\n\n`biblio-style`\n:   bibliography style, when used with `--natbib` and `--biblatex`\n\n`biblio-title`\n:   bibliography title, when used with `--natbib` and `--biblatex`\n\n`bibliography`\n:   bibliography to use for resolving references\n\n`natbiboptions`\n:   list of options for natbib\n\n[KOMA-Script]: https://ctan.org/pkg/koma-script\n[LaTeX Font Catalogue]: https://tug.org/FontCatalogue/\n[LaTeX font encodings guide]: https://ctan.org/pkg/encguide\n[TeX Gyre]: http://www.gust.org.pl/projects/e-foundry/tex-gyre\n[`article`]: https://ctan.org/pkg/article\n[`book`]: https://ctan.org/pkg/book\n[`libertinus`]: https://ctan.org/pkg/libertinus\n[`memoir`]: https://ctan.org/pkg/memoir\n[`report`]: https://ctan.org/pkg/report\n\n### Variables for ConTeXt\n\nPandoc uses these variables when [creating a PDF] with ConTeXt.\n\n`fontsize`\n:   font size for body text (e.g. `10pt`, `12pt`)\n\n`headertext`, `footertext`\n:   text to be placed in running header or footer (see [ConTeXt Headers and\n    Footers]); repeat up to four times for different placement\n\n`indenting`\n:   controls indentation of paragraphs, e.g. `yes,small,next` (see\n    [ConTeXt Indentation]); repeat for multiple options\n\n`interlinespace`\n:   adjusts line spacing, e.g. `4ex` (using [`setupinterlinespace`]);\n    repeat for multiple options\n\n`layout`\n:   options for page margins and text arrangement (see [ConTeXt Layout]);\n    repeat for multiple options\n\n`linkcolor`, `contrastcolor`\n:   color for links outside and inside a page, e.g. `red`, `blue` (see\n    [ConTeXt Color])\n\n`linkstyle`\n:   typeface style for links, e.g. `normal`, `bold`, `slanted`, `boldslanted`,\n    `type`, `cap`, `small`\n\n`lof`, `lot`\n:   include list of figures, list of tables\n\n`mainfont`, `sansfont`, `monofont`, `mathfont`\n:   font families: take the name of any system font (see\n    [ConTeXt Font Switching])\n\n`mainfontfallback`, `sansfontfallback`, `monofontfallback`\n:   list of fonts to try, in order, if a glyph is not found in the\n    main font. Use `\\definefallbackfamily`-compatible font name syntax.\n    Emoji fonts are unsupported.\n\n`margin-left`, `margin-right`, `margin-top`, `margin-bottom`\n:   sets margins, if `layout` is not used (otherwise `layout`\n    overrides these)\n\n`pagenumbering`\n:   page number style and location (using [`setuppagenumbering`]);\n    repeat for multiple options\n\n`papersize`\n:   paper size, e.g. `letter`, `A4`, `landscape` (see [ConTeXt Paper Setup]);\n    repeat for multiple options\n\n`pdfa`\n:   adds to the preamble the setup necessary to generate PDF/A\n    of the type specified, e.g. `1a:2005`, `2a`. If no type is\n    specified (i.e. the value is set to True, by e.g.\n    `--metadata=pdfa` or `pdfa: true` in a YAML metadata block),\n    `1b:2005` will be used as default, for reasons of backwards\n    compatibility. Using `--variable=pdfa` without specified value\n    is not supported.  To successfully generate PDF/A the required\n    ICC color profiles have to be available and the content and all\n    included files (such as images) have to be standard-conforming.\n    The ICC profiles and output intent may be specified using the\n    variables `pdfaiccprofile` and `pdfaintent`.  See also [ConTeXt\n    PDFA] for more details.\n\n`pdfaiccprofile`\n:   when used in conjunction with `pdfa`, specifies the ICC profile to use\n    in the PDF, e.g. `default.cmyk`. If left unspecified, `sRGB.icc` is\n    used as default. May be repeated to include multiple profiles. Note that\n    the profiles have to be available on the system. They can be obtained\n    from [ConTeXt ICC Profiles].\n\n`pdfaintent`\n:   when used in conjunction with `pdfa`, specifies the output intent for\n    the colors, e.g. `ISO coated v2 300\\letterpercent\\space (ECI)`\n    If left unspecified, `sRGB IEC61966-2.1` is used as default.\n\n`toc`\n:   include table of contents (can also be set using\n    `--toc/--table-of-contents`)\n\n`urlstyle`\n:   typeface style for links without link text, e.g. `normal`, `bold`, `slanted`, `boldslanted`,\n    `type`, `cap`, `small`\n\n`whitespace`\n:   spacing between paragraphs, e.g. `none`, `small` (using\n    [`setupwhitespace`])\n\n`includesource`\n:   include all source documents as file attachments in the PDF file\n\n[ConTeXt Paper Setup]: https://wiki.contextgarden.net/PaperSetup\n[ConTeXt Layout]: https://wiki.contextgarden.net/Layout\n[ConTeXt Font Switching]: https://wiki.contextgarden.net/Font_Switching\n[ConTeXt Color]: https://wiki.contextgarden.net/Color\n[ConTeXt Headers and Footers]: https://wiki.contextgarden.net/Headers_and_Footers\n[ConTeXt Indentation]: https://wiki.contextgarden.net/Indentation\n[ConTeXt ICC Profiles]: https://wiki.contextgarden.net/PDFX#ICC_profiles\n[ConTeXt PDFA]: https://wiki.contextgarden.net/PDF/A\n[`setupwhitespace`]: https://wiki.contextgarden.net/Command/setupwhitespace\n[`setupinterlinespace`]: https://wiki.contextgarden.net/Command/setupinterlinespace\n[`setuppagenumbering`]: https://wiki.contextgarden.net/Command/setuppagenumbering\n\n### Variables for `wkhtmltopdf`\n\nPandoc uses these variables when [creating a PDF] with [`wkhtmltopdf`].\nThe `--css` option also affects the output.\n\n`footer-html`, `header-html`\n:   add information to the header and footer\n\n`margin-left`, `margin-right`, `margin-top`, `margin-bottom`\n:   set the page margins\n\n`papersize`\n:   sets the PDF paper size\n\n### Variables for man pages\n\n`adjusting`\n:   adjusts text to left (`l`), right (`r`), center (`c`),\n    or both (`b`) margins\n\n`footer`\n:   footer in man pages\n\n`header`\n:   header in man pages\n\n`section`\n:   section number in man pages\n\n### Variables for Texinfo\n\n`version`\n:   version of software (used in title and title page)\n\n`filename`\n:   name of info file to be generated (defaults to a name based on the\n    texi filename)\n\n### Variables for Typst\n\n`margin`\n:   A dictionary with the fields defined in the Typst documentation:\n    `x`, `y`, `top`, `bottom`, `left`, `right`.\n\n`papersize`\n:    Paper size: `a4`, `us-letter`, etc.\n\n`mainfont`\n:    Name of system font to use for the main font.\n\n`fontsize`\n:    Font size (e.g., `12pt`).\n\n`section-numbering`\n:    Schema to use for numbering sections, e.g. `1.A.1`.\n\n`page-numbering`\n:    Schema to use for numbering pages, e.g. `1` or `i`, or\n     an empty string to omit page numbering.\n\n`columns`\n:    Number of columns for body text.\n\n### Variables for ms\n\n`fontfamily`\n:   `A` (Avant Garde), `B` (Bookman), `C` (Helvetica), `HN`\n    (Helvetica Narrow), `P` (Palatino), or `T` (Times New Roman).\n    This setting does not affect source code, which is always\n    displayed using monospace Courier. These built-in fonts are\n    limited in their coverage of characters. Additional fonts may\n    be installed using the script [`install-font.sh`] provided\n    by Peter Schaffter and documented in detail on [his web\n    site][ms-font-steps].\n\n`indent`\n:   paragraph indent (e.g. `2m`)\n\n`lineheight`\n:   line height (e.g. `12p`)\n\n`pointsize`\n:   point size (e.g. `10p`)\n\n[`install-font.sh`]: https://www.schaffter.ca/mom/bin/install-font.sh\n[ms-font-steps]: https://www.schaffter.ca/mom/momdoc/appendices.html#steps\n\n### Variables set automatically\n\nPandoc sets these variables automatically in response to [options] or\ndocument contents; users can also modify them. These vary depending\non the output format, and include the following:\n\n`body`\n:   body of document\n\n`date-meta`\n:   the `date` variable converted to ISO 8601 YYYY-MM-DD,\n    included in all HTML based formats (dzslides, epub,\n    html, html4, html5, revealjs, s5, slideous, slidy).\n    The recognized formats for `date` are: `mm/dd/yyyy`,\n    `mm/dd/yy`, `yyyy-mm-dd` (ISO 8601), `dd MM yyyy`\n    (e.g. either `02 Apr 2018` or `02 April 2018`),\n    `MM dd, yyyy` (e.g. `Apr. 02, 2018` or `April 02, 2018),\n    `yyyy[mm[dd]]` (e.g. `20180402, `201804` or `2018`).\n\n`header-includes`\n:   contents specified by `-H/--include-in-header` (may have multiple\n    values)\n\n`include-before`\n:   contents specified by `-B/--include-before-body` (may have\n    multiple values)\n\n`include-after`\n:   contents specified by `-A/--include-after-body` (may have\n    multiple values)\n\n`meta-json`\n:   JSON representation of all of the document's metadata. Field\n    values are transformed to the selected output format.\n\n`numbersections`\n:   non-null value if `-N/--number-sections` was specified\n\n`sourcefile`, `outputfile`\n:   source and destination filenames, as given on the command line.\n    `sourcefile` can also be a list if input comes from multiple files,\n    or empty if input is from stdin. You can use the following snippet in\n    your template to distinguish them:\n\n        $if(sourcefile)$\n        $for(sourcefile)$\n        $sourcefile$\n        $endfor$\n        $else$\n        (stdin)\n        $endif$\n\n    Similarly, `outputfile` can be `-` if output goes to the terminal.\n\n    If you need absolute paths, use e.g. `$curdir$/$sourcefile$`.\n\n`curdir`\n:   working directory from which pandoc is run.\n\n`pandoc-version`\n:   pandoc version.\n\n`toc`\n:   non-null value if `--toc/--table-of-contents` was specified\n\n`toc-title`\n:   title of table of contents (works only with EPUB,\n    HTML, revealjs, opendocument, odt, docx, pptx, beamer, LaTeX).\n    Note that in docx and pptx a custom `toc-title` will be\n    picked up from metadata, but cannot be set as a variable.\n\n[pandoc-templates]: https://github.com/jgm/pandoc-templates\n\n# Extensions\n\nThe behavior of some of the readers and writers can be adjusted by\nenabling or disabling various extensions.\n\nAn extension can be enabled by adding `+EXTENSION`\nto the format name and disabled by adding `-EXTENSION`. For example,\n`--from markdown_strict+footnotes` is strict Markdown with footnotes\nenabled, while `--from markdown-footnotes-pipe_tables` is pandoc's\nMarkdown without footnotes or pipe tables.\n\nThe Markdown reader and writer make by far the most use of extensions.\nExtensions only used by them are therefore covered in the\nsection [Pandoc's Markdown] below (see [Markdown variants] for\n`commonmark` and `gfm`). In the following, extensions that also work\nfor other formats are covered.\n\nNote that Markdown extensions added to the `ipynb` format\naffect Markdown cells in Jupyter notebooks (as do command-line\noptions like `--markdown-headings`).\n\n## Typography\n\n### Extension: `smart` ###\n\nInterpret straight quotes as curly quotes, `---` as em-dashes,\n`--` as en-dashes, and `...` as ellipses. Nonbreaking spaces are\ninserted after certain abbreviations, such as \"Mr.\"\n\nThis extension can be enabled/disabled for the following formats:\n\ninput formats\n:  `markdown`, `commonmark`, `latex`, `mediawiki`, `org`, `rst`, `twiki`,\n   `html`\n\noutput formats\n:  `markdown`, `latex`, `context`, `rst`\n\nenabled by default in\n:  `markdown`, `latex`, `context` (both input and output)\n\nNote: If you are *writing* Markdown, then the `smart` extension\nhas the reverse effect: what would have been curly quotes comes\nout straight.\n\nIn LaTeX, `smart` means to use the standard TeX ligatures\nfor quotation marks (` `` ` and ` '' ` for double quotes,\n`` ` `` and `` ' `` for single quotes) and dashes (`--` for\nen-dash and `---` for em-dash).  If `smart` is disabled,\nthen in reading LaTeX pandoc will parse these characters\nliterally.  In writing LaTeX, enabling `smart` tells pandoc\nto use the ligatures when possible; if `smart` is disabled\npandoc will use unicode quotation mark and dash characters.\n\n## Headings and sections\n\n### Extension: `auto_identifiers` ###\n\nA heading without an explicitly specified identifier will be\nautomatically assigned a unique identifier based on the heading text.\n\nThis extension can be enabled/disabled for the following formats:\n\ninput formats\n:  `markdown`, `latex`, `rst`, `mediawiki`, `textile`\n\noutput formats\n:  `markdown`, `muse`\n\nenabled by default in\n:  `markdown`, `muse`\n\nThe default algorithm used to derive the identifier from the\nheading text is:\n\n  - Remove all formatting, links, etc.\n  - Remove all footnotes.\n  - Remove all non-alphanumeric characters,\n    except underscores, hyphens, and periods.\n  - Replace all spaces and newlines with hyphens.\n  - Convert all alphabetic characters to lowercase.\n  - Remove everything up to the first letter (identifiers may\n    not begin with a number or punctuation mark).\n  - If nothing is left after this, use the identifier `section`.\n\nThus, for example,\n\n  Heading                           Identifier\n  -------------------------------   ----------------------------\n  `Heading identifiers in HTML`     `heading-identifiers-in-html`\n  `Ma√Ætre d'h√¥tel`                  `ma√Ætre-dh√¥tel`\n  `*Dogs*?--in *my* house?`         `dogs--in-my-house`\n  `[HTML], [S5], or [RTF]?`         `html-s5-or-rtf`\n  `3. Applications`                 `applications`\n  `33`                              `section`\n\nThese rules should, in most cases, allow one to determine the identifier\nfrom the heading text. The exception is when several headings have the\nsame text; in this case, the first will get an identifier as described\nabove; the second will get the same identifier with `-1` appended; the\nthird with `-2`; and so on.\n\n(However, a different algorithm is used if\n`gfm_auto_identifiers` is enabled; see below.)\n\nThese identifiers are used to provide link targets in the table of\ncontents generated by the `--toc|--table-of-contents` option. They\nalso make it easy to provide links from one section of a document to\nanother. A link to this section, for example, might look like this:\n\n    See the section on\n    [heading identifiers](#heading-identifiers-in-html-latex-and-context).\n\nNote, however, that this method of providing links to sections works\nonly in HTML, LaTeX, and ConTeXt formats.\n\nIf the `--section-divs` option is specified, then each section will\nbe wrapped in a `section` (or a `div`, if `html4` was specified),\nand the identifier will be attached to the enclosing `<section>`\n(or `<div>`) tag rather than the heading itself. This allows entire\nsections to be manipulated using JavaScript or treated differently in\nCSS.\n\n### Extension: `ascii_identifiers` ###\n\nCauses the identifiers produced by `auto_identifiers` to be pure ASCII.\nAccents are stripped off of accented Latin letters, and non-Latin\nletters are omitted.\n\n### Extension: `gfm_auto_identifiers` ###\n\nChanges the algorithm used by `auto_identifiers` to conform to\nGitHub's method.  Spaces are converted to dashes (`-`),\nuppercase characters to lowercase characters, and punctuation\ncharacters other than `-` and `_` are removed.\nEmojis are replaced by their names.\n\n## Math Input\n\nThe extensions [`tex_math_dollars`](#extension-tex_math_dollars),\n[`tex_math_gfm`](#extension-tex_math_gfm),\n[`tex_math_single_backslash`](#extension-tex_math_single_backslash), and\n[`tex_math_double_backslash`](#extension-tex_math_double_backslash)\nare described in the section about Pandoc's Markdown.\n\nHowever, they can also be used with HTML input. This is handy for\nreading web pages formatted using MathJax, for example.\n\n## Raw HTML/TeX\n\nThe following extensions are described in more detail in\ntheir respective sections of [Pandoc's Markdown]:\n\n- [`raw_html`](#extension-raw_html) allows HTML elements which\n  are not representable in pandoc's AST to be parsed as raw HTML.\n  By default, this is disabled for HTML input.\n\n- [`raw_tex`](#extension-raw_tex) allows raw LaTeX, TeX, and ConTeXt\n  to be included in a document.  This extension can be enabled/disabled\n  for the following formats (in addition to `markdown`):\n\n  input formats\n  :  `latex`, `textile`, `html` (environments, `\\ref`, and\n     `\\eqref` only), `ipynb`\n\n  output formats\n  :  `textile`, `commonmark`\n\n  Note: as applied to `ipynb`, `raw_html` and `raw_tex` affect not\n  only raw TeX in Markdown cells, but data with mime type\n  `text/html` in output cells.  Since the `ipynb` reader attempts\n  to preserve the richest possible outputs when several options\n  are given, you will get best results if you disable `raw_html`\n  and `raw_tex` when converting to formats like `docx` which don't\n  allow raw `html` or `tex`.\n\n- [`native_divs`](#extension-native_divs) causes HTML `div`\n  elements to be parsed as native pandoc Div blocks.\n  If you want them to be parsed as raw HTML, use\n  `-f html-native_divs+raw_html`.\n\n- [`native_spans`](#extension-native_spans) causes HTML `span`\n  elements to be parsed as native pandoc Span inlines.\n  If you want them to be parsed as raw HTML, use\n  `-f html-native_spans+raw_html`.  If you want to drop all\n  `div`s and `span`s when converting HTML to Markdown, you\n  can use `pandoc -f html-native_divs-native_spans -t markdown`.\n\n## Literate Haskell support\n\n### Extension: `literate_haskell` ###\n\nTreat the document as literate Haskell source.\n\nThis extension can be enabled/disabled for the following formats:\n\ninput formats\n:  `markdown`, `rst`, `latex`\n\noutput formats\n:  `markdown`, `rst`, `latex`, `html`\n\nIf you append `+lhs` (or `+literate_haskell`) to one of the formats\nabove, pandoc will treat the document as literate Haskell source.\nThis means that\n\n  - In Markdown input, \"bird track\" sections will be parsed as Haskell\n    code rather than block quotations.  Text between `\\begin{code}`\n    and `\\end{code}` will also be treated as Haskell code.  For\n    ATX-style headings the character '=' will be used instead of '#'.\n\n  - In Markdown output, code blocks with classes `haskell` and `literate`\n    will be rendered using bird tracks, and block quotations will be\n    indented one space, so they will not be treated as Haskell code.\n    In addition, headings will be rendered setext-style (with underlines)\n    rather than ATX-style (with '#' characters). (This is because ghc\n    treats '#' characters in column 1 as introducing line numbers.)\n\n  - In restructured text input, \"bird track\" sections will be parsed\n    as Haskell code.\n\n  - In restructured text output, code blocks with class `haskell` will\n    be rendered using bird tracks.\n\n  - In LaTeX input, text in `code` environments will be parsed as\n    Haskell code.\n\n  - In LaTeX output, code blocks with class `haskell` will be rendered\n    inside `code` environments.\n\n  - In HTML output, code blocks with class `haskell` will be rendered\n    with class `literatehaskell` and bird tracks.\n\nExamples:\n\n    pandoc -f markdown+lhs -t html\n\nreads literate Haskell source formatted with Markdown conventions and writes\nordinary HTML (without bird tracks).\n\n    pandoc -f markdown+lhs -t html+lhs\n\nwrites HTML with the Haskell code in bird tracks, so it can be copied\nand pasted as literate Haskell source.\n\nNote that GHC expects the bird tracks in the first column, so indented\nliterate code blocks (e.g. inside an itemized environment) will not be\npicked up by the Haskell compiler.\n\n## Other extensions\n\n### Extension: `empty_paragraphs` ###\n\nAllows empty paragraphs.  By default empty paragraphs are\nomitted.\n\nThis extension can be enabled/disabled for the following formats:\n\ninput formats\n:  `docx`, `html`\n\noutput formats\n:  `docx`, `odt`, `opendocument`, `html`, `latex`\n\n### Extension: `native_numbering` ###\n\nEnables native numbering of figures and tables. Enumeration\nstarts at 1.\n\nThis extension can be enabled/disabled for the following formats:\n\noutput formats\n:  `odt`, `opendocument`, `docx`\n\n### Extension: `xrefs_name` ###\n\nLinks to headings, figures and tables inside the document are\nsubstituted with cross-references that will use the name or caption\nof the referenced item. The original link text is replaced once\nthe generated document is refreshed. This extension can be combined\nwith `xrefs_number` in which case numbers will appear before the\nname.\n\nText in cross-references is only made consistent with the referenced\nitem once the document has been refreshed.\n\nThis extension can be enabled/disabled for the following formats:\n\noutput formats\n:  `odt`, `opendocument`\n\n### Extension: `xrefs_number` ###\n\nLinks to headings, figures and tables inside the document are\nsubstituted with cross-references that will use the number\nof the referenced item. The original link text is discarded.\nThis extension can be combined with `xrefs_name` in which case\nthe name or caption numbers will appear after the number.\n\nFor the `xrefs_number` to be useful heading numbers must be enabled\nin the generated document, also table and figure captions must be enabled\nusing for example the `native_numbering` extension.\n\nNumbers in cross-references are only visible in the final document once\nit has been refreshed.\n\nThis extension can be enabled/disabled for the following formats:\n\noutput formats\n:  `odt`, `opendocument`\n\n### Extension: `styles` ### {#ext-styles}\n\nWhen converting from docx, add `custom-styles` attributes\nfor all docx styles, regardless of whether pandoc understands\nthe meanings of these styles. Because attributes cannot be\nadded directly to paragraphs or text in the pandoc AST,\nparagraph styles will cause Divs to be created and character\nstyles will cause Spans to be created to hold the attributes.\n(Table styles will be added to the Table elements directly.)\nThis extension can be used with [docx custom styles](#custom-styles).\n\ninput formats\n:  `docx`\n\n### Extension: `amuse` ###\n\nIn the `muse` input format, this enables Text::Amuse\nextensions to Emacs Muse markup.\n\n### Extension: `raw_markdown` ###\n\nIn the `ipynb` input format, this causes Markdown cells\nto be included as raw Markdown blocks (allowing lossless\nround-tripping) rather than being parsed.  Use this only\nwhen you are targeting `ipynb` or a Markdown-based\noutput format.\n\n### Extension: `citations` (typst) {#typst-citations}\n\nWhen the `citations` extension is enabled in `typst`\n(as it is by default), `typst` citations will\nbe parsed as native pandoc citations, and native\npandoc citations will be rendered as `typst` citations.\n\n### Extension: `citations` (org) {#org-citations}\n\nWhen the `citations` extension is enabled in `org`,\norg-cite and org-ref style citations will be parsed as\nnative pandoc citations, and org-cite citations will\nbe used to render native pandoc citations.\n\n  [org-cite]: https://orgmode.org/manual/Citations.html\n  [org-ref]:  https://github.com/jkitchin/org-ref\n\n### Extension: `citations` (docx) {#docx-citations}\n\nWhen `citations` is enabled in `docx`, citations inserted\nby Zotero or Mendeley or EndNote plugins will be parsed as native\npandoc citations.  (Otherwise, the formatted citations generated\nby the bibliographic software will be parsed as regular text.)\n\n### Extension: `fancy_lists` (org) {#org-fancy-lists}\n\nSome aspects of [Pandoc's Markdown fancy lists](#extension-fancy_lists) are also\naccepted in `org` input, mimicking the option `org-list-allow-alphabetical` in\nEmacs. As in Org Mode, enabling this extension allows lowercase and uppercase\nalphabetical markers for ordered lists to be parsed in addition to arabic ones.\nNote that for Org, this does not include roman numerals or the `#` placeholder\nthat are enabled by the extension in Pandoc's Markdown.\n\n### Extension: `element_citations` ###\n\nIn the `jats` output formats, this causes reference items to\nbe replaced with `<element-citation>` elements. These\nelements are not influenced by CSL styles, but all information\non the item is included in tags.\n\n### Extension: `ntb` ###\n\nIn the `context` output format this enables the use of [Natural Tables\n(TABLE)](https://wiki.contextgarden.net/TABLE) instead of the default\n[Extreme Tables (xtables)](https://wiki.contextgarden.net/xtables).\nNatural tables allow more fine-grained global customization but come\nat a performance penalty compared to extreme tables.\n\n### Extension: `tagging` ### {#extension--tagging}\n\nEnabling this extension with `context` output will produce markup\nsuitable for the production of tagged PDFs. This includes\nadditional markers for paragraphs and alternative markup for\nemphasized text. The `emphasis-command` template variable is set\nif the extension is enabled.\n\n\n# Pandoc's Markdown\n\nPandoc understands an extended and slightly revised version of\nJohn Gruber's [Markdown] syntax.  This document explains the syntax,\nnoting differences from original Markdown. Except where noted, these\ndifferences can be suppressed by using the `markdown_strict` format instead\nof `markdown`. Extensions can be enabled or disabled to specify the\nbehavior more granularly. They are described in the following. See also\n[Extensions] above, for extensions that work also on other formats.\n\n## Philosophy\n\nMarkdown is designed to be easy to write, and, even more importantly,\neasy to read:\n\n> A Markdown-formatted document should be publishable as-is, as plain\n> text, without looking like it's been marked up with tags or formatting\n> instructions.\\\n> -- [John Gruber](https://daringfireball.net/projects/markdown/syntax#philosophy)\n\nThis principle has guided pandoc's decisions in finding syntax for\ntables, footnotes, and other extensions.\n\nThere is, however, one respect in which pandoc's aims are different\nfrom the original aims of Markdown.  Whereas Markdown was originally\ndesigned with HTML generation in mind, pandoc is designed for multiple\noutput formats.  Thus, while pandoc allows the embedding of raw HTML,\nit discourages it, and provides other, non-HTMLish ways of representing\nimportant document elements like definition lists, tables, mathematics, and\nfootnotes.\n\n## Paragraphs\n\nA paragraph is one or more lines of text followed by one or more blank lines.\nNewlines are treated as spaces, so you can reflow your paragraphs as you like.\nIf you need a hard line break, put two or more spaces at the end of a line.\n\n### Extension: `escaped_line_breaks` ###\n\nA backslash followed by a newline is also a hard line break.\nNote:  in multiline and grid table cells, this is the only way\nto create a hard line break, since trailing spaces in the cells\nare ignored.\n\n## Headings\n\nThere are two kinds of headings: Setext and ATX.\n\n### Setext-style headings ###\n\nA setext-style heading is a line of text \"underlined\" with a row of `=` signs\n(for a level-one heading) or `-` signs (for a level-two heading):\n\n    A level-one heading\n    ===================\n\n    A level-two heading\n    -------------------\n\nThe heading text can contain inline formatting, such as emphasis (see\n[Inline formatting], below).\n\n\n### ATX-style headings ###\n\nAn ATX-style heading consists of one to six `#` signs and a line of\ntext, optionally followed by any number of `#` signs.  The number of\n`#` signs at the beginning of the line is the heading level:\n\n    ## A level-two heading\n\n    ### A level-three heading ###\n\nAs with setext-style headings, the heading text can contain formatting:\n\n    # A level-one heading with a [link](/url) and *emphasis*\n\n### Extension: `blank_before_header` ###\n\nOriginal Markdown syntax does not require a blank line before a heading.\nPandoc does require this (except, of course, at the beginning of the\ndocument). The reason for the requirement is that it is all too easy for a\n`#` to end up at the beginning of a line by accident (perhaps through line\nwrapping). Consider, for example:\n\n    I like several of their flavors of ice cream:\n    #22, for example, and #5.\n\n### Extension: `space_in_atx_header` ###\n\nMany Markdown implementations do not require a space between the\nopening `#`s of an ATX heading and the heading text, so that\n`#5 bolt` and `#hashtag` count as headings.  With this extension,\npandoc does require the space.\n\n### Heading identifiers ###\n\nSee also the [`auto_identifiers`\nextension](#extension-auto_identifiers) above.\n\n### Extension: `header_attributes` ###\n\nHeadings can be assigned attributes using this syntax at the end\nof the line containing the heading text:\n\n    {#identifier .class .class key=value key=value}\n\nThus, for example, the following headings will all be assigned the identifier\n`foo`:\n\n    # My heading {#foo}\n\n    ## My heading ##    {#foo}\n\n    My other heading   {#foo}\n    ---------------\n\n(This syntax is compatible with [PHP Markdown Extra].)\n\nNote that although this syntax allows assignment of classes and key/value\nattributes, writers generally don't use all of this information.  Identifiers,\nclasses, and key/value attributes are used in HTML and HTML-based formats such\nas EPUB and slidy.  Identifiers are used for labels and link anchors in the\nLaTeX, ConTeXt, Textile, Jira markup, and AsciiDoc writers.\n\nHeadings with the class `unnumbered` will not be numbered, even if\n`--number-sections` is specified.  A single hyphen (`-`) in an attribute\ncontext is equivalent to `.unnumbered`, and preferable in non-English\ndocuments.  So,\n\n    # My heading {-}\n\nis just the same as\n\n    # My heading {.unnumbered}\n\nIf the `unlisted` class is present in addition to `unnumbered`,\nthe heading will not be included in a table of contents.\n(Currently this feature is only implemented for certain\nformats: those based on LaTeX and HTML, PowerPoint, and RTF.)\n\n### Extension: `implicit_header_references` ###\n\nPandoc behaves as if reference links have been defined for each heading.\nSo, to link to a heading\n\n    # Heading identifiers in HTML\n\nyou can simply write\n\n    [Heading identifiers in HTML]\n\nor\n\n    [Heading identifiers in HTML][]\n\nor\n\n    [the section on heading identifiers][heading identifiers in\n    HTML]\n\ninstead of giving the identifier explicitly:\n\n    [Heading identifiers in HTML](#heading-identifiers-in-html)\n\nIf there are multiple headings with identical text, the corresponding\nreference will link to the first one only, and you will need to use explicit\nlinks to link to the others, as described above.\n\nLike regular reference links, these references are case-insensitive.\n\nExplicit link reference definitions always take priority over\nimplicit heading references.  So, in the following example, the\nlink will point to `bar`, not to `#foo`:\n\n    # Foo\n\n    [foo]: bar\n\n    See [foo]\n\n## Block quotations\n\nMarkdown uses email conventions for quoting blocks of text.\nA block quotation is one or more paragraphs or other block elements\n(such as lists or headings), with each line preceded by a `>` character\nand an optional space. (The `>` need not start at the left margin, but\nit should not be indented more than three spaces.)\n\n    > This is a block quote. This\n    > paragraph has two lines.\n    >\n    > 1. This is a list inside a block quote.\n    > 2. Second item.\n\nA \"lazy\" form, which requires the `>` character only on the first\nline of each block, is also allowed:\n\n    > This is a block quote. This\n    paragraph has two lines.\n\n    > 1. This is a list inside a block quote.\n    2. Second item.\n\nAmong the block elements that can be contained in a block quote are\nother block quotes. That is, block quotes can be nested:\n\n    > This is a block quote.\n    >\n    > > A block quote within a block quote.\n\nIf the `>` character is followed by an optional space, that space\nwill be considered part of the block quote marker and not part of\nthe indentation of the contents.  Thus, to put an indented code\nblock in a block quote, you need five spaces after the `>`:\n\n    >     code\n\n### Extension: `blank_before_blockquote` ###\n\nOriginal Markdown syntax does not require a blank line before a\nblock quote.  Pandoc does require this (except, of course, at\nthe beginning of the document). The reason for the requirement\nis that it is all too easy for a `>` to end up at the beginning\nof a line by accident (perhaps through line wrapping). So,\nunless the `markdown_strict` format is used, the following does\nnot produce a nested block quote in pandoc:\n\n    > This is a block quote.\n    >> Not nested, since `blank_before_blockquote` is enabled by default\n\n\n## Verbatim (code) blocks\n\n### Indented code blocks ###\n\nA block of text indented four spaces (or one tab) is treated as verbatim\ntext: that is, special characters do not trigger special formatting,\nand all spaces and line breaks are preserved.  For example,\n\n        if (a > 3) {\n          moveShip(5 * gravity, DOWN);\n        }\n\nThe initial (four space or one tab) indentation is not considered part\nof the verbatim text, and is removed in the output.\n\nNote: blank lines in the verbatim text need not begin with four spaces.\n\n\n### Fenced code blocks ###\n\n### Extension: `fenced_code_blocks` ###\n\nIn addition to standard indented code blocks, pandoc supports\n*fenced* code blocks.  These begin with a row of three or more\ntildes (`~`) and end with a row of tildes that must be at least as long as\nthe starting row. Everything between these lines is treated as code. No\nindentation is necessary:\n\n    ~~~~~~~\n    if (a > 3) {\n      moveShip(5 * gravity, DOWN);\n    }\n    ~~~~~~~\n\nLike regular code blocks, fenced code blocks must be separated\nfrom surrounding text by blank lines.\n\nIf the code itself contains a row of tildes or backticks, just use a longer\nrow of tildes or backticks at the start and end:\n\n    ~~~~~~~~~~~~~~~~\n    ~~~~~~~~~~\n    code including tildes\n    ~~~~~~~~~~\n    ~~~~~~~~~~~~~~~~\n\n### Extension: `backtick_code_blocks` ###\n\nSame as `fenced_code_blocks`, but uses backticks (`` ` ``) instead of tildes\n(`~`).\n\n### Extension: `fenced_code_attributes` ###\n\nOptionally, you may attach attributes to fenced or backtick code block using\nthis syntax:\n\n    ~~~~ {#mycode .haskell .numberLines startFrom=\"100\"}\n    qsort []     = []\n    qsort (x:xs) = qsort (filter (< x) xs) ++ [x] ++\n                   qsort (filter (>= x) xs)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHere `mycode` is an identifier, `haskell` and `numberLines` are\nclasses, and `startFrom` is an attribute with value `100`. Some\noutput formats can use this information to do syntax\nhighlighting. Currently, the only output formats that use this\ninformation are HTML, LaTeX, Docx, Ms, and PowerPoint. If\nhighlighting is supported for your output format and language,\nthen the code block above will appear highlighted, with numbered\nlines. (To see which languages are supported, type `pandoc\n--list-highlight-languages`.) Otherwise, the code block above\nwill appear as follows:\n\n    <pre id=\"mycode\" class=\"haskell numberLines\" startFrom=\"100\">\n      <code>\n      ...\n      </code>\n    </pre>\n\nThe `numberLines` (or `number-lines`) class will cause the lines\nof the code block to be numbered, starting with `1` or the value\nof the `startFrom` attribute.  The `lineAnchors` (or\n`line-anchors`) class will cause the lines to be clickable\nanchors in HTML output.\n\nA shortcut form can also be used for specifying the language of\nthe code block:\n\n    ```haskell\n    qsort [] = []\n    ```\n\nThis is equivalent to:\n\n    ``` {.haskell}\n    qsort [] = []\n    ```\n\nThis shortcut form may be combined with attributes:\n\n    ```haskell {.numberLines}\n    qsort [] = []\n    ```\n\nWhich is equivalent to:\n\n    ``` {.haskell .numberLines}\n    qsort [] = []\n    ```\n\nIf the `fenced_code_attributes` extension is disabled, but\ninput contains class attribute(s) for the code block, the first\nclass attribute will be printed after the opening fence as a bare\nword.\n\nTo prevent all highlighting, use the `--no-highlight` flag.\nTo set the highlighting style, use `--highlight-style`.\nFor more information on highlighting, see [Syntax highlighting],\nbelow.\n\n## Line blocks\n\n### Extension: `line_blocks` ###\n\nA line block is a sequence of lines beginning with a vertical bar (`|`)\nfollowed by a space.  The division into lines will be preserved in\nthe output, as will any leading spaces; otherwise, the lines will\nbe formatted as Markdown.  This is useful for verse and addresses:\n\n    | The limerick packs laughs anatomical\n    | In space that is quite economical.\n    |    But the good ones I've seen\n    |    So seldom are clean\n    | And the clean ones so seldom are comical\n\n    | 200 Main St.\n    | Berkeley, CA 94718\n\nThe lines can be hard-wrapped if needed, but the continuation\nline must begin with a space.\n\n    | The Right Honorable Most Venerable and Righteous Samuel L.\n      Constable, Jr.\n    | 200 Main St.\n    | Berkeley, CA 94718\n\nInline formatting (such as emphasis) is allowed in the content\n(though it can't cross line boundaries). Block-level formatting\n(such as block quotes or lists) is not recognized.\n\nThis syntax is borrowed from [reStructuredText].\n\n## Lists\n\n### Bullet lists ###\n\nA bullet list is a list of bulleted list items.  A bulleted list\nitem begins with a bullet (`*`, `+`, or `-`).  Here is a simple\nexample:\n\n    * one\n    * two\n    * three\n\nThis will produce a \"compact\" list. If you want a \"loose\" list, in which\neach item is formatted as a paragraph, put spaces between the items:\n\n    * one\n\n    * two\n\n    * three\n\nThe bullets need not be flush with the left margin; they may be\nindented one, two, or three spaces. The bullet must be followed\nby whitespace.\n\nList items look best if subsequent lines are flush with the first\nline (after the bullet):\n\n    * here is my first\n      list item.\n    * and my second.\n\nBut Markdown also allows a \"lazy\" format:\n\n    * here is my first\n    list item.\n    * and my second.\n\n### Block content in list items ###\n\nA list item may contain multiple paragraphs and other block-level\ncontent. However, subsequent paragraphs must be preceded by a blank line\nand indented to line up with the first non-space content after\nthe list marker.\n\n      * First paragraph.\n\n        Continued.\n\n      * Second paragraph. With a code block, which must be indented\n        eight spaces:\n\n            { code }\n\nException: if the list marker is followed by an indented code\nblock, which must begin 5 spaces after the list marker, then\nsubsequent paragraphs must begin two columns after the last\ncharacter of the list marker:\n\n    *     code\n\n      continuation paragraph\n\nList items may include other lists.  In this case the preceding blank\nline is optional.  The nested list must be indented to line up with\nthe first non-space character after the list marker of the\ncontaining list item.\n\n    * fruits\n      + apples\n        - macintosh\n        - red delicious\n      + pears\n      + peaches\n    * vegetables\n      + broccoli\n      + chard\n\nAs noted above, Markdown allows you to write list items \"lazily,\" instead of\nindenting continuation lines. However, if there are multiple paragraphs or\nother blocks in a list item, the first line of each must be indented.\n\n    + A lazy, lazy, list\n    item.\n\n    + Another one; this looks\n    bad but is legal.\n\n        Second paragraph of second\n    list item.\n\n### Ordered lists ###\n\nOrdered lists work just like bulleted lists, except that the items\nbegin with enumerators rather than bullets.\n\nIn original Markdown, enumerators are decimal numbers followed\nby a period and a space.  The numbers themselves are ignored, so\nthere is no difference between this list:\n\n    1.  one\n    2.  two\n    3.  three\n\nand this one:\n\n    5.  one\n    7.  two\n    1.  three\n\n### Extension: `fancy_lists` ###\n\nUnlike original Markdown, pandoc allows ordered list items to be marked\nwith uppercase and lowercase letters and roman numerals, in addition to\nArabic numerals. List markers may be enclosed in parentheses or followed by a\nsingle right-parenthesis or period. They must be separated from the\ntext that follows by at least one space, and, if the list marker is a\ncapital letter with a period, by at least two spaces.[^2]\n\n[^2]:  The point of this rule is to ensure that normal paragraphs\n    starting with people's initials, like\n\n        B. Russell won a Nobel Prize (but not for \"On Denoting\").\n\n    do not get treated as list items.\n\n    This rule will not prevent\n\n        (C) 2007 Joe Smith\n\n    from being interpreted as a list item.  In this case, a backslash\n    escape can be used:\n\n        (C\\) 2007 Joe Smith\n\nThe `fancy_lists` extension also allows '`#`' to be used as an\nordered list marker in place of a numeral:\n\n    #. one\n    #. two\n\nNote:  the '`#`' ordered list marker doesn't work with `commonmark`.\n\n### Extension: `startnum` ###\n\nPandoc also pays attention to the type of list marker used, and to the\nstarting number, and both of these are preserved where possible in the\noutput format. Thus, the following yields a list with numbers followed\nby a single parenthesis, starting with 9, and a sublist with lowercase\nroman numerals:\n\n     9)  Ninth\n    10)  Tenth\n    11)  Eleventh\n           i. subone\n          ii. subtwo\n         iii. subthree\n\nPandoc will start a new list each time a different type of list\nmarker is used.  So, the following will create three lists:\n\n    (2) Two\n    (5) Three\n    1.  Four\n    *   Five\n\nIf default list markers are desired, use `#.`:\n\n    #.  one\n    #.  two\n    #.  three\n\n### Extension: `task_lists` ###\n\nPandoc supports task lists, using the syntax of GitHub-Flavored Markdown.\n\n    - [ ] an unchecked task list item\n    - [x] checked item\n\n### Definition lists ###\n\n### Extension: `definition_lists` ###\n\nPandoc supports definition lists, using the syntax of\n[PHP Markdown Extra] with some extensions.[^3]\n\n    Term 1\n\n    :   Definition 1\n\n    Term 2 with *inline markup*\n\n    :   Definition 2\n\n            { some code, part of Definition 2 }\n\n        Third paragraph of definition 2.\n\nEach term must fit on one line, which may optionally be followed by\na blank line, and must be followed by one or more definitions.\nA definition begins with a colon or tilde, which may be indented one\nor two spaces.\n\nA term may have multiple definitions, and each definition may\nconsist of one or more block elements (paragraph, code block,\nlist, etc.), each indented four spaces or one tab stop.  The\nbody of the definition (not including the first line)\nshould be indented four spaces. However, as with\nother Markdown lists, you can \"lazily\" omit indentation except\nat the beginning of a paragraph or other block element:\n\n    Term 1\n\n    :   Definition\n    with lazy continuation.\n\n        Second paragraph of the definition.\n\nIf you leave space before the definition (as in the example above),\nthe text of the definition will be treated as a paragraph.  In some\noutput formats, this will mean greater spacing between term/definition\npairs. For a more compact definition list, omit the space before the\ndefinition:\n\n    Term 1\n      ~ Definition 1\n\n    Term 2\n      ~ Definition 2a\n      ~ Definition 2b\n\nNote that space between items in a definition list is required.\n(A variant that loosens this requirement, but disallows \"lazy\"\nhard wrapping, can be activated with the [`compact_definition_lists`\nextension][Extension: `compact_definition_lists`].)\n\n[^3]:  I have been influenced by the suggestions of [David\n  Wheeler](https://justatheory.com/2009/02/modest-markdown-proposal/).\n\n### Numbered example lists ###\n\n### Extension: `example_lists` ###\n\nThe special list marker `@` can be used for sequentially numbered\nexamples. The first list item with a `@` marker will be numbered '1',\nthe next '2', and so on, throughout the document. The numbered examples\nneed not occur in a single list; each new list using `@` will take up\nwhere the last stopped. So, for example:\n\n    (@)  My first example will be numbered (1).\n    (@)  My second example will be numbered (2).\n\n    Explanation of examples.\n\n    (@)  My third example will be numbered (3).\n\nNumbered examples can be labeled and referred to elsewhere in the\ndocument:\n\n    (@good)  This is a good example.\n\n    As (@good) illustrates, ...\n\nThe label can be any string of alphanumeric characters, underscores,\nor hyphens.\n\nContinuation paragraphs in example lists must always\nbe indented four spaces, regardless of the length of the\nlist marker.  That is, example lists always behave as if the\n`four_space_rule` extension is set.  This is because example\nlabels tend to be long, and indenting content to the\nfirst non-space character after the label would be awkward.\n\nYou can repeat an earlier numbered example by re-using its label:\n\n    (@foo) Sample sentence.\n\n    Intervening text...\n\n    This theory can explain the case we saw earlier (repeated):\n\n    (@foo) Sample sentence.\n\nThis only works reliably, though, if the repeated item is in a list\nby itself, because each numbered example list will be numbered\ncontinuously from its starting number.\n\n### Ending a list ###\n\nWhat if you want to put an indented code block after a list?\n\n    -   item one\n    -   item two\n\n        { my code block }\n\nTrouble! Here pandoc (like other Markdown implementations) will treat\n`{ my code block }` as the second paragraph of item two, and not as\na code block.\n\nTo \"cut off\" the list after item two, you can insert some non-indented\ncontent, like an HTML comment, which won't produce visible output in\nany format:\n\n    -   item one\n    -   item two\n\n    <!-- end of list -->\n\n        { my code block }\n\nYou can use the same trick if you want two consecutive lists instead\nof one big list:\n\n    1.  one\n    2.  two\n    3.  three\n\n    <!-- -->\n\n    1.  uno\n    2.  dos\n    3.  tres\n\n## Horizontal rules\n\nA line containing a row of three or more `*`, `-`, or `_` characters\n(optionally separated by spaces) produces a horizontal rule:\n\n    *  *  *  *\n\n    ---------------\n\nWe strongly recommend that horizontal rules be separated from\nsurrounding text by blank lines.  If a horizontal rule is not\nfollowed by a blank line, pandoc may try to interpret the\nlines that follow as a YAML metadata block or a table.\n\n## Tables\n\nFour kinds of tables may be used. The first three kinds presuppose the use of\na fixed-width font, such as Courier. The fourth kind can be used with\nproportionally spaced fonts, as it does not require lining up columns.\n\n### Extension: `table_captions` ###\n\nA caption may optionally be provided with all 4 kinds of tables (as\nillustrated in the examples below). A caption is a paragraph beginning\nwith the string `Table:` (or `table:` or just `:`), which will be stripped\noff. It may appear either before or after the table.\n\n### Extension: `simple_tables` ###\n\nSimple tables look like this:\n\n      Right     Left     Center     Default\n    -------     ------ ----------   -------\n         12     12        12            12\n        123     123       123          123\n          1     1          1             1\n\n    Table:  Demonstration of simple table syntax.\n\nThe header and table rows must each fit on one line.  Column\nalignments are determined by the position of the header text relative\nto the dashed line below it:[^4]\n\n  - If the dashed line is flush with the header text on the right side\n    but extends beyond it on the left, the column is right-aligned.\n  - If the dashed line is flush with the header text on the left side\n    but extends beyond it on the right, the column is left-aligned.\n  - If the dashed line extends beyond the header text on both sides,\n    the column is centered.\n  - If the dashed line is flush with the header text on both sides,\n    the default alignment is used (in most cases, this will be left).\n\n[^4]:  This scheme is due to Michel Fortin, who proposed it on the\n       [Markdown discussion list](http://six.pairlist.net/pipermail/markdown-discuss/2005-March/001097.html).\n\nThe table must end with a blank line, or a line of dashes followed by\na blank line.\n\nThe column header row may be omitted, provided a dashed line is used\nto end the table. For example:\n\n    -------     ------ ----------   -------\n         12     12        12             12\n        123     123       123           123\n          1     1          1              1\n    -------     ------ ----------   -------\n\nWhen the header row is omitted, column alignments are determined on the basis\nof the first line of the table body. So, in the tables above, the columns\nwould be right, left, center, and right aligned, respectively.\n\n### Extension: `multiline_tables` ###\n\nMultiline tables allow header and table rows to span multiple lines\nof text (but cells that span multiple columns or rows of the table are\nnot supported).  Here is an example:\n\n    -------------------------------------------------------------\n     Centered   Default           Right Left\n      Header    Aligned         Aligned Aligned\n    ----------- ------- --------------- -------------------------\n       First    row                12.0 Example of a row that\n                                        spans multiple lines.\n\n      Second    row                 5.0 Here's another one. Note\n                                        the blank line between\n                                        rows.\n    -------------------------------------------------------------\n\n    Table: Here's the caption. It, too, may span\n    multiple lines.\n\nThese work like simple tables, but with the following differences:\n\n  - They must begin with a row of dashes, before the header text\n    (unless the header row is omitted).\n  - They must end with a row of dashes, then a blank line.\n  - The rows must be separated by blank lines.\n\nIn multiline tables, the table parser pays attention to the widths of\nthe columns, and the writers try to reproduce these relative widths in\nthe output. So, if you find that one of the columns is too narrow in the\noutput, try widening it in the Markdown source.\n\nThe header may be omitted in multiline tables as well as simple tables:\n\n    ----------- ------- --------------- -------------------------\n       First    row                12.0 Example of a row that\n                                        spans multiple lines.\n\n      Second    row                 5.0 Here's another one. Note\n                                        the blank line between\n                                        rows.\n    ----------- ------- --------------- -------------------------\n\n    : Here's a multiline table without a header.\n\nIt is possible for a multiline table to have just one row, but the row\nshould be followed by a blank line (and then the row of dashes that ends\nthe table), or the table may be interpreted as a simple table.\n\n### Extension: `grid_tables` ###\n\nGrid tables look like this:\n\n    : Sample grid table.\n\n    +---------------+---------------+--------------------+\n    | Fruit         | Price         | Advantages         |\n    +===============+===============+====================+\n    | Bananas       | $1.34         | - built-in wrapper |\n    |               |               | - bright color     |\n    +---------------+---------------+--------------------+\n    | Oranges       | $2.10         | - cures scurvy     |\n    |               |               | - tasty            |\n    +---------------+---------------+--------------------+\n\nThe row of `=`s separates the header from the table body,\nand can be omitted for a headerless table. The cells of grid\ntables may contain arbitrary block elements (multiple\nparagraphs, code blocks, lists, etc.).\n\nCells can span multiple columns or rows:\n\n    +---------------------+----------+\n    | Property            | Earth    |\n    +=============+=======+==========+\n    |             | min   | -89.2 ¬∞C |\n    | Temperature +-------+----------+\n    | 1961-1990   | mean  | 14 ¬∞C    |\n    |             +-------+----------+\n    |             | max   | 56.7 ¬∞C  |\n    +-------------+-------+----------+\n\nA table header may contain more than one row:\n\n    +---------------------+-----------------------+\n    | Location            | Temperature 1961-1990 |\n    |                     | in degree Celsius     |\n    |                     +-------+-------+-------+\n    |                     | min   | mean  | max   |\n    +=====================+=======+=======+=======+\n    | Antarctica          | -89.2 | N/A   | 19.8  |\n    +---------------------+-------+-------+-------+\n    | Earth               | -89.2 | 14    | 56.7  |\n    +---------------------+-------+-------+-------+\n\nAlignments can be specified as with pipe tables, by putting\ncolons at the boundaries of the separator line after the\nheader:\n\n    +---------------+---------------+--------------------+\n    | Right         | Left          | Centered           |\n    +==============:+:==============+:==================:+\n    | Bananas       | $1.34         | built-in wrapper   |\n    +---------------+---------------+--------------------+\n\nFor headerless tables, the colons go on the top line instead:\n\n    +--------------:+:--------------+:------------------:+\n    | Right         | Left          | Centered           |\n    +---------------+---------------+--------------------+\n\nA table foot can be defined by enclosing it with separator lines\nthat use `=` instead of `-`:\n\n     +---------------+---------------+\n     | Fruit         | Price         |\n     +===============+===============+\n     | Bananas       | $1.34         |\n     +---------------+---------------+\n     | Oranges       | $2.10         |\n     +===============+===============+\n     | Sum           | $3.44         |\n     +===============+===============+\n\nThe foot must always be placed at the very bottom of the table.\n\nGrid tables can be created easily using Emacs' table-mode\n(`M-x table-insert`).\n\n### Extension: `pipe_tables` ###\n\nPipe tables look like this:\n\n    | Right | Left | Default | Center |\n    |------:|:-----|---------|:------:|\n    |   12  |  12  |    12   |    12  |\n    |  123  |  123 |   123   |   123  |\n    |    1  |    1 |     1   |     1  |\n\n      : Demonstration of pipe table syntax.\n\nThe syntax is identical to [PHP Markdown Extra tables].  The beginning and\nending pipe characters are optional, but pipes are required between all\ncolumns.  The colons indicate column alignment as shown.  The header\ncannot be omitted.  To simulate a headerless table, include a header\nwith blank cells.\n\nSince the pipes indicate column boundaries, columns need not be vertically\naligned, as they are in the above example.  So, this is a perfectly\nlegal (though ugly) pipe table:\n\n    fruit| price\n    -----|-----:\n    apple|2.05\n    pear|1.37\n    orange|3.09\n\nThe cells of pipe tables cannot contain block elements like paragraphs\nand lists, and cannot span multiple lines.  If any line of the\nMarkdown source is longer than the column width (see `--columns`),\nthen the table will take up the full text width and the cell\ncontents will wrap, with the relative cell widths determined by\nthe number of dashes in the line separating the table header\nfrom the table body. (For example `---|-` would make the first column 3/4\nand the second column 1/4 of the full text width.)\nOn the other hand, if no lines are wider than column width, then\ncell contents will not be wrapped, and the cells will be sized\nto their contents.\n\nNote:  pandoc also recognizes pipe tables of the following\nform, as can be produced by Emacs' orgtbl-mode:\n\n    | One | Two   |\n    |-----+-------|\n    | my  | table |\n    | is  | nice  |\n\nThe difference is that `+` is used instead of `|`. Other orgtbl features\nare not supported. In particular, to get non-default column alignment,\nyou'll need to add colons as above.\n\n[PHP Markdown Extra tables]: https://michelf.ca/projects/php-markdown/extra/#table\n\n## Metadata blocks\n\n### Extension: `pandoc_title_block` ###\n\nIf the file begins with a title block\n\n    % title\n    % author(s) (separated by semicolons)\n    % date\n\nit will be parsed as bibliographic information, not regular text.  (It\nwill be used, for example, in the title of standalone LaTeX or HTML\noutput.)  The block may contain just a title, a title and an author,\nor all three elements. If you want to include an author but no\ntitle, or a title and a date but no author, you need a blank line:\n\n```\n%\n% Author\n```\n\n```\n% My title\n%\n% June 15, 2006\n```\n\nThe title may occupy multiple lines, but continuation lines must\nbegin with leading space, thus:\n\n```\n% My title\n  on multiple lines\n```\n\nIf a document has multiple authors, the authors may be put on\nseparate lines with leading space, or separated by semicolons, or\nboth.  So, all of the following are equivalent:\n\n```\n% Author One\n  Author Two\n```\n\n```\n% Author One; Author Two\n```\n\n```\n% Author One;\n  Author Two\n```\n\nThe date must fit on one line.\n\nAll three metadata fields may contain standard inline formatting\n(italics, links, footnotes, etc.).\n\nTitle blocks will always be parsed, but they will affect the output only\nwhen the `--standalone` (`-s`) option is chosen. In HTML output, titles\nwill appear twice: once in the document head---this is the title that\nwill appear at the top of the window in a browser---and once at the\nbeginning of the document body. The title in the document head can have\nan optional prefix attached (`--title-prefix` or `-T` option). The title\nin the body appears as an H1 element with class \"title\", so it can be\nsuppressed or reformatted with CSS. If a title prefix is specified with\n`-T` and no title block appears in the document, the title prefix will\nbe used by itself as the HTML title.\n\nThe man page writer extracts a title, man page section number, and\nother header and footer information from the title line. The title\nis assumed to be the first word on the title line, which may optionally\nend with a (single-digit) section number in parentheses. (There should\nbe no space between the title and the parentheses.)  Anything after\nthis is assumed to be additional footer and header text. A single pipe\ncharacter (`|`) should be used to separate the footer text from the header\ntext.  Thus,\n\n    % PANDOC(1)\n\nwill yield a man page with the title `PANDOC` and section 1.\n\n    % PANDOC(1) Pandoc User Manuals\n\nwill also have \"Pandoc User Manuals\" in the footer.\n\n    % PANDOC(1) Pandoc User Manuals | Version 4.0\n\nwill also have \"Version 4.0\" in the header.\n\n### Extension: `yaml_metadata_block` ###\n\nA [YAML] metadata block is a valid YAML object, delimited by a line of three\nhyphens (`---`) at the top and a line of three hyphens (`---`) or three dots\n(`...`) at the bottom.  The initial line `---` must not be followed by a blank\nline. A YAML metadata block may occur anywhere in the document, but if\nit is not at the beginning, it must be preceded by a blank line.\n\nNote that, because of the way pandoc concatenates input files\nwhen several are provided, you may also keep the metadata in a\nseparate YAML file and pass it to pandoc as an argument, along\nwith your Markdown files:\n\n    pandoc chap1.md chap2.md chap3.md metadata.yaml -s -o book.html\n\nJust be sure that the YAML file begins with `---` and ends with `---` or\n`...`. Alternatively, you can use the `--metadata-file` option. Using\nthat approach however, you cannot reference content (like footnotes)\nfrom the main Markdown input document.\n\nMetadata will be taken from the fields of the YAML object and added to any\nexisting document metadata.  Metadata can contain lists and objects (nested\narbitrarily), but all string scalars will be interpreted as Markdown.  Fields\nwith names ending in an underscore will be ignored by pandoc.  (They may be\ngiven a role by external processors.)  Field names must not be\ninterpretable as YAML numbers or boolean values (so, for\nexample, `yes`, `True`, and `15` cannot be used as field names).\n\nA document may contain multiple metadata blocks.  If two\nmetadata blocks attempt to set the same field, the value from\nthe second block will be taken.\n\nEach metadata block is handled internally as an independent YAML document.\nThis means, for example, that any YAML anchors defined in a block cannot be\nreferenced in another block.\n\nWhen pandoc is used with `-t markdown` to create a Markdown document,\na YAML metadata block will be produced only if the `-s/--standalone`\noption is used.  All of the metadata will appear in a single block\nat the beginning of the document.\n\nNote that [YAML] escaping rules must be followed. Thus, for example,\nif a title contains a colon, it must be quoted, and if it contains a\nbackslash escape, then it must be ensured that it is not treated as a\n[YAML escape sequence]. The pipe character (`|`) can be used to begin\nan indented block that will be interpreted literally, without need for\nescaping. This form is necessary when the field contains blank lines\nor block-level formatting:\n\n    ---\n    title:  'This is the title: it contains a colon'\n    author:\n    - Author One\n    - Author Two\n    keywords: [nothing, nothingness]\n    abstract: |\n      This is the abstract.\n\n      It consists of two paragraphs.\n    ...\n\nThe literal block after the `|` must be indented relative to the\nline containing the `|`.  If it is not, the YAML will be invalid\nand pandoc will not interpret it as metadata.  For an overview\nof the complex rules governing YAML, see the [Wikipedia entry on\nYAML syntax].\n\nTemplate variables will be set automatically from the metadata.  Thus, for\nexample, in writing HTML, the variable `abstract` will be set to the HTML\nequivalent of the Markdown in the `abstract` field:\n\n    <p>This is the abstract.</p>\n    <p>It consists of two paragraphs.</p>\n\nVariables can contain arbitrary YAML structures, but the template must match\nthis structure.  The `author` variable in the default templates expects a\nsimple list or string, but can be changed to support more complicated\nstructures.  The following combination, for example, would add an affiliation\nto the author if one is given:\n\n    ---\n    title: The document title\n    author:\n    - name: Author One\n      affiliation: University of Somewhere\n    - name: Author Two\n      affiliation: University of Nowhere\n    ...\n\nTo use the structured authors in the example above, you would need a custom\ntemplate:\n\n    $for(author)$\n    $if(author.name)$\n    $author.name$$if(author.affiliation)$ ($author.affiliation$)$endif$\n    $else$\n    $author$\n    $endif$\n    $endfor$\n\nRaw content to include in the document's header may be specified\nusing `header-includes`; however, it is important to mark up\nthis content as raw code for a particular output format, using\nthe [`raw_attribute` extension](#extension-raw_attribute), or it\nwill be interpreted as Markdown. For example:\n\n    header-includes:\n    - |\n      ```{=latex}\n      \\let\\oldsection\\section\n      \\renewcommand{\\section}[1]{\\clearpage\\oldsection{#1}}\n      ```\n\nNote:  the `yaml_metadata_block` extension works with\n`commonmark` as well as `markdown` (and it is enabled by default\nin `gfm` and `commonmark_x`).  However, in these formats the\nfollowing restrictions apply:\n\n- The YAML metadata block must occur at the beginning of the\n  document (and there can be only one).  If multiple files are\n  given as arguments to pandoc, only the first can be a YAML\n  metadata block.\n\n- The leaf nodes of the YAML structure are parsed in isolation from\n  each other and from the rest of the document.  So, for\n  example,  you can't use a reference link in these contexts\n  if the link definition is somewhere else in the document.\n\n[YAML escape sequence]: https://yaml.org/spec/1.2/spec.html#id2776092\n[Wikipedia entry on YAML syntax]:  https://en.wikipedia.org/wiki/YAML#Syntax\n\n## Backslash escapes\n\n### Extension: `all_symbols_escapable` ###\n\nExcept inside a code block or inline code, any punctuation or space\ncharacter preceded by a backslash will be treated literally, even if it\nwould normally indicate formatting.  Thus, for example, if one writes\n\n    *\\*hello\\**\n\none will get\n\n    <em>*hello*</em>\n\ninstead of\n\n    <strong>hello</strong>\n\nThis rule is easier to remember than original Markdown's rule,\nwhich allows only the following characters to be backslash-escaped:\n\n    \\`*_{}[]()>#+-.!\n\n(However, if the `markdown_strict` format is used, the original Markdown rule\nwill be used.)\n\nA backslash-escaped space is parsed as a nonbreaking space. In TeX output,\nit will appear as `~`. In HTML and XML output, it will appear as a\nliteral unicode nonbreaking space character (note that it will thus\nactually look \"invisible\" in the generated HTML source; you can still\nuse the `--ascii` command-line option to make it appear as an explicit\nentity).\n\nA backslash-escaped newline (i.e. a backslash occurring at the end of\na line) is parsed as a hard line break.  It will appear in TeX output as\n`\\\\` and in HTML as `<br />`.  This is a nice alternative to\nMarkdown's \"invisible\" way of indicating hard line breaks using\ntwo trailing spaces on a line.\n\nBackslash escapes do not work in verbatim contexts.\n\n## Inline formatting\n\n### Emphasis ###\n\nTo *emphasize* some text, surround it with `*`s or `_`, like this:\n\n    This text is _emphasized with underscores_, and this\n    is *emphasized with asterisks*.\n\nDouble `*` or `_` produces **strong emphasis**:\n\n    This is **strong emphasis** and __with underscores__.\n\nA `*` or `_` character surrounded by spaces, or backslash-escaped,\nwill not trigger emphasis:\n\n    This is * not emphasized *, and \\*neither is this\\*.\n\n### Extension: `intraword_underscores` ###\n\nBecause `_` is sometimes used inside words and identifiers,\npandoc does not interpret a `_` surrounded by alphanumeric\ncharacters as an emphasis marker.  If you want to emphasize\njust part of a word, use `*`:\n\n    feas*ible*, not feas*able*.\n\n### Strikeout ###\n\n### Extension: `strikeout` ###\n\nTo strike out a section of text with a horizontal line, begin and end it\nwith `~~`. Thus, for example,\n\n    This ~~is deleted text.~~\n\n\n### Superscripts and subscripts ###\n\n### Extension: `superscript`, `subscript` ###\n\nSuperscripts may be written by surrounding the superscripted text by `^`\ncharacters; subscripts may be written by surrounding the subscripted\ntext by `~` characters.  Thus, for example,\n\n    H~2~O is a liquid.  2^10^ is 1024.\n\nThe text between `^...^` or `~...~` may not contain spaces or\nnewlines.  If the superscripted or subscripted text contains\nspaces, these spaces must be escaped with backslashes.  (This is\nto prevent accidental superscripting and subscripting through\nthe ordinary use of `~` and `^`, and also bad interactions with\nfootnotes.) Thus, if you want the letter P with 'a cat' in\nsubscripts, use `P~a\\ cat~`, not `P~a cat~`.\n\n### Verbatim ###\n\nTo make a short span of text verbatim, put it inside backticks:\n\n    What is the difference between `>>=` and `>>`?\n\nIf the verbatim text includes a backtick, use double backticks:\n\n    Here is a literal backtick `` ` ``.\n\n(The spaces after the opening backticks and before the closing\nbackticks will be ignored.)\n\nThe general rule is that a verbatim span starts with a string\nof consecutive backticks (optionally followed by a space)\nand ends with a string of the same number of backticks (optionally\npreceded by a space).\n\nNote that backslash-escapes (and other Markdown constructs) do not\nwork in verbatim contexts:\n\n    This is a backslash followed by an asterisk: `\\*`.\n\n### Extension: `inline_code_attributes` ###\n\nAttributes can be attached to verbatim text, just as with\n[fenced code blocks]:\n\n    `<$>`{.haskell}\n\n### Underline ###\n\nTo underline text, use the `underline` class:\n\n    [Underline]{.underline}\n\nOr, without the `bracketed_spans` extension (but with `native_spans`):\n\n    <span class=\"underline\">Underline</span>\n\nThis will work in all output formats that support underline.\n\n### Small caps ###\n\nTo write small caps, use the `smallcaps` class:\n\n    [Small caps]{.smallcaps}\n\nOr, without the `bracketed_spans` extension:\n\n    <span class=\"smallcaps\">Small caps</span>\n\nFor compatibility with other Markdown flavors, CSS is also supported:\n\n    <span style=\"font-variant:small-caps;\">Small caps</span>\n\nThis will work in all output formats that support small caps.\n\n### Highlighting ###\n\nTo highlight text, use the `mark` class:\n\n    [Mark]{.mark}\n\nOr, without the `bracketed_spans` extension (but with `native_spans`):\n\n    <span class=\"mark\">Mark</span>\n\nThis will work in all output formats that support highlighting.\n\n\n## Math\n\n### Extension: `tex_math_dollars` ###\n\nAnything between two `$` characters will be treated as TeX math.  The\nopening `$` must have a non-space character immediately to its right,\nwhile the closing `$` must have a non-space character immediately to its\nleft, and must not be followed immediately by a digit.  Thus,\n`$20,000 and $30,000` won't parse as math.  If for some reason\nyou need to enclose text in literal `$` characters, backslash-escape\nthem and they won't be treated as math delimiters.\n\nFor display math, use `$$` delimiters.  (In this case, the delimiters\nmay be separated from the formula by whitespace.  However, there can be\nno blank lines between the opening and closing `$$` delimiters.)\n\nTeX math will be printed in all output formats. How it is rendered\ndepends on the output format:\n\nLaTeX\n  ~ It will appear verbatim surrounded by `\\(...\\)` (for inline\n    math) or `\\[...\\]` (for display math).\n\nMarkdown, Emacs Org mode, ConTeXt, ZimWiki\n  ~ It will appear verbatim surrounded by `$...$` (for inline\n    math) or `$$...$$` (for display math).\n\nXWiki\n  ~ It will appear verbatim surrounded by `{{formula}}..{{/formula}}`.\n\nreStructuredText\n  ~ It will be rendered using an [interpreted text role `:math:`].\n\nAsciiDoc\n  ~ For AsciiDoc output math will appear verbatim surrounded by\n    `latexmath:[...]`. For `asciidoc_legacy` the bracketed\n    material will also include inline or display math delimiters.\n\nTexinfo\n  ~ It will be rendered inside a `@math` command.\n\nroff man, Jira markup\n  ~ It will be rendered verbatim without `$`'s.\n\nMediaWiki, DokuWiki\n  ~ It will be rendered inside `<math>` tags.\n\nTextile\n  ~ It will be rendered inside `<span class=\"math\">` tags.\n\nRTF, OpenDocument\n  ~ It will be rendered, if possible, using Unicode characters,\n    and will otherwise appear verbatim.\n\nODT\n  ~ It will be rendered, if possible, using MathML.\n\nDocBook\n  ~ If the `--mathml` flag is used, it will be rendered using MathML\n    in an `inlineequation` or `informalequation` tag.  Otherwise it\n    will be rendered, if possible, using Unicode characters.\n\nDocx and PowerPoint\n  ~ It will be rendered using OMML math markup.\n\nFictionBook2\n  ~ If the `--webtex` option is used, formulas are rendered as images\n    using CodeCogs or other compatible web service, downloaded\n    and embedded in the e-book. Otherwise, they will appear verbatim.\n\nHTML, Slidy, DZSlides, S5, EPUB\n  ~ The way math is rendered in HTML will depend on the\n    command-line options selected. Therefore see [Math rendering in HTML]\n    above.\n\n[interpreted text role `:math:`]: https://docutils.sourceforge.io/docs/ref/rst/roles.html#math\n\n## Raw HTML\n\n### Extension: `raw_html` ###\n\nMarkdown allows you to insert raw HTML (or DocBook) anywhere in a document\n(except verbatim contexts, where `<`, `>`, and `&` are interpreted\nliterally).  (Technically this is not an extension, since standard\nMarkdown allows it, but it has been made an extension so that it can\nbe disabled if desired.)\n\nThe raw HTML is passed through unchanged in HTML, S5, Slidy, Slideous,\nDZSlides, EPUB, Markdown, CommonMark, Emacs Org mode, and Textile\noutput, and suppressed in other formats.\n\nFor a more explicit way of including raw HTML in a Markdown\ndocument, see the [`raw_attribute` extension][Extension: `raw_attribute`].\n\nIn the CommonMark format, if `raw_html` is enabled, superscripts,\nsubscripts, strikeouts and small capitals will be represented as HTML.\nOtherwise, plain-text fallbacks will be used. Note that even if\n`raw_html` is disabled, tables will be rendered with HTML syntax if\nthey cannot use pipe syntax.\n\n### Extension: `markdown_in_html_blocks` ###\n\nOriginal Markdown allows you to include HTML \"blocks\":  blocks\nof HTML between balanced tags that are separated from the surrounding text\nwith blank lines, and start and end at the left margin.  Within\nthese blocks, everything is interpreted as HTML, not Markdown;\nso (for example), `*` does not signify emphasis.\n\nPandoc behaves this way when the `markdown_strict` format is used; but\nby default, pandoc interprets material between HTML block tags as Markdown.\nThus, for example, pandoc will turn\n\n    <table>\n    <tr>\n    <td>*one*</td>\n    <td>[a link](https://google.com)</td>\n    </tr>\n    </table>\n\ninto\n\n    <table>\n    <tr>\n    <td><em>one</em></td>\n    <td><a href=\"https://google.com\">a link</a></td>\n    </tr>\n    </table>\n\nwhereas `Markdown.pl` will preserve it as is.\n\nThere is one exception to this rule:  text between `<script>`,\n`<style>`, `<pre>`, and `<textarea>` tags is not interpreted as Markdown.\n\nThis departure from original Markdown should make it easier to mix\nMarkdown with HTML block elements.  For example, one can surround\na block of Markdown text with `<div>` tags without preventing it\nfrom being interpreted as Markdown.\n\n### Extension: `native_divs` ###\n\nUse native pandoc `Div` blocks for content inside `<div>` tags.\nFor the most part this should give the same output as\n`markdown_in_html_blocks`, but it makes it easier to write pandoc\nfilters to manipulate groups of blocks.\n\n### Extension: `native_spans` ###\n\nUse native pandoc `Span` blocks for content inside `<span>` tags.\nFor the most part this should give the same output as `raw_html`,\nbut it makes it easier to write pandoc filters to manipulate groups\nof inlines.\n\n### Extension: `raw_tex` ###\n\nIn addition to raw HTML, pandoc allows raw LaTeX, TeX, and ConTeXt to be\nincluded in a document. Inline TeX commands will be preserved and passed\nunchanged to the LaTeX and ConTeXt writers. Thus, for example, you can use\nLaTeX to include BibTeX citations:\n\n    This result was proved in \\cite{jones.1967}.\n\nNote that in LaTeX environments, like\n\n    \\begin{tabular}{|l|l|}\\hline\n    Age & Frequency \\\\ \\hline\n    18--25  & 15 \\\\\n    26--35  & 33 \\\\\n    36--45  & 22 \\\\ \\hline\n    \\end{tabular}\n\nthe material between the begin and end tags will be interpreted as raw\nLaTeX, not as Markdown.\n\nFor a more explicit and flexible way of including raw TeX in a\nMarkdown document, see the [`raw_attribute`\nextension][Extension: `raw_attribute`].\n\nInline LaTeX is ignored in output formats other than Markdown, LaTeX,\nEmacs Org mode, and ConTeXt.\n\n### Generic raw attribute ###\n\n### Extension: `raw_attribute` ###\n\nInline spans and fenced code blocks with a special\nkind of attribute will be parsed as raw content with the\ndesignated format.  For example, the following produces a raw\nroff `ms` block:\n\n    ```{=ms}\n    .MYMACRO\n    blah blah\n    ```\nAnd the following produces a raw `html` inline element:\n\n    This is `<a>html</a>`{=html}\n\nThis can be useful to insert raw xml into `docx` documents, e.g.\na pagebreak:\n\n    ```{=openxml}\n    <w:p>\n      <w:r>\n        <w:br w:type=\"page\"/>\n      </w:r>\n    </w:p>\n    ```\n\nThe format name should match the target format name (see\n`-t/--to`, above, for a list, or use `pandoc\n--list-output-formats`). Use `openxml` for `docx` output,\n`opendocument` for `odt` output, `html5` for `epub3` output,\n`html4` for `epub2` output, and `latex`, `beamer`,\n`ms`, or `html5` for `pdf` output (depending on what you\nuse for `--pdf-engine`).\n\nThis extension presupposes that the relevant kind of\ninline code or fenced code block is enabled.  Thus, for\nexample, to use a raw attribute with a backtick code block,\n`backtick_code_blocks` must be enabled.\n\nThe raw attribute cannot be combined with regular attributes.\n\n## LaTeX macros\n\n### Extension: `latex_macros` ###\n\nWhen this extension is enabled, pandoc will parse LaTeX\nmacro definitions and apply the resulting macros to all LaTeX\nmath and raw LaTeX.  So, for example, the following will work in\nall output formats, not just LaTeX:\n\n    \\newcommand{\\tuple}[1]{\\langle #1 \\rangle}\n\n    $\\tuple{a, b, c}$\n\nNote that LaTeX macros will not be applied if they occur\ninside a raw span or block marked with the\n[`raw_attribute` extension](#extension-raw_attribute).\n\nWhen `latex_macros` is disabled, the raw LaTeX and math will\nnot have macros applied. This is usually a better approach when\nyou are targeting LaTeX or PDF.\n\nMacro definitions in LaTeX will be passed through as raw LaTeX\nonly if `latex_macros` is not enabled.  Macro definitions in\nMarkdown source (or other formats allowing `raw_tex`) will\nbe passed through regardless of whether `latex_macros` is\nenabled.\n\n## Links\n\nMarkdown allows links to be specified in several ways.\n\n### Automatic links ###\n\nIf you enclose a URL or email address in pointy brackets, it\nwill become a link:\n\n    <https://google.com>\n    <sam@green.eggs.ham>\n\n### Inline links ###\n\nAn inline link consists of the link text in square brackets,\nfollowed by the URL in parentheses. (Optionally, the URL can\nbe followed by a link title, in quotes.)\n\n    This is an [inline link](/url), and here's [one with\n    a title](https://fsf.org \"click here for a good time!\").\n\nThere can be no space between the bracketed part and the parenthesized part.\nThe link text can contain formatting (such as emphasis), but the title cannot.\n\nEmail addresses in inline links are not autodetected, so they have to be\nprefixed with `mailto`:\n\n    [Write me!](mailto:sam@green.eggs.ham)\n\n### Reference links ###\n\nAn *explicit* reference link has two parts, the link itself and the link\ndefinition, which may occur elsewhere in the document (either\nbefore or after the link).\n\nThe link consists of link text in square brackets, followed by a label in\nsquare brackets. (There cannot be space between the two unless the\n`spaced_reference_links` extension is enabled.) The link definition\nconsists of the bracketed label, followed by a colon and a space, followed by\nthe URL, and optionally (after a space) a link title either in quotes or in\nparentheses.  The label must not be parseable as a citation (assuming\nthe `citations` extension is enabled):  citations take precedence over\nlink labels.\n\nHere are some examples:\n\n    [my label 1]: /foo/bar.html  \"My title, optional\"\n    [my label 2]: /foo\n    [my label 3]: https://fsf.org (The Free Software Foundation)\n    [my label 4]: /bar#special  'A title in single quotes'\n\nThe URL may optionally be surrounded by angle brackets:\n\n    [my label 5]: <http://foo.bar.baz>\n\nThe title may go on the next line:\n\n    [my label 3]: https://fsf.org\n      \"The Free Software Foundation\"\n\nNote that link labels are not case sensitive.  So, this will work:\n\n    Here is [my link][FOO]\n\n    [Foo]: /bar/baz\n\nIn an *implicit* reference link, the second pair of brackets is\nempty:\n\n    See [my website][].\n\n    [my website]: http://foo.bar.baz\n\nNote:  In `Markdown.pl` and most other Markdown implementations,\nreference link definitions cannot occur in nested constructions\nsuch as list items or block quotes.  Pandoc lifts this\narbitrary-seeming restriction.  So the following is fine in pandoc,\nthough not in most other implementations:\n\n    > My block [quote].\n    >\n    > [quote]: /foo\n\n### Extension: `shortcut_reference_links` ###\n\nIn a *shortcut* reference link, the second pair of brackets may\nbe omitted entirely:\n\n    See [my website].\n\n    [my website]: http://foo.bar.baz\n\n### Internal links ###\n\nTo link to another section of the same document, use the automatically\ngenerated identifier (see [Heading identifiers]). For example:\n\n    See the [Introduction](#introduction).\n\nor\n\n    See the [Introduction].\n\n    [Introduction]: #introduction\n\nInternal links are currently supported for HTML formats (including\nHTML slide shows and EPUB), LaTeX, and ConTeXt.\n\n## Images\n\nA link immediately preceded by a `!` will be treated as an image.\nThe link text will be used as the image's alt text:\n\n    ![la lune](lalune.jpg \"Voyage to the moon\")\n\n    ![movie reel]\n\n    [movie reel]: movie.gif\n\n### Extension: `implicit_figures` ###\n\nAn image with nonempty alt text, occurring by itself in a\nparagraph, will be rendered as a figure with a caption.  The\nimage's alt text will be used as the caption.\n\n    ![This is the caption](/url/of/image.png)\n\nHow this is rendered depends on the output format. Some output\nformats (e.g. RTF) do not yet support figures.  In those\nformats, you'll just get an image in a paragraph by itself, with\nno caption.\n\nIf you just want a regular inline image, just make sure it is not\nthe only thing in the paragraph. One way to do this is to insert a\nnonbreaking space after the image:\n\n    ![This image won't be a figure](/url/of/image.png)\\\n\nNote that in reveal.js slide shows, an image in a paragraph\nby itself that has the `r-stretch` class will fill the screen,\nand the caption and figure tags will be omitted.\n\n### Extension: `link_attributes` ###\n\nAttributes can be set on links and images:\n\n    An inline ![image](foo.jpg){#id .class width=30 height=20px}\n    and a reference ![image][ref] with attributes.\n\n    [ref]: foo.jpg \"optional title\" {#id .class key=val key2=\"val 2\"}\n\n(This syntax is compatible with [PHP Markdown Extra] when only `#id`\nand `.class` are used.)\n\nFor HTML and EPUB, all known HTML5 attributes except `width` and\n`height` (but including `srcset` and `sizes`) are passed through\nas is. Unknown attributes are passed through as custom\nattributes, with `data-` prepended. The other writers ignore\nattributes that are not specifically supported by their output format.\n\nThe `width` and `height` attributes on images are treated specially. When\nused without a unit, the unit is assumed to be pixels. However, any of\nthe following unit identifiers can be used: `px`, `cm`, `mm`, `in`, `inch`\nand `%`. There must not be any spaces between the number and the unit.\nFor example:\n\n```\n![](file.jpg){ width=50% }\n```\n\n- Dimensions may be converted to a form that is compatible with\n  the output format (for example, dimensions given in pixels will\n  be converted to inches when converting HTML to LaTeX). Conversion\n  between pixels and physical measurements is affected by the\n  `--dpi` option (by default, 96 dpi is assumed, unless the image\n  itself contains dpi information).\n- The `%` unit is generally relative to some available space.\n  For example the above example will render to the following.\n  - HTML: `<img href=\"file.jpg\" style=\"width: 50%;\" />`\n  - LaTeX: `\\includegraphics[width=0.5\\textwidth,height=\\textheight]{file.jpg}`\n    (If you're using a custom template, you need to configure `graphicx`\n    as in the default template.)\n  - ConTeXt: `\\externalfigure[file.jpg][width=0.5\\textwidth]`\n- Some output formats have a notion of a class\n  ([ConTeXt](https://wiki.contextgarden.net/Using_Graphics#Multiple_Image_Settings))\n  or a unique identifier (LaTeX `\\caption`), or both (HTML).\n- When no `width` or `height` attributes are specified, the fallback\n  is to look at the image resolution and the dpi metadata embedded in\n  the image file.\n\n## Divs and Spans\n\nUsing the `native_divs` and `native_spans` extensions\n(see [above][Extension: `native_divs`]), HTML syntax can\nbe used as part of Markdown to create native `Div` and `Span`\nelements in the pandoc AST (as opposed to raw HTML).\nHowever, there is also nicer syntax available:\n\n### Extension: `fenced_divs` ###\n\nAllow special fenced syntax for native `Div` blocks.  A Div\nstarts with a fence containing at least three consecutive\ncolons plus some attributes. The attributes may optionally\nbe followed by another string of consecutive colons.\n\nNote:  the `commonmark` parser doesn't permit colons after\nthe attributes.\n\nThe attribute syntax is exactly as in fenced code blocks (see\n[Extension: `fenced_code_attributes`]).  As with fenced\ncode blocks, one can use either attributes in curly braces\nor a single unbraced word, which will be treated as a class\nname.  The Div ends with another line containing a string of at\nleast three consecutive colons.  The fenced Div should be\nseparated by blank lines from preceding and following blocks.\n\nExample:\n\n    ::::: {#special .sidebar}\n    Here is a paragraph.\n\n    And another.\n    :::::\n\nFenced divs can be nested.  Opening fences are distinguished\nbecause they *must* have attributes:\n\n    ::: Warning ::::::\n    This is a warning.\n\n    ::: Danger\n    This is a warning within a warning.\n    :::\n    ::::::::::::::::::\n\nFences without attributes are always closing fences.  Unlike\nwith fenced code blocks, the number of colons in the closing\nfence need not match the number in the opening fence.  However,\nit can be helpful for visual clarity to use fences of different\nlengths to distinguish nested divs from their parents.\n\n\n### Extension: `bracketed_spans` ###\n\nA bracketed sequence of inlines, as one would use to begin\na link, will be treated as a `Span` with attributes if it is\nfollowed immediately by attributes:\n\n    [This is *some text*]{.class key=\"val\"}\n\n## Footnotes\n\n### Extension: `footnotes` ###\n\nPandoc's Markdown allows footnotes, using the following syntax:\n\n    Here is a footnote reference,[^1] and another.[^longnote]\n\n    [^1]: Here is the footnote.\n\n    [^longnote]: Here's one with multiple blocks.\n\n        Subsequent paragraphs are indented to show that they\n    belong to the previous footnote.\n\n            { some.code }\n\n        The whole paragraph can be indented, or just the first\n        line.  In this way, multi-paragraph footnotes work like\n        multi-paragraph list items.\n\n    This paragraph won't be part of the note, because it\n    isn't indented.\n\nThe identifiers in footnote references may not contain spaces, tabs,\nnewlines, or the characters `^`, `[`, or `]`. These identifiers\nare used only to correlate the footnote reference with the note\nitself; in the output, footnotes will be numbered sequentially.\n\nThe footnotes themselves need not be placed at the end of the\ndocument.  They may appear anywhere except inside other block elements\n(lists, block quotes, tables, etc.).  Each footnote should be\nseparated from surrounding content (including other footnotes)\nby blank lines.\n\n### Extension: `inline_notes` ###\n\nInline footnotes are also allowed (though, unlike regular notes,\nthey cannot contain multiple paragraphs).  The syntax is as follows:\n\n    Here is an inline note.^[Inline notes are easier to write, since\n    you don't have to pick an identifier and move down to type the\n    note.]\n\nInline and regular footnotes may be mixed freely.\n\n## Citation syntax\n\n### Extension: `citations` ###\n\nTo cite a bibliographic item with an identifier foo, use the\nsyntax `@foo`.  Normal citations should be included in square\nbrackets, with semicolons separating distinct items:\n\n    Blah blah [@doe99; @smith2000; @smith2004].\n\nHow this is rendered depends on the citation style.  In an\nauthor-date style, it might render as\n\n    Blah blah (Doe 1999, Smith 2000, 2004).\n\nIn a footnote style, it might render as\n\n    Blah blah.[^1]\n\n    [^1]:  John Doe, \"Frogs,\" *Journal of Amphibians* 44 (1999);\n    Susan Smith, \"Flies,\" *Journal of Insects* (2000);\n    Susan Smith, \"Bees,\" *Journal of Insects* (2004).\n\nSee the [CSL user documentation] for more information about CSL\nstyles and how they affect rendering.\n\nUnless a citation key starts with a letter, digit, or `_`,\nand contains only alphanumerics and single internal punctuation\ncharacters (`:.#$%&-+?<>~/`), it must be surrounded\nby curly braces, which are not considered part of the key.\nIn `@Foo_bar.baz.`, the key is `Foo_bar.baz` because the final\nperiod is not *internal* punctuation, so it is not included in\nthe key.  In `@{Foo_bar.baz.}`, the key is `Foo_bar.baz.`, including\nthe final period.\nIn `@Foo_bar--baz`, the key is `Foo_bar` because the repeated internal\npunctuation characters terminate the key.\nThe curly braces are recommended if you use URLs as\nkeys: `[@{https://example.com/bib?name=foobar&date=2000}, p.  33]`.\n\nCitation items may optionally include a prefix, a locator, and\na suffix.  In\n\n    Blah blah [see @doe99, pp. 33-35 and *passim*; @smith04, chap. 1].\n\nthe first item (`doe99`) has prefix `see `, locator `pp.  33-35`,\nand suffix `and *passim*`.  The second item (`smith04`) has\nlocator `chap. 1` and no prefix or suffix.\n\nPandoc uses some heuristics to separate the locator from the\nrest of the subject.  It is sensitive to the locator terms\ndefined in the [CSL locale files].  Either abbreviated or\nunabbreviated forms are accepted. In the `en-US` locale, locator\nterms can be written in either singular or plural forms, as\n`book`, `bk.`/`bks.`; `chapter`, `chap.`/`chaps.`; `column`,\n`col.`/`cols.`; `figure`, `fig.`/`figs.`; `folio`,\n`fol.`/`fols.`; `number`, `no.`/`nos.`; `line`, `l.`/`ll.`;\n`note`, `n.`/`nn.`; `opus`, `op.`/`opp.`; `page`, `p.`/`pp.`;\n`paragraph`, `para.`/`paras.`; `part`, `pt.`/`pts.`; `section`,\n`sec.`/`secs.`; `sub verbo`, `s.v.`/`s.vv.`; `verse`,\n`v.`/`vv.`; `volume`, `vol.`/`vols.`; `¬∂`/`¬∂¬∂`; `¬ß`/`¬ß¬ß`. If no\nlocator term is used, \"page\" is assumed.\n\nIn complex cases, you can force something to be treated as\na locator by enclosing it in curly braces or prevent parsing\nthe suffix as locator by prepending curly braces:\n\n    [@smith{ii, A, D-Z}, with a suffix]\n    [@smith, {pp. iv, vi-xi, (xv)-(xvii)} with suffix here]\n    [@smith{}, 99 years later]\n\nA minus sign (`-`) before the `@` will suppress mention of\nthe author in the citation.  This can be useful when the\nauthor is already mentioned in the text:\n\n    Smith says blah [-@smith04].\n\nYou can also write an author-in-text citation, by omitting the\nsquare brackets:\n\n    @smith04 says blah.\n\n    @smith04 [p. 33] says blah.\n\nThis will cause the author's name to be rendered, followed by\nthe bibliographical details.  Use this form when you want to\nmake the citation the subject of a sentence.\n\nWhen you are using a note style, it is usually better to let\nciteproc create the footnotes from citations rather than writing\nan explicit note.  If you do write an explicit note that\ncontains a citation, note that normal citations will be put in\nparentheses, while author-in-text citations will not.  For\nthis reason, it is sometimes preferable to use the\nauthor-in-text style inside notes when using a note style.\n\n[CSL user documentation]: https://citationstyles.org/authors/\n[CSL]: https://docs.citationstyles.org/en/stable/specification.html\n[CSL markup specs]: https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html#html-like-formatting-tags\n[Chicago Manual of Style]: https://chicagomanualofstyle.org\n[Citation Style Language]: https://citationstyles.org\n[Zotero Style Repository]: https://www.zotero.org/styles\n[finding and editing styles]: https://citationstyles.org/authors/\n[CSL locale files]: https://github.com/citation-style-language/locales\n\n## Non-default extensions\n\nThe following Markdown syntax extensions are not enabled by default\nin pandoc, but may be enabled by adding `+EXTENSION` to the format\nname, where `EXTENSION` is the name of the extension.  Thus, for\nexample, `markdown+hard_line_breaks` is Markdown with hard line breaks.\n\n### Extension: `rebase_relative_paths` ###\n\nRewrite relative paths for Markdown links and images, depending\non the path of the file containing the link or image link.  For\neach link or image, pandoc will compute the directory of the\ncontaining file, relative to the working directory, and prepend\nthe resulting path to the link or image path.\n\nThe use of this extension is best understood by example.\nSuppose you have a subdirectory for each chapter of a book,\n`chap1`, `chap2`, `chap3`. Each contains a file `text.md` and a\nnumber of images used in the chapter.  You would like to have\n`![image](spider.jpg)` in `chap1/text.md` refer to\n`chap1/spider.jpg` and `![image](spider.jpg)` in `chap2/text.md`\nrefer to `chap2/spider.jpg`.  To do this, use\n\n    pandoc chap*/*.md -f markdown+rebase_relative_paths\n\nWithout this extension, you would have to use\n`![image](chap1/spider.jpg)` in `chap1/text.md` and\n`![image](chap2/spider.jpg)` in `chap2/text.md`.  Links with\nrelative paths will be rewritten in the same way as images.\n\nAbsolute paths and URLs are not changed.  Neither are empty\npaths or paths consisting entirely of a fragment, e.g., `#foo`.\n\nNote that relative paths in reference links and images will\nbe rewritten relative to the file containing the link\nreference definition, not the file containing the reference link\nor image itself, if these differ.\n\n### Extension: `mark` ###\n\nTo highlight out a section of text, begin and end it with\nwith `==`. Thus, for example,\n\n    This ==is deleted text.==\n\n### Extension: `attributes` ###\n\nAllows attributes to be attached to any inline or block-level\nelement when parsing `commonmark`.\nThe syntax for the attributes is the same as that\nused in [`header_attributes`][Extension: `header_attributes`].\n\n- Attributes that occur immediately after an inline\n  element affect that element.  If they follow a space, then they\n  belong to the space.  (Hence, this option subsumes\n  `inline_code_attributes` and `link_attributes`.)\n- Attributes that occur immediately before a block\n  element, on a line by themselves, affect that\n  element.\n- Consecutive attribute specifiers may be used,\n  either for blocks or for inlines.  Their attributes\n  will be combined.\n- Attributes that occur at the end of the text of\n  a Setext or ATX heading (separated by whitespace\n  from the text) affect the heading element. (Hence, this\n  option subsumes `header_attributes`.)\n- Attributes that occur after the opening fence\n  in a fenced code block affect the code block element. (Hence,\n  this option subsumes `fenced_code_attributes`.)\n- Attributes that occur at the end of a reference\n  link definition affect links that refer to that\n  definition.\n\nNote that pandoc's AST does not currently allow attributes\nto be attached to arbitrary elements.  Hence a Span or Div\ncontainer will be added if needed.\n\n### Extension: `old_dashes` ###\n\nSelects the pandoc <= 1.8.2.1 behavior for parsing smart dashes:\n`-` before a numeral is an en-dash, and `--` is an em-dash.\nThis option only has an effect if `smart` is enabled. It is\nselected automatically for `textile` input.\n\n### Extension: `angle_brackets_escapable` ###\n\nAllow `<` and `>` to be backslash-escaped, as they can be in\nGitHub flavored Markdown but not original Markdown.  This is\nimplied by pandoc's default `all_symbols_escapable`.\n\n### Extension: `lists_without_preceding_blankline` ###\n\nAllow a list to occur right after a paragraph, with no intervening\nblank space.\n\n### Extension: `four_space_rule` ###\n\nSelects the pandoc <= 2.0 behavior for parsing lists, so that\nfour spaces indent are needed for list item continuation\nparagraphs.\n\n### Extension: `spaced_reference_links` ###\n\nAllow whitespace between the two components of a reference link,\nfor example,\n\n    [foo] [bar].\n\n### Extension: `hard_line_breaks` ###\n\nCauses all newlines within a paragraph to be interpreted as hard line\nbreaks instead of spaces.\n\n### Extension: `ignore_line_breaks` ###\n\nCauses newlines within a paragraph to be ignored, rather than being\ntreated as spaces or as hard line breaks.  This option is intended for\nuse with East Asian languages where spaces are not used between words,\nbut text is divided into lines for readability.\n\n### Extension: `east_asian_line_breaks` ###\n\nCauses newlines within a paragraph to be ignored, rather than\nbeing treated as spaces or as hard line breaks, when they occur\nbetween two East Asian wide characters.  This is a better choice\nthan `ignore_line_breaks` for texts that include a mix of East\nAsian wide characters and other characters.\n\n### Extension: `emoji` ###\n\nParses textual emojis like `:smile:` as Unicode emoticons.\n\n### Extension: `tex_math_gfm` ###\n\nSupports two GitHub-specific formats for math.\nInline math: ``$`e=mc^2`$``.\n\nDisplay math:\n\n````\n``` math\ne=mc^2\n```\n````\n\n### Extension: `tex_math_single_backslash` ###\n\nCauses anything between `\\(` and `\\)` to be interpreted as inline\nTeX math, and anything between `\\[` and `\\]` to be interpreted\nas display TeX math.  Note: a drawback of this extension is that\nit precludes escaping `(` and `[`.\n\n### Extension: `tex_math_double_backslash` ###\n\nCauses anything between `\\\\(` and `\\\\)` to be interpreted as inline\nTeX math, and anything between `\\\\[` and `\\\\]` to be interpreted\nas display TeX math.\n\n### Extension: `markdown_attribute` ###\n\nBy default, pandoc interprets material inside block-level tags as Markdown.\nThis extension changes the behavior so that Markdown is only parsed\ninside block-level tags if the tags have the attribute `markdown=1`.\n\n### Extension: `mmd_title_block` ###\n\nEnables a [MultiMarkdown] style title block at the top of\nthe document, for example:\n\n    Title:   My title\n    Author:  John Doe\n    Date:    September 1, 2008\n    Comment: This is a sample mmd title block, with\n             a field spanning multiple lines.\n\nSee the MultiMarkdown documentation for details.  If `pandoc_title_block` or\n`yaml_metadata_block` is enabled, it will take precedence over\n`mmd_title_block`.\n\n### Extension: `abbreviations` ###\n\nParses PHP Markdown Extra abbreviation keys, like\n\n    *[HTML]: Hypertext Markup Language\n\nNote that the pandoc document model does not support\nabbreviations, so if this extension is enabled, abbreviation keys are\nsimply skipped (as opposed to being parsed as paragraphs).\n\n### Extension: `alerts` ###\n\nSupports [GitHub-style Markdown alerts], like\n\n    > [!TIP]\n    > Helpful advice for doing things better or more easily.\n\n  [GitHub-style Markdown alerts]: https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts\n\n### Extension: `autolink_bare_uris` ###\n\nMakes all absolute URIs into links, even when not surrounded by\npointy braces `<...>`.\n\n### Extension: `mmd_link_attributes` ###\n\nParses MultiMarkdown-style key-value attributes on link\nand image references. This extension should not be confused with the\n[`link_attributes`](#extension-link_attributes) extension.\n\n    This is a reference ![image][ref] with MultiMarkdown attributes.\n\n    [ref]: https://path.to/image \"Image title\" width=20px height=30px\n           id=myId class=\"myClass1 myClass2\"\n\n### Extension: `mmd_header_identifiers` ###\n\nParses MultiMarkdown-style heading identifiers (in square brackets,\nafter the heading but before any trailing `#`s in an ATX heading).\n\n### Extension: `compact_definition_lists` ###\n\nActivates the definition list syntax of pandoc 1.12.x and earlier.\nThis syntax differs from the one described above under [Definition lists]\nin several respects:\n\n  - No blank line is required between consecutive items of the\n    definition list.\n  - To get a \"tight\" or \"compact\" list, omit space between consecutive\n    items; the space between a term and its definition does not affect\n    anything.\n  - Lazy wrapping of paragraphs is not allowed:  the entire definition must\n    be indented four spaces.[^6]\n\n[^6]:  To see why laziness is incompatible with relaxing the requirement\n    of a blank line between items, consider the following example:\n\n        bar\n        :    definition\n        foo\n        :    definition\n\n    Is this a single list item with two definitions of \"bar,\" the first of\n    which is lazily wrapped, or two list items?  To remove the ambiguity\n    we must either disallow lazy wrapping or require a blank line between\n    list items.\n\n### Extension: `gutenberg` ###\n\nUse [Project Gutenberg] conventions for `plain` output:\nall-caps for strong emphasis, surround by underscores\nfor regular emphasis, add extra blank space around headings.\n\n  [Project Gutenberg]: https://www.gutenberg.org\n\n### Extension: `sourcepos` ###\n\nInclude source position attributes when parsing `commonmark`.\nFor elements that accept attributes, a `data-pos` attribute\nis added; other elements are placed in a surrounding\nDiv or Span element with a `data-pos` attribute.\n\n### Extension: `short_subsuperscripts` ###\n\nParse MultiMarkdown-style subscripts and superscripts, which start with\na '~' or '^' character, respectively, and include the alphanumeric sequence\nthat follows. For example:\n\n    x^2 = 4\n\nor\n\n    Oxygen is O~2.\n\n### Extension: `wikilinks_title_after_pipe` ###\n\nPandoc supports multiple Markdown wikilink syntaxes, regardless of\nwhether the title is before or after the pipe.\n\nUsing `--from=markdown+wikilinks_title_after_pipe` results in\n```[[Wiki]]\n[[URL|title]]\n```\n\nwhile using `--from=markdown+wikilinks_title_before_pipe` results\nin\n```[[Wiki]]\n[[title|URL]]\n```\n\n## Markdown variants\n\nIn addition to pandoc's extended Markdown, the following Markdown\nvariants are supported:\n\n- `markdown_phpextra` (PHP Markdown Extra)\n- `markdown_github` (deprecated GitHub-Flavored Markdown)\n- `markdown_mmd` (MultiMarkdown)\n- `markdown_strict` (Markdown.pl)\n- `commonmark` (CommonMark)\n- `gfm` (Github-Flavored Markdown)\n- `commonmark_x` (CommonMark with many pandoc extensions)\n\nTo see which extensions are supported for a given format,\nand which are enabled by default, you can use the command\n\n    pandoc --list-extensions=FORMAT\n\nwhere `FORMAT` is replaced with the name of the format.\n\nNote that the list of extensions for `commonmark`,\n`gfm`, and `commonmark_x` are defined relative to default\ncommonmark.  So, for example, `backtick_code_blocks`\ndoes not appear as an extension, since it is enabled by\ndefault and cannot be disabled.\n\n# Citations\n\nWhen the `--citeproc` option is used, pandoc can automatically generate\ncitations and a bibliography in a number of styles.  Basic usage is\n\n    pandoc --citeproc myinput.txt\n\nTo use this feature, you will need to have\n\n- a document containing citations (see [Citation syntax]);\n- a source of bibliographic data: either an external bibliography\n  file or a list of `references` in the document's YAML metadata;\n- optionally, a [CSL] citation style.\n\n## Specifying bibliographic data\n\nYou can specify an external bibliography using the\n`bibliography` metadata field in a YAML metadata section or the\n`--bibliography` command line argument. If you want to use\nmultiple bibliography files, you can supply multiple\n`--bibliography` arguments or set `bibliography` metadata field\nto YAML array.  A bibliography may have any of these formats:\n\n  Format            File extension\n  ------------      --------------\n  BibLaTeX          .bib\n  BibTeX            .bibtex\n  CSL JSON          .json\n  CSL YAML          .yaml\n  RIS               .ris\n\nNote that `.bib` can be used with both BibTeX and BibLaTeX files;\nuse the extension `.bibtex` to force interpretation as BibTeX.\n\nIn BibTeX and BibLaTeX databases, pandoc parses LaTeX markup\ninside fields such as `title`; in CSL YAML databases, pandoc\nMarkdown; and in CSL JSON databases, an [HTML-like markup][CSL\nmarkup specs]:\n\n`<i>...</i>`\n:   italics\n\n`<b>...</b>`\n:   bold\n\n`<span style=\"font-variant:small-caps;\">...</span>` or `<sc>...</sc>`\n:   small capitals\n\n`<sub>...</sub>`\n:   subscript\n\n`<sup>...</sup>`\n:   superscript\n\n`<span class=\"nocase\">...</span>`\n:   prevent a phrase from being capitalized as title case\n\nAs an alternative to specifying a bibliography file using\n`--bibliography` or the YAML metadata field `bibliography`, you\ncan include the citation data directly in the `references` field\nof the document's YAML metadata. The field should contain an\narray of YAML-encoded references, for example:\n\n    ---\n    references:\n    - type: article-journal\n      id: WatsonCrick1953\n      author:\n      - family: Watson\n        given: J. D.\n      - family: Crick\n        given: F. H. C.\n      issued:\n        date-parts:\n        - - 1953\n          - 4\n          - 25\n      title: 'Molecular structure of nucleic acids: a structure for\n        deoxyribose nucleic acid'\n      title-short: Molecular structure of nucleic acids\n      container-title: Nature\n      volume: 171\n      issue: 4356\n      page: 737-738\n      DOI: 10.1038/171737a0\n      URL: https://www.nature.com/articles/171737a0\n      language: en-GB\n    ...\n\nIf both an external bibliography and inline (YAML metadata)\nreferences are provided, both will be used. In case of\nconflicting `id`s, the inline references will take precedence.\n\nNote that pandoc can be used to produce such a YAML metadata\nsection from a BibTeX, BibLaTeX, or CSL JSON bibliography:\n\n    pandoc chem.bib -s -f biblatex -t markdown\n    pandoc chem.json -s -f csljson -t markdown\n\nIndeed, pandoc can convert between any of these\ncitation formats:\n\n    pandoc chem.bib -s -f biblatex -t csljson\n    pandoc chem.yaml -s -f markdown -t biblatex\n\nRunning pandoc on a bibliography file with the `--citeproc`\noption will create a formatted bibliography in the format\nof your choice:\n\n    pandoc chem.bib -s --citeproc -o chem.html\n    pandoc chem.bib -s --citeproc -o chem.pdf\n\n### Capitalization in titles\n\nIf you are using a bibtex or biblatex bibliography, then observe\nthe following rules:\n\n  - English titles should be in title case.  Non-English titles should\n    be in sentence case, and the `langid` field in biblatex should be\n    set to the relevant language.  (The following values are treated\n    as English:  `american`, `british`, `canadian`, `english`,\n    `australian`, `newzealand`, `USenglish`, or `UKenglish`.)\n\n  - As is standard with bibtex/biblatex, proper names should be\n    protected with curly braces so that they won't be lowercased\n    in styles that call for sentence case.  For example:\n\n        title = {My Dinner with {Andre}}\n\n  - In addition, words that should remain lowercase (or camelCase)\n    should be protected:\n\n        title = {Spin Wave Dispersion on the {nm} Scale}\n\n    Though this is not necessary in bibtex/biblatex, it is necessary\n    with citeproc, which stores titles internally in sentence case,\n    and converts to title case in styles that require it.  Here we\n    protect \"nm\" so that it doesn't get converted to \"Nm\" at this stage.\n\nIf you are using a CSL bibliography (either JSON or YAML), then observe\nthe following rules:\n\n  - All titles should be in sentence case.\n\n  - Use the `language` field for non-English titles to prevent their\n    conversion to title case in styles that call for this. (Conversion\n    happens only if `language` begins with `en` or is left empty.)\n\n  - Protect words that should not be converted to title case using\n    this syntax:\n\n        Spin wave dispersion on the <span class=\"nocase\">nm</span> scale\n\n### Conference Papers, Published vs. Unpublished\n\nFor a formally published conference paper, use the biblatex entry type\n`inproceedings` (which will be mapped to CSL `paper-conference`).\n\nFor an unpublished manuscript, use the biblatex entry type\n`unpublished` without an `eventtitle` field (this entry type\nwill be mapped to CSL `manuscript`).\n\nFor a talk, an unpublished conference paper, or a poster\npresentation, use the biblatex entry type `unpublished` with an\n`eventtitle` field (this entry type will be mapped to CSL\n`speech`). Use the biblatex `type` field to indicate the type,\ne.g. \"Paper\", or \"Poster\". `venue` and `eventdate` may be useful\ntoo, though `eventdate` will not be rendered by most CSL styles.\nNote that `venue` is for the event's venue, unlike `location`\nwhich describes the publisher's location; do not use the latter\nfor an unpublished conference paper.\n\n\n## Specifying a citation style\n\nCitations and references can be formatted using any style supported by the\n[Citation Style Language], listed in the [Zotero Style Repository].\nThese files are specified using the `--csl` option or the `csl`\n(or `citation-style`) metadata field.  By default, pandoc will\nuse the [Chicago Manual of Style] author-date format.  (You can\noverride this default by copying a CSL style of your choice\nto `default.csl` in your user data directory.)\nThe CSL project provides further information on [finding and\nediting styles].\n\nThe `--citation-abbreviations` option (or the\n`citation-abbreviations` metadata field) may be used to specify\na JSON file containing abbreviations of journals that should be\nused in formatted bibliographies when `form=\"short\"` is\nspecified.  The format of the file can be illustrated with an\nexample:\n\n\n    { \"default\": {\n        \"container-title\": {\n                \"Lloyd's Law Reports\": \"Lloyd's Rep\",\n                \"Estates Gazette\": \"EG\",\n                \"Scots Law Times\": \"SLT\"\n        }\n      }\n    }\n\n\n## Citations in note styles\n\nPandoc's citation processing is designed to allow you to\nmove between author-date, numerical, and note styles without\nmodifying the Markdown source.  When you're using a note\nstyle, avoid inserting footnotes manually. Instead, insert\ncitations just as you would in an author-date style---for\nexample,\n\n    Blah blah [@foo, p. 33].\n\nThe footnote will be created automatically. Pandoc will take\ncare of removing the space and moving the note before or\nafter the period, depending on the setting of\n`notes-after-punctuation`, as described below in [Other relevant\nmetadata fields].\n\nIn some cases you may need to put a citation inside a regular\nfootnote.  Normal citations in footnotes (such as `[@foo, p.\n33]`) will be rendered in parentheses.  In-text citations (such\nas `@foo [p. 33]`) will be rendered without parentheses. (A\ncomma will be added if appropriate.)  Thus:\n\n    [^1]:  Some studies [@foo; @bar, p. 33] show that\n    frubulicious zoosnaps are quantical.  For a survey\n    of the literature, see @baz [chap. 1].\n\n\n## Placement of the bibliography\n\nIf the style calls for a list of works cited, it will be placed\nin a div with id `refs`, if one exists:\n\n    ::: {#refs}\n    :::\n\nOtherwise, it will be placed at the end of the document.\nGeneration of the bibliography can be suppressed by setting\n`suppress-bibliography: true` in the YAML metadata.\n\nIf you wish the bibliography to have a section heading, you can\nset `reference-section-title` in the metadata, or put the heading\nat the beginning of the div with id `refs` (if you are using it)\nor at the end of your document:\n\n    last paragraph...\n\n    # References\n\nThe bibliography will be inserted after this heading.  Note that\nthe `unnumbered` class will be added to this heading, so that the\nsection will not be numbered.\n\nIf you want to put the bibliography into a variable in your\ntemplate, one way to do that is to put the div with id `refs`\ninto a metadata field, e.g.\n\n    ---\n    refs: |\n       ::: {#refs}\n       :::\n    ...\n\nYou can then put the variable `$refs$` into your template where\nyou want the bibliography to be placed.\n\n## Including uncited items in the bibliography\n\nIf you want to include items in the bibliography without actually\nciting them in the body text, you can define a dummy `nocite` metadata\nfield and put the citations there:\n\n    ---\n    nocite: |\n      @item1, @item2\n    ...\n\n    @item3\n\nIn this example, the document will contain a citation for `item3`\nonly, but the bibliography will contain entries for `item1`, `item2`, and\n`item3`.\n\nIt is possible to create a bibliography with all the citations,\nwhether or not they appear in the document, by using a wildcard:\n\n    ---\n    nocite: |\n      @*\n    ...\n\nFor LaTeX output, you can also use [`natbib`] or [`biblatex`] to\nrender the bibliography. In order to do so, specify bibliography\nfiles as outlined above, and add `--natbib` or `--biblatex`\nargument to pandoc invocation. Bear in mind that bibliography\nfiles have to be in either BibTeX (for `--natbib`)\nor BibLaTeX (for `--biblatex`) format.\n\n## Other relevant metadata fields\n\nA few other metadata fields affect bibliography formatting:\n\n`link-citations`\n:   If true, citations will be hyperlinked to the\n    corresponding bibliography entries (for author-date and\n    numerical styles only).  Defaults to false.\n\n`link-bibliography`\n:   If true, DOIs, PMCIDs, PMID, and URLs in bibliographies will\n    be rendered as hyperlinks.  (If an entry contains a DOI, PMCID,\n    PMID, or URL, but none of these fields are rendered by the style,\n    then the title, or in the absence of a title the whole entry, will\n    be hyperlinked.)  Defaults to true.\n\n`lang`\n:   The `lang` field will affect how the style is localized,\n    for example in the translation of labels, the use\n    of quotation marks, and the way items are sorted.\n    (For backwards compatibility, `locale` may be used instead\n    of `lang`, but this use is deprecated.)\n\n    A BCP 47 language tag is expected:  for example, `en`,\n    `de`, `en-US`, `fr-CA`, `ug-Cyrl`.  The unicode extension\n    syntax (after `-u-`) may be used to specify options for\n    collation (sorting) more precisely. Here are some examples:\n\n    - `zh-u-co-pinyin`: Chinese with the Pinyin collation.\n    - `es-u-co-trad`: Spanish with the traditional collation\n      (with `Ch` sorting after `C`).\n    - `fr-u-kb`: French with \"backwards\" accent sorting\n      (with `cot√©` sorting after `c√¥te`).\n    - `en-US-u-kf-upper`: English with uppercase letters sorting\n       before lower (default is lower before upper).\n\n`notes-after-punctuation`\n:    If true (the default for note styles), pandoc will put\n     footnote references or superscripted numerical citations\n     after following punctuation.  For example, if the source\n     contains `blah blah [@jones99].`, the result will look like\n     `blah blah.[^1]`, with the note moved after the period and\n     the space collapsed.  If false, the space will still be\n     collapsed, but the footnote will not be moved after the\n     punctuation.  The option may also be used in numerical styles\n     that use superscripts for citation numbers (but for these\n     styles the default is not to move the citation).\n\n\n# Slide shows\n\nYou can use pandoc to produce an HTML + JavaScript slide presentation\nthat can be viewed via a web browser.  There are five ways to do this,\nusing [S5], [DZSlides], [Slidy], [Slideous], or [reveal.js].\nYou can also produce a PDF slide show using LaTeX [`beamer`], or\nslide shows in Microsoft [PowerPoint] format.\n\nHere's the Markdown source for a simple slide show, `habits.txt`:\n\n    % Habits\n    % John Doe\n    % March 22, 2005\n\n    # In the morning\n\n    ## Getting up\n\n    - Turn off alarm\n    - Get out of bed\n\n    ## Breakfast\n\n    - Eat eggs\n    - Drink coffee\n\n    # In the evening\n\n    ## Dinner\n\n    - Eat spaghetti\n    - Drink wine\n\n    ------------------\n\n    ![picture of spaghetti](images/spaghetti.jpg)\n\n    ## Going to sleep\n\n    - Get in bed\n    - Count sheep\n\nTo produce an HTML/JavaScript slide show, simply type\n\n    pandoc -t FORMAT -s habits.txt -o habits.html\n\nwhere `FORMAT` is either `s5`, `slidy`, `slideous`, `dzslides`, or `revealjs`.\n\nFor Slidy, Slideous, reveal.js, and S5, the file produced by\npandoc with the `-s/--standalone` option embeds a link to\nJavaScript and CSS files, which are assumed to be available at\nthe relative path `s5/default` (for S5), `slideous` (for\nSlideous), `reveal.js` (for reveal.js), or at the Slidy website\nat `w3.org` (for Slidy).  (These paths can be changed by setting\nthe `slidy-url`, `slideous-url`, `revealjs-url`, or `s5-url`\nvariables; see [Variables for HTML slides], above.) For\nDZSlides, the (relatively short) JavaScript and CSS are included\nin the file by default.\n\nWith all HTML slide formats, the `--self-contained` option can\nbe used to produce a single file that contains all of the data\nnecessary to display the slide show, including linked scripts,\nstylesheets, images, and videos.\n\nTo produce a PDF slide show using beamer, type\n\n    pandoc -t beamer habits.txt -o habits.pdf\n\nNote that a reveal.js slide show can also be converted to a PDF\nby printing it to a file from the browser.\n\nTo produce a PowerPoint slide show, type\n\n    pandoc habits.txt -o habits.pptx\n\n## Structuring the slide show\n\nBy default, the *slide level* is the highest heading level in\nthe hierarchy that is followed immediately by content, and not another\nheading, somewhere in the document. In the example above, level-1 headings\nare always followed by level-2 headings, which are followed by content,\nso the slide level is 2. This default can be overridden using the\n`--slide-level` option.\n\nThe document is carved up into slides according to the following\nrules:\n\n  * A horizontal rule always starts a new slide.\n\n  * A heading at the slide level always starts a new slide.\n\n  * Headings *below* the slide level in the hierarchy create\n    headings *within* a slide.  (In beamer, a \"block\" will be\n    created.  If the heading has the class `example`, an\n    `exampleblock` environment will be used; if it has the class\n    `alert`, an `alertblock` will be used; otherwise a regular\n    `block` will be used.)\n\n  * Headings *above* the slide level in the hierarchy create\n    \"title slides,\" which just contain the section title\n    and help to break the slide show into sections.\n    Non-slide content under these headings will be included\n    on the title slide (for HTML slide shows) or in a\n    subsequent slide with the same title (for beamer).\n\n  * A title page is constructed automatically from the document's title\n    block, if present. (In the case of beamer, this can be disabled\n    by commenting out some lines in the default template.)\n\nThese rules are designed to support many different styles of slide show. If\nyou don't care about structuring your slides into sections and subsections,\nyou can either just use level-1 headings for all slides (in that case, level 1\nwill be the slide level) or you can set `--slide-level=0`.\n\nNote:  in reveal.js slide shows, if slide level is 2, a two-dimensional\nlayout will be produced, with level-1 headings building horizontally\nand level-2 headings building vertically. It is not recommended that\nyou use deeper nesting of section levels with reveal.js unless you set\n`--slide-level=0` (which lets reveal.js produce a one-dimensional layout\nand only interprets horizontal rules as slide boundaries).\n\n### PowerPoint layout choice\n\nWhen creating slides, the pptx writer chooses from a number of pre-defined\nlayouts, based on the content of the slide:\n\nTitle Slide\n:   This layout is used for the initial slide, which is generated and\n    filled from the metadata fields `date`, `author`, and `title`, if\n    they are present.\n\nSection Header\n:   This layout is used for what pandoc calls ‚Äútitle slides‚Äù, i.e.\n    slides which start with a header which is above the slide level in\n    the hierarchy.\n\nTwo Content\n:   This layout is used for two-column slides, i.e. slides containing a\n    div with class `columns` which contains at least two divs with class\n    `column`.\n\nComparison\n:   This layout is used instead of ‚ÄúTwo Content‚Äù for any two-column\n    slides in which at least one column contains text followed by\n    non-text (e.g. an image or a table).\n\nContent with Caption\n:   This layout is used for any non-two-column slides which contain text\n    followed by non-text (e.g. an image or a table).\n\nBlank\n:   This layout is used for any slides which only contain blank content,\n    e.g. a slide containing only speaker notes, or a slide containing\n    only a non-breaking space.\n\nTitle and Content\n:   This layout is used for all slides which do not match the criteria\n    for another layout.\n\nThese layouts are chosen from the default pptx reference doc included with\npandoc, unless an alternative reference doc is specified using\n`--reference-doc`.\n\n## Incremental lists\n\nBy default, these writers produce lists that display \"all at once.\"\nIf you want your lists to display incrementally (one item at a time),\nuse the `-i` option. If you want a particular list to depart from the\ndefault, put it in a `div` block with class `incremental` or\n`nonincremental`. So, for example, using the `fenced div` syntax, the\nfollowing would be incremental regardless of the document default:\n\n    ::: incremental\n\n    - Eat spaghetti\n    - Drink wine\n\n    :::\n\nor\n\n    ::: nonincremental\n\n    - Eat spaghetti\n    - Drink wine\n\n    :::\n\nWhile using `incremental` and `nonincremental` divs is the\nrecommended method of setting incremental lists on a per-case basis,\nan older method is also supported: putting lists inside a blockquote\nwill depart from the document default (that is, it will display\nincrementally without the `-i` option and all at once with the `-i`\noption):\n\n    > - Eat spaghetti\n    > - Drink wine\n\nBoth methods allow incremental and nonincremental lists to be mixed\nin a single document.\n\nIf you want to include a block-quoted list, you can work around\nthis behavior by putting the list inside a fenced div, so that\nit is not the direct child of the block quote:\n\n    > ::: wrapper\n    > - a\n    > - list in a quote\n    > :::\n\n## Inserting pauses\n\nYou can add \"pauses\" within a slide by including a paragraph containing\nthree dots, separated by spaces:\n\n    # Slide with a pause\n\n    content before the pause\n\n    . . .\n\n    content after the pause\n\nNote: this feature is not yet implemented for PowerPoint output.\n\n## Styling the slides\n\nYou can change the style of HTML slides by putting customized CSS files\nin `$DATADIR/s5/default` (for S5), `$DATADIR/slidy` (for Slidy),\nor `$DATADIR/slideous` (for Slideous),\nwhere `$DATADIR` is the user data directory (see `--data-dir`, above).\nThe originals may be found in pandoc's system data directory (generally\n`$CABALDIR/pandoc-VERSION/s5/default`). Pandoc will look there for any\nfiles it does not find in the user data directory.\n\nFor dzslides, the CSS is included in the HTML file itself, and may\nbe modified there.\n\nAll [reveal.js configuration options] can be set through variables.\nFor example, themes can be used by setting the `theme` variable:\n\n    -V theme=moon\n\nOr you can specify a custom stylesheet using the `--css` option.\n\nTo style beamer slides, you can specify a `theme`, `colortheme`,\n`fonttheme`, `innertheme`, and `outertheme`, using the `-V` option:\n\n    pandoc -t beamer habits.txt -V theme:Warsaw -o habits.pdf\n\nNote that heading attributes will turn into slide attributes\n(on a `<div>` or `<section>`) in HTML slide formats, allowing you\nto style individual slides.  In beamer, a number of heading\nclasses and attributes are recognized as frame options and\nwill be passed through as options to the frame: see\n[Frame attributes in beamer], below.\n\n## Speaker notes\n\nSpeaker notes are supported in reveal.js, PowerPoint (pptx),\nand beamer output. You can add notes to your Markdown document thus:\n\n    ::: notes\n\n    This is my note.\n\n    - It can contain Markdown\n    - like this list\n\n    :::\n\nTo show the notes window in reveal.js, press `s` while viewing the\npresentation. Speaker notes in PowerPoint will be available, as usual,\nin handouts and presenter view.\n\nNotes are not yet supported for other slide formats, but the notes\nwill not appear on the slides themselves.\n\n## Columns\n\nTo put material in side by side columns, you can use a native\ndiv container with class `columns`, containing two or more div\ncontainers with class `column` and a `width` attribute:\n\n    :::::::::::::: {.columns}\n    ::: {.column width=\"40%\"}\n    contents...\n    :::\n    ::: {.column width=\"60%\"}\n    contents...\n    :::\n    ::::::::::::::\n\nNote: Specifying column widths does not currently work for PowerPoint.\n\n### Additional columns attributes in beamer\n\nThe div containers with classes `columns` and `column` can optionally have\nan `align` attribute.\nThe class `columns` can optionally have a `totalwidth` attribute or an\n`onlytextwidth` class.\n\n    :::::::::::::: {.columns align=center totalwidth=8em}\n    ::: {.column width=\"40%\"}\n    contents...\n    :::\n    ::: {.column width=\"60%\" align=bottom}\n    contents...\n    :::\n    ::::::::::::::\n\nThe `align` attributes on `columns` and `column` can be used with the\nvalues `top`, `top-baseline`, `center` and `bottom` to vertically align\nthe columns. It defaults to `top` in `columns`.\n\nThe `totalwidth` attribute limits the width of the columns to the given value.\n\n    :::::::::::::: {.columns align=top .onlytextwidth}\n    ::: {.column width=\"40%\" align=center}\n    contents...\n    :::\n    ::: {.column width=\"60%\"}\n    contents...\n    :::\n    ::::::::::::::\n\nThe class `onlytextwidth` sets the `totalwidth` to `\\textwidth`.\n\nSee Section 12.7 of the [Beamer User's Guide] for more details.\n\n## Frame attributes in beamer\n\nSometimes it is necessary to add the LaTeX `[fragile]` option to\na frame in beamer (for example, when using the `minted` environment).\nThis can be forced by adding the `fragile` class to the heading\nintroducing the slide:\n\n    # Fragile slide {.fragile}\n\nAll of the other frame attributes described in Section 8.1 of\nthe [Beamer User's Guide] may also be used: `allowdisplaybreaks`,\n`allowframebreaks`, `b`, `c`, `s`, `t`, `environment`, `label`, `plain`,\n`shrink`, `standout`, `noframenumbering`, `squeeze`.\n`allowframebreaks` is recommended especially for bibliographies, as\nit allows multiple slides to be created if the content overfills the\nframe:\n\n    # References {.allowframebreaks}\n\nIn addition, the `frameoptions` attribute may be used to\npass arbitrary frame options to a beamer slide:\n\n    # Heading {frameoptions=\"squeeze,shrink,customoption=foobar\"}\n\n## Background in reveal.js, beamer, and pptx\n\nBackground images can be added to self-contained reveal.js slide shows,\nbeamer slide shows, and pptx slide shows.\n\n### On all slides (beamer, reveal.js, pptx)\n\nWith beamer and reveal.js, the configuration option `background-image` can be\nused either in the YAML metadata block or as a command-line variable to get the same image on every slide.\n\nNote that for reveal.js, the `background-image` will be used as\na `parallaxBackgroundImage` (see below).\n\nFor pptx, you can use a `--reference-doc` in which\nbackground images have been set on the [relevant\nlayouts](#powerpoint-layout-choice).\n\n#### `parallaxBackgroundImage` (reveal.js)\n\nFor reveal.js, there is also the reveal.js-native option\n`parallaxBackgroundImage`, which produces a parallax scrolling background.\nYou must also set `parallaxBackgroundSize`, and can optionally set\n`parallaxBackgroundHorizontal`\nand `parallaxBackgroundVertical` to configure the scrolling behaviour.\nSee the [reveal.js\ndocumentation](https://revealjs.com/backgrounds/#parallax-background)\nfor more details about the meaning of these options.\n\nIn reveal.js's overview mode, the parallaxBackgroundImage will show up\nonly on the first slide.\n\n### On individual slides (reveal.js, pptx)\n\nTo set an image for a particular reveal.js or pptx slide, add\n`{background-image=\"/path/to/image\"}` to the first slide-level heading on the\nslide (which may even be empty).\n\nAs the [HTML writers pass unknown attributes\nthrough](#extension-link_attributes), other reveal.js background settings also\nwork on individual slides, including `background-size`, `background-repeat`,\n`background-color`, `transition`, and `transition-speed`. (The `data-` prefix\nwill automatically be added.)\n\nNote: `data-background-image` is also supported in pptx for consistency with\nreveal.js ‚Äì if `background-image` isn‚Äôt found, `data-background-image` will be\nchecked.\n\n### On the title slide (reveal.js, pptx)\n\nTo add a background image to the automatically generated title slide for\nreveal.js, use the `title-slide-attributes` variable in the YAML metadata block.\nIt must contain a map of attribute names and values. (Note that the `data-`\nprefix is required here, as it isn‚Äôt added automatically.)\n\nFor pptx, pass a `--reference-doc` with the background\nimage set on the ‚ÄúTitle Slide‚Äù layout.\n\n### Example (reveal.js)\n\n```\n---\ntitle: My Slide Show\nparallaxBackgroundImage: /path/to/my/background_image.png\ntitle-slide-attributes:\n    data-background-image: /path/to/title_image.png\n    data-background-size: contain\n---\n\n## Slide One\n\nSlide 1 has background_image.png as its background.\n\n## {background-image=\"/path/to/special_image.jpg\"}\n\nSlide 2 has a special image for its background, even though the heading has no content.\n```\n\n# EPUBs\n\n## EPUB Metadata\n\nEPUB metadata may be specified using the `--epub-metadata` option, but\nif the source document is Markdown, it is better to use a [YAML metadata\nblock][Extension: `yaml_metadata_block`].  Here is an example of\na YAML metadata block with EPUB metadata:\n\n    ---\n    title:\n    - type: main\n      text: My Book\n    - type: subtitle\n      text: An investigation of metadata\n    creator:\n    - role: author\n      text: John Smith\n    - role: editor\n      text: Sarah Jones\n    identifier:\n    - scheme: DOI\n      text: doi:10.234234.234/33\n    publisher:  My Press\n    rights: ¬© 2007 John Smith, CC BY-NC\n    ibooks:\n      version: 1.3.4\n    ...\n\nThe following fields are recognized:\n\n`identifier`\n  ~ Either a string value or an object with fields `text` and\n    `scheme`.  Valid values for `scheme` are `ISBN-10`,\n    `GTIN-13`, `UPC`, `ISMN-10`, `DOI`, `LCCN`, `GTIN-14`,\n    `ISBN-13`, `Legal deposit number`, `URN`, `OCLC`,\n    `ISMN-13`, `ISBN-A`, `JP`, `OLCC`.\n\n`title`\n  ~ Either a string value, or an object with fields `file-as` and\n    `type`, or a list of such objects.  Valid values for `type` are\n    `main`, `subtitle`, `short`, `collection`, `edition`, `extended`.\n\n`creator`\n  ~ Either a string value, or an object with fields `role`, `file-as`,\n    and `text`, or a list of such objects.  Valid values for `role` are\n    [MARC relators], but\n    pandoc will attempt to translate the human-readable versions\n    (like \"author\" and \"editor\") to the appropriate marc relators.\n\n`contributor`\n  ~ Same format as `creator`.\n\n`date`\n  ~ A string value in `YYYY-MM-DD` format.  (Only the year is necessary.)\n    Pandoc will attempt to convert other common date formats.\n\n`lang` (or legacy: `language`)\n  ~ A string value in [BCP 47] format.  Pandoc will default to the local\n    language if nothing is specified.\n\n`subject`\n  ~ Either a string value, or an object with fields `text`, `authority`,\n    and `term`, or a list of such objects. Valid values for `authority`\n    are either a [reserved authority value] (currently `AAT`, `BIC`,\n    `BISAC`, `CLC`, `DDC`, `CLIL`, `EuroVoc`, `MEDTOP`, `LCSH`, `NDC`,\n    `Thema`, `UDC`, and `WGS`) or an absolute IRI identifying a custom\n    scheme. Valid values for `term` are defined by the scheme.\n\n`description`\n  ~ A string value.\n\n`type`\n  ~ A string value.\n\n`format`\n  ~ A string value.\n\n`relation`\n  ~ A string value.\n\n`coverage`\n  ~ A string value.\n\n`rights`\n  ~ A string value.\n\n`belongs-to-collection`\n  ~ A string value.  Identifies the name of a collection to which\n    the EPUB Publication belongs.\n\n`group-position`\n  ~ The `group-position` field indicates the numeric position in which\n    the EPUB Publication belongs relative to other works belonging to\n    the same `belongs-to-collection` field.\n\n`cover-image`\n  ~ A string value (path to cover image).\n\n`css` (or legacy: `stylesheet`)\n  ~ A string value (path to CSS stylesheet).\n\n`page-progression-direction`\n  ~ Either `ltr` or `rtl`. Specifies the `page-progression-direction`\n    attribute for the [`spine` element].\n\n`accessModes`\n  ~ An array of strings ([schema][accessibility schema]).\n    Defaults to `[\"textual\"]`.\n\n`accessModeSufficient`\n  ~ An array of strings ([schema][accessibility schema]).\n    Defaults to `[\"textual\"]`.\n\n`accessibilityHazards`\n  ~ An array of strings ([schema][accessibility schema]).\n    Defaults to `[\"none\"]`.\n\n`accessibilityFeatures`\n  ~ An array of strings ([schema][accessibility schema]).\n    Defaults to\n\n        - \"alternativeText\"\n        - \"readingOrder\"\n        - \"structuralNavigation\"\n        - \"tableOfContents\"\n\n`accessibilitySummary`\n  ~ A string value.\n\n`ibooks`\n  ~ iBooks-specific metadata, with the following fields:\n\n    - `version`: (string)\n    - `specified-fonts`: `true`|`false` (default `false`)\n    - `ipad-orientation-lock`: `portrait-only`|`landscape-only`\n    - `iphone-orientation-lock`: `portrait-only`|`landscape-only`\n    - `binding`: `true`|`false` (default `true`)\n    - `scroll-axis`: `vertical`|`horizontal`|`default`\n\n[accessibility schema]:  https://kb.daisy.org/publishing/docs/metadata/schema.org/index.html\n[MARC relators]: https://loc.gov/marc/relators/relaterm.html\n[reserved authority value]: https://idpf.github.io/epub-registries/authorities/\n[`spine` element]: http://idpf.org/epub/301/spec/epub-publications.html#sec-spine-elem\n\n## The `epub:type` attribute\n\nFor `epub3` output, you can mark up the heading that corresponds to an EPUB\nchapter using the [`epub:type` attribute][epub-type]. For example, to set\nthe attribute to the value `prologue`, use this Markdown:\n\n    # My chapter {epub:type=prologue}\n\nWhich will result in:\n\n    <body epub:type=\"frontmatter\">\n      <section epub:type=\"prologue\">\n        <h1>My chapter</h1>\n\nPandoc will output `<body epub:type=\"bodymatter\">`, unless\nyou use one of the following values, in which case either\n`frontmatter` or `backmatter` will be output.\n\n`epub:type` of first section      `epub:type` of body\n----------------------------      ------------------\nprologue                          frontmatter\nabstract                          frontmatter\nacknowledgments                   frontmatter\ncopyright-page                    frontmatter\ndedication                        frontmatter\ncredits                           frontmatter\nkeywords                          frontmatter\nimprint                           frontmatter\ncontributors                      frontmatter\nother-credits                     frontmatter\nerrata                            frontmatter\nrevision-history                  frontmatter\ntitlepage                         frontmatter\nhalftitlepage                     frontmatter\nseriespage                        frontmatter\nforeword                          frontmatter\npreface                           frontmatter\nfrontispiece                      frontmatter\nappendix                          backmatter\ncolophon                          backmatter\nbibliography                      backmatter\nindex                             backmatter\n\n[epub-type]: http://www.idpf.org/epub/31/spec/epub-contentdocs.html#sec-epub-type-attribute\n\n## Linked media\n\nBy default, pandoc will download media referenced from any `<img>`, `<audio>`,\n`<video>` or `<source>` element present in the generated EPUB,\nand include it in the EPUB container, yielding a completely\nself-contained EPUB.  If you want to link to external media resources\ninstead, use raw HTML in your source and add `data-external=\"1\"` to the tag\nwith the `src` attribute.  For example:\n\n    <audio controls=\"1\">\n      <source src=\"https://example.com/music/toccata.mp3\"\n              data-external=\"1\" type=\"audio/mpeg\">\n      </source>\n    </audio>\n\nIf the input format already is HTML then `data-external=\"1\"` will work\nas expected for `<img>` elements. Similarly, for Markdown, external\nimages can be declared with `![img](url){external=1}`. Note that this\nonly works for images; the other media elements have no native\nrepresentation in pandoc's AST and require the use of raw HTML.\n\n## EPUB styling\n\nBy default, pandoc will include some basic styling\ncontained in its `epub.css` data file.  (To see this,\nuse `pandoc --print-default-data-file epub.css`.)\nTo use a different CSS file, just use the `--css` command\nline option.  A few inline styles are defined in addition; these\nare essential for correct formatting of pandoc's HTML output.\n\nThe `document-css` variable may be set if the more opinionated\nstyling of pandoc's default HTML templates is desired (and\nin that case the variables defined in [Variables for HTML] may\nbe used to fine-tune the style).\n\n# Chunked HTML\n\n`pandoc -t chunkedhtml` will produce a zip archive of linked\nHTML files, one for each section of the original document.\nInternal links will automatically be adjusted to point to\nthe right place, images linked to under the working directory\nwill be incorporated, and navigation links will be added.\nIn addition, a JSON file `sitemap.json` will be included\ndescribing the hierarchical structure of the files.\n\nIf an output file without an extension is specified, then\nit will be interpreted as a directory and the zip archive\nwill be automatically unpacked into it (unless it already\nexists, in which case an error will be raised).  Otherwise\na `.zip` file will be produced.\n\nThe navigation links can be customized by adjusting the\ntemplate.  By default, a table of contents is included only\non the top page. To include it on every page, set the\n`toc` variable manually.\n\n# Jupyter notebooks\n\nWhen creating a [Jupyter notebook], pandoc will try to infer the\nnotebook structure.  Code blocks with the class `code` will be\ntaken as code cells, and intervening content will be taken as\nMarkdown cells.  Attachments will automatically be created for\nimages in Markdown cells. Metadata will be taken from the\n`jupyter` metadata field.  For example:\n\n````\n---\ntitle: My notebook\njupyter:\n  nbformat: 4\n  nbformat_minor: 5\n  kernelspec:\n     display_name: Python 2\n     language: python\n     name: python2\n  language_info:\n     codemirror_mode:\n       name: ipython\n       version: 2\n     file_extension: \".py\"\n     mimetype: \"text/x-python\"\n     name: \"python\"\n     nbconvert_exporter: \"python\"\n     pygments_lexer: \"ipython2\"\n     version: \"2.7.15\"\n---\n\n# Lorem ipsum\n\n**Lorem ipsum** dolor sit amet, consectetur adipiscing elit. Nunc luctus\nbibendum felis dictum sodales.\n\n``` code\nprint(\"hello\")\n```\n\n## Pyout\n\n``` code\nfrom IPython.display import HTML\nHTML(\"\"\"\n<script>\nconsole.log(\"hello\");\n</script>\n<b>HTML</b>\n\"\"\")\n```\n\n## Image\n\nThis image ![image](myimage.png) will be\nincluded as a cell attachment.\n````\n\nIf you want to add cell attributes, group cells differently, or\nadd output to code cells, then you need to include divs to\nindicate the structure. You can use either [fenced\ndivs][Extension: `fenced_divs`] or [native divs][Extension:\n`native_divs`] for this.  Here is an example:\n\n````\n:::::: {.cell .markdown}\n# Lorem\n\n**Lorem ipsum** dolor sit amet, consectetur adipiscing elit. Nunc luctus\nbibendum felis dictum sodales.\n::::::\n\n:::::: {.cell .code execution_count=1}\n``` {.python}\nprint(\"hello\")\n```\n\n::: {.output .stream .stdout}\n```\nhello\n```\n:::\n::::::\n\n:::::: {.cell .code execution_count=2}\n``` {.python}\nfrom IPython.display import HTML\nHTML(\"\"\"\n<script>\nconsole.log(\"hello\");\n</script>\n<b>HTML</b>\n\"\"\")\n```\n\n::: {.output .execute_result execution_count=2}\n```{=html}\n<script>\nconsole.log(\"hello\");\n</script>\n<b>HTML</b>\nhello\n```\n:::\n::::::\n````\n\nIf you include raw HTML or TeX in an output cell, use the\n[raw attribute](#extension-raw_attribute), as shown\nin the last cell of the example above.  Although pandoc can\nprocess \"bare\" raw HTML and TeX, the result is often\ninterspersed raw elements and normal textual elements, and\nin an output cell pandoc expects a single, connected raw\nblock.  To avoid using raw HTML or TeX except when\nmarked explicitly using raw attributes, we recommend\nspecifying the extensions `-raw_html-raw_tex+raw_attribute` when\ntranslating between Markdown and ipynb notebooks.\n\nNote that options and extensions that affect reading and\nwriting of Markdown will also affect Markdown cells in ipynb\nnotebooks.  For example, `--wrap=preserve` will preserve\nsoft line breaks in Markdown cells; `--markdown-headings=setext` will\ncause Setext-style headings to be used; and `--preserve-tabs` will\nprevent tabs from being turned to spaces.\n\n# Syntax highlighting\n\nPandoc will automatically highlight syntax in [fenced code blocks] that\nare marked with a language name.  The Haskell library [skylighting] is\nused for highlighting. Currently highlighting is supported only for\nHTML, EPUB, Docx, Ms, Man, and LaTeX/PDF output. To see a list\nof language names that pandoc will recognize, type `pandoc\n--list-highlight-languages`.\n\nThe color scheme can be selected using the `--highlight-style` option.\nThe default color scheme is `pygments`, which imitates the default color\nscheme used by the Python library pygments (though pygments is not actually\nused to do the highlighting).  To see a list of highlight styles,\ntype `pandoc --list-highlight-styles`.\n\nIf you are not satisfied with the predefined styles, you can\nuse `--print-highlight-style` to generate a JSON `.theme` file which\ncan be modified and used as the argument to `--highlight-style`. To\nget a JSON version of the `pygments` style, for example:\n\n    pandoc -o my.theme --print-highlight-style pygments\n\nThen edit `my.theme` and use it like this:\n\n    pandoc --highlight-style my.theme\n\nIf you are not satisfied with the built-in highlighting, or you\nwant to highlight a language that isn't supported, you can use the\n`--syntax-definition` option to load a [KDE-style XML syntax definition\nfile](https://docs.kde.org/stable5/en/kate/katepart/highlight.html).\nBefore writing your own, have a look at KDE's [repository of syntax\ndefinitions](https://github.com/KDE/syntax-highlighting/tree/master/data/syntax).\n\nIf you receive an error that pandoc \"Could not read highlighting theme\",\ncheck that the JSON file is encoded with UTF-8 and has no Byte-Order Mark (BOM).\n\nTo disable highlighting, use the `--no-highlight` option.\n\n[skylighting]: https://github.com/jgm/skylighting\n\n# Custom Styles\n\nCustom styles can be used in the docx, odt and ICML formats.\n\n## Output\n\nBy default, pandoc's odt, docx and ICML output applies a predefined set of\nstyles for blocks such as paragraphs and block quotes, and uses largely\ndefault formatting (italics, bold) for inlines. This will work for most\npurposes, especially alongside a [reference doc](#option--reference-doc) file.\nHowever, if you need to apply your own styles to blocks, or match a preexisting\nset of styles, pandoc allows you to define custom styles for blocks and text\nusing `div`s and `span`s, respectively.\n\nIf you define a Div, Span, or Table with the attribute\n`custom-style`, pandoc will apply your specified style to the\ncontained elements (with the exception of elements whose function\ndepends on a style, like headings, code blocks, block quotes, or\nlinks). So, for example, using the `bracketed_spans` syntax,\n\n    [Get out]{custom-style=\"Emphatically\"}, he said.\n\nwould produce a file with \"Get out\" styled with character\nstyle `Emphatically`. Similarly, using the `fenced_divs` syntax,\n\n    Dickinson starts the poem simply:\n\n    ::: {custom-style=\"Poetry\"}\n    | A Bird came down the Walk---\n    | He did not know I saw---\n    :::\n\nwould style the two contained lines with the `Poetry` paragraph style.\n\nStyles will be defined in the output file as inheriting\nfrom normal text (docx) or Default Paragraph Style (odt), if the\nstyles are not yet in your [reference doc](#option--reference-doc).\nIf they are already defined, pandoc will not alter the definition.\n\nThis feature allows for greatest customization in conjunction with\n[pandoc filters]. If you want all paragraphs after block quotes to be\nindented, you can write a filter to apply the styles necessary. If you\nwant all italics to be transformed to the `Emphasis` character style\n(perhaps to change their color), you can write a filter which will\ntransform all italicized inlines to inlines within an `Emphasis`\ncustom-style `span`.\n\nFor docx or odt output, you don't need to enable any extensions for\ncustom styles to work.\n\n[pandoc filters]: https://pandoc.org/filters.html\n\n## Input\n\nThe docx reader, by default, only reads those styles that it can\nconvert into pandoc elements, either by direct conversion or\ninterpreting the derivation of the input document's styles.\n\nBy enabling the [`styles` extension](#ext-styles) in the docx reader\n(`-f docx+styles`), you can produce output that maintains the styles\nof the input document, using the `custom-style` class. A `custom-style`\nattribute will be added for each style. Divs will be created to\nhold the paragraph styles, and Spans to hold the character styles.\nTable styles will be applied directly to the Table.\n\nFor example, using the `custom-style-reference.docx` file in the test\ndirectory, we have the following different outputs:\n\nWithout the `+styles` extension:\n\n    $ pandoc test/docx/custom-style-reference.docx -f docx -t markdown\n    This is some text.\n\n    This is text with an *emphasized* text style. And this is text with a\n    **strengthened** text style.\n\n    > Here is a styled paragraph that inherits from Block Text.\n\nAnd with the extension:\n\n    $ pandoc test/docx/custom-style-reference.docx -f docx+styles -t markdown\n\n    ::: {custom-style=\"First Paragraph\"}\n    This is some text.\n    :::\n\n    ::: {custom-style=\"Body Text\"}\n    This is text with an [emphasized]{custom-style=\"Emphatic\"} text style.\n    And this is text with a [strengthened]{custom-style=\"Strengthened\"}\n    text style.\n    :::\n\n    ::: {custom-style=\"My Block Style\"}\n    > Here is a styled paragraph that inherits from Block Text.\n    :::\n\nWith these custom styles, you can use your input document as a\nreference-doc while creating docx output (see below), and maintain the\nsame styles in your input and output files.\n\n# Custom readers and writers\n\nPandoc can be extended with custom readers and writers written\nin [Lua].  (Pandoc includes a Lua interpreter, so Lua need not\nbe installed separately.)\n\nTo use a custom reader or writer, simply specify the path to the\nLua script in place of the input or output format. For example:\n\n    pandoc -t data/sample.lua\n    pandoc -f my_custom_markup_language.lua -t latex -s\n\nIf the script is not found relative to the working directory,\nit will be sought in the `custom` subdirectory of the user data\ndirectory (see `--data-dir`).\n\nA custom reader is a Lua script that defines one function,\nReader, which takes a string as input and returns a Pandoc\nAST.  See the [Lua filters documentation] for documentation\nof the functions that are available for creating pandoc\nAST elements.  For parsing, the [lpeg] parsing library\nis available by default. To see a sample custom reader:\n\n    pandoc --print-default-data-file creole.lua\n\nIf you want your custom reader to have access to reader options\n(e.g. the tab stop setting), you give your Reader function a\nsecond `options` parameter.\n\nA custom writer is a Lua script that defines a function\nthat specifies how to render each element in a Pandoc AST.\nSee the [djot-writer.lua] for a full-featured example.\n\nNote that custom writers have no default template.  If you want\nto use `--standalone` with a custom writer, you will need to\nspecify a template manually using `--template` or add a new\ndefault template with the name\n`default.NAME_OF_CUSTOM_WRITER.lua` to the `templates`\nsubdirectory of your user data directory (see [Templates]).\n\n[Lua]: https://www.lua.org\n[lpeg]:  http://www.inf.puc-rio.br/~roberto/lpeg/\n[djot-writer.lua]: https://github.com/jgm/djot.lua/blob/main/djot-writer.lua\n\n# Reproducible builds\n\nSome of the document formats pandoc targets (such as EPUB,\ndocx, and ODT) include build timestamps in the generated document.\nThat means that the files generated on successive builds will\ndiffer, even if the source does not.  To avoid this, set the\n`SOURCE_DATE_EPOCH` environment variable, and the timestamp will\nbe taken from it instead of the current time.\n`SOURCE_DATE_EPOCH` should contain an integer unix timestamp\n(specifying the number of seconds since midnight UTC January 1, 1970).\n\nSome document formats also include a unique identifier.  For\nEPUB, this can be set explicitly by setting the `identifier`\nmetadata field (see [EPUB Metadata], above).\n\n# Accessible PDFs and PDF archiving standards\n\nPDF is a flexible format, and using PDF in certain contexts\nrequires additional conventions. For example, PDFs are not\naccessible by default; they define how characters are placed on a\npage but do not contain semantic information on the content.\nHowever, it is possible to generate accessible PDFs, which use\ntagging to add semantic information to the document.\n\nPandoc defaults to LaTeX to generate PDF. Tagging support in LaTeX\nis in development and not readily available, so PDFs generated in\nthis way will always be untagged and not accessible. This means\nthat alternative engines must be used to generate accessible PDFs.\n\nThe PDF standards PDF/A and PDF/UA define further restrictions\nintended to optimize PDFs for archiving and accessibility. Tagging\nis commonly used in combination with these standards to ensure\nbest results.\n\nNote, however, that standard compliance depends on many things,\nincluding the colorspace of embedded images. Pandoc cannot check\nthis, and external programs must be used to ensure that generated\nPDFs are in compliance.\n\n## ConTeXt\n\nConTeXt always produces tagged PDFs, but the quality depends on\nthe input. The default ConTeXt markup generated by pandoc is\noptimized for readability and reuse, not tagging. Enable the\n[`tagging`](#extension--tagging) format extension to force markup\nthat is optimized for tagging. This can be combined with the\n`pdfa` variable to generate standard-compliant PDFs. E.g.:\n\n    pandoc --to=context+tagging -V pdfa=3a\n\nA recent `context` version should be used, as older versions\ncontained a bug that lead to invalid PDF metadata.\n\n## WeasyPrint\n\nThe HTML-based engine WeasyPrint includes experimental support for\nPDF/A and PDF/UA since version 57. Tagged PDFs can created with\n\n    pandoc --pdf-engine=weasyprint \\\n           --pdf-engine-opt=--pdf-variant=pdf/ua-1 ...\n\nThe feature is experimental and standard compliance should not be\nassumed.\n\n## Prince XML\n\nThe non-free HTML-to-PDf converter `prince` has extensive support\nfor various PDF standards as well as tagging. E.g.:\n\n    pandoc --pdf-engine=prince \\\n           --pdf-engine-opt=--tagged-pdf ...\n\nSee the prince documentation for more info.\n\n## Word Processors\n\nWord processors like LibreOffice and MS Word can also be used to\ngenerate standardized and tagged PDF output. Pandoc does not\nsupport direct conversions via these tools. However, pandoc can\nconvert a document to a `docx` or `odt` file, which can then be\nopened and converted to PDF with the respective word processor.\nSee the documentation for [Word][word-accessible-pdfs] and\n[LibreOffice][lo-pdf-export].\n\n[word-accessible-pdfs]: https://support.microsoft.com/en-us/office/create-accessible-pdfs-064625e0-56ea-4e16-ad71-3aa33bb4b7ed\n[lo-pdf-export]: https://help.libreoffice.org/latest/en-US/text/shared/01/ref_pdf_export_general.html\n\n\n# Running pandoc as a web server\n\nIf you rename (or symlink) the pandoc executable to\n`pandoc-server`, or if you call pandoc with `server` as the first\nargument, it will start up a web server with a JSON API. This\nserver exposes most of the conversion functionality of pandoc. For\nfull documentation, see the [pandoc-server] man page.\n\nIf you rename (or symlink) the pandoc executable to\n`pandoc-server.cgi`, it will function as a CGI program\nexposing the same API as `pandoc-server`.\n\n`pandoc-server` is designed to be maximally secure; it uses\nHaskell's type system to provide strong guarantees that no I/O\nwill be performed on the server during pandoc conversions.\n\n[pandoc-server]: https://github.com/jgm/pandoc/blob/master/doc/pandoc-server.md\n\n# Running pandoc as a Lua interpreter\n\nCalling the pandoc executable under the name `pandoc-lua` or with\n`lua` as the first argument will make it function as a standalone\nLua interpreter. The behavior is mostly identical to that of the\n[standalone `lua` executable][lua standalone], version 5.4.\nFor full documentation, see the [pandoc-lua] man page.\n\n[lua standalone]: https://www.lua.org/manual/5.4/manual.html#7\n[pandoc-lua]: https://github.com/jgm/pandoc/blob/master/doc/pandoc-lua.md\n\n# A note on security\n\n1. Although pandoc itself will not create or modify any files other\n   than those you explicitly ask it create (with the exception\n   of temporary files used in producing PDFs), a filter or custom\n   writer could in principle do anything on your file system. Please\n   audit filters and custom writers very carefully before using them.\n\n2. Several input formats (including HTML, Org, and RST) support `include`\n   directives that allow the contents of a file to be included in the\n   output. An untrusted attacker could use these to view the contents of\n   files on the file system.  (Using the `--sandbox` option can\n   protect against this threat.)\n\n3. Several output formats (including RTF, FB2, HTML with\n   `--self-contained`, EPUB, Docx, and ODT) will embed encoded\n   or raw images into the output file.  An untrusted attacker\n   could exploit this to view the contents of non-image files on the\n   file system.  (Using the `--sandbox` option can protect\n   against this threat, but will also prevent including images in\n   these formats.)\n\n4. If your application uses pandoc as a Haskell library (rather than\n   shelling out to the executable), it is possible to use it in a mode\n   that fully isolates pandoc from your file system, by running the\n   pandoc operations in the `PandocPure` monad. See the document\n   [Using the pandoc API](https://pandoc.org/using-the-pandoc-api.html)\n   for more details. (This corresponds to the use of the `--sandbox`\n   option on the command line.)\n\n5. Pandoc's parsers can exhibit pathological performance on some\n   corner cases.  It is wise to put any pandoc operations under\n   a timeout, to avoid DOS attacks that exploit these issues.\n   If you are using the pandoc executable, you can add the\n   command line options `+RTS -M512M -RTS` (for example) to limit\n   the heap size to 512MB.  Note that the `commonmark` parser\n   (including `commonmark_x` and `gfm`) is much less vulnerable\n   to pathological performance than the `markdown` parser, so\n   it is a better choice when processing untrusted input.\n\n6. The HTML generated by pandoc is not guaranteed to be safe.\n   If `raw_html` is enabled for the Markdown input, users can\n   inject arbitrary HTML.  Even if `raw_html` is disabled,\n   users can include dangerous content in URLs and attributes.\n   To be safe, you should run all HTML generated from untrusted\n   user input through an HTML sanitizer.\n\n# Authors\n\nCopyright 2006--2024 John MacFarlane (jgm@berkeley.edu). Released\nunder the [GPL], version 2 or greater.  This software carries no\nwarranty of any kind.  (See COPYRIGHT for full copyright and\nwarranty notices.) For a full list of contributors, see the file\nAUTHORS.md in the pandoc source code.\n\n[GPL]: https://www.gnu.org/copyleft/gpl.html \"GNU General Public License\"\n[YAML]: https://yaml.org/spec/1.2/spec.html \"YAML v1.2 Spec\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 10.88,
          "content": "version?=$(shell grep '^[Vv]ersion:' pandoc.cabal | awk '{print $$2;}')\npandoc-cli-version?=$(shell grep '^[Vv]ersion:' pandoc-cli/pandoc-cli.cabal | awk '{print $$2;}')\nSOURCEFILES?=$(shell git ls-tree -r main --name-only src pandoc-cli pandoc-server pandoc-lua-engine | grep \"\\.hs$$\")\nPANDOCSOURCEFILES?=$(shell git ls-tree -r main --name-only src | grep \"\\.hs$$\")\nDOCKERIMAGE=quay.io/benz0li/ghc-musl:9.6\nTIMESTAMP=$(shell date \"+%Y%m%d_%H%M\")\nLATESTBENCH=$(word 1,$(shell ls -t bench_*.csv 2>/dev/null))\nBASELINE?=$(LATESTBENCH)\nROOT?=Text.Pandoc\nifeq ($(BASELINE),)\nBASELINECMD=\nelse\nBASELINECMD=--baseline $(BASELINE)\nendif\nGHCOPTS=-fwrite-ide-info -fdiagnostics-color=always -j +RTS -A8m -RTS\nCABALOPTS?=--disable-optimization -f-export-dynamic\nWEBSITE=../../web/pandoc.org\nREVISION?=1\nBENCHARGS?=--csv bench_$(TIMESTAMP).csv $(BASELINECMD) --timeout=6 +RTS -T --nonmoving-gc -RTS $(if $(PATTERN),--pattern \"$(PATTERN)\",)\npandoc=$(shell cabal list-bin $(CABALOPTS) pandoc-cli)\n\nall: build test binpath ## build executable and run tests\n.PHONY: all\n\nbuild: ## build executable\n\tcabal build \\\n\t  --ghc-options='$(GHCOPTS)' \\\n\t  $(CABALOPTS) pandoc-cli\n.PHONY: build\n\nprof: ## build with profiling and optimizations\n\tcabal build --enable-profiling all\n.PHONY: prof\n\nbinpath: ## print path of built pandoc executable\n\t@cabal list-bin $(CABALOPTS) --ghc-options='$(GHCOPTS)' pandoc-cli\n.PHONY: binpath\n\nghcid: ## run ghcid\n\tghcid -c 'cabal repl pandoc'\n.PHONY: ghcid\n\nrepl:  ## run cabal repl\n\tcabal repl $(CABALOPTS) pandoc\n.PHONY: repl\n\nlinecounts: ## print line counts for each module\n\t@wc -l $(SOURCEFILES) | sort -n\n.PHONY: linecounts\n\n# Note:  to accept current results of golden tests,\n# make test TESTARGS='--accept'\ntest:  ## unoptimized build and run tests with cabal\n\tcabal test \\\n\t  --ghc-options='$(GHCOPTS)' \\\n\t  $(CABALOPTS) \\\n\t  --test-options=\"--hide-successes --ansi-tricks=false $(TESTARGS)\" all\n.PHONY: test\n\nquick-stack: ## unoptimized build and tests with stack\n\tstack install \\\n\t  --ghc-options='$(GHCOPTS)' \\\n\t  --system-ghc --flag 'pandoc:embed_data_files' \\\n\t  --fast \\\n\t  --test \\\n\t  --test-arguments='-j4 --hide-successes --ansi-tricks=false $(TESTARGS)'\n.PHONY: quick-stack\n\nprerelease: validate-epub README.md fix_spacing check-cabal check-stack checkdocs man check-version-sync check-changelog check-manversion uncommitted_changes ## prerelease checks\n.PHONY: prerelease\n\nuncommitted_changes:\n\t! git diff | grep '.'\n.PHONY: uncommitted_changes\n\nauthors:  ## prints unique authors since LASTRELEASE (version)\n\tgit log --pretty=format:\"%an\" $(LASTRELEASE)..HEAD | sort | uniq\n\n\ncheck-stack:\n\tstack-lint-extra-deps # check that stack.yaml dependencies are up to date\n\t! grep 'git:' stack.yaml # use only released versions\n.PHONY: check-stack\n\ncheck-cabal: git-files.txt sdist-files.txt\n\t@echo \"Checking to see if all committed test/data files are in sdist.\"\n\tdiff -u $^\n\t@for pkg in . pandoc-lua-engine pandoc-server pandoc-cli; \\\n\tdo \\\n\t     pushd $$pkg ; \\\n\t     cabal check ; \\\n\t     cabal outdated ; \\\n\t     popd ; \\\n\tdone\n\t! grep 'git:' cabal.project # use only released versions\n\n.PHONY: check-cabal\n\ncheck-version-sync:\n\t@echo \"Checking for match between pandoc and pandoc-cli versions\"\n\t[ $(version) == $(pandoc-cli-version) ]\n\t@echo \"Checking that pandoc-cli depends on this version of pandoc\"\n\tgrep 'pandoc == $(version)' pandoc-cli/pandoc-cli.cabal\n.PHONY: check-version-sync\n\ncheck-changelog:\n\t@echo \"Checking for changelog entry for this version\"\n\tgrep '## pandoc $(version) (\\d\\d\\d\\d-\\d\\d-\\d\\d)' changelog.md\n.PHONY: check-changelog\n\ncheck-manversion:\n\t@echo \"Checking version number in man pages\"\n\tgrep '\"pandoc $(version)\"' \"pandoc-cli/man/pandoc.1\"\n\tgrep '\"pandoc $(version)\"' \"pandoc-cli/man/pandoc-server.1\"\n\tgrep '\"pandoc $(version)\"' \"pandoc-cli/man/pandoc-lua.1\"\n.PHONY: check-manversion\n\ncheckdocs:\n\t@echo \"Checking for tabs in manual.\"\n\t! grep -q -n -e \"\\t\" \\\n\t   MANUAL.txt changelog.md doc/pandoc-server.md doc/pandoc-lua.md\n.PHONY: checkdocs\n\nbench: ## build and run benchmarks\n\tcabal bench --benchmark-options='$(BENCHARGS)' 2>&1 | tee \"bench_$(TIMESTAMP).txt\"\n.PHONY: bench\n\nreformat: ## reformat with stylish-haskell\n\tfor f in $(SOURCEFILES); do echo $$f; stylish-haskell -i $$f ; done\n.PHONY: reformat\n\nlint: ## run hlint\n\thlint --report=hlint.html $(SOURCEFILES) || open hlint.html\n.PHONY: lint\n\nfix_spacing: ## fix trailing newlines and spaces\n\t@ERRORS=0; echo \"Checking for spacing errors...\" && for f in $(SOURCEFILES); do printf '%s\\n' \"`cat $$f`\" | sed -e 's/  *$$//' > $$f.tmp; diff -u $$f $$f.tmp || ERRORS=1; mv $$f.tmp $$f; done; [ $$ERRORS -eq 0 ] || echo \"Spacing errors have been fixed; please commit the changes.\"; exit $$ERRORS\n.PHONY: fix_spacing\n\nchanges_github: ## copy this release's changes in gfm\n\t$(pandoc) --lua-filter tools/extract-changes.lua changelog.md -t gfm --wrap=none --template tools/changes_template.html | sed -e 's/\\\\#/#/g' | pbcopy\n.PHONY: changes_github\n\nman: pandoc-cli/man/pandoc.1 pandoc-cli/man/pandoc-server.1 pandoc-cli/man/pandoc-lua.1 ## build man pages\n.PHONY: man\n\nlatex-package-dependencies: ## print packages used by default latex template\n\t$(pandoc) lua tools=latex-package-dependencies.lua\n.PHONY: latex-package-dependencies\n\ncoverage: ## code coverage information\n\tcabal test \\\n\t  --ghc-options='-fhpc $(GHCOPTS)' \\\n\t  $(CABALOPTS) \\\n\t  --test-options=\"--hide-successes --ansi-tricks=false $(TESTARGS)\"\n\thpc markup --destdir=coverage test/test-pandoc.tix\n\topen coverage/hpc_index.html\n.PHONY: coverage\n\nweeder: ## run weeder to find dead code\n\tweeder\n.PHONY: weeder\n\ntransitive-deps: ## print transitive dependencies\n\tcabal-plan topo | sort | sed -e 's/-[0-9]\\..*//'\n.PHONY: transitive-deps\n\ndebpkg: ## create linux package\n\tdocker run -v `pwd`:/mnt \\\n                   -v `pwd`/linux/artifacts:/artifacts \\\n\t\t   --user $(id -u):$(id -g) \\\n\t\t   -e REVISION=$(REVISION) \\\n       -e GHCOPTS=\"-j4 +RTS -A256m -RTS -split-sections -optc-Os -optl=-pthread\" \\\n       -e CABALOPTS=\"-f-export-dynamic -fembed_data_files -fserver -flua --enable-executable-static -j4\" \\\n\t\t   -w /mnt \\\n\t\t   --memory=0 \\\n\t\t   --rm \\\n\t\t   $(DOCKERIMAGE) \\\n\t\t   bash \\\n\t\t   /mnt/linux/make_artifacts.sh\n.PHONY: debpkg\n\npandoc-cli/man/pandoc.1: MANUAL.txt man/pandoc.1.before man/pandoc.1.after pandoc.cabal\n\t$(pandoc) $< -f markdown -t man -s \\\n\t\t--lua-filter man/manfilter.lua \\\n\t\t--include-before-body man/pandoc.1.before \\\n\t\t--include-after-body man/pandoc.1.after \\\n\t\t--metadata author=\"\" \\\n    --variable section=\"1\" \\\n    --variable title=\"pandoc\" \\\n    --variable header='Pandoc User\\[cq]s Guide' \\\n\t\t--variable footer=\"pandoc $(version)\" \\\n\t\t-o $@\n\npandoc-cli/man/%.1: doc/%.md pandoc.cabal\n\t$(pandoc) $< -f markdown -t man -s \\\n\t\t--lua-filter man/manfilter.lua \\\n\t\t--metadata author=\"\" \\\n    --variable section=\"1\" \\\n    --variable title=\"$(basename $(notdir $@))\" \\\n    --variable header='Pandoc User\\[cq]s Guide' \\\n\t\t--variable footer=\"pandoc $(version)\" \\\n    --include-after-body man/pandoc.1.after \\\n\t\t-o $@\n\n\nREADME.md: README.template MANUAL.txt tools/update-readme.lua\n\t$(pandoc) --lua-filter tools/update-readme.lua \\\n\t      --reference-location=section -t gfm $< -o $@\n\ndoc/lua-filters.md: tools/update-lua-module-docs.lua  ## update lua-filters.md module docs\n\tcabal run pandoc-cli -- \\\n\t\t--standalone \\\n\t\t--reference-links \\\n\t\t--columns=66 \\\n\t\t--from=$< \\\n\t\t--output=$@ \\\n\t\t$@\n.PHONY: doc/lua-filters.md\n\ndownload_stats: ## print download stats from GitHub releases\n\tcurl https://api.github.com/repos/jgm/pandoc/releases | \\\n\t\tjq -r '.[] | .assets | .[] | \"\\(.download_count)\\t\\(.name)\"'\n.PHONY: download_stats\n\npandoc-templates: ## update pandoc-templates repo\n\trm ../pandoc-templates/default.* ; \\\n\tcp data/templates/* ../pandoc-templates/ ; \\\n\tpushd ../pandoc-templates/ && \\\n\tgit add * && \\\n\tgit commit -m \"Updated templates for pandoc $(version)\" && \\\n\tpopd\n.PHONY: pandoc-templates\n\nupdate-website: ## update website and upload\n\tmake -C $(WEBSITE) update\n\tmake -C $(WEBSITE)\n\tmake -C $(WEBSITE) upload\n.PHONY: update-website\n\nupdate-translations: ## update data/translations from Babel and Polyglossia\n\tpython tools/update-translations.py\n.PHONY: update-translations\n\nvalidate-docx-golden-tests: ## validate docx golden tests against schema\n\twhich xmllint || (\"xmllint is required\" && exit 1)\n\ttest -d ./docx-validator || \\\n\t\t(git clone https://github.com/devoidfury/docx-validator && \\\n\t\tcd docx-validator && patch -p1 <../wml.xsd.patch)\n\tsh ./tools/validate-docx.sh test/docx/golden/*.docx\n.PHONY: validate-docx-golden-tests\n\nvalidate-docx-golden-tests2: ## validate docx golden tests using OOXMLValidator\n\twhich dotnet || (\"dotnet is required\" && exit 1)\n\twhich json_reformat || (\"json_reformat is required\" && exit 1)\n\ttest -d ./OOXML-Validator || \\\n\t\t(git clone https://github.com/mikeebowen/OOXML-Validator.git \\\n\t\t&& cd OOXML-Validator && dotnet build --configuration=Release)\n\tsh ./tools/validate-docx2.sh test/docx/golden/\n.PHONY: validate-docx-golden-tests2\n\nvalidate-epub: ## generate an epub and validate it with epubcheck and ace\n\twhich epubcheck || exit 1\n\twhich ace || exit 1\n\ttmp=$$(mktemp -d) && \\\n  for epubver in 2 3; do \\\n    file=$$tmp/ver$$epubver.epub ; \\\n\t  $(pandoc) test/epub/wasteland.epub --epub-cover=test/lalune.jpg -Mtitle=\"The Wasteland\" --resource-path test/epub -t epub$$epubver -o $$file --number-sections --toc --quiet && \\\n\t  echo $$file && \\\n\t  epubcheck $$file || exit 1 ; \\\n  done && \\\n\tace $$tmp/ver3.epub -o ace-report-v2 --force\n\nmodules.csv: $(PANDOCSOURCEFILES)\n\t@rg '^import.*Text\\.Pandoc\\.' --with-filename $^ \\\n\t\t| rg -v 'Text\\.Pandoc\\.(Definition|Builder|Walk|Generic)' \\\n\t\t| sort \\\n\t\t| uniq \\\n\t\t| sed -e 's/src\\///' \\\n\t        | sed -e 's/\\//\\./g' \\\n\t\t| sed -e 's/\\.hs:import *\\(qualified *\\)*\\([^ ]*\\).*/,\\2/' \\\n\t\t> $@\n\nmodules.dot: modules.csv\n\t@echo \"digraph G {\" > $@\n\t@echo \"overlap=\\\"scale\\\"\" >> $@\n\t@sed -e 's/\\([^,]*\\),\\(.*\\)/  \"\\1\" -> \"\\2\";/' $< >> $@\n\t@echo \"}\" >> $@\n\n# To get the module dependencies of Text.Pandoc.Parsing:\n# make modules.pdf ROOT=Text.Pandoc.Parsing\nmodules.pdf: modules.dot\n\tgvpr -f tools/cliptree.gvpr -a '\"$(ROOT)\"' $< | dot -Tpdf > $@\n\n# make moduledeps ROOT=Text.Pandoc.Parsing\nmoduledeps: modules.csv  ## Print transitive dependencies of a module ROOT\n\t@echo \"$(ROOT)\"\n\t@lua tools/moduledeps.lua transitive $(ROOT) | sort\n.PHONY: moduledeps\n\nclean: ## clean up\n\tcabal clean\n.PHONY: clean\n\n.PHONY: .FORCE\n\nsdist-files.txt: .FORCE\n\tcabal sdist --list-only | sed 's/\\.\\///' | grep '^\\(test\\|data\\)\\/' | sort > $@\n\ngit-files.txt: .FORCE\n\tgit ls-tree -r --name-only HEAD | grep '^\\(test\\|data\\)\\/' | sort > $@\n\nhelp: ## display this help\n\t@echo \"Targets:\"\n\t@grep -E '^[ a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"%-16s %s\\n\", $$1, $$2}'\n\t@echo\n\t@echo \"Environment variables with default values:\"\n\t@printf \"%-16s%s\\n\" \"CABALOPTS\" \"$(CABALOPTS)\"\n\t@printf \"%-16s%s\\n\" \"GHCOPTS\" \"$(GHCOPTS)\"\n\t@printf \"%-16s%s\\n\" \"TESTARGS\" \"$(TESTARGS)\"\n\t@printf \"%-16s%s\\n\" \"BASELINE\" \"$(BASELINE)\"\n\t@printf \"%-16s%s\\n\" \"REVISION\" \"$(REVISION)\"\n.PHONY: help\n\nhie.yaml: ## regenerate hie.yaml\n\tgen-hie > $@\n.PHONY: hie.yaml\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.1,
          "content": "<!-- Do not edit this file.  It is generated automatically from\nREADME.template and MANUAL.txt via the command:\npandoc --lua-filter tools/update-readme.lua README.template -o README.md\n-->\n\n# Pandoc\n\n[![github\nrelease](https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release)](https://github.com/jgm/pandoc/releases)\n[![hackage\nrelease](https://img.shields.io/hackage/v/pandoc.svg?label=hackage)](https://hackage.haskell.org/package/pandoc)\n[![homebrew](https://img.shields.io/homebrew/v/pandoc.svg)](https://formulae.brew.sh/formula/pandoc)\n[![stackage LTS\npackage](https://stackage.org/package/pandoc/badge/lts)](https://www.stackage.org/lts/package/pandoc)\n[![CI\ntests](https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg)](https://github.com/jgm/pandoc/actions)\n[![license](https://img.shields.io/badge/license-GPLv2+-lightgray.svg)](https://www.gnu.org/licenses/gpl.html)\n[![pandoc-discuss on google\ngroups](https://img.shields.io/badge/pandoc-discuss-red.svg?style=social)](https://groups.google.com/forum/#!forum/pandoc-discuss)\n\n## The universal markup converter\n\nPandoc is a [Haskell](https://haskell.org) library for converting from\none markup format to another, and a command-line tool that uses this\nlibrary.\n\nIt can convert *from*\n\n<div id=\"input-formats\">\n\n- `bibtex` ([BibTeX](https://ctan.org/pkg/bibtex) bibliography)\n- `biblatex` ([BibLaTeX](https://ctan.org/pkg/biblatex) bibliography)\n- `bits` ([BITS](https://jats.nlm.nih.gov/extensions/bits/) XML, alias\n  for `jats`)\n- `commonmark` ([CommonMark](https://commonmark.org) Markdown)\n- `commonmark_x` ([CommonMark](https://commonmark.org) Markdown with\n  extensions)\n- `creole` ([Creole 1.0](http://www.wikicreole.org/wiki/Creole1.0))\n- `csljson` ([CSL\n  JSON](https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html)\n  bibliography)\n- `csv` ([CSV](https://tools.ietf.org/html/rfc4180) table)\n- `tsv`\n  ([TSV](https://www.iana.org/assignments/media-types/text/tab-separated-values)\n  table)\n- `djot` ([Djot markup](https://djot.net))\n- `docbook` ([DocBook](https://docbook.org))\n- `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))\n- `dokuwiki` ([DokuWiki markup](https://www.dokuwiki.org/dokuwiki))\n- `endnotexml` ([EndNote XML\n  bibliography](https://support.clarivate.com/Endnote/s/article/EndNote-XML-Document-Type-Definition))\n- `epub` ([EPUB](http://idpf.org/epub))\n- `fb2`\n  ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)\n  e-book)\n- `gfm` ([GitHub-Flavored\n  Markdown](https://help.github.com/articles/github-flavored-markdown/)),\n  or the deprecated and less accurate `markdown_github`; use\n  [`markdown_github`](https://pandoc.org/MANUAL.html#markdown-variants)\n  only if you need extensions not supported in\n  [`gfm`](https://pandoc.org/MANUAL.html#markdown-variants).\n- `haddock` ([Haddock\n  markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))\n- `html` ([HTML](https://www.w3.org/html/))\n- `ipynb` ([Jupyter\n  notebook](https://nbformat.readthedocs.io/en/latest/))\n- `jats` ([JATS](https://jats.nlm.nih.gov) XML)\n- `jira`\n  ([Jira](https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all)/Confluence\n  wiki markup)\n- `json` (JSON version of native AST)\n- `latex` ([LaTeX](https://www.latex-project.org/))\n- `markdown` ([Pandoc‚Äôs\n  Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown))\n- `markdown_mmd`\n  ([MultiMarkdown](https://fletcherpenney.net/multimarkdown/))\n- `markdown_phpextra` ([PHP Markdown\n  Extra](https://michelf.ca/projects/php-markdown/extra/))\n- `markdown_strict` (original unextended\n  [Markdown](https://daringfireball.net/projects/markdown/))\n- `mediawiki` ([MediaWiki\n  markup](https://www.mediawiki.org/wiki/Help:Formatting))\n- `man` ([roff man](https://man.cx/groff_man(7)))\n- `mdoc` ([mdoc](https://mandoc.bsd.lv/man/mdoc.7.html) manual page\n  markup)\n- `muse` ([Muse](https://amusewiki.org/library/manual))\n- `native` (native Haskell)\n- `odt` ([OpenOffice text\n  document](https://en.wikipedia.org/wiki/OpenDocument))\n- `opml` ([OPML](http://dev.opml.org/spec2.html))\n- `org` ([Emacs Org mode](https://orgmode.org))\n- `ris` ([RIS](https://en.wikipedia.org/wiki/RIS_(file_format))\n  bibliography)\n- `rtf` ([Rich Text\n  Format](https://en.wikipedia.org/wiki/Rich_Text_Format))\n- `rst`\n  ([reStructuredText](https://docutils.sourceforge.io/docs/ref/rst/introduction.html))\n- `t2t` ([txt2tags](https://txt2tags.org))\n- `textile` ([Textile](https://textile-lang.com))\n- `tikiwiki` ([TikiWiki\n  markup](https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax))\n- `twiki` ([TWiki\n  markup](https://twiki.org/cgi-bin/view/TWiki/TextFormattingRules))\n- `typst` ([typst](https://typst.app))\n- `vimwiki` ([Vimwiki](https://vimwiki.github.io))\n- the path of a custom Lua reader, see [Custom readers and\n  writers](https://pandoc.org/MANUAL.html#custom-readers-and-writers)\n  below\n\n</div>\n\nIt can convert *to*\n\n<div id=\"output-formats\">\n\n- `ansi` (text with [ANSI escape\n  codes](https://en.wikipedia.org/wiki/ANSI_escape_code), for terminal\n  viewing)\n- `asciidoc` (modern [AsciiDoc](https://asciidoc.org/) as interpreted by\n  [AsciiDoctor](https://asciidoctor.org/))\n- `asciidoc_legacy` ([AsciiDoc](https://asciidoc.org/) as interpreted by\n  [`asciidoc-py`](https://github.com/asciidoc-py/asciidoc-py)).\n- `asciidoctor` (deprecated synonym for `asciidoc`)\n- `beamer` ([LaTeX beamer](https://ctan.org/pkg/beamer) slide show)\n- `bibtex` ([BibTeX](https://ctan.org/pkg/bibtex) bibliography)\n- `biblatex` ([BibLaTeX](https://ctan.org/pkg/biblatex) bibliography)\n- `chunkedhtml` (zip archive of multiple linked HTML files)\n- `commonmark` ([CommonMark](https://commonmark.org) Markdown)\n- `commonmark_x` ([CommonMark](https://commonmark.org) Markdown with\n  extensions)\n- `context` ([ConTeXt](https://www.contextgarden.net/))\n- `csljson` ([CSL\n  JSON](https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html)\n  bibliography)\n- `djot` ([Djot markup](https://djot.net))\n- `docbook` or `docbook4` ([DocBook](https://docbook.org) 4)\n- `docbook5` (DocBook 5)\n- `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))\n- `dokuwiki` ([DokuWiki markup](https://www.dokuwiki.org/dokuwiki))\n- `epub` or `epub3` ([EPUB](http://idpf.org/epub) v3 book)\n- `epub2` (EPUB v2)\n- `fb2`\n  ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)\n  e-book)\n- `gfm` ([GitHub-Flavored\n  Markdown](https://help.github.com/articles/github-flavored-markdown/)),\n  or the deprecated and less accurate `markdown_github`; use\n  [`markdown_github`](https://pandoc.org/MANUAL.html#markdown-variants)\n  only if you need extensions not supported in\n  [`gfm`](https://pandoc.org/MANUAL.html#markdown-variants).\n- `haddock` ([Haddock\n  markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))\n- `html` or `html5` ([HTML](https://www.w3.org/html/),\n  i.e.¬†[HTML5](https://html.spec.whatwg.org/)/XHTML [polyglot\n  markup](https://www.w3.org/TR/html-polyglot/))\n- `html4` ([XHTML](https://www.w3.org/TR/xhtml1/) 1.0 Transitional)\n- `icml` ([InDesign\n  ICML](https://manualzz.com/doc/9627253/adobe-indesign-cs6-idml-cookbook))\n- `ipynb` ([Jupyter\n  notebook](https://nbformat.readthedocs.io/en/latest/))\n- `jats_archiving` ([JATS](https://jats.nlm.nih.gov) XML, Archiving and\n  Interchange Tag Set)\n- `jats_articleauthoring` ([JATS](https://jats.nlm.nih.gov) XML, Article\n  Authoring Tag Set)\n- `jats_publishing` ([JATS](https://jats.nlm.nih.gov) XML, Journal\n  Publishing Tag Set)\n- `jats` (alias for `jats_archiving`)\n- `jira`\n  ([Jira](https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all)/Confluence\n  wiki markup)\n- `json` (JSON version of native AST)\n- `latex` ([LaTeX](https://www.latex-project.org/))\n- `man` ([roff man](https://man.cx/groff_man(7)))\n- `markdown` ([Pandoc‚Äôs\n  Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown))\n- `markdown_mmd`\n  ([MultiMarkdown](https://fletcherpenney.net/multimarkdown/))\n- `markdown_phpextra` ([PHP Markdown\n  Extra](https://michelf.ca/projects/php-markdown/extra/))\n- `markdown_strict` (original unextended\n  [Markdown](https://daringfireball.net/projects/markdown/))\n- `markua` ([Markua](https://leanpub.com/markua/read))\n- `mediawiki` ([MediaWiki\n  markup](https://www.mediawiki.org/wiki/Help:Formatting))\n- `ms` ([roff ms](https://man.cx/groff_ms(7)))\n- `muse` ([Muse](https://amusewiki.org/library/manual))\n- `native` (native Haskell)\n- `odt` ([OpenOffice text\n  document](https://en.wikipedia.org/wiki/OpenDocument))\n- `opml` ([OPML](http://dev.opml.org/spec2.html))\n- `opendocument` ([OpenDocument](http://opendocument.xml.org))\n- `org` ([Emacs Org mode](https://orgmode.org))\n- `pdf` ([PDF](https://www.adobe.com/pdf/))\n- `plain` (plain text)\n- `pptx`\n  ([PowerPoint](https://en.wikipedia.org/wiki/Microsoft_PowerPoint)\n  slide show)\n- `rst`\n  ([reStructuredText](https://docutils.sourceforge.io/docs/ref/rst/introduction.html))\n- `rtf` ([Rich Text\n  Format](https://en.wikipedia.org/wiki/Rich_Text_Format))\n- `texinfo` ([GNU Texinfo](https://www.gnu.org/software/texinfo/))\n- `textile` ([Textile](https://textile-lang.com))\n- `slideous` ([Slideous](https://goessner.net/articles/slideous/) HTML\n  and JavaScript slide show)\n- `slidy` ([Slidy](https://www.w3.org/Talks/Tools/Slidy2/) HTML and\n  JavaScript slide show)\n- `dzslides` ([DZSlides](https://paulrouget.com/dzslides/) HTML5 +\n  JavaScript slide show)\n- `revealjs` ([reveal.js](https://revealjs.com/) HTML5 + JavaScript\n  slide show)\n- `s5` ([S5](https://meyerweb.com/eric/tools/s5/) HTML and JavaScript\n  slide show)\n- `tei` ([TEI Simple](https://github.com/TEIC/TEI-Simple))\n- `typst` ([typst](https://typst.app))\n- `xwiki` ([XWiki\n  markup](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/))\n- `zimwiki` ([ZimWiki\n  markup](https://zim-wiki.org/manual/Help/Wiki_Syntax.html))\n- the path of a custom Lua writer, see [Custom readers and\n  writers](https://pandoc.org/MANUAL.html#custom-readers-and-writers)\n  below\n\n</div>\n\nPandoc can also produce PDF output via LaTeX, Groff ms, or HTML.\n\nPandoc‚Äôs enhanced version of Markdown includes syntax for tables,\ndefinition lists, metadata blocks, footnotes, citations, math, and much\nmore. See the User‚Äôs Manual below under [Pandoc‚Äôs\nMarkdown](https://pandoc.org/MANUAL.html#pandocs-markdown).\n\nPandoc has a modular design: it consists of a set of readers, which\nparse text in a given format and produce a native representation of the\ndocument (an *abstract syntax tree* or AST), and a set of writers, which\nconvert this native representation into a target format. Thus, adding an\ninput or output format requires only adding a reader or writer. Users\ncan also run custom pandoc filters to modify the intermediate AST (see\nthe documentation for [filters](https://pandoc.org/filters.html) and\n[Lua filters](https://pandoc.org/lua-filters.html)).\n\nBecause pandoc‚Äôs intermediate representation of a document is less\nexpressive than many of the formats it converts between, one should not\nexpect perfect conversions between every format and every other. Pandoc\nattempts to preserve the structural elements of a document, but not\nformatting details such as margin size. And some document elements, such\nas complex tables, may not fit into pandoc‚Äôs simple document model.\nWhile conversions from pandoc‚Äôs Markdown to all formats aspire to be\nperfect, conversions from formats more expressive than pandoc‚Äôs Markdown\ncan be expected to be lossy.\n\n## Installing\n\nHere‚Äôs [how to install pandoc](INSTALL.md).\n\n## Documentation\n\nPandoc‚Äôs website contains a full [User‚Äôs\nGuide](https://pandoc.org/MANUAL.html). It is also available\n[here](MANUAL.txt) as pandoc-flavored Markdown. The website also\ncontains some [examples of the use of\npandoc](https://pandoc.org/demos.html) and a limited [online\ndemo](https://pandoc.org/try).\n\n## Contributing\n\nPull requests, bug reports, and feature requests are welcome. Please\nmake sure to read [the contributor guidelines](CONTRIBUTING.md) before\nopening a new issue.\n\n## License\n\n¬© 2006-2024 John MacFarlane (jgm@berkeley.edu). Released under the\n[GPL](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html \"GNU General Public License\"),\nversion 2 or greater. This software carries no warranty of any kind.\n(See COPYRIGHT for full copyright and warranty notices.)\n"
        },
        {
          "name": "README.template",
          "type": "blob",
          "size": 3.66,
          "content": "<!-- Do not edit this file.  It is generated automatically from\nREADME.template and MANUAL.txt via the command:\npandoc --lua-filter tools/update-readme.lua README.template -o README.md\n-->\n\nPandoc\n======\n\n[![github release](https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release)](https://github.com/jgm/pandoc/releases)\n[![hackage release](https://img.shields.io/hackage/v/pandoc.svg?label=hackage)](https://hackage.haskell.org/package/pandoc)\n[![homebrew](https://img.shields.io/homebrew/v/pandoc.svg)](https://formulae.brew.sh/formula/pandoc)\n[![stackage LTS package](https://stackage.org/package/pandoc/badge/lts)](https://www.stackage.org/lts/package/pandoc)\n[![CI tests](https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg)](https://github.com/jgm/pandoc/actions)\n[![license](https://img.shields.io/badge/license-GPLv2+-lightgray.svg)](https://www.gnu.org/licenses/gpl.html)\n[![pandoc-discuss on google groups](https://img.shields.io/badge/pandoc-discuss-red.svg?style=social)](https://groups.google.com/forum/#!forum/pandoc-discuss)\n\n\nThe universal markup converter\n------------------------------\n\nPandoc is a [Haskell] library for converting from one markup format to\nanother, and a command-line tool that uses this library.\n\nIt can convert *from*\n\n::: {#input-formats}\n:::\n\nIt can convert *to*\n\n::: {#output-formats}\n:::\n\nPandoc can also produce PDF output via LaTeX, Groff ms, or HTML.\n\nPandoc's enhanced version of Markdown includes syntax for tables,\ndefinition lists, metadata blocks, footnotes, citations, math,\nand much more.  See the User's Manual below under\n[Pandoc's Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown).\n\nPandoc has a modular design: it consists of a set of readers, which parse\ntext in a given format and produce a native representation of the document\n(an _abstract syntax tree_ or AST), and a set of writers, which convert\nthis native representation into a target format. Thus, adding an input\nor output format requires only adding a reader or writer. Users can also\nrun custom pandoc filters to modify the intermediate AST (see\nthe documentation for [filters](https://pandoc.org/filters.html)\nand [Lua filters](https://pandoc.org/lua-filters.html)).\n\nBecause pandoc's intermediate representation of a document is less\nexpressive than many of the formats it converts between, one should\nnot expect perfect conversions between every format and every other.\nPandoc attempts to preserve the structural elements of a document, but\nnot formatting details such as margin size.  And some document elements,\nsuch as complex tables, may not fit into pandoc's simple document\nmodel.  While conversions from pandoc's Markdown to all formats aspire\nto be perfect, conversions from formats more expressive than pandoc's\nMarkdown can be expected to be lossy.\n\n\nInstalling\n----------\n\nHere's [how to install pandoc](INSTALL.md).\n\nDocumentation\n-------------\n\nPandoc's website contains a full [User's Guide](https://pandoc.org/MANUAL.html).\nIt is also available [here](MANUAL.txt) as pandoc-flavored Markdown.\nThe website also contains some [examples of the use of\npandoc](https://pandoc.org/demos.html) and a limited [online\ndemo](https://pandoc.org/try).\n\nContributing\n------------\n\nPull requests, bug reports, and feature requests are welcome.  Please make\nsure to read [the contributor guidelines](CONTRIBUTING.md) before opening a\nnew issue.\n\n\nLicense\n-------\n\n¬© 2006-2024 John MacFarlane (jgm@berkeley.edu). Released under the\n[GPL], version 2 or greater.  This software carries no warranty of\nany kind.  (See COPYRIGHT for full copyright and warranty notices.)\n\n[GPL]: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html \"GNU General Public License\"\n[Haskell]: https://haskell.org\n"
        },
        {
          "name": "RELEASE-CHECKLIST",
          "type": "blob",
          "size": 1.13,
          "content": "[ ] Bump version number for pandoc and pandoc-cli\n[ ] Sync pandoc version in pandoc-cli\n[ ] Update MANUAL.txt date\n[ ] Finalize changelog\n[ ] make prerelease\n[ ] Update AUTHORS (make authors LASTRELEASE=x.y.z)\n[ ] Run release candidate workflow manually on GitHub\n[ ] Run release candidate workflows manually on cirrus-ci.com\n[ ] If it builds successfully, download artifacts from GitHub, cirrus-ci.com\n    (Windows and intel mac from GitHub, linux amd64 and arm64 and m1 mac\n    from cirrus)\n[ ] Use 'make' in macos and windows artifacts to sign code\n[ ] make update-website\n[ ] Tag release in git:\n    - use X.Y for pandoc\n    - pandoc-cli-X.Y\n    - if needed: pandoc-server-X.Y\n    - if needed: pandoc-lua-engine-X.Y\n[ ] Upload packages to Hackage:\n    - pandoc\n    - pandoc-cli\n    and if changed:\n    - pandoc-server\n    - pandoc-lua-engine\n[ ] make pandoc-templates\n    cd ../pandoc-templates\n    git tag REL\n    git push\n    git push --tags\n[ ] Add release on github (use 'make changes_github' and upload files)\n[ ] Copy deb to server, install it\n[ ] If needed, sh tools/build-and-upload-api-docs.sh\n[ ] Announce on pandoc-announce, pandoc-discuss\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4,
          "content": "# Security Policy\n\n## Supported Versions\n\nOnly the most recent version of pandoc is supported with security updates.\n\n## Reporting a Vulnerability\n\nTo report a vulnerability, email the maintainer, jgm@berkeley.edu.\nBut first please read the section of the manual entitled\n[A note on security](https://pandoc.org/MANUAL.html#a-note-on-security),\nwhich describes some security guarantees pandoc does NOT make.\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "cabal.project",
          "type": "blob",
          "size": 0.47,
          "content": "packages: .\n          pandoc-lua-engine\n          pandoc-server\n          pandoc-cli\ntests: True\nflags: +embed_data_files\nconstraints: skylighting-format-blaze-html >= 0.1.1.3,\n             skylighting-format-context >= 0.1.0.2,\n             -- for now (commercialhaskell/stackage#7545):\n             data-default-class <= 0.2, data-default <= 0.8\n\nsource-repository-package\n  type: git\n  location: https://github.com/jgm/texmath.git\n  tag: 4f8d982abf6efaef6512f3671e47120eeced15b5\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 1136.72,
          "content": null
        },
        {
          "name": "citeproc",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.26,
          "content": "# default.nix\nlet\n  pkgs = import <nixpkgs> { };\nin\n  pkgs.haskellPackages.developPackage {\n    root = ./.;\n    modifier = drv:\n      pkgs.haskell.lib.addBuildTools drv (with pkgs.haskellPackages;\n        [ cabal-install\n          ghcid\n          happy\n        ]);\n  }\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.46,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1681202837,\n        \"narHash\": \"sha256-H+Rh19JDwRtpVPAWp64F+rlEtxUWBAQW28eAi3SRSzg=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"cfacdce06f30d2b68473a46042957675eebb3401\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1683594133,\n        \"narHash\": \"sha256-iUhLhEAgOCnexSGDsYT2ouydis09uDoNzM7UC685XGE=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"8d447c5626cfefb9b129d5b30103344377fe09bc\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixpkgs-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.67,
          "content": "{\n  description = \"Pandoc development\";\n\n  inputs.nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n  inputs.flake-utils.url = \"github:numtide/flake-utils\";\n\n  outputs = inputs:\n    let\n      overlay = final: prev: {\n        haskell = prev.haskell // {\n          packageOverrides = hfinal: hprev:\n            prev.haskell.packageOverrides hfinal hprev // {\n              crypton-connection = final.fetchFromGitHub {\n                owner = \"kazu-yamamoto\";\n                repo = \"crypton-connection\";\n                rev = \"5c064b911e7327a4d399fd9dd057663d0d0fb256\";\n                sha256 = \"00j1nf9glbz0cnzd84vp08j9ybzjbm3b6gcamlqxxcjb31kllz4b\";\n              };\n              pandoc = hfinal.callCabal2nix \"pandoc\" ./. { };\n            };\n        };\n        pandoc = final.haskell.lib.compose.justStaticExecutables final.haskellPackages.pandoc;\n      };\n      perSystem = system:\n        let\n          pkgs = import inputs.nixpkgs { inherit system; overlays = [ overlay ]; };\n          hspkgs = pkgs.haskellPackages;\n        in\n        {\n          devShell = hspkgs.shellFor {\n            withHoogle = true;\n            packages = p : [\n              p.pandoc\n            ];\n            buildInputs = [\n              hspkgs.cabal-install\n              hspkgs.haskell-language-server\n              hspkgs.hlint\n              hspkgs.ghcid\n              hspkgs.ormolu\n              hspkgs.stylish-haskell\n              hspkgs.weeder\n              hspkgs.servant-server\n              hspkgs.hslua\n              pkgs.bashInteractive\n            ];\n          };\n          defaultPackage = pkgs.pandoc;\n        };\n    in\n    { inherit overlay; } //\n      inputs.flake-utils.lib.eachDefaultSystem perSystem;\n}\n"
        },
        {
          "name": "hie.yaml",
          "type": "blob",
          "size": 0.8,
          "content": "cradle:\n  cabal:\n    - path: \"./xml-light\"\n      component: \"pandoc:lib:xml-light\"\n\n    - path: \"./src\"\n      component: \"lib:pandoc\"\n\n    - path: \"./test\"\n      component: \"pandoc:test:test-pandoc\"\n\n    - path: \"./benchmark/benchmark-pandoc.hs\"\n      component: \"pandoc:bench:benchmark-pandoc\"\n\n    - path: \"pandoc-cli/no-lua/pandoc.hs\"\n      component: \"pandoc-cli:exe:pandoc\"\n\n    - path: \"pandoc-cli/no-lua/PandocCLI/Lua.hs\"\n      component: \"pandoc-cli:exe:pandoc\"\n\n    - path: \"pandoc-cli/no-lua/PandocCLI/Server.hs\"\n      component: \"pandoc-cli:exe:pandoc\"\n\n    - path: \"pandoc-lua-engine/src\"\n      component: \"lib:pandoc-lua-engine\"\n\n    - path: \"pandoc-lua-engine/test\"\n      component: \"pandoc-lua-engine:test:test-pandoc-lua-engine\"\n\n    - path: \"pandoc-server/src\"\n      component: \"lib:pandoc-server\"\n"
        },
        {
          "name": "linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "macos",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "pandoc-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "pandoc-lua-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "pandoc-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "pandoc.cabal",
          "type": "blob",
          "size": 38.93,
          "content": "cabal-version:   2.4\nname:            pandoc\nversion:         3.6.1\nbuild-type:      Simple\nlicense:         GPL-2.0-or-later\nlicense-file:    COPYING.md\ncopyright:       (c) 2006-2024 John MacFarlane\nauthor:          John MacFarlane <jgm@berkeley.edu>\nmaintainer:      John MacFarlane <jgm@berkeley.edu>\nbug-reports:     https://github.com/jgm/pandoc/issues\nstability:       alpha\nhomepage:        https://pandoc.org\ncategory:        Text\ntested-with:     GHC == 8.10.7, GHC == 9.0.2,\n                 GHC == 9.2.5, GHC == 9.4.4, GHC == 9.6.3,\n                 GHC == 9.8.2, GHC == 9.10.1\nsynopsis:        Conversion between markup formats\ndescription:     Pandoc is a Haskell library for converting from one markup\n                 format to another.  The formats it can handle include\n                 .\n                 - light markup formats (many variants of Markdown,\n                   reStructuredText, AsciiDoc, Org-mode, Muse, Textile,\n                   txt2tags, djot)\n                 - HTML formats (HTML 4 and 5)\n                 - Ebook formats (EPUB v2 and v3, FB2)\n                 - Documentation formats (GNU TexInfo, Haddock)\n                 - Roff formats (man, ms)\n                 - TeX formats (LaTeX, ConTeXt)\n                 - Typst\n                 - XML formats (DocBook 4 and 5, JATS, TEI Simple, OpenDocument)\n                 - Outline formats (OPML)\n                 - Bibliography formats (BibTeX, BibLaTeX, CSL JSON, CSL YAML,\n                   RIS)\n                 - Word processor formats (Docx, RTF, ODT)\n                 - Interactive notebook formats (Jupyter notebook ipynb)\n                 - Page layout formats (InDesign ICML)\n                 - Wiki markup formats (MediaWiki, DokuWiki, TikiWiki, TWiki,\n                   Vimwiki, XWiki, ZimWiki, Jira wiki, Creole)\n                 - Slide show formats (LaTeX Beamer, PowerPoint, Slidy,\n                   reveal.js, Slideous, S5, DZSlides)\n                 - Data formats (CSV and TSV tables)\n                 - PDF (via external programs such as pdflatex or wkhtmltopdf)\n                 .\n                 Pandoc can convert mathematical content in documents\n                 between TeX, MathML, Word equations, roff eqn, typst,\n                 and plain text. It includes a powerful system for automatic\n                 citations and bibliographies, and it can be customized\n                 extensively using templates, filters, and custom readers\n                 and writers written in Lua.\n                 .\n                 For the pandoc command-line program, see the\n                 @pandoc-cli@ package.\ndata-files:\n                 -- templates\n                 data/templates/styles.html\n                 data/templates/styles.citations.html\n                 data/templates/default.html4\n                 data/templates/default.html5\n                 data/templates/default.chunkedhtml\n                 data/templates/default.djot\n                 data/templates/default.docbook4\n                 data/templates/default.docbook5\n                 data/templates/default.jats_archiving\n                 data/templates/default.jats_articleauthoring\n                 data/templates/default.jats_publishing\n                 data/templates/default.tei\n                 data/templates/default.opendocument\n                 data/templates/default.openxml\n                 data/templates/default.icml\n                 data/templates/default.opml\n                 data/templates/default.beamer\n                 data/templates/default.latex\n                 data/templates/default.bibtex\n                 data/templates/default.biblatex\n                 data/templates/default.context\n                 data/templates/default.texinfo\n                 data/templates/default.jira\n                 data/templates/default.man\n                 data/templates/default.ms\n                 data/templates/default.markdown\n                 data/templates/default.muse\n                 data/templates/default.commonmark\n                 data/templates/default.rst\n                 data/templates/default.plain\n                 data/templates/default.mediawiki\n                 data/templates/default.dokuwiki\n                 data/templates/default.xwiki\n                 data/templates/default.zimwiki\n                 data/templates/default.rtf\n                 data/templates/default.s5\n                 data/templates/default.slidy\n                 data/templates/default.slideous\n                 data/templates/default.revealjs\n                 data/templates/default.dzslides\n                 data/templates/default.asciidoc\n                 data/templates/default.haddock\n                 data/templates/default.textile\n                 data/templates/default.org\n                 data/templates/default.epub2\n                 data/templates/default.epub3\n                 data/templates/default.ansi\n                 data/templates/article.jats_publishing\n                 data/templates/affiliations.jats\n                 data/templates/default.markua\n                 data/templates/default.typst\n                 data/templates/template.typst\n                 data/templates/common.latex\n                 data/templates/hypersetup.latex\n                 data/templates/passoptions.latex\n                 data/templates/fonts.latex\n                 data/templates/font-settings.latex\n                 data/templates/after-header-includes.latex\n\n                 -- translations\n                 data/translations/*.yaml\n                 -- entities\n                 data/docbook-entities.txt\n                 -- source files for reference.docx\n                 data/docx/[Content_Types].xml\n                 data/docx/_rels/.rels\n                 data/docx/docProps/app.xml\n                 data/docx/docProps/core.xml\n                 data/docx/docProps/custom.xml\n                 data/docx/word/document.xml\n                 data/docx/word/fontTable.xml\n                 data/docx/word/comments.xml\n                 data/docx/word/footnotes.xml\n                 data/docx/word/numbering.xml\n                 data/docx/word/settings.xml\n                 data/docx/word/webSettings.xml\n                 data/docx/word/styles.xml\n                 data/docx/word/_rels/document.xml.rels\n                 data/docx/word/_rels/footnotes.xml.rels\n                 data/docx/word/theme/theme1.xml\n                 -- source files for reference.odt\n                 data/odt/mimetype\n                 data/odt/manifest.rdf\n                 data/odt/styles.xml\n                 data/odt/content.xml\n                 data/odt/meta.xml\n                 data/odt/META-INF/manifest.xml\n                 -- source files for reference.pptx\n                 data/pptx/_rels/.rels\n                 data/pptx/docProps/app.xml\n                 data/pptx/docProps/core.xml\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout1.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout2.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout3.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout4.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout5.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout6.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout7.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout8.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout9.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout10.xml.rels\n                 data/pptx/ppt/slideLayouts/_rels/slideLayout11.xml.rels\n                 data/pptx/ppt/slideLayouts/slideLayout1.xml\n                 data/pptx/ppt/slideLayouts/slideLayout2.xml\n                 data/pptx/ppt/slideLayouts/slideLayout3.xml\n                 data/pptx/ppt/slideLayouts/slideLayout4.xml\n                 data/pptx/ppt/slideLayouts/slideLayout5.xml\n                 data/pptx/ppt/slideLayouts/slideLayout6.xml\n                 data/pptx/ppt/slideLayouts/slideLayout7.xml\n                 data/pptx/ppt/slideLayouts/slideLayout8.xml\n                 data/pptx/ppt/slideLayouts/slideLayout9.xml\n                 data/pptx/ppt/slideLayouts/slideLayout10.xml\n                 data/pptx/ppt/slideLayouts/slideLayout11.xml\n                 data/pptx/ppt/_rels/presentation.xml.rels\n                 data/pptx/ppt/theme/theme1.xml\n                 data/pptx/ppt/presProps.xml\n                 data/pptx/ppt/slides/_rels/slide1.xml.rels\n                 data/pptx/ppt/slides/_rels/slide2.xml.rels\n                 data/pptx/ppt/slides/slide2.xml\n                 data/pptx/ppt/slides/slide1.xml\n                 data/pptx/ppt/slides/_rels/slide3.xml.rels\n                 data/pptx/ppt/slides/_rels/slide4.xml.rels\n                 data/pptx/ppt/slides/slide3.xml\n                 data/pptx/ppt/slides/slide4.xml\n                 data/pptx/ppt/viewProps.xml\n                 data/pptx/ppt/tableStyles.xml\n                 data/pptx/ppt/slideMasters/_rels/slideMaster1.xml.rels\n                 data/pptx/ppt/slideMasters/slideMaster1.xml\n                 data/pptx/ppt/presentation.xml\n                 data/pptx/ppt/notesMasters/_rels/notesMaster1.xml.rels\n                 data/pptx/ppt/notesMasters/notesMaster1.xml\n                 data/pptx/ppt/notesSlides/_rels/notesSlide1.xml.rels\n                 data/pptx/ppt/notesSlides/notesSlide1.xml\n                 data/pptx/ppt/notesSlides/_rels/notesSlide2.xml.rels\n                 data/pptx/ppt/notesSlides/notesSlide2.xml\n                 data/pptx/ppt/theme/theme2.xml\n                 data/pptx/[Content_Types].xml\n                  -- stylesheet for EPUB writer\n                 data/epub.css\n                 -- data for dzslides writer\n                 data/dzslides/template.html\n                 -- default abbreviations file\n                 data/abbreviations\n                 -- sample lua custom reader\n                 data/creole.lua\n                 -- lua init script\n                 data/init.lua\n                 -- bash completion template\n                 data/bash_completion.tpl\n                 -- citeproc\n                 data/default.csl\n                 citeproc/biblatex-localization/*.lbx.strings\n                 -- documentation\n                 MANUAL.txt, COPYRIGHT\nextra-source-files:\n                 -- documentation\n                 INSTALL.md, AUTHORS.md, README.md,\n                 CONTRIBUTING.md, BUGS, changelog.md,\n                 -- tests\n                 test/bodybg.gif\n                 test/*.native\n                 test/command/*.md\n                 test/command/*.csl\n                 test/command/*.svg\n                 test/command/9391.docx\n                 test/command/9358.docx\n                 test/command/9002.docx\n                 test/command/9603.docx\n                 test/command/biblio.bib\n                 test/command/averroes.bib\n                 test/command/A.txt\n                 test/command/B.txt\n                 test/command/C.txt\n                 test/command/D.txt\n                 test/command/file1.txt\n                 test/command/file2.txt\n                 test/command/three.txt\n                 test/command/01.csv\n                 test/command/chap1/spider.png\n                 test/command/chap2/spider.png\n                 test/command/chap1/text.md\n                 test/command/chap2/text.md\n                 test/command/defaults1.yaml\n                 test/command/defaults2.yaml\n                 test/command/defaults3.yaml\n                 test/command/defaults4.yaml\n                 test/command/defaults5.yaml\n                 test/command/defaults6.yaml\n                 test/command/defaults7.yaml\n                 test/command/defaults8.yaml\n                 test/command/defaults9.yaml\n                 test/command/3533-rst-csv-tables.csv\n                 test/command/3880.txt\n                 test/command/5182.txt\n                 test/command/5700-metadata-file-1.yml\n                 test/command/5700-metadata-file-2.yml\n                 test/command/abbrevs\n                 test/command/sub-file-chapter-1.tex\n                 test/command/sub-file-chapter-2.tex\n                 test/command/bar.tex\n                 test/command/bar-endinput.tex\n                 test/command/yaml-metadata.yaml\n                 test/command/7813-meta.yaml\n                 test/command/3510-subdoc.org\n                 test/command/3510-export.latex\n                 test/command/3510-src.hs\n                 test/command/3971b.tex\n                 test/command/5876.yaml\n                 test/command/5876/metadata/5876.yaml\n                 test/command/5876/metadata/command/5876.yaml\n                 test/command/6466-beg.hs\n                 test/command/6466-end.hs\n                 test/command/6466-mid.hs\n                 test/command/6466-whole.hs\n                 test/command/7861.yaml\n                 test/command/7861/metadata/placeholder\n                 test/docbook-chapter.docbook\n                 test/docbook-reader.docbook\n                 test/docbook-xref.docbook\n                 test/endnotexml-reader.xml\n                 test/html-reader.html\n                 test/opml-reader.opml\n                 test/org-select-tags.org\n                 test/haddock-reader.haddock\n                 test/insert\n                 test/lalune.jpg\n                 test/man-reader.man\n                 test/movie.jpg\n                 test/media/rId25.jpg\n                 test/media/rId26.jpg\n                 test/media/rId27.jpg\n                 test/typst-reader.typ\n                 test/undergradmath.typ\n                 test/djot-reader.djot\n                 test/latex-reader.latex\n                 test/textile-reader.textile\n                 test/markdown-reader-more.txt\n                 test/markdown-citations.txt\n                 test/textile-reader.textile\n                 test/mediawiki-reader.wiki\n                 test/vimwiki-reader.wiki\n                 test/creole-reader.txt\n                 test/rst-reader.rst\n                 test/jats-reader.xml\n                 test/jira-reader.jira\n                 test/s5-basic.html\n                 test/s5-fancy.html\n                 test/s5-fragment.html\n                 test/s5-inserts.html\n                 test/tables.context\n                 test/tables.docbook4\n                 test/tables.docbook5\n                 test/tables.jats_archiving\n                 test/tables.jats_articleauthoring\n                 test/tables.jats_publishing\n                 test/tables.jira\n                 test/tables.djot\n                 test/tables.dokuwiki\n                 test/tables.zimwiki\n                 test/tables.icml\n                 test/tables.html4\n                 test/tables.html5\n                 test/tables.latex\n                 test/tables.man\n                 test/tables.ms\n                 test/tables.plain\n                 test/tables.markdown\n                 test/tables.markua\n                 test/tables.mediawiki\n                 test/tables.tei\n                 test/tables.textile\n                 test/tables.opendocument\n                 test/tables.org\n                 test/tables.asciidoc\n                 test/tables.asciidoc_legacy\n                 test/tables.haddock\n                 test/tables.texinfo\n                 test/tables.typst\n                 test/tables.rst\n                 test/tables.rtf\n                 test/tables.txt\n                 test/tables.fb2\n                 test/tables.muse\n                 test/tables.xwiki\n                 test/tables/*.html4\n                 test/tables/*.html5\n                 test/tables/*.latex\n                 test/tables/*.typst\n                 test/tables/*.native\n                 test/tables/*.mediawiki\n                 test/tables/*.jats_archiving\n                 test/testsuite.txt\n                 test/ansi-test.txt\n                 test/writer.latex\n                 test/writer.context\n                 test/writer.djot\n                 test/writer.docbook4\n                 test/writer.docbook5\n                 test/writer.jats_archiving\n                 test/writer.jats_articleauthoring\n                 test/writer.jats_publishing\n                 test/writer.jira\n                 test/writer.html4\n                 test/writer.html5\n                 test/writer.man\n                 test/writer.ms\n                 test/writer.markdown\n                 test/writer.markua\n                 test/writer.plain\n                 test/writer.mediawiki\n                 test/writer.textile\n                 test/writer.typst\n                 test/writer.opendocument\n                 test/writer.org\n                 test/writer.asciidoc\n                 test/writer.asciidoc_legacy\n                 test/writer.haddock\n                 test/writer.rst\n                 test/writer.icml\n                 test/writer.rtf\n                 test/writer.tei\n                 test/writer.texinfo\n                 test/writer.fb2\n                 test/writer.opml\n                 test/writer.dokuwiki\n                 test/writer.zimwiki\n                 test/writer.xwiki\n                 test/writer.muse\n                 test/ansi-test.ansi\n                 test/writers-lang-and-dir.latex\n                 test/writers-lang-and-dir.context\n                 test/dokuwiki_inline_formatting.dokuwiki\n                 test/lhs-test.markdown\n                 test/lhs-test.markdown+lhs\n                 test/lhs-test.rst\n                 test/lhs-test.rst+lhs\n                 test/lhs-test.latex\n                 test/lhs-test.latex+lhs\n                 test/lhs-test.html\n                 test/lhs-test.html+lhs\n                 test/lhs-test.fragment.html+lhs\n                 test/pipe-tables.txt\n                 test/dokuwiki_external_images.dokuwiki\n                 test/dokuwiki_multiblock_table.dokuwiki\n                 test/fb2/*.markdown\n                 test/fb2/*.fb2\n                 test/fb2/images-embedded.html\n                 test/fb2/images-embedded.fb2\n                 test/fb2/test-small.png\n                 test/fb2/reader/*.fb2\n                 test/fb2/reader/*.native\n                 test/fb2/test.jpg\n                 test/docx/*.docx\n                 test/docx/golden/*.docx\n                 test/docx/*.native\n                 test/epub/*.epub\n                 test/epub/*.native\n                 test/rtf/*.native\n                 test/rtf/*.rtf\n                 test/pptx/*.pptx\n                 test/pptx/**/*.pptx\n                 test/pptx/**/*.native\n                 test/ipynb/*.native\n                 test/ipynb/*.in.native\n                 test/ipynb/*.out.native\n                 test/ipynb/*.ipynb\n                 test/ipynb/*.out.ipynb\n                 test/ipynb/*.out.html\n                 test/txt2tags.t2t\n                 test/twiki-reader.twiki\n                 test/tikiwiki-reader.tikiwiki\n                 test/odt/odt/*.odt\n                 test/odt/markdown/*.md\n                 test/odt/native/*.native\n                 test/pod-reader.pod\nsource-repository head\n  type:          git\n  location:      git://github.com/jgm/pandoc.git\n\nflag embed_data_files\n  Description:   Embed data files in binary for relocatable executable.\n  Default:       False\n\ncommon common-options\n  default-language: Haskell2010\n  build-depends:    base         >= 4.12 && < 5\n  ghc-options:      -Wall -fno-warn-unused-do-bind\n                    -Wincomplete-record-updates\n                    -Wnoncanonical-monad-instances\n                    -Wcpp-undef\n                    -Wincomplete-uni-patterns\n                    -Widentities\n                    -Wpartial-fields\n                    -Wmissing-signatures\n                    -fhide-source-paths\n                    -- -Wmissing-export-lists\n\n  if impl(ghc >= 8.10)\n    ghc-options:    -Wunused-packages\n\n  if impl(ghc >= 9.0)\n    ghc-options:    -Winvalid-haddock\n\n  if os(windows)\n    cpp-options:      -D_WINDOWS\n\ncommon common-executable\n  import:           common-options\n  build-depends:    pandoc\n  ghc-options:      -rtsopts -with-rtsopts=-A8m -threaded\n\nlibrary xml-light\n  import:        common-options\n  build-depends: xml                   >= 1.3.12   && < 1.4,\n                 xml-conduit           >= 1.9.1.1  && < 1.10,\n                 xml-types             >= 0.3      && < 0.4,\n                 containers            >= 0.6.0.1  && < 0.8,\n                 text                  >= 1.1.1.0  && < 2.2\n\n  hs-source-dirs:  xml-light\n  exposed-modules: Text.Pandoc.XML.Light,\n                   Text.Pandoc.XML.Light.Types,\n                   Text.Pandoc.XML.Light.Proc,\n                   Text.Pandoc.XML.Light.Output\n\nlibrary\n  import:        common-options\n  build-depends: xml-light,\n                 Glob                  >= 0.7      && < 0.11,\n                 JuicyPixels           >= 3.1.6.1  && < 3.4,\n                 aeson                 >= 2.0.1.0  && < 2.3,\n                 aeson-pretty          >= 0.8.9    && < 0.9,\n                 array                 >= 0.5      && < 0.6,\n                 attoparsec            >= 0.12     && < 0.15,\n                 base64-bytestring     >= 0.1      && < 1.3,\n                 binary                >= 0.7      && < 0.11,\n                 blaze-html            >= 0.9      && < 0.10,\n                 blaze-markup          >= 0.8      && < 0.9,\n                 bytestring            >= 0.9      && < 0.13,\n                 case-insensitive      >= 1.2      && < 1.3,\n                 citeproc              >= 0.8.1.2  && < 0.9,\n                 commonmark            >= 0.2.6.1  && < 0.3,\n                 commonmark-extensions >= 0.2.5.6  && < 0.3,\n                 commonmark-pandoc     >= 0.2.2.3  && < 0.3,\n                 containers            >= 0.6.0.1  && < 0.8,\n                 crypton               >= 0.30     && < 1.1,\n                 crypton-connection    >= 0.3.1    && < 0.5,\n                 data-default          >= 0.4      && < 0.9,\n                 deepseq               >= 1.3      && < 1.6,\n                 directory             >= 1.2.3    && < 1.4,\n                 doclayout             >= 0.5      && < 0.6,\n                 doctemplates          >= 0.11     && < 0.12,\n                 emojis                >= 0.1.4.1  && < 0.2,\n                 exceptions            >= 0.8      && < 0.11,\n                 file-embed            >= 0.0      && < 0.1,\n                 filepath              >= 1.1      && < 1.6,\n                 gridtables            >= 0.1      && < 0.2,\n                 haddock-library       >= 1.10     && < 1.12,\n                 http-client           >= 0.4.30   && < 0.8,\n                 http-client-tls       >= 0.2.4    && < 0.4,\n                 http-types            >= 0.8      && < 0.13,\n                 ipynb                 >= 0.2      && < 0.3,\n                 jira-wiki-markup      >= 1.5.1    && < 1.6,\n                 mime-types            >= 0.1.1    && < 0.2,\n                 mtl                   >= 2.2      && < 2.4,\n                 network               >= 2.6      && < 3.3,\n                 network-uri           >= 2.6      && < 2.8,\n                 pandoc-types          >= 1.23.1   && < 1.24,\n                 parsec                >= 3.1      && < 3.2,\n                 pretty                >= 1.1      && < 1.2,\n                 pretty-show           >= 1.10     && < 1.11,\n                 process               >= 1.2.3    && < 1.7,\n                 random                >= 1        && < 1.4,\n                 safe                  >= 0.3.18   && < 0.4,\n                 scientific            >= 0.3      && < 0.4,\n                 skylighting           >= 0.14.6   && < 0.15,\n                 skylighting-core      >= 0.14.6   && < 0.15,\n                 split                 >= 0.2      && < 0.3,\n                 syb                   >= 0.1      && < 0.8,\n                 tagsoup               >= 0.14.6   && < 0.15,\n                 temporary             >= 1.1      && < 1.4,\n                 texmath               >= 0.12.8.12 && < 0.13,\n                 text                  >= 1.1.1.0  && < 2.2,\n                 text-conversions      >= 0.3      && < 0.4,\n                 time                  >= 1.5      && < 1.15,\n                 unicode-collation     >= 0.1.1    && < 0.2,\n                 unicode-transforms    >= 0.3      && < 0.5,\n                 yaml                  >= 0.11     && < 0.12,\n                 libyaml               >= 0.1.4    && < 0.2,\n                 zip-archive           >= 0.4.3.1  && < 0.5,\n                 zlib                  >= 0.5      && < 0.8,\n                 xml                   >= 1.3.12   && < 1.4,\n                 typst                 >= 0.6.1    && < 0.6.2,\n                 vector                >= 0.12     && < 0.14,\n                 djot                  >= 0.1.2.2  && < 0.2,\n                 tls                   >= 2.0.1    && < 2.2,\n                 crypton-x509-system   >= 1.6.7    && < 1.7\n\n  if !os(windows)\n    build-depends:  unix >= 2.4 && < 2.9\n  if flag(embed_data_files)\n     cpp-options:   -DEMBED_DATA_FILES\n     other-modules: Text.Pandoc.Data.BakedIn\n  hs-source-dirs:  src\n\n  exposed-modules: Text.Pandoc,\n                   Text.Pandoc.App,\n                   Text.Pandoc.Data,\n                   Text.Pandoc.Options,\n                   Text.Pandoc.Extensions,\n                   Text.Pandoc.Format,\n                   Text.Pandoc.Shared,\n                   Text.Pandoc.Sources,\n                   Text.Pandoc.MediaBag,\n                   Text.Pandoc.Error,\n                   Text.Pandoc.Filter,\n                   Text.Pandoc.Translations,\n                   Text.Pandoc.Translations.Types,\n                   Text.Pandoc.Readers,\n                   Text.Pandoc.Readers.HTML,\n                   Text.Pandoc.Readers.LaTeX,\n                   Text.Pandoc.Readers.Markdown,\n                   Text.Pandoc.Readers.CommonMark,\n                   Text.Pandoc.Readers.Creole,\n                   Text.Pandoc.Readers.BibTeX,\n                   Text.Pandoc.Readers.EndNote,\n                   Text.Pandoc.Readers.RIS,\n                   Text.Pandoc.Readers.CslJson,\n                   Text.Pandoc.Readers.MediaWiki,\n                   Text.Pandoc.Readers.Vimwiki,\n                   Text.Pandoc.Readers.RST,\n                   Text.Pandoc.Readers.Org,\n                   Text.Pandoc.Readers.DocBook,\n                   Text.Pandoc.Readers.JATS,\n                   Text.Pandoc.Readers.Jira,\n                   Text.Pandoc.Readers.OPML,\n                   Text.Pandoc.Readers.Textile,\n                   Text.Pandoc.Readers.Native,\n                   Text.Pandoc.Readers.Haddock,\n                   Text.Pandoc.Readers.TWiki,\n                   Text.Pandoc.Readers.TikiWiki,\n                   Text.Pandoc.Readers.Txt2Tags,\n                   Text.Pandoc.Readers.Docx,\n                   Text.Pandoc.Readers.ODT,\n                   Text.Pandoc.Readers.EPUB,\n                   Text.Pandoc.Readers.Muse,\n                   Text.Pandoc.Readers.Man,\n                   Text.Pandoc.Readers.Mdoc,\n                   Text.Pandoc.Readers.FB2,\n                   Text.Pandoc.Readers.DokuWiki,\n                   Text.Pandoc.Readers.Ipynb,\n                   Text.Pandoc.Readers.CSV,\n                   Text.Pandoc.Readers.RTF,\n                   Text.Pandoc.Readers.Typst,\n                   Text.Pandoc.Readers.Djot,\n                   Text.Pandoc.Readers.Pod,\n                   Text.Pandoc.Writers,\n                   Text.Pandoc.Writers.Native,\n                   Text.Pandoc.Writers.DocBook,\n                   Text.Pandoc.Writers.JATS,\n                   Text.Pandoc.Writers.OPML,\n                   Text.Pandoc.Writers.HTML,\n                   Text.Pandoc.Writers.ChunkedHTML,\n                   Text.Pandoc.Writers.Ipynb,\n                   Text.Pandoc.Writers.ICML,\n                   Text.Pandoc.Writers.Jira,\n                   Text.Pandoc.Writers.LaTeX,\n                   Text.Pandoc.Writers.ConTeXt,\n                   Text.Pandoc.Writers.Djot,\n                   Text.Pandoc.Writers.Typst,\n                   Text.Pandoc.Writers.OpenDocument,\n                   Text.Pandoc.Writers.Texinfo,\n                   Text.Pandoc.Writers.Man,\n                   Text.Pandoc.Writers.Ms,\n                   Text.Pandoc.Writers.Markdown,\n                   Text.Pandoc.Writers.CommonMark,\n                   Text.Pandoc.Writers.Haddock,\n                   Text.Pandoc.Writers.RST,\n                   Text.Pandoc.Writers.Org,\n                   Text.Pandoc.Writers.AsciiDoc,\n                   Text.Pandoc.Writers.Textile,\n                   Text.Pandoc.Writers.MediaWiki,\n                   Text.Pandoc.Writers.DokuWiki,\n                   Text.Pandoc.Writers.XWiki,\n                   Text.Pandoc.Writers.ZimWiki,\n                   Text.Pandoc.Writers.RTF,\n                   Text.Pandoc.Writers.ODT,\n                   Text.Pandoc.Writers.Docx,\n                   Text.Pandoc.Writers.Powerpoint,\n                   Text.Pandoc.Writers.EPUB,\n                   Text.Pandoc.Writers.FB2,\n                   Text.Pandoc.Writers.TEI,\n                   Text.Pandoc.Writers.Muse,\n                   Text.Pandoc.Writers.CslJson,\n                   Text.Pandoc.Writers.Math,\n                   Text.Pandoc.Writers.Shared,\n                   Text.Pandoc.Writers.OOXML,\n                   Text.Pandoc.Writers.AnnotatedTable,\n                   Text.Pandoc.Writers.BibTeX,\n                   Text.Pandoc.Writers.ANSI,\n                   Text.Pandoc.PDF,\n                   Text.Pandoc.UTF8,\n                   Text.Pandoc.Scripting,\n                   Text.Pandoc.Slides,\n                   Text.Pandoc.Templates,\n                   Text.Pandoc.XML,\n                   Text.Pandoc.SelfContained,\n                   Text.Pandoc.Highlighting,\n                   Text.Pandoc.Logging,\n                   Text.Pandoc.Process,\n                   Text.Pandoc.MIME,\n                   Text.Pandoc.Parsing,\n                   Text.Pandoc.Asciify,\n                   Text.Pandoc.Emoji,\n                   Text.Pandoc.ImageSize,\n                   Text.Pandoc.Class,\n                   Text.Pandoc.Class.IO,\n                   Text.Pandoc.Citeproc,\n                   Text.Pandoc.Chunks,\n                   Text.Pandoc.Transforms,\n                   Text.Pandoc.Version\n  other-modules:   Text.Pandoc.App.CommandLineOptions,\n                   Text.Pandoc.App.Input,\n                   Text.Pandoc.App.Opt,\n                   Text.Pandoc.App.OutputSettings,\n                   Text.Pandoc.Class.CommonState,\n                   Text.Pandoc.Class.PandocMonad,\n                   Text.Pandoc.Class.PandocIO,\n                   Text.Pandoc.Class.PandocPure,\n                   Text.Pandoc.Class.Sandbox,\n                   Text.Pandoc.Filter.Environment,\n                   Text.Pandoc.Filter.JSON,\n                   Text.Pandoc.Parsing.Capabilities,\n                   Text.Pandoc.Parsing.Citations,\n                   Text.Pandoc.Parsing.General,\n                   Text.Pandoc.Parsing.GridTable,\n                   Text.Pandoc.Parsing.Lists,\n                   Text.Pandoc.Parsing.Math,\n                   Text.Pandoc.Parsing.Smart,\n                   Text.Pandoc.Parsing.State,\n                   Text.Pandoc.Parsing.Future,\n                   Text.Pandoc.Readers.Docx.Lists,\n                   Text.Pandoc.Readers.Docx.Combine,\n                   Text.Pandoc.Readers.Docx.Parse,\n                   Text.Pandoc.Readers.Docx.Parse.Styles,\n                   Text.Pandoc.Readers.Docx.Util,\n                   Text.Pandoc.Readers.Docx.Symbols,\n                   Text.Pandoc.Readers.Docx.Fields,\n                   Text.Pandoc.Readers.HTML.Parsing,\n                   Text.Pandoc.Readers.HTML.Table,\n                   Text.Pandoc.Readers.HTML.TagCategories,\n                   Text.Pandoc.Readers.HTML.Types,\n                   Text.Pandoc.Readers.LaTeX.Inline,\n                   Text.Pandoc.Readers.LaTeX.Citation,\n                   Text.Pandoc.Readers.LaTeX.Lang,\n                   Text.Pandoc.Readers.LaTeX.Macro,\n                   Text.Pandoc.Readers.LaTeX.Math,\n                   Text.Pandoc.Readers.LaTeX.Parsing,\n                   Text.Pandoc.Readers.LaTeX.SIunitx,\n                   Text.Pandoc.Readers.LaTeX.Table,\n                   Text.Pandoc.Readers.Mdoc.Lex,\n                   Text.Pandoc.Readers.Mdoc.Macros,\n                   Text.Pandoc.Readers.Mdoc.Standards,\n                   Text.Pandoc.Readers.Typst.Parsing,\n                   Text.Pandoc.Readers.Typst.Math,\n                   Text.Pandoc.Readers.ODT.Base,\n                   Text.Pandoc.Readers.ODT.Namespaces,\n                   Text.Pandoc.Readers.ODT.StyleReader,\n                   Text.Pandoc.Readers.ODT.ContentReader,\n                   Text.Pandoc.Readers.ODT.Generic.Fallible,\n                   Text.Pandoc.Readers.ODT.Generic.SetMap,\n                   Text.Pandoc.Readers.ODT.Generic.Utils,\n                   Text.Pandoc.Readers.ODT.Generic.Namespaces,\n                   Text.Pandoc.Readers.ODT.Generic.XMLConverter,\n                   Text.Pandoc.Readers.ODT.Arrows.State,\n                   Text.Pandoc.Readers.ODT.Arrows.Utils,\n                   Text.Pandoc.Readers.Org.BlockStarts,\n                   Text.Pandoc.Readers.Org.Blocks,\n                   Text.Pandoc.Readers.Org.DocumentTree,\n                   Text.Pandoc.Readers.Org.ExportSettings,\n                   Text.Pandoc.Readers.Org.Inlines,\n                   Text.Pandoc.Readers.Org.Meta,\n                   Text.Pandoc.Readers.Org.ParserState,\n                   Text.Pandoc.Readers.Org.Parsing,\n                   Text.Pandoc.Readers.Org.Shared,\n                   Text.Pandoc.Readers.Metadata,\n                   Text.Pandoc.Readers.Roff,\n                   Text.Pandoc.Readers.Roff.Escape,\n                   Text.Pandoc.Writers.Docx.OpenXML,\n                   Text.Pandoc.Writers.Docx.StyleMap,\n                   Text.Pandoc.Writers.Docx.Table,\n                   Text.Pandoc.Writers.Docx.Types,\n                   Text.Pandoc.Writers.GridTable\n                   Text.Pandoc.Writers.JATS.References,\n                   Text.Pandoc.Writers.JATS.Table,\n                   Text.Pandoc.Writers.JATS.Types,\n                   Text.Pandoc.Writers.LaTeX.Caption,\n                   Text.Pandoc.Writers.LaTeX.Notes,\n                   Text.Pandoc.Writers.LaTeX.Table,\n                   Text.Pandoc.Writers.LaTeX.Lang,\n                   Text.Pandoc.Writers.LaTeX.Types,\n                   Text.Pandoc.Writers.LaTeX.Citation,\n                   Text.Pandoc.Writers.LaTeX.Util,\n                   Text.Pandoc.Writers.Markdown.Table,\n                   Text.Pandoc.Writers.Markdown.Types,\n                   Text.Pandoc.Writers.Markdown.Inline,\n                   Text.Pandoc.Writers.Roff,\n                   Text.Pandoc.Writers.Blaze,\n                   Text.Pandoc.Writers.Powerpoint.Presentation,\n                   Text.Pandoc.Writers.Powerpoint.Output,\n                   Text.Pandoc.Char,\n                   Text.Pandoc.TeX,\n                   Text.Pandoc.URI,\n                   Text.Pandoc.CSS,\n                   Text.Pandoc.CSV,\n                   Text.Pandoc.RoffChar,\n                   Text.Pandoc.UUID,\n                   Text.Pandoc.Image,\n                   Text.Pandoc.Citeproc.BibTeX,\n                   Text.Pandoc.Citeproc.Name,\n                   Text.Pandoc.Citeproc.CslJson,\n                   Text.Pandoc.Citeproc.Data,\n                   Text.Pandoc.Citeproc.Locator,\n                   Text.Pandoc.Citeproc.MetaValue,\n                   Text.Pandoc.Citeproc.Util,\n                   Paths_pandoc\n  autogen-modules: Paths_pandoc\n  buildable:       True\n\ntest-suite test-pandoc\n  import:         common-executable\n  type:           exitcode-stdio-1.0\n  main-is:        test-pandoc.hs\n  hs-source-dirs: test\n  build-depends:  pandoc,\n                  Diff              >= 0.2     && < 1.1,\n                  Glob              >= 0.7     && < 0.11,\n                  bytestring        >= 0.9     && < 0.13,\n                  containers        >= 0.4.2.1 && < 0.8,\n                  directory         >= 1.2.3   && < 1.4,\n                  doctemplates      >= 0.11    && < 0.12,\n                  filepath          >= 1.1     && < 1.6,\n                  mtl               >= 2.2     && < 2.4,\n                  pandoc-types      >= 1.23.1  && < 1.24,\n                  process           >= 1.2.3   && < 1.7,\n                  tasty             >= 0.11    && < 1.6,\n                  tasty-golden      >= 2.3     && < 2.4,\n                  tasty-hunit       >= 0.9     && < 0.11,\n                  tasty-quickcheck  >= 0.8     && < 0.12,\n                  text              >= 1.1.1.0 && < 2.2,\n                  temporary         >= 1.1     && < 1.4,\n                  time              >= 1.5     && < 1.15,\n                  xml               >= 1.3.12  && < 1.4,\n                  zip-archive       >= 0.4.3   && < 0.5\n  other-modules:  Tests.Old\n                  Tests.Command\n                  Tests.Helpers\n                  Tests.Shared\n                  Tests.MediaBag\n                  Tests.Readers.LaTeX\n                  Tests.Readers.HTML\n                  Tests.Readers.JATS\n                  Tests.Readers.Jira\n                  Tests.Readers.Markdown\n                  Tests.Readers.Org\n                  Tests.Readers.Org.Block\n                  Tests.Readers.Org.Block.CodeBlock\n                  Tests.Readers.Org.Block.Figure\n                  Tests.Readers.Org.Block.Header\n                  Tests.Readers.Org.Block.List\n                  Tests.Readers.Org.Block.Table\n                  Tests.Readers.Org.Directive\n                  Tests.Readers.Org.Inline\n                  Tests.Readers.Org.Inline.Citation\n                  Tests.Readers.Org.Inline.Note\n                  Tests.Readers.Org.Inline.Smart\n                  Tests.Readers.Org.Meta\n                  Tests.Readers.Org.Shared\n                  Tests.Readers.RST\n                  Tests.Readers.RTF\n                  Tests.Readers.Docx\n                  Tests.Readers.ODT\n                  Tests.Readers.Txt2Tags\n                  Tests.Readers.EPUB\n                  Tests.Readers.Muse\n                  Tests.Readers.Creole\n                  Tests.Readers.Man\n                  Tests.Readers.Mdoc\n                  Tests.Readers.FB2\n                  Tests.Readers.Pod\n                  Tests.Readers.DokuWiki\n                  Tests.Writers.Native\n                  Tests.Writers.ConTeXt\n                  Tests.Writers.DocBook\n                  Tests.Writers.HTML\n                  Tests.Writers.JATS\n                  Tests.Writers.Jira\n                  Tests.Writers.Markdown\n                  Tests.Writers.Org\n                  Tests.Writers.Plain\n                  Tests.Writers.AsciiDoc\n                  Tests.Writers.LaTeX\n                  Tests.Writers.Docx\n                  Tests.Writers.RST\n                  Tests.Writers.TEI\n                  Tests.Writers.Markua\n                  Tests.Writers.Muse\n                  Tests.Writers.FB2\n                  Tests.Writers.Powerpoint\n                  Tests.Writers.OOXML\n                  Tests.Writers.Ms\n                  Tests.Writers.AnnotatedTable\n\nbenchmark benchmark-pandoc\n  import:          common-executable\n  type:            exitcode-stdio-1.0\n  main-is:         benchmark-pandoc.hs\n  hs-source-dirs:  benchmark\n  build-depends:   bytestring,\n                   tasty-bench >= 0.2     && <= 0.4,\n                   mtl         >= 2.2     && < 2.4,\n                   text        >= 1.1.1.0 && < 2.2,\n                   deepseq\n  -- we increase heap size to avoid benchmarking garbage collection:\n  ghc-options:     -rtsopts -with-rtsopts=-A8m -threaded\n"
        },
        {
          "name": "release.nix",
          "type": "blob",
          "size": 0.09,
          "content": "let\n  pkgs = import <nixpkgs> { };\nin\n  pkgs.haskellPackages.callPackage ./project.nix { }\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 2.01,
          "content": "{nixpkgs ? import <nixpkgs> {} }:\nlet\n  inherit (nixpkgs) pkgs;\n  inherit (pkgs) haskellPackages;\n\n  haskellDeps = ps: with ps; [\n    Diff\n    Glob\n    aeson\n    aeson-pretty\n    array\n    attoparsec\n    base\n    base64\n    binary\n    blaze-html\n    blaze-markup\n    bytestring\n    case-insensitive\n    cassava\n    commonmark\n    citeproc\n    commonmark\n    commonmark-extensions\n    commonmark-pandoc\n#    connection\n    containers\n    data-default\n    deepseq\n    directory\n    doclayout\n    doctemplates\n    emojis\n    exceptions\n    file-embed\n    filepath\n    Glob\n    gridtables\n    haddock-library\n    hslua-aeson\n#    hslua-list\n    hslua-module-doclayout\n    hslua-module-path\n    hslua-module-system\n    hslua-module-text\n    hslua-module-version\n    http-client\n    http-client-tls\n    http-types\n    ipynb\n    jira-wiki-markup\n    JuicyPixels\n    lpeg\n    lua\n    lua-arbitrary\n    lpeg\n    mime-types\n    mtl\n    network\n    network-uri\n    Only\n    ordered-containers\n    pandoc-lua-marshal\n    pandoc-types\n    parsec\n    pretty\n    pretty-show\n    process\n    random\n    regex-tdfa\n    safe\n    scientific\n    servant-server\n    SHA\n    skylighting\n    skylighting-core\n    skylighting-format-latex\n# skylighting-format-context\n    skylighting-format-blaze-html\n# skylighting-format-ansi\n    split\n    syb\n    tagsoup\n    tasty\n    tasty-bench\n    tasty-golden\n    tasty-hunit\n    tasty-lua\n    tasty-quickcheck\n    temporary\n    texmath\n    text\n    text-conversions\n    time\n    unicode-collation\n    unicode-transforms\n    unix\n    wai\n    wai-app-static\n    wai-cors\n    wai-extra\n    warp\n    xml\n    xml-conduit\n    xml-types\n    yaml\n    zip-archive\n    zlib\n  ];\n\n  ghc = haskellPackages.ghcWithPackages haskellDeps;\n\n  nixPackages = [\n    pkgs.zlib\n    ghc\n    haskellPackages.ghcid\n    haskellPackages.haskell-language-server\n    haskellPackages.cabal2nix\n    haskellPackages.cabal-install\n    haskellPackages.hlint\n    haskellPackages.stylish-haskell\n  ];\nin\npkgs.stdenv.mkDerivation {\n  name = \"env\";\n  buildInputs = nixPackages;\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack.yaml",
          "type": "blob",
          "size": 0.49,
          "content": "flags:\n  pandoc:\n    embed_data_files: true\n  QuickCheck:\n    old-random: false\npackages:\n- '.'\n- 'pandoc-cli'\n- 'pandoc-lua-engine'\n- 'pandoc-server'\nextra-deps:\n- tls-2.1.5\n- citeproc-0.8.1.2\n- skylighting-core-0.14.6\n- skylighting-0.14.6\n- skylighting-format-typst-0.1\n- git: https://github.com/jgm/texmath.git\n  commit: 4f8d982abf6efaef6512f3671e47120eeced15b5\nghc-options:\n   \"$locals\": -fhide-source-paths -Wno-missing-home-modules\nresolver: lts-23.0\nnix:\n  packages:\n  - pkg-config\n  - zlib\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "weeder.toml",
          "type": "blob",
          "size": 0.06,
          "content": "roots = [ \"^Main.main$\", \"^Paths_.*$\" ]\ntype-class-roots = true\n"
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        },
        {
          "name": "wml.xsd.patch",
          "type": "blob",
          "size": 1.62,
          "content": "diff --git a/schemas/ISO-IEC29500-4_2016/wml.xsd b/schemas/ISO-IEC29500-4_2016/wml.xsd\nindex 6fa33d9..e243504 100644\n--- a/schemas/ISO-IEC29500-4_2016/wml.xsd\n+++ b/schemas/ISO-IEC29500-4_2016/wml.xsd\n@@ -3044,6 +3044,7 @@\n       <xsd:element name=\"targetScreenSz\" type=\"CT_TargetScreenSz\" minOccurs=\"0\"/>\n       <xsd:element name=\"saveSmartTagsAsXml\" type=\"CT_OnOff\" minOccurs=\"0\"/>\n     </xsd:sequence>\n+        <xsd:attribute ref=\"mc:Ignorable\" use=\"optional\" />\n   </xsd:complexType>\n   <xsd:simpleType name=\"ST_FrameScrollbar\">\n     <xsd:restriction base=\"xsd:string\">\n@@ -3194,6 +3195,7 @@\n       <xsd:element name=\"num\" type=\"CT_Num\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n       <xsd:element name=\"numIdMacAtCleanup\" type=\"CT_DecimalNumber\" minOccurs=\"0\"/>\n     </xsd:sequence>\n+        <xsd:attribute ref=\"mc:Ignorable\" use=\"optional\" />\n   </xsd:complexType>\n   <xsd:simpleType name=\"ST_TblStyleOverrideType\">\n     <xsd:restriction base=\"xsd:string\">\n@@ -3285,6 +3287,7 @@\n       <xsd:element name=\"latentStyles\" type=\"CT_LatentStyles\" minOccurs=\"0\" maxOccurs=\"1\"/>\n       <xsd:element name=\"style\" type=\"CT_Style\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n     </xsd:sequence>\n+        <xsd:attribute ref=\"mc:Ignorable\" use=\"optional\" />\n   </xsd:complexType>\n   <xsd:complexType name=\"CT_Panose\">\n     <xsd:attribute name=\"val\" type=\"s:ST_Panose\" use=\"required\"/>\n@@ -3348,6 +3351,7 @@\n     <xsd:sequence>\n       <xsd:element name=\"font\" type=\"CT_Font\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n     </xsd:sequence>\n+        <xsd:attribute ref=\"mc:Ignorable\" use=\"optional\" />\n   </xsd:complexType>\n   <xsd:complexType name=\"CT_DivBdr\">\n     <xsd:sequence>\n"
        },
        {
          "name": "xml-light",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}