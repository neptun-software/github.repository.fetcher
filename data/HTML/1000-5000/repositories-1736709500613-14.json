{
  "metadata": {
    "timestamp": 1736709500613,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PaddlePaddle/VisualDL",
      "stars": 4802,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 1.3974609375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n*.dll\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n.DS_Store\n\n# IDE\n.idea/\n.vscode/\n\n# vcs\n.tool-versions\n\n# frontend dependencies\nnode_modules\n.pnp\n.pnp.js\n\n# next.js\n.next\n\n# frontend debug\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# output\noutput\n\n# wasm target\nfrontend/packages/wasm/target\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.16015625,
          "content": "[flake8]\nextend-exclude = venv,build,dist,frontend,visualdl/proto/record_pb2.py,visualdl/server/dist\nmax-line-length = 120\nmax-doc-length = 120\nmax-complexity = 15\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2451171875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n*.dll\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# macOS\n.DS_Store\n\n# PyCharm IDE\n.idea/\n\n# VSCode\n/.vscode\n\n# asdf\n.tool-versions\n\ndocker-compose.override.yml\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.181640625,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.4.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-executables-have-shebangs\n      - id: check-merge-conflict\n      - id: check-json\n      - id: check-toml\n      - id: check-yaml\n      - id: check-symlinks\n      - id: destroyed-symlinks\n  - repo: https://github.com/pycqa/flake8\n    rev: 3.8.4\n    hooks:\n      - id: flake8\n        alias: be\n        exclude: ^frontend/\n  - repo: https://github.com/shellcheck-py/shellcheck-py\n    rev: v0.7.1.1\n    hooks:\n      - id: shellcheck\n  - repo: local\n    hooks:\n      - id: fe\n        name: lint-staged\n        entry: ./frontend/scripts/lint-staged.sh\n        language: node\n        files: ^frontend/\n        description: lint frontend code by lint-staged\n  - repo: meta\n    hooks:\n      - id: check-hooks-apply\n      - id: check-useless-excludes\n  - repo: https://github.com/asottile/reorder_python_imports\n    rev: v2.4.0\n    hooks:\n      - id: reorder-python-imports\n\n  - repo: local\n    hooks:\n      - id: yapf\n        name: yapf\n        entry: yapf\n        language: system\n        args: [-i, --style .style.yapf]\n        files: \\.py$\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.7607421875,
          "content": "# Change Log\n\nVisualDL的更新记录在此查看。\n\nThis is the Changelog for the VisualDL 2.0 project.\n\n## v2.5.0 - 2023-01-17\n\n**ZH**\n\n- 功能新增\n    - 增加X2Paddle模型转换组件，提供onnx模型到paddle的一键转换 (#1148 #1153 #1160 #1170)\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211203066-f2e43ef5-104f-436a-b44c-cad2b37ad518.gif\" width=\"100%\"/>\n    </p>\n\n    - 增加FastDeployServer组件，支持FastDeploy的serving可视化部署 (#1169 #1198 #1199 #1202)\n     <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211196832-1a05bf80-5aaa-493f-bba2-27e819c18bb9.gif\" width=\"100%\"/>\n    </p>\n\n    - 增加FastDeployClient组件，支持对fastdeployserver服务进行可视化访问 (#1169 #1197)\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211203852-059d5b98-6299-4057-97d8-5209805aa67f.gif\" width=\"100%\"/>\n    </p>\n\n- 其它改进\n    - **BE**: 增加启动参数component_tabs，支持选择指定组件进行显示 (#1157 #1159)\n\n**EN**\n\n- Features\n    - Add X2Paddle component, to support conversion from onnx model to paddle model (#1148 #1153 #1160 #1170)\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211203066-f2e43ef5-104f-436a-b44c-cad2b37ad518.gif\" width=\"100%\"/>\n    </p>\n\n    - Add FastDeployServer component, to support fastdeploy serving deployment visualization (#1169 #1198 #1199 #1202)\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211196832-1a05bf80-5aaa-493f-bba2-27e819c18bb9.gif\" width=\"100%\"/>\n    </p>\n\n    - Add FastDeployClient component, to support request visualization for fastdeployserver service (#1169 #1197)\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/211203852-059d5b98-6299-4057-97d8-5209805aa67f.gif\" width=\"100%\"/>\n    </p>\n\n- Enhancement\n    - **BE** Add a new launching parameter component_tabs, to support selecting which components are presented in page (#1157 #1159)\n\n\n\n## v2.4.2 - 2022-12-25\n\n**ZH**\n\n- 问题修复\n    - **FE**: 修复直方图的显示问题 （#1177）\n    - **BE**: 修复cpu版paddle导出的profiler性能数据文件的载入问题 （#1176）\n    - **BE**: 修复当graph中存在多个program block时候的导出错误 (#1180)\n\n- 其它改进\n    - **BE**: 用户启动vdl不指定logdir参数时让程序不报错退出 （#1171）\n    - **BE**: 新增add_scalars接口 (#1175)\n\n**EN**\n\n- Bug Fixes\n    - **FE**: Fix histogram tab presentation problem （#1177）\n    - **BE**: Fix a bug of loading profiler data exported by paddle of cpu version （#1176）\n    - **BE**: Fix error of exporting graph with multiple program blocks (#1180)\n\n- Enhancement\n    - **BE**: Do not crash vdl when logdir is missing in launching parameters （#1171）\n    - **BE**: Add add_scalars component (#1175)\n\n\n## v2.4.1 - 2022-09-14\n\n**ZH**\n\n- 问题修复\n    - **FE**: 删除带中文名的资源文件 (#1122)\n    - **BE**: requirements增加multiprocess依赖 (#1123)\n\n- 其他改进\n    - **BE**: 新增对框架导出性能数据的protobuf格式支持 (#1128)\n\n\n**EN**\n\n- Bug Fixes\n    - **FE**: Remove resource files with Chinese characters in filenames (#1122)\n    - **BE**: Add multiprocess dependency in requirements (#1123)\n\n- Enhancement\n    - **BE**: Support protobuf format of profiler data exported by paddlepaddle. (#1128)\n\n\n## v2.4.0 - 2022-08-22\n\n**ZH**\n\n- 功能新增\n  - 增加性能数据可视化功能，提供Overview、Operator、GPU Kernel、Distributed、Trace、Memory共六个视图的分析。(#1112 #1114 #1118)\n    - Overview视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893177-a049c8d5-2310-4138-8dd5-844cf198e425.gif\" width=\"80%\"/>\n    </p>\n\n    - Operator视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893218-bff646f1-3d9f-448b-99c8-39f2309db65d.gif\" width=\"80%\"/>\n    </p>\n\n    - GPU Kernel视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893227-64837816-e6a5-41ad-b8f4-d1dfef3fd40b.gif\" width=\"80%\"/>\n    </p>\n\n    - Distributed视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893682-e9330b99-e344-423a-8935-dc050a4cab45.gif\" width=\"80%\"/>\n    </p>\n\n    - Trace视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893687-1788586e-4371-4136-baf7-f3edcbc19003.gif\" width=\"80%\"/>\n    </p>\n\n    - Memory视图\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185893743-43643f2d-0c5a-46ad-8ad8-b04ae48ecc97.gif\" width=\"80%\"/>\n    </p>\n\n**EN**\n\n- Features\n  - Add visualization for profiling data, support six viewers for analysis, i.e. Overview, Operator, GPU Kernel, Distributed, Trace and Memory. (#1112 #1114 #1118)\n    - Overview\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894151-53ffc60b-7203-4cb8-a289-5d97332d0691.gif\" width=\"80%\"/>\n    </p>\n\n    - Operator\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894180-546c7012-6623-4163-b1d4-e7607b1ed72d.gif\" width=\"80%\"/>\n    </p>\n\n    - GPU Kernel\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894242-ec382146-56aa-42bc-ae81-ed7221b72bb4.gif\" width=\"80%\"/>\n    </p>\n\n    - Distributed\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894274-fc9aae45-0faf-429c-8c5e-54ea0a45cbf2.gif\" width=\"80%\"/>\n    </p>\n\n    - Trace\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894306-05eb72ca-33b9-4b49-a036-2f4b3b1e7e65.gif\" width=\"80%\"/>\n    </p>\n\n    - Memory\n\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/185894209-fec56d3c-65ef-4240-a957-0965521d36f7.gif\" width=\"80%\"/>\n    </p>\n\n\n## v2.3.0 - 2022-06-30\n\n**ZH**\n\n- 功能新增\n  - **BE**:  增加add_graph接口支持动态图模型可视化 （#1077 #1093）\n  - **FE**:  增加动态图可视化页面 （#1091 #1096 #1097）\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175808777-5bc24d7a-9115-44d0-8709-a82a3e341b3d.gif\" width=\"80%\"/>\n    </p>\n    \n    - 展开和折叠指定节点\n    \n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810790-a35f83bf-a23c-4a28-afb7-2e0cf7711b9c.png\" width=\"80%\"/>\n        </p>\n\n    - 一键全展开和全折叠\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175809551-67f67552-59b7-4aca-a1cc-fe5606e7e512.png\" width=\"80%\"/>\n        </p>\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175809610-d07c0b15-d1bd-4542-aacd-29b4d2ba8fcb.png\" width=\"80%\"/>\n    </p>\n\n    - 飞桨API链接功能\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175809570-241db056-0b41-4e3a-828d-376a011a4645.png\" width=\"80%\"/>\n    </p>\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175809574-8c173b88-ed27-4c29-a3e1-a3887d2d3107.png\" width=\"80%\"/>\n    </p>\n    \n\n- 问题修复\n  - **FE**:  修复图像数据放大后比例失调的问题 （##1090）\n\n- 其他改进\n  - **FE**:  优化文本数据显示的用户体验 （##1090）\n\n**EN**\n\n- Features\n  - **BE**:  Add add_graph interface for dynamic model of paddle（#1077 #1093）\n  - **FE**:  Add dynamic graph page （#1091 #1096 #1097）\n  <p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/175811156-a80ca0c4-207d-44d7-bd5a-9701a7875722.gif\" width=\"80%\"/>\n    </p>\n\n    - Fold and unfold one node\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810800-4823b9f1-3d59-44e8-aaa5-a80577624452.png\" width=\"80%\"/>\n    </p>\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810790-a35f83bf-a23c-4a28-afb7-2e0cf7711b9c.png\" width=\"80%\"/>\n    </p>\n\n    - Fold and unfold all nodes\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810856-ff98a1ed-2a4f-4cc1-bc9b-3085857c0b81.png\" width=\"80%\"/>\n    </p>\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810837-a0953956-7320-4e78-9c52-72ad13962216.png\" width=\"80%\"/>\n    </p>\n\n    - Link api specification of paddle\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810992-b86e9aef-e700-4c2d-bcd0-21fc96fc2564.png\" width=\"80%\"/>\n    </p>\n    <p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/22424850/175810997-0672d836-4d7c-432d-b5de-187f97c421ae.png\" width=\"80%\"/>\n    </p>\n- Bug Fixes\n  - **FE**:  Fix unbalance ratio of upscaled image when zoom in. （##1090）\n\n- Enhancement\n  - **FE**:  Refine user experience for text presentation. （##1090）\n\n\n## v2.2.1 - 2021-09-02\n\n**ZH**\n\n- 问题修复\n    - **FE**: 修复错误页面跳转链接错误的问题 (#973)\n    - **BE**: 更新 VDL.service 的链接 (#976)\n    - **FE**: 修复标量数据部分情况下极值无法正确显示的问题 (#981)\n    - **FE**: 修复标量数据 WallTime 显示错误的问题 (#998)\n    - **FE**: 修复标量数据坐标轴范围计算错误的问题 (#998)\n\n- 其他改进\n    - 折线图可以显示 `NaN` 和 `Infinity` 了 (#983, #984, #998)\n    - **BE**: 数据采样时永远保留最新值 (#980)\n\n\n**EN**\n\n- Bug Fixes\n    - **FE**: Fix link error in error pages (#973)\n    - **BE**: Update endpoint of VDL.service (#976)\n    - **FE**: Fix extrema cannot display in some cases in scalar page (#981)\n    - **FE**: Fix WallTime display error in scalar page (#998)\n    - **FE**: Fix axis range calculation error in scalar page (#998)\n\n- Enhancement\n    - `NaN` and `Infinity` values can display in scalar charts (#983, #984, #998)\n    - **BE**: Keep the latest values when sampling data (#980)\n\n## v2.2.0 - 2021-05-23\n\n**ZH**\n\n- 问题修复\n    - **BE**: 修复 `Image` 组件使用 `numpy.pad` 接口版本兼容性问题 (#927)\n    - **BE**: 修复 `add_embedding` 接口 `mat` 参数不支持 `ndarray` 的问题 (#930)\n    - **BE**: 修复 `embedding` 接口 `display_name` 失效问题 (#935)\n    - **BE**: 修复全局 `Logger` 占用问题 (#944)\n    - **FE**: 修复主题在某些情况下不会随着系统设置的改变更新的问题 (#947)\n    - **FE**: 修复数据降维页面中当数据量很大时数据显示错误的问题 (#947)\n\n- 功能新增\n    - **FE**: 数据降维支持三维标签展示 (#947)\n    - **FE**: 数据降维支持色彩映射 (#950)\n    - 新增超参可视化 (#960, #961, #962, #964, #966, #967)\n\n- 其他改进\n    - **FE**: 包含数据流的侧边栏可以拖动调整大小 (#949)\n    - **FE**: 重新设计的导航栏 (#949, #951, #962)\n\n**EN**\n\n- Bug Fixes\n    - **BE**: Fix the compatibility problem of `Image` component using `numpy.pad` interface (#927)\n    - **BE**: Fix fix the problem that `mat` parameter of the `add_embedding` interface does not support `ndarray` (#930)\n    - **BE**: Fix the failure of `display_name` in `embedding` interface (#935)\n    - **BE**: Fix global `Logger` being occupied (#944)\n    - **FE**: Fix theme couldn't be changed in some case when system preference is changed (#947)\n    - **FE**: Fix display error when data size is large in high-dimensional page (#947)\n\n- Features\n    - **FE**: Add 3d label display in high-dimensional page (#947)\n    - **FE**: Add color map in high-dimensional page (#950)\n    - Add Hyper-parameters (#960, #961, #962, #964, #966, #967)\n\n- Enhancement\n    - **FE**: Sidebar with runs is now resizable (#949)\n    - **FE**: Re-designed navbar (#949, #951, #962)\n\n## v2.1.1 - 2021-01-28\n\n**ZH**\n\n- 问题修复\n    - **FE**: 修复部分浏览器的兼容性问题 (#903)\n    - **FE**: 修复深色模式下切换页面会闪白的问题 (#903)\n    - **BE**: 修复旧版本的日志无法上传 VisualDL Service 的问题 (#912)\n- 功能新增\n    - 增加文本样本 (#917)\n    - **BE**: 增加图像组写入功能 (#909)\n- 其他改进\n    - **FE**: 增加了浏览器不兼容时的提示 (#903)\n    - **FE**: 调整样本页面的标题顺序 (#908)\n    - **FE**: 更好的载入提示 (#908)\n\n**EN**\n\n- Bug Fixes\n    - **FE**: Fix compatibility in some browsers (#903)\n    - **FE**: Fix flashing when switch between pages in dark mode (#903)\n    - **BE**: Fix the old version of log cannot be uploaded to VisualDL Service (#912)\n- Features\n    - Add Text Sample (#917)\n    - **BE**: Add images matrix writing function (#909)\n- Enhancement\n    - **FE**: Add browser compatibility tip (#903)\n    - **FE**: Adjust title order of sample pages (#908)\n    - **FE**: Better loading experience (#908)\n\n## v2.1.0 - 2020-12-28\n\n**ZH**\n\n- 问题修复\n    - **BE**: 修复无关文件会被上传到 VDL-Service 的问题 (#866)\n    - **BE**: 改正错误的代码注释 @foreverseer (#877)\n- 功能新增\n    - 重写高维数据映射 (#868, #869, #870, #874)\n    - 增加标量数据图表中原始数据的下载功能 (#879, #893, #894, #896)\n    - 增加ROC曲线功能 @iceriver97 (#881)\n- 其他改进\n    - **FE**: 改进 WebAssembly 和 WebWorker 的执行方式 (#871)\n    - **BE**: 支持 `ndarray` 的 `float32` 和 `double64` 类型 (#878)\n- 重要改动\n    - **BE**: `LogReader` 中参数名由 `file_name` 改为 `file_path` (#864)\n\n**EN**\n\n- Bug Fixes\n    - **BE**: Fix unrelated files uploaded to VDL-Service (#866)\n    - **BE**: Fix confused code comments @foreverseer (#877)\n- Features\n    - Rewrite High-dimension (#868, #869, #870, #874)\n    - Add raw data download support in scalar chart (#879, #893, #894, #896)\n    - Add ROC Curve @iceriver97 (#881)\n- Enhancement\n    - **FE**: Improve execution of WebAssembly and WebWorker (#871)\n    - **BE**: Support `float32` and `double64` in `ndarray` (#878)\n- Breaking Changes\n    - **BE**: Use `file_path` instead of `file_name` in `LogReader` (#864)\n\n## v2.0.5 - 2020-11-24\n\n**ZH**\n\n- 问题修复\n    - **FE**: 修复histogram页面图表坐标轴名称会重复渲染的问题 (#824)\n    - **FE**: 修复图表提示窗中表格内容过长的问题 (#829)\n    - **BE**: 修复Windows下注册表配置不正确时页面无法打开的问题 (#832)\n    - **FE**: 修复Scalar图表提示窗中表格数据无法按照选择的X轴指标进行展示的问题 (#851)\n    - **FE**: 修复Scalar图表Y轴范围不正确的问题 (#851)\n- 功能新增\n    - **FE**: Sample页面支持使用键盘快速修改step (#829)\n    - **FE**: Sample页面中的Image可以放大查看原图 (#829)\n    - **FE**: 增加主题切换功能 (#830)\n    - **BE**: 增加`LogReader`模块 (#827)\n- 其他改进\n    - **FE**: 改进Scalar图表提示窗中relative的可读性 (#851)\n\n**EN**\n\n- Bug Fixes\n    - **FE**: Remove unnecessary render of histogram chart axis label (#824)\n    - **FE**: Limit max length of runs in chart tooltip table (#829)\n    - **BE**: Fix mime type error when registry settings are broken on Windows (#832)\n    - **FE**: Get nearest points listed in tooltip of scalar page by selected x-axis (#851)\n    - **FE**: fix y axis range error in scalar chart (#851)\n- Features\n    - **FE**: Add keyboard shortcuts in sample page (#829)\n    - **FE**: Add image preview in image sample page (#829)\n    - **FE**: Add theme toggle (#830)\n    - **BE**: Add `LogReader` (#827)\n- Enhancement\n    - **FE**: humanize relative time display in tooltip of scalar chart (#851)\n\n## v2.0.4 - 2020-09-21\n\n**ZH**\n\n- 问题修复\n    - **BE**: 修复add_pr_curve不支持list的问题 (#810)\n    - **FE**: 修复tooltip图标间距错乱的问题 (#815)\n    - **FE**: 修复index载入中未居中 (#815)\n    - **FE**: 修复图表载入中消失的问题 (#815)\n    - **FE**: 时间日期无法被正确的格式化的问题 (#813, #815)\n    - **BE**: 修复PR Curve中display_name显示的问题 (#816)\n- 功能新增\n    - 推出 VisualDL Service\n    - **FE**: 支持深色模式\n\n**EN**\n\n- Bug Fixes\n    - **BE**: Fix list not support add_pr_curve (#810)\n    - **FE**: Fix chart toolbox icons gap chaos (#815)\n    - **FE**: Index loading not centered (#815)\n    - **FE**: Get missing echarts loading back (#815)\n    - **FE**: Date & time cannot be formatted to correct locale string (#813, #815)\n    - **BE**: Fix pr display_name bug (#816)\n- Features\n    - Introduce VisualDL Service\n    - **FE**: Dark mode support\n\n## v2.0.3 - 2020-09-14\n\n**ZH**\n\n- 问题修复\n    - **BE**: 修复BOS文件系统追加问题 (#778)\n    - **FE**: PR 曲线图表 Y 轴自适应数值 (#756) (#773)\n    - **BE**: 修复Win10下命令行颜色不正常的问题 (#784)\n    - **FE**: 修复跳转到index时参数丢失的问题 (#804)\n    - **FE**: 修复只有step 0时直方图无法正常渲染的问题 (#807)\n    - **FE**: 修复切换到访问过的页面时载入消失的问题 (#809)\n    - **FE**: 修复标量和PR曲线的图表详情超长无法滚动的问题 (#809)\n    - **BE**: 修复删除BOS文件后卡住的问题 (#805)\n- 功能新增\n    - 标量增加最值显示 (#779, #808)\n    - **BE**: `LogWriter()`增加`file_name`以支持续写 (#764)\n    - **FE**: 网络结构支持子图 (#787)\n    - **FE**: 切换页面时记住选中的数据流 (#788, #809, #800)\n    - **FE**: 标量页面增加只显示平滑后数据选项 (#795)\n    - **FE**: 平滑度可以从页面参数中获取 (#797)\n    - **FE**: 标量页面记住之前选择的平滑度 (#797)\n    - **FE**: 网络结构记住用户上次选中的模型文件 (#789)\n- 其他改进\n    - 使用毫秒增加数据精度 (#781, #783)\n    - **BE**: 增加文件队列超时 (#772, #776)\n    - **BE**: 去除对cv2的依赖 (#769)\n    - **FE**: 使用es module以去除对webpack和nextjs的依赖 (#786)\n    - **FE**: 更友好的错误提示 (#797, #804)\n\n**EN**\n\n- Bug Fixes\n    - **BE**: Fix append to bos (#778)\n    - **FE**: PR Curve chart Y axis will adaptive values now (#756) (#773)\n    - **BE**: Fix command color bug on win10 (#784)\n    - **FE**: Query string missing when redirect from root to index (#804)\n    - **FE**: Histogram cannot be rendered properly when data only has step 0 (#807)\n    - **FE**: Bring loading back when switching to a visited page (#809)\n    - **FE**: Scroll tooltips in scalar & pr-curve to prevent content overflow (#809)\n    - **BE**: Fix bugs when delete bos file (#805)\n- Features\n    - Add global extrema in scalar (#779, #808)\n    - **BE**: Add `file_name` in `LogWriter()` for rewriting (#764)\n    - **FE**: Subgraph support for graph page (#787)\n    - **FE**: Remember selected runs between pages (#788, #809, #800)\n    - **FE**: Add smoothed data only option in scalar page (#795)\n    - **FE**: Set smoothing from query string (#797)\n    - **FE**: Remember smoothing in scalar page (#797)\n    - **FE**: Restore selected model when navigating back to graph page (#789)\n- Enhancement\n    - Use milliseconds to increase accuracy of data (#781, #783)\n    - **BE**: Add timeout for file queue (#772, #776)\n    - **BE**: Remove requirement of cv2 (#769)\n    - **FE**: Get rid of webpack & nextjs while introducing es module (#786)\n    - **FE**: Better error tip (#797, #804)\n\n## v2.0.1 - 2020-08-19\n\n**ZH**\n\n- 优化audio组件数据输入格式\n\n**EN**\n\n- Improve input format of audio component\n\n## v2.0.0 - 2020-08-12\n\n**ZH**\n\n- API全面升级，设计简洁易用。\n- 优化日志采集策略，极大提升可视化性能。\n- 七大可视化功能全面覆盖：Scalar、Image、Audio、Graph、Histogram、PR Curve、High Dimensional\n- 新增支持BOS、HDFS等多种文件系统。\n\n**EN**\n\n- The design of API is fully upgraded to make it easy to understand and use\n- Optimizing the strategy of collecting logs tremendously enhances the overall performance\n- Seven functions are provided, including Scalar, Image, Audio, Graph, Histogram, PR Curve and High Dimensional\n- Besides the support of domestic file system, additional file systems are also supported, such as BOS and HDFS\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.712890625,
          "content": "FROM nikolaik/python-nodejs:python3.8-nodejs14 AS builder\n\nWORKDIR /home/visualdl\nCOPY . .\n\nRUN apt-get update && apt-get -y --no-install-recommends install cmake && rm -rf /var/lib/apt/lists/*\nRUN pip install --disable-pip-version-check -r requirements.txt && python setup.py bdist_wheel\n\n\nFROM python:3-alpine\n\nWORKDIR /home/visualdl\nCOPY --from=builder /home/visualdl/dist/* dist/\n\nRUN apk add --no-cache jpeg-dev libstdc++ && \\\n    apk add --no-cache --virtual .build-deps build-base linux-headers zlib-dev && \\\n    pip install --disable-pip-version-check --find-links=dist visualdl && \\\n    apk del --no-network .build-deps && \\\n    rm -rf dist\n\nENTRYPOINT [\"visualdl\", \"--logdir\", \"/home/visualdl/log\", \"--host\", \"0.0.0.0\"]\n"
        },
        {
          "name": "Dockerfile.demo",
          "type": "blob",
          "size": 1.0703125,
          "content": "FROM nikolaik/python-nodejs:python3.8-nodejs14 AS builder\n\nWORKDIR /home/visualdl\nCOPY . .\n\nRUN apt-get update && apt-get -y --no-install-recommends install cmake && rm -rf /var/lib/apt/lists/*\nRUN [\"pip\", \"install\", \"--disable-pip-version-check\", \"-r\", \"requirements.txt\"]\nRUN [\"python\", \"setup.py\", \"bdist_wheel\"]\nRUN [\"pip\", \"install\", \"--disable-pip-version-check\", \"--find-links=dist\", \"visualdl\"]\n\nWORKDIR /home/visualdl/frontend\n\nENV SCOPE server\nENV PUBLIC_PATH /paddle/visualdl/demo\nENV TELEMETRY_ID b281676ad3824647971c6fd92d65f642\n\nRUN [\"./scripts/install.sh\"]\nRUN [\"./scripts/build.sh\"]\n\n\nFROM node:14-alpine\n\nWORKDIR /home/visualdl\nCOPY --from=builder /home/visualdl/frontend/output/server.tar.gz /tmp\n\nENV NODE_ENV production\nENV PING_URL /ping\nENV DEMO true\nENV HOST 0.0.0.0\nENV PORT 8999\n\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --no-cache --virtual .build-deps git && \\\n    tar zxf /tmp/server.tar.gz && \\\n    rm /tmp/server.tar.gz && \\\n    yarn install --no-lockfile && \\\n    yarn cache clean && \\\n    apk del --no-network .build-deps\n\nENTRYPOINT [\"yarn\", \"start\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9345703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.8134765625,
          "content": "[**中文**](./README_CN.md)\n\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/PaddlePaddle/VisualDL/develop/frontend/packages/core/public/images/logo-visualdl.svg?sanitize=true\" width=\"70%\"/>\n</p>\n\n\n\n<p align=\"center\">\n<a href=\"https://actions-badge.atrox.dev/PaddlePaddle/VisualDL/goto?ref=develop\"><img alt=\"Build Status\" src=\"https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FPaddlePaddle%2FVisualDL%2Fbadge%3Fref%3Ddevelop&style=flat-square\" alt=\"Build Status\" /></a>\n<a href=\"https://pypi.org/project/visualdl/\"><img src=\"https://img.shields.io/pypi/v/visualdl?style=flat-square\" alt=\"PyPI\" /></a>\n<a href=\"https://pypi.org/project/visualdl/#files\"><img src=\"https://img.shields.io/pypi/dm/visualdl?style=flat-square\" alt=\"Downloads\" /></a>\n<a href=\"https://github.com/PaddlePaddle/VisualDL/blob/develop/LICENSE\"><img src=\"https://img.shields.io/github/license/paddlepaddle/visualdl?style=flat-square\" alt=\"License\" /></a>\n</p>\n\n\n<p align=\"center\">\n<a href=\"javascript:void(0)\"><img src=\"https://img.shields.io/badge/QQ_Group-1045783368-52B6EF?style=social&logo=tencent-qq&logoColor=000&logoWidth=20\" alt=\"QQ Group\" /></a>\n</p>\n\n\n## Introduction\n\nVisualDL, a visualization analysis tool of PaddlePaddle, provides a variety of charts to show the trends of parameters, and visualizes model structures, data samples, histograms of tensors, PR curves , ROC curves and high-dimensional data distributions. It enables users to understand the training process and the model structure more clearly and intuitively so as to optimize models efficiently.\n\nVisualDL provides various visualization functions, including **tracking metrics in real-time, visualizing the model structure, displaying the data sample, visualizing the relationship between hyperparameters and model metrics, presenting the changes of distributions of tensors, showing the pr curves, projecting high-dimensional data to a lower dimensional space and more.** Additionally, VisualDL provides VDL.service, which enables developers easily to save, track and share visualization results of experiments. For specific guidelines of each function, please refer to  [**VisualDL User Guide**](./docs/components/README.md). For up-to-date experience, please feel free to try our [**Online Demo**](https://www.paddlepaddle.org.cn/paddle/visualdl/demo). Currently, VisualDL iterates rapidly and new functions will be continuously added.\n\nBrowsers supported by VisualDL are:\n\n- Google Chrome ≥ 79\n- Firefox ≥ 67\n- Microsoft Edge ≥ 79\n- Safari ≥ 11.1\n\nVisualDL natively supports the use of Python. Developers can retrieve plentiful visualization results by simply adding a few lines of Python code into the model before training.\n\n\n\n## Contents\n\n* [Key Highlights](#Key-Highlights)\n* [Installation](#Installation)\n* [Usage Guideline](#Usage-Guideline)\n* [Function Preview](#Function-Preview)\n* [Frequently Asked Questions](#Frequently-Asked-Questions)\n* [Contribution](#Contribution)\n* [More Details](#More-Details)\n* [Technical Communication](#Technical-Communication)\n\n\n\n## Key Highlights\n\n### Easy to Use\n\nThe high-level design of API makes it easy to use. Only one click can initiate the visualization of model structures.\n\n\n### Various Functions\n\nThe function contains the visualization of training parameters, data samples, graph structures, histograms of tensors, PR curves and high-dimensional data distributions.\n\n### High Compatibility\n\nVisualDL provides the visualization of the mainstream model structures such as Paddle, ONNX, Caffe, widely supporting visual analysis for diverse users.\n\n### Fully Support\n\nBy Integrating into PaddlePaddle and related modules, VisualDL allows developers to use different components without obstructions, and thus to have the best experience in the PaddlePaddle ecosystem.\n\n## Installation\n\n\n### Install by PiP\n\n```shell\npython -m pip install visualdl -i https://mirror.baidu.com/pypi/simple\n```\n\n### Install by Code\n\n```\ngit clone https://github.com/PaddlePaddle/VisualDL.git\ncd VisualDL\n\npython setup.py bdist_wheel\npip install --upgrade dist/visualdl-*.whl\n```\n\nPlease note that Python 2 is no longer maintained officially since January 1, 2020. VisualDL now only supports Python 3 in order to ensure the usability of codes.\n\n\n## Usage Guideline\n\nVisualDL stores the data, parameters and other information of the training process in a log file. Users can launch the panel to observe the visualization results.\n\n### 1. Log\n\nThe Python SDK is provided at the back end of VisualDL, and a logger can be customized through LogWriter. The interface description is shown as follows:\n\n```python\nclass LogWriter(logdir=None,\n                max_queue=10,\n                flush_secs=120,\n                filename_suffix='',\n                **kwargs)\n```\n\n#### Interface Parameters\n\n| parameters      | type    | meaning                                                      |\n| --------------- | ------- | ------------------------------------------------------------ |\n| logdir          | string  | The path location of log file. VisualDL will create a log file under this path to record information generated by the training process. If not specified, the path will be  `runs/${CURRENT_TIME}`as default. |\n| max_queue       | int     | The maximum capacity of the data generated before recording in a log file. Default value is 10. If the capacity is reached, the data are immediately written into the log file. |\n| flush_secs      | int     | The maximum cache time of the data generated before recording in a log file. Default value is 120. When this time is reached, the data are immediately written to the log file. (When the log message queue reaches the maximum cache time or maximum capacity, it will be written to the log file immediately)|\n| filename_suffix | string  | Add a suffix to the default log file name.                   |\n| display_name    | string  | This parameter is displayed in the location of `Select Data Stream` in the panel. If not set, the default name is `logdir`.(When `logdir` is too long or needed to be hidden). |\n| file_name    | string  | Set the name of the log file. If the file_name already exists, setting the file_name will be new records in the same log file, which will continue to be used. Note that the name should include 'vdlrecords'. |\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187556-b9714280-48ff-11eb-9052-008e02a21199.png\" width=\"100%\"/>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187552-b4ac8e80-48ff-11eb-998a-57d5a1bc7ee6.png\" width=\"100%\"/>\n</p>\n\n\n#### Example\n\nCreate a log file and record scalar values:\n\n```python\nfrom visualdl import LogWriter\n\n# create a log file under `./log/scalar_test/train`\nwith LogWriter(logdir=\"./log/scalar_test/train\") as writer:\n    # use `add_scalar` to record scalar values\n    writer.add_scalar(tag=\"acc\", step=1, value=0.5678)\n    writer.add_scalar(tag=\"acc\", step=2, value=0.6878)\n    writer.add_scalar(tag=\"acc\", step=3, value=0.9878)\n# you can also use the following method without using context manager `with`:\n\"\"\"\nwriter = LogWriter(logdir=\"./log/scalar_test/train\")\n\nwriter.add_scalar(tag=\"acc\", step=1, value=0.5678)\nwriter.add_scalar(tag=\"acc\", step=2, value=0.6878)\nwriter.add_scalar(tag=\"acc\", step=3, value=0.9878)\n\nwriter.close()\n\"\"\"\n```\n\n### 2. Launch Panel\n\nIn the above example, the log has recorded three sets of scalar values. Developers can view the visualization results of the log file through launching the visualDL panel. There are two ways to launch the log file:\n\n#### Launch by Command Line\n\nUse the command line to launch the VisualDL panel：\n\n```python\nvisualdl --logdir <dir_1, dir_2, ... , dir_n> --model <model_file> --host <host> --port <port> --cache-timeout <cache_timeout> --language <language> --public-path <public_path> --api-only --component_tabs <tab_name1, tab_name2, ...>\n```\n\nParameter details:\n\n| parameters      | meaning                                                      |\n| --------------- | ------------------------------------------------------------ |\n| --logdir        | Set one or more directories of the log. All the logs in the paths or subdirectories will be displayed on the VisualDL Board indepentently. |\n| --model         | Set a path to the model file (not a directory). VisualDL will visualize the model file in Graph page. PaddlePaddle、ONNX、Keras、Core ML、Caffe and other model formats are supported. Please refer to [Graph - Functional Instructions](./docs/components/README.md#functional-instructions-2). |\n| --host          | Specify IP address. The default value is `127.0.0.1`. Specify it as `0.0.0.0` or public IP address so that other machines can visit VisualDL Board.       |\n| --port          | Set the port. The default value is `8040`.                   |\n| --cache-timeout | Cache time of the backend. During the cache time, the front end requests the same URL multiple times, and then the returned data are obtained from the cache. The default cache time is 20 seconds. |\n| --language      | The language of the VisualDL panel. Language can be specified as 'en' or 'zh', and the default is the language used by the browser. |\n| --public-path   | The URL path of the VisualDL panel. The default path is '/app', meaning that the access address is 'http://&lt;host&gt;:&lt;port&gt;/app'. |\n| --api-only      | Decide whether or not to provide only API. If this parameter is set, VisualDL will only provides API service without displaying the web page, and the API address is 'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'. Additionally, If the public_path parameter is not specified, the default address is 'http://&lt;host&gt;:&lt;port&gt;/api'. |\n| --component_tabs  | Decide which components are presented in page, currently support 15 components, i.e. 'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'. If this parameter is set, only specified components will be presented. If not set, and specify --logdir parameter, only components with data in vdlrecords log are presented. If both --component_tabs and --logdir are not set, only present 'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client' components by default |\n\nTo visualize the log file generated in the previous step, developers can launch the panel through the command:\n\n```\nvisualdl --logdir ./log\n```\n\n#### Launch in Python Script\n\n\nDevelopers can start the VisualDL panel in Python script as follows:\n\n```python\nvisualdl.server.app.run(logdir,\n                        model=\"path/to/model\",\n                        host=\"127.0.0.1\",\n                        port=8080,\n                        cache_timeout=20,\n                        language=None,\n                        public_path=None,\n                        api_only=False,\n                        open_browser=False)\n```\n\nPlease note: since all parameters are indefinite except `logdir`, developers should specify parameter names when using them.\n\nThe interface parameters are as follows:\n\n| parameters    | type                                               | meaning                                                      |\n| ------------- | -------------------------------------------------- | ------------------------------------------------------------ |\n| logdir        | string or list[string_1, string_2, ... , string_n] | Set one or more directories of the log. All the logs in the paths or subdirectories will be displayed on the VisualDL Board indepentently.|\n| model         | string                                             | Set a path to the model file (not a directory). VisualDL will visualize the model file in Graph page. |\n| host          | string                                             | Specify IP address. The default value is `127.0.0.1`. Specify it as `0.0.0.0` or public IP address so that other machines can visit VisualDL Board.       |\n| port          | int                                                | Set the port. The default value is `8040`.                   |\n| cache_timeout | int                                                | Cache time of the backend. During the cache time, the front end requests the same URL multiple times, and then the returned data are obtained from the cache. The default cache time is 20 seconds. |\n| language      | string                                             | The language of the VisualDL panel. Language can be specified as 'en' or 'zh', and the default is the language used by the browser. |\n| public_path   | string                                             | The URL path of the VisualDL panel. The default path is '/app', meaning that the access address is 'http://&lt;host&gt;:&lt;port&gt;/app'. |\n| api_only      | boolean                                            | Decide whether or not to provide only API. If this parameter is set, VisualDL will only provides API service without displaying the web page, and the API address is 'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'. Additionally, If the parameter public_path is not specified, the default address is 'http://&lt;host&gt;:&lt;port&gt;/api'. |\n| open_browser  | boolean                                            | Whether or not to open the browser. If this parameter is set as True, the browser will be opened automatically and VisualDL panel will be launched at the same time. If parameter api_only is specified as True,  parameter open_browser can be ignored. |\n| component_tabs | string or list[string_1, string_2, ... , string_n] | Decide which components are presented in page, currently support 15 components, i.e. 'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'. If this parameter is set, only specified components will be presented. If not set, and specify --logdir parameter, only components with data in vdlrecords log are presented. If both --component_tabs and --logdir are not set, only present 'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client' components by default |\n\nTo visualize the log file generated in the previous step, developers can launch the panel through the command:\n\n```python\nfrom visualdl.server import app\n\napp.run(logdir=\"./log\")\n```\n\nAfter launching the panel by one of the above methods, developers can see the visualization results on the browser shown as blow:\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/90868674-ba321f00-e3c9-11ea-83c1-f03c6dd19187.png\" width=\"70%\"/>\n</p>\n\n### 3. Read data in log files using LogReader\n\nVisualDL also provides `LogReader` interface to read any data from log files.\n\n```python\nclass LogReader(file_path='')\n```\n#### Interface Parameters\n| parameters | type   | meaning                              |\n| ---------- | ------ | ------------------------------------ |\n| file_path  | string | File path of the log file. Required. |\n#### Example\nIf there is a log file named `vdlrecords.1605533348.log` in the directory of `./log`, we can retrieve the data under the 'loss' tag in the scalar by:\n```python\nfrom visualdl import LogReader\nreader = LogReader(file_path='./vdlrecords.1605533348.log')\ndata = reader.get_data('scalar', 'loss')\nprint(data)\n```\nThe result will be a list shown as below：\n```python\n...\nid: 5\ntag: \"Metrics/Training(Step): loss\"\ntimestamp: 1605533356039\nvalue: 3.1297709941864014\n...\n```\n\nFor more information of `LogReader`, please refer to [LogReader](./docs/io/LogReader.md).\n\n\n## Function Preview\n\n### Scalar\n\n**Scalar** makes use of various charts to display how the parameters, such as accuracy, loss and learning rate, changes during the training process. In this case, developers can observe not only the single but also the multiple groups of parameters in order to understand the training process and thus speed up the process of model tuning.\n\n#### Dynamic Display\n\nAfter the launch of VisualDL Board, the LogReader will continuously record the data to display in the front-end. Hence, the changes of parameters can be visualized in real-time, as shown below:\n\n<p align=\"center\">\n  <img src=\"https://visualdl.bj.bcebos.com/images/dynamic_display.gif\" width=\"60%\"/>\n</p>\n\n\n\n#### Comparison of Multiple Experiments\n\nDevelopers can compare multiple experiments by specifying and uploading the path of each experiment at the same time so as to visualize the same parameters in the same chart.\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/90869567-fdd95880-e3ca-11ea-9855-6c97ad5c8ae7.gif\" width=\"100%\"/>\n</p>\n\n\n\n### Image\n\n**Image** provides real-time visualizations of the image data during the training process, allowing developers to observe the changes of images at different training stages and  to deeply understand the effects of the training process.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90869677-22353500-e3cb-11ea-9830-2334bdd8e52e.gif\" width=\"55%\"/>\n</p>\n\n\n### Audio\n\n**Audio** aims to allow developers to listen to the audio data in real-time during the training process, helping developers to monitor the process of speech recognition and text-to-speech.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90869771-47c23e80-e3cb-11ea-8b2a-a38b6c33d64b.png\" width=\"85%\"/>\n</p>\n\n\n### Text\n**Text** visualizes the text output of NLP models within any stage, aiding developers to compare the changes of outputs so as to deeply understand the training process and simply evaluate the performance of the model.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/106248340-cdd09400-624b-11eb-8ea9-5a07a239c365.png\" width=\"85%\"/>\n</p>\n\n\n### Graph\n\n**Graph** enables developers to visualize model structures by only one click. Moreover, **Graph** allows developers to explore model attributes, node information, node input and output. aiding them analyze model structures quickly and understand the direction of data flow easily. Additionally, Graph supports the visualization of dynamic and static model graph respectively.\n\n- dynamic graph\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175811841-64b44d99-7d48-4fe9-a679-01156d15af74.gif\" width=\"85%\"/>\n</p>\n\n- static graph\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175811795-1fd21737-06f0-42fc-bea3-ef7a17216fc9.gif\" width=\"85%\"/>\n</p>\n\n\n### Histogram\n\n**Histogram** displays how the trend of tensor (weight, bias, gradient, etc.) changes during the training process in the form of histogram. Developers can adjust the model structures accurately by having an in-depth understanding of the effect of each layer.\n\n- Offset Mode\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90870121-bd2e0f00-e3cb-11ea-89cf-6622cb607b89.png\" width=\"85%\"/>\n</p>\n\n\n\n- Overlay Mode\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90870194-cfa84880-e3cb-11ea-8a66-bebcad267a10.png\" width=\"85%\"/>\n</p>\n\n### PR Curve\n\n**PR Curve** displays the precision and recall values under different thresholds, helping developers to find the best threshold efficiently.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103274647-1ef72900-49fd-11eb-9284-2a5b63bdf2e3.png\" width=\"85%\"/>\n</p>\n\n### ROC Curve\n\n**ROC Curve** shows the performance of a classification model at all classification thresholds; the larger the area under the curve, the better the model performs, aiding developers in evaluating the model performance and choosing an appropriate threshold.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103344081-8928d000-4ac8-11eb-84d0-28f249886172.gif\" width=\"85%\"/>\n</p>\n\n\n### High Dimensional\n\n**High Dimensional** provides three approaches--T-SNE, PCA and UMAP--to do the dimensionality reduction, allowing developers to have an in-depth analysis of the relationship between high-dimensional data and to optimize algorithms based on the analysis.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103188111-1b32ac00-4902-11eb-914e-c2368bdb8373.gif\" width=\"85%\"/>\n</p>\n\n\n### Hyper Parameters\n\n**Hyper Parameters** visualize the relationship between hyperparameters and model metrics (such as accuracy and loss) in a rich view, helping you identify the best hyperparameters in an efficient way.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/119247155-e9c0c280-bbb9-11eb-8175-58a9c7657a9c.gif\" width=\"85%\"/>\n</p>\n\n### Performance Analysis\n**Performance Analysis**(Profiler) visualize the profiling data collected during your program runs, helping you identify program bottlenecks and optimize performance. Please refer to [VisualDL Profiler Guide](./profiler/README.md)。\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/185894151-53ffc60b-7203-4cb8-a289-5d97332d0691.gif\" width=\"85%\"/>\n</p>\n\n### Performance Analysis\n**Performance Analysis**(Profiler) visualize the profiling data collected during your program runs, helping you identify program bottlenecks and optimize performance. Please refer to [VisualDL Profiler Guide](./docs/components/profiler/README.md).\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/185894151-53ffc60b-7203-4cb8-a289-5d97332d0691.gif\" width=\"85%\"/>\n</p>\n\n### X2Paddle\nThe X2Paddle component provides the functions of onnx model format visualization and transformation to paddle format.\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203066-f2e43ef5-104f-436a-b44c-cad2b37ad518.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployServer\nThe FastDeployServer component provides the functions of loading and editing the model repository, fastdeployserver service management and monitoring, and providing the client to test service. Please refer to [use VisualDL for fastdeploy serving deployment visualization](./docs/components/fastdeploy_server/README.md).\n\n <p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211196832-1a05bf80-5aaa-493f-bba2-27e819c18bb9.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployClient\nThe FastDeployClient component is mainly used to quickly access the fastdeployserver service, to help users visualize prediction requests and results. Please refer to [use VisualDL as fastdeploy client for request visualization](./docs/components/fastdeploy_client/README.md).\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203852-059d5b98-6299-4057-97d8-5209805aa67f.gif\" width=\"100%\"/>\n</p>\n\n\n### VDL.service\n\n**VDL.service** enables developers to easily save, track and share visualization results with anyone for free.\n\n<p align=\"center\">\n<img src=https://user-images.githubusercontent.com/48054808/93731055-fbeafb00-fbfd-11ea-80f4-bbfd08a0fc35.png width=\"85%\"/>\n</p>\n\n\n## Frequently Asked Questions\n\nIf you are confronted with some problems when using VisualDL, please refer to [our FAQs](./docs/faq.md).\n\n## Contribution\n\nVisualDL, in which Graph is powered by [Netron](https://github.com/lutzroeder/netron), is an open source project supported by [PaddlePaddle](https://www.paddlepaddle.org/) and [ECharts](https://echarts.apache.org/).\n\nDevelopers are warmly welcomed to use, comment and contribute.\n\n## More Details\n\nFor more details related to the use of VisualDL, please refer to [**VisualDL User Guide**](./docs/components/README.md), [**VisualDL Profiler Guide**](./docs/components/profiler/README.md), [**Use VisualDL for fastdeploy serving deployment visualization**](./docs/components/fastdeploy_server/README.md), [**Use VisualDL as fastdeploy client for request visualization**](./docs/components/fastdeploy_client/README.md).\n\n## Technical Communication\n\nWelcome to join the official QQ group 1045783368 to communicate with PaddlePaddle team and other developers.\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/82522691-c2758680-9b5c-11ea-9aee-fca994aba175.png\" width=\"20%\"/>\n</p>\n\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 22.185546875,
          "content": " [**English**](./README.md)\n\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/PaddlePaddle/VisualDL/develop/frontend/packages/core/public/images/logo-visualdl.svg?sanitize=true\" width=\"70%\"/>\n</p>\n\n\n\n<p align=\"center\">\n<a href=\"https://actions-badge.atrox.dev/PaddlePaddle/VisualDL/goto?ref=develop\"><img alt=\"Build Status\" src=\"https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FPaddlePaddle%2FVisualDL%2Fbadge%3Fref%3Ddevelop&style=flat-square\" alt=\"Build Status\" /></a>\n<a href=\"https://pypi.org/project/visualdl/\"><img src=\"https://img.shields.io/pypi/v/visualdl?style=flat-square\" alt=\"PyPI\" /></a>\n<a href=\"https://pypi.org/project/visualdl/#files\"><img src=\"https://img.shields.io/pypi/dm/visualdl?style=flat-square\" alt=\"Downloads\" /></a>\n<a href=\"https://github.com/PaddlePaddle/VisualDL/blob/develop/LICENSE\"><img src=\"https://img.shields.io/github/license/paddlepaddle/visualdl?style=flat-square\" alt=\"License\" /></a>\n</p>\n\n\n<p align=\"center\">\n<a href=\"https://jq.qq.com/?_wv=1027&k=TyzyVT4C\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://img.shields.io/badge/QQ_Group-1045783368-52B6EF?style=social&logo=tencent-qq&logoColor=000&logoWidth=20\" alt=\"QQ Group\" /></a>\n</p>\n\n\n## 介绍\n\nVisualDL是飞桨可视化分析工具，以丰富的图表呈现训练参数变化趋势、模型结构、数据样本、高维数据分布等。可帮助用户更清晰直观地理解深度学习模型训练过程及模型结构，进而实现高效的模型优化。\n\nVisualDL提供丰富的可视化功能，**支持标量、图结构、数据样本（图像、语音、文本）、超参数可视化、直方图、PR曲线、ROC曲线及高维数据降维呈现等诸多功能**，同时VisualDL提供可视化结果保存服务，通过VDL.service生成链接，保存并分享可视化结果。具体功能使用方式，请参见 [**VisualDL使用指南**](./docs/components/README_CN.md)。如欲体验最新特性，欢迎试用我们的[**在线演示系统**](https://www.paddlepaddle.org.cn/paddle/visualdl/demo)。项目正处于高速迭代中，敬请期待新组件的加入。\n\nVisualDL支持浏览器：\n\n- Google Chrome ≥ 79\n- Firefox ≥ 67\n- Microsoft Edge ≥ 79\n- Safari ≥ 11.1\n\nVisualDL原生支持Python的使用， 通过在模型的Python配置中添加几行代码，便可为训练过程提供丰富的可视化支持。\n\n\n## 目录\n\n* [核心亮点](#核心亮点)\n\n* [安装方式](#安装方式)\n\n* [使用方式](#使用方式)\n\n* [可视化功能概览](#可视化功能概览)\n\n* [开源贡献](#开源贡献)\n\n* [常见问题](#常见问题)\n\n* [更多细节](#更多细节)\n\n## 核心亮点\n\n### 简单易用\n\nAPI设计简洁易懂，使用简单。模型结构一键实现可视化。\n\n### 功能丰富\n\n功能覆盖标量、数据样本、图结构、直方图、PR曲线及数据降维可视化。\n\n### 高兼容性\n\n全面支持Paddle、ONNX、Caffe等市面主流模型结构可视化，广泛支持各类用户进行可视化分析。\n\n### 全面支持\n\n与飞桨服务平台及工具组件全面打通，为您在飞桨生态系统中提供最佳使用体验。\n\n\n\n## 安装方式\n\n### 使用pip安装\n\n```shell\npython -m pip install visualdl -i https://mirror.baidu.com/pypi/simple\n```\n\n### 使用代码安装\n\n```\ngit clone https://github.com/PaddlePaddle/VisualDL.git\ncd VisualDL\n\npython setup.py bdist_wheel\npip install --upgrade dist/visualdl-*.whl\n```\n\n需要注意，官方自2020年1月1日起不再维护Python2，为了保障代码可用性，VisualDL现仅支持Python3\n\n## 使用方式\n\nVisualDL将训练过程中的数据、参数等信息储存至日志文件中后，启动面板即可查看可视化结果。\n\n### 1. 记录日志\n\nVisualDL的后端提供了Python SDK，可通过LogWriter定制一个日志记录器，接口如下：\n\n```python\nclass LogWriter(logdir=None,\n                max_queue=10,\n                flush_secs=120,\n                filename_suffix='',\n                display_name='',\n                file_name='',\n                **kwargs)\n```\n\n#### 接口参数\n\n| 参数            | 格式    | 含义                                                         |\n| --------------- | ------- | ------------------------------------------------------------ |\n| logdir          | string  | 日志文件所在的路径，VisualDL将在此路径下建立日志文件并进行记录，如果不填则默认为`runs/${CURRENT_TIME}` |\n| max_queue       | int     | 日志记录消息队列的最大容量，达到此容量则立即写入到日志文件   |\n| flush_secs      | int     | 日志记录消息队列的最大缓存时间，达到此时间则立即写入到日志文件（日志消息队列到达最大缓存时间或最大容量，都会立即写入日志文件） |\n| filename_suffix | string  | 为默认的日志文件名添加后缀                                   |\n| display_name    | string  | 指定面板启动后显示的路径，如不指定此项则显示日志所在的实际路径，当日志所在路径过长或想隐藏日志所在路径时可指定此参数 |\n| file_name       | string  | 指定写入的日志文件名，如果指定的文件名已经存在，则将日志续写在此文件中，因此可通过此参数实现日志续写的功能，文件名必须包括`vdlrecords` |\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187556-b9714280-48ff-11eb-9052-008e02a21199.png\" width=\"100%\"/>\n</p>\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/103187552-b4ac8e80-48ff-11eb-998a-57d5a1bc7ee6.png\" width=\"100%\"/>\n</p>\n\n#### 示例\n\n设置日志文件并记录标量数据：\n\n```python\nfrom visualdl import LogWriter\n\n# 在`./log/scalar_test/train`路径下建立日志文件\nwith LogWriter(logdir=\"./log/scalar_test/train\") as writer:\n    # 使用scalar组件记录一个标量数据,将要记录的所有数据都记录在该writer中\n    writer.add_scalar(tag=\"acc\", step=1, value=0.5678)\n    writer.add_scalar(tag=\"acc\", step=2, value=0.6878)\n    writer.add_scalar(tag=\"acc\", step=3, value=0.9878)\n# 如果不想使用上下文管理器`with`，可拆解为以下几步完成：\n\"\"\"\nwriter = LogWriter(logdir=\"./log/scalar_test/train\")\n\nwriter.add_scalar(tag=\"acc\", step=1, value=0.5678)\nwriter.add_scalar(tag=\"acc\", step=2, value=0.6878)\nwriter.add_scalar(tag=\"acc\", step=3, value=0.9878)\n\nwriter.close()\n\"\"\"\n```\n注：调用LogWriter(logdir=\"./log/scalar_test/train\")将会在./log/scalar_test/train目录下生成一个日志文件，\n运行一次程序所产生的训练数据应该只记录到一个日志文件中，因此应该只调用一次LogWriter，用返回的LogWriter对象来记录所有数据，\n而不是每记录一个数据就创建一次LogWriter。\n\n<font color=#FF0000>如下是错误示范</font>：\n```python\nfrom visualdl import LogWriter\nwith LogWriter(logdir=\"./log/scalar_test/train\") as writer:  # 将会创建日志文件vdlrecords.xxxx1.log\n    writer.add_scalar(tag=\"acc\", step=1, value=0.5678)  # 数据写入./log/scalar_test/train/vdlrecords.xxxx1.log\nwith LogWriter(logdir=\"./log/scalar_test/train\") as writer:  # 将会创建日志文件vdlrecords.xxxx2.log\n    writer.add_scalar(tag=\"acc\", step=2, value=0.6878)  # 数据将会写入./log/scalar_test/train/vdlrecords.xxxx2.log\n```\n\n### 2. 启动面板\n\n在上述示例中，日志已记录三组标量数据，现可启动VisualDL面板查看日志的可视化结果，共有两种启动方式：\n\n#### 在命令行启动\n\n使用命令行启动VisualDL面板，命令格式如下：\n\n```python\nvisualdl --logdir <dir_1, dir_2, ... , dir_n> --model <model_file> --host <host> --port <port> --cache-timeout <cache_timeout> --language <language> --public-path <public_path> --api-only --component_tabs <tab_name1, tab_name2, ...>\n```\n\n参数详情：\n\n| 参数            | 意义                                                         |\n| --------------- | ------------------------------------------------------------ |\n| --logdir        | 设定日志所在目录，可以指定多个目录，VisualDL将遍历并且迭代寻找指定目录的子目录，将所有实验结果进行可视化 |\n| --model         | 设定模型文件路径(非文件夹路径)，VisualDL将在此路径指定的模型文件进行可视化，目前可支持PaddlePaddle、ONNX、Keras、Core ML、Caffe等多种模型结构，详情可查看[graph支持模型种类](./docs/components/README_CN.md#功能操作说明-4) |\n| --host          | 设定IP，默认为`127.0.0.1`，若想使得本机以外的机器访问启动的VisualDL面板，需指定此项为`0.0.0.0`或自己的公网IP地址                                    |\n| --port          | 设定端口，默认为`8040`                                       |\n| --cache-timeout | 后端缓存时间，在缓存时间内前端多次请求同一url，返回的数据从缓存中获取，默认为20秒 |\n| --language      | VisualDL面板语言，可指定为'en'或'zh'，默认为浏览器使用语言   |\n| --public-path   | VisualDL面板URL路径，默认是'/app'，即访问地址为'http://&lt;host&gt;:&lt;port&gt;/app' |\n| --api-only      | 是否只提供API，如果设置此参数，则VisualDL不提供页面展示，只提供API服务，此时API地址为'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'；若没有设置public_path参数，则默认为'http://&lt;host&gt;:&lt;port&gt;/api' |\n| --component_tabs | 设定需要显示的组件，当前支持'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'共15个组件。如果设置了此参数，将只展示所指定的组件。如果没有设置此参数，当指定了--logdir参数时候，将会根据日志文件中拥有的数据类型来自动显示相应的组件。当没有指定--logdir参数，默认显示'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'这四个名称代表的组件 |\n\n针对上一步生成的日志，启动命令为：\n\n```\nvisualdl --logdir ./log\n```\n\n#### 在Python脚本中启动\n\n支持在Python脚本中启动VisualDL面板，接口如下：\n\n```python\nvisualdl.server.app.run(logdir,\n                        model=\"path/to/model\",\n                        host=\"127.0.0.1\",\n                        port=8080,\n                        cache_timeout=20,\n                        language=None,\n                        public_path=None,\n                        api_only=False,\n                        open_browser=False)\n```\n\n请注意：除`logdir`外，其他参数均为不定参数，传递时请指明参数名。\n\n接口参数具体如下：\n\n| 参数          | 格式                                             | 含义                                                         |\n| ------------- | ------------------------------------------------ | ------------------------------------------------------------ |\n| logdir        | string或list[string_1, string_2, ... , string_n] | 日志文件所在的路径，VisualDL将在此路径下递归搜索日志文件并进行可视化，可指定单个或多个路径，每个路径中及其子目录中的日志都将视为独立日志展现在前端面板上 |\n| model         | string                                           | 模型文件路径(非文件夹路径)，VisualDL将在此路径指定的模型文件进行可视化，目前可支持PaddlePaddle、ONNX、Keras、Core ML、Caffe等多种模型结构，详情可查看[graph支持模型种类](./docs/components/README_CN.md#功能操作说明-4) |\n| host          | string                                           | 设定IP，默认为`127.0.0.1`，若想使得本机以外的机器访问启动的VisualDL面板，需指定此项为`0.0.0.0`或自己的公网IP地址                       |\n| port          | int                                              | 启动服务端口，默认为`8040`                                   |\n| cache_timeout | int                                              | 后端缓存时间，在缓存时间内前端多次请求同一url，返回的数据从缓存中获取，默认为20秒 |\n| language      | string                                           | VisualDL面板语言，可指定为'en'或'zh'，默认为浏览器使用语言   |\n| public_path   | string                                           | VisualDL面板URL路径，默认是'/app'，即访问地址为'http://&lt;host&gt;:&lt;port&gt;/app' |\n| api_only      | boolean                                          | 是否只提供API，如果设置此参数，则VisualDL不提供页面展示，只提供API服务，此时API地址为'http://&lt;host&gt;:&lt;port&gt;/&lt;public_path&gt;/api'；若没有设置public_path参数，则默认为'http://&lt;host&gt;:&lt;port&gt;/api' |\n| open_browser  | boolean                                          | 是否打开浏览器，设置为True则在启动后自动打开浏览器并访问VisualDL面板，若设置api_only，则忽略此参数 |\n| --component_tabs | string或list[string_1, string_2, ... , string_n] | 设定需要显示的组件，当前支持'scalar', 'image', 'text', 'embeddings', 'audio', 'histogram', 'hyper_parameters', 'static_graph', 'dynamic_graph', 'pr_curve', 'roc_curve', 'profiler', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'共15个组件。如果设置了此参数，将只展示所指定的组件。如果没有设置此参数，当指定了--logdir参数时候，将会根据日志文件中拥有的数据类型来自动显示相应的组件。当没有指定--logdir参数，默认显示'static_graph', 'x2paddle', 'fastdeploy_server', 'fastdeploy_client'这四个名称代表的组件 |\n\n针对上一步生成的日志，我们的启动脚本为：\n\n```python\nfrom visualdl.server import app\n\napp.run(logdir=\"./log\")\n```\n\n在使用任意一种方式启动VisualDL面板后，打开浏览器访问VisualDL面板，即可查看日志的可视化结果，如图：\n\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/48054808/82786044-67ae9880-9e96-11ea-8a2b-3a0951a6ec19.png\" width=\"60%\"/>\n</p>\n\n\n### 3. 使用LogReader获取日志中的数据\n\nVisualDL的后端也提供了获取日志数据的组件`LogReader`，可通过其获取日志中任意数据，接口如下：\n\n```python\nclass LogReader(file_path='')\n```\n\n#### 接口参数\n\n| 参数            | 格式    | 含义                                                         |\n| --------------- | ------- | ------------------------------------------------------------ |\n| file_path       | string  | 指定要读的日志文件路径，必填，注意这里与file_name不同，需填写具体路径|\n\n#### 示例\n\n假定在`./log`文件夹下有一个日志文件`vdlrecords.1605533348.log`，则获取LogReader实例如下：\n\n```python\nfrom visualdl import LogReader\n\nreader = LogReader(file_path='./log/vdlrecords.1605533348.log')\ndata = reader.get_data('scalar', 'loss')\nprint(data)\n```\n\n结果为列表形式，如下\n\n```python\n...\nid: 5\ntag: \"Metrics/Training(Step): loss\"\ntimestamp: 1605533356039\nvalue: 3.1297709941864014\n...\n```\n\n关于LogReader的更多具体用法，可参考[LogReader](./docs/io/LogReader.md)。\n\n## 可视化功能概览\n\n### Scalar\n\n以图表形式实时展示训练过程参数，如loss、accuracy。让用户通过观察单组或多组训练参数变化，了解训练过程，加速模型调优。具有两大特点：\n\n#### 动态展示\n\n在启动VisualDL Board后，LogReader将不断增量的读取日志中数据并供前端调用展示，因此能够在训练中同步观测指标变化，如下图：\n\n<p align=\"center\">\n  <img src=\"https://visualdl.bj.bcebos.com/images/dynamic_display.gif\" width=\"60%\"/>\n</p>\n\n\n\n#### 多实验对比\n\n只需在启动VisualDL Board的时将每个实验日志所在路径同时传入即可，每个实验中相同tag的指标将绘制在一张图中同步呈现，如下图：\n\n<p align=\"center\">\n  <img src=\"https://visualdl.bj.bcebos.com/images/multi_experiments.gif\" width=\"100%\"/>\n</p>\n\n\n\n### Image\n\n实时展示训练过程中的图像数据，用于观察不同训练阶段的图像变化，进而深入了解训练过程及效果。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/90356439-24715980-e082-11ea-8896-01c27fc2fc9b.gif\" width=\"85%\"/>\n</p>\n\n\n### Audio\n\n实时查看训练过程中的音频数据，监控语音识别与合成等任务的训练过程。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/87659138-b4746880-c78f-11ea-965b-c33804e7c296.png\" width=\"85%\"/>\n</p>\n\n\n### Text\n展示文本任务任意阶段的数据输出，对比不同阶段的文本变化，便于深入了解训练过程及效果。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/106248340-cdd09400-624b-11eb-8ea9-5a07a239c365.png\" width=\"85%\"/>\n</p>\n\n\n### Graph\n\n一键可视化模型的网络结构。可查看模型属性、节点信息、节点输入输出等，并支持节点搜索，辅助用户快速分析模型结构与了解数据流向，覆盖动态图与静态图两种格式。\n- 动态图\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175770313-2509f7e9-041a-4654-9a0f-45f4bd76e1e8.gif\" width=\"85%\"/>\n</p>\n\n- 静态图\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/175770315-11e2c3f5-141c-4f05-be86-0e1e2785e11f.gif\" width=\"85%\"/>\n</p>\n\n### Histogram\n\n以直方图形式展示Tensor（weight、bias、gradient等）数据在训练过程中的变化趋势。深入了解模型各层效果，帮助开发者精准调整模型结构。\n\n- Offset模式\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/86551031-86647c80-bf76-11ea-8ec2-8c86826c8137.png\" width=\"85%\"/>\n</p>\n\n\n- Overlay模式\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/86551033-882e4000-bf76-11ea-8e6a-af954c662ced.png\" width=\"85%\"/>\n</p>\n\n\n### PR Curve\n\n精度-召回率曲线，帮助开发者权衡模型精度和召回率之间的平衡，设定最佳阈值。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/86738774-ee46c000-c067-11ea-90d2-a98aac445cca.png\" width=\"85%\"/>\n</p>\n\n### ROC Curve\n\n展示不同阈值下模型指标的变化，同时曲线下的面积（AUC）直观的反应模型表现，辅助开发者掌握模型训练情况并高效进行阈值选择。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103344081-8928d000-4ac8-11eb-84d0-28f249886172.gif\" width=\"85%\"/>\n</p>\n\n### High Dimensional\n\n将高维数据进行降维展示，目前支持T-SNE、PCA、UMAP三种降维方式，用于深入分析高维数据间的关系，方便用户根据数据特征进行算法优化。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/103188111-1b32ac00-4902-11eb-914e-c2368bdb8373.gif\" width=\"85%\"/>\n</p>\n\n\n### Hyper Parameters\n\n以丰富的视图多角度地可视化超参数与模型关键指标间的关系，便于快速确定最佳超参组合，实现高效调参。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/28444161/119247155-e9c0c280-bbb9-11eb-8175-58a9c7657a9c.gif\" width=\"85%\"/>\n</p>\n\n### Profiler\n通过多个视图可视化性能分析的数据，辅助用户定位性能瓶颈并进行优化。可参考[使用VisualDL做性能分析](./docs/components/profiler/README_CN.md)。\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/22424850/185893177-a049c8d5-2310-4138-8dd5-844cf198e425.gif\" width=\"85%\"/>\n</p>\n\n### X2Paddle\n提供onnx模型转paddle模型的可视化操作界面，帮助用户可视化onnx模型结构并且获取转换后的paddle模型结构和参数文件。\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203066-f2e43ef5-104f-436a-b44c-cad2b37ad518.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployServer\n基于[FastDeploy](https://github.com/PaddlePaddle/FastDeploy)的Serving可视化部署，提供配置模型库、管理监控服务以及测试服务等功能。详细内容可参考[使用VisualDL进行Serving可视化部署](./docs/components/fastdeploy_server/README_CN.md)。\n <p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211196832-1a05bf80-5aaa-493f-bba2-27e819c18bb9.gif\" width=\"100%\"/>\n</p>\n\n\n### FastDeployClient\n提供给用户访问fastdeployserver服务的客户端界面，进行一键预测和可视化结果。详细内容可参考[使用VisualDL作为fastdeployserver服务的客户端](./docs/components/fastdeploy_client/README_CN.md)。\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/22424850/211203852-059d5b98-6299-4057-97d8-5209805aa67f.gif\" width=\"100%\"/>\n</p>\n\n\n\n\n### VDL.service\n\nVisualDL可视化结果保存服务，以链接形式将可视化结果保存下来，方便用户快速、便捷的进行托管与分享。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/93729521-72382f00-fbf7-11ea-91ff-6b6ab4b41e32.png\" width=\"85%\"/>\n</p>\n\n\n## 常见问题\n\n在使用VisualDL的过程中可能遇到的一些问题，可参考[常见问题](./docs/faq_CN.md)帮助解决\n\n## 近期活动更新\n\n- 2020.12.22 \n\n  《手拆朋友圈斗图利器—『圣诞写真生成器』》b站直播中奖用户名单请点击[圣诞直播中奖名单](./docs/luckydraw.md)查看~\n\n## 开源贡献\n\nVisualDL 是由 [PaddlePaddle](https://www.paddlepaddle.org/) 和 [ECharts](https://echarts.apache.org/) 合作推出的开源项目。\nGraph 相关功能由 [Netron](https://github.com/lutzroeder/netron) 提供技术支持。\n欢迎所有人使用，提意见以及贡献代码。\n\n\n## 更多细节\n\n想了解更多关于VisualDL可视化功能的使用详情介绍，请查看[**VisualDL使用指南**](./docs/components/README_CN.md)，[**使用VisualDL做性能分析**](./docs/components/profiler/README_CN.md)，[**使用VisualDL进行Serving可视化部署**](./docs/components/fastdeploy_server/README_CN.md)，[**使用VisualDL作为fastdeployserver服务的客户端**](./docs/components/fastdeploy_client/README_CN.md)。\n## 技术交流\n\n欢迎您加入VisualDL官方QQ群：1045783368 与飞桨团队以及其他用户共同针对VisualDL进行讨论与交流。\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/48054808/82522691-c2758680-9b5c-11ea-9aee-fca994aba175.png\" width=\"20%\"/>\n</p>\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.demo.yml",
          "type": "blob",
          "size": 0.177734375,
          "content": "version: '3.8'\nservices:\n  demo:\n    build:\n      context: .\n      dockerfile: Dockerfile.demo\n    ports:\n      - \"8999:8999\"\n    environment:\n      PING_URL: /ping\n      PORT: 8999\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3583984375,
          "content": "version: '3.8'\nservices:\n  backend:\n    build: .\n    expose:\n      - \"8000\"\n    volumes:\n      - \"log:/home/visualdl/log\"\n    command: [\"--api-only\", \"--port=8000\"]\n  frontend:\n    build: ./frontend\n    depends_on:\n      - backend\n    ports:\n      - \"8999:8999\"\n    environment:\n      BACKEND: http://backend:8000\n      HOST: 0.0.0.0\n      PORT: 8999\nvolumes:\n  log:\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.255859375,
          "content": "bce-python-sdk\nflask >= 1.1.1\nFlask-Babel >= 3.0.0\nnumpy\nPillow >= 7.0.0\nprotobuf >= 3.20.0\nrequests\nsix >= 1.14.0\nmatplotlib\npandas\npackaging\nx2paddle >= 1.4.0\npaddle2onnx >= 1.0.5\nrarfile\ngradio == 3.11.0\ntritonclient[all]\npsutil\nonnx >= 1.6.0\nhttpx == 0.24.1\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.583984375,
          "content": "# Copyright (c) 2017 VisualDL Authors. All Rights Reserve.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# =======================================================================\n\nfrom __future__ import absolute_import\n\nimport os\nimport sys\nfrom sys import platform\nfrom distutils.spawn import find_executable\nfrom distutils import log\nimport setuptools.command.build_py\nimport setuptools\nfrom setuptools import setup\nfrom setuptools import find_packages\nfrom visualdl import __version__\nimport subprocess\n\nTOP_DIR = os.path.realpath(os.path.dirname(__file__))\nBUILD_DIR = os.path.join(TOP_DIR, 'build')\n\n\ndef read(name):\n    return open(os.path.join(TOP_DIR, name)).read()\n\n\ndef readlines(name):\n    return read(name).split('\\n')\n\n\nREADME = read('README.md')\nLICENSE = readlines('LICENSE')[0].strip()\nREQUIRED_PACKAGES = read('requirements.txt')\nexecute_requires = ['npm', 'node', 'powershell' if platform == 'win32' else 'bash']\n\nfor exe in execute_requires:\n    if not find_executable(exe):\n        log.error('%s should be installed.', exe)\n        sys.exit(1)\n\n\nclass build_py(setuptools.command.build_py.build_py):\n    def run(self):\n        cmd = ['powershell', '-NoProfile', './scripts/build.ps1'] if platform == 'win32' else ['bash',\n                                                                                               'scripts/build.sh']\n        env = dict(os.environ)\n        subprocess.check_call(cmd, env=env)\n        return setuptools.command.build_py.build_py.run(self)\n\n\ncmdclass = {\n    'build_py': build_py,\n}\n\nsetup(\n    name=\"visualdl\",\n    version=__version__,\n    author=\"PaddlePaddle and Echarts team\",\n    description=\"Visualize Deep Learning\",\n    license=LICENSE,\n    keywords=\"visualization deeplearning\",\n    long_description=README,\n    long_description_content_type='text/markdown',\n    install_requires=REQUIRED_PACKAGES,\n    package_data={\n        'visualdl.server': [('dist' + ('/*' * n)) for n in range(1, 20)],\n        'visualdl.python': ['dog.jpg', 'testing.wav']\n    },\n    packages=find_packages(),\n    cmdclass=cmdclass,\n    entry_points={'console_scripts': ['visualdl=visualdl.server.app:main']})\n"
        },
        {
          "name": "visualdl",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}