{
  "metadata": {
    "timestamp": 1736709490705,
    "page": 1,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "epochjs/epoch",
      "stars": 4968,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": ".stamp*\n/codo-doc/\n/doc/\n/css/\n/js/\n/build/\nnpm-debug.log\nnode_modules/*\n.DS_Store\nsass/.sass-cache\ntest.html\n/_site/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0517578125,
          "content": "language: node_js\nnode_js:\n  - \"4.1.1\"\nsudo: false  \n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.265625,
          "content": "# Epoch Changelog\n\n## 0.8.4 - October 30th, 2015\n### Bug Fixes\n* Fixed bower css path (@ftaiolivista)\n\n## 0.8.3 - October 17th, 2015\n### Enhancements / Features\n* Added `redraw` method for clearing styles on canvas based charts (#196, @woozyking)\n\n## 0.8.2 - October 13th, 2015\n### Enhancements / Features\n* Charts now auto draw on construction (#195)\n\n## 0.8.1 - October 13th, 2015\n### Enhancements / Features\n* Added packagist/composer package manager support (#202)\n\n### Bug Fixes\n* Real-time charts no-longer error when pushing first data point after initialized\n  with empty data layers. (#203)\n\n## 0.8.0 - October 10th, 2015\n### Enhancements / Features\n* Multi-axis support for basic and real-time line plots\n* Added new gulp build-system (for development)\n\n## 0.7.1 - October 4th, 2015\n* Moved minified source to `dist/js` and `dist/css` respectively\n* Added non-minified source to aforementioned directories\n\n## 0.7.0 - October 4th, 2015\n\n### Enhancements / Features\n* New basic chart: Histogram\n* New Feature: Data formatters\n* Chart layers can now be hidden/shown\n\n### Bug Fixes\n* Ticks now working for ordinal scaled bar charts\n* Fixed CSS builds by updating NPM sass-node package\n* Removed versions from minified release files (@RyanNielson)\n* Time based graphs can now have fixed ranges (@willwhitney)\n* NPM Package: epoch-charting (@sompylasar)\n* Right axes now using correct formatters (@Dav1dde)\n* Add 'main' attribute enabling webpack support. (@WRidder)\n* Fixed Bower D3 Dependencies (@loopj)\n* Fixed CSS errors by using `transparent` instead of `none` (@mwsmith2)\n* Fixed bower \"version\" property (@kkirsche)\n\n## 0.6.0 - July 21st, 2014\n\n### Enhancements / Features\n\n* Source code restructure for easier programming\n* Replaced Compass with node-sass\n* Removed put.js from the repository\n* Removed dependency on jQuery\n* Added CSS controlled themes\n  * New \"Dark\" theme for dark backgrounds\n* Registered with bower\n* Added option accessor / mutator to all charts (making them adaptive)\n* Added bubble charts (special case of scatter plots)\n* Added MooTools and Zepto Adapters\n* Added Core Library Unit Testing\n* New `domain` and `range` options for basic charts\n\n### Bug Fixes\n\n* Event `.off` method was completely busted, fixed\n* Swapped terminology for horizontal and vertical bar plots\n* Removed `isVisible` and related rendering hacks (caused all sorts of woe)\n\n\n## 0.5.2 - June 24th, 2014\n\n### Enhancements / Features\n\n* #36 - Fixed the readme to focus on development\n* #54 - Added vertical orientation option to the basic bar chart\n\n## 0.5.1 - June 23rd, 2014\n\n### Bug Fixes\n\n* #52 - Replaced instances of `$` with `jQuery` (ambiguous, otherwise)\n\n## 0.5.0 - June 23rd, 2014\n\n### Enhancements / Features\n\n* #32 - QueryCSS greatly enhanced - now builds a full DOM context when computing styles\n* #42 - Heat map now allows for painting of \"zero\" values via a new `paintZeroValues` option\n* #43 - Heat map color computation abstracted out of `_paintEntry` (makes it easier to extend)\n\n### Bug Fixes\n\n* #22 - Fixed an issue with pie chart transitions\n* #30 - Layers without labels now correctly render on a various basic charts\n* #31 - Real-time Line Chart thickness fixed by taking pixel ratio into account\n* #41 - Fixed bucketing issues with the Heat Map\n* #46 - Removed default black stroke from the Real-Time Area chart\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Fastly, Inc. \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6875,
          "content": "## Epoch\nBy Ryan Sandor Richards\n\n[![Build Status](https://travis-ci.org/epochjs/epoch.svg?branch=master)](https://travis-ci.org/epochjs/epoch)\n[![Dependency Status](https://david-dm.org/epochjs/epoch.svg)](https://david-dm.org/epochjs/epoch)\n[![devDependency Status](https://david-dm.org/epochjs/epoch/dev-status.svg)](https://david-dm.org/epochjs/epoch#info=devDependencies)\n\nEpoch is a general purpose charting library for application developers and visualization designers. It focuses on two different aspects of visualization programming: **basic charts** for creating historical reports, and **real-time charts** for displaying frequently updating timeseries data.\n\nTo get started using Epoch, please refer to the [Epoch Project Site](http://epochjs.github.io/epoch/). There you can find full documentation and guides to help you start using Epoch right away.\n\n### Installation\nEpoch can be easily installed via the following package managers:\n\n* [npm](https://www.npmjs.com/package/epoch-charting)\n* [bower](http://bower.io/search/?q=epoch)\n* [packagist](https://packagist.org/packages/epochjs/epoch)\n\nIf you don't see your favorite package manager in the list above feel free to\n[open up an issue](https://github.com/epochjs/epoch/issues/new) and let us know.\nFinally, you can download any release of the library from the\n[project releases page](https://github.com/epochjs/epoch/releases).\n\n**Important:** Epoch requires [d3](https://github.com/mbostock/d3). In order to\nwork properly your page must load d3 before epoch.\n\n#### Public CDN URLs\nIf you don't want to host the files yourself, you can use\n[jsDelivr](http://www.jsdelivr.com/) to serve the files:\n\n1. Visit [epoch page on jsDelvr](http://www.jsdelivr.com/projects/epoch).\n2. Copy the provided URL's and link to them in your project.\n\n### Developing Epoch\n\nDeveloping Epoch is a reasonably straight forward process. In this section we'll\ncover the basic on how to develop Epoch by detailing common build task, exploring\nhow the source is arranged, and finally show how to use rendering tests to aid\ndevelopment.\n\n#### Configuring Development Environment\n\nEpoch requires the following for development:\n\n1. [Node.js](https://nodejs.org/en/) (v4.1.1+)\n2. [NPM](https://www.npmjs.com/) (v2.1.0+)\n\nOnce both are installed on your machine you will need to run `npm install` from\nthe repository's root directory in order to install the npm packages required\nto develop epoch.\n\nOnce you have installed the required npm packages you can use `gulp build` to\nfully rebuild the source (see more information about gulp tasks below).\n\n\n#### Basic Development Process\n\nThe best way to start contributing to Epoch is to follow these steps:\n\n1. Change to the source directory for the project\n2. Run `gulp watch` to recompile the project after source files change\n3. Make changes in a source file (either in `src/` or `sass/`)\n4. In a web browser open the `test/index.html` and browse the rendering tests\n5. Use the rendering tests to see if your changes had the desired result\n6. Ensure unit tests with pass `npm test`\n\n#### Testing\n\nEpoch uses two types of testing to ensure that changes do not cause unintended\nside effects. The first, unit tests, ensure that the core functional components\nof the library work as expected. The second, rendering tests, allow you to\nensure that charts and graphs are correctly rendered.\n\nIt is important to keep both unit test and rendering tests up-to-date! When\ndeveloping, use the following guidelines:\n\n* When adding new features make sure to add new tests\n* When changing existing functionality, ensure that the appropriate both types\n  of tests still pass\n* If you want to make a new type of chart, add a whole new test suite for that\n  chart!\n\nKeeping the tests current makes it easier for others to review your code and\nspot issues. Also, pull requests without appropriate testing will not be\nmerged.\n\n\n#### Gulp Tasks\n\nEpoch uses [gulp](https://github.com/gulpjs/gulp) to perform various tasks. The\n`gulpfile.js` file defines the following tasks:\n\n* `gulp clean` - Cleans the `dist/` directory.\n* `gulp build` - Builds the CoffeeScript and Sass source into the `dist/`\n  directory.\n* `gulp watch` - Starts a watch script to recompile CoffeeScript and Sass when\n  any files change.\n\n#### Source Structure\n\nThe directory structure for the Epoch project follows some basic guidelines, here's an overview of how it is structured:\n\n```\ndist/                  - Compiled JavaScript and CSS source\nsrc/                   - Main source directory\n  core/                - Core Epoch Library Files\n    util.coffee        - Library Utility Routines\n    d3.coffee          - d3 Extensions\n    format.coffee      - Data formatters\n    chart.coffee       - Base Chart Classes\n    css.coffee         - CSS Querying Engine\n  adapters/            - 3rd Party Library Adapters (currently only jQuery)\n  basic/               - Basic Chart Classes\n  time/                - Real-time Chart Classes\n  adapters.coffee      - Options / Global Classes for Adapter Implementations\n  basic.coffee         - Base Classes for Basic Charts\n  data.coffee          - Data Formatting\n  epoch.coffee         - Main source file, defines name spaces, etc.\n  model.coffee         - Data Model\n  time.coffee          - Base Classes for Real-Time Charts\nsass/                  - Scss source for the default epoch stylesheet\ntests/\n  render/              - Rendering tests\n    basic/             - Basic chart rendering tests\n    real-time/         - Real-time rendering tests\n  unit/                - Unit tests\n```\n\n### Release Checklist\n\n- Run `npm test` and ensure all tests pass\n- Run `npm version [major|minor|patch]`\n- Run `npm publish`\n- Update CHANGELOG.md with the changes since last release\n- Update the `gh-pages` branch's library version in `_config.yml`\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.6689453125,
          "content": "{\n  \"name\": \"epoch\",\n  \"description\": \"A general purpose, real-time visualization library.\",\n  \"main\": [\n    \"dist/js/epoch.min.js\",\n    \"dist/css/epoch.min.css\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"/src\",\n    \"/sass\",\n    \"/tests\",\n    \"/Cakefile\",\n    \"/CHANGELOG.md\",\n    \"/package.json\"\n  ],\n  \"authors\": [\n    \"Ryan Sandor Richards <sandor.richards@gmail.com>\"\n  ],\n  \"keywords\": [\n    \"fastly\",\n    \"realtime\",\n    \"graph\",\n    \"chart\",\n    \"stats\",\n    \"visualization\"\n  ],\n  \"homepage\": \"https://fastly.github.io/epoch/\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/fastly/epoch.git\"\n  },\n  \"dependencies\": {\n    \"d3\": \"^3.4.13\"\n  }\n}\n"
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.37890625,
          "content": "{\n  \"name\": \"epochjs/epoch\",\n  \"description\": \"A general purpose, real-time visualization library.\",\n  \"keywords\": [\n    \"epoch\",\n    \"d3\",\n    \"chart\",\n    \"graph\",\n    \"plot\",\n    \"real-time\"\n  ],\n  \"homepage\": \"https://github.com/epochjs/epoch\",\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Ryan Sandor Richards\"\n    }\n  ],\n  \"require\": {\n    \"mbostock/d3\": \"@stable\"\n  }\n}\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 2.525390625,
          "content": "'use strict';\n\nrequire('coffee-script/register'); // For coffee-script mocha unit tests\n\nvar gulp = require('gulp');\nvar coffee = require('gulp-coffee');\nvar concat = require('gulp-concat');\nvar mocha = require('gulp-mocha');\nvar order = require('gulp-order');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar uglify = require('gulp-uglify');\nvar gutil = require('gulp-util');\nvar del = require('del');\nvar exec = require('child_process').exec;\n\n/**\n * Common directories used by tasks below.\n * @type {object}\n */\nvar path = {\n  source: {\n    coffee: 'src/',\n    sass: 'sass/'\n  },\n  dist: {\n    js: 'dist/js/',\n    css: 'dist/css/'\n  },\n  test: {\n    unit: 'tests/unit/'\n  },\n  doc: 'doc/'\n};\n\n/**\n * The default task simply calls the master 'build' task.\n */\ngulp.task('default', ['build']);\n\n/**\n * Builds the distribution files by packaging the compiled javascript source\n * into the `dist/js/` directory and building the css into the `dist/css`\n * directory\n */\ngulp.task('build', ['sass', 'sass-minify'], function () {\n  gulp.src(path.source.coffee + '**/*.coffee')\n    .pipe(coffee({bare: true}).on('error', gutil.log))\n    .pipe(order([\n      'epoch.js',\n      'core/context.js',\n      'core/util.js',\n      'core/d3.js',\n      'core/format.js',\n      'core/chart.js',\n      'core/css.js',\n      'data.js',\n      'model.js',\n      'basic.js',\n      'basic/*.js',\n      'time.js',\n      'time/*.js',\n      'adapters.js',\n      'adapters/*.js'\n    ]))\n    .pipe(concat('epoch.js'))\n    .pipe(gulp.dest(path.dist.js))\n    .pipe(uglify().on('error', gutil.log))\n    .pipe(rename('epoch.min.js'))\n    .pipe(gulp.dest(path.dist.js));\n});\n\n/**\n * Generates epoch CSS from Sass source.\n */\ngulp.task('sass', function () {\n  gulp.src(path.source.sass + 'epoch.scss')\n    .pipe(sass({ outputStyle: 'compact' }))\n    .pipe(rename('epoch.css'))\n    .pipe(gulp.dest(path.dist.css));\n});\n\n/**\n * Generates the minified version of the epoch css from sass source.\n */\ngulp.task('sass-minify', function () {\n  gulp.src(path.source.sass + 'epoch.scss')\n    .pipe(sass({ outputStyle: 'compressed' }))\n    .pipe(rename('epoch.min.css'))\n    .pipe(gulp.dest(path.dist.css));\n});\n\n/**\n * Watch script for recompiling JavaScript and CSS\n */\ngulp.task('watch', function () {\n  gulp.watch(path.source.coffee + '**/*.coffee', ['build']);\n  gulp.watch(path.source.sass + '**/*.scss', ['sass', 'sass-minify']);\n});\n\n/**\n * Cleans all build and distribution files.\n */\ngulp.task('clean', function (cb) {\n  del([ path.dist.js, path.dist.css]).then(function () {\n    cb();\n  });\n});\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.451171875,
          "content": "{\n  \"name\": \"epoch-charting\",\n  \"version\": \"0.8.4\",\n  \"description\": \"A general purpose real-time charting library for building beautiful, smooth, and high performance visualizations.\",\n  \"keywords\": [\n    \"chart\",\n    \"charting\",\n    \"visualization\",\n    \"svg\",\n    \"animation\",\n    \"canvas\",\n    \"d3\"\n  ],\n  \"homepage\": \"http://fastly.github.io/epoch/\",\n  \"author\": {\n    \"name\": \"rsandor\",\n    \"url\": \"https://github.com/rsandor\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/fastly/epoch.git\"\n  },\n  \"main\": \"dist/js/epoch.js\",\n  \"dependencies\": {\n    \"d3\": \"^3.4.13\"\n  },\n  \"devDependencies\": {\n    \"chai\": \"^3.3.0\",\n    \"codo\": \"^2.0.11\",\n    \"coffee-script\": \"^1.10.0\",\n    \"del\": \"^2.0.2\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-coffee\": \"^2.3.1\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-mocha\": \"^2.1.3\",\n    \"gulp-order\": \"^1.1.1\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sass\": \"^2.0.4\",\n    \"gulp-uglify\": \"^1.4.1\",\n    \"gulp-util\": \"^3.0.6\",\n    \"jsdom\": \"^7.0.2\",\n    \"mocha\": \"^2.3.3\",\n    \"node-minify\": \"^1.2.1\",\n    \"node-sass\": \"^3.3.3\",\n    \"sinon\": \"^1.17.1\",\n    \"xmlhttprequest\": \"^1.7.0\"\n  },\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"unit\": \"mocha --recursive --compilers coffee:coffee-script/register tests/unit/\",\n    \"test\": \"npm run build && npm run unit\",\n    \"codo\": \"./node_modules/.bin/codo --quiet --private --name Epoch --readme README.md --title 'Epoch Documentation' --output codo-doc src - LICENSE\"\n  }\n}\n"
        },
        {
          "name": "sass",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}