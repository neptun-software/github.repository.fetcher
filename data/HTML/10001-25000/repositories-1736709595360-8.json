{
  "metadata": {
    "timestamp": 1736709595360,
    "page": 8,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SwiftGGTeam/the-swift-programming-language-in-chinese",
      "stars": 21087,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitbook.yaml",
          "type": "blob",
          "size": 0.0712890625,
          "content": "root: ./source/\n\nstructure:\n  readme: ../README.md\n  summary: SUMMARY.md\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": ".DS_Store\nnode_modules\npackage-lock.json\n**/.docc-build\ndocs\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2880859375,
          "content": "# The Swift Programming Language (Simplified Chinese Version by SwiftGG)\n\n[English Version](#english-version) | [中文版本](#中文版本)\n\n## English Version\n\nThis repository contains the source for *The Swift Programming Language*\n(sometimes abbreviated as TSPL),\nwhich is published on [docs.swift.org][published]\nand built using [Swift-DocC][docc].\n\nThis repository includes the latest version of TSPL, as well as Simplified Chinese translations corresponding to different Swift versions.\n\n## Building\n\nClone this repository and run `docc preview swift-6.docc`\nin this repository's root directory.\n\nAfter running DocC, open the link that `docc` outputs\nto display a local preview in your browser.\n\n## Current Status\n\n- Latest English version of The Swift Programming Language. [Latest commit: 11a2b29][11a2b29]\n- Corresponding Simplified Chinese translations (in progress and archived):\n  - Swift 6 beta (currently in translation)\n  - Swift 5.x and earlier versions (available for reading on [GitBook][legacy-documentations])\n\n## How to Contribute\n\n1. Fork this repository to your account. Claim a translation task labeled as `Swift x translation` in the issues. Create a branch in your forked repository corresponding to the issue, setting the source branch to the current Swift version being translated (e.g., swift-6-beta-translation).\n\n2. Install the `docc` command-line tool by either downloading the toolchain from Swift.org or installing Xcode.\n\n> Note:\n>\n> If you installed DocC by downloading a toolchain from Swift.org,\n> `docc` is located in `usr/bin/`,\n> relative to the installation path of the toolchain.\n> Make sure your shell's `PATH` environment variable\n> includes that directory.\n>\n> If you installed DocC by downloading Xcode,\n> run `xcrun docc preview swift-6.docc` instead.\n\n3. Replace the content of the original Markdown file with your Chinese translation, following the terminology table below and the [SwiftGG style guide][swiftgg-style-guide]. Submit your translation through a Pull Request. Once verified by SwiftGG members, it will be merged into the current translation branch.\n\n## Contributors\n\nWe extend our heartfelt thanks to all our contributors. You can find the [list of contributors here][contributors].\n\n## 中文版本\n\n本仓库包含 *The Swift Programming Language* (缩写为 TSPL) 的源代码，\n该文档发布在 [docs.swift.org][published] 上，\n并使用 [Swift-DocC][docc] 构建。\n\n本仓库包括 TSPL 的最新版本，以及对应不同 Swift 版本的简体中文翻译。\n\n## 构建\n\n克隆此仓库并在仓库根目录运行 `docc preview swift-6.docc`。\n\n运行 DocC 后，打开 `docc` 输出的链接，即可在浏览器中显示本地预览。\n\n## 当前状态\n\n- The Swift Programming Language 的最新英文版本。[最新提交: fe0121d][https://github.com/swiftlang/swift-book/commit/fe0121d1f2d86d6139c2b424d45a7889b82ff5e2] \n- 对应的简体中文翻译 (进行中和已归档)：\n  - Swift 6 beta (当前正在翻译)\n  - Swift 5.x 及更早版本 (可在 [GitBook][legacy-documentations] 上阅读)\n\n## 如何贡献\n\n1. 首先，将此仓库 fork 到您的账户。在 issues 中认领标记为 `Swift x translation` 的翻译任务。在您 fork 的仓库中创建与 issue 对应的分支，将源分支设置为当前正在翻译的 Swift 版本 (例如，swift-6-beta-translation)。\n\n2. 通过从 Swift.org 下载 toolchain 或安装 Xcode 来安装 `docc` 命令行工具。\n\n> 注意：\n>\n> 如果您通过从 Swift.org 下载 toolchain 安装了 DocC，\n> `docc` 位于 toolchain 安装路径下的 `usr/bin/` 目录中。\n> 确保您的 shell 的 `PATH` 环境变量包含该目录。\n>\n> 如果您通过下载 Xcode 安装了 DocC，\n> 请运行 `xcrun docc preview swift-6.docc`。\n\n3. 按照下面的术语表和 [SwiftGG 排版指南][swiftgg-style-guide] 将原始 Markdown 文件的内容替换为您的中文翻译。通过 Pull Request 提交您的翻译。经 SwiftGG 成员验证后，将合并到当前的翻译分支。\n\n## 参与成员\n\n我们衷心感谢所有的参与成员。您可以在[这里][contributors]找到参与成员列表。\n\n## Terminology Table（术语表）\n\n| Term | Suggest Transition |\n| --- | --- |\n| alias | 别名 |\n| array | 数组 |\n| argument | 实参 |\n| assertion | 断言 |\n| associated type | 关联类型 |\n| associated value | 关联值 |\n| attribute | 特性或者属性，根据上下文 |\n| automatic reference counting | 自动引用计数 |\n| availability-condition | 可用性条件 |\n| base class | 基类 |\n| binary operator | 二元运算符 |\n| boxed protocol type | 封装协议类型 |\n| branch statement | 分支语句 |\n| Class Hierarchy | 类层次结构 |\n| closure | 闭包 |\n| collection | 集合 |\n| computed property | 计算属性 |\n| conditional compilation | 条件编译 |\n| conform protocol | 遵循协议 |\n| control transfer statement | 控制传递语句 |\n| convenience initializer | 便利构造器 |\n| convention | 约定 |\n| decompose | 分解 |\n| deinitialization | 析构过程 |\n| deinitializer | 析构器 |\n| designated initializer | 指定构造器 |\n| dictionary | 字典 |\n| downcast | 向下转型 |\n| enumeration | 枚举 |\n| expression | 表达式 |\n| extension | 扩展 |\n| fallback (value) | 后备值 ?? 回退值 |\n| fallthrough | 贯穿 |\n| first-class | 一等 |\n| function | 函数 |\n| generic | 泛型 |\n| getter | 不翻译 |\n| implicitly unwrapped optional | 隐式解包可选值 |\n| inheritance | 继承 |\n| initialization | 构造过程 |\n| initializer | 构造器 |\n| iterate | 迭代 |\n| labeled statement | 具名语句 |\n| list | 列表 |\n| literal (value) | 字面量 |\n| metatype type | 元类型 |\n| method | 方法 |\n| nest | 嵌套 |\n| nil-coalescing | 不译 |\n| note | 注意 |\n| opaque type | 不透明类型 |\n| operator | 运算符 |\n| optional | 可选 |\n| optional binding | 可选绑定 |\n| optional chaining | 可选链 |\n| override | 重写 |\n| parameter | 形参 |\n| playground | 不翻译 |\n| projected value | 被呈现值 |\n| property | 属性 |\n| property wrapper | 属性包装器 |\n| protocol | 协议 |\n| protocol composition type | 复合协议类型 |\n| result builder | 结果构造器 |\n| range | 区间 |\n| raw value | 原始值 |\n| runtime | 运行时 |\n| scope | 作用域 |\n| setter | 不翻译 |\n| statement | 语句 |\n| stored property | 存储属性 |\n| string interpolation | 字符串插值 |\n| structure | 结构体 |\n| subscript | 下标 |\n| ternary operator | 三元运算符 |\n| tuple | 元组 |\n| type alias | 类型别名 |\n| type annotation | 类型注解 |\n| type identifier | 类型标识符 |\n| type property | 类型属性 |\n| type inference | 类型推断 |\n| type casting | 类型转换 |\n| unary operator | 一元运算符 |\n| unwrapped | 解包 |\n| variadic parameters| 可变参数 |\n| wrapped | 包装 |\n| wrapped value | 被包装值 |\n| superclass | 父类 |\n| subclass | 子类 |\n\n[published]: https://docs.swift.org/swift-book/documentation/the-swift-programming-language/\n[docc]: https://github.com/apple/swift-docc\n[11a2b29]: https://github.com/swiftlang/swift-book/commit/11a2b29983e9401c179d6269c9becc1256b11bc6\n[legacy-documentations]: https://swiftgg.gitbook.io/swift/\n[swiftgg-style-guide]: https://github.com/SwiftGGTeam/translation/blob/master/SwiftGG%20排版指南.md\n[contributors]: https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese/blob/gh-pages/source/contributors.md\n"
        },
        {
          "name": "TSPL.docc",
          "type": "tree",
          "content": null
        },
        {
          "name": "add_issue.js",
          "type": "blob",
          "size": 4.5302734375,
          "content": "const axios = require('axios');\nconst fs = require('fs').promises;\n\n// GitHub API 配置\nconst API_URL = \"https://api.github.com\";\nconst REPO_OWNER = \"SwiftGGTeam\";\nconst REPO_NAME = \"the-swift-programming-language-in-chinese\";\nconst BRANCH = \"swift-6-beta-translation\";\n\n// 您的个人访问令牌\nconst TOKEN = process.env.GITHUB_TOKEN;\n\n// 设置请求头\nconst headers = {\n    \"Authorization\": `token ${TOKEN}`,\n    \"Accept\": \"application/vnd.github.v3+json\"\n};\n\nasync function getExistingIssues() {\n    const issues = new Set();\n    let page = 1;\n    while (true) {\n        const url = `${API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/issues?state=all&per_page=100&page=${page}`;\n        const response = await axios.get(url, { headers });\n        if (response.data.length === 0) break;\n        response.data.forEach(issue => issues.add(issue.title));\n        page++;\n    }\n    return issues;\n}\n\nasync function createIssue(title, body, labels) {\n    try {\n        const url = `${API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/issues`;\n        const data = { title, body, labels };\n        const response = await axios.post(url, data, { headers });\n\n        if (response.status === 201) {\n            console.log(`Issue created successfully: ${title}`);\n            return response.data;\n        } else {\n            console.log(`Failed to create issue: ${response.status}`);\n            console.log(response.data);\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error creating issue:\", error.message);\n        return null;\n    }\n}\n\nasync function getFilesInDirectory(path) {\n    try {\n        const url = `${API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/contents/${path}?ref=${BRANCH}`;\n        const response = await axios.get(url, { headers });\n        if (response.status === 200) {\n            return response.data.filter(item => item.type === \"file\" && item.name.endsWith('.md'));\n        } else {\n            console.log(`Failed to get directory contents: ${response.status}`);\n            return [];\n        }\n    } catch (error) {\n        console.error(\"Error getting directory contents:\", error.message);\n        return [];\n    }\n}\n\nfunction formatIssueTitle(filePath, estimatedTime) {\n    const parts = filePath.split('/');\n    const fileName = parts.pop().toLowerCase();\n    const folderName = parts[parts.length - 1];\n\n    // Convert camelCase or PascalCase to kebab-case\n    const kebabFileName = fileName\n        .replace(/([a-z0-9])([A-Z])/g, '$1-$2')\n        .replace(/([A-Z])([A-Z][a-z])/g, '$1-$2')\n        .toLowerCase();\n\n    return `${folderName} / ${kebabFileName} ${estimatedTime}`;\n}\n\nfunction formatIssueBody(filePath) {\n    const fileUrl = `https://github.com/${REPO_OWNER}/${REPO_NAME}/blob/${BRANCH}/${filePath}`;\n    return `翻译文件：${fileUrl}\\n请在认领任务前查看 Markdown 文件内容，并了解对应的 Swift 原文档链接和翻译预估时长`;\n}\n\nasync function getFileContent(filePath) {\n    try {\n        const url = `${API_URL}/repos/${REPO_OWNER}/${REPO_NAME}/contents/${filePath}?ref=${BRANCH}`;\n        const response = await axios.get(url, { headers });\n        if (response.status === 200) {\n            return Buffer.from(response.data.content, 'base64').toString('utf-8');\n        }\n    } catch (error) {\n        console.error(`Error getting file content: ${error.message}`);\n    }\n    return null;\n}\n\nfunction extractEstimatedTime(content) {\n    const match = content.match(/翻译估计用时：(.*)/);\n    return match ? match[1].trim() : '';\n}\n\nasync function processDirectory(path, existingIssues) {\n    const files = await getFilesInDirectory(path);\n    for (const file of files) {\n        const content = await getFileContent(file.path);\n        if (content) {\n            const estimatedTime = extractEstimatedTime(content);\n            const issueTitle = formatIssueTitle(file.path, estimatedTime);\n            if (!existingIssues.has(issueTitle)) {\n                const issueBody = formatIssueBody(file.path);\n                await createIssue(issueTitle, issueBody, [\"Swift 6 beta translation\"]);\n            } else {\n                console.log(`Issue already exists: ${issueTitle}`);\n            }\n        }\n    }\n}\n\nasync function main() {\n    const existingIssues = await getExistingIssues();\n    console.log(`Found ${existingIssues.size} existing issues.`);\n\n    const directories = [\n        \"swift-6.docc/GuidedTour\",\n        \"swift-6.docc/LanguageGuide\",\n        \"swift-6.docc/ReferenceManual\"\n    ];\n\n    for (const dir of directories) {\n        await processDirectory(dir, existingIssues);\n    }\n}\n\nmain().catch(console.error);\n"
        },
        {
          "name": "add_metadata.js",
          "type": "blob",
          "size": 2.880859375,
          "content": "const fs = require('fs');\nconst path = require('path');\n\n// 假设 JSON 数据已经保存在一个文件中\nconst jsonData = require('./swift_docs_structure.json');\n\n// 根目录路径\nconst rootDir = './swift-6.docc';\n\n// GitHub 仓库的基础 URL\nconst githubBaseUrl = 'https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese/blob/swift-6-beta-translation/swift-6.docc';\n\n// 递归遍历目录\nfunction traverseDirectory(dir) {\n    const files = fs.readdirSync(dir);\n\n    files.forEach(file => {\n        const fullPath = path.join(dir, file);\n        const stat = fs.statSync(fullPath);\n\n        if (stat.isDirectory()) {\n            traverseDirectory(fullPath);\n        } else if (path.extname(file) === '.md') {\n            processMarkdownFile(fullPath);\n        }\n    });\n}\n\n// 计算翻译估计用时\nfunction calculateTranslationTime(content) {\n    const wordCount = content.split(/\\s+/).length;\n    const hours = Math.ceil(wordCount / 500); // 假设平均翻译速度为每小时500词\n\n    if (hours <= 1) return '⭐️';\n    if (hours <= 2) return '⭐️⭐️';\n    if (hours <= 4) return '⭐️⭐️⭐️';\n    if (hours <= 6) return '⭐️⭐️⭐️⭐️';\n    return '⭐️⭐️⭐️⭐️⭐️';\n}\n\n// 处理 Markdown 文件\nfunction processMarkdownFile(filePath) {\n    const relativePath = path.relative(rootDir, filePath);\n    const fileName = path.basename(filePath, '.md');\n\n    // 查找匹配的 URL\n    let matchingUrl = null;\n    for (const section in jsonData) {\n        const match = jsonData[section].find(item => {\n            const urlParts = item.url.split('/');\n            const lastPart = urlParts[urlParts.length - 1].toLowerCase();\n            return lastPart === fileName.toLowerCase() ||\n                lastPart === fileName.toLowerCase().replace(/[^a-z0-9]/g, '');\n        });\n        if (match) {\n            matchingUrl = match.url;\n            break;\n        }\n    }\n\n    if (matchingUrl) {\n        let content = fs.readFileSync(filePath, 'utf8');\n        const translationTime = calculateTranslationTime(content);\n\n        const newComment = `<!--\n要翻译的文件：${githubBaseUrl}/${relativePath.replace(/\\\\/g, '/')}\nSwift 文档源文件地址：${matchingUrl}\n翻译估计用时：${translationTime}\n-->`;\n\n        // 检查文件是否已经包含了注释\n        const commentRegex = /<!--[\\s\\S]*?-->/;\n        if (commentRegex.test(content)) {\n            // 更新已存在的注释\n            content = content.replace(commentRegex, newComment);\n            console.log(`Updated existing comment: ${filePath}`);\n        } else {\n            // 添加新的注释\n            content = `${newComment}\\n\\n${content}`;\n            console.log(`Added new comment: ${filePath}`);\n        }\n\n        fs.writeFileSync(filePath, content);\n    } else {\n        console.log(`No matching URL found for: ${filePath}`);\n    }\n}\n\n// 开始处理\ntraverseDirectory(rootDir);\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 1.0205078125,
          "content": "# 贡献参考流程\n\n有些朋友可能不太清楚如何帮忙翻译，我这里写一个简单的流程，大家可以参考一下：\n\n1. 首先fork我的项目\n2. 把fork过去的项目也就是你的项目clone到你的本地\n3. 在命令行运行 `git branch develop` 来创建一个新分支\n4. 运行 `git checkout develop` 来切换到新分支\n5. 运行 `git remote add upstream https://github.com/numbbbbb/the-swift-programming-language-in-chinese.git` 把我的库添加为远端库\n6. 运行 `git remote update`更新\n7. 运行 `git fetch upstream gh-pages` 拉取我的库的更新到本地\n8. 运行 `git rebase upstream/gh-pages` 将我的更新合并到你的分支\n\n这是一个初始化流程，只需要做一遍就行，之后请一直在develop分支进行修改。\n\n如果修改过程中我的库有了更新，请重复6、7、8步。\n\n修改之后，首先push到你的库，然后登录GitHub，在你的库的首页可以看到一个 `pull request` 按钮，点击它，填写一些说明信息，然后提交即可。"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.205078125,
          "content": "<!DOCTYPE HTML>\n<html lang=\"en-US\" manifest=\"./manifest.appcache\">\n    <head>\n        <meta http-equiv=\"refresh\" content=\"0; url=https://swiftgg.gitbook.io/swift/\" />\n    </head>\n    <body>\n    </body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.44140625,
          "content": "{\n  \"name\": \"the-swift-programming-language-in-chinese\",\n  \"version\": \"1.0.0\",\n  \"description\": \"《The Swift Programming Language》in Chinese =============================================\",\n  \"main\": \"add_issue.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"axios\": \"^1.7.3\"\n  },\n  \"devDependencies\": {\n    \"wrangler\": \"^3.91.0\"\n  }\n}\n"
        },
        {
          "name": "swift-6.docc",
          "type": "tree",
          "content": null
        },
        {
          "name": "swift_docs_structure.json",
          "type": "blob",
          "size": 5.9853515625,
          "content": "{\n\t\"Welcome to Swift\": [\n\t\t{\n\t\t\t\"title\": \"About Swift\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/aboutswift\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Version Compatibility\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/compatibility\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"A Swift Tour\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/guidedtour\"\n\t\t}\n\t],\n\t\"Language Guide\": [\n\t\t{\n\t\t\t\"title\": \"The Basics\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/thebasics\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Basic Operators\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/basicoperators\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Strings and Characters\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/stringsandcharacters\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Collection Types\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/collectiontypes\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Control Flow\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/controlflow\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Functions\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/functions\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Closures\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/closures\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Enumerations\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/enumerations\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Structures and Classes\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/classesandstructures\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Properties\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/properties\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Methods\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/methods\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Subscripts\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/subscripts\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Inheritance\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/inheritance\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Initialization\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/initialization\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Deinitialization\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/deinitialization\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Optional Chaining\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/optionalchaining\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Error Handling\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/errorhandling\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Concurrency\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/concurrency\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Macros\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/macros\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Type Casting\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/typecasting\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Nested Types\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/nestedtypes\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Extensions\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/extensions\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Protocols\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/protocols\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Generics\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/generics\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Opaque and Boxed Protocol Types\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/opaquetypes\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Automatic Reference Counting\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/automaticreferencecounting\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Memory Safety\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/memorysafety\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Access Control\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/accesscontrol\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Advanced Operators\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/advancedoperators\"\n\t\t}\n\t],\n\t\"Language Reference\": [\n\t\t{\n\t\t\t\"title\": \"About the Language Reference\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/aboutthelanguagereference\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Lexical Structure\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/lexicalstructure\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Types\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/types\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Expressions\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/expressions\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Statements\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/statements\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Declarations\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/declarations\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Attributes\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/attributes\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Patterns\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/patterns\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Generic Parameters and Arguments\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/genericparametersandarguments\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Summary of the Grammar\",\n\t\t\t\"url\": \"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/summaryofthegrammar\"\n\t\t}\n\t]\n}\n"
        }
      ]
    }
  ]
}