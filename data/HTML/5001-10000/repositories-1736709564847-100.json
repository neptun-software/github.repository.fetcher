{
  "metadata": {
    "timestamp": 1736709564847,
    "page": 100,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "russellsamora/scrollama",
      "stars": 5821,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0390625,
          "content": ".DS_Store\nnode_modules\npackage-lock.json"
        },
        {
          "name": ".npm-ignore",
          "type": "blob",
          "size": 0.0673828125,
          "content": "dev/\ndocs/\nbuild/scrollama.js\nrollup.config.*\n.gitignore\n.travis.yml\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2022 Russell Samora\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.369140625,
          "content": "<img src=\"https://russellsamora.github.io/scrollama/logo.png\" width=\"160\" alt=\"scrollama.js\"/>\n\n**Scrollama** is a modern & lightweight JavaScript library for scrollytelling\nusing\n[IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\nin favor of scroll events. *Current version: 3.2.0*\n\n## 3.0\n#### Why 3.0?\nThe core parts of the Scrollama code base are being refactored for 3.0 to simplfy and clarify the logic. The goal behind this to ease make future maintainance, bug fixing, and feature additions easier moving forward.\n\n#### New Fetaures\n* Built-in resize using resize observers.\n* Custom offsets on steps with data attributes\n\n#### Deprecated Features\n* the `order` option\n\n## Important Changes\n- **Version 3.0.0+**: `order` has been deprecated.\n- **Version 2.0.0+**: `.onContainerEnter` and `.onContainerExit` have been deprecated in favor of CSS property `position: sticky;`. [How to use position sticky.](https://pudding.cool/process/scrollytelling-sticky/)\n- **Version 1.4.0+**: you must manually add the IntersectionObserver polyfill for cross-browser support. See [installation](https://github.com/russellsamora/scrollama#installation) for details.\n\n[Jump to examples.](https://github.com/russellsamora/scrollama#examples)\n\n## Why?\n\nScrollytelling can be complicated to implement and difficult to make performant.\nThe goal of this library is to provide a simple interface for creating\nscroll-driven interactives. Scrollama is focused on performance by using\n[IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\nto handle element position detection.\n\n[![scrollytelling pattern](https://thumbs.gfycat.com/FearfulHotArabianoryx-size_restricted.gif)](https://pudding.cool/process/how-to-implement-scrollytelling)\n\n## Examples\n\n_Note: most of these examples use D3 to keep the code concise, but this can be used\nwith any library, or with no library at all._\n\n- [Basic](https://russellsamora.github.io/scrollama/basic) - just step\n  triggers\n- [Progress](https://russellsamora.github.io/scrollama/progress) -\n  incremental step progress callback\n- [Sticky Graphic (Side by Side)](https://russellsamora.github.io/scrollama/sticky-side) -\n  using CSS `position: sticky;` to create a fixed graphic to the side of the text.\n- [Sticky Graphic (Overlay)](https://russellsamora.github.io/scrollama/sticky-overlay) -\n  using CSS `position: sticky;` to create a fixed graphic with fullscreen graphic with text overlayed.\n- [Custom Offset](https://russellsamora.github.io/scrollama/custom-offset) -\n  Adding a data attribute to an element to provide a unique offset for a step.\n- [Mobile Pattern](https://russellsamora.github.io/scrollama/mobile-pattern) -\n  using pixels instead of percent for offset value so it doesn't jump around on scroll direction change\n- [iframe Embed](https://russellsamora.github.io/scrollama/iframe) -\n  Embedding a Scrollama instance inside an iframe using `root` option\n\n## Installation\n**Note: As of version 1.4.0, the IntersectionObserver polyfill has been removed from the build. You must include it yourself for cross-browser support.** Check [here](https://caniuse.com/#feat=intersectionobserver) to see if you need to include the polyfill.\n\nOld school (exposes the `scrollama` global):\n\n```html\n<script src=\"https://unpkg.com/scrollama\"></script>\n```\n\nNew school:\n\n```sh\nnpm install scrollama intersection-observer --save\n```\n\nAnd then import/require it:\n\n```js\nimport scrollama from \"scrollama\"; // or...\nconst scrollama = require(\"scrollama\");\n```\n\n## How to use\n\n#### Basic\n\nYou can use this library to simply trigger steps, similar to something like\n[Waypoints](http://imakewebthings.com/waypoints/). This is useful if you need\nmore control over your interactive, or you don't want to follow the sticky\nscrollytelling pattern.\n\nYou can use any id/class naming conventions you want. The HTML structure should\nlook like:\n\n```html\n<!--you don't need the \"data-step\" attr, but can be useful for storing instructions for JS -->\n<div class=\"step\" data-step=\"a\"></div>\n<div class=\"step\" data-step=\"b\"></div>\n<div class=\"step\" data-step=\"c\"></div>\n```\n\n```js\n// instantiate the scrollama\nconst scroller = scrollama();\n\n// setup the instance, pass callback functions\nscroller\n  .setup({\n    step: \".step\",\n  })\n  .onStepEnter((response) => {\n    // { element, index, direction }\n  })\n  .onStepExit((response) => {\n    // { element, index, direction }\n  });\n```\n\n## API\n\n#### scrollama.setup([options])\n\n_options:_\n\n| Option  | Type | Description | Default |\n| --- | --- | --- | --- |\n| step | string or HTMLElement[] | **required**  Selector (or array of elements) for the step elements that will trigger changes. |\n| offset | number (0 - 1, or string with \"px\") | How far from the top of the viewport to trigger a step. | 0.5 |\n| progress | boolean | Whether to fire incremental step progress updates or not. | false |\n| threshold | number (1 or higher) | The granularity of the progress interval in pixels (smaller = more granular). | 4 |\n| once | boolean | Only trigger the step to enter once then remove listener. | false || \n| debug | boolean | Whether to show visual debugging tools or not. | false |\n| parent | HTMLElement[] | Parent element for step selector (use if you steps are in shadow DOM). | undefined |\n| container | HTMLElement | Parent element for the scroll story (use if scrollama is nested in a HTML element with overflow set to `scroll` or `auto`) | undefined |\n| root | HTMLElement | The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if null. See more details about usage of root on [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#intersection_observer_concepts_and_usage). | undefined |\n\n#### scrollama.onStepEnter(callback)\n\nCallback that fires when the top or bottom edge of a step element enters the\noffset threshold.\n\nThe argument of the callback is an object: `{ element: DOMElement, index: number, direction: string }`\n\n`element`: The step element that triggered\n\n`index`: The index of the step of all steps\n\n`direction`: 'up' or 'down'\n\n#### scrollama.onStepExit(callback)\n\nCallback that fires when the top or bottom edge of a step element exits the\noffset threshold.\n\nThe argument of the callback is an object: `{ element: DOMElement, index: number, direction: string }`\n\n`element`: The step element that triggered\n\n`index`: The index of the step of all steps\n\n`direction`: 'up' or 'down'\n\n#### scrollama.onStepProgress(callback)\n\nCallback that fires the progress (0 - 1) a step has made through the threshold.\n\nThe argument of the callback is an object: `{ element: DOMElement, index: number, progress: number }`\n\n`element`: The step element that triggered\n\n`index`: The index of the step of all steps\n\n`progress`: The percent of completion of the step (0 - 1)\n\n`direction`: 'up' or 'down'\n\n#### scrollama.offsetTrigger([number or string])\n\nGet or set the offset percentage. Value must be between 0-1 (where 0 = top of viewport, 1 = bottom), or a string that includes \"px\" (e.g., \"200px\"). If set, returns the scrollama instance.\n\n#### scrollama.resize()\n\n**This is no longer necessary with the addition of a built-in resize observer**. Tell scrollama to get latest dimensions the browser/DOM. It is best practice to\nthrottle resize in your code, update the DOM elements, then call this function\nat the end.\n\n#### scrollama.enable()\n\nTell scrollama to resume observing for trigger changes. Only necessary to call\nif you have previously disabled.\n\n#### scrollama.disable()\n\nTell scrollama to stop observing for trigger changes.\n\n#### scrollama.destroy()\n\nRemoves all observers and callback functions.\n\n#### custom offset\n\nTo override the offset passed in the options, set a custom offset for an individual element using data attributes. For example: `<div class=\"step\" data-offset=\"0.25\">` or `data-offset=\"100px\"`.\n\n## Scrollama In The Wild\n* [The Billionaire Playbook - ProPublica](https://www.propublica.org/article/the-billionaire-playbook-how-sports-owners-use-their-teams-to-avoid-millions-in-taxes)\n* [Women's Pockets are Inferior - The Pudding](https://pudding.cool/2018/08/pockets/)\n* [Trump approval rating - Politico](https://www.politico.com/interactives/2019/trump-approval-rating-polls/)\n* [How the opioid epidemic evolved - Washington Post](https://www.washingtonpost.com/graphics/2019/investigations/opioid-pills-overdose-analysis/)\n* [US Covid-19 deaths, explained in 8 charts and maps - Vox](https://www.vox.com/22252693/covid-19-deaths-us-who-died)\n* [Life After Death on Wikipedia - The Pudding](https://pudding.cool/2018/08/wiki-death/)\n* [YouTube With Me - YouTube](https://youtube.com/trends/articles/with-me-interactive/)\n* [Unchecked Power - ProPublica](https://projects.propublica.org/nypd-unchecked-power/) \n* [Trump's environmental policies rule only part of America - Politico](https://www.politico.com/interactives/2018/trump-environmental-policies-rollbacks/)\n* [The story of New Zealand’s Covid-19 lockdown, in graphs - Stuff](https://interactives.stuff.co.nz/2020/05/coronavirus-covid-19-data-new-zealand/)\n* [Trump and Biden's Paths to Victory in the 2020 Election - Wall Street Journal](https://www.wsj.com/graphics/the-paths-to-victory/)\n* [The sicence of superspreading - Science](https://vis.sciencemag.org/covid-clusters/)\n* [El dominio histórico de la derecha en Madrid - elDiario.es](https://www.eldiario.es/madrid/gana-derecha-elecciones-madrid-mayoritaria-30-rico_1_7347696.html)\n* [The Permutation Test - Jared Wilber](https://www.jwilber.me/permutationtest/)\n* [Constellations - Nadieh Bremer](https://nbremer.github.io/planet-constellations/)\n* [Remote Triggering of Earthquakes - Will Chase](https://www.williamrchase.com/vizrisk/vizrisk_main/)\n* [Scrollytelling - Mapbox](https://demos.mapbox.com/scrollytelling/)\n\n## Tips\n- Avoid using `viewport height` (vh) in your CSS because scrolling up and down constantly triggers vh to change, which will also trigger a window resize.\n\n## Alternatives\n- [Scroll Trigger](https://greensock.com/scrolltrigger/)\n- [Waypoints](http://imakewebthings.com/waypoints/)\n- [ScrollMagic](http://scrollmagic.io/)\n- [graph-scroll.js](https://1wheel.github.io/graph-scroll/)\n- [ScrollStory](https://sjwilliams.github.io/scrollstory/)\n- [enter-view](https://github.com/russellsamora/enter-view)\n\n## Logo\n\nLogo by the awesome [Elaina Natario](https://twitter.com/elainanatario)\n\n## License\n\nMIT License\n\nCopyright (c) 2022 Russell Samora\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.d.ts",
          "type": "blob",
          "size": 1.291015625,
          "content": "export = scrollama;\ndeclare function scrollama(): scrollama.ScrollamaInstance;\n\ndeclare namespace scrollama {\n\n  export type DecimalType = 0 | 0.1 | 0.2 | 0.3 | 0.4 | 0.5 | 0.6 | 0.7 | 0.8 | 0.9 | 1;\n\n  export type ScrollamaOptions = {\n    step: NodeList | HTMLElement[] | string;\n    progress?: boolean;\n    offset?: DecimalType;\n    threshold?: 1 | 2 | 3 | 4;\n    order?: boolean;\n    once?: boolean;\n    debug?: boolean;\n  };\n\n  export type ProgressCallbackResponse = {\n    element: HTMLElement;\n    index: number;\n    progress: DecimalType;\n  };\n\n  export type CallbackResponse = {\n    element: HTMLElement;\n    index: number;\n    direction: \"up\" | \"down\";\n  };\n\n  export type StepCallback = (response: CallbackResponse) => void;\n  export type StepProgressCallback = (\n    response: ProgressCallbackResponse\n  ) => void;\n\n  export type ScrollamaInstance = {\n    setup: (options: ScrollamaOptions) => ScrollamaInstance;\n    onStepEnter: (callback: StepCallback) => ScrollamaInstance;\n    onStepExit: (callback: StepCallback) => ScrollamaInstance;\n    onStepProgress: (callback: StepProgressCallback) => ScrollamaInstance;\n    resize: () => ScrollamaInstance;\n    enable: () => ScrollamaInstance;\n    disable: () => ScrollamaInstance;\n    destroy: () => void;\n    offsetTrigger: (value: [number, number]) => void;\n  }\n}\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.0546875,
          "content": "import entry from \"./src/entry\";\n\nexport default entry;\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.162109375,
          "content": "{\n\t\"name\": \"scrollama\",\n\t\"version\": \"3.2.0\",\n\t\"description\": \"Lightweight scrollytelling library using IntersectionObserver\",\n\t\"main\": \"build/scrollama.js\",\n\t\"browser\": \"build/scrollama.js\",\n\t\"types\": \"index.d.ts\",\n\t\"scripts\": {\n\t\t\"dev\": \"cross-env NODE_ENV=development rollup -w -c\",\n\t\t\"build\": \"npm run pretest && cross-env NODE_ENV=production rollup -c && npm run docs\",\n\t\t\"pretest\": \"cross-env NODE_ENV=development rollup -c\",\n\t\t\"docs\": \"cp build/scrollama.min.js docs\"\n\t},\n\t\"module\": \"index\",\n\t\"jsnext:main\": \"index\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/russellsamora/scrollama.git\"\n\t},\n\t\"homepage\": \"https://github.com/russellsamora/scrollama#readme\",\n\t\"keywords\": [\n\t\t\"scrollytelling\",\n\t\t\"scroll\",\n\t\t\"scroll-driven\",\n\t\t\"step\",\n\t\t\"interactive\",\n\t\t\"graphic\",\n\t\t\"observer\",\n\t\t\"IntersectionObserver\",\n\t\t\"enter\",\n\t\t\"exit\",\n\t\t\"view\",\n\t\t\"trigger\"\n\t],\n\t\"author\": \"Russell Samora\",\n\t\"license\": \"MIT\",\n\t\"devDependencies\": {\n\t\t\"cross-env\": \"^7.0.3\",\n\t\t\"rollup\": \"^1.32.1\",\n\t\t\"rollup-plugin-buble\": \"^0.19.8\",\n\t\t\"rollup-plugin-commonjs\": \"^10.1.0\",\n\t\t\"rollup-plugin-filesize\": \"^9.1.1\",\n\t\t\"rollup-plugin-node-resolve\": \"^5.2.0\",\n\t\t\"rollup-plugin-uglify\": \"^6.0.4\"\n\t}\n}"
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.564453125,
          "content": "import commonjs from \"rollup-plugin-commonjs\";\nimport resolve from \"rollup-plugin-node-resolve\";\nimport { uglify } from \"rollup-plugin-uglify\";\nimport filesize from \"rollup-plugin-filesize\";\n\nconst isProd = process.env.NODE_ENV === \"production\";\n\nconst file = `build/scrollama${isProd ? \".min\" : \"\"}.js`;\n\nconst plugins = [\n  resolve({\n    jsnext: true,\n    main: true,\n  }),\n  commonjs({\n    sourceMap: false,\n  }),\n  filesize(),\n  isProd && uglify(),\n];\n\nexport default {\n  input: \"index.js\",\n  output: {\n    file,\n    format: \"umd\",\n    name: \"scrollama\",\n  },\n  plugins,\n};\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}