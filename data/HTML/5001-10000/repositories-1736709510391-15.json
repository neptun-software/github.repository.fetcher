{
  "metadata": {
    "timestamp": 1736709510391,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RayTracing/raytracing.github.io",
      "stars": 9048,
      "defaultBranch": "release",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0576171875,
          "content": "# Git Ignore Rules for raytracing.github.io\n\nbuild/\n/*.ppm\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 45.4208984375,
          "content": "Change Log / Ray Tracing in One Weekend\n====================================================================================================\n\n# v4.0.1 (2024-08-31)\n\n### Common\n  - Change -- Include hittable.h from material.h; drop `hit_record` forward declaration (#1609)\n  - Change -- Refactor sphere to use ray representation for animate center (#1621)\n  - Change -- All headers assume implicit rtweekend.h include (#1628)\n  - Fix    -- Big improvement to print version listing font size (#1595) and more compact line\n              height for code listings in both print and browser.\n  - Fix    -- Slight improvement to `rotate_y::hit()` function (#1484)\n  - Fix    -- Fixed possible bogus values from `random_unit_vector()` due to underflow (#1606)\n\n### In One Weekend\n  - Fix    -- Fixed usage of the term \"unit cube\" for a cube of diameter two (#1555, #1603)\n  - Fix    -- Fixed broken highlighting on some code listings (#1600)\n\n### The Next Week\n  - Fix    -- Add missing ellipsis in listing 2.62 (#1612)\n\n### The Rest of Your Life\n  - Fix    -- Fix typo of \"arbitrary\" (#1589)\n  - Fix    -- Fix X-axis label for figure 3.08 (Approximating the nonuniform f()) (#1532)\n  - Fix    -- Corrected scatter angle theta range in section 3.5.3 (The Scattering PDF) (#1331)\n  - Fix    -- Clarify the distinction between average and expected value (#1535)\n  - New    -- Added a bit more explanation of Buffon's needle problem (#1529)\n\n\n----------------------------------------------------------------------------------------------------\n# v4.0.0 (2024-07-26)\n\nFrom our last official v3.2.3 release (three and a half years ago!), this major release includes all\nchanges in the v4.0.0-alpha.1 and v4.0.0-alpha.2 releases, plus the changes listed immediately\nbelow. Generally, this represents a large overhaul of all three books and their code, and will\nrequire large changes to any code you've based on the prior v3.2.3 version. Going forward, we plan\nto avoid such massive, long-running development branches, at the expense of more frequent minor and\nmajor releases.\n\nThere's still a fair amount of work remaining on book three, which we'll work on after this release.\n\n### Common\n  - Change -- Use delegating constructors where helpful (#1489)\n  - Change -- Standardized our use of `begin`/`end` standard C++ iterators (#1551)\n  - Fix    -- CSS reformatting and fixes (#1567)\n  - Fix    -- Add workaround for image and figure captions using latest Markdeep versions (#1583)\n  - New    -- Add DOCTYPE declaration to all Markdeep documents (#1566)\n  - New    -- Add explicit std:: namespacing almost everywhere (#1487)\n\n### The Next Week\n  - Delete -- Remove debug output code from `constant_medium::hit()` function (#1495)\n  - Change -- Convert `perlin` class to use static arrays instead of dynamically allocated (#1483)\n  - Fix    -- Workaround Markdeep issue for code listings with tag-like tokens (#1463)\n\n### The Rest of Your Life\n  - Change -- Simplified the `onb` class, and renamed or deleted functions (#1080)\n  - Change -- Many small updates following walkthrough of book 3 (#988, #1317)\n  - Change -- Use plain array for `estimate_halfway` program (#1523)\n  - Change -- Refactored the ONB class to remove unused methods and generally simplify (#1088)\n  - Change -- Use `ICD(d)` instead of `f(d)` for inverse cumulative distribution for clarity (#1537)\n  - Fix    -- Add missing signature updates for `material::scatter()` functions\n  - Fix    -- Avoid `hittable_list` of lights in book until code is ready (#1318)\n\n\n----------------------------------------------------------------------------------------------------\n# v4.0.0-alpha.2 (2024-04-07)\n\nThis alpha wraps up most of the major changes we expect to make to book 2 for the impending v4.0.0\nrelease, along with a bunch of updates to the other two books. Since the alpha.1 release last\nAugust, we've been lucky to have onboarded two new contributors: Arman Uguray and Nate Rupsis.\nThey've been helping out a ton with this release, and Arman is also developing his GPU Ray Tracing\nbook at the same time!\n\nThis release is a bit faster, thanks to some new BVH optimizations. We've eliminated the negative\nradius sphere hack to model hollow spheres, instead accomplishing this with refraction indices. This\neliminates a bunch of places in the code where we had to accomodate this, and probably a bunch of\nbugs we still haven't found. We now load texture images in linear color space, fixing a long-running\nbug where we were gamma-correcting our textures twice -- you'll notice object texture maps look a\nbit darker and less washed out. Refraction text has gotten a bit of an overhaul, and a better\nexample of total internal reflection. Of course, this also includes a load of small fixes, tweaks,\nand improvements.\n\nOur current plan is to get the final v4.0.0 release out the door by SIGGRAPH 2024, targeting July\n28. With that, here are the latest changes since our alpha.1 release:\n\n### Common\n  - Delete -- Removed `rtw_stb_image.h` header from book 1 source, as it's unused there.\n  - Change -- Increase compile warning levels for MSVC, and corrected newly-flagged code.\n  - Change -- Default to using post-increment everywhere\n  - Change -- We've removed the few cases where we used C++ default constructors. Instead, we either\n              require all parameters, or use operator overloading to use default values.\n  - Change -- For clarity across audiences with broad programming backgrounds, we now use\n              `double(x)` instead of `static_cast<double>(x)`, and similarly for other types, for\n              easier readability for non-C++ programmers.\n  - Change -- The `ray` class constructors no longer use C++ default parameter values\n  - Change -- Remove pixel sampling knowledge from `write_color()`. This simplifies `write_color()`\n              to take only the desired output color, and made each phase in color computation easier\n              to understand.\n  - Change -- `ray::origin()` and `ray::direction()` getters now return const references, avoiding\n              unnecessary copies.\n  - Change -- Cleaned up the use of the `hit_record` class in `material.h`\n  - Change -- All books now point to the project wiki instead of the in1weekend blog for further\n              reading links.\n  - Change -- New BVH optimization splits the bounds according to the longest bounding box\n              dimension, yielding a 15-20% speedup (#1007)\n  - Change -- Reversed the ray-sphere direction and calculations throughout equations and code for\n              all books. This ended up simplifying equations and code in several places (#1191)\n  - Change -- Pass `vec3`, `point3`, `ray`, and `color` parameters by const reference where\n              possible (#1250)\n  - Change -- Changed BVH construction (removed const qualifer for objects vector) so sorting is\n              done in place, and copying of vector is avoided, yielding better BVH build performance\n              (#1327, #1388, #1391)\n  - Change -- Implement hollow spheres using refraction index instead of negative radii.\n              Additionally, we now block negative radius spheres. This fixes a bunch of corner\n              cases with inverted spheres (#1420)\n  - Change -- Refactor pixel subsampling to make the sampling functions simpler and better focused\n              in scope (#1421)\n  - Change -- All constructor parameter names now match their member names if assigned directly. C++\n              can handle this without ambiguity, and it means we don't have to come up with\n              alternate names for everything (#1427)\n  - Change -- `material::scatter()` gets a trivial default implementation (#1455)\n  - Fix    -- Fixed section describing total internal reflection. It turns out that spheres with\n              refraction index greater than the surrounding atmosphere cannot exhibit total internal\n              reflection. Changed example to instead model a bubble of air in water, and updated the\n              rendered images to match (#900)\n  - Fix    -- Fix references from `random_in_hemisphere()` to `random_on_hemisphere()` (#1198)\n  - Fix    -- The `linear_to_gamma()` function has been hardened against negative inputs (#1202)\n  - Fix    -- Fixed default camera look-from and look-at values (#1341)\n  - Fix    -- The `quad` bounding box now considers all four vertices instead of erroneously only\n              using two (#1402)\n  - New    -- Added PRINTING.md to give information about how to print these books to PDF or paper.\n              We will also be including PDFs of each book with each new GitHub release going\n              forward.\n\n### In One Weekend\n  - Change -- Update reference to \"Fundamentals of Interactive Computer Graphics\" to \"Computer\n              Graphics: Principles and Practice\". This is the name used by newer editions of the\n              book.\n  - Change -- Updated the \"Next Steps\" section at the end of book 1 (#1209)\n  - Change -- Update rtweekend.h header introduction and use (#1473)\n  - Fix    -- Fix code listing ordering bug with `lambertian` texture support (#1258)\n  - New    -- Improved help for the very first build and run.\n  - New    -- Define albedo prior to first use (#1430)\n\n### The Next Week\n  - Change -- Lots of miscellaneous edits and clarifications to book two as we encountered them.\n              This also includes various improvements to code listings to provide better context and\n              address discrepancies between the listings and the actual source code.\n  - Change -- `perlin::turb()` no longer defaults the value for the depth parameter.\n  - Change -- AABB automatically pads to mininmum size for any dimension; no longer requires\n              primitives to call aabb::pad() function.\n  - Change -- Switch from ray = A + tb to ray = Q + td in AABB text.\n  - Change -- Update checker scale to 0.32\n  - Change -- Refactor AABB class. Renamed `aabb::axis()` to `aabb::axis_interval()`. Minor\n              refactoring of `aabb::hit()` function. (#927, #1270)\n  - Change -- Reworked the AABB chapter. Created skippable sections for planar coordinates\n              derivation (#1236)\n  - Fix    -- Updated book 2 images to match the latest code.\n  - Fix    -- Images loaded for texture mapping are now converted from their original gamma to\n              linear color space for use. Rendered images are still gamma corrected to 2.0 on\n              output (#842)\n  - Fix    -- Fix regression in calls to Perlin `turb()` functions with scaled points (these should\n              be unscaled). (#1286)\n  - New    -- Add section on alternative 2D primitives such as triangle, ellipse and annulus (#1204,\n              #1205)\n\n### The Rest of Your Life\n  - Fix    -- Add missing backslash for LaTeX `operatorname` (#1311)\n  - Fix    -- Fix LaTeX functions with underscore (#1330)\n\n\n----------------------------------------------------------------------------------------------------\n# v4.0.0-alpha.1 (2023-08-06)\n\nIt's been quite a while since our last release of v3.2.3 at the end of 2020. For this cycle, we've\ntackled a load of significant backlog items, including rewrites of much of our underlying code. As\nalways, the primary idea isn't to provide the best or most optimal implementation, but instead to put\nout simple, sometimes crude first approximations of the main components of writing a ray tracer.\n\nHighlights include large rewrites and expansions of the book text, a large refactoring of our camera\nclass, folding `moving_sphere` functionality into `sphere`, adding a new `interval` class for use in\nmultiple contexts, creating a new general `quad` primitive to replace the old `*_rect` primitives,\nand the addressing of hundreds of issues and requested features. The line-item changes below should\ngive you an idea of v4 includes.\n\nIn order to drive this release to resolution, we're releasing our alpha.1 version to coincide with\nthe start of SIGGRAPH 2023. We've pretty much finished with book one, though there's a fair amount\nleft for books two and three. Our plan is to keep crunching for a final v4.0.0 release by the end of\n2023.\n\nSince this is an alpha, we would greatly appreciate any feedback you might have. Let us know by\ncreating issues up on the GitHub project.\n\n### Common\n  - Delete -- `box`, `xy_rect`, `yz_rect`, `xz_rect` classes. These are replaced with new `quad`\n              primitive (#292, #780, #681)\n  - Change -- Use `class` instead of `struct` throughout for simpler C++ (#781)\n  - Change -- Moved all class method definitions inside class definition (#802)\n  - Change -- Class public/private access labels get consistent two-space indents (#782)\n  - Change -- Updated classes to use private access for class-private variables (#869)\n  - Change -- Made our code `inline` clean. We now use `inline` in all header function definitions\n              to guard against copies in multiple C++ translation units (#803)\n  - Change -- Retired the `src/common/` directory. Each book now has complete source in one\n              directory\n  - Change -- Significant rewrite and expansion of the `camera` class\n  - Change -- `aabb` class constructor treats two params as extreme points in any orientation (#733)\n  - Change -- `hittable:hit()` methods use new interval class for ray-t parameter\n  - Change -- `interval::clamp()` replaces standalone `clamp` utility function\n  - Change -- `aabb` class uses intervals for each axis (#796)\n  - Change -- `hittable` member variable `ptr` renamed to `object`\n  - Change -- General rename of `mat_ptr` to `mat` (material)\n  - Change -- `hittable::bounding_box()` signature has changed to always return a value (#859)\n  - Change -- Replaced random vector in `isotropic` with `random_unit_vector`\n  - Change -- Use std::clog instead of std::cerr to log scanline progress (#935)\n  - Change -- Updated figures throughout for improved clarity when possible\n  - Change -- Generated images are now output gamma-corrected rather than in linear space\n              (#980, #1033)\n  - Change -- The `camera` class now handles images with width or height of one (#682, #1040)\n  - Fix    -- CSS fix for cases where code listing overflows; change to fit content (#826)\n  - Fix    -- Enabled compiler warnings for MSVC, Clang, GNU. Cleaned up warnings as fit (#865)\n  - Fix    -- Remove redundant `virtual` keyword for methods with `override` (#805)\n  - Fix    -- `rect` hit returning NaNs and infinities (#681)\n  - Fix    -- Add `\\mathit` to italic math variables to fix slight kerning issues in equations\n              (#839)\n  - Fix    -- Fixed issues in Bib(La)TeX entries.\n  - New    -- Introduce new `interval` class used throughout codebase (#777)\n  - New    -- `rtw_image` class for easier image data loading, better texture file search (#807)\n  - New    -- 2D `quad` primitive of arbitrary orientation (#756)\n  - New    -- `box()` utility function returns `hittable_list` of new `quad` primitives (#780)\n\n### In One Weekend\n  - Change -- Updated all rendered images in text\n  - Change -- Significant update to the diffuse reflection section (#696, #992)\n  - Change -- Updated and clarified text around ray generation and the camera model\n  - New    -- More commentary about the choice between `double` and `float` (#752)\n  - New    -- Software context around the shadow acne listing\n\n### The Next Week\n  - Delete -- The `moving_sphere` class is deprecated, and functionality moved to `sphere` (#1125)\n  - Change -- Rearranged the texture-mapping presentation. The three types (solid, spatial, image)\n              are now sequenced in that order, and the checker texture presented more explicitly as\n              an illustration of a spatial texture.\n  - Change -- Broad rewrite of time management for moving objects, primarily `camera` and\n              `sphere`, but also impacting the API for `hittable::bounding_box()` (#799)\n  - Change -- The `sphere` class now includes animation capability originally in `moving_sphere`\n              (#1125)\n  - Fix    -- Fixed `bvh_node` constructor definition signature (#872)\n  - Fix    -- Fixed scaling for final Perlin noise texture (#896).\n  - New    -- Add listing to use new `bvh_node` class in the `random_spheres` scene (#715).\n\n### The Rest of Your Life\n  - Fix    -- Added missing functionality for `isotropic` (#664)\n  - Fix    -- Variable `direction` was used without being defined in listing 11 (#831)\n  - Fix    -- Fixed uniform sampling (#934)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.2.3 (2020-12-07)\n\n### Common\n  - Change -- Markdeep library URL updated to new location\n\n### The Next Week\n  - Fix    -- Correct parameter name typo for `bvh_node` constructor parameter `src_objects`\n\n\n----------------------------------------------------------------------------------------------------\n# v3.2.2 (2020-10-31)\n\n### Common\n  - Change -- Refactor `sphere::hit()` method to reuse common blocks of code.\n  - Change -- Improved the explanation and calculation of sphere UV coordinates (#533)\n  - Fix    -- Added `fmin` to book text for `cos_theta` of `refract` (#732)\n  - Fix    -- Standardized naming for ray-t and time parameters (#746)\n  - Fix    -- `random_unit_vector()` was incorrect (#697)\n  - Fix    -- Synchronize text and copies of `hittable.h`\n  - Fix    -- Synchronize copies of `hittable_list.h`, `material.h`, `sphere.h`\n\n### In One Weekend\n  - Change -- Wrote brief explanation waving away negative t values in initial normal sphere\n  - Fix    -- Catch cases where `lambertian::scatter()` yields degenerate scatter rays (#619)\n  - Fix    -- Syntax error in listing 58 (Dielectric material class with reflection) (#768)\n  - Fix    -- Correct wording for ray traversal text (#766)\n\n### The Next Week\n  - Fix    -- Catch cases where `lambertian::scatter()` yields degenerate scatter rays (#619)\n\n### The Rest of Your Life\n  - Fix    -- Missing `override` keyword for `xz_rect::pdf_value()` and `xz_rect::random()` methods\n              (#748)\n  - Fix    -- Synchronize book and source for `cornell_box()` function.\n  - Fix    -- Introduction of light code was introduced out of sequence (#738, #740)\n  - Fix    -- `ray_color()` was creating a new light for every ray bounce (#759)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.2.1 (2020-10-03)\n\n### Common\n  - Change -- Refactored dielectric class for clarity\n  - Fix    -- Update local Markdeep library (for offline reading) to v1.11. The prior version had\n              incorrect content (#712)\n  - Fix    -- Image texture destructor should call `STBI_FREE` instead of delete (#734)\n\n### In One Weekend\n  - Delete -- Remove premature `cstdlib` include; not needed until we use `rand()` (#687)\n  - Fix    -- Replace old anti-alias result image with before-and-after image (#679)\n  - Fix    -- Listing 29: Added missing `rtweekend.h` include (#691)\n  - Fix    -- Undefined `vup` variable in camera definition (#686)\n  - Fix    -- Listing 51: Add missing `hittable.h`, `rtweekend.h` includes (#693)\n  - Fix    -- Listing 59: [\"Full glass material\"] Diverged from source\n  - Fix    -- Fix error in citation section (#721)\n  - Fix    -- Listings 33, 39: Add  consistent function signature for `trilinear_interp` (#722)\n\n### The Next Week\n  - Delete -- Remove unused u,v,w variables in initial `perlin::noise()` function (#684)\n  - Change -- `bvh_node` no longer reorders the source vector of scene objects; uses local copy\n              instead (#701)\n  - Fix    -- Listing  5: Neglected to add ray time for metal and dielectric materials (#133)\n  - Fix    -- Listing 15: In `bvh.h`, add missing `hittable_list.h` include (#690)\n  - Fix    -- Listing 33, 34, 38: Change implicit casts to explicit ones (#692)\n  - Fix    -- Listing 40: Change `perlin.h` in the caption to `texture.h` (#698)\n  - Fix    -- Listing 70: Add missing `bvh.h` (#694)\n  - Fix    -- Listing 70 and `main.cc`: Change a fuzz value of a metal sphere to 1.0 which is the\n              maximum value (#694)\n  - Fix    -- Fix error in citation section (#721)\n\n### The Rest of Your Life\n  - Fix    -- Fix errors in citation section (#721)\n  - Fix    -- Area equation in section 3.3 Constructing a PDF and nearby text (#735)\n  - New    -- Listing 36: Add missing updates to dielectric class for updating specular in scatter\n              record\n\n\n----------------------------------------------------------------------------------------------------\n# v3.2.0 (2020-07-18)\n\nWe're still chasing that elusive stable project state where we're mostly done with large changes,\nyet we keep finding more and more to tweak and improve. Besides the usual batch of corrections and\nsmall improvements, for this change we plodded through the complete code progression for both books\none and two (_In One Weekend_ and _The Next Week_). This caught a _lot_ of issues (to our dismay),\nand allowed us to generate a complete set of new render images for both books, to catch up with all\nof the changes we've been making. The end result is that readers should find a significantly better\nagreement between the book and their code as they progress, and their renders should also generally\nmatch.\n\nBesides the new rendered images, we also much improved the image parameters, which were frequently\nmissing from the previous version, leaving readers to guess at their values, or go to the code to\ntry to figure out how we created some of the images. In general, our working renders are now 400\npixels wide, usually 16:9 aspect ratio. We now use an explicit aspect ratio and deduce the image\nheight and other camera values, so you can tweak your render size just by changing the image width\n(instead of updating a bunch of dependent parameters).\n\nOne interesting late change we made was adding explicit C++ `override` labels to subclass methods.\nWe did this mostly to aid code readers, but were surprised to find that it actually caught a pretty\nsignificant bug hiding in our code (see entry in common changes below).\n\nYou'll also see a new citation section at the end of the books, to encourage uniform citations out\nin the world, making it easier for people to refer to and track these books.\n\nAs is typical, though we roughly follow [semantic versioning](https://semver.org/), we're\nconsidering this release a minor change instead of a major one. It's a common reflex, because people\ngenerally have a (misguided) aversion to bumping the major version a lot. We consider it minor\nbecause most of the changes are quite local, some classes get new constructors and any variances\nshould be quite simple and easy to fix up. Still, one might consider this more properly a major\nversion bump.\n\nFor our next larger-than-patch release, we're beginning a large revisit of book 3,\n_Ray Tracing: The Rest of Your Life_. There's a lot of work to do, and this will likely be a\nsignificant change and improvement. We're hoping that changes to books one and two will be small,\nbut that's never worked out for us before. Ah, dreams.\n\n### Common\n  - Delete -- Vestigial `vec3::write_color()` method (now in color.h)\n  - Change -- All images and figures renamed to follow more logical convention, using the following\n              pattern: `{fig,img}-<book>.<sequence>-<title>.<filetype>` (#495)\n  - Change -- `main()` function gets organized into image, world, camera, and render chunks\n  - Change -- Added header guards to the text of all three books whenever a new header file was\n              introduced, consistent with source code (#645)\n  - Change -- Added `override` keywords throughout. This keyword marks a subclass method as one that\n              is intended to override a superclass method. It makes the code a bit easier to\n              understand, and ensures that your function is actually overriding the method you think\n              it is. Which is good, because it already caught an existing bug in _The Rest of Your\n              Life_ source. This change includes commenting out the book 3 `isotropic::scatter()`\n              method, which was accidentally ignored anyway. (#639, #669)\n  - Fix    -- Found a bug in book 3 source `isotropic::scatter()` method. Commented out, using\n              default (as it was previously). (#669)\n  - New    -- Added constructors that take `color` arguments in addition to the constructors\n              taking `shared_ptr<texture>` arguments, simplifying calling code. Applies to\n              `checker_texture`, `constant_medium`, `diffuse_light`, `lambertian`, and `isotropic`\n              (#516, #644)\n  - New    -- Each book gets a section of recommended citation examples (#500)\n\n### In One Weekend\n  - Change -- Updated all rendered images except for 1.13, 1.14 (#179, #547, #548, #549, #550, #551,\n              #552, #553, #554, #555, #556, #557, #560, #561, #562, #563, #564, #565, #566)\n  - Change -- Standard working render width changed to 400 pixels\n  - Change -- Image 6 is now a before-and-after pair to illustrate antialiasing\n  - Change -- Listing 48: Refactored material and geometry declarations\n  - Change -- Listing 52: Refactored assignment of `etai_over_etat`\n  - Change -- Listing 56: Refactored material declarations\n  - Change -- Listing 61: Refactored material and geometry declarations\n  - Fix    -- Corrected various missed change highlights in code listings\n  - Fix    -- Listing 7: Added missing `color.h`, `vec3.h` includes\n  - Fix    -- Listing 18: Add missing `double t` member of struct `hit_record` (#428)\n  - Fix    -- Listing 24: Add missing `color.h` include\n  - Fix    -- Listing 30: Add missing `camera.h` include\n  - Fix    -- Listing 42: Don't need to include `ray.h` when using `rtweekend.h`\n  - Fix    -- Listing 48: Add missing `material.h` include\n  - Fix    -- Listing 51: `refract()` function was missing `fabs()` on `sqrt()` argument (#559)\n  - Fix    -- Listing 61: Include updated `cam` declaration, show context w/highlighting\n  - Fix    -- Listing 62: Highlight rename of `camera::get_ray()` parameters to s, t (#616)\n  - Fix    -- Listing 63: Show reverted scene declarations\n  - Fix    -- Listing 68: Show final scene render parameters with highlighting\n  - Fix    -- Rewrote refracted ray perpendicular and parallel components for correctness (#526)\n  - New    -- Listing 50: Show the updated material definitions\n\n### The Next Week\n  - Delete -- Deleted the section covering the old `flip_face` class, renumbered images as this\n              eliminated the rendering with missing Cornell box faces (#270, #482, #661)\n  - Delete -- Scenes 7 & 9 from the original (`cornell_balls` and `cornell_final`), as these were\n              not covered in the book. Made the source and book consistent with each other. There\n              are now a total of eight scenes for the second book (#653, #620)\n  - Change -- Listing 10: Separate out world & camera definitions in main (#646)\n  - Change -- Updated most rendered images for book 2: 2.01-2.03, 2.07-2.13, 2.15-2.22.\n  - Change -- Scenes get custom image parameters (#650)\n  - Fix    -- Reduced code duplication in `dielectric::scatter()` function\n  - Fix    -- \"Intance\" typo in Chapter 8.1 to \"Instance\" (#629)\n  - Fix    -- Listing 7: Show reverted viewing parameters from book 1 final scene\n  - Fix    -- Typo in listing caption for filename `moving-sphere.h`\n\n### The Rest of Your Life\n  - Change -- Use `vup` for camera, as in other two books\n  - Fix    -- World and camera setup in `main()`, and include full body in book listing (#646)\n  - New    -- `flip_face` moved to book 3, where it's needed for the light source (#661)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.1.2 (2020-06-03)\n\n### In One Weekend\n  - Fix    -- Correct typo: \"Intance Translation\" -> \"Instance Translation\"\n  - Fix    -- Corrected geometry type when computing distance between two points, final scene (#609)\n\n### The Rest of Your Life\n  - Fix    -- Missing closing parenthesis in listing 10 (#603)\n  - Fix    -- Tiny improvements to the lambertian::scatter() development (#604)\n  - Fix    -- Correct geometry type and unit vector method in `ray_color()`, listing 20 (#606)\n  - Fix    -- Listing 26: alternate `random_double()` switched `distribution`, `generator` (#621)\n  - Fix    -- Listing 28, 30: `light_shape` should have default material, not `0` (#607)\n  - Fix    -- Listing 30: `mixture_pdf` needs `shared_ptr` arguments (#608)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.1.1 (2020-05-16)\n\n### Common\n  - Change -- Camera code improvements to make it more robust when any particular value changes.\n              Also, the code develops in a smoother series of iterations as the book progresses.\n              (#536)\n  - Fix    -- Refactoring the camera code in v3.1.0 missed updating the viewport to match, resulting\n              in distorted renders (#536)\n\n### In One Weekend\n  - Change -- The C++ `<random>` version of `random_double()` no longer depends on `<functional>`\n              header.\n  - Change -- Refactored `random_scene()`. More named intermediate values, sync'ed with source.\n              (#489)\n  - Fix    -- Camera initialization with explicit up vector (#537)\n  - Fix    -- Changed some text around the camera model and the camera defocus blur model (#536)\n\n### The Next Week\n  - Change -- Refactored `random_scene()`. Added more named intermediate values, sync'ed with\n              version in _In One Weekend_ and with source. Added highlight for update from last\n              version in book 1. (#489)\n  - Change -- The C++ `<random>` version of `random_double()` no longer depends on `<functional>`\n              header.\n  - Fix    -- Added clarification about updating lambertian variables from `color` to `solid_color`.\n  - Fix    -- Corrected for-loop indices (they differed from the version in book 1) in\n              `random_scene()`.\n  - Fix    -- Introduce \"Texture Coordinates for Spheres\" in Chapter 4 to support (u,v) coordinates\n              in `hit_record` (#496)\n  - Fix    -- Small correction: we now use `std::sort` instead of `qsort` (#490)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.1.0 (2020-05-03)\n\nThis minor upgrade adds some fixes and changes that are a bit more than just patches. The text now\nhas subchapter headings to help readers browse content and get a bit more context. We're introducing\nnew type aliases `point3` and `color` for `vec3` to better indicate the underlying mathematical\ntypes of parameters and variables. Overall, a bunch of small improvements that we'd recommend\nadopting, but may warrant comparison with any current projects.\n\n### Common\n  - Change -- Minor change to use new `point3` and `color` type aliases for `vec3` (#422)\n  - Change -- Renamed `constant_texture` to `solid_color`, add RGB constructor (#452)\n  - Change -- Moved `vec3::write_color()` method to utility function in `color.h` header (#502)\n  - Change -- Switch from `ffmin`/`ffmax` to standard `fmin`/`fmax` (#444, #491)\n  - Change -- Math notation to bold uppercase points, bold lowercase no-barb vectors (#412)\n  - Change -- Books use Markdeep's image class=pixel for rendered image fidelity (#498)\n  - Fix    -- Include cmath in vec3.h (#501)\n  - Fix    -- Scattered improvements to the text\n  - New    -- Subchapters throughout all three books (#267)\n  - New    -- Add explanation for padding `aarect` in the zero dimension (#488)\n\n### In One Weekend\n  - Change -- Define image aspect ratio up front, then image height from that and the image width\n  - Change -- Default image sizes changed from 200x100 to 384x216\n  - Change -- First image size changed to 256x256\n  - Fix    -- Improve image size and aspect ratio calculation to make size changes easier\n  - Fix    -- Added `t` parameter back into `hit_record` at correct place\n  - Fix    -- Image basic vectors off by one\n  - Fix    -- Update image and size for first PPM image\n  - Fix    -- Update image and size for blue-to-white gradient image\n  - Fix    -- Update image and size for simple red sphere render\n  - Fix    -- Update image and size for sphere with normal-vector coloring\n  - Fix    -- Correct typo in \"What's next?\" list to rejoin split paragraph on \"Lights.\" Adjust\n              numbering in rest of list.\n\n### The Next Week\n  - Change -- Large rewrite of the `image_texture` class. Now handles image loading too. (#434)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.0.2 (2020-04-11)\n\n### Common\n  - Change -- Every book source now includes from a single common acknowledgments document\n  - Fix    -- Code styling for source code both inline and in fenced blocks (#430)\n\n### In One Weekend\n  - Fix    -- Correct typo: \"consine\" to \"cosine\"\n\n### The Next Week\n  - Fix    -- `shared_ptr` dereference and simplify code in `hittable_list::bounding_box()` (#435)\n  - Fix    -- Erroneous en-dash in code block. Replace `–>` with `->` (#439)\n  - Fix    -- Introduce `u`,`v` surface coordinates to `hit_record` (#441)\n  - Fix    -- Add highlight to new `hittable::bounding_box()` method (#442)\n\n### The Rest of Your Life\n  - Fix    -- Unitialized variable in first version of `integrate_x_sq.cc`\n  - Fix    -- Remove unreferenced variables in several sample programs\n  - Fix    -- Correct program computation of the integral of x^2 (#438)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.0.1 (2020-03-31)\n\n### Common\n  - Delete -- Delete old README files specific to each book (#410)\n  - Fix    -- Display rendered images as pixelated instead of smoothed (#179)\n\n### In One Weekend\n  - Fix    -- Remove duplicated text and reword on the camera up vector (#420)\n\n\n----------------------------------------------------------------------------------------------------\n# v3.0.0 (2020-03-23)\n\nWith the migration to a web format accomplished in v2.0.0, we immediately began work on a new major\nrelease: v3.0.0. This release tackles the following key themes:\n\n  - Establishing a common build system for the three projects. We chose CMake for its broad support\n    for multiple platforms, as well as multiple build tools and IDEs. This change includes a\n    reorganization of the project source files, and unifying a lot of code across projects.\n\n  - A major upgrade of the project source code, addressing a number of large changes that we had\n    deferred for later.\n\n  - A number of larger changes to the book content, refining some approaches and ideas, and\n    addressing some areas in the text that needed improvement.\n\nFollowing this release, we expect to switch to a much more incremental approach, mostly with\npatch-level (fix) changes and some minor-level (addition) changes.\n\n### Common to All Project Source\n  - Change -- Default floating-point type changed from `float` to `double` (#150)\n  - Change -- Materials are now referenced with `std::shared_ptr` pointers\n  - Change -- Complete elimination of bare pointers and `new`/`delete`\n  - Change -- `hittable_list` uses `std::vector` plus `std::shared_ptr` pointers\n  - Change -- Header cleanup across the source code (#218, #220)\n  - Change -- Cleaned up standard C++ header use (#19)\n  - Change -- Improved random number generator utilities\n  - Change -- Replace MAXFLOAT with (portable) infinity (#195, #216)\n  - Change -- A _lot_ of code cleanup, refactoring, renaming (#192)\n  - Change -- Disable compile warnings for external `stb_image.h` on Windows\n  - Change -- Replace pi with portable version (#207)\n  - Change -- `ray_color()` function now has max depth passed in, rather than hard-coding it (#143)\n  - Change -- Added `random_in_unit_sphere()`, `random_unit_vector()`, `random_in_hemisphere()` to\n              vec3.h. Fixed places where we were using one but should have been using another.\n              (#145)\n  - Change -- General rework of the `vec3` header (#153, #156, #215)\n  - Change -- Clarify sphere intersection code, plus slight perf improvement (#113)\n  - Change -- `ray::point_at_parameter()` renamed to `ray::at()`\n  - Change -- Moved `ffmin()`, `ffmax()` from `aabb.h` to `rtweekend.h`\n  - Change -- Move low-level utility functions to more appropriate headers\n  - Change -- `squared_length()` renamed to `length_squared()`\n  - Change -- Update `sphere::hit()` function.\n  - Change -- Refraction variables renamed to match reflection variable names\n  - Change -- Simplify lambertian scatter direction calculation\n  - Fix    -- Diffuse PDF computation uses random point _on_ sphere, rather than _inside_\n  - Fix    -- Improve color [0,1] -> [0,255] mapping\n  - New    -- CMake configuration & build\n  - New    -- Added progress output for main programs (#139)\n  - New    -- `src/common` directory for code shared across books\n  - New    -- Common project-wide header: `src/common/rtweekend.h`\n  - New    -- File constants.h with portable math constants (#151)\n  - New    -- `vec3::write_color` - provides a robust output method for color data (#93)\n  - New    -- `degrees_to_radians()` utility function (#217)\n  - New    -- `random_int()`, `random_double()`, and `vec3::random()` utility functions\n  - New    -- Added safety value when surface texture has null data\n  - New    -- Main programs now define and handle parameterized background color\n\n### Common to All Books\n  - Change -- Code in source and in book reformatted to a consistent 96-column line length (#219)\n  - Change -- Lots more highlighting of changed code in books to aid reading\n  - Change -- Math typesetting fixes throughout the books (#13)\n  - Change -- Books now use Markdeep's chapter indirection syntax\n  - Change -- Updated several output images to match code updates\n  - Change -- Books general styling improvements (#197)\n  - Change -- Refactored acknowledgements. These are now moved to and duplicated in each book\n  - Fix    -- Fixed various minor problems in the text\n  - New    -- Added code listing captions, including source file name, for all books (#238)\n  - New    -- Added captions to all figures (#238)\n  - New    -- Local copy of `markdeep.min.js` for offline reading\n\n### In One Weekend\n  - Change -- Reworked Lambertian reflection text (#155)\n  - Change -- Revised the figure for computing a random reflection vector (#142)\n  - Fix    -- Update `ray_color()` code blocks to match current source (#391)\n  - New    -- Clarified text around the ideal Lambertian distribution (#155)\n  - New    -- Additional explanatory text to the dielectric chapter\n  - New    -- Image for hemispherical rendering\n  - New    -- Image for dealing with front and back faces (#326)\n\n### The Next Week\n  - Change -- Added proper handling of front vs back face intersection (#270)\n  - Fix    -- Fixed bug in `noise_texture::value()` (#396)\n  - Fix    -- Correct first Perlin noise() function in \"The Next Week\".\n  - Fix    -- Fix OCR error in `texture::value()` function (#399)\n  - Fix    -- Remove premature declaration of `moving_sphere::bounding_box()` (#405)\n  - New    -- \"The Next Week\" main program added swtich statement for different scenes\n  - New    -- \"The Next Week\" main program now defines all image/camera parameters for each scene\n\n### The Rest of Your Life\n  - Delete -- Several unused source files from `src/TheRestOfYourLife`\n  - Change -- Improved naming of auxilliary programs in _The Rest of Your Life_ source\n  - Fix    -- Delete unused variable `p` in main() (#317)\n\n\n----------------------------------------------------------------------------------------------------\n# v2.0.0 (2019-10-07)\n\nThis major release marks an overhaul of the entire series, moving from a primarily PDF format to a\nweb accessible format using Markdeep (https://casual-effects.com/markdeep/). This represents a huge\noverhaul to the contents, particularly around source code blocks in the text, mathematical\ntypesetting and source-code cleanup.\n\n### Common\n  - Delete -- Deprecated existing _InOneWeekend_, _TheNextWeek_, _TheRestOfYourLife_ repos\n  - Change -- Moved existing _InOneWeekend_, _TheNextWeek_, _TheRestOfYourLife_ content to io repo\n  - Change -- Rewrote vec3.h `cross` function for clarity\n  - Fix    -- All instances of `hitable` have become `hittable`\n  - Fix    -- Replaced `drand48()` with portable `random_double` number generation\n  - New    -- General release to web\n  - New    -- Created single monolithic raytracing.github.io repo\n  - New    -- License change to CC0 in COPYING.txt\n  - New    -- CHANGELOG.md\n  - New    -- CONTRIBUTING.md\n  - New    -- COPYING.txt\n  - New    -- README.md\n  - New    -- Raytracing.github.io links to all the three books\n  - New    -- CSS for all books\n  - New    -- CSS for the print variant of the books\n\n### In One Weekend\n  - Delete -- Code, `vec3 p = r.point_at_parameter(2.0);` in main.cc\n  - Change -- README files updated for top level, source, and books\n  - Change -- Text, Chapter 0 Overview has become Chapter 1, all subsequent chapters incremented\n  - Change -- Text, Syntax highlighting of source modifications\n  - Change -- Text, Chapter 3, Reorder include files in code blocks to match src conventions\n  - Change -- Text, Chapter 3, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 3, Reordered `vec3` class functions to + - * /\n  - Change -- Text, Chapter 4, Reorder include files in code blocks to match src conventions\n  - Change -- Text, Chapter 6, Reorder include files in code blocks to match src conventions\n  - Change -- Text, Chapter 6, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 7, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 9, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 9, Put function signatures and `{` on the same line\n  - Change -- Text, Chapter 10, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 10, Put function signatures and `{` on the same line\n  - Change -- Text, Chapter 11, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 13, Put function signatures and `{` on the same line\n  - Fix    -- Text, Chapter 7, Add `#include \"random.h\"` in code blocks\n  - Fix    -- Text, Chapter 10, Added metal fuzziness parameter for initial dielectric\n  - Fix    -- Text, Chapter 13, Added metal fuzziness parameter\n  - Fix    -- Code, Removed extraneous `;` from `vec3::&operator[]` signature\n  - New    -- Markdeep page created for entire body of text\n  - New    -- Markdeep MathJax for formulae and equations for body of text\n  - New    -- Raytracing.github.io/books/RayTracingInOneWeekend.html\n\n### The Next Week\n  - Change -- Text, Chapter 0 Overview has become Chapter 1, all subsequent chapters incremented\n  - Change -- Text, Syntax highlighting of source modifications\n  - Change -- Text, Chapter 2, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 3, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 4, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 5, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 5, added \"texture\" to \"We can use that texture on some spheres\"\n  - Change -- Text, Chapter 7, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 7, \"This is yz and xz\" changed to \"This is xz and yz\"\n  - Change -- Text, Chapter 8, Changed \"And the changes to Cornell is\" to \"... Cornell are\"\n  - Change -- Text, Chapter 9, Changed short `if` statements to two lines for Consistency\n  - Change -- Text, Chapter 10, Consistent use of spaces in code blocks\n  - Change -- Code and Text, Chapter 9, cleaned up implementation of `constant_medium::hit`\n  - Change -- Code and Text, Chapter 9, Rewrote debug functionality in `constant_medium::hit`\n  - Fix    -- Text, Chapter 2, The `lambertian` class definition now uses `vec3` instead of `texture`\n  - Fix    -- Text, Chapter 7, Changed `cornell_box` hittable array size to 5\n  - Fix    -- Code and Text, Chapter 3, Changed `List[0]` to `List[i]` in\n          `hittable_list::bounding_box()`.\n  - Fix    -- Code and Text, Chapter 3, Replaced `fmax` and `fmin` with `ffmax` and `ffmin`\n  - Fix    -- Code, Add missing headers to `constant_medium.h` to fix g++ compiler error\n  - New    -- Raytracing.github.io/books/RayTracingTheNextWeek.html\n  - New    -- README.md, source README.md\n  - New    -- Markdeep page created for entire body of text\n  - New    -- Markdeep MathJax created for formulae and equations for body of text\n  - New    -- Earth map picture for use in rendering\n\n### The Rest of Your Life\n  - Change -- Text, Chapter 0 Overview has become Chapter 1, all subsequent chapters incremented\n  - Change -- Text, Syntax highlighting of source modifications\n  - Change -- Text, Chapter 2, Reorder include files in code blocks to match src conventions\n  - Change -- Text, Chapter 3, Reorder include files in code blocks to match src conventions\n  - Change -- Text, Chapter 6, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 6, Consistent use of spaces in code blocks\n  - Change -- Text, Chapter 8, Changed calculation of `a` axis to pseudocode\n  - Change -- Text, Chapter 8, Consistent use of spaces in code blocks\n  - Fix    -- Text, Chapter order starting from chapter 2\n  - Fix    -- Text, Renamed figures and images to match new chapter numbering\n  - Fix    -- Text, Chapter 4, Rewrote formula for \"Color\" to \"Color = A * color(direction\"\n  - Fix    -- Code and Text, Chapter 6, `material::scattering_pdf` now returns type float\n  - Fix    -- Code and Text, Chapter 6, removal of factor of 2 to `random_cosine_direction`\n              calculation\n  - New    -- Raytracing.github.io/books/RayTracingTheRestOfYourLife.html\n  - New    -- README.md, source README.md\n  - New    -- Markdeep page created for entire body of text\n  - New    -- Markdeep MathJax created for formulae and equations for body of text\n\n\n----------------------------------------------------------------------------------------------------\n# v1.123.0  (2018-08-26)\n\n  - New    -- First GitHub release of _Ray Tracing: The Rest of Your Life_.\n\n\n----------------------------------------------------------------------------------------------------\n# v1.54.0  (2018-08-26)\n\n  - New    -- First GitHub release of _Ray Tracing in One Weekend_.\n\n\n----------------------------------------------------------------------------------------------------\n# v1.42.0  (2018-08-26)\n\n  - New    -- First GitHub release of _Ray Tracing: The Next Week_.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 4.5458984375,
          "content": "#---------------------------------------------------------------------------------------------------\n# CMake Build Configuration for the Ray Tracing Weekend Series\n#\n# See README.md for guidance.\n#---------------------------------------------------------------------------------------------------\n\ncmake_minimum_required ( VERSION 3.1.0...3.27.0 )\n\nproject ( RTWeekend LANGUAGES CXX )\n\n# Set to C++11\nset ( CMAKE_CXX_STANDARD          11 )\nset ( CMAKE_CXX_STANDARD_REQUIRED ON )\nset ( CMAKE_CXX_EXTENSIONS        OFF )\n\n# Source\n\nset ( EXTERNAL\n  src/external/stb_image.h\n)\n\nset ( SOURCE_ONE_WEEKEND\n  src/InOneWeekend/main.cc\n  src/InOneWeekend/camera.h\n  src/InOneWeekend/color.h\n  src/InOneWeekend/hittable.h\n  src/InOneWeekend/hittable_list.h\n  src/InOneWeekend/interval.h\n  src/InOneWeekend/material.h\n  src/InOneWeekend/ray.h\n  src/InOneWeekend/rtweekend.h\n  src/InOneWeekend/sphere.h\n  src/InOneWeekend/vec3.h\n)\n\nset ( SOURCE_NEXT_WEEK\n  src/TheNextWeek/main.cc\n  src/TheNextWeek/aabb.h\n  src/TheNextWeek/bvh.h\n  src/TheNextWeek/camera.h\n  src/TheNextWeek/color.h\n  src/TheNextWeek/constant_medium.h\n  src/TheNextWeek/hittable.h\n  src/TheNextWeek/hittable_list.h\n  src/TheNextWeek/interval.h\n  src/TheNextWeek/material.h\n  src/TheNextWeek/perlin.h\n  src/TheNextWeek/quad.h\n  src/TheNextWeek/ray.h\n  src/TheNextWeek/rtw_stb_image.h\n  src/TheNextWeek/rtweekend.h\n  src/TheNextWeek/sphere.h\n  src/TheNextWeek/texture.h\n  src/TheNextWeek/vec3.h\n)\n\nset ( SOURCE_REST_OF_YOUR_LIFE\n  src/TheRestOfYourLife/main.cc\n  src/TheRestOfYourLife/aabb.h\n  src/TheRestOfYourLife/camera.h\n  src/TheRestOfYourLife/color.h\n  src/TheRestOfYourLife/constant_medium.h\n  src/TheRestOfYourLife/hittable.h\n  src/TheRestOfYourLife/hittable_list.h\n  src/TheRestOfYourLife/interval.h\n  src/TheRestOfYourLife/material.h\n  src/TheRestOfYourLife/onb.h\n  src/TheRestOfYourLife/pdf.h\n  src/TheRestOfYourLife/perlin.h\n  src/TheRestOfYourLife/quad.h\n  src/TheRestOfYourLife/ray.h\n  src/TheRestOfYourLife/rtw_stb_image.h\n  src/TheRestOfYourLife/rtweekend.h\n  src/TheRestOfYourLife/sphere.h\n  src/TheRestOfYourLife/texture.h\n  src/TheRestOfYourLife/vec3.h\n)\n\ninclude_directories(src)\n\n# Specific compiler flags below. We're not going to add options for all possible compilers, but if\n# you're new to CMake (like we are), the following may be a helpful example if you're using a\n# different compiler or want to set different compiler options.\n\nmessage (STATUS \"Compiler ID: \" ${CMAKE_CXX_COMPILER_ID})\nmessage (STATUS \"Release flags: \" ${CMAKE_CXX_FLAGS_RELEASE})\nmessage (STATUS \"Debug flags: \" ${CMAKE_CXX_FLAGS_DEBUG})\n\nif (CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n    # /wd #### - Disable warning\n    # /we #### - treat warning as error\n    add_compile_options(\"/W4\")      # Enable level-4 warnings\n    add_compile_options(\"/we 4265\") # Class has virtual functions, but its non-trivial destructor is not virtual\n    add_compile_options(\"/we 5204\") # Class has virtual functions, but its trivial destructor is not virtual\n    add_compile_options(\"/wd 4100\") # unreferenced formal parameter\nelseif (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    add_compile_options(-Wnon-virtual-dtor) # Class has virtual functions, but its destructor is not virtual\n    add_compile_options(-Wreorder) # Data member will be initialized after [other] data member\n    add_compile_options(-Wmaybe-uninitialized) # Variable improperly initialized\n    add_compile_options(-Wunused-variable) # Variable is defined but unused\nelseif (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n    add_compile_options(-Wnon-virtual-dtor) # Class has virtual functions, but its destructor is not virtual\n    add_compile_options(-Wreorder) # Data member will be initialized after [other] data member\n    add_compile_options(-Wsometimes-uninitialized) # Variable improperly initialized\n    add_compile_options(-Wunused-variable) # Variable is defined but unused\nendif()\n\n# Executables\nadd_executable(inOneWeekend      ${EXTERNAL} ${SOURCE_ONE_WEEKEND})\nadd_executable(theNextWeek       ${EXTERNAL} ${SOURCE_NEXT_WEEK})\nadd_executable(theRestOfYourLife ${EXTERNAL} ${SOURCE_REST_OF_YOUR_LIFE})\nadd_executable(cos_cubed         src/TheRestOfYourLife/cos_cubed.cc         )\nadd_executable(cos_density       src/TheRestOfYourLife/cos_density.cc       )\nadd_executable(integrate_x_sq    src/TheRestOfYourLife/integrate_x_sq.cc    )\nadd_executable(pi                src/TheRestOfYourLife/pi.cc                )\nadd_executable(estimate_halfway  src/TheRestOfYourLife/estimate_halfway.cc  )\nadd_executable(sphere_importance src/TheRestOfYourLife/sphere_importance.cc )\nadd_executable(sphere_plot       src/TheRestOfYourLife/sphere_plot.cc       )\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.5244140625,
          "content": "Contributing To The Ray Tracing in One Weekend Series\n====================================================================================================\n\nThe _Ray Tracing in One Weekend_ series is intended to be lightweight and accessible for all who\nwant to learn about ray tracing and related graphics topics. To that end, we welcome feedback,\nproposals, and improvements.\n\nIn particular, we are now a dedicated GitHub organization. The books are now available in HTML from\nhttps://raytracing.github.io/, so we can keep the content up-to-date with the latest corrections and\nimprovements.\n\n\nDevelopment Branches\n---------------------\nWe use `release` as our release branch. _Generally, changes should never go directly to the release\nbranch_. All ongoing development work (and all of the latest changes) will be in the `dev-patch`,\n`dev-minor`, `dev-major`, or feature branches. The appropriate target branch for any pull requests\nyou want to make will be determined in the associated issue first (all pull requests should have an\nassociated issue).\n\n\nIssues\n-------\nThe easiest way to help out is to log any issues you find in the books. Unclear passages, errors of\nall kinds, even better ways to present something -- just go to the [issues page][].\n\n1. First ensure that the issue is still outstanding (check `dev-patch`, `dev-minor` or `dev-major`\n   as appropriate). Often the issue has already been addressed or no longer applies to the latest\n   in-development version. Admittedly, that's a bit of a hassle, but at least step two should help\n   you avoid duplicate issues.\n\n2. **Before creating a new issue**, please review existing issues to see if someone has already\n   submitted the same one. Chances are you're not the first to encounter something, so a little\n   quick research can save everyone some hassle. If you have new information, please continue the\n   thread in the existing issue.\n\n3. When entering a new issue, please include all relevant information. For content issues, include\n   the book or books this applies to, and specific locations that should be reviewed. Similarly for\n   code: please include the file, function/class, and line number(s) if that applies.\n\n4. Finally, _please keep issues focused on a single problem or suggestion_. If discussion prompts\n   you to think of a related issue, create a separate issue for that topic and add a link back to\n   the original discussion or issue (just use the \"#NNN\" syntax for issue/discussion/pull-request\n   NNN -- GitHub will automatically make this a link).\n\n\nPull Requests\n--------------\nTo contribute a change to the project, *please follow these steps*:\n\n  1. [Create a new GitHub issue](https://github.com/RayTracing/raytracing.github.io/issues).\n\n  2. Let us know if you're willing to make the fix yourself.\n\n  3. Participate in the discussion as needed. We'll ensure that the work doesn't conflict with or\n     duplicate other work planned or in progress, and decide which development branch is correct\n     for the release type and release schedule.\n\n  4. Once you've received instructions to proceed with your change, create a new feature branch (or\n     fork) from the assigned development branch (usually `dev-patch`, `dev-minor`, or `dev-major`).\n\n  5. Follow the existing code style.\n\n  6. Ensure that the change is complete:\n\n     - Update all relevant source code for all three books (`src/*`). Since the code is developed as\n       the books proceed, you may need to update many historical code listings as well, _and this\n       may require corresponding updates to the book text_.\n\n     - Update all relevant code listings and text in all three books (`books/RayTracing*.html`).\n       Follow existing style for the Markdeep source (for example, text should be wrapped to 100\n       characters).\n\n     - Provide clear and full commit descriptions: title line (50 characters max), followed by a\n       blank line, and then a descriptive body with lines not exceeding 72 characters. If a commit\n       is expected to completely resolve an outstanding issue, add a line \"Resolves #NNN\" to the\n       bottom of your commit message, where NNN is the existing GitHub issue number. You may provide\n       multiple such lines if applicable.\n\n     - Include a one-line summary change at the bottom of the current development section in the\n       changelog (`CHANGELOG.md`). Include a reference to the associated GitHub issue.\n\n     - For an example of the above, see\n       [issue #1262](https://github.com/RayTracing/raytracing.github.io/issues/1262) and\n       [PR #1263](https://github.com/RayTracing/raytracing.github.io/pull/1263).\n\n  7. When ready, create your pull request (PR) and request a review from \"RayTracing/reviewers\".\n\n  8. Congratulate yourself for having been part of the 1% of contributors who actually read and\n     followed these guidelines.\n\nNote the code philosophy outlined in the first section of the first book. In short, the code is\nintended to be clear for everyone, using simple C/C++ idioms as much as possible. We have chosen to\nadopt _some_ modern conventions where we feel it makes the code more accessible to non-C++\nprogrammers. Please follow the existing coding style and simplicity when offering your suggested\nchanges.\n\nIf anything above sounds daunting, note that you'll get _**massive**_ credit for actually reading\nthe CONTRIBUTING.md and following the process above -- so we'd be delighted to answer any questions\nand guide you through the process.\n\n\nQuestions\n----------\nIf you have any questions, feel free to ping me at steve@hollasch.net.\n\n\n\n[issues page]: https://github.com/RayTracing/raytracing.github.io/issues/\n"
        },
        {
          "name": "COPYING.txt",
          "type": "blob",
          "size": 7.0009765625,
          "content": "Creative Commons Legal Code\r\n\r\nCC0 1.0 Universal\r\n\r\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\r\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\r\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\r\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\r\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\r\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\r\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\r\n    HEREUNDER.\r\n\r\nStatement of Purpose\r\n\r\nThe laws of most jurisdictions throughout the world automatically confer\r\nexclusive Copyright and Related Rights (defined below) upon the creator\r\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\r\nauthorship and/or a database (each, a \"Work\").\r\n\r\nCertain owners wish to permanently relinquish those rights to a Work for\r\nthe purpose of contributing to a commons of creative, cultural and\r\nscientific works (\"Commons\") that the public can reliably and without fear\r\nof later claims of infringement build upon, modify, incorporate in other\r\nworks, reuse and redistribute as freely as possible in any form whatsoever\r\nand for any purposes, including without limitation commercial purposes.\r\nThese owners may contribute to the Commons to promote the ideal of a free\r\nculture and the further production of creative, cultural and scientific\r\nworks, or to gain reputation or greater distribution for their Work in\r\npart through the use and efforts of others.\r\n\r\nFor these and/or other purposes and motivations, and without any\r\nexpectation of additional consideration or compensation, the person\r\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\r\nis an owner of Copyright and Related Rights in the Work, voluntarily\r\nelects to apply CC0 to the Work and publicly distribute the Work under its\r\nterms, with knowledge of his or her Copyright and Related Rights in the\r\nWork and the meaning and intended legal effect of CC0 on those rights.\r\n\r\n1. Copyright and Related Rights. A Work made available under CC0 may be\r\nprotected by copyright and related or neighboring rights (\"Copyright and\r\nRelated Rights\"). Copyright and Related Rights include, but are not\r\nlimited to, the following:\r\n\r\n  i. the right to reproduce, adapt, distribute, perform, display,\r\n     communicate, and translate a Work;\r\n ii. moral rights retained by the original author(s) and/or performer(s);\r\niii. publicity and privacy rights pertaining to a person's image or\r\n     likeness depicted in a Work;\r\n iv. rights protecting against unfair competition in regards to a Work,\r\n     subject to the limitations in paragraph 4(a), below;\r\n  v. rights protecting the extraction, dissemination, use and reuse of data\r\n     in a Work;\r\n vi. database rights (such as those arising under Directive 96/9/EC of the\r\n     European Parliament and of the Council of 11 March 1996 on the legal\r\n     protection of databases, and under any national implementation\r\n     thereof, including any amended or successor version of such\r\n     directive); and\r\nvii. other similar, equivalent or corresponding rights throughout the\r\n     world based on applicable law or treaty, and any national\r\n     implementations thereof.\r\n\r\n2. Waiver. To the greatest extent permitted by, but not in contravention\r\nof, applicable law, Affirmer hereby overtly, fully, permanently,\r\nirrevocably and unconditionally waives, abandons, and surrenders all of\r\nAffirmer's Copyright and Related Rights and associated claims and causes\r\nof action, whether now known or unknown (including existing as well as\r\nfuture claims and causes of action), in the Work (i) in all territories\r\nworldwide, (ii) for the maximum duration provided by applicable law or\r\ntreaty (including future time extensions), (iii) in any current or future\r\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\r\nincluding without limitation commercial, advertising or promotional\r\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\r\nmember of the public at large and to the detriment of Affirmer's heirs and\r\nsuccessors, fully intending that such Waiver shall not be subject to\r\nrevocation, rescission, cancellation, termination, or any other legal or\r\nequitable action to disrupt the quiet enjoyment of the Work by the public\r\nas contemplated by Affirmer's express Statement of Purpose.\r\n\r\n3. Public License Fallback. Should any part of the Waiver for any reason\r\nbe judged legally invalid or ineffective under applicable law, then the\r\nWaiver shall be preserved to the maximum extent permitted taking into\r\naccount Affirmer's express Statement of Purpose. In addition, to the\r\nextent the Waiver is so judged Affirmer hereby grants to each affected\r\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\r\nirrevocable and unconditional license to exercise Affirmer's Copyright and\r\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\r\nmaximum duration provided by applicable law or treaty (including future\r\ntime extensions), (iii) in any current or future medium and for any number\r\nof copies, and (iv) for any purpose whatsoever, including without\r\nlimitation commercial, advertising or promotional purposes (the\r\n\"License\"). The License shall be deemed effective as of the date CC0 was\r\napplied by Affirmer to the Work. Should any part of the License for any\r\nreason be judged legally invalid or ineffective under applicable law, such\r\npartial invalidity or ineffectiveness shall not invalidate the remainder\r\nof the License, and in such case Affirmer hereby affirms that he or she\r\nwill not (i) exercise any of his or her remaining Copyright and Related\r\nRights in the Work or (ii) assert any associated claims and causes of\r\naction with respect to the Work, in either case contrary to Affirmer's\r\nexpress Statement of Purpose.\r\n\r\n4. Limitations and Disclaimers.\r\n\r\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\r\n    surrendered, licensed or otherwise affected by this document.\r\n b. Affirmer offers the Work as-is and makes no representations or\r\n    warranties of any kind concerning the Work, express, implied,\r\n    statutory or otherwise, including without limitation warranties of\r\n    title, merchantability, fitness for a particular purpose, non\r\n    infringement, or the absence of latent or other defects, accuracy, or\r\n    the present or absence of errors, whether or not discoverable, all to\r\n    the greatest extent permissible under applicable law.\r\n c. Affirmer disclaims responsibility for clearing rights of other persons\r\n    that may apply to the Work or any use thereof, including without\r\n    limitation any person's Copyright and Related Rights in the Work.\r\n    Further, Affirmer disclaims responsibility for obtaining any necessary\r\n    consents, permissions or other rights required for any use of the\r\n    Work.\r\n d. Affirmer understands and acknowledges that Creative Commons is not a\r\n    party to this document and has no duty or obligation with respect to\r\n    this CC0 or use of the Work.\r\n"
        },
        {
          "name": "PRINTING.md",
          "type": "blob",
          "size": 1.552734375,
          "content": "Printing These Books\n====================================================================================================\n\nThese books have been formatted to be print friendly (using CSS media queries). That means that you\nshould be able to print them directly from your browser of choice (usually Ctrl-P on Windows and\nLinux, or Cmd-P on Mac).\n\nWe've taken some care to set up sensible page breaks in the printed versions, though you still may\nfind a few odd artifacts here and there. For example, the latest version of Markdeep can let\nimages/figures and their captions land on different pages. This issue has been reported, and there\nmay be a fix in the works for this.\n\n\nPre-Printed Books\n------------------\nI've gone back and created PDFs for each book for versions since v2.0.0. You can find\nthese in the assets section of each release on the [GitHub releases page][releases]. We will include\nPDFs for all books with all future releases.\n\n\nCreating PDFs of These Books\n-----------------------------\nIf you wish to create your own PDF of any of these books (like for a version currently in\ndevelopment, or to test the results on your own changes), the easiest way is to use a save-to-PDF\nprint driver. When viewing a book in your browser, issue your browser's print command, and look\nthrough the available destination printers. Hopefully you'll find a save-to-PDF printer already set\nup and available. If not, you should be able to search for and find such a print driver for your\nparticular operating system.\n\n\n\n[releases]: https://github.com/RayTracing/raytracing.github.io/releases\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.6083984375,
          "content": "Ray Tracing in One Weekend Book Series\n====================================================================================================\n\n| ![RT in One Weekend][cover1] | ![RT The Next Week][cover2] | ![RT The Rest of Your Life][cover3] |\n|:----------------------------:|:---------------------------:|:-----------------------------------:|\n|   [In One Weekend][book1]    |   [The Next Week][book2]    |   [The Rest of Your Life][book3]    |\n\n\nGetting the Books\n------------------\nThe _Ray Tracing in One Weekend_ series of books are now available to the public for free directly\nfrom the web.\n\n### Version 4.0.1\n\n  - [Ray Tracing in One Weekend][web1]\n  - [Ray Tracing: The Next Week][web2]\n  - [Ray Tracing: The Rest of Your Life][web3]\n\nThese books have been formatted for both screen and print. For more information about printing your\nown copies, or on getting PDFs of the books, see [PRINTING.md][] for more information.\n\n\nContributing\n-------------\nIf you'd like to contribute a PR _**please read our [contribution guidelines][CONTRIBUTING]\nfirst**_.\n\n\nProject Status\n---------------\nVersion 4 has shipped! Three and a half years in the making, with massive changes to all three books\nand accompanying code. Our current version is v4.0.1.\n\nIf you'd like to check out the latest updates and watch our progress, we're on the `dev-patch`,\n`dev-minor`, and `dev-major` branches. You can also browse our issues and milestones to see what\nwe're planning.\n\nIf you're interested in contributing, email us! You can find our contact info at the head of each\nbook. Or just start [a new discussion][discussions] or [issue][issues].\n\n\nGitHub Discussions\n------------------\nDo you have general questions about raytracing code, issues with your own implmentation, or general\nraytracing ideas you'd like to share? Check out our [GitHub discussions][discussions] forum!\n\n\nDirectory Structure\n-------------------\nThe organization of this repository is meant to be simple and self-evident at a glance:\n\n  - `books/` --\n    This folder contains the three raytracing books (in HTML), and some supporting material.\n\n  - `images/` --\n    Contains all of the images and figures of the books. Can also be used to compare your\n    results.\n\n  - `style/` --\n    Contains the css for the books and the site.\n\n  - `src/` --\n    Contains the source.\n\n  - `src/<book>/` --\n    Contains the final source code for each book.\n\n\nSource Code\n-----------\n### Intent\nThis repository is not meant to act as its own tutorial. The source is provided so you can compare\nyour work when progressing through the book. We strongly recommend reading and following along with\nthe book to understand the source. Ideally, you'll be developing your own implementation as you go,\nin order to deeply understand how a raytracer works.\n\n### Downloading The Source Code\nThe [GitHub home][] for this project contains all source and documentation associated with the _Ray\nTracing in One Weekend_ book series. To clone or download the source code, see the green \"Clone or\ndownload\" button in the upper right of the project home page.\n\n### Programming Language\nThis book is written in C++, and uses some modern features of C++11. The language and features were\nchosen to be broadly understood by the largest collection of programmers. It is not meant to\nrepresent ideal (or optimized) C++ code.\n\n### Implementations in Other Languages\nThe _Ray Tracing in One Weekend_ series has a long history of implementations in other programming\nlanguages (see [Implementations in Other Languages][implementations]), and across different\noperating systems. Feel free to add your own implementation to the list!\n\n### Branches\nIn general, ongoing development, with all of the latest changes, can be found in the `dev-patch`,\n`dev-minor`, and `dev-major` branches, minor and major changes, depending on the change level and\nrelease in progress. We try to keep CHANGELOG.md up to date, so you can easily browse what's new in\neach development branch. We may from time to time use additional development branches, so stay up to\ndate by reviewing the [CONTRIBUTING][] page.\n\nThe `release` branch contains the latest released (and live) assets. This is the branch from which\nGitHub pages serves up https://raytracing.github.io/.\n\n\nBuilding and Running\n---------------------\nCopies of the source are provided for you to check your work and compare against. If you wish to\nbuild the provided source, this project uses CMake. To build, go to the root of the project\ndirectory and run the following commands to create the debug version of every executable:\n\n    $ cmake -B build\n    $ cmake --build build\n\nYou should run `cmake -B build` whenever you change your project `CMakeLists.txt` file (like when\nadding a new source file).\n\nYou can specify the target with the `--target <program>` option, where the program may be\n`inOneWeekend`, `theNextWeek`, `theRestOfYourLife`, or any of the demonstration programs. By default\n(with no `--target` option), CMake will build all targets.\n\n    $ cmake --build build --target inOneWeekend\n\n### Optimized Builds\nCMake supports Release and Debug configurations. These require slightly different invocations\nacross Windows (MSVC) and Linux/macOS (using GCC or Clang). The following instructions will place\noptimized binaries under `build/Release` and debug binaries (unoptimized and containing debug\nsymbols) under `build/Debug`:\n\nOn Windows:\n\n```shell\n$ cmake -B build\n$ cmake --build build --config Release  # Create release binaries in `build\\Release`\n$ cmake --build build --config Debug    # Create debug binaries in `build\\Debug`\n```\n\nOn Linux / macOS:\n\n```shell\n# Configure and build release binaries under `build/Release`\n$ cmake -B build/Release -DCMAKE_BUILD_TYPE=Release\n$ cmake --build build/Release\n\n# Configure and build debug binaries under `build/Debug`\n$ cmake -B build/Debug -DCMAKE_BUILD_TYPE=Debug\n$ cmake --build build/Debug\n```\n\nWe recommend building and running the `Release` version (especially before the final render) for\nthe fastest results, unless you need the extra debug information provided by the (default) debug\nbuild.\n\n### CMake GUI on Windows\nYou may choose to use the CMake GUI when building on windows.\n\n1. Open CMake GUI on Windows\n2. For \"Where is the source code:\", set to location of the copied directory. For example,\n   `C:\\Users\\Peter\\raytracing.github.io`.\n3. Add the folder \"build\" within the location of the copied directory. For example,\n   `C:\\Users\\Peter\\raytracing.github.io\\build`.\n4. For \"Where to build the binaries\", set this to the newly-created \"build\" directory.\n5. Click \"Configure\".\n6. For \"Specify the generator for this project\", set this to your version of Visual Studio.\n7. Click \"Done\".\n8. Click \"Configure\" again.\n9. Click \"Generate\".\n10. In File Explorer, navigate to build directory and double click the newly-created `.sln` project.\n11. Build in Visual Studio.\n\nIf the project is succesfully cloned and built, you can then use the native terminal of your\noperating system to simply print the image to file.\n\n### Running The Programs\n\nYou can run the programs by executing the binaries placed in the build directory:\n\n    $ build\\Debug\\inOneWeekend > image.ppm\n\nor, run the optimized version (if you compiled with the release configuration):\n\n    $ build\\Release\\inOneWeekend > image.ppm\n\nThe generated PPM file can be viewed directly as a regular computer image, if your operating system\nsupports this image type. If your system doesn't handle PPM files, then you should be able to find\nPPM file viewers online. We like [ImageMagick][].\n\n\nCorrections & Contributions\n----------------------------\nIf you spot errors, have suggested corrections, or would like to help out with the project,\n_**please review the [CONTRIBUTING][] document for the most effective way to proceed.**_\n\n\n\n[book1]:           books/RayTracingInOneWeekend.html\n[book2]:           books/RayTracingTheNextWeek.html\n[book3]:           books/RayTracingTheRestOfYourLife.html\n[CONTRIBUTING]:    CONTRIBUTING.md\n[cover1]:          images/cover/CoverRTW1-small.jpg\n[cover2]:          images/cover/CoverRTW2-small.jpg\n[cover3]:          images/cover/CoverRTW3-small.jpg\n[discussions]:     https://github.com/RayTracing/raytracing.github.io/discussions/\n[GitHub home]:     https://github.com/RayTracing/raytracing.github.io/\n[ImageMagick]:     https://imagemagick.org/\n[implementations]: https://github.com/RayTracing/raytracing.github.io/wiki/Implementations\n[issues]:          https://github.com/RayTracing/raytracing.github.io/issues/\n[PRINTING.md]:     PRINTING.md\n[web1]:            https://raytracing.github.io/books/RayTracingInOneWeekend.html\n[web2]:            https://raytracing.github.io/books/RayTracingTheNextWeek.html\n[web3]:            https://raytracing.github.io/books/RayTracingTheRestOfYourLife.html\n"
        },
        {
          "name": "books",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.png",
          "type": "blob",
          "size": 5.662109375,
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 4.537109375,
          "content": "<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Ray Tracing in One Weekend Series</title>\n<link rel='stylesheet' href='style/website.css'>\n<link rel=\"icon\" type=\"image/png\" href=\"favicon.png\">\n\n\n<div class=\"content\">\n\n  <h1 class=\"title\">Ray Tracing in One Weekend<br>—<br>The Book Series</h1>\n\n  <div class='books'>\n    <a href='books/RayTracingInOneWeekend.html'>\n      <img src='images/cover/CoverRTW1-small.jpg' width='204' height='340' alt='Ray Tracing in One Weekend'>\n    </a>\n\n    <a href='books/RayTracingTheNextWeek.html'>\n      <img src='images/cover/CoverRTW2-small.jpg' width='204' height='340' alt='Ray Tracing: The Next Week'>\n    </a>\n\n    <a href='books/RayTracingTheRestOfYourLife.html'>\n      <img src='images/cover/CoverRTW3-small.jpg' width='204' height='340' alt='Ray Tracing: The Rest Of Your Life'>\n    </a>\n  </div>\n\n\n  <h1 id='books'>Getting the Books</h1>\n\n  <p>The <cite>Ray Tracing in One Weekend</cite> series of books are available to the public for free online. They are\n  released under <a href=\"https://github.com/RayTracing/raytracing.github.io/blob/release/COPYING.txt\">the CC0\n  license</a>. This means that they are as close to public domain as we can get. (While that also frees you from the\n  requirement of providing attribution, it would help the overall project if you could point back to this web site as a\n  service to other users.)\n  \n  <p>Hit any of the book cover images above to begin reading. These books are formatted for printing directly from your\n  browser, where you can also (on most browsers) save them as PDF.\n  \n\n  <h1 id='overview'>Overview</h1>\n\n  <p>I’ve taught many graphics classes over the years. Often I do them in ray tracing, because you are forced to write\n  all the code but you can still get cool images with no API. I decided to adapt my course notes into a how-to, to get\n  you to a cool program as quickly as possible. It will not be a full-featured ray tracer, but it does have the indirect\n  lighting which has made ray tracing a staple in movies. Follow these steps, and the architecture of the ray tracer you\n  produce will be good for extending to a more extensive ray tracer if you get excited and want to pursue that.\n\n  <p>When somebody says “ray tracing” it could mean many things. What I am going to describe is technically a path\n  tracer, and a fairly general one. While the code will be pretty simple (let the computer do the work!) I think you’ll\n  be very happy with the images you can make.\n\n  <p>In <cite>Ray Tracing in One Weekend</cite>, you will build a simple brute-force path tracer. Continuing with\n  <cite>Ray Tracing: The Next Week</cite>, you will add textures, volumes (like fog), rectangles, instances, lights, and\n  support for lots of objects using a bounding volume hierarchy (BVH). Finally, with <cite>Ray Tracing: The Rest Of Your\n  Life</cite>, we'll dive into the math of creating a very serious ray tracer.\n  \n  <p>When you are done, you should be ready to start messing with the many serious commercial ray tracers underlying the\n  movie and product-design industries.\n\n  \n  <h1 id='source'>Source Code</h1>\n\n  <p>Source code for each book may be found in the GitHub repository:\n  <a href=\"https://github.com/RayTracing/raytracing.github.io\">https://github.com/RayTracing/raytracing.github.io</a>.\n  You can also directly download the latest version of the entire project (all three books) as a single archive file:\n  <ul>\n    <li><a href=\"https://github.com/RayTracing/raytracing.github.io/archive/release.zip\">.ZIP format</a>\n    <li><a href=\"https://github.com/RayTracing/raytracing.github.io/archive/release.tar.gz\">.tar.gz format</a>\n  </ul>\n\n\n  <h1 id='issues'>Issues</h1>\n\n  <p>You can browse book suggestions and errors in\n  <a href=\"https://github.com/RayTracing/raytracing.github.io/issues\">GitHub issues</a>. If you have a suggestion or\n  believe you've found an error, please check these issues first (including closed ones) to ensure that it hasn't\n  already been reported. If it hasn't, please create a new entry, describing the problem, book or source file, location,\n  and whatever other information would be helpful in understanding why you think it's a problem. If possible, include\n  ideas about what you think the fix should look like.\n  \n\n  <h1 id='contributing'>Contributing</h1>\n  <p>Interested in helping out? Please read the guidelines in the\n  <a href=\"https://github.com/RayTracing/raytracing.github.io/blob/release/CONTRIBUTING.md\">CONTRIBUTING.md</a> document\n  first. <em>Pull requests without associated issues, or submitted without coordination, are highly likely to be\n  rejected.</em>\n\n</div>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "style",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}