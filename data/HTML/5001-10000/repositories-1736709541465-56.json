{
  "metadata": {
    "timestamp": 1736709541465,
    "page": 56,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dixonandmoe/rellax",
      "stars": 7116,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1455078125,
          "content": ".DS_Store\n\nrellax-build.js\n\n\nnpm-debug.log\ndebug.log\n\n# Latest bootstrap version\nbootstrap.min_v4.css\n\n# demo file with new bootstrap file\ndemo1.html"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Dixon & Moe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.0302734375,
          "content": "# RELLAX\n\n[![NPM Package](https://img.shields.io/npm/v/rellax.svg)](https://www.npmjs.org/package/rellax)\n[![Minified Size](https://img.shields.io/bundlephobia/min/rellax.svg?label=minified)](https://bundlephobia.com/result?p=rellax)\n[![Gzipped Size](https://img.shields.io/bundlephobia/minzip/rellax.svg?label=gzipped)](https://bundlephobia.com/result?p=rellax)\n\nRellax is a buttery smooth, super lightweight, vanilla javascript parallax library. **Update:** Rellax now works on mobile (v1.0.0).\n\n* [Demo Website](https://dixonandmoe.com/rellax/)\n\n\n## Getting Started\n### Using npm\n\n`npm install rellax --save`\n\n### Using yarn\n\n`yarn add rellax`\n\n### CDN\n\n`<script src=\"https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js\"></script>`\n\n### Download Locally\n\nif you're old school like us download and insert `rellax.min.js` in your html\n\n\n```html\n<div class=\"rellax\">\n  I‚Äôm that default chill speed of \"-2\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\">\n  I‚Äôm super fast!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\">\n  I‚Äôm extra slow and smooth\n</div>\n\n<script src=\"https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js\"></script>\n<script>\n  // Accepts any class name\n  var rellax = new Rellax('.rellax');\n</script>\n```\n```html\n<script>\n  // Also can pass in optional settings block\n  var rellax = new Rellax('.rellax', {\n    speed: -2,\n    center: false,\n    wrapper: null,\n    round: true,\n    vertical: true,\n    horizontal: false\n  });\n</script>\n```\n## Features\n\n### Speed\nUse the `data-rellax-speed` attribute to set the speed of a `.rellax` element to something other than the default value (which is `-2`). A negative value will make it move slower than regular scrolling, and a positive value will make it move faster. We recommend keeping the speed between `-10` and `10`.\n\n#### Responsive Speed\nUse responsive speed attributes for breakpoint levels that require a different speed. Defaults to the `data-rellax-speed` setting in unspecified breakpoints.\n```html\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-xs-speed=\"-5\" data-rellax-mobile-speed=\"3\" data-rellax-tablet-speed=\"-8\" data-rellax-desktop-speed=\"1\">\n  I parallax at all different speeds depending on your screen width.\n</div>\n```\n\nPass an array of breakpoints. Each breakpoint value represents the resolution for mobile, tablet, desktop respectively. Checkout the responsiveness of the [`demo`](https://dixonandmoe.com/rellax/)\n```html\n<script>\n  // This is the default setting\n  var rellax = new Rellax('.rellax', {\n    breakpoints: [576, 768, 1201]\n  });\n</script>\n```\n\n\n### Centering\nAfter some fantastic work from [@p-realinho](https://github.com/p-realinho), we just released the ability to center parallax elements in your viewport! We'll be building a nice demo website, but for now check out the tests folder for several examples of how it works.\n\nThere's two ways to implement centering, either on specific elements or as a global option.\n1. #### Element-wise Centering\n- Add the ```data-rellax-percentage=\"0.5\"``` to a specific html element\n```html\n<div class=\"rellax\" data-rellax-percentage=\"0.5\">\n  I‚Äôm that default chill speed of \"-2\" and \"centered\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-percentage=\"0.5\">\n  I‚Äôm super fast!! And super centered!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\" data-rellax-percentage=\"0.5\">\n  I‚Äôm extra slow and smooth, and hella centered.\n</div>\n```\n2. #### Global Centering\n- To activate the center feature in your whole html, add the code your `<script>` tag or JS file:\n```html\n<script>\n  // Center all the things!\n  var rellax = new Rellax('.rellax', {\n    center: true\n  });\n</script>\n```\n\n### Z-index\nIf you want to sort your elements properly in the Z space, you can use the data-rellax-zindex property\n```html\n<div class=\"rellax\">\n  I‚Äôm that default chill speed of \"-2\" and default z-index of 0\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-zindex=\"5\">\n  I‚Äôm super fast!! And on top of the previous element, I'm z-index 5!!\n</div>\n```\n\n### Horizontal Parallax\nHorizontal parallax is disabled by default. You can enable it by passing `horizontal: true` in the settings block.\nThis feature is intended for panoramic style websites, where users scroll horizontally instead of vertically.\nNote that this can work together at the same time with the default vertical parallax. If you do not want this, pass `vertical: false` in the settings block.\n```html\n<script>\n  // Adding horizantal parallax scrolling\n  var rellax = new Rellax('.rellax', {\n    // Activate horizantal scrolling\n    // Turned off by default\n    horizontal: true\n    //Deactivate vertical scrolling\n    vertical: false\n  });\n</script>\n```\n\n### Custom Wrapper\nBy default, the position of parallax elements is determined via the scroll position of the body. Passing in the `wrapper` property will tell Rellax to watch that element instead.\n```html\n<script>\n  // Set wrapper to .custom-element instead of the body\n  var rellax = new Rellax('.rellax', {\n    wrapper: '.custom-element'\n  });\n</script>\n```\n\n### Refresh\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax');\n\n  // Destroy and create again parallax with previous settings\n  rellax.refresh();\n</script>\n```\n\n### Destroy\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax');\n\n  // End Rellax and reset parallax elements to their original positions\n  rellax.destroy();\n</script>\n```\n\n### Callback\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax-blur-card', {\n    callback: function(positions) {\n      // callback every position change\n      console.log(positions);\n    }\n  });\n</script>\n```\n\n### Target node\nInstead of using a className you can use a node, handy when using React and you want to use `refs` instead of `className`.\n```jsx\n<div ref={ref => { this.rellaxRef = ref }}>\n  I‚Äôm that default chill speed of \"-2\"\n</div>\n\nvar rellax = new Rellax(this.rellaxRef)\n```\n\n## In the Wild\nIf you're using Rellax in production, we'd love to list you here! Let us know: moe@dixonandmoe.com\n- [Bowmore Scotch](https://www.bowmore.com/)\n- [Generated Photos](https://generated.photos/)\n- [How Much Does a Website Cost](https://designagency.io/)\n- [Linux Man Pages](https://dashdash.io/)\n- [Laws of UX](https://lawsofux.com/)\n- [Finch](https://finch.io/)\n- [Embedded Payroll](https://robotist.com/embedded-payroll-api)\n- [Product Designer in San Francisco](https://moeamaya.com/)\n- [EthWorks](http://ethworks.io/)\n- [Lorem Ipsum Generator](https://loremipsumgenerator.com/)\n- [Deeson](https://www.deeson.co.uk/)\n\n## Development\nIn the spirit of lightweight javascript, the build processes (thus far) is lightweight also.\n\n1. Open demo.html\n2. Make code changes and refresh browser\n3. Once feature is finished or bug fixed, use [jshint](http://jshint.com/) to lint code\n4. Fix lint issues then use [Google Closure Compiler](https://closure-compiler.appspot.com/home) to minify\n5. üçª\n\n## Changelog\n- 1.7.1: Remove animation on destory [PR](https://github.com/dixonandmoe/rellax/pull/132)\n- 1.7.0: Scroll position set relative to the wrapper [PR](https://github.com/dixonandmoe/rellax/pull/125)\n"
        },
        {
          "name": "absolute.html",
          "type": "blob",
          "size": 5.48828125,
          "content": "<section>\n  <div class=\"absolute above\" style=\"pointer-events: none;\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-offset-5 col-md-1\">\n          <div\n            class=\"md-twitter rellax\"\n            data-rellax-speed=\"1\"\n            data-rellax-xs-speed=\"2\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-1 col-md-2\">\n          <div\n            class=\"bt-green rellax\"\n            data-rellax-speed=\"5\"\n            data-rellax-xs-speed=\"3\"\n            data-rellax-mobile-speed=\"4\"\n            data-rellax-tablet-speed=\"5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-0 col-md-1\">\n          <div\n            class=\"md-dixonandmoe rellax\"\n            data-rellax-speed=\"2\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"1\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-1\">\n          <div\n            class=\"md-facebook rellax\"\n            data-rellax-speed=\"3\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"3\"\n            data-rellax-percentage=\"0.5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div class=\"absolute above\" style=\"pointer-events: none;\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-offset-5 col-md-1\">\n          <div\n            class=\"md-twitter rellax\"\n            data-rellax-speed=\"1\"\n            data-rellax-xs-speed=\"2\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-1 col-md-2\">\n          <div\n            class=\"bt-green rellax\"\n            data-rellax-speed=\"5\"\n            data-rellax-xs-speed=\"3\"\n            data-rellax-mobile-speed=\"4\"\n            data-rellax-tablet-speed=\"5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-0 col-md-1\">\n          <div\n            class=\"md-dixonandmoe rellax\"\n            data-rellax-speed=\"2\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"1\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-1\">\n          <div\n            class=\"md-facebook rellax\"\n            data-rellax-speed=\"3\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"3\"\n            data-rellax-percentage=\"0.5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class=\"section\">\n  <div class=\"absolute above\" style=\"pointer-events: none;\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-offset-1 col-md-2\">\n          <div\n            class=\"bt-green rellax\"\n            data-rellax-speed=\"5\"\n            data-rellax-xs-speed=\"3\"\n            data-rellax-mobile-speed=\"4\"\n            data-rellax-tablet-speed=\"5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-0 col-md-1\">\n          <div\n            class=\"md-dixonandmoe rellax\"\n            data-rellax-speed=\"2\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"1\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-offset-5 col-md-1\">\n          <div\n            class=\"md-twitter rellax\"\n            data-rellax-speed=\"1\"\n            data-rellax-xs-speed=\"2\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"2\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n\n        <div class=\"col-md-1\">\n          <div\n            class=\"md-facebook rellax\"\n            data-rellax-speed=\"3\"\n            data-rellax-xs-speed=\"1\"\n            data-rellax-mobile-speed=\"2\"\n            data-rellax-tablet-speed=\"3\"\n            data-rellax-percentage=\"0.5\"\n            style=\"transform: rotate(45deg);\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"copy\" style=\"margin-top: 200px;margin-bottom: 500px\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-offset-1 col-md-6\">\n          <h4>SERIOUSLY, WHY?!</h4>\n          <p>\n            Come on, how boring is the internet without excessive javascript? We\n            made this library since too many github repos are abandoned (RIP\n            skrollr) or feature creepy. You got some beef or caught us slippin\n            on unit tests, send rants and 10mb gifs to\n            <a href=\"mailto:moe@dixonandmoe.\">moe@dixonandmoe.com</a>\n          </p>\n        </div>\n      </div>\n\n      <div class=\"row\" style=\"margin-top: 140px\">\n        <div class=\"col-md-offset-5 col-md-6\">\n          <h4>BUT ACTUALLY</h4>\n          <p>\n            We've benefitted so much from open source projects that we're\n            actively trying to give back. As designers, we're starting by\n            releasing our own quirky js code.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.3876953125,
          "content": "{\n  \"name\": \"rellax\",\n  \"main\": \"rellax.js\",\n  \"version\": \"1.2.0\",\n  \"homepage\": \"https://dixonandmoe.com/rellax/\",\n  \"authors\": [\n    \"moeamaya <moeamaya@gmail.com>\"\n  ],\n  \"description\": \"vanilla javascript parallax\",\n  \"moduleType\": [],\n  \"keywords\": [\n    \"parallax\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "css",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo.html",
          "type": "blob",
          "size": 25.1396484375,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <title>Vanilla Javascript Parallax Library - Rellax.js</title>\n  <meta name=\"description\" content=\"\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n\n  <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:600,700,900' rel='stylesheet' type='text/css'>\n\n  <!-- Booooooootstrap -->\n  <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n\n\n  <!-- Styles -->\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\n\n  <!--[if lt IE 9]>\n    <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n    <script>window.html5 || document.write('<script src=\"js/vendor/html5shiv.js\"><\\/script>')</script>\n    <![endif]-->\n</head>\n\n<body>\n  <div class=\"grid\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-offset-1 col-md-2\">\n          <div class=\"grid-line\"></div>\n        </div>\n        <div class=\"col-md-2\">\n          <div class=\"grid-line\"></div>\n        </div>\n        <div class=\"col-md-2\">\n          <div class=\"grid-line\"></div>\n        </div>\n        <div class=\"col-md-2\">\n          <div class=\"grid-line\"></div>\n        </div>\n        <div class=\"col-md-2\">\n          <div class=\"grid-line\" style=\"margin-right:-30px;border-right:1px solid #ccc\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"fixed-top rellax\" data-rellax-speed=\"-2\" data-rellax-xs-speed=\"-5\" data-rellax-mobile-speed=\"3\"\n    data-rellax-tablet-speed=\"-8\" style=\"transform: rotate(45deg);\">\n  </div>\n\n  <main class=\"main\">\n    <header>\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-offset-1 col-md-11\">\n            <a href=\"http://dixonandmoe.com/\">\n              <h2>BY DIXON & MOE <span>‚ûî</span></h2>\n            </a>\n            <div class=\"white-block\"></div>\n          </div>\n        </div>\n        <div class=\"title\">\n          <div class=\"row\">\n            <div class=\"col-md-offset-1 col-md-6\">\n              <h1>RELLAX<span>JS</span></h1>\n            </div>\n            <div class=\"col-md-4 text-right\">\n              <a href=\"https://github.com/dixonandmoe/rellax\">GITHUB</a>\n            </div>\n          </div>\n        </div>\n        <div class=\"subtitle\">\n          <div class=\"row\">\n            <div class=\"col-md-offset-1 col-md-2\">\n              <h3>Light (871b gz)</h3>\n            </div>\n            <div class=\"col-md-2\">\n              <h3>Vanilla Javascript</h3>\n            </div>\n            <div class=\"col-md-2\">\n              <h3>Parallax Library</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n\n    <section class=\"section san-francisco\">\n      <div class=\"absolute\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-offset-1 col-md-11\">\n              <h2 class=\"rellax\" data-rellax-speed=\"-3\" data-rellax-xs-speed=\"-5\" data-rellax-mobile-speed=\"4\"\n                data-rellax-tablet-speed=\"-3\">\n                San Francisco<br>California\n              </h2>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"absolute above\">\n        <div class=\"container\">\n          <div class=\"row\">\n\n            <div class=\"col-md-offset-1 col-md-2\">\n              <div class=\"lg-green rellax\" data-rellax-speed=\"2\" data-rellax-xs-speed=\"1\" data-rellax-mobile-speed=\"2\"\n                data-rellax-tablet-speed=\"2\" style=\"transform: rotate(45deg);\">\n              </div>\n              <div class=\"sm-green rellax\" data-rellax-speed=\"5\" data-rellax-xs-speed=\"3\" data-rellax-mobile-speed=\"4\"\n                data-rellax-tablet-speed=\"5\" style=\"transform: rotate(45deg);\">\n              </div>\n            </div>\n\n            <div class=\"col-md-offset-2 col-md-1\">\n              <div class=\"sm-purple rellax\" data-rellax-speed=\"2\" data-rellax-xs-speed=\"1\" data-rellax-mobile-speed=\"2\"\n                data-rellax-tablet-speed=\"2\" style=\"transform: rotate(45deg);\">\n              </div>\n            </div>\n\n            <div class=\"col-md-offset-3 col-md-1\">\n              <div class=\"xs-green rellax\" data-rellax-speed=\"5\" data-rellax-xs-speed=\"3\" data-rellax-mobile-speed=\"4\"\n                data-rellax-tablet-speed=\"5\" style=\"transform: rotate(45deg);\">\n              </div>\n              <div class=\"md-green rellax\" data-rellax-speed=\"1\" data-rellax-xs-speed=\"1\" data-rellax-mobile-speed=\"2\"\n                data-rellax-tablet-speed=\"2\" style=\"transform: rotate(45deg);\">\n              </div>\n            </div>\n\n            <div class=\"col-md-1\">\n              <div class=\"lg-purple rellax\" data-rellax-speed=\"3\" data-rellax-xs-speed=\"2\" data-rellax-mobile-speed=\"2\"\n                data-rellax-tablet-speed=\"3\" style=\"transform: rotate(45deg);\">\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"container\">\n\n        <div class=\"row\">\n          <div class=\"col-md-offset-1 col-md-5\">\n            <div class=\"date\">\n              Incorporated‚Äî<br>\n              1850<br><br>\n              37¬∞47‚Ä≤N 122¬∞25‚Ä≤W\n            </div>\n          </div>\n          <div class=\"col-md-offset-1 col-md-4\">\n            <div class=\"temp\">\n              68¬∞\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n    </section>\n\n    <section class=\"documentation\">\n      <div class=\"container\">\n        <section class=\"row\">\n          <div class=\"col-md-4 sticky\">\n            <div class=\"options\" id=\"optnCard\">\n\n              <p class=\"options-text disabled\">Options</p>\n              <a href=\"#GettingStarted\" class=\"option options-title active\">Getting Started!</a>\n              <a class=\"option options-title\" href=\"#Speed\">Speed</a>\n              <a class=\"option options-title\" href=\"#Centering\">Centering</a>\n              <a class=\"option options-title\" href=\"#ZIndex\">Z-Index</a>\n              <a class=\"option options-title\" href=\"#HorParlx\">Horizontal Scrolling</a>\n              <!-- <span>‚ûî</span> -->\n              <a class=\"option options-title\" href=\"#CustomWrapper\">Custom Wrapper</a>\n              <a class=\"option options-title\" href=\"#TargetNode\">Target Node</a>\n              <p class=\"options-text options-text--margin\">Methods</p>\n              <a class=\"option options-title\" href=\"#Refresh\">Refresh</a>\n              <a class=\"option options-title\" href=\"#Destroy\">Destroy</a>\n\n            </div>\n          </div>\n\n          <div class=\"col-md-8\">\n            <!-- Getting Started -->\n            <section class=\"section\" id=\"GettingStarted\">\n              <div style=\"margin-top: 6rem\">\n\n                <div>\n                  <!-- sect1 -->\n                  <h2 class=\"heading\">Getting Started!</h2>\n                  <div class=\"text-editor\">\n                    <code>\n                        <span class=\"orange\">npm install rellax --save</span>\n                      </code>\n                  </div>\n                  <p style=\"font-weight: lighter;\">\n                    or if you're old school like us, download and insert\n                    <kbd><script src=\"https://cdn.jsdelivr.net/gh/dixonandmoe/rellax@master/rellax.min.js\"></script></kbd> file in your project folder.\n                  </p>\n                </div>\n\n                <div>\n                  <!-- sect2 -->\n                  <h3 class=\"heading\">JavaScript (`accepts any class name`)</h3>\n                  <div class=\"text-editor\">\n                    <code>\n                        <span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax');\n                      </code>\n                  </div>\n                </div>\n\n                <div>\n                  <!-- sect3 -->\n                  <h3 class=\"heading\">Basic Markup (Default Speed: -2)</h3>\n                  <div class=\"text-editor\">\n                    <code>\n                        &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\"&gt;<br>\n                        <span class=\"white\">&nbsp;&nbsp;I‚Äôm slow and smooth</span><br>\n                        &lt;/div&gt;\n                      </code>\n                  </div>\n                </div>\n\n\n                <div>\n                  <!-- sect4 -->\n                  <h3 class=\"heading\">Optional Speed (-10 to +10)</h3>\n                  <div class=\"text-editor\">\n                    <code>\n                        &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">-3</span>\"&gt;<br>\n                        <span class=\"white\">&nbsp;&nbsp;I‚Äôm slow and smooth</span><br>\n                        &lt;/div&gt;\n                        <br />\n                        <br>\n                        &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">7</span>\"&gt;<br>\n                        <span class=\"white\">&nbsp;&nbsp;I‚Äôm super fast!!</span><br>\n                        &lt;/div&gt;\n                        <br />\n                        <br>\n                        &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">-5</span>\"&gt;<br>\n                        <span class=\"white\">&nbsp;&nbsp;I‚Äôm extra slow and smooth</span><br>\n                        &lt;/div&gt;\n                        <br />\n                      </code>\n                  </div>\n\n                </div>\n\n\n              </div>\n            </section>\n\n            <!-- Speed -->\n            <section class=\"section\" id=\"Speed\">\n              <div style=\"margin-top: 6rem\">\n\n                <!-- sect1 -->\n                <h2 class=\"heading\">Speed</h2>\n                <p style=\"font-weight: lighter;\">\n                  Use the <kbd>data-rellax-speed</kbd> attribute to set the speed of a\n                  <kbd>.rellax</kbd> element to something other than the default value\n                  (which is <kbd>-2</kbd>). A negative value will make it move slower\n                  than regular scrolling, and a positive value will make it move faster.\n                  We recommend keeping the speed between <kbd>-10 and +10</kbd>.\n                </p>\n\n\n\n                <div>\n                  <!-- sect2 -->\n                  <h3 class=\"heading\">Responsive Speed</h3 style=\"margin-top: 4rem\">\n                  <p style=\"font-weight: lighter;\">\n                    Use responsive speed attributes for breakpoint levels that require a\n                    different speed. Defaults to the <kbd>data-rellax-speed</kbd> setting\n                    in unspecified breakpoints.\n                  </p>\n\n                  <div class=\"text-editor\">\n                    <code>\n                        &lt;div\n                          <br>&nbsp;&nbsp;<span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\"\n                          <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">7</span>\"\n                          <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-xs-speed</span>=\"<span class=\"green\">-5</span>\"\n                          <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-mobile-speed</span>=\"<span class=\"green\">3</span>\"\n                          <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-tablet-speed</span>=\"<span class=\"green\">-8</span>\"\n                          <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-desktop-speed</span>=\"<span class=\"green\">1</span>\"&gt;<br>\n                        <span class=\"white\">&nbsp;&nbsp;&nbsp;&nbsp;I parallax at all different speeds depending on your screen width.</span><br>\n                        &lt;/div&gt;\n                      </code>\n                  </div>\n\n                  <p style=\"font-weight: lighter;\">\n                    Pass an array of breakpoints. Each breakpoint value represents the\n                    resolution for mobile, tablet, desktop respectively. Checkout the\n                    responsiveness of the demo.\n                  </p>\n                  <div class=\"text-editor\">\n                    <code>\n                        &lt;script&gt;\n                          <br>&nbsp;&nbsp;<span class=\"comment\">//default JS Setting</span>\n                          <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax',\n                          <span class=\"white\">\n                            {<br>\n                              &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"green\">breakpoints:</span>[<span class=\"orange\">576, 768, 1201</span>]\n                            <br>&nbsp;&nbsp;}</span>);\n                          <br />\n                        &lt;/script&gt;\n                      </code>\n                  </div>\n\n                </div>\n\n\n              </div>\n            </section>\n\n            <!-- Centering -->\n            <section class=\"section\" id=\"Centering\">\n              <div style=\"margin-top: 6rem\">\n\n                <!-- sect1 -->\n                <h2 class=\"heading\">Centering</h2>\n                <p style=\"font-weight: lighter;\">\n                  After some fantastic work from <kbd><a style=\"color: orange;\"\n                      href=\"https://github.com/p-realinho\">@p-realinho</a></kbd>, we\n                  just released the ability to center parallax elements in your viewport!\n                  We'll be building a nice demo website, but for now check out the tests\n                  folder for several examples of how it works via our tests folder on\n                  <a href=\"https://github.com/dixonandmoe/rellax\">GitHub</a>.\n                </p>\n                <br>\n                <p style=\"font-weight: lighter;\">\n                  There's two ways to implement centering, either on specific elements or as a global option.\n                </p>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-percentage</span>=\"<span class=\"green\">0.5</span>\"&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm that default chill speed of \"-2\" and \"centered\"</span><br>\n                    &lt;/div&gt;\n                    <br />\n                    <br>\n                    &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">7</span>\"\n                    <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-percentage</span>=\"<span class=\"green\">0.5</span>\"&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm super fast!! And super centered!!</span><br>\n                    &lt;/div&gt;\n                    <br />\n                    <br>\n                    &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">-4</span>\"\n                    <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-percentage</span>=\"<span class=\"green\">0.5</span>\"&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm extra slow and smooth, and hella centered.</span><br>\n                    &lt;/div&gt;\n                    <br />\n                  </code>\n                </div>\n\n                <div>\n                  <!-- sect2 -->\n                  <div style=\"margin-top: 5rem;\">\n                    <div class=\"text-editor\">\n                      <code>\n                        &lt;script&gt;\n                        <br>&nbsp;&nbsp;<span class=\"comment\">//default JS Setting</span>\n                        <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax',\n                        <span class=\"white\">\n                          {<br>\n                        &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"green\">center:</span><span class=\"orange\">true</span>\n                        <br>&nbsp;&nbsp;}</span>);\n                        <br />\n                        &lt;/script&gt;\n                      </code>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <!-- Z-index -->\n            <section class=\"section\" id=\"ZIndex\">\n              <div style=\"margin-top: 6rem\">\n\n                <!-- sect1 -->\n                <h2 class=\"heading\">Z-Index</h2>\n                <p style=\"font-weight: lighter;\">\n                  If you want to sort your elements properly in the Z space,\n                  you can use the <br><kbd>data-rellax-zindex</kbd> property.\n                </p>\n                <br>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\"&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm that default chill speed of \"-2\" and default &nbsp;&nbsp;z-index of 0</span><br>\n                    &lt;/div&gt;\n                    <br />\n                    <br>\n                    &lt;div <span class=\"purple\">class</span>=\"<span class=\"green\">rellax</span>\" <span class=\"purple\">data-rellax-speed</span>=\"<span class=\"green\">7</span>\"\n                    <br>&nbsp;&nbsp;<span class=\"purple\">data-rellax-zindex</span>=\"<span class=\"green\">5</span>\"&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm super fast!! And on top of the previous &nbsp;&nbsp;element, I'm z-index 5!!</span><br>\n                    &lt;/div&gt;\n                    <br />\n                  </code>\n                </div>\n              </div>\n            </section>\n\n            <!-- Horizontal Parallax -->\n            <section class=\"section\" id=\"HorParlx\">\n              <div style=\"margin-top: 6rem\">\n                <!-- sect1 -->\n                <h2 class=\"heading\">Horizontal Parallax</h2>\n                <p style=\"font-weight: lighter;\">\n                  Horizontal parallax is disabled by default. You can enable it by passing\n                  <br><kbd><span class=\"orange\">horizontal: true</span></kbd> in the settings\n                  block. This feature is intended for panoramic style websites, where users\n                  scroll horizontally instead of vertically. Note that this can work together\n                  at the same time with the default vertical parallax. If you do not want this,\n                  pass <kbd><span class=\"orange\">vertical: false</span></kbd>.\n                </p>\n                <br>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;script&gt;\n                      <br>&nbsp;&nbsp;<span class=\"comment\">//Enable Horizontal Parallax Scrolling</span>\n                      <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax',\n                      <span class=\"white\">\n                        {<br>\n                          &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"green\">horizontal:</span><span class=\"orange\">true</span>\n                          </br ><br>&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"comment\">//Disable vertical Parallax Scrolling</span>\n                          &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"green\">vertical:</span><span class=\"orange\">false</span>\n                        <br>&nbsp;&nbsp;}</span>);\n                      <br />\n                    &lt;/script&gt;\n                  </code>\n                </div>\n\n              </div>\n            </section>\n\n            <!-- Custom Wrapper -->\n            <section class=\"section\" id=\"CustomWrapper\">\n              <div style=\"margin-top: 6rem\">\n\n                <!-- sect1 -->\n                <h2 class=\"heading\">Custom Wrapper</h2>\n                <p style=\"font-weight: lighter;\">\n                  By default, the position of parallax elements is determined via the scroll\n                  position of the body. Passing in the <kbd><span class=\"orange\">wrapper</span></kbd>\n                  property in the settings block will tell Rellax to watch that element instead.\n                </p>\n                <br>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;script&gt;\n                      <br>&nbsp;&nbsp;<span class=\"comment\">//Set wrapper to .custom-element instead of the body</span>\n                      <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax',\n                      <span class=\"white\">\n                        {<br>\n                          &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"green\">wrapper:</span><span class=\"orange\">'.custom-element'</span>\n                        <br>&nbsp;&nbsp;}</span>);\n                      <br />\n                    &lt;/script&gt;\n                  </code>\n                </div>\n              </div>\n            </section>\n\n            <!-- Target Node -->\n            <section class=\"section\" id=\"TargetNode\">\n              <div style=\"margin-top: 6rem\">\n                <!-- sect1 -->\n\n                <h2 class=\"heading\">Target Node</h2>\n                <p style=\"font-weight: lighter;\">\n                  Instead of using a className you can use a node, handy when using\n                  React and you want to use <kbd><span class=\"orange\">refs</span></kbd>\n                  instead of <kbd><span class=\"orange\">className</span></kbd>\n                </p>\n                <br>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;div <span class=\"purple\">ref</span> = {<span class=\"purple\">ref => </span>{ this<span class=\"green\">.rellaxRef </span> = <span class=\"purple\">ref</span>}}&gt;<br>\n                    <span class=\"white\">&nbsp;&nbsp;I‚Äôm that default chill speed of \"-2\"</span><br>\n                    &lt;/div&gt;\n                  </code>\n                  <br />\n                </div>\n\n                <div style=\"margin-top: 5rem;\">\n                  <div class=\"text-editor\">\n                    <code>\n                      &lt;script&gt;\n                      <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>(this<span class=\"orange\">.rellaxRef</span>);\n                      <br>\n                      &lt;/script&gt;\n                    </code>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <!-- Refresh -->\n            <section class=\"section\" id=\"Refresh\">\n              <div style=\"margin-top: 6rem\">\n                <!-- sect1 -->\n\n                <h2 class=\"heading\">Refresh</h2>\n\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;script&gt;\n                      <br>&nbsp;&nbsp;<span class=\"comment\">// Start Rellax</span>\n                      <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax');\n                      <br />\n                      <br>&nbsp;&nbsp;<span class=\"comment\">// Destroy and create again parallax with previous settings</span>\n                        <br>&nbsp;&nbsp;rellax<span class=\"orange\">.refresh();</span>\n                        <br>\n                    &lt;/script&gt;\n                  </code>\n                </div>\n              </div>\n            </section>\n\n            <!-- Destroy -->\n            <section class=\"section\" id=\"Destroy\">\n              <div style=\"margin-top: 6rem\">\n                <!-- sect1 -->\n                <h2 class=\"heading\">Destroy</h2>\n                <div class=\"text-editor\">\n                  <code>\n                    &lt;script&gt;\n                      <br>&nbsp;&nbsp;<span class=\"comment\">// Start Rellax</span>\n                      <br>&nbsp;&nbsp;<span class=\"purple\">var</span> rellax = <span class=\"green\">new</span> <span class=\"white\">Rellax</span>('.rellax');\n                      <br />\n                      <br>&nbsp;&nbsp;<span class=\"comment\">// End Rellax and reset parallax elements to their original positions</span>\n                        <br>&nbsp;&nbsp;rellax<span class=\"orange\">.refresh();</span>\n                        <br>\n                    &lt;/script&gt;\n                  </code>\n                </div>\n              </div>\n            </section>\n\n          </div>\n        </section>\n      </div>\n    </section>\n\n    <section class=\"share\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-offset-1 col-md-3\">\n            <a class=\"dam\" href=\"http://dixonandmoe.com/\">Dixon &amp; Moe</a>\n          </div>\n          <div class=\"col-md-offset-3 col-md-2\">\n            <a href=\"https://www.facebook.com/sharer/sharer.php?u=http://dixonandmoe.com/rellax/\">Share\n              <span>‚ûî</span></a>\n          </div>\n          <div class=\"col-md-offset-0 col-md-2\">\n            <a href=\"https://twitter.com/share?url=http://dixonandmoe.com/rellax/\">Tweet <span>‚ûî</span></a>\n          </div>\n        </div>\n      </div>\n    </section>\n\n  </main>\n\n\n  <!-- javascript -->\n  <script type=\"text/javascript\" src=\"rellax.js\"></script>\n  <script type=\"text/javascript\" src=\"option.js\"></script>\n  <script>\n    var rellax = new Rellax('.rellax', {\n      // center: true\n      callback: function (position) {\n        // callback every position change\n        console.log(position);\n      },\n      breakpoints: [576, 768, 1024]\n    });\n  </script>\n\n\n\n</body>\n\n</html>"
        },
        {
          "name": "option.js",
          "type": "blob",
          "size": 0.6943359375,
          "content": "// ============================================================\n// To activate the active class on the links\n// ============================================================\n// Get the options menu element\nvar optnCard = document.getElementById(\"optnCard\");\n\n// Get all links with class=\"option\" inside the menu\nvar optns = optnCard.getElementsByClassName(\"option\");\n\n// Loop through the links and add the active class to the current/clicked link\nfor (var i = 0; i < optns.length; i++) {\n  optns[i].addEventListener(\"click\", function() {\n    var current = document.getElementsByClassName(\"active\");\n    current[0].className = current[0].className.replace(\" active\", \"\");\n    this.className += \" active\";\n  });\n}\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.068359375,
          "content": "{\n  \"name\": \"rellax\",\n  \"version\": \"1.12.1\",\n  \"lockfileVersion\": 1\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.556640625,
          "content": "{\n  \"name\": \"rellax\",\n  \"version\": \"1.12.1\",\n  \"description\": \"Lightweight, vanilla javascript parallax library\",\n  \"main\": \"rellax.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/dixonandmoe/rellax.git\"\n  },\n  \"keywords\": [\n    \"parallax\"\n  ],\n  \"author\": \"Moe Amaya <moe@dixonandmoe.com> (https://dixonandmoe.com)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/dixonandmoe/rellax/issues\"\n  },\n  \"homepage\": \"https://dixonandmoe.com/rellax/\"\n}\n"
        },
        {
          "name": "rellax.js",
          "type": "blob",
          "size": 18.697265625,
          "content": "\n// ------------------------------------------\n// Rellax.js\n// Buttery smooth parallax library\n// Copyright (c) 2016 Moe Amaya (@moeamaya)\n// MIT license\n//\n// Thanks to Paraxify.js and Jaime Cabllero\n// for parallax concepts\n// ------------------------------------------\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Rellax = factory();\n  }\n}(typeof window !== \"undefined\" ? window : global, function () {\n  var Rellax = function(el, options){\n    \"use strict\";\n\n    var self = Object.create(Rellax.prototype);\n\n    var posY = 0;\n    var screenY = 0;\n    var posX = 0;\n    var screenX = 0;\n    var blocks = [];\n    var pause = true;\n\n    // check what requestAnimationFrame to use, and if\n    // it's not supported, use the onscroll event\n    var loop = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback){ return setTimeout(callback, 1000 / 60); };\n\n    // store the id for later use\n    var loopId = null;\n\n    // Test via a getter in the options object to see if the passive property is accessed\n    var supportsPassive = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"testPassive\", null, opts);\n      window.removeEventListener(\"testPassive\", null, opts);\n    } catch (e) {}\n\n    // check what cancelAnimation method to use\n    var clearLoop = window.cancelAnimationFrame || window.mozCancelAnimationFrame || clearTimeout;\n\n    // check which transform property to use\n    var transformProp = window.transformProp || (function(){\n        var testEl = document.createElement('div');\n        if (testEl.style.transform === null) {\n          var vendors = ['Webkit', 'Moz', 'ms'];\n          for (var vendor in vendors) {\n            if (testEl.style[ vendors[vendor] + 'Transform' ] !== undefined) {\n              return vendors[vendor] + 'Transform';\n            }\n          }\n        }\n        return 'transform';\n      })();\n\n    // Default Settings\n    self.options = {\n      speed: -2,\n\t    verticalSpeed: null,\n\t    horizontalSpeed: null,\n      breakpoints: [576, 768, 1201],\n      center: false,\n      wrapper: null,\n      relativeToWrapper: false,\n      round: true,\n      vertical: true,\n      horizontal: false,\n      verticalScrollAxis: \"y\",\n      horizontalScrollAxis: \"x\",\n      callback: function() {},\n    };\n\n    // User defined options (might have more in the future)\n    if (options){\n      Object.keys(options).forEach(function(key){\n        self.options[key] = options[key];\n      });\n    }\n\n    function validateCustomBreakpoints () {\n      if (self.options.breakpoints.length === 3 && Array.isArray(self.options.breakpoints)) {\n        var isAscending = true;\n        var isNumerical = true;\n        var lastVal;\n        self.options.breakpoints.forEach(function (i) {\n          if (typeof i !== 'number') isNumerical = false;\n          if (lastVal !== null) {\n            if (i < lastVal) isAscending = false;\n          }\n          lastVal = i;\n        });\n        if (isAscending && isNumerical) return;\n      }\n      // revert defaults if set incorrectly\n      self.options.breakpoints = [576, 768, 1201];\n      console.warn(\"Rellax: You must pass an array of 3 numbers in ascending order to the breakpoints option. Defaults reverted\");\n    }\n\n    if (options && options.breakpoints) {\n      validateCustomBreakpoints();\n    }\n\n    // By default, rellax class\n    if (!el) {\n      el = '.rellax';\n    }\n\n    // check if el is a className or a node\n    var elements = typeof el === 'string' ? document.querySelectorAll(el) : [el];\n\n    // Now query selector\n    if (elements.length > 0) {\n      self.elems = elements;\n    }\n\n    // The elements don't exist\n    else {\n      console.warn(\"Rellax: The elements you're trying to select don't exist.\");\n      return;\n    }\n\n    // Has a wrapper and it exists\n    if (self.options.wrapper) {\n      if (!self.options.wrapper.nodeType) {\n        var wrapper = document.querySelector(self.options.wrapper);\n\n        if (wrapper) {\n          self.options.wrapper = wrapper;\n        } else {\n          console.warn(\"Rellax: The wrapper you're trying to use doesn't exist.\");\n          return;\n        }\n      }\n    }\n\n    // set a placeholder for the current breakpoint\n    var currentBreakpoint;\n\n    // helper to determine current breakpoint\n    var getCurrentBreakpoint = function (w) {\n      var bp = self.options.breakpoints;\n      if (w < bp[0]) return 'xs';\n      if (w >= bp[0] && w < bp[1]) return 'sm';\n      if (w >= bp[1] && w < bp[2]) return 'md';\n      return 'lg';\n    };\n\n    // Get and cache initial position of all elements\n    var cacheBlocks = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        var block = createBlock(self.elems[i]);\n        blocks.push(block);\n      }\n    };\n\n\n    // Let's kick this script off\n    // Build array for cached element values\n    var init = function() {\n      for (var i = 0; i < blocks.length; i++){\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      blocks = [];\n\n      screenY = window.innerHeight;\n      screenX = window.innerWidth;\n      currentBreakpoint = getCurrentBreakpoint(screenX);\n\n      setPosition();\n\n      cacheBlocks();\n\n      animate();\n\n      // If paused, unpause and set listener for window resizing events\n      if (pause) {\n        window.addEventListener('resize', init);\n        pause = false;\n        // Start the loop\n        update();\n      }\n    };\n\n    // We want to cache the parallax blocks'\n    // values: base, top, height, speed\n    // el: is dom object, return: el cache values\n    var createBlock = function(el) {\n      var dataPercentage = el.getAttribute( 'data-rellax-percentage' );\n      var dataSpeed = el.getAttribute( 'data-rellax-speed' );\n      var dataXsSpeed = el.getAttribute( 'data-rellax-xs-speed' );\n      var dataMobileSpeed = el.getAttribute( 'data-rellax-mobile-speed' );\n      var dataTabletSpeed = el.getAttribute( 'data-rellax-tablet-speed' );\n      var dataDesktopSpeed = el.getAttribute( 'data-rellax-desktop-speed' );\n      var dataVerticalSpeed = el.getAttribute('data-rellax-vertical-speed');\n      var dataHorizontalSpeed = el.getAttribute('data-rellax-horizontal-speed');\n      var dataVerticalScrollAxis = el.getAttribute('data-rellax-vertical-scroll-axis');\n      var dataHorizontalScrollAxis = el.getAttribute('data-rellax-horizontal-scroll-axis');\n      var dataZindex = el.getAttribute( 'data-rellax-zindex' ) || 0;\n      var dataMin = el.getAttribute( 'data-rellax-min' );\n      var dataMax = el.getAttribute( 'data-rellax-max' );\n      var dataMinX = el.getAttribute('data-rellax-min-x');\n      var dataMaxX = el.getAttribute('data-rellax-max-x');\n      var dataMinY = el.getAttribute('data-rellax-min-y');\n      var dataMaxY = el.getAttribute('data-rellax-max-y');\n      var mapBreakpoints;\n      var breakpoints = true;\n\n      if (!dataXsSpeed && !dataMobileSpeed && !dataTabletSpeed && !dataDesktopSpeed) {\n        breakpoints = false;\n      } else {\n        mapBreakpoints = {\n          'xs': dataXsSpeed,\n          'sm': dataMobileSpeed,\n          'md': dataTabletSpeed,\n          'lg': dataDesktopSpeed\n        };\n      }\n\n      // initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)\n      // ensures elements are positioned based on HTML layout.\n      //\n      // If the element has the percentage attribute, the posY and posX needs to be\n      // the current scroll position's value, so that the elements are still positioned based on HTML layout\n      var wrapperPosY = self.options.wrapper ? self.options.wrapper.scrollTop : (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);\n      // If the option relativeToWrapper is true, use the wrappers offset to top, subtracted from the current page scroll.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);\n        wrapperPosY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n      var posY = self.options.vertical ? ( dataPercentage || self.options.center ? wrapperPosY : 0 ) : 0;\n      var posX = self.options.horizontal ? ( dataPercentage || self.options.center ? self.options.wrapper ? self.options.wrapper.scrollLeft : (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft) : 0 ) : 0;\n\n      var blockTop = posY + el.getBoundingClientRect().top;\n      var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;\n\n      var blockLeft = posX + el.getBoundingClientRect().left;\n      var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth;\n\n      // apparently parallax equation everyone uses\n      var percentageY = dataPercentage ? dataPercentage : (posY - blockTop + screenY) / (blockHeight + screenY);\n      var percentageX = dataPercentage ? dataPercentage : (posX - blockLeft + screenX) / (blockWidth + screenX);\n      if(self.options.center){ percentageX = 0.5; percentageY = 0.5; }\n\n      // Optional individual block speed as data attr, otherwise global speed\n      var speed = (breakpoints && mapBreakpoints[currentBreakpoint] !== null) ? Number(mapBreakpoints[currentBreakpoint]) : (dataSpeed ? dataSpeed : self.options.speed);\n      var verticalSpeed = dataVerticalSpeed ? dataVerticalSpeed : self.options.verticalSpeed;\n      var horizontalSpeed = dataHorizontalSpeed ? dataHorizontalSpeed : self.options.horizontalSpeed;\n\n      // Optional individual block movement axis direction as data attr, otherwise global movement direction\n      var verticalScrollAxis = dataVerticalScrollAxis ? dataVerticalScrollAxis : self.options.verticalScrollAxis;\n      var horizontalScrollAxis = dataHorizontalScrollAxis ? dataHorizontalScrollAxis : self.options.horizontalScrollAxis;\n\n      var bases = updatePosition(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed);\n\n      // ~~Store non-translate3d transforms~~\n      // Store inline styles and extract transforms\n      var style = el.style.cssText;\n      var transform = '';\n\n      // Check if there's an inline styled transform\n      var searchResult = /transform\\s*:/i.exec(style);\n      if (searchResult) {\n        // Get the index of the transform\n        var index = searchResult.index;\n\n        // Trim the style to the transform point and get the following semi-colon index\n        var trimmedStyle = style.slice(index);\n        var delimiter = trimmedStyle.indexOf(';');\n\n        // Remove \"transform\" string and save the attribute\n        if (delimiter) {\n          transform = \" \" + trimmedStyle.slice(11, delimiter).replace(/\\s/g,'');\n        } else {\n          transform = \" \" + trimmedStyle.slice(11).replace(/\\s/g,'');\n        }\n      }\n\n      return {\n        baseX: bases.x,\n        baseY: bases.y,\n        top: blockTop,\n        left: blockLeft,\n        height: blockHeight,\n        width: blockWidth,\n        speed: speed,\n        verticalSpeed: verticalSpeed,\n        horizontalSpeed: horizontalSpeed,\n        verticalScrollAxis: verticalScrollAxis,\n        horizontalScrollAxis: horizontalScrollAxis,\n        style: style,\n        transform: transform,\n        zindex: dataZindex,\n        min: dataMin,\n        max: dataMax,\n        minX: dataMinX,\n        maxX: dataMaxX,\n        minY: dataMinY,\n        maxY: dataMaxY\n      };\n    };\n\n    // set scroll position (posY, posX)\n    // side effect method is not ideal, but okay for now\n    // returns true if the scroll changed, false if nothing happened\n    var setPosition = function() {\n      var oldY = posY;\n      var oldX = posX;\n\n      posY = self.options.wrapper ? self.options.wrapper.scrollTop : (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n      posX = self.options.wrapper ? self.options.wrapper.scrollLeft : (document.documentElement || document.body.parentNode || document.body).scrollLeft || window.pageXOffset;\n      // If option relativeToWrapper is true, use relative wrapper value instead.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n        posY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n\n\n      if (oldY != posY && self.options.vertical) {\n        // scroll changed, return true\n        return true;\n      }\n\n      if (oldX != posX && self.options.horizontal) {\n        // scroll changed, return true\n        return true;\n      }\n\n      // scroll did not change\n      return false;\n    };\n\n    // Ahh a pure function, gets new transform value\n    // based on scrollPosition and speed\n    // Allow for decimal pixel values\n    var updatePosition = function(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed) {\n      var result = {};\n      var valueX = ((horizontalSpeed ? horizontalSpeed : speed) * (100 * (1 - percentageX)));\n      var valueY = ((verticalSpeed ? verticalSpeed : speed) * (100 * (1 - percentageY)));\n\n      result.x = self.options.round ? Math.round(valueX) : Math.round(valueX * 100) / 100;\n      result.y = self.options.round ? Math.round(valueY) : Math.round(valueY * 100) / 100;\n\n      return result;\n    };\n\n    // Remove event listeners and loop again\n    var deferredUpdate = function() {\n      window.removeEventListener('resize', deferredUpdate);\n      window.removeEventListener('orientationchange', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : window).removeEventListener('scroll', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : document).removeEventListener('touchmove', deferredUpdate);\n\n      // loop again\n      loopId = loop(update);\n    };\n\n    // Loop\n    var update = function() {\n      if (setPosition() && pause === false) {\n        animate();\n\n        // loop again\n        loopId = loop(update);\n      } else {\n        loopId = null;\n\n        // Don't animate until we get a position updating event\n        window.addEventListener('resize', deferredUpdate);\n        window.addEventListener('orientationchange', deferredUpdate);\n        (self.options.wrapper ? self.options.wrapper : window).addEventListener('scroll', deferredUpdate, supportsPassive ? { passive: true } : false);\n        (self.options.wrapper ? self.options.wrapper : document).addEventListener('touchmove', deferredUpdate, supportsPassive ? { passive: true } : false);\n      }\n    };\n\n    // Transform3d on parallax element\n    var animate = function() {\n      var positions;\n      for (var i = 0; i < self.elems.length; i++){\n        // Determine relevant movement directions\n        var verticalScrollAxis = blocks[i].verticalScrollAxis.toLowerCase();\n        var horizontalScrollAxis = blocks[i].horizontalScrollAxis.toLowerCase();\n        var verticalScrollX = verticalScrollAxis.indexOf(\"x\") != -1 ? posY : 0;\n        var verticalScrollY = verticalScrollAxis.indexOf(\"y\") != -1 ? posY : 0;\n        var horizontalScrollX = horizontalScrollAxis.indexOf(\"x\") != -1 ? posX : 0;\n        var horizontalScrollY = horizontalScrollAxis.indexOf(\"y\") != -1 ? posX : 0;\n\n        var percentageY = ((verticalScrollY + horizontalScrollY - blocks[i].top + screenY) / (blocks[i].height + screenY));\n        var percentageX = ((verticalScrollX + horizontalScrollX - blocks[i].left + screenX) / (blocks[i].width + screenX));\n\n        // Subtracting initialize value, so element stays in same spot as HTML\n        positions = updatePosition(percentageX, percentageY, blocks[i].speed, blocks[i].verticalSpeed, blocks[i].horizontalSpeed);\n        var positionY = positions.y - blocks[i].baseY;\n        var positionX = positions.x - blocks[i].baseX;\n\n        // The next two \"if\" blocks go like this:\n        // Check if a limit is defined (first \"min\", then \"max\");\n        // Check if we need to change the Y or the X\n        // (Currently working only if just one of the axes is enabled)\n        // Then, check if the new position is inside the allowed limit\n        // If so, use new position. If not, set position to limit.\n\n        // Check if a min limit is defined\n        if (blocks[i].min !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY <= blocks[i].min ? blocks[i].min : positionY;\n          }\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX <= blocks[i].min ? blocks[i].min : positionX;\n          }\n        }\n\n        // Check if directional min limits are defined\n        if (blocks[i].minY != null) {\n            positionY = positionY <= blocks[i].minY ? blocks[i].minY : positionY;\n        }\n        if (blocks[i].minX != null) {\n            positionX = positionX <= blocks[i].minX ? blocks[i].minX : positionX;\n        }\n\n        // Check if a max limit is defined\n        if (blocks[i].max !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY >= blocks[i].max ? blocks[i].max : positionY;\n          }\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX >= blocks[i].max ? blocks[i].max : positionX;\n          }\n        }\n\n        // Check if directional max limits are defined\n        if (blocks[i].maxY != null) {\n            positionY = positionY >= blocks[i].maxY ? blocks[i].maxY : positionY;\n        }\n        if (blocks[i].maxX != null) {\n            positionX = positionX >= blocks[i].maxX ? blocks[i].maxX : positionX;\n        }\n\n        var zindex = blocks[i].zindex;\n\n        // Move that element\n        // (Set the new translation and append initial inline transforms.)\n        var translate = 'translate3d(' + (self.options.horizontal ? positionX : '0') + 'px,' + (self.options.vertical ? positionY : '0') + 'px,' + zindex + 'px) ' + blocks[i].transform;\n        self.elems[i].style[transformProp] = translate;\n      }\n      self.options.callback(positions);\n    };\n\n    self.destroy = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      // Remove resize event listener if not pause, and pause\n      if (!pause) {\n        window.removeEventListener('resize', init);\n        pause = true;\n      }\n\n      // Clear the animation loop to prevent possible memory leak\n      clearLoop(loopId);\n      loopId = null;\n    };\n\n    // Init\n    init();\n\n    // Allow to recalculate the initial values whenever we want\n    self.refresh = init;\n\n    return self;\n  };\n  return Rellax;\n}));\n"
        },
        {
          "name": "rellax.min.js",
          "type": "blob",
          "size": 6.876953125,
          "content": "'use strict';(function(C,g){\"function\"===typeof define&&define.amd?define([],g):\"object\"===typeof module&&module.exports?module.exports=g():C.Rellax=g()})(\"undefined\"!==typeof window?window:global,function(){var C=function(g,q){function P(){if(3===a.options.breakpoints.length&&Array.isArray(a.options.breakpoints)){var d=!0,c=!0,b;a.options.breakpoints.forEach(function(f){\"number\"!==typeof f&&(c=!1);null!==b&&f<b&&(d=!1);b=f});if(d&&c)return}a.options.breakpoints=[576,768,1201];console.warn(\"Rellax: You must pass an array of 3 numbers in ascending order to the breakpoints option. Defaults reverted\")}\nvar a=Object.create(C.prototype),p=0,r=0,t=0,k=0,e=[],u=!0,J=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||function(d){return setTimeout(d,1E3/60)},v=null,G=!1;try{var K=Object.defineProperty({},\"passive\",{get:function(){G=!0}});window.addEventListener(\"testPassive\",null,K);window.removeEventListener(\"testPassive\",null,K)}catch(d){}var Q=window.cancelAnimationFrame||window.mozCancelAnimationFrame||\nclearTimeout,R=window.transformProp||function(){var d=document.createElement(\"div\");if(null===d.style.transform){var c=[\"Webkit\",\"Moz\",\"ms\"],b;for(b in c)if(void 0!==d.style[c[b]+\"Transform\"])return c[b]+\"Transform\"}return\"transform\"}();a.options={speed:-2,verticalSpeed:null,horizontalSpeed:null,breakpoints:[576,768,1201],center:!1,wrapper:null,relativeToWrapper:!1,round:!0,vertical:!0,horizontal:!1,verticalScrollAxis:\"y\",horizontalScrollAxis:\"x\",callback:function(){}};q&&Object.keys(q).forEach(function(d){a.options[d]=\nq[d]});q&&q.breakpoints&&P();g||=\".rellax\";g=\"string\"===typeof g?document.querySelectorAll(g):[g];if(0<g.length){a.elems=g;if(a.options.wrapper&&!a.options.wrapper.nodeType)if(g=document.querySelector(a.options.wrapper))a.options.wrapper=g;else{console.warn(\"Rellax: The wrapper you're trying to use doesn't exist.\");return}var H,F=function(){for(var d=0;d<e.length;d++)a.elems[d].style.cssText=e[d].style;e=[];r=window.innerHeight;k=window.innerWidth;d=a.options.breakpoints;H=k<d[0]?\"xs\":k>=d[0]&&k<\nd[1]?\"sm\":k>=d[1]&&k<d[2]?\"md\":\"lg\";L();for(d=0;d<a.elems.length;d++){var c=void 0,b=a.elems[d],f=b.getAttribute(\"data-rellax-percentage\"),l=b.getAttribute(\"data-rellax-speed\"),h=b.getAttribute(\"data-rellax-xs-speed\"),w=b.getAttribute(\"data-rellax-mobile-speed\"),x=b.getAttribute(\"data-rellax-tablet-speed\"),y=b.getAttribute(\"data-rellax-desktop-speed\"),z=b.getAttribute(\"data-rellax-vertical-speed\"),A=b.getAttribute(\"data-rellax-horizontal-speed\"),D=b.getAttribute(\"data-rellax-vertical-scroll-axis\"),\nE=b.getAttribute(\"data-rellax-horizontal-scroll-axis\"),S=b.getAttribute(\"data-rellax-zindex\")||0,T=b.getAttribute(\"data-rellax-min\"),U=b.getAttribute(\"data-rellax-max\"),V=b.getAttribute(\"data-rellax-min-x\"),W=b.getAttribute(\"data-rellax-max-x\"),X=b.getAttribute(\"data-rellax-min-y\"),Y=b.getAttribute(\"data-rellax-max-y\"),m=!0;h||w||x||y?c={xs:h,sm:w,md:x,lg:y}:m=!1;h=a.options.wrapper?a.options.wrapper.scrollTop:window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop;a.options.relativeToWrapper&&\n(h=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop)-a.options.wrapper.offsetTop);var B=a.options.vertical?f||a.options.center?h:0:0,M=a.options.horizontal?f||a.options.center?a.options.wrapper?a.options.wrapper.scrollLeft:window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft:0:0;h=B+b.getBoundingClientRect().top;w=b.clientHeight||b.offsetHeight||b.scrollHeight;x=M+b.getBoundingClientRect().left;y=b.clientWidth||b.offsetWidth||b.scrollWidth;\nB=f?f:(B-h+r)/(w+r);f=f?f:(M-x+k)/(y+k);a.options.center&&(B=f=.5);c=m&&null!==c[H]?Number(c[H]):l?l:a.options.speed;z=z?z:a.options.verticalSpeed;A=A?A:a.options.horizontalSpeed;D=D?D:a.options.verticalScrollAxis;E=E?E:a.options.horizontalScrollAxis;l=N(f,B,c,z,A);b=b.style.cssText;m=\"\";if(f=/transform\\s*:/i.exec(b))m=b.slice(f.index),m=(f=m.indexOf(\";\"))?\" \"+m.slice(11,f).replace(/\\s/g,\"\"):\" \"+m.slice(11).replace(/\\s/g,\"\");e.push({baseX:l.x,baseY:l.y,top:h,left:x,height:w,width:y,speed:c,verticalSpeed:z,\nhorizontalSpeed:A,verticalScrollAxis:D,horizontalScrollAxis:E,style:b,transform:m,zindex:S,min:T,max:U,minX:V,maxX:W,minY:X,maxY:Y})}O();u&&(window.addEventListener(\"resize\",F),u=!1,I())},L=function(){var d=p,c=t;p=a.options.wrapper?a.options.wrapper.scrollTop:(document.documentElement||document.body.parentNode||document.body).scrollTop||window.pageYOffset;t=a.options.wrapper?a.options.wrapper.scrollLeft:(document.documentElement||document.body.parentNode||document.body).scrollLeft||window.pageXOffset;\na.options.relativeToWrapper&&(p=((document.documentElement||document.body.parentNode||document.body).scrollTop||window.pageYOffset)-a.options.wrapper.offsetTop);return d!=p&&a.options.vertical||c!=t&&a.options.horizontal?!0:!1},N=function(d,c,b,f,l){var h={};d=100*(l?l:b)*(1-d);c=100*(f?f:b)*(1-c);h.x=a.options.round?Math.round(d):Math.round(100*d)/100;h.y=a.options.round?Math.round(c):Math.round(100*c)/100;return h},n=function(){window.removeEventListener(\"resize\",n);window.removeEventListener(\"orientationchange\",\nn);(a.options.wrapper?a.options.wrapper:window).removeEventListener(\"scroll\",n);(a.options.wrapper?a.options.wrapper:document).removeEventListener(\"touchmove\",n);v=J(I)},I=function(){L()&&!1===u?(O(),v=J(I)):(v=null,window.addEventListener(\"resize\",n),window.addEventListener(\"orientationchange\",n),(a.options.wrapper?a.options.wrapper:window).addEventListener(\"scroll\",n,G?{passive:!0}:!1),(a.options.wrapper?a.options.wrapper:document).addEventListener(\"touchmove\",n,G?{passive:!0}:!1))},O=function(){for(var d,\nc=0;c<a.elems.length;c++){var b=e[c].verticalScrollAxis.toLowerCase(),f=e[c].horizontalScrollAxis.toLowerCase();d=-1!=b.indexOf(\"x\")?p:0;b=-1!=b.indexOf(\"y\")?p:0;var l=-1!=f.indexOf(\"x\")?t:0;f=-1!=f.indexOf(\"y\")?t:0;d=N((d+l-e[c].left+k)/(e[c].width+k),(b+f-e[c].top+r)/(e[c].height+r),e[c].speed,e[c].verticalSpeed,e[c].horizontalSpeed);f=d.y-e[c].baseY;b=d.x-e[c].baseX;null!==e[c].min&&(a.options.vertical&&!a.options.horizontal&&(f=f<=e[c].min?e[c].min:f),a.options.horizontal&&!a.options.vertical&&\n(b=b<=e[c].min?e[c].min:b));null!=e[c].minY&&(f=f<=e[c].minY?e[c].minY:f);null!=e[c].minX&&(b=b<=e[c].minX?e[c].minX:b);null!==e[c].max&&(a.options.vertical&&!a.options.horizontal&&(f=f>=e[c].max?e[c].max:f),a.options.horizontal&&!a.options.vertical&&(b=b>=e[c].max?e[c].max:b));null!=e[c].maxY&&(f=f>=e[c].maxY?e[c].maxY:f);null!=e[c].maxX&&(b=b>=e[c].maxX?e[c].maxX:b);a.elems[c].style[R]=\"translate3d(\"+(a.options.horizontal?b:\"0\")+\"px,\"+(a.options.vertical?f:\"0\")+\"px,\"+e[c].zindex+\"px) \"+e[c].transform}a.options.callback(d)};\na.destroy=function(){for(var d=0;d<a.elems.length;d++)a.elems[d].style.cssText=e[d].style;u||(window.removeEventListener(\"resize\",F),u=!0);Q(v);v=null};F();a.refresh=F;return a}console.warn(\"Rellax: The elements you're trying to select don't exist.\")};return C});\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}