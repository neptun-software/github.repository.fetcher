{
  "metadata": {
    "timestamp": 1736709560500,
    "page": 89,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rse/es6-features",
      "stars": 6210,
      "defaultBranch": "gh-pages",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "bower_components\nnode_modules\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0009765625,
          "content": "\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 3.62109375,
          "content": "/*\n**  es6-features -- ECMAScript 6 Feature Overview & Comparison\n**  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global module: true */\nmodule.exports = function (grunt) {\n    grunt.loadNpmTasks(\"grunt-contrib-clean\");\n    grunt.loadNpmTasks(\"grunt-contrib-copy\");\n\n    grunt.initConfig({\n        pkg: grunt.file.readJSON(\"package.json\"),\n        copy: {\n            \"normalize\": {\n                src: [ \"node_modules/normalize.css/normalize.css\" ],\n                dest: \"lib/normalize/normalize.css\"\n            },\n            \"director\": {\n                src: [ \"node_modules/director/build/director.min.js\" ],\n                dest: \"lib/director/director.js\"\n            },\n            \"jquery\": {\n                src: [ \"node_modules/jquery/dist/jquery.min.js\" ],\n                dest: \"lib/jquery/jquery.js\"\n            },\n            \"mousetrap\": {\n                src: [ \"node_modules/mousetrap/mousetrap.min.js\" ],\n                dest: \"lib/mousetrap/mousetrap.js\"\n            },\n            \"typopro\": {\n                files: [\n                    { expand: true, flatten: false, cwd: \"node_modules/typopro-web/web\",\n                      src: \"TypoPRO-OpenSans/**\", dest: \"lib/typopro/\" },\n                    { expand: true, flatten: false, cwd: \"node_modules/typopro-web/web\",\n                      src: \"TypoPRO-DejaVu/**\", dest: \"lib/typopro/\" },\n                    { expand: true, flatten: false, cwd: \"node_modules/typopro-web/web\",\n                      src: \"TypoPRO-Journal/**\", dest: \"lib/typopro/\" }\n                ]\n            },\n            \"font-awesome-css\": {\n                src: [ \"node_modules/font-awesome/css/font-awesome.css\" ],\n                dest: \"lib/fontawesome/fontawesome.css\",\n                options: {\n                    process: function (content, srcpath) {\n                        return content.replace(/\\.\\.\\/fonts\\/fontawesome-webfont/g, \"fontawesome\");\n                    }\n                }\n            },\n            \"font-awesome-fonts\": {\n                files: [{\n                    expand: true, flatten: false, cwd: \"node_modules/font-awesome/fonts\",\n                    src: \"fontawesome-webfont.*\", dest: \"lib/fontawesome/\",\n                    rename: function (src, dest) {\n                        return src + dest.replace(/fontawesome-webfont/, \"fontawesome\");\n                    }\n                }]\n            }\n        },\n        clean: {\n            clean:     [ \"lib\" ],\n            distclean: [ \"node_modules\", \"bower_components\" ]\n        }\n    });\n\n    grunt.registerTask(\"default\", [ \"copy\" ]);\n};\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.1240234375,
          "content": "\nes6-features -- ECMAScript 6 Feature Overview & Comparison\nCopyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.4736328125,
          "content": "##\n##  es6-features -- ECMAScript 6 Feature Overview & Comparison\n##  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n##\n##  Permission is hereby granted, free of charge, to any person obtaining\n##  a copy of this software and associated documentation files (the\n##  \"Software\"), to deal in the Software without restriction, including\n##  without limitation the rights to use, copy, modify, merge, publish,\n##  distribute, sublicense, and/or sell copies of the Software, and to\n##  permit persons to whom the Software is furnished to do so, subject to\n##  the following conditions:\n##\n##  The above copyright notice and this permission notice shall be included\n##  in all copies or substantial portions of the Software.\n##\n##  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n##  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n##  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n##  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n##  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n##  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n##  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n##\n\nNPM   = npm\nGRUNT = ./node_modules/grunt-cli/bin/grunt\n\nall: build\n\nbootstrap:\n\t@if [ ! -x $(GRUNT) ]; then $(NPM) install; fi\n\nbuild: bootstrap\n\t@$(GRUNT)\n\t@sh convert.sh\n\nclean: bootstrap\n\t@$(GRUNT) clean:clean\n\ndistclean: bootstrap\n\t@$(GRUNT) clean:clean clean:distclean\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.724609375,
          "content": "\n# [es6-features.org](http://es6-features.org/)\n\n### ECMAScript 6: Feature Overview &amp; Comparison\n\nCopyright (c) 2015-2017 Ralf S. Engelschall &lt;[rse@engelschall.com](mailto:rse@engelschall.com)&gt; &lt;[@engelschall](http://twitter.com/engelschall)&gt;<br/>\nPartially based on [code snippets](http://git.io/es6features) by Luke Hoban.<br/>\nLicensed under MIT license.\n\nThis is the source of the website [rse.github.io/es6-features/](https://rse.github.io/es6-features/),\na small overview of current\n[ECMAScript 6](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nlanguage features and a comparison to their old\nECMAScript 5 equivalents.\n\n## Frequently Asked Questions? (FAQ)\n\n- *Why was it setup? Is the ECMAScript 6 specification not enough?*\n\n  It was setup by computer scientist and software\n  architect [Ralf S. Engelschall](mailto:rse@engelschall.com) in March 2015 in order to\n  promote ECMAScript 6 in the software engineering projects around him\n  and to have bookmarkable URLs at hand for referencing certain\n  ECMAScript 6 features. Additionally, creating this website was a\n  good approach for Ralf S. Engelschall to learn the new ECMAScript 6\n  features himself.\n\n- *Where can I find the current browser support status quo for ECMASCript 6?*\n\n  Have a look at the regularily updated\n  [ECMAScript compatibility table](http://kangax.github.io/compat-table/es6/) by kangax.\n  There, especially notice the column \"Babel + core-js\" as this is what can be achieved\n  today with transpiling (and that's fully sufficient for practice).\n\n- *Where can I find the latest ECMAScript 6 standard?*\n\n  The final ECMAScript 6 standard (ECMA-262) was published in June 2015. You can find the\n  standard on [ecmascript.org](http://www.ecma-international.org/publications/standards/Ecma-262.htm).\n\n- *How can I use ECMAScript 6 if my JavaScript runtime still does not support it?*\n\n  Use the awesome [Babel](http://babeljs.io/) transpiler. For Node.js/io.js environments\n  just use its tricky [`require` hook](http://babeljs.io/docs/usage/require/). For browser environments use Babel in conjunction\n  with [Browserify](http://browserify.org/) and its [Babelify](https://github.com/babel/babelify) plugin. For\n  other tools see [Using Babel](http://babeljs.io/docs/using-babel/).\n  If you want to see pre-integrated scenarios, check out our sibling project\n  [es6-support](https://github.com/rse/es6-support) for various code examples!\n\n- *Why does the website default use the \"reduced\" syntactic sugar style (without semicolons)\n  for ECMAScript 6 and the \"traditional\" syntactic sugar style (with semicolons) for ECMAScript 5?*\n\n  ECMAScript since its earliest days supported automatic semicolon\n  inference/insertion, of course. But people coding ECMAScript 5 started it\n  in an era where lots of tools (especially source code compressors)\n  had problems when semicolons where left out from the source code. As\n  a consequence, most ECMAScript 5 coders maintained the traditional\n  coding style with semicolons as the syntactic sugar, although in most\n  of the cases they are not necessary. But this era is gone today.\n  Both ECMAScript 6 and all tools (including compressors) perfectly\n  support automatic semicolon inference/insertion nowadays. As a consequence,\n  ECMAScript 6 coders nowadays can get rid of nearly all\n  semicolons and remove clutter from their source code. Ralf S. Engelschall is a strong promoter of reducing\n  source code to its bare minimum. Hence, in his personal opinion\n  ECMAScript 6 should be coded with as less syntactic sugar as possible\n  and hence without semicolons. But if you disagree, just switch the\n  shown style on the website. If you even need to enforce a particular\n  style for both ES6 and ES5 code snippets in your bookmarks, just use\n  one of the following URLs:\n  [ES6-Features (reduced style)]( https://rse.github.io/es6-features/#reduced) or\n  [ES6-Features (traditional style)]( https://rse.github.io/es6-features/#traditional)\n\n- *I still don't understand: why should I use ECMAScript 6? ECMAScript 5 looks sufficient.*\n\n  ECMAScript 5 is a nice and decent programming language, of course. But\n  because of its history, it has some nasty aspects which ECMAScript 6\n  finally resolves. As programming never is just about getting the necessary\n  functionality done, it is advised to also use the best language,\n  too. ECMAScript 6's language design is cleaner than ECMAScript 5,\n  its syntax increases the expressiveness of your code, it decreases the\n  necessary boilerplate code (e.g. `function` vs. arrow syntax) and it\n  especially let you get rid of some very nasty but required hacks and\n  workarounds from the ECMAScript 5 era (e.g. `var self = this`).\n  So, ECMAScript 5 might be sufficient, but ECMAScript 6 nevertheless\n  is an important improvement.\n\n- *I've found a mistake, how can I contribute?*\n\n  The source is the file `features.txt`, everything else on [rse.github.io/es6-features/](https://rse.github.io/es6-features/) is\n  just generated out of it. Fork this project on Github, edit the file\n  `features.txt` and then please send a pull request.\n\n- *Do you know more such ECMAScript 6 feature lists?*\n\n    - [ECMAScript 6 Features](https://github.com/lukehoban/es6features#readme) (by Luke Hoban)\n    - [Learn ES2015 - A detailed overview of ECMAScript 6 features](https://babeljs.io/docs/learn-es2015/) (by Babel team)\n    - [ECMAScript 6 Cheatsheet](http://help.wtf/es6) (by Erik Moeller)\n    - [First Steps with ECMAScript 6](http://exploringjs.com/es6/ch_first-steps.html) (by Axel Rauschmayer)\n    - [JS Features](http://jsfeatures.in/) (by Hemanth.HM)\n    - [Minimalist examples of ES6 functionalities](https://github.com/hemanth/paws-on-es6) (by Hemanth.HM)\n    - [Understanding ECMAScript 6](https://leanpub.com/understandinges6/read/) (by Nicholas C. Zakas)\n\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.2861328125,
          "content": "{\n    \"name\": \"es6-features\",\n    \"dependencies\": {\n        \"normalize.css\":      \"6.0.0\",\n        \"typopro-web\":        \"3.5.0\",\n        \"fontawesome\":        \"4.7.0\",\n        \"director\":           \"1.2.8\",\n        \"jquery\":             \"3.2.1\",\n        \"mousetrap\":          \"1.6.0\"\n    }\n}\n"
        },
        {
          "name": "convert.js",
          "type": "blob",
          "size": 5.7294921875,
          "content": "/*\n**  es6-features -- ECMAScript 6 Feature Overview & Comparison\n**  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet fs = require(\"fs\")\n\n/*  minimum Markdown translation ;-)  */\nlet md = (txt) => {\n    txt = txt.replace(/`(.+?)`/g, \"<code>$1</code>\")\n    txt = txt.replace(/\\[([^\\[\\]]+?)\\]\\(([^\\(\\)]+?)\\)/g, \"<a href=\\\"$2\\\">$1</a>\")\n    return txt\n}\n\n/*  generate JavaScript code block  */\nlet js = (clazz, title, code, icon) => {\n    /*  protect special characters which are part of entity encoding  */\n    code = code.replace(/&/g, \"@1@\")\n    code = code.replace(/;/g, \"@2@\")\n\n    /*  convert characters which have special meaning in HTML  */\n    code = code.replace(/&/g, \"&amp;\")\n    code = code.replace(/</g, \"&lt;\")\n    code = code.replace(/>/g, \"&gt;\")\n\n    /*  unprotect special characters which are part of entity encoding  */\n    code = code.replace(/@1@/g, \"<span class=punctuation>&amp;</span>\")\n    code = code.replace(/@2@([ \\t]?\\n|[ \\t]+\\|?\\}|[ \\t]+\\/\\/|$)/g, \"<span class=semi>;</span>$1\")\n    code = code.replace(/@2@/g, \"<span class=punctuation>;</span>\")\n\n    /*  convert ellipsis to corresponding Unicode character  */\n    code = code.replace(/(\\s+)\\.\\.\\.(\\s+)/g, \"$1<span class=ellipsis>&hellip;</span>$2\")\n\n    /*  simple syntax-highlighting of JavaScript code, the rookie but sufficient way  */\n    code = code.replace(\n        /(\\s=\\s|=&gt;|&gt;|&lt;|&amp;|===|[%+*{}().,\\[\\]-])/g,\n        \"<span class=punctuation>$1</span>\")\n    code = code.replace(\n        /(\"(?:.|\\n)*?\"|'(?:.|\\n)*?'|`(?:.|\\n)*?`|\\d+(?:\\.\\d+)?(?!@))/g,\n        \"<span class=literal>$1</span>\")\n    code = code.replace(\n        /\\b(this|function|class(?=[^=])|extends|return|if|new|import|export|in|of|var|let|while|for|const)\\b/g,\n        \"<span class=keyword>$1</span>\")\n    code = code.replace(\n        /((?:^|\\s)\\/\\/[^\\n]*)/g,\n        \"<span class=comment>$1</span>\")\n    code = code.replace(\n        /\\\\\\|/g,\n        \"&#124;\")\n    code = code.replace(\n        /\\|(.+?)\\|/g,\n        \"<span class=mark>$1</span>\")\n    code = code.replace(/@3@/g, \"|\");\n    code = code.replace(/class=([a-z]+)/g, \"class=\\\"$1\\\"\")\n\n    /*  extend title with style switcher  */\n    title = \"<b>\" + title + \"</b> &mdash; \" +\n        \"syntactic sugar: <span class=\\\"style reduced\\\">reduced</span> | \" +\n        \"<span class=\\\"style traditional\\\">traditional</span>\"\n\n    /*  assemble everything  */\n    txt = `<div class=\"js ${clazz}\">\\n`\n    txt += `    <div class=\"title\">${title}</div>\\n`\n    txt += `    <div class=\"code\">${code}</div>\\n`\n    txt += `    <i class=\"icon fa fa-circle\"></i>\\n`\n    txt += `    <i class=\"icon fa fa-${icon}\"></i>\\n`\n    txt += `</div>\\n`\n\n    return txt\n}\n\n/*  read the input source  */\nlet txt = fs.readFileSync(\"features.txt\", \"utf8\")\n\n/*  remove all comment lines  */\ntxt = txt.replace(/^#.*$/mg, \"\")\n\n/*  iterate over input source  */\nlet nav = \"\"\nlet out = \"\"\n\n/*  for every outer section...  */\nnav += \"<ul>\\n\"\ntxt.replace(/\\s*([^\\n]+)\\n====+[ \\t]*\\n((?:.|\\n)+?)(?=[^\\n]+\\n====+[ \\t]*\\n|$)/g, (m, title, txt) => {\n    /*  generate level-1 navigation entry  */\n    nav += `<li class=\"title\">${md(title)}\\n`\n    nav += \"    <ul>\\n\"\n\n    /*  for every inner section...  */\n    txt.replace(/\\s*([^\\n]+)\\n----+[ \\t]*\\n((?:.|\\n)+?)(?=[^\\n]+\\n----+[ \\t]*\\n|$)/g, (m, subtitle, txt) => {\n        let id = subtitle.replace(/[^a-zA-Z0-9]+/g, \"\")\n\n        /*  generate level-2 navigation entry  */\n        nav += `<li class=\"subtitle subtitle_${id}\">\\n`\n        nav += `    <a href=\"#${id}\">${md(subtitle)}</a> <i class=\"fa fa-arrow-circle-right\"></i>`\n        nav += \"</li>\\n\"\n\n        /*  generate showcase header  */\n        out += `<div id=\"${id}\" class=\"showcase showcase_${id}\">`\n        out += `    <div class=\"title\">${md(title)}</div>\\n`\n        out += `    <div class=\"subtitle\">${md(subtitle)}</div>\\n`\n\n        /*  for the showcode content...  */\n        txt.replace(/^\\s*((?:.|\\n)+?)\\n\\n(6\\|(?:.|\\n)+?\\n)\\n(5\\|(?:.|\\n)+?)\\s*$/, (m, desc, es6, es5) => {\n            out += `    <div class=\"desc\">${md(desc)}</div>\\n`\n            es6 = es6.replace(/^6\\| ?/mg, \"\").replace(/^\\s*/, \"\")\n            es5 = es5.replace(/^5\\| ?/mg, \"\").replace(/^\\s*/, \"\")\n            out += js(\"es6\", \"ECMAScript 6\", es6, \"check-circle\")\n            out += '    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div>'\n            out += js(\"es5\", \"ECMAScript 5\", es5, \"times-circle\")\n        })\n        out += \"</div>\\n\"\n    })\n\n    nav += \"    </ul>\\n\"\n    nav += \"</li>\\n\"\n})\nnav += \"</ul>\\n\"\n\n/*  read the HTML template  */\nlet tmpl = fs.readFileSync(\"features.html\", \"utf8\")\ntmpl = tmpl.replace(/%BODY%/, out).replace(/%NAV%/, nav)\n\n/*  write the resulting HTML page  */\nfs.writeFileSync(\"index.html\", tmpl, \"utf8\")\n\n"
        },
        {
          "name": "convert.sh",
          "type": "blob",
          "size": 1.2783203125,
          "content": "#!/bin/sh\n##\n##  es6-features -- ECMAScript 6 Feature Overview & Comparison\n##  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n##\n##  Permission is hereby granted, free of charge, to any person obtaining\n##  a copy of this software and associated documentation files (the\n##  \"Software\"), to deal in the Software without restriction, including\n##  without limitation the rights to use, copy, modify, merge, publish,\n##  distribute, sublicense, and/or sell copies of the Software, and to\n##  permit persons to whom the Software is furnished to do so, subject to\n##  the following conditions:\n##\n##  The above copyright notice and this permission notice shall be included\n##  in all copies or substantial portions of the Software.\n##\n##  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n##  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n##  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n##  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n##  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n##  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n##  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n##\n\nexec ./node_modules/.bin/babel-node --presets es2015 convert.js\n\n"
        },
        {
          "name": "features.html",
          "type": "blob",
          "size": 5.021484375,
          "content": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n        <!--\n            es6-features ~~ ECMAScript 6 Feature Overview & Comparison\n            Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n\n            Permission is hereby granted, free of charge, to any person obtaining\n            a copy of this software and associated documentation files (the\n            \"Software\"), to deal in the Software without restriction, including\n            without limitation the rights to use, copy, modify, merge, publish,\n            distribute, sublicense, and/or sell copies of the Software, and to\n            permit persons to whom the Software is furnished to do so, subject to\n            the following conditions:\n\n            The above copyright notice and this permission notice shall be included\n            in all copies or substantial portions of the Software.\n\n            THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n            EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n            MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n            IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n            CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n            TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n            SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n        -->\n        <title>ECMAScript 6: New Features: Overview and Comparison</title>\n        <script src=\"lib/jquery/jquery.js\" type=\"text/javascript\"></script>\n        <script src=\"lib/director/director.js\" type=\"text/javascript\"></script>\n        <script src=\"lib/mousetrap/mousetrap.js\" type=\"text/javascript\"></script>\n        <script src=\"index.js\" type=\"text/javascript\"></script>\n        <link href=\"index.css\" rel=\"stylesheet\" type=\"text/css\"/>\n    </head>\n    <body>\n        <a href=\"https://github.com/rse/es6-features\">\n            <img style=\"position: fixed; top: 0; right: 0; border: 0; z-index: 2000;\"\n                 src=\"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\"\n                 alt=\"Fork me on GitHub\"\n                 data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\"/>\n        </a>\n        <iframe id=\"starbutton\" src=\"https://ghbtns.com/github-btn.html?user=rse&repo=es6-features&type=star&count=true\"\n            frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\">\n        </iframe>\n        <a class=\"twitter-share-button\" href=\"https://twitter.com/share\"\n            data-url=\"http://es6-features.org\"\n            data-text=\"See how cleaner and more concise JavaScript can look and start coding in ECMAScript 6 now! @engelschall's\"\n            data-hashtags=\"ES6\"\n            data-related=\"engelschall\"\n        >Tweet</a>\n        <script>\n            !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>0\n        </script>\n        <div class=\"bg\">ES6</div>\n        <div class=\"head\">\n            <span class=\"bold\">ECMAScript 6</span> &mdash; New Features: Overview &amp; Comparison\n        </div>\n        <div class=\"slogan\">\n            See how cleaner and more concise<br/>\n            your JavaScript code can look and<br/>\n            <a href=\"https://github.com/rse/es6-support\">start coding</a> in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ES6</a> <a href=\"https://github.com/rse/es6-support\">now</a> !!\n        </div>\n        <div class=\"statement\">\n            \"A good programming language is a<br/>\n            conceptual universe for thinking<br/>\n            about programming.\" &mdash; Alan J. Perlis\n        </div>\n        <div class=\"nav\">\n            <!-- ATTENTION: BEGIN OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n            %NAV%\n            <!-- ATTENTION: END OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n        </div>\n        <div class=\"content\">\n            <!-- ATTENTION: BEGIN OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n            %BODY%\n            <!-- ATTENTION: END OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n        </div>\n        <div class=\"foot\">\n            <div class=\"text\">\n                Copyright &copy; 2015-2017 <a href=\"http://engelschall.com/\">Ralf S. Engelschall</a> &nbsp; <i class=\"fa fa-twitter-square\"></i> <a href=\"http://twitter.com/engelschall\">@engelschall</a><br/>\n                Fully generated from a <a href=\"https://github.com/rse/es6-features/blob/gh-pages/features.txt\">single source</a><br/>\n                Licensed under <a href=\"https://github.com/rse/es6-features/blob/gh-pages/LICENSE.txt\">MIT License</a>.\n            </div>\n        </div>\n    </body>\n</html>\n"
        },
        {
          "name": "features.txt",
          "type": "blob",
          "size": 46.0576171875,
          "content": "##\n##  es6-features -- ECMAScript 6 Feature Overview & Comparison\n##  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n##\n##  Permission is hereby granted, free of charge, to any person obtaining\n##  a copy of this software and associated documentation files (the\n##  \"Software\"), to deal in the Software without restriction, including\n##  without limitation the rights to use, copy, modify, merge, publish,\n##  distribute, sublicense, and/or sell copies of the Software, and to\n##  permit persons to whom the Software is furnished to do so, subject to\n##  the following conditions:\n##\n##  The above copyright notice and this permission notice shall be included\n##  in all copies or substantial portions of the Software.\n##\n##  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n##  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n##  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n##  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n##  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n##  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n##  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n##\n\n\nConstants\n=========\n\nConstants\n---------\n\nSupport for constants (also known as \"immutable variables\"), i.e.,\nvariables which cannot be re-assigned new content. Notice: this only\nmakes the variable itself immutable, not its assigned content (for\ninstance, in case the content is an object, this means the object itself\ncan still be altered).\n\n6| |const PI| = 3.141593;\n6| PI > 3.0;\n\n5| //  only in ES5 through the help of object properties\n5| //  and only in global context and not in a block scope\n5| Object.|defineProperty|(typeof global === \"object\" ? global : window, \"|PI|\", {\n5|     value:        3.141593,\n5|     enumerable:   true,\n5|     |writable:     false|,\n5|     |configurable: false|\n5| })\n5| PI > 3.0;\n\n\nScoping\n=======\n\nBlock-Scoped Variables\n----------------------\n\nBlock-scoped variables (and constants) without hoisting.\n\n6| for (|let i| = 0; i < a.length; i++) {\n6|     |let x| = a[i];\n6|     ...\n6| }\n6| for (|let i| = 0; i < b.length; i++) {\n6|     |let y| = b[i];\n6|     ...\n6| }\n6|\n6| let callbacks = [];\n6| for (|let| i = 0; i <= 2; i++) {\n6|     callbacks[i] = function () { return i * 2; };\n6| }\n6| callbacks[0]() === 0;\n6| callbacks[1]() === 2;\n6| callbacks[2]() === 4;\n\n5| |var i, x, y|;\n5| for (i = 0; i < a.length; i++) {\n5|     x = a[i];\n5|     ...\n5| }\n5| for (i = 0; i < b.length; i++) {\n5|     y = b[i];\n5|     ...\n5| }\n5|\n5| var callbacks = [];\n5| for (|var| i = 0; i <= 2; i++) {\n5|     |(function (i) {|\n5|         callbacks[i] = function() { return i * 2; };\n5|     |})(i);|\n5| }\n5| callbacks[0]() === 0;\n5| callbacks[1]() === 2;\n5| callbacks[2]() === 4;\n\n\nBlock-Scoped Functions\n----------------------\n\nBlock-scoped function definitions.\n\n6| {\n6|     function foo () { return 1; }\n6|     foo() === 1;\n6|     {\n6|         function |foo| () { return |2|; }\n6|         |foo|() === |2|;\n6|     }\n6|     foo() === 1;\n6| }\n\n5| //  only in ES5 with the help of block-scope emulating\n5| //  function scopes and function expressions\n5| (function () {\n5|     var foo = function () { return 1; }\n5|     foo() === 1;\n5|     |(function () {|\n5|         var |foo| = function () { return |2|; }\n5|         |foo|() === |2|;\n5|     |})();|\n5|     foo() === 1;\n5| })();\n\nArrow Functions\n===============\n\nExpression Bodies\n-----------------\n\nMore expressive closure syntax.\n\n6| odds  = evens.map(|v =>| v + 1);\n6| pairs = evens.map(|v => (|{ even: v, odd: v + 1 }|)|);\n6| nums  = evens.map(|(v, i) =>| v + i);\n\n5| odds  = evens.map(|function (v) { return| v + 1; |}|);\n5| pairs = evens.map(|function (v) { return| { even: v, odd: v + 1 }; |}|);\n5| nums  = evens.map(|function (v, i) { return| v + i; |}|);\n\nStatement Bodies\n----------------\n\nMore expressive closure syntax.\n\n6| nums.forEach(|v => {|\n6|    if (v % 5 === 0)\n6|        fives.push(v);\n6| |}|)\n\n5| nums.forEach(|function (v) {|\n5|    if (v % 5 === 0)\n5|        fives.push(v);\n5| |}|);\n\nLexical `this`\n--------------\n\nMore intuitive handling of current object context.\n\n6| |this|.nums.forEach(|(v) =>| {\n6|     if (v % 5 === 0)\n6|         |this|.fives.push(v);\n6| });\n\n5| //  variant 1\n5| var |self| = |this|;\n5| |this|.nums.forEach(|function (v)| {\n5|     if (v % 5 === 0)\n5|         |self|.fives.push(v);\n5| });\n5|\n5| //  variant 2\n5| |this|.nums.forEach(|function (v)| {\n5|     if (v % 5 === 0)\n5|         |this|.fives.push(v);\n5| }, |this|);\n5|\n5| //  variant 3 (since ECMAScript 5.1 only)\n5| |this|.nums.forEach(|function (v)| {\n5|     if (v % 5 === 0)\n5|         |this|.fives.push(v);\n5| }|.bind(this)|);\n\n\nExtended Parameter Handling\n===========================\n\nDefault Parameter Values\n------------------------\n\nSimple and intuitive default values for function parameters.\n\n6| function f (x, y |= 7|, z |= 42|) {\n6|     return x + y + z;\n6| }\n6| f(1) === 50;\n\n5| function f (x, y, z) {\n5|     |if (y === undefined)|\n5|         |y = 7|;\n5|     |if (z === undefined)|\n5|         |z = 42|;\n5|     return x + y + z;\n5| };\n5| f(1) === 50;\n\nRest Parameter\n--------------\n\nAggregation of remaining arguments into single parameter of variadic functions.\n\n6| function f (x, y, |...a|) {\n6|     return (x + y) * a.length;\n6| }\n6| f(1, 2, |\"hello\", true, 7|) === 9;\n\n5| function f (x, y) {\n5|     |var a = Array.prototype.slice.call(arguments, 2)|;\n5|     return (x + y) * a.length;\n5| };\n5| f(1, 2, |\"hello\", true, 7|) === 9;\n\nSpread Operator\n---------------\n\nSpreading of elements of an iterable collection (like an array or even\na string) into both literal elements and individual function parameters.\n\n6| var params = [ \"hello\", true, 7 ];\n6| var other = [ 1, 2, |...params| ]; // [ 1, 2, \"hello\", true, 7 ]\n6|\n6| function f (x, y, ...a) {\n6|     return (x + y) * a.length;\n6| }\n6| f(1, 2, |...params|) === 9;\n6|\n6| var str = \"foo\";\n6| var chars = [ |...str| ]; // [ \"f\", \"o\", \"o\" ]\n\n5| var params = [ \"hello\", true, 7 ];\n5| var other = [ 1, 2 ].|concat(params)|; // [ 1, 2, \"hello\", true, 7 ]\n5|\n5| function f (x, y) {\n5|     var a = Array.prototype.slice.call(arguments, 2);\n5|     return (x + y) * a.length;\n5| };\n5| f|.apply|(|undefined, [| 1, 2 |].concat(params)|) === 9;\n5|\n5| var str = \"foo\";\n5| var chars = str.split(\"\"); // [ \"f\", \"o\", \"o\" ]\n\nTemplate Literals\n=================\n\nString Interpolation\n--------------------\n\nIntuitive expression interpolation for single-line and multi-line strings.\n(Notice: don't be confused, Template Literals were originally named\n\"Template Strings\" in the drafts of the ECMAScript 6 language specification)\n\n6| var customer = { name: \"Foo\" };\n6| var card = { amount: 7, product: \"Bar\", unitprice: 42 };\n6| var message = |`|Hello |${customer.name}|,\n6| want to buy |${card.amount} ${card.product}| for\n6| a total of |${card.amount * card.unitprice}| bucks?|`|;\n\n5| var customer = { name: \"Foo\" };\n5| var card = { amount: 7, product: \"Bar\", unitprice: 42 };\n5| var message = |\"|Hello \"| + customer.name + |\",\\n\" +\n5| \"want to buy \"| + card.amount + |\" \"| + card.product + |\" for\\n\" +\n5| \"a total of \"| + (card.amount * card.unitprice) + |\" bucks?|\"|;\n\nCustom Interpolation\n--------------------\n\nFlexible expression interpolation for arbitrary methods.\n\n6| get|`|http://example.com/foo?bar=|${|bar + baz|}|&quux=|${|quux|}`|;\n\n5| get|([ |\"http://example.com/foo?bar=\"|,| \"&quux=\"|,| \"\"| ],|bar + baz|,| quux|)|;\n\nRaw String Access\n-----------------\n\nAccess the raw template string content (backslashes are not interpreted).\n\n6| function quux (strings, ...values) {\n6|     strings[0] === \"|foo\\n|\";\n6|     strings[1] === \"bar\";\n6|     strings|.raw|[0] === \"|foo\\\\n|\";\n6|     strings.raw[1] === \"bar\";\n6|     values[0] === 42;\n6| }\n6| quux|`|foo|\\n|${ 42 }bar|`|\n6|\n6| String.raw|`|foo|\\n|${ 42 }bar|`| === \"foo|\\\\n|42bar\";\n\n5| //  no equivalent in ES5\n\n\nExtended Literals\n=================\n\nBinary & Octal Literal\n----------------------\n\nDirect support for safe binary and octal literals.\n\n6| |0b|111110111 === 503;\n6| |0o|767 === 503;\n\n5| |parseInt(|\"111110111\"|, 2)| === 503;\n5| |parseInt(|\"767\"|, 8)| === 503;\n5| |0|767 === 503; // only in non-strict, backward compatibility mode\n\nUnicode String & RegExp Literal\n-------------------------------\n\nExtended support using Unicode within strings and regular expressions.\n\n6| \"𠮷\".length === 2;\n6| \"𠮷\".match(/./|u|)[0].length === 2;\n6| \"𠮷\" === \"\\uD842\\uDFB7\";\n6| \"𠮷\" === \"|\\u{20BB7}|\";\n6| \"𠮷\".|codePointAt|(0) == 0x20BB7;\n6| for (let codepoint |of| \"𠮷\") console.log(codepoint);\n\n5| \"𠮷\".length === 2;\n5| \"𠮷\".match(/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/)[0].length === 2;\n5| \"𠮷\" === \"\\uD842\\uDFB7\";\n5| //  no equivalent in ES5\n5| //  no equivalent in ES5\n5| //  no equivalent in ES5\n\n\nEnhanced Regular Expression\n===========================\n\nRegular Expression Sticky Matching\n----------------------------------\n\nKeep the matching position sticky between matches and\nthis way support efficient parsing of arbitrary long input strings,\neven with an arbitrary number of distinct regular expressions.\n\n6| let parser = (input, match) => {\n6|     for (let pos = 0, lastPos = input.length; |pos < lastPos|; ) {\n6|         for (let i = 0; i < match.length; i++) {\n6|             |match[i].pattern.lastIndex = pos|;\n6|             let found;\n6|             if ((found = match[i].pattern.exec(input)) !== null) {\n6|                 match[i].action(found);\n6|                 |pos = match[i].pattern.lastIndex|;\n6|                 break;\n6|             }\n6|         }\n6|     }\n6| }\n6|\n6| let report = (match) => {\n6|     console.log(JSON.stringify(match));\n6| };\n6| parser(\"Foo 1 Bar 7 Baz 42\", [\n6|     { pattern: /Foo\\s+(\\d+)/|y|, action: (match) => report(match) },\n6|     { pattern: /Bar\\s+(\\d+)/|y|, action: (match) => report(match) },\n6|     { pattern: /Baz\\s+(\\d+)/|y|, action: (match) => report(match) },\n6|     { pattern: /\\s*/|y|,         action: (match) => {}            }\n6| ]);\n\n5| var parser = function (input, match) {\n5|     for (var i, found, |inputTmp = input|; |inputTmp !== \"\"|; ) {\n5|         for (i = 0; i < match.length; i++) {\n5|             if ((found = match[i].pattern.exec(inputTmp)) !== null) {\n5|                 match[i].action(found);\n5|                 |inputTmp = inputTmp.substr(found[0].length)|;\n5|                 break;\n5|             }\n5|         }\n5|     }\n5| }\n5|\n5| var report = function (match) {\n5|     console.log(JSON.stringify(match));\n5| };\n5| parser(\"Foo 1 Bar 7 Baz 42\", [\n5|     { pattern: /^Foo\\s+(\\d+)/, action: function (match) { report(match); } },\n5|     { pattern: /^Bar\\s+(\\d+)/, action: function (match) { report(match); } },\n5|     { pattern: /^Baz\\s+(\\d+)/, action: function (match) { report(match); } },\n5|     { pattern: /^\\s*/,         action: function (match) {}                 }\n5| ]);\n\n\nEnhanced Object Properties\n==========================\n\nProperty Shorthand\n------------------\n\nShorter syntax for common object property definition idiom.\n\n6| var x = 0, y = 0;\n6| obj = { |x|, |y| };\n\n5| var x = 0, y = 0;\n5| obj = { |x: x|, |y: y| };\n\nComputed Property Names\n-----------------------\n\nSupport for computed names in object property definitions.\n\n6| let obj = {\n6|     foo: \"bar\",\n6|     |[| \"baz\" + quux() |]:| 42\n6| };\n\n5| var obj = {\n5|     foo: \"bar\"\n5| };\n5| |obj[| \"baz\" + quux() |] =| 42;\n\nMethod Properties\n-----------------\n\nSupport for method notation in object property definitions,\nfor both regular functions and generator functions.\n\n6| obj = {\n6|     |foo (a, b)| {\n6|         ...\n6|     },\n6|     |bar (x, y)| {\n6|         ...\n6|     },\n6|     |*quux (x, y)| {\n6|         ...\n6|     }\n6| };\n\n5| obj = {\n5|     foo|: function| (a, b) {\n5|         ...\n5|     },\n5|     bar|: function| (x, y) {\n5|         ...\n5|     },\n5|     //  quux: no equivalent in ES5\n5|     ...\n5| };\n\n\nDestructuring Assignment\n========================\n\nArray Matching\n--------------\n\nIntuitive and flexible destructuring of Arrays into individual variables during assignment.\n\n6| var list = [ 1, 2, 3 ];\n6| var |[ a, , b ] = list|;\n6| [ |b, a| ] = [ |a, b| ];\n\n5| var list = [ 1, 2, 3 ];\n5| var |a = list[0]|, |b = list[2]|;\n5| var |tmp = a|; |a = b|; |b = tmp|;\n\nObject Matching, Shorthand Notation\n-----------------------------------\n\nIntuitive and flexible destructuring of Objects into individual variables during assignment.\n\n6| var |{ op, lhs, rhs }| = getASTNode();\n\n5| var |tmp| = getASTNode();\n5| var |op  = tmp.op|;\n5| var |lhs = tmp.lhs|;\n5| var |rhs = tmp.rhs|;\n\nObject Matching, Deep Matching\n------------------------------\n\nIntuitive and flexible destructuring of Objects into individual variables during assignment.\n\n6| var { op: a, |lhs: { op: b }|, rhs: c } = getASTNode();\n\n5| var tmp = getASTNode();\n5| var a = tmp.op;\n5| var |b = tmp.lhs.op|;\n5| var c = tmp.rhs;\n\nObject And Array Matching, Default Values\n-----------------------------------------\n\nSimple and intuitive default values for destructuring of Objects and Arrays.\n\n6| var obj = { a: 1 };\n6| var list = [ 1 ];\n6| var { a, |b = 2| } = obj;\n6| var [ x, |y = 2| ] = list;\n\n5| var obj = { a: 1 };\n5| var list = [ 1 ];\n5| var a = obj.a;\n5| var |b = obj.b === undefined ? 2 : obj.b|;\n5| var x = list[0];\n5| var |y = list[1] === undefined ? 2 : list[1]|;\n\nParameter Context Matching\n--------------------------\n\nIntuitive and flexible destructuring of Arrays and Objects into individual parameters during function calls.\n\n6| function f (|[ name, val ]|) {\n6|     console.log(name, val);\n6| }\n6| function g (|{ name: n, val: v }|) {\n6|     console.log(n, v);\n6| }\n6| function h (|{ name, val }|) {\n6|     console.log(name, val);\n6| }\n6| f([ \"bar\", 42 ]);\n6| g({ name: \"foo\", val:  7 });\n6| h({ name: \"bar\", val: 42 });\n\n5| function f (|arg|) {\n5|     |var name = arg[0]|;\n5|     |var val  = arg[1]|;\n5|     console.log(name, val);\n5| };\n5| function g (|arg|) {\n5|     |var n = arg.name|;\n5|     |var v = arg.val|;\n5|     console.log(n, v);\n5| };\n5| function h (|arg|) {\n5|     |var name = arg.name|;\n5|     |var val  = arg.val|;\n5|     console.log(name, val);\n5| };\n5| f([ \"bar\", 42 ]);\n5| g({ name: \"foo\", val:  7 });\n5| h({ name: \"bar\", val: 42 });\n\nFail-Soft Destructuring\n-----------------------\n\nFail-soft destructuring, optionally with defaults.\n\n6| var list = [ 7, 42 ];\n6| var [ a = 1, b = 2, |c = 3|, |d| ] = list;\n6| a === 7;\n6| b === 42;\n6| c === |3|;\n6| d === |undefined|;\n\n5| var list = [ 7, 42 ];\n5| var a = typeof list[0] !== \"undefined\" ? list[0] : 1;\n5| var b = typeof list[1] !== \"undefined\" ? list[1] : 2;\n5| var c = typeof list[2] !== \"undefined\" ? list[2] : |3|;\n5| var d = typeof list[3] !== \"undefined\" ? list[3] : |undefined|;\n5| a === 7;\n5| b === 42;\n5| c === |3|;\n5| d === |undefined|;\n\n\nModules\n=======\n\nValue Export/Import\n-------------------\n\nSupport for exporting/importing values from/to modules without global namespace pollution.\n\n6| //  lib/math.js\n6| |export| function |sum| (x, y) { return x + y };\n6| |export| var |pi| = 3.141593;\n6|\n6| //  someApp.js\n6| |import * as math| from \"lib/math\";\n6| console.log(\"2π = \" + math.sum(math.pi, math.pi));\n6|\n6| //  otherApp.js\n6| |import { sum, pi }| from \"lib/math\";\n6| console.log(\"2π = \" + sum(pi, pi));\n\n5| //  lib/math.js\n5| |LibMath = {}|;\n5| |LibMath.sum| = function (x, y) { return x + y };\n5| |LibMath.pi| = 3.141593;\n5|\n5| //  someApp.js\n5| var |math = LibMath|;\n5| console.log(\"2π = \" + math.sum(math.pi, math.pi));\n5|\n5| //  otherApp.js\n5| var |sum = LibMath.sum|, |pi = LibMath.pi|;\n5| console.log(\"2π = \" + sum(pi, pi));\n\nDefault & Wildcard\n------------------\n\nMarking a value as the default exported value and mass-mixin of values.\n\n6| //  lib/mathplusplus.js\n6| |export *| from \"lib/math\";\n6| export var e = 2.71828182846;\n6| |export default| (x) => Math.exp(x);\n6|\n6| //  someApp.js\n6| |import exp, { pi, e }| from \"lib/mathplusplus\";\n6| console.log(\"e^{π} = \" + exp(pi));\n\n5| //  lib/mathplusplus.js\n5| |LibMathPP = {}|;\n5| |for (symbol in LibMath)|\n5|     |if (LibMath.hasOwnProperty(symbol))|\n5|         |LibMathPP[symbol] = LibMath[symbol]|;\n5| |LibMathPP.e| = 2.71828182846;\n5| |LibMathPP.exp| = function (x) { return Math.exp(x) };\n5|\n5| //  someApp.js\n5| var |exp = LibMathPP.exp|, |pi = LibMathPP.pi|, |e = LibMathPP.e|;\n5| console.log(\"e^{π} = \" + exp(pi));\n\n\nClasses\n=======\n\nClass Definition\n----------------\n\nMore intuitive, OOP-style and boilerplate-free classes.\n\n6| |class| Shape {\n6|     |constructor| (id, x, y) {\n6|         this.id = id;\n6|         this.move(x, y);\n6|     }\n6|     |move| (x, y) {\n6|         this.x = x;\n6|         this.y = y;\n6|     }\n6| }\n\n5| var Shape = |function| (id, x, y) {\n5|     this.id = id;\n5|     this.move(x, y);\n5| };\n5| Shape.|prototype.move| = |function| (x, y) {\n5|     this.x = x;\n5|     this.y = y;\n5| };\n\nClass Inheritance\n-----------------\n\nMore intuitive, OOP-style and boilerplate-free inheritance.\n\n6| |class| Rectangle |extends| Shape {\n6|     constructor (id, x, y, width, height) {\n6|         |super|(id, x, y);\n6|         this.width  = width;\n6|         this.height = height;\n6|     }\n6| }\n6| |class| Circle |extends| Shape {\n6|     constructor (id, x, y, radius) {\n6|         |super|(id, x, y);\n6|         this.radius = radius;\n6|     }\n6| }\n\n5| var Rectangle = function (id, x, y, width, height) {\n5|     |Shape.call|(this, id, x, y);\n5|     this.width  = width;\n5|     this.height = height;\n5| };\n5| |Rectangle.prototype = Object.create(Shape.prototype)|;\n5| |Rectangle.prototype.constructor = Rectangle|;\n5| var Circle = function (id, x, y, radius) {\n5|     |Shape.call|(this, id, x, y);\n5|     this.radius = radius;\n5| };\n5| |Circle.prototype = Object.create(Shape.prototype)|;\n5| |Circle.prototype.constructor = Circle|;\n\nClass Inheritance, From Expressions\n-----------------------------------\n\nSupport for mixin-style inheritance by extending from expressions yielding\nfunction objects. [Notice: the generic `aggregation` function is usually provided\nby a library like [this one](https://github.com/rse/aggregation), of course]\n\n6| var |aggregation| = (baseClass, ...mixins) => {\n6|     let base = class _Combined extends baseClass {\n6|         constructor (...args) {\n6|             |super|(...args);\n6|             mixins.forEach((mixin) => {\n6|                 mixin.prototype.|initializer|.call(this);\n6|             });\n6|         }\n6|     };\n6|     let copyProps = (target, source) => {\n6|         Object.getOwnPropertyNames(source)\n6|             .concat(Object.getOwnPropertySymbols(source))\n6|             .forEach((prop) => {\n6|             if (prop.match(/^(?:constructor@3@prototype@3@arguments@3@caller@3@name@3@bind@3@call@3@apply@3@toString@3@length)$/))\n6|                 return\n6|             Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop))\n6|         })\n6|     }\n6|     mixins.forEach((mixin) => {\n6|         copyProps(base.prototype, mixin.prototype);\n6|         copyProps(base, mixin);\n6|     });\n6|     return base;\n6| };\n6|\n6| class |Colored| {\n6|     |initializer| ()     { this._color = \"white\"; }\n6|     get color ()       { return this._color; }\n6|     set color (v)      { this._color = v; }\n6| }\n6|\n6| class |ZCoord| {\n6|     |initializer| ()     { this._z = 0; }\n6|     get z ()           { return this._z; }\n6|     set z (v)          { this._z = v; }\n6| }\n6|\n6| class |Shape| {\n6|     |constructor| (x, y) { this._x = x; this._y = y; }\n6|     get x ()           { return this._x; }\n6|     set x (v)          { this._x = v; }\n6|     get y ()           { return this._y; }\n6|     set y (v)          { this._y = v; }\n6| }\n6|\n6| class Rectangle extends |aggregation(Shape, Colored, ZCoord)| {}\n6|\n6| var rect = new Rectangle(7, 42);\n6| rect.|z|     = 1000;\n6| rect.|color| = \"red\";\n6| console.log(rect.x, rect.y, rect.z, rect.color);\n\n5| var |aggregation| = function (baseClass, mixins) {\n5|     var base = function () {\n5|         |baseClass.apply|(this, arguments);\n5|         mixins.forEach(function (mixin) {\n5|             mixin.prototype.|initializer|.call(this);\n5|         }.bind(this));\n5|     };\n5|     base.prototype = Object.create(baseClass.prototype);\n5|     base.prototype.constructor = base;\n5|     var copyProps = function (target, source) {\n5|         Object.getOwnPropertyNames(source).forEach(function (prop) {\n5|             if (prop.match(/^(?:constructor@3@prototype@3@arguments@3@caller@3@name@3@bind@3@call@3@apply@3@toString@3@length)$/))\n5|                 return\n5|             Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop))\n5|         })\n5|     }\n5|     mixins.forEach(function (mixin) {\n5|         copyProps(base.prototype, mixin.prototype);\n5|         copyProps(base, mixin);\n5|     });\n5|     return base;\n5| };\n5|\n5| var Colored = function () {};\n5| Colored.prototype = {\n5|     |initializer|: function ()  { this._color = \"white\"; },\n5|     getColor:    function ()  { return this._color; },\n5|     setColor:    function (v) { this._color = v; }\n5| };\n5|\n5| var ZCoord = function () {};\n5| ZCoord.prototype = {\n5|     |initializer|: function ()  { this._z = 0; },\n5|     getZ:        function ()  { return this._z; },\n5|     setZ:        function (v) { this._z = v; }\n5| };\n5|\n5| var Shape = function (x, y) {\n5|     this._x = x; this._y = y;\n5| };\n5| Shape.prototype = {\n5|     getX: function ()  { return this._x; },\n5|     setX: function (v) { this._x = v; },\n5|     getY: function ()  { return this._y; },\n5|     setY: function (v) { this._y = v; }\n5| }\n5|\n5| var _Combined = |aggregation(Shape, [ Colored, ZCoord ])|;\n5| var Rectangle = function (x, y) {\n5|     _Combined.call(this, x, y);\n5| };\n5| Rectangle.prototype = Object.create(_Combined.prototype);\n5| Rectangle.prototype.constructor = Rectangle;\n5|\n5| var rect = new Rectangle(7, 42);\n5| rect.|setZ|(1000);\n5| rect.|setColor|(\"red\");\n5| console.log(rect.getX(), rect.getY(), rect.getZ(), rect.getColor());\n\nBase Class Access\n-----------------\n\nIntuitive access to base class constructor and methods.\n\n6| class Shape {\n6|     ...\n6|     |toString| () {\n6|         return `Shape(${this.id})`\n6|     }\n6| }\n6| class Rectangle extends Shape {\n6|     constructor (id, x, y, width, height) {\n6|         |super|(id, x, y);\n6|         ...\n6|     }\n6|     |toString| () {\n6|         return \"Rectangle > \" + |super.toString()|;\n6|     }\n6| }\n6| class Circle extends Shape {\n6|     constructor (id, x, y, radius) {\n6|         |super|(id, x, y);\n6|         ...\n6|     }\n6|     |toString| () {\n6|         return \"Circle > \" + |super.toString()|;\n6|     }\n6| }\n\n5| var Shape = |function| (id, x, y) {\n5|     ...\n5| };\n5| Shape.|prototype.toString| = function (x, y) {\n5|     return \"Shape(\" + this.id + \")\"\n5| };\n5| var Rectangle = function (id, x, y, width, height) {\n5|     |Shape.call|(this, id, x, y);\n5|     ...\n5| };\n5| Rectangle|.prototype.toString| = function () {\n5|     return \"Rectangle > \" + |Shape.prototype.toString.call(this)|;\n5| };\n5| var Circle = function (id, x, y, radius) {\n5|     |Shape.call|(this, id, x, y);\n5|     ...\n5| };\n5| Circle|.prototype.toString| = function () {\n5|     return \"Circle > \" + |Shape.prototype.toString.call(this)|;\n5| };\n\nStatic Members\n--------------\n\nSimple support for static class members.\n\n6| class Rectangle extends Shape {\n6|     ...\n6|     |static defaultRectangle| () {\n6|         return new Rectangle(\"default\", 0, 0, 100, 100);\n6|     }\n6| }\n6| class Circle extends Shape {\n6|     ...\n6|     |static defaultCircle| () {\n6|         return new Circle(\"default\", 0, 0, 100);\n6|     }\n6| }\n6| var defRectangle = |Rectangle.defaultRectangle()|;\n6| var defCircle    = |Circle.defaultCircle()|;\n\n5| var Rectangle = function (id, x, y, width, height) {\n5|     ...\n5| };\n5| |Rectangle.defaultRectangle| = function () {\n5|     return new Rectangle(\"default\", 0, 0, 100, 100);\n5| };\n5| var Circle = function (id, x, y, width, height) {\n5|     ...\n5| };\n5| |Circle.defaultCircle| = function () {\n5|     return new Circle(\"default\", 0, 0, 100);\n5| };\n5| var defRectangle = |Rectangle.defaultRectangle()|;\n5| var defCircle    = |Circle.defaultCircle()|;\n\nGetter/Setter\n-------------\n\nGetter/Setter also directly within classes (and not just within object\ninitializers, as it is possible since ECMAScript 5.1).\n\n6| class Rectangle {\n6|     constructor (width, height) {\n6|         this._width  = width;\n6|         this._height = height;\n6|     }\n6|     |set| width  (width)  { this._width = width;               }\n6|     |get| width  ()       { return this._width;                }\n6|     |set| height (height) { this._height = height;             }\n6|     |get| height ()       { return this._height;               }\n6|     |get| area   ()       { return this._width * this._height; }\n6| };\n6| var r = new Rectangle(50, 20);\n6| r.area === 1000;\n\n5| var Rectangle = function (width, height) {\n5|     this._width  = width;\n5|     this._height = height;\n5| };\n5| Rectangle|.prototype| = {\n5|     |set| width  (width)  { this._width = width;               }|,|\n5|     |get| width  ()       { return this._width;                }|,|\n5|     |set| height (height) { this._height = height;             }|,|\n5|     |get| height ()       { return this._height;               }|,|\n5|     |get| area   ()       { return this._width * this._height; }\n5| };\n5| var r = new Rectangle(50, 20);\n5| r.area === 1000;\n\n\nSymbol Type\n===========\n\nSymbol Type\n-----------\n\nUnique and immutable data type to be used as an identifier for object properties.\nSymbol can have an optional description, but for debugging purposes only.\n\n6| Symbol(\"foo\") |!==| Symbol(\"foo\");\n6| const foo = Symbol();\n6| const bar = Symbol();\n6| typeof foo === |\"symbol\"|;\n6| typeof bar === |\"symbol\"|;\n6| let obj = {};\n6| obj[foo] = \"foo\";\n6| obj[bar] = \"bar\";\n6| JSON.stringify(obj); // {}\n6| Object.keys(obj); // []\n6| Object.getOwnPropertyNames(obj); // []\n6| Object.|getOwnPropertySymbols|(obj); // [ foo, bar ]\n\n5| // no equivalent in ES5\n\nGlobal Symbols\n--------------\n\nGlobal symbols, indexed through unique keys.\n\n6| Symbol.for(\"app.foo\") |===| Symbol.for(\"app.foo\")\n6| const foo = Symbol.for(\"app.foo\");\n6| const bar = Symbol.for(\"app.bar\");\n6| Symbol.keyFor(foo) === \"app.foo\";\n6| Symbol.keyFor(bar) === \"app.bar\";\n6| typeof foo === |\"symbol\"|;\n6| typeof bar === |\"symbol\"|;\n6| let obj = {};\n6| obj[foo] = \"foo\";\n6| obj[bar] = \"bar\";\n6| JSON.stringify(obj); // {}\n6| Object.keys(obj); // []\n6| Object.getOwnPropertyNames(obj); // []\n6| Object.|getOwnPropertySymbols|(obj); // [ foo, bar ]\n\n5| // no equivalent in ES5\n\n\nIterators\n=========\n\nIterator & For-Of Operator\n--------------------------\n\nSupport \"iterable\" protocol to allow objects to customize their\niteration behaviour. Additionally, support \"iterator\" protocol to produce\nsequence of values (either finite or infinite). Finally, provide\nconvenient `of` operator to iterate over all values of an iterable object.\n\n6| let fibonacci = {\n6|     |[Symbol.iterator]()| {\n6|         let pre = 0, cur = 1;\n6|         return {\n6|            |next ()| {\n6|                [ pre, cur ] = [ cur, pre + cur ];\n6|                return |{ done: false, value: cur }|;\n6|            }\n6|         };\n6|     }\n6| }\n6|\n6| for (let n |of| fibonacci) {\n6|     if (n > 1000)\n6|         break;\n6|     console.log(n);\n6| }\n\n5| var fibonacci = {\n5|     |next:| (function () {\n5|         var pre = 0, cur = 1;\n5|         return function () {\n5|             tmp = pre;\n5|             pre = cur;\n5|             cur += tmp;\n5|             return cur;\n5|         };\n5|     })()\n5| };\n5|\n5| var n;\n5| for (;;) {\n5|     n = fibonacci|.next()|;\n5|     if (n > 1000)\n5|         break;\n5|     console.log(n);\n5| }\n\nGenerators\n==========\n\nGenerator Function, Iterator Protocol\n-------------------------------------\n\nSupport for generators, a special case of Iterators containing a\ngenerator function, where the control flow can be paused and resumed, in\norder to produce sequence of values (either finite or infinite).\n\n6| let fibonacci = {\n6|     |*[Symbol.iterator]()| {\n6|         let pre = 0, cur = 1;\n6|         |for (;;)| {\n6|             [ pre, cur ] = [ cur, pre + cur ];\n6|             |yield cur|;\n6|         }\n6|     }\n6| }\n6|\n6| for (|let n of fibonacci|) {\n6|     if (n > 1000)\n6|         break;\n6|     console.log(n);\n6| }\n\n5| var fibonacci = {\n5|     next: (|function| () {\n5|         var pre = 0, cur = 1;\n5|         return function () {\n5|             tmp = pre;\n5|             pre = cur;\n5|             cur += tmp;\n5|             return cur;\n5|         };\n5|     })()\n5| };\n5|\n5| var n;\n5| for (;;) {\n5|     n = fibonacci|.next()|;\n5|     if (n > 1000)\n5|         break;\n5|     console.log(n);\n5| }\n\nGenerator Function, Direct Use\n------------------------------\n\nSupport for generator functions, a special variant of functions where\nthe control flow can be paused and resumed, in order to produce sequence\nof values (either finite or infinite).\n\n6| |function*| range (start, end, step) {\n6|     while (start < end) {\n6|         |yield| start;\n6|         start += step;\n6|     }\n6| }\n6|\n6| for (let i |of| range(0, 10, 2)) {\n6|     console.log(i); // 0, 2, 4, 6, 8\n6| }\n\n5| |function| range (start, end, step) {\n5|     |var list = []|;\n5|     while (start < end) {\n5|         |list.push(start)|;\n5|         start += step;\n5|     }\n5|     |return list|;\n5| }\n5|\n5| |var r = range(0, 10, 2)|;\n5| for (|var i = 0; i < r.length; i++|) {\n5|     console.log(|r[i]|); // 0, 2, 4, 6, 8\n5| }\n\nGenerator Matching\n------------------\n\nSupport for generator functions, i.e., functions where the control flow\ncan be paused and resumed, in order to produce and spread sequence of\nvalues (either finite or infinite).\n\n6| let fibonacci = |function*| (numbers) {\n6|     let pre = 0, cur = 1;\n6|     while (numbers-- > 0) {\n6|         [ pre, cur ] = [ cur, pre + cur ];\n6|         |yield cur|;\n6|     }\n6| };\n6|\n6| for (|let n of fibonacci(1000)|)\n6|     console.log(n);\n6|\n6| let numbers = [ |...fibonacci(1000)| ];\n6|\n6| let [ n1, n2, n3, ...others ] = |fibonacci(1000)|;\n\n5| //  no equivalent in ES5\n\n\nGenerator Control-Flow\n----------------------\n\nSupport for generators, a special case of Iterators where the control\nflow can be paused and resumed, in order to support asynchronous\nprogramming in the style of \"co-routines\" in combination with Promises (see below).\n[Notice: the generic `async` function usually is provided by a reusable library\nand given here just for better understanding. See\n[co](https://github.com/tj/co) or\n[Bluebird](https://github.com/petkaantonov/bluebird/blob/master/API.md#promisecoroutinegeneratorfunction-generatorfunction---function)'s `coroutine` in practice.]\n\n6| //  generic asynchronous control-flow driver\n6| function |async| (proc, ...params) {\n6|     let |iterator| = |proc(...params)|;\n6|     return new Promise((resolve, reject) => {\n6|         let loop = (value) => {\n6|             let result;\n6|             try {\n6|                 result = |iterator.next|(value);\n6|             }\n6|             catch (err) {\n6|                 reject(err);\n6|             }\n6|             if (result.done)\n6|                 resolve(result.value);\n6|             else if (   typeof result.value      === \"object\"\n6|                      && typeof result.value.then === \"function\")\n6|                 result.value.then((value) => {\n6|                     loop(value);\n6|                 }, (err) => {\n6|                     reject(err);\n6|                 });\n6|             else\n6|                 loop(result.value);\n6|         }\n6|         loop();\n6|     });\n6| }\n6|\n6| //  application-specific asynchronous builder\n6| function makeAsync (text, after) {\n6|     return new Promise((resolve, reject) => {\n6|         setTimeout(() => resolve(text), after);\n6|     });\n6| }\n6|\n6| //  application-specific asynchronous procedure\n6| |async|(|function*| (greeting) {\n6|     let foo = |yield| makeAsync(\"foo\", 300)\n6|     let bar = |yield| makeAsync(\"bar\", 200)\n6|     let baz = |yield| makeAsync(\"baz\", 100)\n6|     return `${greeting} ${foo} ${bar} ${baz}`\n6| }, \"Hello\").then((msg) => {\n6|     console.log(\"RESULT:\", msg); // \"Hello foo bar baz\"\n6| })\n\n5| //  no equivalent in ES5\n\nGenerator Methods\n-----------------\n\nSupport for generator methods, i.e., methods in classes and on objects,\nbased on generator functions.\n\n6| class Clz {\n6|     |* bar ()| {\n6|         ...\n6|     }\n6| };\n6| let Obj = {\n6|     |* foo ()| {\n6|         ...\n6|     }\n6| };\n\n5| //  no equivalent in ES5\n\n# Comprehensions\n# ==============\n#\n# List Comprehension\n# ------------------\n#\n# Concise FP-style way to create a list/array, based on another list where\n# each entry is the result of some operation.\n#\n# 6| let results = [\n# 6|     |for (c |of| customers)|\n# 6|         if (c.city === \"Munich\")\n# 6|             { name: c.name, age: c.age } ];\n#\n# 5| var results = |[]|;\n# 5| for (var c |in| customers)\n# 5|     if (customers.hasOwnProperty(c))\n# 5|         if (c.city === \"Munich\")\n# 5|             |result.push|({ name: c.name, age: c.age });\n#\n# Generator Comprehension\n# -----------------------\n#\n# Concise FP-style way to create an object, based on another object where\n# each entry is the result of some operation.\n#\n# 6| let results = (\n# 6|     for (|c of customers|)\n# 6|         if (c.city == \"Munich\")\n# 6|             { name: c.name, age: c.age } );\n#\n# # 5| var results = |[]|;\n# 5| for (|var c = customers.next(); !c.done; c = customers.next()|)\n# 5|     if (c.city === \"Munich\")\n# 5|         |result.push|({ name: c.name, age: c.age });\n\n\nMap/Set & WeakMap/WeakSet\n=========================\n\nSet Data-Structure\n------------------\n\nCleaner data-structure for common algorithms based on sets.\n\n6| let s = |new Set()|;\n6| s.|add(\"hello\")|.|add(\"goodbye\")|.|add(\"hello\")|;\n6| s.|size| === 2;\n6| s.|has(\"hello\")| === true;\n6| for (let key |of| s.|values()|) // insertion order\n6|     console.log(key);\n\n5| var s = |{}|;\n5| |s[\"hello\"] = true|; |s[\"goodbye\"] = true|; |s[\"hello\"] = true|;\n5| |Object.keys(s).length| === 2;\n5| |s[\"hello\"]| === true;\n5| for (var key |in| s) // arbitrary order\n5|     if (s.hasOwnProperty(key))\n5|         console.log(s[key]);\n\nMap Data-Structure\n------------------\n\nCleaner data-structure for common algorithms based on maps.\n\n6| let m = |new Map()|;\n6| let s = |Symbol()|;\n6| m.|set(\"hello\", 42)|;\n6| m.|set(s, 34)|;\n6| m.|get(s)| === 34;\n6| m.|size| === 2;\n6| for (let |[ key, val ] of m.entries()|)\n6|     console.log(key + \" = \" + val);\n\n5| var m = |{}|;\n5| // no equivalent in ES5\n5| |m[\"hello\"] = 42|;\n5| // no equivalent in ES5\n5| // no equivalent in ES5\n5| |Object.keys(m).length| === 2;\n5| for (key |in| m) {\n5|     if (m.hasOwnProperty(key)) {\n5|         var |val = m[key]|;\n5|         console.log(key + \" = \" + val);\n5|     }\n5| }\n\n\nWeak-Link Data-Structures\n-------------------------\n\nMemory-leak-free Object-key’d side-by-side data-structures.\n\n6| let isMarked     = new |WeakSet|();\n6| let attachedData = new |WeakMap|();\n6|\n6| export class Node {\n6|     constructor (id)   { this.id = id;                  }\n6|     mark        ()     { |isMarked.add|(this);            }\n6|     unmark      ()     { |isMarked.delete|(this);         }\n6|     marked      ()     { return |isMarked.has|(this);     }\n6|     set data    (data) { |attachedData.set|(this, data);  }\n6|     get data    ()     { return |attachedData.get|(this); }\n6| }\n6|\n6| let foo = new Node(\"foo\");\n6|\n6| JSON.stringify(foo) === |'{\"id\":\"foo\"}'|;\n6| foo.mark();\n6| foo.data = \"bar\";\n6| foo.data === \"bar\";\n6| JSON.stringify(foo) === |'{\"id\":\"foo\"}'|;\n6|\n6| isMarked.has(foo)     === |true|\n6| attachedData.has(foo) === |true|\n6| foo |=| null  /* remove only reference to foo */\n6| attachedData.has(foo) === |false|\n6| isMarked.has(foo)     === |false|\n\n5| // no equivalent in ES5\n\n\nTyped Arrays\n============\n\nTyped Arrays\n------------\n\nSupport for arbitrary byte-based data structures to implement network\nprotocols, cryptography algorithms, file format manipulations, etc.\n\n6| //  ES6 class equivalent to the following C structure:\n6| //  struct Example { unsigned long id; char username[16]; float amountDue; };\n6| class Example {\n6|     constructor (buffer = |new ArrayBuffer(24)|) {\n6|         this.buffer = buffer;\n6|     }\n6|     set buffer (buffer) {\n6|         this._buffer    = buffer;\n6|         this._id        = |new Uint32Array (this._buffer,  0,  1)|;\n6|         this._username  = |new Uint8Array  (this._buffer,  4, 16)|;\n6|         this._amountDue = |new Float32Array(this._buffer, 20,  1)|;\n6|     }\n6|     get buffer ()     { return this._buffer;       }\n6|     set id (v)        { this._id[0] = v;           }\n6|     get id ()         { return this._id[0];        }\n6|     set username (v)  { this._username[0] = v;     }\n6|     get username ()   { return this._username[0];  }\n6|     set amountDue (v) { this._amountDue[0] = v;    }\n6|     get amountDue ()  { return this._amountDue[0]; }\n6| }\n6|\n6| let example = new Example()\n6| example.|id| = 7\n6| example.|username| = \"John Doe\"\n6| example.|amountDue| = 42.0\n\n5| //  no equivalent in ES5\n5| //  (only an equivalent in HTML5)\n\n\nNew Built-In Methods\n====================\n\nObject Property Assignment\n--------------------------\n\nNew function for assigning enumerable properties of one or more source\nobjects onto a destination object.\n\n6| var dest = { quux: 0 };\n6| var src1 = { foo: |1|, bar: 2 };\n6| var src2 = { foo: |3|, baz: 4 };\n6| Object|.assign|(dest, src1, src2);\n6| dest.quux === 0;\n6| dest.foo  === |3|;\n6| dest.bar  === 2;\n6| dest.baz  === 4;\n\n5| var dest = { quux: 0 };\n5| var src1 = { foo: |1|, bar: 2 };\n5| var src2 = { foo: |3|, baz: 4 };\n5| Object|.keys(src1).forEach|(function(k) {\n5|     |dest[k] = src1[k]|;\n5| });\n5| Object|.keys(src2).forEach|(function(k) {\n5|     |dest[k] = src2[k]|;\n5| });\n5| dest.quux === 0;\n5| dest.foo  === |3|;\n5| dest.bar  === 2;\n5| dest.baz  === 4;\n\nArray Element Finding\n---------------------\n\nNew function for finding an element in an array.\n\n6| [ 1, 3, 4, 2 ].|find|(|x =>| x > 3); // 4\n6| [ 1, 3, 4, 2 ].|findIndex|(|x =>| x > 3); // 2\n\n5| [ 1, 3, 4, 2 ].|filter|(|function (x) { return| x > 3; })|[0]|; // 4\n5| // no equivalent in ES5\n\nString Repeating\n----------------\n\nNew string repeating functionality.\n\n6| \" \".|repeat|(4 * depth);\n6| \"foo\".|repeat|(3);\n\n5| |Array|((4 * depth) + 1).|join|(\" \");\n5| |Array|(3 + 1).|join|(\"foo\");\n\nString Searching\n----------------\n\nNew specific string functions to search for a sub-string.\n\n6| \"hello\".|startsWith|(\"ello\", 1); // true\n6| \"hello\".|endsWith|(\"hell\", 4);   // true\n6| \"hello\".|includes|(\"ell\");       // true\n6| \"hello\".|includes|(\"ell\", 1);    // true\n6| \"hello\".|includes|(\"ell\", 2);    // false\n\n5| \"hello\".|indexOf|(\"ello\") === 1;    // true\n5| \"hello\".|indexOf|(\"hell\") === (4 |- \"hell\".length|); // true\n5| \"hello\".|indexOf|(\"ell\") !== -1;    // true\n5| \"hello\".|indexOf|(\"ell\", 1) !== -1; // true\n5| \"hello\".|indexOf|(\"ell\", 2) !== -1; // false\n\nNumber Type Checking\n--------------------\n\nNew functions for checking for non-numbers and finite numbers.\n\n6| Number.|isNaN|(42) === false;\n6| Number.|isNaN|(NaN) === true;\n6|\n6| Number.|isFinite|(Infinity) === false;\n6| Number.|isFinite|(-Infinity) === false;\n6| Number.|isFinite|(NaN) === false;\n6| Number.|isFinite|(123) === true;\n\n5| var |isNaN| = function (n) {\n5|     return |n !== n|;\n5| };\n5| var |isFinite| = function (v) {\n5|     return |(typeof v === \"number\" && !isNaN(v) && v !== Infinity && v !== -Infinity)|;\n5| };\n5| isNaN(42) === false;\n5| isNaN(NaN) === true;\n5|\n5| isFinite(Infinity) === false;\n5| isFinite(-Infinity) === false;\n5| isFinite(NaN) === false;\n5| isFinite(123) === true;\n\nNumber Safety Checking\n----------------------\n\nChecking whether an integer number is in the safe range, i.e., it is\ncorrectly represented by JavaScript (where all numbers, including\ninteger numbers, are technically floating point number).\n\n6| Number.|isSafeInteger|(42) === true;\n6| Number.|isSafeInteger|(9007199254740992) === false;\n\n5| function isSafeInteger (n) {\n5|     return (\n5|            typeof n === 'number'\n5|         && Math.round(n) === n\n5|         && -(Math.pow(2, 53) - 1) <= n\n5|         && n <= (Math.pow(2, 53) - 1)\n5|     );\n5| }\n5| |isSafeInteger|(42) === true;\n5| |isSafeInteger|(9007199254740992) === false;\n\nNumber Comparison\n-----------------\n\nAvailability of a standard Epsilon value for more precise comparison of\nfloating point numbers.\n\n6| console.log(0.1 + 0.2 === 0.3); // false\n6| console.log(Math.abs((0.1 + 0.2) - 0.3) < |Number.EPSILON|); // true\n\n5| console.log(0.1 + 0.2 === 0.3); // false\n5| console.log(Math.abs((0.1 + 0.2) - 0.3) < |2.220446049250313e-16|); // true\n\nNumber Truncation\n-----------------\n\nTruncate a floating point number to its integral part,\ncompletely dropping the fractional part.\n\n6| console.log(|Math.trunc|(42.7)) // 42\n6| console.log(|Math.trunc|( 0.1)) // 0\n6| console.log(|Math.trunc|(-0.1)) // -0\n\n5| function mathTrunc (x) {\n5|     return |(x < 0 ? Math.ceil(x) : Math.floor(x))|;\n5| }\n5| console.log(mathTrunc(42.7)) // 42\n5| console.log(mathTrunc( 0.1)) // 0\n5| console.log(mathTrunc(-0.1)) // -0\n\nNumber Sign Determination\n-------------------------\n\nDetermine the sign of a number, including special cases of signed zero and non-number.\n\n6| console.log(|Math.sign|(7))   // 1\n6| console.log(|Math.sign|(0))   // 0\n6| console.log(|Math.sign|(-0))  // -0\n6| console.log(|Math.sign|(-7))  // -1\n6| console.log(|Math.sign|(NaN)) // NaN\n\n5| function |mathSign| (x) {\n5|     return |((x === 0 \\|\\| isNaN(x)) ? x : (x > 0 ? 1 : -1))|;\n5| }\n5| console.log(mathSign(7))   // 1\n5| console.log(mathSign(0))   // 0\n5| console.log(mathSign(-0))  // -0\n5| console.log(mathSign(-7))  // -1\n5| console.log(mathSign(NaN)) // NaN\n\n\nPromises\n========\n\nPromise Usage\n-------------\n\nFirst class representation of a value that may be made asynchronously and be available in the future.\n\n6| function msgAfterTimeout (msg, who, timeout) {\n6|     return |new Promise|((|resolve|, reject) => {\n6|         setTimeout(() => |resolve|(`${msg} Hello ${who}!`), timeout);\n6|     });\n6| }\n6| msgAfterTimeout(\"\", \"Foo\", 100).|then|((msg) =>\n6|     msgAfterTimeout(msg, \"Bar\", 200)\n6| ).|then|((msg) => {\n6|     console.log(`done after 300ms:${msg}`);\n6| });\n\n5| function msgAfterTimeout (msg, who, timeout, |onDone|) {\n5|     setTimeout(function () {\n5|         |onDone|(msg + \" Hello \" + who + \"!\");\n5|     }, timeout);\n5| }\n5| msgAfterTimeout(\"\", \"Foo\", 100|, function| (msg) {\n5|     msgAfterTimeout(msg, \"Bar\", 200|, function| (msg) {\n5|         console.log(\"done after 300ms:\" + msg);\n5|     });\n5| });\n\nPromise Combination\n-------------------\n\nCombine one or more promises into new promises without having to take\ncare of ordering of the underlying asynchronous operations yourself.\n\n6| function fetchAsync (url, timeout, onData, onError) {\n6|     ...\n6| }\n6| let fetchPromised = (url, timeout) => {\n6|     return |new Promise|((|resolve|, |reject|) => {\n6|         fetchAsync(url, timeout, |resolve|, |reject|);\n6|     });\n6| }\n6| |Promise.all|([\n6|     fetchPromised(\"http://backend/foo.txt\", 500),\n6|     fetchPromised(\"http://backend/bar.txt\", 500),\n6|     fetchPromised(\"http://backend/baz.txt\", 500)\n6| ]).|then|((data) => {\n6|     let [ foo, bar, baz ] = data;\n6|     console.log(`success: foo=${foo} bar=${bar} baz=${baz}`);\n6| }, (err) => {\n6|     console.log(`error: ${err}`);\n6| });\n\n5| function fetchAsync (url, timeout, onData, onError) {\n5|     ...\n5| }\n5| function |fetchAll| (request, onData, onError) {\n5|     var result = [], results = 0;\n5|     for (var i = 0; i < request.length; i++) {\n5|         result[i] = null;\n5|         (function (i) {\n5|             fetchAsync(request[i].url, request[i].timeout, function (data) {\n5|                 |result[i] = data|;\n5|                 |if (++results === request.length)|\n5|                     |onData(result)|;\n5|             }, onError);\n5|         })(i);\n5|     }\n5| }\n5| |fetchAll|([\n5|     { url: \"http://backend/foo.txt\", timeout: 500 },\n5|     { url: \"http://backend/bar.txt\", timeout: 500 },\n5|     { url: \"http://backend/baz.txt\", timeout: 500 }\n5| ], function (data) {\n5|     var foo = data[0], bar = data[1], baz = data[2];\n5|     console.log(\"success: foo=\" + foo + \" bar=\" + bar + \" baz=\" + baz);\n5| }, function (err) {\n5|     console.log(\"error: \" + err);\n5| });\n\n\nMeta-Programming\n================\n\nProxying\n--------\n\nHooking into runtime-level object meta-operations.\n\n6| let target = {\n6|     foo: \"Welcome, foo\"\n6| };\n6| let proxy = |new Proxy|(|target|, {\n6|     |get (receiver, name)| {\n6|         return name in receiver ? receiver[name] : `Hello, ${name}`;\n6|     }\n6| });\n6| proxy.foo   === \"Welcome, foo\";\n6| proxy.|world| === \"Hello, |world|\";\n\n5| // no equivalent in ES5\n\nReflection\n----------\n\nMake calls corresponding to the object meta-operations.\n\n6| let obj = { a: 1 };\n6| Object.defineProperty(obj, \"b\", { value: 2 });\n6| obj[Symbol(\"c\")] = 3;\n6| |Reflect.ownKeys|(obj); // [ \"a\", \"b\", Symbol(c) ]\n\n5| var obj = { a: 1 };\n5| Object.defineProperty(obj, \"b\", { value: 2 });\n5| // no equivalent in ES5\n5| |Object.getOwnPropertyNames|(obj); // [ \"a\", \"b\" ]\n\n\nInternationalization & Localization\n===================================\n\nCollation\n---------\n\nSorting a set of strings and searching within a set of strings.\nCollation is parameterized by locale and aware of Unicode.\n\n6| // in German,  \"ä\" sorts with \"a\"\n6| // in Swedish, \"ä\" sorts after \"z\"\n6| var list = [ |\"ä\"|, \"a\", \"z\" ];\n6| var l10nDE = new Intl.Collator(|\"de\"|);\n6| var l10nSV = new Intl.Collator(|\"sv\"|);\n6| l10nDE.compare(\"ä\", \"z\") === |-1|;\n6| l10nSV.compare(\"ä\", \"z\") === |+1|;\n6| console.log(list.sort(l10nDE.compare)); // [ \"a\", |\"ä\"|, \"z\" ]\n6| console.log(list.sort(l10nSV.compare)); // [ \"a\", \"z\", |\"ä\"| ]\n\n5| // no equivalent in ES5\n\nNumber Formatting\n-----------------\n\nFormat numbers with digit grouping and localized separators.\n\n6| var l10nEN = new Intl.NumberFormat(|\"en-US\"|);\n6| var l10nDE = new Intl.NumberFormat(|\"de-DE\"|);\n6| l10nEN.format(1234567.89) === |\"1,234,567.89\"|;\n6| l10nDE.format(1234567.89) === |\"1.234.567,89\"|;\n\n5| // no equivalent in ES5\n\nCurrency Formatting\n-------------------\n\nFormat numbers with digit grouping, localized separators and attached currency symbol.\n\n6| var l10nUSD = new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: |\"USD\"| });\n6| var l10nGBP = new Intl.NumberFormat(\"en-GB\", { style: \"currency\", currency: |\"GBP\"| });\n6| var l10nEUR = new Intl.NumberFormat(\"de-DE\", { style: \"currency\", currency: |\"EUR\"| });\n6| l10nUSD.format(100200300.40) === |\"$100,200,300.40\"|;\n6| l10nGBP.format(100200300.40) === |\"£100,200,300.40\"|;\n6| l10nEUR.format(100200300.40) === |\"100.200.300,40 €\"|;\n\n5| // no equivalent in ES5\n\nDate/Time Formatting\n--------------------\n\nFormat date/time with localized ordering and separators.\n\n6| var l10nEN = new Intl.DateTimeFormat(|\"en-US\"|);\n6| var l10nDE = new Intl.DateTimeFormat(|\"de-DE\"|);\n6| l10nEN.format(new Date(\"2015-01-02\")) === |\"1/2/2015\"|;\n6| l10nDE.format(new Date(\"2015-01-02\")) === |\"2.1.2015\"|;\n\n5| // no equivalent in ES5\n"
        },
        {
          "name": "index.css",
          "type": "blob",
          "size": 8.84375,
          "content": "/*\n**  es6-features -- ECMAScript 6 Feature Overview & Comparison\n**  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n@import \"lib/normalize/normalize.css\";\n@import \"lib/typopro/TypoPRO-OpenSans/TypoPRO-OpenSans-Light.css\";\n@import \"lib/typopro/TypoPRO-OpenSans/TypoPRO-OpenSans-Regular.css\";\n@import \"lib/typopro/TypoPRO-OpenSans/TypoPRO-OpenSans-Bold.css\";\n@import \"lib/typopro/TypoPRO-OpenSans/TypoPRO-OpenSans-ExtraBold.css\";\n@import \"lib/typopro/TypoPRO-DejaVu/TypoPRO-DejaVuSansMono-Regular.css\";\n@import \"lib/typopro/TypoPRO-DejaVu/TypoPRO-DejaVuSansMono-Bold.css\";\n@import \"lib/typopro/TypoPRO-DejaVu/TypoPRO-DejaVuSansMono-Oblique.css\";\n@import \"lib/typopro/TypoPRO-DejaVu/TypoPRO-DejaVuSansMono-BoldOblique.css\";\n@import \"lib/typopro/TypoPRO-Journal/TypoPRO-Journal.css\";\n@import \"lib/fontawesome/fontawesome.css\";\n\nbody {\n    background-color: #444444;\n    font-family: \"TypoPRO Open Sans\", sans-serif;\n    font-size: 10pt;\n    margin: 0px;\n    padding: 0px;\n    position: relative;\n}\n\ncode {\n    font-family: \"TypoPRO DejaVu Sans Mono\", sans-serif;\n}\n\n.head {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 30px;\n    background-color: #222222;\n    color: #e0e0e0;\n    font-size: 160%;\n    padding: 14px 40px 10px 40px;\n    -webkit-box-shadow: 2px 2px 4px 0px #444444;\n    box-shadow: 2px 2px 4px 0px #444444;\n    z-index: 1000;\n}\n.head .bold {\n    font-weight: 800;\n    color: #ffffff;\n}\n.foot {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 50px;\n    background-color: #222222;\n    color: #909090;\n    font-size: 80%;\n    padding: 14px 0px 10px 0px;\n    -webkit-box-shadow: 2px 2px 4px 0px #444444;\n    box-shadow: 2px 2px 4px 0px #444444;\n    text-align: right;\n    z-index: 1000;\n}\n.foot .text {\n    text-align: right;\n    padding-right: 30px;\n}\n.foot .text a {\n    text-decoration: none;\n    color: #b0b0b0;\n}\n\n#starbutton {\n    position: fixed;\n    top: 20px;\n    right: 80px;\n    z-index: 2000;\n}\n\n.twitter-share-button {\n    position: fixed !important;\n    top: 20px;\n    right: 260px;\n    z-index: 2000;\n}\n\n.slogan {\n    font-family: \"TypoPRO Journal\";\n    font-size: 25pt;\n    color: #f0e0d0;\n    position: fixed;\n    right: 30px;\n    bottom: 110px;\n    transform: rotate(-4deg);\n    -ms-transform: rotate(-4deg);\n    -webkit-transform: rotate(-4deg);\n    letter-spacing: 1px;\n    line-height: 19pt;\n}\n.slogan a {\n    text-decoration: underline;\n    color: #f0e0d0;\n}\n\n.statement {\n    font-family: \"TypoPRO Journal\";\n    font-size: 25pt;\n    color: #777777;\n    position: fixed;\n    right: 100px;\n    bottom: 250px;\n    transform: rotate(-4deg);\n    -ms-transform: rotate(-4deg);\n    -webkit-transform: rotate(-4deg);\n    letter-spacing: 1px;\n    line-height: 19pt;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.bg {\n    font-weight: 800;\n    z-index: -1000;\n    color: #555555;\n    font-size: 400pt;\n    position: fixed;\n    bottom: 50px;\n    right: -120px;\n    transform: rotate(-8deg);\n    -ms-transform: rotate(-8deg);\n    -webkit-transform: rotate(-8deg);\n    letter-spacing: -20px;\n    opacity: 0.4;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.nav {\n    position: fixed;\n    left: 0px;\n    top: 80px;\n    margin-left: 30px;\n    width: 320px;\n    background-color: #222222;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding-left: 0px;\n    height: calc(100% - 180px);\n    -webkit-border-radius: 4px 4px 4px 4px;\n    border-radius: 4px 4px 4px 4px;\n    -webkit-box-shadow: 2px 2px 4px 0px #444444;\n    box-shadow: 2px 2px 4px 0px #444444;\n}\n.nav > ul {\n    position: relative;\n    list-style-type: none;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    padding-left: 0px;\n    width: 100%;\n}\n.nav > ul > li {\n    background-color: #222222;\n    color: #e0e0e0;\n    font-weight: bold;\n    padding-left: 10px;\n    width: 100%;\n}\n.nav > ul > li > ul {\n    position: relative;\n    left: -10px;\n    background-color: red;\n    list-style-type: none;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    padding-left: 0px;\n    width: 100%;\n}\n.nav > ul > li > ul > li {\n    background-color: #111111;\n    color: #000000;\n    font-weight: normal;\n    width: 100%;\n    position: relative;\n}\n.nav > ul > li > ul > li a {\n    text-decoration: none;\n    color: #e0e0e0;\n    padding-left: 30px;\n    width: 100%;\n    display: inline-block;\n}\n.nav > ul > li > ul > li i {\n    position: absolute;\n    top: 3px;\n    right: 10px;\n    color: #ffffff;\n    display: none;\n}\n.nav > ul > li > ul > li.selected i {\n    display: block;\n}\n.nav > ul > li > ul > li.selected a {\n    background-color: #336699;\n    color: #ffffff;\n    width: 100%;\n}\n\n.content {\n    position: fixed;\n    left: 380px;\n    top: 80px;\n    width: calc(100% - 380px - 30px);\n    height: calc(100% - 180px);\n    overflow: scroll;\n}\n\n.content .title {\n    font-size: 180%;\n    font-weight: 800;\n    color: #ffffff;\n}\n.content .subtitle {\n    font-size: 140%;\n    font-weight: bold;\n    color: #ffffff;\n    margin-top: -2px;\n}\n\n.content .desc {\n    font-size: 12pt;\n    color: #ffffff;\n    margin: 8px 0px 8px 0px;\n}\n\n.content .desc a {\n    font-size: 12pt;\n    color: #fff0e0;\n    text-decoration: none;\n}\n.content .desc a:visited {\n    color: #fff0e0;\n}\n\n.content .js {\n    margin: 00px 0px 00px 0px;\n    width: 100%;\n    -webkit-border-radius: 4px 4px 4px 4px;\n    border-radius: 4px 4px 4px 4px;\n    -webkit-box-shadow: 2px 2px 4px 0px #444444;\n    box-shadow: 2px 2px 4px 0px #444444;\n    position: relative;\n}\n.content .js.es6 {\n    margin-top: 30px;\n}\n.content .js .title {\n    font-size: 80%;\n    font-weight: 300;\n    color: #cccccc;\n    background-color: #222222;\n    padding: 4px 10px 2px 10px;\n    -webkit-border-radius: 4px 4px 0px 0px;\n    border-radius: 4px 4px 0px 0px;\n}\n.content .js .title b {\n    font-weight: bold;\n}\n.content .js .title .style {\n    cursor: pointer;\n}\n.content .js.reduced .title .style.reduced,\n.content .js.traditional .title .style.traditional {\n    text-decoration: underline;\n}\n.content .js.reduced .code .semi {\n    display: none;\n}\n.content .js .code {\n    font-family: \"TypoPRO DejaVu Sans Mono\", sans-serif;\n    font-size: 11pt;\n    display: block;\n    white-space: pre;\n    background-color: white;\n    padding: 10px 10px 10px 10px;\n    -webkit-border-radius: 0px 0px 4px 4px;\n    border-radius: 0px 0px 4px 4px;\n    overflow-x: scroll;\n    line-height: 1.25;\n}\n.content .js.es5 .code {\n    border-left: 10px solid #990000;\n    border-right: 10px solid #ffffff;\n}\n.content .js.es6 .code {\n    border-left: 10px solid #009900;\n    border-right: 10px solid #ffffff;\n}\n.content .js .code .keyword {\n    font-weight: bold;\n    color: #3377bb;\n}\n.content .js .code .punctuation {\n    font-weight: bold;\n    color: #3377bb;\n}\n.content .js .code .semi {\n    font-weight: bold;\n    color: #3377bb;\n}\n.content .js .code .literal {\n    color: #aa7733;\n}\n.content .js .code .comment {\n    color: #999999;\n    font-weight: normal;\n    font-style: italic;\n}\n.content .js .code .comment * {\n    color: #999999;\n    font-weight: normal;\n    font-style: italic;\n}\n.content .js .code .mark {\n    background-color: #f0f8ff;\n    padding: 0px 0px 0px 0px;\n    -webkit-border-radius: 2px 2px 2px 2px;\n    border-radius: 2px 2px 2px 2px;\n    border-top: 1px solid #e0e8ef;\n    border-bottom: 1px solid #e0e8ef;\n}\n.content .js .ellipsis {\n    color: #999999;\n}\n.content .js .icon {\n    z-index: 999;\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    font-size: 30px;\n}\n.content .js.es5 .icon {\n    color: #990000;\n}\n.content .js.es6 .icon {\n    color: #009900;\n}\n.content .js .icon.fa-circle {\n    z-index: 999;\n    color: #ffffff;\n}\n\n.arrow {\n    width: 100%;\n    text-align: center;\n    font-size: 50px;\n    height: 30px;\n}\n.arrow i {\n    color: #222222;\n    position: relative;\n    top: -24px;\n    text-shadow: 2px 2px 4px #444444;\n}\n\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 312.033203125,
          "content": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n        <!--\n            es6-features ~~ ECMAScript 6 Feature Overview & Comparison\n            Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n\n            Permission is hereby granted, free of charge, to any person obtaining\n            a copy of this software and associated documentation files (the\n            \"Software\"), to deal in the Software without restriction, including\n            without limitation the rights to use, copy, modify, merge, publish,\n            distribute, sublicense, and/or sell copies of the Software, and to\n            permit persons to whom the Software is furnished to do so, subject to\n            the following conditions:\n\n            The above copyright notice and this permission notice shall be included\n            in all copies or substantial portions of the Software.\n\n            THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n            EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n            MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n            IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n            CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n            TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n            SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n        -->\n        <title>ECMAScript 6: New Features: Overview and Comparison</title>\n        <script src=\"lib/jquery/jquery.js\" type=\"text/javascript\"></script>\n        <script src=\"lib/director/director.js\" type=\"text/javascript\"></script>\n        <script src=\"lib/mousetrap/mousetrap.js\" type=\"text/javascript\"></script>\n        <script src=\"index.js\" type=\"text/javascript\"></script>\n        <link href=\"index.css\" rel=\"stylesheet\" type=\"text/css\"/>\n    </head>\n    <body>\n        <a href=\"https://github.com/rse/es6-features\">\n            <img style=\"position: fixed; top: 0; right: 0; border: 0; z-index: 2000;\"\n                 src=\"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\"\n                 alt=\"Fork me on GitHub\"\n                 data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\"/>\n        </a>\n        <iframe id=\"starbutton\" src=\"https://ghbtns.com/github-btn.html?user=rse&repo=es6-features&type=star&count=true\"\n            frameborder=\"0\" scrolling=\"0\" width=\"170px\" height=\"20px\">\n        </iframe>\n        <a class=\"twitter-share-button\" href=\"https://twitter.com/share\"\n            data-url=\"http://es6-features.org\"\n            data-text=\"See how cleaner and more concise JavaScript can look and start coding in ECMAScript 6 now! @engelschall's\"\n            data-hashtags=\"ES6\"\n            data-related=\"engelschall\"\n        >Tweet</a>\n        <script>\n            !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>0\n        </script>\n        <div class=\"bg\">ES6</div>\n        <div class=\"head\">\n            <span class=\"bold\">ECMAScript 6</span> &mdash; New Features: Overview &amp; Comparison\n        </div>\n        <div class=\"slogan\">\n            See how cleaner and more concise<br/>\n            your JavaScript code can look and<br/>\n            <a href=\"https://github.com/rse/es6-support\">start coding</a> in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ES6</a> <a href=\"https://github.com/rse/es6-support\">now</a> !!\n        </div>\n        <div class=\"statement\">\n            \"A good programming language is a<br/>\n            conceptual universe for thinking<br/>\n            about programming.\" &mdash; Alan J. Perlis\n        </div>\n        <div class=\"nav\">\n            <!-- ATTENTION: BEGIN OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n            <ul>\n<li class=\"title\">Constants\n    <ul>\n<li class=\"subtitle subtitle_Constants\">\n    <a href=\"#Constants\">Constants</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Scoping\n    <ul>\n<li class=\"subtitle subtitle_BlockScopedVariables\">\n    <a href=\"#BlockScopedVariables\">Block-Scoped Variables</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_BlockScopedFunctions\">\n    <a href=\"#BlockScopedFunctions\">Block-Scoped Functions</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Arrow Functions\n    <ul>\n<li class=\"subtitle subtitle_ExpressionBodies\">\n    <a href=\"#ExpressionBodies\">Expression Bodies</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_StatementBodies\">\n    <a href=\"#StatementBodies\">Statement Bodies</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_Lexicalthis\">\n    <a href=\"#Lexicalthis\">Lexical <code>this</code></a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Extended Parameter Handling\n    <ul>\n<li class=\"subtitle subtitle_DefaultParameterValues\">\n    <a href=\"#DefaultParameterValues\">Default Parameter Values</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_RestParameter\">\n    <a href=\"#RestParameter\">Rest Parameter</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_SpreadOperator\">\n    <a href=\"#SpreadOperator\">Spread Operator</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Template Literals\n    <ul>\n<li class=\"subtitle subtitle_StringInterpolation\">\n    <a href=\"#StringInterpolation\">String Interpolation</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_CustomInterpolation\">\n    <a href=\"#CustomInterpolation\">Custom Interpolation</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_RawStringAccess\">\n    <a href=\"#RawStringAccess\">Raw String Access</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Extended Literals\n    <ul>\n<li class=\"subtitle subtitle_BinaryOctalLiteral\">\n    <a href=\"#BinaryOctalLiteral\">Binary & Octal Literal</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_UnicodeStringRegExpLiteral\">\n    <a href=\"#UnicodeStringRegExpLiteral\">Unicode String & RegExp Literal</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Enhanced Regular Expression\n    <ul>\n<li class=\"subtitle subtitle_RegularExpressionStickyMatching\">\n    <a href=\"#RegularExpressionStickyMatching\">Regular Expression Sticky Matching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Enhanced Object Properties\n    <ul>\n<li class=\"subtitle subtitle_PropertyShorthand\">\n    <a href=\"#PropertyShorthand\">Property Shorthand</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ComputedPropertyNames\">\n    <a href=\"#ComputedPropertyNames\">Computed Property Names</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_MethodProperties\">\n    <a href=\"#MethodProperties\">Method Properties</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Destructuring Assignment\n    <ul>\n<li class=\"subtitle subtitle_ArrayMatching\">\n    <a href=\"#ArrayMatching\">Array Matching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ObjectMatchingShorthandNotation\">\n    <a href=\"#ObjectMatchingShorthandNotation\">Object Matching, Shorthand Notation</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ObjectMatchingDeepMatching\">\n    <a href=\"#ObjectMatchingDeepMatching\">Object Matching, Deep Matching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ObjectAndArrayMatchingDefaultValues\">\n    <a href=\"#ObjectAndArrayMatchingDefaultValues\">Object And Array Matching, Default Values</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ParameterContextMatching\">\n    <a href=\"#ParameterContextMatching\">Parameter Context Matching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_FailSoftDestructuring\">\n    <a href=\"#FailSoftDestructuring\">Fail-Soft Destructuring</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Modules\n    <ul>\n<li class=\"subtitle subtitle_ValueExportImport\">\n    <a href=\"#ValueExportImport\">Value Export/Import</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_DefaultWildcard\">\n    <a href=\"#DefaultWildcard\">Default & Wildcard</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Classes\n    <ul>\n<li class=\"subtitle subtitle_ClassDefinition\">\n    <a href=\"#ClassDefinition\">Class Definition</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ClassInheritance\">\n    <a href=\"#ClassInheritance\">Class Inheritance</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ClassInheritanceFromExpressions\">\n    <a href=\"#ClassInheritanceFromExpressions\">Class Inheritance, From Expressions</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_BaseClassAccess\">\n    <a href=\"#BaseClassAccess\">Base Class Access</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_StaticMembers\">\n    <a href=\"#StaticMembers\">Static Members</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GetterSetter\">\n    <a href=\"#GetterSetter\">Getter/Setter</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Symbol Type\n    <ul>\n<li class=\"subtitle subtitle_SymbolType\">\n    <a href=\"#SymbolType\">Symbol Type</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GlobalSymbols\">\n    <a href=\"#GlobalSymbols\">Global Symbols</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Iterators\n    <ul>\n<li class=\"subtitle subtitle_IteratorForOfOperator\">\n    <a href=\"#IteratorForOfOperator\">Iterator & For-Of Operator</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Generators\n    <ul>\n<li class=\"subtitle subtitle_GeneratorFunctionIteratorProtocol\">\n    <a href=\"#GeneratorFunctionIteratorProtocol\">Generator Function, Iterator Protocol</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GeneratorFunctionDirectUse\">\n    <a href=\"#GeneratorFunctionDirectUse\">Generator Function, Direct Use</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GeneratorMatching\">\n    <a href=\"#GeneratorMatching\">Generator Matching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GeneratorControlFlow\">\n    <a href=\"#GeneratorControlFlow\">Generator Control-Flow</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_GeneratorMethods\">\n    <a href=\"#GeneratorMethods\">Generator Methods</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Map/Set & WeakMap/WeakSet\n    <ul>\n<li class=\"subtitle subtitle_SetDataStructure\">\n    <a href=\"#SetDataStructure\">Set Data-Structure</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_MapDataStructure\">\n    <a href=\"#MapDataStructure\">Map Data-Structure</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_WeakLinkDataStructures\">\n    <a href=\"#WeakLinkDataStructures\">Weak-Link Data-Structures</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Typed Arrays\n    <ul>\n<li class=\"subtitle subtitle_TypedArrays\">\n    <a href=\"#TypedArrays\">Typed Arrays</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">New Built-In Methods\n    <ul>\n<li class=\"subtitle subtitle_ObjectPropertyAssignment\">\n    <a href=\"#ObjectPropertyAssignment\">Object Property Assignment</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_ArrayElementFinding\">\n    <a href=\"#ArrayElementFinding\">Array Element Finding</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_StringRepeating\">\n    <a href=\"#StringRepeating\">String Repeating</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_StringSearching\">\n    <a href=\"#StringSearching\">String Searching</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberTypeChecking\">\n    <a href=\"#NumberTypeChecking\">Number Type Checking</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberSafetyChecking\">\n    <a href=\"#NumberSafetyChecking\">Number Safety Checking</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberComparison\">\n    <a href=\"#NumberComparison\">Number Comparison</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberTruncation\">\n    <a href=\"#NumberTruncation\">Number Truncation</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberSignDetermination\">\n    <a href=\"#NumberSignDetermination\">Number Sign Determination</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Promises\n    <ul>\n<li class=\"subtitle subtitle_PromiseUsage\">\n    <a href=\"#PromiseUsage\">Promise Usage</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_PromiseCombination\">\n    <a href=\"#PromiseCombination\">Promise Combination</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Meta-Programming\n    <ul>\n<li class=\"subtitle subtitle_Proxying\">\n    <a href=\"#Proxying\">Proxying</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_Reflection\">\n    <a href=\"#Reflection\">Reflection</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n<li class=\"title\">Internationalization & Localization\n    <ul>\n<li class=\"subtitle subtitle_Collation\">\n    <a href=\"#Collation\">Collation</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_NumberFormatting\">\n    <a href=\"#NumberFormatting\">Number Formatting</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_CurrencyFormatting\">\n    <a href=\"#CurrencyFormatting\">Currency Formatting</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n<li class=\"subtitle subtitle_DateTimeFormatting\">\n    <a href=\"#DateTimeFormatting\">Date/Time Formatting</a> <i class=\"fa fa-arrow-circle-right\"></i></li>\n    </ul>\n</li>\n</ul>\n\n            <!-- ATTENTION: END OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n        </div>\n        <div class=\"content\">\n            <!-- ATTENTION: BEGIN OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n            <div id=\"Constants\" class=\"showcase showcase_Constants\">    <div class=\"title\">Constants</div>\n    <div class=\"subtitle\">Constants</div>\n    <div class=\"desc\">Support for constants (also known as \"immutable variables\"), i.e.,\nvariables which cannot be re-assigned new content. Notice: this only\nmakes the variable itself immutable, not its assigned content (for\ninstance, in case the content is an object, this means the object itself\ncan still be altered).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">const</span> PI</span><span class=\"punctuation\"> = </span><span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">141593</span><span class=\"semi\">;</span>\nPI <span class=\"punctuation\">&gt;</span> <span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">0</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  only <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span> through the help <span class=\"keyword\">of</span> object properties</span><span class=\"comment\">\n//  and only <span class=\"keyword\">in</span> global context and not <span class=\"keyword\">in</span> a block scope</span>\nObject<span class=\"punctuation\">.</span><span class=\"mark\">defineProperty</span><span class=\"punctuation\">(</span>typeof global <span class=\"punctuation\">===</span> <span class=\"literal\">\"object\"</span> ? global : window<span class=\"punctuation\">,</span> <span class=\"literal\">\"<span class=\"mark\">PI</span>\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span>\n    value:        <span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">141593</span><span class=\"punctuation\">,</span>\n    enumerable:   true<span class=\"punctuation\">,</span>\n    <span class=\"mark\">writable:     false</span><span class=\"punctuation\">,</span>\n    <span class=\"mark\">configurable: false</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>\nPI <span class=\"punctuation\">&gt;</span> <span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">0</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"BlockScopedVariables\" class=\"showcase showcase_BlockScopedVariables\">    <div class=\"title\">Scoping</div>\n    <div class=\"subtitle\">Block-Scoped Variables</div>\n    <div class=\"desc\">Block-scoped variables (and constants) without hoisting.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">let</span> i</span><span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> a<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">let</span> x</span><span class=\"punctuation\"> = </span>a<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">let</span> i</span><span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> b<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">let</span> y</span><span class=\"punctuation\"> = </span>b<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">let</span> callbacks<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">let</span></span> i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span>= <span class=\"literal\">2</span><span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    callbacks<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> i <span class=\"punctuation\">*</span> <span class=\"literal\">2</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"semi\">;</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">4</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">var</span> i<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> a<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    x<span class=\"punctuation\"> = </span>a<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> b<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    y<span class=\"punctuation\"> = </span>b<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">var</span> callbacks<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">var</span></span> i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span>= <span class=\"literal\">2</span><span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span></span>\n        callbacks<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> i <span class=\"punctuation\">*</span> <span class=\"literal\">2</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span><span class=\"punctuation\">;</span></span>\n<span class=\"punctuation\">}</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"semi\">;</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\ncallbacks<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">4</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"BlockScopedFunctions\" class=\"showcase showcase_BlockScopedFunctions\">    <div class=\"title\">Scoping</div>\n    <div class=\"subtitle\">Block-Scoped Functions</div>\n    <div class=\"desc\">Block-scoped function definitions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"punctuation\">{</span>\n    <span class=\"keyword\">function</span> foo <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"literal\">1</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    foo<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">1</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">function</span> <span class=\"mark\">foo</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"literal\">2</span></span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n        <span class=\"mark\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">2</span></span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    foo<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">1</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  only <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span> with the help <span class=\"keyword\">of</span> block<span class=\"punctuation\">-</span>scope emulating</span><span class=\"comment\">\n//  <span class=\"keyword\">function</span> scopes and <span class=\"keyword\">function</span> expressions</span>\n<span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">var</span> foo<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"literal\">1</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    foo<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">1</span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span></span>\n        <span class=\"keyword\">var</span> <span class=\"mark\">foo</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"literal\">2</span></span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n        <span class=\"mark\">foo</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">2</span></span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span></span>\n    foo<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">1</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ExpressionBodies\" class=\"showcase showcase_ExpressionBodies\">    <div class=\"title\">Arrow Functions</div>\n    <div class=\"subtitle\">Expression Bodies</div>\n    <div class=\"desc\">More expressive closure syntax.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">odds <span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\">v <span class=\"punctuation\">=&gt;</span></span> v <span class=\"punctuation\">+</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\npairs<span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\">v <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">(</span></span><span class=\"punctuation\">{</span> even: v<span class=\"punctuation\">,</span> odd: v <span class=\"punctuation\">+</span> <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nnums <span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"punctuation\">(</span>v<span class=\"punctuation\">,</span> i<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span></span> v <span class=\"punctuation\">+</span> i<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">odds <span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span></span> v <span class=\"punctuation\">+</span> <span class=\"literal\">1</span><span class=\"semi\">;</span> <span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\npairs<span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span></span> <span class=\"punctuation\">{</span> even: v<span class=\"punctuation\">,</span> odd: v <span class=\"punctuation\">+</span> <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span> <span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nnums <span class=\"punctuation\"> = </span>evens<span class=\"punctuation\">.</span>map<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">,</span> i<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span></span> v <span class=\"punctuation\">+</span> i<span class=\"semi\">;</span> <span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"StatementBodies\" class=\"showcase showcase_StatementBodies\">    <div class=\"title\">Arrow Functions</div>\n    <div class=\"subtitle\">Statement Bodies</div>\n    <div class=\"desc\">More expressive closure syntax.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\">v <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span></span>\n   <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n       fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span></span>\n   <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n       fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"Lexicalthis\" class=\"showcase showcase_Lexicalthis\">    <div class=\"title\">Arrow Functions</div>\n    <div class=\"subtitle\">Lexical <code>this</code></div>\n    <div class=\"desc\">More intuitive handling of current object context.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span></span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n        <span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  variant <span class=\"literal\">1</span></span>\n<span class=\"keyword\">var</span> <span class=\"mark\">self</span><span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n        <span class=\"mark\">self</span><span class=\"punctuation\">.</span>fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  variant <span class=\"literal\">2</span></span>\n<span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n        <span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  variant <span class=\"literal\">3</span> <span class=\"punctuation\">(</span>since ECMAScript <span class=\"literal\">5</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span> only<span class=\"punctuation\">)</span></span>\n<span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>nums<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>v <span class=\"punctuation\">%</span> <span class=\"literal\">5</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span>\n        <span class=\"mark\"><span class=\"keyword\">this</span></span><span class=\"punctuation\">.</span>fives<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">.</span>bind<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"DefaultParameterValues\" class=\"showcase showcase_DefaultParameterValues\">    <div class=\"title\">Extended Parameter Handling</div>\n    <div class=\"subtitle\">Default Parameter Values</div>\n    <div class=\"desc\">Simple and intuitive default values for function parameters.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y <span class=\"mark\">= <span class=\"literal\">7</span></span><span class=\"punctuation\">,</span> z <span class=\"mark\">= <span class=\"literal\">42</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> x <span class=\"punctuation\">+</span> y <span class=\"punctuation\">+</span> z<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nf<span class=\"punctuation\">(</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">50</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> z<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>y <span class=\"punctuation\">===</span> undefined<span class=\"punctuation\">)</span></span>\n        <span class=\"mark\">y<span class=\"punctuation\"> = </span><span class=\"literal\">7</span></span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>z <span class=\"punctuation\">===</span> undefined<span class=\"punctuation\">)</span></span>\n        <span class=\"mark\">z<span class=\"punctuation\"> = </span><span class=\"literal\">42</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> x <span class=\"punctuation\">+</span> y <span class=\"punctuation\">+</span> z<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nf<span class=\"punctuation\">(</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">50</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"RestParameter\" class=\"showcase showcase_RestParameter\">    <div class=\"title\">Extended Parameter Handling</div>\n    <div class=\"subtitle\">Rest Parameter</div>\n    <div class=\"desc\">Aggregation of remaining arguments into single parameter of variadic functions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>a</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"punctuation\">(</span>x <span class=\"punctuation\">+</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">*</span> a<span class=\"punctuation\">.</span>length<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nf<span class=\"punctuation\">(</span><span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">9</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> a<span class=\"punctuation\"> = </span>Array<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>slice<span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span>arguments<span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> <span class=\"punctuation\">(</span>x <span class=\"punctuation\">+</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">*</span> a<span class=\"punctuation\">.</span>length<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nf<span class=\"punctuation\">(</span><span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">9</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"SpreadOperator\" class=\"showcase showcase_SpreadOperator\">    <div class=\"title\">Extended Parameter Handling</div>\n    <div class=\"subtitle\">Spread Operator</div>\n    <div class=\"desc\">Spreading of elements of an iterable collection (like an array or even\na string) into both literal elements and individual function parameters.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> params<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> other<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>params</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span> <span class=\"punctuation\">]</span></span>\n\n<span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> <span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>a<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"punctuation\">(</span>x <span class=\"punctuation\">+</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">*</span> a<span class=\"punctuation\">.</span>length<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nf<span class=\"punctuation\">(</span><span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>params</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">9</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> str<span class=\"punctuation\"> = </span><span class=\"literal\">\"foo\"</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> chars<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"mark\"><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>str</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"f\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"o\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"o\"</span> <span class=\"punctuation\">]</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> params<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> other<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">.</span><span class=\"mark\">concat<span class=\"punctuation\">(</span>params<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> true<span class=\"punctuation\">,</span> <span class=\"literal\">7</span> <span class=\"punctuation\">]</span></span>\n\n<span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">var</span> a<span class=\"punctuation\"> = </span>Array<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>slice<span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span>arguments<span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> <span class=\"punctuation\">(</span>x <span class=\"punctuation\">+</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">*</span> a<span class=\"punctuation\">.</span>length<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nf<span class=\"mark\"><span class=\"punctuation\">.</span>apply</span><span class=\"punctuation\">(</span><span class=\"mark\">undefined<span class=\"punctuation\">,</span> <span class=\"punctuation\">[</span></span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span> <span class=\"mark\"><span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>concat<span class=\"punctuation\">(</span>params<span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">9</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> str<span class=\"punctuation\"> = </span><span class=\"literal\">\"foo\"</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> chars<span class=\"punctuation\"> = </span>str<span class=\"punctuation\">.</span>split<span class=\"punctuation\">(</span><span class=\"literal\">\"\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"f\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"o\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"o\"</span> <span class=\"punctuation\">]</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"StringInterpolation\" class=\"showcase showcase_StringInterpolation\">    <div class=\"title\">Template Literals</div>\n    <div class=\"subtitle\">String Interpolation</div>\n    <div class=\"desc\">Intuitive expression interpolation for single-line and multi-line strings.\n(Notice: don't be confused, Template Literals were originally named\n\"Template Strings\" in the drafts of the ECMAScript 6 language specification)</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> customer<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"Foo\"</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> card<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> amount: <span class=\"literal\">7</span><span class=\"punctuation\">,</span> product: <span class=\"literal\">\"Bar\"</span><span class=\"punctuation\">,</span> unitprice: <span class=\"literal\">42</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> message<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"literal\">`</span>Hello <span class=\"mark\">$<span class=\"punctuation\">{</span>customer<span class=\"punctuation\">.</span>name<span class=\"punctuation\">}</span></span><span class=\"punctuation\">,</span>\nwant to buy <span class=\"mark\">$<span class=\"punctuation\">{</span>card<span class=\"punctuation\">.</span>amount<span class=\"punctuation\">}</span> $<span class=\"punctuation\">{</span>card<span class=\"punctuation\">.</span>product<span class=\"punctuation\">}</span></span> <span class=\"keyword\">for</span>\na total <span class=\"keyword\">of</span> <span class=\"mark\">$<span class=\"punctuation\">{</span>card<span class=\"punctuation\">.</span>amount <span class=\"punctuation\">*</span> card<span class=\"punctuation\">.</span>unitprice<span class=\"punctuation\">}</span></span> bucks?<span class=\"mark\">`</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> customer<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"Foo\"</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> card<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> amount: <span class=\"literal\">7</span><span class=\"punctuation\">,</span> product: <span class=\"literal\">\"Bar\"</span><span class=\"punctuation\">,</span> unitprice: <span class=\"literal\">42</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> message<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"literal\">\"</span>Hello \"</span><span class=\"mark\"> <span class=\"punctuation\">+</span> customer<span class=\"punctuation\">.</span>name <span class=\"punctuation\">+</span> </span><span class=\"literal\">\"<span class=\"punctuation\">,</span>\\n\"</span> <span class=\"punctuation\">+</span>\n<span class=\"literal\">\"want to buy \"</span><span class=\"mark\"> <span class=\"punctuation\">+</span> card<span class=\"punctuation\">.</span>amount <span class=\"punctuation\">+</span> </span><span class=\"literal\">\" \"</span><span class=\"mark\"> <span class=\"punctuation\">+</span> card<span class=\"punctuation\">.</span>product <span class=\"punctuation\">+</span> </span><span class=\"literal\">\" <span class=\"keyword\">for</span>\\n\"</span> <span class=\"punctuation\">+</span>\n<span class=\"literal\">\"a total <span class=\"keyword\">of</span> \"</span><span class=\"mark\"> <span class=\"punctuation\">+</span> <span class=\"punctuation\">(</span>card<span class=\"punctuation\">.</span>amount <span class=\"punctuation\">*</span> card<span class=\"punctuation\">.</span>unitprice<span class=\"punctuation\">)</span> <span class=\"punctuation\">+</span> </span><span class=\"literal\">\" bucks?<span class=\"mark\">\"</span></span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"CustomInterpolation\" class=\"showcase showcase_CustomInterpolation\">    <div class=\"title\">Template Literals</div>\n    <div class=\"subtitle\">Custom Interpolation</div>\n    <div class=\"desc\">Flexible expression interpolation for arbitrary methods.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">get<span class=\"mark\"><span class=\"literal\">`</span>http://example<span class=\"punctuation\">.</span>com/foo?bar=<span class=\"mark\">$<span class=\"punctuation\">{</span></span>bar <span class=\"punctuation\">+</span> baz<span class=\"mark\"><span class=\"punctuation\">}</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span>quux=<span class=\"mark\">$<span class=\"punctuation\">{</span></span>quux<span class=\"mark\"><span class=\"punctuation\">}</span>`</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">get<span class=\"mark\"><span class=\"punctuation\">(</span><span class=\"punctuation\">[</span> </span><span class=\"literal\">\"http://example<span class=\"punctuation\">.</span>com/foo?bar=\"</span><span class=\"mark\"><span class=\"punctuation\">,</span></span> <span class=\"literal\">\"<span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span>quux=\"</span><span class=\"mark\"><span class=\"punctuation\">,</span></span> <span class=\"literal\">\"\"</span><span class=\"mark\"> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span>bar <span class=\"punctuation\">+</span> baz<span class=\"mark\"><span class=\"punctuation\">,</span></span> quux<span class=\"mark\"><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"RawStringAccess\" class=\"showcase showcase_RawStringAccess\">    <div class=\"title\">Template Literals</div>\n    <div class=\"subtitle\">Raw String Access</div>\n    <div class=\"desc\">Access the raw template string content (backslashes are not interpreted).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> quux <span class=\"punctuation\">(</span>strings<span class=\"punctuation\">,</span> <span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>values<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    strings<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"<span class=\"mark\">foo\\n</span>\"</span><span class=\"semi\">;</span>\n    strings<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\n    strings<span class=\"mark\"><span class=\"punctuation\">.</span>raw</span><span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"<span class=\"mark\">foo\\\\n</span>\"</span><span class=\"semi\">;</span>\n    strings<span class=\"punctuation\">.</span>raw<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\n    values<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> <span class=\"literal\">42</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nquux<span class=\"mark\"><span class=\"literal\">`</span>foo<span class=\"mark\">\\n</span>$<span class=\"punctuation\">{</span> 42 <span class=\"punctuation\">}</span>bar<span class=\"mark\">`</span></span>\n\nString<span class=\"punctuation\">.</span>raw<span class=\"mark\"><span class=\"literal\">`</span>foo<span class=\"mark\">\\n</span>$<span class=\"punctuation\">{</span> 42 <span class=\"punctuation\">}</span>bar<span class=\"mark\">`</span></span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"foo<span class=\"mark\">\\\\n</span>42bar\"</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"BinaryOctalLiteral\" class=\"showcase showcase_BinaryOctalLiteral\">    <div class=\"title\">Extended Literals</div>\n    <div class=\"subtitle\">Binary & Octal Literal</div>\n    <div class=\"desc\">Direct support for safe binary and octal literals.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"literal\">0</span>b</span><span class=\"literal\">111110111</span> <span class=\"punctuation\">===</span> <span class=\"literal\">503</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"literal\">0</span>o</span><span class=\"literal\">767</span> <span class=\"punctuation\">===</span> <span class=\"literal\">503</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\">parseInt<span class=\"punctuation\">(</span></span><span class=\"literal\">\"111110111\"</span><span class=\"mark\"><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">===</span> <span class=\"literal\">503</span><span class=\"semi\">;</span>\n<span class=\"mark\">parseInt<span class=\"punctuation\">(</span></span><span class=\"literal\">\"767\"</span><span class=\"mark\"><span class=\"punctuation\">,</span> <span class=\"literal\">8</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">===</span> <span class=\"literal\">503</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"literal\">0</span></span><span class=\"literal\">767</span> <span class=\"punctuation\">===</span> <span class=\"literal\">503</span><span class=\"semi\">;</span><span class=\"comment\"> // only <span class=\"keyword\">in</span> non<span class=\"punctuation\">-</span>strict<span class=\"punctuation\">,</span> backward compatibility mode</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"UnicodeStringRegExpLiteral\" class=\"showcase showcase_UnicodeStringRegExpLiteral\">    <div class=\"title\">Extended Literals</div>\n    <div class=\"subtitle\">Unicode String & RegExp Literal</div>\n    <div class=\"desc\">Extended support using Unicode within strings and regular expressions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">.</span>length <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">.</span>match<span class=\"punctuation\">(</span>/<span class=\"punctuation\">.</span>/<span class=\"mark\">u</span><span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>length <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"\\uD842\\uDFB7\"</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"<span class=\"mark\">\\u<span class=\"punctuation\">{</span>20BB7<span class=\"punctuation\">}</span></span>\"</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">.</span><span class=\"mark\">codePointAt</span><span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">)</span> == <span class=\"literal\">0</span>x<span class=\"literal\">20</span>BB<span class=\"literal\">7</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> codepoint <span class=\"mark\"><span class=\"keyword\">of</span></span> <span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">)</span> console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>codepoint<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">.</span>length <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span><span class=\"punctuation\">.</span>match<span class=\"punctuation\">(</span>/<span class=\"punctuation\">(</span>?:<span class=\"punctuation\">[</span>\\<span class=\"literal\">0</span><span class=\"punctuation\">-</span>\\t\\x<span class=\"literal\">0</span>B\\f\\x<span class=\"literal\">0</span>E<span class=\"punctuation\">-</span>\\u<span class=\"literal\">2027</span>\\u<span class=\"literal\">202</span>A<span class=\"punctuation\">-</span>\\uD<span class=\"literal\">7</span>FF\\uE<span class=\"literal\">000</span><span class=\"punctuation\">-</span>\\uFFFF<span class=\"punctuation\">]</span><span class=\"mark\"><span class=\"punctuation\">[</span>\\uD<span class=\"literal\">800</span><span class=\"punctuation\">-</span>\\uDBFF<span class=\"punctuation\">]</span><span class=\"punctuation\">[</span>\\uDC<span class=\"literal\">00</span><span class=\"punctuation\">-</span>\\uDFFF<span class=\"punctuation\">]</span></span><span class=\"punctuation\">[</span>\\uD<span class=\"literal\">800</span><span class=\"punctuation\">-</span>\\uDBFF<span class=\"punctuation\">]</span><span class=\"punctuation\">(</span>?!<span class=\"punctuation\">[</span>\\uDC<span class=\"literal\">00</span><span class=\"punctuation\">-</span>\\uDFFF<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"mark\"><span class=\"punctuation\">(</span>?:<span class=\"punctuation\">[</span>^\\uD<span class=\"literal\">800</span><span class=\"punctuation\">-</span>\\uDBFF<span class=\"punctuation\">]</span></span>^<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span>\\uDC<span class=\"literal\">00</span><span class=\"punctuation\">-</span>\\uDFFF<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span>/<span class=\"punctuation\">)</span><span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>length <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"𠮷\"</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"\\uD842\\uDFB7\"</span><span class=\"semi\">;</span><span class=\"comment\">\n//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span><span class=\"comment\">\n//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span><span class=\"comment\">\n//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"RegularExpressionStickyMatching\" class=\"showcase showcase_RegularExpressionStickyMatching\">    <div class=\"title\">Enhanced Regular Expression</div>\n    <div class=\"subtitle\">Regular Expression Sticky Matching</div>\n    <div class=\"desc\">Keep the matching position sticky between matches and\nthis way support efficient parsing of arbitrary long input strings,\neven with an arbitrary number of distinct regular expressions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> parser<span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> pos<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> lastPos<span class=\"punctuation\"> = </span>input<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> <span class=\"mark\">pos <span class=\"punctuation\">&lt;</span> lastPos</span><span class=\"punctuation\">;</span> <span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> match<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            <span class=\"mark\">match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>pattern<span class=\"punctuation\">.</span>lastIndex<span class=\"punctuation\"> = </span>pos</span><span class=\"semi\">;</span>\n            <span class=\"keyword\">let</span> found<span class=\"semi\">;</span>\n            <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>found<span class=\"punctuation\"> = </span>match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>pattern<span class=\"punctuation\">.</span>exec<span class=\"punctuation\">(</span>input<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> !== null<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>action<span class=\"punctuation\">(</span>found<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n                <span class=\"mark\">pos<span class=\"punctuation\"> = </span>match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>pattern<span class=\"punctuation\">.</span>lastIndex</span><span class=\"semi\">;</span>\n                break<span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span>\n        <span class=\"punctuation\">}</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">let</span> report<span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>JSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nparser<span class=\"punctuation\">(</span><span class=\"literal\">\"Foo 1 Bar 7 Baz 42\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">[</span>\n    <span class=\"punctuation\">{</span> pattern: /Foo\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"mark\">y</span><span class=\"punctuation\">,</span> action: <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /Bar\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"mark\">y</span><span class=\"punctuation\">,</span> action: <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /Baz\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"mark\">y</span><span class=\"punctuation\">,</span> action: <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /\\s<span class=\"punctuation\">*</span>/<span class=\"mark\">y</span><span class=\"punctuation\">,</span>         action: <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>            <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> parser<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>input<span class=\"punctuation\">,</span> match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">var</span> i<span class=\"punctuation\">,</span> found<span class=\"punctuation\">,</span> <span class=\"mark\">inputTmp<span class=\"punctuation\"> = </span>input</span><span class=\"punctuation\">;</span> <span class=\"mark\">inputTmp !== <span class=\"literal\">\"\"</span></span><span class=\"punctuation\">;</span> <span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> match<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>found<span class=\"punctuation\"> = </span>match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>pattern<span class=\"punctuation\">.</span>exec<span class=\"punctuation\">(</span>inputTmp<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> !== null<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                match<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>action<span class=\"punctuation\">(</span>found<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n                <span class=\"mark\">inputTmp<span class=\"punctuation\"> = </span>inputTmp<span class=\"punctuation\">.</span>substr<span class=\"punctuation\">(</span>found<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>length<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n                break<span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span>\n        <span class=\"punctuation\">}</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">var</span> report<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>JSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nparser<span class=\"punctuation\">(</span><span class=\"literal\">\"Foo 1 Bar 7 Baz 42\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">[</span>\n    <span class=\"punctuation\">{</span> pattern: /^Foo\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"punctuation\">,</span> action: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /^Bar\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"punctuation\">,</span> action: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /^Baz\\s<span class=\"punctuation\">+</span><span class=\"punctuation\">(</span>\\d<span class=\"punctuation\">+</span><span class=\"punctuation\">)</span>/<span class=\"punctuation\">,</span> action: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> report<span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> pattern: /^\\s<span class=\"punctuation\">*</span>/<span class=\"punctuation\">,</span>         action: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>match<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>                 <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"PropertyShorthand\" class=\"showcase showcase_PropertyShorthand\">    <div class=\"title\">Enhanced Object Properties</div>\n    <div class=\"subtitle\">Property Shorthand</div>\n    <div class=\"desc\">Shorter syntax for common object property definition idiom.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> x<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> y<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> <span class=\"mark\">x</span><span class=\"punctuation\">,</span> <span class=\"mark\">y</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> x<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> y<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> <span class=\"mark\">x: x</span><span class=\"punctuation\">,</span> <span class=\"mark\">y: y</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ComputedPropertyNames\" class=\"showcase showcase_ComputedPropertyNames\">    <div class=\"title\">Enhanced Object Properties</div>\n    <div class=\"subtitle\">Computed Property Names</div>\n    <div class=\"desc\">Support for computed names in object property definitions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    foo: <span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span>\n    <span class=\"mark\"><span class=\"punctuation\">[</span></span> <span class=\"literal\">\"baz\"</span> <span class=\"punctuation\">+</span> quux<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"mark\"><span class=\"punctuation\">]</span>:</span> <span class=\"literal\">42</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    foo: <span class=\"literal\">\"bar\"</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">obj<span class=\"punctuation\">[</span></span> <span class=\"literal\">\"baz\"</span> <span class=\"punctuation\">+</span> quux<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"mark\"><span class=\"punctuation\">]</span> =</span> <span class=\"literal\">42</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"MethodProperties\" class=\"showcase showcase_MethodProperties\">    <div class=\"title\">Enhanced Object Properties</div>\n    <div class=\"subtitle\">Method Properties</div>\n    <div class=\"desc\">Support for method notation in object property definitions,\nfor both regular functions and generator functions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\">foo <span class=\"punctuation\">(</span>a<span class=\"punctuation\">,</span> b<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"mark\">bar <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"mark\"><span class=\"punctuation\">*</span>quux <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    foo<span class=\"mark\">: <span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>a<span class=\"punctuation\">,</span> b<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    bar<span class=\"mark\">: <span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n   <span class=\"comment\"> //  quux: no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ArrayMatching\" class=\"showcase showcase_ArrayMatching\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Array Matching</div>\n    <div class=\"desc\">Intuitive and flexible destructuring of Arrays into individual variables during assignment.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">3</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\"><span class=\"punctuation\">[</span> a<span class=\"punctuation\">,</span> <span class=\"punctuation\">,</span> b <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>list</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">[</span> <span class=\"mark\">b<span class=\"punctuation\">,</span> a</span> <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"mark\">a<span class=\"punctuation\">,</span> b</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">3</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">a<span class=\"punctuation\"> = </span>list<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span></span><span class=\"punctuation\">,</span> <span class=\"mark\">b<span class=\"punctuation\"> = </span>list<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">tmp<span class=\"punctuation\"> = </span>a</span><span class=\"punctuation\">;</span> <span class=\"mark\">a<span class=\"punctuation\"> = </span>b</span><span class=\"punctuation\">;</span> <span class=\"mark\">b<span class=\"punctuation\"> = </span>tmp</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ObjectMatchingShorthandNotation\" class=\"showcase showcase_ObjectMatchingShorthandNotation\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Object Matching, Shorthand Notation</div>\n    <div class=\"desc\">Intuitive and flexible destructuring of Objects into individual variables during assignment.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"mark\"><span class=\"punctuation\">{</span> op<span class=\"punctuation\">,</span> lhs<span class=\"punctuation\">,</span> rhs <span class=\"punctuation\">}</span></span><span class=\"punctuation\"> = </span>getASTNode<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"mark\">tmp</span><span class=\"punctuation\"> = </span>getASTNode<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">op <span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>op</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">lhs<span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>lhs</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">rhs<span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>rhs</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ObjectMatchingDeepMatching\" class=\"showcase showcase_ObjectMatchingDeepMatching\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Object Matching, Deep Matching</div>\n    <div class=\"desc\">Intuitive and flexible destructuring of Objects into individual variables during assignment.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"punctuation\">{</span> op: a<span class=\"punctuation\">,</span> <span class=\"mark\">lhs: <span class=\"punctuation\">{</span> op: b <span class=\"punctuation\">}</span></span><span class=\"punctuation\">,</span> rhs: c <span class=\"punctuation\">}</span><span class=\"punctuation\"> = </span>getASTNode<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> tmp<span class=\"punctuation\"> = </span>getASTNode<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> a<span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>op<span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">b<span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>lhs<span class=\"punctuation\">.</span>op</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> c<span class=\"punctuation\"> = </span>tmp<span class=\"punctuation\">.</span>rhs<span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ObjectAndArrayMatchingDefaultValues\" class=\"showcase showcase_ObjectAndArrayMatchingDefaultValues\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Object And Array Matching, Default Values</div>\n    <div class=\"desc\">Simple and intuitive default values for destructuring of Objects and Arrays.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> a: <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"punctuation\">{</span> a<span class=\"punctuation\">,</span> <span class=\"mark\">b<span class=\"punctuation\"> = </span><span class=\"literal\">2</span></span> <span class=\"punctuation\">}</span><span class=\"punctuation\"> = </span>obj<span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"punctuation\">[</span> x<span class=\"punctuation\">,</span> <span class=\"mark\">y<span class=\"punctuation\"> = </span><span class=\"literal\">2</span></span> <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>list<span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> a: <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">1</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> a<span class=\"punctuation\"> = </span>obj<span class=\"punctuation\">.</span>a<span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">b<span class=\"punctuation\"> = </span>obj<span class=\"punctuation\">.</span>b <span class=\"punctuation\">===</span> undefined ? <span class=\"literal\">2</span> : obj<span class=\"punctuation\">.</span>b</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> x<span class=\"punctuation\"> = </span>list<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">y<span class=\"punctuation\"> = </span>list<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">===</span> undefined ? <span class=\"literal\">2</span> : list<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ParameterContextMatching\" class=\"showcase showcase_ParameterContextMatching\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Parameter Context Matching</div>\n    <div class=\"desc\">Intuitive and flexible destructuring of Arrays and Objects into individual parameters during function calls.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"punctuation\">[</span> name<span class=\"punctuation\">,</span> val <span class=\"punctuation\">]</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>name<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">function</span> g <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"punctuation\">{</span> name: n<span class=\"punctuation\">,</span> val: v <span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">,</span> v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">function</span> h <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"punctuation\">{</span> name<span class=\"punctuation\">,</span> val <span class=\"punctuation\">}</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>name<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nf<span class=\"punctuation\">(</span><span class=\"punctuation\">[</span> <span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\ng<span class=\"punctuation\">(</span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"foo\"</span><span class=\"punctuation\">,</span> val:  <span class=\"literal\">7</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nh<span class=\"punctuation\">(</span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span> val: <span class=\"literal\">42</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> f <span class=\"punctuation\">(</span><span class=\"mark\">arg</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> name<span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> val <span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>name<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">function</span> g <span class=\"punctuation\">(</span><span class=\"mark\">arg</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> n<span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">.</span>name</span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> v<span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">.</span>val</span><span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">,</span> v<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">function</span> h <span class=\"punctuation\">(</span><span class=\"mark\">arg</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> name<span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">.</span>name</span><span class=\"semi\">;</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> val <span class=\"punctuation\"> = </span>arg<span class=\"punctuation\">.</span>val</span><span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>name<span class=\"punctuation\">,</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nf<span class=\"punctuation\">(</span><span class=\"punctuation\">[</span> <span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\ng<span class=\"punctuation\">(</span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"foo\"</span><span class=\"punctuation\">,</span> val:  <span class=\"literal\">7</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nh<span class=\"punctuation\">(</span><span class=\"punctuation\">{</span> name: <span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span> val: <span class=\"literal\">42</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"FailSoftDestructuring\" class=\"showcase showcase_FailSoftDestructuring\">    <div class=\"title\">Destructuring Assignment</div>\n    <div class=\"subtitle\">Fail-Soft Destructuring</div>\n    <div class=\"desc\">Fail-soft destructuring, optionally with defaults.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">7</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"punctuation\">[</span> a<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"punctuation\">,</span> b<span class=\"punctuation\"> = </span><span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"mark\">c<span class=\"punctuation\"> = </span><span class=\"literal\">3</span></span><span class=\"punctuation\">,</span> <span class=\"mark\">d</span> <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>list<span class=\"semi\">;</span>\na <span class=\"punctuation\">===</span> <span class=\"literal\">7</span><span class=\"semi\">;</span>\nb <span class=\"punctuation\">===</span> <span class=\"literal\">42</span><span class=\"semi\">;</span>\nc <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"semi\">;</span>\nd <span class=\"punctuation\">===</span> <span class=\"mark\">undefined</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"literal\">7</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> a<span class=\"punctuation\"> = </span>typeof list<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span> !== <span class=\"literal\">\"undefined\"</span> ? list<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span> : <span class=\"literal\">1</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> b<span class=\"punctuation\"> = </span>typeof list<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span> !== <span class=\"literal\">\"undefined\"</span> ? list<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span> : <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> c<span class=\"punctuation\"> = </span>typeof list<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span> !== <span class=\"literal\">\"undefined\"</span> ? list<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span> : <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> d<span class=\"punctuation\"> = </span>typeof list<span class=\"punctuation\">[</span><span class=\"literal\">3</span><span class=\"punctuation\">]</span> !== <span class=\"literal\">\"undefined\"</span> ? list<span class=\"punctuation\">[</span><span class=\"literal\">3</span><span class=\"punctuation\">]</span> : <span class=\"mark\">undefined</span><span class=\"semi\">;</span>\na <span class=\"punctuation\">===</span> <span class=\"literal\">7</span><span class=\"semi\">;</span>\nb <span class=\"punctuation\">===</span> <span class=\"literal\">42</span><span class=\"semi\">;</span>\nc <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"semi\">;</span>\nd <span class=\"punctuation\">===</span> <span class=\"mark\">undefined</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ValueExportImport\" class=\"showcase showcase_ValueExportImport\">    <div class=\"title\">Modules</div>\n    <div class=\"subtitle\">Value Export/Import</div>\n    <div class=\"desc\">Support for exporting/importing values from/to modules without global namespace pollution.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  lib/math<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\"><span class=\"keyword\">export</span></span> <span class=\"keyword\">function</span> <span class=\"mark\">sum</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> x <span class=\"punctuation\">+</span> y <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"keyword\">export</span></span> <span class=\"keyword\">var</span> <span class=\"mark\">pi</span><span class=\"punctuation\"> = </span><span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">141593</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  someApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\"><span class=\"keyword\">import</span> <span class=\"punctuation\">*</span> as math</span> from <span class=\"literal\">\"lib/math\"</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"2π<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> math<span class=\"punctuation\">.</span>sum<span class=\"punctuation\">(</span>math<span class=\"punctuation\">.</span>pi<span class=\"punctuation\">,</span> math<span class=\"punctuation\">.</span>pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  otherApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\"><span class=\"keyword\">import</span> <span class=\"punctuation\">{</span> sum<span class=\"punctuation\">,</span> pi <span class=\"punctuation\">}</span></span> from <span class=\"literal\">\"lib/math\"</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"2π<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> sum<span class=\"punctuation\">(</span>pi<span class=\"punctuation\">,</span> pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  lib/math<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\">LibMath<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span><span class=\"semi\">;</span>\n<span class=\"mark\">LibMath<span class=\"punctuation\">.</span>sum</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> x <span class=\"punctuation\">+</span> y <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">LibMath<span class=\"punctuation\">.</span>pi</span><span class=\"punctuation\"> = </span><span class=\"literal\">3</span><span class=\"punctuation\">.</span><span class=\"literal\">141593</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  someApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">math<span class=\"punctuation\"> = </span>LibMath</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"2π<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> math<span class=\"punctuation\">.</span>sum<span class=\"punctuation\">(</span>math<span class=\"punctuation\">.</span>pi<span class=\"punctuation\">,</span> math<span class=\"punctuation\">.</span>pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  otherApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">sum<span class=\"punctuation\"> = </span>LibMath<span class=\"punctuation\">.</span>sum</span><span class=\"punctuation\">,</span> <span class=\"mark\">pi<span class=\"punctuation\"> = </span>LibMath<span class=\"punctuation\">.</span>pi</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"2π<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> sum<span class=\"punctuation\">(</span>pi<span class=\"punctuation\">,</span> pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"DefaultWildcard\" class=\"showcase showcase_DefaultWildcard\">    <div class=\"title\">Modules</div>\n    <div class=\"subtitle\">Default & Wildcard</div>\n    <div class=\"desc\">Marking a value as the default exported value and mass-mixin of values.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  lib/mathplusplus<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\"><span class=\"keyword\">export</span> <span class=\"punctuation\">*</span></span> from <span class=\"literal\">\"lib/math\"</span><span class=\"semi\">;</span>\n<span class=\"keyword\">export</span> <span class=\"keyword\">var</span> e<span class=\"punctuation\"> = </span><span class=\"literal\">2</span><span class=\"punctuation\">.</span><span class=\"literal\">71828182846</span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"keyword\">export</span> default</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> Math<span class=\"punctuation\">.</span>exp<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  someApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\"><span class=\"keyword\">import</span> exp<span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> pi<span class=\"punctuation\">,</span> e <span class=\"punctuation\">}</span></span> from <span class=\"literal\">\"lib/mathplusplus\"</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"e^<span class=\"punctuation\">{</span>π<span class=\"punctuation\">}</span><span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> exp<span class=\"punctuation\">(</span>pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  lib/mathplusplus<span class=\"punctuation\">.</span>js</span>\n<span class=\"mark\">LibMathPP<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span><span class=\"semi\">;</span>\n<span class=\"mark\"><span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>symbol <span class=\"keyword\">in</span> LibMath<span class=\"punctuation\">)</span></span>\n    <span class=\"mark\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>LibMath<span class=\"punctuation\">.</span>hasOwnProperty<span class=\"punctuation\">(</span>symbol<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span>\n        <span class=\"mark\">LibMathPP<span class=\"punctuation\">[</span>symbol<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>LibMath<span class=\"punctuation\">[</span>symbol<span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n<span class=\"mark\">LibMathPP<span class=\"punctuation\">.</span>e</span><span class=\"punctuation\"> = </span><span class=\"literal\">2</span><span class=\"punctuation\">.</span><span class=\"literal\">71828182846</span><span class=\"semi\">;</span>\n<span class=\"mark\">LibMathPP<span class=\"punctuation\">.</span>exp</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> Math<span class=\"punctuation\">.</span>exp<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"comment\">\n//  someApp<span class=\"punctuation\">.</span>js</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">exp<span class=\"punctuation\"> = </span>LibMathPP<span class=\"punctuation\">.</span>exp</span><span class=\"punctuation\">,</span> <span class=\"mark\">pi<span class=\"punctuation\"> = </span>LibMathPP<span class=\"punctuation\">.</span>pi</span><span class=\"punctuation\">,</span> <span class=\"mark\">e<span class=\"punctuation\"> = </span>LibMathPP<span class=\"punctuation\">.</span>e</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"e^<span class=\"punctuation\">{</span>π<span class=\"punctuation\">}</span><span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> exp<span class=\"punctuation\">(</span>pi<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ClassDefinition\" class=\"showcase showcase_ClassDefinition\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Class Definition</div>\n    <div class=\"desc\">More intuitive, OOP-style and boilerplate-free classes.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">class</span></span> Shape <span class=\"punctuation\">{</span>\n    <span class=\"mark\">constructor</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>id<span class=\"punctuation\"> = </span>id<span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>move<span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    <span class=\"mark\">move</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>x<span class=\"punctuation\"> = </span>x<span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>y<span class=\"punctuation\"> = </span>y<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> Shape<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>id<span class=\"punctuation\"> = </span>id<span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>move<span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nShape<span class=\"punctuation\">.</span><span class=\"mark\">prototype<span class=\"punctuation\">.</span>move</span><span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>x<span class=\"punctuation\"> = </span>x<span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>y<span class=\"punctuation\"> = </span>y<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ClassInheritance\" class=\"showcase showcase_ClassInheritance\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Class Inheritance</div>\n    <div class=\"desc\">More intuitive, OOP-style and boilerplate-free inheritance.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">class</span></span> Rectangle <span class=\"mark\"><span class=\"keyword\">extends</span></span> Shape <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">super</span><span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>width <span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"mark\"><span class=\"keyword\">class</span></span> Circle <span class=\"mark\"><span class=\"keyword\">extends</span></span> Shape <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> radius<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">super</span><span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>radius<span class=\"punctuation\"> = </span>radius<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> Rectangle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">Shape<span class=\"punctuation\">.</span>call</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>width <span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">Rectangle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span>Object<span class=\"punctuation\">.</span>create<span class=\"punctuation\">(</span>Shape<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"mark\">Rectangle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>constructor<span class=\"punctuation\"> = </span>Rectangle</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> Circle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> radius<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">Shape<span class=\"punctuation\">.</span>call</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>radius<span class=\"punctuation\"> = </span>radius<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">Circle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span>Object<span class=\"punctuation\">.</span>create<span class=\"punctuation\">(</span>Shape<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"mark\">Circle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>constructor<span class=\"punctuation\"> = </span>Circle</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ClassInheritanceFromExpressions\" class=\"showcase showcase_ClassInheritanceFromExpressions\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Class Inheritance, From Expressions</div>\n    <div class=\"desc\">Support for mixin-style inheritance by extending from expressions yielding\nfunction objects. [Notice: the generic <code>aggregation</code> function is usually provided\nby a library like <a href=\"https://github.com/rse/aggregation\">this one</a>, of course]</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"mark\">aggregation</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>baseClass<span class=\"punctuation\">,</span> <span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>mixins<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">let</span> base<span class=\"punctuation\"> = </span><span class=\"keyword\">class</span> _Combined <span class=\"keyword\">extends</span> baseClass <span class=\"punctuation\">{</span>\n        constructor <span class=\"punctuation\">(</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>args<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            <span class=\"mark\">super</span><span class=\"punctuation\">(</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>args<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            mixins<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>mixin<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n                mixin<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span><span class=\"mark\">initializer</span><span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span>\n    <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">let</span> copyProps<span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>target<span class=\"punctuation\">,</span> source<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        Object<span class=\"punctuation\">.</span>getOwnPropertyNames<span class=\"punctuation\">(</span>source<span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span>concat<span class=\"punctuation\">(</span>Object<span class=\"punctuation\">.</span>getOwnPropertySymbols<span class=\"punctuation\">(</span>source<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>prop<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n            <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>prop<span class=\"punctuation\">.</span>match<span class=\"punctuation\">(</span>/^<span class=\"punctuation\">(</span>?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length<span class=\"punctuation\">)</span>$/<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n                <span class=\"keyword\">return</span>\n            Object<span class=\"punctuation\">.</span>defineProperty<span class=\"punctuation\">(</span>target<span class=\"punctuation\">,</span> prop<span class=\"punctuation\">,</span> Object<span class=\"punctuation\">.</span>getOwnPropertyDescriptor<span class=\"punctuation\">(</span>source<span class=\"punctuation\">,</span> prop<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n        <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>\n    <span class=\"punctuation\">}</span>\n    mixins<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>mixin<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        copyProps<span class=\"punctuation\">(</span>base<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">,</span> mixin<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        copyProps<span class=\"punctuation\">(</span>base<span class=\"punctuation\">,</span> mixin<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> base<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">class</span> <span class=\"mark\">Colored</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">initializer</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"punctuation\"> = </span><span class=\"literal\">\"white\"</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    get color <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    set color <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>      <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">class</span> <span class=\"mark\">ZCoord</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">initializer</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    get z <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>           <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    set z <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>          <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">class</span> <span class=\"mark\">Shape</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">constructor</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"punctuation\"> = </span>x<span class=\"punctuation\">;</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"punctuation\"> = </span>y<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    get x <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>           <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    set x <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>          <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    get y <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>           <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n    set y <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>          <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">class</span> Rectangle <span class=\"keyword\">extends</span> <span class=\"mark\">aggregation<span class=\"punctuation\">(</span>Shape<span class=\"punctuation\">,</span> Colored<span class=\"punctuation\">,</span> ZCoord<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">var</span> rect<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">7</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nrect<span class=\"punctuation\">.</span><span class=\"mark\">z</span>    <span class=\"punctuation\"> = </span><span class=\"literal\">1000</span><span class=\"semi\">;</span>\nrect<span class=\"punctuation\">.</span><span class=\"mark\">color</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"red\"</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>rect<span class=\"punctuation\">.</span>x<span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>y<span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>z<span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>color<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"mark\">aggregation</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>baseClass<span class=\"punctuation\">,</span> mixins<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">var</span> base<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">baseClass<span class=\"punctuation\">.</span>apply</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> arguments<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        mixins<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>mixin<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            mixin<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span><span class=\"mark\">initializer</span><span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span><span class=\"punctuation\">.</span>bind<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    base<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span>Object<span class=\"punctuation\">.</span>create<span class=\"punctuation\">(</span>baseClass<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    base<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>constructor<span class=\"punctuation\"> = </span>base<span class=\"semi\">;</span>\n    <span class=\"keyword\">var</span> copyProps<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>target<span class=\"punctuation\">,</span> source<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        Object<span class=\"punctuation\">.</span>getOwnPropertyNames<span class=\"punctuation\">(</span>source<span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>prop<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>prop<span class=\"punctuation\">.</span>match<span class=\"punctuation\">(</span>/^<span class=\"punctuation\">(</span>?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length<span class=\"punctuation\">)</span>$/<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n                <span class=\"keyword\">return</span>\n            Object<span class=\"punctuation\">.</span>defineProperty<span class=\"punctuation\">(</span>target<span class=\"punctuation\">,</span> prop<span class=\"punctuation\">,</span> Object<span class=\"punctuation\">.</span>getOwnPropertyDescriptor<span class=\"punctuation\">(</span>source<span class=\"punctuation\">,</span> prop<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n        <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>\n    <span class=\"punctuation\">}</span>\n    mixins<span class=\"punctuation\">.</span>forEach<span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>mixin<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        copyProps<span class=\"punctuation\">(</span>base<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">,</span> mixin<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        copyProps<span class=\"punctuation\">(</span>base<span class=\"punctuation\">,</span> mixin<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> base<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> Colored<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nColored<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\">initializer</span>: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"punctuation\"> = </span><span class=\"literal\">\"white\"</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    getColor:    <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    setColor:    <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_color<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> ZCoord<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nZCoord<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\">initializer</span>: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    getZ:        <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    setZ:        <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_z<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> Shape<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"punctuation\"> = </span>x<span class=\"punctuation\">;</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"punctuation\"> = </span>y<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nShape<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    getX: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    setX: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_x<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    getY: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    setY: <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_y<span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">var</span> _Combined<span class=\"punctuation\"> = </span><span class=\"mark\">aggregation<span class=\"punctuation\">(</span>Shape<span class=\"punctuation\">,</span> <span class=\"punctuation\">[</span> Colored<span class=\"punctuation\">,</span> ZCoord <span class=\"punctuation\">]</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> Rectangle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    _Combined<span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nRectangle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\"> = </span>Object<span class=\"punctuation\">.</span>create<span class=\"punctuation\">(</span>_Combined<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nRectangle<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>constructor<span class=\"punctuation\"> = </span>Rectangle<span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> rect<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">7</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nrect<span class=\"punctuation\">.</span><span class=\"mark\">setZ</span><span class=\"punctuation\">(</span><span class=\"literal\">1000</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nrect<span class=\"punctuation\">.</span><span class=\"mark\">setColor</span><span class=\"punctuation\">(</span><span class=\"literal\">\"red\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>rect<span class=\"punctuation\">.</span>getX<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>getY<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>getZ<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> rect<span class=\"punctuation\">.</span>getColor<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"BaseClassAccess\" class=\"showcase showcase_BaseClassAccess\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Base Class Access</div>\n    <div class=\"desc\">Intuitive access to base class constructor and methods.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">class</span> Shape <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"mark\">toString</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> <span class=\"literal\">`Shape<span class=\"punctuation\">(</span>$<span class=\"punctuation\">{</span><span class=\"keyword\">this</span><span class=\"punctuation\">.</span>id<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>`</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">class</span> Rectangle <span class=\"keyword\">extends</span> Shape <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">super</span><span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span>\n    <span class=\"mark\">toString</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> <span class=\"literal\">\"Rectangle <span class=\"punctuation\">&gt;</span> \"</span> <span class=\"punctuation\">+</span> <span class=\"mark\">super<span class=\"punctuation\">.</span>toString<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">class</span> Circle <span class=\"keyword\">extends</span> Shape <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> radius<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">super</span><span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span>\n    <span class=\"mark\">toString</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> <span class=\"literal\">\"Circle <span class=\"punctuation\">&gt;</span> \"</span> <span class=\"punctuation\">+</span> <span class=\"mark\">super<span class=\"punctuation\">.</span>toString<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> Shape<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nShape<span class=\"punctuation\">.</span><span class=\"mark\">prototype<span class=\"punctuation\">.</span>toString</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"literal\">\"Shape<span class=\"punctuation\">(</span>\"</span> <span class=\"punctuation\">+</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>id <span class=\"punctuation\">+</span> <span class=\"literal\">\"<span class=\"punctuation\">)</span>\"</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> Rectangle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">Shape<span class=\"punctuation\">.</span>call</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nRectangle<span class=\"mark\"><span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>toString</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"literal\">\"Rectangle <span class=\"punctuation\">&gt;</span> \"</span> <span class=\"punctuation\">+</span> <span class=\"mark\">Shape<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>toString<span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> Circle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> radius<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">Shape<span class=\"punctuation\">.</span>call</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nCircle<span class=\"mark\"><span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>toString</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"literal\">\"Circle <span class=\"punctuation\">&gt;</span> \"</span> <span class=\"punctuation\">+</span> <span class=\"mark\">Shape<span class=\"punctuation\">.</span>prototype<span class=\"punctuation\">.</span>toString<span class=\"punctuation\">.</span>call<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"StaticMembers\" class=\"showcase showcase_StaticMembers\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Static Members</div>\n    <div class=\"desc\">Simple support for static class members.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">class</span> Rectangle <span class=\"keyword\">extends</span> Shape <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"mark\">static defaultRectangle</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">\"default\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">class</span> Circle <span class=\"keyword\">extends</span> Shape <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"mark\">static defaultCircle</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Circle<span class=\"punctuation\">(</span><span class=\"literal\">\"default\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">var</span> defRectangle<span class=\"punctuation\"> = </span><span class=\"mark\">Rectangle<span class=\"punctuation\">.</span>defaultRectangle<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> defCircle   <span class=\"punctuation\"> = </span><span class=\"mark\">Circle<span class=\"punctuation\">.</span>defaultCircle<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> Rectangle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">Rectangle<span class=\"punctuation\">.</span>defaultRectangle</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">\"default\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> Circle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>id<span class=\"punctuation\">,</span> x<span class=\"punctuation\">,</span> y<span class=\"punctuation\">,</span> width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"mark\">Circle<span class=\"punctuation\">.</span>defaultCircle</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Circle<span class=\"punctuation\">(</span><span class=\"literal\">\"default\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> defRectangle<span class=\"punctuation\"> = </span><span class=\"mark\">Rectangle<span class=\"punctuation\">.</span>defaultRectangle<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> defCircle   <span class=\"punctuation\"> = </span><span class=\"mark\">Circle<span class=\"punctuation\">.</span>defaultCircle<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GetterSetter\" class=\"showcase showcase_GetterSetter\">    <div class=\"title\">Classes</div>\n    <div class=\"subtitle\">Getter/Setter</div>\n    <div class=\"desc\">Getter/Setter also directly within classes (and not just within object\ninitializers, as it is possible since ECMAScript 5.1).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">class</span> Rectangle <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width <span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    <span class=\"mark\">set</span> width  <span class=\"punctuation\">(</span>width<span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width<span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>               <span class=\"punctuation\">}</span>\n    <span class=\"mark\">get</span> width  <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width<span class=\"semi\">;</span>                <span class=\"punctuation\">}</span>\n    <span class=\"mark\">set</span> height <span class=\"punctuation\">(</span>height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>             <span class=\"punctuation\">}</span>\n    <span class=\"mark\">get</span> height <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"semi\">;</span>               <span class=\"punctuation\">}</span>\n    <span class=\"mark\">get</span> area   <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width <span class=\"punctuation\">*</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> r<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">50</span><span class=\"punctuation\">,</span> <span class=\"literal\">20</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nr<span class=\"punctuation\">.</span>area <span class=\"punctuation\">===</span> <span class=\"literal\">1000</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> Rectangle<span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>width<span class=\"punctuation\">,</span> height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width <span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>\n    <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nRectangle<span class=\"mark\"><span class=\"punctuation\">.</span>prototype</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\">set</span> width  <span class=\"punctuation\">(</span>width<span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width<span class=\"punctuation\"> = </span>width<span class=\"semi\">;</span>               <span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">,</span></span>\n    <span class=\"mark\">get</span> width  <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width<span class=\"semi\">;</span>                <span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">,</span></span>\n    <span class=\"mark\">set</span> height <span class=\"punctuation\">(</span>height<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"punctuation\"> = </span>height<span class=\"semi\">;</span>             <span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">,</span></span>\n    <span class=\"mark\">get</span> height <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"semi\">;</span>               <span class=\"punctuation\">}</span><span class=\"mark\"><span class=\"punctuation\">,</span></span>\n    <span class=\"mark\">get</span> area   <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>       <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_width <span class=\"punctuation\">*</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_height<span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> r<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Rectangle<span class=\"punctuation\">(</span><span class=\"literal\">50</span><span class=\"punctuation\">,</span> <span class=\"literal\">20</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nr<span class=\"punctuation\">.</span>area <span class=\"punctuation\">===</span> <span class=\"literal\">1000</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"SymbolType\" class=\"showcase showcase_SymbolType\">    <div class=\"title\">Symbol Type</div>\n    <div class=\"subtitle\">Symbol Type</div>\n    <div class=\"desc\">Unique and immutable data type to be used as an identifier for object properties.\nSymbol can have an optional description, but for debugging purposes only.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">Symbol<span class=\"punctuation\">(</span><span class=\"literal\">\"foo\"</span><span class=\"punctuation\">)</span> <span class=\"mark\">!==</span> Symbol<span class=\"punctuation\">(</span><span class=\"literal\">\"foo\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">const</span> foo<span class=\"punctuation\"> = </span>Symbol<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">const</span> bar<span class=\"punctuation\"> = </span>Symbol<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\ntypeof foo <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"symbol\"</span></span><span class=\"semi\">;</span>\ntypeof bar <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"symbol\"</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\">[</span>foo<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"foo\"</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\">[</span>bar<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\nJSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span>\nObject<span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span>\nObject<span class=\"punctuation\">.</span>getOwnPropertyNames<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span>\nObject<span class=\"punctuation\">.</span><span class=\"mark\">getOwnPropertySymbols</span><span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> foo<span class=\"punctuation\">,</span> bar <span class=\"punctuation\">]</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GlobalSymbols\" class=\"showcase showcase_GlobalSymbols\">    <div class=\"title\">Symbol Type</div>\n    <div class=\"subtitle\">Global Symbols</div>\n    <div class=\"desc\">Global symbols, indexed through unique keys.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">Symbol<span class=\"punctuation\">.</span><span class=\"keyword\">for</span><span class=\"punctuation\">(</span><span class=\"literal\">\"app<span class=\"punctuation\">.</span>foo\"</span><span class=\"punctuation\">)</span> <span class=\"mark\"><span class=\"punctuation\">===</span></span> Symbol<span class=\"punctuation\">.</span><span class=\"keyword\">for</span><span class=\"punctuation\">(</span><span class=\"literal\">\"app<span class=\"punctuation\">.</span>foo\"</span><span class=\"punctuation\">)</span>\n<span class=\"keyword\">const</span> foo<span class=\"punctuation\"> = </span>Symbol<span class=\"punctuation\">.</span><span class=\"keyword\">for</span><span class=\"punctuation\">(</span><span class=\"literal\">\"app<span class=\"punctuation\">.</span>foo\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">const</span> bar<span class=\"punctuation\"> = </span>Symbol<span class=\"punctuation\">.</span><span class=\"keyword\">for</span><span class=\"punctuation\">(</span><span class=\"literal\">\"app<span class=\"punctuation\">.</span>bar\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nSymbol<span class=\"punctuation\">.</span>keyFor<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"app<span class=\"punctuation\">.</span>foo\"</span><span class=\"semi\">;</span>\nSymbol<span class=\"punctuation\">.</span>keyFor<span class=\"punctuation\">(</span>bar<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"app<span class=\"punctuation\">.</span>bar\"</span><span class=\"semi\">;</span>\ntypeof foo <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"symbol\"</span></span><span class=\"semi\">;</span>\ntypeof bar <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"symbol\"</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\">[</span>foo<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"foo\"</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\">[</span>bar<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\nJSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span>\nObject<span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span>\nObject<span class=\"punctuation\">.</span>getOwnPropertyNames<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span>\nObject<span class=\"punctuation\">.</span><span class=\"mark\">getOwnPropertySymbols</span><span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> foo<span class=\"punctuation\">,</span> bar <span class=\"punctuation\">]</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"IteratorForOfOperator\" class=\"showcase showcase_IteratorForOfOperator\">    <div class=\"title\">Iterators</div>\n    <div class=\"subtitle\">Iterator & For-Of Operator</div>\n    <div class=\"desc\">Support \"iterable\" protocol to allow objects to customize their\niteration behaviour. Additionally, support \"iterator\" protocol to produce\nsequence of values (either finite or infinite). Finally, provide\nconvenient <code>of</code> operator to iterate over all values of an iterable object.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> fibonacci<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"punctuation\">[</span>Symbol<span class=\"punctuation\">.</span>iterator<span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">let</span> pre<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> cur<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"semi\">;</span>\n        <span class=\"keyword\">return</span> <span class=\"punctuation\">{</span>\n           <span class=\"mark\">next <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n               <span class=\"punctuation\">[</span> pre<span class=\"punctuation\">,</span> cur <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> cur<span class=\"punctuation\">,</span> pre <span class=\"punctuation\">+</span> cur <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n               <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"punctuation\">{</span> done: false<span class=\"punctuation\">,</span> value: cur <span class=\"punctuation\">}</span></span><span class=\"semi\">;</span>\n           <span class=\"punctuation\">}</span>\n        <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> n <span class=\"mark\"><span class=\"keyword\">of</span></span> fibonacci<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>n <span class=\"punctuation\">&gt;</span> <span class=\"literal\">1000</span><span class=\"punctuation\">)</span>\n        break<span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> fibonacci<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\">next:</span> <span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">var</span> pre<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> cur<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"semi\">;</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            tmp<span class=\"punctuation\"> = </span>pre<span class=\"semi\">;</span>\n            pre<span class=\"punctuation\"> = </span>cur<span class=\"semi\">;</span>\n            cur <span class=\"punctuation\">+</span>= tmp<span class=\"semi\">;</span>\n            <span class=\"keyword\">return</span> cur<span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> n<span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">;</span><span class=\"punctuation\">;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    n<span class=\"punctuation\"> = </span>fibonacci<span class=\"mark\"><span class=\"punctuation\">.</span>next<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>n <span class=\"punctuation\">&gt;</span> <span class=\"literal\">1000</span><span class=\"punctuation\">)</span>\n        break<span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GeneratorFunctionIteratorProtocol\" class=\"showcase showcase_GeneratorFunctionIteratorProtocol\">    <div class=\"title\">Generators</div>\n    <div class=\"subtitle\">Generator Function, Iterator Protocol</div>\n    <div class=\"desc\">Support for generators, a special case of Iterators containing a\ngenerator function, where the control flow can be paused and resumed, in\norder to produce sequence of values (either finite or infinite).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> fibonacci<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"punctuation\">*</span><span class=\"punctuation\">[</span>Symbol<span class=\"punctuation\">.</span>iterator<span class=\"punctuation\">]</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">let</span> pre<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> cur<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"semi\">;</span>\n        <span class=\"mark\"><span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">;</span><span class=\"punctuation\">;</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n            <span class=\"punctuation\">[</span> pre<span class=\"punctuation\">,</span> cur <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> cur<span class=\"punctuation\">,</span> pre <span class=\"punctuation\">+</span> cur <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n            <span class=\"mark\">yield cur</span><span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">let</span> n <span class=\"keyword\">of</span> fibonacci</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>n <span class=\"punctuation\">&gt;</span> <span class=\"literal\">1000</span><span class=\"punctuation\">)</span>\n        break<span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> fibonacci<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    next: <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">var</span> pre<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> cur<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"semi\">;</span>\n        <span class=\"keyword\">return</span> <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            tmp<span class=\"punctuation\"> = </span>pre<span class=\"semi\">;</span>\n            pre<span class=\"punctuation\"> = </span>cur<span class=\"semi\">;</span>\n            cur <span class=\"punctuation\">+</span>= tmp<span class=\"semi\">;</span>\n            <span class=\"keyword\">return</span> cur<span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">var</span> n<span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">;</span><span class=\"punctuation\">;</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    n<span class=\"punctuation\"> = </span>fibonacci<span class=\"mark\"><span class=\"punctuation\">.</span>next<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>n <span class=\"punctuation\">&gt;</span> <span class=\"literal\">1000</span><span class=\"punctuation\">)</span>\n        break<span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GeneratorFunctionDirectUse\" class=\"showcase showcase_GeneratorFunctionDirectUse\">    <div class=\"title\">Generators</div>\n    <div class=\"subtitle\">Generator Function, Direct Use</div>\n    <div class=\"desc\">Support for generator functions, a special variant of functions where\nthe control flow can be paused and resumed, in order to produce sequence\nof values (either finite or infinite).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">function</span><span class=\"punctuation\">*</span></span> range <span class=\"punctuation\">(</span>start<span class=\"punctuation\">,</span> end<span class=\"punctuation\">,</span> step<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">while</span> <span class=\"punctuation\">(</span>start <span class=\"punctuation\">&lt;</span> end<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">yield</span> start<span class=\"semi\">;</span>\n        start <span class=\"punctuation\">+</span>= step<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> i <span class=\"mark\"><span class=\"keyword\">of</span></span> range<span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">10</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">6</span><span class=\"punctuation\">,</span> <span class=\"literal\">8</span></span>\n<span class=\"punctuation\">}</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\"><span class=\"keyword\">function</span></span> range <span class=\"punctuation\">(</span>start<span class=\"punctuation\">,</span> end<span class=\"punctuation\">,</span> step<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">while</span> <span class=\"punctuation\">(</span>start <span class=\"punctuation\">&lt;</span> end<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">list<span class=\"punctuation\">.</span>push<span class=\"punctuation\">(</span>start<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n        start <span class=\"punctuation\">+</span>= step<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    <span class=\"mark\"><span class=\"keyword\">return</span> list</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"mark\"><span class=\"keyword\">var</span> r<span class=\"punctuation\"> = </span>range<span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">10</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">var</span> i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> r<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">r<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">0</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">6</span><span class=\"punctuation\">,</span> <span class=\"literal\">8</span></span>\n<span class=\"punctuation\">}</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GeneratorMatching\" class=\"showcase showcase_GeneratorMatching\">    <div class=\"title\">Generators</div>\n    <div class=\"subtitle\">Generator Matching</div>\n    <div class=\"desc\">Support for generator functions, i.e., functions where the control flow\ncan be paused and resumed, in order to produce and spread sequence of\nvalues (either finite or infinite).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> fibonacci<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">function</span><span class=\"punctuation\">*</span></span> <span class=\"punctuation\">(</span>numbers<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">let</span> pre<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">,</span> cur<span class=\"punctuation\"> = </span><span class=\"literal\">1</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">while</span> <span class=\"punctuation\">(</span>numbers<span class=\"punctuation\">-</span><span class=\"punctuation\">-</span> <span class=\"punctuation\">&gt;</span> <span class=\"literal\">0</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"punctuation\">[</span> pre<span class=\"punctuation\">,</span> cur <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> cur<span class=\"punctuation\">,</span> pre <span class=\"punctuation\">+</span> cur <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n        <span class=\"mark\">yield cur</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">let</span> n <span class=\"keyword\">of</span> fibonacci<span class=\"punctuation\">(</span><span class=\"literal\">1000</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">let</span> numbers<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"mark\"><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>fibonacci<span class=\"punctuation\">(</span><span class=\"literal\">1000</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">let</span> <span class=\"punctuation\">[</span> n<span class=\"literal\">1</span><span class=\"punctuation\">,</span> n<span class=\"literal\">2</span><span class=\"punctuation\">,</span> n<span class=\"literal\">3</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>others <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"mark\">fibonacci<span class=\"punctuation\">(</span><span class=\"literal\">1000</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GeneratorControlFlow\" class=\"showcase showcase_GeneratorControlFlow\">    <div class=\"title\">Generators</div>\n    <div class=\"subtitle\">Generator Control-Flow</div>\n    <div class=\"desc\">Support for generators, a special case of Iterators where the control\nflow can be paused and resumed, in order to support asynchronous\nprogramming in the style of \"co-routines\" in combination with Promises (see below).\n[Notice: the generic <code>async</code> function usually is provided by a reusable library\nand given here just for better understanding. See\n<a href=\"https://github.com/tj/co\">co</a> or\n<a href=\"https://github.com/petkaantonov/bluebird/blob/master/API.md#promisecoroutinegeneratorfunction-generatorfunction---function\">Bluebird</a>'s <code>coroutine</code> in practice.]</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  generic asynchronous control<span class=\"punctuation\">-</span>flow driver</span>\n<span class=\"keyword\">function</span> <span class=\"mark\">async</span> <span class=\"punctuation\">(</span>proc<span class=\"punctuation\">,</span> <span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>params<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">let</span> <span class=\"mark\">iterator</span><span class=\"punctuation\"> = </span><span class=\"mark\">proc<span class=\"punctuation\">(</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span><span class=\"punctuation\">.</span>params<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Promise<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>resolve<span class=\"punctuation\">,</span> reject<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">let</span> loop<span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>value<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n            <span class=\"keyword\">let</span> result<span class=\"semi\">;</span>\n            try <span class=\"punctuation\">{</span>\n                result<span class=\"punctuation\"> = </span><span class=\"mark\">iterator<span class=\"punctuation\">.</span>next</span><span class=\"punctuation\">(</span>value<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span>\n            catch <span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                reject<span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span>\n            <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>result<span class=\"punctuation\">.</span>done<span class=\"punctuation\">)</span>\n                resolve<span class=\"punctuation\">(</span>result<span class=\"punctuation\">.</span>value<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            else <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>   typeof result<span class=\"punctuation\">.</span>value      <span class=\"punctuation\">===</span> <span class=\"literal\">\"object\"</span>\n                     <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> typeof result<span class=\"punctuation\">.</span>value<span class=\"punctuation\">.</span>then <span class=\"punctuation\">===</span> <span class=\"literal\">\"<span class=\"keyword\">function</span>\"</span><span class=\"punctuation\">)</span>\n                result<span class=\"punctuation\">.</span>value<span class=\"punctuation\">.</span>then<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>value<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n                    loop<span class=\"punctuation\">(</span>value<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n                <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n                    reject<span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n                <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n            else\n                loop<span class=\"punctuation\">(</span>result<span class=\"punctuation\">.</span>value<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span>\n        loop<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"comment\">\n//  application<span class=\"punctuation\">-</span>specific asynchronous builder</span>\n<span class=\"keyword\">function</span> makeAsync <span class=\"punctuation\">(</span>text<span class=\"punctuation\">,</span> after<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Promise<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>resolve<span class=\"punctuation\">,</span> reject<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        setTimeout<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> resolve<span class=\"punctuation\">(</span>text<span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> after<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"comment\">\n//  application<span class=\"punctuation\">-</span>specific asynchronous procedure</span>\n<span class=\"mark\">async</span><span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span><span class=\"punctuation\">*</span></span> <span class=\"punctuation\">(</span>greeting<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">let</span> foo<span class=\"punctuation\"> = </span><span class=\"mark\">yield</span> makeAsync<span class=\"punctuation\">(</span><span class=\"literal\">\"foo\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">300</span><span class=\"punctuation\">)</span>\n    <span class=\"keyword\">let</span> bar<span class=\"punctuation\"> = </span><span class=\"mark\">yield</span> makeAsync<span class=\"punctuation\">(</span><span class=\"literal\">\"bar\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">200</span><span class=\"punctuation\">)</span>\n    <span class=\"keyword\">let</span> baz<span class=\"punctuation\"> = </span><span class=\"mark\">yield</span> makeAsync<span class=\"punctuation\">(</span><span class=\"literal\">\"baz\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span>\n    <span class=\"keyword\">return</span> <span class=\"literal\">`$<span class=\"punctuation\">{</span>greeting<span class=\"punctuation\">}</span> $<span class=\"punctuation\">{</span>foo<span class=\"punctuation\">}</span> $<span class=\"punctuation\">{</span>bar<span class=\"punctuation\">}</span> $<span class=\"punctuation\">{</span>baz<span class=\"punctuation\">}</span>`</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"Hello\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>then<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>msg<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"RESULT:\"</span><span class=\"punctuation\">,</span> msg<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">\"Hello foo bar baz\"</span></span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"GeneratorMethods\" class=\"showcase showcase_GeneratorMethods\">    <div class=\"title\">Generators</div>\n    <div class=\"subtitle\">Generator Methods</div>\n    <div class=\"desc\">Support for generator methods, i.e., methods in classes and on objects,\nbased on generator functions.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">class</span> Clz <span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"punctuation\">*</span> bar <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> Obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    <span class=\"mark\"><span class=\"punctuation\">*</span> foo <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"ellipsis\">&hellip;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"SetDataStructure\" class=\"showcase showcase_SetDataStructure\">    <div class=\"title\">Map/Set & WeakMap/WeakSet</div>\n    <div class=\"subtitle\">Set Data-Structure</div>\n    <div class=\"desc\">Cleaner data-structure for common algorithms based on sets.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> s<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Set<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\ns<span class=\"punctuation\">.</span><span class=\"mark\">add<span class=\"punctuation\">(</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">.</span><span class=\"mark\">add<span class=\"punctuation\">(</span><span class=\"literal\">\"goodbye\"</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">.</span><span class=\"mark\">add<span class=\"punctuation\">(</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\ns<span class=\"punctuation\">.</span><span class=\"mark\">size</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\ns<span class=\"punctuation\">.</span><span class=\"mark\">has<span class=\"punctuation\">(</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">)</span></span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> key <span class=\"mark\"><span class=\"keyword\">of</span></span> s<span class=\"punctuation\">.</span><span class=\"mark\">values<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span><span class=\"comment\"> // insertion order</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>key<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> s<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span><span class=\"semi\">;</span>\n<span class=\"mark\">s<span class=\"punctuation\">[</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>true</span><span class=\"punctuation\">;</span> <span class=\"mark\">s<span class=\"punctuation\">[</span><span class=\"literal\">\"goodbye\"</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>true</span><span class=\"punctuation\">;</span> <span class=\"mark\">s<span class=\"punctuation\">[</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>true</span><span class=\"semi\">;</span>\n<span class=\"mark\">Object<span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>s<span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>length</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"mark\">s<span class=\"punctuation\">[</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">]</span></span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">var</span> key <span class=\"mark\"><span class=\"keyword\">in</span></span> s<span class=\"punctuation\">)</span><span class=\"comment\"> // arbitrary order</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>s<span class=\"punctuation\">.</span>hasOwnProperty<span class=\"punctuation\">(</span>key<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>\n        console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>s<span class=\"punctuation\">[</span>key<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"MapDataStructure\" class=\"showcase showcase_MapDataStructure\">    <div class=\"title\">Map/Set & WeakMap/WeakSet</div>\n    <div class=\"subtitle\">Map Data-Structure</div>\n    <div class=\"desc\">Cleaner data-structure for common algorithms based on maps.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> m<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Map<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> s<span class=\"punctuation\"> = </span><span class=\"mark\">Symbol<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\nm<span class=\"punctuation\">.</span><span class=\"mark\">set<span class=\"punctuation\">(</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">42</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\nm<span class=\"punctuation\">.</span><span class=\"mark\">set<span class=\"punctuation\">(</span>s<span class=\"punctuation\">,</span> <span class=\"literal\">34</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\nm<span class=\"punctuation\">.</span><span class=\"mark\">get<span class=\"punctuation\">(</span>s<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">===</span> <span class=\"literal\">34</span><span class=\"semi\">;</span>\nm<span class=\"punctuation\">.</span><span class=\"mark\">size</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">let</span> <span class=\"mark\"><span class=\"punctuation\">[</span> key<span class=\"punctuation\">,</span> val <span class=\"punctuation\">]</span> <span class=\"keyword\">of</span> m<span class=\"punctuation\">.</span>entries<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>key <span class=\"punctuation\">+</span> <span class=\"literal\">\"<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> m<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"punctuation\">{</span><span class=\"punctuation\">}</span></span><span class=\"semi\">;</span><span class=\"comment\">\n// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span>\n<span class=\"mark\">m<span class=\"punctuation\">[</span><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">42</span></span><span class=\"semi\">;</span><span class=\"comment\">\n// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span><span class=\"comment\">\n// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span>\n<span class=\"mark\">Object<span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>m<span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>length</span> <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\n<span class=\"keyword\">for</span> <span class=\"punctuation\">(</span>key <span class=\"mark\"><span class=\"keyword\">in</span></span> m<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">if</span> <span class=\"punctuation\">(</span>m<span class=\"punctuation\">.</span>hasOwnProperty<span class=\"punctuation\">(</span>key<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">var</span> <span class=\"mark\">val<span class=\"punctuation\"> = </span>m<span class=\"punctuation\">[</span>key<span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n        console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>key <span class=\"punctuation\">+</span> <span class=\"literal\">\"<span class=\"punctuation\"> = </span>\"</span> <span class=\"punctuation\">+</span> val<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"WeakLinkDataStructures\" class=\"showcase showcase_WeakLinkDataStructures\">    <div class=\"title\">Map/Set & WeakMap/WeakSet</div>\n    <div class=\"subtitle\">Weak-Link Data-Structures</div>\n    <div class=\"desc\">Memory-leak-free Object-key’d side-by-side data-structures.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> isMarked    <span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> <span class=\"mark\">WeakSet</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> attachedData<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> <span class=\"mark\">WeakMap</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n\n<span class=\"keyword\">export</span> <span class=\"keyword\">class</span> Node <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>id<span class=\"punctuation\">)</span>   <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>id<span class=\"punctuation\"> = </span>id<span class=\"semi\">;</span>                  <span class=\"punctuation\">}</span>\n    mark        <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"mark\">isMarked<span class=\"punctuation\">.</span>add</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>            <span class=\"punctuation\">}</span>\n    unmark      <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"mark\">isMarked<span class=\"punctuation\">.</span>delete</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>         <span class=\"punctuation\">}</span>\n    marked      <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"mark\">isMarked<span class=\"punctuation\">.</span>has</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>     <span class=\"punctuation\">}</span>\n    set data    <span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"mark\">attachedData<span class=\"punctuation\">.</span>set</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">,</span> data<span class=\"punctuation\">)</span><span class=\"semi\">;</span>  <span class=\"punctuation\">}</span>\n    get data    <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"mark\">attachedData<span class=\"punctuation\">.</span>get</span><span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">let</span> foo<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Node<span class=\"punctuation\">(</span><span class=\"literal\">\"foo\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n\nJSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">'<span class=\"punctuation\">{</span>\"id\":\"foo\"<span class=\"punctuation\">}</span>'</span></span><span class=\"semi\">;</span>\nfoo<span class=\"punctuation\">.</span>mark<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nfoo<span class=\"punctuation\">.</span>data<span class=\"punctuation\"> = </span><span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\nfoo<span class=\"punctuation\">.</span>data <span class=\"punctuation\">===</span> <span class=\"literal\">\"bar\"</span><span class=\"semi\">;</span>\nJSON<span class=\"punctuation\">.</span>stringify<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">'<span class=\"punctuation\">{</span>\"id\":\"foo\"<span class=\"punctuation\">}</span>'</span></span><span class=\"semi\">;</span>\n\nisMarked<span class=\"punctuation\">.</span>has<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span>     <span class=\"punctuation\">===</span> <span class=\"mark\">true</span>\nattachedData<span class=\"punctuation\">.</span>has<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\">true</span>\nfoo <span class=\"mark\">=</span> null  /<span class=\"punctuation\">*</span> remove only reference to foo <span class=\"punctuation\">*</span>/\nattachedData<span class=\"punctuation\">.</span>has<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\">false</span>\nisMarked<span class=\"punctuation\">.</span>has<span class=\"punctuation\">(</span>foo<span class=\"punctuation\">)</span>     <span class=\"punctuation\">===</span> <span class=\"mark\">false</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"TypedArrays\" class=\"showcase showcase_TypedArrays\">    <div class=\"title\">Typed Arrays</div>\n    <div class=\"subtitle\">Typed Arrays</div>\n    <div class=\"desc\">Support for arbitrary byte-based data structures to implement network\nprotocols, cryptography algorithms, file format manipulations, etc.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  ES<span class=\"literal\">6</span> <span class=\"keyword\">class</span> equivalent to the following C structure:</span><span class=\"comment\">\n//  struct Example <span class=\"punctuation\">{</span> unsigned long id<span class=\"punctuation\">;</span> char username<span class=\"punctuation\">[</span><span class=\"literal\">16</span><span class=\"punctuation\">]</span><span class=\"punctuation\">;</span> float amountDue<span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span></span>\n<span class=\"keyword\">class</span> Example <span class=\"punctuation\">{</span>\n    constructor <span class=\"punctuation\">(</span>buffer<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> ArrayBuffer<span class=\"punctuation\">(</span><span class=\"literal\">24</span><span class=\"punctuation\">)</span></span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>buffer<span class=\"punctuation\"> = </span>buffer<span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    set buffer <span class=\"punctuation\">(</span>buffer<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_buffer   <span class=\"punctuation\"> = </span>buffer<span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_id       <span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Uint<span class=\"literal\">32</span>Array <span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_buffer<span class=\"punctuation\">,</span>  <span class=\"literal\">0</span><span class=\"punctuation\">,</span>  <span class=\"literal\">1</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_username <span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Uint<span class=\"literal\">8</span>Array  <span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_buffer<span class=\"punctuation\">,</span>  <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">16</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n        <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_amountDue<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Float<span class=\"literal\">32</span>Array<span class=\"punctuation\">(</span><span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_buffer<span class=\"punctuation\">,</span> <span class=\"literal\">20</span><span class=\"punctuation\">,</span>  <span class=\"literal\">1</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n    get buffer <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>     <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_buffer<span class=\"semi\">;</span>       <span class=\"punctuation\">}</span>\n    set id <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>        <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_id<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span>           <span class=\"punctuation\">}</span>\n    get id <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>         <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_id<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>        <span class=\"punctuation\">}</span>\n    set username <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_username<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span>     <span class=\"punctuation\">}</span>\n    get username <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>   <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_username<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>  <span class=\"punctuation\">}</span>\n    set amountDue <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_amountDue<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>v<span class=\"semi\">;</span>    <span class=\"punctuation\">}</span>\n    get amountDue <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>  <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span> <span class=\"keyword\">this</span><span class=\"punctuation\">.</span>_amountDue<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n\n<span class=\"keyword\">let</span> example<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Example<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span>\nexample<span class=\"punctuation\">.</span><span class=\"mark\">id</span><span class=\"punctuation\"> = </span><span class=\"literal\">7</span>\nexample<span class=\"punctuation\">.</span><span class=\"mark\">username</span><span class=\"punctuation\"> = </span><span class=\"literal\">\"John Doe\"</span>\nexample<span class=\"punctuation\">.</span><span class=\"mark\">amountDue</span><span class=\"punctuation\"> = </span><span class=\"literal\">42</span><span class=\"punctuation\">.</span><span class=\"literal\">0</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">//  no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span><span class=\"comment\">\n//  <span class=\"punctuation\">(</span>only an equivalent <span class=\"keyword\">in</span> HTML<span class=\"literal\">5</span><span class=\"punctuation\">)</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ObjectPropertyAssignment\" class=\"showcase showcase_ObjectPropertyAssignment\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Object Property Assignment</div>\n    <div class=\"desc\">New function for assigning enumerable properties of one or more source\nobjects onto a destination object.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> dest<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> quux: <span class=\"literal\">0</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> src<span class=\"literal\">1</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> foo: <span class=\"mark\"><span class=\"literal\">1</span></span><span class=\"punctuation\">,</span> bar: <span class=\"literal\">2</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> src<span class=\"literal\">2</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> foo: <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"punctuation\">,</span> baz: <span class=\"literal\">4</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nObject<span class=\"mark\"><span class=\"punctuation\">.</span>assign</span><span class=\"punctuation\">(</span>dest<span class=\"punctuation\">,</span> src<span class=\"literal\">1</span><span class=\"punctuation\">,</span> src<span class=\"literal\">2</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>quux <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>foo  <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>bar  <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>baz  <span class=\"punctuation\">===</span> <span class=\"literal\">4</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> dest<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> quux: <span class=\"literal\">0</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> src<span class=\"literal\">1</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> foo: <span class=\"mark\"><span class=\"literal\">1</span></span><span class=\"punctuation\">,</span> bar: <span class=\"literal\">2</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> src<span class=\"literal\">2</span><span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> foo: <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"punctuation\">,</span> baz: <span class=\"literal\">4</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nObject<span class=\"mark\"><span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>src<span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>forEach</span><span class=\"punctuation\">(</span><span class=\"keyword\">function</span><span class=\"punctuation\">(</span>k<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">dest<span class=\"punctuation\">[</span>k<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>src<span class=\"literal\">1</span><span class=\"punctuation\">[</span>k<span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nObject<span class=\"mark\"><span class=\"punctuation\">.</span>keys<span class=\"punctuation\">(</span>src<span class=\"literal\">2</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span>forEach</span><span class=\"punctuation\">(</span><span class=\"keyword\">function</span><span class=\"punctuation\">(</span>k<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">dest<span class=\"punctuation\">[</span>k<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>src<span class=\"literal\">2</span><span class=\"punctuation\">[</span>k<span class=\"punctuation\">]</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>quux <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>foo  <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">3</span></span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>bar  <span class=\"punctuation\">===</span> <span class=\"literal\">2</span><span class=\"semi\">;</span>\ndest<span class=\"punctuation\">.</span>baz  <span class=\"punctuation\">===</span> <span class=\"literal\">4</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"ArrayElementFinding\" class=\"showcase showcase_ArrayElementFinding\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Array Element Finding</div>\n    <div class=\"desc\">New function for finding an element in an array.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">3</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">.</span><span class=\"mark\">find</span><span class=\"punctuation\">(</span><span class=\"mark\">x <span class=\"punctuation\">=&gt;</span></span> x <span class=\"punctuation\">&gt;</span> <span class=\"literal\">3</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">4</span></span>\n<span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">3</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">.</span><span class=\"mark\">findIndex</span><span class=\"punctuation\">(</span><span class=\"mark\">x <span class=\"punctuation\">=&gt;</span></span> x <span class=\"punctuation\">&gt;</span> <span class=\"literal\">3</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">2</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"punctuation\">[</span> <span class=\"literal\">1</span><span class=\"punctuation\">,</span> <span class=\"literal\">3</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span> <span class=\"punctuation\">]</span><span class=\"punctuation\">.</span><span class=\"mark\">filter</span><span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span> <span class=\"keyword\">return</span></span> x <span class=\"punctuation\">&gt;</span> <span class=\"literal\">3</span><span class=\"semi\">;</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"mark\"><span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span></span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"literal\">4</span></span><span class=\"comment\">\n// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"StringRepeating\" class=\"showcase showcase_StringRepeating\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">String Repeating</div>\n    <div class=\"desc\">New string repeating functionality.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"literal\">\" \"</span><span class=\"punctuation\">.</span><span class=\"mark\">repeat</span><span class=\"punctuation\">(</span><span class=\"literal\">4</span> <span class=\"punctuation\">*</span> depth<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"literal\">\"foo\"</span><span class=\"punctuation\">.</span><span class=\"mark\">repeat</span><span class=\"punctuation\">(</span><span class=\"literal\">3</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"mark\">Array</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"literal\">4</span> <span class=\"punctuation\">*</span> depth<span class=\"punctuation\">)</span> <span class=\"punctuation\">+</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span><span class=\"mark\">join</span><span class=\"punctuation\">(</span><span class=\"literal\">\" \"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"mark\">Array</span><span class=\"punctuation\">(</span><span class=\"literal\">3</span> <span class=\"punctuation\">+</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span><span class=\"mark\">join</span><span class=\"punctuation\">(</span><span class=\"literal\">\"foo\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"StringSearching\" class=\"showcase showcase_StringSearching\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">String Searching</div>\n    <div class=\"desc\">New specific string functions to search for a sub-string.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">startsWith</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ello\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">endsWith</span><span class=\"punctuation\">(</span><span class=\"literal\">\"hell\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">4</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>  <span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">includes</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>      <span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">includes</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>   <span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">includes</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>   <span class=\"comment\"> // false</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">indexOf</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ello\"</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"literal\">1</span><span class=\"semi\">;</span>   <span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">indexOf</span><span class=\"punctuation\">(</span><span class=\"literal\">\"hell\"</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"punctuation\">(</span><span class=\"literal\">4</span> <span class=\"mark\"><span class=\"punctuation\">-</span> <span class=\"literal\">\"hell\"</span><span class=\"punctuation\">.</span>length</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">indexOf</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">)</span> !== <span class=\"punctuation\">-</span><span class=\"literal\">1</span><span class=\"semi\">;</span>   <span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">indexOf</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span> !== <span class=\"punctuation\">-</span><span class=\"literal\">1</span><span class=\"semi\">;</span><span class=\"comment\"> // true</span>\n<span class=\"literal\">\"hello\"</span><span class=\"punctuation\">.</span><span class=\"mark\">indexOf</span><span class=\"punctuation\">(</span><span class=\"literal\">\"ell\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">2</span><span class=\"punctuation\">)</span> !== <span class=\"punctuation\">-</span><span class=\"literal\">1</span><span class=\"semi\">;</span><span class=\"comment\"> // false</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberTypeChecking\" class=\"showcase showcase_NumberTypeChecking\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Number Type Checking</div>\n    <div class=\"desc\">New functions for checking for non-numbers and finite numbers.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">Number<span class=\"punctuation\">.</span><span class=\"mark\">isNaN</span><span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isNaN</span><span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isFinite</span><span class=\"punctuation\">(</span>Infinity<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isFinite</span><span class=\"punctuation\">(</span><span class=\"punctuation\">-</span>Infinity<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isFinite</span><span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isFinite</span><span class=\"punctuation\">(</span><span class=\"literal\">123</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> <span class=\"mark\">isNaN</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\">n !== n</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> <span class=\"mark\">isFinite</span><span class=\"punctuation\"> = </span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"punctuation\">(</span>typeof v <span class=\"punctuation\">===</span> <span class=\"literal\">\"number\"</span> <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> !isNaN<span class=\"punctuation\">(</span>v<span class=\"punctuation\">)</span> <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> v !== Infinity <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> v !== <span class=\"punctuation\">-</span>Infinity<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nisNaN<span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nisNaN<span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n\nisFinite<span class=\"punctuation\">(</span>Infinity<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nisFinite<span class=\"punctuation\">(</span><span class=\"punctuation\">-</span>Infinity<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nisFinite<span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\nisFinite<span class=\"punctuation\">(</span><span class=\"literal\">123</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberSafetyChecking\" class=\"showcase showcase_NumberSafetyChecking\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Number Safety Checking</div>\n    <div class=\"desc\">Checking whether an integer number is in the safe range, i.e., it is\ncorrectly represented by JavaScript (where all numbers, including\ninteger numbers, are technically floating point number).</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">Number<span class=\"punctuation\">.</span><span class=\"mark\">isSafeInteger</span><span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\nNumber<span class=\"punctuation\">.</span><span class=\"mark\">isSafeInteger</span><span class=\"punctuation\">(</span><span class=\"literal\">9007199254740992</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> isSafeInteger <span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"punctuation\">(</span>\n           typeof n <span class=\"punctuation\">===</span> <span class=\"literal\">'number'</span>\n        <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> Math<span class=\"punctuation\">.</span>round<span class=\"punctuation\">(</span>n<span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> n\n        <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> <span class=\"punctuation\">-</span><span class=\"punctuation\">(</span>Math<span class=\"punctuation\">.</span>pow<span class=\"punctuation\">(</span><span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">53</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&lt;</span>= n\n        <span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span><span class=\"punctuation\"><span class=\"punctuation\">&amp;</span></span> n <span class=\"punctuation\">&lt;</span>= <span class=\"punctuation\">(</span>Math<span class=\"punctuation\">.</span>pow<span class=\"punctuation\">(</span><span class=\"literal\">2</span><span class=\"punctuation\">,</span> <span class=\"literal\">53</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-</span> <span class=\"literal\">1</span><span class=\"punctuation\">)</span>\n    <span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"mark\">isSafeInteger</span><span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> true<span class=\"semi\">;</span>\n<span class=\"mark\">isSafeInteger</span><span class=\"punctuation\">(</span><span class=\"literal\">9007199254740992</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> false<span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberComparison\" class=\"showcase showcase_NumberComparison\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Number Comparison</div>\n    <div class=\"desc\">Availability of a standard Epsilon value for more precise comparison of\nfloating point numbers.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span> <span class=\"punctuation\">+</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">2</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">3</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // false</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>Math<span class=\"punctuation\">.</span>abs<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span> <span class=\"punctuation\">+</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">2</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">3</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&lt;</span> <span class=\"mark\">Number<span class=\"punctuation\">.</span>EPSILON</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // true</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span> <span class=\"punctuation\">+</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">2</span> <span class=\"punctuation\">===</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">3</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // false</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>Math<span class=\"punctuation\">.</span>abs<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span> <span class=\"punctuation\">+</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">2</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">-</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">3</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">&lt;</span> <span class=\"mark\"><span class=\"literal\">2</span><span class=\"punctuation\">.</span><span class=\"literal\">220446049250313</span>e<span class=\"punctuation\">-</span><span class=\"literal\">16</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // true</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberTruncation\" class=\"showcase showcase_NumberTruncation\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Number Truncation</div>\n    <div class=\"desc\">Truncate a floating point number to its integral part,\ncompletely dropping the fractional part.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>trunc</span><span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">.</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"literal\">42</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>trunc</span><span class=\"punctuation\">(</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>trunc</span><span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">0</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> mathTrunc <span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"punctuation\">(</span>x <span class=\"punctuation\">&lt;</span> <span class=\"literal\">0</span> ? Math<span class=\"punctuation\">.</span>ceil<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> : Math<span class=\"punctuation\">.</span>floor<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathTrunc<span class=\"punctuation\">(</span><span class=\"literal\">42</span><span class=\"punctuation\">.</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"literal\">42</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathTrunc<span class=\"punctuation\">(</span> <span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathTrunc<span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">0</span><span class=\"punctuation\">.</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">0</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberSignDetermination\" class=\"showcase showcase_NumberSignDetermination\">    <div class=\"title\">New Built-In Methods</div>\n    <div class=\"subtitle\">Number Sign Determination</div>\n    <div class=\"desc\">Determine the sign of a number, including special cases of signed zero and non-number.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\">console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>sign</span><span class=\"punctuation\">(</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"> // <span class=\"literal\">1</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>sign</span><span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"> // <span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>sign</span><span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>sign</span><span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">1</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"mark\">Math<span class=\"punctuation\">.</span>sign</span><span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // NaN</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> <span class=\"mark\">mathSign</span> <span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>x <span class=\"punctuation\">===</span> <span class=\"literal\">0</span> &#124;&#124; isNaN<span class=\"punctuation\">(</span>x<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> ? x : <span class=\"punctuation\">(</span>x <span class=\"punctuation\">&gt;</span> <span class=\"literal\">0</span> ? <span class=\"literal\">1</span> : <span class=\"punctuation\">-</span><span class=\"literal\">1</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathSign<span class=\"punctuation\">(</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"> // <span class=\"literal\">1</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathSign<span class=\"punctuation\">(</span><span class=\"literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span>  <span class=\"comment\"> // <span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathSign<span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">0</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">0</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathSign<span class=\"punctuation\">(</span><span class=\"punctuation\">-</span><span class=\"literal\">7</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"comment\"> // <span class=\"punctuation\">-</span><span class=\"literal\">1</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>mathSign<span class=\"punctuation\">(</span>NaN<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"comment\"> // NaN</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"PromiseUsage\" class=\"showcase showcase_PromiseUsage\">    <div class=\"title\">Promises</div>\n    <div class=\"subtitle\">Promise Usage</div>\n    <div class=\"desc\">First class representation of a value that may be made asynchronously and be available in the future.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> msgAfterTimeout <span class=\"punctuation\">(</span>msg<span class=\"punctuation\">,</span> who<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"keyword\">new</span> Promise</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"mark\">resolve</span><span class=\"punctuation\">,</span> reject<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        setTimeout<span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"mark\">resolve</span><span class=\"punctuation\">(</span><span class=\"literal\">`$<span class=\"punctuation\">{</span>msg<span class=\"punctuation\">}</span> Hello $<span class=\"punctuation\">{</span>who<span class=\"punctuation\">}</span>!`</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nmsgAfterTimeout<span class=\"punctuation\">(</span><span class=\"literal\">\"\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"Foo\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span><span class=\"mark\">then</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>msg<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span>\n    msgAfterTimeout<span class=\"punctuation\">(</span>msg<span class=\"punctuation\">,</span> <span class=\"literal\">\"Bar\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">200</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">)</span><span class=\"punctuation\">.</span><span class=\"mark\">then</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>msg<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">`done after 300ms:$<span class=\"punctuation\">{</span>msg<span class=\"punctuation\">}</span>`</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> msgAfterTimeout <span class=\"punctuation\">(</span>msg<span class=\"punctuation\">,</span> who<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">,</span> <span class=\"mark\">onDone</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    setTimeout<span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        <span class=\"mark\">onDone</span><span class=\"punctuation\">(</span>msg <span class=\"punctuation\">+</span> <span class=\"literal\">\" Hello \"</span> <span class=\"punctuation\">+</span> who <span class=\"punctuation\">+</span> <span class=\"literal\">\"!\"</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\nmsgAfterTimeout<span class=\"punctuation\">(</span><span class=\"literal\">\"\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"Foo\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">100</span><span class=\"mark\"><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>msg<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    msgAfterTimeout<span class=\"punctuation\">(</span>msg<span class=\"punctuation\">,</span> <span class=\"literal\">\"Bar\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">200</span><span class=\"mark\"><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span></span> <span class=\"punctuation\">(</span>msg<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"done after 300ms:\"</span> <span class=\"punctuation\">+</span> msg<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"PromiseCombination\" class=\"showcase showcase_PromiseCombination\">    <div class=\"title\">Promises</div>\n    <div class=\"subtitle\">Promise Combination</div>\n    <div class=\"desc\">Combine one or more promises into new promises without having to take\ncare of ordering of the underlying asynchronous operations yourself.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> fetchAsync <span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">,</span> onData<span class=\"punctuation\">,</span> onError<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">let</span> fetchPromised<span class=\"punctuation\"> = </span><span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">return</span> <span class=\"mark\"><span class=\"keyword\">new</span> Promise</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span><span class=\"mark\">resolve</span><span class=\"punctuation\">,</span> <span class=\"mark\">reject</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n        fetchAsync<span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">,</span> <span class=\"mark\">resolve</span><span class=\"punctuation\">,</span> <span class=\"mark\">reject</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"mark\">Promise<span class=\"punctuation\">.</span>all</span><span class=\"punctuation\">(</span><span class=\"punctuation\">[</span>\n    fetchPromised<span class=\"punctuation\">(</span><span class=\"literal\">\"http://backend/foo<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n    fetchPromised<span class=\"punctuation\">(</span><span class=\"literal\">\"http://backend/bar<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">500</span><span class=\"punctuation\">)</span><span class=\"punctuation\">,</span>\n    fetchPromised<span class=\"punctuation\">(</span><span class=\"literal\">\"http://backend/baz<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">500</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">]</span><span class=\"punctuation\">)</span><span class=\"punctuation\">.</span><span class=\"mark\">then</span><span class=\"punctuation\">(</span><span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">let</span> <span class=\"punctuation\">[</span> foo<span class=\"punctuation\">,</span> bar<span class=\"punctuation\">,</span> baz <span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>data<span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">`success: foo=$<span class=\"punctuation\">{</span>foo<span class=\"punctuation\">}</span> bar=$<span class=\"punctuation\">{</span>bar<span class=\"punctuation\">}</span> baz=$<span class=\"punctuation\">{</span>baz<span class=\"punctuation\">}</span>`</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span> <span class=\"punctuation\">=&gt;</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">`error: $<span class=\"punctuation\">{</span>err<span class=\"punctuation\">}</span>`</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">function</span> fetchAsync <span class=\"punctuation\">(</span>url<span class=\"punctuation\">,</span> timeout<span class=\"punctuation\">,</span> onData<span class=\"punctuation\">,</span> onError<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"ellipsis\">&hellip;</span>\n<span class=\"punctuation\">}</span>\n<span class=\"keyword\">function</span> <span class=\"mark\">fetchAll</span> <span class=\"punctuation\">(</span>request<span class=\"punctuation\">,</span> onData<span class=\"punctuation\">,</span> onError<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">var</span> result<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> results<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"semi\">;</span>\n    <span class=\"keyword\">for</span> <span class=\"punctuation\">(</span><span class=\"keyword\">var</span> i<span class=\"punctuation\"> = </span><span class=\"literal\">0</span><span class=\"punctuation\">;</span> i <span class=\"punctuation\">&lt;</span> request<span class=\"punctuation\">.</span>length<span class=\"punctuation\">;</span> i<span class=\"punctuation\">+</span><span class=\"punctuation\">+</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n        result<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>null<span class=\"semi\">;</span>\n        <span class=\"punctuation\">(</span><span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n            fetchAsync<span class=\"punctuation\">(</span>request<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>url<span class=\"punctuation\">,</span> request<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\">.</span>timeout<span class=\"punctuation\">,</span> <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n                <span class=\"mark\">result<span class=\"punctuation\">[</span>i<span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span>data</span><span class=\"semi\">;</span>\n                <span class=\"mark\"><span class=\"keyword\">if</span> <span class=\"punctuation\">(</span><span class=\"punctuation\">+</span><span class=\"punctuation\">+</span>results <span class=\"punctuation\">===</span> request<span class=\"punctuation\">.</span>length<span class=\"punctuation\">)</span></span>\n                    <span class=\"mark\">onData<span class=\"punctuation\">(</span>result<span class=\"punctuation\">)</span></span><span class=\"semi\">;</span>\n            <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> onError<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n        <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"punctuation\">(</span>i<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span>\n<span class=\"mark\">fetchAll</span><span class=\"punctuation\">(</span><span class=\"punctuation\">[</span>\n    <span class=\"punctuation\">{</span> url: <span class=\"literal\">\"http://backend/foo<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> timeout: <span class=\"literal\">500</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> url: <span class=\"literal\">\"http://backend/bar<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> timeout: <span class=\"literal\">500</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">,</span>\n    <span class=\"punctuation\">{</span> url: <span class=\"literal\">\"http://backend/baz<span class=\"punctuation\">.</span>txt\"</span><span class=\"punctuation\">,</span> timeout: <span class=\"literal\">500</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>data<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    <span class=\"keyword\">var</span> foo<span class=\"punctuation\"> = </span>data<span class=\"punctuation\">[</span><span class=\"literal\">0</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> bar<span class=\"punctuation\"> = </span>data<span class=\"punctuation\">[</span><span class=\"literal\">1</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> baz<span class=\"punctuation\"> = </span>data<span class=\"punctuation\">[</span><span class=\"literal\">2</span><span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"success: foo=\"</span> <span class=\"punctuation\">+</span> foo <span class=\"punctuation\">+</span> <span class=\"literal\">\" bar=\"</span> <span class=\"punctuation\">+</span> bar <span class=\"punctuation\">+</span> <span class=\"literal\">\" baz=\"</span> <span class=\"punctuation\">+</span> baz<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">,</span> <span class=\"keyword\">function</span> <span class=\"punctuation\">(</span>err<span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n    console<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span><span class=\"literal\">\"error: \"</span> <span class=\"punctuation\">+</span> err<span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"Proxying\" class=\"showcase showcase_Proxying\">    <div class=\"title\">Meta-Programming</div>\n    <div class=\"subtitle\">Proxying</div>\n    <div class=\"desc\">Hooking into runtime-level object meta-operations.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> target<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span>\n    foo: <span class=\"literal\">\"Welcome<span class=\"punctuation\">,</span> foo\"</span>\n<span class=\"punctuation\">}</span><span class=\"semi\">;</span>\n<span class=\"keyword\">let</span> proxy<span class=\"punctuation\"> = </span><span class=\"mark\"><span class=\"keyword\">new</span> Proxy</span><span class=\"punctuation\">(</span><span class=\"mark\">target</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span>\n    <span class=\"mark\">get <span class=\"punctuation\">(</span>receiver<span class=\"punctuation\">,</span> name<span class=\"punctuation\">)</span></span> <span class=\"punctuation\">{</span>\n        <span class=\"keyword\">return</span> name <span class=\"keyword\">in</span> receiver ? receiver<span class=\"punctuation\">[</span>name<span class=\"punctuation\">]</span> : <span class=\"literal\">`Hello<span class=\"punctuation\">,</span> $<span class=\"punctuation\">{</span>name<span class=\"punctuation\">}</span>`</span><span class=\"semi\">;</span>\n    <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nproxy<span class=\"punctuation\">.</span>foo   <span class=\"punctuation\">===</span> <span class=\"literal\">\"Welcome<span class=\"punctuation\">,</span> foo\"</span><span class=\"semi\">;</span>\nproxy<span class=\"punctuation\">.</span><span class=\"mark\">world</span> <span class=\"punctuation\">===</span> <span class=\"literal\">\"Hello<span class=\"punctuation\">,</span> <span class=\"mark\">world</span>\"</span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"Reflection\" class=\"showcase showcase_Reflection\">    <div class=\"title\">Meta-Programming</div>\n    <div class=\"subtitle\">Reflection</div>\n    <div class=\"desc\">Make calls corresponding to the object meta-operations.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">let</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> a: <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nObject<span class=\"punctuation\">.</span>defineProperty<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">,</span> <span class=\"literal\">\"b\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> value: <span class=\"literal\">2</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nobj<span class=\"punctuation\">[</span>Symbol<span class=\"punctuation\">(</span><span class=\"literal\">\"c\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">]</span><span class=\"punctuation\"> = </span><span class=\"literal\">3</span><span class=\"semi\">;</span>\n<span class=\"mark\">Reflect<span class=\"punctuation\">.</span>ownKeys</span><span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"a\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"b\"</span><span class=\"punctuation\">,</span> Symbol<span class=\"punctuation\">(</span>c<span class=\"punctuation\">)</span> <span class=\"punctuation\">]</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> obj<span class=\"punctuation\"> = </span><span class=\"punctuation\">{</span> a: <span class=\"literal\">1</span> <span class=\"punctuation\">}</span><span class=\"semi\">;</span>\nObject<span class=\"punctuation\">.</span>defineProperty<span class=\"punctuation\">(</span>obj<span class=\"punctuation\">,</span> <span class=\"literal\">\"b\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> value: <span class=\"literal\">2</span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\">\n// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span>\n<span class=\"mark\">Object<span class=\"punctuation\">.</span>getOwnPropertyNames</span><span class=\"punctuation\">(</span>obj<span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"a\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"b\"</span> <span class=\"punctuation\">]</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"Collation\" class=\"showcase showcase_Collation\">    <div class=\"title\">Internationalization & Localization</div>\n    <div class=\"subtitle\">Collation</div>\n    <div class=\"desc\">Sorting a set of strings and searching within a set of strings.\nCollation is parameterized by locale and aware of Unicode.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// <span class=\"keyword\">in</span> German<span class=\"punctuation\">,</span>  <span class=\"literal\">\"ä\"</span> sorts with <span class=\"literal\">\"a\"</span></span><span class=\"comment\">\n// <span class=\"keyword\">in</span> Swedish<span class=\"punctuation\">,</span> <span class=\"literal\">\"ä\"</span> sorts after <span class=\"literal\">\"z\"</span></span>\n<span class=\"keyword\">var</span> list<span class=\"punctuation\"> = </span><span class=\"punctuation\">[</span> <span class=\"mark\"><span class=\"literal\">\"ä\"</span></span><span class=\"punctuation\">,</span> <span class=\"literal\">\"a\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"z\"</span> <span class=\"punctuation\">]</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nDE<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>Collator<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"de\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nSV<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>Collator<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"sv\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nDE<span class=\"punctuation\">.</span>compare<span class=\"punctuation\">(</span><span class=\"literal\">\"ä\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"z\"</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"punctuation\">-</span><span class=\"literal\">1</span></span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nSV<span class=\"punctuation\">.</span>compare<span class=\"punctuation\">(</span><span class=\"literal\">\"ä\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"z\"</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"punctuation\">+</span><span class=\"literal\">1</span></span><span class=\"semi\">;</span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>list<span class=\"punctuation\">.</span>sort<span class=\"punctuation\">(</span>l<span class=\"literal\">10</span>nDE<span class=\"punctuation\">.</span>compare<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"a\"</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"literal\">\"ä\"</span></span><span class=\"punctuation\">,</span> <span class=\"literal\">\"z\"</span> <span class=\"punctuation\">]</span></span>\nconsole<span class=\"punctuation\">.</span>log<span class=\"punctuation\">(</span>list<span class=\"punctuation\">.</span>sort<span class=\"punctuation\">(</span>l<span class=\"literal\">10</span>nSV<span class=\"punctuation\">.</span>compare<span class=\"punctuation\">)</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span><span class=\"comment\"> // <span class=\"punctuation\">[</span> <span class=\"literal\">\"a\"</span><span class=\"punctuation\">,</span> <span class=\"literal\">\"z\"</span><span class=\"punctuation\">,</span> <span class=\"mark\"><span class=\"literal\">\"ä\"</span></span> <span class=\"punctuation\">]</span></span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"NumberFormatting\" class=\"showcase showcase_NumberFormatting\">    <div class=\"title\">Internationalization & Localization</div>\n    <div class=\"subtitle\">Number Formatting</div>\n    <div class=\"desc\">Format numbers with digit grouping and localized separators.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nEN<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>NumberFormat<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"en<span class=\"punctuation\">-</span>US\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nDE<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>NumberFormat<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"de<span class=\"punctuation\">-</span>DE\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nEN<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"literal\">1234567</span><span class=\"punctuation\">.</span><span class=\"literal\">89</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"1<span class=\"punctuation\">,</span>234<span class=\"punctuation\">,</span>567<span class=\"punctuation\">.</span>89\"</span></span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nDE<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"literal\">1234567</span><span class=\"punctuation\">.</span><span class=\"literal\">89</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"1<span class=\"punctuation\">.</span>234<span class=\"punctuation\">.</span>567<span class=\"punctuation\">,</span>89\"</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"CurrencyFormatting\" class=\"showcase showcase_CurrencyFormatting\">    <div class=\"title\">Internationalization & Localization</div>\n    <div class=\"subtitle\">Currency Formatting</div>\n    <div class=\"desc\">Format numbers with digit grouping, localized separators and attached currency symbol.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nUSD<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>NumberFormat<span class=\"punctuation\">(</span><span class=\"literal\">\"en<span class=\"punctuation\">-</span>US\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> style: <span class=\"literal\">\"currency\"</span><span class=\"punctuation\">,</span> currency: <span class=\"mark\"><span class=\"literal\">\"USD\"</span></span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nGBP<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>NumberFormat<span class=\"punctuation\">(</span><span class=\"literal\">\"en<span class=\"punctuation\">-</span>GB\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> style: <span class=\"literal\">\"currency\"</span><span class=\"punctuation\">,</span> currency: <span class=\"mark\"><span class=\"literal\">\"GBP\"</span></span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nEUR<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>NumberFormat<span class=\"punctuation\">(</span><span class=\"literal\">\"de<span class=\"punctuation\">-</span>DE\"</span><span class=\"punctuation\">,</span> <span class=\"punctuation\">{</span> style: <span class=\"literal\">\"currency\"</span><span class=\"punctuation\">,</span> currency: <span class=\"mark\"><span class=\"literal\">\"EUR\"</span></span> <span class=\"punctuation\">}</span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nUSD<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"literal\">100200300</span><span class=\"punctuation\">.</span><span class=\"literal\">40</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"$100<span class=\"punctuation\">,</span>200<span class=\"punctuation\">,</span>300<span class=\"punctuation\">.</span>40\"</span></span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nGBP<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"literal\">100200300</span><span class=\"punctuation\">.</span><span class=\"literal\">40</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"£100<span class=\"punctuation\">,</span>200<span class=\"punctuation\">,</span>300<span class=\"punctuation\">.</span>40\"</span></span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nEUR<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"literal\">100200300</span><span class=\"punctuation\">.</span><span class=\"literal\">40</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"100<span class=\"punctuation\">.</span>200<span class=\"punctuation\">.</span>300<span class=\"punctuation\">,</span>40 €\"</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n<div id=\"DateTimeFormatting\" class=\"showcase showcase_DateTimeFormatting\">    <div class=\"title\">Internationalization & Localization</div>\n    <div class=\"subtitle\">Date/Time Formatting</div>\n    <div class=\"desc\">Format date/time with localized ordering and separators.</div>\n<div class=\"js es6\">\n    <div class=\"title\"><b>ECMAScript 6</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nEN<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>DateTimeFormat<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"en<span class=\"punctuation\">-</span>US\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\n<span class=\"keyword\">var</span> l<span class=\"literal\">10</span>nDE<span class=\"punctuation\"> = </span><span class=\"keyword\">new</span> Intl<span class=\"punctuation\">.</span>DateTimeFormat<span class=\"punctuation\">(</span><span class=\"mark\"><span class=\"literal\">\"de<span class=\"punctuation\">-</span>DE\"</span></span><span class=\"punctuation\">)</span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nEN<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"keyword\">new</span> Date<span class=\"punctuation\">(</span><span class=\"literal\">\"2015<span class=\"punctuation\">-</span>01<span class=\"punctuation\">-</span>02\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"1/2/2015\"</span></span><span class=\"semi\">;</span>\nl<span class=\"literal\">10</span>nDE<span class=\"punctuation\">.</span>format<span class=\"punctuation\">(</span><span class=\"keyword\">new</span> Date<span class=\"punctuation\">(</span><span class=\"literal\">\"2015<span class=\"punctuation\">-</span>01<span class=\"punctuation\">-</span>02\"</span><span class=\"punctuation\">)</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">===</span> <span class=\"mark\"><span class=\"literal\">\"2<span class=\"punctuation\">.</span>1<span class=\"punctuation\">.</span>2015\"</span></span><span class=\"semi\">;</span>\n</div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-check-circle\"></i>\n</div>\n    <div class=\"arrow\"><i class=\"fa fa-caret-up\"></i><i class=\"fa fa-caret-down\"></i></div><div class=\"js es5\">\n    <div class=\"title\"><b>ECMAScript 5</b> &mdash; syntactic sugar: <span class=\"style reduced\">reduced</span> | <span class=\"style traditional\">traditional</span></div>\n    <div class=\"code\"><span class=\"comment\">// no equivalent <span class=\"keyword\">in</span> ES<span class=\"literal\">5</span></span></div>\n    <i class=\"icon fa fa-circle\"></i>\n    <i class=\"icon fa fa-times-circle\"></i>\n</div>\n</div>\n\n            <!-- ATTENTION: END OF GENERATED CODE. DO NOT EDIT MANUALLY -->\n        </div>\n        <div class=\"foot\">\n            <div class=\"text\">\n                Copyright &copy; 2015-2017 <a href=\"http://engelschall.com/\">Ralf S. Engelschall</a> &nbsp; <i class=\"fa fa-twitter-square\"></i> <a href=\"http://twitter.com/engelschall\">@engelschall</a><br/>\n                Fully generated from a <a href=\"https://github.com/rse/es6-features/blob/gh-pages/features.txt\">single source</a><br/>\n                Licensed under <a href=\"https://github.com/rse/es6-features/blob/gh-pages/LICENSE.txt\">MIT License</a>.\n            </div>\n        </div>\n    </body>\n</html>\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 4.05859375,
          "content": "/*\n**  es6-features -- ECMAScript 6 Feature Overview & Comparison\n**  Copyright (c) 2015-2017 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function ($) {\n    $(document).ready(function () {\n        /*  support switching between reduced and traditional semicolon style  */\n        $(\".content .js.es6\").addClass(\"reduced\")\n        $(\".content .js.es5\").addClass(\"traditional\")\n        $(\".content .js .title .style\").click(function (ev) {\n            var id = $(ev.target).text()\n            var type = $(ev.target).parent().parent().hasClass(\"es5\") ? \"es5\" : \"es6\"\n            $(\".content .js.\" + type)\n                .removeClass(\"reduced\")\n                .removeClass(\"traditional\")\n                .addClass(id)\n        })\n\n        /*  support navigation item selection  */\n        $(\".showcase\").css(\"display\", \"none\")\n        $(\".showcase:first\").css(\"display\", \"block\")\n        $(\"li.subtitle:first\").addClass(\"selected\")\n        $(\".nav a\").click(function (ev) {\n            var id = $(ev.target).attr(\"href\").replace(/^#/, \"\")\n            $(\".showcase\").css(\"display\", \"none\")\n            $(\".showcase_\" + id).css(\"display\", \"block\")\n            $(\"li.subtitle\").removeClass(\"selected\")\n            $(\"li.subtitle_\" + id).addClass(\"selected\")\n            var c  = $(\".nav\")\n            var ch = c.height()\n            var cs = c.scrollTop()\n            var e = $(\".nav li.subtitle.selected\")\n            var ep = e.parent().position().top + e.position().top\n            var eh = e.height()\n            if (ep < cs)\n                c.scrollTop(Math.max(0, ep - eh))\n            else if (ep > cs+ch)\n                c.scrollTop(Math.max(0, (ep + 4*eh) - ch))\n        })\n\n        /*  support navigation via cursor keys  */\n        var ids = []\n        $(\"li.subtitle a\").each(function () {\n            ids.push($(this).attr(\"href\").replace(/^#/, \"\"))\n        })\n        Mousetrap.bind([ \"up\", \"pageup\" ], function (e) {\n            var id = $(\"li.subtitle.selected a\").attr(\"href\").replace(/^#/, \"\")\n            var idx = ids.indexOf(id)\n            if (idx > 0)\n                window.location.hash = \"#\" + ids[idx - 1]\n        })\n        Mousetrap.bind([ \"down\", \"pagedown\" ], function (e) {\n            var id = $(\"li.subtitle.selected a\").attr(\"href\").replace(/^#/, \"\")\n            var idx = ids.indexOf(id)\n            if (idx < ids.length - 1)\n                window.location.hash = \"#\" + ids[idx + 1]\n        })\n\n        /*  support URL based routing and this way deep-linking  */\n        var dispatch = function (id) {\n            if (id === \"modernized\")\n                id = \"reduced\"\n            if (id === \"reduced\" || id === \"traditional\")\n                $(\".content .js\").removeClass(\"traditional\").removeClass(\"reduced\").addClass(id)\n            else\n                $(\"li.subtitle a[href='#\" + id + \"']\").trigger(\"click\")\n        }\n        var router = new Router()\n        router.on(\"(.+)\", dispatch)\n        router.configure({ delimiter: \"/\" })\n        router.init(\"Constants\")\n        dispatch(router.getRoute(0))\n    })\n})(jQuery)\n\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7001953125,
          "content": "{\n    \"name\": \"es6-features\",\n    \"devDependencies\": {\n        \"grunt\":                      \"~1.0.1\",\n        \"grunt-cli\":                  \"~1.2.0\",\n        \"grunt-contrib-clean\":        \"~1.1.0\",\n        \"grunt-contrib-copy\":         \"~1.0.0\",\n        \"babel-cli\":                  \"~6.26.0\",\n        \"babel\":                      \"~6.23.0\",\n        \"babel-preset-es2015\":        \"~6.24.1\"\n    },\n    \"dependencies\": {\n        \"normalize.css\":              \"~7.0.0\",\n        \"typopro-web\":                \"~3.7.6\",\n        \"font-awesome\":               \"~4.7.0\",\n        \"director\":                   \"~1.2.8\",\n        \"jquery\":                     \"~3.2.1\",\n        \"mousetrap\":                  \"~1.6.1\"\n    }\n}\n"
        }
      ]
    }
  ]
}