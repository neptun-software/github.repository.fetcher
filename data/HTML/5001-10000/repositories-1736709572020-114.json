{
  "metadata": {
    "timestamp": 1736709572020,
    "page": 114,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "una/CSSgram",
      "stars": 5394,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.02734375,
          "content": "node_modules/\nassets/\n.dev/\n"
        },
        {
          "name": ".publish",
          "type": "commit",
          "content": null
        },
        {
          "name": ".stylelintrc",
          "type": "blob",
          "size": 1.18359375,
          "content": "{\n    \"plugins\": [\n        \"stylelint-scss\",\n        \"stylelint-declaration-block-order\"\n    ],\n    \"rules\": {\n        number-leading-zero: never,\n        value-list-comma-space-after: always,\n        declaration-colon-space-after: always,\n        declaration-colon-space-before: never,\n        declaration-block-no-duplicate-properties: true,\n        declaration-block-no-ignored-properties: true,\n        declaration-block-no-redundant-longhand-properties: true,\n        declaration-block-semicolon-newline-after: always,\n        declaration-block-single-line-max-declarations: 1,\n        declaration-block-trailing-semicolon: always,\n        block-closing-brace-empty-line-before: never,\n        block-no-empty: true,\n        block-opening-brace-newline-after: always-multi-line,\n        block-opening-brace-space-before: always-single-line,\n        at-rule-name-case: lower,\n        comment-empty-line-before: always,\n        comment-no-empty: true,\n        comment-whitespace-inside: always,\n        indentation: 2,\n        max-nesting-depth: 3,\n        no-duplicate-selectors: true,\n        no-eol-whitespace: true,\n        no-extra-semicolons: true,\n        no-invalid-double-slash-comments: true\n    }\n}\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5625,
          "content": "# Contributing\n\nContributions are **welcome**!\n\n## Procedure 1\n\n1. Look if there is an existing [issue](https://github.com/una/CSSgram/issues) for your case. \n2. If there isn't an existing issue, then create one.\n\n## Procedure 2\n\n1. Fork this repository\n2. Clone the fork onto your system\n3. `npm install` dependencies (must have Node installed)\n4. Run `gulp` which starts dev server, watches and does compilations to .dev folder\n**In master:**\n**gulp build**: does compilation, files are generated in the respective folders\n**gulp server**: starts server in root to view compiled files after master build\n5. Make changes (e.g. edit the .scss file related to the filter) and check the test site with your changes (see file structure outline below)\n6. Submit a PR referencing the issue with a smile :smile:\n\nFilters are really fun to create! Reference photos created by [Miles Croxford](https://twitter.com/milescroxford) can be found [here](https://instagram.com/cssgram/).\n\n## File Structure Outline\n\n- `source/css/cssgram.css` contains each of the CSS classes you can apply to your `<img>` to give it the filter. You should use `source/css/cssgram.min.css` for production if you want access to all of the library\n- `source/scss/` contains the source files for individual classes and placeholder selectors you can use to extend CSS classes in Sass\n- `site/` is the public facing website\n- `site/test` is how you test filters if you're developing, remember to change `is_done` for the filter you are creating in `site/filters.json`.\n\nNote: This will also have mixin options and a PostCSS Component.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Una Kravets\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README-CN.md",
          "type": "blob",
          "size": 7.3759765625,
          "content": "![](http://una.im/CSSgram/img/cssgram-logo.png)\n\n# CSSgram\n\n一个支持Instagram 滤镜库的 Sass/CSS框架,\n## 这是什么？\n\n简单来说，CSSgram 是一个直接使用CSS以类似Instagram的滤镜库来修改您的图片的库。我们所做的就是通过改变各种各样的[混合模式](http://www.w3cplus.com/css3/basics-css-blend-modes.html)颜色或者渐变所产生的效果运用到图片上。这也就减少手工图片处理，以及提供更多的有趣的网上的效果。\n\n我们使用伪类(i.e,`::before` and  `::after`)创建滤镜效果，这样你必须在img 外面包裹一层标签，我们建议你使用`figure`标签进行去包裹你的图片。\n\n\n## 浏览器支持\n\n我们使用了 [CSS Filters](https://developer.mozilla.org/en-US/docs/Web/CSS/filter) 以及 [CSS Blend Modes](https://css-tricks.com/basics-css-blend-modes/). 浏览器的支持如下:\n\n| <img src=\"http://i.imgur.com/dJC1GUv.png\" width=\"48px\" height=\"48px\" alt=\"Chrome logo\"> | <img src=\"http://i.imgur.com/o1m5RcQ.png\" width=\"48px\" height=\"48px\" alt=\"Firefox logo\"> | <img src=\"http://i.imgur.com/8h3iz5H.png\" width=\"48px\" height=\"48px\" alt=\"Internet Explorer logo\"> | <img src=\"http://i.imgur.com/kQ1e7Mk.png\" width=\"45px\" height=\"45px\" alt=\"Edge logo\"> | <img src=\"http://i.imgur.com/iQV4nmJ.png\" width=\"48px\" height=\"48px\" alt=\"Opera logo\"> | <img src=\"http://i.imgur.com/j3tgNKJ.png\" width=\"48px\" height=\"48px\" alt=\"Safari logo\"> |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| 43+ ✔ | 38+ ✔ | Nope ✘ |  13 ✔ | 32+ ✔ | 8+ ✔ |\n\n你可以在这里看到最新的浏览器的支持 [Can I Use](http://caniuse.com/#feat=css-filters).\n\n## 如何使用\n\n**你可以使用下面两种方法来使用CSSgram:**\n\n### 使用 CSS Class\n\n使用`class`你可以轻松给你的图片添加各式各样的滤镜\n\n1  使用css 外链\n``` bash\n<link rel=\"stylesheet\" href=\"https://cssgram-cssgram.netdna-ssl.com/cssgram.min.css\">\n```\n\n*你也可直接下载压缩的[CSS文件](https://raw.githubusercontent.com/una/CSSgram/master/source/css/cssgram.min.css) 。\n\n 然后本地引用:\n`<link rel=\"stylesheet\" href=\"css/vendor/cssgram.min.css\">\n`\n\n然后在你的元素添加class即可生效\n\n案例:\n\n``` html\n<!-- HTML -->\n<figure class=\"aden\">\n  <img src=\"../img.png\">\n</figure>\n```\n接着，引入外部样式(e.g. `<link rel=\"stylesheet\" href=\"css/vendor/aden.min.css\">`)\n\n### 目前提供的滤镜\n\n你可以在html中直接使用:\n\n*   Aden: `class=\"aden\"`\n*   Reyes: `class=\"reyes\"`\n*   Perpetua: `class=\"perpetua\"`\n*   Inkwell: `class=\"inkwell\"`\n*   Toaster: `class=\"toaster\"`\n*   Walden: `class=\"walden\"`\n*   Hudson: `class=\"hudson\"`\n*   Gingham: `class=\"gingham\"`\n*   Mayfair: `class=\"mayfair\"`\n*   Lo-fi: `class=\"lofi\"`\n*   X-Pro II: `class=\"xpro2\"`\n*   1977: `class=\"_1977\"`\n*   Brooklyn: `class=\"brooklyn\"`\n*   Nashville: `class=\"nashville\"`\n*   Lark: `class=\"lark\"`\n*   Moon: `class=\"moon\"`\n*   Clarendon: `class=\"clarendon\"`\n*   Willow: `class=\"willow\"`\n\n* * *\n\n### 使用Sass `@extend` or `@mixin`\n\n如果你希望自定义你的css命名，你可以把`.scss` 文件引入到你的项目中来 。然后你可以使用`@extend`在你希望定义的样式中去使用这些滤镜。\n\n1. [下载 `scss/` 目录内容](https://github.com/una/CSSgram/tree/master/source/scss)\n*使用`@import`将文件 `scss/cssgram.scss` 引入到你的主文件中来 (i.e. `main.scss`).\n``` css\n@import 'vendor/cssgram';\n```\n*在需要的样式上进行扩展 (e.g. `@extend %aden` or 使用 mixins `@include aden()`)。\n\n比如:\n\n```html\n<!-- HTML -->\n<figure class=\"viz--beautiful\">\n  <img src=\"../img.png\">\n</figure>\n\n\n// Sass\n.viz--beautiful {\n  @extend %aden;\n}\n```\n\n或者使用 mixins (更加方便)\n\n```\n// Sass (without adding new CSS3 filters)\n.viz--beautiful {\n  @include aden();\n}\n\n// Sass (adding new CSS3 filters)\n.viz--beautiful {\n  @include aden(blur(2px) /*...*/);\n}\n```\n\n当然，如果你只用到了某一个效果，这样你也只需要引入对应`scss`文件即可(`scss/aden.scss`)。\n\n### 目前可用的效果\n\n在Scss中使用\n\n**Extends**\n\n*   Aden: `@extend %aden`\n*   Reyes: `@extend %reyes`\n*   Perpetua: `@extend %perpetua`\n*   Inkwell: `@extend %inkwell`\n*   Toaster: `@extend %toaster`\n*   Walden: `@extend %walden`\n*   Hudson: `@extend %hudson`\n*   Gingham: `@extend %gingham`\n*   Mayfair: `@extend %mayfair`\n*   Lo-fi: `@extend %lofi`\n*   X-Pro II: `@extend %xpro2`\n*   1977: `@extend %_1977`\n*   Brooklyn: `@extend %brooklyn`\n*   Nashville: `@extend %nashville`\n*   Lark: `@extend %lark`\n*   Moon: `@extend %moon`\n*   Clarendon: `@extend %clarendon`\n*   Willow: `@extend %willow`\n\n**Mixins** (你可以加入更多的css3滤镜进来)\n\n*   Aden: `@include aden()`\n*   Reyes: `@include reyes()`\n*   Perpetua: `@include perpetua()`\n*   Inkwell: `@include inkwell()`\n*   Toaster: `@include toaster()`\n*   Walden: `@include walden()`\n*   Hudson: `@include hudson()`\n*   Gingham: `@include gingham()`\n*   Mayfair: `@include mayfair()`\n*   Lo-fi: `@include lofi()`\n*   X-Pro II: `@include xpro2()`\n*   1977: `@include _1977()`\n*   Brooklyn: `@include brooklyn()`\n*   Nashville: `@include nashville()`\n*   Lark: `@include lark()`\n*   Moon: `@include moon()`\n*   Clarendon: `@include clarendon()`\n*   Willow: `@include willow()`\n\n## 如何参与进来\n\n\n\n1. 开启一个 [issue](https://github.com/una/CSSgram/issues)\n\n或者:\n\n1. Fork 这个项目\n2. Clone 你自己的 repos\n3. `npm install` 安装你自己的依赖\n4. 输入`gulp`命令进行css编译\n5. 现在你可以修改这些文件并查看效果\n6. 发起你的PR并且创建一个issue 附带上一个 :smile:\n\n下面这些效果正渴望你的加入完善:\n\n- [ ] [Amaro](https://github.com/una/CSSgram/issues/13)\n- [ ] [Ashby](https://github.com/una/CSSgram/issues/119)\n- [x] [Brannan](https://github.com/una/CSSgram/issues/120)\n- [ ] [Charmes](https://github.com/una/CSSgram/issues/22)\n- [ ] [Crema](https://github.com/una/CSSgram/issues/12)\n- [ ] [Dogpatch](https://github.com/una/CSSgram/issues/122)\n- [ ] [Ginza](https://github.com/una/CSSgram/issues/123)\n- [ ] [Hefe](https://github.com/una/CSSgram/issues/17)\n- [ ] [Helena](https://github.com/una/CSSgram/issues/124)\n- [ ] [Juno](https://github.com/una/CSSgram/issues/125)\n- [ ] [Kelvin](https://github.com/una/CSSgram/issues/20)\n- [ ] [Ludwig](https://github.com/una/CSSgram/issues/126)\n- [ ] [Maven](https://github.com/una/CSSgram/issues/127)\n- [ ] [Rise](https://github.com/una/CSSgram/issues/15)\n- [ ] [Sierra](https://github.com/una/CSSgram/issues/14)\n- [ ] [Skyline](https://github.com/una/CSSgram/issues/128)\n- [ ] [Slumber](https://github.com/una/CSSgram/issues/129)\n- [ ] [Stinsen](https://github.com/una/CSSgram/issues/21)\n- [ ] [Sutro](https://github.com/una/CSSgram/issues/19)\n- [ ] [Valencia](https://github.com/una/CSSgram/issues/16)\n- [ ] [Vesper](https://github.com/una/CSSgram/issues/130)\n\n制作这些效果是一件开心嗨皮的时期，感谢 [Miles Croxford](https://twitter.com/milescroxford) 提供的[图片] (https://instagram.com/cssgram/).\n\n## 目录结构\n\n- `source/css/cssgram.css` 包含可可以使用的滤镜的`class`;你也可以在你的生产环境中。你也可以在身长环境使用压缩的文件`source/css/cssgram.min.css`\n- `source/scss/` 包含了独立的预置滤镜用于你去扩展你的CSS classes\n- `site/` 存放的网站\n- `site/test` 用于测试的文件，如果在开发期间记得修改里面的内容\n- `is_done` 存放你自己所创建的滤镜 `site/filters.json`.\n\n注意：我们也支持mixin 选项以及PostCSS Component.。\n"
        },
        {
          "name": "README-TW.md",
          "type": "blob",
          "size": 6.587890625,
          "content": "![](http://una.im/CSSgram/img/cssgram-logo.png)\n\n# CSSgram\n\n一個使用 Sass/CSS 撰寫的 Instagram 濾鏡套件\n\n## 這是什麼\n\nCssgram 是一個使用 CSS 給圖片加上類似 Instagram 效果的濾鏡套件。我們所做的就是通過改變各種各樣的[混合模式](http://www.w3cplus.com/css3/basics-css-blend-modes.html)顏色或者漸變所產生的效果運用到圖片上。這也就意味著*使用更少的人力來做圖片處理*，以及提供更多的有趣的效果。\n\n我們使用虛擬元素 (比如 `::before` and  `::after`) 建立濾鏡效果，所以你必須在 img 外面套上一層標籤，我們建議你使用 `<figure>` 標籤來套上你的圖片。\n\n## 瀏覽器支援\n\n我們使用了 [CSS Filters](https://developer.mozilla.org/en-US/docs/Web/CSS/filter) 以及 [CSS Blend Modes](https://css-tricks.com/basics-css-blend-modes/). 瀏覽器的支援如下:\n\n| <img src=\"http://i.imgur.com/NjIVmRO.png\" width=\"48px\" height=\"48px\" alt=\"Chrome logo\"> | <img src=\"http://i.imgur.com/o1m5RcQ.png\" width=\"48px\" height=\"48px\" alt=\"Firefox logo\"> | <img src=\"http://i.imgur.com/0R5whqc.png\" width=\"48px\" height=\"48px\" alt=\"Internet Explorer logo\"> | <img src=\"http://i.imgur.com/kQ1e7Mk.png\" width=\"45px\" height=\"45px\" alt=\"Edge logo\"> | <img src=\"http://i.imgur.com/FSJB8BL.png\" width=\"48px\" height=\"48px\" alt=\"Opera logo\"> | <img src=\"http://i.imgur.com/yLwF24I.png\" width=\"48px\" height=\"48px\" alt=\"Safari logo\"> |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| 43+ ✔ | 38+ ✔ | Nope ✘ |  13 ✔ | 32+ ✔ | 8+ ✔ |\n\n你可以在這裡看到最新的瀏覽器的支援 [Can I Use](http://caniuse.com/#feat=css-filters).\n\n## 如何使用\n¼\n**你可以使用下面兩種方法來使用CSSgram:**\n\n### 使用 CSS Class\n\n使用 css `class` 你可以輕鬆給你的圖片加上各式各樣的濾鏡\n\n  1. 在你的 `<head>` 標籤中從 CDN 引入 css 資源 : `<link rel=\"stylesheet\" href=\"https://cssgram-cssgram.netdna-ssl.com/cssgram.min.css\"> `\n  * 你也可直接下載 [CSSGram](https://raw.githubusercontent.com/una/CSSgram/master/source/css/cssgram.min.css) 到本地端，並且在專案中使用: `<link rel=\"stylesheet\" href=\"css/vendor/cssgram.min.css\">`\n  * 把你想要套用的濾鏡類別套用到你的圖片元素上\n\n例如:\n\n``` html\n<!-- HTML -->\n<figure class=\"aden\">\n  <img src=\"../img.png\">\n</figure>\n```\n\n如果你只需要使用特定的濾鏡樣式，你也可以只單獨下載他們(例如 `<link rel=\"stylesheet\" href=\"css/vendor/aden.min.css\">`)\n\n### 目前提供的濾鏡\n\n你可以在 HTML 中直接使用:\n\n*   Aden: `class=\"aden\"`\n*   Brannan: `class=\"brannan\"`\n*   Reyes: `class=\"reyes\"`\n*   Perpetua: `class=\"perpetua\"`\n*   Inkwell: `class=\"inkwell\"`\n*   Toaster: `class=\"toaster\"`\n*   Walden: `class=\"walden\"`\n*   Hudson: `class=\"hudson\"`\n*   Gingham: `class=\"gingham\"`\n*   Mayfair: `class=\"mayfair\"`\n*   Lo-fi: `class=\"lofi\"`\n*   X-Pro II: `class=\"xpro2\"`\n*   1977: `class=\"_1977\"`\n*   Brooklyn: `class=\"brooklyn\"`\n*   Nashville: `class=\"nashville\"`\n*   Lark: `class=\"lark\"`\n*   Moon: `class=\"moon\"`\n*   Clarendon: `class=\"clarendon\"`\n*   Willow: `class=\"willow\"`\n*   Valencia: `class=\"valencia\"`\n*   Kelvin: `class=\"kelvin\"`\n\n* * *\n\n### 使用 Sass `@extend` or `@mixin`\n\n如果你希望自訂你的 css 命名，你可以把 `.scss` 檔引入到你的專案中來。然後你可以使用 `@extend` 在你希望定義的樣式中去使用這些濾鏡。\n\n1. [下載 `scss/` 目錄內容](https://github.com/una/CSSgram/tree/master/source/scss)\n* 使用`@import`將檔 `scss/cssgram.scss` 引入到你的主文件中來 (i.e. `main.scss`).\n``` css\n@import 'vendor/cssgram';\n```\n* 在需要的樣式上進行擴充 (e.g. `@extend %aden` or 使用 mixins `@include aden()`)。\n\n例如:\n\n```html\n<!-- HTML -->\n<figure class=\"viz--beautiful\">\n  <img src=\"../img.png\">\n</figure>\n```\n\n```sass\n// Sass\n.viz--beautiful {\n  @extend %aden;\n}\n```\n\n\n或者使用 mixins (更有彈性)\n\n```\n// Sass (without adding new CSS3 filters)\n.viz--beautiful {\n  @include aden();\n}\n\n// Sass (adding new CSS3 filters)\n.viz--beautiful {\n  @include aden(blur(2px) /*...*/);\n}\n```\n\n當然，如果你只用到了某一個效果，這樣你也只需要引入對應的 `scss` 檔案即可 (`scss/aden.scss`)。\n\n### 目前可用的效果\n\n在Sass中使用:\n\n**Extends**\n\n*   Aden: `@extend %aden`\n*   Brannan: `@extend %brannan`\n*   Reyes: `@extend %reyes`\n*   Perpetua: `@extend %perpetua`\n*   Inkwell: `@extend %inkwell`\n*   Toaster: `@extend %toaster`\n*   Walden: `@extend %walden`\n*   Hudson: `@extend %hudson`\n*   Gingham: `@extend %gingham`\n*   Mayfair: `@extend %mayfair`\n*   Lo-fi: `@extend %lofi`\n*   X-Pro II: `@extend %xpro2`\n*   1977: `@extend %_1977`\n*   Brooklyn: `@extend %brooklyn`\n*   Nashville: `@extend %nashville`\n*   Lark: `@extend %lark`\n*   Moon: `@extend %moon`\n*   Clarendon: `@extend %clarendon`\n*   Willow: `@extend %willow`\n*   Valencia: `@extend %valencia`\n*   Kelvin: `@extend %kelvin`\n\n**Mixins** (你可以加入更多的 css3 濾鏡進來)\n\n*   Aden: `@include aden()`\n*   Brannan: `@include brannan()`\n*   Reyes: `@include reyes()`\n*   Perpetua: `@include perpetua()`\n*   Inkwell: `@include inkwell()`\n*   Toaster: `@include toaster()`\n*   Walden: `@include walden()`\n*   Hudson: `@include hudson()`\n*   Gingham: `@include gingham()`\n*   Mayfair: `@include mayfair()`\n*   Lo-fi: `@include lofi()`\n*   X-Pro II: `@include xpro2()`\n*   1977: `@include _1977()`\n*   Brooklyn: `@include brooklyn()`\n*   Nashville: `@include nashville()`\n*   Lark: `@include lark()`\n*   Moon: `@include moon()`\n*   Clarendon: `@include clarendon()`\n*   Willow: `@include willow()`\n*   Valencia: `@include valencia()`\n*   Kelvin: `@include kelvin()`\n\n## 如何參與專案貢獻\n\n\n1. 開啟一個 [issue](https://github.com/una/CSSgram/issues)\n\n或者:\n\n1. Fork 這個專案\n2. Clone 你自己的 repos\n3. `npm install` 安裝相依性套件\n4. 執行 `gulp` 命令進行 css 編譯\n5. 現在你可以修改這些檔並檢視效果\n6. 發起你的 PR 並且建立一個 issue 並附上一個 :smile:\n\n製作這些效果是一件開心的事情，感謝 [Miles Croxford](https://twitter.com/milescroxford) 提供的[圖片] (https://instagram.com/cssgram/)\n\n## 目錄結構\n\n- `source/css/cssgram.css` 包含可以使用的濾鏡的 `class`，你可以在直接在你的開發環境使用，你也可以在正式環境使用壓縮過的檔案 `source/css/cssgram.min.css`\n- `source/scss/` 包含了獨立的預設濾鏡用於你去擴充你的 CSS classes\n- `site/` 存放網站\n- `site/test` 用於測試檔案，如果在開發期間記得修改裡面的內容\n- `is_done` 存放你自己所建立的濾鏡 `site/filters.json`\n\n注意：我們也支援 mixin 選項以及 PostCSS Component\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.748046875,
          "content": "![](http://una.im/CSSgram/img/cssgram-logo.png)\n\n# CSSgram\n[![CDNJS](https://img.shields.io/cdnjs/v/cssgram.svg)](https://cdnjs.com/libraries/cssgram)\n\nCSSGram is an Instagram filter library written in Sass and CSS.\n\n## What is This?\n\nSimply put, CSSgram is a library for editing your images with Instagram-like filters directly using CSS. What we're doing is adding filters to the images, as well as applying color and/or gradient overlays via various blending techniques to mimic filter effects. This means *less manual image processing* and more fun filter effects on the web!\n\nWe're using pseudo-elements (i.e. `::before` and `::after`) to create the filter effects, so you must apply these filters on a containing element (i.e. not a *replaced element* like `<img>`). The recommendation is to wrap your images in a `<figure>` tag. More about the tag [here](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure).\n\n## Browser Support\n\nThis library uses [CSS Filters](https://developer.mozilla.org/en-US/docs/Web/CSS/filter) and [CSS Blend Modes](https://css-tricks.com/basics-css-blend-modes/). These features are supported in the following browsers:\n\n| <img src=\"http://i.imgur.com/NjIVmRO.png\" width=\"48px\" height=\"48px\" alt=\"Chrome logo\"> | <img src=\"http://i.imgur.com/o1m5RcQ.png\" width=\"48px\" height=\"48px\" alt=\"Firefox logo\"> | <img src=\"http://i.imgur.com/0R5whqc.png\" width=\"48px\" height=\"48px\" alt=\"Internet Explorer logo\"> | <img src=\"http://i.imgur.com/kQ1e7Mk.png\" width=\"45px\" height=\"45px\" alt=\"Edge logo\"> | <img src=\"http://i.imgur.com/FSJB8BL.png\" width=\"48px\" height=\"48px\" alt=\"Opera logo\"> | <img src=\"http://i.imgur.com/yLwF24I.png\" width=\"48px\" height=\"48px\" alt=\"Safari logo\"> |\n|:---:|:---:|:---:|:---:|:---:|:---:|\n| 43+ ✔ | 38+ ✔ | Nope ✘ |  13 ✔ | 32+ ✔ | 8+ ✔ |\n\nFor more information, check on [Can I Use](http://caniuse.com/#feat=css-filters).\n\n## Usage\n\n**There are currently 2 ways to consume this library:**\n\n### Use CSS classes\n\nWhen using CSS classes, you can simply add the class with the filter name to the element containing your image.\n\n  1. Include the CDN link in your `<head>` tag: `<link rel=\"stylesheet\" href=\"https://cssgram-cssgram.netdna-ssl.com/cssgram.min.css\">`. We're also on [CDNJS](https://cdnjs.com/libraries/cssgram) which means another option is `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/cssgram/0.1.10/cssgram.min.css\">`\n  * Alternatively, you can [download the CSSgram library](https://raw.githubusercontent.com/una/CSSgram/master/source/css/cssgram.min.css) locally and link to the it within your project: `<link rel=\"stylesheet\" href=\"css/vendor/cssgram.min.css\">`\n  * Add a class to your image element with the name of the filter you would like to use\n\nFor example:\n\n```html\n<!-- HTML -->\n<figure class=\"aden\">\n  <img src=\"../img.png\">\n</figure>\n```\n\nAlternatively, you can just download and link to any individual css file (e.g. `<link rel=\"stylesheet\" href=\"css/vendor/aden.min.css\">`) if you're using only one of the styles.\n\n### Available Classes\n\n_For use in HTML markup:_\n\n*   1977: `class=\"_1977\"`\n*   Aden: `class=\"aden\"`\n*   Amaro: `class=\"amaro\"`\n*   Brannan: `class=\"brannan\"`\n*   Brooklyn: `class=\"brooklyn\"`\n*   Clarendon: `class=\"clarendon\"`\n*   Gingham: `class=\"gingham\"`\n*   Hudson: `class=\"hudson\"`\n*   Inkwell: `class=\"inkwell\"`\n*   Kelvin: `class=\"kelvin\"`\n*   Lark: `class=\"lark\"`\n*   Lo-fi: `class=\"lofi\"`\n*   Mayfair: `class=\"mayfair\"`\n*   Moon: `class=\"moon\"`\n*   Nashville: `class=\"nashville\"`\n*   Perpetua: `class=\"perpetua\"`\n*   Reyes: `class=\"reyes\"`\n*   Rise: `class=\"rise\"`\n*   Slumber: `class=\"slumber\"`\n*   Stinson: `class=\"stinson\"`\n*   Toaster: `class=\"toaster\"`\n*   Valencia: `class=\"valencia\"`\n*   Walden: `class=\"walden\"`\n*   Willow: `class=\"willow\"`\n*   X-Pro-2: `class=\"xpro2\"`\n\n* * *\n\n### Use Sass `@extend` or `@mixin`\n\nIf you use custom naming in your CSS architecture, you can add the `.scss` files for the provided styles within your project and then `@extend` the filter effects within your style definitions. If you think extends are stupid, I will fight you 😊.\n\n1. [Download the `scss/` folder contents](https://github.com/una/CSSgram/tree/master/source/scss)\n* Include a link to `scss/cssgram.scss` via an `@import` statement in your Sass manifest file (i.e. `main.scss`). It may look like: `@import 'vendor/cssgram'`\n* Extend the placeholder selector (e.g. `@extend %aden` or using mixins `@include aden()`) in your element.\n\nFor example:\n\n```html\n<!-- HTML -->\n<figure class=\"viz--beautiful\">\n  <img src=\"../img.png\">\n</figure>\n```\n\n```sass\n// Sass\n.viz--beautiful {\n  @extend %aden;\n}\n```\n\nor using mixins (more flexible)\n\n```\n// Sass (without adding new CSS3 filters)\n.viz--beautiful {\n  @include aden();\n}\n\n// Sass (adding new CSS3 filters)\n.viz--beautiful {\n  @include aden(blur(2px) /*...*/);\n}\n```\n\nAlternatively, if you're using only one of the styles, you can download and link any individual `.scss` file in your Sass manifest (i.e. `scss/aden.scss`).\n\n### Available Placeholders\n\n_For use in Sass stylesheets:_\n\n**Extends**\n\n*   1977: `@extend %_1977`\n*   Aden: `@extend %aden`\n*   Amaro: `@extend %amaro`\n*   Brannan: `@extend %brannan`\n*   Brooklyn: `@extend %brooklyn`\n*   Clarendon: `@extend %clarendon`\n*   Gingham: `@extend %gingham`\n*   Hudson: `@extend %hudson`\n*   Inkwell: `@extend %inkwell`\n*   Kelvin: `@extend %kelvin`\n*   Lark: `@extend %lark`\n*   Lo-fi: `@extend %lofi`\n*   Mayfair: `@extend %mayfair`\n*   Moon: `@extend %moon`\n*   Nashville: `@extend %nashville`\n*   Perpetua: `@extend %perpetua`\n*   Reyes: `@extend %reyes`\n*   Rise: `@extend %rise`\n*   Slumber: `@extend %slumber`\n*   Stinson: `@extend %stinson`\n*   Toaster: `@extend %toaster`\n*   Valencia: `@extend %valencia`\n*   Walden: `@extend %walden`\n*   Willow: `@extend %willow`\n*   X-Pro-2: `@extend %xpro2`\n\n**Mixins** (You can add more CSS3 filters as arguments)\n\n*   1977: `@include _1977()`\n*   Aden: `@include aden()`\n*   Amaro: `@include amaro()`\n*   Brannan: `@include brannan()`\n*   Brooklyn: `@include brooklyn()`\n*   Clarendon: `@include clarendon()`\n*   Gingham: `@include gingham()`\n*   Hudson: `@include hudson()`\n*   Inkwell: `@include inkwell()`\n*   Kelvin: `@include kelvin()`\n*   Lark: `@include lark()`\n*   Lo-fi: `@include lofi()`\n*   Mayfair: `@include mayfair()`\n*   Moon: `@include moon()`\n*   Nashville: `@include nashville()`\n*   Perpetua: `@include perpetua()`\n*   Reyes: `@include reyes()`\n*   Rise: `@include rise()`\n*   Slumber: `@include slumber()`\n*   Stinson: `@include stinson()`\n*   Toaster: `@include toaster()`\n*   Valencia: `@include valencia()`\n*   Walden: `@include walden()`\n*   Willow: `@include willow()`\n*   X-Pro-2: `@include xpro2()`\n\n## Contributing\n\nEither:\n\n1. Create an [issue](https://github.com/una/CSSgram/issues)\n\nOr:\n\n1. Fork this repository\n2. Clone the fork onto your system\n3. `npm install` dependencies (must have Node installed)\n4. Run `gulp` to compile CSS and the test site\n5. Make changes and check the test site with your changes (see file structure outline below)\n6. Submit a PR referencing the issue with a smile :smile:\n\nFilters are really fun to create! Reference photos created by [Miles Croxford](https://twitter.com/milescroxford) can be found [here](https://instagram.com/cssgram/).\n\n## File Structure Outline\n\n- `source/css/cssgram.css` contains each of the CSS classes you can apply to your `<img>` to give it the filter. You should use `source/css/cssgram.min.css` for production if you want access to all of the library\n- `source/scss/` contains the source files for individual classes and placeholder selectors you can use to extend CSS classes in Sass\n- `site/` is the public facing website\n- `site/test` is how you test filters if you're developing, remember to change `is_done` for the filter you are creating in `site/filters.json`.\n\nNote: This will also have mixin options and a PostCSS Component.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.490234375,
          "content": "{\n  \"name\": \"cssgram\",\n  \"description\": \"Instagram filter library in Sass and CSS.\",\n  \"main\": [\n    \"source/css/cssgram.min.css\",\n    \"source/scss/cssgram.scss\"\n  ],\n  \"authors\": [\n    \"Una Kravets\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"cssgram\",\n    \"filters\",\n    \"CSS\",\n    \"library\",\n    \"photo\",\n    \"effects\"\n  ],\n  \"homepage\": \"http://una.im/CSSgram/\",\n  \"moduleType\": [],\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\",\n    \"site\"\n  ]\n}\n"
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 3.1572265625,
          "content": "var gulp        = require('gulp'),\n    sass        = require('gulp-sass'),\n    rename      = require('gulp-rename'),\n    cssmin      = require('gulp-clean-css'),\n    concat      = require('gulp-concat'),\n    uglify      = require('gulp-uglify'),\n    cache       = require('gulp-cached'),\n    prefix      = require('gulp-autoprefixer'),\n    browserSync = require('browser-sync'),\n    reload      = browserSync.reload,\n    size        = require('gulp-size'),\n    imagemin    = require('gulp-imagemin'),\n    minifyHTML  = require('gulp-htmlmin'),\n    pngquant    = require('imagemin-pngquant'),\n    plumber     = require('gulp-plumber'),\n    deploy      = require('gulp-gh-pages'),\n    notify      = require('gulp-notify'),\n    sassLint    = require('gulp-sass-lint'),\n    twig        = require('gulp-twig');\n\n\ngulp.task('lib-scss', function() {\n    var onError = function(err) {\n      notify.onError({\n          title:    \"Gulp\",\n          subtitle: \"Failure!\",\n          message:  \"Error: <%= error.message %>\",\n          sound:    \"Beep\"\n      })(err);\n      this.emit('end');\n  };\n\n  return gulp.src('source/scss/**/*.scss')\n    .pipe(plumber({errorHandler: onError}))\n    .pipe(sass())\n    .pipe(size({ gzip: true, showFiles: true }))\n    .pipe(prefix())\n    .pipe(gulp.dest('source/css'))\n    .pipe(cssmin())\n    .pipe(size({ gzip: true, showFiles: true }))\n    .pipe(rename({ suffix: '.min' }))\n    .pipe(gulp.dest('source/css'))\n    .pipe(gulp.dest('site/css'))\n    .pipe(reload({stream:true}));\n});\n\ngulp.task('site-scss', function() {\n    var onError = function(err) {\n      notify.onError({\n          title:    \"Gulp\",\n          subtitle: \"Failure!\",\n          message:  \"Error: <%= error.message %>\",\n          sound:    \"Beep\"\n      })(err);\n      this.emit('end');\n  };\n\n  return gulp.src('site/scss/**/*.scss')\n    .pipe(plumber({errorHandler: onError}))\n    .pipe(sass())\n    .pipe(size({ gzip: true, showFiles: true }))\n    .pipe(prefix())\n    .pipe(gulp.dest('site/css'))\n    .pipe(cssmin())\n    .pipe(size({ gzip: true, showFiles: true }))\n    .pipe(rename({ suffix: '.min' }))\n    .pipe(gulp.dest('site/css'))\n    .pipe(reload({stream:true}));\n});\n\ngulp.task('browser-sync', function() {\n    browserSync({\n        server: {\n            baseDir: \"site\"\n        }\n    });\n});\n\ngulp.task('deploy', function () {\n    return gulp.src('site/**/*')\n        .pipe(deploy());\n});\n\ngulp.task('sass-lint', function () {\n  gulp.src('scss/**/*.scss')\n    .pipe(sassLint())\n    .pipe(sassLint.format())\n    .pipe(sassLint.failOnError());\n});\n\ngulp.task('twig', function () {\n  gulp.src(['site/**/*.twig', \"!site/twig/template.twig\"], {base: './'})\n    .pipe(twig({\n      data: require('./site/filters.json')\n    }))\n    .pipe(gulp.dest('./'));\n});\n\n\ngulp.task('watch', function() {\n  gulp.watch('source/scss/**/*.scss', ['lib-scss', 'site-scss', 'sass-lint']);\n  gulp.watch('site/scss/**/*.scss', ['site-scss', 'sass-lint']);\n  gulp.watch('source/scss/**/*.html', ['minify-html']);\n  gulp.watch('site/**/*.twig', ['twig']);\n});\n\n\ngulp.task('jshint', function() {\n  gulp.src('js/*.js')\n    .pipe(jshint())\n    .pipe(jshint.reporter('default'));\n});\n\ngulp.task('default', ['browser-sync', 'twig', 'lib-scss', 'site-scss', 'watch']);"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.150390625,
          "content": "{\n  \"name\": \"cssgram\",\n  \"version\": \"0.1.12\",\n  \"style\": \"source/css/cssgram.css\",\n  \"dependencies\": {},\n  \"author\": {\n    \"name\": \"Una Kravets\",\n    \"email\": \"una.kravets@gmail.com\",\n    \"url\": \"http://una.im\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": \"http://github.com/una/CSSgram\",\n  \"keywords\": [\n    \"cssgram\",\n    \"filters\",\n    \"CSS\",\n    \"library\",\n    \"photo\",\n    \"effects\"\n  ],\n  \"devDependencies\": {\n    \"browser-sync\": \"^2.16.1\",\n    \"del\": \"^2.2.2\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-autoprefixer\": \"^3.1.1\",\n    \"gulp-cached\": \"^1.1.0\",\n    \"gulp-clean-css\": \"^2.0.13\",\n    \"gulp-concat\": \"^2.6.0\",\n    \"gulp-gh-pages\": \"^0.5.4\",\n    \"gulp-htmlmin\": \"^3.0.0\",\n    \"gulp-imagemin\": \"^3.0.3\",\n    \"gulp-notify\": \"^2.2.0\",\n    \"gulp-plumber\": \"^1.1.0\",\n    \"gulp-postcss\": \"^6.2.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sass\": \"^2.3.2\",\n    \"gulp-size\": \"^2.1.0\",\n    \"gulp-stylelint\": \"^3.4.0\",\n    \"gulp-twig\": \"~0.5.0\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"imagemin-pngquant\": \"^5.0.0\",\n    \"postcss-reporter\": \"^1.4.1\",\n    \"stylelint\": \"^7.5.0\",\n    \"stylelint-declaration-block-order\": \"^0.2.0\",\n    \"stylelint-scss\": \"^1.3.4\",\n    \"run-sequence\": \"^1.2.2\"\n  }\n}\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}