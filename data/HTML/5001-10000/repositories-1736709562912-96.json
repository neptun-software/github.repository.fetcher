{
  "metadata": {
    "timestamp": 1736709562912,
    "page": 96,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "paulirish/lite-youtube-embed",
      "stars": 5981,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2451171875,
          "content": "# https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ntrim_trailing_whitespace = true\n\n# prettier custom things\nquote_type = single\nmax_line_length = 160\n\n[src/]\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.537109375,
          "content": "Copyright 2019 Paul Irish\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 1.1767578125,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>lite-youtube-embed</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"stylesheet\" href=\"./src/lite-yt-embed.css\" />\n  </head>\n  <body>\n    <h1><code>lite-youtube</code> custom element</h1>\n\n    <lite-youtube videoid=\"goiWrNiaT0I\"></lite-youtube>\n\n    <script src=\"./src/lite-yt-embed.js\"></script>\n\n    <h3>View isolated demos:</h3>\n    <ul>\n      <li><a href=\"./variants/solo.html\">lite-youtube-embed</a>\n      <li><a href=\"./variants/pe.html\">lite-youtube-embed - progressively enhanced</a>\n      <li><a href=\"./variants/custom-poster-image.html\">lite-youtube-embed - custom poster image</a>\n      <li><a href=\"./variants/params.html\">lite-youtube-embed - with parameters</a></li>\n      <li><a href=\"./variants/multiple-embeds.html\">lite-youtube-embed - multiple embeds on same page</a>\n      <li><a href=\"./variants/js-api.html\">lite-youtube-embed - with access to iframe JavaScript API</a>\n      <li><a href=\"./variants/title.html\">lite-youtube-embed - with intial title</a></li>\n      <li><a href=\"./variants/yt.html\">normal youtube embed</a>\n    </ul>\n  </body>\n</html>\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.224609375,
          "content": "{\n  \"name\": \"lite-youtube-embed\",\n  \"version\": \"0.3.3\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"lite-youtube-embed\",\n      \"version\": \"0.3.3\",\n      \"license\": \"Apache-2.0\"\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.671875,
          "content": "{\n  \"name\": \"lite-youtube-embed\",\n  \"version\": \"0.3.3\",\n  \"description\": \"A faster youtube embed.\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"src/lite-yt-embed.js\",\n  \"style\": \"src/lite-yt-embed.css\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/paulirish/lite-youtube-embed.git\"\n  },\n  \"keywords\": [\n    \"youtube\",\n    \"custom element\",\n    \"web component\"\n  ],\n  \"author\": \"Paul Irish\",\n  \"bugs\": {\n    \"url\": \"https://github.com/paulirish/lite-youtube-embed/issues\"\n  },\n  \"homepage\": \"https://github.com/paulirish/lite-youtube-embed#readme\",\n  \"readme\": \"readme.md\",\n  \"files\": [\n    \"src/**\",\n    \"package.json\",\n    \"package-lock.json\",\n    \"readme.md\"\n  ]\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 5.8330078125,
          "content": "# Lite YouTube Embed [![NPM lite-youtube-embed package](https://img.shields.io/npm/v/lite-youtube-embed.svg)](https://npmjs.org/package/lite-youtube-embed)\n\n> #### Renders faster than a sneeze.\n\nProvide videos with a supercharged focus on visual performance.\nThis custom element renders just like the real thing but approximately 224Ã— faster.\n\nDemo: https://paulirish.github.io/lite-youtube-embed/\n\n## Comparison\n\n| Normal `<iframe>` YouTube embed |  `lite-youtube` |\n|---|---|\n|  ![Screen Shot 2019-11-03 at 5 23 50 PM](https://user-images.githubusercontent.com/39191/68095560-5c930d00-fe5f-11e9-8104-e73e77a21287.png)   ![Screen Shot 2019-11-03 at 5 21 05 PM](https://user-images.githubusercontent.com/39191/68095562-5d2ba380-fe5f-11e9-8b5f-18f451b0716d.png)  ![Screen Shot 2019-11-03 at 5 19 35 PM](https://user-images.githubusercontent.com/39191/68095565-5d2ba380-fe5f-11e9-835d-85d37df71f52.png)  | ![Screen Shot 2019-11-03 at 5 23 27 PM](https://user-images.githubusercontent.com/39191/68095561-5d2ba380-fe5f-11e9-9393-e2206a64c8bf.png) ![Screen Shot 2019-11-03 at 5 20 55 PM](https://user-images.githubusercontent.com/39191/68095563-5d2ba380-fe5f-11e9-8f9a-f5c4a774cd56.png)  ![Screen Shot 2019-11-03 at 5 20 16 PM](https://user-images.githubusercontent.com/39191/68095564-5d2ba380-fe5f-11e9-908f-7e12eab8b2ad.png) |\n\n## Basic usage\n\nUse the [`lite-youtube-embed` npm package](https://www.npmjs.com/package/lite-youtube-embed) or download from this repo and use `src/`.\n\nTo use the custom element you will need to:\n\n1. Include the stylesheet within your application\n1. Include the script as well\n1. Use the `lite-youtube` tag via HTML or JS.\n1. Be happy that you're providing a better user experience to your visitors\n\n```html\n<!-- Include the CSS & JS.. (This could be direct from the package or bundled) -->\n<link rel=\"stylesheet\" href=\"node_modules/lite-youtube-embed/src/lite-yt-embed.css\" />\n\n<script src=\"node_modules/lite-youtube-embed/src/lite-yt-embed.js\"></script>\n\n<!-- Use the element. You may use it before the lite-yt-embed JS is executed. -->\n<lite-youtube videoid=\"goiWrNiaT0I\" playlabel=\"Play: Crayon Physics Deluxe - Trailer HD\"></lite-youtube>\n```\n\n<br>\n\nPrivacy note: lite-youtube uses youtube-nocookie.com instead of youtube.com in order\nto be more privacy friendly for end users.\n\n## Pro-usage: load w/ JS deferred (aka progressive enhancement)\n\nUse this as your HTML, load the script asynchronously, and let the JS progressively enhance it.\n\n```html\n<lite-youtube videoid=\"goiWrNiaT0I\" style=\"background-image: url('https://i.ytimg.com/vi/goiWrNiaT0I/hqdefault.jpg');\">\n  <a href=\"https://youtube.com/watch?v=goiWrNiaT0I\" class=\"lyt-playbtn\" title=\"Play Video\">\n    <span class=\"lyt-visually-hidden\">Play Video: Crayon Physics Deluxe - Trailer HD</span>\n  </a>\n</lite-youtube>\n```\n\n[Demo: progressive enhancement](https://paulirish.github.io/lite-youtube-embed/variants/pe.html)\n\n## Custom poster image\n\nIf you want to provide a custom poster image, just set it as the background-image, and lite-yt will not overwrite it:\n```html\n<lite-youtube videoid=\"goiWrNiaT0I\" style=\"background-image: url('https://i.ytimg.com/vi/goiWrNiaT0I/hqdefault.jpg');\"></lite-youtube>\n```\n\nUse [poster-image-availability.html](https://paulirish.github.io/lite-youtube-embed/testpage/poster-image-availability.html) to determine what poster images are available for you.\n\n## Access the YouTube Iframe Player API\n\nUse the `js-api` param: `<lite-youtube videoid=\"goiWrNiaT0I\" js-api>`.. Then you can use [IFrame Player API](https://developers.google.com/youtube/iframe_api_reference):\n\n```js\nconst player = await document.querySelector('lite-youtube').getYTPlayer();\nplayer.seekTo(15); // jump to 15 seconds\n```\n\n[Demo: Iframe Player API usage](https://paulirish.github.io/lite-youtube-embed/variants/js-api.html)\n\n## Add a video title\n\nIf you want to display a title prior to loading the full embed, set the `title` attribute:\n```html\n<lite-youtube videoid=\"goiWrNiaT0I\" title=\"Crayon Physics Deluxe - Trailer HD\"></lite-youtube>\n```\n\n[Demo: visible title](https://paulirish.github.io/lite-youtube-embed/variants/title.html)\n\n### Custom Player Parameters\n\nYouTube supports a variety of [player parameters](https://developers.google.com/youtube/player_parameters#Parameters) to control the iframe's behavior and appearance.\nThese may be applied by using the `params` attribute.\n\n```html\n<!-- Example to show a video player without controls, starting at 10s in, ending at 20s,\n     with modest branding *and* enabling the JS API -->\n<lite-youtube videoid=\"goiWrNiaT0I\" params=\"controls=0&start=10&end=30&modestbranding=2&rel=0&enablejsapi=1\"></lite-youtube>\n```\n\nNote that lite-youtube uses `autoplay=1` by default.\n\n[Demo: Custom player parameters](https://paulirish.github.io/lite-youtube-embed/variants/params.html)\n\n## Other fast YouTube embeds\n\n* &lt;lite-youtube&gt; using shadow DOM: [`justinribeiro/lite-youtube`](https://github.com/justinribeiro/lite-youtube) :+1:\n* React port 1: [`ibrahimcesar/react-lite-youtube-embed`](https://github.com/ibrahimcesar/react-lite-youtube-embed)\n* React port 2: [`kylemocode/react-lite-yt-embed`](https://github.com/kylemocode/react-lite-yt-embed)\n* React wrapper: [`@next/third-parties`](https://github.com/vercel/next.js/tree/canary/packages/third-parties#youtube-embed)\n* Vue port: [`andrewvasilchuk/vue-lazy-youtube-video`](https://github.com/andrewvasilchuk/vue-lazy-youtube-video)\n\n## Other [third-party facades](https://web.dev/third-party-facades/)\n\n* Lite Vimeo Embed: [`luwes/lite-vimeo-embed`](https://github.com/luwes/lite-vimeo-embed)\n* &lt;lite-vimeo&gt;: [`slightlyoff/lite-vimeo`](https://github.com/slightlyoff/lite-vimeo)\n* React Live Chat Loader (Intercom, Help Scout, Drift, Facebook Messenger): [`calibreapp/react-live-chat-loader`](https://github.com/calibreapp/react-live-chat-loader)\n* Intercom chat facade: [`danielbachhuber/intercom-facade/`](https://github.com/danielbachhuber/intercom-facade/)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testpage",
          "type": "tree",
          "content": null
        },
        {
          "name": "variants",
          "type": "tree",
          "content": null
        },
        {
          "name": "vercel.json",
          "type": "blob",
          "size": 0.0400390625,
          "content": "{\n  \"github\": {\n    \"silent\": true\n  }\n}\n"
        },
        {
          "name": "youtube-thumbnail-urls.md",
          "type": "blob",
          "size": 3.5068359375,
          "content": "# Lo, the youtube placeholder image!\n### (AKA the thumbnail, poster image, etc)\n\nYT thumbnails (eg https://i.ytimg.com/vi/ogfYd705cRs/sddefault.jpg) have multiple resolutions with the following widths:\n\n - `maxresdefault`: 1280px\n - `sddefault`: 640px\n - `hqdefault`: 480px (lol, naming is hard)\n - `mqdefault`: 320px\n - `default`: 120px\n\nThere is [much internet debate](https://stackoverflow.com/q/2068344/89484) on the reliability of thumbnail URLs. And indeed, not every resolution thumbnail is available for every video.\n\nThe Google I/O keynote video `ogfYd705cRs` is available in all, but the classic rickroll video (`lXMskKTw3Bc`) is missing maxresdefault. And poor ole \"because of the lactose\" `lQKdEdzHnfU` is missing the sddefault. (In many, but not all, cases, the deciding factor of having an sddefault is being published after ~2010.)\n\n## Finding the right resolution to use\n\nMany folks have given up with a silver bullet and resort to using the YouTube Data API.\n\namp-youtube also eschews using the API, so they just [try sddefault with a hqdefault fallback](https://github.com/ampproject/amphtml/blob/186d10a0adadcc8367aaa047b58598b587958946/extensions/amp-youtube/0.1/amp-youtube.js#L496-L527).\n\nI've started with using hqdefault from `i.ytimg` to optimize for origin reuse.\n\n## Annoying Youtube 404 behavior\n\nWhen YouTube serves a response for a 404 thumbnail, they serve a true 404 response code (good), however they still serve [`content-type: image/jpeg` and valid JPEG data in the response body](https://stackoverflow.com/questions/58560120/why-do-image-and-picture-elements-display-images-despite-http-status-404).  ([example](https://img.youtube.com/vi/lXMskKTw3Bc/maxresdefault.jpg)).  I assume they do this to avoid people seeing broken image icons, but unfortunately this also means you can't rely on `img.onerror`. The linked SO post and [`amp-youtube` both](https://github.com/ampproject/amphtml/blob/186d10a0adadcc8367aaa047b58598b587958946/extensions/amp-youtube/0.1/amp-youtube.js#L519-L528) use `onload` plus a `naturalWidth` check to check instead.\n\n## Aspect ratios\n\n`maxresdefault` and `mqdefault` are 30:17 (very close to 16:9, the HD standard aspect ratio).\n\n`sddefault`, `hqdefault`, `default` are 4:3.\n\nThis difference ends up being mostly unimportant, in practice. The YT iframe is a 16:9 size by default. Using `background-position: center` ensures the (possible) black bars in the 4:3 images are hidden.\n\n## WebP\n\n`https://i.ytimg.com/vi_webp/${videoid}/${width}.webp`\n\nI tested across some old and new videos and here's the best image they had available, counted:\n\n```\n  \"maxresdefault.webp (1280px)\": 178,\n  \"sddefault.webp (640px)\"     :  21,\n  \"hqdefault.webp (480px)\"     :   8,\n  \"maxresdefault.jpg (1280px)\" :   6,\n  \"sddefault.jpg (640px)\"      :   2,\n  \"hqdefault.jpg (480px)\"      :  89,\n```\n\nMy test page (with a smaller set of test videos): https://paulirish.github.io/lite-youtube-embed/testpage/poster-image-summary.html\n\nI found no cases where it a smaller size was not available. For example, if they have the maxresdefault webp, then they definitely have the sddefault webp.\n\nAll this means, it'd be very reasonable and efficient to try first for the `maxresdefault.webp`. If it isn't available (see annoying 404 behavior above), then fall back to `hqdefault.jpg`.\n\nIn lite-youtube-embed's case though, we'll default to trying the `sddefault.webp` first, as that resolution is plenty for our uses.\n\n## The best poster image for your video\n\nSee https://paulirish.github.io/lite-youtube-embed/testpage/poster-image-availability.html\n\n\n"
        }
      ]
    }
  ]
}