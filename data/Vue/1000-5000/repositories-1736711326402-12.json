{
  "metadata": {
    "timestamp": 1736711326402,
    "page": 12,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xyxiao001/vue-cropper",
      "stars": 4383,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0791015625,
          "content": "node_modules/\nnpm-debug.log\n.DS_Store\n.idea/\n.vscode/\nyarn.lock\npackage-lock.json"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.037109375,
          "content": "registry = https://registry.npmjs.org/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.974609375,
          "content": "# 更新日志\n## vue3.x组件更新日志\n### v1.1.4\n- 修复ts编译问题\n\n\n### v1.1.3\n- 修复长图缩放问题\n- 修复full场景 fillColor不生效问题\n- 修复build any type类型问题\n\n### v1.1.2\ncenterBox 缩放贴边问题修复 with LAQKing\n\n### v1.1.1\n修复部分 base64 图片长度导致展示问题\n\n\n### v1.1.0\n- 修复 exif 读取图片出错的情况\n- 新增 @imgLoadError方法返回对应错误\n### v1.0.9\n- 新增 fillCover, 导出图片背景颜色\n### v1.0.8\n- 更新特定情况固定比例问题\n### v1.0.7\n- 移除 node 版本和 npm 要求\n\n### v1.0.6\n- 添加最小截图框限制\n- 修复 ts 类型问题\n- 编译替换为 vite4.x\n### v1.0.5\n- vue3版本生命周期修复 unmounted\n### v1.0.4\n- 升级最新版本 vue 依赖和 vite 版本问题，解决 ts 类型引入问题\n### v1.0.3\n- 升级最新版本 vue 依赖和 vite 版本问题\n### v1.0.2\n- 提供 ts .d.ts 类型声明文件\n- 修复 vue3 全局使用问题\n### v1.0.1\n- 修复固定角度的部分问题\n### v1.0.1\n- 修复依赖问题\n\n### v1.0.0\n- 支持 `vue3` 版本\n\n## vue2.x组件更新日志\n### v0.6.5\n- 修复长图缩放问题\n- 修复full场景 fillColor不生效问题\n- 修复build any type类型问题\n\n### v0.6.4\n修复部分 base64 图片长度导致展示问题\n### v0.6.3\n- 修复 exif 读取图片出错的情况\n- 新增 @imgLoadError方法返回对应错误\n### v0.6.2\n- 新增 fillCover, 导出图片背景颜色\n### v0.6.1\n- 修复部分问题\n### v0.6.0\n- 移除 node 版本和 npm 要求\n### v0.59\n- 添加最小截图框限制\n### v0.58\n- 更新 sass依赖\n### v0.57\n- 更新文档\n### v0.56\n- 修复绑定事件判断出错的问题\n- 修复组件移除没有解绑滚动事件的问题\n\n### v0.55\n- 修复 ios 版本小于 13.4没有处理图片旋转的 bug\n\n### v0.54\n- 去除 log 信息\n- 修复 pc safari低版本问题\n\n### v0.53\n- 因为 chrome81 内核版本和 ios13.5 版本修复了图片旋转的 bug\n- 插件在新版浏览器默认不处理旋转了，低版本浏览器自动处理\n- https://www.chromestatus.com/feature/6313474512650240\n\n### v0.52\n- 撤回最小弹框属性, 存在弹框拖拽坐标判断的 bug\n\n### v0.51\n- 更新裁剪框最小属性，限制最小区域，可传1以上的数字和字符串，限制长宽都是这么大 也可以传数组 [90,90]\n- `limitMinSize:  [Number, Array, String]`\n\n### v0.50\n- 支持图片清空\n- 修复 ie11 ie10 不能使用问题\n- 修复 `URL.createObjectURL` 创建后没有销毁的 bug\n- 添加截图框修改触发事件\n    ```js\n    this.$emit('change-crop-size', {\n      width: this.cropW,\n      height: this.cropH\n    })\n    ```\n\n\n### v0.49\n- 修复滚轮默认事件问题\n- 修复html静态文件引入事件触发问题\n\n### v0.48\n- 修复mode 属性 contain 和cover的显示bug问题\n- 修复ios 下面base64图片跨域显示问题\n\n### v0.47\n- 修复第一次不触发预览的问题\n- 新增加图片渲染 mode 功能\n\n### v0.46\n- 修复图片旋转 bug\n- 修复显示的一些 bug\n\n### v0.45\n- 添加倍数使用 enlarge\n- 可以输出裁剪框等比例图片\n- 感谢来自于 [hzsrc](https://github.com/hzsrc) 的贡献\n- 添加预览框各种比例, 和修复图片截图小数问题\n\n### v0.44\n- 修复引入方式的问题\n- 组件内使用\n    ```js\n    import { VueCropper }  from vue-cropper \n    components: {\n      VueCropper,\n    }\n    ```\n\n- main.js里面使用\n  ```js\n  import VueCropper from vue-cropper \n  Vue.use(vueCropper)\n  ```\n\n- CDN 方式使用\n  ```js\n  <script src=\"vuecropper.js\"></script>\n  Vue.use(window['vue-cropper'])\n  ```\n### v0.43\n- 剥离 `exif` 的依赖库, 添加 `exfi-min.js` 减小代码体积  45.9k => 37k\n- `build` 升级 `webpack4` 升级\n- 添加 `vue install` 方法\n    - `npm`: Vue.use(VueCropper)\n    - `web`: Vue.use(window['vue-cropper'])\n\n### v0.42\n- 修复截图框因为去除小数点的引起的问题\n\n### v0.41\n- 修复截图框边界问题\n\n### v0.40\n- 修复 orientation 的处理方式\n- 感谢 [Felipe Mengatto](https://github.com/felipemengatto) 的贡献\n\n### v0.39\n- 修复orientation值不同带来的问题\n- 感谢 [Felipe Mengatto](https://github.com/felipemengatto) 的贡献\n\n### v0.38\n修改坐标反馈问题\n\n### v0.37\n- 修复 `centerBox` 的截图超出 1px 问题\n- 添加截图  图片移动触发事件\n\n### v0.36\n- 修复旋转自动生成截图框的错误\n- 修改 autocrop  可以动态生成截图框\n\n### v0.35\n- 修复其他图片没有压缩的问题\n\n### v0.34\n- 提供移动端崩溃的解决方案\n- 修改 `maxImgSize` 为 2000\n\n### v0.33\n- 提供移动端崩溃的解决方案\n- `maxImgSize` 限制图片最大宽度和高度 默认为 2000px\n\n### v0.32\n- 新增截图框信息展示\n- `infoTrue`\n    - `true` 为展示真实输出图片宽高\n    - `false` 展示看到的截图框宽高\n\n### v0.30\n\n- 新增获取图片坐标函数  `this.$refs.cropper.getImgAxis()`\n- 新增获取截图框坐标函数  `this.$refs.cropper.getCropAxis()`\n- 新增对高清设备的兼容  `high`\n- 新增截图框限制在图片以内的功能  `centerbox`\n- 新增自动生成截图框函数 `this.$refs.cropper.goAutoCrop`\n\n\n### v0.29\n- 新增图片加载的回调 `imgLoad`  返回结果 success,  error\n\n### v0.28\n- 修复截图框固定 截图框会影响原图移动 缩放\n\n### v0.27\n- 鼠标缩放问题优化\n- `img` `max-width` 样式优化\n- 新增属性\n    - `canMove`  是否可以移动图片   默认为是\n    - `canMoveBox` 是否可以移动截图框  默认为是\n    - `original`  是否按图片原始比例渲染  默认为否\n\n\n### v0.26\n- 修复火狐浏览器\n- 鼠标缩放问题\n\n### v0.25\n- 修复图片有可能不展示\n\n### v0.24\n- 修复ios拍照旋转 截图问题\n- 添加自动修复图片\n- 截图预览代码变更, 修改默认上传图片为 `blob` 预览\n```js\nrealTime (data) {\n  this.previews = data\n}\n```\n``` html\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px',  'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"previews.url\" :style=\"previews.img\">\n  </div>\n</div>\n```\n\n\n### v0.23\n- 小优化\n\n### v0.22\n- 新增修改图片大小函数\n- 通过` this.$refs.cropper.changeScale` 调用\n\n### v0.21\n-新增固定截图框大小fiexdBox(注： 最好搭配自动生成截图框使用)\n\n### v0.20\n- 新增输出原图比例截图 props 名 full\n- 修复缩放图片过大灵敏度问题\n\n### v0.19\n- 新增图片旋转\n- 修复mac滚轮过度灵敏\n``` js\nthis.$refs.cropper.rotateRight() // 向右边旋转 90 度\nthis.$refs.cropper.rotateLeft() // 向左边旋转 90 度\n```\n\n### v0.18\n- 修复默认生成截图框超过容器错误\n\n### v0.17\n- 修复blob数据获取错误\n\n### v0.15\n- 添加手机端手势缩放\n```\ncanScale: true\n```\n\n### v0.13\n- 添加预览\n  @realTime=\"realTime\"\n```js\n// Real time preview function\nrealTime (data) {\n  this.previews = data\n}\n```\n``` html\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px',  'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"option.img\" :style=\"previews.img\">\n  </div>\n</div>\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2017 goodboy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.94921875,
          "content": "# vue-cropper\n一个优雅的图片裁剪插件\n\n[ [查看演示 Demo](https://github.xyxiao.cn/vue-cropper/docs/vue2.html) ]  \n[ [README_english](./english.md) ]  \n[ [更新日志](./CHANGELOG.md) ]\n\n\n\n## 一、安装使用\n\n\n### 1. 安装\n\n```bash\n# npm 安装\nnpm install vue-cropper\n```\n```bash\n# yarn 安装\nyarn add vue-cropper\n```\n\n\n如果你没有使用 `npm`\n\n[在线例子vue-cropper + vue.2x](https://codepen.io/xyxiao001/pen/wxwKGz)\n\n[在线例子vue-cropper@next + vue.3x](https://codepen.io/xyxiao001/pen/yLooYKg)\n\n服务器渲染 `nuxt` 解决方案 设置为 `ssr: false`\n```js\nmodule.exports = {\n  ...\n  build: {\n    vendor: [\n      'vue-cropper\n    ...\n    plugins: [\n      { src: '~/plugins/vue-cropper', ssr: false }\n    ]\n  }\n}\n```\n\n\n### 2. 引入 Vue Cropper \n`Vue 3` 组件内引入\n```bash\nnpm install vue-cropper@next\nimport 'vue-cropper/dist/index.css'\nimport { VueCropper }  from \"vue-cropper\";\n```\n\n`Vue3` 全局引入\n```js\nimport VueCropper from 'vue-cropper'; \nimport 'vue-cropper/dist/index.css'\n\nconst app = createApp(App)\napp.use(VueCropper)\napp.mount('#app')\n```\n\n`Vue3 CDN` 方式引入\n```html\n<style type=\"text/css\" src=\"https://cdn.jsdelivr.net/npm/vue-cropper@1.0.2/dist/index.css\"></style> \n```\n\n```js\n<script src=\"https://cdn.jsdelivr.net/npm/vue@3.2.1/dist/vue.global.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/vue-cropper@1.0.2/dist/vue-cropper.umd.js\"></script>\nconst app = Vue.createApp({...});\napp.component('vue-cropper', window['vue-cropper'].VueCropper);\n```\n\n\n`Vue2` 组件内引入\n```js\nimport { VueCropper }  from 'vue-cropper' \ncomponents: {\n  VueCropper\n}\n```\n\n`Vue2` 全局引入\n```js\nimport VueCropper from 'vue-cropper'\nVue.use(VueCropper)\n```\n\n\n`Vue2 CDN` 方式引入\n```html\n<script src=\"//cdn.jsdelivr.net/npm/vue-cropper@0.4.9/dist/index.js\"></script>\n```\n```js\nVue.use(window['vue-cropper'].default)\n```\n\n\n`nuxt` 引入方式\n```js\nif(process.browser) {\n  vueCropper = require('vue-cropper')\n  Vue.use(vueCropper.default)\n}\n```\n\n### 3. 代码中使用\n\n> **重要！** 需要关掉本地的 mock 服务， 不然图片转化会报错\n> **重要！** 需要使用外层容器包裹并设置宽高\n\n```html\n<vueCropper\n  ref=\"cropper\"\n  :img=\"option.img\"\n  :outputSize=\"option.size\"\n  :outputType=\"option.outputType\"\n></vueCropper>\n```\n\n\n## 二、文档\n\n### 1. props\n\n> 目前还不知道什么原因项目里面开启 `mock` 会导致 file 报错，建议使用时关掉 `mock`\n\n\n名称 | 功能 | 默认值 | 可选值\n--- | --- | --- | ---\nimg | 裁剪图片的地址 | 空 | `url 地址`, `base64`, `blob`\noutputSize | 裁剪生成图片的质量 | `1` | 0.1 ~ 1\noutputType | 裁剪生成图片的格式 | jpg (jpg 需要传入jpeg) | `jpeg`, `png`, `webp`\ninfo | 裁剪框的大小信息 | `true` | `true`, `false`\ncanScale | 图片是否允许滚轮缩放 | `true` | `true`, `false`\nautoCrop | 是否默认生成截图框 | `false` | `true`, `false`\nautoCropWidth | 默认生成截图框宽度 | 容器的 80% | 0 ~ max\nautoCropHeight | 默认生成截图框高度 | 容器的 80% | 0 ~ max\nfixed | 是否开启截图框宽高固定比例 | `false` | `true`, `false`\nfixedNumber | 截图框的宽高比例, 开启`fixed`生效 | `[1, 1]` | `[ 宽度 ,  高度 ]`\nfull | 是否输出原图比例的截图 | `false` | `true`, `false`\nfixedBox | 固定截图框大小 | 不允许改变 | `false` | `true`, `false`\ncanMove | 上传图片是否可以移动 | `true` | `true`, `false`\ncanMoveBox | 截图框能否拖动 | `true` | `true`, `false`\noriginal | 上传图片按照原始比例渲染 | `false` | `true`, `false`\ncenterBox | 截图框是否被限制在图片里面 | `false` | `true`, `false`\nhigh | 是否按照设备的dpr 输出等比例图片 | `true` | `true`, `false`\ninfoTrue | true 为展示真实输出图片宽高 `false` 展示看到的截图框宽高 | false | `true`, `false`\nmaxImgSize | 限制图片最大宽度和高度 | `2000` | 0 ~ max\nenlarge | 图片根据截图框输出比例倍数 | `1` | 0 ~ max(建议不要太大不然会卡死的呢)\nmode | 图片默认渲染方式 | `contain` | `contain` , `cover`, `100px`, `100%` auto\nlimitMinSize | 裁剪框限制最小区域 | 10 | Number, Array, String\nfillColor | 导出时背景颜色填充 | 空 | `#ffffff`, `white`\n\n### 2. 可用回调方法\n\n- `@realTime` 实时预览事件\n- `@imgMoving`  图片移动回调函数\n- `@cropMoving` 截图框移动回调函数\n- `@imgLoad`  图片加载的回调, 返回结果 `success`,  `error`\n\n#### @realTime 实时预览事件\n```js\nrealTime(data) {\n  var previews = data\n  var h = 0.5\n  var w = 0.2\n\n  this.previewStyle1 = {\n    width: previews.w + \"px\",\n    height: previews.h + \"px\",\n    overflow: \"hidden\",\n    margin: \"0\",\n    zoom: h\n  }\n\n  this.previewStyle2 = {\n    width: previews.w + \"px\",\n    height: previews.h + \"px\",\n    overflow: \"hidden\",\n    margin: \"0\",\n    zoom: w\n  }\n\n  // 固定为 100 宽度\n  this.previewStyle3 = {\n    width: previews.w + \"px\",\n    height: previews.h + \"px\",\n    overflow: \"hidden\",\n    margin: \"0\",\n    zoom: 100 / preview.w\n  }\n\n  // 固定为 100 高度\n  this.previewStyle4 = {\n    width: previews.w + \"px\",\n    height: previews.h + \"px\",\n    overflow: \"hidden\",\n    margin: \"0\",\n    zoom: 100 / preview.h\n  }\n  this.previews = data\n}\n```\n\n```html\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px',  'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"option.img\" :style=\"previews.img\">\n  </div>\n</div>\n<p>中等大小</p>\n<div :style=\"previewStyle1\"> \n  <div :style=\"previews.div\">\n    <img :src=\"previews.url\" :style=\"previews.img\">\n  </div>\n</div>\n\n<p>迷你大小</p>\n<div :style=\"previewStyle2\"> \n  <div :style=\"previews.div\">\n    <img :src=\"previews.url\" :style=\"previews.img\">\n  </div>\n</div>\n```\n\n\n#### @imgMoving 图片移动回调函数\n\n返回的参数内容\n```js\n{\n   moving: true, // moving 是否在移动\n   axis: {\n     x1: 1, // 左上角\n     x2: 1，// 右上角\n     y1: 1，// 左下角\n     y2: 1 // 右下角\n   }\n }\n```\n\n#### @cropMoving 截图框移动回调函数\n返回的参数内容\n```js\n{\n   moving: true, // moving 是否在移动\n   axis: {\n     x1: 1, // 左上角\n     x2: 1，// 右上角\n     y1: 1，// 左下角\n     y2: 1 // 右下角\n   }\n }\n```\n\n\n### 2. 内置方法 和 属性\n通过 `this.$refs.cropper` 调用\n\n**属性**\n\n属性 | 说明\n--- | ---\nthis.$refs.cropper.cropW |  截图框宽度\nthis.$refs.cropper.cropH | 截图框高度\n\n\n**方法**\n\n方法 | 说明\n--- | ---\nthis.$refs.cropper.startCrop() | 开始截图\nthis.$refs.cropper.stopCrop() | 停止截图\nthis.$refs.cropper.clearCrop() | 清除截图\nthis.$refs.cropper.changeScale() | 修改图片大小 正数为变大 负数变小\nthis.$refs.cropper.getImgAxis() | 获取图片基于容器的坐标点\nthis.$refs.cropper.getCropAxis() | 获取截图框基于容器的坐标点\nthis.$refs.cropper.goAutoCrop | 自动生成截图框函数\nthis.$refs.cropper.rotateRight() | 向右边旋转90度\nthis.$refs.cropper.rotateLeft() | 向左边旋转90度\n\n**获取截图内容**\n\n获取截图的 base64 数据\n\n```js\nthis.$refs.cropper.getCropData(data => {\n  // do something\n  console.log(data)  \n})\n```\n\n获取截图的 blob 数据\n```js\nthis.$refs.cropper.getCropBlob(data => {\n  // do something\n  console.log(data)  \n})\n```\n\n\n\n\n\n## 三、相关文章参考\n- [shn_ui - vue-cropper ](https://shnhz.github.io/shn-ui/#/component/vue-cropper) - 野宁新之助\n- [vue全家桶开发管理后台—裁切图片](https://blog.csdn.net/qq_30632003/article/details/79639346)  - 麻球科技-菅双鹏\n- [Vue-cropper 图片裁剪的基本原理](https://www.cnblogs.com/tugenhua0707/p/8859291.html) - 龙恩0707\n- [关于昵称和头像的总结（模仿微信）](https://zhuanlan.zhihu.com/p/45746753)  - 秋晨光\n- [vue-cropper-h5](https://github.com/2277419213/vue-cropper-h5)  - 居里栈栈\n\n## 四、交流\n有什么意见，或者 bug，或者想一起开发 `vue-cropper`， 或者想一起开发其他插件\n![image](https://github.com/user-attachments/assets/740d67f7-d924-458e-bc88-b76b8a395feb)\n\n\n\n\n\n\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "english.md",
          "type": "blob",
          "size": 13.2158203125,
          "content": "## vue-cropper\n### A simple  picture clipping plugin for vue\n [preview](http://xyxiao.cn/vue-cropper/example/)\n [中文](https://github.com/xyxiao001/vue-cropper)\n\n### Vue-cropper Related Articles Reference.。\n#### [vue全家桶开发管理后台—裁切图片](https://blog.csdn.net/qq_30632003/article/details/79639346)   作者： 麻球科技-菅双鹏\n#### [Vue-cropper 图片裁剪的基本原理](https://www.cnblogs.com/tugenhua0707/p/8859291.html)  作者： 龙恩0707\n\n### vue-cropper communication.。\n##### Any comments, or bugs or want to develop vue-cropper together, or want to develop other plugins together\n![](https://qn-qn-kibey-static-cdn.app-echo.com/4C6FE9E2-3D06-402B-8F32-98B82BEBDD9F.png)\n\n# vue-cropper\n\n####   Install\n```\n\nnpm install vue-cropper\nyarn add vue-cropper\n\n```\n\n####   Use \n\n```\nviews\n\nimport { VueCropper }  from \"vue-cropper\"\ncomponents: {\n  VueCropper,\n},\n\nmain.js\n\nimport VueCropper from \"vue-cropper\" \n\nVue.use(VueCropper)\n\ncdn\n<script src=\"vuecropper.js\"></script>\nVue.use(window['vue-cropper'])\n\n<vueCropper\n  ref=\"cropper\"\n  :img=\"option.img\"\n  :outputSize=\"option.size\"\n  :outputType=\"option.outputType\"\n></vueCropper>\n```\n\n\n\n### not use npm or webpack\n[online example](https://codepen.io/xyxiao001/pen/wxwKGz)\n\n### serve render nuxt, control: ssr: false\n```\nmodule.exports = {\n  ...\n  build: {\n    vendor: [\n      'vue-cropper\n    ...\n    plugins: [\n      { src: '~/plugins/vue-cropper', ssr: false }\n    ]\n  }\n}\n```\n\n\n<table style=\"text-align: center\">\n  <thead>\n    <tr>\n        <td>name</td>\n        <td>Features</td>\n        <td>Detail</td>\n        <td>value</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n        <td>img</td>\n        <td>Picture address</td>\n        <td>null</td>\n        <td>url address || base64 || blob</td>\n    </tr>\n    <tr>\n        <td>outputSize</td>\n        <td>Crop the quality of the generated image</td>\n        <td>1</td>\n        <td>0.1 - 1</td>\n    </tr>\n    <tr>\n        <td>outputType</td>\n        <td>Crop the format of the generated image</td>\n        <td>jpg (jpg need jpeg)</td>\n        <td>jpeg || png || webp</td>\n    </tr>\n    <tr>\n        <td>info</td>\n        <td>Crop box size information</td>\n        <td>true</td>\n        <td>true || false</td>\n    </tr>\n    <tr>\n        <td>canScale</td>\n        <td>Whether the image allows the wheel to zoom</td>\n        <td>true</td>\n        <td>true || false</td>\n    </tr>\n    <tr>\n        <td>autoCrop</td>\n        <td>Whether to generate a screenshot box by default</td>\n        <td>false</td>\n        <td>true || false</td>\n    </tr>\n    <tr>\n        <td>autoCropWidth</td>\n        <td>Default generation of screenshot frame width</td>\n        <td>parent's 80%</td>\n        <td>0~max</td>\n    </tr>\n    <tr>\n        <td>autoCropHeight</td>\n        <td>Default generation of screenshot frame Height</td>\n        <td>parent's 80%</td>\n        <td>0~max</td>\n    </tr>\n    <tr>\n        <td>fixed</td>\n        <td>Whether to open the screenshot frame width and height fixed ratio</td>\n        <td>true</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>fixedNumber</td>\n        <td>The aspect ratio of the screenshot box</td>\n        <td>[1 : 1]</td>\n        <td>[width : height]</td>\n    </tr>\n    <tr>\n        <td>full</td>\n        <td>Screenshot of whether to output the original map scale</td>\n        <td>false</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>fixedBox</td>\n        <td>Fixed screenshot frame size is not allowed to change</td>\n        <td>false</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>canMove</td>\n        <td>Whether the uploaded image can be moved</td>\n        <td>true</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>canMoveBox</td>\n        <td>Can the screenshot box be dragged?</td>\n        <td>true</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>original</td>\n        <td>Upload images are rendered in raw scale</td>\n        <td>false</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>centerBox</td>\n        <td>Is the screenshot box restricted to the image?</td>\n        <td>false</td>\n        <td>true | false</td>\n    </tr>\n\t<tr>\n        <td>high</td>\n        <td>Is it proportional to the dpi output of the device?</td>\n        <td>true</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>infoTrue</td>\n        <td>True to show the true output image width and height false show the width of the screenshot frame</td>\n        <td>false</td>\n        <td>true | false</td>\n    </tr>\n    <tr>\n        <td>maxImgSize</td>\n        <td>Limit the maximum width and height of the image</td>\n        <td>2000</td>\n        <td>0-max</td>\n    </tr>\n    <tr>\n        <td>enlarge</td>\n        <td>Picture output ratio multiplier based on screenshots</td>\n        <td>1</td>\n        <td>0-max(Don't be too big.)</td>\n    </tr>\n    <tr>\n        <td>mode</td>\n        <td>img render mode</td>\n        <td>contain</td>\n        <td>contain , cover, 100px, 100% auto</td>\n    </tr>\n    <!-- <tr>\n        <td>limitMinSize</td>\n        <td>crop mini width height</td>\n        <td>10</td>\n        <td>number, string, [number, number]</td>\n    </tr> -->\n  </tbody>\n</table>\n\n\n### Built-in method Called by this.$refs.cropper\n##### this.$refs.cropper.startCrop() Start the screenshot\n##### this.$refs.cropper.stopCrop() Stop the screenshot\n##### this.$refs.cropper.clearCrop() Clear screenshot\n##### this.$refs.cropper.changeScale() Modify the image size. The positive number becomes larger. The negative number becomes smaller.\n##### this.$refs.cropper.getImgAxis() Get the image based on the container's coordinate points\n##### this.$refs.cropper.getCropAxis() Get the screenshot box based on the container's coordinate point\n##### this.$refs.cropper.goAutoCrop Automatically generate screenshot box functions\n##### this.$refs.cropper.rotateRight() Rotate 90 degrees to the right\n##### this.$refs.cropper.rotateLeft() Rotate 90 degrees to the left\n\n#### Image loaded callback imgLoad returns the result success, error\n\n#### Get screenshot information\nthis.$refs.cropper.cropW screenshot frame width\n\nthis.$refs.cropper.cropH screenshot frame height\n``` js\n// Get the base64 data of the screenshot\nthis.$refs.cropper.getCropData((data) => {\n   // do something\n   Console.log(data)\n})\n\n// Get the screenshot of the blob data\nthis.$refs.cropper.getCropBlob((data) => {\n   // do something\n   Console.log(data)\n})\n### Preview\n``` html\n@realTime=\"realTime\"\n// Real time preview function\nrealTime (data) {\n  this.previews = data\n}\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px',  'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"option.img\" :style=\"previews.img\">\n  </div>\n</div>\n=\n```\n\n#### Image Move Callback Function @imgMoving\n```\ndata type\n{\n   moving: true, // moving ismove\n   axis: {\n     x1: 1, // Upper left corner\n\t x2: 1，// Upper right corner\n\t y1: 1，// Lower left corner\n\t y2: 1 // Bottom right corner\n   }\n }\n```\n\n#### Screenshot box move callback function  @cropMoving\n```\ndata type\n{\n   moving: true, // moving 是否在移动\n   axis: {\n     x1: 1, // Upper left corner\n\t x2: 1，// Upper right corner\n\t y1: 1，// Lower left corner\n\t y2: 1 // Bottom right corner\n   }\n }\n```\n\n\n## Update log\n### 0.56\n```\nFix the problem of incorrect judgment of binding events\nFix the issue that component removal does not unbind scroll events\n```\n\n### 0.55\n```\nFix the bug that ios version less than 13.4 does not handle image rotation\n```\n### 0.54\n` ` ` `\nRemove log information\nFix PC Safari low version\n` ` ` `\n### 0.53\n` ` ` `\nBecause chrome 81 kernel and IOS 13.5 fix the image rotation bug\nThe plug-in will not process rotation by default in the new version of browser, and it will be processed automatically in the lower version of browser\nhttps://www.chromestatus.com/feature/6313474512650240\n\n### 0.52\n```\nRecall the attribute of the minimum bullet box. There is a bug in the judgment of the dragging coordinate of the bullet box\n```\n\n## 0.51\n`` `\nUpdate the minimum attributes of the crop box, limit the minimum area, can pass more than 1 numbers and strings, limit the length and width are so large, can also pass arrays [90,90]\nlimitMinSize: [Number, Array, String]\n`` `\n\n### 0.50\nSupport picture empty\nFix ie11 ie10 not working\nFix the bug that URL.createObjectURL is not destroyed after creation\nAdd screenshot box to modify trigger event\nthis. $ emit ('change-crop-size', {\n   width: this.cropW,\n   height: this.cropH\n})\n\n\n### 0.49\nFix the default event of the scroll wheel\nFix the issue of event trigger in html static file\n\n### 0.48\nFix display bug of mode attribute contain and cover\n\nFix the problem of cross domain display of base64 pictures under ios\n### 0.47\nFix the problem that does not trigger preview for the first time\nNew image rendering mode function\n\n### 0.46\nFix image rotation bug\nFix some bugs displayed\n\n### 0.45\n\nAdd multiples using enlarge\n\nYou can output clipping boxes and other proportional images.\n\n\n\nThank you for your contribution from [https://github.com/hzsrc].\n\nAdd preview box to various proportions, and restore image screenshots decimal problem.\n\n### 0.44\nfix required\n```\nRepairing the way of introduction\nimport { VueCropper }  from vue-cropper \ncomponents: {\n  VueCropper,\n},\n\nmain.js\nimport VueCropper from vue-cropper \n\nVue.use(vueCropper)\n\ncdn\n<script src=\"vuecropper.js\"></script>\nVue.use(window['vue-cropper'])\n```\n\n\n### V0.43\n\nPeel off EXIF's dependency library, add exfi-min.js to reduce code size 45.9k = 37k\n\nBuild upgrade webpack4 upgrade\n\n` ` ` ` ` ` ` ` ` '.\n\nAdd Vue install method = \"npm: Vue.use (VueCropper) web: Vue.use (window['vue-cropper'])\"\n\n` ` ` ` ` ` ` ` ` '.\n\n\n\n\n### V0.42\n\nRepair screenshots because of the problem of removing decimal points.\n\n\n\n### V0.41\n\nRepair boundary problem of screenshots\n\n\n\n\n### V0.40\n\nThe way to repair orientation\n\nThanks for the contribution of [Felipe Mengatto] (https://github.com/felipemengatto).\n\n### v0.40\nfix orientation handel\nThanks for the contribution of [Felipe Mengatto] (https://github.com/felipemengatto)\n\n\n### v0.39\n\nFix problems caused by different orientation values\nThanks for the contribution of [Felipe Mengatto] (https://github.com/felipemengatto)\n\n\n### v0.38\n```\nModify coordinate feedback problem\n```\n\n\n### v0.37\n```\nFix screenshot of centerBox out of 1px issue\nAdd screenshot Image move trigger event\n```\n\n### v0.36\n```\nFix rotation automatically generates screenshot box error\nModify autocrop to dynamically generate screenshot boxes\n```\n\n### v0.35\n```\nFix other images without compression issues\n```\n\n### v0.34\n``` provides a solution for mobile crashes\nModify maxImgSize to 2000\n```\n\n### v0.33\n``` provides a solution for mobile crashes\nmaxImgSize limits the maximum width and height of the image to 2000px by default.\n```\n\n### v0.32\n```\nAdd screenshot box information display\ninfoTrue true to show the true output image width and height false show the width of the screenshot box\n```\n\n### v0.30\n```\nAdded image coordinate function this.$refs.cropper.getImgAxis()\nAdded the capture box coordinate function this.$refs.cropper.getCropAxis()\nAdded compatibility with HD devices high\nAdded screenshot box to limit the function within the image centerbox\nAdded automatic generation of screenshot box function this.$refs.cropper.goAutoCrop\n```\n\n### v0.29\nAdded callback for image loading imgLoad returns result success, error\n### v0.28\nFix the screenshot box fixed The screenshot box will affect the original image movement Zoom\n### v0.27\nMouse scaling problem optimization\nImg max-width style optimization\nNew attribute\nCanMove can move pictures by default is yes\nCanMoveBox move the screenshot box by default?\nOriginal Whether to render in the original scale of the image Default is No\n\n\n### v0.26\nFix Firefox browser mouse zoom problem\n\n### v0.25\nFix image may not show\n\n### v0.24\nFix ios photo rotation Screenshot problem Add auto fix image Screenshot preview code change, modify default upload image as blob preview\n``` html\nrealTime (data) {\n  this.previews = data\n}\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"previews.url\" :style=\"previews.img\">\n  </div>\n</div>\n```\n\n\n### v0.23\nSmall optimization\n### v0.22\n New modified image size function called by this.$refs.cropper.changeScale\n\n### v0.21\nAdded fixed screenshot frame size fiexdBox (Note: It is best to use the automatic generation of screenshot box)\n\n### v0.20\nAdded output original image scale screenshot props name full, fix zoom image too large sensitivity problem\n\n### v0.19\nAdd image rotation to fix mac wheel over-sensitive\n``` js\nthis.$refs.cropper.rotateRight() // Rotate 90 degrees to the right\nthis.$refs.cropper.rotateLeft() // Rotate 90 degrees to the left\n```\n\n### v0.18\nFix default build screenshot box over container error\n### v0.17\nFix blob data acquisition error\n### v0.15\nAdd mobile phone gesture zoom\n```\ncanScale: true\n```\n\n### v0.13\nAdd preview\n``` html\n@realTime=\"realTime\"\n// Real time preview function\nrealTime (data) {\n  this.previews = data\n}\n<div class=\"show-preview\" :style=\"{'width': previews.w + 'px', 'height': previews.h + 'px', 'overflow': 'hidden',\n    'margin': '5px'}\">\n  <div :style=\"previews.div\">\n    <img :src=\"option.img\" :style=\"previews.img\">\n  </div>\n</div>\n```\n"
        },
        {
          "name": "next",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1806640625,
          "content": "{\n  \"name\": \"vue-cropper\",\n  \"version\": \"0.6.5\",\n  \"description\": \"A simple Vue picture clipping plugin\",\n  \"keywords\": [\n    \"vue\",\n    \"cropper\",\n    \"vue-cropper\",\n    \"vue-component\",\n    \"vue-cropper-component\"\n  ],\n  \"main\": \"./dist/index.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/xyxiao001/vue-cropper.git\"\n  },\n  \"author\": \"goodboy\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/xyxiao001/vue-cropper/issues\"\n  },\n  \"homepage\": \"https://github.com/xyxiao001/vue-cropper#readme\",\n  \"scripts\": {\n    \"build\": \"rm -rf ./dist && webpack --config webpack.config.js\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.1.2\",\n    \"@babel/plugin-transform-runtime\": \"^7.1.0\",\n    \"@babel/preset-env\": \"^7.1.0\",\n    \"babel-loader\": \"^8.0.0-beta.0\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-runtime\": \"^6.26.0\",\n    \"css-loader\": \"^6.8.1\",\n    \"style-loader\": \"^3.3.3\",\n    \"vue\": \"^2.5.17\",\n    \"vue-loader\": \"^15.4.2\",\n    \"vue-template-compiler\": \"^2.5.17\",\n    \"webpack\": \"^5.76.0\",\n    \"webpack-cli\": \"^5.0.1\",\n    \"sass\": \"^1.37.5\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"vueify\"\n    ]\n  }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "webpack.config.js",
          "type": "blob",
          "size": 1.0263671875,
          "content": "const path = require('path')\nconst VueLoaderPlugin = require('vue-loader/lib/plugin')\n\nmodule.exports = {\n  devtool: 'cheap-module-source-map',\n  entry: './src/index.js',\n  output: {\n    path: path.resolve(__dirname, './dist/'),\n    filename: 'index.js',\n    library: 'vue-cropper',\n    libraryTarget: 'umd',\n    umdNamedDefine: true\n  },\n  resolve: {\n    extensions: ['.js', '.vue'],\n    alias: {\n      'vue$': 'vue/dist/vue.common.js'\n    }\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /(node_modules|bower_components)/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env'],\n            plugins: ['@babel/transform-runtime']\n          }\n        }\n      },\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          'css-loader'\n        ]\n      }\n    ]\n  },\n  mode: \"production\",\n  plugins: [\n    // 请确保引入这个插件！\n    new VueLoaderPlugin()\n  ]\n}\n"
        }
      ]
    }
  ]
}