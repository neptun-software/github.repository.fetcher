{
  "metadata": {
    "timestamp": 1736711447210,
    "page": 258,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nuxt-community/express-template",
      "stars": 1248,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2021484375,
          "content": "# editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.2529296875,
          "content": "module.exports = {\n  root: true,\n  env: {\n    browser: true,\n    node: true\n  },\n  parserOptions: {\n    parser: 'babel-eslint'\n  },\n  extends: [\n    '@nuxtjs',\n    'plugin:nuxt/recommended'\n  ],\n  plugins: [\n  ],\n  // add your custom rules here\n  rules: {}\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2236328125,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Node template\n# Logs\n/logs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# next.js build output\n.next\n\n# nuxt.js build output\n.nuxt\n\n# Nuxt generate\ndist\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless\n\n# IDE / Editor\n.idea\n\n# Service worker\nsw.*\n\n# macOS\n.DS_Store\n\n# Vim swap files\n*.swp\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.7373046875,
          "content": "# Nuxt 2 with Express\n\n> [ExpressJS](http://expressjs.com/) + [Nuxt 2](https://v2.nuxt.com) = :zap:\n\nLive Demo: [https://codesandbox.io/s/github/nuxt-community/express-template](https://codesandbox.io/s/github/nuxt-community/express-template)\n\n## Nuxt 3\n\nNuxt 3 is powered by [unjs/h3](https://github.com/unjs/h3) which has a compatible API with Express and is much faster with the ability to run in Workers ([read more about it](https://nuxt.com/blog/nuxt-on-the-edge)).\n\nThis is why this template won't be migrated to Nuxt 3.\n\n## Installation\n\nThis is a template project, click on the green button \"Use this template\" at the top of this page and get started with GitHub :sparkles:\n\nOne you cloned your repository, install the dependencies with:\n\n```bash\nyarn install # or npm install\n```\n\n## ExpressJS Changes\n\n- There is a  `api` directory with the root of your `api` server.\n- The `routes` directory is called `api/routes`.\n\n## Commands\n\n| Command | Description |\n|---------|-------------|\n| npm run dev | Start ExpressJS server in development with Nuxt.js in dev mode (hot reloading). Listen on [http://localhost:3000](http://localhost:3000). |\n| npm run build | Build the nuxt.js web application for production. |\n| npm start | Start ExpressJS server in production. |\n\n## Examples\n\n- [Handling Protected SSR Routes](https://github.com/nuxt/express/blob/master/protected-ssr-api.md)\n\n## Documentation\n\n- [ExpressJS](http://expressjs.com/en/guide/routing.html)\n- [Nuxt.js](https://nuxtjs.org/guide/)\n- [Vue.js](http://vuejs.org/guide/)\n\n## Licenses\n\n- [ExpressJS license](https://github.com/expressjs/express/blob/master/LICENSE)\n- [NuxtJS license](https://github.com/nuxt/nuxt.js/blob/master/LICENSE.md)\n- [VueJS license](https://github.com/vuejs/vue/blob/master/LICENSE)\n\n\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "middleware",
          "type": "tree",
          "content": null
        },
        {
          "name": "nuxt.config.js",
          "type": "blob",
          "size": 1.41796875,
          "content": "\nexport default {\n  /*\n  ** Nuxt target\n  ** See https://nuxtjs.org/api/configuration-target\n  */\n  target: 'server',\n\n  /*\n  ** Headers of the page\n  ** See https://nuxtjs.org/api/configuration-head\n  */\n  head: {\n    title: process.env.npm_package_name || '',\n    meta: [\n      { charset: 'utf-8' },\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n      { hid: 'description', name: 'description', content: process.env.npm_package_description || '' }\n    ],\n    link: [\n      { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\n    ]\n  },\n\n  /*\n  ** Global CSS\n  */\n  css: [\n  ],\n\n  /*\n  ** Plugins to load before mounting the App\n  ** https://nuxtjs.org/guide/plugins\n  */\n  plugins: [\n  ],\n\n  /*\n  ** Auto import components\n  ** See https://nuxtjs.org/api/configuration-components\n  */\n  components: true,\n\n  /*\n  ** Nuxt.js dev-modules\n  */\n  buildModules: [\n    // Doc: https://github.com/nuxt-community/eslint-module\n    '@nuxtjs/eslint-module'\n  ],\n\n  /*\n  ** Nuxt.js modules\n  */\n  modules: [\n    // Doc: https://http.nuxtjs.org\n    '@nuxt/http'\n  ],\n\n  /*\n  ** Server Middleware\n  */\n  serverMiddleware: {\n    '/api': '~/api'\n  },\n\n  /*\n  ** For deployment you might want to edit host and port\n  */\n  // server: {\n  //  port: 8000, // default: 3000\n  //  host: '0.0.0.0' // default: localhost\n  // },\n\n  /*\n  ** Build configuration\n  ** See https://nuxtjs.org/api/configuration-build/\n  */\n  build: {\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.572265625,
          "content": "{\n  \"name\": \"nuxt-express\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"nuxt\",\n    \"build\": \"nuxt build\",\n    \"start\": \"nuxt start\",\n    \"generate\": \"nuxt generate\",\n    \"lint\": \"yarn lint:js\",\n    \"lint:js\": \"eslint --ext .js,.vue --ignore-path .gitignore .\"\n  },\n  \"dependencies\": {\n    \"@nuxt/http\": \"latest\",\n    \"express\": \"latest\",\n    \"nuxt\": \"latest\"\n  },\n  \"devDependencies\": {\n    \"@nuxtjs/eslint-config\": \"^5.0.0\",\n    \"@nuxtjs/eslint-module\": \"^3.0.2\",\n    \"babel-eslint\": \"^10.1.0\",\n    \"eslint\": \"^7.20.0\",\n    \"eslint-plugin-nuxt\": \"^2.0.0\"\n  }\n}\n"
        },
        {
          "name": "pages",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "protected-ssr-api.md",
          "type": "blob",
          "size": 0.658203125,
          "content": "The moment you start dealing with user session, you'll notice that protected routes will reject nuxt requests when running from the server. This is because when nuxt is ran from the server, the browser cookie is lost. Below is a quick middleware solution to inject the browser's cookie to your ssr axios request.\n\n## install session\n\n`npm install --save express-session`\n\n\n## create middleware/ssr-cookie.js\n\n```js\nimport axios from '~plugins/axios'\n\nexport default function({isServer, req}) {\n  if (isServer) {\n    axios.defaults.headers.common.cookie = req.headers.cookie\n  }\n}\n```\n\n## add middleware to nuxt.config.js\n\n```js\nrouter: {\n  middleware: ['ssr-cookie']\n}\n```\n\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.0361328125,
          "content": "{\n  \"extends\": [\n    \"@nuxtjs\"\n  ]\n}\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "store",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}