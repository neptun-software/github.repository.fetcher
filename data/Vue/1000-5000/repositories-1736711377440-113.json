{
  "metadata": {
    "timestamp": 1736711377440,
    "page": 113,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jsbroks/coco-annotator",
      "stars": 2139,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0185546875,
          "content": "datasets/*\nmodels/*"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1484375,
          "content": ".pytest_cache/*\n.cache/*\n.idea/*\ndatasets/*\n!datasets/.gitkeep\n.history/*\n.vscode/*\n__pycache__\ndist/*\n!dist/.gitkeep\n\ndocs/.vuepress/dist/*\nmodels/*.h5"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6845703125,
          "content": "matrix:\n  include:\n    - language: python\n      python:\n        - 3.6\n      services:\n        - docker\n      cache: pip\n      env:\n        - MONGODB_HOST=mongodb://localhost/test\n        - DATASET_DIRECTORY=datasets/\n        - TESTING=true\n        - LOGIN_DISABLED=true\n      before_script:\n        - pip install -r backend/requirements.txt\n        - pip install pycocotools\n        - docker run -d -p 27017:27017 mongo\n        - docker ps -a\n      script: pytest\n    # - language: node_js\n    #   node_js:\n    #     - 8\n    #     - node\n    #   cache: npm\n    #   before_install:\n    #     - npm install -g npm@latest\n    #     - cd client\n    #   install:\n    #     - npm i\n    #   script: npm test\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.2587890625,
          "content": "# Contributing to HTML5 Boilerplate\n\nLove [COCO Annotator](/jsbroks/coco-annotator) and want to get involved?\nThanks! We're actively looking for folks interested in helping out and there \nare plenty of ways you can help!\n\nPlease take a moment to review this document in order to make the contribution\nprocess easy and effective for everyone involved.\n\nFollowing these guidelines helps to communicate that you respect the time of\nthe developers managing and developing this open source project. In return,\nthey should reciprocate that respect in addressing your issue or assessing\npatches and features.\n\n\n## Using the issue tracker\n\nThe [issue tracker](/jsbroks/coco-annotator/issues) is\nthe preferred channel for [bug reports](#bugs), [features requests](#features)\nand [submitting pull requests](#pull-requests), but please respect the following\nrestrictions:\n\n* Please **do not** use the issue tracker for personal support requests (use\n  [Stack Overflow](https://stackoverflow.com/questions/tagged/coco-annotator)).\n\n* Please **do not** derail or troll issues. Keep the discussion on topic and\n  respect the opinions of others.\n\n<a name=\"bugs\"></a>\n## Bug reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the repository.\nGood bug reports are extremely helpful - thank you!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\n   latest `master` or development branch in the repository.\n\n3. **Isolate the problem** &mdash; ideally create a [reduced test\n   case](https://css-tricks.com/reduced-test-cases/) and a live example.\n\nA good bug report shouldn't leave others needing to chase you up for more\ninformation. Please try to be as detailed as possible in your report. What is\nyour environment? What steps will reproduce the issue? What browser(s) and OS\nexperience the problem? What would you expect to be the outcome? All these\ndetails will help people to fix any potential bugs.\n\nExample:\n\n> Short and descriptive example bug report title\n>\n> A summary of the issue and the browser/OS environment in which it occurs. If\n> suitable, include the steps required to reproduce the bug.\n>\n> 1. This is the first step\n> 2. This is the second step\n> 3. Further steps, etc.\n>\n> `<url>` - a link to the reduced test case\n>\n> Any other information you want to share that is relevant to the issue being\n> reported. This might include the lines of code that you have identified as\n> causing the bug, and potential solutions (and your opinions on their\n> merits).\n\n\n<a name=\"features\"></a>\n## Feature requests\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to *you* to make a strong\ncase to convince the project's developers of the merits of this feature. Please\nprovide as much detail and context as possible.\n\n\n<a name=\"pull-requests\"></a>\n## Pull requests\n\nGood pull requests - patches, improvements, new features - are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\n**Please ask first** before embarking on any significant pull request (e.g.\nimplementing features, refactoring code, porting to a different language),\notherwise you risk spending a lot of time working on something that the\nproject's developers might not want to merge into the project.\n\nPlease adhere to the coding conventions used throughout a project (indentation,\naccurate comments, etc.) and any other requirements (such as test coverage).\n\nAdhering to the following process is the best way to get your work\nincluded in the project:\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) the project, clone your\n   fork, and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/html5-boilerplate.git\n   # Navigate to the newly cloned directory\n   cd html5-boilerplate\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream https://github.com/h5bp/html5-boilerplate.git\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout master\n   git pull upstream master\n   ```\n\n3. Create a new topic branch (off the main project development branch) to\n   contain your feature, change, or fix:\n\n   ```bash\n   git checkout -b <topic-branch-name>\n   ```\n\n4. Commit your changes in logical chunks. Please adhere to these [git commit\n   message guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)\n   or your code is unlikely be merged into the main project. Use Git's\n   [interactive rebase](https://help.github.com/articles/about-git-rebase/)\n   feature to tidy up your commits before making them public.\n\n5. Locally merge (or rebase) the upstream development branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream master\n   ```\n\n6. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n7. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description.\n\n**IMPORTANT**: By submitting a patch, you agree to allow the project\nowners to license your work under the terms of the [MIT License](LICENSE.txt).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.625,
          "content": "FROM node:10 as build-stage\n\nWORKDIR /workspace/\nCOPY ./client /workspace/client\n\nRUN npm install -g @vue/cli@3.3.0\nRUN npm install -g @vue/cli-service@3.3.0\n\nCOPY ./client/package* /workspace/\n\nRUN npm install\nENV NODE_PATH=/workspace/node_modules\n\nWORKDIR /workspace/client\nRUN npm run build\n\nFROM jsbroks/coco-annotator:python-env\n\nWORKDIR /workspace/\nCOPY ./backend/ /workspace/\nCOPY ./.git /workspace/.git\nRUN python set_path.py\n\nCOPY --from=build-stage /workspace/client/dist /workspace/dist\n\nENV FLASK_ENV=production\nENV DEBUG=false\n\nEXPOSE 5000\nCMD gunicorn -c webserver/gunicorn_config.py webserver:app --no-sendfile --timeout 180\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2018 Justin Brooks\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7216796875,
          "content": "<p align=\"center\"><img src=\"https://i.imgur.com/AA7IdbQ.png\"></p>\n\n<p align=\"center\">\n  <a href=\"#features\">Features</a> •\n  <a href=\"https://github.com/jsbroks/coco-annotator/wiki\">Wiki</a> •\n  <a href=\"https://github.com/jsbroks/coco-annotator/wiki/Getting-Started\">Getting Started</a> •\n  <a href=\"https://github.com/jsbroks/coco-annotator/issues\">Issues</a> •\n  <a href=\"#license\">License</a>\n</p>\n\n---\n\n<p align=\"center\">\n  <a href=\"/jsbroks/coco-annotator/stargazers\">\n    <img src=\"https://img.shields.io/github/stars/jsbroks/coco-annotator.svg\">\n  </a>\n  <a href=\"/jsbroks/coco-annotator/issues\">\n    <img src=\"https://img.shields.io/github/issues/jsbroks/coco-annotator.svg\">\n  </a>\n  <a href=\"https://tldrlegal.com/license/mit-license\">\n    <img src=\"https://img.shields.io/github/license/mashape/apistatus.svg\">\n  </a>\n  <a href=\"https://lgtm.com/projects/g/jsbroks/coco-annotator/context:javascript\">\n    <img src=\"https://img.shields.io/lgtm/grade/javascript/g/jsbroks/coco-annotator.svg?label=code%20quality\">\n  </a>\n  <a href=\"https://annotator.justinbrooks.ca/\">\n    <img src=\"https://img.shields.io/badge/demo-online-green.svg\">\n  </a>\n  <a href=\"https://travis-ci.org/jsbroks/coco-annotator\">\n    <img src=\"https://travis-ci.org/jsbroks/coco-annotator.svg?branch=master\">\n  </a>\n  <a href=\"https://hub.docker.com/r/jsbroks/coco-annotator\">\n    <img src=\"https://img.shields.io/docker/pulls/jsbroks/coco-annotator.svg\">\n  </a>\n</p>\n\nCOCO Annotator is a web-based image annotation tool designed for versatility and efficiently label images to create training data for image localization and object detection. It provides many distinct features including the ability to label an image segment (or part of a segment), track object instances, labeling objects with disconnected visible parts, efficiently storing and export annotations in the well-known [COCO format](http://cocodataset.org/#format-data). The annotation process is delivered through an intuitive and customizable interface and provides many tools for creating accurate datasets.\n\n\n<br />\n\n<p align=\"center\">Join our growing <a href=\"https://discord.gg/4zP5Qkj\">discord community</a> of ML practitioner</p>\n<p align=\"center\">\n  <a href=\"https://discord.gg/4zP5Qkj\">\n    <img src=\"https://discord.com/assets/e4923594e694a21542a489471ecffa50.svg\" width=\"120\">\n  </a>\n</p>\n\n<br />\n\n<p align=\"center\"><a href=\"http://www.youtube.com/watch?feature=player_embedded&v=OMJRcjnMMok\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/OMJRcjnMMok/maxresdefault.jpg\" \nalt=\"Image annotations using COCO Annotator\" width=\"600\" /></a></p>\n<p align=\"center\"><i>Checkout the video for a basic guide on installing and using COCO Annotator.</i></p>\n\n<br />\n\n<p align=\"center\"><img width=\"600\" src=\"https://i.imgur.com/m4RmjCp.gif\"></p>\n<p align=\"center\"><i>Note: This video is from v0.1.0 and many new features have been added.</i></p>\n\n\n<br>\n\n<p align=\"center\">If you enjoy my work please consider supporting me</p>\n<p align=\"center\">\n  <a href=\"https://www.patreon.com/jsbroks\">\n    <img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"120\">\n  </a>\n</p>\n<br>\n\n# Features\n\nSeveral annotation tools are currently available, with most applications as a desktop installation. Once installed, users can manually define regions in an image and creating a textual description. Generally, objects can be marked by a bounding box, either directly, through a masking tool, or by marking points to define the containing area. _COCO Annotator_ allows users to annotate images using free-form curves or polygons and provides many additional features were other annotations tool fall short.\n\n- Directly export to COCO format\n- Segmentation of objects\n- Ability to add key points\n- Useful API endpoints to analyze data\n- Import datasets already annotated in COCO format\n- Annotate disconnect objects as a single instance\n- Labeling image segments with any number of labels simultaneously\n- Allow custom metadata for each instance or object\n- Advanced selection tools such as, [DEXTR](https://github.com/jsbroks/dextr-keras), [MaskRCNN](https://github.com/matterport/Mask_RCNN) and Magic Wand\n- Annotate images with semi-trained models\n- Generate datasets using google images\n- User authentication system\n\nFor examples and more information check out the [wiki](https://github.com/jsbroks/coco-annotator/wiki).\n\n# Demo\n\n| Login Information      |\n| ---------------------- |\n| **Username:** admin    |\n| **Password:** password |\n\nhttps://annotator.justinbrooks.ca/\n\n# Backers\n\nIf you enjoy the development of coco-annotator or are looking for an enterprise annotation tool, consider checking out DataTorch.\n\n<p align=\"center\">\n  <a href=\"https://datatorch.io\">\n    <img src=\"https://i.imgur.com/sOQ1s5F.png\" width=\"250\" />\n  </a>\n  <p align=\"center\">\n    https://datatorch.io · <a href=\"mailto:support@datatorch.io\">support@datatorch.io</a> · <i>Next generation of coco-annotator</i>\n   </p>\n</p>\n\n# Built With\n\nThanks to all these wonderful libaries/frameworks:\n\n### Backend\n\n- [Flask](http://flask.pocoo.org/) - Python web microframework\n- [MongoDB](https://www.mongodb.com/) - Cross-platform document-oriented database\n- [MongoEngine](http://mongoengine.org/) - Python object data mapper for MongoDB\n\n### Frontend\n\n- [Vue](https://vuejs.org/) - JavaScript framework for building user interfaces\n- [Axios](https://github.com/axios/axios) - Promise based HTTP client\n- [PaperJS](http://paperjs.org/) - HTML canvas vector graphics library\n- [Bootstrap](https://getbootstrap.com/) - Frontend component library\n\n# License\n\n[MIT](https://tldrlegal.com/license/mit-license)\n\n# Citation\n\n```\n  @MISC{cocoannotator,\n    author = {Justin Brooks},\n    title = {{COCO Annotator}},\n    howpublished = \"\\url{https://github.com/jsbroks/coco-annotator/}\",\n    year = {2019},\n  }\n```\n"
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_gpu.sh",
          "type": "blob",
          "size": 0.2177734375,
          "content": "docker build -f ./backend/Dockerfile . -t jsbroks/coco-annotator:python-env --no-cache\ndocker build . -t annotator_webclient_gpu --no-cache\ndocker build -f ./backend/workers/Dockerfile . -t annotator_workers_gpu --no-cache\n"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "db",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.build.yml",
          "type": "blob",
          "size": 1.5556640625,
          "content": "version: \"3\"\n\nvolumes:\n  mongodb_data:\n    external: false\n\nnetworks:\n  cocoannotator:\n    external: false\n\nservices:\n  webserver:\n    build:\n      context: .\n      dockerfile: ./Dockerfile\n    container_name: annotator_webclient\n    restart: always\n    ports:\n      - \"5000:5000\"\n    environment:\n      - SECRET_KEY=RandomSecretKeyHere\n      - FILE_WATCHER=true\n      - NAME=Test Annotator\n    volumes:\n      - \"./datasets:/datasets\"\n      - \"./models:/models\"\n    depends_on:\n      - database\n      - workers\n    networks:\n      - cocoannotator\n  workers:\n    container_name: annotator_workers\n    build:\n      context: .\n      dockerfile: ./backend/workers/Dockerfile\n    volumes:\n      - \"./backend/config:/workspace/config\"\n      - \"./backend/webserver:/workspace/webserver\"\n      - \"./backend/workers:/workspace/workers\"\n      - \"./backend/database:/workspace/database\"\n      - \"./datasets:/datasets\"\n    depends_on:\n      - messageq\n      - database\n    ports:\n      - 5555:5555\n    networks:\n      - cocoannotator\n  messageq:\n    image: rabbitmq:3\n    container_name: annotator_message_q\n    environment:\n      - RABBITMQ_DEFAULT_USER=user\n      - RABBITMQ_DEFAULT_PASS=password\n    ports:\n      - 5672:5672\n    networks:\n      - cocoannotator\n  database:\n    image: mongo:4.0\n    container_name: annotator_mongodb\n    restart: always\n    environment:\n      - MONGO_DATA_DIR=/data/db\n      - MONGO_LOG_DIR=/dev/null\n    volumes:\n      - \"mongodb_data:/data/db\"\n    ports:\n      - \"27017:27017\"\n    command: \"mongod --smallfiles --logpath=/dev/null\"\n    networks:\n      - cocoannotator\n"
        },
        {
          "name": "docker-compose.dev.yml",
          "type": "blob",
          "size": 2.8935546875,
          "content": "version: \"3\"\nvolumes:\n  mongodb_data:\n    external: false\nnetworks:\n  cocoannotator:\n    external: false\n\nservices:\n  frontend:\n    container_name: annotator_client\n    build:\n      context: .\n      dockerfile: ./client/Dockerfile\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - \"./client:/workspace/client\"\n    networks:\n      - cocoannotator\n    depends_on:\n      - webserver\n  webserver:\n    container_name: annotator_webserver\n    build:\n      context: .\n      dockerfile: ./backend/webserver/Dockerfile\n    ports:\n      - 5000:5000\n    volumes:\n      - \"./backend/config:/workspace/config\"\n      - \"./backend/webserver:/workspace/webserver\"\n      - \"./backend/workers:/workspace/workers\"\n      - \"./backend/database:/workspace/database\"\n      - \"./datasets:/datasets\"\n      - \"./models:/models\"\n    environment:\n      - FILE_WATCHER=true\n      - FLASK_APP=webserver\n      - FLASK_ENV=development\n      - DEBUG=true\n      # - MASK_RCNN_FILE=/models/mask_rcnn_coco.h5\n      # # Default coco classes (order matters)\n      # - |\n      #   MASK_RCNN_CLASSES=\n      #   BG,person,bicycle,car,motorcycle,airplane,\n      #   bus,train,truck,boat,traffic light,\n      #   fire hydrant,stop sign,parking meter,bench,bird,\n      #   cat,dog,horse,sheep,cow,elephant,bear,\n      #   zebra,giraffe,backpack,umbrella,handbag,tie,\n      #   suitcase,frisbee,skis,snowboard,sports ball,\n      #   kite,baseball bat,baseball glove,skateboard,\n      #   surfboard,tennis racket,bottle,wine glass,cup,\n      #   fork,knife,spoon,bowl,banana',apple,\n      #   sandwich,orange,broccoli,carrot,hot dog,pizza,\n      #   donut,cake,chair,couch,potted plant,bed,\n      #   dining table,toilet,tv,laptop,mouse,remote,\n      #   keyboard,cell phone,microwave,oven,toaster,\n      #   sink,refrigerator,book,clock,vase,scissors,\n      #   teddy bear,hair drier,toothbrush\n    networks:\n      - cocoannotator\n    depends_on:\n      - database\n      - workers\n  workers:\n    container_name: annotator_workers\n    build:\n      context: .\n      dockerfile: ./backend/workers/Dockerfile\n    volumes:\n      - \"./backend/config:/workspace/config\"\n      - \"./backend/webserver:/workspace/webserver\"\n      - \"./backend/workers:/workspace/workers\"\n      - \"./backend/database:/workspace/database\"\n      - \"./datasets:/datasets\"\n    depends_on:\n      - messageq\n      - database\n    ports:\n      - 5555:5555\n    networks:\n      - cocoannotator\n  database:\n    image: mongo:4.0\n    container_name: annotator_mongodb\n    environment:\n      - MONGO_DATA_DIR=/data/db\n      - MONGO_LOG_DIR=/dev/null\n    volumes:\n      - \"mongodb_data:/data/db\"\n    ports:\n      - \"27017:27017\"\n    command: \"mongod --smallfiles --logpath=/dev/null\"\n    networks:\n      - cocoannotator\n  messageq:\n    image: rabbitmq:3\n    container_name: annotator_message_q\n    environment:\n      - RABBITMQ_DEFAULT_USER=user\n      - RABBITMQ_DEFAULT_PASS=password\n    ports:\n      - 5672:5672\n    networks:\n      - cocoannotator\n"
        },
        {
          "name": "docker-compose.gpu.yml",
          "type": "blob",
          "size": 2.310546875,
          "content": "version: \"3\"\n\nnetworks:\n  cocoannotator:\n    external: false\n\nservices:\n  webserver:\n    image: annotator_webclient_gpu\n    container_name: annotator_webclient\n    restart: \"no\"\n    ports:\n      - \"5000:5000\"\n    environment:\n      - SECRET_KEY=RandomSecretKeyHere\n      - FILE_WATCHER=true\n      - NAME=Test Annotator\n      - MASK_RCNN_FILE=/models/mask_rcnn_coco.h5\n      # # Default coco classes (order matters)\n      - MASK_RCNN_CLASSES=\n         BG,person,bicycle,car,motorcycle,airplane,\n         bus,train,truck,boat,traffic light,\n         fire hydrant,stop sign,parking meter,bench,bird,\n         cat,dog,horse,sheep,cow,elephant,bear,\n         zebra,giraffe,backpack,umbrella,handbag,tie,\n         suitcase,frisbee,skis,snowboard,sports ball,\n         kite,baseball bat,baseball glove,skateboard,\n         surfboard,tennis racket,bottle,wine glass,cup,\n         fork,knife,spoon,bowl,banana',apple,\n         sandwich,orange,broccoli,carrot,hot dog,pizza,\n         donut,cake,chair,couch,potted plant,bed,\n         dining table,toilet,tv,laptop,mouse,remote,\n         keyboard,cell phone,microwave,oven,toaster,\n         sink,refrigerator,book,clock,vase,scissors,\n         teddy bear,hair drier,toothbrush\n    volumes:\n      - \"./datasets:/datasets\"\n      - \"./models:/models\"\n    depends_on:\n      - database\n      - workers\n    networks:\n      - cocoannotator\n  workers:\n    container_name: annotator_workers\n    image: annotator_workers_gpu\n    volumes:\n      - \"./backend/config:/workspace/config\"\n      - \"./backend/webserver:/workspace/webserver\"\n      - \"./backend/workers:/workspace/workers\"\n      - \"./backend/database:/workspace/database\"\n      - \"./datasets:/datasets\"\n    depends_on:\n      - messageq\n      - database\n    ports:\n      - 5555:5555\n    networks:\n      - cocoannotator\n  messageq:\n    image: rabbitmq:3\n    container_name: annotator_message_q\n    environment:\n      - RABBITMQ_DEFAULT_USER=user\n      - RABBITMQ_DEFAULT_PASS=password\n    ports:\n      - 5672:5672\n    networks:\n      - cocoannotator\n  database:\n    image: mongo:4.0\n    container_name: annotator_mongodb\n    restart: \"no\"\n    environment:\n      - MONGO_DATA_DIR=/data/db\n      - MONGO_LOG_DIR=/dev/null\n    volumes:\n      - \"./db:/data/db\"\n    ports:\n      - \"27017:27017\"\n    command: \"mongod --smallfiles --logpath=/dev/null\"\n    networks:\n      - cocoannotator\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.2177734375,
          "content": "version: \"3\"\nvolumes:\n  mongodb_data:\n    external: false\n\nnetworks:\n  cocoannotator:\n    external: false\n\nservices:\n  webserver:\n    image: jsbroks/coco-annotator:webserver-stable\n    container_name: annotator_webclient\n    restart: always\n    ports:\n      - \"5000:5000\"\n    environment:\n      - SECRET_KEY=RandomSecretKeyHere\n      - FILE_WATCHER=true\n    volumes:\n      - \"./datasets:/datasets\"\n      - \"./models:/models\"\n    depends_on:\n      - database\n      - workers\n    networks:\n      - cocoannotator\n  workers:\n    container_name: annotator_workers\n    image: jsbroks/coco-annotator:workers-stable\n    volumes:\n      - \"./datasets:/datasets\"\n    depends_on:\n      - messageq\n      - database\n    networks:\n      - cocoannotator\n  messageq:\n    image: rabbitmq:3\n    container_name: annotator_message_q\n    environment:\n      - RABBITMQ_DEFAULT_USER=user\n      - RABBITMQ_DEFAULT_PASS=password\n    networks:\n      - cocoannotator\n  database:\n    image: mongo:4.0\n    container_name: annotator_mongodb\n    restart: always\n    environment:\n      - MONGO_DATA_DIR=/data/db\n      - MONGO_LOG_DIR=/dev/null\n    volumes:\n      - \"mongodb_data:/data/db\"\n    command: \"mongod --smallfiles --logpath=/dev/null\"\n    networks:\n      - cocoannotator\n"
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.05078125,
          "content": "[pytest]\nfilterwarnings = ignore::DeprecationWarning"
        }
      ]
    }
  ]
}