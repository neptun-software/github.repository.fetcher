{
  "metadata": {
    "timestamp": 1736711427174,
    "page": 218,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-source-labs/PreVue",
      "stars": 1390,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".browserslistrc",
          "type": "blob",
          "size": 0.0322265625,
          "content": "> 1%\nlast 2 versions\nnot ie <= 8\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.48046875,
          "content": "module.exports = {\n  root: true,\n  env: {\n    es2021: true,\n    node: true\n  },\n  extends: [\n    'plugin:vue/essential',\n    'plugin:prettier/recommended',\n    '@vue/prettier',\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended'\n  ],\n  parser: 'vue-eslint-parser',\n  plugins: ['@typescript-eslint, vue'],\n  rules: {\n    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off'\n  }\n};\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3857421875,
          "content": ".DS_Store\nnode_modules\n/dist\n\n# dotenv environment variables files (local env files)\n.env.local\n.env.*.local\n.env\n.env.test\n\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw*\n\n\npackage-lock.json\n# Elastic Beanstalk Files\n.elasticbeanstalk/*\n!.elasticbeanstalk/*.cfg.yml\n!.elasticbeanstalk/*.global.yml\n"
        },
        {
          "name": ".prettierrc.js",
          "type": "blob",
          "size": 0.041015625,
          "content": "module.exports = {\n  singleQuote: true\n};\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5791015625,
          "content": "# base image that provides runtime environment for the application\nFROM node:16.13\n# where the application code will be copied to in the docker container\nWORKDIR /usr/src/app\n# copies all files from the current directory (where the Dockerfile is located) to the working directory in the docker image (which we set on line 4)\nCOPY . .\nRUN npm install\nRUN npm run build\n# Exposes port 4173 to the host machine, so that it can access the Node.js application running inside the Docker container\nEXPOSE 8080\n# Specifies the command to run when the Docker container starts\nENTRYPOINT npm run server\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.251953125,
          "content": "<p align=\"center\">\n  <img width=\"1000\" src=\"src/assets/new-banner.png?raw=true\">\n</p>\n\n---\n\n<p align=\"center\">\n  <img width=\"250\" src=\"src/assets/prevue-large-green-bottom.png\">\n  <h1 align=\"center\">PreVue </h1>\n</p>\n\n<h3 align=\"center\">\nAll-in-One Prototyping Tool \nFor Vue Developers\n</h3>\n\n<h4 align=\"center\">\nFrom Component Architecture to Code Exporting\n</h4>\n\n<!-- <h4 align='center'>\n  https://www.prevue.live\n</h4> -->\n\nPreVue allows users to conceptualize and visualize component architecture by making it possible to :\n\n- Build components, visualize UI and preview the associated code\n- Set up different routes and views for each project\n- Establish parent-child component relationships\n- View application hierarchy in tree format\n- Save and open projects that are currently in progress, ensuring that completed work is not lost and can be revisited at any time\n- Export component architecture as a Vue application created with default Vite settings\n\nUse PreVue to create projects in single sessions or sign in with GitHub to save projects and update them at your convenience!\n\n<!-- <p align=\"center\">\n  <img width=\"1000\" src=\"src/assets/pvv.png?raw=true\">\n</p> -->\n\n## Getting Started\n\n---\n\n### Adding Views\n\n- Select an existing view from the View Creator dropdown, or enter a new view name, then select your custom view from the View Creator dropdown\n- Any components created on a given view will be automatically saved to that specific view\n- See your application’s hierarchy by clicking the ‘Tree’ icon in the navigation bar\n\n<p align=\"center\">\n<img width =\"300\" src=\"src/assets/viewcreator.png?raw=true\">\n</p>\n\n<h5 align=\"center\">Tree View of Application Architecture</h5>\n\n<p align=\"center\">\n  <img width=\"300\" src=\"src/assets/treeview.png?raw=true\">\n</p>\n\n### Adding Components\n\n- Enter a component name in the Component Creator field and select HTML elements\n- Clicked elements will be shown in the right sidebar -- drag elements to change their order\n- Once you're satisfied, click ‘add component’ button and it will show up in the working area -- resize and move components to fit the design you have in mind\n\n<img width=\"1000\" src=\"src/assets/prevue-recording.gif\">\n\n### Editing Components\n\n- Double click elements to bring up the modal view\n- Add additional elements to a component with a live preview of the component code\n- Drag selected elements to the right to nest elements\n- Establish parent-child component relationships via the dropdown menu when creating or editing components\n\n<img width=\"1000\" src=\"src/assets/modal-image.png?raw=true\">\n\n### Saving / Opening / Exporting Projects\n\n- If you're signed in with GitHub, click the ‘Save Project’ icon to save it to PreVue’s database\n- Click ‘Open Project’ to retrieve past projects\n- Once you're satisfied, click the export project icon to export your awesome project as new Vue application\n- Other users can use PreVue's playground to create and export projects in single sessions without signing in\n\n<!-- <img width=\"1000\" src=\"src/assets/export.gif\">\n<img width=\"1000\" src=\"src/assets/export.png\"> -->\n\n### Code Exporting\n\nBelow is the generated directory structure of the Vue application that is created when you export your design.\n\n```\nsrc/\n  assets/\n  App.vue\n  components/\n    UserCreatedComponent1.vue\n    UserCreatedComponent2.vue\n    ...\n  views/\n    HomeView.vue\n    UserCreatedRouteComponent1.vue\n    UserCreatedRouteComponent2.vue\n    ...\n```\n\n<!-- ## Running your own local version\n\n### Setup\n\nComing soon! -->\n\n## Built With\n\n---\n\n- [Express](https://expressjs.com/)\n- [Jest](https://jestjs.io/)\n- [MongoDB](https://www.mongodb.com/)\n- [Mongoose](https://mongoosejs.com/)\n- [Node.js](https://nodejs.org/en)\n- [SuperTest](https://www.npmjs.com/package/supertest)\n- [Vite](https://vitejs.dev/)\n- [Vue Router](https://router.vuejs.org/guide/#html)\n- [Vue Test Utils](https://test-utils.vuejs.org/)\n- [Vue.js](https://vuejs.org/)\n- [Vuex](https://vuex.vuejs.org/)\n- [Vuetify](https://vuetifyjs.com/)\n\n## Changelog\n\n---\n\nPreVue 3.0 Updates:\n\n- OAuth integration with GitHub for secure authentication\n- Full CRUD functionality for prototype creation\n- Implementation of appropriate hierarchical relationships reflected in UI\n- Website and Homepage redesign for seamless user experience\n- Realistic rendering of elements to Component Display\n- Delete and Undo functionality for individual Components\n- Project saving, loading & export ability\n\nPreVue 2.0 Updates:\n\n- Implementation of PreVue as a web application\n- TypeScript integration\n- Backend infrastructure built with Node/Express\n- General UI/UX enhancements\n- Testing with Vitest and Supertest (and Jest)\n\n## Contributing to PreVue\n\n---\n\nWe encourage you to submit issues for any bugs or ideas for enhancements. Please feel free to fork this repo and submit pull requests to contribute as well. Follow PreVue on [LinkedIn](https://www.linkedin.com/company/prevue-live/) for more updates.\n\nIdeas for additional features include:\n\n- Project livesharing for collaborative sessions (via Websockets)\n- Migrate state management from Vuex to Pinia\n- More thorough testing with Jest\n- Ability to rename and add styling to individual components\n- Containerization of PreVue App\n- User Authentication updates via OAuth\n\n## Authors\n\nPrevue 3.0\n\n- **April Sanders** [@algorithmrhythm](https://github.com/algorithmrhythm)\n- **Cole Jaeger** [@colejaeger0](https://github.com/colejaeger0)\n- **Ilay Eskinazi** [@Pixolino](https://github.com/Pixolino)\n- **Nathan Bornstein** [@greenteaisgreat](https://github.com/greenteaisgreat)\n\nPreVue 2.0\n\n- **Jason Boo** [@jasonboo123](https://github.com/jasonboo123)\n- **Robert Drake** [@rmdrake8](https://github.com/rmdrake8)\n- **Sean Flynn** [@seanflynn5](http://github.com/seanflynn5)\n- **Zach Pestaina** [@zachpestaina](https://github.com/zachpestaina)\n\nPreVue 1.0\n\n- **Hubert Lin** [@hubelin](https://github.com/hubelin)\n- **Franklin Pinnock** [@pinnockf](https://github.com/pinnockf)\n- **Annette Lin** [@al2613](https://github.com/al2613)\n- **Daniel Shu** [@danshuu](https://github.com/danshuu)\n\n## License\n\n---\n\n<p>This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details</p>\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/teamprevue/PreVue/pulls)\n![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 4.380859375,
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.8427734375,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\" />\n    <link rel=\"icon\" href=\"/src/assets/logo.png\" />\n\n    <link\n      rel=\"stylesheet\"\n      href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\"\n      integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\"\n      crossorigin=\"anonymous\"\n    />\n\n    <title>PreVue</title>\n  </head>\n\n  <body>\n    <noscript>\n      <strong\n        >We're sorry but prevue doesn't work properly without JavaScript\n        enabled. Please enable it to continue.</strong\n      >\n    </noscript>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n\n    <script type=\"module\" src=\"/src/main.ts\"></script>\n  </body>\n</html>\n"
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 0.619140625,
          "content": "module.exports = {\n  moduleFileExtensions: ['js', 'jsx', 'json', 'vue'],\n  transform: {\n    '^.+\\\\.vue$': 'vue-jest',\n    '.+\\\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$':\n      'jest-transform-stub',\n    '^.+\\\\.jsx?$': 'babel-jest',\n  },\n  transformIgnorePatterns: ['/node_modules/'],\n  moduleNameMapper: {\n    '^@/(.*)$': '<rootDir>/src/$1',\n  },\n  snapshotSerializers: ['jest-serializer-vue'],\n  testMatch: [\n    '**/tests/unit/**/*.spec.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)',\n  ],\n  testEnvironmentOptions: {\n    url: 'http://localhost:5174', // replace with your test URL\n  },\n  testEnvironment: 'node',\n};\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.3095703125,
          "content": "{\n  \"module\": {\n    \"type\": \"commonjs\"\n  },\n  \"name\": \"prevue\",\n  \"author\": \"teamprevue <prevueoslabs@gmail.com> (www.prevue.io)\",\n  \"version\": \"3.0.0\",\n  \"description\": \"Developer prototyping app built with Vue\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"serve\": \"vite preview\",\n    \"vite\": \"npm run server\",\n    \"server\": \"node server/server.js\",\n    \"test\": \"NODE_ENV=test vitest\",\n    \"coverage\": \"vitest run --coverage\",\n    \"start\": \"node server/server.js\"\n  },\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@he-tree/vue\": \"^2.2.7\",\n    \"@progress/jszip-esm\": \"^1.0.3\",\n    \"@ssthouse/vue3-tree-chart\": \"^0.2.6\",\n    \"axios\": \"^1.3.4\",\n    \"concurrently\": \"^7.6.0\",\n    \"connect-history-api-fallback\": \"^2.0.0\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.3.1\",\n    \"express\": \"^4.18.2\",\n    \"file-saver\": \"^2.0.5\",\n    \"fs-extra\": \"^7.0.1\",\n    \"handlebars\": \"^4.7.7\",\n    \"happy-dom\": \"^8.9.0\",\n    \"he-tree-vue\": \"^3.1.2\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongodb\": \"^5.1.0\",\n    \"mongodb-connection-string-url\": \"^2.6.0\",\n    \"mongoose\": \"^6.10.0\",\n    \"mousetrap\": \"^1.6.3\",\n    \"sass\": \"^1.58.3\",\n    \"vue\": \"^3.2.47\",\n    \"vue-multiselect\": \"^3.0.0-alpha.2\",\n    \"vue-router\": \"^4.1.6\",\n    \"vue-template-compiler\": \"^2.6.11\",\n    \"vue3-draggable-resizable\": \"^1.6.5\",\n    \"vued3tree\": \"^3.6.4\",\n    \"vuedraggable\": \"^4.1.0\",\n    \"vuetify\": \"^3.1.6\"\n  },\n  \"devDependencies\": {\n    \"@typescript-eslint/eslint-plugin\": \"^5.54.0\",\n    \"@typescript-eslint/parser\": \"^5.54.0\",\n    \"@vitejs/plugin-vue\": \"^4.0.0\",\n    \"@vue/eslint-config-prettier\": \"^4.0.1\",\n    \"@vue/test-utils\": \"^2.3.1\",\n    \"eslint\": \"^8.35.0\",\n    \"eslint-plugin-typescript\": \"^0.14.0\",\n    \"eslint-plugin-vue\": \"^8.7.1\",\n    \"jest\": \"^29.5.0\",\n    \"jsdom\": \"^21.1.0\",\n    \"sinon\": \"^15.0.1\",\n    \"supertest\": \"^6.3.3\",\n    \"typescript\": \"^4.9.5\",\n    \"vite\": \"^4.1.4\",\n    \"vitest\": \"^0.29.2\",\n    \"vue-eslint-parser\": \"^9.1.0\",\n    \"vue-template-compiler\": \"^2.5.21\",\n    \"vue-tsc\": \"^1.0.24\",\n    \"vuex\": \"^4.1.0\"\n  },\n  \"main\": \"background.js\",\n  \"directories\": {\n    \"test\": \"tests\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/oslabs-beta/PreVue.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/oslabs-beta/PreVue/issues\"\n  },\n  \"homepage\": \"https://github.com/oslabs-beta/PreVue#readme\"\n}"
        },
        {
          "name": "scrapcode.txt",
          "type": "blob",
          "size": 1.9208984375,
          "content": "<template>\n  <v-tabs>\n    <!-- v-tab-item component is used to define the content of a specific tab in a tab group  -->\n    <v-tab-item>\n      <!-- if the tab is in editMode, become a text field for project name entry -->\n      <v-tab v-if=\"editMode\" class=\"has-background-white tab-entry\">\n        <!-- if we're editing, bind editedProjectName state to text field -->\n        <!-- call onEdit when in edit mode -->\n        <!-- @blur event listener is used to handle the blur event on the v-text-field. \n          The onBlur method is called when the field loses focus \n          when the user clicks outside the field or presses the Tab key -->\n        <v-text-field v-model=\"editedProjectName\" @input=\"onEdit\" @blur=\"onBlur\" class=\"tab-entry\"/>\n      </v-tab>\n      <!-- if not already editing, click to edit and display project getter return val -->\n      <v-tab v-else @click=\"enterEditMode\" class=\"has-background-white tab-entry\">{{ editedProjectName }}</v-tab>\n    </v-tab-item>\n  </v-tabs>\n</template>\n\n<script>\n\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'ProjectTabs',\n  data() {\n    return {\n      // initial local state values\n      editMode: false,\n      editedProjectName: this.$store.state.editedProjectName,\n    };\n  },\n    methods: {\n    ...mapActions(['updateProjectName']),\n    // on click\n    enterEditMode() {\n      this.editMode = true;\n      this.editedProjectName = this.$store.state.editedProjectName;\n    },\n    onEdit(event) {\n      this.editedProjectName = event.target.value;\n    },\n    // Exit edit mode on blur\n    onBlur() {\n      this.editMode = false;\n      this.updateProjectName(this.editedProjectName);\n    console.log('this.editedProjectName is', this.editedProjectName);\n    console.log('this.$store.state.editedProjectName is', this.$store.state.editedProjectName);\n\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.has-background-white {\n  font-weight: 700;\n}\n\n.tab-entry {\n  width: 135px;\n}\n</style>\n\n\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.4580078125,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ESNext\",\n    \"useDefineForClassFields\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"jsx\": \"preserve\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"esModuleInterop\": true,\n    \"lib\": [\"ESNext\", \"DOM\"],\n    \"skipLibCheck\": true,\n    \"allowJs\": true\n  },\n  \"include\": [\"src/**/*.ts\", \"src/**/*.d.ts\", \"src/**/*.tsx\", \"src/**/*.vue\"],\n  \"references\": [{ \"path\": \"./tsconfig.node.json\" }]\n}\n"
        },
        {
          "name": "tsconfig.node.json",
          "type": "blob",
          "size": 0.1796875,
          "content": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"allowSyntheticDefaultImports\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}\n"
        },
        {
          "name": "vite.config.ts",
          "type": "blob",
          "size": 0.55078125,
          "content": "/// <reference types=\"vitest\" />\nimport { defineConfig } from 'vite';\nimport vue from '@vitejs/plugin-vue';\nimport checker from 'vite-plugin-checker';\nconst path = require('path');\nexport default defineConfig({\n  plugins: [vue()],\n  test: {\n    globals: true,\n    environment: 'jsdom'\n  },\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './src')\n    }\n  },\n  server: {\n    host: '0.0.0.0',\n    port: 4173,\n    proxy: {\n      '/users': {\n        target: 'http://localhost:8080',\n        changeOrigin: true,\n        secure: false\n      }\n    }\n  }\n});\n"
        }
      ]
    }
  ]
}