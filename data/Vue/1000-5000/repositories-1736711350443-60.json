{
  "metadata": {
    "timestamp": 1736711350443,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kevin2li/PDF-Guru",
      "stars": 2949,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.080078125,
          "content": "build/bin\nnode_modules\nfrontend/dist\n*.pdf\n*tmp*\n*log*\nconfig.json\ncmd_output.json"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7587890625,
          "content": "Copyright (c) 2023 Kevin Li. All Rights Reserved\n\n                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6083984375,
          "content": "# PDF Guru Anki  \n<p align=\"left\">\n <img src=\"./assets/logo.png\" align=\"middle\" width = \"200\"/>\n</p>\n\n<p align=\"left\">\n    <a href=\"./LICENSE\"><img src=\"https://img.shields.io/badge/license-AGPL%203-dfd.svg\"></a>\n    <a href=\"https://github.com/kevin2li/PDF-Guru/releases\"><img src=\"https://img.shields.io/github/v/release/kevin2li/PDF-Guru?color=ffa\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/python-3.10+-aff.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/go-1.20.5+-blue.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/node-16.18+-cyan.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/os-win%2C%20mac%2C%20linux-pink.svg\"></a>\n</p\n\n- [PDF Guru](#pdf-guru)\n  - [项目介绍](#项目介绍)\n  - [目标用户](#目标用户)\n  - [安装与使用教程](#安装与使用教程)\n  - [Star History](#star-history)\n  - [Authors](#authors)\n  - [License](#license)\n  - [Acknowledgments](#acknowledgments)\n\n> 国内用户可访问：https://gitee.com/Kevin234/PDF-Guru\n\n## 项目介绍\n\n**[PDF Guru Anki](https://guru.kevin2li.top/)** 是一款以PDF为中心的**多功能办公学习工具箱**软件，目前包含四大板块功能：\n1. **PDF实用工具箱**，包含PDF水印去除、PDF批量添加书签、PDF批量OCR、PDF转换等众多超实用功能。\n2. **Anki制卡神器**, 支持『PDF、Word、Xmind、幕布、Markdown、Excel、微信读书、欧陆词典』等众多类型材料快速制作Anki卡片，支持挖空题、问答题、选择题等常见题型批量制卡，有效解决Anki卡片制作过程繁杂、效率低下等问题，可以为用户节省大量时间来专注于学习本身。\n3. **Anki最强辅助**, 大幅拓展了Anki的周边功能，包含自建同步服务器、Anki卡片导出PDF、字段批量修改替换、批量添加发音、图片批量上传图床等众多实用功能，让您使用Anki更加得心应手。\n4. **视频笔记神器**, 支持边看视频边记笔记，方便快捷地在笔记中插入视频时间戳和视频截图，同时支持时间戳回链跳转，实现笔记高效记录和后期回顾，将做好的笔记搭配本软件的Anki制卡功能一键导入Anki，打造学习从记录归纳到复习背诵的完美闭环。\n\n一句话，本软件功能众多且强大，熟练运用可以大幅提高办公和学习效率，绝对是您不可多得的效率神器。人生苦短，我用Guru!\n\n<img src=\"https://minio.kevin2li.top/image-bed/wiki/20240710221415.png\"/>\n\n## 目标用户\n\n本软件受众非常广泛，理论上任何有**日常办公**和**学习备考**需要的人群都可从本软件中受益，极大提高办公和学习效率。\n\n具体来说，如果您符合下面中的一条及以上，那么这款软件适合您：\n\n### 办公人士\n\n本软件包含丰富的PDF处理功能，包括但不限于：\n\n- **PDF基础操作**：包含合并、拆分、调整页面顺序、旋转等各种功能，并且支持批量处理\n- **PDF去水印**：支持多种去水印方法，可去除大部分常见的水印，并且支持批量处理\n- **PDF书签**：支持快速添加PDF书签，支持从书签文件导入、自动识别等多种添加方式\n- **PDF转换**：支持PDF转图片、图片转PDF、PDF转Word等众多转换工具\n- **PDF批量OCR**: 快速识别提取PDF中的文字，支持批量识别\n- **双层PDF制作**：一键制作双层PDF，标书制作不再困难！\n\n### 学生群体\n\n学生的主要任务是学习和应对各类考试，小到期中期末考试，大到高考、研究生入学考试、公务员考试等等，无不需要进行大量的练习和反馈来达到良好的学习效果。Anki正是这样一款帮助您高效学习的软件，本软件提供了大量丰富的Anki制卡功能，可以从PDF、Word、思维导图等各类材料中批量导入Anki卡片，帮助您高效通过各类考试！\n\n部分功能举例：\n\n- **PDF制卡**：可以使用PDF批注功能边学习边做笔记，也可以对错题进行批注制作错题集，然后直接导入制卡，支持问答题和挖空题\n- **Word制卡**：可以使用PDF批注功能边学习边做笔记，然后直接导入制卡，支持问答题和挖空题\n- **思维导图制卡**：支持Xmind、幕布等导图软件直接转Anki卡片，支持问答题和挖空题\n- **单词制卡**：支持从PDF、欧陆词典、有道词典等来源转Anki卡片\n- **选择题批量制卡**：将选择题题库一键快速导入Anki，方便练习和巩固，快速掌握知识点\n- **微信读书制卡**：支持将微信读书笔记导入Anki，有效避免读书遗忘问题\n- **视频笔记**：利用视频笔记功能，快速插入时间戳和视频截图，并支持回链跳转回视频指定位置，做好的笔记也可以方便导入 Anki，方便后续复习。\n\n### 职场上班族\n\n可以使用本软件：\n- **快速掌握工作内容**，记忆工作相关的专业知识，高效掌握公司培训材料，助您快速适应工作内容！\n- **准备各类职业资格考试**，如会计证、法律职业资格考试等，提升在职场中的竞争力，升职加薪不是梦！\n- **提升自己学历**，如备考研究生考试等，让学历不再成为未来发展的瓶颈！\n- **准备公务员考试**，宇宙的尽头是考公，使用本软件帮您高效备考！\n\n\n### 家长群体\n\"**不要让孩子输在起跑线上**\"，当下越来越多的家长们开始重视孩子教育，尤其是小学和初中生家长。您可以使用本软件：\n- **制作识字卡片**，帮助孩子快速认识中国汉字的辨认和笔画书写\n- **制作英语单词卡片**，帮助孩子从小养成英语的语感\n- **制作习题集卡片**，帮助孩子高效掌握课本知识点\n\n### 教育工作者\n\n- **教师群体**：您可以将教学材料转换为Anki卡片，发放给学生学习巩固，提高学生学习效率！\n- **知识博主**：您可以使用本软件将自己熟悉的领域知识点(如考研各类资料)等，做成Anki牌组分享到网上，帮助别人快速掌握知识点，提升自己的影响力\n\n\n## 安装与使用教程\n\n详见软件官网：[https://guru.kevin2li.top/](https://guru.kevin2li.top/)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=kevin2li/PDF-Guru&type=Date)](https://star-history.com/#kevin2li/PDF-Guru&Date)\n\n## Authors\n\n[@Kevin2li](https://github.com/kevin2li)\n\n## License\n\nThis project is licensed under the AGPL-3.0 License - see the `LICENSE` file for details\n\n## Acknowledgments\n\n* [wails](https://github.com/wailsapp/wails)\n* [PyMuPDF](https://pymupdf.readthedocs.io/en/latest/)\n* [ReportLab](https://www.reportlab.com)\n* [PaddleOCR](https://github.com/PaddlePaddle/PaddleOCR)\n"
        },
        {
          "name": "annot.go",
          "type": "blob",
          "size": 0.626953125,
          "content": "package main\n\nfunc (a *App) AnnotParser(inFile string, outFile string, method string, annotTypes []string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, method: %s, annotTypes: %v, pages: %s\\n\", inFile, outFile, method, annotTypes, pages)\n\targs := []string{\"annot\"}\n\targs = append(args, inFile)\n\targs = append(args, \"--method\", method)\n\tif len(annotTypes) > 0 {\n\t\targs = append(args, \"--annot-types\")\n\t\targs = append(args, annotTypes...)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "app.go",
          "type": "blob",
          "size": 0.33203125,
          "content": "package main\n\nimport (\n\t\"context\"\n)\n\n// App struct\ntype App struct {\n\tctx context.Context\n}\n\n// NewApp creates a new App application struct\nfunc NewApp() *App {\n\treturn &App{}\n}\n\n// startup is called when the app starts. The context is saved\n// so we can call the runtime methods\nfunc (a *App) startup(ctx context.Context) {\n\ta.ctx = ctx\n}\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "background.go",
          "type": "blob",
          "size": 1.9169921875,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) AddPDFBackgroundByImage(inFile string, imgFile string, outFile string, opacity float32, angle float32, x_offset float32, y_offset float32, scale float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, imgFile: %s, opacity: %f, angle: %f, x_offset: %f, y_offset: %f, pages: %s\\n\", inFile, outFile, imgFile, opacity, angle, x_offset, y_offset, pages)\n\targs := []string{\"bg\", \"--type\", \"image\"}\n\tif imgFile != \"\" {\n\t\targs = append(args, \"--img-path\", imgFile)\n\t}\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%f\", angle))\n\targs = append(args, \"--x-offset\", fmt.Sprintf(\"%f\", x_offset))\n\targs = append(args, \"--y-offset\", fmt.Sprintf(\"%f\", y_offset))\n\targs = append(args, \"--scale\", fmt.Sprintf(\"%f\", scale))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) AddPDFBackgroundByColor(inFile string, outFile string, color string, opacity float32, angle float32, x_offset float32, y_offset float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, color: %s, opacity: %f, angle: %f, x_offset: %f, y_offset: %f, pages: %s\\n\", inFile, outFile, color, opacity, angle, x_offset, y_offset, pages)\n\targs := []string{\"bg\", \"--type\", \"color\"}\n\tif color != \"\" {\n\t\targs = append(args, \"--color\", color)\n\t}\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%f\", angle))\n\targs = append(args, \"--x-offset\", fmt.Sprintf(\"%f\", x_offset))\n\targs = append(args, \"--y-offset\", fmt.Sprintf(\"%f\", y_offset))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "bookmark.go",
          "type": "blob",
          "size": 5.0927734375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n)\n\nfunc (a *App) ExtractBookmark(inFile string, outFile string, format string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, format: %s\\n\", inFile, outFile, format)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"bookmark\", \"extract\"}\n\tif format != \"\" {\n\t\targs = append(args, \"--format\", format)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) WriteBookmarkByFile(inFile string, outFile string, tocFile string, offset int) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, tocFile: %s, offset: %d\\n\", inFile, outFile, tocFile, offset)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\tif _, err := os.Stat(tocFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"bookmark\", \"add\"}\n\tif tocFile != \"\" {\n\t\targs = append(args, \"--toc\", tocFile)\n\t}\n\tif offset != 0 {\n\t\targs = append(args, \"--offset\", fmt.Sprintf(\"%d\", offset))\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) WriteBookmarkByGap(inFile string, outFile string, gap int, format string, startNumber int, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, gap: %d\\n\", inFile, outFile, gap)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"bookmark\", \"add\", \"--method\", \"gap\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\targs = append(args, \"--start-number\", fmt.Sprintf(\"%d\", startNumber))\n\targs = append(args, \"--gap\", fmt.Sprintf(\"%d\", gap))\n\tif format != \"\" {\n\t\targs = append(args, \"--format\", format)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) TransformBookmark(inFile string, outFile string, addOffset int, levelDict []string, deleteLevelBelow int, defaultLevel int, isRemoveBlankLines bool) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, addOffset: %d, levelDict: %v, deleteLevelBelow: %d\\n\", inFile, outFile, addOffset, levelDict, deleteLevelBelow)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"bookmark\", \"transform\"}\n\targs = append(args, \"--delete-level-below\", fmt.Sprintf(\"%d\", deleteLevelBelow))\n\tfor _, level := range levelDict {\n\t\targs = append(args, \"--level-dict\", level)\n\t}\n\tif addOffset != 0 {\n\t\targs = append(args, \"--add_offset\", fmt.Sprintf(\"%d\", addOffset))\n\t}\n\targs = append(args, \"--default-level\", fmt.Sprintf(\"%d\", defaultLevel))\n\tif isRemoveBlankLines {\n\t\targs = append(args, \"--remove-blank-lines\")\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, \"--toc\", inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) DetectBookmarkByFont(\n\tinFile string,\n\toutFile string,\n\tpages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s\\n\", inFile, outFile, pages)\n\targs := []string{\"bookmark\", \"detect\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) OCR(inFile string, outFile string, pages string, lang string, doubleColumn bool) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s, lang: %s, doubleColumn: %v\\n\", inFile, outFile, pages, lang, doubleColumn)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\t// path := filepath.Join(tmpDir, \"ocr.py\")\n\tpath, err := os.Executable()\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\tpath = filepath.Join(filepath.Dir(path), \"ocr.py\")\n\targs := []string{path, \"ocr\"}\n\tif lang != \"\" {\n\t\targs = append(args, \"--lang\", lang)\n\t}\n\tif doubleColumn {\n\t\targs = append(args, \"--use-double-column\")\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"python\")\n}\n\nfunc (a *App) OCRPDFBookmark(inFile string, outFile string, pages string, lang string, doubleColumn bool) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s, lang: %s, doubleColumn: %v\\n\", inFile, outFile, pages, lang, doubleColumn)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\t// path := filepath.Join(tmpDir, \"ocr.py\")\n\tpath, err := os.Executable()\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\tpath = filepath.Join(filepath.Dir(path), \"ocr.py\")\n\targs := []string{path, \"bookmark\"}\n\tif lang != \"\" {\n\t\targs = append(args, \"--lang\", lang)\n\t}\n\tif doubleColumn {\n\t\targs = append(args, \"--double-column\")\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"python\")\n}\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd_output_unix.go",
          "type": "blob",
          "size": 2.609375,
          "content": "//go:build darwin || linux\n\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\n\t\"github.com/pkg/errors\"\n)\n\ntype CmdOutput struct {\n\tStatus  string `json:\"status\"`\n\tMessage string `json:\"message\"`\n}\n\nfunc GetCmdStatusAndMessage(cmd *exec.Cmd, cmdType string) error {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tlogger.Fatalln(err)\n\t\t}\n\t}()\n\n\tout, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\t// err = errors.Wrap(err, \"get cmd output error! \\n args: \"+strings.Join(cmd.Args, \" \")+\"\\n stderr: \"+string(err.(*exec.ExitError).Stderr))\n\t\terr = errors.Wrap(err, \"命令执行失败!\"+string(out))\n\t\tlogger.Errorln(\"Error:\", err)\n\n\t\treturn err\n\t}\n\tlogger.Println(string(out))\n\n\tif cmdType == \"pdf\" {\n\t\tret_path := filepath.Join(logdir, \"cmd_output.json\")\n\t\tvar ret CmdOutput\n\t\tdata, err := os.ReadFile(ret_path)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"read cmd output file error\")\n\t\t\treturn err\n\t\t}\n\t\terr = json.Unmarshal(data, &ret)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"json umarshal error\")\n\t\t\treturn err\n\t\t}\n\n\t\tif ret.Status != \"success\" {\n\t\t\tlogger.Errorf(\"Error: %v\\n\", ret.Message)\n\t\t\treturn errors.New(ret.Message)\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc (a *App) cmdRunner(args []string, cmdType string) error {\n\tconfig, err := a.LoadConfig()\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn err\n\t}\n\tvar cmd *exec.Cmd\n\tif cmdType == \"pdf\" {\n\t\tcmd = exec.Command(config.PdfPath, args...)\n\t} else if cmdType == \"python\" {\n\t\terr = a.CheckFileExists(config.PythonPath)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcmd = exec.Command(config.PythonPath, args...)\n\t} else if cmdType == \"pandoc\" {\n\t\tpath := config.PandocPath\n\t\terr = a.CheckFileExists(config.PandocPath)\n\t\tif err != nil {\n\t\t\tpandoc_path, err := exec.LookPath(\"pandoc.exe\")\n\t\t\tif err != nil {\n\t\t\t\terr = errors.Wrap(err, \"pandoc not found!\")\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tpath = pandoc_path\n\t\t}\n\t\tcmd = exec.Command(path, args...)\n\t} else if cmdType == \"tesseract\" {\n\t\tpath := config.TesseractPath\n\t\terr = a.CheckFileExists(config.TesseractPath)\n\t\tif err != nil {\n\t\t\ttesseract_path, err := exec.LookPath(\"tesseract.exe\")\n\t\t\tif err != nil {\n\t\t\t\terr = errors.Wrap(err, \"tesseract not found!\")\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tpath = tesseract_path\n\t\t}\n\t\tcmd = exec.Command(path, args...)\n\t} else if cmdType == \"hashcat\" {\n\t\terr = a.CheckFileExists(config.HashcatPath)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"hashcat not found!\")\n\t\t\treturn err\n\t\t}\n\t\tcmd = exec.Command(config.HashcatPath, args...)\n\t} else {\n\t\terr = errors.Wrap(err, \"unsupport cmd type!\")\n\t\treturn err\n\t}\n\terr = GetCmdStatusAndMessage(cmd, cmdType)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn err\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "cmd_output_win.go",
          "type": "blob",
          "size": 2.71484375,
          "content": "//go:build windows\n\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"os\"\n\t\"os/exec\"\n\t\"path/filepath\"\n\t\"syscall\"\n\n\t\"github.com/pkg/errors\"\n)\n\ntype CmdOutput struct {\n\tStatus  string `json:\"status\"`\n\tMessage string `json:\"message\"`\n}\n\nfunc GetCmdStatusAndMessage(cmd *exec.Cmd, cmdType string) error {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tlogger.Fatalln(err)\n\t\t}\n\t}()\n\tcmd.SysProcAttr = &syscall.SysProcAttr{HideWindow: true}\n\n\tout, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\t// err = errors.Wrap(err, \"get cmd output error! \\n args: \"+strings.Join(cmd.Args, \" \")+\"\\n stderr: \"+string(err.(*exec.ExitError).Stderr))\n\t\terr = errors.Wrap(err, \"命令执行失败!\"+string(out))\n\t\tlogger.Errorln(\"Error:\", err)\n\n\t\treturn err\n\t}\n\tlogger.Println(string(out))\n\n\tif cmdType == \"pdf\" {\n\t\tret_path := filepath.Join(logdir, \"cmd_output.json\")\n\t\tvar ret CmdOutput\n\t\tdata, err := os.ReadFile(ret_path)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"read cmd output file error\")\n\t\t\treturn err\n\t\t}\n\t\terr = json.Unmarshal(data, &ret)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"json umarshal error\")\n\t\t\treturn err\n\t\t}\n\n\t\tif ret.Status != \"success\" {\n\t\t\tlogger.Errorf(\"Error: %v\\n\", ret.Message)\n\t\t\treturn errors.New(ret.Message)\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc (a *App) cmdRunner(args []string, cmdType string) error {\n\tconfig, err := a.LoadConfig()\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn err\n\t}\n\tvar cmd *exec.Cmd\n\tif cmdType == \"pdf\" {\n\t\tcmd = exec.Command(config.PdfPath, args...)\n\t} else if cmdType == \"python\" {\n\t\terr = a.CheckFileExists(config.PythonPath)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"python not found!\")\n\t\t\treturn err\n\t\t}\n\t\tcmd = exec.Command(config.PythonPath, args...)\n\t} else if cmdType == \"pandoc\" {\n\t\tpath := config.PandocPath\n\t\terr = a.CheckFileExists(config.PandocPath)\n\t\tif err != nil {\n\t\t\tpandoc_path, err := exec.LookPath(\"pandoc.exe\")\n\t\t\tif err != nil {\n\t\t\t\terr = errors.Wrap(err, \"pandoc not found!\")\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tpath = pandoc_path\n\t\t}\n\t\tcmd = exec.Command(path, args...)\n\t} else if cmdType == \"tesseract\" {\n\t\tpath := config.TesseractPath\n\t\terr = a.CheckFileExists(config.TesseractPath)\n\t\tif err != nil {\n\t\t\ttesseract_path, err := exec.LookPath(\"tesseract.exe\")\n\t\t\tif err != nil {\n\t\t\t\terr = errors.Wrap(err, \"tesseract not found!\")\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tpath = tesseract_path\n\t\t}\n\t\tcmd = exec.Command(path, args...)\n\t} else if cmdType == \"hashcat\" {\n\t\terr = a.CheckFileExists(config.HashcatPath)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"hashcat not found!\")\n\t\t\treturn err\n\t\t}\n\t\tcmd = exec.Command(config.HashcatPath, args...)\n\t} else {\n\t\terr = errors.Wrap(err, \"unsupport cmd type!\")\n\t\treturn err\n\t}\n\terr = GetCmdStatusAndMessage(cmd, cmdType)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn err\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "compress.go",
          "type": "blob",
          "size": 0.71484375,
          "content": "package main\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/pdfcpu/pdfcpu/pkg/api\"\n\t\"github.com/pdfcpu/pdfcpu/pkg/pdfcpu/model\"\n\t\"github.com/pkg/errors\"\n)\n\nfunc (a *App) CompressPDF(inFile string, outFile string) error {\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\tconf := model.NewDefaultConfiguration()\n\tif outFile == \"\" {\n\t\tparent := filepath.Dir(inFile)\n\t\tfileExt := filepath.Ext(inFile)\n\t\tfileName := filepath.Base(inFile)\n\t\tfileNameWithoutExt := fileName[:len(fileName)-len(fileExt)]\n\t\toutFile = filepath.Join(parent, fileNameWithoutExt+\"_压缩.pdf\")\n\t}\n\terr := api.OptimizeFile(inFile, outFile, conf)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn err\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "config.go",
          "type": "blob",
          "size": 2.6513671875,
          "content": "package main\n\nimport (\n\t\"encoding/json\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\n\t\"github.com/pkg/errors\"\n)\n\ntype MyConfig struct {\n\tPdfPath       string `json:\"pdf_path\"`\n\tPythonPath    string `json:\"python_path\"`\n\tTesseractPath string `json:\"tesseract_path\"`\n\tPandocPath    string `json:\"pandoc_path\"`\n\tHashcatPath   string `json:\"hashcat_path\"`\n}\n\nfunc (a *App) SaveConfig(pdfPath string, pythonPath string, tesseractPath string, pandocPath string, hashcatPath string) error {\n\tvar config MyConfig\n\tconfig.PdfPath = pdfPath\n\tconfig.PythonPath = pythonPath\n\tconfig.TesseractPath = tesseractPath\n\tconfig.PandocPath = pandocPath\n\tconfig.HashcatPath = hashcatPath\n\tlog.Printf(\"%v\\n\", config)\n\tjsonData, err := json.Marshal(config)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"marshal config error\")\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\t// 获取配置文件路径\n\tpath, err := os.Executable()\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\tlogger.Errorln(\"Error:\", err)\n\t\treturn err\n\t}\n\n\tconfigPath := filepath.Join(filepath.Dir(path), \"config.json\")\n\tif runtime.GOOS == \"darwin\" {\n\t\tconfigPath = filepath.Join(filepath.Dir(filepath.Dir(filepath.Dir(filepath.Dir(path)))), \"config.json\")\n\t} else if runtime.GOOS == \"linux\" {\n\t\tconfigPath = filepath.Join(filepath.Dir(path), \"config.json\")\n\t}\n\terr = os.WriteFile(configPath, jsonData, 0644)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\tlogger.Errorln(\"Error:\", err)\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (a *App) LoadConfig() (MyConfig, error) {\n\tvar config MyConfig\n\n\t// 获取配置文件路径\n\tpath, err := os.Executable()\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\tlogger.Errorln(\"Error:\", err)\n\t\treturn config, err\n\t}\n\n\tconfigPath := filepath.Join(filepath.Dir(path), \"config.json\")\n\tif runtime.GOOS == \"darwin\" {\n\t\tconfigPath = filepath.Join(filepath.Dir(filepath.Dir(filepath.Dir(filepath.Dir(path)))), \"config.json\")\n\t}\n\tif _, err := os.Stat(configPath); os.IsNotExist(err) {\n\t\tpath, err := os.Executable()\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"\")\n\t\t\tlogger.Errorln(\"Error:\", err)\n\t\t\treturn config, err\n\t\t}\n\t\tpdfPath := filepath.Join(filepath.Dir(path), \"pdf.exe\")\n\t\tif runtime.GOOS == \"darwin\" {\n\t\t\tpdfPath = filepath.Join(filepath.Dir(filepath.Dir(filepath.Dir(filepath.Dir(path)))), \"pdf\")\n\t\t} else if runtime.GOOS == \"linux\" {\n\t\t\tpdfPath = filepath.Join(filepath.Dir(path), \"pdf\")\n\t\t}\n\t\terr = a.SaveConfig(pdfPath, \"\", \"\", \"\", \"\")\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"\")\n\t\t\treturn config, err\n\t\t}\n\t}\n\tdata, err := os.ReadFile(configPath)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn config, err\n\t}\n\terr = json.Unmarshal(data, &config)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\treturn config, err\n\t}\n\treturn config, nil\n}\n"
        },
        {
          "name": "convert.go",
          "type": "blob",
          "size": 2.3115234375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\t\"github.com/pkg/errors\"\n)\n\nfunc (a *App) PDFConversion(\n\tinFileList []string,\n\toutFile string,\n\tdpi int,\n\tisMerge bool,\n\tsortMethod string,\n\tsortDirection string,\n\tsrcType string,\n\tdstType string,\n\tpaperSize string,\n\torientation string,\n\tpages string) error {\n\tlogger.Printf(\"inFileList: %v, outFile: %s, dpi: %d, isMerge: %v, sortMethod: %s, sortDirection: %s, srcType: %s, dstType: %s, pages: %s\\n\", inFileList, outFile, dpi, isMerge, sortMethod, sortDirection, srcType, dstType, pages)\n\targs := []string{\"convert\", \"--source-type\", srcType, \"--target-type\", dstType}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif (srcType == \"pdf\" && dstType == \"png\") || (srcType == \"pdf\" && dstType == \"svg\") || (srcType == \"pdf\" && dstType == \"image-pdf\") {\n\t\targs = append(args, \"--dpi\", fmt.Sprintf(\"%d\", dpi))\n\t}\n\tif isMerge {\n\t\targs = append(args, \"--is_merge\")\n\t}\n\tif sortMethod != \"\" {\n\t\targs = append(args, \"--sort-method\", sortMethod)\n\t}\n\tif sortDirection != \"\" {\n\t\targs = append(args, \"--sort-direction\", sortDirection)\n\t}\n\tif paperSize != \"\" {\n\t\targs = append(args, \"--paper-size\", paperSize)\n\t}\n\tif orientation != \"\" {\n\t\targs = append(args, \"--orientation\", orientation)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFileList...)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ConvertPDF2Docx(\n\tinFile string,\n\toutFile string,\n) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s\\n\", inFile, outFile)\n\tpath, err := os.Executable()\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"\")\n\t\tlogger.Errorln(\"Error:\", err)\n\t\treturn err\n\t}\n\tpath = filepath.Join(filepath.Dir(path), \"convert.py\")\n\targs := []string{path, \"--source-type\", \"pdf\", \"--target-type\", \"docx\"}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"python\")\n}\n\n// Pandoc convert\n\nfunc (a *App) PandocConvert(\n\tinFile string,\n\toutFile string,\n\tdstType string,\n) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, dstType: %s\\n\", inFile, outFile, dstType)\n\tif outFile == \"\" {\n\t\toutFile = strings.TrimSuffix(inFile, filepath.Ext(inFile)) + dstType\n\t}\n\targs := []string{\"-s\", \"-t\", dstType[1:], \"-o\", outFile, inFile}\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pandoc\")\n}\n"
        },
        {
          "name": "crop.go",
          "type": "blob",
          "size": 1.984375,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) CropPDFByBBOX(inFile string, outFile string, bbox []float32, unit string, keepSize bool, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, bbox: %v, unit: %s, keepSize: %v, pages: %s\\n\", inFile, outFile, bbox, unit, keepSize, pages)\n\targs := []string{\"crop\", \"--method\", \"bbox\"}\n\targs = append(args, \"--bbox\")\n\tfor _, v := range bbox {\n\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif keepSize {\n\t\targs = append(args, \"--keep_size\")\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) CropPDFByMargin(inFile string, outFile string, margin []float32, unit string, keepSize bool, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, margin: %v, unit: %s, keepSize: %v, pages: %s\\n\", inFile, outFile, margin, unit, keepSize, pages)\n\targs := []string{\"crop\", \"--method\", \"margin\"}\n\targs = append(args, \"--margin\")\n\tfor _, v := range margin {\n\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif keepSize {\n\t\targs = append(args, \"--keep_size\")\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) CropPDFByRectAnnots(inFile string, outFile string, keepSize bool, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, keepSize: %v, pages: %s\\n\", inFile, outFile, keepSize, pages)\n\targs := []string{\"crop\", \"--method\", \"annot\"}\n\tif keepSize {\n\t\targs = append(args, \"--keep_size\")\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}"
        },
        {
          "name": "cut_and_combine.go",
          "type": "blob",
          "size": 2.2099609375,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) CutPDFByGrid(inFile string, outFile string, row int, col int, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, row: %d, col: %d, pages: %s\\n\", inFile, outFile, row, col, pages)\n\targs := []string{\"cut\", \"--method\", \"grid\"}\n\targs = append(args, \"--nrow\", fmt.Sprintf(\"%d\", row))\n\targs = append(args, \"--ncol\", fmt.Sprintf(\"%d\", col))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) CutPDFByBreakpoints(inFile string, outFile string, HBreakpoints []float32, VBreakpoints []float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, HBreakpoints: %v, VBreakpoints: %v, pages: %s\\n\", inFile, outFile, HBreakpoints, VBreakpoints, pages)\n\targs := []string{\"cut\", \"--method\", \"breakpoints\"}\n\targs = append(args, inFile)\n\tif len(HBreakpoints) > 0 {\n\t\targs = append(args, \"--h_breakpoints\")\n\t\tfor _, v := range HBreakpoints {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif len(VBreakpoints) > 0 {\n\t\targs = append(args, \"--v_breakpoints\")\n\t\tfor _, v := range VBreakpoints {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) CombinePDFByGrid(inFile string, outFile string, row int, col int, pages string, paperSize string, orientation string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, row: %d, col: %d, pages: %s, paperSize: %s, orientation: %s\\n\", inFile, outFile, row, col, pages, paperSize, orientation)\n\targs := []string{\"combine\"}\n\targs = append(args, \"--nrow\", fmt.Sprintf(\"%d\", row))\n\targs = append(args, \"--ncol\", fmt.Sprintf(\"%d\", col))\n\tif paperSize != \"\" {\n\t\targs = append(args, \"--paper_size\", paperSize)\n\t}\n\tif orientation != \"\" {\n\t\targs = append(args, \"--orientation\", orientation)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "delete.go",
          "type": "blob",
          "size": 0.400390625,
          "content": "package main\n\nfunc (a *App) DeletePDF(inFile string, outFile string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s\\n\", inFile, outFile, pages)\n\targs := []string{\"delete\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "dual_layer.go",
          "type": "blob",
          "size": 0.525390625,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) MakeDualLayerPDF(\n\tinFile string,\n\toutFile string,\n\tdpi int,\n\tpages string,\n\tlang string,\n) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, dpi: %d, pages: %s, lang: %s\\n\", inFile, outFile, dpi, pages, lang)\n\targs := []string{\"dual\", \"--dpi\", fmt.Sprintf(\"%d\", dpi), \"--lang\", lang}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "encrypt.go",
          "type": "blob",
          "size": 1.884765625,
          "content": "package main\n\nimport \"os\"\n\nfunc (a *App) EncryptPDF(inFile string, outFile string, upw string, opw string, perm []string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, upw: %s, opw: %s, perm: %v\\n\", inFile, outFile, upw, opw, perm)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"encrypt\"}\n\tif len(perm) > 0 {\n\t\targs = append(args, \"--perm\")\n\t\targs = append(args, perm...)\n\t}\n\tif upw != \"\" {\n\t\targs = append(args, \"--user_password\", upw)\n\t}\n\tif opw != \"\" {\n\t\targs = append(args, \"--owner_password\", opw)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) DecryptPDF(inFile string, outFile string, passwd string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, passwd: %s\\n\", inFile, outFile, passwd)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"decrypt\"}\n\tif passwd != \"\" {\n\t\targs = append(args, \"--password\", passwd)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ChangePasswordPDF(inFile string, outFile string, oldUpw string, upw string, oldOpw string, opw string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, oldUpw: %s, upw: %s, oldOpw: %s, opw: %s\\n\", inFile, outFile, oldUpw, upw, oldOpw, opw)\n\targs := []string{\"change_password\"}\n\tif oldUpw != \"\" {\n\t\targs = append(args, \"--old_user_password\", oldUpw)\n\t}\n\tif upw != \"\" {\n\t\targs = append(args, \"--user_password\", upw)\n\t}\n\tif oldOpw != \"\" {\n\t\targs = append(args, \"--old_owner_password\", oldOpw)\n\t}\n\tif opw != \"\" {\n\t\targs = append(args, \"--owner_password\", opw)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "extract.go",
          "type": "blob",
          "size": 1.3583984375,
          "content": "package main\n\nfunc (a *App) ExtractTextFromPDF(inFile string, outFile string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s\\n\", inFile, outFile, pages)\n\targs := []string{\"extract\", \"--type\", \"text\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ExtractImageFromPDF(inFile string, outFile string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s\\n\", inFile, outFile, pages)\n\targs := []string{\"extract\", \"--type\", \"image\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) OCRExtract(inFile string, outFile string, pages string, extractType string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s, extractType: %s\\n\", inFile, outFile, pages, extractType)\n\targs := []string{\"ocr\", \"extract\"}\n\tif extractType != \"\" {\n\t\targs = append(args, \"--type\", extractType)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"python\")\n}\n"
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 1.578125,
          "content": "module pdfguru\n\ngo 1.20\n\nrequire (\n\tgithub.com/pdfcpu/pdfcpu v0.4.1\n\tgithub.com/pkg/errors v0.9.1\n\tgithub.com/sirupsen/logrus v1.9.3\n\tgithub.com/wailsapp/wails/v2 v2.5.1\n)\n\nrequire (\n\tgithub.com/bep/debounce v1.2.1 // indirect\n\tgithub.com/go-ole/go-ole v1.2.6 // indirect\n\tgithub.com/google/uuid v1.1.2 // indirect\n\tgithub.com/hhrutter/lzw v1.0.0 // indirect\n\tgithub.com/hhrutter/tiff v1.0.0 // indirect\n\tgithub.com/jchv/go-winloader v0.0.0-20210711035445-715c2860da7e // indirect\n\tgithub.com/labstack/echo/v4 v4.9.0 // indirect\n\tgithub.com/labstack/gommon v0.3.1 // indirect\n\tgithub.com/leaanthony/go-ansi-parser v1.0.1 // indirect\n\tgithub.com/leaanthony/gosod v1.0.3 // indirect\n\tgithub.com/leaanthony/slicer v1.5.0 // indirect\n\tgithub.com/mattn/go-colorable v0.1.11 // indirect\n\tgithub.com/mattn/go-isatty v0.0.14 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.14 // indirect\n\tgithub.com/pkg/browser v0.0.0-20210706143420-7d21f8c997e2 // indirect\n\tgithub.com/rivo/uniseg v0.4.4 // indirect\n\tgithub.com/samber/lo v1.27.1 // indirect\n\tgithub.com/tkrajina/go-reflector v0.5.5 // indirect\n\tgithub.com/valyala/bytebufferpool v1.0.0 // indirect\n\tgithub.com/valyala/fasttemplate v1.2.1 // indirect\n\tgithub.com/wailsapp/mimetype v1.4.1 // indirect\n\tgolang.org/x/crypto v0.1.0 // indirect\n\tgolang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17 // indirect\n\tgolang.org/x/image v0.5.0 // indirect\n\tgolang.org/x/net v0.7.0 // indirect\n\tgolang.org/x/sys v0.5.0 // indirect\n\tgolang.org/x/text v0.7.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n)\n\n// replace github.com/wailsapp/wails/v2 v2.5.1 => C:\\Users\\kevin\\go\\pkg\\mod\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 10.5625,
          "content": "github.com/bep/debounce v1.2.1 h1:v67fRdBA9UQu2NhLFXrSg0Brw7CexQekrBwDMM8bzeY=\ngithub.com/bep/debounce v1.2.1/go.mod h1:H8yggRPQKLUhUoqrJC1bO2xNya7vanpDl7xR3ISbCJ0=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/google/uuid v1.1.2 h1:EVhdT+1Kseyi1/pUmXKaFxYsDNy9RQYkMWRH68J/W7Y=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/hhrutter/lzw v1.0.0 h1:laL89Llp86W3rRs83LvKbwYRx6INE8gDn0XNb1oXtm0=\ngithub.com/hhrutter/lzw v1.0.0/go.mod h1:2HC6DJSn/n6iAZfgM3Pg+cP1KxeWc3ezG8bBqW5+WEo=\ngithub.com/hhrutter/tiff v1.0.0 h1:T8/QVXiABO6Er7XCoExh4XPGyMO+X1ynf0V8kHui3t4=\ngithub.com/hhrutter/tiff v1.0.0/go.mod h1:zluYmeCkNexc8HFzfc2MTVwA8gcPuFQp/ngjvIQ0CFo=\ngithub.com/jchv/go-winloader v0.0.0-20210711035445-715c2860da7e h1:Q3+PugElBCf4PFpxhErSzU3/PY5sFL5Z6rfv4AbGAck=\ngithub.com/jchv/go-winloader v0.0.0-20210711035445-715c2860da7e/go.mod h1:alcuEEnZsY1WQsagKhZDsoPCRoOijYqhZvPwLG0kzVs=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/labstack/echo/v4 v4.9.0 h1:wPOF1CE6gvt/kmbMR4dGzWvHMPT+sAEUJOwOTtvITVY=\ngithub.com/labstack/echo/v4 v4.9.0/go.mod h1:xkCDAdFCIf8jsFQ5NnbK7oqaF/yU1A1X20Ltm0OvSks=\ngithub.com/labstack/gommon v0.3.1 h1:OomWaJXm7xR6L1HmEtGyQf26TEn7V6X88mktX9kee9o=\ngithub.com/labstack/gommon v0.3.1/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=\ngithub.com/leaanthony/debme v1.2.1 h1:9Tgwf+kjcrbMQ4WnPcEIUcQuIZYqdWftzZkBr+i/oOc=\ngithub.com/leaanthony/debme v1.2.1/go.mod h1:3V+sCm5tYAgQymvSOfYQ5Xx2JCr+OXiD9Jkw3otUjiA=\ngithub.com/leaanthony/go-ansi-parser v1.0.1 h1:97v6c5kYppVsbScf4r/VZdXyQ21KQIfeQOk2DgKxGG4=\ngithub.com/leaanthony/go-ansi-parser v1.0.1/go.mod h1:7arTzgVI47srICYhvgUV4CGd063sGEeoSlych5yeSPM=\ngithub.com/leaanthony/gosod v1.0.3 h1:Fnt+/B6NjQOVuCWOKYRREZnjGyvg+mEhd1nkkA04aTQ=\ngithub.com/leaanthony/gosod v1.0.3/go.mod h1:BJ2J+oHsQIyIQpnLPjnqFGTMnOZXDbvWtRCSG7jGxs4=\ngithub.com/leaanthony/slicer v1.5.0 h1:aHYTN8xbCCLxJmkNKiLB6tgcMARl4eWmH9/F+S/0HtY=\ngithub.com/leaanthony/slicer v1.5.0/go.mod h1:FwrApmf8gOrpzEWM2J/9Lh79tyq8KTX5AzRtwV7m4AY=\ngithub.com/matryer/is v1.4.0 h1:sosSmIWwkYITGrxZ25ULNDeKiMNzFSr4V/eqBQP0PeE=\ngithub.com/matryer/is v1.4.0/go.mod h1:8I/i5uYgLzgsgEloJE1U6xx5HkBQpAZvepWuujKwMRU=\ngithub.com/mattn/go-colorable v0.1.11 h1:nQ+aFkoE2TMGc0b68U2OKSexC+eq46+XwZzWXHRmPYs=\ngithub.com/mattn/go-colorable v0.1.11/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=\ngithub.com/mattn/go-isatty v0.0.14 h1:yVuAays6BHfxijgZPzw+3Zlu5yQgKGP2/hcQbHb7S9Y=\ngithub.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=\ngithub.com/mattn/go-runewidth v0.0.14 h1:+xnbZSEeDbOIg5/mE6JF0w6n9duR1l3/WmbinWVwUuU=\ngithub.com/mattn/go-runewidth v0.0.14/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/pdfcpu/pdfcpu v0.4.1 h1:oKgcST93zXdq1vE+B8dQBlE8S7WqsBVgkLxg82M3Fgk=\ngithub.com/pdfcpu/pdfcpu v0.4.1/go.mod h1:MojCBFW2uljNs3CBmyTDeFAvu7vI1LrJhWNMCjY3kg4=\ngithub.com/pkg/browser v0.0.0-20210706143420-7d21f8c997e2 h1:acNfDZXmm28D2Yg/c3ALnZStzNaZMSagpbr96vY6Zjc=\ngithub.com/pkg/browser v0.0.0-20210706143420-7d21f8c997e2/go.mod h1:HKlIX3XHQyzLZPlr7++PzdhaXEj94dEiJgZDTsxEqUI=\ngithub.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=\ngithub.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=\ngithub.com/rivo/uniseg v0.4.4 h1:8TfxU8dW6PdqD27gjM8MVNuicgxIjxpm4K7x4jp8sis=\ngithub.com/rivo/uniseg v0.4.4/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=\ngithub.com/samber/lo v1.27.1 h1:sTXwkRiIFIQG+G0HeAvOEnGjqWeWtI9cg5/n51KrxPg=\ngithub.com/samber/lo v1.27.1/go.mod h1:it33p9UtPMS7z72fP4gw/EIfQB2eI8ke7GR2wc6+Rhg=\ngithub.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=\ngithub.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0 h1:pSgiaMZlXftHpm5L7V1+rVB+AZJydKsMxsQBIJw4PKk=\ngithub.com/thoas/go-funk v0.9.1 h1:O549iLZqPpTUQ10ykd26sZhzD+rmR5pWhuElrhbC20M=\ngithub.com/tkrajina/go-reflector v0.5.5 h1:gwoQFNye30Kk7NrExj8zm3zFtrGPqOkzFMLuQZg1DtQ=\ngithub.com/tkrajina/go-reflector v0.5.5/go.mod h1:ECbqLgccecY5kPmPmXg1MrHW585yMcDkVl6IvJe64T4=\ngithub.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=\ngithub.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=\ngithub.com/valyala/fasttemplate v1.2.1 h1:TVEnxayobAdVkhQfrfes2IzOB6o+z4roRkPF52WA1u4=\ngithub.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=\ngithub.com/wailsapp/mimetype v1.4.1 h1:pQN9ycO7uo4vsUUuPeHEYoUkLVkaRntMnHJxVwYhwHs=\ngithub.com/wailsapp/mimetype v1.4.1/go.mod h1:9aV5k31bBOv5z6u+QP8TltzvNGJPmNJD4XlAL3U+j3o=\ngithub.com/wailsapp/wails/v2 v2.5.1 h1:mfG+2kWqQXYOwdgI43HEILjOZDXbk5woPYI3jP2b+js=\ngithub.com/wailsapp/wails/v2 v2.5.1/go.mod h1:jbOZbcr/zm79PxXxAjP8UoVlDd9wLW3uDs+isIthDfs=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.1.0 h1:MDRAIl0xIo9Io2xV565hzXHw3zVseKrJKodhohM5CjU=\ngolang.org/x/crypto v0.1.0/go.mod h1:RecgLatLF4+eUMCP1PoPZQb+cVrJcOPbHkTkbkB9sbw=\ngolang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17 h1:3MTrJm4PyNL9NBqvYDSj3DHl46qQakyfqfWo4jgfaEM=\ngolang.org/x/exp v0.0.0-20220303212507-bbda1eaf7a17/go.mod h1:lgLbSvA5ygNOMpwM/9anMpWVlVJ7Z+cHWq/eFuinpGE=\ngolang.org/x/image v0.5.0 h1:5JMiNunQeQw++mMOz48/ISeNu3Iweh/JaZU8ZLqHRrI=\ngolang.org/x/image v0.5.0/go.mod h1:FVC7BI/5Ym8R25iw5OLsgshdUBbT1h5jZTpA+mvAdZ4=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210505024714-0287a6fb4125/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.7.0 h1:rJrUqqhjsgNp7KqAIc25s9pZnjU7TUcSY7HcVZjdn1g=\ngolang.org/x/net v0.7.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200810151505-1b9f1253b3ed/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210616045830-e2b7044e8c71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.5.0 h1:MUK/U/4lj1t1oPg0HfuXDN/Z1wv31ZJ/YcPiGccS4DU=\ngolang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.7.0 h1:4BRB4x83lYWy72KwLD/qYDuTu7q9PjSagHvijDw7cLo=\ngolang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\n"
        },
        {
          "name": "header_and_footer.go",
          "type": "blob",
          "size": 2.91015625,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) AddPDFHeaderAndFooter(\n\tinFile string,\n\toutFile string,\n\theader_left string,\n\theader_center string,\n\theader_right string,\n\tfooter_left string,\n\tfooter_center string,\n\tfooter_right string,\n\tmargin_bbox []float32,\n\tunit string,\n\tfont_family string,\n\tfont_size int,\n\tfont_color string,\n\topacity float32,\n\tpages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, header_left: %s, header_center: %s, header_right: %s, footer_left: %s, footer_center: %s, footer_right: %s, margin_bbox: %v, unit: %s, font_family: %s, font_size: %d, font_color: %s, opacity: %f, pages: %s\\n\", inFile, outFile, header_left, header_center, header_right, footer_left, footer_center, footer_right, margin_bbox, unit, font_family, font_size, font_color, opacity, pages)\n\targs := []string{\"header_footer\", \"--type\", \"add\"}\n\tif header_left != \"\" {\n\t\targs = append(args, \"--header-left\", header_left)\n\t}\n\tif header_center != \"\" {\n\t\targs = append(args, \"--header-center\", header_center)\n\t}\n\tif header_right != \"\" {\n\t\targs = append(args, \"--header-right\", header_right)\n\t}\n\tif footer_left != \"\" {\n\t\targs = append(args, \"--footer-left\", footer_left)\n\t}\n\tif footer_center != \"\" {\n\t\targs = append(args, \"--footer-center\", footer_center)\n\t}\n\tif footer_right != \"\" {\n\t\targs = append(args, \"--footer-right\", footer_right)\n\t}\n\tif len(margin_bbox) > 0 {\n\t\targs = append(args, \"--margin-bbox\")\n\t\tfor _, v := range margin_bbox {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif font_family != \"\" {\n\t\targs = append(args, \"--font-family\", font_family)\n\t}\n\tif font_size != 0 {\n\t\targs = append(args, \"--font-size\", fmt.Sprintf(\"%d\", font_size))\n\t}\n\tif font_color != \"\" {\n\t\targs = append(args, \"--font-color\", font_color)\n\t}\n\tif opacity != 0 {\n\t\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page-range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) RemovePDFHeaderAndFooter(\n\tinFile string,\n\toutFile string,\n\tmargin_bbox []float32,\n\tremove_list []string,\n\tunit string,\n\tpages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, margin_bbox: %v, remove_list: %v, unit: %s, pages: %s\\n\", inFile, outFile, margin_bbox, remove_list, unit, pages)\n\targs := []string{\"header_footer\", \"--type\", \"remove\"}\n\tif len(margin_bbox) > 0 {\n\t\targs = append(args, \"--margin-bbox\")\n\t\tfor _, v := range margin_bbox {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif len(remove_list) > 0 {\n\t\targs = append(args, \"--remove\")\n\t\targs = append(args, remove_list...)\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page-range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "insert.go",
          "type": "blob",
          "size": 2.2041015625,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) InsertPDF(inFile1 string, inFile2 string, insertPos int, dstPages string, posType string, outFile string) error {\n\tlogger.Printf(\"inFile1: %s, inFile2: %s, insertPos: %d, dstPages: %s, posType: %s, outFile: %s\\n\", inFile1, inFile2, insertPos, dstPages, posType, outFile)\n\targs := []string{\"insert\"}\n\tif insertPos != 0 {\n\t\targs = append(args, \"--insert_pos\", fmt.Sprintf(\"%d\", insertPos))\n\t}\n\tif posType != \"\" {\n\t\targs = append(args, \"--pos-type\", posType)\n\t}\n\tif dstPages != \"\" {\n\t\targs = append(args, \"--page_range\", dstPages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile1)\n\targs = append(args, inFile2)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) InsertBlankPDF(inFile string, outFile string, insertPos int, posType string, paper_size string, orientation string, count int) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, insertPos: %d, posType: %s, paper_size: %s, orientation: %s, count: %d\\n\", inFile, outFile, insertPos, posType, paper_size, orientation, count)\n\targs := []string{\"insert\", \"--method\", \"blank\"}\n\targs = append(args, \"--insert_pos\", fmt.Sprintf(\"%d\", insertPos))\n\tif posType != \"\" {\n\t\targs = append(args, \"--pos-type\", posType)\n\t}\n\tif paper_size != \"\" {\n\t\targs = append(args, \"--paper_size\", paper_size)\n\t}\n\tif orientation != \"\" {\n\t\targs = append(args, \"--orientation\", orientation)\n\t}\n\targs = append(args, \"--count\", fmt.Sprintf(\"%d\", count))\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile, \"placeholder.pdf\")\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ReplacePDF(inFile1 string, inFile2 string, srcPages string, dstPages string, outFile string) error {\n\tlogger.Printf(\"inFile1: %s, inFile2: %s, srcPages: %s, dstPages: %s, outFile: %s\\n\", inFile1, inFile2, srcPages, dstPages, outFile)\n\targs := []string{\"replace\"}\n\tif srcPages != \"\" {\n\t\targs = append(args, \"--src_page_range\", srcPages)\n\t}\n\tif dstPages != \"\" {\n\t\targs = append(args, \"--dst_page_range\", dstPages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile1)\n\targs = append(args, inFile2)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "main.go",
          "type": "blob",
          "size": 2.0791015625,
          "content": "package main\n\nimport (\n\t\"embed\"\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"runtime\"\n\n\t\"github.com/pkg/errors\"\n\t\"github.com/sirupsen/logrus\"\n\t\"github.com/wailsapp/wails/v2\"\n\t\"github.com/wailsapp/wails/v2/pkg/options\"\n\t\"github.com/wailsapp/wails/v2/pkg/options/assetserver\"\n)\n\n//go:embed all:frontend/dist\nvar assets embed.FS\n\n// go:embed all:thirdparty/ocr.py\n// go:embed all:thirdparty/convert.py\n// go:embed all:thirdparty/dist/pdf.exe\n// var thirdpartyAsset embed.FS\n\nvar (\n\tlog     *logrus.Logger\n\tlogger  *logrus.Entry\n\tlogdir  string\n)\n\nfunc main() {\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\tfmt.Println(\"Error:\", err)\n\t\t}\n\t}()\n\n\t// init logger\n\tlog = logrus.New()\n\tif runtime.GOOS == \"windows\" {\n\t\tlogdir = filepath.Join(os.Getenv(\"USERPROFILE\"), \".pdf_guru\")\n\t} else {\n\t\tlogdir = filepath.Join(os.Getenv(\"HOME\"), \".pdf_guru\")\n\t}\n\terr := os.MkdirAll(logdir, 0755)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"failed to create log directory\")\n\t\tlog.Fatal(err)\n\t}\n\tlogpath := filepath.Join(logdir, \"access.log\")\n\tfile, err := os.OpenFile(logpath, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"failed to create log file\")\n\t\tlog.Fatal(err)\n\t}\n\tdefer file.Close()\n\n\tlog.SetOutput(io.MultiWriter(os.Stdout, file))\n\tlog.SetLevel(logrus.DebugLevel)\n\tlog.SetReportCaller(true)\n\tlog.SetFormatter(&logrus.TextFormatter{\n\t\tTimestampFormat: \"2006-01-02 15:04:05\",\n\t\tFullTimestamp:   true,\n\t\tDisableColors:   true,\n\t})\n\tlogger = log.WithFields(logrus.Fields{\n\t\t\"service\": \"pdf-guru\",\n\t})\n\tlogger.Info(\"starting pdf-guru\")\n\n\t// Create an instance of the app structure\n\tapp := NewApp()\n\n\t// Create application with options\n\terr = wails.Run(&options.App{\n\t\tTitle:     \"PDF Guru\",\n\t\tWidth:     1280,\n\t\tHeight:    700,\n\t\tMinWidth:  1000,\n\t\tMinHeight: 600,\n\t\tAssetServer: &assetserver.Options{\n\t\t\tAssets: assets,\n\t\t},\n\t\tBackgroundColour: &options.RGBA{R: 27, G: 38, B: 54, A: 1},\n\t\tOnStartup:        app.startup,\n\t\tBind: []interface{}{\n\t\t\tapp,\n\t\t},\n\t})\n\n\tif err != nil {\n\t\terr = errors.Wrap(err, \"run wails app failed\")\n\t\tfmt.Println(\"Error:\", err.Error())\n\t}\n\n\tlogger.Info(\"exiting pdf-guru\")\n}\n"
        },
        {
          "name": "merge.go",
          "type": "blob",
          "size": 0.544921875,
          "content": "package main\n\nimport \"github.com/pkg/errors\"\n\nfunc (a *App) MergePDF(inFiles []string, outFile string, sortMethod string, sortDirection string) error {\n\tif len(inFiles) == 0 {\n\t\treturn errors.New(\"no input files\")\n\t}\n\targs := []string{\"merge\"}\n\tif sortMethod != \"\" {\n\t\targs = append(args, \"--sort_method\", sortMethod)\n\t}\n\tif sortDirection != \"\" {\n\t\targs = append(args, \"--sort_direction\", sortDirection)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFiles...)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "page_number.go",
          "type": "blob",
          "size": 2.38671875,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) AddPDFPageNumber(\n\tinFile string,\n\toutFile string,\n\tpos string,\n\tstart int,\n\tformat string,\n\tmargin_bbox []float32,\n\tunit string,\n\talign string,\n\tfont_family string,\n\tfont_size int,\n\tfont_color string,\n\topacity float32,\n\tpages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pos: %s, start: %d, format: %s, margin_bbox: %v, unit: %s, font_family: %s, font_size: %d, font_color: %s, opacity: %f, pages: %s\\n\", inFile, outFile, pos, start, format, margin_bbox, unit, font_family, font_size, font_color, opacity, pages)\n\targs := []string{\"page_number\", \"--type\", \"add\"}\n\tif pos != \"\" {\n\t\targs = append(args, \"--pos\", pos)\n\t}\n\tif start != 0 {\n\t\targs = append(args, \"--start\", fmt.Sprintf(\"%d\", start))\n\t}\n\tif format != \"\" {\n\t\targs = append(args, \"--format\", format)\n\t}\n\tif align != \"\" {\n\t\targs = append(args, \"--align\", align)\n\t}\n\tif len(margin_bbox) > 0 {\n\t\targs = append(args, \"--margin-bbox\")\n\t\tfor _, v := range margin_bbox {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif font_family != \"\" {\n\t\targs = append(args, \"--font-family\", font_family)\n\t}\n\tif font_size != 0 {\n\t\targs = append(args, \"--font-size\", fmt.Sprintf(\"%d\", font_size))\n\t}\n\tif font_color != \"\" {\n\t\targs = append(args, \"--font-color\", font_color)\n\t}\n\tif opacity != 0 {\n\t\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page-range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) RemovePDFPageNumber(\n\tinFile string,\n\toutFile string,\n\tmargin_bbox []float32,\n\tpos string,\n\tunit string,\n\tpages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, margin_bbox: %v, pos: %s, unit: %s, pages: %s\\n\", inFile, outFile, margin_bbox, pos, unit, pages)\n\targs := []string{\"page_number\", \"--type\", \"remove\"}\n\tif len(margin_bbox) > 0 {\n\t\targs = append(args, \"--margin-bbox\")\n\t\tfor _, v := range margin_bbox {\n\t\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t\t}\n\t}\n\tif pos != \"\" {\n\t\targs = append(args, \"--pos\", pos)\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page-range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "pdf.spec",
          "type": "blob",
          "size": 0.7880859375,
          "content": "# -*- mode: python ; coding: utf-8 -*-\n\n\nblock_cipher = None\n\n\na = Analysis(\n    ['pdf.py'],\n    pathex=[],\n    binaries=[],\n    datas=[],\n    hiddenimports=[],\n    hookspath=[],\n    hooksconfig={},\n    runtime_hooks=[],\n    excludes=[],\n    win_no_prefer_redirects=False,\n    win_private_assemblies=False,\n    cipher=block_cipher,\n    noarchive=False,\n)\npyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)\n\nexe = EXE(\n    pyz,\n    a.scripts,\n    a.binaries,\n    a.zipfiles,\n    a.datas,\n    [],\n    name='pdf',\n    debug=False,\n    bootloader_ignore_signals=False,\n    strip=False,\n    upx=True,\n    upx_exclude=[],\n    runtime_tmpdir=None,\n    console=False,\n    disable_windowed_traceback=False,\n    argv_emulation=False,\n    target_arch=None,\n    codesign_identity=None,\n    entitlements_file=None,\n)\n"
        },
        {
          "name": "reorder.go",
          "type": "blob",
          "size": 0.4033203125,
          "content": "package main\n\nfunc (a *App) ReorderPDF(inFile string, outFile string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, pages: %s\\n\", inFile, outFile, pages)\n\targs := []string{\"reorder\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "rotate.go",
          "type": "blob",
          "size": 0.53515625,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) RotatePDF(inFile string, outFile string, rotation int, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, rotation: %d, pages: %s\\n\", inFile, outFile, rotation, pages)\n\targs := []string{\"rotate\"}\n\tif rotation != 0 {\n\t\targs = append(args, \"--angle\", fmt.Sprintf(\"%d\", rotation))\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "scale.go",
          "type": "blob",
          "size": 1.7451171875,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) ScalePDFByScale(inFile string, outFile string, scale float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, scale: %f, pages: %s\\n\", inFile, outFile, scale, pages)\n\targs := []string{\"resize\", \"--method\", \"scale\"}\n\targs = append(args, \"--scale\", fmt.Sprintf(\"%f\", scale))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ScalePDFByDim(inFile string, outFile string, width float32, height float32, unit string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, width: %f, height: %f, unit: %s, pages: %s\\n\", inFile, outFile, width, height, unit, pages)\n\targs := []string{\"resize\", \"--method\", \"dim\"}\n\targs = append(args, \"--width\", fmt.Sprintf(\"%f\", width))\n\targs = append(args, \"--height\", fmt.Sprintf(\"%f\", height))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) ScalePDFByPaperSize(inFile string, outFile string, paperSize string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, paperSize: %s, pages: %s\\n\", inFile, outFile, paperSize, pages)\n\targs := []string{\"resize\", \"--method\", \"paper_size\"}\n\tif paperSize != \"\" {\n\t\targs = append(args, \"--paper_size\", paperSize)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "sign.go",
          "type": "blob",
          "size": 0.302734375,
          "content": "package main\n\nfunc (a *App) SignImage(inFile string, outFile string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s\\n\", inFile, outFile)\n\targs := []string{\"sign\"}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "split.go",
          "type": "blob",
          "size": 1.28515625,
          "content": "package main\n\nimport \"fmt\"\n\nfunc (a *App) SplitPDFByChunk(inFile string, chunkSize int, outDir string) error {\n\tlogger.Printf(\"inFile: %s, chunkSize: %d, outDir: %s\\n\", inFile, chunkSize, outDir)\n\targs := []string{\"split\", \"--mode\", \"chunk\"}\n\targs = append(args, \"--chunk_size\")\n\targs = append(args, fmt.Sprintf(\"%d\", chunkSize))\n\tif outDir != \"\" {\n\t\targs = append(args, \"--output\", outDir)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) SplitPDFByBookmark(inFile string, tocLevel string, outDir string) error {\n\tlogger.Printf(\"inFile: %s, outDir: %s\\n\", inFile, outDir)\n\targs := []string{\"split\", \"--mode\", \"toc\"}\n\tif tocLevel != \"\" {\n\t\targs = append(args, \"--toc-level\", tocLevel)\n\t}\n\tif outDir != \"\" {\n\t\targs = append(args, \"--output\", outDir)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) SplitPDFByPage(inFile string, pages string, outDir string) error {\n\tlogger.Printf(\"inFile: %s, pages: %s, outDir: %s\\n\", inFile, pages, outDir)\n\targs := []string{\"split\", \"--mode\", \"page\"}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outDir != \"\" {\n\t\targs = append(args, \"--output\", outDir)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "trial.go",
          "type": "blob",
          "size": 1.375,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"path/filepath\"\n\t\"strconv\"\n\n\t\"github.com/pkg/errors\"\n)\n\nfunc (a *App) CheckTrialCount() (int, error) {\n\tcountPath := filepath.Join(logdir, \"debug.log\")\n\tcount := 0\n\tif _, err := os.Stat(countPath); err == nil {\n\t\t// file exists\n\t\tcountFile, err := os.OpenFile(countPath, os.O_RDONLY, 0666)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"无法验证试用状态！\")\n\t\t\treturn count, err\n\t\t}\n\t\tdefer countFile.Close()\n\t\tcountBytes, err := os.ReadFile(countPath)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"无法验证试用状态！\")\n\t\t\treturn count, err\n\t\t}\n\t\tcount, err = strconv.Atoi(string(countBytes))\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"无法验证试用状态！\")\n\t\t\treturn count, err\n\t\t}\n\t\tcountFile.Close()\n\t\tcountFile, err = os.OpenFile(countPath, os.O_WRONLY|os.O_TRUNC, 0666)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"无法验证试用状态！\")\n\t\t\treturn count, err\n\t\t}\n\t\tdefer countFile.Close()\n\t\tcountFile.WriteString(strconv.Itoa(count + 1))\n\t\treturn count + 1, nil\n\t} else if os.IsNotExist(err) {\n\t\t// file not exists\n\t\tcountFile, err := os.OpenFile(countPath, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"无法验证试用状态！\")\n\t\t\treturn count, err\n\t\t}\n\t\tdefer countFile.Close()\n\t\tcountFile.WriteString(\"1\")\n\t\treturn 1, nil\n\t}\n\treturn count, fmt.Errorf(\"无法验证试用状态！\")\n}\n"
        },
        {
          "name": "utils.go",
          "type": "blob",
          "size": 1.40625,
          "content": "package main\n\nimport (\n\t\"github.com/pkg/errors\"\n\twails_runtime \"github.com/wailsapp/wails/v2/pkg/runtime\"\n)\n\nfunc (a *App) SelectFile() string {\n\td, err := wails_runtime.OpenFileDialog(a.ctx, wails_runtime.OpenDialogOptions{})\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn \"\"\n\t}\n\tlogger.Debugf(\"%v\\n\", d)\n\treturn d\n}\n\nfunc (a *App) SelectMultipleFiles() []string {\n\td, err := wails_runtime.OpenMultipleFilesDialog(a.ctx, wails_runtime.OpenDialogOptions{})\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn nil\n\t}\n\tlogger.Debugf(\"%v\\n\", d)\n\treturn d\n}\n\nfunc (a *App) SelectDir() string {\n\td, err := wails_runtime.OpenDirectoryDialog(a.ctx, wails_runtime.OpenDialogOptions{})\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn \"\"\n\t}\n\tlogger.Debugf(\"%v\\n\", d)\n\treturn d\n}\n\nfunc (a *App) SaveFile() string {\n\td, err := wails_runtime.SaveFileDialog(a.ctx, wails_runtime.SaveDialogOptions{})\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn \"\"\n\t}\n\tlogger.Debugf(\"%v\\n\", d)\n\treturn d\n}\n\nfunc (a *App) OpenUrl(url string) {\n\twails_runtime.BrowserOpenURL(a.ctx, url)\n}\n\nfunc (a *App) GetClipboard() string {\n\ttext, err := wails_runtime.ClipboardGetText(a.ctx)\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\treturn \"\"\n\t}\n\treturn text\n}\n\nfunc (a *App) SetClipboard(content string) error {\n\terr := wails_runtime.ClipboardSetText(a.ctx, content)\n\tif err != nil {\n\t\tlogger.Errorln(err)\n\t\terr = errors.Wrap(err, \"set clipboard error\")\n\t\treturn err\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "validate.go",
          "type": "blob",
          "size": 2.1005859375,
          "content": "package main\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\t\"regexp\"\n\t\"runtime\"\n\t\"strings\"\n\n\t\"github.com/pkg/errors\"\n)\n\nfunc (a *App) CheckOS() string {\n\treturn runtime.GOOS\n}\n\nfunc (a *App) CheckFileExists(path string) error {\n\tpath = strings.TrimSpace(path)\n\tif path == \"\" {\n\t\treturn errors.New(\"路径不能为空!\")\n\t}\n\tif strings.Contains(path, \"*\") {\n\t\tmatches, err := filepath.Glob(path)\n\t\tif err != nil {\n\t\t\terr = errors.Wrap(err, \"\")\n\t\t\treturn err\n\t\t}\n\t\tif len(matches) == 0 {\n\t\t\treturn errors.New(\"未匹配到任何文件\")\n\t\t}\n\t\treturn nil\n\t}\n\tif !filepath.IsAbs(path) {\n\t\treturn errors.New(\"路径必须是绝对路径!\")\n\t}\n\tif _, err := os.Stat(path); os.IsNotExist(err) {\n\t\treturn errors.New(\"路径不存在!\")\n\t}\n\tif info, err := os.Stat(path); err == nil && info.IsDir() {\n\t\treturn errors.New(\"路径是目录!\")\n\t}\n\treturn nil\n}\n\nfunc (a *App) CheckOutputDirExists(path string) error {\n\tif !filepath.IsAbs(path) {\n\t\treturn errors.New(\"路径必须是绝对路径!\")\n\t}\n\tif info, err := os.Stat(path); err == nil && !info.IsDir() {\n\t\treturn errors.New(\"路径是文件，不是目录!\")\n\t}\n\tif _, err := os.Stat(path); os.IsNotExist(err) {\n\t\treturn errors.New(\"路径不存在，继续则自动创建目录!\")\n\t}\n\treturn nil\n}\n\nfunc (a *App) CheckOutputFileExists(path string) error {\n\tif !filepath.IsAbs(path) {\n\t\treturn errors.New(\"路径必须是绝对路径!\")\n\t}\n\tif info, err := os.Stat(path); err == nil {\n\t\tif info.IsDir() {\n\t\t\treturn errors.New(\"路径是目录，不是文件!\")\n\t\t}\n\t\treturn errors.New(\"路径已存在，继续则覆盖文件!\")\n\t}\n\treturn nil\n}\n\nfunc (a *App) CheckRangeFormat(pages string) error {\n\tpages = strings.TrimSpace(pages)\n\tparts := strings.Split(pages, \",\")\n\tpos_count, neg_count := 0, 0\n\tfor _, part := range parts {\n\t\tpattern := regexp.MustCompile(`^!?(\\d+|N)(\\-(\\d+|N))?$`)\n\t\tpart = strings.TrimSpace(part)\n\t\tif !pattern.MatchString(part) {\n\t\t\treturn errors.New(\"页码格式错误!,示例：1-3,5,6-N\")\n\t\t}\n\t\tif part[0] == '!' {\n\t\t\tneg_count++\n\t\t} else {\n\t\t\tpos_count++\n\t\t}\n\t}\n\tif pos_count > 0 && neg_count > 0 {\n\t\treturn errors.New(\"不能同时使用正向选择和反向选择!\")\n\t}\n\treturn nil\n}\n"
        },
        {
          "name": "wails.json",
          "type": "blob",
          "size": 0.330078125,
          "content": "{\n  \"$schema\": \"https://wails.io/schemas/config.v2.json\",\n  \"name\": \"PDF Guru\",\n  \"outputfilename\": \"PDF Guru\",\n  \"frontend:install\": \"npm install\",\n  \"frontend:build\": \"npm run build\",\n  \"frontend:dev:watcher\": \"npm run dev\",\n  \"frontend:dev:serverUrl\": \"auto\",\n  \"author\": {\n    \"name\": \"Kevin2li\",\n    \"email\": \"kevin2li@qq.com\"\n  }\n}\n"
        },
        {
          "name": "watermark.go",
          "type": "blob",
          "size": 7.0908203125,
          "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\nfunc (a *App) WatermarkPDFByText(inFile string, outFile string, markText string, fontFamily string, fontSize int, fontColor string, angle int, opacity float32, num_lines int, line_spacing float32, word_spacing float32, x_offset float32, y_offset float32, multiple_mode bool, layer string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, markText: %s, fontFamily: %s, fontSize: %d, fontColor: %s, angle: %d, opacity: %f, num_lines: %d, line_spacing: %f, word_spacing: %f, x_offset: %f, y_offset: %f, multiple_mode: %v, layer: %s\\n\", inFile, outFile, markText, fontFamily, fontSize, fontColor, angle, opacity, num_lines, line_spacing, word_spacing, x_offset, y_offset, multiple_mode, layer)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"watermark\", \"add\"}\n\tif markText != \"\" {\n\t\targs = append(args, \"--mark-text\", markText)\n\t}\n\tif fontFamily != \"\" {\n\t\targs = append(args, \"--font-family\", fontFamily)\n\t}\n\tif fontColor != \"\" {\n\t\targs = append(args, \"--color\", fontColor)\n\t}\n\targs = append(args, \"--font-size\", fmt.Sprintf(\"%d\", fontSize))\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%d\", angle))\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--num-lines\", fmt.Sprintf(\"%d\", num_lines))\n\targs = append(args, \"--line-spacing\", fmt.Sprintf(\"%f\", line_spacing))\n\targs = append(args, \"--word-spacing\", fmt.Sprintf(\"%f\", word_spacing))\n\targs = append(args, \"--x-offset\", fmt.Sprintf(\"%f\", x_offset))\n\targs = append(args, \"--y-offset\", fmt.Sprintf(\"%f\", y_offset))\n\tif multiple_mode {\n\t\targs = append(args, \"--multiple-mode\")\n\t}\n\tif layer != \"\" {\n\t\targs = append(args, \"--layer\", layer)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) WatermarkPDFByImage(inFile string, outFile string, wmPath string, angle int, opacity float32, scale float32, num_lines int, line_spacing float32, word_spacing float32, x_offset float32, y_offset float32, multiple_mode bool, layer string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, wmPath: %s, angle: %d, opacity: %f, scale: %f, num_lines: %d, line_spacing: %f, word_spacing: %f, x_offset: %f, y_offset: %f, multiple_mode: %v, layer: %s\\n\", inFile, outFile, wmPath, angle, opacity, scale, num_lines, line_spacing, word_spacing, x_offset, y_offset, multiple_mode, layer)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"watermark\", \"add\", \"--type\", \"image\"}\n\tif wmPath != \"\" {\n\t\targs = append(args, \"--wm-path\", wmPath)\n\t}\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%d\", angle))\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--scale\", fmt.Sprintf(\"%f\", scale))\n\targs = append(args, \"--num-lines\", fmt.Sprintf(\"%d\", num_lines))\n\targs = append(args, \"--line-spacing\", fmt.Sprintf(\"%f\", line_spacing))\n\targs = append(args, \"--word-spacing\", fmt.Sprintf(\"%f\", word_spacing))\n\targs = append(args, \"--x-offset\", fmt.Sprintf(\"%f\", x_offset))\n\targs = append(args, \"--y-offset\", fmt.Sprintf(\"%f\", y_offset))\n\tif multiple_mode {\n\t\targs = append(args, \"--multiple-mode\")\n\t}\n\tif layer != \"\" {\n\t\targs = append(args, \"--layer\", layer)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) WatermarkPDFByPDF(inFile string, outFile string, wmPath string, layer string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, wmPath: %s, layer: %s\\n\", inFile, outFile, wmPath, layer)\n\tif _, err := os.Stat(inFile); os.IsNotExist(err) {\n\t\tlogger.Errorln(err)\n\t\treturn err\n\t}\n\targs := []string{\"watermark\", \"add\", \"--type\", \"pdf\"}\n\tif wmPath != \"\" {\n\t\targs = append(args, \"--wm-path\", wmPath)\n\t}\n\tif layer != \"\" {\n\t\targs = append(args, \"--layer\", layer)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) RemoveWatermark(inFile string, outFile string, method string, wm_index []int, wm_text string, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, method: %s, wm_index: %d, wm_text: %s, pages: %s\\n\", inFile, outFile, method, wm_index, wm_text, pages)\n\targs := []string{\"watermark\", \"remove\", \"--method\", method}\n\tif len(wm_index) > 0 {\n\t\targs = append(args, \"--wm_index\")\n\t\tfor _, v := range wm_index {\n\t\t\targs = append(args, fmt.Sprintf(\"%d\", v))\n\t\t}\n\t}\n\tif wm_text != \"\" {\n\t\targs = append(args, \"--wm_text\", wm_text)\n\t}\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\n\nfunc (a *App) DetectWatermarkByIndex(inFile string, outFile string, wmIndex int) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, wmIndex: %d\\n\", inFile, outFile, wmIndex)\n\targs := []string{\"watermark\", \"detect\"}\n\targs = append(args, inFile)\n\targs = append(args, \"--wm_index\")\n\targs = append(args, fmt.Sprintf(\"%d\", wmIndex))\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) MaskPDFByRect(inFile string, outFile string, rect []float32, unit string, color string, opacity float32, angle float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, rect: %v, unit: %s, color: %s, opacity: %f, angle: %f, pages: %s\\n\", inFile, outFile, rect, unit, color, opacity, angle, pages)\n\targs := []string{\"mask\", \"--type\", \"rect\"}\n\targs = append(args, \"--bbox\")\n\tfor _, v := range rect {\n\t\targs = append(args, fmt.Sprintf(\"%f\", v))\n\t}\n\tif unit != \"\" {\n\t\targs = append(args, \"--unit\", unit)\n\t}\n\tif color != \"\" {\n\t\targs = append(args, \"--color\", color)\n\t}\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%f\", angle))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n\nfunc (a *App) MaskPDFByAnnot(inFile string, outFile string, annot_page int, color string, opacity float32, angle float32, pages string) error {\n\tlogger.Printf(\"inFile: %s, outFile: %s, annot_page: %d, color: %s, opacity: %f, angle: %f, pages: %s\\n\", inFile, outFile, annot_page, color, opacity, angle, pages)\n\targs := []string{\"mask\", \"--type\", \"annot\"}\n\targs = append(args, \"--annot-page\", fmt.Sprintf(\"%d\", annot_page))\n\tif color != \"\" {\n\t\targs = append(args, \"--color\", color)\n\t}\n\targs = append(args, \"--opacity\", fmt.Sprintf(\"%f\", opacity))\n\targs = append(args, \"--angle\", fmt.Sprintf(\"%f\", angle))\n\tif pages != \"\" {\n\t\targs = append(args, \"--page_range\", pages)\n\t}\n\tif outFile != \"\" {\n\t\targs = append(args, \"-o\", outFile)\n\t}\n\targs = append(args, inFile)\n\n\tlogger.Println(args)\n\treturn a.cmdRunner(args, \"pdf\")\n}\n"
        }
      ]
    }
  ]
}