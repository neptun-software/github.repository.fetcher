{
  "metadata": {
    "timestamp": 1736711393486,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ratiw/vue-table",
      "stars": 1830,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.021484375,
          "content": ".DS_Store\nnode_modules"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Rati Wannapanop\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.01953125,
          "content": "[![npm](https://img.shields.io/npm/v/vuetable.svg)](https://www.npmjs.com/package/vuetable)\r\n[![npm](https://img.shields.io/npm/l/vuetable.svg?maxAge=2592000)]()\r\n\r\n----\r\n\r\n## Please Note!\r\n\r\nThis is the previous version that works with Vue 1.x. The most up-to-date version is the [Vuetable-2](https://github.com/ratiw/vuetable-2). If you like it, please *star* the [Vuetable-2 repo](https://github.com/ratiw/vuetable-2) instead, or make a small [donation](https://www.paypal.me/ratiw) to support it.\r\n\r\n### This version is *\"no longer supported\"* as I do not have time to maintain different version.\r\n\r\n----\r\n\r\nvuetable - data table simplify!\r\n========\r\n\r\n- No need to render the table yourself\r\n- One simple `vuetable` tag\r\n- Display data retrieved from server with sort options\r\n- Support multi-column sorting (v1.2.0) by @balping\r\n- Pagination component included, swap-able and extensible\r\n- Define fields to map your JSON data structure\r\n- Define row actions and capture the click event to do whatever you want\r\n- Field display customizable via callback function inside Vue.js instance\r\n- Programmatically show/hide any field via reactivity of fields definition\r\n- Use your favorite CSS framework classes to nicely format your table and displayed data\r\n- Events to allow control from Vue.js instance programmatically\r\n- Capture events from `vuetable` to manipulate your table and your data\r\n- Should work with any pre-defined JSON data structure\r\n- Should work with any CSS Framework, e.g. Semantic UI, Twitter's Bootstrap\r\n- Optional detail row to display additional data (v.1.2.0)\r\n\r\n---\r\n## vuetable is only working for Vue 1.x, vuetable-2 is for Vue 2.x\r\nIf you're looking for the version that's working with Vue 2.x, please go to [`vuetable-2`](https://github.com/ratiw/vuetable-2) repo. However, I still have no time to work on the documentation. But if you're familiar enough with `vuetable`, it shouldn't be any much different. Look at the [what's changed](https://github.com/ratiw/vuetable-2/blob/master/changes.md) for info on changes from version 1 and the [upgrade guide](https://github.com/ratiw/vuetable-2/blob/master/upgrade-guide.md) on how you could upgrade from version 1.\r\n\r\n---\r\n\r\n## Note on vue-resource version\r\nvuetable internally uses vue-resource to request data from the `api-url`. Prior to v1.5.3, vuetable uses vue-resource v0.7.4 and it retrieves the returned data from `response.data` object. However, since [v0.9.0](https://github.com/vuejs/vue-resource/releases/tag/0.9.0) the `response.data` has been renamed to `response.body`. vuetable v1.5.3 onward has been updated to use vue-resource v1.0.2.\r\n\r\nThis will cause problem with vuetable to display no data because the expected object key is no longer existed and some other related problems as discussed in [#100](https://github.com/ratiw/vue-table/issues/100).\r\n\r\n**If you're using vue-resource in your project and the version is 0.9+, please upgrade to use vuetable v1.5.3.**\r\n\r\n## Breaking Changes\r\n#### v1.5.0\r\n  - deprecated props\r\n      + `detail-row-callback`: use `row-detail-component` instead\r\n\r\n#### v1.3.0\r\n  - deprecated props \r\n      - `paginateConfig`: use `paginateConfigCallback` instead\r\n      - `detail-row`: use `detail-row-callback` instead\r\n\r\n\r\n#### v1.2.0\r\n-  `sort-order` option type was changed from `Object` to `Array` to support `multi-sort`, therefore it should be declared as array. [#36](https://github.com/ratiw/vue-table/pull/36)\r\n\r\n    ```\r\n    <vuetable \r\n      //...\r\n      :sort-order=\"[{ field: 'name', direction: 'asc' }]\"\r\n    ></vuetable>\r\n    ```\r\n\r\n---\r\n\r\n##Live Demo\r\n- [JSON data structure](http://vuetable.ratiw.net/api/users)\r\n- [Semantic UI example](http://vuetable.ratiw.net/examples/semantic.html)\r\n- [Bootstrap UI example](http://vuetable.ratiw.net/examples/bootstrap.html)\r\n\r\n---\r\n\r\n## What is `vuetable`?\r\n`vuetable` is a Vue.js component that will automatically request (JSON) data\r\nfrom the server and display them nicely in html table with swappable/extensible\r\npagination sub-component. You can also add buttons to each row and hook an event\r\nto it\r\n\r\n![image](https://i.imgsafe.org/d46e5e1.gif)\r\n\r\n> Please note that all the examples show in here are styling using Semantic UI CSS Framework,\r\n> but `vuetable` should be able to work with any CSS framwork including Twitter's Bootstrap.\r\n> Please read through and see more info [below](#bootstrap).\r\n\r\nYou do this:\r\n```html\r\n    <div id=\"app\" class=\"ui vertical stripe segment\">\r\n        <div class=\"ui container\">\r\n            <div id=\"content\" class=\"ui basic segment\">\r\n                <h3 class=\"ui header\">List of Users</h3>\r\n                <vuetable\r\n                    api-url=\"http://example.app:8000/api/users\"\r\n                    table-wrapper=\"#content\"\r\n                    :fields=\"columns\"\r\n                    :item-actions=\"itemActions\"\r\n                ></vuetable>\r\n            </div>\r\n        </div>\r\n    </div>\r\n```\r\n\r\n```javascript\r\n\t<script>\r\n\t    new Vue({\r\n\t        el: '#app',\r\n\t        data: {\r\n\t            columns: [\r\n\t                'name',\r\n\t                'nickname',\r\n\t                'email',\r\n\t                'birthdate',\r\n\t                'gender',\r\n\t                '__actions'\r\n\t\t\t\t],\r\n\t            itemActions: [\r\n\t                { name: 'view-item', label: '', icon: 'zoom icon', class: 'ui teal button' },\r\n\t                { name: 'edit-item', label: '', icon: 'edit icon', class: 'ui orange button'},\r\n\t                { name: 'delete-item', label: '', icon: 'delete icon', class: 'ui red button' }\r\n\t            ]\r\n\t        },\r\n\t        methods: {\r\n\t            viewProfile: function(id) {\r\n\t                console.log('view profile with id:', id)\r\n\t            }\r\n\t        },\r\n\t        events: {\r\n\t            'vuetable:action': function(action, data) {\r\n\t                console.log('vuetable:action', action, data)\r\n\t                if (action == 'view-item') {\r\n\t                    this.viewProfile(data.id)\r\n\t                }\r\n\t            },\r\n\t            'vuetable:load-error': function(response) {\r\n\t                console.log('Load Error: ', response)\r\n\t            }\r\n\t        }\r\n        })\r\n\t</script>\r\n```\r\n\r\nAnd you get this!\r\n![image](https://i.imgsafe.org/af08442.jpg)\r\n\r\nSince I'm mainly using [Semantic UI](http://semantic-ui.com) as my default CSS Framework, all the css\r\nstyles in `vuetable` are based on Semantic UI. If you're using Twitter's [Bootstrap](http://getbootstrap.com)\r\ncss framework, please see [documentation in the Wiki pages](https://github.com/ratiw/vue-table/wiki/Using-%60vuetable%60-with-Twitter's-Bootstrap).\r\n\r\n## Usage\r\n\r\n### Javascript\r\n```javascript\r\n//vue-table dependencies (vue and vue-resource)\r\n<script src=\"https://cdn.jsdelivr.net/vue/1.0.28/vue.js\"></script>\r\n\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-resource/1.3.4/vue-resource.common.js\"></script>\r\n\r\n<script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/vue.table/1.5.3/vue-table.min.js\"></script>\r\n//or\r\n<script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/vue.table/1.5.3/vue-table.js\"></script>\r\n```\r\n\r\n### Bower\r\n\r\n```\r\n$ bower install vuetable\r\n```\r\n\r\n### NPM\r\n\r\n```\r\n$ npm install vuetable\r\n```\r\n\r\n### Vueify version for Browserify and Webpack\r\n\r\nJust `import` or `require` like so,\r\n\r\n```javascript\r\n//\r\n// firstly, require or import vue and vue-resource\r\n//\r\nvar Vue = require('vue');\r\nvar VueResource = require('vue-resource');\r\nVue.use(VueResource);\r\n\r\n//\r\n// secondly, require or import Vuetable and optional VuetablePagination component\r\n//\r\nimport Vuetable from 'vuetable/src/components/Vuetable.vue';\r\nimport VuetablePagination from 'vuetable/src/components/VuetablePagination.vue';\r\nimport VuetablePaginationDropdown from 'vuetable/src/components/VuetablePaginationDropdown.vue';\r\n\r\n//\r\n// thirdly, register components to Vue\r\n//\r\nVue.component('vuetable', Vuetable);\r\nVue.component('vuetable-pagination', VuetablePagination)\r\nVue.component('vuetable-pagination-dropdown', VuetablePaginationDropdown)\r\n\r\n```\r\nYou can combine the second and third steps into one if you like.\r\n\r\nYou need to explicitly register the pagination components using `Vue.component()` (instead of just declaring them through the `components:` section); otherwise, the pagination component will not work or swappable or extensible. I *guess* this is because it is embedded inside `vuetable` component.\r\n\r\n### Direct include\r\n\r\nJust import the `vue-table.js` after `vue.js` and `vue-resource.js` library in your page like so.\r\n```html\r\n\t<script src=\"js/vue.js\"></script>\r\n\t<script src=\"js/vue-resource.js\"></script>\r\n\t<script src=\"js/vue-table.js\"></script>\r\n```\r\n\r\nThen, reference the vuetable via `<vuetable>` tag as following\r\n\r\n```html\r\n\t<div id=\"app\">\r\n\t    <vuetable\r\n\t        api-url=\"/api/users\"\r\n\t        :fields=\"columns\"\r\n\t    ></vuetable>\r\n    </div>\r\n\r\n\t<script>\r\n\t\tnew Vue({\r\n\t\t\tel: '#app',\r\n\t\t\tdata: {\r\n\t\t\t\tcolumns: [\r\n\t\t\t\t\t'firstname',\r\n\t\t\t\t\t'lastname',\r\n\t\t\t\t\t'nickname',\r\n\t\t\t\t\t'birthdate',\r\n\t\t\t\t\t'group.name_en',\r\n\t\t\t\t\t'gender',\r\n\t\t\t\t\t'last_login',\r\n\t\t\t\t\t'__actions'\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t</script>\r\n```\r\n- `api-url` is the url of the api that `vuetable` should request data from.\r\nThe returned data must be in the form of JSON formatted with at least the number of fields\r\ndefined in `fields` property.\r\n- `fields` is the fields mapping that will be used to display data in the table.\r\nYou can provide only the name of the fields to be used. But if you would like to get\r\nthe true power of `vuetable`, you must provide some more information.\r\nPlease see [Field Definition](https://github.com/ratiw/vue-table/wiki/Fields-Definition)\r\nsection for more detail.\r\n\r\nFor more detail, please see [documentation in the Wiki pages](https://github.com/ratiw/vue-table/wiki).\r\n\r\n<a id=\"browser_compat\"></a>\r\n## Browser Compatability\r\nAs I use **Chrome** almost exclusively, it is gaurantee to work on this browser and it SHOULD also work for other **WebKit** based browsers as well. But I can't really gaurantee that since I don't use them regularly. \r\n \r\nHowever, `vuetable` will NOT WORK on **Internet Explorer** (even IE11) due to the use of `<template>` tag inside `<table>` according to [this](https://github.com/ratiw/vue-table/issues/25#issuecomment-220920656). In order to make it work with CSS framework table styling, I have to preserve the use of `<table>` and `<template>` tag inside it.\r\n \r\nIt seems to work just fine in **Microsoft Edge** though. Anyway, if you find that it does not work on any other browser, you can let me know by posting in the [Issues](https://github.com/ratiw/vue-table/issues). Or if you are able to make it work on those browser, please let me know or create a pull request.\r\n \r\n<a id=\"contribute\"></a>\r\n## Contributions\r\nAny contribution to the code (via pull request would be nice) or any part of the documentation (the Wiki always need some love and care) and any idea and/or suggestion are very welcome.\r\n \r\nHowever, please do not feel bad if your pull requests or contributions do not get merged or implemented into `vuetable`. \r\n \r\nYour contributions can, not only help make `vuetable` better, but also push it away from what I intend to use it for. I just hope that you find it useful for your use or learn something useful from its source code. But remember, you can always fork it to make it work the way you want.\r\n\r\n### Building\r\n\r\nRun `npm install`\r\n\r\nThen make sure, you have installed browserify:\r\n\r\n```\r\n# npm install browserify -g\r\n```\r\n\r\nYou might need root access for running the above command.\r\n\r\nThen you can simply run the build script included in the root folder:\r\n\r\n```\r\n$ ./build.sh\r\n```\r\n\r\nThis will compile the vue components in the `src` directory to one file in the `dist` folder.\r\n\r\nYou might want to get a minified version, in this case run this:\r\n\r\n```\r\n$ ./build.sh production\r\n```\r\n\r\nFor developement it's useful when it's not needed to recompile manually each time you make a change. If you want this convenience first install watchify globally:\r\n\r\n```\r\n# npm install watchify -g\r\n```\r\n\r\nthen run\r\n\r\n```\r\n$ ./build.sh watch\r\n```\r\n\r\nNow each time you make a change, the source will be recompiled automatically.\r\n\r\n\r\n\r\n<a id=\"license\"></a>\r\n## License\r\n`vuetable` is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT).\r\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.6162109375,
          "content": "{\n  \"name\": \"vuetable\",\n  \"homepage\": \"https://github.com/ratiw/vue-table\",\n  \"description\": \"vue.js table component that will automatically request JSON data from server and display them nicely in HTML table with swap-able/extensible pagination component\",\n  \"main\": \"src/vue-table.js\",\n  \"dependencies\": {\n    \"vue\": \"~1.0.26\",\n    \"vue-resource\": \"~1.0.2\"\n  },\n  \"keywords\": [\n    \"vue\",\n    \"vuejs\",\n    \"table\",\n    \"component\",\n    \"json\",\n    \"pagination\"\n  ],\n  \"authors\": [\n    \"Rati Wannapanop\"\n  ],\n  \"license\": \"MIT\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.388671875,
          "content": "#!/bin/bash\n\n\nif [[ \"$1\" == \"production\" ]]; then\n\texport NODE_ENV=production\n\tbrowserify -x vue -x vue-resource src/vue-table.js  \\\n\t|  node_modules/uglify-js/bin/uglifyjs -c --screw-ie8 > dist/vue-table.min.js\nelif [[ \"$1\" == \"watch\" ]]; then\n\t\n\twatchify -x vue -x vue-resource src/vue-table.js -o dist/vue-table.js\nelse\n\tbrowserify -x vue -x vue-resource src/vue-table.js -o dist/vue-table.js\nfi"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1865234375,
          "content": "{\n  \"name\": \"vuetable\",\n  \"version\": \"1.5.12\",\n  \"description\": \"vue.js table component that will automatically request JSON data from server and display them nicely in HTML table with swap-able/extensible pagination component\",\n  \"main\": \"dist/vue-table.js\",\n  \"dependencies\": {\n    \"vue\": \"^1.0.26\",\n    \"vue-resource\": \"^1.0.2\"\n  },\n  \"directories\": {\n    \"example\": \"examples\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"vueify\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ratiw/vue-table.git\"\n  },\n  \"keywords\": [\n    \"vue\",\n    \"vuejs\",\n    \"table\",\n    \"component\",\n    \"json\",\n    \"pagination\"\n  ],\n  \"author\": \"Rati Wannapanop <rati.wannapanop@gmail.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ratiw/vue-table/issues\"\n  },\n  \"homepage\": \"https://github.com/ratiw/vue-table#readme\",\n  \"devDependencies\": {\n    \"babel-core\": \"^6.9.1\",\n    \"babel-plugin-transform-runtime\": \"^6.9.0\",\n    \"babel-preset-es2015\": \"^6.9.0\",\n    \"babel-runtime\": \"^6.9.2\",\n    \"browserify\": \"13.0.1\",\n    \"uglify-js\": \"^2.6.2\",\n    \"vueify\": \"^8.5.4\",\n    \"watchify\": \"3.7.0\"\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}