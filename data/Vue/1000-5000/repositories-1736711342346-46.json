{
  "metadata": {
    "timestamp": 1736711342346,
    "page": 46,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "foamzou/melody",
      "stars": 3272,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2431640625,
          "content": "npm-debug.log\nDockerfile*\ndocker-compose*\n.dockerignore\n.git\n.github\n.gitignore\nREADME.md\nLICENSE\ndist\nimgs\n\nbackend/.vscode\nbackend/.data\nbackend/.profile/\nbackend/foamzou\nbackend/node_modules\nbackend/bin/*\n\nfrontend/node_modules\nfrontend/.vscode\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.9150390625,
          "content": "# repo file\n/backend/.profile\n/backend/.data\n/backend/bin/media-get*\n/backend/public\n\n.vscode\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# Next.js build output\n.next\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and *not* Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\n\nnode_modules\ndist\ndist-ssr\n*.local\n\n# Editor directories and files\n.vscode/*\n!.vscode/extensions.json\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.4326171875,
          "content": "# stage: build code\nFROM surnet/alpine-node-opencv:16.13.0-4.5.1 AS NODE_IMAGE\n# FROM iamccc/alpine-node:16.20 AS NODE_IMAGE\nWORKDIR /app\nCOPY . .\n\nRUN export MELODY_IN_DOCKER=1 && npm run init && rm -rf frontend\n\n# stage: copy\nFROM iamccc/alpine-node:16.20\nWORKDIR /app\n\nCOPY --from=pldin601/static-ffmpeg:22.04.061404-87ac0d7 /ffmpeg /ffprobe /usr/local/bin/\n\nCOPY --from=NODE_IMAGE /app/ .\n\nEXPOSE 5566\n\nCMD [\"node\", \"backend/src/index.js\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.744140625,
          "content": "# Melody\n\n## 项目介绍\n\n<img src=\"./imgs/melody.png\" width=\"100\" ></img>\n\n大家好，我叫 Melody，你的音乐精灵，旨在帮助你更好地管理音乐。目前的主要能力是帮助你将喜欢的歌曲或者音频上传到音乐平台的云盘。\n\n## 免责声明\n- 本项目所搜索的歌曲均来源于音乐平台的免费公开资源。请确保在使用本项目时遵守相关音乐平台的服务条款和版权规定。\n- 本项目仅供技术学习和交流使用，使用者仅限于个人学习，不得用于任何商业目的。使用者应自行承担因使用本项目而可能产生的法律责任。\n\n为了避免不必要的纠纷和账号安全问题，本项目不会以任何形式提供在线 demo 服务\n\n\n## Feature\n\n- 支持在各大音乐和视频网站检索歌曲。目前支持 咪咕、网易云、QQ 音乐、酷狗、bilibili、抖音等站点。详情可以在我的 [media-get](https://github.com/foamzou/media-get#%E6%94%AF%E6%8C%81%E7%9A%84%E7%BD%91%E7%AB%99) 项目中查看\n- 支持一键下载到本地，一键上传到云盘\n- 用链接搜索歌曲（例如使用 b站或抖音的视频链接进行搜索，可以将对应的音频自动上传到音乐云盘）\n- 一键“解锁”无法播放的歌曲（一键检测变灰的歌曲，自动从公共资源搜索最佳资源，自动上传到云盘，自动匹配歌曲信息。代替繁琐的人工操作，实现可播放）（实验性功能，目前仅支持网易云）\n- PC 端、移动端适配良好（支持 PWA）\n- 部署简单，支持 docker\n\n## 安装和启动\n\n### 方式一：Docker 安装\n\n1. 在你的宿主机创建一个目录，例如： `~/melody-profile`\n2. 创建镜像，有两种方式选择(注意修改下面的宿主机目录为你实际的)：\n   - 从 hub.docker.com 拉取\n     ```\n     docker run -d -p 5566:5566  -v ~/melody-profile:/app/backend/.profile foamzou/melody:latest\n     ```\n   - 从代码编译镜像(若你的 docker 不支持 DOCKER_BUILDKIT，则去掉)\n     ```\n     DOCKER_BUILDKIT=1 docker build -t melody .\n     docker run -d -p 5566:5566  -v ~/melody-profile:/app/backend/.profile melody\n     ```\n3. 后续更新（以从 hub.docker.com 更新为例）\n   ```\n   docker pull docker.io/foamzou/melody:latest\n   docker kill <CONTAINER ID>\n   docker run -d -p 5566:5566  -v ~/melody-profile:/app/backend/.profile foamzou/melody:latest\n   ```\n\n### 方式二：源码安装\n\n1. 依赖\n\n   确保以下两个依赖是安装好的\n\n   1. node.js ([官网下载](https://nodejs.org/zh-cn/download/))\n   2. FFmpeg ([windows 安装介绍](https://zhuanlan.zhihu.com/p/400952501))\n\n2. 下载源码、初始化服务、运行服务\n\n   ```\n   git clone https://github.com/foamzou/melody.git\n   cd melody && npm run init && npm run app\n   ```\n\n3. 若后面代码有更新，下次执行该命令即可更新\n   ```\n   npm run update && npm run app\n   ```\n\n### 方式三：通过第三方部署\n<details>\n<summary>通过宝塔面板一键部署</summary>\n   \n#### 前提\n\n* 仅适用于宝塔面板 9.2.0 及以上版本\n* 安装宝塔面板，前往[宝塔面板](https://www.bt.cn/new/download.html)官网，选择正式版的脚本下载安装\n\n#### 部署\n\n1. 登录宝塔面板，在左侧菜单栏中点击 `Docker`\n2. 首次会提示安装`Docker`和`Docker Compose`服务，点击立即安装，若已安装请忽略。\n3. 安装完成后在`Docker-应用商店-实用工具`中找到 `Melody`，点击`安装`，也可以在搜索框直接搜索`melody`。\n4. 设置域名等基本信息，点击`确定`\n* 说明：\n  * 名称：应用名称，默认`melody_随机字符`\n  * 版本选择：默认`latest`\n  * 域名：如您需要通过域名访问，请在此处填写您的域名\n  * 允许外部访问：如您需通过`IP+Port`直接访问，请勾选，如您已经设置了域名，请不要勾选此处\n  * 端口：默认`5568`，可自行修改\n  * CPU 限制：0 为不限制，根据实际需要设置\n  * 内存限制：0 为不限制，根据实际需要设置\n5. 提交后面板会自动进行应用初始化，大概需要`1-3`分钟，初始化完成后即可访问。\n</details>\n\n### 配置你的账号（可选）\n\n默认的 melody key 为： `melody`，若你的服务部署在私有网络，则可以不用修改（网易云账号、密码可以在 web 页面设置）。\n\n若需要修改或添加新账号，则编辑 `backend/.profile/accounts.json` （安装方式为 docker 的则为：`你的宿主机目录/accounts.json` ） 。\n\n1. 该 JSON 中的 key 是 `Melody Key`，是你在网页访问该服务的唯一凭证\n2. 网易云账号信息： `account` 和 `password` 可以后续在网页修改\n3. 该 JSON 是个数组，支持配置多个账号\n\nQ: 更新了 accounts.json 如何生效？\n\nA: 两种方式。1: 重启服务。2: 网页端 `我的音乐账号` tab 下，随便修改点账号，密码，然后点击 `更新账号密码`，这样会从 accounts.json 更新信息到内存（我后面优化下这块）\n\n### 浏览器访问\n\n最后，在浏览器访问 http://127.0.0.1:5566 就可以使用啦~\n\n## 功能介绍\n\n### 关键词搜索歌曲\n\n如果试听后是你想要的，点击上传按钮会将该歌曲上传到你的网易云音乐云盘\n<img src=\"./imgs/1-home-search-keyword.png\" width=\"1000\" ></img>\n\n### 链接搜索\n\n有时候我们在 b 站 听到好听的歌，也可以上传到云盘\n<img src=\"./imgs/2-home-search-url.png\" width=\"1000\" ></img>\n\n### 一键解锁歌单\n\n点击 `解锁全部`（实验性功能） 后，服务会自动匹配每首歌，并把歌曲上传到云盘，最后做个 match，以保证你还能看到歌词、评论\n<img src=\"./imgs/3-playlist.png\" width=\"1000\" ></img>\n\n### 手动搜索匹配\n\n当某首歌自动解锁失败后，还可以手动点击搜索按钮，找到符合的歌曲后，手动点击上传按钮\n<img src=\"./imgs/4-playlist-search.png\" width=\"1000\" ></img>\n\n### 移动端适配\n<div>\n   <img src=\"./imgs/mobile-1.png\" width=\"300\" ></img>\n   <img src=\"./imgs/mobile-2.png\" width=\"300\" ></img>\n</div>\n<div style=\"margin-top:30px;\">\n   <img src=\"./imgs/mobile-3.png\" width=\"300\" ></img>\n   <img src=\"./imgs/mobile-4.png\" width=\"300\" ></img>\n</div>\n\n## Roadmap\n\n计划在后面支持以下功能\n\n- [x] 页面适配移动端\n- [ ] 浏览器油猴脚本\n- [ ] 云盘歌曲 match 手动纠错\n- [ ] 支持播放列表\n- [x] 支持播放云盘的歌曲\n- [x] 支持 docker 部署\n- [ ] 支持 youtube-dl,you-dl 等工具作为输入源\n- [ ] 支持 酷狗、qq 音乐等音乐平台的云盘作为输出\n- [ ] 偏好设置\n- [ ] 版本更新提示\n\n## Q & A\n1. Q：移动端版本，为什么点击下载歌曲，会跳新的页面？\n\n   A：有的浏览器不支持嗅探的，会有这个问题。因为外部资源文件都不允许跨域，无法用常规下载方式 save as。考虑后续 hack\n2. Q：移动端版本，为什么在数据网络无法播放歌曲？\n\n   A：发现某些网络下，没有触发 `canplaythrough` 事件，wifi 环境下一般是没有问题的。\n3. Q：为什么移动端 PWA，点击跳转到其他页面时，无法返回到原来页面？\n\n   A：PWA 在移动端不支持使用外部浏览器打开外链，只能在应用内打开，因此会有各种奇怪问题。此时，只能先杀死应用。\n\n4. Q：为什么我部署的服务，PWA 始终出不了？\n\n   A：PWA 要求服务必须是 HTTPS。\n\n5. Q: 为什么更新 media-get 组件后，搜索报错\n   \n   A: 目前存在 bug，更新完 media-get 组件之后，请务必重启 docker 容器或服务，否则将无法继续使用\n\n## Change log\n见 [Release](https://github.com/foamzou/melody/releases)\n\n## 致谢\n\n- [NeteaseCloudMusicApi](https://github.com/Binaryify/NeteaseCloudMusicApi) 的网易云 API\n- [MakeGirlsMoe](https://make.girls.moe/) 生成的 Melody 虚拟形象图片\n- [Media Get](https://github.com/foamzou/media-get) 我的开源项目\n"
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.4873046875,
          "content": "{\n  \"name\": \"foamzou-melody\",\n  \"version\": \"0.1.2\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"init\": \"node scripts/setup.js\",\n    \"app\": \"node backend/src/index.js\",\n    \"update\": \"git pull && npm run init\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/foamzou/melody.git\"\n  },\n  \"author\": \"foamzou\",\n  \"bugs\": {\n    \"url\": \"https://github.com/foamzou/melody/issues\"\n  },\n  \"homepage\": \"https://github.com/foamzou/melody#readme\"\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}