{
  "metadata": {
    "timestamp": 1736711369720,
    "page": 98,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "caijinyc/vue-music-webapp",
      "stars": 2312,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.224609375,
          "content": "{\n  \"presets\": [\n    [\"env\", {\n      \"modules\": false,\n      \"targets\": {\n        \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <= 8\"]\n      }\n    }],\n    \"stage-2\"\n  ],\n  \"plugins\": [\"transform-vue-jsx\", \"transform-runtime\"]\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "/build/\n/config/\n/dist/\n/*.js\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 0.7724609375,
          "content": "// https://eslint.org/docs/user-guide/configuring\n\nmodule.exports = {\n  root: true,\n  parserOptions: {\n    parser: 'babel-eslint'\n  },\n  env: {\n    browser: true,\n  },\n  extends: [\n    // https://github.com/vuejs/eslint-plugin-vue#priority-a-essential-error-prevention\n    // consider switching to `plugin:vue/strongly-recommended` or `plugin:vue/recommended` for stricter rules.\n    'plugin:vue/essential', \n    // https://github.com/standard/standard/blob/master/docs/RULES-en.md\n    'standard'\n  ],\n  // required to lint *.vue files\n  plugins: [\n    'vue'\n  ],\n  // add your custom rules here\n  rules: {\n    // allow async-await\n    'generator-star-spacing': 'off',\n    // allow debugger during development\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off'\n  }\n}\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": ".DS_Store\nnode_modules/\n/dist/\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n"
        },
        {
          "name": ".postcssrc.js",
          "type": "blob",
          "size": 0.240234375,
          "content": "// https://github.com/michael-ciniawsky/postcss-load-config\n\nmodule.exports = {\n  \"plugins\": {\n    \"postcss-import\": {},\n    \"postcss-url\": {},\n    // to edit target browsers: use \"browserslist\" field in package.json\n    \"autoprefixer\": {}\n  }\n}\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.306640625,
          "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0, user-scalable=no\">\n    <title>vue-music-webapp</title>\n  </head>\n  <body>\n    <div id=\"app\"></div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.484375,
          "content": "{\n  \"name\": \"wangyiyun-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A Vue.js project\",\n  \"author\": \"CaiJinyc <me@caijin.tech>\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"webpack-dev-server --host 0.0.0.0 --inline --progress --config build/webpack.dev.conf.js\",\n    \"start\": \"npm run dev\",\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"build\": \"node build/build.js\"\n  },\n  \"dependencies\": {\n    \"vue\": \"^2.5.2\",\n    \"vue-router\": \"^3.0.1\",\n    \"fastclick\": \"^1.0.6\",\n    \"babel-runtime\": \"^6.26.0\",\n    \"better-scroll\": \"^1.10.2\",\n    \"axios\": \"^0.18.0\",\n    \"vue-lazyload\": \"^1.2.3\",\n    \"pinyin\": \"^2.8.3\",\n    \"vuex\": \"^3.0.1\",\n    \"lyric-parser\":\"^1.0.1\",\n    \"good-storage\": \"^1.0.1\"\n  },\n  \"devDependencies\": {\n    \"autoprefixer\": \"^7.1.2\",\n    \"babel-core\": \"^6.22.1\",\n    \"babel-eslint\": \"^8.2.1\",\n    \"babel-helper-vue-jsx-merge-props\": \"^2.0.3\",\n    \"babel-loader\": \"^7.1.1\",\n    \"babel-plugin-syntax-jsx\": \"^6.18.0\",\n    \"babel-plugin-transform-runtime\": \"^6.22.0\",\n    \"babel-plugin-transform-vue-jsx\": \"^3.5.0\",\n    \"babel-preset-env\": \"^1.3.2\",\n    \"babel-preset-stage-2\": \"^6.22.0\",\n    \"chalk\": \"^2.0.1\",\n    \"copy-webpack-plugin\": \"^4.0.1\",\n    \"css-loader\": \"^0.28.0\",\n    \"eslint\": \"^4.15.0\",\n    \"eslint-config-standard\": \"^10.2.1\",\n    \"eslint-friendly-formatter\": \"^3.0.0\",\n    \"eslint-loader\": \"^1.7.1\",\n    \"eslint-plugin-import\": \"^2.7.0\",\n    \"eslint-plugin-node\": \"^5.2.0\",\n    \"eslint-plugin-promise\": \"^3.4.0\",\n    \"eslint-plugin-standard\": \"^3.0.1\",\n    \"eslint-plugin-vue\": \"^4.0.0\",\n    \"extract-text-webpack-plugin\": \"^3.0.0\",\n    \"file-loader\": \"^1.1.4\",\n    \"friendly-errors-webpack-plugin\": \"^1.6.1\",\n    \"html-webpack-plugin\": \"^2.30.1\",\n    \"node-notifier\": \"^5.1.2\",\n    \"node-sass\": \"^4.9.0\",\n    \"optimize-css-assets-webpack-plugin\": \"^3.2.0\",\n    \"ora\": \"^1.2.0\",\n    \"portfinder\": \"^1.0.13\",\n    \"postcss-import\": \"^11.0.0\",\n    \"postcss-loader\": \"^2.0.8\",\n    \"postcss-url\": \"^7.2.1\",\n    \"rimraf\": \"^2.6.0\",\n    \"sass-loader\": \"^7.0.1\",\n    \"semver\": \"^5.3.0\",\n    \"shelljs\": \"^0.7.6\",\n    \"stylus\": \"^0.54.5\",\n    \"stylus-loader\": \"^3.0.2\",\n    \"uglifyjs-webpack-plugin\": \"^1.1.1\",\n    \"url-loader\": \"^0.5.8\",\n    \"vue-loader\": \"^13.3.0\",\n    \"vue-style-loader\": \"^3.0.1\",\n    \"vue-template-compiler\": \"^2.5.2\",\n    \"webpack\": \"^3.6.0\",\n    \"webpack-bundle-analyzer\": \"^3.6.0\",\n    \"webpack-dev-server\": \"^2.9.1\",\n    \"webpack-merge\": \"^4.1.0\"\n  },\n  \"engines\": {\n    \"node\": \">= 6.0.0\",\n    \"npm\": \">= 3.0.0\"\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not ie <= 8\"\n  ]\n}\n"
        },
        {
          "name": "prod.server.js",
          "type": "blob",
          "size": 0.3037109375,
          "content": "var express = require('express')\n// var config = require('./config/index')\nvar app = express()\napp.use(express.static('./dist'))\n\nvar port = 3001\n\nmodule.exports = app.listen(port, function (err) {\n  if (err) {\n    console.log(err)\n    return\n  }\n  console.log('Listening at http://localhost:' + port + '\\n')\n})"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 7.21484375,
          "content": "# Vue 网易云音乐 WebApp\n\n:musical_keyboard: 基于 Vue(2.5) + vuex + vue-router + vue-axios +better-scroll + Scss + ES6 等开发一款移动端音乐 WebApp，UI 界面参考了安卓版的网易云音乐、flex 布局适配常见移动端。\n\n:yum: 项目演示地址：[移动端音乐 WebApp](http://120.79.162.149:3002)，或者可以扫描二维码访问：\n\n![](./doc/img/qr.png)\n\n- 推荐使用手机预览，电脑在 Chrome 调试模式下食用效果更佳，开启调试模式的手机模式后，如果不能滚动，刷新一下页面即可\n\n## 预览\n\n图片虽然压缩过了，但是几张加载一起还是有 3MB 左右，所以请耐心等待一下啦:joy:。感觉不错的可以去上面 :point_up:的地址体验一下呦~\n\n#### 推荐、排行榜、歌手\n\n![推荐、排行、歌手](./doc/img/1.png)\n\n#### 歌单详情、个人中心\n\n![详情页面](./doc/img/2.png)\n\n#### 播放器、播放列表\n\n![播放器](./doc/img/3.png)\n\n#### 搜索页面\n\n![搜索](./doc/img/4.png)\n\n\n\n## 开发目的\n\n通过学习开发一个 Vue 全家桶项目，让自己更熟练的使用 Vue 全家桶、模块化开发、ES6 等等知识，提高自己的技术能力。\n\n## 技术栈\n\n**前端**\n\n* `Vue`：用于构建用户界面的 MVVM 框架\n* `vue-router`：为单页面应用提供的路由系统，使用了 `Lazy Loading Routes` 技术来实现异步加载优化性能\n* `vuex`：Vue 集中状态管理，在多个组件共享某些状态时非常便捷\n* `vue-lazyload`：实现图片懒加载，节省用户流量，优化页面加载速度\n* `better-scroll`：解决移动端各种滚动场景需求的插件，使移动端滑动体验更加流畅\n* `SCSS`：css 预编译处理器\n* `ES6`：ECMAScript 新一代语法，模块化、解构赋值、Promise、Class 等方法非常好用\n\n**后端**\n\n* `Node.js`：利用 Express 搭建的本地测试服务器\n* `vue-axios`：用来请求后端 API 音乐数据\n* `NeteaseCloudMusicApi`：网易云音乐 NodeJS 版 API，提供音乐数据\n\n**其他工具**\n\n* `vue-cli`：Vue 脚手架工具，快速初始化项目代码\n* `eslint`：代码风格检查工具，帮助我们规范代码书写（一定要养成良好的代码规范）\n* `iconfont` ：阿里巴巴图标库，谁用谁知道\n* `fastclick` ：消除 click 移动游览器 300ms 的延\n\n## 实现功能\n\n播放器内核、推荐页面、热榜页面、歌手页面、歌单详情、歌手详情、排行榜详情、搜索页面、播放列表、用户中心等等功能。\n\n### 推荐页面\n\n推荐页分成三个部分，分别是 banner 轮播图、推荐歌单、推荐歌曲，数据都是使用 `axios` 请求 API 获取得到的，图片都使用 `vue-lazyload` 实现懒加载。\n\n轮播图：使用 `better-scroll` 实现，具体可以看这里 [Slide](https://ustbhuangyi.github.io/better-scroll/doc/zh-hans/options-advanced.html#```snap```) 。*点击跳转方面只实现歌曲和歌单的跳转，因为暂时只实现了这两个功能。*\n\n推荐歌单，推荐歌曲：使用 `vuex` 管理数据，方便组件之间的数据交互（播放器播放歌曲）。因为数据上还有播放数量，所以就顺便也加上去了。\n\n### 排行榜页面\n\n同样是通过 API 获取到排行榜的数据，但是因为 API 获取到的是排行榜中所有歌曲的数据，所以难免在加载速度上有点慢，后期再看能不能优化一下，加载的慢毕竟太影响用户体验了，别的就没什么了。\n\n### 歌手页面\n\n实现歌手列表的左右联动（这个需要理解理解），因为之前已经写过和这个有关的博客，所以就不多写了，具体可以看我之前的这个笔记 :arrow_right: [移动端字母索引导航](http://caijin.tech/blog/2018/04/23/2018-4-23-list-view/) 。\n\n### 歌曲列表组件\n\n用来显示歌曲列表，在很多的地方都进行了复用，例如：歌单详情页、排行榜详情页、歌手详情页、搜索结果、用户中心等等。\n\n### 歌单详情页\n\n通过歌单的 ID 来获取歌单中的歌曲数据，然后还做了一些体验上面的交互，比如上滑显示状态栏然后将状态栏标题变为歌单名，具体可以尝试一下就知道了。\n\n然后就是复用 歌曲列表组建 来显示歌曲。\n\n### 排行榜详情、歌手详情\n\n和歌单详情基本上没有什么区别，除了 UI 界面方面有细微的改动（根据不同的内容作出不同的优化）。\n\n### 播放器\n\n最最最重要的组件，毕竟是个音乐播放器，不能放歌那啥都是扯淡了。\n\n实现功能：顺序播放、单曲循环、随机播放、收藏等。\n\n播放、暂停使用 HTML5 的 audio 实现。\n\n数据、播放状态、播放历史、习惯歌曲等方面使用了 `vuex` 来进行管理，因为数据太多，组件直接传递的话是会死人的，所以还是老老实实的用 `vuex` 吧，数据之前的传递真的很方便。\n\n图标使用 `iconfont` 阿里巴巴图标库，中间的唱片旋转动画使用了 `animation` 实现。\n\n歌词部分获取到网易的歌词数据，然后使用 第三方库 [`lyric-parser`](https://github.com/ustbhuangyi/lyric-parser) 进行处理。实现显示歌词、拖动进度条歌词同步滚动、歌词跟随歌曲进度高亮。\n\n通过 `localstorage` 存储喜欢歌曲、播放历史数据。\n\n#### audio 标签在移动端不能够自动播放的问题\n\n电脑端是没有这个问题的，这个问题真的是让我很头大，最后是用了很鬼畜的方法解决了（使用 `addEventListener` 监听 touchend 事件，然后在回调函数中让 audio 播放一次，具体看 App.vue 文件，注释有写）。\n\n### 播放列表\n\n显示和管理当前播放歌曲，可以用来删除列表中的歌曲、以及选择播放歌曲。\n\n### 搜索功能\n\n实现功能：搜索歌手、歌单、歌曲、热门搜索、数据节流、上拉刷新、保存搜索记录。\n\n通过关键字请求 API 获取搜索数据，显示歌手、歌单、歌曲。\n\n实现了上刷新，因为搜索可以设置请求数据的条数，所以可以用来实现上刷新的功能。\n\n通过节流函数实现数据节流，通过 `localstorage` 存储搜索数据。\n\n### 用户中心\n\n将在本地存储的数据显示出来，方便用户使用，后期准备添加更多功能。\n\n## TODO\n\n1. 优化排行榜加载速度\n2. 优化重复代码\n3. 增加歌曲评论\n4. 增加 MV、电台 功能\n5. emm，更多功能容我再想想哈\n\n## 感谢\n\n- 感谢 [Binaryify](https://github.com/Binaryify) 对接口文档 [NeteaseCloudMusicApi](https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=neteasecloudmusicapi) 的不断维护与更新。\n- 感谢 [ustbhuangyi](https://github.com/ustbhuangyi) 老师的 [Vue 实战教程](http://coding.imooc.com/class/107.html) ，让我学习到很多 vue 的知识。\n\n## 最后\n\n如果觉得我的项目还不错的话 :clap:，就给个 star :star: 鼓励一下吧~\n\n## Build Setup\n克隆代码到本地之后，需要运行 [NeteaseCloudMusicApi](https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=neteasecloudmusicapi)，来起一个音乐的 API 接口。\n\n如果需要在服务器上搭建的话就需要将 API 放到自己的服务器上面。\n\n```bash\n# install dependencies\nnpm install\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n```\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}