{
  "metadata": {
    "timestamp": 1736711516402,
    "page": 21,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjIy",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "chaitin/xray",
      "stars": 10563,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.025390625,
          "content": "*.py linguist-language=Go\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.736328125,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n.idea\n.DS_Store\n"
        },
        {
          "name": "Disclaimer.md",
          "type": "blob",
          "size": 2.8798828125,
          "content": "## 免责声明\n\n本工具仅面向**合法授权**的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。\n\n在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。**请勿对非授权目标进行扫描。**\n\n如果您获得了本软件社区高级版等版本的 License，该 License 下的权益仅限您个人使用，**禁止以任何形式复制、分发、传播该 License。**\n\n禁止对本软件实施逆向工程、反编译、试图破译源代码等行为。\n\n**如果发现上述禁止行为，我们将保留追究您法律责任的权利。**\n\n如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。\n\n在安装并使用本工具前，请您**务必审慎阅读、充分理解各条款内容**，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。\n除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。\n\n\n## Disclaimer\n\nThis tool is only for **legally authorized** enterprise security construction behavior, if you need to test the usability of this tool, please build your own target environment.\n\nWhen using this tool for testing, you should ensure that the behavior complies with local laws and regulations and that sufficient authorization has been obtained. **Do not scan unauthorized targets.**\n\nIf you have obtained the License of the software Community Premium Edition and other versions, the rights and interests under the License are for your personal use only. **Reproduction, distribution and dissemination of the License in any form are prohibited.**\n\nIt is forbidden to reverse engineer, decompile, and attempt to decipher the source code of the software.\n\n**We reserve the right to hold you legally liable if we find the above prohibited behavior.**\n\nIf you have any illegal behavior in the process of using this tool, you need to bear the corresponding consequences by yourself, and we will not bear any legal and joint liability.\n\nBefore installing and using the tool, please **be sure to carefully read and fully understand the content of the terms**. Limitations, disclaimers or other terms involving your significant rights and interests may be in bold, underlined and other forms to remind you to pay attention.\nPlease do not install and use this tool unless you have fully read, fully understand and accept all the terms of this Agreement. Your use of this Agreement or your acceptance of this Agreement by any other express or implied means shall be deemed that you have read and agreed to be bound by this Agreement."
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.5966796875,
          "content": "在符合以下条件的情况下，我们欢迎任何人以任何形式使用本项目（包括商用）。\n\n - 注明集成了本项目（注明方式： 在项目介绍页附上本项目 repo 地址）\n - 同意 https://github.com/chaitin/xray/blob/master/Disclaimer.md 免责声明\n\nAnyone is welcome to use this program in any form provided the following conditions are met (Including commercial).\n\n - Indicate the integration of the project (indicate: attach the repo address of the project on the project introduction page)\n - Agree to https://github.com/chaitin/xray/blob/master/Disclaimer.md disclaimer"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.7294921875,
          "content": "<h1 align=\"center\">Welcome to xray 👋</h1>\n<p align=\"center\">\n  <img src=\"https://img.shields.io/github/release/chaitin/xray.svg\" />\n  <img src=\"https://img.shields.io/github/release-date/chaitin/xray.svg?color=blue&label=update\" />\n  <img src=\"https://img.shields.io/badge/go report-A+-brightgreen.svg\" />\n  <a href=\"https://docs.xray.cool/\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" target=\"_blank\" />\n  </a>\n</p>\n\n<h3 align=\"center\">一款功能强大的安全评估工具 </h3>\n\n<p align=\"center\">\n  <a href=\"https://docs.xray.cool\">🏠使用文档</a> •\n  <a href=\"https://github.com/chaitin/xray/releases\">⬇️xray下载</a> •\n  <a href=\"https://github.com/chaitin/xpoc\">⬇️xpoc下载</a> •\n  <a href=\"https://github.com/chaitin/xapp\">⬇️xapp下载</a> •\n  <a href=\"https://github.com/chaitin/xray-plugins\">📖插件存储库</a>\n</p>\n\n[**English Version**](./README_EN.md)\n\n> 注意：xray系列不开源，直接下载构建的二进制文件即可，仓库内主要为社区贡献的 poc，每次 xray 发布将自动打包。\n\n## ✨ xray2.0\n\n为了解决 xray 1.0在功能增加过程中变得复杂且臃肿的问题，我们推出了 xray 2.0。\n\n这一全新版本致力于提升功能使用的流畅度，降低使用门槛，并帮助更多安全行业从业者以更高效的模式收获更好的体验。xray 2.0 将整合一系列新的安全工具，形成一个全面的安全工具集。\n\n**xray2.0系列的第二款工具xapp已经上线，欢迎体验！**\n\n### XPOC\n\nxpoc是xray2.0系列的第一款工具，它是一款为供应链漏洞扫描设计的快速应急响应工具\n\n项目地址：https://github.com/chaitin/xpoc\n\n### XAPP\n\nxapp是一款专注于web指纹识别的工具。你可以使用xapp对web目标所使用的技术进行识别，为安全测试做好准备。\n\n项目地址：https://github.com/chaitin/xapp\n\n### 插件存储库\n\n我们为各类插件创建了一个专门的存储库，旨在方便大家共享和使用各种插件。\n\n这里主要收录的是开源的、转化成 xray格式的脚本，以供大家使用。\n\n我们会不定期地往这里推送一些新的插件，同时也希望大家能积极踊跃的优化或者提交插件，共同丰富这个仓库。\n\n项目地址：https://github.com/chaitin/xray-plugins\n\n## 🚀 快速使用\n\n**在使用之前，请务必阅读并同意 [License](https://github.com/chaitin/xray/blob/master/LICENSE.md) 文件中的条款，否则请勿安装使用本工具。**\n\n1. 使用基础爬虫爬取并对爬虫爬取的链接进行漏洞扫描\n    \n    ```bash\n    xray webscan --basic-crawler http://example.com --html-output vuln.html\n    ```\n\n2. 使用 HTTP 代理进行被动扫描\n    \n    ```bash\n    xray webscan --listen 127.0.0.1:7777 --html-output proxy.html\n    ```\n   设置浏览器 http 代理为 `http://127.0.0.1:7777`，就可以自动分析代理流量并扫描。\n   \n   >如需扫描 https 流量，请阅读下方文档 `抓取 https 流量` 部分\n\n3. 只扫描单个 url，不使用爬虫\n    \n    ```bash\n    xray webscan --url http://example.com/?a=b --html-output single-url.html\n    ```\n\n4. 手动指定本次运行的插件\n   \n   默认情况下，将会启用所有内置插件，可以使用下列命令指定本次扫描启用的插件。\n   \n   ```bash\n   xray webscan --plugins cmd-injection,sqldet --url http://example.com\n   xray webscan --plugins cmd-injection,sqldet --listen 127.0.0.1:7777\n   ```\n      \n5. 指定插件输出\n\n    可以指定将本次扫描的漏洞信息输出到某个文件中:\n    \n    ```bash\n    xray webscan --url http://example.com/?a=b \\\n    --text-output result.txt --json-output result.json --html-output report.html\n    ```\n    \n    [报告样例](https://docs.xray.cool/assets/report_example.html)\n\n其他用法请阅读文档： https://docs.xray.cool\n\n## 🪟 检测模块\n\n新的检测模块将不断添加\n\n| 名称             | Key              | 版本  | 说明                                                                              |\n|----------------|------------------|-----|---------------------------------------------------------------------------------|\n| XSS漏洞检测        | `xss`            | 社区版 | 利用语义分析的方式检测XSS漏洞                                                                |\n| SQL 注入检测       | `sqldet`         | 社区版 | 支持报错注入、布尔注入和时间盲注等                                                               |\n| 命令/代码注入检测      | `cmd-injection`  | 社区版 | 支持 shell 命令注入、PHP 代码执行、模板注入等                                                    |\n| 目录枚举           | `dirscan`        | 社区版 | 检测备份文件、临时文件、debug 页面、配置文件等10余类敏感路径和文件                                           |\n| 路径穿越检测         | `path-traversal` | 社区版 | 支持常见平台和编码                                                                       |\n| XML 实体注入检测     | `xxe`            | 社区版 | 支持有回显和反连平台检测                                                                    |\n| poc 管理         | `phantasm`       | 社区版 | 默认内置部分常用的 poc，用户可以根据需要自行构建 poc 并运行。文档：[POC](https://docs.xray.cool/#/guide/poc) |\n| 文件上传检测         | `upload`         | 社区版 | 支持常见的后端语言                                                                       |\n| 弱口令检测          | `brute-force`    | 社区版 | 社区版支持检测 HTTP 基础认证和简易表单弱口令，内置常见用户名和密码字典                                          |\n| jsonp 检测       | `jsonp`          | 社区版 | 检测包含敏感信息可以被跨域读取的 jsonp 接口                                                       |\n| ssrf 检测        | `ssrf`           | 社区版 | ssrf 检测模块，支持常见的绕过技术和反连平台检测                                                      |\n| 基线检查           | `baseline`       | 社区版 | 检测低 SSL 版本、缺失的或错误添加的 http 头等                                                    |\n| 任意跳转检测         | `redirect`       | 社区版 | 支持 HTML meta 跳转、30x 跳转等                                                         |\n| CRLF 注入        | `crlf-injection` | 社区版 | 检测 HTTP 头注入，支持 query、body 等位置的参数                                                |\n| XStream漏洞检测    | `xstream`        | 社区版 | 检测XStream系列漏洞                                                                   |\n| Struts2 系列漏洞检测 | `struts`         | 高级版 | 检测目标网站是否存在Struts2系列漏洞，包括s2-016、s2-032、s2-045、s2-059、s2-061等常见漏洞                 |\n| Thinkphp系列漏洞检测 | `thinkphp`       | 高级版 | 检测ThinkPHP开发的网站的相关漏洞                                                            |\n| shiro反序列化漏洞检测  | `shiro`          | 高级版 | 检测Shiro反序列化漏洞                                                                   |\n| fastjson系列检测   | `fastjson`       | 高级版 | 检测fastjson系列漏洞                                                                  |\n\n\n## ⚡️ 进阶使用\n\n下列高级用法请查看 https://docs.xray.cool/ 使用。\n\n - 修改配置文件\n - 抓取 https 流量\n - 修改 http 发包配置\n - 反连平台的使用\n - ...\n\n## 😘 贡献 POC\n\nxray的进步离不开各位师傅的支持，秉持着互助共建的精神，为了让我们共同进步，xray也开通了“PoC收录”的渠道！在这里你将会得到：\n\n### 提交流程\n\n1. 贡献者以 PR 的方式向 github xray 社区仓库内提交， POC 提交位置: https://github.com/chaitin/xray/tree/master/pocs, 指纹识别脚本提交位置: https://github.com/chaitin/xray/tree/master/fingerprints\n2. PR 中根据 Pull Request 的模板填写 POC 信息\n3. 内部审核 PR，确定是否合并入仓库\n4. 但需要注意，如果想要获得POC的奖励，需要将你的POC提交到CT stack，才能获取到奖励\n\n### 丰厚的奖励\n\n- 贡献PoC将获得**丰厚的金币奖励**，成就感满满；\n- **丰富的礼品**兑换专区，50余种周边礼品任你挑选；\n- 定期更有京东卡上线兑换，离**财富自由**又近了一步；\n- 进入核心社群的机会，领取特殊任务，赚取**高额赏金**；\n\n### 完善的教程\n\n- 完善的**PoC编写教程和指导**，让你快速上手，少走弯路；\n\n### 学习与交流\n\n- **与贡献者、开发者面对面**学习交流的机会，各项能力综合提高；\n- 免笔试的**直通面试机会**，好工作不是梦；\n\n如果你已经成功贡献过PoC但是还没有进群，请添加客服微信：\n\n<img src=\"./asset/customer_service.png\" height=\"200px\">\n\n提供平台注册id进行验证，验证通过后即可进群！\n\n参照: https://docs.xray.cool/#/guide/contribute\n\n## 🔧周边生态\n\n### POC质量确认靶场\n\n[**Evil Pot**](https://github.com/chaitin/xray/tree/master/tests/evilpot)\n\n[Releases](https://github.com/chaitin/xray/releases?q=EvilPot&expanded=true)\n\n一个专门用于让扫描器产生误报的靶场\n\n编写插件应该尽量避免能在这个靶场扫描出结果\n\n### POC编写辅助工具\n\n该工具可以辅助生成POC，且在线版支持**poc查重**，本地版支持直接发包验证\n\n#### 在线版\n- [**规则实验室**](https://poc.xray.cool)\n- 在线版支持对**poc查重**\n#### 本地版\n- [**gamma-gui**](https://github.com/zeoxisca/gamma-gui)\n\n### xray gui辅助工具\n\n本工具仅是简单的命令行包装，并不是直接调用方法。在 xray 的规划中，未来会有一款真正的完善的 GUI 版 XrayPro 工具，敬请期待。\n\n- [**super-xray**](https://github.com/4ra1n/super-xray)\n\n## 📝 讨论区\n\n各位开发者和 xray 粉丝们，欢迎来[讨论区投票](https://github.com/chaitin/xray/discussions/1804)，决定 xray 2.0 工具的开发优先级，让你的声音塑造 xray 的未来！ 🚀\n\n提交误报漏报需求等等请务必先阅读 https://docs.xray.cool/#/guide/feedback\n\n如有问题可以在 GitHub 提 issue, 也可在下方的讨论组里\n\n1. GitHub:\n   - https://github.com/chaitin/xray/issues\n   - https://github.com/chaitin/xray/discussions\n\n2. 微信公众号：微信扫描以下二维码，关注我们\n\n    <img src=\"./asset/wechat.jpg\" height=\"200px\">\n\n3. 微信群: 请添加微信公众号并点击\"联系我们\" -> \"加群\"，然后扫描二维码加群\n\n4. QQ 群: 717365081\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=chaitin/xray&type=Date)](https://star-history.com/#chaitin/xray&Date)\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 11.306640625,
          "content": "<h1 align=\"center\">Welcome to xray 👋</h1>\n<p align=\"center\">\n  <img src=\"https://img.shields.io/github/release/chaitin/xray.svg\" />\n  <img src=\"https://img.shields.io/github/release-date/chaitin/xray.svg?color=blue&label=update\" />\n  <img src=\"https://img.shields.io/badge/go report-A+-brightgreen.svg\" />\n  <a href=\"https://docs.xray.cool/\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" target=\"_blank\" />\n  </a>\n</p>\n\n<h3 align=\"center\">A Powerful Security Assessment Tool </h3>\n\n<p align=\"center\">\n  <a href=\"https://docs.xray.cool\">🏠 Documentation</a> •\n  <a href=\"https://github.com/chaitin/xray/releases\">⬇️ Download xray</a> •\n  <a href=\"https://github.com/chaitin/xpoc\">⬇️ Download xpoc</a> •\n  <a href=\"https://github.com/chaitin/xapp\">⬇️ Download xapp</a> •\n  <a href=\"https://github.com/chaitin/xray-plugins\">📖 Plugin Repository</a>\n</p>\n\n[**中文版**](./README.md)\n\n> Note: xray is not open source, just download the built binary files directly. The repository mainly contains community-contributed POCs. Each xray release will automatically package them.\n\n## ✨ xray 2.0\n\nTo address the issue of xray 1.0 becoming complex and bloated with added features, we have launched xray 2.0.\n\nThis new version aims to enhance the smoothness of functionality, lower the usage threshold, and help more security industry practitioners achieve a better experience more efficiently. xray 2.0 will integrate a series of new security tools to form a comprehensive security toolset.\n\n**The second tool in the xray 2.0 series, xapp, is now online, welcome to try it!**\n\n### XPOC\n\nxpoc is the first tool in the xray 2.0 series, designed as a rapid emergency response tool for supply chain vulnerability scanning.\n\nProject address: https://github.com/chaitin/xpoc\n\n### XAPP\n\nxapp is a tool focused on web fingerprint identification. You can use xapp to identify the technologies used by web targets and prepare for security testing.\n\nProject address: https://github.com/chaitin/xapp\n\n### Plugin Repository\n\nWe have created a dedicated repository for various plugins, aimed at facilitating the sharing and use of different plugins.\n\nIt mainly collects open-source scripts converted into xray format for everyone to use.\n\nWe will periodically push some new plugins here and hope everyone will actively optimize or submit plugins to enrich this repository together.\n\nProject address: https://github.com/chaitin/xray-plugins\n\n## 🚀 Quick Usage\n\n**Before using, be sure to read and agree to the terms in the [License](https://github.com/chaitin/xray/blob/master/LICENSE.md) file. If not, please do not install or use this tool.**\n\n1. Use the basic crawler to scan the links crawled by the crawler for vulnerabilities\n\n    ```bash\n    xray webscan --basic-crawler http://example.com --html-output vuln.html\n    ```\n\n2. Use HTTP proxy for passive scanning\n\n    ```bash\n    xray webscan --listen 127.0.0.1:7777 --html-output proxy.html\n    ```\n   Set the browser's HTTP proxy to `http://127.0.0.1:7777`, then you can automatically analyze proxy traffic and scan it.\n\n   > To scan HTTPS traffic, please read the \"Capture HTTPS Traffic\" section below.\n\n3. Scan a single URL without using a crawler\n\n    ```bash\n    xray webscan --url http://example.com/?a=b --html-output single-url.html\n    ```\n\n4. Manually specify plugins for this run\n\n   By default, all built-in plugins will be enabled. You can specify the plugins to be enabled for this scan with the following commands.\n\n   ```bash\n   xray webscan --plugins cmd-injection,sqldet --url http://example.com\n   xray webscan --plugins cmd-injection,sqldet --listen 127.0.0.1:7777\n   ```\n\n5. Specify Plugin Output\n\n   You can specify to output the vulnerability information of this scan to a file:\n\n    ```bash\n    xray webscan --url http://example.com/?a=b \\\n    --text-output result.txt --json-output result.json --html-output report.html\n    ```\n\n   [Sample Report](https://docs.xray.cool/assets/report_example.html)\n\nFor other usage, please read the documentation: https://docs.xray.cool\n\n## 🪟 Detection Modules\n\nNew detection modules will be continuously added.\n\n| Name             | Key              | Version  | Description                                                                          |\n|------------------|------------------|----------|--------------------------------------------------------------------------------------|\n| XSS Detection    | `xss`            | Community | Detects XSS vulnerabilities using semantic analysis                                  |\n| SQL Injection Detection | `sqldet` | Community | Supports error-based injection, boolean-based injection, and time-based blind injection |\n| Command/Code Injection Detection | `cmd-injection`  | Community | Supports shell command injection, PHP code execution, template injection, etc.        |\n| Directory Enumeration | `dirscan`    | Community | Detects over 10 types of sensitive paths and files such as backup files, temporary files, debug pages, and configuration files |\n| Path Traversal Detection | `path-traversal` | Community | Supports common platforms and encodings                                               |\n| XML External Entity (XXE) Detection | `xxe`    | Community | Supports detection with echo and back-connect platform                                 |\n| POC Management      | `phantasm`       | Community | Comes with some common POCs by default; users can build and run POCs as needed. Documentation: [POC](https://docs.xray.cool/#/guide/poc) |\n| File Upload Detection | `upload` | Community | Supports common backend languages                                                     |\n| Weak Password Detection | `brute-force` | Community | Community edition supports HTTP basic authentication and simple form weak password detection, with built-in common username and password dictionary |\n| JSONP Detection      | `jsonp` | Community | Detects JSONP interfaces containing sensitive information that can be read across domains |\n| SSRF Detection      | `ssrf` | Community | SSRF detection module, supports common bypass techniques and back-connect platform detection |\n| Baseline Check      | `baseline` | Community | Detects low SSL versions, missing or incorrectly added HTTP headers                   |\n| Arbitrary Redirect Detection | `redirect` | Community | Supports HTML meta redirects, 30x redirects, etc.                                     |\n| CRLF Injection      | `crlf-injection` | Community | Detects HTTP header injection, supports parameters in query, body, etc.               |\n| XStream Vulnerability Detection | `xstream` | Community | Detects XStream series vulnerabilities                                                |\n| Struts2 Vulnerability Detection | `struts` | Advanced | Detects Struts2 series vulnerabilities, including common ones like s2-016, s2-032, s2-045, s2-059, s2-061, etc. |\n| ThinkPHP Vulnerability Detection | `thinkphp` | Advanced | Detects related vulnerabilities in websites developed with ThinkPHP                   |\n| Shiro Deserialization Vulnerability Detection | `shiro` | Advanced | Detects Shiro deserialization vulnerabilities                                         |\n| Fastjson Vulnerability Detection | `fastjson` | Advanced | Detects Fastjson series vulnerabilities                                               |\n\n\n## ⚡️ Advanced Usage\n\nFor the following advanced usage, please see https://docs.xray.cool/.\n\n- Modify configuration file\n- Capture HTTPS traffic\n- Modify HTTP request configuration\n- Use of the back-connect platform\n- ...\n\n## 😘 Contribute POCs\n\nThe progress of xray cannot be achieved without the support of many contributors. In the spirit of mutual assistance and co-construction, to help us all progress together, xray has also opened a channel for \"POC inclusion\"! Here you will get:\n\n### Submission Process\n\n1. Contributors submit to the GitHub xray community repository via PR. POC submission location: https://github.com/chaitin/xray/tree/master/pocs, fingerprint script submission location: https://github.com/chaitin/xray/tree/master/fingerprints\n2. Fill in the POC information according to the Pull Request template in the PR.\n3. Internal review of the PR to determine whether to merge into the repository.\n4. Note: To receive POC rewards, you need to submit your POC to the CT stack to receive the rewards.\n\n### Generous Rewards\n\n- Contribute POCs to receive **generous gold rewards** with a sense of accomplishment;\n- **Rich gift** redemption area, with over 50 kinds of peripheral gifts to choose from;\n- Regularly launch JD card redemption, getting **closer to financial freedom**;\n- Opportunity to enter the core community, receive special tasks, and earn **high bounties**;\n\n### Comprehensive Tutorials\n\n- Comprehensive **POC writing tutorials and guidance** to help you get started quickly and avoid pitfalls;\n\n### Learning and Communication\n\n- **Face-to-face learning and communication opportunities** with contributors and developers, improving comprehensive skills;\n- **Direct interview opportunities** without written tests, making good jobs not just a dream;\n\nIf you have successfully contributed a POC but have not yet\n\njoined the group, please add the customer service WeChat:\n\n<img src=\"./asset/customer_service.png\" height=\"200px\">\n\nProvide the platform registration ID for verification. Once verified, you can join the group!\n\nRefer to: https://docs.xray.cool/#/guide/contribute\n\n## 🔧 Surrounding Ecosystem\n\n\n### POC Quality Confirmation Range\n\n[**Evil Pot**](https://github.com/chaitin/xray/tree/master/tests/evilpot)\n\n[Releases](https://github.com/chaitin/xray/releases?q=EvilPot&expanded=true)\n\nA range specifically designed to allow scanners to generate false positives\n\nPlugins should be written to try to avoid being able to scan results in this range\n\n### POC Writing Assistant Tools\n\nThis tool can assist in generating POCs, and the online version supports **POC duplication checks**, while the local version supports direct packet verification.\n\n#### Online Version\n- [**Rule Laboratory**](https://poc.xray.cool)\n- The online version supports **POC duplication checks**.\n#### Local Version\n- [**gamma-gui**](https://github.com/zeoxisca/gamma-gui)\n\n### xray GUI Assistant Tools\n\nThis tool is just a simple command line wrapper, not a direct method call. In the xray plan, there will be a truly complete GUI version of XrayPro in the future, so stay tuned.\n\n- [**super-xray**](https://github.com/4ra1n/super-xray)\n\n## 📝 Discussion Area\n\nFellow developers and xray fans, feel free to come to [Discussion Board Vote](https://github.com/chaitin/xray/discussions/1804) to decide the development priorities for xray 2.0 tools and let your voice shape the future of xray! 🚀\n\nBefore submitting false positives, missed reports, or requests, please be sure to read https://docs.xray.cool/#/guide/feedback.\n\nIf you have any questions, you can submit an issue on GitHub or join the discussion groups below.\n\n1. GitHub:\n   - https://github.com/chaitin/xray/issues\n   - https://github.com/chaitin/xray/discussions\n\n2. WeChat Official Account: Scan the QR code below to follow us\n\n    <img src=\"./asset/wechat.jpg\" height=\"200px\">\n\n3. WeChat Group: Add the WeChat official account, click \"Contact Us\" -> \"Join Group\", and then scan the QR code to join the group.\n\n4. QQ Group: 717365081\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=chaitin/xray&type=Date)](https://star-history.com/#chaitin/xray&Date)"
        },
        {
          "name": "asset",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fingerprints",
          "type": "tree",
          "content": null
        },
        {
          "name": "pocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "report",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "webhook",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}