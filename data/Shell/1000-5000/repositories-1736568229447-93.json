{
  "metadata": {
    "timestamp": 1736568229447,
    "page": 93,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jonmosco/kube-ps1",
      "stars": 3583,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".DS_Store\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.6787109375,
          "content": "## kube-ps1 project CHANGELOG\n\n### [UNRELEASED]\n\n* symbol function cleanup and simplification ([#165](https://github.com/jonmosco/kube-ps1/issues/165))\n* Added 2 new glyphs for the symbol\n* The arguments to customize the symbol now include `k8s`, `oc`, and `img`.  The default is `⎈`.\n* cleanup of the codebase to reduce environment variable clutter\n* Some README cleanups.\n* Implemented testing with bats\n\n## 0.8.0 (11/22/22)\n\nLots of updates and changes in this long overdue release.  Hopefully this summary will include the major\nchanges over the last few years.\n\n* function name updates to be more descriptive\n* added openshift glyph option ([#164](https://github.com/jonmosco/kube-ps1/issues/164))\n* Improve caching to account for deleted/missing kube config files ([#118](https://github.com/jonmosco/kube-ps1/issues/118))\n* Added ability to change the color of `KUBE_PS1_PREFIX` and `KUBE_PS1_SUFFIX` ([#79](https://github.com/jonmosco/kube-ps1/issues/79))\n* Added option to turn off image padding.  Defaults to `true`.  There were some troubles with terminals overlapping the symbol ([#126](https://github.com/jonmosco/kube-ps1/issues/126))\n\n### IMPROVEMENTS\n\n## 0.7.0 (2/21/19)\n\n* Merged ([#47](https://github.com/jonmosco/kube-ps1/pull/47)) to allow modification of cluster and namespace with user\n  supplied functions\n* Color handling now takes named arguments properly for base colors and integer\n  values for 256 colors\n\n### BUG FIXES:\n\n* For zsh, stat module is loaded with `zmodload -F zsh/stat b:zstat` to avoid\n  conflict with system or user `stat`\n\n## 0.6.0 (2/25/18)\n\n### BUG FIXES:\n\n* kubeon and kubeoff: Fix state on already running shells  ([#37](https://github.com/jonmosco/kube-ps1/issues/37))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3837890625,
          "content": "Contributing to kube-ps1\n========================\n\nChanges are welcome!  Please read the [bug reports and shell configuration](#bug-reports-and-shell-configuration) section before submitting a bug report.\nA good deal of the problems experienced with kube-ps1 are due to the vast ways of customizing the shell.\nPlease try the prompt with a minimal configuration before submitting a bug report.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.2744140625,
          "content": "# kube-ps1: Kubernetes prompt for bash and zsh\n\n![GitHub Release](https://img.shields.io/github/v/release/jonmosco/kube-ps1)\n[![CI](https://github.com/jonmosco/kube-ps1/actions/workflows/ci.yml/badge.svg)](https://github.com/jonmosco/kube-ps1/actions/workflows/ci.yml)\n\nA script that lets you add the current Kubernetes context and namespace\nconfigured on `kubectl` to your Bash/Zsh prompt strings (i.e. the `$PS1`).\n\nInspired by several tools used to simplify usage of `kubectl`.\n\n![prompt demo](img/kube-ps1-demo.gif)\n\n## Installing\n\n### Packages\n\n### MacOS Brew Ports\n\nHomebrew package manager:\n\n```sh\nbrew update\nbrew install kube-ps1\n```\n\n### Arch Linux\n\nAUR Package available at [https://aur.archlinux.org/packages/kube-ps1/](https://aur.archlinux.org/packages/kube-ps1/).\n\n### Oh My Zsh\n\nhttps://github.com/ohmyzsh/ohmyzsh\n\nkube-ps1 is included as a plugin in the oh-my-zsh project.  To enable it, edit your `~/.zshrc` and\nadd the plugin:\n\n```bash\nplugins=(\n  kube-ps1\n)\nPROMPT='$(kube_ps1)'$PROMPT # or RPROMPT='$(kube_ps1)'\n```\n\n## Zsh zinit plugin\n\n### Using [zinit](https://github.com/zdharma-continuum/zinit)\n\nUpdate `.zshrc` with:\n```sh\nzinit light jonmosco/kube-ps1\nPROMPT='$(kube_ps1)'$PROMPT # or RPROMPT='$(kube_ps1)'\n```\n\n### Fig\n\nInstall `kube-ps1` in zsh, bash, or fish with one click.\n\n<a href=\"https://fig.io/plugins/other/kube-ps1\" target=\"_blank\"><img src=\"https://fig.io/badges/install-with-fig.svg\" /></a>\n\n### From Source (git clone)\n\n1. Clone this repository\n2. Source the kube-ps1.sh in your `~/.zshrc` or your `~/.bashrc`\n\n#### Zsh\n\n```sh\nsource /path/to/kube-ps1.sh\nPROMPT='$(kube_ps1)'$PROMPT # or RPROMPT='$(kube_ps1)'\n```\n#### Bash\n\n```sh\nsource /path/to/kube-ps1.sh\nPS1='[\\u@\\h \\W $(kube_ps1)]\\$ '\n```\n\n## Requirements\n\nThe default prompt assumes you have the `kubectl` command line utility installed.\nOfficial installation instructions and binaries are available:\n\n[Install and Set up kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n\nIf using this with OpenShift, the `oc` tool needs installed.  It can be obtained\nfrom brew ports:\n\n```sh\nbrew install openshift-cli\n```\nor the source can be downloaded:\n\n[OC Client Tools](https://github.com/okd-project/okd/releases)\n\nSet the binary to `oc` with the following variable:\n\n```sh\nKUBE_PS1_BINARY=oc\n```\n\nIf neither binary is available, the prompt will print the following:\n\n```sh\n(<symbol>|BINARY-N/A:N/A)\n```\n\n## Helper utilities\n\nThere are several great tools that make using kubectl very enjoyable:\n\n- [`kubectx` and `kubens`](https://github.com/ahmetb/kubectx) are great for\nfast switching between clusters and namespaces.\n\n## Tmux port\n\nI have begun porting kube-ps1 to tmux as a status line plugin.  If you prefer\ntmux, and like the functionality provided by kube-ps1, checkout the\n[kube-tmux](https://github.com/jonmosco/kube-tmux) project\n\n## Prompt Structure\n\nThe default prompt layout is:\n\n```\n(<symbol>|<context>:<namespace>)\n```\n\nIf the current-context is not set, kube-ps1 will return the following:\n\n```\n(<symbol>|N/A:N/A)\n```\n\n## Enabling/Disabling\n\nIf you want to stop showing Kubernetes status on your prompt string temporarily\nrun `kubeoff`. To disable the prompt for all shell sessions, run `kubeoff -g`.\nYou can enable it again in the current shell by running `kubeon`, and globally\nwith `kubeon -g`.\n\n```\nkubeon     : turn on kube-ps1 status for this shell.  Takes precedence over\n             global setting for current session\nkubeon -g  : turn on kube-ps1 status globally\nkubeoff    : turn off kube-ps1 status for this shell. Takes precedence over\n             global setting for current session\nkubeoff -g : turn off kube-ps1 status globally\n```\n\n## Symbol\n\nThe default symbols are UTF8 and should work with most fonts. If you want to use the Kubernetes and OpenShift\nglyphs, you need to install a patched font that contains the glyph. [Nerd Fonts](https://www.nerdfonts.com/) provides both glyphs. Follow their installation instructions to install the patched font.\n\n`KUBE_PS1_SYMBOL_CUSTOM` options\n| Options | Symbol | Description |\n| ------------- | ------ | ----------- |\n| default (empty string) | ⎈      | Default symbol (Unicode `\\u2388`) |\n| img           | ☸️      | Symbol often used to represent Kubernetes (Unicode `\\u2638`) |\n| oc            | ![openshift-glyph](img/openshift-glyph.png) | Symbol representing OpenShift (Unicode `\\ue7b7`) |\n| k8s           | ![k8s-glyph](img/k8s-glyph.png) | Symbol representing Kubernetes (Unicode `\\ue7b7`) |\n\nTo set the symbol to one of the custom glyphs, add the following to your `~/.bashrc` or `~/.zshrc`:\n\n```sh\nKUBE_PS1_SYMBOL_CUSTOM=img\n```\n\nTo set the symbol to the default, set the `KUBE_PS1_SYMBOL` to an empty string.\n\nHeres a demo of the symbols in action:\n![kube-ps1-symbols](img/kube-ps1-symbol-demo.gif)\n\nIf the font is not properly installed, and the glyph is not available, it will display an empty set of brackets or similar:\n\n```sh\n echo -n \"\\ue7b7\"\n \n```\n\n## Customization\n\nThe default settings can be overridden in `~/.bashrc` or `~/.zshrc` by setting\nthe following variables:\n\n| Variable | Default | Meaning |\n| :------- | :-----: | ------- |\n| `KUBE_PS1_BINARY` | `kubectl` | Default Kubernetes binary |\n| `KUBE_PS1_NS_ENABLE` | `true` | Display the namespace. If set to `false`, this will also disable `KUBE_PS1_DIVIDER` |\n| `KUBE_PS1_PREFIX` | `(` | Prompt opening character  |\n| `KUBE_PS1_SYMBOL_ENABLE` | `true ` | Display the prompt Symbol. If set to `false`, this will also disable `KUBE_PS1_SEPARATOR` |\n| `KUBE_PS1_SYMBOL_PADDING` | `false` | Adds a space (padding) after the symbol to prevent clobbering prompt characters |\n| `KUBE_PS1_SYMBOL_CUSTOM` | `⎈ ` | Change the Default prompt symbol. Unicode `\\u2388`.  Options are `k8s`, `img`, `oc` |\n| `KUBE_PS1_SYMBOL_COLOR` | `blue` | Change the Default symbol color. |\n| `KUBE_PS1_SEPARATOR` | &#124; | Separator between symbol and context name |\n| `KUBE_PS1_DIVIDER` | `:` | Separator between context and namespace |\n| `KUBE_PS1_SUFFIX` | `)` | Prompt closing character |\n| `KUBE_PS1_CLUSTER_FUNCTION` | No default, must be user supplied | Function to customize how cluster is displayed |\n| `KUBE_PS1_NAMESPACE_FUNCTION` | No default, must be user supplied | Function to customize how namespace is displayed |\n\nTo disable a feature, set it to an empty string:\n\n```sh\nKUBE_PS1_SEPARATOR=''\n```\n\n## Colors\n\nThe default colors are set with the following variables:\n\n| Variable | Default | Meaning |\n| :------- | :-----: | ------- |\n| `KUBE_PS1_PREFIX_COLOR` | `null` | Set default color of the prompt prefix |\n| `KUBE_PS1_SYMBOL_COLOR` | `blue` | Set default color of the Kubernetes symbol |\n| `KUBE_PS1_CTX_COLOR` | `red` | Set default color of the context |\n| `KUBE_PS1_SUFFIX_COLOR` | `null` | Set default color of the prompt suffix |\n| `KUBE_PS1_NS_COLOR` | `cyan` | Set default color of the namespace |\n| `KUBE_PS1_BG_COLOR` | `null` | Set default color of the prompt background |\n\nBlue was used for the default symbol to match the Kubernetes color as closely\nas possible. Red was chosen as the context name to stand out, and cyan for the\nnamespace.\n\nSet the variable to an empty string if you do not want color for each\nprompt section:\n\n```sh\nKUBE_PS1_CTX_COLOR=''\n```\n\nNames are usable for the following colors:\n\n```\nblack, red, green, yellow, blue, magenta, cyan\n```\n\n256 colors are available by specifying the numerical value as the variable\nargument.\n\n## Customize display of cluster name and namespace\n\nYou can change how the cluster name and namespace are displayed using the\n`KUBE_PS1_CLUSTER_FUNCTION` and `KUBE_PS1_NAMESPACE_FUNCTION` variables\nrespectively.\n\nFor the following examples let's assume the following:\n\ncluster name: `sandbox.k8s.example.com`\nnamespace: `alpha`\n\nIf you're using domain style cluster names, your prompt will get quite long\nvery quickly. Let's say you only want to display the first portion of the\ncluster name (`sandbox`), you could do that by adding the following:\n\n```sh\nfunction get_cluster_short() {\n  echo \"$1\" | cut -d . -f1\n}\n\nKUBE_PS1_CLUSTER_FUNCTION=get_cluster_short\n```\n\nThe same pattern can be followed to customize the display of the namespace.\nLet's say you would prefer the namespace to be displayed in all uppercase\n(`ALPHA`), here's one way you could do that:\n\n```sh\nfunction get_namespace_upper() {\n    echo \"$1\" | tr '[:lower:]' '[:upper:]'\n}\n\nexport KUBE_PS1_NAMESPACE_FUNCTION=get_namespace_upper\n```\n\nIn both cases, the variable is set to the name of the function, and you must have defined the function in your shell configuration before kube_ps1 is called. The function must accept a single parameter and echo out the final value.\n\n### Bug Reports and shell configuration\n\nDue to the vast ways of customizing the shell, please try the prompt with a\nminimal configuration before submitting a bug report.\n\nThis can be done as follows for each shell before loading kube-ps1:\n\nBash:\n\n```sh\nbash --norc\n```\n\nZsh:\n\n```sh\nzsh -f\nor\nzsh --no-rcs\n```\n\nFor the prompt symbol, a patched font that contains the glyphs must be installed.\n[Nerd Fonts Downloads](https://www.nerdfonts.com/font-downloads) provides patched\nfonts containing the glyphs.  Please consult their documentation for this, support\nis out of scope for this project.\n\n### Contributors\n\nThank you to everyone in the community for their contributions to kube-ps1! \n\n<a href=\"https://github.com/jonmosco/kube-ps1/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=jonmosco/kube-ps1\" />\n</a>\n\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "kube-ps1.sh",
          "type": "blob",
          "size": 12.3037109375,
          "content": "#!/usr/bin/env bash\n\n# Kubernetes prompt helper for bash/zsh\n# Displays current context and namespace\n\n# Copyright 2024 Jon Mosco\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Debug\n[[ -n $DEBUG ]] && set -x\n\n# Default values for the prompt\n# Override these values in ~/.zshrc or ~/.bashrc\nKUBE_PS1_BINARY=\"${KUBE_PS1_BINARY:-kubectl}\"\nKUBE_PS1_SYMBOL_ENABLE=\"${KUBE_PS1_SYMBOL_ENABLE:-true}\"\nKUBE_PS1_SYMBOL_PADDING=\"${KUBE_PS1_SYMBOL_PADDING:-false}\"\nKUBE_PS1_SYMBOL_COLOR=\"${KUBE_PS1_SYMBOL_COLOR:-}\"\n\nKUBE_PS1_NS_ENABLE=\"${KUBE_PS1_NS_ENABLE:-true}\"\nKUBE_PS1_CONTEXT_ENABLE=\"${KUBE_PS1_CONTEXT_ENABLE:-true}\"\nKUBE_PS1_PREFIX=\"${KUBE_PS1_PREFIX-(}\"\nKUBE_PS1_SEPARATOR=\"${KUBE_PS1_SEPARATOR-|}\"\nKUBE_PS1_DIVIDER=\"${KUBE_PS1_DIVIDER-:}\"\nKUBE_PS1_SUFFIX=\"${KUBE_PS1_SUFFIX-)}\"\n\n_KUBE_PS1_KUBECONFIG_CACHE=\"${KUBECONFIG}\"\n_KUBE_PS1_DISABLE_PATH=\"${HOME}/.kube/kube-ps1/disabled\"\n_KUBE_PS1_LAST_TIME=0\n\n# Determine our shell\n_kube_ps1_shell_type() {\n  local _KUBE_PS1_SHELL_TYPE\n\n  if [ \"${ZSH_VERSION-}\" ]; then\n    _KUBE_PS1_SHELL_TYPE=\"zsh\"\n  elif [ \"${BASH_VERSION-}\" ]; then\n    _KUBE_PS1_SHELL_TYPE=\"bash\"\n  fi\n  echo $_KUBE_PS1_SHELL_TYPE\n}\n\n_kube_ps1_init() {\n  [[ -f \"${_KUBE_PS1_DISABLE_PATH}\" ]] && KUBE_PS1_ENABLED=off\n\n  case \"$(_kube_ps1_shell_type)\" in\n    \"zsh\")\n      _KUBE_PS1_OPEN_ESC=\"%{\"\n      _KUBE_PS1_CLOSE_ESC=\"%}\"\n      _KUBE_PS1_DEFAULT_BG=\"%k\"\n      _KUBE_PS1_DEFAULT_FG=\"%f\"\n      setopt PROMPT_SUBST\n      autoload -U add-zsh-hook\n      add-zsh-hook precmd _kube_ps1_prompt_update\n      zmodload -F zsh/stat b:zstat\n      zmodload zsh/datetime\n      ;;\n    \"bash\")\n      _KUBE_PS1_OPEN_ESC=$'\\001'\n      _KUBE_PS1_CLOSE_ESC=$'\\002'\n      _KUBE_PS1_DEFAULT_BG=$'\\033[49m'\n      _KUBE_PS1_DEFAULT_FG=$'\\033[39m'\n      [[ $PROMPT_COMMAND =~ _kube_ps1_prompt_update ]] || PROMPT_COMMAND=\"_kube_ps1_prompt_update;${PROMPT_COMMAND:-:}\"\n      ;;\n  esac\n}\n\n_kube_ps1_color_fg() {\n  local _KUBE_PS1_FG_CODE\n  case \"${1}\" in\n    black) _KUBE_PS1_FG_CODE=0;;\n    red) _KUBE_PS1_FG_CODE=1;;\n    green) _KUBE_PS1_FG_CODE=2;;\n    yellow) _KUBE_PS1_FG_CODE=3;;\n    blue) _KUBE_PS1_FG_CODE=4;;\n    magenta) _KUBE_PS1_FG_CODE=5;;\n    cyan) _KUBE_PS1_FG_CODE=6;;\n    white) _KUBE_PS1_FG_CODE=7;;\n    # 256\n    [0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-6]) _KUBE_PS1_FG_CODE=\"${1}\";;\n    *) _KUBE_PS1_FG_CODE=default\n  esac\n\n  if [[ \"${_KUBE_PS1_FG_CODE}\" == \"default\" ]]; then\n    _KUBE_PS1_FG_CODE=\"${_KUBE_PS1_DEFAULT_FG}\"\n    return\n  elif [[ \"$(_kube_ps1_shell_type)\" == \"zsh\" ]]; then\n    _KUBE_PS1_FG_CODE=\"%F{$_KUBE_PS1_FG_CODE}\"\n  elif [[ \"$(_kube_ps1_shell_type)\" == \"bash\" ]]; then\n    if tput setaf 1 &> /dev/null; then\n      _KUBE_PS1_FG_CODE=\"$(tput setaf \"${_KUBE_PS1_FG_CODE}\")\"\n    elif [[ $_KUBE_PS1_FG_CODE -ge 0 ]] && [[ $_KUBE_PS1_FG_CODE -le 256 ]]; then\n      _KUBE_PS1_FG_CODE=\"\\033[38;5;${_KUBE_PS1_FG_CODE}m\"\n    else\n      _KUBE_PS1_FG_CODE=\"${_KUBE_PS1_DEFAULT_FG}\"\n    fi\n  fi\n  echo \"${_KUBE_PS1_OPEN_ESC}${_KUBE_PS1_FG_CODE}${_KUBE_PS1_CLOSE_ESC}\"\n}\n\n_kube_ps1_color_bg() {\n  local _KUBE_PS1_BG_CODE\n  case \"${1}\" in\n    black) _KUBE_PS1_BG_CODE=0;;\n    red) _KUBE_PS1_BG_CODE=1;;\n    green) _KUBE_PS1_BG_CODE=2;;\n    yellow) _KUBE_PS1_BG_CODE=3;;\n    blue) _KUBE_PS1_BG_CODE=4;;\n    magenta) _KUBE_PS1_BG_CODE=5;;\n    cyan) _KUBE_PS1_BG_CODE=6;;\n    white) _KUBE_PS1_BG_CODE=7;;\n    # 256\n    [0-9]|[1-9][0-9]|[1][0-9][0-9]|[2][0-4][0-9]|[2][5][0-6]) _KUBE_PS1_BG_CODE=\"${1}\";;\n    *) _KUBE_PS1_BG_CODE=$'\\033[0m';;\n  esac\n\n  if [[ \"${_KUBE_PS1_BG_CODE}\" == \"default\" ]]; then\n    _KUBE_PS1_FG_CODE=\"${_KUBE_PS1_DEFAULT_BG}\"\n    return\n  elif [[ \"$(_kube_ps1_shell_type)\" == \"zsh\" ]]; then\n    _KUBE_PS1_BG_CODE=\"%K{$_KUBE_PS1_BG_CODE}\"\n  elif [[ \"$(_kube_ps1_shell_type)\" == \"bash\" ]]; then\n    if tput setaf 1 &> /dev/null; then\n      _KUBE_PS1_BG_CODE=\"$(tput setab \"${_KUBE_PS1_BG_CODE}\")\"\n    elif [[ $_KUBE_PS1_BG_CODE -ge 0 ]] && [[ $_KUBE_PS1_BG_CODE -le 256 ]]; then\n      _KUBE_PS1_BG_CODE=\"\\033[48;5;${_KUBE_PS1_BG_CODE}m\"\n    else\n      _KUBE_PS1_BG_CODE=\"${DEFAULT_BG}\"\n    fi\n  fi\n  echo \"${_KUBE_PS1_OPEN_ESC}${_KUBE_PS1_BG_CODE}${_KUBE_PS1_CLOSE_ESC}\"\n}\n\n_kube_ps1_binary_check() {\n  command -v $1 >/dev/null\n}\n\n_kube_ps1_symbol() {\n  # Exit early if symbol display is disabled\n  [[ \"${KUBE_PS1_SYMBOL_ENABLE}\" == false ]] && return\n\n  local symbol_arg=\"${KUBE_PS1_SYMBOL_CUSTOM}\"\n\n  local symbol=\"\"\n  local symbol_default=$'\\u2388'\n  local symbol_img=\"☸️\" \n  local k8s_glyph=$'\\Uf10fe'\n  local k8s_symbol_color=blue\n  local oc_glyph=$'\\ue7b7'\n  local oc_symbol_color=red\n  local custom_symbol_color=\"${KUBE_PS1_SYMBOL_COLOR:-$k8s_symbol_color}\"\n\n  # Choose the symbol based on the provided argument or environment variable\n  case \"${symbol_arg}\" in\n    \"img\")\n      symbol=\"${symbol_img}\"\n      ;;\n    \"k8s\")\n      symbol=\"$(_kube_ps1_color_fg \"${custom_symbol_color}\")${k8s_glyph}${KUBE_PS1_RESET_COLOR}\"\n      ;;\n    \"oc\")\n      symbol=\"$(_kube_ps1_color_fg ${oc_symbol_color})${oc_glyph}${KUBE_PS1_RESET_COLOR}\"\n      ;;\n    *)\n      case \"$(_kube_ps1_shell_type)\" in\n        bash)\n          if ((BASH_VERSINFO[0] >= 4)) && [[ $'\\u2388' != \"\\\\u2388\" ]]; then\n            symbol=\"$(_kube_ps1_color_fg $custom_symbol_color)${symbol_default}${KUBE_PS1_RESET_COLOR}\"\n            symbol_img=$'\\u2638\\ufe0f'\n          else\n            symbol=$'\\xE2\\x8E\\x88'\n            symbol_img=$'\\xE2\\x98\\xB8'\n          fi\n          ;;\n        zsh)\n          symbol=\"$(_kube_ps1_color_fg $custom_symbol_color)${symbol_default}${KUBE_PS1_RESET_COLOR}\"\n          symbol_img=\"☸️\"\n          ;;\n        *)\n          symbol=\"k8s\"\n      esac\n  esac\n\n  # Append padding if enabled\n  if [[ \"${KUBE_PS1_SYMBOL_PADDING}\" == true ]]; then\n    echo \"${symbol} \"\n  else\n    echo \"${symbol}\"\n  fi\n}\n\n_kube_ps1_split_config() {\n  type setopt >/dev/null 2>&1 && setopt SH_WORD_SPLIT\n  local IFS=$1\n  echo $2\n}\n\n_kube_ps1_file_newer_than() {\n  local mtime\n  local file=$1\n  local check_time=$2\n\n  if [[ \"$(_kube_ps1_shell_type)\" == \"zsh\" ]]; then\n    # Use zstat '-F %s.%s' to make it compatible with low zsh version (eg: 5.0.2)\n    mtime=$(zstat +mtime -F %s.%s \"${file}\")\n  elif stat -c \"%s\" /dev/null &> /dev/null; then\n    # GNU stat\n    mtime=$(stat -L -c %Y \"${file}\")\n  else\n    # BSD stat\n    mtime=$(stat -L -f %m \"$file\")\n  fi\n\n  [[ \"${mtime}\" -gt \"${check_time}\" ]]\n}\n\n_kube_ps1_prompt_update() {\n  local return_code=$?\n\n  [[ \"${KUBE_PS1_ENABLED}\" == \"off\" ]] && return $return_code\n\n  if ! _kube_ps1_binary_check \"${KUBE_PS1_BINARY}\"; then\n    # No ability to fetch context/namespace; display N/A.\n    KUBE_PS1_CONTEXT=\"BINARY-N/A\"\n    KUBE_PS1_NAMESPACE=\"N/A\"\n    return $return_code\n  fi\n\n  if [[ \"${KUBECONFIG}\" != \"${_KUBE_PS1_KUBECONFIG_CACHE}\" ]]; then\n    # User changed KUBECONFIG; unconditionally refetch.\n    _KUBE_PS1_KUBECONFIG_CACHE=${KUBECONFIG}\n    _kube_ps1_get_context_ns\n    return $return_code\n  fi\n\n  # kubectl will read the environment variable $KUBECONFIG\n  # otherwise set it to ~/.kube/config\n  local conf\n  local config_file_cache\n\n  for conf in $(_kube_ps1_split_config : \"${KUBECONFIG:-${HOME}/.kube/config}\"); do\n    [[ -r \"${conf}\" ]] || continue\n    config_file_cache+=\":${conf}\"\n    if _kube_ps1_file_newer_than \"${conf}\" \"${_KUBE_PS1_LAST_TIME}\"; then\n      _kube_ps1_get_context_ns\n      return $return_code\n    fi\n  done\n\n  if [[ \"${config_file_cache}\" != \"${_KUBE_PS1_CFGFILES_READ_CACHE}\" ]]; then\n    _kube_ps1_get_context_ns\n    return $return_code\n  fi\n\n  return $return_code\n}\n\n_kube_ps1_get_context() {\n  if [[ \"${KUBE_PS1_CONTEXT_ENABLE}\" == true ]]; then\n    KUBE_PS1_CONTEXT=\"$(${KUBE_PS1_BINARY} config current-context 2>/dev/null)\"\n    # Set namespace to 'N/A' if it is not defined\n    KUBE_PS1_CONTEXT=\"${KUBE_PS1_CONTEXT:-N/A}\"\n\n    if [[ -n \"${KUBE_PS1_CLUSTER_FUNCTION}\" ]]; then\n      KUBE_PS1_CONTEXT=\"$(\"${KUBE_PS1_CLUSTER_FUNCTION}\" \"${KUBE_PS1_CONTEXT}\")\"\n    fi\n  fi\n}\n\n_kube_ps1_get_ns() {\n  if [[ \"${KUBE_PS1_NS_ENABLE}\" == true ]]; then\n    KUBE_PS1_NAMESPACE=\"$(${KUBE_PS1_BINARY} config view --minify --output 'jsonpath={..namespace}' 2>/dev/null)\"\n    KUBE_PS1_NAMESPACE=\"${KUBE_PS1_NAMESPACE:-N/A}\"\n\n    if [[ -n \"${KUBE_PS1_NAMESPACE_FUNCTION}\" ]]; then\n        KUBE_PS1_NAMESPACE=\"$(\"${KUBE_PS1_NAMESPACE_FUNCTION}\" \"${KUBE_PS1_NAMESPACE}\")\"\n    fi\n  fi\n}\n\n_kube_ps1_get_context_ns() {\n  # Set the command time\n  if [[ \"$(_kube_ps1_shell_type)\" == \"bash\" ]]; then\n    if ((BASH_VERSINFO[0] >= 4 && BASH_VERSINFO[1] >= 2)); then\n      _KUBE_PS1_LAST_TIME=$(printf '%(%s)T')\n    else\n      _KUBE_PS1_LAST_TIME=$(date +%s)\n    fi\n  elif [[ \"$(_kube_ps1_shell_type)\" == \"zsh\" ]]; then\n    _KUBE_PS1_LAST_TIME=$EPOCHREALTIME\n  fi\n\n  KUBE_PS1_CONTEXT=\"${KUBE_PS1_CONTEXT:-N/A}\"\n  KUBE_PS1_NAMESPACE=\"${KUBE_PS1_NAMESPACE:-N/A}\"\n\n  # Cache which cfgfiles we can read in case they change.\n  local conf\n  _KUBE_PS1_CFGFILES_READ_CACHE=\n  for conf in $(_kube_ps1_split_config : \"${KUBECONFIG:-${HOME}/.kube/config}\"); do\n    [[ -r $conf ]] && _KUBE_PS1_CFGFILES_READ_CACHE+=\":$conf\"\n  done\n\n  _kube_ps1_get_context\n  _kube_ps1_get_ns\n}\n\n# Set kube-ps1 shell defaults\n_kube_ps1_init\n\n_kubeon_usage() {\n  cat <<\"EOF\"\nToggle kube-ps1 prompt on\n\nUsage: kubeon [-g | --global] [-h | --help]\n\nWith no arguments, turn oon kube-ps1 status for this shell instance (default).\n\n  -g --global  turn on kube-ps1 status globally\n  -h --help    print this message\nEOF\n}\n\n_kubeoff_usage() {\n  cat <<\"EOF\"\nToggle kube-ps1 prompt off\n\nUsage: kubeoff [-g | --global] [-h | --help]\n\nWith no arguments, turn off kube-ps1 status for this shell instance (default).\n\n  -g --global turn off kube-ps1 status globally\n  -h --help   print this message\nEOF\n}\n\nkubeon() {\n  if [[ \"${1}\" == '-h' || \"${1}\" == '--help' ]]; then\n    _kubeon_usage\n  elif [[ \"${1}\" == '-g' || \"${1}\" == '--global' ]]; then\n    rm -f -- \"${_KUBE_PS1_DISABLE_PATH}\"\n  elif [[ \"$#\" -ne 0 ]]; then\n    echo -e \"error: unrecognized flag ${1}\\\\n\"\n    _kubeon_usage\n    return\n  fi\n\n  KUBE_PS1_ENABLED=on\n}\n\nkubeoff() {\n  if [[ \"${1}\" == '-h' || \"${1}\" == '--help' ]]; then\n    _kubeoff_usage\n  elif [[ \"${1}\" == '-g' || \"${1}\" == '--global' ]]; then\n    mkdir -p -- \"$(dirname \"${_KUBE_PS1_DISABLE_PATH}\")\"\n    touch -- \"${_KUBE_PS1_DISABLE_PATH}\"\n  elif [[ $# -ne 0 ]]; then\n    echo \"error: unrecognized flag ${1}\" >&2\n    _kubeoff_usage\n    return\n  fi\n\n  KUBE_PS1_ENABLED=off\n}\n\n# Build our prompt\nkube_ps1() {\n  [[ \"${KUBE_PS1_ENABLED}\" == \"off\" ]] && return\n  [[ -z \"${KUBE_PS1_CONTEXT}\" ]] && [[ \"${KUBE_PS1_CONTEXT_ENABLE}\" == true ]] && return\n\n  local KUBE_PS1\n  local KUBE_PS1_RESET_COLOR=\"${_KUBE_PS1_OPEN_ESC}${_KUBE_PS1_DEFAULT_FG}${_KUBE_PS1_CLOSE_ESC}\"\n\n  # Background Color\n  [[ -n \"${KUBE_PS1_BG_COLOR}\" ]] && KUBE_PS1+=\"$(_kube_ps1_color_bg \"${KUBE_PS1_BG_COLOR}\")\"\n\n  # Prefix\n  if [[ -z \"${KUBE_PS1_PREFIX_COLOR:-}\" ]] && [[ -n \"${KUBE_PS1_PREFIX}\" ]]; then\n      KUBE_PS1+=\"${KUBE_PS1_PREFIX}\"\n  else\n      KUBE_PS1+=\"$(_kube_ps1_color_fg \"${KUBE_PS1_PREFIX_COLOR}\")${KUBE_PS1_PREFIX}${KUBE_PS1_RESET_COLOR}\"\n  fi\n\n  # Symbol\n  KUBE_PS1+=\"$(_kube_ps1_symbol)\"\n\n  if [[ -n \"${KUBE_PS1_SEPARATOR}\" ]] && [[ \"${KUBE_PS1_SYMBOL_ENABLE}\" == true ]]; then\n    KUBE_PS1+=\"${KUBE_PS1_SEPARATOR}\"\n  fi\n\n  # Context\n  if [[ \"${KUBE_PS1_CONTEXT_ENABLE}\" == true ]]; then\n    KUBE_PS1+=\"$(_kube_ps1_color_fg \"${KUBE_PS1_CTX_COLOR:-red}\")${KUBE_PS1_CONTEXT}${KUBE_PS1_RESET_COLOR}\"\n  fi\n\n  # Namespace\n  if [[ \"${KUBE_PS1_NS_ENABLE}\" == true ]]; then\n    if [[ -n \"${KUBE_PS1_DIVIDER}\" ]] && [[ \"${KUBE_PS1_CONTEXT_ENABLE}\" == true ]]; then\n      KUBE_PS1+=\"${KUBE_PS1_DIVIDER}\"\n    fi\n    KUBE_PS1+=\"$(_kube_ps1_color_fg \"${KUBE_PS1_NS_COLOR:-cyan}\")${KUBE_PS1_NAMESPACE}${KUBE_PS1_RESET_COLOR}\"\n  fi\n\n  # Suffix\n  if [[ -z \"${KUBE_PS1_SUFFIX_COLOR:-}\" ]] && [[ -n \"${KUBE_PS1_SUFFIX}\" ]]; then\n      KUBE_PS1+=\"${KUBE_PS1_SUFFIX}\"\n  else\n      KUBE_PS1+=\"$(_kube_ps1_color_fg \"${KUBE_PS1_SUFFIX_COLOR}\")${KUBE_PS1_SUFFIX}${KUBE_PS1_RESET_COLOR}\"\n  fi\n\n  # Close Background color if defined\n  [[ -n \"${KUBE_PS1_BG_COLOR}\" ]] && KUBE_PS1+=\"${_KUBE_PS1_OPEN_ESC}${_KUBE_PS1_DEFAULT_BG}${_KUBE_PS1_CLOSE_ESC}\"\n\n  echo \"${KUBE_PS1}\"\n}\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}