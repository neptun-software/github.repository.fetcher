{
  "metadata": {
    "timestamp": 1736568775828,
    "page": 898,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hashicorp/vault-helm",
      "stars": 1103,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3076171875,
          "content": ".DS_Store\n.terraform/\n.terraform.tfstate*\nterraform.tfstate*\nterraform.tfvars\nvalues.dev.yaml\nvaul-helm-dev-creds.json\n./test/acceptance/vaul-helm-dev-creds.json\n./test/terraform/vaul-helm-dev-creds.json\n./test/unit/vaul-helm-dev-creds.json\n./test/acceptance/values.yaml\n./test/acceptance/values.yml\n.idea\nscratch/\n"
        },
        {
          "name": ".helmignore",
          "type": "blob",
          "size": 0.400390625,
          "content": "# Patterns to ignore when building packages.\n# This supports shell glob matching, relative path matching, and\n# negation (prefixed with !). Only one pattern per line.\n.DS_Store\n# Common VCS dirs\n.git/\n.gitignore\n.terraform/\n.bzr/\n.bzrignore\n.hg/\n.hgignore\n.svn/\n# Common backup files\n*.swp\n*.bak\n*.tmp\n*~\n# Various IDEs\n.project\n.idea/\n*.tmproj\n\n# CI and test\n.circleci/\n.github/\n.gitlab-ci.yml\ntest/\nscratch/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 30.0126953125,
          "content": "## Unreleased\n\n## 0.29.1 (November 20, 2024)\n\nBugs:\n* server: restore support for templated config [GH-1073](https://github.com/hashicorp/vault-helm/pull/1073)\n\n## 0.29.0 (November 7, 2024)\n\nKNOWN ISSUES:\n* Template support in server config stopped working [GH-1072](https://github.com/hashicorp/vault-helm/issues/1072)\n\nChanges:\n\n* Default `vault` version updated to 1.18.1\n* Default `vault-k8s` version updated to 1.5.0\n* Default `vault-csi-provider` version updated to 1.5.0\n* Tested with Kubernetes versions 1.27-1.31\n\nFeatures:\n\n* csi: Allow modification of the hostNetwork parameter on the DaemonSet [GH-1046](https://github.com/hashicorp/vault-helm/pull/1046)\n\nBugs:\n\n* Properly handle JSON formatted server config [GH-1049](https://github.com/hashicorp/vault-helm/pull/1049)\n\n## 0.28.1 (July 11, 2024)\n\nChanges:\n\n* Default `vault` version updated to 1.17.2\n* Default `vault-k8s` version updated to 1.4.2\n* Default `vault-csi-provider` version updated to 1.4.3\n* Tested with Kubernetes versions 1.26-1.30\n\nImprovements:\n\n* Configurable `tlsConfig` and `authorization` for Prometheus ServiceMonitor [GH-1025](https://github.com/hashicorp/vault-helm/pull/1025)\n* Remove UPDATE from injector-mutating-webhook [GH-783](https://github.com/hashicorp/vault-helm/pull/783)\n* Add scope to mutating webhook [GH-1037](https://github.com/hashicorp/vault-helm/pull/1037)\n\n## 0.28.0 (April 8, 2024)\n\nChanges:\n\n* Default `vault` version updated to 1.16.1\n* Default `vault-k8s` version updated to 1.4.1\n* Default `vault-csi-provider` version updated to 1.4.2\n* Tested with Kubernetes versions 1.25-1.29\n\nFeatures:\n\n* server: Add annotation on config change [GH-1001](https://github.com/hashicorp/vault-helm/pull/1001)\n\nBugs:\n\n* injector: add missing `get` `nodes` permission to ClusterRole [GH-1005](https://github.com/hashicorp/vault-helm/pull/1005)\n\n## 0.27.0 (November 16, 2023)\n\nChanges:\n\n* Default `vault` version updated to 1.15.2\n\nFeatures:\n\n* server: Support setting `persistentVolumeClaimRetentionPolicy` on the StatefulSet [GH-965](https://github.com/hashicorp/vault-helm/pull/965)\n* server: Support setting labels on PVCs [GH-969](https://github.com/hashicorp/vault-helm/pull/969)\n* server: Support setting ingress rules for networkPolicy [GH-877](https://github.com/hashicorp/vault-helm/pull/877)\n\nImprovements:\n\n* Support exec in the server liveness probe [GH-971](https://github.com/hashicorp/vault-helm/pull/971)\n\n## 0.26.1 (October 30, 2023)\n\nBugs:\n* Fix templating of `server.ha.replicas` when set via override file. The `0.26.0` chart would ignore `server.ha.replicas` and always deploy 3 server replicas when `server.ha.enabled=true` unless overridden by command line when issuing the helm command: `--set server.ha.replicas=<some_number>`. Fixed in [GH-961](https://github.com/hashicorp/vault-helm/pull/961)\n\n## 0.26.0 (October 27, 2023)\n\nChanges:\n* Default `vault` version updated to 1.15.1\n* Default `vault-k8s` version updated to 1.3.1\n* Default `vault-csi-provider` version updated to 1.4.1\n* Tested with Kubernetes versions 1.24-1.28\n* server: OpenShift default readiness probe returns 204 when uninitialized [GH-966](https://github.com/hashicorp/vault-helm/pull/966)\n\nFeatures:\n* server: Add support for dual stack clusters [GH-833](https://github.com/hashicorp/vault-helm/pull/833)\n* server: Support `hostAliases` for the StatefulSet pods [GH-955](https://github.com/hashicorp/vault-helm/pull/955)\n* server: Add `server.service.active.annotations` and `server.service.standby.annotations` [GH-896](https://github.com/hashicorp/vault-helm/pull/896)\n* server: Add long-lived service account token option [GH-923](https://github.com/hashicorp/vault-helm/pull/923)\n\nBugs:\n* csi: Add namespace field to `csi-role` and `csi-rolebindings`. [GH-909](https://github.com/hashicorp/vault-helm/pull/909)\n\nImprovements:\n* global: Add `global.namespace` to override the helm installation namespace. [GH-909](https://github.com/hashicorp/vault-helm/pull/909)\n* server: use vault.fullname in Helm test [GH-912](https://github.com/hashicorp/vault-helm/pull/912)\n* server: Allow scaling HA replicas to zero [GH-943](https://github.com/hashicorp/vault-helm/pull/943)\n\n## 0.25.0 (June 26, 2023)\n\nChanges:\n* Latest Kubernetes version tested is now 1.27\n* server: Headless service ignores `server.service.publishNotReadyAddresses` setting and always sets it as `true` [GH-902](https://github.com/hashicorp/vault-helm/pull/902)\n* `vault` updated to 1.14.0 [GH-916](https://github.com/hashicorp/vault-helm/pull/916)\n* `vault-csi-provider` updated to 1.4.0 [GH-916](https://github.com/hashicorp/vault-helm/pull/916)\n\nImprovements:\n* CSI: Make `nodeSelector` and `affinity` configurable for CSI daemonset's pods [GH-862](https://github.com/hashicorp/vault-helm/pull/862)\n* injector: Add `ephemeralLimit` and `ephemeralRequest` as options for configuring Agent's ephemeral storage resources [GH-798](https://github.com/hashicorp/vault-helm/pull/798)\n* Minimum kubernetes version for chart reverted to 1.20.0 to allow installation on clusters older than the oldest tested version [GH-916](https://github.com/hashicorp/vault-helm/pull/916)\n\nBugs:\n* server: Set the default for `prometheusRules.rules` to an empty list [GH-886](https://github.com/hashicorp/vault-helm/pull/886)\n\n## 0.24.1 (April 17, 2023)\n\nBugs:\n* csi: Add RBAC required by v1.3.0 to create secret for HMAC key used to generate secret versions [GH-872](https://github.com/hashicorp/vault-helm/pull/872)\n\n## 0.24.0 (April 6, 2023)\n\nChanges:\n* Earliest Kubernetes version tested is now 1.22\n* `vault` updated to 1.13.1 [GH-863](https://github.com/hashicorp/vault-helm/pull/863)\n* `vault-k8s` updated to 1.2.1 [GH-868](https://github.com/hashicorp/vault-helm/pull/868)\n* `vault-csi-provider` updated to 1.3.0 [GH-749](https://github.com/hashicorp/vault-helm/pull/749)\n\nFeatures:\n* server: New `extraPorts` option for adding ports to the Vault server statefulset [GH-841](https://github.com/hashicorp/vault-helm/pull/841)\n* server: Add configurable Port Number in readinessProbe and livenessProbe for the server-statefulset [GH-831](https://github.com/hashicorp/vault-helm/pull/831)\n* injector: Make livenessProbe and readinessProbe configurable and add configurable startupProbe [GH-852](https://github.com/hashicorp/vault-helm/pull/852)\n* csi: Add an Agent sidecar to Vault CSI Provider pods to provide lease caching and renewals [GH-749](https://github.com/hashicorp/vault-helm/pull/749)\n\n## 0.23.0 (November 28th, 2022)\n\nChanges:\n* `vault` updated to 1.12.1 [GH-814](https://github.com/hashicorp/vault-helm/pull/814)\n* `vault-k8s` updated to 1.1.0 [GH-814](https://github.com/hashicorp/vault-helm/pull/814)\n* `vault-csi-provider` updated to 1.2.1 [GH-814](https://github.com/hashicorp/vault-helm/pull/814)\n\nFeatures:\n* server: Add `extraLabels` for Vault server serviceAccount [GH-806](https://github.com/hashicorp/vault-helm/pull/806)\n* server: Add `server.service.active.enabled` and `server.service.standby.enabled` options to selectively disable additional services [GH-811](https://github.com/hashicorp/vault-helm/pull/811)\n* server: Add `server.serviceAccount.serviceDiscovery.enabled` option to selectively disable a Vault service discovery role and role binding [GH-811](https://github.com/hashicorp/vault-helm/pull/811)\n* server: Add `server.service.instanceSelector.enabled` option to allow selecting pods outside the helm chart deployment [GH-813](https://github.com/hashicorp/vault-helm/pull/813)\n\nBugs:\n* server: Quote `.server.ha.clusterAddr` value [GH-810](https://github.com/hashicorp/vault-helm/pull/810)\n\n## 0.22.1 (October 26th, 2022)\n\nChanges:\n* `vault` updated to 1.12.0 [GH-803](https://github.com/hashicorp/vault-helm/pull/803)\n* `vault-k8s` updated to 1.0.1 [GH-803](https://github.com/hashicorp/vault-helm/pull/803)\n\n## 0.22.0 (September 8th, 2022)\n\nFeatures:\n* Add PrometheusOperator support for collecting Vault server metrics. [GH-772](https://github.com/hashicorp/vault-helm/pull/772)\n\nChanges:\n* `vault-k8s` to 1.0.0 [GH-784](https://github.com/hashicorp/vault-helm/pull/784)\n* Test against Kubernetes 1.25 [GH-784](https://github.com/hashicorp/vault-helm/pull/784)\n* `vault` updated to 1.11.3 [GH-785](https://github.com/hashicorp/vault-helm/pull/785)\n\n## 0.21.0 (August 10th, 2022)\n\nCHANGES:\n* `vault-k8s` updated to 0.17.0. [GH-771](https://github.com/hashicorp/vault-helm/pull/771)\n* `vault-csi-provider` updated to 1.2.0 [GH-771](https://github.com/hashicorp/vault-helm/pull/771)\n* `vault` updated to 1.11.2 [GH-771](https://github.com/hashicorp/vault-helm/pull/771)\n* Start testing against Kubernetes 1.24. [GH-744](https://github.com/hashicorp/vault-helm/pull/744)\n* Deprecated `injector.externalVaultAddr`. Added `global.externalVaultAddr`, which applies to both the Injector and the CSI Provider. [GH-745](https://github.com/hashicorp/vault-helm/pull/745)\n* CSI Provider pods now set the `VAULT_ADDR` environment variable to either the internal Vault service or the configured external address. [GH-745](https://github.com/hashicorp/vault-helm/pull/745)\n\nFeatures:\n* server: Add `server.statefulSet.securityContext` to override pod and container `securityContext`. [GH-767](https://github.com/hashicorp/vault-helm/pull/767)\n* csi: Add `csi.daemonSet.securityContext` to override pod and container `securityContext`. [GH-767](https://github.com/hashicorp/vault-helm/pull/767)\n* injector: Add `injector.securityContext` to override pod and container `securityContext`. [GH-750](https://github.com/hashicorp/vault-helm/pull/750) and [GH-767](https://github.com/hashicorp/vault-helm/pull/767)\n* Add `server.service.activeNodePort` and `server.service.standbyNodePort` to specify the `nodePort` for active and standby services. [GH-610](https://github.com/hashicorp/vault-helm/pull/610)\n* Support for setting annotations on the injector's serviceAccount [GH-753](https://github.com/hashicorp/vault-helm/pull/753)\n\n## 0.20.1 (May 25th, 2022)\nCHANGES:\n* `vault-k8s` updated to 0.16.1 [GH-739](https://github.com/hashicorp/vault-helm/pull/739)\n\nImprovements:\n* Mutating webhook will no longer target the agent injector pod [GH-736](https://github.com/hashicorp/vault-helm/pull/736)\n\nBugs:\n* `vault` service account is now created even if the server is set to disabled, as per before 0.20.0 [GH-737](https://github.com/hashicorp/vault-helm/pull/737)\n\n## 0.20.0 (May 16th, 2022)\n\nCHANGES:\n* `global.enabled` now works as documented, that is, setting `global.enabled` to false will disable everything, with individual components able to be turned on individually [GH-703](https://github.com/hashicorp/vault-helm/pull/703)\n* Default value of `-` used for injector and server to indicate that they follow `global.enabled`. [GH-703](https://github.com/hashicorp/vault-helm/pull/703)\n* Vault default image to 1.10.3\n* CSI provider default image to 1.1.0\n* Vault K8s default image to 0.16.0\n* Earliest Kubernetes version tested is now 1.16\n* Helm 3.6+ now required\n\nFeatures:\n* Support topologySpreadConstraints in server and injector. [GH-652](https://github.com/hashicorp/vault-helm/pull/652)\n\nImprovements:\n* CSI: Set `extraLabels` for daemonset, pods, and service account [GH-690](https://github.com/hashicorp/vault-helm/pull/690)\n* Add namespace to injector-leader-elector role, rolebinding and secret [GH-683](https://github.com/hashicorp/vault-helm/pull/683)\n* Support policy/v1 PodDisruptionBudget in Kubernetes 1.21+ for server and injector [GH-710](https://github.com/hashicorp/vault-helm/pull/710)\n* Make the Cluster Address (CLUSTER_ADDR) configurable [GH-629](https://github.com/hashicorp/vault-helm/pull/709)\n* server: Make `publishNotReadyAddresses` configurable for services [GH-694](https://github.com/hashicorp/vault-helm/pull/694)\n* server: Allow config to be defined as a YAML object in the values file [GH-684](https://github.com/hashicorp/vault-helm/pull/684)\n* Maintain default MutatingWebhookConfiguration values from `v1beta1` [GH-692](https://github.com/hashicorp/vault-helm/pull/692)\n\n## 0.19.0 (January 20th, 2022)\n\nCHANGES:\n* Vault image default 1.9.2\n* Vault K8s image default 0.14.2\n\nFeatures:\n* Added configurable podDisruptionBudget for injector [GH-653](https://github.com/hashicorp/vault-helm/pull/653)\n* Make terminationGracePeriodSeconds configurable for server [GH-659](https://github.com/hashicorp/vault-helm/pull/659)\n* Added configurable update strategy for injector [GH-661](https://github.com/hashicorp/vault-helm/pull/661)\n* csi: ability to set priorityClassName for CSI daemonset pods [GH-670](https://github.com/hashicorp/vault-helm/pull/670)\n\nImprovements:\n* Set the namespace on the OpenShift Route [GH-679](https://github.com/hashicorp/vault-helm/pull/679)\n* Add volumes and env vars to helm hook test pod [GH-673](https://github.com/hashicorp/vault-helm/pull/673)\n* Make TLS configurable for OpenShift routes [GH-686](https://github.com/hashicorp/vault-helm/pull/686)\n\n## 0.18.0 (November 17th, 2021)\n\nCHANGES:\n* Removed support for deploying a leader-elector container with the [vault-k8s injector](https://github.com/hashicorp/vault-k8s) injector since vault-k8s now uses an internal mechanism to determine leadership [GH-649](https://github.com/hashicorp/vault-helm/pull/649)\n* Vault image default 1.9.0\n* Vault K8s image default 0.14.1\n\nImprovements:\n* Added templateConfig.staticSecretRenderInterval chart option for the injector [GH-621](https://github.com/hashicorp/vault-helm/pull/621)\n\n## 0.17.1 (October 25th, 2021)\n\nImprovements:\n  * Add option for Ingress PathType [GH-634](https://github.com/hashicorp/vault-helm/pull/634)\n\n## 0.17.0 (October 21st, 2021)\n\nKNOWN ISSUES:\n* The chart will fail to deploy on Kubernetes 1.19+ with `server.ingress.enabled=true` because no `pathType` is set\n\nCHANGES:\n* Vault image default 1.8.4\n* Vault K8s image default 0.14.0\n\nImprovements:\n* Support Ingress stable networking API [GH-590](https://github.com/hashicorp/vault-helm/pull/590)\n* Support setting the `externalTrafficPolicy` for `LoadBalancer` and `NodePort` service types [GH-626](https://github.com/hashicorp/vault-helm/pull/626)\n* Support setting ingressClassName on server Ingress [GH-630](https://github.com/hashicorp/vault-helm/pull/630)\n\nBugs:\n* Ensure `kubeletRootDir` volume path and mounts are the same when `csi.daemonSet.kubeletRootDir` is overridden [GH-628](https://github.com/hashicorp/vault-helm/pull/628)\n\n## 0.16.1 (September 29th, 2021)\n\nCHANGES:\n* Vault image default 1.8.3\n* Vault K8s image default 0.13.1\n\n## 0.16.0 (September 16th, 2021)\n\nCHANGES:\n* Support for deploying a leader-elector container with the [vault-k8s injector](https://github.com/hashicorp/vault-k8s) injector will be removed in version 0.18.0 of this chart since vault-k8s now uses an internal mechanism to determine leadership. To enable the deployment of the leader-elector container for use with vault-k8s 0.12.0 and earlier, set `useContainer=true`.\n\nImprovements:\n * Make CSI provider `hostPaths` configurable via `csi.daemonSet.providersDir` and `csi.daemonSet.kubeletRootDir` [GH-603](https://github.com/hashicorp/vault-helm/pull/603)\n * Support vault-k8s internal leader election [GH-568](https://github.com/hashicorp/vault-helm/pull/568) [GH-607](https://github.com/hashicorp/vault-helm/pull/607)\n\n## 0.15.0 (August 23rd, 2021)\n\nImprovements:\n* Add imagePullSecrets on server test [GH-572](https://github.com/hashicorp/vault-helm/pull/572)\n* Add injector.webhookAnnotations chart option [GH-584](https://github.com/hashicorp/vault-helm/pull/584)\n\n## 0.14.0 (July 28th, 2021)\n\nFeatures:\n* Added templateConfig.exitOnRetryFailure chart option for the injector [GH-560](https://github.com/hashicorp/vault-helm/pull/560)\n\nImprovements:\n* Support configuring pod tolerations, pod affinity, and node selectors as YAML [GH-565](https://github.com/hashicorp/vault-helm/pull/565)\n* Set the default vault image to come from the hashicorp organization [GH-567](https://github.com/hashicorp/vault-helm/pull/567)\n* Add support for running the acceptance tests against a local `kind` cluster [GH-567](https://github.com/hashicorp/vault-helm/pull/567)\n* Add `server.ingress.activeService` to configure if the ingress should use the active service [GH-570](https://github.com/hashicorp/vault-helm/pull/570)\n* Add `server.route.activeService` to configure if the route should use the active service [GH-570](https://github.com/hashicorp/vault-helm/pull/570)\n* Support configuring `global.imagePullSecrets` from a string array [GH-576](https://github.com/hashicorp/vault-helm/pull/576)\n\n\n## 0.13.0 (June 17th, 2021)\n\nImprovements:\n* Added a helm test for vault server [GH-531](https://github.com/hashicorp/vault-helm/pull/531)\n* Added server.enterpriseLicense option [GH-547](https://github.com/hashicorp/vault-helm/pull/547)\n* Added OpenShift overrides [GH-549](https://github.com/hashicorp/vault-helm/pull/549)\n\nBugs:\n* Fix ui.serviceNodePort schema [GH-537](https://github.com/hashicorp/vault-helm/pull/537)\n* Fix server.ha.disruptionBudget.maxUnavailable schema [GH-535](https://github.com/hashicorp/vault-helm/pull/535)\n* Added webhook-certs volume mount to sidecar injector [GH-545](https://github.com/hashicorp/vault-helm/pull/545)\n\n## 0.12.0 (May 25th, 2021)\n\nFeatures:\n* Pass additional arguments to `vault-csi-provider` using `csi.extraArgs` [GH-526](https://github.com/hashicorp/vault-helm/pull/526)\n\nImprovements:\n* Set chart kubeVersion and added chart-verifier tests [GH-510](https://github.com/hashicorp/vault-helm/pull/510)\n* Added values json schema [GH-513](https://github.com/hashicorp/vault-helm/pull/513)\n* Ability to set tolerations for CSI daemonset pods [GH-521](https://github.com/hashicorp/vault-helm/pull/521)\n* UI target port is now configurable [GH-437](https://github.com/hashicorp/vault-helm/pull/437)\n\nBugs:\n* CSI: `global.imagePullSecrets` are now also used for CSI daemonset [GH-519](https://github.com/hashicorp/vault-helm/pull/519)\n\n## 0.11.0 (April 14th, 2021)\n\nFeatures:\n* Added `server.enabled` to explicitly skip installing a Vault server [GH-486](https://github.com/hashicorp/vault-helm/pull/486)\n* Injector now supports enabling host network [GH-471](https://github.com/hashicorp/vault-helm/pull/471)\n* Injector port is now configurable [GH-489](https://github.com/hashicorp/vault-helm/pull/489)\n* Injector Vault Agent resource defaults are now configurable [GH-493](https://github.com/hashicorp/vault-helm/pull/493)\n* Extra paths can now be added to the Vault ingress service [GH-460](https://github.com/hashicorp/vault-helm/pull/460)\n* Log level and format can now be set directly using `server.logFormat` and `server.logLevel` [GH-488](https://github.com/hashicorp/vault-helm/pull/488)\n\nImprovements:\n* Added `https` name to injector service port [GH-495](https://github.com/hashicorp/vault-helm/pull/495)\n\nBugs:\n* CSI: Fix ClusterRole name and DaemonSet's service account to properly match deployment name [GH-486](https://github.com/hashicorp/vault-helm/pull/486)\n\n## 0.10.0 (March 25th, 2021)\n\nFeatures:\n* Add support for [Vault CSI provider](https://github.com/hashicorp/vault-csi-provider) [GH-461](https://github.com/hashicorp/vault-helm/pull/461)\n\nImprovements:\n* `objectSelector` can now be set on the mutating admission webhook [GH-456](https://github.com/hashicorp/vault-helm/pull/456)\n\n## 0.9.1 (February 2nd, 2021)\n\nBugs:\n* Injector: fix labels for default anti-affinity rule [GH-441](https://github.com/hashicorp/vault-helm/pull/441), [GH-442](https://github.com/hashicorp/vault-helm/pull/442)\n* Set VAULT_DEV_LISTEN_ADDRESS in dev mode [GH-446](https://github.com/hashicorp/vault-helm/pull/446)\n\n## 0.9.0 (January 5th, 2021)\n\nFeatures:\n* Injector now supports configurable number of replicas [GH-436](https://github.com/hashicorp/vault-helm/pull/436)\n* Injector now supports auto TLS for multiple replicas using leader elections [GH-436](https://github.com/hashicorp/vault-helm/pull/436)\n\nImprovements:\n* Dev mode now supports `server.extraArgs` [GH-421](https://github.com/hashicorp/vault-helm/pull/421)\n* Dev mode root token is now configurable with `server.dev.devRootToken` [GH-415](https://github.com/hashicorp/vault-helm/pull/415)\n* ClusterRoleBinding updated to `v1` [GH-395](https://github.com/hashicorp/vault-helm/pull/395)\n* MutatingWebhook updated to `v1` [GH-408](https://github.com/hashicorp/vault-helm/pull/408)\n* Injector service now supports `injector.service.annotations` [425](https://github.com/hashicorp/vault-helm/pull/425)\n* Injector now supports `injector.extraLabels` [428](https://github.com/hashicorp/vault-helm/pull/428)\n* Added `allowPrivilegeEscalation: false` to Vault and Injector containers [429](https://github.com/hashicorp/vault-helm/pull/429)\n* Network Policy now supports `server.networkPolicy.egress` [389](https://github.com/hashicorp/vault-helm/pull/389)\n\n## 0.8.0 (October 20th, 2020)\n\nImprovements:\n* Make server NetworkPolicy independent of OpenShift [GH-381](https://github.com/hashicorp/vault-helm/pull/381)\n* Added configurables for all probe values [GH-387](https://github.com/hashicorp/vault-helm/pull/387)\n* MountPath for audit and data storage is now configurable [GH-393](https://github.com/hashicorp/vault-helm/pull/393)\n* Annotations can now be added to the Injector pods [GH-394](https://github.com/hashicorp/vault-helm/pull/394)\n* The injector can now be configured with a failurePolicy [GH-400](https://github.com/hashicorp/vault-helm/pull/400)\n* Added additional environment variables for rendering within Vault config [GH-398](https://github.com/hashicorp/vault-helm/pull/398)\n* Service account for Vault K8s auth is automatically created when `injector.externalVaultAddr` is set [GH-392](https://github.com/hashicorp/vault-helm/pull/392)\n\nBugs:\n* Fixed install output using Helm V2 command [GH-378](https://github.com/hashicorp/vault-helm/pull/378)\n\n## 0.7.0 (August 24th, 2020)\n\nFeatures:\n* Added `volumes` and `volumeMounts` for mounting _any_ type of volume [GH-314](https://github.com/hashicorp/vault-helm/pull/314).\n* Added configurable to enable prometheus telemetery exporter for Vault Agent Injector [GH-372](https://github.com/hashicorp/vault-helm/pull/372)\n\nImprovements:\n* Added `defaultMode` configurable to `extraVolumes`[GH-321](https://github.com/hashicorp/vault-helm/pull/321)\n* Option to install and use PodSecurityPolicy's for vault server and injector [GH-177](https://github.com/hashicorp/vault-helm/pull/177)\n* `VAULT_API_ADDR` is now configurable [GH-290](https://github.com/hashicorp/vault-helm/pull/290)\n* Removed deprecated tolerate unready endpoint annotations [GH-363](https://github.com/hashicorp/vault-helm/pull/363)\n* Add an option to set annotations on the StatefulSet [GH-199](https://github.com/hashicorp/vault-helm/pull/199)\n* Make the vault server serviceAccount name a configuration option [GH-367](https://github.com/hashicorp/vault-helm/pull/367)\n* Removed annotation striction from `dev` mode [GH-371](https://github.com/hashicorp/vault-helm/pull/371)\n* Add an option to set annotations on PVCs [GH-364](https://github.com/hashicorp/vault-helm/pull/364)\n* Added service configurables for UI [GH-285](https://github.com/hashicorp/vault-helm/pull/285)\n\nBugs:\n* Fix python dependency in test image [GH-337](https://github.com/hashicorp/vault-helm/pull/337)\n* Fix caBundle not being quoted causing validation issues with Helm 3 [GH-352](https://github.com/hashicorp/vault-helm/pull/352)\n* Fix injector network policy being rendered when injector is not enabled [GH-358](https://github.com/hashicorp/vault-helm/pull/358)\n\n## 0.6.0 (June 3rd, 2020)\n\nFeatures:\n* Added `extraInitContainers` to define init containers for the Vault cluster [GH-258](https://github.com/hashicorp/vault-helm/pull/258)\n* Added `postStart` lifecycle hook allowing users to configure commands to run on the Vault pods after they're ready [GH-315](https://github.com/hashicorp/vault-helm/pull/315)\n* Beta: Added OpenShift support [GH-319](https://github.com/hashicorp/vault-helm/pull/319)\n\nImprovements:\n* Server configs can now be defined in YAML.  Multi-line string configs are still compatible [GH-213](https://github.com/hashicorp/vault-helm/pull/213)\n* Removed IPC_LOCK privileges since swap is disabled on containers [[GH-198](https://github.com/hashicorp/vault-helm/pull/198)]\n* Use port names that map to vault.scheme [[GH-223](https://github.com/hashicorp/vault-helm/pull/223)]\n* Allow both yaml and multi-line string annotations [[GH-272](https://github.com/hashicorp/vault-helm/pull/272)]\n* Added configurable to set the Raft node name to hostname [[GH-269](https://github.com/hashicorp/vault-helm/pull/269)]\n* Support setting priorityClassName on pods [[GH-282](https://github.com/hashicorp/vault-helm/pull/282)]\n* Added support for ingress apiVersion `networking.k8s.io/v1beta1` [[GH-310](https://github.com/hashicorp/vault-helm/pull/310)]\n* Added configurable to change service type for the HA active service [GH-317](https://github.com/hashicorp/vault-helm/pull/317)\n\nBugs:\n* Fixed default ingress path [[GH-224](https://github.com/hashicorp/vault-helm/pull/224)]\n* Fixed annotations for HA standby/active services [[GH-268](https://github.com/hashicorp/vault-helm/pull/268)]\n* Updated some value defaults to match their use in templates [[GH-309](https://github.com/hashicorp/vault-helm/pull/309)]\n* Use active service on ingress when ha [[GH-270](https://github.com/hashicorp/vault-helm/pull/270)]\n* Fixed bug where pull secrets weren't being used for injector image [GH-298](https://github.com/hashicorp/vault-helm/pull/298)\n\n## 0.5.0 (April 9th, 2020)\n\nFeatures:\n\n* Added Raft support for HA mode [[GH-228](https://github.com/hashicorp/vault-helm/pull/229)]\n* Now supports Vault Enterprise [[GH-250](https://github.com/hashicorp/vault-helm/pull/250)]\n* Added K8s Service Registration for HA modes [[GH-250](https://github.com/hashicorp/vault-helm/pull/250)]\n\n* Option to set `AGENT_INJECT_VAULT_AUTH_PATH` for the injector [[GH-185](https://github.com/hashicorp/vault-helm/pull/185)]\n* Added environment variables for logging and revocation on Vault Agent Injector [[GH-219](https://github.com/hashicorp/vault-helm/pull/219)]\n* Option to set environment variables for the injector deployment [[GH-232](https://github.com/hashicorp/vault-helm/pull/232)]\n* Added affinity, tolerations, and nodeSelector options for the injector deployment [[GH-234](https://github.com/hashicorp/vault-helm/pull/234)]\n* Made all annotations multi-line strings [[GH-227](https://github.com/hashicorp/vault-helm/pull/227)]\n\n## 0.4.0 (February 21st, 2020)\n\nImprovements:\n\n* Allow process namespace sharing between Vault and sidecar containers [[GH-174](https://github.com/hashicorp/vault-helm/pull/174)]\n* Added configurable to change updateStrategy [[GH-172](https://github.com/hashicorp/vault-helm/pull/172)]\n* Added sleep in the preStop lifecycle step [[GH-188](https://github.com/hashicorp/vault-helm/pull/188)]\n* Updated chart and tests to Helm 3 [[GH-195](https://github.com/hashicorp/vault-helm/pull/195)]\n* Adds Values.injector.externalVaultAddr to use the injector with an external vault [[GH-207](https://github.com/hashicorp/vault-helm/pull/207)]\n\nBugs:\n\n* Fix bug where Vault lifecycle was appended after extra containers. [[GH-179](https://github.com/hashicorp/vault-helm/pull/179)]\n\n## 0.3.3 (January 14th, 2020)\n\nSecurity:\n\n* Added `server.extraArgs` to allow loading of additional Vault configurations containing sensitive settings [GH-175](https://github.com/hashicorp/vault-helm/issues/175)\n\nBugs:\n\n* Fixed injection bug where wrong environment variables were being used for manually mounted TLS files\n\n## 0.3.2 (January 8th, 2020)\n\nBugs:\n\n* Fixed injection bug where TLS Skip Verify was true by default [VK8S-35]\n\n## 0.3.1 (January 2nd, 2020)\n\nBugs:\n\n* Fixed injection bug causing kube-system pods to be rejected [VK8S-14]\n\n## 0.3.0 (December 19th, 2019)\n\nFeatures:\n\n* Extra containers can now be added to the Vault pods\n* Added configurability of pod probes\n* Added Vault Agent Injector\n\nImprovements:\n\n* Moved `global.image` to `server.image`\n* Changed UI service template to route pods that aren't ready via `publishNotReadyAddresses: true`\n* Added better HTTP/HTTPS scheme support to http probes\n* Added configurable node port for Vault service\n* `server.authDelegator` is now enabled by default\n\nBugs:\n\n* Fixed upgrade bug by removing chart label which contained the version\n* Fixed typo on `serviceAccount` (was `serviceaccount`)\n* Fixed readiness/liveliness HTTP probe default to accept standbys\n\n## 0.2.1 (November 12th, 2019)\n\nBugs:\n\n* Removed `readOnlyRootFilesystem` causing issues when validating deployments\n\n## 0.2.0 (October 29th, 2019)\n\nFeatures:\n\n* Added load balancer support\n* Added ingress support\n* Added configurable for service types (ClusterIP, NodePort, LoadBalancer, etc)\n* Removed root requirements, now runs as Vault user\n\nImprovements:\n\n* Added namespace value to all rendered objects\n* Made ports configurable in services\n* Added the ability to add custom annotations to services\n* Added docker image for running bats test in CircleCI\n* Removed restrictions around `dev` mode such as annotations\n* `readOnlyRootFilesystem` is now configurable\n* Image Pull Policy is now configurable\n\nBugs:\n\n* Fixed selector bugs related to Helm label updates (services, affinities, and pod disruption)\n* Fixed bug where audit storage was not being mounted in HA mode\n* Fixed bug where Vault pod wasn't receiving SIGTERM signals\n\n\n## 0.1.2 (August 22nd, 2019)\n\nFeatures:\n\n* Added `extraSecretEnvironmentVars` to allow users to mount secrets as\n  environment variables\n* Added `tlsDisable` configurable to change HTTP protocols from HTTP/HTTPS\n  depending on the value\n* Added `serviceNodePort` to configure a NodePort value when setting `serviceType`\n  to \"NodePort\"\n\nImprovements:\n\n* Changed UI port to 8200 for better HTTP protocol support\n* Added `path` to `extraVolumes` to define where the volume should be\n  mounted.  Defaults to `/vault/userconfig`\n* Upgraded Vault to 1.2.2\n\nBugs:\n\n* Fixed bug where upgrade would fail because immutable labels were being\n  changed (Helm Version label)\n* Fixed bug where UI service used wrong selector after updating helm labels\n* Added `VAULT_API_ADDR` env to Vault pod to fixed bug where Vault thinks\n  Consul is the active node\n* Removed `step-down` preStop since it requires authentication.  Shutdown signal\n  sent by Kube acts similar to `step-down`\n\n\n## 0.1.1 (August 7th, 2019)\n\nFeatures:\n\n* Added `authDelegator` Cluster Role Binding to Vault service account for\n  bootstrapping Kube auth method\n\nImprovements:\n\n* Added `server.service.clusterIP` to `values.yml` so users can toggle\n  the Vault service to headless by using the value `None`.\n* Upgraded Vault to 1.2.1\n\n## 0.1.0 (August 6th, 2019)\n\nInitial release\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.0283203125,
          "content": "* @hashicorp/vault-ecosystem\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.56640625,
          "content": "# Contributing to Vault Helm\n\n**Please note:** We take Vault's security and our users' trust very seriously.\nIf you believe you have found a security issue in Vault, please responsibly\ndisclose by contacting us at security@hashicorp.com.\n\n**First:** if you're unsure or afraid of _anything_, just ask or submit the\nissue or pull request anyways. You won't be yelled at for giving it your best\neffort. The worst that can happen is that you'll be politely asked to change\nsomething. We appreciate any sort of contributions, and don't want a wall of\nrules to get in the way of that.\n\nThat said, if you want to ensure that a pull request is likely to be merged,\ntalk to us! You can find out our thoughts and ensure that your contribution\nwon't clash or be obviated by Vault's normal direction. A great way to do this\nis via the [Vault Discussion Forum][1].\n\nThis document will cover what we're looking for in terms of reporting issues.\nBy addressing all the points we're looking for, it raises the chances we can\nquickly merge or address your contributions.\n\n[1]: https://discuss.hashicorp.com/c/vault\n\n## Issues\n\n### Reporting an Issue\n\n* Make sure you test against the latest released version. It is possible\n  we already fixed the bug you're experiencing. Even better is if you can test\n  against `main`, as bugs are fixed regularly but new versions are only\n  released every few months.\n\n* Provide steps to reproduce the issue, and if possible include the expected\n  results as well as the actual results. Please provide text, not screen shots!\n\n* Respond as promptly as possible to any questions made by the Vault\n  team to your issue. Stale issues will be closed periodically.\n\n### Issue Lifecycle\n\n1. The issue is reported.\n\n2. The issue is verified and categorized by a Vault Helm collaborator.\n   Categorization is done via tags. For example, bugs are marked as \"bugs\".\n\n3. Unless it is critical, the issue may be left for a period of time (sometimes\n   many weeks), giving outside contributors -- maybe you!? -- a chance to\n   address the issue.\n\n4. The issue is addressed in a pull request or commit. The issue will be\n   referenced in the commit message so that the code that fixes it is clearly\n   linked.\n\n5. The issue is closed. Sometimes, valid issues will be closed to keep\n   the issue tracker clean. The issue is still indexed and available for\n   future viewers, or can be re-opened if necessary.\n\n## Testing\n\nThe Helm chart ships with both unit and acceptance tests.\n\nThe unit tests don't require any active Kubernetes cluster and complete\nvery quickly. These should be used for fast feedback during development.\nThe acceptance tests require a Kubernetes cluster with a configured `kubectl`.\n\n### Test Using Docker Container\n\nThe following are the instructions for running bats tests using a Docker container.\n\n#### Prerequisites\n\n* Docker installed\n* `vault-helm` checked out locally\n\n#### Test\n\n**Note:** the following commands should be run from the `vault-helm` directory.\n\nFirst, build the Docker image for running the tests:\n\n```shell\ndocker build -f ${PWD}/test/docker/Test.dockerfile ${PWD}/test/docker/ -t vault-helm-test\n```\nNext, execute the tests with the following commands:\n```shell\ndocker run -it --rm -v \"${PWD}:/test\" vault-helm-test bats /test/test/unit\n```\nIt's possible to only run specific bats tests using regular expressions. \nFor example, the following will run only tests with \"injector\" in the name:\n```shell\ndocker run -it --rm -v \"${PWD}:/test\" vault-helm-test bats /test/test/unit -f \"injector\"\n```\n\n### Test Manually\nThe following are the instructions for running bats tests on your workstation.\n#### Prerequisites\n* [Bats](https://github.com/bats-core/bats-core)\n  ```bash\n  brew install bats-core\n  ```\n* [yq](https://pypi.org/project/yq/)\n  ```bash\n  brew install python-yq\n  ```\n* [helm](https://helm.sh)\n  ```bash\n  brew install kubernetes-helm\n  ```\n\n#### Test\n\nTo run the unit tests:\n\n    bats ./test/unit\n\nTo run the acceptance tests:\n\n    bats ./test/acceptance\n\nIf the acceptance tests fail, deployed resources in the Kubernetes cluster\nmay not be properly cleaned up. We recommend recycling the Kubernetes cluster to\nstart from a clean slate.\n\n**Note:** There is a Terraform configuration in the\n[`test/terraform/`](https://github.com/hashicorp/vault-helm/tree/main/test/terraform) directory\nthat can be used to quickly bring up a GKE cluster and configure\n`kubectl` and `helm` locally. This can be used to quickly spin up a test\ncluster for acceptance tests. Unit tests _do not_ require a running Kubernetes\ncluster.\n\n### Writing Unit Tests\n\nChanges to the Helm chart should be accompanied by appropriate unit tests.\n\n#### Formatting\n\n- Put tests in the test file in the same order as the variables appear in the `values.yaml`.\n- Start tests for a chart value with a header that says what is being tested, like this:\n    ```\n    #--------------------------------------------------------------------\n    # annotations\n    ```\n\n- Name the test based on what it's testing in the following format (this will be its first line):\n    ```\n    @test \"<section being tested>: <short description of the test case>\" {\n    ```\n\n    When adding tests to an existing file, the first section will be the same as the other tests in the file.\n\n#### Test Details\n\n[Bats](https://github.com/bats-core/bats-core) provides a way to run commands in a shell and inspect the output in an automated way.\nIn all of the tests in this repo, the base command being run is [helm template](https://docs.helm.sh/helm/#helm-template) which turns the templated files into straight yaml output.\nIn this way, we're able to test that the various conditionals in the templates render as we would expect.\n\nEach test defines the files that should be rendered using the `--show-only` flag, then it might adjust chart values by adding `--set` flags as well.\nThe output from this `helm template` command is then piped to [yq](https://pypi.org/project/yq/).\n`yq` allows us to pull out just the information we're interested in, either by referencing its position in the yaml file directly or giving information about it (like its length).\nThe `-r` flag can be used with `yq` to return a raw string instead of a quoted one which is especially useful when looking for an exact match.\n\nThe test passes or fails based on the conditional at the end that is in square brackets, which is a comparison of our expected value and the output of  `helm template` piped to `yq`.\n\nThe `| tee /dev/stderr ` pieces direct any terminal output of the `helm template` and `yq` commands to stderr so that it doesn't interfere with `bats`.\n\n#### Test Examples\n\nHere are some examples of common test patterns:\n\n- Check that a value is disabled by default\n\n    ```\n    @test \"ui/Service: no type by default\" {\n      cd `chart_dir`\n      local actual=$(helm template \\\n          --show-only templates/ui-service.yaml  \\\n          . | tee /dev/stderr |\n          yq -r '.spec.type' | tee /dev/stderr)\n      [ \"${actual}\" = \"null\" ]\n    }\n    ```\n\n    In this example, nothing is changed from the default templates (no `--set` flags), then we use `yq` to retrieve the value we're checking, `.spec.type`.\n    This output is then compared against our expected value (`null` in this case) in the assertion `[ \"${actual}\" = \"null\" ]`.\n\n\n- Check that a template value is rendered to a specific value\n    ```\n    @test \"ui/Service: specified type\" {\n      cd `chart_dir`\n      local actual=$(helm template \\\n          --show-only templates/ui-service.yaml  \\\n          --set 'ui.serviceType=LoadBalancer' \\\n          . | tee /dev/stderr |\n          yq -r '.spec.type' | tee /dev/stderr)\n      [ \"${actual}\" = \"LoadBalancer\" ]\n    }\n    ```\n\n    This is very similar to the last example, except we've changed a default value with the `--set` flag and correspondingly changed the expected value.\n\n- Check that a template value contains several values\n    ```\n\t@test \"server/standalone-StatefulSet: custom resources\" {\n\t  cd `chart_dir`\n\t  local actual=$(helm template \\\n\t\t  --show-only templates/server-statefulset.yaml  \\\n\t\t  --set 'server.standalone.enabled=true' \\\n\t\t  --set 'server.resources.requests.memory=256Mi' \\\n\t\t  --set 'server.resources.requests.cpu=250m' \\\n\t\t  . | tee /dev/stderr |\n\t\t  yq -r '.spec.template.spec.containers[0].resources.requests.memory' | tee /dev/stderr)\n\t  [ \"${actual}\" = \"256Mi\" ]\n\n\t  local actual=$(helm template \\\n\t\t  --show-only templates/server-statefulset.yaml  \\\n\t\t  --set 'server.standalone.enabled=true' \\\n\t\t  --set 'server.resources.limits.memory=256Mi' \\\n\t\t  --set 'server.resources.limits.cpu=250m' \\\n\t\t  . | tee /dev/stderr |\n\t\t  yq -r '.spec.template.spec.containers[0].resources.limits.memory' | tee /dev/stderr)\n\t  [ \"${actual}\" = \"256Mi\" ]\n    ```\n\n    *Note:* If testing more than two conditions, it would be good to separate the `helm template` part of the command from the `yq` sections to reduce redundant work.\n\n- Check that an entire template file is not rendered\n    ```\n    @test \"syncCatalog/Deployment: disabled by default\" {\n      cd `chart_dir`\n      local actual=$( (helm template \\\n          --show-only templates/server-statefulset.yaml  \\\n          --set 'global.enabled=false' \\\n          . || echo \"---\") | tee /dev/stderr |\n          yq 'length > 0' | tee /dev/stderr)\n      [ \"${actual}\" = \"false\" ]\n    }\n    ```\n    Here we are check the length of the command output to see if the anything is rendered.\n    This style can easily be switched to check that a file is rendered instead.\n\n## Contributor License Agreement\n\nWe require that all contributors sign our Contributor License Agreement (\"CLA\")\nbefore we can accept the contribution.\n\n[Learn more about why HashiCorp requires a CLA and what the CLA includes](https://www.hashicorp.com/cla)\n"
        },
        {
          "name": "Chart.yaml",
          "type": "blob",
          "size": 0.6796875,
          "content": "# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\napiVersion: v2\nname: vault\nversion: 0.29.1\nappVersion: 1.18.1\nkubeVersion: \">= 1.20.0-0\"\ndescription: Official HashiCorp Vault Chart\nhome: https://www.vaultproject.io\nicon: https://github.com/hashicorp/vault/raw/f22d202cde2018f9455dec755118a9b84586e082/Vault_PrimaryLogo_Black.png\nkeywords: [\"vault\", \"security\", \"encryption\", \"secrets\", \"management\", \"automation\", \"infrastructure\"]\nsources:\n  - https://github.com/hashicorp/vault\n  - https://github.com/hashicorp/vault-helm\n  - https://github.com/hashicorp/vault-k8s\n  - https://github.com/hashicorp/vault-csi-provider\nannotations:\n  charts.openshift.io/name: HashiCorp Vault\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 15.63671875,
          "content": "Copyright (c) 2018 HashiCorp, Inc.\n\nMozilla Public License, version 2.0\n\n1. Definitions\n\n1.1. “Contributor”\n\n     means each individual or legal entity that creates, contributes to the\n     creation of, or owns Covered Software.\n\n1.2. “Contributor Version”\n\n     means the combination of the Contributions of others (if any) used by a\n     Contributor and that particular Contributor’s Contribution.\n\n1.3. “Contribution”\n\n     means Covered Software of a particular Contributor.\n\n1.4. “Covered Software”\n\n     means Source Code Form to which the initial Contributor has attached the\n     notice in Exhibit A, the Executable Form of such Source Code Form, and\n     Modifications of such Source Code Form, in each case including portions\n     thereof.\n\n1.5. “Incompatible With Secondary Licenses”\n     means\n\n     a. that the initial Contributor has attached the notice described in\n        Exhibit B to the Covered Software; or\n\n     b. that the Covered Software was made available under the terms of version\n        1.1 or earlier of the License, but not also under the terms of a\n        Secondary License.\n\n1.6. “Executable Form”\n\n     means any form of the work other than Source Code Form.\n\n1.7. “Larger Work”\n\n     means a work that combines Covered Software with other material, in a separate\n     file or files, that is not Covered Software.\n\n1.8. “License”\n\n     means this document.\n\n1.9. “Licensable”\n\n     means having the right to grant, to the maximum extent possible, whether at the\n     time of the initial grant or subsequently, any and all of the rights conveyed by\n     this License.\n\n1.10. “Modifications”\n\n     means any of the following:\n\n     a. any file in Source Code Form that results from an addition to, deletion\n        from, or modification of the contents of Covered Software; or\n\n     b. any new file in Source Code Form that contains any Covered Software.\n\n1.11. “Patent Claims” of a Contributor\n\n      means any patent claim(s), including without limitation, method, process,\n      and apparatus claims, in any patent Licensable by such Contributor that\n      would be infringed, but for the grant of the License, by the making,\n      using, selling, offering for sale, having made, import, or transfer of\n      either its Contributions or its Contributor Version.\n\n1.12. “Secondary License”\n\n      means either the GNU General Public License, Version 2.0, the GNU Lesser\n      General Public License, Version 2.1, the GNU Affero General Public\n      License, Version 3.0, or any later versions of those licenses.\n\n1.13. “Source Code Form”\n\n      means the form of the work preferred for making modifications.\n\n1.14. “You” (or “Your”)\n\n      means an individual or a legal entity exercising rights under this\n      License. For legal entities, “You” includes any entity that controls, is\n      controlled by, or is under common control with You. For purposes of this\n      definition, “control” means (a) the power, direct or indirect, to cause\n      the direction or management of such entity, whether by contract or\n      otherwise, or (b) ownership of more than fifty percent (50%) of the\n      outstanding shares or beneficial ownership of such entity.\n\n\n2. License Grants and Conditions\n\n2.1. Grants\n\n     Each Contributor hereby grants You a world-wide, royalty-free,\n     non-exclusive license:\n\n     a. under intellectual property rights (other than patent or trademark)\n        Licensable by such Contributor to use, reproduce, make available,\n        modify, display, perform, distribute, and otherwise exploit its\n        Contributions, either on an unmodified basis, with Modifications, or as\n        part of a Larger Work; and\n\n     b. under Patent Claims of such Contributor to make, use, sell, offer for\n        sale, have made, import, and otherwise transfer either its Contributions\n        or its Contributor Version.\n\n2.2. Effective Date\n\n     The licenses granted in Section 2.1 with respect to any Contribution become\n     effective for each Contribution on the date the Contributor first distributes\n     such Contribution.\n\n2.3. Limitations on Grant Scope\n\n     The licenses granted in this Section 2 are the only rights granted under this\n     License. No additional rights or licenses will be implied from the distribution\n     or licensing of Covered Software under this License. Notwithstanding Section\n     2.1(b) above, no patent license is granted by a Contributor:\n\n     a. for any code that a Contributor has removed from Covered Software; or\n\n     b. for infringements caused by: (i) Your and any other third party’s\n        modifications of Covered Software, or (ii) the combination of its\n        Contributions with other software (except as part of its Contributor\n        Version); or\n\n     c. under Patent Claims infringed by Covered Software in the absence of its\n        Contributions.\n\n     This License does not grant any rights in the trademarks, service marks, or\n     logos of any Contributor (except as may be necessary to comply with the\n     notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\n     No Contributor makes additional grants as a result of Your choice to\n     distribute the Covered Software under a subsequent version of this License\n     (see Section 10.2) or under the terms of a Secondary License (if permitted\n     under the terms of Section 3.3).\n\n2.5. Representation\n\n     Each Contributor represents that the Contributor believes its Contributions\n     are its original creation(s) or it has sufficient rights to grant the\n     rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\n     This License is not intended to limit any rights You have under applicable\n     copyright doctrines of fair use, fair dealing, or other equivalents.\n\n2.7. Conditions\n\n     Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in\n     Section 2.1.\n\n\n3. Responsibilities\n\n3.1. Distribution of Source Form\n\n     All distribution of Covered Software in Source Code Form, including any\n     Modifications that You create or to which You contribute, must be under the\n     terms of this License. You must inform recipients that the Source Code Form\n     of the Covered Software is governed by the terms of this License, and how\n     they can obtain a copy of this License. You may not attempt to alter or\n     restrict the recipients’ rights in the Source Code Form.\n\n3.2. Distribution of Executable Form\n\n     If You distribute Covered Software in Executable Form then:\n\n     a. such Covered Software must also be made available in Source Code Form,\n        as described in Section 3.1, and You must inform recipients of the\n        Executable Form how they can obtain a copy of such Source Code Form by\n        reasonable means in a timely manner, at a charge no more than the cost\n        of distribution to the recipient; and\n\n     b. You may distribute such Executable Form under the terms of this License,\n        or sublicense it under different terms, provided that the license for\n        the Executable Form does not attempt to limit or alter the recipients’\n        rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\n     You may create and distribute a Larger Work under terms of Your choice,\n     provided that You also comply with the requirements of this License for the\n     Covered Software. If the Larger Work is a combination of Covered Software\n     with a work governed by one or more Secondary Licenses, and the Covered\n     Software is not Incompatible With Secondary Licenses, this License permits\n     You to additionally distribute such Covered Software under the terms of\n     such Secondary License(s), so that the recipient of the Larger Work may, at\n     their option, further distribute the Covered Software under the terms of\n     either this License or such Secondary License(s).\n\n3.4. Notices\n\n     You may not remove or alter the substance of any license notices (including\n     copyright notices, patent notices, disclaimers of warranty, or limitations\n     of liability) contained within the Source Code Form of the Covered\n     Software, except that You may alter any license notices to the extent\n     required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\n     You may choose to offer, and to charge a fee for, warranty, support,\n     indemnity or liability obligations to one or more recipients of Covered\n     Software. However, You may do so only on Your own behalf, and not on behalf\n     of any Contributor. You must make it absolutely clear that any such\n     warranty, support, indemnity, or liability obligation is offered by You\n     alone, and You hereby agree to indemnify every Contributor for any\n     liability incurred by such Contributor as a result of warranty, support,\n     indemnity or liability terms You offer. You may include additional\n     disclaimers of warranty and limitations of liability specific to any\n     jurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n\n   If it is impossible for You to comply with any of the terms of this License\n   with respect to some or all of the Covered Software due to statute, judicial\n   order, or regulation then You must: (a) comply with the terms of this License\n   to the maximum extent possible; and (b) describe the limitations and the code\n   they affect. Such description must be placed in a text file included with all\n   distributions of the Covered Software under this License. Except to the\n   extent prohibited by statute or regulation, such description must be\n   sufficiently detailed for a recipient of ordinary skill to be able to\n   understand it.\n\n5. Termination\n\n5.1. The rights granted under this License will terminate automatically if You\n     fail to comply with any of its terms. However, if You become compliant,\n     then the rights granted under this License from a particular Contributor\n     are reinstated (a) provisionally, unless and until such Contributor\n     explicitly and finally terminates Your grants, and (b) on an ongoing basis,\n     if such Contributor fails to notify You of the non-compliance by some\n     reasonable means prior to 60 days after You have come back into compliance.\n     Moreover, Your grants from a particular Contributor are reinstated on an\n     ongoing basis if such Contributor notifies You of the non-compliance by\n     some reasonable means, this is the first time You have received notice of\n     non-compliance with this License from such Contributor, and You become\n     compliant prior to 30 days after Your receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\n     infringement claim (excluding declaratory judgment actions, counter-claims,\n     and cross-claims) alleging that a Contributor Version directly or\n     indirectly infringes any patent, then the rights granted to You by any and\n     all Contributors for the Covered Software under Section 2.1 of this License\n     shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user\n     license agreements (excluding distributors and resellers) which have been\n     validly granted by You or Your distributors under this License prior to\n     termination shall survive termination.\n\n6. Disclaimer of Warranty\n\n   Covered Software is provided under this License on an “as is” basis, without\n   warranty of any kind, either expressed, implied, or statutory, including,\n   without limitation, warranties that the Covered Software is free of defects,\n   merchantable, fit for a particular purpose or non-infringing. The entire\n   risk as to the quality and performance of the Covered Software is with You.\n   Should any Covered Software prove defective in any respect, You (not any\n   Contributor) assume the cost of any necessary servicing, repair, or\n   correction. This disclaimer of warranty constitutes an essential part of this\n   License. No use of  any Covered Software is authorized under this License\n   except under this disclaimer.\n\n7. Limitation of Liability\n\n   Under no circumstances and under no legal theory, whether tort (including\n   negligence), contract, or otherwise, shall any Contributor, or anyone who\n   distributes Covered Software as permitted above, be liable to You for any\n   direct, indirect, special, incidental, or consequential damages of any\n   character including, without limitation, damages for lost profits, loss of\n   goodwill, work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses, even if such party shall have been\n   informed of the possibility of such damages. This limitation of liability\n   shall not apply to liability for death or personal injury resulting from such\n   party’s negligence to the extent applicable law prohibits such limitation.\n   Some jurisdictions do not allow the exclusion or limitation of incidental or\n   consequential damages, so this exclusion and limitation may not apply to You.\n\n8. Litigation\n\n   Any litigation relating to this License may be brought only in the courts of\n   a jurisdiction where the defendant maintains its principal place of business\n   and such litigation shall be governed by laws of that jurisdiction, without\n   reference to its conflict-of-law provisions. Nothing in this Section shall\n   prevent a party’s ability to bring cross-claims or counter-claims.\n\n9. Miscellaneous\n\n   This License represents the complete agreement concerning the subject matter\n   hereof. If any provision of this License is held to be unenforceable, such\n   provision shall be reformed only to the extent necessary to make it\n   enforceable. Any law or regulation which provides that the language of a\n   contract shall be construed against the drafter shall not be used to construe\n   this License against a Contributor.\n\n\n10. Versions of the License\n\n10.1. New Versions\n\n      Mozilla Foundation is the license steward. Except as provided in Section\n      10.3, no one other than the license steward has the right to modify or\n      publish new versions of this License. Each version will be given a\n      distinguishing version number.\n\n10.2. Effect of New Versions\n\n      You may distribute the Covered Software under the terms of the version of\n      the License under which You originally received the Covered Software, or\n      under the terms of any subsequent version published by the license\n      steward.\n\n10.3. Modified Versions\n\n      If you create software not governed by this License, and you want to\n      create a new license for such software, you may create and use a modified\n      version of this License if you rename the license and remove any\n      references to the name of the license steward (except to note that such\n      modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n      If You choose to distribute Source Code Form that is Incompatible With\n      Secondary Licenses under the terms of this version of the License, the\n      notice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n\n      This Source Code Form is subject to the\n      terms of the Mozilla Public License, v.\n      2.0. If a copy of the MPL was not\n      distributed with this file, You can\n      obtain one at\n      http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular file, then\nYou may include the notice in a location (such as a LICENSE file in a relevant\ndirectory) where a recipient would be likely to look for such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - “Incompatible With Secondary Licenses” Notice\n\n      This Source Code Form is “Incompatible\n      With Secondary Licenses”, as defined by\n      the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.2314453125,
          "content": "TEST_IMAGE?=vault-helm-test\nGOOGLE_CREDENTIALS?=vault-helm-test.json\nCLOUDSDK_CORE_PROJECT?=vault-helm-dev-246514\n# set to run a single test - e.g acceptance/server-ha-enterprise-dr.bats\nACCEPTANCE_TESTS?=acceptance\n\n# filter bats unit tests to run.\nUNIT_TESTS_FILTER?='.*'\n\n# set to 'true' to run acceptance tests locally in a kind cluster\nLOCAL_ACCEPTANCE_TESTS?=false\n\n# kind cluster name\nKIND_CLUSTER_NAME?=vault-helm\n\n# kind k8s version\nKIND_K8S_VERSION?=v1.31.2\n\n# Generate json schema for chart values. See test/README.md for more details.\nvalues-schema:\n\thelm schema-gen values.yaml > values.schema.json\n\ntest-image:\n\t@docker build --rm -t $(TEST_IMAGE) -f $(CURDIR)/test/docker/Test.dockerfile $(CURDIR)\n\ntest-unit:\n\t@docker run --rm -it -v ${PWD}:/helm-test $(TEST_IMAGE) bats -f $(UNIT_TESTS_FILTER) /helm-test/test/unit\n\ntest-bats: test-unit test-acceptance\n\ntest: test-image test-bats\n\n# run acceptance tests on GKE\n# set google project/credential vars above\ntest-acceptance:\nifeq ($(LOCAL_ACCEPTANCE_TESTS),true)\n\tmake setup-kind acceptance\nelse\n\t@docker run -it -v ${PWD}:/helm-test \\\n\t-e GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS} \\\n\t-e CLOUDSDK_CORE_PROJECT=${CLOUDSDK_CORE_PROJECT} \\\n\t-e KUBECONFIG=/helm-test/.kube/config \\\n\t-e VAULT_LICENSE_CI=${VAULT_LICENSE_CI} \\\n\t-w /helm-test \\\n\t$(TEST_IMAGE) \\\n\tmake acceptance\nendif\n\n# destroy GKE cluster using terraform\ntest-destroy:\n\t@docker run -it -v ${PWD}:/helm-test \\\n\t-e GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS} \\\n\t-e CLOUDSDK_CORE_PROJECT=${CLOUDSDK_CORE_PROJECT} \\\n\t-w /helm-test \\\n\t$(TEST_IMAGE) \\\n\tmake destroy-cluster\n\n# provision GKE cluster using terraform\ntest-provision:\n\t@docker run -it -v ${PWD}:/helm-test \\\n\t-e GOOGLE_CREDENTIALS=${GOOGLE_CREDENTIALS} \\\n\t-e CLOUDSDK_CORE_PROJECT=${CLOUDSDK_CORE_PROJECT} \\\n\t-e KUBECONFIG=/helm-test/.kube/config \\\n\t-w /helm-test \\\n\t$(TEST_IMAGE) \\\n\tmake provision-cluster\n\n# this target is for running the acceptance tests\n# it is run in the docker container above when the test-acceptance target is invoked\nacceptance:\nifneq ($(LOCAL_ACCEPTANCE_TESTS),true)\n\tgcloud auth activate-service-account --key-file=${GOOGLE_CREDENTIALS}\nendif\n\tbats --tap --timing test/${ACCEPTANCE_TESTS}\n\n# this target is for provisioning the GKE cluster\n# it is run in the docker container above when the test-provision target is invoked\nprovision-cluster:\n\tgcloud auth activate-service-account --key-file=${GOOGLE_CREDENTIALS}\n\tterraform init test/terraform\n\tterraform apply -var project=${CLOUDSDK_CORE_PROJECT} -var init_cli=true -auto-approve test/terraform\n\n# this target is for removing the GKE cluster\n# it is run in the docker container above when the test-destroy target is invoked\ndestroy-cluster:\n\tterraform destroy -auto-approve\n\n# create a kind cluster for running the acceptance tests locally\nsetup-kind:\n\tkind get clusters | grep -q \"^${KIND_CLUSTER_NAME}$$\" || \\\n\tkind create cluster \\\n\t--image kindest/node:${KIND_K8S_VERSION} \\\n\t--name ${KIND_CLUSTER_NAME}  \\\n\t--config $(CURDIR)/test/kind/config.yaml\n\tkubectl config use-context kind-${KIND_CLUSTER_NAME}\n\n# delete the kind cluster\ndelete-kind:\n\tkind delete cluster --name ${KIND_CLUSTER_NAME} || :\n\n.PHONY: values-schema test-image test-unit test-bats test test-acceptance test-destroy test-provision acceptance provision-cluster destroy-cluster\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.6357421875,
          "content": "# Vault Helm Chart\n\n> :warning: **Please note**: We take Vault's security and our users' trust very seriously. If \nyou believe you have found a security issue in Vault Helm, _please responsibly disclose_ \nby contacting us at [security@hashicorp.com](mailto:security@hashicorp.com).\n\nThis repository contains the official HashiCorp Helm chart for installing\nand configuring Vault on Kubernetes. This chart supports multiple use\ncases of Vault on Kubernetes depending on the values provided.\n\nFor full documentation on this Helm chart along with all the ways you can\nuse Vault with Kubernetes, please see the\n[Vault and Kubernetes documentation](https://developer.hashicorp.com/vault/docs/platform/k8s).\n\n## Prerequisites\n\nTo use the charts here, [Helm](https://helm.sh/) must be configured for your\nKubernetes cluster. Setting up Kubernetes and Helm is outside the scope of\nthis README. Please refer to the Kubernetes and Helm documentation.\n\nThe versions required are:\n\n  * **Helm 3.6+**\n  * **Kubernetes 1.27+** - This is the earliest version of Kubernetes tested.\n    It is possible that this chart works with earlier versions but it is\n    untested.\n\n## Usage\n\nTo install the latest version of this chart, add the Hashicorp helm repository\nand run `helm install`:\n\n```console\n$ helm repo add hashicorp https://helm.releases.hashicorp.com\n\"hashicorp\" has been added to your repositories\n\n$ helm install vault hashicorp/vault\n```\n\nPlease see the many options supported in the `values.yaml` file. These are also\nfully documented directly on the [Vault\nwebsite](https://developer.hashicorp.com/vault/docs/platform/k8s/helm) along with more\ndetailed installation instructions.\n"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "values.openshift.yaml",
          "type": "blob",
          "size": 0.5322265625,
          "content": "# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n# These overrides are appropriate defaults for deploying this chart on OpenShift\n\nglobal:\n  openshift: true\n\ninjector:\n  image:\n    repository: \"registry.connect.redhat.com/hashicorp/vault-k8s\"\n    tag: \"1.5.0-ubi\"\n\n  agentImage:\n    repository: \"registry.connect.redhat.com/hashicorp/vault\"\n    tag: \"1.18.1-ubi\"\n\nserver:\n  image:\n    repository: \"registry.connect.redhat.com/hashicorp/vault\"\n    tag: \"1.18.1-ubi\"\n\n  readinessProbe:\n    path: \"/v1/sys/health?uninitcode=204\"\n"
        },
        {
          "name": "values.schema.json",
          "type": "blob",
          "size": 43.9853515625,
          "content": "{\n    \"$schema\": \"http://json-schema.org/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"csi\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"agent\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"extraArgs\": {\n                            \"type\": \"array\"\n                        },\n                        \"image\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"pullPolicy\": {\n                                    \"type\": \"string\"\n                                },\n                                \"repository\": {\n                                    \"type\": \"string\"\n                                },\n                                \"tag\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"logFormat\": {\n                            \"type\": \"string\"\n                        },\n                        \"logLevel\": {\n                            \"type\": \"string\"\n                        },\n                        \"resources\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"daemonSet\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"extraLabels\": {\n                            \"type\": \"object\"\n                        },\n                        \"kubeletRootDir\": {\n                            \"type\": \"string\"\n                        },\n                        \"providersDir\": {\n                            \"type\": \"string\"\n                        },\n                        \"securityContext\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"container\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                },\n                                \"pod\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                }\n                            }\n                        },\n                        \"updateStrategy\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"maxUnavailable\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"debug\": {\n                    \"type\": \"boolean\"\n                },\n                \"enabled\": {\n                    \"type\": [\n                        \"boolean\",\n                        \"string\"\n                    ]\n                },\n                \"extraArgs\": {\n                    \"type\": \"array\"\n                },\n                \"hmacSecretName\": {\n                    \"type\": \"string\"\n                },\n                \"hostNetwork\": {\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"pullPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"repository\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"livenessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"logLevel\": {\n                    \"type\": \"string\"\n                },\n                \"pod\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"affinity\": {\n                            \"type\": [\n                              \"null\",\n                              \"object\",\n                              \"string\"\n                            ]\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"extraLabels\": {\n                            \"type\": \"object\"\n                        },\n                        \"nodeSelector\": {\n                            \"type\": [\n                              \"null\",\n                              \"object\",\n                              \"string\"\n                            ]\n                        },\n                        \"tolerations\": {\n                            \"type\": [\n                                \"null\",\n                                \"array\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"priorityClassName\": {\n                    \"type\": \"string\"\n                },\n                \"readinessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"resources\": {\n                    \"type\": \"object\"\n                },\n                \"serviceAccount\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"extraLabels\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"volumeMounts\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                },\n                \"volumes\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                }\n            }\n        },\n        \"global\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"enabled\": {\n                    \"type\": \"boolean\"\n                },\n                \"externalVaultAddr\": {\n                    \"type\": \"string\"\n                },\n                \"imagePullSecrets\": {\n                    \"type\": \"array\"\n                },\n                \"namespace\": {\n                    \"type\": \"string\"\n                },\n                \"openshift\": {\n                    \"type\": \"boolean\"\n                },\n                \"psp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enable\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"serverTelemetry\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"prometheusOperator\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"tlsDisable\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"injector\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"affinity\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"agentDefaults\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"cpuLimit\": {\n                            \"type\": \"string\"\n                        },\n                        \"cpuRequest\": {\n                            \"type\": \"string\"\n                        },\n                        \"memLimit\": {\n                            \"type\": \"string\"\n                        },\n                        \"memRequest\": {\n                            \"type\": \"string\"\n                        },\n                        \"ephemeralLimit\": {\n                            \"type\": \"string\"\n                        },\n                        \"ephemeralRequest\": {\n                            \"type\": \"string\"\n                        },\n                        \"template\": {\n                            \"type\": \"string\"\n                        },\n                        \"templateConfig\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"exitOnRetryFailure\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"staticSecretRenderInterval\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"agentImage\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"repository\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"annotations\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"authPath\": {\n                    \"type\": \"string\"\n                },\n                \"certs\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"caBundle\": {\n                            \"type\": \"string\"\n                        },\n                        \"certName\": {\n                            \"type\": \"string\"\n                        },\n                        \"keyName\": {\n                            \"type\": \"string\"\n                        },\n                        \"secretName\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"enabled\": {\n                    \"type\": [\n                        \"boolean\",\n                        \"string\"\n                    ]\n                },\n                \"externalVaultAddr\": {\n                    \"type\": \"string\"\n                },\n                \"extraEnvironmentVars\": {\n                    \"type\": \"object\"\n                },\n                \"extraLabels\": {\n                    \"type\": \"object\"\n                },\n                \"failurePolicy\": {\n                    \"type\": \"string\"\n                },\n                \"hostNetwork\": {\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"pullPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"repository\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"leaderElector\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"livenessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"logFormat\": {\n                    \"type\": \"string\"\n                },\n                \"logLevel\": {\n                    \"type\": \"string\"\n                },\n                \"metrics\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"namespaceSelector\": {\n                    \"type\": \"object\"\n                },\n                \"nodeSelector\": {\n                    \"type\": [\n                        \"null\",\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"objectSelector\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"podDisruptionBudget\": {\n                    \"type\": \"object\"\n                },\n                \"port\": {\n                    \"type\": \"integer\"\n                },\n                \"priorityClassName\": {\n                    \"type\": \"string\"\n                },\n                \"readinessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"replicas\": {\n                    \"type\": \"integer\"\n                },\n                \"resources\": {\n                    \"type\": \"object\"\n                },\n                \"revokeOnShutdown\": {\n                    \"type\": \"boolean\"\n                },\n                \"securityContext\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"container\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"pod\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"service\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"serviceAccount\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"startupProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"strategy\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"tolerations\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\",\n                        \"string\"\n                    ]\n                },\n                \"topologySpreadConstraints\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\",\n                        \"string\"\n                    ]\n                },\n                \"webhook\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"failurePolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"matchPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"namespaceSelector\": {\n                            \"type\": \"object\"\n                        },\n                        \"objectSelector\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"webhookAnnotations\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                }\n            }\n        },\n        \"server\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"affinity\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"annotations\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"auditStorage\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"accessMode\": {\n                            \"type\": \"string\"\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": [\n                                \"boolean\",\n                                \"string\"\n                            ]\n                        },\n                        \"labels\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"mountPath\": {\n                            \"type\": \"string\"\n                        },\n                        \"size\": {\n                            \"type\": \"string\"\n                        },\n                        \"storageClass\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"authDelegator\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"dataStorage\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"accessMode\": {\n                            \"type\": \"string\"\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": [\n                                \"boolean\",\n                                \"string\"\n                            ]\n                        },\n                        \"labels\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"mountPath\": {\n                            \"type\": \"string\"\n                        },\n                        \"size\": {\n                            \"type\": \"string\"\n                        },\n                        \"storageClass\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ]\n                        }\n                    }\n                },\n                \"dev\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"devRootToken\": {\n                            \"type\": \"string\"\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                },\n                \"enabled\": {\n                    \"type\": [\n                        \"boolean\",\n                        \"string\"\n                    ]\n                },\n                \"enterpriseLicense\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"secretKey\": {\n                            \"type\": \"string\"\n                        },\n                        \"secretName\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"extraArgs\": {\n                    \"type\": \"string\"\n                },\n                \"extraContainers\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                },\n                \"extraEnvironmentVars\": {\n                    \"type\": \"object\"\n                },\n                \"extraInitContainers\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                },\n                \"extraLabels\": {\n                    \"type\": \"object\"\n                },\n                \"extraPorts\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                },\n                \"extraSecretEnvironmentVars\": {\n                    \"type\": \"array\"\n                },\n                \"extraVolumes\": {\n                    \"type\": \"array\"\n                },\n                \"ha\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"apiAddr\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ]\n                        },\n                        \"clusterAddr\": {\n                            \"type\": [\n                                \"null\",\n                                \"string\"\n                            ]\n                        },\n                        \"config\": {\n                            \"type\": [\n                                \"string\",\n                                \"object\"\n                            ]\n                        },\n                        \"disruptionBudget\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"maxUnavailable\": {\n                                    \"type\": [\n                                        \"null\",\n                                        \"integer\"\n                                    ]\n                                }\n                            }\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"raft\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"config\": {\n                                    \"type\": [\n                                        \"string\",\n                                        \"object\"\n                                    ]\n                                },\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                },\n                                \"setNodeId\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        },\n                        \"replicas\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"hostAliases\": {\n                    \"type\": \"array\"\n                },\n                \"hostNetwork\": {\n                    \"type\": \"boolean\"\n                },\n                \"image\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"pullPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"repository\": {\n                            \"type\": \"string\"\n                        },\n                        \"tag\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"includeConfigAnnotation\": {\n                    \"type\": \"boolean\"\n                },\n                \"ingress\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"activeService\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"extraPaths\": {\n                            \"type\": \"array\"\n                        },\n                        \"hosts\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"host\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"paths\": {\n                                        \"type\": \"array\"\n                                    }\n                                }\n                            }\n                        },\n                        \"ingressClassName\": {\n                            \"type\": \"string\"\n                        },\n                        \"labels\": {\n                            \"type\": \"object\"\n                        },\n                        \"pathType\": {\n                            \"type\": \"string\"\n                        },\n                        \"tls\": {\n                            \"type\": \"array\"\n                        }\n                    }\n                },\n                \"livenessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"execCommand\": {\n                            \"type\": \"array\"\n                        },\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"path\": {\n                            \"type\": \"string\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"port\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"logFormat\": {\n                    \"type\": \"string\"\n                },\n                \"logLevel\": {\n                    \"type\": \"string\"\n                },\n                \"networkPolicy\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"egress\": {\n                            \"type\": \"array\"\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"ingress\": {\n                            \"type\": \"array\"\n                        }\n                    }\n                },\n                \"nodeSelector\": {\n                    \"type\": [\n                        \"null\",\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"persistentVolumeClaimRetentionPolicy\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"whenDeleted\": {\n                            \"type\": \"string\"\n                        },\n                        \"whenScaled\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"postStart\": {\n                    \"type\": \"array\"\n                },\n                \"preStopSleepSeconds\": {\n                    \"type\": \"integer\"\n                },\n                \"priorityClassName\": {\n                    \"type\": \"string\"\n                },\n                \"readinessProbe\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"failureThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"initialDelaySeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"periodSeconds\": {\n                            \"type\": \"integer\"\n                        },\n                        \"port\": {\n                            \"type\": \"integer\"\n                        },\n                        \"successThreshold\": {\n                            \"type\": \"integer\"\n                        },\n                        \"timeoutSeconds\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"resources\": {\n                    \"type\": \"object\"\n                },\n                \"route\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"activeService\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"host\": {\n                            \"type\": \"string\"\n                        },\n                        \"labels\": {\n                            \"type\": \"object\"\n                        },\n                        \"tls\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"service\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"active\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"annotations\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                },\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        },\n                        \"activeNodePort\": {\n                            \"type\": \"integer\"\n                        },\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"externalTrafficPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"instanceSelector\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        },\n                        \"ipFamilies\": {\n                            \"type\": \"array\"\n                        },\n                        \"ipFamilyPolicy\": {\n                            \"type\": \"string\"\n                        },\n                        \"nodePort\": {\n                            \"type\": \"integer\"\n                        },\n                        \"port\": {\n                            \"type\": \"integer\"\n                        },\n                        \"publishNotReadyAddresses\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"standby\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"annotations\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                },\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        },\n                        \"standbyNodePort\": {\n                            \"type\": \"integer\"\n                        },\n                        \"targetPort\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                },\n                \"serviceAccount\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"create\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"createSecret\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"extraLabels\": {\n                            \"type\": \"object\"\n                        },\n                        \"name\": {\n                            \"type\": \"string\"\n                        },\n                        \"serviceDiscovery\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"enabled\": {\n                                    \"type\": \"boolean\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"shareProcessNamespace\": {\n                    \"type\": \"boolean\"\n                },\n                \"standalone\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"config\": {\n                            \"type\": [\n                                \"string\",\n                                \"object\"\n                            ]\n                        },\n                        \"enabled\": {\n                            \"type\": [\n                                \"string\",\n                                \"boolean\"\n                            ]\n                        }\n                    }\n                },\n                \"statefulSet\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"annotations\": {\n                            \"type\": [\n                                \"object\",\n                                \"string\"\n                            ]\n                        },\n                        \"securityContext\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"container\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                },\n                                \"pod\": {\n                                    \"type\": [\n                                        \"object\",\n                                        \"string\"\n                                    ]\n                                }\n                            }\n                        }\n                    }\n                },\n                \"terminationGracePeriodSeconds\": {\n                    \"type\": \"integer\"\n                },\n                \"tolerations\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\",\n                        \"string\"\n                    ]\n                },\n                \"topologySpreadConstraints\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\",\n                        \"string\"\n                    ]\n                },\n                \"updateStrategyType\": {\n                    \"type\": \"string\"\n                },\n                \"volumeMounts\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                },\n                \"volumes\": {\n                    \"type\": [\n                        \"null\",\n                        \"array\"\n                    ]\n                }\n            }\n        },\n        \"serverTelemetry\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"prometheusRules\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"rules\": {\n                            \"type\": \"array\"\n                        },\n                        \"selectors\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                },\n                \"serviceMonitor\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"authorization\": {\n                            \"type\": \"object\"\n                        },\n                        \"enabled\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"interval\": {\n                            \"type\": \"string\"\n                        },\n                        \"scrapeTimeout\": {\n                            \"type\": \"string\"\n                        },\n                        \"selectors\": {\n                            \"type\": \"object\"\n                        },\n                        \"tlsConfig\": {\n                            \"type\": \"object\"\n                        }\n                    }\n                }\n            }\n        },\n        \"ui\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"activeVaultPodOnly\": {\n                    \"type\": \"boolean\"\n                },\n                \"annotations\": {\n                    \"type\": [\n                        \"object\",\n                        \"string\"\n                    ]\n                },\n                \"enabled\": {\n                    \"type\": [\n                        \"boolean\",\n                        \"string\"\n                    ]\n                },\n                \"externalPort\": {\n                    \"type\": \"integer\"\n                },\n                \"externalTrafficPolicy\": {\n                    \"type\": \"string\"\n                },\n                \"publishNotReadyAddresses\": {\n                    \"type\": \"boolean\"\n                },\n                \"serviceIPFamilies\": {\n                    \"type\": \"array\"\n                },\n                \"serviceIPFamilyPolicy\": {\n                    \"type\": \"string\"\n                },\n                \"serviceNodePort\": {\n                    \"type\": [\n                        \"null\",\n                        \"integer\"\n                    ]\n                },\n                \"serviceType\": {\n                    \"type\": \"string\"\n                },\n                \"targetPort\": {\n                    \"type\": \"integer\"\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "values.yaml",
          "type": "blob",
          "size": 50.822265625,
          "content": "# Copyright (c) HashiCorp, Inc.\n# SPDX-License-Identifier: MPL-2.0\n\n# Available parameters and their default values for the Vault chart.\n\nglobal:\n  # enabled is the master enabled switch. Setting this to true or false\n  # will enable or disable all the components within this chart by default.\n  enabled: true\n\n  # The namespace to deploy to. Defaults to the `helm` installation namespace.\n  namespace: \"\"\n\n  # Image pull secret to use for registry authentication.\n  # Alternatively, the value may be specified as an array of strings.\n  imagePullSecrets: []\n  # imagePullSecrets:\n  #   - name: image-pull-secret\n\n  # TLS for end-to-end encrypted transport\n  tlsDisable: true\n\n  # External vault server address for the injector and CSI provider to use.\n  # Setting this will disable deployment of a vault server.\n  externalVaultAddr: \"\"\n\n  # If deploying to OpenShift\n  openshift: false\n\n  # Create PodSecurityPolicy for pods\n  psp:\n    enable: false\n    # Annotation for PodSecurityPolicy.\n    # This is a multi-line templated string map, and can also be set as YAML.\n    annotations: |\n      seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default\n      apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default\n      seccomp.security.alpha.kubernetes.io/defaultProfileName:  runtime/default\n      apparmor.security.beta.kubernetes.io/defaultProfileName:  runtime/default\n\n  serverTelemetry:\n    # Enable integration with the Prometheus Operator\n    # See the top level serverTelemetry section below before enabling this feature.\n    prometheusOperator: false\n\ninjector:\n  # True if you want to enable vault agent injection.\n  # @default: global.enabled\n  enabled: \"-\"\n\n  replicas: 1\n\n  # Configures the port the injector should listen on\n  port: 8080\n\n  # If multiple replicas are specified, by default a leader will be determined\n  # so that only one injector attempts to create TLS certificates.\n  leaderElector:\n    enabled: true\n\n  # If true, will enable a node exporter metrics endpoint at /metrics.\n  metrics:\n    enabled: false\n\n  # Deprecated: Please use global.externalVaultAddr instead.\n  externalVaultAddr: \"\"\n\n  # image sets the repo and tag of the vault-k8s image to use for the injector.\n  image:\n    repository: \"hashicorp/vault-k8s\"\n    tag: \"1.5.0\"\n    pullPolicy: IfNotPresent\n\n  # agentImage sets the repo and tag of the Vault image to use for the Vault Agent\n  # containers.  This should be set to the official Vault image.  Vault 1.3.1+ is\n  # required.\n  agentImage:\n    repository: \"hashicorp/vault\"\n    tag: \"1.18.1\"\n\n  # The default values for the injected Vault Agent containers.\n  agentDefaults:\n    # For more information on configuring resources, see the K8s documentation:\n    # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n    cpuLimit: \"500m\"\n    cpuRequest: \"250m\"\n    memLimit: \"128Mi\"\n    memRequest: \"64Mi\"\n    # ephemeralLimit: \"128Mi\"\n    # ephemeralRequest: \"64Mi\"\n\n    # Default template type for secrets when no custom template is specified.\n    # Possible values include: \"json\" and \"map\".\n    template: \"map\"\n\n    # Default values within Agent's template_config stanza.\n    templateConfig:\n      exitOnRetryFailure: true\n      staticSecretRenderInterval: \"\"\n\n  # Used to define custom livenessProbe settings\n  livenessProbe:\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 2\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 5\n  # Used to define custom readinessProbe settings\n  readinessProbe:\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 2\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 5\n  # Used to define custom startupProbe settings\n  startupProbe:\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 12\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 5\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 5\n\n  # Mount Path of the Vault Kubernetes Auth Method.\n  authPath: \"auth/kubernetes\"\n\n  # Configures the log verbosity of the injector.\n  # Supported log levels include: trace, debug, info, warn, error\n  logLevel: \"info\"\n\n  # Configures the log format of the injector. Supported log formats: \"standard\", \"json\".\n  logFormat: \"standard\"\n\n  # Configures all Vault Agent sidecars to revoke their token when shutting down\n  revokeOnShutdown: false\n\n  webhook:\n    # Configures failurePolicy of the webhook. The \"unspecified\" default behaviour depends on the\n    # API Version of the WebHook.\n    # To block pod creation while the webhook is unavailable, set the policy to `Fail` below.\n    # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#failure-policy\n    #\n    failurePolicy: Ignore\n\n    # matchPolicy specifies the approach to accepting changes based on the rules of\n    # the MutatingWebhookConfiguration.\n    # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-matchpolicy\n    # for more details.\n    #\n    matchPolicy: Exact\n\n    # timeoutSeconds is the amount of seconds before the webhook request will be ignored\n    # or fails.\n    # If it is ignored or fails depends on the failurePolicy\n    # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#timeouts\n    # for more details.\n    #\n    timeoutSeconds: 30\n\n    # namespaceSelector is the selector for restricting the webhook to only\n    # specific namespaces.\n    # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector\n    # for more details.\n    # Example:\n    # namespaceSelector:\n    #    matchLabels:\n    #      sidecar-injector: enabled\n    namespaceSelector: {}\n\n    # objectSelector is the selector for restricting the webhook to only\n    # specific labels.\n    # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-objectselector\n    # for more details.\n    # Example:\n    # objectSelector:\n    #    matchLabels:\n    #      vault-sidecar-injector: enabled\n    objectSelector: |\n      matchExpressions:\n      - key: app.kubernetes.io/name\n        operator: NotIn\n        values:\n        - {{ template \"vault.name\" . }}-agent-injector\n\n    # Extra annotations to attach to the webhook\n    annotations: {}\n\n  # Deprecated: please use 'webhook.failurePolicy' instead\n  # Configures failurePolicy of the webhook. The \"unspecified\" default behaviour depends on the\n  # API Version of the WebHook.\n  # To block pod creation while webhook is unavailable, set the policy to `Fail` below.\n  # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#failure-policy\n  #\n  failurePolicy: Ignore\n\n  # Deprecated: please use 'webhook.namespaceSelector' instead\n  # namespaceSelector is the selector for restricting the webhook to only\n  # specific namespaces.\n  # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector\n  # for more details.\n  # Example:\n  # namespaceSelector:\n  #    matchLabels:\n  #      sidecar-injector: enabled\n  namespaceSelector: {}\n\n  # Deprecated: please use 'webhook.objectSelector' instead\n  # objectSelector is the selector for restricting the webhook to only\n  # specific labels.\n  # See https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-objectselector\n  # for more details.\n  # Example:\n  # objectSelector:\n  #    matchLabels:\n  #      vault-sidecar-injector: enabled\n  objectSelector: {}\n\n  # Deprecated: please use 'webhook.annotations' instead\n  # Extra annotations to attach to the webhook\n  webhookAnnotations: {}\n\n  certs:\n    # secretName is the name of the secret that has the TLS certificate and\n    # private key to serve the injector webhook. If this is null, then the\n    # injector will default to its automatic management mode that will assign\n    # a service account to the injector to generate its own certificates.\n    secretName: null\n\n    # caBundle is a base64-encoded PEM-encoded certificate bundle for the CA\n    # that signed the TLS certificate that the webhook serves. This must be set\n    # if secretName is non-null unless an external service like cert-manager is\n    # keeping the caBundle updated.\n    caBundle: \"\"\n\n    # certName and keyName are the names of the files within the secret for\n    # the TLS cert and private key, respectively. These have reasonable\n    # defaults but can be customized if necessary.\n    certName: tls.crt\n    keyName: tls.key\n\n  # Security context for the pod template and the injector container\n  # The default pod securityContext is:\n  #   runAsNonRoot: true\n  #   runAsGroup: {{ .Values.injector.gid | default 1000 }}\n  #   runAsUser: {{ .Values.injector.uid | default 100 }}\n  #   fsGroup: {{ .Values.injector.gid | default 1000 }}\n  # and for container is\n  #    allowPrivilegeEscalation: false\n  #    capabilities:\n  #      drop:\n  #        - ALL\n  securityContext:\n    pod: {}\n    container: {}\n\n  resources: {}\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 250m\n  #   limits:\n  #     memory: 256Mi\n  #     cpu: 250m\n\n  # extraEnvironmentVars is a list of extra environment variables to set in the\n  # injector deployment.\n  extraEnvironmentVars: {}\n    # KUBERNETES_SERVICE_HOST: kubernetes.default.svc\n\n  # Affinity Settings for injector pods\n  # This can either be a multi-line string or YAML matching the PodSpec's affinity field.\n  # Commenting out or setting as empty the affinity variable, will allow\n  # deployment of multiple replicas to single node services such as Minikube.\n  affinity: |\n    podAntiAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        - labelSelector:\n            matchLabels:\n              app.kubernetes.io/name: {{ template \"vault.name\" . }}-agent-injector\n              app.kubernetes.io/instance: \"{{ .Release.Name }}\"\n              component: webhook\n          topologyKey: kubernetes.io/hostname\n\n  # Topology settings for injector pods\n  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  # This should be either a multi-line string or YAML matching the topologySpreadConstraints array\n  # in a PodSpec.\n  topologySpreadConstraints: []\n\n  # Toleration Settings for injector pods\n  # This should be either a multi-line string or YAML matching the Toleration array\n  # in a PodSpec.\n  tolerations: []\n\n  # nodeSelector labels for server pod assignment, formatted as a multi-line string or YAML map.\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  # Example:\n  # nodeSelector:\n  #   beta.kubernetes.io/arch: amd64\n  nodeSelector: {}\n\n  # Priority class for injector pods\n  priorityClassName: \"\"\n\n  # Extra annotations to attach to the injector pods\n  # This can either be YAML or a YAML-formatted multi-line templated string map\n  # of the annotations to apply to the injector pods\n  annotations: {}\n\n  # Extra labels to attach to the agent-injector\n  # This should be a YAML map of the labels to apply to the injector\n  extraLabels: {}\n\n  # Should the injector pods run on the host network (useful when using\n  # an alternate CNI in EKS)\n  hostNetwork: false\n\n  # Injector service specific config\n  service:\n    # Extra annotations to attach to the injector service\n    annotations: {}\n\n  # Injector serviceAccount specific config\n  serviceAccount:\n    # Extra annotations to attach to the injector serviceAccount\n    annotations: {}\n\n  # A disruption budget limits the number of pods of a replicated application\n  # that are down simultaneously from voluntary disruptions\n  podDisruptionBudget: {}\n  # podDisruptionBudget:\n  #   maxUnavailable: 1\n\n  # strategy for updating the deployment. This can be a multi-line string or a\n  # YAML map.\n  strategy: {}\n  # strategy: |\n  #   rollingUpdate:\n  #     maxSurge: 25%\n  #     maxUnavailable: 25%\n  #   type: RollingUpdate\n\nserver:\n  # If true, or \"-\" with global.enabled true, Vault server will be installed.\n  # See vault.mode in _helpers.tpl for implementation details.\n  enabled: \"-\"\n\n  # [Enterprise Only] This value refers to a Kubernetes secret that you have\n  # created that contains your enterprise license. If you are not using an\n  # enterprise image or if you plan to introduce the license key via another\n  # route, then leave secretName blank (\"\") or set it to null.\n  # Requires Vault Enterprise 1.8 or later.\n  enterpriseLicense:\n    # The name of the Kubernetes secret that holds the enterprise license. The\n    # secret must be in the same namespace that Vault is installed into.\n    secretName: \"\"\n    # The key within the Kubernetes secret that holds the enterprise license.\n    secretKey: \"license\"\n\n  # Resource requests, limits, etc. for the server cluster placement. This\n  # should map directly to the value of the resources field for a PodSpec.\n  # By default no direct resource request is made.\n\n  image:\n    repository: \"hashicorp/vault\"\n    tag: \"1.18.1\"\n    # Overrides the default Image Pull Policy\n    pullPolicy: IfNotPresent\n\n  # Configure the Update Strategy Type for the StatefulSet\n  # See https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies\n  updateStrategyType: \"OnDelete\"\n\n  # Configure the logging verbosity for the Vault server.\n  # Supported log levels include: trace, debug, info, warn, error\n  logLevel: \"\"\n\n  # Configure the logging format for the Vault server.\n  # Supported log formats include: standard, json\n  logFormat: \"\"\n\n  resources: {}\n  # resources:\n  #   requests:\n  #     memory: 256Mi\n  #     cpu: 250m\n  #   limits:\n  #     memory: 256Mi\n  #     cpu: 250m\n\n  # Ingress allows ingress services to be created to allow external access\n  # from Kubernetes to access Vault pods.\n  # If deployment is on OpenShift, the following block is ignored.\n  # In order to expose the service, use the route section below\n  ingress:\n    enabled: false\n    labels: {}\n      # traffic: external\n    annotations: {}\n      # |\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n      #   or\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acme: \"true\"\n\n    # Optionally use ingressClassName instead of deprecated annotation.\n    # See: https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation\n    ingressClassName: \"\"\n\n    # As of Kubernetes 1.19, all Ingress Paths must have a pathType configured. The default value below should be sufficient in most cases.\n    # See: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types for other possible values.\n    pathType: Prefix\n\n    # When HA mode is enabled and K8s service registration is being used,\n    # configure the ingress to point to the Vault active service.\n    activeService: true\n    hosts:\n      - host: chart-example.local\n        paths: []\n    ## Extra paths to prepend to the host configuration. This is useful when working with annotation based services.\n    extraPaths: []\n    # - path: /*\n    #   backend:\n    #     service:\n    #       name: ssl-redirect\n    #       port:\n    #         number: use-annotation\n    tls: []\n    #  - secretName: chart-example-tls\n    #    hosts:\n    #      - chart-example.local\n\n  # hostAliases is a list of aliases to be added to /etc/hosts. Specified as a YAML list.\n  hostAliases: []\n  # - ip: 127.0.0.1\n  #   hostnames:\n  #     - chart-example.local\n\n  # OpenShift only - create a route to expose the service\n  # By default the created route will be of type passthrough\n  route:\n    enabled: false\n\n    # When HA mode is enabled and K8s service registration is being used,\n    # configure the route to point to the Vault active service.\n    activeService: true\n\n    labels: {}\n    annotations: {}\n    host: chart-example.local\n    # tls will be passed directly to the route's TLS config, which\n    # can be used to configure other termination methods that terminate\n    # TLS at the router\n    tls:\n      termination: passthrough\n\n  # authDelegator enables a cluster role binding to be attached to the service\n  # account.  This cluster role binding can be used to setup Kubernetes auth\n  # method. See https://developer.hashicorp.com/vault/docs/auth/kubernetes\n  authDelegator:\n    enabled: true\n\n  # extraInitContainers is a list of init containers. Specified as a YAML list.\n  # This is useful if you need to run a script to provision TLS certificates or\n  # write out configuration files in a dynamic way.\n  extraInitContainers: null\n    # # This example installs a plugin pulled from github into the /usr/local/libexec/vault/oauthapp folder,\n    # # which is defined in the volumes value.\n    # - name: oauthapp\n    #   image: \"alpine\"\n    #   command: [sh, -c]\n    #   args:\n    #     - cd /tmp &&\n    #       wget https://github.com/puppetlabs/vault-plugin-secrets-oauthapp/releases/download/v1.2.0/vault-plugin-secrets-oauthapp-v1.2.0-linux-amd64.tar.xz -O oauthapp.xz &&\n    #       tar -xf oauthapp.xz &&\n    #       mv vault-plugin-secrets-oauthapp-v1.2.0-linux-amd64 /usr/local/libexec/vault/oauthapp &&\n    #       chmod +x /usr/local/libexec/vault/oauthapp\n    #   volumeMounts:\n    #     - name: plugins\n    #       mountPath: /usr/local/libexec/vault\n\n  # extraContainers is a list of sidecar containers. Specified as a YAML list.\n  extraContainers: null\n\n  # shareProcessNamespace enables process namespace sharing between Vault and the extraContainers\n  # This is useful if Vault must be signaled, e.g. to send a SIGHUP for a log rotation\n  shareProcessNamespace: false\n\n  # extraArgs is a string containing additional Vault server arguments.\n  extraArgs: \"\"\n\n  # extraPorts is a list of extra ports. Specified as a YAML list.\n  # This is useful if you need to add additional ports to the statefulset in dynamic way.\n  extraPorts: null\n    # - containerPort: 8300\n    #   name: http-monitoring\n\n  # Used to define custom readinessProbe settings\n  readinessProbe:\n    enabled: true\n    # If you need to use a http path instead of the default exec\n    # path: /v1/sys/health?standbyok=true\n\n    # Port number on which readinessProbe will be checked.\n    port: 8200\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 5\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 3\n  # Used to enable a livenessProbe for the pods\n  livenessProbe:\n    enabled: false\n    # Used to define a liveness exec command. If provided, exec is preferred to httpGet (path) as the livenessProbe handler.\n    execCommand: []\n    # - /bin/sh\n    # - -c\n    # - /vault/userconfig/mylivenessscript/run.sh\n    # Path for the livenessProbe to use httpGet as the livenessProbe handler\n    path: \"/v1/sys/health?standbyok=true\"\n    # Port number on which livenessProbe will be checked if httpGet is used as the livenessProbe handler\n    port: 8200\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 60\n    # How often (in seconds) to perform the probe\n    periodSeconds: 5\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 3\n\n  # Optional duration in seconds the pod needs to terminate gracefully.\n  # See: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/\n  terminationGracePeriodSeconds: 10\n\n  # Used to set the sleep time during the preStop step\n  preStopSleepSeconds: 5\n\n  # Used to define commands to run after the pod is ready.\n  # This can be used to automate processes such as initialization\n  # or boostrapping auth methods.\n  postStart: []\n  # - /bin/sh\n  # - -c\n  # - /vault/userconfig/myscript/run.sh\n\n  # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be\n  # used to include variables required for auto-unseal.\n  extraEnvironmentVars: {}\n    # GOOGLE_REGION: global\n    # GOOGLE_PROJECT: myproject\n    # GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/myproject/myproject-creds.json\n\n  # extraSecretEnvironmentVars is a list of extra environment variables to set with the stateful set.\n  # These variables take value from existing Secret objects.\n  extraSecretEnvironmentVars: []\n    # - envName: AWS_SECRET_ACCESS_KEY\n    #   secretName: vault\n    #   secretKey: AWS_SECRET_ACCESS_KEY\n\n  # Deprecated: please use 'volumes' instead.\n  # extraVolumes is a list of extra volumes to mount. These will be exposed\n  # to Vault in the path `/vault/userconfig/<name>/`. The value below is\n  # an array of objects, examples are shown below.\n  extraVolumes: []\n    # - type: secret (or \"configMap\")\n    #   name: my-secret\n    #   path: null # default is `/vault/userconfig`\n\n  # volumes is a list of volumes made available to all containers. These are rendered\n  # via toYaml rather than pre-processed like the extraVolumes value.\n  # The purpose is to make it easy to share volumes between containers.\n  volumes: null\n  #   - name: plugins\n  #     emptyDir: {}\n\n  # volumeMounts is a list of volumeMounts for the main server container. These are rendered\n  # via toYaml rather than pre-processed like the extraVolumes value.\n  # The purpose is to make it easy to share volumes between containers.\n  volumeMounts: null\n  #   - mountPath: /usr/local/libexec/vault\n  #     name: plugins\n  #     readOnly: true\n\n  # Affinity Settings\n  # Commenting out or setting as empty the affinity variable, will allow\n  # deployment to single node services such as Minikube\n  # This should be either a multi-line string or YAML matching the PodSpec's affinity field.\n  affinity: |\n    podAntiAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        - labelSelector:\n            matchLabels:\n              app.kubernetes.io/name: {{ template \"vault.name\" . }}\n              app.kubernetes.io/instance: \"{{ .Release.Name }}\"\n              component: server\n          topologyKey: kubernetes.io/hostname\n\n  # Topology settings for server pods\n  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/\n  # This should be either a multi-line string or YAML matching the topologySpreadConstraints array\n  # in a PodSpec.\n  topologySpreadConstraints: []\n\n  # Toleration Settings for server pods\n  # This should be either a multi-line string or YAML matching the Toleration array\n  # in a PodSpec.\n  tolerations: []\n\n  # nodeSelector labels for server pod assignment, formatted as a multi-line string or YAML map.\n  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n  # Example:\n  # nodeSelector:\n  #   beta.kubernetes.io/arch: amd64\n  nodeSelector: {}\n\n  # Enables network policy for server pods\n  networkPolicy:\n    enabled: false\n    egress: []\n    # egress:\n    # - to:\n    #   - ipBlock:\n    #       cidr: 10.0.0.0/24\n    #   ports:\n    #   - protocol: TCP\n    #     port: 443\n    ingress:\n      - from:\n        - namespaceSelector: {}\n        ports:\n        - port: 8200\n          protocol: TCP\n        - port: 8201\n          protocol: TCP\n\n  # Priority class for server pods\n  priorityClassName: \"\"\n\n  # Extra labels to attach to the server pods\n  # This should be a YAML map of the labels to apply to the server pods\n  extraLabels: {}\n\n  # Extra annotations to attach to the server pods\n  # This can either be YAML or a YAML-formatted multi-line templated string map\n  # of the annotations to apply to the server pods\n  annotations: {}\n\n  # Add an annotation to the server configmap and the statefulset pods,\n  # vaultproject.io/config-checksum, that is a hash of the Vault configuration.\n  # This can be used together with an OnDelete deployment strategy to help\n  # identify which pods still need to be deleted during a deployment to pick up\n  # any configuration changes.\n  includeConfigAnnotation: false\n\n  # Enables a headless service to be used by the Vault Statefulset\n  service:\n    enabled: true\n    # Enable or disable the vault-active service, which selects Vault pods that\n    # have labeled themselves as the cluster leader with `vault-active: \"true\"`.\n    active:\n      enabled: true\n      # Extra annotations for the service definition. This can either be YAML or a\n      # YAML-formatted multi-line templated string map of the annotations to apply\n      # to the active service.\n      annotations: {}\n    # Enable or disable the vault-standby service, which selects Vault pods that\n    # have labeled themselves as a cluster follower with `vault-active: \"false\"`.\n    standby:\n      enabled: true\n      # Extra annotations for the service definition. This can either be YAML or a\n      # YAML-formatted multi-line templated string map of the annotations to apply\n      # to the standby service.\n      annotations: {}\n    # If enabled, the service selectors will include `app.kubernetes.io/instance: {{ .Release.Name }}`\n    # When disabled, services may select Vault pods not deployed from the chart.\n    # Does not affect the headless vault-internal service with `ClusterIP: None`\n    instanceSelector:\n      enabled: true\n    # clusterIP controls whether a Cluster IP address is attached to the\n    # Vault service within Kubernetes.  By default, the Vault service will\n    # be given a Cluster IP address, set to None to disable.  When disabled\n    # Kubernetes will create a \"headless\" service.  Headless services can be\n    # used to communicate with pods directly through DNS instead of a round-robin\n    # load balancer.\n    # clusterIP: None\n\n    # Configures the service type for the main Vault service.  Can be ClusterIP\n    # or NodePort.\n    #type: ClusterIP\n\n    # The IP family and IP families options are to set the behaviour in a dual-stack environment.\n    # Omitting these values will let the service fall back to whatever the CNI dictates the defaults\n    # should be.\n    # These are only supported for kubernetes versions >=1.23.0\n    #\n    # Configures the service's supported IP family policy, can be either:\n    #     SingleStack: Single-stack service. The control plane allocates a cluster IP for the Service, using the first configured service cluster IP range.\n    #     PreferDualStack: Allocates IPv4 and IPv6 cluster IPs for the Service.\n    #     RequireDualStack: Allocates Service .spec.ClusterIPs from both IPv4 and IPv6 address ranges.\n    ipFamilyPolicy: \"\"\n\n    # Sets the families that should be supported and the order in which they should be applied to ClusterIP as well.\n    # Can be IPv4 and/or IPv6.\n    ipFamilies: []\n\n    # Do not wait for pods to be ready before including them in the services'\n    # targets. Does not apply to the headless service, which is used for\n    # cluster-internal communication.\n    publishNotReadyAddresses: true\n\n    # The externalTrafficPolicy can be set to either Cluster or Local\n    # and is only valid for LoadBalancer and NodePort service types.\n    # The default value is Cluster.\n    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-traffic-policy\n    externalTrafficPolicy: Cluster\n\n    # If type is set to \"NodePort\", a specific nodePort value can be configured,\n    # will be random if left blank.\n    #nodePort: 30000\n\n    # When HA mode is enabled\n    # If type is set to \"NodePort\", a specific nodePort value can be configured,\n    # will be random if left blank.\n    #activeNodePort: 30001\n\n    # When HA mode is enabled\n    # If type is set to \"NodePort\", a specific nodePort value can be configured,\n    # will be random if left blank.\n    #standbyNodePort: 30002\n\n    # Port on which Vault server is listening\n    port: 8200\n    # Target port to which the service should be mapped to\n    targetPort: 8200\n    # Extra annotations for the service definition. This can either be YAML or a\n    # YAML-formatted multi-line templated string map of the annotations to apply\n    # to the service.\n    annotations: {}\n\n  # This configures the Vault Statefulset to create a PVC for data\n  # storage when using the file or raft backend storage engines.\n  # See https://developer.hashicorp.com/vault/docs/configuration/storage to know more\n  dataStorage:\n    enabled: true\n    # Size of the PVC created\n    size: 10Gi\n    # Location where the PVC will be mounted.\n    mountPath: \"/vault/data\"\n    # Name of the storage class to use.  If null it will use the\n    # configured default Storage Class.\n    storageClass: null\n    # Access Mode of the storage device being used for the PVC\n    accessMode: ReadWriteOnce\n    # Annotations to apply to the PVC\n    annotations: {}\n    # Labels to apply to the PVC\n    labels: {}\n\n  # Persistent Volume Claim (PVC) retention policy\n  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention\n  # Example:\n  # persistentVolumeClaimRetentionPolicy:\n  #   whenDeleted: Retain\n  #   whenScaled: Retain\n  persistentVolumeClaimRetentionPolicy: {}\n\n  # This configures the Vault Statefulset to create a PVC for audit\n  # logs.  Once Vault is deployed, initialized, and unsealed, Vault must\n  # be configured to use this for audit logs.  This will be mounted to\n  # /vault/audit\n  # See https://developer.hashicorp.com/vault/docs/audit to know more\n  auditStorage:\n    enabled: false\n    # Size of the PVC created\n    size: 10Gi\n    # Location where the PVC will be mounted.\n    mountPath: \"/vault/audit\"\n    # Name of the storage class to use.  If null it will use the\n    # configured default Storage Class.\n    storageClass: null\n    # Access Mode of the storage device being used for the PVC\n    accessMode: ReadWriteOnce\n    # Annotations to apply to the PVC\n    annotations: {}\n    # Labels to apply to the PVC\n    labels: {}\n\n  # Run Vault in \"dev\" mode. This requires no further setup, no state management,\n  # and no initialization. This is useful for experimenting with Vault without\n  # needing to unseal, store keys, et. al. All data is lost on restart - do not\n  # use dev mode for anything other than experimenting.\n  # See https://developer.hashicorp.com/vault/docs/concepts/dev-server to know more\n  dev:\n    enabled: false\n\n    # Set VAULT_DEV_ROOT_TOKEN_ID value\n    devRootToken: \"root\"\n\n  # Run Vault in \"standalone\" mode. This is the default mode that will deploy if\n  # no arguments are given to helm. This requires a PVC for data storage to use\n  # the \"file\" backend.  This mode is not highly available and should not be scaled\n  # past a single replica.\n  standalone:\n    enabled: \"-\"\n\n    # config is a raw string of default configuration when using a Stateful\n    # deployment. Default is to use a PersistentVolumeClaim mounted at /vault/data\n    # and store data there. This is only used when using a Replica count of 1, and\n    # using a stateful set. Supported formats are HCL and JSON.\n\n    # Note: Configuration files are stored in ConfigMaps so sensitive data\n    # such as passwords should be either mounted through extraSecretEnvironmentVars\n    # or through a Kube secret. For more information see:\n    # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations\n    config: |-\n      ui = true\n\n      listener \"tcp\" {\n        tls_disable = 1\n        address = \"[::]:8200\"\n        cluster_address = \"[::]:8201\"\n        # Enable unauthenticated metrics access (necessary for Prometheus Operator)\n        #telemetry {\n        #  unauthenticated_metrics_access = \"true\"\n        #}\n      }\n      storage \"file\" {\n        path = \"/vault/data\"\n      }\n\n      # Example configuration for using auto-unseal, using Google Cloud KMS. The\n      # GKMS keys must already exist, and the cluster must have a service account\n      # that is authorized to access GCP KMS.\n      #seal \"gcpckms\" {\n      #   project     = \"vault-helm-dev\"\n      #   region      = \"global\"\n      #   key_ring    = \"vault-helm-unseal-kr\"\n      #   crypto_key  = \"vault-helm-unseal-key\"\n      #}\n\n      # Example configuration for enabling Prometheus metrics in your config.\n      #telemetry {\n      #  prometheus_retention_time = \"30s\"\n      #  disable_hostname = true\n      #}\n\n  # Run Vault in \"HA\" mode. There are no storage requirements unless the audit log\n  # persistence is required.  In HA mode Vault will configure itself to use Consul\n  # for its storage backend.  The default configuration provided will work the Consul\n  # Helm project by default.  It is possible to manually configure Vault to use a\n  # different HA backend.\n  ha:\n    enabled: false\n    replicas: 3\n\n    # Set the api_addr configuration for Vault HA\n    # See https://developer.hashicorp.com/vault/docs/configuration#api_addr\n    # If set to null, this will be set to the Pod IP Address\n    apiAddr: null\n\n    # Set the cluster_addr configuration for Vault HA\n    # See https://developer.hashicorp.com/vault/docs/configuration#cluster_addr\n    # If set to null, this will be set to https://$(HOSTNAME).{{ template \"vault.fullname\" . }}-internal:8201\n    clusterAddr: null\n\n    # Enables Vault's integrated Raft storage.  Unlike the typical HA modes where\n    # Vault's persistence is external (such as Consul), enabling Raft mode will create\n    # persistent volumes for Vault to store data according to the configuration under server.dataStorage.\n    # The Vault cluster will coordinate leader elections and failovers internally.\n    raft:\n\n      # Enables Raft integrated storage\n      enabled: false\n      # Set the Node Raft ID to the name of the pod\n      setNodeId: false\n\n      # Note: Configuration files are stored in ConfigMaps so sensitive data\n      # such as passwords should be either mounted through extraSecretEnvironmentVars\n      # or through a Kube secret.  For more information see:\n      # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations\n      # Supported formats are HCL and JSON.\n      config: |\n        ui = true\n\n        listener \"tcp\" {\n          tls_disable = 1\n          address = \"[::]:8200\"\n          cluster_address = \"[::]:8201\"\n          # Enable unauthenticated metrics access (necessary for Prometheus Operator)\n          #telemetry {\n          #  unauthenticated_metrics_access = \"true\"\n          #}\n        }\n\n        storage \"raft\" {\n          path = \"/vault/data\"\n        }\n\n        service_registration \"kubernetes\" {}\n\n    # config is a raw string of default configuration when using a Stateful\n    # deployment. Default is to use a Consul for its HA storage backend.\n    # Supported formats are HCL and JSON.\n\n    # Note: Configuration files are stored in ConfigMaps so sensitive data\n    # such as passwords should be either mounted through extraSecretEnvironmentVars\n    # or through a Kube secret. For more information see:\n    # https://developer.hashicorp.com/vault/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations\n    config: |\n      ui = true\n\n      listener \"tcp\" {\n        tls_disable = 1\n        address = \"[::]:8200\"\n        cluster_address = \"[::]:8201\"\n      }\n      storage \"consul\" {\n        path = \"vault\"\n        address = \"HOST_IP:8500\"\n      }\n\n      service_registration \"kubernetes\" {}\n\n      # Example configuration for using auto-unseal, using Google Cloud KMS. The\n      # GKMS keys must already exist, and the cluster must have a service account\n      # that is authorized to access GCP KMS.\n      #seal \"gcpckms\" {\n      #   project     = \"vault-helm-dev-246514\"\n      #   region      = \"global\"\n      #   key_ring    = \"vault-helm-unseal-kr\"\n      #   crypto_key  = \"vault-helm-unseal-key\"\n      #}\n\n      # Example configuration for enabling Prometheus metrics.\n      # If you are using Prometheus Operator you can enable a ServiceMonitor resource below.\n      # You may wish to enable unauthenticated metrics in the listener block above.\n      #telemetry {\n      #  prometheus_retention_time = \"30s\"\n      #  disable_hostname = true\n      #}\n\n    # A disruption budget limits the number of pods of a replicated application\n    # that are down simultaneously from voluntary disruptions\n    disruptionBudget:\n      enabled: true\n\n    # maxUnavailable will default to (n/2)-1 where n is the number of\n    # replicas. If you'd like a custom value, you can specify an override here.\n      maxUnavailable: null\n\n  # Definition of the serviceAccount used to run Vault.\n  # These options are also used when using an external Vault server to validate\n  # Kubernetes tokens.\n  serviceAccount:\n    # Specifies whether a service account should be created\n    create: true\n    # The name of the service account to use.\n    # If not set and create is true, a name is generated using the fullname template\n    name: \"\"\n    # Create a Secret API object to store a non-expiring token for the service account.\n    # Prior to v1.24.0, Kubernetes used to generate this secret for each service account by default.\n    # Kubernetes now recommends using short-lived tokens from the TokenRequest API or projected volumes instead if possible.\n    # For more details, see https://kubernetes.io/docs/concepts/configuration/secret/#service-account-token-secrets\n    # serviceAccount.create must be equal to 'true' in order to use this feature.\n    createSecret: false\n    # Extra annotations for the serviceAccount definition. This can either be\n    # YAML or a YAML-formatted multi-line templated string map of the\n    # annotations to apply to the serviceAccount.\n    annotations: {}\n    # Extra labels to attach to the serviceAccount\n    # This should be a YAML map of the labels to apply to the serviceAccount\n    extraLabels: {}\n    # Enable or disable a service account role binding with the permissions required for\n    # Vault's Kubernetes service_registration config option.\n    # See https://developer.hashicorp.com/vault/docs/configuration/service-registration/kubernetes\n    serviceDiscovery:\n      enabled: true\n\n  # Settings for the statefulSet used to run Vault.\n  statefulSet:\n    # Extra annotations for the statefulSet. This can either be YAML or a\n    # YAML-formatted multi-line templated string map of the annotations to apply\n    # to the statefulSet.\n    annotations: {}\n\n    # Set the pod and container security contexts.\n    # If not set, these will default to, and for *not* OpenShift:\n    # pod:\n    #   runAsNonRoot: true\n    #   runAsGroup: {{ .Values.server.gid | default 1000 }}\n    #   runAsUser: {{ .Values.server.uid | default 100 }}\n    #   fsGroup: {{ .Values.server.gid | default 1000 }}\n    # container:\n    #   allowPrivilegeEscalation: false\n    #\n    # If not set, these will default to, and for OpenShift:\n    # pod: {}\n    # container: {}\n    securityContext:\n      pod: {}\n      container: {}\n\n  # Should the server pods run on the host network\n  hostNetwork: false\n\n# Vault UI\nui:\n  # True if you want to create a Service entry for the Vault UI.\n  #\n  # serviceType can be used to control the type of service created. For\n  # example, setting this to \"LoadBalancer\" will create an external load\n  # balancer (for supported K8S installations) to access the UI.\n  enabled: false\n  publishNotReadyAddresses: true\n  # The service should only contain selectors for active Vault pod\n  activeVaultPodOnly: false\n  serviceType: \"ClusterIP\"\n  serviceNodePort: null\n  externalPort: 8200\n  targetPort: 8200\n\n  # The IP family and IP families options are to set the behaviour in a dual-stack environment.\n  # Omitting these values will let the service fall back to whatever the CNI dictates the defaults\n  # should be.\n  # These are only supported for kubernetes versions >=1.23.0\n  #\n  # Configures the service's supported IP family, can be either:\n  #     SingleStack: Single-stack service. The control plane allocates a cluster IP for the Service, using the first configured service cluster IP range.\n  #     PreferDualStack: Allocates IPv4 and IPv6 cluster IPs for the Service.\n  #     RequireDualStack: Allocates Service .spec.ClusterIPs from both IPv4 and IPv6 address ranges.\n  serviceIPFamilyPolicy: \"\"\n\n  # Sets the families that should be supported and the order in which they should be applied to ClusterIP as well\n  # Can be IPv4 and/or IPv6.\n  serviceIPFamilies: []\n\n  # The externalTrafficPolicy can be set to either Cluster or Local\n  # and is only valid for LoadBalancer and NodePort service types.\n  # The default value is Cluster.\n  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-traffic-policy\n  externalTrafficPolicy: Cluster\n\n  #loadBalancerSourceRanges:\n  #   - 10.0.0.0/16\n  #   - 1.78.23.3/32\n\n  # loadBalancerIP:\n\n  # Extra annotations to attach to the ui service\n  # This can either be YAML or a YAML-formatted multi-line templated string map\n  # of the annotations to apply to the ui service\n  annotations: {}\n\n# secrets-store-csi-driver-provider-vault\ncsi:\n  # True if you want to install a secrets-store-csi-driver-provider-vault daemonset.\n  #\n  # Requires installing the secrets-store-csi-driver separately, see:\n  # https://github.com/kubernetes-sigs/secrets-store-csi-driver#install-the-secrets-store-csi-driver\n  #\n  # With the driver and provider installed, you can mount Vault secrets into volumes\n  # similar to the Vault Agent injector, and you can also sync those secrets into\n  # Kubernetes secrets.\n  enabled: false\n\n  image:\n    repository: \"hashicorp/vault-csi-provider\"\n    tag: \"1.5.0\"\n    pullPolicy: IfNotPresent\n\n  # volumes is a list of volumes made available to all containers. These are rendered\n  # via toYaml rather than pre-processed like the extraVolumes value.\n  # The purpose is to make it easy to share volumes between containers.\n  volumes: null\n  # - name: tls\n  #   secret:\n  #     secretName: vault-tls\n\n  # volumeMounts is a list of volumeMounts for the main server container. These are rendered\n  # via toYaml rather than pre-processed like the extraVolumes value.\n  # The purpose is to make it easy to share volumes between containers.\n  volumeMounts: null\n  # - name: tls\n  #   mountPath: \"/vault/tls\"\n  #   readOnly: true\n\n  resources: {}\n  # resources:\n  #   requests:\n  #     cpu: 50m\n  #     memory: 128Mi\n  #   limits:\n  #     cpu: 50m\n  #     memory: 128Mi\n\n  # Override the default secret name for the CSI Provider's HMAC key used for\n  # generating secret versions.\n  hmacSecretName: \"\"\n\n  # Allow modification of the hostNetwork parameter to avoid the need of a\n  # dedicated pod ip\n  hostNetwork: false\n\n  # Settings for the daemonSet used to run the provider.\n  daemonSet:\n    updateStrategy:\n      type: RollingUpdate\n      maxUnavailable: \"\"\n    # Extra annotations for the daemonSet. This can either be YAML or a\n    # YAML-formatted multi-line templated string map of the annotations to apply\n    # to the daemonSet.\n    annotations: {}\n    # Provider host path (must match the CSI provider's path)\n    providersDir: \"/etc/kubernetes/secrets-store-csi-providers\"\n    # Kubelet host path\n    kubeletRootDir: \"/var/lib/kubelet\"\n    # Extra labels to attach to the vault-csi-provider daemonSet\n    # This should be a YAML map of the labels to apply to the csi provider daemonSet\n    extraLabels: {}\n    # security context for the pod template and container in the csi provider daemonSet\n    securityContext:\n      pod: {}\n      container: {}\n\n  pod:\n    # Extra annotations for the provider pods. This can either be YAML or a\n    # YAML-formatted multi-line templated string map of the annotations to apply\n    # to the pod.\n    annotations: {}\n\n    # Toleration Settings for provider pods\n    # This should be either a multi-line string or YAML matching the Toleration array\n    # in a PodSpec.\n    tolerations: []\n\n    # nodeSelector labels for csi pod assignment, formatted as a multi-line string or YAML map.\n    # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\n    # Example:\n    # nodeSelector:\n    #   beta.kubernetes.io/arch: amd64\n    nodeSelector: {}\n\n    # Affinity Settings\n    # This should be either a multi-line string or YAML matching the PodSpec's affinity field.\n    affinity: {}\n\n    # Extra labels to attach to the vault-csi-provider pod\n    # This should be a YAML map of the labels to apply to the csi provider pod\n    extraLabels: {}\n\n  agent:\n    enabled: true\n    extraArgs: []\n\n    image:\n      repository: \"hashicorp/vault\"\n      tag: \"1.18.1\"\n      pullPolicy: IfNotPresent\n\n    logFormat: standard\n    logLevel: info\n\n    resources: {}\n    # resources:\n    #   requests:\n    #     memory: 256Mi\n    #     cpu: 250m\n    #   limits:\n    #     memory: 256Mi\n    #     cpu: 250m\n\n  # Priority class for csi pods\n  priorityClassName: \"\"\n\n  serviceAccount:\n    # Extra annotations for the serviceAccount definition. This can either be\n    # YAML or a YAML-formatted multi-line templated string map of the\n    # annotations to apply to the serviceAccount.\n    annotations: {}\n\n    # Extra labels to attach to the vault-csi-provider serviceAccount\n    # This should be a YAML map of the labels to apply to the csi provider serviceAccount\n    extraLabels: {}\n\n  # Used to configure readinessProbe for the pods.\n  readinessProbe:\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 5\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 3\n  # Used to configure livenessProbe for the pods.\n  livenessProbe:\n    # When a probe fails, Kubernetes will try failureThreshold times before giving up\n    failureThreshold: 2\n    # Number of seconds after the container has started before probe initiates\n    initialDelaySeconds: 5\n    # How often (in seconds) to perform the probe\n    periodSeconds: 5\n    # Minimum consecutive successes for the probe to be considered successful after having failed\n    successThreshold: 1\n    # Number of seconds after which the probe times out.\n    timeoutSeconds: 3\n\n  # Configures the log level for the Vault CSI provider.\n  # Supported log levels include: trace, debug, info, warn, error, and off\n  logLevel: \"info\"\n\n  # Deprecated, set logLevel to debug instead.\n  # If set to true, the logLevel will be set to debug.\n  debug: false\n\n  # Pass arbitrary additional arguments to vault-csi-provider.\n  # See https://developer.hashicorp.com/vault/docs/platform/k8s/csi/configurations#command-line-arguments\n  # for the available command line flags.\n  extraArgs: []\n\n# Vault is able to collect and publish various runtime metrics.\n# Enabling this feature requires setting adding `telemetry{}` stanza to\n# the Vault configuration. There are a few examples included in the `config` sections above.\n#\n# For more information see:\n# https://developer.hashicorp.com/vault/docs/configuration/telemetry\n# https://developer.hashicorp.com/vault/docs/internals/telemetry\nserverTelemetry:\n  # Enable support for the Prometheus Operator. If authorization is not set for authenticating\n  # to Vault's metrics endpoint, the following Vault server `telemetry{}` config must be included\n  # in the `listener \"tcp\"{}` stanza\n  #  telemetry {\n  #    unauthenticated_metrics_access = \"true\"\n  #  }\n  #\n  # See the `standalone.config` for a more complete example of this.\n  #\n  # In addition, a top level `telemetry{}` stanza must also be included in the Vault configuration:\n  #\n  # example:\n  #  telemetry {\n  #    prometheus_retention_time = \"30s\"\n  #    disable_hostname = true\n  #  }\n  #\n  # Configuration for monitoring the Vault server.\n  serviceMonitor:\n    # The Prometheus operator *must* be installed before enabling this feature,\n    # if not the chart will fail to install due to missing CustomResourceDefinitions\n    # provided by the operator.\n    #\n    # Instructions on how to install the Helm chart can be found here:\n    #  https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack\n    # More information can be found here:\n    #  https://github.com/prometheus-operator/prometheus-operator\n    #  https://github.com/prometheus-operator/kube-prometheus\n\n    # Enable deployment of the Vault Server ServiceMonitor CustomResource.\n    enabled: false\n\n    # Selector labels to add to the ServiceMonitor.\n    # When empty, defaults to:\n    #  release: prometheus\n    selectors: {}\n\n    # Interval at which Prometheus scrapes metrics\n    interval: 30s\n\n    # Timeout for Prometheus scrapes\n    scrapeTimeout: 10s\n\n    # tlsConfig used for scraping the Vault metrics API.\n    # See API reference: https://prometheus-operator.dev/docs/api-reference/api/#monitoring.coreos.com/v1.TLSConfig\n    # example:\n    # tlsConfig:\n    #   ca:\n    #     secret:\n    #       name: vault-metrics-client\n    #       key: ca.crt\n    tlsConfig: {}\n\n    # authorization used for scraping the Vault metrics API.\n    # See API reference: https://prometheus-operator.dev/docs/api-reference/api/#monitoring.coreos.com/v1.SafeAuthorization\n    # example:\n    # authorization:\n    #   credentials:\n    #     name: vault-metrics-client\n    #     key: token\n    authorization: {}\n\n  prometheusRules:\n      # The Prometheus operator *must* be installed before enabling this feature,\n      # if not the chart will fail to install due to missing CustomResourceDefinitions\n      # provided by the operator.\n\n      # Deploy the PrometheusRule custom resource for AlertManager based alerts.\n      # Requires that AlertManager is properly deployed.\n      enabled: false\n\n      # Selector labels to add to the PrometheusRules.\n      # When empty, defaults to:\n      #  release: prometheus\n      selectors: {}\n\n      # Some example rules.\n      rules: []\n      #  - alert: vault-HighResponseTime\n      #    annotations:\n      #      message: The response time of Vault is over 500ms on average over the last 5 minutes.\n      #    expr: vault_core_handle_request{quantile=\"0.5\", namespace=\"mynamespace\"} > 500\n      #    for: 5m\n      #    labels:\n      #      severity: warning\n      #  - alert: vault-HighResponseTime\n      #    annotations:\n      #      message: The response time of Vault is over 1s on average over the last 5 minutes.\n      #    expr: vault_core_handle_request{quantile=\"0.5\", namespace=\"mynamespace\"} > 1000\n      #    for: 5m\n      #    labels:\n      #      severity: critical\n"
        }
      ]
    }
  ]
}