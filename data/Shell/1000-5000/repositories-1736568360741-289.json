{
  "metadata": {
    "timestamp": 1736568360741,
    "page": 289,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GhostWriters/DockSTARTer",
      "stars": 2278,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3251953125,
          "content": "root = true\n\n[*]\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nend_of_line = lf\n\n[**.md]\nindent_style = space\nindent_size = 2\n\n[**.sh]\nindent_style = space\nindent_size = 4\nswitch_case_indent = true  # like -ci\nspace_redirects    = true  # like -sr\n\n[**.yaml,**.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1591796875,
          "content": ".cache\ncli-plugins/\ncompose/.env\ncompose/docker-compose.override.yml\ncompose/docker-compose.yml\nconfig.json\nconfig/\nconfigs/\ndockstarter.log\nshare/\nshared/\nsite/\n\n"
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2021 GhostWriters\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.689453125,
          "content": "# <!-- Home -->\n\n[![DockSTARTer](https://github.com/GhostWriters/DockSTARTer/raw/master/docs/assets/logo.png)](https://dockstarter.com)\n\n[![Supporters on Open Collective](https://img.shields.io/opencollective/all/DockSTARTer.svg?style=flat-square&color=607D8B&logo=opencollective&logoColor=white)](#supporters)\n[![Discord chat](https://img.shields.io/discord/477959324183035936.svg?style=flat-square&color=607D8B&logo=discord&logoColor=white)](https://dockstarter.com/discord)\n[![GitHub contributors](https://img.shields.io/github/contributors/GhostWriters/DockSTARTer.svg?style=flat-square&color=607D8B&logo=github&logoColor=white)](https://github.com/GhostWriters/DockSTARTer/graphs/contributors)\n[![GitHub last commit master](https://img.shields.io/github/last-commit/GhostWriters/DockSTARTer/master.svg?style=flat-square&color=607D8B&logo=github&logoColor=white&label=code%20committed)](https://github.com/GhostWriters/DockSTARTer/commits/master)\n[![GitHub license](https://img.shields.io/github/license/GhostWriters/DockSTARTer.svg?style=flat-square&color=607D8B&logo=github&logoColor=white)](https://github.com/GhostWriters/DockSTARTer/blob/master/LICENSE)\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/GhostWriters/DockSTARTer/tests.yml?style=flat-square&color=607D8B&logo=github&logoColor=white&branch=master)](https://github.com/GhostWriters/DockSTARTer/actions?query=workflow%3ARun%20Tests+branch%3Amaster)\n\nThe main goal of DockSTARTer is to make it quick and easy to get up and running with Docker.\n\nYou may choose to rely on DockSTARTer for various changes to your Docker system or use DockSTARTer as a stepping stone and learn to do more advanced configurations.\n\n![Main Menu](https://i.imgur.com/odfRk0j.png)\n\n![App Select](https://i.imgur.com/tFsu2Hh.png)\n\n![Value Prompt](https://i.imgur.com/k1bdAoQ.png)\n\n![Command Line Interface](https://i.imgur.com/Y8F3uT2.png)\n\n## Getting Started\n\n### System Requirements\n\n- You must be running a [supported platform](https://docs.docker.com/install/#supported-platforms) or an operating system based on a supported platform. Platforms named below will link to documentation listing compatible versions.\n- You must be logged in as a non-root user with sudo permissions.\n\n### One Time Setup (required)\n\n- APK Systems (Alpine)\n\n  ```bash\n  sudo apk add curl git\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n- APT Systems ([Debian](https://docs.docker.com/install/linux/docker-ce/debian/#os-requirements), [Ubuntu](https://docs.docker.com/install/linux/docker-ce/ubuntu/#os-requirements), etc)\n\n  ```bash\n  sudo apt-get install curl git\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n  > Raspbian requires a few extra commands\n\n  ```bash\n  sudo apt-get update\n  sudo apt-get dist-upgrade\n  sudo apt-get install curl git\n  bash -c \"$(curl -fsSL https://get.docker.com)\"\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n  > OpenMediaVault (OMV) requires [special instructions found here](https://dockstarter.com/advanced/openmediavault/)\n\n- DNF Systems ([Fedora](https://docs.docker.com/install/linux/docker-ce/fedora/#os-requirements))\n\n  ```bash\n  sudo dnf install curl git\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n- Pacman Systems (Arch, Manjaro, EndeavourOS, etc.)\n\n  ```bash\n  sudo pacman -Sy curl docker git\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n- YUM Systems ([CentOS](https://docs.docker.com/install/linux/docker-ce/centos/#os-requirements))\n\n  ```bash\n  sudo yum install curl git\n  bash -c \"$(curl -fsSL https://get.dockstarter.com)\"\n  sudo reboot\n  ```\n\n<details>\n  <summary>Alternate install (any system)</summary>\n\nThe standard install above downloads the initial script using a method with some known risks. For those concerned with the security of the above method, here is an alternative:\n\n```bash\n## NOTE: Run the appropriate command for your distro\nsudo apt-get install curl git\nsudo dnf install curl git\nsudo pacman -Sy curl git\nsudo yum install curl git\n```\n\nThen\n\n```bash\ngit clone https://github.com/GhostWriters/DockSTARTer \"/home/${USER}/.docker\"\nbash /home/\"${USER}\"/.docker/main.sh -vi\nsudo reboot\n```\n\n</details>\n\n### Running DockSTARTer\n\n```bash\nds\n```\n\nTo run DockSTARTer, use the command above. You should now see the main menu from the screenshots. Select `Configuration` and then `Full Setup`, and you will be guided through selecting apps and starting containers.\n\nSee our [documentation](https://dockstarter.com/introduction/) for more detailed information.\n\n## Support\n\n[![Discord chat](https://img.shields.io/discord/477959324183035936.svg?style=flat-square&color=607D8B&logo=discord)](https://dockstarter.com/discord)\n\nClick the chat badge to join us on Discord for support!\n\n[Feature Request](https://github.com/GhostWriters/DockSTARTer/issues/new?template=feature_request.md) | [Bug Report](https://github.com/GhostWriters/DockSTARTer/issues/new?template=bug_report.md)\n\nAdditional information can be found on our [Support Page](https://dockstarter.com/basics/support/).\n\n## Contributing\n\nWant to help develop DockSTARTer? Check out our [contributing guidelines](https://github.com/GhostWriters/DockSTARTer/blob/master/.github/CONTRIBUTING.md) and [code of conduct](https://github.com/GhostWriters/DockSTARTer/blob/master/.github/CODE_OF_CONDUCT.md).\n\n### Contributors\n\n[![GitHub contributors](https://img.shields.io/github/contributors/GhostWriters/DockSTARTer.svg?style=flat-square&color=607D8B)](https://github.com/GhostWriters/DockSTARTer/graphs/contributors)\n\nThis project exists thanks to all the people who contribute.\n[![GitHub contributors](https://opencollective.com/DockSTARTer/contributors.svg?button=false)](https://GitHub.com/GhostWriters/DockSTARTer/graphs/contributors)\n\n## Supporters\n\nSupport the project by donating on [Open Collective](https://opencollective.com/DockSTARTer#donation).\n\n### Backers\n\n[![Backers on Open Collective](https://img.shields.io/opencollective/tier/DockSTARTer/7408.svg?style=flat-square&color=607D8B&label=backers)](https://opencollective.com/DockSTARTer#backer)\n\nThank you to all our backers! [Become a backer](https://opencollective.com/DockSTARTer#backer).\n\n[![Backers on Open Collective](https://opencollective.com/DockSTARTer/tiers/backer.svg)](https://opencollective.com/DockSTARTer#backers)\n\n### Sponsors\n\n[![Sponsors on Open Collective](https://img.shields.io/opencollective/tier/DockSTARTer/7409.svg?style=flat-square&color=607D8B&label=sponsors)](https://opencollective.com/DockSTARTer#sponsor)\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor](https://opencollective.com/DockSTARTer#sponsor).\n\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/0/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/0/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/1/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/1/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/2/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/2/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/3/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/3/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/4/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/4/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/5/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/5/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/6/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/6/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/7/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/7/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/8/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/8/website)\n[![Sponsors on Open Collective](https://opencollective.com/DockSTARTer/tiers/sponsor/9/avatar.svg)](https://opencollective.com/DockSTARTer/tiers/sponsor/9/website)\n\n## Special Thanks\n\n- [SmartHomeBeginner.com](https://www.smarthomebeginner.com) for creating [AtoMiC-ToolKit](https://github.com/htpcBeginner/AtoMiC-ToolKit) that served as this project's primary inspiration, and later [this](https://www.smarthomebeginner.com/docker-home-media-server-2018-basic/) guide that provided some initial direction with Docker.\n- [LinuxServer.io](https://www.linuxserver.io) for maintaining most Docker images used in this project.\n"
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.sh",
          "type": "blob",
          "size": 17.884765625,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\nIFS=$'\\n\\t'\n\nexport LC_ALL=C\n\nusage() {\n    cat << EOF\nUsage: ds [OPTION]\nNOTE: ds shortcut is only available after the first run of\n    bash main.sh\n\nThis is the main DockSTARTer script.\nFor regular usage you can run without providing any options.\n\n-a --add <appname>\n    add the default .env variables for the app specified\n-c --compose\n    run docker compose up with confirmation prompt\n-c --compose <up/down/restart/pull>\n    run docker compose commands without confirmation prompts\n-e --env\n    update your .env file with new variables\n--env-get=<var>\n    get the value of a <var>iable in .env (variable name is forced to UPPER CASE)\n--env-get-lower=<var>\n    get the value of a <var>iable in .env\n--env-set=<var>,<val>\n    Set the <val>ue of a <var>iable in .env (variable name is forced to UPPER CASE)\n--env-set-lower=<var>,<val>\n    Set the <val>ue of a <var>iable in .env\n-f --force\n    force certain install/upgrade actions to run even if they would not be needed\n-h --help\n    show this usage information\n-i --install\n    install/update all dependencies\n-p --prune\n    remove unused docker resources\n-r --remove\n    prompt to remove .env variables for all disabled apps\n-r --remove <appname>\n    prompt to remove the .env variables for the app specified\n-t --test <test_name>\n    run tests to check the program\n-u --update\n    update DockSTARTer to the latest stable commits\n-u --update <branch>\n    update DockSTARTer to the latest commits from the specified branch\n-v --verbose\n    verbose\n-x --debug\n    debug\nEOF\n}\n\n# Script Information\n# https://stackoverflow.com/questions/59895/get-the-source-directory-of-a-bash-script-from-within-the-script-itself/246128#246128\nget_scriptname() {\n    # https://stackoverflow.com/questions/35006457/choosing-between-0-and-bash-source/35006505#35006505\n    local SOURCE=${BASH_SOURCE[0]:-$0}\n    while [[ -L ${SOURCE} ]]; do # resolve ${SOURCE} until the file is no longer a symlink\n        local DIR\n        DIR=$(cd -P \"$(dirname \"${SOURCE}\")\" > /dev/null 2>&1 && pwd)\n        SOURCE=$(readlink \"${SOURCE}\")\n        [[ ${SOURCE} != /* ]] && SOURCE=\"${DIR}/${SOURCE}\" # if ${SOURCE} was a relative symlink, we need to resolve it relative to the path where the symlink file was located\n    done\n    echo \"${SOURCE}\"\n}\nSCRIPTPATH=$(cd -P \"$(dirname \"$(get_scriptname)\")\" > /dev/null 2>&1 && pwd)\nreadonly SCRIPTPATH\nSCRIPTNAME=\"${SCRIPTPATH}/$(basename \"$(get_scriptname)\")\"\nreadonly SCRIPTNAME\n\n# Cleanup Function\ncleanup() {\n    local -ri EXIT_CODE=$?\n    trap - ERR EXIT SIGABRT SIGALRM SIGHUP SIGINT SIGQUIT SIGTERM\n    sudo sh -c \"cat ${MKTEMP_LOG:-/dev/null} >> ${SCRIPTPATH}/dockstarter.log\" || true\n    sudo rm -f \"${MKTEMP_LOG}\" || true\n    sudo sh -c \"echo \\\"$(tail -1000 \"${SCRIPTPATH}/dockstarter.log\")\\\" > ${SCRIPTPATH}/dockstarter.log\" || true\n    sudo -E chmod +x \"${SCRIPTNAME}\" > /dev/null 2>&1 || true\n\n    if [[ ${CI-} == true ]] && [[ ${TRAVIS_SECURE_ENV_VARS-} == false ]]; then\n        echo \"TRAVIS_SECURE_ENV_VARS is false for Pull Requests from remote branches. Please retry failed builds!\"\n    fi\n\n    if [[ ${EXIT_CODE} -ne 0 ]]; then\n        echo \"DockSTARTer did not finish running successfully.\"\n    fi\n\n    exit ${EXIT_CODE}\n}\ntrap 'cleanup' ERR EXIT SIGABRT SIGALRM SIGHUP SIGINT SIGQUIT SIGTERM\n\n# Command Line Arguments\nreadonly ARGS=(\"$@\")\ncmdline() {\n    # http://www.kfirlavi.com/blog/2012/11/14/defensive-bash-programming/\n    # http://kirk.webfinish.com/2009/10/bash-shell-script-to-use-getopts-with-gnu-style-long-positional-parameters/\n    local ARG=\n    local LOCAL_ARGS\n    for ARG; do\n        local DELIM=\"\"\n        case \"${ARG}\" in\n            #translate --gnu-long-options to -g (short options)\n            --add) LOCAL_ARGS=\"${LOCAL_ARGS-}-a \" ;;\n            --compose) LOCAL_ARGS=\"${LOCAL_ARGS-}-c \" ;;\n            --debug) LOCAL_ARGS=\"${LOCAL_ARGS-}-x \" ;;\n            --env) LOCAL_ARGS=\"${LOCAL_ARGS-}-e \" ;;\n            --env-*)\n                readonly ENVMETHOD=${ARG%%=*}\n                readonly ENVARG=${ARG#*=}\n                if [[ ${ENVMETHOD-} == \"${ENVARG-}\" ]]; then\n                    echo \"Invalid usage. Must be on of the following:\"\n                    echo \"  --env-set with variable name ('--env-set=VAR,VAL') and value\"\n                    echo \"  --env-get with variable name ('--env-get=VAR')\"\n                    echo \"  --env-set-lower with variable name ('--env-set-lower=Var,VAL') and value\"\n                    echo \"  --env-get-lower with variable name ('--env-get-lower=Var')\"\n                    exit\n                else\n                    readonly ENVVAR=${ENVARG%%,*}\n                    readonly ENVVAL=${ENVARG#*,}\n                fi\n                ;;\n            --force) LOCAL_ARGS=\"${LOCAL_ARGS-}-f \" ;;\n            --help) LOCAL_ARGS=\"${LOCAL_ARGS-}-h \" ;;\n            --install) LOCAL_ARGS=\"${LOCAL_ARGS-}-i \" ;;\n            --prune) LOCAL_ARGS=\"${LOCAL_ARGS-}-p \" ;;\n            --remove) LOCAL_ARGS=\"${LOCAL_ARGS-}-r \" ;;\n            --test) LOCAL_ARGS=\"${LOCAL_ARGS-}-t \" ;;\n            --update) LOCAL_ARGS=\"${LOCAL_ARGS-}-u \" ;;\n            --verbose) LOCAL_ARGS=\"${LOCAL_ARGS-}-v \" ;;\n            #pass through anything else\n            *)\n                [[ ${ARG:0:1} == \"-\" ]] || DELIM='\"'\n                LOCAL_ARGS=\"${LOCAL_ARGS-}${DELIM}${ARG}${DELIM} \"\n                ;;\n        esac\n    done\n\n    #Reset the positional parameters to the short options\n    eval set -- \"${LOCAL_ARGS-}\"\n\n    while getopts \":a:c:efghipr:t:u:vx\" OPTION; do\n        case ${OPTION} in\n            a)\n                readonly ADD=${OPTARG}\n                ;;\n            c)\n                case ${OPTARG} in\n                    down | generate | merge | pull* | restart* | up*)\n                        local MULTIOPT\n                        MULTIOPT=(\"$OPTARG\")\n                        until [[ $(eval \"echo \\${$OPTIND}\" 2> /dev/null) =~ ^-.* ]] || [[ -z $(eval \"echo \\${$OPTIND}\" 2> /dev/null) ]]; do\n                            MULTIOPT+=(\"$(eval \"echo \\${$OPTIND}\")\")\n                            OPTIND=$((OPTIND + 1))\n                        done\n                        COMPOSE=$(printf \"%s \" \"${MULTIOPT[@]}\" | xargs)\n                        readonly COMPOSE\n                        ;;\n                    *)\n                        echo \"Invalid compose option.\"\n                        exit 1\n                        ;;\n                esac\n                ;;\n            e)\n                readonly ENV=true\n                ;;\n            f)\n                readonly FORCE=true\n                ;;\n            h)\n                usage\n                exit\n                ;;\n            i)\n                readonly INSTALL=true\n                ;;\n            p)\n                readonly PRUNE=true\n                ;;\n            r)\n                readonly REMOVE=${OPTARG}\n                ;;\n            t)\n                readonly TEST=${OPTARG}\n                ;;\n            u)\n                readonly UPDATE=${OPTARG}\n                ;;\n            v)\n                readonly VERBOSE=1\n                ;;\n            x)\n                readonly DEBUG=1\n                set -x\n                ;;\n            :)\n                case ${OPTARG} in\n                    c)\n                        readonly COMPOSE=up\n                        ;;\n                    r)\n                        readonly REMOVE=true\n                        ;;\n                    u)\n                        readonly UPDATE=true\n                        ;;\n                    *)\n                        echo \"${OPTARG} requires an option.\"\n                        exit 1\n                        ;;\n                esac\n                ;;\n            *)\n                usage\n                exit\n                ;;\n        esac\n    done\n    return\n}\ncmdline \"${ARGS[@]-}\"\nif [[ -n ${DEBUG-} ]] && [[ -n ${VERBOSE-} ]]; then\n    readonly TRACE=1\nfi\n\n# Terminal Colors\ndeclare -Agr B=( # Background\n    [B]=$(tput setab 4 2> /dev/null || echo -e \"\\e[44m\") # Blue\n    [C]=$(tput setab 6 2> /dev/null || echo -e \"\\e[46m\") # Cyan\n    [G]=$(tput setab 2 2> /dev/null || echo -e \"\\e[42m\") # Green\n    [K]=$(tput setab 0 2> /dev/null || echo -e \"\\e[40m\") # Black\n    [M]=$(tput setab 5 2> /dev/null || echo -e \"\\e[45m\") # Magenta\n    [R]=$(tput setab 1 2> /dev/null || echo -e \"\\e[41m\") # Red\n    [W]=$(tput setab 7 2> /dev/null || echo -e \"\\e[47m\") # White\n    [Y]=$(tput setab 3 2> /dev/null || echo -e \"\\e[43m\") # Yellow\n)\ndeclare -Agr F=( # Foreground\n    [B]=$(tput setaf 4 2> /dev/null || echo -e \"\\e[34m\") # Blue\n    [C]=$(tput setaf 6 2> /dev/null || echo -e \"\\e[36m\") # Cyan\n    [G]=$(tput setaf 2 2> /dev/null || echo -e \"\\e[32m\") # Green\n    [K]=$(tput setaf 0 2> /dev/null || echo -e \"\\e[30m\") # Black\n    [M]=$(tput setaf 5 2> /dev/null || echo -e \"\\e[35m\") # Magenta\n    [R]=$(tput setaf 1 2> /dev/null || echo -e \"\\e[31m\") # Red\n    [W]=$(tput setaf 7 2> /dev/null || echo -e \"\\e[37m\") # White\n    [Y]=$(tput setaf 3 2> /dev/null || echo -e \"\\e[33m\") # Yellow\n)\nNC=$(tput sgr0 2> /dev/null || echo -e \"\\e[0m\")\nreadonly NC\n\n# Log Functions\nMKTEMP_LOG=$(mktemp) || echo -e \"Failed to create temporary log file.\\nFailing command: ${F[C]}mktemp\"\nreadonly MKTEMP_LOG\necho \"DockSTARTer Log\" > \"${MKTEMP_LOG}\"\nlog() {\n    local TOTERM=${1-}\n    local MESSAGE=${2-}\n    echo -e \"${MESSAGE-}\" | (\n        if [[ -n ${TOTERM} ]]; then\n            tee -a \"${MKTEMP_LOG}\" >&2\n        else\n            cat >> \"${MKTEMP_LOG}\" 2>&1\n        fi\n    )\n}\ntrace() { log \"${TRACE-}\" \"${NC}$(date +\"%F %T\") ${F[B]}[TRACE ]${NC}   $*${NC}\"; }\ndebug() { log \"${DEBUG-}\" \"${NC}$(date +\"%F %T\") ${F[B]}[DEBUG ]${NC}   $*${NC}\"; }\ninfo() { log \"${VERBOSE-}\" \"${NC}$(date +\"%F %T\") ${F[B]}[INFO  ]${NC}   $*${NC}\"; }\nnotice() { log true \"${NC}$(date +\"%F %T\") ${F[G]}[NOTICE]${NC}   $*${NC}\"; }\nwarn() { log true \"${NC}$(date +\"%F %T\") ${F[Y]}[WARN  ]${NC}   $*${NC}\"; }\nerror() { log true \"${NC}$(date +\"%F %T\") ${F[R]}[ERROR ]${NC}   $*${NC}\"; }\nfatal() {\n    log true \"${NC}$(date +\"%F %T\") ${B[R]}${F[W]}[FATAL ]${NC}   $*${NC}\"\n    exit 1\n}\n\n# System Information\nARCH=$(uname -m)\nreadonly ARCH\nexport ARCH\n\n# Environment Information\nreadonly COMPOSE_ENV=\"${SCRIPTPATH}/compose/.env\"\nexport COMPOSE_ENV\n\n# User/Group Information\nreadonly DETECTED_PUID=${SUDO_UID:-$UID}\nexport DETECTED_PUID\nDETECTED_UNAME=$(id -un \"${DETECTED_PUID}\" 2> /dev/null || true)\nreadonly DETECTED_UNAME\nexport DETECTED_UNAME\nDETECTED_PGID=$(id -g \"${DETECTED_PUID}\" 2> /dev/null || true)\nreadonly DETECTED_PGID\nexport DETECTED_PGID\nDETECTED_UGROUP=$(id -gn \"${DETECTED_PUID}\" 2> /dev/null || true)\nreadonly DETECTED_UGROUP\nexport DETECTED_UGROUP\nDETECTED_HOMEDIR=$(eval echo \"~${DETECTED_UNAME}\" 2> /dev/null || true)\nreadonly DETECTED_HOMEDIR\nexport DETECTED_HOMEDIR\n\n# Check for supported CPU architecture\ncheck_arch() {\n    if [[ ${ARCH} != \"aarch64\" ]] && [[ ${ARCH} != \"x86_64\" ]]; then\n        fatal \"Unsupported architecture.\"\n    fi\n}\n\n# Check if the repo exists relative to the SCRIPTPATH\ncheck_repo() {\n    if [[ -d ${SCRIPTPATH}/.git ]] && [[ -d ${SCRIPTPATH}/.scripts ]]; then\n        return\n    else\n        return 1\n    fi\n}\n\n# Check if running as root\ncheck_root() {\n    if [[ ${DETECTED_PUID} == \"0\" ]] || [[ ${DETECTED_HOMEDIR} == \"/root\" ]]; then\n        fatal \"Running as root is not supported. Please run as a standard user with sudo.\"\n    fi\n}\n\n# Check if running with sudo\ncheck_sudo() {\n    if [[ ${EUID} -eq 0 ]]; then\n        fatal \"Running with sudo is not supported. Commands requiring sudo will prompt automatically when required.\"\n    fi\n}\n\n# Script Runner Function\nrun_script() {\n    local SCRIPTSNAME=${1-}\n    shift\n    if [[ -f ${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh ]]; then\n        # shellcheck source=/dev/null\n        source \"${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh\"\n        ${SCRIPTSNAME} \"$@\" < /dev/null\n    else\n        fatal \"${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh not found.\"\n    fi\n}\n\n# Test Runner Function\nrun_test() {\n    local SCRIPTSNAME=${1-}\n    shift\n    local TESTSNAME=\"test_${SCRIPTSNAME}\"\n    if [[ -f ${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh ]]; then\n        if grep -q -P \"${TESTSNAME}\" \"${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh\"; then\n            notice \"Testing ${SCRIPTSNAME}.\"\n            # shellcheck source=/dev/null\n            source \"${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh\"\n            \"${TESTSNAME}\" \"$@\" < /dev/null || fatal \"Failed to run ${TESTSNAME}.\"\n            notice \"Completed testing ${TESTSNAME}.\"\n        else\n            fatal \"Test function in ${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh not found.\"\n        fi\n    else\n        fatal \"${SCRIPTPATH}/.scripts/${SCRIPTSNAME}.sh not found.\"\n    fi\n}\n\n# Version Functions\n# https://stackoverflow.com/questions/4023830/how-to-compare-two-strings-in-dot-separated-version-format-in-bash#comment92693604_4024263\nvergte() { printf '%s\\n%s' \"${2}\" \"${1}\" | sort -C -V; }\nvergt() { ! vergte \"${2}\" \"${1}\"; }\nverlte() { printf '%s\\n%s' \"${1}\" \"${2}\" | sort -C -V; }\nverlt() { ! verlte \"${2}\" \"${1}\"; }\n\n# Github Token for CI\nif [[ ${CI-} == true ]] && [[ ${TRAVIS_SECURE_ENV_VARS-} == true ]]; then\n    readonly GH_HEADER=\"Authorization: token ${GH_TOKEN}\"\n    export GH_HEADER\nfi\n\n# Main Function\nmain() {\n    check_arch\n    # Terminal Check\n    if [[ -t 1 ]]; then\n        check_root\n        check_sudo\n    fi\n    # Repo Check\n    local PROMPT\n    if [[ ${FORCE-} == true ]]; then\n        PROMPT=\"FORCE\"\n    fi\n    local DS_COMMAND\n    DS_COMMAND=$(command -v ds || true)\n    if [[ -L ${DS_COMMAND} ]]; then\n        local DS_SYMLINK\n        DS_SYMLINK=$(readlink -f \"${DS_COMMAND}\")\n        if [[ ${SCRIPTNAME} != \"${DS_SYMLINK}\" ]]; then\n            if check_repo; then\n                if run_script 'question_prompt' \"${PROMPT:-CLI}\" N \"DockSTARTer installation found at ${DS_SYMLINK} location. Would you like to run ${SCRIPTNAME} instead?\"; then\n                    run_script 'symlink_ds'\n                    DS_COMMAND=$(command -v ds || true)\n                    DS_SYMLINK=$(readlink -f \"${DS_COMMAND}\")\n                fi\n            fi\n            warn \"Attempting to run DockSTARTer from ${DS_SYMLINK} location.\"\n            bash \"${DS_SYMLINK}\" -vu\n            bash \"${DS_SYMLINK}\" -vi\n            exec bash \"${DS_SYMLINK}\" \"${ARGS[@]-}\"\n        fi\n    else\n        if ! check_repo; then\n            warn \"Attempting to clone DockSTARTer repo to ${DETECTED_HOMEDIR}/.docker location.\"\n            git clone https://github.com/GhostWriters/DockSTARTer \"${DETECTED_HOMEDIR}/.docker\" || fatal \"Failed to clone DockSTARTer repo.\\nFailing command: ${F[C]}git clone https://github.com/GhostWriters/DockSTARTer \\\"${DETECTED_HOMEDIR}/.docker\\\"\"\n            notice \"Performing first run install.\"\n            exec bash \"${DETECTED_HOMEDIR}/.docker/main.sh\" \"-vi\"\n        fi\n    fi\n    # Create Symlink\n    run_script 'symlink_ds'\n    # Execute CLI Argument Functions\n    if [[ -n ${ADD-} ]]; then\n        run_script 'appvars_create' \"${ADD}\"\n        run_script 'env_update'\n        exit\n    fi\n    if [[ -n ${COMPOSE-} ]]; then\n        case ${COMPOSE} in\n            down)\n                run_script 'docker_compose' \"${COMPOSE}\"\n                ;;\n            generate | merge)\n                run_script 'yml_merge'\n                ;;\n            pull* | restart* | up*)\n                run_script 'yml_merge'\n                run_script 'docker_compose' \"${COMPOSE}\"\n                ;;\n            *)\n                fatal \"Invalid compose option.\"\n                ;;\n        esac\n        exit\n    fi\n    if [[ -n ${ENV-} ]]; then\n        run_script 'appvars_create_all'\n        run_script 'env_update'\n        exit\n    fi\n    if [[ -n ${ENVMETHOD-} ]]; then\n        case \"${ENVMETHOD-}\" in\n            --env-get)\n                if [[ ${ENVVAR-} != \"\" ]]; then\n                    run_script 'env_get' \"${ENVVAR^^}\"\n                else\n                    echo \"Invalid usage. Must be\"\n                    echo \"  --env-get with variable name ('--env-get=VAR')\"\n                    echo \"  Variable name will be forced to UPPER CASE\"\n                fi\n                ;;\n            --env-set)\n                if [[ ${ENVVAR-} != \"\" ]] && [[ ${ENVVAL-} != \"\" ]]; then\n                    run_script 'env_set' \"${ENVVAR^^}\" \"${ENVVAL}\"\n                else\n                    echo \"Invalid usage. Must be\"\n                    echo \"  --env-set with variable name and value ('--env-set=VAR,VAL')\"\n                    echo \"  Variable name will be forced to UPPER CASE\"\n                fi\n                ;;\n            --env-get-lower)\n                if [[ ${ENVVAR-} != \"\" ]]; then\n                    run_script 'env_get' \"${ENVVAR}\"\n                else\n                    echo \"Invalid usage. Must be\"\n                    echo \"  --env-get-lower with variable name ('--env-get-lower=Var')\"\n                    echo \"  Variable name can be Mixed Case\"\n                fi\n                ;;\n            --env-set-lower)\n                if [[ ${ENVVAR-} != \"\" ]] && [[ ${ENVVAL-} != \"\" ]]; then\n                    run_script 'env_set' \"${ENVVAR}\" \"${ENVVAL}\"\n                else\n                    echo \"Invalid usage. Must be\"\n                    echo \"  --env-set-lower with variable name and value ('--env-set-lower=Var,VAL')\"\n                    echo \"  Variable name can be Mixed Case\"\n                fi\n                ;;\n            *)\n                echo \"Invalid option: '${ENVMETHOD-}'\"\n                ;;\n        esac\n        exit\n    fi\n    if [[ -n ${INSTALL-} ]]; then\n        run_script 'run_install'\n        exit\n    fi\n    if [[ -n ${PRUNE-} ]]; then\n        run_script 'docker_prune'\n        exit\n    fi\n    if [[ -n ${REMOVE-} ]]; then\n        if [[ ${REMOVE} == true ]]; then\n            run_script 'appvars_purge_all'\n            run_script 'env_update'\n        else\n            run_script 'appvars_purge' \"${REMOVE}\"\n            run_script 'env_update'\n        fi\n        exit\n    fi\n    if [[ -n ${TEST-} ]]; then\n        run_test \"${TEST}\"\n        exit\n    fi\n    if [[ -n ${UPDATE-} ]]; then\n        if [[ ${UPDATE} == true ]]; then\n            run_script 'update_self'\n        else\n            run_script 'update_self' \"${UPDATE}\"\n        fi\n        exit\n    fi\n    # Run Menus\n    PROMPT=\"GUI\"\n    run_script 'menu_main'\n}\nmain\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 7.7080078125,
          "content": "site_name: DockSTARTer\nsite_url: https://dockstarter.com\nsite_author: GhostWriters\nsite_description: DockSTARTer helps you get started with home server apps running in Docker.\n\nrepo_name: GhostWriters/DockSTARTer\nrepo_url: https://github.com/GhostWriters/DockSTARTer\n\ncopyright: Copyright &copy; 2023 GhostWriters\n\ntheme:\n  name: material\n  features:\n    - content.action.edit\n    - content.code.copy\n    - navigation.footer\n    - navigation.instant\n    - navigation.top\n    - navigation.tracking\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n  palette:\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: blue grey\n      accent: indigo\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: blue grey\n      accent: indigo\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n  favicon: assets/favicon.ico\n  logo: assets/icon.png\n\nextra:\n  analytics:\n    provider: google\n    property: G-QVNLHE95FS\n  social:\n    - icon: fontawesome/brands/discord\n      link: https://dockstarter.com/discord\n    - icon: fontawesome/brands/github\n      link: https://github.com/GhostWriters/DockSTARTer\n\nextra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n\nmarkdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.escapeall\n  - pymdownx.extra\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n  - tables\n  - toc:\n      permalink: true\n\nplugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n  - minify:\n      minify_html: true\n  - redirects:\n      redirect_maps:\n        advanced/overrides.md: https://dockstarter.com/overrides/introduction/\n        apps/hydra2.md: https://dockstarter.com/apps/nzbhydra2/\n        apps/letsencrypt.md: https://dockstarter.com/apps/swag/\n        apps/minecraft_bedrock_server.md: https://dockstarter.com/apps/minecraftbedrockserver/\n        apps/minecraft_server.md: https://dockstarter.com/apps/minecraftserver/\n        apps/mylar.md: https://dockstarter.com/apps/mylar3/\n        apps/plexrequests.md: https://dockstarter.com/apps/ombi/\n        apps/sickrage.md: https://dockstarter.com/apps/sickchill/\n        apps/ttrss.md: https://dockstarter.com/apps/freshrss/\n        apps/unifi.md: https://dockstarter.com/apps/unificontroller/\n        apps/vaultwarden.md: https://dockstarter.com/apps/bitwarden/\n        discord.md: https://discord.gg/xR3cyUb\n        overrides/fireflyiii.md: https://dockstarter.com/apps/fireflyiii/\n        overrides/kitana.md: https://dockstarter.com/apps/kitana/\n        overrides/overseerr.md: https://dockstarter.com/apps/overseerr/\n        overrides/petio.md: https://dockstarter.com/apps/petio/\n        overrides/requestrr.md: https://dockstarter.com/apps/requestrr/\n  - search\n\nnav:\n  - Home: index.md\n  - introduction.md\n  - Basics:\n      - basics/available-apps.md\n      - basics/command-line-usage.md\n      - basics/env-var-info.md\n      - basics/faq.md\n      - basics/migration.md\n      - basics/port-conflicts.md\n      - basics/support.md\n  - Advanced:\n      - advanced/backups.md\n      - advanced/domain-info.md\n      - advanced/macvlan.md\n      - advanced/openmediavault.md\n      - advanced/smb-mounting.md\n      - advanced/technical-info.md\n      - advanced/uninstall.md\n      - advanced/vpn-info.md\n  - App Specifics:\n      - apps/adguard.md\n      - apps/adminer.md\n      - apps/airsonicadvanced.md\n      - apps/amd.md\n      - apps/apcupsd.md\n      - apps/apprise.md\n      - apps/audiobookshelf.md\n      - apps/autobrr.md\n      - apps/azuracast.md\n      - apps/bazarr.md\n      - apps/beets.md\n      - apps/bitwarden.md\n      - apps/booksonicair.md\n      - apps/bookstack.md\n      - apps/calibre.md\n      - apps/calibreweb.md\n      - apps/cloudcmd.md\n      - apps/cloudflareddns.md\n      - apps/codeserver.md\n      - apps/dasshio.md\n      - apps/ddclient.md\n      - apps/deemix.md\n      - apps/deluge.md\n      - apps/delugevpn.md\n      - apps/doplarr.md\n      - apps/dozzle.md\n      - apps/duckdns.md\n      - apps/duplicacy.md\n      - apps/duplicati.md\n      - apps/emby.md\n      - apps/fail2ban.md\n      - apps/filebot.md\n      - apps/filebrowser.md\n      - apps/fireflyiii.md\n      - apps/flame.md\n      - apps/flaresolverr.md\n      - apps/freshrss.md\n      - apps/gitea.md\n      - apps/glances.md\n      - apps/gluetun.md\n      - apps/goaccess.md\n      - apps/grafana.md\n      - apps/grocy.md\n      - apps/guacamole.md\n      - apps/h5ai.md\n      - apps/handbrake.md\n      - apps/headphones.md\n      - apps/heimdall.md\n      - apps/homeassistant.md\n      - apps/homebridge.md\n      - apps/homepage.md\n      - apps/homer.md\n      - apps/htpcmanager.md\n      - apps/httpserver.md\n      - apps/huginn.md\n      - apps/influxdb.md\n      - apps/jackett.md\n      - apps/jellyfin.md\n      - apps/jellyseerr.md\n      - apps/jfago.md\n      - apps/kanboard.md\n      - apps/kitana.md\n      - apps/kiwixserve.md\n      - apps/komga.md\n      - apps/lazylibrarian.md\n      - apps/ldapauth.md\n      - apps/librespeed.md\n      - apps/lidarr.md\n      - apps/limnoria.md\n      - apps/logarr.md\n      - apps/logitechmediaserver.md\n      - apps/makemkv.md\n      - apps/mariadb.md\n      - apps/medusa.md\n      - apps/minecraftbedrockserver.md\n      - apps/minecraftserver.md\n      - apps/monitorr.md\n      - apps/mosquitto.md\n      - apps/moviematch.md\n      - apps/murmur.md\n      - apps/mylar3.md\n      - apps/netdata.md\n      - apps/nextcloud.md\n      - apps/nodered.md\n      - apps/nzbget.md\n      - apps/nzbgetvpn.md\n      - apps/nzbhydra2.md\n      - apps/omadacontroller.md\n      - apps/ombi.md\n      - apps/openldap.md\n      - apps/openspeedtest.md\n      - apps/openvpnas.md\n      - apps/organizr.md\n      - apps/overseerr.md\n      - apps/petio.md\n      - apps/pgadmin.md\n      - apps/pgbackup.md\n      - apps/photostructure.md\n      - apps/phpmyadmin.md\n      - apps/picard.md\n      - apps/pihole.md\n      - apps/piwigo.md\n      - apps/plex.md\n      - apps/plexanisync.md\n      - apps/portainer.md\n      - apps/portaineragent.md\n      - apps/postgres.md\n      - apps/privoxyvpn.md\n      - apps/prometheus.md\n      - apps/prowlarr.md\n      - apps/pyload.md\n      - apps/qbittorrent.md\n      - apps/qbittorrentvpn.md\n      - apps/quasselcore.md\n      - apps/quasselweb.md\n      - apps/radarr.md\n      - apps/readarr.md\n      - apps/recyclarr.md\n      - apps/requestrr.md\n      - apps/resiliosync.md\n      - apps/rsnapshot.md\n      - apps/rustdesk.md\n      - apps/rutorrent.md\n      - apps/sabnzbd.md\n      - apps/sabnzbdvpn.md\n      - apps/sickchill.md\n      - apps/smokeping.md\n      - apps/sonarr.md\n      - apps/speedtest.md\n      - apps/swag.md\n      - apps/synclounge.md\n      - apps/syncthing.md\n      - apps/tandoor.md\n      - apps/tautulli.md\n      - apps/tdarr.md\n      - apps/tdarrnode.md\n      - apps/telegraf.md\n      - apps/thelounge.md\n      - apps/timemachine.md\n      - apps/traefik.md\n      - apps/traktarr.md\n      - apps/transmission.md\n      - apps/transmissionvpn.md\n      - apps/tvheadend.md\n      - apps/ubooquity.md\n      - apps/unificontroller.md\n      - apps/unmanic.md\n      - apps/unpackerr.md\n      - apps/uptimekuma.md\n      - apps/varken.md\n      - apps/vsftpd.md\n      - apps/watchtower.md\n      - apps/wireguard.md\n      - apps/xbackbone.md\n      - apps/xteve.md\n      - apps/yacht.md\n      - apps/youtubedl.md\n      - apps/znc.md\n  - Overrides:\n      - overrides/introduction.md\n      - overrides/autoscan.md\n      - overrides/bw_plex.md\n      - overrides/conreq.md\n      - overrides/dashmachine.md\n      - overrides/nginxproxymanager.md\n      - overrides/plpp.md\n      - overrides/yacreader.md\n"
        }
      ]
    }
  ]
}