{
  "metadata": {
    "timestamp": 1736568673828,
    "page": 747,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kevinSuttle/macOS-Defaults",
      "stars": 1291,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".macos",
          "type": "blob",
          "size": 41.927734375,
          "content": "#!/usr/bin/env bash\n\n# ~/.macos — https://mths.be/macos\n\n# Close any open System Preferences panes, to prevent them from overriding\n# settings we’re about to change\nosascript -e 'tell application \"System Preferences\" to quit'\n\n# Ask for the administrator password upfront\nsudo -v\n\n# Keep-alive: update existing `sudo` time stamp until `.macos` has finished\nwhile true; do sudo -n true; sleep 60; kill -0 \"$$\" || exit; done 2>/dev/null &\n\n###############################################################################\n# General UI/UX                                                               #\n###############################################################################\n\n# Set computer name (as done via System Preferences → Sharing)\n#sudo scutil --set ComputerName \"0x6D746873\"\n#sudo scutil --set HostName \"0x6D746873\"\n#sudo scutil --set LocalHostName \"0x6D746873\"\n#sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string \"0x6D746873\"\n\n# Disable the sound effects on boot\nsudo nvram SystemAudioVolume=\" \"\n\n# Disable transparency in the menu bar and elsewhere on Yosemite\ndefaults write com.apple.universalaccess reduceTransparency -bool true\n\n# Set highlight color to green\ndefaults write NSGlobalDomain AppleHighlightColor -string \"0.764700 0.976500 0.568600\"\n\n# Set sidebar icon size to medium\ndefaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2\n\n# Always show scrollbars\ndefaults write NSGlobalDomain AppleShowScrollBars -string \"Always\"\n# Possible values: `WhenScrolling`, `Automatic` and `Always`\n\n# Disable the over-the-top focus ring animation\ndefaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false\n\n# Disable smooth scrolling\n# (Uncomment if you’re on an older Mac that messes up the animation)\n#defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false\n\n# Increase window resize speed for Cocoa applications\ndefaults write NSGlobalDomain NSWindowResizeTime -float 0.001\n\n# Expand save panel by default\ndefaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true\ndefaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true\n\n# Expand print panel by default\ndefaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true\ndefaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true\n\n# Save to disk (not to iCloud) by default\ndefaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false\n\n# Automatically quit printer app once the print jobs complete\ndefaults write com.apple.print.PrintingPrefs \"Quit When Finished\" -bool true\n\n# Disable the “Are you sure you want to open this application?” dialog\ndefaults write com.apple.LaunchServices LSQuarantine -bool false\n\n# Remove duplicates in the “Open With” menu (also see `lscleanup` alias)\n/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user\n\n# Display ASCII control characters using caret notation in standard text views\n# Try e.g. `cd /tmp; unidecode \"\\x{0000}\" > cc.txt; open -e cc.txt`\ndefaults write NSGlobalDomain NSTextShowsControlCharacters -bool true\n\n# Disable Resume system-wide\ndefaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false\n\n# Disable automatic termination of inactive apps\ndefaults write NSGlobalDomain NSDisableAutomaticTermination -bool true\n\n# Disable the crash reporter\n#defaults write com.apple.CrashReporter DialogType -string \"none\"\n\n# Set Help Viewer windows to non-floating mode\ndefaults write com.apple.helpviewer DevMode -bool true\n\n# Fix for the ancient UTF-8 bug in QuickLook (https://mths.be/bbo)\n# Commented out, as this is known to cause problems in various Adobe apps :(\n# See https://github.com/mathiasbynens/dotfiles/issues/237\n#echo \"0x08000100:0\" > ~/.CFUserTextEncoding\n\n# Reveal IP address, hostname, OS version, etc. when clicking the clock\n# in the login window\nsudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName\n\n# Disable Notification Center and remove the menu bar icon\nlaunchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null\n\n# Disable automatic capitalization as it’s annoying when typing code\ndefaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false\n\n# Disable smart dashes as they’re annoying when typing code\ndefaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false\n\n# Disable automatic period substitution as it’s annoying when typing code\ndefaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false\n\n# Disable smart quotes as they’re annoying when typing code\ndefaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false\n\n# Disable auto-correct\ndefaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false\n\n# Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and\n# all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.\n#rm -rf ~/Library/Application Support/Dock/desktoppicture.db\n#sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg\n#sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg\n\n###############################################################################\n# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #\n###############################################################################\n\n# Trackpad: enable tap to click for this user and for the login screen\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\ndefaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\n\n# Trackpad: map bottom right corner to right-click\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1\ndefaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true\n\n# Disable “natural” (Lion-style) scrolling\ndefaults write NSGlobalDomain com.apple.swipescrolldirection -bool false\n\n# Increase sound quality for Bluetooth headphones/headsets\ndefaults write com.apple.BluetoothAudioAgent \"Apple Bitpool Min (editable)\" -int 40\n\n# Enable full keyboard access for all controls\n# (e.g. enable Tab in modal dialogs)\ndefaults write NSGlobalDomain AppleKeyboardUIMode -int 3\n\n# Use scroll gesture with the Ctrl (^) modifier key to zoom\ndefaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true\ndefaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144\n# Follow the keyboard focus while zoomed in\ndefaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true\n\n# Disable press-and-hold for keys in favor of key repeat\ndefaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false\n\n# Set a blazingly fast keyboard repeat rate\ndefaults write NSGlobalDomain KeyRepeat -int 1\ndefaults write NSGlobalDomain InitialKeyRepeat -int 10\n\n# Set language and text formats\n# Note: if you’re in the US, replace `EUR` with `USD`, `Centimeters` with\n# `Inches`, `en_GB` with `en_US`, and `true` with `false`.\ndefaults write NSGlobalDomain AppleLanguages -array \"en\" \"nl\"\ndefaults write NSGlobalDomain AppleLocale -string \"en_GB@currency=EUR\"\ndefaults write NSGlobalDomain AppleMeasurementUnits -string \"Centimeters\"\ndefaults write NSGlobalDomain AppleMetricUnits -bool true\n\n# Show language menu in the top right corner of the boot screen\nsudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool true\n\n# Set the timezone; see `sudo systemsetup -listtimezones` for other values\nsudo systemsetup -settimezone \"Europe/Brussels\" > /dev/null\n\n# Stop iTunes from responding to the keyboard media keys\n#launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null\n\n###############################################################################\n# Energy saving                                                               #\n###############################################################################\n\n# Enable lid wakeup\nsudo pmset -a lidwake 1\n\n# Restart automatically on power loss\nsudo pmset -a autorestart 1\n\n# Restart automatically if the computer freezes\nsudo systemsetup -setrestartfreeze on\n\n# Sleep the display after 15 minutes\nsudo pmset -a displaysleep 15\n\n# Disable machine sleep while charging\nsudo pmset -c sleep 0\n\n# Set machine sleep to 5 minutes on battery\nsudo pmset -b sleep 5\n\n# Set standby delay to 24 hours (default is 1 hour)\nsudo pmset -a standbydelay 86400\n\n# Never go into computer sleep mode\nsudo systemsetup -setcomputersleep Off > /dev/null\n\n# Hibernation mode\n# 0: Disable hibernation (speeds up entering sleep mode)\n# 3: Copy RAM to disk so the system state can still be restored in case of a\n#    power failure.\nsudo pmset -a hibernatemode 0\n\n# Remove the sleep image file to save disk space\nsudo rm /private/var/vm/sleepimage\n# Create a zero-byte file instead…\nsudo touch /private/var/vm/sleepimage\n# …and make sure it can’t be rewritten\nsudo chflags uchg /private/var/vm/sleepimage\n\n###############################################################################\n# Screen                                                                      #\n###############################################################################\n\n# Require password immediately after sleep or screen saver begins\ndefaults write com.apple.screensaver askForPassword -int 1\ndefaults write com.apple.screensaver askForPasswordDelay -int 0\n\n# Save screenshots to the desktop\ndefaults write com.apple.screencapture location -string \"${HOME}/Desktop\"\n\n# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)\ndefaults write com.apple.screencapture type -string \"png\"\n\n# Disable shadow in screenshots\ndefaults write com.apple.screencapture disable-shadow -bool true\n\n# Enable subpixel font rendering on non-Apple LCDs\n# Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501\ndefaults write NSGlobalDomain AppleFontSmoothing -int 1\n\n# Enable HiDPI display modes (requires restart)\nsudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true\n\n###############################################################################\n# Finder                                                                      #\n###############################################################################\n\n# Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons\ndefaults write com.apple.finder QuitMenuItem -bool true\n\n# Finder: disable window animations and Get Info animations\ndefaults write com.apple.finder DisableAllAnimations -bool true\n\n# Set Desktop as the default location for new Finder windows\n# For other paths, use `PfLo` and `file:///full/path/here/`\ndefaults write com.apple.finder NewWindowTarget -string \"PfDe\"\ndefaults write com.apple.finder NewWindowTargetPath -string \"file://${HOME}/Desktop/\"\n\n# Show icons for hard drives, servers, and removable media on the desktop\ndefaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true\ndefaults write com.apple.finder ShowHardDrivesOnDesktop -bool true\ndefaults write com.apple.finder ShowMountedServersOnDesktop -bool true\ndefaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true\n\n# Finder: show hidden files by default\n#defaults write com.apple.finder AppleShowAllFiles -bool true\n\n# Finder: show all filename extensions\ndefaults write NSGlobalDomain AppleShowAllExtensions -bool true\n\n# Finder: show status bar\ndefaults write com.apple.finder ShowStatusBar -bool true\n\n# Finder: show path bar\ndefaults write com.apple.finder ShowPathbar -bool true\n\n# Display full POSIX path as Finder window title\ndefaults write com.apple.finder _FXShowPosixPathInTitle -bool true\n\n# Keep folders on top when sorting by name\ndefaults write com.apple.finder _FXSortFoldersFirst -bool true\n\n# When performing a search, search the current folder by default\ndefaults write com.apple.finder FXDefaultSearchScope -string \"SCcf\"\n\n# Disable the warning when changing a file extension\ndefaults write com.apple.finder FXEnableExtensionChangeWarning -bool false\n\n# Enable spring loading for directories\ndefaults write NSGlobalDomain com.apple.springing.enabled -bool true\n\n# Remove the spring loading delay for directories\ndefaults write NSGlobalDomain com.apple.springing.delay -float 0\n\n# Avoid creating .DS_Store files on network or USB volumes\ndefaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true\ndefaults write com.apple.desktopservices DSDontWriteUSBStores -bool true\n\n# Disable disk image verification\ndefaults write com.apple.frameworks.diskimages skip-verify -bool true\ndefaults write com.apple.frameworks.diskimages skip-verify-locked -bool true\ndefaults write com.apple.frameworks.diskimages skip-verify-remote -bool true\n\n# Automatically open a new Finder window when a volume is mounted\ndefaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true\ndefaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true\ndefaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true\n\n# Show item info near icons on the desktop and in other icon views\n/usr/libexec/PlistBuddy -c \"Set :DesktopViewSettings:IconViewSettings:showItemInfo true\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :StandardViewSettings:IconViewSettings:showItemInfo true\" ~/Library/Preferences/com.apple.finder.plist\n\n# Show item info to the right of the icons on the desktop\n/usr/libexec/PlistBuddy -c \"Set DesktopViewSettings:IconViewSettings:labelOnBottom false\" ~/Library/Preferences/com.apple.finder.plist\n\n# Enable snap-to-grid for icons on the desktop and in other icon views\n/usr/libexec/PlistBuddy -c \"Set :DesktopViewSettings:IconViewSettings:arrangeBy grid\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :StandardViewSettings:IconViewSettings:arrangeBy grid\" ~/Library/Preferences/com.apple.finder.plist\n\n# Increase grid spacing for icons on the desktop and in other icon views\n/usr/libexec/PlistBuddy -c \"Set :DesktopViewSettings:IconViewSettings:gridSpacing 100\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :StandardViewSettings:IconViewSettings:gridSpacing 100\" ~/Library/Preferences/com.apple.finder.plist\n\n# Increase the size of icons on the desktop and in other icon views\n/usr/libexec/PlistBuddy -c \"Set :DesktopViewSettings:IconViewSettings:iconSize 80\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :FK_StandardViewSettings:IconViewSettings:iconSize 80\" ~/Library/Preferences/com.apple.finder.plist\n/usr/libexec/PlistBuddy -c \"Set :StandardViewSettings:IconViewSettings:iconSize 80\" ~/Library/Preferences/com.apple.finder.plist\n\n# Use list view in all Finder windows by default\n# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`\ndefaults write com.apple.finder FXPreferredViewStyle -string \"Nlsv\"\n\n# Disable the warning before emptying the Trash\ndefaults write com.apple.finder WarnOnEmptyTrash -bool false\n\n# Enable AirDrop over Ethernet and on unsupported Macs running Lion\ndefaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true\n\n# Show the ~/Library folder\nchflags nohidden ~/Library\n\n# Show the /Volumes folder\nsudo chflags nohidden /Volumes\n\n# Remove Dropbox’s green checkmark icons in Finder\nfile=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns\n[ -e \"${file}\" ] && mv -f \"${file}\" \"${file}.bak\"\n\n# Expand the following File Info panes:\n# “General”, “Open with”, and “Sharing & Permissions”\ndefaults write com.apple.finder FXInfoPanesExpanded -dict \\\n\tGeneral -bool true \\\n\tOpenWith -bool true \\\n\tPrivileges -bool true\n\n###############################################################################\n# Dock, Dashboard, and hot corners                                            #\n###############################################################################\n\n# Enable highlight hover effect for the grid view of a stack (Dock)\ndefaults write com.apple.dock mouse-over-hilite-stack -bool true\n\n# Set the icon size of Dock items to 36 pixels\ndefaults write com.apple.dock tilesize -int 36\n\n# Change minimize/maximize window effect\ndefaults write com.apple.dock mineffect -string \"scale\"\n\n# Minimize windows into their application’s icon\ndefaults write com.apple.dock minimize-to-application -bool true\n\n# Enable spring loading for all Dock items\ndefaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true\n\n# Show indicator lights for open applications in the Dock\ndefaults write com.apple.dock show-process-indicators -bool true\n\n# Wipe all (default) app icons from the Dock\n# This is only really useful when setting up a new Mac, or if you don’t use\n# the Dock to launch apps.\n#defaults write com.apple.dock persistent-apps -array\n\n# Show only open applications in the Dock\n#defaults write com.apple.dock static-only -bool true\n\n# Don’t animate opening applications from the Dock\ndefaults write com.apple.dock launchanim -bool false\n\n# Speed up Mission Control animations\ndefaults write com.apple.dock expose-animation-duration -float 0.1\n\n# Don’t group windows by application in Mission Control\n# (i.e. use the old Exposé behavior instead)\ndefaults write com.apple.dock expose-group-by-app -bool false\n\n# Disable Dashboard\ndefaults write com.apple.dashboard mcx-disabled -bool true\n\n# Don’t show Dashboard as a Space\ndefaults write com.apple.dock dashboard-in-overlay -bool true\n\n# Don’t automatically rearrange Spaces based on most recent use\ndefaults write com.apple.dock mru-spaces -bool false\n\n# Remove the auto-hiding Dock delay\ndefaults write com.apple.dock autohide-delay -float 0\n# Remove the animation when hiding/showing the Dock\ndefaults write com.apple.dock autohide-time-modifier -float 0\n\n# Automatically hide and show the Dock\ndefaults write com.apple.dock autohide -bool true\n\n# Make Dock icons of hidden applications translucent\ndefaults write com.apple.dock showhidden -bool true\n\n# Don’t show recent applications in Dock\ndefaults write com.apple.dock show-recents -bool false\n\n# Disable the Launchpad gesture (pinch with thumb and three fingers)\n#defaults write com.apple.dock showLaunchpadGestureEnabled -int 0\n\n# Reset Launchpad, but keep the desktop wallpaper intact\nfind \"${HOME}/Library/Application Support/Dock\" -name \"*-*.db\" -maxdepth 1 -delete\n\n# Add iOS & Watch Simulator to Launchpad\nsudo ln -sf \"/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app\" \"/Applications/Simulator.app\"\nsudo ln -sf \"/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app\" \"/Applications/Simulator (Watch).app\"\n\n# Add a spacer to the left side of the Dock (where the applications are)\n#defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type=\"spacer-tile\";}'\n# Add a spacer to the right side of the Dock (where the Trash is)\n#defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type=\"spacer-tile\";}'\n\n# Hot corners\n# Possible values:\n#  0: no-op\n#  2: Mission Control\n#  3: Show application windows\n#  4: Desktop\n#  5: Start screen saver\n#  6: Disable screen saver\n#  7: Dashboard\n# 10: Put display to sleep\n# 11: Launchpad\n# 12: Notification Center\n# 13: Lock Screen\n# Top left screen corner → Mission Control\ndefaults write com.apple.dock wvous-tl-corner -int 2\ndefaults write com.apple.dock wvous-tl-modifier -int 0\n# Top right screen corner → Desktop\ndefaults write com.apple.dock wvous-tr-corner -int 4\ndefaults write com.apple.dock wvous-tr-modifier -int 0\n# Bottom left screen corner → Start screen saver\ndefaults write com.apple.dock wvous-bl-corner -int 5\ndefaults write com.apple.dock wvous-bl-modifier -int 0\n\n###############################################################################\n# Safari & WebKit                                                             #\n###############################################################################\n\n# Privacy: don’t send search queries to Apple\ndefaults write com.apple.Safari UniversalSearchEnabled -bool false\ndefaults write com.apple.Safari SuppressSearchSuggestions -bool true\n\n# Press Tab to highlight each item on a web page\ndefaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true\n\n# Show the full URL in the address bar (note: this still hides the scheme)\ndefaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true\n\n# Set Safari’s home page to `about:blank` for faster loading\ndefaults write com.apple.Safari HomePage -string \"about:blank\"\n\n# Prevent Safari from opening ‘safe’ files automatically after downloading\ndefaults write com.apple.Safari AutoOpenSafeDownloads -bool false\n\n# Allow hitting the Backspace key to go to the previous page in history\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true\n\n# Hide Safari’s bookmarks bar by default\ndefaults write com.apple.Safari ShowFavoritesBar -bool false\n\n# Hide Safari’s sidebar in Top Sites\ndefaults write com.apple.Safari ShowSidebarInTopSites -bool false\n\n# Disable Safari’s thumbnail cache for History and Top Sites\ndefaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2\n\n# Enable Safari’s debug menu\ndefaults write com.apple.Safari IncludeInternalDebugMenu -bool true\n\n# Make Safari’s search banners default to Contains instead of Starts With\ndefaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false\n\n# Remove useless icons from Safari’s bookmarks bar\ndefaults write com.apple.Safari ProxiesInBookmarksBar \"()\"\n\n# Enable the Develop menu and the Web Inspector in Safari\ndefaults write com.apple.Safari IncludeDevelopMenu -bool true\ndefaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true\n\n# Add a context menu item for showing the Web Inspector in web views\ndefaults write NSGlobalDomain WebKitDeveloperExtras -bool true\n\n# Enable continuous spellchecking\ndefaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true\n# Disable auto-correct\ndefaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false\n\n# Disable AutoFill\ndefaults write com.apple.Safari AutoFillFromAddressBook -bool false\ndefaults write com.apple.Safari AutoFillPasswords -bool false\ndefaults write com.apple.Safari AutoFillCreditCardData -bool false\ndefaults write com.apple.Safari AutoFillMiscellaneousForms -bool false\n\n# Warn about fraudulent websites\ndefaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true\n\n# Disable plug-ins\ndefaults write com.apple.Safari WebKitPluginsEnabled -bool false\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false\n\n# Disable Java\ndefaults write com.apple.Safari WebKitJavaEnabled -bool false\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false\n\n# Block pop-up windows\ndefaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false\n\n# Disable auto-playing video\n#defaults write com.apple.Safari WebKitMediaPlaybackAllowsInline -bool false\n#defaults write com.apple.SafariTechnologyPreview WebKitMediaPlaybackAllowsInline -bool false\n#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false\n#defaults write com.apple.SafariTechnologyPreview com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false\n\n# Enable “Do Not Track”\ndefaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true\n\n# Update extensions automatically\ndefaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true\n\n###############################################################################\n# Mail                                                                        #\n###############################################################################\n\n# Disable send and reply animations in Mail.app\ndefaults write com.apple.mail DisableReplyAnimations -bool true\ndefaults write com.apple.mail DisableSendAnimations -bool true\n\n# Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app\ndefaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false\n\n# Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app\ndefaults write com.apple.mail NSUserKeyEquivalents -dict-add \"Send\" \"@\\U21a9\"\n\n# Display emails in threaded mode, sorted by date (oldest at the top)\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"DisplayInThreadedMode\" -string \"yes\"\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"SortedDescending\" -string \"yes\"\ndefaults write com.apple.mail DraftsViewerAttributes -dict-add \"SortOrder\" -string \"received-date\"\n\n# Disable inline attachments (just show the icons)\ndefaults write com.apple.mail DisableInlineAttachmentViewing -bool true\n\n# Disable automatic spell checking\ndefaults write com.apple.mail SpellCheckingBehavior -string \"NoSpellCheckingEnabled\"\n\n###############################################################################\n# Spotlight                                                                   #\n###############################################################################\n\n# Hide Spotlight tray-icon (and subsequent helper)\n#sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search\n# Disable Spotlight indexing for any volume that gets mounted and has not yet\n# been indexed before.\n# Use `sudo mdutil -i off \"/Volumes/foo\"` to stop indexing any volume.\nsudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array \"/Volumes\"\n# Change indexing order and disable some search results\n# Yosemite-specific search results (remove them if you are using macOS 10.9 or older):\n# \tMENU_DEFINITION\n# \tMENU_CONVERSION\n# \tMENU_EXPRESSION\n# \tMENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)\n# \tMENU_WEBSEARCH             (send search queries to Apple)\n# \tMENU_OTHER\ndefaults write com.apple.spotlight orderedItems -array \\\n\t'{\"enabled\" = 1;\"name\" = \"APPLICATIONS\";}' \\\n\t'{\"enabled\" = 1;\"name\" = \"SYSTEM_PREFS\";}' \\\n\t'{\"enabled\" = 1;\"name\" = \"DIRECTORIES\";}' \\\n\t'{\"enabled\" = 1;\"name\" = \"PDF\";}' \\\n\t'{\"enabled\" = 1;\"name\" = \"FONTS\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"DOCUMENTS\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MESSAGES\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"CONTACT\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"EVENT_TODO\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"IMAGES\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"BOOKMARKS\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MUSIC\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MOVIES\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"PRESENTATIONS\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"SPREADSHEETS\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"SOURCE\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_DEFINITION\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_OTHER\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_CONVERSION\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_EXPRESSION\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_WEBSEARCH\";}' \\\n\t'{\"enabled\" = 0;\"name\" = \"MENU_SPOTLIGHT_SUGGESTIONS\";}'\n# Load new settings before rebuilding the index\nkillall mds > /dev/null 2>&1\n# Make sure indexing is enabled for the main volume\nsudo mdutil -i on / > /dev/null\n# Rebuild the index from scratch\nsudo mdutil -E / > /dev/null\n\n###############################################################################\n# Terminal & iTerm 2                                                          #\n###############################################################################\n\n# Only use UTF-8 in Terminal.app\ndefaults write com.apple.terminal StringEncodings -array 4\n\n# Use a modified version of the Solarized Dark theme by default in Terminal.app\nosascript <<EOD\n\ntell application \"Terminal\"\n\n\tlocal allOpenedWindows\n\tlocal initialOpenedWindows\n\tlocal windowID\n\tset themeName to \"Solarized Dark xterm-256color\"\n\n\t(* Store the IDs of all the open terminal windows. *)\n\tset initialOpenedWindows to id of every window\n\n\t(* Open the custom theme so that it gets added to the list\n\t   of available terminal themes (note: this will open two\n\t   additional terminal windows). *)\n\tdo shell script \"open '$HOME/init/\" & themeName & \".terminal'\"\n\n\t(* Wait a little bit to ensure that the custom theme is added. *)\n\tdelay 1\n\n\t(* Set the custom theme as the default terminal theme. *)\n\tset default settings to settings set themeName\n\n\t(* Get the IDs of all the currently opened terminal windows. *)\n\tset allOpenedWindows to id of every window\n\n\trepeat with windowID in allOpenedWindows\n\n\t\t(* Close the additional windows that were opened in order\n\t\t   to add the custom theme to the list of terminal themes. *)\n\t\tif initialOpenedWindows does not contain windowID then\n\t\t\tclose (every window whose id is windowID)\n\n\t\t(* Change the theme for the initial opened terminal windows\n\t\t   to remove the need to close them in order for the custom\n\t\t   theme to be applied. *)\n\t\telse\n\t\t\tset current settings of tabs of (every window whose id is windowID) to settings set themeName\n\t\tend if\n\n\tend repeat\n\nend tell\n\nEOD\n\n# Enable “focus follows mouse” for Terminal.app and all X11 apps\n# i.e. hover over a window and start typing in it without clicking first\n#defaults write com.apple.terminal FocusFollowsMouse -bool true\n#defaults write org.x.X11 wm_ffm -bool true\n\n# Enable Secure Keyboard Entry in Terminal.app\n# See: https://security.stackexchange.com/a/47786/8918\ndefaults write com.apple.terminal SecureKeyboardEntry -bool true\n\n# Disable the annoying line marks\ndefaults write com.apple.Terminal ShowLineMarks -int 0\n\n# Install the Solarized Dark theme for iTerm\nopen \"${HOME}/init/Solarized Dark.itermcolors\"\n\n# Don’t display the annoying prompt when quitting iTerm\ndefaults write com.googlecode.iterm2 PromptOnQuit -bool false\n\n###############################################################################\n# Time Machine                                                                #\n###############################################################################\n\n# Prevent Time Machine from prompting to use new hard drives as backup volume\ndefaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true\n\n# Disable local Time Machine backups\nhash tmutil &> /dev/null && sudo tmutil disablelocal\n\n###############################################################################\n# Activity Monitor                                                            #\n###############################################################################\n\n# Show the main window when launching Activity Monitor\ndefaults write com.apple.ActivityMonitor OpenMainWindow -bool true\n\n# Visualize CPU usage in the Activity Monitor Dock icon\ndefaults write com.apple.ActivityMonitor IconType -int 5\n\n# Show all processes in Activity Monitor\ndefaults write com.apple.ActivityMonitor ShowCategory -int 0\n\n# Sort Activity Monitor results by CPU usage\ndefaults write com.apple.ActivityMonitor SortColumn -string \"CPUUsage\"\ndefaults write com.apple.ActivityMonitor SortDirection -int 0\n\n###############################################################################\n# Address Book, Dashboard, iCal, TextEdit, and Disk Utility                   #\n###############################################################################\n\n# Enable the debug menu in Address Book\ndefaults write com.apple.addressbook ABShowDebugMenu -bool true\n\n# Enable Dashboard dev mode (allows keeping widgets on the desktop)\ndefaults write com.apple.dashboard devmode -bool true\n\n# Enable the debug menu in iCal (pre-10.8)\ndefaults write com.apple.iCal IncludeDebugMenu -bool true\n\n# Use plain text mode for new TextEdit documents\ndefaults write com.apple.TextEdit RichText -int 0\n# Open and save files as UTF-8 in TextEdit\ndefaults write com.apple.TextEdit PlainTextEncoding -int 4\ndefaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4\n\n# Enable the debug menu in Disk Utility\ndefaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true\ndefaults write com.apple.DiskUtility advanced-image-options -bool true\n\n# Auto-play videos when opened with QuickTime Player\ndefaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool true\n\n###############################################################################\n# Mac App Store                                                               #\n###############################################################################\n\n# Enable the WebKit Developer Tools in the Mac App Store\ndefaults write com.apple.appstore WebKitDeveloperExtras -bool true\n\n# Enable Debug Menu in the Mac App Store\ndefaults write com.apple.appstore ShowDebugMenu -bool true\n\n# Enable the automatic update check\ndefaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true\n\n# Check for software updates daily, not just once per week\ndefaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1\n\n# Download newly available updates in background\ndefaults write com.apple.SoftwareUpdate AutomaticDownload -int 1\n\n# Install System data files & security updates\ndefaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1\n\n# Automatically download apps purchased on other Macs\ndefaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1\n\n# Turn on app auto-update\ndefaults write com.apple.commerce AutoUpdate -bool true\n\n# Allow the App Store to reboot machine on macOS updates\ndefaults write com.apple.commerce AutoUpdateRestartRequired -bool true\n\n###############################################################################\n# Photos                                                                      #\n###############################################################################\n\n# Prevent Photos from opening automatically when devices are plugged in\ndefaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true\n\n###############################################################################\n# Messages                                                                    #\n###############################################################################\n\n# Disable automatic emoji substitution (i.e. use plain text smileys)\ndefaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"automaticEmojiSubstitutionEnablediMessage\" -bool false\n\n# Disable smart quotes as it’s annoying for messages that contain code\ndefaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"automaticQuoteSubstitutionEnabled\" -bool false\n\n# Disable continuous spell checking\ndefaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add \"continuousSpellCheckingEnabled\" -bool false\n\n###############################################################################\n# Google Chrome & Google Chrome Canary                                        #\n###############################################################################\n\n# Disable the all too sensitive backswipe on trackpads\ndefaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false\ndefaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false\n\n# Disable the all too sensitive backswipe on Magic Mouse\ndefaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false\ndefaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false\n\n# Use the system-native print preview dialog\ndefaults write com.google.Chrome DisablePrintPreview -bool true\ndefaults write com.google.Chrome.canary DisablePrintPreview -bool true\n\n# Expand the print dialog by default\ndefaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true\ndefaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true\n\n###############################################################################\n# GPGMail 2                                                                   #\n###############################################################################\n\n# Disable signing emails by default\ndefaults write ~/Library/Preferences/org.gpgtools.gpgmail SignNewEmailsByDefault -bool false\n\n###############################################################################\n# Opera & Opera Developer                                                     #\n###############################################################################\n\n# Expand the print dialog by default\ndefaults write com.operasoftware.Opera PMPrintingExpandedStateForPrint2 -boolean true\ndefaults write com.operasoftware.OperaDeveloper PMPrintingExpandedStateForPrint2 -boolean true\n\n###############################################################################\n# SizeUp.app                                                                  #\n###############################################################################\n\n# Start SizeUp at login\ndefaults write com.irradiatedsoftware.SizeUp StartAtLogin -bool true\n\n# Don’t show the preferences window on next start\ndefaults write com.irradiatedsoftware.SizeUp ShowPrefsOnNextStart -bool false\n\n###############################################################################\n# Sublime Text                                                                #\n###############################################################################\n\n# Install Sublime Text settings\ncp -r init/Preferences.sublime-settings ~/Library/Application\\ Support/Sublime\\ Text*/Packages/User/Preferences.sublime-settings 2> /dev/null\n\n###############################################################################\n# Spectacle.app                                                               #\n###############################################################################\n\n# Set up my preferred keyboard shortcuts\ncp -r init/spectacle.json ~/Library/Application\\ Support/Spectacle/Shortcuts.json 2> /dev/null\n\n###############################################################################\n# Transmission.app                                                            #\n###############################################################################\n\n# Use `~/Documents/Torrents` to store incomplete downloads\ndefaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true\ndefaults write org.m0k.transmission IncompleteDownloadFolder -string \"${HOME}/Documents/Torrents\"\n\n# Use `~/Downloads` to store completed downloads\ndefaults write org.m0k.transmission DownloadLocationConstant -bool true\n\n# Don’t prompt for confirmation before downloading\ndefaults write org.m0k.transmission DownloadAsk -bool false\ndefaults write org.m0k.transmission MagnetOpenAsk -bool false\n\n# Don’t prompt for confirmation before removing non-downloading active transfers\ndefaults write org.m0k.transmission CheckRemoveDownloading -bool true\n\n# Trash original torrent files\ndefaults write org.m0k.transmission DeleteOriginalTorrent -bool true\n\n# Hide the donate message\ndefaults write org.m0k.transmission WarningDonate -bool false\n# Hide the legal disclaimer\ndefaults write org.m0k.transmission WarningLegal -bool false\n\n# IP block list.\n# Source: https://giuliomac.wordpress.com/2014/02/19/best-blocklist-for-transmission/\ndefaults write org.m0k.transmission BlocklistNew -bool true\ndefaults write org.m0k.transmission BlocklistURL -string \"http://john.bitsurge.net/public/biglist.p2p.gz\"\ndefaults write org.m0k.transmission BlocklistAutoUpdate -bool true\n\n# Randomize port on launch\ndefaults write org.m0k.transmission RandomPort -bool true\n\n###############################################################################\n# Twitter.app                                                                 #\n###############################################################################\n\n# Disable smart quotes as it’s annoying for code tweets\ndefaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -bool false\n\n# Show the app window when clicking the menu bar icon\ndefaults write com.twitter.twitter-mac MenuItemBehavior -int 1\n\n# Enable the hidden ‘Develop’ menu\ndefaults write com.twitter.twitter-mac ShowDevelopMenu -bool true\n\n# Open links in the background\ndefaults write com.twitter.twitter-mac openLinksInBackground -bool true\n\n# Allow closing the ‘new tweet’ window by pressing `Esc`\ndefaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true\n\n# Show full names rather than Twitter handles\ndefaults write com.twitter.twitter-mac ShowFullNames -bool true\n\n# Hide the app in the background if it’s not the front-most window\ndefaults write com.twitter.twitter-mac HideInBackground -bool true\n\n###############################################################################\n# Tweetbot.app                                                                #\n###############################################################################\n\n# Bypass the annoyingly slow t.co URL shortener\ndefaults write com.tapbots.TweetbotMac OpenURLsDirectly -bool true\n\n###############################################################################\n# Kill affected applications                                                  #\n###############################################################################\n\nfor app in \"Activity Monitor\" \\\n\t\"Address Book\" \\\n\t\"Calendar\" \\\n\t\"cfprefsd\" \\\n\t\"Contacts\" \\\n\t\"Dock\" \\\n\t\"Finder\" \\\n\t\"Google Chrome Canary\" \\\n\t\"Google Chrome\" \\\n\t\"Mail\" \\\n\t\"Messages\" \\\n\t\"Opera\" \\\n\t\"Photos\" \\\n\t\"Safari\" \\\n\t\"SizeUp\" \\\n\t\"Spectacle\" \\\n\t\"SystemUIServer\" \\\n\t\"Terminal\" \\\n\t\"Transmission\" \\\n\t\"Tweetbot\" \\\n\t\"Twitter\" \\\n\t\"iCal\"; do\n\tkillall \"${app}\" &> /dev/null\ndone\necho \"Done. Note that some of these changes require a logout/restart to take effect.\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.59375,
          "content": "# macOS Defaults\n\nA place to centralize the great work [@mathiasbynens](http://mths.be/macos) did gathering and fostering a community around finding and documenting macOS default configuration from the command-line.\n\n## Repo configuration\nNote: There are 2 branches.\n\n1. `master`: Reflects http://mths.be/macos at all times. \n2. `suttle`: My personal preferences and settings.\n\n\n## Executing the .macos file\n\nWhen setting up a new Mac, you may want to set some sensible macOS defaults:\n\n`./.macos`\n\n## Reference\nUnsure of what you can modify or which commands to use?\nCheck out [REFERENCE.md](REFERENCE.md).\n"
        },
        {
          "name": "REFERENCE.md",
          "type": "blob",
          "size": 17.7392578125,
          "content": "# macOS Default Values Command Reference\n\n## chflags\nchange file flags\n\n```\nusage: chflags [-fhv] [-R [-H | -L | -P]] flags file ...\n```\n\n[chflags man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/chflags.1.html)\n\n\n## defaults\nCommand line interface to a user's defaults.\n\n```\n❯ defaults\n\nSyntax:\n\n'defaults' [-currentHost | -host <hostname>] followed by one of the following:\n\n  read                                 shows all defaults\n  read <domain>                        shows defaults for given domain\n  read <domain> <key>                  shows defaults for given domain, key\n\n  read-type <domain> <key>             shows the type for the given domain, key\n\n  write <domain> <domain_rep>          writes domain (overwrites existing)\n  write <domain> <key> <value>         writes key for domain\n\n  rename <domain> <old_key> <new_key>  renames old_key to new_key\n\n  delete <domain>                      deletes domain\n  delete <domain> <key>                deletes key in domain\n\n  import <domain> <path to plist>      writes all of the keys in path to domain\n  export <domain> <path to plist>      saves domain as a binary plist to path\n  domains                              lists all domains\n  find <word>                          lists all entries containing word\n  help                                 print this help\n\n<domain> is ( <domain_name> | -app <application_name> | -globalDomain )\n         or a path to a file omitting the '.plist' extension\n\n<value> is one of:\n  <value_rep>\n  -string <string_value>\n  -data <hex_digits>\n  -int[eger] <integer_value>\n  -float  <floating-point_value>\n  -bool[ean] (true | false | yes | no)\n  -date <date_rep>\n  -array <value1> <value2> ...\n  -array-add <value1> <value2> ...\n  -dict <key1> <value1> <key2> <value2> ...\n  -dict-add <key1> <value1> ...\n```\n\n**Tip:** Use `defaults domains` to to list all domains available. \n\n[defaults man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/defaults.1.html)  \n\n\n## launchctl: \nUnload daemons/agents and generally control launchd\n\n```  \n❯ launchctl help\n\nusage: launchctl <subcommand>\n\tload       \tLoad configuration files and/or directories\n\tunload     \tUnload configuration files and/or directories\n\tstart      \tStart specified job\n\tstop       \tStop specified job\n\tsubmit     \tSubmit a job from the command line\n\tremove     \tRemove specified job\n\tbootstrap  \tBootstrap launchd\n\tlist       \tList jobs and information about jobs\n\tsetenv     \tSet an environmental variable in launchd\n\tunsetenv   \tUnset an environmental variable in launchd\n\tgetenv     \tGet an environmental variable from launchd\n\texport     \tExport shell settings from launchd\n\tdebug      \tSet the WaitForDebugger flag for the target job to true.\n\tlimit      \tView and adjust launchd resource limits\n\tstdout     \tRedirect launchd's standard out to the given path\n\tstderr     \tRedirect launchd's standard error to the given path\n\tshutdown   \tPrepare for system shutdown\n\tsingleuser \tSwitch to single-user mode\n\tgetrusage  \tGet resource usage statistics from launchd\n\tlog        \tAdjust the logging level or mask of launchd\n\tumask      \tChange launchd's umask\n\tbsexec     \tExecute a process within a different Mach bootstrap subset\n\tbslist     \tList Mach bootstrap services and optional servers\n\tbstree     \tShow the entire Mach bootstrap tree. Requires root privileges.\n\tmanagerpid \tPrint the PID of the launchd managing this Mach bootstrap.\n\tmanageruid \tPrint the UID of the launchd managing this Mach bootstrap.\n\tmanagername\tPrint the name of this Mach bootstrap.\n\tasuser     \tExecute a subcommand in the given user's context.\n\texit       \tExit the interactive invocation of launchctl\n\tquit       \tQuit the interactive invocation of launchctl\n\thelp       \tThis help output\n```\n\n**Tip:** Use `launchctl list` to show the currently set values for `launchctl`.\n\n[launchctl man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/launchctl.1.html)\n\n\n## mdutil\nManage the metadata stores used by Spotlight\n\n```\nUsage: mdutil -pEsa -i (on|off) -d volume ...\n       mdutil -t {volume-path | deviceid} fileid\n\tUtility to manage Spotlight indexes.\n\t-p             Publish metadata.\n\t-i (on|off)    Turn indexing on or off.\n\t-d             Disable Spotlight activity for volume (re-enable using -i on).\n\t-E             Erase and rebuild index.\n\t-s             Print indexing status.\n\t-t             Resolve files from file id with an optional volume path or device id.\n\t-a             Apply command to all volumes.\n\t-V vol         Apply command to all stores on the specified volume.\n\t-v             Display verbose information.\nNOTE: Run as owner for network homes, otherwise run as root.\n```\n\n[mdutil man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/mdutil.1.html)\n\n## nvram\nManipulate firmware NVRAM variables\n\n```\nnvram [-x] [-p] [-f filename] [-d name] [-c] name[=value] ...\n\t-x         use XML format for printing or reading variables\n\t           (must appear before -p or -f)\n\t-p         print all firmware variables\n\t-f         set firmware variables from a text file\n\t-d         delete the named variable\n\t-c         delete all variables\n\tname=value set named variable\n\tname       print variable\nNote that arguments and options are executed in order.\n```\n\n**Tip:** Use `nvram -xp` to show all firmware variables in XML format.\n\n[nvram man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/nvram.8.html)\n\n\n## PListBuddy\nRead and write values to plists\n\n```\n❯ /usr/libexec/PlistBuddy\n\nUsage: PlistBuddy [-cxh] <file.plist>\n    -c \"<command>\" execute command, otherwise run in interactive mode\n    -x output will be in the form of an xml plist where appropriate\n    -h print the complete help info, with command guide\n```\n\n### PListBuddy help\n```\n❯ /usr/libexec/PlistBuddy -h\n\nCommand Format:\n    Help - Prints this information\n    Exit - Exits the program, changes are not saved to the file\n    Save - Saves the current changes to the file\n    Revert - Reloads the last saved version of the file\n    Clear [<Type>] - Clears out all existing entries, and creates root of Type\n    Print [<Entry>] - Prints value of Entry.  Otherwise, prints file\n    Set <Entry> <Value> - Sets the value at Entry to Value\n    Add <Entry> <Type> [<Value>] - Adds Entry to the plist, with value Value\n    Copy <EntrySrc> <EntryDst> - Copies the EntrySrc property to EntryDst\n    Delete <Entry> - Deletes Entry from the plist\n    Merge <file.plist> [<Entry>] - Adds the contents of file.plist to Entry\n    Import <Entry> <file> - Creates or sets Entry the contents of file\n\nEntry Format:\n    Entries consist of property key names delimited by colons.  Array items\n    are specified by a zero-based integer index.  Examples:\n        :CFBundleShortVersionString\n        :CFBundleDocumentTypes:2:CFBundleTypeExtensions\n\nTypes:\n    string\n    array\n    dict\n    bool\n    real\n    integer\n    date\n    data\n\nExamples:\n    Set :CFBundleIdentifier com.apple.plistbuddy\n        Sets the CFBundleIdentifier property to com.apple.plistbuddy\n    Add :CFBundleGetInfoString string \"App version 1.0.1\"\n        Adds the CFBundleGetInfoString property to the plist\n    Add :CFBundleDocumentTypes: dict\n        Adds a new item of type dict to the CFBundleDocumentTypes array\n    Add :CFBundleDocumentTypes:0 dict\n        Adds the new item to the beginning of the array\n    Delete :CFBundleDocumentTypes:0 dict\n        Deletes the FIRST item in the array\n    Delete :CFBundleDocumentTypes\n        Deletes the ENTIRE CFBundleDocumentTypes array\n```\n\n[PlistBuddy man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/PlistBuddy.8.html)\n\n\n## pmset\nManipulate power management settings\n\n**Tips:**     \n* Use `pmset -g` to show the currently settings.\n* Use `pmset -g ps` to show power source info.\n\n```\n❯ pmset -g\nActive Profiles:\nBattery Power\t\t-1*\nAC Power\t\t-1\nCurrently in use:\n standbydelay         86400\n standby              1\n halfdim              1\n hibernatefile        /var/vm/sleepimage\n darkwakes            0\n gpuswitch            2\n disksleep            10\n sleep                10\n autopoweroffdelay    14400\n hibernatemode        3\n autopoweroff         1\n ttyskeepawake        1\n displaysleep         2\n acwake               0\n lidwake              1\n```\n\n```\n❯ pmset -g ps\nNow drawing from 'Battery Power'\n -InternalBattery-0\t98%; discharging; 4:52 remaining\n```\n[pmset man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/pmset.1.html)\n\n\n## scutil\nManage system configuration parameters \n\n```\nUsage: scutil\n\tinteractive access to the dynamic store.\n\n   or: scutil --prefs [preference-file]\n\tinteractive access to the [raw] stored preferences.\n\n   or: scutil [-W] -r nodename\n   or: scutil [-W] -r address\n   or: scutil [-W] -r local-address remote-address\n\tcheck reachability of node, address, or address pair (-W to \"watch\").\n\n   or: scutil -w dynamic-store-key [ -t timeout ]\n\t-w\twait for presense of dynamic store key\n\t-t\ttime to wait for key\n\n   or: scutil --get pref\n   or: scutil --set pref [newval]\n   or: scutil --get filename path key\n\tpref\tdisplay (or set) the specified preference.  Valid preferences\n\t\tinclude:\n\t\t\tComputerName, LocalHostName, HostName\n\tnewval\tNew preference value to be set.  If not specified,\n\t\tthe new value will be read from standard input.\n\n   or: scutil --dns\n\tshow DNS configuration.\n\n   or: scutil --proxy\n\tshow \"proxy\" configuration.\n\n   or: scutil --nwi\n\tshow network information\n\n   or: scutil --nc\n\tshow VPN network configuration information. Use --nc help for full command list\n```\n[scutil man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/scutil.8.html)\n\n\n## systemsetup\nConfiguration tool for certain machine settings in System Preferences.  \n\n```\n❯ systemsetup -help\n\nsystemsetup Help Information\n-------------------------------------\nUsage: systemsetup -getdate\n\tDisplay current date.\n\nUsage: systemsetup -setdate <mm:dd:yy>\n\tSet current date to <mm:dd:yy>.\n\nUsage: systemsetup -gettime\n\tDisplay current time.\n\nUsage: systemsetup -settime <hh:mm:ss>\n\tSet current time to <hh:mm:ss>.\n\nUsage: systemsetup -gettimezone\n\tDisplay current time zone.\n\nUsage: systemsetup -settimezone <timezone>\n\tSet current time zone to <timezone>. Use \"-listtimezones\" to list time zones.\n\nUsage: systemsetup -listtimezones\n\tList time zones supported by this machine.\n\nUsage: systemsetup -getusingnetworktime\n\tDisplay whether network time is on or off.\n\nUsage: systemsetup -setusingnetworktime <on off>\n\tSet using network time to either <on> or <off>.\n\nUsage: systemsetup -getnetworktimeserver\n\tDisplay network time server.\n\nUsage: systemsetup -setnetworktimeserver <timeserver>\n\tSet network time server to <timeserver>.\n\nUsage: systemsetup -getsleep\n\tDisplay amount of idle time until computer, display and hard disk sleep.\n\nUsage: systemsetup -setsleep <minutes>\n\tSet amount of idle time until computer, display and hard disk sleep to <minutes>.\n\tSpecify \"Never\" or \"Off\" for never.\n\nUsage: systemsetup -getcomputersleep\n\tDisplay amount of idle time until computer sleeps.\n\nUsage: systemsetup -setcomputersleep <minutes>\n\tSet amount of idle time until compputer sleeps to <minutes>.\n\tSpecify \"Never\" or \"Off\" for never.\n\nUsage: systemsetup -getdisplaysleep\n\tDisplay amount of idle time until display sleeps.\n\nUsage: systemsetup -setdisplaysleep <minutes>\n\tSet amount of idle time until display sleeps to <minutes>.\n\tSpecify \"Never\" or \"Off\" for never.\n\nUsage: systemsetup -getharddisksleep\n\tDisplay amount of idle time until hard disk sleeps.\n\nUsage: systemsetup -setharddisksleep <minutes>\n\tSet amount of idle time until hard disk sleeps to <minutes>.\n\tSpecify \"Never\" or \"Off\" for never.\n\nUsage: systemsetup -getwakeonmodem\n\tDisplay whether wake on modem is on or off.\n\nUsage: systemsetup -setwakeonmodem <on off>\n\tSet wake on modem to either <on> or <off>.\n\nUsage: systemsetup -getwakeonnetworkaccess\n\tDisplay whether wake on network access is on or off.\n\nUsage: systemsetup -setwakeonnetworkaccess <on off>\n\tSet wake on network access to either <on> or <off>.\n\nUsage: systemsetup -getrestartpowerfailure\n\tDisplay whether restart on power failure is on or off.\n\nUsage: systemsetup -setrestartpowerfailure <on off>\n\tSet restart on power failure to either <on> or <off>.\n\nUsage: systemsetup -getrestartfreeze\n\tDisplay whether restart on freeze is on or off.\n\nUsage: systemsetup -setrestartfreeze <on off>\n\tSet restart on freeze to either <on> or <off>.\n\nUsage: systemsetup -getallowpowerbuttontosleepcomputer\n\tDisplay whether the power button is able to sleep the computer.\n\nUsage: systemsetup -setallowpowerbuttontosleepcomputer <on off>\n\tEnable or disable whether the power button can sleep the computer.\n\nUsage: systemsetup -getremotelogin\n\tDisplay whether remote login is on or off.\n\nUsage: systemsetup -setremotelogin <on off>\n\tSet remote login to either <on> or <off>. Use \"systemsetup -f -setremotelogin off\" to suppress prompting when turning remote login off.\n\nUsage: systemsetup -getremoteappleevents\n\tDisplay whether remote apple events are on or off.\n\nUsage: systemsetup -setremoteappleevents <on off>\n\tSet remote apple events to either <on> or <off>.\n\nUsage: systemsetup -getcomputername\n\tDisplay computer name.\n\nUsage: systemsetup -setcomputername <computername>\n\tSet computer name to <computername>.\n\nUsage: systemsetup -getlocalsubnetname\n\tDisplay local subnet name.\n\nUsage: systemsetup -setlocalsubnetname <name>\n\tSet local subnet name to <name>.\n\nUsage: systemsetup -getstartupdisk\n\tDisplay current startup disk.\n\nUsage: systemsetup -setstartupdisk <disk>\n\tSet current startup disk to <disk>.\n\nUsage: systemsetup -liststartupdisks\n\tList startup disks on this machine.\n\nUsage: systemsetup -getwaitforstartupafterpowerfailure\n\tGet the number of seconds after which the computer will start up after a power failure.\n\nUsage: systemsetup -setwaitforstartupafterpowerfailure <seconds>\n\tSet the number of seconds after which the computer will start up after a power failure. The <seconds> value must be a multiple of 30 seconds.\n\nUsage: systemsetup -getdisablekeyboardwhenenclosurelockisengaged\n \tGet whether or not the keyboard should be disabled when the X Serve enclosure lock is engaged.\n\nUsage: systemsetup -setdisablekeyboardwhenenclosurelockisengaged <yes no>\n \tSet whether or not the keyboard should be disabled when the X Serve enclosure lock is engaged.\n\nUsage: systemsetup -version\n\tDisplay version of systemsetup tool.\n\nUsage: systemsetup -help\n\tDisplay help.\n\nUsage: systemsetup -printCommands\n\tDisplay commands.\n```\n\n\n**Tip:** Use `systemsetup -printCommands` to show the available commands.\n\n```\n❯ systemsetup -printCommands\nsystemsetup -getdate\nsystemsetup -setdate <mm:dd:yy>\nsystemsetup -gettime\nsystemsetup -settime <hh:mm:ss>\nsystemsetup -gettimezone\nsystemsetup -settimezone <timezone>\nsystemsetup -listtimezones\nsystemsetup -getusingnetworktime\nsystemsetup -setusingnetworktime <on off>\nsystemsetup -getnetworktimeserver\nsystemsetup -setnetworktimeserver <timeserver>\nsystemsetup -getsleep\nsystemsetup -setsleep <minutes>\nsystemsetup -getcomputersleep\nsystemsetup -setcomputersleep <minutes>\nsystemsetup -getdisplaysleep\nsystemsetup -setdisplaysleep <minutes>\nsystemsetup -getharddisksleep\nsystemsetup -setharddisksleep <minutes>\nsystemsetup -getwakeonmodem\nsystemsetup -setwakeonmodem <on off>\nsystemsetup -getwakeonnetworkaccess\nsystemsetup -setwakeonnetworkaccess <on off>\nsystemsetup -getrestartpowerfailure\nsystemsetup -setrestartpowerfailure <on off>\nsystemsetup -getrestartfreeze\nsystemsetup -setrestartfreeze <on off>\nsystemsetup -getallowpowerbuttontosleepcomputer\nsystemsetup -setallowpowerbuttontosleepcomputer <on off>\nsystemsetup -getremotelogin\nsystemsetup -setremotelogin <on off>\nsystemsetup -getremoteappleevents\nsystemsetup -setremoteappleevents <on off>\nsystemsetup -getcomputername\nsystemsetup -setcomputername <computername>\nsystemsetup -getlocalsubnetname\nsystemsetup -setlocalsubnetname <name>\nsystemsetup -getstartupdisk\nsystemsetup -setstartupdisk <disk>\nsystemsetup -liststartupdisks\nsystemsetup -getwaitforstartupafterpowerfailure\nsystemsetup -setwaitforstartupafterpowerfailure <seconds>\nsystemsetup -getdisablekeyboardwhenenclosurelockisengaged\nsystemsetup -setdisablekeyboardwhenenclosurelockisengaged <yes no>\nsystemsetup -version\nsystemsetup -help\nsystemsetup -printCommands\n```\n[systemsetup man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/systemsetup.8.html)\n\n\n## tmutil\nTime Machine utility\n\n```\n❯ tmutil\nUsage: tmutil help <verb>\n\nUsage: tmutil version\n\nUsage: tmutil enable\n\nUsage: tmutil disable\n\nUsage: tmutil startbackup [-a | --auto] [-b | --block] [-r | --rotation] [-d | --destination dest_id]\n\nUsage: tmutil stopbackup\n\nUsage: tmutil enablelocal\n\nUsage: tmutil disablelocal\n\nUsage: tmutil snapshot\n\nUsage: tmutil delete snapshot_path ...\n\nUsage: tmutil restore [-v] src dst\n\nUsage: tmutil compare [-a@esmugtndEX] [-D depth] [-I name]\n       tmutil compare [-a@esmugtndEX] [-D depth] [-I name] snapshot_path\n       tmutil compare [-a@esmugtndEUX] [-D depth] [-I name] path1 path2\n\nUsage: tmutil setdestination [-a]  mount_point\n       tmutil setdestination [-ap] afp://user[:pass]@host/share\n\nUsage: tmutil removedestination destination_id\n\nUsage: tmutil destinationinfo [-X]\n\nUsage: tmutil addexclusion [-p] item ...\n\nUsage: tmutil removeexclusion [-p] item ...\n\nUsage: tmutil isexcluded item ...\n\nUsage: tmutil inheritbackup machine_directory\n       tmutil inheritbackup sparse_bundle\n\nUsage: tmutil associatedisk [-a] mount_point volume_backup_directory\n\nUsage: tmutil latestbackup\n\nUsage: tmutil listbackups\n\nUsage: tmutil machinedirectory\n\nUsage: tmutil calculatedrift machine_directory\n\nUsage: tmutil uniquesize path ...\n\nUse `tmutil help <verb>` for more information about a specific verb.\n```\n\n[tmutil man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man8/tmutil.8.html)\n"
        }
      ]
    }
  ]
}