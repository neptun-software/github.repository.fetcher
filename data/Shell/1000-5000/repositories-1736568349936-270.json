{
  "metadata": {
    "timestamp": 1736568349936,
    "page": 270,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "veggiedefender/open-and-shut",
      "stars": 2342,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2020 Jesse Li\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.560546875,
          "content": "# Open and Shut\n\nType in Morse code by repeatedly slamming your laptop shut\n\n[![output](https://user-images.githubusercontent.com/8890878/78181506-882c1a80-7432-11ea-89c0-bee00e9d183f.gif)](https://youtu.be/UAQ60P61vYw)\n\n## Features\n* Use a battle-tested encoding trusted by pilots, submariners, and amateur radio nerds\n* Type at 100+ words per ~~minute~~ hour\n* Innovative [SIGTERM-based concurrency control](https://github.com/veggiedefender/open-and-shut/blob/master/morse_code_close.sh#L8). Semaphores *who??*\n* Closing your laptop now types the letter E instead of locking\n\n## Setup\n\nNote: For wayland support, check out the [`wayland` branch](https://github.com/veggiedefender/open-and-shut/tree/wayland).\n### Dependencies\n* [xdotool](http://manpages.ubuntu.com/manpages/trusty/man1/xdotool.1.html)\n* [acpid](https://wiki.archlinux.org/index.php/Acpid)\n\n### Installation\nClone this repository and copy files into `/etc/acpi`\n```\ngit clone git@github.com:veggiedefender/open-and-shut.git\nsudo cp morse_code_close.sh morse_code_open.sh morse_code_acpi.sh /etc/acpi/\n```\n\n### Configure acpid\nAcpid needs to know how and when to run our scripts. Create a file `/etc/acpi/events/lm_lid` with the following contents:\n```\nevent=button/lid.*\naction=/etc/acpi/morse_code_acpi.sh\n```\n\n### Disable screen lock\n**Temporarily:** Run `systemd-inhibit --what=handle-lid-switch cat` and press Ctrl+C when you're done.\n\n**Permanently:** Add `HandleLidSwitch=ignore` to `/etc/systemd/logind.conf` and either run `sudo systemctl restart systemd-logind.service` (this will log you out), or reboot your computer.\n"
        },
        {
          "name": "morse_code_acpi.sh",
          "type": "blob",
          "size": 0.2333984375,
          "content": "#!/usr/bin/env bash\n\ngrep -q close /proc/acpi/button/lid/*/state\nif [ $? = 0 ]; then\n    /etc/acpi/morse_code_close.sh & disown\nfi\ngrep -q open /proc/acpi/button/lid/*/state\nif [ $? = 0 ]; then\n    /etc/acpi/morse_code_open.sh & disown\nfi\n"
        },
        {
          "name": "morse_code_close.sh",
          "type": "blob",
          "size": 0.279296875,
          "content": "#!/usr/bin/env bash\n\n# If the user closes the lid without opening it again for this duration, then\n# suspend the system\nsuspend_pause=15\n\nclosed_at=$(date +%s%3N)\npkill -f morse_code_open.sh\n\necho \"$closed_at\" > /tmp/morse_code_close.timestamp\n\nsleep \"$suspend_pause\"\nsystemctl suspend\n"
        },
        {
          "name": "morse_code_open.sh",
          "type": "blob",
          "size": 1.9443359375,
          "content": "#!/usr/bin/env bash\n\nopened_at=$(date +%s%3N)\npkill -f morse_code_close.sh\n\n# Max duration of a dot and dash, in milliseconds\ndot_length=250\ndash_length=3000\n\n# Duration to pause before typing a letter or space, in seconds\nletter_pause=2\nspace_pause=2\n\ndeclare -A morse_letters=(\n    [.-]=A\n    [-...]=B\n    [-.-.]=C\n    [-..]=D\n    [.]=E\n    [..-.]=F\n    [--.]=G\n    [....]=H\n    [..]=I\n    [.---]=J\n    [-.-]=K\n    [.-..]=L\n    [--]=M\n    [-.]=N\n    [---]=O\n    [.--.]=P\n    [--.-]=Q\n    [.-.]=R\n    [...]=S\n    [-]=T\n    [..-]=U\n    [...-]=V\n    [.--]=W\n    [-..-]=X\n    [-.--]=Y\n    [--..]=Z\n    [-----]=0\n    [.----]=1\n    [..---]=2\n    [...--]=3\n    [....-]=4\n    [.....]=5\n    [-....]=6\n    [--...]=7\n    [---..]=8\n    [----.]=9\n    [.-.-.-]=.\n    [--..--]=,\n    [---...]=:\n    [..--..]=?\n    [.----.]=\"'\"\n    [-....-]=-\n    [-..-.]=/\n    [-.--.]='('\n    [-.--.-]=')'\n    [.-..-.]='\"'\n    [-...-]==\n    [.-.-.]=+\n    [.--.-.]=@\n)\n\n# Grab environment variables to interact with X\n# From https://gist.github.com/AladW/de1c5676d93d05a5a0e1/\npid=$(pgrep -t tty$(fgconsole) xinit)\npid=$(pgrep -P $pid -n)\nimport_environment() {\n    (( pid )) && for var; do\n        IFS='=' read key val < <(egrep -z \"$var\" /proc/$pid/environ)\n\n        printf -v \"$key\" %s \"$val\"\n        [[ ${!key} ]] && export \"$key\"\n    done\n}\nimport_environment XAUTHORITY USER DISPLAY\n\necho \"$opened_at\" > /tmp/morse_code_open.timestamp\n\nif [ ! -f /tmp/morse_code_close.timestamp ]; then\n    exit 0\nfi\nclosed_at=$(cat /tmp/morse_code_close.timestamp)\nelapsed=\"$((opened_at - closed_at))\"\n\nif [ \"$elapsed\" -lt \"$dot_length\" ]; then\n    printf \"%s\" \".\" >> /tmp/morse_code_letter\nelif [ \"$elapsed\" -lt \"$dash_length\" ]; then\n    printf \"%s\" \"-\" >> /tmp/morse_code_letter\nelse\n    exit 0\nfi\n\nsleep \"$letter_pause\"\nsequence=$(cat /tmp/morse_code_letter)\nif [[ ! -v \"morse_letters[$sequence]\" ]] ; then\n    exit 0\nfi\nxdotool type \"${morse_letters[$sequence]}\"\nrm /tmp/morse_code_letter\n\nsleep \"$space_pause\"\nxdotool type \" \"\n"
        }
      ]
    }
  ]
}