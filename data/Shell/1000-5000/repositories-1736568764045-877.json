{
  "metadata": {
    "timestamp": 1736568764045,
    "page": 877,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ivanilves/xiringuito",
      "stars": 1121,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n# local routes generator\n/discover-routes\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9072265625,
          "content": "notifications:\n  email: false\n\nsudo: required\n\nservices:\n  - docker\n\nenv:\n  global:\n    - DOCKER_REPO=ivanilves\n\ninstall:\n  - docker pull ${DOCKER_REPO}/xiri-ubuntu\n  - docker pull ${DOCKER_REPO}/xiri-centos\n\nscript:\n  - testing/run_integration_case.sh zero\n  - testing/run_integration_case.sh basic_connectivity_with_ssh\n  - testing/run_integration_case.sh connect_with_ssh_agent\n  - testing/run_integration_case.sh connect_with_ssh_key\n  - testing/run_integration_case.sh do_client_teardown\n  - testing/run_integration_case.sh do_server_teardown\n  - testing/run_integration_case.sh run_with_dns_propagation\n  - testing/run_integration_case.sh run_without_dns_propagation\n  - testing/run_integration_case.sh run_with_route_discovery\n  - testing/run_integration_case.sh run_without_route_discovery\n  - testing/run_integration_case.sh run_with_route_cache\n  - testing/run_integration_case.sh xaval\n\nbranches:\n  only:\n    - master\n"
        },
        {
          "name": "INSTALL-HELP.txt",
          "type": "blob",
          "size": 0.2392578125,
          "content": "Run:\n\n* \"sudo make install\" to install xiringuito\n\n* \"sudo make unistall\" to uninstall xiringuito\n\nHINT:\nBy default it will install software into `/usr/local/xiringuito` path\nand will add 2 wrappers, xiringuito and xaval, into `/usr/local/bin`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4560546875,
          "content": "INSTALL_PATH=/usr/local/xiringuito\nWRAPPER_PATH=/usr/local/bin\n\nhelp:\n\t@cat INSTALL-HELP.txt\n\ninstall:\n\trsync -a ./ $(INSTALL_PATH)/\n\tinstall -o root -g `id -g root` -m 0755 wrapper $(WRAPPER_PATH)/xiringuito\n\tinstall -o root -g `id -g root` -m 0755 wrapper $(WRAPPER_PATH)/xaval\n\tsed -i -r \"s|__INSTALL_PATH__|$(INSTALL_PATH)|g\" $(WRAPPER_PATH)/xiringuito $(WRAPPER_PATH)/xaval\n\nuninstall:\n\trm $(WRAPPER_PATH)/xiringuito $(WRAPPER_PATH)/xaval\n\trm -r $(INSTALL_PATH)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2880859375,
          "content": "[![Build Status](https://travis-ci.org/ivanilves/xiringuito.svg?branch=master)](https://travis-ci.org/ivanilves/xiringuito)\n\n# xiringuito\n\n*SSH-based \"VPN for poors\"* :wink:\n\nVPN made easy! No configuration. No VPN servers. No hassle. **Just plug and use!**\n\nThis is the \"VPN without VPN\" software done using nice built-in capabilities of SSH.\n\n### Install (just download it)\n```\ngit clone https://github.com/ivanilves/xiringuito.git\n```\n\n### Use (just run it ...)\n```\ncd xiringuito\n./xiringuito user@your.ssh.server 10.0.0.0/8 192.168.0.0/16\n```\n... or install it globally and run from any working directory:\n```\ncd xiringuito\nsudo make install\nxiringuito user@your.ssh.server 10.0.0.0/8 192.168.0.0/16\n```\n\nYes! That easy - just pass an SSH server and the list of networks your want to access through this server.\n\nYou will need:\n* Linux or Mac system\n* Local sudo privileges\n* Remote sudo privileges\n\n## Xaval: connection manager\n**NB!** To ease xiringuito configuration, `xaval` connection manager (script inside the project) could be used.\n<img src=\"images/install.gif\" />\n\n## Mac note\nInstall [TunTap for Mac OS X](http://tuntaposx.sourceforge.net/) first.\n\n## Server-side sudo note\nIf you do not have passwordless **sudo** on the side of SSH server, you will need to enter **sudo** password every time you connect to this server. You will be also unable to use `xaval` \"background\" connect option (see `xaval toggle`).\n\n## Route discovery\nSpecifying routes by hand is not bad. But we could make it better by creating an executable `discover-routes` script in the project directory. If no routes are passed by hand, `xiringuito` will run `discover-routes`, pass SSH server hostname to it and use script output as a list of routes, so you may have per-host or per-domain route lists instead of boring manual typing. More information is available in [AWS example](https://github.com/ivanilves/xiringuito/blob/master/discover-routes.aws.example) which uses AWS CLI to discover VPC subnets and route traffic to them through our VPN tunnel.\n\n## You can have many of them!\nAs long as your routes do not overlap, you can run as many `xiringuito` tunnels as you want. **Simultaneously!**\n\n## xirin... WHAT?\n\"xiringuito\" is a Catalan way of saying popular Spanish word \"chiringuito\", which usually means a beach bar in a more or less provisional building. As long as such places usually stand on a loose surface, operate without license and work only with cash, in urban dictionary \"chiringuito\" could mean any dodgy business, any activity of questionable legality and confidence. I've picked up this name because I've wrote this as a quick temporary hack, partially in a bus, partially in a train, while travelling back and forth between job and home. But ... nothing is more permanent than the temporary, right? :smile:\n\n<img src=\"images/xiringuito.png\" width=\"256px\" />\n\n## Future?\nFor now we can do bug fixes and minor UX improvements, however we see rewriting `xiringuito` in statically typed language as the major goal and a prerequirement before anything else.\n\n## What's the difference between `xiringuito` and `sshuttle`?\n[sshuttle](https://github.com/apenwarr/sshuttle) is a very popular SSH over VPN client. Though both projects look similar, there are at least three differences:\n\n* `xiringuito` works well with RTP (Real-time Transport Protocol). This is a UDP-based protocol, the key difference between RTP and most of other UDP protocols - it used bi-directional media transport with random ports assigned on both ends. For me `sshuttle` was unable to correctly handle RTP traffic, while `xiringuito` due to utilization of tun/tap devices, does it transparently w/o issues.\n\n* For the same reason `xiringuito` works with low-level (non-TCP & non-UDP) IP protocols like OSPF, L2TP, PPP, IGMP, IPSec, ARP, etc. While nobody should use SSH tun/tap to tunnel these protocols on production, `xiringuito` may serve you great to do some remote testing of these protocols with SSH-only connection to the infrastructure.\n\n* No Python required! Well, this is not a solid reason to use `xiringuito`, but not everybody likes Python.\n\n*`sshuttle` is a great piece of software. It suits web developers and DevOps/SysAdmins of typical web-centric projects very well. However, if you work with less typical services, or you hate Python (or love Bash), `xiringuito` may be a great choice :wink:*\n"
        },
        {
          "name": "discover-routes.aws.example",
          "type": "blob",
          "size": 0.6484375,
          "content": "#!/usr/bin/env bash\n#\n# Route discovery primer for AWS\n#\nif [[ ${#} != 1 ]]; then\n  echo \"Usage: ${0} SSH_SERVER\"\n  exit 1\nfi\n\nexport AWS_PROFILE=$(echo ${1} | awk -F\".\" '{print $2}')\n\nVPC_URL='http://169.254.169.254/latest/meta-data/network/interfaces/macs/$(/sbin/ip link show dev eth0 | grep link/ether | awk '\"'\"'{print $2}'\"'\"')/vpc-id'\nVPC_ID=$(ssh ${SSH_PRIVATE_KEY_OPTS} ${SSH_PORT_OPTS} ${SSH_EXTRA_OPTS} ${1} curl -s \\\"${VPC_URL}\\\")\nif [[ ${?} -eq 0 && -n \"${VPC_ID}\" ]]; then\n  FILTER_PARAMS=\"--filters Name=vpc-id,Values=${VPC_ID}\"\nfi\n\naws ec2 describe-subnets ${FILTER_PARAMS} | grep CidrBlock\\\":\\ \\\"10 | awk -F\"\\\"\" '{print \"ROUTE:\"$4}' | sort | uniq\n"
        },
        {
          "name": "helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "wrapper",
          "type": "blob",
          "size": 0.0947265625,
          "content": "#!/usr/bin/env bash\n\npushd __INSTALL_PATH__ >/dev/null\n  ./$(basename ${0}) ${@}\npopd >/dev/null\n"
        },
        {
          "name": "xaval",
          "type": "blob",
          "size": 8.107421875,
          "content": "#!/usr/bin/env bash\n#\n# xaval - xiringuito connection manager\n#\n[[ \"${DEBUG}\" == \"true\" ]] && set -x\n\nset -e\nset -o pipefail\n\ndeclare -r ROOT_DIR=${HOME}/.xiringuito\ndeclare -r DIR=${ROOT_DIR}/profiles; mkdir -p ${DIR}\ndeclare -r LOG_DIR=${ROOT_DIR}/logs; mkdir -p ${LOG_DIR}\ndeclare -r RECONNECT_AFTER=5\ndeclare -r WAIT_TIMEOUT=15\n\ndeclare -r ATTACH_MARKER=\"${ROOT_DIR}/attach\"\nif [[ -f \"${ATTACH_MARKER}\" ]]; then\n  declare -r ATTACH=true\nelse\n  declare -r ATTACH=false\nfi\n\nfunction print_help(){\n  cat <<EOF\n[ xaval - xiringuito connection manager ]\n\nUsage: ${0} connect|attach PROFILE\n       ${0} toggle\n       ${0} list [FILTER_EXPR]\n       ${0} kill PROFILE\n       ${0} logs PROFILE\n       ${0} create PROFILE XIRINGUITO_PARAMS\n       ${0} update PROFILE XIRINGUITO_PARAMS\n       ${0} upsert PROFILE XIRINGUITO_PARAMS\n       ${0} delete PROFILE\n       ${0} rename OLD_PROFILE NEW_PROFILE\n\nHINT: Run without any arguments to enter interactive mode!\n\nExamples:\n  ${0} create PROD -f 3 -X root@production.server.com 10.67.42.0/24 172.21.0.0/16\n  ${0} connect PROD\n\nEOF\n}\n\nfunction commit_suicide(){\n  echo \"[ ERROR ]\"\n  echo \"${@}\"\n  exit 1\n}\n\nfunction print_help_and_commit_suicide(){\n  print_help\n  commit_suicide \"${@}\"\n}\n\nfunction validate_command(){\n  for _CMD in 'connect' 'attach' 'toggle' 'list' 'kill' 'logs' 'create' 'update' 'upsert' 'delete' 'rename'; do\n    if [[ \"${_CMD}\" == \"${1}\" ]]; then\n      echo \"${1}\"\n      return\n    fi\n  done\n}\n\nfunction suicide_on_absent_profile(){\n  if [[ ! -f \"${DIR}/${1}\" ]]; then\n    commit_suicide \"Profile does not exist: ${1}\"\n  fi\n}\n\nfunction suicide_on_existing_profile(){\n  if [[ -f \"${DIR}/${1}\" ]]; then\n    commit_suicide \"Profile already exists: ${1}\"\n  fi\n}\n\nfunction get_profile_pid() {\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  pgrep -U ${USER} -f -- \"$(cat ${DIR}/${PROFILE} | sed 's/\\+/\\\\\\+/g')\"\n}\n\nfunction get_profile_status() {\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  if [[ \"$(get_profile_pid ${PROFILE})\" != \"\" ]]; then\n    echo \"UP\"\n  else\n    echo \"DOWN\"\n  fi\n}\n\nfunction suicide_on_profile_up(){\n  if [[ \"$(get_profile_status ${1})\" == \"UP\" ]]; then\n    commit_suicide \"Profile already up: ${1}\"\n  fi\n}\n\nfunction suicide_on_profile_down(){\n  if [[ \"$(get_profile_status ${1})\" == \"DOWN\" ]]; then\n    commit_suicide \"Profile already down: ${1}\"\n  fi\n}\n\nfunction do_mfa_prewarm(){\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  local PROFILE_FILE=${DIR}/${PROFILE}\n\n  ROUTES_PASSED=$(egrep \"[0-9]/[0-9]+$\" ${PROFILE_FILE} >/dev/null && echo \"true\" || echo \"false\")\n  DISCOVERY_OFF=$(egrep \"(^| )-X \"      ${PROFILE_FILE} >/dev/null && echo \"true\" || echo \"false\")\n\n  if [[ \"${ROUTES_PASSED}\" == \"false\" && \"${DISCOVERY_OFF}\" == \"false\" ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\nfunction select_profile(){\n  local START_NUMBER=1\n  local PROFILE_COUNT=$(list_profiles | wc -l | sed 's/ //g')\n\n  if [[ ${PROFILE_COUNT} -eq 0 ]]; then\n    print_help\n    echo \"You have no profiles configured...\"\n    exit 0\n  fi\n\n  list_profiles | awk '{printf \"%2d) %s\\n\", NR, $0}' \n  echo; read -p \"PROFILE NUMBER (${START_NUMBER}-${PROFILE_COUNT})>\" PROFILE_NUMBER\n\n  if [[ ${PROFILE_NUMBER} =~ \"^[0-9]+$\" ]]; then\n    commit_suicide \"Should be a natural number!\"\n  fi\n\n  if [[ ${PROFILE_NUMBER} -lt ${START_NUMBER} ]]; then\n    commit_suicide \"Should be >= ${START_NUMBER}\"\n  fi\n\n  if [[ ${PROFILE_NUMBER} -gt ${PROFILE_COUNT} ]]; then\n    commit_suicide \"Should be <= ${PROFILE_COUNT}\"\n  fi\n\n  local PROFILE=$(list_profiles | head -n${PROFILE_NUMBER} | tail -n1 | cut -d' ' -f1)\n\n  if [[ \"${ATTACH}\" == \"true\" ]]; then\n    attach_profile ${PROFILE}\n  else\n    connect_profile ${PROFILE}\n  fi\n}\n\nfunction list_profiles(){\n  local FILTER_EXPR=\"${@}\"\n  if [[ -z \"${FILTER_EXPR}\" ]]; then\n    FILTER_EXPR=\".*\"\n  fi\n  for PROFILE in $(find ${DIR} -type f | awk -F\"/\" '{print $NF}' | egrep \"${FILTER_EXPR}\" | sort); do\n    printf \"%-20s %-4s = %s\\n\" ${PROFILE} $(get_profile_status ${PROFILE}) \"$(cat ${DIR}/${PROFILE})\"\n  done\n}\n\nfunction create_profile(){\n  local PROFILE=${1}; shift\n\n  suicide_on_existing_profile ${PROFILE}\n\n  echo \"${@}\" >${DIR}/${PROFILE}\n}\n\nfunction update_profile(){\n  local PROFILE=${1}; shift\n\n  suicide_on_absent_profile ${PROFILE}\n\n  echo \"${@}\" >${DIR}/${PROFILE}\n}\n\nfunction upsert_profile(){\n  local PROFILE=${1}; shift\n\n  echo \"${@}\" >${DIR}/${PROFILE}\n}\n\nfunction delete_profile(){\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  rm ${DIR}/${PROFILE}\n}\n\nfunction toggle_attach {\n  if [[ \"${ATTACH}\" == \"true\" ]]; then\n    rm \"${ATTACH_MARKER}\"\n    echo \"ATTACH: ON->OFF\"\n  else\n    touch \"${ATTACH_MARKER}\"\n    echo \"ATTACH: OFF->ON\"\n  fi\n}\n\nfunction loop_connection() {\n  trap \"echo 'HUP is trapped'\" HUP\n\n  local PROFILE=${1}\n\n  local TRY=true\n  local OPTS=\"\"\n\n  set +e\n\n  while [[ ${TRY} == true ]]; do\n    $(dirname ${0})/xiringuito ${OPTS} $(cat ${DIR}/${PROFILE})\n    if [[ ${?} -eq 0 || ${?} -eq 143 ]]; then\n      echo \"=> Will sleep ${RECONNECT_AFTER} seconds before reconnection...\"\n      OPTS=\"-c\"\n      sleep ${RECONNECT_AFTER}\n    else\n      TRY=false\n    fi\n  done\n}\n\nfunction attach_profile(){\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n  suicide_on_profile_up ${PROFILE}\n\n  loop_connection ${PROFILE}\n}\n\nfunction connect_profile(){\n  echo -n \"[ sudo check ] \"; sudo true; echo\n\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n  suicide_on_profile_up ${PROFILE}\n\n  local LOG_FILE=${LOG_DIR}/${PROFILE}\n\n  if [[ \"$(do_mfa_prewarm ${PROFILE})\" == \"true\" ]]; then\n    ./discover-routes $(awk '{print $NF}' ${DIR}/${PROFILE}) >/dev/null\n  fi\n\n  echo\n  echo \"Connecting (in background): ${PROFILE}\"\n  echo\n  echo \"Use \\\"xaval logs ${PROFILE}\\\" to see connection logs\"\n  loop_connection ${PROFILE} &>${LOG_FILE} &\n\n  wait_connection ${PROFILE}\n}\n\nfunction wait_connection(){\n  local PROFILE=${1}\n\n  sleep 2\n\n  local WAIT_TIME=0\n  while [[ \"$(get_profile_status ${PROFILE})\" != \"UP\" ]]; do\n    if [[ ${WAIT_TIME} -ge ${WAIT_TIMEOUT} ]]; then\n      dump_profile_log ${PROFILE}\n\n      commit_suicide \"Unable to bring up \\\"${PROFILE}\\\" after ${WAIT_TIMEOUT} seconds\"\n    fi\n\n    echo \"* Waiting for connection to come up...\"\n    sleep 1\n\n    ((++WAIT_TIME))\n  done\n}\n\nfunction kill_profile() {\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n  suicide_on_profile_down ${PROFILE}\n\n  kill -HUP $(get_profile_pid ${PROFILE})\n}\n\nfunction logs_profile() {\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  local LOG_FILE=${LOG_DIR}/${PROFILE}\n\n  cat ${LOG_FILE}\n\n  echo\n  echo \"STATUS: $(get_profile_status ${PROFILE})\"\n}\n\nfunction dump_profile_log() {\n  local PROFILE=${1}\n\n  suicide_on_absent_profile ${PROFILE}\n\n  local LOG_FILE=${LOG_DIR}/${PROFILE}\n\n  echo \"--- LOG ---\" >>/dev/stderr\n  cat ${LOG_FILE} >>/dev/stderr\n  echo \"--- LOG ---\" >>/dev/stderr\n}\n\nfunction rename_profile(){\n  local OLD_PROFILE=${1}\n  local NEW_PROFILE=${2}\n\n  suicide_on_absent_profile ${OLD_PROFILE}\n  suicide_on_existing_profile ${NEW_PROFILE}\n\n  mv ${DIR}/${OLD_PROFILE} ${DIR}/${NEW_PROFILE}\n}\n\nif [[ $(echo \"${@}\" | egrep \"((^|(^| )-{1,2})help|^-h)($| )\") ]]; then\n  print_help\n  exit 0\nfi\n\nif [[ ${#} -eq 0 ]]; then\n  select_profile\nfi\n\ndeclare -r CMD=${1}; shift\n\nif [[ \"${CMD}\" == \"\" ]]; then\n  echo \"- Bye bye!\"\n  exit 0\nfi\n\nif [[ ! $(validate_command ${CMD}) ]]; then\n  print_help_and_commit_suicide \"Illegal command: ${CMD}\"\nfi\n\nif [[ \"${CMD}\" == \"list\" ]]; then\n  list_profiles \"${@}\"\n  exit 0\nfi\n\n# ... this happens when you do not like case..esac ...\nif [[ \"${CMD}\" == \"connect\" || \"${CMD}\" == \"attach\" || \"${CMD}\" == \"delete\"  || \"${CMD}\" == \"kill\" || \"${CMD}\" == \"logs\" ]]; then\n  if [[ ${#} -ne 1 ]]; then\n    print_help_and_commit_suicide \"Command requires exactly 1 parameter: ${CMD}\"\n  fi\nelif [[ ${CMD} == \"rename\" ]]; then\n  if [[ ${#} -ne 2 ]]; then\n    print_help_and_commit_suicide \"Command requires exactly 2 parameters: ${CMD}\"\n  fi\nelif [[ ${CMD} == \"toggle\" ]]; then\n  if [[ ${#} -ne 0 ]]; then\n    print_help_and_commit_suicide \"Command does not require any parameters: ${CMD}\"\n  fi\n  toggle_attach\n  exit 0\nelse\n  if [[ ${#} -lt 2 ]]; then\n    print_help_and_commit_suicide \"Not enough parameters for the command: ${CMD}\"\n  fi\nfi\n\neval ${CMD}_profile ${@}\n"
        },
        {
          "name": "xiringuito",
          "type": "blob",
          "size": 6.392578125,
          "content": "#!/usr/bin/env bash\n#\n# SSH-based VPN for poors ;)\n#\nset -eo pipefail\n\nexport PATH=\"${PATH}:$(dirname ${0})/helpers\"\nexport WAIT_VERBOSE=true\n\nfunction print_help() {\n  echo \"Usage: ${0} [OPTIONS] [SSH_USER@]SSH_SERVER [NETWORK1, NETWORK2, ... NETWORKx]\"\n  echo\n  echo \"OPTIONS\"\n  echo \"-p SSH_PORT            use non-default SSH port\"\n  echo \"-k PRIVATE_KEY_PATH    use specific SSH private key\"\n  echo \"-f MAX_FAILED_PINGS    fail connection after X ping failures\"\n  echo\n  echo \"-D    do not fetch DNS config from server\"\n  echo \"-X    do not run route discovery\"\n  echo \"-c    use route cache instead of route discovery\"\n  echo \"-h    show this extremely helpful message\"\n  echo\n}\n\ndeclare -r KERNEL=$(uname -s | tr [A-Z] [a-z])\nif [[ ${KERNEL} != linux && ${KERNEL} != darwin ]]; then\n  echo \"Unsupported system: ${KERNEL}\"\n  exit 2\nfi\n\nif [[ ${KERNEL} == darwin ]]; then\n  if [[ ! $(ls -1 /dev/tun[0-9]) ]]; then\n    echo \"MacOSX Virtual Network Interface not installed!\"\n    echo \"Get it here: http://tuntaposx.sourceforge.net/\"\n    exit 3\n  fi\nfi\n\nif [[ ${#} -lt 1 ]]; then\n  print_help\n  exit 1\nfi\n\nwhile getopts \"p:k:f:DXch\" o; do\n  case ${o} in\n    p)\n      SSH_PORT=${OPTARG}\n      if [[ ! ${SSH_PORT} =~ ^[0-9]+$ ]]; then\n        echo \"SSH port should be a number, while this is not: ${SSH_PORT}\"\n        exit 1\n      fi\n      if [[ ${SSH_PORT} -lt 1 || ${SSH_PORT} -gt 65535 ]]; then\n        echo \"Invalid port number: ${SSH_PORT} (should be between 1 and 65535)\"\n        exit 1\n      fi\n      SSH_PORT_OPTS=\"-oPort=${SSH_PORT}\"\n      ;;\n    k)\n      PRIVATE_KEY_PATH=${OPTARG}\n      if [[ ! -f \"${PRIVATE_KEY_PATH}\" ]]; then\n        echo \"Key file does not exist: ${PRIVATE_KEY_PATH}\"\n        exit 1\n      fi\n      unset SSH_AUTH_SOCK\n      SSH_PRIVATE_KEY_OPTS=\"-i ${PRIVATE_KEY_PATH}\"\n      ;;\n    f)\n      MAX_FAILED_PINGS=${OPTARG}\n      if [[ ! ${MAX_FAILED_PINGS} =~ ^[0-9]{1,}$ ]]; then\n        echo \"'-f' option accepts only positive integer values\"\n        exit 1\n      fi\n      if [[ ${MAX_FAILED_PINGS} -eq 0 ]]; then\n        echo \"'-f' option value should be greater then zero\"\n        exit 1\n      fi\n      ;;\n    D)\n      NO_DNS=true\n      ;;\n    X)\n      NO_ROUTE_DISCOVERY=true\n      ;;\n    c)\n      USE_ROUTE_CACHE=true\n      ;;\n    h)\n      print_help\n      exit 0\n      ;;\n    *)\n      print_help\n      exit 1\n  esac\ndone\n\ndeclare -r MAX_FAILED_PINGS=${MAX_FAILED_PINGS-10}\n\nshift $((OPTIND-1))\n\ncd $(dirname ${0})\n\n./scripts/client-preexec.sh\n\ndeclare -r SSH_SERVER=${1}; shift\n\necho -n \"[ (client) sudo check ] \"; sudo true; echo\necho -n \"[ (server) sudo check ] \"; ./scripts/bootstrap-server-sudo.sh ${SSH_PRIVATE_KEY_OPTS} ${SSH_PORT_OPTS} ${SSH_EXTRA_OPTS} ${SSH_SERVER}; echo\n\ndeclare -r ROUTE_CACHE_PATH=~/.xiringuito/routes; mkdir -p ${ROUTE_CACHE_PATH}\ndeclare -r ROUTE_CACHE_FILE=${ROUTE_CACHE_PATH}/${SSH_SERVER}\nif [[ ${#} -gt 0 ]]; then\n  declare -r NETWORKS=${@}\nelif [[ -x ./discover-routes && ! ${NO_ROUTE_DISCOVERY} ]]; then\n  if [[ ${USE_ROUTE_CACHE} != true ]]; then\n    export SSH_PRIVATE_KEY_OPTS\n    export SSH_PORT_OPTS\n    export SSH_EXTRA_OPTS\n    declare -r NETWORKS=$(./discover-routes ${SSH_SERVER} | grep \"^ROUTE:\" | sed 's/.*://')\n    echo \"${NETWORKS}\" >\"${ROUTE_CACHE_FILE}\"\n  else\n    declare -r NETWORKS=$(cat ${ROUTE_CACHE_FILE})\n  fi\nfi\n\ndeclare -r IP_BASE=192.168.245\ndeclare -r TUNNEL_ID_PATH=~/.xiringuito/tunnel_id\ndeclare -r TUNNEL_ID_FILE=${TUNNEL_ID_PATH}/${SSH_SERVER}\n\nif [[ ! -f ${TUNNEL_ID_FILE} ]]; then\n  mkdir -p ${TUNNEL_ID_PATH}\n  let GENERATED_ID=${RANDOM}%50+1\n  echo ${GENERATED_ID} >${TUNNEL_ID_FILE}\nfi\n\ndeclare -r TUNNEL_ID=$(cat ${TUNNEL_ID_FILE})\ndeclare -r REMOTE_PATH=\"/tmp/xiringuito.${TUNNEL_ID}\"\n\ndeclare -r SSH_OPTS=\"-oLogLevel=${SSH_LOG_LEVEL:-ERROR} -oConnectionAttempts=3 -oConnectTimeout=5 ${SSH_PRIVATE_KEY_OPTS} ${SSH_PORT_OPTS} ${SSH_EXTRA_OPTS}\"\n\nif [[ ${KERNEL} == linux ]]; then\n  declare -r LOCAL_TUNNEL_ID=${TUNNEL_ID}\nelse\n  declare -r LOCAL_TUNNEL_ID=$(./scripts/${KERNEL}/get-local-tunnel-id.sh)\nfi\n\ntrap 'exit 130' INT\ntrap teardown EXIT\n\nfunction teardown() {\n  if [[ ! ${SSH_PID} ]]; then\n    sudo ./scripts/${KERNEL}/client-teardown.sh ${$} 0 ${LOCAL_TUNNEL_ID}\n  fi\n}\n\necho \"TUNNEL ID: ${TUNNEL_ID} (local: ${LOCAL_TUNNEL_ID})\"\n\nif [[ ${KERNEL} == linux ]]; then\n  ./scripts/${KERNEL}/client-setup.sh ${TUNNEL_ID} ${IP_BASE}\nfi\n\nssh ${SSH_OPTS} ${SSH_SERVER} mkdir -p ${REMOTE_PATH}\nscp ${SSH_OPTS} ./scripts/server-*.sh ${SSH_SERVER}:${REMOTE_PATH} >/dev/null\n\nssh ${SSH_OPTS} ${SSH_SERVER} ${REMOTE_PATH}/server-setup.sh ${TUNNEL_ID} ${IP_BASE}\n\nsleep 1; echo \"SERVER: ${SSH_SERVER}\"\nset +e\nssh ${SSH_OPTS} ${SSH_SERVER} pkill -f ${REMOTE_PATH}/server-execute.sh &>/dev/null\nset -e\nif [[ ${KERNEL} == linux ]]; then\n  SSH_TUNNEL_CMD=\"ssh\"\nelse\n  SSH_TUNNEL_CMD=\"sudo -E ssh\"\nfi\n${SSH_TUNNEL_CMD} ${SSH_OPTS} -oStrictHostKeyChecking=no -w ${LOCAL_TUNNEL_ID}:${TUNNEL_ID} ${SSH_SERVER} ${REMOTE_PATH}/server-execute.sh ${TUNNEL_ID} ${IP_BASE} ${MAX_FAILED_PINGS} &\nSSH_PID=${!}\nsudo -E ./scripts/${KERNEL}/client-teardown.sh ${$} ${SSH_PID} ${LOCAL_TUNNEL_ID} &\n\nwait_for true 5 \"ip link show dev tun${LOCAL_TUNNEL_ID} || ifconfig tun${LOCAL_TUNNEL_ID}\" &>/dev/null\n\nif [[ ${KERNEL} == darwin ]]; then\n  ./scripts/${KERNEL}/client-setup.sh ${TUNNEL_ID} ${LOCAL_TUNNEL_ID} ${IP_BASE}\nfi\n\nset +e\nfor NETWORK in ${NETWORKS}; do\n  echo \"> ROUTE: ${NETWORK}\"\n  ./scripts/${KERNEL}/client-route.sh ${LOCAL_TUNNEL_ID} ${NETWORK}\ndone\nset -e\n\nif [[ ! ${NO_DNS} && ! -z \"${NETWORKS}\" ]]; then\n  echo\n  echo \"* Will now replace your DNS config with one fetched from the SSH server.\"\n  echo \"* Set enviromental variable 'NO_DNS', if you do not want this to happen.\"\n  REMOTE_RESOLV_CONF=$(ssh ${SSH_OPTS} ${SSH_SERVER} cat /etc/resolv.conf | grep -v \"[#;]\" )\n\n  if [[ \"${REMOTE_RESOLV_CONF}\" =~ nameserver ]]; then\n    echo \"${REMOTE_RESOLV_CONF}\" | ./scripts/client-update-resolv-conf.sh\n\n    if [[ ${KERNEL} == darwin ]]; then\n      ./scripts/${KERNEL}/client-update-macosx-dns.sh\n    fi\n  fi\nfi\n\nset +e\nFAILED_PINGS=0\nwhile [[ ${FAILED_PINGS} -lt ${MAX_FAILED_PINGS} ]]; do\n  [[ $(ps -p ${SSH_PID} | wc -l) -eq 2 ]] || break\n\n  if [[ ${EXIT_AFTER_CONNECT} ]]; then\n    exit 0\n  fi\n\n  ./scripts/client-ping-server.sh ${TUNNEL_ID} ${IP_BASE}\n  if [[ ${?} -ne 0 ]]; then\n    let FAILED_PINGS+=1\n    echo \"- Failed to ping server-side tunnel endpoint... (${FAILED_PINGS}/${MAX_FAILED_PINGS})\"\n  else\n    if [[ ${FAILED_PINGS} -gt 0 ]]; then\n      FAILED_PINGS=0\n      echo \"+ Connectivity restored!\"\n    fi\n  fi\n\n  sleep 1\ndone\n\nteardown\n"
        }
      ]
    }
  ]
}