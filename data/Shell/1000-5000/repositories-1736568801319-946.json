{
  "metadata": {
    "timestamp": 1736568801319,
    "page": 946,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wahyd4/aria2-ariang-docker",
      "stars": 1062,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0302734375,
          "content": "conf/rclone.conf\n.devcontainer\n"
        },
        {
          "name": "APP_VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "6.0.1\n"
        },
        {
          "name": "Caddyfile",
          "type": "blob",
          "size": 0.4755859375,
          "content": "{$DOMAIN}\n\nlog {\n\tlevel {env.CADDY_LOG_LEVEL}\n\toutput stderr\n}\n\nredir /ui / 301\nredir /ui/ / 301\nredir /rclone /rclone/ 301\nredir /files /files/ 301\n\nreverse_proxy /rpc 127.0.0.1:6800\nreverse_proxy /jsonrpc 127.0.0.1:6800\n\nroute /rclone/* {\n\turi strip_prefix /rclone\n\treverse_proxy 127.0.0.1:5572\n}\n\nroute /files/* {\n\turi strip_prefix /files\n\treverse_proxy 127.0.0.1:8080\n}\n\nroute /ping {\n\trespond \"app version: {env.APP_VERSION}\"\n}\n\nroot * /usr/local/www/aria2\nfile_server\n\nencode gzip\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.490234375,
          "content": "FROM golang AS build-forego\n\nRUN apt update && apt install -y git\n\nWORKDIR /app\n\nRUN git clone https://github.com/wahyd4/forego.git \\\n    && cd forego \\\n    && git checkout fix-go-mod \\\n    && go mod download \\\n    && go build -o forego \\\n    && chmod +x forego\n\nFROM debian:stable-slim\n\nLABEL AUTHOR=Junv<wahyd4@gmail.com>\n\nWORKDIR /app\n\nENV RPC_SECRET=\"\"\nENV ENABLE_AUTH=false\nENV ENABLE_RCLONE=true\nENV DOMAIN=:80\nENV ARIA2_USER=user\nENV ARIA2_PWD=password\nENV ARIA2_SSL=false\nENV ARIA2_EXTERNAL_PORT=80\nENV PUID=1000\nENV PGID=1000\nENV CADDYPATH=/app\nENV RCLONE_CONFIG=/app/conf/rclone.conf\nENV XDG_DATA_HOME=/app/.caddy/data\nENV XDG_CONFIG_HOME=/app/.caddy/config\nENV XDG_CACHE_HOME=/app/.cache\nENV RCLONE_CONFIG_BASE64=\"\"\nENV ENABLE_APP_CHECKER=true\nENV CADDY_LOG_LEVEL=INFO\nENV RCLONE_AUTO_UPLOAD_PROVIDER=\nENV RCLONE_AUTO_UPLOAD_REMOTE_PATH=/downloads\nENV RCLONE_AUTO_UPLOAD_FILE_MIN_SIZE=1K\nENV RCLONE_AUTO_UPLOAD_FILE_MAX_SIZE=100G\nENV FIX_DATA_VOLUME_PERMISSIONS=false\n\nADD install.sh aria2c.sh caddy.sh Procfile init.sh start.sh rclone.sh new-version-checker.sh APP_VERSION /app/\nADD conf /app/conf\nADD Caddyfile SecureCaddyfile HerokuCaddyfile /usr/local/caddy/\n\nCOPY --from=build-forego /app/forego/forego /app\n\nRUN ./install.sh\n\nRUN rm ./install.sh\n\n# For config files\nVOLUME /app/conf/\n\n# For file downloading\nVOLUME /data\n\n# For rclone cache and aria2 DHT files\nVOLUME /app/.cache\n\nEXPOSE 80 443 6881\n\nHEALTHCHECK --interval=30s --timeout=3s \\\n  CMD curl -f http://localhost/ping || exit 1\n\nCMD [\"./start.sh\"]\n"
        },
        {
          "name": "HerokuCaddyfile",
          "type": "blob",
          "size": 0.486328125,
          "content": "{\n\tadmin off\n\tauto_https off\n}\n\n:PORT\n\nbasicauth / {\n\tARIA2_USER ARIA2_PWD_ENCRYPT\n}\n\nredir /ui / 301\nredir /ui/ / 301\nredir /rclone /rclone/ 301\nredir /files /files/ 301\n\nreverse_proxy /jsonrpc 127.0.0.1:6800\n\nroute /rclone/* {\n\turi strip_prefix /rclone\n\treverse_proxy 127.0.0.1:5572\n}\n\nroute /files/* {\n\turi strip_prefix /files\n\treverse_proxy 127.0.0.1:8080\n}\n\nroute /ping {\n\trespond \"app version: {env.APP_VERSION}\"\n}\n\nroot * /usr/local/www/aria2\nfile_server\n\nencode gzip\nlog {\n\toutput stderr\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0791015625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2019] [Junwei Zhao]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.193359375,
          "content": "caddy: /app/caddy.sh\nfilebrowser: /app/filebrowser -p 8080 -d /app/filebrowser.db -r /data -b /files\naria2c: /app/aria2c.sh\nrclone: /app/rclone.sh\nnewer_version_checker: /app/new-version-checker.sh\n"
        },
        {
          "name": "README.CN.md",
          "type": "blob",
          "size": 9.5615234375,
          "content": "Aria2 + AriaNg\n\n[English](https://github.com/wahyd4/aria2-ariang-docker/blob/master/README.md) | 简体中文\n\n> 🚨 注意：由于本人精力有限，现决定将主要精力放在更新功能，和英文版本文档。中文版本文档即日起暂停更新，欢迎志愿者对英文说明进行翻译或者赞助本项目，助力我投入更多时间。谢谢。（2022年4月19日）\n\n[![](https://images.microbadger.com/badges/image/wahyd4/aria2-ui.svg)](https://microbadger.com/images/wahyd4/aria2-ui \"Get your own image badge on microbadger.com\")\n[![Docker Pulls](https://img.shields.io/docker/pulls/wahyd4/aria2-ui.svg)](https://hub.docker.com/r/wahyd4/aria2-ui/)\n[![Github Build](https://github.com/wahyd4/aria2-ariang-docker/workflows/Docker%20Image%20CI/badge.svg)](https://github.com/wahyd4/aria2-ariang-docker/actions)\n\n\n[![Page Views Count](https://badges.toozhao.com/badges/01EJ791D8BB43PDS8D7PP7H0YE/green.svg)](https://badges.toozhao.com/stats/01EJ791D8BB43PDS8D7PP7H0YE \"Get your own page views count badge on badges.toozhao.com\")\n\n**如果你喜欢这个项目，请考虑微信打赏，让我更有动力来不断更新，谢谢！**\n\n<img src=\"https://raw.githubusercontent.com/wahyd4/work-in-australia/766592ac6318027d7b3c334d8c50ca80818eeff8/wepay.jpg\" alt=\"buy me a drink\" width=\"120\"/>\n\n\n本镜像包含 Aria2、AriaNg 和File Manager，主要方便那些用户期望只运行一个镜像就能实现图形化下载文件和在线播放文件。（类似离线下载的功能），只使用一个 Docker 镜像也方便用户在群晖NAS 中运行本程序。\n\n- [功能特性](#功能特性)\n- [推荐使用的docker image tag](#推荐使用的docker-image-tag)\n- [安装与运行](#安装与运行)\n  - [快速运行](#快速运行)\n  - [开启所有功能](#开启所有功能)\n  - [使用docker-compose 运行](#使用docker-compose-运行)\n  - [支持的 Docker 环境变量](#支持的-docker-环境变量)\n  - [支持的 Docker volume 属性](#支持的-docker-volume-属性)\n- [自动 SSL](#自动-ssl)\n- [自行构建镜像](#自行构建镜像)\n- [Docker Hub](#docker-hub)\n- [在 Kubernetes 里面运行 (我的最爱)](#在-kubernetes-里面运行-我的最爱)\n- [使用 Docker compose 来运行](#使用-docker-compose-来运行)\n- [常见问题](#常见问题)\n\nAriaNG\n![Screenshot](https://github.com/wahyd4/aria2-ariang-x-docker-compose/raw/master/images/ariang.jpg)\n\nFile Browser\n![File Browser](https://github.com/wahyd4/aria2-ariang-docker/raw/master/filemanager.png)\n\n## 功能特性\n\n  * [Aria2](https://aria2.github.io) 文件下载工具(支持SSL )\n  * [AriaNg](https://github.com/mayswind/AriaNg) 通过 UI 来操作，下载文件\n  * [Rclone](https://rclone.org) 同步文件到云盘\n  * 自动 HTTPS （Let's Encrypt）\n  * 支持绑定自定义用户ID，可以主机上的非`root`用户，也可以管理下载的文件\n  * Basic Auth 用户认证\n  * 文件管理和视频播放 ([FileBrowser](https://filebrowser.org/)，注意默认情况下，只能访问和管理 `/data` 目录下的文件)\n  * 支持ARM CPU 架构，因此可以在树莓派等设备上运行，\n\n## 推荐使用的docker image tag\n\n* wahyd4/aria2-ui:latest\n\n> Docker会为你自动选择对应CPU平台的image. e.g. arm64v8 或者 x86_64 平台\n\n## 安装与运行\n\n### 快速运行\n\n```bash\n  docker buildx build --platform linux/arm/v7,linux/arm64,linux/amd64 -t aria2-ui .\n```\n\n* Aria2: <http://yourip>\n* Filebrowser: <http://yourip/files>\n* Rclone: <http://yourip/rclone>\n* 请使用 admin/admin 进行登录Filebrowser, 在如果没有修改`ARIA2_USER`,`ARIA2_PWD`的情况下，请使用`user`/`password`登录`Rclone`\n### 开启所有功能\n```bash\n  docker run -d --name ariang \\\n  -p 80:80 \\\n  -p 443:443 \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e ENABLE_AUTH=true \\\n  -e RPC_SECRET=Hello \\\n  -e DOMAIN=https://example.com \\\n  -e ARIA2_SSL=false \\\n  -e ARIA2_USER=user \\\n  -e ARIA2_PWD=pwd \\\n  -e ARIA2_EXTERNAL_PORT=443 \\\n  -v /yourdata:/data \\\n  -v /app/a.db:/app/filebrowser.db \\\n  -v /yoursslkeys/:/app/conf/key \\\n  -v <conf files folder>:/app/conf \\\n  wahyd4/aria2-ui\n```\n### 使用docker-compose 运行\n\n如果你不想记住那些命令行，你也可以使用docker-compose来将配置放在`docker-compose.yaml`文件中\n```yaml\nversion: \"3.5\"\nservices:\n  aria2-ui:\n    restart: unless-stopped\n    image: wahyd4/aria2-ui:latest\n    environment:\n      - ENABLE_AUTH=true\n      - ARIA2_USER=hello\n      - ARIA2_PWD=world\n      - DOMAIN=http://toozhao.com\n    volumes:\n      - ./data:/data\n```\n然后使用 `docker-compose up -d` 运行即可\n\n### 支持的 Docker 环境变量\n\n  * `ENABLE_AUTH` 启用 Basic auth(网页简单认证) 用户认证\n  * `ENABLE_RCLONE` 是否启用 RCLONE，由于Rclone 的初次运行需要从Github 下载文件，由于你懂的原因，可能文件下载失败，进而导致整个程序崩溃,这时你需要设置为`false`\n  * `ARIA2_USER` Basic Auth 用户认证用户名，Rclone也使用该参数\n  * `ARIA2_PWD` Basic Auth 密码，Rclone也使用该参数\n  * `ARIA2_EXTERNAL_PORT` 从外部可以访问到的 Aria2 端口，默认为 HTTP 的`80`\n  * `PUID` 需要绑定主机的Linux用户ID，可以通过`cat /etc/passwd` 查看用户列表， 默认UID 是`1000`\n  * `PGID` 需要绑定的主机的Linux 用户组ID，默认GID 是`1000`\n  * `RPC_SECRET` Aria2 RPC 加密 token\n  * `DOMAIN` 绑定的域名, 当绑定的域名为`HTTPS`时，即为启用`HTTPS`， 例： `DOMAIN=https://toozhao.com`\n  * `RCLONE_CONFIG_BASE64` 通过`base64` 字符串的形式配置rclone.conf。主要给在Heroku平台上运行时使用，请使用命令行 `cat /app/conf/rclone.conf | base64` 或者其他任何在线base64在线工具 [比如这个](https://www.base64encode.org/)来把`rclone.conf`的内容生成`base64`字符串。在使用本环境变量的同时，请确保`ENABLE_RCLONE`设置为`true`。\n  * `ENABLE_APP_CHECKER`，默认情况下本程序会每天向远程服务器发送一次GET请求，以检查是否有新版本的镜像。该功能可以让你及时获取新功能和相关安全隐患的修复的推送提醒。你也可以选择将该环境变量设置为`false`来禁用该功能。注意该功能启用下，依然需要手动更新镜像来完成升级。\n\n\n### 支持的 Docker volume 属性\n  * `/data` 用来放置所有下载的文件的目录\n  * `/app/conf/key` 用户来放置 Aria2 SSL `certificate`证书和 `key` 文件. `注意`: 证书的名字必须是 `aria2.crt`， Key 文件的名字必须是 `aria2.key`\n  * `/app/conf` 该目录下可以放置你的自定义`aria2.conf`配置文件，`aria2.session`，且必须包含这两个文件。第一次使用`aria2.session`时，创建一个空文件即可，该文件会包含aria2当前的下载列表，这样即使容器被销毁也不用担心文件列表丢失了。你也可以直接拷贝当前项目下`conf`目录中的两个文件并使用。如需映射rclone.conf到容器内，请将其就放置于该目录下。因此配置文件目录支持的所有配置文件为：\n    * aria2.conf\n    * aria2.session\n    * rclone.conf\n  * `/app/filebrowser.db` File Browser 的内嵌数据库，升级Docker 镜像也不用担心之前的设置丢失。请确保在宿主机先创建一个空文件再使用。\n\n## 自动 SSL\n\n请在绑定域名前，设置`DNS`的一条`A`记录，将运行docker的主机IP绑定到该域名。然后你仅仅需要在运行时添加`e`设置即可。\n\n```bash\ndocker run -d --name aria2-ui -p 80:80 -p 443:443 -e DOMAIN=https://toozhao.com wahyd4/aria2-ui\n```\n\n## 自行构建镜像\n\n```\ndocker build -t aria2-ui .\n```\n\n## Docker Hub\n\n  <https://hub.docker.com/r/wahyd4/aria2-ui/>\n\n## 在 Kubernetes 里面运行 (我的最爱)\n\n首先，在Kubernetes 里面运行本Docker 镜像比在Docker 里面更加复杂，需要更多的相关知识，但是也更加有意思，给你带来更多的折腾之后的满足。\n你可以使用`minikube`，Docker 桌面应用自带Kubernetes 或者 使用`kubeadm`来安装Kubernetes，然后你需要根据自己的需要修改 [k8s-manifest.yaml](k8s-manifest.yaml) 来满足你的需要的需求。比如：\n\n* NFS PV provider(使用NAS 作为容器存储)\n* Ingress 访问, Oauth 登录灯其他访问控制\n* VPN (让数据访问更加安全)\n* 其他的一些 Sidecars\n\n## 使用 Docker compose 来运行\n\n  请参考 <https://github.com/wahyd4/aria2-ariang-x-docker-compose>\n\n## 常见问题\n  1. 当你以非其他`80` 端口或以启用了HTTPS`443`端口运行程序时，会出现`Aria2 状态 未连接`的错误，这是因为在最新版本里面，我们去掉aria2的独立6800端口，转而使用和网站同一个端口。你可以设置`ARIA2_EXTERNAL_PORT`后重建你的容器。\n  2. 下载的BT或者磁力完全没有速度怎么办？ 建议先下载一个热门的BT种子文件，而不是磁力链接。这样可以帮助缓存DHT文件，渐渐地，速度就会起来了。比如试试下载树莓派操作系统的BT种子？[前往下载](https://www.raspberrypi.org/downloads/raspbian/)\n  3. 如果你遇到了和 `setcap` 相关的错误，很大程度说明你说运行的Linux不支持使用非`root`用户来运行本Docker 镜像，因此请显式地设置环境变量`PUID`  `PGID` 为 `0` ，也就是使用`root` 来运行\n  4. 如何配置`Rclone`? 如果你想连接`Google Drive` 类似的云存储平台，很遗憾你不能通过浏览器配置，因为网页版本`Oauth` 方式在这里是用不了的，你只能通过命令行的形式来配置，即`rclone config`. 详请请参考官网 [Configuring rclone on a remote / headless machine](https://rclone.org/remote_setup) 以及详细步骤请参考 [issue](https://github.com/wahyd4/aria2-ariang-docker/issues/118)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.2021484375,
          "content": "Aria2 + AriaNg + Filebrowser\n\nEnglish | [简体中文](https://github.com/wahyd4/aria2-ariang-docker/blob/master/README.CN.md)\n\n[![](https://images.microbadger.com/badges/image/wahyd4/aria2-ui.svg)](https://microbadger.com/images/wahyd4/aria2-ui \"Get your own image badge on microbadger.com\")\n[![Docker Pulls](https://img.shields.io/docker/pulls/wahyd4/aria2-ui.svg)](https://hub.docker.com/r/wahyd4/aria2-ui/)\n[![Github Build](https://github.com/wahyd4/aria2-ariang-docker/actions/workflows/dockerimage.yml/badge.svg)](https://github.com/wahyd4/aria2-ariang-docker/actions)\n\n[![Page Views Count](https://badges.toozhao.com/svg/aria2-ariang-docker)](https://badges.toozhao.com/stats/aria2-ariang-docker \"Page Views Count\")\n\n\n\n**If you like this project, please consider [sponsoring me](https://github.com/sponsors/wahyd4) / 如果喜欢本项目，请考虑打赏，谢谢！**\n\n<img src=\"https://raw.githubusercontent.com/wahyd4/work-in-australia/766592ac6318027d7b3c334d8c50ca80818eeff8/wepay.jpg\" alt=\"buy me a drink\" width=\"120\"/>\n\n- [Features](#features)\n- [Recommended versions](#recommended-versions)\n- [How to run](#how-to-run)\n  - [Quick run](#quick-run)\n  - [Full features run](#full-features-run)\n  - [Run with docker-compose](#run-with-docker-compose)\n  - [Supported Environment Variables](#supported-environment-variables)\n  - [Supported Volumes](#supported-volumes)\n- [Auto HTTPS enabling](#auto-https-enabling)\n- [Download Automation 🤖](#download-automation-)\n  - [Download file through iPhone/Mac Shortcuts app.](#download-file-through-iphonemac-shortcuts-app)\n  - [Download file through cURL](#download-file-through-curl)\n- [Build the image by yourself](#build-the-image-by-yourself)\n- [Docker Hub](#docker-hub)\n- [Running it on Kubernetes (My favorite)](#running-it-on-kubernetes-my-favorite)\n- [Running it with Docker compose](#running-it-with-docker-compose)\n- [FAQ](#faq)\n\nOne Docker image for file downloading, managing, sharing, as well as video playing and evening cloud storage synchronization.\n\nFurthermore, it's pretty small and ARM CPU compatible which means you can also run it on Raspberry Pi🍓.\n\nLast but not least, Auto HTTPS can't be more easy!\n\nAriaNG\n![Screenshot](https://github.com/wahyd4/aria2-ariang-x-docker-compose/raw/master/images/ariang.jpg)\n\nFile Browser\n![File Browser](https://github.com/wahyd4/aria2-ariang-docker/raw/master/filemanager.png)\n\n## Features\n\n  * [Aria2 (SSL support)](https://aria2.github.io)\n  * [AriaNg](https://github.com/mayswind/AriaNg)\n  * [Rclone](https://rclone.org/)\n  * [File Browser](https://filebrowser.org/): Files mangement and videos playing\n  * Auto HTTPS （Let's Encrypt）\n  * Bind non root user into container, so non root user can also manage downloaded files.\n  * Basic Auth\n  * Support ARM CPUs as well, all supported CPU platforms can be found [here](https://cloud.docker.com/repository/docker/wahyd4/aria2-ui/tags)\n  * Cloud Storage platforms synchronization\n  * Auto uploading files to 3rd party Cloud storage providers via Rclone after files been downloaded.\n\n## Recommended versions\n\n* wahyd4/aria2-ui:latest\n\n> Docker will pick the the proper ARCH for you. e.g. arm64v8 or x86_64\n\n## How to run\n\n### Quick run\n\n```shell\n  docker run -d --name aria2-ui -p 8000:80 wahyd4/aria2-ui\n```\n\n* Aria2: <http://yourip:8000>\n* FileManger: <http://yourip:8000/files>\n* Rclone: <http://yourip:8000/rclone>\n* Please use `admin`/`admin` as username and password to login `Filebrowser` for the first time. And use `user`/`password` to login `Rclone` if you don't update `ARIA2_USER` and `ARIA2_PWD`\n\n### Full features run\n\n```bash\n  docker run -d --name ariang \\\n  -p 80:80 \\\n  -p 443:443 \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e ENABLE_AUTH=true \\\n  -e RPC_SECRET=Hello \\\n  -e DOMAIN=https://example.com \\\n  -e ARIA2_SSL=false \\\n  -e ARIA2_USER=user \\\n  -e ARIA2_PWD=password \\\n  -e ARIA2_EXTERNAL_PORT=443 \\\n  -e CADDY_LOG_LEVEL=ERROR \\\n  -v /yourdata:/data \\\n  -v /app/.cache:/app/.cache \\\n  -v /app/a.db:/app/filebrowser.db \\\n  -v /to_yoursslkeys/:/app/conf/key \\\n  -v <conf files folder>:/app/conf \\\n  wahyd4/aria2-ui\n```\n### Run with docker-compose\n\nIf you would like to get rid of those annoying command line commands, then just put the following sample content into `docker-compose.yaml`\n```yaml\nversion: \"3.5\"\nservices:\n  aria2-ui:\n    restart: unless-stopped\n    image: wahyd4/aria2-ui:latest\n    environment:\n      - ENABLE_AUTH=true\n      - ARIA2_USER=hello\n      - ARIA2_PWD=world\n      - DOMAIN=http://toozhao.com\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./data:/data\n```\nThen simply run `docker-compose up -d`, that's it!\n\n### Supported Environment Variables\n| ENV | Description|\n|:---|:---|\n| `ENABLE_AUTH` | Whether to enable Basic auth |\n| `ENABLE_RCLONE` | Whether to disable Rclone, if you running this container offline or do not have stable connection to Github, please set to `false`\n| `ARIA2_USER` | Basic Auth username, Rclone GUI uses it as well. |\n| `ARIA2_PWD` | Basic Auth password, Rclone GUI uses it as well. |\n| `ARIA2_EXTERNAL_PORT` | The Aria2 port which exposed to public to access to |\n| `PUID` | Bind Linux UID into container which means you can use non `root` user to manage downloaded files, default UID is `1000` |\n| `PGID` | Bind Linux GID into container, default GID is 1000 |\n| `RPC_SECRET` | The Aria2 RPC secret token |\n| `DOMAIN` | The domain you'd like to bind, when domain is a `https://` thing, then auto TLS feature will be enabled |\n| `RCLONE_CONFIG_BASE64` | Inject and config Rclone through `base64` string, which is the only way to use Rclone on Heroku. Please use `cat /app/conf/rclone.conf \\| base64` or any base64 online tools such as [this](https://www.base64encode.org/) to encode your `rclone.conf` as bse64 string. Note, you need to set `ENABLE_RCLONE` to true as well. |\n| `ENABLE_APP_CHECKER` | By default it's set to `true` to check if any new docker image version release on daily basis, which can help you get notification when new features released as well as some security vulnerabilities get fixed. You can set it to `false` to disable this feature. Note: you still need to manually pull the new image version and re run the docker container to complete upgrading. |\n| `CADDY_LOG_LEVEL` | For specifying the log level of Caddy, set it to `WARN` or`ERROR` to reduce logs. Default: `INFO` |\n| `RCLONE_AUTO_UPLOAD_PROVIDER` | The Rclone remote storage provider name, which can be found under `Rclone -> Configs`, default `\"\"`, which means auto upload is disabled. When the value is not empty, then the files will be attempted to be uploaded.|\n| `RCLONE_AUTO_UPLOAD_REMOTE_PATH` | The file folder in remote cloud storage provider, default `/downloads`|\n| `RCLONE_AUTO_UPLOAD_FILE_MIN_SIZE` | Set the minimum file size of auto uploader, files smaller than it won't be uploaded, default `1K`  |\n| `RCLONE_AUTO_UPLOAD_FILE_MAX_SIZE` | Set the limit of the Max file can be uploaded to 3rd party storage provider, default `100G`. |\n| `FIX_DATA_VOLUME_PERMISSIONS` | Default value is `false`. When set to `true`, the container will run `chown -R` command against `/data` folder and `PUID` and `PGID` you set. Please set it to `true` when container complains you don't have enough permissions to manage the files and folders you mounted.|\n\n\n### Supported Volumes\n\n| Mountable folder | Description|\n|:---|:---|\n| `/data` | The folder contains all the files you download. |\n| `/app/conf/key` | The folder which stores Aria2 SSL `certificate` and `key` |file. `Notice`: The certificate file should be named `aria2.crt` and the key file should be named `aria2.key` |\n| `/app/conf` | The Aria2 configuration and file session folder. 🚨Please make sure you have `aria2.conf` and `aria2.session` file exist on your host, when yout mount /app/conf. For the first time `aria2.session` just need to be a empty file can be appended. You can also user the templates for these two file in the `conf` folder of this project. Please put your `rclone.conf` in this folder as well if you'd mount it to Rclone. So all the config files supported in this folder are: `aria2.conf`, `aria2.session`, `rclone.conf`. 🚨Warning🚨: if you don't mount `/app/conf`, whenever the container restarts, you'll lose your downloading progress. |\n|`/app/conf/aria2.conf` | See description above👆🏼 |\n|`/app/conf/aria2.session` | See description above👆🏼 |\n|`/app/conf/rclone.conf` | See description above👆🏼 |\n| `/app/conf/auto-upload.sh` | The bash script to be used for uploading downloaded files to remote storage provider via Rclone, mount your own script if you want to have custom logic. |\n| `/app/filebrowser.db` | File Browser settings database, make sure you make a empty file first on your host. |\n| `/app/.cache` | The folder for storing rclone caches and [aria2 DHT files](https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-dht-file-path) |\n\n\n## Auto HTTPS enabling\n\nMake sure you have added proper `A` record point to the host you running to your domain `DNS` record list, then just add `e` option to bind the `https` domain when you run the image\n\n```bash\ndocker run -d --name aria2-ui -p 80:80 -p 443:443 -e DOMAIN=https://toozhao.com wahyd4/aria2-ui\n```\n## Download Automation 🤖\n\n### Download file through iPhone/Mac Shortcuts app.\n\nFirst [Download Shortcut](https://www.icloud.com/shortcuts/7483b8cec7484c0f98b72882d0f1e3e2), then follow the promots to setup aria2-ui URL and RPC_SECRET. Then you are all ready to go, just to run the shortcut and provide the file URL which you want to download or the magnet/torrent file URL.\n\n### Download file through cURL\n\n```bash\ncurl http://<ip>:<port>/jsonrpc -d \"{\\\"jsonrcp\\\":\\\"2.0\\\",\\\"id\\\":\\\"someID\\\",\\\"method\\\":\\\"aria2.addUri\\\",\\\"params\\\":[\\\"token:someToken\\\",[\\\"http://some_file_url\\\"],{\\\"dir\\\":\\\"/data/downloads\\\"}]}\"\n```\n\n## Build the image by yourself\n\n```bash\n docker buildx build --platform linux/arm/v7,linux/arm64,linux/amd64 -t aria2-ui .\n```\n\n## Docker Hub\n\n  <https://hub.docker.com/r/wahyd4/aria2-ui/>\n\n## Running it on Kubernetes (My favorite)\n\nFirst of all, I have to say running this docker image on Kubernetes is more challenging and requires more knowledges than running it in raw Docker, but which is more powerful.\nI couldn't tell you how to run it in Kubernetes step by step, but once you have a running Kubernetes cluster(You can install Kubernetes via `minikube`, `Docker desktop app`, `kubeadm` and many other tools.), then you can modify the [k8s-manifest.yaml](k8s-manifest.yaml) to satisfy all your requirements. Such as:\n\n* NFS PV provider(Use your NAS as storage)\n* Ingress access, Oauth login, more access controls via Nginx etc.\n* VPN tunnel (Secure your traffic)\n* Sidecars and so on.\n\n## Running it with Docker compose\n\n  Please refer <https://github.com/wahyd4/aria2-ariang-x-docker-compose>\n\n\n\n## FAQ\n  1. When you running the docker image with non `80` port or you have HTTPS enabled, you will meet the error says `Aria2 Status Disconnected`, then you will need to set `ARIA2_EXTERNAL_PORT` and recreate your container.\n  2. If there is no speed at all when you downloading a BitTorrent file, please try to use a popular torrent file first to help the application to cache `DHT` file. Then the speed should get fast and fast, as well as downloading other links.\n  3. If you see any errors related to `setcap` which probably means the Linux you are running doesn't support running this application with `non-root` user. So please specify the `PUID` and `PGID` to `0` explicitly to use `root` user to run it.\n  4. How can I get `Rclone` authenticated? Due to Rclone is running in this docker image only as a component rather than an application, you can only interact with it via `/rclone` endpoint, and no other ports. So the web browser authentication mechanism doesn't work here. Please configure Rclone through command line within the container. You can follow the official doc [Configuring rclone on a remote / headless machine](https://rclone.org/remote_setup) or this [issue](https://github.com/wahyd4/aria2-ariang-docker/issues/118)\n  5. Why the app stopped working when I have `- v /<some-folder>:/app/conf` mounted. It happens when you mount the entire `/app/conf` folder but you don't have any files under that folder on your host. To fix this issue, please simply copy all files under [`conf`](https://github.com/wahyd4/aria2-ariang-docker/tree/master/conf) folder to your local folder that you mount to `/app/conf` and then rerun the container.\n"
        },
        {
          "name": "SecureCaddyfile",
          "type": "blob",
          "size": 0.521484375,
          "content": "{$DOMAIN}\n\nlog {\n\tlevel {env.CADDY_LOG_LEVEL}\n\toutput stderr\n}\n\nbasicauth / {\n\tARIA2_USER ARIA2_PWD_ENCRYPT\n}\n\nredir /ui / 301\nredir /ui/ / 301\nredir /rclone /rclone/ 301\nredir /files /files/ 301\n\nreverse_proxy /rpc 127.0.0.1:6800\nreverse_proxy /jsonrpc 127.0.0.1:6800\n\nroute /rclone/* {\n\turi strip_prefix /rclone\n\treverse_proxy 127.0.0.1:5572\n}\n\nroute /files/* {\n\turi strip_prefix /files\n\treverse_proxy 127.0.0.1:8080\n}\n\nroute /ping {\n\trespond \"app version: {env.APP_VERSION}\"\n}\n\nroot * /usr/local/www/aria2\nfile_server\n\nencode gzip\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 1.302734375,
          "content": "{\n  \"name\": \"wahyd4/aria2-ariang-docker demo\",\n  \"description\": \"A demo of Aria2 + AriaNg + Filebrowser + Rclone\",\n  \"repository\": \"https://github.com/wahyd4/aria2-ariang-docker\",\n  \"keywords\": [\"docker\", \"aria2\", \"rclone\", \"fllebrowser\", \"ariang\"],\n  \"stack\": \"container\",\n  \"success_url\": \"/\",\n  \"env\": {\n    \"ENABLE_AUTH\": {\n      \"description\": \"This value must be heroku when running in Heroku\",\n      \"value\": \"heroku\",\n      \"required\": false\n    },\n    \"RCLONE_CONFIG_BASE64\": {\n      \"description\": \"This value is the base64 string of your preconfigured /app/conf/rclone.conf content\",\n      \"value\": \"\",\n      \"required\": false\n    },\n    \"ARIA2_USER\": {\n      \"description\": \"Username to login to AriaNg\",\n      \"value\": \"user\",\n      \"required\": false\n    },\n    \"ARIA2_PWD\": {\n      \"description\": \"Password to login to AriaNg\",\n      \"value\": \"password\",\n      \"required\": false\n    },\n    \"ARIA2_EXTERNAL_PORT\": {\n      \"description\": \"External port for apps, it should be 443 when running in Heroku\",\n      \"value\": \"443\",\n      \"required\": false\n    },\n    \"PUID\": {\n      \"description\": \"The Linux user's ID that to run the app\",\n      \"value\": \"0\",\n      \"required\": false\n    },\n    \"PGID\": {\n      \"description\": \"The Linux group's ID that to run the app\",\n      \"value\": \"0\",\n      \"required\": false\n    }\n  }\n}\n"
        },
        {
          "name": "aria2c.sh",
          "type": "blob",
          "size": 0.9482421875,
          "content": "#! /bin/bash -eu\n\nsed -i 's/6800/'\"${ARIA2_EXTERNAL_PORT}\"'/g' /usr/local/www/aria2/js/aria-ng*.js\nRPC_SECRET_BASE64=$(echo -n ${RPC_SECRET} | base64)\nsed -i 's/secret:\\\"\\\"/secret:\\\"'\"${RPC_SECRET_BASE64}\"'\\\"/g' /usr/local/www/aria2/js/aria-ng*.js\n\nif [[ \"${ARIA2_SSL}\" = \"true\" ]]; then\n  echo \"[INFO] Start aria2 with secure config and rpc-secret\"\n\n  /usr/bin/aria2c --conf-path=\"/app/conf/aria2.conf\" \\\n    --enable-rpc --rpc-listen-all \\\n    --rpc-certificate=/app/conf/key/aria2.crt \\\n    --rpc-private-key=/app/conf/key/aria2.key \\\n    --rpc-secret=\"${RPC_SECRET}\" --rpc-secure\n\nelif [[ \"${ARIA2_SSL}\" = \"false\" ]] && [[ \"${RPC_SECRET}\" != \"\" ]]; then\n  echo \"[INFO] Start aria2 with rpc-secret\"\n  /usr/bin/aria2c --conf-path=\"/app/conf/aria2.conf\" \\\n    --enable-rpc \\\n    --rpc-listen-all \\\n    --rpc-secret=\"${RPC_SECRET}\"\nelse\n  echo \"[INFO] Start aria2 with standard mode\"\n  /usr/bin/aria2c --conf-path=\"/app/conf/aria2.conf\" --enable-rpc --rpc-listen-all\n\nfi\n"
        },
        {
          "name": "caddy.sh",
          "type": "blob",
          "size": 0.859375,
          "content": "#! /bin/bash -eu\n\necho \"[INFO] Run aria2c and ariaNG\"\n\necho \"[INFO] Generate basic auth password for caddy\"\nARIA2_PWD_ENCRYPT=$(caddy hash-password --plaintext ${ARIA2_PWD})\n\ncase $ENABLE_AUTH in\ntrue)\n  echo \"[INFO] Use Basic Auth config file \"\n  export CADDY_FILE=/usr/local/caddy/SecureCaddyfile\n  sed -i \"s#ARIA2_USER#${ARIA2_USER}#g\" ${CADDY_FILE}\n  sed -i \"s#ARIA2_PWD_ENCRYPT#${ARIA2_PWD_ENCRYPT}#g\" ${CADDY_FILE}\n  ;;\n\nheroku)\n  echo \"[INFO] Run Caddy with Heroku mode\"\n  export CADDY_FILE=/usr/local/caddy/HerokuCaddyfile\n  sed -i \"s#ARIA2_USER#${ARIA2_USER}#g\" ${CADDY_FILE}\n  sed -i \"s#ARIA2_PWD_ENCRYPT#${ARIA2_PWD_ENCRYPT}#g\" ${CADDY_FILE}\n\n  sed -i 's/PORT/'\"${PORT}\"'/g' ${CADDY_FILE}\n\n  ;;\n*)\n  echo \"[INFO] Use caddy without Basic Auth\"\n  export CADDY_FILE=/usr/local/caddy/Caddyfile\n  ;;\nesac\n\n/usr/local/bin/caddy run --config ${CADDY_FILE} --adapter=caddyfile\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "filemanager.png",
          "type": "blob",
          "size": 29.443359375,
          "content": null
        },
        {
          "name": "heroku.yml",
          "type": "blob",
          "size": 0.0361328125,
          "content": "build:\n  docker:\n    web: Dockerfile\n"
        },
        {
          "name": "init.sh",
          "type": "blob",
          "size": 0.71875,
          "content": "#! /bin/bash -eu\n\necho \"[INFO] Update uid and gid to ${PUID}:${PGID}\"\ngroupmod -o -g \"$PGID\" junv\nusermod -o -u \"$PUID\" junv\n\nmkdir -p /app/.caddy\nmkdir -p /app/.cache\nmkdir -p /app/.cache/aria2\n\necho \"[INFO] Run chown against app related folders and user ${PUID}\"\n\nchown -R junv:junv \\\n         /app \\\n         /app/.caddy \\\n         /app/.cache \\\n         /usr/local \\\n         /var/log\n\nif [[ \"${FIX_DATA_VOLUME_PERMISSIONS}\" = \"true\" ]]; then\n  echo \"[INFO] Setup user ${PUID} proper permissions for /data\"\n  chown -R junv:junv /data\nfi\n\nchmod +x /app/caddy.sh \\\n         /app/rclone.sh \\\n         /app/aria2c.sh\n\necho \"[INFO] Give caddy permissions to use low ports\"\nsetcap cap_net_bind_service=+ep /usr/local/bin/caddy\n\n\"${@-sh}\"\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 2.2890625,
          "content": "#! /bin/sh -eux\n\necho \"[INFO] Set variables for $(arch)\"\n\ncaddy_version=2.7.5\nfilebrowser_version=v2.26.0\nrclone_version=v1.64.2\nariang_version=1.3.6\n\ncase \"$(arch)\" in\n\n   x86_64)\n      platform=linux-amd64\n      caddy_file=caddy_${caddy_version}_linux_amd64.tar.gz\n      rclone_file=rclone-${rclone_version}-${platform}.zip\n     ;;\n   armv7l)\n     platform=linux-armv7\n     caddy_file=caddy_${caddy_version}_linux_armv7.tar.gz\n     rclone_file=rclone-${rclone_version}-linux-arm-v7.zip\n     ;;\n\n   aarch64)\n     platform=linux-arm64\n     caddy_file=caddy_${caddy_version}_linux_arm64.tar.gz\n     rclone_file=rclone-${rclone_version}-${platform}.zip\n     ;;\n\n   *)\n     echo \"[ERROR] unsupported arch $(arch), exit now\"\n     exit 1\n     ;;\nesac\n\nfilebrowser_file=${platform}-filebrowser.tar.gz\nariang_file=AriaNg-${ariang_version}.zip\ngroupadd junv \\\n  && useradd -g junv -m -s /bin/bash junv \\\n  && apt update \\\n  && apt install -y wget curl aria2 tar unzip libcap2-bin runit\\\n  && wget -N https://github.com/caddyserver/caddy/releases/download/v${caddy_version}/${caddy_file} \\\n  && tar -zxf ${caddy_file} \\\n  && mv caddy /usr/local/bin/ \\\n  && rm -rf ${caddy_file} \\\n  && platform=linux-amd64 \\\n  && wget -N https://github.com/filebrowser/filebrowser/releases/download/${filebrowser_version}/${filebrowser_file} \\\n  && tar -zxf ${filebrowser_file} \\\n  && rm -rf ${filebrowser_file} \\\n  && rm LICENSE README.md CHANGELOG.md \\\n  && mkdir -p /usr/local/www \\\n  && mkdir -p /usr/local/www/aria2 \\\n  && rm -rf init /app/*.txt \\\n  && curl -O https://downloads.rclone.org/${rclone_version}/${rclone_file} \\\n  && unzip ${rclone_file} \\\n  && cd rclone-* \\\n  && cp rclone /usr/local/bin/ \\\n  && chown junv:junv /usr/local/bin/rclone \\\n  && chmod 755 /usr/local/bin/rclone \\\n  && rm /app/${rclone_file} \\\n  && rm -rf /app/rclone-* \\\n  && mkdir /usr/local/www/aria2/Download \\\n  && cd /usr/local/www/aria2 \\\n  && chmod +rw /app/conf/aria2.session \\\n  && wget -N --no-check-certificate https://github.com/mayswind/AriaNg/releases/download/${ariang_version}/${ariang_file} \\\n  && unzip ${ariang_file} \\\n  && rm -rf ${ariang_file} \\\n  && chmod -R 755 /usr/local/www/aria2 \\\n  && mkdir -p /data && chown junv:junv /data \\\n  && mkdir -p /data/cloud \\\n  && chown junv:junv /data/cloud \\\n  && ln -s /data/cloud /app \\\n  && apt remove -y unzip\\\n  && apt clean\n"
        },
        {
          "name": "k8s-manifest.yaml",
          "type": "blob",
          "size": 3.66015625,
          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: files\nspec:\n  revisionHistoryLimit: 2\n  selector:\n    matchLabels:\n      app: files\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: files\n    spec:\n      volumes:\n        # - name: config\n        #   persistentVolumeClaim:\n        #     claimName: configs-pv\n        - name: downloads\n          persistentVolumeClaim:\n            claimName: downloads-pv\n      containers:\n        - name: files\n          image: wahyd4/aria2-ui:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n              name: files-port\n              protocol: TCP\n          env:\n           ## Update this to the final port you would use in the browser\n            - name: ARIA2_EXTERNAL_PORT\n              value: \"443\"\n            - name: PUID\n              value: \"1000\"\n            - name: PGID\n              value: \"1000\"\n          volumeMounts:\n            # - name: config\n            #   subPath: aria\n            #   mountPath: /app/conf\n            # - name: config\n            #   subPath: files/filebrowser.db\n            #   mountPath: /app/filebrowser.db\n            - name: downloads\n              mountPath: /data\n          resources:\n            requests:\n              cpu: 150m\n              memory: 256Mi\n            limits:\n              cpu: 400m\n              memory: 1024Mi\n        # An example of encrypting the traffic with some vpn providerm, please update the configurations accordingly\n        # - name: openvpn\n        #   image: qmcgaw/gluetun:latest\n        #   securityContext:\n        #     runAsUser: 0\n        #     privileged: true\n        #     capabilities:\n        #       add: [\"NET_ADMIN\"]\n        #   imagePullPolicy: Always\n        #   env:\n        #     - name: OPENVPN_USER\n        #       value: xxxx\n        #     - name: OPENVPN_PASSWORD\n        #       valueFrom:\n        #         secretKeyRef:\n        #           name: openvpn-password\n        #           key: password\n        #     - name: VPNSP\n        #       value: \"private internet access\"\n        #     - name: PIA_ENCRYPTION\n        #       value: normal\n        #     - name: REGION\n        #       value: \"AU Sydney\"\n        #     - name: TZ\n        #       value: Australia/Melbourne\n        #   resources:\n        #     requests:\n        #       cpu: 100m\n        #       memory: 126Mi\n        #     limits:\n        #       cpu: 100m\n        #       memory: 126Mi\n---\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: files\n  labels:\n    app: files\nspec:\n  type: ClusterIP\n  ports:\n    - port: 80\n      targetPort: files-port\n      protocol: TCP\n      name: web\n  selector:\n    app: files\n\n---\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: downloads-pv\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 100Gi\n  accessModes:\n    - ReadWriteMany\n  hostPath:\n    path: \"/mnt/data\"\n\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: \"downloads-pv\"\nspec:\n  storageClassName: \"manual\"\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 100Gi\n\n\n# ---\n# ingress example\n# apiVersion: networking.k8s.io/v1\n# kind: Ingress\n# metadata:\n#   name: files-ingress\n#   annotations:\n#     kubernetes.io/ingress.class: \"nginx\"\n#     kubernetes.io/tls-acme: \"true\"\n#     cert-manager.io/cluster-issuer: \"letsencrypt-prod\"\n#     nginx.ingress.kubernetes.io/proxy-body-size: 10240m\n# spec:\n#   tls:\n#   - hosts:\n#     - xx.example.com\n#     secretName: files-tls\n#   rules:\n#   - host: xx.example.com\n#     http:\n#       paths:\n#       - path: /\n#         pathType: Prefix\n#         backend:\n#           service:\n#             name: files\n#             port:\n#               number: 80\n"
        },
        {
          "name": "new-version-checker.sh",
          "type": "blob",
          "size": 1.0400390625,
          "content": "#! /bin/bash -u\nsleep 5\n\nif [ \"$ENABLE_APP_CHECKER\" = \"false\" ]; then\n  echo \"[INFO] Skip checking new version\"\n  # Do nothing and just sleep 10 years\n  sleep 315360000\n  exit 0\nfi\n\nset -e\nAPP_VERSION=$(cat APP_VERSION)\nset +e\nwhile true; do\n  echo \"[INFO] $(date -u +'%Y-%m-%dT%H:%M:%SZ') Checking for new version against ${APP_VERSION} ...\"\n  newer_version=$(curl --max-time 6 -s \"https://badges.toozhao.com/val/aria2-ui-docker?version=${APP_VERSION}&arch=$(arch)\")\n  if [[ -z ${newer_version} ]]; then\n    echo \"[WARN] $(date -u +'%Y-%m-%dT%H:%M:%SZ') Failed to check new version.\"\n    sleep 86400\n    continue\n  fi\n\n  if [[ ${newer_version} > ${APP_VERSION} ]]; then\n    echo \"[INFO] $(date -u +'%Y-%m-%dT%H:%M:%SZ') Found newer Docker image version wahyd4/aria2-ui:${newer_version}, please consider to upgrade by using docker pull command to have better user experience.\"\n    # check new version daily\n    sleep 86400\n    continue\n  fi\n  echo \"[INFO] $(date -u +'%Y-%m-%dT%H:%M:%SZ') Congrats, you are using the latest version docker image\"\n  sleep 86400\ndone\n"
        },
        {
          "name": "rclone.sh",
          "type": "blob",
          "size": 0.662109375,
          "content": "#! /bin/bash -eu\n\nif [ \"$RCLONE_CONFIG_BASE64\" != \"\" ]; then\n  echo \"[INFO] Config Rclone from RCLONE_CONFIG_BASE64 env\"\n  echo $RCLONE_CONFIG_BASE64 | base64 -d > /app/conf/rclone.conf\n  echo \"[INFO] Config Rclone from RCLONE_CONFIG_BASE64 completed\"\nfi\n\nif [ \"$ENABLE_RCLONE\" = \"true\" ]; then\n  echo \"[INFO] Start Rclone, please make sure you can connect to Github website. if not, please set docker env ENABLE_RCLONE=false\"\n  rclone rcd --rc-web-gui \\\n    --rc-web-gui-no-open-browser \\\n    --rc-addr :5572 \\\n    --rc-user $ARIA2_USER \\\n    --rc-pass $ARIA2_PWD \\\n    --cache-dir /app/.cache\nelse\n  echo \"[INFO] Skip starting Rclone as it has been disabled\"\n  sleep 3650d\nfi\n"
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 0.1630859375,
          "content": "#!/bin/bash -eu\n\nexport APP_VERSION=$(cat /app/APP_VERSION)\n\nif [ \"$PGID\" != \"0\" ]; then\n  $(dirname $0)/init.sh chpst -u junv ./forego start\nelse\n  ./forego start\nfi\n"
        }
      ]
    }
  ]
}