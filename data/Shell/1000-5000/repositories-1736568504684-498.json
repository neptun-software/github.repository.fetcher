{
  "metadata": {
    "timestamp": 1736568504684,
    "page": 498,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coding/WebIDE",
      "stars": 1714,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "*/.idea/\n*/*.iml\n*.orig\nfrontend/\nfrontend-webjars/\nbackend/\n*.env\n**/*.db\n*/*.ipr\n*/*.iws\n.DS_Store\n*/.git/\n!backend/target/ide-backend.jar\n!backend/src/main/resources/lib\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "*~\nnode_modules/\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2255859375,
          "content": "[submodule \"backend\"]\n\tpath = backend\n\turl = ../WebIDE-Backend.git\n[submodule \"frontend\"]\n\tpath = frontend\n\turl = ../WebIDE-Frontend.git\n[submodule \"frontend-webjars\"]\n\tpath = frontend-webjars\n\turl = ../WebIDE-Frontend-Webjars.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.283203125,
          "content": "dist: trusty\nlanguage: java\njdk:\n- oraclejdk8\n\nservice:\n- docker\n\ncache:\n  directories:\n  - $HOME/.m2\n  - $HOME/docker\n  - $HOME/.yarn-cache\n  - frontend/node_modules\n\nenv:\n  global:\n  - secure: NtkK4A4aYmudQue+KzS/PRyO2+5YkKp9x0r0AFRpZB6F9v+4cX+aWynX1reVQ1By9NmB/F3W9t+hujS2Dm7pIwlzj4oDRzdSda/aakOF6fiJvy41xaa4fGNEDdrvrtzfFHoFCuG7lg8mO5hVAIlwXeLR+XjDQXj6XklgHcjxF5WCEzElN9ZcA8K3b7tU1pxyaGeKTN3Qu+L1xVNkFnfi7sCiLIkXG8LV/0O8al/qow5SAm3gBAIqplSN7o2AKur331IsZD6PfTqPTZJbQMYFkcRZisZ+8J/H+xCHTk/Bf56BpMuJYLr0ScZURznmX5Hhh+JSx4kZnQbgs6F26/c1k1vWy9G1ZMRdepBZm+UG3yobbAKH/Nu4tt47UjBdbkedvRJbLUQQCo/StUE0kqRFa9ykQYltGYPm879NRyZbryEK5LHkwW0CNSZFU1zlToo8q7IH47cZz+kJTDFkYoP/0wOVf9sSCV07tWTnegI7P6YR5s+q7n7XYhVUOcS+x0PERYajIybgU0bJ0r2hQc8kg05YlVOH88wR3BGegKnv0J2kw2IKpENIG6FNRmhIeXi27dTIAfcC4w+1XsqBBQZr6f/HKHgLvMi+Y6lrXV/hGJL1CkiEtkuuUyDF8zC68jfqhvunXAuIZD6FnRkHJBVnKqbcqMYD0BxLae4ic5sRXfI=\n  - secure: HZipPIhxoHUMxO+EsCImjcbaJNsbXTo4NpmBzGm5uv2RdQRTyauePpwNfcFnpZNrCz0e6BfSAxzEZ6HZ+hIViPZUCWBrB3us7XOSd9U9S40a6E4LnfMMfX53awC7BFAoiU5eIrcOAgSppIic0ZaOHdM0BbIFJeU3mUsApHQ9s4fj8pRp38e9PYfAQ7K0zreU5rnEV/cWJhF2G1Qx7jkeiA99tf4ndjNP9L8Olcs/jaN1nxggR7QuT8hTfNJNIVeYBirhudu/5K2TblydBh7CKcmv77N5H6um07SP32oXAOoUESpfEntKS/FgUAMcckYYX1SIsYzMuqZbN60kgmPocppsDp2NARsKn4/EEV1aZe0Dm8udOXipxVaXBCnKXS5mm+zlmmgRY//DCoH8Jk8ULOhqc6Yevj3IMUK4KIL46q4tfaB9ktVVa+a3b/Ljqs0dgsAKC11tx+rUWHjUCX30ixH035H40xOzRw+5DVVyy2KtppNnwKWx+3xBRrwx1zwWBb2p9UsXZ1hEo3c/cCpseuHvbbXYVOoOXRxA2ZtJf5MnjU9Y5K20gBM4qFJ/E2xYJ5LiE5HOLluNECyF6lzIWZeVMp1qic98C662+Hpyj9HnHnDGdwkHyuBBWlsQxyKTiQt9S6HfG0WDQFvS1PF3/9dW4yO8bkrXBTeuBWy9638=\n  - COMMIT=${TRAVIS_COMMIT::8}\n  - DOCKER_CACHE_FILE=${HOME}/docker/cache.tar.gz\n  - REPO=webide/webide\n  - NODE_ENV=prod\n\nbefore_install:\n- sudo apt-get update\n- sudo apt-get -y -o Dpkg::Options::=\"--force-confnew\" install docker-ce\n- nvm install 7\n- nvm use 7\n- if [ -f ${DOCKER_CACHE_FILE} ]; then gunzip -c ${DOCKER_CACHE_FILE} | docker load; fi\n\ninstall: true\n\nscript:\n- set -e\n- cd frontend && yarn && yarn run build\n- cd ../frontend-webjars && mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V\n- cd ../backend && mvn package -DskipTests=true -Dmaven.javadoc.skip=true -B -V\n- cd .. && docker build -f Dockerfile -t $REPO:$COMMIT .\n- if [ -n \"$TRAVIS_TAG\" ]; then docker tag $REPO:$COMMIT $REPO:$TRAVIS_TAG ; docker tag $REPO:$COMMIT $REPO:latest ; docker login -u $DOCKER_USER -p $DOCKER_PASS ; docker push $REPO ; fi\n\nbefore_cache:\n- set -e\n- mkdir -p $(dirname ${DOCKER_CACHE_FILE})\n- docker save $(docker history -q $REPO:$COMMIT | grep -v '<missing>') | gzip > ${DOCKER_CACHE_FILE}\n\nnotifications:\n  slack:\n    on_failure: always\n    on_success: change\n    rooms:\n      secure: htxsb1e6mOjdWfyyL2D46tDSwrZsJZd22/VlVLykoSt4vktIBGBFIyfroc0BAD3Bxn/4LT23q1TXVXafFDwUa9NWUFOTciyn5wWoJfTzC/GZ3fk4c9dLX2zcFf+Nz+2UU4Kyg7v4rvm5DiqfyGPmvzoKHG+GjbdYLUTjWr0jKscP5zDIRWv/0RUiea8kgGR4dQLY+xq2tAmvCZBzNnb20NWNzdWHviTN8sdbQMipeLm3rW8LwMQavU/IWNRn4yMVTtUzz1eE+cG74c0H4RTU7iJh1NQFjaFKZvEGuE3ZnTA7e6WGeA5bHbaYY44fjZEEu5uhixj08huMuK3fEyTu1rNh5bkAowxqrI53RLPHsECq0xF+Y5aZpV5dEx+gvz/dNCWlV8d658H11oBhL3gPQPcouJTMoktW+12kEqeKVRnSm6fXJmhYZHLal+bF9iQZjh2Ask+1hoWvQJbFONlrCHp+XGKzMxSxyqXWV491QIDZIQsBw17qNSD1zQG0dSdHogxl/N5MB7lgCCmjMPrPaD29tqO1a3qJAN/2dw0dW0VBOznixNz+hpBVbUELJJjsu8wlrm1wBFsdwLIwCVjSKJ3CgQPoMcYTI1nCm5vzuUEExfGTArh00uvYG4H7usfF/KbMt4zQkwxEwjihLvnw5G//YwWpG+JIte5BMnSJuFU=\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.599609375,
          "content": "FROM java:8-jdk-alpine\n\nEXPOSE 8080\n\nRUN set -ex && \\\n    if [ $(wget -qO- ipinfo.io/country) == CN ]; then echo \"http://mirrors.aliyun.com/alpine/latest-stable/main/\" > /etc/apk/repositories ;fi && \\\n    apk update && \\\n    apk add --no-cache zsh git openssh\n\n# Install oh-my-zsh\nRUN git clone --depth=1 git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh \\\n\t&& cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n\nENV SHELL /bin/zsh\n\nADD backend/target/ide-backend.jar /root\nADD backend/src/main/resources/lib /root/lib\n\nWORKDIR /root\nCMD [\"java\", \"-jar\", \"ide-backend.jar\", \"--PTY_LIB_FOLDER=/root/lib\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4677734375,
          "content": "Copyright (c) 2014-2016 CODING(https://coding.net/).\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 4.109375,
          "content": "# Coding WebIDE\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/Coding/WebIDE/blob/master/LICENSE) [![Build Status](https://travis-ci.org/Coding/WebIDE.svg?branch=master)](https://travis-ci.org/Coding/WebIDE) [![Docker Stars](https://img.shields.io/docker/stars/webide/webide.svg)](https://hub.docker.com/r/webide/webide 'DockerHub') [![Docker Pulls](https://img.shields.io/docker/pulls/webide/webide.svg)](https://hub.docker.com/r/webide/webide 'DockerHub')\n\nREADME: [English](https://github.com/Coding/WebIDE/blob/master/README.md) | [中文](https://github.com/Coding/WebIDE/blob/master/README-zh.md)\n\n----\n### 线上 WebIDE 现已全面升级为 Cloud Studio，欢迎访问 https://studio.coding.net/\n----\n\n![](https://raw.githubusercontent.com/Coding/WebIDE/gh-pages/screenshots/import.png)\n\n![](https://raw.githubusercontent.com/Coding/WebIDE/gh-pages/screenshots/workspace.png)\n\nCoding WebIDE(https://ide.coding.net) 是 Coding 自主研发的在线集成开发环境 (IDE)。用户可以通过 WebIDE 创建项目的工作空间, 进行在线开发, 调试等操作。同时 WebIDE 集成了 Git 代码版本控制, 用户可以选择 Coding、GitHub、BitBucket、GitLab 等任意的代码仓库。 WebIDE 还提供了分享开发环境的功能, 用户可以保存当前的开发环境, 分享给团队的其他成员。\n\n[立即试用](https://ide.coding.net/ws/?ownerName=duwan&projectName=WordPress&isTry=true)\n\n请诸位把 issues 提到对应的项目下，这样可以得到更及时的处理。前端请到 [WebIDE-Frontend](https://github.com/Coding/WebIDE-Frontend/issues)，后端请到 [WebIDE-Backend](https://github.com/Coding/WebIDE-Backend/issues).\n\n\n## 功能特色\n\n1. *全功能 Web Terminal*\n2. *语法加亮*\n3. *代码补全*\n4. *主题切换*\n5. *分割视图*\n6. *VIM／Emacs 模式*\n7. *实时预览*\n\n本项目是为了能够一键启动 `WebIDE` 开源版而创建的，以 git 子模块的形式引用了另外的三个项目，分别是 WebIDE-Frontend、WebIDE-Frontend-Webjars、WebIDE-Backend。\n\n\n## 模块说明\n\n* [WebIDE-Frontend](https://github.com/Coding/WebIDE-Frontend) WebIDE 前端项目\n* [WebIDE-Frontend-Webjars](https://github.com/Coding/WebIDE-Frontend-Webjars) webjar 项目，用于将 WebIDE 前端打包成 webjar\n* [WebIDE-Backend](https://github.com/Coding/WebIDE-Backend) WebIDE 后端项目\n\n\n## 运行环境\n\nWebIDE Frontend 需要 **node v6.x** 作为编译运行环境（可以避免很多奇怪的错误），使用 **yarn** 做包管理工具，做构建工具使用 **webpack** 和 **babel**\n\nWebIDE-Frontend-Webjars & WebIDE-Backend 项目依赖 **maven3** 和 **java8**\n\n运行该项目需要至少 512MB 的内存空间。在编译、运行项目前，请保证环境依赖已被正确配置。\n\n## Server 版\n\n从 Coding 克隆项目：\n```\ngit clone git@git.coding.net:coding/WebIDE.git\n```\n\n从 Github 克隆项目：\n```\ngit clone git@github.com:Coding/WebIDE.git\n```\n\n拉取子项目：\n```\ngit submodule init\ngit submodule update\n```\n这样就会通过 git 的 submodule 机制 clone 另外 3 个 repo。\n\n```\n./ide.sh build   # 编译并打包前端项目\n./ide.sh run     # 启动项目\n```\n\n### 修改默认配置\n\n`backend/src/main/resources/application.properties` 包括用户、项目、数据库等配置，可以通过修改配置定制服务：\n\n* **SPACE_HOME:** 存放 workspace 的目录，默认为 `~/.coding-ide/workspace`\n* **server.port:** 应用启动的端口\n* **USERNAME:** 用户名，git 提交时会使用该值作为 user.name，默认为 coding。\n* **EMAIL:** 用户邮箱，git 提交时会使用该值作为 user.email，默认为 coding@coding.net\n* **AVATAR:** 用户头像\n* **CODING_IDE_HOME:** 应用数据存放目录，默认为 `~/.coding-ide`\n\n修改配置后，需要重启应用。另外如果修改了 `USERNAME`、`EMAIL` 的值，会在创建新的 Workspace 时生效。\n\n## docker 版\n\n```\ndocker run -p 8080:8080 -v coding-ide-home:/root/.coding-ide webide/webide\n```\n\n更多 docker 命令，参照 wiki [English](https://github.com/Coding/WebIDE/wiki/Docker-Server.en) [中文](https://github.com/Coding/WebIDE/wiki/Docker-Server.zh)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.294921875,
          "content": "# Coding WebIDE\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://github.com/Coding/WebIDE/blob/master/LICENSE) [![Build Status](https://travis-ci.org/Coding/WebIDE.svg?branch=master)](https://travis-ci.org/Coding/WebIDE) [![Docker Stars](https://img.shields.io/docker/stars/webide/webide.svg)](https://hub.docker.com/r/webide/webide 'DockerHub') [![Docker Pulls](https://img.shields.io/docker/pulls/webide/webide.svg)](https://hub.docker.com/r/webide/webide 'DockerHub')\n\nREADME: [English](https://github.com/Coding/WebIDE/blob/master/README.md) | [中文](https://github.com/Coding/WebIDE/blob/master/README-zh.md)\n\n----\n### WebIDE is now upgraded to Cloud Studio，welcome to our new homepage https://studio.coding.net/\n----\n\n![](https://raw.githubusercontent.com/Coding/WebIDE/gh-pages/screenshots/import.png)\n\n![](https://raw.githubusercontent.com/Coding/WebIDE/gh-pages/screenshots/workspace.png)\n\nCoding WebIDE(https://ide.coding.net) is a cloud-based IDE developed by Coding Team.You can create your own workspace and develop projects here.WebIDE works fine with Git. You can use Coding、GitHub、BitBucket、GitLab as your Git repository. Workspaces are powered by Docker Ubuntu containers.The development environment can be saved and shared to your team member.\n\n[Live Demo](https://ide.coding.net/ws/?ownerName=duwan&projectName=WordPress&isTry=true)\n\nPlease submit issues to corresponding projects, that'll help us make issues tracking easier so that we can provide timely help to you. Submit frontend issues at [WebIDE-Frontend](https://github.com/Coding/WebIDE-Frontend/issues) and backend issues at [WebIDE-Backend](https://github.com/Coding/WebIDE-Backend/issues).\n\n\n## Features\n\n1. *Built-In Terminal*\n2. *Syntax Highlighting*\n3. *Language Tools*\n4. *Themes*\n5. *Split View*\n6. *VIM／Emacs Mode*\n7. *Previews*\n\nThis is the entry point to setup and run the WebIDE Community Edition project. It includes other 3 repos as git submodules.\n\n\n## Modules\n\n* [WebIDE-Frontend](https://github.com/Coding/WebIDE-Frontend) contains frontend code.\n* [WebIDE-Frontend-Webjars](https://github.com/Coding/WebIDE-Frontend-Webjars) packs frontend to webjar.\n* [WebIDE-Backend](https://github.com/Coding/WebIDE-Backend) contains backend code.\n\n\n## Environment\n\nWebIDE Frontend require **node v6.x** as build environment (this will save you from alot of weird errors). We recommend **yarn** for package management, **webpack** and **babel** is used for building.\n\nFrontend Webjars & WebIDE Backend use **maven3** and **java8**.\n\nThe project requires at minimum 512MB memory to run. Please ensure you have corresponding tools installed in your environment before build and run the project.\n\n\n## Native Server\n\nClone from coding.net:\n```\ngit clone git@git.coding.net:coding/WebIDE.git\n```\n\nClone from github.com:\n```\ngit clone git@github.com:Coding/WebIDE.git\n```\n\nInit and pull submodules:\n```\ngit submodule init\ngit submodule update\n```\nThis will also clone the other 3 repos via git submodule mechanism.\n\nWe provide a shell script `ide.sh` to ease the process for you.\n\n```\n./ide.sh build   # transpile and pack the frontend to webjars\n./ide.sh run     # start the backend server\n```\nServer runs on port 8080 by default, visit localhost:8080 to check it out.\n\n\n### Configurations\n\n`backend/src/main/resources/application.properties` contains configurations of user, project, database, etc., you can change these parameters to meet your need:\n\n* **SPACE_HOME:** path to your workspace directory, default to `~/.coding-ide/workspace`\n* **server.port:** backend server port\n* **USERNAME:** username, used by git as its `user.name` config when commit, defaults to \"coding\"\n* **EMAIL:** email, used by git as its `user.email` config when commit, defaults to \"coding@coding.net\"\n* **AVATAR:** user's avatar\n* **CODING_IDE_HOME:** path to store WebIDE application's data, default to `~/.coding-ide`\n\nIf changed, restart the application to let your configurations take effect. Note that changes on `USERNAME`, `EMAIL` *WILL NOT* apply to workspaces that are already created.\n\n\n## Docker Server\n\n```\ndocker run -p 8080:8080 -v coding-ide-home:/root/.coding-ide webide/webide\n```\n\nTo learn more about docker commands，please refer to wiki [English](https://github.com/Coding/WebIDE/wiki/Docker-Server.en) [中文](https://github.com/Coding/WebIDE/wiki/Docker-Server.zh)\n"
        },
        {
          "name": "backend",
          "type": "commit",
          "content": null
        },
        {
          "name": "config",
          "type": "blob",
          "size": 0.2998046875,
          "content": "# Environment for running the application, either \"prod\" or \"dev\"\n#RUN_ENV=\n\n# USER INFO\n#USERNAME=\n#EMAIL=\n#AVATAR=\n\n# CORS (Seprate with comma)\n#ALLOWED_ORIGINS=\n\n# Home Directory(Do not modify when using docker)\n#CODING_IDE_HOME=\n#SPACE_HOME=\n\n# Max file size to upload (in Mb)\n#UPLOAD_FILE_SIZE_LIMIT=\n\n"
        },
        {
          "name": "frontend",
          "type": "commit",
          "content": null
        },
        {
          "name": "frontend-webjars",
          "type": "commit",
          "content": null
        },
        {
          "name": "ide.sh",
          "type": "blob",
          "size": 5.5732421875,
          "content": "#!/bin/bash\n\nBASEDIR=$(cd \"$(dirname \"$0\")\"; pwd)\n\nPROG_NAME=$(basename $0)\n\nBACKEND=$BASEDIR/backend\nFRONTEND=$BASEDIR/frontend\nFRONTEND_WEBJARS=$BASEDIR/frontend-webjars\nCONTAINER=webide\n\nvalid_last_cmd() {\n  if [ $? -ne 0 ]; then\n      exit 1\n  fi\n}\n\nsub_help(){\n  echo \"Usage: $PROG_NAME <subcommand>\"\n  echo \"\"\n  echo \"Subcommands:\"\n  echo \"  build [-t tag]\"\n  echo \"  run [-p port]\"\n  echo \"  docker [build|run|attach|stop|logs|exec]\"\n  echo \"\"\n  echo \"For help with each subcommand run:\"\n  echo \"$PROG_NAME <subcommand> -h | --help\"\n  echo \"\"\n}\n\nsub_backend() {\n  bakend_usage() {\n      echo \"Usage: $PROG_NAME backend [clean]\"\n  }\n\n  case $1 in\n    \"-h\" | \"--help\")\n      backend_usage\n      ;;\n    \"clean\")\n      cd $BACKEND\n        mvn clean\n      cd $BASEDIR\n    ;;\n  esac\n}\n\ndo_build_frontend() {\n  cd $FRONTEND\n  echo \"building frontend...\"\n  yarn install\n  yarn run build\n  valid_last_cmd\n\n  cd $FRONTEND_WEBJARS\n  echo \"packing frontend....\"\n  mvn clean install\n  valid_last_cmd\n  cd $BASEDIR\n}\n\ndo_build_backend() {\n  cd $BACKEND\n  echo \"mvn clean and packaging...\"\n  mvn clean package -Dmaven.test.skip=true\n  valid_last_cmd\n  cd $BASEDIR\n}\n\nsub_build() {\n\n    build_usage() {\n        echo \"Usage: $PROG_NAME build [frontend | backend | run]\"\n    }\n\n    case $1 in\n    \"-h\" | \"--help\")\n      build_usage\n      ;;\n    \"\")\n      do_build_frontend\n      do_build_backend\n      ;;\n    \"backend\")\n      do_build_backend\n      ;;\n    \"frontend\")\n      do_build_frontend\n      ;;\n    \"run\") # build and run\n      do_build_frontend\n      do_build_backend\n      do_run_backend\n      ;;\n    esac\n}\n\nerror() {\n  printf  \"${RED}ERROR:${NC} %s\\n\" \"${1}\"\n}\n\nerror_exit() {\n#  echo  \"---------------------------------------\"\n#  error \"!!!\"\n  error \"${1}\"\n#  error \"!!!\"\n#  echo  \"---------------------------------------\"\n  exit 1\n}\n\nvalid_container_exist() {\n  RUNNING=$(docker inspect --format=\"{{ .State.Running }}\" $CONTAINER 2> /dev/null)\n\n  if [ $? -eq 1 ]; then\n    echo \"UNKNOWN - container $CONTAINER does not exist.\"\n    exit 3\n  fi\n}\n\nassert_container_is_running() {\n  RUNNING=$(docker inspect --format=\"{{ .State.Running }}\" $CONTAINER 2> /dev/null)\n\n  if [ $? -eq 1 ]; then\n    echo \"UNKNOWN - $CONTAINER does not exist.\"\n    exit 3\n  fi\n\n  if [ \"$RUNNING\" == \"false\" ]; then\n    echo \"CRITICAL - $CONTAINER is not running.\"\n    exit 2\n  fi\n}\n\ncontainer_exist() {\n  RUNNING=$(docker inspect --format=\"{{ .State.Running }}\" $CONTAINER 2> /dev/null)\n\n  if [ $? -eq 0 ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncontainer_is_running() {\n  RUNNING=$(docker inspect --format=\"{{ .State.Running }}\" $CONTAINER 2> /dev/null)\n\n  if [ $? -eq 1 ]; then\n    return 1\n  fi\n\n  if [ \"$RUNNING\" == \"true\" ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\n\nsub_docker() {\n\n    local OPTIND opt\n\n    check_docker() {\n      if ! docker ps > /dev/null 2>&1; then\n        output=$(docker ps)\n        error_exit \"Error - Docker not installed properly: \\n${output}\"\n      fi\n    }\n\n    docker_usage() {\n      echo \"Usage: $PROG_NAME docker [build|run|attach|stop|logs|exec]\"\n    }\n\n    check_docker\n\n    # process options\n    while getopts \":t:\" opt; do\n      case $opt in\n        t)\n          EXTRA_VARS=\"-t ${OPTARG}\"\n          ;;\n        \\?)\n          docker_usage\n          exit 1\n          ;;\n      esac\n    done\n\n    case $1 in\n    \"-h\" | \"--help\")\n      docker_usage\n      ;;\n    \"build\")\n      docker build $EXTRA_VARS -t webide/webide .\n      ;;\n    \"run\")\n      RUNNING=$(docker inspect --format=\"{{ .State.Running }}\" $CONTAINER 2> /dev/null)\n\n      if ! container_exist ; then\n\n        echo \"creating container $CONTAINER\"\n        docker create -p 8080:8080 --env-file config -v coding-ide-home:/root/.coding-ide --name webide -h webide  webide/webide\n        valid_last_cmd\n      elif [ \"$RUNNING\" == \"true\" ]; then\n        echo \"CRITICAL - $CONTAINER is running.\"\n        exit 2\n      fi\n\n      echo \"starting container $CONTAINER\"\n      docker start webide\n      valid_last_cmd\n      docker attach --sig-proxy=false webide\n      ;;\n    \"stop\")\n      assert_container_is_running\n      docker stop webide\n      ;;\n    \"attach\")\n      assert_container_is_running\n      docker attach --sig-proxy=false webide\n      ;;\n    \"logs\")\n      assert_container_is_running\n      docker logs -f webide\n      ;;\n    \"remove\")\n      if container_is_running ; then\n        echo \"stoping webide...\"\n        docker stop webide\n      fi\n      echo \"removing webide...\"\n      docker rm webide\n      echo \"done...\"\n      ;;\n    \"exec\")\n      assert_container_is_running\n      docker exec -it webide bash\n      ;;\n    esac\n}\n\ndo_run_backend() {\n  if [ ! -f $BACKEND/target/ide-backend.jar ]; then\n     sub_build\n  fi\n  . $BASEDIR/config\n  java -jar $BACKEND/target/ide-backend.jar --PTY_LIB_FOLDER=$BACKEND/src/main/resources/lib ${1}\n}\n\nsub_run() {\n    local OPTIND opt\n\n    run_usage() {\n        echo \"Usage: $PROG_NAME run [-p port]\"\n    }\n\n    # process options\n    while getopts \":p:\" opt; do\n      case $opt in\n        p)\n          EXTRA_VARS=\"--server.port=${OPTARG}\"\n          ;;\n        \\?)\n          run_usage\n          exit 1\n          ;;\n      esac\n    done\n\n    shift $((OPTIND-1))\n\n    case $1 in\n    \"-h\" | \"--help\")\n        run_usage\n        ;;\n    \"\")\n        do_run_backend $EXTRA_VARS\n        ;;\n    esac\n}\n\n# process subcommands\nsubcommand=$1\ncase $subcommand in\n    \"\" | \"-h\" | \"--help\")\n        sub_help\n        ;;\n    *)\n        shift\n\n        sub_${subcommand} $@\n\n        if [ $? = 127 ]; then\n            echo \"Error: '$subcommand' is not a known subcommand.\" >&2\n            echo \"       Run '$PROG_NAME --help' for a list of known subcommands.\" >&2\n            exit 1\n        fi\n    ;;\nesac\n"
        },
        {
          "name": "mvn_settings.xml",
          "type": "blob",
          "size": 0.4951171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n  <mirrors>\n    <mirror>\n      <id>nexus-aliyun</id>\n      <mirrorOf>central</mirrorOf>\n      <name>Nexus aliyun</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n    </mirror>\n  </mirrors>\n</settings>\n"
        }
      ]
    }
  ]
}