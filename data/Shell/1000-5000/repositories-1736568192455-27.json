{
  "metadata": {
    "timestamp": 1736568192455,
    "page": 27,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mlocati/docker-php-extension-installer",
      "stars": 4407,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.029296875,
          "content": "**/*\n!/install-php-extensions\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2080078125,
          "content": "root = true\n\n[*]\nindent_style = tab\nindent_size = tab\ntab_width = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = false\ninsert_final_newline = true\n\n[*.{bat,cmd}]\nend_of_line = crlf\ncharset = latin1\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1083984375,
          "content": "/.* export-ignore\n/data/ export-ignore\n/scripts/ export-ignore\n/LICENSE export-ignore\n/README.md export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0380859375,
          "content": "/vendor/\n/.php_cs.cache\n/composer.lock\n"
        },
        {
          "name": ".php_cs",
          "type": "blob",
          "size": 20.794921875,
          "content": "<?php\n/*\n * This document has been generated with\n * https://mlocati.github.io/php-cs-fixer-configurator/#version:2.16.1|configurator\n * you can change this configuration by importing this file.\n */\nreturn PhpCsFixer\\Config::create()\n    ->setUsingCache(false)\n    ->setRiskyAllowed(true)\n    ->setRules([\n        // Replaces `dirname(__FILE__)` expression with equivalent `__DIR__` constant.\n        'dir_constant' => true,\n        // Replace deprecated `ereg` regular expression functions with `preg`.\n        'ereg_to_preg' => true,\n        // Error control operator should be added to deprecation notices and/or removed from other cases.\n        'error_suppression' => true,\n        // Order the flags in `fopen` calls, `b` and `t` must be last.\n        'fopen_flag_order' => true,\n        // The flags in `fopen` calls must omit `t`, and `b` must be omitted or included consistently.\n        'fopen_flags' => ['b_mode'=>false],\n        // Replace core functions calls returning constants with the constants.\n        'function_to_constant' => true,\n        // Function `implode` must be called with 2 arguments in the documented order.\n        'implode_call' => true,\n        // Replaces `is_null($var)` expression with `null === $var`.\n        'is_null' => true,\n        // Replaces `intval`, `floatval`, `doubleval`, `strval` and `boolval` function calls with according type casting operator.\n        'modernize_types_casting' => true,\n        // Add leading `\\` before constant invocation of internal constant to speed up resolving. Constant name match is case-sensitive, except for `null`, `false` and `true`.\n        'native_constant_invocation' => ['fix_built_in'=>false,'include'=>['DIRECTORY_SEPARATOR','PHP_SAPI','PHP_VERSION_ID'],'scope'=>'namespaced'],\n        // Add leading `\\` before function invocation to speed up resolving.\n        'native_function_invocation' => ['include'=>['@compiler_optimized'],'scope'=>'namespaced','strict'=>true],\n        // Master functions shall be used instead of aliases.\n        'no_alias_functions' => true,\n        // Replace accidental usage of homoglyphs (non ascii characters) in names.\n        'no_homoglyph_names' => true,\n        // Remove Zero-width space (ZWSP), Non-breaking space (NBSP) and other invisible unicode symbols.\n        'non_printable_character' => true,\n        // PHPUnit assertion method calls like `->assertSame(true, $foo)` should be written with dedicated method like `->assertTrue($foo)`.\n        'php_unit_construct' => true,\n        // Usage of PHPUnit's mock e.g. `->will($this->returnValue(..))` must be replaced by its shorter equivalent such as `->willReturn(...)`.\n        'php_unit_mock_short_will_return' => true,\n        // Class names should match the file name.\n        'psr4' => true,\n        // Inside class or interface element `self` should be preferred to the class name itself.\n        'self_accessor' => true,\n        // Cast shall be used, not `settype`.\n        'set_type_to_cast' => true,\n        // PHP arrays should be declared using the configured syntax.\n        'array_syntax' => ['syntax'=>'short'],\n        // Binary operators should be surrounded by space as configured.\n        'binary_operator_spaces' => true,\n        // There MUST be one blank line after the namespace declaration.\n        'blank_line_after_namespace' => true,\n        // Ensure there is no code on the same line as the PHP open tag and it is followed by a blank line.\n        'blank_line_after_opening_tag' => true,\n        // An empty line feed must precede any configured statement.\n        'blank_line_before_statement' => true,\n        // The body of each structure MUST be enclosed by braces. Braces should be properly placed. Body of braces should be properly indented.\n        'braces' => ['allow_single_line_closure'=>true],\n        // A single space or none should be between cast and variable.\n        'cast_spaces' => true,\n        // Class, trait and interface elements must be separated with one blank line.\n        'class_attributes_separation' => ['elements'=>['method']],\n        // Whitespace around the keywords of a class, trait or interfaces definition should be one space.\n        'class_definition' => ['single_line'=>true],\n        // Concatenation should be spaced according configuration.\n        'concat_space' => ['spacing'=>'one'],\n        // The PHP constants `true`, `false`, and `null` MUST be written using the correct casing.\n        'constant_case' => true,\n        // Equal sign in declare statement should be surrounded by spaces or not following configuration.\n        'declare_equal_normalize' => true,\n        // The keyword `elseif` should be used instead of `else if` so that all control keywords look like single words.\n        'elseif' => true,\n        // PHP code MUST use only UTF-8 without BOM (remove BOM).\n        'encoding' => true,\n        // PHP code must use the long `<?php` tags or short-echo `<?=` tags and not other tag variations.\n        'full_opening_tag' => true,\n        // Spaces should be properly placed in a function declaration.\n        'function_declaration' => true,\n        // Ensure single space between function's argument and its typehint.\n        'function_typehint_space' => true,\n        // Include/Require and file path should be divided with a single space. File path should not be placed under brackets.\n        'include' => true,\n        // Pre- or post-increment and decrement operators should be used if possible.\n        'increment_style' => ['style'=>'post'],\n        // Code MUST use configured indentation type.\n        'indentation_type' => true,\n        // All PHP files must use same line ending.\n        'line_ending' => true,\n        // Cast should be written in lower case.\n        'lowercase_cast' => true,\n        // PHP keywords MUST be in lower case.\n        'lowercase_keywords' => true,\n        // Class static references `self`, `static` and `parent` MUST be in lower case.\n        'lowercase_static_reference' => true,\n        // Magic constants should be referred to using the correct casing.\n        'magic_constant_casing' => true,\n        // Magic method definitions and calls must be using the correct casing.\n        'magic_method_casing' => true,\n        // In method arguments and method call, there MUST NOT be a space before each comma and there MUST be one space after each comma. Argument lists MAY be split across multiple lines, where each subsequent line is indented once. When doing so, the first item in the list MUST be on the next line, and there MUST be only one argument per line.\n        'method_argument_space' => ['on_multiline'=>'ensure_fully_multiline'],\n        // Function defined by PHP should be called using the correct casing.\n        'native_function_casing' => true,\n        // Native type hints for functions should use the correct case.\n        'native_function_type_declaration_casing' => true,\n        // All instances created with new keyword must be followed by braces.\n        'new_with_braces' => true,\n        // There should be no empty lines after class opening brace.\n        'no_blank_lines_after_class_opening' => true,\n        // There should not be blank lines between docblock and the documented element.\n        'no_blank_lines_after_phpdoc' => true,\n        // There must be a comment when fall-through is intentional in a non-empty case body.\n        'no_break_comment' => true,\n        // The closing `? >` tag MUST be omitted from files containing only PHP.\n        'no_closing_tag' => true,\n        // There should not be any empty comments.\n        'no_empty_comment' => true,\n        // There should not be empty PHPDoc blocks.\n        'no_empty_phpdoc' => true,\n        // Remove useless semicolon statements.\n        'no_empty_statement' => true,\n        // Removes extra blank lines and/or blank lines following configuration.\n        'no_extra_blank_lines' => ['tokens'=>['break','continue','curly_brace_block','extra','parenthesis_brace_block','return','square_brace_block','throw','use']],\n        // Remove leading slashes in `use` clauses.\n        'no_leading_import_slash' => true,\n        // The namespace declaration line shouldn't contain leading whitespace.\n        'no_leading_namespace_whitespace' => true,\n        // Either language construct `print` or `echo` should be used.\n        'no_mixed_echo_print' => true,\n        // Operator `=>` should not be surrounded by multi-line whitespaces.\n        'no_multiline_whitespace_around_double_arrow' => true,\n        // Short cast `bool` using double exclamation mark should not be used.\n        'no_short_bool_cast' => true,\n        // Single-line whitespace before closing semicolon are prohibited.\n        'no_singleline_whitespace_before_semicolons' => true,\n        // When making a method or function call, there MUST NOT be a space between the method or function name and the opening parenthesis.\n        'no_spaces_after_function_name' => true,\n        // There MUST NOT be spaces around offset braces.\n        'no_spaces_around_offset' => true,\n        // There MUST NOT be a space after the opening parenthesis. There MUST NOT be a space before the closing parenthesis.\n        'no_spaces_inside_parenthesis' => true,\n        // Removes `@param` and `@return` tags that don't provide any useful information.\n        'no_superfluous_phpdoc_tags' => ['allow_mixed'=>true,'allow_unused_params'=>true],\n        // Remove trailing commas in list function calls.\n        'no_trailing_comma_in_list_call' => true,\n        // PHP single-line arrays should not have trailing comma.\n        'no_trailing_comma_in_singleline_array' => true,\n        // Remove trailing whitespace at the end of non-blank lines.\n        'no_trailing_whitespace' => true,\n        // There MUST be no trailing spaces inside comment or PHPDoc.\n        'no_trailing_whitespace_in_comment' => true,\n        // Removes unneeded parentheses around control statements.\n        'no_unneeded_control_parentheses' => true,\n        // Removes unneeded curly braces that are superfluous and aren't part of a control structure's body.\n        'no_unneeded_curly_braces' => true,\n        // A final class must not have final methods.\n        'no_unneeded_final_method' => true,\n        // Unused `use` statements must be removed.\n        'no_unused_imports' => true,\n        // In array declaration, there MUST NOT be a whitespace before each comma.\n        'no_whitespace_before_comma_in_array' => true,\n        // Remove trailing whitespace at the end of blank lines.\n        'no_whitespace_in_blank_line' => true,\n        // Array index should always be written by using square braces.\n        'normalize_index_brace' => true,\n        // There should not be space before or after object `T_OBJECT_OPERATOR` `->`.\n        'object_operator_without_whitespace' => true,\n        // Ordering `use` statements.\n        'ordered_imports' => true,\n        // PHPUnit annotations should be a FQCNs including a root namespace.\n        'php_unit_fqcn_annotation' => true,\n        // All items of the given phpdoc tags must be either left-aligned or (by default) aligned vertically.\n        'phpdoc_align' => ['tags'=>['method','param','property','return','throws','type','var']],\n        // PHPDoc annotation descriptions should not be a sentence.\n        'phpdoc_annotation_without_dot' => true,\n        // Docblocks should have the same indentation as the documented subject.\n        'phpdoc_indent' => true,\n        // Fix PHPDoc inline tags, make `@inheritdoc` always inline.\n        'phpdoc_inline_tag' => true,\n        // `@access` annotations should be omitted from PHPDoc.\n        'phpdoc_no_access' => true,\n        // No alias PHPDoc tags should be used.\n        'phpdoc_no_alias_tag' => true,\n        // `@package` and `@subpackage` annotations should be omitted from PHPDoc.\n        'phpdoc_no_package' => true,\n        // Classy that does not inherit must not have `@inheritdoc` tags.\n        'phpdoc_no_useless_inheritdoc' => true,\n        // The type of `@return` annotations of methods returning a reference to itself must the configured one.\n        'phpdoc_return_self_reference' => true,\n        // Scalar types should always be written in the same form. `int` not `integer`, `bool` not `boolean`, `float` not `real` or `double`.\n        'phpdoc_scalar' => true,\n        // Annotations in PHPDoc should be grouped together so that annotations of the same type immediately follow each other, and annotations of a different type are separated by a single blank line.\n        'phpdoc_separation' => true,\n        // Single line `@var` PHPDoc should have proper spacing.\n        'phpdoc_single_line_var_spacing' => true,\n        // PHPDoc summary should end in either a full stop, exclamation mark, or question mark.\n        'phpdoc_summary' => true,\n        // Docblocks should only be used on structural elements.\n        'phpdoc_to_comment' => true,\n        // PHPDoc should start and end with content, excluding the very first and last line of the docblocks.\n        'phpdoc_trim' => true,\n        // Removes extra blank lines after summary and after description in PHPDoc.\n        'phpdoc_trim_consecutive_blank_line_separation' => true,\n        // The correct case must be used for standard PHP types in PHPDoc.\n        'phpdoc_types' => true,\n        // Sorts PHPDoc types.\n        'phpdoc_types_order' => true,\n        // `@var` and `@type` annotations should not contain the variable name.\n        'phpdoc_var_without_name' => true,\n        // There should be one or no space before colon, and one space after it in return type declarations, according to configuration.\n        'return_type_declaration' => true,\n        // Instructions must be terminated with a semicolon.\n        'semicolon_after_instruction' => true,\n        // Cast `(boolean)` and `(integer)` should be written as `(bool)` and `(int)`, `(double)` and `(real)` as `(float)`, `(binary)` as `(string)`.\n        'short_scalar_cast' => true,\n        // A PHP file without end tag must always end with a single empty line feed.\n        'single_blank_line_at_eof' => true,\n        // There should be exactly one blank line before a namespace declaration.\n        'single_blank_line_before_namespace' => true,\n        // There MUST NOT be more than one property or constant declared per statement.\n        'single_class_element_per_statement' => true,\n        // There MUST be one use keyword per declaration.\n        'single_import_per_statement' => true,\n        // Each namespace use MUST go on its own line and there MUST be one blank line after the use statements block.\n        'single_line_after_imports' => true,\n        // Single-line comments and multi-line comments with only one line of actual content should use the `//` syntax.\n        'single_line_comment_style' => true,\n        // Throwing exception must be done in single line.\n        'single_line_throw' => true,\n        // Convert double quotes to single quotes for simple strings.\n        'single_quote' => true,\n        // Each trait `use` must be done as single statement.\n        'single_trait_insert_per_statement' => true,\n        // Fix whitespace after a semicolon.\n        'space_after_semicolon' => ['remove_in_empty_for_expressions'=>true],\n        // Increment and decrement operators should be used if possible.\n        'standardize_increment' => true,\n        // Replace all `<>` with `!=`.\n        'standardize_not_equals' => true,\n        // A case should be followed by a colon and not a semicolon.\n        'switch_case_semicolon_to_colon' => true,\n        // Removes extra spaces between colon and case value.\n        'switch_case_space' => true,\n        // Standardize spaces around ternary operator.\n        'ternary_operator_spaces' => true,\n        // PHP multi-line arrays should have a trailing comma.\n        'trailing_comma_in_multiline_array' => true,\n        // Arrays should be formatted like function/method arguments, without leading or trailing single line space.\n        'trim_array_spaces' => true,\n        // Unary operators should be placed adjacent to their operands.\n        'unary_operator_spaces' => true,\n        // Visibility MUST be declared on all properties and methods; `abstract` and `final` MUST be declared before the visibility; `static` MUST be declared after the visibility.\n        'visibility_required' => true,\n        // In array declaration, there MUST be a whitespace after each comma.\n        'whitespace_after_comma_in_array' => true,\n        // Each line of multi-line DocComments must have an asterisk [PSR-5] and must be aligned with the first one.\n        'align_multiline_comment' => true,\n        // Each element of an array must be indented exactly once.\n        'array_indentation' => true,\n        // Using `isset($var) &&` multiple times should be done in one call.\n        'combine_consecutive_issets' => true,\n        // Calling `unset` on multiple items should be done in one call.\n        'combine_consecutive_unsets' => true,\n        // Remove extra spaces in a nullable typehint.\n        'compact_nullable_typehint' => true,\n        // Escape implicit backslashes in strings and heredocs to ease the understanding of which are special chars interpreted by PHP and which not.\n        'escape_implicit_backslashes' => true,\n        // Add curly braces to indirect variables to make them clear to understand. Requires PHP >= 7.0.\n        'explicit_indirect_variable' => true,\n        // Converts implicit variables into explicit ones in double-quoted strings or heredoc syntax.\n        'explicit_string_variable' => true,\n        // Transforms imported FQCN parameters and return types in function arguments to short version.\n        'fully_qualified_strict_types' => true,\n        // Convert `heredoc` to `nowdoc` where possible.\n        'heredoc_to_nowdoc' => true,\n        // Method chaining MUST be properly indented. Method chaining with different levels of indentation is not supported.\n        'method_chaining_indentation' => true,\n        // DocBlocks must start with two asterisks, multiline comments must start with a single asterisk, after the opening slash. Both must end with a single asterisk before the closing slash.\n        'multiline_comment_opening_closing' => true,\n        // Forbid multi-line whitespace before the closing semicolon or move the semicolon to the new line for chained calls.\n        'multiline_whitespace_before_semicolons' => ['strategy'=>'new_line_for_chained_calls'],\n        // Replace control structure alternative syntax to use braces.\n        'no_alternative_syntax' => true,\n        // There should not be a binary flag before strings.\n        'no_binary_string' => true,\n        // Properties MUST not be explicitly initialized with `null` except when they have a type declaration (PHP 7.4).\n        'no_null_property_initialization' => true,\n        // Replace short-echo `<?=` with long format `<?php echo` syntax.\n        'no_short_echo_tag' => true,\n        // Replaces superfluous `elseif` with `if`.\n        'no_superfluous_elseif' => true,\n        // Variables must be set `null` instead of using `(unset)` casting.\n        'no_unset_cast' => true,\n        // There should not be useless `else` cases.\n        'no_useless_else' => true,\n        // There should not be an empty `return` statement at the end of a function.\n        'no_useless_return' => true,\n        // Orders the elements of classes/interfaces/traits.\n        'ordered_class_elements' => true,\n        // All PHPUnit test classes should be marked as internal.\n        'php_unit_internal_class' => true,\n        // Enforce camel (or snake) case for PHPUnit test methods, following configuration.\n        'php_unit_method_casing' => true,\n        // Order `@covers` annotation of PHPUnit tests.\n        'php_unit_ordered_covers' => true,\n        // Adds a default `@coversNothing` annotation to PHPUnit test classes that have no `@covers*` annotation.\n        'php_unit_test_class_requires_covers' => true,\n        // PHPDoc should contain `@param` for all params.\n        'phpdoc_add_missing_param_annotation' => true,\n        // `@return void` and `@return null` annotations should be omitted from PHPDoc.\n        'phpdoc_no_empty_return' => true,\n        // Annotations in PHPDoc should be ordered so that `@param` annotations come first, then `@throws` annotations, then `@return` annotations.\n        'phpdoc_order' => true,\n        // `@var` and `@type` annotations must have type and name in the correct order.\n        'phpdoc_var_annotation_correct_order' => true,\n        // Converts `protected` variables and methods to `private` where possible.\n        'protected_to_private' => true,\n        // Local, dynamic and directly referenced variables should not be assigned and directly returned by a function or method.\n        'return_assignment' => true,\n        // Converts explicit variables in double-quoted strings and heredoc syntax from simple to complex format (`${` to `{$`).\n        'simple_to_complex_string_variable' => true,\n    ])\n    ->setFinder(PhpCsFixer\\Finder::create()\n        ->exclude('vendor')\n        ->in(__DIR__)\n        ->name('.php_cs')\n        ->append(glob(__DIR__ . '/scripts/*'))\n        ->append(glob(__DIR__ . '/scripts/tests/*'))\n    )\n;\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2255859375,
          "content": "FROM scratch\n\nLABEL org.opencontainers.image.source=\"https://github.com/mlocati/docker-php-extension-installer\"\nLABEL org.opencontainers.image.licenses=\"MIT\"\n\nCOPY --chmod=755 install-php-extensions /usr/bin/install-php-extensions\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "MIT License\n\nCopyright (c) 2018-2023 Michele Locati\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 5.5283203125,
          "content": "# Informations for the repository maintainers\n\n## Publish a new version\n\nThe creation of a new version is done automatically by the [`readme-release.yml`](https://github.com/mlocati/docker-php-extension-installer/blob/master/.github/workflows/readme-release.yml) GitHub Action.\n\nWhenever a push to the GitHub repository changes the [`install-php-extensions`](https://github.com/mlocati/docker-php-extension-installer/blob/master/install-php-extensions) script,\nthat Action creates a new tag, incrementing the patch level (for example, if the previous version was `1.2.3`, it creates the tag `1.2.4`).\nBefore doing that, the Action waits for 30 seconds, so that maintainers can cancel the tag creation if they want to create a different tag (for example, `1.3.3`).\n\nOnce this new tag is created automatically (or when maintainers push a new version-like tag to the repository), the Action creates a new release, attaching it the `install-php-extensions` script to it\n(so that users can download it via the `https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions` URL).\n\n## Extensions to be monitored\n\n### cmark\n\nThe `cmark` PHP extension requires the `libcmark` system library.\nIt's not available on Debian/Alpine Linux, so we install it maually.\nWe need to monitor new releases at https://github.com/commonmark/cmark/releases\n\n### decimal\n\nThe `decimal` PHP extension requires the `libmpdec` system library.\nIt's not available on Alpine Linux, so we install it manually.\nWe need to monitor new releases at https://www.bytereef.org/mpdecimal/changelog.html\n\n### ecma_intl\n\nThe only available versions of this PHP extension are all alpha.\nWe should switch to the stable release once it will be available.\n\n### gearman\n\nThe `gearman` PHP extension requires the `libgearman` system library.\nIt's not available on Alpine Linux, so we install it manually.\nWe need to monitor new releases at https://github.com/gearman/gearmand/releases\n\n### geoip\n\nThe latest stable release of the `geoip` PHP extension is very old, so we install the latest beta release.\nWe should switch to the stable release once it will be available.\n\n### geospatial\n\nThe only available versions of the `geospatial` PHP extension are all beta.\nWe should switch to the stable release once it will be available.\n\n### gmagick\n\nThe only available versions of the `gmagick` PHP extension are all alpha/beta.\nWe should switch to the stable release once it will be available.\n\n### http\n\nThe `http` PHP extension may use the `libidnkit` system library since version 3.0.0.\nIt's not available on Alpine Linux, so we install it manually.\nWe need to monitor new releases at https://jprs.co.jp/idn\n\n### ion\n\n- We manually compile the `ion-c` library.\n  We need to monitor new releases at https://github.com/amzn/ion-c/releases\n- The only available versions of the `ion` PHP extension are all alpha.\n  We should switch to the stable release once it will be available.\n\n### ionCube Loader\n\nThe `ionCube Loader` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://www.ioncube.com/news.php\n\n### lz4\n\nThe `lz4` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://github.com/kjdev/php-ext-lz4/tags\n\n### mosquitto\n\nThe only available versions of the `mosquitto` PHP extension are all alpha/beta.\nWe should switch to the stable release once it will be available.\n\n## php_trie\n\nThe `php_trie` PHP extension uses the HAT-trie library.\nWe need to monitor new releases at https://github.com/Tessil/hat-trie/releases\n\n### opencensus\n\nThe only available versions of the `opencensus` PHP extension are all alpha.\nWe should switch to the stable release once it will be available.\n\n### parle\n\nThe only available versions of the `parle` PHP extension are all beta.\nWe should switch to the stable release once it will be available.\n\n### saxon\n\nThe `saxon` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://www.saxonica.com/download/c.xml\n\n### snappy\n\nThe `snappy` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://github.com/kjdev/php-ext-snappy/tags\n\n### snuffleupagus\n\nThe `snuffleupagus` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://github.com/jvoisin/snuffleupagus/releases\n\n## spx\n\nThe `spx` PHP extension is not available in the PECL archive, so we install it manually.\nWe need to monitor new releases at https://github.com/NoiseByNorthwest/php-spx/tags\n\n### sqlsrv / pdo_sqlsrv \n\nThe `pdo_sqlsrv` and `sqlsrv` PHP extensions require the Microsoft ODBC Driver for SQL Server.\nOn Alpine Linux there's no way to automatically install its latest version, so we install it manually.\nWe need to monitor new releases at https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server#alpine18\n\n### uv\n\nThe only available versions of the `uv` PHP extension are all beta.\nWe should switch to the stable release once it will be available.\n\n### vld\n\nThe only available versions of this PHP extension are all beta.\nWe should switch to the stable release once it will be available.\n\n## xdiff\n\nThe `xdiff` PHP extension uses the LibXDiff library.\nWe need to monitor new releases at http://www.xmailserver.org/xdiff-lib.html\n\n### xmlrpc\n\nThe only available versions of the `xmlrpc` PHP extension are all beta.\nWe should switch to the stable release once it will be available.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 39.02734375,
          "content": "[![Downloaded GitHub Releases](https://img.shields.io/github/downloads/mlocati/docker-php-extension-installer/total?label=Downloaded%20releases)](https://github.com/mlocati/docker-php-extension-installer/releases)\n[![Docker Hub pulls](https://img.shields.io/docker/pulls/mlocati/php-extension-installer?label=Docker%20Hub%20pulls)](https://hub.docker.com/r/mlocati/php-extension-installer)\n[![GitHub Registry pulls](https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/refs/heads/assets/resources/ghcr-badge.svg)](https://github.com/mlocati/docker-php-extension-installer/pkgs/container/php-extension-installer)\n[![Test recent](https://github.com/mlocati/docker-php-extension-installer/actions/workflows/test-recent-extensions.yml/badge.svg)](https://github.com/mlocati/docker-php-extension-installer/actions/workflows/test-recent-extensions.yml)\n\n# Easy installation of PHP extensions in official PHP Docker images\n\nThis repository contains a script that can be used to easily install a PHP extension inside the [official PHP Docker images](https://hub.docker.com/_/php/).\n\nThe script will install all the required APT/APK packages; at the end of the script execution, the no-more needed packages will be removed so that the image will be much smaller.\n\nSupported docker images are:\n\n- Debian-based docker images: since jessie (Debian 8) (minimum PHP version: 5.5)\n- Alpine-based docker images: since Alpine 3.9 (minimum PHP version: 7.1)\n\nSee also the notes in the [Special requirements](#special-requirements) section.\n\n## Usage\n\nYou have many ways to use this script within your `Dockerfile`s.\n\nHere's a list of sample `Dockerfile`s that install the GD and xdebug PHP extensions:\n\n### Downloading the script on the fly with `ADD`\n\n```Dockerfile\nFROM php:7.2-cli\n\nADD --chmod=0755 https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/\n\nRUN install-php-extensions gd xdebug\n```\n\n### Downloading the script on the fly with `curl`\n\n```Dockerfile\nFROM php:7.2-cli\n\nRUN curl -sSLf \\\n        -o /usr/local/bin/install-php-extensions \\\n        https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions && \\\n    chmod +x /usr/local/bin/install-php-extensions && \\\n    install-php-extensions gd xdebug\n```\n\n### Direct execution with `curl`\n\n```Dockerfile\nFROM php:8.2-cli\n\nRUN ( curl -sSLf https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions -o - || echo 'return 1' ) | sh -s \\\n      gd xdebug\n```\n\n### Copying the script from a Docker image\n\n- using GitHub Container Registry\n  \n  ```Dockerfile\n  FROM php:8.4-cli\n  \n  COPY --from=ghcr.io/mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/\n  \n  RUN install-php-extensions gd xdebug\n  ```\n- using Docker Hub\n  \n  ```Dockerfile\n  FROM php:8.4-cli\n  \n  COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/\n  \n  RUN install-php-extensions gd xdebug\n  ```\n\n**Warning**: by using this method you may use an outdated version of the Docker image image.\nYou may want to run `docker pull ghcr.io/mlocati/php-extension-installer` or `docker pull mlocati/php-extension-installer` in order to use an up-to-date version.\n\n### Using the script of a Docker image\n\n- using GitHub Container Registry\n  \n  ```Dockerfile\n  RUN  --mount=type=bind,from=ghcr.io/mlocati/php-extension-installer:latest,source=/usr/bin/install-php-extensions,target=/usr/local/bin/install-php-extensions \\\n      install-php-extensions gd xdebug\n  ```\n- using Docker Hub\n  \n  ```Dockerfile\n  RUN  --mount=type=bind,from=mlocati/php-extension-installer:latest,source=/usr/bin/install-php-extensions,target=/usr/local/bin/install-php-extensions \\\n      install-php-extensions gd xdebug\n  ```\n\n**Warning**: by using this method you may use an outdated version of the Docker image image.\nYou may want to run `docker pull ghcr.io/mlocati/php-extension-installer` or `docker pull mlocati/php-extension-installer` in order to use an up-to-date version.\n\n\n## Installing specific versions of an extension\n\nSimply append `-<version>` to the module name.\nFor example:\n\n```sh\ninstall-php-extensions xdebug-2.9.7\n```\n\nThe script also supports resolving *compatible* versions by prefixing the version with a caret (`^`).\nFor example:\n\n```sh\n# Install the most recent xdebug 2.x version (for example 2.9.8)\ninstall-php-extensions xdebug-^2\n# Install the most recent xdebug 2.8.x version (for example 2.8.1)\ninstall-php-extensions xdebug-^2.8\n```\n\nPlease remark that with the syntax above you'll get the vary latest compatible version, which may be unstable. In order to install the most recent *stable* version, you can append `@stable`:\n\n```sh\n# Install the most recent STABLE xdebug 3.x version (for example 3.2.2)\ninstall-php-extensions xdebug-^3@stable\n```\n\n(valid suffixes are: `@snapshot`, `@devel`, `@alpha`, `@beta`, and `@stable`)\n\nPre-release versions extensions available on `PECL` can be setup by suffixing the extension's name with its state i.e. `alpha`, `beta`, `rc`, `preview`, `devel` or `snapshot`.\nFor example:\n\n```sh\ninstall-php-extensions xdebug-beta\n```\n\nTIP: When the latest version available on `PECL` is not stable, and you want to keep the last stable version, \nforce it by suffixing the extension's name with the `stable` state.\nFor example:\n\n```sh\ninstall-php-extensions mongodb-stable\n```\n\n## Installing an extension from its source code\n\nYou can also install PHP extensions from source code (provided that it comes with a `package.xml` or a `package2.xml` file).\n\nAccepted formats are:\n\n- A short version for repositories hosted on GitHub.  \n  For example, for the [php-memcached-dev/php-memcached](https://github.com/php-memcached-dev/php-memcached) GitHub repository,\n  you can simply write:\n  ```sh\n  # Install from a specific commit (full commit SHA-1)\n  install-php-extensions php-memcached-dev/php-memcached@8f106564e6bb005ca6100b12ccc89000daafa9d8\n  # Install from a specific commit (short commit SHA-1)\n  install-php-extensions php-memcached-dev/php-memcached@8f106564e6bb\n  # Install from tag v3.2.0RC2\n  install-php-extensions php-memcached-dev/php-memcached@v3.2.0RC2\n  install-php-extensions php-memcached-dev/php-memcached@refs/tags/v3.2.0RC2\n  # Install from branch master\n  install-php-extensions php-memcached-dev/php-memcached@master\n  install-php-extensions php-memcached-dev/php-memcached@refs/heads/master\n  ```\n- An URL providing an archive containing the source code.  \n  Examples:\n  ```sh\n  # tgz archive for commit 8f106564e6bb005ca6100b12ccc89000daafa9d8\n  install-php-extensions https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/8f106564e6bb005ca6100b12ccc89000daafa9d8\n  # tgz archive for tag v3.1.5\n  install-php-extensions https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/refs/tags/v3.1.5\n  # tgz archive for branch master\n  install-php-extensions https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/refs/heads/master\n  ```\n- The absolute path of a local directory.  \n  Examples:\n  ```sh\n  # Download the source code\n  curl -o /tmp/source.tgz https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/refs/tags/v3.1.5\n  tar xzf /tmp/source.tgz -C /tmp\n  install-php-extensions /tmp/php-memcached-3.1.5\n\n## Installing composer\n\nYou can also install [composer](https://getcomposer.org/), and you also can specify a major version of it, or a full version.\n\nExamples:\n\n```sh\n# Install the latest version\ninstall-php-extensions @composer\n# Install the latest 1.x version\ninstall-php-extensions @composer-1\n# Install a specific version\ninstall-php-extensions @composer-2.0.2\n```\n\n## Issue with Let's Encrypt certificates\n\nThe root CA certificate of Let's Encrypt changes ([more details here](https://letsencrypt.org/docs/dst-root-ca-x3-expiration-september-2021/)).  \nThat breaks old linux distributions, namely:\n\n- Debian Jessie (8)\n- Debian Stretch (9)\n- Alpine Linux 3.7\n- Alpine Linux 3.8\n\nThis script can fix this issue: simply pass `@fix_letsencrypt` as an argument:\n\n```sh\ninstall-php-extensions @fix_letsencrypt\n```\n\n## Supported PHP extensions\n\n<!-- START OF EXTENSIONS TABLE -->\n<!-- ########################################################### -->\n<!-- #                                                         # -->\n<!-- #  DO NOT EDIT THIS TABLE: IT IS GENERATED AUTOMATICALLY  # -->\n<!-- #                                                         # -->\n<!-- #  EDIT THE data/supported-extensions FILE INSTEAD        # -->\n<!-- #                                                         # -->\n<!-- ########################################################### -->\n| Extension | PHP 8.4 | PHP 8.3 | PHP 8.2 | PHP 8.1 | PHP 8.0 | PHP 7.4 | PHP 7.3 | PHP 7.2 | PHP 7.1 | PHP 7.0 | PHP 5.6 | PHP 5.5 |\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n| amqp | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| apcu | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| apcu_bc |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; |  |  |\n| ast | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| bcmath | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| bitset | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| blackfire |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| brotli | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| bz2 | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| calendar | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| cassandra[*](#special-requirements-for-cassandra) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |\n| cmark |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; |  |  |\n| csv | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |\n| dba | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| ddtrace[*](#special-requirements-for-ddtrace) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |\n| decimal | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| ds | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| ecma_intl[*](#special-requirements-for-ecma_intl) |  | &check; | &check; |  |  |  |  |  |  |  |  |  |\n| enchant | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| ev | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| event | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| excimer | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |\n| exif | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| ffi | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |\n| ftp | &check; | &check; | &check; |  |  |  |  |  |  |  |  |  |\n| gd | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| gearman | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| geoip |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| geos[*](#special-requirements-for-geos) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| geospatial | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| gettext | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| gmagick | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| gmp | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| gnupg | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| grpc | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| http | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| igbinary | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| imagick | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| imap | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| inotify | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| interbase |  |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; |\n| intl | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| ion | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |  |\n| ioncube_loader |  | &check; | &check; | &check; |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| jsmin |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| json_post | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| jsonpath | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |\n| ldap | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| luasandbox | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| lz4[*](#special-requirements-for-lz4) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |\n| lzf | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| mailparse | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| maxminddb | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |\n| mcrypt |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| md4c | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |\n| memcache | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| memcached | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| memprof[*](#special-requirements-for-memprof) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| mongo |  |  |  |  |  |  |  |  |  |  | &check; | &check; |\n| mongodb | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| mosquitto |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| msgpack | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| mssql |  |  |  |  |  |  |  |  |  |  | &check; | &check; |\n| mysql |  |  |  |  |  |  |  |  |  |  | &check; | &check; |\n| mysqli | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| newrelic |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| oauth | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| oci8 | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| odbc | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| opcache | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| opencensus |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| openswoole |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |\n| opentelemetry | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |\n| parallel[*](#special-requirements-for-parallel) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |\n| parle[*](#special-requirements-for-parle) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| pcntl | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pcov | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| pdo_dblib | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pdo_firebird | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pdo_mysql | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pdo_oci | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| pdo_odbc | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pdo_pgsql | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pdo_sqlsrv | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| pgsql | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| phalcon |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |\n| php_trie | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |\n| phpy[*](#special-requirements-for-phpy) | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |  |\n| pkcs11 | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |\n| pq | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| propro |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| protobuf | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pspell | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| psr | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| pthreads[*](#special-requirements-for-pthreads) |  |  |  |  |  |  |  |  |  | &check; | &check; | &check; |\n| raphf | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| rdkafka | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| recode |  |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; |\n| redis | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| relay | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |\n| saxon[*](#special-requirements-for-saxon) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| seasclick | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| seaslog |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| shmop | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| simdjson[*](#special-requirements-for-simdjson) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |\n| smbclient | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| snappy | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| snmp | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| snuffleupagus | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| soap | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sockets | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sodium[*](#special-requirements-for-sodium) |  |  |  |  |  |  |  |  | &check; | &check; | &check; |  |\n| solr | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sourceguardian |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| spx | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sqlsrv[*](#special-requirements-for-sqlsrv) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| ssh2 | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| stomp | &check; | &check; | &check; |  |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| swoole | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sybase_ct |  |  |  |  |  |  |  |  |  |  | &check; | &check; |\n| sync | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sysvmsg | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sysvsem | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| sysvshm | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| tensor |  |  | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |  |\n| tideways | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| tidy | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| timezonedb | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| uopz |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| uploadprogress | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| uuid | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| uv | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |\n| vips[*](#special-requirements-for-vips) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| vld |  | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| wddx |  |  |  |  |  |  | &check; | &check; | &check; | &check; | &check; | &check; |\n| wikidiff2[*](#special-requirements-for-wikidiff2) | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |  |\n| xdebug | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| xdiff | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| xhprof | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| xlswriter | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| xmldiff | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| xmlrpc | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| xpass[*](#special-requirements-for-xpass) | &check; | &check; | &check; | &check; | &check; |  |  |  |  |  |  |  |\n| xsl | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| yac | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| yaml | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| yar | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| zephir_parser | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |  |  |\n| zip | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| zmq | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| zookeeper | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n| zstd | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; | &check; |\n\n*Number of supported extensions: 152*\n<!-- END OF EXTENSIONS TABLE -->\n\nPS: the pre-installed PHP extensions are excluded from this list.\nYou can list them with the following command (change `php:7.2-cli` to reflect the PHP version you are interested in):\n\n```\n$ docker run --rm php:7.2-cli php -m\n[PHP Modules]\nCore\nctype\ncurl\ndate\ndom\nfileinfo\nfilter\nftp\nhash\niconv\njson\nlibxml\nmbstring\nmysqlnd\nopenssl\npcre\nPDO\npdo_sqlite\nPhar\nposix\nreadline\nReflection\nsession\nSimpleXML\nsodium\nSPL\nsqlite3\nstandard\ntokenizer\nxml\nxmlreader\nxmlwriter\nzlib\n\n[Zend Modules]\n```\n\n## Configuration\n\nYou can configure the behavior of the script, as well as fine-tune some extensions in order fit your needs, by using environment variables.\n\nHere's an example:\n\n```sh\nIPE_LZF_BETTERCOMPRESSION=1 install-php-extensions lzf\n```\n\nHere's the list of all the supported environment variables:\n\n| Extension | Environment variable | Description |\n|---|---|---|\n| | `IPE_DEBUG=1` | By setting this environment variable, the script will print all the commands it executes (it will be very verbose, useful only for debug purposes) |\n| | `IPE_PROCESSOR_COUNT` | By default all available processors. Set this environment variable to override the number of processors detected by the script (used for parallel compilation) |\n| | `IPE_DONT_ENABLE=1` | By default the script will install and enable the extensions.<br />If you want to only install them (without enabling them) you can set this environment variable.<br />To enable the extensions at a later time you can execute the command `docker-php-ext-enable-<extension>` (for example: `docker-php-ext-enable-xdebug`).<br />**Beware**: installing some PHP extensions requires that other PHP extensions are already enabled, so use this feature wisely. |\n| | `IPE_SKIP_CHECK=1` | By default the script will check if the extensions can be enabled: if you want to skip this check, you can use this flag.<br />**Beware**: extensions may be enabled even if they break PHP: use this function wisely. |\n| | `IPE_KEEP_SYSPKG_CACHE=1` | By default the script will clear the apt/apk/pear cache in order to save disk space. You can disable it by setting this environment variable |\n| lzf | `IPE_LZF_BETTERCOMPRESSION=1` | By default `install-php-extensions` compiles the `lzf` extension to prefer speed over size; you can use this environment variable to compile it preferring size over speed |\n| event | `IPE_EVENT_NAMESPACE=`... | By default, the `event` classes are defined in the root namespace. You can use this environment variable to specify a custom namespace |\n| gd | `IPE_GD_WITHOUTAVIF=1` | Since PHP 8.1, gd supports the AVIF format. Enabling it requires compiling libaom/libdav1d/libyuv/libavif on Debian up to 11 and Alpine up to 3.14, which is time-consuming. You can disable AVIF support by setting this environment variable on those operating system versions |\n| oci8 & pdo_oci | `IPE_INSTANTCLIENT_BASIC=1` | The oci8 and pdo_oci PHP extensions require [Oracle Instant Client](https://www.oracle.com/database/technologies/instant-client.html). In order to save disk space, we install the Basic Lite version: if you want to install the Basic (non-lite) version simply set this environment variable |\n| http, intl, mongodb | `IPE_ICU_EN_ONLY=1` | Some extensions require the ICU library, use this flag to install a smaller, but English-only, ICU library on Alpine 3.16 and later |\n| pspell | `IPE_ASPELL_LANGUAGES='...'` | Configure the languages to be made available (for example: `IPE_ASPELL_LANGUAGES='en fr'`). If omitted, we'll assume `en` |\n| | `IPE_DEB_ARCHIVE` & `IPE_DEB_ARCHIVE_SECURITY` | The APT packages of very old Debian versions (eg Jessie) may have been archived: you can use these environment variables to specify custom URLs of these APT archives |\n| newrelic | `IPE_NEWRELIC_DAEMON=1` | Install the NewRelic daemon  |\n| newrelic | `IPE_NEWRELIC_KEEPLOG=1` | Keep the log files of NewRelic setup (`/tmp/nrinstall-….tar`)  |\n| newrelic | `NR_INSTALL_KEY` | Your New Relic license key |\n| swoole | `IPE_SWOOLE_WITHOUT_IOURING=1` | The io_uring kernel functionality is considered unsafe by security experts (see [here](https://security.googleblog.com/2023/06/learnings-from-kctf-vrps-42-linux.html) and [here](https://i.blackhat.com/BH-US-23/Presentations/US-23-Lin-bad_io_uring.pdf)). By default Swoole 6 and later is configured with io_uring support, use this environment variable to skip configuring io_uring |\n\n## Special requirements\n\nSome extensions have special requirements:\n\n<!-- START OF SPECIAL REQUIREMENTS -->\n<!-- ########################################################### -->\n<!-- #                                                         # -->\n<!-- #  DO NOT EDIT THIS TABLE: IT IS GENERATED AUTOMATICALLY  # -->\n<!-- #                                                         # -->\n<!-- #  EDIT THE data/special-requirements FILE INSTEAD        # -->\n<!-- #                                                         # -->\n<!-- ########################################################### -->\n| Extension | Requirements |\n|---|---|\n| <a name=\"special-requirements-for-cassandra\"></a>cassandra | &bull; Not available in `jessie` docker images<br />&bull; Not available in `stretch` docker images<br />&bull; Not available in `buster` docker images<br />&bull; Not available in `bullseye` docker images<br />&bull; Not available in `bookworm` docker images |\n| <a name=\"special-requirements-for-ddtrace\"></a>ddtrace | Not available in `jessie` docker images |\n| <a name=\"special-requirements-for-ecma_intl\"></a>ecma_intl | &bull; Not available in `buster` docker images<br />&bull; Not available in `bullseye` docker images |\n| <a name=\"special-requirements-for-geos\"></a>geos | &bull; Not available in `alpine3.9` docker images<br />&bull; Not available in `alpine3.10` docker images |\n| <a name=\"special-requirements-for-lz4\"></a>lz4 | Not available in `jessie` docker images |\n| <a name=\"special-requirements-for-memprof\"></a>memprof | &bull; Not available in `alpine3.9` docker images<br />&bull; Not available in `alpine3.10` docker images<br />&bull; Not available in `alpine3.11` docker images<br />&bull; Not available in `alpine3.12` docker images<br />&bull; Not available in `alpine3.13` docker images<br />&bull; Not available in `alpine3.14` docker images<br />&bull; Not available in `alpine3.15` docker images |\n| <a name=\"special-requirements-for-parallel\"></a>parallel | Requires images with PHP compiled with thread-safety enabled (`zts`) |\n| <a name=\"special-requirements-for-parle\"></a>parle | Not available in `jessie` docker images |\n| <a name=\"special-requirements-for-phpy\"></a>phpy | Not available in `buster` docker images |\n| <a name=\"special-requirements-for-pthreads\"></a>pthreads | Requires images with PHP compiled with thread-safety enabled (`zts`) |\n| <a name=\"special-requirements-for-saxon\"></a>saxon | Not available in `alpine` docker images |\n| <a name=\"special-requirements-for-simdjson\"></a>simdjson | &bull; Not available in `jessie` docker images<br />&bull; Not available in `stretch` docker images |\n| <a name=\"special-requirements-for-sodium\"></a>sodium | Not available in `jessie` docker images |\n| <a name=\"special-requirements-for-sqlsrv\"></a>sqlsrv | &bull; Not available in `7.1-alpine3.9` docker images<br />&bull; Not available in `7.1-alpine3.10` docker images |\n| <a name=\"special-requirements-for-vips\"></a>vips | &bull; Not available in `alpine3.9` docker images<br />&bull; Not available in `jessie` docker images |\n| <a name=\"special-requirements-for-wikidiff2\"></a>wikidiff2 | &bull; Not available in `jessie` docker images<br />&bull; Not available in `stretch` docker images |\n| <a name=\"special-requirements-for-xpass\"></a>xpass | Not available in `buster` docker images |\n<!-- END OF SPECIAL REQUIREMENTS -->\n\n### How do I know which Linux distribution I am using?\n\nYou can run this command:\n\n```sh\ncat /etc/os-release\n```\n\nFor example:\n- for Debian 11 (Bullseye) you'll see:\n  ```sh\n  PRETTY_NAME=\"Debian GNU/Linux 11 (bullseye)\"\n  ```\n- for Alpine Linux 3.14 you'll see:\n  ```sh\n  PRETTY_NAME=\"Alpine Linux v3.14\"\n  ```\n\n## Tests\n\nWhen submitting a pull request, a [GitHub Action](https://github.com/mlocati/docker-php-extension-installer/blob/master/.github/workflows/test-extensions.yml) is executed to check if affected PHP extensions actually work (see below).\n\nFurthermore, we also check that new versions of extensions in the PECL repository will still work.\nThis is done on a scheduled basis with another [GitHub Action](https://github.com/mlocati/docker-php-extension-installer/blob/master/.github/workflows/test-recent-extensions.yml).  \nIn case of failure, a message is sent to a [Telegram Channel](https://t.me/docker_php_extension_installer).  \nFeel free to subscribe to it to receive failure notifications.\n\n## How to contribute\n\n### Formatting code\n\nBefore submitting any pull request, you should execute the `lint` script in the `scripts` directory (or `lint.bat` on Windows).\n\nIf you don't do that, and if there's a coding style error, you'll see that the `Check shell coding style` and/or the `Check PHP coding style` GitHub Actions will fail.\n\nThe error will be something like this:\n\n```diff\n--- filename.orig\n+++ filename\n@@ -line number,7 +line number,7 @@\n     good line of code #1\n     good line of code #2\n     good line of code #3\n-    the original line with a wrong coding style\n+    the line wrong coding style that has been corrected\n     good line of code #4\n     good line of code #5\n     good line of code #6\n```\n\nSo, you should fix highlighted line (the one(s) at `line number`) by replacing what you see after the `-` with what you see after the `+`\n\n### Adding support to a new PHP extension?\n\n1. change the `install-php-extensions` script\n2. update the `data/supported-extensions` file, adding a new line with the handle of the extension and the list of supported PHP versions\n3. if the extension requires ZTS images:  \n   add a new line to the `data/special-requirements` file, with the extension handle followed by a space and `zts`\n\nSee [this pull request](https://github.com/mlocati/docker-php-extension-installer/pull/60) for an example.\n\n### Changing the supported PHP versions for an already supported PHP extension?\n\n1. change the `install-php-extensions` script\n2. update the `data/supported-extensions` file, adding the new PHP version to the existing line corresponding to the updated extension\n\nSee [this pull request](https://github.com/mlocati/docker-php-extension-installer/pull/62) for an example.\n\n### Improving code for an already supported extension?\n\nIf you change some code that affects one or more extensions, please add a line with `Test: extension1, extension2` to the message of one of the pull request commits.\nThat way, the test jobs will check the extension even if you don't touch the `data/supported-extensions` file.\n\nHere's an example of a commit message:\n\n```\nImprove the GD and ZIP extensions\n\nTest: gd, zip\n```\n\nTests only check the installation of a single PHP extension at a time.\nIf you want to test installing more PHP extensions at the same time, use a commit message like this:\n\n```\nImprove the GD and ZIP extensions\n\nTest: gd+zip\n```\n\nIf your pull request contains multiple commits, we'll check the \"Test:\" message of every commit.\nIf you want to stop parsing next commits, add `-STOP-` in the \"Test:\" line, for example:\n\n```\nImprove the GD and ZIP extensions\n\nTest: gd, zip, -STOP-\n```\n\nSee [this pull request](https://github.com/mlocati/docker-php-extension-installer/pull/43) for an example.\n\n### PHP requirements and configure options\n\nPHP extensions published on the PECL archive contain a `package.xml` (or `package2.xml`) file describing the supported PHP versions and the options that can be used to compile it.\nWhen we add support for a new PHP extension, and when a new version of a PHP extension is released, we have to check those constraints.\n\nIt's a rather tedious task, so I developed a project that lets you easily check those constraints: you can find it at https://mlocati.github.io/pecl-info ([here](https://github.com/mlocati/pecl-info) you can find its source code).\n\n## For the maintainers\n\nSee the [`MAINTAINERS.md`](https://github.com/mlocati/docker-php-extension-installer/blob/master/MAINTAINERS.md) file.\n\n## Do you want to really say thank you?\n\nYou can offer me a [monthly coffee](https://github.com/sponsors/mlocati) or a [one-time coffee](https://paypal.me/mlocati) :wink:\n"
        },
        {
          "name": "actions",
          "type": "tree",
          "content": null
        },
        {
          "name": "composer.json",
          "type": "blob",
          "size": 0.49609375,
          "content": "{\n    \"name\": \"mlocati/docker-php-extension-installer\",\n    \"description\": \"Easily install PHP extension in Docker containers\",\n    \"type\": \"project\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Michele Locati\",\n            \"email\": \"michele@locati.it\"\n        }\n    ],\n    \"minimum-stability\": \"stable\",\n    \"require-dev\": {\n        \"friendsofphp/php-cs-fixer\": \"^2.16\"\n    },\n    \"scripts\": {\n        \"lint\": \"php-cs-fixer fix --path-mode=intersection --config=.php_cs .\"\n    }\n}\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-php-extensions",
          "type": "blob",
          "size": 190.4091796875,
          "content": "#!/bin/sh\n\n# This script wraps docker-php-ext-install, properly configuring the system.\n#\n# Copyright (c) Michele Locati, 2018-2023\n#\n# Source: https://github.com/mlocati/docker-php-extension-installer\n#\n# License: MIT - see https://github.com/mlocati/docker-php-extension-installer/blob/master/LICENSE\n\n# Let's set a sane environment\nset -o errexit\nset -o nounset\n\nif test \"${IPE_DEBUG:-}\" = \"1\"; then\n\tset -x\nfi\n\nif ! which docker-php-ext-configure >/dev/null || ! which docker-php-ext-enable >/dev/null || ! which docker-php-ext-install >/dev/null || ! which docker-php-source >/dev/null; then\n\tprintf 'The script %s is meant to be used with official Docker PHP Images - https://hub.docker.com/_/php\\n' \"$0\" >&2\n\texit 1\nfi\n\nIPE_VERSION=master\n\nStandWithUkraine() {\n\tif test -t 1 && ! grep -Eq '^VERSION=.*jessie' /etc/os-release; then\n\t\tprintf '\\e[37;44m#StandWith\\e[30;43mUkraine\\e[0m\\n'\n\telse\n\t\tprintf '#StandWithUkraine\\n'\n\tfi\n}\n\nif test \"$IPE_VERSION\" = master && test \"${CI:-}\" != true; then\n\tcat <<EOF\n\n#############################################################################################################\n#                                                                                                           #\n#                                            W A R N I N G ! ! !                                            #\n#                                                                                                           #\n# You are using an unsupported method to get install-php-extensions!                                        #\n#                                                                                                           #\n# Please update the way you fetch it. Read the instructions at                                              #\n# https://github.com/mlocati/docker-php-extension-installer#usage                                           #\n#                                                                                                           #\n# For example, if you get this script by fetching                                                           #\n# https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions    #\n# replace it with                                                                                           #\n# https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions #\n#                                                                                                           #\n# Sleeping for a while so you get bored of this and act ;)                                                  #\n#                                                                                                           #\n#############################################################################################################\n\nEOF\n\tStandWithUkraine\n\tsleep 10 || true\nelse\n\tprintf 'install-php-extensions v.%s\\n' \"$IPE_VERSION\"\n\tStandWithUkraine\nfi\n\n# Reset the Internal Field Separator\nresetIFS() {\n\tIFS='\t \n'\n}\n\n# Set these variables:\n# - DISTRO containing the distribution name (eg 'alpine', 'debian')\n# - DISTRO_VERSION_NUMBER containing the distribution version (eg '3.14' for Alpine, 11 for Debian)\n# - DISTRO_VERSION containing the distribution name and its version(eg 'alpine@3.14', 'debian@11')\n# - DISTRO_MAJMIN_VERSION always containing a number representing the distribution version (eg 314 for Alpine, 1100 for Debian)\nsetDistro() {\n\tif ! test -r /etc/os-release; then\n\t\tprintf 'The file /etc/os-release is not readable\\n' >&2\n\t\texit 1\n\tfi\n\tDISTRO=\"$(cat /etc/os-release | grep -E ^ID= | cut -d = -f 2)\"\n\tDISTRO_VERSION_NUMBER=\"$(cat /etc/os-release | grep -E ^VERSION_ID= | cut -d = -f 2 | cut -d '\"' -f 2 | cut -d . -f 1,2)\"\n\tDISTRO_VERSION=\"$(printf '%s@%s' $DISTRO $DISTRO_VERSION_NUMBER)\"\n\tDISTRO_MAJMIN_VERSION=\"$(echo \"$DISTRO_VERSION_NUMBER\" | awk -F. '{print $1*100+$2}')\"\n}\n\n# Set:\n# - PHP_MAJMIN_VERSION: Major-Minor version, format MMmm (example 800 for PHP 8.0.1)\n# - PHP_MAJDOTMIN_VERSION: Major-Minor version, format M.m (example 8.0 for PHP 8.0.1)\n# - PHP_MAJMINPAT_VERSION: Major-Minor-Patch version, format MMmmpp (example 80001 for PHP 8.0.1) variables containing integers value\n# - PHP_MAJDOTMINDOTPAT_VERSION: Major-Minor-Patch version, format M.m.p (example 8.0.1 for PHP 8.0.1)\n# - PHP_THREADSAFE: 1 if PHP is thread-safe (TS), 0 if not thread-safe (NTS)\n# - PHP_DEBUGBUILD: 1 if PHP is debug build (configured with \"--enable-debug\"), 0 otherwise\n# - PHP_BITS: 32 if PHP is compiled for 32-bit, 64 if 64-bit\n# - PHP_EXTDIR: the absolute path where the PHP extensions reside\nsetPHPVersionVariables() {\n\tPHP_MAJDOTMINDOTPAT_VERSION=\"$(php-config --version)\"\n\tPHP_MAJMIN_VERSION=$(printf '%s' \"$PHP_MAJDOTMINDOTPAT_VERSION\" | awk -F. '{print $1*100+$2}')\n\tPHP_MAJDOTMIN_VERSION=$(printf '%s' \"$PHP_MAJDOTMINDOTPAT_VERSION\" | cut -d. -f1-2)\n\tPHP_MAJMINPAT_VERSION=$(printf '%s' \"$PHP_MAJDOTMINDOTPAT_VERSION\" | awk -F. '{print $1*10000+$2*100+$3}')\n\tPHP_THREADSAFE=$(php -n -r 'echo ZEND_THREAD_SAFE ? 1 : 0;')\n\tPHP_DEBUGBUILD=$(php -n -r 'echo ZEND_DEBUG_BUILD ? 1 : 0;')\n\tPHP_BITS=$(php -n -r 'echo PHP_INT_SIZE * 8;')\n\tPHP_EXTDIR=\"$(php -d display_errors=stderr -r 'echo realpath(ini_get(\"extension_dir\"));')\"\n}\n\n# Fix apt-get being very slow on Debian Jessie\n# See https://bugs.launchpad.net/ubuntu/+source/apt/+bug/1332440\nfixMaxOpenFiles() {\n\tfixMaxOpenFiles_cur=$(ulimit -n 2>/dev/null || echo 0)\n\tif test \"$fixMaxOpenFiles_cur\" -gt 10000; then\n\t\tulimit -n 10000\n\tfi\n}\n\n# Get the directory containing the compiled PHP extensions\n#\n# Output:\n#   The absolute path of the extensions dir\ngetPHPExtensionsDir() {\n\tphp -i | grep -E '^extension_dir' | head -n1 | tr -s '[:space:]*=>[:space:]*' '|' | cut -d'|' -f2\n}\n\n# Normalize the name of a PHP extension\n#\n# Arguments:\n#   $1: the name of the module to be normalized\n#\n# Output:\n#   The normalized module name\nnormalizePHPModuleName() {\n\tnormalizePHPModuleName_name=\"$1\"\n\tcase \"$normalizePHPModuleName_name\" in\n\t\t*A* | *B* | *C* | *D* | *E* | *F* | *G* | *H* | *I* | *J* | *K* | *L* | *M* | *N* | *O* | *P* | *Q* | *R* | *S* | *T* | *U* | *V* | *W* | *X* | *Y* | *Z*)\n\t\t\tnormalizePHPModuleName_name=\"$(LC_CTYPE=C printf '%s' \"$normalizePHPModuleName_name\" | tr '[:upper:]' '[:lower:]')\"\n\t\t\t;;\n\tesac\n\tcase \"$normalizePHPModuleName_name\" in\n\t\tdatadog_trace)\n\t\t\tnormalizePHPModuleName_name=ddtrace\n\t\t\t;;\n\t\tioncube | ioncube\\ loader)\n\t\t\tnormalizePHPModuleName_name='ioncube_loader'\n\t\t\t;;\n\t\tpecl_http)\n\t\t\tnormalizePHPModuleName_name='http'\n\t\t\t;;\n\t\tzend\\ opcache)\n\t\t\tnormalizePHPModuleName_name='opcache'\n\t\t\t;;\n\t\tlibsodium)\n\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\tnormalizePHPModuleName_name='sodium'\n\t\t\tfi\n\t\t\t;;\n\t\tsodium)\n\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\tnormalizePHPModuleName_name='libsodium'\n\t\t\tfi\n\t\t\t;;\n\t\t*\\ *)\n\t\t\tprintf '### WARNING Unrecognized module name: %s ###\\n' \"$1\" >&2\n\t\t\t;;\n\tesac\n\tprintf '%s' \"$normalizePHPModuleName_name\"\n}\n\n# Get the PECL name of PHP extension\n#\n# Arguments:\n#   $1: the name of the extension\n#\n# Output:\n#   The PECL name of the extension\ngetPeclModuleName() {\n\tnormalizePHPModuleName_name=\"$1\"\n\tcase \"$normalizePHPModuleName_name\" in\n\t\tddtrace)\n\t\t\tnormalizePHPModuleName_name=datadog_trace\n\t\t\t;;\n\t\thttp)\n\t\t\tnormalizePHPModuleName_name=pecl_http\n\t\t\t;;\n\t\tsodium)\n\t\t\tnormalizePHPModuleName_name=libsodium\n\t\t\t;;\n\tesac\n\tprintf '%s' \"$normalizePHPModuleName_name\"\n}\n\n# Parse a package.xml (or package2.xml) file and extract the module name and version\n#\n# Arguments:\n#   $1: the patho to the XML file\n#\n# Set these variables:\n# - EXTRACTPACKAGEVERSIONFROMXML_NAME\n# - EXTRACTPACKAGEVERSIONFROMXML_VERSION\n#\n# Output:\n#   Nothing\n#\n# Return:\n#   0 (true): if the string is in the list\n#   1 (false): if the string is not in the list\nextractPackageVersionFromXML() {\n\tif ! test -f \"$1\"; then\n\t\tprintf 'Unable to find the file\\n%s\\n' >&2\n\t\treturn 1\n\tfi\n\textractPackageVersionFromXML_code=\"$(\n\t\tcat <<'EOT'\n$doc = new DOMDocument();\nif (!$doc->load($argv[1])) {\n\tfwrite(STDERR, \"Failed to load XML file\\n\");\n\texit(1);\n}\nset_error_handler(\n\tstatic function($errno, $errstr) {\n\t\tfwrite(STDERR, trim((string) $errstr) . \"\\n\");\n\t\texit(1);\n\t},\n\t-1\n);\n$xpath = new DOMXpath($doc);\n$xpath->registerNamespace('v20', 'http://pear.php.net/dtd/package-2.0');\n$xpath->registerNamespace('v21', 'http://pear.php.net/dtd/package-2.1');\nif ($xpath->query('/v20:package/v20:dependencies')->length === 1) {\n\t$ns = 'v20:';\n} elseif ($xpath->query('/v21:package/v21:dependencies')->length === 1) {\n\t$ns = 'v21:';\n} elseif ($xpath->query('/package')->length === 1) {\n\t$ns = '';\n} else {\n\tfwrite(STDERR, \"Unsupported namespace of the XML of package version details\\n\");\n}\n$nodes = $xpath->query(\"/{$ns}package/{$ns}name\");\n$name = trim((string) $nodes[0]->nodeValue);\nif ($ns === '') {\n\t$nodes = $xpath->query(\"/{$ns}package/{$ns}version\");\n} else {\n\t$nodes = $xpath->query(\"/{$ns}package/{$ns}version/{$ns}release\");\n}\n$version = trim((string) $nodes[0]->nodeValue);\necho \"EXTRACTPACKAGEVERSIONFROMXML_NAME='{$name}'\\n\";\necho \"EXTRACTPACKAGEVERSIONFROMXML_VERSION='{$version}'\\n\";\nexit(0);\nEOT\n\t)\"\n\textractPackageVersionFromXML_vars=\"$(php -n -d display_errors=stderr -r \"$extractPackageVersionFromXML_code\" \"$1\")\"\n\tif test -z \"$extractPackageVersionFromXML_vars\"; then\n\t\treturn 1\n\tfi\n\teval \"$extractPackageVersionFromXML_vars\"\n\treturn 0\n}\n\n# Parse a module name (and optionally version) as received via command arguments, extracting the version and normalizing it\n# Examples:\n#   xdebug-2.9.8\n#   xdebug-^2\n#   xdebug-^2.9\n#\n# Arguments:\n#   $1: the name of the module to be normalized\n#\n# Set these variables:\n# - PROCESSED_PHP_MODULE_ARGUMENT\n#\n# Optionally set these variables:\n# - PHP_WANTEDMODULEVERSION_<...> (where <...> is the normalized module name)\n# - PHP_MODULESOURCECODEPATH_<...> (where <...> is the normalized module name)\n#\n# Output:\n#   Nothing\nprocessPHPModuleArgument() {\n\tprocessPHPModuleArgument_arg=\"$1\"\n\tcase \"$processPHPModuleArgument_arg\" in\n\t\timagick)\n\t\t\tif test $PHP_MAJMIN_VERSION -ge 804; then\n\t\t\t\tprocessPHPModuleArgument_arg=imagick/imagick@65e27f2bc02e7e8f1bf64e26e359e42a1331fca1\n\t\t\telif test $PHP_MAJMIN_VERSION -ge 803; then\n\t\t\t\tprocessPHPModuleArgument_arg=imagick/imagick@28f27044e435a2b203e32675e942eb8de620ee58\n\t\t\tfi\n\t\t\t;;\n\tesac\n\t# Convert GitHub short form to long url,\n\t# for example: from\n\t# php-memcached-dev/php-memcached@8f106564e6bb005ca6100b12ccc89000daafa9d8\n\t# to\n\t# https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/8f106564e6bb005ca6100b12ccc89000daafa9d8\n\tprocessPHPModuleArgument_arg=\"$(printf '%s' \"$processPHPModuleArgument_arg\" | sed -E 's/^([a-zA-Z0-9_.\\-]+\\/[a-zA-Z0-9_.\\-]+)@(.+$)/https:\\/\\/codeload.github.com\\/\\1\\/tar.gz\\/\\2/')\"\n\t# Let's check if $processPHPModuleArgument_arg is an URL\n\tif printf '%s' \"$processPHPModuleArgument_arg\" | grep -Eq '^https?://[^ ]+/[^ ]+$'; then\n\t\tprintf 'Downloading source from %s\\n' \"$processPHPModuleArgument_arg\"\n\t\tprocessPHPModuleArgument_arg=\"$(getPackageSource \"$processPHPModuleArgument_arg\")\"\n\tfi\n\t# Let's check if $processPHPModuleArgument_arg the absolute path of an existing directory\n\tif test \"$processPHPModuleArgument_arg\" != \"${processPHPModuleArgument_arg#/}\" && test -d \"$processPHPModuleArgument_arg\"; then\n\t\tif test -f \"$processPHPModuleArgument_arg/package2.xml\"; then\n\t\t\tprintf 'Checking package2.xml of directory %s... ' \"$processPHPModuleArgument_arg\"\n\t\t\tif ! extractPackageVersionFromXML \"$processPHPModuleArgument_arg/package2.xml\"; then\n\t\t\t\treturn 1\n\t\t\tfi\n\t\telif test -f \"$processPHPModuleArgument_arg/package.xml\"; then\n\t\t\tprintf 'Checking package.xml of directory %s... ' \"$processPHPModuleArgument_arg\"\n\t\t\tif ! extractPackageVersionFromXML \"$processPHPModuleArgument_arg/package.xml\"; then\n\t\t\t\treturn 1\n\t\t\tfi\n\t\telse\n\t\t\tprintf 'Unable to find the package.xml file in the directory\\n%s\\n' \"$processPHPModuleArgument_arg\"\n\t\t\treturn 1\n\t\tfi\n\t\tprintf 'good (name: %s, version: %s)\\n' \"$EXTRACTPACKAGEVERSIONFROMXML_NAME\" \"$EXTRACTPACKAGEVERSIONFROMXML_VERSION\"\n\t\tPROCESSED_PHP_MODULE_ARGUMENT=\"$(normalizePHPModuleName \"$EXTRACTPACKAGEVERSIONFROMXML_NAME\")\"\n\t\tprocessPHPModuleArgument_version=\"$EXTRACTPACKAGEVERSIONFROMXML_VERSION\"\n\t\tif printf '%s' \"$PROCESSED_PHP_MODULE_ARGUMENT\" | grep -Eq '^[a-zA-Z0-9_]+$'; then\n\t\t\teval PHP_MODULESOURCECODEPATH_$PROCESSED_PHP_MODULE_ARGUMENT=\"$processPHPModuleArgument_arg\"\n\t\telse\n\t\t\tprintf 'Unable to parse the following module name:\\n%s\\n' \"$PROCESSED_PHP_MODULE_ARGUMENT\" >&2\n\t\t\texit 1\n\t\tfi\n\telse\n\t\tPROCESSED_PHP_MODULE_ARGUMENT=\"${processPHPModuleArgument_arg%%-*}\"\n\t\tif test -n \"$PROCESSED_PHP_MODULE_ARGUMENT\" && test \"$PROCESSED_PHP_MODULE_ARGUMENT\" != \"$processPHPModuleArgument_arg\"; then\n\t\t\tprocessPHPModuleArgument_version=\"${processPHPModuleArgument_arg#*-}\"\n\t\telse\n\t\t\tprocessPHPModuleArgument_version=''\n\t\tfi\n\t\tPROCESSED_PHP_MODULE_ARGUMENT=\"$(normalizePHPModuleName \"$PROCESSED_PHP_MODULE_ARGUMENT\")\"\n\tfi\n\tif test -n \"$processPHPModuleArgument_version\"; then\n\t\tif printf '%s' \"$PROCESSED_PHP_MODULE_ARGUMENT\" | grep -Eq '^[a-zA-Z0-9_]+$'; then\n\t\t\teval PHP_WANTEDMODULEVERSION_$PROCESSED_PHP_MODULE_ARGUMENT=\"$processPHPModuleArgument_version\"\n\t\telif printf '%s' \"$PROCESSED_PHP_MODULE_ARGUMENT\" | grep -Eq '^@[a-zA-Z0-9_]+$'; then\n\t\t\teval PHP_WANTEDMODULEVERSION__${PROCESSED_PHP_MODULE_ARGUMENT#@}=\"$processPHPModuleArgument_version\"\n\t\telse\n\t\t\tprintf 'Unable to parse the following module name:\\n%s\\n' \"$PROCESSED_PHP_MODULE_ARGUMENT\" >&2\n\t\tfi\n\tfi\n}\n\n# Get the wanted PHP module version, as specified in the command line arguments.\n#\n# Arguments:\n#   $1: the name of the module to be normalized\n#\n# Output:\n#   The wanted version (if any)\ngetWantedPHPModuleVersion() {\n\tif printf '%s' \"$1\" | grep -Eq '^[a-zA-Z0-9_]+$'; then\n\t\teval printf '%s' \"\\${PHP_WANTEDMODULEVERSION_$1:-}\"\n\telif printf '%s' \"$1\" | grep -Eq '^@[a-zA-Z0-9_]+$'; then\n\t\teval printf '%s' \"\\${PHP_WANTEDMODULEVERSION__${1#@}:-}\"\n\tfi\n}\n\n# Get source code path of a PHP module version, as specified in the command line arguments.\n#\n# Arguments:\n#   $1: the name of the module to be normalized\n#\n# Output:\n#   The wanted version (if any)\ngetModuleSourceCodePath() {\n\tif printf '%s' \"$1\" | grep -Eq '^[a-zA-Z0-9_]+$'; then\n\t\teval printf '%s' \"\\${PHP_MODULESOURCECODEPATH_$1:-}\"\n\tfi\n}\n\n# Get the actual PHP module version, resolving it if it starts with '^'\n#\n# Arguments:\n#   $1: the name of the module\n#   $2: the wanted version (optional, if omitted we'll use getWantedPHPModuleVersion)\n#\n# Output:\n#   The version to be used\nresolvePHPModuleVersion() {\n\tresolvePHPModuleVersion_module=\"$1\"\n\tif test $# -lt 2; then\n\t\tresolvePHPModuleVersion_raw=\"$(getWantedPHPModuleVersion \"$installRemoteModule_module\")\"\n\telse\n\t\tresolvePHPModuleVersion_raw=\"$2\"\n\tfi\n\tresolvePHPModuleVersion_afterCaret=\"${resolvePHPModuleVersion_raw#^}\"\n\tif test \"$resolvePHPModuleVersion_raw\" = \"$resolvePHPModuleVersion_afterCaret\"; then\n\t\tprintf '%s' \"$resolvePHPModuleVersion_raw\"\n\t\treturn\n\tfi\n\tcase \"$resolvePHPModuleVersion_afterCaret\" in\n\t\t?*@snapshot | ?*@devel | ?*@alpha | ?*@beta | ?*@stable)\n\t\t\tresolvePHPModuleVersion_wantedStability=\"${resolvePHPModuleVersion_afterCaret##*@}\"\n\t\t\tresolvePHPModuleVersion_wantedVersion=\"${resolvePHPModuleVersion_afterCaret%@*}\"\n\t\t\t;;\n\t\t*)\n\t\t\tresolvePHPModuleVersion_wantedStability=''\n\t\t\tresolvePHPModuleVersion_wantedVersion=\"$resolvePHPModuleVersion_afterCaret\"\n\t\t\t;;\n\tesac\n\tresolvePHPModuleVersion_peclModule=\"$(getPeclModuleName \"$resolvePHPModuleVersion_module\")\"\n\tresolvePHPModuleVersion_xml=\"$(curl -sSLf \"http://pecl.php.net/rest/r/$resolvePHPModuleVersion_peclModule/allreleases.xml\")\"\n\t# remove line endings, collapse spaces\n\tresolvePHPModuleVersion_versions=\"$(printf '%s' \"$resolvePHPModuleVersion_xml\" | tr -s ' \\t\\r\\n' ' ')\"\n\t# one line per release (eg <r><v>1.2.3</v><s>stable</s></r>)\n\tresolvePHPModuleVersion_versions=\"$(printf '%s' \"$resolvePHPModuleVersion_versions\" | sed -r 's#<r#\\n<r#g')\"\n\tif test -n \"$resolvePHPModuleVersion_wantedStability\"; then\n\t\t# keep the lines with the wanted stability\n\t\tresolvePHPModuleVersion_versions=\"$(printf '%s' \"$resolvePHPModuleVersion_versions\" | grep \"<s>$resolvePHPModuleVersion_wantedStability</s>\")\"\n\tfi\n\t# remove everything's up to '<v>' (included)\n\tresolvePHPModuleVersion_versions=\"$(printf '%s' \"$resolvePHPModuleVersion_versions\" | sed 's#^.*<v>##')\"\n\t# keep just the versions\n\tresolvePHPModuleVersion_versions=\"$(printf '%s' \"$resolvePHPModuleVersion_versions\" | cut -d'<' -f1)\"\n\tresetIFS\n\tfor resolvePHPModuleVersion_version in $resolvePHPModuleVersion_versions; do\n\t\tresolvePHPModuleVersion_suffix=\"${resolvePHPModuleVersion_version#$resolvePHPModuleVersion_wantedVersion}\"\n\t\tif test \"$resolvePHPModuleVersion_version\" != \"${resolvePHPModuleVersion_version#$resolvePHPModuleVersion_wantedVersion.}\"; then\n\t\t\t# Example: looking for 1.0, found 1.0.1\n\t\t\tprintf '%s' \"$resolvePHPModuleVersion_version\"\n\t\t\treturn\n\t\tfi\n\tdone\n\tfor resolvePHPModuleVersion_version in $resolvePHPModuleVersion_versions; do\n\t\tresolvePHPModuleVersion_suffix=\"${resolvePHPModuleVersion_version#$resolvePHPModuleVersion_wantedVersion}\"\n\t\tif test \"$resolvePHPModuleVersion_version\" = \"$resolvePHPModuleVersion_suffix\"; then\n\t\t\tcontinue\n\t\tfi\n\t\tif test -z \"$resolvePHPModuleVersion_suffix\"; then\n\t\t\t# Example: looking for 1.0, found exactly it\n\t\t\tprintf '%s' \"$resolvePHPModuleVersion_version\"\n\t\t\treturn\n\t\tfi\n\t\tcase \"$resolvePHPModuleVersion_suffix\" in\n\t\t\t[0-9])\n\t\t\t\t# Example: looking for 1.1, but this is 1.10\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\t# Example: looking for 1.1, this is 1.1rc1\n\t\t\t\tprintf '%s' \"$resolvePHPModuleVersion_version\"\n\t\t\t\treturn\n\t\t\t\t;;\n\t\tesac\n\tdone\n\tprintf 'Unable to find a version of \"%s\" compatible with \"%s\"\\nAvailable versions are:\\n%s\\n' \"$resolvePHPModuleVersion_module\" \"$resolvePHPModuleVersion_raw\" \"$resolvePHPModuleVersion_versions\" >&2\n\texit 1\n}\n\n# Get the actual version of a PECL pmodule, resolving 'latest', 'stable', 'beta', 'alpha', 'devel'.\n#\n# Arguments:\n#   $1: the module name as known on the PECL archive\n#   $2: the version to be resolved\n# Output:\n#   $2 itself if $1 is not 'latest', 'stable', 'beta', 'alpha', or 'devel', the actual version otherwise\nresolvePeclStabilityVersion() {\n\tcase \"$2\" in\n\t\tlatest | stable | beta | alpha | devel) ;;\n\t\t*)\n\t\t\tprintf '%s' \"$2\"\n\t\t\treturn\n\t\t\t;;\n\tesac\n\tresolvePeclStabilityVersion_peclModule=\"$(getPeclModuleName \"$1\")\"\n\tpeclStabilityFlagToVersion_url=\"http://pecl.php.net/rest/r/$resolvePeclStabilityVersion_peclModule/$2.txt\"\n\tif ! peclStabilityFlagToVersion_result=\"$(curl -sSLf \"$peclStabilityFlagToVersion_url\")\"; then\n\t\tpeclStabilityFlagToVersion_result=''\n\tfi\n\tif test -z \"$peclStabilityFlagToVersion_result\"; then\n\t\tprintf 'Failed to resolve the PECL package version \"%s\" of %s from %s\\n' \"$2\" \"$1\" \"$peclStabilityFlagToVersion_url\" >&2\n\t\texit 1\n\tfi\n\tprintf '%s' \"$peclStabilityFlagToVersion_result\"\n}\n\n# Set these variables:\n# - PHP_PREINSTALLED_MODULES the normalized list of PHP modules installed before running this script\nsetPHPPreinstalledModules() {\n\tPHP_PREINSTALLED_MODULES=''\n\tIFS='\n'\n\tfor getPHPInstalledModules_module in $(php -m); do\n\t\tgetPHPInstalledModules_moduleNormalized=''\n\t\tcase \"$getPHPInstalledModules_module\" in\n\t\t\t\\[PHP\\ Modules\\]) ;;\n\t\t\t\\[Zend\\ Modules\\])\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tgetPHPInstalledModules_moduleNormalized=\"$(normalizePHPModuleName \"$getPHPInstalledModules_module\")\"\n\t\t\t\tif ! stringInList \"$getPHPInstalledModules_moduleNormalized\" \"$PHP_PREINSTALLED_MODULES\"; then\n\t\t\t\t\tPHP_PREINSTALLED_MODULES=\"$PHP_PREINSTALLED_MODULES $getPHPInstalledModules_moduleNormalized\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\tesac\n\tdone\n\tif command -v composer >/dev/null; then\n\t\tPHP_PREINSTALLED_MODULES=\"$PHP_PREINSTALLED_MODULES @composer\"\n\tfi\n\tresetIFS\n\tPHP_PREINSTALLED_MODULES=\"${PHP_PREINSTALLED_MODULES# }\"\n}\n\n# Get the handles of the modules to be installed\n#\n# Arguments:\n#   $@: all module handles\n#\n# Set:\n#   PHP_MODULES_TO_INSTALL\n#\n# Output:\n#   Nothing\nprocessCommandArguments() {\n\tprocessCommandArguments_endArgs=0\n\tPHP_MODULES_TO_INSTALL=''\n\t# Support deprecated flag IPE_FIX_CACERTS\n\tcase \"${IPE_FIX_CACERTS:-}\" in\n\t\t1 | y* | Y*)\n\t\t\tPHP_MODULES_TO_INSTALL=\"$PHP_MODULES_TO_INSTALL @fix_letsencrypt\"\n\t\t\t;;\n\tesac\n\twhile :; do\n\t\tif test $# -lt 1; then\n\t\t\tbreak\n\t\tfi\n\t\tprocessCommandArguments_skip=0\n\t\tif test $processCommandArguments_endArgs -eq 0; then\n\t\t\tcase \"$1\" in\n\t\t\t\t--cleanup)\n\t\t\t\t\tprintf '### WARNING the %s option is deprecated (we always cleanup everything) ###\\n' \"$1\" >&2\n\t\t\t\t\tprocessCommandArguments_skip=1\n\t\t\t\t\t;;\n\t\t\t\t--)\n\t\t\t\t\tprocessCommandArguments_skip=1\n\t\t\t\t\tprocessCommandArguments_endArgs=1\n\t\t\t\t\t;;\n\t\t\t\t-*)\n\t\t\t\t\tprintf 'Unrecognized option: %s\\n' \"$1\" >&2\n\t\t\t\t\texit 1\n\t\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\t\tif test $processCommandArguments_skip -eq 0; then\n\t\t\tprocessPHPModuleArgument \"$1\"\n\t\t\tprocessCommandArguments_name=\"$PROCESSED_PHP_MODULE_ARGUMENT\"\n\t\t\tif stringInList \"$processCommandArguments_name\" \"$PHP_MODULES_TO_INSTALL\"; then\n\t\t\t\tprintf '### WARNING Duplicated module name specified: %s ###\\n' \"$processCommandArguments_name\" >&2\n\t\t\telif stringInList \"$processCommandArguments_name\" \"$PHP_PREINSTALLED_MODULES\"; then\n\t\t\t\tprintf '### WARNING Module already installed: %s ###\\n' \"$processCommandArguments_name\" >&2\n\t\t\telse\n\t\t\t\tPHP_MODULES_TO_INSTALL=\"$PHP_MODULES_TO_INSTALL $processCommandArguments_name\"\n\t\t\tfi\n\t\tfi\n\t\tshift\n\tdone\n\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL# }\"\n}\n\n# Add a module that's required by another module\n#\n# Arguments:\n#   $1: module that requires another module\n#   $2: the required module\n#\n# Update:\n#   PHP_MODULES_TO_INSTALL\n#\n# Output:\n#   Nothing\ncheckRequiredModule() {\n\tif ! stringInList \"$1\" \"$PHP_MODULES_TO_INSTALL\"; then\n\t\treturn\n\tfi\n\tif stringInList \"$2\" \"$PHP_PREINSTALLED_MODULES\"; then\n\t\treturn\n\tfi\n\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList \"$1\" \"$PHP_MODULES_TO_INSTALL\")\"\n\tif ! stringInList \"$2\" \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$PHP_MODULES_TO_INSTALL $2\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL# }\"\n\tfi\n\tPHP_MODULES_TO_INSTALL=\"$PHP_MODULES_TO_INSTALL $1\"\n}\n\n# Sort the modules to be installed, in order to fix dependencies\n#\n# Update:\n#   PHP_MODULES_TO_INSTALL\n#\n# Output:\n#   Nothing\nsortModulesToInstall() {\n\t# apcu_bc requires apcu\n\tcheckRequiredModule 'apcu_bc' 'apcu'\n\t# http requires propro (for PHP < 8) and raphf\n\tif test $PHP_MAJMIN_VERSION -le 704; then\n\t\tcheckRequiredModule 'http' 'propro'\n\tfi\n\tcheckRequiredModule 'http' 'raphf'\n\t# event requires sockets (for PHP <= 5.6)\n\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\tcheckRequiredModule event sockets\n\tfi\n\t# relay requires msgpack\n\tcheckRequiredModule relay msgpack\n\t# relay requires igbinary\n\tcheckRequiredModule relay igbinary\n\t# pq requires raphf\n\tcheckRequiredModule pq raphf\n\t# phalcon up to v5.0.0beta3 requires psr\n\tif test $PHP_MAJMINPAT_VERSION -lt 70401; then\n\t\tcheckRequiredModule phalcon psr\n\tfi\n\t# Some module installation may use sockets if available: move it before other modules\n\tif stringInList 'sockets' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'sockets' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"sockets $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# Some module installation may use igbinary if available: move it before other modules\n\tif stringInList 'igbinary' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'igbinary' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"igbinary $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# Some module installation may use msgpack if available: move it before other modules\n\tif stringInList 'msgpack' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'msgpack' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"msgpack $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# Some module installation may use socket if available: move it before other modules\n\tif stringInList 'socket' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'socket' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"socket $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# Some module installation may use apcu if available: move it before other modules\n\tif stringInList 'apcu' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'apcu' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"apcu $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# Some module installation may use raphf if available: move it before other modules\n\tif stringInList 'raphf' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList 'raphf' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"raphf $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n\t# In any case, first of all, we need to install composer\n\tif stringInList '@composer' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\tPHP_MODULES_TO_INSTALL=\"$(removeStringFromList '@composer' \"$PHP_MODULES_TO_INSTALL\")\"\n\t\tPHP_MODULES_TO_INSTALL=\"@composer $PHP_MODULES_TO_INSTALL\"\n\t\tPHP_MODULES_TO_INSTALL=\"${PHP_MODULES_TO_INSTALL% }\"\n\tfi\n}\n\n# Expand the IPE_ASPELL_LANGUAGES environment variable into apk/apt package names\nexpandASpellDictionaries() {\n\texpandASpellDictionaries_languages=\"${IPE_ASPELL_LANGUAGES:-en}\"\n\texpandASpellDictionaries_result=''\n\tresetIFS\n\tfor expandASpellDictionaries_language in $expandASpellDictionaries_languages; do\n\t\texpandASpellDictionaries_result=\"$expandASpellDictionaries_result aspell-$expandASpellDictionaries_language\"\n\tdone\n\tprintf '%s' \"${expandASpellDictionaries_result# }\"\n}\n\n# Get the required APT/APK packages for a specific PHP version and for the list of module handles\n#\n# Arguments:\n#   $@: the PHP module handles\n#\n# Set:\n#   PACKAGES_PERSISTENT_NEW the list of packages required at runtume that must be installed\n#   PACKAGES_PERSISTENT_PRE the list of packages required at runtume that are already installed\n#   PACKAGES_VOLATILE the list of packages required at compile time that must be installed\n#   PACKAGES_PREVIOUS the list of packages (with their version) that are installed right now (calculated only on Debian and only if PACKAGES_PERSISTENT_NEW or PACKAGES_VOLATILE are not empty)\n#   COMPILE_LIBS\nbuildRequiredPackageLists() {\n\tbuildRequiredPackageLists_persistent=''\n\tbuildRequiredPackageLists_volatile=''\n\tCOMPILE_LIBS=''\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tapk update\n\t\t\t;;\n\t\tdebian)\n\t\t\tinvokeAptGetUpdate\n\t\t\t;;\n\tesac\n\tcase \"$DISTRO_VERSION\" in\n\t\talpine@*)\n\t\t\tif test $# -gt 1 || test \"${1:-}\" != '@composer'; then\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $PHPIZE_DEPS\"\n\t\t\tfi\n\t\t\tif test -z \"$(apk info 2>/dev/null | grep -E ^libssl)\"; then\n\t\t\t\tbuildRequiredPackageLists_libssl=\"$(apk search | grep -E '^libssl[0-9]' | head -1 | cut -d- -f1)\"\n\t\t\telif test -z \"$(apk info 2>/dev/null | grep -E '^libressl.*-libtls')\" && test -z \"$(apk info 2>/dev/null | grep -E '^libressl.*-libssl')\" && test -z \"$(apk info 2>/dev/null | grep -E '^libretls-')\"; then\n\t\t\t\tbuildRequiredPackageLists_libssl=$(apk search -q libressl*-libtls)\n\t\t\telse\n\t\t\t\tbuildRequiredPackageLists_libssl=''\n\t\t\tfi\n\t\t\tif test $DISTRO_MAJMIN_VERSION -le 313; then\n\t\t\t\tbuildRequiredPackageLists_libssldev='libressl-dev'\n\t\t\telse\n\t\t\t\tbuildRequiredPackageLists_libssldev='libretls-dev'\n\t\t\tfi\n\t\t\tbuildRequiredPackageLists_icuPersistent=''\n\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 316; then\n\t\t\t\tcase \"${IPE_ICU_EN_ONLY:-}\" in\n\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbuildRequiredPackageLists_icuPersistent='icu-data-full'\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t;;\n\t\tdebian@9)\n\t\t\tbuildRequiredPackageLists_libssldev='libssl1.0-dev'\n\t\t\t;;\n\t\tdebian@*)\n\t\t\tbuildRequiredPackageLists_libssldev='^libssl([0-9]+(\\.[0-9]+)*)?-dev$'\n\t\t\t;;\n\tesac\n\tif test $USE_PICKLE -gt 1; then\n\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile git\"\n\tfi\n\twhile :; do\n\t\tif test $# -lt 1; then\n\t\t\tbreak\n\t\tfi\n\t\tcase \"$1@$DISTRO\" in\n\t\t\t@composer@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent unzip\"\n\t\t\t\t;;\n\t\t\tamqp@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent rabbitmq-c\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile rabbitmq-c-dev\"\n\t\t\t\t;;\n\t\t\tamqp@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^librabbitmq[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile librabbitmq-dev libssh-dev\"\n\t\t\t\t;;\n\t\t\tbz2@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libbz2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile bzip2-dev\"\n\t\t\t\t;;\n\t\t\tbz2@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libbz2-dev\"\n\t\t\t\t;;\n\t\t\tcassandra@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent cassandra-cpp-driver gmp\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cassandra-cpp-driver-dev gmp-dev\"\n\t\t\t\t;;\n\t\t\tcmark@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake\"\n\t\t\t\t;;\n\t\t\tcmark@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake\"\n\t\t\t\t;;\n\t\t\tddtrace@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libgcc\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile curl-dev\"\n\t\t\t\t;;\n\t\t\tddtrace@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libcurl4-openssl-dev\"\n\t\t\t\t;;\n\t\t\tdba@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent db\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile db-dev\"\n\t\t\t\t;;\n\t\t\tdba@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile ^libdb5\\.3-dev$\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile patch\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tdecimal@debian)\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -lt 1200; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libmpdec[0-9]*$\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmpdec-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tecma_intl@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent icu-libs $buildRequiredPackageLists_icuPersistent\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev libidn-dev\"\n\t\t\t\t;;\n\t\t\tecma_intl@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libicu[0-9]+$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libicu-dev\"\n\t\t\t\t;;\n\t\t\tenchant@alpine)\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 312; then\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent enchant2\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile enchant2-dev\"\n\t\t\t\t\telse\n\t\t\t\t\t\t# The system provides libenchant2, supported since PHP 8.0: we need to build libenchant1 on our own\n\t\t\t\t\t\tif ! isLibenchant1Installed; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent glib aspell-libs libhunspell\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile glib-dev aspell-dev hunspell-dev\"\n\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libenchant1\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent enchant\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile enchant-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tenchant@debian)\n\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 11; then\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libenchant-2-2\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libenchant-2-dev\"\n\t\t\t\t\telse\n\t\t\t\t\t\tif ! isLibenchant1Installed; then\n\t\t\t\t\t\t\t# The system provides libenchant2, supported since PHP 8.0: we need to build libenchant1 on our own\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent aspell-en libhunspell-1.7-0\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libglib2.0-dev libaspell-dev libhunspell-dev\"\n\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libenchant1\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libenchant1c2a\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libenchant-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tevent@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libevent $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libevent-dev $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tevent@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libevent[0-9\\.\\-]*$ ^libevent-openssl[0-9\\.\\-]*$ ^libevent-extra[0-9\\.\\-]*$ ^libevent-pthreads[0-9\\.\\-]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libevent-dev $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tffi@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libffi\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libffi-dev\"\n\t\t\t\t;;\n\t\t\tffi@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libffi-dev\"\n\t\t\t\t;;\n\t\t\tftp@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tftp@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tgd@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent freetype libjpeg-turbo libpng libxpm\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetype-dev libjpeg-turbo-dev libpng-dev libxpm-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libvpx\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libvpx-dev\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libwebp\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libwebp-dev\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 801; then\n\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 315; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libavif aom-libs libdav1d\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libavif-dev aom-dev dav1d-dev\"\n\t\t\t\t\t\telif isLibaomInstalled && isLibdav1dInstalled && isLibyuvInstalled && isLibavifInstalled; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcase \"${IPE_GD_WITHOUTAVIF:-}\" in\n\t\t\t\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t\t\tif ! isLibaomInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libaom\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibdav1dInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libdav1d\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibyuvInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libyuv\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibavifInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libavif\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake nasm meson\"\n\t\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\tesac\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tgd@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libfreetype6 libjpeg62-turbo ^libpng[0-9]+-[0-9]+$ libxpm4\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libfreetype6-dev libjpeg62-turbo-dev libpng-dev libxpm-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libvpx[0-9]+$\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libvpx-dev\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libwebp[0-9]+$\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libwebp-dev\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 801; then\n\t\t\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 12; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libavif[0-9]+$ ^libaom[0-9]+$ ^libdav1d[0-9]+$\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libavif-dev libaom-dev libdav1d-dev\"\n\t\t\t\t\t\telif ! isLibaomInstalled || ! isLibdav1dInstalled || ! isLibyuvInstalled || ! isLibavifInstalled; then\n\t\t\t\t\t\t\tcase \"${IPE_GD_WITHOUTAVIF:-}\" in\n\t\t\t\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t\t\tif ! isLibaomInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libaom\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibdav1dInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libdav1d\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibyuvInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libyuv\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tif ! isLibavifInstalled; then\n\t\t\t\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libavif\"\n\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake nasm meson\"\n\t\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\tesac\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tgearman@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++ libuuid\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile boost-dev gperf libmemcached-dev libevent-dev util-linux-dev\"\n\t\t\t\t;;\n\t\t\tgearman@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libgearman[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgearman-dev\"\n\t\t\t\t;;\n\t\t\tgeoip@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent geoip\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile geoip-dev\"\n\t\t\t\t;;\n\t\t\tgeoip@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libgeoip1[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgeoip-dev\"\n\t\t\t\t;;\n\t\t\tgeos@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent geos-dev\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile geos\"\n\t\t\t\t;;\n\t\t\tgeos@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libgeos-c1(v[0-9]*)?$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgeos-dev\"\n\t\t\t\t;;\n\t\t\tgettext@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libintl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile gettext-dev\"\n\t\t\t\t;;\n\t\t\tgmagick@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent graphicsmagick libgomp\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile graphicsmagick-dev libtool\"\n\t\t\t\t;;\n\t\t\tgmagick@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libgraphicsmagick(-q16-)?[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgraphicsmagick1-dev\"\n\t\t\t\t;;\n\t\t\tgmp@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gmp\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile gmp-dev\"\n\t\t\t\t;;\n\t\t\tgmp@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgmp-dev\"\n\t\t\t\t;;\n\t\t\tgnupg@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gpgme\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile gpgme-dev\"\n\t\t\t\t;;\n\t\t\tgnupg@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libgpgme[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile ^libgpgme[0-9]*-dev$\"\n\t\t\t\t;;\n\t\t\tgrpc@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev linux-headers\"\n\t\t\t\t;;\n\t\t\tgrpc@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev\"\n\t\t\t\t;;\n\t\t\thttp@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libevent\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev curl-dev libevent-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libidn\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libidn-dev\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent icu-libs $buildRequiredPackageLists_icuPersistent libidn\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev libidn-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\thttp@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libcurl3-gnutls ^libevent[0-9\\.\\-]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev libgnutls28-dev libcurl4-gnutls-dev libevent-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile ^libidn1[0-9+]-dev$\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libicu[0-9]+$ ^libidn2-[0-9+]$\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libicu-dev ^libidn2-[0-9+]-dev$ ^libgcrypt[0-9]+-dev$\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\timagick@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent imagemagick libgomp\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile imagemagick-dev\"\n\t\t\t\tif [ $DISTRO_MAJMIN_VERSION -ge 319 ]; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ghostscript libheif libjxl libraw librsvg\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\timagick@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libmagickwand-6.q16-[0-9]+$ ^libmagickcore-6.q16-[0-9]+-extra$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmagickwand-dev\"\n\t\t\t\t;;\n\t\t\timap@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent c-client $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile krb5-dev imap-dev $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\timap@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libc-client2007e\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libkrb5-dev\"\n\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\tdebian@9)\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev comerr-dev krb5-multidev libc-client2007e libgssrpc4 libkadm5clnt-mit11 libkadm5srv-mit11 libkdb5-8 libpam0g-dev libssl-doc mlock\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libc-client-dev\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tinterbase@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev ncurses-dev\"\n\t\t\t\tif ! isFirebirdInstalled; then\n\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS firebird\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tinterbase@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libfbclient2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile firebird-dev libib-util\"\n\t\t\t\t;;\n\t\t\tintl@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent icu-libs $buildRequiredPackageLists_icuPersistent\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev\"\n\t\t\t\t;;\n\t\t\tintl@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libicu[0-9]+$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libicu-dev\"\n\t\t\t\t;;\n\t\t\tion@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake git\"\n\t\t\t\t;;\n\t\t\tion@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake git\"\n\t\t\t\t;;\n\t\t\tldap@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libldap\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile openldap-dev\"\n\t\t\t\t;;\n\t\t\tldap@debian)\n\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 9; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libldap-common\"\n\t\t\t\tfi\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libldap2-dev\"\n\t\t\t\t;;\n\t\t\tluasandbox@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent lua5.1-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile lua5.1-dev\"\n\t\t\t\t;;\n\t\t\tluasandbox@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liblua5.1-0\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liblua5.1-0-dev\"\n\t\t\t\t;;\n\t\t\tlz4@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent lz4-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile lz4-dev\"\n\t\t\t\t;;\n\t\t\tlz4@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liblz4-1\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liblz4-dev\"\n\t\t\t\t;;\n\t\t\tmaxminddb@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmaxminddb\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmaxminddb-dev\"\n\t\t\t\t;;\n\t\t\tmaxminddb@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libmaxminddb[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmaxminddb-dev\"\n\t\t\t\t;;\n\t\t\tmemprof@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent judy\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile judy-dev bsd-compat-headers\"\n\t\t\t\t;;\n\t\t\tmemprof@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libjudydebian1\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libjudy-dev\"\n\t\t\t\t;;\n\t\t\tmcrypt@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmcrypt\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmcrypt-dev\"\n\t\t\t\t;;\n\t\t\tmcrypt@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmcrypt4\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmcrypt-dev\"\n\t\t\t\t;;\n\t\t\tmemcache@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev\"\n\t\t\t\t;;\n\t\t\tmemcache@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev\"\n\t\t\t\t;;\n\t\t\tmemcached@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmemcached-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmemcached-dev zlib-dev\"\n\t\t\t\t;;\n\t\t\tmemcached@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmemcachedutil2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmemcached-dev zlib1g-dev\"\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 12; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tmongo@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsasl $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev cyrus-sasl-dev\"\n\t\t\t\t;;\n\t\t\tmongo@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev libsasl2-dev\"\n\t\t\t\t;;\n\t\t\tmongodb@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent icu-libs $buildRequiredPackageLists_icuPersistent libsasl $buildRequiredPackageLists_libssl snappy\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev cyrus-sasl-dev snappy-dev $buildRequiredPackageLists_libssldev zlib-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 704; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent zstd-libs\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zstd-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tmongodb@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libsnappy[0-9]+(v[0-9]+)?$ ^libicu[0-9]+$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libicu-dev libsasl2-dev libsnappy-dev $buildRequiredPackageLists_libssldev zlib1g-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 704; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libzstd[0-9]*$\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libzstd-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tmosquitto@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent mosquitto-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile mosquitto-dev\"\n\t\t\t\t;;\n\t\t\tmosquitto@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libmosquitto1\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmosquitto-dev\"\n\t\t\t\t;;\n\t\t\tmssql@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent freetds\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\tmssql@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsybdb5\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\toauth@alpine)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile pcre-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\toauth@debian)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libpcre3-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\toci8@alpine | pdo_oci@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libaio libc6-compat libnsl\"\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 307; then\n\t\t\t\t\t# The unzip tool of Alpine 3.7 can't extract symlinks from ZIP archives: let's use bsdtar instead\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libarchive-tools\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\toci8@debian | pdo_oci@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libaio[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile unzip\"\n\t\t\t\t;;\n\t\t\todbc@alpine | pdo_odbc@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent unixodbc\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile unixodbc-dev\"\n\t\t\t\t;;\n\t\t\todbc@debian | pdo_odbc@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libodbc1\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile unixodbc-dev\"\n\t\t\t\t;;\n\t\t\topenswoole@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent postgresql-libs libstdc++ $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile curl-dev postgresql-dev linux-headers $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\topenswoole@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libcurl3-gnutls libpq5\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev libcurl4-gnutls-dev libpq-dev\"\n\t\t\t\t;;\n\t\t\tparle@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t;;\n\t\t\tpdo_dblib@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent freetds\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\tpdo_dblib@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsybdb5\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\tpdo_firebird@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile icu-dev ncurses-dev\"\n\t\t\t\tif ! isFirebirdInstalled; then\n\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS firebird\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 804; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev\"\n\t\t\t\t\t\tif ! isLibTommathInstalled; then\n\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libtommath\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif ! isLibTomcryptInstalled; then\n\t\t\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libtomcrypt\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tpdo_firebird@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libfbclient2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile firebird-dev libib-util\"\n\t\t\t\t;;\n\t\t\tpgsql@alpine | pdo_pgsql@alpine | pq@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent postgresql-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile postgresql-dev\"\n\t\t\t\t;;\n\t\t\tpgsql@debian | pdo_pgsql@debian | pq@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libpq5\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libpq-dev\"\n\t\t\t\t;;\n\t\t\tphp_trie@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t;;\n\t\t\tphpy@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent python3\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile python3-dev\"\n\t\t\t\t;;\n\t\t\tphpy@debian)\n\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 12; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libpython3.11\"\n\t\t\t\telif test $DISTRO_VERSION_NUMBER -ge 11; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libpython3.9\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libpython3.7\"\n\t\t\t\tfi\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile python3-dev\"\n\t\t\t\t;;\n\t\t\tpkcs11@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent softhsm\"\n\t\t\t\t;;\n\t\t\tpkcs11@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsofthsm2\"\n\t\t\t\t;;\n\t\t\tpspell@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent aspell-libs $(expandASpellDictionaries)\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile aspell-dev\"\n\t\t\t\t;;\n\t\t\tpspell@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libaspell15 $(expandASpellDictionaries)\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libpspell-dev\"\n\t\t\t\t;;\n\t\t\trdkafka@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent librdkafka\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile librdkafka-dev\"\n\t\t\t\t;;\n\t\t\trdkafka@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^librdkafka\\+*[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile librdkafka-dev\"\n\t\t\t\t;;\n\t\t\trecode@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent recode\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile recode-dev\"\n\t\t\t\t;;\n\t\t\trecode@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent librecode0\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile librecode-dev\"\n\t\t\t\t;;\n\t\t\tredis@alpine)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\t\talpine@3.7)\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent zstd\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent zstd-libs\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zstd-dev\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 702; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent lz4-libs\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile lz4-dev\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tredis@debian)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\t\tdebian@8)\n\t\t\t\t\t\t\t## There's no APT package for libzstd\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tdebian@9)\n\t\t\t\t\t\t\t## libzstd is too old (available: 1.1.2, required: 1.3.0+)\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libzstd[0-9]*$\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libzstd-dev\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 702; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liblz4-1\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liblz4-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\trelay@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent lz4-libs zstd-libs\"\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 317; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent $buildRequiredPackageLists_libssl\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tsaxon@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_volatile unzip\"\n\t\t\t\t;;\n\t\t\tseasclick@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t;;\n\t\t\tsimdjson@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\t;;\n\t\t\tsmbclient@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsmbclient\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile samba-dev\"\n\t\t\t\t;;\n\t\t\tsmbclient@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsmbclient\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsmbclient-dev\"\n\t\t\t\t;;\n\t\t\tsnappy@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent snappy\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile snappy-dev\"\n\t\t\t\t;;\n\t\t\tsnappy@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libsnappy1(v[0-9]+)?$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsnappy-dev\"\n\t\t\t\t;;\n\t\t\tsnmp@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent net-snmp-libs\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile net-snmp-dev\"\n\t\t\t\t;;\n\t\t\tsnmp@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent snmp\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsnmp-dev\"\n\t\t\t\t;;\n\t\t\tsnuffleupagus@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent pcre\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile pcre-dev\"\n\t\t\t\t;;\n\t\t\tsnuffleupagus@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libpcre3-dev\"\n\t\t\t\t;;\n\t\t\tsoap@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\tsoap@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\tsockets@alpine)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 802; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile linux-headers\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tsodium@alpine | libsodium@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libsodium\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsodium-dev\"\n\t\t\t\t;;\n\t\t\tsodium@debian | libsodium@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libsodium[0-9]*$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsodium-dev\"\n\t\t\t\t;;\n\t\t\tsolr@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile curl-dev libxml2-dev\"\n\t\t\t\t;;\n\t\t\tsolr@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libcurl3-gnutls\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libcurl4-gnutls-dev libxml2-dev\"\n\t\t\t\t;;\n\t\t\tsourceguardian@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent eudev-libs\"\n\t\t\t\t;;\n\t\t\tspx@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev\"\n\t\t\t\t;;\n\t\t\tspx@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev\"\n\t\t\t\t;;\n\t\t\tsqlsrv@alpine | pdo_sqlsrv@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++ unixodbc\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile unixodbc-dev\"\n\t\t\t\t;;\n\t\t\tsqlsrv@debian | pdo_sqlsrv@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent unixodbc\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile unixodbc-dev\"\n\t\t\t\tif ! isMicrosoftSqlServerODBCInstalled; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile gnupg apt-transport-https\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tssh2@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libssh2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libssh2-dev\"\n\t\t\t\t;;\n\t\t\tssh2@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libssh2-1-dev\"\n\t\t\t\t;;\n\t\t\tstomp@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tstomp@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\tswoole@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent postgresql-libs libstdc++ $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile curl-dev postgresql-dev linux-headers $buildRequiredPackageLists_libssldev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 702; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent c-ares\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile c-ares-dev\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 801; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent zstd-libs\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile sqlite-dev zstd-dev\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tcase \"${IPE_SWOOLE_WITHOUT_IOURING:-}\" in\n\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t*)\n\t\t\t\t\t\t# iouring support in swoole 6 requires liburing 2.5+: available since Alpine 3.19\n\t\t\t\t\t\t# but with Alpine 3.19 we have a \"invalid use of incomplete type 'const struct statx'\" error\n\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 320; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liburing\"\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liburing-dev\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tswoole@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libcurl3-gnutls libpq5\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile $buildRequiredPackageLists_libssldev libcurl4-gnutls-dev libpq-dev\"\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 702; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libc-ares2\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libc-ares-dev\"\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libbrotli1\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev libbrotli-dev\"\n\t\t\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 801; then\n\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libsqlite3-dev\"\n\t\t\t\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 11; then\n\t\t\t\t\t\t\t\t# swoole 6 requires libzstd >= 1.4.0, but on debian 10 (buster) we have 1.3.8\n\t\t\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libzstd[0-9]*$\"\n\t\t\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libzstd-dev\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 13; then\n\t\t\t\t\t# iouring support in swoole 6 requires liburing 2.5+: available since Debian Trixie (13)\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liburing2\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liburing-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tsybase_ct@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent freetds\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\tsybase_ct@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libct4\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile freetds-dev\"\n\t\t\t\t;;\n\t\t\ttdlib@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++ $buildRequiredPackageLists_libssl\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile git cmake gperf zlib-dev $buildRequiredPackageLists_libssldev linux-headers readline-dev\"\n\t\t\t\t;;\n\t\t\ttdlib@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile git cmake gperf zlib1g-dev $buildRequiredPackageLists_libssldev\"\n\t\t\t\t;;\n\t\t\ttensor@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent openblas\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile lapack-dev openblas-dev\"\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 317; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent lapack\"\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 316; then\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libexecinfo\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libexecinfo-dev\"\n\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 310; then\n\t\t\t\t\t\t\tif ! stringInList --force-overwrite \"$IPE_APK_FLAGS\"; then\n\t\t\t\t\t\t\t\tIPE_APK_FLAGS=\"$IPE_APK_FLAGS --force-overwrite\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liblapack\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\ttensor@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent liblapacke\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile liblapack-dev libopenblas-dev liblapacke-dev\"\n\t\t\t\tif test $DISTRO_VERSION_NUMBER -le 9; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gfortran-6 libopenblas-base\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgfortran-6-dev\"\n\t\t\t\telif test $DISTRO_VERSION_NUMBER -le 10; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gfortran-8 libopenblas-base\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgfortran-8-dev\"\n\t\t\t\telif test $DISTRO_VERSION_NUMBER -le 11; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gfortran-10 libopenblas-base\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgfortran-10-dev\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent gfortran-12 libopenblas0\"\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libgfortran-12-dev\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\ttidy@alpine)\n\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 315; then\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent tidyhtml\"\n\t\t\t\telse\n\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent tidyhtml-libs\"\n\t\t\t\tfi\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile tidyhtml-dev\"\n\t\t\t\t;;\n\t\t\ttidy@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libtidy-?[0-9][0-9.\\-]*(deb[0-9])?$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libtidy-dev\"\n\t\t\t\t;;\n\t\t\tuuid@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libuuid\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile util-linux-dev\"\n\t\t\t\t;;\n\t\t\tuuid@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile uuid-dev\"\n\t\t\t\t;;\n\t\t\tuv@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libuv\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libuv-dev\"\n\t\t\t\t;;\n\t\t\tuv@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libuv1\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libuv1-dev\"\n\t\t\t\t;;\n\t\t\tvips@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent vips\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile vips-dev\"\n\t\t\t\t;;\n\t\t\tvips@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libvips\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libvips-dev\"\n\t\t\t\t;;\n\t\t\twddx@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\twddx@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\twikidiff2@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile git\"\n\t\t\t\t;;\n\t\t\twikidiff2@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libthai0\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile git libthai-dev\"\n\t\t\t\t;;\n\t\t\txdebug@alpine)\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile linux-headers\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\txlswriter@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib-dev\"\n\t\t\t\t;;\n\t\t\txlswriter@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile zlib1g-dev\"\n\t\t\t\t;;\n\t\t\txmldiff@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libstdc++\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\txmldiff@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\txmlrpc@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\txmlrpc@debian)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxml2-dev\"\n\t\t\t\t;;\n\t\t\txpass@alpine)\n\t\t\t\tif ! isLibXCryptInstalled; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile linux-headers\"\n\t\t\t\t\tCOMPILE_LIBS=\"$COMPILE_LIBS libxcrypt\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\txsl@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libxslt\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxslt-dev libgcrypt-dev\"\n\t\t\t\t;;\n\t\t\txsl@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libxslt1\\.1$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libxslt-dev\"\n\t\t\t\t;;\n\t\t\tyaml@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent yaml\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile yaml-dev\"\n\t\t\t\t;;\n\t\t\tyaml@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libyaml-0-2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libyaml-dev\"\n\t\t\t\t;;\n\t\t\tyar@alpine)\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile curl-dev\"\n\t\t\t\t;;\n\t\t\tyar@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libcurl3-gnutls\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libcurl4-gnutls-dev\"\n\t\t\t\t;;\n\t\t\tzip@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libzip\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake gnutls-dev libzip-dev $buildRequiredPackageLists_libssldev zlib-dev\"\n\t\t\t\t;;\n\t\t\tzip@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libzip[0-9]$\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile cmake gnutls-dev $buildRequiredPackageLists_libssldev libzip-dev libbz2-dev zlib1g-dev\"\n\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\tdebian@8)\n\t\t\t\t\t\t# Debian Jessie doesn't seem to provide libmbedtls\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent ^libmbedtls[0-9]*$\"\n\t\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libmbedtls-dev\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\t;;\n\t\t\tzmq@alpine)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent zeromq-dev\"\n\t\t\t\t;;\n\t\t\tzmq@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libzmq3-dev\"\n\t\t\t\t;;\n\t\t\tzookeeper@alpine)\n\t\t\t\tif ! test -f /usr/local/include/zookeeper/zookeeper.h; then\n\t\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile maven automake libtool openjdk8\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\tzookeeper@debian)\n\t\t\t\tbuildRequiredPackageLists_persistent=\"$buildRequiredPackageLists_persistent libzookeeper-mt2\"\n\t\t\t\tbuildRequiredPackageLists_volatile=\"$buildRequiredPackageLists_volatile libzookeeper-mt-dev\"\n\t\t\t\t;;\n\t\tesac\n\t\tshift\n\tdone\n\tPACKAGES_PERSISTENT_NEW=''\n\tPACKAGES_PERSISTENT_PRE=''\n\tPACKAGES_VOLATILE=''\n\tPACKAGES_PREVIOUS=''\n\tif test -z \"$buildRequiredPackageLists_persistent$buildRequiredPackageLists_volatile\"; then\n\t\treturn\n\tfi\n\tif test -n \"$buildRequiredPackageLists_persistent\"; then\n\t\tPACKAGES_PERSISTENT_NEW=\"$(expandPackagesToBeInstalled $buildRequiredPackageLists_persistent)\"\n\t\tif test -s \"$IPE_ERRFLAG_FILE\"; then\n\t\t\texit 1\n\t\tfi\n\t\tresetIFS\n\t\tfor buildRequiredPackageLists_package in $buildRequiredPackageLists_persistent; do\n\t\t\tbuildRequiredPackageLists_package=\"$(expandInstalledSystemPackageName \"$buildRequiredPackageLists_package\")\"\n\t\t\tif test -n \"$buildRequiredPackageLists_package\"; then\n\t\t\t\tPACKAGES_PERSISTENT_PRE=\"$PACKAGES_PERSISTENT_PRE $buildRequiredPackageLists_package\"\n\t\t\tfi\n\t\tdone\n\t\tPACKAGES_PERSISTENT_PRE=\"${PACKAGES_PERSISTENT_PRE# }\"\n\tfi\n\tif test -n \"$buildRequiredPackageLists_volatile\"; then\n\t\tbuildRequiredPackageLists_packages=\"$(expandPackagesToBeInstalled $buildRequiredPackageLists_volatile)\"\n\t\tif test -s \"$IPE_ERRFLAG_FILE\"; then\n\t\t\texit 1\n\t\tfi\n\t\tresetIFS\n\t\tfor buildRequiredPackageLists_package in $buildRequiredPackageLists_packages; do\n\t\t\tif ! stringInList \"$buildRequiredPackageLists_package\" \"$PACKAGES_PERSISTENT_NEW\"; then\n\t\t\t\tif test \"$buildRequiredPackageLists_package\" != icu-data-en || ! stringInList icu-data-full \"$PACKAGES_PERSISTENT_NEW\"; then\n\t\t\t\t\tPACKAGES_VOLATILE=\"$PACKAGES_VOLATILE $buildRequiredPackageLists_package\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone\n\t\tPACKAGES_VOLATILE=\"${PACKAGES_VOLATILE# }\"\n\tfi\n\tif test -n \"$PACKAGES_PERSISTENT_NEW$PACKAGES_VOLATILE\"; then\n\t\tcase \"$DISTRO\" in\n\t\t\tdebian)\n\t\t\t\tPACKAGES_PREVIOUS=\"$(dpkg --get-selections | grep -E '\\sinstall$' | awk '{ print $1 }')\"\n\t\t\t\t;;\n\t\tesac\n\tfi\n}\n\n# Get the full list of APT/APK packages that will be installed, given the required packages\n#\n# Arguments:\n#   $1: the list of required APT/APK packages\n#\n# Output:\n#   Space-separated list of every APT/APK packages that will be installed\nexpandPackagesToBeInstalled() {\n\texpandPackagesToBeInstalled_result=''\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\texpandPackagesToBeInstalled_log=\"$(apk add --simulate $@ 2>&1 || printf '\\nERROR: apk failed\\n')\"\n\t\t\tif test -n \"$(printf '%s' \"$expandPackagesToBeInstalled_log\" | grep -E '^ERROR:')\"; then\n\t\t\t\tprintf 'FAILED TO LIST THE WHOLE PACKAGE LIST FOR\\n' >&2\n\t\t\t\tprintf '%s ' \"$@\" >&2\n\t\t\t\tprintf '\\n\\nCOMMAND OUTPUT:\\n%s\\n' \"$expandPackagesToBeInstalled_log\" >&2\n\t\t\t\techo 'y' >\"$IPE_ERRFLAG_FILE\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tIFS='\n'\n\t\t\tfor expandPackagesToBeInstalled_line in $expandPackagesToBeInstalled_log; do\n\t\t\t\tif test -n \"$(printf '%s' \"$expandPackagesToBeInstalled_line\" | grep -E '^\\([0-9]*/[0-9]*) Installing ')\"; then\n\t\t\t\t\texpandPackagesToBeInstalled_result=\"$expandPackagesToBeInstalled_result $(printf '%s' \"$expandPackagesToBeInstalled_line\" | cut -d ' ' -f 3)\"\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tresetIFS\n\t\t\t;;\n\t\tdebian)\n\t\t\texpandPackagesToBeInstalled_log=\"$(apt-get install -sy --no-install-recommends $@ 2>&1 || printf '\\nE: apt-get failed\\n')\"\n\t\t\tif test -n \"$(printf '%s' \"$expandPackagesToBeInstalled_log\" | grep -E '^E:')\"; then\n\t\t\t\tprintf 'FAILED TO LIST THE WHOLE PACKAGE LIST FOR\\n' >&2\n\t\t\t\tprintf '%s ' \"$@\" >&2\n\t\t\t\tprintf '\\n\\nCOMMAND OUTPUT:\\n%s\\n' \"$expandPackagesToBeInstalled_log\" >&2\n\t\t\t\techo 'y' >\"$IPE_ERRFLAG_FILE\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\texpandPackagesToBeInstalled_inNewPackages=0\n\t\t\tIFS='\n'\n\t\t\tfor expandPackagesToBeInstalled_line in $expandPackagesToBeInstalled_log; do\n\t\t\t\tif test $expandPackagesToBeInstalled_inNewPackages -eq 0; then\n\t\t\t\t\tif test \"$expandPackagesToBeInstalled_line\" = 'The following NEW packages will be installed:'; then\n\t\t\t\t\t\texpandPackagesToBeInstalled_inNewPackages=1\n\t\t\t\t\tfi\n\t\t\t\telif test \"$expandPackagesToBeInstalled_line\" = \"${expandPackagesToBeInstalled_line# }\"; then\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tresetIFS\n\t\t\t\t\tfor expandPackagesToBeInstalled_newPackage in $expandPackagesToBeInstalled_line; do\n\t\t\t\t\t\texpandPackagesToBeInstalled_result=\"$expandPackagesToBeInstalled_result $expandPackagesToBeInstalled_newPackage\"\n\t\t\t\t\tdone\n\t\t\t\t\tIFS='\n'\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tresetIFS\n\t\t\t;;\n\tesac\n\tprintf '%s' \"${expandPackagesToBeInstalled_result# }\"\n}\n\n# Check if a system package is installed; if so we prints its name.\n#\n# Arguments:\n#   $1: the name of the package to be checked (regular expressions accepted: they must start with a ^)\nexpandInstalledSystemPackageName() {\n\tif test \"$1\" = \"${1#^}\"; then\n\t\texpandInstalledSystemPackageName_grepflags='-Fx'\n\telse\n\t\texpandInstalledSystemPackageName_grepflags='-E'\n\tfi\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tapk info | grep $expandInstalledSystemPackageName_grepflags -- \"$1\" || test $? -eq 1\n\t\t\t;;\n\t\tdebian)\n\t\t\tdpkg --get-selections | grep -E '\\sinstall$' | awk '{ print $1 }' | cut -d: -f1 | grep $expandInstalledSystemPackageName_grepflags -- \"$1\" || test $? -eq 1\n\t\t\t;;\n\tesac\n}\n\n# Retrieve the number of available cores (alternative to nproc if not available)\n#\n# Output:\n#   The number of processor cores available\ngetProcessorCount() {\n\tif test -n \"${IPE_PROCESSOR_COUNT:-}\"; then\n\t\techo $IPE_PROCESSOR_COUNT\n\t\treturn\n\tfi\n\tif command -v nproc >/dev/null 2>&1; then\n\t\tnproc\n\telse\n\t\tgetProcessorCount_tmp=$(cat /proc/cpuinfo | grep -E '^processor\\s*:\\s*\\d+$' | wc -l)\n\t\tif test $getProcessorCount_tmp -ge 1; then\n\t\t\techo $getProcessorCount_tmp\n\t\telse\n\t\t\techo 1\n\t\tfi\n\tfi\n}\n\n# Set these variables:\n# - TARGET_TRIPLET the build target tripled (eg 'x86_64-linux-gnu', 'x86_64-alpine-linux-musl')\nsetTargetTriplet() {\n\tTARGET_TRIPLET=\"$(gcc -print-multiarch 2>/dev/null || true)\"\n\tif test -z \"$TARGET_TRIPLET\"; then\n\t\tTARGET_TRIPLET=\"$(gcc -dumpmachine)\"\n\tfi\n}\n\n# Retrieve the number of processors to be used when compiling an extension\n#\n# Arguments:\n#   $1: the handle of the PHP extension to be compiled\n# Output:\n#   The number of processors to be used\ngetCompilationProcessorCount() {\n\tcase \"$1\" in\n\t\t'')\n\t\t\t# The above extensions don't support parallel compilation\n\t\t\techo 1\n\t\t\t;;\n\t\t*)\n\t\t\t# All the other extensions support parallel compilation\n\t\t\tgetProcessorCount\n\t\t\t;;\n\tesac\n}\n\n# Get the full path of a PHP extension given its name.\n#\n# Arguments:\n#   $1: the name of the PHP extension\n#\n# Output:\n#   The absolute path of the PHP extension file (or nothing if the file can't be found)\ngetModuleFullPath() {\n\tcase \"$1\" in\n\t\tapcu_bc)\n\t\t\tgetModuleFullPath_path=\"$PHP_EXTDIR/apc.so\"\n\t\t\t;;\n\t\tseasclick)\n\t\t\tgetModuleFullPath_path=\"$PHP_EXTDIR/SeasClick.so\"\n\t\t\t;;\n\t\t*)\n\t\t\tgetModuleFullPath_path=\"$PHP_EXTDIR/$1.so\"\n\t\t\t;;\n\tesac\n\tif ! test -f \"$getModuleFullPath_path\"; then\n\t\tprintf 'Unable to find the file of the PHP extension \"%s\"\\n' \"$1\" >&2\n\t\texit 1\n\tfi\n\tprintf '%s' \"$getModuleFullPath_path\"\n}\n\n# Post-process a PHP module just compiled and installed in the PHP extension directory\n#\n# Arguments:\n#   $1: the name of the PHP extension\n#\n# Return:\n#   0 (true): if suceeded\n#   non-zero (false): in case of errors\npostProcessModule() {\n\tpostProcessModule_file=\"$(getModuleFullPath \"$1\")\"\n\tif test $PHP_DEBUGBUILD -ne 1; then\n\t\tprintf 'Removing symbols from %s... ' \"$postProcessModule_file\"\n\t\tpostProcessModule_preSize=\"$(stat -c %s \"$postProcessModule_file\")\"\n\t\tstrip --strip-all \"$postProcessModule_file\"\n\t\tpostProcessModule_postSize=\"$(stat -c %s \"$postProcessModule_file\")\"\n\t\tprintf 'done (%s bytes saved).\\n' \"$((postProcessModule_preSize - postProcessModule_postSize))\"\n\tfi\n\treturn $?\n}\n\n# Get the type of the php.ini entry to be used for a PHP extension\n#\n# Arguments:\n#   $1: the name of the PHP extension\n#\n# Output:\n#   zend_extension or extension\ngetModuleIniEntryType() {\n\tcase \"$1\" in\n\t\tioncube_loader | sourceguardian)\n\t\t\t# On PHP 5.5, docker-php-ext-enable fails to detect that ionCube Loader and sourceguardian are Zend extensions\n\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\tprintf 'zend_extension'\n\t\t\t\treturn 0\n\t\t\tfi\n\t\t\t;;\n\tesac\n\tgetModuleIniEntryType_file=\"$(getModuleFullPath \"$1\")\"\n\tif readelf --wide --syms \"$getModuleIniEntryType_file\" | grep -Eq ' zend_extension_entry$'; then\n\t\tprintf 'zend_extension'\n\telse\n\t\tprintf 'extension'\n\tfi\n}\n\n# Create the contents of a PHP ini file that enables an extension\n#\n# Arguments:\n#   $1: the name of the PHP extension\n#   $2: additional php.ini configuration (optional)\n#\n# Output:\n#   The contents of the ini file\nbuildPhpExtensionIniContent() {\n\tbuildPhpExtensionIniContent_type=\"$(getModuleIniEntryType \"$1\")\"\n\tbuildPhpExtensionIniContent_soFile=\"$(getModuleFullPath \"$1\")\"\n\tbuildPhpExtensionIniContent_result=\"$(printf '%s=%s' \"$buildPhpExtensionIniContent_type\" \"${buildPhpExtensionIniContent_soFile##$PHP_EXTDIR/}\")\"\n\tif test -n \"${2:-}\"; then\n\t\tbuildPhpExtensionIniContent_result=\"$(printf '%s\\n%s' \"$buildPhpExtensionIniContent_result\" \"$2\")\"\n\tfi\n\tprintf '%s' \"$buildPhpExtensionIniContent_result\"\n}\n\n# Check that a PHP module actually works (better to run this check before enabling the extension)\n#\n# Arguments:\n#   $1: the name of the PHP extension\n#   $2: base name (without path and extension) of additional php.ini configuration (optional)\n#   $3: additional php.ini configuration (optional)\n#\n# Return:\n#   0 (true): if the string is in the list\n#   1 (false): if the string is not in the list\ncheckModuleWorking() {\n\tif test -n \"${2:-}\"; then\n\t\tcheckModuleWorking_iniFile=\"$PHP_INI_DIR/conf.d/$2--temp.ini\"\n\telse\n\t\tcheckModuleWorking_iniFile=\"$PHP_INI_DIR/conf.d/docker-php-ext-$1--temp.ini\"\n\tfi\n\tcheckModuleWorking_iniContent=\"$(buildPhpExtensionIniContent \"$1\" \"${3:-}\")\"\n\tprintf 'Check if the %s module can be loaded... ' \"$1\"\n\tcheckModuleWorking_errBefore=\"$(php -r 'return;' 2>&1 || true)\"\n\tprintf '%s' \"$checkModuleWorking_iniContent\" >\"$checkModuleWorking_iniFile\"\n\tcheckModuleWorking_errAfter=\"$(php -r 'return;' 2>&1 || true)\"\n\trm \"$checkModuleWorking_iniFile\"\n\tif test \"$checkModuleWorking_errAfter\" != \"$checkModuleWorking_errBefore\"; then\n\t\tprintf 'Error loading the \"%s\" extension:\\n%s\\n' \"$1\" \"$checkModuleWorking_errAfter\" >&2\n\t\treturn 1\n\tfi\n\tprintf 'ok.\\n'\n\treturn 0\n}\n\n# Enable a PHP extension\n#\n# Arguments:\n#   $1: the name of the PHP extension to be enabled\n#   $2: base name (without path and extension) of additional php.ini configuration (optional)\n#   $3: additional php.ini configuration (optional)\nenablePhpExtension() {\n\tif test -n \"${2:-}\"; then\n\t\tenablePhpExtension_iniFile=\"$PHP_INI_DIR/conf.d/$2.ini\"\n\telse\n\t\tenablePhpExtension_iniFile=\"$PHP_INI_DIR/conf.d/docker-php-ext-$1.ini\"\n\tfi\n\tenablePhpExtension_iniContent=\"$(buildPhpExtensionIniContent \"$1\" \"${3:-}\")\"\n\tcase \"${IPE_DONT_ENABLE:-}\" in\n\t\t1 | y* | Y*)\n\t\t\tenablePhpExtension_enableCommand=\"/usr/local/bin/docker-php-ext-enable-$1\"\n\t\t\tprintf '%s' \"$enablePhpExtension_iniContent\" >\"$enablePhpExtension_iniFile-disabled\"\n\t\t\tprintf '\\n' >>\"$enablePhpExtension_iniFile-disabled\"\n\t\t\tcat <<EOT >\"$enablePhpExtension_enableCommand\"\n#!/bin/sh\n\nif test -f '$enablePhpExtension_iniFile-disabled'; then\n\techo 'Enabling extension $1'\n\tmv '$enablePhpExtension_iniFile-disabled' '$enablePhpExtension_iniFile'\nelse\n\techo 'The extension $1 has already been enabled'\nfi\nEOT\n\t\t\tchmod +x \"$enablePhpExtension_enableCommand\"\n\t\t\tprintf '## Extension %s not enabled.\\nYou can enable it by running the following command:\\n%s\\n\\n' \"$1\" \"$(basename \"$enablePhpExtension_enableCommand\")\"\n\t\t\t;;\n\t\t*)\n\t\t\tprintf '%s' \"$enablePhpExtension_iniContent\" >\"$enablePhpExtension_iniFile\"\n\t\t\tprintf '\\n' >>\"$enablePhpExtension_iniFile\"\n\t\t\t;;\n\tesac\n}\n\n# Mark the pre-installed APT/APK packages as used\n# that way they won't be uninstalled by accident\nmarkPreinstalledPackagesAsUsed() {\n\tprintf '### MARKING PRE-INSTALLED PACKAGES AS IN-USE ###\\n'\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tprintf '# Packages: %s\\n' \"$PACKAGES_PERSISTENT_PRE\"\n\t\t\tapk add $PACKAGES_PERSISTENT_PRE\n\t\t\t;;\n\t\tdebian)\n\t\t\tapt-mark manual $PACKAGES_PERSISTENT_PRE\n\t\t\t;;\n\tesac\n}\n\n# Install the required APT/APK packages\n#\n# Arguments:\n#   $@: the list of APT/APK packages to be installed\ninstallRequiredPackages() {\n\tprintf '### INSTALLING REQUIRED PACKAGES ###\\n'\n\tprintf '# Packages to be kept after installation: %s\\n' \"$PACKAGES_PERSISTENT_NEW\"\n\tprintf '# Packages to be used only for installation: %s\\n' \"$PACKAGES_VOLATILE\"\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tapk add $IPE_APK_FLAGS $PACKAGES_PERSISTENT_NEW $PACKAGES_VOLATILE\n\t\t\t# https://gitlab.alpinelinux.org/alpine/aports/-/issues/12763#note_172090\n\t\t\t# https://github.com/mlocati/docker-php-extension-installer/issues/385\n\t\t\t# https://github.com/mlocati/docker-php-extension-installer/issues/537#issuecomment-1078748882\n\t\t\tfor installRequiredPackages_item in wget; do\n\t\t\t\tif test -n \"$(expandInstalledSystemPackageName \"$installRequiredPackages_item\")\"; then\n\t\t\t\t\tapk add --upgrade \"$installRequiredPackages_item\"\n\t\t\t\tfi\n\t\t\tdone\n\t\t\t;;\n\t\tdebian)\n\t\t\tapt-get install -qqy --no-install-recommends $PACKAGES_PERSISTENT_NEW $PACKAGES_VOLATILE\n\t\t\t;;\n\tesac\n}\n\n# Get the version of an installed APT/APK package\n#\n# Arguments:\n#   $1: the name of the installed package\n#\n# Output:\n#   The numeric part of the package version, with from 1 to 3 numbers\n#\n# Example:\n#   1\n#   1.2\n#   1.2.3\ngetInstalledPackageVersion() {\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tapk info \"$1\" | head -n1 | cut -c $((${#1} + 2))- | grep -o -E '^[0-9]+(\\.[0-9]+){0,2}'\n\t\t\t;;\n\t\tdebian)\n\t\t\tdpkg-query --showformat='${Version}' --show \"$1\" 2>/dev/null | grep -o -E '^[0-9]+(\\.[0-9]+){0,2}'\n\t\t\t;;\n\tesac\n}\n\n# Compare two versions\n#\n# Arguments:\n#   $1: the first version\n#   $2: the second version\n#\n# Output\n#  -1 if $1 is less than $2\n#  0 if $1 is the same as $2\n#  1 if $1 is greater than $2\ncompareVersions() {\n\tcompareVersions_v1=\"$1.0.0\"\n\tcompareVersions_v2=\"$2.0.0\"\n\tcompareVersions_vMin=\"$(printf '%s\\n%s' \"$compareVersions_v1\" \"$compareVersions_v2\" | sort -t '.' -n -k1,1 -k2,2 -k3,3 | head -n 1)\"\n\tif test \"$compareVersions_vMin\" != \"$compareVersions_v1\"; then\n\t\techo '1'\n\telif test \"$compareVersions_vMin\" = \"$compareVersions_v2\"; then\n\t\techo '0'\n\telse\n\t\techo '-1'\n\tfi\n}\n\n# Install Oracle Instant Client & SDK\n#\n# Set:\n#   ORACLE_INSTANTCLIENT_LIBPATH\ninstallOracleInstantClient() {\n\tcase \"${IPE_INSTANTCLIENT_BASIC:-}\" in\n\t\t1 | y* | Y*)\n\t\t\tinstallOracleInstantClient_handle=basic\n\t\t\t;;\n\t\t*)\n\t\t\tinstallOracleInstantClient_handle=basiclite\n\t\t\t;;\n\tesac\n\tcase $PHP_BITS in\n\t\t32)\n\t\t\tinstallOracleInstantClient_client=client\n\t\t\tinstallOracleInstantClient_version='19.9'\n\t\t\tinstallOracleInstantClient_ic=https://download.oracle.com/otn_software/linux/instantclient/199000/instantclient-$installOracleInstantClient_handle-linux-$installOracleInstantClient_version.0.0.0dbru.zip\n\t\t\tinstallOracleInstantClient_sdk=https://download.oracle.com/otn_software/linux/instantclient/199000/instantclient-sdk-linux-$installOracleInstantClient_version.0.0.0dbru.zip\n\t\t\t;;\n\t\t*)\n\t\t\tcase $(uname -m) in\n\t\t\t\taarch64*)\n\t\t\t\t\tinstallOracleInstantClient_client=client64\n\t\t\t\t\tinstallOracleInstantClient_version='19.10'\n\t\t\t\t\tinstallOracleInstantClient_ic=https://download.oracle.com/otn_software/linux/instantclient/191000/instantclient-$installOracleInstantClient_handle-linux.arm64-$installOracleInstantClient_version.0.0.0dbru.zip\n\t\t\t\t\tinstallOracleInstantClient_sdk=https://download.oracle.com/otn_software/linux/instantclient/191000/instantclient-sdk-linux.arm64-$installOracleInstantClient_version.0.0.0dbru.zip\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallOracleInstantClient_client=client64\n\t\t\t\t\tinstallOracleInstantClient_version='21.1'\n\t\t\t\t\tinstallOracleInstantClient_ic=https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-$installOracleInstantClient_handle-linux.x64-$installOracleInstantClient_version.0.0.0.zip\n\t\t\t\t\tinstallOracleInstantClient_sdk=https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-sdk-linux.x64-$installOracleInstantClient_version.0.0.0.zip\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\tesac\n\tORACLE_INSTANTCLIENT_LIBPATH=/usr/lib/oracle/$installOracleInstantClient_version/$installOracleInstantClient_client/lib\n\tif ! test -e \"$ORACLE_INSTANTCLIENT_LIBPATH\"; then\n\t\tprintf 'Downloading Oracle Instant Client v%s (%s)... ' \"$installOracleInstantClient_version\" \"$installOracleInstantClient_handle\"\n\t\tinstallOracleInstantClient_src=\"$(getPackageSource $installOracleInstantClient_ic)\"\n\t\tmkdir -p \"/usr/lib/oracle/$installOracleInstantClient_version/$installOracleInstantClient_client\"\n\t\tmv \"$installOracleInstantClient_src\" \"$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\techo 'done.'\n\tfi\n\tif ! test -e \"$ORACLE_INSTANTCLIENT_LIBPATH/sdk\" && ! test -L \"$ORACLE_INSTANTCLIENT_LIBPATH/sdk\"; then\n\t\tprintf 'Downloading Oracle Instant SDK v%s... ' \"$installOracleInstantClient_version\"\n\t\tinstallOracleInstantClient_src=\"$(getPackageSource $installOracleInstantClient_sdk)\"\n\t\tln -sf \"$installOracleInstantClient_src/sdk\" \"$ORACLE_INSTANTCLIENT_LIBPATH/sdk\"\n\t\tUNNEEDED_PACKAGE_LINKS=\"$UNNEEDED_PACKAGE_LINKS $ORACLE_INSTANTCLIENT_LIBPATH/sdk\"\n\t\techo 'done.'\n\tfi\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tif ! test -e /usr/lib/libresolv.so.2 && test -e /lib/libc.so.6; then\n\t\t\t\tln -s /lib/libc.so.6 /usr/lib/libresolv.so.2\n\t\t\tfi\n\t\t\tinstallOracleInstantClient_ldconf=/etc/ld-musl-${TARGET_TRIPLET%-alpine-linux-musl}.path\n\t\t\tif test -e \"$installOracleInstantClient_ldconf\"; then\n\t\t\t\tif ! cat \"$installOracleInstantClient_ldconf\" | grep -q \"$ORACLE_INSTANTCLIENT_LIBPATH\"; then\n\t\t\t\t\tcat \"$ORACLE_INSTANTCLIENT_LIBPATH\" | awk -v suffix=\":$ORACLE_INSTANTCLIENT_LIBPATH\" '{print NR==1 ? $0suffix : $0}' >\"$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tcase $PHP_BITS in\n\t\t\t\t\t32)\n\t\t\t\t\t\techo \"/lib:/usr/local/lib:/usr/lib:$ORACLE_INSTANTCLIENT_LIBPATH\" >\"$installOracleInstantClient_ldconf\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\techo \"/lib64:/lib:/usr/local/lib:/usr/lib:$ORACLE_INSTANTCLIENT_LIBPATH\" >\"$installOracleInstantClient_ldconf\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t;;\n\t\tdebian)\n\t\t\tif ! test -e /etc/ld.so.conf.d/oracle-instantclient.conf; then\n\t\t\t\techo \"$ORACLE_INSTANTCLIENT_LIBPATH\" >/etc/ld.so.conf.d/oracle-instantclient.conf\n\t\t\t\tldconfig\n\t\t\tfi\n\t\t\t;;\n\tesac\n}\n\n# Check if the Microsoft SQL Server ODBC Driver is installed\n#\n# Return:\n#   0 (true): if the string is in the list\n#   1 (false): if the string is not in the list\nisMicrosoftSqlServerODBCInstalled() {\n\ttest -d /opt/microsoft/msodbcsql*/\n}\n\n# Install the Microsoft SQL Server ODBC Driver\n# see https://learn.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\ninstallMicrosoftSqlServerODBC() {\n\tprintf 'Installing the Microsoft SQL Server ODBC Driver\\n'\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\trm -rf /tmp/src/msodbcsql.apk\n\t\t\tif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\tcurl -sSLf -o /tmp/src/msodbcsql.apk https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.10.6.1-1_amd64.apk\n\t\t\telse\n\t\t\t\tcase $(uname -m) in\n\t\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\t\tinstallMicrosoftSqlServerODBC_arch=arm64\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tinstallMicrosoftSqlServerODBC_arch=amd64\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\tcurl -sSLf -o /tmp/src/msodbcsql.apk https://download.microsoft.com/download/3/5/5/355d7943-a338-41a7-858d-53b259ea33f5/msodbcsql18_18.3.3.1-1_$installMicrosoftSqlServerODBC_arch.apk\n\t\t\tfi\n\t\t\tprintf '\\n' | apk add --allow-untrusted /tmp/src/msodbcsql.apk\n\t\t\trm -rf /tmp/src/msodbcsql.apk\n\t\t\t;;\n\t\tdebian)\n\t\t\tprintf -- '- installing the Microsoft APT key\\n'\n\t\t\tif test $DISTRO_VERSION_NUMBER -eq 11; then\n\t\t\t\tcurl -sSLf -o /etc/apt/trusted.gpg.d/microsoft.asc https://packages.microsoft.com/keys/microsoft.asc\n\t\t\telif test $DISTRO_VERSION_NUMBER -ge 12; then\n\t\t\t\tcurl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor --yes --output /usr/share/keyrings/microsoft-prod.gpg\n\t\t\telse\n\t\t\t\t# apt-key is deprecated\n\t\t\t\tcurl -sSLf https://packages.microsoft.com/keys/microsoft.asc | apt-key add -\n\t\t\tfi\n\t\t\tif ! test -f /etc/apt/sources.list.d/mssql-release.list; then\n\t\t\t\tprintf -- '- adding the Microsoft APT source list\\n'\n\t\t\t\tcurl -sSLf https://packages.microsoft.com/config/debian/$DISTRO_VERSION_NUMBER/prod.list >/etc/apt/sources.list.d/mssql-release.list\n\t\t\t\tinvokeAptGetUpdate\n\t\t\tfi\n\t\t\tprintf -- '- installing the APT package\\n'\n\t\t\tif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\tACCEPT_EULA=Y apt-get install -qqy --no-install-recommends msodbcsql17\n\t\t\telif test $DISTRO_VERSION_NUMBER -ge 9 && test $DISTRO_VERSION_NUMBER -le 12; then\n\t\t\t\t# On Debian 9 to 12 we have both msodbcsql17 and msodbcsql18: let's install just one\n\t\t\t\tACCEPT_EULA=Y apt-get install -qqy --no-install-recommends msodbcsql18\n\t\t\telse\n\t\t\t\tACCEPT_EULA=Y apt-get install -qqy --no-install-recommends '^msodbcsql[0-9]+$'\n\t\t\tfi\n\t\t\t;;\n\tesac\n}\n\n# Check if libaom is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibaomInstalled() {\n\tif ! test -f /usr/local/lib/libaom.so && ! test -f /usr/lib/libaom.so && ! test -f /usr/lib/x86_64*/libaom.so; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/aom/aom_codec.h && ! test -f /usr/include/aom/aom_codec.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libaom\ninstallLibaom() {\n\tprintf 'Installing libaom\\n'\n\tinstallLibaom_version=3.10.0\n\tinstallLibaom_dir=\"$(getPackageSource https://aomedia.googlesource.com/aom/+archive/v$installLibaom_version.tar.gz)\"\n\tmkdir -- \"$installLibaom_dir/my.build\"\n\tcd -- \"$installLibaom_dir/my.build\"\n\tcmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=1 -DENABLE_DOCS=0 -DENABLE_EXAMPLES=0 -DENABLE_TESTDATA=0 -DENABLE_TESTS=0 -DENABLE_TOOLS=0 -DCMAKE_INSTALL_LIBDIR:PATH=lib ..\n\tninja -j $(getProcessorCount) install\n\tcd - >/dev/null\n\tldconfig || true\n}\n\n# Check if libdav1d is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibdav1dInstalled() {\n\tif ! test -f /usr/local/lib/libdav1d.so && ! test -f /usr/lib/libdav1d.so && ! test -f /usr/lib/x86_64*/libdav1d.so; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/dav1d/dav1d.h && ! test -f /usr/include/dav1d/dav1d.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libdav1d\ninstallLibdav1d() {\n\tprintf 'Installing libdav1d\\n'\n\tinstallLibdav1d_dir=\"$(getPackageSource https://github.com/videolan/dav1d/archive/refs/tags/1.3.0.tar.gz)\"\n\tmkdir -- \"$installLibdav1d_dir/build\"\n\tcd -- \"$installLibdav1d_dir/build\"\n\tmeson --buildtype release -Dprefix=/usr ..\n\tninja -j $(getProcessorCount) install\n\tcd - >/dev/null\n\tif test -f /usr/lib/$TARGET_TRIPLET/libdav1d.so && ! test -f /usr/lib/libdav1d.so; then\n\t\tln -s /usr/lib/$TARGET_TRIPLET/libdav1d.so /usr/lib/\n\tfi\n\tldconfig || true\n}\n\n# Check if libyuv is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibyuvInstalled() {\n\tif ! test -f /usr/local/lib/libyuv.so && ! test -f /usr/lib/libyuv.so && ! test -f /usr/lib/x86_64*/libyuv.so && ! test -f /usr/lib/x86_64*/libyuv.so.*; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/libyuv.h && ! test -f /usr/include/libyuv.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libyuv\ninstallLibyuv() {\n\tprintf 'Installing libyuv\\n'\n\tinstallLibyuv_dir=\"$(getPackageSource https://chromium.googlesource.com/libyuv/libyuv/+archive/d359a9f922af840b043535d43cf9d38b220d102e.tar.gz)\"\n\tmkdir -- \"$installLibyuv_dir/build\"\n\tcd -- \"$installLibyuv_dir/build\"\n\tcmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -B. ..\n\tmake -j$(getProcessorCount) install\n\tcd - >/dev/null\n}\n\n# Check if libavif is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibavifInstalled() {\n\tif ! test -f /usr/local/lib/libavif.so && ! test -f /usr/lib/libavif.so && ! test -f /usr/lib/x86_64*/libavif.so; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/avif/avif.h && ! test -f /usr/include/avif/avif.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libavif\ninstallLibavif() {\n\tprintf 'Installing libavif\\n'\n\tinstallLibavif_dir=\"$(getPackageSource https://codeload.github.com/AOMediaCodec/libavif/tar.gz/refs/tags/v1.0.3)\"\n\tmkdir -- \"$installLibavif_dir/build\"\n\tcd -- \"$installLibavif_dir/build\"\n\tcmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DAVIF_CODEC_AOM=ON -DCMAKE_INSTALL_LIBDIR:PATH=lib\n\tmake -j$(getProcessorCount) install\n\tcd - >/dev/null\n}\n\n# Install libmpdec\ninstallLibMPDec() {\n\tinstallLibMPDec_src=\"$(getPackageSource https://www.bytereef.org/software/mpdecimal/releases/mpdecimal-2.5.1.tar.gz)\"\n\tcd -- \"$installLibMPDec_src\"\n\t./configure --disable-cxx\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\n# Check if libdatrie is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibDatrieInstalled() {\n\tif ! test -f /usr/local/lib/libdatrie.so && ! test -f /usr/lib/libdatrie.so && ! test -f /usr/lib/x86_64*/libdatrie.so; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/datrie/trie.h && ! test -f /usr/include/datrie/trie.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libdatrie\ninstallLibDatrie() {\n\tprintf 'Installing libdatrie\\n'\n\tinstallLibDatrie_src=\"$(getPackageSource https://github.com/tlwg/libdatrie/releases/download/v0.2.13/libdatrie-0.2.13.tar.xz)\"\n\tcd -- \"$installLibDatrie_src\"\n\t./configure\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\n# Check if libdatrie is installed\n#\n# Return:\n#   0 (true)\n#   1 (false)\nisLibThaiInstalled() {\n\treturn 1\n\tif ! test -f /usr/local/lib/libthai.so && ! test -f /usr/lib/libthai.so && ! test -f /usr/lib/x86_64*/libthai.so; then\n\t\treturn 1\n\tfi\n\tif ! test -f /usr/local/include/thai/thailib.h && ! test -f /usr/include/thai/thailib.h; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Install libdatrie\ninstallLibThai() {\n\tprintf 'Installing libthai\\n'\n\tinstallLibThai_src=\"$(getPackageSource https://github.com/tlwg/libthai/releases/download/v0.1.29/libthai-0.1.29.tar.xz)\"\n\tcd -- \"$installLibThai_src\"\n\t./configure\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\nisLibTommathInstalled() {\n\tif test -f /usr/local/lib/libtommath.a && test -f /usr/local/include/tommath.h; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ninstallLibTommath() {\n\tprintf 'Installing libtommath\\n'\n\tinstallLibTommath_src=\"$(getPackageSource https://github.com/libtom/libtommath/releases/download/v1.3.0/ltm-1.3.0.tar.xz)\"\n\tmkdir -p \"$installLibTommath_src/build\"\n\tcd -- \"$installLibTommath_src/build\"\n\tCFLAGS='-fPIC' cmake -DCMAKE_BUILD_TYPE=Release ..\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\nisLibTomcryptInstalled() {\n\tif test -f /usr/local/lib/libtomcrypt.a && test -f /usr/local/include/tomcrypt.h; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ninstallLibTomcrypt() {\n\tprintf 'Installing libtomcrypt\\n'\n\tinstallLibTomcrypt_src=\"$(getPackageSource https://github.com/libtom/libtomcrypt/releases/download/v1.18.2/crypt-1.18.2.tar.xz)\"\n\tcd -- \"$installLibTomcrypt_src\"\n\tCFLAGS='-fPIC' make -j$(getProcessorCount)\n\tmake install\n}\n\nisFirebirdInstalled() {\n\tif test -f /usr/lib/libfbclient.so && test -f /usr/include/ibase.h; then\n\t\treturn 0\n\tfi\n\tif test -d /tmp/src/firebird; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ninstallFirebird() {\n\tprintf 'Installing firebird\\n'\n\tif test $PHP_MAJMIN_VERSION -ge 804; then\n\t\tinstallFirebird_src=\"$(getPackageSource https://github.com/FirebirdSQL/firebird/releases/download/v5.0.1/Firebird-5.0.1.1469-0-source.tar.xz)\"\n\t\tcd -- \"$installFirebird_src\"\n\t\t./configure --enable-client-only\n\t\tmake -j$(getProcessorCount)\n\t\tcp -Rd gen/Release/firebird/include/* /usr/include\n\t\tcp -Rd gen/Release/firebird/lib/* /usr/lib\n\t\tcd - >/dev/null\n\telse\n\t\tmv \"$(getPackageSource https://github.com/FirebirdSQL/firebird/releases/download/R2_5_9/Firebird-2.5.9.27139-0.tar.bz2)\" /tmp/src/firebird\n\t\tcd /tmp/src/firebird\n\t\t# Patch rwlock.h (this has been fixed in later release of firebird 3.x)\n\t\tsed -i '194s/.*/#if 0/' src/common/classes/rwlock.h\n\t\t./configure --with-system-icu\n\t\t# -j option can't be used: make targets must be compiled sequentially\n\t\tmake -s btyacc_binary gpre_boot libfbstatic libfbclient\n\t\tcp gen/firebird/lib/libfbclient.so /usr/lib/\n\t\tln -s /usr/lib/libfbclient.so /usr/lib/libfbclient.so.2\n\t\tcd - >/dev/null\n\tfi\n}\n\nisLibXCryptInstalled() {\n\tif ! test -f /usr/local/lib/libcrypt.so && ! test -f /usr/lib/libcrypt.so && ! test -f /usr/lib/x86_64*/libcrypt.so; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\ninstallLibXCrypt() {\n\tprintf 'Installing libxcrypt\\n'\n\tinstallLibXCrypt_version=4.4.36\n\tinstallLibXCrypt_src=\"$(getPackageSource \"https://github.com/besser82/libxcrypt/releases/download/v$installLibXCrypt_version/libxcrypt-$installLibXCrypt_version.tar.xz\")\"\n\tcd -- \"$installLibXCrypt_src\"\n\t./configure --prefix /usr\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\nisLibenchant1Installed() {\n\tif test -f /usr/lib/libenchant.so || test -f /usr/local/lib/libenchant.so; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ninstallLibenchant1() {\n\tprintf 'Installing libenchant1\\n'\n\tinstallLibenchant1_src=\"$(getPackageSource https://github.com/rrthomas/enchant/releases/download/enchant-1-6-1/enchant-1.6.1.tar.gz)\"\n\tcd -- \"$installLibenchant1_src\"\n\t./configure\n\tmake -j$(getProcessorCount)\n\tmake install\n\tcd - >/dev/null\n}\n\n# Install Composer\ninstallComposer() {\n\tinstallComposer_version=\"$(getWantedPHPModuleVersion @composer)\"\n\tinstallComposer_version=\"${installComposer_version#^}\"\n\tif test -z \"$installComposer_version\"; then\n\t\tinstallComposer_fullname=composer\n\t\tinstallComposer_flags=''\n\telse\n\t\tinstallComposer_fullname=\"$(printf 'composer v%s' \"$installComposer_version\")\"\n\t\tif printf '%s' \"$installComposer_version\" | grep -Eq '^[0-9]+$'; then\n\t\t\tinstallComposer_flags=\"--$installComposer_version\"\n\t\telse\n\t\t\tinstallComposer_flags=\"--version=$installComposer_version\"\n\t\tfi\n\tfi\n\tprintf '### INSTALLING %s ###\\n' \"$installComposer_fullname\"\n\tactuallyInstallComposer /usr/local/bin composer \"$installComposer_flags\"\n}\n\n# Actually install composer\n#\n# Arguments:\n#   $1: the directory where composer should be installed (required)\n#   $2: the composer filename (optional, default: composer)\n#   $3. additional flags for the composer installed (optional)\nactuallyInstallComposer() {\n\tactuallyInstallComposer_installer=\"$(mktemp -p /tmp/src)\"\n\tcurl -sSLf -o \"$actuallyInstallComposer_installer\" https://getcomposer.org/installer\n\tactuallyInstallComposer_expectedSignature=\"$(curl -sSLf https://composer.github.io/installer.sig)\"\n\tactuallyInstallComposer_actualSignature=\"$(php -n -r \"echo hash_file('sha384', '$actuallyInstallComposer_installer');\")\"\n\tif test \"$actuallyInstallComposer_expectedSignature\" != \"$actuallyInstallComposer_actualSignature\"; then\n\t\tprintf 'Verification of composer installer failed!\\nExpected signature: %s\\nActual signature: %s\\n' \"$actuallyInstallComposer_expectedSignature\" \"$actuallyInstallComposer_actualSignature\" >&2\n\t\texit 1\n\tfi\n\tactuallyInstallComposer_flags=\"--install-dir=$1\"\n\tif test -n \"${2:-}\"; then\n\t\tactuallyInstallComposer_flags=\"$actuallyInstallComposer_flags --filename=$2\"\n\telse\n\t\tactuallyInstallComposer_flags=\"$actuallyInstallComposer_flags --filename=composer\"\n\tfi\n\tif test -n \"${3:-}\"; then\n\t\tactuallyInstallComposer_flags=\"$actuallyInstallComposer_flags $3\"\n\tfi\n\tphp \"$actuallyInstallComposer_installer\" $actuallyInstallComposer_flags\n\trm -- \"$actuallyInstallComposer_installer\"\n}\n\n# Install ionCube Loader\ninstallIonCubeLoader() {\n\t# See https://www.ioncube.com/loaders.php\n\tcase $PHP_BITS in\n\t\t32)\n\t\t\tcase $(uname -m) in\n\t\t\t\taarch* | arm*)\n\t\t\t\t\tinstallIonCubeLoader_url=\"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_armv7l.tar.gz\"\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallIonCubeLoader_url=\"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86.tar.gz\"\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\t*)\n\t\t\tcase $(uname -m) in\n\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\tinstallIonCubeLoader_url=\"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_aarch64.tar.gz\"\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallIonCubeLoader_url=\"https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\"\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\tesac\n\tprintf 'Downloading ionCube Loader... '\n\tinstallIonCubeLoader_dir=\"$(getPackageSource $installIonCubeLoader_url)\"\n\techo 'done.'\n\tinstallIonCubeLoader_so=$(php -r \"printf('ioncube_loader_lin_%s.%s%s.so', PHP_MAJOR_VERSION, PHP_MINOR_VERSION, ZEND_THREAD_SAFE ? '_ts' : '');\")\n\tcp \"$installIonCubeLoader_dir/$installIonCubeLoader_so\" \"$(getPHPExtensionsDir)/ioncube_loader.so\"\n}\n\n# Install SourceGuardian Loader\ninstallSourceGuardian() {\n\t# See https://www.sourceguardian.com/loaders.html\n\tcase $PHP_BITS in\n\t\t32)\n\t\t\tinstallSourceGuardian_url=https://www.sourceguardian.com/loaders/download/loaders.linux-i386.tar.gz\n\t\t\t;;\n\t\t*)\n\t\t\tcase $(uname -m) in\n\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\tinstallSourceGuardian_url=https://www.sourceguardian.com/loaders/download/loaders.linux-aarch64.tar.gz\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallSourceGuardian_url=https://www.sourceguardian.com/loaders/download/loaders.linux-x86_64.tar.gz\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\tesac\n\tprintf 'Downloading SourceGuardian... '\n\tinstallSourceGuardian_dir=\"$(getPackageSource $installSourceGuardian_url)\"\n\tprintf 'done (version: %s)\\n' \"$(cat \"$installSourceGuardian_dir/version\")\"\n\tfor installSourceGuardian_phpv in $PHP_MAJDOTMINDOTPAT_VERSION $PHP_MAJDOTMIN_VERSION; do\n\t\tinstallSourceGuardian_file=\"$installSourceGuardian_dir/ixed.$PHP_MAJDOTMIN_VERSION\"\n\t\tif test $PHP_THREADSAFE -eq 1; then\n\t\t\tinstallSourceGuardian_file=\"${installSourceGuardian_file}ts\"\n\t\tfi\n\t\tinstallSourceGuardian_file=\"${installSourceGuardian_file}.lin\"\n\t\tif test -f \"$installSourceGuardian_file\"; then\n\t\t\tmv \"$installSourceGuardian_file\" \"$(getPHPExtensionsDir)/sourceguardian.so\"\n\t\t\treturn\n\t\tfi\n\tdone\n\tprintf 'Unable to find a SourceGuardian compatible with PHP %s or PHP %s.\\nAvailable SourceGuardian versions:\\n' \"$PHP_MAJDOTMINDOTPAT_VERSION\" \"$PHP_MAJDOTMIN_VERSION\" >&2\n\tls -1 \"$installSourceGuardian_dir\" | grep -E '^ixed\\..*\\.lin$' | sed -E 's/^[^0-9]+([0-9]+(\\.[0-9]+)*).*$/\\1/' | sort | uniq >&2\n\texit 1\n}\n\n# Install Cargo (if not yet installed)\ninstallCargo() {\n\tif command -v cargo >/dev/null; then\n\t\treturn\n\tfi\n\tprintf '# Installing cargo\\n'\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\t# see https://github.com/hyperledger/indy-vdr/issues/69#issuecomment-998104850\n\t\t\texport RUSTFLAGS='-C target-feature=-crt-static'\n\t\t\t;;\n\tesac\n\tcurl https://sh.rustup.rs -sSf | sh -s -- -y -q\n\t. \"$HOME/.cargo/env\"\n\tif test -z \"${IPE_UNINSTALL_CARGO:-}\"; then\n\t\tIPE_UNINSTALL_CARGO=y\n\tfi\n}\n\ninstallNewRelic() {\n\tprintf '# Installing newrelic\\n'\n\tinstallNewRelic_search='\\bnewrelic-php[0-9.]*-[0-9]+(\\.[0-9]+)*-linux'\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tinstallNewRelic_search=\"$installNewRelic_search-musl\"\n\t\t\t;;\n\tesac\n\tinstallNewRelic_file=\"$(curl -sSLf -o- https://download.newrelic.com/php_agent/release/ | sed -E 's/<[^>]*>//g' | grep -Eo \"$installNewRelic_search.tar.gz\" | sort | head -1)\"\n\tinstallNewRelic_url=\"https://download.newrelic.com/php_agent/release/$installNewRelic_file\"\n\tinstallNewRelic_src=\"$(getPackageSource \"$installNewRelic_url\")\"\n\tcd -- \"$installNewRelic_src\"\n\tNR_INSTALL_USE_CP_NOT_LN=1 NR_INSTALL_SILENT=1 ./newrelic-install install\n\tcase \"${IPE_NEWRELIC_DAEMON:-}\" in\n\t\t1 | y* | Y*)\n\t\t\tNR_INSTALL_USE_CP_NOT_LN=1 NR_INSTALL_SILENT=1 ./newrelic-install install_daemon\n\t\t\t;;\n\tesac\n\tcase \"${IPE_NEWRELIC_KEEPLOG:-}\" in\n\t\t1 | y* | Y*) ;;\n\t\t*)\n\t\t\trm -f /tmp/nrinstall-*.tar\n\t\t\t;;\n\tesac\n\tcd - >/dev/null\n\tcat <<EOT\nNewRelic has been installed from $installNewRelic_url\nYou may need to:\n- change the owner/permissions of /var/log/newrelic\n  (for example: chown -R www-data:www-data /var/log/newrelic)\n- set the value of the newrelic.license configuration key in\n  $PHP_INI_DIR/conf.d/newrelic.ini\n  (if you didn't set the NR_INSTALL_KEY environment variable)\n\nEOT\n}\n\n# Compile the libraries specified in the COMPILE_LIBS variable\ncompileLibs() {\n\tif stringInList libaom \"$COMPILE_LIBS\"; then\n\t\tinstallLibaom\n\tfi\n\tif stringInList libdav1d \"$COMPILE_LIBS\"; then\n\t\tinstallLibdav1d\n\tfi\n\tif stringInList libyuv \"$COMPILE_LIBS\"; then\n\t\tinstallLibyuv\n\tfi\n\tif stringInList libavif \"$COMPILE_LIBS\"; then\n\t\tinstallLibavif\n\tfi\n\tif stringInList libtommath \"$COMPILE_LIBS\"; then\n\t\tinstallLibTommath\n\tfi\n\tif stringInList libtomcrypt \"$COMPILE_LIBS\"; then\n\t\tinstallLibTomcrypt\n\tfi\n\tif stringInList firebird \"$COMPILE_LIBS\"; then\n\t\tinstallFirebird\n\tfi\n\tif stringInList libxcrypt \"$COMPILE_LIBS\"; then\n\t\tinstallLibXCrypt\n\tfi\n\tif stringInList libenchant1 \"$COMPILE_LIBS\"; then\n\t\tinstallLibenchant1\n\tfi\n}\n\n# Install a bundled PHP module given its handle\n#\n# Arguments:\n#   $1: the handle of the PHP module\n#\n# Set:\n#   UNNEEDED_PACKAGE_LINKS\n#\n# Output:\n#   Nothing\ninstallBundledModule() {\n\tprintf '### INSTALLING BUNDLED MODULE %s ###\\n' \"$1\"\n\tif test -n \"$(getWantedPHPModuleVersion \"$1\")\"; then\n\t\tprintf '### WARNING the module \"%s\" is bundled with PHP, you can NOT specify a version for it\\n' \"$1\" >&2\n\tfi\n\tif test -n \"$(getModuleSourceCodePath \"$1\")\"; then\n\t\tprintf '### WARNING the module \"%s\" is bundled with PHP, you can NOT specify a source code path for it\\n' \"$1\" >&2\n\tfi\n\tcase \"$1\" in\n\t\tdba)\n\t\t\tif test -e /usr/lib/$TARGET_TRIPLET/libdb-5.3.so && ! test -e /usr/lib/libdb-5.3.so; then\n\t\t\t\tln -s /usr/lib/$TARGET_TRIPLET/libdb-5.3.so /usr/lib/\n\t\t\tfi\n\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\tdocker-php-source extract\n\t\t\t\tpatch /usr/src/php/ext/dba/config.m4 <<EOF\n@@ -362,7 +362,7 @@\n       break\n     fi\n   done\n-  PHP_DBA_DB_CHECK(4, db-5.1 db-5.0 db-4.8 db-4.7 db-4.6 db-4.5 db-4.4 db-4.3 db-4.2 db-4.1 db-4.0 db-4 db4 db, [(void)db_create((DB**)0, (DB_ENV*)0, 0)])\n+  PHP_DBA_DB_CHECK(4, db-5.3 db-5.1 db-5.0 db-4.8 db-4.7 db-4.6 db-4.5 db-4.4 db-4.3 db-4.2 db-4.1 db-4.0 db-4 db4 db, [(void)db_create((DB**)0, (DB_ENV*)0, 0)])\n fi\n PHP_DBA_STD_RESULT(db4,Berkeley DB4)\n \nEOF\n\t\t\tfi\n\t\t\tdocker-php-ext-configure dba --with-db4\n\t\t\t;;\n\t\tftp)\n\t\t\tif test $PHP_MAJMIN_VERSION -ge 804; then\n\t\t\t\tdocker-php-ext-configure ftp --with-ftp-ssl=/usr\n\t\t\telse\n\t\t\t\tdocker-php-ext-configure ftp --with-openssl-dir=/usr\n\t\t\tfi\n\t\t\t;;\n\t\tgd)\n\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\tdocker-php-ext-configure gd --with-gd --with-jpeg-dir --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir --enable-gd-native-ttf --with-vpx-dir\n\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\tdocker-php-ext-configure gd --with-gd --with-jpeg-dir --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir --enable-gd-native-ttf --with-webp-dir\n\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\tdocker-php-ext-configure gd --with-gd --with-jpeg-dir --with-png-dir --with-zlib-dir --with-xpm-dir --with-freetype-dir --with-webp-dir\n\t\t\telif test $PHP_MAJMIN_VERSION -le 800; then\n\t\t\t\tdocker-php-ext-configure gd --enable-gd --with-webp --with-jpeg --with-xpm --with-freetype\n\t\t\telse\n\t\t\t\tinstallBundledModule_tmp=0\n\t\t\t\tcase \"$DISTRO\" in\n\t\t\t\t\talpine)\n\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 315; then\n\t\t\t\t\t\t\tinstallBundledModule_tmp=1\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\t\tdebian)\n\t\t\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 12; then\n\t\t\t\t\t\t\tinstallBundledModule_tmp=1\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\tif test $installBundledModule_tmp -eq 0; then\n\t\t\t\t\tif isLibaomInstalled && isLibdav1dInstalled && isLibyuvInstalled && isLibavifInstalled; then\n\t\t\t\t\t\tinstallBundledModule_tmp=1\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif test $installBundledModule_tmp -eq 1; then\n\t\t\t\t\tdocker-php-ext-configure gd --enable-gd --with-webp --with-jpeg --with-xpm --with-freetype --with-avif\n\t\t\t\telse\n\t\t\t\t\tdocker-php-ext-configure gd --enable-gd --with-webp --with-jpeg --with-xpm --with-freetype\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tgmp)\n\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\tif ! test -f /usr/include/gmp.h; then\n\t\t\t\t\tln -s /usr/include/$TARGET_TRIPLET/gmp.h /usr/include/gmp.h\n\t\t\t\t\tUNNEEDED_PACKAGE_LINKS=\"$UNNEEDED_PACKAGE_LINKS /usr/include/gmp.h\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\timap)\n\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\tdebian@9)\n\t\t\t\t\tinstallBundledModule_tmp=\"$(pwd)\"\n\t\t\t\t\tcd /tmp\n\t\t\t\t\tapt-get download libc-client2007e-dev\n\t\t\t\t\tdpkg -i --ignore-depends=libssl-dev libc-client2007e-dev*\n\t\t\t\t\trm libc-client2007e-dev*\n\t\t\t\t\tcd \"$installBundledModule_tmp\"\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tPHP_OPENSSL=yes docker-php-ext-configure imap --with-kerberos --with-imap-ssl\n\t\t\t;;\n\t\tinterbase | pdo_firebird)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 804; then\n\t\t\t\t\t\tCFLAGS='-I/tmp/src/firebird/src/jrd -I/tmp/src/firebird/src/include -I/tmp/src/firebird/src/include/gen' docker-php-ext-configure $1\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tldap)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\tdebian)\n\t\t\t\t\tdocker-php-ext-configure ldap --with-libdir=lib/$TARGET_TRIPLET\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tmssql | pdo_dblib)\n\t\t\tif ! test -f /usr/lib/libsybdb.so; then\n\t\t\t\tln -s /usr/lib/$TARGET_TRIPLET/libsybdb.so /usr/lib/libsybdb.so\n\t\t\t\tUNNEEDED_PACKAGE_LINKS=\"$UNNEEDED_PACKAGE_LINKS /usr/lib/libsybdb.so\"\n\t\t\tfi\n\t\t\t;;\n\t\todbc)\n\t\t\tdocker-php-source extract\n\t\t\tcd /usr/src/php/ext/odbc\n\t\t\tphpize\n\t\t\tsed -ri 's@^ *test +\"\\$PHP_.*\" *= *\"no\" *&& *PHP_.*=yes *$@#&@g' configure\n\t\t\t./configure --with-unixODBC=shared,/usr\n\t\t\tcd - >/dev/null\n\t\t\t;;\n\t\toci8 | pdo_oci)\n\t\t\tinstallOracleInstantClient\n\t\t\tif test \"$1\" = oci8; then\n\t\t\t\tdocker-php-ext-configure \"$1\" \"--with-oci8=instantclient,$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\t\telif test \"$1\" = pdo_oci; then\n\t\t\t\tdocker-php-ext-configure \"$1\" \"--with-pdo-oci=instantclient,$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\t\tfi\n\t\t\t;;\n\t\tpdo_odbc)\n\t\t\tdocker-php-ext-configure pdo_odbc --with-pdo-odbc=unixODBC,/usr\n\t\t\t;;\n\t\tsnmp)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tmkdir -p -m 0755 /var/lib/net-snmp/mib_indexes\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tsockets)\n\t\t\tcase \"$PHP_MAJDOTMINDOTPAT_VERSION\" in\n\t\t\t\t8.0.15 | 8.1.2)\n\t\t\t\t\tsed -i '70 i #ifndef _GNU_SOURCE' /usr/src/php/ext/sockets/config.m4\n\t\t\t\t\tsed -i '71 i #define _GNU_SOURCE' /usr/src/php/ext/sockets/config.m4\n\t\t\t\t\tsed -i '72 i #endif' /usr/src/php/ext/sockets/config.m4\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tsybase_ct)\n\t\t\tdocker-php-ext-configure sybase_ct --with-sybase-ct=/usr\n\t\t\t;;\n\t\ttidy)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif ! test -f /usr/include/buffio.h; then\n\t\t\t\t\t\tln -s /usr/include/tidybuffio.h /usr/include/buffio.h\n\t\t\t\t\t\tUNNEEDED_PACKAGE_LINKS=\"$UNNEEDED_PACKAGE_LINKS /usr/include/buffio.h\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tzip)\n\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\tdocker-php-ext-configure zip\n\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\tdocker-php-ext-configure zip --with-libzip\n\t\t\telse\n\t\t\t\tdocker-php-ext-configure zip --with-zip\n\t\t\tfi\n\t\t\t;;\n\tesac\n\tinstallBundledModule_errBefore=\"$(php -r 'return;' 2>&1 || true)\"\n\tdocker-php-ext-install -j$(getProcessorCount) \"$1\"\n\tcase \"$1\" in\n\t\timap)\n\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\tdebian@9)\n\t\t\t\t\tdpkg -r libc-client2007e-dev\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\tesac\n\tcase \"${IPE_SKIP_CHECK:-}\" in\n\t\t1 | y* | Y*) ;;\n\t\t*)\n\t\t\tphp -r 'return;' >/dev/null 2>/dev/null || true\n\t\t\tinstallBundledModule_errAfter=\"$(php -r 'return;' 2>&1 || true)\"\n\t\t\tif test \"$installBundledModule_errAfter\" != \"$installBundledModule_errBefore\"; then\n\t\t\t\tprintf 'PHP has problems after installing the \"%s\" extension:\\n%s\\n' \"$1\" \"$installBundledModule_errAfter\" >&2\n\t\t\t\trm \"$PHP_INI_DIR/conf.d/docker-php-ext-$1.ini\" || true\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t\t;;\n\tesac\n}\n\n# Fetch a tar.gz file, extract it and returns the path of the extracted folder.\n#\n# Arguments:\n#   $1: the URL of the file to be downloaded\n#\n# Output:\n#   The path of the extracted directory\ngetPackageSource() {\n\tmkdir -p /tmp/src\n\tgetPackageSource_tempFile=$(mktemp -p /tmp/src)\n\tcurl -sSLf -o \"$getPackageSource_tempFile\" \"$1\"\n\tgetPackageSource_tempDir=$(mktemp -p /tmp/src -d)\n\tcd \"$getPackageSource_tempDir\"\n\ttar -xzf \"$getPackageSource_tempFile\" 2>/dev/null || tar -xf \"$getPackageSource_tempFile\" 2>/dev/null || (\n\t\tif command -v bsdtar >/dev/null; then\n\t\t\tbsdtar -xf \"$getPackageSource_tempFile\"\n\t\telse\n\t\t\tunzip -q \"$getPackageSource_tempFile\"\n\t\tfi\n\t)\n\tcd - >/dev/null\n\tunlink \"$getPackageSource_tempFile\"\n\tgetPackageSource_outDir=''\n\tfor getPackageSource_i in $(ls \"$getPackageSource_tempDir\"); do\n\t\tif test -n \"$getPackageSource_outDir\" || test -f \"$getPackageSource_tempDir/$getPackageSource_i\"; then\n\t\t\tgetPackageSource_outDir=''\n\t\t\tbreak\n\t\tfi\n\t\tgetPackageSource_outDir=\"$getPackageSource_tempDir/$getPackageSource_i\"\n\tdone\n\tif test -n \"$getPackageSource_outDir\"; then\n\t\tprintf '%s' \"$getPackageSource_outDir\"\n\telse\n\t\tprintf '%s' \"$getPackageSource_tempDir\"\n\tfi\n}\n\n# Install a PECL/remote PHP module given its handle\n#\n# Arguments:\n#   $1: the handle of the PHP module\ninstallRemoteModule() {\n\tinstallRemoteModule_module=\"$1\"\n\tprintf '### INSTALLING REMOTE MODULE %s ###\\n' \"$installRemoteModule_module\"\n\tinstallRemoteModule_version=\"$(resolvePHPModuleVersion \"$installRemoteModule_module\")\"\n\tinstallRemoteModule_path=\"$(getModuleSourceCodePath \"$installRemoteModule_module\")\"\n\trm -rf \"$CONFIGURE_FILE\"\n\tinstallRemoteModule_manuallyInstalled=0\n\tinstallRemoteModule_cppflags=''\n\tinstallRemoteModule_ini_basename=''\n\tinstallRemoteModule_ini_extra=''\n\tcase \"$installRemoteModule_module\" in\n\t\tamqp)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test \"$DISTRO_VERSION\" = debian@8; then\n\t\t\t\t\t# in Debian Jessie we have librabbitmq version 0.5.2\n\t\t\t\t\tinstallRemoteModule_version=1.9.3\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\t\tinstallRemoteModule_version=1.9.4\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=1.11.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tapcu)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=4.0.11\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tapcu_bc)\n\t\t\t# apcu_bc must be loaded after apcu\n\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\t;;\n\t\tast)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.16\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tbitset)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tblackfire)\n\t\t\tcase $(uname -m) in\n\t\t\t\ti386 | i686 | x86)\n\t\t\t\t\tinstallRemoteModule_tmp1=i386\n\t\t\t\t\t;;\n\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\tinstallRemoteModule_tmp1=arm64\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallRemoteModule_tmp1=amd64\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tcase $DISTRO in\n\t\t\t\talpine)\n\t\t\t\t\tinstallRemoteModule_distro=alpine\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallRemoteModule_distro=linux\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tinstallRemoteModule_tmp2=$(php -r 'echo PHP_MAJOR_VERSION . PHP_MINOR_VERSION . (ZEND_THREAD_SAFE ? \"-zts\" : \"\");')\n\t\t\tinstallRemoteModule_tmp=\"$(mktemp -p /tmp/src -d)\"\n\t\t\tcd \"$installRemoteModule_tmp\"\n\t\t\tcurl -sSLf --user-agent Docker https://blackfire.io/api/v1/releases/probe/php/$installRemoteModule_distro/$installRemoteModule_tmp1/$installRemoteModule_tmp2 | tar xz\n\t\t\tmv blackfire-*.so $(getPHPExtensionsDir)/blackfire.so\n\t\t\tcd - >/dev/null\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tinstallRemoteModule_ini_extra=\"$(printf '%sblackfire.agent_socket=tcp://blackfire:8307\\n' \"$installRemoteModule_ini_extra\")\"\n\t\t\t;;\n\t\tcassandra)\n\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://github.com/nano-interactive/ext-cassandra/tarball/1cf12c5ce49ed43a2c449bee4b7b23ce02a37bf0)\"\n\t\t\tcd \"$installRemoteModule_src/ext\"\n\t\t\tphpize\n\t\t\t./configure\n\t\t\tmake -j$(getProcessorCount) install\n\t\t\tcd - >/dev/null\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tcmark)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif ! test -e /usr/local/lib/libcmark.so && ! test -e /usr/local/lib64/libcmark.so && ! test -e /usr/lib/libcmark.so && ! test -e /usr/lib64/libcmark.so && ! test -e /lib/libcmark.so; then\n\t\t\t\tif test $(compareVersions \"$(cmake --version | head -n1 | sed -E 's/^.* //')\" '3.7') -lt 0; then\n\t\t\t\t\tinstallRemoteModule_tmp=0.29.0\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_tmp=0.31.1\n\t\t\t\tfi\n\t\t\t\tcd \"$(getPackageSource https://github.com/commonmark/cmark/archive/$installRemoteModule_tmp.tar.gz)\"\n\t\t\t\tmake -s -j$(getProcessorCount) cmake_build\n\t\t\t\tmake -s -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tcase \"$DISTRO\" in\n\t\t\t\t\talpine)\n\t\t\t\t\t\tif test -e /usr/local/lib64/libcmark.so.$installRemoteModule_tmp && ! test -e /usr/local/lib/libcmark.so.$installRemoteModule_tmp; then\n\t\t\t\t\t\t\tln -s /usr/local/lib64/libcmark.so.$installRemoteModule_tmp /usr/local/lib/\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tldconfig || true\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t;;\n\t\tcsv)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=0.3.1\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tddtrace)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=0.75.0\n\t\t\t\tfi\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tcase \"$DISTRO\" in\n\t\t\t\t\t\talpine)\n\t\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 312; then\n\t\t\t\t\t\t\t\t# cc is not supported due to a memcmp related bug\n\t\t\t\t\t\t\t\tinstallRemoteModule_version=1.1.0\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 0.75.0) -ge 0; then\n\t\t\t\tinstallCargo\n\t\t\tfi\n\t\t\t;;\n\t\tdecimal)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif ! test -f /usr/local/lib/libmpdec.so; then\n\t\t\t\t\t\tinstallLibMPDec\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\tdebian)\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 1200; then\n\t\t\t\t\t\tif test -z \"$(ldconfig -p | grep -E '\\slibmpdec.so\\s')\"; then\n\t\t\t\t\t\t\tinstallLibMPDec\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tds)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 703; then\n\t\t\t\t\tinstallRemoteModule_version=1.3.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 704; then\n\t\t\t\t\tinstallRemoteModule_version=1.4.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tecma_intl)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=alpha\n\t\t\tfi\n\t\t\t;;\n\t\tev)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 800; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.5\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tevent)\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 2.4.0) -ge 0; then\n\t\t\t\t# Enable internal debugging in Event\n\t\t\t\taddConfigureOption enable-event-debug no\n\t\t\t\t# Enable sockets support in Event\n\t\t\t\tif php --ri sockets >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-event-sockets yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-event-sockets no\n\t\t\t\tfi\n\t\t\t\t# libevent installation prefix\n\t\t\t\taddConfigureOption with-event-libevent-dir /usr\n\t\t\t\t# Include libevent's pthreads library and enable thread safety support in Event\n\t\t\t\taddConfigureOption with-event-pthreads yes\n\t\t\t\t# Include libevent protocol-specific functionality support including HTTP, DNS, and RPC\n\t\t\t\taddConfigureOption with-event-extra yes\n\t\t\t\t# Include libevent OpenSSL support\n\t\t\t\taddConfigureOption with-event-openssl yes\n\t\t\t\t# PHP Namespace for all Event classes\n\t\t\t\tif test -n \"${IPE_EVENT_NAMESPACE:-}\"; then\n\t\t\t\t\taddConfigureOption with-event-ns \"$IPE_EVENT_NAMESPACE\"\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption with-event-ns no\n\t\t\t\tfi\n\t\t\t\t# openssl installation prefix\n\t\t\t\taddConfigureOption with-openssl-dir yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 1.7.6) -ge 0; then\n\t\t\t\t# Enable internal debugging in Event\n\t\t\t\taddConfigureOption enable-event-debug no\n\t\t\t\t# Enable sockets support in Event\n\t\t\t\tif php --ri sockets >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-event-sockets yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-event-sockets no\n\t\t\t\tfi\n\t\t\t\t# libevent installation prefix\n\t\t\t\taddConfigureOption with-event-libevent-dir /usr\n\t\t\t\t# Include libevent's pthreads library and enable thread safety support in Event\n\t\t\t\taddConfigureOption with-event-pthreads yes\n\t\t\t\t# Include libevent protocol-specific functionality support including HTTP, DNS, and RPC\n\t\t\t\taddConfigureOption with-event-extra yes\n\t\t\t\t# Include libevent OpenSSL support\n\t\t\t\taddConfigureOption with-event-openssl yes\n\t\t\t\t# openssl installation prefix\n\t\t\t\taddConfigureOption with-openssl-dir no\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 1.3.0) -ge 0; then\n\t\t\t\t# Enable internal debugging in event\n\t\t\t\taddConfigureOption enable-event-debug no\n\t\t\t\t# libevent installation prefix\n\t\t\t\taddConfigureOption with-event-libevent-dir /usr\n\t\t\t\t# Include libevent's pthreads library and enable thread safety support in event\n\t\t\t\taddConfigureOption with-event-pthreads yes\n\t\t\t\t# Include libevent protocol-specific functionality support including HTTP, DNS, and RPC\n\t\t\t\taddConfigureOption with-event-extra yes\n\t\t\t\t# Include libevent OpenSSL support\n\t\t\t\taddConfigureOption with-event-openssl yes\n\t\t\t\t# openssl installation prefix\n\t\t\t\taddConfigureOption with-openssl-dir no\n\t\t\tfi\n\t\t\t# event must be loaded after sockets\n\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\t;;\n\t\tgearman)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.2\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.1.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif ! test -e /usr/local/include/libgearman/gearman.h || ! test -e /usr/local/lib/libgearman.so; then\n\t\t\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://github.com/gearman/gearmand/releases/download/1.1.21/gearmand-1.1.21.tar.gz)\"\n\t\t\t\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\t\t\t\t./configure\n\t\t\t\t\t\tmake -j$(getProcessorCount) install-binPROGRAMS\n\t\t\t\t\t\tmake -j$(getProcessorCount) install-nobase_includeHEADERS\n\t\t\t\t\t\tcd - >/dev/null\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tgeoip)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=beta\n\t\t\tfi\n\t\t\t;;\n\t\tgeos)\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tinstallRemoteModule_version=0def35611f773c951432f1f06a155471a5cb7611\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://git.osgeo.org/gitea/geos/php-geos/archive/$installRemoteModule_version.tar.gz)\"\n\t\t\t\tcd \"$installRemoteModule_src\"\n\t\t\t\t./autogen.sh\n\t\t\t\t./configure\n\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\tgeospatial)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.2.1\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=beta\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tgmagick)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.7RC3\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=beta\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tgrpc)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.33.1\n\t\t\t\telse\n\t\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\t\tdebian@8)\n\t\t\t\t\t\t\tinstallRemoteModule_version=1.46.3\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\talpine@3.7 | alpine@3.8 | debian@9) # With newer version: \"This package requires GCC 7 or higher\"\n\t\t\t\t\t\t\tinstallRemoteModule_version=1.52.1\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test \"$installRemoteModule_version\" = 1.35.0; then\n\t\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\t\talpine@3.13)\n\t\t\t\t\t\tinstallRemoteModule_cppflags='-Wno-maybe-uninitialized'\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t;;\n\t\thttp)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.6.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=3.2.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif test $PHP_MAJMIN_VERSION -ge 700; then\n\t\t\t\tif ! test -e /usr/local/lib/libidnkit.so; then\n\t\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://jprs.co.jp/idn/idnkit-2.3.tar.bz2)\"\n\t\t\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\t\t\tCFLAGS=-Wno-incompatible-pointer-types ./configure\n\t\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\t\tcd - >/dev/null\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t# http must be loaded after raphf and propro\n\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\t;;\n\t\tigbinary)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.8\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\timap)\n\t\t\t# Include Kerberos Support\n\t\t\taddConfigureOption with-kerberos yes\n\t\t\t# Include SSL Support\n\t\t\taddConfigureOption with-imap-ssl yes\n\t\t\t;;\n\t\tinotify)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.1.6\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tion)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=alpha\n\t\t\tfi\n\t\t\tif ! test -f /usr/local/lib/libionc.so || ! test -f /usr/local/include/ionc/ion.h; then\n\t\t\t\techo 'Installing ion-c... '\n\t\t\t\tinstallRemoteModule_src=\"$(mktemp -p /tmp/src -d)\"\n\t\t\t\tgit clone -q -c advice.detachedHead=false --depth 1 --branch v1.1.3 https://github.com/amzn/ion-c.git \"$installRemoteModule_src/ion\"\n\t\t\t\t(\n\t\t\t\t\tcd \"$installRemoteModule_src/ion\"\n\t\t\t\t\tgit submodule init -q\n\t\t\t\t\tgit submodule update -q\n\t\t\t\t\tmkdir -p build\n\t\t\t\t\tcd build\n\t\t\t\t\tcmake -DCMAKE_BUILD_TYPE=Release .. -Wno-dev\n\t\t\t\t\tmake clean\n\t\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\t)\n\t\t\t\trm -rf \"$installRemoteModule_src\"\n\t\t\tfi\n\t\t\taddConfigureOption with-ion \"shared,/usr/local\"\n\t\t\t;;\n\t\tioncube_loader)\n\t\t\tinstallIonCubeLoader\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tjsmin)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.1\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tjsonpath)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 800; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.1\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tluasandbox)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 702; then\n\t\t\t\t\tinstallRemoteModule_version=3.0.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tlz4)\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tinstallRemoteModule_version=0.4.3\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://github.com/kjdev/php-ext-lz4/archive/refs/tags/$installRemoteModule_version.tar.gz)\"\n\t\t\t\tcd \"$installRemoteModule_src\"\n\t\t\t\tphpize\n\t\t\t\t./configure --with-lz4-includedir=/usr\n\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\tlzf)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 702; then\n\t\t\t\t\tinstallRemoteModule_version=1.6.8\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" '1.5.0') -ge 0; then\n\t\t\t\t# Sacrifice speed in favour of compression ratio?\n\t\t\t\tcase \"${IPE_LZF_BETTERCOMPRESSION:-}\" in\n\t\t\t\t\t1 | y* | Y*)\n\t\t\t\t\t\taddConfigureOption 'enable-lzf-better-compression' 'yes'\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\taddConfigureOption 'enable-lzf-better-compression' 'no'\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\t;;\n\t\tmailparse)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.1.6\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 702; then\n\t\t\t\t\tinstallRemoteModule_version=3.1.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tmemcache)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.2.7\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=4.0.5.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tmemcached)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.2.0\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\t# Set the path to libmemcached install prefix\n\t\t\taddConfigureOption 'with-libmemcached-dir' 'no'\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" '3.0.0') -ge 0; then\n\t\t\t\t# Set the path to ZLIB install prefix\n\t\t\t\taddConfigureOption 'with-zlib-dir' 'no'\n\t\t\t\t# Use system FastLZ library\n\t\t\t\taddConfigureOption 'with-system-fastlz' 'no'\n\t\t\t\t# Enable memcached igbinary serializer support\n\t\t\t\tif php --ri igbinary >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption 'enable-memcached-igbinary' 'yes'\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption 'enable-memcached-igbinary' 'no'\n\t\t\t\tfi\n\t\t\t\t# Enable memcached msgpack serializer support\n\t\t\t\tif php --ri msgpack >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption 'enable-memcached-msgpack' 'yes'\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption 'enable-memcached-msgpack' 'no'\n\t\t\t\tfi\n\t\t\t\t# Enable memcached json serializer support\n\t\t\t\taddConfigureOption 'enable-memcached-json' 'yes'\n\t\t\t\t# Enable memcached protocol support\n\t\t\t\taddConfigureOption 'enable-memcached-protocol' 'no' # https://github.com/php-memcached-dev/php-memcached/issues/418#issuecomment-449587972\n\t\t\t\t# Enable memcached sasl support\n\t\t\t\taddConfigureOption 'enable-memcached-sasl' 'yes'\n\t\t\t\t# Enable memcached session handler support\n\t\t\t\taddConfigureOption 'enable-memcached-session' 'yes'\n\t\t\tfi\n\t\t\t# memcached must be loaded after msgpack\n\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\t;;\n\t\tmemprof)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.1.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tmongo)\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" '1.5.0') -ge 0; then\n\t\t\t\t# Build with Cyrus SASL (MongoDB Enterprise Authentication) support?\n\t\t\t\taddConfigureOption '-with-mongo-sasl' 'yes'\n\t\t\tfi\n\t\t\t;;\n\t\tmongodb)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\t\tinstallRemoteModule_version=1.5.5\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.7.5\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=1.9.2\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=1.11.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=1.16.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 1.17.0) -ge 0; then\n\t\t\t\t# Enable developer flags? (yes/no)\n\t\t\t\taddConfigureOption enable-mongodb-developer-flags no\n\t\t\t\t# Enable code coverage? (yes/no)\n\t\t\t\taddConfigureOption enable-mongodb-coverage no\n\t\t\t\t# Use system libraries for libbson, libmongoc, and libmongocrypt? (yes/no)\n\t\t\t\taddConfigureOption with-mongodb-system-libs no\n\t\t\t\t# Enable client-side encryption? (auto/yes/no)\n\t\t\t\taddConfigureOption with-mongodb-client-side-encryption yes\n\t\t\t\t# Enable Snappy for compression? (auto/yes/no)\n\t\t\t\taddConfigureOption with-mongodb-snappy yes\n\t\t\t\t# Enable zlib for compression? (auto/system/bundled/no)\n\t\t\t\taddConfigureOption with-mongodb-zlib yes\n\t\t\t\t# Enable zstd for compression? (auto/yes/no)\n\t\t\t\taddConfigureOption with-mongodb-zstd yes\n\t\t\t\t# Enable SASL for Kerberos authentication? (auto/cyrus/no)\n\t\t\t\taddConfigureOption with-mongodb-sasl yes\n\t\t\t\t# Enable crypto and TLS? (auto/openssl/libressl/darwin/no)\n\t\t\t\taddConfigureOption with-mongodb-ssl yes\n\t\t\t\t# Use system crypto profile (OpenSSL only)? (yes/no)\n\t\t\t\taddConfigureOption enable-mongodb-crypto-system-profile yes\n\t\t\t\t# Use bundled or system utf8proc for SCRAM-SHA-256 SASLprep? (bundled/system)\n\t\t\t\taddConfigureOption with-mongodb-utf8proc bundled\n\t\t\tfi\n\t\t\t;;\n\t\tmosquitto)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=beta\n\t\t\tfi\n\t\t\t;;\n\t\tmsgpack)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.5.7\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tnewrelic)\n\t\t\tinstallNewRelic\n\t\t\tinstallRemoteModule_manuallyInstalled=2\n\t\t\t;;\n\t\toauth)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.2.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\toci8 | pdo_oci)\n\t\t\tinstallOracleInstantClient\n\t\t\tif test \"$installRemoteModule_module\" = oci8; then\n\t\t\t\taddConfigureOption with-oci8 \"instantclient,$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\t\telif test \"$installRemoteModule_module\" = pdo_oci; then\n\t\t\t\taddConfigureOption with-pdo-oci \"instantclient,$ORACLE_INSTANTCLIENT_LIBPATH\"\n\t\t\tfi\n\t\t\t;;\n\t\topencensus)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=alpha\n\t\t\tfi\n\t\t\t;;\n\t\topenswoole)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 704; then\n\t\t\t\t\tinstallRemoteModule_version=4.10.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 801; then\n\t\t\t\t\tinstallRemoteModule_version=22.0.0\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif php --ri sockets >/dev/null 2>/dev/null; then\n\t\t\t\tinstallRemoteModule_sockets=yes\n\t\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\telse\n\t\t\t\tinstallRemoteModule_sockets=no\n\t\t\tfi\n\t\t\tinstallRemoteModule_openssl=yes\n\t\t\tif test -n \"$installRemoteModule_version\" && test $(compareVersions \"$installRemoteModule_version\" 22.1.2) -ge 0; then\n\t\t\t\t# enable coroutine sockets?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 protocol?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable coroutine mysqlnd?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable coroutine curl?\n\t\t\t\taddConfigureOption enable-hook-curl yes\n\t\t\t\t# enable coroutine postgres?\n\t\t\t\taddConfigureOption with-postgres yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 22.1.1) -ge 0; then\n\t\t\t\t# enable c-ares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\t\t# enable coroutine sockets?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 protocol?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable coroutine mysqlnd?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable coroutine curl?\n\t\t\t\taddConfigureOption enable-hook-curl yes\n\t\t\t\t# enable coroutine postgres?\n\t\t\t\taddConfigureOption with-postgres yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 22.1.0) -ge 0; then\n\t\t\t\t# enable coroutine sockets?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 protocol?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable coroutine mysqlnd?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable coroutine curl?\n\t\t\t\taddConfigureOption enable-hook-curl yes\n\t\t\t\t# enable coroutine postgres?\n\t\t\t\taddConfigureOption with-postgres yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 22.0.0) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable hook curl support?\n\t\t\t\taddConfigureOption enable-hook-curl yes\n\t\t\t\t# enable postgres support?\n\t\t\t\taddConfigureOption with-postgres yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.8.0) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable json support?\n\t\t\t\taddConfigureOption enable-swoole-json yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl yes\n\t\t\t\t# enable postgres support?\n\t\t\t\taddConfigureOption with-postgres yes\n\t\t\telse\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable json support?\n\t\t\t\taddConfigureOption enable-swoole-json yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl yes\n\t\t\tfi\n\t\t\t;;\n\t\tparallel)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=0.8.3\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tparle)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 704; then\n\t\t\t\t\tinstallRemoteModule_version=0.8.3\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=beta\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 0.8.4) -ge 0; then\n\t\t\t\t# Enable internal UTF-32 support in parle\n\t\t\t\taddConfigureOption enable-parle-utf32 yes\n\t\t\tfi\n\t\t\t;;\n\t\tpcov)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=0.9.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tphalcon)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMINPAT_VERSION -lt 70401; then\n\t\t\t\t\tinstallRemoteModule_version=4.1.2\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 800; then\n\t\t\t\t\tinstallRemoteModule_version=5.4.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tphp_trie)\n\t\t\tif ! test -f /usr/local/include/hat-trie/include/tsl/htrie_map.h; then\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://codeload.github.com/Tessil/hat-trie/tar.gz/v0.6.0)\"\n\t\t\t\tmkdir -p /usr/local/include/hat-trie\n\t\t\t\tmv \"$installRemoteModule_src/include\" /usr/local/include/hat-trie\n\t\t\tfi\n\t\t\t;;\n\t\tpq)\n\t\t\t# pq must be loaded after raphf\n\t\t\tinstallRemoteModule_ini_basename=\"xx-php-ext-$installRemoteModule_module\"\n\t\t\t;;\n\t\tpropro)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tprotobuf)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=3.12.4\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 800; then\n\t\t\t\t\tinstallRemoteModule_version=3.24.4\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 801; then\n\t\t\t\t\tinstallRemoteModule_version=3.25.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tpsr)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.5.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=0.6.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 703; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tpthreads)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.10\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\traphf)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\trdkafka)\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version1=''\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 505; then\n\t\t\t\t\tinstallRemoteModule_version1=3.0.5\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version1=4.1.2\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_version2=''\n\t\t\t\tcase \"$DISTRO\" in\n\t\t\t\t\talpine)\n\t\t\t\t\t\tinstallRemoteModule_tmp='librdkafka'\n\t\t\t\t\t\t;;\n\t\t\t\t\tdebian)\n\t\t\t\t\t\tinstallRemoteModule_tmp='librdkafka*'\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tinstallRemoteModule_tmp=''\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t\tif test -n \"$installRemoteModule_tmp\"; then\n\t\t\t\t\tinstallRemoteModule_tmp=\"$(getInstalledPackageVersion \"$installRemoteModule_tmp\")\"\n\t\t\t\t\tif test -n \"$installRemoteModule_tmp\" && test $(compareVersions \"$installRemoteModule_tmp\" '0.11.0') -lt 0; then\n\t\t\t\t\t\tinstallRemoteModule_version2=3.1.3\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif test -z \"$installRemoteModule_version1\" || test -z \"$installRemoteModule_version2\"; then\n\t\t\t\t\tinstallRemoteModule_version=\"$installRemoteModule_version1$installRemoteModule_version2\"\n\t\t\t\telif test $(compareVersions \"$installRemoteModule_version1\" \"$installRemoteModule_version2\") -le 0; then\n\t\t\t\t\tinstallRemoteModule_version=\"$installRemoteModule_version1\"\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=\"$installRemoteModule_version2\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tredis)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=4.3.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=5.3.7\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=6.0.2\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\t# Enable igbinary serializer support?\n\t\t\tif php --ri igbinary >/dev/null 2>/dev/null; then\n\t\t\t\taddConfigureOption enable-redis-igbinary yes\n\t\t\telse\n\t\t\t\taddConfigureOption enable-redis-igbinary no\n\t\t\tfi\n\t\t\t# Enable lzf compression support?\n\t\t\taddConfigureOption enable-redis-lzf yes\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 5.0.0) -ge 0; then\n\t\t\t\tif ! test -e /usr/include/zstd.h || ! test -e /usr/lib/libzstd.so -o -e \"/usr/lib/$TARGET_TRIPLET/libzstd.so\"; then\n\t\t\t\t\tinstallRemoteModule_zstdVersion=1.4.4\n\t\t\t\t\tinstallRemoteModule_zstdVersionMajor=$(echo $installRemoteModule_zstdVersion | cut -d. -f1)\n\t\t\t\t\trm -rf /tmp/src/zstd\n\t\t\t\t\tmv \"$(getPackageSource https://github.com/facebook/zstd/releases/download/v$installRemoteModule_zstdVersion/zstd-$installRemoteModule_zstdVersion.tar.gz)\" /tmp/src/zstd\n\t\t\t\t\tcd /tmp/src/zstd\n\t\t\t\t\tmake V=0 -j$(getProcessorCount) lib\n\t\t\t\t\tcp -f lib/libzstd.so \"/usr/lib/$TARGET_TRIPLET/libzstd.so.$installRemoteModule_zstdVersion\"\n\t\t\t\t\tln -sf \"/usr/lib/$TARGET_TRIPLET/libzstd.so.$installRemoteModule_zstdVersion\" \"/usr/lib/$TARGET_TRIPLET/libzstd.so.$installRemoteModule_zstdVersionMajor\"\n\t\t\t\t\tln -sf \"/usr/lib/$TARGET_TRIPLET/libzstd.so.$installRemoteModule_zstdVersion\" \"/usr/lib/$TARGET_TRIPLET/libzstd.so\"\n\t\t\t\t\tln -sf /tmp/src/zstd/lib/zstd.h /usr/include/zstd.h\n\t\t\t\t\tUNNEEDED_PACKAGE_LINKS=\"$UNNEEDED_PACKAGE_LINKS /usr/include/zstd.h\"\n\t\t\t\t\tcd - >/dev/null\n\t\t\t\tfi\n\t\t\t\t# Enable zstd compression support?\n\t\t\t\taddConfigureOption enable-redis-zstd yes\n\t\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 6.0.0) -ge 0; then\n\t\t\t\t\t# Enable msgpack serializer support?\n\t\t\t\t\tif php --ri msgpack >/dev/null 2>/dev/null; then\n\t\t\t\t\t\taddConfigureOption enable-redis-msgpack yes\n\t\t\t\t\telse\n\t\t\t\t\t\taddConfigureOption enable-redis-msgpack no\n\t\t\t\t\tfi\n\t\t\t\t\t# Enable lz4 compression?\n\t\t\t\t\taddConfigureOption enable-redis-lz4 yes\n\t\t\t\t\t# Use system liblz4?\n\t\t\t\t\taddConfigureOption with-liblz4 yes\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\trelay)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=\"$(curl -sSLf https://builds.r2.relay.so/meta/latest)\"\n\t\t\t\tinstallRemoteModule_version=\"${installRemoteModule_version#v}\"\n\t\t\tfi\n\t\t\tcase $(uname -m) in\n\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\tinstallRemoteModule_hardware=aarch64\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinstallRemoteModule_hardware=x86-64\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tinstallRemoteModule_distro=\"$DISTRO\"\n\t\t\tinstallRemoteModule_flags=''\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -lt 317; then\n\t\t\t\t\t\tinstallRemoteModule_distro=alpine3.9\n\t\t\t\t\telse\n\t\t\t\t\t\tinstallRemoteModule_distro=alpine3.17\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\tdebian)\n\t\t\t\t\tcase \"$(dpkg -l 'libssl*' | grep -E '^ii ' | cut -d' ' -f3)\" in\n\t\t\t\t\t\tlibssl3*)\n\t\t\t\t\t\t\tinstallRemoteModule_flags=+libssl3\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t# See https://relay.so/builds\n\t\t\tinstallRemoteModule_url=\"https://builds.r2.relay.so/v${installRemoteModule_version}/relay-v${installRemoteModule_version}-php${PHP_MAJDOTMIN_VERSION}-${installRemoteModule_distro}-${installRemoteModule_hardware}${installRemoteModule_flags}.tar.gz\"\n\t\t\tprintf 'Downloading relay v%s (%s) from %s... ' \"$installRemoteModule_version\" \"$installRemoteModule_hardware\" \"$installRemoteModule_url\"\n\t\t\tinstallRemoteModule_src=\"$(getPackageSource $installRemoteModule_url)\"\n\t\t\techo 'done.'\n\t\t\tcp -- \"$installRemoteModule_src/relay-pkg.so\" \"$PHP_EXTDIR/relay.so\"\n\t\t\tsed -i \"s/00000000-0000-0000-0000-000000000000/$(cat /proc/sys/kernel/random/uuid)/\" \"$PHP_EXTDIR/relay.so\"\n\t\t\tinstallRemoteModule_ini_extra=\"$(grep -vE '^[ \\t]*extension[ \\t]*=' $installRemoteModule_src/relay.ini)\"\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tsaxon)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t\tinstallRemoteModule_version='12.4.2'\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version='12.3'\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tinstallRemoteModule_majorVersion=\"${installRemoteModule_version%%.*}\"\n\t\t\tif test \"$installRemoteModule_majorVersion\" -ge 12; then\n\t\t\t\tcase $(uname -m) in\n\t\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\t\tinstallRemoteModule_url=https://downloads.saxonica.com/SaxonC/EE/${installRemoteModule_majorVersion}/libsaxon-EEC-linux-aarch64-v${installRemoteModule_version}.zip\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tinstallRemoteModule_url=https://downloads.saxonica.com/SaxonC/EE/${installRemoteModule_majorVersion}/libsaxon-EEC-linux-x86_64-v${installRemoteModule_version}.zip\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\telse\n\t\t\t\tinstallRemoteModule_url=https://downloads.saxonica.com/SaxonC/EE/${installRemoteModule_majorVersion}/libsaxon-EEC-setup64-v${installRemoteModule_version}.zip\n\t\t\tfi\n\t\t\tinstallRemoteModule_dir=\"$(getPackageSource $installRemoteModule_url)\"\n\t\t\tif ! test -f /usr/lib/libsaxon-*.so; then\n\t\t\t\tif test \"$installRemoteModule_majorVersion\" -ge 12; then\n\t\t\t\t\tcp $installRemoteModule_dir/libs/nix/*.so /usr/lib/\n\t\t\t\telse\n\t\t\t\t\tcp $installRemoteModule_dir/*.so /usr/lib/\n\t\t\t\tfi\n\t\t\t\tldconfig || true\n\t\t\tfi\n\t\t\tcd \"$installRemoteModule_dir/Saxon.C.API\"\n\t\t\tphpize\n\t\t\t./configure --enable-saxon\n\t\t\tmake -j$(getProcessorCount) install\n\t\t\tcd - >/dev/null\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tseasclick)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.1.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tsmbclient)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tsnappy)\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tinstallRemoteModule_version=0.2.1\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://github.com/kjdev/php-ext-snappy/archive/refs/tags/$installRemoteModule_version.tar.gz)\"\n\t\t\t\tcd \"$installRemoteModule_src\"\n\t\t\t\tphpize\n\t\t\t\t./configure --with-snappy-includedir=/usr\n\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\tsnuffleupagus)\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -le 800; then\n\t\t\t\t\t\tinstallRemoteModule_version=0.9.0\n\t\t\t\t\telse\n\t\t\t\t\t\tinstallRemoteModule_version=0.11.0\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://codeload.github.com/jvoisin/snuffleupagus/tar.gz/v$installRemoteModule_version)\"\n\t\t\t\tcd \"$installRemoteModule_src/src\"\n\t\t\t\tphpize\n\t\t\t\t./configure --enable-snuffleupagus\n\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tcp -a \"$installRemoteModule_src/config/default.rules\" \"$PHP_INI_DIR/conf.d/snuffleupagus.rules\"\n\t\t\t\tif test $(compareVersions \"$installRemoteModule_version\" 0.8.0) -ge 0; then\n\t\t\t\t\tprintf '\\n# Disable \"PHP version is not officially maintained anymore\" message\\nsp.global.show_old_php_warning.disable();\\n' >>\"$PHP_INI_DIR/conf.d/snuffleupagus.rules\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tif test -f \"$installRemoteModule_path/config/default.rules\"; then\n\t\t\t\t\tcp -a \"$installRemoteModule_path/config/default.rules\" \"$PHP_INI_DIR/conf.d/snuffleupagus.rules\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tinstallRemoteModule_ini_extra=\"$(printf '%ssp.configuration_file=%s\\n' \"$installRemoteModule_ini_extra\" \"$PHP_INI_DIR/conf.d/snuffleupagus.rules\")\"\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tsodium | libsodium)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.7\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tsolr)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.4.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -lt 704; then\n\t\t\t\t\tinstallRemoteModule_version=2.6.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tsourceguardian)\n\t\t\tinstallSourceGuardian\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tspx)\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tinstallRemoteModule_version=v0.4.18\n\t\t\t\tfi\n\t\t\t\tif test \"${installRemoteModule_version%.*}\" = \"$installRemoteModule_version\"; then\n\t\t\t\t\tinstallRemoteModule_displayVersion=\"$installRemoteModule_version\"\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_displayVersion=\"git--master-$installRemoteModule_version\"\n\t\t\t\tfi\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://codeload.github.com/NoiseByNorthwest/php-spx/tar.gz/$installRemoteModule_version)\"\n\t\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\t\tphpize\n\t\t\t\t./configure\n\t\t\t\tmake -j$(getProcessorCount) install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\tsqlsrv | pdo_sqlsrv)\n\t\t\tisMicrosoftSqlServerODBCInstalled || installMicrosoftSqlServerODBC\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t# https://docs.microsoft.com/it-it/sql/connect/php/system-requirements-for-the-php-sql-driver?view=sql-server-2017\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=3.0.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=5.3.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=5.6.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 702; then\n\t\t\t\t\tinstallRemoteModule_version=5.8.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=5.9.0\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=5.10.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 800; then\n\t\t\t\t\tinstallRemoteModule_version=5.11.1\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tssh2)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.13\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tstomp)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.9\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif test \"$DISTRO\" = debian; then\n\t\t\t\taddConfigureOption with-openssl-dir yes\n\t\t\telse\n\t\t\t\taddConfigureOption with-openssl-dir /usr\n\t\t\tfi\n\t\t\t;;\n\t\tswoole)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 502; then\n\t\t\t\t\tinstallRemoteModule_version=1.6.10\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 504; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.4\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.11\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=4.3.6\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=4.5.10\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=4.8.11\n\t\t\t\telif test $PHP_BITS -eq 32; then\n\t\t\t\t\t# See https://github.com/swoole/swoole-src/issues/5198#issuecomment-1820162178\n\t\t\t\t\tinstallRemoteModule_version=\"$(resolvePHPModuleVersion \"$installRemoteModule_module\" '^5.0')\"\n\t\t\t\telse\n\t\t\t\t\tcase \"$DISTRO\" in\n\t\t\t\t\t\talpine)\n\t\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -le 312; then\n\t\t\t\t\t\t\t\tinstallRemoteModule_version=5.1.2\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\tfi\n\t\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\t\tif test $PHP_MAJMIN_VERSION -le 800; then\n\t\t\t\t\t\tinstallRemoteModule_version=5.1.3\n\t\t\t\t\telse\n\t\t\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" stable)\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif php --ri sockets >/dev/null 2>/dev/null; then\n\t\t\t\tinstallRemoteModule_sockets=yes\n\t\t\telse\n\t\t\t\tinstallRemoteModule_sockets=no\n\t\t\tfi\n\t\t\tinstallRemoteModule_openssl=yes\n\t\t\tcase \"$DISTRO_VERSION\" in\n\t\t\t\talpine@3.7 | alpine@3.8)\n\t\t\t\t\tif test $(compareVersions \"$installRemoteModule_version\" 4.6.0) -lt 0; then\n\t\t\t\t\t\t# see https://github.com/swoole/swoole-src/issues/3934\n\t\t\t\t\t\tinstallRemoteModule_openssl=no\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tif test $PHP_MAJMIN_VERSION -ge 800; then\n\t\t\t\t# see https://github.com/swoole/swoole-src/issues/5365\n\t\t\t\tinstallRemoteModule_curl=no\n\t\t\telse\n\t\t\t\tinstallRemoteModule_curl=yes\n\t\t\tfi\n\t\t\tif test $PHP_THREADSAFE -eq 1; then\n\t\t\t\tinstallRemoteModule_zts=yes\n\t\t\telse\n\t\t\t\tinstallRemoteModule_zts=no\n\t\t\tfi\n\t\t\tinstallRemoteModule_sqlite=yes\n\t\t\tinstallRemoteModule_iouring=no\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -lt 317; then\n\t\t\t\t\t\t# we need sqlite3 >= 3.7.7\n\t\t\t\t\t\tinstallRemoteModule_sqlite=no\n\t\t\t\t\tfi\n\t\t\t\t\tcase \"${IPE_SWOOLE_WITHOUT_IOURING:-}\" in\n\t\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t# iouring support in swoole 6 requires liburing 2.5+: available since Alpine 3.19\n\t\t\t\t\t\t\t# but with Alpine 3.19 we have a \"invalid use of incomplete type 'const struct statx'\" error\n\t\t\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 320; then\n\t\t\t\t\t\t\t\tinstallRemoteModule_iouring=yes\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\tdebian)\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -lt 1200; then\n\t\t\t\t\t\t# we need sqlite3 >= 3.7.7\n\t\t\t\t\t\tinstallRemoteModule_sqlite=no\n\t\t\t\t\tfi\n\t\t\t\t\tcase \"${IPE_SWOOLE_WITHOUT_IOURING:-}\" in\n\t\t\t\t\t\t1 | y* | Y*) ;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tif test $DISTRO_VERSION_NUMBER -ge 13; then\n\t\t\t\t\t\t\t\t# iouring support in swoole 6 requires liburing 2.5+: available since Debian Trixie (13)\n\t\t\t\t\t\t\t\tinstallRemoteModule_iouring=yes\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tinstallRemoteModule_zstd=yes\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\tdebian)\n\t\t\t\t\tif test $DISTRO_VERSION_NUMBER -lt 11; then\n\t\t\t\t\t\t# swoole 6 requires libzstd >= 1.4.0, but on debian 10 (buster) we have 1.3.8\n\t\t\t\t\t\tinstallRemoteModule_zstd=no\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tif test $(compareVersions \"$installRemoteModule_version\" 6.0.0) -ge 0; then\n\t\t\t\t# enable sockets support?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\t\t# enable cares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\t\t# enable brotli support?\n\t\t\t\taddConfigureOption enable-brotli yes\n\t\t\t\t# enable zstd support?\n\t\t\t\taddConfigureOption enable-zstd $installRemoteModule_zstd\n\t\t\t\t# enable PostgreSQL database support?\n\t\t\t\taddConfigureOption enable-swoole-pgsql yes\n\t\t\t\t# enable ODBC database support?\n\t\t\t\taddConfigureOption with-swoole-odbc no\n\t\t\t\t# enable Oracle database support?\n\t\t\t\taddConfigureOption with-swoole-oracle no\n\t\t\t\t# enable Sqlite database support?\n\t\t\t\taddConfigureOption enable-swoole-sqlite $installRemoteModule_sqlite\n\t\t\t\t# enable swoole thread support (need php zts support)?\n\t\t\t\taddConfigureOption enable-swoole-thread $installRemoteModule_zts\n\t\t\t\t# enable iouring for file async support?\n\t\t\t\taddConfigureOption enable-iouring $installRemoteModule_iouring\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 5.1.0) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\t\t# enable cares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\t\t# enable brotli support?\n\t\t\t\taddConfigureOption enable-brotli yes\n\t\t\t\t# enable PostgreSQL database support?\n\t\t\t\taddConfigureOption enable-swoole-pgsql yes\n\t\t\t\t# enable ODBC database support?\n\t\t\t\taddConfigureOption with-swoole-odbc no\n\t\t\t\t# enable Oracle database support?\n\t\t\t\taddConfigureOption with-swoole-oracle no\n\t\t\t\t# enable Sqlite database support?\n\t\t\t\taddConfigureOption enable-swoole-sqlite $installRemoteModule_sqlite\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 5.0.1) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\t\t# enable cares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\t\t# enable brotli support?\n\t\t\t\taddConfigureOption enable-brotli yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 5.0.0) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\t\t# enable cares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.8.11) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable json support?\n\t\t\t\taddConfigureOption enable-swoole-json yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\t\t# enable cares support?\n\t\t\t\taddConfigureOption enable-cares yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.6.1) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable json support?\n\t\t\t\taddConfigureOption enable-swoole-json yes\n\t\t\t\t# enable curl support?\n\t\t\t\taddConfigureOption enable-swoole-curl $installRemoteModule_curl\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.4.0) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.2.11) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable postgresql coroutine client support?\n\t\t\t\taddConfigureOption enable-coroutine-postgresql yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.2.7) -ge 0; then\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable postgresql coroutine client support?\n\t\t\t\taddConfigureOption enable-coroutine-postgresql yes\n\t\t\t\t# enable kernel debug/trace log? (it will degrade performance)\n\t\t\t\taddConfigureOption enable-debug-log no\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.2.6) -ge 0; then\n\t\t\t\t# enable debug/trace log support?\n\t\t\t\taddConfigureOption enable-debug-log no\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable postgresql coroutine client support?\n\t\t\t\taddConfigureOption enable-coroutine-postgresql yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 4.2.0) -ge 0; then\n\t\t\t\t# enable debug/trace log support?\n\t\t\t\taddConfigureOption enable-debug-log no\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable async-redis support?\n\t\t\t\taddConfigureOption enable-async-redis yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable postgresql coroutine client support?\n\t\t\t\taddConfigureOption enable-coroutine-postgresql yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 2.1.2) -ge 0; then\n\t\t\t\t# enable debug/trace log support?\n\t\t\t\taddConfigureOption enable-swoole-debug no\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable async-redis support?\n\t\t\t\taddConfigureOption enable-async-redis yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\t\t# enable postgresql coroutine client support?\n\t\t\t\taddConfigureOption enable-coroutine-postgresql yes\n\t\t\telif test $(compareVersions \"$installRemoteModule_version\" 1.10.4) -ge 0 && test $(compareVersions \"$installRemoteModule_version\" 1.10.5) -le 0; then\n\t\t\t\t# enable debug/trace log support?\n\t\t\t\taddConfigureOption enable-swoole-debug no\n\t\t\t\t# enable sockets supports?\n\t\t\t\taddConfigureOption enable-sockets $installRemoteModule_sockets\n\t\t\t\t# enable openssl support?\n\t\t\t\taddConfigureOption enable-openssl $installRemoteModule_openssl\n\t\t\t\t# enable http2 support?\n\t\t\t\taddConfigureOption enable-http2 yes\n\t\t\t\t# enable async-redis support?\n\t\t\t\taddConfigureOption enable-async-redis yes\n\t\t\t\t# enable mysqlnd support?\n\t\t\t\taddConfigureOption enable-mysqlnd yes\n\t\t\tfi\n\t\t\t;;\n\t\ttdlib)\n\t\t\tif ! test -f /usr/lib/libphpcpp.so || ! test -f /usr/include/phpcpp.h; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tcd \"$(getPackageSource https://codeload.github.com/CopernicaMarketingSoftware/PHP-CPP/tar.gz/v2.1.4)\"\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tcd \"$(getPackageSource https://codeload.github.com/CopernicaMarketingSoftware/PHP-CPP/tar.gz/v2.2.0)\"\n\t\t\t\telse\n\t\t\t\t\tcd \"$(getPackageSource https://codeload.github.com/CopernicaMarketingSoftware/PHP-CPP/tar.gz/444d1f90cf6b7f3cb5178fa0d0b5ab441b0389d0)\"\n\t\t\t\tfi\n\t\t\t\tmake -j$(getProcessorCount)\n\t\t\t\tmake install\n\t\t\t\tcd - >/dev/null\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_path\"; then\n\t\t\t\tinstallRemoteModule_tmp=\"$(mktemp -p /tmp/src -d)\"\n\t\t\t\tgit clone --depth=1 --recurse-submodules https://github.com/yaroslavche/phptdlib.git \"$installRemoteModule_tmp\"\n\t\t\t\tmkdir \"$installRemoteModule_tmp/build\"\n\t\t\t\tcd \"$installRemoteModule_tmp/build\"\n\t\t\t\tcmake -D USE_SHARED_PHPCPP:BOOL=ON ..\n\t\t\t\tmake\n\t\t\t\tmake install\n\t\t\t\tcd - >/dev/null\n\t\t\t\trm \"$PHP_INI_DIR/conf.d/tdlib.ini\"\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\ttensor)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 703; then\n\t\t\t\t\tinstallRemoteModule_version=2.2.3\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif test $DISTRO_MAJMIN_VERSION -ge 315 && test $DISTRO_MAJMIN_VERSION -le 317; then\n\t\t\t\t\t\tif test -e /usr/lib/liblapacke.so.3 && ! test -e /usr/lib/liblapacke.so; then\n\t\t\t\t\t\t\tln -s /usr/lib/liblapacke.so.3 /usr/lib/liblapacke.so\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\ttideways)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tcase $(uname -m) in\n\t\t\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\t\t\tinstallRemoteModule_architecture=alpine-arm64\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinstallRemoteModule_architecture=alpine-x86_64\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\tdebian)\n\t\t\t\t\tcase $(uname -m) in\n\t\t\t\t\t\taarch64 | arm64 | armv8)\n\t\t\t\t\t\t\tinstallRemoteModule_architecture=arm64\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinstallRemoteModule_architecture=x86_64\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tinstallRemoteModule_url=\"$(curl -sSLf -o - https://tideways.com/profiler/downloads | grep -Eo \"\\\"[^\\\"]+/tideways-php-([0-9]+\\.[0-9]+\\.[0-9]+)-$installRemoteModule_architecture.tar.gz\\\"\" | cut -d'\"' -f2)\"\n\t\t\tif test -z \"$installRemoteModule_url\"; then\n\t\t\t\techo 'Failed to find the tideways tarball to be downloaded'\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tprintf 'Downloading tideways from %s\\n' \"$installRemoteModule_url\"\n\t\t\tinstallRemoteModule_src=\"$(getPackageSource $installRemoteModule_url)\"\n\t\t\tif test -d \"$installRemoteModule_src/dist\"; then\n\t\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src/dist\"\n\t\t\tfi\n\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src/tideways-php\"\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src-alpine\"\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src-$PHP_MAJDOTMIN_VERSION\"\n\t\t\tif test $PHP_THREADSAFE -eq 1; then\n\t\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src-zts\"\n\t\t\tfi\n\t\t\tinstallRemoteModule_src=\"$installRemoteModule_src.so\"\n\t\t\tif ! test -f \"$installRemoteModule_src\"; then\n\t\t\t\techo 'tideways does not support the current environment' >&2\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tmv \"$installRemoteModule_src\" $(getPHPExtensionsDir)/tideways.so\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\tuopz)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.7\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=5.0.2\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 740; then\n\t\t\t\t\tinstallRemoteModule_version=6.1.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tuploadprogress)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=1.1.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tuuid)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.0.5\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tuv)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 800; then\n\t\t\t\t\tinstallRemoteModule_version=0.2.4\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=beta\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tvld)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -lt 700; then\n\t\t\t\t\tinstallRemoteModule_version=0.14.0\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=beta\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\twikidiff2)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif ! isLibDatrieInstalled; then\n\t\t\t\t\t\tinstallLibDatrie\n\t\t\t\t\tfi\n\t\t\t\t\tif ! isLibThaiInstalled; then\n\t\t\t\t\t\tinstallLibThai\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 702; then\n\t\t\t\t\tinstallRemoteModule_version=1.13.0\n\t\t\t\telse\n\t\t\t\t\tinstallRemoteModule_version=\"$(git -c versionsort.suffix=- ls-remote --tags --refs --quiet --exit-code --sort=version:refname https://github.com/wikimedia/mediawiki-php-wikidiff2.git 'refs/tags/*.*.*' | tail -1 | cut -d/ -f3)\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tinstallRemoteModule_src=\"$(getPackageSource \"https://codeload.github.com/wikimedia/mediawiki-php-wikidiff2/tar.gz/refs/tags/$installRemoteModule_version\")\"\n\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\tphpize\n\t\t\t./configure\n\t\t\tmake -j$(getProcessorCount)\n\t\t\tmake install\n\t\t\tcd - >/dev/null\n\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\t;;\n\t\txdebug)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 500; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.5\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 503; then\n\t\t\t\t\tinstallRemoteModule_version=2.2.7\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 504; then\n\t\t\t\t\tinstallRemoteModule_version=2.4.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=2.5.5\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.6.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 701; then\n\t\t\t\t\tinstallRemoteModule_version=2.9.8\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 704; then\n\t\t\t\t\tinstallRemoteModule_version=3.1.6\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\txdiff)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.5.2\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif ! test -f /usr/local/lib/libxdiff.* && ! test -f /usr/lib/libxdiff.* && ! test -f /usr/lib/x86_64*/libxdiff.*; then\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/assets/resources/libxdiff-0.23.tar.gz)\"\n\t\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\t\t./configure --disable-shared --disable-dependency-tracking --with-pic\n\t\t\t\tmake -j$(getProcessorCount)\n\t\t\t\tmake install\n\t\t\t\tcd - >/dev/null\n\t\t\tfi\n\t\t\t;;\n\t\txhprof)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.9.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\txlswriter)\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 1.2.7) -ge 0; then\n\t\t\t\t# enable reader supports?\n\t\t\t\taddConfigureOption enable-reader yes\n\t\t\tfi\n\t\t\t;;\n\t\txmlrpc)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_version=beta\n\t\t\tfi\n\t\t\t;;\n\t\tyac)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.9.2\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 2.2.0) -ge 0; then\n\t\t\t\t# Enable igbinary serializer support\n\t\t\t\tif php --ri igbinary >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-igbinary yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-igbinary no\n\t\t\t\tfi\n\t\t\t\t# Enable json serializer support\n\t\t\t\tif php --ri json >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-json yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-json no\n\t\t\t\tfi\n\t\t\t\t# Enable msgpack serializer support\n\t\t\t\tif php --ri msgpack >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-msgpack yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-msgpack no\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tyaml)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.3.1\n\t\t\t\telif test $PHP_MAJMIN_VERSION -le 700; then\n\t\t\t\t\tinstallRemoteModule_version=2.0.4\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tyar)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=1.2.5\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tfi\n\t\t\tif test -z \"$installRemoteModule_version\" || test $(compareVersions \"$installRemoteModule_version\" 1.2.4) -ge 0; then\n\t\t\t\t# Enable Msgpack Supports\n\t\t\t\tif php --ri msgpack >/dev/null 2>/dev/null; then\n\t\t\t\t\taddConfigureOption enable-msgpack yes\n\t\t\t\telse\n\t\t\t\t\taddConfigureOption enable-msgpack no\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\t\tzmq)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://github.com/zeromq/php-zmq/tarball/master)\"\n\t\t\t\tcd \"$installRemoteModule_src\"\n\t\t\t\tphpize\n\t\t\t\t./configure\n\t\t\t\tmake -j$(getProcessorCount)\n\t\t\t\tmake install\n\t\t\t\tcd - >/dev/null\n\t\t\t\tinstallRemoteModule_manuallyInstalled=1\n\t\t\tfi\n\t\t\t;;\n\t\tzookeeper)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.5.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tinstallRemoteModule_version=\"$(resolvePeclStabilityVersion \"$installRemoteModule_module\" \"$installRemoteModule_version\")\"\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\tif ! test -f /usr/local/include/zookeeper/zookeeper.h; then\n\t\t\t\t\t\tif test $(compareVersions \"$installRemoteModule_version\" 1.0.0) -lt 0; then\n\t\t\t\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource http://archive.apache.org/dist/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9.tar.gz)\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinstallRemoteModule_tmp=\"$(curl -sSLf https://downloads.apache.org/zookeeper/stable | sed -E 's/[\"<>]/\\n/g' | grep -E '^(apache-)?zookeeper-[0-9]+\\.[0-9]+\\.[0-9]+\\.(tar\\.gz|tgz)$' | head -n1)\"\n\t\t\t\t\t\t\tif test -z \"$installRemoteModule_tmp\"; then\n\t\t\t\t\t\t\t\techo 'Failed to detect the zookeeper library URL' >&2\n\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tinstallRemoteModule_src=\"$(getPackageSource https://downloads.apache.org/zookeeper/stable/$installRemoteModule_tmp)\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tcd -- \"$installRemoteModule_src\"\n\t\t\t\t\t\tif test -d ~/.m2; then\n\t\t\t\t\t\t\tinstallRemoteModule_delm2=n\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tinstallRemoteModule_delm2=y\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tmvn -pl zookeeper-jute compile\n\t\t\t\t\t\tcd - >/dev/null\n\t\t\t\t\t\tcd -- \"$installRemoteModule_src/zookeeper-client/zookeeper-client-c\"\n\t\t\t\t\t\tautoreconf -if\n\t\t\t\t\t\t./configure --without-cppunit\n\t\t\t\t\t\tmake -j$(getProcessorCount) CFLAGS='-Wno-stringop-truncation -Wno-format-overflow'\n\t\t\t\t\t\tmake install\n\t\t\t\t\t\tcd - >/dev/null\n\t\t\t\t\t\tif test $installRemoteModule_delm2 = y; then\n\t\t\t\t\t\t\trm -rf ~/.m2\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\t;;\n\t\tzstd)\n\t\t\tif test -z \"$installRemoteModule_version\"; then\n\t\t\t\tif test $PHP_MAJMIN_VERSION -le 506; then\n\t\t\t\t\tinstallRemoteModule_version=0.11.0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t;;\n\tesac\n\tif test $installRemoteModule_manuallyInstalled -eq 0; then\n\t\tif test -n \"$installRemoteModule_path\"; then\n\t\t\tprintf '  (installing version %s from %s)\\n' \"$installRemoteModule_version\" \"$installRemoteModule_path\"\n\t\telif test -n \"$installRemoteModule_version\"; then\n\t\t\tprintf '  (installing version %s)\\n' \"$installRemoteModule_version\"\n\t\tfi\n\t\tinstallPeclPackage \"$installRemoteModule_module\" \"$installRemoteModule_version\" \"$installRemoteModule_cppflags\" \"$installRemoteModule_path\"\n\tfi\n\tpostProcessModule \"$installRemoteModule_module\"\n\tif test $installRemoteModule_manuallyInstalled -lt 2; then\n\t\tcase \"${IPE_SKIP_CHECK:-}\" in\n\t\t\t1 | y* | Y*) ;;\n\t\t\t*)\n\t\t\t\tcheckModuleWorking \"$installRemoteModule_module\" \"$installRemoteModule_ini_basename\" \"$installRemoteModule_ini_extra\"\n\t\t\t\t;;\n\t\tesac\n\t\tenablePhpExtension \"$installRemoteModule_module\" \"$installRemoteModule_ini_basename\" \"$installRemoteModule_ini_extra\"\n\tfi\n}\n\n# Check if a module/helper may be installed using the pecl archive\n#\n# Arguments:\n#   $1: the name of the module\n#\n# Return:\n#   0: true\n#   1: false\nmoduleMayUsePecl() {\n\tcase \"$1\" in\n\t\t@composer | @fix_letsencrypt)\n\t\t\treturn 1\n\t\t\t;;\n\t\tblackfire | geos | ioncube_loader | snuffleupagus | sourceguardian | spx | tdlib | tideways)\n\t\t\treturn 1\n\t\t\t;;\n\tesac\n\tif test -n \"$(getModuleSourceCodePath \"$1\")\"; then\n\t\treturn 1\n\tfi\n\tif stringInList \"$1\" \"$BUNDLED_MODULES\"; then\n\t\treturn 1\n\tfi\n\treturn 0\n}\n\n# Configure the PECL package installer\n#\n# Updates:\n#   PHP_MODULES_TO_INSTALL\n# Sets:\n#   USE_PICKLE 0: no, 1: yes (already downloaded), 2: yes (build it from source)\nconfigureInstaller() {\n\tUSE_PICKLE=0\n\tif ! which pecl >/dev/null; then\n\t\tfor PHP_MODULE_TO_INSTALL in $PHP_MODULES_TO_INSTALL; do\n\t\t\tif ! moduleMayUsePecl \"$PHP_MODULE_TO_INSTALL\"; then\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\tif false && anyStringInList '' \"$PHP_MODULES_TO_INSTALL\"; then\n\t\t\t\tUSE_PICKLE=2\n\t\t\telse\n\t\t\t\tcurl -sSLf https://github.com/FriendsOfPHP/pickle/releases/latest/download/pickle.phar -o /tmp/pickle\n\t\t\t\tchmod +x /tmp/pickle\n\t\t\t\tUSE_PICKLE=1\n\t\t\tfi\n\t\t\tbreak\n\t\tdone\n\tfi\n\tif test $USE_PICKLE -eq 0; then\n\t\tif test -z \"$(pear config-get http_proxy)\"; then\n\t\t\tif test -n \"${http_proxy:-}\"; then\n\t\t\t\tpear config-set http_proxy \"$http_proxy\" || true\n\t\t\telif test -n \"${HTTP_PROXY:-}\"; then\n\t\t\t\tpear config-set http_proxy \"$HTTP_PROXY\" || true\n\t\t\tfi\n\t\tfi\n\t\tpecl channel-update pecl.php.net || true\n\tfi\n}\n\nbuildPickle() {\n\tprintf '### BUILDING PICKLE ###\\n'\n\tbuildPickle_tempDir=\"$(mktemp -p /tmp/src -d)\"\n\tcd -- \"$buildPickle_tempDir\"\n\tprintf 'Downloading... '\n\tgit clone --quiet --depth 1 https://github.com/FriendsOfPHP/pickle.git .\n\tgit tag 0.7.0\n\tprintf 'done.\\n'\n\tprintf 'Installing composer... '\n\tactuallyInstallComposer . composer '--1 --quiet'\n\tprintf 'done.\\n'\n\tprintf 'Installing composer dependencies... '\n\t./composer install --no-dev --no-progress --no-suggest --optimize-autoloader --ignore-platform-reqs --quiet --no-cache\n\tprintf 'done.\\n'\n\tprintf 'Building... '\n\tphp -d phar.readonly=0 box.phar build\n\tmv pickle.phar /tmp/pickle\n\tprintf 'done.\\n'\n\tcd - >/dev/null\n}\n\n# Add a configure option for the pecl/pickle install command\n#\n# Arguments:\n#   $1: the option name\n#   $2: the option value\naddConfigureOption() {\n\tif test $USE_PICKLE -eq 0; then\n\t\tprintf -- '%s\\n' \"$2\" >>\"$CONFIGURE_FILE\"\n\telse\n\t\tprintf -- '--%s=%s\\n' \"$1\" \"$2\" >>\"$CONFIGURE_FILE\"\n\tfi\n}\n\n# Actually installs a PECL package\n#\n# Arguments:\n#   $1: the package to be installed\n#   $2: the package version to be installed (optional)\n#   $3: the value of the CPPFLAGS variable (optional)\n#   $4: the path of the local package to be installed (optional, downloaded from PECL if omitted/empty)\ninstallPeclPackage() {\n\tif ! test -f \"$CONFIGURE_FILE\"; then\n\t\tprintf '\\n' >\"$CONFIGURE_FILE\"\n\tfi\n\tinstallPeclPackage_name=\"$(getPeclModuleName \"$1\")\"\n\tif test -z \"${2:-}\"; then\n\t\tinstallPeclPackage_fullname=\"$installPeclPackage_name\"\n\telse\n\t\tinstallPeclPackage_fullname=\"$installPeclPackage_name-$2\"\n\tfi\n\tinstallPeclPackage_path=\"${4:-}\"\n\tif test -z \"$installPeclPackage_path\"; then\n\t\tinstallPeclPackage_path=\"$installPeclPackage_fullname\"\n\tfi\n\tif test $USE_PICKLE -eq 0; then\n\t\tif test -n \"${4:-}\"; then\n\t\t\tif test -f \"$installPeclPackage_path/package2.xml\"; then\n\t\t\t\tinstallPeclPackage_path=\"$installPeclPackage_path/package2.xml\"\n\t\t\telse\n\t\t\t\tinstallPeclPackage_path=\"$installPeclPackage_path/package.xml\"\n\t\t\tfi\n\t\tfi\n\t\tcat \"$CONFIGURE_FILE\" | MAKE=\"make -j$(getCompilationProcessorCount $1)\" CPPFLAGS=\"${3:-}\" pecl install \"$installPeclPackage_path\"\n\telse\n\t\tMAKEFLAGS=\"-j$(getCompilationProcessorCount $1)\" CPPFLAGS=\"${3:-}\" /tmp/pickle install --tmp-dir=/tmp/pickle.tmp --no-interaction --version-override='' --with-configure-options \"$CONFIGURE_FILE\" -- \"$installPeclPackage_path\"\n\tfi\n}\n\n# Check if a string is in a list of space-separated string\n#\n# Arguments:\n#   $1: the string to be checked\n#   $2: the string list\n#\n# Return:\n#   0 (true): if the string is in the list\n#   1 (false): if the string is not in the list\nstringInList() {\n\tfor stringInList_listItem in $2; do\n\t\tif test \"$1\" = \"$stringInList_listItem\"; then\n\t\t\treturn 0\n\t\tfi\n\tdone\n\treturn 1\n}\n\n# Check if at least one item in a list is in another list\n#\n# Arguments:\n#   $1: the space-separated list of items to be searched\n#   $2: the space-separated list of reference items\n#\n# Return:\n#   0 (true): at least one of the items in $1 is in $2\n#   1 (false): otherwise\nanyStringInList() {\n\tfor anyStringInList_item in $1; do\n\t\tif stringInList \"$anyStringInList_item\" \"$2\"; then\n\t\t\treturn 0\n\t\tfi\n\tdone\n\treturn 1\n}\n\n# Remove a word from a space-separated list\n#\n# Arguments:\n#   $1: the word to be removed\n#   $2: the string list\n#\n# Output:\n#   The list without the word\nremoveStringFromList() {\n\tremoveStringFromList_result=''\n\tfor removeStringFromList_listItem in $2; do\n\t\tif test \"$1\" != \"$removeStringFromList_listItem\"; then\n\t\t\tif test -z \"$removeStringFromList_result\"; then\n\t\t\t\tremoveStringFromList_result=\"$removeStringFromList_listItem\"\n\t\t\telse\n\t\t\t\tremoveStringFromList_result=\"$removeStringFromList_result $removeStringFromList_listItem\"\n\t\t\tfi\n\t\tfi\n\tdone\n\tprintf '%s' \"$removeStringFromList_result\"\n}\n\n# Invoke apt-get update\ninvokeAptGetUpdate() {\n\tif test -n \"${IPE_APTGETUPDATE_ALREADY:-}\"; then\n\t\tapt-get update -q\n\t\treturn\n\tfi\n\tIPE_APTGETUPDATE_ALREADY=y\n\tif grep -q 'VERSION=\"8 (jessie)\"' /etc/os-release; then\n\t\tinvokeAptGetUpdate_fixdistro=jessie\n\telif grep -q 'VERSION=\"9 (stretch)\"' /etc/os-release; then\n\t\tinvokeAptGetUpdate_fixdistro=stretch\n\telse\n\t\tinvokeAptGetUpdate\n\t\treturn\n\tfi\n\t# See https://www.debian.org/distrib/archive.en.html for a list of mirrors\n\tif test -z \"${IPE_DEB_ARCHIVE:-}\"; then\n\t\tIPE_DEB_ARCHIVE=http://archive.kernel.org/debian-archive\n\tfi\n\tif test -z \"${IPE_DEB_ARCHIVE_SECURITY:-}\"; then\n\t\tIPE_DEB_ARCHIVE_SECURITY=http://archive.kernel.org/debian-archive/debian-security\n\tfi\n\tsed -ri \"s;^(\\s*deb\\s+http://(httpredir|deb).debian.org/debian\\s+$invokeAptGetUpdate_fixdistro-updates\\b.*);#\\1;\" /etc/apt/sources.list\n\tsed -ri \"s;^(\\s*deb\\s+)http://(httpredir|deb).debian.org;\\1$IPE_DEB_ARCHIVE;\" /etc/apt/sources.list\n\tsed -ri \"s;^(\\s*deb\\s+)http://security.debian.org/debian-security;\\1$IPE_DEB_ARCHIVE_SECURITY;\" /etc/apt/sources.list\n\tsed -ri \"s;^(\\s*deb\\s+)http://security.debian.org;\\1$IPE_DEB_ARCHIVE_SECURITY;\" /etc/apt/sources.list\n\tinvokeAptGetUpdate_tmp=\"$(mktemp)\"\n\tapt-get update -q 2>\"$invokeAptGetUpdate_tmp\"\n\tif test -s \"$invokeAptGetUpdate_tmp\"; then\n\t\tcat \"$invokeAptGetUpdate_tmp\" >&2\n\t\tif grep -qE ' KEYEXPIRED [0-9]' \"$invokeAptGetUpdate_tmp\"; then\n\t\t\techo '############' >&2\n\t\t\techo '# WARNING! #' >&2\n\t\t\techo '############' >&2\n\t\t\techo 'apt packages will be installed without checking authenticity!' >&2\n\t\t\tprintf 'APT::Get::AllowUnauthenticated \"true\";\\n' >>/etc/apt/apt.conf.d/99unauthenticated\n\t\tfi\n\tfi\n\trm \"$invokeAptGetUpdate_tmp\"\n}\n\n# Fix the Let's Encrypt CA certificates on old distros\nfixLetsEncrypt() {\n\tprintf '### FIXING LETS ENCRYPT CA CERTIFICATES ###\\n'\n\tcase \"$DISTRO_VERSION\" in\n\t\talpine@3.7 | alpine@3.8)\n\t\t\tprintf -- '- old Alpine Linux detected: we should fix the certificates\\n'\n\t\t\t;;\n\t\tdebian@8 | debian@9)\n\t\t\tprintf -- '- old Debian detected: we should fix the certificates\\n'\n\t\t\tif ! grep -q 'mozilla/ISRG_Root_X1.crt' /etc/ca-certificates.conf && grep -q 'mozilla/DST_Root_CA_X3.crt' /etc/ca-certificates.conf; then\n\t\t\t\tprintf -- '- old ca-certificates package detected\\n'\n\t\t\t\tfixCACerts_mustUpdate=1\n\t\t\t\tif test -d /var/lib/apt/lists; then\n\t\t\t\t\tfor fixCACerts_item in $(ls -1 /var/lib/apt/lists); do\n\t\t\t\t\t\tcase \"$fixCACerts_item\" in\n\t\t\t\t\t\t\tpartial | lock) ;;\n\t\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t\tfixCACerts_mustUpdate=0\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\t\tif test $fixCACerts_mustUpdate -eq 1; then\n\t\t\t\t\tprintf -- '- refreshing the APT package list\\n'\n\t\t\t\t\tinvokeAptGetUpdate\n\t\t\t\tfi\n\t\t\t\tprintf -- '- installing newer ca-certificates package\\n'\n\t\t\t\tapt-get install -qqy --no-install-recommends ca-certificates\n\t\t\tfi\n\t\t\t;;\n\t\t*)\n\t\t\tprintf -- '- patch not required in this distro version\\n'\n\t\t\treturn\n\t\t\t;;\n\tesac\n\tif grep -Eq '^mozilla/ISRG_Root_X1\\.crt$' /etc/ca-certificates.conf && grep -Eq '^mozilla/DST_Root_CA_X3\\.crt$' /etc/ca-certificates.conf; then\n\t\tprintf -- '- disabling the DST_Root_CA_X3 certificate\\n'\n\t\tsed -i '/^mozilla\\/DST_Root_CA_X3/s/^/!/' /etc/ca-certificates.conf\n\t\tprintf -- '- refreshing the certificates\\n'\n\t\tupdate-ca-certificates -f\n\telse\n\t\tprintf -- '- DST_Root_CA_X3 certificate not found or already disabled\\n'\n\tfi\n}\n\n# Cleanup everything at the end of the execution\ncleanup() {\n\tif test \"${IPE_UNINSTALL_CARGO:-}\" = y; then\n\t\t. \"$HOME/.cargo/env\"\n\t\trustup self uninstall -y\n\tfi\n\tif test -n \"$UNNEEDED_PACKAGE_LINKS\"; then\n\t\tprintf '### REMOVING UNNEEDED PACKAGE LINKS ###\\n'\n\t\tfor cleanup_link in $UNNEEDED_PACKAGE_LINKS; do\n\t\t\tif test -L \"$cleanup_link\"; then\n\t\t\t\trm -f \"$cleanup_link\"\n\t\t\tfi\n\t\tdone\n\tfi\n\tcase \"$DISTRO\" in\n\t\talpine)\n\t\t\tif stringInList icu-libs \"${PACKAGES_PERSISTENT_NEW:-}\" && stringInList icu-data-en \"${PACKAGES_PERSISTENT_NEW:-}\"; then\n\t\t\t\tapk del icu-data-en >/dev/null 2>&1 || true\n\t\t\tfi\n\t\t\tif test -n \"$PACKAGES_VOLATILE\"; then\n\t\t\t\tprintf '### REMOVING UNNEEDED PACKAGES ###\\n'\n\t\t\t\tapk del --purge $PACKAGES_VOLATILE\n\t\t\tfi\n\t\t\t;;\n\t\tdebian)\n\t\t\tif test -n \"$PACKAGES_VOLATILE\"; then\n\t\t\t\tprintf '### REMOVING UNNEEDED PACKAGES ###\\n'\n\t\t\t\tapt-get remove --purge -y $PACKAGES_VOLATILE\n\t\t\tfi\n\t\t\tif test -n \"$PACKAGES_PREVIOUS\"; then\n\t\t\t\tprintf '### RESTORING PREVIOUSLY INSTALLED PACKAGES ###\\n'\n\t\t\t\tapt-get install -qqy --no-install-recommends --no-upgrade $PACKAGES_PREVIOUS\n\t\t\tfi\n\t\t\t;;\n\tesac\n\tdocker-php-source delete\n\trm -rf /tmp/src\n\trm -rf /tmp/pickle\n\trm -rf /tmp/pickle.tmp\n\trm -rf \"$CONFIGURE_FILE\"\n\tcase \"${IPE_KEEP_SYSPKG_CACHE:-}\" in\n\t\t1 | y* | Y*) ;;\n\t\t*)\n\t\t\tcase \"$DISTRO\" in\n\t\t\t\talpine)\n\t\t\t\t\trm -rf /var/cache/apk/*\n\t\t\t\t\t;;\n\t\t\t\tdebian)\n\t\t\t\t\trm -rf /var/lib/apt/lists/*\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\trm -rf /tmp/pear\n\t\t\t;;\n\tesac\n}\n\nDEBIAN_FRONTEND=noninteractive\nexport DEBIAN_FRONTEND\nresetIFS\nmkdir -p /tmp/src\nmkdir -p /tmp/pickle.tmp\nIPE_ERRFLAG_FILE=\"$(mktemp -p /tmp/src)\"\nCONFIGURE_FILE=/tmp/configure-options\nIPE_APK_FLAGS=''\nsetDistro\ncase \"$DISTRO_VERSION\" in\n\tdebian@8)\n\t\tfixMaxOpenFiles || true\n\t\t;;\nesac\nsetPHPVersionVariables\nsetPHPPreinstalledModules\ncase \"$PHP_MAJMIN_VERSION\" in\n\t505 | 506 | 700 | 701 | 702 | 703 | 704 | 800 | 801 | 802 | 803 | 804) ;;\n\t*)\n\t\tprintf \"### ERROR: Unsupported PHP version: %s.%s ###\\n\" $((PHP_MAJMIN_VERSION / 100)) $((PHP_MAJMIN_VERSION % 100))\n\t\t;;\nesac\nUNNEEDED_PACKAGE_LINKS=''\nprocessCommandArguments \"$@\"\n\nif test -z \"$PHP_MODULES_TO_INSTALL\"; then\n\texit 0\nfi\n\nif stringInList @fix_letsencrypt \"$PHP_MODULES_TO_INSTALL\"; then\n\t# This must be the very first thing we do\n\tfixLetsEncrypt\nfi\n\nsortModulesToInstall\n\ndocker-php-source extract\nBUNDLED_MODULES=\"$(find /usr/src/php/ext -mindepth 2 -maxdepth 2 -type f -name 'config.m4' | xargs -n1 dirname | xargs -n1 basename | xargs)\"\nconfigureInstaller\n\nbuildRequiredPackageLists $PHP_MODULES_TO_INSTALL\nif test -n \"$PACKAGES_PERSISTENT_PRE\"; then\n\tmarkPreinstalledPackagesAsUsed\nfi\nif test -n \"$PACKAGES_PERSISTENT_NEW$PACKAGES_VOLATILE\"; then\n\tinstallRequiredPackages\nfi\nif test \"$PHP_MODULES_TO_INSTALL\" != '@composer'; then\n\tsetTargetTriplet\nfi\nif test $USE_PICKLE -gt 1; then\n\tbuildPickle\nfi\n\ncompileLibs\n\nfor PHP_MODULE_TO_INSTALL in $PHP_MODULES_TO_INSTALL; do\n\tcase \"$PHP_MODULE_TO_INSTALL\" in\n\t\t@fix_letsencrypt)\n\t\t\t# Already done: it must be the first thing we do\n\t\t\t;;\n\t\t@composer)\n\t\t\tinstallComposer\n\t\t\t;;\n\t\t*)\n\t\t\tif stringInList \"$PHP_MODULE_TO_INSTALL\" \"$BUNDLED_MODULES\"; then\n\t\t\t\tinstallBundledModule \"$PHP_MODULE_TO_INSTALL\"\n\t\t\telse\n\t\t\t\tinstallRemoteModule \"$PHP_MODULE_TO_INSTALL\"\n\t\t\tfi\n\t\t\t;;\n\tesac\ndone\ncleanup\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}