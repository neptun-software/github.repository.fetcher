{
  "metadata": {
    "timestamp": 1736568661297,
    "page": 741,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Steam-Headless/docker-steam-headless",
      "stars": 1298,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "config\ndevops\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "config\n"
        },
        {
          "name": "Dockerfile.arch",
          "type": "blob",
          "size": 15.07421875,
          "content": "# Steam Headless (Arch Linux)\n# (WIP) An Arch variant of the steam-headless image\n# It is curerently my intent to switch to arch as the main \n#   image base once SteamOS 3 is released (pending review)\n#\nFROM archlinux:latest\nLABEL maintainer=\"Josh.5 <jsunnex@gmail.com>\"\n\n# Update package repos\nRUN \\\n    echo \"**** Update package manager ****\" \\\n        && sed -i 's/^NoProgressBar/#NoProgressBar/g' /etc/pacman.conf \\\n        && echo -e \"[multilib]\\nInclude = /etc/pacman.d/mirrorlist\" >> /etc/pacman.conf \\\n    && \\\n    echo\n\n# Update locale\nRUN \\\n    echo \"**** Configure locals ****\" \\\n        && echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen \\\n        && locale-gen \\\n    && \\\n    echo\nENV \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Re-install certificates\nRUN \\\n    echo \"**** Install certificates ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            ca-certificates \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install core packages\nRUN \\\n    echo \"**** Install tools ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            base-devel \\\n            bash \\\n            bash-completion \\\n            curl \\\n            docbook-xml \\\n            docbook-xsl \\\n            fakeroot \\\n            p7zip \\\n            patch \\\n            git \\\n            jq \\\n            less \\\n            locate \\\n            man-db \\\n            nano \\\n            net-tools \\\n            pciutils \\\n            pkg-config \\\n            procps \\\n            psmisc \\\n            psutils \\\n            rsync \\\n            screen \\\n            sudo \\\n            unzip \\\n            vim \\\n            wget \\\n            xmlstarlet \\\n            xz \\\n    && \\\n    echo \"**** Install python ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            python \\\n            python-numpy \\\n            python-pip \\\n            python-setuptools \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Configure default user and set user env\nENV \\\n    PUID=99 \\\n    PGID=100 \\\n    UMASK=000 \\\n    USER=\"default\" \\\n    USER_PASSWORD=\"password\" \\\n    USER_HOME=\"/home/default\" \\\n    TZ=\"Pacific/Auckland\" \\\n    USER_LOCALES=\"en_US.UTF-8 UTF-8\"\nRUN \\\n    echo \"**** Configure default user '${USER}' ****\" \\\n        && mkdir -p \\\n            ${USER_HOME} \\\n        && useradd -d ${USER_HOME} -s /bin/bash ${USER} \\\n        && chown -R ${USER} \\\n            ${USER_HOME} \\\n        && echo \"${USER} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n    && \\\n    echo\n\n# Install yay\nRUN \\\n    echo \"**** Install Yay ****\" \\\n\t    && pacman -Sy \\\n\t    && su - default -c 'git clone https://aur.archlinux.org/yay.git /tmp/yay && cd /tmp/yay && makepkg --noconfirm --syncdeps --install' \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /home/default/.cache/yay \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n        && rm -rf /tmp/yay* \\\n    && \\\n    echo\n\n# Install supervisor\nRUN \\\n    echo \"**** Install supervisor ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            supervisor \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install mscorefonts\nRUN \\\n    echo \"**** Install ms fonts ****\" \\\n        && su - default -c \"yay -Syu --noconfirm --needed ttf-msfonts\" \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /home/default/.cache/yay \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n        && rm -rf /tmp/yay* \\\n    && \\\n    echo\n\n# Install X Server requirements\nENV \\\n    XORG_SOCKET_DIR=\"/tmp/.X11-unix\" \\\n    XDG_RUNTIME_DIR=\"/tmp/.X11-unix/run\" \\\n    XDG_SESSION_TYPE=\"x11\" \\\n    FORCE_X11_DUMMY_CONFIG=\"false\"\nRUN \\\n    echo \"**** Install X Server requirements ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            avahi \\\n            dbus \\\n            lib32-fontconfig \\\n            fuse2 \\\n            x11vnc \\\n            xorg \\\n            xorg-apps \\\n            xorg-font-util \\\n            xorg-fonts-misc \\\n            xorg-fonts-type1 \\\n            xorg-server \\\n            xorg-server-xephyr \\\n            xorg-server-xvfb \\\n            xorg-xauth \\\n            xorg-xbacklight \\\n            xorg-xhost \\\n            xorg-xinit \\\n            xorg-xinput \\\n            xorg-xkill \\\n            xorg-xprop \\\n            xorg-xrandr \\\n            xorg-xsetroot \\\n            xorg-xwininfo \\\n            xf86-input-evdev \\\n            xterm \\\n            gamescope \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install audio requirements\nENV \\\n    PULSE_SOCKET_DIR=\"/tmp/pulse\" \\\n    PULSE_SERVER=\"unix:/tmp/pulse/pulse-socket\"\nRUN \\\n    echo \"**** Install X Server requirements ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            alsa-utils \\\n            pavucontrol \\\n            pulseaudio \\\n            pulseaudio-alsa \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install desktop environment\n# TODO: Install equivelent of 'msttcorefonts' and 'fonts-vlgothic'\nRUN \\\n    echo \"**** Install desktop environment ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            gedit \\\n            xfce4 \\\n            xfce4-goodies \\\n            xfce4-terminal \\\n            ttf-liberation \\\n            xdg-user-dirs \\\n            xdg-utils \\\n            imagemagick \\\n    && \\\n    echo \"**** Install WoL Manager requirements ****\" \\\n            && pacman -Syu --noconfirm --needed \\\n            tcpdump \\\n            xprintidle \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Add support for flatpaks\nENV \\\n    XDG_DATA_DIRS=\"/home/default/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/\"\nRUN \\\n    echo \"**** Install flatpak support ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            flatpak \\\n            xdg-desktop-portal-gtk \\\n            gnome-software \\\n    && \\\n    echo \"**** Configure flatpak ****\" \\\n        && chmod u-s /usr/bin/bwrap \\\n        && flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo \\\n        && su - default -c \"flatpak remote-add --if-not-exists --user flathub https://flathub.org/repo/flathub.flatpakrepo\" \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t&& pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# TODO: Deprecate neko\n# Install Neko server\nCOPY --from=m1k1o/neko:base /usr/bin/neko /usr/bin/neko\nCOPY --from=m1k1o/neko:base /var/www /var/www\n\n# Install Web Frontend\nARG FRONTEND_VERSION=a8eb92f\nRUN \\\n    echo \"**** Fetch Web Frontend ****\" \\\n        && mkdir -p /opt \\\n        && cd /opt \\\n        && rm -rf /opt/frontend \\\n        && git clone https://github.com/Steam-Headless/frontend.git --branch master /opt/frontend \\\n        && cd /opt/frontend \\\n        && git checkout ${FRONTEND_VERSION} 2> /dev/null \\\n        && git submodule init \\\n        && git submodule update --depth 1 --recursive \\\n        && rm -rf /opt/frontend/.git \\\n    && \\\n    echo \"**** Configure Web Frontend ****\" \\\n        && echo '<!DOCTYPE html>' > /opt/frontend/index.html \\\n        && echo '<html><head><meta http-equiv=\"refresh\" content=\"0;url=./web/\"></head><body><p>If you are not redirected, <a href=\"./web/\">click here</a>.</p></body></html>' >> /opt/frontend/index.html \\\n        && chmod -R 755 /opt/frontend \\\n        && convert /opt/frontend/web/images/icons/novnc-ios-180.png -resize \"128x128\" /tmp/steam-headless.png \\\n        && xdg-icon-resource install --novendor --size 128 /tmp/steam-headless.png \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && rm -f /tmp/steam-headless.png\n\n# Install Websockify\nARG WEBSOCKETIFY_VERSION=0.11.0\nRUN \\\n    echo \"**** Fetch Websockify ****\" \\\n        && cd /tmp \\\n        && wget -O /tmp/websockify.tar.gz https://github.com/novnc/websockify/archive/v${WEBSOCKETIFY_VERSION}.tar.gz \\\n    && \\\n    echo \"**** Extract Websockify ****\" \\\n        && cd /tmp \\\n        && tar -xvf /tmp/websockify.tar.gz \\\n    && \\\n    echo \"**** Install Websockify to main ****\" \\\n        && cd /tmp/websockify-${WEBSOCKETIFY_VERSION} \\\n        && python3 ./setup.py install \\\n    && \\\n    echo \"**** Install Websockify to noVNC path ****\" \\\n        && cd /tmp \\\n        && mkdir -p /opt/noVNC/utils \\\n        && mv -v /tmp/websockify-${WEBSOCKETIFY_VERSION} /opt/noVNC/utils/websockify \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && rm -rf \\\n            /tmp/websockify-* \\\n            /tmp/websockify.tar.gz \\\n    && \\\n    echo\n\n# Setup browser audio streaming deps\nRUN \\\n    echo \"**** Install audio streaming deps ****\" \\\n        && pacman -Syu --noconfirm --needed \\\n            bzip2 \\\n            gst-libav \\\n            gst-plugins-bad \\\n            gst-plugins-base \\\n            gst-plugins-good \\\n            gst-plugins-ugly \\\n    && \\\n    #echo \"**** Fetch ucspi-tcp ****\" \\\n    #    && mkdir -p /tmp/ucspi-tcp-0.88 \\\n    #    && cd /tmp \\\n    #    #&& wget -O /tmp/ucspi-tcp.tar.gz https://github.com/trafficgate/ucspi-tcp/archive/refs/heads/master.tar.gz \\\n    #    && wget -O /tmp/ucspi-tcp.tar.gz http://cr.yp.to/ucspi-tcp/ucspi-tcp-0.88.tar.gz \\\n    #    && cd /tmp/ucspi-tcp-0.88 \\\n    #    && tar -xvf /tmp/ucspi-tcp.tar.gz --strip-components=1 \\\n    #&& \\\n    #echo \"**** Build and install ucspi-tcp ****\" \\\n    #    && wget -O /tmp/ucspi-tcp-0.88/ucspi-tcp-0.88.errno.patch https://git.alpinelinux.org/aports/plain/testing/ucspi-tcp/ucspi-tcp-0.88.errno.patch \\\n    #    && wget -O /tmp/ucspi-tcp-0.88/ucspi-tcp-0.88.a_record.patch https://git.alpinelinux.org/aports/plain/testing/ucspi-tcp/ucspi-tcp-0.88.a_record.patch \\\n    #    && patch -p1 --input=ucspi-tcp-0.88.errno.patch \\\n    #    && patch -p1 --input=ucspi-tcp-0.88.a_record.patch \\\n    #    && sed -i 's|^/usr/local|/usr|' /tmp/ucspi-tcp-0.88/conf-home \\\n    #    && make \\\n#\t    && for f in tcpserver tcprules tcprulescheck argv0 recordio tcpclient *\\@ tcpcat mconnect mconnect-io addcr delcr fixcrio rblsmtpd; do \\\n    #        cp $f /usr/bin/$f; \\\n    #    done \\\n    #&& \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Setup video streaming deps\nRUN \\\n    echo \"**** Install video streaming deps ****\" \\\n        && pacman -Syu --noconfirm --needed \\\n            libva \\\n            libva-mesa-driver \\\n            libva-intel-driver \\\n            libva-vdpau-driver \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install tools for monitoring hardware\nRUN \\\n    echo \"**** Install audio streaming deps ****\" \\\n        && pacman -Syu --noconfirm --needed \\\n            #cpu-x \\\n            htop \\\n            libva-utils \\\n            vdpauinfo \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install Sunshine\nRUN \\\n    echo \"**** Install stable sunshine ****\" \\\n        && su - default -c \"yay -Syu --noconfirm --needed miniupnpc sunshine-bin\" \\\n        && setcap cap_sys_admin+p $(readlink -f $(which sunshine)) \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /home/default/.cache/yay \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n        && rm -rf /tmp/yay* \\\n    && \\\n    echo\n\n# Install Firefox\nRUN \\\n    echo \"**** Install Firefox ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            firefox \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Install Steam\nRUN \\\n    echo \"**** Install Steam ****\" \\\n\t    && pacman -Syu --noconfirm --needed \\\n            steam \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n    && \\\n    echo\n\n# Various other tools\nARG DUMB_INIT_VERSION=1.2.5\nARG DUMB_UDEV_VERSION=64d1427\nRUN \\\n    echo \"**** Install dumb-init ****\" \\\n        && wget --no-check-certificate --no-cookies --quiet \\\n            -O /usr/bin/dumb-init \\\n            https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_x86_64 \\\n        && chmod +x /usr/bin/dumb-init \\\n    && \\\n    echo \"**** Install dumb-udev ****\" \\\n        && python3 -m pip install \\\n            --break-system-packages \\\n            --pre \\\n            --upgrade \\\n            --no-cache-dir \\\n            git+https://github.com/Steam-Headless/dumb-udev.git@${DUMB_UDEV_VERSION} \\\n    && \\\n    echo\n\n# Install Protonup replacement\nRUN \\\n    echo \"**** Install PorotonUP ****\" \\\n        && su - default -c \"yay -Sy --noconfirm --needed --overwrite \\\"/usr/bin/normalizer\\\" protonup-qt\" \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n\t    && pacman -Scc --noconfirm \\\n        && rm -fr /home/default/.cache/yay \\\n        && rm -fr /var/lib/pacman/sync/* \\\n        && rm -fr /var/cache/pacman/pkg/* \\\n        && rm -rf /tmp/yay* \\\n    && \\\n    echo\n\n# Add FS overlay\nCOPY overlay /\n\n# Tweaks as flatpak issue isn't sorted\nRUN \\\n    echo \"**** Tweaks for Arch ****\" \\\n        && sed -i d /usr/bin/install_firefox.sh \\\n        && sed -i d /usr/bin/install_protonup.sh \\\n        && sed -i d /templates/home_directory_template/.local/share/xfce4/helpers/custom-WebBrowser.desktop \\\n    && \\\n    echo\n\n# Set display environment variables\nENV \\\n    DISPLAY_CDEPTH=\"24\" \\\n    DISPLAY_REFRESH=\"120\" \\\n    DISPLAY_SIZEH=\"900\" \\\n    DISPLAY_SIZEW=\"1600\" \\\n    DISPLAY_VIDEO_PORT=\"DFP\" \\\n    DISPLAY=\":55\"\nENV \\\n    NVIDIA_DRIVER_CAPABILITIES=\"all\" \\\n    NVIDIA_VISIBLE_DEVICES=\"all\"\n\n# Set container configuration environment variables\n# APPIMAGE_EXTRACT_AND_RUN=\"0\" \nENV \\\n    MODE=\"primary\" \\\n    WEB_UI_MODE=\"vnc\" \\\n    ENABLE_VNC_AUDIO=\"true\" \\\n    NEKO_PASSWORD=neko \\\n    NEKO_PASSWORD_ADMIN=admin \\\n    ENABLE_STEAM=\"true\" \\\n    STEAM_ARGS=\"-silent\" \\\n    ENABLE_SUNSHINE=\"true\" \\\n    ENABLE_EVDEV_INPUTS=\"true\" \\\n    ENABLE_WOL_POWER_MANAGER=\"false\" \n\n# Configure required ports\nENV \\\n    PORT_NOVNC_WEB=\"8083\" \\\n    NEKO_NAT1TO1=\"\"\n\n# Expose the required ports\nEXPOSE 8083\n\n# Set entrypoint\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
        },
        {
          "name": "Dockerfile.debian",
          "type": "blob",
          "size": 17.6064453125,
          "content": "FROM debian:bookworm-slim\nLABEL maintainer=\"Josh.5 <jsunnex@gmail.com>\"\n\n# Update package repos\nARG DEBIAN_FRONTEND=noninteractive\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && sed -i '/^Components: main/ s/$/ contrib non-free/' /etc/apt/sources.list.d/debian.sources \\\n    && \\\n    echo\n\n# Update locale\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install and configure locals ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            locales \\\n        && echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen \\\n        && locale-gen \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\nENV \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Re-install certificates\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install certificates ****\" \\\n        && apt-get install -y --reinstall \\\n            ca-certificates \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install core packages\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install tools ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            bash \\\n            bash-completion \\\n            curl \\\n            git \\\n            jq \\\n            less \\\n            man-db \\\n            mlocate \\\n            nano \\\n            net-tools \\\n            p7zip-full \\\n            patch \\\n            pciutils \\\n            pkg-config \\\n            procps \\\n            psmisc \\\n            psutils \\\n            rsync \\\n            screen \\\n            sudo \\\n            unzip \\\n            vim \\\n            wget \\\n            xmlstarlet \\\n            xz-utils \\\n    && \\\n    echo \"**** Install python ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            python3 \\\n            python3-numpy \\\n            python3-pip \\\n            python3-setuptools \\\n            python3-venv \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Configure default user and set user env\nENV \\\n    PUID=99 \\\n    PGID=100 \\\n    UMASK=000 \\\n    USER=\"default\" \\\n    USER_PASSWORD=\"password\" \\\n    USER_HOME=\"/home/default\" \\\n    TZ=\"Pacific/Auckland\" \\\n    USER_LOCALES=\"en_US.UTF-8 UTF-8\"\nRUN \\\n    echo \"**** Configure default user '${USER}' ****\" \\\n        && mkdir -p \\\n            ${USER_HOME} \\\n        && useradd -d ${USER_HOME} -s /bin/bash ${USER} \\\n        && chown -R ${USER} \\\n            ${USER_HOME} \\\n        && echo \"${USER} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers \\\n    && \\\n    echo\n\n# Install supervisor\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install supervisor ****\" \\\n        && apt-get install -y \\\n            supervisor \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install X Server requirements\n# TODO: Refine this list of packages to only what is required.\nENV \\\n    XORG_SOCKET_DIR=\"/tmp/.X11-unix\" \\\n    XDG_RUNTIME_DIR=\"/tmp/.X11-unix/run\" \\\n    XDG_SESSION_TYPE=\"x11\" \\\n    FORCE_X11_DUMMY_CONFIG=\"false\"\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install X Server requirements ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            avahi-utils \\\n            dbus-x11 \\\n            libxcomposite-dev \\\n            libxcursor1 \\\n            wmctrl \\\n            libfuse2 \\\n            x11-utils \\\n            x11-xfs-utils \\\n            x11-xkb-utils \\\n            x11-xserver-utils \\\n            x11vnc \\\n            xauth \\\n            xbindkeys \\\n            xclip \\\n            xcvt \\\n            xdotool \\\n            xfishtank \\\n            xfonts-base \\\n            xinit \\\n            xorg \\\n            xserver-xorg-core \\\n            xserver-xorg-input-evdev \\\n            xserver-xorg-input-libinput \\\n            xserver-xorg-legacy \\\n            xserver-xorg-video-all \\\n            xserver-xorg-video-dummy \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install audio requirements\nENV \\\n    PULSE_SOCKET_DIR=\"/tmp/pulse\" \\\n    PULSE_SERVER=\"unix:/tmp/pulse/pulse-socket\"\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install pulseaudio requirements ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            pulseaudio \\\n            alsa-utils \\\n            libasound2 \\\n            libasound2-plugins \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install desktop environment\n# TODO: Specify all needed packages and add '--no-install-recommends'\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install desktop requirements ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            libdbus-1-3 \\\n            libegl1 \\\n            libgtk-3-0 \\\n            libgtk2.0-0 \\\n            libsdl2-2.0-0 \\\n    && \\\n    echo \"**** Install desktop environment ****\" \\\n        && apt-get install -y \\\n            fonts-vlgothic \\\n            gedit \\\n            imagemagick \\\n            msttcorefonts \\\n            xdg-utils \\\n            xfce4 \\\n            xfce4-terminal \\\n        # Delete these as they are not needed at all\n        && rm -f \\\n            /usr/share/applications/software-properties-drivers.desktop \\\n            /usr/share/applications/xfce4-about.desktop \\\n            /usr/share/applications/xfce4-session-logout.desktop \\\n        # Hide these apps. They can be displayed if a user really wants them.\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/xfce4-accessibility-settings.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/xfce4-color-settings.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/xfce4-mail-reader.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/xfce4-web-browser.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/vim.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/thunar-settings.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/thunar.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/pavucontrol.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/x11vnc.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/display-im6.q16.desktop \\\n        # These are named specifically for Debain\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/debian-xterm.desktop \\\n        && sed -i '/[Desktop Entry]/a\\NoDisplay=true' /usr/share/applications/debian-uxterm.desktop \\\n        # Force these apps to be \"System\" Apps rather than \"Categories=System;Utility;Core;GTK;Filesystem;\"\n        && sed -i 's/^Categories=.*$/Categories=System;/' /usr/share/applications/xfce4-appfinder.desktop \\\n        && sed -i 's/^Categories=.*$/Categories=System;/' /usr/share/applications/thunar-bulk-rename.desktop \\\n        && sed -i 's/^Categories=.*$/Categories=System;/' /usr/share/applications/org.gnome.gedit.desktop \\\n    && \\\n    echo \"**** Install WoL Manager requirements ****\" \\\n        && apt-get install -y \\\n            tcpdump \\\n            xprintidle \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Add support for flatpaks\nENV \\\n    XDG_DATA_DIRS=\"/home/default/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/\"\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install flatpak support ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            flatpak \\\n            gnome-software-plugin-flatpak \\\n    && \\\n    echo \"**** Configure flatpak ****\" \\\n        && flatpak remote-add flathub https://flathub.org/repo/flathub.flatpakrepo \\\n        && dpkg-statoverride --update --add root root 0755 /usr/bin/bwrap \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# TODO: Deprecate neko\n# Install Neko server\nCOPY --from=m1k1o/neko:base /usr/bin/neko /usr/bin/neko\nCOPY --from=m1k1o/neko:base /var/www /var/www\n\n# Install Web Frontend\nARG NODE_VERSION=\"v20\"\nARG FRONTEND_VERSION=a8eb92f\nRUN \\\n    echo \"**** Install Node ${NODE_VERSION} ****\" \\\n        && mkdir -p /tmp/nodejs \\\n        && rm -rf /opt/nodejs \\\n        && wget -qO /tmp/nodejs/nodejs.tar.xz \\\n            \"https://nodejs.org/dist/latest-${NODE_VERSION:?}.x/node-$(wget -qO- https://nodejs.org/dist/latest-${NODE_VERSION:?}.x/ | sed -nE 's|.*>node-(.*)-linux-x64\\.tar.xz</a>.*|\\1|p')-linux-x64.tar.xz\" \\\n        && tar -xJf /tmp/nodejs/nodejs.tar.xz -C /tmp/nodejs --strip-components=1 \\\n        && mv /tmp/nodejs /opt/nodejs \\\n        && ln -sf /opt/nodejs/bin/node /usr/local/bin/node \\\n        && ln -sf /opt/nodejs/bin/npm /usr/local/bin/npm \\\n        && ln -sf /opt/nodejs/bin/npx /usr/local/bin/npx \\\n    && \\\n    echo \"**** Fetch Web Frontend ****\" \\\n        && mkdir -p /opt \\\n        && cd /opt \\\n        && rm -rf /opt/frontend \\\n        && git clone https://github.com/Steam-Headless/frontend.git --branch master /opt/frontend \\\n        && cd /opt/frontend \\\n        && git checkout ${FRONTEND_VERSION} 2> /dev/null \\\n        && git submodule init \\\n        && git submodule update --depth 1 --recursive \\\n        && rm -rf /opt/frontend/.git \\\n    && \\\n    echo \"**** Configure Web Frontend ****\" \\\n        && echo '<!DOCTYPE html>' > /opt/frontend/index.html \\\n        && echo '<html><head><meta http-equiv=\"refresh\" content=\"0;url=./web/\"></head><body><p>If you are not redirected, <a href=\"./web/\">click here</a>.</p></body></html>' >> /opt/frontend/index.html \\\n        && chmod -R 755 /opt/frontend \\\n        && convert /opt/frontend/web/images/icons/novnc-ios-180.png -resize \"128x128\" /tmp/steam-headless.png \\\n        && xdg-icon-resource install --novendor --size 128 /tmp/steam-headless.png \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && rm -f /tmp/steam-headless.png\n\n# Install Websockify\nARG WEBSOCKETIFY_VERSION=0.11.0\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install Websockify dependencies ****\" \\\n        && apt-get install -y \\\n            python3-numpy \\\n            python3-requests \\\n            python3-jwcrypto \\\n            python3-redis \\\n    && \\\n    echo \"**** Fetch Websockify ****\" \\\n        && cd /tmp \\\n        && wget -O /tmp/websockify.tar.gz https://github.com/novnc/websockify/archive/v${WEBSOCKETIFY_VERSION}.tar.gz \\\n    && \\\n    echo \"**** Extract Websockify ****\" \\\n        && cd /tmp \\\n        && tar -xvf /tmp/websockify.tar.gz \\\n    && \\\n    echo \"**** Install Websockify to Web Frontend path ****\" \\\n        && cd /tmp \\\n        && mv -v /tmp/websockify-${WEBSOCKETIFY_VERSION} /opt/frontend/utils/websockify \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /tmp/websockify-* \\\n            /tmp/websockify.tar.gz\n\n# Setup audio streaming deps\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install audio streaming deps ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            bzip2 \\\n            gstreamer1.0-alsa \\\n            gstreamer1.0-gl \\\n            gstreamer1.0-gtk3 \\\n            gstreamer1.0-libav \\\n            gstreamer1.0-plugins-bad \\\n            gstreamer1.0-plugins-base \\\n            gstreamer1.0-plugins-good \\\n            gstreamer1.0-plugins-ugly \\\n            gstreamer1.0-pulseaudio \\\n            gstreamer1.0-qt5 \\\n            gstreamer1.0-tools \\\n            gstreamer1.0-vaapi \\\n            gstreamer1.0-x \\\n            libgstreamer1.0-0 \\\n            libncursesw5 \\\n            libopenal1 \\\n            libsdl-image1.2 \\\n            libsdl-ttf2.0-0 \\\n            libsdl1.2debian \\\n            libsndfile1 \\\n            ucspi-tcp \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Setup video streaming deps\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install Intel media drivers and VAAPI ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            intel-media-va-driver-non-free \\\n            i965-va-driver-shaders \\\n            libva2 \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install tools for monitoring hardware\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install useful HW monitoring tools ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            cpu-x \\\n            htop \\\n            vainfo \\\n            vdpauinfo \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install Sunshine\nCOPY --from=lizardbyte/sunshine:v2024.903.123219-debian-bookworm /sunshine.deb /usr/src/sunshine.deb\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install Sunshine requirements ****\" \\\n        && apt-get install -y \\\n            va-driver-all \\\n    && \\\n    echo \"**** Install Sunshine ****\" \\\n        && apt-get install -y \\\n            /usr/src/sunshine.deb \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Install Steam\nRUN \\\n    echo \"**** Update apt database ****\" \\\n        && dpkg --add-architecture i386 \\\n        && apt-get update \\\n    && \\\n    echo \"**** Install Steam ****\" \\\n        && apt-get install -y --no-install-recommends \\\n            steam-installer \\\n            gamescope \\\n        && ln -sf /usr/games/steam /usr/bin/steam \\\n    && \\\n    echo \"**** Section cleanup ****\" \\\n        && apt-get clean autoclean -y \\\n        && apt-get autoremove -y \\\n        && rm -rf \\\n            /var/lib/apt/lists/* \\\n            /var/tmp/* \\\n            /tmp/* \\\n    && \\\n    echo\n\n# Various other tools\nARG DUMB_INIT_VERSION=1.2.5\nARG DUMB_UDEV_VERSION=64d1427\nRUN \\\n    echo \"**** Install dumb-init ****\" \\\n        && wget --no-check-certificate --no-cookies --quiet \\\n            -O /usr/bin/dumb-init \\\n            https://github.com/Yelp/dumb-init/releases/download/v${DUMB_INIT_VERSION}/dumb-init_${DUMB_INIT_VERSION}_x86_64 \\\n        && chmod +x /usr/bin/dumb-init \\\n    && \\\n    echo \"**** Install dumb-udev ****\" \\\n        && python3 -m pip install \\\n            --break-system-packages \\\n            --pre \\\n            --upgrade \\\n            --no-cache-dir \\\n            git+https://github.com/Steam-Headless/dumb-udev.git@${DUMB_UDEV_VERSION} \\\n    && \\\n    echo\n\n# Add FS overlay\nCOPY overlay /\n\n# Set display environment variables\nENV \\\n    DISPLAY_CDEPTH=\"24\" \\\n    DISPLAY_REFRESH=\"120\" \\\n    DISPLAY_SIZEH=\"900\" \\\n    DISPLAY_SIZEW=\"1600\" \\\n    DISPLAY_VIDEO_PORT=\"DFP\" \\\n    DISPLAY=\":55\"\nENV \\\n    NVIDIA_DRIVER_CAPABILITIES=\"all\" \\\n    NVIDIA_VISIBLE_DEVICES=\"all\"\n\n# Set container configuration environment variables\n# TODO: Set the default WEBUI_USER & WEBUI_PASS after release of SHUI\nENV \\\n    MODE=\"primary\" \\\n    WEB_UI_MODE=\"vnc\" \\\n    ENABLE_VNC_AUDIO=\"true\" \\\n    NEKO_PASSWORD=neko \\\n    NEKO_PASSWORD_ADMIN=admin \\\n    ENABLE_STEAM=\"true\" \\\n    STEAM_ARGS=\"-silent\" \\\n    WEBUI_USER=\"\" \\\n    WEBUI_PASS=\"\" \\\n    ENABLE_SUNSHINE=\"true\" \\\n    ENABLE_EVDEV_INPUTS=\"true\" \\\n    ENABLE_WOL_POWER_MANAGER=\"false\" \\\n    ENABLE_SID=\"false\"\n\n# Configure required ports\nENV \\\n    PORT_NOVNC_WEB=\"8083\" \\\n    NEKO_NAT1TO1=\"\"\n\n# Expose the required ports\nEXPOSE 8083\n\n# Set entrypoint\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.806640625,
          "content": "# Headless Steam Service\n\n![](./images/banner.jpg)\n\nRemote Game Streaming Server.\n\nPlay your games either in the browser with audio or via Steam Link or Moonlight. Play from another Steam Client with Steam Remote Play.\n\nEasily deploy a Steam Docker instance in seconds.\n\n## Features:\n- Steam Client configured for running on Linux with Proton\n- Moonlight compatible server for easy remote desktop streaming\n- One click installation of EmeDeck, Heroic and Lutris\n- Full video/audio noVNC web access to a Xfce4 Desktop\n- NVIDIA, AMD and Intel GPU support\n- Full controller support\n- Support for Flatpak and Appimage installation\n- Root access\n- Based on Debian Bookworm\n\n---\n## Notes:\n\n### ADDITIONAL SOFTWARE:\nIf you wish to install additional applications, you can generate a script inside the `~/init.d` directory ending with \".sh\".\nThis will be executed on the container startup.\n\n### STORAGE PATHS:\nEverything that you wish to save in this container should be stored in the home directory or a docker container mount that you have specified. \nAll files that are store outside your home directory are not persistent and will be wiped if there is an update of the container or you change something in the template.\n\n### GAMES LIBRARY:\nIt is recommended that you mount your games library to `/mnt/games` and configure Steam to add that path.\n\n### AUTO START APPLICATIONS:\nIn this container, Steam is configured to automatically start. If you wish to add additional services to automatically start, \nadd them under **Applications > Settings > Session and Startup** in the WebUI.\n\n### NETWORK MODE:\nIf you want to use the container as a Steam Remote Play (previously \"In Home Streaming\") host device you should create a custom network and assign this container it's own IP, if you don't do this the traffic will be routed through the internet since Steam thinks you are on a different network.\n\n### USING HOST X SERVER:\nIf your host is already running X, you can just use that. To do this, be sure to configure:\n  - DISPLAY=:0    \n    **(Variable)** - *Configures the sceen to use the primary display. Set this to whatever your host is using*\n  - MODE=secondary    \n    **(Variable)** - *Configures the container to not start an X server of its own*\n  - HOST_DBUS=true    \n    **(Variable)** - *Optional - Configures the container to use the host dbus process*\n  - /run/dbus:/run/dbus:ro    \n    **(Mount)**  - *Optional - Configures the container to use the host dbus process*\n\n\n---\n## Installation:\n- [Docker Compose](./docs/docker-compose.md)\n- [Unraid](./docs/unraid.md)\n- [Ubuntu Server](./docs/ubuntu-server.md)\n\n\n---\n## Running locally:\n\nFor a development environment, I have created a script in the devops directory.\n\n\n---\n## TODO:\n- Remove SSH\n- Require user to enter password for sudo\n- Document how to run this container:\n    - Other server OS\n    - TrueNAS Scale \n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "overlay",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}