{
  "metadata": {
    "timestamp": 1736568575405,
    "page": 617,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker-library/golang",
      "stars": 1489,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.091796875,
          "content": "/*/**/Dockerfile       linguist-generated\n/Dockerfile*.template  linguist-language=Dockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": ".jq-template.awk\n"
        },
        {
          "name": "1.22",
          "type": "tree",
          "content": null
        },
        {
          "name": "1.23",
          "type": "tree",
          "content": null
        },
        {
          "name": "1.24-rc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile-linux.template",
          "type": "blob",
          "size": 5.7763671875,
          "content": "{{\n\tdef is_alpine:\n\t\tenv.variant | startswith(\"alpine\")\n\t;\n\tdef alpine_version:\n\t\tenv.variant | ltrimstr(\"alpine\")\n-}}\n{{ if is_alpine then ( -}}\nFROM alpine:{{ alpine_version }} AS build\n{{ ) else ( -}}\nFROM buildpack-deps:{{ env.variant }}-scm AS build\n{{ ) end -}}\n\nENV PATH /usr/local/go/bin:$PATH\n\nENV GOLANG_VERSION {{ .version }}\n\n{{\n\tdef os_arches:\n\t\tif is_alpine then\n\t\t\t{\n\t\t\t\t# https://dl-cdn.alpinelinux.org/alpine/edge/main/\n\t\t\t\t# https://dl-cdn.alpinelinux.org/alpine/latest-stable/main/\n\t\t\t\tamd64: \"x86_64\",\n\t\t\t\tarm32v6: \"armhf\",\n\t\t\t\tarm32v7: \"armv7\",\n\t\t\t\tarm64v8: \"aarch64\",\n\t\t\t\ti386: \"x86\",\n\t\t\t\tppc64le: \"ppc64le\",\n\t\t\t\triscv64: \"riscv64\",\n\t\t\t\ts390x: \"s390x\",\n\t\t\t}\n\t\telse\n\t\t\t{\n\t\t\t\t# https://salsa.debian.org/dpkg-team/dpkg/-/blob/main/data/cputable\n\t\t\t\t# https://wiki.debian.org/ArchitectureSpecificsMemo#Architecture_baselines\n\t\t\t\t# https://deb.debian.org/debian/dists/unstable/Release (\"Architectures:\")\n\t\t\t\t# http://deb.debian.org/debian/dists/unstable/main/\n\t\t\t\t# http://deb.debian.org/debian/dists/stable/main/\n\t\t\t\t# https://deb.debian.org/debian-ports/dists/unstable/main/\n\t\t\t\tamd64: \"amd64\",\n\t\t\t\tarm32v5: \"armel\",\n\t\t\t\tarm32v7: \"armhf\",\n\t\t\t\tarm64v8: \"arm64\",\n\t\t\t\ti386: \"i386\",\n\t\t\t\tmips64le: \"mips64el\",\n\t\t\t\tppc64le: \"ppc64el\",\n\t\t\t\triscv64: \"riscv64\",\n\t\t\t\ts390x: \"s390x\",\n\t\t\t}\n\t\tend\n-}}\nRUN set -eux; \\\n\tnow=\"$(date '+%s')\"; \\\n{{ if is_alpine then ( -}}\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tca-certificates \\\n\t\tgnupg \\\n# busybox's \"tar\" doesn't handle directory mtime correctly, so our SOURCE_DATE_EPOCH lookup doesn't work (the mtime of \"/usr/local/go\" always ends up being the extraction timestamp)\n\t\ttar \\\n\t; \\\n\tarch=\"$(apk --print-arch)\"; \\\n{{ ) else ( -}}\n\tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \\\n{{ ) end -}}\n\turl=; \\\n\tcase \"$arch\" in \\\n{{\n\t[\n\t\t.arches | to_entries[]\n\t\t| select(.value.supported)\n\t\t| .key as $bashbrewArch\n\t\t| (\n\t\t\tos_arches\n\t\t\t| .[$bashbrewArch] // empty\n\t\t) as $osArch\n\t\t| .value\n\t\t| (\n-}}\n\t\t{{ $osArch | @sh }}) \\\n\t\t\turl={{ .url | @sh }}; \\\n\t\t\tsha256={{ .sha256 | @sh }}; \\\n\t\t\t;; \\\n{{\n\t\t)\n\t] | add\n-}}\n\t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \\\n\tesac; \\\n\t\\\n\twget -O go.tgz.asc \"$url.asc\"; \\\n\twget -O go.tgz \"$url\"{{ if is_alpine then \"\" else \" --progress=dot:giga\" end }}; \\\n\techo \"$sha256 *go.tgz\" | sha256sum -c -; \\\n\t\\\n# https://github.com/golang/go/issues/14739#issuecomment-324767697\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n# https://www.google.com/linuxrepositories/\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \\\n# let's also fetch the specific subkey of that key explicitly that we expect \"go.tgz.asc\" to be signed by, just to make sure we definitely have it\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \\\n\tgpg --batch --verify go.tgz.asc go.tgz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" go.tgz.asc; \\\n\t\\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\t\\\n# save the timestamp from the tarball so we can restore it for reproducibility, if necessary (see below)\n\tSOURCE_DATE_EPOCH=\"$(stat -c '%Y' /usr/local/go)\"; \\\n\texport SOURCE_DATE_EPOCH; \\\n\ttouchy=\"$(date -d \"@$SOURCE_DATE_EPOCH\" '+%Y%m%d%H%M.%S')\"; \\\n# for logging validation/edification\n\tdate --date \"@$SOURCE_DATE_EPOCH\" --rfc-2822; \\\n# sanity check (detected value should be older than our wall clock)\n\t[ \"$SOURCE_DATE_EPOCH\" -lt \"$now\" ]; \\\n\t\\\n{{ if .arches[\"arm32v7\"].url // \"\" | contains(\"armv6\") then ( -}}\n\tif [ \"$arch\" = {{ os_arches[\"arm32v7\"] | @sh }} ]; then \\\n\t\t[ -s /usr/local/go/go.env ]; \\\n\t\tbefore=\"$(go env GOARM)\"; [ \"$before\" != {{ .arches[\"arm32v7\"].env[\"GOARM\"] | @sh }} ]; \\\n\t\t{ \\\n\t\t\techo; \\\n\t\t\techo '# https://github.com/docker-library/golang/issues/494'; \\\n\t\t\techo {{ \"GOARM=\\(.arches[\"arm32v7\"].env[\"GOARM\"])\" | @sh }}; \\\n\t\t} >> /usr/local/go/go.env; \\\n\t\tafter=\"$(go env GOARM)\"; [ \"$after\" = {{ .arches[\"arm32v7\"].env[\"GOARM\"] | @sh }} ]; \\\n# (re-)clamp timestamp for reproducibility (allows \"COPY --link\" to be more clever/useful)\n\t\ttouch -t \"$touchy\" /usr/local/go/go.env /usr/local/go; \\\n\tfi; \\\n\t\\\n{{ ) else \"\" end -}}\n# ideally at this point, we would just \"COPY --link ... /usr/local/go/ /usr/local/go/\" but BuildKit insists on creating the parent directories (perhaps related to https://github.com/opencontainers/image-spec/pull/970), and does so with unreproducible timestamps, so we instead create a whole new \"directory tree\" that we can \"COPY --link\" to accomplish what we want\n\tmkdir /target /target/usr /target/usr/local; \\\n\tmv -vT /usr/local/go /target/usr/local/go; \\\n\tln -svfT /target/usr/local/go /usr/local/go; \\\n\ttouch -t \"$touchy\" /target/usr/local /target/usr /target; \\\n\t\\\n{{ if is_alpine then ( -}}\n\tapk del --no-network .fetch-deps; \\\n\t\\\n{{ ) else \"\" end -}}\n# smoke test\n\tgo version; \\\n# make sure our reproducibile timestamp is probably still correct (best-effort inline reproducibility test)\n\tepoch=\"$(stat -c '%Y' /target/usr/local/go)\"; \\\n\t[ \"$SOURCE_DATE_EPOCH\" = \"$epoch\" ]; \\\n\tfind /target -newer /target/usr/local/go -exec sh -c 'ls -ld \"$@\" && exit \"$#\"' -- '{}' +\n\n{{ if is_alpine then ( -}}\nFROM alpine:{{ alpine_version }}\n\nRUN apk add --no-cache ca-certificates\n{{ ) else ( -}}\nFROM buildpack-deps:{{ env.variant }}-scm\n\n# install cgo-related dependencies\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n{{ ) end -}}\n\nENV GOLANG_VERSION {{ .version }}\n\n# don't auto-upgrade the gotoolchain\n# https://github.com/docker-library/golang/issues/472\nENV GOTOOLCHAIN=local\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n# (see notes above about \"COPY --link\")\nCOPY --from=build --link /target/ /\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\"\nWORKDIR $GOPATH\n"
        },
        {
          "name": "Dockerfile-windows-nanoserver.template",
          "type": "blob",
          "size": 1.1298828125,
          "content": "FROM mcr.microsoft.com/windows/{{ env.windowsVariant }}:{{ env.windowsRelease }}\n\nSHELL [\"cmd\", \"/S\", \"/C\"]\n\n# no Git installed (intentionally)\n#  -- Nano Server is \"Windows Slim\"\n\n# for 1.17+, we'll follow the (new) Go upstream default for install (https://golang.org/cl/283600), which frees up C:\\go to be the default GOPATH and thus match the Linux images more closely (https://github.com/docker-library/golang/issues/288)\nENV GOPATH C:\\\\go\n# HOWEVER, please note that it is the Go upstream intention to remove GOPATH support entirely: https://blog.golang.org/go116-module-changes\n\n# PATH isn't actually set in the Docker image, so we have to set it from within the container\nUSER ContainerAdministrator\nRUN setx /m PATH \"%GOPATH%\\bin;C:\\Program Files\\Go\\bin;%PATH%\"\nUSER ContainerUser\n# doing this first to share cache across versions more aggressively\n\nENV GOLANG_VERSION {{ .version }}\n\n# Docker's Windows path parsing is absolutely *cursed*; please just trust me on this one -Tianon\nCOPY --from=golang:{{ .version }}-windowsservercore-{{ env.windowsRelease }} [\"C:\\\\\\\\Program Files\\\\\\\\Go\",\"C:\\\\\\\\Program Files\\\\\\\\Go\"]\nRUN go version\n\nWORKDIR $GOPATH\n"
        },
        {
          "name": "Dockerfile-windows-servercore.template",
          "type": "blob",
          "size": 3.484375,
          "content": "FROM mcr.microsoft.com/windows/{{ env.windowsVariant }}:{{ env.windowsRelease }}\n\n# $ProgressPreference: https://github.com/PowerShell/PowerShell/issues/2138#issuecomment-251261324\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]\n\n# install MinGit (especially for \"go get\")\n# https://blogs.msdn.microsoft.com/visualstudioalm/2016/09/03/whats-new-in-git-for-windows-2-10/\n# \"Essentially, it is a Git for Windows that was stripped down as much as possible without sacrificing the functionality in which 3rd-party software may be interested.\"\n# \"It currently requires only ~45MB on disk.\"\nENV GIT_VERSION 2.23.0\nENV GIT_TAG v${GIT_VERSION}.windows.1\nENV GIT_DOWNLOAD_URL https://github.com/git-for-windows/git/releases/download/${GIT_TAG}/MinGit-${GIT_VERSION}-64-bit.zip\nENV GIT_DOWNLOAD_SHA256 8f65208f92c0b4c3ae4c0cf02d4b5f6791d539cd1a07b2df62b7116467724735\n# steps inspired by \"chcolateyInstall.ps1\" from \"git.install\" (https://chocolatey.org/packages/git.install)\nRUN Write-Host ('Downloading {0} ...' -f $env:GIT_DOWNLOAD_URL); \\\n\t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n\tInvoke-WebRequest -Uri $env:GIT_DOWNLOAD_URL -OutFile 'git.zip'; \\\n\t\\\n\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:GIT_DOWNLOAD_SHA256); \\\n\tif ((Get-FileHash git.zip -Algorithm sha256).Hash -ne $env:GIT_DOWNLOAD_SHA256) { \\\n\t\tWrite-Host 'FAILED!'; \\\n\t\texit 1; \\\n\t}; \\\n\t\\\n\tWrite-Host 'Expanding ...'; \\\n\tExpand-Archive -Path git.zip -DestinationPath C:\\git\\.; \\\n\t\\\n\tWrite-Host 'Removing ...'; \\\n\tRemove-Item git.zip -Force; \\\n\t\\\n\tWrite-Host 'Updating PATH ...'; \\\n\t$env:PATH = 'C:\\git\\cmd;C:\\git\\mingw64\\bin;C:\\git\\usr\\bin;' + $env:PATH; \\\n\t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \\\n\t\\\n\tWrite-Host 'Verifying install (\"git version\") ...'; \\\n\tgit version; \\\n\t\\\n\tWrite-Host 'Complete.';\n\n# for 1.17+, we'll follow the (new) Go upstream default for install (https://golang.org/cl/283600), which frees up C:\\go to be the default GOPATH and thus match the Linux images more closely (https://github.com/docker-library/golang/issues/288)\nENV GOPATH C:\\\\go\n# HOWEVER, please note that it is the Go upstream intention to remove GOPATH support entirely: https://blog.golang.org/go116-module-changes\n\n# PATH isn't actually set in the Docker image, so we have to set it from within the container\nRUN $newPath = ('{0}\\bin;C:\\Program Files\\Go\\bin;{1}' -f $env:GOPATH, $env:PATH); \\\n\tWrite-Host ('Updating PATH: {0}' -f $newPath); \\\n\t[Environment]::SetEnvironmentVariable('PATH', $newPath, [EnvironmentVariableTarget]::Machine);\n# doing this first to share cache across versions more aggressively\n\nENV GOLANG_VERSION {{ .version }}\n\nRUN $url = '{{ .arches[\"windows-amd64\"].url }}'; \\\n\tWrite-Host ('Downloading {0} ...' -f $url); \\\n\t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n\tInvoke-WebRequest -Uri $url -OutFile 'go.zip'; \\\n\t\\\n\t$sha256 = '{{ .arches[\"windows-amd64\"].sha256 }}'; \\\n\tWrite-Host ('Verifying sha256 ({0}) ...' -f $sha256); \\\n\tif ((Get-FileHash go.zip -Algorithm sha256).Hash -ne $sha256) { \\\n\t\tWrite-Host 'FAILED!'; \\\n\t\texit 1; \\\n\t}; \\\n\t\\\n\tWrite-Host 'Expanding ...'; \\\n\tExpand-Archive go.zip -DestinationPath C:\\; \\\n\t\\\n\tWrite-Host 'Moving ...'; \\\n\tMove-Item -Path C:\\go -Destination 'C:\\Program Files\\Go'; \\\n\t\\\n\tWrite-Host 'Removing ...'; \\\n\tRemove-Item go.zip -Force; \\\n\t\\\n\tWrite-Host 'Verifying install (\"go version\") ...'; \\\n\tgo version; \\\n\t\\\n\tWrite-Host 'Complete.';\n\nWORKDIR $GOPATH\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4423828125,
          "content": "Copyright (c) 2014 Docker, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Docker, Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.6318359375,
          "content": "# https://github.com/docker-library/golang\n\n## Maintained by: [the Docker Community](https://github.com/docker-library/golang)\n\nThis is the Git repo of the [Docker \"Official Image\"](https://github.com/docker-library/official-images#what-are-official-images) for [`golang`](https://hub.docker.com/_/golang/) (not to be confused with any official `golang` image provided by `golang` upstream). See [the Docker Hub page](https://hub.docker.com/_/golang/) for the full readme on how to use this Docker image and for information regarding contributing and issues.\n\nThe [full image description on Docker Hub](https://hub.docker.com/_/golang/) is generated/maintained over in [the docker-library/docs repository](https://github.com/docker-library/docs), specifically in [the `golang` directory](https://github.com/docker-library/docs/tree/master/golang).\n\n## See a change merged here that doesn't show up on Docker Hub yet?\n\nFor more information about the full official images change lifecycle, see [the \"An image's source changed in Git, now what?\" FAQ entry](https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what).\n\nFor outstanding `golang` image PRs, check [PRs with the \"library/golang\" label on the official-images repository](https://github.com/docker-library/official-images/labels/library%2Fgolang). For the current \"source of truth\" for [`golang`](https://hub.docker.com/_/golang/), see [the `library/golang` file in the official-images repository](https://github.com/docker-library/official-images/blob/master/library/golang).\n\n<!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh -->\n"
        },
        {
          "name": "apply-templates.sh",
          "type": "blob",
          "size": 1.5693359375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\n[ -f versions.json ] # run \"versions.sh\" first\n\njqt='.jq-template.awk'\nif [ -n \"${BASHBREW_SCRIPTS:-}\" ]; then\n\tjqt=\"$BASHBREW_SCRIPTS/jq-template.awk\"\nelif [ \"$BASH_SOURCE\" -nt \"$jqt\" ]; then\n\t# https://github.com/docker-library/bashbrew/blob/master/scripts/jq-template.awk\n\twget -qO \"$jqt\" 'https://github.com/docker-library/bashbrew/raw/9f6a35772ac863a0241f147c820354e4008edf38/scripts/jq-template.awk'\nfi\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'keys | map(@sh) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\ngenerated_warning() {\n\tcat <<-EOH\n\t\t#\n\t\t# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n\t\t#\n\t\t# PLEASE DO NOT EDIT IT DIRECTLY.\n\t\t#\n\n\tEOH\n}\n\nfor version; do\n\texport version\n\n\trm -rf \"$version/\"\n\n\tvariants=\"$(jq -r '.[env.version].variants | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\n\tfor dir in \"${variants[@]}\"; do\n\t\tmkdir -p \"$version/$dir\"\n\n\t\tvariant=\"$(basename \"$dir\")\" # \"buster\", \"windowsservercore-1809\", etc\n\t\texport variant\n\n\t\tcase \"$dir\" in\n\t\t\twindows/*)\n\t\t\t\twindowsVariant=\"${variant%%-*}\" # \"windowsservercore\", \"nanoserver\"\n\t\t\t\twindowsRelease=\"${variant#$windowsVariant-}\" # \"ltsc2022\", \"1809\", etc\n\t\t\t\twindowsVariant=\"${windowsVariant#windows}\" # \"servercore\", \"nanoserver\"\n\t\t\t\texport windowsVariant windowsRelease\n\t\t\t\ttemplate=\"Dockerfile-windows-$windowsVariant.template\"\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\ttemplate='Dockerfile-linux.template'\n\t\t\t\t;;\n\t\tesac\n\n\t\techo \"processing $version/$dir ...\"\n\n\t\t{\n\t\t\tgenerated_warning\n\t\t\tgawk -f \"$jqt\" \"$template\"\n\t\t} > \"$version/$dir/Dockerfile\"\n\tdone\ndone\n"
        },
        {
          "name": "generate-stackbrew-library.sh",
          "type": "blob",
          "size": 5.0302734375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ndeclare -A aliases=(\n\t[1.23]='1 latest'\n)\n\nself=\"$(basename \"$BASH_SOURCE\")\"\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'keys | map(@sh) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\n# sort version numbers with highest first\nIFS=$'\\n'; set -- $(sort -rV <<<\"$*\"); unset IFS\n\n# get the most recent commit which modified any of \"$@\"\nfileCommit() {\n\tgit log -1 --format='format:%H' HEAD -- \"$@\"\n}\n\n# get the most recent commit which modified \"$1/Dockerfile\" or any file COPY'd from \"$1/Dockerfile\"\ndirCommit() {\n\tlocal dir=\"$1\"; shift\n\t(\n\t\tcd \"$dir\"\n\t\tfiles=\"$(\n\t\t\tgit show HEAD:./Dockerfile | awk '\n\t\t\t\ttoupper($1) == \"COPY\" {\n\t\t\t\t\tfor (i = 2; i < NF; i++) {\n\t\t\t\t\t\tif ($i ~ /^--from=/) {\n\t\t\t\t\t\t\tnext\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprint $i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t'\n\t\t)\"\n\t\tfileCommit Dockerfile $files\n\t)\n}\n\ngetArches() {\n\tlocal repo=\"$1\"; shift\n\tlocal officialImagesBase=\"${BASHBREW_LIBRARY:-https://github.com/docker-library/official-images/raw/HEAD/library}/\"\n\n\tlocal parentRepoToArchesStr\n\tparentRepoToArchesStr=\"$(\n\t\tfind -name 'Dockerfile' -exec awk -v officialImagesBase=\"$officialImagesBase\" '\n\t\t\t\ttoupper($1) == \"FROM\" && $2 !~ /^('\"$repo\"'|scratch|.*\\/.*)(:|$)/ {\n\t\t\t\t\tprintf \"%s%s\\n\", officialImagesBase, $2\n\t\t\t\t}\n\t\t\t' '{}' + \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r bashbrew cat --format '[\"{{ .RepoName }}:{{ .TagName }}\"]=\"{{ join \" \" .TagEntry.Architectures }}\"'\n\t)\"\n\teval \"declare -g -A parentRepoToArches=( $parentRepoToArchesStr )\"\n}\ngetArches 'golang'\n\ncat <<-EOH\n# this file is generated via https://github.com/docker-library/golang/blob/$(fileCommit \"$self\")/$self\n\nMaintainers: Tianon Gravi <admwiggin@gmail.com> (@tianon),\n             Joseph Ferguson <yosifkit@gmail.com> (@yosifkit),\n             Johan Euphrosine <proppy@google.com> (@proppy)\nGitRepo: https://github.com/docker-library/golang.git\nBuilder: buildkit\nEOH\n\n# prints \"$2$1$3$1...$N\"\njoin() {\n\tlocal sep=\"$1\"; shift\n\tlocal out; printf -v out \"${sep//%/%%}%s\" \"$@\"\n\techo \"${out#$sep}\"\n}\n\nfor version; do\n\texport version\n\tvariants=\"$(jq -r '.[env.version].variants | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\n\tversionAliases=(\n\t\t$version\n\t\t${aliases[$version]:-}\n\t)\n\n\tdefaultDebianVariant=\"$(jq -r '\n\t\t.[env.version].variants\n\t\t| map(select(\n\t\t\tstartswith(\"alpine\")\n\t\t\tor startswith(\"slim-\")\n\t\t\tor startswith(\"windows/\")\n\t\t\t| not\n\t\t))\n\t\t| .[0]\n\t' versions.json)\"\n\tdefaultAlpineVariant=\"$(jq -r '\n\t\t.[env.version].variants\n\t\t| map(select(\n\t\t\tstartswith(\"alpine\")\n\t\t))\n\t\t| .[0]\n\t' versions.json)\"\n\n\tfor v in \"${variants[@]}\"; do\n\t\tdir=\"$version/$v\"\n\t\t[ -f \"$dir/Dockerfile\" ] || continue\n\n\t\tvariant=\"$(basename \"$v\")\"\n\n\t\tfullVersion=\"$(jq -r '.[env.version].version' versions.json)\"\n\n\t\t[[ \"$fullVersion\" == *.*[^0-9]* ]] || fullVersion+='.0'\n\n\t\tif [ \"$version\" = \"$fullVersion\" ]; then\n\t\t\tbaseAliases=( \"${versionAliases[@]}\" )\n\t\telse\n\t\t\tbaseAliases=( $fullVersion \"${versionAliases[@]}\" )\n\t\tfi\n\t\tvariantAliases=( \"${baseAliases[@]/%/-$variant}\" )\n\t\tvariantAliases=( \"${variantAliases[@]//latest-/}\" )\n\n\t\tif [ \"$variant\" = \"$defaultAlpineVariant\" ]; then\n\t\t\tvariantAliases+=( \"${baseAliases[@]/%/-alpine}\" )\n\t\t\tvariantAliases=( \"${variantAliases[@]//latest-/}\" )\n\t\tfi\n\n\t\tcase \"$v\" in\n\t\t\twindows/*)\n\t\t\t\tvariantArches='windows-amd64'\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\tvariantParent=\"$(awk 'toupper($1) == \"FROM\" { print $2 }' \"$dir/Dockerfile\" | sort -u)\" # TODO this needs to handle multi-parents (we get lucky that they're the same)\n\t\t\t\tvariantArches=\"${parentRepoToArches[$variantParent]}\"\n\t\t\t\t;;\n\t\tesac\n\n\t\t# cross-reference with supported architectures\n\t\tfor arch in $variantArches; do\n\t\t\tif ! jq -e --arg arch \"$arch\" '.[env.version].arches[$arch].supported' versions.json &> /dev/null; then\n\t\t\t\tvariantArches=\"$(sed <<<\" $variantArches \" -e \"s/ $arch / /g\")\"\n\t\t\tfi\n\t\tdone\n\t\t# TODO rewrite this whole loop into a single jq expression :)\n\t\tvariantArches=\"${variantArches% }\"\n\t\tvariantArches=\"${variantArches# }\"\n\t\tif [ -z \"$variantArches\" ]; then\n\t\t\techo >&2 \"error: '$dir' has no supported architectures!\"\n\t\t\texit 1\n\t\tfi\n\n\t\tsharedTags=()\n\t\tfor windowsShared in windowsservercore nanoserver; do\n\t\t\tif [[ \"$variant\" == \"$windowsShared\"* ]]; then\n\t\t\t\tsharedTags=( \"${baseAliases[@]/%/-$windowsShared}\" )\n\t\t\t\tsharedTags=( \"${sharedTags[@]//latest-/}\" )\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ \"$variant\" = \"$defaultDebianVariant\" ] || [[ \"$variant\" == 'windowsservercore'* ]]; then\n\t\t\tsharedTags+=( \"${baseAliases[@]}\" )\n\t\tfi\n\n\t\tconstraints=\n\t\tif [ \"$variant\" != \"$v\" ]; then\n\t\t\tconstraints=\"$variant\"\n\t\t\tif [[ \"$variant\" == nanoserver-* ]]; then\n\t\t\t\t# nanoserver variants \"COPY --from=...:...-windowsservercore-... ...\"\n\t\t\t\tconstraints+=\", windowsservercore-${variant#nanoserver-}\"\n\t\t\tfi\n\t\tfi\n\n\t\tcommit=\"$(dirCommit \"$dir\")\"\n\n\t\techo\n\t\techo \"Tags: $(join ', ' \"${variantAliases[@]}\")\"\n\t\tif [ \"${#sharedTags[@]}\" -gt 0 ]; then\n\t\t\techo \"SharedTags: $(join ', ' \"${sharedTags[@]}\")\"\n\t\tfi\n\t\tcat <<-EOE\n\t\t\tArchitectures: $(join ', ' $variantArches)\n\t\t\tGitCommit: $commit\n\t\t\tDirectory: $dir\n\t\tEOE\n\t\tif [ -n \"$constraints\" ]; then\n\t\t\techo 'Builder: classic'\n\t\t\techo \"Constraints: $constraints\"\n\t\tfi\n\tdone\ndone\n"
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 0.130859375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\n./versions.sh \"$@\"\n./apply-templates.sh \"$@\"\n"
        },
        {
          "name": "versions.json",
          "type": "blob",
          "size": 38.7880859375,
          "content": "{\n  \"1.22\": {\n    \"version\": \"1.22.10\",\n    \"arches\": {\n      \"aix-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.aix-ppc64.tar.gz\",\n        \"sha256\": \"46af3f2506a8887ed1de0e38244730a2ba944cfed7804d6baa9773790d2a294d\",\n        \"env\": {\n          \"GOOS\": \"aix\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-amd64.tar.gz\",\n        \"sha256\": \"736ce492a19d756a92719a6121226087ccd91b652ed5caec40ad6dbfb2252092\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"amd64\",\n          \"GOAMD64\": \"v1\"\n        },\n        \"supported\": true\n      },\n      \"arm32v5\": {\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"5\"\n        },\n        \"supported\": false\n      },\n      \"arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-armv6l.tar.gz\",\n        \"sha256\": \"a7bbbc80fe736269820bbdf3555e91ada5d18a5cde2276aac3b559bc1d52fc70\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"6\"\n        },\n        \"supported\": true\n      },\n      \"arm32v7\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-armv6l.tar.gz\",\n        \"sha256\": \"a7bbbc80fe736269820bbdf3555e91ada5d18a5cde2276aac3b559bc1d52fc70\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"7\"\n        },\n        \"supported\": true\n      },\n      \"arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-arm64.tar.gz\",\n        \"sha256\": \"5213c5e32fde3bd7da65516467b7ffbfe40d2bb5a5f58105e387eef450583eec\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": true\n      },\n      \"darwin-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.darwin-amd64.tar.gz\",\n        \"sha256\": \"dd2c4ac3702658c2c20e3a8b394da1917d86156b2cb4312c9d2f657f80067874\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"darwin-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.darwin-arm64.tar.gz\",\n        \"sha256\": \"21cf49415ffe0755b45f2b63e75d136528a32f7bb7bdd0166f51d22a03eb0a3f\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"dragonfly-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.dragonfly-amd64.tar.gz\",\n        \"sha256\": \"1684ae4c10c4d30e6f4950fbb71d9cc096d0541e5cf769b3195e91f475249d9a\",\n        \"env\": {\n          \"GOOS\": \"dragonfly\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.freebsd-amd64.tar.gz\",\n        \"sha256\": \"cce9da240870a4430c5cf1227bcf29d37575043ff16f7982a69f1139c6f564b5\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.freebsd-arm.tar.gz\",\n        \"sha256\": \"7c9c8fe30cbabbb4fb597f0f0ad1279fd2b320bc70831eba4c207b55ad46931d\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"armv6l\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.freebsd-arm64.tar.gz\",\n        \"sha256\": \"abae388d0d42563a242db0d405172cb73e09236f68000ff90c2a327ec8c5764c\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.freebsd-386.tar.gz\",\n        \"sha256\": \"f82f5d194114963693e0f51fd56d55d8417ca556438062f2b0df608473b62837\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.freebsd-riscv64.tar.gz\",\n        \"sha256\": \"d6f25fd79e17b84d1b61bec3e2fdffc47377b28b51a04b6bdbeac0199313e059\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": false\n      },\n      \"i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-386.tar.gz\",\n        \"sha256\": \"2ae9f00e9621489b75494fa2b8abfc5d09e0cae6effdd4c13867957ad2e4deba\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"386\",\n          \"GO386\": \"softfloat\"\n        },\n        \"supported\": true\n      },\n      \"illumos-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.illumos-amd64.tar.gz\",\n        \"sha256\": \"4a1121d8331208cb614c6f0474b0e4fa3c3023c5e8a88fb8d37f7e3454589aa2\",\n        \"env\": {\n          \"GOOS\": \"illumos\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"loong64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-loong64.tar.gz\",\n        \"sha256\": \"0be34dbc69726b52414e0283736f997fee477379ebff66cebd7d8c35f4f64f9d\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"loong64\"\n        },\n        \"supported\": false\n      },\n      \"mips\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-mips.tar.gz\",\n        \"sha256\": \"bb7d7e99db7ee70063cb57bb7395c392b8b5ed87f37d733a1c91de935c70bb91\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips\"\n        },\n        \"supported\": false\n      },\n      \"mips64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-mips64.tar.gz\",\n        \"sha256\": \"c7f0571410297cb29e52d10fed7a2a21aeaeabb9539d0c04a6d778adf0fe7f1b\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64\"\n        },\n        \"supported\": false\n      },\n      \"mips64le\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-mips64le.tar.gz\",\n        \"sha256\": \"e66c440c03dd19bf8423034cbde7f6813321beb18d3fcf2ef234c13a25467952\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64le\"\n        },\n        \"supported\": true\n      },\n      \"mipsle\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-mipsle.tar.gz\",\n        \"sha256\": \"b4e0061f62a9c1f874893aa4951a4883c19762a9dd64c5710554ec5a7aaf311a\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mipsle\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.netbsd-amd64.tar.gz\",\n        \"sha256\": \"e876962e6032175d049259559978c10af578dce506ffb064ce61e60a5b5308cb\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.netbsd-arm.tar.gz\",\n        \"sha256\": \"9d5e08939b95dca7d102eae7a832813ee12337187786f548848b10503ddc80cc\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"armv6l\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.netbsd-arm64.tar.gz\",\n        \"sha256\": \"b95696f92afe5062d4e17c48cf0756699a7522fbfd1b034bfb1eb2b636d34163\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.netbsd-386.tar.gz\",\n        \"sha256\": \"32e66f6ae2082cce98ccb557f54965ae5452e1b705470ae403446062938db1d5\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.openbsd-amd64.tar.gz\",\n        \"sha256\": \"c72b4d4f4cedce007e4d52a0e496169b0739b3bbe7fa13bc1322fe3b79d55221\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.openbsd-arm.tar.gz\",\n        \"sha256\": \"f6153ebd844ccc21ec8420fecccf9214dc0a7a572b28234ec1e00e04b0f438bb\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"armv6l\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.openbsd-arm64.tar.gz\",\n        \"sha256\": \"1a90e0fb2e6ca881b78692594f0e29834f738c593ea627a631f8e81cdddfdc32\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.openbsd-386.tar.gz\",\n        \"sha256\": \"5c4294fed0bf981f81b8be979e955516d0a78019990f2f7462246ef4bb3960e5\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.openbsd-ppc64.tar.gz\",\n        \"sha256\": \"5fe1abee2805334404da9c4e2aedb93764b31d6de3fe9d3cb49a2fd844992f68\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.plan9-amd64.tar.gz\",\n        \"sha256\": \"9fa2282fccb668ef9e3cdb1fa3f0128994224f95267f54640779049df3bb3a6c\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.plan9-arm.tar.gz\",\n        \"sha256\": \"d66acc86e00ead41966bb599c26fda983a686232040996a307262e71b3576c48\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"armv6l\"\n        },\n        \"supported\": false\n      },\n      \"plan9-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.plan9-386.tar.gz\",\n        \"sha256\": \"834fe42edf63a67b7b6c57fcfd1e8b159842f3615bfbc975b5ceed994db7e834\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-ppc64.tar.gz\",\n        \"sha256\": \"4192158cdedc6a124aa32a099cc6bebebabf1f4d380c46c5e36ea52c30a3888b\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"ppc64le\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-ppc64le.tar.gz\",\n        \"sha256\": \"db05b9838f69d741fb9a5301220b1a62014aee025b0baf341aba3d280087b981\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64le\"\n        },\n        \"supported\": true\n      },\n      \"riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-riscv64.tar.gz\",\n        \"sha256\": \"aef9b186c1b9b58c0472dbf54978f97682852a91b2e8d6bf354e59ba9c24438a\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": true\n      },\n      \"s390x\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.linux-s390x.tar.gz\",\n        \"sha256\": \"4ab2286adb096576771801b5099760b1d625fd7b44080449151a4d9b21303672\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"s390x\"\n        },\n        \"supported\": true\n      },\n      \"solaris-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.solaris-amd64.tar.gz\",\n        \"sha256\": \"40779a36f3f78b2ac1f3da5e6336f4fa24996d2412d5ca5685077103c8d3bbe2\",\n        \"env\": {\n          \"GOOS\": \"solaris\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"src\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.src.tar.gz\",\n        \"sha256\": \"1e94fd48be750d1fafb4d9b3b6dd31a6e9d2735d339bf2462bc97b64ca4c1037\",\n        \"supported\": true\n      },\n      \"windows-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.windows-amd64.zip\",\n        \"sha256\": \"da66f107a0f4959f4615bede230c6bf145a6f01252c6d1ff2b107e293ba339df\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": true\n      },\n      \"windows-arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.windows-arm.zip\",\n        \"sha256\": \"de1fb78d98ebd054a6fce5b71d1dcd1d49a68db75e0b6fd3d98ae5818d81fdba\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"armv6l\"\n        },\n        \"supported\": false\n      },\n      \"windows-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.windows-arm64.zip\",\n        \"sha256\": \"974656452fd7d104f34ee6e8ac92bb7431af84a1ce55226d9af485cb9ec23dd5\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"windows-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.22.10.windows-386.zip\",\n        \"sha256\": \"20019b2e60dd0cdf63e4ec26852c1c015c1a27580b32a512b4be33a2539113ae\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      }\n    },\n    \"variants\": [\n      \"bookworm\",\n      \"bullseye\",\n      \"alpine3.21\",\n      \"alpine3.20\",\n      \"windows/windowsservercore-ltsc2022\",\n      \"windows/windowsservercore-1809\",\n      \"windows/nanoserver-ltsc2022\",\n      \"windows/nanoserver-1809\"\n    ]\n  },\n  \"1.23\": {\n    \"version\": \"1.23.4\",\n    \"arches\": {\n      \"aix-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.aix-ppc64.tar.gz\",\n        \"sha256\": \"459a09504f7ebf2cbcee6ac282c8f34f97651217b1feae64557dcdd392b9bb62\",\n        \"env\": {\n          \"GOOS\": \"aix\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-amd64.tar.gz\",\n        \"sha256\": \"6924efde5de86fe277676e929dc9917d466efa02fb934197bc2eba35d5680971\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"amd64\",\n          \"GOAMD64\": \"v1\"\n        },\n        \"supported\": true\n      },\n      \"arm32v5\": {\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"5\"\n        },\n        \"supported\": false\n      },\n      \"arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-armv6l.tar.gz\",\n        \"sha256\": \"1f1dda0dc7ce0b2295f57258ec5ef0803fd31b9ed0aa20e2e9222334e5755de1\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"6\"\n        },\n        \"supported\": true\n      },\n      \"arm32v7\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-armv6l.tar.gz\",\n        \"sha256\": \"1f1dda0dc7ce0b2295f57258ec5ef0803fd31b9ed0aa20e2e9222334e5755de1\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"7\"\n        },\n        \"supported\": true\n      },\n      \"arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-arm64.tar.gz\",\n        \"sha256\": \"16e5017863a7f6071363782b1b8042eb12c6ca4f4cd71528b2123f0a1275b13e\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm64\",\n          \"GOARM64\": \"v8.0\"\n        },\n        \"supported\": true\n      },\n      \"darwin-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.darwin-amd64.tar.gz\",\n        \"sha256\": \"6700067389a53a1607d30aa8d6e01d198230397029faa0b109e89bc871ab5a0e\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"darwin-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.darwin-arm64.tar.gz\",\n        \"sha256\": \"87d2bb0ad4fe24d2a0685a55df321e0efe4296419a9b3de03369dbe60b8acd3a\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"dragonfly-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.dragonfly-amd64.tar.gz\",\n        \"sha256\": \"5e73dc89b44626677ec9d9aa4257d6d2ef1245502bc36a99385284910d0ade0a\",\n        \"env\": {\n          \"GOOS\": \"dragonfly\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.freebsd-amd64.tar.gz\",\n        \"sha256\": \"7de078d94d2af50ee9506ef7df85e4d12d4018b23e0b2cbcbc61d686f549b41a\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.freebsd-arm.tar.gz\",\n        \"sha256\": \"3f23e0a01cfe24e4160124cd7ab02bdd188264652074abdbce401c93f41e58a4\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.freebsd-arm64.tar.gz\",\n        \"sha256\": \"986a20e7c94431f03b44b3c415abc698c7b4edc2ae8431f7ecae1c2429d4cfa2\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.freebsd-386.tar.gz\",\n        \"sha256\": \"8df26b1e71234756c1f0e82cfffba3f427c5a91a251844ada2c7694a6986c546\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.freebsd-riscv64.tar.gz\",\n        \"sha256\": \"25e39f005f977778ce963fc43089510fe7514f3cfc0358eab584de4ce9f181fb\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": false\n      },\n      \"i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-386.tar.gz\",\n        \"sha256\": \"4a4a0e7587ef8c8a326439b957027f2791795e2d29d4ae3885b4091a48f843bc\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"386\",\n          \"GO386\": \"softfloat\"\n        },\n        \"supported\": true\n      },\n      \"illumos-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.illumos-amd64.tar.gz\",\n        \"sha256\": \"7e1d52f93da68c3bab39e3d83f89944d7d151208e54fdc30b0eda2a3812661d7\",\n        \"env\": {\n          \"GOOS\": \"illumos\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"loong64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-loong64.tar.gz\",\n        \"sha256\": \"4f469179a335a1a7bb9f991ad0c567f3d3eeb9b412ecd192206ab5c3e1a52b5a\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"loong64\"\n        },\n        \"supported\": false\n      },\n      \"mips\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-mips.tar.gz\",\n        \"sha256\": \"86b68185bcc43ea07190e95137c3442f062acc7ae10c3f1cf900fbe23e07df24\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips\"\n        },\n        \"supported\": false\n      },\n      \"mips64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-mips64.tar.gz\",\n        \"sha256\": \"3a19245eec76533b3d01c90f3a40a38d63684028f0fd54d442dc9a9d03197891\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64\"\n        },\n        \"supported\": false\n      },\n      \"mips64le\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-mips64le.tar.gz\",\n        \"sha256\": \"b53a06fc8455f6a875329e8d2e24d39db298122c9cce6e948117022191f6c613\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64le\"\n        },\n        \"supported\": true\n      },\n      \"mipsle\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-mipsle.tar.gz\",\n        \"sha256\": \"66120a8105b8ba6559f4e6a13b1e39b433fb8032df9d1744e4486876fa1723ce\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mipsle\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.netbsd-amd64.tar.gz\",\n        \"sha256\": \"54b081cc36355aa5ecb6db9544cf7e77366a7b08ce96cb98a45d043e393660c7\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.netbsd-arm.tar.gz\",\n        \"sha256\": \"f05fec348c7c9f07e1ad4e436db4122e98de99ebcfbf6ac6176869785f334a02\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.netbsd-arm64.tar.gz\",\n        \"sha256\": \"317878da2bface5a57a8eaf5c1fe2b40b1c82d8172a10453ad3eea36f6946bdb\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.netbsd-386.tar.gz\",\n        \"sha256\": \"dba009d8bf9928cb5a1e31fcbe0eb41335cce4fe63755d95cef6b5987df4ed5a\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-amd64.tar.gz\",\n        \"sha256\": \"cc62f5a14ea3d573d8edbce1833f70a8f99ca048a9db0fcc9e738fd48e950505\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-arm.tar.gz\",\n        \"sha256\": \"326aba6cf5bb9348fa3e41217abd2c84eac92608684e2fe8c5474fdab23a0db9\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-arm64.tar.gz\",\n        \"sha256\": \"51ea2a2588bf3da8e1476f3e2bd4d6724d74126e99f9c6ea9af4ebe389e64de6\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-386.tar.gz\",\n        \"sha256\": \"0d84350dfd72c505c6ad474e51676b04e95ffb748c614bd5bf8510026873059b\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-ppc64.tar.gz\",\n        \"sha256\": \"44c5c82ab23e40225b2ba1e7d19150a5973ea58e93b4931e426e6e6f0d108872\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.openbsd-riscv64.tar.gz\",\n        \"sha256\": \"5fa31fc13d1e3c123a5e96ba38683fa2c947baed23ac9c7c341afcfe007c8993\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.plan9-amd64.tar.gz\",\n        \"sha256\": \"fb2a9ee3ae5a77e734862e257a9395b43e707ac45e060dfa84c5a40688e73170\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.plan9-arm.tar.gz\",\n        \"sha256\": \"e1b95563b19fdebd6ea0d20c07641e69580976fa754e586c831ad7a3ae987140\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"plan9-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.plan9-386.tar.gz\",\n        \"sha256\": \"e5952fc93eeaa0094ef09a0e72a9f06f0621ce841a39f9637fb5b9062e77d67a\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-ppc64.tar.gz\",\n        \"sha256\": \"33be2bfb27f2821a65e9f6aba744c85ea7c5e233e16bac27bb3ec253bcd4e970\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"ppc64le\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-ppc64le.tar.gz\",\n        \"sha256\": \"65a303ef51e48ff77e004a6a5b4db6ce59495cd59c6af51b54bf4f786c01a1b9\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64le\"\n        },\n        \"supported\": true\n      },\n      \"riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-riscv64.tar.gz\",\n        \"sha256\": \"7c40e9e0d722cef14ede765159ba297f4c6e3093bb106f10fbccf8564780049a\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"riscv64\",\n          \"GORISCV64\": \"rva20u64\"\n        },\n        \"supported\": true\n      },\n      \"s390x\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.linux-s390x.tar.gz\",\n        \"sha256\": \"74aab82bf4eca7c26c830a5b0e2a31d193a4d5ba47045526b92473cc7188d7d7\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"s390x\"\n        },\n        \"supported\": true\n      },\n      \"solaris-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.solaris-amd64.tar.gz\",\n        \"sha256\": \"088c282509fc9e1a8f29fc0dd16fe486854d05b8ceba08d077d17d11d6979a41\",\n        \"env\": {\n          \"GOOS\": \"solaris\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"src\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.src.tar.gz\",\n        \"sha256\": \"ad345ac421e90814293a9699cca19dd5238251c3f687980bbcae28495b263531\",\n        \"supported\": true\n      },\n      \"windows-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.windows-amd64.zip\",\n        \"sha256\": \"16c59ac9196b63afb872ce9b47f945b9821a3e1542ec125f16f6085a1c0f3c39\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": true\n      },\n      \"windows-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.windows-arm.zip\",\n        \"sha256\": \"1012cfd8ca7241c2beecb5c345dd61f01897c6f6baca80ea1bfed357035c868a\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"windows-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.windows-arm64.zip\",\n        \"sha256\": \"db69cae5006753c785345c3215ad941f8b6224e2f81fec471c42d6857bee0e6f\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"windows-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.23.4.windows-386.zip\",\n        \"sha256\": \"e544e0e356147ba998e267002bd0f2c4bf3370d495467a55baf2c63595a2026d\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      }\n    },\n    \"variants\": [\n      \"bookworm\",\n      \"bullseye\",\n      \"alpine3.21\",\n      \"alpine3.20\",\n      \"windows/windowsservercore-ltsc2022\",\n      \"windows/windowsservercore-1809\",\n      \"windows/nanoserver-ltsc2022\",\n      \"windows/nanoserver-1809\"\n    ]\n  },\n  \"1.24-rc\": {\n    \"version\": \"1.24rc1\",\n    \"arches\": {\n      \"aix-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.aix-ppc64.tar.gz\",\n        \"sha256\": \"77b63813612ffae947ef7446c392ca3bac203f8967d25cb7f7716a5e547806d4\",\n        \"env\": {\n          \"GOOS\": \"aix\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-amd64.tar.gz\",\n        \"sha256\": \"706c3810c0826dd43bb6d5274c5fa4f644488274533a9bb1f9b13a0e302afcc6\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"amd64\",\n          \"GOAMD64\": \"v1\"\n        },\n        \"supported\": true\n      },\n      \"arm32v5\": {\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"5\"\n        },\n        \"supported\": false\n      },\n      \"arm32v6\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-armv6l.tar.gz\",\n        \"sha256\": \"8b1bd52e292626a2dae8a5d684590380bd3c6af923a7504c0fe9f9e51abbfe1e\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"6\"\n        },\n        \"supported\": true\n      },\n      \"arm32v7\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-armv6l.tar.gz\",\n        \"sha256\": \"8b1bd52e292626a2dae8a5d684590380bd3c6af923a7504c0fe9f9e51abbfe1e\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm\",\n          \"GOARM\": \"7\"\n        },\n        \"supported\": true\n      },\n      \"arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-arm64.tar.gz\",\n        \"sha256\": \"febc01e97564c3851f96a778bd31f9b7631517f71e7bdf15baeb47c84d735a18\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"arm64\",\n          \"GOARM64\": \"v8.0\"\n        },\n        \"supported\": true\n      },\n      \"darwin-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.darwin-amd64.tar.gz\",\n        \"sha256\": \"0f0895cbaf4e0c0ea0c4c2ffa2f428b0af0dfc39b64ad9f34c7c4de1be39ee55\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"darwin-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.darwin-arm64.tar.gz\",\n        \"sha256\": \"457a34b8228db747404b71e9a9789623c808256a862ee5acb5dd9d002d819938\",\n        \"env\": {\n          \"GOOS\": \"darwin\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"dragonfly-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.dragonfly-amd64.tar.gz\",\n        \"sha256\": \"584b2bcbba8d40ff0ecf03623b64cd70418846d17188af265f10674b24d1bdc3\",\n        \"env\": {\n          \"GOOS\": \"dragonfly\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.freebsd-amd64.tar.gz\",\n        \"sha256\": \"74c162d66208a98a485d3c078280875c687119d3b5e4e1a75222c1c67018cf26\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.freebsd-arm.tar.gz\",\n        \"sha256\": \"919ffc52164ea02ca4bd67bdd852b1b60668d8061f018ff3ff6145b3d8b840a4\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.freebsd-arm64.tar.gz\",\n        \"sha256\": \"1aa6e36d30a735b077737eb2648b60fc9bf2ef2bbf1f799206a2728c23b94d0f\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.freebsd-386.tar.gz\",\n        \"sha256\": \"66b9c553cbc3ea76417c95dee81950f16d10811ea371f4b8c473bef44ba4eb01\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"freebsd-riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.freebsd-riscv64.tar.gz\",\n        \"sha256\": \"4d921ac6852c440572062674b510d05db0078dbfafa4e96093bbe3df8494fe05\",\n        \"env\": {\n          \"GOOS\": \"freebsd\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": false\n      },\n      \"i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-386.tar.gz\",\n        \"sha256\": \"f8332a537d99504cca6d1a706a34aad74051dadcb098dc5b87de1733e24db3b7\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"386\",\n          \"GO386\": \"softfloat\"\n        },\n        \"supported\": true\n      },\n      \"illumos-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.illumos-amd64.tar.gz\",\n        \"sha256\": \"0a7fd82f3c8e6dc49fdce13081678c1633406bdf76fea6045c358dc544e55490\",\n        \"env\": {\n          \"GOOS\": \"illumos\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"loong64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-loong64.tar.gz\",\n        \"sha256\": \"54631f57f99e7807324cbe9e3a4133e41edbcf404f885993e5375a7049f4bb5e\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"loong64\"\n        },\n        \"supported\": false\n      },\n      \"mips\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-mips.tar.gz\",\n        \"sha256\": \"db9d022394aca7a03eb747a6224978281c4f5d065cac46a166bdb06cc7e86272\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips\"\n        },\n        \"supported\": false\n      },\n      \"mips64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-mips64.tar.gz\",\n        \"sha256\": \"9a6fcd39f2af5e1015b62bde6f129d2e3e622e1702f4044d5726d49fb2bb5488\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64\"\n        },\n        \"supported\": false\n      },\n      \"mips64le\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-mips64le.tar.gz\",\n        \"sha256\": \"3841c8c24969a4151d3aa2cc4822a5355779f7136fd7d3d096a833da9dd4dbdf\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mips64le\"\n        },\n        \"supported\": true\n      },\n      \"mipsle\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-mipsle.tar.gz\",\n        \"sha256\": \"41b4c2d85a72e9dc1efad65cc90087fec4a4ade5a1029a2e1da39758507a6ff1\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"mipsle\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.netbsd-amd64.tar.gz\",\n        \"sha256\": \"e048ff0548646bbdb85288ba448addef96938d0353a0d79013d34d79c5a917e5\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.netbsd-arm.tar.gz\",\n        \"sha256\": \"41dff7d095e898534639e781d92106844c93e00895c418cc0203360ffce23950\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.netbsd-arm64.tar.gz\",\n        \"sha256\": \"2761e729ab19fe3099409ef8667a7966ba16ec0b8433bd4429d74388dd57a529\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"netbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.netbsd-386.tar.gz\",\n        \"sha256\": \"84a9268efaf95ab50852b4f39f39cc73b4911a609ff6056aca8709bd52f1faf2\",\n        \"env\": {\n          \"GOOS\": \"netbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-amd64.tar.gz\",\n        \"sha256\": \"2f5e9f223ee3773e29ff0aa4b5abe2948c9a4bb782c7d3d2f8a1e1e886c54bfd\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-arm.tar.gz\",\n        \"sha256\": \"a89f1600e7598128432b0df70b9474d5c01f11b448c22a88296f05aad13ce0ef\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-arm64.tar.gz\",\n        \"sha256\": \"c3b7472d0934dce86052027c91850af5eba38013152b59f7e6ace2d780f0fc03\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-386.tar.gz\",\n        \"sha256\": \"f0dca9d1a9f8c0559389e4c5638c2e59b56702644211ec34fe88430e21db9925\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-ppc64.tar.gz\",\n        \"sha256\": \"e547f8a2e0c78121721ca0cceed22e81d129f05520ff4c9c46e9b2304960450a\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"openbsd-riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.openbsd-riscv64.tar.gz\",\n        \"sha256\": \"068553f706ca19850f10e5c66436fa8ccdb615497fc692c8c2439ebdcec71012\",\n        \"env\": {\n          \"GOOS\": \"openbsd\",\n          \"GOARCH\": \"riscv64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.plan9-amd64.tar.gz\",\n        \"sha256\": \"28313d92c5a6e9524405d535bc7cae797526e65d3ca496e71652b086952a8053\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"plan9-arm\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.plan9-arm.tar.gz\",\n        \"sha256\": \"0392cd503e1901911db6a193ac50b8881d104847d57be63b509537273b53e1a9\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"arm\"\n        },\n        \"supported\": false\n      },\n      \"plan9-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.plan9-386.tar.gz\",\n        \"sha256\": \"3db9bfe05473be9d66501c8d67f8b974db801507bf0e6729de853755dfc2be1f\",\n        \"env\": {\n          \"GOOS\": \"plan9\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      },\n      \"ppc64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-ppc64.tar.gz\",\n        \"sha256\": \"b8ed018ce8cbcded82059d93af6ca7dd963e0228ae89986b52af6b82ac330c93\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64\"\n        },\n        \"supported\": false\n      },\n      \"ppc64le\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-ppc64le.tar.gz\",\n        \"sha256\": \"492eca7616fe51194886d5ae3a782d97559d7e8ba7e51ccb23fa1b32c79d96e9\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"ppc64le\"\n        },\n        \"supported\": true\n      },\n      \"riscv64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-riscv64.tar.gz\",\n        \"sha256\": \"5cd2bc49913b0661a2f30d88fb80cd600477f66fa44b2d3d7002ce7fa7bffb91\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"riscv64\",\n          \"GORISCV64\": \"rva20u64\"\n        },\n        \"supported\": true\n      },\n      \"s390x\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.linux-s390x.tar.gz\",\n        \"sha256\": \"13331e1c63c944b86602944945a2b87c88c002deaeea971b9930fd1d3b3e7a2c\",\n        \"env\": {\n          \"GOOS\": \"linux\",\n          \"GOARCH\": \"s390x\"\n        },\n        \"supported\": true\n      },\n      \"solaris-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.solaris-amd64.tar.gz\",\n        \"sha256\": \"93a6ff8026a22eac125e0fa428e23cc871ee82f81fa213a992c6ca6d07183777\",\n        \"env\": {\n          \"GOOS\": \"solaris\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": false\n      },\n      \"src\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.src.tar.gz\",\n        \"sha256\": \"afd8a23fd260f2a246d174049a076b8a05bb0bad93f1220768d219b8bdf7539d\",\n        \"supported\": true\n      },\n      \"windows-amd64\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.windows-amd64.zip\",\n        \"sha256\": \"82690f356b18800c9c132a7010b8e9bf50977f408993f3d30f7b81a7c5a03c4d\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"amd64\"\n        },\n        \"supported\": true\n      },\n      \"windows-arm64v8\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.windows-arm64.zip\",\n        \"sha256\": \"e8b2c17c54fb39c73eb0c3286def04dc8b61a009f1b8c570295ecba8c5846955\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"arm64\"\n        },\n        \"supported\": false\n      },\n      \"windows-i386\": {\n        \"url\": \"https://dl.google.com/go/go1.24rc1.windows-386.zip\",\n        \"sha256\": \"18e5ebe5bf7772cadd57e334991bee3fc5693557d27ebea4fa4d50cba7e8c518\",\n        \"env\": {\n          \"GOOS\": \"windows\",\n          \"GOARCH\": \"386\"\n        },\n        \"supported\": false\n      }\n    },\n    \"variants\": [\n      \"bookworm\",\n      \"bullseye\",\n      \"alpine3.21\",\n      \"alpine3.20\",\n      \"windows/windowsservercore-ltsc2022\",\n      \"windows/windowsservercore-1809\",\n      \"windows/nanoserver-ltsc2022\",\n      \"windows/nanoserver-1809\"\n    ]\n  }\n}\n"
        },
        {
          "name": "versions.sh",
          "type": "blob",
          "size": 5.0263671875,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\n# see https://golang.org/dl/\npotentiallySupportedArches=(\n\tamd64\n\tarm32v5\n\tarm32v6\n\tarm32v7\n\tarm64v8\n\ti386\n\tmips64le\n\tppc64le\n\triscv64\n\ts390x\n\twindows-amd64\n\n\t# special case (fallback)\n\tsrc\n)\npotentiallySupportedArches=\"$(jq -sRc <<<\"${potentiallySupportedArches[*]}\" 'rtrimstr(\"\\n\") | split(\" \")')\"\n\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\nversions=( \"$@\" )\nif [ ${#versions[@]} -eq 0 ]; then\n\tversions=( */ )\n\tjson='{}'\nelse\n\tjson=\"$(< versions.json)\"\nfi\nversions=( \"${versions[@]%/}\" )\n\n# https://pkg.go.dev/golang.org/x/website/internal/dl\n# https://github.com/golang/go/issues/23746\n# https://github.com/golang/go/issues/34864\n# https://github.com/golang/website/blob/41e922072f17ab2826d9479338314c025602a3a1/internal/dl/server.go#L174-L182 ... (the only way to get \"unstable\" releases is via \"all\", so we get to sort through \"archive\" releases too)\ngoVersions=\"$(\n\twget -qO- 'https://golang.org/dl/?mode=json&include=all' | jq -c '\n\t\t[\n\t\t\t.[]\n\t\t\t| ( .version | ltrimstr(\"go\") ) as $version\n\t\t\t| ( $version | sub(\"^(?<m>[0-9]+[.][0-9]+).*$\"; \"\\(.m)\") ) as $major\n\t\t\t| {\n\t\t\t\tversion: $version,\n\t\t\t\tmajor: ( $major + if .stable then \"\" else \"-rc\" end ),\n\t\t\t\tarches: (\n\t\t\t\t\t[\n\t\t\t\t\t\t.files[]\n\t\t\t\t\t\t| select(.kind == \"archive\" or .kind == \"source\")\n\t\t\t\t\t\t| (\n\t\t\t\t\t\t\tif .kind == \"source\" then\n\t\t\t\t\t\t\t\t\"src\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif .os != \"linux\" then\n\t\t\t\t\t\t\t\t\t.os + \"-\"\n\t\t\t\t\t\t\t\telse \"\" end\n\t\t\t\t\t\t\t\t+ (\n\t\t\t\t\t\t\t\t\t.arch\n\t\t\t\t\t\t\t\t\t| sub(\"^386$\"; \"i386\")\n\t\t\t\t\t\t\t\t\t| sub(\"^arm64$\"; \"arm64v8\")\n\t\t\t\t\t\t\t\t\t| sub(\"^arm-?v?(?<v>[0-9]+)l?$\"; \"arm32v\\(.v)\")\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t) as $bashbrewArch\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t( $bashbrewArch ): (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\turl: (\"https://dl.google.com/go/\" + .filename),\n\t\t\t\t\t\t\t\t\tsha256: .sha256,\n\t\t\t\t\t\t\t\t\tenv: { GOOS: .os, GOARCH: .arch },\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t| add\n\n\t\t\t\t\t# upstream (still as of 2023-12-19) only publishes \"armv6\" binaries, which are appropriate for v7 as well\n\t\t\t\t\t| if (has(\"arm32v7\") | not) and has(\"arm32v6\") then\n\t\t\t\t\t\t.[\"arm32v7\"] = .[\"arm32v6\"]\n\t\t\t\t\telse . end\n\t\t\t\t)\n\t\t\t}\n\t\t]\n\t'\n)\"\n\nfor version in \"${versions[@]}\"; do\n\texport version\n\n\tif \\\n\t\t! goJson=\"$(jq <<<\"$goVersions\" -ce '\n\t\t\t[ .[] | select(.major == env.version) ] | sort_by(\n\t\t\t\t.version\n\t\t\t\t| split(\".\")\n\t\t\t\t| map(\n\t\t\t\t\tif test(\"^[0-9]+$\") then\n\t\t\t\t\t\ttonumber\n\t\t\t\t\telse . end\n\t\t\t\t)\n\t\t\t)[-1]\n\t\t')\" \\\n\t\t|| ! fullVersion=\"$(jq <<<\"$goJson\" -r '.version')\" \\\n\t\t|| [ -z \"$fullVersion\" ] \\\n\t; then\n\t\techo >&2 \"warning: cannot find full version for $version\"\n\t\tcontinue\n\tfi\n\n\techo \"$version: $fullVersion\"\n\n\tdoc=\"$(jq <<<\"$goJson\" -c --argjson potentiallySupportedArches \"$potentiallySupportedArches\" '{\n\t\tversion: .version,\n\t\tarches: (\n\t\t\t.arches\n\t\t\t| . += (\n\t\t\t\t( $potentiallySupportedArches - keys ) # \"missing\" arches that we ought to include in our list\n\t\t\t\t| map(\n\t\t\t\t\t{\n\t\t\t\t\t\t(.): {\n\t\t\t\t\t\t\tenv: (\n\t\t\t\t\t\t\t\t# hacky, but probably close enough (cleaned up in the next block)\n\t\t\t\t\t\t\t\tcapture(\"^((?<GOOS>[^-]+)-)?(?<GOARCH>.+)$\")\n\t\t\t\t\t\t\t\t| .GOOS //= \"linux\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t| add\n\t\t\t)\n\t\t\t| with_entries(\n\t\t\t\t.key as $bashbrewArch\n\t\t\t\t| .value.supported = (\n\t\t\t\t\t# https://github.com/docker-library/golang/pull/500#issuecomment-1863578601 - as of Go 1.21+, we no longer build from source\n\t\t\t\t\t.value.url\n\t\t\t\t\tand ($potentiallySupportedArches | index($bashbrewArch))\n\t\t\t\t)\n\t\t\t\t| .value.env +=\n\t\t\t\t\t\tif $bashbrewArch == \"i386\" then\n\t\t\t\t\t\t\t# i386 in Debian is non-SSE2, Alpine appears to be similar (but interesting, not FreeBSD?)\n\t\t\t\t\t\t\t{ GOARCH: \"386\", GO386: \"softfloat\" }\n\t\t\t\t\t\telif $bashbrewArch == \"amd64\" then\n\t\t\t\t\t\t\t# https://go.dev/doc/go1.18#amd64\n\t\t\t\t\t\t\t{ GOAMD64: \"v1\" }\n\t\t\t\t\t\t# TODO ^^ figure out what to do with GOAMD64 / GO386 if/when the OS baselines change and these choices needs to be per-variant /o\\ (probably move it to the template instead, in fact, since that is where we can most easily toggle based on variant)\n\t\t\t\t\t\telif $bashbrewArch == \"riscv64\" and env.version != \"1.22\" then\n\t\t\t\t\t\t\t# https://go.dev/doc/go1.23#riscv\n\t\t\t\t\t\t\t{ GORISCV64: \"rva20u64\" }\n\t\t\t\t\t\telif $bashbrewArch | startswith(\"arm64v\") then\n\t\t\t\t\t\t\t{ GOARCH: \"arm64\" }\n\t\t\t\t\t\t\t+ if env.version != \"1.22\" then {\n\t\t\t\t\t\t\t\t# https://go.dev/doc/go1.23#arm64\n\t\t\t\t\t\t\t\tGOARM64: ($bashbrewArch | ltrimstr(\"arm64\") | if index(\".\") then . else . + \".0\" end),\n\t\t\t\t\t\t\t} else {} end\n\t\t\t\t\t\telif $bashbrewArch | startswith(\"arm32v\") then\n\t\t\t\t\t\t\t{ GOARCH: \"arm\", GOARM: ($bashbrewArch | ltrimstr(\"arm32v\")) }\n\t\t\t\t\t\telse {} end\n\t\t\t\t| if $bashbrewArch == \"src\" then del(.value.env) else . end\n\t\t\t)\n\t\t),\n\t\tvariants: [\n\t\t\t\"bookworm\",\n\t\t\t\"bullseye\",\n\t\t\t(\n\t\t\t\t\"3.21\",\n\t\t\t\t\"3.20\",\n\t\t\t\tempty\n\t\t\t| \"alpine\" + .),\n\t\t\tif .arches | has(\"windows-amd64\") and .[\"windows-amd64\"].url then\n\t\t\t\t(\n\t\t\t\t\t\"ltsc2022\",\n\t\t\t\t\t\"1809\",\n\t\t\t\t\tempty\n\t\t\t\t| \"windows/windowsservercore-\" + .),\n\t\t\t\t(\n\t\t\t\t\t\"ltsc2022\",\n\t\t\t\t\t\"1809\",\n\t\t\t\t\tempty\n\t\t\t\t| \"windows/nanoserver-\" + .)\n\t\t\telse empty end\n\t\t],\n\t}')\"\n\n\tjson=\"$(jq <<<\"$json\" -c --argjson doc \"$doc\" '.[env.version] = $doc')\"\ndone\n\njq <<<\"$json\" '\n\tdef sort_keys:\n\t\tto_entries\n\t\t| sort_by(.key)\n\t\t| from_entries\n\t;\n\tsort_keys\n\t| .[].arches |= sort_keys\n' > versions.json\n"
        }
      ]
    }
  ]
}