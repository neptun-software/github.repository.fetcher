{
  "metadata": {
    "timestamp": 1736568466916,
    "page": 444,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tony/tmux-config",
      "stars": 1819,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.125,
          "content": "[submodule \"vendor/tmux-mem-cpu-load\"]\n\tpath = vendor/tmux-mem-cpu-load\n\turl = https://github.com/thewtex/tmux-mem-cpu-load.git\n"
        },
        {
          "name": ".tmux-osx.conf",
          "type": "blob",
          "size": 0.4248046875,
          "content": "# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard\n\nset-option -g default-command 'exec reattach-to-user-namespace -l zsh'\nbind-key C-c run-shell 'tmux save-buffer - | reattach-to-user-namespace pbcopy'\nbind-key C-v run-shell 'reattach-to-user-namespace pbpaste | tmux load-buffer - \\; paste-buffer -d'\nbind-key -t    vi-copy y   'reattach-to-user-namespace pbcopy'\nbind-key -t emacs-copy M-w 'reattach-to-user-namespace pbcopy'\n"
        },
        {
          "name": ".tmux.conf",
          "type": "blob",
          "size": 5.5478515625,
          "content": "# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf\nset-option -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow\n\n# easy reload config\nbind-key r source-file ~/.tmux.conf \\; display-message \"~/.tmux.conf reloaded.\"\n\n# set window split\nbind-key v split-window -h\nbind-key b split-window\n\n# default window title colors\nset-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0\n\n# active window title colors\nset-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange\n\n# pane border\nset-option -g pane-border-style fg=colour235 #fg=base02\nset-option -g pane-active-border-style fg=colour240 #fg=base01\n\n# message text\nset-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange\n\n# pane number display\nset-option -g display-panes-active-colour colour33 #blue\nset-option -g display-panes-colour colour166 #orange\n# clock\nset-window-option -g clock-mode-colour green #green\n\n\nset -g status-interval 1\nset -g status-justify centre # center align window list\nset -g status-left-length 20\nset -g status-right-length 140\nset -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'\nset -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d \" \" | cut -f 1 -d \",\") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'\n\n# C-b is not acceptable -- Vim uses it\nset-option -g prefix C-a\nbind-key C-a last-window\n\n# Start numbering at 1\nset -g base-index 1\n\n# Allows for faster key repetition\nset -s escape-time 50\n\n# Rather than constraining window size to the maximum size of any client \n# connected to the *session*, constrain window size to the maximum size of any \n# client connected to *that window*. Much more reasonable.\nsetw -g aggressive-resize on\n\n# Allows us to use C-a a <command> to send commands to a TMUX session inside \n# another TMUX session\nbind-key a send-prefix\n\n# Activity monitoring\nsetw -g monitor-activity on\nset -g visual-activity on\n\n# hjkl pane traversal\nbind h select-pane -L\nbind j select-pane -D\nbind k select-pane -U\nbind l select-pane -R\n\n# set to main-horizontal, 66% height for main pane\nbind m run-shell \"~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66\"\n# Same thing for verical layouts\nbind M run-shell \"~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50\"\n\nbind-key C command-prompt -p \"Name of new window: \" \"new-window -n '%%'\"\n\n# reload config\nbind r source-file ~/.tmux.conf \\; display-message \"Config reloaded...\"\n\n# auto window rename\nset-window-option -g automatic-rename\n\n# https://github.com/edkolev/dots/blob/master/tmux.conf\n# Updates for tmux 1.9's current pane splitting paths.\n\n# from powerline\nrun-shell \"tmux set-environment -g TMUX_VERSION_MAJOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1 | sed 's/[^0-9]*//g')\"\nrun-shell \"tmux set-environment -g TMUX_VERSION_MINOR $(tmux -V | cut -d' ' -f2 | cut -d'.' -f2 | sed 's/[^0-9]*//g')\"\n\n# Vi copypaste mode\nset-window-option -g mode-keys vi\nif-shell \"test '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \\)'\" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'\nif-shell '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'\n\n# status bar\nif-shell '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set-option -g status-utf8 on'\n\n# rm mouse mode fail\nif-shell '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\\)' 'set -g mouse off'\nif-shell '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'\n\n# fix pane_current_path on new window and splits\nif-shell \"test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \\( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \\)'\" 'unbind c; bind c new-window -c \"#{pane_current_path}\"'\nif-shell \"test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \\( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \\)'\" \"unbind '\\\"'; bind '\\\"' split-window -v -c '#{pane_current_path}'\"\nif-shell \"test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \\( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \\)'\" 'unbind v; bind v split-window -h -c \"#{pane_current_path}\"'\nif-shell \"test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \\( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \\)'\" 'unbind \"%\"; bind % split-window -h -c \"#{pane_current_path}\"'\n\n\n# Colors\n# How to use true colors in vim under tmux? #1246 for 2.6 and higher\n# https://github.com/tmux/tmux/issues/1246:\n# set -g default-terminal \"tmux-256color\"\n# set -ga terminal-overrides \",*256col*:Tc\"\n# 2.5 and lower:\n# set -g default-terminal \"xterm-256color\"\n\n# Doesn't work on iterm2 / mac\n# if-shell \"test '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \\)'\" 'set -g default-terminal \"tmux-256color\"'\n# if-shell \"test '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \\)'\" 'set -ga terminal-overrides \",*256col*:Tc\"'\n\n# Try xterm256-color (https://github.com/tmux/tmux/issues/622):\nif-shell \"test '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \\)'\" 'set -g default-terminal \"xterm-256color\"'\nif-shell \"test '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \\)'\" 'set -ga terminal-overrides \",xterm-256color:Tc\"'\n\nif-shell '\\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 6\\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g default-terminal \"xterm-256color\"'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.8984375,
          "content": "[tmux](http://tmux.sourceforge.net/) is a terminal multiplexer.\n\n- Tested with tmux 1.5+.\n- Support for [tmux-mem-cpu-load](http://github.com/thewtex/tmux-mem-cpu-load).\n- Prefix mapped to Ctrl-A for `screen` users.\n\nNew to tmux? [_The Tao of tmux_](https://leanpub.com/the-tao-of-tmux) is now available on Leanpub\nand [Amazon Kindle](http://amzn.to/2gPfRhC). Read and browse the book for\n[on the web](https://leanpub.com/the-tao-of-tmux/read).\n\nWant more tmux? Check out the [libtmux](https://github.com/tony/libtmux) python library for\ncontrolling tmux, and load your code projects via YAML/JSON with\n[tmuxp](https://github.com/tony/tmuxp).\n\n## Share your .dot-configs\n\nHave a tmux configuration you'd like to share? Whether a fork of this project, another's, or your\nown, submit it to [awesome-tmux-configs](https://github.com/tony/awesome-tmux-configs).\n\n## Installation\n\nDownload:\n\n```bash\ngit clone --recursive https://github.com/tony/tmux-config.git ~/.tmux\n```\n\nCopy tmux config to home:\n\n```bash\nln -s ~/.tmux/.tmux.conf ~/.tmux.conf\n```\n\nGo to config dir:\n\n```bash\ncd ~/.tmux\n```\n\n## Stats\n\n### tmux-mem-cpu-load\n\nWorks on Linux and OS X.\n\nPrep ourself to download submodule (if you forgot `--recursive` when cloning):\n\n```bash\ngit submodule init\n```\n\nDownload submodule:\n\n```bash\ngit submodule update\n```\n\nChange dir to tmux-mem-cpu-load:\n\n```bash\ncd ~/.tmux/vendor/tmux-mem-cpu-load\n```\n\nMake `_build` directory and `cd` into it:\n\n```bash\nmkdir _build; cd _build\n```\n\nGeneral make file:\n\n```bash\ncmake ..\n```\n\nCompile binary:\n\n```bash\nmake\n```\n\nInstall our binary to `/usr/local/bin/tmux-mem-cpu-load`:\n\n```bash\nsudo make install\n```\n\n(No need to do `sudo` if on OS X / macOS)\n\nGo home:\n\n```bash\ncd ~\n```\n\nLaunch tmux:\n\n```\ntmux\n```\n\nAnd press `Control + a` then `d` to go back to the terminal.\n\nUpdate config:\n\n```bash\ntmux source-file ~/.tmux.conf\n```\n\n### basic-cpu-and-memory.tmux\n\n(Cross platform, tested with python 2.7+)\n\nUpdate March 19, 2014. Works with psutil 2.0 now.\n\nInstall `psutil`:\n\n```bash\nsudo pip install psutil\n```\n\nCopy `~/.tmux/vendor/basic-cpu-and-memory.tmux` to bin:\n\n```bash\nsudo cp ~/.tmux/vendor/basic-cpu-and-memory.tmux /usr/local/bin/tmux-mem-cpu-load\n```\n\nmake executable:\n\n```bash\nsudo chmod +x /usr/local/bin/tmux-mem-cpu-load\n```\n\n### Powerline (Advanced)\n\nYou can add suport for [powerline](https://github.com/powerline/powerline) by adding these to your\n`~/.tmux.conf`. Be sure to grab and install [powerline-fonts](https://github.com/powerline/fonts)\nfor your system.\n\nSee [Powerline on ReadTheDocs.org](https://powerline.readthedocs.org/en/master/) for more info.\n\n```\n# pip install --user git+git://github.com/powerline/powerline\nif-shell 'test -f ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'\n\n# [sudo] pip install git+git://github.com/powerline/powerline\nif-shell 'test -f /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'\n\n# [sudo] pip install git+git://github.com/powerline/powerline\nif-shell 'test -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf'\n# python 3.3 ?\nif-shell 'test -f /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf'\n# python 3.4 ?\n# if-shell 'test -f /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf'\n# python 3.5 ?\n# if-shell 'test -f /usr/local/lib/python3.5/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.5/dist-packages/powerline/bindings/tmux/powerline.conf'\n# python 3.6 ?\n# if-shell 'test -f /usr/local/lib/python3.6/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.6/dist-packages/powerline/bindings/tmux/powerline.conf'\n```\n\n## Start tmux\n\nTo start a session:\n\n`tmux`\n\nTo reattach a previous session:\n\n`tmux attach`\n\nTo reload config file\n\n`<Control + b>:` (which could Ctrl-B or Ctrl-A if you overidden it) then `source-file ~/.tmux.conf`\n\n## Commands\n\nOur prefix/leader key is `Control + a` now (just like the `screen` multiplexer). This sequence must\nbe typed before any tmux shortcut.\n\n- `Control + a` before any command\n- `Control + a` then `?` to bring up list of keyboard shortcuts\n- `Control + a` then `\"` to split window\n- `Control + a` then `<Space>` to change pane arrangement\n- `Control + a` then `o` to rotate panes\n- `Control + a` then `h`, `j`, `k`, `l` to move left, down, up, right. Respectively. (vim hjkl)\n- `Control + a` then `;` to go to last panel\n\nBeyond your first window:\n\n- `Control + a` then `c` to create a new window\n- `Control + a` then `n` to next window\n- `Control + a` then `p` to previous window\n- `Control + a` then `[0-9]` move to window number\n- `Control + a` then `&` to kill window\n\nCustom:\n\n- `Control + a` then `m` to switch to `main-horizontal` layout with the main window at 2/3 height..\n- `Control + a` then `M` to switch to `main-vertical` layout with the main window at half width.\n\n## More configs / Tools\n\n- _Save / Load your tmux workspaces through JSON or YAML_ with\n  [tmuxp](https://github.com/tony/tmuxp).\n- _Clone + Synchronize your git / hg / svn projects through JSON / YAML_ with\n  [vcspull](https://github.com/tony/vcspull).\n- _Modular, Lazy-loading vim configuration_ with support for C, C++, Python, Go and Javascript with\n  [tony/vim-config](https://github.com/tony/vim-config)\n- _Modular dot-config example_ [tony/.dot-config](https://github.com/tony/.dot-config)\n\n## Other\n\n- Github: http://www.github.com/tony\n- Website: http://www.git-pull.com\n- LICENSE: MIT\n- Author: Tony Narlock (tony@git-pull.com)\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.58984375,
          "content": "# Author arthurkiller\n# email arthur-lee@qq.com\n# data 2017-1-4\n# this shell is used for initialize the tmux-config\n\n#!/bin/bash\n\ntrap exit ERR\nif [ -d $HOME/.tmux  ]\nthen\n    echo .tmux already exist\n    mv $HOME/.tmux $HOME/.tmux.bak\nfi\n\nif [ -e $HOME/.tmux.conf  ]\nthen\n    echo .tmux.conf already exist\n    mv $HOME/.tmux.conf $HOME/.tmux.conf.bak\nfi\n\ncp -r $HOME/tmux-config $HOME/.tmux\nln -s $HOME/.tmux/.tmux.conf $HOME/.tmux.conf\n\ncd ~/.tmux && git submodule init && git submodule update\n\ncd ~/.tmux/vendor/tmux-mem-cpu-load && cmake . && make && sudo make install\n\ntmux source-file ~/.tmux.conf\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}