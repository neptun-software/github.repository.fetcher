{
  "metadata": {
    "timestamp": 1736568797982,
    "page": 939,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "atrandys/trojan",
      "stars": 1066,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.009765625,
          "content": "troooojan\n"
        },
        {
          "name": "SwitchyOmega_Chromium.crx",
          "type": "blob",
          "size": 935.369140625,
          "content": null
        },
        {
          "name": "fakesite.zip",
          "type": "blob",
          "size": 521.1865234375,
          "content": null
        },
        {
          "name": "index.zip",
          "type": "blob",
          "size": 161.5546875,
          "content": null
        },
        {
          "name": "trojan-cli-haproxy.zip",
          "type": "blob",
          "size": 19206.9521484375,
          "content": ""
        },
        {
          "name": "trojan-cli.zip",
          "type": "blob",
          "size": 17614.955078125,
          "content": ""
        },
        {
          "name": "trojan-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "trojan.zip",
          "type": "blob",
          "size": 1632.6376953125,
          "content": null
        },
        {
          "name": "trojan4balance.sh",
          "type": "blob",
          "size": 7.759765625,
          "content": "#!/bin/bash\n\nblue(){\n    echo -e \"\\033[34m\\033[01m$1\\033[0m\"\n}\ngreen(){\n    echo -e \"\\033[32m\\033[01m$1\\033[0m\"\n}\nred(){\n    echo -e \"\\033[31m\\033[01m$1\\033[0m\"\n}\n#copy from 秋水逸冰 ss scripts\nif [[ -f /etc/redhat-release ]]; then\n    release=\"centos\"\n    systemPackage=\"yum\"\n    systempwd=\"/usr/lib/systemd/system/\"\nelif cat /etc/issue | grep -Eqi \"debian\"; then\n    release=\"debian\"\n    systemPackage=\"apt-get\"\n    systempwd=\"/lib/systemd/system/\"\nelif cat /etc/issue | grep -Eqi \"ubuntu\"; then\n    release=\"ubuntu\"\n    systemPackage=\"apt-get\"\n    systempwd=\"/lib/systemd/system/\"\nelif cat /etc/issue | grep -Eqi \"centos|red hat|redhat\"; then\n    release=\"centos\"\n    systemPackage=\"yum\"\n    systempwd=\"/usr/lib/systemd/system/\"\nelif cat /proc/version | grep -Eqi \"debian\"; then\n    release=\"debian\"\n    systemPackage=\"apt-get\"\n    systempwd=\"/lib/systemd/system/\"\nelif cat /proc/version | grep -Eqi \"ubuntu\"; then\n    release=\"ubuntu\"\n    systemPackage=\"apt-get\"\n    systempwd=\"/lib/systemd/system/\"\nelif cat /proc/version | grep -Eqi \"centos|red hat|redhat\"; then\n    release=\"centos\"\n    systemPackage=\"yum\"\n    systempwd=\"/usr/lib/systemd/system/\"\nfi\n\n$systemPackage -y install net-tools\nPort80=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 80`\nPort443=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 443`\nif [ -n \"$Port443\" ]; then\n    process443=`netstat -tlpn | awk -F '[: ]+' '$5==\"443\"{print $9}'`\n    red \"=============================================================\"\n    red \"检测到443端口被占用，占用进程为：${process443}，本次安装结束\"\n    red \"=============================================================\"\n    exit 1\nfi\nif [ -n \"$Port80\" ]; then\n    process80=`netstat -tlpn | awk -F '[: ]+' '$5==\"80\"{print $9}'`\n    red \"=============================================================\"\n    red \"检测到80端口被占用，占用进程为：${process80}，本次安装结束\"\n    red \"=============================================================\"\n    exit 1\nfi\nCHECK=$(grep SELINUX= /etc/selinux/config | grep -v \"#\")\nif [ \"$CHECK\" == \"SELINUX=enforcing\" ]; then\n    red \"=======================================================================\"\n    red \"检测到SELinux为开启状态，为防止申请证书失败，请先重启VPS后，再执行本脚本\"\n    red \"=======================================================================\"\n    read -p \"是否现在重启 ?请输入 [Y/n] :\" yn\n\t[ -z \"${yn}\" ] && yn=\"y\"\n\tif [[ $yn == [Yy] ]]; then\n\t    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n            setenforce 0\n\t    echo -e \"VPS 重启中...\"\n\t    reboot\n\tfi\n    exit\nfi\nif [ \"$CHECK\" == \"SELINUX=permissive\" ]; then\n    red \"=======================================================================\"\n    red \"检测到SELinux为宽容状态，为防止申请证书失败，请先重启VPS后，再执行本脚本\"\n    red \"=======================================================================\"\n    read -p \"是否现在重启 ?请输入 [Y/n] :\" yn\n\t[ -z \"${yn}\" ] && yn=\"y\"\n\tif [[ $yn == [Yy] ]]; then\n\t    sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config\n            setenforce 0\n\t    echo -e \"VPS 重启中...\"\n\t    reboot\n\tfi\n    exit\nfi\nif [ \"$release\" == \"centos\" ]; then\n    if  [ -n \"$(grep ' 6\\.' /etc/redhat-release)\" ] ;then\n    red \"===============\"\n    red \"当前系统不受支持\"\n    red \"===============\"\n    exit\n    fi\n    if  [ -n \"$(grep ' 5\\.' /etc/redhat-release)\" ] ;then\n    red \"===============\"\n    red \"当前系统不受支持\"\n    red \"===============\"\n    exit\n    fi\n    systemctl stop firewalld\n    systemctl disable firewalld\n    rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nelif [ \"$release\" == \"ubuntu\" ]; then\n    if  [ -n \"$(grep ' 14\\.' /etc/os-release)\" ] ;then\n    red \"===============\"\n    red \"当前系统不受支持\"\n    red \"===============\"\n    exit\n    fi\n    if  [ -n \"$(grep ' 12\\.' /etc/os-release)\" ] ;then\n    red \"===============\"\n    red \"当前系统不受支持\"\n    red \"===============\"\n    exit\n    fi\n    systemctl stop ufw\n    systemctl disable ufw\n    apt-get update\nfi\n$systemPackage -y install  nginx wget unzip zip curl tar socat >/dev/null 2>&1\nsystemctl enable nginx\nsystemctl stop nginx\ncat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    server {\n        listen       7777;\n        server_name  $1;\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n    }\n}\nEOF\n\n#设置伪装站\nmkdir /usr/share/nginx/html\nrm -rf /usr/share/nginx/html/*\ncd /usr/share/nginx/html/\nwget https://github.com/atrandys/v2ray-ws-tls/raw/master/web.zip\nunzip web.zip\nsystemctl start nginx\n\n#申请https证书\nmkdir /usr/src/trojan-cert\ncurl https://get.acme.sh | sh\n~/.acme.sh/acme.sh --issue -d $1 --standalone\n~/.acme.sh/acme.sh  --installcert  -d  $1   \\\n--key-file   /usr/src/trojan-cert/private.key \\\n--fullchain-file /usr/src/trojan-cert/fullchain.cer\nif test -s /usr/src/trojan-cert/fullchain.cer; then\n    cd /usr/src\n    #wget https://github.com/trojan-gfw/trojan/releases/download/v1.13.0/trojan-1.13.0-linux-amd64.tar.xz\n    wget https://api.github.com/repos/trojan-gfw/trojan/releases/latest\n    latest_version=`grep tag_name latest| awk -F '[:,\"v]' '{print $6}'`\n    wget https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-linux-amd64.tar.xz\n    tar xf trojan-${latest_version}-linux-amd64.tar.xz\n    #trojan_passwd=$(cat /dev/urandom | head -1 | md5sum | head -c 8)\n    rm -rf /usr/src/trojan/server.conf\n    cat > /usr/src/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 7777,\n    \"password\": [\n        \"$2\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/usr/src/trojan-cert/fullchain.cer\",\n        \"key\": \"/usr/src/trojan-cert/private.key\",\n        \"key_password\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n\t\"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    }\n}\nEOF\n\n#增加启动脚本\n\t\n    cat > ${systempwd}trojan.service <<-EOF\n[Unit]  \nDescription=trojan  \nAfter=network.target  \n   \n[Service]  \nType=simple  \nPIDFile=/usr/src/trojan/trojan/trojan.pid\nExecStart=/usr/src/trojan/trojan -c \"/usr/src/trojan/server.conf\"  \nExecReload=  \nExecStop=/usr/src/trojan/trojan  \nPrivateTmp=true  \n   \n[Install]  \nWantedBy=multi-user.target\nEOF\n\n    chmod +x ${systempwd}trojan.service\n    systemctl start trojan.service \n    systemctl enable trojan.service \n    green \"===============\"\n    green \"Trojan已安装完成\"\n    green \"===============\"\nelse\n    red \"===================================\"\n    red \"https证书没有申请成果，自动安装失败\" \n    green \"不要担心，你可以手动修复证书申请\"\n    red \"===================================\"\nfi\n"
        },
        {
          "name": "trojan_centos7.sh",
          "type": "blob",
          "size": 7.3720703125,
          "content": "#!/bin/bash\n\nblue(){\n    echo -e \"\\033[34m\\033[01m$1\\033[0m\"\n}\ngreen(){\n    echo -e \"\\033[32m\\033[01m$1\\033[0m\"\n}\nred(){\n    echo -e \"\\033[31m\\033[01m$1\\033[0m\"\n}\nyellow(){\n    echo -e \"\\033[33m\\033[01m$1\\033[0m\"\n}\nbred(){\n    echo -e \"\\033[31m\\033[01m\\033[05m$1\\033[0m\"\n}\nbyellow(){\n    echo -e \"\\033[33m\\033[01m\\033[05m$1\\033[0m\"\n}\n\nif [ ! -e '/etc/redhat-release' ]; then\nred \"===============\"\nred \" 仅支持CentOS7\"\nred \"===============\"\nexit\nfi\nif  [ -n \"$(grep ' 6\\.' /etc/redhat-release)\" ] ;then\nred \"===============\"\nred \" 仅支持CentOS7\"\nred \"===============\"\nexit\nfi\n\nfunction install_trojan(){\nsystemctl stop firewalld\nsystemctl disable firewalld\nCHECK=$(grep SELINUX= /etc/selinux/config | grep -v \"#\")\nif [ \"$CHECK\" == \"SELINUX=enforcing\" ]; then\n    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n    setenforce 0\nfi\nif [ \"$CHECK\" == \"SELINUX=permissive\" ]; then\n    sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config\n    setenforce 0\nfi\nyum -y install bind-utils wget unzip zip curl tar\ngreen \"=======================\"\nyellow \"请输入绑定到本VPS的域名\"\ngreen \"=======================\"\nread your_domain\nreal_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`\nlocal_addr=`curl ipv4.icanhazip.com`\nif [ $real_addr == $local_addr ] ; then\n\tgreen \"==========================================\"\n\tgreen \"域名解析正常，开启安装nginx并申请https证书\"\n\tgreen \"==========================================\"\n\tsleep 1s\n\trpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n    \tyum install -y nginx\n\tsystemctl enable nginx.service\n\t#设置伪装站\n\trm -rf /usr/share/nginx/html/*\n\tcd /usr/share/nginx/html/\n\twget https://github.com/atrandys/v2ray-ws-tls/raw/master/web.zip\n    \tunzip web.zip\n\tsystemctl restart nginx.service\n\t#申请https证书\n\tmkdir /usr/src/trojan-cert\n\tcurl https://get.acme.sh | sh\n\t~/.acme.sh/acme.sh  --issue  -d $your_domain  --webroot /usr/share/nginx/html/\n    \t~/.acme.sh/acme.sh  --installcert  -d  $your_domain   \\\n        --key-file   /usr/src/trojan-cert/private.key \\\n        --fullchain-file /usr/src/trojan-cert/fullchain.cer \\\n        --reloadcmd  \"systemctl force-reload  nginx.service\"\n\tif test -s /usr/src/trojan-cert/fullchain.cer; then\n        cd /usr/src\n\t#wget https://github.com/trojan-gfw/trojan/releases/download/v1.13.0/trojan-1.13.0-linux-amd64.tar.xz\n\twget https://github.com/trojan-gfw/trojan/releases/download/v1.14.0/trojan-1.14.0-linux-amd64.tar.xz\n\ttar xf trojan-1.*\n\t#下载trojan客户端\n\twget https://github.com/atrandys/trojan/raw/master/trojan-cli.zip\n\tunzip trojan-cli.zip\n\tcp /usr/src/trojan-cert/fullchain.cer /usr/src/trojan-cli/fullchain.cer\n\ttrojan_passwd=$(cat /dev/urandom | head -1 | md5sum | head -c 8)\n\tcat > /usr/src/trojan-cli/config.json <<-EOF\n{\n    \"run_type\": \"client\",\n    \"local_addr\": \"127.0.0.1\",\n    \"local_port\": 1080,\n    \"remote_addr\": \"$your_domain\",\n    \"remote_port\": 443,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"verify\": true,\n        \"verify_hostname\": true,\n        \"cert\": \"fullchain.cer\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n\t\"sni\": \"\",\n        \"alpn\": [\n            \"h2\",\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"curves\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    }\n}\nEOF\n\trm -rf /usr/src/trojan/server.conf\n\tcat > /usr/src/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 80,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/usr/src/trojan-cert/fullchain.cer\",\n        \"key\": \"/usr/src/trojan-cert/private.key\",\n        \"key_password\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n\t\"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    },\n    \"mysql\": {\n        \"enabled\": false,\n        \"server_addr\": \"127.0.0.1\",\n        \"server_port\": 3306,\n        \"database\": \"trojan\",\n        \"username\": \"trojan\",\n        \"password\": \"\"\n    }\n}\nEOF\n\tcd /usr/src/trojan-cli/\n\tzip -q -r trojan-cli.zip /usr/src/trojan-cli/\n\ttrojan_path=$(cat /dev/urandom | head -1 | md5sum | head -c 16)\n\tmkdir /usr/share/nginx/html/${trojan_path}\n\tmv /usr/src/trojan-cli/trojan-cli.zip /usr/share/nginx/html/${trojan_path}/\n\t#增加启动脚本\n\t\n\tcat > /usr/lib/systemd/system/trojan.service <<-EOF\n[Unit]  \nDescription=trojan  \nAfter=network.target  \n   \n[Service]  \nType=simple  \nPIDFile=/usr/src/trojan/trojan/trojan.pid\nExecStart=/usr/src/trojan/trojan -c \"/usr/src/trojan/server.conf\"  \nExecReload=  \nExecStop=/usr/src/trojan/trojan  \nPrivateTmp=true  \n   \n[Install]  \nWantedBy=multi-user.target\nEOF\n\n\tchmod +x /usr/lib/systemd/system/trojan.service\n\tsystemctl start trojan.service\n\tsystemctl enable trojan.service\n\tgreen \"======================================================================\"\n\tgreen \"Trojan已安装完成，请使用以下链接下载trojan客户端，此客户端已配置好所有参数\"\n\tgreen \"1、复制下面的链接，在浏览器打开，下载客户端\"\n\tblue \"http://${your_domain}/$trojan_path/trojan-cli.zip\"\n\tgreen \"2、将下载的压缩包解压，打开文件夹，打开start.bat即打开并运行Trojan客户端\"\n\tgreen \"3、打开stop.bat即关闭Trojan客户端\"\n\tgreen \"4、Trojan客户端需要搭配浏览器插件使用，例如switchyomega等\"\n\tgreen \"======================================================================\"\n\telse\n        red \"================================\"\n\tred \"https证书没有申请成果，本次安装失败\"\n\tred \"================================\"\n\tfi\n\t\nelse\n\tred \"================================\"\n\tred \"域名解析地址与本VPS IP地址不一致\"\n\tred \"本次安装失败，请确保域名解析正常\"\n\tred \"================================\"\nfi\n}\n\nfunction remove_trojan(){\n    red \"================================\"\n    red \"即将卸载trojan\"\n    red \"同时卸载安装的nginx\"\n    red \"================================\"\n    systemctl stop trojan\n    systemctl disable trojan\n    rm -f /usr/lib/systemd/system/trojan.service\n    yum remove -y nginx\n    rm -rf /usr/src/trojan*\n    rm -rf /usr/share/nginx/html/*\n    green \"==============\"\n    green \"trojan删除完毕\"\n    green \"==============\"\n}\nstart_menu(){\n    clear\n    green \" ====================================\"\n    green \" 介绍：一键安装trojan      \"\n    green \" 系统：>=centos7                       \"\n    green \" 作者：A                      \"\n    green \" ====================================\"\n    echo\n    green \" 1. 安装trojan\"\n    red \" 2. 卸载trojan\"\n    yellow \" 0. 退出脚本\"\n    echo\n    read -p \"请输入数字:\" num\n    case \"$num\" in\n    1)\n    install_trojan\n    ;;\n    2)\n    remove_trojan \n    ;;\n    0)\n    exit 1\n    ;;\n    *)\n    clear\n    red \"请输入正确数字\"\n    sleep 1s\n    start_menu\n    ;;\n    esac\n}\n\nstart_menu\n"
        },
        {
          "name": "trojan_install.sh",
          "type": "blob",
          "size": 4.2783203125,
          "content": "#!/bin/bash\n\n#仅仅搞centos7\nif [ ! -e '/etc/redhat-release' ]; then\necho \"仅支持centos7\"\nexit\nfi\nif  [ -n \"$(grep ' 6\\.' /etc/redhat-release)\" ] ;then\necho \"仅支持centos7\"\nexit\nfi\n\ninstall_docker(){\n\n\tyum remove -y docker docker-client docker-client-latest docker-common docker-latest  docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine\t\t\n\tyum install -y yum-utils device-mapper-persistent-data lvm2\n\tyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\tyum makecache fast\n\tyum -y install docker-ce\n\tsystemctl start docker\n\tsystemctl enable docker\n\n}\n\nconfig_website(){\n\n\tcd /usr/src/trojan/web\n\twget https://github.com/atrandys/trojan/raw/master/index.zip\n\tunzip index.zip\n\n}\n\nuninstall_trojan(){\n\tdocker update --restart=no trojan\n\tdocker stop trojan\n\tdocker rm trojan\n\trm -rf /usr/src/trojan/\n\techo \"=================\"\n\techo \"    卸载完成\"\n\techo \"=================\"\n}\n\nconfig_trojan(){\n\nyum -y install  wget unzip vim tcl expect expect-devel\nmkdir /usr/src/trojan\nmkdir /usr/src/trojan/web\ncd /usr/src/trojan\nread -p \"输入你的VPS绑定的域名：\" domain\nSUBJECT=\"/C=US/ST=Mars/L=iTranswarp/O=iTranswarp/OU=iTranswarp/CN=$domain\"\necho \"============================\"\necho \" 接下来需要设定密码，输入两次（随意设置，5-10位）\"\necho \"============================\"\nopenssl genrsa -des3 -out private.key 1024\necho \"============================\"\necho \" 接下来需要输入刚设定的密码\"\necho \"============================\"\nopenssl req -new -subj $SUBJECT -key private.key -out private.csr\necho \"============================\"\necho \" 再次输入刚设定的密码\"\necho \"============================\"\nmv private.key private.or.key\nopenssl rsa -in private.or.key -out private.key\nopenssl x509 -req -days 3650 -in private.csr -signkey private.key -out private.crt\n\ncat > /usr/src/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 80,\n    \"password\": [\n        \"password1\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/usr/src/trojan/private.crt\",\n        \"key\": \"/usr/src/trojan/private.key\",\n        \"key_password\": \"\",\n        \"cipher\": \"ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256\",\n        \"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    },\n    \"mysql\": {\n        \"enabled\": false,\n        \"server_addr\": \"127.0.0.1\",\n        \"server_port\": 3306,\n        \"database\": \"trojan\",\n        \"username\": \"trojan\",\n        \"password\": \"\"\n    }\n}\nEOF\n\necho \"============================\"\necho \" 设置验证密码，服务端和客户端使用相同密码\"\necho \"============================\"\nread -p \"设置密码：\" mypassword\nsed -i \"s/password1/$mypassword/\" /usr/src/trojan/server.conf\n\n}\n\nstart_docker(){\n\n        sudo firewall-cmd --zone=public --add-port=80/tcp --permanent\n\tsudo firewall-cmd --zone=public --add-port=443/tcp --permanent\n\tsudo firewall-cmd --reload\n\tdocker run --name trojan --restart=always -d -p 80:80 -p 443:443 -v /usr/src/trojan:/usr/src/trojan  atrandys/trojan sh -c \"/etc/init.d/nginx start && trojan -c /usr/src/trojan/server.conf\"\n\techo \"============================\"\n\techo \"       trojan启动完成\"\n\techo \"============================\"\n}\n\nstart_menu(){\n    clear\n    echo \"=========================\"\n    echo \" 介绍：适用于CentOS7\"\n    echo \" 作者：A\"\n    echo \"=========================\"\n    echo \"1. 安装Trojan\"\n    echo \"2. 卸载Trojan\"\n    echo \"3. 退出\"\n    echo\n    read -p \"请输入数字:\" num\n    case \"$num\" in\n    \t1)\n\tinstall_docker\n\tconfig_trojan\n\tconfig_website\n\tstart_docker\n\t;;\n\t2)\n\tuninstall_trojan\n\t;;\n\t3)\n\texit 1\n\t;;\n\t*)\n\tclear\n\techo \"请输入正确数字\"\n\tsleep 5s\n\tstart_menu\n\t;;\n    esac\n}\n\nstart_menu\n"
        },
        {
          "name": "trojan_install_ubuntu.sh",
          "type": "blob",
          "size": 5.0205078125,
          "content": "#!/bin/bash\n\nfunction blue(){\n    echo -e \"\\033[34m\\033[01m $1 \\033[0m\"\n}\nfunction green(){\n    echo -e \"\\033[32m\\033[01m $1 \\033[0m\"\n}\nfunction red(){\n    echo -e \"\\033[31m\\033[01m $1 \\033[0m\"\n}\nfunction yellow(){\n    echo -e \"\\033[33m\\033[01m $1 \\033[0m\"\n}\n\nsystemctl stop ufw\nsystemctl disable ufw\n\nsudo apt-get install -y software-properties-common\nsudo add-apt-repository -y ppa:greaterfire/trojan\nsudo apt-get -y update\nsudo apt-get -y install unzip wget curl trojan\n\nsudo apt-get -y install nginx\nmkdir /etc/nginx/ssl\n\ngreen \"======================\"\ngreen \" 输入解析到此VPS的域名\"\ngreen \"======================\"\nread domain\n\ncat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    include /etc/nginx/conf.d/*.conf;\n}\nEOF\n\ncat > /etc/nginx/conf.d/default.conf<<-EOF\nserver {\n    listen       80;\n    server_name  $domain;\n    location / {\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n    }\n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n}\nEOF\n\nsystemctl restart nginx.service\n\ncurl https://get.acme.sh | sh\n~/.acme.sh/acme.sh  --issue  -d $domain  --webroot /usr/share/nginx/html/\n\n~/.acme.sh/acme.sh  --installcert  -d  $domain   \\\n        --key-file   /etc/nginx/ssl/$domain.key \\\n        --fullchain-file /etc/nginx/ssl/fullchain.cer \\\n        --reloadcmd  \"service nginx force-reload\"\n\ncd /etc/trojan/\nrm -f /etc/trojan/config.json\n\ncat > /etc/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 80,\n    \"password\": [\n        \"password1\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/etc/nginx/ssl/fullchain.cer\",\n        \"key\": \"/etc/nginx/ssl/$domain.key\",\n        \"key_password\": \"\",\n        \"cipher\": \"TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256\",\n        \"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"h2\",\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    },\n    \"mysql\": {\n        \"enabled\": false,\n        \"server_addr\": \"127.0.0.1\",\n        \"server_port\": 3306,\n        \"database\": \"trojan\",\n        \"username\": \"trojan\",\n        \"password\": \"\"\n    }\n}\nEOF\n\ncat > /etc/nginx/ssl/config.json <<-EOF\n{\n    \"run_type\": \"client\",\n    \"local_addr\": \"127.0.0.1\",\n    \"local_port\": 1080,\n    \"remote_addr\": \"$domain\",\n    \"remote_port\": 443,\n    \"password\": [\n        \"password1\"\n    ],\n    \"append_payload\": true,\n    \"log_level\": 1,\n    \"ssl\": {\n        \"verify\": true,\n        \"verify_hostname\": true,\n        \"cert\": \"fullchain.cer\",\n        \"cipher\": \"TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256\",\n        \"sni\": \"\",\n        \"alpn\": [\n            \"h2\",\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"curves\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    }\n}\nEOF\nmypassword=$(cat /dev/urandom | head -1 | md5sum | head -c 4)\nsed -i \"s/password1/$mypassword/\" /etc/trojan/server.conf\nsed -i \"s/password1/$mypassword/\" /etc/nginx/ssl/config.json\n\nrm -f /usr/share/nginx/html/*\ncd /usr/share/nginx/html\nwget https://github.com/atrandys/v2ray-ws-tls/raw/master/web.zip\nunzip web.zip\nsystemctl restart nginx.service\nsystemctl enable nginx.service\nsudo cat > /etc/init.d/trojanstart <<-EOF\n#! /bin/bash\n### BEGIN INIT INFO\n# Provides:\t\ttrojanstart\n# Required-Start:\t$remote_fs $syslog\n# Required-Stop:    $remote_fs $syslog\n# Default-Start:\t2 3 4 5\n# Default-Stop:\t\t0 1 6\n# Short-Description:\ttrojanstart\n### END INIT INFO\nnohup trojan -c /etc/trojan/server.conf > /etc/trojan/info.log 2>&1 &\nEOF\n\nsudo chmod +x /etc/init.d/trojanstart\nsudo update-rc.d trojanstart defaults\n\nnohup trojan -c /etc/trojan/server.conf > /etc/trojan/info.log 2>&1 &\n\ngreen \"===============安装OK===============\"\ngreen \" 证书文件：/etc/nginx/ssl/fullchain.cer\"\ngreen \" 客户端配置：/etc/nginx/ssl/config.json\"\ngreen \" 将以上两个文件传输到客户端trojan文件夹\"\n"
        },
        {
          "name": "trojan_mult.sh",
          "type": "blob",
          "size": 19.3427734375,
          "content": "#!/bin/bash\nfunction blue(){\n    echo -e \"\\033[34m\\033[01m$1\\033[0m\"\n}\nfunction green(){\n    echo -e \"\\033[32m\\033[01m$1\\033[0m\"\n}\nfunction red(){\n    echo -e \"\\033[31m\\033[01m$1\\033[0m\"\n}\nfunction version_lt(){\n    test \"$(echo \"$@\" | tr \" \" \"\\n\" | sort -rV | head -n 1)\" != \"$1\"; \n}\n\nsource /etc/os-release\nRELEASE=$ID\nVERSION=$VERSION_ID\nif [ \"$RELEASE\" == \"centos\" ]; then\n    release=\"centos\"\n    systemPackage=\"yum\"\nelif [ \"$RELEASE\" == \"debian\" ]; then\n    release=\"debian\"\n    systemPackage=\"apt-get\"\nelif [ \"$RELEASE\" == \"ubuntu\" ]; then\n    release=\"ubuntu\"\n    systemPackage=\"apt-get\"\nfi\nsystempwd=\"/etc/systemd/system/\"\n\nfunction install_trojan(){\n    $systemPackage install -y nginx\n    if [ ! -d \"/etc/nginx/\" ]; then\n        red \"nginx安装有问题，请使用卸载trojan后重新安装\"\n        exit 1\n    fi\n    cat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    server {\n        listen       80;\n        server_name  $your_domain;\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n    }\n}\nEOF\n    systemctl restart nginx\n    sleep 3\n    rm -rf /usr/share/nginx/html/*\n    cd /usr/share/nginx/html/\n    wget https://github.com/atrandys/trojan/raw/master/fakesite.zip >/dev/null 2>&1\n    unzip fakesite.zip >/dev/null 2>&1\n    sleep 5\n    if [ ! -d \"/usr/src\" ]; then\n        mkdir /usr/src\n    fi\n    if [ ! -d \"/usr/src/trojan-cert\" ]; then\n        mkdir /usr/src/trojan-cert /usr/src/trojan-temp\n        mkdir /usr/src/trojan-cert/$your_domain\n        if [ ! -d \"/usr/src/trojan-cert/$your_domain\" ]; then\n            red \"不存在/usr/src/trojan-cert/$your_domain目录\"\n            exit 1\n        fi\n        curl https://get.acme.sh | sh\n        ~/.acme.sh/acme.sh  --register-account  -m test@$your_domain --server zerossl\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --nginx\n        if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n            cert_success=\"1\"\n        fi\n    elif [ -f \"/usr/src/trojan-cert/$your_domain/fullchain.cer\" ]; then\n        cd /usr/src/trojan-cert/$your_domain\n        create_time=`stat -c %Y fullchain.cer`\n        now_time=`date +%s`\n        minus=$(($now_time - $create_time ))\n        if [  $minus -gt 5184000 ]; then\n            curl https://get.acme.sh | sh\n            ~/.acme.sh/acme.sh  --register-account  -m test@$your_domain --server zerossl\n            ~/.acme.sh/acme.sh  --issue  -d $your_domain  --nginx\n            if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n                cert_success=\"1\"\n            fi\n        else \n            green \"检测到域名$your_domain证书存在且未超过60天，无需重新申请\"\n            cert_success=\"1\"\n        fi        \n    else \n        mkdir /usr/src/trojan-cert/$your_domain\n        curl https://get.acme.sh | sh\n        ~/.acme.sh/acme.sh  --register-account  -m test@$your_domain --server zerossl\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --nginx\n        if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n            cert_success=\"1\"\n        fi\n    fi\n    \n    if [ \"$cert_success\" == \"1\" ]; then\n        cat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    server {\n        listen       127.0.0.1:80;\n        server_name  $your_domain;\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n    }\n    server {\n        listen       0.0.0.0:80;\n        server_name  $your_domain;\n        return 301 https://$your_domain\\$request_uri;\n    }\n    \n}\nEOF\n        systemctl restart nginx\n        systemctl enable nginx\n        cd /usr/src\n        wget https://api.github.com/repos/trojan-gfw/trojan/releases/latest >/dev/null 2>&1\n        latest_version=`grep tag_name latest| awk -F '[:,\"v]' '{print $6}'`\n        rm -f latest\n        green \"开始下载最新版trojan amd64\"\n        wget https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-linux-amd64.tar.xz\n        tar xf trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        rm -f trojan-${latest_version}-linux-amd64.tar.xz\n        #下载trojan客户端\n        green \"开始下载并处理trojan windows客户端\"\n        wget https://github.com/atrandys/trojan/raw/master/trojan-cli.zip\n        wget -P /usr/src/trojan-temp https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-win.zip\n        unzip -o trojan-cli.zip >/dev/null 2>&1\n        unzip -o /usr/src/trojan-temp/trojan-${latest_version}-win.zip -d /usr/src/trojan-temp/ >/dev/null 2>&1\n        mv -f /usr/src/trojan-temp/trojan/trojan.exe /usr/src/trojan-cli/\n        green \"请设置trojan密码，建议不要出现特殊字符\"\n        read -p \"请输入密码 :\" trojan_passwd\n        #trojan_passwd=$(cat /dev/urandom | head -1 | md5sum | head -c 8)\n        cat > /usr/src/trojan-cli/config.json <<-EOF\n{\n    \"run_type\": \"client\",\n    \"local_addr\": \"127.0.0.1\",\n    \"local_port\": 1080,\n    \"remote_addr\": \"$your_domain\",\n    \"remote_port\": 443,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"verify\": true,\n        \"verify_hostname\": true,\n        \"cert\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n        \"sni\": \"\",\n        \"alpn\": [\n            \"h2\",\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"curves\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    }\n}\nEOF\n         rm -rf /usr/src/trojan/server.conf\n         cat > /usr/src/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 80,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/usr/src/trojan-cert/$your_domain/fullchain.cer\",\n        \"key\": \"/usr/src/trojan-cert/$your_domain/private.key\",\n        \"key_password\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n        \"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    },\n    \"mysql\": {\n        \"enabled\": false,\n        \"server_addr\": \"127.0.0.1\",\n        \"server_port\": 3306,\n        \"database\": \"trojan\",\n        \"username\": \"trojan\",\n        \"password\": \"\"\n    }\n}\nEOF\n        cd /usr/src/trojan-cli/\n        zip -q -r trojan-cli.zip /usr/src/trojan-cli/\n        rm -rf /usr/src/trojan-temp/\n        rm -f /usr/src/trojan-cli.zip\n        trojan_path=$(cat /dev/urandom | head -1 | md5sum | head -c 16)\n        #mkdir /usr/share/nginx/html/${trojan_path}\n        #mv /usr/src/trojan-cli/trojan-cli.zip /usr/share/nginx/html/${trojan_path}/\t\n        cat > ${systempwd}trojan.service <<-EOF\n[Unit]  \nDescription=trojan  \nAfter=network.target  \n   \n[Service]  \nType=simple  \nPIDFile=/usr/src/trojan/trojan/trojan.pid\nExecStart=/usr/src/trojan/trojan -c \"/usr/src/trojan/server.conf\"  \nExecReload=/bin/kill -HUP \\$MAINPID\nRestart=on-failure\nRestartSec=1s\n   \n[Install]  \nWantedBy=multi-user.target\nEOF\n\n        chmod +x ${systempwd}trojan.service\n        systemctl enable trojan.service\n        cd /root\n        ~/.acme.sh/acme.sh  --installcert  -d  $your_domain   \\\n            --key-file   /usr/src/trojan-cert/$your_domain/private.key \\\n            --fullchain-file  /usr/src/trojan-cert/$your_domain/fullchain.cer \\\n            --reloadcmd  \"systemctl restart trojan\"\t\n        green \"===========================================================================\"\n        green \"windows客户端路径/usr/src/trojan-cli/trojan-cli.zip，此客户端已配置好所有参数\"\n        green \"===========================================================================\"\n        echo\n        echo\n        green \"                          客户端配置文件\"\n        green \"===========================================================================\"\n        cat /usr/src/trojan-cli/config.json\n        green \"===========================================================================\"\n    else\n        red \"===================================\"\n        red \"https证书没有申请成功，本次安装失败\"\n        red \"===================================\"\n    fi\n}\nfunction preinstall_check(){\n\n    nginx_status=`ps -aux | grep \"nginx: worker\" |grep -v \"grep\"`\n    if [ -n \"$nginx_status\" ]; then\n        systemctl stop nginx\n    fi\n    $systemPackage -y install net-tools socat >/dev/null 2>&1\n    Port80=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 80`\n    Port443=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 443`\n    if [ -n \"$Port80\" ]; then\n        process80=`netstat -tlpn | awk -F '[: ]+' '$5==\"80\"{print $9}'`\n        red \"===========================================================\"\n        red \"检测到80端口被占用，占用进程为：${process80}，本次安装结束\"\n        red \"===========================================================\"\n        exit 1\n    fi\n    if [ -n \"$Port443\" ]; then\n        process443=`netstat -tlpn | awk -F '[: ]+' '$5==\"443\"{print $9}'`\n        red \"=============================================================\"\n        red \"检测到443端口被占用，占用进程为：${process443}，本次安装结束\"\n        red \"=============================================================\"\n        exit 1\n    fi\n    if [ -f \"/etc/selinux/config\" ]; then\n        CHECK=$(grep SELINUX= /etc/selinux/config | grep -v \"#\")\n        if [ \"$CHECK\" == \"SELINUX=enforcing\" ]; then\n            green \"$(date +\"%Y-%m-%d %H:%M:%S\") - SELinux状态非disabled,关闭SELinux.\"\n            setenforce 0\n            sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n            #loggreen \"SELinux is not disabled, add port 80/443 to SELinux rules.\"\n            #loggreen \"==== Install semanage\"\n            #logcmd \"yum install -y policycoreutils-python\"\n            #semanage port -a -t http_port_t -p tcp 80\n            #semanage port -a -t http_port_t -p tcp 443\n            #semanage port -a -t http_port_t -p tcp 37212\n            #semanage port -a -t http_port_t -p tcp 37213\n        elif [ \"$CHECK\" == \"SELINUX=permissive\" ]; then\n            green \"$(date +\"%Y-%m-%d %H:%M:%S\") - SELinux状态非disabled,关闭SELinux.\"\n            setenforce 0\n            sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config\n        fi\n    fi\n    if [ \"$release\" == \"centos\" ]; then\n        if  [ -n \"$(grep ' 6\\.' /etc/redhat-release)\" ] ;then\n        red \"===============\"\n        red \"当前系统不受支持\"\n        red \"===============\"\n        exit\n        fi\n        if  [ -n \"$(grep ' 5\\.' /etc/redhat-release)\" ] ;then\n        red \"===============\"\n        red \"当前系统不受支持\"\n        red \"===============\"\n        exit\n        fi\n        firewall_status=`systemctl status firewalld | grep \"Active: active\"`\n        if [ -n \"$firewall_status\" ]; then\n            green \"检测到firewalld开启状态，添加放行80/443端口规则\"\n            firewall-cmd --zone=public --add-port=80/tcp --permanent\n            firewall-cmd --zone=public --add-port=443/tcp --permanent\n            firewall-cmd --reload\n        fi\n        rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm --force --nodeps\n    elif [ \"$release\" == \"ubuntu\" ]; then\n        if  [ -n \"$(grep ' 14\\.' /etc/os-release)\" ] ;then\n        red \"===============\"\n        red \"当前系统不受支持\"\n        red \"===============\"\n        exit\n        fi\n        if  [ -n \"$(grep ' 12\\.' /etc/os-release)\" ] ;then\n        red \"===============\"\n        red \"当前系统不受支持\"\n        red \"===============\"\n        exit\n        fi\n        ufw_status=`systemctl status ufw | grep \"Active: active\"`\n        if [ -n \"$ufw_status\" ]; then\n            ufw allow 80/tcp\n            ufw allow 443/tcp\n            ufw reload\n        fi\n        apt-get update\n    elif [ \"$release\" == \"debian\" ]; then\n        ufw_status=`systemctl status ufw | grep \"Active: active\"`\n        if [ -n \"$ufw_status\" ]; then\n            ufw allow 80/tcp\n            ufw allow 443/tcp\n            ufw reload\n        fi\n        apt-get update\n    fi\n    $systemPackage -y install  wget unzip zip curl tar >/dev/null 2>&1\n    green \"=======================\"\n    blue \"请输入绑定到本VPS的域名\"\n    green \"=======================\"\n    read your_domain\n    real_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`\n    local_addr=`curl ipv4.icanhazip.com`\n    if [ $real_addr == $local_addr ] ; then\n        green \"==========================================\"\n        green \"       域名解析正常，开始安装trojan\"\n        green \"==========================================\"\n        sleep 1s\n        install_trojan\n    else\n        red \"====================================\"\n        red \"域名解析地址与本VPS IP地址不一致\"\n        red \"若你确认解析成功你可强制脚本继续运行\"\n        red \"====================================\"\n        read -p \"是否强制运行 ?请输入 [Y/n] :\" yn\n        [ -z \"${yn}\" ] && yn=\"y\"\n        if [[ $yn == [Yy] ]]; then\n            green \"强制继续运行脚本\"\n            sleep 1s\n            install_trojan\n        else\n            exit 1\n        fi\n    fi\n}\n\nfunction repair_cert(){\n    systemctl stop nginx\n    #iptables -I INPUT -p tcp --dport 80 -j ACCEPT\n    #iptables -I INPUT -p tcp --dport 443 -j ACCEPT\n    Port80=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 80`\n    if [ -n \"$Port80\" ]; then\n        process80=`netstat -tlpn | awk -F '[: ]+' '$5==\"80\"{print $9}'`\n        red \"===========================================================\"\n        red \"检测到80端口被占用，占用进程为：${process80}，本次安装结束\"\n        red \"===========================================================\"\n        exit 1\n    fi\n    green \"============================\"\n    blue \"请输入绑定到本VPS的域名\"\n    blue \"务必与之前失败使用的域名一致\"\n    green \"============================\"\n    read your_domain\n    real_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`\n    local_addr=`curl ipv4.icanhazip.com`\n    if [ $real_addr == $local_addr ] ; then\n        ~/.acme.sh/acme.sh  --register-account  -m test@$your_domain --server zerossl\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --standalone\n        ~/.acme.sh/acme.sh  --installcert  -d  $your_domain   \\\n            --key-file   /usr/src/trojan-cert/$your_domain/private.key \\\n            --fullchain-file /usr/src/trojan-cert/$your_domain/fullchain.cer \\\n            --reloadcmd  \"systemctl restart trojan\"\n        if test -s /usr/src/trojan-cert/$your_domain/fullchain.cer; then\n            green \"证书申请成功\"\n            systemctl restart trojan\n            systemctl start nginx\n        else\n            red \"申请证书失败\"\n        fi\n    else\n        red \"================================\"\n        red \"域名解析地址与本VPS IP地址不一致\"\n        red \"本次安装失败，请确保域名解析正常\"\n        red \"================================\"\n    fi\n}\n\nfunction remove_trojan(){\n    red \"================================\"\n    red \"即将卸载trojan\"\n    red \"同时卸载安装的nginx\"\n    red \"================================\"\n    systemctl stop trojan\n    systemctl disable trojan\n    systemctl stop nginx\n    systemctl disable nginx\n    rm -f ${systempwd}trojan.service\n    if [ \"$release\" == \"centos\" ]; then\n        yum remove -y nginx\n    else\n        apt-get -y autoremove nginx\n        apt-get -y --purge remove nginx\n        apt-get -y autoremove && apt-get -y autoclean\n        find / | grep nginx | sudo xargs rm -rf\n    fi\n    rm -rf /usr/src/trojan/\n    rm -rf /usr/src/trojan-cli/\n    rm -rf /usr/share/nginx/html/*\n    rm -rf /etc/nginx/\n    rm -rf /root/.acme.sh/\n    green \"==============\"\n    green \"trojan删除完毕\"\n    green \"==============\"\n}\n\nfunction update_trojan(){\n    /usr/src/trojan/trojan -v 2>trojan.tmp\n    curr_version=`cat trojan.tmp | grep \"trojan\" | awk '{print $4}'`\n    wget https://api.github.com/repos/trojan-gfw/trojan/releases/latest >/dev/null 2>&1\n    latest_version=`grep tag_name latest| awk -F '[:,\"v]' '{print $6}'`\n    rm -f latest\n    rm -f trojan.tmp\n    if version_lt \"$curr_version\" \"$latest_version\"; then\n        green \"当前版本$curr_version,最新版本$latest_version,开始升级……\"\n        mkdir trojan_update_temp && cd trojan_update_temp\n        wget https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        tar xf trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        mv ./trojan/trojan /usr/src/trojan/\n        cd .. && rm -rf trojan_update_temp\n        systemctl restart trojan\n    /usr/src/trojan/trojan -v 2>trojan.tmp\n    green \"服务端trojan升级完成，当前版本：`cat trojan.tmp | grep \"trojan\" | awk '{print $4}'`，客户端请在trojan github下载最新版\"\n    rm -f trojan.tmp\n    else\n        green \"当前版本$curr_version,最新版本$latest_version,无需升级\"\n    fi\n   \n   \n}\n\nstart_menu(){\n    clear\n    green \" =======================================\"\n    green \" 介绍: 一键安装trojan      \"\n    green \" 系统: centos7+/debian9+/ubuntu16.04+\"\n    green \" 作者: A             \"\n    blue \" 注意:\"\n    red \" *1. 不要在任何生产环境使用此脚本\"\n    red \" *2. 不要占用80和443端口\"\n    red \" *3. 若第二次使用脚本，请先执行卸载trojan\"\n    green \" =======================================\"\n    echo\n    green \" 1. 安装trojan\"\n    red \" 2. 卸载trojan\"\n    green \" 3. 升级trojan\"\n    green \" 4. 修复证书\"\n    blue \" 0. 退出脚本\"\n    echo\n    read -p \"请输入数字 :\" num\n    case \"$num\" in\n    1)\n    preinstall_check\n    ;;\n    2)\n    remove_trojan \n    ;;\n    3)\n    update_trojan \n    ;;\n    4)\n    repair_cert \n    ;;\n    0)\n    exit 1\n    ;;\n    *)\n    clear\n    red \"请输入正确数字\"\n    sleep 1s\n    start_menu\n    ;;\n    esac\n}\n\nstart_menu\n"
        },
        {
          "name": "trojan_wp.sh",
          "type": "blob",
          "size": 23.5263671875,
          "content": "#!/bin/bash\nfunction blue(){\n    echo -e \"\\033[34m\\033[01m$1\\033[0m\"\n}\nfunction green(){\n    echo -e \"\\033[32m\\033[01m$1\\033[0m\"\n}\nfunction red(){\n    echo -e \"\\033[31m\\033[01m$1\\033[0m\"\n}\nfunction version_lt(){\n    test \"$(echo \"$@\" | tr \" \" \"\\n\" | sort -rV | head -n 1)\" != \"$1\"; \n}\n\nsource /etc/os-release\nRELEASE=$ID\nVERSION=$VERSION_ID\n\n\nfunction install_wordpress(){\n    yum install -y iptables-services\n    systemctl start iptables\n    systemctl enable iptables\n    iptables -F\n    SSH_PORT=$(awk '$1==\"Port\" {print $2}' /etc/ssh/sshd_config)\n    if [ ! -n \"$SSH_PORT\" ]; then\n        iptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\n    else\n        iptables -A INPUT -p tcp -m tcp --dport ${SSH_PORT} -j ACCEPT\n    fi\n    iptables -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT\n    iptables -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT\n    iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n    iptables -A INPUT -i lo -j ACCEPT\n    iptables -P INPUT DROP\n    iptables -P FORWARD DROP\n    iptables -P OUTPUT ACCEPT\n    service iptables save\n    green \"=====================================================================\"\n    green \"安全起见，iptables仅开启ssh,http,https端口，如需开放其他端口请自行放行\"\n    green \"=====================================================================\"\n    sleep 1\n    yum -y install  wget\n    mkdir /usr/share/wordpresstemp\n    cd /usr/share/wordpresstemp/\n    wget https://cn.wordpress.org/latest-zh_CN.zip\n    if [ ! -f \"/usr/share/wordpresstemp/latest-zh_CN.zip\" ]; then\n        red \"从cn官网下载wordpress失败，尝试从github下载……\"\n        wget https://github.com/atrandys/wordpress/raw/master/latest-zh_CN.zip    \n    fi\n    if [ ! -f \"/usr/share/wordpresstemp/latest-zh_CN.zip\" ]; then\n        red \"我它喵的从github下载wordpress也失败了，请尝试手动安装……\"\n        green \"从wordpress官网下载包然后命名为latest-zh_CN.zip，新建目录/usr/share/wordpresstemp/，上传到此目录下即可\"\n        exit 1\n    fi\n    green \"===============\"\n    green \" 1.安装必要软件\"\n    green \"===============\"\n    sleep 1\n    green \"\"\n    wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n    wget https://rpms.remirepo.net/enterprise/remi-release-7.rpm\n    if [ -f \"epel-release-latest-7.noarch.rpm\" -a -f \"remi-release-7.rpm\" ]; then\n        green \"下载软件源成功\"\n    else\n        red \"下载软件源失败，退出安装\"\n        exit 1\n    fi\n    rpm -Uvh remi-release-7.rpm epel-release-latest-7.noarch.rpm --force --nodeps\n    #sed -i \"0,/enabled=0/s//enabled=1/\" /etc/yum.repos.d/epel.repo\n    yum -y install  unzip vim tcl expect curl socat\n    echo\n    echo\n    green \"============\"\n    green \"2.安装PHP7.4\"\n    green \"============\"\n    sleep 1\n    yum -y install php74 php74-php-gd php74-php-opcache php74-php-pdo php74-php-mbstring php74-php-cli php74-php-fpm php74-php-mysqlnd php74-php-xml\n    service php74-php-fpm start\n    chkconfig php74-php-fpm on\n    if [ `yum list installed | grep php74 | wc -l` -ne 0 ]; then\n        echo\n        green \"【checked】 PHP7安装成功\"\n        echo\n        echo\n        sleep 2\n        php_status=1\n    fi\n    green \"===============\"\n    green \"  3.安装MySQL\"\n    green \"===============\"\n    sleep 1\n    #wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n    wget https://repo.mysql.com/mysql80-community-release-el7-3.noarch.rpm\n    rpm -ivh mysql80-community-release-el7-3.noarch.rpm --force --nodeps\n    yum -y install mysql-server\n    systemctl enable mysqld.service\n    systemctl start  mysqld.service\n    if [ `yum list installed | grep mysql-community | wc -l` -ne 0 ]; then\n        green \"【checked】 MySQL安装成功\"\n        echo\n        echo\n        sleep 2\n        mysql_status=1\n    fi\n    echo\n    echo\n    green \"===============\"\n    green \"  4.配置MySQL\"\n    green \"===============\"\n    sleep 2\n    originpasswd=`cat /var/log/mysqld.log | grep password | head -1 | rev  | cut -d ' ' -f 1 | rev`\n    mysqlpasswd=`mkpasswd -l 18 -d 2 -c 3 -C 4 -s 5 | sed $'s/[\\'\\/\\;\\\"\\:\\.\\?\\&]//g'`\ncat > ~/.my.cnf <<EOT\n[mysql]\nuser=root\npassword=\"$originpasswd\"\nEOT\n    mysql  --connect-expired-password  -e \"alter user 'root'@'localhost' identified by '$mysqlpasswd';\"\n    systemctl restart mysqld\n    sleep 5s\ncat > ~/.my.cnf <<EOT\n[mysql]\nuser=root\npassword=\"$mysqlpasswd\"\nEOT\n    mysql  --connect-expired-password  -e \"create database wordpress_db;\"\n    echo\n    green \"====================\"\n    green \" 5.配置php和php-fpm\"\n    green \"====================\"\n    echo\n    echo\n    sleep 1\n    sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 20M/;\" /etc/opt/remi/php74/php.ini\n    sed -i \"s/pm.start_servers = 5/pm.start_servers = 3/;s/pm.min_spare_servers = 5/pm.min_spare_servers = 3/;s/pm.max_spare_servers = 35/pm.max_spare_servers = 8/;\" /etc/opt/remi/php74/php-fpm.d/www.conf\n    systemctl restart php74-php-fpm.service\n    systemctl restart nginx.service\n    green \"====================\"\n    green \"  6.安装wordpress\"\n    green \"====================\"\n    echo\n    echo\n    sleep 1\n    cd /usr/share/nginx/html\n    mv /usr/share/wordpresstemp/latest-zh_CN.zip ./\n    unzip latest-zh_CN.zip >/dev/null 2>&1\n    mv wordpress/* ./\n    #cp wp-config-sample.php wp-config.php\n    wget https://raw.githubusercontent.com/atrandys/trojan/master/wp-config.php\n    green \"====================\"\n    green \"  7.配置wordpress\"\n    green \"====================\"\n    echo\n    echo\n    sleep 1\n    sed -i \"s/database_name_here/wordpress_db/;s/username_here/root/;s?password_here?$mysqlpasswd?;\" /usr/share/nginx/html/wp-config.php\n    #echo \"define('FS_METHOD', \"direct\");\" >> /usr/share/nginx/html/wp-config.php\n    chown -R apache:apache /usr/share/nginx/html/\n    #chmod 775 apache:apache /usr/share/nginx/html/ -Rf\n    chmod -R 775 /usr/share/nginx/html/wp-content\n    green \"==========================================================================\"\n    green \" WordPress服务端配置已完成，请打开浏览器访问您的域名进行前台配置\"\n    green \" 数据库密码等信息参考文件：/usr/share/nginx/html/wp-config.php\"\n    green \"==========================================================================\"\n    echo\n    green \"==========================================================================\"\n    green \"Trojan已安装完成，请自行下载trojan客户端，使用以下的参数或配置文件\"\n    green \"服务器地址：$your_domain\"\n    green \"端口：443\"\n    green \"trojan密码：$trojan_passwd\"\n    green \"==========================================================================\"\n    cat /usr/src/trojan/config.json\n    green \"==========================================================================\"\n}\n\nfunction install_trojan(){\n    yum install -y nginx\n    if [ ! -d \"/etc/nginx/\" ]; then\n        red \"nginx安装有问题，请使用卸载trojan后重新安装\"\n        exit 1\n    fi\n    cat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    server {\n        listen       80;\n        server_name  $your_domain;\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n    }\n}\nEOF\n    systemctl restart nginx\n    sleep 3\n    #rm -rf /usr/share/nginx/html/*\n    #cd /usr/share/nginx/html/\n    #wget https://github.com/atrandys/trojan/raw/master/fakesite.zip >/dev/null 2>&1\n    #unzip fakesite.zip >/dev/null 2>&1\n    #sleep 5\n    curl https://get.acme.sh | sh\n    if [ ! -d \"/usr/src\" ]; then\n        mkdir /usr/src\n    fi\n    if [ ! -d \"/usr/src/trojan-cert\" ]; then\n        mkdir /usr/src/trojan-cert \n        mkdir /usr/src/trojan-cert/$your_domain\n        if [ ! -d \"/usr/src/trojan-cert/$your_domain\" ]; then\n            red \"不存在/usr/src/trojan-cert/$your_domain目录\"\n            exit 1\n        fi\n        #curl https://get.acme.sh | sh\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --nginx\n        if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n            cert_success=\"1\"\n        fi\n    elif [ -f \"/usr/src/trojan-cert/$your_domain/fullchain.cer\" ]; then\n        cd /usr/src/trojan-cert/$your_domain\n        create_time=`stat -c %Y fullchain.cer`\n        now_time=`date +%s`\n        minus=$(($now_time - $create_time ))\n        if [  $minus -gt 5184000 ]; then\n            #curl https://get.acme.sh | sh\n            ~/.acme.sh/acme.sh  --issue  -d $your_domain  --nginx\n            if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n                cert_success=\"1\"\n            fi\n        else \n            green \"检测到域名$your_domain证书存在且未超过60天，无需重新申请\"\n            cert_success=\"1\"\n        fi        \n    else \n        mkdir /usr/src/trojan-cert/$your_domain\n        #curl https://get.acme.sh | sh\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --webroot /usr/share/nginx/html/\n        if test -s /root/.acme.sh/$your_domain/fullchain.cer; then\n            cert_success=\"1\"\n        fi\n    fi\n    \n    if [ \"$cert_success\" == \"1\" ]; then\n        cat > /etc/nginx/nginx.conf <<-EOF\nuser  root;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '\\$remote_addr - \\$remote_user [\\$time_local] \"\\$request\" '\n                      '\\$status \\$body_bytes_sent \"\\$http_referer\" '\n                      '\"\\$http_user_agent\" \"\\$http_x_forwarded_for\"';\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  120;\n    client_max_body_size 20m;\n    #gzip  on;\n    server {\n        listen       127.0.0.1:80;\n        server_name  $your_domain;\n        root /usr/share/nginx/html;\n        index index.php index.html index.htm;\n        add_header Strict-Transport-Security \"max-age=31536000\";\n        #access_log /var/log/nginx/hostscube.log combined;\n        location ~ \\.php$ {\n            fastcgi_pass 127.0.0.1:9000;\n            fastcgi_param SCRIPT_FILENAME \\$document_root\\$fastcgi_script_name;\n            include fastcgi_params;\n        }\n        location / {\n        try_files \\$uri \\$uri/ /index.php?\\$args;\n        }\n        \n    }\n    server {\n        listen       0.0.0.0:80;\n        server_name  $your_domain;\n        return 301 https://$your_domain\\$request_uri;\n    }\n    \n}\nEOF\n        systemctl restart nginx\n        systemctl enable nginx\n        cd /usr/src\n        wget https://api.github.com/repos/trojan-gfw/trojan/releases/latest >/dev/null 2>&1\n        latest_version=`grep tag_name latest| awk -F '[:,\"v]' '{print $6}'`\n        rm -f latest\n        green \"开始下载最新版trojan amd64\"\n        wget https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-linux-amd64.tar.xz\n        tar xf trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        rm -f trojan-${latest_version}-linux-amd64.tar.xz\n        #下载trojan客户端\n        #green \"开始下载并处理trojan windows客户端\"\n        #wget https://github.com/atrandys/trojan/raw/master/trojan-cli.zip\n        #wget -P /usr/src/trojan-temp https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-win.zip\n        #unzip trojan-cli.zip >/dev/null 2>&1\n        #unzip /usr/src/trojan-temp/trojan-${latest_version}-win.zip -d /usr/src/trojan-temp/ >/dev/null 2>&1\n        #mv -f /usr/src/trojan-temp/trojan/trojan.exe /usr/src/trojan-cli/\n        green \"请设置trojan密码，建议不要出现特殊字符\"\n        read -p \"请输入密码 :\" trojan_passwd\n        #trojan_passwd=$(cat /dev/urandom | head -1 | md5sum | head -c 8)\n        cat > /usr/src/trojan/config.json <<-EOF\n{\n    \"run_type\": \"client\",\n    \"local_addr\": \"127.0.0.1\",\n    \"local_port\": 1080,\n    \"remote_addr\": \"$your_domain\",\n    \"remote_port\": 443,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"verify\": true,\n        \"verify_hostname\": true,\n        \"cert\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n        \"sni\": \"\",\n        \"alpn\": [\n            \"h2\",\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"curves\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    }\n}\nEOF\n         rm -rf /usr/src/trojan/server.conf\n         cat > /usr/src/trojan/server.conf <<-EOF\n{\n    \"run_type\": \"server\",\n    \"local_addr\": \"0.0.0.0\",\n    \"local_port\": 443,\n    \"remote_addr\": \"127.0.0.1\",\n    \"remote_port\": 80,\n    \"password\": [\n        \"$trojan_passwd\"\n    ],\n    \"log_level\": 1,\n    \"ssl\": {\n        \"cert\": \"/usr/src/trojan-cert/$your_domain/fullchain.cer\",\n        \"key\": \"/usr/src/trojan-cert/$your_domain/private.key\",\n        \"key_password\": \"\",\n        \"cipher_tls13\":\"TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384\",\n        \"prefer_server_cipher\": true,\n        \"alpn\": [\n            \"http/1.1\"\n        ],\n        \"reuse_session\": true,\n        \"session_ticket\": false,\n        \"session_timeout\": 600,\n        \"plain_http_response\": \"\",\n        \"curves\": \"\",\n        \"dhparam\": \"\"\n    },\n    \"tcp\": {\n        \"no_delay\": true,\n        \"keep_alive\": true,\n        \"fast_open\": false,\n        \"fast_open_qlen\": 20\n    },\n    \"mysql\": {\n        \"enabled\": false,\n        \"server_addr\": \"127.0.0.1\",\n        \"server_port\": 3306,\n        \"database\": \"trojan\",\n        \"username\": \"trojan\",\n        \"password\": \"\"\n    }\n}\nEOF\n        #cd /usr/src/trojan-cli/\n        #zip -q -r trojan-cli.zip /usr/src/trojan-cli/\n        #rm -rf /usr/src/trojan-temp\n        #rm -f /usr/src/trojan-cli.zip\n        #trojan_path=$(cat /dev/urandom | head -1 | md5sum | head -c 16)\n        #mkdir /usr/share/nginx/html/${trojan_path}\n        #mv /usr/src/trojan-cli/trojan-cli.zip /usr/share/nginx/html/${trojan_path}/\t\n        #rm -f /usr/src/trojan-cli.zip\n        cat > /etc/systemd/system/trojan.service <<-EOF\n[Unit]  \nDescription=trojan  \nAfter=network.target  \n   \n[Service]  \nType=simple  \nPIDFile=/usr/src/trojan/trojan/trojan.pid\nExecStart=/usr/src/trojan/trojan -c \"/usr/src/trojan/server.conf\"  \nExecReload=/bin/kill -HUP \\$MAINPID\nRestart=on-failure\nRestartSec=1s\n   \n[Install]  \nWantedBy=multi-user.target\nEOF\n\n        chmod +x /etc/systemd/system/trojan.service\n        systemctl enable trojan.service\n        cd /root\n        ~/.acme.sh/acme.sh  --installcert  -d  $your_domain   \\\n            --key-file   /usr/src/trojan-cert/$your_domain/private.key \\\n            --fullchain-file  /usr/src/trojan-cert/$your_domain/fullchain.cer \\\n            --reloadcmd  \"systemctl restart trojan\"\t\n    else\n        red \"===================================\"\n        red \"https证书没有申请成功，本次安装失败\"\n        red \"===================================\"\n    fi\n}\nfunction preinstall_check(){\n    yum -y install net-tools socat >/dev/null 2>&1\n    Port80=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 80`\n    Port443=`netstat -tlpn | awk -F '[: ]+' '$1==\"tcp\"{print $5}' | grep -w 443`\n    if [ -n \"$Port80\" ]; then\n        process80=`netstat -tlpn | awk -F '[: ]+' '$5==\"80\"{print $9}'`\n        red \"===========================================================\"\n        red \"检测到80端口被占用，占用进程为：${process80}，本次安装结束\"\n        red \"===========================================================\"\n        exit 1\n    fi\n    if [ -n \"$Port443\" ]; then\n        process443=`netstat -tlpn | awk -F '[: ]+' '$5==\"443\"{print $9}'`\n        red \"=============================================================\"\n        red \"检测到443端口被占用，占用进程为：${process443}，本次安装结束\"\n        red \"=============================================================\"\n        exit 1\n    fi\n    if [ -f \"/etc/selinux/config\" ]; then\n        CHECK=$(grep SELINUX= /etc/selinux/config | grep -v \"#\")\n        if [ \"$CHECK\" == \"SELINUX=enforcing\" ]; then\n            green \"$(date +\"%Y-%m-%d %H:%M:%S\") - SELinux状态非disabled,关闭SELinux.\"\n            setenforce 0\n            sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n            #loggreen \"SELinux is not disabled, add port 80/443 to SELinux rules.\"\n            #loggreen \"==== Install semanage\"\n            #logcmd \"yum install -y policycoreutils-python\"\n            #semanage port -a -t http_port_t -p tcp 80\n            #semanage port -a -t http_port_t -p tcp 443\n            #semanage port -a -t http_port_t -p tcp 37212\n            #semanage port -a -t http_port_t -p tcp 37213\n        elif [ \"$CHECK\" == \"SELINUX=permissive\" ]; then\n            green \"$(date +\"%Y-%m-%d %H:%M:%S\") - SELinux状态非disabled,关闭SELinux.\"\n            setenforce 0\n            sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config\n        fi\n    fi\n    if [[ \"$RELEASE\" == \"centos\" ]] && [[ \"$VERSION\" == \"7\" ]]; then\n        firewall_status=`systemctl status firewalld | grep \"Active: active\"`\n        if [ -n \"$firewall_status\" ]; then\n            green \"检测到firewalld开启状态，添加放行80/443端口规则\"\n            firewall-cmd --zone=public --add-port=80/tcp --permanent\n            firewall-cmd --zone=public --add-port=443/tcp --permanent\n            firewall-cmd --reload\n        fi\n        rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm --force --nodeps\n    else\n            red \"===============\"\n            red \"当前系统不受支持\"\n            red \"===============\"\n            exit\n    fi\n    yum -y install  wget unzip zip curl tar >/dev/null 2>&1\n    green \"=======================\"\n    blue \"请输入绑定到本VPS的域名\"\n    green \"=======================\"\n    read your_domain\n    real_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`\n    local_addr=`curl ipv4.icanhazip.com`\n    if [ $real_addr == $local_addr ] ; then\n        green \"==========================================\"\n        green \"    域名解析正常，开始安装trojan+wp\"\n        green \"==========================================\"\n        sleep 1s\n        install_trojan\n        install_wordpress\n    else\n        red \"====================================\"\n        red \"域名解析地址与本VPS IP地址不一致\"\n        red \"若你确认解析成功你可强制脚本继续运行\"\n        red \"====================================\"\n        read -p \"是否强制运行 ?请输入 [Y/n] :\" yn\n        [ -z \"${yn}\" ] && yn=\"y\"\n        if [[ $yn == [Yy] ]]; then\n            green \"强制继续运行脚本\"\n            sleep 1s\n            install_trojan\n            install_wordpress\n        else\n            exit 1\n        fi\n    fi\n}\n\nfunction repair_cert(){\n    systemctl stop nginx\n    green \"============================\"\n    blue \"请输入绑定到本VPS的域名\"\n    blue \"务必与之前失败使用的域名一致\"\n    green \"============================\"\n    read your_domain\n    real_addr=`ping ${your_domain} -c 1 | sed '1{s/[^(]*(//;s/).*//;q}'`\n    local_addr=`curl ipv4.icanhazip.com`\n    if [ $real_addr == $local_addr ] ; then\n        ~/.acme.sh/acme.sh  --issue  -d $your_domain  --standalone\n        ~/.acme.sh/acme.sh  --installcert  -d  $your_domain   \\\n            --key-file   /usr/src/trojan-cert/$your_domain/private.key \\\n            --fullchain-file /usr/src/trojan-cert/$your_domain/fullchain.cer \\\n            --reloadcmd  \"systemctl restart trojan\"\n        if test -s /usr/src/trojan-cert/$your_domain/fullchain.cer; then\n            green \"证书申请成功\"\n            systemctl restart trojan\n            systemctl start nginx\n        else\n            red \"申请证书失败\"\n        fi\n    else\n        red \"================================\"\n        red \"域名解析地址与本VPS IP地址不一致\"\n        red \"本次安装失败，请确保域名解析正常\"\n        red \"================================\"\n    fi\n}\n\nfunction remove_trojan(){\n    red \"==================================================\"\n    red \"你的trojan+wordpress数据将全部丢失！！你确定要卸载吗？\"\n    read -s -n1 -p \"按回车键开始卸载，按ctrl+c取消\"\n    systemctl stop trojan\n    systemctl disable trojan\n    systemctl stop nginx\n    systemctl disable nginx\n    rm -f /etc/systemd/system/trojan.service\n    if [ \"$RELEASE\" == \"centos\" ]; then\n        yum remove -y nginx\n    else\n        apt-get -y autoremove nginx\n        apt-get -y --purge remove nginx\n        apt-get -y autoremove && apt-get -y autoclean\n        find / | grep nginx | sudo xargs rm -rf\n    fi\n    rm -rf /usr/src/trojan/\n    rm -rf /usr/src/trojan-cli/\n    rm -rf /usr/share/nginx/html/*\n    rm -rf /etc/nginx/\n    rm -rf /root/.acme.sh/\n    yum remove -y php74 php74-php-gd  php74-php-pdo php74-php-mbstring php74-php-cli php74-php-fpm php74-php-mysqlnd mysql\n    rm -rf /var/lib/mysql\t\n    rm -rf /usr/lib64/mysql\n    rm -rf /usr/share/mysql\n    green \"========================\"\n    green \"trojan+wordpress删除完毕\"\n    green \"========================\"\n}\n\nfunction update_trojan(){\n    /usr/src/trojan/trojan -v 2>trojan.tmp\n    curr_version=`cat trojan.tmp | grep \"trojan\" | awk '{print $4}'`\n    wget https://api.github.com/repos/trojan-gfw/trojan/releases/latest >/dev/null 2>&1\n    latest_version=`grep tag_name latest| awk -F '[:,\"v]' '{print $6}'`\n    rm -f latest\n    rm -f trojan.tmp\n    if version_lt \"$curr_version\" \"$latest_version\"; then\n        green \"当前版本$curr_version,最新版本$latest_version,开始升级……\"\n        mkdir trojan_update_temp && cd trojan_update_temp\n        wget https://github.com/trojan-gfw/trojan/releases/download/v${latest_version}/trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        tar xf trojan-${latest_version}-linux-amd64.tar.xz >/dev/null 2>&1\n        mv ./trojan/trojan /usr/src/trojan/\n        cd .. && rm -rf trojan_update_temp\n        systemctl restart trojan\n    /usr/src/trojan/trojan -v 2>trojan.tmp\n    green \"服务端trojan升级完成，当前版本：`cat trojan.tmp | grep \"trojan\" | awk '{print $4}'`，客户端请在trojan github下载最新版\"\n    rm -f trojan.tmp\n    else\n        green \"当前版本$curr_version,最新版本$latest_version,无需升级\"\n    fi\n   \n   \n}\n\nstart_menu(){\n    clear\n    green \" =======================================\"\n    green \" 脚本功用: 一键安装trojan + wordpress      \"\n    green \" 系统支持: centos7\"\n    green \" 脚本作者: atrandys             \"\n    red \" *1. 不要在任何生产环境使用此脚本\"\n    red \" *2. 不要占用80和443端口\"\n    red \" *3. 若第一次使用脚本失败，请先执行卸载trojan\"\n    green \" =======================================\"\n    echo\n    green \" 1. 安装trojan + wp\"\n    red \" 2. 卸载trojan + wp\"\n    green \" 3. 升级trojan\"\n    green \" 4. 修复证书\"\n    blue \" 0. 退出脚本\"\n    echo\n    read -p \"请输入数字 :\" num\n    case \"$num\" in\n    1)\n    preinstall_check\n    ;;\n    2)\n    remove_trojan \n    ;;\n    3)\n    update_trojan \n    ;;\n    4)\n    repair_cert \n    ;;\n    0)\n    exit 1\n    ;;\n    *)\n    clear\n    red \"请输入正确数字\"\n    sleep 1s\n    start_menu\n    ;;\n    esac\n}\n\nstart_menu\n"
        },
        {
          "name": "vcruntime140_1.dll",
          "type": "blob",
          "size": 43.9765625,
          "content": null
        },
        {
          "name": "wp-config.php",
          "type": "blob",
          "size": 2.873046875,
          "content": "<?php\r\n/**\r\n * WordPress基础配置文件。\r\n *\r\n * 这个文件被安装程序用于自动生成wp-config.php配置文件，\r\n * 您可以不使用网站，您需要手动复制这个文件，\r\n * 并重命名为“wp-config.php”，然后填入相关信息。\r\n *\r\n * 本文件包含以下配置选项：\r\n *\r\n * * MySQL设置\r\n * * 密钥\r\n * * 数据库表名前缀\r\n * * ABSPATH\r\n *\r\n * @link https://codex.wordpress.org/zh-cn:%E7%BC%96%E8%BE%91_wp-config.php\r\n *\r\n * @package WordPress\r\n */\r\n\r\n// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** //\r\n/** WordPress数据库的名称 */\r\ndefine( 'DB_NAME', 'database_name_here' );\r\n\r\n/** MySQL数据库用户名 */\r\ndefine( 'DB_USER', 'username_here' );\r\n\r\n/** MySQL数据库密码 */\r\ndefine( 'DB_PASSWORD', 'password_here' );\r\n\r\n/** MySQL主机 */\r\ndefine( 'DB_HOST', 'localhost' );\r\n\r\n/** 创建数据表时默认的文字编码 */\r\ndefine( 'DB_CHARSET', 'utf8' );\r\n\r\n/** 数据库整理类型。如不确定请勿更改 */\r\ndefine( 'DB_COLLATE', '' );\r\n\r\n/**#@+\r\n * 身份认证密钥与盐。\r\n *\r\n * 修改为任意独一无二的字串！\r\n * 或者直接访问{@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org密钥生成服务}\r\n * 任何修改都会导致所有cookies失效，所有用户将必须重新登录。\r\n *\r\n * @since 2.6.0\r\n */\r\ndefine( 'AUTH_KEY',         'put your unique phrase here' );\r\ndefine( 'SECURE_AUTH_KEY',  'put your unique phrase here' );\r\ndefine( 'LOGGED_IN_KEY',    'put your unique phrase here' );\r\ndefine( 'NONCE_KEY',        'put your unique phrase here' );\r\ndefine( 'AUTH_SALT',        'put your unique phrase here' );\r\ndefine( 'SECURE_AUTH_SALT', 'put your unique phrase here' );\r\ndefine( 'LOGGED_IN_SALT',   'put your unique phrase here' );\r\ndefine( 'NONCE_SALT',       'put your unique phrase here' );\r\n\r\n/**#@-*/\r\n\r\n/**\r\n * WordPress数据表前缀。\r\n *\r\n * 如果您有在同一数据库内安装多个WordPress的需求，请为每个WordPress设置\r\n * 不同的数据表前缀。前缀名只能为数字、字母加下划线。\r\n */\r\n$table_prefix = 'wp_';\r\n\r\n/**\r\n * 开发者专用：WordPress调试模式。\r\n *\r\n * 将这个值改为true，WordPress将显示所有用于开发的提示。\r\n * 强烈建议插件开发者在开发环境中启用WP_DEBUG。\r\n *\r\n * 要获取其他能用于调试的信息，请访问Codex。\r\n *\r\n * @link https://codex.wordpress.org/Debugging_in_WordPress\r\n */\r\ndefine('WP_DEBUG', false);\r\n\r\n/* 好了！请不要再继续编辑。请保存本文件。使用愉快！ */\r\n\r\n/** WordPress目录的绝对路径。 */\r\nif ( ! defined( 'ABSPATH' ) ) {\r\n\tdefine( 'ABSPATH', dirname( __FILE__ ) . '/' );\r\n}\r\n\r\n/** 设置WordPress变量和包含文件。 */\r\n$_SERVER['HTTPS'] = 'on';\r\ndefine('FORCE_SSL_LOGIN', true);\r\ndefine('FORCE_SSL_ADMIN', true);\r\ndefine( 'CONCATENATE_SCRIPTS', false );\r\nrequire_once( ABSPATH . 'wp-settings.php' );\r\ndefine('FS_METHOD', direct);\r\n"
        }
      ]
    }
  ]
}