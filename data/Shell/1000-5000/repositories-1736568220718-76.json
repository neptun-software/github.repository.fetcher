{
  "metadata": {
    "timestamp": 1736568220718,
    "page": 76,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker-library/php",
      "stars": 3848,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.185546875,
          "content": "/*/**/Dockerfile          linguist-generated\n/*/**/apache2-foreground  linguist-generated\n/*/**/docker-php-*        linguist-generated\n/Dockerfile*.template     linguist-language=Dockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": ".jq-template.awk\n"
        },
        {
          "name": "8.1",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.2",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.3-rc",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.3",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.4-rc",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.4",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.66015625,
          "content": "# Contributing to this repository\n\n1. Don't edit the Dockerfiles directly. They are generated using templates.\n2. Make any changes to the `*.template` files in the root of the repository.\n3. Make sure you've checked the [Requirements](#requirements) below.\n4. Run the `./apply-templates.sh` script after making your changes.\n5. Once complete, (review and) commit all changes to the templates and Dockerfiles.\n\n## Requirements\n\nYou will need the following software packages to run the [`./apply-templates.sh`](/apply-templates.sh) script.\n\n- [GNU awk](https://www.gnu.org/software/gawk/) available as `gawk`.\n- [`jq`](https://stedolan.github.io/jq/)\n- A recent version of Bash\n"
        },
        {
          "name": "Dockerfile-linux.template",
          "type": "blob",
          "size": 18.03515625,
          "content": "{{\n\tdef version_id:\n\t\t# https://www.php.net/phpversion\n\t\t# $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;\n\t\tsub(\"[a-zA-Z].*$\"; \"\")\n\t\t| split(\".\")\n\t\t| (\n\t\t\t(.[0] // 0 | tonumber) * 10000\n\t\t\t+ (.[1] // 0 | tonumber) * 100\n\t\t\t+ (.[2] // 0 | tonumber)\n\t\t)\n\t;\n\tdef is_alpine:\n\t\tenv.from | startswith(\"alpine\")\n-}}\nFROM {{ env.from }}\n\n{{ if is_alpine then \"\" else ( -}}\n# prevent Debian's PHP packages from being installed\n# https://github.com/docker-library/php/pull/542\nRUN set -eux; \\\n\t{ \\\n\t\techo 'Package: php*'; \\\n\t\techo 'Pin: release *'; \\\n\t\techo 'Pin-Priority: -1'; \\\n\t} > /etc/apt/preferences.d/no-debian-php\n\n{{ ) end -}}\n# dependencies required for running \"phpize\"\n{{ if is_alpine then ( -}}\n# these get automatically installed and removed by \"docker-php-ext-*\" (unless they're already installed)\n{{ ) else ( -}}\n# (see persistent deps below)\n{{ ) end -}}\nENV PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tdpkg-dev {{ if is_alpine then \"dpkg \" else \"\" end }}\\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\t{{ if is_alpine then \"pkgconf\" else \"pkg-config\" end }} \\\n\t\tre2c\n\n# persistent / runtime deps\n{{ if is_alpine then ( -}}\nRUN apk add --no-cache \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\topenssl \\\n\t\ttar \\\n\t\txz\n\n# ensure www-data user exists\nRUN set -eux; \\\n\tadduser -u 82 -D -S -G www-data www-data\n# 82 is the standard uid/gid for \"www-data\" in Alpine\n# https://git.alpinelinux.org/aports/tree/main/apache2/apache2.pre-install?h=3.14-stable\n# https://git.alpinelinux.org/aports/tree/main/lighttpd/lighttpd.pre-install?h=3.14-stable\n# https://git.alpinelinux.org/aports/tree/main/nginx/nginx.pre-install?h=3.14-stable\n{{ ) else ( -}}\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\t$PHPIZE_DEPS \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\txz-utils \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n{{ ) end -}}\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN set -eux; \\\n\tmkdir -p \"$PHP_INI_DIR/conf.d\"; \\\n# allow running as an arbitrary user (https://github.com/docker-library/php/issues/743)\n\t[ ! -d /var/www/html ]; \\\n\tmkdir -p /var/www/html; \\\n\tchown www-data:www-data /var/www/html; \\\n\tchmod 1777 /var/www/html\n\n{{ if env.variant == \"apache\" then ( -}}\nENV APACHE_CONFDIR /etc/apache2\nENV APACHE_ENVVARS $APACHE_CONFDIR/envvars\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends apache2; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n# generically convert lines like\n#   export APACHE_RUN_USER=www-data\n# into\n#   : ${APACHE_RUN_USER:=www-data}\n#   export APACHE_RUN_USER\n# so that they can be overridden at runtime (\"-e APACHE_RUN_USER=...\")\n\tsed -ri 's/^export ([^=]+)=(.*)$/: ${\\1:=\\2}\\nexport \\1/' \"$APACHE_ENVVARS\"; \\\n\t\\\n# setup directories and permissions\n\t. \"$APACHE_ENVVARS\"; \\\n\tfor dir in \\\n\t\t\"$APACHE_LOCK_DIR\" \\\n\t\t\"$APACHE_RUN_DIR\" \\\n\t\t\"$APACHE_LOG_DIR\" \\\n{{ if env.suite == \"bullseye\" then \"\" else ( -}}\n# https://salsa.debian.org/apache-team/apache2/-/commit/b97ca8714890ead1ba6c095699dde752e8433205\n\t\t\"$APACHE_RUN_DIR/socks\" \\\n{{ ) end -}}\n\t; do \\\n\t\trm -rvf \"$dir\"; \\\n\t\tmkdir -p \"$dir\"; \\\n\t\tchown \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$dir\"; \\\n# allow running as an arbitrary user (https://github.com/docker-library/php/issues/743)\n\t\tchmod 1777 \"$dir\"; \\\n\tdone; \\\n\t\\\n# delete the \"index.html\" that installing Apache drops in here\n\trm -rvf /var/www/html/*; \\\n\t\\\n# logs should go to stdout / stderr\n\tln -sfT /dev/stderr \"$APACHE_LOG_DIR/error.log\"; \\\n\tln -sfT /dev/stdout \"$APACHE_LOG_DIR/access.log\"; \\\n\tln -sfT /dev/stdout \"$APACHE_LOG_DIR/other_vhosts_access.log\"; \\\n\tchown -R --no-dereference \"$APACHE_RUN_USER:$APACHE_RUN_GROUP\" \"$APACHE_LOG_DIR\"\n\n# Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event && a2enmod mpm_prefork\n\n# PHP files should be handled by PHP, and should be preferred over any other file type\nRUN { \\\n\t\techo '<FilesMatch \\.php$>'; \\\n\t\techo '\\tSetHandler application/x-httpd-php'; \\\n\t\techo '</FilesMatch>'; \\\n\t\techo; \\\n\t\techo 'DirectoryIndex disabled'; \\\n\t\techo 'DirectoryIndex index.php index.html'; \\\n\t\techo; \\\n\t\techo '<Directory /var/www/>'; \\\n\t\techo '\\tOptions -Indexes'; \\\n\t\techo '\\tAllowOverride All'; \\\n\t\techo '</Directory>'; \\\n\t} | tee \"$APACHE_CONFDIR/conf-available/docker-php.conf\" \\\n\t&& a2enconf docker-php\n\n{{ ) else \"\" end -}}\n# Apply stack smash protection to functions using local buffers and alloca()\n# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)\n# Enable optimization (-O2)\n# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)\n# https://github.com/docker-library/php/issues/272\n# -D_LARGEFILE_SOURCE and -D_FILE_OFFSET_BITS=64 (https://www.php.net/manual/en/intro.filesystem.php)\nENV PHP_CFLAGS=\"-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\nENV PHP_CPPFLAGS=\"$PHP_CFLAGS\"\nENV PHP_LDFLAGS=\"-Wl,-O1 -pie\"\n\nENV GPG_KEYS {{\n\t{\n\t\t# https://www.php.net/gpg-keys.php\n\t\t# https://www.php.net/downloads.php\n\n\t\t\"8.4\": [\n\t\t\t# https://wiki.php.net/todo/php84#release_managers\n\t\t\t# https://www.php.net/gpg-keys.php#gpg-8.4\n\t\t\t\"AFD8 691F DAED F03B DF6E  4605 63F1 5A9B 7153 76CA\", # ericmann\n\t\t\t\"9D7F 99A0 CB8F 05C8 A695  8D62 56A9 7AF7 600A 39A6\", # calvinb\n\t\t\t\"0616 E93D 95AF 4712 43E2  6761 7704 26E1 7EBB B3DD\"  # saki\n\t\t],\n\n\t\t\"8.3\": [\n\t\t\t# https://wiki.php.net/todo/php83#release_managers\n\t\t\t# https://www.php.net/gpg-keys.php#gpg-8.3\n\t\t\t\"1198 C011 7593 497A 5EC5  C199 286A F1F9 8974 69DC\", # pierrick\n\t\t\t\"C28D937575603EB4ABB725861C0779DC5C0A9DE4\",           # bukka\n\t\t\t\"AFD8 691F DAED F03B DF6E  4605 63F1 5A9B 7153 76CA\"  # ericmann\n\t\t],\n\n\t\t\"8.2\": [\n\t\t\t# https://wiki.php.net/todo/php82#release_managers\n\t\t\t# https://www.php.net/gpg-keys.php#gpg-8.2\n\t\t\t\"39B6 4134 3D8C 104B 2B14  6DC3 F9C3 9DC0 B969 8544\", # ramsey\n\t\t\t\"E609 13E4 DF20 9907 D8E3  0D96 659A 97C9 CF2A 795A\", # sergey\n\t\t\t\"1198 C011 7593 497A 5EC5  C199 286A F1F9 8974 69DC\"  # pierrick\n\t\t],\n\n\t\t\"8.1\": [\n\t\t\t# https://wiki.php.net/todo/php81#release_managers\n\t\t\t# https://www.php.net/gpg-keys.php#gpg-8.1\n\t\t\t\"5289 95BF EDFB A719 1D46  839E F9BA 0ADA 31CB D89E\", # krakjoe\n\t\t\t\"39B6 4134 3D8C 104B 2B14  6DC3 F9C3 9DC0 B969 8544\", # ramsey\n\t\t\t\"F1F6 9223 8FBC 1666 E5A5  CCD4 199F 9DFE F6FF BAFD\"  # patrickallaert\n\t\t],\n\t}[env.version | rtrimstr(\"-rc\")] // error(\"missing GPG keys for \" + env.version)\n\t| map(gsub(\" \"; \"\"))\n\t| join(\" \")\n}}\n\nENV PHP_VERSION {{ .version }}\nENV PHP_URL=\"{{ .url }}\" PHP_ASC_URL=\"{{ .ascUrl // \"\" }}\"\nENV PHP_SHA256=\"{{ .sha256 // \"\" }}\"\n\nRUN set -eux; \\\n\t\\\n{{ if is_alpine then ( -}}\n\tapk add --no-cache --virtual .fetch-deps gnupg; \\\n{{ ) else ( -}}\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends gnupg; \\\n\trm -rf /var/lib/apt/lists/*; \\\n{{ ) end -}}\n\t\\\n\tmkdir -p /usr/src; \\\n\tcd /usr/src; \\\n\t\\\n\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \\\n\t\\\n\tif [ -n \"$PHP_SHA256\" ]; then \\\n\t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \\\n\tfi; \\\n\t\\\n\tif [ -n \"$PHP_ASC_URL\" ]; then \\\n\t\tcurl -fsSL -o php.tar.xz.asc \"$PHP_ASC_URL\"; \\\n\t\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\t\tfor key in $GPG_KEYS; do \\\n\t\t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\t\tdone; \\\n\t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \\\n\t\tgpgconf --kill all; \\\n\t\trm -rf \"$GNUPGHOME\"; \\\n\tfi; \\\n\t\\\n{{ if is_alpine then ( -}}\n\tapk del --no-network .fetch-deps\n{{ ) else ( -}}\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n{{ ) end -}}\n\nCOPY docker-php-source /usr/local/bin/\n\nRUN set -eux; \\\n{{ if is_alpine then ( -}}\n\tapk add --no-cache --virtual .build-deps \\\n{{ ) else ( -}}\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n{{ ) end -}}\n{{\n\t[\n\t\t[ if is_alpine then\n\t\t\t# alpine packages\n\t\t\t\"$PHPIZE_DEPS\",\n\t\t\t\"argon2-dev\",\n\t\t\t\"coreutils\",\n\t\t\t\"curl-dev\",\n\t\t\t\"gnu-libiconv-dev\", # https://www.php.net/manual/en/intro.iconv.php \"it'd be a good idea to install the GNU libiconv library\"\n\t\t\t\"libsodium-dev\",\n\t\t\t\"libxml2-dev\",\n\t\t\t\"openssl-dev\",\n\t\t\t# https://github.com/docker-library/php/pull/1552\n\t\t\tif env.version | rtrimstr(\"-rc\") == \"8.1\" then \"patch\", \"patchutils\" else empty end,\n\t\t\t\"readline-dev\",\n\t\t\t\"sqlite-dev\",\n\t\t\t# https://github.com/docker-library/php/issues/888\n\t\t\t\"linux-headers\",\n\t\t\t# oniguruma is part of mbstring in php 7.4+\n\t\t\t\"oniguruma-dev\"\n\t\telse\n\t\t\t# debian packages\n\t\t\tif env.variant == \"apache\" then \"apache2-dev\" else empty end,\n\t\t\t\"libargon2-dev\",\n\t\t\t\"libcurl4-openssl-dev\",\n\t\t\t\"libreadline-dev\",\n\t\t\t\"libsodium-dev\",\n\t\t\t\"libsqlite3-dev\",\n\t\t\t\"libssl-dev\",\n\t\t\t\"libxml2-dev\",\n\t\t\t\"zlib1g-dev\",\n\t\t\t# oniguruma is part of mbstring in php 7.4+\n\t\t\t\"libonig-dev\"\n\t\tend ] | sort[] | (\n-}}\n\t\t{{ . }} \\\n{{\n\t\t)\n\t] | add\n-}}\n\t; \\\n\t\\\n{{ if is_alpine then ( -}}\n# make sure musl's iconv doesn't get used (https://www.php.net/manual/en/intro.iconv.php)\n\trm -vf /usr/include/iconv.h; \\\n\t\\\n{{ ) else \"\" end -}}\n\texport \\\n\t\tCFLAGS=\"$PHP_CFLAGS\" \\\n\t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \\\n\t\tLDFLAGS=\"$PHP_LDFLAGS\" \\\n# https://github.com/php/php-src/blob/d6299206dd828382753453befd1b915491b741c6/configure.ac#L1496-L1511\n\t\tPHP_BUILD_PROVIDER='https://github.com/docker-library/php' \\\n\t\tPHP_UNAME='Linux - Docker' \\\n\t; \\\n\tdocker-php-source extract; \\\n\tcd /usr/src/php; \\\n{{ if is_alpine and (env.version | rtrimstr(\"-rc\") == \"8.1\") then ( -}}\n# Apply patches; see https://github.com/docker-library/php/pull/1552\n\t# https://github.com/php/php-src/issues/11678\n\tcurl -fL 'https://github.com/php/php-src/commit/577b8ae4226368e66fee7a9b5c58f9e2428372fc.patch?full_index=1' -o 11678.patch; \\\n\techo '6edc20c3bb3e7cc13515abce7f2fffa8ebea6cf7469abfbc78fcdc120350b239 *11678.patch' | sha256sum -c -; \\\n\tpatch -p1 < 11678.patch; \\\n\trm 11678.patch; \\\n\t# https://github.com/php/php-src/issues/14834\n\tcurl -fL 'https://github.com/php/php-src/commit/67259e451d5d58b4842776c5696a66d74e157609.patch?full_index=1' -o 14834.patch; \\\n\techo 'ed10a1b254091ad676ed204e55628ecbd6c8962004d6185a1821cedecd526c0f *14834.patch' | sha256sum -c -; \\\n\tfilterdiff -x '*/NEWS' 14834.patch | patch -p1; \\\n\trm 14834.patch; \\\n{{ ) else \"\" end -}}\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n{{ if is_alpine then \"\" else ( -}}\n\tdebMultiarch=\"$(dpkg-architecture --query DEB_BUILD_MULTIARCH)\"; \\\n# https://bugs.php.net/bug.php?id=74125\n\tif [ ! -d /usr/include/curl ]; then \\\n\t\tln -sT \"/usr/include/$debMultiarch/curl\" /usr/local/include/curl; \\\n\tfi; \\\n{{ ) end -}}\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\t\t\\\n# make sure invalid --configure-flags are fatal errors instead of just warnings\n\t\t--enable-option-checking=fatal \\\n\t\t\\\n# https://github.com/docker-library/php/issues/439\n\t\t--with-mhash \\\n\t\t\\\n# https://github.com/docker-library/php/issues/822\n\t\t--with-pic \\\n\t\t\\\n{{ if env.version | rtrimstr(\"-rc\") == \"8.1\" then ( -}}\n# --enable-ftp is included here for compatibility with existing versions. ftp_ssl_connect() needed ftp to be compiled statically before PHP 7.0 (see https://github.com/docker-library/php/issues/236).\n\t\t--enable-ftp \\\n{{ ) else \"\" end -}}\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n# https://wiki.php.net/rfc/argon2_password_hash\n\t\t--with-password-argon2 \\\n# https://wiki.php.net/rfc/libsodium\n\t\t--with-sodium=shared \\\n# always build against system sqlite3 (https://github.com/php/php-src/commit/6083a387a81dbbd66d6316a3a12a63f06d5f7109)\n\t\t--with-pdo-sqlite=/usr \\\n\t\t--with-sqlite3=/usr \\\n\t\t\\\n\t\t--with-curl \\\n\t\t--with-iconv{{ if is_alpine then \"=/usr\" else \"\" end }} \\\n\t\t--with-openssl \\\n\t\t--with-readline \\\n\t\t--with-zlib \\\n\t\t\\\n{{ if env.variant | IN(\"cli\", \"zts\") then ( -}}\n# https://github.com/docker-library/php/pull/1259\n\t\t--enable-phpdbg \\\n\t\t--enable-phpdbg-readline \\\n{{ ) else ( -}}\n# https://github.com/bwoebi/phpdbg-docs/issues/1#issuecomment-163872806 (\"phpdbg is primarily a CLI debugger, and is not suitable for debugging an fpm stack.\")\n\t\t--disable-phpdbg \\\n{{ ) end -}}\n\t\t\\\n# in PHP 7.4+, the pecl/pear installers are officially deprecated (requiring an explicit \"--with-pear\")\n\t\t--with-pear \\\n\t\t\\\n{{ if env.version | rtrimstr(\"-rc\") | IN(\"8.1\", \"8.2\") then ( -}}\n# bundled pcre does not support JIT on riscv64 until 10.41 (php 8.3+)\n# https://github.com/PCRE2Project/pcre2/commits/pcre2-10.41/src/sljit/sljitNativeRISCV_64.c\n# https://github.com/php/php-src/tree/php-8.3.0/ext/pcre/pcre2lib\n{{ if is_alpine then ( -}}\n\t\t$(test \"$gnuArch\" = 'riscv64-linux-musl' && echo '--without-pcre-jit') \\\n{{ ) else ( -}}\n\t\t$(test \"$gnuArch\" = 'riscv64-linux-gnu' && echo '--without-pcre-jit') \\\n{{ ) end -}}\n{{ ) else \"\" end -}}\n{{ if is_alpine then \"\" else ( -}}\n\t\t--with-libdir=\"lib/$debMultiarch\" \\\n{{ ) end -}}\n{{ # https://github.com/docker-library/php/issues/280 -}}\n{{ if env.variant | IN(\"cli\", \"zts\") then \"\" else ( -}}\n\t\t\\\n\t\t--disable-cgi \\\n{{ ) end -}}\n{{ # zts + alpine special cased for embed (otherwise zts is effectively cli): https://github.com/docker-library/php/pull/1342 -}}\n{{ if (env.variant == \"zts\") or (env.variant == \"cli\" and (is_alpine | not)) then ( -}}\n\t\t\\\n# https://github.com/docker-library/php/pull/939#issuecomment-730501748\n\t\t--enable-embed \\\n{{ ) else \"\" end -}}\n{{ if env.variant == \"apache\" then ( -}}\n\t\t\\\n\t\t--with-apxs2 \\\n{{ ) elif env.variant == \"fpm\" then ( -}}\n\t\t\\\n\t\t--enable-fpm \\\n\t\t--with-fpm-user=www-data \\\n\t\t--with-fpm-group=www-data \\\n{{ ) elif env.variant == \"zts\" then ( -}}\n\t\t\\\n\t\t--enable-zts \\\n# https://externals.io/message/118859\n\t\t--disable-zend-signals \\\n{{ if env.version | rtrimstr(\"-rc\") | IN(\"8.1\", \"8.2\") then ( -}}\n\t\t--enable-zend-max-execution-timers \\\n{{ ) else \"\" end -}}\n{{ ) else \"\" end -}}\n{{ if env.DOCKER_PHP_ENABLE_DEBUG then ( -}}\n{{ # DOCKER_PHP_ENABLE_DEBUG is not used or supported by official-images; this is for users who want to build their own php image with debug enabled -}}\n{{ # example usage to regenerate Dockerfiles with debug enabled: \"DOCKER_PHP_ENABLE_DEBUG=1 ./apply-templates\" -}}\n\t\t--enable-debug \\\n{{ ) else \"\" end -}}\n\t; \\\n\tmake -j \"$(nproc)\"; \\\n\tfind -type f -name '*.a' -delete; \\\n\tmake install; \\\n{{ if env.DOCKER_PHP_ENABLE_DEBUG then \"\" else ( -}}\n{{ # DOCKER_PHP_ENABLE_DEBUG is not used by official-images -}}\n\tfind \\\n\t\t/usr/local \\\n\t\t-type f \\\n\t\t-perm '/0111' \\\n\t\t-exec sh -euxc ' \\\n\t\t\tstrip --strip-all \"$@\" || : \\\n\t\t' -- '{}' + \\\n\t; \\\n{{ ) end -}}\n\tmake clean; \\\n\t\\\n# https://github.com/docker-library/php/issues/692 (copy default example \"php.ini\" files somewhere easily discoverable)\n\tcp -v php.ini-* \"$PHP_INI_DIR/\"; \\\n\t\\\n\tcd /; \\\n\tdocker-php-source delete; \\\n\t\\\n{{ if is_alpine then ( -}}\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache $runDeps; \\\n\t\\\n\tapk del --no-network .build-deps; \\\n{{ ) else ( -}}\n# reset apt-mark's \"manual\" list so that \"purge --auto-remove\" will remove all build dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tfind /usr/local -type f -executable -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { so = $(NF-1); if (index(so, \"/usr/local/\") == 1) { next }; gsub(\"^/(usr/)?\", \"\", so); printf \"*%s\\n\", so }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n{{ ) end -}}\n\t\\\n# update pecl channel definitions https://github.com/docker-library/php/issues/443\n\tpecl update-channels; \\\n\trm -rf /tmp/pear ~/.pearrc; \\\n\t\\\n# smoke test\n\tphp --version\n\nCOPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/\n\n# sodium was built as a shared module (so that it can be replaced later if so desired), so let's enable it too (https://github.com/docker-library/php/issues/598)\nRUN docker-php-ext-enable sodium\n\nENTRYPOINT [\"docker-php-entrypoint\"]\n{{ if env.variant == \"apache\" then ( -}}\n# https://httpd.apache.org/docs/2.4/stopping.html#gracefulstop\nSTOPSIGNAL SIGWINCH\n\nCOPY apache2-foreground /usr/local/bin/\nWORKDIR /var/www/html\n\nEXPOSE 80\n{{ ) elif env.variant == \"fpm\" then ( -}}\nWORKDIR /var/www/html\n\nRUN set -eux; \\\n\tcd /usr/local/etc; \\\n\tif [ -d php-fpm.d ]; then \\\n\t\t# for some reason, upstream's php-fpm.conf.default has \"include=NONE/etc/php-fpm.d/*.conf\"\n\t\tsed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \\\n\t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf; \\\n\telse \\\n\t\t# PHP 5.x doesn't use \"include=\" by default, so we'll create our own simple config that mimics PHP 7+ for consistency\n\t\tmkdir php-fpm.d; \\\n\t\tcp php-fpm.conf.default php-fpm.d/www.conf; \\\n\t\t{ \\\n\t\t\techo '[global]'; \\\n\t\t\techo 'include=etc/php-fpm.d/*.conf'; \\\n\t\t} | tee php-fpm.conf; \\\n\tfi; \\\n\t{ \\\n\t\techo '[global]'; \\\n\t\techo 'error_log = /proc/self/fd/2'; \\\n\t\techo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192'; \\\n\t\techo; \\\n\t\techo '[www]'; \\\n\t\techo '; php-fpm closes STDOUT on startup, so sending logs to /proc/self/fd/1 does not work.'; \\\n\t\techo '; https://bugs.php.net/bug.php?id=73886'; \\\n\t\techo 'access.log = /proc/self/fd/2'; \\\n\t\techo; \\\n\t\techo 'clear_env = no'; \\\n\t\techo; \\\n\t\techo '; Ensure worker stdout and stderr are sent to the main error log.'; \\\n\t\techo 'catch_workers_output = yes'; \\\n\t\techo 'decorate_workers_output = no'; \\\n\t} | tee php-fpm.d/docker.conf; \\\n\t{ \\\n\t\techo '[global]'; \\\n\t\techo 'daemonize = no'; \\\n\t\techo; \\\n\t\techo '[www]'; \\\n\t\techo 'listen = 9000'; \\\n\t} | tee php-fpm.d/zz-docker.conf; \\\n\tmkdir -p \"$PHP_INI_DIR/conf.d\"; \\\n\t{ \\\n\t\techo '; https://github.com/docker-library/php/issues/878#issuecomment-938595965'; \\\n\t\techo 'fastcgi.logging = Off'; \\\n\t} > \"$PHP_INI_DIR/conf.d/docker-fpm.ini\"\n\n# Override stop signal to stop process gracefully\n# https://github.com/php/php-src/blob/17baa87faddc2550def3ae7314236826bc1b1398/sapi/fpm/php-fpm.8.in#L163\nSTOPSIGNAL SIGQUIT\n\nEXPOSE 9000\n{{ ) else \"\" end -}}\nCMD {{ env.cmd }}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.03125,
          "content": "Copyright (c) 2014 Docker, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.58203125,
          "content": "# https://github.com/docker-library/php\n\n## Maintained by: [the Docker Community](https://github.com/docker-library/php)\n\nThis is the Git repo of the [Docker \"Official Image\"](https://github.com/docker-library/official-images#what-are-official-images) for [`php`](https://hub.docker.com/_/php/) (not to be confused with any official `php` image provided by `php` upstream). See [the Docker Hub page](https://hub.docker.com/_/php/) for the full readme on how to use this Docker image and for information regarding contributing and issues.\n\nThe [full image description on Docker Hub](https://hub.docker.com/_/php/) is generated/maintained over in [the docker-library/docs repository](https://github.com/docker-library/docs), specifically in [the `php` directory](https://github.com/docker-library/docs/tree/master/php).\n\n## See a change merged here that doesn't show up on Docker Hub yet?\n\nFor more information about the full official images change lifecycle, see [the \"An image's source changed in Git, now what?\" FAQ entry](https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what).\n\nFor outstanding `php` image PRs, check [PRs with the \"library/php\" label on the official-images repository](https://github.com/docker-library/official-images/labels/library%2Fphp). For the current \"source of truth\" for [`php`](https://hub.docker.com/_/php/), see [the `library/php` file in the official-images repository](https://github.com/docker-library/official-images/blob/master/library/php).\n\n<!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh -->\n"
        },
        {
          "name": "apache2-foreground",
          "type": "blob",
          "size": 1.314453125,
          "content": "#!/bin/bash\nset -e\n\n# Note: we don't just use \"apache2ctl\" here because it itself is just a shell-script wrapper around apache2 which provides extra functionality like \"apache2ctl start\" for launching apache2 in the background.\n# (also, when run as \"apache2ctl <apache args>\", it does not use \"exec\", which leaves an undesirable resident shell process)\n\n: \"${APACHE_CONFDIR:=/etc/apache2}\"\n: \"${APACHE_ENVVARS:=$APACHE_CONFDIR/envvars}\"\nif test -f \"$APACHE_ENVVARS\"; then\n\t. \"$APACHE_ENVVARS\"\nfi\n\n# Apache gets grumpy about PID files pre-existing\n: \"${APACHE_RUN_DIR:=/var/run/apache2}\"\n: \"${APACHE_PID_FILE:=$APACHE_RUN_DIR/apache2.pid}\"\nrm -f \"$APACHE_PID_FILE\"\n\n# create missing directories\n# (especially APACHE_RUN_DIR, APACHE_LOCK_DIR, and APACHE_LOG_DIR)\nfor e in \"${!APACHE_@}\"; do\n\tif [[ \"$e\" == *_DIR ]] && [[ \"${!e}\" == /* ]]; then\n\t\t# handle \"/var/lock\" being a symlink to \"/run/lock\", but \"/run/lock\" not existing beforehand, so \"/var/lock/something\" fails to mkdir\n\t\t#   mkdir: cannot create directory '/var/lock': File exists\n\t\tdir=\"${!e}\"\n\t\twhile [ \"$dir\" != \"$(dirname \"$dir\")\" ]; do\n\t\t\tdir=\"$(dirname \"$dir\")\"\n\t\t\tif [ -d \"$dir\" ]; then\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tabsDir=\"$(readlink -f \"$dir\" 2>/dev/null || :)\"\n\t\t\tif [ -n \"$absDir\" ]; then\n\t\t\t\tmkdir -p \"$absDir\"\n\t\t\tfi\n\t\tdone\n\n\t\tmkdir -p \"${!e}\"\n\tfi\ndone\n\nexec apache2 -DFOREGROUND \"$@\"\n"
        },
        {
          "name": "apply-templates.sh",
          "type": "blob",
          "size": 1.939453125,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\n[ -f versions.json ] # run \"versions.sh\" first\n\njqt='.jq-template.awk'\nif [ -n \"${BASHBREW_SCRIPTS:-}\" ]; then\n\tjqt=\"$BASHBREW_SCRIPTS/jq-template.awk\"\nelif [ \"$BASH_SOURCE\" -nt \"$jqt\" ]; then\n\t# https://github.com/docker-library/bashbrew/blob/master/scripts/jq-template.awk\n\twget -qO \"$jqt\" 'https://github.com/docker-library/bashbrew/raw/9f6a35772ac863a0241f147c820354e4008edf38/scripts/jq-template.awk'\nfi\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'keys | map(@sh) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\ngenerated_warning() {\n\tcat <<-EOH\n\t\t#\n\t\t# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n\t\t#\n\t\t# PLEASE DO NOT EDIT IT DIRECTLY.\n\t\t#\n\n\tEOH\n}\n\nfor version; do\n\texport version\n\n\trm -rf \"$version\"\n\n\tif jq -e '.[env.version] | not' versions.json > /dev/null; then\n\t\techo \"deleting $version ...\"\n\t\tcontinue\n\tfi\n\n\tvariants=\"$(jq -r '.[env.version].variants | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\n\tfor dir in \"${variants[@]}\"; do\n\t\tsuite=\"$(dirname \"$dir\")\" # \"buster\", etc\n\t\tvariant=\"$(basename \"$dir\")\" # \"cli\", etc\n\t\texport suite variant\n\n\t\talpineVer=\"${suite#alpine}\" # \"3.12\", etc\n\t\tif [ \"$suite\" != \"$alpineVer\" ]; then\n\t\t\tfrom=\"alpine:$alpineVer\"\n\t\telse\n\t\t\tfrom=\"debian:$suite-slim\"\n\t\tfi\n\t\texport from alpineVer\n\n\t\tcase \"$variant\" in\n\t\t\tapache) cmd='[\"apache2-foreground\"]' ;;\n\t\t\tfpm) cmd='[\"php-fpm\"]' ;;\n\t\t\t*) cmd='[\"php\", \"-a\"]' ;;\n\t\tesac\n\t\texport cmd\n\n\t\techo \"processing $version/$dir ...\"\n\t\tmkdir -p \"$version/$dir\"\n\n\t\t{\n\t\t\tgenerated_warning\n\t\t\tgawk -f \"$jqt\" 'Dockerfile-linux.template'\n\t\t} > \"$version/$dir/Dockerfile\"\n\n\t\tcp -a \\\n\t\t\tdocker-php-entrypoint \\\n\t\t\tdocker-php-ext-* \\\n\t\t\tdocker-php-source \\\n\t\t\t\"$version/$dir/\"\n\t\tif [ \"$variant\" = 'apache' ]; then\n\t\t\tcp -a apache2-foreground \"$version/$dir/\"\n\t\tfi\n\n\t\tcmd=\"$(jq <<<\"$cmd\" -r '.[0]')\"\n\t\tif [ \"$cmd\" != 'php' ]; then\n\t\t\tsed -i -e 's! php ! '\"$cmd\"' !g' \"$version/$dir/docker-php-entrypoint\"\n\t\tfi\n\tdone\ndone\n"
        },
        {
          "name": "docker-php-entrypoint",
          "type": "blob",
          "size": 0.115234375,
          "content": "#!/bin/sh\nset -e\n\n# first arg is `-f` or `--some-option`\nif [ \"${1#-}\" != \"$1\" ]; then\n\tset -- php \"$@\"\nfi\n\nexec \"$@\"\n"
        },
        {
          "name": "docker-php-ext-configure",
          "type": "blob",
          "size": 1.4150390625,
          "content": "#!/bin/sh\nset -e\n\n# prefer user supplied CFLAGS, but default to our PHP_CFLAGS\n: ${CFLAGS:=$PHP_CFLAGS}\n: ${CPPFLAGS:=$PHP_CPPFLAGS}\n: ${LDFLAGS:=$PHP_LDFLAGS}\nexport CFLAGS CPPFLAGS LDFLAGS\n\nsrcExists=\nif [ -d /usr/src/php ]; then\n\tsrcExists=1\nfi\ndocker-php-source extract\nif [ -z \"$srcExists\" ]; then\n\ttouch /usr/src/php/.docker-delete-me\nfi\n\ncd /usr/src/php/ext\n\nusage() {\n\techo \"usage: $0 ext-name [configure flags]\"\n\techo \"   ie: $0 gd --with-jpeg-dir=/usr/local/something\"\n\techo\n\techo 'Possible values for ext-name:'\n\tfind . \\\n\t\t\t-mindepth 2 \\\n\t\t\t-maxdepth 2 \\\n\t\t\t-type f \\\n\t\t\t-name 'config.m4' \\\n\t\t| xargs -n1 dirname \\\n\t\t| xargs -n1 basename \\\n\t\t| sort \\\n\t\t| xargs\n\techo\n\techo 'Some of the above modules are already compiled into PHP; please check'\n\techo 'the output of \"php -i\" to see which modules are already loaded.'\n}\n\next=\"$1\"\nif [ -z \"$ext\" ] || [ ! -d \"$ext\" ]; then\n\tusage >&2\n\texit 1\nfi\nshift\n\npm='unknown'\nif [ -e /lib/apk/db/installed ]; then\n\tpm='apk'\nfi\n\nif [ \"$pm\" = 'apk' ]; then\n\tif \\\n\t\t[ -n \"$PHPIZE_DEPS\" ] \\\n\t\t&& ! apk info --installed .phpize-deps > /dev/null \\\n\t\t&& ! apk info --installed .phpize-deps-configure > /dev/null \\\n\t; then\n\t\tapk add --no-cache --virtual .phpize-deps-configure $PHPIZE_DEPS\n\tfi\nfi\n\nif command -v dpkg-architecture > /dev/null; then\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\tset -- --build=\"$gnuArch\" \"$@\"\nfi\n\ncd \"$ext\"\nphpize\n./configure --enable-option-checking=fatal \"$@\"\n"
        },
        {
          "name": "docker-php-ext-enable",
          "type": "blob",
          "size": 2.6064453125,
          "content": "#!/bin/sh\nset -e\n\nextDir=\"$(php -d 'display_errors=stderr' -r 'echo ini_get(\"extension_dir\");')\"\ncd \"$extDir\"\n\nusage() {\n\techo \"usage: $0 [options] module-name [module-name ...]\"\n\techo \"   ie: $0 gd mysqli\"\n\techo \"       $0 pdo pdo_mysql\"\n\techo \"       $0 --ini-name 0-apc.ini apcu apc\"\n\techo\n\techo 'Possible values for module-name:'\n\tfind -maxdepth 1 \\\n\t\t\t-type f \\\n\t\t\t-name '*.so' \\\n\t\t\t-exec basename '{}' ';' \\\n\t\t| sort \\\n\t\t| xargs\n\techo\n\techo 'Some of the above modules are already compiled into PHP; please check'\n\techo 'the output of \"php -i\" to see which modules are already loaded.'\n}\n\nopts=\"$(getopt -o 'h?' --long 'help,ini-name:' -- \"$@\" || { usage >&2 && false; })\"\neval set -- \"$opts\"\n\niniName=\nwhile true; do\n\tflag=\"$1\"\n\tshift\n\tcase \"$flag\" in\n\t\t--help|-h|'-?') usage && exit 0 ;;\n\t\t--ini-name) iniName=\"$1\" && shift ;;\n\t\t--) break ;;\n\t\t*)\n\t\t\t{\n\t\t\t\techo \"error: unknown flag: $flag\"\n\t\t\t\tusage\n\t\t\t} >&2\n\t\t\texit 1\n\t\t\t;;\n\tesac\ndone\n\nmodules=\nfor module; do\n\tif [ -z \"$module\" ]; then\n\t\tcontinue\n\tfi\n\tif ! [ -f \"$module\" ] && ! [ -f \"$module.so\" ]; then\n\t\techo >&2 \"error: '$module' does not exist\"\n\t\techo >&2\n\t\tusage >&2\n\t\texit 1\n\tfi\n\tmodules=\"$modules $module\"\ndone\n\nif [ -z \"$modules\" ]; then\n\tusage >&2\n\texit 1\nfi\n\npm='unknown'\nif [ -e /lib/apk/db/installed ]; then\n\tpm='apk'\nfi\n\napkDel=\nif [ \"$pm\" = 'apk' ]; then\n\tif \\\n\t\t[ -n \"$PHPIZE_DEPS\" ] \\\n\t\t&& ! apk info --installed .phpize-deps > /dev/null \\\n\t\t&& ! apk info --installed .phpize-deps-configure > /dev/null \\\n\t; then\n\t\tapk add --no-cache --virtual '.docker-php-ext-enable-deps' binutils\n\t\tapkDel='.docker-php-ext-enable-deps'\n\tfi\nfi\n\nfor module in $modules; do\n\tmoduleFile=\"$module\"\n\tif [ -f \"$module.so\" ] && ! [ -f \"$module\" ]; then\n\t\tmoduleFile=\"$module.so\"\n\tfi\n\tif readelf --wide --syms \"$moduleFile\" | grep -q ' zend_extension_entry$'; then\n\t\t# https://wiki.php.net/internals/extensions#loading_zend_extensions\n\t\tline=\"zend_extension=$module\"\n\telse\n\t\tline=\"extension=$module\"\n\tfi\n\n\text=\"$(basename \"$module\")\"\n\text=\"${ext%.*}\"\n\tif php -d 'display_errors=stderr' -r 'exit(extension_loaded(\"'\"$ext\"'\") ? 0 : 1);'; then\n\t\t# this isn't perfect, but it's better than nothing\n\t\t# (for example, 'opcache.so' presents inside PHP as 'Zend OPcache', not 'opcache')\n\t\techo >&2\n\t\techo >&2 \"warning: $ext ($module) is already loaded!\"\n\t\techo >&2\n\t\tcontinue\n\tfi\n\n\tcase \"$iniName\" in\n\t\t/*)\n\t\t\t# allow an absolute path\n\t\t\tini=\"$iniName\"\n\t\t\t;;\n\t\t*)\n\t\t\tini=\"$PHP_INI_DIR/conf.d/${iniName:-\"docker-php-ext-$ext.ini\"}\"\n\t\t\t;;\n\tesac\n\tif ! grep -qFx -e \"$line\" -e \"$line.so\" \"$ini\" 2>/dev/null; then\n\t\techo \"$line\" >> \"$ini\"\n\tfi\ndone\n\nif [ \"$pm\" = 'apk' ] && [ -n \"$apkDel\" ]; then\n\tapk del --no-network $apkDel\nfi\n"
        },
        {
          "name": "docker-php-ext-install",
          "type": "blob",
          "size": 2.8935546875,
          "content": "#!/bin/sh\nset -e\n\n# prefer user supplied CFLAGS, but default to our PHP_CFLAGS\n: ${CFLAGS:=$PHP_CFLAGS}\n: ${CPPFLAGS:=$PHP_CPPFLAGS}\n: ${LDFLAGS:=$PHP_LDFLAGS}\nexport CFLAGS CPPFLAGS LDFLAGS\n\nsrcExists=\nif [ -d /usr/src/php ]; then\n\tsrcExists=1\nfi\ndocker-php-source extract\nif [ -z \"$srcExists\" ]; then\n\ttouch /usr/src/php/.docker-delete-me\nfi\n\ncd /usr/src/php/ext\n\nusage() {\n\techo \"usage: $0 [-jN] [--ini-name file.ini] ext-name [ext-name ...]\"\n\techo \"   ie: $0 gd mysqli\"\n\techo \"       $0 pdo pdo_mysql\"\n\techo \"       $0 -j5 gd mbstring mysqli pdo pdo_mysql shmop\"\n\techo\n\techo 'if custom ./configure arguments are necessary, see docker-php-ext-configure'\n\techo\n\techo 'Possible values for ext-name:'\n\tfind . \\\n\t\t\t-mindepth 2 \\\n\t\t\t-maxdepth 2 \\\n\t\t\t-type f \\\n\t\t\t-name 'config.m4' \\\n\t\t| xargs -n1 dirname \\\n\t\t| xargs -n1 basename \\\n\t\t| sort \\\n\t\t| xargs\n\techo\n\techo 'Some of the above modules are already compiled into PHP; please check'\n\techo 'the output of \"php -i\" to see which modules are already loaded.'\n}\n\nopts=\"$(getopt -o 'h?j:' --long 'help,ini-name:,jobs:' -- \"$@\" || { usage >&2 && false; })\"\neval set -- \"$opts\"\n\nj=1\niniName=\nwhile true; do\n\tflag=\"$1\"\n\tshift\n\tcase \"$flag\" in\n\t\t--help|-h|'-?') usage && exit 0 ;;\n\t\t--ini-name) iniName=\"$1\" && shift ;;\n\t\t--jobs|-j) j=\"$1\" && shift ;;\n\t\t--) break ;;\n\t\t*)\n\t\t\t{\n\t\t\t\techo \"error: unknown flag: $flag\"\n\t\t\t\tusage\n\t\t\t} >&2\n\t\t\texit 1\n\t\t\t;;\n\tesac\ndone\n\nexts=\nfor ext; do\n\tif [ -z \"$ext\" ]; then\n\t\tcontinue\n\tfi\n\tif [ ! -d \"$ext\" ]; then\n\t\techo >&2 \"error: $PWD/$ext does not exist\"\n\t\techo >&2\n\t\tusage >&2\n\t\texit 1\n\tfi\n\texts=\"$exts $ext\"\ndone\n\nif [ -z \"$exts\" ]; then\n\tusage >&2\n\texit 1\nfi\n\npm='unknown'\nif [ -e /lib/apk/db/installed ]; then\n\tpm='apk'\nfi\n\napkDel=\nif [ \"$pm\" = 'apk' ]; then\n\tif [ -n \"$PHPIZE_DEPS\" ]; then\n\t\tif apk info --installed .phpize-deps-configure > /dev/null; then\n\t\t\tapkDel='.phpize-deps-configure'\n\t\telif ! apk info --installed .phpize-deps > /dev/null; then\n\t\t\tapk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS\n\t\t\tapkDel='.phpize-deps'\n\t\tfi\n\tfi\nfi\n\npopDir=\"$PWD\"\nfor ext in $exts; do\n\tcd \"$ext\"\n\n\t[ -e Makefile ] || docker-php-ext-configure \"$ext\"\n\n\tmake -j\"$j\"\n\n\tif ! php -n -d 'display_errors=stderr' -r 'exit(ZEND_DEBUG_BUILD ? 0 : 1);' > /dev/null; then\n\t\t# only \"strip\" modules if we aren't using a debug build of PHP\n\t\t# (none of our builds are debug builds, but PHP might be recompiled with \"--enable-debug\" configure option)\n\t\t# https://github.com/docker-library/php/issues/1268\n\n\t\tfind modules \\\n\t\t\t-maxdepth 1 \\\n\t\t\t-name '*.so' \\\n\t\t\t-exec sh -euxc ' \\\n\t\t\t\tstrip --strip-all \"$@\" || :\n\t\t\t' -- '{}' +\n\tfi\n\n\tmake -j\"$j\" install\n\n\tfind modules \\\n\t\t-maxdepth 1 \\\n\t\t-name '*.so' \\\n\t\t-exec basename '{}' ';' \\\n\t\t\t| xargs -r docker-php-ext-enable ${iniName:+--ini-name \"$iniName\"}\n\n\tmake -j\"$j\" clean\n\n\tcd \"$popDir\"\ndone\n\nif [ \"$pm\" = 'apk' ] && [ -n \"$apkDel\" ]; then\n\tapk del --no-network $apkDel\nfi\n\nif [ -e /usr/src/php/.docker-delete-me ]; then\n\tdocker-php-source delete\nfi\n"
        },
        {
          "name": "docker-php-source",
          "type": "blob",
          "size": 0.5732421875,
          "content": "#!/bin/sh\nset -e\n\ndir=/usr/src/php\n\nusage() {\n\techo \"usage: $0 COMMAND\"\n\techo\n\techo \"Manage php source tarball lifecycle.\"\n\techo\n\techo \"Commands:\"\n\techo \"   extract  extract php source tarball into directory $dir if not already done.\"\n\techo \"   delete   delete extracted php source located into $dir if not already done.\"\n\techo\n}\n\ncase \"$1\" in\n\textract)\n\t\tmkdir -p \"$dir\"\n\t\tif [ ! -f \"$dir/.docker-extracted\" ]; then\n\t\t\ttar -Jxf /usr/src/php.tar.xz -C \"$dir\" --strip-components=1\n\t\t\ttouch \"$dir/.docker-extracted\"\n\t\tfi\n\t\t;;\n\n\tdelete)\n\t\trm -rf \"$dir\"\n\t\t;;\n\n\t*)\n\t\tusage\n\t\texit 1\n\t\t;;\nesac\n"
        },
        {
          "name": "generate-stackbrew-library.sh",
          "type": "blob",
          "size": 4.162109375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ndeclare -A aliases=(\n\t[8.4]='8 latest'\n)\n\nself=\"$(basename \"$BASH_SOURCE\")\"\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'to_entries | map(if .value then .key | @sh else empty end) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\n# sort version numbers with highest first\nIFS=$'\\n'; set -- $(sort -rV <<<\"$*\"); unset IFS\n\n# get the most recent commit which modified any of \"$@\"\nfileCommit() {\n\tgit log -1 --format='format:%H' HEAD -- \"$@\"\n}\n\n# get the most recent commit which modified \"$1/Dockerfile\" or any file COPY'd from \"$1/Dockerfile\"\ndirCommit() {\n\tlocal dir=\"$1\"; shift\n\t(\n\t\tcd \"$dir\"\n\t\tfileCommit \\\n\t\t\tDockerfile \\\n\t\t\t$(git show HEAD:./Dockerfile | awk '\n\t\t\t\ttoupper($1) == \"COPY\" {\n\t\t\t\t\tfor (i = 2; i < NF; i++) {\n\t\t\t\t\t\tprint $i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t')\n\t)\n}\n\ngetArches() {\n\tlocal repo=\"$1\"; shift\n\tlocal officialImagesBase=\"${BASHBREW_LIBRARY:-https://github.com/docker-library/official-images/raw/HEAD/library}/\"\n\n\tlocal parentRepoToArchesStr\n\tparentRepoToArchesStr=\"$(\n\t\tfind -name 'Dockerfile' -exec awk -v officialImagesBase=\"$officialImagesBase\" '\n\t\t\t\ttoupper($1) == \"FROM\" && $2 !~ /^('\"$repo\"'|scratch|.*\\/.*)(:|$)/ {\n\t\t\t\t\tprintf \"%s%s\\n\", officialImagesBase, $2\n\t\t\t\t}\n\t\t\t' '{}' + \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r bashbrew cat --format '[\"{{ .RepoName }}:{{ .TagName }}\"]=\"{{ join \" \" .TagEntry.Architectures }}\"'\n\t)\"\n\teval \"declare -g -A parentRepoToArches=( $parentRepoToArchesStr )\"\n}\ngetArches 'php'\n\ncat <<-EOH\n# this file is generated via https://github.com/docker-library/php/blob/$(fileCommit \"$self\")/$self\n\nMaintainers: Tianon Gravi <admwiggin@gmail.com> (@tianon),\n             Joseph Ferguson <yosifkit@gmail.com> (@yosifkit)\nGitRepo: https://github.com/docker-library/php.git\nEOH\n\n# prints \"$2$1$3$1...$N\"\njoin() {\n\tlocal sep=\"$1\"; shift\n\tlocal out; printf -v out \"${sep//%/%%}%s\" \"$@\"\n\techo \"${out#$sep}\"\n}\n\nfor version; do\n\trcVersion=\"${version%-rc}\"\n\texport version rcVersion\n\n\tif ! fullVersion=\"$(jq -er '.[env.version] | if . then .version else empty end' versions.json)\"; then\n\t\tcontinue\n\tfi\n\n\tif [ \"$rcVersion\" != \"$version\" ] && rcFullVersion=\"$(jq -er '.[env.rcVersion] | if . then .version else empty end' versions.json)\"; then\n\t\t# if this is a \"-rc\" release, let's make sure the release it contains isn't already GA (and thus something we should not publish anymore)\n\t\tlatestVersion=\"$({ echo \"$fullVersion\"; echo \"$rcFullVersion\"; } | sort -V | tail -1)\"\n\t\tif [[ \"$fullVersion\" == \"$rcFullVersion\"* ]] || [ \"$latestVersion\" = \"$rcFullVersion\" ]; then\n\t\t\t# \"x.y.z-rc1\" == x.y.z*\n\t\t\tcontinue\n\t\tfi\n\tfi\n\n\tvariants=\"$(jq -r '.[env.version].variants | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\n\tversionAliases=(\n\t\t$fullVersion\n\t\t$version\n\t\t${aliases[$version]:-}\n\t)\n\n\tdefaultDebianVariant=\"$(jq -r '\n\t\t.[env.version].variants\n\t\t| map(\n\t\t\tsplit(\"/\")[0]\n\t\t\t| select(\n\t\t\t\tstartswith(\"alpine\")\n\t\t\t\t| not\n\t\t\t)\n\t\t)\n\t\t| .[0]\n\t' versions.json)\"\n\tdefaultAlpineVariant=\"$(jq -r '\n\t\t.[env.version].variants\n\t\t| map(\n\t\t\tsplit(\"/\")[0]\n\t\t\t| select(\n\t\t\t\tstartswith(\"alpine\")\n\t\t\t)\n\t\t)\n\t\t| .[0]\n\t' versions.json)\"\n\n\tfor dir in \"${variants[@]}\"; do\n\t\tsuite=\"$(dirname \"$dir\")\" # \"buster\", etc\n\t\tvariant=\"$(basename \"$dir\")\" # \"cli\", etc\n\t\tdir=\"$version/$dir\"\n\t\t[ -f \"$dir/Dockerfile\" ] || continue\n\n\t\tvariantAliases=( \"${versionAliases[@]/%/-$variant}\" )\n\t\tvariantAliases=( \"${variantAliases[@]//latest-/}\" )\n\n\t\tif [ \"$variant\" = 'cli' ]; then\n\t\t\tvariantAliases+=( \"${versionAliases[@]}\" )\n\t\tfi\n\n\t\tsuiteVariantAliases=( \"${variantAliases[@]/%/-$suite}\" )\n\t\tif [ \"$suite\" = \"$defaultAlpineVariant\" ] ; then\n\t\t\tvariantAliases=( \"${variantAliases[@]/%/-alpine}\" )\n\t\telif [ \"$suite\" != \"$defaultDebianVariant\" ]; then\n\t\t\tvariantAliases=()\n\t\tfi\n\t\tvariantAliases=( \"${suiteVariantAliases[@]}\" ${variantAliases[@]+\"${variantAliases[@]}\"} )\n\t\tvariantAliases=( \"${variantAliases[@]//latest-/}\" )\n\n\t\tvariantParent=\"$(awk 'toupper($1) == \"FROM\" { print $2 }' \"$dir/Dockerfile\")\"\n\t\tvariantArches=\"${parentRepoToArches[$variantParent]}\"\n\n\t\tcommit=\"$(dirCommit \"$dir\")\"\n\n\t\techo\n\t\tcat <<-EOE\n\t\t\tTags: $(join ', ' \"${variantAliases[@]}\")\n\t\t\tArchitectures: $(join ', ' $variantArches)\n\t\t\tGitCommit: $commit\n\t\t\tDirectory: $dir\n\t\tEOE\n\tdone\ndone\n"
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 0.130859375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\n./versions.sh \"$@\"\n./apply-templates.sh \"$@\"\n"
        },
        {
          "name": "versions.json",
          "type": "blob",
          "size": 3.6279296875,
          "content": "{\n  \"8.1\": {\n    \"ascUrl\": \"https://www.php.net/distributions/php-8.1.31.tar.xz.asc\",\n    \"sha256\": \"c4f244d46ba51c72f7d13d4f66ce6a9e9a8d6b669c51be35e01765ba58e7afca\",\n    \"url\": \"https://www.php.net/distributions/php-8.1.31.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.1.31\"\n  },\n  \"8.1-rc\": null,\n  \"8.2\": {\n    \"ascUrl\": \"https://www.php.net/distributions/php-8.2.27.tar.xz.asc\",\n    \"sha256\": \"3eec91294d8c09b3df80b39ec36d574ed9b05de4c8afcb25fa215d48f9ecbc6b\",\n    \"url\": \"https://www.php.net/distributions/php-8.2.27.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.2.27\"\n  },\n  \"8.2-rc\": null,\n  \"8.3\": {\n    \"ascUrl\": \"https://www.php.net/distributions/php-8.3.15.tar.xz.asc\",\n    \"sha256\": \"3df5d45637283f759eef8fc3ce03de829ded3e200c3da278936a684955d2f94f\",\n    \"url\": \"https://www.php.net/distributions/php-8.3.15.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.3.15\"\n  },\n  \"8.3-rc\": {\n    \"ascUrl\": \"https://downloads.php.net/~eric/php-8.3.16RC1.tar.xz.asc\",\n    \"sha256\": \"c09ff054748d8017bab157c15d42ed9b43961082704ef5fefb6eef3d93364b93\",\n    \"url\": \"https://downloads.php.net/~eric/php-8.3.16RC1.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.3.16RC1\"\n  },\n  \"8.4\": {\n    \"ascUrl\": \"https://www.php.net/distributions/php-8.4.2.tar.xz.asc\",\n    \"sha256\": \"92636453210f7f2174d6ee6df17a5811368f556a6c2c2cbcf019321e36456e01\",\n    \"url\": \"https://www.php.net/distributions/php-8.4.2.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.4.2\"\n  },\n  \"8.4-rc\": {\n    \"ascUrl\": \"https://downloads.php.net/~saki/php-8.4.3RC1.tar.xz.asc\",\n    \"sha256\": \"dc60e2ba8fb4ae492f7732c7146f9a0717a08c73db4bd4b6b15babc3138c8256\",\n    \"url\": \"https://downloads.php.net/~saki/php-8.4.3RC1.tar.xz\",\n    \"variants\": [\n      \"bookworm/cli\",\n      \"bookworm/apache\",\n      \"bookworm/fpm\",\n      \"bookworm/zts\",\n      \"bullseye/cli\",\n      \"bullseye/apache\",\n      \"bullseye/fpm\",\n      \"bullseye/zts\",\n      \"alpine3.21/cli\",\n      \"alpine3.21/fpm\",\n      \"alpine3.21/zts\",\n      \"alpine3.20/cli\",\n      \"alpine3.20/fpm\",\n      \"alpine3.20/zts\"\n    ],\n    \"version\": \"8.4.3RC1\"\n  }\n}\n"
        },
        {
          "name": "versions.sh",
          "type": "blob",
          "size": 2.9072265625,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\nversions=( \"$@\" )\nif [ ${#versions[@]} -eq 0 ]; then\n\tversions=( */ )\n\tjson='{}'\nelse\n\tjson=\"$(< versions.json)\"\nfi\nversions=( \"${versions[@]%/}\" )\n\nfor version in \"${versions[@]}\"; do\n\trcVersion=\"${version%-rc}\"\n\texport version rcVersion\n\n\t# scrape the relevant API based on whether we're looking for pre-releases\n\tif [ \"$rcVersion\" = \"$version\" ]; then\n\t\tapiUrl=\"https://www.php.net/releases/index.php?json&max=100&version=${rcVersion%%.*}\"\n\t\tapiJqExpr='\n\t\t\t(keys[] | select(startswith(env.rcVersion))) as $version\n\t\t\t| [ $version, (\n\t\t\t\t.[$version].source[]\n\t\t\t\t| select(.filename | endswith(\".xz\"))\n\t\t\t\t|\n\t\t\t\t\t\"https://www.php.net/distributions/\" + .filename,\n\t\t\t\t\t\"https://www.php.net/distributions/\" + .filename + \".asc\",\n\t\t\t\t\t.sha256 // \"\"\n\t\t\t) ]\n\t\t'\n\telse\n\t\tapiUrl='https://qa.php.net/api.php?type=qa-releases&format=json'\n\t\tapiJqExpr='\n\t\t\t(.releases // [])[]\n\t\t\t| select(.version | startswith(env.rcVersion))\n\t\t\t| [\n\t\t\t\t.version,\n\t\t\t\t.files.xz.path // \"\",\n\t\t\t\t\"\",\n\t\t\t\t.files.xz.sha256 // \"\"\n\t\t\t]\n\t\t'\n\tfi\n\tIFS=$'\\n'\n\tpossibles=( $(\n\t\tcurl -fsSL \"$apiUrl\" \\\n\t\t\t| jq --raw-output \"$apiJqExpr | @sh\" \\\n\t\t\t| sort -rV\n\t) )\n\tunset IFS\n\n\tif [ \"${#possibles[@]}\" -eq 0 ]; then\n\t\tif [ \"$rcVersion\" = \"$version\" ]; then\n\t\t\techo >&2\n\t\t\techo >&2 \"error: unable to determine available releases of $version\"\n\t\t\techo >&2\n\t\t\texit 1\n\t\telse\n\t\t\techo >&2 \"warning: skipping/removing '$version' (does not appear to exist upstream)\"\n\t\t\tjson=\"$(jq <<<\"$json\" -c '.[env.version] = null')\"\n\t\t\tcontinue\n\t\tfi\n\tfi\n\n\t# format of \"possibles\" array entries is \"VERSION URL.TAR.XZ URL.TAR.XZ.ASC SHA256\" (each value shell quoted)\n\t#   see the \"apiJqExpr\" values above for more details\n\teval \"possi=( ${possibles[0]} )\"\n\tfullVersion=\"${possi[0]}\"\n\turl=\"${possi[1]}\"\n\tascUrl=\"${possi[2]}\"\n\tsha256=\"${possi[3]}\"\n\n\tif ! wget -q --spider \"$url\"; then\n\t\techo >&2 \"error: '$url' appears to be missing\"\n\t\texit 1\n\tfi\n\n\t# if we don't have a .asc URL, let's see if we can figure one out :)\n\tif [ -z \"$ascUrl\" ] && wget -q --spider \"$url.asc\"; then\n\t\tascUrl=\"$url.asc\"\n\tfi\n\n\tvariants='[]'\n\t# order here controls the order of the library/ file\n\tfor suite in \\\n\t\tbookworm \\\n\t\tbullseye \\\n\t\talpine3.21 \\\n\t\talpine3.20 \\\n\t; do\n\t\tfor variant in cli apache fpm zts; do\n\t\t\tif [[ \"$suite\" = alpine* ]]; then\n\t\t\t\tif [ \"$variant\" = 'apache' ]; then\n\t\t\t\t\tcontinue\n\t\t\t\tfi\n\t\t\tfi\n\t\t\texport suite variant\n\t\t\tvariants=\"$(jq <<<\"$variants\" -c '. + [ env.suite + \"/\" + env.variant ]')\"\n\t\tdone\n\tdone\n\n\techo \"$version: $fullVersion\"\n\n\texport fullVersion url ascUrl sha256\n\tjson=\"$(\n\t\tjq <<<\"$json\" -c --argjson variants \"$variants\" '\n\t\t\t.[env.version] = {\n\t\t\t\tversion: env.fullVersion,\n\t\t\t\turl: env.url,\n\t\t\t\tascUrl: env.ascUrl,\n\t\t\t\tsha256: env.sha256,\n\t\t\t\tvariants: $variants,\n\t\t\t}\n\t\t'\n\t)\"\n\n\tif [ \"$version\" = \"$rcVersion\" ]; then\n\t\tjson=\"$(jq <<<\"$json\" -c '\n\t\t\t.[env.version + \"-rc\"] //= null\n\t\t')\"\n\tfi\ndone\n\njq <<<\"$json\" -S . > versions.json\n"
        }
      ]
    }
  ]
}