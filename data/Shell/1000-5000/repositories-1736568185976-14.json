{
  "metadata": {
    "timestamp": 1736568185976,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ivanhao/pvetools",
      "stars": 4642,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.8974609375,
          "content": "![logo](https://upload-images.jianshu.io/upload_images/4171480-4fc23dfbe28b491a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# pvetools\nproxmox ve tools script(debian9+ can use it).Including `email`, `samba`,` NFS  set zfs max ram`, `nested virtualization` ,`docker `, `pci passthrough` etc.\nfor english user,please look the end of readme.\n\n这是一个为proxmox ve写的工具脚本（理论上debian9+可以用）。包括`配置邮件`，`samba`，`NFS`，`zfs`，`嵌套虚拟化`，`docker`，`硬盘直通`等功能。\n\n\n\n### 安装\n\n##### 中国用户:\n\n###### 方式一：命令行安装\n\n> 需要用root账号来运行\n\n在终端中按行分别执行以下内容：\n\n>强烈建议先删除企业源：`rm /etc/apt/sources.list.d/pve-enterprise.list`\n\n```\nexport LC_ALL=en_US.UTF-8\napt update && apt -y install git && git clone https://github.com/ivanhao/pvetools.git\ncd pvetools\n./pvetools.sh\n```\n\n### 一键无脑安装:\n\n```\nsver=`cat /etc/os-release|grep VERSION_CODENAME|awk -F '=' '{print $2}'` && echo \"nameserver  8.8.8.8\" >> /etc/resolv.conf && rm -rf pvetools && echo \"deb http://mirrors.ustc.edu.cn/proxmox/debian/pve/ $sver pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-sub.list && sed -i 's|deb|#deb|' /etc/apt/sources.list.d/pve-enterprise.list && echo \"\" > /etc/apt/sources.list.d/ceph.list && export LC_ALL=en_US.UTF-8 && apt update && apt -y install git && git clone https://github.com/ivanhao/pvetools.git && echo \"cd /root/pvetools && ./pvetools.sh\" > pvetools/pvetools && chmod +x pvetools/pvetools* && ln -s /root/pvetools/pvetools /usr/local/bin/pvetools && pvetools\n```\n\n###### 方式二：下载zip安装\n\n![download](https://upload-images.jianshu.io/upload_images/4171480-49193f4b6f4040fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n- 建议使用方式一来安装，不建议直接下载单sh脚本使用，因为那样更新的功能会无法使用！\n\n- 如果网络无法使用，或命令行使用有困难，可以使用方式二下载zip包拷入系统中使用。\n\n### 卸载\n1. 删除下载的pvetools目录\n\n\n### 运行\n\n在shell中进入pvetools目录，输入\n`\n./pvetools.sh\n`\n* 如果提示没有权限，输入`chmod +x ./*.sh`\n\n### 主界面\n\n![main](https://upload-images.jianshu.io/upload_images/4171480-501e3adb625c82fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![main1](https://upload-images.jianshu.io/upload_images/4171480-53fc13764f684c4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n根据需要选择对应的选项即可。\n\n#### 配置邮件说明：\n\n只有以下界面需要用tab键选成红框的内容,其他的一律无脑回车即可。\n\n![mail](https://upload-images.jianshu.io/upload_images/4171480-2ee76fb89c0f253e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n#### 如果这个脚本帮到你了，麻烦点一下右上角的star小星星^_^\n\n## qq交流群: 878510703\n\n![qq](http://upload-images.jianshu.io/upload_images/4171480-e0204ead0fb41d5e.jpg)\n\n## 如果觉得好的请捐赠一下^_^\n![alipay](https://upload-images.jianshu.io/upload_images/4171480-04c3ebb5c11cfdf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n感谢捐赠人员！\n\n捐赠列表：\n\n杨惠(来源qq)\n\n蓝蓝的天空（来源qq）\n\n久别重逢（来源qq）\n\n小呀嘛小Kiwi（来源qq)\n\n*兴乐（来源支付宝）\n\n孤独的根号三 （来源qq）\n\n我心依旧丶(来源qq)\n\n*俊磊（来源支付宝）\n\n*家鑫（来源支付宝）\n\n*小虎（来源支付宝）\n\n*杭（来源支付宝）\n\n*伟（来源支付宝）\n\n*棘（来源支付宝）\n\nzm （来源qq）\n\n*阳 (来源支付宝)\n\n**鑫 (来源支付宝)\n\n**尧 (来源支付宝)\n\n*潋 (来源支付宝)\n\n**泽 (来源支付宝)\n\n**涛 (来源支付宝)\n\n*韬 (来源支付宝)\n\n**旭 (来源支付宝)\n\n**明 (来源支付宝)\n\n**锐 (来源支付宝)\n\n# [版本说明]\n\n##### v2.4.0\n\n发布时间：2024.02.08\n\nnew feature:\n\n* 修复有些功能还原配置时出现问题，比如温度显示，去除订阅等\n\n* 修复配置apt国内源、安装配置VIM可导致原配置文件被覆盖\n\n##### v2.3.9\n\n发布时间：2023.10.19\n\nnew feature:\n\n* 增加pve8的支持\n\n* 优化英文语言的显示\n\n##### v2.3.6\n\n发布时间：2023.02.16\n\nnew feature:\n\n* 合并网友“for5million”提交的关于pci直通的修复。\n\n##### v2.3.5\n\n发布时间：2022.09.14\n\nnew feature:\n\n* 修复docker无法安装的问题，更换alpine的安装源。\n\n##### v2.3.2\n\n发布时间：2022.07.14\n\nnew feature:\n\n* 温度显示上方增加CPU频率显示。\n* add cpu frequency display.\n\n\n##### v2.3.1\n\n发布时间：2022.07.13\n\n* 调整省电模式powersave为conservative。\n* change cpufrequtils from 'powersave' to 'conservative'。\n\n\n##### v2.3.0\n\n发布时间：2022.05.30\n\nnew feature:\n\n* 修复pve7（debian 11)后security更新源地址格式变动的影响。\n* fix pve7 (debian 11) security source address.\n\n* 添加pve7以上版本配置硬件直通里的参数`iommu=pt pcie_acs_override=downstream`\n* add pve7　grub config `iommu=pt pcie_acs_override=downstream`\n\n* 删除默认.vimrc中重复的`set termencoding=unix`\n* delete .vimrc duplicate termencoding setting `set termencoding=unix`\n\n* 增加去除订阅提示的修复\n* add reinstall proxmox-widget-toolkit to fix remove subscription failure.\n\n##### v2.2.9\n\n发布时间：2022.05.29\n\nnew feature:\n\n* 增加常用工具下的自动扩展ROOT分区可用空间，比如有些用户使用dd等方式克隆系统盘，更换大硬盘还原镜像后可以一键扩展分区\n* add auto expand / partition size.\n\n##### v2.2.8\n\n发布时间：2021.10.26\n\nnew feature:\n\n* 优化pve7去订阅提示的判断和处理。\n* fix pve7 subscription note.\n\n##### v2.2.7\n\n发布时间：2021.10.14\n\nnew feature:\n\n* 在常用的工具下添加pve界面黑暗模式\n* add proxmox ve darkmode interface to manyTools.\n\n##### v2.2.6\n\n发布时间：2021.09.09\n\nnew feature:\n\n* 添加pve7的支持。\n* add proxmox ve 7.x support.\n\n##### v2.2.5\n\n发布时间：2020.12.16\n\nnew feature:\n\n* 优化pve升级后温度安装提示判断逻辑。\n* update sensors data install.\n\n##### v2.2.4\n\n发布时间：2020.12.14\n\nnew feature:\n\n* 修复温度显示界面高度自适应。\n* fix sensors display interface.\n\n##### v2.2.3\n\n发布时间：2020.12.09\n\nnew feature:\n\n* 增加对/etc/pve/qemu-server下的conf文件自动备份功能，可以选择备份路径和保留备份个数，建议备份到系统分区以外的虚拟机数据盘中，这样重装系统后方便直接恢复\n\n\n##### v2.2.2\n\n发布时间：2020.11.30\n\nnew feature:\n\n* 根据群友`嗨 我是奶酪`的建议，添加pve 更新源地址为非订阅更新源\n\n\n\n##### v2.2.0\n\n发布时间：2020.08.17\n\nnew feature:\n\n* 增加USB设备做为系统盘的优化，在'常用工具'下。\n\n##### v2.1.9\n\n发布时间：2020.07.15\n\nnew feature:\n\n* 增加N卡vbios的提示功能，在'常用工具'下。\n\n##### v2.1.8\n\n发布时间：2020.07.14\n\nnew feature:\n\n* 修复cpu省电，还原配置无法恢复频率的问题。\n\n\n##### v2.1.7\n\n发布时间：2020.05.19\n\nnew feature:\n\n* 优化cpu省电提示，处理卸载后再次运行不安装cpufrequtils的问题。\n\n##### v2.1.5\n\n发布时间：2020.03.28\n\nnew feature:\n\n* 解决docker重启不能自动启动的问题。\n\n##### v2.1.4\n\n发布时间：2020.02.21\n\nnew feature:\n\n* 常用工具中增加释放内存、speedtest、bbr\\bbr+、v2ray功能\n\n##### v2.1.3\n\n发布时间：2019.12.24\n\nnew feature:\n\n* 优化samba回收站配置,在设置共享文件夹时自动提示是否开启；可以单独增加和取消某个共享文件夹的回收站；\n* 优化web界面温度显示功能\n\n##### v2.1.2\n\n发布时间：2019.12.18\n\nnew feature:\n\n* 增加samba回收站配置\n\n##### v2.1.1\n\n发布时间：2019.12.16\n\nnew feature:\n\n* 常用工具中增加dns配置\n\n##### v2.1.0\n\n发布时间：2019.12.09\n\nnew feature:\n\n* 增加在pve中直接安装omv( [omvInPve](https://github.com/ivanhao/omvinpve))。\n\n##### v2.0.9\n\n发布时间：2019.12.04\n\nnew feature:\n\n* 增加samba共享文件夹权限自动配置，不再需要手工配置权限；同时删除共享文件夹会自动还原原来的用户组权限。\n  建议之前已使用的用户可以先删除旧的共享文件夹，手工恢复权限后，再用工具配置添加。\n\n##### v2.0.8\n\n发布时间：2019.11.28\n\nnew feature:\n\n*   增加chroot自定义安装路径的功能。\n*   增加chroot docker迁移的功能。\n [wiki](https://github.com/ivanhao/pvetools/wiki/m--1-%E9%85%8D%E7%BD%AEdocker-web%E7%95%8C%E9%9D%A2)\n\n##### v2.0.7\n\n发布时间：2019.11.25\n\nnew feature:\n\n*   增加安装NFS的功能。\n\n##### [](https://github.com/ivanhao/pvetools#v206-1)v2.0.6\n\n发布时间：2019.11.20\n\nnew feature:\n\n*   增加常用工具，此版本增加了局域网扫描\n*   修复dockerd启动bug\n\n##### [](https://github.com/ivanhao/pvetools#v205)v2.0.5\n\n发布时间：2019.11.14\n\nnew feature:\n\n*   chroot优化,增加对alpine版本的判断，优化速度\n*   中文环境下包的下载全改到国内服务器\n*   docker配置国内源\n*   portainer改用docker pull的方式拉取镜像（之前使用tar包部署，github上下载包太慢）\n*   增加chroot后台管理功能，检测chroot的运行\n*   删除代码目录中的图片，改成简书图片链接\n\n\n##### v2.0.4\n发布时间：2019.11.06\n\nnew feature:\n- 增加docker的web界面（portainer)\n- 去除隐藏的命令输出，例如apt-get install的输出等。\n- chroot优化\n\n\n##### v2.0.3\n发布时间：2019.11.04\n\nnew feature:\n- 增加qm set映射物理硬盘的功能\n\n\n##### v2.0.2\n发布时间：2019.11.01\n\nnew feature:\n- 增加chroot功能，默认安装好Alpine\n- 增加docker功能，默认安装在Alpine中\n- bug修复\n\n##### v2.0.1\n发布时间：2019.10.24\n\nnew feature:\n- 增加显卡直通的支持\n\n\n##### v2.0\n发布时间：2019.10.01\n\nnew feature:\n- 界面修改为whiptail，交互性更好，不需要输入字母来选择\n- bug修复\n\n### installation method\n\n###### 1. command line\n\n##### for english user:\n\nUse root accout to run.\n\n```\nexport LC_ALL=en_US.UTF-8\napt update && apt -y install git && git clone https://github.com/ivanhao/pvetools.git\ncd pvetools\n./pvetools.sh\n```\n>If update error,you can remove enterprise source by : `rm /etc/apt/sources.list.d/pve-enterprise.list` and retry.\n\n###### 2. download\n\n![download](https://upload-images.jianshu.io/upload_images/4171480-49193f4b6f4040fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### Interface\n\n![main](https://upload-images.jianshu.io/upload_images/4171480-501e3adb625c82fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![main1](https://upload-images.jianshu.io/upload_images/4171480-0e0920b58ce482d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n\n### Uninstall\n1. delete pvetools folder\n\n### Run\ncd to pvetools folder,and type:`./pvetools.sh`\n* you should `chmod +x pvetools.sh` first.\n\n\n#### email configration note：\n\nyou should choose `Internet Site` below, and keep others default.\n\n![mail](https://upload-images.jianshu.io/upload_images/4171480-2ee76fb89c0f253e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pvetools.sh",
          "type": "blob",
          "size": 131.9365234375,
          "content": "!/bin/bash\n#############--Proxmox VE Tools--##########################\n#  Author : 龙天ivan\n#  Mail: ivanhao1984@qq.com\n#  Version: v2.4.0\n#  Github: https://github.com/ivanhao/pvetools\n########################################################\n\n#js whiptail --title \"Success\" --msgbox \"c\" 10 60\nif [ `export|grep 'LC_ALL'|wc -l` = 0 ];then\n    if [ `grep \"LC_ALL\" /etc/profile|wc -l` = 0 ];then\n        echo \"export LC_ALL='en_US.UTF-8'\" >> /etc/profile\n    fi\nfi\nif [ `grep \"alias ll\" /etc/profile|wc -l` = 0 ];then\n    echo \"alias ll='ls -alh'\" >> /etc/profile\n    echo \"alias sn='snapraid'\" >> /etc/profile\nfi\nsource /etc/profile\n#-----------------functions--start------------------#\nexample(){\n#msgbox\nwhiptail --title \"Success\" --msgbox \"\n\" 10 60\n#yesno\nif (whiptail --title \"Yes/No Box\" --yesno \"\n\" 10 60);then\n    echo \"\"\nfi\n#password\nPASSWORD=$(whiptail --title \"Password Box\" --passwordbox \"\nEnter your password and choose Ok to continue.\n                \" 10 60 3>&1 1>&2 2>&3)\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    echo \"Your password is:\" $m\nfi\n\n\n#input form\nNAME=$(whiptail --title \"\nFree-form Input Box\n\" --inputbox \"\nWhat is your pet's name?\n\" 10 60\nPeter\n3>&1 1>&2 2>&3)\n\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    echo \"\"\nelse\n    echo \"\"\nfi\n\n#processing\n    apt -y install mailutils\n}\n\nsmbp(){\nm=$(whiptail --title \"Password Box\" --passwordbox \"\nEnter samba user 'admin' password:\n请输入samba用户admin的密码：\n                \" 10 60 3>&1 1>&2 2>&3)\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    while [ true ]\n    do\n        if [[ ! `echo $m|grep \"^[0-9a-zA-Z.-@]*$\"` ]] || [[ $m = '^M' ]];then\n            whiptail --title \"Warnning\" --msgbox \"\nWrong format!!!   input again:\n密码格式不对！！！请重新输入：\n            \" 10 60\n            smbp\n        else\n            break\n        fi\n    done\nfi\n}\n\n#修改debian的镜像源地址：\nchSource(){\nclear\nif [ $1 ];then\n    #x=a\n    whiptail --title \"Warnning\" --msgbox \"Not supported!\n    不支持该模式。\" 10 60\n    chSource\nfi\nverno=`cat /etc/debian_version |awk -F\".\" '{print $1}'`\nsver=`cat /etc/os-release|grep VERSION_CODENAME|awk -F '=' '{print $2}'`\ncurrentDebianVersion=${verno}\n# debian 11 change security source rule\nif [ $currentDebianVersion -gt 10 ];then\n    securitySource=\"\ndeb https://mirrors.ustc.edu.cn/debian-security/ stable-security main contrib non-free\ndeb-src https://mirrors.ustc.edu.cn/debian-security/ stable-security main contrib non-free\n\"\nelse\n    securitySource=\"\ndeb https://mirrors.ustc.edu.cn/debian-security/ $sver/updates main contrib non-free\ndeb-src https://mirrors.ustc.edu.cn/debian-security/ $sver/updates main contrib non-free\n\"\nfi\n    #\"a\" \"Automation mode.\" \\\n    #\"a\" \"无脑模式\" \\\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config apt source:\" 25 60 15 \\\n    \"b\" \"Change to cn source.\" \\\n    \"c\" \"Disable enterprise.\" \\\n    \"d\" \"Undo Change.\" \\\n    \"q\" \"Main menu.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置apt镜像源:\" 25 60 15 \\\n    \"b\" \"更换为国内源\" \\\n    \"c\" \"关闭企业更新源\" \\\n    \"d\" \"还原配置\" \\\n    \"q\" \"返回主菜单\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\na | A )\n    if (whiptail --title \"Yes/No Box\" --yesno \"修改为ustc.edu.cn源，禁用企业订阅更新源，添加非订阅更新源(ustc.edu.cn),修改ceph镜像更新源\" 10 60) then\n        if [ `grep \"ustc.edu.cn\" /etc/apt/sources.list|wc -l` = 0 ];then\n            #sver=`cat /etc/apt/sources.list|awk 'NR==1{print $3}'`\n            cp /etc/apt/sources.list /etc/apt/sources.list.bak.pvetools\n            cp /etc/apt/sources.list.d/pve-no-sub.list /etc/apt/sources.list.d/pve-no-sub.list.bak.pvetools\n            cp /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak.pvetools\n            cp /etc/apt/sources.list.d/ceph.list /etc/apt/sources.list.d/ceph.list.bak.pvetools\n            cat > /etc/apt/sources.list <<EOF\ndeb https://mirrors.ustc.edu.cn/debian/ $sver main contrib non-free\ndeb-src https://mirrors.ustc.edu.cn/debian/ $sver main contrib non-free\ndeb https://mirrors.ustc.edu.cn/debian/ $sver-updates main contrib non-free\ndeb-src https://mirrors.ustc.edu.cn/debian/ $sver-updates main contrib non-free\ndeb https://mirrors.ustc.edu.cn/debian/ $sver-backports main contrib non-free\ndeb-src https://mirrors.ustc.edu.cn/debian/ $sver-backports main contrib non-free\n$securitySource\nEOF\n            #修改pve 5.x更新源地址为非订阅更新源，不使用企业订阅更新源。\n            echo \"deb http://mirrors.ustc.edu.cn/proxmox/debian/pve/ $sver pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-sub.list\n            #关闭pve 5.x企业订阅更新源\n            sed -i 's|deb|#deb|' /etc/apt/sources.list.d/pve-enterprise.list\n            #修改 ceph镜像更新源\n            echo \"deb http://mirrors.ustc.edu.cn/proxmox/debian/ceph-luminous $sver main\" > /etc/apt/sources.list.d/ceph.list\n\n            #针对debian 12的处理\n            if [ $bver -gt 11 ];then\n                su -c 'echo \"APT::Get::Update::SourceListWarnings::NonFreeFirmware \\\"false\\\";\" > /etc/apt/apt.conf.d/no-bookworm-firmware.conf'\n            fi\n\n            whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n            软件源已更换成功！\" 10 60\n            apt-get update\n            apt-get -y install net-tools\n            whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n软件源已更换成功！\" 10 60\n        else\n            whiptail --title \"Success\" --msgbox \" Already changed apt source to ustc.edu.cn!\n已经更换apt源为 ustc.edu.cn\" 10 60\n        fi\n        if [ ! $1 ];then\n            chSource\n        fi\n    fi\n    ;;\n\tb | B  )\n        if [ $L = \"en\" ];then\n            OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config apt source:\" 25 60 15 \\\n            \"a\" \"aliyun.com\" \\\n            \"b\" \"ustc.edu.cn\" \\\n            \"q\" \"Main menu.\" \\\n            3>&1 1>&2 2>&3)\n        else\n            OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置apt镜像源:\" 25 60 15 \\\n            \"a\" \"aliyun.com\" \\\n            \"b\" \"ustc.edu.cn\" \\\n            \"q\" \"返回主菜单\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$OPTION\" in\n                a )\n                    ss=\"aliyun.com\"\n                    ;;\n                b)\n                    ss=\"ustc.edu.cn\"\n                    ;;\n                q )\n                    chSource\n            esac\n            if (whiptail --title \"Yes/No Box\" --yesno \"修改更新源为$ss?\" 10 60) then\n                if [ `grep $ss /etc/apt/sources.list|wc -l` = 0 ];then\n                    cp /etc/apt/sources.list /etc/apt/sources.list.bak.pvetools\n                    #cp /etc/apt/sources.list.d/ceph.list /etc/apt/sources.list.d/ceph.list.bak.pvetools\n                    #sver=`cat /etc/apt/sources.list|awk 'NR==1{print $3}'`\n                    cat > /etc/apt/sources.list << EOF\ndeb https://mirrors.$ss/debian/ $sver main contrib non-free\ndeb-src https://mirrors.$ss/debian/ $sver main contrib non-free\ndeb https://mirrors.$ss/debian/ $sver-updates main contrib non-free\ndeb-src https://mirrors.$ss/debian/ $sver-updates main contrib non-free\ndeb https://mirrors.$ss/debian/ $sver-backports main contrib non-free\ndeb-src https://mirrors.$ss/debian/ $sver-backports main contrib non-free\n$securitySource\nEOF\n                    #修改 ceph镜像更新源\n                    #echo \"deb http://mirrors.$ss/proxmox/debian/ceph-luminous $sver main\" > /etc/apt/sources.list.d/ceph.list\n                    #修改pve 更新源地址为非订阅更新源，不使用企业订阅更新源。\n                    echo \"deb http://mirrors.ustc.edu.cn/proxmox/debian/pve/ $sver pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-sub.list\n                    whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n                    软件源已更换成功！\" 10 60\n                    apt-get update\n                    apt-get -y install net-tools\n                    whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n                    软件源已更换成功！\" 10 60\n                else\n                    whiptail --title \"Success\" --msgbox \" Already changed apt source to $ss!\n已经更换apt源为 $ss\" 10 60\n                fi\n            else\n                chSource\n            fi\n            chSource\n        else\n            chSource\n        fi\n        ;;\n    c | C  )\n    if (whiptail --title \"Yes/No Box\" --yesno \"禁用企业订阅更新源?\" 10 60) then\n        #sver=`cat /etc/apt/sources.list|awk 'NR==1{print $3}'`\n        if [ -f /etc/apt/sources.list.d/pve-no-sub.list ];then\n            #修改pve 5.x更新源地址为非订阅更新源，不使用企业订阅更新源\n            echo \"deb http://mirrors.ustc.edu.cn/proxmox/debian/pve/ $sver pve-no-subscription\" > /etc/apt/sources.list.d/pve-no-sub.list\n        else\n            whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n            软件源已更换成功！\" 10 60\n        fi\n        if [ `grep \"^deb\" /etc/apt/sources.list.d/pve-enterprise.list|wc -l` != 0 ];then\n            #关闭pve 5.x企业订阅更新源\n            sed -i 's|deb|#deb|' /etc/apt/sources.list.d/pve-enterprise.list\n            whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n            软件源已更换成功！\" 10 60\n        else\n            whiptail --title \"Success\" --msgbox \" apt source has been changed successfully!\n            软件源已更换成功！\" 10 60\n        fi\n        chSource\n    fi\n    ;;\nd | D )\n    cp /etc/apt/sources.list.bak.pvetools /etc/apt/sources.list\n    cp /etc/apt/sources.list.d/pve-no-sub.list.bak.pvetools /etc/apt/sources.list.d/pve-no-sub.list\n    cp /etc/apt/sources.list.d/pve-enterprise.list.bak.pvetools /etc/apt/sources.list.d/pve-enterprise.list\n    #cp /etc/apt/sources.list.d/ceph.list.bak.pvetools /etc/apt/sources.list.d/ceph.list\n    whiptail --title \"Success\" --msgbox \"apt source has been changed successfully!\n    软件源已更换成功！\" 10 60\n    chSource\n    ;;\nq )\n    echo \"q\"\n    #main\n    ;;\nesac\nfi\n}\n\nchMail(){\n#set mailutils to send mail\naddMail(){\nif (whiptail --title \"Yes/No Box\" --yesno \"\nWill you want to config mailutils & postfix to send notification?(Y/N):\n是否配置mailutils和postfix来发送邮件通知？\n\" 10 60);then\n    qqmail=$(whiptail --title \"Config mail\" --inputbox \"\nInput email adress:\n输入邮箱地址：\n    \" 10 60    3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [ `echo $qqmail|grep '^[a-zA-Z0-9\\_\\-\\.]*\\@[A-Za-z0-9\\_\\-\\.]*\\.[a-zA-Z\\_\\-\\.]*$'` ];then\n                    break\n            else\n                whiptail --title \"Warnning\" --msgbox \"\nWrong email format!!!   input xxxx@qq.com for example.retry:\n错误的邮箱格式！！！请输入类似xxxx@qq.com并重试：\n                \" 10 60\n                addMail\n            fi\n        done\n        if [[ ! -f /etc/mailname || `dpkg -l|grep mailutils|wc -l` = 0 ]];then\n            apt -y install mailutils\n        fi\n        {\n            echo 10\n            sleep 1\n            $(echo \"pve.local\" > /etc/mailname)\n            echo 40\n            sleep 1\n            $(sed -i -e \"/root:/d\" /etc/aliases)\n            echo 70\n            sleep 1\n            $(echo \"root: $qqmail\">>/etc/aliases)\n            echo 100\n            sleep 1\n        } | whiptail --gauge \"Please wait while installing\" 10 60 0\n        sleep 1\n        dpkg-reconfigure postfix\n        service postfix reload\n        echo \"This is a mail test.\" |mail -s \"mail test\" root\n        whiptail --title \"Success\" --msgbox \"\nConfig complete and send test email to you.\n已经配置好并发送了测试邮件。\n        \" 10 60\n        main\n    else\n        main\n    fi\nelse\n    main\nfi\n}\nif [ -f /etc/mailname ];then\n    if (whiptail --title \"Yes/No Box\" --yesno \"\nIt seems you have already configed it before.Reconfig?\n您好像已经配置过这个了。重新配置？\n    \" --defaultno 10 60);then\n        addMail\n    else\n        main\n    fi\nfi\naddMail\n}\n\nchZfs(){\n#set max zfs ram\nsetMen(){\n    x=$(whiptail --title \"Config ZFS\" --inputbox \"\nset max zfs ram 4(G) or 8(G) etc, just enter number or n?\n设置最大zfs内存（zfs_arc_max),比如4(G)或8(G)等, 只需要输入纯数字即可，比如4G输入4?\n    \" 20 60    3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [[ \"$x\" =~ ^[1-9]+$ ]]; then\n                    update-initramfs -u\n                {\n                    $(echo \"options zfs zfs_arc_max=$[$x*1024*1024*1024]\">/etc/modprobe.d/zfs.conf)\n                    echo 10\n                    echo 70\n                    sleep 1\n                    #set rpool to list snapshots\n                    $(if [ `zpool get listsnapshots|grep rpool|awk '{print $3}'` = \"off\" ];then\n                        zpool set listsnapshots=on rpool\n                    fi)\n                    echo 100\n                }|whiptail --gauge \"installing\" 10 60 0\n                whiptail --title \"Success\" --msgbox \"\nConfig complete!you should reboot later.\n配置完成，一会儿最好重启一下系统。\n                \" 10 60\n                break\n            else\n                whiptail --title \"Warnning\" --msgbox \"\nInvalidate value.Please comfirm!\n输入的值无效，请重新输入!\n                \" 10 60\n                setMen\n            fi\n        done\n        #zfs-zed\n        if (whiptail --title \"Yes/No Box\" --yesno \"\n    Install zfs-zed to get email notification of zfs scrub?(Y/n):\n    安装zfs-zed来发送zfs scrub的结果提醒邮件？(Y/n):\n        \" 10 60);then\n            if [ `dpkg -l|grep zfs-zed|wc -l` = 0 ];then\n                apt-get -y install zfs-zed\n            fi\n            whiptail --title \"Success\" --msgbox \"\n    Install complete!\n    安装zfs-zed成功！\n            \" 10 60\n        else\n            chZfs\n        fi\n    else\n        main\n    fi\n}\nif [ ! -f /etc/modprobe.d/zfs.conf ] || [ `grep \"zfs_arc_max\" /etc/modprobe.d/zfs.conf|wc -l` = 0 ];then\n    setMen\nelse\n    if(whiptail --title \"Yes/No box\" --yesno \"\nIt seems you have already configed it before.Reconfig?\n您好像已经配置过这个了。是否重新配置？\n    \" --defaultno 10 60 );then\n        setMen\n    else\n        main\n    fi\nfi\n}\n\nchSamba(){\n#config samba\n        addSmbRecycle(){\n            if(whiptail --title \"Yes/No\" --yesno \"enable recycle?\n开启回收站？\" 10 60 )then\n                if [ ! -f '/etc/samba/smb.conf' ];then\n                    whiptail --title \"Warnning\" --msgbox \"You should install samba first!\n    请先安装samba！\" 10 60\n                else\n                    if [ `sed -n \"/\\[$2\\]/,/$2 end/p\" /etc/samba/smb.conf|egrep '^recycle'|wc -l` != 0 ];then\n                        whiptail --title \"Warnning\" --msgbox \"Already configed!  已经配置过了。\" 10 60\n                        smbRecycle\n                    else\n                        cat << EOF > ./recycle\n# $2--recycle-start--\nvfs object = recycle\nrecycle:repository = $1/.deleted\nrecycle:keeptree = Yes\nrecycle:versions = Yes\nrecycle:maxsixe = 0\nrecycle:exclude = *.tmp\n# $2--recycle-end--\nEOF\n                        #n=`sed '/\\['$2'\\]/' /etc/samba/smb.conf -n|sed -n '$p'`\n                        cp /etc/samba/smb.conf /etc/samba/smb.conf.bak.pvetools\n                        sed -i '/\\['$2'\\]/r ./recycle' /etc/samba/smb.conf\n                        rm ./recycle\n#                        cat << EOF >> /etc/samba/smb.conf\n#[$2-recycle]\n#comment = All\n#browseable = yes\n#path = $1/.deleted\n#guest ok = no\n#read only = no\n#create mask = 0750\n#directory mask = 0750\n#;  $2-recycle end\n#EOF\n                        systemctl restart smbd\n                        whiptail --title \"Success\" --msgbox \"Done.\n    配置完成\" 10 60\n                    fi\n                fi\n            else\n                continue\n            fi\n        }\n        delSmbRecycle(){\n            if [ ! -f '/etc/samba/smb.conf' ];then\n                whiptail --title \"Warnning\" --msgbox \"You should install samba first!\n请先安装samba！\" 10 60\n            else\n                if [ `sed -n \"/\\[$1\\]/,/$1 end/p\" /etc/samba/smb.conf|egrep '^recycle'|wc -l` = 0 ];then\n                    whiptail --title \"Warnning\" --msgbox \"Already configed!  已经配置过了。\" 10 60\n                    smbRecycle\n                else\n                    cp /etc/samba/smb.conf /etc/samba/smb.conf.bak.pvetools\n                    sed -i '/.*'$1'.*recycle.*start/,/.*'$1'.*end/d' /etc/samba/smb.conf\n                    sed \"/\\[${1}\\-recycle\\]/,/${n}\\-recycle end/d\" /etc/samba/smb.conf -i\n                    systemctl restart smbd\n                    whiptail --title \"Success\" --msgbox \"Done.\n配置完成\" 10 60\n                fi\n            fi\n        }\n\nclear\n#$(grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|sed 's/path/        path/'|grep -v '-recycle')\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config samba:\" 25 60 15 \\\n    \"a\" \"Install samba and config user.\" \\\n    \"b\" \"Add folder to share.\" \\\n    \"c\" \"Delete folder to share.\" \\\n    \"d\" \"Config recycle\" \\\n    \"q\" \"Main menu.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置samba:\" 25 60 15 \\\n    \"a\" \"安装配置samba并配置好samba用户\" \\\n    \"b\" \"添加共享文件夹\" \\\n    \"c\" \"取消共享文件夹\" \\\n    \"d\" \"配置回收站\" \\\n    \"q\" \"返回主菜单\" \\\n    3>&1 1>&2 2>&3)\nfi\nif [ $1 ];then\n    OPTION=a\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\n    a | A )\n        if [ `grep samba /etc/group|wc -l` = 0 ];then\n            if (whiptail --title \"Yes/No Box\" --yesno \"set samba and admin user for samba?\n安装samba并配置admin为samba用户？\n                \" 10 60);then\n                apt -y install samba\n                groupadd samba\n                useradd -g samba -M -s /sbin/nologin admin\n                smbp\n                echo -e \"$m\\n$m\"|smbpasswd -a admin\n                service smbd restart\n                echo -e \"已成功配置好samba，请记好samba用户admin的密码！\"\n                whiptail --title \"Success\" --msgbox \"\n已成功配置好samba，请记好samba用户admin的密码！\n                \" 10 60\n            fi\n        else\n            whiptail --title \"Success\" --msgbox \"Already configed samba.\n已配置过samba，没什么可做的!\n            \" 10 60\n                    fi\n        if [ ! $1 ];then\n            chSamba\n        fi\n        ;;\n    b | B )\n       # echo -e \"Exist share folders:\"\n       # echo -e \"已有的共享目录：\"\n       # echo \"`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'`\"\n       # echo -e \"Input share folder path:\"\n       # echo -e \"输入共享文件夹的路径:\"\n       addFolder(){\n        h=`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|wc -l`\n        if [ $h -lt 3 ];then\n            let h=$h*15\n        else\n            let h=$h*5\n        fi\n        x=$(whiptail --title \"Add Samba Share folder\" --inputbox \"\nExist share folders:\n已有的共享目录：\n----------------------------------------\n$(grep -Ev \"-recycle|.deleted$\" /etc/samba/smb.conf|grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\"|sed 's/path/        path/'|awk 'NR>3{print $0}')\n----------------------------------------\nInput share folder path(like /root):\n输入共享文件夹的路径(只需要输入/root类似的路径):\n\" $h 60 \"\" 3>&1 1>&2 2>&3)\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            while [ ! -d $x ]\n            do\n                whiptail --title \"Success\" --msgbox \"Path not exist!\n路径不存在！\n                \" 10 60\n                addFolder\n            done\n            while [ `grep \"path \\= ${x}$\" /etc/samba/smb.conf|wc -l` != 0 ]\n            do\n                whiptail --title \"Success\" --msgbox \"Path exist!\n路径已存在！\n                \" 10 60\n                addFolder\n            done\n            n=`echo $x|grep -o \"[a-zA-Z0-9.-]*$\"`\n            while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` != 0 ]\n            do\n                n=$(whiptail --title \"Samba Share folder\" --inputbox \"\nInput share name:\n输入共享名称：\n    \" 10 60 \"\" 3>&1 1>&2 2>&3)\n                exitstatus=$?\n                if [ $exitstatus = 0 ]; then\n                    while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` != 0 ]\n                    do\n                        whiptail --title \"Success\" --msgbox \"Name exist!\n名称已存在！\n                        \" 10 60\n                        addFolder\n                    done\n                fi\n            done\n            oldgrp=`ls -l $x|awk 'NR==2{print $4}'`\n            if [ `grep \"${x}$\" /etc/samba/smb.conf|wc -l` = 0 ];then\n                cat << EOF >> /etc/samba/smb.conf\n[$n]\ncomment = All\nbrowseable = yes\npath = $x\nguest ok = no\nread only = no\ncreate mask = 0750\ndirectory mask = 0750\n; oldgrp $oldgrp\n;  $n end\nEOF\n                whiptail --title \"Success\" --msgbox \"\nConfiged!\n配置成功！\n                \" 10 60\n                #--2.4.0 add group\n                chgrp -R samba $x\n                chmod -R g+w $x\n                addSmbRecycle $x $n\n                service smbd restart\n            else\n                whiptail --title \"Success\" --msgbox \"Already configed！\n已经配置过了！\n                \" 10 60\n            fi\n            addFolder\n        else\n            chSamba\n        fi\n}\n        addFolder\n        ;;\n    c )\n        delFolder(){\n        h=`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|wc -l`\n        if [ $h -lt 3 ];then\n            let h=$h*15\n        else\n            let h=$h*5\n        fi\n        n=$(whiptail --title \"Remove Samba Share folder\" --inputbox \"\nExist share folders:\n已有的共享目录：\n----------------------------------------\n$(grep -Ev \"-recycle|.deleted$\" /etc/samba/smb.conf|grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\"|sed 's/path/        path/'|awk 'NR>3{print $0}')\n----------------------------------------\nInput share folder name(type words in []):\n输入共享文件夹的名称(只需要输入[]中的名字):\n        \" $h 60 \"\" 3>&1 1>&2 2>&3)\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` = 0 ]\n            do\n                whiptail --title \"Success\" --msgbox \"\nName not exist!:\n名称不存在！:\n                \" 10 60\n                delFolder\n            done\n            if [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` != 0 ];then\n                oldgrp=`sed -n \"/\\[${n}\\]/,/${n} end/p\" /etc/samba/smb.conf |grep oldgrp|awk '{print $3}'`\n                x=`grep -E \"^path = [0-9a-zA-Z/-.]*${n}\" /etc/samba/smb.conf|awk '{print $3}'`\n                if [ $oldgrp ];then\n                    chgrp -R $oldgrp $x\n                fi\n                sed \"/\\[${n}\\]/,/${n} end/d\" /etc/samba/smb.conf -i\n                sed \"/\\[${n}-recycle\\]/,/${n}-recycle end/d\" /etc/samba/smb.conf -i\n                whiptail --title \"Success\" --msgbox \"\nConfiged!\n配置成功！\n                \" 10 60\n                service smbd restart\n            fi\n            delFolder\n        else\n            chSamba\n        fi\n    }\n        delFolder\n        ;;\n    d )\n        smbRecycle(){\n            if [ $L = \"en\" ];then\n                x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config samba recycle:\" 12 60 4 \\\n                \"a\" \"Enable samba recycle.\" \\\n                \"b\" \"Disable samba recycle.\" \\\n                \"c\" \"Clear recycle.\" \\\n                3>&1 1>&2 2>&3)\n            else\n                x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置samba回收站！\" 12 60 4 \\\n                \"a\" \"开启samba回收站。\" \\\n                \"b\" \"关闭samba回收站。\" \\\n                \"c\" \"清空samba回收站。\" \\\n                3>&1 1>&2 2>&3)\n            fi\n            exitstatus=$?\n            if [ $exitstatus = 0 ]; then\n                case \"$x\" in\n                    a )\n                        enSmbRecycle(){\n                            h=`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|wc -l`\n                            if [ $h -lt 3 ];then\n                                let h=$h*15\n                            else\n                                let h=$h*5\n                            fi\n                            n=$(whiptail --title \"Remove Samba recycle\" --inputbox \"\nExist share folders:\n已有的共享目录：\n----------------------------------------\n$(grep -Ev \"-recycle|.deleted$\" /etc/samba/smb.conf|grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\"|sed 's/path/        path/'|awk 'NR>3{print $0}')\n----------------------------------------\nInput share folder name(type words in []):\n输入共享文件夹的名称(只需要输入[]中的名字):\n                            \" $h 60 \"\" 3>&1 1>&2 2>&3)\n                            exitstatus=$?\n                            if [ $exitstatus = 0 ]; then\n                                while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` = 0 ]\n                                do\n                                    whiptail --title \"Success\" --msgbox \"\nName not exist!:\n名称不存在！:\n                                    \" 10 60\n                                    enSmbRecycle\n                                done\n                                if [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` != 0 ];then\n                                    if [ `sed -n \"/\\[${n}\\]/,/${n} end/p\" /etc/samba/smb.conf|egrep '^recycle'|wc -l` != 0 ];then\n                                        whiptail --title \"Warnning\" --msgbox \"Already configed!  已经配置过了。\" 10 60\n                                        smbRecycle\n                                    else\n                                        x=`sed -n \"/\\[${n}\\]/,/${n} end/p\" /etc/samba/smb.conf|grep path|awk '{print $3}'`\n                                        addSmbRecycle $x $n\n                                        service smbd restart\n                                    fi\n                                fi\n                                disSmbRecycle\n                            else\n                                smbRecycle\n                            fi\n                        }\n                        enSmbRecycle\n                        ;;\n                    b )\n                        disSmbRecycle(){\n                            h=`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|wc -l`\n                            if [ $h -lt 3 ];then\n                                let h=$h*15\n                            else\n                                let h=$h*5\n                            fi\n                            n=$(whiptail --title \"Remove Samba recycle\" --inputbox \"\nExist share folders:\n已有的共享目录：\n----------------------------------------\n$(grep -Ev \"-recycle|.deleted$\" /etc/samba/smb.conf|grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\"|sed 's/path/        path/'|awk 'NR>3{print $0}')\n----------------------------------------\nInput share folder name(type words in []):\n输入共享文件夹的名称(只需要输入[]中的名字):\n                            \" $h 60 \"\" 3>&1 1>&2 2>&3)\n                            exitstatus=$?\n                            if [ $exitstatus = 0 ]; then\n                                while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` = 0 ]\n                                do\n                                    whiptail --title \"Success\" --msgbox \"\nName not exist!:\n名称不存在！:\n                                    \" 10 60\n                                    disSmbRecycle\n                                done\n                                x=`sed -n \"/\\[${n}\\]/,/${n} end/p\" /etc/samba/smb.conf|grep path|awk '{print $3}'`\n                                if [ `ls $x/.deleted/|wc -l` != 0 ];then\n                                    if(whiptail --title \"Warnning\" --yesno \"recycle not empty, you should clear it first.continue?\n回收站中存在文件，建议先清空，是否确认要继续？\" 10 60);then\n                                        if [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` != 0 ];then\n                                            delSmbRecycle $n\n                                            service smbd restart\n                                        fi\n                                        disSmbRecycle\n                                    else\n                                        disSmbRecycle\n                                    fi\n                                fi\n                            else\n                                smbRecycle\n                            fi\n                        }\n                        disSmbRecycle\n                        ;;\n                    c )\n                        checkClearSmb(){\n                            c=$(whiptail --title \"Clear Samba recycle\" --inputbox \"\nyou can disable recycle to clear it.\nclear recycle may cause data lose,pvetools will not response for that,do you agree?\ntype 'YesIdo' to continue:\n你可以先取消回收站再手工清空。\n工具清空samba回收站不可逆，pvetools不会对此操作负责，是否同意？\n如果确认要清空，请输入'YesIdo'继续：\" 20 60 \"\" 3>&1 1>&2 2>&3)\n                            exitstatus=$?\n                            if [ $exitstatus = 0 ]; then\n                                while [ $c != 'YesIdo' ]\n                                do\n                                    whiptail --title \"Success\" --msgbox \"\nWoring words,try again:\n输入错误，请重试:\n                                    \" 10 60\n                                    checkClearSmb\n                                done\n                            else\n                                continue\n                            fi\n                        }\n                        clearSmbRecycle(){\n                            h=`grep \"^\\[[0-9a-zA-Z.-]*\\]$\" /etc/samba/smb.conf|awk 'NR>3{print $0}'|wc -l`\n                            if [ $h -lt 3 ];then\n                                let h=$h*15\n                            else\n                                let h=$h*5\n                            fi\n                            n=$(whiptail --title \"Clear Samba recycle\" --inputbox \"\nExist share folders:\n已有的共享目录：\n----------------------------------------\n$(grep -Ev \"-recycle|.deleted$\" /etc/samba/smb.conf|grep -E \"^\\[[0-9a-zA-Z.-]*\\]$|^path\"|sed 's/path/        path/'|awk 'NR>3{print $0}')\n----------------------------------------\nInput share folder name(type words in []):\n输入共享文件夹的名称(只需要输入[]中的名字):\n                            \" $h 60 \"\" 3>&1 1>&2 2>&3)\n                            exitstatus=$?\n                            if [ $exitstatus = 0 ]; then\n                                while [ `grep \"^\\[${n}\\]$\" /etc/samba/smb.conf|wc -l` = 0 ]\n                                do\n                                    whiptail --title \"Success\" --msgbox \"\nName not exist!:\n名称不存在！:\n                                    \" 10 60\n                                    clearSmbRecycle\n                                done\n                                x=`sed -n \"/\\[${n}\\]/,/${n} end/p\" /etc/samba/smb.conf|grep path|awk '{print $3}'`\n                                if [ `ls -a $x/.deleted/|wc -l` -gt 2 ];then\n                                    if(whiptail --title \"Warnning\" --yesno \"recycle not empty,continue?\n回收站中存在文件，是否确认要继续？\" 10 60);then\n                                        checkClearSmb\n                                        rm -rf $x/.deleted/*\n                                        rm -rf $x/.deleted/.*\n                                        whiptail --title \"Success\" --msgbox \"ok.\" 10 60\n                                    else\n                                        clearSmbRecycle\n                                    fi\n                                else\n                                    whiptail --title \"Success\" --msgbox \"Already empty.回收站是空的，不需要清空。\" 10 60\n                                fi\n                            else\n                                smbRecycle\n                            fi\n                        }\n                        clearSmbRecycle\n                        ;;\n                esac\n            else\n                chSamba\n            fi\n        }\n        smbRecycle\n        ;;\n\n    q )\n        main\n        ;;\n    esac\nelse\n    chSamba\nfi\n}\n\nchVim(){\n#config vim\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config VIM:\" 12 60 4 \\\n    \"a\" \"Install vim & simply config display.\" \\\n    \"b\" \"Install vim & config 'vim-for-server'.\" \\\n    \"c\" \"Uninstall.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"安装配置VIM！\" 12 60 4 \\\n    \"a\" \"安装VIM并简单配置，如配色行号等。\" \\\n    \"b\" \"安装VIM并配置'vim-for-server'。\" \\\n    \"c\" \"还原配置。\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n        a )\n        if(whiptail --title \"Yes/No Box\" --yesno \"\nInstall vim & simply config display.Continue?\n安装VIM并简单配置，如配色行号等，基本是vim原味儿。是否继续？\n            \" 10 60) then\n            if [ ! -f /root/.vimrc ] || [ `cat /root/.vimrc|wc -l` = 0 ] || [ `dpkg -l |grep vim|wc -l` = 0 ];then\n                apt -y install vim\n            else\n                cp ~/.vimrc ~/.vimrc.bak.pvetools\n            fi\n            {\n            echo 10\n            echo 50\n            $(\n            cat << EOF > ~/.vimrc\nset number\nset showcmd\nset incsearch\nset expandtab\nset showcmd\nset history=400\nset autoread\nset ffs=unix,mac,dos\nset hlsearch\nset shiftwidth=2\nset wrap\nset ai\nset si\nset cindent\nset tabstop=2\nset nocompatible\nset showmatch\nset fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\nset termencoding=utf-8\nset encoding=utf-8\nset fileformats=unix\nset ttyfast\nsyntax on\nset imcmdline\nset previewwindow\nset showfulltag\nset cursorline\nset ruler\ncolor ron\nautocmd InsertEnter * se cul\nset ruler\nset showcmd\nset laststatus=2\nset tabstop=2\nset softtabstop=4\ninoremap fff <esc>h\nautocmd BufWritePost \\$MYVIMRC source \\$MYVIMRCi\nEOF\n            )\n            echo 100\n            }|whiptail --gauge \"installing\" 10 60\n            whiptail --title \"Success\" --msgbox \"\n    Install & config complete!\n    安装配置完成!\n            \" 10 60\n        else\n            chVim\n        fi\n            ;;\n        b | B )\n        if(whiptail --title \"Yes/No Box\" --yesno \"\n安装VIM并配置 \\'vim-for-server\\'(https://github.com/wklken/vim-for-server).\nyes or no?\n            \" 12 60) then\n            echo \"Use curl or git? If one not work,change to another.\"\n            echo \"选择git或curl，如果一个方式不行可以换一个。\"\n            echo \"1 ) git\"\n            echo \"2 ) curl\"\n            echo \"Please choose:\"\n            read x\n            case $x in\n                2 )\n                    apt -y install curl vim\n                    cp ~/.vimrc ~/.vimrc.bak.pvetools\n                    curl https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc > ~/.vimrc\n                    whiptail --title \"Success\" --msgbox \"\n            Install & config complete!\n            安装配置完成！\n                    \" 10 60\n                    ;;\n                1 | \"\" )\n                    apt -y install git vim\n                    rm -rf vim-for-server\n                    git clone https://github.com/wklken/vim-for-server.git\n                    mv ~/.vimrc ~/.vimrc.bak.pvetools\n                    mv vim-for-server/vimrc ~/.vimrc\n                    rm -rf vim-for-server\n                    whiptail --title \"Success\" --msgbox \"\n            Install & config complete!\n            安装配置完成！\n                    \" 10 60\n                    ;;\n                * )\n                    chVim\n            esac\n\n        else\n            chVim\n        fi\n            ;;\n        c )\n            if(whiptail --title \"Yes/No Box\" --yesno \"\nRemove Config?\n确认要还原配置？\n                \" --defaultno 10 60) then\n                cp ~/.vimrc.bak.pvetools ~/.vimrc\n                whiptail --title \"Success\" --msgbox \"\nDone\n已经完成配置\n                \" 10 60\n            else\n                chVim\n            fi\n    esac\nelse\n    main\nfi\n}\n\nchSpindown(){\n#set hard drivers to spindown\nspinTime(){\n    x=$(whiptail --title \"config\" --inputbox \"\ninput number of minite to auto spindown:\n输入硬盘自动休眠的检测时间，周期为分钟，输入5为5分钟:\n    \" 10 60  3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [ `echo \"$x\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                whiptail --title \"Warnning\" --msgbox \"\n输入格式错误，请重新输入：\n                \" 10 60\n                spinTime\n            else\n                break\n            fi\n        done\n        cat << eof >> /etc/crontab\n*/$x * * * * root /root/hdspindown/spindownall\neof\n        service cron reload\n        whiptail --title \"Success\" --msgbox \"\nconfig every $x minite to check disks and auto spindown:\n已为您配置好硬盘每$x分钟自动检测硬盘和休眠。\n        \" 10 60\n    fi\n}\ndoSpindown(){\n    if(whiptail --title \"Yes/No Box\" --yesno \"\n    Config hard drives to auto spindown?(Y/n):\n    配置硬盘自动休眠？(Y/n):\n    \" 10 60) then\n        if [ `dpkg -l|grep git|wc -l` = 0 ];then\n            apt -y install git\n        fi\n        cd /root\n        git clone https://github.com/ivanhao/hdspindown.git\n    {\n        echo 10\n        echo 50\n        echo 90\n        cd hdspindown\n        chmod +x *.sh\n        ./spindownall\n        echo 100\n    }   | whiptail --gauge \"installing\" 10 60 0\n        if [ `grep \"spindownall\" /etc/crontab|wc -l` = 0 ];then\n            spinTime\n        fi\n    else\n        chSpindown\n    fi\n}\nchApm(){\n    clear\n    apm=$(\n    whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config hard disks APM & AAM:\n配置硬盘静音、降温：\n    \" 25 60 15 \\\n    \"128\" \"Config hard drivers to auto spindown.\" \\\n    \"b\" \"Remove config hdspindown.\" \\\n    \"c\" \"Config pvestatd service(in case of spinup drives).\" \\\n    \"d\" \"Config drivers aam\\apm to low temp and quiet.\" \\\n    3>&1 1>&2 2>&3)\n}\n\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config hard disks spindown:\" 25 60 15 \\\n    \"a\" \"Config hard drivers to auto spindown.\" \\\n    \"b\" \"Remove config hdspindown.\" \\\n    \"c\" \"Config pvestatd service(in case of spinup drives).\" \\\n    \"d\" \"Config drivers aam\\apm to low temp and quiet.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置硬盘自动休眠\" 25 60 15 \\\n    \"a\" \"配置硬盘自动休眠\" \\\n    \"b\" \"还原硬盘自动休眠配置\" \\\n    \"c\" \"配置pvestatd服务（防止休眠后马上被唤醒）。\" \\\n    \"d\" \"设置硬盘静音、降温\" \\\n    3>&1 1>&2 2>&3)\nfi\nif [ $1 ];then\n    OPTION=a\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\n    a | A )\n        if [ ! -f /root/hdspindown/spindownall ];then\n            doSpindown\n        else\n            whiptail --title \"Yes/No Box\" --msgbox \"\nIt seems you have already configed it before.\n您好像已经配置过这个了。\n                \" 10 60\n            chSpindown\n        fi\n        ;;\n    b )\n        if(whiptail --title \"Yes/No Box\" --yesno \"\nRemove config spindown?\n确认要还原配置？\n        \" 10 60) then\n            sed -i '/spindownall/d' /etc/crontab\n            rm /usr/bin/hdspindown\n            if(whiptail --title \"Yes/No Box\" --yesno \"\nRemove source code?\n是否要删除休眠程序代码？\n            \" 10 60) then\n                rm -rf /root/hdspindown\n            fi\n            whiptail --title \"Success\" --msgbox \"\nOK\n已经完成配置\n            \" 10 60\n        else\n            chSpindown\n        fi\n        ;;\n    c )\n        if (whiptail --title \"Enable/Disable pvestatd\" --yes-button \"停止(Disable)\" --no-button \"启动(Enable)\"  --yesno \"\npvestatd may spinup the drivers,if hdspindown can not effective, you can disable it to make drives to spindown.\n使用lvm的时候pvestatd 可能会造成硬盘频繁唤醒从而导致hdspindown无法让你的硬盘休眠，如果需要，你可以在这里停止这个服务。\n停止这个服务，在web界面将会显示一些异常，如果需要在web界面进行操作，可以再启动这个服务。这个操作不是必须的，要自己灵活应用。\n        \" 20 60) then\n        {\n            pvestatd stop\n            echo 100\n            sleep 1\n        }|whiptail --gauge \"configing...\" 10 60 50\n        else\n        {\n            pvestatd start\n            echo 100\n            sleep 1\n        }|whiptail --gauge \"configing...\" 10 60 50\n        fi\n        ;;\n    esac\nfi\n}\n\nchCpu(){\nmaxCpu(){\n    info=`cpufreq-info|grep -E \"available|analyzing CPU|current\"|sed -n \"/analyz/,/analyz/p\"|sed '$d'`\n    x=$(whiptail --title \"Max cpufrequtils最大频率\" --inputbox \"\n$info\n--------------------------------------------\nInput MAX_SPEED(example: 1.6GHz type 1600000):\n输入最大频率（示例：1.6GHz 输入1600000）：\n    \" 20 60  3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [[ `echo \"$x\"|grep \"^[0-9]*$\"|wc -l` = 0 ]] || [[ $x = \"\" ]];then\n                whiptail --title \"Warnning\" --msgbox \"\nexample: 1.6GHz type 1600000\nretry\n示例：1.6GHz 输入1600000\n输入格式错误,请重新输入：\n                \" 15 60\n                maxCpu\n            else\n                break\n            fi\n        done\n        mx=$x\n    else\n        chCpu\n    fi\n}\nminCpu(){\n    x=$(whiptail --title \"Mini cpufrequtils最小频率\" --inputbox \"\n$info\n--------------------------------------------\nInput MIN_SPEED(example: 1.6GHz type 1600000):\n输入最小频率（示例：1.6GHz 输入1600000）：\n    \" 20 60   3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [[ `echo \"$x\"|grep \"^[0-9]*$\"|wc -l` = 0 ]] || [[ $x = \"\" ]];then\n                whiptail --title \"Warnning\" --msgbox \"\nexample: 1.6GHz type 1600000\nretry\n示例：1.6GHz 输入1600000\n输入格式错误,请重新输入：\n                \" 15 60\n                minCpu\n            else\n                break\n            fi\n        done\n        mi=$x\n    else\n        chCpu\n    fi\n}\n\n#setup for cpufreq\ndoChCpu(){\nif(whiptail --title \"Yes/No Box\" --yesno \"\nInstall cpufrequtils to save power?\n安装配置CPU省电?\n\" --defaultno 10 60) then\n    apt -y install cpufrequtils\n    if [ `grep \"intel_pstate=disable\" /etc/default/grub|wc -l` = 0 ];then\n        sed -i.bak 's|quiet|quiet intel_pstate=disable|' /etc/default/grub\n        update-grub\n    fi\n    cpufreq-info|grep -E \"available|analyzing CPU|current\"|sed -n \"/analyz/,/analyz/p\"|sed '$d'\n    maxCpu\n    minCpu\n    cat << EOF > /etc/default/cpufrequtils\nENABLE=\"true\"\nGOVERNOR=\"conservative\"\nMAX_SPEED=\"$mx\"\nMIN_SPEED=\"$mi\"\nEOF\n    whiptail --title \"Success\" --msgbox \"\ncpufrequtils need to reboot to apply! Please reboot.\ncpufrequtils 安装好后需要重启系统，请稍后重启。\n    \" 10 60\nelse\n    main\nfi\n}\ndoChCpu1(){\nif(whiptail --title \"Yes/No Box\" --yesno \"\ncontinue?\n开始配置?\n\" --defaultno 10 60) then\n    cpufreq-info|grep -E \"available|analyzing CPU|current\"|sed -n \"/analyz/,/analyz/p\"|sed '$d'\n    maxCpu\n    minCpu\n    cat << EOF > /etc/default/cpufrequtils\nENABLE=\"true\"\nGOVERNOR=\"performance\"\nMAX_SPEED=\"$mx\"\nMIN_SPEED=\"$mi\"\nEOF\n    systemctl restart cpufrequtils\n    whiptail --title \"Success\" --msgbox \"\nDone\n配置完成\n    \" 10 60\nelse\n    main\nfi\n}\n#-------------chCpu--main---------------\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config Cpufrequtils:\" 25 60 15 \\\n    \"a\" \"Config cpufrequtils to save power.\" \\\n    \"b\" \"Remove config.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"安装配置CPU省电\" 25 60 15 \\\n    \"a\" \"安装配置CPU省电(动态调整)\" \\\n    \"b\" \"还原配置\" \\\n    3>&1 1>&2 2>&3)\nfi\nif [ $1 ];then\n    OPTION=a\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\n    a | A )\n        if [ `grep \"intel_pstate=disable\" /etc/default/grub|wc -l` = 0 ];then\n            doChCpu\n        else\n            if(whiptail --title \"Yes/No Box\" --yesno \"\n        It seems you have already configed it before.\n        您好像已经配置过这个了。\n            \" --defaultno 10 60) then\n                doChCpu\n            else\n                main\n            fi\n        fi\n        ;;\n    c )\n        if(whiptail --title \"Yes/No\" --yesno \"\ncontinue?\n还原配置？\n        \" --defaultno 10 60 ) then\n            #sed -i 's/ intel_pstate=disable//g' /etc/default/grub\n            #rm -rf /etc/default/cpufrequtils\n    cat << EOF > /etc/default/cpufrequtils\nENABLE=\"true\"\nGOVERNOR=\"ondemand\"\nEOF\n            systemctl restart cpufrequtils\n            if (whiptail --title \"Yes/No\" --yesno \"\nUninstall cpufrequtils?\n卸载cpufrequtils?\n                \" 10 60 ) then\n                apt -y remove cpufrequtils 2>&1 &\n                sed -i 's/ intel_pstate=disable//g' /etc/default/grub\n                rm -rf /etc/default/cpufrequtils\n            fi\n            whiptail --title \"Success\" --msgbox \"\nDone\n配置完成\n            \" 10 60\n        fi\n        chCpu\n        ;;\n    b )\n        doChCpu1\n        ;;\n    esac\nfi\n#-------------chCpu--main--end------------\n\n}\n\nchSubs(){\nclear\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config subscribe:\" 25 60 15 \\\n    \"a\" \"Remove subscribe notice.\" \\\n    \"b\" \"Unset config.\" \\\n    \"c\" \"fix proxmox-widget-toolkit\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置订阅提示\" 25 60 15 \\\n    \"a\" \"去除订阅提示\" \\\n    \"b\" \"还原配置\" \\\n    \"c\" \"修复去除订阅失败\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\n    a )\n        if(whiptail --title \"Yes/No\" --yesno \"\ncontinue?\n是否去除订阅提示?\n            \" 10 60 )then\n            #whiptail --title \" in \" --msgbox \"$bver $cver  $dver\" 10 60\n            if [ `grep \"data.status.toLowerCase() !== 'active'\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js|wc -l` -gt 0 ];then\n                sed -i.bak \"s/data.status.toLowerCase() !== 'active'/false/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n                systemctl restart pveproxy\n                whiptail --title \"Success\" --msgbox \"\nDone!!\n去除成功！\n                \" 10 60\n            elif [ `grep \"data.status !== 'Active'\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js|wc -l` -gt 0 ];then\n                sed -i.bak \"s/data.status !== 'Active'/false/g\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n                systemctl restart pveproxy\n                whiptail --title \"Success\" --msgbox \"\nDone!!\n去除成功！\n                \" 10 60\n            else\n                whiptail --title \"Success\" --msgbox \"\nYou already removed.\n已经去除过了，不需要再次去除。\n                \" 10 60\n            fi\n        fi\n        ;;\n    b )\n        if(whiptail --title \"Yes/No\" --yesno \"\ncontinue?\n是否还原订阅提示?\n            \" 10 60) then\n            if [ `grep \"data.status !== 'Active'\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js|wc -l` = 0 ];then\n                mv /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js.bak.pvetools /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n                systemctl restart pveproxy\n                whiptail --title \"Success\" --msgbox \"\nDone!!\n还原成功！\n                \" 10 60\n            elif [ `grep \"data.status.toLowerCase() !== 'active'\" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js|wc -l` = 0 ];then\n                mv /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js.bak.pvetools /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js\n                systemctl restart pveproxy\n                whiptail --title \"Success\" --msgbox \"\nDone!!\n还原成功！\n                \" 10 60\n            else\n                whiptail --title \"Success\" --msgbox \"\nYou already removed.\n已经还原过了，不需要再次还原。\n                \" 10 60\n            fi\n        fi\n        ;;\n    c )\n        if(whiptail --title \"Yes/No\" --yesno \"\ncontinue?\n是否修复订阅提示?\n            \" 10 60) then\n            apt install --reinstall proxmox-widget-toolkit\n            whiptail --title \"Success\" --msgbox \"\nDone!!\n还原成功！\n                \" 10 60\n        fi\n        ;;\n    esac\nfi\n}\nchSmartd(){\n  hds=`lsblk|grep \"^[s,h]d[a-z]\"|awk '{print $1}'`\n}\n\nchNestedV(){\nclear\nunsetVmN(){\n    list=`qm list|awk 'NR>1{print $1\":\"$2\".......\"$3\" \"}'`\n    ls=`for i in $list;do echo $i|awk -F \":\" '{print $1\" \"$2}';done`\n    h=`echo $ls|wc -l`\n    let h=$h*1\n    if [ $h -lt 30 ];then\n        h=30\n    fi\n    list1=`echo $list|awk 'NR>1{print $1}'`\n    vmid=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --menu \"\nChoose vmid to unset nested:\n选择需要关闭嵌套虚拟化的vm：\" 25 60 15 \\\n    $(echo $ls) \\\n     3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        if(whiptail --title \"Yes/No\" --yesno \"\nyou choose: $vmid ,continue?\n你选的是：$vmid ，是否继续?\n            \" 10 60)then\n            while [ true ]\n            do\n                if [ `echo \"$vmid\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                    whiptail --title \"Warnning\" --msgbox \"\n    输入格式错误，请重新输入：\n                    \" 10 60\n                    setVmN\n                else\n                    break\n                fi\n            done\n            if [ `qm showcmd $vmid|grep \"+vmx\"|wc -l` = 0 ];then\n                whiptail --title \"Success\" --msgbox \"\n    You already unseted.Nothing to do.\n    您的虚拟机未开启过嵌套虚拟化支持。\n                \" 10 60\n            else\n                args=`qm showcmd $vmid|grep \"\\-cpu [0-9a-zA-Z,+_]*\" -o`\n                sed -i '/,+vmx/d' /etc/pve/qemu-server/$vmid.conf\n                echo  \"args: \"$args >> /etc/pve/qemu-server/$vmid.conf\n                whiptail --title \"Success\" --msgbox \"\n    Unset OK.Please reboot your vm.\n    您的虚拟机已经关闭嵌套虚拟化支持。重启虚拟机后生效。\n                \" 10 60\n            fi\n        else\n            chNestedV\n        fi\n    else\n        chNestedV\n    fi\n}\nsetVmN(){\n    list=`qm list|awk 'NR>1{print $1\":\"$2\".......\"$3\" \"}'`\n    ls=`for i in $list;do echo $i|awk -F \":\" '{print $1\" \"$2}';done`\n    h=`echo $ls|wc -l`\n    let h=$h*1\n    if [ $h -lt 30 ];then\n        h=30\n    fi\n    list1=`echo $list|awk 'NR>1{print $1}'`\n    vmid=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --menu \"\nChoose vmid to set nested:\n选择需要配置嵌套虚拟化的vm：\" 25 60 15 \\\n    $(echo $ls) \\\n     3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        if(whiptail --title \"Yes/No\" --yesno \"\nyou choose: $vmid ,continue?\n你选的是：$vmid ，是否继续?\n            \" 10 60)then\n            while [ true ]\n            do\n                if [ `echo \"$vmid\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                    whiptail --title \"Warnning\" --msgbox \"\n    输入格式错误，请重新输入：\n                    \" 10 60\n                    setVmN\n                else\n                    break\n                fi\n            done\n            if [ `qm showcmd $vmid|grep \"+vmx\"|wc -l` = 0 ];then\n                args=`qm showcmd $vmid|grep \"\\-cpu [0-9a-zA-Z,+_]*\" -o`\n                for i in 'boot:' 'memory:' 'core:';do\n                    if [ `grep '^'$i /etc/pve/qemu-server/$vmid.conf|wc -l` -gt 0 ];then\n                        con=$i\n                        break\n                    fi\n                done\n                sed \"/\"$con\"/a\\args: $args,+vmx\" -i /etc/pve/qemu-server/$vmid.conf\n                #echo \"args: \"$args\",+vmx\" >> /etc/pve/qemu-server/$vmid.conf\n                whiptail --title \"Success\" --msgbox \"\n    Nested OK.Please reboot your vm.\n    您的虚拟机已经开启嵌套虚拟化支持。重启虚拟机后生效。\n                \" 10 60\n            else\n                whiptail --title \"Success\" --msgbox \"\n    You already seted.Nothing to do.\n    您的虚拟机已经开启过嵌套虚拟化支持。\n                \" 10 60\n            fi\n        else\n            chNestedV\n        fi\n    else\n        chNestedV\n    fi\n}\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config Nested:\" 25 60 15 \\\n    \"a\" \"Enable nested\" \\\n    \"b\" \"Set vm to nested\" \\\n    \"c\" \"Unset vm nested\" \\\n    \"d\" \"Disable nested\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置嵌套虚拟化:\" 25 60 15 \\\n    \"a\" \"开启嵌套虚拟化\" \\\n    \"b\" \"开启某个虚拟机的嵌套虚拟化\" \\\n    \"c\" \"关闭某个虚拟机的嵌套虚拟化\" \\\n    \"d\" \"关闭嵌套虚拟化\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n        a )\n            if(whiptail --title \"Yes/No\" --yesno \"\nAre you sure to enable Nested?\nIt will stop all your runnging vms (Y/n):\n确定要开启嵌套虚拟化吗？\n这个操作会停止你现在所有运行中的虚拟机!(Y/n):\n            \" 10 60) then\n                if [ `cat /sys/module/kvm_intel/parameters/nested` = 'N' ];then\n                    for i in `qm list|awk 'NR>1{print $1}'`;do\n                        qm stop $i\n                    done\n                    modprobe -r kvm_intel\n                    modprobe kvm_intel nested=1\n                    if [ `cat /sys/module/kvm_intel/parameters/nested` = 'Y' ];then\n                        echo \"options kvm_intel nested=1\" >> /etc/modprobe.d/modprobe.conf\n                        whiptail --title \"Success\" --msgbox \"\nNested ok.\n您已经开启嵌套虚拟化。\n                        \" 10 60\n                    else\n                        whiptail --title \"Warnning\" --msgbox \"\nYour system can not open nested.\n您的系统不支持嵌套虚拟化。\n                        \" 10 60\n                    fi\n                else\n                    whiptail --title \"Warnning\" --msgbox \"\nYou already enabled nested virtualization.\n您已经开启过嵌套虚拟化。\n                    \" 10 60\n                fi\n            fi\n            chNestedV\n            ;;\n        b )\n            if [ `cat /sys/module/kvm_intel/parameters/nested` = 'Y' ];then\n                if [ `qm list|wc -l` = 0 ];then\n                    whiptail --title \"Warnning\" --msgbox \"\nYou have no vm.\n您还没有虚拟机。\n                    \" 10 60\n                else\n                    setVmN\n                fi\n                chNestedV\n            else\n                whiptail --title \"Warnning\" --msgbox \"\nYour system can not open nested.\n您的系统不支持嵌套虚拟化。\n                \" 10 60\n                chNestedV\n            fi\n            ;;\n        c )\n            if [ `cat /sys/module/kvm_intel/parameters/nested` = 'Y' ];then\n                if [ `qm list|wc -l` = 0 ];then\n                    whiptail --title \"Warnning\" --msgbox \"\nYou have no vm.\n您还没有虚拟机。\n                    \" 10 60\n                else\n                    unsetVmN\n                fi\n                chNestedV\n            else\n                whiptail --title \"Warnning\" --msgbox \"\nYour system can not open nested.\n您的系统不支持嵌套虚拟化。\n                \" 10 60\n                chNestedV\n            fi\n            ;;\n        q )\n            main\n            ;;\n    esac\nelse\n    main\nfi\n}\nchSensors(){\n#安装lm-sensors并配置在界面上显示\n#for i in `sed -n '/Chip drivers/,/\\#----cut here/p' /tmp/sensors|sed '/Chip /d'|sed '/cut/d'`;do modprobe $i;done\nclear\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config lm-sensors & proxmox ve display:\" 25 60 15 \\\n    \"a\" \"Install.\" \\\n    \"b\" \"Uninstall.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置Sensors:\" 25 60 15 \\\n    \"a\" \"安装配置温度、CPU频率显示\" \\\n    \"b\" \"删除配置\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n    a )\n        if(whiptail --title \"Yes/No\" --yesno \"\nYour OS：$pve, you will install sensors interface, continue?(y/n)\n您的系统是：$pve, 您将安装sensors界面，是否继续？(y/n)\n            \" 10 60) then\n            js='/usr/share/pve-manager/js/pvemanagerlib.js'\n            pm='/usr/share/perl5/PVE/API2/Nodes.pm'\n            sh='/usr/bin/s.sh'\n            ppv=`/usr/bin/pveversion`\n            OS=`echo $ppv|awk -F'-' 'NR==1{print $1}'`\n            ver=`echo $ppv|awk -F'/' 'NR==1{print $2}'|awk -F'-' '{print $1}'`\n            bver=`echo $ppv|awk -F'/' 'NR==1{print $2}'|awk -F'.' '{print $1}'`\n            pve=$OS$ver\n            mkdir /etc/pvetools/\n            if [ ! -f $js ];then\n                cp $js /etc/pvetools/pvemanagerlib.js\n            fi\n            if [ ! -f $pm ];then\n                cp $pm /etc/pvetools/Nodes.pm\n            fi\n            if [[ \"$OS\" != \"pve\" ]];then\n                whiptail --title \"Warnning\" --msgbox \"\n您的系统不是Proxmox VE, 无法安装!\nYour OS is not Proxmox VE!\n                \" 10 60\n                if [[ \"$bver\" != \"5\" || \"$bver\" != \"6\" || \"$bver\" != \"7\" ]];then\n                    whiptail --title \"Warnning\" --msgbox \"\n您的系统版本无法安装!\nYour Proxmox VE version can not install!\n                    \" 10 60\n                    main\n                fi\n                main\n            fi\n            if [[ ! -f \"$js\" || ! -f \"$pm\" ]];then\n                whiptail --title \"Warnning\" --msgbox \"\n您的Proxmox VE版本不支持此方式！\nYour Proxmox VE\\'s version is not supported,Now quit!\n                \" 10 60\n                main\n            fi\n            #if [[ -f \"$js.backup\" && -f \"$sh\" ]];then\n            if [[ `cat $js|grep Sensors|wc -l` -gt 0 ]];then\n                whiptail --title \"Warnning\" --msgbox \"\n您已经安装过本软件，请不要重复安装！\nYou already installed,Now quit!\n                \" 10 60\n                chSensors\n            fi\n            if [ ! -f \"/usr/bin/sensors\" ];then\n                apt-get -y install lm-sensors\n            fi\n            sensors-detect --auto > /tmp/sensors\n            drivers=`sed -n '/Chip drivers/,/\\#----cut here/p' /tmp/sensors|sed '/Chip /d'|sed '/cut/d'`\n            if [ `echo $drivers|wc -w` = 0 ];then\n                whiptail --title \"Warnning\" --msgbox \"\nSensors driver not found.\n没有找到任何驱动，似乎你的系统没有温度传感器。\n继续配置CPU频率...\n                \" 10 60\n                if [ $bver -gt 7 ];then\n                    cat << EOF > /usr/bin/s.sh\ncurC=\\`cat /proc/cpuinfo|grep MHz|awk 'NR==1{print \\$4}'\\`\nmax=\\`cat /proc/cpuinfo|grep GHz|awk -F \"@\" 'NR==1{print \\$2}'|sed 's/GHz//g'|sed 's/\\ //g'\\`\nmaxC=\\`echo \"\\$max * 1000\"|bc -l\\`\nminC=\\`lscpu|grep 'min MHz'|awk '{print \\$4}'\\`\nc=\"\\\"CPU-MHz\\\":\\\"\"\\$curC\"\\\",\\\"CPU-max-MHz\\\":\\\"\"\\$maxC\"\\\",\\\"CPU-min-MHz\\\":\\\"\"\\$minC\"\\\"\"\nr=\"{\"\\$c\"}\"\necho \\$r\nEOF\n                else\n                    cat << EOF > /usr/bin/s.sh\nc=\\`lscpu|grep MHz|sed 's/CPU\\ /CPU-/g'|sed 's/\\ MHz/-MHz/g'|sed 's/\\ //g'|sed 's/^/\"/g'|sed 's/$/\"\\,/g'|sed 's/\\:/\\\"\\:\\\"/g'|awk 'BEGIN{ORS=\"\"}{print \\$0}'|sed 's/\\,\\$//g'\\`\nr=\"{\"\\$c\"}\"\necho \\$r\nEOF\n                fi\n            chmod +x /usr/bin/s.sh\n            #--create the configs--\n            if [ -f ./p1 ];then rm ./p1;fi\n            #--这里插入cpu频率　add cpu MHz--\n            cat << EOF >> ./p1\n             ,{\n             itemId: 'MHz',\n             colspan: 2,\n             printBar: false,\n             title: gettext('CPU频率'),\n             textField: 'tdata',\n             renderer:function(value){\n                 var d = JSON.parse(value);\n                 f0 = d['CPU-MHz'];\n                 f1 = d['CPU-min-MHz'];\n                 f2 = d['CPU-max-MHz'];\n                 return  \\`CPU实时(Cur): \\${f0} MHz | 最小(min): \\${f1} MHz | 最大(max): \\${f2} MHz \\`;\n         }\n }\nEOF\n            #--插入cpu频率结束　add cpu MHz end--\n            cat << EOF >> ./p2\n\\$res->{tdata} = \\`/usr/bin/s.sh\\`;\nEOF\n            n=`sed '/pveversion/,/\\}/=' $js -n|sed -n '$p'`\n            sed -i ''$n' r ./p1' $js\n            n=`sed '/pveversion/,/version_text/=' $pm -n|sed -n '$p'`\n            sed -i ''$n' r ./p2' $pm\n            if [ -f ./p1 ];then rm ./p1;fi\n            if [ -f ./p2 ];then rm ./p2;fi\n            systemctl restart pveproxy\n            whiptail --title \"Success\" --msgbox \"\n如果没有意外，已经安装完成！浏览器打开界面刷新看一下概要界面！\nInstallation Complete! Go to websites and refresh to enjoy!\n            \" 10 60\n\n                chSensors\n            else\n                for i in $drivers\n                do\n                    modprobe $i\n                    if [ `grep $i /etc/modules|wc -l` = 0 ];then\n                        echo $i >> /etc/modules\n                    fi\n                done\n                sensors\n                sleep 3\n                whiptail --title \"Success\" --msgbox \"\nInstall complete,if everything ok ,it\\'s showed sensors.Next, restart you web.\n安装配置成功，如果没有意外，上面已经显示sensors。下一步会重启web界面，请不要惊慌。\n                \" 20 60\n            rm /tmp/sensors\n            #debian 12 fixbug\n            if [ $bver -gt 7 ];then\n                cat << EOF > /usr/bin/s.sh\nr=\\`sensors|grep -E 'Package id 0|fan|Physical id 0|Core'|grep '^[a-zA-Z0-9].[[:print:]]*:.\\s*\\S*[0-9].\\s*[A-Z].' -o|sed 's/:\\ */:/g'|sed 's/:/\":\"/g'|sed 's/^/\"/g' |sed 's/$/\",/g'|sed 's/\\ C\\ /C/g'|sed 's/\\ V\\ /V/g'|sed 's/\\ RP/RPM/g'|sed 's/\\ //g'|awk 'BEGIN{ORS=\"\"}{print \\$0}'|sed 's/\\,\\$//g'|sed 's/°C/\\&degC/g'\\`\ncurC=\\`cat /proc/cpuinfo|grep MHz|awk 'NR==1{print \\$4}'\\`\nmax=\\`cat /proc/cpuinfo|grep GHz|awk -F \"@\" 'NR==1{print \\$2}'|sed 's/GHz//g'|sed 's/\\ //g'\\`\nmaxC=\\`echo \"\\$max * 1000\"|bc -l\\`\nminC=\\`lscpu|grep 'min MHz'|awk '{print \\$4}'\\`\nc=\"\\\"CPU-MHz\\\":\\\"\"\\$curC\"\\\",\\\"CPU-max-MHz\\\":\\\"\"\\$maxC\"\\\",\\\"CPU-min-MHz\\\":\\\"\"\\$minC\"\\\"\"\nr=\"{\"\\$r\",\"\\$c\"}\"\necho \\$r\nEOF\n            else\n                cat << EOF > /usr/bin/s.sh\nr=\\`sensors|grep -E 'Package id 0|fan|Physical id 0|Core'|grep '^[a-zA-Z0-9].[[:print:]]*:.\\s*\\S*[0-9].\\s*[A-Z].' -o|sed 's/:\\ */:/g'|sed 's/:/\":\"/g'|sed 's/^/\"/g' |sed 's/$/\",/g'|sed 's/\\ C\\ /C/g'|sed 's/\\ V\\ /V/g'|sed 's/\\ RP/RPM/g'|sed 's/\\ //g'|awk 'BEGIN{ORS=\"\"}{print \\$0}'|sed 's/\\,\\$//g'|sed 's/°C/\\&degC/g'\\`\nc=\\`lscpu|grep MHz|sed 's/CPU\\ /CPU-/g'|sed 's/\\ MHz/-MHz/g'|sed 's/\\ //g'|sed 's/^/\"/g'|sed 's/$/\"\\,/g'|sed 's/\\:/\\\"\\:\\\"/g'|awk 'BEGIN{ORS=\"\"}{print \\$0}'|sed 's/\\,\\$//g'\\`\nr=\"{\"\\$r\",\"\\$c\"}\"\necho \\$r\nEOF\n            fi\n            chmod +x /usr/bin/s.sh\n            #--create the configs--\n            #--filter for sensors 过滤sensors项目--\n            d=`sensors|grep -E 'Package id 0|fan|Physical id 0|Core'|grep '^[a-zA-Z0-9].[[:print:]]*:.\\s*\\S*[0-9].\\s*[A-Z].' -o|sed 's/:\\ */:/g'|sed 's/\\ C\\ /C/g'|sed 's/\\ V\\ /V/g'|sed 's/\\ RP/RPM/g'|sed 's/\\ //g'|awk -F \":\" '{print $1}'`\n            if [ -f ./p1 ];then rm ./p1;fi\n            #--这里插入cpu频率　add cpu MHz--\n            cat << EOF >> ./p1\n             ,{\n             itemId: 'MHz',\n             colspan: 2,\n             printBar: false,\n             title: gettext('CPU频率'),\n             textField: 'tdata',\n             renderer:function(value){\n                 var d = JSON.parse(value);\n                 f0 = d['CPU-MHz'];\n                 f1 = d['CPU-min-MHz'];\n                 f2 = d['CPU-max-MHz'];\n                 return  \\`CPU实时(Cur): \\${f0} MHz | 最小(min): \\${f1} MHz | 最大(max): \\${f2} MHz \\`;\n         }\n }\nEOF\n            #--插入cpu频率结束　add cpu MHz end--\n            cat << EOF >> ./p1\n        ,{\n            xtype: 'box',\n            colspan: 2,\n        title: gettext('Sensors Data:'),\n            padding: '0 0 20 0'\n        }\n        ,{\n            itemId: 'Sensors',\n            colspan: 2,\n            printBar: false,\n            title: gettext('Sensors Data:')\n        }\nEOF\n            for i in $d\n            do\n            cat << EOF >> ./p1\n        ,{\n            itemId: '$i',\n            colspan: 1,\n            printBar: false,\n            title: gettext('$i'),\n            textField: 'tdata',\n            renderer:function(value){\n            var d = JSON.parse(value);\n            var s = \"\";\n            s = d['$i'];\n            return s;\n            }\n        }\nEOF\n            done\n            cat << EOF >> ./p2\n\\$res->{tdata} = \\`/usr/bin/s.sh\\`;\nEOF\n#\\$res->{cpusensors} = \\`lscpu | grep MHz\\`;\n            #--configs end--\n            #h=`sensors|awk 'END{print NR}'`\n            itemC=`s.sh|sed  's/\\,/\\r\\n/g'|wc -l`\n            if [ $itemC = 0 ];then\n                h=400\n            else\n                #let h=$h*9+320\n                let h=$itemC*24/2+360\n            fi\n            n=`sed '/widget.pveNodeStatus/,/height/=' $js -n|sed -n '$p'`\n            sed -i ''$n'c \\ \\ \\ \\ height:\\ '$h',' $js\n            n=`sed '/pveversion/,/\\}/=' $js -n|sed -n '$p'`\n            sed -i ''$n' r ./p1' $js\n            n=`sed '/pveversion/,/version_text/=' $pm -n|sed -n '$p'`\n            sed -i ''$n' r ./p2' $pm\n            if [ -f ./p1 ];then rm ./p1;fi\n            if [ -f ./p2 ];then rm ./p2;fi\n            systemctl restart pveproxy\n            whiptail --title \"Success\" --msgbox \"\n如果没有意外，已经安装完成！浏览器打开界面刷新看一下概要界面！\nInstallation Complete! Go to websites and refresh to enjoy!\n            \" 10 60\n        fi\n        else\n            chSensors\n        fi\n    ;;\n    b )\n        if(whiptail --title \"Yes/No\" --yesno \"\nUninstall?\n确认要还原配置？\n        \" 10 60)then\n            js='/usr/share/pve-manager/js/pvemanagerlib.js'\n            pm='/usr/share/perl5/PVE/API2/Nodes.pm'\n\n            if [[ `cat $js|grep -E 'Sensors|CPU'|wc -l` = 0 ]];then\n                whiptail --title \"Warnning\" --msgbox \"\nNo sensors found.\n没有检测到安装，不需要卸载。\n                \" 10 60\n            else\n                sensors-detect --auto > /tmp/sensors\n                drivers=`sed -n '/Chip drivers/,/\\#----cut here/p' /tmp/sensors|sed '/Chip /d'|sed '/cut/d'`\n                if [ `echo $drivers|wc -w` != 0 ];then\n                    for i in $drivers\n                    do\n                        if [ `grep $i /etc/modules|wc -l` != 0 ];then\n                            sed -i '/'$i'/d' /etc/modules\n                        fi\n                    done\n                fi\n                apt-get -y remove lm-sensors\n            {\n                #mv $js.backup $js\n                #mv $pm.backup $pm\n                #rm $js\n                #rm $pm\n                rm /usr/bin/s.sh\n                #cp /etc/pvetools/pvemanagerlib.js $js\n                #cp /etc/pvetools/Nodes.pm $pm\n                apt install --reinstall pve-manager\n                systemctl restart pveproxy\n                echo 50\n                echo 100\n                sleep 1\n            }|whiptail --gauge \"Uninstalling\" 10 60 0\n            whiptail --title \"Success\" --msgbox \"\nUninstall complete.\n卸载成功。\n            \" 10 60\n            fi\n        fi\n        chSensors\n        ;;\n    esac\nfi\n}\n\ngetIommu(){\n    ppv=`/usr/bin/pveversion`\n    OS=`echo $ppv|awk -F'-' 'NR==1{print $1}'`\n    ver=`echo $ppv|awk -F'/' 'NR==1{print $2}'|awk -F'-' '{print $1}'`\n    bver=`echo $ppv|awk -F'/' 'NR==1{print $2}'|awk -F'.' '{print $1}'`\n    if [ `cat /proc/cpuinfo|grep Intel|wc -l` = 0 ];then\n        iommu=\"amd_iommu=on\"\n    else\n        iommu=\"intel_iommu=on\"\n    fi\n    if [ ${bver} -gt 6 ];then\n        iommu=$iommu\" iommu=pt pcie_acs_override=downstream\"\n    fi\n}\n\nchPassth(){\n\n#--------------funcs-start----------------\nenablePass(){\nif(whiptail --title \"Yes/No Box\" --yesno \"\nEnable PCI Passthrough(need reboot host)?\n是否开启硬件直通支持（需要重启物理机）?\n\" --defaultno 10 60) then\n    if [ `dmesg | grep -e DMAR -e IOMMU|wc -l` = 0 ];then\n        whiptail --title \"Warnning\" --msgbox \"\nYour hardware do not support PCI Passthrough(No IOMMU)\n您的硬件不支持直通！\n\" 10 60\n        chPassth\n    fi\n    getIommu\n    if [ `grep \"$iommu\" /etc/default/grub|wc -l` = 0 ];then\n        sed -i.bak \"s|quiet|quiet $iommu|\" /etc/default/grub\n        update-grub\n        if [ `grep \"vfio\" /etc/modules|wc -l` = 0 ];then\n            cat <<EOF >> /etc/modules\nvfio\nvfio_iommu_type1\nvfio_pci\nvfio_virqfd\nEOF\n        fi\n        whiptail --title \"Success\" --msgbox \"\n    need to reboot to apply! Please reboot.\n    安装好后需要重启系统，请稍后重启。\n        \" 10 60\n    else\n        whiptail --title \"Warnning\" --msgbox \"\nYou already configed!\n您已经配置过这个了!\n\" 10 60\n        chPassth\n    fi\nelse\n    main\nfi\n}\n\ndisablePass(){\nif(whiptail --title \"Yes/No Box\" --yesno \"\ndisable PCI Passthrough(need reboot host)?\n是否关闭硬件直通支持（需要重启物理机）?\n\" --defaultno 10 60) then\n    if [ `dmesg | grep -e DMAR -e IOMMU|wc -l` = 0 ];then\n        whiptail --title \"Warnning\" --yesno \"\nYour hardware do not support PCI Passthrough(No IOMMU)\n您的硬件不支持直通！\n\" 10 60\n        chPassth\n    fi\n    getIommu\n    if [ `grep \"$iommu\" /etc/default/grub|wc -l` = 0 ];then\n        whiptail --title \"Warnning\" --msgbox \"not config yet.\n您还没有配置过该项\" 10 60\n        chPassth\n    else\n        update-grub\n    {\n        sed -i \"s/ $iommu//g\" /etc/default/grub\n        echo 30\n        echo 80\n        sed -i '/vfio/d' /etc/modules\n        echo 100\n        sleep 1\n        }|whiptail --gauge \"installing...\" 10 60 10\n        whiptail --title \"Success\" --msgbox \"\nneed to reboot to apply! Please reboot.\n安装好后需要重启系统，请稍后重启。\n        \" 10 60\n    fi\nelse\n    main\nfi\n}\n\nenVideo(){\n    clear\n    if [ `dmesg | grep -e DMAR -e IOMMU|wc -l` = 0 ];then\n        whiptail --title \"Warnning\" --msgbox \"\n    Your hardware do not support PCI Passthrough(No IOMMU)\n    您的硬件不支持直通！\n    \" 10 60\n        configVideo\n    fi\n    if [ `grep 'iommu=on' /etc/default/grub|wc -l` = 0 ];then\n        if(whiptail --title \"Warnning\" --yesno \"\n    your host not enable IOMMU,jump to enable?\n    您的主机系统尚未配置直通支持，跳转去设置？\n        \" 10 60)then\n            enablePass\n        fi\n    fi\n    if [ `grep 'vfio' /etc/modules|wc -l` = 0 ];then\n        if(whiptail --title \"Warnning\" --yesno \"\n    your host not enable IOMMU,jump to enable?\n    您的主机系统尚未配置直通支持，跳转去设置？\n        \" 10 60)then\n            enablePass\n        fi\n    fi\n    getVideo\n\n}\n\ngetVideo(){\n    if [ -f \"cards\" ];then\n        rm cards\n    fi\n    if [ -f \"cards-out\" ];then\n        rm cards-out\n    fi\n    lspci |grep -E 'VGA|Audio' > cards\n    cat cards|while read line\n    do\n        c=`echo $line |awk -F '.' '{print $1\" \" }'``echo $line|awk -F ': ' '{for (i=2;i<=NF;i++)printf(\"%s_\", $i);print \"\"}'|sed 's/ /_/g'``echo ' OFF'`\n        echo $c >> cards-out\n    done\n    cat cards-out > cards\n    id=`cat /etc/modprobe.d/vfio.conf|grep -o \"ids=[0-9a-zA-Z,:]*\"|awk -F \"=\" '{print $2}'|sed  's/,/ /g'|sort -u`\n    n=`for i in $id;do lspci -n -d $i|awk -F \".\" '{print $1}';done|sort -u`\n    for i in $n\n    do\n        sed -i \"/${i}/s/OFF/ON/\" cards\n    done\n    DISTROS=$(whiptail --title \"Video cards:\" --checklist \\\n\"Choose cards to config(* mark means configed):\n选择显卡（标*号为已经配置过的）：\n\" 15 90 4 \\\n$(cat cards) \\\n3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ];then\n        #--config-id---\n        if [ -n \"$DISTROS\" ];then\n\t    rm cards*\n            if(whiptail --title \"Warnning\" --yesno \"\nContinue?\n请确认是否继续？\n            \" 10 60)then\n                clear\n            else\n                getVideo\n            fi\n            ids=\"\"\n            for i in $DISTROS\n            do\n                i=`echo $i|sed 's/\\\"//g'`\n                ids=$ids`lspci -n -s ${i}|awk '{print \",\"$3}'`\n            done\n            ids=`echo $ids|sed 's/^,//g'|sed 's/ ,/,/g'`\n            if [ `grep $ids'$' /etc/modprobe.d/vfio.conf|wc -l` = 0 ];then\n                echo \"options vfio-pci ids=$ids\" > /etc/modprobe.d/vfio.conf\n            else\n                if(whiptail --defaultno --title \"Warnning\" --yesno \"\n    It seems you have already configed it before.Reconfig?\n    您好像已经配置过这个了。重新配置？\n                \" 10 60)then\n                    clear\n                else\n                   getVideo\n                fi\n            fi\n            #--config-blacklist--\n            for i in nvidiafb nouveau nvidia radeon amdgpu\n            do\n                if [ `grep '^blacklist '$i'$' /etc/modprobe.d/pve-blacklist.conf|wc -l` = 0 ];then\n                    echo \"blacklist \"$i >> /etc/modprobe.d/pve-blacklist.conf\n                fi\n            done\n            #--iommu-groups--\n            if [ `find /sys/kernel/iommu_groups/ -type l|wc -l` = 0 ];then\n                if [ `grep 'pcie_acs_override=downstream' /etc/default/grub|wc -l` = 0 ];then\n                    getIommu\n                    sed -i.bak \"s|quiet|quiet $iommu|\" /etc/default/grub\n                    update-grub\n                fi\n            fi\n            #--video=efifb:off--\n            if [ `grep 'video=efifb:off' /etc/default/grub|wc -l` = 0 ];then\n                sed -i.bak 's|quiet|quiet video=efifb:off|' /etc/default/grub\n                update-grub\n            fi\n            #--kvm-parameters--\n            if [ `cat /sys/module/kvm/parameters/ignore_msrs` = 'N' ];then\n                echo 1 > /sys/module/kvm/parameters/ignore_msrs\n                echo \"options kvm ignore_msrs=Y\">>/etc/modprobe.d/kvm.conf\n            fi\n            update-initramfs -u -k all\n            whiptail --title \"Success\" --msgbox \"\n    need to reboot to apply! Please reboot.\n    安装好后需要重启系统，请稍后重启。\n            \" 10 60\n        else\n            if(whiptail --title \"Warnning\" --yesno \"\nContinue?\n请确认是否继续？\n            \" 10 60)then\n                clear\n            else\n                getVideo\n            fi\n            {\n            echo \"\" > /etc/modprobe.d/vfio.conf\n            echo 0 > /sys/module/kvm/parameters/ignore_msrs\n            sed -i '/ignore_msrs=Y/d' /etc/modprobe.d/kvm.conf\n            for i in nvidiafb nouveau nvidia radeon amdgpu\n            do\n                sed -i '/'$i'/d' /etc/modprobe.d/pve-blacklist.conf\n            done\n            echo 100\n            sleep 1\n            }|whiptail --gauge \"configing...\" 10 60 10\n            whiptail --title \"Success\" --msgbox \"Done.\n配置完成\" 10 60\n        fi\n    else\n        configVideo\n    fi\n}\n\ndisVideo(){\n    clear\n    getVideo dis\n}\naddVideo(){\n    if [ -f \"cards\" ];then\n        rm cards\n    fi\n    if [ -f \"cards-out\" ];then\n        rm cards-out\n    fi\n    lspci |grep -e VGA > cards\n    cat cards|while read line\n    do\n        c=`echo $line |awk -F '.' '{print $1\" \" }'``echo $line|awk -F ': ' '{for (i=2;i<=NF;i++)printf(\"%s_\", $i);print \"\"}'|sed 's/ /_/g'``echo ' OFF'`\n        echo $c >> cards-out\n    done\n    cards=`cat cards-out`\n    rm cards*\n    DISTROS=$(whiptail --title \"Video cards:\" --checklist \\\n\"Choose cards to config?\" 15 90 4 \\\n$(echo $cards) \\\n    3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ];then\n        #--config-id---\n        if [ $DISTROS ];then\n            confPath='/etc/pve/qemu-server/'\n            ids=\"\"\n            for i in $DISTROS\n            do\n\n                i=`echo $i|sed 's/\\\"//g'`\n                for j in `ls $confPath`\n                do\n                    if [ `grep $i $confPath$j|wc -l` != 0 ];then\n                        confId=`echo $j|awk -F '.' '{print $1}'`\n                    fi\n                done\n            done\n            list=`qm list|awk 'NR>1{print $1\":\"$2\"..................\"$3\" \"}'`\n            echo -n \"\">lsvm\n            ls=`for i in $list;do echo $i|awk -F \":\" '{print $1\" \"$2\" OFF\"}'>>lsvm;done`\n            ls=`sed -i '/'$confId'/ s/OFF/ON/g' lsvm`\n            ls=`cat lsvm`\n            rm lsvm\n            h=`echo $ls|wc -l`\n            let h=$h*1\n            if [ $h -lt 30 ];then\n                h=30\n            fi\n            list1=`echo $list|awk 'NR>1{print $1}'`\n            vmid=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --radiolist \"\n        Choose vmid to set video card Passthrough:\n        选择需要配置显卡直通的vm：\" 20 60 10 \\\n            $(echo $ls) \\\n            3>&1 1>&2 2>&3)\n            exitstatus=$?\n            if [ $exitstatus = 0 ]; then\n                if(whiptail --title \"Yes/No\" --yesno \"\n        you choose: $vmid ,continue?\n        你选的是：$vmid ，是否继续?\n                    \" 10 60)then\n                    echo $vmid>vmid\n                    while [ true ]\n                    do\n                        if [ `echo \"$vmid\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                            whiptail --title \"Warnning\" --msgbox \"\n            输入格式错误，请重新输入：\n                            \" 10 60\n                            addVideo\n                        else\n                            break\n                        fi\n                    done\n                    if [ $vmid -eq $confId ];then\n                        whiptail --title \"Warnning\" --msgbox \"\nYou already configed!\n您已经配置过这个了!\n                        \" 10 60\n                        addVideo\n                    fi\n                    opt=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --checklist \"\nChoose options:\n选择选项：\" 20 60 10 \\\n                    \"q35\" \"q35支持，gpu直通建议选择，独显留空\" OFF \\\n                    \"ovmf\" \"gpu直通选择\" OFF \\\n                    \"x-vga\" \"主gpu，默认已选择\" ON \\\n                    3>&1 1>&2 2>&3)\n                    exitstatus=$?\n                    if [ $exitstatus = 0 ]; then\n                        for i in 'boot:' 'memory:' 'core:';do\n                            if [ `grep '^'$i $confPath$vmid.conf|wc -l` != 0 ];then\n                                con=$i\n                                break\n                            fi\n                        done\n                        for op in $opt\n                        do\n                            op=`echo $op|sed 's/\\\"//g'`\n                            if [ $op = 'q35' ];then\n                                sed \"/\"$con\"/a\\machine\\: q35\" -i $confPath$vmid.conf\n                            fi\n                            if [ $op = 'ovmf' ];then\n                                sed \"/\"$con\"/a\\bios\\: ovmf\" -i $confPath$vmid.conf\n                            fi\n                        done\n                        #--config-vmid.conf---\n                        for i in $DISTROS\n                        do\n                            if [ `cat $confPath$vmid.conf |sed  -n '/^hostpci/p'|grep $i|wc -l` = 0 ];then\n                                pcid=`cat $confPath$vmid.conf |sed  -n '/^hostpci/p'|awk -F ':' '{print $1}'|sort -u|grep '[0-9]*$' -o`\n                                if [ $pcid ];then\n                                    pcid=$((pcid+1))\n                                else\n                                    pcid=0\n                                fi\n                                i=`echo $i|sed 's/\\\"//g'`\n                                sed -i \"/\"$con\"/a\\hostpci\"$pcid\": \"$i\",x-vga=1\" $confPath$vmid.conf\n                            else\n                                whiptail --title \"Warnning\" --msgbox \"\nYou already configed!\n您已经配置过这个了!\n                                \" 10 60\n                            fi\n                            if [ $confId ];then\n                                rmVideo $confId $confPath $i\n                            fi\n                            whiptail --title \"Success\" --msgbox \"\nConfiged!Please reboot vm.\n配置成功！重启虚拟机后生效。\n                            \" 10 60\n                            if(whiptail --title \"Yes/No\" --yesno \"\nLet tool auto switch vm?\n是否自动帮你重启切换虚拟机？\" 10 60)then\n                                #vmid=`echo $vmid|sed 's/\\\"//g'`\n                                vmid=`cat vmid`\n                                rm vmid\n                                if [ $confId ];then\n                                    usb=`cat /etc/pve/qemu-server/115.conf |grep '^usb'|wc -l`\n                                    if [ $usb ];then\n                                        if(whiptail --title \"Yes/No\" --yesno \"\nLet tool auto switch usb?\n是否自动切换usb设备？\n                                        \" 10 60)then\n                                            cat $confPath$confId.conf |grep '^usb'|sed 's/ //g'>usb\n                                            sed -i '/^usb/d' $confPath$confId.conf\n                                            for i in `cat usb`;do sed -i '/memory/a\\'$i $confPath$vmid.conf;done\n                                            sed -i 's/:host/: host/g' $confPath$vmid.conf\n                                            rm usb\n                                        fi\n                                    fi\n                                    qm stop $confId\n                                fi\n                                qm stop $vmid\n                                if [ $confId ];then\n                                    qm start $confId\n                                fi\n                                qm start $vmid\n                            whiptail --title \"Success\" --msgbox \"\nConfiged!\n配置成功！\n                            \" 10 60\n                            else\n                                configVideo\n                            fi\n                        done\n                    else\n                        addVideo\n                    fi\n                    configVideo\n                else\n                    addVideo\n                fi\n            else\n                configVideo\n            fi\n        else\n            whiptail --title \"Warnning\" --msgbox \"\nPlease choose a card.\n请选择一个显卡。\" 10 60\n            addVideo\n        fi\n    else\n        configVideo\n    fi\n}\nrmVideo(){\n    clear\n    vmid=$1\n    confPath=$2\n    DISTROS=$3\n    for i in $vmid\n    do\n        sed -i '/q35/d' $confPath$vmid.conf\n        for i in $DISTROS\n            do\n                if [ `cat $confPath$vmid.conf |sed  -n '/^hostpci/p'|grep $i|wc -l` != 0 ];then\n                    sed -i '/'$i'/d' $confPath$vmid.conf\n                fi\n            done\n    done\n}\nswitchVideo(){\n    if [ -f \"cards\" ];then\n        rm cards\n    fi\n    if [ -f \"cards-out\" ];then\n        rm cards-out\n    fi\n    lspci |grep -e VGA > cards\n    cat cards|while read line\n    do\n        c=`echo $line |awk -F '.' '{print $1\" \" }'``echo $line|awk -F ': ' '{for (i=2;i<=NF;i++)printf(\"%s_\", $i);print \"\"}'|sed 's/ /_/g'``echo ' OFF'`\n        echo $c >> cards-out\n    done\n    cards=`cat cards-out`\n    rm cards*\n    DISTROS=$(whiptail --title \"Video cards:\" --checklist \\\n\"Choose cards to config?\" 15 90 4 \\\n$(echo $cards) \\\n    3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ];then\n        #--config-id---\n        if [ $DISTROS ];then\n            confPath='/etc/pve/qemu-server/'\n            ids=\"\"\n            for i in $DISTROS\n            do\n\n                i=`echo $i|sed 's/\\\"//g'`\n                for j in `ls $confPath`\n                do\n                    if [ `grep $i $confPath$j|wc -l` != 0 ];then\n                        confId=`echo $j|awk -F '.' '{print $1}'`\n                    fi\n                done\n            done\n            list=`qm list|awk 'NR>1{print $1\":\"$2\"..................\"$3\" \"}'`\n            echo -n \"\">lsvm\n            ls=`for i in $list;do echo $i|awk -F \":\" '{print $1\" \"$2\" OFF\"}'>>lsvm;done`\n            ls=`sed -i '/'$confId'/ s/OFF/ON/g' lsvm`\n            ls=`cat lsvm`\n            rm lsvm\n            h=`echo $ls|wc -l`\n            let h=$h*1\n            if [ $h -lt 30 ];then\n                h=30\n            fi\n            list1=`echo $list|awk 'NR>1{print $1}'`\n            vmid=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --radiolist \"\n        Choose vmid to set video card Passthrough:\n        选择需要配置显卡直通的vm：\" 20 60 10 \\\n            $(echo $ls) \\\n            3>&1 1>&2 2>&3)\n            exitstatus=$?\n            if [ $exitstatus = 0 ]; then\n                if(whiptail --title \"Yes/No\" --yesno \"\n        you choose: $vmid ,continue?\n        你选的是：$vmid ，是否继续?\n                    \" 10 60)then\n                    echo $vmid>vmid\n                    while [ true ]\n                    do\n                        if [ `echo \"$vmid\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                            whiptail --title \"Warnning\" --msgbox \"\n            输入格式错误，请重新输入：\n                            \" 10 60\n                            addVideo\n                        else\n                            break\n                        fi\n                    done\n                    if [ $vmid -eq $confId ];then\n                        whiptail --title \"Warnning\" --msgbox \"\nYou already configed!\n您已经配置过这个了!\n                        \" 10 60\n                        addVideo\n                    fi\n                    opt=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --checklist \"\nChoose options:\n选择选项：\" 20 60 10 \\\n                    \"q35\" \"q35支持，gpu直通建议选择，独显留空\" OFF \\\n                    \"ovmf\" \"gpu直通选择\" OFF \\\n                    \"x-vga\" \"主gpu，默认已选择\" ON \\\n                    3>&1 1>&2 2>&3)\n                    exitstatus=$?\n                    if [ $exitstatus = 0 ]; then\n                        for i in 'boot:' 'memory:' 'core:';do\n                            if [ `grep '^'$i $confPath$vmid.conf|wc -l` != 0 ];then\n                                con=$i\n                                break\n                            fi\n                        done\n                        for op in $opt\n                        do\n                            op=`echo $op|sed 's/\\\"//g'`\n                            if [ $op = 'q35' ];then\n                                sed \"/\"$con\"/a\\machine\\: q35\" -i $confPath$vmid.conf\n                            fi\n                            if [ $op = 'ovmf' ];then\n                                sed \"/\"$con\"/a\\bios\\: ovmf\" -i $confPath$vmid.conf\n                            fi\n                        done\n                        #--config-vmid.conf---\n                        for i in $DISTROS\n                        do\n                            if [ `cat $confPath$vmid.conf |sed  -n '/^hostpci/p'|grep $i|wc -l` = 0 ];then\n                                pcid=`cat $confPath$vmid.conf |sed  -n '/^hostpci/p'|awk -F ':' '{print $1}'|sort -u|grep '[0-9]*$' -o`\n                                if [ $pcid ];then\n                                    pcid=$((pcid+1))\n                                else\n                                    pcid=0\n                                fi\n                                i=`echo $i|sed 's/\\\"//g'`\n                                sed -i \"/\"$con\"/a\\hostpci\"$pcid\": \"$i\",x-vga=1\" $confPath$vmid.conf\n                            else\n                                whiptail --title \"Warnning\" --msgbox \"\nYou already configed!\n您已经配置过这个了!\n                                \" 10 60\n                            fi\n                            if [ $confId ];then\n                                rmVideo $confId $confPath $i\n                            fi\n                            whiptail --title \"Success\" --msgbox \"\nConfiged!Please reboot vm.\n配置成功！重启虚拟机后生效。\n                            \" 10 60\n                            if(whiptail --title \"Yes/No\" --yesno \"\nLet tool auto switch vm?\n是否让工具自动帮你重启切换虚拟机？\" 10 60)then\n                                #vmid=`echo $vmid|sed 's/\\\"//g'`\n                                vmid=`cat vmid`\n                                rm vmid\n                                qm stop $confId\n                                qm stop $vmid\n                                qm start $confId\n                                qm start $vmid\n                                whiptail --title \"Success\" --msgbox \"\nConfiged!\n配置成功！\n                                \" 10 60\n                            else\n                                configVideo\n                            fi\n                        done\n                    else\n                        addVideo\n                    fi\n                    configVideo\n                else\n                    addVideo\n                fi\n            else\n                configVideo\n            fi\n        else\n            whiptail --title \"Warnning\" --msgbox \"\nPlease choose a card.\n请选择一个显卡。\" 10 60\n            addVideo\n        fi\n    else\n        configVideo\n    fi\n}\n\nconfigVideo(){\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config PCI Video card Passthrough:\" 25 60 15 \\\n    \"a\" \"Config Video Card Passthrough\" \\\n    \"b\" \"Config Video Card Passthrough to vm\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置PCI显卡直通:\" 25 60 15 \\\n    \"a\" \"配置物理机显卡直通支持。\" \\\n    \"b\" \"配置显卡直通给虚拟机。\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n    a )\n        enVideo\n        ;;\n    b )\n        addVideo\n        ;;\n    esac\nelse\n    main\nfi\n}\n\n\n#--------------funcs-end----------------\n\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config PCI Passthrough:\" 25 60 15 \\\n    \"a\" \"Config IOMMU on.\" \\\n    \"b\" \"Config IOMMU off.\" \\\n    \"c\" \"Config Video Card Passthrough\" \\\n    \"d\" \"Config qm set disks.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置硬件直通:\" 25 60 15 \\\n    \"a\" \"配置开启物理机硬件直通支持。\" \\\n    \"b\" \"配置关闭物理机硬件直通支持。\" \\\n    \"c\" \"配置显卡直通。\" \\\n    \"d\" \"配置qm set 硬盘给虚拟机。\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n    a )\n        enablePass\n        ;;\n    b )\n        disablePass\n        ;;\n    c )\n        configVideo\n        ;;\n    d )\n        chQmdisk\n    esac\nelse\n    main\nfi\n}\n\ncheckPath(){\n    x=$(whiptail --title \"Choose a path\" --inputbox \"\nInput path:\n请输入路径：\" 10 60 \\\n    $1 \\\n    3>&1 1>&2 2>&3)\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        while [ true ]\n        do\n            if [ ! -d $x ];then\n                whiptail --title \"Warnning\" --msgbox \"Path not found.\n没有检测到路径，请重新输入\" 10 60\n                checkPath\n            else\n                break\n            fi\n        done\n        echo $x\n        return $?\n    fi\n}\n\nchRoot(){\n    #--base-funcs-start--\n    setChroot(){\n        clear\n        if(whiptail --title \"Yes/No\" --yesno \"\nContinue?\n是否继续？\" --defaultno 10 60 )then\n            if [ ! -f \"/usr/bin/schroot\" ];then\n                whiptail --title \"Warnning\" --msgbox \"you not installed schroot.\n您还没有安装schroot。\" 10 60\n                if [ `ps aux|grep apt-get|wc -l` -gt 1 ];then\n                    if(whiptail --title \"Yes/No\" --yesno \"apt-get is running,killit and install schroot?\n后台有apt-get正在运行，是否杀掉进行安装？\n                    \" 10 60);then\n                        killall apt-get && apt-get -y install schroot\n                    else\n                        setChroot\n                    fi\n                else\n                    apt-get -y install schroot\n                fi\n            fi\n            sed '/^$/d' /etc/schroot/default/fstab\n            if [ `grep '\\/run\\/udev' /etc/schroot/default/fstab|wc -l` = 0 ];then\n                cat << EOF >> /etc/schroot/default/fstab\n/run/udev       /run/udev       none    rw,bind         0       0\nEOF\n            fi\n            if [ `grep '\\/sys\\/fs\\/cgroup' /etc/schroot/default/fstab|wc -l` = 0 ];then\n                sed '/cgroup/d' /etc/schroot/default/fstab\n                cat << EOF >> /etc/schroot/default/fstab\n/sys/fs/cgroup  /sys/fs/cgroup  none    rw,rbind        0       0\nEOF\n            fi\n            sed -i '/\\/home/d' /etc/schroot/default/fstab\n            checkPath /\n            chrootp=${x%/}\"/alpine\"\n            echo $chrootp > /etc/schroot/chrootp\n            if [ ! -d $chrootp ];then\n                mkdir $chrootp\n            else\n                clear\n            fi\n            cd $chrootp\n            if [ `ls $chrootp/bin|wc -l` -gt 0 ];then\n                if(whiptail --title \"Warnning\" --yesno \"files exist, remove and reinstall?\n已经存在文件，是否清空重装？\" --defaultno 10 60)then\n                    for i in `schroot --list --all-sessions|awk -F \":\" '{print $2}'`;do schroot -e -c $i;done\n                    killall dockerd\n                    killall portainer\n                    rm -rf $chrootp/*\n                else\n                    configChroot\n                fi\n            fi\n            if [ $L = \"en\" ];then\n                alpineUrl='http://dl-cdn.alpinelinux.org/alpine/v3.10/releases/x86_64'\n            else\n                #alpineUrl='https://mirrors.aliyun.com/alpine/v3.10/releases/x86_64'\n                #change url\n                alpineUrl='https://mirrors.ustc.edu.cn/alpine/v3.10/releases/x86_64/'\n            fi\n            version=`wget $alpineUrl/ -q -O -|grep minirootfs|grep -o '[0-9]*\\.[0-9]*\\.[0-9]*'|sort -u -r|awk 'NR==1{print $1}'`\n            echo $alpineUrl\n            echo $version\n            sleep 3\n            wget -c --timeout 15 --waitretry 5 --tries 5 $alpineUrl/alpine-minirootfs-$version-x86_64.tar.gz\n            tar -xvzf alpine-minirootfs-$version-x86_64.tar.gz\n            rm -rf alpine-minirootfs-$version-x86_64.tar.gz\n            if [ ! -f \"/etc/schroot/chroot.d/alpine.conf\" ] || [ `cat /etc/schroot/chroot.d/alpine.conf|wc -l` -lt 8 ];then\n                cat << EOF > /etc/schroot/chroot.d/alpine.conf\n[alpine]\ndescription=alpine $version\ndirectory=$chrootp\nusers=root\ngroups=root\nroot-users=root\nroot-groups=root\ntype=directory\nshell=/bin/sh\nEOF\n            fi\n            echo \"http://mirrors.aliyun.com/alpine/latest-stable/main/\" > $chrootp/etc/apk/repositories \\\n            && echo \"http://mirrors.aliyun.com/alpine/latest-stable/community/\"  >> $chrootp/etc/apk/repositories\n            cat << EOF >> $chrootp/etc/profile\necho \"Welcome to alpine $version chroot.\"\necho \"Create by PveTools.\"\necho \"Author: 龙天ivan\"\necho \"Github: https://github.com/ivanhao/pvetools\"\nEOF\n            schroot -c alpine apk update\n            whiptail --title \"Success\" --msgbox \"Done.\n安装配置完成！\" 10 60\n            docker\n            dockerWeb\n            configChroot\n        else\n            configChroot\n        fi\n    }\n    installOs(){\n        clear\n    }\n    enterChroot(){\n        clear\n        checkSchroot\n        c=`schroot -l|awk -F \":\" '{print $2\"  \"$1}'`\n        if [ $L = \"en\" ];then\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Enter chroot:\" 25 60 15 \\\n            $(echo $c) \\\n            3>&1 1>&2 2>&3)\n        else\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"进入chroot环境:\" 25 60 15 \\\n            $(echo $c) \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            if [ $x ];then\n                schroot -c $x -d /root\n            else\n                chRoot\n            fi\n        else\n            chRoot\n        fi\n    }\n    docker(){\n        clear\n        checkSchroot\n        if [ `schroot -c alpine -d /root ls /usr/bin|grep docker|wc -l` = 0 ];then\n            if(whiptail --title \"Warnning\" --yesno \"No docker found.Install?\n您还没有安装docker,是否安装？\" 10 60)then\n                schroot -c alpine -d /root apk update\n                schroot -c alpine -d /root apk add docker\n                cat << EOF >> $chrootp/etc/profile\nexport DOCKER_RAMDISK=true\necho \"Docker installed.\"\nfor i in {1..10}\ndo\nif [ \\`ps aux|grep dockerd|wc -l\\` -gt 1 ];then\n    break\nelse\n    nohup /usr/bin/dockerd > /dev/null 2>&1 &\nfi\ndone\nEOF\n                if [ ! -d \"$chrootp/etc/docker\" ];then\n                    mkdir $chrootp/etc/docker\n                fi\n                if [ $L = \"en\" ];then\n                    cat << EOF > $chrootp/etc/docker/daemon.json\n{\n    \"registry-mirrors\": [\n        \"https://dockerhub.azk8s.cn\",\n        \"https://reg-mirror.qiniu.com\",\n        \"https://registry.docker-cn.com\"\n    ]\n}\nEOF\n                fi\n            else\n                configChroot\n            fi\n        fi\n        if [ -f \"/usr/bin/screen\" ];then\n            apt-get install screen -y\n        fi\n        if [ `screen -ls|grep docker|wc -l` != 0 ];then\n            screen -S docker -X quit\n        fi\n        if(whiptail --title \"Yes/No\" --yesno \"Install portainer web interface?\n是否安装web界面（portainer）？\" 10 60);then\n            dockerWeb\n        else\n            clear\n        fi\n        screen -dmS docker schroot -c alpine -d /root\n        configChroot\n    }\n    dockerWeb(){\n        checkSchroot\n        checkDocker\n        checkDockerWeb\n        if [ `cat $chrootp/etc/profile|grep portainer|wc -l` = 0 ];then\n            cat << EOF >> $chrootp/etc/profile\nif [ ! -d \"/root/portainer_data\" ];then\n    mkdir /root/portainer_data\nfi\nif [ \\`docker ps -a|grep portainer|wc -l\\` = 0 ];then\n    docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /root/portainer_data:/data portainer/portainer\nelse\n    docker start portainer > /dev/null\nfi\necho \"Portainer installed.\"\nEOF\n        fi\n\n        if [ ! -f \"/usr/bin/screen\" ];then\n            apt-get install screen -y\n        fi\n        chrootReDaemon\n        sleep 5\n        if [ `schroot -c alpine -d /root docker images|grep portainer|wc -l` = 0 ];then\n            schroot -c alpine -d /root docker pull portainer/portainer\n        fi\n        if [ `schroot -c alpine -d /root docker ps -a|grep portainer|wc -l` = 0 ];then\n            schroot -c alpine -d /root docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /root/portainer_data:/data portainer/portainer\n        fi\n        checkDockerWeb\n    }\n    checkSchroot(){\n        if [ `ls /usr/bin|grep schroot|wc -l` = 0 ] || [ `schroot -l|wc -l` = 0 ];then\n            whiptail --title \"Warnning\" --msgbox \"No schroot found.Install schroot first.\n您还没有安装schroot环境，请先安装。\" 10 60\n            chRoot\n        else\n            if [ -f \"/etc/schroot/chrootp\" ];then\n                chrootp=`cat /etc/schroot/chrootp`\n            else\n                if [ -d \"/alpine\" ];then\n                    chrootp=\"/alpine\"\n                    echo $chrootp > /etc/schroot/chrootp\n                else\n                    whiptail --title \"Warnning\" --msgbox \"Chroot path not found!\n没有检测到chroot安装目录！\" 10 60\n                fi\n            fi\n        fi\n    }\n    checkDocker(){\n        if [ `ls $chrootp/usr/bin|grep docker|wc -l` = 0 ];then\n            whiptail --title \"Warnning\" --msgbox \"No docker found.Install docker first.\n您还没有安装docker环境，请先安装。\" 10 60\n            chRoot\n        fi\n    }\n    checkDockerWeb(){\n        if [ `schroot -c alpine -d /root docker images|grep portainer|wc -l` != 0 ];then\n            whiptail --title \"Warnning\" --msgbox \"DockerWeb found.Quit.\n您已经安装dockerWeb环境。\n请进入http://ip:9000使用。\n\" 10 60\n            chRoot\n        fi\n    }\n    chrootReDaemon(){\n        if [ `screen -ls|grep docker|wc -l` != 0 ];then\n            for i in `screen -ls|grep docker|awk -F \" \" '{print $1}'|awk -F \".\" '{print $1}'`\n            do\n                screen -S $i -X quit\n            done\n        fi\n        screen -dmS docker schroot -c alpine -d /root\n        if [ `cat /etc/crontab|grep schroot|wc -l` = 0 ];then\n            cat << EOF >> /etc/crontab\n@reboot  root  screen -dmS docker schroot -c alpine -d /root\nEOF\n        fi\n        whiptail --title \"Success\" --msgbox \"Chroot daemon done.\" 10 60\n    }\n    checkChrootDaemon(){\n        if [ `screen -ls|grep docker|wc -l` = 0 ];then\n            screen -dmS docker schroot -c alpine -d /root\n            if [ `screen -ls|grep docker|wc -l` != 0 ];then\n                whiptail --title \"Warnning\" --msgbox \"Chroot daemon started.\n已经为您开启chroot后台运行环境。\n                \" 10 60\n                chRoot\n            else\n                checkChrootDaemon\n            fi\n        else\n            if(whiptail --title \"Warnning\" --yesno \"Chroot daemon already runngin.Restart?\nchroot后台运行环境已经运行，需要重启吗？\n                \" --defaultno 10 60)then\n                chrootReDaemon\n                checkChrootDaemon\n            else\n                chRoot\n            fi\n        fi\n        chRoot\n    }\n    configChroot(){\n        if [ $L = \"en\" ];then\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config chroot & docker etc:\" 25 60 15 \\\n            \"a\" \"Config base schroot.\" \\\n            \"b\" \"Docker in alpine\" \\\n            \"c\" \"Portainer in alpine\" \\\n            \"d\" \"Change chroot path\" \\\n            3>&1 1>&2 2>&3)\n        else\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置chroot环境和docker等:\" 25 60 15 \\\n            \"a\" \"配置基本的chroot环境（schroot 默认为alpine)。\" \\\n            \"b\" \"Docker（alpine）。\" \\\n            \"c\" \"Docker配置界面（portainer in alpine）。\" \\\n            \"d\" \"迁移chroot目录到其他路径。\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$x\" in\n            a )\n                setChroot\n                ;;\n            b )\n                docker\n                #whiptail --title \"Warnning\" --msgbox \"Not supported.\" 10 60\n                chroot\n                ;;\n            c )\n                dockerWeb\n                chRoot\n                ;;\n            d )\n                mvChrootp\n            esac\n        else\n            chRoot\n        fi\n    }\n    mvChrootp(){\n        if (whiptail --title \"Yes/No\" --yesno \"Continue?\n是否继续?\" --defaultno 10 60)then\n            checkSchroot\n            chrootpNew=$(whiptail --title \"Choose a path\" --inputbox \"\nCurrent Path:\n当前路径：\n$(echo $chrootp)\n---------------------------------\nInput new chroot path:\n请输入迁移的新路径：\" 20 60 \\\n\"\" \\\n        3>&1 1>&2 2>&3)\n            exitstatus=$?\n            if [ $exitstatus = 0 ]; then\n                while [ true ]\n                do\n                    if [ ! -d $chrootpNew ];then\n                        whiptail --title \"Warnning\" --msgbox \"Path not found.\n没有检测到路径，请重新输入\" 10 60\n                        mvChrootp\n                    else\n                        break\n                    fi\n                done\n                chrootpNew=${chrootpNew%/}\"/alpine\"\n                echo $chrootpNew > /etc/schroot/chrootp\n                for i in `schroot --list --all-sessions|awk -F \":\" '{print $2}'`;do schroot -e -c $i;done\n                if [ -d \"$chrootp/sys/fs/cgroup\" ];then\n                    mount --make-rslave $chrootp/sys/fs/cgroup\n                    umount -R $chrootp/sys/fs/cgroup\n                fi\n                killall portainer\n                killall dockerd\n                rsync -a -r -v $chrootp\"/\" $chrootpNew\n                sync\n                sync\n                sleep 3\n                rm -rf $chrootp\n                sed -i 's#'$chrootp'#'$chrootpNew'#g' /etc/schroot/chroot.d/alpine.conf\n                whiptail --title \"Success\" --msgbox \"Done.\n    迁移成功\" 10 60\n                checkChrootDaemon\n            else\n                configChroot\n            fi\n        else\n            chRoot\n        fi\n    }\n    delChroot(){\n        if (whiptail --title \"Yes/No\" --yesno \"Continue?\n是否继续?\" --defaultno 10 60)then\n            checkSchroot\n            for i in `schroot --list --all-sessions|awk -F \":\" '{print $2}'`;do schroot -e -c $i;done\n            apt-get -y autoremove schroot debootstrap\n            if [ -d \"$chrootp/sys/fs/cgroup\" ];then\n                mount --make-rslave $chrootp/sys/fs/cgroup\n                umount -R $chrootp/sys/fs/cgroup\n            fi\n            killall portainer\n            killall dockerd\n            rm -rf $chrootp\n            whiptail --title \"Success\" --msgbox \"Done.\n    删除成功\" 10 60\n        else\n            chRoot\n        fi\n    }\n    #--base-funcs-end--\nif [ $L = \"en\" ];then\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config chroot & docker etc:\" 25 60 15 \\\n    \"a\" \"Install & config base schroot.\" \\\n    \"b\" \"Enter chroot.\" \\\n    \"c\" \"Chroot daemon manager\" \\\n    \"d\" \"Remove all chroot.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置chroot环境和docker等:\" 25 60 15 \\\n    \"a\" \"安装配置基本的chroot环境（schroot 默认为alpine)。\" \\\n    \"b\" \"进入chroot。\" \\\n    \"c\" \"Chroot后台管理。\" \\\n    \"d\" \"彻底删除chroot。\" \\\n    3>&1 1>&2 2>&3)\nfi\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$x\" in\n    a )\n        configChroot\n        ;;\n    b )\n        enterChroot\n        ;;\n    c )\n        checkChrootDaemon\n        ;;\n    d )\n        delChroot\nesac\nelse\n    main\nfi\n\n}\n\n#--qm set <ide,scsi,sata> disk\nchQmdisk(){\n    clear\n    confDisk(){\n        list=`qm list|awk 'NR>1{print $1\":\"$2\"..................\"$3\" \"}'`\n        echo -n \"\">lsvm\n        ls=`for i in $list;do echo $i|awk -F \":\" '{print $1\" \"$2}'>>lsvm;done`\n        ls=`cat lsvm`\n        rm lsvm\n        h=`echo $ls|wc -l`\n        let h=$h*1\n        if [ $h -lt 30 ];then\n            h=30\n        fi\n        list1=`echo $list|awk 'NR>1{print $1}'`\n        vmid=$(whiptail  --title \" PveTools   Version : 2.4.0 \" --menu \"\nChoose vmid to set disk:\n选择需要配置硬盘的vm：\" 20 60 10 \\\n        $(echo $ls) \\\n        3>&1 1>&2 2>&3)\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            if(whiptail --title \"Yes/No\" --yesno \"\nyou choose: $vmid ,continue?\n你选的是：$vmid ，是否继续?\n                \" 10 60)then\n                while [ true ]\n                do\n                    if [ `echo \"$vmid\"|grep \"^[0-9]*$\"|wc -l` = 0 ];then\n                        whiptail --title \"Warnning\" --msgbox \"\n输入格式错误，请重新输入：\n                        \" 10 60\n                        chQmdisk\n                    else\n                        break\n                    fi\n                done\n                if [ $1 = 'add' ];then\n                    #disks=`ls -alh /dev/disk/by-id|awk '{print $11\" \"$9\" OFF\"}'|awk -F \"/\" '{print $3}'|sed '/^$/d'|sed '/wwn/d'|sed '/^dm/d'|sed '/lvm/d'`\n                    #added=`cat /etc/pve/qemu-server/$vmid.conf|grep -E '^ide[0-9]|^scsi[0-9]|^sata[0-9]'|awk -F \":\" '{print $1\" \"$2$3\"\\r\\n\"}'`\n                    disks=`ls -alh /dev/disk/by-id|sed '/\\.$/d'|sed '/^$/d'|awk 'NR>1{print $9\" \"$11\" OFF\"}'|sed 's/\\.\\.\\///g'|sed '/wwn/d'|sed '/^dm/d'|sed '/lvm/d'|sed '/nvme-nvme/d'`\n                    d=$(whiptail --title \" PveTools Version : 2.4.0 \" --checklist \"\ndisk list:\n已添加的硬盘:\n$(cat /etc/pve/qemu-server/$vmid.conf|grep -E '^ide[0-9]|^scsi[0-9]|^sata[0-9]'|awk -F \":\" '{print $1\" \"$2\" \"$3}')\n-----------------------\nChoose disk:\n选择硬盘：\" 30 90 10 \\\n                    $(echo $disks) \\\n                    3>&1 1>&2 2>&3)\n                    exitstatus=$?\n                    t=$(whiptail --title \" PveTools Version : 2.4.0 \" --menu \"\nChoose disk type:\n选择硬盘接口类型：\" 20 60 10 \\\n                    \"sata\" \"vm sata type\" \\\n                    \"scsi\" \"vm scsi type\" \\\n                    \"ide\" \"vm ide type\" \\\n                    3>&1 1>&2 2>&3)\n                    exits=$?\n                    if [ $exitstatus = 0 ] && [ $exits = 0 ]; then\n                        did=`qm config $vmid|sed -n '/^'$t'/p'|awk -F ':' '{print $1}'|sort -u -r|grep '[0-9]*$' -o|awk 'NR==1{print $0}'`\n                        if [ $did ];then\n                            did=$((did+1))\n                        else\n                            did=0\n                        fi\n                        #d=`ls -alh /dev/disk/by-id|grep $d|awk 'NR==1{print $9}'`\n                        d=`echo $d|sed 's/\\\"//g'`\n                        for i in $d\n                        do\n                            if [ `cat /etc/pve/qemu-server/$vmid.conf|grep $i|wc -l` = 0 ];then\n                                #if [ $t = \"ide\" ] && [ `echo $i|grep \"nvme\"|wc -l` -gt 0 ];then\n                                if [ $t = \"ide\" ] && [ $did -gt 3 ];then\n                                    whiptail --title \"Warnning\" --msgbox \"ide is greate then 3.\nide的类型已经超过3个,请重选其他类型!\" 10 60\n                                else\n                                    qm set $vmid --$t$did /dev/disk/by-id/$i\n                                fi\n                                sleep 1\n                                did=$((did+1))\n                            fi\n                        done\n                        whiptail --title \"Success\" --msgbox \"Done.\n配置完成\" 10 60\n                        chQmdisk\n                    else\n                        chQmdisk\n                    fi\n                fi\n                if [ $1 = 'rm' ];then\n                    disks=`qm config $vmid|grep -E '^ide[0-9]|^scsi[0-9]|^sata[0-9]'|awk -F \":\" '{print $1\" \"$2$3\" OFF\"}'`\n                    d=$(whiptail --title \" PveTools Version : 2.4.0 \" --checklist \"\nChoose disk:\n选择硬盘：\" 20 90 10 \\\n                    $(echo $disks) \\\n                    3>&1 1>&2 2>&3)\n                    exitstatus=$?\n                    if [ $exitstatus = 0 ]; then\n                        for i in $d\n                        do\n                            i=`echo $i|sed 's/\\\"//g'`\n                            qm set $vmid --delete $i\n                        done\n                        whiptail --title \"Success\" --msgbox \"Done.\n配置完成\" 10 60\n                        chQmdisk\n                    else\n                        chQmdisk\n                    fi\n                fi\n            else\n                chQmdisk\n            fi\n        fi\n\n    }\n    if [ $L = \"en\" ];then\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Config qm set disks:\" 25 60 15 \\\n        \"a\" \"set disk to vm.\" \\\n        \"b\" \"unset disk to vm.\" \\\n        3>&1 1>&2 2>&3)\n    else\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"配置qm set 物理硬盘给虚拟机:\" 25 60 15 \\\n        \"a\" \"添加硬盘给虚拟机。\" \\\n        \"b\" \"删除虚拟机里的硬盘。\" \\\n        3>&1 1>&2 2>&3)\n    fi\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        case \"$x\" in\n        a )\n            clear\n            confDisk add\n            ;;\n        b )\n            clear\n            confDisk rm\n        esac\n    fi\n}\n\n\nmanyTools(){\n    clear\n    nMap(){\n        clear\n        if [ ! -f \"/usr/bin/nmap\" ];then\n            apt-get install nmap -y\n        fi\n        map=$(whiptail --title \"nmap tools.\" --inputbox \"\nInput the Ip address.(192.168.1.0/24)\n输入局域网ip地址段。（例子：192.168.1.0/24)\n        \" 10 60 \\\n        \"\" \\\n        3>&1 1>&2 2>&3)\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            while [ true ]\n            do\n                if [ ! `echo $map|grep \"^[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\\/[0-9]*$\"` ];then\n                    whiptail --title \"Warnning\" --msgbox \"\nWrong format!!!   input again:\n格式不对！！！请重新输入：\n                    \" 10 60\n                    nMap\n                else\n                    break\n                fi\n            done\n            maps=`nmap -sP $map`\n            whiptail --title \"nmap tools.\" --msgbox \"\n$maps\n            \" --scrolltext 30 60\n        else\n            manyTools\n        fi\n    }\n    setDns(){\n        clear\n        dname=`cat /etc/resolv.conf|grep 'nameserver'`\n        if [ `cat /etc/resolv.conf|grep 'nameserver'|wc -l` != 0 ];then\n            if [ $L = \"en\" ];then\n                d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"DNS - Many Tools:\nDetect exist nameserver,Please choose:\n                \" 25 60 15 \\\n                \"a\" \"Add nameserver.\" \\\n                \"b\" \"Replace nameserver.\" \\\n                3>&1 1>&2 2>&3)\n            else\n                d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"DNS - 常用的工具:\n检测到已经配置有dns服务器: \\\n$(for i in $dname;do echo $i ;done)  \\\n------------------------------ \\\n请选择以下操作：\n                \" 25 60 15 \\\n                \"a\" \"添加dns.\" \\\n                \"b\" \"替换dns.\" \\\n                3>&1 1>&2 2>&3)\n            fi\n            exitstatus=$?\n            if [ $exitstatus != 0 ]; then\n                manyTools\n            fi\n        fi\n        if [ $L = \"en\" ];then\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"DNS - Many Tools:\" 25 60 15 \\\n            \"a\" \"8.8.8.8(google).\" \\\n            \"b\" \"223.5.5.5(alidns).\" \\\n            3>&1 1>&2 2>&3)\n        else\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"DNS - 常用的工具:\" 25 60 15 \\\n            \"a\" \"8.8.8.8(谷歌).\" \\\n            \"b\" \"223.5.5.5(阿里).\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$x\" in\n            a )\n                dn=\"8.8.8.8\"\n                case \"$d\" in\n                    b )\n                        echo \"nameserver    8.8.8.8\" > /etc/resolv.conf\n                esac\n                echo \"nameserver    8.8.8.8\" >> /etc/resolv.conf\n                ;;\n            b )\n                dn=\"223.5.5.5\"\n                case \"$d\" in\n                    b )\n                        echo \"nameserver    223.5.5.5\" > /etc/resolv.conf\n                esac\n                echo \"nameserver    223.5.5.5\" >> /etc/resolv.conf\n                ;;\n            esac\n            if [ `cat /etc/resolv.conf | grep ${dn}|wc -l` != 0 ];then\n                whiptail --title \"Success\" --msgbox \"Done.\n配置完成。\"  10 60\n                manyTools\n            else\n                whiptail --title \"Warnning\" --msgbox \"Unsuccess.Please retry.\n配置未成功。请重试。\"  10 60\n                setDns\n            fi\n        else\n            manyTools\n        fi\n    }\n    freeMemory(){\n        clear\n        if(whiptail --title \"Free memory\" --yesno \"Free memory?\n释放内存？\" 10 60 );then\n            sync\n            sync\n            sync\n            echo 3 > /proc/sys/vm/drop_caches\n            echo 0 > /proc/sys/vm/drop_caches\n            whiptail --title \"Success\" --msgbox \"Done.\" 10 60\n        else\n            manyTools\n        fi\n    }\n    speedTest(){\n        op=`pwd`\n        cd ~\n        git clone https://github.com/sivel/speedtest-cli.git\n        chmod +x ~/speedtest-cli/speedtest.py\n        python ~/speedtest-cli/speedtest.py\n        echo \"Enter to continue.\"\n        cd $op\n        read x\n    }\n    bbr(){\n        op=`pwd`\n        if [ ! -d \"/opt/bbr\" ];then\n            mkdir /opt/bbr\n        fi\n        cp ./plugins/tcp.sh /opt/bbr\n        cd /opt/bbr\n        ./tcp.sh\n        cd $op\n    }\n    v2ray(){\n        op=`pwd`\n        cd ~\n        git clone https://github.com/ivanhao/ivan-v2ray\n        chmod +x ~/ivan-v2ray/install.sh\n        ~/ivan-v2ray/install.sh\n        echo \"Enter to continue.\"\n        cd $op\n        read x\n    }\n    darkMode(){\n        if [ $L = \"en\" ];then\n            d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"DarkMode - Many Tools:\n            \" 25 60 15 \\\n            \"a\" \"Install.\" \\\n            \"b\" \"Uninstall.\" \\\n            3>&1 1>&2 2>&3)\n        else\n#----------------- 请选择以下操作：----------------- \\\n            d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"界面黑暗模式 - 常用的工具:\n            \" 25 60 15 \\\n            \"a\" \"安装.\" \\\n            \"b\" \"卸载.\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$d\" in\n            a )\n                if(whiptail --title \"DarkMode\" --yesno \"install DarkMode?\n        安装黑暗模式界面？\" 10 60 );then\n                    wget https://gitee.com/ivanhao1984/PVEDiscordDark/raw/master/install.sh -O - | bash\n                    whiptail --title \"Success\" --msgbox \"Done. \\\n配置完成\" 10 60\n                fi\n                ;;\n            b )\n                if(whiptail --title \"DarkMode\" --yesno \"uninstall DarkMode?\n        卸载黑暗模式界面？\" 10 60 );then\n                    wget https://gitee.com/ivanhao1984/PVEDiscordDark/raw/master/uninstall.sh -O - | bash\n                    whiptail --title \"Success\" --msgbox \"Done. \\\n配置完成\" 10 60\n                fi\n                ;;\n            esac\n        fi\n        manyTools\n    }\n    vbios(){\n        echo \"...\"\n        if(whiptail --title \"vbios tools\" --yesno \"get vbios?\n提取显卡？\" 10 60 );then\n            cd ..\n            git clone https://github.com/ivanhao/envytools\n            cd envytools\n            apt-get install cmake flex libpciaccess-dev bison libx11-dev libxext-dev libxml2-dev libvdpau-dev python3-dev cython3 pkg-config\n            cmake .\n            make\n            make install\n            nvagetbios -s prom > vbios.bin\n            cd ..\n            git clone https://github.com/awilliam/rom-parser\n            cd rom-parser\n            make\n            ./rom-parser ../envytools/vbios.bin\n            sleep 5\n            if [ `rom-parser ../envytools/vbios.bin|grep Error|wc -l` = 0 ];then\n                cp ../envytools/vbios.bin /usr/share/kvm/\n                whiptail --title \"Success\" --msgbox \"Done.see vbios in '/usr/share/kvm/vbios.bin'\n提取显卡vbios成功，文件在'/usr/share/kvm/vbios.bin',可以直接在配置文件中添加romfile=vbios.bin\" 10 60\n            else\n                whiptail --title \"Warnning\" --msgbox \"Room parse error.\n提取显卡vbios失败。\" 10 60\n            fi\n\n        fi\n        manyTools\n\n    }\n    folder2ram(){\n        if [ $L = \"en\" ];then\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"folder2ram:\" 25 60 15 \\\n            \"a\" \"install\" \\\n            \"b\" \"Uninstall\" \\\n            3>&1 1>&2 2>&3)\n        else\n            x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"USB设备做为系统盘的优化:\" 25 60 15 \\\n            \"a\" \"安装。\" \\\n            \"b\" \"卸载。\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$x\" in\n            a )\n                if(whiptail --title \"vbios tools\" --yesno \"install folder2ram to optimaz USB OS storage?\n        安装USB设备做为系统盘的优化？\" 10 60 );then\n                    wget https://raw.githubusercontent.com/ivanhao/pve-folder2ram/master/install.sh -O -| bash\n                    whiptail --title \"Success\" --msgbox \"Done. \\\n配置完成\" 10 60\n                fi\n                ;;\n            b )\n                if(whiptail --title \"vbios tools\" --yesno \"uninstall folder2ram optimaz?\n        卸载USB设备做系统盘的优化？\" 10 60 );then\n                    wget https://raw.githubusercontent.com/ivanhao/pve-folder2ram/master/uninstall.sh -O -| bash\n                    whiptail --title \"Success\" --msgbox \"Done. \\\n配置完成\" 10 60\n                fi\n                ;;\n            esac\n        fi\n        manyTools\n    }\n\n    autoResize(){\n        if [ $L = \"en\" ];then\n            d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"autoResize ROOT partition - Many Tools:\n            \" 25 60 15 \\\n            \"a\" \"start.\" \\\n            3>&1 1>&2 2>&3)\n        else\n#----------------- 请选择以下操作：----------------- \\\n            d=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"自动扩展ROOT分区可用空间 - 常用的工具:\n            \" 25 60 15 \\\n            \"a\" \"运行.\" \\\n            3>&1 1>&2 2>&3)\n        fi\n        exitstatus=$?\n        if [ $exitstatus = 0 ]; then\n            case \"$d\" in\n            a )\n                if(whiptail --title \"autoResize\" --yesno \"run autoResize on /(only LVM partition)?\n                    是否运行自动扩展ROOT分区(LVM)可用空间？\n                    注意：zfs等非LVM分区不可使用，即便运行也不产生影响。\" 15 60 );then\n                    ./plugins/autoResize ivanhao/pvetools > ./autoResize.log 2>&1\n                    #autoResizeLog=`cat ./autoResize.log`\n                    echo \"Done.\" > ./autoResize.log\n                    echo \"配置完成。\" > ./autoResize.log\n                    whiptail --title \"Success\" --scrolltext --textbox \"./autoResize.log\" 30 60\n                    rm ./autoResize.log\n                fi\n                ;;\n            esac\n        fi\n        manyTools\n    }\n\n    if [ $L = \"en\" ];then\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Many Tools:\" 25 60 15 \\\n        \"a\" \"Local network scans(nmap).\" \\\n        \"b\" \"Set DNS.\" \\\n        \"c\" \"Free Memory.\" \\\n        \"d\" \"net speedtest\" \\\n        \"e\" \"bbr\\\\bbr+\" \\\n        \"f\" \"config v2ray\" \\\n        \"g\" \"Nvida Video Card vbios\" \\\n        \"h\" \"folder2ram\" \\\n        \"i\" \"DarkMode\" \\\n        \"j\" \"autoResize ROOT partition\" \\\n        3>&1 1>&2 2>&3)\n    else\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"常用的工具:\" 25 60 15 \\\n        \"a\" \"局域网扫描。\" \\\n        \"b\" \"配置DNS。\" \\\n        \"c\" \"释放内存。\" \\\n        \"d\" \"speedtest测速\" \\\n        \"e\" \"安装bbr\\\\bbr+\" \\\n        \"f\" \"配置v2ray\" \\\n        \"g\" \"显(N)卡vbios提取\" \\\n        \"h\" \"USB设备做为系统盘的优化\" \\\n        \"i\" \"黑暗模式界面\" \\\n        \"j\" \"自动扩展ROOT分区可用空间\" \\\n        3>&1 1>&2 2>&3)\n    fi\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        case \"$x\" in\n        a )\n            nMap\n            ;;\n        b )\n            setDns\n            ;;\n        c )\n            freeMemory\n            ;;\n        d )\n            speedTest\n            ;;\n        e )\n            bbr\n            ;;\n        f )\n            v2ray\n            ;;\n        g )\n            vbios\n            ;;\n        h|H )\n            folder2ram\n            ;;\n        i|I )\n            darkMode\n            ;;\n        j|J )\n            autoResize\n            ;;\n        esac\n    fi\n\n}\nchNFS(){\n    if [ $L = \"en\" ];then\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"NFS:\" 25 60 15 \\\n        \"a\" \"Install nfs server.\" \\\n        3>&1 1>&2 2>&3)\n    else\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"NFS:\" 25 60 15 \\\n        \"a\" \"安装NFS服务器。\" \\\n        3>&1 1>&2 2>&3)\n    fi\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        case \"$x\" in\n        a )\n            if(whiptail --title \"Yes/No\" --yesno \"Comfirm?\n是否安装？\" 10 60)then\n                apt-get install nfs-kernel-server\n                whiptail --title \"OK\" --msgbox \"Complete.If you use zfs use 'zfs set sharenfs=on <zpool> to enable NFS.'\n安装配置完成。如果你使用zfs，执行'zfs set sharenfs=on <zpool>来开启NFS。\" 10 60\n            else\n                chNFS\n            fi\n            ;;\n        esac\n    fi\n\n\n}\nsambaOrNfs(){\n    if [ $L = \"en\" ];then\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Samba or NFS:\" 25 60 15 \\\n        \"a\" \"samba.\" \\\n        \"b\" \"NFS\" \\\n        3>&1 1>&2 2>&3)\n    else\n        x=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"Samba or NFS:\" 25 60 15 \\\n        \"a\" \"samba.\" \\\n        \"b\" \"NFS\" \\\n        3>&1 1>&2 2>&3)\n    fi\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        case \"$x\" in\n        a )\n            chSamba\n            ;;\n        b )\n            chNFS\n        esac\n    fi\n\n\n}\n\nomvInPve(){\n    if(whiptail --title \"Yes/No\" --yesno \"Install omv in proxmox ve directlly?\n将要在proxmox ve中直接安装omv,请确认是否继续：\" 10 60);then\n        if [ -f \"/usr/sbin/omv-engined\" ];then\n            if(whiptail --title \"Yes/No\" --yesno \"Already installed omv in proxmox ve.Reinstall?\n已经检测到安装了omv,请确认是否重装？\" 10 60);then\n                echo \"reinstalling...\"\n            else\n                main\n            fi\n        fi\n        apt-get -y install git\n        cd ~\n        git clone https://github.com/ivanhao/omvinpve\n        cd omvinpve\n        ./OmvInPve.sh\n        main\n    else\n        main\n    fi\n}\n\n\n\nConfBackInstall(){\n    path(){\nx=$(whiptail --title \"config path\" --inputbox \"Input backup path:\n输入备份路径:\" 10 60 3>&1 1>&2 2>&3)\nexitstatus=$?\nif [ $exitstatus = 0 ];then\n    if [ ! -d $x ];then\n        whiptail --title \"Warnning\" --msgbox \"Path not found.\" 10 60\n        path\n    fi\nelse\n    main\nfi\n    }\n    count(){\ny=$(whiptail --title \"config backup number\" --inputbox \"Input backup last number:\n输入保留备份数量:\" 10 60 3>&1 1>&2 2>&3)\nexitstatus=$?\nif [ $exitstatus = 0 ];then\n    if [ ! `echo $y|grep '^[0-9]$'` ];then\n        whiptail --title \"warnning\" --msgbox \"Invalid content,retry!\" 10 60\n        count\n    fi\nelse\n    main\nfi\n    }\n    path\n    count\n    x=$x'/pveConfBackup'\n    if [ ! -d $x ];then\n        mkdir $x\n    fi\n    if [ ! -d $x/`date '+%Y%m%d'` ];then\n        mkdir $x/`date '+%Y%m%d'`\n    fi\n    cp -rf /etc/pve/qemu-server/* $x/`date '+%Y%m%d'`/\n    d=`ls -l $x|awk 'NR>1{print $9}'|wc -l`\n    while [ $d -gt $y ]\n    do\n        rm -rf $x'/'`ls -l $x|awk 'NR>1{print $9}'|head -n 1`\n        d=`ls -l $x|awk 'NR>1{print $9}'|wc -l`\n    done\n    cat << EOF > /usr/bin/pveConfBackup\n#!/bin/bash\nx='$x'\ny=$y\nif [ ! -d $x/`date '+%Y%m%d'` ];then\n    mkdir $x/`date '+%Y%m%d'`\nfi\ncp -r /etc/pve/qemu-server/* $x/\\`date '+%Y%m%d'\\`/\nd=\\`ls -l $x|awk 'NR>1{print \\$9}'|wc -l\\`\nwhile [ \\$d -gt \\$y ]\ndo\n    rm -rf $x/\\`ls -l $x|awk 'NR>1{print \\$9}'|head -n 1\\`\n    d=\\`ls -l $x|awk 'NR>1{print \\$9}'|wc -l\\`\ndone\nEOF\n    chmod +x /usr/bin/pveConfBackup\n    sed -i '/pveConfBackup/d' /etc/crontab\n    echo \"0  0  *  *  *  root  /usr/bin/pveConfBackup\" >> /etc/crontab\n    systemctl restart cron\n    whiptail --title \"success\" --msgbox \"Install complete.\" 10 60\n    main\n}\nConfBackUninstall(){\n    if [ `cat /etc/crontab|grep pveConfBackup|wc -l` -gt 0 ];then\n        sed -i '/pveConfBackup/d' /etc/crontab\n        rm -rf /usr/bin/pveConfBackup\n        whiptail --title \"success\" --msgbox \"Uninstall complete.\" 10 60\n    else\n        whiptail --title \"warnning\" --msgbox \"No installration found.\" 10 60\n    fi\n    main\n}\nConfBack(){\nOPTION=$(whiptail --title \" pve vm config backup \" --menu \"\nauto backup /etc/pve/qemu-server path's conf files.\n自动备份/etc/pve/qemu-server路径下的conf文件\nSelect: \" 25 60 15 \\\n    \"a\" \"Install. 安装\" \\\n    \"b\" \"Uninstall. 卸载\" \\\n3>&1 1>&2 2>&3)\nexitstatus=$?\nif [ $exitstatus = 0 ]; then\n    case \"$OPTION\" in\na | A )\n        ConfBackInstall\n        ;;\nb | B)\n        ConfBackUninstall\n        ;;\n* )\n        ConfBack\n    esac\nfi\n}\n#----------------------functions--end------------------#\n\n\n#--------------------------function-main-------------------------#\n#    \"a\" \"无脑模式\" \\\n          #  a )\n          #      if (whiptail --title \"Test Yes/No Box\" --yesno \"Choose between Yes and No.\" 10 60) then\n          #          whiptail --title \"OK\" --msgbox \"OK\" 10 60\n          #      else\n          #          whiptail --title \"OK\" --msgbox \"OK\" 10 60\n          #      fi\n          #      sleep 3\n          #      main\n          #      ;;\n          #  b )\n          #      echo \"b\"\n          #      ;;\n          #  c )\n          #      echo \"c\"\n          #      ;;\n\nmain(){\nclear\nif [ $L = \"en\" ];then\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"\nGithub: https://github.com/ivanhao/pvetools\nPlease choose:\" 25 60 15 \\\n    \"b\" \"Config apt source(change to ustc.edu.cn and so on).\" \\\n    \"c\" \"Install & config samba or NFS.\" \\\n    \"d\" \"Install mailutils and config root email.\" \\\n    \"e\" \"Config zfs_arc_max & Install zfs-zed.\" \\\n    \"f\" \"Install & config VIM.\" \\\n    \"g\" \"Install cpufrequtils to save power.\" \\\n    \"h\" \"Config hard disks to spindown.\" \\\n    \"i\" \"Config PCI hardware pass-thrugh.\" \\\n    \"j\" \"Config web interface to display sensors and CPU Freq.\" \\\n    \"k\" \"Config enable Nested virtualization.\" \\\n    \"l\" \"Remove subscribe notice.\" \\\n    \"m\" \"Config chroot & docker etc.\" \\\n    \"n\" \"Many tools.\" \\\n    \"p\" \"Auto backup vm conf file.\" \\\n    \"u\" \"Upgrade this script to new version.\" \\\n    \"L\" \"Change Language.\" \\\n    3>&1 1>&2 2>&3)\nelse\n    OPTION=$(whiptail --title \" PveTools   Version : 2.4.0 \" --menu \"\nGithub: https://github.com/ivanhao/pvetools\n请选择相应的配置：\" 25 60 15 \\\n    \"b\" \"配置apt国内源(更换为ustc.edu.cn,去除企业源等)\" \\\n    \"c\" \"安装配置samba或NFS\" \\\n    \"d\" \"安装配置root邮件通知\" \\\n    \"e\" \"安装配置zfs最大内存及zed通知\" \\\n    \"f\" \"安装配置VIM\" \\\n    \"g\" \"安装配置CPU省电\" \\\n    \"h\" \"安装配置硬盘休眠\" \\\n    \"i\" \"配置PCI硬件直通\" \\\n    \"j\" \"配置pve的web界面显示传感器温度、CPU频率\" \\\n    \"k\" \"配置开启嵌套虚拟化\" \\\n    \"l\" \"去除订阅提示\" \\\n    \"m\" \"配置chroot环境和docker等\" \\\n    \"n\" \"常用的工具\" \\\n    \"p\" \"自动备份虚拟机conf文件\" \\\n    \"u\" \"升级该pvetools脚本到最新版本\" \\\n    \"L\" \"Change Language\" \\\n    3>&1 1>&2 2>&3)\nfi\n    exitstatus=$?\n    if [ $exitstatus = 0 ]; then\n        case \"$OPTION\" in\n        a )\n            echo \"Not support!Please choose other options.\"\n            echo \"本版本已不支持无脑更新，请选择具体项目进行操作！\"\n            sleep 3\n            main\n            chSource wn\n            chSamba wn\n            chMail wn\n        #    chZfs wn\n            chVim wn\n        #    chCpu wn\n            chSpindown wn\n            chNestedV wn\n            chSubs wn\n            chSensors wn\n            echo \"Config complete!Back to main menu 5s later.\"\n            echo \"已经完成配置！5秒后返回主界面。\"\n            echo \"5\"\n            sleep 1\n            echo \"4\"\n            sleep 1\n            echo \"3\"\n            sleep 1\n            echo \"2\"\n            sleep 1\n            echo \"1\"\n            sleep 1\n            main\n            ;;\n        b )\n            chSource\n            main\n            ;;\n        c )\n            sambaOrNfs\n            main\n            ;;\n        d )\n            chMail\n            main\n            ;;\n        e )\n            chZfs\n            main\n            ;;\n        f )\n            chVim\n            main\n            ;;\n        g )\n            chCpu\n            main\n            ;;\n        h )\n            chSpindown\n            main\n            ;;\n        i )\n            #echo \"not support yet.\"\n            chPassth\n            main\n            ;;\n        j )\n            chSensors\n            sleep 2\n            main\n            ;;\n        k )\n            clear\n            chNestedV\n            main\n            ;;\n        l )\n            chSubs\n            main\n            ;;\n        m )\n            chRoot\n            main\n            ;;\n        n )\n            manyTools\n            main\n            ;;\n        o )\n            omvInPve\n            ;;\n        p )\n            ConfBack\n            ;;\n        u )\n            git pull\n            echo \"Now go to main interface:\"\n            echo \"即将回主界面。。。\"\n            echo \"3\"\n            sleep 1\n            echo \"2\"\n            sleep 1\n            echo \"1\"\n            sleep 1\n            ./pvetools.sh\n            ;;\n        L )\n            if (whiptail --title \"Yes/No Box\" --yesno \"Change Language?\n修改语言？\" 10 60);then\n                if [ $L = \"zh\" ];then\n                    L=\"en\"\n                else\n                    L=\"zh\"\n                fi\n                main\n                #main $L\n            fi\n            ;;\n        exit | quit | q )\n            exit\n            ;;\n        esac\n    else\n        exit\n    fi\n}\n#----------------------functions--end------------------#\n#if [ `export|grep \"zh_CN\"|wc -l` = 0 ];then\n#    L=\"en\"\n#else\n#    L=\"zh\"\n#fi\n#--------santa-start--------------\nDrawTriangle() {\n\ta=$1\n\tcolor=$[RANDOM%7+31]\n\tif [ \"$a\" -lt \"8\" ] ;then\n\t\tb=`printf \"%-${a}s\\n\" \"0\" |sed 's/\\s/0/g'`\n\t\tc=`echo \"(31-$a)/2\"|bc`\n        d=`printf \"%-${c}s\\n\"`\n\t\techo \"${d}`echo -e \"\\033[1;5;${color}m$b\\033[0m\"`\"\n\telif [ \"$a\" -ge \"8\" -a \"$a\" -le \"21\" ] ;then\n\t\te=$[a-8]\n\t\tb=`printf \"%-${e}s\\n\" \"0\" |sed 's/\\s/0/g'`\n\t\tc=`echo \"(31-$e)/2\"|bc`\n\t\td=`printf \"%-${c}s\\n\"`\n\t\techo \"${d}`echo -e \"\\033[1;5;${color}m$b\\033[0m\"`\"\n\tfi\n}\nDrawTree() {\n\te=$1\n\tb=`printf \"%-3s\\n\" \"|\" | sed 's/\\s/|/g'`\n\tc=`echo \"($e-3)/2\"|bc`\n\td=`printf \"%-${c}s\\n\" \" \"`\n\techo -e \"${d}${b}\\n${d}${b}\\n${d}${b}\\n${d}${b}\\n${d}${b}\\n${d}${b}\"\n    echo \"       Merry Cristamas!\"\n}\nDisplay(){\n\tfor i in `seq 1 2 31`; do\n\t\t[ \"$i\"=\"21\" ] && DrawTriangle $i\n\t\tif [ \"$i\" -eq \"31\" ];then\n\t\t\tDrawTree $i\n\t\tfi\n\tdone\n}\nif [[ `date +%m%d` = 1224  ||  `date +%m%d` = 1225 ]] && [ ! -f '/tmp/santa' ];then\n    for i in {1..6}\n    do\n        Display\n        sleep 1\n        clear\n    done\n    touch /tmp/santa\nfi\n\n#--------santa-end--------------\nif (whiptail --title \"Language\" --yes-button \"中文\" --no-button \"English\"  --yesno \"Choose Language:\n选择语言：\" 10 60) then\n    L=\"zh\"\nelse\n    L=\"en\"\nfi\nmain\n"
        }
      ]
    }
  ]
}