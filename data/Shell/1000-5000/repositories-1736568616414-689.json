{
  "metadata": {
    "timestamp": 1736568616414,
    "page": 689,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "helixarch/debtap",
      "stars": 1380,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.6044921875,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {fullname}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.900390625,
          "content": "debtap\n======\n\nA script for converting .deb packages into Arch Linux packages, focused on accuracy\n\n# FAQ\n\n**Q: What \"debtap\" stands for?**\n\n**A:** DEB To Arch (Linux) Package\n\n**Q: Isn't better to download an official package or write a PKGBUILD in case I need to compile a package or convert a .deb package to an Arch Linux package?**\n\n**A:** Sure it is, and I truely encourage you to do so. Debtap was written to create packages that either cannot be compiled (closed source packages) or cannot be built from AUR for various reasons (error during compiling or unavailable files), as a quick 'n' dirty solution and an extra option for creating Arch Linux packages for Arch Linux users.\n\n**Q: So debtap will help me only in case I need to convert specific .deb packages to Arch Linux packages?**\n\n**A:** No. In case you need to write a new PKGBUILD for a package that already exists in the Debian/Ubuntu distributions, using parameter -p or -P it can generate a PKGBUILD and then edit it as you wish.\n\n**Q: What are the minimum requirements to run this script?**\n\n**A:** You need to have installed these dependencies: `bash`, `binutils` (provides ar utility for extracting .deb package and readelf), `pkgfile` and `fakeroot`.You must run at least once (preferably recently) `debtap -u` to create/update pkgfile and debtap database (you do this with root privileges).\n\n**Q: Debtap needs a lot of time to convert a package. So, why this is happening?**\n\n**A:** Like I said, debtap is focused on accuracy. It won't just unpack a .deb package and then repackage its data to an Arch Linux package, ignoring metadata. Depending on the speed of your processor and the package itself, conversion can take from a few seconds to several minutes.\n\n**Q: During conversion I get several warning messages, why?**\n\n**A:** Debtap cannot be 100% accurate for several reasons,  the main reason for this is the complexity of packages names. If you want to check the freshly generated `.PKGINFO` and `.INSTALL` (this is optional file) metadata files or even fix the untranslated packages names inside `.PKGINFO`, debtap offers you the option to edit these files before compressing the final package.\n\n**Q: How do I use debtap?**\n\n**A:** The syntax is quite simple actually: `debtap [options] package_filename`\nFor example: `debtap world-of-goo-demo_1.0_i386.deb`\n\nAny recommendations or questions for debtap are welcomed!\n\nAvailable options:\n==================\n\n    -h  --help        Prints help\n    -u  --update      Update debtap database\n    -q  --quiet       Bypass all questions, except for editing metadata file(s)\n    -Q  --Quiet       Bypass all questions (not recommended)\n    -s  --pseudo      Create a pseudo-64-bit package from a 32-bit .deb package\n    -w  --wipeout     Wipeout versions from all dependencies, conflicts etc.\n    -p  --pkgbuild    Additionally generate a PKGBUILD file\n    -P  --Pkgbuild    Generate a PKGBUILD file only\n    -v  --version     Print version\n"
        },
        {
          "name": "debtap",
          "type": "blob",
          "size": 314.55078125,
          "content": "#!/usr/bin/bash\n\n#\tCopyright 2014-2022 George Savvidis\n\n#\tThis program is free software: you can redistribute it and/or modify\n#\tit under the terms of the GNU General Public License as published by\n#\tthe Free Software Foundation, either version 2 of the License, or\n#\t(at your option) any later version.\n\n#\tThis program is distributed in the hope that it will be useful,\n#\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n#\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#\tGNU General Public License for more details.\n\n#\tYou should have received a copy of the GNU General Public License\n#\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nVersion=3.5.1\n\n# Defining colors and bold letters\nlightgreen='\\e[1;32m'\nlightred='\\e[1;31m'\nred='\\e[0;31m'\nlightblue='\\e[1;34m'\nNC='\\e[0m'\nbold=`tput bold`\nnormal=`tput sgr0`\n\n# Options, help, database update and error messages\nfor i in \"$@\"; do\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)h([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--help$ ]]; then\n\t\thelp=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)u([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--update$ ]]; then\n\t\tupdate=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)q([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--quiet$ ]]; then\n\t\tquiet=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)Q([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--Quiet$ ]]; then\n\t\tQuiet=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)s([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--pseudo$ ]]; then\n\t\tpseudo=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)w([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--wipeout$ ]]; then\n\t\twipeout=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)p([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--pkgbuild$ ]]; then\n\t\tpkgbuild=set\n\tfi\n\tif [[ \"$i\" =~ ^-([huqQswpPv]*)P([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--Pkgbuild$ ]]; then\n\t\tPkgbuild=set\n\tfi\n \tif [[ \"$i\" =~ ^-([huqQswpPv]*)v([huqQswpPv]*)$ ]] || [[ \"$i\" =~ ^--version$ ]]; then\n\t\tversion=set\n\tfi\ndone\nif [[ $pseudo == set ]] && [[ ! -e /var/lib/pacman/sync/multilib.db ]] && [[ ! -e /var/lib/pacman/sync/multilib-testing.db ]]; then\n\techo -e \"${red}Error: You are either running non-x86_64 Arch Linux, or you haven't enabled multilib repository. If you are running x86_64 Arch Linux, you must enable a multilib repository and then synchronize pacman database${NC}\"; exit 1\nfi\nif [[ $help == set ]]; then\n\techo -e \"Syntax: debtap [options] package_filename\\n\\nOptions:\\n\\n    -h  --help        Print this help message\\n    -u  --update      Update debtap database\\n    -q  --quiet       Bypass all questions, except for editing metadata file(s)\\n    -Q  --Quiet       Bypass all questions (not recommended)\\n    -s  --pseudo      Create a pseudo-64-bit package from a 32-bit .deb package\\n    -w  --wipeout     Wipeout versions from all dependencies, conflicts etc.\\n    -p  --pkgbuild    Additionally generate a PKGBUILD file\\n    -P  --Pkgbuild    Generate a PKGBUILD file only\\n    -v  --version     Print version\"; exit 0\nelif [[ $version == set ]]; then\n\techo -e \"$Version\"; exit 0\nelif [[ $update == set ]]; then\n    if [[ $EUID != 0 ]]; then\n        echo -e \"${red}Error: You must run this command with root privileges${NC}\"; exit 1\n    else\n        mkdir -p /var/cache/debtap 2> /dev/null\n        chmod 755 /var/cache/debtap\n        echo -e \"${lightgreen}==>${NC} ${bold}Synchronizing pkgfile database...${normal}\"\n        pkgfile -u\n        if [[ $(echo $?) != 0 ]]; then\n            echo -e \"${red}Synchronization failed. Exiting...${NC}\"; exit 1\n        else\n            echo -e \"${lightgreen}==>${NC} ${bold}Synchronizing debtap database...${normal}\"\n            if [[ \"$(uname -m)\" == \"i686\" ]] || [[ \"$(uname -m)\" == \"x86_64\" ]]; then\n                _arch=amd64\n            elif [[ \"$(uname -m)\" == \"armv7l\" ]] || [[ \"$(uname -m)\" == \"armv7h\" ]]; then\n                _arch=armhf\n            elif [[ \"$(uname -m)\" == \"aarch64\" ]]; then\n                _arch=arm64\n            fi\n            ubuntu_latest_stable_version=`curl -k -s https://packages.ubuntu.com | grep option | gawk -F '=' '{print $2}' | gawk '{print $1}' | grep -v option | tac | sed -n 3'{p;q;}' | sed s'/\\(\"\\|-updated\\|-backports\\)//g'`\n            curl -k -C - -f http://ftp.debian.org/debian/dists/sid/main/Contents-$_arch.gz > /var/cache/debtap/debian-main-packages-files.gz\n            gzip -df /var/cache/debtap/debian-main-packages-files.gz\n            curl -k -C - -f http://ftp.debian.org/debian/dists/sid/non-free/Contents-$_arch.gz > /var/cache/debtap/debian-non-free-packages-files.gz\n            gzip -df /var/cache/debtap/debian-non-free-packages-files.gz\n            curl -k -C - -f http://ftp.debian.org/debian/dists/sid/contrib/Contents-$_arch.gz > /var/cache/debtap/debian-contrib-packages-files.gz\n            gzip -df /var/cache/debtap/debian-contrib-packages-files.gz\n            if [[ $_arch == amd64 ]]; then\n                curl -k -C - -f http://archive.ubuntu.com/ubuntu/dists/$ubuntu_latest_stable_version/Contents-$_arch.gz > /var/cache/debtap/ubuntu-packages-files.gz\n            else\n                curl -k -C - -f http://ports.ubuntu.com/ubuntu-ports/dists/$ubuntu_latest_stable_version/Contents-$_arch.gz > /var/cache/debtap/ubuntu-packages-files.gz\n            fi\n            gzip -df /var/cache/debtap/ubuntu-packages-files.gz\n            if [[ $(echo $?) != 0 ]]; then\n                echo -e \"${red}Synchronization failed. Exiting...${NC}\"; exit 1\n            else\n                echo -e \"${lightgreen}==>${NC} ${bold}Downloading latest virtual packages list...${normal}\"\n                curl -k -L https://github.com/helixarch/virtual-packages-list-generator/archive/master.tar.gz > /var/cache/debtap/master.tar.gz\n                tar xfz /var/cache/debtap/master.tar.gz -C /var/cache/debtap\n                mv /var/cache/debtap/virtual-packages-list-generator-master/virtual-packages /var/cache/debtap\n                rm -rf /var/cache/debtap/master.tar.gz /var/cache/debtap/virtual-packages-list-generator-master\n                if [[ $(echo $?) != 0 ]]; then\n                    echo -e \"${red}Downloading failed. Exiting...${NC}\"; exit 1\n                else\n                    echo -e \"${lightgreen}==>${NC} ${bold}Downloading latest AUR packages list...${normal}\"\n                    curl -k -C - -f https://aur.archlinux.org/packages.gz > /var/cache/debtap/aur-packages.gz\n                    gzip -df /var/cache/debtap/aur-packages.gz\n                    if [[ $(echo $?) != 0 ]]; then\n                        echo -e \"${red}Downloading failed. Exiting...${NC}\"; exit 1\n                    else    \n                        echo -e \"${lightgreen}==>${NC} ${bold}Generating base group packages list...${normal}\"\n                        rm -rf /var/cache/debtap/base-packages\n                        for i in $(pacman -Qi base 2> /dev/null | grep ^Depends | cut -d: -f2); do echo \"$i\" >> /var/cache/debtap/base-packages; done; echo >> /var/cache/debtap/base-packages\n                        chmod 644 /var/cache/debtap/*\n                        echo -e \"${lightgreen}==>${NC} ${bold}All steps successfully completed!${normal}\"; exit 0\n                    fi\n                fi\n            fi\n        fi\n    fi\nelif [[ \"${@: -1}\" == \"debtap\" ]] || [[ \"${@: -1}\" =~ /debtap$ ]] || [[ \"${@: -1}\" =~ ^-([qQswpP]+)$ ]] || [[ \"${@: -1}\" =~ ^--([quiet|Quiet|pseudo|wipeout|pkgbuild|Pkgbuild]){1,}$ ]]; then\n\techo -e \"${red}Error: You haven't specified a deb package${NC}\\nSyntax: debtap [options] package_filename\\n\\nOptions:\\n\\n    -h  --help        Print this help message\\n    -u  --update      Update debtap database\\n    -q  --quiet       Bypass all questions, except for editing metadata file(s)\\n    -Q  --Quiet       Bypass all questions (not recommended)\\n    -s  --pseudo      Create a pseudo-64-bit package from a 32-bit .deb package\\n    -w  --wipeout     Wipeout versions from all dependencies, conflicts etc.\\n    -p  --pkgbuild    Additionally generate a PKGBUILD file\\n    -P  --Pkgbuild    Generate a PKGBUILD file only\\n    -v  --version     Print version\"; exit 1\nelif [[ \"${@: -1}\" =~ ^(-)+(.)*$ ]] || [[ $(ls \"${@: -1}\" &> /dev/null; echo $?) != 0 ]]; then\n\techo -e \"${red}Error: No such file or directory or invalid option${NC}\"; exit 1\nelif [[ $(file -S -b \"${@: -1}\" | grep -q \"Debian binary package\"; echo $?) != 0 ]]; then\n\techo -e \"${red}Error: You haven't specified a valid deb package${NC}\"; exit 1\nfi\n\nif [[ ! $(ls /var/cache/pkgfile/*.files 2> /dev/null) ]] || [[ ! $(ls /var/cache/debtap/*-packages-files 2> /dev/null) ]] || [[ ! -e /var/cache/debtap/base-packages ]] || [[ ! -e /var/cache/debtap/aur-packages ]] || [[ ! -e /var/cache/debtap/virtual-packages ]]; then\n\tif [[ $pseudo != set ]]; then\n\t\techo -e \"${red}Error: You must run at least once \\\"debtap -u\\\" with root privileges (preferably recently), before running this script${NC}\"; exit 1\n\telse\n\t\techo -e \"${red}Error: You must enable a multilib repository, synchronize pacman database and then run at least once \\\"debtap -u\\\" with root privileges (preferably recently), before running this script${NC}\"; exit 1\n\tfi\nfi\n\ntar_extract_cmd() {\n\tlocal file=\"${@: -1}\"\n\tlocal flags\n\tcase \"$file\" in\n\t\t*.tar)      flags=\"\" ;;\n\t\t*.tar.gz)   flags=\"z\" ;;\n\t\t*.tar.xz)   flags=\"J\" ;;\n\t\t*.tar.bz2)  flags=\"j\" ;;\n\t\t*.tar.lzma) flags=\"J\" ;;\n\t\t*.tar.zst)  flags=\"I unzstd\"\n\t\t\tif ! which unzstd >/dev/null; then\n\t\t\t\techo -e \"${red}Error: extracting $file requires unzstd${NC}\" >&2\n\t\t\t\treturn 1\n\t\t\tfi\n\t\t\t;;\n\t\t*)\n\t\t\techo -e \"${red}Error: Don't know how to extract '$file'${NC}\" >&2\n\t\t\treturn 1\n\t\t\t;;\n\tesac\n\techo \"tar -x$flags\"\n}\n\n# Defining package with full path & defining and creating working directory\npackage_with_full_path=\"`readlink -f \"${@: -1}\"`\"\nworking_directory=\"`pwd`/`basename \"${@: -1}\" | tr '[:upper:]' '[:lower:]' | sed s'/\\.deb$//'`-working-directory\"\nrm -rf \"$working_directory\" 2> /dev/null\nmkdir \"$working_directory\" 2> /dev/null\nif [[ $(echo $?) != 0 ]]; then\n\techo -e \"${red}Error: Cannot create working directory, permission denied. Exiting...${NC}\"\n\texit 1\nfi\ncd \"$working_directory\"\n\n# Extracting package data and metadata in working directory (also checking package architecture, if you are running the pseudo option)\necho -e \"${lightgreen}==>${NC} ${bold}Extracting package data...${normal}\"\ncontrol_tar_check=$(ar t \"$package_with_full_path\" | grep -m 1 \"control\\.tar\")\ncontrol_extract=$(tar_extract_cmd \"$control_tar_check\")\nif [ $? != 0 ]; then\n    rm -rf \"$working_directory\"\n    exit 1\nfi\nar p \"$package_with_full_path\" \"$control_tar_check\" | $control_extract\n\nif [[ $pseudo == set ]] && [[ $(grep ^Architecture: control | grep -q i386; echo $?) != 0 ]]; then\n    echo -e \"${red}Error: Invalid package architecture. Removing extracted package data and exiting...${NC}\"\n    rm -rf \"$working_directory\"\n    exit 1\nfi\n\nrm -rf $(ls * | grep -v 'control\\|preinst\\|postinst\\|prerm\\|postrm\\|conffiles')\ndata_tar_check=$(ar t \"$package_with_full_path\" | grep -m 1 \"data\\.tar\")\ndata_extract=$(tar_extract_cmd \"$data_tar_check\")\nif [ $? != 0 ]; then\n    rm -rf \"$working_directory\"\n    exit 1\nfi\nar p \"$package_with_full_path\" \"$data_tar_check\" | $data_extract\n\n# Fixing possible differences in filesystem hierarchy of the extracted package data, so that it matches Arch Linux filesystem hierarchy\necho -e \"${lightgreen}==>${NC} ${bold}Fixing possible directories structure differencies...${normal}\"\nif [[ $pkgbuild == set ]] || [[ $Pkgbuild == set ]]; then\n\tif [[ $(find ./ -iname '*license*' | wc -l) != 0 ]]; then\n\t\techo \"install -D -m644 \\\"$(find ./ -iname '*license*' | sort | tail -1 | sed s'/^\\.\\///')\\\" \\\"\\${pkgdir}/usr/share/licenses/\\${pkgname}/LICENSE\\\"\" >> pkgbuildinstallations1\n\tfi\n\tif [[ $(find ./ -iname '*copyright*' | wc -l) != 0 ]]; then\n\t\tif [[ $(find ./ -iname '*license*' | wc -l) != 0 ]]; then\n\t\t\techo \"install -D -m644 \\\"$(find ./ -iname '*copyright*' | sort | tail -1 | sed s'/^\\.\\///')\\\" \\\"\\${pkgdir}/usr/share/licenses/\\${pkgname}/COPYRIGHT\\\"\" >> pkgbuildinstallations1\n\t\telse\n\t\t\techo \"install -D -m644 \\\"$(find ./ -iname '*copyright*' | sort | tail -1 | sed s'/^\\.\\///')\\\" \\\"\\${pkgdir}/usr/share/licenses/\\${pkgname}/LICENSE\\\"\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ $(find ./ -iname '*eula*' | wc -l) != 0 ]]; then\n\t\tif [[ $(find ./ -iname '*license*' | wc -l) != 0 ]] || [[ $(find ./ -iname '*copyright*' | wc -l) != 0 ]]; then\n\t\t\techo \"install -D -m644 \\\"$(find ./ -iname '*eula*' | sort | tail -1 | sed s'/^\\.\\///')\\\" \\\"\\${pkgdir}/usr/share/licenses/\\${pkgname}/EULA\\\"\" >> pkgbuildinstallations1\n\t\telse\n\t\t\techo \"install -D -m644 \\\"$(find ./ -iname '*eula*' | sort | tail -1 | sed s'/^\\.\\///')\\\" \\\"\\${pkgdir}/usr/share/licenses/\\${pkgname}/LICENSE\\\"\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e usr/games ]]; then\n\t\techo 'mkdir usr/bin 2> /dev/null; mv usr/games/* usr/bin; rm -rf usr/games' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/usr\\/games\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e bin ]]; then\n\t\techo 'mkdir -p usr/bin 2> /dev/null; mv bin/* usr/bin; rm -rf bin' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/bin\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e sbin ]]; then\n\t\techo 'mkdir -p usr/bin 2> /dev/null; mv sbin/* usr/bin; rm -rf sbin' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/sbin\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e usr/sbin ]]; then\n\t\techo 'mkdir usr/bin 2> /dev/null; mv usr/sbin/* usr/bin; rm -rf usr/sbin' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/usr\\/sbin\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e usr/local/games ]]; then\n\t\techo 'mkdir usr/bin 2> /dev/null; mv usr/local/games/* usr/bin; rm -rf usr/local/games' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/usr\\/local\\/games\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e usr/local/bin ]]; then\n\t\techo 'mkdir usr/bin 2> /dev/null; mv usr/local/bin/* usr/bin; rm -rf usr/local/bin' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/usr\\/local\\/bin\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ -e usr/local/sbin ]]; then\n\t\techo 'mkdir usr/bin 2> /dev/null; mv usr/local/sbin/* usr/bin; rm -rf usr/local/sbin' >> pkgbuildinstallations1\n\t\tif [[ -e usr/share/applications ]]; then\n\t\t\techo -e \"ls usr/share/applications/*.desktop | while read line; do\\n\\tsed -i s'/^Exec=\\/usr\\/local\\/sbin\\//Exec=\\/usr\\/bin\\//g' \\\"\\$line\\\"\\ndone\" >> pkgbuildinstallations1\n\t\tfi\n\tfi\n\tif [[ $pseudo != set ]]; then\n\t\tif [[ -e lib ]]; then\n\t\t\techo 'mkdir -p usr/lib 2> /dev/null; mv lib/* usr/lib; rm -rf lib' >> pkgbuildinstallations1\n\t\tfi\n\t\tif [[ -e lib32 ]]; then\n\t\t\tif [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\t\t\techo 'mkdir -p usr/lib 2> /dev/null; mv lib32/* usr/lib; rm -rf lib32' >> pkgbuildinstallations32\n\t\t\telse\n\t\t\t\techo 'mkdir -p usr/lib32 2> /dev/null; mv lib32/* usr/lib32; rm -rf lib32' >> pkgbuildinstallations64\n\t\t\tfi\n\t\tfi\n\t\tif [[ -e lib64 ]]; then\n\t\t\techo 'mkdir -p usr/lib 2> /dev/null; mv lib64/* usr/lib; rm -rf lib64' >> pkgbuildinstallations64\n\t\tfi\n\t\tif [[ -e usr/lib32 ]] && [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\t\techo 'mkdir usr/lib 2> /dev/null; mv usr/lib32/* usr/lib; rm -rf usr/lib32' >> pkgbuildinstallations32\n\t\tfi\n\t\tif [[ -e usr/lib64 ]]; then\n\t\t\techo 'mkdir usr/lib 2> /dev/null; mv usr/lib64/* usr/lib; rm -rf usr/lib64' >> pkgbuildinstallations64\n\t\tfi\n\t\tif [[ -e usr/local/lib32 ]] && [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\t\techo 'mkdir usr/local/lib 2> /dev/null; mv usr/local/lib32/* usr/local/lib; rm -rf usr/local/lib32' >> pkgbuildinstallations32\n\t\tfi\n\t\tif [[ -e usr/local/lib64 ]]; then\n\t\t\techo 'mkdir usr/local/lib 2> /dev/null; mv usr/local/lib64/* usr/local/lib; rm -rf usr/local/lib64' >> pkgbuildinstallations64\n\t\tfi\n\telse\n\t\tif [[ -e lib ]]; then\n\t\t\ttac pkgbuildinstallations32 2> /dev/null >> pkgbuildinstallations32-1; echo 'mkdir -p usr/lib 2> /dev/null; mv lib/* usr/lib; rm -rf lib' >> pkgbuildinstallations32-1; tac pkgbuildinstallations32-1 > pkgbuildinstallations32; rm -rf pkgbuildinstallations32-1\n\t\t\techo 'mkdir -p usr/lib32 2> /dev/null; mv lib/* usr/lib32; rm -rf lib' >> pkgbuildinstallations64\n\t\tfi\n\t\tif [[ -e lib32 ]]; then\n\t\t\techo 'mkdir -p usr/lib32 2> /dev/null; mv lib32/* usr/lib32; rm -rf lib32' >> pkgbuildinstallations64\n\t\tfi\n\t\tif [[ -e usr/lib ]]; then\n\t\t\techo 'mkdir usr/lib32 2> /dev/null; mv usr/lib/* usr/lib32; rm -rf usr/lib' >> pkgbuildinstallations64\n\t\tfi\n\t\tif [[ -e usr/local/lib ]]; then\n\t\t\techo 'mkdir usr/local/lib32 2> /dev/null; mv usr/local/lib/* usr/local/lib32; rm -rf usr/local/lib' >> pkgbuildinstallations64\n\t\tfi\n\tfi\nfi\n\nif [[ -e usr/games ]]; then\n\tmkdir usr/bin 2> /dev/null; mv usr/games/* usr/bin; rm -rf usr/games\nfi\nif [[ -e bin ]]; then\n\tmkdir -p usr/bin 2> /dev/null; mv bin/* usr/bin; rm -rf bin\nfi\nif [[ -e sbin ]]; then\n\tmkdir -p usr/bin 2> /dev/null; mv sbin/* usr/bin; rm -rf sbin\nfi\nif [[ -e usr/sbin ]]; then\n\tmkdir usr/bin 2> /dev/null; mv usr/sbin/* usr/bin; rm -rf usr/sbin\nfi\nif [[ -e usr/local/games ]]; then\n\tmkdir usr/bin 2> /dev/null; mv usr/local/games/* usr/bin; rm -rf usr/local/games\nfi\nif [[ -e usr/local/bin ]]; then\n\tmkdir usr/bin 2> /dev/null; mv usr/local/bin/* usr/bin; rm -rf usr/local/bin\nfi\nif [[ -e usr/local/sbin ]]; then\n\tmkdir usr/bin 2> /dev/null; mv usr/local/sbin/* usr/bin; rm -rf usr/local/sbin\nfi\nif [[ -e usr/share/applications ]]; then\n\tls usr/share/applications/*.desktop | while read line; do\n\t\tsed -i -e s'/^Exec=\\/bin\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/sbin\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/usr\\/sbin\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/usr\\/games\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/usr\\/local\\/bin\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/usr\\/local\\/sbin\\//Exec=\\/usr\\/bin\\//g' -e s'/^Exec=\\/usr\\/local\\/games\\//Exec=\\/usr\\/bin\\//g' \"$line\" 2> /dev/null\n\tdone\nfi\nif [[ $pseudo != set ]]; then\n\tif [[ -e lib ]]; then\n\t\tmkdir -p usr/lib 2> /dev/null; mv lib/* usr/lib; rm -rf lib\n\tfi\n\tif [[ -e lib32 ]]; then\n\t\tif [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\t\tmkdir -p usr/lib 2> /dev/null; mv lib32/* usr/lib; rm -rf lib32\n\t\telse\n\t\t\tmkdir -p usr/lib32 2> /dev/null; mv lib32/* usr/lib32; rm -rf lib32\n\t\tfi\n\tfi\n\tif [[ -e lib64 ]]; then\n\t\tmkdir -p usr/lib 2> /dev/null; mv lib64/* usr/lib; rm -rf lib64\n\tfi\n\tif [[ -e usr/lib32 ]] && [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\tmkdir usr/lib 2> /dev/null; mv usr/lib32/* usr/lib; rm -rf usr/lib32\n\tfi\n\tif [[ -e usr/lib64 ]]; then\n\t\tmkdir usr/lib 2> /dev/null; mv usr/lib64/* usr/lib; rm -rf usr/lib64\n\tfi\n\tif [[ -e usr/local/lib32 ]] && [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\tmkdir usr/local/lib 2> /dev/null; mv usr/local/lib32/* usr/local/lib; rm -rf usr/local/lib32\n\tfi\n\tif [[ -e usr/local/lib64 ]]; then\n\t\tmkdir usr/local/lib 2> /dev/null; mv usr/local/lib64/* usr/local/lib; rm -rf usr/local/lib64\n\tfi\nelse\n\tif [[ -e lib ]]; then\n\t\tmkdir -p usr/lib32 2> /dev/null; mv lib/* usr/lib32; rm -rf lib\n\tfi\n\tif [[ -e lib32 ]]; then\n\t\tmkdir -p usr/lib32 2> /dev/null; mv lib32/* usr/lib32; rm -rf lib32\n\tfi\n\tif [[ -e usr/lib ]]; then\n\t\tmkdir usr/lib32 2> /dev/null; mv usr/lib/* usr/lib32; rm -rf usr/lib\n\tfi\n\tif [[ -e usr/local/lib ]]; then\n\t\tmkdir usr/local/lib32 2> /dev/null; mv usr/local/lib/* usr/local/lib32; rm -rf usr/local/lib\n\tfi\nfi\n\nif [[ $pkgbuild == set ]] || [[ $Pkgbuild == set ]]; then\n\tif [[ -e usr/local ]] && [[ ! $(ls -A usr/local 2> /dev/null) ]]; then\n\t\techo 'rm -rf usr/local' >> pkgbuildinstallations2\n\tfi\nfi\n\nif [[ -e usr/local ]] && [[ ! $(ls -A usr/local 2> /dev/null) ]]; then\n\trm -rf usr/local\nfi\n\n# Generating .PKGINFO file\necho -e \"${lightgreen}==>${NC} ${bold}Generating .PKGINFO file...${normal}\"\n\n# Generating pkgname field\nif [[ $pseudo == set ]] && [[ $(ls -A usr/lib32 2> /dev/null) ]] && [[ ! $(ls -A usr/bin 2> /dev/null) ]]; then\n\tfor i in {git,bzr,darcs,hg}; do\n\t\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"pkgname = lib32-`grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-$i | sed s\"/-$i-$i$/-$i/\" | sed s'/--/-/g' > .PKGINFO\n\t\tfi\n\tdone\n\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q svn; echo $?) == 0 ]]; then\n\t\techo \"pkgname = lib32-`grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-svn | sed s'/-svn-svn$/-svn/' | sed s'/--/-/g' > .PKGINFO\n\tfi\n\tfor i in {cvs,CVS}; do\n\t\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"pkgname = lib32-`grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-cvs | sed s'/-cvs-cvs$/-cvs/' | sed s'/--/-/g' > .PKGINFO\n\t\tfi\n\tdone\n\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q \"svn\\|git\\|cvs\\|CVS\\|bzr\\|darcs\\|hg\"; echo $?) != 0 ]]; then\n\t\techo \"pkgname = lib32-`grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\" | sed s'/--/-/g' > .PKGINFO\n\tfi\nelse\n\tfor i in {git,bzr,darcs,hg}; do\n\t\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"pkgname = `grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-$i | sed s\"/-$i-$i$/-$i/\" | sed s'/--/-/g' > .PKGINFO\n\t\tfi\n\tdone\n\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q svn; echo $?) == 0 ]]; then\n\t\techo \"pkgname = `grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-svn | sed s'/-svn-svn$/-svn/' | sed s'/--/-/g' > .PKGINFO\n\tfi\n\tfor i in {cvs,CVS}; do\n\t\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"pkgname = `grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\"-cvs | sed s'/-cvs-cvs$/-cvs/' | sed s'/--/-/g' > .PKGINFO\n\t\tfi\n\tdone\n\tif [[ $(grep -i ^Version: control | gawk '{print $2}' | grep -q \"svn\\|git\\|cvs\\|CVS\\|bzr\\|darcs\\|hg\"; echo $?) != 0 ]]; then\n\t\techo \"pkgname = `grep -i ^Package: control | gawk '{print $2}' | tr '[:upper:]' '[:lower:]'`\" | sed s'/demo$/-demo/' | sed s'/trial$/-trial/' | sed s'/--/-/g' > .PKGINFO\n\tfi\nfi\n\n# Generating pkgver field\nversion=$(grep -i ^Version: control | gawk '{print $2}' | sed -e s'/[+~]/-/g' -e s'/[-._]alpha/alpha/' -e s'/[-._]beta/beta/' -e s'/[-._]pre/pre/' -e s'/[-._]rc/rc/' -e s'/[-._]dfsg/dfsg/' | gawk -F 'dev' '{print $1}' | sed -e s'/-\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+//g' -e s'/-[0-9]\\+\\.[0-9]\\+\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]\\+\\.[0-9]\\+\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+[a-z]*[0-9]*//g' -e s'/[a-z]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/[a-z]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]*[a-z]*[0-9]*//g' -e s'/--/-/g' -e s'/\\.\\././g' | sed s'/\\.$//')\nfor i in {git,bzr,darcs,hg}; do\n    if [[ $(echo $version | grep -q $i; echo $?) == 0 ]]; then\n\t\techo \"pkgver = `echo $version | gawk -F \"$i\" '{print $2}' | gawk -F '-' '{print $1}'`\"-1 >> .PKGINFO\n    fi\ndone\nfor i in {svn.r,svnr}; do\n    if [[ $(echo $version | grep -q $i; echo $?) == 0 ]]; then\n\t\techo \"pkgver = r`echo $version | gawk -F \"$i\" '{print $2}' | gawk -F '-' '{print $1}'`\"-1 >> .PKGINFO\n    fi\ndone\nif [[ $(echo $version | grep -q svn; echo $?) == 0 ]] && [[ $(echo $version | grep -q \"svn\\.r\\|svnr\"; echo $?) != 0 ]]; then\n    echo \"pkgver = `echo $version | gawk -F 'svn' '{print $2}' | gawk -F '-' '{print $1}'`\"-1 >> .PKGINFO\nfi\nfor i in {cvs,CVS}; do\n    if [[ $(echo $version | grep -q $i; echo $?) == 0 ]]; then\n\t\techo \"pkgver = `echo $version | sed -e s\"/[-.]$i/ /g\" -e s\"/$i/ /g\" -e s\"/-/ /g\" | gawk '{print $2}'`\"-1 >> .PKGINFO\n    fi\ndone\nif [[ $(echo $version | grep -q \"svn\\|git\\|cvs\\|CVS\\|bzr\\|darcs\\|hg\"; echo $?) != 0 ]]; then\n    echo \"pkgver = `echo $version | gawk -F '-[0-9]' '{print $1}' | sed s'/-/./'`\"-1 >> .PKGINFO\nfi\n\n# Generating pkgdesc field\nif [[ $(echo `grep -v \":\\| \\.\" control` | grep -iq \"`grep -i ^Description: control | sed s'/^Description: //i' | sed s'/\\.//'`\"; echo $?) == 0 ]]; then\n    description=$(echo $(echo \"`grep -v \":\\| \\.\" control`\") | sed s'/^\\s*./\\U&\\E/g' | sed s'/\\(\\. \\|\\! \\|\\? \\)\\s*./\\U&\\E/g')\nelse\n    description=$(echo $(echo \"`grep -i ^Description: control | sed s'/^Description: //i' | sed 's/.*/\\u&/'`\" | sed s'/\\.//'). `grep -v \":\\| \\.\" control` | sed s'/^\\s*./\\U&\\E/g' | sed s'/\\(\\. \\|\\! \\|\\? \\)\\s*./\\U&\\E/g' | sed s'/\\!\\./\\!/g' | sed s'/\\?\\./\\?/g')\nfi\necho \"pkgdesc = $description\" >> .PKGINFO\n\n# Generating url field\necho \"url = `grep -i ^Homepage: control | gawk '{print $2}'`\" | sed s'/\\/$//' >> .PKGINFO\n\n# Generating builddate (which is actually packaging date) field\necho \"builddate = `date -u \"+%s\"`\" >> .PKGINFO\n\n# Generating packager field\nif [[ $quiet == set ]] || [[ $Quiet == set ]]; then\n    echo \"packager = Unknown Packager\" >> .PKGINFO\nelse\n    source /usr/share/makepkg/util/config.sh\n    load_makepkg_config\n    echo -e \"\\n${lightblue}::${NC} Enter Packager name (can be left blank):\"\n    read -e -i \"${PACKAGER}\" packager_name\n    echo \"packager = $packager_name\" >> .PKGINFO\nfi\n\n# Generating arch field\nif [[ $pseudo != set ]]; then\n\techo \"arch = `grep -i ^Architecture: control | gawk '{print $2}' | sed -e s'/i386/i686/' -e s'/amd64/x86_64/' -e s'/armhf/armv7h/' -e s'/arm64/aarch64/' -e s'/all/any/'`\" >> .PKGINFO\nelse\n\techo \"arch = x86_64\" >> .PKGINFO\nfi\n\n# Generating size field\nif [[ -e preinst ]]; then\n    preinst_size=$(ls -l | grep preinst | gawk '{print $5}')\nelse\n    preinst_size=0\nfi\nif [[ -e postinst ]]; then\n    postinst_size=$(ls -l | grep postinst | gawk '{print $5}')\nelse\n    postinst_size=0\nfi\nif [[ -e prerm ]]; then\n    prerm_size=$(ls -l | grep prerm | gawk '{print $5}')\nelse\n    prerm_size=0\nfi\nif [[ -e postrm ]]; then\n    postrm_size=$(ls -l | grep postrm | gawk '{print $5}')\nelse\n    postrm_size=0\nfi\nif [[ -e conffiles ]]; then\n    conffiles_size=$(ls -l | grep conffiles | gawk '{print $5}')\nelse\n    conffiles_size=0\nfi\nif [[ -e pkgbuildinstallations1 ]]; then\n    pkgbuildinstallations1_size=$(ls -l | grep pkgbuildinstallations1 | gawk '{print $5}')\nelse\n    pkgbuildinstallations1_size=0\nfi\nif [[ -e pkgbuildinstallations2 ]]; then\n    pkgbuildinstallations2_size=$(ls -l | grep pkgbuildinstallations2 | gawk '{print $5}')\nelse\n    pkgbuildinstallations2_size=0\nfi\nif [[ -e pkgbuildinstallations32 ]]; then\n    pkgbuildinstallations32_size=$(ls -l | grep pkgbuildinstallations32 | gawk '{print $5}')\nelse\n    pkgbuildinstallations32_size=0\nfi\nif [[ -e pkgbuildinstallations64 ]]; then\n    pkgbuildinstallations64_size=$(ls -l | grep pkgbuildinstallations64 | gawk '{print $5}')\nelse\n    pkgbuildinstallations64_size=0\nfi\necho \"size =\" $((`du -sb | tr -d \" .\"` - `ls -l | grep control | gawk '{print $5}'` - $preinst_size - $postinst_size - $prerm_size - $postrm_size - $conffiles_size - $pkgbuildinstallations1_size - $pkgbuildinstallations2_size - $pkgbuildinstallations32_size - $pkgbuildinstallations64_size - `ls -la | grep .PKGINFO | gawk '{print $5}'` - 4096)) >> .PKGINFO\n\n# Generating license field\nif [[ $quiet == set ]] || [[ $Quiet == set ]]; then\n    echo \"license = custom\" >> .PKGINFO\nelse\n    echo -e \"\\n${lightblue}::${NC} Enter package license (can be left blank, you can enter multiple licenses comma separated):\"\n    read package_license\n    for i in `echo \"$package_license\" | sed -e s'/ /__/g' -e s'/,/ /g'`; do\n\t\tlicense+=($i)\n    done\n    for (( i=0; i<$(echo ${#license[@]}); i=i+1 )); do\n        license[$i]=$(echo ${license[$i]} | sed s'/__/ /g')\n    done\n    printf '%s\\n' \"${license[@]}\" | while read line; do\n        echo \"license = $line\" >> .PKGINFO\n    done\nfi\n\necho -e \"\\n${lightgreen}***${NC} ${bold}Creation of .PKGINFO file in progress. It may take a few minutes, please wait...${normal}\"\n\n# The packages names translator function\npackages-names-translator() {\n# First method of translating .deb packages names into Arch Linux packages names, more accurate, comparing contents of .deb packages with Arch Linux packages contents\nfor debian_package_name in $(gawk '{print $1}' `ls | grep initial-check-list`); do\n\tfor debian_package_file in `grep \"\\/$debian_package_name$\" /var/cache/debtap/debian-main-packages-files /var/cache/debtap/debian-non-free-packages-files /var/cache/debtap/debian-contrib-packages-files | grep 'bin\\|opt\\|\\.so' | gawk '{print $1}' | sed s'/\\// /g' | gawk '{print $NF}'`; do\n\t\techo $debian_package_file $(grep \"^$debian_package_name$\\|^$debian_package_name \" `ls | grep initial-check-list` | gawk '{print $2}')\n\tdone >> $debian_package_name-tempfile03\ndone\n\nfor i in `ls | grep tempfile03`; do\n    for j in `gawk '{print $1}' $i`; do\n\t\tfor k in `pkgfile -q $j`; do\n\t\t\techo $k`head -1 $i | gawk '{print $2$3}'`\n\t\tdone\n    done >> `echo $i | sed s'/tempfile03/tempfile04/'`\ndone\n\ntouch tempfile05\nfor debian_package_name in $(gawk '{print $1}' `ls | grep initial-check-list`); do\n    grep -q \"^$debian_package_name$\" tempfile05 || echo $debian_package_name >> tempfile05\ndone\n\nfor i in $(for j in `cat tempfile05`; do echo $j-tempfile04; done); do\n    k=`sort $i | uniq -c | gawk '{print $1}' | sort -n | tail -1`\n    if [[ $(sort $i | uniq -c | gawk '{print $1}' | sort -n | grep \"^$k$\" | wc -l) -ge 2 ]]; then\n\t\tfor l in `cat $i`; do\n\t\t\tfor m in $(sort $i | uniq -c | gawk '{print $1,$2}' | sort -n | grep \"^$k \" | gawk '{print $2}'); do\n\t\t\t\techo $l | grep \"^$m$\"\n\t\t\tdone\n\t\tdone | head -1 >> tempfile06\n    elif [[ $(sort $i | uniq -c | gawk '{print $1}' | sort -n | grep \"^$k$\" | wc -l) -eq 1 ]]; then\n\t\tsort $i | uniq -c | gawk '{print $1,$2}' | sort -n | grep \"^$k \" | gawk '{print $2}' >> tempfile06\n    else\n\t\techo >> tempfile06\n    fi\ndone\n\ncat tempfile06 | sed s'/=/ = /g' | sed s'/>/ > /g' | sed s'/</ < /g' | sed s'/>  =/>=/g' | sed s'/<  =/<=/g' | sed s'/^lib32-\\|-multilib$//g' > tempfile07\n\ncat tempfile07 | while read line; do\n    if [[ $(echo \"$line\" | wc -w) -eq 0 ]]; then\n\t\techo >> final-check-list\n    elif [[ $(echo \"$line\" | wc -w) -eq 1 ]] || [[ $(echo \"$line\" | wc -w) -eq 3 ]]; then\n\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}'`\" >> final-check-list\n    elif [[ $(echo \"$line\" | wc -w) -eq 5 ]]; then\n\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}'`\" >> final-check-list\n\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $4}'` `echo \"$line\" | gawk '{print $5}'`\" >> final-check-list\n    fi\ndone\n\nfor i in $(eval echo {1..$(cat `ls | grep initial-check-list` | wc -l)}); do\n    if [[ $(sed -n \"\"$i\"{p;q;}\" final-check-list | gawk '{print $1}') == \"\" ]]; then\n\t\techo $(sed -n \"\"$i\"{p;q;}\" `ls | grep initial-check-list`) >> untranslated\n\t\techo $(sed -n \"\"$i\"{p;q;}\" `ls | grep initial-check-list` | gawk '{print $1}') >> untranslated-names-only\n    elif [[ $(echo \" $(echo $(grep ^pkgname .PKGINFO | gawk '{print $3}' | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//'){-svn,-git,-cvs,-bzr,-darcs,-hg,}) \" | grep -q \" $(sed -n \"\"$i\"{p;q;}\" final-check-list | gawk '{print $1}') \"; echo $?) == 0 ]]; then\n\t\techo $(sed -n \"\"$i\"{p;q;}\" `ls | grep initial-check-list` | sed s'/ //') >> missing-files\n    fi\ndone\n\n# Second method of translating remaining untranslated .deb packages names into Arch Linux packages names, same as first method, but searches in Ubuntu database for packages contents instead of Debian database\nif [[ -e untranslated-names-only ]]; then\n    for ubuntu_package_name in $(sort -u untranslated-names-only); do\n\t\tfor ubuntu_package_file in `grep \"\\/$ubuntu_package_name$\" /var/cache/debtap/ubuntu-packages-files | grep 'bin\\|opt\\|\\.so' | gawk '{print $1}' | sed s'/\\// /g' | gawk '{print $NF}'`; do\n\t\t\techo $ubuntu_package_file $(grep \"^$ubuntu_package_name$\\|^$ubuntu_package_name \" untranslated | gawk '{print $2}')\n\t\tdone >> $ubuntu_package_name-tempfile08\n    done\n\n    for i in `ls | grep tempfile08`; do\n\t\tfor j in `gawk '{print $1}' $i`; do\n\t\t\tfor k in `pkgfile -q $j`; do\n\t\t\t\techo $k`head -1 $i | gawk '{print $2$3}'`\n\t\t\tdone\n\t\tdone >> `echo $i | sed s'/tempfile08/tempfile09/'`\n    done\n\n    touch tempfile10\n    for ubuntu_package_name in $(sort -u untranslated-names-only); do\n\t\tgrep -q \"^$ubuntu_package_name$\" tempfile10 || echo $ubuntu_package_name >> tempfile10\n    done\n\n    for i in $(for j in `cat tempfile10`; do echo $j-tempfile09; done); do\n\t\tk=`sort $i | uniq -c | gawk '{print $1}' | sort -n | tail -1`\n\t\tif [[ $(sort $i | uniq -c | gawk '{print $1}' | sort -n | grep \"^$k$\" | wc -l) -ge 2 ]]; then\n\t\t\tfor l in `cat $i`; do\n\t\t\t\tfor m in $(sort $i | uniq -c | gawk '{print $1,$2}' | sort -n | grep \"^$k \" | gawk '{print $2}'); do\n\t\t\t\t\techo $l | grep \"^$m$\"\n\t\t\t\tdone\n\t\t\tdone | head -1 >> tempfile11\n\t\telif [[ $(sort $i | uniq -c | gawk '{print $1}' | sort -n | grep \"^$k$\" | wc -l) -eq 1 ]]; then\n\t\t\tsort $i | uniq -c | gawk '{print $1,$2}' | sort -n | grep \"^$k \" | gawk '{print $2}' >> tempfile11\n\t\telse\n\t\t\techo >> tempfile11\n\t\tfi\n    done\n\n    cat tempfile11 | sed s'/=/ = /g' | sed s'/>/ > /g' | sed s'/</ < /g' | sed s'/>  =/>=/g' | sed s'/<  =/<=/g' | sed s'/^lib32-\\|-multilib$//g' > tempfile12\n\n    cat tempfile12 | while read line; do\n\t\tif [[ $(echo \"$line\" | wc -w) -eq 0 ]]; then\n\t\t\techo >> final-check-list\n\t\telif [[ $(echo \"$line\" | wc -w) -eq 1 ]] || [[ $(echo \"$line\" | wc -w) -eq 3 ]]; then\n\t\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}'`\" >> final-check-list\n\t\telif [[ $(echo \"$line\" | wc -w) -eq 5 ]]; then\n\t\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}'`\" >> final-check-list\n\t\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $4}'` `echo \"$line\" | gawk '{print $5}'`\" >> final-check-list\n\t\tfi\n    done\n\n    for i in $(eval echo {1..$(cat untranslated | wc -l)}); do\n\t\tif [[ $(tac final-check-list | sed -n \"\"$i\"{p;q;}\" | gawk '{print $1}') == \"\" ]]; then\n\t\t\techo $(tac untranslated | sed -n \"\"$i\"{p;q;}\") >> new-untranslated\n\t\t\techo $(tac untranslated | sed -n \"\"$i\"{p;q;}\" | gawk '{print $1}') >> new-untranslated-names-only\n\t\telif [[ $(echo \" $(echo $(grep ^pkgname .PKGINFO | gawk '{print $3}' | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//'){-svn,-git,-cvs,-bzr,-darcs,-hg,}) \" | grep -q \" $(tac final-check-list | sed -n \"\"$i\"{p;q;}\" | gawk '{print $1}') \"; echo $?) == 0 ]]; then\n\t\t\techo $(tac untranslated | sed -n \"\"$i\"{p;q;}\" | sed s'/ //') >> missing-files\n\t\tfi\n    done\n\n    rm -rf untranslated untranslated-names-only\nfi\n\n# Third method of translating remaining untranslated .deb packages names into Arch Linux packages names, less accurate, comparing .deb packages names with Arch Linux packages names\nif [[ -e new-untranslated-names-only ]]; then\n    for i in $(sort -u new-untranslated-names-only | grep -v python-support); do\n\n\tj=$(echo \"$i\" | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//')\n\n\tpacman -Ssq $(echo \"$j\" | sed s'/^lib//') | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' > result1\n\tgrep -q \"^$j$\" result1 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" > matches\n\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//')$\" result1 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' >> matches\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $4}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/-/ /g' | gawk '{print $5}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do \n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o - 1))} $(($k + $l + $m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 4))} $(($k + $l + $m + $n + $o - 2))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 3))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o - 1))} $(($k + $l + $m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/-/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 4))} $(($k + $l + $m + $n + $o - 2))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 3))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 2))} $(($k + $l + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 3))} $(($k + $l + $m + $n + $o - 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $4}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/[a-z]/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 3))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} {$(($k + $l + $m + $n + 1))..$(($k + $l + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/[a-z]/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n + $o - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} {$(($k + $l + $m + $n - 1))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n + $o - 3))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} {$(($k + $l + $m + $n))..$(($k + $l + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/-/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o - 1))} $(($k + $m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 3))} $(($k + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o - 1))} $(($k + $m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/-/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 3))} $(($k + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 3))} $(($k + $m + $n + $o - 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/[a-z]/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} {$(($k + $m + $n + 1))..$(($k + $m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /' -e s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/[a-z]/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} $(($k + $l + $m + $n + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} $(($k + $l + $m + $n))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} $(($k + $l + $m + $n))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} $(($k + $l + $m + $n - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n - 1))} $(($k + $l + $m + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} $(($k + $l + $m + $n))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 3))} $(($k + $l + $m + $n - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 2))} $(($k + $l + $m + $n))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m + 1))..$(($k + $l + $m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + $n - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + $m - 1))..$(($k + $l + $m + $n - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + $m))..$(($k + $l + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} $(($k + $m + $n + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} $(($k + $m + $n))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/-//1' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n - 1))} $(($k + $m + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//3' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} $(($k + $m + $n))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} $(($k + $m + $n))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m + 1))..$(($k + $m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+\\.[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/-/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 3))} $(($k + $m + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 2))} $(($k + $m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 3))} $(($k + $m + $n + $o - 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+\\.[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/[a-z]/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n + $o - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} {$(($k + $m + $n))..$(($k + $m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n + $o - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+\\.[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} $(($k + $m + $n))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    for r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 2))} $(($k + $m + $n))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+\\.[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/[a-z]/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + $n - 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $m))..$(($k + $m + $n - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/-/ /g' | gawk '{print $3}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o - 1))} $(($m + $n + $o + 1))); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 2))} $(($m + $n + $o))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p\" >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o - 1))} $(($m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 2))} $(($m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /' -e s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$p\" >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} $(($m + $n + 1))); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} $(($m + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/[a-z]/ /g' | gawk '{print $1}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[a-z]\\+\\.[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/-/ /g' | gawk '{print $4}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o - 1))} $(($m + $n + $o + 1))); do\n\t        grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t        grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t        for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t        done\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t        for r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 2))} $(($m + $n + $o))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p\" >> matches\n\t        done\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t        for r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t        done\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o - 1))} $(($m + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 2))} $(($m + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[a-z]\\+\\.[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t        grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t        grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t        for r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$p\" >> matches\n\t        done\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} {$(($m + $n + 1))..$(($m + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[a-z]\\+\\.[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} $(($m + $n + 1))); do\n\t        grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t        grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t        for r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$p\" >> matches\n\t        done\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n - 1))} $(($m + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[a-z]\\+\\.[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /' | sed s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    p=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | rev)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t        grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$p\" >> matches\n\t        grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$p\" >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($m + 1))..$(($m + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $(($k + $l + $m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($k + $l + $m + 1))- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m + 1))- | rev >> matches\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $(($k + $l + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($k + $l + $m))- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $m))- | rev >> matches\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $(($k + $m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($k + $m + 1))- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m + 1))- | rev >> matches\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $(($k + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($k + $m))- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev >> matches\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+\\.[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    m=$(echo \"$j\" | rev | sed s'/[0-9]/ /g' | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $(($k + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($k + $m))- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $m))- | rev >> matches\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    grep -q \"^$(echo \"$j\" | rev | cut -c $(($m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($m + 1))- | rev >> matches\n\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev >> matches\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[a-z]\\+\\.[a-z]\\+$\"; echo $?) == 0 ]]; then\n\t    m=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    grep -q \"^$(echo \"$j\" | rev | cut -c $(($m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $(($m + 1))- | rev >> matches\n\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($m + 1))- | rev >> matches\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/-/ /g' | gawk '{print $4}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do \n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o - 1))} $(($k + $l + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 2))} {$(($k + $l + $n))..$(($k + $l + $n + $o - 2))} $(($k + $l + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 2))} {$(($k + $l + $n))..$(($k + $l + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 2))} $(($k + $l + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n + $o - 3))} $(($k + $l + $n + $o - 1))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o - 1))} $(($k + $l + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 2))} $(($k + $l + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//2' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/\\./ /g' | gawk '{print $3}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed -e s'/\\./ /g' -e s'/[a-z]/ /g' | gawk '{print $3}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 2))} {$(($k + $l + $n))..$(($k + $l + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n + $o - 2))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} {$(($k + $l + $n + 1))..$(($k + $l + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+\\.[0-9]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/-/ /g' | gawk '{print $3}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $n + $o + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o - 1))} $(($k + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 2))} $(($k + $n + $o))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o - 1))} $(($k + $n + $o + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 2))} $(($k + $n + $o))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | sed s'/\\./ /' | gawk '{print $2}' | wc -c)\n\t    o=$(echo \"$j\" | rev | sed s'/\\./ /' | sed s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $n + $o))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} {$(($k + $n + 1))..$(($k + $n + $o))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n + $o - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} $(($k + $l + $n + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\t    for r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 2))} $(($k + $l + $n))); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n - 1))} $(($k + $l + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    for r in $(eval echo {$(($k + $l))..$(($k + $l + $n - 1))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed 's/\\.//1' | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + $l + 1))..$(($k + $l + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]\\+-[0-9]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed s'/-/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $n + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} $(($k + $n + 1))); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))}); do\n\t\t    for r in $(eval echo {$(($k + 1))..$(($k + $n))}); do\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t\tgrep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    done\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n - 1))} $(($k + $n + 1))); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//2' | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    n=$(echo \"$j\" | rev | sed -e s'/-/ /g' -e s'/[a-z]/ /g' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $n))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n))}); do\n\t\t    grep -q \"^$(echo $(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\t    grep -q \"^$(echo $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev))$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)-$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | cut -c $q- | rev)\" >> matches\n\t\tdone\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor r in $(eval echo {$(($k + 1))..$(($k + $n))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $r- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $r- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/-/ /' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l - 1))}); do\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 2))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed -e 's/\\.//1' -e 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+\\.[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/\\./ /' | gawk '{print $1}' | wc -c)\n\t    l=$(echo \"$j\" | rev | sed -e s'/\\./ /' -e s'/[a-z]/ /' | gawk '{print $2}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + $l))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))} {$(($k + 1))..$(($k + $l))}); do\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$(($k + $l - 1))}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/\\.//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+-[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/-/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $(($k + 1))- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$(($k - 1))}); do\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\t    if [[ ! -e matches ]]; then\n\t\tfor q in $(eval echo {1..$k}); do\n\t\t    grep -q \"^$(echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | sed 's/-//1' | cut -c $q- | rev >> matches\n\t\tdone\n\t    fi\n\tfi\n\n\tif [[ ! -e matches ]] && [[ $(echo \"$j\" | grep -q \"^[[:alnum:]]*[a-z]\\+[0-9]\\+$\"; echo $?) == 0 ]]; then\n\t    k=$(echo \"$j\" | rev | sed s'/[a-z]/ /' | gawk '{print $1}' | wc -c)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | rev | cut -c $k- | rev) | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | sort -u > result2\n\t    for q in $(eval echo {1..$k}); do\n\t\tgrep -q \"^$(echo \"$j\" | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | rev | cut -c $q- | rev >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev)$\" result2 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | rev | cut -c $q- | rev >> matches\n\t    done\n\tfi\n\n\tif [[ ! -e matches ]]; then\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | sed s'/[0-9]\\|\\.\\|-/ /g') | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' > result3\n\t    grep -q \"^$(echo \"$j\" | sed -e s'/[0-9]\\|\\.//g' -e s'/-\\+/-/g' -e s'/-$//g')$\" result3 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed -e s'/[0-9]\\|\\.//g' -e s'/-\\+/-/g' -e s'/-$//g' >> matches\n\t    grep -q \"^$(echo \"$j\" | sed s'/^lib//' | sed -e s'/[0-9]\\|\\.//g' -e s'/-\\+/-/g' -e s'/-$//g')$\" result3 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | sed -e s'/[0-9]\\|\\.//g' -e s'/-\\+/-/g' -e s'/-$//g' >> matches\n\tfi\n\n\tif [[ ! -e matches ]]; then\n\t    word_count=$(echo \"$j\" | sed s'/^lib//' | sed s'/[0-9]\\|\\.\\|-/ /g' | wc -w)\n\t    pacman -Ssq $(echo \"$j\" | sed s'/^lib//' | sed s'/[0-9]\\|\\.\\|-/ /g' | gawk '{print $1}') | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' > result3\n\t    for s in $(eval echo {$word_count..1}); do\n\t\tgrep -q \"^$(echo \"$j\" | sed -e s'/[0-9]\\|\\.\\|-/ /g' -e s'/ \\+/ /g' | cut -d ' ' -f1-$s | sed s'/ /-/g')$\" result3 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed -e s'/[0-9]\\|\\.\\|-/ /g' -e s'/ \\+/ /g' | cut -d ' ' -f1-$s | sed s'/ /-/g' >> matches\n\t\tgrep -q \"^$(echo \"$j\" | sed s'/^lib//' | sed -e s'/[0-9]\\|\\.\\|-/ /g' -e s'/ \\+/ /g' | cut -d ' ' -f1-$s | sed s'/ /-/g')$\" result3 /var/cache/debtap/virtual-packages /var/cache/debtap/aur-packages && echo \"$j\" | sed s'/^lib//' | sed -e s'/[0-9]\\|\\.\\|-/ /g' -e s'/ \\+/ /g' | cut -d ' ' -f1-$s | sed s'/ /-/g' >> matches\n\t    done\n\tfi\n\n\tif [[ -e matches ]] && [[ $(grep ^pkgname .PKGINFO | gawk '{print $3}' | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//' | grep -q \"^$(head -1 matches)$\"; echo $?) != 0 ]]; then\n\t    for t in {svn,git,cvs,bzr,darcs,hg}; do\n\t\tif [[ $(echo \"$i\" | grep -q \"\\-$t$\"; echo $?) == 0 ]]; then\n\t\t    grep \"^$i$\\|^$i \" new-untranslated | sed s\"/^$i/$(head -1 matches)-$t/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\t\tfi\n\t    done\n\t    if [[ $(echo \"$i\" | grep -q '\\-svn$\\|\\-git$\\|\\-cvs$\\|\\-bzr$\\|\\-darcs$\\|\\-hg$'; echo $?) != 0 ]]; then\n\t        grep \"^$i$\\|^$i \" new-untranslated | sed s\"/^$i/$(head -1 matches)/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\t    fi\n\t    sed -i \"/^$i$\\|^$i /d\" new-untranslated\n\tfi\n\n\trm -rf matches result*\n    done\n\n    rm -rf new-untranslated-names-only\nfi\n\n# Appending untranslated packages names (if any exist) to the translated packages names list\nif [[ $(cat new-untranslated 2> /dev/null | wc -l) -ne 0 ]]; then\n    tac new-untranslated | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n    gawk '{print $1}' new-untranslated | sort -u > $(echo `ls | grep initial-check-list` | sed s'/initial-check-list/untranslated-names-only/')\nfi\nrm -rf new-untranslated\n\n# Sorting packages with missing files (if any exist)\nif [[ -e missing-files ]]; then\n    sort -u missing-files > $(echo `ls | grep initial-check-list` | sed s'/initial-check-list/missing-files/')\n    rm -rf missing-files\nfi\n\n# Special rules for optional dependencies\nif [[ -e optional-dependencies-untranslated-names-only ]]; then\n    if [[ -e dependencies-untranslated-names-only ]]; then\n        for i in `cat optional-dependencies-untranslated-names-only`; do\n            if [[ $(grep -q \"^$i$\" dependencies-untranslated-names-only; echo $?) != 0 ]]; then\n                echo \"$i\" >> optional-dependencies-untranslated-names-only-1\n            fi\n        done\n        rm -rf optional-dependencies-untranslated-names-only\n    else\n        mv optional-dependencies-untranslated-names-only optional-dependencies-untranslated-names-only-1\n    fi\nfi\n\n# Appending ready translated names (if any needed) to the translated packages names list\ngrep -q \"^fonts-freefont-ttf$\\|^fonts-freefont-ttf \" tempfile02 && echo ttf-freefont >> final-check-list\ngrep -q \"^fonts-liberation$\\|^fonts-liberation \" tempfile02 && echo ttf-liberation >> final-check-list\ngrep -q \"^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \" tempfile02 && echo ttf-ms-fonts >> final-check-list\ngrep -q \"^default-jre$\\|^default-jre \" tempfile02 && echo java-runtime >> final-check-list\ngrep -q \"^python:any$\\|^python:any \" tempfile02 && echo python >> final-check-list\ngrep \"^openjdk-[0-9]+-jdk$\\|^openjdk-[0-9]+-jdk \" tempfile02 | sort -uV | tail -1 | sed s\"/openjdk-\\([0-9]\\+\\)-jdk/jdk\\1-openjdk/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\ngrep \"^openjdk-[0-9]+-jre\\(-headless\\)\\?$\\|^openjdk-[0-9]+-jre\\(-headless\\)\\? \" tempfile02 | sort -uV | tail -1 | sed s\"/openjdk-\\([0-9]\\+\\)-jre/jre\\1-openjdk/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\ngrep \"^libstdc[0-9]+$\\|libstdc[0-9]+ \" tempfile02 | sort -uV | tail -1 | sed s\"/libstdc\\([0-9]\\+\\)/$(pacman -Ssq libstdc | sort -uV | tail -1)/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\ngrep \"^qt[0-9]+-default$\\|qt[0-9]+-default \" tempfile02 | sed s\"/qt\\([0-9]\\+\\)-default/qt\\1-base/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\nif [[ $pseudo != set ]]; then\n\tgrep -q \"^xlibs$\\|^xlibs \" tempfile02 && echo libx11 >> final-check-list\n\tgrep -q \"^libgl1$\\|^libgl1 \" tempfile02 && echo libgl >> final-check-list\n\tgrep -q \"^libglu1$\\|^libglu1 \" tempfile02 && echo glu >> final-check-list\n\tgrep \"^libpango$\\|^libpango \" tempfile02 | sed s\"/libpango/pango/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^libpangomm$\\|^libpangomm \" tempfile02 | sed s\"/libpangomm/pangomm/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^libcupsys2$\\|^libcupsys2 \" tempfile02 | sed s\"/libcupsys2/libcups/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^jackd[0-9]*$\\|^jackd-[0-9]* \" tempfile02 | sort -uV | tail -1 | sed s\"/jackd\\([0-9]\\*\\)/jack\\1/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\nelse\n\tgrep -q \"^xlibs$\\|^xlibs \" tempfile02 && echo lib32-libx11 >> final-check-list\n\tgrep -q \"^libgl1$\\|^libgl1 \" tempfile02 && echo lib32-libgl >> final-check-list\n\tgrep -q \"^libglu1$\\|^libglu1 \" tempfile02 && echo lib32-glu >> final-check-list\n\tgrep \"^libpango$\\|^libpango \" tempfile02 | sed s\"/libpango/lib32-pango/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^libpangomm$\\|^libpangomm \" tempfile02 | sed s\"/libpangomm/lib32-pangomm/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^libcupsys2$\\|^libcupsys2 \" tempfile02 | sed s\"/libcupsys2/lib32-libcups/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\n\tgrep \"^jackd[0-9]*$\\|^jackd-[0-9]* \" tempfile02 | sort -uV | tail -1 | sed s\"/jackd\\([0-9]\\*\\)/lib32-jack\\1/g\" | sed s'/=/= /g' | sed s'/>/> /g' | sed s'/</< /g' | sed s'/> =/>=/g' | sed s'/< =/<=/g' >> final-check-list\nfi\n\n# Stripping unnecessary symbols and words from packages versions\ngrep -v \"^$\" final-check-list | while read line; do\n    echo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}' | sed s'/^[^:]*://' | sed -e s'/[+~]/-/g' -e s'/[-._]alpha/alpha/' -e s'/[-._]beta/beta/' -e s'/[-._]pre/pre/' -e s'/[-._]rc/rc/' -e s'/[-._]dfsg/dfsg/' | gawk -F 'dev' '{print $1}' | sed -e s'/-\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+\\.[0-9]\\+//g' -e s'/-[0-9]\\+\\.[0-9]\\+\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]\\+\\.[0-9]\\+\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/-[0-9]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+[a-z]*[0-9]*//g' -e s'/[a-z]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]\\+\\.[0-9]\\+[a-z]*[0-9]*//g' -e s'/[a-z]*\\(ubuntu\\|debian\\|build\\|dfsg\\|nobinonly\\|ppa\\|nmu\\|deb\\)[0-9]*[a-z]*[0-9]*//g' -e s'/--/-/g' -e s'/\\.\\././g' | sed s'/\\.$//'`\" >> tempfile13\ndone\n\n# Special rules for version control systems\ncat tempfile13 | while read line; do\n    for i in {git,bzr,darcs,hg}; do\n\t\tif [[ $(echo \"$line\" | gawk '{print $3}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"$(echo `echo \"$line\" | gawk '{print $1}'`-$i | sed s\"/-$i-$i$/-$i/\") `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}' | gawk -F \"$i\" '{print $2}' | gawk -F '-' '{print $1}'`\" >> tempfile14\n\t\tfi\n    done\n    for i in {svn.r,svnr}; do\n\t\tif [[ $(echo \"$line\" | gawk '{print $3}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"$(echo `echo \"$line\" | gawk '{print $1}'`-svn | sed s'/-svn-svn$/-svn/') `echo \"$line\" | gawk '{print $2}'` r`echo \"$line\" | gawk '{print $3}' | gawk -F \"$i\" '{print $2}' | gawk -F '-' '{print $1}'`\" >> tempfile14\n\t\tfi\n    done\n    if [[ $(echo \"$line\" | gawk '{print $3}' | grep -q svn; echo $?) == 0 ]] && [[ $(echo \"$line\" | gawk '{print $3}' | grep -q \"svn\\.r\\|svnr\"; echo $?) != 0 ]]; then\n\t\techo \"$(echo `echo \"$line\" | gawk '{print $1}'`-svn | sed s'/-svn-svn$/-svn/') `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}' | gawk -F 'svn' '{print $2}' | gawk -F '-' '{print $1}'`\" >> tempfile14\n    fi\n    for i in {cvs,CVS}; do\n\t\tif [[ $(echo \"$line\" | gawk '{print $3}' | grep -q $i; echo $?) == 0 ]]; then\n\t\t\techo \"$(echo `echo \"$line\" | gawk '{print $1}'`-cvs | sed s'/-cvs-cvs$/-cvs/') `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}' | sed -e s\"/[-.]$i/ /g\" -e s\"/$i/ /g\" -e s\"/-/ /g\" | gawk '{print $2}'`\" >> tempfile14\n\t\tfi\n    done\n    if [[ $(echo \"$line\" | gawk '{print $3}' | grep -q \"svn\\|git\\|cvs\\|CVS\\|bzr\\|darcs\\|hg\"; echo $?) != 0 ]]; then\n\t\techo \"`echo \"$line\" | gawk '{print $1}'` `echo \"$line\" | gawk '{print $2}'` `echo \"$line\" | gawk '{print $3}' | gawk -F '-[0-9]' '{print $1}' | sed s'/-/./'`\" >> tempfile14\n    fi\ndone\n\nif [[ $pseudo != set ]]; then\n\tmv tempfile14 tempfile15\nelse\n\t# Special rules for multilib packages\n\tcat tempfile14 | while read line; do\n\t\ti=$(echo \"$line\" | gawk '{print $1}')\n\t\tpacman -Ssq \"lib32-$i\" > result\n\t\tgrep -q \"^lib32-$i$\" result /var/cache/debtap/aur-packages && echo \"$line\" | sed s\"/^$i/lib32-$i/\" >> tempfile15\n\t\tgrep -q \"^lib32-$i$\" result /var/cache/debtap/aur-packages || echo \"$line\" >> tempfile15\n\tdone\n\trm -rf result\nfi\n\n# Special rules for non optional dependencies\nif [[ -e dependencies-initial-check-list ]]; then\n    grep -q qt tempfile15 && echo hicolor-icon-theme >> tempfile15\n    grep -q gtk tempfile15 && echo -e \"hicolor-icon-theme\\ndesktop-file-utils\" >> tempfile15\n    grep -q ^Python-Version: control && echo python`grep ^Python-Version: control | gawk '{print $2}' | sed s'/\\.//g'` >> tempfile15\n\t# Fourth method of finding packages names exclusively for non-optional dependencies (accurate)\n\tfor i in $(readelf -d $(find ./ -executable -type f) 2> /dev/null | grep NEEDED | gawk '{print $5}' | sort -u | sed s'/\\[\\|\\]//g'); do\n\t\tpkgfile -q \"$i\" | head -1 >> tempfile15\n\tdone\n\t# Removing packages names that are part of base group (if any exist)\n\ttouch tempfile15-1\n\tsort -u tempfile15 | grep -v '^$' | while read line; do\n\t\tif [[ $(grep -q \"^$(echo \"$line\" | gawk '{print $1}' | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//')$\" /var/cache/debtap/base-packages; echo $?) != 0 ]]; then\n\t\t\techo \"$line\" >> tempfile15-1\n\t\tfi\n\tdone\n\tmv tempfile15-1 tempfile15\nfi\n\n# Sorting packages names and versions\nsort -u tempfile15 > tempfile16\n\n# Sorting only packages names\ngawk '{print $1}' tempfile16 | sort -u > tempfile17\n\n# Removing packages names that are the same with the name of the package to be converted from translated packages list (if any exist)\ntouch tempfile18\nfor i in `cat tempfile17`; do\n    if [[ $(echo \" $(echo $(grep ^pkgname .PKGINFO | gawk '{print $3}' | sed s'/-svn$\\|-git$\\|-cvs$\\|-bzr$\\|-darcs$\\|-hg$//'){-svn,-git,-cvs,-bzr,-darcs,-hg,}) \" | grep -q \" $(echo $i | sed s'/^lib32-\\|-multilib$//') \"; echo $?) != 0 ]]; then\n\t\techo \"$i\" >> tempfile18\n\t\tgrep \"^$i$\\|^$i \" tempfile16 >> $i-tempfile19\n    fi\ndone\n\ntouch tempfile22\nif [[ $wipeout != set ]] && [[ $(ls *-tempfile19 &> /dev/null; echo $?) == 0 ]]; then\n\t# Isolating versions from packages\n\tfor i in `ls | grep tempfile19`; do\n\t\tif [[ $(grep -q \"=\\|>\\|<\" $i; echo $?) != 0 ]]; then\n\t\t\tcat $i >> `echo $i | sed s'/tempfile19/tempfile21/'`\n\t\telse\n\t\t\tcat $i | while read line; do\n\t\t\t\techo $line | gawk '{print $3}' | sed -e s'/\\.[a-z]/ /g' -e s'/[a-z]/ /g' | gawk '{print $1}' >> `echo $i | sed s'/tempfile19/tempfile20/'`\n\t\t\tdone\n\t\tfi\n\tdone\n\n\t# Sorting versions for each package\n\tfor i in `ls | grep tempfile20`; do\n\t\tj=`echo $i | sed s'/tempfile20/tempfile19/'`\n\t\tk=`echo $i | sed s'/tempfile20/tempfile21/'`\n\t\tfor l in `sort -uV $i | grep -v \"^$\"`; do\n\t\t\tgrep -q \"$l[a-z]\\+\" $j && grep \"$l[a-z]\\+\" $j | sort -V >> $k\n\t\t\tgrep -q \"$l$\" $j && grep \"$l$\" $j >> $k\n\t\t\tgrep -q \"$l\\.[a-z]\\+\" $j && grep \"$l\\.[a-z]\\+\" $j | sort -V >> $k\n\t\tdone\n\tdone\n\n\t# Choosing the appropriate version for each package\n\tfor i in `ls | grep tempfile21`; do\n\t\tif [[ $(grep -q \"=\\|>\\|<\" $i; echo $?) != 0 ]]; then\n\t\t\tcat $i >> tempfile22\n\t\telif [[ $(grep -q \"=\" $i; echo $?) == 0 ]] && [[ $(grep -q \">\\|<\" $i; echo $?) != 0 ]]; then\n\t\t\tgrep \"=\" $i | tail -1 | sed s'/ //g' >> tempfile22\n\t\telif [[ $(grep -q \">\" $i; echo $?) == 0 ]] && [[ $(grep -q \"<\" $i; echo $?) != 0 ]]; then\n\t\t\tgrep \">\" $i | tail -1 | sed s'/ //g' >> tempfile22\n\t\telif [[ $(grep -q \"<\" $i; echo $?) == 0 ]] && [[ $(grep -q \">\" $i; echo $?) != 0 ]]; then\n\t\t\tgrep \"<\" $i | head -1 | sed s'/ //g' >> tempfile22\n\t\telif [[ $(grep -q \">\" $i; echo $?) == 0 ]] && [[ $(grep -q \"<\" $i; echo $?) == 0 ]]; then\n\t\t\tgrep \">\" $i | tail -1 | sed s'/ //g' >> tempfile22\n\t\t\tgrep \"<\" $i | head -1 | sed s'/ //g' >> tempfile22\n\t\tfi\n\tdone\nfi\n}\n\n# Generating replacements fields\nif [[ $(grep -q ^Replaces: control; echo $?) == 0 ]]; then\n    grep -i ^Replaces: control | sed -e s'/^Replaces://g' -e s'/^ //g' -e s'/ (/(/g' -e s'/= /=/g' -e s'/>> />/g' -e s'/<< /</g' -e s'/,\\||/ /g' -e s'/  / /g' | while read line; do\n\t\tfor word in $line; do\n\t\t\techo $word >> tempfile01\n\t\tdone\n    done\n    sed -e s'/(/ /g' -e s'/)//g' tempfile01 | sort > tempfile02\n    grep -v '^xlibs$\\|^xlibs \\|^libgl1$\\|^libgl1 \\|^libglu1$\\|^libglu1 \\|^default-jre$\\|^default-jre \\|^openjdk-[0-9]+-[jdk|jre]\\|^libstdc[0-9]+$\\|^libstdc[0-9]+ \\|^qt[0-9]+-default$\\|^qt[0-9]+-default \\|^python:any$\\|^python:any \\|^libpango\\|^libcupsys2$\\|^libcupsys2 \\|^jackd[0-9]*$\\|^jackd[0-9]* \\|^fonts-freefont-ttf$\\|^fonts-freefont-ttf \\|^fonts-liberation$\\|^fonts-liberation \\|^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \\|^dpkg$\\|^dpkg \\|^apt$\\|^apt \\|^apt-get$\\|^apt-get \\|^aptitude$\\|^aptitude \\|^debconf' tempfile02 > replacements-initial-check-list\n    packages-names-translator\n\tif [[ $wipeout != set ]]; then\n\t\tfor i in `sort -u tempfile22`; do echo \"replaces = $i\" >> .PKGINFO; done\n\telse\n\t\tfor i in `sort -u tempfile18`; do echo \"replaces = $i\" >> .PKGINFO; done\n\tfi\n\trm -rf *tempfile* replacements-initial-check-list final-check-list\nfi\n\n# Generating conflicts fields\nif [[ $(grep -q ^Conflicts: control; echo $?) == 0 ]]; then\n    grep -i ^Conflicts: control | sed -e s'/^Conflicts://g' -e s'/^ //g' -e s'/ (/(/g' -e s'/= /=/g' -e s'/>> />/g' -e s'/<< /</g' -e s'/,\\||/ /g' -e s'/  / /g' | while read line; do\n\t\tfor word in $line; do\n\t\t\techo $word >> tempfile01\n\t\tdone\n    done\n    sed -e s'/(/ /g' -e s'/)//g' tempfile01 | sort > tempfile02\n    grep -v 'xlibs$\\|^xlibs \\|^libgl1$\\|^libgl1 \\|^libglu1$\\|^libglu1 \\|^default-jre$\\|^default-jre \\|^openjdk-[0-9]+-[jdk|jre]\\|^libstdc[0-9]+$\\|^libstdc[0-9]+ \\|^qt[0-9]+-default$\\|^qt[0-9]+-default \\|^python:any$\\|^python:any \\|^libpango\\|^libcupsys2$\\|^libcupsys2 \\|^jackd[0-9]*$\\|^jackd[0-9]* \\|^fonts-freefont-ttf$\\|^fonts-freefont-ttf \\|^fonts-liberation$\\|^fonts-liberation \\|^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \\|^dpkg$\\|^dpkg \\|^apt$\\|^apt \\|^apt-get$\\|^apt-get \\|^aptitude$\\|^aptitude \\|^debconf' tempfile02 > conflicts-initial-check-list\n    packages-names-translator\n\tif [[ $wipeout != set ]]; then\n\t\tfor i in `sort -u tempfile22`; do echo \"conflict = $i\" >> .PKGINFO; done\n\telse\n\t\tfor i in `sort -u tempfile18`; do echo \"conflict = $i\" >> .PKGINFO; done\n\tfi\n\trm -rf *tempfile* conflicts-initial-check-list final-check-list\nfi\n\n# Generating provisions fields\nif [[ $(grep -q ^Provides: control; echo $?) == 0 ]]; then\n    grep -i ^Provides: control | sed -e s'/^Provides://g' -e s'/^ //g' -e s'/ (/(/g' -e s'/= /=/g' -e s'/>> />/g' -e s'/<< /</g' -e s'/,\\||/ /g' -e s'/  / /g' | while read line; do\n\t\tfor word in $line; do\n\t\t\techo $word >> tempfile01\n\t\tdone\n    done\n    sed -e s'/(/ /g' -e s'/)//g' tempfile01 | sort > tempfile02\n    grep -v 'xlibs$\\|^xlibs \\|^libgl1$\\|^libgl1 \\|^libglu1$\\|^libglu1 \\|^default-jre$\\|^default-jre \\|^openjdk-[0-9]+-[jdk|jre]\\|^libstdc[0-9]+$\\|^libstdc[0-9]+ \\|^qt[0-9]+-default$\\|^qt[0-9]+-default \\|^python:any$\\|^python:any \\|^libpango\\|^libcupsys2$\\|^libcupsys2 \\|^jackd[0-9]*$\\|^jackd[0-9]* \\|^fonts-freefont-ttf$\\|^fonts-freefont-ttf \\|^fonts-liberation$\\|^fonts-liberation \\|^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \\|^dpkg$\\|^dpkg \\|^apt$\\|^apt \\|^apt-get$\\|^apt-get \\|^aptitude$\\|^aptitude \\|^debconf' tempfile02 > provisions-initial-check-list\n    packages-names-translator\n\tif [[ $wipeout != set ]] && [[ $pkgbuild != set ]] && [[ $Pkgbuild != set ]]; then\n\t\tfor i in `sort -u tempfile22`; do echo \"provides = $i\" >> .PKGINFO; done\n\telse\n\t\tfor i in `sort -u tempfile18`; do echo \"provides = $i\" >> .PKGINFO; done\n\tfi\n\trm -rf *tempfile* provisions-initial-check-list final-check-list\nfi\n\n# Generating backups fields\nif [[ -e conffiles ]]; then\n    sed s'/^\\///g' conffiles > tempfile\n    if [[ $pseudo != set ]]; then\n\t\tif [[ $(grep -i ^Architecture: control | grep -q i386; echo $?) == 0 ]]; then\n\t\t\tsed -i -e s'/^bin\\//usr\\/bin\\//g' -e s'/^sbin\\//usr\\/bin\\//g' -e s'/^usr\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/games\\//usr\\/bin\\//g' -e s'/^lib\\//usr\\/lib\\//g' -e s'/^lib32\\//usr\\/lib\\//g' -e s'/^usr\\/lib32\\//usr\\/lib\\//g' -e s'/^usr\\/local\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/games\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/lib32\\//usr\\/lib\\//g' -e s'/^usr\\/local\\//usr\\//g' tempfile\n\t\telse\n\t\t\tsed -i -e s'/^bin\\//usr\\/bin\\//g' -e s'/^sbin\\//usr\\/bin\\//g' -e s'/^usr\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/games\\//usr\\/bin\\//g' -e s'/^lib\\//usr\\/lib\\//g' -e s'/^lib32\\//usr\\/lib32\\//g' -e s'/^lib64\\//usr\\/lib\\//g' -e s'/^usr\\/lib64\\//usr\\/lib\\//g' -e s'/^usr\\/local\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/games\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/lib64\\//usr\\/lib\\//g' -e s'/^usr\\/local\\//usr\\//g' tempfile\n\t\tfi\n\telse\n\t\tsed -i -e s'/^bin\\//usr\\/bin\\//g' -e s'/^sbin\\//usr\\/bin\\//g' -e s'/^usr\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/games\\//usr\\/bin\\//g' -e s'/^lib\\//usr\\/lib32\\//g' -e s'/^lib32\\//usr\\/lib32\\//g' -e s'/^usr\\/lib\\//usr\\/lib32\\//g' -e s'/^usr\\/local\\/sbin\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/games\\//usr\\/bin\\//g' -e s'/^usr\\/local\\/lib\\//usr\\/lib32\\//g' -e s'/^usr\\/local\\//usr\\//g' tempfile\n\tfi\n\tfor i in `sort -u tempfile`; do echo \"backup = $i\" >> .PKGINFO; done\n\trm -rf tempfile\nfi\n\n# Generating non optional dependencies fields\nif [[ $(grep -q '^Depends:\\|^Pre-Depends:' control; echo $?) == 0 ]]; then\n    grep '^Depends:\\|^Pre-Depends:' control | sed -e s'/^Pre-Depends://g' -e s'/^Depends://g' -e s'/^ //g' -e s'/ (/(/g' -e s'/= /=/g' -e s'/>> />/g' -e s'/<< /</g' -e s'/,\\||/ /g' -e s'/  / /g' | while read line; do\n\t\tfor word in $line; do\n\t\t\techo $word >> tempfile01\n\t\tdone\n    done\n    sed -e s'/(/ /g' -e s'/)//g' tempfile01 | sort > tempfile02\n    grep -v 'xlibs$\\|^xlibs \\|^libgl1$\\|^libgl1 \\|^libglu1$\\|^libglu1 \\|^default-jre$\\|^default-jre \\|^openjdk-[0-9]+-[jdk|jre]\\|^libstdc[0-9]+$\\|^libstdc[0-9]+ \\|^qt[0-9]+-default$\\|^qt[0-9]+-default \\|^python:any$\\|^python:any \\|^libpango\\|^libcupsys2$\\|^libcupsys2 \\|^jackd[0-9]*$\\|^jackd[0-9]* \\|^fonts-freefont-ttf$\\|^fonts-freefont-ttf \\|^fonts-liberation$\\|^fonts-liberation \\|^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \\|^dpkg$\\|^dpkg \\|^apt$\\|^apt \\|^apt-get$\\|^apt-get \\|^aptitude$\\|^aptitude \\|^debconf' tempfile02 > dependencies-initial-check-list\n    packages-names-translator\n\tif [[ $wipeout != set ]]; then\n\t\tfor i in `sort -u tempfile22`; do echo \"depend = $i\" >> .PKGINFO; done\n\telse\n\t\tfor i in `sort -u tempfile18`; do echo \"depend = $i\" >> .PKGINFO; done\n\tfi\n\trm -rf *tempfile* dependencies-initial-check-list final-check-list\nfi\n\n# Generating optional dependencies fields\nif [[ $(grep -q '^Recommends:\\|^Suggests:' control; echo $?) == 0 ]]; then\n    grep '^Recommends:\\|^Suggests:' control | sed -e s'/^Recommends:\\|^Suggests://g' -e s'/^ //g' -e s'/ (/(/g' -e s'/= /=/g' -e s'/>> />/g' -e s'/<< /</g' -e s'/,\\||/ /g' -e s'/  / /g' | while read line; do\n\t\tfor word in $line; do\n\t\t\techo $word >> tempfile01\n\t\tdone\n    done\n    sed -e s'/(/ /g' -e s'/)//g' tempfile01 | sort > tempfile02\n    grep -v 'xlibs$\\|^xlibs \\|^libgl1$\\|^libgl1 \\|^libglu1$\\|^libglu1 \\|^default-jre$\\|^default-jre \\|^openjdk-[0-9]+-[jdk|jre]\\|^libstdc[0-9]+$\\|^libstdc[0-9]+ \\|^qt[0-9]+-default$\\|^qt[0-9]+-default \\|^python:any$\\|^python:any \\|^libpango\\|^libcupsys2$\\|^libcupsys2 \\|^jackd[0-9]*$\\|^jackd[0-9]* \\|^fonts-freefont-ttf$\\|^fonts-freefont-ttf \\|^fonts-liberation$\\|^fonts-liberation \\|^ttf-mscorefonts-installer$\\|^ttf-mscorefonts-installer \\|^dpkg$\\|^dpkg \\|^apt$\\|^apt \\|^apt-get$\\|^apt-get \\|^aptitude$\\|^aptitude \\|^debconf' tempfile02 > optional-dependencies-initial-check-list\n    packages-names-translator\n\tif [[ $wipeout != set ]]; then\n\t\tfor i in `sort -u tempfile22`; do\n\t\t\tj=$(echo $i | sed s'/=\\|>\\|</ /' | gawk '{print $1}')\n\t\t\tif [[ $(grep -q \"^depend = $j$\\|^depend = $j[=|>|<]\" .PKGINFO; echo $?) != 0 ]]; then\n\t\t\t\techo \"optdepend = $i\" >> .PKGINFO\n\t\t\tfi\n\t\tdone\n\telse\n\t\tfor i in `sort -u tempfile18`; do\n\t\t\tif [[ $(grep -q \"^depend = $i$\\|^depend = $i[=|>|<]\" .PKGINFO; echo $?) != 0 ]]; then\n\t\t\t\techo \"optdepend = $i\" >> .PKGINFO\n\t\t\tfi\n\t\tdone\n\tfi\n\trm -rf *tempfile* optional-dependencies-initial-check-list final-check-list\nfi\n\n# Moving report files to /tmp/debtap (if any exist)\nrm -rf /tmp/debtap 2> /dev/null\nmkdir /tmp/debtap 2> /dev/null\nif [[ $(echo $?) != 0 ]]; then\n\techo -e \"${red}Error: Cannot create /tmp/debtap, permission denied${NC}\"\nfi\nmv *untranslated* /tmp/debtap 2> /dev/null\nmv *missing-files /tmp/debtap 2> /dev/null\n\n# Report of (warning messages for) untranslated packages names and packages with missing files (if any exist)\nif [[ -e /tmp/debtap/dependencies-untranslated-names-only ]]; then\n    echo -e \"\\n${lightred}Warning: These dependencies (depend =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    echo `cat /tmp/debtap/dependencies-untranslated-names-only` | sed s'/ /, /g'\nfi\nif [[ -e /tmp/debtap/dependencies-missing-files ]]; then\n    if [[ -e /tmp/debtap/dependencies-untranslated-names-only ]]; then\n\techo -e \"${lightred}Warning: These packages names could not be included as dependencies, because debtap has translated them into the same name with the package for conversion. This happens sometimes when you convert packages that already exist in your repositories (which is a bad idea in general). The following packages contain files that are already included in the package from your repositories (without these files your converted package may be dysfunctional):${NC}\"\n    else\n\techo -e \"\\n${lightred}Warning: These packages names could not be included as dependencies, because debtap has translated them into the same name with the package for conversion. This happens sometimes when you convert packages that already exist in your repositories (which is a bad idea in general). The following packages contain files that are already included in the package from your repositories (without these files your converted package may be dysfunctional):${NC}\"\n    fi\n    echo `cat /tmp/debtap/dependencies-missing-files` | sed s'/ /, /g'\nfi\nif [[ -e /tmp/debtap/optional-dependencies-untranslated-names-only-1 ]]; then\n    if [[ -e /tmp/debtap/dependencies-untranslated-names-only ]] || [[ -e /tmp/debtap/dependencies-missing-files ]]; then\n\techo -e \"${lightred}Warning: These optional dependencies (optdepend =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    else\n\techo -e \"\\n${lightred}Warning: These optional dependencies (optdepend =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    fi\n    echo `cat /tmp/debtap/optional-dependencies-untranslated-names-only-1` | sed s'/ /, /g'\nfi\nif [[ -e /tmp/debtap/replacements-untranslated-names-only ]]; then\n    if [[ -e /tmp/debtap/dependencies-untranslated-names-only ]] || [[ -e /tmp/debtap/dependencies-missing-files ]] || [[ -e /tmp/debtap/optional-dependencies-untranslated-names-only-1 ]]; then\n\techo -e \"${lightred}Warning: These replacements (replaces =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    else\n\techo -e \"\\n${lightred}Warning: These replacements (replaces =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    fi\n    echo `cat /tmp/debtap/replacements-untranslated-names-only` | sed s'/ /, /g'\nfi\nif [[ -e /tmp/debtap/conflicts-untranslated-names-only ]]; then\n    if [[ -e /tmp/debtap/dependencies-untranslated-names-only ]] || [[ -e /tmp/debtap/dependencies-missing-files ]] || [[ -e /tmp/debtap/optional-dependencies-untranslated-names-only-1 ]] || [[ -e /tmp/debtap/replacements-untranslated-names-only ]]; then\n\techo -e \"${lightred}Warning: These conflicts (conflict =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    else\n\techo -e \"\\n${lightred}Warning: These conflicts (conflict =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    fi\n    echo `cat /tmp/debtap/conflicts-untranslated-names-only` | sed s'/ /, /g'\nfi\nif [[ -e /tmp/debtap/provisions-untranslated-names-only ]]; then\n    if [[ -e /tmp/debtap/dependencies-untranslated-names-only ]] || [[ -e /tmp/debtap/dependencies-missing-files ]] || [[ -e /tmp/debtap/optional-dependencies-untranslated-names-only-1 ]] || [[ -e /tmp/debtap/replacements-untranslated-names-only ]] || [[ -e /tmp/debtap/conflicts-untranslated-names-only ]]; then\n\techo -e \"${lightred}Warning: These provisions (provides =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    else\n\techo -e \"\\n${lightred}Warning: These provisions (provides =   fields) could not be translated into Arch Linux packages names:${NC}\"\n    fi\n    echo `cat /tmp/debtap/provisions-untranslated-names-only` | sed s'/ /, /g'\nfi\n\n# Generating .INSTALL file (if necessary)\necho -e \"\\n${lightgreen}==>${NC} ${bold}Checking and generating .INSTALL file (if necessary)...${normal}\"\n\nSAVEIFS=$IFS\nIFS=$'\\n'\necho \"pre_install() {\" > tempfile1\nif [[ -e preinst ]]; then\n\tsed -i -e '/how this script works/,/debian-policy/d' -e '/how this script works/,/version>/d' -e '/dh_installdeb/,/DEBHELPER/d' preinst\n\tif [[ $(grep -c \"case in \\$1\\|case in \\${1}\\|case in \\\"\\$1\\\"\\|case in \\\"\\${1}\\\"\\|case \\$1 in\\|case \\${1} in\\|case \\\"\\$1\\\" in\\|case \\\"\\${1}\\\" in\" preinst) == $(grep -c \"case \" preinst) ]]; then\n\t\tsed -i -e '/case in \\$1/,/upgrade/{/upgrade/!d}' -e '/case in \\${1}/,/upgrade/{/upgrade/!d}' -e '/case in \"\\$1\"/,/upgrade/{/upgrade/!d}' -e '/case in \"\\${1}\"/,/upgrade/{/upgrade/!d}' -e '/case \\$1 in/,/upgrade/{/upgrade/!d}' -e '/case \\${1} in/,/upgrade/{/upgrade/!d}' -e '/case \"\\$1\" in/,/upgrade/{/upgrade/!d}' -e '/case \"\\${1}\" in/,/upgrade/{/upgrade/!d}' -e '/case in \\$1/,/install/{/install/!d}' -e '/case in {1}/,/install/{/install/!d}' -e '/case in \"\\$1\"/,/install/{/install/!d}' -e '/case in \"{1}\"/,/install/{/install/!d}' -e '/case \\$1 in/,/install/{/install/!d}' -e '/case {1} in/,/install/{/install/!d}' -e '/case \"\\$1\" in/,/install/{/install/!d}' -e '/case \"{1}\" in/,/install/{/install/!d}' -e '/case in \\$1/,/update-alternatives/{/update-alternatives/!d}' -e '/case in {1}/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"\\$1\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"{1}\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case \\$1 in/,/update-alternatives/{/update-alternatives/!d}' -e '/case {1} in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"\\$1\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"{1}\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \\$1/,/db_/{/db_/!d}' -e '/case in {1}/,/db_/{/db_/!d}' -e '/case in \"\\$1\"/,/db_/{/db_/!d}' -e '/case in \"{1}\"/,/db_/{/db_/!d}' -e '/case \\$1 in/,/db_/{/db_/!d}' -e '/case {1} in/,/db_/{/db_/!d}' -e '/case \"\\$1\" in/,/db_/{/db_/!d}' -e '/case \"{1}\" in/,/db_/{/db_/!d}' -e '/;;/,/esac/{/;;/!d}' preinst\n\t\tsed -i -e '/[[:blank:]]\\{0,\\}update-alternatives.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/update-alternatives/d' -e '/[[:blank:]]\\{0,\\}lintian.*/,/}/d' -e '/[[:blank:]]\\{0,\\}if.*update-app-install.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*update-software-center.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*RET.*/,/fi/d' -e '/.*\\*)[[:blank:]]\\{0,\\}/,/esac/d' preinst\n\t\tsed -i -e '/.*upgrade.*)[[:blank:]]\\{0,\\}$/d' -e '/.*install.*)[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/d' preinst\n\t\tsed -i -e s'/.*\\*)[[:blank:]]{0,\\}\\(.*\\)/\\1/g' -e s'/.*upgrade.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/.*install.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/\\1/g' preinst\n\tfi\n\tgrep -iv '#!\\|set -e\\|automatically\\|added\\|generated\\|apt \\|apt-get \\|aptitude \\|debian-policy\\|debconf\\|dh_installdeb\\|debhelper\\|preinst\\|postinst\\|prerm\\|postrm\\|update-alternatives\\|--slave\\|db_\\|remove_source\\|update_manager\\|lintian' preinst | while read -r line; do\n\tprintf '\\t%s\\n' \"$line\" >> tempfile1\n\tdone\nfi\necho \"}\" >> tempfile1\nif [[ $(echo $(($(grep \"[[:blank:]]\" -o tempfile1 | wc -l) + 15))) != $(echo $(($(wc -c < tempfile1) - $(wc -l < tempfile1)))) ]]; then\n\tcat tempfile1 >> tempfile2\nfi\n\necho -e \"\\npost_install() {\" > tempfile1\nif [[ $(grep '^depend' .PKGINFO | grep -q qt; echo $?) == 0 ]]; then\n\techo -e '\\txdg-icon-resource forceupdate --theme hicolor &> /dev/null' >> tempfile1\nelif [[ $(grep '^depend' .PKGINFO | grep -q gtk; echo $?) == 0 ]]; then\n\techo -e '\\tgtk-update-icon-cache -q -t -f usr/share/icons/hicolor' >> tempfile1\nfi\nif [[ -e postinst ]]; then\n\tsed -i -e '/how this script works/,/debian-policy/d' -e '/how this script works/,/version>/d' -e '/dh_installdeb/,/DEBHELPER/d' postinst\n\tif [[ $(grep -c \"case in \\$1\\|case in \\${1}\\|case in \\\"\\$1\\\"\\|case in \\\"\\${1}\\\"\\|case \\$1 in\\|case \\${1} in\\|case \\\"\\$1\\\" in\\|case \\\"\\${1}\\\" in\" postinst) == $(grep -c \"case \" postinst) ]]; then\n\t\tsed -i -e '/case in \\$1/,/configure/{/configure/!d}' -e '/case in \\${1}/,/configure/{/,configure/!d}' -e '/case in \"\\$1\"/,/configure/{/configure/!d}' -e '/case in \"\\${1}\"/,/configure/{/,configure/!d}' -e '/case \\$1 in/,/configure/{/configure/!d}' -e '/case \\${1} in/,/configure/{/,configure/!d}' -e '/case in \"\\$1\"/,/configure/{/configure/!d}' -e '/case \"\\${1}\" in/,/configure/{/,configure/!d}' -e '/case in \\$1/,/update-alternatives/{/update-alternatives/!d}' -e '/case in {1}/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"\\$1\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"{1}\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case \\$1 in/,/update-alternatives/{/update-alternatives/!d}' -e '/case {1} in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"\\$1\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"{1}\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \\$1/,/db_/{/db_/!d}' -e '/case in {1}/,/db_/{/db_/!d}' -e '/case in \"\\$1\"/,/db_/{/db_/!d}' -e '/case in \"{1}\"/,/db_/{/db_/!d}' -e '/case \\$1 in/,/db_/{/db_/!d}' -e '/case {1} in/,/db_/{/db_/!d}' -e '/case \"\\$1\" in/,/db_/{/db_/!d}' -e '/case \"{1}\" in/,/db_/{/db_/!d}' -e '/;;/,/esac/{/;;/!d}' postinst\n\t\tsed -i -e '/[[:blank:]]\\{0,\\}update-alternatives.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/update-alternatives/d' -e '/[[:blank:]]\\{0,\\}lintian.*/,/}/d' -e '/[[:blank:]]\\{0,\\}if.*update-app-install.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*update-software-center.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*RET.*/,/fi/d' -e '/.*\\*)[[:blank:]]\\{0,\\}/,/esac/d' postinst\n\t\tsed -i -e '/.*configure.*)[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/d' postinst\n\t\tsed -i -e s'/.*\\*)[[:blank:]]{0,\\}\\(.*\\)/\\1/g' -e s'/.*configure.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/\\1/g' postinst\n\tfi\n\tgrep -iv '#!\\|set -e\\|automatically\\|added\\|generated\\|apt \\|apt-get \\|aptitude \\|debian-policy\\|debconf\\|dh_installdeb\\|debhelper\\|preinst\\|postinst\\|prerm\\|postrm\\|update-alternative\\|--slave\\|db_\\|remove_source\\|update_manager\\|lintian' postinst | while read -r line; do\n\t\tprintf '\\t%s\\n' \"$line\" >> tempfile1\n\tdone\nfi\nif [[ $(grep '^depend' .PKGINFO | grep -q 'qt\\|gtk'; echo $?) == 0 ]]; then\n\techo -e '\\tupdate-desktop-database -q' >> tempfile1\nfi\necho \"}\" >> tempfile1\nif [[ $(echo $(($(grep \"[[:blank:]]\" -o tempfile1 | wc -l) + 16))) != $(echo $(($(wc -c < tempfile1) - $(wc -l < tempfile1)))) ]]; then\n\tcat tempfile1 >> tempfile2\nfi\n\nif [[ $(grep -q '^pre_install() {$' tempfile2 2> /dev/null; echo $?) == 0 ]]; then\n\techo -e \"\\npre_upgrade() {\" >> tempfile2\n\techo -e \"\\tpre_install\" >> tempfile2\n\techo \"}\" >> tempfile2\nfi\n\nif [[ $(grep -q '^post_install() {$' tempfile2 2> /dev/null; echo $?) == 0 ]]; then\n\techo -e \"\\npost_upgrade() {\" >> tempfile2\n\techo -e \"\\tpost_install\" >> tempfile2\n\techo \"}\" >> tempfile2\nfi\n\necho -e \"\\npre_remove() {\" > tempfile1\nif [[ -e prerm ]]; then\n\tsed -i -e '/how this script works/,/debian-policy/d' -e '/how this script works/,/version>/d' -e '/dh_installdeb/,/DEBHELPER/d' prerm\n\tif [[ $(grep -c \"case in \\$1\\|case in \\${1}\\|case in \\\"\\$1\\\"\\|case in \\\"\\${1}\\\"\\|case \\$1 in\\|case \\${1} in\\|case \\\"\\$1\\\" in\\|case \\\"\\${1}\\\" in\" prerm) == $(grep -c \"case \" prerm) ]]; then\n\t\tsed -i -e '/case in \\$1/,/remove/{/remove/!d}' -e '/case in {1}/,/remove/{/remove/!d}' -e '/case in \"\\$1\"/,/remove/{/remove/!d}' -e '/case in \"{1}\"/,/remove/{/remove/!d}' -e '/case \\$1 in/,/remove/{/remove/!d}' -e '/case {1} in/,/remove/{/remove/!d}' -e '/case \"\\$1\" in/,/remove/{/remove/!d}' -e '/case \"{1}\" in/,/remove/{/remove/!d}' -e '/case in \\$1/,/upgrade/{/upgrade/!d}' -e '/case in \\${1}/,/upgrade/{/upgrade/!d}' -e '/case in \"\\$1\"/,/upgrade/{/upgrade/!d}' -e '/case in \"\\${1}\"/,/upgrade/{/upgrade/!d}' -e '/case \\$1 in/,/upgrade/{/upgrade/!d}' -e '/case \\${1} in/,/upgrade/{/upgrade/!d}' -e '/case \"\\$1\" in/,/upgrade/{/upgrade/!d}' -e '/case \"\\${1}\" in/,/upgrade/{/upgrade/!d}' -e '/case in \\$1/,/update-alternatives/{/update-alternatives/!d}' -e '/case in {1}/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"\\$1\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"{1}\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case \\$1 in/,/update-alternatives/{/update-alternatives/!d}' -e '/case {1} in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"\\$1\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"{1}\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \\$1/,/db_/{/db_/!d}' -e '/case in {1}/,/db_/{/db_/!d}' -e '/case in \"\\$1\"/,/db_/{/db_/!d}' -e '/case in \"{1}\"/,/db_/{/db_/!d}' -e '/case \\$1 in/,/db_/{/db_/!d}' -e '/case {1} in/,/db_/{/db_/!d}' -e '/case \"\\$1\" in/,/db_/{/db_/!d}' -e '/case \"{1}\" in/,/db_/{/db_/!d}' -e '/;;/,/esac/{/;;/!d}' prerm\n\t\tsed -i -e '/[[:blank:]]\\{0,\\}update-alternatives.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/update-alternatives/d' -e '/[[:blank:]]\\{0,\\}lintian.*/,/}/d' -e '/[[:blank:]]\\{0,\\}if.*update-app-install.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*update-software-center.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*RET.*/,/fi/d' -e '/.*\\*)[[:blank:]]\\{0,\\}/,/esac/d' prerm\n\t\tsed -i -e '/.*remove.*)[[:blank:]]\\{0,\\}$/d' -e '/.*upgrade.*)[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/d' prerm\n\t\tsed -i -e s'/.*\\*)[[:blank:]]{0,\\}\\(.*\\)/\\1/g' -e s'/.*remove.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/.*upgrade.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/\\1/g' prerm\n\tfi\n\tgrep -iv '#!\\|set -e\\|automatically\\|added\\|generated\\|apt \\|apt-get \\|aptitude \\|debian-policy\\|debconf\\|dh_installdeb\\|debhelper\\|preinst\\|postinst\\|prerm\\|postrm\\|update-alternatives\\|--slave\\|db_\\|remove_source\\|update_manager\\|lintian' prerm | while read -r line; do\n\t\tprintf '\\t%s\\n' \"$line\" >> tempfile1\n\tdone\nfi\necho \"}\" >> tempfile1\nif [[ $(echo $(($(grep \"[[:blank:]]\" -o tempfile1 | wc -l) + 14))) != $(echo $(($(wc -c < tempfile1) - $(wc -l < tempfile1)))) ]]; then\n\tcat tempfile1 >> tempfile2\nfi\n\necho -e \"\\npost_remove() {\" > tempfile1\nif [[ $(grep '^depend' .PKGINFO | grep -q qt; echo $?) == 0 ]]; then\n\techo -e '\\txdg-icon-resource forceupdate --theme hicolor &> /dev/null' >> tempfile1\nelif [[ $(grep '^depend' .PKGINFO | grep -q gtk; echo $?) == 0 ]]; then\n\techo -e '\\tgtk-update-icon-cache -q -t -f usr/share/icons/hicolor' >> tempfile1\nfi\nif [[ -e postrm ]]; then\n\tsed -i -e '/how this script works/,/debian-policy/d' -e '/how this script works/,/version>/d' -e '/dh_installdeb/,/DEBHELPER/d' postrm\n\tif [[ $(grep -c \"case in \\$1\\|case in \\${1}\\|case in \\\"\\$1\\\"\\|case in \\\"\\${1}\\\"\\|case \\$1 in\\|case \\${1} in\\|case \\\"\\$1\\\" in\\|case \\\"\\${1}\\\" in\" postrm) == $(grep -c \"case \" postrm) ]]; then\n\t\tsed -i -e '/case in \\$1/,/remove/{/remove/!d}' -e '/case in {1}/,/remove/{/remove/!d}' -e '/case in \"\\$1\"/,/remove/{/remove/!d}' -e '/case in \"{1}\"/,/remove/{/remove/!d}' -e '/case \\$1 in/,/remove/{/remove/!d}' -e '/case {1} in/,/remove/{/remove/!d}' -e '/case \"\\$1\" in/,/remove/{/remove/!d}' -e '/case \"{1}\" in/,/remove/{/remove/!d}' -e '/case in \\$1/,/purge/{/purge/!d}' -e '/case in {1}/,/purge/{/purge/!d}' -e '/case in \"\\$1\"/,/purge/{/purge/!d}' -e '/case in \"{1}\"/,/purge/{/purge/!d}' -e '/case \\$1 in/,/purge/{/purge/!d}' -e '/case {1} in/,/purge/{/purge/!d}' -e '/case \"\\$1\" in/,/purge/{/purge/!d}' -e '/case \"{1}\" in/,/purge/{/purge/!d}' -e '/case in \\$1/,/upgrade/{/upgrade/!d}' -e '/case in \\${1}/,/upgrade/{/upgrade/!d}' -e '/case in \"\\$1\"/,/upgrade/{/upgrade/!d}' -e '/case in \"\\${1}\"/,/upgrade/{/upgrade/!d}' -e '/case \\$1 in/,/upgrade/{/upgrade/!d}' -e '/case \\${1} in/,/upgrade/{/upgrade/!d}' -e '/case \"\\$1\" in/,/upgrade/{/upgrade/!d}' -e '/case \"\\${1}\" in/,/upgrade/{/upgrade/!d}' -e '/case in \\$1/,/update-alternatives/{/update-alternatives/!d}' -e '/case in {1}/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"\\$1\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \"{1}\"/,/update-alternatives/{/update-alternatives/!d}' -e '/case \\$1 in/,/update-alternatives/{/update-alternatives/!d}' -e '/case {1} in/,/update-alternatives/{/updaste-alternatives/!d}' -e '/case \"\\$1\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case \"{1}\" in/,/update-alternatives/{/update-alternatives/!d}' -e '/case in \\$1/,/db_/{/db_/!d}' -e '/case in {1}/,/db_/{/db_/!d}' -e '/case in \"\\$1\"/,/db_/{/db_/!d}' -e '/case in \"{1}\"/,/db_/{/db_/!d}' -e '/case \\$1 in/,/db_/{/db_/!d}' -e '/case {1} in/,/db_/{/db_/!d}' -e '/case \"\\$1\" in/,/db_/{/db_/!d}' -e '/case \"{1}\" in/,/db_/{/db_/!d}' -e '/;;/,/esac/{/;;/!d}' postrm\n\t\tsed -i -e '/[[:blank:]]\\{0,\\}update-alternatives.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/esac/d' -e '/[[:blank:]]\\{0,\\}db_.*)/,/update-alternatives/d' -e '/[[:blank:]]\\{0,\\}lintian.*/,/}/d' -e '/[[:blank:]]\\{0,\\}if.*update-app-install.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*update-software-center.*/,/fi/d' -e '/[[:blank:]]\\{0,\\}if.*RET.*/,/fi/d' -e '/.*\\*)[[:blank:]]\\{0,\\}/,/esac/d' postrm\n\t\tsed -i -e '/.*remove.*)[[:blank:]]\\{0,\\}$/d' -e '/.*purge.*)[[:blank:]]\\{0,\\}$/d' -e '/.*upgrade.*)[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/d' -e '/^[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/d' postrm\n\t\tsed -i -e s'/.*\\*)[[:blank:]]{0,\\}\\(.*\\)/\\1,/g' -e s'/.*remove.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/.*purge.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/.*upgrade.*)[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^[[:blank:]]\\{0,\\};;[[:blank:]]\\{0,\\}\\(.*\\)$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit 0[[:blank:]]\\{0,\\}$/\\1/g' -e s'/^\\(.*\\)[[:blank:]]\\{0,\\}\\(; \\)\\{0,1\\}\\( && \\)\\{0,1\\}[[:blank:]]\\{0,\\}exit[[:blank:]]\\{0,\\}$/\\1/g' postrm\n\tfi\n\tgrep -iv '#!\\|set -e\\|automatically\\|added\\|generated\\|apt \\|apt-get \\|aptitude \\|debian-policy\\|debconf\\|dh_installdeb\\|debhelper\\|preinst\\|postinst\\|prerm\\|postrm\\|update-alternatives\\|--slave\\|db_\\|remove_source\\|update_manager\\|lintian' postrm | while read -r line; do\n\t\tprintf '\\t%s\\n' \"$line\" >> tempfile1\n\tdone\nfi\nif [[ $(grep '^depend' .PKGINFO | grep -q 'qt\\|gtk'; echo $?) == 0 ]]; then\n\techo -e '\\tupdate-desktop-database -q' >> tempfile1\nfi\necho \"}\" >> tempfile1\nif [[ $(echo $(($(grep \"[[:blank:]]\" -o tempfile1 | wc -l) + 15))) != $(echo $(($(wc -c < tempfile1) - $(wc -l < tempfile1)))) ]]; then\n\tcat tempfile1 >> tempfile2\nfi\nIFS=$SAVEIFS\n\nif [[ -e tempfile2 ]]; then\n\tif [[ $(sed -n \"1{p;q;}\" tempfile2) == \"\" ]]; then\n\t\tsed -i '1d' tempfile2\n\tfi\n\n\tsed -i s'/^[[:blank:]]\\{1,\\}$//g' tempfile2\n    \n\tif [[ $pseudo != set ]]; then\n\t\tif [[ $(grep -i ^Architecture: control \\| grep -q i386; echo $?) == 0 ]]; then\n\t\t\tsed -i -e s'/ \\/bin\\// \\/usr\\/bin\\//g' -e s'/ \\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/lib\\// \\/usr\\/lib\\//g' -e s'/ \\/lib32\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/lib32\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/local\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/lib32\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/local\\// \\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/=\\/bin\\//=\\/usr\\/bin\\//g' -e s'/=\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/lib\\//=\\/usr\\/lib\\//g' -e s'/=\\/lib32\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/lib32\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/local\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/lib32\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/local\\//=\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/>\\/bin\\//>\\/usr\\/bin\\//g' -e s'/>\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/lib\\//>\\/usr\\/lib\\//g' -e s'/>\\/lib32\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/lib32\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/local\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/lib32\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/local\\//>\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/<\\/bin\\//<\\/usr\\/bin\\//g' -e s'/<\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/lib\\//<\\/usr\\/lib\\//g' -e s'/<\\/lib32\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/lib32\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/local\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/lib32\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/local\\//<\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/\"\\/bin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/lib\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/lib32\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/lib32\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/local\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/lib32\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/local\\//\"\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s\"/'\\/bin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/lib\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/lib32\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/lib32\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/local\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/lib32\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/local\\//'\\/usr\\//g\" tempfile2\n\t\telse\n\t\t\tsed -i -e s'/ \\/bin\\// \\/usr\\/bin\\//g' -e s'/ \\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/lib\\// \\/usr\\/lib\\//g' -e s'/ \\/lib32\\// \\/usr\\/lib32\\//g' -e s'/ \\/lib64\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/lib64\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/local\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/lib64\\// \\/usr\\/lib\\//g' -e s'/ \\/usr\\/local\\// \\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/=\\/bin\\//=\\/usr\\/bin\\//g' -e s'/=\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/lib\\//=\\/usr\\/lib\\//g' -e s'/=\\/lib32\\//=\\/usr\\/lib32\\//g' -e s'/=\\/lib64\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/lib64\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/local\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/lib64\\//=\\/usr\\/lib\\//g' -e s'/=\\/usr\\/local\\//=\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/>\\/bin\\//>\\/usr\\/bin\\//g' -e s'/>\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/lib\\//>\\/usr\\/lib\\//g' -e s'/>\\/lib32\\//>\\/usr\\/lib32\\//g' -e s'/>\\/lib64\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/lib64\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/local\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/lib64\\//>\\/usr\\/lib\\//g' -e s'/>\\/usr\\/local\\//>\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/<\\/bin\\//<\\/usr\\/bin\\//g' -e s'/<\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/lib\\//<\\/usr\\/lib\\//g' -e s'/<\\/lib32\\//<\\/usr\\/lib32\\//g' -e s'/<\\/lib64\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/lib64\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/local\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/lib64\\//<\\/usr\\/lib\\//g' -e s'/<\\/usr\\/local\\//<\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s'/\"\\/bin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/lib\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/lib32\\//\"\\/usr\\/lib32\\//g' -e s'/\"\\/lib64\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/lib64\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/local\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/lib64\\//\"\\/usr\\/lib\\//g' -e s'/\"\\/usr\\/local\\//\"\\/usr\\//g' tempfile2\n\t\t\tsed -i -e s\"/'\\/bin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/lib\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/lib32\\//'\\/usr\\/lib32\\//g\" -e s\"/'\\/lib64\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/lib64\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/local\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/lib64\\//'\\/usr\\/lib\\//g\" -e s\"/'\\/usr\\/local\\//'\\/usr\\//g\" tempfile2\n\t\tfi\n\telse\n\t\tsed -i -e s'/ \\/bin\\// \\/usr\\/bin\\//g' -e s'/ \\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/lib\\// \\/usr\\/lib32\\//g' -e s'/ \\/lib32\\// \\/usr\\/lib32\\//g' -e s'/ \\/usr\\/lib\\// \\/usr\\/lib32\\//g' -e s'/ \\/usr\\/local\\/sbin\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/games\\// \\/usr\\/bin\\//g' -e s'/ \\/usr\\/local\\/lib\\// \\/usr\\/lib32\\//g' -e s'/ \\/usr\\/local\\// \\/usr\\//g' tempfile2\n\t\tsed -i -e s'/=\\/bin\\//=\\/usr\\/bin\\//g' -e s'/=\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/lib\\//=\\/usr\\/lib32\\//g' -e s'/=\\/lib32\\//=\\/usr\\/lib32\\//g' -e s'/=\\/usr\\/lib\\//=\\/usr\\/lib32\\//g' -e s'/=\\/usr\\/local\\/sbin\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/games\\//=\\/usr\\/bin\\//g' -e s'/=\\/usr\\/local\\/lib\\//=\\/usr\\/lib32\\//g' -e s'/=\\/usr\\/local\\//=\\/usr\\//g' tempfile2\n\t\tsed -i -e s'/>\\/bin\\//>\\/usr\\/bin\\//g' -e s'/>\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/lib\\//>\\/usr\\/lib32\\//g' -e s'/>\\/lib32\\//>\\/usr\\/lib32\\//g' -e s'/>\\/usr\\/lib\\//>\\/usr\\/lib32\\//g' -e s'/>\\/usr\\/local\\/sbin\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/games\\//>\\/usr\\/bin\\//g' -e s'/>\\/usr\\/local\\/lib\\//>\\/usr\\/lib32\\//g' -e s'/>\\/usr\\/local\\//>\\/usr\\//g' tempfile2\n\t\tsed -i -e s'/<\\/bin\\//<\\/usr\\/bin\\//g' -e s'/<\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/lib\\//<\\/usr\\/lib32\\//g' -e s'/<\\/lib32\\//<\\/usr\\/lib32\\//g' -e s'/<\\/usr\\/lib\\//<\\/usr\\/lib32\\//g' -e s'/<\\/usr\\/local\\/sbin\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/games\\//<\\/usr\\/bin\\//g' -e s'/<\\/usr\\/local\\/lib\\//<\\/usr\\/lib32\\//g' -e s'/<\\/usr\\/local\\//<\\/usr\\//g' tempfile2\n\t\tsed -i -e s'/\"\\/bin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/lib\\//\"\\/usr\\/lib32\\//g' -e s'/\"\\/lib32\\//\"\\/usr\\/lib32\\//g' -e s'/\"\\/usr\\/lib\\//\"\\/usr\\/lib32\\//g' -e s'/\"\\/usr\\/local\\/sbin\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/games\\//\"\\/usr\\/bin\\//g' -e s'/\"\\/usr\\/local\\/lib\\//\"\\/usr\\/lib32\\//g' -e s'/\"\\/usr\\/local\\//\"\\/usr\\//g' tempfile2\n\t\tsed -i -e s\"/'\\/bin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/lib\\//'\\/usr\\/lib32\\//g\" -e s\"/'\\/lib32\\//'\\/usr\\/lib32\\//g\" -e s\"/'\\/usr\\/lib\\//'\\/usr\\/lib32\\//g\" -e s\"/'\\/usr\\/local\\/sbin\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/games\\//'\\/usr\\/bin\\//g\" -e s\"/'\\/usr\\/local\\/lib\\//'\\/usr\\/lib32\\//g\" -e s\"/'\\/usr\\/local\\//'\\/usr\\//g\" tempfile2\n\tfi\n\t\n\tfor i in {upgrade,install,remove,purge,configure}; do\n\t\tsed -i -e s\"/ \\[\\[ \\\"\\$1\\\" = \\\"$i\\\" \\]\\] &&\\| && \\[\\[ \\\"\\$1\\\" = \\\"$i\\\" \\]\\]//g\" -e s\"/ \\[ \\\"\\$1\\\" = \\\"$i\\\" \\] &&\\| && \\[ \\\"\\$1\\\" = \\\"$i\\\" \\]//g\" -e s\"/ \\[\\[ \\\"\\${1}\\\" = \\\"$i\\\" \\]\\] &&\\| && \\[\\[ \\\"\\${1}\\\" = \\\"$i\\\" \\]\\]//g\" -e s\"/ \\[ \\\"\\${1}\\\" = \\\"$i\\\" \\] &&\\| && \\[ \\\"\\${1}\\\" = \\\"$i\\\" \\]//g\" -e s\"/ \\[\\[ \\\"\\$1\\\" = $i \\]\\] &&\\| && \\[\\[ \\\"\\$1\\\" = $i \\]\\]//g\" -e s\"/ \\[ \\\"\\$1\\\" = $i \\] &&\\| && \\[ \\\"\\$1\\\" = $i \\]//g\" -e s\"/ \\[\\[ \\\"\\${1}\\\" = $i \\]\\] &&\\| && \\[\\[ \\\"\\${1}\\\" = $i \\]\\]//g\" -e s\"/ \\[ \\\"\\${1}\\\" = $i \\] &&\\| && \\[ \\\"\\${1}\\\" = $i \\]//g\" tempfile2\n\tdone\n\n\tsed -e s'/-x \"`which update-menus 2> \\/dev\\/null`\"\\|-x \"`which update-menus 2>\\/dev\\/null`\"/-f usr\\/bin\\/update-mime-database/g' -e s'/update-menus/update-mime-database usr\\/share\\/mime \\&> \\/dev\\/null/g' -e s'/dpkg --listfiles\\|dpkg -L/pacman -Qql/g' -e s'/ dash / bash /g' tempfile2 > .INSTALL\nfi\n\nrm -rf tempfile*\n\n# Removing metadata of original .deb package\nrm -rf control preinst postinst prerm postrm conffiles\n\n# Prompting user for editing .PKGINFO and .INSTALL files\nif [[ $Quiet != set ]]; then\n\t\tif [ -e .INSTALL ]; then\n\t\techo -en \"\\n${lightblue}::${NC} ${bold}If you want to edit .PKGINFO and .INSTALL files (in this order), press (1) For${normal} ${lightred}vi${NC} ${bold}(2) For${normal} ${lightred}nano${NC} ${bold}(3) For${normal} ${lightred}default editor${NC} ${bold}(4) For${normal} ${lightred}a custom editor${NC} ${bold}or any other key to continue: ${normal}\"\n\t\tread -n 1 number\n\t\tif [[ $number == 1 ]]; then\n\t\t\techo; vi .PKGINFO; vi .INSTALL\n\t\telif [[ $number == 2 ]]; then\n\t\t\techo; nano .PKGINFO; nano .INSTALL\n\t\telif [[ $number == 3 ]]; then\n\t\t\techo; $EDITOR .PKGINFO 2> /dev/null; $EDITOR .INSTALL 2> /dev/null || echo -e \"${red}Error: No default editor has been set or no such command${NC}\"\n\t\telif [[ $number == 4 ]]; then\n\t\t\techo -en \"\\n${lightblue}::${NC} ${bold}Enter command for running custom editor: ${normal}\"\n\t\t\tread custom_editor\n\t\t\t$custom_editor .PKGINFO 2> /dev/null; $custom_editor .INSTALL 2> /dev/null || echo -e \"${red}Error: No command given or no such command${NC}\"\n\t\telse\n\t\t\techo\n\t\tfi\n    else\n\t\techo -en \"\\n${lightblue}::${NC} ${bold}If you want to edit .PKGINFO file, press (1) For${normal} ${lightred}vi${NC} ${bold}(2) For${normal} ${lightred}nano${NC} ${bold}(3) For${normal} ${lightred}default editor${NC} ${bold}(4) For${normal} ${lightred}a custom editor${NC} ${bold}or any other key to continue: ${normal}\"\n\t\tread -n 1 number\n\t\tif [[ $number == 1 ]]; then\n\t\t\techo; vi .PKGINFO\n\t\telif [[ $number == 2 ]]; then\n\t\t\techo; nano .PKGINFO\n\t\telif [[ $number == 3 ]]; then\n\t\t\techo; $EDITOR .PKGINFO 2> /dev/null || echo -e \"${red}Error: No default editor has been set or no such command${NC}\"\n\t\telif [[ $number == 4 ]]; then\n\t\t\techo -en \"\\n${lightblue}::${NC} ${bold}Enter command for running custom editor: ${normal}\"\n\t\t\tread custom_editor\n\t\t\t$custom_editor .PKGINFO 2> /dev/null || echo -e \"${red}Error: No command given or no such command${NC}\"\n\t\telse\n\t\t\techo\n\t\tfi\n    fi\nfi\n\n# Generating .MTREE file\necho -e \"\\n${lightgreen}==>${NC} ${bold}Generating .MTREE file...${normal}\"\n\nbsdtar -czf .MTREE --format=mtree --options='!all,use-set,type,uid,gid,mode,time,size,md5,sha256,link' * .PKGINFO .INSTALL 2> /dev/null\n\n# Creating final package in a fakeroot environment\nif [[ $Pkgbuild != set ]]; then\necho -e \"\\n${lightgreen}==>${NC} ${bold}Creating final package...${normal}\"\nfakeroot << EOF\ntar --force-local -pcf `grep '^pkgname =' .PKGINFO | gawk '{print $3}'`-`grep '^pkgver =' .PKGINFO | gawk '{print $3}'`-`grep '^arch =' .PKGINFO | gawk '{print $3}'`.pkg.tar --exclude='pkgbuildinstallations*' * .PKGINFO .INSTALL .MTREE 2> /dev/null\nzstd -q -T0 --ultra -20 *.tar\nEOF\nmv *.zst \"$(dirname \"$package_with_full_path\")\"\nfi\n\n# Announcement of successful creation of package\nif [[ $Pkgbuild != set ]]; then\n\techo -e \"${lightgreen}==>${NC} ${bold}Package successfully created!${normal}\"\nfi\n\nif [[ $pkgbuild != set ]] && [[ $Pkgbuild != set ]]; then\n\t# Removing leftover files\n\techo -e \"${lightgreen}==>${NC} ${bold}Removing leftover files...${normal}\"\n\trm -rf \"$working_directory\"\n\trm -rf /tmp/debtap\n\texit 0\nfi\n\n# Generating PKGBUILD file\necho -e \"\\n${lightgreen}==>${NC} ${bold}Generating PKGBUILD file...${normal}\"\necho \"# Generated by debtap\" > PKGBUILD\nif [[ $quiet == set  ]] || [[ $Quiet == set ]]; then\n\techo \"# Maintainer: \" >> PKGBUILD\n\techo \"# Contributor: \" >> PKGBUILD\nelse\n\techo \"# Maintainer: $(grep '^packager =' .PKGINFO | gawk '{print $3}')\" >> PKGBUILD\n\techo \"# Contributor: $(grep '^packager =' .PKGINFO | gawk '{print $3}')\" >> PKGBUILD\nfi\nif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(ls -A usr/bin 2> /dev/null) ]]; then\n\techo \"$(grep '^pkgname =' .PKGINFO | sed s'/ //g')-bin\" >> PKGBUILD\nelse\n\techo \"$(grep '^pkgname =' .PKGINFO | sed s'/ //g')\" >> PKGBUILD\nfi\necho \"$(grep '^pkgver =' .PKGINFO | sed -e s'/ //g' -e s'/-/ /g' | gawk '{print $1}')\" >> PKGBUILD\necho \"pkgrel=$(grep '^pkgver =' .PKGINFO | sed -e s'/ //g' -e s'/-/ /g' | gawk '{print $2}')\" >> PKGBUILD\necho \"$(grep '^pkgdesc =' .PKGINFO | sed s'/ = /=\"/')\\\"\" >> PKGBUILD\nif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]]; then\n\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"arch=('i686' 'x86_64')\" >> PKGBUILD\n\telif [[ $(grep -q '^arch = armv7l$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"arch=('armv7l')\" >> PKGBUILD\n\telif [[ $(grep -q '^arch = aarch64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"arch=('aarch64')\" >> PKGBUILD\n\telif [[ $(grep -q '^arch = any$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"arch=('any')\" >> PKGBUILD\n\tfi\nelse\n\techo \"arch=('x86_64')\" >> PKGBUILD\nfi\necho \"$(grep '^url =' .PKGINFO | sed s'/ //g' | sed s'/=/=\"/')\\\"\" >> PKGBUILD\necho \"license=('$(echo $(grep '^license =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\necho \"groups=('')\" >> PKGBUILD\nif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(grep -q '^depend =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^depend =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^depend =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\techo \"depends_i686=('$(echo $(grep '^depend =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\t\techo \"depends_x86_64=('$(echo $(grep '^depend =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\tfi\n\telse\n\t\techo \"depends=('$(echo $(grep '^depend =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\tfi\nfi\nif [[ $(grep -q '^optdepend =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^optdepend =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^optdepend =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\tfor i in $(grep '^optdepend =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g'); do echo \"                 '$i'\"; done | sed -e \"1 s/^                 /optdepends_i686=(/\" -e \"$ s/'$/')/\" >> PKGBUILD\n\t\t\tfor i in $(grep '^optdepend =' .PKGINFO | gawk '{print $3}'); do echo \"                   '$i'\"; done | sed -e \"1 s/^                   /optdepends_x86_64=(/\" -e \"$ s/'$/')/\" >> PKGBUILD\n\t\tfi\n\telse\n\t\tfor i in $(grep '^optdepend =' .PKGINFO | gawk '{print $3}'); do echo \"            '$i'\"; done | sed -e \"1 s/^            /optdepends=(/\" -e \"$ s/'$/')/\" >> PKGBUILD\n\tfi\nfi\nif [[ $(grep -q '^provides =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^provides =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^provides =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\techo \"provides_i686=('$(echo $(grep '^provides =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\t\techo \"provides_x86_64=('$(echo $(grep '^provides =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\tfi\n\telse\n\t\techo \"provides=('$(echo $(grep '^provides =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\tfi\nfi\nif [[ $(grep -q '^conflicts =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^conflicts =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^conflicts =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\techo \"conflicts_i686=('$(echo $(grep '^conflicts =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\t\techo \"conflicts_x86_64=('$(echo $(grep '^conflicts =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\tfi\n\telse\n\t\techo \"conflicts=('$(echo $(grep '^conflicts =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\tfi\nfi\nif [[ $(grep -q '^replaces =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^replaces =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^replaces =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\techo \"replaces_i686=('$(echo $(grep '^replaces =' .PKGINFO | gawk '{print $3}' | sed s'/^lib32-\\|-multilib$//g') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\t\techo \"replaces_x86_64=('$(echo $(grep '^replaces =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\tfi\n\telse\n\t\techo \"replaces=('$(echo $(grep '^replaces =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\tfi\nfi\nif [[ $(grep -q '^backup =' .PKGINFO; echo $?) == 0 ]]; then\n\tif [[ $(grep -q '^pkgname = lib32-' .PKGINFO; echo $?) != 0 ]] && [[ $(grep '^pkgname =' .PKGINFO | grep -q -- '-multilib$'; echo $?) != 0 ]] && [[ $(echo $(grep '^backup =' .PKGINFO | gawk '{print $3}')) != $(echo $(grep '^backup =' .PKGINFO | gawk '{print $3}' | sed s'/^usr\\/lib32\\//usr\\/lib\\//g')) ]]; then\n\t\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\t\techo \"backup_i686=('$(echo $(grep '^backup =' .PKGINFO | gawk '{print $3}' | sed s'/^usr\\/lib32\\//usr\\/lib\\//g') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\t\techo \"backup_x86_64=('$(echo $(grep '^backup =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\t\tfi\n\telse\n\t\techo \"backup=('$(echo $(grep '^backup =' .PKGINFO | gawk '{print $3}') | sed s\"/ /' '/g\")')\" >> PKGBUILD\n\tfi\nfi\necho \"options=('!strip' '!emptydirs')\" >> PKGBUILD\nif [[ -e .INSTALL ]]; then\n\techo 'install=${pkgname}.install' >> PKGBUILD\nfi\nif [[ $pseudo != set ]]; then\n\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]] || [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"source_i686=(\\\"PUT_FULL_URL_FOR_DOWNLOADING_i386_DEB_PACKAGE_HERE\\\")\" >> PKGBUILD\n\t\techo \"source_x86_64=(\\\"PUT_FULL_URL_FOR_DOWNLOADING_amd64_DEB_PACKAGE_HERE\\\")\" >> PKGBUILD\n\telse\n\t\techo \"source=(\\\"PUT_FULL_URL_FOR_DOWNLOADING_DEB_PACKAGE_HERE\\\")\" >> PKGBUILD\n\tfi\nelse\n\techo \"source=(\\\"PUT_FULL_URL_FOR_DOWNLOADING_i386_DEB_PACKAGE_HERE\\\")\" >> PKGBUILD\nfi\nif [[ $pseudo != set ]]; then\n\tif [[ $(grep -q '^arch = i686$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"sha512sums_i686=('$(sha512sum \"$package_with_full_path\" | gawk '{print $1}')')\" >> PKGBUILD\n\t\techo \"sha512sums_x86_64=('PUT_SHA512SUM_OF_amd64_DEB_PACKAGE_HERE')\" >> PKGBUILD\n\telif [[ $(grep -q '^arch = x86_64$' .PKGINFO; echo $?) == 0 ]]; then\n\t\techo \"sha512sums_i686=('PUT_SHA512SUM_OF_i386_DEB_PACKAGE_HERE')\" >> PKGBUILD\n\t\techo \"sha512sums_x86_64=('$(sha512sum \"$package_with_full_path\" | gawk '{print $1}')')\" >> PKGBUILD\n\telse\n\t\techo \"sha512sums=('$(sha512sum \"$package_with_full_path\" | gawk '{print $1}')')\" >> PKGBUILD\n\tfi\nelse\n\techo \"sha512sums=('$(sha512sum \"$package_with_full_path\" | gawk '{print $1}')')\" >> PKGBUILD\nfi\necho -e \"\\npackage(){\\n\\n\t# Extract package data\" >> PKGBUILD\necho \"\t$data_extract -f $data_tar_check -C \\\"\\${pkgdir}\\\"\" >> PKGBUILD\nif [[ -e pkgbuildinstallations1 ]] || [[ -e pkgbuildinstallations2 ]] || [[ -e pkgbuildinstallations32 ]] || [[ -e pkgbuildinstallations64 ]]; then\n\tif [[ $(grep '^install' pkgbuildinstallations1 2> /dev/null | wc -l) != $(echo $(($(cat pkgbuildinstallations1 2> /dev/null | wc -l) + $(cat pkgbuildinstallations2 2> /dev/null | wc -l) + $(cat pkgbuildinstallations32 2> /dev/null | wc -l) + $(cat pkgbuildinstallations64 2> /dev/null | wc -l)))) ]]; then\n\t\techo -e \"\\n\t# Fix directory structure differences\\n\tcd \\\"\\${pkgdir}\\\"\" >> PKGBUILD\n\tfi\nfi\nif [[ -e pkgbuildinstallations1 ]]; then\n\techo >> PKGBUILD\n\tcat pkgbuildinstallations1 | while read -r line; do\n\t\techo -e \"\t$line\" >> PKGBUILD\n\tdone\nfi\nif [[ $(grep -q \"^arch=('i686' 'x86_64')$\" PKGBUILD; echo $?) == 0 ]]; then\n\tif [[ -e pkgbuildinstallations32 ]] && [[ -e pkgbuildinstallations64 ]]; then\n\t\techo -e \"\\n\tif [[ \\${CARCH} == i686 ]]; then\" >> PKGBUILD\n\t\tcat pkgbuildinstallations32 | while read -r line; do\n\t\t\techo \"\t\t$line\" >> PKGBUILD\n\t\tdone\n\t\techo \"\telif [[ \\${CARCH} == x86_64 ]]; then\" >> PKGBUILD\n\t\tcat pkgbuildinstallations64 | while read -r line; do\n\t\t\techo \"\t\t$line\" >> PKGBUILD\n\t\tdone\n\t\techo \"\tfi\" >> PKGBUILD\n\telif [[ -e pkgbuildinstallations32 ]] && [[ ! -e pkgbuildinstallations64 ]]; then\n\t\techo -e \"\\n\tif [[ \\${CARCH} == i686 ]]; then\" >> PKGBUILD\n\t\tcat pkgbuildinstallations32 | while read -r line; do\n\t\t\techo \"\t\t$line\" >> PKGBUILD\n\t\tdone\n\t\techo \"\tfi\" >> PKGBUILD\n\telif [[ ! -e pkgbuildinstallations32 ]] && [[ -e pkgbuildinstallations64 ]]; then\n\t\techo -e \"\\n\tif [[ \\${CARCH} == x86_64 ]]; then\" >> PKGBUILD\n\t\tcat pkgbuildinstallations64 | while read -r line; do\n\t\t\techo \"\t\t$line\" >> PKGBUILD\n\t\tdone\n\t\techo \"\tfi\" >> PKGBUILD\n\tfi\nelif [[ $(grep -q \"^arch=('x86_64')$\" PKGBUILD; echo $?) == 0 ]] && [[ -e pkgbuildinstallations64 ]]; then\n\techo >> PKGBUILD\n\tcat pkgbuildinstallations64 | while read -r line; do\n\t\techo -e \"\t$line\" >> PKGBUILD\n\tdone\nfi\nif [[ -e pkgbuildinstallations2 ]]; then\n\techo >> PKGBUILD\n\tcat pkgbuildinstallations2 | while read -r line; do\n\t\techo -e \"\t$line\" >> PKGBUILD\n\tdone\nfi\nif [[ -e pkgbuildinstallations1 ]] || [[ -e pkgbuildinstallations2 ]] || [[ -e pkgbuildinstallations32 ]] || [[ -e pkgbuildinstallations64 ]]; then\n\tif [[ $(grep '^install' pkgbuildinstallations1 2> /dev/null | wc -l) != $(echo $(($(cat pkgbuildinstallations1 2> /dev/null | wc -l) + $(cat pkgbuildinstallations2 2> /dev/null | wc -l) + $(cat pkgbuildinstallations32 2> /dev/null | wc -l) + $(cat pkgbuildinstallations64 2> /dev/null | wc -l)))) ]]; then\n\t\techo -e \"\\n\tcd ..\" >> PKGBUILD\n\tfi\nfi\necho -e \"\\n}\" >> PKGBUILD\n\n# Moving PKGBUILD (and .INSTALL, if it exists) and announcing its creation\npkgname=\"$(grep '^pkgname=' PKGBUILD | sed s'/^pkgname=//')\"\nrm -rf \"../$pkgname\" 2> /dev/null\nmkdir \"../$pkgname\" 2> /dev/null\nif [[ $(echo $?) != 0 ]]; then\n\techo -e \"${red}Error: Cannot create PKGBUILD directory, permission denied. Removing leftover files and exiting...${NC}\"\n\trm -rf \"$working_directory\"\n\trm -rf /tmp/debtap\n\texit 1\nfi\nmv PKGBUILD \"../$pkgname\"\npkgbuild_with_full_path=\"$(readlink -f \"../$pkgname/PKGBUILD\")\"\npkgbuild_location=\"$(dirname \"$pkgbuild_with_full_path\")\"\nif [[ -e .INSTALL ]]; then\n\tmv .INSTALL \"../$pkgname/$pkgname.install\"\n\techo -e \"${lightgreen}==>${NC} ${bold}PKGBUILD and \"$pkgname.install\" are now located in${normal} ${lightblue}\\\"$pkgbuild_location\\\"${NC} ${bold}and ready to be edited${normal}\"\nelse\n\techo -e \"${lightgreen}==>${NC} ${bold}PKGBUILD is now located in${normal} ${lightblue}\\\"$pkgbuild_location\\\"${NC} ${bold}and ready to be edited${normal}\"\nfi\n\n# Removing leftover files\necho -e \"${lightgreen}==>${NC} ${bold}Removing leftover files...${normal}\"\nrm -rf \"$working_directory\"\nrm -rf /tmp/debtap\nexit 0\n"
        }
      ]
    }
  ]
}