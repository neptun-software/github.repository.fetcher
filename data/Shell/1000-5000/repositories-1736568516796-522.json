{
  "metadata": {
    "timestamp": 1736568516796,
    "page": 522,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ToutyRater/v2ray-guide",
      "stars": 1666,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3564453125,
          "content": "# Node rules:\n## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n## Dependency directory\n## Commenting this out is preferred by some people, see\n## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n# Book build output\n_book\n\n# eBook build output\n*.epub\n*.mobi\n*.pdf\n\n#\nbuild.sh\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.08984375,
          "content": "language: \"node_js\"\nnode_js:\n- \"node\"\nbranches:\n  only:\n  - master\nscript: bash ./deploy.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.41015625,
          "content": "# V2Ray 配置指南\n\n## 声明\n\nV2Ray 配置指南（下称本指南）是网友自发编写的关于 V2Ray 如何配置及使用的指南，与 V2Ray 官方并无任何关系。尽管 V2Ray 厚爱将本指南的链接放到了其官网首页，这并不意味着本指南的建议或推荐为 V2Ray 官方所主张。\n\n## 简介\n\n### 什么是 V2Ray？\n\nV2Ray 是 Project V 下的一个工具。Project V 是一个包含一系列构建特定网络环境工具的项目，而 V2Ray 属于最核心的一个。 官方中介绍`Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。`不过从时间上来说，先有 V2Ray 才有 Project V。\n如果还是不理解，那么简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，可以用来科学上网（翻墙）学习国外先进科学技术。\n\nV2Ray 用户手册：[https://www.v2ray.com](https://www.v2ray.com)（已被墙）\n              [https://v2ray.cool](https://v2ray.cool)（已被墙）\n\nV2Ray 项目地址：[https://github.com/v2ray/v2ray-core](https://github.com/v2ray/v2ray-core)\n\nV2Ray Telegram 使用群链接：[https://t.me/projectv2ray](https://t.me/projectv2ray)\n\n### V2Ray 跟 Shadowsocks 有什么区别？\n\n区别还是有的，Shadowsocks 只是一个简单的代理工具，而 V2Ray 定位为一个平台，任何开发者都可以利用 V2Ray 提供的模块开发出新的代理软件。\n\n了解 Shadowsocks 历史的同学都知道，Shadowsocks 是 clowwindy 开发的自用的软件，开发的初衷只是为了让自己能够简单高效地科学上网，自己使用了很长一段时间后觉得不错才共享出来的。V2Ray 是 clowwindy 被喝茶之后 V2Ray 项目组为表示抗议开发的，一开始就致力于让大家更好更快的科学上网。\n\n由于出生时的历史背景不同，导致了它们性格特点的差异。\n\n简单来说，Shadowsocks 功能单一，V2Ray 功能强大。听起来似乎有点贬低 Shadowsocks 呢？当然不！换一个角度来看，Shadowsocks 简单好上手，V2Ray 复杂配置多。\n\n### 既然 V2Ray 复杂，为什么要用它？\n\n童鞋，某事物的优点和缺点总是相生相随的。相对来说，V2Ray 有以下优势：\n\n* **更完善的协议:** V2Ray 使用了新的自行研发的 VMess 协议，改正了 Shadowsocks 一些已有的缺点，更难被墙检测到\n* **更强大的性能:** 网络性能更好，具体数据可以看 [V2Ray 官方博客](https://steemit.com/cn/@v2ray/3cjiux)\n* **更丰富的功能:** 以下是部分 V2Ray 的功能\n    * mKCP: KCP 协议在 V2Ray 上的实现，不必另行安装 kcptun\n    * 动态端口：动态改变通信的端口，对抗对长时间大流量端口的限速封锁\n    * 路由功能：可以随意设定指定数据包的流向，去广告、反跟踪都可以\n    * 传出代理：看名字可能不太好理解，其实差不多可以称之为多重代理。类似于 Tor 的代理\n    * 数据包伪装：类似于 Shadowsocks-rss 的混淆，另外对于 mKCP 的数据包也可伪装，伪装常见流量，令识别更困难\n    * WebSocket 协议：可以 PaaS 平台搭建V2Ray，通过 WebSocket 代理。也可以通过它使用 CDN 中转，抗封锁效果更好\n    * Mux:多路复用，进一步提高科学上网的并发性能\n\n### 哪有十全十美的东西？\n\n少年悟性很高啊！当然没有！目前来说，V2Ray 有下面的缺点：\n- 配置复杂\n- 产业链不成熟\n\n### 为什么要写这篇文章？\n\n虽然其文档很详细，换个说法就是很长，一般用户看到这么长的使用文档都有点望而却步。另外我用 Google 搜索过 V2Ray，搜出来的文章非常少，只能寥寥数篇，而且至少都是好几月之前的，由于 V2Ray 的迭代速度快，一些文章对目前的 V2Ray 已经不适用了。所以我希望通过本指南：\n- 让大家了解到最新的 V2Ray 是什么样子的\n- 让大家知道利用 V2Ray 可以做些什么\n- 尝试用浅显易懂的语言来讲解 V2Ray 的配置\n- 分享一些配置案例\n\n然而最重要的是希望大家能够通过我写的配置指南看懂 V2Ray 的手册。\n\n### 听你说了这么多，好像 V2Ray 还不错的样子。但我只是要翻翻墙而已，不想花太多时间怎么办？\n\n无论做什么都是有代价的，付出不一定有收获，但是不付出肯定没有收获。\n\n### 我决定尝试一下 V2Ray，那么我该如何使用这个指南？\n\nV2Ray 的用户手册非常详细地解释了 V2Ray，本指南主要以实际可用的配置从易到难来讲解 V2Ray 的功能特性，力求降低新手使用 V2Ray 的难度。\n\n**本指南的目标用户是有一定的 Linux 操作基础，像怎么注册 VPS，怎么用 SSH 登录 VPS，怎么使用 nano（或 vim） 编辑一个文本以及一些 Linux 基本命令的使用件网上有一大堆的指南，没必要重复造轮子再写一篇教程，如果这些你不会，强烈建议你去学会了再来尝试搭建 V2Ray。**\n\n本指南可以看作 V2Ray 用户手册的简易版本，也可以看作 V2Ray 的应用举例。你可以在不参考 V2Ray 用户手册的情况下按照本指南的指导去搭建配置 V2Ray ，但我并不建议你这么做。因为本指南只是引导大家如何理解和配置 V2Ray，相较于用户手册来说有一定的取舍，会忽略一部分东西。所以我希望大家也花时间去阅读 V2Ray 用户手册。\n\n### 刚开始使用 V2Ray，有什么需要注意的吗？\n\n由于许多 V2Ray 用户都有使用过 Shadowsocks 的经验，基本上可以按照使用 Shadowsocks 那样使用。但是 V2Ray 还是和 Shadowsocks 不太一样，所以我大概说一下使用上的差异。请注意，差异不代表好坏或优劣，如果一个事物必须拥有其他同类所拥有的东西，那么它也就没有了存在的意义。\n\n- 客户端：V2Ray 本身只是一个内核，V2Ray 上的图形客户端大多是调用 V2Ray 内核套一个图形界面的外壳，类似于 Linux 内核和 Linux 操作系统的关系；而 Shadowsocks 的客户端都是自己重新实现了一遍 Shadowsocks 协议。本文的内容短期内不涉及图形客户端的使用。\n- 分流：也许大家第一反映是 PAC，实际上无论是 Shadowsocks (特指 Shadowsocks-libev) 还是 V2Ray 本身不支持 PAC，都是客户端加进来的；Shadowsocks 的分流使用 ACL，V2Ray 使用自己实现的路由功能，孰优孰劣只是仁者智者的问题。\n- 分享链接/二维码：V2Ray 不像 Shadowsocks 那样有统一规定的 URL 格式，所以各个 V2Ray 图形客户端的分享链接/二维码不一定通用。\n- 加密方式：V2Ray (特指 VMess 协议) 不像 Shadowsocks 那样看重对加密方式的选择，并且 VMess 的加密方式是由客户端指定的，服务器自适应。\n- 时间：使用 V2Ray 要保证时间准确，因为这是为了安全设计的。\n- 密码：V2Ray(VMesss) 只有 id（使用 UUID 的格式），作用类似于 Shadowsocks 的密码，但随机性远好于 Shadowsocks 的密码，只是不太方便记忆(安全和方便的矛盾)。\n- UDP 转发：VMess 是基于 TCP 的协议，对于 UDP 包 V2Ray 会转成 TCP 再传输的，即 UDP over TCP。要 UDP 转发功能在客户端的 socks 协议中开启 UDP 即可。\n- 路由器翻墙：实际上它们并没有什么区别，不要以为没有插件就不能在路由器上用，看事物请看本质。\n\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 1.73046875,
          "content": "# Summary\n\n* [前言](README.md)\n* [开篇](prep/README.md)\n  * [开始之前](prep/start.md)\n  * [安装 V2Ray](prep/install.md)\n  * [配置格式](prep/json.md)\n* [基本篇](basic/README.md)\n    * [VMess 协议](basic/vmess.md)\n    * [Shadowsocks 协议](basic/Shadowsocks.md)\n    * [日志文件](basic/log.md)\n    * [路由功能](basic/routing/README.md)\n        * [国内直连](basic/routing/cndirect.md)\n        * [广告过滤](basic/routing/adblock.md)\n        * [注意事项](basic/routing/notice.md)\n    * [小结](basic/sumup.md)\n* [高级篇](advanced/README.md)\n    * [Mux](advanced/mux.md)\n    * [mKCP](advanced/mkcp.md)\n    * [动态端口](advanced/dynamicport.md)\n    * [代理转发](advanced/outboundproxy.md)\n    * [国内中转](advanced/vps_relay.md)\n    * [HTTP 伪装](advanced/httpfake.md)\n    * [TLS](advanced/tls.md)\n    * [WebSocket](advanced/websocket.md)\n    * [WebSocket+TLS+Web](advanced/wss_and_web.md)\n    * [HTTP/2](advanced/h2.md)\n    * [CDN](advanced/cdn.md)\n    * [不建议的配置](advanced/not_recommend.md)\n* [应用篇](app/README.md)\n    * [透明代理(REDIRECT)](app/transparent_proxy.md)\n    * [透明代理(TPROXY)](app/tproxy.md)\n    * [反向代理/内网穿透](app/reverse.md)\n    * [反向代理/内网穿透2](app/reverse2.md)\n    * [内置 DNS](app/dns.md)\n    * [负载均衡](app/balance.md)\n    * [利用 V2Ray 看 Netflix](app/netflix.md)\n    * [Docker 部署 V2Ray](app/docker-deploy-v2ray.md)\n    * [不权威性能测试](app/benchmark.md)\n    * [内存优化](app/optimization.md)\n* [路由篇](routing/README.md)\n    * [域名文件](routing/sitedata.md)\n    * [路由规则设定方法](routing/configurate_rules.md)\n    * [禁止 BT](routing/bittorrent.md)\n    * [负载均衡 2](routing/balance2.md)\n"
        },
        {
          "name": "advanced",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "basic",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.65625,
          "content": "{\n  \"title\" : \"V2Ray 配置指南|V2Ray 白话文教程\",\n  \"description\": \"关于 V2Ray 配置的详细教程\",\n  \"plugins\": [\n    \"splitter\",\n    \"codeblock-filename\",\n    \"editlink\",\n    \"anchors\",\n    \"anchor-navigation-ex\",\n    \"theme-comscore\",\n    \"code\",\n    \"codeblock-filename\",\n    \"-highlight\",\n    \"prism\",\n    \"prism-themes\"\n  ],\n  \"pluginsConfig\":{\n    \"editlink\": {\n      \"base\": \"https://github.com/toutyrater/v2ray-guide/edit/master\",\n      \"label\": \"修订\"\n    },\n    \"prism\": {\n      \"css\": [\n        \"prismjs/themes/prism-okaidia.css\"\n      ]\n    }\n  },\n  \"links\" : {\n    \"sidebar\" : {\n      \"My GitHub\" : \"https://github.com/ToutyRater\"\n    }\n  }\n}\n"
        },
        {
          "name": "deploy.sh",
          "type": "blob",
          "size": 0.3935546875,
          "content": "\n#!/bin/bash\n\nnpm install gitbook-cli -g\ngitbook init\ngitbook install\ngitbook build\n\ncd _book\nrm .travis.yml deploy.sh .gitignore\ngit init\ngit config user.name \"Rater\"\ngit config user.email \"ToutyRater@users.noreply.github.com\"\ngit remote add upstream \"https://${GH_TOKEN}@github.com/ToutyRater/toutyrater.github.io\"\n\ngit checkout -b master\ngit add -A\ngit commit -m 'update'\ngit push upstream master -f\n"
        },
        {
          "name": "prep",
          "type": "tree",
          "content": null
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "routing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}