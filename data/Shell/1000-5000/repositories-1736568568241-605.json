{
  "metadata": {
    "timestamp": 1736568568241,
    "page": 605,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spiffe/spiffe",
      "stars": 1511,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": ".DS_Store\n__pycache__\n*.pyc\n*.swp\n*~\n.DS_Store\n\nsvid-test/test_results\nsvid-test/.certs\nsvid-test/.venv\nsvid-test/.cache\nsvid-test/.vagrant\n\n.idea\n"
        },
        {
          "name": ".img",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.841796875,
          "content": "sudo: true\ndist: trusty\n\nlanguage: c\n\nservices:\n    - docker\n\nscript:\n    - make -C svid-test generate\n    - make -C svid-test verify\n\nnotifications:\n    slack:\n        secure: QVfjBHslGpZiEM3AOc7wUIGERR+Jc3TbkdrVg9jI7IQPXL2IztKNJpWzMpGpPx1SzqLaJ02yIeJG9qJVV4JnpJ+ALBCtZijn7tnof5zTSdC+unZA1yl8TcpTQ1+ov1tRQ5c7cGW+Se3m6Qw+r1F1OmOJYAchd0jpiEWRucp6xl/Ae19c9qlMznraIm7/3XQ/wOb8zvwtdnCaNLCOIiWT+db1UO6WEwByfuZXE7ieoeogBKepcTvqgPSHK6fro05yTuc8CQlUWo8d+aAvT5LGp1rMrT7Q6YrpwAOEVDp5N+9vrD4thWfX4KjD832YOkJEdWLCME8nd/hshh8JGrJ2XuYU2OD2GK7xCgD7a/vT5z2uvgHn25riLEvvxokxbfcfsNamt3jGu1JNYNXiuORd7pfL9RFgQ9d2po5XSZRAqU0mgkeScB7HudN99PaaYfHQzWX1tI3gB3yfvtweRBM8Xw7spbpklt1rB7+vC3io8BecI4I/qWfMRrW+GICAW9J3n3j/Cp3/opcptiqOQ/Wv6ydGw79RVYlWzqR8Z7uBwZu5OP70/DSKwgeRgwDiJRnOgqAKfKD6qcqOgmg4nHB3396u6bSb3o+Q5dYgnNSsLB+fTU/o9pcn5M1myuBmwWhpopdAMysGgAjd+wcKh0lWsKr5wzHKH90uNd/L+udCCFI=\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 5.03125,
          "content": "### Contributor Code of Conduct\n\nWe follow the [CNCF Contributor Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md). Additionally, we commit to the following guidelines as detailed on the [Linkerd Code of Conduct](https://github.com/linkerd/linkerd/wiki/Linkerd-code-of-conduct):\n\n### Community Guidelines\n\n#### Principles\n\n- Our goal is to foster an inclusive and diverse community of technology enthusiasts.\n\n- Try to be your best self. Treat your fellow community members with kindness and empathy. We welcome disagreements when they are conducted respectfully and without personal attacks.\n\n- We ask that you keep unstructured critique to a minimum. Disparaging remarks about the project are unnecessary and a drain on community morale. Feedback should be constructive and relevant. Having passionately held opinions on what should improve is encouraged! We hope you will use that enthusiasm to roll up your sleeves and get involved by submitting pull requests. We have additional guidelines on [how to ask constructive questions](https://github.com/linkerd/linkerd/wiki/How-To-Ask-Questions-in-Slack).\n\n- We don't tolerate insults, spamming, trolling, flaming, baiting, or harassment. We don't tolerate sexual language, imagery, or unwanted advances. Private harassment is also unacceptable.\n\n- We do our best to avoid [subtle-isms](https://www.recurse.com/manual#sub-sec-social-rules): small actions that make others feel uncomfortable. If you witness a subtle-ism, you may respectfully point it out to the person publicly or privately, or you may ask a moderator to say something. Accidentally saying something biased is common, expected, and readily forgiven. It is not in and of itself a bannable offense.\n\n#### Workplace Color Spectrum\n\nTaking examples from several organizations (see References), we identify this spectrum of interactions:\n\nGreen:\nIn this interaction everyone was socially aware and respectful. Everyone considered and listened to others' perspectives, even if they disagreed with opinions or proposals.\n\nYellow:\nIn this interaction someone was overly reactive. A \"knee jerk\" reaction to a statement, outcome, or situation caused frustration, anger, or some other negativity to surface *and* result in impacting others' comfortability, feeling of belonging in the community, or otherwise caused disruption. It is completely human to have negative emotions, but we must respectfully manage our emotions and not unleash them upon others.\nMuch like subtle-isms, nearly everyone will on occassion dip into Yellow. To err is human. It shows emotional maturity to recognize when this has happened and apologize for the behavior. It is a community concern if the situation keeps repeating, resulting in a warning and eventual banning.\n\nRed:\nEither excessive repeating of Yellow, or outright harassment, insults, etc. as listed non-exhaustively in Principles.\nThese interactions contribute to a toxic environment, are disruptive to productivity, and cause an unwelcoming or unsafe atmosphere.\nRed interactions are likely to result in at least temporary bans.\n\nThreats and violence will result in immediate permanent bans and involvement of law enforcement.\n\n### Moderation\n\nPlease report any Code of Conduct violations to [this confidential google form](https://forms.gle/HipfZoXdciReACDM9) or to the [SPIFFE Steering Committee (SSC) email](mailto:ssc@spiffe.io).\n\nIf you feel any of SPIFFE's communication channels require moderation, please e-mail the [SSC](mailto:ssc@spiffe.io).\n\nThe SSC will investigate all reports in a reasonable timeframe.\nThe SSC encourages timely reporting so that any potential evidence or other investigations will be more viable.\nAt the end of an investigation, the SSC will respond to reporters with the high-level conclusion of any action resulting from their report. If you would like clarity on a decision, the SSC is happy to discuss. If you are unsatisfied and still believe the situation requires escalation, report to [the CNCF Code of Conduct Committee](https://www.cncf.io/conduct/committee/).\n\nRetaliation against Code of Conduct reporters will result in a permanent ban.\n\nThe SSC confidentially tracks all reports centrally, discussing information only with other CoC bodies under CNCF/Linux Foundation and only on an as-needed basis. All past SSC members are expected to continue to respect this confidentiality indefinitely- the SSC will consider it an egregious Code of Conduct violation to expose such information.\n\nWhen discussing violations with a user, the SSC will make reasonable attempts to generalize information so that it is still useful but not identifying of the reporter. This will not always be possible (eg., if a report is made regarding a 1-on-1 interaction).\n\nThe SSC will issue a warning to users who don't follow this code of conduct. A second offense results in a temporary ban. A third offense warrants a permanent ban. It is at the SSC's discretion to un-ban offending users, or to immediately ban a user without warning due to egregious action (violence, threats).\n\n### References\n\n- https://emtrain.com/workplace-color-spectrum/\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.296875,
          "content": "##\n## SPIFFE Maintainers\n##\n\n*  @evan2645 @justinburke @spikecurtis @azdagron\n\n/CODE-OF-CONDUCT.md @spiffe/ssc\n/GOVERNANCE.md      @spiffe/ssc\n/MATURITY.md        @spiffe/ssc\n/NEW_PROJECTS.md    @spiffe/ssc\n/README.md          @spiffe/ssc\n/community/         @spiffe/ssc\n/ssc/               @spiffe/ssc\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.166015625,
          "content": "# Contributing to the SPIFFE Project\n\nThe change management process for the SPIFFE Project is designed to be transparent, fair, and\nefficient. Anyone may contribute to a project in the SPIFFE repositories that they have read access\nto, provided they:\n\n* Abide by the CNCF [code of conduct](/CODE-OF-CONDUCT.md)\n* Can certify the clauses in the [Developer Certificate of Origin](/DCO) (DCO)\n\nTo get started:\n\n* First, [README](/README.md) to become familiar with how the SPIFFE Project is managed\n* Make sure you're familiar with our [Coding Conventions](#conventions) when appropriate\n\nIf you're new to the SPIFFE Project, we recommend that you join us on the mailing lists and Slack to\ndiscuss any potential changes you'd like to see made.\n\nIf your proposal comes under the purview of a SIG, reach out to the SIG lead and seek their feedback\nfirst (bugfixes and changes with minor impact don't need this). The SIG lead may refer you to the\nbroader group.\n\n## Sending a pull request\n\n1. Fork the repo\n1. Commit changes to your fork\n1. Update the docs, if necessary\n1. Ensure your branch is based on the latest commit in `main`\n1. Ensure all tests pass (see project docs for more information)\n2. Make sure your commit messages contain a `Signed-off-by: <your-email-address>` line (see `git-commit --signoff`) to certify the [DCO](/DCO)\n1. Open a [pull request](https://help.github.com/articles/creating-a-pull-request-from-a-fork/)\n  against the upstream `main` branch\n\nAll changes to SPIFFE projects must be code reviewed in a pull request (this goes for everyone, even\nthose who have merge rights).\n\n## After your pull request is submitted\n\nPull requests are approved according to the process described in our [governance\npolicies](/GOVERNANCE.md). At least one maintainer must approve the pull request, and for large\nchanges, another independent reviewer must approve it too.\n\nOnce your pull request is submitted, it's your responsibility to:\n\n* Respond to reviewer's feedback\n* Keep it merge-ready at all times until it has been approved and actually merged\n\nFollowing approval, the pull request will be merged by the last maintainer to approve the request.\n\n## Coding Conventions <a name=\"conventions\"></a>\n\nGenerally, these are the coding conventions SPIFFE projects should follow. Maintainers will consider\nthese conventions when reviewing pull requests.\n\n* **General**\n  * Command-line flags should use dashes, not underscores\n  * Plugin and API protobuf comments are expected to be accompanied with markdowns generated with\n    [protoc-gen-doc](https://github.com/pseudomuto/protoc-gen-doc)\n  * All documentation and code must conform to the [Inclusive Naming Initiative](https://inclusivenaming.org) [guidelines](https://inclusivenaming.org/language/word-list/)\n  * All filenames should be lowercase\n    * Source filenames and directories should use underscores, no dashes (snake case)\n    * Document filenames and directories should use dashes rather than underscores (kebab case)\n  * Most significant functionality must come with unit tests\n  * Significant features should have integration and/or end-to-end tests\n  * Unit tests should be fully hermetic. Only access resources in the test binary\n  * Concurrent unit test runs must pass\n* **Go**\n  * [Effective Go](https://golang.org/doc/effective_go.html)\n  * [Go's commenting conventions](http://blog.golang.org/godoc-documenting-go-code)\n* **Bash**\n  * [Google shell conventions](https://google.github.io/styleguide/shell.xml)\n* **Python**\n  * [PEP8](https://www.python.org/dev/peps/pep-0008/)\n\n#### Third-party code\n\nWhen third-party code must be included, all licenses must be preserved. This includes modified\nthird-party code and excerpts, as well.\n\n#### Repositories and Licenses\n\nAll repositories under this project should include:\n\n* A detailed `README.md` which includes a link back to this file\n* A `LICENSE` file with the Apache 2.0 license\n* A [CODEOWNERS](https://help.github.com/articles/about-codeowners/) file listing the maintainers\n\nAll code projects should use the [Apache License version\n2.0](https://www.apache.org/licenses/LICENSE-2.0), and all documentation repositories should use the\n[Creative Commons License version 4.0](https://creativecommons.org/licenses/by/4.0/legalcode).\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.3876953125,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 7.1328125,
          "content": "The SPIFFE Project succeeds because of an open, inclusive, and respectful community. Ideas and contributions are accepted based on their technical merit and alignment with project objectives, scope, and design principles. This document lists a non-exclusive set of guidelines to help ensure fairness and transparency in managing the SPIFFE Project.\n\n## Code of Conduct\n\nThe SPIFFE community abides by the Cloud Native Computing Foundation's [code of conduct](/CODE-OF-CONDUCT.md). An excerpt follows:\n\n> _As contributors and maintainers of this project, and in the interest of fostering an open and\n> welcoming community, we pledge to respect all people who contribute through reporting issues,\n> posting feature requests, updating documentation, submitting pull requests or patches, and other\n> activities._\n\nSPIFFE community members represent the project and their fellow contributors. We value our community tremendously, and we'd like to keep cultivating a friendly and collaborative environment for our contributors and users. We want everyone in the community to have positive experiences.\n\n## Project Roles\n\n### Users\n\nThese are individuals who 1) want to learn more about the SPIFFE Project; or 2) are existing users of SPIFFE and its tools who wish to follow the Project's progress. They may have questions, comments, or suggestions that can be communicated via Slack, GitHub, or during community calls and events. They can follow along as the Project's special interest groups (SIGs) do their work.\n\n### Contributors\n\nThese are individuals who wish to contribute code or ideas to SPIFFE projects. Contributors submit code and ideas through GitHub or through participation in SPIFFE's community calls.\n\n### Maintainers\n\nThese are individuals who can merge submitted PRs into the primary codebase (note: the Project requires PRs be approved by at least one (1) maintainer). Maintainers also adhere to the following:\n\n* They are an active SPIFFE contributor. This includes, but is not limited to, regular attendance of SPIFFE community meetings and SIGs relevant to the components they maintain.\n* They respond to PR review requests in a timely manner. Generally, a response is expected within 24 hours of the PR being submitted.\n* They ensure that code changes they approve:\n  * Meet the [coding conventions](/CONTRIBUTING.md) required by the Project. This includes ensuring the code is sufficiently well tested, follows the appropriate standards, and, of course - does not break the build.  \n  * Is consistent with the goals and direction of the Project. This requires not just code and architectural correctness, but also ensuring that it does not introduce \"scope creep,\" and does not unduly affect existing users.\n* Once a PR has the requisite approvals, the last approving maintainer is responsible for merging the change (however, the PR's author must ensure the change is merge-ready).\n\nMaintainers are documented in each repository's [CODEOWNERS](https://help.github.com/articles/about-codeowners/) file. To become a maintainer, one must:\n\n* Work in a helpful and collaborative way with the community\n* Have a track record of providing constructive feedback on others' PRs\n* Have submitted at least 20 PRs themselves\n\nThe process for nominating and approving Maintainers is:\n\n* Open a PR against the CODEOWNERS file that covers the parts of the project you wish to nominate someone (or yourself) for\n* A consensus of existing Maintainers must approve your PR\n\n### The SPIFFE Steering Committee (SSC)\n\nThe SPIFFE Project is governed by the [SSC](https://github.com/spiffe/spiffe/blob/master/ssc/README.md) that is exclusively responsible for SPIFFE's [standards](https://github.com/spiffe/spiffe/tree/master/standards) and the Project's strategic goals and direction. SSC members have final authority over:\n\n* Technical direction of the Project.\n* Project governance and process (this document).\n* Contribution policy.\n\nThe SSC adheres to the following:\n\n* The SSC meets the first Wednesday of each month ([Meeting Notes](https://docs.google.com/document/d/14YlmMTqwqNdx-CWapwwIBMaakH5Z2UnAvOBQBB8AwQM) | [Calendar ICS](https://calendar.google.com/calendar/ical/c_gck7v87m9obq6n3hpo01l7csus%40group.calendar.google.com/public/basic.ics))\n* The SSC is comprised of at least five (5) members.\n* No more than 2 SSC members may be affiliated with the same organization.\n* At least 40% of the SSC must be represented by organizations that currently have a SPIFFE implementation deployed in production.\n* Each SSC member's term is 24 months.\n* There is no limit to the number of terms an SSC member can serve.\n* SSC members may remove themselves voluntarily at any time.\n\nFor more information about the SSC, please refer to the [SSC Charter](ssc/CHARTER.md).\n\n## Decision Making\n\nMaintainer and SSC decisions are made by a [lazy consensus](http://rave.apache.org/docs/governance/lazyConsensus.html) approach. When formal voting is required, members may abstain. Negative votes must be accompanied by an explanation or alternative proposal.\n\n## Change Review Process\n\n**All changes must be submitted as a GitHub Pull Request (PR)**\n\nThe submitter of a PR is responsible for responding to feedback from reviewers and maintainers. While the PR remains open, they are also responsible for ensuring the change is always in a state where it can be merged. Guidelines for submitting a PR for approval can be found [here](/CONTRIBUTING.md).\n\n**All minor changes must be approved by at least one other Maintainer**\n\nDocumentation changes, bugfixes, or other minor changes that do not significantly impact most users must be approved by at least one (1) maintainer.\n\n**All major changes must be approved by at least two (2) other Maintainers**\n\nNew or changed functionality require two (2) maintainer approvals.\n\n## Special Interest Groups (SIGs)\n\nThe SPIFFE Project has various SIGs that focus on specific parts or features. SIGs provide an avenue for face-to-face discussion of important design changes with key stakeholders. Each SIG is run by a *SIG Lead* who is responsible for the logistics of running the meeting, and for ensuring the group reaches consensus on any issues raised. Active SIGs, their leads, and meeting information are [listed here](/README.md#sigs).\n\n### Responsibilities of the SIG Lead\n\n* Organize regular meetings as necessary, ideally at least for 30 minutes every two weeks.\n* Announce meeting agenda and minutes after each meeting on their SIG mailing list.\n* Keep up-to-date meeting notes, linked from the SIG's page in the community repository.\n* Record SIG meetings and make said recordings publicly available.\n* Ensure the SIG's mailing list and Slack channel are archived.\n* Report activity in the weekly community meeting at least once every four (4) weeks.\n* Use the above forums as the primary means of working, communicating, and collaborating, as opposed to private e-mails and meetings.\n\nTo propose a new SIG on a particular topic, [please follow our guidelines](/community/sig-creation-procedure.md).\n\n## License\n\nAll software is licensed under the [Apache License version 2.0](https://www.apache.org/licenses/LICENSE-2.0), and all documentation is licensed under the [Creative Commons License version 4.0](https://creativecommons.org/licenses/by/4.0/legalcode).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright The SPIFFE Project & Scytale, Inc\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MATURITY.md",
          "type": "blob",
          "size": 6.556640625,
          "content": "# SPIFFE Project Maturity Phases\nSPIFFE comprises a handful of software projects, all of which share a common governance structure. As these projects may vary in their respective levels of maturity, it is important for SPIFFE/SPIRE users to have a strong sense of what to expect prior to adopting or deploying them.\n\nThis document provides detailed information about the maturity phases of the various projects that are part of the overarching [SPIFFE project](https://github.com/spiffe).\n\nTo be considered as a new SPIFFE project, see instructions at [NEW_PROJECTS](/NEW_PROJECTS.md).\n\nThe SPIFFE project maintains three phases of maturity which indicate the level of reliability and scale at which a particular project or sub-project is known to support:\n- **Development**: The software is still under active development, and many efforts are exploratory. APIs and interfaces may change rapidly and without warning. Use this software for development and proof of concept purposes, but stability and longevity is not guaranteed.\n- **Pre-Production**: The software is relatively stable and being used to solve real problems. APIs and interfaces may change, but effort will be made to consider compatibility. Use this software for integration investigation and technology evaluation. Some early adopters may choose to run this software in production, however it is not recommended. Deprecation of this software is unlikely.\n- **Production**: The software is stable and being used in production at scale. APIs and interfaces have compatibility guarantees. Use of this software is safe for mission critical purposes. Deprecation of this software will be performed on a years-long time scale.\n- **Deprecated**: The software is no longer maintained, and may or may not continue to fill its intended purpose. While API stability is assumed due to lack of development, compatibility with other components is not guaranteed and likely to break in due time. Use of this software is not recommended.\n\n## Changing the Maturity of a SPIFFE Project\nWhen a project is ready to change its maturity level, one of its maintainers raises a PR against it to update the documented level and/or maturity badge. This PR must tag the SSC and remain open for a minimum of two weeks, during which time anyone is welcome to ask questions or object. Any difficult questions or objections are raised to the next regularly scheduled SSC call for discussion.\n\nTo merge the PR and effect the change of maturity level, the PR must be approved by at least two active SSC members.\n\n---\n\n## Development [![Development Phase](https://github.com/spiffe/spiffe/blob/main/.img/maturity/dev.svg)](https://github.com/spiffe/spiffe/blob/main/MATURITY.md#development)\n\n### Description\nSoftware in the **Development** phase is being actively developed by the SPIFFE community, and is still in its infancy. The primary audience of this software is developers and technology enthusiasts.\n\n### Characteristics\nCharacteristics of software in the Development phase:\n\n- Apache 2 licensed\n- Rapidly evolving (days-to-weeks)\n- No compatibility guarantee (or by extension, upgrade guarantee)\n- Supported by developers actively working on the software\n- Basic documentation (e.g. a README.md file) has been written, and includes:\n  - A clear indication that it is in the **Development** phase\n  - Description of its covered use cases\n  - Supported versions of relevant components (e.g. supported SPIRE versions, etc)\n  - Known limitations\n\n## Pre-Production [![Pre-Production Phase](https://github.com/spiffe/spiffe/blob/main/.img/maturity/pre-prod.svg)](https://github.com/spiffe/spiffe/blob/main/MATURITY.md#pre-production)\n\n### Description\nSoftware in the **Pre-Production** phase is still under active development by the SPIFFE community, but is relatively stable and has entered into a more mature phase than software still in the **Development** phase.\n\n### Characteristics\nCharacteristics of software in the **Pre-Production** phase:\n\n- Apache 2 licensed\n- Moderate velocity (weeks-to-month)\n- Best effort compatibility guarantee\n- A comprehensive set of examples is available\n- Automated test suites are exercised regularly\n- Pre-built artifacts are published and made publicly available\n- Supported by both developers and early adopter community\n- A security policy is clearly defined (i.e. SECURITY.md)\n  - A security contact must be specified\n  - A response time must be specified\n- Software has been fully documented and includes:\n  - A clear indication that it is in the **Pre-Production** phase\n  - Supported versions of relevant components (e.g. supported SPIRE versions, etc)\n  - Known limitations\n  - Basic troubleshooting\n  - API documentation\n\n## Production [![Production Phase](https://github.com/spiffe/spiffe/blob/main/.img/maturity/prod.svg)](https://github.com/spiffe/spiffe/blob/main/MATURITY.md#production)\n\n### Description\nSoftware in the **Production** phase is stable and actively maintained. It can be relied upon to operate in production and at scale.\n\n### Characteristics\nCharacteristics of software in the **Production** phase:\n\n- Apache 2 licensed\n- Moderate to low velocity (month-to-months)\n- Well tested via unit, functional, and integration test suites on multiple platforms (when applicable)\n- Strict compatibility guarantees are in place and upgrade/compatibility guidance is published\n- Pre-built artifacts are published by an automated system for multiple platforms (when applicable)\n- Supported by maintainers and a broad community of adopters\n- A security policy and response process is clearly defined and includes:\n  - Acknowledgement time of less than seven days\n- ADOPTERS.md file is present\n- Software documentation is complete and includes:\n  - A clear indication that it is in the **Production** phase\n  - Working examples exercised by automated test suites\n  - Known bugs\n  - Comprehensive troubleshooting guide(s)\n  - Complete API documentation\n  - Architecture and deployment guidelines\n\n## Deprecated [![Deprecated Phase](https://github.com/spiffe/spiffe/blob/main/.img/maturity/deprecated.svg)](https://github.com/spiffe/spiffe/blob/main/MATURITY.md#deprecated)\n\n### Description\nSoftware in the **Deprecated** phase is no longer actively developed. Emergency releases may occur in response to security issues on a case-by-case basis, however such maintenance should not be expected. Do not adopt this software.\n\n### Characteristics\nCharacteristics of software in the **Deprecated** phase:\n\n- A clear indication in the documentation that it is in the **Deprecated** phase\n- Apache 2 licensed\n- Zero velocity\n- Not tested or exercised in any official capacity\n- Likely to be removed from GitHub in the near future\n"
        },
        {
          "name": "NEW_PROJECTS.md",
          "type": "blob",
          "size": 7.2890625,
          "content": "# Introduction\n\nThe Secure Production Identity Framework For Everyone (SPIFFE) Project defines a framework and set of standards for identifying and securing communications between application services. You can read more about it at the [README](/README.md).\n\nYou may be interested in contributing a project to SPIFFE in order to:\n- Fill some technological or use case gap\n- Enhance UX for operators of a SPIFFE solution such as [SPIRE](https://github.com/spiffe/spire).\n- Build on top of one or multiple existing solutions as a unique offering\nor other possible motivations.\n\n# Creating or donating a new SPIFFE Project\n\nWe are grateful for your desire to expand the SPIFFE ecosystem with your contribution!\n\nThis is an evolving set of guidelines and instructions for how to bring your existing project, or idea for a completely fresh project, under the SPIFFE organization.\n\nIf your project is already under the SPIFFE banner, you may be looking for [MATURITY](/MATURITY.md) instead.\n\n## Notice\n\nMaintainer groups are given significant freedom in managing their projects to that we may best foster growth and innovation. There are some elements of SPIFFE subproject ownership to be aware of:\n- The [SPIFFE Steering Committee](/ssc/README.md) (SSC) governs the SPIFFE organization as a whole, and has the final authority on acceptance, rejection, or eviction of projects. Additionally, as stewards of community health, the SSC is responsible for intervening in any [Code of Conduct](/CODE-OF-CONDUCT.md) violations or derelictions of maintainer responsibility.\n- Note that when contributing a project to SPIFFE, its purpose becomes to serve the SPIFFE community rather than any personal gain. Additionally, we expect a sufficient number of maintainers for a project as it grows, not all of whom may bring the same direction you may originally have had in mind.\n\nCarefully consider this change in control and purpose.\n\n*Every SPIFFE project* at minimum must follow the [SPIFFE Code of Conduct](/CODE-OF-CONDUCT.md).\n\n## Tiny Projects\n\nSome projects may be very small and yet still:\n- valuable enough to maintain under the SPIFFE umbrella\n- unique enough to not be included as part of another existing project\n\nThese are core overriding changes for such projects:\n- The threshold for rationale of a separate project rather than inclusion in another is likely to be higher\n- There will be more tolerance for lighter core maintainer membership, which may be supplemented by a [\"tiny projects\" maintainer group](https://github.com/orgs/spiffe/teams/tiny-projects-maintainers/members) (today, the SSC) for trivial maintenance actions (ex. dependency updates, minor tidying):\nIf this supplementing is needed:\n- the documentation, testing, quality bar for the project is likely to be higher. Supplemental maintainers may lack full context for the project and thus require reliable documentation discovery and testing tools.\n- the project will be more aggressively periodically reviewed for need- whether it is still in-use at all or should be archived\n\n## Project Proposal\n\n### Contact\n\nThe SSC is happy to have initial discussions on proposal details at ssc@spiffe.io or in [the #ssc channel](https://spiffe.slack.com/archives/C01GQ267JJU) of [SPIFFE slack](https://slack.spiffe.io).\n\nFor the formal proposal, we do ask for a GitHub issue to be made against the SPIFFE project for better community involvement, discovery, and posterity.\n\n### Proposal Outline\n\nThe following details are expected for proposals to help us best understand how the project will serve the community.\n\nAdditionally, the information here make great initial `README.md`, `CONTRIBUTING.md`, and `GOVERNANCE.md` files for the repo!\n\n#### Initial Maintainer List\n\nThe list of initial maintainers of the project, including GitHub handle.\n\n#### Project Purpose and Direction\n\nWhat need is the project solving for the community? What problem exists or what enhancement will this create?\n\nWhat is the *direction* of the project? This is similar but distinct from the *purpose* of the project.\n\nWhile the purpose highlights the \"Why\" and \"What\" of the project, the direction should be about the \"How\".\nThis could include-\nVision:\n- What specific pain point does the project address?\n- What does \"done\" mean for the project? What is the idealized vision for the shape of the project? What are the milestones to complete for each level of [maturity](/MATURITY.md)?\n- What notable features or options are in-scope or out-of-scope for the project? This especially will help differentiate your project from any similar ones that might already exist.\n- What are the current workarounds or alternative solutions, and why are they inadequate?\n- How does your project align with SPIFFE's overall mission and goals?\n- Who are the primary end-users or beneficiaries of this project?\n\nDirection:\n- What is the project’s roadmap for the next 6-12 months?\n- What are practices or styles that will be encouraged or discouraged?\n- How will the project scale? What are the scalability goals?\n- Are there any legal or ethical considerations?\n- What are potential challenges, and how do you plan to overcome them?\n- What kind of community involvement do you foresee (e.g., are there opportunities for novice contributors, or is the project more suitable for experts in the field?)\n- What technologies will the project leverage, and are they aligned with the larger ecosystem?\n- How will the project maintain data integrity, security, and privacy?\n- Are there any possible collaborations with existing SPIFFE projects?\n- How will your project deal with failure scenarios or fallbacks?\n\nIt's ok if there's not fully fleshed-out answers to each of these, and projects evolve over time. However the more information that can be provided the more easily SSC may understand the proposal, and the more confidence there will be in alignment amongst the maintainers.\n\n#### Governance\n\nThe operations of the project.\n\n- How will maintainers be added or removed? What is the goal number of maintainers?\n- How often will the maintainers meet?\n- How will maintainers interact with contributors and review their Pull Requests and Issues? Slack? Dedicated online meetings? What is the goal turn around time?\n- What conflict resolution mechnisms will the maintainers follow? (e.g., allocated debate time? Majority vote? Unanimous vote for certain topics? What is the SLO for resolution?)\n\n#### Similar Projects\n\nDo similar projects already exist actively within the SPIFFE community? If so, what makes this project sufficiently unique to justify any overlap?\n\nDo similar projects exist outside of SPIFFE that can better help us understand the project's value?\n\nHas this project existed in the past but was abandoned or closed out? What is different in today's world?\n\n## Project Review\n\nThe SSC will work with you to schedule a review of the proposal. Ideally all initial maintainers would be present in that review. Anyone not present should at least sign off on the proposal so that we know there is a unified commitment.\n\nThe SSC will bring up any concerns around the proposal, but overall we aim to accept proposals that serve even a subsection of the community as long as there is confidence that the project will be healthy.\n\nThe SSC meets regularly, and will do its best to come to resolution within a couple sync cycles. Acceptance of a new project into the community is a significant decision, and your patience is appreciated.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0751953125,
          "content": "![SPIFFE Logo](https://github.com/spiffe/spiffe/blob/main/community/logo/256x1024.png?raw=true)\n\n\n\n\n[![Production Phase](https://github.com/spiffe/spiffe/blob/main/.img/maturity/prod.svg)](https://github.com/spiffe/spiffe/blob/main/MATURITY.md#production)\n\nThe Secure Production Identity Framework For Everyone (SPIFFE) Project defines a framework and set of\nstandards for identifying and securing communications between application services. At its core, SPIFFE is:\n\n* A standard defining how services identify themselves to each other. These are called *SPIFFE IDs* and are implemented as [Uniform Resource Identifiers (URIs)](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier).\n\n* A standard for encoding SPIFFE IDs in a cryptographically-verifiable document called a SPIFFE Verifiable Identity Document or *SVIDs*.\n\n* An API specification for issuing and/or retrieving SVIDs. This is the *Workload API*.\n\nThe SPIFFE Project has a reference implementation, the SPIRE (the SPIFFE Runtime Environment), that in addition to the above, it:\n\n* Performs node and workload attestation.\n\n* Implements a signing framework for securely issuing and renewing SVIDs.\n\n* Provides an API for registering nodes and workloads, along with their designated SPIFFE IDs.\n\n* Provides and manages the rotation of keys and certs for mutual authentication and encryption between workloads.\n\n* Simplifies access from identified services to secret stores, databases, services meshes and cloud provider services.\n\n* Interoperability and federation to SPIFFE compatible systems across heterogeneous environments and administrative trust boundaries.\n\n\nSPIFFE is a [graduated](https://www.cncf.io/projects/spiffe/) project of the [Cloud Native Computing Foundation](https://cncf.io) (CNCF). If you are an organization that wants to help shape the evolution of technologies that are container-packaged, dynamically-scheduled and microservices-oriented, consider joining the CNCF.\n\n## SPIFFE Standards\n\n* [Secure Production Identity Framework for Everyone (SPIFFE)](standards/SPIFFE.md)\n* [The SPIFFE Identity and Verifiable Identity Document](standards/SPIFFE-ID.md)\n* [The X.509 SPIFFE Verifiable Identity Document](standards/X509-SVID.md)\n* [The JWT SPIFFE Verifiable Identity Document](standards/JWT-SVID.md)\n* [The SPIFFE Trust Domain and Bundle](standards/SPIFFE_Trust_Domain_and_Bundle.md)\n* [The SPIFFE Workload Endpoint](standards/SPIFFE_Workload_Endpoint.md)\n* [The SPIFFE Workload API](standards/SPIFFE_Workload_API.md)\n* [SPIFFE Federation](standards/SPIFFE_Federation.md)\n\n## Getting Started\n\n* [spiffe](https://github.com/spiffe/spiffe): This repository includes the SPIFFE ID, SVID and Workload API specifications, example code, and tests, as well as project governance, policies, and processes.    \n* [spire](https://github.com/spiffe/spire): This is a reference implementation of SPIFFE and the SPIFFE Workload API that can be run on and across varying hosting environments.\n* [go-spiffe](https://github.com/spiffe/go-spiffe/tree/main/v2): Golang client libraries.\n* [java-spiffe](https://github.com/spiffe/java-spiffe): Java client libraries\n\n### Communications\n\n  * [Slack](https://spiffe.slack.com) (Join [here](https://slack.spiffe.io)).\n  * <announce@spiffe.io> (View or join [here](https://groups.google.com/a/spiffe.io/forum/#!forum/announce)).\n  * <dev-discussion@spiffe.io> (View or join [here](https://groups.google.com/a/spiffe.io/forum/#!forum/dev-discussion)).\n  * <user-discussion@spiffe.io> (View or join [here](https://groups.google.com/a/spiffe.io/forum/#!forum/user-discussion)).\n\n### Contribute\n\n* [CONTRIBUTING](/CONTRIBUTING.md)\n* [GOVERNANCE](/GOVERNANCE.md)\n\n### SIGs & Working Groups<a name=\"sigs\"></a>\n\nMost community activity is organized into Special Interest Groups (SIGs), time-bounded working groups, and our monthly community-wide meetings. SIGs follow these [guidelines](GOVERNANCE.md#special-interest-groups-sigs), although each may operate differently depending on their needs and workflows. Each group's material can be found in the [/community](/community) directory of this repository.\n\n| Name | Lead | Group | Slack Channel | Meetings |\n|:------:|:-------:|:-------:|:---------------:|:----------:|\n| [SIG-Community](/community/sig-community/README.md) | [Umair Khan](https://github.com/umairmkhan) (HPE) | [Here](https://groups.google.com/a/spiffe.io/g/sig-community) | [Here](https://spiffe.slack.com/messages/community) | [Notes](https://docs.google.com/document/d/1tb3lxubwr8IKRd6Smnl83ur14xkOQdjwQqla9OHjwZo) |\n| [SIG-Spec](/community/sig-spec/README.md) | [Evan Gilman](https://github.com/evan2645) (VMware) | [Here](https://groups.google.com/a/spiffe.io/forum/#!forum/sig-specification) | [Here](https://spiffe.slack.com/messages/sig-spec) | [Notes](https://docs.google.com/document/d/1f64vbyn5sOb8Mr1H3mGGGul3vTKo4r6cTBcUV3N9OFo) |\n| [SIG-SPIRE](/community/sig-spire/README.md) | [Daniel Feldman](https://github.com/dfeldman) (HPE) | [Here](https://groups.google.com/a/spiffe.io/forum/#!forum/sig-spire) | [Here](https://spiffe.slack.com/messages/spire) | [Notes](https://docs.google.com/document/d/1IgpCkvSRSoY9Xd16gFQJJ1KP8sLZ7EE39cEjBK_UIg4) |\n\n**Follow the SPIFFE Project** You can find us on [Github](https://github.com/spiffe/) and [Twitter](https://twitter.com/SPIFFEio).\n\n## SPIFFE SSC\nThe [SPIFFE Steering Committee](/GOVERNANCE.md#the-spiffe-steering-committee-ssc) meets on a regular cadence to review project progress, address maintainer needs, and provide feedback on strategic direction and industry trends. Community members interested in joining this call can find details below.\n\n* Calendar: [iCal](https://calendar.google.com/calendar/ical/c_gck7v87m9obq6n3hpo01l7csus%40group.calendar.google.com/public/basic.ics) or [Browser-based](https://calendar.google.com/calendar/embed?src=c_gck7v87m9obq6n3hpo01l7csus%40group.calendar.google.com&ctz=America%2FChicago)\n* Meeting Notes: [Google Doc](https://docs.google.com/document/d/14YlmMTqwqNdx-CWapwwIBMaakH5Z2UnAvOBQBB8AwQM)\n* Call Details: [Zoom Link](https://zoom.us/j/95959131216?pwd=akw4RzlEUEVCTnFkWE5KdWFPZXpkdz09)\n\nTo contact the SSC privately, please send an email to [ssc@spiffe.io](mailto:ssc@spiffe.io).\n"
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssc",
          "type": "tree",
          "content": null
        },
        {
          "name": "standards",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}