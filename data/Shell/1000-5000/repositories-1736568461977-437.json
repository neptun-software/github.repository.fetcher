{
  "metadata": {
    "timestamp": 1736568461977,
    "page": 437,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tmux-plugins/tmux-sensible",
      "stars": 1837,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0849609375,
          "content": "# Force text files to have unix eols, so Windows/Cygwin does not break them\n*.* eol=lf\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.3583984375,
          "content": "# Changelog\n\n### master\n- remove `detach-on-destroy`\n- do not set `aggressive-resize` on iTerm terminal\n- disable `detach-on-destroy`\n\n### v3.0.0, 2015-06-24\n- remove 'almost sensible' feature\n\n### v2.3.0, 2015-06-24\n- update to support \\*THE\\* latest tmux version\n- bugfix for `prefix + R` key binding\n- fix for tmux 2.0 `default-terminal` option (thanks @kwbr)\n\n### v2.2.0, 2015-02-10\n- bugfix in `key_binding_not_set`: the regex is now properly detecting key\n  bindings with `-r` flag.\n- enable `aggressive-resize`\n\n### v2.1.0, 2014-12-12\n- check before binding `prefix + prefix` (@m1foley)\n- enable `focus-events`\n- deprecate 'almost sensible' feature. The reason for this is to focus the\n  plugin on doing just one thing.\n\n### v2.0.0, 2014-10-03\n- bugfix: prevent exiting tmux if 'reattach-to-user-namespace' is not installed\n- remove all mouse-related options\n- introduce 'almost sensible' setting and options\n\n### v1.1.0, 2014-08-30\n- bugfix: determine the default shell from the $SHELL env var on OS X\n- set `mode-mouse on` by default\n- do not make any decision about the prefix, just enhance it\n- update `README.md`. List options set in the plugin.\n- do *not* set `mode-mouse on` by default because some users don't like it\n- if a user changes default prefix but binds `C-b` to something else, do not\n  unbind `C-b`\n\n### v1.0.0, 2014-07-30\n- initial work on the plugin\n- add readme\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (C) 2014 Bruno Sutic\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.296875,
          "content": "# Tmux sensible\n\nA set of tmux options that should be acceptable to everyone.\n\nInspired by [vim-sensible](https://github.com/tpope/vim-sensible).\n\nTested and working on Linux, OSX and Cygwin.\n\n### Principles\n\n- `tmux-sensible` options should be acceptable to **every** tmux user!<br/>\n  If any of the options bothers you, please open an issue and it will probably\n  be updated (or removed).\n- if you think a new option should be added, feel free to open a pull request.\n- **no overriding** of user defined settings.<br/>\n  Your existing `.tmux.conf` settings are respected and they won't be changed.\n  That way you can use `tmux-sensible` if you have a few specific options.\n\n### Goals\n\n- group standard tmux community options in one place\n- remove clutter from your `.tmux.conf`\n- educate new tmux users about basic options\n\n### Options\n\n```tmux\n# Address vim mode switching delay (http://superuser.com/a/252717/65504)\nset -s escape-time 0\n\n# Increase scrollback buffer size from 2000 to 50000 lines\nset -g history-limit 50000\n\n# Increase tmux messages display duration from 750ms to 4s\nset -g display-time 4000\n\n# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s\nset -g status-interval 5\n\n# (OS X) Fix pbcopy/pbpaste for old tmux versions (pre 2.6)\nset -g default-command \"reattach-to-user-namespace -l $SHELL\"\n\n# Upgrade $TERM\nset -g default-terminal \"screen-256color\"\n\n# Emacs key bindings in tmux command prompt (prefix + :) are better than\n# vi keys, even for vim users\nset -g status-keys emacs\n\n# Focus events enabled for terminals that support them\nset -g focus-events on\n\n# Super useful when using \"grouped sessions\" and multi-monitor setup\nsetw -g aggressive-resize on\n```\n\n### Key bindings\n\n```tmux\n# Easier and faster switching between next/prev window\nbind C-p previous-window\nbind C-n next-window\n```\n\nAbove bindings enhance the default `prefix + p` and `prefix + n` bindings by\nallowing you to hold `Ctrl` and repeat `a + p`/`a + n` (if your prefix is\n`C-a`), which is a lot quicker.\n\n```tmux\n# Source .tmux.conf as suggested in `man tmux`\nbind R source-file '~/.tmux.conf'\n```\n\n\"Adaptable\" key bindings that build upon your `prefix` value:\n\n```tmux\n# If prefix is 'C-a'\nbind C-a send-prefix\nbind a last-window\n```\n\nIf prefix is `C-b`, above keys will be `C-b` and `b`.<br/>\nIf prefix is `C-z`, above keys will be `C-z` and `z`... you get the idea.\n\n### Installation with [Tmux Plugin Manager](https://github.com/tmux-plugins/tpm) (recommended)\n\nAdd plugin to the list of TPM plugins in `.tmux.conf`:\n\n```tmux\nset -g @plugin 'tmux-plugins/tmux-sensible'\n```\n\nHit `prefix + I` to fetch the plugin and source it. That's it!\n\n### Manual Installation\n\nClone the repo:\n\n    $ git clone https://github.com/tmux-plugins/tmux-sensible ~/clone/path\n\nAdd this line to the bottom of `.tmux.conf`:\n\n```tmux\nrun-shell ~/clone/path/sensible.tmux\n```\n\nReload TMUX environment with `$ tmux source-file ~/.tmux.conf`, and that's it.\n\n### Other goodies\n\nYou might also find these useful:\n\n- [copycat](https://github.com/tmux-plugins/tmux-copycat)\n  improve tmux search and reduce mouse usage\n- [pain control](https://github.com/tmux-plugins/tmux-pain-control)\n  useful standard bindings for controlling panes\n- [resurrect](https://github.com/tmux-plugins/tmux-resurrect)\n  persists tmux environment across system restarts\n\n### License\n\n[MIT](LICENSE.md)\n"
        },
        {
          "name": "sensible.tmux",
          "type": "blob",
          "size": 4.2236328125,
          "content": "#!/usr/bin/env bash\n\nCURRENT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\n# used to match output from `tmux list-keys`\nKEY_BINDING_REGEX=\"bind-key[[:space:]]\\+\\(-r[[:space:]]\\+\\)\\?\\(-T prefix[[:space:]]\\+\\)\\?\"\n\nis_osx() {\n\tlocal platform=$(uname)\n\t[ \"$platform\" == \"Darwin\" ]\n}\n\niterm_terminal() {\n\t[[ \"${TERM_PROGRAM}\" =~ ^iTerm || \"${LC_TERMINAL}\" =~ ^iTerm ]]\n}\n\ncommand_exists() {\n\tlocal command=\"$1\"\n\ttype \"$command\" >/dev/null 2>&1\n}\n\n# returns prefix key, e.g. 'C-a'\nprefix() {\n\ttmux show-option -gv prefix\n}\n\n# if prefix is 'C-a', this function returns 'a'\nprefix_without_ctrl() {\n\tlocal prefix=\"$(prefix)\"\n\techo \"$prefix\" | cut -d '-' -f2\n}\n\noption_value_not_changed() {\n\tlocal option=\"$1\"\n\tlocal default_value=\"$2\"\n\tlocal option_value=$(tmux show-option -gv \"$option\")\n\t[ \"$option_value\" == \"$default_value\" ]\n}\n\nserver_option_value_not_changed() {\n\tlocal option=\"$1\"\n\tlocal default_value=\"$2\"\n\tlocal option_value=$(tmux show-option -sv \"$option\")\n\t[ \"$option_value\" == \"$default_value\" ]\n}\n\nkey_binding_not_set() {\n\tlocal key=\"${1//\\\\/\\\\\\\\}\"\n\tif $(tmux list-keys | grep -q \"${KEY_BINDING_REGEX}${key}[[:space:]]\"); then\n\t\treturn 1\n\telse\n\t\treturn 0\n\tfi\n}\n\nkey_binding_not_changed() {\n\tlocal key=\"$1\"\n\tlocal default_value=\"$2\"\n\tif $(tmux list-keys | grep -q \"${KEY_BINDING_REGEX}${key}[[:space:]]\\+${default_value}\"); then\n\t\t# key still has the default binding\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n}\n\nget_tmux_config() {\n\tlocal tmux_config_xdg=\"${XDG_CONFIG_HOME:-$HOME/.config}/tmux/tmux.conf\"\n\tlocal tmux_config=\"$HOME/.tmux.conf\"\n\n\tif [ -f \"${tmux_config_xdg}\" ]; then\n\t\techo \"${tmux_config_xdg}\"\n\telse\n\t\techo ${tmux_config}\n\tfi\n}\n\nmain() {\n\t# OPTIONS\n\n\t# address vim mode switching delay (http://superuser.com/a/252717/65504)\n\tif server_option_value_not_changed \"escape-time\" \"500\"; then\n\t\ttmux set-option -s escape-time 0\n\tfi\n\n\t# increase scrollback buffer size\n\tif option_value_not_changed \"history-limit\" \"2000\"; then\n\t\ttmux set-option -g history-limit 50000\n\tfi\n\n\t# tmux messages are displayed for 4 seconds\n\tif option_value_not_changed \"display-time\" \"750\"; then\n\t\ttmux set-option -g display-time 4000\n\tfi\n\n\t# refresh 'status-left' and 'status-right' more often\n\tif option_value_not_changed \"status-interval\" \"15\"; then\n\t\ttmux set-option -g status-interval 5\n\tfi\n\n\t# required (only) on OS X\n\tif is_osx && command_exists \"reattach-to-user-namespace\" && option_value_not_changed \"default-command\" \"\"; then\n\t\ttmux set-option -g default-command \"reattach-to-user-namespace -l $SHELL\"\n\tfi\n\n\t# upgrade $TERM, tmux 1.9\n\tif option_value_not_changed \"default-terminal\" \"screen\"; then\n\t\ttmux set-option -g default-terminal \"screen-256color\"\n\tfi\n\t# upgrade $TERM, tmux 2.0+\n\tif server_option_value_not_changed \"default-terminal\" \"screen\"; then\n\t\ttmux set-option -s default-terminal \"screen-256color\"\n\tfi\n\n\t# emacs key bindings in tmux command prompt (prefix + :) are better than\n\t# vi keys, even for vim users\n\ttmux set-option -g status-keys emacs\n\n\t# focus events enabled for terminals that support them\n\ttmux set-option -g focus-events on\n\n\t# super useful when using \"grouped sessions\" and multi-monitor setup\n\tif ! iterm_terminal; then\n\t\ttmux set-window-option -g aggressive-resize on\n\tfi\n\n\t# DEFAULT KEY BINDINGS\n\n\tlocal prefix=\"$(prefix)\"\n\tlocal prefix_without_ctrl=\"$(prefix_without_ctrl)\"\n\n\t# if C-b is not prefix\n\tif [ $prefix != \"C-b\" ]; then\n\t\t# unbind obsolete default binding\n\t\tif key_binding_not_changed \"C-b\" \"send-prefix\"; then\n\t\t\ttmux unbind-key C-b\n\t\tfi\n\n\t\t# pressing `prefix + prefix` sends <prefix> to the shell\n\t\tif key_binding_not_set \"$prefix\"; then\n\t\t\ttmux bind-key \"$prefix\" send-prefix\n\t\tfi\n\tfi\n\n\t# If Ctrl-a is prefix then `Ctrl-a + a` switches between alternate windows.\n\t# Works for any prefix character.\n\tif key_binding_not_set \"$prefix_without_ctrl\"; then\n\t\ttmux bind-key \"$prefix_without_ctrl\" last-window\n\tfi\n\n\t# easier switching between next/prev window\n\tif key_binding_not_set \"C-p\"; then\n\t\ttmux bind-key C-p previous-window\n\tfi\n\tif key_binding_not_set \"C-n\"; then\n\t\ttmux bind-key C-n next-window\n\tfi\n\n\t# source `.tmux.conf` file - as suggested in `man tmux`\n\tif key_binding_not_set \"R\"; then\n\t\tlocal tmux_config=$(get_tmux_config)\n\n\t\ttmux bind-key R run-shell \" \\\n\t\t\ttmux source-file ${tmux_config} > /dev/null; \\\n\t\t\ttmux display-message 'Sourced ${tmux_config}!'\"\n\tfi\n}\nmain\n"
        }
      ]
    }
  ]
}