{
  "metadata": {
    "timestamp": 1736568333189,
    "page": 261,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dqzboy/Docker-Proxy",
      "stars": 2400,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.064453125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control\n.pdm.toml\n.pdm-python\n.pdm-build/\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n"
        },
        {
          "name": "Ad",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2275390625,
          "content": "FROM node:lts-alpine\n# 设置工作目录\nWORKDIR /app\n# 复制项目文件到工作目录\nCOPY hubcmdui/ .\n# 安装项目依赖\nRUN npm install\n# 暴露应用程序的端口\nEXPOSE 3000\n# 运行应用程序\nCMD [\"node\", \"server.js\"]"
        },
        {
          "name": "Issue",
          "type": "tree",
          "content": null
        },
        {
          "name": "Koyeb",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 12.4697265625,
          "content": "<p align=\"right\">\n    <a href=\"./README.md\">中文</a> | <strong>English</strong>\n</p>\n\n<div style=\"text-align: center\">\n  <p align=\"center\">\n  <img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/c187d66f-152e-4172-8268-e54bd77d48bb\" width=\"230px\" height=\"200px\">\n      <br>\n      <i>Self-built Docker image acceleration service, based on the official registry, one-click deployment of Docker, K8s, Quay, Ghcr, Mcr, elastic, nvcr and other image acceleration management services.</i>\n  </p>\n</div>\n\n<div align=\"center\">\n\n[![Auth](https://img.shields.io/badge/Auth-dqzboy-ff69b4)](https://github.com/dqzboy)\n[![GitHub contributors](https://img.shields.io/github/contributors/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy/graphs/contributors)\n[![GitHub Issues](https://img.shields.io/github/issues/dqzboy/Docker-Proxy.svg)](https://github.com/dqzboy/Docker-Proxy/issues)\n[![GitHub Pull Requests](https://img.shields.io/github/stars/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy)\n[![HitCount](https://views.whatilearened.today/views/github/dqzboy/Docker-Proxy.svg)](https://github.com/dqzboy/Docker-Proxy)\n[![GitHub license](https://img.shields.io/github/license/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy/blob/main/LICENSE)\n\n\n📢 <a href=\"https://t.me/+ghs_XDp1vwxkMGU9\" style=\"font-size: 15px;\">Docker Proxy-Communication Group</a>\n\n</div>\n\n---\n\n## 📝 Preparation\n⚠️  **Important:** Choose a server located abroad and not blocked in your region. For the domain name, there is no need to register it with domestic authorities. You can also apply for a free domain through various platforms. During the one-click deployment process, if you choose to install Caddy, it will automatically configure HTTPS. If you opt to deploy Nginx, you'll need to apply for a free SSL certificate yourself or use other methods to implement SSL encryption.\n\n> High-Cost-Effective Overseas VPS Recommendation: [Click to View](Ad/README.md) \n\n<details>\n<summary><strong>Free domain certificate application</strong></summary>\n<div>\n\n**Method one:** [Acme.sh Automatically Generate and Renew Lets Encrypt Free SSL Certificate](https://www.dqzboy.com/16437.html)\n\n**Method two:** Domain hosted to[Cloudflare enabling free SSL certificate](https://www.cloudflare.com/zh-cn/application-services/products/ssl/)\n\n**Method Three:** You can apply for a free domain certificate (typically a DV certificate) through a third-party platform, suitable for personal websites, blogs, and small projects.\n\n</details>\n\n<details>\n<summary><strong>If you don't have the environment mentioned above, you can try the following several schemes</strong></summary>\n<div>\n\n**Scheme one:**  🚀 🚀 If you don't have the things mentioned above, you can also deploy to **[Render](Render/README.md)**\n\n**Scheme two:** If you only have one server and don't want to deal with domain names or configure TLS, then you can configure Docker's configuration file `daemon.json`, and specify `insecure-registries` to configure your image acceleration address\n\n**Scheme three:** If you're deploying on a server within China, you can configure proxies while executing one-click deployment, which will also help solve the problem of Docker not being able to install domestically\n\n</details>\n\n\n> **During the deployment process, if you encounter any issues or questions, please scroll down to find the [problem](Issue/issue.en.md), see if your situation has been listed! Try to resolve it yourself first.**\n\n---\n\n\n## 📦 Deploy\n### Deploy through project script\n```shell\n# CentOS && RHEL && Rocky\nyum -y install curl\n# ubuntu && debian\napt -y install curl\n\n# overseas environment\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/dqzboy/Docker-Proxy/main/install/DockerProxy_Install.sh)\"\n\n# domestic environment\nbash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/dqzboy/Docker-Proxy/install/DockerProxy_Install.sh)\"\n```\n\n### Deployment to Third-Party Platforms\n<details>\n<summary><strong>Deploy to Render</strong></summary>\n<div>\n\n> Render offers a free quota, and you can further increase the quota after adding a card.\n\nDeploy quickly with Render: [View Tutorial](Render/README.md)\n\n</details>\n\n<details>\n<summary><strong>Deploy to Koyeb</strong></summary>\n<div>\n\n> The domain name assigned by Koyeb is not very stable when accessed in the domestic area, not highly recommended!\n\nDeploy quickly with Koyeb: [View Tutorial](Koyeb/README.md)\n\n</details>\n\n\n### Docker Compose Deployment\n<details>\n<summary><strong>Manual Container Deployment</strong></summary>\n<div>\n\n**⚠️ Note:** Download the configuration for whichever mirror repository you need to accelerate. The `docker-compose.yaml` file by default deploys the acceleration service for all foreign mirror repositories, again you configure whichever one you deploy, and delete the rest!\n\n**1.** Download the corresponding `yml` file from the [config](https://github.com/dqzboy/Docker-Proxy/tree/main/config) directory to your local machine.\n\n**2.** Download the [docker-compose.yaml](https://github.com/dqzboy/Docker-Proxy/blob/main/docker-compose.yaml) file to your local machine and place it in the same directory level as the configuration file.\n\n**3.** Execute the `docker compose` command to start the container service.\n```shell\ndocker compose up -d\n\n# View container logs\ndocker logs -f [Container ID or Name]\n```\n\n**4.** If you are not familiar with Nginx or Caddy, you can use a service you are familiar with for proxying. You can also access directly via IP and port number.\n\n</details>\n\n\n## 🔨 Features\n- [x] One-click deployment of Docker image proxy services, supporting proxy based on the official Docker Registry. \n- [x] Supports proxy for multiple image repositories, including Docker Hub, GitHub Container Registry (ghcr.io), Quay Container Registry (quay.io), Kubernetes Container Registry (k8s.gcr.io), Microsoft Container (mcr.microsoft.com), Elastic Stack (docker.elastic.co).\n- [x] Automatically checks for and installs required dependency software such as Docker, Nginx/Caddy, etc., and ensures the system environment meets the operational requirements.\n- [x] Automatically renders the corresponding Nginx or Caddy service configuration based on the service you choose to deploy.\n- [x] Automatically cleans up files in the registry upload directory that are no longer referenced by any image or manifest.\n- [x] Support custom configuration of proxy cache time(PROXY_TTL)、Support configuring IP whitelist and blacklist to prevent malicious attacks.\n- [x] Provides features for restarting services, updating services, updating configurations, and uninstalling services, making it convenient for users to perform daily management and maintenance.\n- [x] Supports user selection of whether to provide authentication during deployment.\n- [x] Supports configuration of proxy (HTTP_PROXY), only supports HTTP.\n- [x] Solves the problem of being unable to install Docker services in the domestic environment.\n- [x] Supports mainstream Linux distribution operating systems, such as CentOS, Ubuntu, Rocky, Debian, RHEL, etc.\n- [x] Supports deployment on mainstream ARCH architectures, including linux/amd64, linux/arm64.\n\n## ✨ Tutorial\n#### Configure Nginx Reverse Proxy\n> **Note**： If you choose to deploy with Nginx, after the proxy program is deployed, you need to configure Nginx yourself.<br>\n\n**1.Download the [registry-proxy.conf](https://raw.githubusercontent.com/dqzboy/Docker-Proxy/main/nginx/registry-proxy.conf) configuration file from the repository to your Nginx service and modify the domain name and certificate sections in the configuration** <br>\n**2.Resolve the corresponding access domain name to the IP of the machine where the Docker proxy service is deployed at your DNS service provider** <br>\n**3.Modify the Docker daemon.json configuration to configure your self-built Registry address. Restart Docker after modification**\n```shell\n~]# vim /etc/docker/daemon.json\n{\n    \"registry-mirrors\": [ \"https://hub.your_domain_name\" ],\n    \"log-opts\": {\n      \"max-size\": \"100m\",\n      \"max-file\": \"5\"\n    }\n}\n```\n\n> **Explanation：** After configuring the daemon.json, you no longer need to specify your acceleration address when pulling images; simply execute docker pull to retrieve the images you need. The following steps are for when you have not configured the daemon.json, and you need to include your acceleration address to pull images normally.\n\n---\n\n**1. Replace the official Registry address with your own Registry address to pull the image.**\n```shell\n# Docker Hub Registry\n## Original: nginx:latest\n## Replace with:\ndocker pull hub.your_domain_name/library/nginx:latest\n\n# Google Registry\n## Original: gcr.io/google-containers/pause:3.1\n## Replace with:\ndocker pull gcr.your_domain_name/google-containers/pause:3.1\n```\n\n**2. Prefix replacement reference for the Registry.**\n\n| Source | Replace with | Platform |\n|-------|---------------|----------|\n| docker.io   | hub.your_domain_name   |  docker hub \n| gcr.io      | gcr.your_domain_name   |  Google Container Registry\n| ghcr.io     | ghcr.your_domain_name  |  GitHub Container Registry\n| k8s.gcr.io     | k8s-gcr.your_domain_name  | Kubernetes Container Registry\n| registry.k8s.io     | k8s.your_domain_name  | Kubernetes's container image registry\n| quay.io     | quay.your_domain_name  | Quay Container Registry\n| mcr.microsoft.com     | mcr.your_domain_name  | Microsoft Container Registry\n| docker.elastic.co     | elastic.your_domain_name  | Elastic Stack\n| nvcr.io    | nvcr.your_domain_name  | NVIDIA Container Registry\n\n---\n\n> **Detailed Tutorial:**  <br>\n> [Self-built Docker Image Acceleration Service: Accelerating and Optimizing Image Management](https://www.dqzboy.com/8709.html) <br>\n> [Build your own Docker image acceleration, and host the domain name to CF to accelerate image pulling.](https://www.dqzboy.com/17665.html)\n\n## 📚 Display\n<br/>\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b>System Environment Check</b></td>\n      <td width=\"50%\" align=\"center\"><b>Service Deployment and Installation</b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/55df7f6f-c788-4200-9bcd-631998dc53ef?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=https://github.com/dqzboy/Docker-Proxy/assets/42825450/c544fb1e-ecd5-447c-9661-0c5913586118?raw=true\"></td>\n    </tr>\n</table>\n\n## 💻 UI\n<br/>\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b>Docker Registry UI</b></td>\n      <td width=\"50%\" align=\"center\"><b>Docker-Proxy CmdUI</b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/0ddb041b-64f6-4d93-b5bf-85ad3b53d0e0?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/user-attachments/assets/c7e368ca-7f1a-4311-9a10-a5f4f06d86d8?raw=true\"></td>\n    </tr>\n</table>\n\n---\n\n## 🫶 Sponsorship\nIf you find this project helpful, please give it a Star. And if possible, you can also give me a little support. Thank you very much for your support.😊\n\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b> Alipay </b></td>\n      <td width=\"50%\" align=\"center\"><b> WeChat Pay </b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Deploy_K8sCluster/assets/42825450/223fd099-9433-468b-b490-f9807bdd2035?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Deploy_K8sCluster/assets/42825450/9404460f-ea1b-446c-a0ae-6da96eb459e3?raw=true\"></td>\n    </tr>\n</table>\n\n---\n\n## 👨🏻‍💻 Issue\n\n<details>\n<summary><strong>Problem Summary</strong></summary>\n<div>\n\n> Summary of common issues related to deployment and usage, welcome to add more！\n\nProblem Summary: [Click to view](Issue/issue.en.md)\n\n</details>\n\n---\n\n## 😺 Other\n\nOpen Source is not easy, if you reference this project or make modifications based on it, could you please credit this project in your documentation? Thank you!\n\n\n## ❤ Acknowledgements\nThanks to the open source contributions of the following projects:\n\n[CNCF Distribution](https://distribution.github.io/distribution/) \n\n[docker-registry-browser](https://github.com/klausmeyer/docker-registry-browser)\n\n\n## 🤝 Contributing\n\nThanks to everyone who has contributed!\n\n<a href=\"https://github.com/dqzboy/Docker-Proxy/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=dqzboy/Docker-Proxy\" />\n</a>\n\n\n## License\nDocker-Proxy is available under the [Apache 2 license](./LICENSE)\n\n---\n\n[![Star History Chart](https://api.star-history.com/svg?repos=dqzboy/Docker-Proxy&type=Date)](https://star-history.com/#dqzboy/Docker-Proxy&Date)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.404296875,
          "content": "<p align=\"right\">\n   <strong>中文</strong> | <a href=\"./README.en.md\">English</a>\n</p>\n\n<div style=\"text-align: center\">\n  <p align=\"center\">\n  <img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/c187d66f-152e-4172-8268-e54bd77d48bb\" width=\"230px\" height=\"200px\">\n      <br>\n      <i>自建Docker镜像加速服务，基于官方 registry 一键部署Docker、K8s、Quay、Ghcr、Mcr、elastic、nvcr等镜像加速\\管理服务.</i>\n  </p>\n</div>\n\n<div align=\"center\">\n\n[![Auth](https://img.shields.io/badge/Auth-dqzboy-ff69b4)](https://github.com/dqzboy)\n[![GitHub contributors](https://img.shields.io/github/contributors/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy/graphs/contributors)\n[![GitHub Issues](https://img.shields.io/github/issues/dqzboy/Docker-Proxy.svg)](https://github.com/dqzboy/Docker-Proxy/issues)\n[![GitHub Pull Requests](https://img.shields.io/github/stars/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy)\n[![HitCount](https://views.whatilearened.today/views/github/dqzboy/Docker-Proxy.svg)](https://github.com/dqzboy/Docker-Proxy)\n[![GitHub license](https://img.shields.io/github/license/dqzboy/Docker-Proxy)](https://github.com/dqzboy/Docker-Proxy/blob/main/LICENSE)\n\n\n📢 <a href=\"https://t.me/+ghs_XDp1vwxkMGU9\" style=\"font-size: 15px;\">Docker Proxy-TG交流群</a> ｜ <a href=\"https://qm.qq.com/q/oIUXCxY2oS\" style=\"font-size: 15px;\">Docker Proxy-QQ交流群</a>\n\n</div>\n\n---\n\n## 📝 准备工作\n⚠️  **重要**：选择一台国外服务器，并且未被墙。对于域名，无需进行国内备案。你也可以通过一些平台申请免费域名。在一键部署过程中，如果选择安装Caddy，它将自动配置HTTPS。若选择部署Nginx服务，则需要自行申请一个免费的SSL证书，或者通过其他方式来实现SSL加密。\n\n<details>\n<summary><strong>免费域名证书申请</strong></summary>\n<div>\n\n**方式一：** [Acme.sh自动生成和续订Lets Encrypt免费SSL证书](https://www.dqzboy.com/16437.html)\n\n**方式二：** 域名托管到[Cloudflare 开启免费SSL证书](https://www.cloudflare.com/zh-cn/application-services/products/ssl/)\n\n**方式三：** 可通过第三方平台，申请免费的域名证书(免费一般都为DV证书)，适用于个人网站、博客和小型项目\n\n</details>\n\n\n<details>\n<summary><strong>如果你没有上面提到的环境，那么你也可以尝试以下的几种方案</strong></summary>\n<div>\n\n**方案一：**  🚀 如果你身边没有上面提到的这些东西，那么你也可以部署到 **[Render](Render/README.md)**\n\n**方案二：** 如果你只有一台服务器，不想搞域名也不想配置TLS，那么你可以修改Docker的配置文件`daemon.json`，指定`insecure-registries` 为你的镜像加速地址\n\n**方案三：** 如果你是在国内的服务器部署，那么你可以在执行一键部署时配置代理，同时会帮你解决国内无法安装Docker的问题\n\n**方案四：** 试试这个项目，基于[Cloudflare Workers](https://github.com/dqzboy/Workers-Proxy-Docker)搭建Docker镜像代理服务\n\n</details>\n\n---\n\n> **部署过程中出现的问题或者疑问，请点击这里 [问题总结](Issue/issue.md)，查看是否有你遇到的情况！尝试先自己解决。**\n\n<a href=\"https://dqzboy.github.io/proxyui/racknerd\" target=\"_blank\">\n    <img src=\"https://github.com/user-attachments/assets/88f7dd6c-cb5e-4fdb-ba6b-d882d39cba8c\" alt=\"高性价比海外 VPS 推荐\" title=\"点击查看\">\n</a>\n\n---\n\n\n## 📦 部署\n### 通过项目脚本部署\n```shell\n# CentOS && RHEL && Rocky\nyum -y install curl\n# ubuntu && debian\napt -y install curl\n\n# 国外环境\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/dqzboy/Docker-Proxy/main/install/DockerProxy_Install.sh)\"\n\n# 国内环境cdn加速地址\nbash -c \"$(curl -fsSL https://cdn.jsdelivr.net/gh/dqzboy/Docker-Proxy/install/DockerProxy_Install.sh)\"\n\n# 国内Github代理地址\nbash -c \"$(curl -fsSL https://ghp.ci/https://raw.githubusercontent.com/dqzboy/Docker-Proxy/main/install/DockerProxy_Install.sh)\"\n```\n\n### 部署到第三方平台\n<details>\n<summary><strong>部署到 Render</strong></summary>\n<div>\n\n> Render 提供免费额度，绑卡后可以进一步提升额度\n\n使用Render快速部署: [点击查看教程](Render/README.md)\n\n</details>\n\n<details>\n<summary><strong>部署到 Koyeb</strong></summary>\n<div>\n\n> Koyeb 分配的域名在国内地区访问不是很稳定，不是很推荐！\n\n使用Koyeb快速部署: [点击查看教程](Koyeb/README.md)\n\n</details>\n\n\n### Docker Compose 部署\n<details>\n<summary><strong>手动部署容器</strong></summary>\n<div>\n\n**⚠️ 注意：** 你需要对哪个镜像仓库进行加速，就下载哪个配置。`docker-compose.yaml`文件默认是部署所有的国外镜像仓库的加速服务，同样也是你部署哪个就配置哪个，其余的删除掉即可！\n\n**1.** 下载[config](https://github.com/dqzboy/Docker-Proxy/tree/main/config)目录下对应的`yml`文件到你本地机器上\n\n**2.** 下载[docker-compose.yaml](https://github.com/dqzboy/Docker-Proxy/blob/main/docker-compose.yaml)文件到你本地机器上，并且与配置文件同级目录下\n\n**3.** 执行 `docker compose` 或 `docker-compose` 命令启动容器服务\n```shell\n# 启动全部容器\ndocker compose up -d\n\n# 启动指定的容器,例如: Docker Hub Registry Proxy\ndocker compose up -d dockerhub\n\n# 查看容器日志\ndocker logs -f [容器ID或名称]\n```\n\n**4.** 如果你对Nginx或Caddy不熟悉,那么你可以使用你熟悉的服务进行代理。也可以直接通过IP+端口的方式访问\n\n</details>\n\n\n## 🔨 功能\n- [x] 一键部署Docker镜像代理服务的功能，支持基于官方Docker Registry的镜像代理. \n- [x] 支持多个镜像仓库的代理，包括Docker Hub、GitHub Container Registry(ghcr.io)、Quay Container Registry(quay.io)、Kubernetes Container Registry(k8s.gcr.io)、Microsoft Container(mcr.microsoft.com)、Elastic Stack(docker.elastic.co)\n- [x] 自动检查并安装所需的依赖软件，如Docker\\Compose、Nginx\\Caddy等，并确保系统环境满足运行要求\n- [x] 根据你所选择部署的WEB反代服务，自动渲染对应的Nginx或Caddy服务配置\n- [x] 自动清理注册表上传目录中的那些不再被任何镜像或清单引用的文件\n- [x] 支持自定义配置代理缓存时间(PROXY_TTL)、支持配置IP黑白名单，防止恶意攻击行为\n- [x] 提供了服务管理、配置管理、服务卸载、认证授权等功能，方便用户进行日常管理和维护\n- [x] 支持一键配置本机Docker代理和容器服务代理(HTTP_PROXY)，仅支持http\n- [x] 支持国内服务器一键部署，解决国内环境无法安装Docker\\Compose服务难题\n- [x] 支持主流Linux发行版操作系统,例如Centos、Ubuntu、Rocky、Debian、Rhel等\n- [x] 支持主流ARCH架构下部署，包括linux/amd64、linux/arm64\n- [x] 针对本项目开发Docker Registry管理面板，实现镜像搜索、广告展示、文档教程、容器管理、容器监控告警、网络测试等功能\n\n## ✨ 教程\n#### 配置Nginx反向代理\n> **注意**： 如果你选择部署的是Nginx，那么代理程序部署完成之后，需自行配置 Nginx <br>\n\n**1.下载仓库下的nginx配置文件 [registry-proxy.conf](https://raw.githubusercontent.com/dqzboy/Docker-Proxy/main/nginx/registry-proxy.conf) 到你的nginx服务下，并修改配置里的域名和证书部分** <br>\n**2.在你的DNS服务提供商将相应的访问域名解析到部署docker proxy服务的机器IP上** <br>\n**3.修改Docker的daemon.json配置，配置你自建的Registry地址。修改后重启docker**\n```shell\n~]# vim /etc/docker/daemon.json\n{\n    \"registry-mirrors\": [ \"https://hub.your_domain_name\" ]\n}\n```\n\n> **说明：** 配置了`daemon.json`之后，现在拉取镜像无需指定你的加速地址，直接执行`docker pull`拉取你需要的镜像即可。下面的步骤是你在没有配置`daemon.json`的时候，拉取镜像需要加上你的加速地址才可以正常拉取。\n\n---\n\n**1. 使用自建的 Registry 地址替换官方的 Registry 地址拉取镜像**\n```shell\n# docker hub Registry\n## 源：nginx:latest\n## 替换\ndocker pull hub.your_domain_name/library/nginx:latest\n\n# Google Registry\n## 源：gcr.io/google-containers/pause:3.1\n## 替换：\ndocker pull gcr.your_domain_name/google-containers/pause:3.1\n```\n\n**2. 前缀替换的 Registry 的参考**\n\n| 源站 | 替换为 | 平台 |\n|-------|---------------|----------|\n| docker.io   | hub.your_domain_name   |  docker hub \n| gcr.io      | gcr.your_domain_name   |  Google Container Registry\n| ghcr.io     | ghcr.your_domain_name  |  GitHub Container Registry\n| k8s.gcr.io     | k8s-gcr.your_domain_name  | Kubernetes Container Registry\n| registry.k8s.io     | k8s.your_domain_name  | Kubernetes's container image registry\n| quay.io     | quay.your_domain_name  | Quay Container Registry\n| mcr.microsoft.com     | mcr.your_domain_name  | Microsoft Container Registry\n| docker.elastic.co     | elastic.your_domain_name  | Elastic Stack\n| nvcr.io    | nvcr.your_domain_name  | NVIDIA Container Registry\n\n---\n\n> **详细教程：** <br>\n> [自建Docker镜像加速服务：加速与优化镜像管理](https://www.dqzboy.com/8709.html)<br>\n> [自建Docker镜像加速，并把域名托管到CF加速镜像拉取](https://www.dqzboy.com/17665.html)\n\n## 📚 展示\n<br/>\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b>系统环境检查</b></td>\n      <td width=\"50%\" align=\"center\"><b>服务部署安装</b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/55df7f6f-c788-4200-9bcd-631998dc53ef?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/c544fb1e-ecd5-447c-9661-0c5913586118?raw=true\"></td>\n    </tr>\n</table>\n\n## 💻 UI界面\n\n> HubCMD-UI 手动安装教程：[点击查看教程](hubcmdui/README.md)\n\n<br/>\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b>Docker Registry UI</b></td>\n      <td width=\"50%\" align=\"center\"><b>Docker-Proxy CmdUI</b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Docker-Proxy/assets/42825450/0ddb041b-64f6-4d93-b5bf-85ad3b53d0e0?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/user-attachments/assets/c7e368ca-7f1a-4311-9a10-a5f4f06d86d8?raw=true\"></td>\n    </tr>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b>Docker官方镜像搜索</b></td>\n      <td width=\"50%\" align=\"center\"><b>Docker容器服务管理</b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/user-attachments/assets/8569c5c4-4ce6-4cd4-8547-fa9816019049?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/user-attachments/assets/fb30f747-a2af-4fc8-b3cc-05c71a044da0?raw=true\"></td>\n    </tr>\n</table>\n\n---\n\n## 👨🏻‍💻 问题\n\n<details>\n<summary><strong>问题总结</strong></summary>\n<div>\n\n> 部署、使用相关等常见问题总结，欢迎补充！\n\n相关问题总结: [点击查看](Issue/issue.md)\n\n</details>\n\n---\n\n## 🫶 赞助\n如果你觉得这个项目对你有帮助，请给我点个Star。并且情况允许的话，可以给我一点点支持，总之非常感谢支持😊\n\n<table>\n    <tr>\n      <td width=\"50%\" align=\"center\"><b> Alipay </b></td>\n      <td width=\"50%\" align=\"center\"><b> WeChat Pay </b></td>\n    </tr>\n    <tr>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Deploy_K8sCluster/assets/42825450/223fd099-9433-468b-b490-f9807bdd2035?raw=true\"></td>\n        <td width=\"50%\" align=\"center\"><img src=\"https://github.com/dqzboy/Deploy_K8sCluster/assets/42825450/9404460f-ea1b-446c-a0ae-6da96eb459e3?raw=true\"></td>\n    </tr>\n</table>\n\n---\n\n## 😺 其他\n\n开源不易,若你参考此项目或基于此项目修改可否麻烦在你的项目文档中标识此项目？谢谢你！\n\n\n## ❤ 鸣谢\n感谢以下项目的开源的付出：\n\n[CNCF Distribution](https://distribution.github.io/distribution/) \n\n[docker-registry-browser](https://github.com/klausmeyer/docker-registry-browser)\n\n## 🤝 参与贡献\n\n感谢所有做过贡献的人!\n\n<a href=\"https://github.com/dqzboy/Docker-Proxy/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=dqzboy/Docker-Proxy\" />\n</a>\n\n\n## License\nDocker-Proxy is available under the [Apache 2 license](./LICENSE)\n\n---\n\n[![Star History Chart](https://api.star-history.com/svg?repos=dqzboy/Docker-Proxy&type=Date)](https://star-history.com/#dqzboy/Docker-Proxy&Date)\n"
        },
        {
          "name": "Render",
          "type": "tree",
          "content": null
        },
        {
          "name": "caddy",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 4.3427734375,
          "content": "services:\n  ## docker hub\n  dockerhub:\n    container_name: reg-docker-hub\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-hub.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 51000:5000\n    networks:\n      - registry-net\n\n  ## ghcr.io\n  ghcr:\n    container_name: reg-ghcr\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-ghcr.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 52000:5000\n    networks:\n      - registry-net\n\n  ## gcr.io\n  gcr:\n    container_name: reg-gcr\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-gcr.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 53000:5000\n    networks:\n      - registry-net\n\n  ## k8s.gcr.io\n  k8sgcr:\n    container_name: reg-k8s-gcr\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-k8sgcr.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 54000:5000\n    networks:\n      - registry-net\n\n  ## registry.k8s.io\n  k8s:\n    container_name: reg-k8s\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-k8s.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 55000:5000\n    networks:\n      - registry-net\n  \n  ## quay.io\n  quay:\n    container_name: reg-quay\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-quay.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 56000:5000\n    networks:\n      - registry-net\n\n  ## mcr.microsoft.com\n  mcr:\n    container_name: reg-mcr\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-mcr.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 57000:5000\n    networks:\n      - registry-net\n\n  ## docker.elastic.co\n  elastic:\n    container_name: reg-elastic\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-elastic.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 58000:5000\n    networks:\n      - registry-net\n\n  ## nvcr.io\n  nvcr:\n    container_name: reg-nvcr\n    image: dqzboy/registry:latest\n    restart: always\n    environment:\n      - OTEL_TRACES_EXPORTER=none\n      #- http=http://host:port\n      #- https=http://host:port\n    volumes:\n      - ./registry/data:/var/lib/registry\n      - ./registry-nvcr.yml:/etc/distribution/config.yml\n      #- ./htpasswd:/auth/htpasswd\n    ports:\n      - 59000:5000\n    networks:\n      - registry-net\n\n  ## UI\n  registry-ui:\n    container_name: registry-ui\n    image: dqzboy/docker-registry-ui:latest\n    environment:\n      - DOCKER_REGISTRY_URL=http://reg-docker-hub:5000\n      # [必须]使用 openssl rand -hex 16 生成唯一值\n      - SECRET_KEY_BASE=9f18244a1e1179fa5aa4a06a335d01b2\n      # 启用Image TAG 的删除按钮\n      - ENABLE_DELETE_IMAGES=true\n      - NO_SSL_VERIFICATION=true\n    restart: always\n    ports:\n      - 50000:8080\n    networks:\n      - registry-net\n\nnetworks:\n  registry-net:"
        },
        {
          "name": "hubcmdui",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}