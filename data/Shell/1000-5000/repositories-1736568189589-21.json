{
  "metadata": {
    "timestamp": 1736568189589,
    "page": 21,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "liquidprompt/liquidprompt",
      "stars": 4525,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.6455078125,
          "content": "# EditorConfig configuration for liquidprompt\n# http://EditorConfig.org\n\n# Top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = space\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nspelling_language = en-US\n\n[liquidprompt,*.theme,*.bashrc,.*.conf,*.ps1,*.css,/tools/config-from-doc.sh]\nindent_size = 4\nmax_line_length = 120\n\n[*.sh,*.zsh,PKGBUILD]\nindent_size = 2\nmax_line_length = 120\n\n[*.py]\nindent_size = 4\n\n[*.md]\n# Apparently trailing whitspaces are meaningfull in Markdown\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n\n[*.bat]\nindent_size = 8\nindent_style = tab\n\n[*.rst]\nindent_size = 3\nmax_line_length = 80\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.5283203125,
          "content": "nojhan <nojhan@nojhan.net> <johann.dreo@thalesgroup.com>\nnojhan <nojhan@nojhan.net> <nojhan@gmail.com>\nAlexander Belaev (alexbel) <alexbel@lavabit.com>\nAlex Prengère <alexprengere@gmail.com> <alex.prengere@amadeus.com>\nAlex Prengère <alexprengere@gmail.com>\nAurélien Requiem <aurelien@requiem.fr> <aurelien.requiem@loadedtech.com.au>\nAurélien Requiem <aurelien@requiem.fr>\nClément Mathieu <clement@unportant.info>\nChristophe Drevet (dr4Ke) <dr4ke@dr4ke.net> <christophe.drevet@cea.fr>\nFrançois Schmidts (jaesivsm) <francois.schmidts@gmail.com>\nFrançois Schmidts (jaesivsm) <francois.schmidts@gmail.com> <fschmidts@olfeo.com>\nFrançois Schmidts (jaesivsm) <francois.schmidts@gmail.com> <jaesivsm>\nFrédéric Lepied <flepied@gmail.com>\nÉtienne Deparis <etienne@depar.is> <etienne.deparis@umaneti.net>\nFelix Chern (dryman) <idryman@gmail.com>\nJean-Sébastien Leroy <jean.sebastien.leroy@gmail.com>\nJoris Dedieu <joris@nfrance.com>\nJoris Dedieu <joris@nfrance.com> <joris@pontiac3.nfrance.com>\nJulien Pecqueur <jpec@julienpecqueur.net>\nJulien Pecqueur <jpec@julienpecqueur.net> <jpec80@gmail.com>\nLudovic Rousseau <ludovic.rousseau@gmail.com> <lroussea@370bh2j.(none)>\nMatthew Micene (nzwulfin) <nzwulfin@gmail.com>\nNicolas Lacourte <nicolas@dotinfra.fr>\nOlivier Dupuis <oj.dupuis@gmail.com>\nYing Li (cyli) <cyli@twistedmatrix.com>\nPoil <poil@quake.fr> <?@?>\nThomas Debesse <thomas.debesse@gmail.com>\nRolf Morel (polyphemus) <rolfmorel@gmail.com>\nWilson Maravilha (algaerhythm) <algaerhythm@gmail.com>\nBrad Beyenhof <bbeyenhof@gmail.com> <bbeyenhof@icloud.com>\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nsphinx:\n  configuration: docs/conf.py\n\nformats:\n  - htmlzip\n  - pdf\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 75.037109375,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [2.2.1] - 2024-07-01\n### Added\n- **general**: editorconfig file ([#840], [f47a7cd])\n- **tools**: bug-report.sh ([3d24865])\n\n### Fixed\n- **general**: Bump version number ([2121394])\n- **general**: `_lp_version_greatereq` crash on release version with set -u\n  enabled ([2121394])\n- **disk**: Error on file system with no space ([#841])\n- **perl**: `plenv` and `perlbrew` source displaying \"system\" ([#834])\n- **ruby**: `rbenv` and `rvm-prompt` source displaying \"system\" ([#834])\n- **tmux**: Wrong `LP_TITLE_OPEN` for tmux ([#839])\n- **tools**: Remove sprunge.us recommendation ([#837])\n- **tools**: Update external-tool-tester.sh with new tools ([6868057])\n\n### Changed\n- **disk**: Now will never displays if file system is smaller than\n  `LP_DISK_THRESHOLD` ([#841])\n- **docs**: Improve docs around .bashrc ordering ([1139de1])\n\n\n## [2.2.0] - 2024-05-22\n### Deprecated\n- **theme**: Powerline themes deprecated. Use split off project\n  [liquidprompt/liquidprompt-powerline](https://github.com/liquidprompt/liquidprompt-powerline)\n  instead ([#830])\n\n### Added\n- **general**: `_lp_fill()` function for use by themes ([#738], [#803])\n- **general**: `_lp_join()` function for use by themes ([67a4221])\n- **general**: `_lp_version_greatereq()` function for use by themes ([#752])\n- **general**: `_lp_version_string()` function for use by themes ([#752])\n- **general**: `config-from-doc.sh` script ([#772])\n- **general**: Multple config presets ([#755], [#772])\n- **chroot**: `LP_ENABLE_CHROOT` config option ([#801])\n- **cmake**: CMake option display ([d8254c6])\n- **disk**: Disk space display ([#771])\n- **display**: `LP_ENABLE_DISPLAY` config option ([#801])\n- **docs**: List features disabled by default ([#750])\n- **docs**: Spell checking workflow ([787e03e])\n- **env**: User defined env variables section ([#722], [#754], [#829])\n- **env**: `end_color` paramater to `_lp_env_vars()` ([#798])\n- **env**: `LP_SHLVL_THRESHOLD` config option ([#821])\n- **error**: Display meaning of exit code ([#729], [#745])\n- **git**: Display of remote for branch ([#784])\n- **jobs**: Configurable jobs separator ([#743])\n- **modules**: Environment modules support ([#763], [#766])\n- **multiplexer**: `LP_ENABLE_MUX` config option ([#801])\n- **os**: Display OS data ([#724], [#756])\n- **path**: Option to disable path display ([#775])\n- **path**: Path sections as hyperlinks ([#659], [#668])\n- **perl**: Support for Perlbrew and plenv display ([#812])\n- **ram**: Display available RAM ([#770], [#788])\n- **ruby**: Tests for rvm support ([#815])\n- **temp**: `LP_TEMP_SYSFS_IGNORE_FILES` config option ([#807])\n- **theme**: Dev env section ([67a4221])\n- **theme**: Extra optional parameters to `theme-preview.sh` ([#805])\n- **theme**: New Unfold theme ([#746], [#795], [#805])\n- **theme**: Status bar example scripts ([#775], [#816])\n- **theme**: `LP_THEME` variable to set current theme ([#792])\n- **theme**: `templates/minimal/minimal.ps1`; replacing `liquid.ps1` ([#767],\n  [#805])\n- **theme**: `_lp_<theme_id>_theme_version_check()` hook for themes ([046d830])\n- **tmux**: `LP_ENABLE_TMUX_TITLE_PANES` option ([c74a9e4])\n\n### Fixed\n- **general**: Some error messages printing to stdout instead of stderr ([#826])\n- **bash**: Avoid running `__lp_set_prompt()` multiple times ([#824])\n- **bash**: Avoid running hooks on empty command line ([436b1b5])\n- **bash**: Runtime of the previous command was still showed on subsequent\n  prompts ([436b1b5])\n- **bash**: Command timing incorrect on Bash 5.1+ when not last to init\n  ([6f2ca7e])\n- **bash**: Slow `__lp_strip_escapes()` in deep directory hierarchy ([#831])\n- **docs**: Improved docs on theme switching ([#765], [#767])\n- **docs**: Incorrect reference to test script in developer docs ([#811])\n- **docs**: Reword Arch Linux install instructions ([#822], [#823])\n- **git**: Printed error if error during interactive rebase ([#758], [#759])\n- **hostname**: Hostname hash on systems without `hostname` binary ([#776])\n- **load**: Load display on Android systems ([#587])\n- **multiplexer**: `_lp_multiplexer()` return variable incorrectly named\n  `lp_mulitplexer` ([#748])\n- **python**: Poetry virtualenvs showing \"prompt =\" ([#760])\n- **tests**: Bash preexec tests not working in screen/tmux ([#773])\n- **tests**: Shellcheck not checking `liquidprompt` file ([ff44057])\n- **theme**: Avoid costly strip escape on filling sequence ([#803])\n- **theme-preview**: Set SSH context for display ([#769])\n- **theme-preview**: Stop indenting prompts to fix multiline prompts ([#744])\n- **zsh**: errors when `ksh_arrays` set ([708635b])\n\n### Changed\n- **general**: Move project to \"liquidprompt\" GitHub organization.\n- **docs**: Improve marketing ([#731])\n- **docs**: Unify project name as \"Liquid Prompt\" ([#677])\n- **docs**: Update docs with new features in v2.2 ([#795])\n- **error**: Avoid showing the 130 error code after hitting Ctrl-C or empty\n  command line ([#827])\n- **tests**: Print name of failed tests at end of script ([9992fce])\n- **theme**: `liquid.ps1` reworked and moved to `templates/minimal/minimal.ps1`\n  ([#805])\n\n### Removed\n- **theme**: `liquid.ps1`; replaced with `templates/minimal/minimal.ps1`\n  ([#767], [#805])\n\n## [2.1.2] - 2022-06-08\n### Fixed\n- **bash**: `PROMPT_COMMAND` not saved and respected on first load ([#715])\n\n## [2.1.1] - 2022-05-26\n### Fixed\n- **battery**: Error messages printed with buggy driver with sysfs backend ([#713])\n- **temp**: Error messages printed with buggy driver with sysfs backend ([#713])\n\n## [2.1.0] - 2022-05-25\n### Deprecated\n- **env**: `LP_ENABLE_FQDN` replaced with `LP_HOSTNAME_METHOD=full` ([#472])\n- **utils**: `_lp_as_text()` replaced with `__lp_strip_escapes()` ([6085cd2])\n\n### Added\n- **aws**: AWS profile display ([#496], [#679], [4c8ac92])\n- **bash**: Compatibility with bash-preexec ([#672])\n- **battery**: Linux sysfs backend ([#689])\n- **container**: Container status data source ([#569], [#612], [#709])\n- **env**: `LP_HOSTNAME_METHOD=fqdn` displays true FQDN ([#472])\n- **env**: `LP_HOSTNAME_METHOD=pretty` shows display name ([#596])\n- **env**: Nested shell level data source ([#606])\n- **hg**: `LP_HG_COMMAND` config option to customize `hg` binary ([#701])\n- **k8s**: kubectl current context display ([#578], [#673], [#681], [#695], [d41b5c8])\n- **multiplexer**: Custom prompt brackets in multiplexers ([#453])\n- **node**: Node.js environment display ([#298])\n- **path**: Return unescaped path in *lp_path* in `_lp_path_format()` ([a23af79])\n- **ruby**: Ruby environment display ([#628], [239a574], [#676], [59078f0])\n- **temp**: Linux sysfs backend ([#623])\n- **terraform**: Terraform workspace support ([#669])\n- **title**: Title command feature ([#609], [#665], [0c23a33], [a23af79])\n- **vcsh**: Print the VCSH directory name in the custom prompt mark ([#363])\n- **wifi**: Wireless signal strength data source ([#139])\n\n### Fixed\n- **bash**: Support for Bash 5.1+ `PROMPT_COMMAND` as array ([#684])\n- **color**: `LP_COLORMAP` reverting to default value ([145f146])\n- **docs**: Outdated link to Symbola font project page ([#662])\n- **docs**: Small typos and license clarification ([#664], [#678], [66d1d2b])\n- **git**: Git worktrees would never detect repo states ([1be52e0])\n- **git**: Respect environment variable `GIT_DIR` ([1be52e0])\n- **path**: Add `__lp_escape()` calls to `_lp_path_format()` ([36ab8fa], [a23af79])\n- **powerline**: First character color issue in Zsh and Bash-3.2 ([70ce708])\n- **powerline**: Array issues in Bash-3.2 ([77dc561])\n- **ruby**: Zsh crash on rbenv output parse ([#667])\n- **temp**: High temp values would stick ([#686])\n- **term**: Some terminal emulators being detected as Telnet connections ([#483])\n- **term**: Early exit on `TERM=unknown` ([#688])\n- **zsh**: `local` bugs in Zsh-5.0 ([7db4ada])\n\n### Changed\n- **general**: Directly generate prompt mark instead of escape code ([#665], [1a22e1e])\n- **general**: Refactor internal shell hooking implementation ([0ce7646])\n- **bash**: Avoid setting any shell options ([#663], [a1d0a54])\n- **env**: Lookup hostname instead of escape code ([#665], [0368523])\n- **env**: Lookup username instead of escape code ([#665], [61df03a])\n- **hg**: `_lp_hg_commits_off_remote()` returns `2` instead of `3` ([#696])\n- **python**: Load virtualenv name from venv config first ([#708])\n- **sudo**: Use the `--validate` flag instead of running `true` ([#702])\n- **sudo**: Make `_lp_sudo_active()` a no-op if user has NOPASSWD ([#344])\n- **time**: Call `date` to generate time instead of escape code ([#665], [dd1f8f8])\n- **tests**: All included themes run through theme-preview tester ([3b75185])\n- **tests**: test.sh accepts shells as arguments ([9a2c067])\n- **vcs**: Unsupported VCS functions defined as empty functions ([#696])\n- **zsh**: Avoid setting any shell options except for promptpercent ([58969b2])\n\n## [2.0.5] - 2022-04-24\n### Fixed\n- **temp**: High temp values would stick ([#686], [df5b88a])\n\n## [2.0.4] - 2022-02-07\n### Changed\n- **hg**: `_lp_hg_commits_off_remote()` returns `2` instead of `3` ([#696])\n- **vcs**: Unsupported VCS functions defined as empty functions ([#696])\n\n## [2.0.3] - 2021-05-30\n### Fixed\n- **hg**: Stash count erroring with no function defined ([#671])\n- **fossil**: Stash count erroring with no function defined ([#671])\n- **fossil**: Uncommited files erroring with no function defined ([#671])\n- **fossil**: Untracked files erroring with no function defined ([#671])\n- **svn**: Uncommited files erroring with no function defined ([#671])\n- **temp**: Temperature erroring if tool returns no data with `set -u` ([#670])\n\n## [2.0.2] - 2021-02-22\n### Fixed\n- **git**: Git worktrees not being detected ([#658])\n\n## [2.0.1] - 2021-02-07\n### Added\n- **docs**: Example for `lp_terminal_format()` ([#657], [954bace])\n- **tests**: Tests for tools/theme-preview.sh and tools/external-tool-tester.sh ([e121179])\n\n### Fixed\n- **general**: Unset errors in liquidprompt and theme-preview on Bash-3.2 ([#656], [e121179])\n- **general**: Unset errors in liquidprompt in Zsh when no terminal attached ([dc11eb4])\n- **general**: Unset errors in liquidprompt on Windows ([461f0ee])\n- **color**: Background of path always black, ignoring terminal background setting ([#657], [58693b0])\n- **tools**: Make theme-preview.sh work in Zsh ([e121179])\n\n### Changed\n- **color**: `LP_COLOR_PATH` changed to `$NO_COL`, to follow terminal default\n  foreground ([58693b0])\n- **color**: `LP_COLOR_PATH_SEPARATOR` and 'LP_COLOR_PATH_SHORTENED` changed\n  from light grey to grey, to be neutral on both light and dark backgrounds ([58693b0])\n- **color**: `LP_COLOR_PATH_LAST_DIR` and 'LP_COLOR_PATH_VCS_ROOT` changed\n  from bold white to `$BOLD`, to follow terminal default foreground ([58693b0])\n\n## [2.0.0] - 2021-02-05\n### BREAKING CHANGES\nNote: these breaking changes are the only reason that this version is so much\nfaster. They are also on private functions and variables, which the end user\nwas not supposed to use. If you were using them, see the\n[upgrade notes](https://liquidprompt.readthedocs.io/en/stable/upgrading/v2.0.html)\nfor help.\n\n- **general**: `$_LP_SHELL_bash` and `$_LP_SHELL_zsh` contain `1` or `0` instead of `true`\n  or `false` ([f681cdf])\n- **general**: `_lp_color_map()` return changed from stdout to `$ret` ([e843ccf])\n- **general**: `_lp_escape()` renamed to `__lp_escape()` and return changed from stdout to\n  `$ret` ([f3404f9])\n- **general**: `_lp_set_prompt()` renamed to `__lp_set_prompt()` ([decaece])\n- **general**: `_lp_source_config()` renamed to `__lp_source_config()` ([decaece])\n- **battery**: `_lp_battery()` return changed from stdout to `$lp_battery` ([3f57231])\n- **battery**: `_lp_battery_color()` return changed from stdout to `$lp_battery_color` ([3f57231])\n- **env**: `$lp_err` renamed to `$lp_error` ([63b9f73])\n- **env**: `_lp_connection()` return changed from stdout to `$lp_connection` ([edc490f])\n- **git**: `_lp_git_head_status()` return changed from stdout to `$lp_vcs_head_status` ([7c21470])\n- **jobs**: `_lp_jobcount_color()` return changed from stdout to `$lp_jobcount_color` ([73f2057])\n- **load**: `_lp_load_color()` return changed from stdout to `$lp_load_color` ([8a987f4])\n- **path**: `_lp_get_home_tilde_collapsed()` renamed to `__lp_pwd_tilde()` and return changed from\n  stdout to `$lp_pwd_tilde` ([28c13f2])\n- **path**: `_lp_set_dirtrim()` removed ([ae769dc])\n- **path**: `_lp_shorten_path()` replaced by `_lp_path_format()` ([decaece], [a35032f], [ae769dc])\n- **runtime**: `_lp_runtime()` renamed to `_lp_runtime_color()` and return changed from stdout to\n  `$lp_runtime_color` ([0f0fd37])\n- **runtime**: `_lp_runtime_after()` renamed to `__lp_runtime_after()` ([decaece])\n- **runtime**: `_lp_runtime_before()` renamed to `__lp_runtime_before()` ([decaece])\n- **temperature**: `_lp_temp_acpi()` renamed to `__lp_temp_acpi()` and return changed from\n  `$temperature` to `$lp_temperature` ([69c75a3])\n- **temperature**: `_lp_temp_detect()` renamed to `__lp_temp_detect()` ([69c75a3])\n- **temperature**: `_lp_temp_sensors()` renamed to `__lp_temp_sensors()` and return changed from\n  `$temperature` to `$lp_temperature` ([69c75a3])\n- **temperature**: `_lp_temperature()` changed to data function, replaced by\n  `_lp_temperature_color()` and return changed from stdout to `$lp_temperature_color` ([69c75a3])\n- **time**: `_lp_time()` split into `_lp_time()`, `_lp_time_color()`, `_lp_analog_time()`, and\n  `_lp_analog_time_color()` ([8cb609d])\n- **vcs**: `_lp_<vcs>_branch()` return changed from stdout to `$lp_vcs_branch` ([f3404f9])\n- **vcs**: `_lp_<vcs>_branch_color()` functions removed, replaced by\n  `_lp_vcs_details_color()` ([cafb8b2], [bf2b9c6], [1a9fcd0], [4fff496], [b523025])\n- **vcs**: `_lp_smart_mark()` return changed from stdout to `$lp_smart_mark` ([9c6d073])\n- **vcs**: `_lp_upwards_find()` removed, replaced by `_lp_find_vcs()` ([f434b6d])\n\n### Deprecated\n- **path**: `LP_PATH_DEFAULT` is replaced by `LP_PATH_METHOD` ([ae769dc])\n- **title**: `_lp_title()` is replaced by `_lp_formatted_title()` ([46df995], [9604203], [#581])\n- **utils**: `_lp_bool()` is replaced by manually storing return codes ([82ee823]).\n- **utils**: `_lp_sb()` is replaced by data functions indicating if they\n  returned data or not ([82ee823]).\n- **utils**: `_lp_sl()` is replaced by data functions indicating if they\n  returned data or not ([82ee823]).\n- **utils**: `_lp_sr()` is replaced by data functions indicating if they\n  returned data or not ([82ee823]).\n- **vcs**: `$LP_DISABLED_VCS_PATH` variable is replaced by a\n  `$LP_DISABLED_VCS_PATHS` array variable. A warning will be displayed at\n  startup if your config still uses the old variable, but a compatibility shim\n  is active. See the upgrade notes for help ([cad6286])\n\n### Added\n- **general**: Sphinx documentation ([0d420d2], [c7b5003], [b523025], [f9fd12e])\n- **general**: Manual pages built from documentation ([#637], [13e128b])\n- **general**: Command line flag `--no-activate` to skip auto shell activation when sourcing\n  liquidprompt ([e122d21])\n- **general**: `lp_activate()` function to reload config without needing to re-source\n  liquidprompt ([e1f8bd5], [22dd760])\n- **bzr**: `_lp_bzr_active()` data function ([b523025])\n- **bzr**: `_lp_bzr_commit_id()` data function ([b523025])\n- **bzr**: `_lp_bzr_stash_count()` data function ([b523025])\n- **bzr**: `_lp_bzr_tag()` data function ([b523025])\n- **bzr**: `_lp_bzr_uncommitted_files()` data function ([b523025])\n- **bzr**: `_lp_bzr_uncommitted_lines()` data function ([b523025])\n- **bzr**: `_lp_bzr_untracked_files()` data function ([b523025])\n- **color**: `lp_terminal_format()` util function ([#486], [09cfced])\n- **cpu**: Internal function `__lp_cpu_count()` to count CPU cores ([e5047c0])\n- **dirstack**: Directory stack data source ([#625], [f35d9ac])\n- **env**: `$LP_ENABLE_ERROR` config option ([#543], [63b9f73])\n- **env**: `_lp_chroot()` data function ([c946155])\n- **env**: `_lp_connected_display()` data function ([c946155])\n- **env**: `_lp_error()` data function ([63b9f73])\n- **env**: `_lp_hostname()` data function ([8de1a72], [6ea54e9])\n- **env**: `_lp_hostname_color()` theme function ([c946155], [8de1a72], [b1a3145])\n- **env**: `_lp_http_proxy()` data function ([78dee3c])\n- **env**: `_lp_http_proxy_color()` theme function ([78dee3c])\n- **env**: `_lp_multiplexer()` data function ([0200b99], [230c9d7])\n- **env**: `_lp_python_env()` data function ([03434d3])\n- **env**: `_lp_python_env_color()` theme function ([03434d3])\n- **env**: `_lp_software_collections()` data function ([f4afc5d])\n- **env**: `_lp_software_collections_color()` theme function ([f4afc5d])\n- **env**: `_lp_sudo_active()` data function ([9ba5d28])\n- **env**: `_lp_sudo_active_color()` theme function ([9ba5d28])\n- **env**: `_lp_user()` data function ([9ba5d28])\n- **env**: `_lp_username()` data function ([debb794])\n- **env**: `_lp_username_color()` theme function ([afe3195])\n- **fossil**: `_lp_fossil_active()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_commit_id()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_head_status()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_stash_count()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_uncommitted_files()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_uncommitted_lines()` data function ([bf2b9c6])\n- **fossil**: `_lp_fossil_untracked_files()` data function ([bf2b9c6])\n- **git**: `_lp_git_active()` data function ([70b4ef6])\n- **git**: `_lp_git_commit_id()` data function ([70b4ef6])\n- **git**: `_lp_git_commits_off_remote()` data function ([309b443])\n- **git**: `_lp_git_staged_files()` data function ([#644], [9038ec8])\n- **git**: `_lp_git_staged_lines()` data function ([#644], [9038ec8])\n- **git**: `_lp_git_stash_count()` data function ([fe9919f], [bb19836])\n- **git**: `_lp_git_tag()` data function ([70b4ef6], [#506])\n- **git**: `_lp_git_uncommitted_files()` data function ([67dc0a9])\n- **git**: `_lp_git_uncommitted_lines()` data function ([70b4ef6])\n- **git**: `_lp_git_unstaged_files()` data function ([67dc0a9])\n- **git**: `_lp_git_unstaged_lines()` data function ([70b4ef6])\n- **git**: `_lp_git_untracked_files()` data function ([fe9919f])\n- **git**: Caching for diff data functions that share targets (`files()` + `lines()`) ([8bf1772])\n- **hg**: `_lp_hg_active()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_bookmark()` data function ([f4636e6])\n- **hg**: `_lp_hg_commit_id()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_head_status()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_stash_count()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_tag()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_uncommitted_files()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_uncommitted_lines()` data function ([1a9fcd0])\n- **hg**: `_lp_hg_untracked_files()` data function ([1a9fcd0])\n- **hostname**: `__lp_hostname_hash()` internal function ([8f730c8])\n- **jobs**: `$LP_ENABLE_DETACHED_SESSIONS` config option, separate from jobs ([f9038e0], [862dcfb], [#552])\n- **jobs**: `_lp_detached_sessions()` data function ([73f2057], [862dcfb])\n- **jobs**: `_lp_jobcount()` data function ([73f2057])\n- **load**: `LP_LOAD_CAP` config option ([#650], [#530], [e058b61])\n- **load**: `_lp_load()` data function ([8a987f4])\n- **path**: `LP_COLOR_PATH_LAST_DIR` config option ([ae769dc])\n- **path**: `LP_COLOR_PATH_SEPARATOR` config option ([ae769dc])\n- **path**: `LP_COLOR_PATH_SHORTENED` config option ([ae769dc])\n- **path**: `LP_COLOR_PATH_VCS_ROOT` config option ([ae769dc])\n- **path**: `LP_PATH_CHARACTER_KEEP` config option ([ae769dc])\n- **path**: `LP_PATH_METHOD` config option ([ae769dc])\n- **path**: `LP_PATH_VCS_ROOT` config option ([ae769dc])\n- **path**: `_lp_path_format()` data function ([#648], [#349], [#149], [ae769dc])\n- **path**: `__lp_end_path_left_shortening()` internal function ([ae769dc])\n- **path**: `__lp_get_unique_directory()` internal function ([ae769dc])\n- **runtime**: `_lp_runtime_format()` data function ([0f0fd37])\n- **svn**: `_lp_svn_active()` data function ([4fff496])\n- **svn**: `_lp_svn_commit_id()` data function ([4fff496])\n- **svn**: `_lp_svn_uncommitted_files()` data function ([4fff496])\n- **svn**: `_lp_svn_uncommitted_lines()` data function ([4fff496])\n- **svn**: `_lp_svn_untracked_files()` data function ([4fff496])\n- **temperature**: `_lp_temperature()` as data function ([69c75a3])\n- **terminal**: `_lp_terminal_device()` data function ([5076dbe])\n- **tests**: Shunit2 testing suite ([#469], [46918f6], [44e3a6f], [1fe1559])\n- **tests**: Tests to check if a shell supports all features that Liquid Prompt\n  needs ([46918f6], [5a9293d], [1fe1559])\n- **tests**: Tests for `_lp_as_text()` ([6cdb860])\n- **tests**: Tests for `_lp_battery()`/`acpi` ([cef9cb1])\n- **tests**: Tests for `_lp_battery()`/`pmset` ([c0e74b8], [9e205f5], [37db052])\n- **tests**: Tests for `_lp_connection()`/`who`+`ps` ([23eb3f2], [37db052], [cef9cb1])\n- **tests**: Tests for `__lp_cpu_count()`/`ncpu` ([37db052])\n- **tests**: Tests for `_lp_cpu_load()`/`sysctl` ([37db052])\n- **tests**: Tests for `_lp_detached_sessions()`/`screen`+`tmux` ([23eb3f2], [37db052], [cef9cb1])\n- **tests**: Tests for `__lp_hostname_hash()` internal function ([8f730c8], [37db052])\n- **tests**: Tests for `__lp_is_function()` util function ([9b40ca1])\n- **tests**: Tests for `__lp_line_count()` util function ([a314677])\n- **tests**: Tests for `__lp_pwd_tilde()` path function ([28c13f2])\n- **tests**: Tests for `__lp_temp_sensors()`/`sensors` ([23eb3f2], [cef9cb1])\n- **tests**: Tests for `_lp_terminal_device()` data function ([5076dbe], [37db052], [cef9cb1])\n- **tests**: Github Actions build file ([#469], [05e0a50])\n- **tests**: Github Actions documentation linting ([#649], [30f977b])\n- **theme**: `__lp_theme_bash_complete()` to complete themes in Bash for `lp_theme()` ([884c069])\n- **theme**: `__lp_theme_list()` to list themes loaded in function memory ([884c069])\n- **theme**: `__lp_theme_zsh_complete()` to complete themes in Zsh for `lp_theme()` ([884c069])\n- **theme**: `_lp_default_theme_activate()` theme function ([40c4331], [45f8091])\n- **theme**: `_lp_default_theme_directory()` theme function ([40c4331], [45f8091])\n- **theme**: `_lp_default_theme_prompt()` theme function ([40c4331], [45f8091], [acb5430])\n- **theme**: `_lp_default_theme_prompt_data()` theme function ([acb5430])\n- **theme**: `_lp_default_theme_prompt_template()` theme function ([acb5430])\n- **theme**: `lp_theme()` to switch themes without resourcing any\n  files ([45f8091], [884c069], [#592])\n- **theme**: `alternate_vcs`, the default theme with modified VCS display ([#635], [#524], [2d659f0])\n- **theme**: `powerline_full`, the default theme order in Powerline style ([bcefaf3])\n- **theme**: `powerline`, a clone of the Powerline prompt ([af8382b], [8de1a72], [5ef795d], [#520])\n- **time**: `_lp_analog_time()` data function ([8cb609d], [bc120d5])\n- **time**: `_lp_analog_time_color()` theme function ([8cb609d], [bc120d5])\n- **time**: `_lp_time()` data function ([bc120d5])\n- **time**: `_lp_time_color()` theme function ([bc120d5])\n- **title**: `lp_formatted_title()` sets persistent title stripping terminal formatting\n  sequences ([46df995], [9604203])\n- **title**: `_lp_raw_title()` sets persistent title without stripping terminal formatting\n  sequences ([46df995])\n- **title**: `lp_title()` sets a manual title that overrides the theme set title ([46df995], [#609])\n- **tools**: `external-tool-tester.sh` script to generate test data ([b699dea], [9a00ead], [4b7fd88])\n- **tools**: `theme-preview.sh` script to generate standard prompt previews ([0b94b74])\n- **utils**: `__lp_is_function()` util function ([9b40ca1])\n- **utils**: `__lp_line_count()` util function ([a314677])\n- **vcs**: `_lp_find_vcs()` to quickly find nearest VCS repo ([f434b6d], [#524])\n- **vcs**: `_lp_vcs_active()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_bookmark()` data function ([f4636e6], [#524])\n- **vcs**: `_lp_vcs_branch()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_commit_id()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_commits_off_remote()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_details_color()` to format VCS details regardless of VCS\n  type ([cafb8b2], [f4636e6], [5c56e65], [#524])\n- **vcs**: `_lp_vcs_head_status()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_stash_count()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_tag()` data function ([cafb8b2], [#506], [#524])\n- **vcs**: `_lp_vcs_uncommitted_files()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_uncommitted_lines()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_unstaged_files()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_unstaged_lines()` data function ([cafb8b2], [#524])\n- **vcs**: `_lp_vcs_untracked_files()` data function ([cafb8b2], [#524])\n\n### Fixed\n- **general**: Issues with custom `$IFS` ([e48856b], [4ebc26e])\n- **general**: Liquid Prompt is now `set -u` compatible ([#354], [a8aa8c9], [cb9d71b])\n- **acpi**: Temperature check printed each temp twice, slowing down check ([cf8bf97])\n- **acpi**: Temperature check used extended sed syntax without declaring extended language ([eb30942])\n- **battery**: Color display would break with custom `$LP_COLORMAP` array ([f3f20ec])\n- **runtime**: DEBUG trap was not unset if `$LP_ENABLE_RUNTIME_BELL` was disabled ([cb9d71b])\n- **sensors**: Redirect sensors error output to `/dev/null` ([#445], [4a52696])\n- **time**: Add default value for `$LP_TIME_ANALOG` ([f8c1c47])\n- **vcs**: VCS display for new VCS works without needing to change directories ([f434b6d])\n\n### Changed\n- **general**: Exit if shell is in interactive mode ([f2276fc])\n- **general**: Load all functions at source time, not only ones enabled by the\n  config ([e1f8bd5], [8cb609d])\n- **general**: Remove subshells to improve speed ([#607], [9ba6e86], [e2ba86e])\n- **general**: Remove uses of eval improve speed and security ([4fff496], [1a56d58])\n- **color**: Better handling when `tput` is not found ([09cfced])\n- **fossil**: Remove `sed` call in `_lp_fossil_branch()` ([6d94db6])\n- **git**: `_lp_git_branch()` only returns a matching branch, not a fallback commit ID. Use\n  `_lp_git_commit_id()` instead ([70b4ef6])\n- **git**: `_lp_git_head_status()` add more matches from official git prompt, as well as details\n  for partial rebases ([#527], [5c56e65])\n- **jobs**: Use `__lp_line_count()` instead of `wc -l` for data function ([fb123f4])\n- **load**: Display actual load average instead of normalized ([#650], [#530], [e058b61])\n- **load**: `LP_LOAD_THRESHOLD` accepts floats of actual load average instead of integer centiload ([#650], [#530], [e058b61])\n- **load**: Default color scale cap from 1.0 to 2.0 ([#650], [#530], [5069c22])\n- **path**: `LP_COLOR_PATH` default changed from `$BOLD` to `lp_terminal_format 255 0 0 0 7` (no longer bold) ([ae769dc])\n- **runtime**: Save bell escape sequence on startup to save time when sending bell to terminal\n  with runtime bell ([3e615cd])\n- **svn**: `_lp_svn_branch()` prefixes tag with \"tag/\", no longer returns current directory if no\n  match found ([4fff496])\n- **zsh**: Add check for Zsh >= 5.0, the versions now officially supported ([5bd80ce])\n\n### Removed\n- **tests**: `pmset-simulator` file, now integrated into `pmset` tests above ([c0e74b8])\n- **tests**: `test.sh` file, unit tests integrated into `acpi` tests above ([f445eff])\n- **vcsh**: `$LP_ENABLE_VCSH` config option, which did nothing ([f86a097])\n\n## [1.12.1] - 2020-10-25\n### Fixed\n- **fossil**: fossil 2.11+ matching any directory as a valid repo and printing\n  3 error messages ([#626])\n\n## [1.12.0] - 2020-07-17\n### Added\n- **color**: Add `$MAGENTA`, `$BOLD_PURPLE`, and `$BOLD_MAGENTA` ([3fadce9])\n- **color**: Add warning when `tput` is not available ([#615])\n- **path**: Allow to customize the symbol before the path that shows if the\n  directory is writable: `$LP_MARK_PERM` ([#430])\n- **runtime**: `$LP_RUNTIME_BELL` and `$LP_RUNTIME_BELL_THRESHOLD` to ring bell\n  for slow commands ([#571])\n\n### Fixed\n- **general**: use `LC_ALL=C` everywhere parsable output is needed ([#548], [#549])\n- **general**: set specific `IFS` everywhere it is used ([#613])\n- **bash**: workaround broken .bashrc that export `$PROMPT_COMMAND`, we now\n  unexport it on startup ([#450], [#463], [#474])\n- **bash**: handle unset `$_LP_RUNTIME_LAST_SECONDS` when `set -u` is set ([#605])\n- **bash**: use `$BASH_VERSINFO` for when there is a non-numeric\n  suffix ([#522], [0234a58])\n- **battery/OS X**: newer versions of OS X failing to parse ([#476], [fefbe01])\n- **color**: `$LP_COLORMAP` would break if customized with a different sized\n  array ([a70e80f])\n- **color**: `_lp_color_map()` would return nothing if the passed in value was\n  outside the scale range ([a70e80f], [#455], [#499], [#604])\n- **cpu/SunOS**: failing math operation on load average ([#479], [#480])\n- **fossil**: improve branch name detection, don't match tags ([#497])\n- **git**: remove `-E` from grep check for portablility ([#508])\n- **git**: modifications incorrectly showing as untracked files ([#509])\n- **git**: changed line check failing if file named \"HEAD\" existed ([#517])\n- **hg**: modifications incorrectly showing as untracked files ([#509])\n- **hostname**: regression in `$LP_ENABLE_FQDN` implementation ([#472])\n- **hostname/SunOS**: `$LP_COLOR_HOST_HASH` erroring ([#461], [#462], [9c1c8a3])\n- **jobs**: misspelled variable local declaration ([#564])\n- **root**: `$LP_MARK_DEFAULT` being ignored if root ([#501], [5ee3c53])\n- **runtime**: when runtime enabled, `$_` would evaluate as\n  `_lp_runtime_before` ([#451])\n- **runtime**: when running a multipart command line (with pipes or `;`),\n  runtime would never show. Now shows runtime of whole pipeline ([#614])\n- **tmux**: tmux not showing as multiplexer if custom `$TERM` set ([#563])\n\n### Changed\n- **battery**: hide battery symbol when neither charging nor discharging ([#582])\n- **color**: optimize `tput` color gen ([d62bf31])\n- **git**: faster `git stash` check ([#503], [93df016])\n\n## [1.11] - 2016-06-25 - dolmen (Olivier Mengué)\n### Fixed\n- **OS X**: sudo feature fixed ([#443])\n- **OS X**: battery level restored ([#444])\n\n## [1.10] - 2016-05-30 - dolmen (Olivier Mengué)\n### BREAKING CHANGES\n- **config**: Many `$LP_ENABLE_*` settings are now static (their effect applies\n  when liquidprompt is loaded, and changing them at the prompt does nothing)\n  to improve speed.\n- **screen**: `$LP_SCREEN_TITLE_OPEN` and `$LP_SCREEN_TITLE_CLOSE` are now\n  removed to simplify the code ([#371])\n- **zsh**: option 'nopromptsubst' is enabled for security reasons. This will\n  unfortunately also affect evaluations of other prompt contexts such as\n  RPS1. ([282359a], [#432])\n\n### Deprecated\n- **color**: `$LP_COLORMAP_x` variables are replaced by a single `$LP_COLORMAP`\n  array variable. A warning will be displayed at startup if your config still\n  uses the old variables, but a compatibility shim is active (will be removed\n  in v2.1). ([6961f99])\n\n### Added\n- **git**: show the number of commits behind the remote ([#110], [#269], [48f1b02])\n- **git**: show the rebasing/merging/cherry-picking state ([#409], [5cfd2c2])\n- **hostname**: `$LP_ENABLE_FQDN` to show the fully qualified domain name of\n  the host ([#254], [#277], [695d629])\n- **hostname**: `LP_HOSTNAME_ALWAYS=-1` to always hide the\n  hostname ([#406], [d9cb55d])\n- **python**: add support for Conda (CONDA_DEFAULT_ENV) ([#425], [07be967])\n- **sudo**: the color of the prompt mark is now dynamic and changes to\n  `$LP_COLOR_MARK_SUDO` (default: bold red) as long as your sudo credentials\n  are cached. Requires sudo 1.7.0+. This feature must be enabled with\n  `LP_ENABLE_SUDO=1`. Use `sudo -K` to revoke your credentials early. This\n  feature is disabled by default as there is no way to detect if the user has\n  sudo rights without triggering a security alert that will annoy the\n  sysadmin ([#335], [#345], [a8571bb])\n- **tty**: `$LP_TTYN`: the basename of the terminal ([#357], [a97c0da], [f436867])\n- **zsh**: run duration of the last command (`LP_ENABLE_RUNTIME`) is now\n  supported ([#404], [#355])\n\n### Fixed\n- **general**: last statement of liquidprompt did not return 0 ([#360], [#361])\n- **general**: better support for `set -u` ([a8114dd])\n- **bash**: bash 3 compatibility, remove `function` syntax ([#313], [3079299])\n- **battery/OS X**: handle battery edge cases. We now have a pmset simulator to\n  better detect regressions ([#326], [fabc775])\n- **compat**: broken path inside Midnight Commander ([#288])\n- **config**: Use $XDG_CONFIG_HOME to locate the config ([#415], [#420], [#427])\n- **cpu**: fix the scale that was incorrectly 0-200 (not an ideal\n  fix) ([#391], [e9c35dd])\n- **examples**: example.bashrc major fixes ([fdbd7ca])\n- **fossil/OS X**: tag regexp to work on darwin ([#390])\n- **git**: broken git work directory detection caused by typo ([64029ad])\n- **grep**: clear GREP_OPTIONS and skip `grep` aliases ([#340], [#372])\n- **path**: issues when $PWD contains spaces or special chars ([#369], [0e0cc12])\n- **path**: escaping of special chars from $PWD (well, almost, see [#389])\n- **path**: fix path growing with extra color codes each time directory is\n  changed ([b53e53b])\n- **temp**: try each backend (acpi/sensors) once to check it works at startup\n  and disable the feature if none works. ([#410], [#319], [#381], [#387])\n- **temp**: the 'sensors' command now uses the '-u' option (\"raw\n  output\") that is easier to parse. This format is at least 7 years\n  old. ([#379], [#380])\n- **temp**: fix failing regex on bash ([1fc0308])\n- **term**: fix detection of connection source for tmux ([#304], [#407])\n- **title**: terminal sequences that were sent in the title text (the escaping\n  algorithm is rewritten and now just correct) ([#416], [8605378])\n- **zsh**: enable word splitting to fix `$LP_DISABLED_VCS_PATH` ([#423])\n- **zsh**: fix `LP_PATH_KEEP=-1` not working ([#433])\n- **zsh**: fix title escapes in zsh inside tmux/screen ([#370], [#371])\n- **zsh**: rename `$status` variable in `_lp_battery()` ([#334], [0f80162])\n- **zsh**: save and restore a prompt set with zsh' promptinit ([02bc49e])\n- **zsh**: use zsh style symbol when `prompt_OFF()` ([eb6dafc])\n\n### Changed\n- **bash**: disable parameter expansion in PS1 ([c3d4970])\n- **clock**: complete rewrite of analog clock for speed and\n  correctness ([#365], [0548290])\n- **dist**: Move dist/ to contrib/dist/ as files there are unmaintained ([cf01d02])\n- **jobs**: optimize job count, espceially when disabled ([aa870b5])\n- **path**: optimize implementation in case of `LP_PATH_KEEP=-1`: `$LP_PWD`\n  becomes static ([7602c09], [#256])\n- **path**: optimize implementation in case `LP_ENABLE_SHORTEN_PATH=0` on bash\n  with `$PROMPT_DIRTRIM` ([8da3314])\n- **runtime**: refactor runtime system ([03c73fe], [d485ed1])\n- **zsh**: disable `$PROMPT_COMMAND` hacks and only use zsh built in\n  hooks ([5fa9054])\n- **zsh**: disable existing hooks at startup ([454112f])\n- **zsh**: explicitly set the shell options we need (instead of relying on\n  the shell default settings) ([282359a])\n\n## [1.9] - 2014-11-12 - dolmen (Olivier Mengué)\n### Added\n- **temp/linux** guard against any future language change of the `acpi`\n  command ([1c65748])\n- **vcsh**: vcsh support ([#148], [#287], [e927985])\n- **venv**: support for Software Collections ([#299], [#300], [cc1be7e])\n\n### Fixed\n- **general**: lots of variable quoting fixes\n- **general**: save user IFS and restore it to avoid echo ([#267], [782fad0])\n- **bash**: save and set shell option promptvars ([62f0270])\n- **bash**: workaround broken pattern substitution in bash\n  4.2 ([#289], [#294], [#302], [5813a71])\n- **battery**: general fixes ([#265])\n- **battery/OS X**: fix for computers without battery (like iMacs) ([#317])\n- **bazar**: `_lp_bzr_branch_color()` for zsh ([#301], [#303])\n- **clock**: fix analog clock hour for 12AM and 12PM ([#273])\n- **color**: fix `tput` usage on BSDs ([4572bd0])\n- **git**: count merge commits when checking differences with remote\n  branch ([7e7734e])\n- **git**: use --porcelain for `git status` ([#270], [89540d3])\n- **hostname**: fix colorization for SSH ([9633ac8])\n- **jobs**: fix when screen/tmux are not installed ([#304], [07d18d4])\n- **mark**: losing space when `$LP_MARK_DEFAULT` not quoted ([#268], [c9bdefe])\n- **screen**: counting screen sessions running with extra\n  parameters ([#261], [5f8fcc4])\n- **svn**: fix branch/tag name extraction ([#117], [#237], [c98f16d])\n- **svn**: support paths that are not branches or trunk ([#293], [5425a5e])\n- **temp/linux** fix for negative temperature values ([#308], [7402f79])\n- **term**: fix `$TERM` check ([#291], [dc7be25])\n- **zsh**: make `$LP_OLD_PROMPT_COMMAND` work ([81b080e])\n\n### Changed\n- **general**: apply some shellcheck.com suggestions\n- **color**: optimize colormap when `LP_PERCENT_ALWAYS=1` ([ee63435])\n- **fossil**: cleanup and optimization ([#274])\n- **git**: minor optimization ([#266])\n- **git**: simplify working tree detection ([0e0cc87])\n- **hg**: disabled `hg outgoing` because it is slow ([#217])\n- **hg**: general cleanup for speed and fixes ([dd9a024])\n\n### Removed\n- **general**: `$LP_LIQUIDPROMPT`, use `$LP_OLD_PS1` for the same check ([ed4f383])\n\n## [1.8] - 2014-01-15 - dolmen (Olivier Mengué)\n\n## [1.7] - 2013-11-30 - nojhan\n\n## [1.6] - 2013-05-14 - nojhan\n\n## [1.5] - 2013-04-20 - nojhan\n\n## [1.4] - 2013-04-11 - nojhan\n\n## [1.3] - 2013-03-11 - nojhan\n\n## [1.2] - 2013-01-16 - nojhan\n\n## [1.1] - 2012-08-16 - nojhan\n\n## [1.0] - 2012-08-10 - nojhan\n\n[Unreleased]: https://github.com/liquidprompt/liquidprompt/compare/v2.2.1...master\n[2.2.1]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.2.1\n[2.2.0]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.2.0\n[2.1.2]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.1.2\n[2.1.1]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.1.1\n[2.1.0]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.1.0\n[2.0.5]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.5\n[2.0.4]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.4\n[2.0.3]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.3\n[2.0.2]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.2\n[2.0.1]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.1\n[2.0.0]: https://github.com/liquidprompt/liquidprompt/releases/tag/v2.0.0\n[1.12.1]: https://github.com/liquidprompt/liquidprompt/releases/tag/v1.12.1\n[1.12.0]: https://github.com/liquidprompt/liquidprompt/releases/tag/v1.12.0\n[1.11]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.11\n[1.10]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.10\n[1.9]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.9\n[1.8]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.8\n[1.7]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.7\n[1.6]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.6\n[1.5]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.5\n[1.4]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.4\n[1.3]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.3\n[1.2]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.2\n[1.1]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.1\n[1.0]: https://github.com/liquidprompt/liquidprompt/releases/tag/v_1.0\n\n[#110]: https://github.com/liquidprompt/liquidprompt/issues/110\n[#117]: https://github.com/liquidprompt/liquidprompt/issues/117\n[#139]: https://github.com/liquidprompt/liquidprompt/issues/139\n[#148]: https://github.com/liquidprompt/liquidprompt/issues/148\n[#149]: https://github.com/liquidprompt/liquidprompt/issues/149\n[#217]: https://github.com/liquidprompt/liquidprompt/issues/217\n[#237]: https://github.com/liquidprompt/liquidprompt/issues/237\n[#254]: https://github.com/liquidprompt/liquidprompt/pull/254\n[#256]: https://github.com/liquidprompt/liquidprompt/issues/256\n[#261]: https://github.com/liquidprompt/liquidprompt/pull/261\n[#265]: https://github.com/liquidprompt/liquidprompt/pull/265\n[#266]: https://github.com/liquidprompt/liquidprompt/pull/266\n[#267]: https://github.com/liquidprompt/liquidprompt/pull/267\n[#268]: https://github.com/liquidprompt/liquidprompt/pull/268\n[#269]: https://github.com/liquidprompt/liquidprompt/pull/269\n[#270]: https://github.com/liquidprompt/liquidprompt/pull/270\n[#273]: https://github.com/liquidprompt/liquidprompt/pull/273\n[#274]: https://github.com/liquidprompt/liquidprompt/pull/274\n[#277]: https://github.com/liquidprompt/liquidprompt/pull/277\n[#287]: https://github.com/liquidprompt/liquidprompt/pull/287\n[#288]: https://github.com/liquidprompt/liquidprompt/issues/288\n[#289]: https://github.com/liquidprompt/liquidprompt/issues/289\n[#291]: https://github.com/liquidprompt/liquidprompt/issues/291\n[#293]: https://github.com/liquidprompt/liquidprompt/pull/293\n[#294]: https://github.com/liquidprompt/liquidprompt/pull/294\n[#298]: https://github.com/liquidprompt/liquidprompt/issues/298\n[#299]: https://github.com/liquidprompt/liquidprompt/pull/299\n[#300]: https://github.com/liquidprompt/liquidprompt/pull/300\n[#301]: https://github.com/liquidprompt/liquidprompt/issues/301\n[#302]: https://github.com/liquidprompt/liquidprompt/pull/302\n[#303]: https://github.com/liquidprompt/liquidprompt/pull/303\n[#304]: https://github.com/liquidprompt/liquidprompt/issues/304\n[#308]: https://github.com/liquidprompt/liquidprompt/pull/308\n[#313]: https://github.com/liquidprompt/liquidprompt/pull/313\n[#317]: https://github.com/liquidprompt/liquidprompt/pull/317\n[#319]: https://github.com/liquidprompt/liquidprompt/pull/319\n[#326]: https://github.com/liquidprompt/liquidprompt/issues/326\n[#334]: https://github.com/liquidprompt/liquidprompt/pull/334\n[#335]: https://github.com/liquidprompt/liquidprompt/issues/335\n[#340]: https://github.com/liquidprompt/liquidprompt/pull/340\n[#344]: https://github.com/liquidprompt/liquidprompt/issues/344\n[#345]: https://github.com/liquidprompt/liquidprompt/issues/345\n[#349]: https://github.com/liquidprompt/liquidprompt/issues/349\n[#354]: https://github.com/liquidprompt/liquidprompt/issues/354\n[#355]: https://github.com/liquidprompt/liquidprompt/pull/355\n[#357]: https://github.com/liquidprompt/liquidprompt/pull/357\n[#360]: https://github.com/liquidprompt/liquidprompt/issues/360\n[#361]: https://github.com/liquidprompt/liquidprompt/pull/361\n[#363]: https://github.com/liquidprompt/liquidprompt/issues/363\n[#365]: https://github.com/liquidprompt/liquidprompt/pull/365\n[#369]: https://github.com/liquidprompt/liquidprompt/pull/369\n[#370]: https://github.com/liquidprompt/liquidprompt/issues/370\n[#371]: https://github.com/liquidprompt/liquidprompt/pull/371\n[#372]: https://github.com/liquidprompt/liquidprompt/pull/372\n[#379]: https://github.com/liquidprompt/liquidprompt/issues/379\n[#380]: https://github.com/liquidprompt/liquidprompt/pull/380\n[#381]: https://github.com/liquidprompt/liquidprompt/pull/381\n[#387]: https://github.com/liquidprompt/liquidprompt/pull/387\n[#389]: https://github.com/liquidprompt/liquidprompt/issues/389\n[#390]: https://github.com/liquidprompt/liquidprompt/pull/390\n[#391]: https://github.com/liquidprompt/liquidprompt/pull/391\n[#404]: https://github.com/liquidprompt/liquidprompt/pull/404\n[#406]: https://github.com/liquidprompt/liquidprompt/pull/406\n[#407]: https://github.com/liquidprompt/liquidprompt/issues/407\n[#409]: https://github.com/liquidprompt/liquidprompt/pull/409\n[#410]: https://github.com/liquidprompt/liquidprompt/issues/410\n[#415]: https://github.com/liquidprompt/liquidprompt/issues/415\n[#416]: https://github.com/liquidprompt/liquidprompt/pull/416\n[#420]: https://github.com/liquidprompt/liquidprompt/issues/420\n[#423]: https://github.com/liquidprompt/liquidprompt/pull/423\n[#425]: https://github.com/liquidprompt/liquidprompt/pull/425\n[#427]: https://github.com/liquidprompt/liquidprompt/pull/427\n[#430]: https://github.com/liquidprompt/liquidprompt/pull/430\n[#432]: https://github.com/liquidprompt/liquidprompt/pull/432\n[#433]: https://github.com/liquidprompt/liquidprompt/pull/433\n[#443]: https://github.com/liquidprompt/liquidprompt/pull/443\n[#444]: https://github.com/liquidprompt/liquidprompt/pull/444\n[#445]: https://github.com/liquidprompt/liquidprompt/issues/445\n[#450]: https://github.com/liquidprompt/liquidprompt/issues/450\n[#451]: https://github.com/liquidprompt/liquidprompt/issues/451\n[#453]: https://github.com/liquidprompt/liquidprompt/pull/453\n[#455]: https://github.com/liquidprompt/liquidprompt/pull/455\n[#461]: https://github.com/liquidprompt/liquidprompt/issues/461\n[#462]: https://github.com/liquidprompt/liquidprompt/pull/462\n[#463]: https://github.com/liquidprompt/liquidprompt/issues/463\n[#469]: https://github.com/liquidprompt/liquidprompt/issues/469\n[#472]: https://github.com/liquidprompt/liquidprompt/issues/472\n[#472]: https://github.com/liquidprompt/liquidprompt/issues/472\n[#474]: https://github.com/liquidprompt/liquidprompt/issues/474\n[#476]: https://github.com/liquidprompt/liquidprompt/pull/476\n[#479]: https://github.com/liquidprompt/liquidprompt/issues/479\n[#480]: https://github.com/liquidprompt/liquidprompt/pull/480\n[#483]: https://github.com/liquidprompt/liquidprompt/issues/483\n[#486]: https://github.com/liquidprompt/liquidprompt/issues/486\n[#496]: https://github.com/liquidprompt/liquidprompt/pull/496\n[#497]: https://github.com/liquidprompt/liquidprompt/pull/497\n[#499]: https://github.com/liquidprompt/liquidprompt/issues/499\n[#501]: https://github.com/liquidprompt/liquidprompt/issues/501\n[#503]: https://github.com/liquidprompt/liquidprompt/pull/503\n[#506]: https://github.com/liquidprompt/liquidprompt/issues/506\n[#508]: https://github.com/liquidprompt/liquidprompt/pull/508\n[#509]: https://github.com/liquidprompt/liquidprompt/pull/509\n[#517]: https://github.com/liquidprompt/liquidprompt/issues/517\n[#520]: https://github.com/liquidprompt/liquidprompt/issues/520\n[#522]: https://github.com/liquidprompt/liquidprompt/issues/522\n[#523]: https://github.com/liquidprompt/liquidprompt/pull/523\n[#524]: https://github.com/liquidprompt/liquidprompt/issues/524\n[#524]: https://github.com/liquidprompt/liquidprompt/issues/524\n[#527]: https://github.com/liquidprompt/liquidprompt/issues/527\n[#530]: https://github.com/liquidprompt/liquidprompt/issues/530\n[#543]: https://github.com/liquidprompt/liquidprompt/issues/543\n[#548]: https://github.com/liquidprompt/liquidprompt/issues/548\n[#549]: https://github.com/liquidprompt/liquidprompt/pull/549\n[#552]: https://github.com/liquidprompt/liquidprompt/issues/552\n[#563]: https://github.com/liquidprompt/liquidprompt/issues/563\n[#564]: https://github.com/liquidprompt/liquidprompt/issues/564\n[#569]: https://github.com/liquidprompt/liquidprompt/issues/569\n[#571]: https://github.com/liquidprompt/liquidprompt/pull/571\n[#578]: https://github.com/liquidprompt/liquidprompt/pull/578\n[#581]: https://github.com/liquidprompt/liquidprompt/issues/581\n[#582]: https://github.com/liquidprompt/liquidprompt/pull/582\n[#587]: https://github.com/liquidprompt/liquidprompt/pull/587\n[#592]: https://github.com/liquidprompt/liquidprompt/issues/592\n[#596]: https://github.com/liquidprompt/liquidprompt/issues/596\n[#604]: https://github.com/liquidprompt/liquidprompt/pull/604\n[#605]: https://github.com/liquidprompt/liquidprompt/pull/605\n[#606]: https://github.com/liquidprompt/liquidprompt/issues/606\n[#607]: https://github.com/liquidprompt/liquidprompt/issues/607\n[#609]: https://github.com/liquidprompt/liquidprompt/issues/609\n[#612]: https://github.com/liquidprompt/liquidprompt/issues/612\n[#613]: https://github.com/liquidprompt/liquidprompt/issues/613\n[#614]: https://github.com/liquidprompt/liquidprompt/issues/614\n[#615]: https://github.com/liquidprompt/liquidprompt/issues/615\n[#623]: https://github.com/liquidprompt/liquidprompt/pull/623\n[#625]: https://github.com/liquidprompt/liquidprompt/pull/625\n[#626]: https://github.com/liquidprompt/liquidprompt/issues/626\n[#628]: https://github.com/liquidprompt/liquidprompt/pull/628\n[#635]: https://github.com/liquidprompt/liquidprompt/pull/635\n[#637]: https://github.com/liquidprompt/liquidprompt/pull/637\n[#644]: https://github.com/liquidprompt/liquidprompt/issues/644\n[#648]: https://github.com/liquidprompt/liquidprompt/pull/648\n[#649]: https://github.com/liquidprompt/liquidprompt/pull/649\n[#650]: https://github.com/liquidprompt/liquidprompt/pull/650\n[#656]: https://github.com/liquidprompt/liquidprompt/issues/656\n[#657]: https://github.com/liquidprompt/liquidprompt/issues/657\n[#658]: https://github.com/liquidprompt/liquidprompt/issues/658\n[#659]: https://github.com/liquidprompt/liquidprompt/issues/659\n[#662]: https://github.com/liquidprompt/liquidprompt/pull/662\n[#663]: https://github.com/liquidprompt/liquidprompt/pull/663\n[#664]: https://github.com/liquidprompt/liquidprompt/pull/664\n[#665]: https://github.com/liquidprompt/liquidprompt/pull/665\n[#667]: https://github.com/liquidprompt/liquidprompt/issues/667\n[#668]: https://github.com/liquidprompt/liquidprompt/pull/668\n[#669]: https://github.com/liquidprompt/liquidprompt/pull/669\n[#670]: https://github.com/liquidprompt/liquidprompt/issues/670\n[#671]: https://github.com/liquidprompt/liquidprompt/pull/671\n[#672]: https://github.com/liquidprompt/liquidprompt/pull/672\n[#673]: https://github.com/liquidprompt/liquidprompt/pull/673\n[#676]: https://github.com/liquidprompt/liquidprompt/issues/676\n[#677]: https://github.com/liquidprompt/liquidprompt/pull/677\n[#678]: https://github.com/liquidprompt/liquidprompt/pull/678\n[#679]: https://github.com/liquidprompt/liquidprompt/pull/679\n[#681]: https://github.com/liquidprompt/liquidprompt/pull/681\n[#684]: https://github.com/liquidprompt/liquidprompt/issues/684\n[#686]: https://github.com/liquidprompt/liquidprompt/issues/686\n[#688]: https://github.com/liquidprompt/liquidprompt/pull/688\n[#689]: https://github.com/liquidprompt/liquidprompt/pull/689\n[#690]: https://github.com/liquidprompt/liquidprompt/issues/690\n[#695]: https://github.com/liquidprompt/liquidprompt/issues/695\n[#696]: https://github.com/liquidprompt/liquidprompt/issues/696\n[#701]: https://github.com/liquidprompt/liquidprompt/issues/701\n[#702]: https://github.com/liquidprompt/liquidprompt/pull/702\n[#708]: https://github.com/liquidprompt/liquidprompt/issues/708\n[#709]: https://github.com/liquidprompt/liquidprompt/issues/709\n[#713]: https://github.com/liquidprompt/liquidprompt/issues/713\n[#715]: https://github.com/liquidprompt/liquidprompt/issues/715\n[#722]: https://github.com/liquidprompt/liquidprompt/issues/722\n[#724]: https://github.com/liquidprompt/liquidprompt/issues/724\n[#729]: https://github.com/liquidprompt/liquidprompt/issues/729\n[#731]: https://github.com/liquidprompt/liquidprompt/pull/731\n[#738]: https://github.com/liquidprompt/liquidprompt/pull/738\n[#743]: https://github.com/liquidprompt/liquidprompt/pull/743\n[#744]: https://github.com/liquidprompt/liquidprompt/pull/744\n[#745]: https://github.com/liquidprompt/liquidprompt/pull/745\n[#746]: https://github.com/liquidprompt/liquidprompt/pull/746\n[#748]: https://github.com/liquidprompt/liquidprompt/pull/748\n[#750]: https://github.com/liquidprompt/liquidprompt/pull/750\n[#752]: https://github.com/liquidprompt/liquidprompt/pull/752\n[#754]: https://github.com/liquidprompt/liquidprompt/pull/754\n[#755]: https://github.com/liquidprompt/liquidprompt/issues/755\n[#756]: https://github.com/liquidprompt/liquidprompt/pull/756\n[#758]: https://github.com/liquidprompt/liquidprompt/issues/758\n[#759]: https://github.com/liquidprompt/liquidprompt/pull/759\n[#760]: https://github.com/liquidprompt/liquidprompt/issues/760\n[#763]: https://github.com/liquidprompt/liquidprompt/issues/763\n[#765]: https://github.com/liquidprompt/liquidprompt/issues/765\n[#766]: https://github.com/liquidprompt/liquidprompt/pull/766\n[#767]: https://github.com/liquidprompt/liquidprompt/pull/767\n[#769]: https://github.com/liquidprompt/liquidprompt/pull/769\n[#770]: https://github.com/liquidprompt/liquidprompt/pull/770\n[#771]: https://github.com/liquidprompt/liquidprompt/pull/771\n[#772]: https://github.com/liquidprompt/liquidprompt/pull/772\n[#773]: https://github.com/liquidprompt/liquidprompt/pull/773\n[#775]: https://github.com/liquidprompt/liquidprompt/pull/775\n[#776]: https://github.com/liquidprompt/liquidprompt/issues/776\n[#784]: https://github.com/liquidprompt/liquidprompt/pull/784\n[#788]: https://github.com/liquidprompt/liquidprompt/pull/788\n[#792]: https://github.com/liquidprompt/liquidprompt/pull/792\n[#795]: https://github.com/liquidprompt/liquidprompt/pull/795\n[#798]: https://github.com/liquidprompt/liquidprompt/pull/798\n[#801]: https://github.com/liquidprompt/liquidprompt/pull/801\n[#803]: https://github.com/liquidprompt/liquidprompt/pull/803\n[#805]: https://github.com/liquidprompt/liquidprompt/pull/805\n[#807]: https://github.com/liquidprompt/liquidprompt/issues/807\n[#811]: https://github.com/liquidprompt/liquidprompt/pull/811\n[#812]: https://github.com/liquidprompt/liquidprompt/pull/812\n[#815]: https://github.com/liquidprompt/liquidprompt/pull/815\n[#816]: https://github.com/liquidprompt/liquidprompt/pull/816\n[#821]: https://github.com/liquidprompt/liquidprompt/issues/821\n[#822]: https://github.com/liquidprompt/liquidprompt/issues/822\n[#823]: https://github.com/liquidprompt/liquidprompt/pull/823\n[#824]: https://github.com/liquidprompt/liquidprompt/pull/824\n[#826]: https://github.com/liquidprompt/liquidprompt/pull/826\n[#827]: https://github.com/liquidprompt/liquidprompt/pull/827\n[#829]: https://github.com/liquidprompt/liquidprompt/pull/829\n[#830]: https://github.com/liquidprompt/liquidprompt/pull/830\n[#831]: https://github.com/liquidprompt/liquidprompt/issues/831\n[#834]: https://github.com/liquidprompt/liquidprompt/issues/834\n[#837]: https://github.com/liquidprompt/liquidprompt/issues/837\n[#839]: https://github.com/liquidprompt/liquidprompt/pull/839\n[#840]: https://github.com/liquidprompt/liquidprompt/pull/840\n[#841]: https://github.com/liquidprompt/liquidprompt/pull/841\n\n[0200b99]: https://github.com/liquidprompt/liquidprompt/commit/0200b99ebd8485ba8ba2c91da7703e87c40ec15d\n[0234a58]: https://github.com/liquidprompt/liquidprompt/commit/0234a581d023fb6c40e5339f6dcbd619a33b4553\n[02bc49e]: https://github.com/liquidprompt/liquidprompt/commit/02bc49edf306749c47d7a389dc916cb68e992cc8\n[03434d3]: https://github.com/liquidprompt/liquidprompt/commit/03434d388686792b6ed2aa0bf0e09851c90a7479\n[0368523]: https://github.com/liquidprompt/liquidprompt/commit/036852371680a9e92d7e341be604088e8dc0519b\n[03c73fe]: https://github.com/liquidprompt/liquidprompt/commit/03c73fe05e5a3b48252a9f527e6e62666afbd726\n[046d830]: https://github.com/liquidprompt/liquidprompt/commit/046d8300b2e65337fcecc0f76add818b5f461fcf\n[0548290]: https://github.com/liquidprompt/liquidprompt/commit/05482901fe86788032ab4089525c415384937a24\n[05e0a50]: https://github.com/liquidprompt/liquidprompt/commit/05e0a502e8ae4e2a4711f5222f39c2589c6f582f\n[07be967]: https://github.com/liquidprompt/liquidprompt/commit/07be96765bbd742c5c2846ef6adbb0c253948216\n[07d18d4]: https://github.com/liquidprompt/liquidprompt/commit/07d18d4ca3f4a77377591d62dc054e00f4616cc7\n[09cfced]: https://github.com/liquidprompt/liquidprompt/commit/09cfced24745dd7aea086a292ab042f070ce4fbb\n[0b94b74]: https://github.com/liquidprompt/liquidprompt/commit/0b94b74d02046077a21d3fb83842c6a1fe74f6e5\n[0c23a33]: https://github.com/liquidprompt/liquidprompt/commit/0c23a33eacc6ced0febc1a750c748010c3a87ad5\n[0ce7646]: https://github.com/liquidprompt/liquidprompt/commit/0ce764653a5f000598b6ad11c974fcefb65832da\n[0d420d2]: https://github.com/liquidprompt/liquidprompt/commit/0d420d2f3ac84a83e150110f9e09fc21e919df7f\n[0e0cc12]: https://github.com/liquidprompt/liquidprompt/commit/0e0cc12fabc474b6c0cfed7abf80c9f61efb68fc\n[0e0cc87]: https://github.com/liquidprompt/liquidprompt/commit/0e0cc870c2dcf3fbfed1b2e187e918d74dd6d3db\n[0f0fd37]: https://github.com/liquidprompt/liquidprompt/commit/0f0fd3739a8dd9821b34b78859de13b47b2d856d\n[0f80162]: https://github.com/liquidprompt/liquidprompt/commit/0f80162f1f22277e497b69f243894a87fcaec643\n[1139de1]: https://github.com/liquidprompt/liquidprompt/commit/1139de199a2bc80da577453b8614776863297736\n[13e128b]: https://github.com/liquidprompt/liquidprompt/commit/13e128bb320034a0303f7354fad66a5674c6b4da\n[145f146]: https://github.com/liquidprompt/liquidprompt/commit/145f146e9cb4fb3c30a22e6c35529120f4650a28\n[1a22e1e]: https://github.com/liquidprompt/liquidprompt/commit/1a22e1ec54ad46a311ed9bdd65ed2bd1459e606e\n[1a56d58]: https://github.com/liquidprompt/liquidprompt/commit/1a56d58d4e63f395545fed820278c5b4561dfa95\n[1a9fcd0]: https://github.com/liquidprompt/liquidprompt/commit/1a9fcd0944711ccab20045e5a3f3bde9d7f0ec59\n[1be52e0]: https://github.com/liquidprompt/liquidprompt/commit/1be52e0d048f68db9ab0ffd2f4d2a4212b685f93\n[1c65748]: https://github.com/liquidprompt/liquidprompt/commit/1c657481fd3481720b54187f9aa464df0e62a3f2\n[1fc0308]: https://github.com/liquidprompt/liquidprompt/commit/1fc030813069ebc0cfc0542d049a9e4998100490\n[1fe1559]: https://github.com/liquidprompt/liquidprompt/commit/1fe1559ebb18ae2ff39e1c4703a06d35f0f6538f\n[2121394]: https://github.com/liquidprompt/liquidprompt/commit/2121394b07d7102857ebc06229dc80f61cedd97d\n[22dd760]: https://github.com/liquidprompt/liquidprompt/commit/22dd760926c3a7b8e4f4fa28902d43b06e68e6a8\n[230c9d7]: https://github.com/liquidprompt/liquidprompt/commit/230c9d7d45c10b8f319b9d5c64b4fd59261c8008\n[239a574]: https://github.com/liquidprompt/liquidprompt/commit/239a5740866962a40a614057065188810830207d\n[23eb3f2]: https://github.com/liquidprompt/liquidprompt/commit/23eb3f23b633a8e849f91867948c96976108df6b\n[282359a]: https://github.com/liquidprompt/liquidprompt/commit/282359a4b7c80a6032ec043eddb1bf378084e64e\n[28c13f2]: https://github.com/liquidprompt/liquidprompt/commit/28c13f27e652b84373a7c73389cbd0a5a10b88c3\n[2d659f0]: https://github.com/liquidprompt/liquidprompt/commit/2d659f04628a804409e6262733f0f909c3c2675b\n[3079299]: https://github.com/liquidprompt/liquidprompt/commit/3079299f816ee2d893c2b7c2284e9e6034164d16\n[309b443]: https://github.com/liquidprompt/liquidprompt/commit/309b443461a25f552754663d3d67a5ee0f97571f\n[30f977b]: https://github.com/liquidprompt/liquidprompt/commit/30f977b09f6ee36c38e1ec07a272b5b0e621729f\n[36ab8fa]: https://github.com/liquidprompt/liquidprompt/commit/36ab8fa8ff7c27284163aebbfcb9f82fc2f572ac\n[37db052]: https://github.com/liquidprompt/liquidprompt/commit/37db052c18d99fc36f4c4a4ede798155e519e2ca\n[3b75185]: https://github.com/liquidprompt/liquidprompt/commit/3b751856bfe701f38f842e8ae96d803a3990f13d\n[3d24865]: https://github.com/liquidprompt/liquidprompt/commit/3d2486578855e92c7cf8c5dc05da5fc6568a1f43\n[3e615cd]: https://github.com/liquidprompt/liquidprompt/commit/3e615cded01b583870a7e6e9529f341280eb40a6\n[3f57231]: https://github.com/liquidprompt/liquidprompt/commit/3f57231d73112ea1090e3a607539e515f21de794\n[3fadce9]: https://github.com/liquidprompt/liquidprompt/commit/3fadce962396d6d3a1f7c2c8e23c1d9fdc22c098\n[40c4331]: https://github.com/liquidprompt/liquidprompt/commit/40c4331f6eda1cb836e8ae62426cb7755fdec371\n[436b1b5]: https://github.com/liquidprompt/liquidprompt/commit/436b1b58a44ed8bf4210b6b955d7da6cf707470f\n[44e3a6f]: https://github.com/liquidprompt/liquidprompt/commit/44e3a6fe8ea9aa61f7cedb32286eb321fc93c6ed\n[454112f]: https://github.com/liquidprompt/liquidprompt/commit/454112f385c49e0bdf408ffd6123f8eaa39d0b0c\n[4572bd0]: https://github.com/liquidprompt/liquidprompt/commit/4572bd02fa289b989de3d24e246be187dbd25f65\n[45f8091]: https://github.com/liquidprompt/liquidprompt/commit/45f80913da7aaf869a80288c5433c4d71ffc28c4\n[461f0ee]: https://github.com/liquidprompt/liquidprompt/commit/461f0ee05e1466a0f14afebcbc2aaeabe711e38a\n[46918f6]: https://github.com/liquidprompt/liquidprompt/commit/46918f62ef80f26bec379a5542d669654e5e3280\n[46df995]: https://github.com/liquidprompt/liquidprompt/commit/46df99503698c838ad6bb9c030a271e9fda87b15\n[48f1b02]: https://github.com/liquidprompt/liquidprompt/commit/48f1b022dd078ce45f786a28dbe75a8acea37031\n[4a52696]: https://github.com/liquidprompt/liquidprompt/commit/4a526965cba546978423a4d51bfbb0a2d1000246\n[4b7fd88]: https://github.com/liquidprompt/liquidprompt/commit/4b7fd88da0777d005d67d28d285be9255f1666c7\n[4c8ac92]: https://github.com/liquidprompt/liquidprompt/commit/4c8ac9219f4191a458a9d472360f54d24060f2d6\n[4ebc26e]: https://github.com/liquidprompt/liquidprompt/commit/4ebc26e92be20ddf5d068fb25d2cecfcf479c1ea\n[4fff496]: https://github.com/liquidprompt/liquidprompt/commit/4fff49644a86fe93f1373825f09e1b1fdfb20f54\n[5069c22]: https://github.com/liquidprompt/liquidprompt/commit/5069c22dbece5ef8726b1393df5ae91550a2b3fe\n[5076dbe]: https://github.com/liquidprompt/liquidprompt/commit/5076dbe68788586f317c4d0590e1ea60e4dec07a\n[5425a5e]: https://github.com/liquidprompt/liquidprompt/commit/5425a5eb56433d4332441d37eae69d159ab456c1\n[5813a71]: https://github.com/liquidprompt/liquidprompt/commit/5813a710fc0feb2970e1d1e6615f822777b111c7\n[58693b0]: https://github.com/liquidprompt/liquidprompt/commit/58693b0664964e2a06b46fa8d5bdffd23ada417f\n[58969b2]: https://github.com/liquidprompt/liquidprompt/commit/58969b205f484dbf9ac5c151db81a2cc4c3762d6\n[59078f0]: https://github.com/liquidprompt/liquidprompt/commit/59078f04622ea7b1c658e214435724d46307a443\n[5a9293d]: https://github.com/liquidprompt/liquidprompt/commit/5a9293db78cad4739f2b105e1c438d21372c25f1\n[5bd80ce]: https://github.com/liquidprompt/liquidprompt/commit/5bd80ce1da07adc501a46c375eae0ca741f3960e\n[5c56e65]: https://github.com/liquidprompt/liquidprompt/commit/5c56e65888d92f9f0239096c02ac86e568d53ad1\n[5cfd2c2]: https://github.com/liquidprompt/liquidprompt/commit/5cfd2c2e7a892d1435cfd7b61cce697d5658db5c\n[5ee3c53]: https://github.com/liquidprompt/liquidprompt/commit/5ee3c53cbbc95b5288fe5baf5a3c5b21d2a7212d\n[5ef795d]: https://github.com/liquidprompt/liquidprompt/commit/5ef795d262839e99183db00a3dc7572e06f9b610\n[5f8fcc4]: https://github.com/liquidprompt/liquidprompt/commit/5f8fcc46eade20015291833118055b7cd76a5c0a\n[5fa9054]: https://github.com/liquidprompt/liquidprompt/commit/5fa905481c9c7c4579cadc0065648b6617b9c775\n[6085cd2]: https://github.com/liquidprompt/liquidprompt/commit/6085cd21b958c16853c3bb5ea7bfdb7daf11e2cf\n[61df03a]: https://github.com/liquidprompt/liquidprompt/commit/61df03a02367e29f80d470196b4cc193729ef37a\n[62f0270]: https://github.com/liquidprompt/liquidprompt/commit/62f0270888ec668ec50df2af826727ca8ba9d6c6\n[63b9f73]: https://github.com/liquidprompt/liquidprompt/commit/63b9f73d72218d4e72c0d43bc6a60a82ea0e15e8\n[64029ad]: https://github.com/liquidprompt/liquidprompt/commit/64029ad75d108a0619958c337fd64fe18560988e\n[66d1d2b]: https://github.com/liquidprompt/liquidprompt/commit/66d1d2ba3baade138d7470317aca527c138732fe\n[67a4221]: https://github.com/liquidprompt/liquidprompt/commit/67a4221a955a83c00c44bca5eb276b9f02074d15\n[67dc0a9]: https://github.com/liquidprompt/liquidprompt/commit/67dc0a9ae9eebf0c2b85b4ee6fc2d6b5562b6412\n[6868057]: https://github.com/liquidprompt/liquidprompt/commit/68680573bc9f198e663587916760d59c98614dd4\n[695d629]: https://github.com/liquidprompt/liquidprompt/commit/695d629dd5cf7109e8892075d4cf7fadd8c17d94\n[6961f99]: https://github.com/liquidprompt/liquidprompt/commit/6961f998b83f491995ce731bd232c5170cf4be5f\n[69c75a3]: https://github.com/liquidprompt/liquidprompt/commit/69c75a3e6c4998d682e480fb3df935e4eb224444\n[6cdb860]: https://github.com/liquidprompt/liquidprompt/commit/6cdb86006e4d2ad6dee06e60e229842144305594\n[6d94db6]: https://github.com/liquidprompt/liquidprompt/commit/6d94db6de7de879c14da842df535163a57dce638\n[6ea54e9]: https://github.com/liquidprompt/liquidprompt/commit/6ea54e91f84be1c491314c3680e82b06d769218e\n[6f2ca7e]: https://github.com/liquidprompt/liquidprompt/commit/6f2ca7e62d0281356bd984957a9c2da41dd228d6\n[708635b]: https://github.com/liquidprompt/liquidprompt/commit/708635b938c643948e83e4f9855410a1a816b082\n[70b4ef6]: https://github.com/liquidprompt/liquidprompt/commit/70b4ef65c034c5050173dbe70178b459e5acddc2\n[70ce708]: https://github.com/liquidprompt/liquidprompt/commit/70ce708b8142d71647c14817cb40801c5dfdb756\n[73f2057]: https://github.com/liquidprompt/liquidprompt/commit/73f205748fe6f09abcfe01ec150a456518aecc18\n[7402f79]: https://github.com/liquidprompt/liquidprompt/commit/7402f79a7518e74e16d36c74e8b5943d11f390d7\n[7602c09]: https://github.com/liquidprompt/liquidprompt/commit/7602c09fd7754f371db98bfad15bc075ef1ec93a\n[77dc561]: https://github.com/liquidprompt/liquidprompt/commit/77dc561c707a88ab9158f3f00231137f8f34c624\n[782fad0]: https://github.com/liquidprompt/liquidprompt/commit/782fad08fd37cbf2144ea203430f37608b156ae8\n[787e03e]: https://github.com/liquidprompt/liquidprompt/commit/787e03e9ee5dd09e146c58880e922d9e30c2585f\n[78dee3c]: https://github.com/liquidprompt/liquidprompt/commit/78dee3c70ab73eee04a5e869172e5f07ac916774\n[7c21470]: https://github.com/liquidprompt/liquidprompt/commit/7c214708d72a4fa7d298678167450693a1ffbc00\n[7db4ada]: https://github.com/liquidprompt/liquidprompt/commit/7db4ada711c5e9859ea79a11a1d03ca7d7311547\n[7e7734e]: https://github.com/liquidprompt/liquidprompt/commit/7e7734e6247a1b32d636b5e39fe99d8d23dde669\n[81b080e]: https://github.com/liquidprompt/liquidprompt/commit/81b080e2a6e6c24a3bab9348c187fb308c25ffe8\n[82ee823]: https://github.com/liquidprompt/liquidprompt/commit/82ee823e9cd2fb8581b653b38c4ea501b795a607\n[8605378]: https://github.com/liquidprompt/liquidprompt/commit/86053782d08b0d41ca69f4f45dde9ce619db1008\n[862dcfb]: https://github.com/liquidprompt/liquidprompt/commit/862dcfbe6c82bf4e4125cf584a010161a533b917\n[884c069]: https://github.com/liquidprompt/liquidprompt/commit/884c0697b71b0f87e2ea2a88159e08d33d3c6088\n[89540d3]: https://github.com/liquidprompt/liquidprompt/commit/89540d312543b897b3c116370deabdfe9db15dcb\n[8a987f4]: https://github.com/liquidprompt/liquidprompt/commit/8a987f436ffc6144eab1dadaacad9c460b9bfa1f\n[8bf1772]: https://github.com/liquidprompt/liquidprompt/commit/8bf1772d771904bd2095a974b35795c9db2c96cc\n[8cb609d]: https://github.com/liquidprompt/liquidprompt/commit/8cb609d49cc1ba92f09adc87e3fbed243d04626e\n[8da3314]: https://github.com/liquidprompt/liquidprompt/commit/8da33144c89075dfd2309feaa718ccf3fe693ff6\n[8de1a72]: https://github.com/liquidprompt/liquidprompt/commit/8de1a729f7190612d573218625dc1aaf4c2f78bf\n[8f730c8]: https://github.com/liquidprompt/liquidprompt/commit/8f730c8eb7b2488093db47045db1bcd239b02b9a\n[9038ec8]: https://github.com/liquidprompt/liquidprompt/commit/9038ec8884f11f7cf47fbfee1c86b9dbf6440307\n[93df016]: https://github.com/liquidprompt/liquidprompt/commit/93df0169499c4ca8563add267e95dcd343d95f12\n[954bace]: https://github.com/liquidprompt/liquidprompt/commit/954bace48637528795743785c4cc8cb42f204a7e\n[9604203]: https://github.com/liquidprompt/liquidprompt/commit/9604203fb9f90b44a8c806f32e7746588b70a83b\n[9633ac8]: https://github.com/liquidprompt/liquidprompt/commit/9633ac83cad5f5702c1e853940c0ab2e166961bf\n[9992fce]: https://github.com/liquidprompt/liquidprompt/commit/9992fce5faf8af2aeec9e6ca753ab9a3404b0785\n[9a00ead]: https://github.com/liquidprompt/liquidprompt/commit/9a00eada113cb1d5e33aa177f5b9180c25d6a843\n[9a2c067]: https://github.com/liquidprompt/liquidprompt/commit/9a2c06709544ce7609b432aa03d81f7cf4750283\n[9b40ca1]: https://github.com/liquidprompt/liquidprompt/commit/9b40ca139a43e51b4d0fbdc780d0661bfffbf6ae\n[9ba5d28]: https://github.com/liquidprompt/liquidprompt/commit/9ba5d2824571d41c1aa7a3573a3cf17ed729f2bb\n[9ba6e86]: https://github.com/liquidprompt/liquidprompt/commit/9ba6e86f8200c08543502185447185a5a4089685\n[9c1c8a3]: https://github.com/liquidprompt/liquidprompt/commit/9c1c8a378846c23e0a39be2aadd11531c2ecf196\n[9c6d073]: https://github.com/liquidprompt/liquidprompt/commit/9c6d073e3cc7a49cfce209ce4307881d70340161\n[9e205f5]: https://github.com/liquidprompt/liquidprompt/commit/9e205f51db459443e5c2ead0efa76f6a33c47c24\n[a1d0a54]: https://github.com/liquidprompt/liquidprompt/commit/a1d0a54027dba5efc5acccc630b2be432e705f67\n[a23af79]: https://github.com/liquidprompt/liquidprompt/commit/a23af79232fc3b716dc54bc3927b3e05bd777189\n[a314677]: https://github.com/liquidprompt/liquidprompt/commit/a314677b8031804130c69de94d4604e9c319575a\n[a35032f]: https://github.com/liquidprompt/liquidprompt/commit/a35032fe03ab3d84093141c403a7c6615f7c38d9\n[a70e80f]: https://github.com/liquidprompt/liquidprompt/commit/a70e80f0f501031ef97ea8baf88ca6d7ef56ad8a\n[a8114dd]: https://github.com/liquidprompt/liquidprompt/commit/a8114dd9550e2e7fd33b93eb7885de08b3e64933\n[a8571bb]: https://github.com/liquidprompt/liquidprompt/commit/a8571bb2920d9f11006754e634304242d929db57\n[a8aa8c9]: https://github.com/liquidprompt/liquidprompt/commit/a8aa8c94ca6b3d6486195a2d03cf7868d995f3a2\n[a97c0da]: https://github.com/liquidprompt/liquidprompt/commit/a97c0da0e6a6f037a6038c427a51a9ee840b45f2\n[aa870b5]: https://github.com/liquidprompt/liquidprompt/commit/aa870b54d27cd6deda50a24f2030511d8a23c45e\n[acb5430]: https://github.com/liquidprompt/liquidprompt/commit/acb54302d9711c6b7b8b68bc8a692ef232fb09d4\n[ae769dc]: https://github.com/liquidprompt/liquidprompt/commit/ae769dc9a71df27c24025a6bd29e840f4d97ce08\n[af8382b]: https://github.com/liquidprompt/liquidprompt/commit/af8382b56833e8ce08834c61c70c6eda805b413f\n[afe3195]: https://github.com/liquidprompt/liquidprompt/commit/afe319526a14e6ab73fba175c06e7a45188a37c4\n[b1a3145]: https://github.com/liquidprompt/liquidprompt/commit/b1a3145ae5432e39ff85d144207eb490f3af341a\n[b523025]: https://github.com/liquidprompt/liquidprompt/commit/b523025221c2c9084a933cf545fa9cb999916323\n[b53e53b]: https://github.com/liquidprompt/liquidprompt/commit/b53e53b6a5a5b783896b8fd75d341dbb1d7d5e5c\n[b699dea]: https://github.com/liquidprompt/liquidprompt/commit/b699dea7aec3b081292becf52fa1899fe82c3c8b\n[bb19836]: https://github.com/liquidprompt/liquidprompt/commit/bb198362d78310905ef213bbdedce1ace5002b99\n[bc120d5]: https://github.com/liquidprompt/liquidprompt/commit/bc120d50c265ece6158317ddea0488919e0747dd\n[bcefaf3]: https://github.com/liquidprompt/liquidprompt/commit/bcefaf32e9e301e13706fc5c39de814c1a2630aa\n[bf2b9c6]: https://github.com/liquidprompt/liquidprompt/commit/bf2b9c60a788c32f38078f580b79ba80540d3bdf\n[c0e74b8]: https://github.com/liquidprompt/liquidprompt/commit/c0e74b8953db777e1ae84fa5faa3620af5247511\n[c3d4970]: https://github.com/liquidprompt/liquidprompt/commit/c3d49708e598a79eca50caa0f96fca6230ce204e\n[c74a9e4]: https://github.com/liquidprompt/liquidprompt/commit/c74a9e4bdea7a4cf19ac368316ff724c42b3205e\n[c7b5003]: https://github.com/liquidprompt/liquidprompt/commit/c7b5003616d769ac1a4edc06d28ba6b84bfe0418\n[c946155]: https://github.com/liquidprompt/liquidprompt/commit/c9461552d9618548d4a858b0153671cf0fdbdac3\n[c98f16d]: https://github.com/liquidprompt/liquidprompt/commit/c98f16d52f9cc22723679124c3d64b06cbcb6e6e\n[c9bdefe]: https://github.com/liquidprompt/liquidprompt/commit/c9bdefe020c30bb053c0815a1633e5e3be25e4ef\n[cad6286]: https://github.com/liquidprompt/liquidprompt/commit/cad6286b6f923376a05ebe8c13a4302e91a9cfe3\n[cafb8b2]: https://github.com/liquidprompt/liquidprompt/commit/cafb8b2e5388fd9336c316248908881a8d66a4a5\n[cb9d71b]: https://github.com/liquidprompt/liquidprompt/commit/cb9d71b952954006ebedd66a7ea63de7562f9676\n[cc1be7e]: https://github.com/liquidprompt/liquidprompt/commit/cc1be7e29d1b7fa6ef25e960e02da6612ff8bde9\n[cef9cb1]: https://github.com/liquidprompt/liquidprompt/commit/cef9cb1581a419f7c7248954069fd0d4e5966284\n[cf01d02]: https://github.com/liquidprompt/liquidprompt/commit/cf01d02445c38ee9504bad00f079af080a7bdfe2\n[cf8bf97]: https://github.com/liquidprompt/liquidprompt/commit/cf8bf97b01a83a939eadc31b9da806172c91c444\n[d41b5c8]: https://github.com/liquidprompt/liquidprompt/commit/d41b5c8361381fcc785494f5552a2b5319c3c9d1\n[d485ed1]: https://github.com/liquidprompt/liquidprompt/commit/d485ed191fb6b896290a32848c4fefd0342e2046\n[d62bf31]: https://github.com/liquidprompt/liquidprompt/commit/d62bf310d0d5a30fac6d047f03d832b81070c884\n[d66f720]: https://github.com/liquidprompt/liquidprompt/commit/d66f7209591a733e55b10d715d58d259327b67f5\n[d8254c6]: https://github.com/liquidprompt/liquidprompt/commit/d8254c646296ce864e8cd60eff5e860fa5356f5b\n[d9cb55d]: https://github.com/liquidprompt/liquidprompt/commit/d9cb55da834720ac3cd4893bb4a35808ab67d376\n[dc11eb4]: https://github.com/liquidprompt/liquidprompt/commit/dc11eb48ecb133930355f396578e5c9b06b49afc\n[dc7be25]: https://github.com/liquidprompt/liquidprompt/commit/dc7be2540d677600a484dcd0c2d05dc0945382e5\n[dd1f8f8]: https://github.com/liquidprompt/liquidprompt/commit/dd1f8f873e6d71b9dc9d9a820cd7fe1a3f313c67\n[dd9a024]: https://github.com/liquidprompt/liquidprompt/commit/dd9a024b485d9c017aa935809bd20e7436dff46c\n[debb794]: https://github.com/liquidprompt/liquidprompt/commit/debb794bf2f99ab53d539e5080f0b28579333cb8\n[decaece]: https://github.com/liquidprompt/liquidprompt/commit/decaece03b9bfe826d7f33a3fb56dfb33916884a\n[df5b88a]: https://github.com/liquidprompt/liquidprompt/commit/df5b88a93d51ae6da220fb23c8737b53b07a8e7c\n[e058b61]: https://github.com/liquidprompt/liquidprompt/commit/e058b619ce80918d3cdf924e07220a7028a8bb1b\n[e121179]: https://github.com/liquidprompt/liquidprompt/commit/e121179d1bb943ec3673e451deac2a0577adbb75\n[e122d21]: https://github.com/liquidprompt/liquidprompt/commit/e122d21ba14f2bdfe5fa88b70083249456c67b5b\n[e1f8bd5]: https://github.com/liquidprompt/liquidprompt/commit/e1f8bd585d5dfc41d21d4bf88343f3a30fb3d071\n[e2ba86e]: https://github.com/liquidprompt/liquidprompt/commit/e2ba86e0e5fc8bf5191cf8d8ac6aa1cd2b81a596\n[e48856b]: https://github.com/liquidprompt/liquidprompt/commit/e48856b59e51731b7accab27e679154bcff53ed4\n[e5047c0]: https://github.com/liquidprompt/liquidprompt/commit/e5047c0bbc1e95f811ae56265306851d3d5769e4\n[e843ccf]: https://github.com/liquidprompt/liquidprompt/commit/e843ccfd7c719f84baf7e628697f78ff59703e5d\n[e927985]: https://github.com/liquidprompt/liquidprompt/commit/e9279856c4af191d501e8e46898dde3b4447e6dd\n[e9c35dd]: https://github.com/liquidprompt/liquidprompt/commit/e9c35ddeb473da1ac24eb27331b8974f3ba05237\n[eb30942]: https://github.com/liquidprompt/liquidprompt/commit/eb309422009c8f8e2a105381317b71ace5d42e13\n[eb6dafc]: https://github.com/liquidprompt/liquidprompt/commit/eb6dafc314a3dc1fc5ca560d79c408db81af0288\n[ed4f383]: https://github.com/liquidprompt/liquidprompt/commit/ed4f3832fe2f7380ec1b7949777fffe2a7f63f34\n[edc490f]: https://github.com/liquidprompt/liquidprompt/commit/edc490f3a3e92e9b0a94e9021a0589d64c6a7881\n[ee63435]: https://github.com/liquidprompt/liquidprompt/commit/ee6343567d2178cd57daa89498868be6ea2ef156\n[f2276fc]: https://github.com/liquidprompt/liquidprompt/commit/f2276fc29530fcba63bd5602364e20187a8d44c6\n[f3404f9]: https://github.com/liquidprompt/liquidprompt/commit/f3404f99d3c08a5811eec0a8c326abe6763c6c14\n[f35d9ac]: https://github.com/liquidprompt/liquidprompt/commit/f35d9acfddacc1f7f74174b45cf4c4aa9c84beca\n[f3f20ec]: https://github.com/liquidprompt/liquidprompt/commit/f3f20ecbe0309842ab43d36c006e75928cd5dae4\n[f434b6d]: https://github.com/liquidprompt/liquidprompt/commit/f434b6dc663d704e9d616b8864908371862b9e23\n[f436867]: https://github.com/liquidprompt/liquidprompt/commit/f4368670bf258257fece5611a9aad17e88f10b5a\n[f445eff]: https://github.com/liquidprompt/liquidprompt/commit/f445eff684558e8bf200df2f3f897c09374b7d6c\n[f4636e6]: https://github.com/liquidprompt/liquidprompt/commit/f4636e66455a80586f20bb1ea9624a15299cea58\n[f47a7cd]: https://github.com/liquidprompt/liquidprompt/commit/f47a7cd482450a0898f8ad3a22dbe0f0ce84fd6d\n[f4afc5d]: https://github.com/liquidprompt/liquidprompt/commit/f4afc5d0a8f776c96308001fcdae4a5aa1dac2bd\n[f681cdf]: https://github.com/liquidprompt/liquidprompt/commit/f681cdf9d8dd1d847aaf5f0b69222606a181c648\n[f86a097]: https://github.com/liquidprompt/liquidprompt/commit/f86a097d5eb9cab2a2fbca7629e9c2c389f1e12e\n[f8c1c47]: https://github.com/liquidprompt/liquidprompt/commit/f8c1c4770aab0a1c15f3e17b0b47a421f024f1b7\n[f9038e0]: https://github.com/liquidprompt/liquidprompt/commit/f9038e0331df1dfedbeb442c84ec62d63a90c37d\n[f9fd12e]: https://github.com/liquidprompt/liquidprompt/commit/f9fd12eed963ce2d64762e09b04adb06e00692a4\n[fabc775]: https://github.com/liquidprompt/liquidprompt/commit/fabc775cb8bfe1be5a39cf577d2d2187398881b0\n[fb123f4]: https://github.com/liquidprompt/liquidprompt/commit/fb123f4c5eee08c265eb91cc5a4d3de7e9c6c75d\n[fdbd7ca]: https://github.com/liquidprompt/liquidprompt/commit/fdbd7ca545a2847fb3e862a6088740aa2a06c799\n[fe9919f]: https://github.com/liquidprompt/liquidprompt/commit/fe9919f5e7dc01ba59cc85a128fea94e5b2163c4\n[fefbe01]: https://github.com/liquidprompt/liquidprompt/commit/fefbe01d9830a9033bdb008c454c0d0590548638\n[ff44057]: https://github.com/liquidprompt/liquidprompt/commit/ff44057280fa0ce8a559999fc7063c832a31abac\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.8349609375,
          "content": "# Contributing to Liquid Prompt\n\n### I don't want to read this whole thing, I just have a question!!!\n\nPlease don't file an issue to ask a question. You'll get faster results by\nusing the resources below.\n\n## Did you find a bug?\n\n* **Check the [FAQs](https://github.com/liquidprompt/liquidprompt/wiki/FAQ)**. We\n  try to keep it updated with the latest hot questions.\n\n* **Ensure the bug was not already reported** by searching on GitHub under\n  [Issues](https://github.com/liquidprompt/liquidprompt/issues). If there is an open\n  issue that matches your problem, you can add a comment to the issue if you\n  have something new or helpful to add. If your comment would be \":+1:\",\n  please add that as a reaction on the issue instead.\n\n* **Ensure you can reproduce the issue on the latest version**. Not only the\n  latest released version, but the latest commit on the `master` branch. While\n  it might not be the version you are using right now, if the bug doesn't exist\n  on the `master` branch, we have already fixed it.\n\n* If you're unable to find an open issue addressing the problem, [open a new\n  one](https://github.com/liquidprompt/liquidprompt/issues/new/choose). Be sure to\n  include a **title and clear description**, as much relevant information as\n  possible, such as shell version, and a **code sample** or a **test case**\n  demonstrating the expected behavior that is not occurring. If we can't\n  reproduce the bug, we can't fix it, so make sure to include as much\n  information as possible.\n\n## Enhancement / Feature request\n\nSame as with bugs, **check the [FAQs](https://github.com/liquidprompt/liquidprompt/wiki/FAQ)\nand open [Issues](https://github.com/liquidprompt/liquidprompt/issues)** so you don't\nduplicate a feature request.\n\n[Open a new Issue](https://github.com/liquidprompt/liquidprompt/issues/new/choose),\nand add as much detail as you can. Make sure to at least explain:\n\n1. **Why** you want this feature. How will it be useful to users?\n2. **What** tools it will interact with (ex: `git`). Provide links.\n3. **An example** of what it would look like in the prompt.\n\nThe more details you can give, the more likely someone will be inspired to work\non it.\n\n## Contributing a patch\n\n### Your first contribution / what can I help with?\nIf you just want to help, but don't have a specific issue in mind, you can\nlook at the [help wanted](https://github.com/liquidprompt/liquidprompt/labels/help%20wanted)\ntagged issues.\n\n### Code style and standards\n[Google's shell style guide](https://google.github.io/styleguide/shellguide.html)\nis our style guide, with the following modifications:\n\n* 4 spaces indentation\n* Don't always prefer `${var}` over `$var` (see standards)\n* Use `typeset`, not `local` or `declare` (see standards)\n\nSee our [shell standards wiki page](https://github.com/liquidprompt/liquidprompt/wiki/Shell-standards)\nfor our standards on shell language.\n\n### How do I make a pull request??\n\n    $ git clone -o upstream git://github.com/liquidprompt/liquidprompt.git\n    $ cd liquidprompt\n\n    # Run Liquid Prompt and check that your issue is still on that branch\n    $ source liquidprompt\n\n    # Prepare a fix (include the issue number in the branch name if an issue\n    # already exists)\n    $ git checkout -b bugfix/my-fix\n    # Prepare a new feature\n    $ git checkout -b feature/my-feature\n\n    # Hack, commit, hack, amend commit...\n\n    # Fork the project on GitHub (if you haven't yet)\n\n    # Add the remote target for pushes\n    $ git remote add github git@github.com:$GITHUB_USER/liquidprompt.git\n\n    # Check that your local repo is up to date\n    $ git fetch upstream\n    # Rebase your work on the latest state of `master`\n    $ git rebase upstream/master\n\n    # Push your commits\n    $ git push github fix/my-fix\n    $ git push github feature/my-feature\n\n    # Create the pull request on GitHub. Check that Github chose the `master`\n    # branch as the starting point for your branch.\n\n### Technical checklist for adding a new prompt section\n\nHere is a list of technical details that will be checked when making any\ncode change:\n\n- code follows our [shell standards](https://github.com/liquidprompt/liquidprompt/wiki/Shell-standards):\n    - [ ] correct use of `IFS`\n    - [ ] careful quoting\n    - [ ] cautious array access\n    - [ ] portable array indexing with `_LP_FIRST_INDEX`\n    - [ ] functions/variable naming conventions\n    - [ ] functions have local variables\n    - [ ] data functions have optimization guards (early exits)\n    - [ ] subshells are avoided as much as possible\n- tests and checks have been added, ran, and their warnings fixed:\n    - [ ] unit tests have been updated (see `tests/test_*.sh` files)\n    - [ ] ran `tests.sh`\n    - [ ] ran `shellcheck.sh` (requires [shellcheck](https://github.com/koalaman/shellcheck#user-content-installing)).\n- documentation have been updated accordingly:\n    - [ ] functions and attributes are documented in alphabetical order\n    - [ ] tag `.. versionadded:: X.Y` or `.. versionchanged:: Y.Z`\n    - [ ] functions signatures have arguments, returned code, and set value(s)\n    - [ ] attributes have types and defaults\n    - [ ] ran `docs/docs-lint.sh` (requires Python 3 and `requirements.txt`\n          installed (`cd docs/; python3 -m venv venv; . venv/bin/activate; pip install -r requirements.txt`))\n\n\n### How do I make a good pull request?\n\n1. Check that your Git authorship settings are correct:\n\n        $ git config -l | grep ^user\\.\n\n2. All the commits in the pull request must be on the same topic. If instead\n   you propose fixes on different topics, use separate branches in your repo\n   and make a pull request for each.\n\n3. Good commit message:\n     - first line must be 50 chars max and is a summary of the commit. The\n       first character should be capitalized, no ending period. Use the\n       imperative mood (\"fix thing\", not \"fixes thing\" or \"fixing thing\" or\n       \"fixed thing\")\n     - second line must be empty\n     - following lines (72 chars max) should describe the what, why, and how\n       of your change. If your change is anything more than one line, this is\n       probably not optional. Think about coming back to this patch in 6\n       months: if you won't remember why you made this change, you need to\n       write it down.\n       Use references to GitHub issues number (ex: `#432`) if applicable\n    A good commit message isn't optional. If your commit message is bad (ex:\n    \"fix temp for thing\"), your PR will be rejected.\n   [See this post](https://chris.beams.io/posts/git-commit/) for even more\n   details on the topic.\n\n4. Use a good title for your pull request.\n\n5. Put details, web links, Github issue numbers, in the pull request body. Use\n   Markdown fully to format the content (see\n   [Markdown syntax](https://guides.github.com/features/mastering-markdown/)).\n   For example use triple backquotes for code blocks.\n   Note that if information is important enough to put in the PR description,\n   it is also important enough to put in the commit message.\n\nIf your branch ever ends up \"out of sync\" or \"conflicts\" with the `master`\nbranch of the main repo, never, ever, *merge* the `master` branch into your own\nbranch. Instead, always *rebase* your own work on top of the `master` branch.\n\n\n### Can I make a pull request without a separate issue for a bug/enhancement?\nYes, **but**, in that case, the pull request **must have a full description of\nthe bug or feature**. Just because you have fixed/implemented it already\ndoesn't mean you can skip the details. The reviewers of the pull request still\nneed to know all of the information you would normally put in the bug report or\nfeature request.\n\n### How my patch will be applied?\nBefore being applied, your pull request will be reviewed by the maintainer\nand also by other users. You can also help the project by reviewing others\npull requests.\n\nThe reviewer will almost always ask for some changes.\nIn that case, just push an additional commit implementing the requested changes,\nand then ask for a review update.\nAt the end, the reviewer may ask you to \"squash\" all review commits in a single one.\n\nIf your patch is accepted it will be applied either:\n- by \"merging\" your branch,\n- by cherry-picking your commit on top of the `master` branch. This makes the\n  history linear, and so easier to track.\n\nIn any case, your authorship will be preserved in the commit.\n\n### What if my patch is not applied?\nIf you don't even get a review, add a \"ping\" comment with increasing delay\nbetween pings: 1 week, 2 weeks, then every month. But I'm trying to do better\non this than what was happening before.\n\nIf a stable version is released while your pull request has still not been\nmerged on any working branch of the main repo, it would be helpful to ease\nthe maintainer's work by rebasing your branch on top of the latest `master`\nand push it again to your GitHub repo. Be careful (for example create a\nbranch or a tag before your rebase) because your may lose all your work in\nthat process.\n\n[@Rycieos](https://github.com/Rycieos), maintainer.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 7.6474609375,
          "content": "# Contributors\n\nKeeping this list in order of importance or size would be impossible, so it is\nin order of least recent to most recent contribution.\nWe thank all our contributors, no matter the size of their contribution.\n\nPlease do not open a new issue or pull request just for adding yourself to\nthis file. If you made a contribution and got missed, please add a comment\non the issue or pull request of your contribution, and we will add it.\n\nThanks again to everyone for all of the help and support!\n\n### Maintainers\n* @nojhan (Original author)\n* Olivier Mengué (@dolmen) (Former lead maintainer)\n* Mark Vander Stel (@Rycieos) (Current lead maintainer)\n\n### Code contributions\n* @nojhan\n* Yann 'Ze' Richard (@Zeuh)\n* Aurélien Requiem (@aureq)\n* François Schmidts (@jaesivsm)\n* Joris Dedieu (@rmdir)\n* Florian Le Frioux (@floweb)\n* Ludovic Rousseau (@LudovicRousseau)\n* Thomas Debesse <thomas.debesse@gmail.com>\n* @Poil\n* Michel Barret (@barmic)\n* Luc Didry (@ldidry)\n* Olivier Mengué (@dolmen)\n* Alex Prengère (@alexprengere)\n* Olivier Dupuis (@ojdupuis)\n* Frédéric Lepied (@flepied)\n* Christophe Drevet <christophe.drevet@cea.fr>\n* Joris Vaillant (@jorisv)\n* Étienne Deparis (@milouse)\n* Clément Mathieu (@cykl)\n* David Loureiro (@dloureiro)\n* Nicolas Lacourte (@nlacourte)\n* Jonas Bengtsson (@jonasb)\n* Stéphane Pajot <pajot.stephane@gmail.com>\n* Brad Beyenhof (@augmentedfourth)\n* Julien Pecqueur (@jpec)\n* Rolf Morel (@rolfmorel)\n* Jean-Sébastien Leroy (@jsleroy)\n* Joseph Bass (@jab416171)\n* Ying Li (@cyli)\n* Daniel Miranda (@danielkza)\n* Brendan Fahy (@f4hy)\n* Young King (@wayhome)\n* Dustin Knie (@nullpuppy)\n* @Cougar\n* Octavian Damiean (@mainerror)\n* Nicolas Pouillard (@np)\n* Olivier Le Thanh Duong (@olethanh)\n* Markus Dreseler (@mrks)\n* Kim Lidström (@dxtr)\n* Taahir Ahmed (@ahmedtd)\n* Ryan Wilson-Perkin (@ryanwilsonperkin)\n* George Macon (@gmacon)\n* Anthony Gelibert (@anthonygelibert)\n* @yannack\n* Felix Chern (@dryman)\n* Kyle P Davis (@KylePDavis)\n* Alexander Belyaev (@alexbel)\n* Cosmin L. Neagu (@clneagu)\n* Brett McBride (@brettmc)\n* Linus Wallgren (@ecksun)\n* Matthew Micene (@nzwulfin)\n* Panagiotis Kkolos (@pkkolos)\n* Chase Colman (@chase)\n* Wilson Maravilha (@wmv)\n* Vincent Lara (@l-vincent-l)\n* Bartosz Janda (@bartoszj)\n* Morgan Knicely (@morganizeit)\n* Austen Adler (@stonewareslord)\n* Jonathan Giddy (@jongiddy)\n* Jeremy Clement (@hexaJer)\n* Samuel Krieg (@SamK)\n* @hegedus\n* Erik Jacobs (@thoraxe)\n* Hagen Graf (@hcgraf)\n* Tener Hades (@clayboone)\n* Philipp Grogg (@gro-gg)\n* @Hotschke\n* Software Mechanic <softwaremechanic32@gmail.com>\n* Simon McVittie (@smcv)\n* Felix Schlitter (@felixSchl)\n* Mark Vander Stel (@Rycieos)\n* Philip Garrison (@pgarrison)\n* Matt Smith (@ncs-msmith)\n* @ste-fan\n* Peter van Dijk (@Habbie)\n* Nolan Leake (@nolanl)\n* Dmitry V. Drozdovich (@thrushcat)\n* Tristan Miller (@logological)\n* Markus Gebert (@mgeb)\n* Tore Anderson (@toreanderson)\n* Fabien MARTY (@thefab)\n* Alessio Garzi (@Ozzyboshi)\n* Mathieu MD (@mathieumd)\n* Romano Giannetti (@Rmano)\n* Paulo Cazarotto (@phcco)\n* Jürgen Weigert (@jnweiger)\n* Sven-Hendrik Haase (@svenstaro)\n* Sandro Jäckel (@SuperSandro2000)\n* David Pape (@zyzzyxdonta)\n* Aksel Sjögren (@akselsjogren)\n* Raina Otoni (@rotoni)\n* Munif Tanjim (@MunifTanjim)\n* Martin Schütte (@mschuett)\n* Sam Pearson (@sagepe)\n* Ken Crowell (@oeuftete)\n* Ian Smith (@ismith)\n* Emil Lerch (@elerch)\n* Michael Livshin (@cmm)\n* Slobodan Todorov (@todorowww)\n* Simon Chopin (@schopin-pro)\n* @Mice7R\n* Alan Hoyle (@alanhoyle)\n* David Caro (@Terseus)\n* Mark Korondi (@kmARC)\n* Thomas Guimbretiere (@ProfMobius)\n* Marco d'Itri (@rfc1036)\n* @go2null\n* Łukasz Stelmach (@steelman)\n* @slowpeek\n* TIAN Yuanhao (@tianyuanhao)\n* Michal Gawlik (@dex6)\n\n### Code cleanup\n* Aurélien Requiem (@aureq)\n* Olivier Mengué (@dolmen)\n* Roy Wellington Ⅳ (@thanatos)\n* Roland van Laar (@rvanlaar)\n* Nicolás Alvarez (@nicolas17)\n* Frédéric Mahé (@frederic-mahe)\n* Kevin Yap (@iKevinY)\n* Matt Kelly (@mattkelly)\n* Colin Lieberman (@colinlieberman)\n* Bryce Jasmer (@b-jazz)\n* Jonas Brømsø (@jonasbn)\n\n### Documentation changes / clarifications\n* Arturo Borrero Gonzalez (@aborrero)\n* Brad Beyenhof (@augmentedfourth)\n* John Hamelink (@johnhamelink)\n* @YouthfulIndiscretion\n* Imran Munshi (@imran27)\n* Dugan Chen (@duganchen)\n* Aleksey Tsalolikhin (@atsalolikhin-spokeo)\n* Otto Kekäläinen (@ottok)\n* Jonas Brømsø (@jonasbn)\n\n### Bug reports / Feature requests\n* @skanx\n* Yann 'Ze' Richard (@Zeuh)\n* Michael Grosser (@grosser)\n* Ludovic Rousseau (@LudovicRousseau)\n* Matthias Bussonnier (@Carreau)\n* Guillaume (@Gui13)\n* Olivier Mengué (@dolmen)\n* Alex Prengère (@alexprengere)\n* @nojhan\n* Lorenzo Leonini (@lleonini)\n* @razcampagne\n* Christophe Drevet-Droguet (@dr4Ke)\n* David Loureiro (@dloureiro)\n* Clément Mathieu (@cykl)\n* Guillaume Denry (@Guid75)\n* @gpapia\n* Luc Didry (@ldidry)\n* Mathieu Roche (@mathieuroche)\n* Julien Pecqueur (@jpec)\n* Loïc Guitaut (@Flink)\n* @madmanu\n* @quent57\n* @vicnet\n* Daniel Miranda (@danielkza)\n* Brendan Fahy (@f4hy)\n* Nicolas Pouillard (@np)\n* Richard Hartmann (@RichiH)\n* François Schmidts (@jaesivsm)\n* Anthony Carathimas (@acgreek)\n* Olivier Patry (@opatry)\n* @manitooo\n* Michael Cramer (@mikewebkist)\n* Octavian Damiean (@mainerror)\n* @Cougar\n* Brad Beyenhof (@augmentedfourth)\n* Florian Eitel (@nougad)\n* Kyle P Davis (@KylePDavis)\n* David Holm (@dholm)\n* Pat Ramsey (@patramsey)\n* Sébastien Sanoro (@dereckson)\n* Taahir Ahmed (@ahmedtd)\n* Emmett Butler (@emmett9001)\n* Zak B. Elep (@zakame)\n* André David (@adavidzh)\n* @N-Mi\n* @Cottser\n* José Alberto (@jalberto)\n* Guilherme Semente (@semente)\n* Brad Clements (@bkc)\n* Cosmin L. Neagu (@clneagu)\n* Brett McBride (@brettmc)\n* Andreas Böttger (@aboettger)\n* Chase Colman (@chase)\n* Stefan Wimmer (@wimstefan)\n* Oliver Jan Krylow (@bugabinga)\n* Chris Lasher (@gotgenes)\n* @cato-\n* Matt Fletcher (@MaffooBristol)\n* Bartosz Janda (@bartoszj)\n* Nicola Paolucci (@durdn)\n* Jeremy Clement (@hexaJer)\n* Brian May (@brianmay)\n* Arturo Borrero Gonzalez (@aborrero)\n* Toban Wiebe (@tobanw)\n* Daniel Serodio (@dserodio)\n* Peter VandeHaar (@pjvandehaar)\n* Dave Rigby (@daverigby)\n* Sebastian Bremicker (@sebrem)\n* Simon McVittie (@smcv)\n* Mark Vander Stel (@Rycieos)\n* Jon Garrison (@jpwgarrison)\n* Iain Hallam (@iainhallam)\n* Mathias Picker (@mathiasp)\n* Joey Liu (@liujoey)\n* Florian Pigorsch (@flopp)\n* Daniel Pinyol (@dpinol)\n* Alyssa Ross (@alyssais)\n* Gergo Szonyi (@gex)\n* Nolan Leake (@nolanl)\n* Éloi Rivard (@azmeuk)\n* Felix Eckhofer (@tribut)\n* Paul Lhussiez (@Depado)\n* Cyril Bouthors (@cyril-bouthors)\n* Felix Schlitter (@felixSchl)\n* Christoph Burschka (@cburschka)\n* @dreamcat4\n* Munif Tanjim (@MunifTanjim)\n* @ilovezfs\n* Aleksey Tsalolikhin (@atsaloli)\n* Micah Silverman (@dogeared)\n* Rohan Kapadia (@kapad)\n* Jan Gorecki (@jangorecki)\n* Otto Kekäläinen (@ottok)\n* Mike Simonson (@mikeSimonson)\n* Viorel-Cosmin Miron (@uhlhosting)\n* Dimitrie Hoekstra (@dimitrieh)\n* Hynek Vychodil (@pichi)\n* Ned Batchelder (@nedbat)\n* Gary Wolfman (@OldCrow)\n* @Orgams\n* Andrei Matei (@andreimatei)\n* Tiziano Santoro (@tiziano88)\n* Michael Louis Thaler (@mithaler)\n* Michael Große (@micgro42)\n* Niko Storni (@nikooo777)\n* Chris Weyl (@rsrchboy)\n* Federico Stra (@FedericoStra)\n* Roman (@hatifnatt)\n* Alan Hoyle (@alanhoyle)\n* Janne Himanka (@jhimanka)\n* Peter van Dijk (@Habbie)\n* Martin Blanchard (@t-chaik)\n* François GUÉRIN (@frague59)\n* Florian \"KopfKrieg\" (@KopfKrieg)\n* @tsangal\n* František Trebuňa (@gortibaldik)\n* Pablo Mora (@kiteloopdesign)\n* @ShrykeWindgrace\n* Zach Callear (@Magotchi)\n* Tom Hoover (@tomhoover)\n* Maxime U Garcia (@maxulysse)\n* Mark Korondi (@kmARC)\n* Riccardo Mollo (@rm1984)\n* @webbb82\n* Aurélien (@orel1)\n* Eugene Medvedev (@Mihara)\n* Christian Heusel (@christian-heusel)\n* Ross Patterson (@rpatterson)\n* Tomasz Kapias (@tkapias)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.6083984375,
          "content": "<h1 align=\"center\">\n    <img\n        width=\"500\"\n        src=\"https://raw.githubusercontent.com/liquidprompt/liquidprompt/master/docs/liquidprompt_emblem.svg\"\n        alt=\"Liquid Prompt\"\n    />\n    <br/>\n    A useful adaptive prompt for Bash & Zsh\n</h1>\n\n<p align=\"center\">\n<em>Liquid Prompt</em> gives you a <strong>carefully designed prompt</strong> with useful information.\nIt shows you <em>what</em> you need <em>when</em> you need it.\nYou will notice what changes when it changes, saving time and frustration.\nYou can even use it with your favorite shell – Bash or zsh.\n</p>\n\n<h2 align=\"center\">\n        <a href=\"https://liquidprompt.readthedocs.io\">Website</a>\n        &bull;\n        <a href=\"https://liquidprompt.readthedocs.io/en/stable/overview.html\">Overview</a>\n        &bull;\n        <a href=\"https://liquidprompt.readthedocs.io/en/stable/install.html\">Install</a>\n<h2>\n\n\n## Examples\n\nBelow are screenshots of typical states that you would see in everyday use.\n\nUsing the default theme:\n\n![Screenshot](https://raw.githubusercontent.com/liquidprompt/liquidprompt/master/docs/theme/default-med.png)\n\nUsing the Powerline theme:\n\n![Screenshot](https://raw.githubusercontent.com/liquidprompt/liquidprompt/master/docs/theme/included/powerline-med.png)\n\nOf course, Liquid Prompt may display much more information, depending on the status of your system.\n\n\n## Why Liquidprompt?\n\nThere are many prompts configurations out there, but here is what makes Liquid Prompt stand out:\n\n- **UX Design**: The Liquid Prompt was very carefully design from the beginning, to allow for the best user experience.\n  That is, it displays *meaningful* information with *minimal visual clutter* and *maximum readability*.\n  While most of the other prompts are focused on aligning as much colored \"segments\" as possible on top of each others to look fancy,\n  Liquid Prompt focus on what really matters.\n- **Ease of use**: The Liquid Prompt is written in (*heavily optimized*) portable Shell, and its installation is as easy as copying files.\n  It also provides pre-defined themes, enabled by a simple command in your shell configuration.\n  Configuration is as simple as editing text file with key/value pairs. No complex format to learn.\n- **Shell features first**: The Liquid Prompt helps you being aware of all the powerfull features a modern shell can provide.\n  While most of the other prompts focus on covering a lot of (boring) software version tags,\n  Liquid Prompt shows you the features that are actually useful while you actually use the shell.\n- **Configurability**: All aspects of Liquid Prompt are configurable, down to the core.\n\nTo see what that entails, see the [latest features overview](https://liquidprompt.readthedocs.io/en/latest/overview.html)\n(which also presents a comparison with other prompt systems).\n\nYou may also take a closer look at this screenshot of a session showing various features, in the default theme:\n\n![Screenshot](https://raw.github.com/liquidprompt/liquidprompt/master/demo.png)\n\n\n## Documentation\n\n![Tests](https://github.com/liquidprompt/liquidprompt/workflows/tests/badge.svg)\n[![Documentation Status](https://readthedocs.org/projects/liquidprompt/badge/?version=stable)](https://liquidprompt.readthedocs.io/)\n\nSee the [Liquidprompt documentation](https://liquidprompt.readthedocs.io/) for\ndetails on installing and configuring Liquidprompt.\n\n\n## License\n\nLiquid Prompt is distributed under the [GNU Affero General Public License\nversion 3](LICENSE).\n\n\n## Authors\n\nCurrent Maintainer: [Rycieos](https://github.com/Rycieos).\nOther main authors: [nojhan](https://github.com/nojhan) and [dolmen](https://github.com/dolmen).\n\nAnd many [contributors](CONTRIBUTORS.md)!\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo.png",
          "type": "blob",
          "size": 128.5732421875,
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.bashrc",
          "type": "blob",
          "size": 0.6513671875,
          "content": "\n# If you want to use Liquid Prompt without bothering about its configuration,\n# just run the following command:\n# cp example.bashrc ~/.bashrc\n\n# The following is a minimalistic Bash config file\n\n# Use the system config if it exists\nif [ -f /etc/bashrc ]; then\n    . /etc/bashrc        # --> Read /etc/bashrc, if present.\nelif [ -f /etc/bash.bashrc ]; then\n    . /etc/bash.bashrc   # --> Read /etc/bash.bashrc, if present.\nfi\n\n# The following lines are only for interactive shells\n[[ $- = *i* ]] || return\n\n# Use Bash completion, if installed\nif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\nfi\n\n# Use Liquid Prompt\nsource ~/liquidprompt/liquidprompt\n\n"
        },
        {
          "name": "liquidprompt",
          "type": "blob",
          "size": 173.830078125,
          "content": "################################################################################\n# LIQUID PROMPT\n# An intelligent and non-intrusive prompt for Bash and zsh\n################################################################################\n\n# shellcheck shell=bash\n\n_LP_VERSION=(2 2 1)\n\n# Licensed under the AGPL version 3\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero General Public License as\n# published by the Free Software Foundation, either version 3 of the\n# License, or (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# See the README.md file for a summary of features.\n\n__LP_PUBLIC_FUNCTIONS=(\n    \"lp_activate\"\n    \"lp_help\"\n    \"lp_title\"\n    \"lp_theme\"\n    \"prompt_on\"\n    \"prompt_off\"\n    \"prompt_OFF\"\n    \"prompt_tag\"\n    \"lp_terminal_format\"\n)\n\nlp_help() {\n    local usage\n    local -a description positional options\n    positional=()\n    options=()\n\n    case \"${1-}\" in\n        \"\"|\"lp_help\"|\"-h\"|\"--help\")\n            usage=\". liquidprompt\n       lp_help [help_section]\"\n            description=(\n                \"To use Liquid Prompt every time you start a shell, add the following lines\"\n                \"to your .bashrc (if you use Bash) or .zshrc (if you use Zsh):\"\n                \"  [[ \\$- = *i* ]] && source ~/liquidprompt/liquidprompt\" \" \"\n                \"Liquid Prompt looks for a config file in these locations, in order:\"\n                \"  ~/.liquidpromptrc\"\n                \"  \\$XDG_CONFIG_HOME/liquidpromptrc\"\n                \"  \\${XDG_CONFIG_DIRS[@]}/liquidpromptrc\"\n                \"  /etc/liquidpromptrc\" \"\"\n                \"See the online documentation for more details:\"\n                \"https://liquidprompt.readthedocs.io/\"\n            )\n            positional=(\n                \"help_section\" \"name of function to print help for. Options are:\"\n                \"\" \"${__LP_PUBLIC_FUNCTIONS[*]}\"\n            )\n            ;;\n        \"lp_activate\")\n            usage=\"$1\"\n            description=(\n                \"Reload the user config and scan the environment again for programs needed\"\n                \"for specific features. prompt_on() is then called to enable the prompt.\"\n            )\n            ;;\n        \"lp_title\")\n            usage=\"$1 [title_string]\"\n            description=(\n                \"Set the terminal title.\"\n                \"If no string is passed, the custom title in unset.\"\n            )\n            positional=(\n                \"title_string\" \"string to set as the title.\"\n            )\n            options=(\n                \"--\" \"end matching of options\"\n            )\n            ;;\n        \"lp_theme\")\n            usage=\"$1 [--list|theme_id]\"\n            description=(\n                \"Switch to a previously loaded theme.\"\n                \"The theme must be sourced into the current shell before it can be activated.\"\n            )\n            positional=(\n                \"theme_id\" \"name of the loaded theme to activate\"\n            )\n            options=(\n                \"--list\" \"list the names of all loaded themes\"\n            )\n            ;;\n        \"lp_terminal_format\")\n            usage=\"$1 foreground_color [background_color [bold [underline [fallback_foreground_color [fallback_background_color]]]]]\"\n            description=(\n                \"Generate a terminal format string.\"\n                \"The returned string is stored in \\$lp_terminal_format\"\n                \"This function is very complicated, please see the online documentation for details:\"\n                \"https://liquidprompt.readthedocs.io/en/stable/functions/public.html#lp_terminal_format\"\n            )\n            ;;\n        \"prompt_on\")\n            usage=\"$1\"\n            description=(\n                \"Enable the prompt generation and setting.\"\n            )\n            ;;\n        \"prompt_off\")\n            usage=\"$1\"\n            description=(\n                \"Disable the prompt generation and setting, and restore the old \\$PS1, \\$PROMPT_COMMAND,\"\n                \"and prompt theme.\"\n            )\n            ;;\n        \"prompt_OFF\")\n            usage=\"$1\"\n            description=(\n                \"Disable the prompt generation and setting, and set \\$PS1 to \\\"\\$ \\\" on Bash, \\\"% \\\" on Zsh.\"\n            )\n            ;;\n        \"prompt_tag\")\n            usage=\"$1 [prefix_string]\"\n            description=(\n                \"Sets a prefix that will be displayed before every prompt. Postpends a\"\n                \"space to the input string. To unset the prefix, call prompt_tag() with\"\n                \"no arguments.\"\n            )\n            positional=(\n                \"prefix_string\" \"string to tag the prompt with\"\n            )\n            options=(\n                \"--\" \"end matching of options\"\n            )\n            ;;\n        *)\n            printf 'Error: unknown command \"%s\"\\n' \"$1\"\n            return 1\n    esac\n\n    options=(\"-h, --help\" \"show this help message and exit\" \"${options[@]}\")\n\n    printf 'Usage: %s\\n\\n' \"$usage\"\n    printf '%s\\n' \"${description[@]}\"\n\n    # Align all the right side fields.\n    if [[ \"${#positional[@]}\" != 0 ]]; then\n        printf '\\nPositional arguments:\\n'\n        printf ' %-14s  %s\\n' \"${positional[@]}\"\n    fi\n    printf '\\nOptions:\\n'\n    printf ' %-14s  %s\\n' \"${options[@]}\"\n}\n\n__lp_help_bash_complete() {\n    COMPREPLY=()\n    local func partial\n    partial=${2-}\n\n    for func in \"${__LP_PUBLIC_FUNCTIONS[@]}\"; do\n        [[ -n $partial && $func != \"$partial\"* ]] && continue\n        COMPREPLY+=(\"$func\")\n    done\n}\n\n__lp_help_zsh_complete() {\n    _describe 'theme' __LP_PUBLIC_FUNCTIONS\n}\n\n# Exit if script is not sourced.\n__lp_error_exec() {\n    printf 'liquidprompt: must be sourced, not executed.\\n\\n' >&2\n    lp_help\n    exit 1\n}\n\nif [ -n \"${ZSH_VERSION-}\" ]; then\n   [[ $ZSH_EVAL_CONTEXT =~ :file$ ]] || __lp_error_exec\nelse\n   (return 0 2>/dev/null) || __lp_error_exec\nfi\n\n# Issue #161: do not load if not an interactive shell\n# Do not exit if '--no-activate' flag was passed, as it overrides this check\n# shellcheck disable=SC2268\n[ \"x${-##*i}\" = \"x$-\" ] || [ -z \"${TERM-}\" ] || [ \"x${TERM-}\" = xdumb ] || [ \"x${TERM-}\" = xunknown ] && [ \"x${1-}\" != \"x--no-activate\" ] && return\n\nif test -n \"${BASH_VERSION-}\"; then\n    # Check for recent enough version of bash.\n    if (( ${BASH_VERSINFO[0]:-0} < 3 || ( ${BASH_VERSINFO[0]:-0} == 3 && ${BASH_VERSINFO[1]:-0} < 2 ) )); then\n        echo \"liquidprompt: Bash version $BASH_VERSION not supported\" >&2\n        return\n    fi\n\n    _LP_SHELL_bash=1\n    _LP_SHELL_zsh=0\n    _LP_OPEN_ESC=\"\\[\"\n    _LP_CLOSE_ESC=\"\\]\"\n\n    _LP_MARK_SYMBOL='$'\n\n    _LP_FIRST_INDEX=0\n    _LP_PERCENT='%'    # must be escaped on zsh\n    # shellcheck disable=SC1003\n    _LP_BACKSLASH='\\\\' # must be escaped on bash\n\n    # Escape the given strings\n    # Must be used for all strings injected in PS1 that may comes from remote sources,\n    # like $PWD, VCS branch names...\n    __lp_escape() {\n        ret=\"${1//\\\\/\\\\\\\\}\"\n        if shopt -q promptvars ; then\n            ret=\"${ret//\\$/\\\\\\$}\"\n            ret=\"${ret//\\`/\\\\\\`}\"\n        fi\n    }\n\n    __lp_strip_escapes() {\n        ret=\"$1\"\n        while [[ \"$ret\" == *\"$_LP_OPEN_ESC\"* ]]; do\n            ret=\"${ret%%\"$_LP_OPEN_ESC\"*}${ret#*\"$_LP_CLOSE_ESC\"}\"\n        done\n\n        ret=\"${ret//\\\\\\\\/\\\\}\"\n        if shopt -q promptvars ; then\n            ret=\"${ret//\\\\\\$/\\$}\"\n            ret=\"${ret//\\\\\\`/\\`}\"\n        fi\n    }\nelif test -n \"${ZSH_VERSION-}\" ; then\n    # Check for recent enough version of zsh.\n    if (( ${ZSH_VERSION:0:1} < 5 )); then\n        echo \"liquidprompt: Zsh version $ZSH_VERSION not supported\" >&2\n        return\n    fi\n\n    _LP_SHELL_bash=0\n    _LP_SHELL_zsh=1\n    _LP_OPEN_ESC=\"%{\"\n    _LP_CLOSE_ESC=\"%}\"\n\n    _LP_MARK_SYMBOL='%%'\n\n    if [[ -o ksh_arrays ]]; then\n      _LP_FIRST_INDEX=0\n    else\n      _LP_FIRST_INDEX=1\n    fi\n    _LP_PERCENT='%%'\n    # shellcheck disable=SC1003\n    _LP_BACKSLASH='\\'\n\n    __lp_escape() {\n        ret=\"${1//\\\\/\\\\\\\\}\"\n        ret=\"${ret//\\%/%%}\"\n        if [[ -o promptbang ]]; then\n            ret=\"${ret//!/!!}\"\n        fi\n        if [[ -o promptsubst ]]; then\n            ret=\"${ret//\\$/\\\\\\$}\"\n            ret=\"${ret//\\`/\\\\\\`}\"\n        fi\n    }\n\n    __lp_strip_escapes() {\n        # shellcheck disable=SC2296\n        ret=\"${(S)1//\"${_LP_OPEN_ESC}\"*\"${_LP_CLOSE_ESC}\"}\"\n        ret=\"${ret//\\\\\\\\/\\\\}\"\n        ret=\"${ret//\\%\\%/%}\"\n        if [[ -o promptbang ]]; then\n            ret=\"${ret//!!/!}\"\n        fi\n        if [[ -o promptsubst ]]; then\n            ret=\"${ret//\\\\\\$/\\$}\"\n            ret=\"${ret//\\\\\\`/\\`}\"\n        fi\n    }\nelse\n    echo \"liquidprompt: shell not supported\" >&2\n    return\nfi\n\n__lp_use_bash_preexec() {\n    # If https://github.com/rcaloras/bash-preexec is present, we can (and should, because it interferes with\n    # PROMPT_COMMAND and DEBUG) use the zsh-hook like behavior it provides.\n    [[ \"${__bp_imported-}\" == \"defined\" ]]\n}\n\n__lp_array_contains() {\n    local target=\"$1\"\n    shift\n\n    for element; do\n        if [[ $element == \"$target\" ]]; then\n            return 0\n        fi\n    done\n    return 1\n}\n\n###############\n# OS specific #\n###############\n\n# LP_OS detection, default to Linux\ncase \"$(uname)\" in\n    FreeBSD)   LP_OS=FreeBSD ;;\n    DragonFly) LP_OS=FreeBSD ;;\n    OpenBSD)   LP_OS=OpenBSD ;;\n    Darwin)    LP_OS=Darwin  ;;\n    SunOS)     LP_OS=SunOS   ;;\n    *)         LP_OS=Linux   ;;\nesac\n\n_lp_os() {\n    # Fine-grained OS detection: arch, family, kernel, distrib, version.\n    (( LP_ENABLE_OS )) || return 2\n\n    # Output variables:\n    lp_os_arch=\n    lp_os_family=\n    lp_os_kernel=\n    lp_os_distrib=\n    lp_os_version=\n\n    local uname_sm kernel\n\n    # Get the kernel (and possibly the arch).\n    if (( LP_ENABLE_OS_ARCH )); then\n        # We can get the arch along, with a single subshell.\n        uname_sm=\"$(uname -s -m)\"\n        IFS=' ' read -r kernel lp_os_arch <<<\"$uname_sm\"\n    else # In any case, we need to know the kernel.\n        kernel=\"$(uname -s)\"\n    fi\n\n    if (( LP_ENABLE_OS_KERNEL\n       || LP_ENABLE_OS_FAMILY\n       || LP_ENABLE_OS_DISTRIB\n       || LP_ENABLE_OS_VERSION )); then\n\n        case \"$kernel\" in\n            FreeBSD)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=BSD; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=FreeBSD; fi\n                ;;\n            DragonFly)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=BSD; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=DragonFly; fi\n                ;;\n            OpenBSD)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=BSD; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=OpenBSD; fi\n                ;;\n            Darwin)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=BSD; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=Darwin; fi\n                ;;\n            SunOS)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=UNIX; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=SunOS; fi\n                ;;\n            CYGWIN*)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=Windows; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=Cygwin; fi\n                ;;\n            MSYS*)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=Windows; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=MSYS; fi\n                ;;\n            MINGW*)\n                if (( LP_ENABLE_OS_FAMILY )); then lp_os_family=Windows; fi\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=MinGW; fi\n                ;;\n            Linux)\n                if (( LP_ENABLE_OS_KERNEL )); then lp_os_kernel=Linux; fi\n                if (( LP_ENABLE_OS_FAMILY )); then\n                    if [[ \"$kernel\" == \"Linux\" ]]; then\n                        osfamily=\"$(uname -o)\"\n                        if [[ \"$osfamily\" == \"Android\" ]]; then\n                            lp_os_family=Android\n                            return\n                        fi # Android\n                    fi # Linux\n                    lp_os_family=GNU\n                fi\n                # TODO parse HOME_URL and add an hyperlink.\n                if (( LP_ENABLE_OS_DISTRIB && LP_ENABLE_OS_VERSION )); then\n                    if _lp_grep_fields \"/etc/os-release\" \"=\" \"ID\" \"VERSION_CODENAME\"; then\n                        lp_os_distrib=${lp_grep_fields[_LP_FIRST_INDEX+0]-}\n                        lp_os_version=${lp_grep_fields[_LP_FIRST_INDEX+1]-}\n                    fi\n                elif (( LP_ENABLE_OS_DISTRIB )); then\n                    if _lp_grep_fields \"/etc/os-release\" \"=\" \"ID\"; then\n                        lp_os_distrib=${lp_grep_fields[_LP_FIRST_INDEX+0]-}\n                    fi\n                elif (( LP_ENABLE_OS_VERSION )); then\n                    if _lp_grep_fields \"/etc/os-release\" \"=\" \"VERSION_CODENAME\"; then\n                        lp_os_version=${lp_grep_fields[_LP_FIRST_INDEX+0]-}\n                    fi\n                fi\n                ;;\n        esac\n    fi\n\n    if [[ -z \"${lp_os_arch}${lp_os_family}${lp_os_kernel}${lp_os_distrib}${lp_os_version}\" ]]; then\n        return 1\n    fi\n}\n\n_lp_os_color() {\n    # Substitute lp_os_* names with icons/colored strings (from LP_MARK_OS),\n    # or hash colored versions.\n    # Join everything with LP_MARK_OS_SEP.\n\n    lp_os_color=\n    local lp_os_arch lp_os_family lp_os_kernel lp_os_distrib lp_os_version\n\n    _lp_os || return \"$?\"\n\n    local lp_substitute lp_hash_color lp_join\n    local active\n    active=()\n    for value in \\\n        \"$lp_os_arch\" \"$lp_os_family\" \"$lp_os_kernel\" \"$lp_os_distrib\" \"$lp_os_version\"; do\n        if [[ -n \"$value\" ]]; then\n            if _lp_substitute \"$value\" \"${LP_MARK_OS[@]}\"; then\n                active+=(\"$lp_substitute\")\n            elif _lp_hash_color \"$value\"; then\n                active+=(\"$lp_hash_color\")\n            else\n                active+=(\"$value\")\n            fi\n        fi\n    done\n\n    if [[ ${#active} -gt 0 ]]; then\n        _lp_join \"$LP_MARK_OS_SEP\" \"${active[@]}\"\n        lp_os_color=\"$lp_join\"\n    else\n        return 1\n    fi\n}\n\n#################\n# CONFIGURATION #\n#################\n\n# Return true if the current Liquid Prompt version is greater than or equal to the specified version.\n# Return 1 if minor or less version difference, 2 if major difference.\n_lp_version_greatereq() {  # major, minor, [patch], [string], [number]\n    local major=\"$1\" minor=\"$2\" patch=\"${3-}\" string=\"${4-}\" number=\"${5-}\"\n    if (( major > _LP_VERSION[_LP_FIRST_INDEX+0] )); then\n        return 2\n    elif (( major == _LP_VERSION[_LP_FIRST_INDEX+0] )); then\n        if (( minor > _LP_VERSION[_LP_FIRST_INDEX+1] )); then\n            return 1\n        elif (( minor == _LP_VERSION[_LP_FIRST_INDEX+1] )) && [[ -n $patch ]]; then\n            if (( patch > _LP_VERSION[_LP_FIRST_INDEX+2] )); then\n                return 1\n            elif (( patch == _LP_VERSION[_LP_FIRST_INDEX+2] )) && [[ -n $string && -n $number ]]; then\n                if [[ $string == \"${_LP_VERSION[_LP_FIRST_INDEX+3]-}\" ]]; then\n                    if (( number > _LP_VERSION[_LP_FIRST_INDEX+4] )); then\n                        return 1\n                    fi\n                elif [[ ${_LP_VERSION[_LP_FIRST_INDEX+3]-} == \"alpha\" || \\\n                        ( ${_LP_VERSION[_LP_FIRST_INDEX+3]-} == \"beta\" && \\\n                        $string == \"rc\" ) ]]; then\n                    return 1\n                fi\n            fi\n        fi\n    fi\n\n    return 0\n}\n\n# Load the user configuration and setup defaults.\n# shellcheck disable=SC2034\n__lp_source_config() {\n\n    local lp_terminal_format af_color='' ab_color=''\n\n    # Colors: variables are local so they will have a value only\n    # during config loading and will not conflict with other values\n    # with the same names defined by the user outside the config.\n    local BOLD=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${_LP_CLOSE_ESC}\"\n\n    # Foreground colors\n    __lp_foreground_color 0\n    local BLACK=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_GRAY=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 1\n    local RED=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_RED=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n    __lp_foreground_color 0\n    __lp_background_color 1\n    local WARN_RED=\"${_LP_OPEN_ESC}${af_color}${ab_color}${_LP_CLOSE_ESC}\"\n    __lp_foreground_color 7\n    local CRIT_RED=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${ab_color}${_LP_CLOSE_ESC}\"\n    __lp_foreground_color 3\n    local DANGER_RED=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${ab_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 2\n    local GREEN=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_GREEN=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 3\n    local YELLOW=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_YELLOW=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 4\n    local BLUE=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_BLUE=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 5\n    local PURPLE=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local MAGENTA=\"${PURPLE}\"\n    local PINK=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_PURPLE=\"${PINK}\"\n    local BOLD_MAGENTA=\"${PINK}\"\n\n    __lp_foreground_color 6\n    local CYAN=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_CYAN=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    __lp_foreground_color 7\n    local WHITE=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n    local BOLD_WHITE=\"${_LP_OPEN_ESC}${_LP_TI_BOLD-}${af_color}${_LP_CLOSE_ESC}\"\n\n    # NO_COL is special: it will be used at runtime, not just during config loading\n    NO_COL=\"${_LP_OPEN_ESC}${_LP_TI_RESET-}${_LP_CLOSE_ESC}\"\n\n    # compute the hash of the hostname and get the corresponding number in\n    # [1-6] (red,green,yellow,blue,purple or cyan)\n    local lp_hostname_hash\n    __lp_hostname_hash\n    __lp_foreground_color \"$(( 1 + lp_hostname_hash % 6 ))\"\n    LP_COLOR_HOST_HASH=\"${_LP_OPEN_ESC}${af_color}${_LP_CLOSE_ESC}\"\n\n    # Default values (globals)\n    LP_TIME_FORMAT=${LP_TIME_FORMAT:-\"%H:%M:%S\"}\n    LP_BATTERY_THRESHOLD=${LP_BATTERY_THRESHOLD:-75}\n    LP_DISK_THRESHOLD=${LP_DISK_THRESHOLD:-102400} # 100 MiB in KiB\n    LP_DISK_THRESHOLD_PERC=${LP_DISK_THRESHOLD_PERC:-10} # 10% or less\n    LP_DISK_PRECISION=${LP_DISK_PRECISION:-2}\n    LP_RAM_THRESHOLD=${LP_RAM_THRESHOLD:-102400} # 100 MiB in KiB\n    LP_RAM_THRESHOLD_PERC=${LP_RAM_THRESHOLD_PERC:-10} # 10% or less\n    LP_RAM_PRECISION=${LP_RAM_PRECISION:-2}\n    LP_LOAD_THRESHOLD=${LP_LOAD_THRESHOLD:-0.60}\n    LP_LOAD_CAP=${LP_LOAD_CAP:-2.0}\n    LP_TEMP_THRESHOLD=${LP_TEMP_THRESHOLD:-60}\n    LP_WIFI_STRENGTH_THRESHOLD=${LP_WIFI_STRENGTH_THRESHOLD:-40}\n    LP_RUNTIME_THRESHOLD=${LP_RUNTIME_THRESHOLD:-2}\n    LP_RUNTIME_BELL_THRESHOLD=${LP_RUNTIME_BELL_THRESHOLD:-10}\n    LP_PATH_LENGTH=${LP_PATH_LENGTH:-35}\n    LP_PATH_KEEP=${LP_PATH_KEEP:-2}\n    LP_PATH_CHARACTER_KEEP=${LP_PATH_CHARACTER_KEEP:-3}\n    LP_PATH_METHOD=${LP_PATH_METHOD:-truncate_chars_from_path_left}\n    LP_PATH_VCS_ROOT=${LP_PATH_VCS_ROOT:-1}\n    LP_HOSTNAME_ALWAYS=${LP_HOSTNAME_ALWAYS:-0}\n    LP_HOSTNAME_METHOD=${LP_HOSTNAME_METHOD:-short}\n    LP_USER_ALWAYS=${LP_USER_ALWAYS:-1}\n    LP_ALWAYS_DISPLAY_VALUES=${LP_ALWAYS_DISPLAY_VALUES:-1}\n    LP_DISPLAY_VALUES_AS_PERCENTS=${LP_DISPLAY_VALUES_AS_PERCENTS:-0}\n    LP_PS1=${LP_PS1:-\"\"}\n    LP_PS1_PREFIX=${LP_PS1_PREFIX:-\"\"}\n    LP_PS1_POSTFIX=${LP_PS1_POSTFIX:-\"\"}\n    LP_DELIMITER_KUBECONTEXT_SUFFIX=${LP_DELIMITER_KUBECONTEXT_SUFFIX:-\"\"}\n    LP_DELIMITER_KUBECONTEXT_PREFIX=${LP_DELIMITER_KUBECONTEXT_PREFIX:-\"\"}\n    LP_ENV_VARS=( ${LP_ENV_VARS[@]+\"${LP_ENV_VARS[@]}\"} )\n\n    LP_ENABLE_DISPLAY=${LP_ENABLE_DISPLAY:-1}\n    LP_ENABLE_CHROOT=${LP_ENABLE_CHROOT:-1}\n    LP_ENABLE_MULTIPLEXER=${LP_ENABLE_MULTIPLEXER:-1}\n    LP_ENABLE_PERM=${LP_ENABLE_PERM:-1}\n    LP_ENABLE_SHORTEN_PATH=${LP_ENABLE_SHORTEN_PATH:-1}\n    LP_ENABLE_PROXY=${LP_ENABLE_PROXY:-1}\n    LP_ENABLE_ENV_VARS=${LP_ENABLE_ENV_VARS:-1}\n    LP_ENABLE_TEMP=${LP_ENABLE_TEMP:-1}\n    LP_ENABLE_JOBS=${LP_ENABLE_JOBS:-1}\n    LP_ENABLE_DETACHED_SESSIONS=${LP_ENABLE_DETACHED_SESSIONS:-1}\n    LP_ENABLE_LOAD=${LP_ENABLE_LOAD:-1}\n    LP_ENABLE_BATT=${LP_ENABLE_BATT:-1}\n    LP_ENABLE_RAM=${LP_ENABLE_RAM:-1}\n    LP_ENABLE_DISK=${LP_ENABLE_DISK:-0}\n    LP_ENABLE_GIT=${LP_ENABLE_GIT:-1}\n    LP_ENABLE_SVN=${LP_ENABLE_SVN:-1}\n    LP_ENABLE_FOSSIL=${LP_ENABLE_FOSSIL:-1}\n    LP_ENABLE_HG=${LP_ENABLE_HG:-1}\n    LP_HG_COMMAND=${LP_HG_COMMAND:-hg}\n    LP_ENABLE_BZR=${LP_ENABLE_BZR:-1}\n    LP_ENABLE_VCS_REMOTE=${LP_ENABLE_VCS_REMOTE:-0}\n    LP_ENABLE_TIME=${LP_ENABLE_TIME:-0}\n    LP_TIME_ANALOG=${LP_TIME_ANALOG:-0}\n    LP_ENABLE_RUNTIME=${LP_ENABLE_RUNTIME:-1}\n    LP_ENABLE_RUNTIME_BELL=${LP_ENABLE_RUNTIME_BELL:-0}\n    LP_ENABLE_VIRTUALENV=${LP_ENABLE_VIRTUALENV:-1}\n    LP_ENABLE_NODE_VENV=${LP_ENABLE_NODE_VENV:-0}\n    LP_ENABLE_RUBY_VENV=${LP_ENABLE_RUBY_VENV:-1}\n    LP_RUBY_RVM_PROMPT_OPTIONS=( ${LP_RUBY_RVM_PROMPT_OPTIONS[@]+\"${LP_RUBY_RVM_PROMPT_OPTIONS[@]}\"} )\n    [[ ${#LP_RUBY_RVM_PROMPT_OPTIONS[@]} == 0 ]] && LP_RUBY_RVM_PROMPT_OPTIONS=(i v g s)\n    LP_ENABLE_PERL_VENV=${LP_ENABLE_PERL_VENV:-1}\n    LP_ENABLE_TERRAFORM=${LP_ENABLE_TERRAFORM:-0}\n    LP_ENABLE_CONTAINER=${LP_ENABLE_CONTAINER:-0}\n    LP_ENABLE_SCLS=${LP_ENABLE_SCLS:-1}\n    LP_ENABLE_AWS_PROFILE=${LP_ENABLE_AWS_PROFILE:-1}\n    LP_ENABLE_MODULES=${LP_ENABLE_MODULES:-1}\n    LP_ENABLE_MODULES_VERSIONS=${LP_ENABLE_MODULES_VERSIONS:-1}\n    LP_ENABLE_MODULES_HASHCOLOR=${LP_ENABLE_MODULES_HASHCOLOR:-0}\n    LP_ENABLE_VCS_ROOT=${LP_ENABLE_VCS_ROOT:-0}\n    LP_ENABLE_TITLE=${LP_ENABLE_TITLE:-0}\n    LP_ENABLE_SCREEN_TITLE=${LP_ENABLE_SCREEN_TITLE:-0}\n    LP_ENABLE_TITLE_COMMAND=${LP_ENABLE_TITLE_COMMAND:-1}\n    LP_ENABLE_TMUX_TITLE_PANES=${LP_ENABLE_TMUX_TITLE_PANES:-1}\n    LP_ENABLE_SSH_COLORS=${LP_ENABLE_SSH_COLORS:-0}\n    LP_DISABLED_VCS_PATHS=( ${LP_DISABLED_VCS_PATHS[@]+\"${LP_DISABLED_VCS_PATHS[@]}\"} )\n    LP_TEMP_SYSFS_IGNORE_FILES=( ${LP_TEMP_SYSFS_IGNORE_FILES[@]+\"${LP_TEMP_SYSFS_IGNORE_FILES[@]}\"} )\n    LP_ENABLE_SUDO=${LP_ENABLE_SUDO:-0}\n    LP_ENABLE_COLOR=${LP_ENABLE_COLOR:-1}\n    LP_ENABLE_ERROR=${LP_ENABLE_ERROR:-1}\n    LP_ENABLE_ERROR_MEANING=${LP_ENABLE_ERROR_MEANING:-0}\n    LP_ENABLE_ERROR_MEANING_EXTENDED=${LP_ENABLE_ERROR_MEANING_EXTENDED:-0}\n    LP_ENABLE_DIRSTACK=${LP_ENABLE_DIRSTACK:-0}\n    LP_ENABLE_KUBECONTEXT=${LP_ENABLE_KUBECONTEXT:-0}\n    LP_ENABLE_KUBE_NAMESPACE=${LP_ENABLE_KUBE_NAMESPACE:-0}\n    LP_ENABLE_CMAKE=${LP_ENABLE_CMAKE:-0}\n    LP_ENABLE_SHLVL=${LP_ENABLE_SHLVL:-1}\n    LP_SHLVL_THRESHOLD=${LP_SHLVL_THRESHOLD:-2}\n    LP_ENABLE_WIFI_STRENGTH=${LP_ENABLE_WIFI_STRENGTH:-0}\n    LP_ENABLE_OS=${LP_ENABLE_OS:-0}\n    LP_ENABLE_OS_ARCH=${LP_ENABLE_OS_ARCH:-0}\n    LP_ENABLE_OS_FAMILY=${LP_ENABLE_OS_FAMILY:-0}\n    LP_ENABLE_OS_KERNEL=${LP_ENABLE_OS_KERNEL:-1}\n    LP_ENABLE_OS_DISTRIB=${LP_ENABLE_OS_DISTRIB:-0}\n    LP_ENABLE_OS_VERSION=${LP_ENABLE_OS_VERSION:-1}\n    LP_ENABLE_HYPERLINKS=${LP_ENABLE_HYPERLINKS:-0}\n    LP_ENABLE_PATH=${LP_ENABLE_PATH:-1}\n    LP_HIDE_EMPTY_ERROR=${LP_HIDE_EMPTY_ERROR:-1}\n\n    LP_MARK_DEFAULT=\"${LP_MARK_DEFAULT:-$_LP_MARK_SYMBOL}\"\n    LP_MARK_BATTERY=\"${LP_MARK_BATTERY:-\"⌁\"}\"\n    LP_MARK_ADAPTER=\"${LP_MARK_ADAPTER:-\"⏚\"}\"\n    LP_MARK_LOAD=\"${LP_MARK_LOAD:-\"⌂\"}\"\n    LP_MARK_TEMP=\"${LP_MARK_TEMP:-\"θ\"}\"\n    LP_MARK_PROXY=\"${LP_MARK_PROXY:-\"↥\"}\"\n    LP_MARK_ENV_VARS_OPEN=\"${LP_MARK_ENV_VARS_OPEN:-\"(\"}\"\n    LP_MARK_ENV_VARS_SEP=\"${LP_MARK_ENV_VARS_SEP:-\" \"}\"\n    LP_MARK_ENV_VARS_CLOSE=\"${LP_MARK_ENV_VARS_CLOSE:-\")\"}\"\n    LP_MARK_HG=\"${LP_MARK_HG:-\"☿\"}\"\n    LP_MARK_SVN=\"${LP_MARK_SVN:-\"‡\"}\"\n    LP_MARK_GIT=\"${LP_MARK_GIT:-\"±\"}\"\n    LP_MARK_VCSH=\"${LP_MARK_VCSH:-\"|\"}\"\n    LP_MARK_FOSSIL=\"${LP_MARK_FOSSIL:-\"⌘\"}\"\n    LP_MARK_BZR=\"${LP_MARK_BZR:-\"⚯\"}\"\n    LP_MARK_DISABLED=\"${LP_MARK_DISABLED:-\"⌀\"}\"\n    LP_MARK_UNTRACKED=\"${LP_MARK_UNTRACKED:-\"*\"}\"\n    LP_MARK_STASH=\"${LP_MARK_STASH:-\"+\"}\"\n    LP_MARK_VCS_REMOTE=\"${LP_MARK_VCS_REMOTE:-\"⭚\"}\"\n    LP_MARK_BRACKET_OPEN=\"${LP_MARK_BRACKET_OPEN:-\"[\"}\"\n    LP_MARK_BRACKET_CLOSE=\"${LP_MARK_BRACKET_CLOSE:-\"]\"}\"\n    LP_MARK_MULTIPLEXER_OPEN=\"${LP_MARK_MULTIPLEXER_OPEN:-\"$LP_MARK_BRACKET_OPEN\"}\"\n    LP_MARK_MULTIPLEXER_CLOSE=\"${LP_MARK_MULTIPLEXER_CLOSE:-\"$LP_MARK_BRACKET_CLOSE\"}\"\n    LP_MARK_SHORTEN_PATH=\"${LP_MARK_SHORTEN_PATH:-\" … \"}\"\n    LP_MARK_PREFIX=\"${LP_MARK_PREFIX:-\" \"}\"\n    LP_MARK_PERM=\"${LP_MARK_PERM:-\":\"}\"\n    LP_MARK_DIRSTACK=\"${LP_MARK_DIRSTACK:-\"⚞\"}\"\n    LP_MARK_SHLVL=\"${LP_MARK_SHLVL:-\"└\"}\"\n    LP_MARK_WIFI=\"${LP_MARK_WIFI:-\"📶\"}\"\n    LP_MARK_DEV_OPEN=\"${LP_MARK_DEV_OPEN:-\"<\"}\"\n    LP_MARK_DEV_CLOSE=\"${LP_MARK_DEV_CLOSE:-\">\"}\"\n    LP_MARK_DEV_MID=\"${LP_MARK_DEV_MID:-\"|\"}\"\n    LP_MARK_MODULES_OPEN=\"${LP_MARK_MODULES_OPEN:-\"\"}\"\n    LP_MARK_MODULES_SEP=\"${LP_MARK_MODULES_SEP:-\":\"}\"\n    LP_MARK_MODULES_CLOSE=\"${LP_MARK_MODULES_CLOSE:-\"\"}\"\n    LP_MARK_CMAKE=\"${LP_MARK_CMAKE:-\":\"}\"\n    LP_MARK_KUBECONTEXT=${LP_MARK_KUBECONTEXT:-\"⎈\"}\n    LP_MARK_JOBS_SEPARATOR=\"${LP_MARK_JOBS_SEPARATOR:-\"/\"}\"\n    LP_MARK_OS_SEP=${LP_MARK_OS_SEP:-\"/\"}\n    LP_MARK_OS=( ${LP_MARK_OS[@]+\"${LP_MARK_OS[@]}\"} )\n    LP_MARK_DISK=\"${LP_MARK_DISK:-\"🖴 \"}\"\n    LP_MARK_RAM=\"${LP_MARK_RAM:-\"M\"}\"\n\n    LP_COLOR_CMAKE_DEBUG=${LP_COLOR_CMAKE_DEBUG:-$MAGENTA}\n    LP_COLOR_CMAKE_RWDI=${LP_COLOR_CMAKE_RWDI:-$BLUE}\n    LP_COLOR_CMAKE_RELEASE=${LP_COLOR_CMAKE_RELEASE:-$CYAN}\n    LP_COLOR_PATH=${LP_COLOR_PATH:-$NO_COL}\n    lp_terminal_format 8 -1 0 0 -1\n    LP_COLOR_PATH_SEPARATOR=${LP_COLOR_PATH_SEPARATOR:-$lp_terminal_format}\n    LP_COLOR_PATH_SHORTENED=${LP_COLOR_PATH_SHORTENED:-$lp_terminal_format}\n    lp_terminal_format -1 -1 1 0\n    LP_COLOR_PATH_VCS_ROOT=${LP_COLOR_PATH_VCS_ROOT:-$lp_terminal_format}\n    LP_COLOR_PATH_LAST_DIR=${LP_COLOR_PATH_LAST_DIR:-$lp_terminal_format}\n    LP_COLOR_PATH_ROOT=${LP_COLOR_PATH_ROOT:-$BOLD_YELLOW}\n    LP_COLOR_PROXY=${LP_COLOR_PROXY:-$BOLD_BLUE}\n    LP_COLOR_ENV_VARS_UNSET=${LP_COLOR_ENV_VARS_UNSET:-$BLUE}\n    LP_COLOR_ENV_VARS_SET=${LP_COLOR_ENV_VARS_SET:-$BOLD_BLUE}\n    LP_COLOR_JOB_D=${LP_COLOR_JOB_D:-$YELLOW}\n    LP_COLOR_JOB_R=${LP_COLOR_JOB_R:-$BOLD_YELLOW}\n    LP_COLOR_JOB_Z=${LP_COLOR_JOB_Z:-$BOLD_YELLOW}\n    LP_COLOR_ERR=${LP_COLOR_ERR:-$PURPLE}\n    LP_COLOR_ERR_MEANING=${LP_COLOR_ERR_MEANING:-$LP_COLOR_ERR}\n    LP_COLOR_MARK=${LP_COLOR_MARK:-$BOLD}\n    LP_COLOR_MARK_ROOT=${LP_COLOR_MARK_ROOT:-$BOLD_RED}\n    LP_COLOR_MARK_SUDO=${LP_COLOR_MARK_SUDO:-$LP_COLOR_MARK_ROOT}\n    LP_COLOR_USER_LOGGED=${LP_COLOR_USER_LOGGED:-\"\"}\n    LP_COLOR_USER_ALT=${LP_COLOR_USER_ALT:-$BOLD}\n    LP_COLOR_USER_ROOT=${LP_COLOR_USER_ROOT:-$BOLD_YELLOW}\n    LP_COLOR_HOST=${LP_COLOR_HOST:-\"\"}\n    LP_COLOR_SSH=${LP_COLOR_SSH:-$BLUE}\n    LP_COLOR_SU=${LP_COLOR_SU:-$BOLD_YELLOW}\n    LP_COLOR_TELNET=${LP_COLOR_TELNET:-$WARN_RED}\n    LP_COLOR_X11_ON=${LP_COLOR_X11_ON:-$GREEN}\n    LP_COLOR_X11_OFF=${LP_COLOR_X11_OFF:-$YELLOW}\n    LP_COLOR_WRITE=${LP_COLOR_WRITE:-$GREEN}\n    LP_COLOR_NOWRITE=${LP_COLOR_NOWRITE:-$RED}\n    LP_COLOR_UP=${LP_COLOR_UP:-$GREEN}\n    LP_COLOR_COMMITS=${LP_COLOR_COMMITS:-$YELLOW}\n    LP_COLOR_COMMITS_BEHIND=${LP_COLOR_COMMITS_BEHIND:-$BOLD_RED}\n    LP_COLOR_CHANGES=${LP_COLOR_CHANGES:-$RED}\n    LP_COLOR_DIFF=${LP_COLOR_DIFF:-$PURPLE}\n    LP_COLOR_CHARGING_ABOVE=${LP_COLOR_CHARGING_ABOVE:-$GREEN}\n    LP_COLOR_CHARGING_UNDER=${LP_COLOR_CHARGING_UNDER:-$YELLOW}\n    LP_COLOR_DISCHARGING_ABOVE=${LP_COLOR_DISCHARGING_ABOVE:-$YELLOW}\n    LP_COLOR_DISCHARGING_UNDER=${LP_COLOR_DISCHARGING_UNDER:-$RED}\n    LP_COLOR_TIME=${LP_COLOR_TIME:-$BLUE}\n    LP_COLOR_IN_MULTIPLEXER=${LP_COLOR_IN_MULTIPLEXER:-$BOLD_BLUE}\n    LP_COLOR_RUNTIME=${LP_COLOR_RUNTIME:-$YELLOW}\n    LP_COLOR_VIRTUALENV=${LP_COLOR_VIRTUALENV:-$CYAN}\n    LP_COLOR_NODE_VENV=${LP_COLOR_NODE_VENV:-$LP_COLOR_VIRTUALENV}\n    LP_COLOR_RUBY_VENV=${LP_COLOR_RUBY_VENV:-$LP_COLOR_VIRTUALENV}\n    LP_COLOR_PERL_VENV=${LP_COLOR_PERL_VENV:-$LP_COLOR_VIRTUALENV}\n    LP_COLOR_TERRAFORM=${LP_COLOR_TERRAFORM:-$PINK}\n    LP_COLOR_CONTAINER=${LP_COLOR_CONTAINER:-$BOLD_BLUE}\n    LP_COLOR_DIRSTACK=${LP_COLOR_DIRSTACK:-$BOLD_YELLOW}\n    LP_COLOR_KUBECONTEXT=${LP_COLOR_KUBECONTEXT:-$CYAN}\n    LP_COLOR_AWS_PROFILE=${LP_COLOR_AWS_PROFILE:-$YELLOW}\n    LP_COLOR_MODULES=${LP_COLOR_MODULES:-$BLUE}\n    LP_COLOR_SHLVL=${LP_COLOR_SHLVL:-$BOLD_GREEN}\n    LP_COLOR_DISK=${LP_COLOR_DISK:-$BOLD_RED}\n    LP_COLOR_DISK_UNITS=${LP_COLOR_DISK_UNITS:-$RED}\n    LP_COLOR_RAM=${LP_COLOR_RAM:-$BOLD_RED}\n    LP_COLOR_RAM_UNITS=${LP_COLOR_RAM_UNITS:-$RED}\n\n    LP_COLORMAP=( ${LP_COLORMAP[@]+\"${LP_COLORMAP[@]}\"} )\n    if [[ ${#LP_COLORMAP[@]} == 0 ]]; then\n        LP_COLORMAP=(\n            \"\"               # 0\n            \"$GREEN\"         # 1\n            \"$BOLD_GREEN\"    # 2\n            \"$YELLOW\"        # 3\n            \"$BOLD_YELLOW\"   # 4\n            \"$RED\"           # 5\n            \"$BOLD_RED\"      # 6\n            \"$WARN_RED\"      # 7\n            \"$CRIT_RED\"      # 8\n            \"$DANGER_RED\"    # 9\n        )\n    fi\n\n    # For mocking tests.\n    _LP_LINUX_POWERSUPPLY_PATH=\"/sys/class/power_supply\"\n    _LP_LINUX_WIRELESS_FILE=\"/proc/net/wireless\"\n    _LP_AIRPORT_BIN=\"/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport\"\n    _LP_LINUX_RAM_FILE=\"/proc/meminfo\"\n    _LP_BSD_RAM_FILE=\"/var/run/dmesg.boot\"\n\n    if (( _LP_SHELL_zsh )); then\n        setopt local_options nullglob\n    fi\n    _LP_LINUX_TEMPERATURE_FILES=(\n        /sys/class/hwmon/hwmon*/temp*_input\n        # CentOS has an intermediate /device directory:\n        /sys/class/hwmon/hwmon*/device/temp*_input\n        /sys/devices/platform/coretemp.*/hwmon/hwmon*/temp*_input\n        # Older, fallback option\n        /sys/class/thermal/thermal_zone*/temp\n    )\n\n    # Debugging flags\n    LP_DEBUG_TIME=${LP_DEBUG_TIME:-0}\n\n    if [[ ${1-} == --no-config ]]; then\n        shift\n    else\n        # Default config file may be the XDG standard ~/.config/liquidpromptrc,\n        # but heirloom dotfile has priority.\n        local -a configfiles\n        configfiles=(\"$HOME/.liquidpromptrc\" \"${XDG_CONFIG_HOME:-\"$HOME/.config\"}/liquidpromptrc\")\n\n        # trailing \":\" is so that ${search#*:} always removes something\n        local configfile search=\"${XDG_CONFIG_DIRS:-/etc/xdg}:\"\n        while [[ -n \"$search\" ]]; do\n            configfiles+=(\"${search%%:*}/liquidpromptrc\")\n            search=\"${search#*:}\"\n        done\n\n        configfiles+=(\"/etc/liquidpromptrc\")\n\n        for configfile in \"${configfiles[@]}\"; do\n            if [[ -f \"$configfile\" ]]; then\n                # shellcheck source=/dev/null\n                source \"$configfile\"\n                break\n            fi\n        done\n    fi\n\n    for file in \"$@\"; do\n        # shellcheck disable=SC1090\n        . \"$file\"\n    done\n\n    # Deprecations and compatibility shims\n\n    if [[ -n \"${LP_DISABLED_VCS_PATH-}\" ]]; then\n        echo \"liquidprompt: LP_DISABLED_VCS_PATH is deprecated. Update your config to use LP_DISABLED_VCS_PATHS array.\" >&2\n\n        (( _LP_SHELL_zsh )) && setopt local_options && setopt sh_word_split\n        local _path IFS=:\n        for _path in $LP_DISABLED_VCS_PATH; do\n            LP_DISABLED_VCS_PATHS+=(\"$_path\")\n        done\n    fi\n\n    # FIXME Delete this code in version 1.11\n    if [[ -n \"${LP_COLORMAP_1-}\" ]]; then\n        echo \"liquidprompt: LP_COLORMAP_x variables are deprecated. Update your theme to use LP_COLORMAP array.\" >&2\n        LP_COLORMAP=(\n            \"$LP_COLORMAP_0\"\n            \"$LP_COLORMAP_1\"\n            \"$LP_COLORMAP_2\"\n            \"$LP_COLORMAP_3\"\n            \"$LP_COLORMAP_4\"\n            \"$LP_COLORMAP_5\"\n            \"$LP_COLORMAP_6\"\n            \"$LP_COLORMAP_7\"\n            \"$LP_COLORMAP_8\"\n            \"$LP_COLORMAP_9\"\n        )\n        unset LP_COLORMAP_0 LP_COLORMAP_1 LP_COLORMAP_2 LP_COLORMAP_3 LP_COLORMAP_4 \\\n              LP_COLORMAP_5 LP_COLORMAP_6 LP_COLORMAP_7 LP_COLORMAP_8 LP_COLORMAP_9\n    fi\n\n    if [[ -n ${LP_PATH_DEFAULT-} ]]; then\n        echo \"liquidprompt: LP_PATH_DEFAULT is deprecated. Update your config to set LP_PATH_METHOD.\" >&2\n        if (( ! LP_ENABLE_SHORTEN_PATH )); then\n            # There is just no elegant way to handle this. Fallback to the old way with basic formatting support.\n            _lp_path_format() {\n                lp_path=$LP_PATH_DEFAULT\n                lp_path_format=\"${LP_COLOR_PATH}${lp_path}${NO_COL}\"\n            }\n        fi\n    fi\n\n    if [[ -n ${PROMPT_DIRTRIM-} ]] && (( ! LP_ENABLE_SHORTEN_PATH )); then\n        echo \"liquidprompt: PROMPT_DIRTRIM support is deprecated. Update your config to set\n            LP_PATH_METHOD='truncate_chars_from_path_left' instead.\" >&2\n        # This does mostly the same thing, but with our formatting.\n        LP_ENABLE_SHORTEN_PATH=1\n        LP_PATH_METHOD=\"truncate_chars_from_path_left\"\n        LP_PATH_KEEP=1\n    fi\n\n    if [[ $LP_PATH_KEEP == \"-1\" ]]; then\n        echo \"liquidprompt: LP_PATH_KEEP set to '-1' is deprecated. Update your config to set\n              LP_PATH_METHOD='truncate_to_last_dir' instead.\" >&2\n        LP_PATH_METHOD=\"truncate_to_last_dir\"\n    fi\n\n    if [[ ${LP_ENABLE_FQDN-} == 1 ]]; then\n        echo \"liquidprompt: LP_ENABLE_FQDN is deprecated. Update your config to set LP_HOSTNAME_METHOD=full\n              or LP_HOSTNAME_METHOD=fqdn instead.\" >&2\n        LP_HOSTNAME_METHOD=\"full\"\n    fi\n\n    if [[ -n ${LP_PERCENTS_ALWAYS-} ]]; then\n        echo \"liquidprompt: LP_PERCENTS_ALWAYS is deprecated. Update your config to set LP_ALWAYS_DISPLAY_VALUES and LP_DISPLAY_VALUES_AS_PERCENTS instead.\" >&2\n        LP_ALWAYS_DISPLAY_VALUES=${LP_PERCENTS_ALWAYS}\n        LP_DISPLAY_VALUES_AS_PERCENTS=${LP_PERCENTS_ALWAYS}\n    fi\n}\n\n# Initialize features based on the user config.\n# shellcheck disable=SC2120\nlp_activate() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help lp_activate\n        return 0\n    fi\n\n    if (( _LP_SHELL_bash )); then\n        complete -F __lp_help_bash_complete lp_help\n        complete -F __lp_theme_bash_complete lp_theme\n    else # zsh\n        # For ZSH, autoload required functions\n        autoload -Uz add-zsh-hook\n\n        # Enable the autocomplete if the autocomplete system is initialized.\n        if __lp_is_function compdef; then\n            compdef __lp_help_zsh_complete lp_help\n            compdef __lp_theme_zsh_complete lp_theme\n        fi\n    fi\n\n    # Disable hooks that we don't need if features will be disabled.\n    __lp_disable_hooks\n\n    # TermInfo feature detection\n    _lp_af_colors=() _lp_ab_colors=()\n\n    __lp_foreground_color() { return 2 ; }\n    __lp_background_color() { return 2 ; }\n\n    # TODO handle this case better. With no colors, no need for any escaping\n    if ! command -v tput >/dev/null; then\n        echo \"liquidprompt: 'tput' not available; will not be able to format terminal\" >&2\n        LP_ENABLE_COLOR=0\n    else\n        _LP_TI_RESET=\"$( { tput sgr0 || tput me ; } 2>/dev/null )\"\n        _LP_TI_BOLD=\"$( { tput bold || tput md ; } 2>/dev/null )\"\n        _LP_TI_UNDERLINE=\"$( { tput smul || tput us ; } 2>/dev/null )\"\n        _LP_TI_COLORS=\"$( tput colors 2>/dev/null )\"\n        _LP_TI_COLORS=${_LP_TI_COLORS:-8}\n\n        _LP_TI_BELL=\"$( { tput bel || tput bl ; } 2>/dev/null )\"\n\n        if tput setaf 0 >/dev/null 2>&1; then\n            __lp_foreground_color() { af_color=\"${_lp_af_colors[$1+1]:=$(tput setaf \"$1\")}\"; }\n        elif tput AF 0 >/dev/null 2>&1; then\n            # FreeBSD\n            __lp_foreground_color() { af_color=\"${_lp_af_colors[$1+1]:=$(tput AF \"$1\")}\"; }\n        elif tput AF 0 0 0 >/dev/null 2>&1; then\n            # OpenBSD\n            __lp_foreground_color() { af_color=\"${_lp_af_colors[$1+1]:=$(tput AF \"$1\" 0 0)}\"; }\n        else\n            echo \"liquidprompt: terminal '${TERM-}' does not support foreground colors\" >&2\n        fi\n        if tput setab 0 >/dev/null 2>&1; then\n            __lp_background_color() { ab_color=\"${_lp_ab_colors[$1+1]:=$(tput setab \"$1\")}\"; }\n        elif tput AB 0 >/dev/null 2>&1; then\n            # FreeBSD\n            __lp_background_color() { ab_color=\"${_lp_ab_colors[$1+1]:=$(tput AB \"$1\")}\"; }\n        elif tput AB 0 0 0 >/dev/null 2>&1; then\n            # OpenBSD\n            __lp_background_color() { ab_color=\"${_lp_ab_colors[$1+1]:=$(tput AB \"$1\" 0 0)}\"; }\n        else\n            echo \"liquidprompt: terminal '${TERM-}' does not support background colors\" >&2\n        fi\n    fi\n\n    # If tput doesn't exist or lookup failed, still try to send bell\n    _LP_TI_BELL=${_LP_TI_BELL:-$'\\a'}\n\n    __lp_source_config \"$@\"\n\n    # Disable feature if the tool is not installed\n    _lp_require_tool()\n    {\n        # zsh does not allow quoting here.\n        # shellcheck disable=SC1105,SC2086\n        (( LP_ENABLE_$1 )) && { command -v \"$2\" >/dev/null || eval \"LP_ENABLE_$1=0\" ; }\n    }\n\n    _lp_require_tool TIME date\n\n    _lp_require_tool GIT git\n    _lp_require_tool SVN svn\n    _lp_require_tool FOSSIL fossil\n    _lp_require_tool HG \"$LP_HG_COMMAND\"\n    _lp_require_tool BZR bzr\n    _lp_require_tool CMAKE cmake\n    _lp_require_tool DISK df\n\n    _LP_ENABLED_VCSS=()\n    (( LP_ENABLE_GIT )) && _LP_ENABLED_VCSS+=(git)\n    (( LP_ENABLE_SVN )) && _LP_ENABLED_VCSS+=(svn)\n    (( LP_ENABLE_HG )) && _LP_ENABLED_VCSS+=(hg)\n    (( LP_ENABLE_BZR )) && _LP_ENABLED_VCSS+=(bzr)\n\n    if [[ \"$LP_OS\" = Darwin ]]; then\n        _lp_require_tool BATT pmset\n        _lp_require_tool RAM vm_stat\n    elif (( LP_ENABLE_BATT )); then\n        __lp_battery_detect || LP_ENABLE_BATT=0\n    fi\n\n    _lp_require_tool KUBECONTEXT kubectl\n    _lp_require_tool TERRAFORM terraform\n\n    unset -f _lp_require_tool\n\n    _LP_ENABLE_PREEXEC=$((\n        LP_ENABLE_RUNTIME \\\n        || LP_ENABLE_RUNTIME_BELL \\\n        || LP_ENABLE_TITLE_COMMAND \\\n        || LP_HIDE_EMPTY_ERROR \\\n    ))\n\n    # LP_ENABLE_RUBY_VENV depends either from rvm or rbenv. Thus we cannot\n    # directly use _lp_require_tool for it.\n    # Also, to avoid to check twice which is the current ruby virtual env\n    # program in use, we set here an internal variable holding its name if we\n    # detect one of them.\n    if (( LP_ENABLE_RUBY_VENV )) ; then\n        if command -v rvm-prompt >/dev/null ; then\n            _LP_RUBY_VENV_PROGRAM=rvm\n        elif command -v rbenv >/dev/null ; then\n            _LP_RUBY_VENV_PROGRAM=rbenv\n        else\n            LP_ENABLE_RUBY_VENV=0\n        fi\n    fi\n\n    if (( LP_ENABLE_PERL_VENV )) ; then\n        if command -v perlbrew >/dev/null ; then\n            _LP_PERL_VENV_PROGRAM=perlbrew\n        elif command -v plenv >/dev/null ; then\n            _LP_PERL_VENV_PROGRAM=plenv\n        else\n            LP_ENABLE_PERL_VENV=0\n        fi\n    fi\n\n    if (( LP_ENABLE_DETACHED_SESSIONS )); then\n        command -v screen >/dev/null ; _LP_ENABLE_SCREEN=$(( ! $? ))\n        command -v tmux >/dev/null   ; _LP_ENABLE_TMUX=$(( ! $? ))\n        command -v shpool >/dev/null ; _LP_ENABLE_SHPOOL=$(( ! $? ))\n    fi\n\n    # Use standard path symbols inside Midnight Commander\n    [[ -n \"${MC_SID-}\" ]] && LP_ENABLE_SHORTEN_PATH=0\n\n    # If we are running in a terminal multiplexer, special title escapes\n    if _lp_multiplexer --internal && [[ $lp_multiplexer != \"shpool\" ]]; then\n        (( LP_ENABLE_TITLE = LP_ENABLE_TITLE && LP_ENABLE_SCREEN_TITLE ))\n        if (( LP_ENABLE_TMUX_TITLE_PANES )) && [[ $lp_multiplexer == tmux ]]; then\n            LP_TITLE_OPEN=$'\\E]2;'\n        else\n            LP_TITLE_OPEN=$'\\Ek'\n        fi\n        LP_TITLE_CLOSE=$'\\E\\\\'\n    else\n        LP_TITLE_OPEN=$'\\E]0;'\n        LP_TITLE_CLOSE=$'\\a'\n    fi\n\n    [[ \"_${TERM-}\" == _linux* ]] && LP_ENABLE_TITLE=0\n\n    # Can not show title command if the title feature is disabled.\n    (( LP_ENABLE_TITLE )) || LP_ENABLE_TITLE_COMMAND=0\n\n    # update_terminal_cwd is a shell function available on MacOS X Lion that\n    # will update an icon of the directory displayed in the title of the terminal\n    # window.\n    # See http://hints.macworld.com/article.php?story=20110722211753852\n    if [[ \"${TERM_PROGRAM-}\" == Apple_Terminal ]] && command -v update_terminal_cwd >/dev/null; then\n        _LP_TERM_UPDATE_DIR=update_terminal_cwd\n        # Remove \"update_terminal_cwd; \" that has been add by Apple in /et/bashrc.\n        # See issue #196\n        PROMPT_COMMAND=\"${PROMPT_COMMAND//update_terminal_cwd; /}\"\n    else\n        _LP_TERM_UPDATE_DIR=:\n    fi\n\n    ###############\n    # Who are we? #\n    ###############\n\n    _lp_user\n    local -i user=\"$?\"\n\n    if (( user < 2 )); then  # if user is not root\n        # \"sudo -n\" is only supported from sudo 1.7.0\n        if (( LP_ENABLE_SUDO )); then\n            if command -v sudo >/dev/null \\\n                && LC_MESSAGES=C sudo -V \\\n                | GREP_OPTIONS='' \\grep -qE '^Sudo version (1(\\.([789]\\.|[1-9][0-9])|[0-9])|[2-9])'; then\n\n                # If user can run any command without password input.\n                # This command does not invalidate credentials.\n                if \\sudo -nvk 2>/dev/null; then\n                    _LP_SUDO_NOPASSWORD=1\n                else\n                    _LP_SUDO_NOPASSWORD=0\n                fi\n            else\n                LP_ENABLE_SUDO=0\n            fi\n        fi\n\n        if (( user == 1 )); then\n            LP_COLOR_USER=$LP_COLOR_USER_ALT\n        else\n            LP_COLOR_USER=$LP_COLOR_USER_LOGGED\n        fi\n    else # root!\n        LP_ENABLE_SUDO=0\n        if (( ! LP_ENABLE_VCS_ROOT )); then\n            LP_DISABLED_VCS_PATHS=(\"/\")\n        fi\n\n        LP_MARK_DEFAULT='#'\n\n        LP_COLOR_MARK=$LP_COLOR_MARK_ROOT\n        LP_COLOR_PATH=$LP_COLOR_PATH_ROOT\n        LP_COLOR_USER=$LP_COLOR_USER_ROOT\n    fi\n\n    #################\n    # Where are we? #\n    #################\n\n    if (( LP_ENABLE_TEMP )); then\n        # Try each _lp_temp method\n        # If no function worked, disable the feature\n        __lp_temp_detect || LP_ENABLE_TEMP=0\n    fi\n\n    if (( LP_ENABLE_LOAD )); then\n        # Find and save the number of CPUs\n        __lp_cpu_count\n\n        # Convert load config values into usable integers.\n        local ret\n        # if load threshold does not have a period in it.\n        if [[ -z ${LP_LOAD_THRESHOLD//[!\\.]} ]]; then\n            # This is an old value, no need to convert\n            _LP_LOAD_THRESHOLD=$LP_LOAD_THRESHOLD\n        else\n            __lp_floating_scale \"$LP_LOAD_THRESHOLD\" 100\n            _LP_LOAD_THRESHOLD=$ret\n        fi\n        __lp_floating_scale \"$LP_LOAD_CAP\" 100\n        _LP_LOAD_CAP=$ret\n    fi\n\n    if [[ -n ${_LP_THEME_ACTIVATE_FUNCTION-} ]]; then\n        # Reactivate current theme\n        \"$_LP_THEME_ACTIVATE_FUNCTION\"\n        prompt_on\n    else\n        # Set default theme if no theme set\n        lp_theme default\n    fi\n}\n\n#####################\n# Utility Functions #\n#####################\n\n# Remove all colors and escape characters of the given string and return a pure text\n# Deprecated since v2.1.\n_lp_as_text() {\n    # Remove all terminal sequences that we wrapped with $_LP_OPEN_ESC and\n    # $_LP_CLOSE_ESC.\n    local ret\n    __lp_strip_escapes \"$1\"\n    printf '%s' \"$ret\"\n}\n\n# Store $2 (or $?) as a true/false value in variable named $1\n# Deprecated since v2.0.\n_lp_bool() {\n    local res=\"${2:-$?}\"\n    if (( res )); then\n        eval \"$1=false\"\n    else\n        eval \"$1=true\"\n    fi\n    return \"$res\"\n}\n\n_lp_color_map() { # value [scale=100]\n    # Default scale: 0..100\n    # Custom scale: 0..$2\n    local -i scale value\n    scale=${2:-100}\n    if (( $1 >= scale )); then\n      (( value = scale - 1 ))\n    elif (( $1 < 0 )); then\n      value=0\n    else\n      value=$1\n    fi\n    # Transform the value to a 0..${#COLOR_MAP} scale\n    ret=\"${LP_COLORMAP[_LP_FIRST_INDEX+value*${#LP_COLORMAP[*]}/scale]}\"\n}\n\n# Generate a terminal hyperlink from a URL and text.\n_lp_create_link() {  # url, text\n    (( LP_ENABLE_HYPERLINKS )) || return 2\n    lp_link=\"$_LP_OPEN_ESC\"$'\\E]8;;'\"${1}\"$'\\E'\"${_LP_BACKSLASH}${_LP_CLOSE_ESC}${2}${_LP_OPEN_ESC}\"$'\\E]8;;\\E'\"${_LP_BACKSLASH}$_LP_CLOSE_ESC\"\n}\n\n# Add a link to a path element, with protocol depending on the connection.\n_lp_create_link_path() { # path\n    local _path=\"$1\"\n    if (( LP_ENABLE_HYPERLINKS )); then\n        _lp_connection\n\n        if [[ \"$lp_connection\" == \"ssh\" ]]; then\n            # SSH connection needs the `sftp` protocol to reach the remote host.\n            local client_ip client_port server_ip server_port\n            IFS=\" \" read -r client_ip client_port server_ip server_port <<<\"$SSH_CONNECTION\"\n            local username=${USER:-${USERNAME:-${LOGNAME-}}}\n            _lp_create_link \"sftp://${username}@${server_ip}:${client_port}/${PWD}/\" \"$_path\"\n            lp_link_path=\"$lp_link\"\n\n        elif [[ \"$lp_connection\" == \"su\" || \"$lp_connection\" == \"lcl\" ]]; then\n            # Reach local host with the `file` protocol.\n            _lp_create_link \"file://${PWD}/\" \"$_path\"\n            lp_link_path=\"$lp_link\"\n\n        else # no link for telnet.\n            lp_link_path=\"$_path\"\n        fi\n    else # No link.\n        lp_link_path=\"$_path\"\n    fi\n}\n\n# Return true if the input is the name of a function.\n__lp_is_function() {\n    if (( _LP_SHELL_bash )); then\n        [[ $(LC_ALL=C \\type -t \"$1\") == function ]]\n    else\n        [[ $(LC_ALL=C \\type -w \"$1\") == *function ]]\n    fi\n}\n\n# Count the number of lines in the input string. A faster substitute for 'wc -l'.\n__lp_line_count() {\n  local var=\"${1//[!$'\\n']}\"\n  count=${#var}\n}\n\n__lp_hostname_hash() {\n    # cksum is separated with tab on SunOS, space on others\n    # Newline is required to keep the same color as before.\n    local cksum=\"$(printf '%s\\n' \"${HOSTNAME:-${HOST-}}\" | cksum)\"\n    lp_hostname_hash=${cksum%%[$' \\t']*}\n}\n\n__lp_floating_scale() {\n    local integer decimal=0 scale=$(( ${#2} - 1 ))\n    integer=${1%\\.*}\n\n    if [[ -n ${1//[!\\.]} ]]; then\n        decimal=${1#*\\.}\n        decimal=${decimal:0:$scale}\n\n        while (( ${#decimal} < scale )); do\n            decimal+='0'\n        done\n\n        while [[ ${decimal:0:1} == '0' ]]; do\n            decimal=${decimal:1}\n        done\n    fi\n\n    ret=$(( integer * $2 + decimal ))\n}\n\n# Return $PWD with $HOME at the start replaced by \"~\".\n__lp_pwd_tilde() {  # [path]\n    # Needs to be in a variable, as different versions of Bash treat '~' in a\n    # substitution differently\n    local _path=\"${1:-$PWD}\" tilde=\"~\"\n    lp_pwd_tilde=\"${_path/#$HOME/$tilde}\"\n}\n\n# insert a space on the right\n# Deprecated since v2.0.\n_lp_sr() {\n    [[ -n \"$1\" ]] && echo -nE \"$1 \"\n}\n\n# insert a space on the left\n# Deprecated since v2.0.\n_lp_sl() {\n    [[ -n \"$1\" ]] && echo -nE \" $1\"\n}\n\n# insert two spaces, before and after\n# Deprecated since v2.0.\n_lp_sb() {\n    [[ -n \"$1\" ]] && echo -nE \" $1 \"\n}\n\n# Generates a terminal escape sequence to format the terminal.\nlp_terminal_format() {  # fg, bg, bold, underline, fallback_fg, fallback_bg\n    if [[ -z ${1-} || $1 == \"--help\" || $1 == \"-h\" ]]; then\n        lp_help lp_terminal_format\n        return 0\n    fi\n\n    lp_terminal_format=\n    (( LP_ENABLE_COLOR )) || return 2\n\n    local af_color ab_color fg bg previous_af_color\n    fg=$1\n    bg=${2:-\"-1\"}\n    previous_af_color=${_lp_last_af_color-}\n\n    lp_terminal_format=${_LP_OPEN_ESC}${_LP_TI_RESET}\n\n    if (( fg >= _LP_TI_COLORS )) && [[ -n ${5-} ]]; then\n        _lp_last_af_color=$5\n    elif (( fg == -2 )); then\n        :  # do nothing, _lp_last_af_color already correct\n    elif (( fg == -3 )); then\n        _lp_last_af_color=$_lp_last_ab_color\n    elif (( fg >= 0 )); then\n        _lp_last_af_color=$fg\n    else  # -1\n        _lp_last_af_color=-1\n    fi\n\n    if (( ${_lp_last_af_color:-\"-1\"} >= 0 )); then\n        __lp_foreground_color \"$_lp_last_af_color\" && lp_terminal_format+=$af_color\n    fi\n\n    if (( bg >= _LP_TI_COLORS )) && [[ -n ${6-} ]]; then\n        _lp_last_ab_color=$6\n    elif (( bg == -2 )); then\n        :  # do nothing, _lp_last_ab_color already correct\n    elif (( bg == -3 )); then\n        _lp_last_ab_color=$previous_af_color\n    elif (( bg >= 0 )); then\n        _lp_last_ab_color=$bg\n    else  # -1\n        _lp_last_ab_color=-1\n    fi\n\n    if (( ${_lp_last_ab_color:-\"-1\"} >= 0 )); then\n        __lp_background_color \"$_lp_last_ab_color\" && lp_terminal_format+=$ab_color\n    fi\n\n    # It turns out there are sequences to reset bold and underline to normal\n    # (\\E[22m and \\E[24m in xterm), but they aren't universally supported. This\n    # means we must reset to all defaults then enable if they are wanted.\n    # Explicit is safer anyway.\n    if (( ${3:-0} )); then\n        lp_terminal_format+=$_LP_TI_BOLD\n    fi\n\n    if (( ${4:-0} )); then\n        lp_terminal_format+=$_LP_TI_UNDERLINE\n    fi\n\n    lp_terminal_format+=$_LP_CLOSE_ESC\n}\n\n# Get a list of themes currently loaded. Looks for functions matching\n# _lp_<theme>_theme_prompt().\n__lp_theme_list() {\n    lp_theme_list=()\n\n    local -a _functions\n    if (( _LP_SHELL_zsh )); then\n        # shellcheck disable=SC2296\n        _functions=( \"${(ko)functions[@]}\" )\n    else\n        local IFS=$'\\n'\n        # shellcheck disable=SC2207\n        _functions=( $(declare -F) )\n    fi\n\n    local function\n    for function in \"${_functions[@]}\"; do\n        if [[ $function == *_lp_*_theme_prompt ]]; then\n            function=${function#*_lp_}\n            lp_theme_list+=(\"${function%_theme_prompt}\")\n        fi\n    done\n}\n\n__lp_theme_bash_complete() {\n    COMPREPLY=()\n    local -a lp_theme_list\n    local theme partial_theme\n    partial_theme=${2-}\n\n    __lp_theme_list\n\n    for theme in \"${lp_theme_list[@]}\"; do\n        [[ -n $partial_theme && $theme != \"$partial_theme\"* ]] && continue\n        COMPREPLY+=(\"$theme\")\n    done\n}\n\n__lp_theme_zsh_complete() {\n    local -a lp_theme_list\n    __lp_theme_list\n    _describe 'theme' lp_theme_list\n}\n\n_lp_hash_color() {\n    (( LP_ENABLE_COLOR )) || return 2\n    # compute the hash of the argument and color it with the corresponding color in:\n    # (green, yellow, blue, purple, cyan)\n    # Red (would be index 1) is not used here, as it should be reserved for alerts.\n    local str=${1-}\n    local cksum=\"$(printf '%s' \"$str\" | cksum)\"\n    local hash=\"${cksum%%[$' \\t']*}\"\n    __lp_foreground_color \"$(( 2 + hash % 5 ))\"\n    local color=\"${_LP_OPEN_ESC}${af_color-}${_LP_CLOSE_ESC}\"\n    lp_hash_color=\"${color}${str}${NO_COL}\"\n}\n\n_lp_join() {\n    # Join the $2... array with the $1 string.\n    local delimiter=${1-}\n    local IFS=\"\"\n    if (( _LP_SHELL_zsh )); then\n        shift 1\n        # shellcheck disable=SC2296\n        lp_join=\"${(pj/$delimiter/)*}\"\n    else\n        local first=${2-}\n        shift 2\n        lp_join=\"${first}${*/#/$delimiter}\"\n    fi\n}\n\n_lp_grep_fields() {\n    # Open file $1 and parse it for key/value pairs having delimiter $2, for each key in $3...\n    # Silently bypass inexisting fields.\n    local file=\"$1\"\n    [[ -f \"$file\" ]] || return 1\n\n    local delimiter=\"$2\"\n    shift 2\n    local -a fields\n    fields=(\"$@\")\n\n    lp_grep_fields=()\n    # We test for $line in the loop is here to ensure that we read the last line,\n    # even if the file does not ends with a \\n.\n    # This bypass a known behavior of the C standard, not fixed in POSIX.\n    while IFS='' read -r line || [[ -n \"$line\" ]] ; do\n        for (( i=_LP_FIRST_INDEX; i < ${#fields[@]} + _LP_FIRST_INDEX; i++ )); do\n            key=\"${fields[i]}\"\n            if [[ \"$line\" == \"${key}${delimiter}\"* ]] ; then\n                line=\"${line#*\"${key}${delimiter}\"}\" # Remove first part until delimiter.\n                lp_grep_fields[i]=\"${line}\"\n            fi\n        done\n    done <\"$file\"\n}\n\n# Adds as much $3 (fillchars) character(s) (e.g. spaces) between $1 (left) and $2 (right),\n# so as to make the resulting string the same width as the current terminal.\n# If $4 (splitends) is true, then will cut $3 (fillchars) so as to perfectly fill the available space.\n#\n# This function would have been slow if you put escaped characters in $3 (fillchars)\n# and the width of the gap to fill is large. Thus, any escaped character is\n# removed from $3 (fillchars) at the beginning.\n#\n# To color the filling sequence, you can add formating at the end of $1 (left)\n# and/or at the beginning of $2 (right).\n_lp_fill() {\n\n    local left=\"$1\" right=\"$2\" fillchars=\"${3:-\" \"}\" splitends=\"${4:-1}\"\n\n    # Remove any escaped character from fillchars,\n    # to avoid any costly __lp_strip_escape call on a potentially long\n    # sequence of characters.\n    __lp_strip_escapes \"$fillchars\"\n    fillchars=\"$ret\"\n\n    # Compute the gap between left and right.\n    local ret\n    __lp_strip_escapes \"${left}\"\n    local left_as_text=\"$ret\"\n    __lp_strip_escapes \"${right}\"\n    local right_as_text=\"$ret\"\n    # Width of the gap is width of the screen minus every printable character.\n    local gap_width=$((${COLUMNS:-80}-${#left_as_text}-${#right_as_text}))\n    if [[ $gap_width -lt 0 ]] ; then\n        lp_fill=\"${left}${right}\"\n        return 1\n    fi\n\n    # Assemble a candidate filling sequence of characters.\n    local filled=\"\"\n    local fillchars_width=${#fillchars}\n    local nb_fillchars=$((gap_width/fillchars_width))\n    local i\n    for (( i=0; i < nb_fillchars; i++ )) ; do\n        filled+=\"$fillchars\"\n    done\n\n    local actual_width=${#filled}\n    # If there is still a gap (i.e. we have an unaligned multi-character fillchars).\n    if [[ ${actual_width} -lt ${gap_width} ]] ; then\n        # User asked for splitends.\n        if [[ $splitends -ne 0 ]] ; then\n            for (( i=_LP_FIRST_INDEX; i < $((${#fillchars}+_LP_FIRST_INDEX)); i++ )) ; do\n                # Get one single character.\n                if (( _LP_SHELL_zsh )) ; then\n                    filled+=\"${fillchars[i,i]}\"\n                else\n                    filled+=\"${fillchars:i:1}\"\n                fi\n                actual_width=${#filled}\n                if [[ ${actual_width} -ge ${gap_width} ]] ; then\n                    # Stop at this char if we're full.\n                    break\n                fi\n            done\n        else # User asked for no splitends.\n            for (( i=actual_width; i < gap_width; i++ )) ; do\n                # Fill with spaces.\n                filled+=\" \"\n            done\n        fi\n    fi\n\n    # shellcheck disable=SC2034\n    lp_fill=\"${left}${filled}${right}\"\n}\n\n_lp_version_string() { # [major, [minor, [patch, [string, [number]]]]]\n\n    if [[ $# -eq 0 ]]; then\n        local major=\"${_LP_VERSION[_LP_FIRST_INDEX+0]}\"\n        local minor=\"${_LP_VERSION[_LP_FIRST_INDEX+1]}\"\n        local patch=\"${_LP_VERSION[_LP_FIRST_INDEX+2]-}\"\n        local string=\"${_LP_VERSION[_LP_FIRST_INDEX+3]-}\"\n        local number=\"${_LP_VERSION[_LP_FIRST_INDEX+4]-}\"\n    else\n        local major=\"${1}\"\n        local minor=\"${2}\"\n        local patch=\"${3-}\"\n        local string=\"${4-}\"\n        local number=\"${5-}\"\n    fi\n    #shellcheck disable=SC2034\n    lp_version=\"${major}.${minor}\"\n    if [[ -n \"$patch\" ]]; then\n        lp_version+=\".${patch}\"\n        if [[ -n \"$string\" ]]; then\n            lp_version+=\"-${string}\"\n            if [[ -n \"$number\" ]]; then\n                lp_version+=\".${number}\"\n            fi\n        fi\n    fi\n}\n\n_lp_substitute() { # string pairs_array\n    # Replace string with the \"right\" part of the first pair in the given array, if the \"left\" part matches the string.\n    # FIXME If we ever support Bash>4.3, this would be better implemented with associative arrays.\n    lp_substitute=\"\"\n    local string=\"${1}\"\n    shift 1\n    local pairs\n    pairs=(\"$@\")\n    [[ -n \"${pairs[*]}\" ]] || return 2\n\n    local i key\n    for (( i=0; i < ${#pairs[@]}; i+=2 )); do\n        key=${pairs[_LP_FIRST_INDEX+i]}\n        if [[ \"$key\" == \"$string\" ]]; then\n            lp_substitute=${pairs[_LP_FIRST_INDEX+i+1]-}\n            return 0 # Found.\n        fi\n    done\n    return 1 # Not found.\n}\n\n\n##########################\n# Working Directory Path #\n##########################\n\n__lp_get_unique_directory() {\n    local directory=\"${1##*/}\" root=\"${1%/*}\"\n    local -a matching\n    local -i i\n    for (( i=1; i < ${#directory}; i++ )); do\n        lp_unique_directory=${directory:0:$i}\n        matching=(\"${root}/${lp_unique_directory}\"*/)\n        if (( ${#matching[@]} == 1 )); then\n            return 0\n        fi\n    done\n\n    return 1\n}\n\n__lp_end_path_left_shortening() {\n    if (( is_shortening )); then\n        shortened_path_length+=${#separator}\n        if (( shortened_path_length < unshortened_path_length )); then\n            lp_path_format+=\"${shortened_directory_format}${LP_MARK_SHORTEN_PATH}\"\n            # This indescriminate adding of a separator can sometimes mean the path\n            # is slightly longer than it should be, but it is more clear.\n            lp_path_format+=\"${separator_format}${separator}\"\n            lp_path+=\"${LP_MARK_SHORTEN_PATH}/\"\n        else\n            lp_path+=$unshortened_path_shorten_string\n            lp_path_format+=$unshortened_path_format_shorten_string\n            shortened_path_length=$unshortened_path_length\n        fi\n        is_shortening=0\n    fi\n}\n\n# methods:\n#   truncate_chars_from_path_left\n#   truncate_chars_from_dir_middle\n#   truncate_chars_from_dir_right\n#   truncate_chars_to_unique_dir\n#   truncate_to_last_dir\n_lp_path_format() {\n    ((LP_ENABLE_PATH)) || return 2\n\n    local path_format=\"${1-$LP_COLOR_PATH}\"\n    local last_directory_format=\"${2:-$path_format}\"\n    local vcs_root_format=\"${3:-$last_directory_format}\"\n    local shortened_directory_format=\"${4:-$path_format}\"\n    local separator=\"${5-\"/\"}\"\n    local separator_format=\"${6-}\"\n\n    lp_path=\n    lp_path_format=\n\n    local ret lp_link_path\n\n    local lp_pwd_tilde\n    __lp_pwd_tilde\n    local display_path=\"$lp_pwd_tilde\"\n\n    local -i path_length=\"${#display_path}\"\n\n    local lp_vcs_root lp_vcs_dir lp_vcs_specific_dir lp_vcs_type lp_vcs_subtype\n    local vcs_root_directory=\n    if (( LP_PATH_VCS_ROOT )) && _lp_find_vcs; then\n        __lp_pwd_tilde \"$lp_vcs_root\"\n        vcs_root_directory=$lp_pwd_tilde\n    fi\n\n    if [[ $path_length -eq 1 || $LP_PATH_METHOD == \"truncate_to_last_dir\" ]]; then\n        if [[ $path_length -gt 1 ]]; then\n            lp_path=${display_path##*/}\n        else\n            # only root or home to show\n            lp_path=$display_path\n        fi\n\n        __lp_escape \"$lp_path\"\n\n        if [[ $display_path == \"$vcs_root_directory\" ]]; then\n            _lp_create_link_path \"${ret}\"\n            lp_path_format=\"${vcs_root_format}$lp_link_path\"\n        else\n            _lp_create_link_path \"${ret}\"\n            lp_path_format=\"${last_directory_format}$lp_link_path\"\n        fi\n\n        return\n    else\n        if [[ $separator != \"/\" && ${display_path:0:1} == \"/\" ]]; then\n            # The root directory ('/') becomes a directory name instead of a leading separator\n            # Add one to account for the first / needing to be both replaced and shown\n            path_length+=1\n        fi\n        if [[ ${#separator} -gt 1 ]]; then\n            # Add length to account for multichar separators\n            local slash_count=\"${display_path//[!\\/]}\"\n            path_length+=$(( ${#slash_count} * ( ${#separator} - 1 ) ))\n        fi\n    fi\n\n    local path_to_proccess=\"${display_path}/\" current_path=\"\" current_directory=\"\" lp_unique_directory\n\n    local -i max_len=$(( ${COLUMNS:-80} * LP_PATH_LENGTH / 100 )) directory_count=0 needed_length\n    local -i shortened_path_length=\"$path_length\" is_shortening=0 unshortened_path_length\n    local unshortened_path_shorten_string unshortened_path_format_shorten_string shortened_path\n\n    while [[ -n $path_to_proccess ]]; do\n\n        if [[ ${path_to_proccess:0:1} == \"/\" ]]; then\n            # Start of root\n            current_directory=\"/\"\n        else\n            current_directory=${path_to_proccess%%/*}\n            if [[ -n $current_path && $current_path != \"/\" ]]; then\n                current_path+=\"/\"\n            fi\n        fi\n\n        directory_count+=1\n        current_path+=${current_directory}\n        path_to_proccess=${path_to_proccess#*/}\n\n        if [[ $current_path == \"$vcs_root_directory\" ]]; then\n            __lp_end_path_left_shortening\n            # No shortening\n            lp_path+=$current_directory\n            __lp_escape \"$current_directory\"\n            lp_path_format+=\"${vcs_root_format}\"\n        elif [[ -z $path_to_proccess ]]; then\n            __lp_end_path_left_shortening\n            # Last directory\n            lp_path+=$current_directory\n            __lp_escape \"$current_directory\"\n            lp_path_format+=\"${last_directory_format}\"\n        elif (( LP_ENABLE_SHORTEN_PATH && directory_count > LP_PATH_KEEP \\\n            && ( shortened_path_length > max_len || ( shortened_path_length >= max_len && is_shortening ) ) )); then\n\n            if [[ $LP_PATH_METHOD == \"truncate_chars_to_unique_dir\" ]] && \\\n                __lp_get_unique_directory \"$current_path\"; then\n\n                lp_path+=$lp_unique_directory\n                __lp_escape \"$lp_unique_directory\"\n                lp_path_format+=\"${shortened_directory_format}\"\n                shortened_path_length=$(( shortened_path_length - ${#current_directory} + ${#lp_unique_directory} ))\n            elif [[ $LP_PATH_METHOD == \"truncate_chars_from_path_left\" ]]; then\n                # The only way to know if this consecutive directory shortening\n                # will actually shorten the path is to both do it and do not and\n                # compare at the end.\n\n                if (( ! is_shortening )); then\n                    unshortened_path_shorten_string=\n                    unshortened_path_format_shorten_string=\n                    unshortened_path_length=$shortened_path_length\n                    shortened_path_length+=${#LP_MARK_SHORTEN_PATH}\n                fi\n                needed_length=$(( shortened_path_length - max_len ))\n\n                unshortened_path_shorten_string+=\"${current_directory}/\"\n                unshortened_path_format_shorten_string+=\"${path_format}${current_directory}${separator_format}${separator}\"\n\n                if (( needed_length >= ${#current_directory} )); then\n                    # One directory was not enough, need to shorten more.\n                    # Shorten by current directory length plus separator.\n                    shortened_path_length=$(( shortened_path_length - ${#current_directory} - ${#separator} ))\n                    is_shortening=1\n                else\n                    # Do not need to check if the shortened version is actually shorter.\n                    # If we got to here, it wasn't a forced ending, which means it is.\n                    shortened_path_length=$(( shortened_path_length - needed_length ))\n\n                    shortened_path=\"${LP_MARK_SHORTEN_PATH}${current_directory:$needed_length}\"\n                    lp_path+=$shortened_path\n                    __lp_escape \"$shortened_path\"\n                    lp_path_format+=\"${shortened_directory_format}\"\n\n                    is_shortening=0\n                fi\n            elif [[ $LP_PATH_METHOD == \"truncate_chars_from_dir_right\" ]] && \\\n                (( ${#LP_MARK_SHORTEN_PATH} + LP_PATH_CHARACTER_KEEP < ${#current_directory} )); then\n\n                shortened_path=\"${current_directory:0:$LP_PATH_CHARACTER_KEEP}${LP_MARK_SHORTEN_PATH}\"\n                lp_path+=$shortened_path\n                __lp_escape \"$shortened_path\"\n                lp_path_format+=\"${shortened_directory_format}\"\n                shortened_path_length=$(( shortened_path_length - ${#current_directory} + ${#LP_MARK_SHORTEN_PATH} + LP_PATH_CHARACTER_KEEP ))\n            elif [[ $LP_PATH_METHOD == \"truncate_chars_from_dir_middle\" ]] && \\\n                (( ${#LP_MARK_SHORTEN_PATH} + LP_PATH_CHARACTER_KEEP * 2 < ${#current_directory} )); then\n\n                shortened_path=\"${current_directory:0:$LP_PATH_CHARACTER_KEEP}${LP_MARK_SHORTEN_PATH}${current_directory: -$LP_PATH_CHARACTER_KEEP}\"\n                lp_path+=$shortened_path\n                __lp_escape \"$shortened_path\"\n                lp_path_format+=\"${shortened_directory_format}\"\n                shortened_path_length=$(( shortened_path_length - ${#current_directory} + ${#LP_MARK_SHORTEN_PATH} + LP_PATH_CHARACTER_KEEP * 2 ))\n            else\n                # Need to shorten, but no method matched, or the matched method\n                # did not make the string any shorter.\n                lp_path+=$current_directory\n                __lp_escape \"$current_directory\"\n                lp_path_format+=\"${path_format}\"\n            fi\n        else\n            __lp_end_path_left_shortening\n            lp_path+=$current_directory\n            __lp_escape \"$current_directory\"\n            lp_path_format+=\"${path_format}\"\n        fi\n\n        if (( ! is_shortening )); then\n\n            _lp_create_link_path \"$ret\"\n            lp_path_format+=\"$lp_link_path\"\n\n            if [[ -n $path_to_proccess && ( $current_path != \"/\" || $separator != \"/\" ) ]]; then\n                if [[ $current_path != \"/\" ]]; then\n                    lp_path+=\"/\"\n                fi\n                lp_path_format+=\"${separator_format}${separator}\"\n            fi\n        fi\n    done\n}\n\n###############\n# Environment #\n###############\n\n# If we are connected with a X11 support\n_lp_connected_display() {\n    (( LP_ENABLE_DISPLAY )) || return 2\n    [[ -n \"${DISPLAY-}\" ]]\n}\n\n_lp_connection() {\n    if [[ -n \"${SSH_CLIENT-}${SSH2_CLIENT-}${SSH_TTY-}\" ]]; then\n        lp_connection=ssh\n        return\n    elif [[ -n ${REMOTEHOST-} ]]; then\n        lp_connection=tel  # Telnet\n        return\n    fi\n\n    local sess_parent=\"$(ps -o comm= -p \"$PPID\" 2> /dev/null)\"\n    if [[ \"$sess_parent\" = \"su\" || \"$sess_parent\" = \"sudo\" ]]; then\n        lp_connection=su   # su/sudo\n    else\n        lp_connection=lcl  # Local\n    fi\n}\n\n_lp_chroot() {\n    (( LP_ENABLE_CHROOT )) || return 2\n    if [[ -r /etc/debian_chroot ]]; then\n        IFS= read -r lp_chroot </etc/debian_chroot\n        if [[ -n \"$lp_chroot\" ]]; then\n            local ret\n            __lp_escape \"$lp_chroot\"\n            lp_chroot=$ret\n            return 0\n        fi\n    fi\n    return 1\n}\n\n_lp_error() {\n    (( LP_ENABLE_ERROR )) || return 2\n\n    (( lp_error != 0 ))\n}\n\n_lp_error_color() {\n    _lp_error || return \"$?\"\n\n    lp_error_color=\"${LP_COLOR_ERR}${lp_error}${NO_COL}\"\n}\n\n_lp_error_meaning() {\n    # Reasonable codes for a POSIX env.\n\n    (( LP_ENABLE_ERROR_MEANING )) || return 2\n\n    (( lp_error != 0 )) || return 1\n\n    local meaning=\n    case $lp_error in\n        # Common\n        1 )\n            meaning=\"error\"        #1\n            ;;\n        2 )\n            meaning=\"usage\"        #2\n            ;;\n        126 )\n            meaning=\"no perm\"      #126\n            ;;\n        127 )\n            meaning=\"not found\"    #127\n            ;;\n        128 )\n            meaning=\"bad exit\"     #128\n            ;;\n\n        # Portable and meaningful codes from signal.h:\n        130 )\n            meaning=\"interrupted\"  #128+2  SIGINT    Ctrl-C\n            ;;\n        131 )\n            meaning=\"quit\"         #128+3  SIGQUIT\n            ;;\n        137 )\n            meaning=\"killed\"       #128+9  SIGKILL\n            ;;\n        139 )\n            meaning=\"segfault\"     #128+11 SIGSEGV\n            ;;\n        143 )\n            meaning=\"terminated\"   #128+15 SIGTERM\n            ;;\n        141 )\n            meaning=\"pipe\"         #128+13 SIGPIPE\n            ;;\n        # Not including the widespread SIGUSR* because they are not portable across architectures.\n\n        *)\n            if ((LP_ENABLE_ERROR_MEANING_EXTENDED)); then\n                case $lp_error in\n\n                    # sysexit.h\n                    64 )\n                        meaning=\"usage\"        #64+0\n                        ;;\n                    65 )\n                        meaning=\"data format\"  #64+1\n                        ;;\n                    66 )\n                        meaning=\"no input\"     #64+2\n                        ;;\n                    67 )\n                        meaning=\"no user\"      #64+3\n                        ;;\n                    68 )\n                        meaning=\"no host\"      #64+4\n                        ;;\n                    69 )\n                        meaning=\"unavailable\"  #64+5\n                        ;;\n                    70 )\n                        meaning=\"internal\"     #64+6\n                        ;;\n                    71 )\n                        meaning=\"OS error\"     #64+7\n                        ;;\n                    72 )\n                        meaning=\"OS file\"      #64+8\n                        ;;\n                    73 )\n                        meaning=\"file create\"  #64+9\n                        ;;\n                    74 )\n                        meaning=\"I/O err\"      #64+10\n                        ;;\n                    75 )\n                        meaning=\"temporary\"    #64+11\n                        ;;\n                    76 )\n                        meaning=\"protocol\"     #64+12\n                        ;;\n                    77 )\n                        meaning=\"no perm\"      #64+13\n                        ;;\n                    78 )\n                        meaning=\"bad config\"   #64+14\n                        ;;\n\n                    # signal.h for POSIX on x86/ARM (from `man 7 signal`)\n                    # The OS will exit with 128 + the actual signal ID.\n                    # [action] indicates the default OS action, ignored/continue are not raised up to the shell,\n                    # and thus may be commented out if needed (but the OS config may differ, so they are kept here).\n                    129 )\n                        meaning=\"hangup\"       #128+1  SIGHUP\n                        ;;\n                    132 )\n                        meaning=\"illegal\"      #128+4  SIGILL\n                        ;;\n                    133 )\n                        meaning=\"trap\"         #128+5  SIGTRAP\n                        ;;\n                    134 )\n                        meaning=\"I/O trap\"     #128+6  SIGIOT\n                        ;;\n                    135 )\n                        meaning=\"bus\"          #128+7  SIGBUS    (10, on SPARC, MIPS and RISC)\n                        ;;\n                    136 )\n                        meaning=\"arithmetic\"   #128+8  SIGFPE\n                        ;;\n                    138 )\n                        meaning=\"user 1\"       #128+10 SIGUSR1   (30 on SPARC, 16 on MIPS & RISC)\n                        ;;\n                    140 )\n                        meaning=\"user 2\"       #128+12 SIGUSR2   (31 on SPARC, 17 on MIPS & RISC)\n                        ;;\n                    142 )\n                        meaning=\"alarm\"        #128+14 SIGALRM\n                        ;;\n                    144 )\n                        meaning=\"stack fault\"  #128+16 SIGSTKFLT (7 on RISC, not on SPARC & MPIS)\n                        ;;\n                    145 )\n                        meaning=\"child\"        #128+17 SIGCHLD   (20 on SPARC, 18 on MIPS & RISC)      [ignored ]\n                        ;;\n                    146 )\n                        meaning=\"continue\"     #128+18 SIGCONT   (19 on SPARC, 25 on MIPS, 26 on RISC) [continue]\n                        ;;\n                    147 )\n                        meaning=\"stop\"         #128+19 SIGSTOP   (17 on SPARC, 23 on MIPS, 24 on RISC)\n                        ;;\n                    148 )\n                        meaning=\"term stop\"    #128+20 SIGTSTP   (18 on SPARC, 24 on MIPS, 25 on RISC)\n                        ;;\n                    149 )\n                        meaning=\"bckgrd read\"  #128+21 SIGTTIN   (26 on MIPS, 27 on RISC)\n                        ;;\n                    150 )\n                        meaning=\"bckgrd write\" #128+22 SIGTTOU   (27 on MIPS, 28 on RISC)\n                        ;;\n                    151 )\n                        meaning=\"socket\"       #128+23 SIGURG    (16 on SPARC, 21 on MIPS, 29 on RISC) [ignored ] +BSD\n                        ;;\n                    152 )\n                        meaning=\"CPU limit\"    #128+24 SIGXCPU   (30 on MIPS, 12 on RISC)\n                        ;;\n                    153 )\n                        meaning=\"file size\"    #128+25 SIGXFSZ   (31 on MIPS, 30 on SPARC)                        +BSD\n                        ;;\n                    154 )\n                        meaning=\"virt. alarm\"  #128+26 SIGVTALRM (28 o MIPS, 20 on RISC)                          +BSD\n                        ;;\n                    155 )\n                        meaning=\"profilr time\" #128+27 SIGPROF   (29 on MIPS, 21 on RISC)\n                        ;;\n                    156 )\n                        meaning=\"win resize\"   #128+28 SIGWINCH  (20 on MIPS, 23 on RISC)              [ignored ] +BSD, Sun\n                        ;;\n                    157 )\n                        meaning=\"I/O allowed\"  #128+29 SIGIO     (23 on SPARC, 22 on MIPS & RISC)                 +BSD\n                        ;;\n                    158 )\n                        meaning=\"power fail\"   #128+30 SIGPWR    (29 on SPARC, 19 on MIPS & RISC)\n                        ;;\n                    159 )\n                        meaning=\"bad sys call\" #128+31 SIGSYS    (12 on SPARC & MIPS)\n                        ;;\n                    *)\n                        return 1 # No known error meaning.\n                        ;;\n                esac\n            else\n                return 1 # We do not want to display those error meanings.\n            fi\n            ;; # End of * for simple case switch.\n    esac\n    lp_error_meaning=\"${meaning}\"\n}\n\n_lp_error_meaning_color() {\n    _lp_error_meaning || return \"$?\"\n    # Not sure if we would want to make the parentheses configurable.\n    # Assumed no, as the meaning is straightforward and this function is simple to bypass in a theme.\n    lp_error_meaning_color=\"${LP_COLOR_ERR_MEANING}(${lp_error_meaning})${NO_COL}\"\n}\n\n# Use --internal to avoid being disabled by LP_ENABLE_MULTIPLEXER.\n# Note: this still tests for LP_ENABLE_SCREEN_TITLE and LP_ENABLE_TMUX_TITLE_PANES.\n# shellcheck disable=SC2034\n_lp_multiplexer() { # [--internal]\n    if [[ ${1-} == \"--internal\" ]]; then\n        (( LP_ENABLE_SCREEN_TITLE || LP_ENABLE_TMUX_TITLE_PANES )) || return 2\n    else\n        (( LP_ENABLE_MULTIPLEXER )) || return 2\n    fi\n\n    if [[ -n ${TMUX-} ]]; then\n        lp_multiplexer=tmux\n        return 0\n    elif [[ \"${TERM-}\" == screen* ]]; then\n        lp_multiplexer=screen\n        return 0\n    elif [[ -n ${SHPOOL_SESSION_NAME-} ]]; then\n        lp_multiplexer=shpool\n        return 0\n    fi\n    return 1\n}\n\n_lp_http_proxy() {\n    (( LP_ENABLE_PROXY )) || return 2\n\n    if [[ -n \"${http_proxy-}${HTTP_PROXY-}${https_proxy-}${HTTPS_PROXY-}${all_proxy-}${ALL_PROXY-}\" ]]; then\n        local ret\n        __lp_escape \"${http_proxy:-${HTTP_PROXY:-${https_proxy:-${HTTPS_PROXY:-${all_proxy:-$ALL_PROXY}}}}}\"\n        # shellcheck disable=SC2034\n        lp_http_proxy=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_http_proxy_color() {\n    _lp_http_proxy || return \"$?\"\n\n    lp_http_proxy_color=\"${LP_COLOR_PROXY}${LP_MARK_PROXY}${NO_COL}\"\n}\n\n_lp_env_vars() { # [color_set, [color_unset, [end_color]]]\n    # Expects LP_ENV_VARS to be an array containing items of the form:\n    # \"<ENV_VAR_NAME> <string if set>[ <string if unset>]\"\n    # Strings may be `%s`, which will be replaced by the variable's actual content.\n    # <end_color> is added after each variable.\n    # If end_color is not passed, it will default to $NO_COL.\n\n    (( LP_ENABLE_ENV_VARS )) || return 2\n\n    local color_set=\"${1-}\"\n    local color_unset=\"${2-}\"\n    local color_no=\"${3-$NO_COL}\"\n    if [[ -z \"$color_set\" && -z \"$color_unset\" ]]; then\n        color_no=\"\"\n    fi\n\n    local var_rep var evar fmt_if_set fmt_if_unset\n\n    lp_env_vars=()\n    # For all user-defined setup.\n    for var_rep in ${LP_ENV_VARS[@]+\"${LP_ENV_VARS[@]}\"}; do\n        IFS=' ' read -r var fmt_if_set fmt_if_unset <<<\"$var_rep\"\n        # Variable name and set format has to be set, but unset format is optional.\n        if [[ -n \"${var}\" && -n \"${fmt_if_set}\" ]]; then\n            # Expands the underlying variable name.\n            local var_is_set=\n            if (( _LP_SHELL_zsh )); then\n                # From https://www.shellcheck.net/wiki/SC2296 :\n                # \"Some Zsh specific parameter expansions like ${(q)value} trigger this warning,\n                # but ShellCheck does not support Zsh.\"\n                # shellcheck disable=SC2296\n                var_is_set=\"${(P)var+IS_SET}\"\n            else\n                # NOTE: indirection expansion are deprecated starting at bash 4.3, should use nameref.\n                var_is_set=\"${!var+IS_SET}\"\n            fi\n\n            if [[ -n \"$var_is_set\" ]]; then\n                if [[ \"${fmt_if_set}\" == *\"%s\"* ]]; then\n                    local evar=\n                    if (( _LP_SHELL_zsh )); then\n                        # shellcheck disable=SC2296\n                        evar=\"${(P)var}\"\n                    else\n                        evar=\"${!var}\"\n                    fi\n                    # Print content.\n                    lp_env_vars+=( \"${color_set}${fmt_if_set/\\%s/${evar}}${color_no}\" )\n                else\n                    # Print tag.\n                    lp_env_vars+=( \"${color_set}${fmt_if_set}${color_no}\" )\n                fi\n            elif [[ -n \"$fmt_if_unset\" ]]; then\n                # Print default.\n                lp_env_vars+=( \"${color_unset}${fmt_if_unset}${color_no}\" )\n            fi\n        fi\n    done\n    if [[ -z \"${lp_env_vars-}\" ]]; then\n        return 1\n    fi\n}\n\n_lp_env_vars_color() {\n    if _lp_env_vars \"${LP_COLOR_ENV_VARS_SET}\" \"${LP_COLOR_ENV_VARS_UNSET}\"; then\n        _lp_join \"${LP_MARK_ENV_VARS_SEP}\" \"${lp_env_vars[@]}\"\n        lp_env_vars_color=\"${LP_MARK_ENV_VARS_OPEN}${lp_join}${LP_MARK_ENV_VARS_CLOSE}\"\n    else\n        return \"$?\"\n    fi\n}\n\n\n_lp_python_env() {\n    (( LP_ENABLE_VIRTUALENV )) || return 2\n\n    local ret\n\n    # Truncate to the last '/' section, which is the directory name.\n    if [[ -n \"${VIRTUAL_ENV-}\" ]]; then\n        virtualenv_config=\"${VIRTUAL_ENV}/pyvenv.cfg\"\n        if [[ -r \"$virtualenv_config\" ]]; then\n            local line\n            while IFS='' read -r line ; do\n                if [[ $line == \"prompt\"*\"=\"* ]]; then\n                    line=\"${line#\"prompt\"*\"=\"}\"\n                    line=\"${line#[[:space:]]}\"\n                    line=\"${line#[\\'\\\"]}\"\n                    line=\"${line%[\\'\\\"]}\"\n                    __lp_escape \"$line\"\n                    break\n                fi\n            done <\"$virtualenv_config\"\n        fi\n\n        if [[ -z \"${ret-}\" ]]; then\n            __lp_escape \"${VIRTUAL_ENV##*/}\"\n        fi\n\n        lp_python_env=$ret\n    elif [[ -n \"${CONDA_DEFAULT_ENV-}\" ]]; then\n        __lp_escape \"${CONDA_DEFAULT_ENV##*/}\"\n        lp_python_env=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_python_env_color() {\n    unset lp_python_env_color\n    _lp_python_env || return \"$?\"\n\n    lp_python_env_color=\"${LP_COLOR_VIRTUALENV}${lp_python_env}${NO_COL}\"\n}\n\n_lp_node_env() {\n    (( LP_ENABLE_NODE_VENV )) || return 2\n\n    local ret\n\n    if [[ -n \"${NODE_VIRTUAL_ENV-}\" ]]; then\n        # Truncate to the last '/' section, which is the directory name.\n        __lp_escape \"${NODE_VIRTUAL_ENV##*/}\"\n        lp_node_env=$ret\n    elif [[ -n \"${NVM_BIN-}\" ]]; then\n        # Get the version string from the path.\n        ret=\"${NVM_BIN##*/node/}\"\n        __lp_escape \"${ret%/bin}\"\n        lp_node_env=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_node_env_color() {\n    unset lp_node_env_color\n    _lp_node_env || return \"$?\"\n\n    lp_node_env_color=\"${LP_COLOR_NODE_VENV}${lp_node_env}${NO_COL}\"\n}\n\n_lp_perl_env() {\n    (( LP_ENABLE_PERL_VENV )) || return 2\n\n    local ret\n\n    if [[ \"$_LP_PERL_VENV_PROGRAM\" = \"perlbrew\" ]] ; then\n        local perlbrew_perl_ver=\"$(perlbrew use)\"\n\n        if [[ \"$perlbrew_perl_ver\" == \"Currently using system perl\" ]]; then\n            return 1\n        fi\n\n        # Example: Currently using perl-5.38.0\n        __lp_escape \"${perlbrew_perl_ver##*perl-}\"\n        lp_perl_env=$ret\n    elif [[ \"$_LP_PERL_VENV_PROGRAM\" = \"plenv\" ]] ; then\n        local plenv_ver=\"$(plenv version-name)\"\n\n        if [[ \"$plenv_ver\" == \"system\" ]]; then\n            return 1\n        fi\n\n        __lp_escape \"$plenv_ver\"\n        lp_perl_env=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_perl_env_color() {\n    unset lp_perl_env_color\n    _lp_perl_env || return \"$?\"\n\n    lp_perl_env_color=\"${LP_COLOR_PERL_VENV}${lp_perl_env}${NO_COL}\"\n}\n\n_lp_ruby_env() {\n    (( LP_ENABLE_RUBY_VENV )) || return 2\n\n    local ret\n\n    if [[ \"$_LP_RUBY_VENV_PROGRAM\" = \"rvm\" ]] ; then\n        local rvm_ver=\"$(rvm-prompt \"${LP_RUBY_RVM_PROMPT_OPTIONS[@]}\")\"\n\n        # Will return nothing if 's' is not in the options, and \"system\" if it is.\n        if [[ -z \"$rvm_ver\" || \"$rvm_ver\" == \"system\" ]]; then\n            return 1\n        fi\n\n        __lp_escape \"$rvm_ver\"\n        lp_ruby_env=$ret\n    elif [[ \"$_LP_RUBY_VENV_PROGRAM\" = \"rbenv\" ]] ; then\n        local rbenv_ver=\"$(rbenv version-name)\"\n\n        if [[ \"$rbenv_ver\" == \"system\" ]]; then\n            return 1\n        fi\n\n        __lp_escape \"$rbenv_ver\"\n        lp_ruby_env=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_ruby_env_color() {\n    unset lp_ruby_env_color\n    _lp_ruby_env || return \"$?\"\n\n    lp_ruby_env_color=\"${LP_COLOR_RUBY_VENV}${lp_ruby_env}${NO_COL}\"\n}\n\n_lp_terraform_env() {\n    (( LP_ENABLE_TERRAFORM )) || return 2\n\n    local ret\n\n    if [[ -d .terraform ]]; then\n        local _tf_workspace\n        _tf_workspace=\"$(\\terraform workspace show 2>/dev/null)\"\n        if [[ -n \"$_tf_workspace\" ]]; then\n            __lp_escape \"${_tf_workspace}\"\n            lp_terraform_env=$ret\n        else\n            return 1\n        fi\n    else\n        return 1\n    fi\n}\n\n_lp_terraform_env_color() {\n    unset lp_terraform_env_color\n    _lp_terraform_env || return \"$?\"\n\n    lp_terraform_env_color=\"${LP_COLOR_TERRAFORM}${lp_terraform_env}${NO_COL}\"\n}\n\n_lp_software_collections() {\n    (( LP_ENABLE_SCLS )) || return 2\n\n    if [[ -n \"${X_SCLS-}\" ]]; then\n        local ret\n        __lp_escape \"${X_SCLS%\"${X_SCLS##*[![:space:]]}\"}\"\n        lp_software_collections=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_software_collections_color() {\n    unset lp_software_collections_color\n    _lp_software_collections || return \"$?\"\n\n    lp_software_collections_color=\"${LP_COLOR_VIRTUALENV}${lp_software_collections}${NO_COL}\"\n}\n\n_lp_kubernetes_context() {\n    (( LP_ENABLE_KUBECONTEXT )) || return 2\n\n    local kubernetes_context\n\n    if (( LP_ENABLE_KUBE_NAMESPACE )); then\n        local line kubernetes_namespace\n        line=$(kubectl config view --minify --output \\\n            'jsonpath={.current-context}{\"/\"}{..namespace}' 2>/dev/null) || return 1\n        kubernetes_context=${line%/*}\n        kubernetes_namespace=${line##*/}\n    else\n        kubernetes_context=$(kubectl config current-context 2>/dev/null) || return 1\n    fi\n\n    if [[ -n \"$LP_DELIMITER_KUBECONTEXT_PREFIX\" ]]; then\n        # shellcheck disable=SC2295\n        kubernetes_context=\"${kubernetes_context##*${LP_DELIMITER_KUBECONTEXT_PREFIX}}\"\n    fi\n\n    if [[ -n \"$LP_DELIMITER_KUBECONTEXT_SUFFIX\" ]]; then\n        # shellcheck disable=SC2295\n        kubernetes_context=\"${kubernetes_context%%${LP_DELIMITER_KUBECONTEXT_SUFFIX}*}\"\n    fi\n\n    local ret\n    __lp_escape \"$kubernetes_context\"\n    lp_kubernetes_context=$ret\n\n    if [[ -n ${kubernetes_namespace-} ]]; then\n        __lp_escape \"$kubernetes_namespace\"\n        lp_kubernetes_namespace=$ret\n    else\n        unset lp_kubernetes_namespace\n    fi\n}\n\n_lp_kubernetes_context_color() {\n    unset lp_kubernetes_context_color\n    _lp_kubernetes_context || return \"$?\"\n\n    lp_kubernetes_context_color=\"${LP_MARK_KUBECONTEXT}${LP_COLOR_KUBECONTEXT}${lp_kubernetes_context}${lp_kubernetes_namespace+:}${lp_kubernetes_namespace-}${NO_COL}\"\n}\n\n_lp_aws_profile() {\n    (( LP_ENABLE_AWS_PROFILE )) || return 2\n\n    local ret\n\n    local aws_profile=\"${AWS_PROFILE-${AWS_DEFAULT_PROFILE-${AWS_VAULT-}}}\"\n    if [[ -n $aws_profile ]]; then\n        __lp_escape \"${aws_profile}\"\n        lp_aws_profile=$ret\n    else\n        return 1\n    fi\n}\n\n_lp_aws_profile_color() {\n    unset lp_aws_profile_color\n    _lp_aws_profile || return \"$?\"\n\n    lp_aws_profile_color=\"${LP_COLOR_AWS_PROFILE}${lp_aws_profile}${NO_COL}\"\n}\n\n\n_lp_cmake() {\n    ((  LP_ENABLE_CMAKE  )) || return 2\n    [[ -f CMakeCache.txt ]] || return 1\n\n    _lp_grep_fields \"CMakeCache.txt\" \"=\" \"CMAKE_C_COMPILER:FILEPATH\"  \"CMAKE_CXX_COMPILER:FILEPATH\" \"CMAKE_GENERATOR:INTERNAL\" \"CMAKE_BUILD_TYPE:STRING\"\n\n    local cmake_c_compiler=${lp_grep_fields[_LP_FIRST_INDEX+0]-}\n    lp_cmake_c_compiler=\"${cmake_c_compiler##*/}\" # Only the part after the last slash.\n\n    local cmake_cxx_compiler=${lp_grep_fields[_LP_FIRST_INDEX+1]-}\n    lp_cmake_cxx_compiler=\"${cmake_cxx_compiler##*/}\" # Only the part after the last slash.\n\n    local cmake_generator=${lp_grep_fields[_LP_FIRST_INDEX+2]-}\n    # Shorten: Makefiles -> Make, and Visual Studio -> VS.\n    cmake_generator=\"${cmake_generator/%Makefiles/Make}\"\n    cmake_generator=\"${cmake_generator/#Visual Studio/VS}\"\n    # Remove all white spaces.\n    lp_cmake_generator=\"${cmake_generator// /}\"\n\n    lp_cmake_buildtype=${lp_grep_fields[_LP_FIRST_INDEX+3]-}\n    [[ -n \"${lp_cmake_c_compiler}${lp_cmake_cxx_compiler}${lp_cmake_generator}${lp_cmake_buildtype}\" ]] || return 1\n}\n\n_lp_cmake_color() {\n    unset lp_cmake_color\n    _lp_cmake || return \"$?\"\n\n    local lp_hash_color\n\n    lp_cmake_color=\"\"\n\n    if [[ -n \"$lp_cmake_c_compiler\" ]] ; then\n        _lp_hash_color \"$lp_cmake_c_compiler\"\n        lp_cmake_color+=\"${lp_hash_color}${LP_MARK_CMAKE}\"\n    fi\n\n    if [[ -n \"$lp_cmake_cxx_compiler\" ]] ; then\n        _lp_hash_color \"$lp_cmake_cxx_compiler\"\n        lp_cmake_color+=\"${lp_hash_color}${LP_MARK_CMAKE}\"\n    fi\n\n    if [[ -n \"$lp_cmake_generator\" ]] ; then\n        _lp_hash_color \"$lp_cmake_generator\"\n        lp_cmake_color+=\"$lp_hash_color${LP_MARK_CMAKE}\"\n    fi\n\n    if [[ -n \"$lp_cmake_buildtype\" ]] ; then\n        if [[ \"$lp_cmake_buildtype\" == \"Release\" ]] ; then\n            lp_cmake_color+=\"${LP_COLOR_CMAKE_RELEASE}${lp_cmake_buildtype}${NO_COL}\"\n        elif [[ \"$lp_cmake_buildtype\" == \"RelWithDebInfo\" ]] ; then\n            lp_cmake_color+=\"${LP_COLOR_CMAKE_RWDI}${lp_cmake_buildtype}${NO_COL}\"\n        elif [[ \"$lp_cmake_buildtype\" == \"Debug\" ]] ; then\n            lp_cmake_color+=\"${LP_COLOR_CMAKE_DEBUG}${lp_cmake_buildtype}${NO_COL}\"\n        else\n            _lp_hash_color \"$lp_cmake_buildtype\"\n            lp_cmake_color+=\"$lp_hash_color\"\n        fi\n    fi\n}\n\n_lp_modules() {\n    (( LP_ENABLE_MODULES )) || return 2\n    lp_modules=()\n    # # Module sets the LOADEDMODULES environment variable.\n    if [[ -n \"${LOADEDMODULES-}\" ]]; then\n        # Outer test should be faster.\n        if (( LP_ENABLE_MODULES_VERSIONS )); then\n            local IFS=':'\n            for mod in $LOADEDMODULES; do\n                lp_modules+=(\"${mod}\")\n            done\n        else\n            local IFS=':'\n            for mod in $LOADEDMODULES; do\n                # Simply remove the part after the slash.\n                # Should work on both Bash and Zsh.\n                lp_modules+=(\"${mod%/*}\")\n            done\n        fi\n        if (( ${#lp_modules[@]} == 0 )); then\n            return 1\n        fi\n    else\n        return 1\n    fi\n}\n\n_lp_modules_color() {\n    lp_modules_color=\n    if _lp_modules; then\n        if (( LP_ENABLE_COLOR )); then\n            local lp_join\n            if (( LP_ENABLE_MODULES_HASHCOLOR )); then\n                local modules=()\n                for mod in \"${lp_modules[@]}\"; do\n                    _lp_hash_color \"${mod}\"\n                    modules+=(\"${lp_hash_color}\")\n                done\n                # Do not color marks and separators.\n                _lp_join \"${NO_COL}${LP_MARK_MODULES_SEP}\" \"${modules[@]}\"\n                lp_modules_color=\"${LP_MARK_MODULES_OPEN}${lp_join}${NO_COL}${LP_MARK_MODULES_CLOSE}\"\n            else # No hashcolor.\n                _lp_join \"${NO_COL}${LP_MARK_MODULES_SEP}${LP_COLOR_MODULES}\" \"${lp_modules[@]}\"\n                lp_modules_color=\"${LP_MARK_MODULES_OPEN}${LP_COLOR_MODULES}${lp_join}${NO_COL}${LP_MARK_MODULES_CLOSE}\"\n            fi\n        else # No color.\n            _lp_join \"${LP_MARK_MODULES_SEP}\" \"${lp_modules[@]}\"\n            lp_modules_color=\"${LP_MARK_MODULES_OPEN}${lp_join}${LP_MARK_MODULES_CLOSE}\"\n        fi\n    else\n        return \"$?\"\n    fi\n}\n\n\n# Same as bash '\\l', but can be inlined as a constant as the value will not\n# change during the shell's life.\n_lp_terminal_device() {\n    lp_terminal_device=\"$(basename -- \"$(tty)\" 2>/dev/null)\"\n}\n\n# Determine what type of user we are\n_lp_user() {\n    if (( EUID == 0 )); then\n        # user is root\n        return 2\n    elif [[ \"${USER-}\" != \"$(logname 2>/dev/null || printf '%s' \"${LOGNAME-}\")\" ]]; then\n        # user is not login user\n        return 1\n    else\n        return 0\n    fi\n}\n\n# Return the username (if we should display one).\n_lp_username() {\n    if (( LP_USER_ALWAYS == -1 )); then\n        # No username ever\n        return 2\n    elif (( LP_USER_ALWAYS )) || ! _lp_user; then\n        lp_username=${USER:-${USERNAME:-${LOGNAME-}}}\n\n        if [[ -z $lp_username ]]; then\n            lp_username=$(id -nu 2>/dev/null)\n        fi\n\n        local ret\n        __lp_escape \"$lp_username\"\n        lp_username=$ret\n\n        return 0\n    else\n        return 1\n    fi\n}\n\n_lp_username_color() {\n    _lp_username || return \"$?\"\n\n    lp_username_color=\"${LP_COLOR_USER}${lp_username}${NO_COL}\"\n}\n\n# Test the code with the commands:\n#   sudo id   # sudo, enter your credentials\n#   sudo -K   # revoke your credentials\n#   sudo -v   # return non-zero when no credentials are cached\n#   sudo -nvk # return true if user can run commands without password input\n_lp_sudo_active() {\n    (( LP_ENABLE_SUDO )) || return 2\n    (( _LP_SUDO_NOPASSWORD )) && return 0\n    \\sudo -nv 2>/dev/null || return 1\n}\n\n_lp_sudo_active_color() {\n    (( LP_ENABLE_SUDO )) || return 2\n\n    if _lp_sudo_active; then\n        lp_sudo_active_color=$LP_COLOR_MARK_SUDO\n    else\n        lp_sudo_active_color=$LP_COLOR_MARK_NO_SUDO\n    fi\n}\n\n_lp_hostname() {\n    # Only process hostname elements if we haven't turned them off\n    if (( LP_HOSTNAME_ALWAYS != -1 )); then\n        _lp_connection\n        if [[ $lp_connection == lcl ]] && ! (( LP_HOSTNAME_ALWAYS )); then\n            # no hostname if local\n            return 1\n        fi\n\n        if [[ $LP_HOSTNAME_METHOD == fqdn ]]; then\n            lp_hostname=$(hostname -f 2>/dev/null)\n        elif [[ $LP_HOSTNAME_METHOD == pretty ]]; then\n            if [[ $LP_OS == Darwin ]]; then\n                lp_hostname=$(scutil --get ComputerName 2>/dev/null)\n            else\n                lp_hostname=$(hostnamectl --pretty 2>/dev/null)\n            fi\n        fi\n\n        if [[ -z ${lp_hostname-} ]]; then\n            lp_hostname=${HOSTNAME:-${HOST-}}\n        fi\n\n        # Truncate to the first subdomain\n        if [[ $LP_HOSTNAME_METHOD == short ]]; then\n            lp_hostname=${lp_hostname%%.*}\n        fi\n\n        local ret\n        __lp_escape \"$lp_hostname\"\n        lp_hostname=$ret\n\n    else\n        return 2\n    fi\n}\n\n# Put the hostname if not locally connected\n# color it in cyan within SSH, and a warning red if within telnet\n# else display the host without color\n_lp_hostname_color() {\n    if _lp_connected_display; then\n        lp_hostname_color=\"${LP_COLOR_X11_ON}\"\n    else\n        lp_hostname_color=\"${LP_COLOR_X11_OFF}\"\n    fi\n\n    if _lp_chroot; then\n        lp_hostname_color+=\"(${lp_chroot})\"\n    fi\n\n    if _lp_hostname; then\n\n        case \"$lp_connection\" in\n        lcl)\n            lp_hostname_color+=\"@${LP_COLOR_HOST}${lp_hostname}${NO_COL}\"\n            ;;\n        ssh)\n            local client_ip client_port server_ip server_port hostname=\n            # client_* are unused\n            # shellcheck disable=SC2034\n            IFS=\" \" read -r client_ip client_port server_ip server_port <<<\"$SSH_CONNECTION\"\n            local username=${USER:-${USERNAME:-${LOGNAME-}}}\n            if _lp_create_link \"ssh://${username}@${server_ip}:${server_port}\" \"$lp_hostname\"; then\n                hostname=\"$lp_link\"\n            else\n                hostname=\"$lp_hostname\"\n            fi\n            # If we want a different color for each host\n            (( LP_ENABLE_SSH_COLORS )) && LP_COLOR_SSH=\"$LP_COLOR_HOST_HASH\"\n            lp_hostname_color+=\"@${LP_COLOR_SSH}${hostname}${NO_COL}\"\n            ;;\n        su)\n            lp_hostname_color+=\"@${LP_COLOR_SU}${lp_hostname}${NO_COL}\"\n            ;;\n        tel)\n            lp_hostname_color+=\"@${LP_COLOR_TELNET}${lp_hostname}${NO_COL}\"\n            ;;\n        *)\n            lp_hostname_color+=\"@${NO_COL}${lp_hostname}\" # defaults to no color\n            ;;\n        esac\n    else\n        if [[ -n ${lp_chroot-} ]]; then\n            # End the color of the chroot\n            lp_hostname_color+=${NO_COL}\n        else\n            # Nothing to display\n            lp_hostname_color=\"\"\n            return 1\n        fi\n    fi\n}\n\n_lp_dirstack() {\n    (( LP_ENABLE_DIRSTACK )) || return 2\n\n    local count dir_stack\n    dir_stack=$(dirs -p; printf x)\n\n    __lp_line_count \"${dir_stack%x}\"\n    lp_dirstack=$count\n\n    (( lp_dirstack > 1 ))\n}\n\n_lp_dirstack_color() {\n    _lp_dirstack || return \"$?\"\n\n    lp_dirstack_color=\"${LP_COLOR_DIRSTACK}${LP_MARK_DIRSTACK}${lp_dirstack}${NO_COL}\"\n}\n\n_lp_shell_level() {\n    (( LP_ENABLE_SHLVL )) || return 2\n\n    lp_shell_level=${SHLVL:-1}\n\n    (( lp_shell_level >= LP_SHLVL_THRESHOLD ))\n}\n\n_lp_shell_level_color() {\n    _lp_shell_level || return \"$?\"\n\n    lp_shell_level_color=\"${LP_COLOR_SHLVL}${LP_MARK_SHLVL}${lp_shell_level}${NO_COL}\"\n}\n\n################\n# Related jobs #\n################\n\n# Return the count of detached screen, tmux, and shpool sessions.\n_lp_detached_sessions() {\n    (( LP_ENABLE_DETACHED_SESSIONS )) || return 2\n\n    local -i count=0\n    (( _LP_ENABLE_SCREEN )) && count=$(screen -ls 2> /dev/null | GREP_OPTIONS='' \\grep -c '[Dd]etach[^)]*)$')\n    (( _LP_ENABLE_TMUX )) && count+=$(tmux list-sessions 2> /dev/null | GREP_OPTIONS='' \\grep -cv 'attached')\n    (( _LP_ENABLE_SHPOOL )) && count+=$(shpool list 2> /dev/null | GREP_OPTIONS='' \\grep -c 'disconnected')\n    lp_detached_sessions=$count\n\n    (( lp_detached_sessions ))\n}\n\n# Return the count of attached running shell jobs (started with $ myjob &) and/or\n# stopped jobs (suspended with Ctrl-Z).\n_lp_jobcount() {\n    (( LP_ENABLE_JOBS )) || return 2\n\n    local jobs\n    local -i count\n    # Count running jobs\n    # The $(...) syntax strips trailing newlines, so add a character to the end\n    # then remove it to prevent that. Otherwise 0 and 1 jobs look the same.\n    jobs=\"$(jobs -r; printf x)\"\n    __lp_line_count \"${jobs%x}\"\n    lp_running_jobs=$count\n\n    # Count stopped jobs\n    jobs=\"$(jobs -s; printf x)\"\n    __lp_line_count \"${jobs%x}\"\n    lp_stopped_jobs=$count\n\n    (( lp_running_jobs || lp_stopped_jobs ))\n}\n\n# Display the count of detached sessions and shell jobs if not zero.\n_lp_jobcount_color() {\n    (( LP_ENABLE_JOBS || LP_ENABLE_DETACHED_SESSIONS )) || return 2\n\n    lp_jobcount_color=\n\n    _lp_detached_sessions && lp_jobcount_color=\"${LP_COLOR_JOB_D}${lp_detached_sessions}d${NO_COL}\"\n\n    if _lp_jobcount; then\n        if (( lp_running_jobs > 0 )); then\n            [[ -n \"$lp_jobcount_color\" ]] && lp_jobcount_color+=\"$LP_MARK_JOBS_SEPARATOR\"\n            lp_jobcount_color+=\"${LP_COLOR_JOB_R}${lp_running_jobs}&${NO_COL}\"\n        fi\n        if (( lp_stopped_jobs > 0 )); then\n            [[ -n \"$lp_jobcount_color\" ]] && lp_jobcount_color+=\"$LP_MARK_JOBS_SEPARATOR\"\n            lp_jobcount_color+=\"${LP_COLOR_JOB_Z}${lp_stopped_jobs}z${NO_COL}\"\n        fi\n    fi\n\n    [[ -n \"$lp_jobcount_color\" ]]\n}\n\n######################\n# VCS branch display #\n######################\n\n_lp_are_vcs_enabled() {\n    local _path\n    for _path in ${LP_DISABLED_VCS_PATHS[@]+\"${LP_DISABLED_VCS_PATHS[@]}\"}; do\n        if [[ -n \"$_path\" && \"$PWD\" == \"$_path\"* ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\n# Search upwards through a directory structure looking for a sign of a VCS\n# repository. Used to avoid invoking VCS binaries to discover if in a repo.\n_lp_find_vcs() {\n    if ! _lp_are_vcs_enabled; then\n        lp_vcs_type=\"disabled\"\n        lp_vcs_root=\"\"\n        return 2\n    fi\n\n    lp_vcs_type=\"\"\n\n    # Based on the Git behavior here:\n    # https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables\n    if [[ -d \"${GIT_DIR-}\" ]]; then\n        lp_vcs_type=\"git\"\n        lp_vcs_dir=\"$GIT_DIR\"\n        lp_vcs_root=\"${GIT_WORK_TREE:-\"$(\\git rev-parse --show-toplevel 2>/dev/null)\"}\"\n    fi\n\n    if [[ -z $lp_vcs_type ]]; then\n        local vcs\n        lp_vcs_root=\"$PWD\"\n        while [[ -n \"$lp_vcs_root\" ]]; do\n            for vcs in ${_LP_ENABLED_VCSS[@]+\"${_LP_ENABLED_VCSS[@]}\"}; do\n                lp_vcs_dir=\"$lp_vcs_root/.$vcs\"\n                if [[ -d \"$lp_vcs_dir\" ]]; then\n                    lp_vcs_type=\"$vcs\"\n                    break 2\n                fi\n            done\n            unset lp_vcs_dir\n\n            if (( LP_ENABLE_GIT )) && [[ -f \"$lp_vcs_root/.git\" ]]; then\n                lp_vcs_type=\"git\"\n                lp_vcs_dir=\"$(\\git rev-parse --git-dir 2>/dev/null)\"\n                break\n            fi\n\n            if (( LP_ENABLE_FOSSIL )) && [[ -f \"$lp_vcs_root/_FOSSIL_\" || -f \"$lp_vcs_root/.fslckout\" ]]; then\n                lp_vcs_type=\"fossil\"\n                return 0\n            fi\n\n            lp_vcs_root=\"${lp_vcs_root%/*}\"\n        done\n    fi\n\n    if [[ $lp_vcs_type == git ]]; then\n        lp_vcs_specific_dir=\"$lp_vcs_dir\"\n        if [[ -f \"${lp_vcs_dir}/gitdir\" ]]; then\n            # Then this is a worktree, and the config exists two levels up.\n            lp_vcs_dir=\"${lp_vcs_dir}/../..\"\n        fi\n\n        if [[ -n \"${VCSH_DIRECTORY-}\" ]]; then\n            lp_vcs_subtype=\"vcsh\"\n        elif [[ -d \"${lp_vcs_dir}/svn\" ]]; then\n            lp_vcs_subtype=\"svn\"\n        else\n            lp_vcs_subtype=\"\"\n        fi\n    fi\n\n    if [[ -z $lp_vcs_type ]]; then\n        lp_vcs_root=\"\"\n        return 1\n    fi\n}\n\n# Set the prompt mark depending on the current VCS.\n# shellcheck disable=SC2120\n_lp_smart_mark() {\n    local subtype=\"${2:-\"${lp_vcs_subtype-}\"}\"\n    case \"${1:-$lp_vcs_type}\" in\n    git)\n        if [[ $subtype == vcsh ]]; then\n            lp_smart_mark=\"$LP_MARK_VCSH${VCSH_DIRECTORY-}$LP_MARK_GIT$LP_MARK_VCSH\"\n        elif [[ $subtype == svn ]]; then\n            lp_smart_mark=\"$LP_MARK_GIT$LP_MARK_SVN\"\n        else\n            lp_smart_mark=\"$LP_MARK_GIT\"\n        fi\n        ;;\n    hg)       lp_smart_mark=\"$LP_MARK_HG\"              ;;\n    svn)      lp_smart_mark=\"$LP_MARK_SVN\"             ;;\n    fossil)   lp_smart_mark=\"$LP_MARK_FOSSIL\"          ;;\n    bzr)      lp_smart_mark=\"$LP_MARK_BZR\"             ;;\n    disabled) lp_smart_mark=\"$LP_MARK_DISABLED\"        ;;\n    *)        lp_smart_mark=\"$LP_MARK_DEFAULT\"         ;;\n    esac\n}\n\n# GENERIC VCS #\n\n# Create a formatted string describing the status of the repo.\n_lp_vcs_details_color() {\n    local branch\n    if _lp_vcs_branch; then\n        branch=\"$lp_vcs_branch\"\n\n        if _lp_vcs_bookmark; then\n            branch+=\": $lp_vcs_bookmark\"\n        fi\n    elif _lp_vcs_bookmark; then\n        branch=\"$lp_vcs_bookmark\"\n    elif _lp_vcs_tag; then\n        branch=\"tag: $lp_vcs_tag\"\n    else\n        _lp_vcs_commit_id\n        branch=\"${lp_vcs_commit_id:0:7}\"\n    fi\n\n    lp_vcs_details_color=\"$LP_COLOR_UP\"\n\n    local has_commit=\n    if _lp_vcs_commits_off_remote; then\n        lp_vcs_details_color=\"$LP_COLOR_COMMITS_BEHIND\"\n        if [[ \"$lp_vcs_commit_ahead\" -ne \"0\" && \"$lp_vcs_commit_behind\" -ne \"0\" ]]; then\n            has_commit=\"${LP_COLOR_COMMITS}+$lp_vcs_commit_ahead${NO_COL}/${LP_COLOR_COMMITS_BEHIND}-$lp_vcs_commit_behind${NO_COL}\"\n        elif [[ \"$lp_vcs_commit_ahead\" -ne \"0\" ]]; then\n            has_commit=\"${LP_COLOR_COMMITS}$lp_vcs_commit_ahead${NO_COL}\"\n            lp_vcs_details_color=\"$LP_COLOR_COMMITS\"\n        elif [[ \"$lp_vcs_commit_behind\" -ne \"0\" ]]; then\n            has_commit=\"${LP_COLOR_COMMITS_BEHIND}-$lp_vcs_commit_behind${NO_COL}\"\n        fi\n    fi\n\n    local ret has_lines=\n    if _lp_vcs_uncommitted_files; then\n        _lp_vcs_unstaged_lines; ret=$?\n        # Only show unstaged changes if the VCS supports staging, otherwise\n        # show uncommitted changes\n        if (( ret == 0 )); then\n            has_lines=\"+$lp_vcs_unstaged_i_lines/-$lp_vcs_unstaged_d_lines\"\n        elif (( ret == 1 )); then\n            has_lines=\"+0/-0\"\n        else\n            _lp_vcs_uncommitted_lines\n            has_lines=\"+$lp_vcs_uncommitted_i_lines/-$lp_vcs_uncommitted_d_lines\"\n        fi\n        lp_vcs_details_color=\"$LP_COLOR_CHANGES\"\n    fi\n\n    lp_vcs_details_color+=\"$branch\"\n    if [[ -n \"$has_lines\" || -n \"$has_commit\" ]]; then\n        lp_vcs_details_color+=\"${NO_COL}(\"\n        if [[ -n \"$has_lines\" ]]; then\n            lp_vcs_details_color+=\"${LP_COLOR_DIFF}${has_lines}${NO_COL}${has_commit:+,}\"\n        fi\n        lp_vcs_details_color+=\"${has_commit})\"\n    fi\n\n    if _lp_vcs_stash_count; then\n        lp_vcs_details_color+=\"$LP_COLOR_COMMITS$LP_MARK_STASH\"\n    fi\n\n    if _lp_vcs_untracked_files; then\n        lp_vcs_details_color+=\"$LP_COLOR_CHANGES$LP_MARK_UNTRACKED\"\n    fi\n\n    if _lp_vcs_head_status; then\n        lp_vcs_details_color+=\" $LP_COLOR_CHANGES$lp_vcs_head_status\"\n        if [[ -n \"${lp_vcs_head_details-}\" ]]; then\n            lp_vcs_details_color+=\"(${lp_vcs_head_details})\"\n        fi\n    fi\n\n    if _lp_vcs_remote; then\n        # Commits behind but not ahead.\n        if   [[ \"$lp_vcs_commit_behind\" -ne 0 && \"$lp_vcs_commit_ahead\" -eq 0 ]]; then\n            lp_vcs_details_color+=\"${LP_COLOR_COMMITS_BEHIND}${LP_MARK_VCS_REMOTE}${lp_vcs_remote}${NO_COL}\"\n\n        # Commits ahead but not behind.\n        elif [[ \"$lp_vcs_commit_behind\" -eq 0 && \"$lp_vcs_commit_ahead\" -ne 0 ]]; then\n            lp_vcs_details_color+=\"${LP_COLOR_COMMITS}${LP_MARK_VCS_REMOTE}${lp_vcs_remote}${NO_COL}\"\n\n        # Commits both ahead and behind: the mark is colored differently.\n        elif [[ \"$lp_vcs_commit_behind\" -ne 0 && \"$lp_vcs_commit_ahead\" -ne 0 ]]; then\n            lp_vcs_details_color+=\"${LP_COLOR_COMMITS_BEHIND}${LP_MARK_VCS_REMOTE}${LP_COLOR_COMMITS}${lp_vcs_remote}${NO_COL}\"\n\n        # else: display nothing.\n        fi\n    fi\n\n    lp_vcs_details_color+=\"$NO_COL\"\n}\n\n# Check if the detected VCS is enabled in Liquid Prompt and the current\n# directory is a valid repository of that type.\n_lp_vcs_active() {\n    \"_lp_${lp_vcs_type}_active\"\n}\n\n# Get the branch name of the repo in the current directory.\n_lp_vcs_branch() {\n    \"_lp_${lp_vcs_type}_branch\"\n}\n\n# Get the bookmark name of the repo in the current directory.\n_lp_vcs_bookmark() {\n    \"_lp_${lp_vcs_type}_bookmark\"\n}\n\n# Get a tag name of the repo in the current directory.\n_lp_vcs_tag() {\n    \"_lp_${lp_vcs_type}_tag\"\n}\n\n# Get the current commit string for the repo in the current directory.\n_lp_vcs_commit_id() {\n    \"_lp_${lp_vcs_type}_commit_id\"\n}\n\n# Get additional information if the repo is in a special or unusual state.\n_lp_vcs_head_status() {\n    \"_lp_${lp_vcs_type}_head_status\"\n    # TODO: set lp_vcs_head_details if not set?\n}\n\n# Get the number of stashes in the repo.\n_lp_vcs_stash_count() {\n    \"_lp_${lp_vcs_type}_stash_count\"\n}\n\n# Get the number of commits ahead and behind the upstream branch.\n_lp_vcs_commits_off_remote() {\n    \"_lp_${lp_vcs_type}_commits_off_remote\"\n}\n\n# Get the number of untracked aka extra files in the repo.\n_lp_vcs_untracked_files() {\n    \"_lp_${lp_vcs_type}_untracked_files\"\n}\n\n# Get the number of changed files compared to the last or checked out commit.\n_lp_vcs_uncommitted_files() {\n    \"_lp_${lp_vcs_type}_uncommitted_files\"\n}\n\n# Get the number of changed lines compared to the last or checked out commit.\n_lp_vcs_uncommitted_lines() {\n    \"_lp_${lp_vcs_type}_uncommitted_lines\"\n}\n\n# Get the number of changed files compared to staging.\n_lp_vcs_unstaged_files() {\n    \"_lp_${lp_vcs_type}_unstaged_files\"\n}\n\n# Get the number of changed lines compared to staging.\n_lp_vcs_unstaged_lines() {\n    \"_lp_${lp_vcs_type}_unstaged_lines\"\n}\n\n# Get the number of changed files in staging compared to the last or checked out commit.\n_lp_vcs_staged_files() {\n    \"_lp_${lp_vcs_type}_staged_files\"\n}\n\n# Get the number of changed lines in staging compared to the last or checked out commit.\n_lp_vcs_staged_lines() {\n    \"_lp_${lp_vcs_type}_staged_lines\"\n}\n\n# Get the remote name for the current branch.\n_lp_vcs_remote() {\n    (( LP_ENABLE_VCS_REMOTE )) || return 2\n    \"_lp_${lp_vcs_type}_remote\"\n}\n\n# GIT #\n\n# Check if Git is enabled in Liquid Prompt and the current directory is a valid\n# Git repository.\n_lp_git_active() {\n    (( LP_ENABLE_GIT )) || return 2\n    \\git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return 1\n}\n\n# Get the branch name of the Git repo in the current directory.\n_lp_git_branch() {\n    lp_vcs_branch=\"\"\n    local branch ret\n    # Recent versions of Git support the --short option for symbolic-ref, but\n    # not 1.7.9 (Ubuntu 12.04)\n    if branch=\"$(\\git symbolic-ref -q HEAD 2>/dev/null)\"; then\n        __lp_escape \"${branch#refs/heads/}\"\n        lp_vcs_branch=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Git does not support bookmarks.\n_lp_git_bookmark() { return 2 ; }\n\n# Get a tag name of the Git repo in the current directory.\n_lp_git_tag() {\n    local tag ret\n    if tag=\"$(\\git describe --tags --exact-match 2>/dev/null)\"; then\n        __lp_escape \"$tag\"\n        lp_vcs_tag=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Get the current full commit hash of the repo in the current directory.\n_lp_git_commit_id() {\n    lp_vcs_commit_id=\"$(\\git rev-parse -q HEAD 2>/dev/null)\"\n}\n\n# Get additional information if HEAD is in merging, rebasing or cherry-picking state.\n_lp_git_head_status() {\n    local IFS=\"\" step total\n\n    if [[ -f \"${lp_vcs_specific_dir}/MERGE_HEAD\" ]]; then\n        lp_vcs_head_status=\"MERGING\"\n    elif [[ -d \"${lp_vcs_specific_dir}/rebase-merge\" ]]; then\n        test -r \"${lp_vcs_specific_dir}/rebase-merge/msgnum\" && read -r step <\"${lp_vcs_specific_dir}/rebase-merge/msgnum\"\n        test -r \"${lp_vcs_specific_dir}/rebase-merge/end\" && read -r total <\"${lp_vcs_specific_dir}/rebase-merge/end\"\n        if [[ -f \"${lp_vcs_specific_dir}/rebase-merge/interactive\" ]]; then\n            lp_vcs_head_status=\"REBASE-i\"\n        else\n            lp_vcs_head_status=\"REBASE-m\"\n        fi\n    elif [[ -d \"${lp_vcs_specific_dir}/rebase-apply\" ]]; then\n        test -r \"${lp_vcs_specific_dir}/rebase-apply/next\" && read -r step <\"${lp_vcs_specific_dir}/rebase-apply/next\"\n        test -r \"${lp_vcs_specific_dir}/rebase-apply/last\" && read -r total <\"${lp_vcs_specific_dir}/rebase-apply/last\"\n        if [[ -f \"${lp_vcs_specific_dir}/rebase-apply/rebasing\" ]]; then\n            lp_vcs_head_status=\"REBASE\"\n        elif [[ -f \"${lp_vcs_specific_dir}/rebase-apply/applying\" ]]; then\n            lp_vcs_head_status=\"AM\"\n        else\n            lp_vcs_head_status=\"AM/REBASE\"\n        fi\n    elif [[ -f \"${lp_vcs_specific_dir}/CHERRY_PICK_HEAD\" ]]; then\n        lp_vcs_head_status=\"CHERRY-PICKING\"\n    elif [[ -f \"${lp_vcs_specific_dir}/REVERT_HEAD\" ]]; then\n        lp_vcs_head_status=\"REVERTING\"\n    elif [[ -f \"${lp_vcs_specific_dir}/BISECT_START\" ]]; then\n        lp_vcs_head_status=\"BISECTING\"\n    else\n        return 1\n    fi\n\n    if [[ -n \"$step\" && -n \"$total\" ]]; then\n        lp_vcs_head_details=\"${step}/${total}\"\n    else\n        lp_vcs_head_details=\"\"\n    fi\n}\n\n# Get the number of Git stashes in the repo.\n_lp_git_stash_count() {\n    lp_vcs_stash_count=\"$(\\git rev-list --walk-reflogs --count refs/stash 2>/dev/null)\"\n    (( lp_vcs_stash_count ))\n}\n\n# Count commits behind and ahead on the remote tracking branch of the current\n# local branch.\n_lp_git_commits_off_remote() {\n    local counts\n    # The \"@{upstream}\" notation was added in Git 1.7.0, so this should work for everyone\n    counts=\"$(\\git rev-list --count --left-right '@{upstream}...HEAD' 2>/dev/null)\" || return 2\n    IFS=$' \\t' read -r lp_vcs_commit_behind lp_vcs_commit_ahead <<<\"$counts\"\n    (( lp_vcs_commit_behind || lp_vcs_commit_ahead ))\n}\n\n# Get the number of untracked files in the repo.\n_lp_git_untracked_files() {\n    lp_vcs_untracked_files=\"$(LC_ALL=C \\git status --porcelain 2>/dev/null | GREP_OPTIONS='' \\grep -c '^??')\"\n    (( lp_vcs_untracked_files ))\n}\n\n# Get the number of changed files.\n__lp_git_diff_shortstat_files() {  # diff_shortstat\n    local stat=\"$1\"\n\n    if [[ \"$stat\" = *changed* ]]; then\n        stat=\"${stat/ file*}\"\n        lp_git_diff_shortstat_files=${stat//[$' \\t']}\n    else\n        return 1\n    fi\n}\n\n# Get the number of changed lines.\n__lp_git_diff_shortstat_lines() {  # diff_shortstat\n    local stat=\"$1\"\n\n    stat=${stat/*changed, /} # removing \"n file(s) changed\"\n\n    if [[ \"$stat\" = *insertion* ]]; then\n        lp_git_diff_shortstat_i_lines=${stat/ inser*}\n    else\n        lp_git_diff_shortstat_i_lines=0\n    fi\n\n    if [[ \"$stat\" = *deletion* ]]; then\n        stat=${stat/*\\(+\\), }\n        lp_git_diff_shortstat_d_lines=${stat/ del*/}\n    else\n        lp_git_diff_shortstat_d_lines=0\n    fi\n\n    (( lp_git_diff_shortstat_i_lines || lp_git_diff_shortstat_d_lines ))\n}\n\n__lp_git_diff_shortstat_uncommitted() {\n    if [[ -z ${_lp_git_diff_shortstat_uncommitted-} ]]; then\n        _lp_git_diff_shortstat_uncommitted=\"$(LC_ALL=C \\git diff --shortstat HEAD -- 2>/dev/null)\"\n    fi\n}\n\n# Get the number of changed files compared to HEAD.\n_lp_git_uncommitted_files() {\n    __lp_git_diff_shortstat_uncommitted\n\n    local lp_git_diff_shortstat_files\n    __lp_git_diff_shortstat_files \"$_lp_git_diff_shortstat_uncommitted\" || return \"$?\"\n\n    lp_vcs_uncommitted_files=$lp_git_diff_shortstat_files\n}\n\n# Get the number of changed lines compared to HEAD.\n_lp_git_uncommitted_lines() {\n    __lp_git_diff_shortstat_uncommitted\n\n    local lp_git_diff_shortstat_i_lines lp_git_diff_shortstat_d_lines\n    __lp_git_diff_shortstat_lines \"$_lp_git_diff_shortstat_uncommitted\" || return \"$?\"\n\n    lp_vcs_uncommitted_i_lines=$lp_git_diff_shortstat_i_lines\n    lp_vcs_uncommitted_d_lines=$lp_git_diff_shortstat_d_lines\n}\n\n__lp_git_diff_shortstat_unstaged() {\n    if [[ -z ${_lp_git_diff_shortstat_unstaged-} ]]; then\n        _lp_git_diff_shortstat_unstaged=\"$(LC_ALL=C \\git diff --shortstat 2>/dev/null)\"\n    fi\n}\n\n# Get the number of changed files compared to staging.\n_lp_git_unstaged_files() {\n    __lp_git_diff_shortstat_unstaged\n\n    local lp_git_diff_shortstat_files\n    __lp_git_diff_shortstat_files \"$_lp_git_diff_shortstat_unstaged\" || return \"$?\"\n\n    # shellcheck disable=SC2034\n    lp_vcs_unstaged_files=$lp_git_diff_shortstat_files\n}\n\n# Get the number of changed lines compared to staging.\n_lp_git_unstaged_lines() {\n    __lp_git_diff_shortstat_unstaged\n\n    local lp_git_diff_shortstat_i_lines lp_git_diff_shortstat_d_lines\n    __lp_git_diff_shortstat_lines \"$_lp_git_diff_shortstat_unstaged\" || return \"$?\"\n\n    lp_vcs_unstaged_i_lines=$lp_git_diff_shortstat_i_lines\n    lp_vcs_unstaged_d_lines=$lp_git_diff_shortstat_d_lines\n}\n\n__lp_git_diff_shortstat_staged() {\n    if [[ -z ${_lp_git_diff_shortstat_staged-} ]]; then\n        _lp_git_diff_shortstat_staged=\"$(LC_ALL=C \\git diff --shortstat --cached 2>/dev/null)\"\n    fi\n}\n\n# Get the number of changed files in staging compared to HEAD.\n_lp_git_staged_files() {\n    __lp_git_diff_shortstat_staged\n\n    local lp_git_diff_shortstat_files\n    __lp_git_diff_shortstat_files \"$_lp_git_diff_shortstat_staged\" || return \"$?\"\n\n    # shellcheck disable=SC2034\n    lp_vcs_staged_files=$lp_git_diff_shortstat_files\n}\n\n# Get the number of changed lines in staging compared to HEAD.\n# shellcheck disable=SC2034\n_lp_git_staged_lines() {\n    __lp_git_diff_shortstat_staged\n\n    local lp_git_diff_shortstat_i_lines lp_git_diff_shortstat_d_lines\n    __lp_git_diff_shortstat_lines \"$_lp_git_diff_shortstat_staged\" || return \"$?\"\n\n    lp_vcs_staged_i_lines=$lp_git_diff_shortstat_i_lines\n    lp_vcs_staged_d_lines=$lp_git_diff_shortstat_d_lines\n}\n\n# Get the remote name for the current branch.\n# NOTE: Assumes that `_lp_find_vcs` and `_lp_vcs_branch` (costly functions) have been called.\n_lp_git_remote() {\n    lp_vcs_remote=\"\"\n\n    if [[ -z \"$lp_vcs_branch\" ]]; then\n        # There is no remote.\n        return 1\n    fi\n\n    if [[ -z \"$lp_vcs_dir\" ]]; then\n        # Cannot find the config file.\n        return 1\n    fi\n\n    local file=\"${lp_vcs_dir}/config\"\n    local delimiter=\" = \" # With spaces.\n    local in_branch=0\n    # We test for $line in the loop is here to ensure that we read the last line,\n    # even if the file does not ends with a \\n.\n    # This bypass a known behavior of the C standard, not fixed in POSIX.\n    while IFS='' read -r line || [[ -n \"$line\" ]] ; do\n        # If we are in the branch config section.\n        if [[ \"$line\" == \"[branch \\\"${lp_vcs_branch}\\\"]\" ]]; then\n            in_branch=1\n        elif [[ \"$line\" == *\"remote${delimiter}\"* ]] && (( in_branch )); then\n            # Remove first part until delimiter.\n            lp_vcs_remote=\"${line#*\"remote${delimiter}\"}\"\n            return 0\n        fi\n    done <\"$file\"\n\n    # Remote not found.\n    return 1\n}\n\n# MERCURIAL #\n\n# Check if Mercurial is enabled in Liquid Prompt and the current directory is a\n# valid Mercurial repository.\n_lp_hg_active() {\n    (( LP_ENABLE_HG )) || return 2\n    \"$LP_HG_COMMAND\" root >/dev/null 2>&1 || return 1\n}\n\n# Get the branch name of the Mercurial repo in the current directory.\n_lp_hg_branch() {\n    local branch ret\n    if branch=\"$(\"$LP_HG_COMMAND\" branch 2>/dev/null)\"; then\n        __lp_escape \"$branch\"\n        lp_vcs_branch=\"$ret\"\n    else\n        # This should never happen. Should this function return a branch name\n        # only if the head of the branch is checked out? But there can be\n        # multiple heads of a branch...\n        return 1\n    fi\n}\n\n# Get the bookmark name of the Mercurial repo in the current directory.\n_lp_hg_bookmark() {\n    local bookmark ret\n    if bookmark=\"$(\"$LP_HG_COMMAND\" bookmark --list --quiet . 2>/dev/null)\"; then\n        __lp_escape \"$bookmark\"\n        lp_vcs_bookmark=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Get the most recent tag that refers to the current revision.\n_lp_hg_tag() {\n    local tags ret\n    tags=\"$(\"$LP_HG_COMMAND\" identify --template='{tags}' 2>/dev/null)\"\n    if [[ -n \"$tags\" ]]; then\n        # Tags are separated by ':', get the first one\n        __lp_escape \"${tags%%:*}\"\n        lp_vcs_tag=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Get the current global revision id for the repo in the current directory.\n_lp_hg_commit_id() {\n    lp_vcs_commit_id=\"$(\"$LP_HG_COMMAND\" identify --id 2>/dev/null)\"\n}\n\n# Get additional information if the repo is in any unfinished state.\n_lp_hg_head_status() {\n    if [[ -d \"${lp_vcs_dir}/merge\" ]]; then\n        lp_vcs_head_status=\"MERGING\"\n    elif [[ -f \"${lp_vcs_dir}/rebasestate\" ]]; then\n        lp_vcs_head_status=\"REBASING\"\n    elif [[ -f \"${lp_vcs_dir}/updatestate\" ]]; then\n        lp_vcs_head_status=\"UPDATING\"\n    elif [[ -f \"${lp_vcs_dir}/bisect.state\" ]]; then\n        lp_vcs_head_status=\"BISECTING\"\n    elif [[ -f \"${lp_vcs_dir}/shelvedstate\" ]]; then\n        lp_vcs_head_status=\"SHELVING\"\n    elif [[ -f \"${lp_vcs_dir}/graftstate\" ]]; then\n        lp_vcs_head_status=\"GRAFTING\"\n    else\n        return 1\n    fi\n}\n\n# Get the number of Mercurial shelves in the repo.\n_lp_hg_stash_count() {\n    local shelves count\n    shelves=\"$(\"$LP_HG_COMMAND\" shelve --list 2>/dev/null; printf x)\"\n    __lp_line_count \"${shelves%x}\"\n    lp_vcs_stash_count=\"$count\"\n    (( lp_vcs_stash_count ))\n}\n\n# https://github.com/liquidprompt/liquidprompt/issues/217\n# return: always false (2: disabled).\n_lp_hg_commits_off_remote() {\n    #commits=$(\"$LP_HG_COMMAND\" outgoing --no-merges 2>/dev/null | GREP_OPTIONS='' \\grep -c '\\(^changeset\\:\\)')\n    return 2\n}\n\n# Get the number of untracked files in the Mercurial repo.\n_lp_hg_untracked_files() {\n    local untracked\n    untracked=\"$(\"$LP_HG_COMMAND\" status --unknown --template '{status}' 2>/dev/null)\"\n    lp_vcs_untracked_files=\"${#untracked}\"\n    (( lp_vcs_untracked_files ))\n}\n\n# Get the number of changed files compared to the base revision.\n_lp_hg_uncommitted_files() {\n    local files\n    files=\"$(\"$LP_HG_COMMAND\" status --modified --template '{status}' 2>/dev/null)\"\n    lp_vcs_uncommitted_files=\"${#files}\"\n    (( lp_vcs_uncommitted_files ))\n}\n\n# Get the number of changed lines compared to the base revision.\n_lp_hg_uncommitted_lines() {\n    IFS=' ' read -r lp_vcs_uncommitted_i_lines lp_vcs_uncommitted_d_lines \\\n        <<<\"$(\"$LP_HG_COMMAND\" diff --stat 2>/dev/null | sed -n '$ s/^.*, \\([0-9]*\\) .*, \\([0-9]*\\).*$/\\1 \\2/p')\"\n\n    (( lp_vcs_uncommitted_i_lines || lp_vcs_uncommitted_d_lines ))\n}\n\n# Mercurial does not support a staging area.\n_lp_hg_unstaged_files() { return 2 ; }\n_lp_hg_unstaged_lines() { return 2 ; }\n_lp_hg_staged_files() { return 2 ; }\n_lp_hg_staged_lines() { return 2 ; }\n\n_lp_hg_remote() { return 2 ; } # FIXME This should be implemented.\n\n# SUBVERSION #\n\n# Check if Subversion is enabled in Liquid Prompt and the current directory is a\n# valid Subversion repository.\n_lp_svn_active() {\n    (( LP_ENABLE_SVN )) || return 2\n    \\svn info >/dev/null 2>&1 || return 1\n}\n\n# Get the branch name of the repo in the current directory.\n_lp_svn_branch() {\n    local ret url\n    # SVN info shows repository-relative URLs since v1.8\n    url=\"$(LC_ALL=C \\svn info 2>/dev/null)\"\n    url=\"${url#*Relative URL: }\"\n    url=\"${url%%$'\\n'*}\"\n    [[ -z \"$url\" ]] && return 1\n\n    if [[ \"$url\" == */trunk* ]]; then\n        lp_vcs_branch=trunk\n    elif [[ \"$url\" == */branches/?* ]]; then\n        url=\"${url##*/branches/}\"\n        __lp_escape \"${url%/*}\"\n        lp_vcs_branch=\"$ret\"\n    elif [[ \"$url\" == */tags/?* ]]; then\n        url=\"${url##*/tags/}\"\n        __lp_escape \"${url%/*}\"\n        lp_vcs_branch=\"tag/$ret\"\n    else\n        return 1\n    fi\n}\n\n# Subversion does not support bookmarks.\n_lp_svn_bookmark() { return 2 ; }\n\n# Subversion does not support tags. What are generally agreed upon as\n# being tags are internally branches. These are returned by _lp_svn_branch().\n_lp_svn_tag() { return 2 ; }\n\n# Get the current revision number for the repo in the current directory.\n_lp_svn_commit_id() {\n    lp_vcs_commit_id=\"$(\\svn info --show-item revision 2>/dev/null)\"\n}\n\n# Subversion does not have extra head statuses. A Subversion merge is no different\n# than a manual file change, so the repository has no extra state to track.\n_lp_svn_head_status() { return 2 ; }\n\n# Subversion does not support stashes.\n_lp_svn_stash_count() { return 2 ; }\n\n# Subversion does not support remote tracking branches (as it is not a\n# distributed version control system).\n_lp_svn_commits_off_remote() { return 2 ; }\n\n# Get the number of untracked files in the Subversion repo.\n_lp_svn_untracked_files() {\n    lp_vcs_untracked_files=\"$(LC_ALL=C \\svn status 2>/dev/null | GREP_OPTIONS='' \\grep -c '^?')\"\n    (( lp_vcs_untracked_files ))\n}\n\n# Get the number of changed files compared to the base revision.\n_lp_svn_uncommitted_files() {\n    local files count\n    # svn status is unsafe with newline chars in filenames, which will throw\n    # off this count\n    files=\"$(\\svn status --quiet 2>/dev/null; printf x)\"\n    __lp_line_count \"${files%x}\"\n    lp_vcs_uncommitted_files=\"$count\"\n    (( lp_vcs_uncommitted_files ))\n}\n\n# Get the number of changed lines compared to the base revision.\n_lp_svn_uncommitted_lines() {\n    IFS=' ' read -r lp_vcs_uncommitted_i_lines lp_vcs_uncommitted_d_lines \\\n        <<<\"$(\\svn diff --internal-diff 2>/dev/null | awk '\n        BEGIN { plus=0; minus=0 }\n        /(^\\+[^+])|(^\\+$)/ { plus+=1 }\n        /(^-[^-])|(^-$)/ { minus+=1 }\n        END {\n            print plus\" \"minus\n        }')\"\n\n    (( lp_vcs_uncommitted_i_lines || lp_vcs_uncommitted_d_lines ))\n}\n\n# Subversion does not support a staging area.\n_lp_svn_unstaged_files() { return 2 ; }\n_lp_svn_unstaged_lines() { return 2 ; }\n_lp_svn_staged_files() { return 2 ; }\n_lp_svn_staged_lines() { return 2 ; }\n# Subversion does not have remotes.\n_lp_svn_remote() { return 2 ; }\n\n# FOSSIL #\n\n# Check if Fossil is enabled in Liquid Prompt and the current directory is a\n# valid Fossil repository.\n_lp_fossil_active() {\n    (( LP_ENABLE_FOSSIL )) || return 2\n    \\fossil status >/dev/null 2>&1 || return 1\n}\n\n# Get the branch name of the repo in the current directory.\n_lp_fossil_branch() {\n    local branch ret\n\n    # branch current command added in fossil 2.7\n    if ! branch=\"$(\\fossil branch current 2>/dev/null)\"; then\n        # Almost any character can be in a branch name, but we have no way of\n        # knowing if a newline is part of the name or not. In fact, there is no\n        # way to prevent a branch containing the string '\\n* ' to not break\n        # this. Just hope that no one crazy enough to do that to their branch\n        # names is running Fossil <2.7\n        branch=\"$(\\fossil branch list 2>/dev/null)\"\n        branch=\"${branch#*$'\\n\\* '}\"\n        # If the current branch is the first in the list, the above check would\n        # not have removed anything\n        branch=\"${branch#\\* }\"\n        branch=\"${branch%%$'\\n'*}\"\n    fi\n\n    if [[ -n \"$branch\" ]]; then\n        __lp_escape \"$branch\"\n        lp_vcs_branch=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Fossil does not support bookmarks.\n_lp_fossil_bookmark() { return 2 ; }\n\n# Fossil does not support unique tags. Fossil tags can refer to multiple checkin IDs,\n# so a matching tag is not a useful unique ID.\n_lp_fossil_tag() { return 2 ; }\n\n# Get the current full commit hash of the Fossil repo in the current directory.\n_lp_fossil_commit_id() {\n    lp_vcs_commit_id=\"$(LC_ALL=C \\fossil status 2>/dev/null | sed -n 's/^checkout:[[:space:]]*\\([^[:space:]]*\\).*/\\1/p')\"\n}\n\n# Get additional information if the check-out is in merging before a commit.\n_lp_fossil_head_status() {\n    local option\n    option=\"$(LC_ALL=C \\fossil undo --dry-run 2>/dev/null)\"\n\n    if [[ \"$option\" == *\"fossil merge\"* ]]; then\n        lp_vcs_head_status=\"MERGING\"\n    else\n        return 1\n    fi\n}\n\n# Get the number of Fossil stashes in the repo.\n_lp_fossil_stash_count() {\n    local stashes count\n    stashes=\"$(\\fossil stash list 2>/dev/null; printf x)\"\n    __lp_line_count \"${stashes%x}\"\n    # Each stash takes up two lines, and no stashes is one line\n    lp_vcs_stash_count=$(( count / 2 ))\n    (( lp_vcs_stash_count ))\n}\n\n# Fossil does not support remote tracking branches. Fossil by default keeps the local\n# repository in sync with the remote. Even if a user disables that, it is not possible\n# to have a local and remote branch named the same not in sync.\n_lp_fossil_commits_off_remote() { return 2 ; }\n\n# Get the number of extra files in the Fossil repo.\n_lp_fossil_untracked_files() {\n    local extras count\n    extras=\"$(\\fossil extras 2>/dev/null; printf x)\"\n    __lp_line_count \"${extras%x}\"\n    lp_vcs_untracked_files=$count\n    (( lp_vcs_untracked_files ))\n}\n\n# Get the number of changed files compared to the checked-out version.\n_lp_fossil_uncommitted_files() {\n    local files\n    files=\"$(\\fossil changes 2>/dev/null; printf x)\"\n    __lp_line_count \"${files%x}\"\n    lp_vcs_uncommitted_files=$count\n    (( lp_vcs_uncommitted_files ))\n}\n\n# Get the number of changed lines compared to the checked-out version.\n_lp_fossil_uncommitted_lines() {\n    IFS=' ' read -r lp_vcs_uncommitted_i_lines lp_vcs_uncommitted_d_lines \\\n        <<<\"$(\\fossil diff --internal --verbose 2>/dev/null | awk '\n        BEGIN { plus=0; minus=0 }\n        /(^\\+[^+])|(^\\+$)/ { plus+=1 }\n        /(^-[^-])|(^-$)/ { minus+=1 }\n        END {\n            print plus\" \"minus\n        }')\"\n\n    (( lp_vcs_uncommitted_i_lines || lp_vcs_uncommitted_d_lines ))\n}\n\n# Fossil does not support a staging area.\n_lp_fossil_unstaged_files() { return 2 ; }\n_lp_fossil_unstaged_lines() { return 2 ; }\n_lp_fossil_staged_files() { return 2 ; }\n_lp_fossil_staged_lines() { return 2 ; }\n_lp_fossil_remote() { return 2 ; }\n\n# Bazaar #\n\n# Check if Bazaar is enabled in Liquid Prompt and the current directory is a\n# valid Bazaar repository. This check should be done before running any other\n# _lp_bzr_* data functions.\n_lp_bzr_active() {\n    (( LP_ENABLE_BZR )) || return 2\n    \\bzr status >/dev/null 2>&1 || return 1\n}\n\n# Get the branch name of the current directory\n_lp_bzr_branch() {\n    local branch ret\n    if branch=\"$(\\bzr nick 2> /dev/null)\"; then\n        __lp_escape \"$branch\"\n        lp_vcs_branch=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Bazaar does not support bookmarks. A nick is somewhat like a bookmark, but there is\n# no command to view a naked branch name, so the nick command is used for branches.\n_lp_bzr_bookmark() { return 2 ; }\n\n# Get the most recent tag that refers to the current revision.\n_lp_bzr_tag() {\n    local tag ret _\n    IFS=$' \\t' read -r tag _ <<<\"$(LC_ALL=C \\bzr tags --revision=last:1 2>/dev/null)\"\n    if [[ -n \"$tag\" ]]; then\n        __lp_escape \"$tag\"\n        lp_vcs_tag=\"$ret\"\n    else\n        return 1\n    fi\n}\n\n# Get the current full commit hash of the repo in the current directory.\n_lp_bzr_commit_id() {\n    lp_vcs_commit_id=\"$(\\bzr revno 2>/dev/null)\"\n}\n\n# Bazaar does not have extra head statuses. A Bazaar merge can be partially complete,\n# but there is no command to test for it.\n_lp_bzr_head_status() { return 2 ; }\n\n# Get the number of Bazaar shelves in the repo.\n_lp_bzr_stash_count() {\n    local shelves count\n    shelves=\"$(\\bzr shelve --list 2>/dev/null)\"\n    local -i ret=\"$?\"\n\n    if (( ret == 0 )); then\n        # No error code means no shelves.\n        lp_vcs_stash_count=0\n    elif (( ret == 1 )); then\n        # Return of 1 means there are shelves.\n        # The usual \"printf x\" trick can't be used, as it squashes the error code.\n        __lp_line_count \"$shelves\"\n        lp_vcs_stash_count=$(( count + 1 ))\n    else\n        return 1\n    fi\n\n    (( lp_vcs_stash_count ))\n}\n\n# Bazaar does not support getting details of remote tracking branches. Bazaar does not\n# keep a local copy of the remote state, so checking this would be impossible anyway.\n_lp_bzr_commits_off_remote() { return 2 ; }\n\n# Get the number of unknown files in the repo.\n_lp_bzr_untracked_files() {\n    lp_vcs_untracked_files=\"$(LC_ALL=C \\bzr status --short 2>/dev/null | GREP_OPTIONS='' \\grep -c '^?')\"\n\n    (( lp_vcs_untracked_files ))\n}\n\n# Get the number of changed files compared to the checked-out version.\n_lp_bzr_uncommitted_files() {\n    lp_vcs_uncommitted_files=\"$(LC_ALL=C \\bzr status --short 2>/dev/null | GREP_OPTIONS='' \\grep -vc '^?')\"\n\n    (( lp_vcs_uncommitted_files ))\n}\n\n# Get the number of changed lines compared to the checked-out version.\n_lp_bzr_uncommitted_lines() {\n    IFS=' ' read -r lp_vcs_uncommitted_i_lines lp_vcs_uncommitted_d_lines \\\n        <<<\"$(\\bzr diff 2>/dev/null | awk '\n        BEGIN { plus=0; minus=0 }\n        /(^\\+[^+])|(^\\+$)/ { plus+=1 }\n        /(^-[^-])|(^-$)/ { minus+=1 }\n        END {\n            print plus\" \"minus\n        }')\"\n\n    (( lp_vcs_uncommitted_i_lines || lp_vcs_uncommitted_d_lines ))\n}\n\n# Bazaar does not support a staging area.\n_lp_bzr_unstaged_files() { return 2 ; }\n_lp_bzr_unstaged_lines() { return 2 ; }\n_lp_bzr_staged_files() { return 2 ; }\n_lp_bzr_staged_lines() { return 2 ; }\n_lp_bzr_remote() { return 2 ; }\n\n####################\n# Wifi link status #\n####################\n\n_lp_wifi_signal_strength() {\n    (( LP_ENABLE_WIFI_STRENGTH )) || return 2\n\n    local level\n\n    __lp_wifi_signal_strength_raw || return \"$?\"\n\n    if (( level > 110 && level < 256 )); then\n        # assume old-style WEXT 8-bit unsigned signal level.\n        (( level -= 256 ))  # subtract 256 to convert to dBm.\n    fi\n\n    # normalize to 0.\n    (( level > -40 )) && (( level = -40 ))\n    (( level < -100 )) && (( level = -100 ))\n    (( lp_wifi_signal_strength = 100 - (100 * ((level + 40) * -1 ) / 60 ) ))\n\n    (( lp_wifi_signal_strength < LP_WIFI_STRENGTH_THRESHOLD ))\n}\n\ncase \"$LP_OS\" in\n    Linux)\n    __lp_wifi_signal_strength_raw() {\n        [[ -r \"$_LP_LINUX_WIRELESS_FILE\" ]] || return 2\n\n        unset lp_wifi_signal_strength\n\n        local strength _\n        while IFS=$' \\t' read -r _ _ _ strength _; do\n            strength=\"${strength%%[![:digit:]-]*}\"\n\n            if [[ -n $strength ]] && ( [[ -z ${lp_wifi_signal_strength-} ]] \\\n                || (( strength < level )) ); then\n                level=\"$strength\"\n            fi\n        done <\"$_LP_LINUX_WIRELESS_FILE\"\n\n        [[ -n ${level-} ]] || return 2\n    }\n    ;;\n    Darwin)\n    __lp_wifi_signal_strength_raw() {\n        level=\"$(\"$_LP_AIRPORT_BIN\" --getinfo 2>/dev/null)\" || return 2\n\n        level=\"${level#*\"agrCtlRSSI: \"}\"\n        level=\"${level%%[![:digit:]-]*}\"\n\n        [[ -n $level ]] || return 2\n    }\n    ;;\n    *)\n    _lp_wifi_signal_strength() {\n        return 2\n    }\n    ;;\nesac\n\n_lp_wifi_signal_strength_color() {\n    _lp_wifi_signal_strength || return \"$?\"\n\n    local ret\n    _lp_color_map \"$(( 100 - lp_wifi_signal_strength ))\"\n    lp_wifi_signal_strength_color=\"${ret}${LP_MARK_WIFI}\"\n\n    if (( LP_ALWAYS_DISPLAY_VALUES )); then\n        lp_wifi_signal_strength_color+=\"${lp_wifi_signal_strength}\"\n    fi\n    lp_wifi_signal_strength_color+=\"${NO_COL}\"\n}\n\n##################\n# Battery status #\n##################\n\n# Get the battery status in percent.\ncase \"$LP_OS\" in\n    Linux)\n    __lp_battery_sysfs() {\n        if (( _LP_SHELL_zsh )); then\n            setopt local_options nullglob\n        fi\n\n        local power_supply\n        for power_supply in \"${_LP_LINUX_POWERSUPPLY_PATH}/\"*; do\n            if ! [[ -r \"${power_supply}/type\" && -r \"${power_supply}/present\" && \\\n                -r \"${power_supply}/status\" && -r \"${power_supply}/capacity\" ]]; then\n                continue\n            fi\n\n            local power_supply_type power_supply_present power_supply_scope\n            IFS= read -r power_supply_type <\"${power_supply}/type\" 2>/dev/null || continue\n            [[ $power_supply_type == 'Battery' ]] || continue\n            IFS= read -r power_supply_present <\"${power_supply}/present\" 2>/dev/null || continue\n            [[ $power_supply_present == '1' ]] || continue\n\n            # Scope is a property of a power supply\n            # Scope = System or missing - power supply powers the system\n            # Scope = Device - power supply powers a device\n            if [[ -r \"${power_supply}/scope\" ]]; then\n                IFS= read -r power_supply_scope <\"${power_supply}/scope\" 2>/dev/null || continue\n                [[ $power_supply_scope == 'System' ]] || continue\n            fi\n\n            IFS= read -r lp_battery_status <\"${power_supply}/status\" 2>/dev/null || continue\n            IFS= read -r lp_battery <\"${power_supply}/capacity\" 2>/dev/null || continue\n            return 0\n        done\n        return 1\n    }\n\n    __lp_battery_acpi() {\n        local acpi\n        acpi=\"$(acpi --battery 2>/dev/null)\"\n\n        # Extract the battery load value in percent\n        # First, remove the beginning of the line...\n        lp_battery=\"${acpi#Battery *, }\"\n        lp_battery=\"${lp_battery%%%*}\" # remove everything starting at '%'\n        lp_battery_status=\"${acpi}\"\n    }\n\n    __lp_battery_detect() {\n        local lp_battery lp_battery_status\n        unset _LP_BATTERY_FUNCTION\n\n        # First check SYSFS way.\n        _LP_BATTERY_FUNCTION=__lp_battery_sysfs\n        \"$_LP_BATTERY_FUNCTION\" 2>/dev/null && \\\n            [[ -n \"${lp_battery-}\" ]] && return 0\n\n        # Try with ACPI.\n        if command -v apci >/dev/null; then\n            _LP_BATTERY_FUNCTION=__lp_battery_acpi\n            \"$_LP_BATTERY_FUNCTION\" 2>/dev/null && \\\n                [[ -n \"${lp_battery-}\" ]] && return 0\n        fi\n\n        unset _LP_BATTERY_FUNCTION\n        return 1\n    }\n\n    _lp_battery() {\n        (( LP_ENABLE_BATT )) || return 5\n\n        unset lp_battery lp_battery_status\n        \"$_LP_BATTERY_FUNCTION\"\n\n        if [[ -z \"${lp_battery-}\" ]]; then\n            # no battery level found\n            return 4\n        fi\n        # discharging\n        if [[ \"$lp_battery_status\" == *\"Discharging\"* ]]; then\n            # under => 0, above => 1\n            return \"$(( lp_battery > LP_BATTERY_THRESHOLD ))\"\n        # not charging\n        elif [[ \"$lp_battery_status\" == *\"Not charging\"* ]]; then\n            return 4\n        # charging\n        else\n            # under => 2, above => 3\n            return \"$(( 2 + ( lp_battery > LP_BATTERY_THRESHOLD ) ))\"\n        fi\n    }\n    ;;\n    Darwin)\n    _lp_battery() {\n        (( LP_ENABLE_BATT )) || return 5\n        local batt_status\n        IFS=';' read -r lp_battery batt_status <<<\"$(pmset -g batt | sed -n 's/^ -InternalBattery.*[[:space:]]\\([0-9]*[0-9]\\)%; \\([^;]*\\).*$/\\1;\\2/p')\"\n        case \"$batt_status\" in\n            charged | \"\")\n            return 4\n            ;;\n            discharging)\n                # under => 0, above => 1\n                return \"$(( lp_battery > LP_BATTERY_THRESHOLD ))\"\n            ;;\n            *)  # \"charging\", \"AC attached\"\n                # under => 2, above => 3\n                return \"$(( 2 + ( lp_battery > LP_BATTERY_THRESHOLD ) ))\"\n            ;;\n        esac\n    }\n    ;;\n    *)\n    _lp_battery() {\n        return 5\n    }\n    ;;\nesac\n\n# Compute a gradient of background/foreground colors depending on the battery status.\n_lp_battery_color() {\n    (( LP_ENABLE_BATT )) || return 2\n\n    _lp_battery\n    local -i _status=\"$?\"\n\n    if (( _status >= 4 || lp_battery == 100 )); then\n        # no battery support or battery full: nothing displayed\n        return 1\n    elif (( _status == 3 && lp_battery != 100 )); then\n        # charging and above threshold and not 100%\n        # green ⏚\n        lp_battery_color=\"${LP_COLOR_CHARGING_ABOVE}${LP_MARK_ADAPTER}${NO_COL}\"\n    elif (( _status == 2 )); then\n        # charging but under threshold\n        # yellow ⏚\n        lp_battery_color=\"${LP_COLOR_CHARGING_UNDER}${LP_MARK_ADAPTER}${NO_COL}\"\n    elif (( _status == 1 )); then\n        # discharging but above threshold\n        # yellow ⌁\n        lp_battery_color=\"${LP_COLOR_DISCHARGING_ABOVE}${LP_MARK_BATTERY}${NO_COL}\"\n    # discharging and under threshold\n    else\n        lp_battery_color=\"${LP_COLOR_DISCHARGING_UNDER}${LP_MARK_BATTERY}${NO_COL}\"\n\n        if (( LP_ALWAYS_DISPLAY_VALUES )); then\n            local -i idx\n            if   (( lp_battery <=  0 )); then\n                idx=0\n            elif (( lp_battery <=  5 )); then         #  5\n                idx=9\n            elif (( lp_battery <= 10 )); then         #  5\n                idx=8\n            elif (( lp_battery <= 20 )); then         # 10\n                idx=7\n            elif (( lp_battery <= 30 )); then         # 10\n                idx=6\n            elif (( lp_battery <= 40 )); then         # 10\n                idx=5\n            elif (( lp_battery <= 50 )); then         # 10\n                idx=4\n            elif (( lp_battery <= 65 )); then         # 15\n                idx=3\n            elif (( lp_battery <= 80 )); then         # 15\n                idx=2\n            elif (( lp_battery < 100 )); then         # 20\n                idx=1\n            else # >= 100\n                idx=0\n            fi\n\n            local ret\n            _lp_color_map \"$idx\" 10\n            lp_battery_color+=\"${ret}${lp_battery}${_LP_PERCENT}${NO_COL}\"\n        fi\n    fi\n}\n\n###########################\n# Runtime of last command #\n###########################\n\n_lp_runtime_format() {\n    (( LP_ENABLE_RUNTIME )) || return 2\n\n    lp_runtime_format=\n    if (( _LP_RUNTIME_SECONDS >= LP_RUNTIME_THRESHOLD )); then\n        # display runtime seconds as days, hours, minutes, and seconds\n        (( _LP_RUNTIME_SECONDS >= 86400 )) && lp_runtime_format=$((_LP_RUNTIME_SECONDS / 86400))d\n        (( _LP_RUNTIME_SECONDS >= 3600 )) && lp_runtime_format+=$((_LP_RUNTIME_SECONDS % 86400 / 3600))h\n        (( _LP_RUNTIME_SECONDS >= 60 )) && lp_runtime_format+=$((_LP_RUNTIME_SECONDS % 3600 / 60))m\n        lp_runtime_format+=$((_LP_RUNTIME_SECONDS % 60))s\n    else\n        return 1\n    fi\n}\n\n__lp_runtime_before() {\n    _LP_RUNTIME_LAST_SECONDS=$SECONDS\n    _LP_RUNTIME_SECONDS=-1\n}\n\n# Compute number of seconds since the command was started\n__lp_runtime_after() {\n    if [[ -n \"${_LP_RUNTIME_LAST_SECONDS-}\" ]]; then\n        (( _LP_RUNTIME_SECONDS=SECONDS-_LP_RUNTIME_LAST_SECONDS ))\n        unset _LP_RUNTIME_LAST_SECONDS\n    else\n        _LP_RUNTIME_SECONDS=0\n    fi\n}\n\n_lp_runtime_color() {\n    _lp_runtime_format || return \"$?\"\n\n    lp_runtime_color=\"${LP_COLOR_RUNTIME}${lp_runtime_format}${NO_COL}\"\n}\n\n###############\n# System load #\n###############\n\n# Get CPU count and current load\ncase \"$LP_OS\" in\n    Linux)\n        __lp_cpu_count() {\n            _lp_CPUNUM=$( nproc 2>/dev/null || GREP_OPTIONS='' \\grep -c '^[Pp]rocessor' /proc/cpuinfo )\n        }\n        if [[ -r '/proc/loadavg' ]]; then\n            _lp_cpu_load () {\n                local _ IFS=$' \\t'\n                read -r lp_cpu_load _ < /proc/loadavg\n            }\n        elif command -v uptime >/dev/null; then\n            _lp_cpu_load () {\n                lp_cpu_load=\"$( LP_ALL=C uptime | sed 's/.*load average: \\([0-9.]*\\).*/\\1/' )\"\n            }\n        else\n            LP_ENABLE_LOAD=0\n        fi\n        ;;\n    FreeBSD|Darwin|OpenBSD)\n        __lp_cpu_count() {\n            _lp_CPUNUM=$( sysctl -n hw.ncpu )\n        }\n        _lp_cpu_load () {\n            local _ IFS=$' \\t'\n            # If you have problems with syntax coloring due to the following\n            # line, do this: ln -s liquidprompt liquidprompt.bash\n            # and edit liquidprompt.bash\n            read -r _ lp_cpu_load _ <<<\"$( LC_ALL=C sysctl -n vm.loadavg )\"\n        }\n        ;;\n    SunOS)\n        __lp_cpu_count() {\n            _lp_CPUNUM=$( kstat -m cpu_info | GREP_OPTIONS='' \\grep -c \"module: cpu_info\" )\n        }\n        _lp_cpu_load () {\n            lp_cpu_load=\"$( LC_ALL=C uptime | sed 's/.*load average: *\\([0-9.]*\\).*/\\1/' )\"\n        }\nesac\n\n_lp_load() {\n    (( LP_ENABLE_LOAD )) || return 2\n\n    local lp_cpu_load ret\n\n    # Get value (OS-specific) into lp_cpu_load\n    _lp_cpu_load\n\n    __lp_escape \"${lp_cpu_load:-0}\"\n    lp_load=$ret\n\n    __lp_floating_scale \"${lp_cpu_load:-0}\" 100\n    lp_load_adjusted=$(( ret / _lp_CPUNUM ))\n\n    (( lp_load_adjusted >= _LP_LOAD_THRESHOLD ))\n}\n\n# Compute a gradient of background/forground colors depending on the load.\n_lp_load_color() {\n    _lp_load || return \"$?\"\n\n    local ret\n    _lp_color_map \"$lp_load_adjusted\" \"$_LP_LOAD_CAP\"\n    lp_load_color=\"${ret}${LP_MARK_LOAD}\"\n\n    if (( LP_ALWAYS_DISPLAY_VALUES )); then\n        lp_load_color+=\"${lp_load}\"\n    fi\n    lp_load_color+=\"$NO_COL\"\n}\n\n#################\n# Available RAM #\n#################\n\n# Get RAM percentage.\ncase \"$LP_OS\" in\n    Linux)\n        # Parse /proc/meminfo\n        __lp_ram_bytes() {\n            lp_ram_avail_bytes=\n            lp_ram_total_bytes=\n            local id value free _\n            while IFS=$' \\t' read -r id value _ ; do\n                if [[ $id == 'MemTotal:' ]]; then\n                    lp_ram_total_bytes=$value\n                elif [[ $id == 'MemAvailable:' ]]; then\n                    lp_ram_avail_bytes=$value\n                    # Note: this is the best conservative estimate from the kernel\n                    # of the memory than may be available for a process.\n                    # See https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=34e431b0ae398fc54ea69ff85ec700722c9da773\n                elif [[ $id == 'MemFree:' ]]; then\n                    free=$value\n                fi\n                if [[ -n \"$lp_ram_total_bytes\" && -n \"$lp_ram_avail_bytes\" ]]; then\n                    break\n                fi\n            # Assumes file exists.\n            done < \"$_LP_LINUX_RAM_FILE\"\n            if [[ -z $lp_ram_avail_bytes && -n ${free-} ]]; then\n                # Very old kernels and Cygwin lack MemAvailable, so fallback to MemFree.\n                lp_ram_avail_bytes=$free\n            fi\n            # Values in file are in KiB.\n            lp_ram_total_bytes=$(( lp_ram_total_bytes * 1024 ))\n            lp_ram_avail_bytes=$(( lp_ram_avail_bytes * 1024 ))\n            # Used memory may be used in a theme.\n            # shellcheck disable=SC2034\n            lp_ram_used_bytes=$((lp_ram_total_bytes-lp_ram_avail_bytes))\n        }\n        ;;\n    FreeBSD|OpenBSD)\n        # Parse dmesg.boot\n        __lp_ram_bytes() {\n            lp_ram_avail_bytes=\n            lp_ram_total_bytes=\n            local first second _ value\n            while IFS=' ' read -r first second _ value _ _ ; do\n                if [[ $second == 'memory' ]]; then\n                    if [[ $first == 'usable' || $first == 'real' ]]; then\n                        lp_ram_total_bytes=$value\n                    elif [[ $first == 'avail' ]]; then\n                        lp_ram_avail_bytes=$value\n                    fi\n                fi\n                if [[ -n \"$lp_ram_total_bytes\" && -n \"$lp_ram_avail_bytes\" ]]; then\n                    break\n                fi\n            done < \"$_LP_BSD_RAM_FILE\"\n            # shellcheck disable=SC2034\n            lp_ram_used_bytes=$((lp_ram_total_bytes-lp_ram_avail_bytes))\n        }\n        ;;\n    Darwin)\n        # Parse vm_stat\n        __lp_ram_bytes() {\n            lp_ram_avail_bytes=0\n            lp_ram_total_bytes=0\n\n            # Call vm_stat.\n            local stat=\"$(vm_stat 2>/dev/null)\"\n\n            # Read first line.\n            local page_size _ second third fourth fifth\n            IFS=' ' read -r _ _ _ _ _ _ _ page_size _ <<< \"$stat\"\n\n            # Read all other lines.\n            while IFS=' ' read -r _ second third fourth fifth ; do\n                case \"$second\" in\n                    free:|inactive:)\n                        # Remove the last \".\" character.\n                        lp_ram_avail_bytes=$((lp_ram_avail_bytes + ${third:0:${#third}-1}))\n                        ;;\n                    active:|speculative:|throttled:)\n                        lp_ram_total_bytes=$((lp_ram_total_bytes + ${third:0:${#third}-1}))\n                        ;;\n                    wired)\n                        lp_ram_total_bytes=$((lp_ram_total_bytes + ${fourth:0:${#fourth}-1}))\n                        ;;\n                    occupied)\n                        lp_ram_total_bytes=$((lp_ram_total_bytes + ${fifth:0:${#fifth}-1}))\n                        ;;\n                esac\n            done <<< \"$stat\"\n            lp_ram_avail_bytes=$((lp_ram_avail_bytes * page_size))\n            lp_ram_total_bytes=$((lp_ram_avail_bytes + lp_ram_total_bytes * page_size))\n            # shellcheck disable=SC2034\n            lp_ram_used_bytes=$((lp_ram_total_bytes-lp_ram_avail_bytes))\n        }\n        ;;\n    *)\n        # Not implemented.\n        __lp_ram_bytes() {\n            return 5 # Same code as in _lp_battery.\n        }\n        ;;\nesac\n\n_lp_ram() {\n    (( LP_ENABLE_RAM )) || return 2\n\n    # Call the OS-specific function measuring RAM.\n    __lp_ram_bytes || return \"$?\"\n    # Now we have: lp_ram_avail_bytes, lp_ram_total_bytes, lp_ram_used_bytes.\n\n    lp_ram_human=\n    lp_ram_perc=\n\n    lp_ram=$(( lp_ram_avail_bytes / 1024 )) # in KiB\n    lp_ram_perc=$(( 100 * lp_ram_avail_bytes / lp_ram_total_bytes ))\n\n    if (( lp_ram <= LP_RAM_THRESHOLD || lp_ram_perc <= LP_RAM_THRESHOLD_PERC )); then\n        local lp_bytes lp_bytes_units\n        __lp_bytes_to_human \"${lp_ram_avail_bytes}\" \"$LP_RAM_PRECISION\"\n        lp_ram_human=\"${lp_bytes}\"\n        lp_ram_human_units=\"${lp_bytes_units}\"\n        return 0\n    else\n        return 1\n    fi\n}\n\n_lp_ram_color() {\n    if _lp_ram; then\n        if (( LP_ALWAYS_DISPLAY_VALUES )); then\n            if (( LP_DISPLAY_VALUES_AS_PERCENTS )); then\n                lp_ram_color=\"${LP_COLOR_RAM}${LP_MARK_RAM}${lp_ram_perc}${NO_COL}${LP_COLOR_RAM_UNITS}${_LP_PERCENT}${NO_COL}\"\n            else\n                # Metric SI norms ask for a space, but we prefer to stay compact.\n                # Coloring value differently from unit helps readability.\n                # The mark should be different enough to not be a problem.\n                lp_ram_color=\"${LP_COLOR_RAM}${LP_MARK_RAM}${lp_ram_human}${NO_COL}${LP_COLOR_RAM_UNITS}${lp_ram_human_units}${NO_COL}\"\n            fi\n        else\n            lp_ram_color=\"${LP_COLOR_RAM}${LP_MARK_RAM}${NO_COL}\"\n        fi\n    else\n        return $?\n    fi\n}\n\n######################\n# System temperature #\n######################\n\n# Backends for TEMP. Each backend must return the result in $lp_temperature.\n# Return the hottest system temperature we get.\n\n__lp_temp_sysfs() {\n    local -i temperature\n\n    for temp_file in ${_LP_LINUX_TEMPERATURE_FILES[@]+\"${_LP_LINUX_TEMPERATURE_FILES[@]}\"}; do\n        for ignore_file in ${LP_TEMP_SYSFS_IGNORE_FILES[@]+\"${LP_TEMP_SYSFS_IGNORE_FILES[@]}\"}; do\n            # We want to glob match here.\n            # shellcheck disable=SC2053\n            [[ \"$temp_file\" == $ignore_file ]] && continue 2\n        done\n\n        if [[ ! -r $temp_file ]]; then\n            continue\n        fi\n\n        IFS='' read -r temperature <\"$temp_file\" 2>/dev/null || continue\n        # Input is in millidegrees Celsius.\n        (( temperature = temperature / 1000 ))\n\n        if [[ -z ${lp_temperature-} ]] || (( temperature > ${lp_temperature:-0} )); then\n            lp_temperature=$temperature\n        fi\n    done\n}\n\n# Implementation using lm-sensors\n__lp_temp_sensors() {\n    # Return the hottest system temperature we get through the sensors command\n    # Only the integer part is retained\n    local -i i\n    local IFS=$' \\t\\n'\n    for i in $(LC_ALL=C \\sensors -u 2>/dev/null |\n            sed -n 's/^  temp[0-9][0-9]*_input: \\([0-9]*\\)\\..*$/\\1/p'); do\n        if [[ -z ${lp_temperature-} ]] || (( i > ${lp_temperature:-0} )); then\n            lp_temperature=$i\n        fi\n    done\n}\n\n# Implementation using 'acpi -t'\n__lp_temp_acpi() {\n    local -i i\n    local IFS=$' \\t\\n'\n    # Only the integer part is retained\n    for i in $(LC_ALL=C \\acpi -t |\n            sed -n 's/.* \\(-\\{0,1\\}[0-9]*\\)\\.[0-9]* degrees C$/\\1/p'); do\n        if [[ -z ${lp_temperature-} ]] || (( i > ${lp_temperature:-0} )); then\n            lp_temperature=$i\n        fi\n    done\n}\n\n# Dynamic selection of backend\n__lp_temp_detect() {\n    local lp_temperature cmd\n\n    if [[ $LP_OS == 'Linux' ]]; then\n        _LP_TEMP_FUNCTION=\"__lp_temp_sysfs\"\n        # Check that we can retrieve temperature at least once\n        \"$_LP_TEMP_FUNCTION\" 2>/dev/null\n        # If $lp_temperature is set, success!\n        [[ -n \"${lp_temperature-}\" ]] && return 0\n    fi\n\n    for cmd in acpi sensors ; do\n        command -v \"$cmd\" >/dev/null || continue\n\n        _LP_TEMP_FUNCTION=\"__lp_temp_$cmd\"\n        \"$_LP_TEMP_FUNCTION\" 2>/dev/null\n\n        [[ -n \"${lp_temperature-}\" ]] && return 0\n    done\n\n    unset _LP_TEMP_FUNCTION\n    return 1\n}\n\n# Returns current highest system temperature.\n_lp_temperature() {\n    (( LP_ENABLE_TEMP )) || return 2\n\n    unset lp_temperature\n    \"$_LP_TEMP_FUNCTION\"\n\n    [[ -z ${lp_temperature-} ]] && return 1\n    (( lp_temperature >= LP_TEMP_THRESHOLD ))\n}\n\n# Display the numeric value as we get from _lp_temperature and colorize it through _lp_color_map.\n_lp_temperature_color() {\n    _lp_temperature || return \"$?\"\n\n    local ret\n    _lp_color_map \"$lp_temperature\" 120\n    lp_temperature_color=\"${LP_MARK_TEMP}${ret}${lp_temperature}°${NO_COL}\"\n}\n\n######################\n# Current Disk Usage #\n######################\n\n# Convert bytes in human-readable, binary-prefixed notation (using powers of 2).\n# Precision can be 0, 1 or 2 digits. If not given, precision is two digits.\n__lp_bytes_to_human() { # bytes, [precision] -> lp_bytes, lp_bytes_units\n    local i=\"$1\" prec=\"${2:-2}\" size remainder=\"\"\n    # This has to be split on multiple lines for Zsh 5.0 (see wiki).\n    local -a units\n    # Not much point in going past PiB, as Bash and Zsh start failing int math.\n    units=(\"B\" \"KiB\" \"MiB\" \"GiB\" \"TiB\" \"PiB\" \"EiB\" \"YiB\" \"ZiB\")\n\n    for ((size=0; i > 1024 && size < ${#units[@]}-1; size++)); do\n        remainder=$((i % 1024 * 100 / 1024))\n        i=$((i / 1024))\n    done\n\n    if [[ -n $remainder ]]; then\n        if ((remainder < 10)); then\n            remainder=\"0$remainder\"\n        fi\n    else\n        # Bytes case.\n        remainder=\"00\"\n    fi\n\n    # Precision formating.\n    remainder=\"${remainder:0:$prec}\"\n    if [[ -n $remainder ]]; then\n        remainder=\".$remainder\"\n    fi\n\n    lp_bytes=\"$i$remainder\"\n    lp_bytes_units=\"${units[$size+$_LP_FIRST_INDEX]}\"\n}\n\n\n_lp_disk() {\n    ((LP_ENABLE_DISK)) || return 2\n\n    lp_disk=\n    lp_disk_human=\n    lp_disk_perc=\n\n    # df -P . prints only the current FS, in a portable format.\n    # -k to get values in kB (supposedly more portable).\n    # LANG is set to avoid locale mangling with the words number.\n    # Backslash avoids any alias of df.\n    local df=\"$(LANG=C \\df -k -P . 2>/dev/null)\"\n    # Example output:\n    # Filesystem     1024-blocks      Used Available Capacity Mounted on\n    # /dev/nvme0n1p2   479608528 425188220  30011332      94% /\n    # For pseudo filesystems (like procfs or sysfs) output can be:\n    # Filesystem     1024-blocks  Used Available Capacity Mounted on\n    # sysfs                    0     0         0        - /sys\n\n    # Placeholder, total and capacity.\n    local _ total capa\n    # Compute location of the targeted column on the safe line.\n    local short=\"${df#*1024-blocks}\"\n    # Second line.\n    local second=\"${df#*$'\\n'}\"\n    # Consider only targeted columns.\n    # This may be extended to get other information if needed:\n    #             +- used        +- mount point (may have spaces)\n    #             |              |\n    #             v              v\n    read -r total _ lp_disk capa _ <<<\"${second:${#df}-${#short}-11}\"\n\n    # Skip small (under 1MiB) filesystems (probably pseudofs or something weird)\n    (( ${total:-0} < 1024 )) && return 1\n\n    # Without percent character.\n    lp_disk_perc=$(( 100 - ${capa:0:${#capa}-1} ))\n\n    [[ -z ${lp_disk} || -z ${lp_disk_perc} ]] && return 1\n\n    # Comparison in KiB.\n    # Ignore absolute threshold if whole FS is smaller than it; otherwise we would always show disk mark\n    if (( ( total >= LP_DISK_THRESHOLD && lp_disk <= LP_DISK_THRESHOLD ) || lp_disk_perc <= LP_DISK_THRESHOLD_PERC )); then\n        # df outputs in KiB, but it's more robust to implement lp_human in bytes,\n        # so we need to convert b in KiB here.\n        local lp_bytes lp_bytes_units\n        __lp_bytes_to_human $((lp_disk*1024)) \"$LP_DISK_PRECISION\"\n        lp_disk_human=\"${lp_bytes}\"\n        lp_disk_human_units=\"${lp_bytes_units}\"\n        return 0\n    else\n        return 1\n    fi\n}\n\n_lp_disk_color() {\n    if _lp_disk; then\n        if (( LP_ALWAYS_DISPLAY_VALUES )); then\n            if (( LP_DISPLAY_VALUES_AS_PERCENTS )); then\n                lp_disk_color=\"${LP_COLOR_DISK}${LP_MARK_DISK}${lp_disk_perc}${NO_COL}${LP_COLOR_DISK_UNITS}${_LP_PERCENT}${NO_COL}\"\n            else\n                # Metric SI norms ask for a space, but we prefer to stay compact.\n                # Coloring value differently from unit helps readability.\n                # The mark should be different enough to not be a problem.\n                lp_disk_color=\"${LP_COLOR_DISK}${LP_MARK_DISK}${lp_disk_human}${NO_COL}${LP_COLOR_DISK_UNITS}${lp_disk_human_units}${NO_COL}\"\n            fi\n        else\n            lp_disk_color=\"${LP_COLOR_DISK}${LP_MARK_DISK}${NO_COL}\"\n        fi\n    else\n        return $?\n    fi\n}\n\n\n##########\n# Title #\n##########\n\n# Deprecated since 2.0\n_lp_title() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help lp_title\n        return 0\n    fi\n\n    (( LP_ENABLE_TITLE )) || return\n\n    # Allow for ignoring first arg that looks like an option.\n    if [[ ${1-} == \"--\" ]]; then\n        shift\n    fi\n\n    # Get the input as pure text\n    local ret\n    __lp_strip_escapes \"${1-}\"\n    printf '%s' \"${_LP_OPEN_ESC}${LP_TITLE_OPEN}${ret}${LP_TITLE_CLOSE}${_LP_CLOSE_ESC}\"\n}\n\n_lp_formatted_title() {\n    (( LP_ENABLE_TITLE )) || return 2\n\n    # Get the input as pure text\n    local ret\n    __lp_strip_escapes \"${1-}\"\n    _lp_generated_title=\"$ret\"\n}\n\n_lp_raw_title() {\n    (( LP_ENABLE_TITLE )) || return 2\n\n    _lp_generated_title=${1-}\n}\n\nlp_title() {\n    (( LP_ENABLE_TITLE )) || return 2\n\n    if [[ -n ${1+x} ]]; then\n        _lp_manual_title=$1\n    else\n        unset _lp_manual_title\n    fi\n}\n\nif (( _LP_SHELL_zsh )); then\n    __lp_get_last_command_line() {\n        # shellcheck disable=SC2154\n        command=${history[$HISTCMD]}\n    }\nelse\n    __lp_get_last_command_line() {\n        command=$(HISTTIMEFORMAT='' builtin history 1 2>/dev/null)\n        command=${command#*[[:digit:]][* ] }\n\n        # Fallback measure if something goes wrong.\n        if [[ -z $command ]]; then\n            command=$BASH_COMMAND\n        fi\n    }\nfi\n\n__lp_print_title_command() {\n    local command\n    __lp_get_last_command_line\n\n    printf '%s' \"${LP_TITLE_OPEN}${_lp_manual_title:-${_lp_generated_title-${SHELL+\"$SHELL \\$ \"}}}${command}${LP_TITLE_CLOSE}\"\n}\n\n###################\n# CURRENT TIME    #\n###################\n\n# The targeted unicode characters are the \"CLOCK FACE\" ones\n# They are located in the codepages between:\n#     U+1F550 (ONE OCLOCK) and U+1F55B (TWELVE OCLOCK), for the plain hours\n#     U+1F55C (ONE-THIRTY) and U+1F567 (TWELVE-THIRTY), for the thirties\n# Generated with:\n# perl -C -E 'say join(\"\", map {chr(0x1F550+$_).\" \".chr(0x1F55C+$_).\" \"} 0..11)'\n_LP_CLOCK=(🕐 🕜 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 🕙 🕥 🕚 🕦 🕛 🕧 )\n\n_lp_analog_time() {\n    (( LP_ENABLE_TIME && LP_TIME_ANALOG )) || return 2\n\n    # %I: \"00\"..\"12\"  %M: \"00\"..\"59\"\n    # hh:  1..12  mm: 0..59\n    local hh mm\n    IFS=' ' read -r hh mm <<<\"$(date '+%I %M')\"\n\n    # Bash interprets a '0' prefix as octal\n    # so we have to clean that\n    hh=\"${hh#0}\"\n    mm=\"${mm#0}\"\n\n    # clock: 0 .. 25\n    #   1:00..1:14 -> 0\n    #   1:15..1:44 -> 1\n    #   1:45..2:15 -> 2\n    #   ...\n    #   12:15..12:44 -> 23\n    #   12:45..12:59 -> 0\n    # There is a space just after the clock char because the glyph\n    # width is twice usual glyphs\n    lp_analog_time=\"${_LP_CLOCK[((hh*60+mm-45)/30)%24+_LP_FIRST_INDEX]} \"\n}\n\n_lp_analog_time_color() {\n    _lp_analog_time || return \"$?\"\n\n    lp_analog_time_color=\"${LP_COLOR_TIME}${lp_analog_time}${NO_COL}\"\n}\n\n_lp_time() {\n    (( LP_ENABLE_TIME && ! LP_TIME_ANALOG )) || return 2\n\n    local ret\n    __lp_escape \"$(date \"+${LP_TIME_FORMAT}\")\"\n    lp_time=$ret\n}\n\n_lp_time_color() {\n    _lp_time || return \"$?\"\n\n    lp_time_color=\"${LP_COLOR_TIME}${lp_time}${NO_COL}\"\n}\n\n#######################\n# Container detection #\n#######################\n_lp_container() {\n    (( LP_ENABLE_CONTAINER )) || return 2\n\n    lp_container=\"\"\n\n    if [[ -n \"${SINGULARITY_CONTAINER-}\" || -n \"${SINGULARITY_NAME-}\" ]]; then\n        lp_container=\"Singlrty\"\n    elif [[ -e /run/.containerenv ]]; then\n        if [[ -f /run/.toolboxenv ]]; then\n            lp_container=\"Toolbox\"\n        else\n            lp_container=\"Podman\"\n        fi\n    elif [[ -e /proc/self/cgroup ]]; then\n        local cgroup=\"$(< /proc/self/cgroup)\"\n\n        if [[ \"$cgroup\" == *\"docker\"* ]]; then\n            lp_container=\"Docker\"\n        elif [[ \"$cgroup\" == *\"lxc\"* ]]; then\n            lp_container=\"LXC\"\n        elif [[ -r /run/host/container-manager ]]; then\n            local ret\n            IFS='' read -r ret < /run/host/container-manager\n            __lp_escape \"${ret#systemd-}\"\n            lp_container=\"$ret\"\n        else\n            return 1\n        fi\n    else\n        return 1\n    fi\n}\n\n_lp_container_color() {\n    unset lp_container_color\n    _lp_container || return \"$?\"\n\n    lp_container_color=\"«${LP_COLOR_CONTAINER}${lp_container}${NO_COL}»\"\n}\n\n\n_lp_dev_env_color() {\n    # add development environments\n    local -a dev_all\n    dev_all=(\n        \"${lp_modules_color-}\"\n        \"${lp_software_collections_color-}\"\n        \"${lp_aws_profile_color-}\"\n        \"${lp_container_color-}\"\n        \"${lp_python_env_color-}\"\n        \"${lp_node_env_color-}\"\n        \"${lp_ruby_env_color-}\"\n        \"${lp_perl_env_color-}\"\n        \"${lp_terraform_env_color-}\"\n        \"${lp_kubernetes_context_color-}\"\n        \"${lp_cmake_color-}\"\n        \"${lp_os_color-}\"\n    )\n    local -a dev_active\n    dev_active=()\n    for i in \"${dev_all[@]}\"; do\n        if [[ \"$i\" ]]; then\n            dev_active+=(\"$i\")\n        fi\n    done\n    if [[ ${#dev_active[@]} -gt 0 ]] ; then\n        local lp_join\n        _lp_join \"${LP_MARK_DEV_MID}\" \"${dev_active[@]}\"\n        lp_dev_env_color=\"${LP_MARK_DEV_OPEN}${lp_join}${LP_MARK_DEV_CLOSE}\"\n        return 0\n    else\n        unset lp_dev_env_color\n        return 1\n    fi\n}\n\n\n#################\n# Default theme #\n#################\n\n_lp_default_theme_activate() {\n    if ((LP_ENABLE_PATH)); then\n        # Default value for LP_PERM when LP_ENABLE_PERM is 0\n        LP_PERM=${LP_MARK_PERM}   # without color\n    else\n        LP_PERM=\n    fi\n\n    _lp_user\n    local -i user_type=\"$?\"\n\n    if (( user_type < 2 )); then  # if user is not root\n        if (( LP_ENABLE_SUDO )); then\n            LP_COLOR_MARK_NO_SUDO=\"$LP_COLOR_MARK\"\n        fi\n    else # root!\n        if (( ! LP_ENABLE_VCS_ROOT )); then\n            LP_MARK_DISABLED=\"$LP_MARK_DEFAULT\"\n        fi\n    fi\n\n    # The user or connection type is not expected to change from inside the\n    # shell, so we build this just once.\n    if _lp_username_color; then\n        LP_USER=\"$lp_username_color\"\n    else\n        LP_USER=\n    fi\n\n    _lp_hostname_color\n    LP_HOST=\"$lp_hostname_color\"\n\n    # If we are running in a terminal multiplexer, brackets are colored\n    if _lp_multiplexer; then\n        LP_BRACKET_OPEN=\"${LP_COLOR_IN_MULTIPLEXER}${LP_MARK_MULTIPLEXER_OPEN}${NO_COL}\"\n        LP_BRACKET_CLOSE=\"${LP_COLOR_IN_MULTIPLEXER}${LP_MARK_MULTIPLEXER_CLOSE}${NO_COL}\"\n    else\n        LP_BRACKET_OPEN=\"${LP_MARK_BRACKET_OPEN}\"\n        LP_BRACKET_CLOSE=\"${LP_MARK_BRACKET_CLOSE}\"\n    fi\n\n    _lp_terminal_device\n    # shellcheck disable=SC2034\n    LP_TTYN=$lp_terminal_device\n}\n\n_lp_default_theme_directory() {\n    if ((LP_ENABLE_PATH)); then\n        # LP_PERM: shows a \":\"\n        # - colored in green if user has write permission on the current dir\n        # - colored in red if not\n        # - can set another symbol with LP_MARK_PERM\n        if (( LP_ENABLE_PERM )); then\n            if [[ -w \"${PWD}\" ]]; then\n                LP_PERM=\"${LP_COLOR_WRITE}${LP_MARK_PERM}${NO_COL}\"\n            else\n                LP_PERM=\"${LP_COLOR_NOWRITE}${LP_MARK_PERM}${NO_COL}\"\n            fi\n        fi\n\n        local lp_path_format\n        _lp_path_format \"$LP_COLOR_PATH\" \"$LP_COLOR_PATH_LAST_DIR\" \"$LP_COLOR_PATH_VCS_ROOT\" \"$LP_COLOR_PATH_SHORTENED\" \"/\" \"$LP_COLOR_PATH_SEPARATOR\"\n\n        LP_PWD=\"${lp_path_format}${NO_COL}\"\n    else\n        LP_PWD=\n        return 2\n    fi\n}\n\n# Do not complain about unused variables.\n# shellcheck disable=SC2034\n_lp_default_theme_prompt_data() {\n    # left of main prompt: space at right\n    if _lp_jobcount_color; then\n        LP_JOBS=\"$lp_jobcount_color \"\n    else\n        LP_JOBS=\n    fi\n    if _lp_temperature_color; then\n        LP_TEMP=\"$lp_temperature_color \"\n    else\n        LP_TEMP=\n    fi\n    if _lp_load_color; then\n        LP_LOAD=\"$lp_load_color \"\n    else\n        LP_LOAD=\n    fi\n    if _lp_battery_color; then\n        LP_BATT=\"$lp_battery_color \"\n    else\n        LP_BATT=\n    fi\n    if _lp_wifi_signal_strength_color; then\n        LP_WIFI=\"$lp_wifi_signal_strength_color \"\n    else\n        LP_WIFI=\n    fi\n    if _lp_ram_color; then\n        LP_RAM=\"$lp_ram_color \"\n    else\n        LP_RAM=\n    fi\n    if _lp_disk_color; then\n        LP_DISK=\"$lp_disk_color \"\n    else\n        LP_DISK=\n    fi\n\n    if _lp_time_color; then\n        LP_TIME=\"$lp_time_color \"\n    elif _lp_analog_time_color; then\n        LP_TIME=\"$lp_analog_time_color \"\n    else\n        LP_TIME=\n    fi\n\n    if _lp_sudo_active_color; then\n        LP_COLOR_MARK=\"$lp_sudo_active_color\"\n    fi\n\n    if _lp_dirstack_color; then\n        LP_DIRSTACK=\" $lp_dirstack_color\"\n    else\n        LP_DIRSTACK=\n    fi\n\n    # in main prompt: no space\n    if _lp_http_proxy_color; then\n        LP_PROXY=\"$lp_http_proxy_color\"\n    else\n        LP_PROXY=\n    fi\n\n    if _lp_env_vars_color; then\n        LP_ENVVARS=\"$lp_env_vars_color\"\n    else\n        LP_ENVVARS=\n    fi\n\n    if _lp_shell_level_color; then\n        LP_SHLVL=\"$lp_shell_level_color\"\n    else\n        LP_SHLVL=\n    fi\n\n    # All the following \"dev-related\" variables may be used alone by theme designers.\n    # If you need the whole section, you can also use LP_DEV_ENV defined below.\n\n    if _lp_python_env_color; then\n        LP_VENV=\" $lp_python_env_color\"\n    else\n        LP_VENV=\n    fi\n\n    if _lp_node_env_color; then\n        LP_NODE_VENV=\" $lp_node_env_color\"\n    else\n        LP_NODE_VENV=\n    fi\n\n    if _lp_ruby_env_color; then\n        LP_RUBY_VENV=\" $lp_ruby_env_color\"\n    else\n        LP_RUBY_VENV=\n    fi\n\n    if _lp_perl_env_color; then\n        LP_PERL_VENV=\" $lp_perl_env_color\"\n    else\n        LP_PERL_VENV=\n    fi\n\n\n    if _lp_kubernetes_context_color; then\n        LP_KUBECONTEXT=\" $lp_kubernetes_context_color\"\n    else\n        LP_KUBECONTEXT=\n    fi\n\n    if _lp_terraform_env_color; then\n        LP_TFSPACE=\" $lp_terraform_env_color\"\n    else\n        LP_TFSPACE=\n    fi\n\n    if _lp_container_color; then\n        LP_CONTAINER=\" $lp_container_color\"\n    else\n        LP_CONTAINER=\n    fi\n\n    if _lp_software_collections_color; then\n        LP_SCLS=\" $lp_software_collections_color\"\n    else\n        LP_SCLS=\n    fi\n\n    if _lp_aws_profile_color; then\n        LP_AWS_PROFILE=\" $lp_aws_profile_color\"\n    else\n        LP_AWS_PROFILE=\n    fi\n\n    if _lp_cmake_color; then\n        LP_CMAKE=\" $lp_cmake_color\"\n    else\n        LP_CMAKE=\n    fi\n\n    if _lp_os_color; then\n        LP_OPSYS=\" $lp_os_color\"\n    else\n        LP_OPSYS=\n    fi\n\n    if _lp_modules_color; then\n        LP_MODULES=\" $lp_modules_color\"\n    else\n        LP_MODULES=\n    fi\n\n    # End of the section for dev-related variables.\n\n    # Alternative to atomic variables above:\n    # a correctly separated string list with everything.\n    if _lp_dev_env_color ; then\n        LP_DEV_ENV=\" $lp_dev_env_color\"\n    else\n        LP_DEV_ENV=\n    fi\n\n    if _lp_runtime_color; then\n        LP_RUNTIME=\" $lp_runtime_color\"\n    else\n        LP_RUNTIME=\n    fi\n\n    if _lp_error_color; then\n        LP_ERR=\" $lp_error_color\"\n    else\n        LP_ERR=\n    fi\n\n    if _lp_error_meaning_color; then\n        LP_ERR_MEANING=\"$lp_error_meaning_color\"\n    else\n        LP_ERR_MEANING=\n    fi\n\n    if _lp_find_vcs && _lp_vcs_details_color; then\n        LP_VCS=\" $lp_vcs_details_color\"\n    else\n        LP_VCS=\n    fi\n\n    _lp_smart_mark\n    LP_MARK=\"${lp_smart_mark}${NO_COL} \"\n}\n\n_lp_default_theme_prompt_template() {\n    if [[ -f \"${LP_PS1_FILE-}\" ]]; then\n        # shellcheck source=templates/minimal/minimal.ps1\n        source \"$LP_PS1_FILE\"\n    fi\n\n    if [[ -z \"${LP_PS1-}\" ]]; then\n        # Add title escape time, battery, load, temperature, RAM, disk, wifi, jobs.\n        PS1=\"${LP_PS1_PREFIX}${LP_TIME}${LP_BATT}${LP_LOAD}${LP_TEMP}${LP_RAM}${LP_DISK}${LP_WIFI}${LP_JOBS}\"\n\n        # Add multiplexer brackets, user, host, permissions colon, working directory, dirstack, proxy, watched environment variables and nested shell level.\n        PS1+=\"${LP_BRACKET_OPEN}${LP_USER}${LP_HOST}${LP_PERM}${LP_PWD}${LP_DIRSTACK}${LP_BRACKET_CLOSE}${LP_PROXY}${LP_ENVVARS}${LP_SHLVL}\"\n\n        # Add the list of development environments/config/etc.\n        PS1+=\"${LP_DEV_ENV}\"\n\n        # Add VCS infos\n        # If root, the info has not been collected unless LP_ENABLE_VCS_ROOT\n        # is set.\n        PS1+=\"${LP_VCS}\"\n\n        # Add last runtime, return code & meaning, prompt mark and user-defined postfix.\n        PS1+=\"${LP_RUNTIME}${LP_ERR}${LP_ERR_MEANING}${LP_MARK_PREFIX}${LP_COLOR_MARK}${LP_MARK}${LP_PS1_POSTFIX}\"\n\n        # Get the core sections without prompt escapes and make them into a title.\n        _lp_formatted_title \"${LP_PS1_PREFIX}${LP_BRACKET_OPEN}${LP_USER}${LP_HOST}${LP_MARK_PERM}${lp_path-}${LP_BRACKET_CLOSE}${LP_MARK_PREFIX}${LP_MARK}${LP_PS1_POSTFIX}\"\n    else\n        PS1=$LP_PS1\n    fi\n}\n\n_lp_default_theme_prompt() {\n    _lp_default_theme_prompt_data\n    _lp_default_theme_prompt_template\n}\n\n########################\n# Construct the prompt #\n########################\n\n__lp_set_prompt() {\n    # Display the return value of the last command, if different from zero\n    # As this get the last returned code, it should be called first\n    local -i lp_error=\"$?\"\n\n    if (( LP_HIDE_EMPTY_ERROR )); then\n        (( ! ${_LP_REAL_COMMAND:-1} )) && lp_error=0\n        _LP_REAL_COMMAND=0\n    fi\n\n    if (( LP_ENABLE_RUNTIME || LP_ENABLE_RUNTIME_BELL )); then\n        __lp_runtime_after\n    fi\n\n    # bash: execute the old prompt hook\n    if [[ -n ${LP_OLD_PROMPT_COMMAND-} ]]; then\n        eval \"$LP_OLD_PROMPT_COMMAND\"\n    fi\n\n    if (( LP_ENABLE_RUNTIME_BELL && ${_LP_RUNTIME_SECONDS-0} >= LP_RUNTIME_BELL_THRESHOLD )); then\n        printf '%s' \"$_LP_TI_BELL\"\n    fi\n\n    if [[ \"$_LP_OLD_THEME\" != \"$LP_THEME\" ]]; then\n        lp_theme \"$LP_THEME\" >/dev/null 2>&1\n    fi\n\n    # Localize cache data variables\n    local _lp_git_diff_shortstat_uncommitted _lp_git_diff_shortstat_unstaged _lp_git_diff_shortstat_staged\n\n    # if change of working directory\n    if [[ \"${LP_OLD_PWD-}\" != \"LP:$PWD\" ]]; then\n        # Update directory icon for MacOS X\n        \"$_LP_TERM_UPDATE_DIR\"\n\n        \"$_LP_THEME_DIRECTORY_FUNCTION\"\n\n        # Prefix with 'LP:' to prevent Zsh with AUTO_NAME_DIRS enabled using\n        # this var as a name for the working directory, that will be used by\n        # the '%' and related prompt sequences.\n        # See https://github.com/liquidprompt/liquidprompt/issues/124 for details.\n        LP_OLD_PWD=\"LP:$PWD\"\n    fi\n\n    \"$_LP_THEME_PROMPT_FUNCTION\"\n\n    if (( LP_ENABLE_TITLE )); then\n        printf '%s' \"${LP_TITLE_OPEN}${_lp_manual_title:-${_lp_generated_title-${SHELL-}}}${LP_TITLE_CLOSE}\"\n    fi\n}\n\n__lp_preexec() {\n    if (( LP_ENABLE_RUNTIME || LP_ENABLE_RUNTIME_BELL )); then\n        __lp_runtime_before\n    fi\n    if (( LP_ENABLE_TITLE_COMMAND )); then\n        __lp_print_title_command\n    fi\n    if (( LP_HIDE_EMPTY_ERROR )); then\n        _LP_REAL_COMMAND=1\n    fi\n}\n\n__lp_before_command() {\n    # For debugging\n    #printf 'XXX %s\\n' \"$BASH_COMMAND\"\n\n    # If this is the last thing before prompt is being drawn, the command is done,\n    # so mark the next trap. Note these two events could be at the same\n    # time, so no elif is used.\n    # It is possible for PROMPT_COMMAND to be unset, as we could be in the middle\n    # of replacing it in lp_activate().\n    local first_command last_command\n    first_command=${PROMPT_COMMAND-}\n    if (( ${BASH_VERSINFO[0]:-0} > 5 || ( ${BASH_VERSINFO[0]:-0} == 5 && ${BASH_VERSINFO[1]:-0} >= 1 ) )) \\\n        && [[ -n \"${PROMPT_COMMAND[*]+x}\" ]]; then\n        last_command=${PROMPT_COMMAND[-1]}\n    else\n        last_command=${PROMPT_COMMAND-}\n    fi\n\n    if [[ \"$last_command\" == *\"$BASH_COMMAND\" ]]; then\n        _LP_AT_PROMPT=1\n        # Return early, because the PROMPT_COMMAND should never trigger preexec hooks.\n        return\n    fi\n\n    # If this is the first time after the user submitted the command,\n    # execute the hooks, unless the user submitted an empty command.\n    if (( _LP_AT_PROMPT )); then\n        _LP_AT_PROMPT=0\n        if [[ \"$first_command\" != \"$BASH_COMMAND\"* ]]; then\n            __lp_preexec\n        fi\n    fi\n}\n\nprompt_tag() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help prompt_tag\n        return 0\n    fi\n\n    # Allow for ignoring first arg that looks like an option.\n    if [[ ${1-} == \"--\" ]]; then\n        shift\n    fi\n\n    if [[ -n \"${1-}\" ]]; then\n        export LP_PS1_PREFIX=\"$1 \"\n    else\n        export LP_PS1_PREFIX=\n    fi\n}\n\n# Activate Liquid Prompt\n# shellcheck disable=SC2120\nprompt_on() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help prompt_on\n        return 0\n    fi\n\n    # Reset so all PWD dependent variables are computed after loading\n    LP_OLD_PWD=\"\"\n\n    # if Liquid Prompt has not been already set\n    if [[ -z \"${LP_OLD_PS1-}\" ]]; then\n        LP_OLD_PS1=\"$PS1\"\n    fi\n\n    if (( _LP_SHELL_bash )); then\n        # Prevent some cases where the user shoots in his own foot.\n        # PROMPT_COMMAND is not exported by default, but some users\n        # incorrectly export it from their profile/bashrc (GitHub #450),\n        # so we preventively UNexport it.\n        # TODO: warn the user if it was exported\n        if (( ${BASH_VERSINFO[0]:-0} > 4 || ( ${BASH_VERSINFO[0]:-0} == 4 && ${BASH_VERSINFO[1]:-0} >= 2 ) )); then\n            # -g is only available since bash 4.2\n            declare -g +x PROMPT_COMMAND\n        fi\n\n        if ! __lp_use_bash_preexec; then\n            local set_prompt_command\n            if (( LP_DEBUG_TIME )); then\n                set_prompt_command=\"time __lp_set_prompt\"\n            else\n                set_prompt_command=__lp_set_prompt\n            fi\n\n            if (( ${BASH_VERSINFO[0]:-0} > 5 || ( ${BASH_VERSINFO[0]:-0} == 5 && ${BASH_VERSINFO[1]:-0} >= 1 ) )); then\n                # PROMPT_COMMAND is an array since bash 5.1\n                if ! ( __lp_array_contains __lp_set_prompt ${PROMPT_COMMAND[@]+\"${PROMPT_COMMAND[@]}\"} \\\n                  || __lp_array_contains \"time __lp_set_prompt\" ${PROMPT_COMMAND[@]+\"${PROMPT_COMMAND[@]}\"} ); then\n                   PROMPT_COMMAND+=( \"$set_prompt_command\" )\n                fi\n            else\n                if [[ -z ${LP_OLD_PROMPT_COMMAND+x} ]]; then\n                    LP_OLD_PROMPT_COMMAND=\"${PROMPT_COMMAND-}\"\n                fi\n\n                # shellcheck disable=SC2178\n                PROMPT_COMMAND=\"$set_prompt_command\"\n            fi\n\n            if (( ${_LP_ENABLE_PREEXEC-0} )); then\n                _LP_AT_PROMPT=0\n                _LP_RUNTIME_LAST_SECONDS=$SECONDS\n                # __lp_before_command gets called just before bash executes a command,\n                # including $PROMPT_COMMAND\n                # Pass $_ to this call, because it sets $_ to what it already was\n                trap '__lp_before_command \"$_\"' DEBUG\n            fi\n        else\n            # We do not want __lp_set_prompt to show up twice in precmd_functions; if it does, then LP_ENABLE_ERROR\n            # breaks because even if the first call of __lp_set_prompt has $? != 0, the second one will have $? == 0.\n            # (Same for __lp_debug_timed_lp_set_prompt.)\n\n            # This conditional is intended to check  $precmd_functions for the presence of '__lp_set_prompt' or\n            # '__lp_debug_timed_lp_set_prompt' so they get added at most once\n            if ! ( __lp_array_contains __lp_set_prompt ${precmd_functions[@]+\"${precmd_functions[@]}\"} \\\n                || __lp_array_contains __lp_debug_timed_set_prompt ${precmd_functions[@]+\"${precmd_functions[@]}\"} );\n            then\n                if (( LP_DEBUG_TIME )); then\n                    __lp_debug_timed_lp_set_prompt() {\n                        time __lp_set_prompt\n                    }\n                    precmd_functions+=(__lp_debug_timed_lp_set_prompt)\n                else\n                    precmd_functions+=(__lp_set_prompt)\n                fi\n            fi\n            if (( ${_LP_ENABLE_PREEXEC-0} )); then\n                _LP_RUNTIME_LAST_SECONDS=$SECONDS\n                # It's less bad to have this be duped than __lp_set_prompt, but let's be sure\n                if ! ( __lp_array_contains __lp_preexec ${preexec_functions[@]+\"${preexec_functions[@]}\"} ); then\n                    preexec_functions+=(__lp_preexec)\n                fi\n            fi\n        fi\n    else # zsh\n        if [[ -n \"${prompt_theme-}\" && \"$prompt_theme\" != off ]]; then\n            _LP_ZSH_PROMPT_THEME=\"$prompt_theme\"\n            # Disable the prompt to disable its precmd hook\n            prompt off\n        fi\n\n        if [[ -z ${_LP_OLD_SETOPT-} ]]; then\n            # Dump option names: echo ${(ko)options}\n            # shellcheck disable=SC2154\n            if [[ \"${options[promptpercent]}\" == on ]]; then\n                _LP_OLD_SETOPT=\"promptpercent\"\n            else\n                _LP_OLD_SETOPT=\"nopromptpercent\"\n            fi\n        fi\n\n        # Set options that affect PS1 evaluation; enable percent expansion\n        setopt promptpercent\n\n        add-zsh-hook precmd __lp_set_prompt\n\n        if (( ${_LP_ENABLE_PREEXEC-0} )); then\n            _LP_RUNTIME_LAST_SECONDS=$SECONDS\n            declare -gi _LP_RUNTIME_SECONDS\n            add-zsh-hook preexec __lp_preexec\n        fi\n    fi\n}\n\n__lp_disable_hooks() {\n    if (( _LP_SHELL_bash )); then\n        if __lp_use_bash_preexec; then\n            # Disable previous hooks as options that set them may have changed.\n            for i in ${precmd_functions[@]+\"${!precmd_functions[@]}\"}; do\n                local value=\"${precmd_functions[i]}\"\n                if [[ $value == \"__lp_set_prompt\" || $value == \"__lp_debug_timed_lp_set_prompt\" ]]; then\n                    unset 'precmd_functions[i]'\n                fi\n            done\n\n            for i in ${preexec_functions[@]+\"${!preexec_functions[@]}\"}; do\n                local value=\"${preexec_functions[i]}\"\n                if [[ $value == \"__lp_preexec\" ]]; then\n                    unset 'preexec_functions[i]'\n                fi\n            done\n        else\n            if (( ${BASH_VERSINFO[0]:-0} > 5 || ( ${BASH_VERSINFO[0]:-0} == 5 && ${BASH_VERSINFO[1]:-0} >= 1 ) )); then\n                # PROMPT_COMMAND is an array since bash 5.1\n                for i in ${PROMPT_COMMAND[@]+\"${!PROMPT_COMMAND[@]}\"}; do\n                    local value=\"${PROMPT_COMMAND[i]}\"\n                    if [[ $value == \"__lp_set_prompt\" || $value == \"time __lp_set_prompt\" ]]; then\n                        unset 'PROMPT_COMMAND[i]'\n                    fi\n                done\n            else\n                if [[ -n ${LP_OLD_PROMPT_COMMAND+x} ]]; then\n                    # shellcheck disable=SC2178\n                    PROMPT_COMMAND=\"${LP_OLD_PROMPT_COMMAND-}\"\n                    unset LP_OLD_PROMPT_COMMAND\n                else\n                    # shellcheck disable=SC2128\n                    if [[ ${PROMPT_COMMAND-} == \"__lp_set_prompt\" || ${PROMPT_COMMAND-} == \"time __lp_set_prompt\" ]]; then\n                        unset PROMPT_COMMAND\n                    fi\n                fi\n            fi\n\n            # Disable the DEBUG trap used by the RUNTIME or TITLE_COMMAND features\n            if (( ${_LP_ENABLE_PREEXEC-0} )); then\n                trap - DEBUG\n            fi\n        fi\n    else # zsh\n        {\n            add-zsh-hook -d precmd  __lp_set_prompt\n            add-zsh-hook -d preexec __lp_preexec\n        } >/dev/null\n    fi\n}\n\n# Come back to the old prompt\nprompt_off() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help prompt_off\n        return 0\n    fi\n\n    __lp_disable_hooks\n\n    PS1=$LP_OLD_PS1\n\n    if (( _LP_SHELL_zsh )); then\n        setopt \"${_LP_OLD_SETOPT}\"\n\n        if [[ -n ${_LP_ZSH_PROMPT_THEME-} ]]; then\n            prompt \"$_LP_ZSH_PROMPT_THEME\"\n            unset _LP_ZSH_PROMPT_THEME\n        fi\n    fi\n}\n\n# Use an empty prompt: just the \\$ mark\nprompt_OFF() {\n    if [[ ${1-} == \"--help\" || ${1-} == \"-h\" ]]; then\n        lp_help prompt_OFF\n        return 0\n    fi\n\n    __lp_disable_hooks\n\n    PS1=\"$_LP_MARK_SYMBOL \"\n}\n\nif (( _LP_SHELL_bash )); then\n    # These functions must inherit shell traps to be able to disable them.\n    declare -f -t __lp_disable_hooks lp_activate prompt_off prompt_OFF\nfi\n\nlp_theme() {\n    local theme=\"${1-}\"\n\n    if [[ $theme == \"--help\" || $theme == \"-h\" ]]; then\n        lp_help lp_theme\n        return 0\n    fi\n\n    LP_THEME=\"${_LP_OLD_THEME-}\"\n\n    if [[ $theme == '--list' ]]; then\n        local -a lp_theme_list\n        __lp_theme_list\n        printf '%s\\n' \"${lp_theme_list[@]}\"\n        return\n    fi\n\n    local f_prompt=\"_lp_${theme}_theme_prompt\"\n    local f_dir=\"_lp_${theme}_theme_directory\"\n    local f_activate=\"_lp_${theme}_theme_activate\"\n    local f_version=\"_lp_${theme}_theme_version_check\"\n\n    if [[ -z $theme ]]; then\n        printf '%s\\n\\n' \\\n            'Must pass in the name of a theme. If you meant the default Liquid Prompt theme, try \"default\".' >&2\n        lp_help theme\n        return 1\n    fi\n\n    if __lp_is_function \"$f_version\"; then\n        local -a lp_version_check\n        \"$f_version\"\n        if ! _lp_version_greatereq ${lp_version_check[@]+\"${lp_version_check[@]}\"}; then\n            local lp_version\n            _lp_version_string ${lp_version_check[@]+\"${lp_version_check[@]}\"}\n            printf 'ERROR: Loading theme \"%s\" failed: theme requires version %s or greater of Liquid Prompt.\\n' \\\n                \"$theme\" \"$lp_version\" >&2\n            return 2\n        fi\n    fi\n\n    if ! __lp_is_function \"$f_prompt\"; then\n        printf 'ERROR: Loading theme \"%s\" failed: cannot find function \"%s\". Please source the theme file first.\\n' \\\n            \"$theme\" \"$f_prompt\" >&2\n        return 2\n    fi\n    if ! __lp_is_function \"$f_dir\"; then\n        f_dir=\":\"\n    fi\n    if ! __lp_is_function \"$f_activate\"; then\n        f_activate=\":\"\n    fi\n\n    _LP_THEME_ACTIVATE_FUNCTION=$f_activate\n    _LP_THEME_DIRECTORY_FUNCTION=$f_dir\n    _LP_THEME_PROMPT_FUNCTION=$f_prompt\n    LP_THEME=\"$theme\"\n    _LP_OLD_THEME=\"$theme\"\n\n    \"$f_activate\"\n    prompt_on\n}\n\n# By default, sourcing 'liquidprompt' will activate Liquid Prompt\nif [ \"${1-}\" != \"--no-activate\" ]; then\n    lp_activate\nfi\n\n# vim: ft=sh et sts=4 sw=4 tw=120\n"
        },
        {
          "name": "liquidprompt.plugin.zsh",
          "type": "blob",
          "size": 0.02734375,
          "content": "source ${0%/*}/liquidprompt\n"
        },
        {
          "name": "pull_request_template.md",
          "type": "blob",
          "size": 1.5029296875,
          "content": "\n<!-- Provide a description here -->\n\n<!-- Related issue: #XXX -->\n\n\n# Technical checklist:\n\n- code follows our [shell standards](https://github.com/liquidprompt/liquidprompt/wiki/Shell-standards):\n    - [ ] correct use of `IFS`\n    - [ ] careful quoting\n    - [ ] cautious array access\n    - [ ] portable array indexing with `_LP_FIRST_INDEX`\n    - [ ] printing a \"%\" character is done with `_LP_PERCENT`\n    - [ ] functions/variable naming conventions\n    - [ ] functions have local variables\n    - [ ] data functions have optimization guards (early exits)\n    - [ ] subshells are avoided as much as possible\n    - [ ] string substitutions may be done differently in Bash and Zsh (use `_LP_SHELL_*`)\n- tests and checks have been added, ran, and their warnings fixed:\n    - [ ] unit tests have been updated (see `tests/test_*.sh` files)\n    - [ ] ran `tests.sh`\n    - [ ] ran `shellcheck.sh` (requires [shellcheck](https://github.com/koalaman/shellcheck#user-content-installing)).\n- documentation have been updated accordingly:\n    - [ ] functions and attributes are documented in alphabetical order\n    - [ ] new sections are documented in the default theme\n    - [ ] tag `.. versionadded:: X.Y` or `.. versionchanged:: Y.Z`\n    - [ ] functions signatures have arguments, returned code, and set value(s)\n    - [ ] attributes have types and defaults\n    - [ ] ran `docs/docs-lint.sh` (requires Python 3 and `requirements.txt`\n          installed (`cd docs/; python3 -m venv venv; . venv/bin/activate; pip install -r requirements.txt`))\n\n\n"
        },
        {
          "name": "shellcheck.sh",
          "type": "blob",
          "size": 0.400390625,
          "content": "#!/bin/sh\n\n# shellcheck shell=bash\n\n# shellcheck disable=SC2093\nexec shellcheck \\\n  --shell=bash \\\n  --exclude=SC2155 \\\n  --external-sources --check-sourced \\\n  liquidprompt \\\n  tools/* \\\n  \"$0\" # Include this script to get the below imports\n\n\n. ./liquidprompt\n\n. ./themes/alternate_vcs/alternate_vcs.theme\n. ./themes/powerline/powerline.theme\n. ./themes/unfold/unfold.theme\n\n# vim: ft=sh et sts=2 sw=2 tw=120\n"
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests.sh",
          "type": "blob",
          "size": 0.876953125,
          "content": "#!/bin/bash\n\nif [[ -n ${1+x} ]]; then\n  shells=(\"$@\")\nelse\n  shells=(bash zsh)\nfi\n\ncd \"${0%/*}/tests\"\n\nif [ ! -r shunit2 ]; then\n  curl https://raw.githubusercontent.com/kward/shunit2/v2.1.8/shunit2 -O\nfi\n\ntypeset -a testing_shells\n\nfor shell in \"${shells[@]}\"; do\n  if command -v \"$shell\" >/dev/null; then\n    testing_shells+=(\"$shell\")\n    printf 'shell \"%s\": version \"%s\"\\n' \"$shell\" \"$(\"$shell\" --version)\"\n  else\n    printf \"Cannot find shell '%s', skipping tests\\n\" \"$shell\" >&2\n  fi\ndone\n\ntypeset -i fail=0\ntypeset -a errors\n\nfor test_file in ./test_*.sh; do\n  for shell in \"${testing_shells[@]}\"; do\n    printf \"\\nRunning shell '%s' with test '%s'\\n\" \"$shell\" \"$test_file\"\n    \"$shell\" \"$test_file\" || {\n      fail+=1\n      errors+=(\"Failed running test '${test_file}' with shell '${shell}'\")\n    }\n  done\ndone\n\nprintf '%s\\n' \"${errors[@]}\"\n\nexit \"$fail\"\n\n# vim: ft=sh et sts=2 sw=2 tw=120\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}