{
  "metadata": {
    "timestamp": 1736568808914,
    "page": 960,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jakejarvis/s3-sync-action",
      "stars": 1048,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.60546875,
          "content": "FROM python:3.8-alpine\n\nLABEL \"com.github.actions.name\"=\"S3 Sync\"\nLABEL \"com.github.actions.description\"=\"Sync a directory to an AWS S3 repository\"\nLABEL \"com.github.actions.icon\"=\"refresh-cw\"\nLABEL \"com.github.actions.color\"=\"green\"\n\nLABEL version=\"0.5.1\"\nLABEL repository=\"https://github.com/jakejarvis/s3-sync-action\"\nLABEL homepage=\"https://jarv.is/\"\nLABEL maintainer=\"Jake Jarvis <jake@jarv.is>\"\n\n# https://github.com/aws/aws-cli/blob/master/CHANGELOG.rst\nENV AWSCLI_VERSION='1.18.14'\n\nRUN pip install --quiet --no-cache-dir awscli==${AWSCLI_VERSION}\n\nADD entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0654296875,
          "content": "MIT License\n\nCopyright (c) 2019-present Jake Jarvis <jake@jarv.is>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3271484375,
          "content": "# GitHub Action to Sync S3 Bucket ðŸ”„\n\nThis simple action uses the [vanilla AWS CLI](https://docs.aws.amazon.com/cli/index.html) to sync a directory (either from your repository or generated during your workflow) with a remote S3 bucket.\n\n\n## Usage\n\n### `workflow.yml` Example\n\nPlace in a `.yml` file such as this one in your `.github/workflows` folder. [Refer to the documentation on workflow YAML syntax here.](https://help.github.com/en/articles/workflow-syntax-for-github-actions)\n\nAs of v0.3.0, all [`aws s3 sync` flags](https://docs.aws.amazon.com/cli/latest/reference/s3/sync.html) are optional to allow for maximum customizability (that's a word, I promise) and must be provided by you via `args:`.\n\n#### The following example includes optimal defaults for a public static website:\n\n- `--acl public-read` makes your files publicly readable (make sure your [bucket settings are also set to public](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteAccessPermissionsReqd.html)).\n- `--follow-symlinks` won't hurt and fixes some weird symbolic link problems that may come up.\n- Most importantly, `--delete` **permanently deletes** files in the S3 bucket that are **not** present in the latest version of your repository/build.\n- **Optional tip:** If you're uploading the root of your repository, adding `--exclude '.git/*'` prevents your `.git` folder from syncing, which would expose your source code history if your project is closed-source. (To exclude more than one pattern, you must have one `--exclude` flag per exclusion. The single quotes are also important!)\n\n```yaml\nname: Upload Website\n\non:\n  push:\n    branches:\n    - master\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@master\n    - uses: jakejarvis/s3-sync-action@master\n      with:\n        args: --acl public-read --follow-symlinks --delete\n      env:\n        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}\n        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        AWS_REGION: 'us-west-1'   # optional: defaults to us-east-1\n        SOURCE_DIR: 'public'      # optional: defaults to entire repository\n```\n\n\n### Configuration\n\nThe following settings must be passed as environment variables as shown in the example. Sensitive information, especially `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`, should be [set as encrypted secrets](https://help.github.com/en/articles/virtual-environments-for-github-actions#creating-and-using-secrets-encrypted-variables) â€”Â otherwise, they'll be public to anyone browsing your repository's source code and CI logs.\n\n| Key | Value | Suggested Type | Required | Default |\n| ------------- | ------------- | ------------- | ------------- | ------------- |\n| `AWS_ACCESS_KEY_ID` | Your AWS Access Key. [More info here.](https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html) | `secret env` | **Yes** | N/A |\n| `AWS_SECRET_ACCESS_KEY` | Your AWS Secret Access Key. [More info here.](https://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html) | `secret env` | **Yes** | N/A |\n| `AWS_S3_BUCKET` | The name of the bucket you're syncing to. For example, `jarv.is` or `my-app-releases`. | `secret env` | **Yes** | N/A |\n| `AWS_REGION` | The region where you created your bucket. Set to `us-east-1` by default. [Full list of regions here.](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) | `env` | No | `us-east-1` |\n| `AWS_S3_ENDPOINT` | The endpoint URL of the bucket you're syncing to. Can be used for [VPC scenarios](https://aws.amazon.com/blogs/aws/new-vpc-endpoint-for-amazon-s3/) or for non-AWS services using the S3 API, like [DigitalOcean Spaces](https://www.digitalocean.com/community/tools/adapting-an-existing-aws-s3-application-to-digitalocean-spaces). | `env` | No | Automatic (`s3.amazonaws.com` or AWS's region-specific equivalent) |\n| `SOURCE_DIR` | The local directory (or file) you wish to sync/upload to S3. For example, `public`. Defaults to your entire repository. | `env` | No | `./` (root of cloned repository) |\n| `DEST_DIR` | The directory inside of the S3 bucket you wish to sync/upload to. For example, `my_project/assets`. Defaults to the root of the bucket. | `env` | No | `/` (root of bucket) |\n\n\n## License\n\nThis project is distributed under the [MIT license](LICENSE.md).\n"
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 0.1728515625,
          "content": "name: \"S3 Sync\"\ndescription: \"Sync a directory to an AWS S3 repository\"\nauthor: jakejarvis\nruns:\n  using: docker\n  image: Dockerfile\nbranding:\n  icon: refresh-cw\n  color: green\n"
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 1.4462890625,
          "content": "#!/bin/sh\n\nset -e\n\nif [ -z \"$AWS_S3_BUCKET\" ]; then\n  echo \"AWS_S3_BUCKET is not set. Quitting.\"\n  exit 1\nfi\n\nif [ -z \"$AWS_ACCESS_KEY_ID\" ]; then\n  echo \"AWS_ACCESS_KEY_ID is not set. Quitting.\"\n  exit 1\nfi\n\nif [ -z \"$AWS_SECRET_ACCESS_KEY\" ]; then\n  echo \"AWS_SECRET_ACCESS_KEY is not set. Quitting.\"\n  exit 1\nfi\n\n# Default to us-east-1 if AWS_REGION not set.\nif [ -z \"$AWS_REGION\" ]; then\n  AWS_REGION=\"us-east-1\"\nfi\n\n# Override default AWS endpoint if user sets AWS_S3_ENDPOINT.\nif [ -n \"$AWS_S3_ENDPOINT\" ]; then\n  ENDPOINT_APPEND=\"--endpoint-url $AWS_S3_ENDPOINT\"\nfi\n\n# Create a dedicated profile for this action to avoid conflicts\n# with past/future actions.\n# https://github.com/jakejarvis/s3-sync-action/issues/1\naws configure --profile s3-sync-action <<-EOF > /dev/null 2>&1\n${AWS_ACCESS_KEY_ID}\n${AWS_SECRET_ACCESS_KEY}\n${AWS_REGION}\ntext\nEOF\n\n# Sync using our dedicated profile and suppress verbose messages.\n# All other flags are optional via the `args:` directive.\nsh -c \"aws s3 sync ${SOURCE_DIR:-.} s3://${AWS_S3_BUCKET}/${DEST_DIR} \\\n              --profile s3-sync-action \\\n              --no-progress \\\n              ${ENDPOINT_APPEND} $*\"\n\n# Clear out credentials after we're done.\n# We need to re-run `aws configure` with bogus input instead of\n# deleting ~/.aws in case there are other credentials living there.\n# https://forums.aws.amazon.com/thread.jspa?threadID=148833\naws configure --profile s3-sync-action <<-EOF > /dev/null 2>&1\nnull\nnull\nnull\ntext\nEOF\n"
        }
      ]
    }
  ]
}