{
  "metadata": {
    "timestamp": 1736568759946,
    "page": 870,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenMediaVault-Plugin-Developers/installScript",
      "stars": 1129,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0537109375,
          "content": "ï»¿* text=auto\n\n*.gif binary\n*.jpg binary\n*.png binary\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4580078125,
          "content": "# General\n*.tmp\n*.bak\n*.swp\n*~\n\n# Eclipse\n.project\n.metadata\n.settings/\n*.launch\n.buildpath\n\n# Sublime Text\n*.sublime-workspace\n*.sublime-project\n\n# Vim\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n\n# SVN\n.svn/\n\n# Mac\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Windows\nThumbs.db\nehthumbs.db\nDesktop.ini\n\n# OpenMediaVault / Debian\ndebian/openmediavault-*\ndebian/files\ndebian/*.debhelper.log\ndebian/*.debhelper\ndebian/*substvars\ndebian/debhelper-build-stamp\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.927734375,
          "content": "### READ THE WIKI\nThese instructions are very basic and may not include everything needed for all systems.  The wiki does.\n\n- For Raspberry Pi - https://wiki.omv-extras.org/doku.php?id=omv7:raspberry_pi_install\n- For AMD64 - https://wiki.omv-extras.org/doku.php?id=omv7:alternate_amd64_install\n- For Armbian - https://wiki.omv-extras.org/doku.php?id=omv7:armbian_bookworm_install\n- See wiki for other systems\n\nFor the new user guide, visit https://wiki.omv-extras.org/doku.php?id=omv6:new_user_guide\n\n### installScript\n- Please use a new SD card if installing on an arm/sbc device and flash it with the latest (see notes below about version) Debian OS Lite (without desktop environment) or Server image available for your SBC.\n- This script will install openmediavault, omv-extras, and flashmemory. If you already have openmediavault installed don't worry, your openmediavault will be preserved, only the not installed will be added to the system.\n- Installing OMV with a desktop environment is NOT supported.  Please read the forum for the many reasons why.\n- This script may alter previous network setups.  This has a greater chance of breaking wifi setup.  Please read the install manual for more help - https://wiki.omv-extras.org/\n\n### Notes\n- This script will always install\n  - OMV 6.x on Debian 11 (Bullseye)\n  - OMV 7.x on Debian 12 (Bookworm)\n\n### Installation \nTo install OMV, OMV-Extras and Flashmemory copy and paste this line in the Terminal and press Enter. The installation will take some time, so enjoy the text flying on the screen. \n\n***The installation process demands sudo utilization.***\n\nTo download and execute the script you can use either *wget* or *curl*, feel free to use what you prefer!\n\n*wget script*\n####  \n```bash\nsudo wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash\n```\n\n*curl script*\n```bash\nsudo curl -sSL https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash\n```\n### To skip network setup\nIf you don't wanna use the network setup steps of the script, please use copy and paste the followings lines to the terminal. \n```bash\nwget https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install\nchmod +x install\nsudo ./install -n\n```\n\n### A detailed guide is available for this script as well\nopenmediavault is primarily designed to be used in home environments or small home offices, but is not limited to those scenarios. It is a simple and easy to use out-of-the-box solution that everyone can install and administer without needing expert level knowledge of Networking and Storage Systems.\n\nFor the OMV-Extras documentation, visit https://wiki.omv-extras.org/\n\nFor the new user guide, visit https://wiki.omv-extras.org/doku.php?id=omv6:new_user_guide\n \n### Get help for this script in the forum\nIf you got stuck in any part of this script the openmediavault forum will be the place to find a solution https://forum.openmediavault.org/\n\n"
        },
        {
          "name": "fix5to6upgrade",
          "type": "blob",
          "size": 2.447265625,
          "content": "#!/bin/bash\n#\n# shellcheck disable=SC1090,SC1091,SC1117,SC2016,SC2046,SC2086\n#\n# version: 0.0.3\n#\n\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"This script must be executed as root or using sudo.\"\n  exit 99\nfi\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\n\necho \"Removing old sources ...\"\nrm -f /etc/apt/sources.list.d/omvextras.list /etc/apt/sources.list.d/omv-extras-org.list\n\nxmlstarlet ed --inplace -u /config/system/omvextras/extras -v 0 /etc/openmediavault/config.xml\nxmlstarlet ed --inplace -u /config/system/omvextras/testing -v 0 /etc/openmediavault/config.xml\n\necho \"Clearing cache ...\"\n/usr/bin/salt-call --local saltutil.clear_cache\nomv-salt stage run prepare\n\necho \"Rebuilding sources.list* ...\"\nomv-salt deploy run apt omvextras\n\necho \"Change to bullseye and shaitan just in case ...\"\nsed -i \"s/buster/bullseye/g\" /etc/apt/sources.list\nsed -i \"s/buster/bullseye/g\" /etc/apt/sources.list.d/*\nsed -i \"s/usul/shaitan/g\" /etc/apt/sources.list.d/*\n\nif [ -f /etc/apt/apt.conf ]; then\n  echo \"Changing apt.conf ...\"\n  sed -i \"s/buster/bullseye/g\" /etc/apt/apt.conf\nfi\n\narmbian=\"/etc/apt/sources.list.d/armbian.list\"\nif [ -f \"${armbian}\" ]; then\n  echo \"Fixing Armbian repo ...\"\n  echo \"deb http://apt.armbian.com bullseye main bullseye-utils\" | tee ${armbian}\nfi\n\nsecurity=\"/etc/apt/sources.list.d/openmediavault-os-security.list\"\nif [ -f \"${security}\" ]; then\n  echo \"Fixing Debian security repo ...\"\n  echo \"deb http://security.debian.org/debian-security bullseye-security main contrib non-free\" | tee ${security}\nfi\n\necho \"Running apt-get update ...\"\napt-get update\n\necho \"Running apt-get dist-upgrade ...\"\napt-get --yes \\\n        --option DPkg::Options::=\"--force-confdef\" \\\n        --option DPkg::Options::=\"--force-confold\" \\\n        dist-upgrade\n\necho \"Enable cron-apt ...\"\nrm -f /etc/cron-apt/refrain\n\necho \"Enable apt index ...\"\ncp /usr/sbin/omv-mkaptidx /root/\nrm -f /usr/sbin/omv-mkaptidx\n\nif [ ! -f \"/usr/sbin/omv-mkaptidx\" ]; then\n  echo \"omv-mkaptidx does not exist.  Downloading...\"\n  wget -O /usr/sbin/omv-mkaptidx https://github.com/openmediavault/openmediavault/raw/master/deb/openmediavault/usr/sbin/omv-mkaptidx\n  chmod +x /usr/sbin/omv-mkaptidx\nfi\n\necho \"Rebuild apt index ...\"\nomv-mkaptidx\n\necho \"Rebuild OMV pam config ...\"\ndpkg-divert --remove --rename /etc/pam.d/openmediavault\ndpkg-divert --remove --rename /etc/pam.d/openmediavault-common-auth\ndpkg-divert --remove --rename /etc/pam.d/openmediavault-webgui\n\necho \"Done.\"\n\nexit 0\n"
        },
        {
          "name": "fix6to7upgrade",
          "type": "blob",
          "size": 2.427734375,
          "content": "#!/bin/bash\n#\n# shellcheck disable=SC1090,SC1091,SC1117,SC2016,SC2046,SC2086\n#\n# version: 0.0.9\n#\n\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"This script must be executed as root or using sudo.\"\n  exit 99\nfi\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\n\necho \"Removing old sources ...\"\nrm -f /etc/apt/sources.list.d/omvextras.list /etc/apt/sources.list.d/omv-extras-org.list\n\nif [ -f \"/etc/apt/sources.list.d/pvekernel.list\" ]; then\n  rm -fv /etc/apt/sources.list.d/pvekernel.list\nfi\n\necho \"Installing omv-extras 7.x ...\"\nurl=\"https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/\"\nfile=\"openmediavault-omvextrasorg_latest_all7.deb\"\ndeb=\"omvextras7.deb\"\nwget \"${url}/${file}\" -O ${deb}\nif [ -f \"${deb}\" ]; then\n  dpkg -i ${deb}\nfi\n\necho \"Clearing cache ...\"\n/usr/bin/salt-call --local saltutil.clear_cache\nomv-salt stage run prepare\n\necho \"Change to bullseye and shaitan just in case ...\"\nsed -i \"s/bullseye/bookworm/g\" /etc/apt/sources.list\nsed -i \"s/bullseye/bookworm/g\" /etc/apt/sources.list.d/*\nsed -i \"s/shaitan/sandworm/g\" /etc/apt/sources.list.d/*\n\nif [ -f /etc/apt/apt.conf ]; then\n  echo \"Changing apt.conf ...\"\n  sed -i \"s/bullseye/bookworm/g\" /etc/apt/apt.conf\nfi\n\narmbian=\"/etc/apt/sources.list.d/armbian.list\"\nif [ -f \"${armbian}\" ]; then\n  echo \"Fixing Armbian repo ...\"\n  echo \"deb http://apt.armbian.com bookworm main bookworm-utils\" | tee ${armbian}\nfi\n\nsecurity=\"/etc/apt/sources.list.d/openmediavault-os-security.list\"\nif [ -f \"${security}\" ]; then\n  echo \"Fixing Debian security repo ...\"\n  echo \"deb http://security.debian.org/debian-security bookworm-security main contrib non-free\" | tee ${security}\nfi\n\necho \"Running apt-get update ...\"\nif ! apt-get update; then\n  echo \"apt-get update failed.  Your repos need to be fixed.\"\n  exit 1\nfi\n\necho \"Running apt-get dist-upgrade ...\"\napt-get --yes \\\n        --option DPkg::Options::=\"--force-confdef\" \\\n        --option DPkg::Options::=\"--force-confold\" \\\n        dist-upgrade\n\nmkaptidx_url=\"https://github.com/openmediavault/openmediavault/raw/master/deb/openmediavault/usr/sbin/omv-mkaptidx\"\nmkaptidx_path=\"/usr/sbin/omv-mkaptidx\"\nrm -fv \"${mkaptidx_path}\"\necho \"Downloading omv-mkaptidx...\"\nwget --output-document=\"${mkaptidx_path}\" \"${mkaptidx_url}\"\nchmod +x \"${mkaptidx_path}\"\n\necho \"Rebuild apt index ...\"\nomv-mkaptidx\n\nsudo omv-salt deploy run nginx phpfpm ssh\nsudo systemctl restart nginx\nsudo systemctl restart php8.2-fpm\n\necho \"Done.\"\n\nexit 0\n"
        },
        {
          "name": "install",
          "type": "blob",
          "size": 24.205078125,
          "content": "#!/bin/bash\n#\n# shellcheck disable=SC1090,SC1091,SC2010,SC2016,SC2046,SC2086,SC2174\n#\n# Copyright (c) 2015-2024 OpenMediaVault Plugin Developers\n# Copyright (c) 2017-2020 Armbian Developers\n#\n# This file is licensed under the terms of the GNU General Public\n# License version 2. This program is licensed \"as is\" without any\n# warranty of any kind, whether express or implied.\n#\n# Ideas/code used from:\n# https://github.com/armbian/config/blob/master/debian-software\n# https://forum.openmediavault.org/index.php/Thread/25062-Install-OMV5-on-Debian-10-Buster/\n#\n\nlogfile=\"omv_install.log\"\nscriptversion=\"2.3.10\"\n\n\n_log()\n{\n  msg=${1}\n  echo \"[$(date +'%Y-%m-%d %H:%M:%S%z')] [omvinstall] ${msg}\" | tee -a ${logfile}\n}\n\n_log \"script version :: ${scriptversion}\"\n\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"This script must be executed as root or using sudo.\"\n  exit 99\nfi\n\nsystemd=\"$(ps --no-headers -o comm 1)\"\nif [ ! \"${systemd}\" = \"systemd\" ]; then\n  echo \"This system is not running systemd.  Exiting...\"\n  exit 100\nfi\n\nif dpkg -l | grep -Eqw \"gdm3|sddm|lxdm|xdm|lightdm|slim|wdm\"; then\n  echo \"This system is running a desktop environment!\"\n  echo \"Please use a Lite version of the image or\"\n  echo \"do not choose to install a desktop environment.\"\n  echo \"This install is not supported.\"\n  echo \"Search the forum for more info - https://forum.openmediavault.org\"\n  echo \"Exiting...\"\n  exit 101\nfi\n\nif [ ! -L \"/sbin\" ] || [ ! -L \"/bin\" ]; then\n  echo \"The /usr directories seem not to be migrated. Please check the\"\n  echo \"following pages for more information:\"\n  echo \"- https://wiki.debian.org/UsrMerge\"\n  echo \"- https://www.freedesktop.org/wiki/Software/systemd/TheCaseForTheUsrMerge\"\n  echo \"Exiting...\"\n  exit 102\nfi\n\nif [ -f \"/.dockerenv\" ]; then\n  echo \"Docker detected. OMV does not work in Docker!\"\n  exit 103\nfi\n\nif grep -q 'machine-lxc' /proc/1/cgroup; then\n  echo \"LXC detected. OMV does not work in LXC!\"\n  exit 104\nfi\n\ndeclare -i armbian=0\ndeclare -i cfg=0\ndeclare -i ipv6=0\ndeclare -i rpi=0\ndeclare -i skipFlash=0\ndeclare -i skipNet=0\ndeclare -i skipReboot=0\ndeclare -i useMirror=0\ndeclare -i version\n\ndeclare -l codename\ndeclare -l omvCodename\ndeclare -l omvInstall=\"\"\ndeclare -l omvextrasInstall=\"\"\n\ndeclare gov=\"\"\ndeclare minspd=\"\"\ndeclare maxspd=\"\"\n\naptclean=\"/usr/sbin/omv-aptclean\"\nconfCmd=\"omv-salt deploy run\"\ncpuFreqDef=\"/etc/default/cpufrequtils\"\ncrda=\"/etc/default/crda\"\ndefaultGovSearch=\"^CONFIG_CPU_FREQ_DEFAULT_GOV_\"\nforceIpv4=\"/etc/apt/apt.conf.d/99force-ipv4\"\nioniceCron=\"/etc/cron.d/make_nas_processes_faster\"\nioniceScript=\"/usr/sbin/omv-ionice\"\nkeyserver=\"hkp://keyserver.ubuntu.com:80\"\nmirror=\"https://mirrors.tuna.tsinghua.edu.cn\"\nomvKey=\"/usr/share/keyrings/openmediavault-archive-keyring.gpg\"\nomvRepo=\"http://packages.openmediavault.org/public\"\nomvKeyUrl=\"${omvRepo}/archive.key\"\nomvSources=\"/etc/apt/sources.list.d/openmediavault.list\"\nresolvTmp=\"/root/resolv.conf\"\nrfkill=\"/usr/sbin/rfkill\"\nsmbOptions=\"\"\nsshGrp=\"ssh\"\nurl=\"https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master\"\nvsCodeList=\"/etc/apt/sources.list.d/vscode.list\"\nwpaConf=\"/etc/wpa_supplicant/wpa_supplicant.conf\"\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\nexport LANGUAGE=C\nexport LC_ALL=C.UTF-8\n\nif [ -f /etc/armbian-release ]; then\n  . /etc/armbian-release\n  armbian=1\n  _log \"Armbian\"\nfi\n\nwhile getopts \"fhimnr\" opt; do\n  _log \"option ${opt}\"\n  case \"${opt}\" in\n    f)\n      skipFlash=1\n      ;;\n    h)\n      echo \"Use the following flags:\"\n      echo \"  -f\"\n      echo \"    to skip the installation of the flashmemory plugin\"\n      echo \"  -i\"\n      echo \"    enable using IPv6 for apt\"\n      echo \"  -m\"\n      echo \"    to repo mirror from ${mirror}\"\n      echo \"  -n\"\n      echo \"    to skip the network setup\"\n      echo \"  -r\"\n      echo \"    to skip reboot\"\n      echo \"\"\n      echo \"Examples:\"\n      echo \"  install\"\n      echo \"  install -f\"\n      echo \"  install -n\"\n      echo \"\"\n      echo \"Notes:\"\n      echo \"  This script will always install:\"\n      echo \"    - OMV 6.x (shaitan) on Debian 11 (Bullseye)\"\n      echo \"    - OMV 7.x (sandworm) on Debian 12 (Bookworm)\"\n      echo \"\"\n      exit 100\n      ;;\n    i)\n      ipv6=1\n      ;;\n    m)\n      useMirror=1\n      omvRepo=\"${mirror}/OpenMediaVault/public\"\n      ;;\n    n)\n      skipNet=1\n      ;;\n    r)\n      skipReboot=1\n      ;;\n    \\?)\n      _log \"Invalid option: -${OPTARG}\"\n      ;;\n  esac\ndone\n\n_log \"Starting ...\"\n\n# Fix permissions on / if wrong\n_log \"Current / permissions = $(stat -c %a /)\"\nchmod -v g-w,o-w / 2>&1 | tee -a ${logfile}\n_log \"New / permissions = $(stat -c %a /)\"\n\n# if ipv6 is not enabled, create apt config file to force ipv4\nif [ ${ipv6} -ne 1 ]; then\n  _log \"Forcing IPv4 only for apt...\"\n  echo 'Acquire::ForceIPv4 \"true\";' > ${forceIpv4}\nfi\n\n\nif [ -f \"/usr/libexec/config-rtl8367rb.sh\" ]; then\n  _log \"Skipping network because swconfig controlled switch found.\"\n  skipNet=1\nfi\n\n_log \"Updating repos before installing...\"\napt-get --allow-releaseinfo-change update 2>&1 | tee -a ${logfile}\n\n_log \"Installing lsb_release...\"\napt-get --yes --no-install-recommends --reinstall install lsb-release 2>&1 | tee -a ${logfile}\n\narch=\"$(dpkg --print-architecture)\"\n_log \"Arch :: ${arch}\"\n\n# exit if not supported architecture\ncase ${arch} in\n  arm64|armhf|amd64|i386)\n    _log \"Supported architecture\"\n    ;;\n  *)\n    _log \"Unsupported architecture :: ${arch}\"\n    exit 5\n    ;;\nesac\n\ncodename=\"$(lsb_release --codename --short)\"\n_log \"Codename :: ${codename}\"\n\ncase ${codename} in\n  bullseye)\n    keys=\"0E98404D386FA1D9 A48449044AAD5C5D\"\n    omvCodename=\"shaitan\"\n    version=6\n    ;;\n  bookworm)\n    omvCodename=\"sandworm\"\n    version=7\n    _log \"Copying /etc/resolv.conf to ${resolvTmp} ...\"\n    cp -fv /etc/resolv.conf \"${resolvTmp}\"\n    _log \"$(cat /etc/resolv.conf)\"\n    sshGrp=\"_ssh\"\n    ;;\n  *)\n    _log \"Unsupported version.  Only 11 (Bullseye) and 12 (Bookworm) are supported.  Exiting...\"\n    exit 1\n  ;;\nesac\n_log \"Debian :: ${codename}\"\n_log \"${omvCodename} :: ${version}\"\n\nhostname=\"$(hostname --short)\"\n_log \"Hostname :: ${hostname}\"\ndomainname=\"$(hostname --domain)\"\n_log \"Domain name :: ${domainname}\"\ntz=\"$(timedatectl show --property=Timezone --value)\"\n_log \"timezone :: ${tz}\"\n\nregex='[a-zA-Z]([-a-zA-Z0-9]{0,61}[a-zA-Z0-9])'\nif [[ ! ${hostname} =~ ${regex} ]]; then\n    _log \"Invalid hostname.  Exiting...\"\n    exit 6\nfi\n\n# Add Debian signing keys to raspbian to prevent apt-get update failures\n# when OMV adds security and/or backports repos\nif grep -rq raspberrypi.org /etc/apt/*; then\n  rpivers=\"$(awk '$1 == \"Revision\" { print $3 }' /proc/cpuinfo)\"\n  _log \"RPi revision code :: ${rpivers}\"\n  # https://elinux.org/RPi_HardwareHistory\n  if [[ \"${rpivers:0:1}\" =~ [09] ]] && [[ ! \"${rpivers:0:3}\" =~ 902 ]]; then\n    _log \"This RPi1 is not supported (not true armhf).  Exiting...\"\n    exit 7\n  fi\n  rpi=1\n  _log \"Adding Debian signing keys...\"\n  for key in ${keys}; do\n    apt-key adv --no-tty --keyserver ${keyserver} --recv-keys \"${key}\" 2>&1 | tee -a ${logfile}\n  done\n  _log \"Installing monit from raspberrypi repo...\"\n  apt-get --yes --no-install-recommends install -t ${codename} monit 2>&1 | tee -a ${logfile}\n\n  # remove vscode repo if found since there is no desktop environment\n  # empty file will exist to keep raspberrypi-sys-mods package from adding it back\n  truncate -s 0 \"${vsCodeList}\"\nfi\n\n# remove armbian netplan file if found\nanp=\"/etc/netplan/armbian-default.yaml\"\nif [ -e \"${anp}\" ]; then\n  _log \"Removing Armbian netplan file...\"\n  rm -fv \"${anp}\"\nfi\n\ndpkg -P udisks2 2>&1 | tee -a ${logfile}\n\n_log \"Install prerequisites...\"\napt-get --yes --no-install-recommends install gnupg wget 2>&1 | tee -a ${logfile}\n\nif [ ${armbian} -eq 1 ]; then\n  systemctl unmask systemd-networkd.service 2>&1 | tee -a ${logfile}\n  # save off cpuFreq settings before installing the openmediavault\n  if [ -f \"${cpuFreqDef}\" ]; then\n    . ${cpuFreqDef}\n    gov=\"${GOVERNOR}\"\n    minspd=\"${MIN_SPEED}\"\n    maxspd=\"${MAX_SPEED}\"\n  fi\nfi\n\n# make sure ssh is enabled\nsystemctl enable ssh.service\n\n# install openmediavault if not installed already\nomvInstall=$(dpkg -l | awk '$2 == \"openmediavault\" { print $1 }')\nif [[ ! \"${omvInstall}\" == \"ii\" ]]; then\n  _log \"Installing openmediavault required packages...\"\n  apt-get --yes --no-install-recommends install postfix 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -gt 0 ]; then\n    _log \"failed installing postfix\"\n    sed -i '/^myhostname/d' /etc/postfix/main.cf\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n    if [ ${PIPESTATUS[0]} -gt 0 ]; then\n      _log \"failed installing postfix and unable to fix\"\n      exit 2\n    fi\n  fi\n\n  _log \"Adding openmediavault repo and key...\"\n  echo \"deb [signed-by=${omvKey}] ${omvRepo} ${omvCodename} main\" | tee ${omvSources}\n  wget --quiet --output-document=- \"${omvKeyUrl}\" | gpg --dearmor --yes --output \"${omvKey}\"\n\n  _log \"Updating repos...\"\n  apt-get update 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -gt 0 ]; then\n    _log \"failed to update apt repos.\"\n    exit 2\n  fi\n\n  _log \"Install openmediavault-keyring...\"\n  apt-get --yes install openmediavault-keyring 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -gt 0 ]; then\n    _log \"failed to install openmediavault-keyring package.\"\n    exit 2\n  fi\n\n  monitInstall=$(dpkg -l | awk '$2 == \"monit\" { print $1 }')\n  if [[ ! \"${monitInstall}\" == \"ii\" ]]; then\n    apt-get --yes --no-install-recommends install monit 2>&1 | tee -a ${logfile}\n    if [ ${PIPESTATUS[0]} -gt 0 ]; then\n      _log \"failed installing monit\"\n      exit 2\n    fi\n  fi\n\n  _log \"Installing openmediavault...\"\n  aptFlags=\"--yes --auto-remove --show-upgraded --allow-downgrades --allow-change-held-packages --no-install-recommends\"\n  apt-get ${aptFlags} install openmediavault 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -gt 0 ]; then\n    _log \"failed to install openmediavault package.\"\n    exit 2\n  fi\n\n  omv-confdbadm populate 2>&1 | tee -a ${logfile}\n  omv-salt deploy run hosts 2>&1 | tee -a ${logfile}\nfi\n_log \"Testing DNS...\"\nif ! ping -4 -q -c2 omv-extras.org 2>/dev/null; then\n  _log \"DNS failing to resolve.  Fixing ...\"\n  if [ -f \"${resolvTmp}\" ]; then\n    _log \"Reverting /etc/resolv.conf to saved copy ...\"\n    rm -fv /etc/resolv.conf\n    cp -v \"${resolvTmp}\" /etc/resolv.conf\n  fi\nfi\n\n# check if openmediavault is install properly\nomvInstall=$(dpkg -l | awk '$2 == \"openmediavault\" { print $1 }')\nif [[ ! \"${omvInstall}\" == \"ii\" ]]; then\n  _log \"openmediavault package failed to install or is in a bad state.\"\n  exit 3\nfi\n\n. /etc/default/openmediavault\n. /usr/share/openmediavault/scripts/helper-functions\n\n# remove backports from sources.list to avoid duplicate sources warning\nsed -i \"/\\(stretch\\|buster\\|bullseye\\)-backports/d\" /etc/apt/sources.list\n\nif [ ${rpi} -eq 1 ]; then\n  if [ ! \"${arch}\" = \"arm64\" ]; then\n    omv_set_default \"OMV_APT_USE_OS_SECURITY\" false true\n  fi\n  omv_set_default \"OMV_APT_USE_KERNEL_BACKPORTS\" false true\nfi\n\n# change repos if useMirror is specified\nif [ ${useMirror} -eq 1 ]; then\n  _log \"Changing repos to mirror from ${mirror} ...\"\n  omv_set_default OMV_APT_REPOSITORY_URL \"${mirror}/OpenMediaVault/public\" true\n  omv_set_default OMV_APT_ALT_REPOSITORY_URL \"${mirror}/OpenMediaVault/packages\" true\n  omv_set_default OMV_APT_KERNEL_BACKPORTS_REPOSITORY_URL \"${mirror}/debian\" true\n  omv_set_default OMV_APT_SECURITY_REPOSITORY_URL \"${mirror}/debian-security\" true\n  omv_set_default OMV_EXTRAS_APT_REPOSITORY_URL \"${mirror}/OpenMediaVault/openmediavault-plugin-developers\" true\n  omv_set_default OMV_DOCKER_APT_REPOSITORY_URL \"${mirror}/docker-ce/linux/debian\" true\n  omv_set_default OMV_PROXMOX_APT_REPOSITORY_URL \"${mirror}/proxmox/debian\" true\n\n  # update pillar default list - /srv/pillar/omv/default.sls\n  omv-salt stage run prepare 2>&1 | tee -a ${logfile}\n\n  # update config files\n  ${confCmd} apt 2>&1 | tee -a ${logfile}\nfi\n\n# install omv-extras\n_log \"Downloading omv-extras.org plugin for openmediavault ${version}.x ...\"\nfile=\"openmediavault-omvextrasorg_latest_all${version}.deb\"\n\nif [ -f \"${file}\" ]; then\n  rm ${file}\nfi\nwget ${url}/${file}\nif [ -f \"${file}\" ]; then\n  if ! dpkg --install ${file}; then\n    _log \"Installing other dependencies ...\"\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n    omvextrasInstall=$(dpkg -l | awk '$2 == \"openmediavault-omvextrasorg\" { print $1 }')\n    if [[ ! \"${omvextrasInstall}\" == \"ii\" ]]; then\n      _log \"omv-extras failed to install correctly.  Trying to fix apt ...\"\n      apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n      if [ ${PIPESTATUS[0]} -gt 0 ]; then\n        _log \"Fix failed and openmediavault-omvextrasorg is in a bad state.\"\n        exit 3\n      fi\n    fi\n    omvextrasInstall=$(dpkg -l | awk '$2 == \"openmediavault-omvextrasorg\" { print $1 }')\n    if [[ ! \"${omvextrasInstall}\" == \"ii\" ]]; then\n      _log \"openmediavault-omvextrasorg package failed to install or is in a bad state.\"\n      exit 3\n    fi\n  fi\n\n  _log \"Updating repos ...\"\n  ${aptclean} repos 2>&1 | tee -a ${logfile}\nelse\n  _log \"There was a problem downloading the package.\"\nfi\n\n# disable armbian log services if found\nfor service in log2ram armbian-ramlog armbian-zram-config; do\n  if systemctl list-units --full -all | grep ${service}; then\n    systemctl stop ${service} 2>&1 | tee -a ${logfile}\n    systemctl disable ${service} 2>&1 | tee -a ${logfile}\n  fi\ndone\nrm -f /etc/cron.daily/armbian-ram-logging\nif [ -f \"/etc/default/armbian-ramlog\" ]; then\n  sed -i \"s/ENABLED=.*/ENABLED=false/g\" /etc/default/armbian-ramlog\nfi\nif [ -f \"/etc/default/armbian-zram-config\" ]; then\n  sed -i \"s/ENABLED=.*/ENABLED=false/g\" /etc/default/armbian-zram-config\nfi\nif [ -f \"/etc/systemd/system/logrotate.service\" ]; then\n  rm -f /etc/systemd/system/logrotate.service\n  systemctl daemon-reload\nfi\n\n# install flashmemory plugin unless disabled\nif [ ${skipFlash} -eq 1 ]; then\n  _log \"Skipping installation of the flashmemory plugin.\"\nelse\n  _log \"Install folder2ram...\"\n  apt-get --yes --fix-missing --no-install-recommends install folder2ram 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -eq 0 ]; then\n    _log \"Installed folder2ram.\"\n  else\n    _log \"Failed to install folder2ram.\"\n  fi\n  _log \"Install flashmemory plugin...\"\n  apt-get --yes install openmediavault-flashmemory 2>&1 | tee -a ${logfile}\n  if [ ${PIPESTATUS[0]} -eq 0 ]; then\n    _log \"Installed flashmemory plugin.\"\n  else\n    _log \"Failed to install flashmemory plugin.\"\n    ${confCmd} flashmemory 2>&1 | tee -a ${logfile}\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n  fi\nfi\n\n# change default OMV settings\nif [ -n \"${smbOptions}\" ]; then\n  omv_config_update \"/config/services/smb/extraoptions\" \"$(echo -e \"${smbOptions}\")\"\nfi\nomv_config_update \"/config/services/ssh/enable\" \"1\"\nomv_config_update \"/config/services/ssh/permitrootlogin\" \"1\"\nomv_config_update \"/config/system/time/ntp/enable\" \"1\"\nomv_config_update \"/config/system/time/timezone\" \"${tz}\"\nomv_config_update \"/config/system/network/dns/hostname\" \"${hostname}\"\nif [ -n \"${domainname}\" ]; then\n  omv_config_update \"/config/system/network/dns/domainname\" \"${domainname}\"\nfi\n\n# disable monitoring and apply changes\n_log \"Disabling data collection ...\"\n/usr/sbin/omv-rpc -u admin \"perfstats\" \"set\" '{\"enable\":false}' 2>&1 | tee -a ${logfile}\n/usr/sbin/omv-rpc -u admin \"config\" \"applyChanges\" '{ \"modules\": [\"monit\",\"rrdcached\",\"collectd\"],\"force\": true }' 2>&1 | tee -a ${logfile}\n\n# set min/max frequency and watchdog for RPi boards\nrpi_model=\"/proc/device-tree/model\"\nif [ -f \"${rpi_model}\" ] && [[ $(awk '{ print $1 }' ${rpi_model}) = \"Raspberry\" ]]; then\n  if [ ${version} -lt 6 ]; then\n    omv_set_default \"OMV_WATCHDOG_DEFAULT_MODULE\" \"bcm2835_wdt\"\n    omv_set_default \"OMV_WATCHDOG_CONF_WATCHDOG_TIMEOUT\" \"14\"\n  fi\n  omv_set_default \"OMV_WATCHDOG_SYSTEMD_RUNTIMEWATCHDOGSEC\" \"14s\" true\n\n  MIN_SPEED=\"$(</sys/devices/system/cpu/cpufreq/policy0/cpuinfo_min_freq)\"\n  MAX_SPEED=\"$(</sys/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq)\"\n  # Determine if RPi4 (for future use)\n  if [[ $(awk '$1 == \"Revision\" { print $3 }' /proc/cpuinfo) =~ [a-c]03111 ]]; then\n    BOARD=\"rpi4\"\n  fi\n  cat << EOF > ${cpuFreqDef}\nGOVERNOR=\"schedutil\"\nMIN_SPEED=\"${MIN_SPEED}\"\nMAX_SPEED=\"${MAX_SPEED}\"\nEOF\nfi\n\n# get default governor for kernel\nmodprobe --quiet configs\nif [ -f \"/proc/config.gz\" ]; then\n  defaultGov=\"$(zgrep \"${defaultGovSearch}\" /proc/config.gz | sed -e \"s/${defaultGovSearch}\\(.*\\)=y/\\1/\")\"\nelif [ -f \"/boot/config-$(uname -r)\" ]; then\n  defaultGov=\"$(grep \"${defaultGovSearch}\" /boot/config-$(uname -r) | sed -e \"s/${defaultGovSearch}\\(.*\\)=y/\\1/\")\"\nfi\n\n# governor and speed variables\nif [ ${armbian} -eq 1 ]; then\n  if [ -n \"${defaultGov}\" ]; then\n    GOVERNOR=\"${defaultGov,,}\"\n  elif [ -n \"${gov}\" ]; then\n    GOVERNOR=\"${gov}\"\n  fi\n  if [ -n \"${minspd}\" ]; then\n    MIN_SPEED=\"${minspd}\"\n  fi\n  if [ -n \"${maxspd}\" ]; then\n    MAX_SPEED=\"${maxspd}\"\n  fi\nelif [ -f \"${cpuFreqDef}\" ]; then\n  . ${cpuFreqDef}\nelse\n  if [ -z \"${DEFAULT_GOV}\" ]; then\n    defaultGov=\"ondemand\"\n  fi\n  GOVERNOR=${defaultGov,,}\n  MIN_SPEED=\"0\"\n  MAX_SPEED=\"0\"\nfi\n\n# set defaults in /etc/default/openmediavault\nomv_set_default \"OMV_CPUFREQUTILS_GOVERNOR\" \"${GOVERNOR}\"\nomv_set_default \"OMV_CPUFREQUTILS_MINSPEED\" \"${MIN_SPEED}\"\nomv_set_default \"OMV_CPUFREQUTILS_MAXSPEED\" \"${MAX_SPEED}\"\n\n# update pillar default list - /srv/pillar/omv/default.sls\nomv-salt stage run prepare 2>&1 | tee -a ${logfile}\n\n# update config files\n${confCmd} nginx phpfpm samba flashmemory ssh chrony timezone monit rrdcached collectd cpufrequtils apt watchdog 2>&1 | tee -a ${logfile}\n\n# create php directories if they don't exist\nmodDir=\"/var/lib/php/modules\"\nif [ ! -d \"${modDir}\" ]; then\n  mkdir --parents --mode=0755 ${modDir}\nfi\nsessDir=\"/var/lib/php/sessions\"\nif [ ! -d \"${sessDir}\" ]; then\n  mkdir --parents --mode=1733 ${sessDir}\nfi\n\nif [ -f \"${forceIpv4}\" ]; then\n  rm ${forceIpv4}\nfi\n\nif [ -f \"/etc/init.d/proftpd\" ]; then\n  systemctl disable proftpd.service\n  systemctl stop proftpd.service\nfi\n\n# add admin user to openmediavault-admin group if it exists\nif getent passwd admin > /dev/null; then\n  usermod -a -G openmediavault-admin admin 2>&1 | tee -a ${logfile}\nfi\n\nif [[ \"${arch}\" == \"amd64\" ]] || [[ \"${arch}\" == \"i386\" ]]; then\n  # skip ionice on x86 boards\n  _log \"Done.\"\n  exit 0\nfi\n\nif [ ! \"${GOVERNOR,,}\" = \"schedutil\" ]; then\n  _log \"Add a cron job to make NAS processes more snappy and silence rsyslog\"\n  cat << EOF > /etc/rsyslog.d/omv-armbian.conf\n:msg, contains, \"omv-ionice\" ~\n:msg, contains, \"action \" ~\n:msg, contains, \"netsnmp_assert\" ~\n:msg, contains, \"Failed to initiate sched scan\" ~\nEOF\n  systemctl restart rsyslog 2>&1 | tee -a ${logfile}\n\n  # add taskset to ionice cronjob for biglittle boards\n  case ${BOARD} in\n    odroidxu4|bananapim3|nanopifire3|nanopct3plus|nanopim3|nanopi-r6s)\n      taskset='; taskset -c -p 4-7 ${srv}'\n      ;;\n    *rk3399*|*edge*|nanopct4|nanopim4|nanopineo4|renegade-elite|rockpi-4*|rockpro64|helios64)\n      taskset='; taskset -c -p 4-5 ${srv}'\n      ;;\n    odroidn2)\n      taskset='; taskset -c -p 2-5 ${srv}'\n      ;;\n  esac\n\n  # create ionice script\n  cat << EOF > ${ioniceScript}\n#!/bin/sh\n\nfor srv in \\$(pgrep \"ftpd|nfsiod|smbd\"); do\n  ionice -c1 -p \\${srv} ${taskset};\ndone\nEOF\n  chmod 755 ${ioniceScript}\n\n  # create ionice cronjob\n  cat << EOF > ${ioniceCron}\n* * * * * root ${ioniceScript} >/dev/null 2>&1\nEOF\n  chmod 600 ${ioniceCron}\nfi\n\n# add pi user to ssh group if it exists\nif getent passwd pi > /dev/null; then\n  _log \"Adding pi user to ssh group ...\"\n  usermod -a -G ${sshGrp} pi\nfi\n\n# add user running the script to ssh group if not pi or root\nif [ -n \"${SUDO_USER}\" ] && [ ! \"${SUDO_USER}\" = \"root\" ] && [ ! \"${SUDO_USER}\" = \"pi\" ]; then\n  if getent passwd ${SUDO_USER} > /dev/null; then\n    _log \"Adding ${SUDO_USER} to the ${sshGrp} group ...\"\n    usermod -a -G ${sshGrp} ${SUDO_USER}\n  fi\nfi\n\n# remove networkmanager and dhcpcd5 then configure networkd\nif [ ${skipNet} -ne 1 ]; then\n\n  if [ \"${BOARD}\" = \"helios64\" ]; then\n    echo -e '#!/bin/sh\\n/usr/sbin/ethtool --offload eth1 rx off tx off' > /usr/lib/networkd-dispatcher/routable.d/10-disable-offloading\n  fi\n\n  defLink=\"/etc/systemd/network/99-default.link\"\n  rm -fv \"${defLink}\"\n  if [ ${rpi} -eq 1 ] && [ ${version} -eq 7 ]; then\n    _log \"Force eth0 name on RPi ...\"\n    mac=\"$(ip -j a show dev eth0 | jq -r .[].address | head -n1)\"\n    if [ -z \"${mac}\" ]; then\n      mac=\"$(ip -j a show dev end0 | jq -r .[].address | head -n1)\"\n    fi\n    _log \"mac address - ${mac}\"\n    if [ -n \"${mac}\" ]; then\n      echo -e \"[Match]\\nMACAddress=${mac}\\n[Link]\\nName=eth0\" > /etc/systemd/network/10-persistent-eth0.link\n    fi\n  fi\n\n  _log \"Removing network-manager and dhcpcd5 ...\"\n  apt-get -y --autoremove purge network-manager dhcpcd5 2>&1 | tee -a ${logfile}\n\n  _log \"Enable and start systemd-resolved ...\"\n  systemctl enable systemd-resolved 2>&1 | tee -a ${logfile}\n  systemctl start systemd-resolved 2>&1 | tee -a ${logfile}\n  rm /etc/resolv.conf\n  ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf\n\n  if [ -f \"${rfkill}\" ]; then\n    _log \"Unblocking wifi with rfkill ...\"\n    ${rfkill} unblock all\n  fi\n\n  for nic in $(ls /sys/class/net | grep -vE \"br-|docker|dummy|ip6|lo|sit|tun|veth|virbr|wg\"); do\n    if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n      _log \"${nic} already found in database.  Skipping...\"\n      continue\n    fi\n    if udevadm info /sys/class/net/${nic} | grep -q wlan; then\n      if [ -f \"${wpaConf}\" ]; then\n        country=$(awk -F'=' '/country=/{gsub(/[\"\\r]/,\"\"); print $NF}' ${wpaConf})\n        wifiName=$(awk -F'=' '/ssid=\"/{st=index($0,\"=\"); ssid=substr($0,st+1); gsub(/[\"\\r]/,\"\",ssid); print ssid; exit}' ${wpaConf})\n        wifiPass=$(awk -F'=' '/psk=\"/{st=index($0,\"=\"); pass=substr($0,st+1); gsub(/[\"\\r]/,\"\",pass); print pass; exit}' ${wpaConf})\n\n        if [ -n \"${country}\" ] && [ -n \"${wifiName}\" ] && [ -n \"${wifiPass}\" ]; then\n          if [ -f \"${crda}\" ]; then\n            awk -i inplace -F'=' -v country=\"$country\" '/REGDOMAIN=/{$0=$1\"=\"country} {print $0}' ${crda}\n          fi\n          _log \"Adding ${nic} to openmedivault database ...\"\n          jq --null-input --compact-output \\\n            \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", type: \\\"wifi\\\", method: \\\"dhcp\\\", method6: \\\"dhcp\\\", wpassid: \\\"${wifiName}\\\", wpapsk: \\\"${wifiPass}\\\"}\" | \\\n            omv-confdbadm update \"conf.system.network.interface\" -\n          if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n            cfg=1\n          fi\n        fi\n      fi\n    else\n      _log \"Adding ${nic} to openmedivault database ...\"\n      if [ -n \"$(ip -j -o -4 addr show ${nic} | jq --raw-output  '.[] | select(.addr_info[0].dev) | .addr_info[0].local')\" ] && \\\n      [ \"$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].dynamic')\" == \"null\" ]; then\n        ipv4Addr=$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].local')\n        ipv4CIDR=$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].prefixlen')\n        bitmaskValue=$(( 0xffffffff ^ ((1 << (32 - ipv4CIDR)) - 1) ))\n        ipv4Netmask=$(( (bitmaskValue >> 24) & 0xff )).$(( (bitmaskValue >> 16) & 0xff )).$(( (bitmaskValue >> 8) & 0xff )).$(( bitmaskValue & 0xff ))\n        ipv4GW=$(ip -j -o -4 route show | jq --raw-output '.[] | select(.dst==\"default\") | .gateway')\n        jq --null-input --compact-output \\\n        \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", method: \\\"static\\\", address: \\\"${ipv4Addr}\\\", netmask: \\\"${ipv4Netmask}\\\", gateway: \\\"${ipv4GW}\\\", dnsnameservers: \\\"8.8.8.8 ${ipv4GW}\\\"}\" | \\\n        omv-confdbadm update \"conf.system.network.interface\" -\n      else\n        jq --null-input --compact-output \\\n        \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", method: \\\"dhcp\\\", method6: \\\"dhcp\\\"}\" | \\\n        omv-confdbadm update \"conf.system.network.interface\" -\n      fi\n\n      if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n        cfg=1\n      fi\n    fi\n  done\n\n  if [ ${cfg} -eq 1 ]; then\n    _log \"IP address may change and you could lose connection if running this script via ssh.\"\n\n    # create config files\n    ${confCmd} systemd-networkd 2>&1 | tee -a ${logfile}\n    if [ ${PIPESTATUS[0]} -gt 0 ]; then\n      _log \"Error applying network changes.  Skipping reboot!\"\n      skipReboot=1\n    fi\n\n    if [ ${skipReboot} -ne 1 ]; then\n      _log \"Network setup.  Rebooting...\"\n      reboot\n    fi\n  else\n    _log \"It is recommended to reboot and then setup the network adapter in the openmediavault web interface.\"\n  fi\n\nfi\n\n_log \"done.\"\n\nexit 0\n"
        },
        {
          "name": "installOld",
          "type": "blob",
          "size": 23.9970703125,
          "content": "#!/bin/bash\n#\n# shellcheck disable=SC1090,SC1091,SC2010,SC2016,SC2046,SC2086,SC2174,SC2181\n#\n# Copyright (c) 2015-2023 OpenMediaVault Plugin Developers\n# Copyright (c) 2017-2020 Armbian Developers\n#\n# This file is licensed under the terms of the GNU General Public\n# License version 2. This program is licensed \"as is\" without any\n# warranty of any kind, whether express or implied.\n#\n# Ideas/code used from:\n# https://github.com/armbian/config/blob/master/debian-software\n# https://forum.openmediavault.org/index.php/Thread/25062-Install-OMV5-on-Debian-10-Buster/\n#\n\nlogfile=\"omv_install.log\"\nversion=\"2.2.3\"\n\n\n_log()\n{\n  msg=${1}\n  echo \"[$(date +'%Y-%m-%d %H:%M:%S%z')] [omvinstall] ${msg}\" | tee -a ${logfile}\n}\n\n_log \"version :: ${version}\"\n\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"This script must be executed as root or using sudo.\"\n  exit 99\nfi\n\nsystemd=\"$(ps --no-headers -o comm 1)\"\nif [ ! \"${systemd}\" = \"systemd\" ]; then\n  echo \"This system is not running systemd.  Exiting...\"\n  exit 100\nfi\n\nif dpkg -l | grep -Eqw \"gdm3|sddm|lxdm|xdm|lightdm|slim|wdm\"; then\n  echo \"This system is running a desktop environment!\"\n  echo \"Please use a Lite version of the image or\"\n  echo \"do not choose to install a desktop environment.\"\n  echo \"This install is not supported.\"\n  echo \"Search the forum for more info - https://forum.openmediavault.org\"\n  echo \"Exiting...\"\n  exit 101\nfi\n\nif [ ! -L \"/sbin\" ] || [ ! -L \"/bin\" ]; then\n  echo \"The /usr directories seem not to be migrated. Please check the\"\n  echo \"following pages for more information:\"\n  echo \"- https://wiki.debian.org/UsrMerge\"\n  echo \"- https://www.freedesktop.org/wiki/Software/systemd/TheCaseForTheUsrMerge\"\n  echo \"Exiting...\"\n  exit 102\nfi\n\nif [ -f \"/.dockerenv\" ]; then\n  echo \"Docker detected. OMV does not work in Docker!\"\n  exit 103\nfi\n\nif grep -q 'machine-lxc' /proc/1/cgroup; then\n  echo \"LXC detected. OMV does not work in LXC!\"\n  exit 104\nfi\n\ndeclare -i armbian=0\ndeclare -i beta=0\ndeclare -i cfg=0\ndeclare -i ipv6=0\ndeclare -i rpi=0\ndeclare -i skipFlash=0\ndeclare -i skipNet=0\ndeclare -i skipReboot=0\ndeclare -i useMirror=0\ndeclare -i version\n\ndeclare -l codename\ndeclare -l omvCodename\ndeclare -l omvInstall=\"\"\ndeclare -l omvextrasInstall=\"\"\n\ndeclare gov=\"\"\ndeclare minspd=\"\"\ndeclare maxspd=\"\"\n\naptclean=\"/usr/sbin/omv-aptclean\"\nconfCmd=\"omv-salt deploy run\"\ncpuFreqDef=\"/etc/default/cpufrequtils\"\ncrda=\"/etc/default/crda\"\ndefaultGovSearch=\"^CONFIG_CPU_FREQ_DEFAULT_GOV_\"\nforceIpv4=\"/etc/apt/apt.conf.d/99force-ipv4\"\nioniceCron=\"/etc/cron.d/make_nas_processes_faster\"\nioniceScript=\"/usr/sbin/omv-ionice\"\nkeyserver=\"hkp://keyserver.ubuntu.com:80\"\nmirror=\"https://mirrors.tuna.tsinghua.edu.cn\"\nomvKey=\"/usr/share/keyrings/openmediavault-archive-keyring.gpg\"\nomvRepo=\"http://packages.openmediavault.org/public\"\nomvKeyUrl=\"${omvRepo}/archive.key\"\nomvSources=\"/etc/apt/sources.list.d/openmediavault.list\"\nresolvTmp=\"/root/resolv.conf\"\nrfkill=\"/usr/sbin/rfkill\"\nsmbOptions=\"\"\nsshGrp=\"ssh\"\nurl=\"https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master\"\nvsCodeList=\"/etc/apt/sources.list.d/vscode.list\"\nwpaConf=\"/etc/wpa_supplicant/wpa_supplicant.conf\"\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\nexport LANGUAGE=C\nexport LC_ALL=C.UTF-8\n\nif [ -f /etc/armbian-release ]; then\n  . /etc/armbian-release\n  armbian=1\n  _log \"Armbian\"\nfi\n\nwhile getopts \"bfhimnr\" opt; do\n  _log \"option ${opt}\"\n  case \"${opt}\" in\n    b)\n      beta=1\n      ;;\n    f)\n      skipFlash=1\n      ;;\n    h)\n      echo \"Use the following flags:\"\n      echo \"  -f\"\n      echo \"    to skip the installation of the flashmemory plugin\"\n      echo \"  -i\"\n      echo \"    enable using IPv6 for apt\"\n      echo \"  -m\"\n      echo \"    to repo mirror from ${mirror}\"\n      echo \"  -n\"\n      echo \"    to skip the network setup\"\n      echo \"  -r\"\n      echo \"    to skip reboot\"\n      echo \"\"\n      echo \"Examples:\"\n      echo \"  install\"\n      echo \"  install -f\"\n      echo \"  install -n\"\n      echo \"\"\n      echo \"Notes:\"\n      echo \"  This script will always install:\"\n      echo \"    - OMV 5.x on Debian 10 (Buster) EOL\"\n      echo \"    - OMV 6.x on Debian 11 (Bullseye)\"\n      echo \"\"\n      exit 100\n      ;;\n    i)\n      ipv6=1\n      ;;\n    m)\n      useMirror=1\n      omvRepo=\"${mirror}/OpenMediaVault/public\"\n      ;;\n    n)\n      skipNet=1\n      ;;\n    r)\n      skipReboot=1\n      ;;\n    \\?)\n      _log \"Invalid option: -${OPTARG}\"\n      ;;\n  esac\ndone\n\n_log \"Starting ...\"\n\n# Fix permissions on / if wrong\n_log \"Current / permissions = $(stat -c %a /)\"\nchmod -v g-w,o-w / 2>&1 | tee -a ${logfile}\n_log \"New / permissions = $(stat -c %a /)\"\n\n# if ipv6 is not enabled, create apt config file to force ipv4\nif [ ${ipv6} -ne 1 ]; then\n  _log \"Forcing IPv4 only for apt...\"\n  echo 'Acquire::ForceIPv4 \"true\";' > ${forceIpv4}\nfi\n\n\nif [ -f \"/usr/libexec/config-rtl8367rb.sh\" ]; then\n  _log \"Skipping network because swconfig controlled switch found.\"\n  skipNet=1\nfi\n\n_log \"Updating repos before installing...\"\napt-get --allow-releaseinfo-change update 2>&1 | tee -a ${logfile}\n\n_log \"Installing lsb_release...\"\napt-get --yes --no-install-recommends --reinstall install lsb-release 2>&1 | tee -a ${logfile}\n\narch=\"$(dpkg --print-architecture)\"\n_log \"Arch :: ${arch}\"\n\n# exit if not supported architecture\ncase ${arch} in\n  arm64|armhf|amd64|i386)\n    _log \"Supported architecture\"\n    ;;\n  *)\n    _log \"Unsupported architecture :: ${arch}\"\n    exit 5\n    ;;\nesac\n\ncodename=\"$(lsb_release --codename --short)\"\n_log \"Codename :: ${codename}\"\n\ncase ${codename} in\n  buster)\n    keys=\"648ACFD622F3D138 112695A0E562B32A\"\n    omvCodename=\"usul\"\n    version=5\n    smbOptions=\"${smbOptions}\\nwrite cache size = 524288\"\n    _log \"This version of OMV is End of Life.  Please consider using OMV 6.x.\"\n    ;;\n  bullseye)\n    keys=\"0E98404D386FA1D9 A48449044AAD5C5D\"\n    omvCodename=\"shaitan\"\n    version=6\n    ;;\n  bookworm)\n    if [ ${beta} -eq 1 ]; then\n      omvCodename=\"sandworm\"\n      version=7\n    else\n      _log \"Unsupported version.  Only Debian 10 (Buster) and 11 (Bullseye) are supported.  Exiting...\"\n      exit 1\n    fi\n    _log \"Copying /etc/resolv.conf to ${resolvTmp} ...\"\n    cp -fv /etc/resolv.conf \"${resolvTmp}\"\n    _log \"$(cat /etc/resolv.conf)\"\n    sshGrp=\"_ssh\"\n    ;;\n  *)\n    _log \"Unsupported version.  Only Debian 10 (Buster) and 11 (Bullseye) are supported.  Exiting...\"\n    exit 1\n  ;;\nesac\n_log \"Debian :: ${codename}\"\n_log \"${omvCodename} :: ${version}\"\n\nhostname=\"$(hostname --short)\"\n_log \"Hostname :: ${hostname}\"\ndomainname=\"$(hostname --domain)\"\n_log \"Domain name :: ${domainname}\"\ntz=\"$(timedatectl show --property=Timezone --value)\"\n_log \"timezone :: ${tz}\"\n\nregex='[a-zA-Z]([-a-zA-Z0-9]{0,61}[a-zA-Z0-9])'\nif [[ ! ${hostname} =~ ${regex} ]]; then\n    _log \"Invalid hostname.  Exiting...\"\n    exit 6\nfi\n\n# Add Debian signing keys to raspbian to prevent apt-get update failures\n# when OMV adds security and/or backports repos\nif grep -rq raspberrypi.org /etc/apt/*; then\n  rpivers=\"$(awk '$1 == \"Revision\" { print $3 }' /proc/cpuinfo)\"\n  _log \"RPi revision code :: ${rpivers}\"\n  # https://elinux.org/RPi_HardwareHistory\n  if [[ \"${rpivers:0:1}\" =~ [09] ]] && [[ ! \"${rpivers:0:3}\" =~ 902 ]]; then\n    _log \"This RPi1 is not supported (not true armhf).  Exiting...\"\n    exit 7\n  fi\n  rpi=1\n  _log \"Adding Debian signing keys...\"\n  for key in ${keys}; do\n    apt-key adv --no-tty --keyserver ${keyserver} --recv-keys \"${key}\" 2>&1 | tee -a ${logfile}\n  done\n  _log \"Installing monit from raspberrypi repo...\"\n  apt-get --yes --no-install-recommends install -t ${codename} monit 2>&1 | tee -a ${logfile}\n\n  # remove vscode repo if found since there is no desktop environment\n  # empty file will exist to keep raspberrypi-sys-mods package from adding it back\n  truncate -s 0 \"${vsCodeList}\"\nfi\n\n# remove armbian netplan file if found\nanp=\"/etc/netplan/armbian-default.yaml\"\nif [ -e \"${anp}\" ]; then\n  _log \"Removing Armbian netplan file...\"\n  rm -fv \"${anp}\"\nfi\n\ndpkg -P udisks2 2>&1 | tee -a ${logfile}\n\n_log \"Install prerequisites...\"\napt-get --yes --no-install-recommends install gnupg wget 2>&1 | tee -a ${logfile}\n\nif [ ${armbian} -eq 1 ]; then\n  systemctl unmask systemd-networkd.service 2>&1 | tee -a ${logfile}\n  # save off cpuFreq settings before installing the openmediavault\n  if [ -f \"${cpuFreqDef}\" ]; then\n    . ${cpuFreqDef}\n    gov=\"${GOVERNOR}\"\n    minspd=\"${MIN_SPEED}\"\n    maxspd=\"${MAX_SPEED}\"\n  fi\nfi\n\n# install openmediavault if not installed already\nomvInstall=$(dpkg -l | awk '$2 == \"openmediavault\" { print $1 }')\nif [[ ! \"${omvInstall}\" == \"ii\" ]]; then\n  _log \"Installing openmediavault required packages...\"\n  apt-get --yes --no-install-recommends install postfix 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"failed installing postfix\"\n    sed -i '/^myhostname/d' /etc/postfix/main.cf\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n    if [ $? -gt 0 ]; then\n      _log \"failed installing postfix and unable to fix\"\n      exit 2\n    fi\n  fi\n\n  _log \"Adding openmediavault repo and key...\"\n  echo \"deb [signed-by=${omvKey}] ${omvRepo} ${omvCodename} main\" | tee ${omvSources}\n  wget --quiet --output-document=- \"${omvKeyUrl}\" | gpg --dearmor --yes --output \"${omvKey}\"\n\n  _log \"Updating repos...\"\n  apt-get update 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"failed to update apt repos.\"\n    exit 2\n  fi\n\n  _log \"Install openmediavault-keyring...\"\n  apt-get --yes install openmediavault-keyring 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"failed to install openmediavault-keyring package.\"\n    exit 2\n  fi\n\n  monitInstall=$(dpkg -l | awk '$2 == \"monit\" { print $1 }')\n  if [[ ! \"${monitInstall}\" == \"ii\" ]]; then\n    apt-get --yes --no-install-recommends install monit 2>&1 | tee -a ${logfile}\n    if [ $? -gt 0 ]; then\n      _log \"failed installing monit\"\n      exit 2\n    fi\n  fi\n\n  _log \"Installing openmediavault...\"\n  aptFlags=\"--yes --auto-remove --show-upgraded --allow-downgrades --allow-change-held-packages --no-install-recommends\"\n  apt-get ${aptFlags} install openmediavault 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"failed to install openmediavault package.\"\n    exit 2\n  fi\n\n  omv-confdbadm populate 2>&1 | tee -a ${logfile}\n  omv-salt deploy run hosts 2>&1 | tee -a ${logfile}\nfi\n_log \"Testing DNS...\"\nif ! ping -4 -q -c2 omv-extras.org 2>/dev/null; then\n  _log \"DNS failing to resolve.  Fixing ...\"\n  if [ -f \"${resolvTmp}\" ]; then\n    _log \"Reverting /etc/resolv.conf to saved copy ...\"\n    rm -fv /etc/resolv.conf\n    cp -v \"${resolvTmp}\" /etc/resolv.conf\n  fi\nfi\n\n# check if openmediavault is install properly\nomvInstall=$(dpkg -l | awk '$2 == \"openmediavault\" { print $1 }')\nif [[ ! \"${omvInstall}\" == \"ii\" ]]; then\n  _log \"openmediavault package failed to install or is in a bad state.\"\n  exit 3\nfi\n\n. /etc/default/openmediavault\n. /usr/share/openmediavault/scripts/helper-functions\n\n# remove backports from sources.list to avoid duplicate sources warning\nsed -i \"/\\(stretch\\|buster\\|bullseye\\)-backports/d\" /etc/apt/sources.list\n\nif [ ${rpi} -eq 1 ]; then\n  if [ ! \"${arch}\" = \"arm64\" ]; then\n    omv_set_default \"OMV_APT_USE_OS_SECURITY\" false true\n  fi\n  omv_set_default \"OMV_APT_USE_KERNEL_BACKPORTS\" false true\nfi\n\n# change repos if useMirror is specified\nif [ ${useMirror} -eq 1 ]; then\n  _log \"Changing repos to mirror from ${mirror} ...\"\n  omv_set_default OMV_APT_REPOSITORY_URL \"${mirror}/OpenMediaVault/public\" true\n  omv_set_default OMV_APT_ALT_REPOSITORY_URL \"${mirror}/OpenMediaVault/packages\" true\n  omv_set_default OMV_APT_KERNEL_BACKPORTS_REPOSITORY_URL \"${mirror}/debian\" true\n  omv_set_default OMV_APT_SECURITY_REPOSITORY_URL \"${mirror}/debian-security\" true\n  omv_set_default OMV_EXTRAS_APT_REPOSITORY_URL \"${mirror}/OpenMediaVault/openmediavault-plugin-developers\" true\n  omv_set_default OMV_DOCKER_APT_REPOSITORY_URL \"${mirror}/docker-ce/linux/debian\" true\n  omv_set_default OMV_PROXMOX_APT_REPOSITORY_URL \"${mirror}/proxmox/debian\" true\n\n  # update pillar default list - /srv/pillar/omv/default.sls\n  omv-salt stage run prepare 2>&1 | tee -a ${logfile}\n\n  # update config files\n  ${confCmd} apt 2>&1 | tee -a ${logfile}\nfi\n\n# install omv-extras\n_log \"Downloading omv-extras.org plugin for openmediavault ${version}.x ...\"\nfile=\"openmediavault-omvextrasorg_latest_all${version}.deb\"\n\nif [ -f \"${file}\" ]; then\n  rm ${file}\nfi\nwget ${url}/${file}\nif [ -f \"${file}\" ]; then\n  if ! dpkg --install ${file}; then\n    _log \"Installing other dependencies ...\"\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n    omvextrasInstall=$(dpkg -l | awk '$2 == \"openmediavault-omvextrasorg\" { print $1 }')\n    if [[ ! \"${omvextrasInstall}\" == \"ii\" ]]; then\n      _log \"omv-extras failed to install correctly.  Trying to fix apt ...\"\n      apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n      if [ $? -gt 0 ]; then\n        _log \"Fix failed and openmediavault-omvextrasorg is in a bad state.\"\n        exit 3\n      fi\n    fi\n    omvextrasInstall=$(dpkg -l | awk '$2 == \"openmediavault-omvextrasorg\" { print $1 }')\n    if [[ ! \"${omvextrasInstall}\" == \"ii\" ]]; then\n      _log \"openmediavault-omvextrasorg package failed to install or is in a bad state.\"\n      exit 3\n    fi\n  fi\n\n  _log \"Updating repos ...\"\n  ${aptclean} repos 2>&1 | tee -a ${logfile}\nelse\n  _log \"There was a problem downloading the package.\"\nfi\n\n# disable armbian log services if found\nfor service in log2ram armbian-ramlog armbian-zram-config; do\n  if systemctl list-units --full -all | grep ${service}; then\n    systemctl stop ${service} 2>&1 | tee -a ${logfile}\n    systemctl disable ${service} 2>&1 | tee -a ${logfile}\n  fi\ndone\nrm -f /etc/cron.daily/armbian-ram-logging\nif [ -f \"/etc/default/armbian-ramlog\" ]; then\n  sed -i \"s/ENABLED=.*/ENABLED=false/g\" /etc/default/armbian-ramlog\nfi\nif [ -f \"/etc/default/armbian-zram-config\" ]; then\n  sed -i \"s/ENABLED=.*/ENABLED=false/g\" /etc/default/armbian-zram-config\nfi\nif [ -f \"/etc/systemd/system/logrotate.service\" ]; then\n  rm -f /etc/systemd/system/logrotate.service\n  systemctl daemon-reload\nfi\n\n# install flashmemory plugin unless disabled\nif [ ${skipFlash} -eq 1 ]; then\n  _log \"Skipping installation of the flashmemory plugin.\"\nelse\n  _log \"Install folder2ram...\"\n  apt-get --yes --fix-missing --no-install-recommends install folder2ram 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"Installed folder2ram.\"\n  else\n    _log \"Failed to install folder2ram.\"\n  fi\n  _log \"Install flashmemory plugin...\"\n  apt-get --yes install openmediavault-flashmemory 2>&1 | tee -a ${logfile}\n  if [ $? -gt 0 ]; then\n    _log \"Installed flashmemory plugin.\"\n  else\n    _log \"Failed to install flashmemory plugin.\"\n    ${confCmd} flashmemory 2>&1 | tee -a ${logfile}\n    apt-get --yes --fix-broken install 2>&1 | tee -a ${logfile}\n  fi\nfi\n\n# change default OMV settings\nif [ -n \"${smbOptions}\" ]; then\n  omv_config_update \"/config/services/smb/extraoptions\" \"$(echo -e \"${smbOptions}\")\"\nfi\nomv_config_update \"/config/services/ssh/enable\" \"1\"\nomv_config_update \"/config/services/ssh/permitrootlogin\" \"1\"\nomv_config_update \"/config/system/time/ntp/enable\" \"1\"\nomv_config_update \"/config/system/time/timezone\" \"${tz}\"\nomv_config_update \"/config/system/network/dns/hostname\" \"${hostname}\"\nif [ -n \"${domainname}\" ]; then\n  omv_config_update \"/config/system/network/dns/domainname\" \"${domainname}\"\nfi\n\n# disable monitoring and apply changes\n_log \"Disabling data collection ...\"\n/usr/sbin/omv-rpc -u admin \"perfstats\" \"set\" '{\"enable\":false}' 2>&1 | tee -a ${logfile}\n/usr/sbin/omv-rpc -u admin \"config\" \"applyChanges\" '{ \"modules\": [\"monit\",\"rrdcached\",\"collectd\"],\"force\": true }' 2>&1 | tee -a ${logfile}\n\n# set min/max frequency and watchdog for RPi boards\nrpi_model=\"/proc/device-tree/model\"\nif [ -f \"${rpi_model}\" ] && [[ $(awk '{ print $1 }' ${rpi_model}) = \"Raspberry\" ]]; then\n  if [ ${version} -lt 6 ]; then\n    omv_set_default \"OMV_WATCHDOG_DEFAULT_MODULE\" \"bcm2835_wdt\"\n    omv_set_default \"OMV_WATCHDOG_CONF_WATCHDOG_TIMEOUT\" \"14\"\n  fi\n  omv_set_default \"OMV_WATCHDOG_SYSTEMD_RUNTIMEWATCHDOGSEC\" \"14s\" true\n\n  MIN_SPEED=\"$(</sys/devices/system/cpu/cpufreq/policy0/cpuinfo_min_freq)\"\n  MAX_SPEED=\"$(</sys/devices/system/cpu/cpufreq/policy0/cpuinfo_max_freq)\"\n  # Determine if RPi4 (for future use)\n  if [[ $(awk '$1 == \"Revision\" { print $3 }' /proc/cpuinfo) =~ [a-c]03111 ]]; then\n    BOARD=\"rpi4\"\n  fi\n  cat << EOF > ${cpuFreqDef}\nGOVERNOR=\"schedutil\"\nMIN_SPEED=\"${MIN_SPEED}\"\nMAX_SPEED=\"${MAX_SPEED}\"\nEOF\nfi\n\n# get default governor for kernel\nif [ -f \"/proc/config.gz\" ]; then\n  defaultGov=\"$(zgrep \"${defaultGovSearch}\" /proc/config.gz | sed -e \"s/${defaultGovSearch}\\(.*\\)=y/\\1/\")\"\nelif [ -f \"/boot/config-$(uname -r)\" ]; then\n  defaultGov=\"$(grep \"${defaultGovSearch}\" /boot/config-$(uname -r) | sed -e \"s/${defaultGovSearch}\\(.*\\)=y/\\1/\")\"\nfi\n\n# governor and speed variables\nif [ ${armbian} -eq 1 ]; then\n  if [ -n \"${defaultGov}\" ]; then\n    GOVERNOR=\"${defaultGov,,}\"\n  elif [ -n \"${gov}\" ]; then\n    GOVERNOR=\"${gov}\"\n  fi\n  if [ -n \"${minspd}\" ]; then\n    MIN_SPEED=\"${minspd}\"\n  fi\n  if [ -n \"${maxspd}\" ]; then\n    MAX_SPEED=\"${maxspd}\"\n  fi\nelif [ -f \"${cpuFreqDef}\" ]; then\n  . ${cpuFreqDef}\nelse\n  if [ -z \"${DEFAULT_GOV}\" ]; then\n    defaultGov=\"ondemand\"\n  fi\n  GOVERNOR=${defaultGov,,}\n  MIN_SPEED=\"0\"\n  MAX_SPEED=\"0\"\nfi\n\n# set defaults in /etc/default/openmediavault\nomv_set_default \"OMV_CPUFREQUTILS_GOVERNOR\" \"${GOVERNOR}\"\nomv_set_default \"OMV_CPUFREQUTILS_MINSPEED\" \"${MIN_SPEED}\"\nomv_set_default \"OMV_CPUFREQUTILS_MAXSPEED\" \"${MAX_SPEED}\"\n\n# update pillar default list - /srv/pillar/omv/default.sls\nomv-salt stage run prepare 2>&1 | tee -a ${logfile}\n\n# update config files\n${confCmd} nginx phpfpm samba flashmemory ssh chrony timezone monit rrdcached collectd cpufrequtils apt watchdog 2>&1 | tee -a ${logfile}\n\n# create php directories if they don't exist\nmodDir=\"/var/lib/php/modules\"\nif [ ! -d \"${modDir}\" ]; then\n  mkdir --parents --mode=0755 ${modDir}\nfi\nsessDir=\"/var/lib/php/sessions\"\nif [ ! -d \"${sessDir}\" ]; then\n  mkdir --parents --mode=1733 ${sessDir}\nfi\n\nif [ -f \"${forceIpv4}\" ]; then\n  rm ${forceIpv4}\nfi\n\nif [ -f \"/etc/init.d/proftpd\" ]; then\n  systemctl disable proftpd.service\n  systemctl stop proftpd.service\nfi\n\n# add admin user to openmediavault-admin group if it exists\nif getent passwd admin > /dev/null; then\n  usermod -a -G openmediavault-admin admin 2>&1 | tee -a ${logfile}\nfi\n\nif [[ \"${arch}\" == \"amd64\" ]] || [[ \"${arch}\" == \"i386\" ]]; then\n  # skip ionice on x86 boards\n  _log \"Done.\"\n  exit 0\nfi\n\nif [ ! \"${GOVERNOR,,}\" = \"schedutil\" ]; then\n  _log \"Add a cron job to make NAS processes more snappy and silence rsyslog\"\n  cat << EOF > /etc/rsyslog.d/omv-armbian.conf\n:msg, contains, \"omv-ionice\" ~\n:msg, contains, \"action \" ~\n:msg, contains, \"netsnmp_assert\" ~\n:msg, contains, \"Failed to initiate sched scan\" ~\nEOF\n  systemctl restart rsyslog 2>&1 | tee -a ${logfile}\n\n  # add taskset to ionice cronjob for biglittle boards\n  case ${BOARD} in\n    odroidxu4|bananapim3|nanopifire3|nanopct3plus|nanopim3|nanopi-r6s)\n      taskset='; taskset -c -p 4-7 ${srv}'\n      ;;\n    *rk3399*|*edge*|nanopct4|nanopim4|nanopineo4|renegade-elite|rockpi-4*|rockpro64|helios64)\n      taskset='; taskset -c -p 4-5 ${srv}'\n      ;;\n    odroidn2)\n      taskset='; taskset -c -p 2-5 ${srv}'\n      ;;\n  esac\n\n  # create ionice script\n  cat << EOF > ${ioniceScript}\n#!/bin/sh\n\nfor srv in \\$(pgrep \"ftpd|nfsiod|smbd\"); do\n  ionice -c1 -p \\${srv} ${taskset};\ndone\nEOF\n  chmod 755 ${ioniceScript}\n\n  # create ionice cronjob\n  cat << EOF > ${ioniceCron}\n* * * * * root ${ioniceScript} >/dev/null 2>&1\nEOF\n  chmod 600 ${ioniceCron}\nfi\n\n# add pi user to ssh group if it exists\nif getent passwd pi > /dev/null; then\n  _log \"Adding pi user to ssh group ...\"\n  usermod -a -G ${sshGrp} pi\nfi\n\n# add user running the script to ssh group if not pi or root\nif [ -n \"${SUDO_USER}\" ] && [ ! \"${SUDO_USER}\" = \"root\" ] && [ ! \"${SUDO_USER}\" = \"pi\" ]; then\n  if getent passwd ${SUDO_USER} > /dev/null; then\n    _log \"Adding ${SUDO_USER} to the ssh group ...\"\n    usermod -a -G ssh ${SUDO_USER}\n  fi\nfi\n\n# remove networkmanager and dhcpcd5 then configure networkd\nif [ ${skipNet} -ne 1 ]; then\n\n  if [ \"${BOARD}\" = \"helios64\" ]; then\n    echo -e '#!/bin/sh\\n/usr/sbin/ethtool --offload eth1 rx off tx off' > /usr/lib/networkd-dispatcher/routable.d/10-disable-offloading\n  fi\n\n  defLink=\"/etc/systemd/network/99-default.link\"\n  if [ -e \"${defLink}\" ]; then\n    rm -fv \"${defLink}\"\n  fi\n\n  _log \"Removing network-manager and dhcpcd5 ...\"\n  apt-get -y --autoremove purge network-manager dhcpcd5 2>&1 | tee -a ${logfile}\n\n  _log \"Enable and start systemd-resolved ...\"\n  systemctl enable systemd-resolved 2>&1 | tee -a ${logfile}\n  systemctl start systemd-resolved 2>&1 | tee -a ${logfile}\n  rm /etc/resolv.conf\n  ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf\n\n  if [ -f \"${rfkill}\" ]; then\n    _log \"Unblocking wifi with rfkill ...\"\n    ${rfkill} unblock all\n  fi\n\n  for nic in $(ls /sys/class/net | grep -vE \"br-|docker|dummy|ip6|lo|sit|tun|veth|virbr|wg\"); do\n    if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n      _log \"${nic} already found in database.  Skipping...\"\n      continue\n    fi\n    if udevadm info /sys/class/net/${nic} | grep -q wlan; then\n      if [ -f \"${wpaConf}\" ]; then\n        country=$(awk -F'=' '/country=/{gsub(/[\"\\r]/,\"\"); print $NF}' ${wpaConf})\n        wifiName=$(awk -F'=' '/ssid=\"/{st=index($0,\"=\"); ssid=substr($0,st+1); gsub(/[\"\\r]/,\"\",ssid); print ssid; exit}' ${wpaConf})\n        wifiPass=$(awk -F'=' '/psk=\"/{st=index($0,\"=\"); pass=substr($0,st+1); gsub(/[\"\\r]/,\"\",pass); print pass; exit}' ${wpaConf})\n\n        if [ -n \"${country}\" ] && [ -n \"${wifiName}\" ] && [ -n \"${wifiPass}\" ]; then\n          if [ -f \"${crda}\" ]; then\n            awk -i inplace -F'=' -v country=\"$country\" '/REGDOMAIN=/{$0=$1\"=\"country} {print $0}' ${crda}\n          fi\n          _log \"Adding ${nic} to openmedivault database ...\"\n          jq --null-input --compact-output \\\n            \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", type: \\\"wifi\\\", method: \\\"dhcp\\\", method6: \\\"dhcp\\\", wpassid: \\\"${wifiName}\\\", wpapsk: \\\"${wifiPass}\\\"}\" | \\\n            omv-confdbadm update \"conf.system.network.interface\" -\n          if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n            cfg=1\n          fi\n        fi\n      fi\n    else\n      _log \"Adding ${nic} to openmedivault database ...\"\n      if [ -n \"$(ip -j -o -4 addr show ${nic} | jq --raw-output  '.[] | select(.addr_info[0].dev) | .addr_info[0].local')\" ] && \\\n      [ \"$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].dynamic')\" == \"null\" ]; then\n        ipv4Addr=$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].local')\n        ipv4CIDR=$(ip -j -o -4 addr show ${nic} | jq --raw-output '.[] | select(.addr_info[0].dev) | .addr_info[0].prefixlen')\n        bitmaskValue=$(( 0xffffffff ^ ((1 << (32 - ipv4CIDR)) - 1) ))\n        ipv4Netmask=$(( (bitmaskValue >> 24) & 0xff )).$(( (bitmaskValue >> 16) & 0xff )).$(( (bitmaskValue >> 8) & 0xff )).$(( bitmaskValue & 0xff ))\n        ipv4GW=$(ip -j -o -4 route show | jq --raw-output '.[] | select(.dst==\"default\") | .gateway')\n        jq --null-input --compact-output \\\n        \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", method: \\\"static\\\", address: \\\"${ipv4Addr}\\\", netmask: \\\"${ipv4Netmask}\\\", gateway: \\\"${ipv4GW}\\\", dnsnameservers: \\\"8.8.8.8 ${ipv4GW}\\\"}\" | \\\n        omv-confdbadm update \"conf.system.network.interface\" -\n      else\n        jq --null-input --compact-output \\\n        \"{uuid: \\\"${OMV_CONFIGOBJECT_NEW_UUID}\\\", devicename: \\\"${nic}\\\", method: \\\"dhcp\\\", method6: \\\"dhcp\\\"}\" | \\\n        omv-confdbadm update \"conf.system.network.interface\" -\n      fi\n\n      if grep -q \"<devicename>${nic}</devicename>\" ${OMV_CONFIG_FILE}; then\n        cfg=1\n      fi\n    fi\n  done\n\n  if [ ${cfg} -eq 1 ]; then\n    _log \"IP address may change and you could lose connection if running this script via ssh.\"\n\n    # create config files\n    ${confCmd} systemd-networkd 2>&1 | tee -a ${logfile}\n    if [ $? -gt 0 ]; then\n      _log \"Error applying network changes.  Skipping reboot!\"\n      skipReboot=1\n    fi\n\n    if [ ${skipReboot} -ne 1 ]; then\n      _log \"Network setup.  Rebooting...\"\n      reboot\n    fi\n  else\n    _log \"It is recommended to reboot and then setup the network adapter in the openmediavault web interface.\"\n  fi\n\nfi\n\n_log \"done.\"\n\nexit 0\n"
        },
        {
          "name": "md5sum",
          "type": "blob",
          "size": 0.041015625,
          "content": "eee7109cb36d983bcb6a96afd2772e2a  install\n"
        },
        {
          "name": "preinstall",
          "type": "blob",
          "size": 0.5888671875,
          "content": "#!/bin/bash\n\n# this script should be run when instructed to.\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\nexport LANGUAGE=C\nexport LC_ALL=C.UTF-8\n\napt-get --yes --no-install-recommends install jq\nmac=\"$(ip -j a show dev eth0 | jq -r .[].address | head -n1)\"\nif [ -z \"${mac}\" ]; then\n  mac=\"$(ip -j a show dev end0 | jq -r .[].address | head -n1)\"\nfi\nif [ -n \"${mac}\" ]; then\n  echo \"mac - ${mac}\"\n  echo -e \"[Match]\\nMACAddress=${mac}\\n[Link]\\nName=eth0\" > /etc/systemd/network/10-persistent-eth0.link\n  echo \"Please reboot the system now.\"\nfi\n\nexit 0\n"
        },
        {
          "name": "upgrade4to5",
          "type": "blob",
          "size": 3.310546875,
          "content": "#!/bin/bash\n#\n# shellcheck disable=SC1090,SC1091,SC1117,SC2016,SC2046,SC2086\n#\n# Copyright (c) 2019-2020 OpenMediaVault Plugin Developers\n#\n# This file is licensed under the terms of the GNU General Public\n# License version 2. This program is licensed \"as is\" without any\n# warranty of any kind, whether express or implied.\n#\n# version: 1.1.0\n#\n\nif [[ $(id -u) -ne 0 ]]; then\n  echo \"This script must be executed as root or using sudo.\"\n  exit 99\nfi\n\nexport DEBIAN_FRONTEND=noninteractive\nexport APT_LISTCHANGES_FRONTEND=none\nexport LANG=C.UTF-8\n\ndeclare -i failed=0\n\nmkconf=\"/usr/sbin/omv-mkconf\"\nplugins=\"cups dnsmasq docker-gui domoticz duplicati eyefi ldap letsencrypt mysql nginx openvpn pxe remotedesktop route shellinabox syncthing transmissionbt urbackup-server vdo virtualbox webdav netatalk route mumble vdr vdr-extras vdr-vnsiserver\"\n\nif [ ! -f \"${mkconf}\" ]; then\n  echo \"Creating omv-mkconf to help remove plugins\"\n  echo \"exit 0\" > ${mkconf}\n  chmod +x ${mkconf}\nfi\n\necho \"Purging incompatible plugins ...\"\nfor plugin in ${plugins}; do\n  pkg=\"openmediavault-${plugin}\"\n  if dpkg --list | grep --quiet \"${pkg}\"; then\n    if apt-get --yes purge ${pkg}; then\n      echo \"Successfully removed '${pkg}'.\"\n    else\n      echo \"Failed to remove '${pkg}'.\"\n      failed=1\n    fi\n  fi\ndone\n\nif [ -f \"${mkconf}\" ]; then\n  rm ${mkconf}\nfi\n\nif [ ${failed} -eq 1 ]; then\n  echo \"Failed to remove a plugin.  Exiting...\"\n  exit 1\nfi\n\necho \"Changing sources ...\"\nsed -i \"s/stretch/buster/g\" /etc/apt/sources.list\nsed -i \"s/stretch/buster/g\" /etc/apt/sources.list.d/*\nsed -i \"s/arrakis/usul/g\" /etc/apt/sources.list.d/*\nfor list in /etc/apt/sources.list.d/omvextras.list /etc/apt/sources.list.d/omv-extras-org.list; do\n  if [ -f \"${list}\" ]; then\n    sed -i \"/[Dd]ocker/d\" ${list}\n  fi\ndone\n\necho \"Applying mtu fix ...\"\nsed -i \"s/<mtu><\\/mtu>/<mtu>0<\\/mtu>/g\" /etc/openmediavault/config.xml\n\nif [ -f /etc/apt/apt.conf ]; then\n  echo \"Changing apt.conf ...\"\n  sed -i \"s/stretch/buster/g\" /etc/apt/apt.conf\nfi\n\necho \"Removing Packages archive file ...\"\nrm -f /var/cache/openmediavault/archives/Packages\n\narmbian=\"/etc/apt/sources.list.d/armbian.list\"\nif [ -f \"${armbian}\" ]; then\n  echo \"Fixing Armbian repo ...\"\n  echo \"deb http://apt.armbian.com buster main buster-utils\" | sudo tee ${armbian}\nfi\n\necho 'Debian GNU/Linux 10 \\n \\l' > /etc/issue\n\necho \"Running apt-get update ...\"\napt-get update\n\necho \"Updating base-files ...\"\napt-get --option DPkg::Options::=\"--force-confnew\" install base-files\n\necho \"Running apt-get dist-upgrade ...\"\napt-get --yes \\\n        --option DPkg::Options::=\"--force-confdef\" \\\n        --option DPkg::Options::=\"--force-confold\" \\\n        dist-upgrade\n\narch=\"$(dpkg --print-architecture)\"\nrule=\"/etc/udev/rules.d/80-net-setup-link.rules\"\n\nif [ ! \"${arch}\" = \"amd64\" ] && [ ! \"${arch}\" = \"i386\" ]; then\n  echo \"Disable predictive network device naming ...\"\n  rm -fv ${rule}\n  ln -s /dev/null ${rule}\nfi\n\necho \"Reboot now.\"\necho \"\"\necho \"Then run:\"\necho \"  apt-get purge openmediavault-omvextrasorg resolvconf\"\necho \"  wget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash\"\necho \"  apt-get update\"\necho \"  apt-get dist-upgrade\"\necho \"\"\necho \"  omv-salt deploy run nginx\"\necho \"  omv-salt deploy run phpfpm\"\necho \"\"\necho \"https://forum.openmediavault.org/index.php?thread/27909-omv-5-0-finally-out/&postID=219830#post219830\"\n"
        }
      ]
    }
  ]
}