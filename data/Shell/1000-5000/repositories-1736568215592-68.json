{
  "metadata": {
    "timestamp": 1736568215592,
    "page": 68,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "KittyKatt/screenFetch",
      "stars": 3906,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 16.9189453125,
          "content": "**** **** **** ****\n   screenFetch\n    changelog\n**** **** **** ****\n\nv3.9.9\n\t- I'm not sure what happened in the last 5 years. Here's a release.\n\t- This will be the last release of screenFetch unless I decide to pick it back up.\n\nv3.9.1\n\t- Fix GTK3 detection issues\n\t- LXQt proper detection and theme detection\n\t- Updated README to point to new wiki pages\n\t- Some miscellanious awk fixes\n\t- OpenBSD disk fix\n\t- Added EndeavourOS\n\t- MacOS Mojave color detection\n\t- Miscellanious spacing fixes\n\nv3.9.0\n\t- Lots, don't even try.\n\nv3.8.0\n\t- Additional Intel GPU checks\n\t- Gentoo release check (whether it's stable/testing/experimental)\n\t- Chromebrew detection for Chrome OS pkgs\n\t- OpenBSD fixes\n\t- Manjaro logo updated\n\t- Added Fux logo\n\t- Enable easily addable custom lines through customlines() function\n\t- Line wrapping with '-w' command line option\n\t- Fix issue with extra space and host variable\n\t- Improvements to OS X font detection\n\t- Fixed package count, shell detection and colors on NetBSD\n\t- Added pkgsrc support for OS X\n\t- Use new NixOS logo\n\t- Use new KaOS logo\n\t- PCLinuxOS logo added\n\t- pomf host removed (does not exist anymore)\n\t- Display the package count, resolution, GPU and OS version on Haiku\n\t- Display release version and package count on TinyCore Linux\n\t- Display exact release version on Windows 10\n\t- Use modern logo on Windows 10 and Windows 8\n\t- Support for Blackbox on Windows\n\t- Improve BusyBox shell detection\n\t- Added detection for Trinity/TWin, chromeos-wm, FLWM, howm, sway, LXQt and Deepin [DEs/WMs]\n\t- Added detection for Alpine, BunsenLabs, Chrome OS, Chromium OS, Devuan, Fux, GrombyangOS, KDE neon, Kogaion, Mer, Msys, Netrunner, Oracle Linux, PCLinuxOS, Qubes OS, Parrot Security, Pardus, Red Star OS, ROSA, SailfishOS, SparkyLinux, SteamOS, SUSE Linux Enterprise and SwagArch\n\nv3.7.0\n\t- Show RAM in IEC units (MiB instead of MB)\n\t- Count Chocolatey packages in Cygwin if present\n\nv3.6.8\n\t- Added classic Mac OS logo\n\t- Added generic Unix logo for unknown non-Linux distros\n\t- Added an option to display ASCII distribution logo only\n\t- Fixed total memory detection on OpenBSD\n\t- Fixed package detection in Solus and in apt/dpkg distros\n\t- Fixed xmonad detection\n\t- Added detection for Sabayon, Haiku, Logos, Chapeau, BLAG, Dragora, gNewSense, NixOS, Crux, Lunar and GNU/Hurd (generic)\n\t- Added detection for CDE/dtwm, Lumina and 9wm\n\t- Added ChromeOS logo (without distro detection)\n\t- Use Ubuntu-3color logo by default, remove old yellow logo\n\t- Added an option to supply custom ASCII art\n\t- Combine GTK 2/3 themes if they are the same\n\t- Reimplement '-d' (allows for setting what information is displayed on the command line)\n\nv3.6.5\n\t- Fixed RAM usage on OS X\n\t- Added old FreeBSD logo\n\t- Added portrait mode output\n\t- Simplify Scientific Linux detection\n\t- Added '--version' command line longoption as an alternative to '-v'\n\t- Added Evolve OS detection\n\t- Added imgur to configured upload hosts\n\t- Fine tuned more of the upload function\nv3.6.2\n\t- Added upload support via -u flag\n\t- Added pre-configured hosts for -u uploading: teknik, pomf, hmp, and mediacrush\n\t- Added a configurable section for an scp upload to a specified destination\n\t- Removed -m flag\nv3.6.0\n\t- Added PowerPC support for OS X\n\t- Added support for Korora and Void Linux\n\t- Readme: added installation instruction for Debian\n\nv3.5.0\n\t- update list of supported systems\n\t- Fix Parabola pkg detection.\n\t- Adding support for the echinus (dwm fork) WM.\n\t- Add 2bwm support.\n\t- Various Parabola GNU/Linux-libre aesthetic fixes.\n\t- Adding NetBSD to supported distros in --help.\n\t- Fix OpenBSD total RAM output.\n\t- Un-camelCase the *box WMs, matching the documentation for the *box WMs.\n\t- Added support for Windows 8.1 (Cygwin)\n\t- Removed resolution from screenfetch when resolution cannot be found (Win8.1 cygwin)\n\t- Fix detection of PowerPC G3 to be more exact instead of triggering on UltraSparcs\n\t- Fixing shrx's URL.\n\t- add manpage\n\t- update header license text to GPLv3\n\t- Red Hat Linux -> Red Hat Enterprise Linux\n\t- Fix Parabola in --help.\n\t- improved GPU detection formatting, fixed dual GPU detection formatting\n\t- Fixes for OS X\n\t- Fix Arch Linux detection for updated lsb_release\n\t- Fix for Debian\n\t- Added support for Raspbian, Antergos and KaOS\n\t- Fixes for Cinnamon\n\t- Fix for Android being detected if getprop exists. Disabling Android support until I figure out a better detection method.\n\t- Redirect STDERR to function to make errors prettier.\n\t- Commenting gsettings usage for GTK3 theme detection. Causes glib core dump in some places. Removed until I figure out why.\n\nv3.2.2\n\t- Adding a 256 support for Ubuntu logo\n\t- gpu_info code is still present but no longer in use\n\t- OSX: Fix X11.app from launching, add Theme Name, GTK fix, fix for Mac's version of sed to fix cpu detection\n\t- Fix for LXDE detection related things.\n\t- Fixes for elementary OS detection.\n\t- Adding Jiyuu Linux detection and ASCII.\n\t- Fix for Funtoo detection and Funtoo-text.\n\nv3.2.0\n\t- Add Support to Kali Linux.\n\t- Possible fix for distro detection with cases.\n\t- Fixes for CentOS detection.\n\t- Fix for bspwm.\n\t- Removing disk from DISPLAY.\n\t- Fixes for Mutter/GNOME Shell\n\t- Fixing spacing issues in new eOS ASCII.\n\nv3.1.0\n\t- Fixing some stuff for FreeBSD GPU detection.\n\t- Add alternate Manjaro art. Use with -A 'Manjaro-tree'.\n\t- Fixed funtoo detection\n\t- Added Sabayon\n\t- Tweaked Fedora art\n\t- Adding Notion WM to detected window managers\n\t- Adding GPU detection to display and Cygwin GPU detection\n\t- Color centralization. All logos and labels use color aliases now (i.e. blue/light blue).\n\t- Fix for verbose output with error suppressing (-E).\n\t- Fix for *BSD detectdisk.\n\t- Fixing a problem with _net_wm_name\n\t- Fix for elementary OS detection\n\t- Fix for the BASH pre 4.0-ish lower-to-upper in WM detection.\n\nv3.0.5\n\t- OS X GPU detection added.\n\t- Fix for -n.\n\t- FreeBSD portmaster support for pkg detection.\n\t- Switching to printf in various places. Part of a big printf move.\n\t- Removal of -e and theme exporting.\n\t- detectdisk added.\n\t- Fix for WM detection in OS X.\n\n\nv3.0.0\n\t- Colors bugfixes/changes.\n\t- -l disabled FOREVER.\n\t- Various *BSD bugfixes.\n\t- Funtoo detection added.\n\t- -c now allows 256 colors.\n\t- Fix Scientific Linux detection.\n\t- Moving of functions for cleanup.\n\t- Added -d back in for now.\n\t- OS X bugfixes.\n\t- WM non-case-sensitive now.\n\t- ppc cpu detection fixes.\n\n\nv2.9.0\n\t- Started work on re-adding Cygwin detection.\n\t- Cleaning up above.\n\t- Cygwin logo fixed.\n\t- Many Cygwin bugfixes/additions.\n\n\nv2.8.4\n\t- GTK detection bugfixes.\n\t- Cygwin logo changed.\n\t- E17 detection added.\n\t- Updated --help.\n\t- BackTrack Linux detection added.\n\t- OpenBSD shell detection fix.\n\t- *BSD bugfixes.\n\t- Fixes for cpu speed detection.\n\t- Changed Android logo.\n\t- Changed CrunchBang logo.\n\t- Added -N to strip all colors.\n\t- Actually added --help. -h still works.\n\t- Sabayon Linux detection added.\n\t- GPU detection added (Very Experimental!!!)\n\t- Many tweaks on above.\n\t- Adding -E to suppress all errors (STDERR).\n\n\nv2.8.1\n\t- *BSD shell detection fix.\n\t- Unity detection added.\n\t- Experimental Android support.\n\t- Various WM/DE bugfixes.\n\t- Closing up outstanding issues/pulls.\n\t- If \"Not Found\", continue. Do Not Display.\n\t- Scientific Linux detection added.\n\t- Manjaro logo changed.\n\n\nv2.7.7\n\t- KWin detection fixes.\n\t- KDE detection fixes.\n\t- Manjaro Linux ASCII changed.\n\t- Attempts at automated truncating.\n\t- Organization of WM names in functions.\n\t- Compiz detection fixes.\n\t- CrunchBang Waldorf detection fix.\n\t- Shell version detection. Also, SHELL DETECTION.\n\t- Formatting fixes.\n\t- Basic razorqt detection.\n\t- Fixing RHEL detection.\n\t- No displaying of X-dependent info if X isn't found to be running.\n\t- Remove -l flag.\n\t- Lotsa OS X detection bugfixes.\n\t- FluxBox detection fix.\n\t- FreeBSD uptime bugfix.\n\n\nv2.7.5\n\t- Adding Cinnamon detection.\n\t- Updated README for how to.\n\t- *BSD memory detection bugfixes.\n\t- Other miscellanious *BSD bugfixes.\n\t- Optimizations and code cleanup.\n\t- README changes.\n\t- gsettings detection fix.\n\t- RHEL detection fix.\n\t- /etc/os-release detection fix.\n\t- BASH optimizations.\n\t- Huge detectdistro overhaul.\n\t- More tweaks on above.\n\t- detectgtk optimization/cleanup/fixes.\n\n\nv2.5.5\n\t- herbstluftwm detection.\n\t- Added Manjaro Linux detection.\n\t- NetBSD detection and fixes.\n\t- Cleanup and fixes for DE detection.\n\n\nv2.5.3 (lots of stuff)\n\t- GTK3 bugfixes.\n\t- Fuduntu detection added.\n\t- OS X memory bugfixes.\n\t- Fragmented BSD flavors like they should be.\n\t- FreeBSD bugfixes.\n\t- Added DragonFlyBSD detection.\n\t- xmonad detection bugfix.\n\t- Fix CrunchBang detection.\n\t- Add Trisquel detectin.\n\n\nv2.5.0\n\t- Mac OS X detection added.\n\t- Lots of tweaking on OS X detection.\n\t- Fixes for distro detection.\n\t- Change for BSD logo.\n\t- Script now exits with 0 status.\n\t- macports and homebrew detection for OS X.\n\t- Experimental Cygwin detection. Commented out until cleaned.\n\n\nv2.4.7\n\t- KWin detection bugfixes.\n\t- Fixed non-ascii output.\n\t- Fix for Frugalware pkg detection.\n\t- Fix Gentoo detection.\n\t- Proper GTK3 detection for GNOME.\n\t- DE detection cleanup.\n\t- GNOME Shell detection.\n\t- Various code cleanups.\n\n\nv2.4.5\n\t- Added Chakra detection.\n\t- GTK detection bugfixes.\n\t- Experimental GTK3 detection.\n\n\nv2.4.4\n\t- SpectrWM added. Kept old ScrotWM for legacy.\n\t- Colors bugfixes.\n\t- Fixed LinuxDeepin and Parabola detection/logos.\n\n\nv2.4.3\n\t- Woo! Colors! Define colors with -c.\n\n\nv2.4.2\n\t- Added Viperr detection.\n\t- Added LinuxDeepin detection.\n\n\nv2.4.1\n\t- Spacing fixes\n\t- Added ParabolaGNU detection.\n\t- Fixed list of supported distributions in --help.\n\n\nv2.4.0\n\t- New SolusOS logo and fixed detection\n\t- Added CPU detection.\n\t- Added Memory detection.\n\t- Added Package Count detection (only working on Arch and SolusOS).\n\n\nv2.3.9\n\t- Fixed SolusOS detection.\n\t- Added MATE detection, theme detection possibly not working yet. Fixed WindowMaker detection.\n\t- Getting a DEB out! \\o/\n\nv2.3.8\n\t- Adding tentative dminiwm support.\n\t- net-tools deprecated. Relying on /proc/sys/kernel/hostname from now on.\n\t- Adding tentative monsterwm support.\n\t- Fixing openSUSE detection\n\nv2.3.7\n\t- Correctly tabulated and added Mageia distro detection and ASCII.\n\t- Adding tentative SolusOS detection via /etc/issue\n\t- Adding SolusOS logo and colors.\n\nv2.3.6\n\t- Adding tentative PeppermintOS detection.\n\t- A couple of attempted KDE/KWin fixes.\n\t- Fixed /etc/os-release detection\n\t- Updating Frugalware detection with /etc/os-release.\n\nv2.3.5\n\t- Adding tentative Frugalware detection.\n\t- Adding 256 color support.\n\t- suse and version fix\n\t- Fixed a couple logo spacing issues. Added spaceing insensitivity to the -D flag.\n\t- Added / fixed LXDE support.\n\nv2.3.4\n\t- Fixed an error causing stuff to not be detected.\n\t- e17 support\n\t- Several other fixes an revertions\n\nv2.3.2\n\t- Adding new Slackware ASCII art and detection.\n\nv2.3.1\n\t- Fixing 'n/a' displaying of release/codename in my_distro.\n\nv2.3.0\n\t- Added SuSe detection and made an ASCII logo for it.\n\nv2.2.9\n\t- Attempting to fix DE detection with new GDM3\n\nv2.2.8\n\t- Fixing some quotes errors and LMDE detection.\n\nv2.2.7\n\t- Fixed a few space errors in Debian logo and added new LMDE logo.\n\t- Removing official Compiz support. That should straighten a few things out.\n\nv2.2.4\n\t- Temporarily re-enabling bg support via -B flag.\n\nv2.2.3\n\t- Removing showing background by default by request.\n\t- Correction in WM name (subtle)\n\nv2.2.1\n\t- Added a couple of WMs: subtle, e16, and sawfish\n\nv2.2.0\n\t- Deleted extra ASCII stuff and completely rewrote output stuff.\n\nv2.1.7\n\t- Added a few changes and lsb_release support.\n\nv2.1.5\n\t- Fixed multi-monitor resolution detection and modified default screenshot filename.\n\t- Lots of capitalization errors in WM detection were brought to my attention. Fixed.\n\t- Attempting to fix detection of Crunchbang Statler.\n\nv2.1.4\n\t- Commented out the DISPLAY setting on commandline until its stable.\n\nv2.1.3 (HOLY SHIT BIG CHANGES)\n\t- Added shitload of new features. Keep reading.\n\t- Added function to set script variables on commandline execution. (i.e. screenfetch-dev -o 'baseurl=\"http://www.example.com\"')\n\t- Added function to set display info on commandline execution. (i.i. screenfetch-dev -d 'Host, OS, Kernel, Uptime, Theme, Icons')\n\t- Added function to export theme if wanted upon execution. Currently only supports the following window managers:  PekWM, OpenBox, BlackBox, FluxBox, Metacity (kind of), Xfwm4 (kind of). This is a really big addition, and quite experimental. Things that are currently sought out and exported are the following:  GTK Theme Folder, Icon Theme Folder, WM Theme Folder, Background Image, and screenshot taken by screenfetch. If you would like anything else exported with this let me know and I'll see what I can do.\n\t- Added function to upload screenshot taken to server you have ssh access on after info is displayed. MUST set baseurl, serveraddr, and serverdir variables for this to work. See -o flag.\n\t- Added new support for detecting the following window managers:  Musca, i3, Ratpoison, wmii, Wmfs, ScrotWM, and Beryl.\n\t- Attempted to fix XFCE detection by limiting the processes that result in XFCE to only \"xfce4-desktop\". Dunno if this will work or not. Email me.\n\t- Added function to detect hostname and user. Displayed in info output.\n\t- Added function to detect resolution. Displayed in info output. Untested, and possibly not working, on multiple monitor setups. Email me.\n\t- Added function to detect working shell. Might also add function to detect terminal type in the future.\n\t- Fixed bug in GNOME background output. Was outputing entire pathname. Now only outputs the filename of the image.\n\t- Replaced old Arch Linux logo with new updated one. Don't really like the new one, but it was popular demand. Old one is still available through -D with the 'Arch Linux\t- Old' argument for those of us that are old school.\n\nv2.0.3\n\t- Adding XMonad detection.\n\nv2.0.1\n\t- Fixing some spelling errors and added a few minor things.\n\t- Experimental truncating based upon terminal width.\n\t- Changed default Arch Linux ASCII logo due to popular demand. Old one is still available.\n\nv1.8.4\n\t- Added experimental Compiz detection (WM and theme)\n\t- Added experimental StumpWM detection (Just WM). Thanks to gtklocker for this part.\n\n\nv1.8.3\n\t- Added the groundwork for background support, terminal width detection (and thus truncating upon being over this width), and a couple other things I can't remember at the moment.\n\t- Gonna update a couple of the ASCII arts. :D\n\n\nv1.7.9\n\t- Added support to DETECT the following window managers: dwm, awesome, and WindowMaker\n\t- Added support for lighter backgrounds. If you have a lighter background, specify -l as a flag on the command-line. This will turn all white output to dark gray output.\n\t- screenFetch was featured in the ALM (Arch Linux Magazine)! The issue can be found and downloaded at http://www.archlinux.org/static/magazine/2010/ALM-2010-Apr.pdf\n\n\nv1.7.7\n\t- Added FVWM support per request of goran'agar on the Arch forums.\n\n\nv1.7.6.5\n\t- Fixed broken -s flag to take screenshot.\n\t- Put calling for verbose function back into other functions.\n\n\nv1.7.6 (important)\n\t- Working distribution detection! Most of the distributions I've included have been untested as of yet. Which means I could REALLY use some testers for these distros. The ones that still need testing are as follows: SUSE, Mandriva/Mandrake, Gentoo, Fedora, Red Hat Linux, and BSD. If you would like to help test these distributions, let me know by emailing me at kittykatt@archlinux.us\n\t- Reworked a lot of the code to be functions instead of repeating parts. Looks a lot cleaner now.\n\t- This update was mainly Kingdomcome's doing. So thank him profusely.\n\n\nv1.7.5 (HUGE)\n\t- Massive rewrite, cleaning up a huge portion of the code.\n\t- Made several repeating parts of the code into functions.\n\t- Learned getopts. Rewrote flag support with it. Flags now supported are as follows:\n\t\t~ -D 'DISTRO NAME'   Specify distribution name\n\t\t~ -c 'command'    Specify custom screenshot command.\n\t\t~ -V    Print current version of script.\n\t\t~ -v    Turn on verbose output.\n\t\t~ -s    Take screenshot.\n\t\t~ -n    Display info only and no ASCII logo.\n\t\t~ -h    Display help menu.\n\t- Added version number to DE reporting. Except LXDE. Because they fail.\n\t- Thanks to h2 for many, many, many suggestions and a lot of help. This update would most likely not have been possible without him.\n\n\nv1.4.5\n\t- Cleaned up WM Theme detection code.\n\n\nv1.4.4\n\t- Changed version system\n\t- Fixed if statement for \"Not Present\" or \"LXDE\" DE (Thanks to ArcherSeven for pointing it out)\n\n\nv1.4.3 (big)\n\t- Complete rewrite of DE and WM detection (Once again thanks to King)\n\t- Implemented LXDE support (Yay!)\n\t- Discussed ideas for \"united\" DE detection\n\n\nv1.4\n\t- Complete rewrite of the uptime field (Thanks a bunch Kingdomcome)\n\n\nv1.3\n\t- Added some flag support (notably --version, --screen, and --help)\n\t- Added commented lines for --distro and --command flags (future use)\n\t- Fixed another color escape sequence.\n\n\nv1.2\n\t- Fixed uptime errors when uptime > 1 day\n\n\nv1.1\n\t- Fixed color closing in the generic tux ASCII logo (thanks Suhana)\n\t- Changed architecture detection to \"uname -m\" across the board (thanks ikey for that one)\n\n\nv1.0\n\t- First version. Let's start! :D\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.mkdn",
          "type": "blob",
          "size": 4.515625,
          "content": "\n# screenFetch - The Bash Screenshot Information Tool\n\n## Important!\n\nPlease see [this discussion](https://github.com/KittyKatt/screenFetch/discussions/805) on the current state of screenFetch.\n\n## What is screenFetch?\n\nscreenFetch is a \"Bash Screenshot Information Tool\". This handy Bash\nscript can be used to generate one of those nifty terminal theme\ninformation + ASCII distribution logos you see in everyone's screenshots\nnowadays. It will auto-detect your distribution and display an ASCII\nversion of that distribution's logo and some valuable information to the\nright. There are options to specify no ASCII art, colors, taking a\nscreenshot upon displaying info, and even customizing the screenshot\ncommand! This script is very easy to add to and can easily be extended.\n\n## How do I get screenFetch?\n\nPlease see [Installation](https://github.com/KittyKatt/screenFetch/wiki/Installation).\n\n## Running screenfetch\n\nTo run screenFetch, open a terminal of some sort and type in the command `screenfetch`\nor wherever you saved the script to. This will generate an ASCII logo with the\ninformation printed to the side of the logo. There are some options that may be\nspecified on the command line, and those are shown below or by executing `screenfetch -h`:\n\n      -v                 Verbose output.\n      -o 'OPTIONS'       Allows for setting script variables on the\n                         command line. Must be in the following format...\n                         'OPTION1=\"OPTIONARG1\";OPTION2=\"OPTIONARG2\"'\n      -d '+var;-var;var' Allows for setting what information is displayed\n                         on the command line. You can add displays with +var,var. You\n                         can delete displays with -var,var. Setting without + or - will\n                         set display to that explicit combination. Add and delete statements\n                         may be used in conjunction by placing a ; between them as so:\n                         +var,var,var;-var,var.\n      -n                 Do not display ASCII distribution logo.\n      -N                 Strip all color from output.\n      -w                 Wrap long lines.\n      -t                 Truncate output based on terminal width (Experimental!).\n      -p                 Output in portrait mode, with logo above info.\n      -s [-u IMGHOST]    Using this flag tells the script that you want it\n                         to take a screenshot. Use the -m flag if you would like\n                         to move it to a new location afterwards.\n      -c string          You may change the outputted colors with -c. The format is\n                         as follows: [0-9][0-9],[0-9][0-9]. The first argument controls the\n                         ASCII logo colors and the label colors. The second argument\n                         controls the colors of the information found. One argument may be\n                         used without the other.\n      -a 'PATH'          You can specify a custom ASCII art by passing the path\n                         to a Bash script, defining `startline` and `fulloutput`\n                         variables, and optionally `labelcolor` and `textcolor`.\n                         See the `asciiText` function in the source code for more\n                         information on the variables format.\n      -S 'COMMAND'       Here you can specify a custom screenshot command for\n                         the script to execute. Surrounding quotes are required.\n      -D 'DISTRO'        Here you can specify your distribution for the script\n                         to use. Surrounding quotes are required.\n      -A 'DISTRO'        Here you can specify the distribution art that you want\n                         displayed. This is for when you want your distro\n                         detected but want to display a different logo.\n      -E                 Suppress output of errors.\n      -C                 Add custom (extra) lines.\n                         For example:\n                               screenfetch -C 'IP WAN=192.168.0.12,IP BRIDGED=10.1.1.10'\n                         ... will add two extra lines:\n                               IP WAN: 192.168.0.12\n                               IP BRIDGED: 10.1.1.10\n      -V, --version      Display current script version.\n      -h, --help         Display this help.\n\n## Contact Me\n\nIf you would like to suggest something new, inform me of an issue in the\nscript, become part of the project, or talk to me about anything else,\nyou can either email me at `screenfetch@kittykatt.co` or you can connect\nto Rizon and reach me at `irc://irc.rizon.net/screenFetch`\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 1.2021484375,
          "content": "**##** *#* TO DO LIST *#* **##**\n\nThis small list will be the central place where I will list ideas and\nthings I want to happen with screenFetch.\n\nObvious Things:\n\n\t1) Add any and all suggested WMs.\n\t2) More distros! Suggest them and I'll add them. Or I'll add them as I find them.\n\nOther Things:\n\n\t1) Better GTK3 detection. Fix for gsettings stuff.\n\t2) Better -c. Support setting of all available colors in an ascii logo.\n\t3) Centralized color setting. c{1,2,3,etc} and lablecolors all set in one place.\n\t4) Better disk detection. Fix problems with it.\n\t5) Cleanup detectuptime, detectcpu, *\n\t6) Custom logos file. Source logos file with -C flag is present. -A will act normally\n\t   if -C is present as well.\n\nThat's about it for now. If you can help with any of these, please\nplease PLEASE let me know by emailing me at kittykatt@kittykatt.us or by\nstopping by SilverIRC on your favorite IRC client. The network can be\naccessed by pointing your IRC client to kittykatt.silverirc.com. #me0wz\nis my home channel. If you don't have an IRC client, head on over to\nhttp://www.silverirc.com/index.php?page=chat and that'll join\nyou to #randomz, where I can be reached as well.\n\nThank you for any help.\n\n~KittyKatt (Brett Bohnenkamper)\n"
        },
        {
          "name": "screenfetch-dev",
          "type": "blob",
          "size": 252.61328125,
          "content": "#!/usr/bin/env bash\n\n# screenFetch - a CLI Bash script to show system/theme info in screenshots\n\n# Copyright (c) 2010-2019 Brett Bohnenkamper <kittykatt@kittykatt.us>\n\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Yes, I do realize some of this is horribly ugly coding. Any ideas/suggestions would be\n# appreciated by emailing me or by stopping by http://github.com/KittyKatt/screenFetch. You\n# could also drop in on the IRC channel at irc://irc.rizon.net/screenFetch.\n# to put forth suggestions/ideas. Thank you.\n\n# Requires: bash 4.0+\n#           bc\n# Optional dependencies: xorg-xdpyinfo (resoluton detection)\n#                        xorg-xprop (desktop environment detection)\n#                        scrot (screenshot taking)\n#                        curl (screenshot uploading)\n\n\n#LANG=C\n#LANGUAGE=C\n#LC_ALL=C\n\n\nscriptVersion=\"3.9.9\"\n\n######################\n# Settings for fetcher\n######################\n\n# This setting controls what ASCII logo is displayed.\n# distro=\"Linux\"\n\n# This sets the information to be displayed. Available: distro, Kernel, DE, WM, Win_theme, Theme, Icons, Font, Background, ASCII.\n# To get just the information, and not a text-art logo, you would take \"ASCII\" out of the below variable.\nvalid_display=(\n\t\t'distro'\n\t\t'host'\n\t\t'kernel'\n\t\t'uptime'\n\t\t'pkgs'\n\t\t'shell'\n\t\t'res'\n\t\t'de'\n\t\t'wm'\n\t\t'wmtheme'\n\t\t'gtk'\n\t\t'disk'\n\t\t'cpu'\n\t\t'gpu'\n\t\t'mem'\n)\ndisplay=(\n\t\t'distro'\n\t\t'host'\n\t\t'kernel'\n\t\t'uptime'\n\t\t'pkgs'\n\t\t'shell'\n\t\t'res'\n\t\t'de'\n\t\t'wm'\n\t\t'wmtheme'\n\t\t'gtk'\n\t\t'cpu'\n\t\t'disk'\n\t\t'gpu'\n\t\t'mem'\n)\n# Display Type: ASCII or Text\ndisplay_type=\"ASCII\"\n# Plain logo\ndisplay_logo=\"no\"\n\n# Colors to use for the information found. These are set below according to distribution.\n# If you would like to set your OWN color scheme for these, uncomment the lines below and edit them to your heart's content.\n# textcolor=\"\\e[0m\"\n# labelcolor=\"\\e[1;34m\"\n\n# Array: WM Process Names\n# Order matters!\n# Removed WM's: compiz\nwmnames=(\n\t\t'fluxbox'\n\t\t'openbox'\n\t\t'blackbox'\n\t\t'xfwm4'\n\t\t'metacity'\n\t\t'kwin'\n\t\t'twin'\n\t\t'icewm'\n\t\t'pekwm'\n\t\t'flwm'\n\t\t'flwm_topside'\n\t\t'fvwm'\n\t\t'dwm'\n\t\t'awesome'\n\t\t'wmaker'\n\t\t'stumpwm'\n\t\t'musca'\n\t\t'xmonad.*'\n\t\t'i3'\n\t\t'ratpoison'\n\t\t'scrotwm'\n\t\t'spectrwm'\n\t\t'wmfs'\n\t\t'wmii'\n\t\t'beryl'\n\t\t'subtle'\n\t\t'e16'\n\t\t'enlightenment'\n\t\t'sawfish'\n\t\t'emerald'\n\t\t'monsterwm'\n\t\t'dminiwm'\n\t\t'compiz'\n\t\t'Finder'\n\t\t'herbstluftwm'\n\t\t'howm'\n\t\t'notion'\n\t\t'bspwm'\n\t\t'cinnamon'\n\t\t'2bwm'\n\t\t'echinus'\n\t\t'swm'\n\t\t'budgie-wm'\n\t\t'dtwm'\n\t\t'9wm'\n\t\t'chromeos-wm'\n\t\t'deepin-wm'\n\t\t'sway'\n\t\t'mwm'\n)\n\n# Array with full Ubuntu release codenames, used so that the script will display\n# i.e. \"Ubuntu 18.04 LTS (Bionic Beaver)\" instead of \"Ubuntu 18.04 bionic\"\nubuntu_codenames=(\n\t\t'(Warty Warthog)'\t\t#  4.10\n\t\t'(Hoary Hedgehog)'\t\t#  5.04\n\t\t'(Breezy Badger)'\t\t#  5.10\n\t\t'LTS (Dapper Drake)'\t\t#  6.06\n\t\t'(Edgy Eft)'\t\t\t#  6.10\n\t\t'(Feisty Fawn)'\t\t\t#  7.04\n\t\t'(Gutsy Gibbon)'\t\t#  7.10\n\t\t'LTS (Hardy Heron)'\t\t#  8.04\n\t\t'(Intrepid Ibex)'\t\t#  8.10\n\t\t'(Jaunty Jackalope)'\t\t#  9.04\n\t\t'(Karmic Koala)'\t\t#  9.10\n\t\t'LTS (Lucid Lynx)'\t\t# 10.04\n\t\t'(Maverick Meerkat)'\t\t# 10.10\n\t\t'(Natty Narwhal)'\t\t# 11.04\n\t\t'(Oneiric Ocelot)'\t\t# 11.10\n\t\t'LTS (Precise Pangolin)'\t# 12.04\n\t\t'(Quantal Quetzal)'\t\t# 12.10\n\t\t'(Raring Ringtail)'\t\t# 13.04\n\t\t'(Saucy Salamander)'\t\t# 13.10\n\t\t'LTS (Trusty Tahr)'\t\t# 14.04\n\t\t'(Utopic Unicorn)'\t\t# 14.10\n\t\t'(Vivid Vervet)'\t\t# 15.04\n\t\t'(Wily Werewolf)'\t\t# 15.10\n\t\t'LTS (Xenial Xerus)'\t\t# 16.04\n\t\t'(Yakkety Yak)'\t\t\t# 16.10\n\t\t'(Zesty Zapus)'\t\t\t# 17.04\n\t\t'(Artful Aardvark)'\t\t# 17.10\n\t\t'LTS (Bionic Beaver)'\t\t# 18.04\n\t\t'(Cosmic Cuttlefish)'\t\t# 18.10\n\t\t'(Disco Dingo)'\t\t\t# 19.04\n\t\t'(Eoan Ermine)'\t\t\t# 19.10\n\t\t'LTS (Focal Fossa)'\t\t# 20.04\n\t\t'(Groovy Gorilla)'\t\t# 20.10\n\t\t'(Hirsute Hippo)'\t\t# 21.04\n\t\t'LTS (Jammy Jellyfish)'\t\t# 22.04\n\t\t'(Lunar Lobster)'\t\t# 23.04\n\t\t'(Mantic Minotaur)'\t\t# 23.10\n)\n\n# Screenshot Settings\n# This setting lets the script know if you want to take a screenshot or not. 1=Yes 0=No\nscreenshot=\n# This setting lets the script know if you want to upload the screenshot to a filehost. 1=Yes 0=No\nupload=\n# This setting lets the script know where you would like to upload the file to.\n# Valid hosts are: teknik, mediacrush, imgur, hmp, and a configurable local.\nuploadLoc=\n# You can specify a custom screenshot command here. Just uncomment and edit.\n# Otherwise, we'll be using the default command: scrot -cd3.\n# screenCommand=\"scrot -cd5\"\nshotfile=$(printf \"screenFetch-%s.png\" \"$(date +'%Y-%m-%d_%H-%M-%S')\")\n\n# Verbose Setting - Set to 1 for verbose output.\nverbosity=\n\n# Custom lines example:\n# screenfetch -C \"IP 'WAN'=192.168.0.12,IP 'BRIDGED'=10.1.1.10,IP 'HOST-ONLY'=172.16.25.4,,Web terminal interface=http://10.1.1.10\"\n#\n#... will produce:\n#\n# IP 'WAN': 192.168.0.12\n# IP 'BRIDGED': 10.1.1.10\n# IP 'HOST-ONLY': 172.16.25.4\n#\n# Web terminal interface: http://10.1.1.10\n\ncustomlines () {\n\tOLD_IFS=\"${IFS}\"\n\tIFS=,\n\n\tfor custom_line in ${custom_lines_string} ; do\n\t\twhile read -r key; do\n\t\t\tread -r value\n\t\t\tif [[ -z \"${key}\" ]]; then\n\t\t\t\tcustom=\"\" # print an empty line\n\t\t\telse\n\t\t\t\tcustom=$(echo -e \" ${labelcolor}${key}: ${textcolor}${value}\");\n\t\t\tfi\n\t\t\tout_array=( \"${out_array[@]}\" \"${custom}\" ); ((display_index++));\n\t\tdone <<< \"$(echo \"${custom_line}\" | tr \"=\" \"\\n\")\"\n\tdone\n\n\tIFS=\"${OLD_IFS}\"\n}\n\n\n#############################################\n#### CODE No need to edit past here CODE ####\n#############################################\n\n# https://github.com/KittyKatt/screenFetch/issues/549\nif [[ \"${OSTYPE}\" =~ \"linux\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t# issue seems to affect Ubuntu; add LSB directories if it appears on other distros too\n\texport GIO_EXTRA_MODULES=\"/usr/lib/x86_64-linux-gnu/gio/modules:/usr/lib/i686-linux-gnu/gio/modules:$GIO_EXTRA_MODULES\"\nfi\n\n#########################################\n# Static Variables and Common Functions #\n#########################################\nc0=$'\\033[0m' # Reset Text\nbold=$'\\033[1m' # Bold Text\nunderline=$'\\033[4m' # Underline Text\ndisplay_index=0\n\n# User options\ngtk_2line=\"no\"\n\n# Static Color Definitions\ncolorize () {\n\tprintf $'\\033[0m\\033[38;5;%sm' \"$1\"\n}\ngetColor () {\n\tlocal tmp_color=\"\"\n\tif [[ -n \"$1\" ]]; then\n\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\tif [[ ${BASH_VERSINFO[0]} -eq 4 && ${BASH_VERSINFO[1]} -gt 1 ]] || [[ ${BASH_VERSINFO[0]} -gt 4 ]]; then\n\t\t\t\ttmp_color=${1,,}\n\t\t\telse\n\t\t\t\ttmp_color=\"$(tr '[:upper:]' '[:lower:]' <<< \"${1}\")\"\n\t\t\tfi\n\t\telse\n\t\t\ttmp_color=\"$(tr '[:upper:]' '[:lower:]' <<< \"${1}\")\"\n\t\tfi\n\t\tcase \"${tmp_color}\" in\n\t\t\t# Standards\n\t\t\t'black')\t\t\t\t\tcolor_ret='\\033[0m\\033[30m';;\n\t\t\t'red')\t\t\t\t\t\tcolor_ret='\\033[0m\\033[31m';;\n\t\t\t'green')\t\t\t\t\tcolor_ret='\\033[0m\\033[32m';;\n\t\t\t'brown')\t\t\t\t\tcolor_ret='\\033[0m\\033[33m';;\n\t\t\t'blue')\t\t\t\t\t\tcolor_ret='\\033[0m\\033[34m';;\n\t\t\t'purple')\t\t\t\t\tcolor_ret='\\033[0m\\033[35m';;\n\t\t\t'cyan')\t\t\t\t\t\tcolor_ret='\\033[0m\\033[36m';;\n\t\t\t'yellow')\t\t\t\t\tcolor_ret='\\033[0m\\033[1;33m';;\n\t\t\t'white')\t\t\t\t\tcolor_ret='\\033[0m\\033[1;37m';;\n\t\t\t# Bolds\n\t\t\t'dark grey'|'dark gray')\tcolor_ret='\\033[0m\\033[1;30m';;\n\t\t\t'light red')\t\t\t\tcolor_ret='\\033[0m\\033[1;31m';;\n\t\t\t'light green')\t\t\t\tcolor_ret='\\033[0m\\033[1;32m';;\n\t\t\t'light blue')\t\t\t\tcolor_ret='\\033[0m\\033[1;34m';;\n\t\t\t'light purple')\t\t\t\tcolor_ret='\\033[0m\\033[1;35m';;\n\t\t\t'light cyan')\t\t\t\tcolor_ret='\\033[0m\\033[1;36m';;\n\t\t\t'light grey'|'light gray')\tcolor_ret='\\033[0m\\033[37m';;\n\t\t\t# Some 256 colors\n\t\t\t'orange')\t\t\t\t\tcolor_ret=\"$(colorize '202')\";; #DarkOrange\n\t\t\t'light orange') \t\t\tcolor_ret=\"$(colorize '214')\";; #Orange1\n\t\t\t# HaikuOS\n\t\t\t'black_haiku') \t\t\t\tcolor_ret=\"$(colorize '7')\";;\n\t\t\t#ROSA color\n\t\t\t'rosa_blue') \t\t\t\tcolor_ret='\\033[01;38;05;25m';;\n\t\t\t# ArcoLinux\n\t\t\t'arco_blue') color_ret='\\033[1;38;05;111m';;\n\t\tesac\n\t\t[[ -n \"${color_ret}\" ]] && echo \"${color_ret}\"\n\tfi\n}\n\nverboseOut () {\n\tif [[ \"$verbosity\" -eq \"1\" ]]; then\n\t\tprintf '\\033[1;31m:: \\033[0m%s\\n' \"$1\"\n\tfi\n}\n\nerrorOut () {\n\tprintf '\\033[1;37m[[ \\033[1;31m! \\033[1;37m]] \\033[0m%s\\n' \"$1\"\n}\nstderrOut () {\n\twhile IFS='' read -r line; do\n\t\tprintf '\\033[1;37m[[ \\033[1;31m! \\033[1;37m]] \\033[0m%s\\n' \"$line\"\n\tdone\n}\n\n\n####################\n#  Color Defines\n####################\n\ncolorNumberToCode () {\n\tlocal number=\"$1\"\n\tif [[ \"${number}\" == \"na\" ]]; then\n\t\tunset code\n\telif [[ $(tput colors) -eq \"256\" ]]; then\n\t\tcode=$(colorize \"${number}\")\n\telse\n\t\tcase \"$number\" in\n\t\t\t0|00) code=$(getColor 'black');;\n\t\t\t1|01) code=$(getColor 'red');;\n\t\t\t2|02) code=$(getColor 'green');;\n\t\t\t3|03) code=$(getColor 'brown');;\n\t\t\t4|04) code=$(getColor 'blue');;\n\t\t\t5|05) code=$(getColor 'purple');;\n\t\t\t6|06) code=$(getColor 'cyan');;\n\t\t\t7|07) code=$(getColor 'light grey');;\n\t\t\t8|08) code=$(getColor 'dark grey');;\n\t\t\t9|09) code=$(getColor 'light red');;\n\t\t\t  10) code=$(getColor 'light green');;\n\t\t\t  11) code=$(getColor 'yellow');;\n\t\t\t  12) code=$(getColor 'light blue');;\n\t\t\t  13) code=$(getColor 'light purple');;\n\t\t\t  14) code=$(getColor 'light cyan');;\n\t\t\t  15) code=$(getColor 'white');;\n\t\t\t*) unset code;;\n\t\tesac\n\tfi\n\techo -n \"${code}\"\n}\n\n\ndetectColors () {\n\tmy_colors=$(sed 's/^,/na,/;s/,$/,na/;s/,/ /' <<< \"${OPTARG}\")\n\tmy_lcolor=$(\"${AWK}\" -F' ' '{print $1}' <<< \"${my_colors}\")\n\tmy_lcolor=$(colorNumberToCode \"${my_lcolor}\")\n\tmy_hcolor=$(\"${AWK}\" -F' ' '{print $2}' <<< \"${my_colors}\")\n\tmy_hcolor=$(colorNumberToCode \"${my_hcolor}\")\n}\n\nsupported_distros=\"ALDOS, Alpine Linux, AlmaLinux, Alter Linux, Amazon Linux, Antergos, Arch Linux (Old and Current Logos), Arch Linux 32, ArcoLinux, Artix Linux, \\\nblackPanther OS, BLAG, BunsenLabs, CentOS, Chakra, Chapeau, Chrome OS, Chromium OS, CrunchBang, CRUX, \\\nDebian, Deepin, DesaOS,Devuan, Dragora, DraugerOS, elementary OS, EuroLinux, Evolve OS, Sulin, Exherbo, Fedora(Old and Current Logos), Frugalware, Fuduntu, Funtoo, \\\nFux, Gentoo, gNewSense, Guix System, Hyperbola GNU/Linux-libre, januslinux, Jiyuu Linux, Kali Linux, KaOS, KDE neon, Kogaion, Korora, \\\nLinuxDeepin, Linux Mint, LMDE, Logos, Mageia, Mandriva/Mandrake, Manjaro, Mer, Netrunner, NixOS, OBRevenge, openSUSE, \\\nOS Elbrus, Oracle Linux, Parabola GNU/Linux-libre, Pardus, Parrot Security, PCLinuxOS, PeppermintOS, Proxmox VE, PureOS, Quirinux, Qubes OS, \\\nRaspbian, Red Hat Enterprise Linux, Rocky Linux, ROSA, Sabayon, SailfishOS, Scientific Linux, Siduction, Slackware, Solus, Source Mage GNU/Linux, \\\nSparkyLinux, SteamOS, SUSE Linux Enterprise, SwagArch, TeArch, TinyCore, Trisquel, Ubuntu, Viperr, Void and Zorin OS and EndeavourOS\"\n\nsupported_other=\"Dragonfly/Free/Open/Net BSD, Haiku, macOS, Windows+Cygwin and Windows+MSYS2.\"\n\nsupported_dms=\"KDE, GNOME, Unity, Xfce, LXDE, Cinnamon, MATE, Deepin, CDE, RazorQt and Trinity.\"\n\nsupported_wms=\"2bwm, 9wm, Awesome, Beryl, Blackbox, Cinnamon, chromeos-wm, Compiz, deepin-wm, \\\ndminiwm, dwm, dtwm, E16, E17, echinus, Emerald, FluxBox, FLWM, FVWM, herbstluftwm, howm, IceWM, KWin, \\\nMetacity, monsterwm, Musca, Gala, Mutter, Muffin, Notion, OpenBox, PekWM, Ratpoison, Sawfish, ScrotWM, SpectrWM, \\\nStumpWM, subtle, sway, TWin, WindowMaker, WMFS, wmii, Xfwm4, XMonad and i3.\"\n\ndisplayHelp () {\n\techo \"${underline}Usage${c0}:\"\n\techo \"  ${0} [OPTIONAL FLAGS]\"\n\techo\n\techo \"screenFetch - a CLI Bash script to show system/theme info in screenshots.\"\n\techo\n\techo \"${underline}Supported GNU/Linux Distributions${c0}:\"\n\techo \"${supported_distros}\" | fold -s | sed 's/^/\\t/g'\n\techo\n\techo \"${underline}Other Supported Systems${c0}:\"\n\techo \"${supported_other}\" | fold -s | sed 's/^/\\t/g'\n\techo\n\techo \"${underline}Supported Desktop Managers${c0}:\"\n\techo \"${supported_dms}\" | fold -s | sed 's/^/\\t/g'\n\techo\n\techo \"${underline}Supported Window Managers${c0}:\"\n\techo \"${supported_wms}\" | fold -s | sed 's/^/\\t/g'\n\techo\n\techo \"${underline}Supported Information Displays${c0}:\"\n\techo \"${valid_display[@]}\" | fold -s | sed 's/^/\\t/g'\n\techo\n\techo \"${underline}Options${c0}:\"\n\techo \"   ${bold}-v${c0}                 Verbose output.\"\n\techo \"   ${bold}-o 'OPTIONS'${c0}       Allows for setting script variables on the\"\n\techo \"                      command line. Must be in the following format...\"\n\techo \"                      'OPTION1=\\\"OPTIONARG1\\\";OPTION2=\\\"OPTIONARG2\\\"'\"\n\techo \"   ${bold}-d '+var;-var;var'${c0} Allows for setting what information is displayed\"\n\techo \"                      on the command line. You can add displays with +var,var. You\"\n\techo \"                      can delete displays with -var,var. Setting without + or - will\"\n\techo \"                      set display to that explicit combination. Add and delete statements\"\n\techo \"                      may be used in conjunction by placing a ; between them as so:\"\n\techo \"                      +var,var,var;-var,var. See above to find supported display names.\"\n\techo \"   ${bold}-n${c0}                 Do not display ASCII distribution logo.\"\n\techo \"   ${bold}-L${c0}                 Display ASCII distribution logo only.\"\n\techo \"   ${bold}-N${c0}                 Strip all color from output.\"\n\techo \"   ${bold}-w${c0}                 Wrap long lines.\"\n\techo \"   ${bold}-t${c0}                 Truncate output based on terminal width (Experimental!).\"\n\techo \"   ${bold}-p${c0}                 Portrait output.\"\n\techo \"   ${bold}-s [-u IMGHOST]${c0}    Using this flag tells the script that you want it\"\n\techo \"                      to take a screenshot. Use the -u flag if you would like\"\n\techo \"                      to upload the screenshots to one of the pre-configured\"\n\techo \"                      locations. These include: teknik, imgur, mediacrush and hmp.\"\n\techo \"   ${bold}-c string${c0}          You may change the outputted colors with -c. The format is\"\n\techo \"                      as follows: [0-9][0-9],[0-9][0-9]. The first argument controls the\"\n\techo \"                      ASCII logo colors and the label colors. The second argument\"\n\techo \"                      controls the colors of the information found. One argument may be\"\n\techo \"                      used without the other. For terminals supporting 256 colors argument\"\n\techo \"                      may also contain other terminal control codes for bold, underline etc.\"\n\techo \"                      separated by semicolon. For example -c \\\"4;1,1;2\\\" will produce bold\"\n\techo \"                      blue and dim red.\"\n\techo \"   ${bold}-a 'PATH'${c0}          You can specify a custom ASCII art by passing the path\"\n\techo \"                      to a Bash script, defining \\`startline\\` and \\`fulloutput\\`\"\n\techo \"                      variables, and optionally \\`labelcolor\\` and \\`textcolor\\`.\"\n\techo \"                      See the \\`asciiText\\` function in the source code for more\"\n\techo \"                      information on the variables format.\"\n\techo \"   ${bold}-S 'COMMAND'${c0}       Here you can specify a custom screenshot command for\"\n\techo \"                      the script to execute. Surrounding quotes are required.\"\n\techo \"   ${bold}-D 'DISTRO'${c0}        Here you can specify your distribution for the script\"\n\techo \"                      to use. Surrounding quotes are required.\"\n\techo \"   ${bold}-A 'DISTRO'${c0}        Here you can specify the distribution art that you want\"\n\techo \"                      displayed. This is for when you want your distro\"\n\techo \"                      detected but want to display a different logo.\"\n\techo \"   ${bold}-E${c0}                 Suppress output of errors.\"\n\techo \"   ${bold}-C${c0}                 Add custom (extra) lines.\"\n\techo \"                      For example:\"\n\techo \"                      \tscreenfetch -C 'IP WAN=192.168.0.12,IP BRIDGED=10.1.1.10'\"\n\techo \"                      ... will add two extra lines:\"\n\techo \"                      \tIP WAN: 192.168.0.12\"\n\techo \"                      \tIP BRIDGED: 10.1.1.10\"\n\techo \"   ${bold}-V, --version${c0}      Display current script version.\"\n\techo \"   ${bold}-h, --help${c0}         Display this help.\"\n}\n\n\ndisplayVersion () {\n\techo \"${underline}screenFetch${c0} - Version ${scriptVersion}\"\n\techo \"Created by and licensed to Brett Bohnenkamper <kittykatt@kittykatt.us>\"\n\techo \"OS X porting done almost solely by shrx (https://github.com/shrx) and John D. Duncan, III (https://github.com/JohnDDuncanIII).\"\n\techo\n\techo \"This is free software; see the source for copying conditions.  There is NO warranty; not even MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n}\n\n\n#####################\n# Begin Flags Phase\n#####################\n\ncase $1 in\n\t--help) displayHelp; exit 0;;\n\t--version) displayVersion; exit 0;;\nesac\n\n# Detect which awk to use (unless already specified in environment)\nif [[ -z \"${AWK}\" ]]; then\n\tfor awk in awk gawk mawk; do\n\t\tif command -v \"${awk}\" > /dev/null; then\n\t\t\tAWK=\"${awk}\"\n\t\t\tbreak\n\t\tfi\n\tdone\nfi\n\nif ! command -v \"${AWK}\" > /dev/null; then\n\terrorOut \"No awk interpreter available (AWK=\\\"${AWK}\\\").\"\n\texit 1\nfi\n\n# Parse the rest of the flags (some of these functions require awk)\nwhile getopts \":hsu:evVEnLNtlS:A:D:o:c:d:pa:w:C:\" flags; do\n\tcase $flags in\n\t\th) displayHelp; exit 0 ;;\n\t\ts) screenshot='1' ;;\n\t\tS) screenCommand=\"${OPTARG}\" ;;\n\t\tu) upload='1'; uploadLoc=\"${OPTARG}\" ;;\n\t\tv) verbosity=1 ;;\n\t\tV) displayVersion; exit 0 ;;\n\t\tE) errorSuppress='1' ;;\n\t\tD) distro=\"${OPTARG}\" ;;\n\t\tA) asc_distro=\"${OPTARG}\" ;;\n\t\tt) truncateSet='Yes' ;;\n\t\tn) display_type='Text' ;;\n\t\tL) display_type='ASCII'; display_logo='Yes' ;;\n\t\to) overrideOpts=\"${OPTARG}\" ;;\n\t\tc) detectColors \"${OPTARGS}\" ;;\n\t\td) overrideDisplay=\"${OPTARG}\" ;;\n\t\tN) no_color='1' ;;\n\t\tp) portraitSet='Yes' ;;\n\t\ta) art=\"${OPTARG}\" ;;\n\t\tw) lineWrap='Yes' ;;\n\t\tC) custom_lines_string=\"${OPTARG}\" ;;\n\t\t:) errorOut \"Error: You're missing an argument somewhere. Exiting.\"; exit 1 ;;\n\t\t?) errorOut \"Error: Invalid flag somewhere. Exiting.\"; exit 1 ;;\n\t\t*) errorOut \"Error\"; exit 1 ;;\n\tesac\ndone\n\n###################\n# End Flags Phase\n###################\n\n\n############################\n# Override Options/Display\n############################\n\nif [[ \"$overrideOpts\" ]]; then\n\tverboseOut \"Found 'o' flag in syntax. Overriding some script variables...\"\n\teval \"${overrideOpts}\"\nfi\n\n\n#########################\n# Begin Detection Phase\n#########################\n\n# Distro Detection - Begin\ndetectdistro () {\n\tlocal distro_detect=\"\"\n\tif [[ -z \"${distro}\" ]]; then\n\t\tdistro=\"Unknown\"\n\t\t# LSB Release or MCST Version Check\n\t\tif [[ -e \"/etc/mcst_version\" ]]; then\n\t\t\tdistro=\"OS Elbrus\"\n\t\t\tdistro_release=\"$(tail -n 1 /etc/mcst_version)\"\n\t\t\tif [[ -n ${distro_release} ]]; then\n\t\t\t\tdistro_more=\"$distro_release\"\n\t\t\tfi\n\t\telif type -p lsb_release >/dev/null 2>&1; then\n\t\t\t# read distro_detect distro_release distro_codename <<< $(lsb_release -sirc)\n\t\t\t#OLD_IFS=$IFS\n\t\t\t#IFS=\" \"\n\t\t\t#read -r -a distro_detect <<< \"$(lsb_release -sirc)\"\n\t\t\t#IFS=$OLD_IFS\n\t\t\t#if [[ ${#distro_detect[@]} -eq 3 ]]; then\n\t\t\t#\tdistro_codename=${distro_detect[2]}\n\t\t\t#\tdistro_release=${distro_detect[1]}\n\t\t\t#\tdistro_detect=${distro_detect[0]}\n\t\t\t#else\n\t\t\t#\tfor i in \"${!distro_detect[@]}\"; do\n\t\t\t#\t\tif [[ ${distro_detect[$i]} =~ ^[[:digit:]]+((.[[:digit:]]+|[[:digit:]]+|)+)$ ]]; then\n\t\t\t#\t\t\tdistro_release=${distro_detect[$i]}\n\t\t\t#\t\t\tdistro_codename=${distro_detect[*]:$((i+1))}\n\t\t\t#\t\t\tdistro_detect=${distro_detect[*]:0:${i}}\n\t\t\t#\t\t\tbreak 1\n\t\t\t#\t\telif [[ ${distro_detect[$i]} =~ [Nn]/[Aa] || ${distro_detect[$i]} == \"rolling\" ]]; then\n\t\t\t#\t\t\tdistro_release=${distro_detect[$i]}\n\t\t\t#\t\t\tdistro_codename=${distro_detect[*]:$((i+1))}\n\t\t\t#\t\t\tdistro_detect=${distro_detect[*]:0:${i}}\n\t\t\t#\t\t\tbreak 1\n\t\t\t#\t\tfi\n\t\t\t#\tdone\n\t\t\t#fi\n\t\t\tdistro_detect=\"$(lsb_release -si)\"\n\t\t\tdistro_release=\"$(lsb_release -sr)\"\n\t\t\tdistro_codename=\"$(lsb_release -sc)\"\n\t\t\tcase \"${distro_detect}\" in\n\t\t\t\t\"archlinux\"|\"Arch Linux\"|\"arch\"|\"Arch\"|\"archarm\")\n\t\t\t\t\tdistro=\"Arch Linux\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\tif [ -f /etc/os-release ]; then\n\t\t\t\t\t\tos_release=\"/etc/os-release\";\n\t\t\t\t\telif [ -f /usr/lib/os-release ]; then\n\t\t\t\t\t\tos_release=\"/usr/lib/os-release\";\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ -n ${os_release} ]]; then\n\t\t\t\t\t\tif grep -q 'antergos' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"Antergos\"\n\t\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif grep -q -i 'logos' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"Logos\"\n\t\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif grep -q -i 'swagarch' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"SwagArch\"\n\t\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif grep -q -i 'obrevenge' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"OBRevenge\"\n\t\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif grep -q -i 'Alter' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"Alter Linux\"\n\t\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"ALDOS\"|\"Aldos\")\n\t\t\t\t\tdistro=\"ALDOS\"\n\t\t\t\t\t;;\n\t\t\t\t\"ArcoLinux\")\n\t\t\t\t\tdistro=\"ArcoLinux\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t;;\n\t\t\t\t\"artixlinux\"|\"Artix Linux\"|\"artix\"|\"Artix\"|\"Artix release\")\n\t\t\t\t\tdistro=\"Artix\"\n\t\t\t\t\t;;\n\t\t\t\t\"blackPantherOS\"|\"blackPanther\"|\"blackpanther\"|\"blackpantheros\")\n\t\t\t\t\tdistro=$(source /etc/lsb-release; echo \"$DISTRIB_ID\")\n\t\t\t\t\tdistro_release=$(source /etc/lsb-release; echo \"$DISTRIB_RELEASE\")\n\t\t\t\t\tdistro_codename=$(source /etc/lsb-release; echo \"$DISTRIB_CODENAME\")\n\t\t\t\t\t;;\n\t\t\t\t\"BLAG\")\n\t\t\t\t\tdistro=\"BLAG\"\n\t\t\t\t\tdistro_more=\"$(head -n1 /etc/fedora-release)\"\n\t\t\t\t\t;;\n\t\t\t\t\"Chakra\")\n\t\t\t\t\tdistro=\"Chakra\"\n\t\t\t\t\tdistro_release=\"\"\n\t\t\t\t\t;;\n\t\t\t\t\"BunsenLabs\")\n\t\t\t\t\tdistro=$(source /etc/lsb-release; echo \"$DISTRIB_ID\")\n\t\t\t\t\tdistro_release=$(source /etc/lsb-release; echo \"$DISTRIB_RELEASE\")\n\t\t\t\t\tdistro_codename=$(source /etc/lsb-release; echo \"$DISTRIB_CODENAME\")\n\t\t\t\t\t;;\n\t\t\t\t\"Debian\")\n\t\t\t\t\tif [[ -f /etc/crunchbang-lsb-release || -f /etc/lsb-release-crunchbang ]]; then\n\t\t\t\t\t\tdistro=\"CrunchBang\"\n\t\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^DISTRIB_RELEASE=/ {print $2}' /etc/lsb-release-crunchbang)\n\t\t\t\t\t\tdistro_codename=$(\"${AWK}\" -F'=' '/^DISTRIB_DESCRIPTION=/ {print $2}' /etc/lsb-release-crunchbang)\n\t\t\t\t\telif [[ -f /etc/siduction-version ]]; then\n\t\t\t\t\t\tdistro=\"Siduction\"\n\t\t\t\t\t\tdistro_release=\"(Debian Sid)\"\n\t\t\t\t\t\tdistro_codename=\"\"\n\t\t\t\t\telif [[ -f /usr/bin/pveversion ]]; then\n\t\t\t\t\t\tdistro=\"Proxmox VE\"\n\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\tdistro_release=\"$(/usr/bin/pveversion | grep -oP 'pve-manager\\/\\K\\d+\\.\\d+')\"\n\t\t\t\t\telif [[ -f /etc/os-release ]]; then\n\t\t\t\t\t\tif grep -q -i 'Raspbian' /etc/os-release ; then\n\t\t\t\t\t\t\tdistro=\"Raspbian\"\n\t\t\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^PRETTY_NAME=/ {print $2}' /etc/os-release)\n\t\t\t\t\t\telif grep -q -i 'BlankOn' /etc/os-release ; then\n\t\t\t\t\t\t\tdistro='BlankOn'\n\t\t\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^PRETTY_NAME=/ {print $2}' /etc/os-release)\n\t\t\t\t\t\telif grep -q -i 'Quirinux' /etc/os-release ; then\n\t\t\t\t\t\t\tdistro='Quirinux'\n\t\t\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^PRETTY_NAME=/ {print $2}' /etc/os-release)\t\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdistro=\"Debian\"\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\tdistro=\"Debian\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t  \"DraugerOS\")\n\t\t\t    distro = \"DraugerOS\"\n\t\t\t    fake_distro=\"${distro}\"\n\t\t\t    ;;\n\t\t\t\t\"elementary\"|\"elementary OS\")\n\t\t\t\t\tdistro=\"elementary OS\"\n\t\t\t\t\t;;\n\t\t\t\t\"EvolveOS\")\n\t\t\t\t\tdistro=\"Evolve OS\"\n\t\t\t\t\t;;\n\t\t\t\t\"Sulin\")\n\t\t\t\t\tdistro=\"Sulin\"\n\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^ID_LIKE=/ {print $2}' /etc/os-release)\n\t\t\t\t\tdistro_codename=\"Roolling donkey\" # this is not wrong :D\n\t\t\t\t\t;;\n\t\t\t\t\"KaOS\"|\"kaos\")\n\t\t\t\t\tdistro=\"KaOS\"\n\t\t\t\t\t;;\n\t\t\t\t\"frugalware\")\n\t\t\t\t\tdistro=\"Frugalware\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\tdistro_release=null\n\t\t\t\t\t;;\n\t\t\t\t\"Fuduntu\")\n\t\t\t\t\tdistro=\"Fuduntu\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"Fux\")\n\t\t\t\t\tdistro=\"Fux\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"Gentoo\")\n\t\t\t\t\tif [[ \"$(lsb_release -sd)\" =~ \"Funtoo\" ]]; then\n\t\t\t\t\t\tdistro=\"Funtoo\"\n\t\t\t\t\telse\n\t\t\t\t\t\tdistro=\"Gentoo\"\n\t\t\t\t\tfi\n\n\t\t\t\t\t#detecting release stable/testing/experimental\n\t\t\t\t\tif [[ -f /etc/portage/make.conf ]]; then\n\t\t\t\t\t\tsource /etc/portage/make.conf\n\t\t\t\t\telif [[ -d /etc/portage/make.conf ]]; then\n\t\t\t\t\t\tsource /etc/portage/make.conf/*\n\t\t\t\t\tfi\n\n\t\t\t\t\tcase $ACCEPT_KEYWORDS in\n\t\t\t\t\t\t[a-z]*) distro_release=stable       ;;\n\t\t\t\t\t\t~*)     distro_release=testing      ;;\n\t\t\t\t\t\t'**')   distro_release=experimental ;; #experimental usually includes git-versions.\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\t\"Hyperbola GNU/Linux-libre\"|\"Hyperbola\")\n\t\t\t\t\tdistro=\"Hyperbola GNU/Linux-libre\"\n\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t;;\n\t\t\t\t\"januslinux\"|\"janus\")\n\t\t\t\t\tdistro=\"januslinux\"\n\t\t\t\t\t;;\n\t\t\t\t\"LinuxDeepin\")\n\t\t\t\t\tdistro=\"LinuxDeepin\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"Uos\")\n\t\t\t\t\tdistro=\"Uos\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"Kali\"|\"Debian Kali Linux\")\n\t\t\t\t\tdistro=\"Kali Linux\"\n\t\t\t\t\tif [[ \"${distro_codename}\" =~ \"kali-rolling\" ]]; then\n\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"Lunar Linux\"|\"lunar\")\n\t\t\t\t\tdistro=\"Lunar Linux\"\n\t\t\t\t\t;;\n\t\t\t\t\"MandrivaLinux\")\n\t\t\t\t\tdistro=\"Mandriva\"\n\t\t\t\t\tcase \"${distro_codename}\" in\n\t\t\t\t\t\t\"turtle\"|\"Henry_Farman\"|\"Farman\"|\"Adelie\"|\"pauillac\")\n\t\t\t\t\t\t\tdistro=\"Mandriva-${distro_release}\"\n\t\t\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\t;;\n\t\t\t\t\"ManjaroLinux\")\n\t\t\t\t\tdistro=\"Manjaro\"\n\t\t\t\t\t;;\n\t\t\t\t\"Mer\")\n\t\t\t\t\tdistro=\"Mer\"\n\t\t\t\t\tif [[ -f /etc/os-release ]]; then\n\t\t\t\t\t\tif grep -q 'SailfishOS' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"SailfishOS\"\n\t\t\t\t\t\t\tdistro_codename=\"$(grep 'VERSION=' /etc/os-release | cut -d '(' -f2 | cut -d ')' -f1)\"\n\t\t\t\t\t\t\tdistro_release=\"$(\"${AWK}\" -F'=' '/^VERSION=/ {print $2}' /etc/os-release)\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"neon\"|\"KDE neon\")\n\t\t\t\t\tdistro=\"KDE neon\"\n\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\tif [[ -f /etc/issue ]]; then\n\t\t\t\t\t\tif grep -q '^KDE neon' /etc/issue ; then\n\t\t\t\t\t\t\tdistro_release=\"$(grep '^KDE neon' /etc/issue | cut -d ' ' -f3)\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"Ol\"|\"ol\"|\"Oracle Linux\")\n\t\t\t\t\tdistro=\"Oracle Linux\"\n\t\t\t\t\t[ -f /etc/oracle-release ] && distro_release=\"$(sed 's/Oracle Linux //' /etc/oracle-release)\"\n\t\t\t\t\t;;\n\t\t\t\t\"LinuxMint\")\n\t\t\t\t\tdistro=\"Mint\"\n\t\t\t\t\tif [[ \"${distro_codename}\" == \"debian\" ]]; then\n\t\t\t\t\t\tdistro=\"LMDE\"\n\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t#adding support for LMDE 3\n\t\t\t\t\telif [[ \"$(lsb_release -sd)\" =~ \"LMDE\" ]]; then\n\t\t\t\t\t\tdistro=\"LMDE\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"openSUSE\"|\"openSUSE project\"|\"SUSE LINUX\" | \"SUSE\")\n\t\t\t\t\tdistro=\"openSUSE\"\n\t\t\t\t\tif [ -f /etc/os-release ]; then\n\t\t\t\t\t\tif grep -q -i 'SUSE Linux Enterprise' /etc/os-release ; then\n\t\t\t\t\t\t\tdistro=\"SUSE Linux Enterprise\"\n\t\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\t\tdistro_release=$(\"${AWK}\" -F'=' '/^VERSION_ID=/ {print $2}' /etc/os-release | tr -d '\"')\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"${distro_codename}\" == \"Tumbleweed\" ]]; then\n\t\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"Parabola GNU/Linux-libre\"|\"Parabola\")\n\t\t\t\t\tdistro=\"Parabola GNU/Linux-libre\"\n\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t;;\n\t\t\t\t\"Parrot\"|\"Parrot Security\")\n\t\t\t\t\tdistro=\"Parrot Security\"\n\t\t\t\t\t;;\n\t\t\t\t\"PCLinuxOS\")\n\t\t\t\t\tdistro=\"PCLinuxOS\"\n\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\tdistro_release=\"n/a\"\n\t\t\t\t\t;;\n\t\t\t\t\"Peppermint\")\n\t\t\t\t\tdistro=\"Peppermint\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"rhel\")\n\t\t\t\t\tdistro=\"Red Hat Enterprise Linux\"\n\t\t\t\t\t;;\n\t\t\t\t\"RosaDesktopFresh\")\n\t\t\t\t\tdistro=\"ROSA\"\n\t\t\t\t\tdistro_release=$(grep 'VERSION=' /etc/os-release | cut -d ' ' -f3 | cut -d \"\\\"\" -f1)\n\t\t\t\t\tdistro_codename=$(grep 'PRETTY_NAME=' /etc/os-release | cut -d ' ' -f4,4)\n\t\t\t\t\t;;\n\t\t\t\t\"SailfishOS\")\n\t\t\t\t\tdistro=\"SailfishOS\"\n\t\t\t\t\tif [[ -f /etc/os-release ]]; then\n\t\t\t\t\t\tdistro_codename=\"$(grep 'VERSION=' /etc/os-release | cut -d '(' -f2 | cut -d ')' -f1)\"\n\t\t\t\t\t\tdistro_release=\"$(\"${AWK}\" -F'=' '/^VERSION=/ {print $2}' /etc/os-release)\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\t\"Sparky\"|\"SparkyLinux\")\n\t\t\t\t\tdistro=\"SparkyLinux\"\n\t\t\t\t\t;;\n                                \"TeArch\"|\"TeArchLinux\"|\"\")\n\t\t\t\t\tdistro=\"TeArch\"\n\t\t\t\t\t;;\n\t\t\t\t\"Ubuntu\")\n\t\t\t\t\tfor each in \"${ubuntu_codenames[@]}\"; do\n\t\t\t\t\t\tif [[ \"${each,,}\" =~ \"${distro_codename,,}\" ]]; then\n\t\t\t\t\t\t\tdistro_codename=\"$each\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\t;;\n\t\t\t\t\"Viperr\")\n\t\t\t\t\tdistro=\"Viperr\"\n\t\t\t\t\tdistro_codename=null\n\t\t\t\t\t;;\n\t\t\t\t\"Void\"|\"VoidLinux\")\n\t\t\t\t\tdistro=\"Void Linux\"\n\t\t\t\t\tdistro_codename=\"\"\n\t\t\t\t\tdistro_release=\"\"\n\t\t\t\t\t;;\n\t\t\t\t\"Zorin\")\n\t\t\t\t\tdistro=\"Zorin OS\"\n\t\t\t\t\tdistro_codename=\"\"\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tif [ \"x$(printf \"${distro_detect}\" | od -t x1 | sed -e 's/^\\w*\\ *//' | tr '\\n' ' ' | grep 'eb b6 89 ec 9d 80 eb b3 84 ')\" != \"x\" ]; then\n\t\t\t\t\t\tdistro=\"Red Star OS\"\n\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\tdistro_release=$(printf \"${distro_release}\" | grep -o '[0-9.]' | tr -d '\\n')\n\t\t\t\t\telse\n\t\t\t\t\t\tdistro=\"${distro_detect}\"\n\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\tesac\n\t\t\tif [[ \"${distro_detect}\" =~ \"CentOSStream\" ]]; then\n\t\t\t\tdistro=\"CentOS Stream\"\n\t\t\tfi\n\t\t\tif [[ \"${distro_detect}\" =~ \"RedHatEnterprise\" ]]; then\n\t\t\t\tdistro=\"Red Hat Enterprise Linux\"\n\t\t\tfi\n\t\t\tif [[ \"${distro_detect}\" =~ \"Rocky Linux\" ]]; then\n\t\t\t\tdistro=\"Rocky Linux\"\n\t\t\tfi\n\t\t\tif [[ \"${distro_detect}\" =~ \"SUSELinuxEnterprise\" ]]; then\n\t\t\t\tdistro=\"SUSE Linux Enterprise\"\n\t\t\tfi\n\t\t\tif [[ -n ${distro_release} && ${distro_release} != \"n/a\" ]]; then\n\t\t\t\tdistro_more=\"$distro_release\"\n\t\t\tfi\n\t\t\tif [[ -n ${distro_codename} && ${distro_codename} != \"n/a\" ]]; then\n\t\t\t\tdistro_more=\"$distro_more $distro_codename\"\n\t\t\tfi\n\t\tfi\n\n\t\t# Existing File Check\n\t\tif [ \"$distro\" == \"Unknown\" ]; then\n\t\t\tif [ \"$(uname -o 2>/dev/null)\" ]; then\n\t\t\t\tos=\"$(uname -o)\"\n\t\t\t\tcase \"$os\" in\n\t\t\t\t\t\"Cygwin\"|\"FreeBSD\"|\"OpenBSD\"|\"NetBSD\")\n\t\t\t\t\t\tdistro=\"$os\"\n\t\t\t\t\t\tfake_distro=\"${distro}\"\n\t\t\t\t\t;;\n\t\t\t\t\t\"DragonFly\")\n\t\t\t\t\t\tdistro=\"DragonFlyBSD\"\n\t\t\t\t\t\tfake_distro=\"${distro}\"\n\t\t\t\t\t;;\n\t\t\t\t\t\"EndeavourOS\")\n\t\t\t\t\t\tdistro=\"EndeavourOS\"\n\t\t\t\t\t\tfake_distro=\"${distro}\"\n\t\t\t\t\t;;\n\t\t\t\t\t\"Msys\")\n\t\t\t\t\t\tdistro=\"Msys\"\n\t\t\t\t\t\tfake_distro=\"${distro}\"\n\t\t\t\t\t\tdistro_more=\"${distro} $(uname -r | head -c 1)\"\n\t\t\t\t\t;;\n\t\t\t\t\t\"Haiku\")\n\t\t\t\t\t\tdistro=\"Haiku\"\n\t\t\t\t\t\tdistro_more=\"$(uname -v | \"${AWK}\" '/^hrev/ {print $1}')\"\n\t\t\t\t\t;;\n\t\t\t\t\t\"GNU/Linux\")\n\t\t\t\t\t\tif type -p crux >/dev/null 2>&1; then\n\t\t\t\t\t\t\tdistro=\"CRUX\"\n\t\t\t\t\t\t\tdistro_more=\"$(crux | \"${AWK}\" '{print $3}')\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif type -p nixos-version >/dev/null 2>&1; then\n\t\t\t\t\t\t\tdistro=\"NixOS\"\n\t\t\t\t\t\t\tdistro_more=\"$(nixos-version)\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif type -p sorcery >/dev/null 2>&1; then\n\t\t\t\t\t\t\tdistro=\"SMGL\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif (type -p guix && type -p herd) >/dev/null 2>&1; then\n\t\t\t\t\t\t\tdistro=\"Guix System\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\tif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\t\t\t# https://msdn.microsoft.com/en-us/library/ms724832%28VS.85%29.aspx\n\t\t\t\tif wmic os get version | grep -q '^\\(6\\.[23]\\|10\\)'; then\n\t\t\t\t\tfake_distro=\"Windows - Modern\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${distro}\" == \"Unknown\" ]]; then\n\t\t\t\tif [ -f /etc/os-release ]; then\n\t\t\t\t\tos_release=\"/etc/os-release\";\n\t\t\t\telif [ -f /usr/lib/os-release ]; then\n\t\t\t\t\tos_release=\"/usr/lib/os-release\";\n\t\t\t\tfi\n\t\t\t\tif [[ -n ${os_release} ]]; then\n\t\t\t\t\tdistrib_id=$(<${os_release});\n\t\t\t\t\tfor l in $distrib_id; do\n\t\t\t\t\t\tif [[ ${l} =~ ^ID= ]]; then\n\t\t\t\t\t\t\tdistrib_id=${l//*=}\n\t\t\t\t\t\t\tdistrib_id=${distrib_id//\\\"/}\n\t\t\t\t\t\t\tbreak 1\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\t\tif [[ -n ${distrib_id} ]]; then\n\t\t\t\t\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\t\t\t\t\tdistrib_id=$(for i in ${distrib_id}; do echo -n \"${i^} \"; done)\n\t\t\t\t\t\t\tdistro=${distrib_id% }\n\t\t\t\t\t\t\tunset distrib_id\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdistrib_id=$(for i in ${distrib_id}; do FIRST_LETTER=$(echo -n \"${i:0:1}\" | tr \"[:lower:]\" \"[:upper:]\"); echo -n \"${FIRST_LETTER}${i:1} \"; done)\n\t\t\t\t\t\t\tdistro=${distrib_id% }\n\t\t\t\t\t\t\tunset distrib_id\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\n\t\t\t\t\t# Hotfixes\n                    [[ \"${distro}\" == \"Opensuse-tumbleweed\" ]] && distro=\"openSUSE\" && distro_more=\"Tumbleweed\"\n\t\t\t\t\t[[ \"${distro}\" == \"Opensuse-leap\" ]] && distro=\"openSUSE\"\n\t\t\t\t\t[[ \"${distro}\" == \"void\" ]] && distro=\"Void Linux\"\n\t\t\t\t\t[[ \"${distro}\" == \"evolveos\" ]] && distro=\"Evolve OS\"\n\t\t\t\t\t[[ \"${distro}\" == \"Sulin\" ]] && distro=\"Sulin\"\n\t\t\t\t\t[[ \"${distro}\" == \"antergos\" ]] && distro=\"Antergos\"\n\t\t\t\t\t[[ \"${distro}\" == \"logos\" ]] && distro=\"Logos\"\n\t\t\t\t\t[[ \"${distro}\" == \"alter\" || \"${distro}\" == \"Alter\" ]] && distro=\"Alter Linux\"\n\t\t\t\t\t[[ \"${distro}\" == \"Arch\" || \"${distro}\" == \"Archarm\" || \"${distro}\" == \"archarm\" ]] && distro=\"Arch Linux\"\n\t\t\t\t\t[[ \"${distro}\" == \"elementary\" ]] && distro=\"elementary OS\"\n\t\t\t\t\t[[ \"${distro}\" == \"Fedora\" && -d /etc/qubes-rpc ]] && distro=\"qubes\" # Inner VM\n\t\t\t\t\t[[ \"${distro}\" == \"Ol\" || \"${distro}\" == \"ol\" ]] && distro=\"Oracle Linux\"\n\t\t\t\t\tif [[ \"${distro}\" == \"Oracle Linux\" && -f /etc/oracle-release ]]; then\n\t\t\t\t\t\tdistro_more=\"$(sed 's/Oracle Linux //' /etc/oracle-release)\"\n\t\t\t\t\tfi\n\t\t\t\t\t# Upstream problem, SL and so EL is using rhel ID in os-release\n\t\t\t\t\tif [[ \"${distro}\" == \"rhel\" ]] || [[ \"${distro}\" == \"Rhel\" ]]; then\n\t\t\t\t\t\tdistro=\"Red Hat Enterprise Linux\"\n\t\t\t\t\t\tif grep -q 'Scientific' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"Scientific Linux\"\n\t\t\t\t\t\telif grep -q 'EuroLinux' /etc/os-release; then\n\t\t\t\t\t\t\tdistro=\"EuroLinux\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\n\t\t\t\t\t[[ \"${distro}\" == \"Neon\" ]] && distro=\"KDE neon\"\n\t\t\t\t\t[[ \"${distro}\" == \"SLED\" || \"${distro}\" == \"sled\" || \"${distro}\" == \"SLES\" || \"${distro}\" == \"sles\" ]] && distro=\"SUSE Linux Enterprise\"\n\t\t\t\t\tif [[ \"${distro}\" == \"SUSE Linux Enterprise\" && -f /etc/os-release ]]; then\n\t\t\t\t\t\tdistro_more=\"$(\"${AWK}\" -F'=' '/^VERSION_ID=/ {print $2}' /etc/os-release | tr -d '\"')\"\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"${distro}\" == \"Debian\" && -f /usr/bin/pveversion ]]; then\n\t\t\t\t\t\tdistro=\"Proxmox VE\"\n\t\t\t\t\t\tdistro_codename=\"n/a\"\n\t\t\t\t\t\tdistro_release=\"$(/usr/bin/pveversion | grep -oP 'pve-manager\\/\\K\\d+\\.\\d+')\"\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"${distro}\" == \"Almalinux\" && -f /etc/almalinux-release ]]; then\n\t\t\t\t\t\tdistro=\"AlmaLinux\"\n\t\t\t\t\t\tdistro_release=$(sed 's/AlmaLinux release //' /etc/almalinux-release | cut -f1 -d' ')\n\t\t\t\t\t\tdistro_codename=$(cut -f2 -d'(' /etc/almalinux-release | cut -f1 -d')')\n\t\t\t\t\t\tdistro_more=$(cut -d' ' -f3,4,5,6 /etc/almalinux-release)\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ \"${distro}\" == \"Unknown\" && \"${OSTYPE}\" =~ \"linux\" && -f /etc/lsb-release ]]; then\n\t\t\t\tLSB_RELEASE=$(</etc/lsb-release)\n\t\t\t\tdistro=$(echo \"${LSB_RELEASE}\" | \"${AWK}\" 'BEGIN {\n\t\t\t\t\tdistro = \"Unknown\"\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tif ($0 ~ /[Uu][Bb][Uu][Nn][Tt][Uu]/) {\n\t\t\t\t\t\tdistro = \"Ubuntu\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($0 ~ /[Mm][Ii][Nn][Tt]/ && $0 ~ /[Dd][Ee][Bb][Ii][Aa][Nn]/) {\n\t\t\t\t\t\tdistro = \"LMDE\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($0 ~ /[Mm][Ii][Nn][Tt]/) {\n\t\t\t\t\t\tdistro = \"Mint\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t} END {\n\t\t\t\t\tprint distro\n\t\t\t\t}')\n\t\t\tfi\n\n\t\t\tif [[ \"${distro}\" == \"Unknown\" ]] && [[ \"${OSTYPE}\" =~ \"linux\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\t\tfor di in arch chakra crunchbang-lsb evolveos exherbo fedora \\\n\t\t\t\t\t\t\tfrugalware fux gentoo kogaion mageia obarun oracle \\\n\t\t\t\t\t\t\tpardus pclinuxos redhat redstar rosa SuSe; do\n\t\t\t\t\tif [ -f /etc/$di-release ]; then\n\t\t\t\t\t\tdistro=$di\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\t\tif [[ \"${distro}\" == \"crunchbang-lsb\" ]]; then\n\t\t\t\t\tdistro=\"Crunchbang\"\n\t\t\t\telif [[ \"${distro}\" == \"gentoo\" ]]; then\n\t\t\t\t\tgrep -q -i 'Funtoo' /etc/gentoo-release && distro=\"Funtoo\"\n\t\t\t\telif [[ \"${distro}\" == \"mandrake\" ]] || [[ \"${distro}\" == \"mandriva\" ]]; then\n\t\t\t\t\tgrep -q -i 'PCLinuxOS' /etc/${distro}-release && distro=\"PCLinuxOS\"\n\t\t\t\telif [[ \"${distro}\" == \"fedora\" ]]; then\n\t\t\t\t\tgrep -q -i 'Korora' /etc/fedora-release && distro=\"Korora\"\n\t\t\t\t\tgrep -q -i 'BLAG' /etc/fedora-release && distro=\"BLAG\" && distro_more=\"$(head -n1 /etc/fedora-release)\"\n\t\t\t\telif [[ \"${distro}\" == \"oracle\" ]]; then\n\t\t\t\t\tdistro_more=\"$(sed 's/Oracle Linux //' /etc/oracle-release)\"\n\t\t\t\telif [[ \"${distro}\" == \"SuSe\" ]]; then\n\t\t\t\t\tdistro=\"openSUSE\"\n\t\t\t\t\tif [ -f /etc/os-release ]; then\n\t\t\t\t\t\tif grep -q -i 'SUSE Linux Enterprise' /etc/os-release ; then\n\t\t\t\t\t\t\tdistro=\"SUSE Linux Enterprise\"\n\t\t\t\t\t\t\tdistro_more=$(\"${AWK}\" -F'=' '/^VERSION_ID=/ {print $2}' /etc/os-release | tr -d '\"')\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"${distro_more}\" =~ \"Tumbleweed\" ]]; then\n\t\t\t\t\t\tdistro_more=\"Tumbleweed\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ \"${distro}\" == \"redstar\" ]]; then\n\t\t\t\t\tdistro_more=$(grep -o '[0-9.]' /etc/redstar-release | tr -d '\\n')\n\t\t\t\telif [[ \"${distro}\" == \"redhat\" ]]; then\n\t\t\t\t\tgrep -q -i 'CentOS' /etc/redhat-release && distro=\"CentOS\"\n\t\t\t\t\tgrep -q -i 'Rocky Linux' /etc/redhat-release && distro=\"Rocky Linux\"\n\t\t\t\t\tgrep -q -i 'Almalinux' /etc/redhat-release && distro=\"AlmaLinux\"\n\t\t\t\t\tgrep -q -i 'Scientific' /etc/redhat-release && distro=\"Scientific Linux\"\n\t\t\t\t\tgrep -q -i 'EuroLinux' /etc/redhat-release && distro=\"EuroLinux\"\n\t\t\t\t\tgrep -q -i 'PCLinuxOS' /etc/redhat-release && distro=\"PCLinuxOS\"\n\t\t\t\t\tif [ \"x$(od -t x1 /etc/redhat-release | sed -e 's/^\\w*\\ *//' | tr '\\n' ' ' | grep 'eb b6 89 ec 9d 80 eb b3 84 ')\" != \"x\" ]; then\n\t\t\t\t\t\tdistro=\"Red Star OS\"\n\t\t\t\t\t\tdistro_more=$(grep -o '[0-9.]' /etc/redhat-release | tr -d '\\n')\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ \"${distro}\" == \"Unknown\" ]]; then\n\t\t\t\tif [[ \"${OSTYPE}\" =~ \"linux\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\t\t\tif [ -f /etc/debian_version ]; then\n\t\t\t\t\t\tif [ -f /etc/issue ]; then\n\t\t\t\t\t\t\tif grep -q -i 'gNewSense' /etc/issue ; then\n\t\t\t\t\t\t\t\tdistro=\"gNewSense\"\n\t\t\t\t\t\t\telif grep -q -i 'KDE neon' /etc/issue ; then\n\t\t\t\t\t\t\t\tdistro=\"KDE neon\"\n\t\t\t\t\t\t\t\tdistro_more=\"$(cut -d ' ' -f3 /etc/issue)\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdistro=\"Debian\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif grep -q -i 'Kali' /etc/debian_version ; then\n\t\t\t\t\t\t\tdistro=\"Kali Linux\"\n\t\t\t\t\t\tfi\n\t\t\t\t\telif [ -f /etc/NIXOS ]; then distro=\"NixOS\"\n\t\t\t\t\telif [ -f /etc/dragora-version ]; then\n\t\t\t\t\t\tdistro=\"Dragora\"\n\t\t\t\t\t\tdistro_more=\"$(cut -d, -f1 /etc/dragora-version)\"\n\t\t\t\t\telif [ -f /etc/slackware-version ]; then distro=\"Slackware\"\n\t\t\t\t\telif [ -f /usr/share/doc/tc/release.txt ]; then\n\t\t\t\t\t\tdistro=\"TinyCore\"\n\t\t\t\t\t\tdistro_more=\"$(cat /usr/share/doc/tc/release.txt)\"\n\t\t\t\t\telif [ -f /etc/sabayon-edition ]; then distro=\"Sabayon\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tif [[ -x /usr/bin/sw_vers ]] && /usr/bin/sw_vers | grep -i 'Mac OS X' >/dev/null; then\n\t\t\t\t\t\tdistro=\"Mac OS X\"\n\t\t\t\t\telif [[ -x /usr/bin/sw_vers ]] && /usr/bin/sw_vers | grep -i 'macOS' >/dev/null; then\n\t\t\t\t\t\tdistro=\"macOS\"\n\t\t\t\t\telif [[ -f /var/run/dmesg.boot ]]; then\n\t\t\t\t\t\tdistro=$(\"${AWK}\" 'BEGIN {\n\t\t\t\t\t\t\tdistro = \"Unknown\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ($0 ~ /DragonFly/) {\n\t\t\t\t\t\t\t\tdistro = \"DragonFlyBSD\"\n\t\t\t\t\t\t\t\texit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($0 ~ /FreeBSD/) {\n\t\t\t\t\t\t\t\tdistro = \"FreeBSD\"\n\t\t\t\t\t\t\t\texit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($0 ~ /NetBSD/) {\n\t\t\t\t\t\t\t\tdistro = \"NetBSD\"\n\t\t\t\t\t\t\t\texit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ($0 ~ /OpenBSD/) {\n\t\t\t\t\t\t\t\tdistro = \"OpenBSD\"\n\t\t\t\t\t\t\t\texit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} END {\n\t\t\t\t\t\t\tprint distro\n\t\t\t\t\t\t}' /var/run/dmesg.boot)\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ \"${distro}\" == \"Unknown\" ]] && [[ \"${OSTYPE}\" =~ \"linux\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\t\tif [[ -f /etc/issue ]]; then\n\t\t\t\t\tdistro=$(\"${AWK}\" 'BEGIN {\n\t\t\t\t\t\tdistro = \"Unknown\"\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tif ($0 ~ /\"Hyperbola GNU\\/Linux-libre\"/) {\n\t\t\t\t\t\t\tdistro = \"Hyperbola GNU/Linux-libre\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($0 ~ /\"LinuxDeepin\"/) {\n\t\t\t\t\t\t\tdistro = \"LinuxDeepin\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($0 ~ /\"Obarun\"/) {\n\t\t\t\t\t\t\tdistro = \"Obarun\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($0 ~ /\"Parabola GNU\\/Linux-libre\"/) {\n\t\t\t\t\t\t\tdistro = \"Parabola GNU/Linux-libre\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($0 ~ /\"Solus\"/) {\n\t\t\t\t\t\t\tdistro = \"Solus\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ($0 ~ /\"ALDOS\"/) {\n\t\t\t\t\t\t\tdistro = \"ALDOS\"\n\t\t\t\t\t\t\texit\n\t\t\t\t\t\t}\n\t\t\t\t\t} END {\n\t\t\t\t\t\tprint distro\n\t\t\t\t\t}' /etc/issue)\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ \"${distro}\" == \"Unknown\" ]] && [[ \"${OSTYPE}\" =~ \"linux\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\t\tif [[ -f /etc/system-release ]]; then\n\t\t\t\t\tif grep -q -i 'Scientific Linux' /etc/system-release; then\n\t\t\t\t\t\tdistro=\"Scientific Linux\"\n\t\t\t\t\telif grep -q -i 'Oracle Linux' /etc/system-release; then\n\t\t\t\t\t\tdistro=\"Oracle Linux\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ -f /etc/lsb-release ]]; then\n\t\t\t\t\tif grep -q -i 'CHROMEOS_RELEASE_NAME' /etc/lsb-release; then\n\t\t\t\t\t\tdistro=\"$(\"${AWK}\" -F'=' '/^CHROMEOS_RELEASE_NAME=/ {print $2}' /etc/lsb-release)\"\n\t\t\t\t\t\tdistro_more=\"$(\"${AWK}\" -F'=' '/^CHROMEOS_RELEASE_VERSION=/ {print $2}' /etc/lsb-release)\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [[ -n ${distro_more} ]]; then\n\t\tdistro_more=\"${distro} ${distro_more}\"\n\tfi\n\n\tif [[ \"${distro}\" != \"Haiku\" ]]; then\n\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\tif [[ ${BASH_VERSINFO[0]} -eq 4 && ${BASH_VERSINFO[1]} -gt 1 ]] || [[ ${BASH_VERSINFO[0]} -gt 4 ]]; then\n\t\t\t\tdistro=${distro,,}\n\t\t\telse\n\t\t\t\tdistro=\"$(tr '[:upper:]' '[:lower:]' <<< \"${distro}\")\"\n\t\t\tfi\n\t\telse\n\t\t\tdistro=\"$(tr '[:upper:]' '[:lower:]' <<< \"${distro}\")\"\n\t\tfi\n\tfi\n\n\tcase $distro in\n\t\taldos) distro=\"ALDOS\";;\n\t\talpine) distro=\"Alpine Linux\" ;;\n\t\talmalinux) distro=\"AlmaLinux\" ;;\n\t\talter*linux|alter) distro=\"Alter Linux\" ;;\n\t\tamzn|amazon|amazon*linux) distro=\"Amazon Linux\" ;;\n\t\tantergos) distro=\"Antergos\" ;;\n\t\tarch*linux*old) distro=\"Arch Linux - Old\" ;;\n\t\tarch|arch*linux) distro=\"Arch Linux\" ;;\n\t\tarch32) distro=\"Arch Linux 32\" ;;\n\t\tarcolinux|arcolinux*) distro=\"ArcoLinux\" ;;\n\t\tartix|artix*linux) distro=\"Artix Linux\" ;;\n\t\tblackpantheros|black*panther*) distro=\"blackPanther OS\" ;;\n\t\tblag) distro=\"BLAG\" ;;\n\t\tbunsenlabs) distro=\"BunsenLabs\" ;;\n\t\tcentos) distro=\"CentOS\" ;;\n\t\tcentos*stream) distro=\"CentOS Stream\" ;;\n\t\tchakra) distro=\"Chakra\" ;;\n\t\tchapeau) distro=\"Chapeau\" ;;\n\t\tchrome*|chromium*) distro=\"Chrome OS\" ;;\n\t\tcrunchbang) distro=\"CrunchBang\" ;;\n\t\tcrux) distro=\"CRUX\" ;;\n\t\tcygwin) distro=\"Cygwin\" ;;\n\t\tdebian) distro=\"Debian\" ;;\n\t\tdevuan) distro=\"Devuan\" ;;\n\t\tdeepin) distro=\"Deepin\" ;;\n\t\tuos) distro=\"Uos\" ;;\n\t\tdesaos) distro=\"DesaOS\" ;;\n\t\tdragonflybsd) distro=\"DragonFlyBSD\" ;;\n\t\tdragora) distro=\"Dragora\" ;;\n\t\tdrauger*) distro=\"DraugerOS\" ;;\n\t\telementary|'elementary os') distro=\"elementary OS\";;\n\t\teurolinux) distro=\"EuroLinux\" ;;\n\t\tevolveos) distro=\"Evolve OS\" ;;\n\t\tsulin) distro=\"Sulin\" ;;\n\t\texherbo|exherbo*linux) distro=\"Exherbo\" ;;\n\t\tfedora) distro=\"Fedora\" ;;\n\t\tfedora*old) distro=\"Fedora - Old\" ;;\n\t\tfreebsd) distro=\"FreeBSD\" ;;\n\t\tfreebsd*old) distro=\"FreeBSD - Old\" ;;\n\t\tfrugalware) distro=\"Frugalware\" ;;\n\t\tfuduntu) distro=\"Fuduntu\" ;;\n\t\tfuntoo) distro=\"Funtoo\" ;;\n\t\tfux) distro=\"Fux\" ;;\n\t\tgentoo) distro=\"Gentoo\" ;;\n\t\tgnewsense) distro=\"gNewSense\" ;;\n\t\tguix*system) distro=\"Guix System\" ;;\n\t\thaiku) distro=\"Haiku\" ;;\n\t\thyperbolagnu|hyperbolagnu/linux-libre|'hyperbola gnu/linux-libre'|hyperbola) distro=\"Hyperbola GNU/Linux-libre\" ;;\n\t\tjanuslinux) distro=\"januslinux\" ;;\n\t\tkali*linux) distro=\"Kali Linux\" ;;\n\t\tkaos) distro=\"KaOS\";;\n\t\tkde*neon|neon) distro=\"KDE neon\" ;;\n\t\tkogaion) distro=\"Kogaion\" ;;\n\t\tkorora) distro=\"Korora\" ;;\n\t\tlinuxdeepin) distro=\"LinuxDeepin\" ;;\n\t\tlmde) distro=\"LMDE\" ;;\n\t\tlogos) distro=\"Logos\" ;;\n\t\tlunar|lunar*linux) distro=\"Lunar Linux\";;\n\t\tmac*os*x|os*x) distro=\"Mac OS X\" ;;\n                macos) distro=\"macOS\" ;;\n\t\tmanjaro) distro=\"Manjaro\" ;;\n\t\tmageia) distro=\"Mageia\" ;;\n\t\tmandrake) distro=\"Mandrake\" ;;\n\t\tmandriva) distro=\"Mandriva\" ;;\n\t\tmer) distro=\"Mer\" ;;\n\t\tmint|linux*mint) distro=\"Mint\" ;;\n\t\tmsys|msys2) distro=\"Msys\" ;;\n\t\tnetbsd) distro=\"NetBSD\" ;;\n\t\tnetrunner) distro=\"Netrunner\" ;;\n\t\tnix|nix*os) distro=\"NixOS\" ;;\n\t\tobarun) distro=\"Obarun\" ;;\n\t\tobrevenge) distro=\"OBRevenge\" ;;\n\t\tol|oracle*linux) distro=\"Oracle Linux\" ;;\n\t\topenbsd) distro=\"OpenBSD\" ;;\n\t\topensuse) distro=\"openSUSE\" ;;\n\t\tos*elbrus) distro=\"OS Elbrus\" ;;\n\t\tparabolagnu|parabolagnu/linux-libre|'parabola gnu/linux-libre'|parabola) distro=\"Parabola GNU/Linux-libre\" ;;\n\t\tpardus) distro=\"Pardus\" ;;\n\t\tparrot|parrot*security) distro=\"Parrot Security\" ;;\n\t\tpclinuxos|pclos) distro=\"PCLinuxOS\" ;;\n\t\tpeppermint) distro=\"Peppermint\" ;;\n\t\tproxmox|proxmox*ve) distro=\"Proxmox VE\" ;;\n\t\tpureos) distro=\"PureOS\" ;;\n\t\tquirinux) distro=\"Quirinux\" ;;\n\t\tqubes) distro=\"Qubes OS\" ;;\n\t\traspbian) distro=\"Raspbian\" ;;\n\t\tred*hat*|rhel) distro=\"Red Hat Enterprise Linux\" ;;\n\t\trosa) distro=\"ROSA\" ;;\n\t\tred*star|red*star*os) distro=\"Red Star OS\" ;;\n\t\trocky) distro=\"Rocky Linux\" ;;\n\t\tsabayon) distro=\"Sabayon\" ;;\n\t\tsailfish|sailfish*os) distro=\"SailfishOS\" ;;\n\t\tscientific*) distro=\"Scientific Linux\" ;;\n\t\tsiduction) distro=\"Siduction\" ;;\n\t\tslackware) distro=\"Slackware\" ;;\n\t\tsmgl|source*mage|source*mage*gnu*linux) distro=\"Source Mage GNU/Linux\" ;;\n\t\tsolus) distro=\"Solus\" ;;\n\t\tsparky|sparky*linux) distro=\"SparkyLinux\" ;;\n\t\tsteam|steam*os) distro=\"SteamOS\" ;;\n\t\tsuse*linux*enterprise) distro=\"SUSE Linux Enterprise\" ;;\n\t\tswagarch) distro=\"SwagArch\" ;;\n        \ttearch*) distro=\"TeArch\" ;;\n\t\ttinycore|tinycore*linux) distro=\"TinyCore\" ;;\n\t\ttrisquel) distro=\"Trisquel\";;\n\t\tgrombyangos) distro=\"GrombyangOS\" ;;\n\t\tubuntu) distro=\"Ubuntu\";;\n\t\tviperr) distro=\"Viperr\" ;;\n\t\tvoid*linux) distro=\"Void Linux\" ;;\n\t\tzorin*) distro=\"Zorin OS\" ;;\n\t\tendeavour*) distro=\"EndeavourOS\" ;;\n\tesac\n\tif grep -q -i 'Microsoft' /proc/version 2>/dev/null || \\\n\t\tgrep -q -i 'Microsoft' /proc/sys/kernel/osrelease 2>/dev/null\n\tthen\n\t\twsl=\"(on the Windows Subsystem for Linux)\"\n\tfi\n\tverboseOut \"Finding distro...found as '${distro} ${distro_release}'\"\n}\n# Distro Detection - End\n\n# Host and User detection - Begin\ndetecthost () {\n\tmyUser=${USER}\n\tmyHost=${HOSTNAME}\n\tif [[ -z \"$USER\" ]]; then\n\t\tmyUser=$(whoami)\n\tfi\n\tif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" ]]; then\n\t\tmyHost=${myHost/.local}\n\tfi\n\tverboseOut \"Finding hostname and user...found as '${myUser}@${myHost}'\"\n}\n\n# Find Number of Running Processes\n# processnum=\"$(( $( ps aux | wc -l ) - 1 ))\"\n\n# Kernel Version Detection - Begin\ndetectkernel () {\n\tif [[ \"$distro\" == \"OpenBSD\" ]]; then\n\t\tkernel=$(uname -a | cut -f 3- -d ' ')\n\telse\n\t\t# compatibility for older versions of OS X:\n\t\tkernel=$(uname -m && uname -sr)\n\t\tkernel=${kernel//$'\\n'/ }\n\t\t#kernel=( $(uname -srm) )\n\t\t#kernel=\"${kernel[${#kernel[@]}-1]} ${kernel[@]:0:${#kernel[@]}-1}\"\n\t\tverboseOut \"Finding kernel version...found as '${kernel}'\"\n\tfi\n}\n# Kernel Version Detection - End\n\n\n# Uptime Detection - Begin\ndetectuptime () {\n\tunset uptime\n\tif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" || \"${distro}\" == \"FreeBSD\" || \"${distro}\" == \"DragonFlyBSD\" ]]; then\n\t\tboot=$(sysctl -n kern.boottime | cut -d \"=\" -f 2 | cut -d \",\" -f 1)\n\t\tnow=$(date +%s)\n\t\tuptime=$((now-boot))\n\telif [[ \"${distro}\" == \"OpenBSD\" ]]; then\n\t\tboot=$(sysctl -n kern.boottime)\n\t\tnow=$(date +%s)\n\t\tuptime=$((now - boot))\n\telif [[ \"${distro}\" == \"Haiku\" ]]; then\n\t\tuptime=$(uptime | \"${AWK}\" -F', up ' '{gsub(/ *hours?,/, \"h\"); gsub(/ *minutes?/, \"m\"); print $2;}')\n\telse\n\t\tif [[ -f /proc/uptime ]]; then\n\t\t\tuptime=$(</proc/uptime)\n\t\t\tuptime=${uptime//.*}\n\t\tfi\n\tfi\n\n\tif [[ -n ${uptime} ]] && [[ \"${distro}\" != \"Haiku\" ]]; then\n\t\tmins=$((uptime/60%60))\n\t\thours=$((uptime/3600%24))\n\t\tdays=$((uptime/86400))\n\t\tuptime=\"${mins}m\"\n\t\tif [ \"${hours}\" -ne \"0\" ]; then\n\t\t\tuptime=\"${hours}h ${uptime}\"\n\t\tfi\n\t\tif [ \"${days}\" -ne \"0\" ]; then\n\t\t\tuptime=\"${days}d ${uptime}\"\n\t\tfi\n\telse\n\t\tif [[ \"$distro\" =~ \"NetBSD\" ]]; then\n\t\t\tuptime=$(\"${AWK}\" -F. '{print $1}' /proc/uptime)\n\t\telif [[ \"$distro\" =~ \"BSD\" ]]; then\n\t\t\tuptime=$(uptime | \"${AWK}\" '{$1=$2=$(NF-6)=$(NF-5)=$(NF-4)=$(NF-3)=$(NF-2)=$(NF-1)=$NF=\"\"; sub(\" days\",\"d\");sub(\",\",\"\");sub(\":\",\"h \");sub(\",\",\"m\"); print}')\n\t\tfi\n\tfi\n\tverboseOut \"Finding current uptime...found as '${uptime}'\"\n}\n# Uptime Detection - End\n\n\n# Package Count - Begin\ndetectpkgs () {\n\tpkgs=\"Unknown\"\n\tlocal offset=0\n\tcase \"${distro}\" in\n\t\t'Alpine Linux') pkgs=$(apk info | wc -l) ;;\n\t\t'Arch Linux'|'Arch Linux 32'|'ArcoLinux'|'Parabola GNU/Linux-libre'|'Hyperbola GNU/Linux-libre'|'Chakra'|'Manjaro'|'Antergos'| \\\n\t\t'Netrunner'|'KaOS'|'Obarun'|'SwagArch'|'OBRevenge'|'Artix Linux'|'EndeavourOS'|'Alter Linux'|'TeArch')\n\t\t\tpkgs=$(pacman -Qq | wc -l) ;;\n\t\t'Chrome OS')\n\t\t\tif [ -d \"/usr/local/lib/crew/packages\" ]; then\n\t\t\t\tpkgs=$(ls -l /usr/local/etc/crew/meta/*.filelist | wc -l)\n\t\t\telse\n\t\t\t\tpkgs=$(ls -d /var/db/pkg/*/* | wc -l)\n\t\t\tfi\n\t\t;;\n\t\t'Dragora')\n\t\t\tpkgs=$(ls -1 /var/db/pkg | wc -l) ;;\n\t\t'Frugalware')\n\t\t\tpkgs=$(pacman-g2 -Q | wc -l) ;;\n\t\t'Debian'|'Ubuntu'|'Mint'|'Fuduntu'|'KDE neon'|'Devuan'|'OS Elbrus'|'Raspbian'|'Quirinux'|'LMDE'|'CrunchBang'|'Peppermint'| \\\n\t\t'LinuxDeepin'|'Deepin'|'Kali Linux'|'Trisquel'|'elementary OS'|'gNewSense'|'BunsenLabs'|'SteamOS'|'Parrot Security'| \\\n\t\t'GrombyangOS'|'DesaOS'|'Zorin OS'|'Proxmox VE'|'PureOS'|'DraugerOS')\n\t\t\tpkgs=$(dpkg -l | grep -c '^i') ;;\n\t\t'Slackware')\n\t\t\tpkgs=$(ls -1 /var/log/packages | wc -l) ;;\n\t\t'Gentoo'|'Sabayon'|'Funtoo'|'Kogaion')\n\t\t\tpkgs=$(ls -d /var/db/pkg/*/* | wc -l) ;;\n\t\t'NixOS')\n\t\t\tpkgs=$(nix-store --query --requisites /run/current-system | wc -l) ;;\n\t\t'Guix System')\n\t\t\tpkgs=$(guix package --list-installed | wc -l) ;;\n\t\t'ALDOS'|'Fedora'|'Fux'|'Korora'|'BLAG'|'Chapeau'|'openSUSE'|'SUSE Linux Enterprise'|'Red Hat Enterprise Linux'| \\\n\t\t'ROSA'|'Oracle Linux'|'Scientific Linux'|'EuroLinux'|'CentOS'|'CentOS Stream'|'Mandriva'|'Mandrake'|'Mageia'|'Mer'|'Rocky Linux'|'SailfishOS'|'PCLinuxOS'|'Viperr'|'Qubes OS'|'AlmaLinux'| \\\n\t\t'Red Star OS'|'blackPanther OS'|'Amazon Linux')\n\t\t\tpkgs=$(rpm -qa | wc -l) ;;\n\t\t'Void Linux')\n\t\t\tpkgs=$(xbps-query -l | wc -l) ;;\n\t\t'Evolve OS')\n\t\t\tpkgs=$(pisi list-installed | wc -l) ;;\n\t\t'Sulin')\n\t\t    #alternative method : (inary li | wc -l)\n\t\t\tpkgs=$(ls /var/lib/inary/package/ | wc -l) ;;\n\t\t'Solus')\n\t\t\tpkgs=$(eopkg list-installed | wc -l) ;;\n\t\t'Source Mage GNU/Linux')\n\t\t\tpkgs=$(gaze installed | wc -l) ;;\n\t\t'CRUX'|'januslinux')\n\t\t\tpkgs=$(pkginfo -i | wc -l) ;;\n\t\t'Lunar Linux')\n\t\t\tpkgs=$(lvu installed | wc -l) ;;\n\t\t'TinyCore')\n\t\t\tpkgs=$(tce-status -i | wc -l) ;;\n\t\t'Exherbo')\n\t\t\txpkgs=$(ls -d -1 /var/db/paludis/repositories/cross-installed/*/data/* | wc -l)\n\t\t\tpkgs=$(ls -d -1 /var/db/paludis/repositories/installed/data/* | wc -l)\n\t\t\tpkgs=$((pkgs + xpkgs))\n\t\t;;\n\t\t'Mac OS X'|'macOS')\n\t\t\toffset=1\n\t\t\tif [ -d \"/usr/local/bin\" ]; then\n\t\t\t\tloc_pkgs=$(ls -l /usr/local/bin/ | grep -cv \"\\(../Cellar/\\|brew\\)\")\n\t\t\t\tpkgs=$((loc_pkgs - offset));\n\t\t\tfi\n\t\t\tif type -p port >/dev/null 2>&1; then\n\t\t\t\tport_pkgs=$(port installed 2>/dev/null | wc -l)\n\t\t\t\tpkgs=$((pkgs + (port_pkgs - offset)))\n\t\t\tfi\n\t\t\tif type -p brew >/dev/null 2>&1; then\n\t\t\t\tif [ -d \"/opt/homebrew/Cellar\" ]; then\n\t\t\t\t\tbrew_pkgs=$(ls -1 /opt/homebrew/Cellar/ | wc -l)\n\t\t\t\telse\n\t\t\t\t\tbrew_pkgs=$(ls -1 /usr/local/Cellar/ | wc -l)\n\t\t\t\tfi\n\t\t\t\tpkgs=$((pkgs + brew_pkgs))\n\t\t\tfi\n\t\t\tif type -p pkgin >/dev/null 2>&1; then\n\t\t\t\tpkgsrc_pkgs=$(pkgin list 2>/dev/null | wc -l)\n\t\t\t\tpkgs=$((pkgs + pkgsrc_pkgs))\n\t\t\tfi\n\t\t;;\n\t\t'DragonFlyBSD')\n\t\t\tif TMPDIR=/dev/null ASSUME_ALWAYS_YES=1 PACKAGESITE=file:///nonexistent pkg info pkg >/dev/null 2>&1; then\n\t\t\t\tpkgs=$(pkg info | grep -c .)\n\t\t\telse\n\t\t\t\tpkgs=$(pkg_info | grep -c .)\n\t\t\tfi\n\t\t;;\n\t\t'OpenBSD'|'NetBSD')\n\t\t\tpkgs=$(pkg_info | grep -c .)\n\t\t;;\n\t\t'FreeBSD')\n\t\t\tpkgs=$(pkg info | grep -c .)\n\t\t;;\n\t\t'Cygwin')\n\t\t\toffset=2\n\t\t\tpkgs=$(($(cygcheck -cd | wc -l) - offset))\n\t\t\tif [ -d \"/cygdrive/c/ProgramData/chocolatey/lib\" ]; then\n\t\t\t\tchocopkgs=$(ls -1 /cygdrive/c/ProgramData/chocolatey/lib | wc -l)\n\t\t\t\tpkgs=$((pkgs + chocopkgs))\n\t\t\tfi\n\t\t;;\n\t\t'Msys')\n\t\t\tpkgs=$(pacman -Qq | wc -l)\n\t\t\tif [ -d \"/c/ProgramData/chocolatey/lib\" ]; then\n\t\t\t\tchocopkgs=$(ls -1 /c/ProgramData/chocolatey/lib | wc -l)\n\t\t\t\tpkgs=$((pkgs + chocopkgs))\n\t\t\tfi\n\t\t;;\n\t\t'Haiku')\n\t\t\thaikualpharelease=\"no\"\n\t\t\tif [ -d /boot/system/package-links ]; then\n\t\t\t\tpkgs=$(ls /boot/system/package-links | wc -l)\n\t\t\telif type -p installoptionalpackage >/dev/null 2>&1; then\n\t\t\t\thaikualpharelease=\"yes\"\n\t\t\t\tpkgs=$(installoptionalpackage -l | sed -n '3p' | wc -w)\n\t\t\tfi\n\t\t;;\n\tesac\n\tif [[ \"${OSTYPE}\" =~ \"linux\" && -z \"${wsl}\" ]] && snap list >/dev/null 2>&1; then\n\t\toffset=1\n\t\tsnappkgs=$(($(snap list 2>/dev/null | wc -l) - offset))\n\t\tif [ $snappkgs -lt 0 ]; then\n\t\t\tsnappkgs=0\n\t\tfi\n\t\tpkgs=$((pkgs + snappkgs))\n\tfi\n\tverboseOut \"Finding current package count...found as '$pkgs'\"\n}\n\n\n\n\n# CPU Detection - Begin\ndetectcpu () {\n\tlocal REGEXP=\"-r\"\n\tif [[ \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]]; then\n\t\tcpu=$(machine)\n\t\tif [[ $cpu == \"ppc750\" ]]; then\n\t\t\tcpu=\"IBM PowerPC G3\"\n\t\telif [[ $cpu == \"ppc7400\" || $cpu == \"ppc7450\" ]]; then\n\t\t\tcpu=\"IBM PowerPC G4\"\n\t\telif [[ $cpu == \"ppc970\" ]]; then\n\t\t\tcpu=\"IBM PowerPC G5\"\n\t\telse\n\t\t\tcpu=$(sysctl -n machdep.cpu.brand_string)\n\t\tfi\n\t\tREGEXP=\"-E\"\n\telif [ \"$OSTYPE\" == \"gnu\" ]; then\n\t\t# no /proc/cpuinfo on GNU/Hurd\n\t\tif uname -m | grep -q 'i.86'; then\n\t\t\tcpu=\"Unknown x86\"\n\t\telse\n\t\t\tcpu=\"Unknown\"\n\t\tfi\n\telif [ \"$distro\" == \"FreeBSD\" ]; then\n\t\tcpu=$(dmesg | \"${AWK}\" -F': ' '/^CPU/ {gsub(/ +/,\" \"); gsub(/\\([^\\(\\)]*\\)|CPU /,\"\", $2); print $2; exit}')\n\telif [ \"$distro\" == \"DragonFlyBSD\" ]; then\n\t\tcpu=$(sysctl -n hw.model)\n\telif [ \"$distro\" == \"OpenBSD\" ]; then\n\t\tcpu=$(sysctl -n hw.model | sed 's/@.*//')\n\telif [ \"$distro\" == \"Haiku\" ]; then\n\t\tcpu=$(sysinfo -cpu | \"${AWK}\" -F': ' '/^CPU #0/ {gsub(/ +/,\" \"); gsub(/\\([^\\(\\)]*\\)|CPU /,\"\", $2); print $2; exit}')\n\telse\n\t\tcpu=$(\"${AWK}\" -F':' '/^model name/ {split($2, A, \" @\"); print A[1]; exit}' /proc/cpuinfo)\n\t\tcpun=$(grep -c '^processor' /proc/cpuinfo)\n\t\tif [ -z \"$cpu\" ]; then\n\t\t\tcpu=$(\"${AWK}\" 'BEGIN{FS=\":\"} /Hardware/ { print $2; exit }' /proc/cpuinfo)\n\t\tfi\n\t\tif [ -z \"$cpu\" ]; then\n\t\t\tcpu=$(\"${AWK}\" 'BEGIN{FS=\":\"} /^cpu/ { gsub(/  +/,\" \",$2); print $2; exit}' /proc/cpuinfo | sed 's/, altivec supported//;s/^ //')\n\t\t\tif [[ $cpu =~ ^(PPC)*9.+ ]]; then\n\t\t\t\tmodel=\"IBM PowerPC G5 \"\n\t\t\telif [[ $cpu =~ 740/750 ]]; then\n\t\t\t\tmodel=\"IBM PowerPC G3 \"\n\t\t\telif [[ $cpu =~ ^74.+ ]]; then\n\t\t\t\tmodel=\"Motorola PowerPC G4 \"\n\t\t\telif [[ $cpu =~ ^POWER.* ]]; then\n\t\t\t\tmodel=\"IBM POWER \"\n\t\t\telif grep -q -i 'BCM2708' /proc/cpuinfo ; then\n\t\t\t\tmodel=\"Broadcom BCM2835 ARM1176JZF-S\"\n\t\t\telse\n\t\t\t\tarch=$(uname -m)\n\t\t\t\tif [[ \"$arch\" == \"s390x\" || \"$arch\" == \"s390\" ]]; then\n\t\t\t\t\tcpu=\"\"\n\t\t\t\t\targs=$(grep 'machine' /proc/cpuinfo | sed 's/^.*://g; s/ //g; s/,/\\n/g' | grep '^machine=.*')\n\t\t\t\t\teval \"$args\"\n\t\t\t\t\tcase \"$machine\" in\n\t\t\t\t\t\t# information taken from https://github.com/SUSE/s390-tools/blob/master/cputype\n\t\t\t\t\t\t2064) model=\"IBM eServer zSeries 900\" ;;\n\t\t\t\t\t\t2066) model=\"IBM eServer zSeries 800\" ;;\n\t\t\t\t\t\t2084) model=\"IBM eServer zSeries 990\" ;;\n\t\t\t\t\t\t2086) model=\"IBM eServer zSeries 890\" ;;\n\t\t\t\t\t\t2094) model=\"IBM System z9 Enterprise Class\" ;;\n\t\t\t\t\t\t2096) model=\"IBM System z9 Business Class\" ;;\n\t\t\t\t\t\t2097) model=\"IBM System z10 Enterprise Class\" ;;\n\t\t\t\t\t\t2098) model=\"IBM System z10 Business Class\" ;;\n\t\t\t\t\t\t2817) model=\"IBM zEnterprise 196\" ;;\n\t\t\t\t\t\t2818) model=\"IBM zEnterprise 114\" ;;\n\t\t\t\t\t\t2827) model=\"IBM zEnterprise EC12\" ;;\n\t\t\t\t\t\t2828) model=\"IBM zEnterprise BC12\" ;;\n\t\t\t\t\t\t2964) model=\"IBM z13\" ;;\n\t\t\t\t\t\t   *) model=\"IBM S/390 machine type $machine\" ;;\n\t\t\t\t\tesac\n\t\t\t\telif [[ \"$arch\" == \"aarch64\" ]]; then\n\t\t\t\t\tcpu_vendor=$(lscpu | grep ^Vendor | sed 's/^.*://g; s/ //g; s/,/\\n/g')\n\t\t\t\t\tcpu=$(lscpu | grep ^Model\\ name: | sed 's/^.*://g; s/ //g; s/,/\\n/g')\n\t\t\t\t\tcpu=\"${cpu_vendor} ${cpu}\"\n\t\t\t\telse\n\t\t\t\t\tmodel=\"Unknown\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tcpu=\"${model}${cpu}\"\n\t\tfi\n\t\tloc=\"/sys/devices/system/cpu/cpu0/cpufreq\"\n\t\tbl=\"${loc}/bios_limit\"\n\t\tsmf=\"${loc}/scaling_max_freq\"\n\t\tif [ -f \"$bl\" ] && [ -r \"$bl\" ]; then\n\t\t\tcpu_mhz=$(\"${AWK}\" '{print $1/1000}' \"$bl\")\n\t\telif [ -f \"$smf\" ] && [ -r \"$smf\" ]; then\n\t\t\tcpu_mhz=$(\"${AWK}\" '{print $1/1000}' \"$smf\")\n\t\telse\n\t\t\tcpu_mhz=$(\"${AWK}\" -F':' '/cpu MHz/{ print int($2+.5) }' /proc/cpuinfo | head -n 1)\n\t\tfi\n\t\tif [ -n \"$cpu_mhz\" ]; then\n\t\t\tif [ \"${cpu_mhz%.*}\" -ge 1000 ]; then\n\t\t\t\tcpu_ghz=$(\"${AWK}\" '{print $1/1000}' <<< \"${cpu_mhz}\")\n\t\t\t\tcpufreq=\"${cpu_ghz}GHz\"\n\t\t\telse\n\t\t\t\tcpufreq=\"${cpu_mhz}MHz\"\n\t\t\tfi\n\t\tfi\n\tfi\n\tif [[ \"${cpun}\" -gt \"1\" ]]; then\n\t\tcpun=\"${cpun}x \"\n\telse\n\t\tcpun=\"\"\n\tfi\n\tif [ -z \"$cpufreq\" ]; then\n\t\tcpu=\"${cpun}${cpu}\"\n\telse\n\t\tcpu=\"$cpu @ ${cpun}${cpufreq}\"\n\tfi\n\tif [ -d '/sys/class/hwmon/' ]; then\n\t\tfor dir in /sys/class/hwmon/* ; do\n\t\t\thwmonfile=\"\"\n\t\t\t[ -e \"$dir/name\" ] && hwmonfile=$dir/name\n\t\t\t[ -e \"$dir/device/name\" ] && hwmonfile=$dir/device/name\n\t\t\t[ -n \"$hwmonfile\" ] && if grep -q 'coretemp' \"$hwmonfile\"; then\n\t\t\t\tthermal=\"$dir/temp1_input\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ -e \"$thermal\" ] && [ \"${thermal:+isSetToNonNull}\" = 'isSetToNonNull' ]; then\n\t\t\ttemperature=$(bc <<< \"scale=1; $(cat \"$thermal\")/1000\")\n\t\tfi\n\tfi\n\tif [ -n \"$temperature\" ]; then\n\t\tcpu=\"$cpu [${temperature}°C]\"\n\tfi\n\tcpu=$(sed $REGEXP 's/\\([tT][mM]\\)|\\([Rr]\\)|[pP]rocessor|CPU//g' <<< \"${cpu}\" | xargs)\n\tverboseOut \"Finding current CPU...found as '$cpu'\"\n}\n# CPU Detection - End\n\n\n# GPU Detection - Begin (EXPERIMENTAL!)\ndetectgpu () {\n\tif [[ \"${distro}\" == \"FreeBSD\" || \"${distro}\" == \"DragonFlyBSD\" ]]; then\n\t\tnvisettexist=$(which nvidia-settings)\n\t\tif [ -x \"$nvisettexist\" ]; then\n\t\t\tgpu=\"$(nvidia-settings -t -q gpus | grep \\( | sed 's/.*(\\(.*\\))/\\1/')\"\n\t\telse\n\t\t\tgpu_info=$(pciconf -lv 2> /dev/null | grep -B 4 VGA)\n\t\t\tgpu_info=$(grep -E 'device.*=.*' <<< \"${gpu_info}\")\n\t\t\tgpu=\"${gpu_info##*device*= }\"\n\t\t\tgpu=\"${gpu//\\'}\"\n\t\t\t# gpu=$(sed 's/.*device.*= //' <<< \"${gpu_info}\" | sed \"s/'//g\")\n\t\tfi\n\telif [[ \"${distro}\" == \"OpenBSD\" ]]; then\n\t\tgpu=$(glxinfo 2> /dev/null | \"${AWK}\" '/OpenGL renderer string/ { sub(/OpenGL renderer string: /,\"\"); print }')\n\telif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" ]]; then\n\t\tgpu=$(system_profiler SPDisplaysDataType | \"${AWK}\" -F': ' '/^ *Chipset Model:/ {print $2}' | \"${AWK}\" '{ printf \"%s / \", $0 }' | sed -e 's/\\/ $//g')\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\tgpu=$(wmic path Win32_VideoController get caption | sed -n '2p')\n\telif [[ \"${distro}\" == \"Haiku\" ]]; then\n\t\tgpu=\"$(listdev | grep -A2 -e 'device Display controller' | \"${AWK}\" -F': ' '/^ +device/ {print $2}')\"\n\telse\n\t\tif [[ -n \"$(PATH=\"/opt/bin:$PATH\" type -p nvidia-smi)\" ]]; then\n\t\t\tgpu=$($(PATH=\"/opt/bin:$PATH\" type -p nvidia-smi | cut -f1) -q | \"${AWK}\" -F':' '/Product Name/ {gsub(/: /,\":\"); print $2}' | sed ':a;N;$!ba;s/\\n/, /g')\n\t\telif [[ -n \"$(PATH=\"/usr/sbin:$PATH\" type -p glxinfo)\" && -z \"${gpu}\" ]]; then\n\t\t\tgpu_info=$($(PATH=\"/usr/sbin:$PATH\" type -p glxinfo | cut -f1) 2>/dev/null)\n\t\t\tgpu=$(grep \"OpenGL renderer string\" <<< \"${gpu_info}\" | cut -d ':' -f2 | sed -n -e '1h;2,$H;${g;s/\\n/, /g' -e 'p' -e '}')\n\t\t\tgpu=\"${gpu:1}\"\n\t\t\tgpu_info=$(grep \"OpenGL vendor string\" <<< \"${gpu_info}\")\n\t\telif [[ -n \"$(PATH=\"/usr/sbin:$PATH\" type -p lspci)\" && -z \"$gpu\" ]]; then\n\t\t\tgpu_info=$($(PATH=\"/usr/bin:$PATH\" type -p lspci | cut -f1) 2> /dev/null | grep VGA)\n\t\t\tgpu=$(grep -oE '\\[.*\\]' <<< \"${gpu_info}\" | sed 's/\\[//;s/\\]//' | sed -n -e '1h;2,$H;${g;s/\\n/, /g' -e 'p' -e '}')\n\t\tfi\n\tfi\n\n\tif [ -n \"$gpu\" ];then\n\t\tif grep -q -i 'nvidia' <<< \"${gpu_info}\"; then\n\t\t\tgpu_info=\"NVidia \"\n\t\telif grep -q -i 'intel' <<< \"${gpu_info}\"; then\n\t\t\tgpu_info=\"Intel \"\n\t\telif grep -q -i 'amd' <<< \"${gpu_info}\"; then\n\t\t\tgpu_info=\"AMD \"\n\t\telif grep -q -i 'ati' <<< \"${gpu_info}\" || grep -q -i 'radeon' <<< \"${gpu_info}\"; then\n\t\t\tgpu_info=\"ATI \"\n\t\telse\n\t\t\tgpu_info=$(cut -d ':' -f2 <<< \"${gpu_info}\")\n\t\t\tgpu_info=\"${gpu_info:1} \"\n\t\tfi\n\t\tgpu=\"${gpu}\"\n\telse\n\t\tgpu=\"Not Found\"\n\tfi\n\n\tverboseOut \"Finding current GPU...found as '$gpu'\"\n}\n# GPU Detection - End\n\n# Detect Intel GPU  #works in dash\n# Run it only on Intel Processors if GPU is unknown\nDetectIntelGPU() {\n\tif [ -r /proc/fb ]; then\n\t\tgpu=$(\"${AWK}\" 'BEGIN {ORS = \" &\"} {$1=\"\";print}' /proc/fb | sed  -r s/'^\\s+|\\s*&$'//g)\n\tfi\n\n\tcase $gpu in\n\t\t*mfb)\n\t\t\tgpu=$(lspci | grep -i vga | \"${AWK}\" -F \": \" '{print $2}')\n\t\t\t;;\n\t\t*intel*)\n\t\t\tgpu=\"intel\"\n\t\t\t;;\n\t\t*)\n\t\t\tgpu=\"Not Found\"\n\t\t\t;;\n\tesac\n\n\tif [[ \"$gpu\" = \"intel\" ]]; then\n\t\t#Detect CPU\n\t\tlocal CPU=$(uname -p | \"${AWK}\" '{print $3}')\n\t\tCPU=${CPU#*'-'}; #Detect CPU number\n\n\t\t#Detect Intel GPU\n\t\tcase $CPU in\n\t\t\t[3-6][3-9][0-5]|[3-6][3-9][0-5][K-Y])\n\t\t\t\tgpu='Intel HD Graphics'\n\t\t\t\t;; #1st\n\t\t\t2[1-5][0-3][0-2]*|2390T|2600S)\n\t\t\t\tgpu='Intel HD Graphics 2000'\n\t\t\t\t;; #2nd\n\t\t\t2[1-5][1-7][0-8]*|2105|2500K)\n\t\t\t\tgpu='Intel HD Graphics 3000'\n\t\t\t\t;; #2nd\n\t\t\t32[1-5]0*|3[4-5][5-7]0*|33[3-4]0*)\n\t\t\t\tgpu='Intel HD Graphics 2500'\n\t\t\t\t;; #3rd\n\t\t\t3570K|3427U)\n\t\t\t\tgpu='Intel HD Graphics 4000'\n\t\t\t\t;; #3rd\n\t\t\t4[3-7][0-9][0-5]*)\n\t\t\t\tgpu='Intel HD Graphics 4600'\n\t\t\t\t;; #4th Haswell\n\t\t\t5[5-6]75[C-R]|5350H)\n\t\t\t\tgpu='Intel Iris Pro Graphics 6200'\n\t\t\t\t;; #5th Broadwell\n\t\t\t\t#6th Skylake\n\t\t\t\t#7th Kabylake\n\t\t\t\t#8th Cannonlake\n\t\t\t*)\n\t\t\t\tgpu='Unknown'\n\t\t\t\t;; #Unknown GPU model\n\t\tesac\n\tfi\n}\n\n# Disk Usage Detection - Begin\ndetectdisk () {\n\tdiskusage=\"Unknown\"\n\tif type -p df >/dev/null 2>&1; then\n\t\tif [[ \"${distro}\" =~ (Free|Net|DragonFly)BSD ]]; then\n\t\t\ttotaldisk=$(df -h -c 2>/dev/null | tail -1)\n\t\telif [[ \"${distro}\" == \"OpenBSD\" ]]; then\n\t\t\ttotaldisk=$(df -Pk 2> /dev/null | \"${AWK}\" '\n\t\t\t\t/^\\// {total+=$2; used+=$3; avail+=$4}\n\t\t\t\tEND{printf(\"total %.1fG %.1fG %.1fG %d%%\\n\", total/1048576, used/1048576, avail/1048576, used*100/total)}')\n\t\telif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" ]]; then\n                        majorVers=$(sw_vers -productVersion | cut -d ':' -f 2 | \"${AWK}\" -F \".\" '{print $1}') # Major version\n\t\t\tminorVers=$(sw_vers -productVersion | cut -d ':' -f 2 | \"${AWK}\" -F \".\" '{print $2}') # Minor version\n\t\t\tif [[ \"${minorVers}\" -ge \"15\" || \"${majorVers}\" -ge \"11\" ]]; then # Catalina or newer\n\t\t\t\ttotaldisk=$(df -H /System/Volumes/Data 2>/dev/null | tail -1)\n\t\t\telse\n\t\t\t\ttotaldisk=$(df -H / 2>/dev/null | tail -1)\n\t\t\tfi\n\t\telse\n\t\t\ttotaldisk=$(df -h -x aufs -x tmpfs -x overlay -x drvfs -x devtmpfs --total 2>/dev/null | tail -1)\n\t\tfi\n\t\tdisktotal=$(\"${AWK}\" '{print $2}' <<< \"${totaldisk}\")\n\t\tdiskused=$(\"${AWK}\" '{print $3}' <<< \"${totaldisk}\")\n\t\tdiskusedper=$(\"${AWK}\" '{print $5}' <<< \"${totaldisk}\")\n\t\tdiskusage=\"${diskused} / ${disktotal} (${diskusedper})\"\n\t\tdiskusage_verbose=$(sed 's/%/%%/' <<< \"$diskusage\")\n\tfi\n\tverboseOut \"Finding current disk usage...found as '$diskusage_verbose'\"\n}\n# Disk Usage Detection - End\n\n\n# Memory Detection - Begin\ndetectmem () {\n\tif [[ \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]]; then\n\t\ttotalmem=$(echo \"$(sysctl -n hw.memsize)\" / 1024^2 | bc)\n\t\twiredmem=$(vm_stat | grep wired | \"${AWK}\" '{ print $4 }' | sed 's/\\.//')\n\t\tactivemem=$(vm_stat | grep ' active' | \"${AWK}\" '{ print $3 }' | sed 's/\\.//')\n\t\tcompressedmem=$(vm_stat | grep occupied | \"${AWK}\" '{ print $5 }' | sed 's/\\.//')\n\t\tif [[ ! -z \"$compressedmem | tr -d\" ]]; then  # FIXME: is this line correct?\n\t\t\tcompressedmem=0\n\t\tfi\n\t\tusedmem=$(((wiredmem + activemem + compressedmem) * 4 / 1024))\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\ttotal_mem=$(\"${AWK}\" '/MemTotal/ { print $2 }' /proc/meminfo)\n\t\ttotalmem=$((total_mem / 1024))\n\t\tfree_mem=$(\"${AWK}\" '/MemFree/ { print $2 }' /proc/meminfo)\n\t\tused_mem=$((total_mem - free_mem))\n\t\tusedmem=$((used_mem / 1024))\n\telif [[ \"$distro\" == \"FreeBSD\"  || \"$distro\" == \"DragonFlyBSD\" ]]; then\n\t\tphys_mem=$(sysctl -n hw.physmem)\n\t\tsize_mem=$phys_mem\n\t\tsize_chip=1\n\t\tguess_chip=$(echo \"$size_mem / 8 - 1\" | bc)\n\t\twhile [ \"$guess_chip\" != 0 ]; do\n\t\t\tguess_chip=$(echo \"$guess_chip / 2\" | bc)\n\t\t\tsize_chip=$(echo \"$size_chip * 2\" | bc)\n\t\tdone\n\t\tround_mem=$(echo \"( $size_mem / $size_chip + 1 ) * $size_chip \" | bc)\n\t\ttotalmem=$((round_mem / 1024 / 1024))\n\t\tpagesize=$(sysctl -n hw.pagesize)\n\t\tinactive_count=$(sysctl -n vm.stats.vm.v_inactive_count)\n\t\tinactive_mem=$((inactive_count * pagesize))\n\t\tcache_count=$(sysctl -n vm.stats.vm.v_cache_count)\n\t\tcache_mem=$((cache_count * pagesize))\n\t\tfree_count=$(sysctl -n vm.stats.vm.v_free_count)\n\t\tfree_mem=$((free_count * pagesize))\n\t\tavail_mem=$((inactive_mem + cache_mem + free_mem))\n\t\tused_mem=$((round_mem - avail_mem))\n\t\tusedmem=$((used_mem / 1024 / 1024))\n\telif [ \"$distro\" == \"OpenBSD\" ]; then\n\t\ttotalmem=$(($(sysctl -n hw.physmem) / 1024 / 1024))\n\t\tusedmem=$(vmstat | \"${AWK}\" '!/[a-z]/{gsub(\"M\",\"\"); print $3}')\n\telif [ \"$distro\" == \"NetBSD\" ]; then\n\t\tphys_mem=$(\"${AWK}\" '/MemTotal/ { print $2 }' /proc/meminfo)\n\t\ttotalmem=$((phys_mem / 1024))\n\t\tif grep -q 'Cached' /proc/meminfo; then\n\t\t\tcache=$(\"${AWK}\" '/Cached/ {print $2}' /proc/meminfo)\n\t\t\tusedmem=$((cache / 1024))\n\t\telse\n\t\t\tfree_mem=$(\"${AWK}\" '/MemFree/ { print $2 }' /proc/meminfo)\n\t\t\tused_mem=$((phys_mem - free_mem))\n\t\t\tusedmem=$((used_mem / 1024))\n\t\tfi\n\telif [ \"$distro\" == \"Haiku\" ]; then\n\t\ttotalmem=$(sysinfo -mem | \"${AWK}\" 'NR == 1 {gsub(/[\\(\\)\\/]/, \"\"); printf(\"%d\", $6/1024**2)}')\n\t\tusedmem=$(sysinfo -mem | \"${AWK}\" 'NR == 1 {gsub(/[\\(\\)\\/]/, \"\"); printf(\"%d\", $5/1024**2)}')\n\telse\n\t\t# MemUsed = Memtotal + Shmem - MemFree - Buffers - Cached - SReclaimable\n\t\t# Source: https://github.com/dylanaraps/neofetch/pull/391/files#diff-e863270127ca6116fd30e708cdc582fc\n\t\t#mem_info=$(</proc/meminfo)\n\t\t#mem_info=$(echo $(echo $(mem_info=${mem_info// /}; echo ${mem_info//kB/})))\n\t\t#for m in $mem_info; do\n\t\t#\tcase ${m//:*} in\n\t\t#\t\t\"MemTotal\") usedmem=$((usedmem+=${m//*:})); totalmem=${m//*:} ;;\n\t\t#\t\t\"Shmem\") usedmem=$((usedmem+=${m//*:})) ;;\n\t\t#\t\t\"MemFree\"|\"Buffers\"|\"Cached\"|\"SReclaimable\") usedmem=$((usedmem-=${m//*:})) ;;\n\t\t#\tesac\n\t\t#done\n\t\t#usedmem=$((usedmem / 1024))\n\t\t#totalmem=$((totalmem / 1024))\n\t\tmem=$(free -b | \"${AWK}\" -F ':' 'NR==2{print $2}' | \"${AWK}\" '{print $1\"-\"$6}')\n\t\tusedmem=$((mem / 1024 / 1024))\n\t\ttotalmem=$((${mem//-*} / 1024 / 1024))\n\tfi\n\tmem=\"${usedmem}MiB / ${totalmem}MiB\"\n\tverboseOut \"Finding current RAM usage...found as '$mem'\"\n}\n# Memory Detection - End\n\n\n# Shell Detection - Begin\ndetectshell_ver () {\n\tlocal version_data='' version='' get_version='--version'\n\n\tcase $1 in\n\t\t# ksh sends version to stderr. Weeeeeeird.\n\t\tksh)\n\t\t\tversion_data=\"$( $1 $get_version 2>&1 )\"\n\t\t\t;;\n\t\t*)\n\t\t\tversion_data=\"$( $1 $get_version 2>/dev/null )\"\n\t\t\t;;\n\tesac\n\n\tif [[ -n $version_data ]];then\n\t\tversion=$(\"${AWK}\" '\n\t\tBEGIN {\n\t\t\tIGNORECASE=1\n\t\t}\n\t\t/'$2'/ {\n\t\t\tgsub(/(,|v|V)/, \"\",$'$3')\n\t\t\tif ($2 ~ /[Bb][Aa][Ss][Hh]/) {\n\t\t\t\tgsub(/\\(.*|-release|-version\\)/,\"\",$4)\n\t\t\t}\n\t\t\tprint $'$3'\n\t\t\texit # quit after first match prints\n\t\t}' <<< \"$version_data\")\n\tfi\n\techo \"$version\"\n}\ndetectshell () {\n\tif [[ ! \"${shell_type}\" ]]; then\n\t\tif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" || \"${distro}\" == \"Haiku\" || \"${distro}\" == \"Alpine Linux\" ||\n\t\t\t\"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" || \"${distro}\" == \"TinyCore\" || \"${distro}\" == \"Raspbian\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\tshell_type=$(echo \"$SHELL\" | \"${AWK}\" -F'/' '{print $NF}')\n\t\telif readlink -f \"$SHELL\" 2>&1 | grep -q -i 'busybox'; then\n\t\t\tshell_type=\"BusyBox\"\n\t\telse\n\t\t\tif [[ \"${OSTYPE}\" =~ \"linux\" ]]; then\n\t\t\t\tshell_type=$(realpath /proc/$PPID/exe | \"${AWK}\" -F'/' '{print $NF}')\n\t\t\telif [[ \"${distro}\" =~ \"BSD\" ]]; then\n\t\t\t\tshell_type=$(ps -p $PPID -o command | tail -1)\n\t\t\telse\n\t\t\t\tshell_type=$(ps -p \"$(ps -p $PPID | \"${AWK}\" '$1 !~ /PID/ {print $1}')\" | \"${AWK}\" 'FNR>1 {print $1}')\n\t\t\tfi\n\t\t\tshell_type=${shell_type/-}\n\t\t\tshell_type=${shell_type//*\\/}\n\t\tfi\n\tfi\n\n\tcase $shell_type in\n\t\tbash)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"^GNU.bash,.version\" \"4\" )\n\t\t\t;;\n\t\tBusyBox)\n\t\t\tshell_version_data=$( busybox | head -n1 | cut -d ' ' -f2 )\n\t\t\t;;\n\t\tcsh)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"$shell_type\" \"3\" )\n\t\t\t;;\n\t\tdash)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"$shell_type\" \"3\" )\n\t\t\t;;\n\t\tksh)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"version\" \"5\" )\n\t\t\t;;\n\t\ttcsh)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"^tcsh\" \"2\" )\n\t\t\t;;\n\t\tzsh)\n\t\t\tshell_version_data=$( detectshell_ver \"$shell_type\" \"^zsh\" \"2\" )\n\t\t\t;;\n\t\tfish)\n\t\t\tshell_version_data=$( fish --version | \"${AWK}\" '{print $3}' )\n\t\t\t;;\n\t\tpwsh)\n\t\t\tshell_version_data=$( pwsh -c '$PSVersionTable.PSVersion.ToString()' )\n\t\t\t;;\n\tesac\n\n\tif [[ -n $shell_version_data ]];then\n\t\tshell_type=\"$shell_type $shell_version_data\"\n\tfi\n\n\tmyShell=${shell_type}\n\tverboseOut \"Finding current shell...found as '$myShell'\"\n}\n# Shell Detection - End\n\n\n# Resolution Detection - Begin\ndetectres () {\n\txResolution=\"No X Server\"\n\tif [[ ${distro} == \"Mac OS X\" || $distro == \"macOS\" ]]; then\n\t\txResolution=$(system_profiler SPDisplaysDataType | \"${AWK}\" '/Resolution:/ {print $2\"x\"$4\" \"}')\n\t\tif [[ \"$(echo \"$xResolution\" | wc -l)\" -ge 1 ]]; then\n\t\t\txResolution=$(echo \"$xResolution\" | tr \" \\\\n\" \", \" | sed 's/\\(.*\\),/\\1/')\n\t\tfi\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\txResolution=$(wmic path Win32_VideoController get CurrentHorizontalResolution,CurrentVerticalResolution | \"${AWK}\" 'NR==2 {print $1\"x\"$2}')\n\telif [[ \"${distro}\" == \"Haiku\" ]]; then\n\t\txResolution=\"$(screenmode | grep Resolution | \"${AWK}\" '{gsub(/,/,\"\"); print $2\"x\"$3}')\"\n\telif [[ -n ${DISPLAY} ]]; then\n\t\tif type -p xdpyinfo >/dev/null 2>&1; then\n\t\t\txResolution=$(xdpyinfo | \"${AWK}\" '/^ +dimensions/ {print $2}')\n\t\tfi\n\tfi\n\tverboseOut \"Finding current resolution(s)...found as '$xResolution'\"\n}\n# Resolution Detection - End\n\n\n# DE Detection - Begin\ndetectde () {\n\tDE=\"Not Present\"\n\tif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" ]]; then\n\t\tif ps -U \"${USER}\" | grep -q -i 'finder'; then\n\t\t\tDE=\"Aqua\"\n\t\tfi\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\t# https://msdn.microsoft.com/en-us/library/ms724832%28VS.85%29.aspx\n\t\tif wmic os get version | grep -q '^\\(6\\.[01]\\)'; then\n\t\t\tDE=\"Aero\"\n\t\telif wmic os get version | grep -q '^\\(6\\.[23]\\|10\\)'; then\n\t\t\tDE=\"Modern UI/Metro\"\n\t\telse\n\t\t\tDE=\"Luna\"\n\t\tfi\n\telif [[ -n ${DISPLAY} ]]; then\n\t\tif type -p xprop >/dev/null 2>&1;then\n\t\t\txprop_root=\"$(xprop -root 2>/dev/null)\"\n\t\t\tif [[ -n ${xprop_root} ]]; then\n\t\t\t\tDE=$(echo \"${xprop_root}\" | \"${AWK}\" 'BEGIN {\n\t\t\t\t\tde = \"Not Present\"\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tif ($1 ~ /^_DT_SAVE_MODE/) {\n\t\t\t\t\t\tde = $NF\n\t\t\t\t\t\tgsub(/\"/,\"\",de)\n\t\t\t\t\t\tde = toupper(de)\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($1 ~/^KDE_SESSION_VERSION/) {\n\t\t\t\t\t\tde = \"KDE\"$NF\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($1 ~ /^_MUFFIN/) {\n\t\t\t\t\t\tde = \"Cinnamon\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($1 ~ /^TDE_FULL_SESSION/) {\n\t\t\t\t\t\tde = \"Trinity\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($0 ~ /\"xfce4\"/) {\n\t\t\t\t\t\tde = \"Xfce4\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t\telse if ($0 ~ /\"xfce5\"/) {\n\t\t\t\t\t\tde = \"Xfce5\"\n\t\t\t\t\t\texit\n\t\t\t\t\t}\n\t\t\t\t} END {\n\t\t\t\t\tprint de\n\t\t\t\t}')\n\t\t\tfi\n\t\tfi\n\n\t\tif [[ ${DE} == \"Not Present\" ]]; then\n\t\t\t# Let's use xdg-open code for GNOME/Enlightment/KDE/LXDE/MATE/Xfce detection\n\t\t\t# http://bazaar.launchpad.net/~vcs-imports/xdg-utils/master/view/head:/scripts/xdg-utils-common.in#L251\n\t\t\tif [ -n \"${XDG_CURRENT_DESKTOP}\" ]; then\n\t\t\t\tcase \"${XDG_CURRENT_DESKTOP,,}\" in\n\t\t\t\t\t'enlightenment')\n\t\t\t\t\t\tDE=\"Enlightenment\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'gnome')\n\t\t\t\t\t\tDE=\"GNOME\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'kde')\n\t\t\t\t\t\tDE=\"KDE\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'lumina')\n\t\t\t\t\t\tDE=\"Lumina\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'lxde')\n\t\t\t\t\t\tDE=\"LXDE\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'mate')\n\t\t\t\t\t\tDE=\"MATE\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'xfce')\n\t\t\t\t\t\tDE=\"Xfce\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'x-cinnamon')\n\t\t\t\t\t\tDE=\"Cinnamon\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'unity')\n\t\t\t\t\t\tDE=\"Unity\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'lxqt')\n\t\t\t\t\t\tDE=\"LXQt\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\n\t\t\tif [ -n \"$DE\" ]; then\n\t\t\t\t# classic fallbacks\n\t\t\t\tif [ -n \"$KDE_FULL_SESSION\" ]; then\n\t\t\t\t\tDE=\"KDE\"\n\t\t\t\telif [ -n \"$TDE_FULL_SESSION\" ]; then\n\t\t\t\t\tDE=\"Trinity\"\n\t\t\t\telif [ -n \"$GNOME_DESKTOP_SESSION_ID\" ]; then\n\t\t\t\t\tDE=\"GNOME\"\n\t\t\t\telif [ -n \"$MATE_DESKTOP_SESSION_ID\" ]; then\n\t\t\t\t\tDE=\"MATE\"\n\t\t\t\telif dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus \\\n\t\t\t\t\torg.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager >/dev/null 2>&1 ; then\n\t\t\t\t\tDE=\"GNOME\"\n\t\t\t\telif xprop -root _DT_SAVE_MODE 2> /dev/null | grep -q -i ' = \"xfce4\"$'; then\n\t\t\t\t\tDE=\"Xfce\"\n\t\t\t\telif xprop -root 2> /dev/null | grep -q -i '^xfce_desktop_window'; then\n\t\t\t\t\tDE=\"Xfce\"\n\t\t\t\telif echo \"$DESKTOP\" | grep -q -i '^Enlightenment'; then\n\t\t\t\t\tDE=\"Enlightenment\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ -z \"$DE\" || \"$DE\" = \"Not Present\" ]]; then\n\t\t\t\t# fallback to checking $DESKTOP_SESSION\n\t\t\t\tlocal _DESKTOP_SESSION=\n\t\t\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\t\t\tif [[ ${BASH_VERSINFO[0]} -eq 4 && ${BASH_VERSINFO[1]} -gt 1 ]] || [[ ${BASH_VERSINFO[0]} -gt 4 ]]; then\n\t\t\t\t\t\t_DESKTOP_SESSION=${DESKTOP_SESSION,,}\n\t\t\t\t\telse\n\t\t\t\t\t\t_DESKTOP_SESSION=\"$(tr '[:upper:]' '[:lower:]' <<< \"${DESKTOP_SESSION}\")\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\t_DESKTOP_SESSION=\"$(tr '[:upper:]' '[:lower:]' <<< \"${DESKTOP_SESSION}\")\"\n\t\t\t\tfi\n\t\t\t\tcase \"${_DESKTOP_SESSION}\" in\n\t\t\t\t\t'gnome'*)\n\t\t\t\t\t\tDE=\"GNOME\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'deepin')\n\t\t\t\t\t\tDE=\"Deepin\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'lumina')\n\t\t\t\t\t\tDE=\"Lumina\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'lxde'|'lubuntu')\n\t\t\t\t\t\tDE=\"LXDE\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'mate')\n\t\t\t\t\t\tDE=\"MATE\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'xfce'*)\n\t\t\t\t\t\tDE=\"Xfce\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'budgie-desktop')\n\t\t\t\t\t\tDE=\"Budgie\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'cinnamon')\n\t\t\t\t\t\tDE=\"Cinnamon\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'trinity')\n\t\t\t\t\t\tDE=\"Trinity\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\n\t\t\tif [ -n \"$DE\" ]; then\n\t\t\t\t# fallback to checking $GDMSESSION\n\t\t\t\tcase \"${GDMSESSION,,}\" in\n\t\t\t\t\t'lumina'*)\n\t\t\t\t\t\tDE=\"Lumina\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t'mate')\n\t\t\t\t\t\tDE=\"MATE\"\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\n\t\t\tif [[ ${DE} == \"GNOME\" ]]; then\n\t\t\t\tif type -p xprop >/dev/null 2>&1; then\n\t\t\t\t\tif xprop -name \"unity-launcher\" >/dev/null 2>&1; then\n\t\t\t\t\t\tDE=\"Unity\"\n\t\t\t\t\telif xprop -name \"launcher\" >/dev/null 2>&1 &&\n\t\t\t\t\t\txprop -name \"panel\" >/dev/null 2>&1; then\n\t\t\t\t\t\tDE=\"Unity\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [[ ${DE} == \"KDE\" ]]; then\n\t\t\t\tif [[ -n ${KDE_SESSION_VERSION} ]]; then\n\t\t\t\t\tif [[ ${KDE_SESSION_VERSION} == '5' ]]; then\n\t\t\t\t\t\tDE=\"KDE5\"\n\t\t\t\t\telif [[ ${KDE_SESSION_VERSION} == '4' ]]; then\n\t\t\t\t\t\tDE=\"KDE4\"\n\t\t\t\t\tfi\n\t\t\t\telif [[ ${KDE_FULL_SESSION} == 'true' ]]; then\n\t\t\t\t\tDE=\"KDE\"\n\t\t\t\t\tDEver_data=$(kded --version 2>/dev/null)\n\t\t\t\t\tDEver=$(grep -si '^KDE:' <<< \"$DEver_data\" | \"${AWK}\" '{print $2}')\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\tif [[ ${DE} != \"Not Present\" ]]; then\n\t\t\tif [[ ${DE} == \"Cinnamon\" ]]; then\n\t\t\t\tif type -p >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(cinnamon --version)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"GNOME\" ]]; then\n\t\t\t\tif type -p gnome-control-center>/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(gnome-control-center --version 2> /dev/null)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\telif type -p gnome-session-properties >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(gnome-session-properties --version 2> /dev/null)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\telif type -p gnome-session >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(gnome-session --version 2> /dev/null)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"KDE4\" || ${DE} == \"KDE5\" ]]; then\n\t\t\t\tif type -p kded${DE#KDE} >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(kded${DE#KDE} --version)\n\t\t\t\t\tif [[ $(( $(echo \"$DEver\" | wc -w) )) -eq 2 ]] && [[ \"$(echo \"$DEver\" | cut -d ' ' -f1)\" == \"kded${DE#KDE}\" ]]; then\n\t\t\t\t\t\tDEver=$(echo \"$DEver\" | cut -d ' ' -f2)\n\t\t\t\t\t\tDE=\"KDE ${DEver}\"\n\t\t\t\t\telse\n\t\t\t\t\t\tfor l in $(echo \"${DEver// /_}\"); do\n\t\t\t\t\t\t\tif [[ ${l//:*} == \"KDE_Development_Platform\" ]]; then\n\t\t\t\t\t\t\t\tDEver=${l//*:_}\n\t\t\t\t\t\t\t\tDE=\"KDE ${DEver//_*}\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\tif pgrep -U ${UID} plasmashell >/dev/null 2>&1; then\n\t\t\t\t\t\tDEver=$(plasmashell --version | cut -d ' ' -f2)\n\t\t\t\t\t\tDE=\"$DE / Plasma $DEver\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"Lumina\" ]]; then\n\t\t\t\tif type -p Lumina-DE.real >/dev/null 2>&1; then\n\t\t\t\t\tlumina=\"$(type -p Lumina-DE.real)\"\n\t\t\t\telif type -p Lumina-DE >/dev/null 2>&1; then\n\t\t\t\t\tlumina=\"$(type -p Lumina-DE)\"\n\t\t\t\tfi\n\t\t\t\tif [ -n \"$lumina\" ]; then\n\t\t\t\t\tif grep -q '--version' \"$lumina\"; then\n\t\t\t\t\t\tDEver=$(\"$lumina\" --version 2>&1 | tr -d \\\")\n\t\t\t\t\t\tDE=\"${DE} ${DEver}\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"LXQt\" ]]; then\n\t\t\t\tif type -p lxqt-about >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(lxqt-about --version | \"${AWK}\" '/^liblxqt/ {print $2}')\n\t\t\t\t\tDE=\"${DE} ${DEver}\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"MATE\" ]]; then\n\t\t\t\tif type -p mate-session >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(mate-session --version)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"Unity\" ]]; then\n\t\t\t\tif type -p unity >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(unity --version)\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"Deepin\" ]]; then\n\t\t\t\tif [[ -f /etc/deepin-version ]]; then\n\t\t\t\t\tDEver=\"$(\"${AWK}\" -F '=' '/Version/ {print $2}' /etc/deepin-version)\"\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\telif [[ ${DE} == \"Trinity\" ]]; then\n\t\t\t\tif type -p tde-config >/dev/null 2>&1; then\n\t\t\t\t\tDEver=\"$(tde-config --version | \"${AWK}\" -F ' ' '/TDE:/ {print $2}')\"\n\t\t\t\t\tDE=\"${DE} ${DEver//* }\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\tif [[ \"${DE}\" == \"Not Present\" ]]; then\n\t\t\tif pgrep -U ${UID} lxsession >/dev/null 2>&1; then\n\t\t\t\tDE=\"LXDE\"\n\t\t\t\tif type -p lxpanel >/dev/null 2>&1; then\n\t\t\t\t\tDEver=$(lxpanel -v)\n\t\t\t\t\tDE=\"${DE} $DEver\"\n\t\t\t\tfi\n\t\t\telif pgrep -U ${UID} lxqt-session >/dev/null 2>&1; then\n\t\t\t\tDE=\"LXQt\"\n\t\t\telif pgrep -U ${UID} razor-session >/dev/null 2>&1; then\n\t\t\t\tDE=\"RazorQt\"\n\t\t\telif pgrep -U ${UID} dtsession >/dev/null 2>&1; then\n\t\t\t\tDE=\"CDE\"\n\t\t\tfi\n\t\tfi\n\tfi\n\tverboseOut \"Finding desktop environment...found as '$DE'\"\n}\n### DE Detection - End\n\n\n# WM Detection - Begin\ndetectwm () {\n\tWM=\"Not Found\"\n\tif [[ ${distro} == \"Mac OS X\" || ${distro} == \"macOS\" ]]; then\n\t\tif ps -U \"${USER}\" | grep -q -i 'finder'; then\n\t\t\tWM=\"Quartz Compositor\"\n\t\tfi\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\tif [ \"$(tasklist | grep -o 'bugn' | tr -d '\\r \\n')\" = \"bugn\" ]; then\n\t\t\tWM=\"bug.n\"\n\t\telif [ \"$(tasklist | grep -o 'Windawesome' | tr -d '\\r \\n')\" = \"Windawesome\" ]; then\n\t\t\tWM=\"Windawesome\"\n\t\telif [ \"$(tasklist | grep -o 'blackbox' | tr -d '\\r \\n')\" = \"blackbox\" ]; then\n\t\t\tWM=\"Blackbox\"\n\t\telse\n\t\t\tWM=\"DWM/Explorer\"\n\t\tfi\n\telif [[ -n ${DISPLAY} ]]; then\n\t\tif [[ \"${distro}\" == \"FreeBSD\" ]]; then\n\t\t\tpgrep_flags=\"-aU\"\n\t\telse\n\t\t\tpgrep_flags=\"-U\"\n\t\tfi\n\t\tfor each in \"${wmnames[@]}\"; do\n\t\t\tPID=\"$(pgrep ${pgrep_flags} ${UID} \"^$each$\")\"\n\t\t\tif [ \"$PID\" ]; then\n\t\t\t\tcase $each in\n\t\t\t\t\t'2bwm') WM=\"2bwm\";;\n\t\t\t\t\t'9wm') WM=\"9wm\";;\n\t\t\t\t\t'awesome') WM=\"Awesome\";;\n\t\t\t\t\t'beryl') WM=\"Beryl\";;\n\t\t\t\t\t'blackbox') WM=\"BlackBox\";;\n\t\t\t\t\t'bspwm') WM=\"bspwm\";;\n\t\t\t\t\t'budgie-wm') WM=\"BudgieWM\";;\n\t\t\t\t\t'chromeos-wm') WM=\"chromeos-wm\";;\n\t\t\t\t\t'cinnamon') WM=\"Muffin\";;\n\t\t\t\t\t'compiz') WM=\"Compiz\";;\n\t\t\t\t\t'deepin-wm') WM=\"deepin-wm\";;\n\t\t\t\t\t'dminiwm') WM=\"dminiwm\";;\n\t\t\t\t\t'dtwm') WM=\"dtwm\";;\n\t\t\t\t\t'dwm') WM=\"dwm\";;\n\t\t\t\t\t'e16') WM=\"E16\";;\n\t\t\t\t\t'emerald') WM=\"Emerald\";;\n\t\t\t\t\t'enlightenment') WM=\"E17\";;\n\t\t\t\t\t'fluxbox') WM=\"FluxBox\";;\n\t\t\t\t\t'flwm'|'flwm_topside') WM=\"FLWM\";;\n\t\t\t\t\t'fvwm') WM=\"FVWM\";;\n\t\t\t\t\t'herbstluftwm') WM=\"herbstluftwm\";;\n\t\t\t\t\t'howm') WM=\"howm\";;\n\t\t\t\t\t'i3') WM=\"i3\";;\n\t\t\t\t\t'icewm') WM=\"IceWM\";;\n\t\t\t\t\t'kwin') WM=\"KWin\";;\n\t\t\t\t\t'metacity') WM=\"Metacity\";;\n\t\t\t\t\t'monsterwm') WM=\"monsterwm\";;\n\t\t\t\t\t'musca') WM=\"Musca\";;\n\t\t\t\t\t'mwm') WM=\"MWM\";;\n\t\t\t\t\t'notion') WM=\"Notion\";;\n\t\t\t\t\t'openbox') WM=\"OpenBox\";;\n\t\t\t\t\t'pekwm') WM=\"PekWM\";;\n\t\t\t\t\t'ratpoison') WM=\"Ratpoison\";;\n\t\t\t\t\t'sawfish') WM=\"Sawfish\";;\n\t\t\t\t\t'scrotwm') WM=\"ScrotWM\";;\n\t\t\t\t\t'spectrwm') WM=\"SpectrWM\";;\n\t\t\t\t\t'stumpwm') WM=\"StumpWM\";;\n\t\t\t\t\t'subtle') WM=\"subtle\";;\n\t\t\t\t\t'sway') WM=\"sway\";;\n\t\t\t\t\t'swm') WM=\"swm\";;\n\t\t\t\t\t'twin') WM=\"TWin\";;\n\t\t\t\t\t'wmaker') WM=\"WindowMaker\";;\n\t\t\t\t\t'wmfs') WM=\"WMFS\";;\n\t\t\t\t\t'wmii') WM=\"wmii\";;\n\t\t\t\t\t'xfwm4') WM=\"Xfwm4\";;\n\t\t\t\t\t'xmonad.*') WM=\"XMonad\";;\n\t\t\t\tesac\n\t\t\tfi\n\t\t\tif [[ ${WM} != \"Not Found\" ]]; then\n\t\t\t\tbreak 1\n\t\t\tfi\n\t\tdone\n\n\t\tif [[ ${WM} == \"Not Found\" ]]; then\n\t\t\tif type -p xprop >/dev/null 2>&1; then\n\t\t\t\tWM=$(xprop -root _NET_SUPPORTING_WM_CHECK)\n\t\t\t\tif [[ \"$WM\" =~ 'not found' ]]; then\n\t\t\t\t\tWM=\"Not Found\"\n\t\t\t\telif [[ \"$WM\" =~ 'Not found' ]]; then\n\t\t\t\t\tWM=\"Not Found\"\n\t\t\t\telif [[ \"$WM\" =~ '[Ii]nvalid window id format' ]]; then\n\t\t\t\t\tWM=\"Not Found\"\n\t\t\t\telif [[ \"$WM\" =~ \"no such\" ]]; then\n\t\t\t\t\tWM=\"Not Found\"\n\t\t\t\telse\n\t\t\t\t\tWM=${WM//* }\n\t\t\t\t\tWM=$(xprop -id \"${WM}\" 8s _NET_WM_NAME)\n\t\t\t\t\tWM=$(echo \"$(WM=${WM//*= }; echo \"${WM//\\\"}\")\")\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\t# Proper format WM names that need it.\n\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\tif [[ ${BASH_VERSINFO[0]} -eq 4 && ${BASH_VERSINFO[1]} -gt 1 ]] || [[ ${BASH_VERSINFO[0]} -gt 4 ]]; then\n\t\t\t\tWM_lower=${WM,,}\n\t\t\telse\n\t\t\t\tWM_lower=\"$(tr '[:upper:]' '[:lower:]' <<< \"${WM}\")\"\n\t\t\tfi\n\t\telse\n\t\t\tWM_lower=\"$(tr '[:upper:]' '[:lower:]' <<< \"${WM}\")\"\n\t\tfi\n\t\tcase ${WM_lower} in\n\t\t\t*'gala'*) WM=\"Gala\";;\n\t\t\t'2bwm') WM=\"2bwm\";;\n\t\t\t'awesome') WM=\"Awesome\";;\n\t\t\t'beryl') WM=\"Beryl\";;\n\t\t\t'blackbox') WM=\"BlackBox\";;\n\t\t\t'budgiewm') WM=\"BudgieWM\";;\n\t\t\t'chromeos-wm') WM=\"chromeos-wm\";;\n\t\t\t'cinnamon') WM=\"Cinnamon\";;\n\t\t\t'compiz') WM=\"Compiz\";;\n\t\t\t'deepin-wm') WM=\"Deepin WM\";;\n\t\t\t'dminiwm') WM=\"dminiwm\";;\n\t\t\t'dwm') WM=\"dwm\";;\n\t\t\t'e16') WM=\"E16\";;\n\t\t\t'echinus') WM=\"echinus\";;\n\t\t\t'emerald') WM=\"Emerald\";;\n\t\t\t'enlightenment') WM=\"E17\";;\n\t\t\t'fluxbox') WM=\"FluxBox\";;\n\t\t\t'flwm'|'flwm_topside') WM=\"FLWM\";;\n\t\t\t'fvwm') WM=\"FVWM\";;\n\t\t\t'gnome shell'*) WM=\"Mutter\";;\n\t\t\t'herbstluftwm') WM=\"herbstluftwm\";;\n\t\t\t'howm') WM=\"howm\";;\n\t\t\t'i3') WM=\"i3\";;\n\t\t\t'icewm') WM=\"IceWM\";;\n\t\t\t'kwin') WM=\"KWin\";;\n\t\t\t'metacity') WM=\"Metacity\";;\n\t\t\t'monsterwm') WM=\"monsterwm\";;\n\t\t\t'muffin') WM=\"Muffin\";;\n\t\t\t'musca') WM=\"Musca\";;\n\t\t\t'mutter'*) WM=\"Mutter\";;\n\t\t\t'mwm') WM=\"MWM\";;\n\t\t\t'notion') WM=\"Notion\";;\n\t\t\t'openbox') WM=\"OpenBox\";;\n\t\t\t'pekwm') WM=\"PekWM\";;\n\t\t\t'ratpoison') WM=\"Ratpoison\";;\n\t\t\t'sawfish') WM=\"Sawfish\";;\n\t\t\t'scrotwm') WM=\"ScrotWM\";;\n\t\t\t'spectrwm') WM=\"SpectrWM\";;\n\t\t\t'stumpwm') WM=\"StumpWM\";;\n\t\t\t'subtle') WM=\"subtle\";;\n\t\t\t'sway') WM=\"sway\";;\n\t\t\t'swm') WM=\"swm\";;\n\t\t\t'twin') WM=\"TWin\";;\n\t\t\t'wmaker') WM=\"WindowMaker\";;\n\t\t\t'wmfs') WM=\"WMFS\";;\n\t\t\t'wmii') WM=\"wmii\";;\n\t\t\t'xfwm4') WM=\"Xfwm4\";;\n\t\t\t'xmonad') WM=\"XMonad\";;\n\t\tesac\n\tfi\n\tverboseOut \"Finding window manager...found as '$WM'\"\n}\n# WM Detection - End\n\n\n# WM Theme Detection - BEGIN\ndetectwmtheme () {\n\tWin_theme=\"Not Found\"\n\tif [[ \"${distro}\" == \"Mac OS X\" || \"${distro}\" == \"macOS\" ]]; then\n\t\tthemeNumber=\"$(defaults read NSGlobalDomain AppleAquaColorVariant 2>/dev/null)\"\n\t\taccentColorNumber=\"$(defaults read NSGlobalDomain AppleAccentColor 2>/dev/null)\"\n\t\tinterfaceStyle=\"$(defaults read NSGlobalDomain AppleInterfaceStyle 2>/dev/null)\"\n\t\tif [ \"${themeNumber}\" == \"1\" ] || [ \"${themeNumber}x\" == \"x\" ]; then\n\t\t\tcase \"${accentColorNumber}\" in\n\t\t\t\"5\")\n\t\t\t\tWin_theme=\"Purple\"\n\t\t\t\t;;\n\t\t\t\"6\")\n\t\t\t\tWin_theme=\"Pink\"\n\t\t\t\t;;\n\t\t\t\"0\")\n\t\t\t\tWin_theme=\"Red\"\n\t\t\t\t;;\n\t\t\t\"1\")\n\t\t\t\tWin_theme=\"Orange\"\n\t\t\t\t;;\n\t\t\t\"2\")\n\t\t\t\tWin_theme=\"Yellow\"\n\t\t\t\t;;\n\t\t\t\"3\")\n\t\t\t\tWin_theme=\"Green\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tWin_theme=\"Blue\"\n\t\t\t\t;;\n\t\t\tesac\n\t\telse\n\t\t\tWin_theme=\"Graphite\"\n\t\tfi\n\t\tif [ \"${interfaceStyle}\" == \"Dark\" ]; then\n\t\t\tWin_theme=\"${Win_theme} (Dark)\"\n\t\tfi\n\telif [[ \"${distro}\" == \"Cygwin\" || \"${distro}\" == \"Msys\" ]]; then\n\t\tif [ \"${WM}\" == \"Blackbox\" ]; then\n\t\t\tif [ \"${distro}\" == \"Msys\" ]; then\n\t\t\t\tBlackbox_loc=$(reg query 'HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WinLogon' //v 'Shell')\n\t\t\telse\n\t\t\t\tBlackbox_loc=$(reg query 'HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\WinLogon' /v 'Shell')\n\t\t\tfi\n\t\t\tBlackbox_loc=\"$(echo \"${Blackbox_loc}\" | sed 's/.*REG_SZ//' | sed -e 's/^[ \\t]*//' | sed 's/.\\{4\\}$//')\"\n\t\t\tWin_theme=$(grep 'session.styleFile' \"${Blackbox_loc}.rc\" | sed 's/ //g' | sed 's/session\\.styleFile://g' | sed 's/.*\\\\//g')\n\t\telse\n\t\t\tif [[ \"${distro}\" == \"Msys\" ]]; then\n\t\t\t\tthemeFile=\"$(reg query 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes' //v 'CurrentTheme')\"\n\t\t\telse\n\t\t\t\tthemeFile=\"$(reg query 'HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Themes' /v 'CurrentTheme')\"\n\t\t\tfi\n\t\t\tWin_theme=$(echo \"$themeFile\" | \"${AWK}\" -F\"\\\\\" '{print $NF}' | sed 's|\\.theme$||')\n\t\tfi\n\telse\n\t\tcase $WM in\n\t\t\t'2bwm'|'9wm'|'Beryl'|'bspwm'|'dminiwm'|'dwm'|'echinus'|'FVWM'|'howm'|'i3'|'monsterwm'|'Musca'|\\\n\t\t\t'Notion'|'Ratpoison'|'ScrotWM'|'SpectrWM'|'swm'|'subtle'|'WindowMaker'|'WMFS'|'wmii'|'XMonad')\n\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t;;\n\t\t\t'Awesome')\n\t\t\t\tif [ -f \"/usr/bin/awesome-client\" ]; then\n\t\t\t\t\tWin_theme=\"$(/usr/bin/awesome-client \"return require('beautiful').theme_path\" | grep -oP '[^/]*(?=/\"$)')\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'BlackBox')\n\t\t\t\tif [ -f \"$HOME/.blackboxrc\" ]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"/\" '/styleFile/ {print $NF}' \"$HOME/.blackboxrc\")\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'BudgieWM')\n\t\t\t\tWin_theme=\"$(gsettings get org.gnome.desktop.wm.preferences theme)\"\n\t\t\t\tWin_theme=\"${Win_theme//\\'}\"\n\t\t\t;;\n\t\t\t'Cinnamon'|'Muffin')\n\t\t\t\tde_theme=\"$(gsettings get org.cinnamon.theme name)\"\n\t\t\t\tde_theme=${de_theme//\"'\"}\n\t\t\t\twin_theme=\"$(gsettings get org.cinnamon.desktop.wm.preferences theme)\"\n\t\t\t\twin_theme=${win_theme//\"'\"}\n\t\t\t\tWin_theme=\"${de_theme} (${win_theme})\"\n\t\t\t;;\n\t\t\t'Compiz'|'Mutter'*|'GNOME Shell'|'Gala')\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tWin_theme=\"$(gsettings get org.gnome.shell.extensions.user-theme name 2>/dev/null)\"\n\t\t\t\t\tif [[ -z \"$Win_theme\" ]]; then\n\t\t\t\t\t\tWin_theme=\"$(gsettings get org.gnome.desktop.wm.preferences theme)\"\n\t\t\t\t\tfi\n\t\t\t\t\tWin_theme=${Win_theme//\"'\"}\n\t\t\t\telif type -p gconftool-2 >/dev/null 2>&1; then\n\t\t\t\t\tWin_theme=$(gconftool-2 -g /apps/metacity/general/theme)\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Deepin WM')\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tWin_theme=\"$(gsettings get com.deepin.wrap.gnome.desktop.wm.preferences theme)\"\n\t\t\t\t\tWin_theme=${Win_theme//\"'\"}\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'E16')\n\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"= \" '/theme.name/ {print $2}' $HOME/.e16/e_config--*.cfg)\"\n\t\t\t;;\n\t\t\t'E17'|'Enlightenment')\n\t\t\t\tif [ \"$(which eet 2>/dev/null)\" ]; then\n\t\t\t\t\teconfig=\"$(eet -d \"$HOME/.e/e/config/standard/e.cfg\" config | \"${AWK}\" '/value \\\"file\\\" string.*.edj/{ print $4 }')\"\n\t\t\t\t\teconfigend=\"${econfig##*/}\"\n\t\t\t\t\tWin_theme=${econfigend%.*}\n\t\t\t\telif [ -n \"${E_CONF_PROFILE}\" ]; then\n\t\t\t\t\t#E17 doesn't store cfg files in text format so for now get the profile as opposed to theme. atyoung\n\t\t\t\t\t#TODO: Find a way to extract and read E17 .cfg files ( google seems to have nothing ). atyoung\n\t\t\t\t\tWin_theme=\"${E_CONF_PROFILE}\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Emerald')\n\t\t\t\tif [ -f \"$HOME/.emerald/theme/theme.ini\" ]; then\n\t\t\t\t\tWin_theme=\"$(for a in /usr/share/emerald/themes/* $HOME/.emerald/themes/*; do cmp \"$HOME/.emerald/theme/theme.ini\" \"$a/theme.ini\" &>/dev/null && basename \"$a\"; done)\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'FluxBox'|'Fluxbox')\n\t\t\t\tif [ -f \"$HOME/.fluxbox/init\" ]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"/\" '/styleFile/ {print $NF}' \"$HOME/.fluxbox/init\")\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'IceWM')\n\t\t\t\tif [ -f \"$HOME/.icewm/theme\" ]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"[\\\",/]\" '!/#/ {print $2}' \"$HOME/.icewm/theme\")\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'KWin'*)\n\t\t\t\tif [[ -z $KDE_CONFIG_DIR ]]; then\n\t\t\t\t\tif type -p kde5-config >/dev/null 2>&1; then\n\t\t\t\t\t\tKDE_CONFIG_DIR=$(kde5-config --localprefix)\n\t\t\t\t\telif type -p kde4-config >/dev/null 2>&1; then\n\t\t\t\t\t\tKDE_CONFIG_DIR=$(kde4-config --localprefix)\n\t\t\t\t\telif type -p kde-config >/dev/null 2>&1; then\n\t\t\t\t\t\tKDE_CONFIG_DIR=$(kde-config --localprefix)\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ -n $KDE_CONFIG_DIR ]]; then\n\t\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t\t\tKDE_CONFIG_DIR=${KDE_CONFIG_DIR%/}\n\t\t\t\t\tif [[ -f $KDE_CONFIG_DIR/share/config/kwinrc ]]; then\n\t\t\t\t\t\tWin_theme=\"$(\"${AWK}\" '/PluginLib=kwin3_/{gsub(/PluginLib=kwin3_/,\"\",$0); print $0; exit}' \"$KDE_CONFIG_DIR/share/config/kwinrc\")\"\n\t\t\t\t\t\tif [[ -z \"$Win_theme\" ]]; then\n\t\t\t\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$Win_theme\" == \"Not Applicable\" ]]; then\n\t\t\t\t\t\tif [[ -f $KDE_CONFIG_DIR/share/config/kdebugrc ]]; then\n\t\t\t\t\t\t\tWin_theme=\"$(\"${AWK}\" '/(decoration)/ {gsub(/\\[/,\"\",$1); print $1; exit}' \"$KDE_CONFIG_DIR/share/config/kdebugrc\")\"\n\t\t\t\t\t\t\tif [[ -z \"$Win_theme\" ]]; then\n\t\t\t\t\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$Win_theme\" == \"Not Applicable\" ]]; then\n\t\t\t\t\t\tif [[ -f $KDE_CONFIG_DIR/share/config/kdeglobals ]]; then\n\t\t\t\t\t\t\tWin_theme=\"$(\"${AWK}\" '/\\[General\\]/ {flag=1;next} /^$/{flag=0} flag {print}' \"$KDE_CONFIG_DIR/share/config/kdeglobals\" | grep -oP 'Name=\\K.*')\"\n\t\t\t\t\t\t\tif [[ -z \"$Win_theme\" ]]; then\n\t\t\t\t\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$Win_theme\" != \"Not Applicable\" ]]; then\n\t\t\t\t\t\tif [[ ${BASH_VERSINFO[0]} -ge 4 ]]; then\n\t\t\t\t\t\t\tif [[ ${BASH_VERSINFO[0]} -eq 4 && ${BASH_VERSINFO[1]} -gt 1 ]] || [[ ${BASH_VERSINFO[0]} -gt 4 ]]; then\n\t\t\t\t\t\t\t\tWin_theme=\"${Win_theme^}\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tWin_theme=\"$(tr '[:lower:]' '[:upper:]' <<< \"${Win_theme:0:1}\")${Win_theme:1}\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tWin_theme=\"$(tr '[:lower:]' '[:upper:]' <<< \"${Win_theme:0:1}\")${Win_theme:1}\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Marco'|'Metacity (Marco)')\n\t\t\t\tWin_theme=\"$(gsettings get org.mate.Marco.general theme)\"\n\t\t\t\tWin_theme=${Win_theme//\"'\"}\n\t\t\t;;\n\t\t\t'Metacity')\n\t\t\t\tif [ \"$(gconftool-2 -g /apps/metacity/general/theme)\" ]; then\n\t\t\t\t\tWin_theme=\"$(gconftool-2 -g /apps/metacity/general/theme)\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'OpenBox'|'Openbox')\n\t\t\t\tif [ -f \"${XDG_CONFIG_HOME:-${HOME}/.config}/openbox/rc.xml\" ]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"[<,>]\" '/<theme/ { getline; print $3 }' \"${XDG_CONFIG_HOME:-${HOME}/.config}/openbox/rc.xml\")\";\n\t\t\t\telif [[ -f ${XDG_CONFIG_HOME:-${HOME}/.config}/openbox/lxde-rc.xml && \"${DE}\" == \"LXDE\" ]]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"[<,>]\" '/<theme/ { getline; print $3 }' \"${XDG_CONFIG_HOME:-${HOME}/.config}/openbox/lxde-rc.xml\")\";\n\t\t\t\telif [[ -f ${XDG_CONFIG_HOME:-${HOME}/.config}/openbox/lxqt-rc.xml && \"${DE}\" =~ \"LXQt\" ]]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F'=' '/^theme/ {print $2}' ${HOME}/.config/lxqt/lxqt.conf)\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'PekWM')\n\t\t\t\tif [ -f \"$HOME/.pekwm/config\" ]; then\n\t\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\"/\" '/Theme/ {gsub(/\\\"/,\"\"); print $NF}' \"$HOME/.pekwm/config\")\"\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Sawfish')\n\t\t\t\tWin_theme=\"$(\"${AWK}\" -F\")\" '/\\(quote default-frame-style/{print $2}' \"$HOME/.sawfish/custom\" | sed 's/ (quote //')\"\n\t\t\t;;\n\t\t\t'TWin')\n\t\t\t\tif [[ -z $TDE_CONFIG_DIR ]]; then\n\t\t\t\t\tif type -p tde-config >/dev/null 2>&1; then\n\t\t\t\t\t\tTDE_CONFIG_DIR=$(tde-config --localprefix)\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [[ -n $TDE_CONFIG_DIR ]]; then\n\t\t\t\t\tTDE_CONFIG_DIR=${TDE_CONFIG_DIR%/}\n\t\t\t\t\tif [[ -f $TDE_CONFIG_DIR/share/config/kcmthememanagerrc ]]; then\n\t\t\t\t\t\tWin_theme=$(\"${AWK}\" '/CurrentTheme=/ {gsub(/CurrentTheme=/,\"\",$0); print $0; exit}' \"$TDE_CONFIG_DIR/share/config/kcmthememanagerrc\")\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ -z $Win_theme ]]; then\n\t\t\t\t\t\tWin_theme=\"Not Applicable\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Xfwm4')\n\t\t\t\tif [ -f \"${XDG_CONFIG_HOME:-${HOME}/.config}/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml\" ]; then\n\t\t\t\t\tWin_theme=\"$(xfconf-query -c xfwm4 -p /general/theme)\"\n\t\t\t\tfi\n\t\t\t;;\n\t\tesac\n\tfi\n\tverboseOut \"Finding window manager theme...found as '$Win_theme'\"\n}\n# WM Theme Detection - END\n\n# GTK Theme\\Icon\\Font Detection - BEGIN\ndetectgtk () {\n\tgtk2Theme=\"Not Found\"\n\tgtk3Theme=\"Not Found\"\n\tgtkIcons=\"Not Found\"\n\tgtkFont=\"Not Found\"\n\t# Font detection (OS X)\n\tif [[ ${distro} == \"Mac OS X\" || ${distro} == \"macOS\" ]]; then\n\t\tgtk2Theme=\"Not Applicable\"\n\t\tgtk3Theme=\"Not Applicable\"\n\t\tgtkIcons=\"Not Applicable\"\n\t\tif ps -U \"${USER}\" | grep -q -i 'finder'; then\n\t\t\tif [[ ${TERM_PROGRAM} == \"iTerm.app\" ]] && [ -f ~/Library/Preferences/com.googlecode.iterm2.plist ]; then\n\t\t\t\t# iTerm2\n\n\t\t\t\titerm2_theme_uuid=$(defaults read com.googlecode.iTerm2 \"Default Bookmark Guid\")\n\n\t\t\t\tOLD_IFS=$IFS\n\t\t\t\tIFS=$'\\n'\n\t\t\t\titerm2_theme_info=($(defaults read com.googlecode.iTerm2 \"New Bookmarks\" | grep -e 'Guid\\s*=\\s*\\w+' -e 'Normal Font'))\n\t\t\t\tIFS=$OLD_IFS\n\n\t\t\t\tfor i in $(seq 0 $((${#iterm2_theme_info[*]}/2-1))); do\n\t\t\t\t\tfound_uuid=$(str1=${iterm2_theme_info[$i*2]};echo \"${str1}\")\n\t\t\t\t\tif [[ $found_uuid == $iterm2_theme_info ]]; then\n\t\t\t\t\t\tgtkFont=$(str2=${iterm2_theme_info[$i*2+1]};echo ${str2:25:${#str2}-25-2} | sed 's/ [0-9]*$//')\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\t# Terminal.app\n\n\t\t\t\ttermapp_theme_name=$(defaults read com.apple.Terminal \"Default Window Settings\")\n\n\t\t\t\tOLD_IFS=$IFS\n\t\t\t\tIFS=$'\\n'\n\t\t\t\ttermapp_theme_info=$(/usr/libexec/PlistBuddy -c \\\n\t\t\t\t\t\"print ':Window Settings:${termapp_theme_name}:Font'\" \\\n\t\t\t\t\t~/Library/Preferences/com.apple.Terminal.plist \\\n\t\t\t\t\t| xxd -p |tr -d '\\n\\t\\s')\n\t\t\t\tIFS=$OLD_IFS\n\n\t\t\t\tgtkFont=$(echo \"${termapp_theme_info:288:60}\" | xxd -r -p | perl -pe 'binmode(STDIN, \":bytes\"); tr/A-Za-z0-9_\\!\\@\\#\\$\\%\\&\\^\\*\\(\\)-+=//dc;')\n\t\t\t\tgtkFont=$(echo \"${gtkFont:1}\" | sed 's/Z\\$.*//')\n\t\t\tfi\n\t\tfi\n\telse\n\t\tcase $DE in\n\t\t\t'KDE'*) # Desktop Environment found as \"KDE\"\n\t\t\t\tif type - p kde4-config >/dev/null 2>&1; then\n\t\t\t\t\tKDE_CONFIG_DIR=$(kde4-config --localprefix)\n\t\t\t\t\tif [[ -d ${KDE_CONFIG_DIR} ]]; then\n\t\t\t\t\t\tif [[ -f \"${KDE_CONFIG_DIR}/share/config/kdeglobals\" ]]; then\n\t\t\t\t\t\t\tKDE_CONFIG_FILE=\"${KDE_CONFIG_DIR}/share/config/kdeglobals\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telif type -p kde5-config >/dev/null 2>&1; then\n\t\t\t\t\tKDE_CONFIG_DIR=$(kde5-config --localprefix)\n\t\t\t\t\tif [[ -d ${KDE_CONFIG_DIR} ]]; then\n\t\t\t\t\t\tif [[ -f \"${KDE_CONFIG_DIR}/share/config/kdeglobals\" ]]; then\n\t\t\t\t\t\t\tKDE_CONFIG_FILE=\"${KDE_CONFIG_DIR}/share/config/kdeglobals\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telif type -p kde-config >/dev/null 2>&1; then\n\t\t\t\t\tKDE_CONFIG_DIR=$(kde-config --localprefix)\n\t\t\t\t\tif [[ -d ${KDE_CONFIG_DIR} ]]; then\n\t\t\t\t\t\tif [[ -f \"${KDE_CONFIG_DIR}/share/config/kdeglobals\" ]]; then\n\t\t\t\t\t\t\tKDE_CONFIG_FILE=\"${KDE_CONFIG_DIR}/share/config/kdeglobals\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [[ -n ${KDE_CONFIG_FILE} ]]; then\n\t\t\t\t\tif grep -q 'widgetStyle=' \"${KDE_CONFIG_FILE}\"; then\n\t\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F\"=\" '/widgetStyle=/ {print $2}' \"${KDE_CONFIG_FILE}\")\n\t\t\t\t\telif grep -q 'colorScheme=' \"${KDE_CONFIG_FILE}\"; then\n\t\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F\"=\" '/colorScheme=/ {print $2}' \"${KDE_CONFIG_FILE}\")\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'Theme=' \"${KDE_CONFIG_FILE}\"; then\n\t\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F\"=\" '/Theme=/ {print $2}' \"${KDE_CONFIG_FILE}\")\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'Font=' \"${KDE_CONFIG_FILE}\"; then\n\t\t\t\t\t\tgtkFont=$(\"${AWK}\" -F\"=\" '/font=/ {print $2}' \"${KDE_CONFIG_FILE}\")\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [[ -f $HOME/.gtkrc-2.0 ]]; then\n\t\t\t\t\tgtk2Theme=$(grep '^gtk-theme-name' \"$HOME\"/.gtkrc-2.0 | \"${AWK}\" -F'=' '{print $2}')\n\t\t\t\t\tgtk2Theme=${gtk2Theme//\\\"/}\n\t\t\t\t\tgtkIcons=$(grep '^gtk-icon-theme-name' \"$HOME\"/.gtkrc-2.0 | \"${AWK}\" -F'=' '{print $2}')\n\t\t\t\t\tgtkIcons=${gtkIcons//\\\"/}\n\t\t\t\t\tgtkFont=$(grep 'font_name' \"$HOME\"/.gtkrc-2.0 | \"${AWK}\" -F'=' '{print $2}')\n\t\t\t\t\tgtkFont=${gtkFont//\\\"/}\n\t\t\t\tfi\n\n\t\t\t\tif [[ -f $HOME/.config/gtk-3.0/settings.ini ]]; then\n\t\t\t\t\tgtk3Theme=$(grep '^gtk-theme-name=' \"$HOME\"/.config/gtk-3.0/settings.ini | \"${AWK}\" -F'=' '{print $2}')\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Cinnamon'*) # Desktop Environment found as \"Cinnamon\"\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tgtk3Theme=$(gsettings get org.cinnamon.desktop.interface gtk-theme)\n\t\t\t\t\tgtk3Theme=${gtk3Theme//\"'\"}\n\t\t\t\t\tgtk2Theme=${gtk3Theme}\n\n\t\t\t\t\tgtkIcons=$(gsettings get org.cinnamon.desktop.interface icon-theme)\n\t\t\t\t\tgtkIcons=${gtkIcons//\"'\"}\n\t\t\t\t\tgtkFont=$(gsettings get org.cinnamon.desktop.interface font-name)\n\t\t\t\t\tgtkFont=${gtkFont//\"'\"}\n\t\t\t\t\tif [ \"$background_detect\" == \"1\" ]; then gtkBackground=$(gsettings get org.gnome.desktop.background picture-uri); fi\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'GNOME'*|'Unity'*|'Budgie') # Desktop Environment found as \"GNOME\"\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tgtk3Theme=$(gsettings get org.gnome.desktop.interface gtk-theme)\n\t\t\t\t\tgtk3Theme=${gtk3Theme//\"'\"}\n\t\t\t\t\tgtk2Theme=${gtk3Theme}\n\t\t\t\t\tgtkIcons=$(gsettings get org.gnome.desktop.interface icon-theme)\n\t\t\t\t\tgtkIcons=${gtkIcons//\"'\"}\n\t\t\t\t\tgtkFont=$(gsettings get org.gnome.desktop.interface font-name)\n\t\t\t\t\tgtkFont=${gtkFont//\"'\"}\n\t\t\t\t\tif [ \"$background_detect\" == \"1\" ]; then gtkBackground=$(gsettings get org.gnome.desktop.background picture-uri); fi\n\t\t\t\telif type -p gconftool-2 >/dev/null 2>&1; then\n\t\t\t\t\tgtk2Theme=$(gconftool-2 -g /desktop/gnome/interface/gtk_theme)\n\t\t\t\t\tgtkIcons=$(gconftool-2 -g /desktop/gnome/interface/icon_theme)\n\t\t\t\t\tgtkFont=$(gconftool-2 -g /desktop/gnome/interface/font_name)\n\t\t\t\t\tif [ \"$background_detect\" == \"1\" ]; then\n\t\t\t\t\t\tgtkBackgroundFull=$(gconftool-2 -g /desktop/gnome/background/picture_filename)\n\t\t\t\t\t\tgtkBackground=$(echo \"$gtkBackgroundFull\" | \"${AWK}\" -F\"/\" '{print $NF}')\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'MATE'*) # MATE desktop environment\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tgtk3Theme=$(gsettings get org.mate.interface gtk-theme)\n\t\t\t\t\tgtk3Theme=${gtk3Theme//\"'\"}\n\t\t\t\t\tgtk2Theme=${gtk3Theme}\n\t\t\t\t\tgtkIcons=$(gsettings get org.mate.interface icon-theme)\n\t\t\t\t\tgtkIcons=${gtkIcons//\"'\"}\n\t\t\t\t\tgtkFont=$(gsettings get org.mate.interface font-name)\n\t\t\t\t\tgtkFont=${gtkFont//\"'\"}\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'Xfce'*) # Desktop Environment found as \"Xfce\"\n\t\t\t\tif [ \"$distro\" == \"BunsenLabs\" ] ; then\n\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F'\"' '/^gtk-theme/ {print $2}' \"$HOME\"/.gtkrc-2.0)\n\t\t\t\t\tgtk3Theme=$(\"${AWK}\" -F'=' '/^gtk-theme-name/ {print $2}' \"$HOME\"/.config/gtk-3.0/settings.ini)\n\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'\"' '/^gtk-icon-theme/ {print $2}' \"$HOME\"/.gtkrc-2.0)\n\t\t\t\t\tgtkFont=$(\"${AWK}\" -F'\"' '/^gtk-font-name/ {print $2}' \"$HOME\"/.gtkrc-2.0)\n\t\t\t\telse\n\t\t\t\t\tif type -p xfconf-query >/dev/null 2>&1; then\n\t\t\t\t\t\tgtk2Theme=$(xfconf-query -c xsettings -p /Net/ThemeName 2>/dev/null)\n\t\t\t\t\t\t[ -z \"$gtk2Theme\" ] && gtk2Theme=\"Not Found\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tif type -p xfconf-query >/dev/null 2>&1; then\n\t\t\t\t\t\tgtkIcons=$(xfconf-query -c xsettings -p /Net/IconThemeName 2>/dev/null)\n\t\t\t\t\t\t[ -z \"$gtkIcons\" ] && gtkIcons=\"Not Found\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tif type -p xfconf-query >/dev/null 2>&1; then\n\t\t\t\t\t\tgtkFont=$(xfconf-query -c xsettings -p /Gtk/FontName 2>/dev/null)\n\t\t\t\t\t\t[ -z \"$gtkFont\" ] && gtkFont=\"Not Identified\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t;;\n\t\t\t'LXDE'*)\n\t\t\t\tconfig_home=\"${XDG_CONFIG_HOME:-${HOME}/.config}\"\n\t\t\t\tif [ -f \"$config_home/lxde/config\" ]; then\n\t\t\t\t\tlxdeconf=\"/lxde/config\"\n\t\t\t\telif [ \"$distro\" == \"Trisquel\" ] || [ \"$distro\" == \"FreeBSD\" ]; then\n\t\t\t\t\tlxdeconf=\"\"\n\t\t\t\telif [ -f \"$config_home/lxsession/Lubuntu/desktop.conf\" ]; then\n\t\t\t\t\tlxdeconf=\"/lxsession/Lubuntu/desktop.conf\"\n\t\t\t\telse\n\t\t\t\t\tlxdeconf=\"/lxsession/LXDE/desktop.conf\"\n\t\t\t\tfi\n\n\t\t\t\tif grep -q 'sNet\\/ThemeName' \"${config_home}${lxdeconf}\" 2>/dev/null; then\n\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F'=' '/sNet\\/ThemeName/ {print $2}' \"${config_home}${lxdeconf}\")\n\t\t\t\tfi\n\n\t\t\t\tif grep -q 'IconThemeName' \"${config_home}${lxdeconf}\" 2>/dev/null; then\n\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'=' '/sNet\\/IconThemeName/ {print $2}' \"${config_home}${lxdeconf}\")\n\t\t\t\tfi\n\n\t\t\t\tif grep -q 'FontName' \"${config_home}${lxdeconf}\" 2>/dev/null; then\n\t\t\t\t\tgtkFont=$(\"${AWK}\" -F'=' '/sGtk\\/FontName/ {print $2}' \"${config_home}${lxdeconf}\")\n \t\t\t\tfi\n\t\t\t;;\n\n\t\t\t# /home/me/.config/rox.sourceforge.net/ROX-Session/Settings.xml\n\n\t\t\t*)\t# Lightweight or No DE Found\n\t\t\t\tif [ -f \"$HOME/.gtkrc-2.0\" ]; then\n\t\t\t\t\tif grep -q 'gtk-theme' \"$HOME/.gtkrc-2.0\"; then\n\t\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F'\"' '/^gtk-theme/ {print $2}' \"$HOME/.gtkrc-2.0\")\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'icon-theme' \"$HOME/.gtkrc-2.0\"; then\n\t\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'\"' '/^gtk-icon-theme/ {print $2}' \"$HOME/.gtkrc-2.0\")\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'font' \"$HOME/.gtkrc-2.0\"; then\n\t\t\t\t\t\tgtkFont=$(\"${AWK}\" -F'\"' '/^gtk-font-name/ {print $2}' \"$HOME/.gtkrc-2.0\")\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t# $HOME/.gtkrc.mine theme detect only\n\t\t\t\tif [[ -f \"$HOME/.gtkrc.mine\" ]]; then\n\t\t\t\t\tminegtkrc=\"$HOME/.gtkrc.mine\"\n\t\t\t\telif [[ -f \"$HOME/.gtkrc-2.0.mine\" ]]; then\n\t\t\t\t\tminegtkrc=\"$HOME/.gtkrc-2.0.mine\"\n\t\t\t\tfi\n\t\t\t\tif [ -f \"$minegtkrc\" ]; then\n\t\t\t\t\tif grep -q '^include' \"$minegtkrc\"; then\n\t\t\t\t\t\tgtk2Theme=$(grep '^include.*gtkrc' \"$minegtkrc\" | \"${AWK}\" -F \"/\" '{ print $5 }')\n\t\t\t\t\tfi\n\t\t\t\t\tif grep -q '^gtk-icon-theme-name' \"$minegtkrc\"; then\n\t\t\t\t\t\tgtkIcons=$(grep '^gtk-icon-theme-name' \"$minegtkrc\" | \"${AWK}\" -F '\"' '{print $2}')\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\t# /etc/gtk-2.0/gtkrc compatibility\n\t\t\t\tif [[ -f /etc/gtk-2.0/gtkrc && ! -f \"$HOME/.gtkrc-2.0\" && ! -f \"$HOME/.gtkrc.mine\" && ! -f \"$HOME/.gtkrc-2.0.mine\" ]]; then\n\t\t\t\t\tif grep -q 'gtk-theme-name' /etc/gtk-2.0/gtkrc; then\n\t\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F'\"' '/^gtk-theme-name/ {print $2}' /etc/gtk-2.0/gtkrc)\n\t\t\t\t\tfi\n\t\t\t\t\tif grep -q 'gtk-fallback-theme-name' /etc/gtk-2.0/gtkrc  && ! [ \"x$gtk2Theme\" = \"x\" ]; then\n\t\t\t\t\t\tgtk2Theme=$(\"${AWK}\" -F'\"' '/^gtk-fallback-theme-name/ {print $2}' /etc/gtk-2.0/gtkrc)\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'icon-theme' /etc/gtk-2.0/gtkrc; then\n\t\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'\"' '/^icon-theme/ {print $2}' /etc/gtk-2.0/gtkrc)\n\t\t\t\t\tfi\n\t\t\t\t\tif  grep -q 'gtk-fallback-icon-theme' /etc/gtk-2.0/gtkrc  && ! [ \"x$gtkIcons\" = \"x\" ]; then\n\t\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'\"' '/^gtk-fallback-icon-theme/ {print $2}' /etc/gtk-2.0/gtkrc)\n\t\t\t\t\tfi\n\n\t\t\t\t\tif grep -q 'font' /etc/gtk-2.0/gtkrc; then\n\t\t\t\t\t\tgtkFont=$(\"${AWK}\" -F'\"' '/^gtk-font-name/ {print $2}' /etc/gtk-2.0/gtkrc)\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\t# EXPERIMENTAL gtk3 Theme detection\n\t\t\t\tif [[ \"$gtk3Theme\" = \"Not Found\" && -f \"$HOME/.config/gtk-3.0/settings.ini\" ]]; then\n\t\t\t\t\tif grep -q 'gtk-theme-name' \"$HOME/.config/gtk-3.0/settings.ini\"; then\n\t\t\t\t\t\tgtk3Theme=$(\"${AWK}\" -F'=' '/^gtk-theme-name/ {print $2}' \"$HOME/.config/gtk-3.0/settings.ini\")\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\t# Proper gtk3 Theme detection\n\t\t\t\tif type -p gsettings >/dev/null 2>&1; then\n\t\t\t\t\tif [[ -z \"$gtk3Theme\"  || \"$gtk3Theme\" = \"Not Found\" ]]; then\n\t\t\t\t\t\tgtk3Theme=$(gsettings get org.gnome.desktop.interface gtk-theme 2>/dev/null)\n\t\t\t\t\t\tgtk3Theme=${gtk3Theme//\"'\"}\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\t# ROX-Filer icon detect only\n\t\t\t\tif [ -a \"${XDG_CONFIG_HOME:-${HOME}/.config}/rox.sourceforge.net/ROX-Filer/Options\" ]; then\n\t\t\t\t\tgtkIcons=$(\"${AWK}\" -F'[>,<]' '/icon_theme/ {print $3}' \"${XDG_CONFIG_HOME:-${HOME}/.config}/rox.sourceforge.net/ROX-Filer/Options\")\n\t\t\t\tfi\n\n\t\t\t\t# E17 detection\n\t\t\t\tif [ \"$E_ICON_THEME\" ]; then\n\t\t\t\t\tgtkIcons=${E_ICON_THEME}\n\t\t\t\t\tgtk2Theme=\"Not available.\"\n\t\t\t\t\tgtkFont=\"Not available.\"\n\t\t\t\tfi\n\n\t\t\t\t# Background Detection (feh, nitrogen)\n\t\t\t\tif [ \"$background_detect\" == \"1\" ]; then\n\t\t\t\t\tif [ -a \"$HOME/.fehbg\" ]; then\n\t\t\t\t\t\tgtkBackgroundFull=$(\"${AWK}\" -F\"'\" '/feh --bg/{print $2}' \"$HOME/.fehbg\" 2>/dev/null)\n\t\t\t\t\t\tgtkBackground=$(echo \"$gtkBackgroundFull\" | \"${AWK}\" -F\"/\" '{print $NF}')\n\t\t\t\t\telif [ -a \"${XDG_CONFIG_HOME:-${HOME}/.config}/nitrogen/bg-saved.cfg\" ]; then\n\t\t\t\t\t\tgtkBackground=$(\"${AWK}\" -F\"/\" '/file=/ {print $NF}' \"${XDG_CONFIG_HOME:-${HOME}/.config}/nitrogen/bg-saved.cfg\")\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [[ \"$distro\" == \"Cygwin\" || \"$distro\" == \"Msys\" ]]; then\n\t\t\t\t\tif [ \"$gtkFont\" == \"Not Found\" ]; then\n\t\t\t\t\t\tif [ -f \"$HOME/.minttyrc\" ]; then\n\t\t\t\t\t\t\tgtkFont=\"$(grep '^Font=.*' \"$HOME/.minttyrc\" | grep -o '[0-9A-z ]*$')\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t;;\n\t\tesac\n\tfi\n\tverboseOut \"Finding GTK2 theme...found as '$gtk2Theme'\"\n\tverboseOut \"Finding GTK3 theme...found as '$gtk3Theme'\"\n\tverboseOut \"Finding icon theme...found as '$gtkIcons'\"\n\tverboseOut \"Finding user font...found as '$gtkFont'\"\n\tif [[ -n \"$gtkBackground\" ]]; then\n\t\tverboseOut \"Finding background...found as '$gtkBackground'\"\n\tfi\n}\n# GTK Theme\\Icon\\Font Detection - END\n\n# Android-specific detections\ndetectdroid () {\n\tdistro_ver=$(getprop ro.build.version.release)\n\thostname=$(getprop net.hostname)\n\tdevice=\"$(getprop ro.product.model) ($(getprop ro.product.device))\"\n\tif [[ $(getprop ro.build.host) == \"cyanogenmod\" ]]; then\n\t\trom=$(getprop ro.cm.version)\n\telse\n\t\trom=$(getprop ro.build.display.id)\n\tfi\n\tbaseband=$(getprop ro.baseband)\n\tcpu=$(\"${AWK}\" -F': ' '/^Processor/ {P=$2} /^Hardware/ {H=$2} END {print H != \"\" ? H : P}' /proc/cpuinfo)\n}\n\n\n#######################\n# End Detection Phase\n#######################\n\ntakeShot () {\n\tif [[ -n \"$screenCommand\" ]]; then\n\t\t$screenCommand\n\telse\n\t\tshotfiles[1]=${shotfile}\n\t\tif [ \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]; then\n\t\t\tdisplays=\"$(system_profiler SPDisplaysDataType | grep -c 'Resolution:' | tr -d ' ')\"\n\t\t\tfor (( i=2; i<=displays; i++))\n\t\t\tdo\n\t\t\t\tshotfiles[$i]=\"$(echo ${shotfile} | sed \"s/\\(.*\\)\\./\\1_${i}./\")\"\n\t\t\tdone\n\t\t\tprintf \"Taking shot in 3.. \"; sleep 1\n\t\t\tprintf \"2.. \"; sleep 1\n\t\t\tprintf \"1.. \"; sleep 1\n\t\t\tprintf \"0.\\n\"\n\t\t\tscreencapture -x ${shotfiles[@]} &> /dev/null\n\t\telse\n\t\t\tif type -p scrot >/dev/null 2>&1; then\n\t\t\t\tscrot -cd3 \"${shotfile}\"\n\t\t\telse\n\t\t\t\terrorOut \"Cannot take screenshot! \\`scrot' not in \\$PATH\"\n\t\t\tfi\n\t\tfi\n\t\tif [ -f \"${shotfile}\" ]; then\n\t\t\tverboseOut \"Screenshot saved at '${shotfiles[*]}'\"\n\t\t\tif [[ \"${upload}\" == \"1\" ]]; then\n\t\t\t\tif type -p curl >/dev/null 2>&1; then\n\t\t\t\t\tprintf \"${bold}==>${c0}  Uploading your screenshot now...\"\n\t\t\t\t\tcase \"${uploadLoc}\" in\n\t\t\t\t\t\t'teknik')\n\t\t\t\t\t\t\tbaseurl='https://u.teknik.io'\n\t\t\t\t\t\t\tuploadurl='https://api.teknik.io/upload/post'\n\t\t\t\t\t\t\tret=$(curl -sf -F file=\"@${shotfiles[*]}\" ${uploadurl})\n\t\t\t\t\t\t\tdesturl=\"${ret##*url\\\":\\\"}\"\n\t\t\t\t\t\t\tdesturl=\"${desturl%%\\\"*}\"\n\t\t\t\t\t\t\tdesturl=\"${desturl//\\\\}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t\t'mediacrush')\n\t\t\t\t\t\t\tbaseurl='https://mediacru.sh'\n\t\t\t\t\t\t\tuploadurl='https://mediacru.sh/api/upload/file'\n\t\t\t\t\t\t\tret=$(curl -sf -F file=\"@${shotfiles[*]};type=image/png\" ${uploadurl})\n\t\t\t\t\t\t\tfilehash=$(echo \"${ret}\" | grep 'hash' | cut -d '\"' -f4)\n\t\t\t\t\t\t\tdesturl=\"${baseurl}/${filehash}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t\t'imgur')\n\t\t\t\t\t\t\tbaseurl='http://imgur.com'\n\t\t\t\t\t\t\tuploadurl='http://imgur.com/upload'\n\t\t\t\t\t\t\tret=$(curl -sf -F file=\"@${shotfiles[*]}\" ${uploadurl})\n\t\t\t\t\t\t\tfilehash=\"${ret##*hash\\\":\\\"}\"\n\t\t\t\t\t\t\tfilehash=\"${filehash%%\\\"*}\"\n\t\t\t\t\t\t\tdesturl=\"${baseurl}/${filehash}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t\t'hmp')\n\t\t\t\t\t\t\tbaseurl='http://i.hmp.me/m'\n\t\t\t\t\t\t\tuploadurl='http://hmp.me/ap/?uf=1'\n\t\t\t\t\t\t\tret=$(curl -sf -F a=\"@${shotfiles[*]};type=image/png\" ${uploadurl})\n\t\t\t\t\t\t\tdesturl=\"${ret##*img_path\\\":\\\"}\"\n\t\t\t\t\t\t\tdesturl=\"${desturl%%\\\"*}\"\n\t\t\t\t\t\t\tdesturl=\"${desturl//\\\\}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\t\t'local-example')\n\t\t\t\t\t\t\tbaseurl=\"http://www.example.com\"\n\t\t\t\t\t\t\tserveraddr=\"www.example.com\"\n\t\t\t\t\t\t\tscptimeout=\"20\"\n\t\t\t\t\t\t\tserverdir=\"/path/to/directory\"\n\t\t\t\t\t\t\tscp -qo ConnectTimeout=\"${scptimeout}\" \"${shotfiles[*]}\" \"${serveraddr}:${serverdir}\"\n\t\t\t\t\t\t\tdesturl=\"${baseurl}/${shotfile}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tprintf \"your screenshot can be viewed at ${desturl}\\n\"\n\t\t\t\telse\n\t\t\t\t\terrorOut \"Cannot upload screenshot! \\`curl' not in \\$PATH\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\tif type -p scrot >/dev/null 2>&1; then\n\t\t\t\terrorOut \"ERROR: Problem saving screenshot to ${shotfiles[*]}\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\n\nasciiText () {\n# Distro logos and ASCII outputs\n\tif [[ \"$asc_distro\" ]]; then\n\t\tmyascii=\"${asc_distro}\"\n\telif [[ \"$art\" ]]; then\n\t\tmyascii=\"custom\"\n\telif [[ \"$fake_distro\" ]]; then\n\t\tmyascii=\"${fake_distro}\"\n\telse\n\t\tmyascii=\"${distro}\"\n\tfi\n\tcase ${myascii} in\n\t\t\"custom\")\n\t\t\tsource \"$art\"\n\t\t;;\n\n\t\t\"ALDOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light grey') # light grey\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"27\"\n\t\t\tfulloutput=(\n\"${c1}                           %s\"\n\"${c1}           # ## #          %s\"\n\"${c1}        # ######## #       %s\"\n\"${c1}      # ### ######## #     %s\"\n\"${c1}     # #### ######### #    %s\"\n\"${c1}   # #### # # # # #### #   %s\"\n\"${c1}  # ##### #       ##### #  %s\"\n\"${c1}   # ###### ##### #### #   %s\"\n\"${c1}    # ############### #    %s\"\n\"${c1}                           %s\"\n\"${c2}        _ ___   ___  ___   %s\"\n\"${c2}   __ _| |   \\ / _ \\/ __|  %s\"\n\"${c2}  / _' | | |) | (_) \\__ \\  %s\"\n\"${c2}  \\__,_|_|___/ \\___/|___/  %s\"\n\"${c1}                           %s\"\n\"${c1}                           %s\")\n\t\t;;\n\n\t\t\"Alpine Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light\n\t\t\t\tc2=$(getColor 'blue') # Dark\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"34\"\n\t\t\tfulloutput=(\n\"${c1}        ................          %s\"\n\"${c1}       ∴::::::::::::::::∴         %s\"\n\"${c1}      ∴::::::::::::::::::∴        %s\"\n\"${c1}     ∴::::::::::::::::::::∴       %s\"\n\"${c1}    ∴:::::::. :::::':::::::∴      %s\"\n\"${c1}   ∴:::::::.   ;::; ::::::::∴     %s\"\n\"${c1}  ∴::::::;      ∵     :::::::∴    %s\"\n\"${c1} ∴:::::.     .         .::::::∴   %s\"\n\"${c1} ::::::     :::.    .    ::::::   %s\"\n\"${c1} ∵::::     ::::::.  ::.   ::::∵   %s\"\n\"${c1}  ∵:..   .:;::::::: :::.  :::∵    %s\"\n\"${c1}   ∵::::::::::::::::::::::::∵     %s\"\n\"${c1}    ∵::::::::::::::::::::::∵      %s\"\n\"${c1}     ∵::::::::::::::::::::∵       %s\"\n\"${c1}      ::::::::::::::::::::        %s\"\n\"${c1}       ∵::::::::::::::::∵         %s\")\n\t\t;;\n\n\t\t\"AlmaLinux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'red') # White\n\t\t\t\tc2=$(getColor 'light orange') # Light Red\n\t\t\t\tc3=$(getColor 'purple')\n\t\t\t\tc4=$(getColor 'green')\n\t\t\t\tc5=$(getColor 'cyan')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\t\tc5=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c1}         'c:.                             %s\"\n\"${c1}        lkkkx, ..       ${c2}..   ,cc,         %s\"\n\"${c1}        okkkk:ckkx'  ${c2}.lxkkx.okkkkd        %s\"\n\"${c1}        .:llcokkx'  ${c2}:kkkxkko:xkkd,        %s\"\n\"${c1}      .xkkkkdood:  ${c2};kx,  .lkxlll;         %s\"\n\"${c1}       xkkx.       ${c2}xk'     xkkkkk:        %s\"\n\"${c1}       'xkx.       ${c2}xd      .....,.        %s\"\n\"${c3}      .. ${c1}:xkl'     ${c2}:c      ..''..         %s\"\n\"${c3}    .dkx'  ${c1}.:ldl:'. ${c2}'  ${c4}':lollldkkxo;      %s\"\n\"${c3}  .''lkkko'                     ${c4}ckkkx.    %s\"\n\"${c3}'xkkkd:kkd.       ..  ${c5};'        ${c4}:kkxo.    %s\"\n\"${c3},xkkkd;kk'      ,d;    ${c5}ld.   ${c4}':dkd::cc,   %s\"\n\"${c3} .,,.;xkko'.';lxo.      ${c5}dx,  ${c4}:kkk'xkkkkc  %s\"\n\"${c3}     'dkkkkkxo:.        ${c5};kx  ${c4}.kkk:;xkkd.  %s\"\n\"${c3}       .....   ${c5}.;dk:.   ${c5}lkk.  ${c4}:;,         %s\"\n\"             ${c5}:kkkkkkkdoxkkx    %s\"\n\"              ${c5},c,,;;;:xkkd.    %s\"\n\"                ${c5};kkkkl...      %s\"\n\"                ${c5};kkkkl         %s\"\n\"                 ${c5},od; %s\")\n\t\t;;\n\n\t\t\"Arch Linux - Old\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c1}              __                     %s\"\n\"${c1}          _=(SDGJT=_                 %s\"\n\"${c1}        _GTDJHGGFCVS)                %s\"\n\"${c1}       ,GTDJGGDTDFBGX0               %s\"\n\"${c1}      JDJDIJHRORVFSBSVL${c2}-=+=,_        %s\"\n\"${c1}     IJFDUFHJNXIXCDXDSV,${c2}  \\\"DEBL      %s\"\n\"${c1}    [LKDSDJTDU=OUSCSBFLD.${c2}   '?ZWX,   %s\"\n\"${c1}   ,LMDSDSWH'     \\`DCBOSI${c2}     DRDS], %s\"\n\"${c1}   SDDFDFH'         !YEWD,${c2}   )HDROD  %s\"\n\"${c1}  !KMDOCG            &GSU|${c2}\\_GFHRGO\\'  %s\"\n\"${c1}  HKLSGP'${c2}           __${c1}\\TKM0${c2}\\GHRBV)'  %s\"\n\"${c1} JSNRVW'${c2}       __+MNAEC${c1}\\IOI,${c2}\\BN'     %s\"\n\"${c1} HELK['${c2}    __,=OFFXCBGHC${c1}\\FD)         %s\"\n\"${c1} ?KGHE ${c2}\\_-#DASDFLSV='${c1}    'EF         %s\"\n\"${c1} 'EHTI                    !H         %s\"\n\"${c1}  \\`0F'                    '!         %s\"\n\"${c1}                                     %s\"\n\"${c1}                                     %s\")\n\t\t;;\n\n\t\t\"Arch Linux\"|\"Arch Linux 32\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light cyan') # Light\n\t\t\t\tc2=$(getColor 'cyan') # Dark\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}                   -\\`                 \"\n\"${c1}                  .o+\\`                %s\"\n\"${c1}                 \\`ooo/                %s\"\n\"${c1}                \\`+oooo:               %s\"\n\"${c1}               \\`+oooooo:              %s\"\n\"${c1}               -+oooooo+:             %s\"\n\"${c1}             \\`/:-:++oooo+:            %s\"\n\"${c1}            \\`/++++/+++++++:           %s\"\n\"${c1}           \\`/++++++++++++++:          %s\"\n\"${c1}          \\`/+++o${c2}oooooooo${c1}oooo/\\`        %s\"\n\"${c2}         ${c1}./${c2}ooosssso++osssssso${c1}+\\`       %s\"\n\"${c2}        .oossssso-\\`\\`\\`\\`/ossssss+\\`      %s\"\n\"${c2}       -osssssso.      :ssssssso.     %s\"\n\"${c2}      :osssssss/        osssso+++.    %s\"\n\"${c2}     /ossssssss/        +ssssooo/-    %s\"\n\"${c2}   \\`/ossssso+/:-        -:/+osssso+-  %s\"\n\"${c2}  \\`+sso+:-\\`                 \\`.-/+oso: %s\"\n\"${c2} \\`++:.                           \\`-/+/%s\"\n\"${c2} .\\`                                 \\`/%s\")\n\t\t;;\n\n\t\t\"Artix Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'cyan')\n\t\t\t\tc2=$(getColor 'blue')\n\t\t\t\tc3=$(getColor 'green')\n\t\t\t\tc4=$(getColor 'dark gray')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\"\"\n\"${c1}                        d${c2}c.           %s\"\n\"${c1}                       x${c2}dc.           %s\"\n\"${c1}                  '.${c4}.${c1} d${c2}dlc.           %s\"\n\"${c1}                 c${c2}0d:${c1}o${c2}xllc;           %s\"\n\"${c1}                :${c2}0ddlolc,lc,          %s\"\n\"${c1}           :${c1}ko${c4}.${c1}:${c2}0ddollc..dlc.         %s\"\n\"${c1}          ;${c1}K${c2}kxoOddollc'  cllc.        %s\"\n\"${c1}         ,${c1}K${c2}kkkxdddllc,   ${c4}.${c2}lll:        %s\"\n\"${c1}        ,${c1}X${c2}kkkddddlll;${c3}...';${c1}d${c2}llll${c3}dxk:   %s\"\n\"${c1}       ,${c1}X${c2}kkkddddllll${c3}oxxxddo${c2}lll${c3}oooo,   %s\"\n\"${c3}    xxk${c1}0${c2}kkkdddd${c1}o${c2}lll${c1}o${c3}ooooooolooooc;${c1}.   %s\"\n\"${c3}    ddd${c2}kkk${c1}d${c2}ddd${c1}ol${c2}lc:${c3}:;,'.${c3}... .${c2}lll;     %s\"\n\"${c1}   .${c3}xd${c1}x${c2}kk${c1}xd${c2}dl${c1}'cl:${c4}.           ${c2}.llc,    %s\"\n\"${c1}   .${c1}0${c2}kkkxddl${c4}. ${c2};'${c4}.             ${c2};llc.   %s\"\n\"${c1}  .${c1}K${c2}Okdcddl${c4}.                   ${c2}cllc${c4}.  %s\"\n\"${c1}  0${c2}Okd''dc.                    .cll;  %s\"\n\"${c1} k${c2}Okd'                          .llc, %s\"\n\"${c1} d${c2}Od,                            'lc. %s\"\n\"${c1} :,${c4}.                              ${c2}... %s\"\n\"                                                   %s\")\n\t\t;;\n\n\t\t\"blackPanther OS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'yellow') # Light Yellow\n\t\t\t\tc2=$(getColor 'white') # Bold Red\n\t\t\t\tc3=$(getColor 'light red') # Light Red\n\t\t\t\tc4=$(getColor 'dark grey')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c4}                oxoo              %s\"\n\"${c4}           ooooooxxxxxxxx         %s\"\n\"${c4}      oooooxxxxxxxxxx${c3}O${c1}o.${c4}xx        %s\"\n\"${c4}    oo# ###xxxxxxxxxxx###xxx      %s\"\n\"${c4}  oo .oooooxxxxxxxxx##   #oxx     %s\"\n\"${c4} o  ##xxxxxxxxx###x##   .o###     %s\"\n\"${c4}  .oxxxxxxxx###   ox  .           %s\"\n\"${c4} ooxxxx#xxxxxx     o##            %s\"\n\"${c4}.oxx# #oxxxxx#                    %s\"\n\"${c4}ox#  ooxxxxxx#                  o %s\"\n\"${c4}x#  ooxxxxxxxx           ox     ox%s\"\n\"${c4}x# .oxxxxxxxxxxx        o#     oox%s\"\n\"${c4}#  oxxxxx##xxxxxxooooooo#      o# %s\"\n\"${c4}  .oxxxxxooxxxxxx######       ox# %s\"\n\"${c4}  oxxxxxo oxxxxxxxx         oox## %s\"\n\"${c4}  oxxxxxx  oxxxxxxxxxo   oooox##  %s\"\n\"${c4}   o#xxxxx  oxxxxxxxxxxxxxxxx##   %s\"\n\"${c4}    ##xxxxx  o#xxxxxxxxxxxxx##    %s\"\n\"${c4}      ##xxxx   o#xxxxxxxxx##      %s\"\n\"${c4}         ###xo.  o##xxx###        %s\"\n\"${c4}                                  %s\")\n\t\t\t;;\n\n\t\t\"ArcoLinux\")\n\t\t\tif [[ \"$no_color\" != \"0\" ]]; then\n\t\t\t\tc1=$(getColor 'arco_blue') # dark\n\t\t\t\tc2=$(getColor 'white') # light\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\n\"${c1}                    /-                   \"\n\"${c1}                   ooo:                  %s\"\n\"${c1}                  yoooo/                 %s\"\n\"${c1}                 yooooooo                %s\"\n\"${c1}                yooooooooo               %s\"\n\"${c1}               yooooooooooo              %s\"\n\"${c1}             .yooooooooooooo             %s\"\n\"${c1}            .oooooooooooooooo            %s\"\n\"${c1}           .oooooooarcoooooooo           %s\"\n\"${c1}          .ooooooooo-oooooooooo          %s\"\n\"${c1}         .ooooooooo-  oooooooooo         %s\"\n\"${c1}        :ooooooooo.    :ooooooooo        %s\"\n\"${c1}       :ooooooooo.      :ooooooooo       %s\"\n\"${c1}      :oooarcooo         .oooarcooo      %s\"\n\"${c1}     :ooooooooy           .ooooooooo     %s\"\n\"${c1}    :ooooooooo   ${c2}/ooooooooooooooooooo${c1}    %s\"\n\"${c1}   :ooooooooo      ${c2}.-ooooooooooooooooo.${c1}  %s\"\n\"${c1}  ooooooooo-             ${c2}-ooooooooooooo.${c1} %s\"\n\"${c1} ooooooooo-                 ${c2}.-oooooooooo.${c1}%s\"\n\"${c1}ooooooooo.                     ${c2}-ooooooooo${c1}%s\")\n\t\t;;\n\n\t\t\"Alter Linux\"|\"Alter\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light cyan') # Light\n\t\t\t\tc2=$(getColor 'cyan') # Dark\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}                      &,                       \"\n\"${c1}                    ^WWWw                      %s\"\n\"${c1}                   !wwwwww                     %s\"\n\"${c1}                  !wwwwwwww                    %s\"\n\"${c1}                 #wwwwwwwwww                   %s\"\n\"${c1}                @wwwwwwwwwwww                  %s\"\n\"${c1}               wwwwwwwwwwwwwww                 %s\"\n\"${c1}              wwwwwwwwwwwwwwwww                %s\"\n\"${c1}             wwwwwwwwwwwwwwwwwww               %s\"\n\"${c1}            wwwwwwwwwwwwwwwwwwww,              %s\"\n\"${c1}           w~1i.wwwwwwwwwwwwwwwww,             %s\"\n\"${c1}         3~:~1lli.wwwwwwwwwwwwwwww.            %s\"\n\"${c1}        :~~:~?ttttzwwwwwwwwwwwwwwww            %s\"\n\"${c1}       #<~:~~~~?llllltO-.wwwwwwwwwww           %s\"\n\"${c1}      #~:~~:~:~~?ltlltlttO-.wwwwwwwww          %s\"\n\"${c1}     @~:~~:~:~:~~(zttlltltlOda.wwwwwww         %s\"\n\"${c1}    @~:~~: ~:~~:~:(zltlltlO    a,wwwwww        %s\"\n\"${c1}   8~~:~~:~~~~:~~~~_1ltltu          ,www       %s\"\n\"${c1}  5~~:~~:~~:~~:~~:~~~_1ltq             N,,     %s\"\n\"${c1} g~:~~:~~~:~~:~~:~:~~~~1q                N,    %s\" )\n\t\t;;\n\n\t\t\"Mint\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light green') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c2}                                      %s\"\n\"${c2} MMMMMMMMMMMMMMMMMMMMMMMMMmds+.       %s\"\n\"${c2} MMm----::-://////////////oymNMd+\\`    %s\"\n\"${c2} MMd      ${c1}/++                ${c2}-sNMd:   %s\"\n\"${c2} MMNso/\\`  ${c1}dMM    \\`.::-. .-::.\\` ${c2}.hMN:  %s\"\n\"${c2} ddddMMh  ${c1}dMM   :hNMNMNhNMNMNh: ${c2}\\`NMm  %s\"\n\"${c2}     NMm  ${c1}dMM  .NMN/-+MMM+-/NMN\\` ${c2}dMM  %s\"\n\"${c2}     NMm  ${c1}dMM  -MMm  \\`MMM   dMM. ${c2}dMM  %s\"\n\"${c2}     NMm  ${c1}dMM  -MMm  \\`MMM   dMM. ${c2}dMM  %s\"\n\"${c2}     NMm  ${c1}dMM  .mmd  \\`mmm   yMM. ${c2}dMM  %s\"\n\"${c2}     NMm  ${c1}dMM\\`  ..\\`   ...   ydm. ${c2}dMM  %s\"\n\"${c2}     hMM- ${c1}+MMd/-------...-:sdds  ${c2}dMM  %s\"\n\"${c2}     -NMm- ${c1}:hNMNNNmdddddddddy/\\`  ${c2}dMM  %s\"\n\"${c2}      -dMNs-${c1}\\`\\`-::::-------.\\`\\`    ${c2}dMM  %s\"\n\"${c2}       \\`/dMNmy+/:-------------:/yMMM  %s\"\n\"${c2}          ./ydNMMMMMMMMMMMMMMMMMMMMM  %s\"\n\"${c2}             \\.MMMMMMMMMMMMMMMMMMM    %s\"\n\"${c2}                                      %s\")\n\t\t;;\n\n\t\t\"LMDE\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light green') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"31\"\n\t\t\tfulloutput=(\n\"${c1}          \\`.-::---..           %s\"\n\"${c2}       .:++++ooooosssoo:.      %s\"\n\"${c2}     .+o++::.      \\`.:oos+.    %s\"\n\"${c2}    :oo:.\\`             -+oo${c1}:   %s\"\n\"${c2}  ${c1}\\`${c2}+o/\\`    .${c1}::::::${c2}-.    .++-${c1}\\`  %s\"\n\"${c2} ${c1}\\`${c2}/s/    .yyyyyyyyyyo:   +o-${c1}\\`  %s\"\n\"${c2} ${c1}\\`${c2}so     .ss       ohyo\\` :s-${c1}:  %s\"\n\"${c2} ${c1}\\`${c2}s/     .ss  h  m  myy/ /s\\`${c1}\\`  %s\"\n\"${c2} \\`s:     \\`oo  s  m  Myy+-o:\\`   %s\"\n\"${c2} \\`oo      :+sdoohyoydyso/.     %s\"\n\"${c2}  :o.      .:////////++:       %s\"\n\"${c2}  \\`/++        ${c1}-:::::-          %s\"\n\"${c2}   ${c1}\\`${c2}++-                        %s\"\n\"${c2}    ${c1}\\`${c2}/+-                       %s\"\n\"${c2}      ${c1}.${c2}+/.                     %s\"\n\"${c2}        ${c1}.${c2}:+-.                  %s\"\n\"${c2}           \\`--.\\`\\`              %s\"\n\"${c2}                               %s\")\n\t\t;;\n\n\t\t\"Quirinux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'purple') # Purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"31\"\n         fulloutput=(\n\"$c2          @=++++++++++=@            %s\"\n\"$c2       =++++++++++++++++++=        %s\"\n\"$c2     *++++++++++++++++++++++*      %s\"\n\"$c2   =++++++++++++++++++++++++++=    %s\"\n\"$c2  *++++++++$c1-..........-$c2++++++++*   %s\"\n\"$c2 =++++++++$c1..............$c2++++++++=  %s\"\n\"$c2@++++++++$c1:.....$c2:++$c1:.....:$c2++++++++@ %s\"\n\"$c2=++++++++$c1:.....$c2++++$c1.....:$c2++++++++= %s\"\n\"$c2=++++++++$c1:.....$c2++++$c1.....:$c2++++++++= %s\"\n\"$c2#++++++++$c1:.....$c2++++$c1.....:$c2++++++++# %s\"\n\"$c2 +++++++++$c1......$c2--$c1......$c2+++++++++  %s\"\n\"$c2 @++++++++$c1:............:$c2++++++++@  %s\"\n\"$c2  @+++++++++++$c1-....-$c2+++++++++++@   %s\"\n\"$c2    *++++++++++$c1::::$c2++++++++++*     %s\"\n\"$c2      *++++++++++++++++++++*       %s\"\n\"$c2        @*++++++++++++++*@         %s\"\n\"$c2             @#====#@ %s\")\n\t\t;;\t\t\n\n\t\t\"Ubuntu\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\t\tc3=$(getColor 'yellow') # Bold Yellow\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c2}                          ./+o+-      %s\"\n\"${c1}                  yyyyy- ${c2}-yyyyyy+     %s\"\n\"${c1}               ${c1}://+//////${c2}-yyyyyyo     %s\"\n\"${c3}           .++ ${c1}.:/++++++/-${c2}.+sss/\\`     %s\"\n\"${c3}         .:++o:  ${c1}/++++++++/:--:/-     %s\"\n\"${c3}        o:+o+:++.${c1}\\`..\\`\\`\\`.-/oo+++++/    %s\"\n\"${c3}       .:+o:+o/.${c1}          \\`+sssoo+/   %s\"\n\"${c1}  .++/+:${c3}+oo+o:\\`${c1}             /sssooo.  %s\"\n\"${c1} /+++//+:${c3}\\`oo+o${c1}               /::--:.  %s\"\n\"${c1} \\+/+o+++${c3}\\`o++o${c2}               ++////.  %s\"\n\"${c1}  .++.o+${c3}++oo+:\\`${c2}             /dddhhh.  %s\"\n\"${c3}       .+.o+oo:.${c2}          \\`oddhhhh+   %s\"\n\"${c3}        \\+.++o+o\\`${c2}\\`-\\`\\`\\`\\`.:ohdhhhhh+    %s\"\n\"${c3}         \\`:o+++ ${c2}\\`ohhhhhhhhyo++os:     %s\"\n\"${c3}           .o:${c2}\\`.syhhhhhhh/${c3}.oo++o\\`     %s\"\n\"${c2}               /osyyyyyyo${c3}++ooo+++/    %s\"\n\"${c2}                   \\`\\`\\`\\`\\` ${c3}+oo+++o\\:    %s\"\n\"${c3}                          \\`oo++.      %s\")\n\t\t;;\n\n\t\t\"KDE neon\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"43\"\n\t\t\tfulloutput=(\n\"${c1}              \\`..---+/---..\\`               %s\"\n\"${c1}          \\`---.\\`\\`   \\`\\`   \\`.---.\\`           %s\"\n\"${c1}       .--.\\`        \\`\\`        \\`-:-.        %s\"\n\"${c1}     \\`:/:     \\`.----//----.\\`     :/-       %s\"\n\"${c1}    .:.    \\`---\\`          \\`--.\\`    .:\\`     %s\"\n\"${c1}   .:\\`   \\`--\\`                .:-    \\`:.    %s\"\n\"${c1}  \\`/    \\`:.      \\`.-::-.\\`      -:\\`   \\`/\\`   %s\"\n\"${c1}  /.    /.     \\`:++++++++:\\`     .:    .:   %s\"\n\"${c1} \\`/    .:     \\`+++++++++++/      /\\`   \\`+\\`  %s\"\n\"${c1} /+\\`   --     .++++++++++++\\`     :.   .+:  %s\"\n\"${c1} \\`/    .:     \\`+++++++++++/      /\\`   \\`+\\`  %s\"\n\"${c1}  /\\`    /.     \\`:++++++++:\\`     .:    .:   %s\"\n\"${c1}  ./    \\`:.      \\`.:::-.\\`      -:\\`   \\`/\\`   %s\"\n\"${c1}   .:\\`   \\`--\\`                .:-    \\`:.    %s\"\n\"${c1}    .:.    \\`---\\`          \\`--.\\`    .:\\`     %s\"\n\"${c1}     \\`:/:     \\`.----//----.\\`     :/-       %s\"\n\"${c1}       .-:.\\`        \\`\\`        \\`-:-.        %s\"\n\"${c1}          \\`---.\\`\\`   \\`\\`   \\`.---.\\`           %s\"\n\"${c1}              \\`..---+/---..\\`               %s\")\n\t\t;;\n\n\t\t\"Debian\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"32\"\n\t\t\tfulloutput=(\n\"${c1}         _,met\\$\\$\\$\\$\\$gg.          %s\"\n\"${c1}      ,g\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$P.       %s\"\n\"${c1}    ,g\\$\\$P\\\"\\\"       \\\"\\\"\\\"Y\\$\\$.\\\".     %s\"\n\"${c1}   ,\\$\\$P'              \\`\\$\\$\\$.     %s\"\n\"${c1}  ',\\$\\$P       ,ggs.     \\`\\$\\$b:   %s\"\n\"${c1}  \\`d\\$\\$'     ,\\$P\\\"\\'   ${c2}.${c1}    \\$\\$\\$    %s\"\n\"${c1}   \\$\\$P      d\\$\\'     ${c2},${c1}    \\$\\$P    %s\"\n\"${c1}   \\$\\$:      \\$\\$.   ${c2}-${c1}    ,d\\$\\$'    %s\"\n\"${c1}   \\$\\$\\;      Y\\$b._   _,d\\$P'     %s\"\n\"${c1}   Y\\$\\$.    ${c2}\\`.${c1}\\`\\\"Y\\$\\$\\$\\$P\\\"'         %s\"\n\"${c1}   \\`\\$\\$b      ${c2}\\\"-.__              %s\"\n\"${c1}    \\`Y\\$\\$                        %s\"\n\"${c1}     \\`Y\\$\\$.                      %s\"\n\"${c1}       \\`\\$\\$b.                    %s\"\n\"${c1}         \\`Y\\$\\$b.                 %s\"\n\"${c1}            \\`\\\"Y\\$b._             %s\"\n\"${c1}                \\`\\\"\\\"\\\"\\\"           %s\"\n\"${c1}                                %s\")\n\t\t;;\n\n\t\t\"Proxmox VE\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white')\n\t\t\t\tc2=$(getColor 'orange')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}           .://:\\`              \\`://:.           %s\"\n\"${c1}         \\`hMMMMMMd/          /dMMMMMMh\\`         %s\"\n\"${c1}          \\`sMMMMMMMd:      :mMMMMMMMs\\`          %s\"\n\"${c2}  \\`-/+oo+/:${c1}\\`.yMMMMMMMh-  -hMMMMMMMy.\\`${c2}:/+oo+/-\\`  %s\"\n\"${c2}  \\`:oooooooo/${c1}\\`-hMMMMMMMyyMMMMMMMh-\\`${c2}/oooooooo:\\`  %s\"\n\"${c2}    \\`/oooooooo:${c1}\\`:mMMMMMMMMMMMMm:\\`${c2}:oooooooo/\\`    %s\"\n\"${c2}      ./ooooooo+-${c1} +NMMMMMMMMN+ ${c2}-+ooooooo/.      %s\"\n\"${c2}        .+ooooooo+-${c1}\\`oNMMMMNo\\`${c2}-+ooooooo+.        %s\"\n\"${c2}          -+ooooooo/.${c1}\\`sMMs\\`${c2}./ooooooo+-          %s\"\n\"${c2}            :oooooooo/${c1}\\`..\\`${c2}/oooooooo:            %s\"\n\"${c2}            :oooooooo/\\`${c1}..${c2}\\`/oooooooo:            %s\"\n\"${c2}          -+ooooooo/.${c1}\\`sMMs${c2}\\`./ooooooo+-          %s\"\n\"${c2}        .+ooooooo+-\\`${c1}oNMMMMNo${c2}\\`-+ooooooo+.        %s\"\n\"${c2}      ./ooooooo+-${c1} +NMMMMMMMMN+ ${c2}-+ooooooo/.      %s\"\n\"${c2}    \\`/oooooooo:\\`${c1}:mMMMMMMMMMMMMm:${c2}\\`:oooooooo/\\`    %s\"\n\"${c2}  \\`:oooooooo/\\`${c1}-hMMMMMMMyyMMMMMMMh-${c2}\\`/oooooooo:\\`  %s\"\n\"${c2}  \\`-/+oo+/:\\`${c1}.yMMMMMMMh-  -hMMMMMMMy.${c2}\\`:/+oo+/-\\`  %s\"\n\"${c1}          \\`sMMMMMMMm:      :dMMMMMMMs          %s\"\n\"${c1}         \\`hMMMMMMd/          /dMMMMMMh         %s\"\n\"${c1}           \\`://:\\`              \\`://:\\`           %s\")\n\t\t;;\n\n\t\t\"Siduction\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"35\"\n\t\t\tfulloutput=(\n\"${c1}               _ass,,                %s\"\n\"${c1}              jmk  dm.               %s\"\n\"${c1}              3##qwm#\\`               %s\"\n\"${c1}          .    \\\"9XZ?\\` _aas,          %s\"\n\"${c1}        ap!!n,      _dW(--\\$a         %s\"\n\"${c1}       )#hc_m#      ]mmwaam#\\`        %s\"\n\"${c1}        ?##WZ^      -4#####! _as,.   %s\"\n\"${c1}  _ais,   -   _au11a. -\\\"\\\"\\\" <m#\\\"\\\"\\\"Wc  %s\"\n\"${c1} )m6_]m,      m#c__m6     :m#m,_<m#> %s\"\n\"${c1} -Y#m#!       4###m#r     -\\$##mBm#Z\\` %s\"\n\"${c1}    -    _as,. \\\"???~ _aawa,.!S##Z?\\`  %s\"\n\"${c1}        ym= 3h.     <##' -Wo         %s\"\n\"${c1}        \\$#mm#D\\`     ]B#qww##         %s\"\n\"${c1}         \\\"?!\\\"\\`  _s,.-?#m##T'         %s\"\n\"${c1}              _dZ\\\"\\\"4a  --            %s\"\n\"${c1}              3Wmaam#;               %s\"\n\"${c1}              -9###Z!                %s\")\n\n\t\t;;\n\n\t\t\"Devuan\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light purple') # Light purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"36\"\n\t\t\tfulloutput=(\n\"${c1}                                    %s\"\n\"${c1}     ..,,;;;::;,..                  %s\"\n\"${c1}             \\`':ddd;:,.             %s\"\n\"${c1}                   \\`'dPPd:,.        %s\"\n\"${c1}                       \\`:b\\$\\$b\\`.     %s\"\n\"${c1}                          'P\\$\\$\\$d\\`   %s\"\n\"${c1}                           .\\$\\$\\$\\$\\$\\`  %s\"\n\"${c1}                           ;\\$\\$\\$\\$\\$P  %s\"\n\"${c1}                        .:P\\$\\$\\$\\$\\$\\$\\`  %s\"\n\"${c1}                    .,:b\\$\\$\\$\\$\\$\\$\\$;'   %s\"\n\"${c1}               .,:dP\\$\\$\\$\\$\\$\\$\\$\\$b:'     %s\"\n\"${c1}        .,:;db\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$Pd'\\`        %s\"\n\"${c1}   ,db\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$b:'\\`            %s\"\n\"${c1}  :\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$b:'\\`                 %s\"\n\"${c1}   \\`\\$\\$\\$\\$\\$bd:''\\`                     %s\"\n\"${c1}     \\`'''\\`                          %s\"\n\"${c1}                                    %s\")\n\t\t;;\n\n\t\t\"Raspbian\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Light Green\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"32\"\n\t\t\tfulloutput=(\n\"${c1}    .',;:cc;,'.    .,;::c:,,.   %s\"\n\"${c1}   ,ooolcloooo:  'oooooccloo:   %s\"\n\"${c1}   .looooc;;:ol  :oc;;:ooooo'   %s\"\n\"${c1}     ;oooooo:      ,ooooooc.    %s\"\n\"${c1}       .,:;'.       .;:;'.      %s\"\n\"${c2}       .dQ. .d0Q0Q0. '0Q.       %s\"\n\"${c2}     .0Q0'   'Q0Q0Q'  'Q0Q.     %s\"\n\"${c2}     ''  .odo.    .odo.  ''     %s\"\n\"${c2}    .  .0Q0Q0Q'  .0Q0Q0Q.  .    %s\"\n\"${c2}  ,0Q .0Q0Q0Q0Q  'Q0Q0Q0b. 0Q.  %s\"\n\"${c2}  :Q0  Q0Q0Q0Q    'Q0Q0Q0  Q0'  %s\"\n\"${c2}  '0    '0Q0' .0Q0. '0'    'Q'  %s\"\n\"${c2}    .oo.     .0Q0Q0.    .oo.    %s\"\n\"${c2}    'Q0Q0.  '0Q0Q0Q0. .Q0Q0b    %s\"\n\"${c2}     'Q0Q0.  '0Q0Q0' .d0Q0Q'    %s\"\n\"${c2}      'Q0Q'    ..    '0Q.'      %s\"\n\"${c2}            .0Q0Q0Q.            %s\"\n\"${c2}             '0Q0Q'             %s\")\n\t\t;;\n\n\t\t\"CrunchBang\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}                                      %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}  ████████████████████████████   ███  %s\"\n\"${c1}  ████████████████████████████   ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}  ████████████████████████████   ███  %s\"\n\"${c1}  ████████████████████████████   ███  %s\"\n\"${c1}         ███        ███               %s\"\n\"${c1}         ███        ███               %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}         ███        ███          ███  %s\"\n\"${c1}                                      %s\")\n\t\t;;\n\n\t\t\"CRUX\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light cyan')\n\t\t\t\tc2=$(getColor 'yellow')\n\t\t\t\tc3=$(getColor 'white')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"27\"\n\t\t\tfulloutput=(\"\"\n\"${c1}          odddd            \"\n\"${c1}       oddxkkkxxdoo        %s\"\n\"${c1}      ddcoddxxxdoool       %s\"\n\"${c1}      xdclodod  olol       %s\"\n\"${c1}      xoc  xdd  olol       %s\"\n\"${c1}      xdc  ${c2}k00${c1}Okdlol       %s\"\n\"${c1}      xxd${c2}kOKKKOkd${c1}ldd       %s\"\n\"${c1}      xdco${c2}xOkdlo${c1}dldd       %s\"\n\"${c1}      ddc:cl${c2}lll${c1}oooodo      %s\"\n\"${c1}    odxxdd${c3}xkO000kx${c1}ooxdo    %s\"\n\"${c1}   oxdd${c3}x0NMMMMMMWW0od${c1}kkxo  %s\"\n\"${c1}  oooxd${c3}0WMMMMMMMMMW0o${c1}dxkx  %s\"\n\"${c1} docldkXW${c3}MMMMMMMWWN${c1}Odolco  %s\"\n\"${c1} xx${c2}dx${c1}kxxOKN${c3}WMMWN${c1}0xdoxo::c  %s\"\n\"${c2} xOkkO${c1}0oo${c3}odOW${c2}WW${c1}XkdodOxc:l  %s\"\n\"${c2} dkkkxkkk${c3}OKX${c2}NNNX0Oxx${c1}xc:cd  %s\"\n\"${c2}  odxxdx${c3}xllod${c2}ddooxx${c1}dc:ldo  %s\"\n\"${c2}    lodd${c1}dolccc${c2}ccox${c1}xoloo    %s\"\n\"${c1}                           %s\")\n\t\t;;\n\n\t\t\"Chrome OS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'green') # Green\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\t\tc3=$(getColor 'yellow') # Bold Yellow\n\t\t\t\tc4=$(getColor 'light blue') # Light Blue\n\t\t\t\tc5=$(getColor 'white') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\t\tc5=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c2}             .,:loool:,.              %s\"\n\"${c2}         .,coooooooooooooc,.          %s\"\n\"${c2}      .,lllllllllllllllllllll,.       %s\"\n\"${c2}     ;ccccccccccccccccccccccccc;      %s\"\n\"${c1}   '${c2}ccccccccccccccccccccccccccccc.    %s\"\n\"${c1}  ,oo${c2}c::::::::okO${c5}000${c3}0OOkkkkkkkkkkk:   %s\"\n\"${c1} .ooool${c2};;;;:x${c5}K0${c4}kxxxxxk${c5}0X${c3}K0000000000.  %s\"\n\"${c1} :oooool${c2};,;O${c5}K${c4}ddddddddddd${c5}KX${c3}000000000d  %s\"\n\"${c1} lllllool${c2};l${c5}N${c4}dllllllllllld${c5}N${c3}K000000000  %s\"\n\"${c1} lllllllll${c2}o${c5}M${c4}dccccccccccco${c5}W${c3}K000000000  %s\"\n\"${c1} ;cllllllllX${c5}X${c4}c:::::::::c${c5}0X${c3}000000000d  %s\"\n\"${c1} .ccccllllllO${c5}Nk${c4}c;,,,;cx${c5}KK${c3}0000000000.  %s\"\n\"${c1}  .cccccclllllxOO${c5}OOO${c1}Okx${c3}O0000000000;   %s\"\n\"${c1}   .:ccccccccllllllllo${c3}O0000000OOO,    %s\"\n\"${c1}     ,:ccccccccclllcd${c3}0000OOOOOOl.     %s\"\n\"${c1}       '::ccccccccc${c3}dOOOOOOOkx:.       %s\"\n\"${c1}         ..,::cccc${c3}xOOOkkko;.          %s\"\n\"${c1}             ..,:${c3}dOkxl:.              %s\")\n\t\t;;\n\n\t\t\"DesaOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') #Hijau\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\n\"${c1} ███████████████████████         %s\"\n\"${c1} ███████████████████████         %s\"\n\"${c1} ███████████████████████         %s\"\n\"${c1} ███████████████████████         %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ████████               ███████  %s\"\n\"${c1} ██████████████████████████████  %s\"\n\"${c1} ██████████████████████████████  %s\"\n\"${c1} ████████████████████████        %s\"\n\"${c1} ████████████████████████        %s\"\n\"${c1} ████████████████████████        %s\"\n\"                                      %s\")\n\t\t;;\n\n\t\t\"Gentoo\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light purple') # Light Purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c2}         -/oyddmdhs+:.               %s\"\n\"${c2}     -o${c1}dNMMMMMMMMNNmhy+${c2}-\\`            %s\"\n\"${c2}   -y${c1}NMMMMMMMMMMMNNNmmdhy${c2}+-          %s\"\n\"${c2} \\`o${c1}mMMMMMMMMMMMMNmdmmmmddhhy${c2}/\\`       %s\"\n\"${c2} om${c1}MMMMMMMMMMMN${c2}hhyyyo${c1}hmdddhhhd${c2}o\\`     %s\"\n\"${c2}.y${c1}dMMMMMMMMMMd${c2}hs++so/s${c1}mdddhhhhdm${c2}+\\`   %s\"\n\"${c2} oy${c1}hdmNMMMMMMMN${c2}dyooy${c1}dmddddhhhhyhN${c2}d.  %s\"\n\"${c2}  :o${c1}yhhdNNMMMMMMMNNNmmdddhhhhhyym${c2}Mh  %s\"\n\"${c2}    .:${c1}+sydNMMMMMNNNmmmdddhhhhhhmM${c2}my  %s\"\n\"${c2}       /m${c1}MMMMMMNNNmmmdddhhhhhmMNh${c2}s:  %s\"\n\"${c2}    \\`o${c1}NMMMMMMMNNNmmmddddhhdmMNhs${c2}+\\`   %s\"\n\"${c2}  \\`s${c1}NMMMMMMMMNNNmmmdddddmNMmhs${c2}/.     %s\"\n\"${c2} /N${c1}MMMMMMMMNNNNmmmdddmNMNdso${c2}:\\`       %s\"\n\"${c2}+M${c1}MMMMMMNNNNNmmmmdmNMNdso${c2}/-          %s\"\n\"${c2}yM${c1}MNNNNNNNmmmmmNNMmhs+/${c2}-\\`            %s\"\n\"${c2}/h${c1}MMNNNNNNNNMNdhs++/${c2}-\\`               %s\"\n\"${c2}\\`/${c1}ohdmmddhys+++/:${c2}.\\`                  %s\"\n\"${c2}  \\`-//////:--.                       %s\")\n\t\t;;\n\n\t\t\"Funtoo\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light purple') # Light Purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"52\"\n\t\t\tfulloutput=(\n\"${c1}                                                    %s\"\n\"${c1}                                                    %s\"\n\"${c1}                                                    %s\"\n\"${c1}                                                    %s\"\n\"${c1}     _______               ____                     %s\"\n\"${c1}    /MMMMMMM/             /MMMM| _____  _____       %s\"\n\"${c1} __/M${c2}.MMM.${c1}M/_____________|M${c2}.M${c1}MM|/MMMMM\\/MMMMM\\      %s\"\n\"${c1}|MMMM${c2}MM'${c1}MMMMMMMMMMMMMMMMMMM${c2}MM${c1}MMMM${c2}.MMMM..MMMM.${c1}MM\\    %s\"\n\"${c1}|MM${c2}MMMMMMM${c1}/m${c2}MMMMMMMMMMMMMMMMMMMMMM${c1}MMMM${c2}MM${c1}MMMM${c2}MM${c1}MM|   %s\"\n\"${c1}|MMMM${c2}MM${c1}MMM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MM${c1}MMMMM${c2}\\MMM${c1}MMM${c2}MM${c1}MMMM${c2}MM${c1}MMMM${c2}MM${c1}MM|   %s\"\n\"${c1}  |MM${c2}MM${c1}MMM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MMM${c1}MMMM${c2}'MMMM''MMMM'${c1}MM/    %s\"\n\"${c1}  |MM${c2}MM${c1}MMM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MMM${c1}MMM\\MMMMM/\\MMMMM/      %s\"\n\"${c1}  |MM${c2}MM${c1}MMM${c2}MM${c1}MMMMMM${c2}MM${c1}MM${c2}MM${c1}MM${c2}MMMMM'${c1}M|                  %s\"\n\"${c1}  |MM${c2}MM${c1}MMM${c2}MMMMMMMMMMMMMMMMM MM'${c1}M/                   %s\"\n\"${c1}  |MMMMMMMMMMMMMMMMMMMMMMMMMMMM/                    %s\"\n\"${c1}                                                    %s\"\n\"${c1}                                                    %s\"\n\"${c1}                                                    %s\")\n\t\t;;\n\n\t\t\"Kogaion\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\"${c1}                  ;;      ,;             %s\"\n\"${c1}                 ;;;     ,;;             %s\"\n\"${c1}               ,;;;;     ;;;;            %s\"\n\"${c1}            ,;;;;;;;;    ;;;;            %s\"\n\"${c1}           ;;;;;;;;;;;   ;;;;;           %s\"\n\"${c1}          ,;;;;;;;;;;;;  ';;;;;,         %s\"\n\"${c1}          ;;;;;;;;;;;;;;, ';;;;;;;       %s\"\n\"${c1}          ;;;;;;;;;;;;;;;;;, ';;;;;      %s\"\n\"${c1}      ;    ';;;;;;;;;;;;;;;;;;, ;;;      %s\"\n\"${c1}      ;;;,  ';;;;;;;;;;;;;;;;;;;,;;      %s\"\n\"${c1}      ;;;;;,  ';;;;;;;;;;;;;;;;;;,       %s\"\n\"${c1}      ;;;;;;;;,  ';;;;;;;;;;;;;;;;,      %s\"\n\"${c1}      ;;;;;;;;;;;;, ';;;;;;;;;;;;;;      %s\"\n\"${c1}      ';;;;;;;;;;;;; ';;;;;;;;;;;;;      %s\"\n\"${c1}       ';;;;;;;;;;;;;, ';;;;;;;;;;;      %s\"\n\"${c1}        ';;;;;;;;;;;;;  ;;;;;;;;;;       %s\"\n\"${c1}          ';;;;;;;;;;;; ;;;;;;;;         %s\"\n\"${c1}              ';;;;;;;; ;;;;;;           %s\"\n\"${c1}                 ';;;;; ;;;;             %s\"\n\"${c1}                   ';;; ;;               %s\")\n\t\t;;\n\n\t\t\"Fedora - Old\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c2}           /:-------------:\\         %s\"\n\"${c2}        :-------------------::       %s\"\n\"${c2}      :-----------${c1}/shhOHbmp${c2}---:\\\\     %s\"\n\"${c2}    /-----------${c1}omMMMNNNMMD  ${c2}---:    %s\"\n\"${c2}   :-----------${c1}sMMMMNMNMP${c2}.    ---:   %s\"\n\"${c2}  :-----------${c1}:MMMdP${c2}-------    ---\\  %s\"\n\"${c2} ,------------${c1}:MMMd${c2}--------    ---:  %s\"\n\"${c2} :------------${c1}:MMMd${c2}-------    .---:  %s\"\n\"${c2} :----    ${c1}oNMMMMMMMMMNho${c2}     .----:  %s\"\n\"${c2} :--     .${c1}+shhhMMMmhhy++${c2}   .------/  %s\"\n\"${c2} :-    -------${c1}:MMMd${c2}--------------:   %s\"\n\"${c2} :-   --------${c1}/MMMd${c2}-------------;    %s\"\n\"${c2} :-    ------${c1}/hMMMy${c2}------------:     %s\"\n\"${c2} :--${c1} :dMNdhhdNMMNo${c2}------------;      %s\"\n\"${c2} :---${c1}:sdNMMMMNds:${c2}------------:       %s\"\n\"${c2} :------${c1}:://:${c2}-------------::         %s\"\n\"${c2} :---------------------://           %s\"\n\"${c2}                                     %s\")\n\t\t;;\n\n\t\t\"Fedora\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\t\tc2=$(getColor 'white') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}             .',;::::;,'.\t\t %s\"\n\"${c1}         .';:cccccccccccc:;,.        \t %s\"\n\"${c1}      .;cccccccccccccccccccccc;.     \t %s\"\n\"${c1}    .:cccccccccccccccccccccccccc:.   \t %s\"\n\"${c1}  .;ccccccccccccc;${c2}.:dddl:.${c1};ccccccc;.     %s\"\n\"${c1} .:ccccccccccccc;${c2}OWMKOOXMWd${c1};ccccccc:.    %s\"\n\"${c1}.:ccccccccccccc;${c2}KMMc${c1};cc;${c2}xMMc${c1};ccccccc:.   %s\"\n\"${c1},cccccccccccccc;${c2}MMM.${c1};cc;${c2};WW:${c1};cccccccc,   %s\"\n\"${c1}:cccccccccccccc;${c2}MMM.${c1};cccccccccccccccc:   %s\"\n\"${c1}:ccccccc;${c2}oxOOOo${c1};${c2}MMM0OOk.${c1};cccccccccccc:   %s\"\n\"${c1}cccccc;${c2}0MMKxdd:${c1};${c2}MMMkddc.${c1};cccccccccccc;   %s\"\n\"${c1}ccccc;${c2}XM0'${c1};cccc;${c2}MMM.${c1};cccccccccccccccc'   %s\"\n\"${c1}ccccc;${c2}MMo${c1};ccccc;${c2}MMW.${c1};ccccccccccccccc;    %s\"\n\"${c1}ccccc;${c2}0MNc.${c1}ccc${c2}.xMMd${c1};ccccccccccccccc;     %s\"\n\"${c1}cccccc;${c2}dNMWXXXWM0:${c1};cccccccccccccc:,      %s\"\n\"${c1}cccccccc;${c2}.:odl:.${c1};cccccccccccccc:,.       %s\"\n\"${c1}:cccccccccccccccccccccccccccc:'.         %s\"\n\"${c1}.:cccccccccccccccccccccc:;,..      %s\"\n\"${c1}  '::cccccccccccccc::;,.\t\t %s\"\n\"${c1}\t\t\t\t\t %s\")\n\t\t;;\n\n\t\t\"Fux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tfulloutput=(\n\"${c2}           --/+osssso+/--           %s\"\n\"${c2}        -/oshhhhhhhhhhhhso/-        %s\"\n\"${c2}      :oyhhhhhso+//+oshhhhhso:      %s\"\n\"${c2}    -+yhhhh+.   ss+/   .+hhhhs+-    %s\"\n\"${c2}   :/hhhh/     shhhy/     /hhhh/:   %s\"\n\"${c2}  ./hhhh- .++:..dhhb..:++. -hhhh/.  %s\"\n\"${c2}  +ohhh: -hoyhohhoohhohyoh- :hhho+  %s\"\n\"${c2}  /hhhh   shhy-ohyyho-yhhs   hhhh/  %s\"\n\"${c2}  /hhhh    shy\\+hhhh+/yhs    hhhh/  %s\"\n\"${c2}  +ohhh:  .:d. +:ys:+ .b:.  :hhho+  %s\"\n\"${c2}  ./hhhh- do  /  oo  \\  ob -hhhh/.  %s\"\n\"${c2}   :/hhhh/   -   ss   -   /hhhh/:   %s\"\n\"${c2}    -+shhhh+.    //    .+hhhhs+-    %s\"\n\"${c2}      :oshhhhhso+//+oshhhhhso:      %s\"\n\"${c2}        -/oshhhhhhhhhhhhso/-        %s\"\n\"${c2}           --/+osssso+/--           %s\")\n\t\t;;\n\n\t\t\"Chapeau\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light green') # Light Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"35\"\n\t\t\tfulloutput=(\n\"${c2}               .-/-.               %s\"\n\"${c2}             ////////.             %s\"\n\"${c2}           ////////${c1}y+${c2}//.           %s\"\n\"${c2}         ////////${c1}mMN${c2}/////.         %s\"\n\"${c2}       ////////${c1}mMN+${c2}////////.       %s\"\n\"${c2}     ////////////////////////.     %s\"\n\"${c2}   /////////+${c1}shhddhyo${c2}+////////.    %s\"\n\"${c2}  ////////${c1}ymMNmdhhdmNNdo${c2}///////.   %s\"\n\"${c2} ///////+${c1}mMms${c2}////////${c1}hNMh${c2}///////.  %s\"\n\"${c2} ///////${c1}NMm+${c2}//////////${c1}sMMh${c2}///////  %s\"\n\"${c2} //////${c1}oMMNmmmmmmmmmmmmMMm${c2}///////  %s\"\n\"${c2} //////${c1}+MMmssssssssssssss+${c2}///////  %s\"\n\"${c2} \\`//////${c1}yMMy${c2}////////////////////   %s\"\n\"${c2}  \\`//////${c1}smMNhso++oydNm${c2}////////    %s\"\n\"${c2}   \\`///////${c1}ohmNMMMNNdy+${c2}///////     %s\"\n\"${c2}     \\`//////////${c1}++${c2}//////////       %s\"\n\"${c2}        \\`////////////////.         %s\"\n\"${c2}            -////////-             %s\"\n\"${c2}                                   %s\")\n\t\t;;\n\n\t\t\"Korora\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white')\n\t\t\t\tc2=$(getColor 'light blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"32\"\n\t\t\tfulloutput=(\n\"${c1}                 ____________   %s\"\n\"${c1}              _add55555555554${c2}:  %s\"\n\"${c1}            _w?'${c2}\\`\\`\\`\\`\\`\\`\\`\\`\\`\\`'${c1})k${c2}:  %s\"\n\"${c1}           _Z'${c2}\\`${c1}            ]k${c2}:  %s\"\n\"${c1}           m(${c2}\\`${c1}             )k${c2}:  %s\"\n\"${c1}      _.ss${c2}\\`${c1}m[${c2}\\`${c1},            ]e${c2}:  %s\"\n\"${c1}    .uY\\\"^\\`${c2}\\`${c1}Xc${c2}\\`${c1}?Ss.         d(${c2}\\`  %s\"\n\"${c1}   jF'${c2}\\`${c1}    \\`@.  ${c2}\\`${c1}Sc      .jr${c2}\\`   %s\"\n\"${c1}  jr${c2}\\`${c1}       \\`?n_ ${c2}\\`${c1}$;   _a2\\\"${c2}\\`    %s\"\n\"${c1} .m${c2}:${c1}          \\`~M${c2}\\`${c1}1k${c2}\\`${c1}5?!\\`${c2}\\`      %s\"\n\"${c1} :#${c2}:${c1}             ${c2}\\`${c1})e${c2}\\`\\`\\`         %s\"\n\"${c1} :m${c2}:${c1}             ,#'${c2}\\`           %s\"\n\"${c1} :#${c2}:${c1}           .s2'${c2}\\`            %s\"\n\"${c1} :m,________.aa7^${c2}\\`              %s\"\n\"${c1} :#baaaaaaas!J'${c2}\\`                %s\"\n\"${c2}  \\`\\`\\`\\`\\`\\`\\`\\`\\`\\`\\`                   %s\")\n\t\t;;\n\n\t\t\"gNewSense\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"52\"\n\t\t\tfulloutput=(\n\"${c1}                      ..,,,,..                      %s\"\n\"${c1}                .oocchhhhhhhhhhccoo.                %s\"\n\"${c1}         .ochhlllllllc hhhhhh ollllllhhco.          %s\"\n\"${c1}     ochlllllllllll hhhllllllhhh lllllllllllhco     %s\"\n\"${c1}  .cllllllllllllll hlllllo  +hllh llllllllllllllc.  %s\"\n\"${c1} ollllllllllhco\\'\\'  hlllllo  +hllh  \\`\\`ochllllllllllo %s\"\n\"${c1} hllllllllc\\'       hllllllllllllh       \\`cllllllllh %s\"\n\"${c1} ollllllh          +llllllllllll+          hllllllo %s\"\n\"${c1}  \\`cllllh.           ohllllllho           .hllllc\\'  %s\"\n\"${c1}     ochllc.            ++++            .cllhco     %s\"\n\"${c1}        \\`+occooo+.                .+ooocco+\\'        %s\"\n\"${c1}               \\`+oo++++      ++++oo+\\'               %s\"\n\"${c1}                                                    %s\")\n\t\t;;\n\n\t\t\"BLAG\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light purple')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"36\"\n\t\t\tfulloutput=(\n\"${c1}              d                     %s\"\n\"${c1}             ,MK:                   %s\"\n\"${c1}             xMMMX:                 %s\"\n\"${c1}            .NMMMMMX;               %s\"\n\"${c1}            lMMMMMMMM0clodkO0KXWW:  %s\"\n\"${c1}            KMMMMMMMMMMMMMMMMMMX'   %s\"\n\"${c1}       .;d0NMMMMMMMMMMMMMMMMMMK.    %s\"\n\"${c1}  .;dONMMMMMMMMMMMMMMMMMMMMMMx      %s\"\n\"${c1} 'dKMMMMMMMMMMMMMMMMMMMMMMMMl       %s\"\n\"${c1}    .:xKWMMMMMMMMMMMMMMMMMMM0.      %s\"\n\"${c1}        .:xNMMMMMMMMMMMMMMMMMK.     %s\"\n\"${c1}           lMMMMMMMMMMMMMMMMMMK.    %s\"\n\"${c1}           ,MMMMMMMMWkOXWMMMMMM0    %s\"\n\"${c1}           .NMMMMMNd.     \\`':ldko   %s\"\n\"${c1}            OMMMK:                  %s\"\n\"${c1}            oWk,                    %s\"\n\"${c1}            ;:                      %s\")\n\t\t;;\n\n\t\t\"FreeBSD\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # white\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c1}                                     %s\"\n\"${c1}   \\`\\`\\`                        ${c2}\\`      %s\"\n\"${c1}  \\` \\`.....---...${c2}....--.\\`\\`\\`   -/      %s\"\n\"${c1}  +o   .--\\`         ${c2}/y:\\`      +.     %s\"\n\"${c1}   yo\\`:.            ${c2}:o      \\`+-      %s\"\n\"${c1}    y/               ${c2}-/\\`   -o/       %s\"\n\"${c1}   .-                  ${c2}::/sy+:.      %s\"\n\"${c1}   /                     ${c2}\\`--  /      %s\"\n\"${c1}  \\`:                          ${c2}:\\`     %s\"\n\"${c1}  \\`:                          ${c2}:\\`     %s\"\n\"${c1}   /                          ${c2}/      %s\"\n\"${c1}   .-                        ${c2}-.      %s\"\n\"${c1}    --                      ${c2}-.       %s\"\n\"${c1}     \\`:\\`                  ${c2}\\`:\\`        %s\"\n\"${c2}       .--             \\`--.          %s\"\n\"${c2}          .---.....----.             %s\"\n\"${c2}                                     %s\"\n\"${c2}                                     %s\")\n\t\t;;\n\n\t\t\"FreeBSD - Old\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # white\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"34\"\n\t\t\tfulloutput=(\n\"${c2}              ,        ,          %s\"\n\"${c2}             /(        )\\`         %s\"\n\"${c2}             \\ \\___   / |         %s\"\n\"${c2}             /- ${c1}_${c2}  \\`-/  '         %s\"\n\"${c2}            (${c1}/\\/ \\ ${c2}\\   /\\\\         %s\"\n\"${c1}            / /   |${c2} \\`    \\\\        %s\"\n\"${c1}            O O   )${c2} /    |        %s\"\n\"${c1}            \\`-^--'\\`${c2}<     '        %s\"\n\"${c2}           (_.)  _  )   /         %s\"\n\"${c2}            \\`.___/\\`    /          %s\"\n\"${c2}              \\`-----' /           %s\"\n\"${c1} <----.     ${c2}__/ __   \\\\            %s\"\n\"${c1} <----|====${c2}O}}}${c1}==${c2}} \\} \\/${c1}====      %s\"\n\"${c1} <----'    ${c2}\\`--' \\`.__,' \\\\          %s\"\n\"${c2}              |        |          %s\"\n\"${c2}               \\       /       /\\\\ %s\"\n\"${c2}          ______( (_  / \\______/  %s\"\n\"${c2}        ,'  ,-----'   |           %s\"\n\"${c2}        \\`--{__________)           %s\"\n\"${c2}                                  %s\")\n\t\t;;\n\n\t\t\"OpenBSD\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'yellow') # Light Yellow\n\t\t\t\tc2=$(getColor 'brown') # Bold Yellow\n\t\t\t\tc3=$(getColor 'light cyan') # Light Cyan\n\t\t\t\tc4=$(getColor 'light red') # Light Red\n\t\t\t\tc5=$(getColor 'dark grey')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\t\tc5=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"3\"\n\t\t\tlogowidth=\"44\"\n\t\t\tfulloutput=(\n\"${c3}                                        _   \"\n\"${c3}                                       (_)  \"\n\"${c1}              |    .                        \"\n\"${c1}          .   |L  /|   .         ${c3} _         %s\"\n\"${c1}      _ . |\\ _| \\--+._/| .       ${c3}(_)        %s\"\n\"${c1}     / ||\\| Y J  )   / |/| ./               %s\"\n\"${c1}    J  |)'( |        \\` F\\`.'/       ${c3} _       %s\"\n\"${c1}  -<|  F         __     .-<        ${c3}(_)      %s\"\n\"${c1}    | /       .-'${c3}. ${c1}\\`.  /${c3}-. ${c1}L___             %s\"\n\"${c1}    J \\      <    ${c3}\\ ${c1} | | ${c5}O${c3}\\\\\\\\${c1}|.-' ${c3} _          %s\"\n\"${c1}  _J \\  .-    \\\\\\\\${c3}/ ${c5}O ${c3}| ${c1}| \\  |${c1}F    ${c3}(_)         %s\"\n\"${c1} '-F  -<_.     \\   .-'  \\`-' L__             %s\"\n\"${c1}__J  _   _.     >-'  ${c2})${c4}._.   ${c1}|-'             %s\"\n\"${c1} \\`-|.'   /_.          ${c4}\\_|  ${c1} F               %s\"\n\"${c1}  /.-   .                _.<                %s\"\n\"${c1} /'    /.'             .'  \\`\\               %s\"\n\"${c1}  /L  /'   |/      _.-'-\\                   %s\"\n\"${c1} /'J       ___.---'\\|                       %s\"\n\"${c1}   |\\  .--' V  | \\`. \\`                       %s\"\n\"${c1}   |/\\`. \\`-.     \\`._)                        %s\"\n\"${c1}      / .-.\\                                %s\"\n\"${c1}      \\ (  \\`\\                               %s\"\n\"${c1}       \\`.\\                                  %s\")\n\t\t;;\n\n\t\t\"DragonFlyBSD\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light red') # Red\n\t\t\t\tc2=$(getColor 'white') # White\n\t\t\t\tc3=$(getColor 'yellow')\n\t\t\t\tc4=$(getColor 'light red')\n\t\t\tfi\n            if [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c4=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"43\"\n\t\t\tfulloutput=(\n\"${c1}                      |                    %s\"\n\"${c1}                     .-.                   %s\"\n\"${c3}                    ()${c1}I${c3}()                  %s\"\n\"${c1}               \\\"==.__:-:__.==\\\"             %s\"\n\"${c1}              \\\"==.__/~|~\\__.==\\\"            %s\"\n\"${c1}              \\\"==._(  Y  )_.==\\\"            %s\"\n\"${c2}   .-'~~\\\"\\\"~=--...,__${c1}\\/|\\/${c2}__,...--=~\\\"\\\"~~'-. %s\"\n\"${c2}  (               ..=${c1}\\\\\\\\=${c1}/${c2}=..               )%s\"\n\"${c2}   \\`'-.        ,.-\\\"\\`;${c1}/=\\\\\\\\${c2} ;\\\"-.,_        .-'\\`%s\"\n\"${c2}       \\`~\\\"-=-~\\` .-~\\` ${c1}|=|${c2} \\`~-. \\`~-=-\\\"~\\`     %s\"\n\"${c2}            .-~\\`    /${c1}|=|${c2}\\    \\`~-.          %s\"\n\"${c2}         .~\\`       / ${c1}|=|${c2} \\       \\`~.       %s\"\n\"${c2}     .-~\\`        .'  ${c1}|=|${c2}  \\\\\\\\\\`.        \\`~-.  %s\"\n\"${c2}   (\\`     _,.-=\\\"\\`    ${c1}|=|${c2}    \\`\\\"=-.,_     \\`) %s\"\n\"${c2}    \\`~\\\"~\\\"\\`           ${c1}|=|${c2}           \\`\\\"~\\\"~\\`  %s\"\n\"${c1}                     /=\\                   %s\"\n\"${c1}                     \\=/                   %s\"\n\"${c1}                      ^                    %s\")\n\t\t;;\n\n\t\t\"NetBSD\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'orange') # Orange\n\t\t\t\tc2=$(getColor 'white') # White\n\t\t\tfi\n            if [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"60\"\n\t\t\tfulloutput=(\n\"${c1}                                  __,gnnnOCCCCCOObaau,_     %s\"\n\"${c2}   _._                    ${c1}__,gnnCCCCCCCCOPF\\\"''              %s\"\n\"${c2}  (N\\\\\\\\\\\\\\\\${c1}XCbngg,._____.,gnnndCCCCCCCCCCCCF\\\"___,,,,___          %s\"\n\"${c2}   \\\\\\\\N\\\\\\\\\\\\\\\\${c1}XCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCOOOOPYvv.     %s\"\n\"${c2}    \\\\\\\\N\\\\\\\\\\\\\\\\${c1}XCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCPF\\\"''               %s\"\n\"${c2}     \\\\\\\\N\\\\\\\\\\\\\\\\${c1}XCCCCCCCCCCCCCCCCCCCCCCCCCOF\\\"'                     %s\"\n\"${c2}      \\\\\\\\N\\\\\\\\\\\\\\\\${c1}XCCCCCCCCCCCCCCCCCCCCOF\\\"'                         %s\"\n\"${c2}       \\\\\\\\N\\\\\\\\\\\\\\\\${c1}XCCCCCCCCCCCCCCCPF\\\"'                             %s\"\n\"${c2}        \\\\\\\\N\\\\\\\\\\\\\\\\${c1}\\\"PCOCCCOCCFP\\\"\\\"                                  %s\"\n\"${c2}         \\\\\\\\N\\                                                %s\"\n\"${c2}          \\\\\\\\N\\                                               %s\"\n\"${c2}           \\\\\\\\N\\                                              %s\"\n\"${c2}            \\\\\\\\NN\\                                            %s\"\n\"${c2}             \\\\\\\\NN\\                                           %s\"\n\"${c2}              \\\\\\\\NNA.                                         %s\"\n\"${c2}               \\\\\\\\NNA,                                        %s\"\n\"${c2}                \\\\\\\\NNN,                                       %s\"\n\"${c2}                 \\\\\\\\NNN\\                                      %s\"\n\"${c2}                  \\\\\\\\NNN\\                                     %s\"\n\"${c2}                   \\\\\\\\NNNA                                    %s\")\n\t\t;;\n\n\t\t\"Mandriva\"|\"Mandrake\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\t\tc2=$(getColor 'yellow') # Bold Yellow\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\"${c2}                                         %s\"\n\"${c2}                         \\`\\`              %s\"\n\"${c2}                        \\`-.              %s\"\n\"${c1}       \\`               ${c2}.---              %s\"\n\"${c1}     -/               ${c2}-::--\\`             %s\"\n\"${c1}   \\`++    ${c2}\\`----...\\`\\`\\`-:::::.             %s\"\n\"${c1}  \\`os.      ${c2}.::::::::::::::-\\`\\`\\`     \\`  \\` %s\"\n\"${c1}  +s+         ${c2}.::::::::::::::::---...--\\` %s\"\n\"${c1} -ss:          ${c2}\\`-::::::::::::::::-.\\`\\`.\\`\\` %s\"\n\"${c1} /ss-           ${c2}.::::::::::::-.\\`\\`   \\`    %s\"\n\"${c1} +ss:          ${c2}.::::::::::::-            %s\"\n\"${c1} /sso         ${c2}.::::::-::::::-            %s\"\n\"${c1} .sss/       ${c2}-:::-.\\`   .:::::            %s\"\n\"${c1}  /sss+.    ${c2}..\\`${c1}  \\`--\\`    ${c2}.:::            %s\"\n\"${c1}   -ossso+/:://+/-\\`        ${c2}.:\\`           %s\"\n\"${c1}     -/+ooo+/-.              ${c2}\\`           %s\"\n\"${c1}                                         %s\"\n\"${c1}                                         %s\")\n\t\t;;\n\n\t\t\"openSUSE\"|\"SUSE Linux Enterprise\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Bold Green\n\t\t\t\tc2=$c0$bold\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"44\"\n\t\t\tfulloutput=(\n\"${c2}             .;ldkO0000Okdl;.               %s\"\n\"${c2}         .;d00xl:^''''''^:ok00d;.           %s\"\n\"${c2}       .d00l'                'o00d.         %s\"\n\"${c2}     .d0K^'${c1}  Okxoc;:,.          ${c2}^O0d.       %s\"\n\"${c2}    .OVV${c1}AK0kOKKKKKKKKKKOxo:,      ${c2}lKO.      %s\"\n\"${c2}   ,0VV${c1}AKKKKKKKKKKKKK0P^${c2},,,${c1}^dx:${c2}    ;00,     %s\"\n\"${c2}  .OVV${c1}AKKKKKKKKKKKKKk'${c2}.oOPPb.${c1}'0k.${c2}   cKO.    %s\"\n\"${c2}  :KV${c1}AKKKKKKKKKKKKKK: ${c2}kKx..dd ${c1}lKd${c2}   'OK:    %s\"\n\"${c2}  lKl${c1}KKKKKKKKKOx0KKKd ${c2}^0KKKO' ${c1}kKKc${c2}   lKl    %s\"\n\"${c2}  lKl${c1}KKKKKKKKKK;.;oOKx,..${c2}^${c1}..;kKKK0.${c2}  lKl    %s\"\n\"${c2}  :KA${c1}lKKKKKKKKK0o;...^cdxxOK0O/^^'  ${c2}.0K:    %s\"\n\"${c2}   kKA${c1}VKKKKKKKKKKKK0x;,,......,;od  ${c2}lKP     %s\"\n\"${c2}   '0KA${c1}VKKKKKKKKKKKKKKKKKK00KKOo^  ${c2}c00'     %s\"\n\"${c2}    'kKA${c1}VOxddxkOO00000Okxoc;''   ${c2}.dKV'      %s\"\n\"${c2}      l0Ko.                    .c00l'       %s\"\n\"${c2}       'l0Kk:.              .;xK0l'         %s\"\n\"${c2}          'lkK0xc;:,,,,:;odO0kl'            %s\"\n\"${c2}              '^:ldxkkkkxdl:^'              %s\")\n\t\t;;\n\n\t\t\"Slackware\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\t\tc2=$(getColor 'white') # Bold White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"46\"\n\t\t\tfulloutput=(\n\"${c1}                   :::::::                    \"\n\"${c1}             :::::::::::::::::::              %s\"\n\"${c1}          :::::::::::::::::::::::::           %s\"\n\"${c1}        ::::::::${c2}cllcccccllllllll${c1}::::::        %s\"\n\"${c1}     :::::::::${c2}lc               dc${c1}:::::::      %s\"\n\"${c1}    ::::::::${c2}cl   clllccllll    oc${c1}:::::::::    %s\"\n\"${c1}   :::::::::${c2}o   lc${c1}::::::::${c2}co   oc${c1}::::::::::   %s\"\n\"${c1}  ::::::::::${c2}o    cccclc${c1}:::::${c2}clcc${c1}::::::::::::  %s\"\n\"${c1}  :::::::::::${c2}lc        cclccclc${c1}:::::::::::::  %s\"\n\"${c1} ::::::::::::::${c2}lcclcc          lc${c1}:::::::::::: %s\"\n\"${c1} ::::::::::${c2}cclcc${c1}:::::${c2}lccclc     oc${c1}::::::::::: %s\"\n\"${c1} ::::::::::${c2}o    l${c1}::::::::::${c2}l    lc${c1}::::::::::: %s\"\n\"${c1}  :::::${c2}cll${c1}:${c2}o     clcllcccll     o${c1}:::::::::::  %s\"\n\"${c1}  :::::${c2}occ${c1}:${c2}o                  clc${c1}:::::::::::  %s\"\n\"${c1}   ::::${c2}ocl${c1}:${c2}ccslclccclclccclclc${c1}:::::::::::::   %s\"\n\"${c1}    :::${c2}oclcccccccccccccllllllllllllll${c1}:::::    %s\"\n\"${c1}     ::${c2}lcc1lcccccccccccccccccccccccco${c1}::::     %s\"\n\"${c1}       ::::::::::::::::::::::::::::::::       %s\"\n\"${c1}         ::::::::::::::::::::::::::::         %s\"\n\"${c1}            ::::::::::::::::::::::            %s\"\n\"${c1}                 ::::::::::::                 %s\")\n\t\t;;\n\n\t\t\"ROSA\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'rosa_blue') # special blue color from ROSA\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"3\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\"${c1}            ROSAROSAROSAROSAR            \"\n\"${c1}         ROSA               AROS         \"\n\"${c1}       ROS   SAROSAROSAROSAR   AROS      \"\n\"${c1}     RO   ROSAROSAROSAROSAROSAR   RO     %s\"\n\"${c1}   ARO  AROSAROSAROSARO      AROS  ROS   %s\"\n\"${c1}  ARO  ROSAROS         OSAR   ROSA  ROS  %s\"\n\"${c1}  RO  AROSA   ROSAROSAROSA    ROSAR  RO  %s\"\n\"${c1} RO  ROSAR  ROSAROSAROSAR  R  ROSARO  RO %s\"\n\"${c1} RO  ROSA  AROSAROSAROSA  AR  ROSARO  AR %s\"\n\"${c1} RO AROS  ROSAROSAROSA   ROS  AROSARO AR %s\"\n\"${c1} RO AROS  ROSAROSARO   ROSARO  ROSARO AR %s\"\n\"${c1} RO  ROS  AROSAROS   ROSAROSA AROSAR  AR %s\"\n\"${c1} RO  ROSA  ROS     ROSAROSAR  ROSARO  RO %s\"\n\"${c1}  RO  ROS     AROSAROSAROSA  ROSARO  AR  %s\"\n\"${c1}  ARO  ROSA   ROSAROSAROS   AROSAR  ARO  %s\"\n\"${c1}   ARO  OROSA      R      ROSAROS  ROS   %s\"\n\"${c1}     RO   AROSAROS   AROSAROSAR   RO     %s\"\n\"${c1}      AROS   AROSAROSAROSARO   AROS      %s\"\n\"${c1}         ROSA               SARO         %s\"\n\"${c1}            ROSAROSAROSAROSAR            %s\")\n\t\t;;\n\n\t\t\"Red Hat Enterprise Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"42\"\n\t\t\tfulloutput=(\n\"${c1}            .MMM..:MMMMMMM                 %s\"\n\"${c1}           MMMMMMMMMMMMMMMMMM              %s\"\n\"${c1}           MMMMMMMMMMMMMMMMMMMM.           %s\"\n\"${c1}          MMMMMMMMMMMMMMMMMMMMMM           %s\"\n\"${c1}         ,MMMMMMMMMMMMMMMMMMMMMM:          %s\"\n\"${c1}         MMMMMMMMMMMMMMMMMMMMMMMM          %s\"\n\"${c1}   .MMMM'  MMMMMMMMMMMMMMMMMMMMMM          %s\"\n\"${c1}  MMMMMM    \\`MMMMMMMMMMMMMMMMMMMM.         %s\"\n\"${c1} MMMMMMMM      MMMMMMMMMMMMMMMMMM .        %s\"\n\"${c1} MMMMMMMMM.       \\`MMMMMMMMMMMMM' MM.      %s\"\n\"${c1} MMMMMMMMMMM.                     MMMM     %s\"\n\"${c1} \\`MMMMMMMMMMMMM.                 ,MMMMM.   %s\"\n\"${c1}  \\`MMMMMMMMMMMMMMMMM.          ,MMMMMMMM.  %s\"\n\"${c1}     MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM  %s\"\n\"${c1}       MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:  %s\"\n\"${c1}          MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM   %s\"\n\"${c1}             \\`MMMMMMMMMMMMMMMMMMMMMMMM:    %s\"\n\"${c1}                 \\`\\`MMMMMMMMMMMMMMMMM'      %s\")\n\t\t;;\n\n\t\t\"Frugalware\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"3\"\n\t\t\tlogowidth=\"50\"\n\t\t\tfulloutput=(\n\"${c2}          \\`++/::-.\\`                               \"\n\"${c2}         /o+++++++++/::-.\\`                        \"\n\"${c2}        \\`o+++++++++++++++o++/::-.\\`                \"\n\"${c2}        /+++++++++++++++++++++++oo++/:-.\\`\\`        %s\"\n\"${c2}       .o+ooooooooooooooooooosssssssso++oo++/:-\\`  %s\"\n\"${c2}       ++osoooooooooooosssssssssssssyyo+++++++o:  %s\"\n\"${c2}      -o+ssoooooooooooosssssssssssssyyo+++++++s\\`  %s\"\n\"${c2}      o++ssoooooo++++++++++++++sssyyyyo++++++o:   %s\"\n\"${c2}     :o++ssoooooo${c1}/-------------${c2}+syyyyyo+++++oo    %s\"\n\"${c2}    \\`o+++ssoooooo${c1}/-----${c2}+++++ooosyyyyyyo++++os:    %s\"\n\"${c2}    /o+++ssoooooo${c1}/-----${c2}ooooooosyyyyyyyo+oooss     %s\"\n\"${c2}   .o++++ssooooos${c1}/------------${c2}syyyyyyhsosssy-     %s\"\n\"${c2}   ++++++ssooooss${c1}/-----${c2}+++++ooyyhhhhhdssssso      %s\"\n\"${c2}  -s+++++syssssss${c1}/-----${c2}yyhhhhhhhhhhhddssssy.      %s\"\n\"${c2}  sooooooyhyyyyyh${c1}/-----${c2}hhhhhhhhhhhddddyssy+       %s\"\n\"${c2} :yooooooyhyyyhhhyyyyyyhhhhhhhhhhdddddyssy\\`       %s\"\n\"${c2} yoooooooyhyyhhhhhhhhhhhhhhhhhhhddddddysy/        %s\"\n\"${c2}-ysooooooydhhhhhhhhhhhddddddddddddddddssy         %s\"\n\"${c2} .-:/+osssyyyysyyyyyyyyyyyyyyyyyyyyyyssy:         %s\"\n\"${c2}       \\`\\`.-/+oosysssssssssssssssssssssss          %s\"\n\"${c2}               \\`\\`.:/+osyysssssssssssssh.          %s\"\n\"${c2}                        \\`-:/+osyyssssyo           %s\"\n\"${c2}                                .-:+++\\`           %s\")\n\t\t;;\n\n\t\t\"Peppermint\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"3\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c2}             PPPPPPPPPPPPPP             \"\n\"${c2}         PPPP${c1}MMMMMMM${c2}PPPPPPPPPPP         \"\n\"${c2}       PPPP${c1}MMMMMMMMMM${c2}PPPPPPPP${c1}MM${c2}PP       \"\n\"${c2}     PPPPPPPP${c1}MMMMMMM${c2}PPPPPPPP${c1}MMMMM${c2}PP     %s\"\n\"${c2}   PPPPPPPPPPPP${c1}MMMMMM${c2}PPPPPPP${c1}MMMMMMM${c2}PP   %s\"\n\"${c2}  PPPPPPPPPPPP${c1}MMMMMMM${c2}PPPP${c1}M${c2}P${c1}MMMMMMMMM${c2}PP  %s\"\n\"${c2} PP${c1}MMMM${c2}PPPPPPPPPP${c1}MMM${c2}PPPPP${c1}MMMMMMM${c2}P${c1}MM${c2}PPPP %s\"\n\"${c2} P${c1}MMMMMMMMMM${c2}PPPPPP${c1}MM${c2}PPPPP${c1}MMMMMM${c2}PPPPPPPP %s\"\n\"${c2}P${c1}MMMMMMMMMMMM${c2}PPPPP${c1}MM${c2}PP${c1}M${c2}P${c1}MM${c2}P${c1}MM${c2}PPPPPPPPPPP%s\"\n\"${c2}P${c1}MMMMMMMMMMMMMMMM${c2}PP${c1}M${c2}P${c1}MMM${c2}PPPPPPPPPPPPPPPP%s\"\n\"${c2}P${c1}MMM${c2}PPPPPPPPPPPPPPPPPPPPPPPPPPPPPP${c1}MMMMM${c2}P%s\"\n\"${c2}PPPPPPPPPPPPPPPP${c1}MMM${c2}P${c1}M${c2}P${c1}MMMMMMMMMMMMMMMM${c2}PP%s\"\n\"${c2}PPPPPPPPPPP${c1}MM${c2}P${c1}MM${c2}PPPP${c1}MM${c2}PPPPP${c1}MMMMMMMMMMM${c2}PP%s\"\n\"${c2} PPPPPPPP${c1}MMMMMM${c2}PPPPP${c1}MM${c2}PPPPPP${c1}MMMMMMMMM${c2}PP %s\"\n\"${c2} PPPP${c1}MM${c2}P${c1}MMMMMMM${c2}PPPPPP${c1}MM${c2}PPPPPPPPPP${c1}MMMM${c2}PP %s\"\n\"${c2}  PP${c1}MMMMMMMMM${c2}P${c1}M${c2}PPPP${c1}MMMMMM${c2}PPPPPPPPPPPPP  %s\"\n\"${c2}   PP${c1}MMMMMMM${c2}PPPPPPP${c1}MMMMMM${c2}PPPPPPPPPPPP   %s\"\n\"${c2}     PP${c1}MMMM${c2}PPPPPPPPP${c1}MMMMMMM${c2}PPPPPPPP     %s\"\n\"${c2}       PP${c1}MM${c2}PPPPPPPP${c1}MMMMMMMMMM${c2}PPPP       %s\"\n\"${c2}         PPPPPPPPPP${c1}MMMMMMMM${c2}PPPP         %s\"\n\"${c2}             PPPPPPPPPPPPPP             %s\")\n\t\t;;\n\n\"Grombyang\"|\"GrombyangOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue')\n\t\t\t\tc2=$(getColor 'light green')\n\t\t\t\tc3=$(getColor 'light red')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tfulloutput=(\n\"${c1}             eeeeeeeeeeee                           %s\"\n\"${c1}          eeeeeeeeeeeeeeeee          %s\"\n\"${c1}       eeeeeeeeeeeeeeeeeeeeeee       %s\"\n\"${c1}     eeeee       ${c2}.o+       ${c1}eeee      %s\"\n\"${c1}   eeee         ${c2}\\`ooo/         ${c1}eeee   %s\"\n\"${c1}  eeee         ${c2}\\`+oooo:         ${c1}eeee  %s\"\n\"${c1} eee          ${c2}\\`+oooooo:          ${c1}eee %s\"\n\"${c1} eee          ${c2}-+oooooo+:         ${c1}eee %s\"\n\"${c1} ee         ${c2}\\`/:oooooooo+:         ${c1}ee %s\"\n\"${c1} ee        ${c2}\\`/+   +++    +:        ${c1}ee %s\"\n\"${c1} ee              ${c2}+o+\\             ${c1}ee %s\"\n\"${c1} eee             ${c2}+o+\\            ${c1}eee %s\"\n\"${c1} eee        ${c2}//  \\\\ooo/  \\\\\\         ${c1}eee %s\"\n\"${c1}  eee      ${c2}//++++oooo++++\\\\\\      ${c1}eee  %s\"\n\"${c1}   eeee    ${c2}::::++oooo+:::::   ${c1}eeee   %s\"\n\"${c1}     eeeee   ${c3}Grombyang OS ${c1}  eeee     %s\"\n\"${c1}       eeeeeeeeeeeeeeeeeeeeeee       %s\"\n\"${c1}          eeeeeeeeeeeeeeeee          %s\"\n\"                                     %s\"\n\"                                     %s\")\n\t;;\n\n\t\t\"Solus\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'blue') # Blue\n\t\t\t\tc3=$(getColor 'black') # Black\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"36\"\n\t\t\tfulloutput=(\n\"${c3}               ......               %s\"\n\"${c3}         .'${c1}D${c3}lddddddddddd'.          %s\"\n\"${c3}      .'ddd${c1}XM${c3}xdddddddddddddd.       %s\"\n\"${c3}    .dddddx${c1}MMM0${c3};dddddddddddddd.     %s\"\n\"${c3}   'dddddl${c1}MMMMMN${c3}cddddddddddddddd.   %s\"\n\"${c3}  ddddddc${c1}WMMMMMMW${c3}lddddddddddddddd.  %s\"\n\"${c3} ddddddc${c1}WMMMMMMMMO${c3}ddoddddddddddddd. %s\"\n\"${c3}.ddddd:${c1}NMMMMMMMMMK${c3}dd${c1}NX${c3}od;c${c1}lxl${c3}dddddd %s\"\n\"${c3}dddddc${c1}WMMMMMMMMMMNN${c3}dd${c1}MMXl${c3};d${c1}00xl;${c3}ddd.%s\"\n\"${c3}ddddl${c1}WMMMMMMMMMMMMM${c3}d;${c1}MMMM0${c3}:dl${c1}XMMXk:${c3}'%s\"\n\"${c3}dddo${c1}WMMMMMMMMMMMMMM${c3}dd${c1}MMMMMW${c3}od${c3};${c1}XMMMOd%s\"\n\"${c3}.dd${c1}MMMMMMMMMMMMMMMM${c3}d:${c1}MMMMMMM${c3}kd${c1}lMKll %s\"\n\"${c3}.;dk0${c1}KXNWWMMMMMMMMM${c3}dx${c1}MMMMMMM${c3}Xl;lxK; %s\"\n\"${c3}  'dddddddd;:cclodcddxddolloxO0O${c1}d'  %s\"\n\"${c1}   ckkxxxddddddddxxkOOO000Okdool.   %s\"\n\"${c2}    .lddddxxxxxxddddooooooooood     %s\"\n\"${c2}      .:oooooooooooooooooooc'       %s\"\n\"${c2}         .,:looooooooooc;.  %s\")\n\t\t;;\n\n\t\t\"Mageia\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t \tc2=$(getColor 'light cyan') # Light Cyan\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\n\"${c2}               .°°.              %s\"\n\"${c2}                °°   .°°.        %s\"\n\"${c2}                .°°°. °°         %s\"\n\"${c2}                .   .            %s\"\n\"${c2}                 °°° .°°°.       %s\"\n\"${c2}             .°°°.   '___'       %s\"\n\"${c1}            .${c2}'___'     ${c1}   .      %s\"\n\"${c1}          :dkxc;'.  ..,cxkd;     %s\"\n\"${c1}        .dkk. kkkkkkkkkk .kkd.   %s\"\n\"${c1}       .dkk.  ';cloolc;.  .kkd   %s\"\n\"${c1}       ckk.                .kk;  %s\"\n\"${c1}       xO:                  cOd  %s\"\n\"${c1}       xO:                  lOd  %s\"\n\"${c1}       lOO.                .OO:  %s\"\n\"${c1}       .k00.              .00x   %s\"\n\"${c1}        .k00;            ;00O.   %s\"\n\"${c1}         .lO0Kc;,,,,,,;c0KOc.    %s\"\n\"${c1}            ;d00KKKKKK00d;       %s\"\n\"${c1}               .,KKKK,.          %s\")\n\t\t;;\n\n\t\t\"Hyperbola GNU/Linux-libre\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light grey') # light grey\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"25\"\n\t\t\tfulloutput=(\n\"${c1}                                    %s\"\n\"${c1}                  ..              , %s\"\n\"${c1}                  a;           ._#  %s\"\n\"${c1}                 )##        _au#?   %s\"\n\"${c1}                 ]##s,.__a_w##e^    %s\"\n\"${c1}                 :###########(      %s\"\n\"${c1}                  ^!#####?!^        %s\"\n\"${c1}                  ._                %s\"\n\"${c1}             _au######a,            %s\"\n\"${c1}           sa###########,           %s\"\n\"${c1}        _a##############o           %s\"\n\"${c1}      .a#####?!^^^^^-####_          %s\"\n\"${c1}     j####^           ~##i          %s\"\n\"${c1}   _de!^               -#i          %s\"\n\"${c1} _#e^                   ]+          %s\"\n\"${c1} ^                      ^           %s\"\n\"${c1}                                    %s\")\n\t\t\t;;\n\n\t\t\"Parabola GNU/Linux-libre\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'purple') # Purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\n\"${c1}                                       %s\"\n\"${c1}                          _,,     _    %s\"\n\"${c1}                   _,   ,##'    ,##;   %s\"\n\"${c1}             _, ,##'  ,##'    ,#####;  %s\"\n\"${c1}         _,;#',##'  ,##'    ,#######'  %s\"\n\"${c1}     _,#**^'         \\`    ,#########   %s\"\n\"${c1} .-^\\`                    \\`#########    %s\"\n\"${c1}                          ########     %s\"\n\"${c1}                          ;######      %s\"\n\"${c1}                          ;####*       %s\"\n\"${c1}                          ####'        %s\"\n\"${c1}                         ;###          %s\"\n\"${c1}                        ,##'           %s\"\n\"${c1}                        ##             %s\"\n\"${c1}                       #'              %s\"\n\"${c1}                      /                %s\"\n\"${c1}                     '                 %s\"\n\"${c1}                                       %s\")\n\t\t;;\n\n\t\t\"Viperr\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'dark grey') # Dark Gray\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"31\"\n\t\t\tfulloutput=(\n\"${c1}    wwzapd         dlzazw      %s\"\n\"${c1}   an${c2}#${c1}zncmqzepweeirzpas${c2}#${c1}xz     %s\"\n\"${c1} apez${c2}##${c1}qzdkawweemvmzdm${c2}##${c1}dcmv   %s\"\n\"${c1}zwepd${c2}####${c1}qzdweewksza${c2}####${c1}ezqpa  %s\"\n\"${c1}ezqpdkapeifjeeazezqpdkazdkwqz  %s\"\n\"${c1} ezqpdksz${c2}##${c1}wepuizp${c2}##${c1}wzeiapdk   %s\"\n\"${c1}  zqpakdpa${c2}#${c1}azwewep${c2}#${c1}zqpdkqze    %s\"\n\"${c1}    apqxalqpewenwazqmzazq      %s\"\n\"${c1}     mn${c2}##${c1}==${c2}#######${c1}==${c2}##${c1}qp       %s\"\n\"${c1}      qw${c2}##${c1}=${c2}#######${c1}=${c2}##${c1}zl        %s\"\n\"${c1}      z0${c2}######${c1}=${c2}######${c1}0a        %s\"\n\"${c1}       qp${c2}#####${c1}=${c2}#####${c1}mq         %s\"\n\"${c1}       az${c2}####${c1}===${c2}####${c1}mn         %s\"\n\"${c1}        ap${c2}#########${c1}qz          %s\"\n\"${c1}         9qlzskwdewz           %s\"\n\"${c1}          zqwpakaiw            %s\"\n\"${c1}            qoqpe              %s\"\n\"${c1}                               %s\")\n\t\t;;\n\n\t\t\"LinuxDeepin\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\n\"${c1}  eeeeeeeeeeeeeeeeeeeeeeeeeeee   %s\"\n\"${c1} eee  eeeeeee          eeeeeeee  %s\"\n\"${c1}ee   eeeeeeeee      eeeeeeeee ee %s\"\n\"${c1}e   eeeeeeeee     eeeeeeeee    e %s\"\n\"${c1}e   eeeeeee    eeeeeeeeee      e %s\"\n\"${c1}e   eeeeee    eeeee            e %s\"\n\"${c1}e    eeeee    eee  eee         e %s\"\n\"${c1}e     eeeee   ee eeeeee        e %s\"\n\"${c1}e      eeeee   eee   eee       e %s\"\n\"${c1}e       eeeeeeeeee  eeee       e %s\"\n\"${c1}e         eeeee    eeee        e %s\"\n\"${c1}e               eeeeee         e %s\"\n\"${c1}e            eeeeeee           e %s\"\n\"${c1}e eee     eeeeeeee             e %s\"\n\"${c1}eeeeeeeeeeeeeeee               e %s\"\n\"${c1}eeeeeeeeeeeee                 ee %s\"\n\"${c1} eeeeeeeeeee                eee  %s\"\n\"${c1}  eeeeeeeeeeeeeeeeeeeeeeeeeeee   %s\"\n\"${c1}                                 %s\")\n\t\t;;\n\n\t\t\"Deepin\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'cyan') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\"${c1}              ............               %s\"\n\"${c1}          .';;;;;.       .,;,.           %s\"\n\"${c1}       .,;;;;;;;.       ';;;;;;;.        %s\"\n\"${c1}     .;::::::::'     .,::;;,''''',.      %s\"\n\"${c1}    ,'.::::::::    .;;'.          ';     %s\"\n\"${c1}   ;'  'cccccc,   ,' :: '..        .:    %s\"\n\"${c1}  ,,    :ccccc.  ;: .c, '' :.       ,;   %s\"\n\"${c1} .l.     cllll' ., .lc  :; .l'       l.  %s\"\n\"${c1} .c       :lllc  ;cl:  .l' .ll.      :'  %s\"\n\"${c1} .l        'looc. .   ,o:  'oo'      c,  %s\"\n\"${c1} .o.         .:ool::coc'  .ooo'      o.  %s\"\n\"${c1}  ::            .....   .;dddo      ;c   %s\"\n\"${c1}   l:...            .';lddddo.     ,o    %s\"\n\"${c1}    lxxxxxdoolllodxxxxxxxxxc      :l     %s\"\n\"${c1}     ,dxxxxxxxxxxxxxxxxxxl.     'o,      %s\"\n\"${c1}       ,dkkkkkkkkkkkkko;.    .;o;        %s\"\n\"${c1}         .;okkkkkdl;.    .,cl:.          %s\"\n\"${c1}             .,:cccccccc:,.              %s\")\n\t\t;;\n\n\t\t\"Uos\")\n\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\tc1=$(getColor 'blue') # red\n\t\t\tc2=$(getColor 'orange') # red\n\t\tfi\n\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\tstartline=\"0\"\n\t\tlogowidth=\"52\"\n\t\tfulloutput=(\n\"${c1}                                   %s\"\n\"${c1}                                   %s\"\n\"${c1}           ############            %s\"\n\"${c1}         ##############            %s\"\n\"${c1}         ############    ${c2}oo        %s\"\n\"${c1}           ########    ${c2}oooooo      %s\"\n\"${c1}     ##      ####    ${c2}oooooooo      %s\"\n\"${c1}     ####      ####    ${c2}oooooo      %s\"\n\"${c1}     ######      ####    ${c2}oooo      %s\"\n\"${c1}     ####          ####    ${c2}oo      %s\"\n\"${c1}     ##      ############          %s\"\n\"${c1}           ################        %s\"\n\"${c1}         ################          %s\"\n\"${c1}             ########              %s\"\n\"${c1}                                   %s\"\n\"${c1}                                   %s\")\n\t\t;;\n\n\t\t\"Chakra\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}      _ _ _        \\\"kkkkkkkk.         %s\"\n\"${c1}    ,kkkkkkkk.,    \\'kkkkkkkkk,        %s\"\n\"${c1}    ,kkkkkkkkkkkk., \\'kkkkkkkkk.       %s\"\n\"${c1}   ,kkkkkkkkkkkkkkkk,\\'kkkkkkkk,       %s\"\n\"${c1}  ,kkkkkkkkkkkkkkkkkkk\\'kkkkkkk.       %s\"\n\"${c1}   \\\"\\'\\'\\\"\\'\\'\\',;::,,\\\"\\'\\'kkk\\'\\'kkkkk;   __   %s\"\n\"${c1}       ,kkkkkkkkkk, \\\"k\\'\\'kkkkk\\' ,kkkk  %s\"\n\"${c1}     ,kkkkkkk\\' ., \\' .: \\'kkkk\\',kkkkkk  %s\"\n\"${c1}   ,kkkkkkkk\\'.k\\'   ,  ,kkkk;kkkkkkkkk %s\"\n\"${c1}  ,kkkkkkkk\\';kk \\'k  \\\"\\'k\\',kkkkkkkkkkkk %s\"\n\"${c1} .kkkkkkkkk.kkkk.\\'kkkkkkkkkkkkkkkkkk\\' %s\"\n\"${c1} ;kkkkkkkk\\'\\'kkkkkk;\\'kkkkkkkkkkkkk\\'\\'   %s\"\n\"${c1} \\'kkkkkkk; \\'kkkkkkkk.,\\\"\\\"\\'\\'\\\"\\'\\'\\\"\\\"       %s\"\n\"${c1}   \\'\\'kkkk;  \\'kkkkkkkkkk.,             %s\"\n\"${c1}      \\';\\'    \\'kkkkkkkkkkkk.,          %s\"\n\"${c1}              ';kkkkkkkkkk\\'           %s\"\n\"${c1}                ';kkkkkk\\'             %s\"\n\"${c1}                   \\\"\\'\\'\\\"               %s\")\n\t\t;;\n\n\t\t\"Fuduntu\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'dark grey') # Dark Gray\n\t\t\t\tc2=$(getColor 'yellow') # Bold Yellow\n\t\t\t\tc3=$(getColor 'light red') # Light Red\n\t\t\t\tc4=$(getColor 'white') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c4=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"49\"\n\t\t\tfulloutput=(\n\"${c1}       \\`dwoapfjsod\\`${c2}           \\`dwoapfjsod\\`       \"\n\"${c1}    \\`xdwdsfasdfjaapz\\`${c2}       \\`dwdsfasdfjaapzx\\`    %s\"\n\"${c1}  \\`wadladfladlafsozmm\\`${c2}     \\`wadladfladlafsozmm\\`  %s\"\n\"${c1} \\`aodowpwafjwodisosoaas\\`${c2} \\`odowpwafjwodisosoaaso\\` %s\"\n\"${c1} \\`adowofaowiefawodpmmxs\\`${c2} \\`dowofaowiefawodpmmxso\\` %s\"\n\"${c1} \\`asdjafoweiafdoafojffw\\`${c2} \\`sdjafoweiafdoafojffwq\\` %s\"\n\"${c1}  \\`dasdfjalsdfjasdlfjdd\\`${c2} \\`asdfjalsdfjasdlfjdda\\`  %s\"\n\"${c1}   \\`dddwdsfasdfjaapzxaw\\`${c2} \\`ddwdsfasdfjaapzxawo\\`   %s\"\n\"${c1}     \\`dddwoapfjsowzocmw\\`${c2} \\`ddwoapfjsowzocmwp\\`     %s\"\n\"${c1}       \\`ddasowjfowiejao\\`${c2} \\`dasowjfowiejaow\\`       %s\"\n\"${c1}                                                 %s\"\n\"${c3}       \\`ddasowjfowiejao\\`${c4} \\`dasowjfowiejaow\\`       %s\"\n\"${c3}     \\`dddwoapfjsowzocmw\\`${c4} \\`ddwoapfjsowzocmwp\\`     %s\"\n\"${c3}   \\`dddwdsfasdfjaapzxaw\\`${c4} \\`ddwdsfasdfjaapzxawo\\`   %s\"\n\"${c3}  \\`dasdfjalsdfjasdlfjdd\\`${c4} \\`asdfjalsdfjasdlfjdda\\`  %s\"\n\"${c3} \\`asdjafoweiafdoafojffw\\`${c4} \\`sdjafoweiafdoafojffwq\\` %s\"\n\"${c3} \\`adowofaowiefawodpmmxs\\`${c4} \\`dowofaowiefawodpmmxso\\` %s\"\n\"${c3} \\`aodowpwafjwodisosoaas\\`${c4} \\`odowpwafjwodisosoaaso\\` %s\"\n\"${c3}   \\`wadladfladlafsozmm\\`${c4}     \\`wadladfladlafsozmm\\` %s\"\n\"${c3}     \\`dwdsfasdfjaapzx\\`${c4}       \\`dwdsfasdfjaapzx\\`   %s\"\n\"${c3}        \\`woapfjsod\\`${c4}             \\`woapfjsod\\`      %s\")\n\t\t;;\n\n\t\t\"Zorin OS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tfulloutput=(\n\"${c1}           ...................          %s\"\n\"${c1}          :ooooooooooooooooooo/         %s\"\n\"${c1}         /ooooooooooooooooooooo+        %s\"\n\"${c1}        ''''''''''''''''''''''''        %s\"\n\"${c1}                                        %s\"\n\"${c1}    .++++++++++++++++++/.       :++-    %s\"\n\"${c1}   -oooooooooooooooo/-       :+ooooo:   %s\"\n\"${c1}  :oooooooooooooo/-       :+ooooooooo:  %s\"\n\"${c1} .oooooooooooo+-       :+ooooooooooooo- %s\"\n\"${c1}  -oooooooo/-       -+ooooooooooooooo:  %s\"\n\"${c1}   .oooo+-       -+ooooooooooooooooo-   %s\"\n\"${c1}    .--        .-------------------.    %s\"\n\"${c1}                                        %s\"\n\"${c1}        .//////////////////////-        %s\"\n\"${c1}         :oooooooooooooooooooo/         %s\"\n\"${c1}          :oooooooooooooooooo:          %s\"\n\"${c1}           ''''''''''''''''''           %s\")\n\t\t;;\n\n\t\t\"Mac OS X\"|\"macOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'green') # Green\n\t\t\t\tc2=$(getColor 'brown') # Yellow\n\t\t\t\tc3=$(getColor 'light red') # Orange\n\t\t\t\tc4=$(getColor 'red') # Red\n\t\t\t\tc5=$(getColor 'purple') # Purple\n\t\t\t\tc6=$(getColor 'blue') # Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then\n\t\t\t\tc1=\"${my_lcolor}\"\n\t\t\t\tc2=\"${my_lcolor}\"\n\t\t\t\tc3=\"${my_lcolor}\"\n\t\t\t\tc4=\"${my_lcolor}\"\n\t\t\t\tc5=\"${my_lcolor}\"\n\t\t\t\tc6=\"${my_lcolor}\"\n\t\t\tfi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"31\"\n\t\t\tfulloutput=(\n\"${c1}                               \"\n\"${c1}                 -/+:.         %s\"\n\"${c1}                :++++.         %s\"\n\"${c1}               /+++/.          %s\"\n\"${c1}       .:-::- .+/:-\\`\\`.::-      %s\"\n\"${c1}    .:/++++++/::::/++++++/:\\`   %s\"\n\"${c2}  .:///////////////////////:\\`  %s\"\n\"${c2}  ////////////////////////\\`    %s\"\n\"${c3} -+++++++++++++++++++++++\\`     %s\"\n\"${c3} /++++++++++++++++++++++/      %s\"\n\"${c4} /sssssssssssssssssssssss.     %s\"\n\"${c4} :ssssssssssssssssssssssss-    %s\"\n\"${c5}  osssssssssssssssssssssssso/\\` %s\"\n\"${c5}  \\`syyyyyyyyyyyyyyyyyyyyyyyy+\\` %s\"\n\"${c6}   \\`ossssssssssssssssssssss/   %s\"\n\"${c6}     :ooooooooooooooooooo+.    %s\"\n\"${c6}      \\`:+oo+/:-..-:/+o+/-      %s\"\n\"${c6}                               %s\")\n\t\t;;\n\n\t\t\"Mac OS X - Classic\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'blue') # Blue\n\t\t\t\tc2=$(getColor 'light blue') # Light blue\n\t\t\t\tc3=$(getColor 'light grey') # Gray\n\t\t\t\tc4=$(getColor 'dark grey') # Dark Ggray\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c4=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"39\"\n\t\t\tfulloutput=(\n\"${c3}                                       \"\n\"${c3}                        ..             %s\"\n\"${c3}                       dWc             %s\"\n\"${c3}                     ,X0'              %s\"\n\"${c1}  ;;;;;;;;;;;;;;;;;;${c3}0Mk${c2}::::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;;;;;${c3}KWo${c2}:::::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;${c4}NN${c1};;;;;${c3}KWo${c2}:::::${c3}NN${c2}:::::::::: %s\"\n\"${c1}  ;;;;;;;;;${c4}NN${c1};;;;${c3}0Md${c2}::::::${c3}NN${c2}:::::::::: %s\"\n\"${c1}  ;;;;;;;;;${c4}NN${c1};;;${c3}xW0${c2}:::::::${c3}NN${c2}:::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;;${c3}KMc${c2}::::::::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;${c3}lWX${c2}:::::::::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;${c3}xWWXXXXNN7${c2}::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;;;;;;;;${c3}WK${c2}:::::::::::::: %s\"\n\"${c1}  ;;;;;${c4}TKX0ko.${c1};;;;;;;${c3}kMx${c2}:::${c3}.cOKNF${c2}::::: %s\"\n\"${c1}  ;;;;;;;;${c4}\\`kO0KKKKKKK${c3}NMNXK0OP*${c2}:::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;;;;;;;${c3}kMx${c2}:::::::::::::: %s\"\n\"${c1}  ;;;;;;;;;;;;;;;;;;;;${c3}WX${c2}:::::::::::::: %s\"\n\"${c3}                      lMc              %s\"\n\"${c3}                       kN.             %s\"\n\"${c3}                        o'             %s\"\n\"${c3}                                       %s\")\n\t\t;;\n\n\t\t\"Windows\"|\"Cygwin\"|\"Msys\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light red') # Red\n\t\t\t\tc2=$(getColor 'light green') # Green\n\t\t\t\tc3=$(getColor 'light blue') # Blue\n\t\t\t\tc4=$(getColor 'yellow') # Yellow\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c4=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c1}        ,.=:!!t3Z3z.,                %s\"\n\"${c1}       :tt:::tt333EE3                %s\"\n\"${c1}       Et:::ztt33EEEL${c2} @Ee.,      .., %s\"\n\"${c1}      ;tt:::tt333EE7${c2} ;EEEEEEttttt33# %s\"\n\"${c1}     :Et:::zt333EEQ.${c2} \\$EEEEEttttt33QL %s\"\n\"${c1}     it::::tt333EEF${c2} @EEEEEEttttt33F  %s\"\n\"${c1}    ;3=*^\\`\\`\\`\\\"*4EEV${c2} :EEEEEEttttt33@.  %s\"\n\"${c3}    ,.=::::!t=., ${c1}\\`${c2} @EEEEEEtttz33QF   %s\"\n\"${c3}   ;::::::::zt33)${c2}   \\\"4EEEtttji3P*    %s\"\n\"${c3}  :t::::::::tt33.${c4}:Z3z..${c2}  \\`\\`${c4} ,..g.    %s\"\n\"${c3}  i::::::::zt33F${c4} AEEEtttt::::ztF     %s\"\n\"${c3} ;:::::::::t33V${c4} ;EEEttttt::::t3      %s\"\n\"${c3} E::::::::zt33L${c4} @EEEtttt::::z3F      %s\"\n\"${c3}{3=*^\\`\\`\\`\\\"*4E3)${c4} ;EEEtttt:::::tZ\\`      %s\"\n\"${c3}             \\`${c4} :EEEEtttt::::z7       %s\"\n\"${c4}                 \\\"VEzjt:;;z>*\\`       %s\")\n\t\t;;\n\n\t\t\"Windows - Modern\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}                                  .., %s\"\n\"${c1}                      ....,,:;+ccllll %s\"\n\"${c1}        ...,,+:;  cllllllllllllllllll %s\"\n\"${c1}  ,cclllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}                                      %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  llllllllllllll  lllllllllllllllllll %s\"\n\"${c1}  \\`'ccllllllllll  lllllllllllllllllll %s\"\n\"${c1}         \\`'\\\"\\\"*::  :ccllllllllllllllll %s\"\n\"${c1}                        \\`\\`\\`\\`''\\\"*::cll %s\"\n\"${c1}                                   \\`\\` %s\")\n\t\t;;\n\n\t\t\"Haiku\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tif [ \"$haikualpharelease\" == \"yes\" ]; then\n\t\t\t\t\tc1=$(getColor 'black_haiku') # Black\n\t\t\t\t\tc2=$(getColor 'light grey') # Light Gray\n\t\t\t\telse\n\t\t\t\t\tc1=$(getColor 'black') # Black\n\t\t\t\t\tc2=${c1}\n\t\t\t\tfi\n\t\t\t\tc3=$(getColor 'green') # Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"36\"\n\t\t\tfulloutput=(\n\"${c1}          :dc'                      %s\"\n\"${c1}       'l:;'${c2},${c1}'ck.    .;dc:.         %s\"\n\"${c1}       co    ${c2}..${c1}k.  .;;   ':o.       %s\"\n\"${c1}       co    ${c2}..${c1}k. ol      ${c2}.${c1}0.       %s\"\n\"${c1}       co    ${c2}..${c1}k. oc     ${c2}..${c1}0.       %s\"\n\"${c1}       co    ${c2}..${c1}k. oc     ${c2}..${c1}0.       %s\"\n\"${c1}.Ol,.  co ${c2}...''${c1}Oc;kkodxOdddOoc,.    %s\"\n\"${c1} ';lxxlxOdxkxk0kd${c3}oooll${c1}dl${c3}ccc:${c1}clxd;   %s\"\n\"${c1}     ..${c3}oOolllllccccccc:::::${c1}od;      %s\"\n\"${c1}       cx:ooc${c3}:::::::;${c1}cooolcX.       %s\"\n\"${c1}       cd${c2}.${c1}''cloxdoollc' ${c2}...${c1}0.       %s\"\n\"${c1}       cd${c2}......${c1}k;${c2}.${c1}xl${c2}....  .${c1}0.       %s\"\n\"${c1}       .::c${c2};..${c1}cx;${c2}.${c1}xo${c2}..... .${c1}0.       %s\"\n\"${c1}          '::c'${c2}...${c1}do${c2}..... .${c1}K,       %s\"\n\"${c1}                  cd,.${c2}....:${c1}O,${c2}...... %s\"\n\"${c1}                    ':clod:'${c2}......  %s\"\n\"${c1}                        ${c2}.           %s\")\n\t\t;;\n\n\t\t\"Trisquel\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\t\tc2=$(getColor 'light cyan') # Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c1}                          ▄▄▄▄▄▄      %s\"\n\"${c1}                       ▄█████████▄    %s\"\n\"${c1}       ▄▄▄▄▄▄         ████▀   ▀████   %s\"\n\"${c1}    ▄██████████▄     ████▀   ▄▄ ▀███  %s\"\n\"${c1}  ▄███▀▀   ▀▀████     ███▄   ▄█   ███ %s\"\n\"${c1} ▄███   ▄▄▄   ████▄    ▀██████   ▄███ %s\"\n\"${c1} ███   █▀▀██▄  █████▄     ▀▀   ▄████  %s\"\n\"${c1} ▀███      ███  ███████▄▄  ▄▄██████   %s\"\n\"${c1}  ▀███▄   ▄███  █████████████${c2}████▀    %s\"\n\"${c1}   ▀█████████    ███████${c2}███▀▀▀        %s\"\n\"${c1}     ▀▀███▀▀     ██${c2}████▀▀             %s\"\n\"${c2}                ██████▀   ▄▄▄▄        %s\"\n\"${c2}               █████▀   ████████      %s\"\n\"${c2}               █████   ███▀  ▀███     %s\"\n\"${c2}                ████▄   ██▄▄▄  ███    %s\"\n\"${c2}                 █████▄   ▀▀  ▄██     %s\"\n\"${c2}                   ██████▄▄▄████      %s\"\n\"${c2}\t\t              █████▀▀       %s\")\n\t\t;;\n\n\t\t\"Manjaro\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\"\"\n\"${c1} ██████████████████  ████████    %s\"\n\"${c1} ██████████████████  ████████    %s\"\n\"${c1} ██████████████████  ████████    %s\"\n\"${c1} ██████████████████  ████████    %s\"\n\"${c1} ████████            ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"${c1} ████████  ████████  ████████    %s\"\n\"                                 %s\")\n\t\t;;\n\n\t\t\"Netrunner\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"43\"\n\t\t\tfulloutput=(\n\"${c1} nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn  %s\"\n\"${c1} nnnnnnnnnnnnnn            nnnnnnnnnnnnnn  %s\"\n\"${c1} nnnnnnnnnn     nnnnnnnnnn     nnnnnnnnnn  %s\"\n\"${c1} nnnnnnn   nnnnnnnnnnnnnnnnnnnn   nnnnnnn  %s\"\n\"${c1} nnnn   nnnnnnnnnnnnnnnnnnnnnnnnnn   nnnn  %s\"\n\"${c1} nnn  nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn  nnn  %s\"\n\"${c1} nn  nnnnnnnnnnnnnnnnnnnnnn  nnnnnnnn  nn  %s\"\n\"${c1} n  nnnnnnnnnnnnnnnnn       nnnnnnnnnn  n  %s\"\n\"${c1} n nnnnnnnnnnn              nnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnn                  nnnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnnnnnnn             nnnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnnnnnnnnn           nnnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnnnnnnnnnnnn       nnnnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnnnnnnnnnnnnn      nnnnnnnnnnnnn n  %s\"\n\"${c1} n nnnnnnnnnnnnnnnnnn    nnnnnnnnnnnn   n  %s\"\n\"${c1} nn  nnnnnnnnnnnnnnnnn   nnnnnnnnnnnn  nn  %s\"\n\"${c1} nnn   nnnnnnnnnnnnnnn  nnnnnnnnnnn   nnn  %s\"\n\"${c1} nnnnn   nnnnnnnnnnnnnn nnnnnnnnn   nnnnn  %s\"\n\"${c1} nnnnnnn   nnnnnnnnnnnnnnnnnnnn   nnnnnnn  %s\"\n\"${c1} nnnnnnnnnn     nnnnnnnnnn     nnnnnnnnnn  %s\"\n\"${c1} nnnnnnnnnnnnnn            nnnnnnnnnnnnnn  %s\"\n\"${c1} nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn  %s\"\n\"${c1}                                           %s\")\n\t\t;;\n\n\t\t\t\"Logos\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'green') # Green\n\t\t\tfi\n            if [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"25\"\n\t\t\tfulloutput=(\n\"${c1}    ..:.:.               %s\"\n\"${c1}   ..:.:.:.:.            %s\"\n\"${c1}  ..:.:.:.:.:.:.         %s\"\n\"${c1} ..:.:.:.:.:.:.:.:.      %s\"\n\"${c1}   .:.::;.::::..:.:.:.   %s\"\n\"${c1}      .:.:.::.::.::.;;/  %s\"\n\"${c1}         .:.::.::://///  %s\"\n\"${c1}            ..;;///////  %s\"\n\"${c1}            ///////////  %s\"\n\"${c1}         //////////////  %s\"\n\"${c1}      /////////////////  %s\"\n\"${c1}   ///////////////////   %s\"\n\"${c1} //////////////////      %s\"\n\"${c1}  //////////////         %s\"\n\"${c1}   //////////            %s\"\n\"${c1}    //////               %s\"\n\"${c1}     //                  %s\")\n\t\t;;\n\n\t\t\t\"Manjaro-tree\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=\"\\e[1;32m\" # Green\n\t\t\t\tc2=\"\\e[1;33m\" # Yellow\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\n\"${c1}                         ###     %s\"\n\"${c1}     ###             ####        %s\"\n\"${c1}        ###       ####           %s\"\n\"${c1}         ##### #####             %s\"\n\"${c1}      #################          %s\"\n\"${c1}    ###     #####    ####        %s\"\n\"${c1}   ##        ${c2}OOO       ${c1}###       %s\"\n\"${c1}  #          ${c2}WW         ${c1}##       %s\"\n\"${c1}            ${c2}WW            ${c1}#      %s\"\n\"${c2}            WW                   %s\"\n\"${c2}            WW                   %s\"\n\"${c2}           WW                    %s\"\n\"${c2}           WW                    %s\"\n\"${c2}           WW                    %s\"\n\"${c2}          WW                     %s\"\n\"${c2}          WW                     %s\"\n\"${c2}          WW                     %s\"\n\"${c2}                                 %s\")\n\t\t;;\n\n\t\t\"elementary OS\"|\"elementary os\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"36\"\n\t\t\tfulloutput=(\n\"${c1}                                    %s\"\n\"${c1}         eeeeeeeeeeeeeeeee          %s\"\n\"${c1}      eeeeeeeeeeeeeeeeeeeeeee       %s\"\n\"${c1}    eeeee  eeeeeeeeeeee   eeeee     %s\"\n\"${c1}  eeee   eeeee       eee     eeee   %s\"\n\"${c1} eeee   eeee          eee     eeee  %s\"\n\"${c1}eee    eee            eee       eee %s\"\n\"${c1}eee   eee            eee        eee %s\"\n\"${c1}ee    eee           eeee       eeee %s\"\n\"${c1}ee    eee         eeeee      eeeeee %s\"\n\"${c1}ee    eee       eeeee      eeeee ee %s\"\n\"${c1}eee   eeee   eeeeee      eeeee  eee %s\"\n\"${c1}eee    eeeeeeeeee     eeeeee    eee %s\"\n\"${c1} eeeeeeeeeeeeeeeeeeeeeeee    eeeee  %s\"\n\"${c1}  eeeeeeee eeeeeeeeeeee      eeee   %s\"\n\"${c1}    eeeee                 eeeee     %s\"\n\"${c1}      eeeeeee         eeeeeee       %s\"\n\"${c1}         eeeeeeeeeeeeeeeee          %s\")\n\t;;\n\n\t\t\"Android\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light green') # Bold Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"2\"\n\t\t\tlogowidth=\"24\"\n\t\t\tfulloutput=(\n\"${c1}       ╲ ▁▂▂▂▁ ╱        \"\n\"${c1}       ▄███████▄        \"\n\"${c1}      ▄██ ███ ██▄       %s\"\n\"${c1}     ▄███████████▄      %s\"\n\"${c1}  ▄█ ▄▄▄▄▄▄▄▄▄▄▄▄▄ █▄   %s\"\n\"${c1}  ██ █████████████ ██   %s\"\n\"${c1}  ██ █████████████ ██   %s\"\n\"${c1}  ██ █████████████ ██   %s\"\n\"${c1}  ██ █████████████ ██   %s\"\n\"${c1}     █████████████      %s\"\n\"${c1}      ███████████       %s\"\n\"${c1}       ██     ██        %s\"\n\"${c1}       ██     ██        %s\")\n\t\t;;\n\n\t\t\"Scientific Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue')\n\t\t\t\tc2=$(getColor 'light red')\n\t\t\t\tc3=$(getColor 'white')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"44\"\n\t\t\tfulloutput=(\n\"${c1}                  =/;;/-                    \"\n\"${c1}                 +:    //                   %s\"\n\"${c1}                /;      /;                  %s\"\n\"${c1}               -X        H.                 %s\"\n\"${c1} .//;;;:;;-,   X=        :+   .-;:=;:;#;.   %s\"\n\"${c1} M-       ,=;;;#:,      ,:#;;:=,       ,@   %s\"\n\"${c1} :#           :#.=/++++/=.$=           #=   %s\"\n\"${c1}  ,#;         #/:+/;,,/++:+/         ;+.    %s\"\n\"${c1}    ,+/.    ,;@+,        ,#H;,    ,/+,      %s\"\n\"${c1}       ;+;;/= @.  ${c2}.H${c3}#${c2}#X   ${c1}-X :///+;         %s\"\n\"${c1}       ;+=;;;.@,  ${c3}.X${c2}M${c3}@$.  ${c1}=X.//;=#/.        %s\"\n\"${c1}    ,;:      :@#=        =\\$H:     .+#-      %s\"\n\"${c1}  ,#=         #;-///==///-//         =#,    %s\"\n\"${c1} ;+           :#-;;;:;;;;-X-           +:   %s\"\n\"${c1} @-      .-;;;;M-        =M/;;;-.      -X   %s\"\n\"${c1}  :;;::;;-.    #-        :+    ,-;;-;:==    %s\"\n\"${c1}               ,X        H.                 %s\"\n\"${c1}                ;/      #=                  %s\"\n\"${c1}                 //    +;                   %s\"\n\"${c1}                  '////'                    %s\")\n\t\t;;\n\n\t\t\"BackTrack Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light red') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}..............                                  \"\n\"${c1}            ..,;:ccc,.                          %s\"\n\"${c1}          ......''';lxO.                        %s\"\n\"${c1}.....''''..........,:ld;                        %s\"\n\"${c1}           .';;;:::;,,.x,                       %s\"\n\"${c1}      ..'''.            0Xxoc:,.  ...           %s\"\n\"${c1}  ....                ,ONkc;,;cokOdc',.         %s\"\n\"${c1} .                   OMo           ':${c2}dd${c1}o.       %s\"\n\"${c1}                    dMc               :OO;      %s\"\n\"${c1}                    0M.                 .:o.    %s\"\n\"${c1}                    ;Wd                         %s\"\n\"${c1}                     ;XO,                       %s\"\n\"${c1}                       ,d0Odlc;,..              %s\"\n\"${c1}                           ..',;:cdOOd::,.      %s\"\n\"${c1}                                    .:d;.':;.   %s\"\n\"${c1}                                       'd,  .'  %s\"\n\"${c1}                                         ;l   ..%s\"\n\"${c1}                                          .o    %s\"\n\"${c1}                                            c   %s\"\n\"${c1}                                            .'  %s\"\n\"${c1}                                             .  %s\")\n\t\t;;\n\n\t\t\"Kali Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # White\n\t\t\t\tc2=$(getColor 'black') # Light Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}..............                                  \"\n\"${c1}            ..,;:ccc,.                          %s\"\n\"${c1}          ......''';lxO.                        %s\"\n\"${c1}.....''''..........,:ld;                        %s\"\n\"${c1}           .';;;:::;,,.x,                       %s\"\n\"${c1}      ..'''.            0Xxoc:,.  ...           %s\"\n\"${c1}  ....                ,ONkc;,;cokOdc',.         %s\"\n\"${c1} .                   OMo           ':${c2}dd${c1}o.       %s\"\n\"${c1}                    dMc               :OO;      %s\"\n\"${c1}                    0M.                 .:o.    %s\"\n\"${c1}                    ;Wd                         %s\"\n\"${c1}                     ;XO,                       %s\"\n\"${c1}                       ,d0Odlc;,..              %s\"\n\"${c1}                           ..',;:cdOOd::,.      %s\"\n\"${c1}                                    .:d;.':;.   %s\"\n\"${c1}                                       'd,  .'  %s\"\n\"${c1}                                         ;l   ..%s\"\n\"${c1}                                          .o    %s\"\n\"${c1}                                            c   %s\"\n\"${c1}                                            .'  %s\"\n\"${c1}                                             .  %s\")\n\t\t;;\n\n\t\t\"Sabayon\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"38\"\n\t\t\tfulloutput=(\n\"${c2}            ...........               %s\"\n\"${c2}         ..             ..            %s\"\n\"${c2}      ..                   ..         %s\"\n\"${c2}    ..           ${c1}o           ${c2}..       %s\"\n\"${c2}  ..            ${c1}:W'            ${c2}..     %s\"\n\"${c2} ..             ${c1}.d.             ${c2}..    %s\"\n\"${c2}:.             ${c1}.KNO              ${c2}.:   %s\"\n\"${c2}:.             ${c1}cNNN.             ${c2}.:   %s\"\n\"${c2}:              ${c1}dXXX,              ${c2}:   %s\"\n\"${c2}:   ${c1}.          dXXX,       .cd,   ${c2}:   %s\"\n\"${c2}:   ${c1}'kc ..     dKKK.    ,ll;:'    ${c2}:   %s\"\n\"${c2}:     ${c1}.xkkxc;..dkkkc',cxkkl       ${c2}:   %s\"\n\"${c2}:.     ${c1}.,cdddddddddddddo:.       ${c2}.:   %s\"\n\"${c2} ..         ${c1}:lllllll:           ${c2}..    %s\"\n\"${c2}   ..         ${c1}',,,,,          ${c2}..      %s\"\n\"${c2}     ..                     ..        %s\"\n\"${c2}        ..               ..           %s\"\n\"${c2}          ...............             %s\")\n\t\t;;\n\n\t\t\"KaOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"35\"\n\t\t\tfulloutput=(\n\"${c1}                     ..            %s\"\n\"${c1}  .....         ..OSSAAAAAAA..     %s\"\n\"${c1} .KKKKSS.     .SSAAAAAAAAAAA.      %s\"\n\"${c1}.KKKKKSO.    .SAAAAAAAAAA...       %s\"\n\"${c1}KKKKKKS.   .OAAAAAAAA.             %s\"\n\"${c1}KKKKKKS.  .OAAAAAA.                %s\"\n\"${c1}KKKKKKS. .SSAA..                   %s\"\n\"${c1}.KKKKKS..OAAAAAAAAAAAA........     %s\"\n\"${c1} DKKKKO.=AA=========A===AASSSO..   %s\"\n\"${c1}  AKKKS.==========AASSSSAAAAAASS.  %s\"\n\"${c1}  .=KKO..========ASS.....SSSSASSSS.%s\"\n\"${c1}    .KK.       .ASS..O.. =SSSSAOSS:%s\"\n\"${c1}     .OK.      .ASSSSSSSO...=A.SSA.%s\"\n\"${c1}       .K      ..SSSASSSS.. ..SSA. %s\"\n\"${c1}                 .SSS.AAKAKSSKA.   %s\"\n\"${c1}                    .SSS....S..    %s\")\n\t\t;;\n\n\t\t\"CentOS\"|\"CentOS Stream\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'yellow')\n\t\t\t\tc2=$(getColor 'light green')\n\t\t\t\tc3=$(getColor 'light blue')\n\t\t\t\tc4=$(getColor 'light purple')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c4=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c1}                   ..                   %s\"\n\"${c1}                 .PLTJ.                 %s\"\n\"${c1}                <><><><>                %s\"\n\"${c2}       KKSSV' 4KKK ${c1}LJ${c4} KKKL.'VSSKK       %s\"\n\"${c2}       KKV' 4KKKKK ${c1}LJ${c4} KKKKAL 'VKK       %s\"\n\"${c2}       V' ' 'VKKKK ${c1}LJ${c4} KKKKV' ' 'V       %s\"\n\"${c2}       .4MA.' 'VKK ${c1}LJ${c4} KKV' '.4Mb.       %s\"\n\"${c4}     . ${c2}KKKKKA.' 'V ${c1}LJ${c4} V' '.4KKKKK ${c3}.     %s\"\n\"${c4}   .4D ${c2}KKKKKKKA.'' ${c1}LJ${c4} ''.4KKKKKKK ${c3}FA.   %s\"\n\"${c4}  <QDD ++++++++++++  ${c3}++++++++++++ GFD>  %s\"\n\"${c4}   'VD ${c3}KKKKKKKK'.. ${c2}LJ ${c1}..'KKKKKKKK ${c3}FV    %s\"\n\"${c4}     ' ${c3}VKKKKK'. .4 ${c2}LJ ${c1}K. .'KKKKKV ${c3}'     %s\"\n\"${c3}        'VK'. .4KK ${c2}LJ ${c1}KKA. .'KV'        %s\"\n\"${c3}       A. . .4KKKK ${c2}LJ ${c1}KKKKA. . .4       %s\"\n\"${c3}       KKA. 'KKKKK ${c2}LJ ${c1}KKKKK' .4KK       %s\"\n\"${c3}       KKSSA. VKKK ${c2}LJ ${c1}KKKV .4SSKK       %s\"\n\"${c2}                <><><><>                %s\"\n\"${c2}                 'MKKM'                 %s\"\n\"${c2}                   ''                   %s\")\n\t\t;;\n\n\t\t\"Jiyuu Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"31\"\n\t\t\tfulloutput=(\n\"${c1}+++++++++++++++++++++++.       %s\"\n\"${c1}ss:-......-+so/:----.os-       %s\"\n\"${c1}ss        +s/        os-       %s\"\n\"${c1}ss       :s+         os-       %s\"\n\"${c1}ss       os.         os-       %s\"\n\"${c1}ss      .so          os-       %s\"\n\"${c1}ss      :s+          os-       %s\"\n\"${c1}ss      /s/          os-       %s\"\n\"${c1}ss      /s:          os-       %s\"\n\"${c1}ss      +s-          os-       %s\"\n\"${c1}ss-.....os:..........os-       %s\"\n\"${c1}++++++++os+++++++++oooo.       %s\"\n\"${c1}        os.     ./oo/.         %s\"\n\"${c1}        os.   ./oo:            %s\"\n\"${c1}        os. ./oo:              %s\"\n\"${c1}        os oo+-                %s\"\n\"${c1}        os+-                   %s\"\n\"${c1}        /.                     %s\")\n\t\t;;\n\n\t\t\"Antergos\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'blue') # Light Blue\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"41\"\n\t\t\tfulloutput=(\n\"${c1}               \\`.-/::/-\\`\\`                \"\n\"${c1}            .-/osssssssso/.              %s\"\n\"${c1}           :osyysssssssyyys+-            %s\"\n\"${c1}        \\`.+yyyysssssssssyyyyy+.          %s\"\n\"${c1}       \\`/syyyyyssssssssssyyyyys-\\`        %s\"\n\"${c1}      \\`/yhyyyyysss${c2}++${c1}ssosyyyyhhy/\\`        %s\"\n\"${c1}     .ohhhyyyys${c2}o++/+o${c1}so${c2}+${c1}syy${c2}+${c1}shhhho.      %s\"\n\"${c1}    .shhhhys${c2}oo++//+${c1}sss${c2}+++${c1}yyy${c2}+s${c1}hhhhs.     %s\"\n\"${c1}   -yhhhhs${c2}+++++++o${c1}ssso${c2}+++${c1}yyy${c2}s+o${c1}hhddy:    %s\"\n\"${c1}  -yddhhy${c2}o+++++o${c1}syyss${c2}++++${c1}yyy${c2}yooy${c1}hdddy-   %s\"\n\"${c1} .yddddhs${c2}o++o${c1}syyyyys${c2}+++++${c1}yyhh${c2}sos${c1}hddddy\\`  %s\"\n\"${c1}\\`odddddhyosyhyyyyyy${c2}++++++${c1}yhhhyosddddddo  %s\"\n\"${c1}.dmdddddhhhhhhhyyyo${c2}+++++${c1}shhhhhohddddmmh. %s\"\n\"${c1}ddmmdddddhhhhhhhso${c2}++++++${c1}yhhhhhhdddddmmdy %s\"\n\"${c1}dmmmdddddddhhhyso${c2}++++++${c1}shhhhhddddddmmmmh %s\"\n\"${c1}-dmmmdddddddhhys${c2}o++++o${c1}shhhhdddddddmmmmd- %s\"\n\"${c1} .smmmmddddddddhhhhhhhhhdddddddddmmmms.  %s\"\n\"${c1}   \\`+ydmmmdddddddddddddddddddmmmmdy/.    %s\"\n\"${c1}      \\`.:+ooyyddddddddddddyyso+:.\\`       %s\")\n\t\t;;\n\n\t\t\"Void Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'green')       # Dark Green\n\t\t\t\tc2=$(getColor 'light green') # Light Green\n\t\t\t\tc3=$(getColor 'dark grey')   # Black\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"47\"\n\t\t\tfulloutput=(\n\"${c2}                 __.;=====;.__                 %s\"\n\"${c2}             _.=+==++=++=+=+===;.              %s\"\n\"${c2}              -=+++=+===+=+=+++++=_            %s\"\n\"${c1}         .     ${c2}-=:\\`\\`     \\`--==+=++==.          %s\"\n\"${c1}        _vi,    ${c2}\\`            --+=++++:         %s\"\n\"${c1}       .uvnvi.       ${c2}_._       -==+==+.        %s\"\n\"${c1}      .vvnvnI\\`    ${c2}.;==|==;.     :|=||=|.       %s\"\n\"${c3} +QmQQm${c1}pvvnv; ${c3}_yYsyQQWUUQQQm #QmQ#${c2}:${c3}QQQWUV\\$QQmL %s\"\n\"${c3}  -QQWQW${c1}pvvo${c3}wZ?.wQQQE${c2}==<${c3}QWWQ/QWQW.QQWW${c2}(: ${c3}jQWQE %s\"\n\"${c3}   -\\$QQQQmmU'  jQQQ@${c2}+=<${c3}QWQQ)mQQQ.mQQQC${c2}+;${c3}jWQQ@' %s\"\n\"${c3}    -\\$WQ8Y${c1}nI:   ${c3}QWQQwgQQWV${c2}\\`${c3}mWQQ.jQWQQgyyWW@!   %s\"\n\"${c1}      -1vvnvv.     ${c2}\\`~+++\\`        ++|+++        %s\"\n\"${c1}       +vnvnnv,                 ${c2}\\`-|===         %s\"\n\"${c1}        +vnvnvns.           .      ${c2}:=-         %s\"\n\"${c1}         -Invnvvnsi..___..=sv=.     ${c2}\\`          %s\"\n\"${c1}           +Invnvnvnnnnnnnnvvnn;.              %s\"\n\"${c1}             ~|Invnvnvvnvvvnnv}+\\`              %s\"\n\"${c1}                -~\\\"|{*l}*|\\\"\\\"~                  %s\")\n\t\t;;\n\n\t\t\"NixOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'blue')\n\t\t\t\tc2=$(getColor 'light blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"45\"\n\t\t\tfulloutput=(\n\"${c1}          ::::.    ${c2}':::::     ::::'          %s\"\n\"${c1}          ':::::    ${c2}':::::.  ::::'           %s\"\n\"${c1}            :::::     ${c2}'::::.:::::            %s\"\n\"${c1}      .......:::::..... ${c2}::::::::             %s\"\n\"${c1}     ::::::::::::::::::. ${c2}::::::    ${c1}::::.     %s\"\n\"${c1}    ::::::::::::::::::::: ${c2}:::::.  ${c1}.::::'     %s\"\n\"${c2}           .....           ::::' ${c1}:::::'      %s\"\n\"${c2}          :::::            '::' ${c1}:::::'       %s\"\n\"${c2} ........:::::               ' ${c1}:::::::::::.  %s\"\n\"${c2}:::::::::::::                 ${c1}:::::::::::::  %s\"\n\"${c2} ::::::::::: ${c1}..              :::::           %s\"\n\"${c2}     .::::: ${c1}.:::            :::::            %s\"\n\"${c2}    .:::::  ${c1}:::::          '''''    ${c2}.....    %s\"\n\"${c2}    :::::   ${c1}':::::.  ${c2}......:::::::::::::'    %s\"\n\"${c2}     :::     ${c1}::::::. ${c2}':::::::::::::::::'     %s\"\n\"${c1}            .:::::::: ${c2}'::::::::::            %s\"\n\"${c1}           .::::''::::.     ${c2}'::::.           %s\"\n\"${c1}          .::::'   ::::.     ${c2}'::::.          %s\"\n\"${c1}         .::::      ::::      ${c2}'::::.         %s\")\n\t\t;;\n\n\t\t\"Guix System\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'orange')\n\t\t\t\tc2=$(getColor 'light orange')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c1} +                                    ? %s\"\n\"${c1} ??                                  ?I %s\"\n\"${c1}  ??I?   I??N              ${c2}???    ${c1}????  %s\"\n\"${c1}   ?III7${c2}???????          ??????${c1}7III?Z   %s\"\n\"${c1}     OI77\\$${c2}?????         ?????${c1}$77IIII      %s\"\n\"${c1}           ?????        ${c2}????            %s\"\n\"${c1}            ???ID      ${c2}????             %s\"\n\"${c1}             IIII     ${c2}+????             %s\"\n\"${c1}             IIIII    ${c2}????              %s\"\n\"${c1}              IIII   ${c2}?????              %s\"\n\"${c1}              IIIII  ${c2}????               %s\"\n\"${c1}               II77 ${c2}????$               %s\"\n\"${c1}               7777+${c2}????                %s\"\n\"${c1}                77++?${c2}??$                %s\"\n\"${c1}                N?+???${c2}?                 %s\")\n\t\t\t;;\n\t\t\"BunsenLabs\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"5\"\n\t\t\tlogowidth=\"25\"\n\t\t\tfulloutput=(\n\"${c1}            HC]          \"\n\"${c1}          H]]]]          \"\n\"${c1}        H]]]]]]4         \"\n\"${c1}      @C]]]]]]]]*        \"\n\"${c1}     @]]]]]]]]]]xd       \"\n\"${c1}    @]]]]]]]]]]]]]d      %s\"\n\"${c1}   0]]]]]]]]]]]]]]]]     %s\"\n\"${c1}   kx]]]]]]x]]x]]]]]%%    %s\"\n\"${c1}  #x]]]]]]]]]]]]]x]]]d   %s\"\n\"${c1}  #]]]]]]qW  x]]x]]]]]4  %s\"\n\"${c1}  k]x]]xg     %%x]]]]]]%%  %s\"\n\"${c1}  Wx]]]W       x]]]]]]]  %s\"\n\"${c1}  #]]]4         xx]]x]]  %s\"\n\"${c1}   px]           ]]]]]x  %s\"\n\"${c1}   Wx]           x]]x]]  %s\"\n\"${c1}    &x           x]]]]   %s\"\n\"${c1}     m           x]]]]   %s\"\n\"${c1}                 x]x]    %s\"\n\"${c1}                 x]]]    %s\"\n\"${c1}                ]]]]     %s\"\n\"${c1}                x]x      %s\"\n\"${c1}               x]q       %s\"\n\"${c1}               ]g        %s\"\n\"${c1}              q          %s\")\n\t\t;;\n\n\t\t\"SteamOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'grey') # Gray\n\t\t\t\tc2=$(getColor 'purple') # Dark Purple\n\t\t\t\tc3=$(getColor 'light purple') # Light Purple\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\n\"${c2}               .,,,,.                %s\"\n\"${c2}         .,'onNMMMMMNNnn',.          %s\"\n\"${c2}      .'oNM${c3}ANK${c2}MMMMMMMMMMMNNn'.       %s\"\n\"${c3}    .'ANMMMMMMMXK${c2}NNWWWPFFWNNMNn.     %s\"\n\"${c3}   ;NNMMMMMMMMMMNWW'' ${c2},.., 'WMMM,    %s\"\n\"${c3}  ;NMMMMV+##+VNWWW' ${c3}.+;'':+, 'WM${c2}W,   %s\"\n\"${c3} ,VNNWP+${c1}######${c3}+WW,  ${c1}+:    ${c3}:+, +MMM,  %s\"\n\"${c3} '${c1}+#############,   +.    ,+' ${c3}+NMMM  %s\"\n\"${c1}   '*#########*'     '*,,*' ${c3}.+NMMMM. %s\"\n\"${c1}      \\`'*###*'          ,.,;###${c3}+WNM, %s\"\n\"${c1}          .,;;,      .;##########${c3}+W  %s\"\n\"${c1} ,',.         ';  ,+##############'  %s\"\n\"${c1}  '###+. :,. .,; ,###############'   %s\"\n\"${c1}   '####.. \\`'' .,###############'    %s\"\n\"${c1}     '#####+++################'      %s\"\n\"${c1}       '*##################*'        %s\"\n\"${c1}          ''*##########*''           %s\"\n\"${c1}               ''''''                %s\")\n\t\t;;\n\n\t\t\"SailfishOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'dark grey') # Grey\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"32\"\n\t\t\tfulloutput=(\n\"${c1}                 _a@b            %s\"\n\"${c1}              _#b (b             %s\"\n\"${c1}            _@@   @_         _,  %s\"\n\"${c1}          _#^@ _#*^^*gg,aa@^^    %s\"\n\"${c1}          #- @@^  _a@^^          %s\"\n\"${c1}          @_  *g#b               %s\"\n\"${c1}          ^@_   ^@_              %s\"\n\"${c1}            ^@_   @              %s\"\n\"${c1}             @(b (b              %s\"\n\"${c1}            #b(b#^               %s\"\n\"${c1}          _@_#@^                 %s\"\n\"${c1}       _a@a*^                    %s\"\n\"${c1}   ,a@*^                         %s\")\n\t\t;;\n\n\t\t\"Qubes OS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'cyan')\n\t\t\t\tc2=$(getColor 'blue')\n\t\t\t\tc3=$(getColor 'light blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"47\"\n\t\t\tfulloutput=(\n\"${c3}                      ####                     %s\"\n\"${c3}                    ########                   %s\"\n\"${c3}                  ############                 %s\"\n\"${c3}                #######  #######               %s\"\n\"${c1}              #${c3}######      ######${c2}#             %s\"\n\"${c1}            ####${c3}###          ###${c2}####           %s\"\n\"${c1}          ######        ${c2}        ######         %s\"\n\"${c1}          ######        ${c2}        ######         %s\"\n\"${c1}          ######        ${c2}        ######         %s\"\n\"${c1}          ######        ${c2}        ######         %s\"\n\"${c1}          ######        ${c2}        ######         %s\"\n\"${c1}            #######     ${c2}     #######           %s\"\n\"${c1}              #######   ${c2}   #########           %s\"\n\"${c1}                ####### ${c2} ##############        %s\"\n\"${c1}                  ######${c2}######  ######         %s\"\n\"${c1}                    ####${c2}####     ###           %s\"\n\"${c1}                      ##${c2}##                     %s\"\n\"${c1}                                               %s\")\n\t\t;;\n\n\t\t\"PCLinuxOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'blue') # Blue\n\t\t\t\tc2=$(getColor 'light grey') # White\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"50\"\n\t\t\tfulloutput=(\n\"${c1}                                                  %s\"\n\"${c1}                                             <NNN>%s\"\n\"${c1}                                           <NNY   %s\"\n\"${c1}                 <ooooo>--.               ((      %s\"\n\"${c1}               Aoooooooooooo>--.           \\\\\\\\\\\\     %s\"\n\"${c1}              AooodNNNNNNNNNNNNNNNN>--.     ))    %s\"\n\"${c2}          (${c1}  AoodNNNNNNNNNNNNNNNNNNNNNNN>-///'    %s\"\n\"${c2}          \\\\\\\\\\\\\\\\${c1}AodNNNNNNNNNNNNNNNNNNNNNNNNNNNY/      %s\"\n\"${c1}           AodNNNNNNNNNNNNNNNNNNNNNNNNNNNNN       %s\"\n\"${c1}          AdNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNA       %s\"\n\"${c1}         (${c2}/)${c1}NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNA      %s\"\n\"${c2}         //${c1}<NNNNNNNNNNNNNNNNNY'   YNNY YNNNN      %s\"\n\"${c2} ,====#Y//${c1}   \\`<NNNNNNNNNNNY       ANY     YNA     %s\"\n\"${c1}               ANY<NNNNYYN       .NY        YN.   %s\"\n\"${c1}             (NNY       NN      (NND       (NND   %s\"\n\"${c1}                      (NNU                        %s\"\n\"${c1}                                                  %s\")\n\t\t;;\n\n\t\t\"Exherbo\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'dark grey')  # Black\n\t\t\t\tc2=$(getColor 'light blue') # Blue\n\t\t\t\tc3=$(getColor 'light red')  # Beige\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"46\"\n\t\t\tfulloutput=(\n\"${c1}  ,                                           %s\"\n\"${c1}  OXo.                                        %s\"\n\"${c1}  NXdX0:    .cok0KXNNXXK0ko:.                 %s\"\n\"${c1}  KX  '0XdKMMK;.xMMMk, .0MMMMMXx;  ...        %s\"\n\"${c1}  'NO..xWkMMx   kMMM    cMMMMMX,NMWOxOXd.     %s\"\n\"${c1}    cNMk  NK    .oXM.   OMMMMO. 0MMNo  kW.    %s\"\n\"${c1}    lMc   o:       .,   .oKNk;   ;NMMWlxW'    %s\"\n\"${c1}   ;Mc    ..   .,,'    .0M${c2}g;${c1}WMN'dWMMMMMMO     %s\"\n\"${c1}   XX        ,WMMMMW.  cM${c2}cfli${c1}WMKlo.   .kMk    %s\"\n\"${c1}  .Mo        .WM${c2}GD${c1}MW.   XM${c2}WO0${c1}MMk        oMl   %s\"\n\"${c1}  ,M:         ,XMMWx::,''oOK0x;          NM.  %s\"\n\"${c1}  'Ml      ,kNKOxxxxxkkO0XXKOd:.         oMk  %s\"\n\"${c1}   NK    .0Nxc${c3}:::::::::::::::${c1}fkKNk,      .MW  %s\"\n\"${c1}   ,Mo  .NXc${c3}::${c1}qXWXb${c3}::::::::::${c1}oo${c3}::${c1}lNK.    .MW  %s\"\n\"${c1}    ;Wo oMd${c3}:::${c1}oNMNP${c3}::::::::${c1}oWMMMx${c3}:${c1}c0M;   lMO  %s\"\n\"${c1}     'NO;W0c${c3}:::::::::::::::${c1}dMMMMO${c3}::${c1}lMk  .WM'  %s\"\n\"${c1}       xWONXdc${c3}::::::::::::::${c1}oOOo${c3}::${c1}lXN. ,WMd   %s\"\n\"${c1}        'KWWNXXK0Okxxo,${c3}:::::::${c1},lkKNo  xMMO    %s\"\n\"${c1}          :XMNxl,';:lodxkOO000Oxc. .oWMMo     %s\"\n\"${c1}            'dXMMXkl;,.        .,o0MMNo'      %s\"\n\"${c1}               ':d0XWMMMMWNNNNMMMNOl'         %s\"\n\"${c1}                     ':okKXWNKkl'             %s\")\n\t\t;;\n\n\t\t\"Red Star OS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light red')  # Red\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"45\"\n\t\t\tfulloutput=(\n\"${c1}                      ..                     %s\"\n\"${c1}                    .oK0l                    %s\"\n\"${c1}                   :0KKKKd.                  %s\"\n\"${c1}                 .xKO0KKKKd                  %s\"\n\"${c1}                ,Od' .d0000l                 %s\"\n\"${c1}               .c;.   .'''...           ..'. %s\"\n\"${c1}  .,:cloddxxxkkkkOOOOkkkkkkkkxxxxxxxxxkkkx:  %s\"\n\"${c1}  ;kOOOOOOOkxOkc'...',;;;;,,,'',;;:cllc:,.   %s\"\n\"${c1}   .okkkkd,.lko  .......',;:cllc:;,,'''''.   %s\"\n\"${c1}     .cdo. :xd' cd:.  ..';'',,,'',,;;;,'.    %s\"\n\"${c1}        . .ddl.;doooc'..;oc;'..';::;,'.      %s\"\n\"${c1}          coo;.oooolllllllcccc:'.  .         %s\"\n\"${c1}         .ool''lllllccccccc:::::;.           %s\"\n\"${c1}         ;lll. .':cccc:::::::;;;;'           %s\"\n\"${c1}         :lcc:'',..';::::;;;;;;;,,.          %s\"\n\"${c1}         :cccc::::;...';;;;;,,,,,,.          %s\"\n\"${c1}         ,::::::;;;,'.  ..',,,,'''.          %s\"\n\"${c1}          ........          ......           %s\"\n\"${c1}                                             %s\")\n\t\t;;\n\n\t\t\"SparkyLinux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light gray') # Gray\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}             .            \\`-:-\\`                %s\"\n\"${c1}            .o\\`       .-///-\\`                  %s\"\n\"${c1}           \\`oo\\`    .:/++:.                     %s\"\n\"${c1}           os+\\`  -/+++:\\` \\`\\`.........\\`\\`\\`        %s\"\n\"${c1}          /ys+\\`./+++/-.-::::::----......\\`\\`     %s\"\n\"${c1}         \\`syyo\\`++o+--::::-::/+++/-\\`\\`           %s\"\n\"${c1}         -yyy+.+o+\\`:/:-:sdmmmmmmmmdy+-\\`        %s\"\n\"${c1}  ::-\\`   :yyy/-oo.-+/\\`ymho++++++oyhdmdy/\\`      %s\"\n\"${c1}  \\`/yy+-\\`.syyo\\`+o..o--h..osyhhddhs+//osyy/\\`    %s\"\n\"${c1}    -ydhs+-oyy/.+o.-: \\` \\`  :/::+ydhy+\\`\\`\\`-os-   %s\"\n\"${c1}     .sdddy::syo--/:.     \\`.:dy+-ohhho    ./:  %s\"\n\"${c1}       :yddds/:+oo+//:-\\`- /+ +hy+.shhy:     \\`\\` %s\"\n\"${c1}        \\`:ydmmdysooooooo-.ss\\`/yss--oyyo        %s\"\n\"${c1}          \\`./ossyyyyo+:-/oo:.osso- .oys        %s\"\n\"${c1}         \\`\\`..-------::////.-oooo/   :so        %s\"\n\"${c1}      \\`...----::::::::--.\\`/oooo:    .o:        %s\"\n\"${c1}             \\`\\`\\`\\`\\`\\`\\`     ++o+:\\`     \\`:\\`        %s\"\n\"${c1}                       ./+/-\\`        \\`         %s\"\n\"${c1}                     \\`-:-.                     %s\"\n\"${c1}                     \\`\\`                        %s\")\n\t\t;;\n\n\t\t\"Pardus\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'yellow') # Light Yellow\n\t\t\t\tc2=$(getColor 'light gray') # Light Gray\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"45\"\n\t\t\tfulloutput=(\n\"\"\n\"${c1}   .smNdy+-    \\`.:/osyyso+:.\\`    -+ydmNs.   %s\"\n\"${c1}  /Md- -/ymMdmNNdhso/::/oshdNNmdMmy/. :dM/  %s\"\n\"${c1}  mN.     oMdyy- -y          \\`-dMo     .Nm  %s\"\n\"${c1}  .mN+\\`  sMy hN+ -:             yMs  \\`+Nm.  %s\"\n\"${c1}   \\`yMMddMs.dy \\`+\\`               sMddMMy\\`   %s\"\n\"${c1}     +MMMo  .\\`  .                 oMMM+     %s\"\n\"${c1}     \\`NM/    \\`\\`\\`\\`\\`.\\`    \\`.\\`\\`\\`\\`\\`    +MN\\`     %s\"\n\"${c1}     yM+   \\`.-:yhomy    ymohy:-.\\`   +My     %s\"\n\"${c1}     yM:          yo    oy          :My     %s\"\n\"${c1}     +Ms         .N\\`    \\`N.      +h sM+     %s\"\n\"${c1}     \\`MN      -   -::::::-   : :o:+\\`NM\\`     %s\"\n\"${c1}      yM/    sh   -dMMMMd-   ho  +y+My      %s\"\n\"${c1}      .dNhsohMh-//: /mm/ ://-yMyoshNd\\`      %s\"\n\"${c1}        \\`-ommNMm+:/. oo ./:+mMNmmo:\\`        %s\"\n\"${c1}       \\`/o+.-somNh- :yy: -hNmos-.+o/\\`       %s\"\n\"${c1}      ./\\` .s/\\`s+sMdd+\\`\\`+ddMs+s\\`/s. \\`/.      %s\"\n\"${c1}          : -y.  -hNmddmNy.  .y- :          %s\"\n\"${c1}           -+       \\`..\\`       +-           %s\"\n\"%s\")\n\t\t;;\n\n\t\t\"Sulin\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light gray') # Light GRAY\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"45\"\n\t\t\tfulloutput=(\n\"\"\n\"${c1}                         /\\          /\\ %s\"\n\"${c1}                        ( \\\\        // ) %s\"\n\"${c1}                         \\ \\\\      // /  %s\"\n\"${c1}                          \\_\\\\||||//_/   %s\"\n\"${c1}                           \\/ _  _ \\    %s\"\n\"${c1}                          \\/|(O)(O)|    %s\"\n\"${c1}                         \\/ |      |    %s\"\n\"${c1}     ___________________\\/  \\      /    %s\"\n\"${c1}    //                //     |____|     %s\"\n\"${c1}   //                ||     /      \\    %s\"\n\"${c1}  //|                \\|     \\ 0  0 /    %s\"\n\"${c1} // \\       )         V    / \\____/     %s\"\n\"${c1}//   \\     /        (     /             %s\"\n\"${c1}      \\   /_________|  |_/              %s\"\n\"${c1}      /  /\\   /     |  ||               %s\"\n\"${c1}     /  / /  /      \\  ||               %s\"\n\"${c1}     | |  | |        | ||               %s\"\n\"${c1}     | |  | |        | ||               %s\"\n\"${c1}     |_|  |_|        |_||               %s\"\n\"${c1}     \\_\\  \\_\\        \\_\\\\               %s\"\n\"\")\n\t\t;;\n\n\t\t\"SwagArch\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}                                               %s\"\n\"${c1}          .;ldkOKXXNNNNXXK0Oxoc,.              %s\"\n\"${c1}     ,lkXMMNK0OkkxkkOKWMMMMMMMMMM;             %s\"\n\"${c1}   'K0xo  ..,;:c:.     \\`'lKMMMMM0              %s\"\n\"${c1}       .lONMMMMMM'         \\`lNMk'              %s\"\n\"${c1}      ;WMMMMMMMMMO.              ${c2}....::...     %s\"\n\"${c1}      OMMMMMMMMMMMMKl.       ${c2}.,;;;;;ccccccc,   %s\"\n\"${c1}      \\`0MMMMMMMMMMMMMM0:         ${c2}.. .ccccccc.  %s\"\n\"${c1}        'kWMMMMMMMMMMMMMNo.   ${c2}.,:'  .ccccccc.  %s\"\n\"${c1}          \\`c0MMMMMMMMMMMMMN,${c2},:c;    :cccccc:   %s\"\n\"${c1}   ckl.      \\`lXMMMMMMMMMX${c2}occcc:.. ;ccccccc.   %s\"\n\"${c1}  dMMMMXd,     \\`OMMMMMMWk${c2}ccc;:''\\` ,ccccccc:    %s\"\n\"${c1}  XMMMMMMMWKkxxOWMMMMMNo${c2}ccc;     .cccccccc.    %s\"\n\"${c1}   \\`':ldxO0KXXXXXK0Okdo${c2}cccc.     :cccccccc.    %s\"\n\"${c2}                      :ccc:'     \\`cccccccc:,   %s\"\n\"${c2}                                     ''        %s\"\n\"${c2}                                               %s\")\n\t\t;;\n\n\t\t\"EuroLinux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\";fi;\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"39\"\n\t\t\tfulloutput=(\n\n\"${c1}                                       %s\"\n\"${c1}           DZZZZZZZZZZZZZ              %s\"\n\"${c1}         ZZZZZZZZZZZZZZZZZZZ           %s\"\n\"${c1}          ZZZZZZZZZZZZZZZZZZZZ         %s\"\n\"${c1}           OZZZZZZZZZZZZZZZZZZZZ       %s\"\n\"${c1}   Z         ZZZ    8ZZZZZZZZZZZZ      %s\"\n\"${c1}  ZZZ                   ZZZZZZZZZZ     %s\"\n\"${c1} ZZZZZN                   ZZZZZZZZZ    %s\"\n\"${c1} ZZZZZZZ                    ZZZZZZZZ   %s\"\n\"${c1}ZZZZZZZZ                    OZZZZZZZ   %s\"\n\"${c1}ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  %s\"\n\"${c1}ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  %s\"\n\"${c1}ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  %s\"\n\"${c1}ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ   %s\"\n\"${c1}ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ    %s\"\n\"${c1}ZZZZZZZZ                               %s\"\n\"${c1} ZZZZZZZZ                              %s\"\n\"${c1} OZZZZZZZZO                            %s\"\n\"${c1}  ZZZZZZZZZZZ                          %s\"\n\"${c1}   OZZZZZZZZZZZZZZZN                   %s\"\n\"${c1}     ZZZZZZZZZZZZZZZZ                  %s\"\n\"${c1}      DZZZZZZZZZZZZZZZ                 %s\"\n\"${c1}         ZZZZZZZZZZZZZ                 %s\"\n\"${c1}            NZZZZZZZZ                  %s\"\n\"${c1}                                       %s\")\n\t\t;;\n\n\n\t\t\"OBRevenge\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'red') # White\n\t\t\t\tc2=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"48\"\n\t\t\tfulloutput=(\n\"${c1}       _@@@@   @@@g_      \t%s\"\n\"${c1}     _@@@@@@   @@@@@@     \t%s\"\n\"${c1}    _@@@@@@M   W@@@@@@_   \t%s\"\n\"${c1}   j@@@@P        ^W@@@@   \t%s\"\n\"${c1}   @@@@L____  _____Q@@@@  \t%s\"\n\"${c1}  Q@@@@@@@@@@j@@@@@@@@@@  \t%s\"\n\"${c1}  @@@@@    T@j@    T@@@@@\t%s\"\n\"${c1}  @@@@@ ___Q@J@    _@@@@@ \t%s\"\n\"${c1}  @@@@@fMMM@@j@jggg@@@@@@ \t%s\"\n\"${c1}  @@@@@    j@j@^MW@P @@@@ \t%s\"\n\"${c1}  Q@@@@@ggg@@f@   @@@@@@L \t%s\"\n\"${c1}  ^@@@@WWMMP  @    Q@@@@  \t%s\"\n\"${c1}   @@@@@_         _@@@@l  \t%s\"\n\"${c1}    W@@@@@g_____g@@@@@P   \t%s\"\n\"${c1}     @@@@@@@@@@@@@@@@l    \t%s\"\n\"${c1}      ^W@@@@@@@@@@@P      \t%s\"\n\"${c1}         ^TMMMMTll   \t\t%s\"\n\"${c1}                                  %s\")\n\t\t;;\n\n\t\t\"Parrot Security\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Light Blue\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"43\"\n\t\t\tfulloutput=(\n\"${c1}    ,:oho/-.                              %s\"\n\"${c1}   mMMMMMMMMMMMNmmdhy-                    %s\"\n\"${c1}   dMMMMMMMMMMMMMMMMMMs.                  %s\"\n\"${c1}   +MMsohNMMMMMMMMMMMMMm/                 %s\"\n\"${c1}   .My   .+dMMMMMMMMMMMMMh.               %s\"\n\"${c1}    +       :NMMMMMMMMMMMMNo              %s\"\n\"${c1}             \\`yMMMMMMMMMMMMMm:            %s\"\n\"${c1}               /NMMMMMMMMMMMMMy.          %s\"\n\"${c1}                .hMMMMMMMMMMMMMN+         %s\"\n\"${c1}                    \\`\\`-NMMMMMMMMMd-       %s\"\n\"${c1}                       /MMMMMMMMMMMs.     %s\"\n\"${c1}                        mMMMMMMMsyNMN/    %s\"\n\"${c1}                        +MMMMMMMo  :sNh.  %s\"\n\"${c1}                        \\`NMMMMMMm     -o/ %s\"\n\"${c1}                         oMMMMMMM.        %s\"\n\"${c1}                         \\`NMMMMMM+        %s\"\n\"${c1}                          +MMd/NMh        %s\"\n\"${c1}                           mMm -mN\\`       %s\"\n\"${c1}                           /MM  \\`h:       %s\"\n\"${c1}                            dM\\`   .       %s\"\n\"${c1}                            :M-           %s\"\n\"${c1}                             d:           %s\"\n\"${c1}                             -+           %s\"\n\"${c1}                              -           %s\")\n\t\t;;\n\n\t\t\"Amazon Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light orange') # Orange\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"0\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c1}               .,:cc:,.              %s\"\n\"${c1}          .:okXWMMMMMMWXko:.         %s\"\n\"${c1}      .:kNMMMMMMMMMMMMMMMMMMNkc.     %s\"\n\"${c1}   cc,.    \\`':ox0XWWXOxo:'\\`    .,c;  %s\"\n\"${c1}   KMMMMXOdc,.    ''    .,cdOXWMMMO  %s\"\n\"${c1}   KMMMMMMMMMMWXO.  .OXWMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMO  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMk  %s\"\n\"${c1}   KMMMMMMMMMMMMM,  ,MMMMMMMMMMMMMd  %s\"\n\"${c1}   \\`:lx0WMMMMMMMM,  ,MMMMMMMMW0xl:\\`  %s\"\n\"${c1}         \\`'lx0NMM,  ,MMN0xc'\\`        %s\"\n\"${c1}               \\`''  ''\\`              %s\")\n\t\t;;\n\n\t\t\"Source Mage GNU/Linux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'dark gray')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"40\"\n\t\t\tfulloutput=(\n\"${c1}                              \"\n\"${c1}       -sdNMNds:              %s\"\n\"${c1} .shmNMMMMMMNNNNh.            %s\"\n\"${c1}  \\` \\':sNNNNNNNNNNm-           %s\"\n\"${c1}      .NNNNNNmmmmmdo.         %s\"\n\"${c1}     -mNmmmmmmmmmmddd:        %s\"\n\"${c1}     +mmmmmmmddddddddh-       %s\"\n\"${c1}     :mmdddddddddhhhhhy.      %s\"\n\"${c1}     -ddddddhhhhhhhhyyyo      %s\"\n\"${c1}     .hyhhhhhhhyyyyyyyys:     %s\"\n\"${c1}      .\\`shyyyyyyyyyssssso     %s\"\n\"${c1}        \\`/yyyysssssssoooo.    %s\"\n\"${c1}          .osssssooooo+++/    %s\"\n\"${c1}           \\`:+oooo+++++///.   %s\"\n\"${c1}            \\`://++//////::-   %s\"\n\"${c1}        ..-///  .//::::::--.  %s\"\n\"${c1}       \\`\\`\\`\\` \\`\\`\\`  :::--------\\` %s\"\n\"${c1}                 \\`------....\\` %s\"\n\"${c1}                  \\`.........\\` %s\"\n\"${c1}                  \\`......\\` %s\")\n\t\t;;\n\n\t\t\"OS Elbrus\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'light blue') # Green\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"33\"\n\t\t\tfulloutput=(\"\"\n\"${c1}   ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄   %s\"\n\"${c1}   ██▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀██   %s\"\n\"${c1}   ██                       ██   %s\"\n\"${c1}   ██   ███████   ███████   ██   %s\"\n\"${c1}   ██   ██   ██   ██   ██   ██   %s\"\n\"${c1}   ██   ██   ██   ██   ██   ██   %s\"\n\"${c1}   ██   ██   ██   ██   ██   ██   %s\"\n\"${c1}   ██   ██   ██   ██   ██   ██   %s\"\n\"${c1}   ██   ██   ███████   ███████   %s\"\n\"${c1}   ██   ██                  ██   %s\"\n\"${c1}   ██   ██▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄██   %s\"\n\"${c1}   ██   ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀██   %s\"\n\"${c1}   ██                       ██   %s\"\n\"${c1}   ███████████████████████████   %s\"\n\"                                 %s\")\n\t\t;;\n\n\t\t\"PureOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'dark grey') # \"Black\"\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"44\"\n\t\t\tfulloutput=(\"\"\n\"                                            %s\"\n\"${c1}  dmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmd  %s\"\n\"${c1}  dNm//////////////////////////////////mNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNd                                  dNd  %s\"\n\"${c1}  dNm//////////////////////////////////mNd  %s\"\n\"${c1}  dmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmd  %s\"\n\"                                            %s\")\n\t\t;;\n\n    \"DraugerOS\")\n      if [[ \"$no_color\" != \"1\" ]]; then\n        c1=$(getColor 'red') # red\n      fi\n      if [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n      startline=\"0\"\n      logowidth=\"52\"\n      fulloutput=(\n\"${c1}                                                 %s\"\n\"${c1}                      &   &                      %s\"\n\"${c1}                     %(   (#                     %s\"\n\"${c1}                    (((   (((                    %s\"\n\"${c1}                   ((((   ((((                   %s\"\n\"${c1}                  ((((     ((((                  %s\"\n\"${c1}                 ((((       ((((                 %s\"\n\"${c1}                ((((         ((((                %s\"\n\"${c1}              %((((           ((((%              %s\"\n\"${c1}             ((((               ((((             %s\"\n\"${c1}            ((((                 ((((            %s\"\n\"${c1}           ((((                   ((((           %s\"\n\"${c1}         &((((                     ((((&         %s\"\n\"${c1}        #((((                       ((((#        %s\"\n\"${c1}       (((((                         (((((       %s\"\n\"${c1}      ((((#                           #((((      %s\"\n\"${c1}     (#  (((((((((((((((((((((((((((((((  #(     %s\"\n\"${c1}       (((((((((((((((((((((((((((((((((((       %s\"\n\"                                                      %s\")\n\t\t;;\n\n\t\t\"januslinux\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'white') # white\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"25\"\n\t\t\tfulloutput=(\"\"\n\"                         %s\"\n\"${c1}   ________________      %s\"\n\"${c1}  |\\               \\     %s\"\n\"${c1}  | \\               \\    %s\"\n\"${c1}  |  \\               \\   %s\"\n\"${c1}  |   \\ ______________\\  %s\"\n\"${c1}  |    |              |  %s\"\n\"${c1}  |    |              |  %s\"\n\"${c1}  |    |              |  %s\"\n\"${c1}   \\   |  januslinux  |  %s\"\n\"${c1}    \\  |              |  %s\"\n\"${c1}     \\ |              |  %s\"\n\"${c1}      \\|______________|  %s\"\n\"                         %s\")\n\t\t;;\n\t\t\"EndeavourOS\")\n\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\tc1=$(getColor 'yellow')\n\t\t\t\tc3=$(getColor 'purple')\n\t\t\t\tc5=$(getColor 'cyan')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; c5=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"44\"\n\t\t\tfulloutput=(\"\"\n\"${c1}                  +${c3}I${c5}+\t\t        %s\"\n\"${c1}                 +${c3}777${c5}+                  %s\"\n\"${c1}\t        +${c3}77777${c5}++\t\t%s\"\n\"${c1}\t       +${c3}7777777${c5}++\t\t%s\"\n\"${c1}\t      +${c3}7777777777${c5}++\t\t%s\"\n\"${c1}\t    ++${c3}7777777777777${c5}++\t\t%s\"\n\"${c1}\t   ++${c3}777777777777777${c5}+++       \t%s\"\n\"${c1}\t ++${c3}77777777777777777${c5}++++        %s\"\n\"${c1}\t++${c3}7777777777777777777${c5}++++       %s\"\n\"${c1}      +++${c3}777777777777777777777${c5}++++\t%s\"\n\"${c1}    ++++${c3}7777777777777777777777${c5}+++++  \t%s\"\n\"${c1}   ++++${c3}77777777777777777777777${c5}+++++  \t%s\"\n\"${c1}  +++++${c3}777777777777777777777777${c5}+++++\t%s\"\n\"${c5}       +++++++${c3}7777777777777777${c5}++++++\t%s\"\n\"${c5}      +++++++++++++++++++++++++++++     %s\"\n\"${c5}     +++++++++++++++++++++++++++        %s\"\n\"                                      \t%s\"\n)               ;;\n                \"TeArch\")\n\t\t\tif [[ \"$no_color\" != \"0\" ]]; then\n\t\t\t\tc1=$(getColor 'blue') # white\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"45\"\n\t\t\tfulloutput=(\"\"\n\"${c1}                                          %s\"\n\"${c1}                @@@@@@@@@@@@@             %s\"\n\"${c1}       @@@@@@@@@             @@@@@@@      %s\"\n\"${c1}      @@@@@                     @@@@@     %s\"\n\"${c1}      @@                           @@     %s\"\n\"${c1}       @@                         @@      %s\"\n\"${c1}        @                         @       %s\"\n\"${c1}        @@@@@@@@@@@@@@@@@@@@@@@@ @@       %s\"\n\"${c1}        .@@@@@@@@@@@@/@@@@@@@@@@@@        %s\"\n\"${c1}        @@@@@@@@@@@@///@@@@@@@@@@@@       %s\"\n\"${c1}       @@@@@@@@@@@@@((((@@@@@@@@@@@@      %s\"\n\"${c1}      @@@@@@@@@@@#(((((((#@@@@@@@@@@@     %s\"\n\"${c1}     @@@@@@@@@@@#//////////@@@@@@@@@@&    %s\"\n\"${c1}     @@@@@@@@@@////@@@@@////@@@@@@@@@@    %s\"\n\"${c1}     @@@@@@@@//////@@@@@/////@@@@@@@@@    %s\"\n\"${c1}     @@@@@@@//@@@@@@@@@@@@@@@//@@@@@@@    %s\"\n\"${c1}  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ %s\"\n\"${c1} @@     .@@@@@@@@@@@@@@@@@@@@@@@@@      @ %s\"\n\"${c1}  @@@@@@           @@@.           @@@@@@@ %s\"\n\"${c1}    @@@@@@@&@@@@@@@#  #@@@@@@@@@@@@@@@@   %s\"\n\"${c1}       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@      %s\"\n\"${c1}           @@@@@@@@@@@@@@@@@@@@@          %s\"\n\"                                               %s\")\n\t\t;;\n\t\t\"Rocky Linux\")\n\t\t\tif [[ \"$no_color\" != \"0\" ]]; then\n\t\t\t\tc1=$(getColor 'green')\n\t\t\tfi\n\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\tstartline=\"1\"\n\t\t\tlogowidth=\"37\"\n\t\t\tfulloutput=(\"\"\n\"${c1}             //////////              %s\"\n\"${c1}          (/(/(/(/(/(/(/(/           %s\"\n\"${c1}      ,//////////////////////        %s\"\n\"${c1}    (/(/(/(/(/(/(/(/(/(/(/(/(/(*     %s\"\n\"${c1}   //////////////////////////////    %s\"\n\"${c1}  (/(/(/(/(/(/(/(/(/(///(/(/(/(/(/   %s\"\n\"${c1} ///////////////////      /////////  %s\"\n\"${c1} /(/(/(/(/(/(/(/(/          //(/(/(  %s\"\n\"${c1} //////////////                ////  %s\"\n\"${c1}  (/(/(/(/(//        /(/(        /   %s\"\n\"${c1}   ///////        .////////.         %s\"\n\"${c1}    //(/        (/(/(/(/(/(/(/       %s\"\n\"${c1}             .///////////////        %s\"\n\"${c1}           /(/(/(/(/(/(/(,           %s\"\n\"${c1}             //////////              %s\"\n\"                                          %s\")\n\t\t;;\n\t\t*)\n\t\t\tif [[ \"${kernel}\" =~ \"Linux\" ]]; then\n\t\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\t\tc1=$(getColor 'white') # White\n\t\t\t\t\tc2=$(getColor 'dark grey') # Light Gray\n\t\t\t\t\tc3=$(getColor 'yellow') # Light Yellow\n\t\t\t\tfi\n\t\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; c2=\"${my_lcolor}\"; c3=\"${my_lcolor}\"; fi\n\t\t\t\tstartline=\"0\"\n\t\t\t\tlogowidth=\"28\"\n\t\t\t\tfulloutput=(\n\"${c2}                            %s\"\n\"${c2}                            %s\"\n\"${c2}                            %s\"\n\"${c2}         #####              %s\"\n\"${c2}        #######             %s\"\n\"${c2}        ##${c1}O${c2}#${c1}O${c2}##             %s\"\n\"${c2}        #${c3}#####${c2}#             %s\"\n\"${c2}      ##${c1}##${c3}###${c1}##${c2}##           %s\"\n\"${c2}     #${c1}##########${c2}##          %s\"\n\"${c2}    #${c1}############${c2}##         %s\"\n\"${c2}    #${c1}############${c2}###        %s\"\n\"${c3}   ##${c2}#${c1}###########${c2}##${c3}#        %s\"\n\"${c3} ######${c2}#${c1}#######${c2}#${c3}######      %s\"\n\"${c3} #######${c2}#${c1}#####${c2}#${c3}#######      %s\"\n\"${c3}   #####${c2}#######${c3}#####        %s\"\n\"${c2}                            %s\"\n\"${c2}                            %s\"\n\"${c2}                            %s\")\n\n\t\t\telif [[ \"${kernel}\" =~ \"Hurd\" || \"${kernel}\" =~ \"GNU\" || \"${OSTYPE}\" == \"gnu\" ]]; then\n\t\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\t\tc1=$(getColor 'dark grey') # Light Gray\n\t\t\t\tfi\n\t\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\t\tstartline=\"0\"\n\t\t\t\tlogowidth=\"37\"\n\t\t\t\tfulloutput=(\n\"${c1}    _-\\`\\`\\`\\`\\`-,           ,- '- .      %s\"\n\"${c1}   .'   .- - |          | - -.  \\`.   %s\"\n\"${c1}  /.'  /                     \\`.   \\\\  %s\"\n\"${c1} :/   :      _...   ..._      \\`\\`   : %s\"\n\"${c1} ::   :     /._ .\\`:'_.._\\\\.    ||   : %s\"\n\"${c1} ::    \\`._ ./  ,\\`  :    \\\\ . _.''   . %s\"\n\"${c1} \\`:.      /   |  -.  \\\\-. \\\\\\\\\\_      /  %s\"\n\"${c1}   \\\\:._ _/  .'   .@)  \\\\@) \\` \\`\\\\ ,.'   %s\"\n\"${c1}      _/,--'       .- .\\\\,-.\\`--\\`.     %s\"\n\"${c1}        ,'/''     (( \\\\ \\`  )          %s\"\n\"${c1}         /'/'  \\\\    \\`-'  (           %s\"\n\"${c1}          '/''  \\`._,-----'           %s\"\n\"${c1}           ''/'    .,---'            %s\"\n\"${c1}            ''/'      ;:             %s\"\n\"${c1}              ''/''  ''/             %s\"\n\"${c1}                ''/''/''             %s\"\n\"${c1}                  '/'/'              %s\"\n\"${c1}                   \\`;                %s\")\n# Source: https://www.gnu.org/graphics/alternative-ascii.en.html\n# Copyright (C) 2003, Vijay Kumar\n# Permission is granted to copy, distribute and/or modify this image under the\n# terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n\n\t\t\telse\n\t\t\t\tif [[ \"$no_color\" != \"1\" ]]; then\n\t\t\t\t\tc1=$(getColor 'light green') # Light Green\n\t\t\t\tfi\n\t\t\t\tif [ -n \"${my_lcolor}\" ]; then c1=\"${my_lcolor}\"; fi\n\t\t\t\tstartline=\"0\"\n\t\t\t\tlogowidth=\"44\"\n\t\t\t\tfulloutput=(\n\"${c1}                                            %s\"\n\"${c1}                                            %s\"\n\"${c1} UUU     UUU NNN      NNN IIIII XXX     XXXX%s\"\n\"${c1} UUU     UUU NNNN     NNN  III    XX   xXX  %s\"\n\"${c1} UUU     UUU NNNNN    NNN  III     XX xXX   %s\"\n\"${c1} UUU     UUU NNN NN   NNN  III      XXXX    %s\"\n\"${c1} UUU     UUU NNN  NN  NNN  III      xXX     %s\"\n\"${c1} UUU     UUU NNN   NN NNN  III     xXXXX    %s\"\n\"${c1} UUU     UUU NNN    NNNNN  III    xXX  XX   %s\"\n\"${c1}  UUUuuuUUU  NNN     NNNN  III   xXX    XX  %s\"\n\"${c1}    UUUUU    NNN      NNN IIIII xXXx    xXXx%s\"\n\"${c1}                                            %s\"\n\"${c1}                                            %s\"\n\"${c1}                                            %s\"\n\"${c1}                                            %s\")\n\t\t\tfi\n\t\t;;\n\tesac\n\n\n\t# Truncate lines based on terminal width.\n\tif [ \"$truncateSet\" == \"Yes\" ]; then\n\t\tmissinglines=$((${#out_array[*]} + startline - ${#fulloutput[*]}))\n\t\tfor ((i=0; i<missinglines; i++)); do\n\t\t\tfulloutput+=(\"${c1}$(printf '%*s' \"$logowidth\")%s\")\n\t\tdone\n\t\tfor ((i=0; i<${#fulloutput[@]}; i++)); do\n\t\t\tmy_out=$(printf \"${fulloutput[i]}$c0\\n\" \"${out_array}\")\n\t\t\tmy_out_full=$(echo \"$my_out\" | cat -v)\n\t\t\ttermWidth=$(tput cols)\n\t\t\tSHOPT_EXTGLOB_STATE=$(shopt -p extglob)\n\t\t\tread SHOPT_CMD SHOPT_STATE SHOPT_OPT <<< \"${SHOPT_EXTGLOB_STATE}\"\n\t\t\tif [[ ${SHOPT_STATE} == \"-u\" ]]; then\n\t\t\t\tshopt -s extglob\n\t\t\tfi\n\n\t\t\tstringReal=\"${my_out_full//\\^\\[\\[@([0-9]|[0-9];[0-9][0-9])m}\"\n\n\t\t\tif [[ ${SHOPT_STATE} == \"-u\" ]]; then\n\t\t\t\tshopt -u extglob\n\t\t\tfi\n\n\t\t\tif [[ \"${#stringReal}\" -le \"${termWidth}\" ]]; then\n\t\t\t\techo -e \"${my_out}\"$c0\n\t\t\telif [[ \"${#stringReal}\" -gt \"${termWidth}\" ]]; then\n\t\t\t\t((NORMAL_CHAR_COUNT=0))\n\t\t\t\tfor ((j=0; j<=${#my_out_full}; j++)); do\n\t\t\t\t\tif [[ \"${my_out_full:${j}:3}\" == '^[[' ]]; then\n\t\t\t\t\t\tif [[ \"${my_out_full:${j}:5}\" =~ ^\\^\\[\\[[[:digit:]]m$ ]]; then\n\t\t\t\t\t\t\tif [[ ${j} -eq 0 ]]; then\n\t\t\t\t\t\t\t\tj=$((j + 5))\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tj=$((j + 4))\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\telif [[ \"${my_out_full:${j}:8}\" =~ ^\\^\\[\\[[[:digit:]]\\;[[:digit:]][[:digit:]]m ]]; then\n\t\t\t\t\t\t\tif [[ ${j} -eq 0 ]]; then\n\t\t\t\t\t\t\t\tj=$((j + 8))\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tj=$((j + 7))\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\t((NORMAL_CHAR_COUNT++))\n\t\t\t\t\t\tif [[ ${NORMAL_CHAR_COUNT} -ge ${termWidth} ]]; then\n\t\t\t\t\t\t\techo -e \"${my_out:0:$((j - 5))}\"$c0\n\t\t\t\t\t\t\tbreak 1\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tdone\n\t\t\tfi\n\n\t\t\tif [[ \"$i\" -ge \"$startline\" ]]; then\n\t\t\t\tunset 'out_array[0]'\n\t\t\t\tout_array=( \"${out_array[@]}\" )\n\t\t\tfi\n\t\tdone\n\telif [[ \"$portraitSet\" = \"Yes\" ]]; then\n\t\tfor i in \"${!fulloutput[@]}\"; do\n\t\t\tprintf \"${fulloutput[$i]}$c0\\n\"\n\t\tdone\n\n\t\tprintf \"\\n\"\n\n\t\tfor ((i=0; i<${#fulloutput[*]}; i++)); do\n\t\t\t[[ -z \"$out_array[0]\" ]] && continue\n\t\t\tprintf \"%s\\n\" \"${out_array[0]}\"\n\t\t\tunset 'out_array[0]'\n\t\t\tout_array=( \"${out_array[@]}\" )\n\t\tdone\n\n\telif [[ \"$display_logo\" == \"Yes\" ]]; then\n\t\tfor i in \"${!fulloutput[@]}\"; do\n\t\t\tprintf \"${fulloutput[i]}$c0\\n\"\n\t\tdone\n\telse\n\t\tif [[ \"$lineWrap\" = \"Yes\" ]]; then\n\t\t\tavailablespace=$(($(tput cols) - logowidth + 16)) #I dont know why 16 but it works\n\t\t\tnew_out_array=(\"${out_array[0]}\")\n\t\t\tfor ((i=1; i<${#out_array[@]}; i++)); do\n\t\t\t\tlines=$(echo \"${out_array[i]}\" | fmt -w $availablespace)\n\t\t\t\tIFS=$'\\n' read -rd '' -a splitlines <<<\"$lines\"\n\t\t\t\tnew_out_array+=(\"${splitlines[0]}\")\n\t\t\t\tfor ((j=1; j<${#splitlines[*]}; j++)); do\n\t\t\t\t\tline=$(echo -e \"$labelcolor $textcolor  ${splitlines[j]}\")\n\t\t\t\t\tnew_out_array=( \"${new_out_array[@]}\" \"$line\" );\n\t\t\t\tdone\n\t\t\tdone\n\t\t\tout_array=(\"${new_out_array[@]}\")\n\t\tfi\n\t\tmissinglines=$((${#out_array[*]} + startline - ${#fulloutput[*]}))\n\t\tfor ((i=0; i<missinglines; i++)); do\n\t\t\tfulloutput+=(\"${c1}$(printf '%*s' \"$logowidth\")%s\")\n\t\tdone\n\t\t#n=${#fulloutput[*]}\n\t\tfor ((i=0; i<${#fulloutput[*]}; i++)); do\n\t\t\t# echo \"${out_array[@]}\"\n\t\t\tcase $(\"${AWK}\" 'BEGIN{srand();print int(rand()*(1000-1))+1 }') in\n\t\t\t\t411|188|15|166|609)\n\t\t\t\t\tf_size=${#fulloutput[*]}\n\t\t\t\t\to_size=${#out_array[*]}\n\t\t\t\t\tf_max=$(( 32768 / f_size * f_size ))\n\t\t\t\t\t#o_max=$(( 32768 / o_size * o_size ))\n\t\t\t\t\tfor ((a=f_size-1; a>0; a--)); do\n\t\t\t\t\t\twhile (( (rand=RANDOM) >= f_max )); do :; done\n\t\t\t\t\t\trand=$(( rand % (a+1) ))\n\t\t\t\t\t\ttmp=${fulloutput[a]} fulloutput[a]=${fulloutput[rand]} fulloutput[rand]=$tmp\n\t\t\t\t\tdone\n\t\t\t\t\tfor ((b=o_size-1; b>0; b--)); do\n\t\t\t\t\t\trand=$(( rand % (b+1) ))\n\t\t\t\t\t\ttmp=${out_array[b]} out_array[b]=${out_array[rand]} out_array[rand]=$tmp\n\t\t\t\t\tdone\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tprintf \"${fulloutput[i]}$c0\\n\" \"${out_array[0]}\"\n\t\t\tif [[ \"$i\" -ge \"$startline\" ]]; then\n\t\t\t\tunset 'out_array[0]'\n\t\t\t\tout_array=( \"${out_array[@]}\" )\n\t\t\tfi\n\t\tdone\n\tfi\n\t# Done with ASCII output\n}\n\ninfoDisplay () {\n\ttextcolor=\"\\033[0m\"\n\t[[ \"$my_hcolor\" ]] && textcolor=\"${my_hcolor}\"\n\t#TODO: Centralize colors and use them across the board so we only change them one place.\n\tmyascii=\"${distro}\"\n\t[[ \"${asc_distro}\" ]] && myascii=\"${asc_distro}\"\n\tcase ${myascii} in\n\t\t\"Alpine Linux\"|\"Arch Linux - Old\"|\"ArcoLinux\"|\"blackPanther OS\"|\"Fedora\"|\"Fedora - Old\"|\"Korora\"|\"Chapeau\"|\"Mandriva\"|\"Mandrake\"| \\\n\t\t\"Chakra\"|\"ChromeOS\"|\"Sabayon\"|\"Slackware\"|\"Mac OS X\"|\"macOS\"|\"Trisquel\"|\"Kali Linux\"|\"Jiyuu Linux\"|\"Antergos\"|\"Alter Linux\"| \\\n\t\t\"KaOS\"|\"Logos\"|\"gNewSense\"|\"Netrunner\"|\"NixOS\"|\"SailfishOS\"|\"Qubes OS\"|\"Kogaion\"|\"PCLinuxOS\"| \\\n\t\t\"Obarun\"|\"Siduction\"|\"Solus\"|\"SwagArch\"|\"Parrot Security\"|\"Zorin OS\"|\"Uos\"|\"TeArch\")\n\t\t\tlabelcolor=$(getColor 'light blue')\n\t\t;;\n\t\t\"Arch Linux\"|\"Arch Linux 32\"|\"Artix Linux\"|\"Frugalware\"|\"Mageia\"|\"Deepin\"|\"CRUX\"|\"OS Elbrus\"|\"EndeavourOS\")\n\t\t\tlabelcolor=$(getColor 'light cyan')\n\t\t;;\n\t\t\"Mint\"|\"LMDE\"|\"KDE neon\"|\"openSUSE\"|\"SUSE Linux Enterprise\"|\"LinuxDeepin\"|\"DragonflyBSD\"|\"Manjaro\"| \\\n\t\t\"Manjaro-tree\"|\"Android\"|\"Void Linux\"|\"DesaOS\"|\"Rocky Linux\")\n\t\t\tlabelcolor=$(getColor 'light green')\n\t\t;;\n\t\t\"Ubuntu\"|\"FreeBSD\"|\"FreeBSD - Old\"|\"Debian\"|\"Raspbian\"|\"BSD\"|\"Red Hat Enterprise Linux\"|\"Oracle Linux\"| \\\n\t\t\"Peppermint\"|\"Cygwin\"|\"Msys\"|\"Fuduntu\"|\"Scientific Linux\"|\"DragonFlyBSD\"|\"BackTrack Linux\"|\"Red Star OS\"| \\\n\t\t\"SparkyLinux\"|\"OBRevenge\"|\"Source Mage GNU/Linux\")\n\t\t\tlabelcolor=$(getColor 'light red')\n\t\t;;\n\t\t\"ROSA\"|\"januslinux\")\n\t\t\tlabelcolor=$(getColor 'white')\n\t\t;;\n\t\t\"CrunchBang\"|\"Viperr\"|\"elementary\"*)\n\t\t\tlabelcolor=$(getColor 'dark grey')\n\t\t;;\n\t\t\"Gentoo\"|\"Parabola GNU/Linux-libre\"|\"Funtoo\"|\"Funtoo-text\"|\"BLAG\"|\"SteamOS\"|\"Devuan\")\n\t\t\tlabelcolor=$(getColor 'light purple')\n\t\t;;\n\t\t\"Haiku\")\n\t\t\tlabelcolor=$(getColor 'green')\n\t\t;;\n\t\t\"NetBSD\"|\"Amazon Linux\"|\"Proxmox VE\")\n\t\t\tlabelcolor=$(getColor 'orange')\n\t\t;;\n\t\t\"AlmaLinux\")\n\t\t\tlabelcolor=$(getColor 'light orange')\n\t\t;;\n\t\t\"CentOS\"|\"CentOS Stream\")\n\t\t\tlabelcolor=$(getColor 'yellow')\n\t\t;;\n\t\t\"Hyperbola GNU/Linux-libre\"|\"PureOS\"|*)\n\t\t\tlabelcolor=$(getColor 'light grey')\n\t\t;;\n\tesac\n\t[[ \"$my_lcolor\" ]] && labelcolor=\"${my_lcolor}\"\n\tif [[ \"$art\" ]]; then\n\t\tsource \"$art\"\n\tfi\n\tif [[ \"$no_color\" == \"1\" ]]; then\n\t\tlabelcolor=\"\"\n\t\tbold=\"\"\n\t\tc0=\"\"\n\t\ttextcolor=\"\"\n\tfi\n\t# Some verbosity stuff\n\t[[ \"$screenshot\" == \"1\" ]] && verboseOut \"Screenshot will be taken after info is displayed.\"\n\t[[ \"$upload\" == \"1\" ]] && verboseOut \"Screenshot will be transferred/uploaded to specified location.\"\n\t#########################\n\t# Info Variable Setting #\n\t#########################\n\tif [[ \"${distro}\" == \"Android\" ]]; then\n\t\tmyhostname=$(echo -e \"${labelcolor} ${hostname}\"); out_array=( \"${out_array[@]}\" \"$myhostname\" )\n\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $distro $distro_ver\"); out_array=( \"${out_array[@]}\" \"$mydistro\" )\n\t\tmydevice=$(echo -e \"$labelcolor Device:$textcolor $device\"); out_array=( \"${out_array[@]}\" \"$mydevice\" )\n\t\tmyrom=$(echo -e \"$labelcolor ROM:$textcolor $rom\"); out_array=( \"${out_array[@]}\" \"$myrom\" )\n\t\tmybaseband=$(echo -e \"$labelcolor Baseband:$textcolor $baseband\"); out_array=( \"${out_array[@]}\" \"$mybaseband\" )\n\t\tmykernel=$(echo -e \"$labelcolor Kernel:$textcolor $kernel\"); out_array=( \"${out_array[@]}\" \"$mykernel\" )\n\t\tmyuptime=$(echo -e \"$labelcolor Uptime:$textcolor $uptime\"); out_array=( \"${out_array[@]}\" \"$myuptime\" )\n\t\tmycpu=$(echo -e \"$labelcolor CPU:$textcolor $cpu\"); out_array=( \"${out_array[@]}\" \"$mycpu\" )\n\t\tmygpu=$(echo -e \"$labelcolor GPU:$textcolor $cpu\"); out_array=( \"${out_array[@]}\" \"$mygpu\" )\n\t\tmymem=$(echo -e \"$labelcolor RAM:$textcolor $mem\"); out_array=( \"${out_array[@]}\" \"$mymem\" )\n\telse\n\t\tif [[ \"${display[@]}\" =~ \"host\" ]]; then\n\t\t\tmyinfo=$(echo -e \"${labelcolor} ${myUser}$textcolor${bold}@${c0}${labelcolor}${myHost}\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$myinfo\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"distro\" ]]; then\n\t\t\tif [[ \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]]; then\n\t\t\t\tsysArch=\"$(getconf LONG_BIT)bit\"\n\t\t\t\tprodVers=$(sw_vers -productVersion )\n\t\t\t\tprodVers=${prodVers:16}\n\t\t\t\tbuildVers=$(sw_vers -buildVersion )\n\t\t\t\tbuildVers=${buildVers:14}\n\t\t\t\tif [ -n \"$distro_more\" ]; then\n\t\t\t\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $distro_more $sysArch\")\n\t\t\t\telse\n\t\t\t\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $sysArch $distro $prodVers $buildVers\")\n\t\t\t\tfi\n\t\t\telif [[ \"$distro\" == \"Cygwin\" || \"$distro\" == \"Msys\" ]]; then\n\t\t\t\tdistro=\"$(wmic os get caption | sed 's/\\r//g; s/[ \\t]*$//g; 2!d')\"\n\t\t\t\tif [[ \"$(wmic os get version | grep -o '^10\\.')\" == \"10.\" ]]; then\n\t\t\t\t\tdistro=\"$distro (v$(wmic os get version | grep '^10\\.' | tr -d ' '))\"\n\t\t\t\tfi\n\t\t\t\tsysArch=$(wmic os get OSArchitecture | sed 's/\\r//g; s/[ \\t]*$//g; 2!d')\n\t\t\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $distro $sysArch\")\n\t\t\telse\n\t\t\t\tif [ -n \"$distro_more\" ]; then\n\t\t\t\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $distro_more\")\n\t\t\t\telse\n\t\t\t\t\tmydistro=$(echo -e \"$labelcolor OS:$textcolor $distro $sysArch\")\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tout_array=( \"${out_array[@]}\" \"$mydistro$wsl\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"kernel\" ]]; then\n\t\t\tmykernel=$(echo -e \"$labelcolor Kernel:$textcolor $kernel\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mykernel\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"uptime\" ]]; then\n\t\t\tmyuptime=$(echo -e \"$labelcolor Uptime:$textcolor $uptime\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$myuptime\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"pkgs\" ]]; then\n\t\t\tmypkgs=$(echo -e \"$labelcolor Packages:$textcolor $pkgs\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mypkgs\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"shell\" ]]; then\n\t\t\tmyshell=$(echo -e \"$labelcolor Shell:$textcolor $myShell\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$myshell\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ -n \"$DISPLAY\" || \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]]; then\n\t\t\tif [ -n \"${xResolution}\" ]; then\n\t\t\t\tif [[ \"${display[@]}\" =~ \"res\" ]]; then\n\t\t\t\t\tmyres=$(echo -e \"$labelcolor Resolution:${textcolor} $xResolution\")\n\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myres\" )\n\t\t\t\t\t((display_index++))\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"de\" ]]; then\n\t\t\t\tif [[ \"${DE}\" != \"Not Present\" ]]; then\n\t\t\t\t\tmyde=$(echo -e \"$labelcolor DE:$textcolor $DE\")\n\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myde\" )\n\t\t\t\t\t((display_index++))\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"wm\" ]]; then\n\t\t\t\tmywm=$(echo -e \"$labelcolor WM:$textcolor $WM\")\n\t\t\t\tout_array=( \"${out_array[@]}\" \"$mywm\" )\n\t\t\t\t((display_index++))\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"wmtheme\" ]]; then\n\t\t\t\tif [[ \"${Win_theme}\" != \"Not Applicable\" && \"${Win_theme}\" != \"Not Found\" ]]; then\n\t\t\t\t\tmywmtheme=$(echo -e \"$labelcolor WM Theme:$textcolor $Win_theme\")\n\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mywmtheme\" )\n\t\t\t\t\t((display_index++))\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"gtk\" ]]; then\n\t\t\t\tif [[ \"$distro\" == \"Mac OS X\" || \"$distro\" == \"macOS\" ]]; then\n\t\t\t\t\tif [[ \"$gtkFont\" != \"Not Applicable\" && \"$gtkFont\" != \"Not Found\" ]]; then\n\t\t\t\t\t\tif [ -n \"$gtkFont\" ]; then\n\t\t\t\t\t\t\tmyfont=$(echo -e \"$labelcolor Font:$textcolor $gtkFont\")\n\t\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myfont\" )\n\t\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tif [[ \"$gtk2Theme\" != \"Not Applicable\" && \"$gtk2Theme\" != \"Not Found\" ]]; then\n\t\t\t\t\t\tif [ -n \"$gtk2Theme\" ]; then\n\t\t\t\t\t\t\tmygtk2=\"${gtk2Theme} [GTK2]\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$gtk3Theme\" != \"Not Applicable\" && \"$gtk3Theme\" != \"Not Found\" ]]; then\n\t\t\t\t\t\tif [ -n \"$mygtk2\" ]; then\n\t\t\t\t\t\t\tmygtk3=\", ${gtk3Theme} [GTK3]\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmygtk3=\"${gtk3Theme} [GTK3]\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$gtk_2line\" == \"yes\" ]]; then\n\t\t\t\t\t\tmygtk2=$(echo -e \"$labelcolor GTK2 Theme:$textcolor $gtk2Theme\")\n\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mygtk2\" )\n\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\tmygtk3=$(echo -e \"$labelcolor GTK3 Theme:$textcolor $gtk3Theme\")\n\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mygtk3\" )\n\t\t\t\t\t\t((display_index++))\n\t\t\t\t\telse\n\t\t\t\t\t\tif [[ \"$gtk2Theme\" == \"$gtk3Theme\" ]]; then\n\t\t\t\t\t\t\tif [[ \"$gtk2Theme\" != \"Not Applicable\" && \"$gtk2Theme\" != \"Not Found\" ]]; then\n\t\t\t\t\t\t\t\tmygtk=$(echo -e \"$labelcolor GTK Theme:$textcolor ${gtk2Theme} [GTK2/3]\")\n\t\t\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mygtk\" )\n\t\t\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmygtk=$(echo -e \"$labelcolor GTK Theme:$textcolor ${mygtk2}${mygtk3}\")\n\t\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mygtk\" )\n\t\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$gtkIcons\" != \"Not Applicable\" && \"$gtkIcons\" != \"Not Found\" ]]; then\n\t\t\t\t\t\tif [ -n \"$gtkIcons\" ]; then\n\t\t\t\t\t\t\tmyicons=$(echo -e \"$labelcolor Icon Theme:$textcolor $gtkIcons\")\n\t\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myicons\" )\n\t\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$gtkFont\" != \"Not Applicable\" && \"$gtkFont\" != \"Not Found\" ]]; then\n\t\t\t\t\t\tif [ -n \"$gtkFont\" ]; then\n\t\t\t\t\t\t\tmyfont=$(echo -e \"$labelcolor Font:$textcolor $gtkFont\")\n\t\t\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myfont\" )\n\t\t\t\t\t\t\t((display_index++))\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$fake_distro\" == \"Cygwin\" || \"$fake_distro\" == \"Msys\" || \"$fake_distro\" == \"Windows - Modern\" ]]; then\n\t\t\tif [[ \"${display[@]}\" =~ \"res\" && -n \"$xResolution\" ]]; then\n\t\t\t\tmyres=$(echo -e \"$labelcolor Resolution:${textcolor} $xResolution\")\n\t\t\t\tout_array=( \"${out_array[@]}\" \"$myres\" )\n\t\t\t\t((display_index++))\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"de\" ]]; then\n\t\t\t\tif [[ \"${DE}\" != \"Not Present\" ]]; then\n\t\t\t\t\tmyde=$(echo -e \"$labelcolor DE:$textcolor $DE\")\n\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$myde\" )\n\t\t\t\t\t((display_index++))\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"wm\" ]]; then\n\t\t\t\tmywm=$(echo -e \"$labelcolor WM:$textcolor $WM\")\n\t\t\t\tout_array=( \"${out_array[@]}\" \"$mywm\" )\n\t\t\t\t((display_index++))\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"wmtheme\" ]]; then\n\t\t\t\tif [[ \"${Win_theme}\" != \"Not Applicable\" && \"${Win_theme}\" != \"Not Found\" ]]; then\n\t\t\t\t\tmywmtheme=$(echo -e \"$labelcolor WM Theme:$textcolor $Win_theme\")\n\t\t\t\t\tout_array=( \"${out_array[@]}\" \"$mywmtheme\" )\n\t\t\t\t\t((display_index++))\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [[ \"$distro\" == \"Haiku\" && -n \"${xResolution}\" && \"${display[@]}\" =~ \"res\" ]]; then\n\t\t\tmyres=$(echo -e \"$labelcolor Resolution:${textcolor} $xResolution\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$myres\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${fake_distro}\" != \"Cygwin\" && \"${fake_distro}\" != \"Msys\" && \"${fake_distro}\" != \"Windows - Modern\" && \"${display[@]}\" =~ \"disk\" ]]; then\n\t\t\tmydisk=$(echo -e \"$labelcolor Disk:$textcolor $diskusage\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mydisk\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"cpu\" ]]; then\n\t\t\tmycpu=$(echo -e \"$labelcolor CPU:$textcolor $cpu\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mycpu\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"gpu\" ]] && [[ \"$gpu\" != \"Not Found\" ]]; then\n\t\t\tmygpu=$(echo -e \"$labelcolor GPU:$textcolor $gpu\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mygpu\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ \"${display[@]}\" =~ \"mem\" ]]; then\n\t\t\tmymem=$(echo -e \"$labelcolor RAM:$textcolor $mem\")\n\t\t\tout_array=( \"${out_array[@]}\" \"$mymem\" )\n\t\t\t((display_index++))\n\t\tfi\n\t\tif [[ -n \"$custom_lines_string\" ]]; then\n\t\t\tcustomlines\n\t\tfi\n\tfi\n\tif [[ \"$display_type\" == \"ASCII\" ]]; then\n\t\tasciiText\n\telse\n\t\tif [[ \"${display[@]}\" =~ \"host\" ]]; then echo -e \"$myinfo\"; fi\n\t\tif [[ \"${display[@]}\" =~ \"distro\" ]]; then echo -e \"$mydistro\"; fi\n\t\tif [[ \"${display[@]}\" =~ \"kernel\" ]]; then echo -e \"$mykernel\"; fi\n\t\tif [[ \"${distro}\" == \"Android\" ]]; then\n\t\t\techo -e \"$mydevice\"\n\t\t\techo -e \"$myrom\"\n\t\t\techo -e \"$mybaseband\"\n\t\t\techo -e \"$mykernel\"\n\t\t\techo -e \"$myuptime\"\n\t\t\techo -e \"$mycpu\"\n\t\t\techo -e \"$mymem\"\n\t\telse\n\t\t\tif [[ \"${display[@]}\" =~ \"uptime\" ]]; then echo -e \"$myuptime\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"pkgs\" && \"$mypkgs\" != \"Unknown\" ]]; then echo -e \"$mypkgs\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"shell\" ]]; then echo -e \"$myshell\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"res\" ]]; then\n\t\t\t\ttest -z \"$myres\" || echo -e \"$myres\"\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"de\" ]]; then\n\t\t\t\tif [[ \"${DE}\" != \"Not Present\" ]]; then echo -e \"$myde\"; fi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"wm\" ]]; then\n\t\t\t\ttest -z \"$mywm\" || echo -e \"$mywm\"\n\t\t\t\tif [[ \"${Win_theme}\" != \"Not Applicable\" && \"${Win_theme}\" != \"Not Found\" ]]; then\n\t\t\t\t\ttest -z \"$mywmtheme\" || echo -e \"$mywmtheme\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"gtk\" ]]; then\n\t\t\t\tif [[ \"$gtk_2line\" == \"yes\" ]]; then\n\t\t\t\t\ttest -z \"$mygtk2\" || echo -e \"$mygtk2\"\n\t\t\t\t\ttest -z \"$mygtk3\" || echo -e \"$mygtk3\"\n\t\t\t\telse\n\t\t\t\t\ttest -z \"$mygtk\" || echo -e \"$mygtk\"\n\t\t\t\tfi\n\t\t\t\ttest -z \"$myicons\" || echo -e \"$myicons\"\n\t\t\t\ttest -z \"$myfont\" || echo -e \"$myfont\"\n\t\t\tfi\n\t\t\tif [[ \"${display[@]}\" =~ \"disk\" ]]; then echo -e \"$mydisk\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"cpu\" ]]; then echo -e \"$mycpu\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"gpu\" ]]; then echo -e \"$mygpu\"; fi\n\t\t\tif [[ \"${display[@]}\" =~ \"mem\" ]]; then echo -e \"$mymem\"; fi\n\t\tfi\n\tfi\n}\n\n##################\n# Let's Do This!\n##################\n\nif [[ -f \"$HOME/.screenfetchOR\" ]]; then\n\tsource \"$HOME/.screenfetchOR\"\nfi\n\nif [[ \"$overrideDisplay\" ]]; then\n\tverboseOut \"Found 'd' flag in syntax. Overriding display...\"\n\tOLDIFS=$IFS\n\tIFS=';'\n\tfor i in ${overrideDisplay}; do\n\t\tmodchar=\"${i:0:1}\"\n\t\tif [[ \"${modchar}\" == \"-\" ]]; then\n\t\t\ti=${i/${modchar}}\n\t\t\t_OLDIFS=IFS\n\t\t\tIFS=,\n\t\t\tfor n in $i; do\n\t\t\t\tif [[ ! \"${display[@]}\" =~ \"$n\" ]]; then\n\t\t\t\t\techo \"The var $n is not currently being displayed.\"\n\t\t\t\telse\n\t\t\t\t\tfor e in \"${!display[@]}\"; do\n\t\t\t\t\t\tif [[ ${display[e]} = \"$n\" ]]; then\n\t\t\t\t\t\t\tunset 'display[e]'\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tIFS=$_OLDIFS\n\t\telif [[ \"${modchar}\" == \"+\" ]]; then\n\t\t\ti=${i/${modchar}}\n\t\t\t_OLDIFS=IFS\n\t\t\tIFS=,\n\t\t\tfor n in $i; do\n\t\t\t\tif [[ \"${valid_display[@]}\" =~ \"$n\" ]]; then\n\t\t\t\t\tif [[ \"${display[@]}\" =~ \"$n\" ]]; then\n\t\t\t\t\t\techo \"The $n var is already being displayed.\"\n\t\t\t\t\telse\n\t\t\t\t\t\tdisplay+=(\"$n\")\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\techo \"The var $n is not a valid display var.\"\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tIFS=$_OLDIFS\n\t\telse\n\t\t\tIFS=$OLDIFS\n\t\t\ti=\"${i//,/ }\"\n\t\t\tdisplay=( \"$i\" )\n\t\tfi\n\tdone\n\tIFS=$OLDIFS\nfi\n\nfor i in \"${display[@]}\"; do\n\tif [[ -n \"$i\" ]]; then\n\t\tif [[ $i =~ wm ]]; then\n\t\t\ttest -z \"$WM\" && detectwm\n\t\t\ttest -z \"$Win_theme\" && detectwmtheme\n\t\telse\n\t\t\tif [[ \"${display[*]}\" =~ \"$i\" ]]; then\n\t\t\t\tif [[ \"$errorSuppress\" == \"1\" ]]; then\n\t\t\t\t\tdetect\"${i}\" 2>/dev/null\n\t\t\t\telse\n\t\t\t\t\tdetect\"${i}\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\ndone\n\n# Check for android\nif [[ -f /system/build.prop  && \"${distro}\" != \"SailfishOS\" ]]; then\n    distro=\"Android\"\n    detectmem\n    detectuptime\n    detectkernel\n    detectdroid\n    infoDisplay\n    exit 0\nfi\n\nif [ \"$gpu\" = 'Not Found' ] ; then\n\tDetectIntelGPU\nfi\n\n\ninfoDisplay\n[ \"$screenshot\" == \"1\" ] && takeShot\n\nexit 0\n"
        },
        {
          "name": "screenfetch.1",
          "type": "blob",
          "size": 5.3896484375,
          "content": ".TH SCREENFETCH \"1\" \"Juni 2018\" \"3.9.9\" \"User Commands\"\n.\\\" Don't remove the lines starting with ».\\\" @supported_« !\n.\\\" They're important for update-manpage.sh.\n\n.SH NAME\nscreenFetch \\- The Bash Screenshot Information Tool\n\n.SH SYNOPSIS\n.B screenfetch \\fR[OPTIONAL FLAGS]\n\n.SH DESCRIPTION\nThis handy Bash script can be used to generate one of those\nnifty terminal theme information + ASCII distribution logos you\nsee in everyone's screenshots nowadays. It will auto-detect your\ndistribution and display an ASCII version of that distribution's\nlogo and some valuable information to the right. There are options\nto specify no ASCII art, colors, taking a screenshot upon displaying\ninfo, and even customizing the screenshot command!\nThis script is very easy to add to and can easily be extended.\n.PP\nSupported GNU/Linux Distributions:\n.IP\n.\\\" @supported_distros_start@\nALDOS, Alpine Linux, Amazon Linux, Antergos, Arch Linux (Old and Current Logos), Artix Linux, blackPanther OS, BLAG, BunsenLabs, CentOS, Chakra, Chapeau, Chrome OS, Chromium OS, CrunchBang, CRUX, Debian, Deepin, DesaOS, Devuan, Dragora, elementary OS, Evolve OS, Exherbo, Fedora, Frugalware, Fuduntu, Funtoo, Fux, Gentoo, gNewSense, Guix System, Hyperbola GNU/Linux-libre, Jiyuu Linux, Kali Linux, KaOS, KDE neon, Kogaion, Korora, LinuxDeepin, Linux Mint, LMDE, Logos, Mageia, Mandriva/Mandrake, Manjaro, Mer, Netrunner, NixOS, OBRevenge, openSUSE, OS Elbrus, Oracle Linux, Parabola GNU/Linux-libre, Pardus, Parrot Security, PCLinuxOS, PeppermintOS, Proxmox VE, PureOS, Qubes OS, Raspbian, Red Hat Enterprise Linux, ROSA, Sabayon, SailfishOS, Scientific Linux, Siduction, Slackware, Solus, Source Mage GNU/Linux, SparkyLinux, SteamOS, SUSE Linux Enterprise, SwagArch, TeArch, TinyCore, Trisquel, Ubuntu, Viperr, Void and Zorin OS.\n.\\\" @supported_distros_end@\n.PP\nOther Supported Systems:\n.IP\n.\\\" @supported_other_start@\nDragonfly/Free/Open/Net BSD, Haiku, Mac OS X, Windows+Cygwin and Windows+MSYS2.\n.\\\" @supported_other_end@\n.PP\nSupported Desktop Managers:\n.IP\n.\\\" @supported_dms_start@\nKDE, GNOME, Unity, Xfce, LXDE, Cinnamon, MATE, Deepin, CDE, RazorQt and Trinity.\n.\\\" @supported_dms_end@\n.PP\nSupported Window Managers:\n.IP\n.\\\" @supported_wms_start@\n2bwm, 9wm, Awesome, Beryl, Blackbox, Cinnamon, chromeos-wm, Compiz, deepin-wm, dminiwm, dwm, dtwm, E16, E17, echinus, Emerald, FluxBox, FLWM, FVWM, herbstluftwm, howm, IceWM, KWin, Metacity, monsterwm, Musca, Gala, Mutter, Muffin, Notion, OpenBox, PekWM, Ratpoison, Sawfish, ScrotWM, SpectrWM, StumpWM, subtle, sway, TWin, WindowMaker, WMFS, wmii, Xfwm4, XMonad and i3.\n.\\\" @supported_wms_end@\n\n.SH OPTIONS\n.TP\n.B \\-v\nVerbose output.\n.TP\n.B \\-o 'OPTIONS'\nAllows for setting script variables on the\ncommand line. Must be in the following format:\n\\&'OPTION1=\"OPTIONARG1\";OPTION2=\"OPTIONARG2\"'\n.TP\n.B -d '+var;-var;var'\nAllows for setting what information is displayed on the command line. You can\nadd displays with +var,var.  You can delete displays with -var,var. Setting\nwithout + or - will set display to that explicit combination. Add and delete\nstatements may be used in conjunction by placing a ; between them as so:\n+var,var,var;-var,var.\n.TP\n.B \\-n\nDo not display ASCII distribution logo.\n.TP\n.B \\-L\nDisplay ASCII distribution logo only.\n.TP\n.B \\-N\nStrip all color from output.\n.TP\n.B \\-w\nWrap long lines.\n.TP\n.B \\-t\nTruncate output based on terminal width (Experimental!).\n.TP\n.B \\-p\nOutput in portrait mode, with logo above info.\n.TP\n.B \\-s [-u IMGHOST]\nUsing this flag tells the script that you want it\nto take a screenshot. Use the \\fB\\-u\\fR flag if you would like\nto upload the screenshots to one of the pre-configured\nlocations. These include: teknik, imgur, mediacrush and hmp.\n.TP\n.B \\-c string\nYou may change the outputted colors with \\fB\\-c\\fR. The format is\nas follows: [0\\-9][0\\-9],[0\\-9][0\\-9]. The first argument controls the\nASCII logo colors and the label colors. The second argument\ncontrols the colors of the information found. One argument may be\nused without the other.\n.TP\n.B \\-a 'PATH'\nYou can specify a custom ASCII art by passing the path to a Bash script,\ndefining \\fBstartline\\fR and \\fBfulloutput\\fR variables, and optionally\n\\fBlabelcolor\\fR and \\fBtextcolor\\fR. See the \\fBasciiText\\fR function\nin the source code for more information on the variables format.\n.TP\n.B \\-S 'COMMAND'\nHere you can specify a custom screenshot command for\nthe script to execute. Surrounding quotes are required.\n.TP\n.B \\-D 'DISTRO'\nHere you can specify your distribution for the script\nto use. Surrounding quotes are required.\n.TP\n.B \\-A 'DISTRO'\nHere you can specify the distribution art that you want\ndisplayed. This is for when you want your distro\ndetected but want to display a different logo.\n.TP\n.B \\-E\nSuppress output of errors.\n.TP\n.B \\-V, \\-\\-version\nDisplay current script version.\n.TP\n.B \\-h, \\-\\-help\nDisplay this help.\n\n.SH \"SEE ALSO\"\nhttp://github.com/KittyKatt/screenFetch\n\n.SH AUTHOR\nCreated by and licensed to Brett Bohnenkamper <kittykatt@kittykatt.us>.\nOS X porting done almost solely by shrx <https://github.com/shrx> and John D. Duncan, III <https://github.com/JohnDDuncanIII>.\n.PP\nThis manual page was written by djcj <djcj@gmx.de>\n\n.SH REPORTING BUGS\nReport bugs to <https://github.com/KittyKatt/screenFetch/issues>\n\n.SH COPYRIGHT\nThis is free software; you can redistribute it and/or modify\nit under the terms of the GNU GPL version 3 or (at your option) any later version.\nThere is NO warranty; not even MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n"
        },
        {
          "name": "update-manpage.sh",
          "type": "blob",
          "size": 0.576171875,
          "content": "#!/bin/sh\n\nLANG=C\nLANGUAGE=C\nLC_ALL=C\n\nman=screenfetch.1\nscript=screenfetch-dev\n\nversion=$(grep 'scriptVersion=' $script | cut -d'\"' -f2)\ndate=$(date +\"%B %Y\")\n\nmv $man $man.old\n\necho \".TH SCREENFETCH \\\"1\\\" \\\"$date\\\" \\\"$version\\\" \\\"User Commands\\\"\" > $man\ngrep -v -e '^.TH ' $man.old >> $man\n\nfor s in supported_distros supported_other supported_dms supported_wms ; do\n\tsed -i \"/@${s}_start@/,/@${s}_end@/{/@${s}_start@/!{/@${s}_end@/!d}}\" $man\n\tlist=\"$(sed -e :a -e '/\\\\$/N; s/\\\\\\n//; ta' $script | grep \"${s}=\" | cut -d'\"' -f2)\"\n\tsed -i \"s:@${s}_start@:@${s}_start@\\n${list}:\" $man\ndone\n\n"
        }
      ]
    }
  ]
}