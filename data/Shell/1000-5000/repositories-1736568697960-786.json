{
  "metadata": {
    "timestamp": 1736568697960,
    "page": 786,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "itzg/docker-minecraft-bedrock-server",
      "stars": 1239,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "docs/*"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0126953125,
          "content": "/.idea/\n*.iml"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.677734375,
          "content": "FROM debian\n\n# hook into docker BuildKit --platform support\n# see https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\n\nRUN --mount=target=/build,source=build /build/install-packages\n\nARG BOX64_PACKAGE=box64\nRUN --mount=target=/build,source=build BOX64_PACKAGE=$BOX64_PACKAGE /build/setup-arm64\n\nEXPOSE 19132/udp\n\nVOLUME [\"/data\"]\n\nWORKDIR /data\n\nENTRYPOINT [\"/usr/local/bin/entrypoint-demoter\", \"--match\", \"/data\", \"--debug\", \"--stdin-on-term\", \"stop\", \"/opt/bedrock-entry.sh\"]\n\nARG APPS_REV=1\nARG GITHUB_BASEURL=https://github.com\n\nARG EASY_ADD_VERSION=0.8.8\nADD ${GITHUB_BASEURL}/itzg/easy-add/releases/download/${EASY_ADD_VERSION}/easy-add_${TARGETOS}_${TARGETARCH}${TARGETVARIANT} /usr/bin/easy-add\nRUN chmod +x /usr/bin/easy-add\n\nARG ENTRYPOINT_DEMOTER_VERSION=0.4.6\nRUN easy-add --var version=${ENTRYPOINT_DEMOTER_VERSION} --var app=entrypoint-demoter --file {{.app}} --from ${GITHUB_BASEURL}/itzg/{{.app}}/releases/download/v{{.version}}/{{.app}}_{{.version}}_linux_${TARGETARCH}.tar.gz\n\nARG SET_PROPERTY_VERSION=0.1.2\nRUN easy-add --var version=${SET_PROPERTY_VERSION} --var app=set-property --file {{.app}} --from ${GITHUB_BASEURL}/itzg/{{.app}}/releases/download/{{.version}}/{{.app}}_{{.version}}_linux_${TARGETARCH}.tar.gz\n\nARG RESTIFY_VERSION=1.7.5\nRUN easy-add --var os=${TARGETOS} --var arch=${TARGETARCH}${TARGETVARIANT} \\\n  --var version=${RESTIFY_VERSION} --var app=restify --file {{.app}} \\\n  --from ${GITHUB_BASEURL}/itzg/{{.app}}/releases/download/{{.version}}/{{.app}}_{{.version}}_{{.os}}_{{.arch}}.tar.gz\n\nARG MC_MONITOR_VERSION=0.15.0\nRUN easy-add --var os=${TARGETOS} --var arch=${TARGETARCH}${TARGETVARIANT} \\\n  --var version=${MC_MONITOR_VERSION} --var app=mc-monitor --file {{.app}} \\\n  --from ${GITHUB_BASEURL}/itzg/{{.app}}/releases/download/{{.version}}/{{.app}}_{{.version}}_{{.os}}_{{.arch}}.tar.gz\n\nARG MC_SERVER_RUNNER_VERSION=1.12.3\nRUN easy-add --var os=${TARGETOS} --var arch=${TARGETARCH}${TARGETVARIANT} \\\n  --var version=${MC_SERVER_RUNNER_VERSION} --var app=mc-server-runner --file {{.app}} \\\n  --from ${GITHUB_BASEURL}/itzg/{{.app}}/releases/download/{{.version}}/{{.app}}_{{.version}}_{{.os}}_{{.arch}}.tar.gz\n\nCOPY *.sh /opt/\n\nCOPY property-definitions.json /etc/bds-property-definitions.json\nCOPY bin/* /usr/local/bin/\n\n# Available versions listed at\n# https://minecraft.wiki/w/Bedrock_Edition_1.11.0\n# https://minecraft.wiki/w/Bedrock_Edition_1.12.0\n# https://minecraft.wiki/w/Bedrock_Edition_1.13.0\n# https://minecraft.wiki/w/Bedrock_Edition_1.14.0\nENV VERSION=LATEST \\\n    SERVER_PORT=19132\n\nHEALTHCHECK --start-period=1m CMD /usr/local/bin/mc-monitor status-bedrock --host 127.0.0.1 --port $SERVER_PORT\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2019 Geoff Bourne\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.4482421875,
          "content": "[![Docker Pulls](https://img.shields.io/docker/pulls/itzg/minecraft-bedrock-server.svg)](https://hub.docker.com/r/itzg/minecraft-bedrock-server/)\n[![GitHub Issues](https://img.shields.io/github/issues-raw/itzg/docker-minecraft-bedrock-server.svg)](https://github.com/itzg/docker-minecraft-bedrock-server/issues)\n[![Build](https://github.com/itzg/docker-minecraft-bedrock-server/workflows/CI/badge.svg)](https://github.com/itzg/docker-minecraft-bedrock-server/actions?query=workflow%3ACI)\n[![Discord](https://img.shields.io/discord/660567679458869252?label=Discord&logo=discord)](https://discord.gg/ScbTrAw)\n[![](https://img.shields.io/badge/Donate-Buy%20me%20a%20coffee-orange.svg)](https://www.buymeacoffee.com/itzg)\n\n## Quickstart\n\nThe following starts a Bedrock Dedicated Server running a default version and\nexposing the default UDP port:\n\n```bash\ndocker run -d -it -e EULA=TRUE -p 19132:19132/udp -v mc-bedrock-data:/data itzg/minecraft-bedrock-server\n```\n\n> **NOTE**: if you plan on running a server for a longer amount of time it is highly recommended using a management layer such as [Docker Compose](#deploying-with-docker-compose) or [Kubernetes](#deploying-with-kubernetes) to allow for incremental reconfiguration and image upgrades.\n\n## Upgrading to the latest Bedrock server version\n\nWith the `VERSION` variable set to \"LATEST\", which is the default, then the Bedrock server can be upgraded by restarting the container. At every startup, the container checks for the latest version and upgrades, if needed.\n\nThe latest preview version can be requested by setting `VERSION` to \"PREVIEW\".\n\n## Looking for a Java Edition Server\n\nFor Minecraft Java Edition you'll need to use this image instead:\n\n[itzg/minecraft-server](https://hub.docker.com/r/itzg/minecraft-server)\n\n## Environment Variables\n\n### Container Specific\n\n- `EULA` (no default) : must be set to `TRUE` to\n  accept the [Minecraft End User License Agreement](https://minecraft.net/terms)\n- `VERSION` (default is `LATEST`) : can be set to a specific server version or the following special values can be used:\n  - `LATEST` : determines the latest (non-preview) version and can be used to auto-upgrade on container start\n  - `PREVIEW` : determines the latest preview version and will auto-upgrade\n  - otherwise any specific server version can be provided. If it is a preview version, also set `PREVIEW` to \"true\"\n- `UID` (default derived from `/data` owner) : can be set to a specific user ID to run the\n  bedrock server process\n- `GID` (default derived from `/data` owner) : can be set to a specific group ID to run the\n  bedrock server process\n- `TZ` (no default): can be set to a specific timezone like `America/New_York`. This will set the timezone for the Docker container and therefore their logs. Addtionally, if you want to sync the time with the host, you can mount the `/etc/localtime` file from the host to the container like `/etc/localtime:/etc/localtime:ro`.\n- `PACKAGE_BACKUP_KEEP` (`2`) : how many package backups to keep\n\n### Server Properties\n\nThe following environment variables will set the equivalent property in `server.properties`, where each [is described here](https://minecraft.wiki/w/Server.properties#Option_keys).\nTypically, each property is configured instead by the UPPER_SNAKE_CASE equivalent.\n\n- `SERVER_NAME`\n- `GAMEMODE`\n- `FORCE_GAMEMODE`\n- `DIFFICULTY`\n- `ALLOW_CHEATS`\n- `MAX_PLAYERS`\n- `ONLINE_MODE`\n- `WHITE_LIST`\n- `ALLOW_LIST`\n- `SERVER_PORT`\n- `SERVER_PORT_V6`\n- `ENABLE_LAN_VISIBILITY`\n- `VIEW_DISTANCE`\n- `TICK_DISTANCE`\n- `PLAYER_IDLE_TIMEOUT`\n- `MAX_THREADS`\n- `LEVEL_NAME`\n- `LEVEL_SEED`\n- `LEVEL_TYPE`\n- `DEFAULT_PLAYER_PERMISSION_LEVEL`\n- `TEXTUREPACK_REQUIRED`\n- `CONTENT_LOG_FILE_ENABLED`\n- `CONTENT_LOG_LEVEL`\n- `CONTENT_LOG_CONSOLE_OUTPUT_ENABLED`\n- `COMPRESSION_THRESHOLD`\n- `COMPRESSION_ALGORITHM`\n- `SERVER_AUTHORITATIVE_MOVEMENT`\n- `PLAYER_POSITION_ACCEPTANCE_THRESHOLD`\n- `PLAYER_MOVEMENT_SCORE_THRESHOLD`\n- `PLAYER_MOVEMENT_ACTION_DIRECTION_THRESHOLD`\n- `PLAYER_MOVEMENT_DISTANCE_THRESHOLD`\n- `PLAYER_MOVEMENT_DURATION_THRESHOLD_IN_MS`\n- `CORRECT_PLAYER_MOVEMENT`\n- `SERVER_AUTHORITATIVE_BLOCK_BREAKING`\n- `SERVER_AUTHORITATIVE_BLOCK_BREAKING_PICK_RANGE_SCALAR`\n- `CHAT_RESTRICTION`\n- `DISABLE_PLAYER_INTERACTION`\n- `CLIENT_SIDE_CHUNK_GENERATION_ENABLED`\n- `BLOCK_NETWORK_IDS_ARE_HASHES`\n- `DISABLE_PERSONA`\n- `DISABLE_CUSTOM_SKINS`\n- `SERVER_BUILD_RADIUS_RATIO`\n- `ALLOW_OUTBOUND_SCRIPT_DEBUGGING`\n- `ALLOW_INBOUND_SCRIPT_DEBUGGING`\n- `FORCE_INBOUND_DEBUG_PORT`\n- `SCRIPT_DEBUGGER_AUTO_ATTACH`\n- `SCRIPT_DEBUGGER_AUTO_ATTACH_CONNECT_ADDRESS`\n- `SCRIPT_WATCHDOG_ENABLE`\n- `SCRIPT_WATCHDOG_ENABLE_EXCEPTION_HANDLING`\n- `SCRIPT_WATCHDOG_ENABLE_SHUTDOWN`\n- `SCRIPT_WATCHDOG_HANG_EXCEPTION`\n- `SCRIPT_WATCHDOG_HANG_THRESHOLD`\n- `SCRIPT_WATCHDOG_SPIKE_THRESHOLD`\n- `SCRIPT_WATCHDOG_SLOW_THRESHOLD`\n- `SCRIPT_WATCHDOG_MEMORY_WARNING`\n- `SCRIPT_WATCHDOG_MEMORY_LIMIT`\n- `OP_PERMISSION_LEVEL`\n- `EMIT_SERVER_TELEMETRY`\n- `MSA_GAMERTAGS_ONLY`\n- `ITEM_TRANSACTION_LOGGING_ENABLED`\n\nFor example, to configure a flat, creative server instead of the default use:\n\n```bash\ndocker run -d -it --name bds-flat-creative \\\n  -e EULA=TRUE -e LEVEL_TYPE=flat -e GAMEMODE=creative \\\n  -p 19132:19132/udp itzg/minecraft-bedrock-server\n```\n\n## Exposed Ports\n\n- **UDP** 19132 : the Bedrock server port on IPv4 set by `SERVER_PORT`. The IPv6 port is not exposed by default.\n  **NOTE** that you must append `/udp` when exposing the port, such as `-p 19132:19132/udp` and both IPv4 and IPv6 must be enabled on your host machine.\n\n## Volumes\n\n- `/data` : the location where the downloaded server is expanded and ran. Also contains the\n  configuration properties file `server.properties`\n\nYou can create a `named volume` and use it as:\n\n```shell\ndocker volume create mc-volume\ndocker run -d -it --name mc-server -e EULA=TRUE -p 19132:19132/udp -v mc-volume:/data itzg/minecraft-bedrock-server\n```\n\nIf you're using a named volume and want the bedrock process to run as a non-root user then you will need to pre-create the volume and `chown` it to the desired user.\n\nFor example, if you want the bedrock server to run with user ID 1000 and group ID 1000, then create and chown the volume named \"bedrock\" using:\n\n```shell script\ndocker run --rm -v bedrock:/data alpine chown 1000:1000 /data\n```\n\nIf using `docker run` then simply reference that volume \"bedrock\" in the `-v` argument. If using a compose file, declare the volume as an external using this type of declaration:\n\n```yaml\nvolumes:\n  bedrock:\n    external:\n      name: bedrock\n```\n\n## Connecting\n\nWhen running the container on your LAN, you can find and connect to the dedicated server\nin the \"LAN Games\" part of the \"Friends\" tab, such as:\n\n![](docs/example-client.jpg)\n\n## Permissions\n\nThe Bedrock Dedicated Server requires permissions be defined with XUIDs. There are various tools to look these up online and they\nare also printed to the log when a player joins. There are 3 levels of permissions and 3 options to configure each group:\n\n- `OPS` is used to define operators on the server.\n```shell\n-e OPS=\"1234567890,0987654321\"\n```\n- `MEMBERS` is used to define the members on the server.\n```shell\n-e MEMBERS=\"1234567890,0987654321\"\n```\n- `VISITORS` is used to define visitors on the server.\n```shell\n-e VISITORS=\"1234567890,0987654321\"\n```\n\n## Allowlist\n\nThere are two ways to handle a whitelist:\n\nThe first is to set the `ALLOW_LIST` environment variable to true and map in an [allowlist.json](https://minecraft.wiki/w/Whitelist.json) file (previously known as \"whitelist.json\") that is custom-crafted to the container.\n\nThe other is to set the `ALLOW_LIST_USERS` environment variable to a comma-separated list of gamer tag usernames and their corresponding XUIDs. Each username should be followed by its XUID, separated by a colon. The server will use these details to match the player.\n\nThere are various tools to look XUIDs up online and they are also printed to the log when a player joins the server.\n\n```shell\n-e ALLOW_LIST_USERS=\"player1:1234567890,player2:0987654321\"\n```\n\n## Mods Addons\n\nAlso known as behavior or resource packs, in order to add mods into your server you can follow these steps, tested with [OPS (One Player Sleep)](https://foxynotail.com/addons/ops/) and [bedrocktweaks](https://bedrocktweaks.net/resource-packs/)\n\n1. Install the mcpack or mcaddon on the client side first, just to make it easier to copy the files to the server, for Windows 10 files should be located on `C:\\Users\\USER\\AppData\\Local\\Packages\\Microsoft.MinecraftUWP_*\\LocalState\\games\\com.mojang`.\n2. Copy over the folders of the mods from either behavior_packs or resource_packs into the server's volume.\n> If you want to install them without using a client you should be able to unzip the mods directly into the server's volume, .mcaddon should go into behavior_packs and .mcpack into resource_packs. Both .mcaddon and .mcpack are actually renamed .zip files.\n3. Lastly create on the server's volume `worlds/$level-name/world_behavior_packs.json`, you'll need to add an entry for each mod like on the previous manifest.json, we only need the uuid now called pack_id and the version replacing dots with commas and double quotes with [ ].\n> You can also create a `worlds/$level-name/world_resource_packs.json` but I have seen that putting both resource and behavior packs inside the same json works just fine\n```\n[\n\t{\n\t\t\"pack_id\" : \"5f51f7b7-85dc-44da-a3ef-a48d8414e4d5\",\n\t\t\"version\" : [ 3, 0, 0 ]\n\t}\n]\n```\n4. Restart the server and the mods should be enabled now! when connecting you will get a prompt asking if you want to \"Download & Join\" or just \"Join\", You need to Download & Join if you want to actually see the new resource pack added to the server.\nThis prompt is exclusive to resource packs as these alter how minecraft looks while behavior packs alter how minecraft functions and don't need to be downloaded or installed on the client side.\n> If you want to force the resource pack on all clients, there's an option `texturepack-required=false` in `server.properties` that should be changed to `true`.\n> Resource packs can be deleted by going into Settings > Storage > Cached Data, then selecting the pack and clicking on the trash can.\n\nFor more information [FoxyNoTail](https://www.youtube.com/watch?v=nWBM4UFm0rQ&t=1380s) did a video explaining the same on a server running on Windows.\n\n## More information\n\nFor more information about managing Bedrock Dedicated Servers in general, [check out this Reddit post](https://old.reddit.com/user/ProfessorValko/comments/9f438p/bedrock_dedicated_server_tutorial/).\n\n## Executing server commands\n\nThis image comes bundled with a script called `send-command` that will send a Bedrock command and argument to the Bedrock server console. The output of the command only be visible in the container logs.\n\nFor example:\n\n```\ndocker exec CONTAINER_NAME_OR_ID send-command gamerule dofiretick false\n```\n\nAlternatively, with stdin and tty enabled (such as using `-it`), attach to the container's console by its name or ID using:\n\n```shell script\ndocker attach CONTAINER_NAME_OR_ID\n```\n\nWhile attached, you can execute any server-side commands, such as op'ing your player to be admin:\n\n```\ngamerule dofiretick false\n```\n\nWhen finished, detach from the server console using Ctrl-p, Ctrl-q\n\n## Deploying with Docker Compose\n\nThe [examples](examples) directory contains [an example Docker compose file](examples/docker-compose.yml) that declares:\n- a service running the bedrock server container and exposing UDP port 19132. In the example is named \"bds\", short for \"Bedrock Dedicated Server\", but you can name the service whatever you want\n- a volume attached to the service at the container path `/data`\n\n```yaml\nservices:\n  bds:\n    image: itzg/minecraft-bedrock-server\n    environment:\n      EULA: \"TRUE\"\n    ports:\n      - \"19132:19132/udp\"\n    volumes:\n      - ./data:/data\n    stdin_open: true\n    tty: true\n```\n\nStart the server and run in the background using:\n\n```bash\ndocker compose up -d\n```\n\nYou can follow the logs at any time using:\n\n```bash\ndocker compose logs -f\n```\n\n## Deploying with Kubernetes\n\nThe [examples](examples) directory contains [an example Kubernetes manifest file](examples/kubernetes.yml) that declares:\n- a peristent volume claim (using default storage class)\n- a pod deployment that uses the declared PVC\n- a service of type LoadBalancer\n\nThe pod deployment includes some examples of configuring the server properties via environment variables:\n```yaml\nenv:\n- name: EULA\n  value: \"TRUE\"\n- name: GAMEMODE\n  value: survival\n- name: DIFFICULTY\n  value: normal\n```\n\nThe file is deploy-able as-is on most clusters, but has been confirmed on [Docker for Desktop](https://docs.docker.com/docker-for-windows/kubernetes/) and [Google Kubernetes Engine](https://cloud.google.com/kubernetes-engine/docs/):\n\n```bash\nkubectl apply -f examples/kubernetes.yml\n```\n\nYou can follow the logs of the deployment using:\n\n```bash\nkubectl logs -f deployment/bds\n```\n\n## Community Solutions\n\n- [kaiede/minecraft-bedrock-backup image](https://hub.docker.com/r/kaiede/minecraft-bedrock-backup) by @Kaiede\n- [ghcr.io/edward3h/mc-webhook](https://github.com/edward3h/minecraft-webhook) by @edward3h\n- [Minecraft Bedrock Server Bridge](https://github.com/macchie/minecraft-bedrock-server-bridge) by @macchie\n- [Admincraft](https://github.com/joanroig/Admincraft) by @joanroig\n\n## Tutorials\n[@TheTinkerDad]([url](https://github.com/TheTinkerDad)) provides an excellent tutorial on how to host multiple instances on a single port (19132) so that it's discoverable: https://www.youtube.com/watch?v=ds0_ESzjbfs\n\n## Contributing\n\n> When trying to build this Docker Image, ensure that all `.sh` files have a end of line sequence of `LF` not `CLRF` or the build will fail."
        },
        {
          "name": "bedrock-entry.sh",
          "type": "blob",
          "size": 6.7548828125,
          "content": "#!/bin/bash\n\nset -eo pipefail\n\n: \"${DOWNLOAD_DIR:=${PWD}/.downloads}\"\n: \"${PREVIEW:=false}\"\n\nfunction isTrue() {\n  [[ \"${1,,}\" =~ ^(true|on|1)$ ]] && return 0\n  return 1\n}\n\nfunction replace_version_in_url() {\n  local original_url=\"$1\"\n  local new_version=\"$2\"\n\n  # Use sed to replace the version number in the URL\n  local modified_url\n  modified_url=$(echo \"$original_url\" | sed -E \"s/(bedrock-server-)[^/]+(\\.zip)/\\1${new_version}\\2/\")\n\n  echo \"$modified_url\"\n}\n\nfunction lookupVersion() {\n  platform=${1:?Missing required platform indicator}\n  customVersion=${2:-}\n\n  # shellcheck disable=SC2034\n  for i in {1..3}; do\n    DOWNLOAD_URL=$(restify --user-agent=itzg/minecraft-bedrock-server --headers \"accept-language:*\" --attribute=data-platform=\"${platform}\" \"${downloadPage}\" 2> restify.err | jq -r '.[0].href' || echo '')\n    [[ -n \"${DOWNLOAD_URL}\" ]] && break\n    sleep 1\n  done\n  if [[ -z ${DOWNLOAD_URL} ]]; then\n    DOWNLOAD_URL=$(curl -s https://mc-bds-helper.vercel.app/api/latest)\n  fi\n\n  if [[ -n \"${customVersion}\" && -n \"${DOWNLOAD_URL}\" ]]; then\n    DOWNLOAD_URL=$(replace_version_in_url \"${DOWNLOAD_URL}\" \"${customVersion}\")\n    return\n  fi\n\n  # shellcheck disable=SC2012\n  if [[ ${DOWNLOAD_URL} =~ http.*/.*-(.*)\\.zip ]]; then\n    VERSION=${BASH_REMATCH[1]}\n  elif [[ $(ls -rv bedrock_server-* 2> /dev/null|head -1) =~ bedrock_server-(.*) ]]; then\n    VERSION=${BASH_REMATCH[1]}\n    echo \"WARN Minecraft download page failed, so using existing download of $VERSION\"\n    cat restify.err\n  else\n    if [[ -f restify.err ]]; then\n      echo \"Failed to extract download URL '${DOWNLOAD_URL}' from ${downloadPage}\"\n      cat restify.err\n      rm restify.err\n    else\n      echo \"Failed to lookup download URL: ${DOWNLOAD_URL}\"\n    fi\n    exit 2\n  fi\n  rm -f restify.err\n}\n\nif [[ ${DEBUG^^} == TRUE ]]; then\n  set -x\n  curlArgs=(-v)\n  echo \"DEBUG: running as $(id -a) with $(ls -ld /data)\"\n  echo \"       current directory is $(pwd)\"\nfi\n\nexport HOME=\"${PWD}\"\n\ndownloadPage=https://www.minecraft.net/en-us/download/server/bedrock\n\nif [[ ${EULA^^} != TRUE ]]; then\n  echo\n  echo \"EULA must be set to TRUE to indicate agreement with the Minecraft End User License\"\n  echo \"See https://minecraft.net/terms\"\n  echo\n  echo \"Current value is '${EULA}'\"\n  echo\n  exit 1\nfi\n\ncase ${VERSION^^} in\n  PREVIEW)\n    echo \"Looking up latest preview version...\"\n    lookupVersion serverBedrockPreviewLinux\n    ;;\n  LATEST)\n    echo \"Looking up latest version...\"\n    lookupVersion serverBedrockLinux\n    ;;\n  *)\n    # use the given version exactly\n    if isTrue \"$PREVIEW\"; then\n      echo \"Using given preview version ${VERSION}\"\n      lookupVersion serverBedrockPreviewLinux \"${VERSION}\"\n    else\n      echo \"Using given version ${VERSION}\"\n      lookupVersion serverBedrockLinux \"${VERSION}\"\n    fi\n    ;;\nesac\n\nif [[ ! -f \"bedrock_server-${VERSION}\" ]]; then\n\n  [[ $DOWNLOAD_DIR != /tmp ]] && mkdir -p \"$DOWNLOAD_DIR\"\n  TMP_ZIP=\"$DOWNLOAD_DIR/$(basename \"${DOWNLOAD_URL}\")\"\n\n  echo \"Downloading Bedrock server version ${VERSION} ...\"\n  if ! curl \"${curlArgs[@]}\" -o \"${TMP_ZIP}\" -A \"itzg/minecraft-bedrock-server\" -fsSL \"${DOWNLOAD_URL}\"; then\n    echo \"ERROR failed to download from ${DOWNLOAD_URL}\"\n    echo \"      Double check that the given VERSION is valid\"\n    exit 2\n  fi\n\n  # remove only binaries and some docs, to allow for an upgrade of those\n  rm -rf -- bedrock_server bedrock_server-* *.so release-notes.txt bedrock_server_how_to.html valid_known_packs.json premium_cache 2> /dev/null\n\n  bkupDir=backup-pre-${VERSION}\n  # fixup any previous interrupted upgrades\n  rm -rf \"${bkupDir}\"\n  for d in behavior_packs definitions minecraftpe resource_packs structures treatments world_templates; do\n    if [[ -d $d && -n \"$(ls $d)\" ]]; then\n      mkdir -p \"${bkupDir}/$d\"\n      echo \"Backing up $d into $bkupDir\"\n      if [[ \"$d\" == \"resource_packs\" ]]; then\n        mv $d/{chemistry,vanilla} \"${bkupDir}/$d/\"\n        cp -a $d/ \"${bkupDir}/$d/\"\n      else\n        mv $d \"${bkupDir}/\"\n      fi\n    fi\n  done\n\n  # remove old package backups, but keep PACKAGE_BACKUP_KEEP\n  if (( ${PACKAGE_BACKUP_KEEP:=2} >= 0 )); then\n    shopt -s nullglob\n    # shellcheck disable=SC2012\n    for d in $( ls -td1 backup-pre-* | tail +$(( PACKAGE_BACKUP_KEEP + 1 )) ); do\n      echo \"Pruning backup directory: $d\"\n      rm -rf \"$d\"\n    done\n  fi\n\n  # Do not overwrite existing files, which means the cleanup above needs to account for things\n  # that MUST be replaced on upgrade\n  unzip -q -n \"${TMP_ZIP}\"\n  [[ $DOWNLOAD_DIR != /tmp ]] && rm -rf \"$DOWNLOAD_DIR\"\n\n  chmod +x bedrock_server\n  mv bedrock_server \"bedrock_server-${VERSION}\"\nfi\n\nif [[ -n \"$OPS\" || -n \"$MEMBERS\" || -n \"$VISITORS\" ]]; then\n  echo \"Updating permissions\"\n  jq -n --arg ops \"$OPS\" --arg members \"$MEMBERS\" --arg visitors \"$VISITORS\" '[\n  [$ops      | split(\",\") | map({permission: \"operator\", xuid:.})],\n  [$members  | split(\",\") | map({permission: \"member\", xuid:.})],\n  [$visitors | split(\",\") | map({permission: \"visitor\", xuid:.})]\n  ]| flatten' > permissions.json\nfi\n\nif [[ -n \"$ALLOW_LIST_USERS\" || -n \"$WHITE_LIST_USERS\" ]]; then\n  allowListUsers=${ALLOW_LIST_USERS:-$WHITE_LIST_USERS}\n\n  if [[ \"$allowListUsers\" ]]; then\n    echo \"Setting allow list\"\n    if [[ \"$allowListUsers\" != *\":\"* ]]; then\n      jq -c -n --arg users \"$allowListUsers\" '$users | split(\",\") | map({\"ignoresPlayerLimit\":false,\"name\": .})' > \"allowlist.json\"\n    else\n      jq -c -n --arg users \"$allowListUsers\" '$users | split(\",\") | map(split(\":\") | {\"ignoresPlayerLimit\":false,\"name\": .[0], \"xuid\": .[1]})' > \"allowlist.json\"\n    fi\n    # activate server property to enable list usage\n    ALLOW_LIST=true\n  else\n    ALLOW_LIST=false\n    rm -f allowlist.json\n  fi\nfi\n\n# prevent issue with bind mounted server.properties which can not be moved (sed tries to move the file when '-i' is used)\n_SERVER_PROPERTIES=$(sed '/^white-list=.*/d' server.properties) #Removes white-list= line from server.properties\necho \"${_SERVER_PROPERTIES}\" > server.properties\nexport ALLOW_LIST\n\n# update server.properties with environment settings\nset-property --file server.properties --bulk /etc/bds-property-definitions.json\n\nexport LD_LIBRARY_PATH=.\n\nmcServerRunnerArgs=()\nif isTrue \"${ENABLE_SSH}\"; then\n  mcServerRunnerArgs+=(--remote-console)\n  if ! [[ -v RCON_PASSWORD ]]; then\n    RCON_PASSWORD=$(openssl rand -hex 12)\n    export RCON_PASSWORD\n  fi\n\n  # For ssh access by tools, export the current password.\n  # Use rcon's format to align with Java, as Java uses the rcon password for SSH as well.\n  echo \"password=${RCON_PASSWORD}\" > \"$HOME/.remote-console.env\"\n  echo \"password: \\\"${RCON_PASSWORD}\\\"\" > \"$HOME/.remote-console.yaml\"\nfi\n\necho \"Starting Bedrock server...\"\nif [[ -f /usr/local/bin/box64 ]] ; then\n    exec mc-server-runner \"${mcServerRunnerArgs[@]}\" box64 ./\"bedrock_server-${VERSION}\"\nelse\n    exec mc-server-runner \"${mcServerRunnerArgs[@]}\" ./\"bedrock_server-${VERSION}\"\nfi\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "property-definitions.json",
          "type": "blob",
          "size": 6.1630859375,
          "content": "{\n  \"server-name\": {\n    \"env\": \"SERVER_NAME\"\n  },\n  \"gamemode\": {\n    \"env\": \"GAMEMODE\",\n    \"allowed\": [\"survival\", \"creative\", \"adventure\"],\n    \"mappings\": {\n      \"0\": \"survival\",\n      \"1\": \"creative\",\n      \"2\": \"adventure\"\n    }\n  },\n  \"force-gamemode\": {\n    \"env\": \"FORCE_GAMEMODE\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"difficulty\": {\n    \"env\": \"DIFFICULTY\",\n    \"allowed\": [\"easy\", \"peaceful\", \"normal\", \"hard\"],\n    \"mappings\": {\n      \"0\": \"peaceful\",\n      \"1\": \"easy\",\n      \"2\": \"normal\",\n      \"3\": \"hard\"\n    }\n  },\n  \"allow-cheats\": {\n    \"env\": \"ALLOW_CHEATS\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"max-players\": {\n    \"env\": \"MAX_PLAYERS\"\n  },\n  \"online-mode\": {\n    \"env\": \"ONLINE_MODE\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"white-list\": {\n    \"env\": \"WHITE_LIST\",\n    \"allowed\": [\"true\", \"false\"],\n    \"deprecated\": \"This property is deprecated. Use 'allow-list' instead.\"\n  },\n  \"allow-list\": {\n    \"env\": \"ALLOW_LIST\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"server-port\": {\n    \"env\": \"SERVER_PORT\"\n  },\n  \"server-portv6\": {\n    \"env\": \"SERVER_PORT_V6\"\n  },\n  \"enable-lan-visibility\": {\n    \"env\": \"ENABLE_LAN_VISIBILITY\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"view-distance\": {\n    \"env\": \"VIEW_DISTANCE\"\n  },\n  \"tick-distance\": {\n    \"env\": \"TICK_DISTANCE\"\n  },\n  \"player-idle-timeout\": {\n    \"env\": \"PLAYER_IDLE_TIMEOUT\"\n  },\n  \"max-threads\": {\n    \"env\": \"MAX_THREADS\"\n  },\n  \"level-name\": {\n    \"env\": \"LEVEL_NAME\"\n  },\n  \"level-seed\": {\n    \"env\": \"LEVEL_SEED\"\n  },\n  \"level-type\": {\n    \"env\": \"LEVEL_TYPE\",\n    \"allowed\": [\"DEFAULT\", \"FLAT\", \"LEGACY\"],\n    \"mappings\": {\n      \"flat\": \"FLAT\",\n      \"legacy\": \"LEGACY\",\n      \"default\": \"DEFAULT\"\n    }\n  },\n  \"default-player-permission-level\": {\n    \"env\": \"DEFAULT_PLAYER_PERMISSION_LEVEL\",\n    \"allowed\": [\"visitor\", \"member\", \"operator\"]\n  },\n  \"texturepack-required\": {\n    \"env\": \"TEXTUREPACK_REQUIRED\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"content-log-file-enabled\": {\n    \"env\": \"CONTENT_LOG_FILE_ENABLED\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"content-log-level\": {\n    \"env\": \"CONTENT_LOG_LEVEL\",\n    \"allowed\": [\"verbose\", \"info\", \"warning\", \"error\"]\n  },\n  \"content-log-console-output-enabled\": {\n    \"env\": \"CONTENT_LOG_CONSOLE_OUTPUT_ENABLED\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"compression-threshold\": {\n    \"env\": \"COMPRESSION_THRESHOLD\"\n  },\n  \"compression-algorithm\": {\n    \"env\": \"COMPRESSION_ALGORITHM\",\n    \"allowed\": [\"zlib\", \"snappy\"]\n  },\n  \"server-authoritative-movement\": {\n    \"env\": \"SERVER_AUTHORITATIVE_MOVEMENT\",\n    \"allowed\": [\"server-auth\", \"client-auth\", \"server-auth-with-rewind\"],\n    \"mappings\": {\n      \"true\": \"server-auth\",\n      \"false\": \"client-auth\"\n    }\n  },\n  \"player-position-acceptance-threshold\": {\n    \"env\": \"PLAYER_POSITION_ACCEPTANCE_THRESHOLD\"\n  },\n  \"player-movement-score-threshold\": {\n    \"env\": \"PLAYER_MOVEMENT_SCORE_THRESHOLD\"\n  },\n  \"player-movement-action-direction-threshold\": {\n    \"env\": \"PLAYER_MOVEMENT_ACTION_DIRECTION_THRESHOLD\"\n  },\n  \"player-movement-distance-threshold\": {\n    \"env\": \"PLAYER_MOVEMENT_DISTANCE_THRESHOLD\"\n  },\n  \"player-movement-duration-threshold-in-ms\": {\n    \"env\": \"PLAYER_MOVEMENT_DURATION_THRESHOLD_IN_MS\"\n  },\n  \"correct-player-movement\": {\n    \"env\": \"CORRECT_PLAYER_MOVEMENT\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"server-authoritative-block-breaking\": {\n    \"env\": \"SERVER_AUTHORITATIVE_BLOCK_BREAKING\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"server-authoritative-block-breaking-pick-range-scalar\": {\n    \"env\": \"SERVER_AUTHORITATIVE_BLOCK_BREAKING_PICK_RANGE_SCALAR\"\n  },\n  \"chat-restriction\": {\n    \"env\": \"CHAT_RESTRICTION\",\n    \"allowed\": [\"None\", \"Dropped\", \"Disabled\"],\n    \"mappings\": {\n      \"none\": \"none\",\n      \"dropped\": \"Dropped\",\n      \"disabled\": \"Disabled\"\n    }\n  },\n  \"disable-player-interaction\": {\n    \"env\": \"DISABLE_PLAYER_INTERACTION\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"client-side-chunk-generation-enabled\": {\n    \"env\": \"CLIENT_SIDE_CHUNK_GENERATION_ENABLED\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"block-network-ids-are-hashes\": {\n    \"env\": \"BLOCK_NETWORK_IDS_ARE_HASHES\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"disable-persona\": {\n    \"env\": \"DISABLE_PERSONA\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"disable-custom-skins\": {\n    \"env\": \"DISABLE_CUSTOM_SKINS\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"server-build-radius-ratio\": {\n    \"env\": \"SERVER_BUILD_RADIUS_RATIO\"\n  },\n  \"allow-outbound-script-debugging\": {\n    \"env\": \"ALLOW_OUTBOUND_SCRIPT_DEBUGGING\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"allow-inbound-script-debugging\": {\n    \"env\": \"ALLOW_INBOUND_SCRIPT_DEBUGGING\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"force-inbound-debug-port\": {\n    \"env\": \"FORCE_INBOUND_DEBUG_PORT\"\n  },\n  \"script-debugger-auto-attach\": {\n    \"env\": \"SCRIPT_DEBUGGER_AUTO_ATTACH\",\n    \"allowed\": [\"disabled\", \"connect\", \"listen\"]\n  },\n  \"script-debugger-auto-attach-connect-address\": {\n    \"env\": \"SCRIPT_DEBUGGER_AUTO_ATTACH_CONNECT_ADDRESS\"\n  },\n  \"script-watchdog-enable\": {\n    \"env\": \"SCRIPT_WATCHDOG_ENABLE\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"script-watchdog-enable-exception-handling\": {\n    \"env\": \"SCRIPT_WATCHDOG_ENABLE_EXCEPTION_HANDLING\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"script-watchdog-enable-shutdown\": {\n    \"env\": \"SCRIPT_WATCHDOG_ENABLE_SHUTDOWN\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"script-watchdog-hang-exception\": {\n    \"env\": \"SCRIPT_WATCHDOG_HANG_EXCEPTION\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"script-watchdog-hang-threshold\": {\n    \"env\": \"SCRIPT_WATCHDOG_HANG_THRESHOLD\"\n  },\n  \"script-watchdog-spike-threshold\": {\n    \"env\": \"SCRIPT_WATCHDOG_SPIKE_THRESHOLD\"\n  },\n  \"script-watchdog-slow-threshold\": {\n    \"env\": \"SCRIPT_WATCHDOG_SLOW_THRESHOLD\"\n  },\n  \"script-watchdog-memory-warning\": {\n    \"env\": \"SCRIPT_WATCHDOG_MEMORY_WARNING\"\n  },\n  \"script-watchdog-memory-limit\": {\n    \"env\": \"SCRIPT_WATCHDOG_MEMORY_LIMIT\"\n  },\n  \"op-permission-level\": {\n    \"env\": \"OP_PERMISSION_LEVEL\"\n  },\n  \"emit-server-telemetry\": {\n    \"env\": \"EMIT_SERVER_TELEMETRY\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"msa-gamertags-only\": {\n    \"env\": \"MSA_GAMERTAGS_ONLY\",\n    \"allowed\": [\"true\", \"false\"]\n  },\n  \"item-transaction-logging-enabled\": {\n    \"env\": \"ITEM_TRANSACTION_LOGGING_ENABLED\",\n    \"allowed\": [\"true\", \"false\"]\n  }\n}\n"
        }
      ]
    }
  ]
}