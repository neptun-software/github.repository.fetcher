{
  "metadata": {
    "timestamp": 1736568233038,
    "page": 100,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "erikw/tmux-powerline",
      "stars": 3492,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.19921875,
          "content": "segments/np_mpd\nsegments/xkb_layout\n*.swp\n\n\n# ignore all themes, except for the built-in ones. User themes should be put in `~/.config/tmux-powerline/themes/\nthemes/*\n!themes/default.sh\n!themes/bubble.sh\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.271484375,
          "content": "Please append your name/nick here when you have contributed with something!\n\nErik Westrup <erik.westrup@gmail.com>\nSuvash Thapaliya <suvash@gmail.com>\nErik Jansson <erikjansson90@gmail.com>\nYuku Takahashi <taka84u9@gmail.com>\nOscar Olsson <osse.olsson@gmail.com>\nRyo Katsuma\nnegipo\nSina Siadat\nVivien Leroy <fantattitude@me.com>\nGino Lucero\nDerek Ashley Thomas <derekathomas@gmail.com>\nLuRsT\nTomokazu Hirai <tomokazu.hirai@gmail.com>\nMatt Black\nkrieiter\nViktor Jackson\nflytreeleft <flytreeleft@126.com>\nConner McDaniel\nDavid Francos <me@davidfrancos.net>\nTravis Thompson <butters08@gmail.com>\nJonathon Klobucar\nDylan Copeland <me@dylancopeland.com>\nPete Johns <paj-github@johnsy.com>\nRobert Murray McMahon\nJeff Felchner\ntobetoby\nMatthew Lanigan\nHadret <hadret@gmail.com>\nantiAgainst <antiAgainst@gmail.com>\nAlexander Luberg <alex@luberg.me>\nStanislaw Pusep <stas@sysd.org>\nAustin Beam\nIngo Heimbach\nMSempere\nkurczynski\nAlejandro Espinosa (Halbard) <alejosp493@gmail.com>\nTN Khanh <tnkhanh4@gmail.com>\nSkywarth <yigitk.ersoy@gmail.com>\nDrew Daniels <daniels_drew@protonmail.com>\nDanfeng Shan <shandanf@gmail.com>\nAbraham Nu√±ez <abrahamnm@gmail.com>\nGavin Kondrath <gavin.kondrath@gmail.com>\nIzzy Gomez <izzygmit@gmail.com>\nChristian Reiniger <creinig@creinig.de>\nFabian 'xx4h' Sylvester <xx4h@xx4h.de>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.15625,
          "content": "<!-- markdownlint-disable no-duplicate-heading -->\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n### Added\n- Dual status bar support [#379](https://github.com/erikw/tmux-powerline/issues/379)\n- New segment date_week [#375](https://github.com/erikw/tmux-powerline/issues/375)\n- New segment kubernetes_context [#377](https://github.com/erikw/tmux-powerline/issues/377)\n- New segment vcs_rootpath [#373](https://github.com/erikw/tmux-powerline/issues/374)\n- New segment vpn [#383](https://github.com/erikw/tmux-powerline/issues/383)\n- Re-enable Linter [#414](https://github.com/erikw/tmux-powerline/pull/414)\n### Changed\n- Improved roll_text function [#390](https://github.com/erikw/tmux-powerline/issues/390)\n- Improved segment ifstat [#402](https://github.com/erikw/tmux-powerline/issues/402)\n- Minor improvements, cleanup & shellcheck compliance\n  [#392](https://github.com/erikw/tmux-powerline/pull/392), [#395](https://github.com/erikw/tmux-powerline/pull/395), [#396](https://github.com/erikw/tmux-powerline/pull/396), [#400](https://github.com/erikw/tmux-powerline/pull/400),\n  [#401](https://github.com/erikw/tmux-powerline/pull/401), [#403](https://github.com/erikw/tmux-powerline/pull/403), [#407](https://github.com/erikw/tmux-powerline/pull/407), [#406](https://github.com/erikw/tmux-powerline/pull/406),\n  [#409](https://github.com/erikw/tmux-powerline/pull/409), [#408](https://github.com/erikw/tmux-powerline/pull/408), [#410](https://github.com/erikw/tmux-powerline/pull/410), [#411](https://github.com/erikw/tmux-powerline/pull/411),\n  [#409](https://github.com/erikw/tmux-powerline/pull/412)\n- Improve Linter [#418](https://github.com/erikw/tmux-powerline/pull/418)\n### Fixed\n- Fix vcs segments [#371](https://github.com/erikw/tmux-powerline/issues/371)\n- Fix wrong session_info in nested tmux session [#359](https://github.com/erikw/tmux-powerline/issues/359)\n- Fix air segment [#394](https://github.com/erikw/tmux-powerline/pull/394) & [#397](https://github.com/erikw/tmux-powerline/pull/397)\n\n\n## [3.0.0] - 2023-10-02\n### Added\n- Config options to set the status bar's initial visibility, refresh interval and justification: `TMUX_POWERLINE_STATUS_VISIBILITY`, `TMUX_POWERLINE_STATUS_INTERVAL` and `TMUX_POWERLINE_STATUS_JUSTIFICATION`.\n- Allow setting the `default` tmux color in segment themes. [#296](https://github.com/erikw/tmux-powerline/issues/296).\n- Allow truncation of VCS branch name with a new config `TMUX_POWERLINE_SEG_VCS_BRANCH_MAX_LEN`.\n### Changed\n- Removed support for the deprecated config file `~/.tmux-powerlinerc`. [#330](https://github.com/erikw/tmux-powerline/issues/330)\n### Fixed\n- The now playing segment is fixed for Last.FM using their 2.0 API. [#307](https://github.com/erikw/tmux-powerline/issues/307)\n- Correctly handle named colours when specifying theme colours. [#314](https://github.com/erikw/tmux-powerline/issues/314)\n\n## [2.1.0] - 2023-04-16\n### Added\n- Config options to add keybindigns to mute the status bar added: `TMUX_POWERLINE_MUTE_LEFT_KEYBINDING` and `TMUX_POWERLINE_MUTE_RIGHT_KEYBINDING`.\n### Changed\n- The old manual way is not supported for simplicity of maintaining the code.\n\n## [2.0.0] - 2023-04-15\n### Added\n- tmux-powerline is now installable as a [tpm](https://github.com/tmux-plugins/tpm) plugin! Long requested feature. [#189](https://github.com/erikw/tmux-powerline/issues/189)\n- Theme config: add ability to selectively disable spacing and segment characters. [#302](https://github.com/erikw/tmux-powerline/pull/302)\n### Changed\n- Improved the README.md with config instructions and include user segment instructions.\n### Removed\n- Dropped support for `$(tmux -V)` <2.2.\n\n## [1.4.0] - 2022-05-04\n### Fixed\n- Weather segment now working with yr.no as weather provider. [#285](https://github.com/erikw/tmux-powerline/pull/285)\n\n## [1.3.0] - 2022-04-05\n### Changed\n- Rename master branch to main.\n\n## [1.2.0] - 2021-10-25\n### Added\n- Support for `$XDG_CONFIG_HOME` for config file.\n\n## [1.1.0] - 2018-03-26\n\n## [1.0.0] - 2015-05-07\n- First tagged release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4228515625,
          "content": "Copyright 2012 Erik Westrup\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "OSSMETADATA",
          "type": "blob",
          "size": 0.01953125,
          "content": "osslifecycle=active\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.798828125,
          "content": "<!-- markdownlint-disable first-line-heading -->\n<p align=\"center\">\n<img alt=\"log\" width=\"100%\" height=\"100%\" src=\"img/logo.png\" />\n</p>\n<p align=\"center\"><i>Empowering your tmux (status bar) experience!</i></p>\n<hr>\n\n<p align=\"center\">\n<img alt=\"GitHub Stars\" src=\"https://img.shields.io/github/stars/erikw/tmux-powerline?style=social\" />\n<img alt=\"GitHub Forks\" src=\"https://img.shields.io/github/forks/erikw/tmux-powerline?style=social\" />\n</p>\n\n<!-- markdownlint-disable no-empty-links -->\n[![Lint Code Base](https://github.com/erikw/tmux-powerline/actions/workflows/linter-full.yml/badge.svg)](https://github.com/erikw/tmux-powerline/actions/workflows/linter-full.yml)\n[![SLOC](https://tokei.rs/b1/github/erikw/tmux-powerline?category=code&style=flat)](#)\n[![Number of programming languages used](https://img.shields.io/github/languages/count/erikw/tmux-powerline)](#)\n[![Top programming languages used](https://img.shields.io/github/languages/top/erikw/tmux-powerline)](#)\n[![Open issues](https://img.shields.io/github/issues/erikw/tmux-powerline)](https://github.com/erikw/tmux-powerline/issues)\n[![Closed issues](https://img.shields.io/github/issues-closed/erikw/tmux-powerline?color=success)](https://github.com/erikw/tmux-powerline/issues?q=is%3Aissue+is%3Aclosed)\n[![Closed PRs](https://img.shields.io/github/issues-pr-closed/erikw/tmux-powerline?color=success)](https://github.com/erikw/tmux-powerline/pulls?q=is%3Apr+is%3Aclosed)\n[![License](https://img.shields.io/badge/license-BSD--3-blue)](LICENSE.txt)\n[![OSS Lifecycle](https://img.shields.io/osslifecycle/erikw/tmux-powerline)](https://github.com/Netflix/osstracker)\n[![Latest tag](https://img.shields.io/github/v/tag/erikw/tmux-powerline)](https://github.com/erikw/tmux-powerline/tags)\n<br>\n<!-- markdownlint-enable no-empty-links -->\n\n[![Contributors](https://img.shields.io/github/contributors/erikw/tmux-powerline)](https://github.com/erikw/tmux-powerline/graphs/contributors) including these top contributors:\n<a href=\"https://github.com/erikw/tmux-powerline/graphs/contributors\">\n<img alt=\"Top Contributors\" src=\"https://contrib.rocks/image?repo=erikw/tmux-powerline&max=36\"/>\n</a>\n\n\n# Intro\ntmux-powerline is a tmux <a title=\"Tmux Plugin Manager\" href=\"https://github.com/tmux-plugins/tpm\">tpm</a> plugin that gives you a slick and hackable powerline status bar consisting of segments. It's easily extensible with custom segments and themes.\nThe plugin itself is implemented purely in bash thus minimizing system requirements. However you can make segments in any language you want (with a shell wrapper).\n\nSome examples of segments available that you can add to your tmux status bar are (full list [here](https://github.com/erikw/tmux-powerline/tree/main/segments)):\n* LAN & WAN IP addresses\n* Now Playing for MPD, Spotify (GNU/Linux native or wine, macOS), iTunes (macOS), Rhythmbox, Banshee, MOC, Audacious, Rdio (macOS), cmus, Pithos and Last.fm (last scrobbled track).\n* New mail count for GMail, Maildir, mbox, mailcheck, and Apple Mail\n* GNU/Linux and macOS battery status (uses [richo/dotfiles/bin/battery](https://github.com/richoH/dotfiles/blob/master/bin/battery))\n* Weather in Celsius, Fahrenheit and Kelvin using Yahoo Weather\n* System load, cpu usage and uptime\n* Git, SVN and Mercurial branch in CWD\n* Date and time\n* Hostname\n* tmux info\n* tmux mode indicator (normal/prefix, mouse, copy modes)\n* CWD in pane\n* Current X keyboard layout\n* Network download/upload speed\n* Earthquake warnings\n\n# Screenshots\n**Full screenshot**\n\n<a href=\"img/full.png\" title=\"Full screenshot\"><img src=\"img/full.png\" width=\"850\" alt=\"Full screenshot\"></a>\n\n**left-status**\n\nCurrent tmux session, window and pane, hostname and LAN & WAN IP address.\n\n![left-status](img/left-status.png)\n\n**right-status**\n\nNew mails, now playing, average load, weather, date and time.\n\n![right-status](img/right-status.png)\n\nNow I've read my inbox so the mail segment disappears!\n\n![right-status, no mail](img/right-status_no_mail.png)\n\nAfter pausing the music there's no need for showing the Now Playing segment anymore. Also the weather has become much nicer!\n\n![right-status, no mpd](img/right-status_no_mpd.png)\n\nLaptop mode: a battery segment.\n\n![right-status, weather and battery](img/right-status_weather_battery.png)\n\n**dual-line status**\n\n![dual-line status bar](img/dual-line-status-bar.png)\n\n# Co-maintainer\n[@xx4h](https://github.com/xx4h) is helping out developing, maintaining and managing this project!\n\n# Requirements\nRequirements for the lib to work are:\n* `tmux -V` >= 2.9\n* `bash --version` >= 3.2 (Does not have to be your default shell.)\n* Nerd Font. Follow instructions at [Font Installation](https://github.com/ryanoasis/nerd-fonts?tab=readme-ov-file#font-installation). However you can use other substitute symbols as well; see `config.sh`.\n\n## Segment Requirements\nSome segments have their own requirements. If you enable them in your theme, make sure all requirements are met for those.\n\n* `wan_ip.sh`, `now_playing.sh` (last.fm), `weather_yahoo.sh`: curl, bc\n* `now_playing.sh`\n  * mpd: [libmpdclient](http://sourceforge.net/projects/musicpd/files/libmpdclient/)\n  * last.fm: `jq`\n* `xkb_layout.sh`: X11, XKB\n* `mailcount.sh` (gmail): wget, (mailcheck): [mailcheck](http://packages.debian.org/sid/mailcheck).\n* `ifstat.sh`: ifstat (there is a simpler segment not using ifstat but samples /sys/class/net)\n* `tmux_mem_cpu_load.sh`: [tmux-mem-cpu-load](https://github.com/thewtex/tmux-mem-cpu-load)\n* `rainbarf.sh`: [rainbarf](https://github.com/creaktive/rainbarf)\n* `weather.sh`: GNU `grep` with Perl regular expression enabled (FreeBSD specific), `jq` for yrno weather API.\n* `github_notifications.sh`: `jq` for GitHub API.\n\n## FreeBSD specific requirements\nPreinstalled `grep` in FreeBSD doesn't support Perl regular expressions. Solution is rather simple -- you need to use `textproc/gnugrep` port instead. You also need to make sure, that it has support for PCRE and is compiled with `--enable-perl-regexp` flag.\n\n\n# Installation\n1. Install [tpm](https://github.com/tmux-plugins/tpm) and make sure it's working.\n2. Install tmux-powerline as a plugin by adding a line to `tmux.conf`:\n     ```conf\n      set -g @plugin 'erikw/tmux-powerline'\n     ```\n3. Install the plugin with `<prefix>I`, unless you changed [tpm's keybindings](https://github.com/tmux-plugins/tpm#key-bindings).\n   * The default powerline should already be visible now!\n4. Continue to the [Configuration](#configuration) section below.\n\nNote that tpm plugins should be at the bottom of you `tmux.conf`. This plugin will then override some tmux settings like `status-left`, `status-right` etc. If you had already set those in your tmux config, it is a good opportunity to remove or comment those out.\nTake a look at [main.tmux](https://github.com/erikw/tmux-powerline/blob/main/main.tmux) for exactly which settings are overridden.\n\n\n# Configuration\ntmux-powerline stores the custom config, themes and segments at `$XDG_CONFIG_HOME/tmux-powerline/`.\n\nTo make the following example easier, let's assume the following:\n* `$XDG_CONFIG_HOME` has the default value of `~/.config`\n* tmux-powerline was installed to the XDG path `~/.config/tmux/plugins/tmux-powerline`\n\nAdapt the commands below if your paths differs from this.\n\n## Config file\nStart by generating your own configuration file:\n```shell\n~/.config/tmux/plugins/tmux-powerline/generate_config.sh\nmv ~/.config/tmux-powerline/config.sh.default ~/.config/tmux-powerline/config.sh\n$EDITOR ~/.config/tmux-powerline/config.sh\n```\n\nGo through the default config and adjust to your needs!\n\n## Custom theme\nThe theme is specified by setting the environment variable `$TMUX_POWERLINE_THEME` in the config file above. It will use a default theme and you probably want to use your own. The default config have set the custom theme path to be `~/.config/tmux-powerline/themes/`.\n\nMake a copy of the default theme and make your own, say `my-theme`:\n```shell\nmkdir -p ~/.config/tmux-powerline/themes\ncp ~/.config/tmux/plugins/tmux-powerline/themes/default.sh ~/.config/tmux-powerline/themes/my-theme.sh\n$EDITOR ~/.config/tmux-powerline/themes/my-theme.sh\n```\n\nRemember to update the configuration file to use the new theme by setting `TMUX_POWERLINE_THEME=my-theme`\n\n## Custom segments\nIn the same was as themes, you can create your own segments at `TMUX_POWERLINE_DIR_USER_SEGMENTS` which defaults to `~/.config/tmux-powerline/segments`.\n\nTo get started, copy an existing segment that is similar to the segment that you want to create.\n```shell\nmkdir -p ~/.config/tmux-powerline/segments\ncp ~/.config/tmux/plugins/tmux-powerline/segments/date.sh ~/.config/tmux-powerline/segments/my-segment.sh\n$EDITOR ~/.config/tmux-powerline/segments/my-segment.sh\n```\n\nNow you can add `my-segment` to your own theme!\n\nAlso see [How to make a segment](#how-to-make-a-segment) below for more details.\n\n\n# Debugging\nSome segments might not work on your system for various reasons such as missing programs or different versions not having the same options. To find out which segment is not working it may help to enable the debug setting in `~/.config/tmux-powerline/config.sh`.\nHowever this may not be enough to determine the error so you can inspect all executed bash commands (will be a long output) by doing\n\n```shell\nbash -x powerline.sh (left|right)\n```\n\nTo debug smaller portions of code, say if you think the problem lies in a specific segment, insert these lines at the top and bottom of the relevant code portions e.g. inside a function:\n\n```bash\nset -x\nexec 2>/tmp/tmux-powerline.log\n<code to debug>\nset +x\n```\n\nand then inspect the outputs like\n\n```shell\nless /tmp/tmux-powerline.log\ntail -f /tmp/tmux-powerline.log # or follow output like this.\n```\n\n\nYou can also enable the debug mode in your config file. Look for the `TMUX_POWERLINE_DEBUG_MODE_ENABLED` environment variable and set it to `true`.\n\nIf you can not solve the problems you can post an [issue](https://github.com/erikw/tmux-powerline/issues?state=open) and be sure to include relevant information about your system and script output (from bash -x) and/or screenshots if needed.\nBe sure to search in the [resolved issues](https://github.com/erikw/tmux-powerline/issues?page=1&state=closed) section for similar problems you're experiencing before posting.\n\n\n\n## Common problems\n### Nothing is displayed\nYou have edited `~/.tmux.conf` but no powerline is displayed. This might be because tmux is not aware of the changes so you have to restart your tmux session or reloaded that file by typing this on the command-line (or in tmux command mode with `prefix :`)\n\n```shell\ntmux source-file ~/.tmux.conf\n```\n### Multiple lines in bash or no powerline in Zsh using iTerm (macOS)\nIf your tmux looks like [this](https://github.com/erikw/tmux-powerline/issues/125) then you may have to in iTerm uncheck [Unicode East Asian Ambiguous characters are wide] in Preferences -> Settings -> Advanced.\n\n# Hacking\nThis project can only gain positively from contributions. Fork today and make your own enhancements and segments to share back! If you'd like, add your name and email to AUTHORS before making a pull request so you can get some credit for your work :-)\n\n## How to make a segment\nIf you want to (of course you do!) send a pull request for a cool segment you written make sure that it follows the style of existing segments, unless you have good reason for it. Each segment resides in the `segments/` directory with a descriptive and simple name.\nA segment must have at least one function and that is `run_segment` which is like the main function that is called from the tmux-powerline lib. What ever text is echoed out from this function to stdout is the text displayed in the tmux status bar.\nIf the segment at a certain point does not have anything to show, simply don't echo anything out and the segment will be hidden. A successful execution of the `run_segment` function should return an exit code of 0.\nIf the segment failed to execute in a fatal way return a non-zero exit code so the user can pick up the error and fix it when debug mode is on (e.g. missing program that is needed for the segment).\n\nUsage of helper function to organize the work of a segment is encourage and should be named in the format `__helper_func`. If a segment has settings it should have a function `generate_segmentrc` which outputs default values of all settings and a short\nexplanation of the setting and its values. Study e.g. `segments/now_playing.sh` to see how it is done. A segment having settings should typically call a helper function `__process_settings` as the first statement in `run_segment` that sets default values\nto the settings that has not been set by the user.\n\nAlso, don't use bash4 features as requiring bash4 complicates installation for macOS user quite a bit. Use tabs for indentation ([discussion](https://github.com/erikw/tmux-powerline/pull/92)),\n\n\n# More tmux plugins\nI have another tmux plugin that might interest you:\n* [tmux-dark-notify](https://github.com/erikw/tmux-dark-notify) - A plugin that make tmux's theme follow macOS dark/light mode.\n"
        },
        {
          "name": "color_palette.sh",
          "type": "blob",
          "size": 0.357421875,
          "content": "#!/usr/bin/env bash\n# Print tmux color palette.\n# Idea from http://superuser.com/questions/285381/how-does-the-tmux-color-palette-work\n\nfor i in $(seq 0 8 255); do\n\tfor j in $(seq \"$i\" $((i + 7))); do\n\t\tfor _unused in $(seq 1 $((7 - ${#j}))); do\n\t\t\techo -n \" \"\n\t\tdone\n\t\techo -en \"\\x1b[38;5;${j}mcolour${j}\"\n\t\t[[ $((j % 8)) != 7 ]] && echo -n \"    \"\n\tdone\n\techo\ndone\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "generate_config.sh",
          "type": "blob",
          "size": 0.427734375,
          "content": "#!/usr/bin/env bash\n# Generate default config file.\n\nTMUX_POWERLINE_DIR_HOME=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nexport TMUX_POWERLINE_DIR_HOME\n\nsource \"${TMUX_POWERLINE_DIR_HOME}/config/paths.sh\"\nsource \"${TMUX_POWERLINE_DIR_HOME}/config/defaults.sh\"\nsource \"${TMUX_POWERLINE_DIR_HOME}/config/shell.sh\"\n# shellcheck source=lib/config_file.sh\nsource \"${TMUX_POWERLINE_DIR_LIB}/config_file.sh\"\n\ngenerate_default_config\n\nexit 0\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.tmux",
          "type": "blob",
          "size": 2.7060546875,
          "content": "#!/usr/bin/env bash\n# shellcheck disable=SC2317\n# Entry point for this TPM plugin.\n\nset -o errexit\nset -o pipefail\n\nTMUX_POWERLINE_DIR_HOME=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nexport TMUX_POWERLINE_DIR_HOME\n\n# Obtain the left/right status length settings by reading the tmux-powerline config.\nsource \"${TMUX_POWERLINE_DIR_HOME}/lib/headers.sh\"\nprocess_settings\n\n# Apply default status-format to ensure default single-line status bar is working as\n# expected, especially when switching from dual-line status-bar.\ntmux set-option -gu status-format\n\n# Configure tmux to use tmux-powerline.\n# It's assumed that this will override these setting if already set in tmux.conf, as TPM is recommended to be loaded last in the tmux.conf. Ref: https://github.com/tmux-plugins/tpm\ntmux set-option -g status \"$TMUX_POWERLINE_STATUS_VISIBILITY\"\ntmux set-option -g status-interval \"$TMUX_POWERLINE_STATUS_INTERVAL\"\ntmux set-option -g status-justify \"$TMUX_POWERLINE_STATUS_JUSTIFICATION\"\ntmux set-option -g status-style \"$TMUX_POWERLINE_STATUS_STYLE\"\ntmux set-option -g message-style \"$TMUX_POWERLINE_STATUS_STYLE\"\n\ntmux set-option -g status-left-length \"$TMUX_POWERLINE_STATUS_LEFT_LENGTH\"\ntmux set-option -g status-right-length \"$TMUX_POWERLINE_STATUS_RIGHT_LENGTH\"\n\ntmux set-option -g status-left \"#(${TMUX_POWERLINE_DIR_HOME}/powerline.sh left)\"\ntmux set-option -g status-right \"#(${TMUX_POWERLINE_DIR_HOME}/powerline.sh right)\"\n\nif [ \"$TMUX_POWERLINE_STATUS_VISIBILITY\" = \"2\" ]; then\n\t# handle TMUX_POWERLINE_WINDOW_STATUS_LINE=0 and fallback for misconfiguration\n\tif [ \"$TMUX_POWERLINE_WINDOW_STATUS_LINE\" != \"1\" ]; then\n\t\twindow_status=0\n\t\tleft_right_status=1\n\telse\n\t\twindow_status=1\n\t\tleft_right_status=0\n\tfi\n\ttmux set-option -g status-format[\"$window_status\"] \"${TMUX_POWERLINE_STATUS_FORMAT_WINDOW:-${TMUX_POWERLINE_STATUS_FORMAT_WINDOW_DEFAULT}}\"\n\ttmux set-option -g status-format[\"$left_right_status\"] \"${TMUX_POWERLINE_STATUS_FORMAT_LEFT:-${TMUX_POWERLINE_STATUS_FORMAT_LEFT_DEFAULT}}\"\n\ttmux set-option -ag status-format[\"$left_right_status\"] \"${TMUX_POWERLINE_STATUS_FORMAT_RIGHT:-${TMUX_POWERLINE_STATUS_FORMAT_RIGHT_DEFAULT}}\"\nfi\n\ntmux set-option -g window-status-current-format \"#(${TMUX_POWERLINE_DIR_HOME}/powerline.sh window-current-format)\"\ntmux set-option -g window-status-format \"#(${TMUX_POWERLINE_DIR_HOME}/powerline.sh window-format)\"\ntmux set-option -g window-status-separator \"$TMUX_POWERLINE_WINDOW_STATUS_SEPARATOR\"\n\nif [ -n \"$TMUX_POWERLINE_MUTE_LEFT_KEYBINDING\" ]; then\n\ttmux bind \"$TMUX_POWERLINE_MUTE_LEFT_KEYBINDING\" run \"$TMUX_POWERLINE_DIR_HOME/mute_powerline.sh left\"\nfi\n\nif [ -n \"$TMUX_POWERLINE_MUTE_RIGHT_KEYBINDING\" ]; then\n\ttmux bind \"$TMUX_POWERLINE_MUTE_RIGHT_KEYBINDING\" run \"$TMUX_POWERLINE_DIR_HOME/mute_powerline.sh right\"\nfi\n"
        },
        {
          "name": "mute_powerline.sh",
          "type": "blob",
          "size": 0.4150390625,
          "content": "#!/usr/bin/env bash\n\nTMUX_POWERLINE_DIR_HOME=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nexport TMUX_POWERLINE_DIR_HOME\n\nsource \"${TMUX_POWERLINE_DIR_HOME}/config/paths.sh\"\n# shellcheck source=lib/muting.sh\nsource \"${TMUX_POWERLINE_DIR_LIB}/muting.sh\"\n# shellcheck source=lib/arg_processing.sh\nsource \"${TMUX_POWERLINE_DIR_LIB}/arg_processing.sh\"\n\nside=\"$1\"\ncheck_arg_segment \"$side\"\ntoggle_powerline_mute_status \"$side\"\n"
        },
        {
          "name": "powerline.sh",
          "type": "blob",
          "size": 0.4951171875,
          "content": "#!/usr/bin/env bash\n\nTMUX_POWERLINE_DIR_HOME=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nexport TMUX_POWERLINE_DIR_HOME\n\n# shellcheck source=lib/headers.sh\nsource \"${TMUX_POWERLINE_DIR_HOME}/lib/headers.sh\"\n\nif ! powerline_muted \"$1\"; then\n\tprocess_settings\n\tcheck_arg_segment \"$1\"\n\tif [ \"$1\" == \"window-current-format\" ]; then\n\t\tprint_powerline_window_status_current_format\n\telif [ \"$1\" == \"window-format\" ]; then\n\t\tprint_powerline_window_status_format\n\telse\n\t\tprint_powerline_side \"$1\"\n\tfi\nfi\n\nexit 0\n"
        },
        {
          "name": "segments",
          "type": "tree",
          "content": null
        },
        {
          "name": "themes",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}