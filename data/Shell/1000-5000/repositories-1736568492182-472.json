{
  "metadata": {
    "timestamp": 1736568492182,
    "page": 472,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Axarva/dotfiles-2.0",
      "stars": 1774,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2021 Atharva Timsina\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.9716796875,
          "content": "<img src='/screenshots/yeeyee.jpg'>\n\n<h1 align=\"center\">‚ú® Widgets go brr! ‚ú®</h1>\n\n\n<p align=\"center\">\n  <a href=\"https://github.com/Axarva/dotfiles-2.0/stargazers\"><img src=\"https://img.shields.io/github/stars/Axarva/dotfiles-2.0?color=ffd5cd&style=for-the-badge&logo=starship\"></a>\n  <a href=\"https://github.com/Axarva/dotfiles-2.0/issues\"><img src=\"https://img.shields.io/github/issues/Axarva/dotfiles-2.0?color=d35d6e&style=for-the-badge&logo=codecov\"></a>\n  <a href=\"https://github.com/Axarva/dotfiles-2.0/network/members\"><img src=\"https://img.shields.io/github/forks/Axarva/dotfiles-2.0?color=84afdb&style=for-the-badge&logo=jfrog-bintray\"></a>\n  <a href=\"https://github.com/Axarva/dotfiles-2.0/blob/main/LICENSE\"><img src=\"https://img.shields.io/badge/license-MIT-orange.svg?color=90c861&style=for-the-badge&logo=mitsubishi\"></a>\n</p>\n\n## ~~A Note:~~ I'm back.\n\n## Table of Contents\n\n- [About ‚ÅâÔ∏è](#about)\n- [Gallery üì∑](#gal)\n- [Workflow üñ®Ô∏è](#workflow)\n- [Keybinds ‚úçÔ∏è](#keybinds)\n- [Installation ü§µ‚Äç](#inst)\n  - [Arch Install üåá](#arch)\n  - [Other Install üöÇ](#other)\n- [Dependencies üìä](#deps)\n- [Troubleshooting üî´](#trouble)\n\n<a id=\"about\"></a>\n\n## Starring:\n\n\n<img src=\"/screenshots/EwwLogo.png\" alt=\"eww\" align=\"right\" height=\"180vh\">\n\n- **Note:** Check out the `modified` branch for a newer setup. Hope you like it!\n- **xmonad** ‚öΩ \n- **eww** (Very wacky)\n- **firefox** ü¶ä\n- **rofi** üíà\n- **tint2 ([This](https://github.com/Axarva/tint2-1) fork is the only supported fork.)** üç´\n- **Inhibitors** üëÅÔ∏è (Inhibitors are cool stuff that prevent auto screen lock when you're watching a video or something)\n- **Healthy stuff** ‚ù§Ô∏è (Yeah, you get notifications to fix your posture and take a break)\n- *Insert more stuff here*\n\nHello! Thank you for dropping by! üëã\n\nThese are my xmonad configurations, and they go brr! üöÄ (Let's stop that there).\n\nIf you're here, I suppose you want to be cloning this configuration, for which look at the Installation Section below. üëá \n\nEven if you're not, just look through the gallery:\n\n\n\n<a id=\"gal\"></a>\n<img src='/screenshots/sidebar.png'>\n<img src='/screenshots/firefox.png'>\n<img src='/screenshots/center.png'>\n\n<a id=\"workflow\"></a>\n\n## Workflow üñ®Ô∏è\nWorkflow GIF: (This is a short one, for more goodies look at the links below)\n\n(Also, compression made it look kinda bad, but I think it shows what it needs to)\n\n\n<p align=\"center\">\n  <img src=\"https://github.com/Axarva/gifs/blob/main/workflow.gif\">\n</p>\n\n[Workflow Video by SavvyNik](https://www.youtube.com/watch?v=rMoUCnqhYfs) aka [@SavvyNik](https://github.com/SavvyNik)\n\n\n[Workflow Video by Guilherme Moreno](https://www.youtube.com/watch?v=im9QKZSMUFQ) aka [@morenoled](https://github.com/morenoled)\n\n<a id=\"keybinds\"></a>\n## Keybinds ‚úçÔ∏è\n\nThese are the basic keybinds. Read through the `xmonad/xmonad.hs` file for more keybinds like increasing gaps and restoring gaps.\n\n|        Keybind         |                 Function                 |\n| ---------------------- | ---------------------------------------- |\n| `Win + Shift + Enter`  | Launch terminal (alacritty)              |\n| `Win + Shift + C`      | Close window                             |\n| `Win + O`              | Open rofi menu                           |\n| `Win + Shift + Q`      | Open rofi powermenu                      |\n| `Win + S`              | Open sidebar                             |\n| `Win + Shift + S`      | Close sidebar                            |\n| `Win + P`              | Open dashboard                           |\n| `Win + Shift + P`      | Close dashboard                          |\n| `Win + B`              | Toggle the main bars                     |\n| `Win + Z`              | Activate inhibitor (Stops autolocking)   |\n| `Win + Shift + Z`      | Dectivate inhibitor (Enables autolocking)|\n| `Win + Ctrl + G`       | Toggle gaps (toggle to get screen space) |\n| `Win + J`              | Navigate through windows                 |\n| `Win + K`              | Navigate through windows                 |\n| `Win + Space`          | Switch through layouts                   |\n| `Win + T`              | Make a floating window tiled             |\n\nNote: `Toggling` means to enable if inactive or to disable if active.\n\n\nNote: `Win` refers to the `Super` key.\n\n\n<a id=\"inst\"></a>\n## Installation ü§µ‚Äç\nAlright, let's get to the main stuff.\n\n\nIf you feel like you don't want to read so much, here's a video, courtesy of [@SavvyNik](https://github.com/SavvyNik)!\n\n[Nik's Installation Video for Arch Linux](https://www.youtube.com/watch?v=a8YJBGk8H4Q)\n\n\n\nNote: Whatever method you follow, if you want the weather and quote features to work as well, you need to modify your crontab as follows: <br>\n(To edit your crontab, `crontab -e` as a normal user.)\n\n\n\n```\n0,30 * * * * /home/{Your-username}/.config/eww/scripts/getweather\n@reboot /home/{Your-username}/.config/eww/scripts/getquotes\n```\n\n\nAnd please follow these next few steps as well:\n- Add `export PATH=\"$PATH:$HOME/bin\"` to your `~/.bashrc` file (or a shell of your choice).\n- Edit the script in `~/.config/eww/scripts/getweather`. Further steps are specified within that file.\n- Open `tint2conf` and edit the theme `panellauncher.tint2rc`. In there, head over to the `Launcher` tab and set the icon theme as candy-icons.\n- Get the Museo Sans 300 (ONLY THE 300 WEIGHT PLEASE, OTHERS LOOK WEIRD) font from Adobe itself or any other sources, put the `.ttf` or `.otf` file in your `~/.local/share/fonts`\n  - Run `fc-cache -f` after getting the font.\n- If the widgets don't work properly, go to [the main repository](https://github.com/elkowar/eww) and install `eww` as documented. Make sure the resulting binary is stored in `~/bin`.\n- Issue `xmonad --recompile` after you complete all the steps, and relogin to xmonad.\n- For the profile picture to load, it needs to have the full path in `eww.scss`. Open the file, search for the string containing `~/.config`(line number 329 to be exact) and edit it to point it to your image. Full path required. For example: `$HOME/path/to/image.png`.\n\n\n\n\n<a id=\"arch\"></a>\n\n### For Arch Linux and it's derivatives (make sure you have git installed): üåá\n\nTHIS MAKES BACKUPS TOO, SO YEAH. JUST DO IT. DO IT!\n\n\n```bash\n$ git clone https://github.com/Axarva/dotfiles-2.0.git\n$ cd ./dotfiles-2.0\n$ chmod +x ./install-on-arch.sh\n$ ./install-on-arch.sh\n$ sudo ln -s /usr/lib/libasan.so.8 /usr/lib/libasan.so.6 #This is here for tint2 to work.\n```\n\n\n\nThat'll do the basic stuff. For a complete copy, look at the list of dependencies below.\n\nAND DON'T FORGET TO READ WHAT'S WRITTEN AT THE END OF THE MAIN INSTALLATION SECTION [UP THERE](#inst). Further steps are specified there. (Yes. Absolutely needs to be shouty capitals.)\n\n\n\n<a id=\"other\"></a>\n\n### For Gentoo Linux users (And basically any other distro): üöÇ\nI'm sorry I couldn't do it. You'll have to manually install dependencies.\n\n**Piece of good advice**:  If you use `systemd`, go ahead and ignore this, and skip to [Going ahead: Others Edition](#ga-other).\n\n\nIn case you use something else, I recommend opening this repository in a text editor after you clone it, and global-replace the stuff that suits your system. After that, go ahead with [Going ahead: Others Edition](#ga-other).\n\n<a id=\"ga-other\"></a>\n\n#### Going Ahead: Others Edition\nYou need to install the dependencies yourself, this script will add the fonts and the configs (and back up existing ones too):\n\n\n```bash\n$ git clone https://github.com/Axarva/dotfiles-2.0.git\n$ cd ./dotfiles-2.0\n$ chmod +x ./install-on-gentoo.sh\n$ ./install-on-gentoo.sh\n```\n\nAND DON'T FORGET TO READ WHAT'S WRITTEN AT THE END OF THE MAIN INSTALLATION SECTION [UP THERE](#inst). Further steps are specified there. (Yes. Absolutely needs to be shouty capitals.)\n<a id=\"deps\"></a>\n## Dependencies üìä\nHere you go. Make sure you have em all.\n\n\n-    xmonad\n-    [eww](https://github.com/elkowar/eww) (ElKowar's Wacky Widgets, binary included, but I encourage you to build it yourself and put the binary in your ~/bin).\n-    firefox (Not exactly a dependency)\n-    rofi version 1.7.0 (Configs originally come from @adi1090x, been edited by me).\n-    tint2 (Please use [this fork](https://github.com/Axarva/tint2-1) ONLY, or issues will occur. Binaries provided already.)\n-    acpi\n-    Museo Sans Font by Adobe (I think it needs some sort of acount, but get it) Or just search for it on the web and get it somewhere\n-    [Nerd Font](https://github.com/ryanoasis/nerd-fonts/tree/master/patched-fonts/Iosevka) (I include some, but you can use any of your choice.)\n-    playerctl\n-    [brightnessctl](https://github.com/Hummer12007/brightnessctl)\n-    [candy-icons](https://github.com/EliverLara/candy-icons)\n-    dunst\n-    Spotify (for cover art, else edit the eww/scripts/getart script accordingly)\n-    An OpenWeatherMap Account, (view eww/scripts/getweather script for more info)\n-    feh\n-    NetworkManager\n-    greenclip\n-    alacritty\n-    picom (fork of ibhagwan or jonaburg)\n-    jq: Command line json parser (Needed for widgets)\n-    maim and xclip for screenshots\n-    mpv for low-battery sound playing (Not exactly necessary, you'll get the notification, but the sound depends on it.)\n-    *Might need to be updated, so please tell me*\n\n<a id=\"trouble\"></a>\n## Troubleshooting üî´\nAnd here we are:\n\n\n1. If xmonad doesn't build make sure you have the `xmonad-contrib` package.\n2. Bar looks weird: Try editing it a bit using `~/bin/tint2conf`. \n3. Alacritty configs are faulty: I'm not sure about this one, works perfectly fine for me. \n4. Widgets positioning weird: I hardcoded them for a 1366x768 screen, will create others if I can\n5. Fonts: GET THOSE FONTS!\n6. **MAKE SURE YOUR `~/bin` DIRECTORY IS IN YOUR PATH, OR NOTHING WILL WORK!** (Yes. Absolutely needs to be shouty capitals.)\n7. For instructions regarding use on VirtualMachine, please do check the `VM` folder of this repository.\n8. Bars not showing on Arch Linux: `sudo ln -s /usr/lib/libasan.so.8 /usr/lib/libasan.so.6`\n9. The workspace indicator bar issue has been solved through the binaries in my fork.\n10. Anything else? Open up an issue.\n   \n   \n<h1 align=\"center\">üåü Good Luck and Cheers! üåü</h1>\n"
        },
        {
          "name": "VM",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-on-arch-arcris.sh",
          "type": "blob",
          "size": 5.7978515625,
          "content": "#!/bin/env bash\nset -e\nsudo pacman -S --noconfirm --needed base-devel wget git\n\nsudo pacman -S --noconfirm --needed rofi nitrogen xorg xorg-xinit xorg-xinput xmonad\n\n# install fonts, window manager and terminal\nmkdir -p ~/.local/share/fonts\nmkdir -p ~/.srcs\n\n# cd ~/.srcs \n\n# git clone $CLIENT/$FONT \ncp -r ./fonts/* ~/.local/share/fonts/\nfc-cache -f\nclear \n\n# git clone $CLIENT/$WM \n# cd $WM/ && sudo make clean install\n\n# cd ~/.srcs/\n\n# git clone $CLIENT/$EMU \n# cd $EMU/ && sudo make clean install \n\n# cd ~/.srcs/\n\n# git clone $CLIENT/$EXT\n# cd $EXT/ && sudo make clean install\n\n# install paru\n# echo \"Please replace libxft with libxft-bgra in next install\"\n\ngit clone https://aur.archlinux.org/paru.git ~/.srcs/paru\ncd ~/.srcs/paru/ && makepkg -si\n\nparu -S picom-jonaburg-git acpi candy-icons-git wmctrl alacritty playerctl dunst xmonad-contrib jq xclip maim rofi-greenclip lightdm-webkit-theme-aether lightdm-webkit2-greeter\n#install custom picom config file\nmkdir -p ~/.config/\n# cd .config/\n# git clone https://gist.github.com/f70dea1449cfae856d42b771912985f9.git ./picom \n    if [ -d ~/.config/rofi ]; then\n        echo \"Rofi configs detected, backing up...\"\n        mkdir ~/.config/rofi.old && mv ~/.config/rofi/* ~/.config/rofi.old/\n        cp -r ./config/rofi/* ~/.config/rofi;\n    else\n        echo \"Installing rofi configs...\"\n        mkdir ~/.config/rofi && cp -r ./config/rofi/* ~/.config/rofi;\n    fi\n\n\n      cmd=(dialog --keep-tite --backtitle \"select your screen size\" \\\n            --no-collapse --cr-wrap --column-separator \"|\" --no-tags --ok-label '< Seleccionar >' --nocancel --menu \"Selecciona una opci√≥n para GNOME \\n\\n\" 10 60 19)\n\n            options=(1 \"1366x768\"\n                     2 \"1920x1080\"\n                     3 \"2560x1440\")\n\n            choices=$(\"${cmd[@]}\" \"${options[@]}\" 2>&1 >/dev/tty)\n\n            for choice in $choices\n            do\n                case $choice in\n                1) EWW_DIR='config/eww-1366'\n                   ;;\n                2) EWW_DIR='config/eww-1920'\n                   ;;\n                3) EWW_DIR='config/eww-2560'\n                   ;;\n                esac\n            done\n    if [ -d ~/.config/eww ]; then\n        echo \"Eww configs detected, backing up...\"\n        mkdir ~/.config/eww.old && mv ~/.config/eww/* ~/.config/eww.old/\n        cp -r ./$EWW_DIR/* ~/.config/eww;\n    else\n        echo \"Installing eww configs...\"\n        mkdir ~/.config/eww && cp -r ./$EWW_DIR/* ~/.config/eww;\n    fi\n    if [ -f ~/.config/picom.conf ]; then\n        echo \"Picom configs detected, backing up...\"\n        cp ~/.config/picom.conf ~/.config/picom.conf.old;\n        cp ./config/picom.conf ~/.config/picom.conf;\n    else\n        echo \"Installing picom configs...\"\n         cp ./config/picom.conf ~/.config/picom.conf;\n    fi\n    if [ -f ~/.config/alacritty.yml ]; then\n        echo \"Alacritty configs detected, backing up...\"\n        cp ~/.config/alacritty.yml ~/.config/alacritty.yml.old;\n        cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    else\n        echo \"Installing alacritty configs...\"\n         cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    fi\n    if [ -d ~/.config/dunst ]; then\n        echo \"Dunst configs detected, backing up...\"\n        mkdir ~/.config/dunst.old && mv ~/.config/dunst/* ~/.config/dunst.old/\n        cp -r ./config/dunst/* ~/.config/dunst;\n    else\n        echo \"Installing dunst configs...\"\n        mkdir ~/.config/dunst && cp -r ./config/dunst/* ~/.config/dunst;\n    fi\n    if [ -d ~/wallpapers ]; then\n        echo \"Adding wallpaper to ~/wallpapers...\"\n        cp ./wallpapers/yosemite-lowpoly.jpg ~/wallpapers/;\n    else\n        echo \"Installing wallpaper...\"\n        mkdir ~/wallpapers && cp -r ./wallpapers/* ~/wallpapers/;\n    fi\n    if [ -d ~/.config/tint2 ]; then\n        echo \"Tint2 configs detected, backing up...\"\n        mkdir ~/.config/tint2.old && mv ~/.config/tint2/* ~/.config/tint2.old/\n        cp -r ./config/tint2/* ~/.config/tint2;\n    else\n        echo \"Installing tint2 configs...\"\n        mkdir ~/.config/tint2 && cp -r ./config/tint2/* ~/.config/tint2;\n    fi\n    if [ -d ~/.xmonad ]; then\n        echo \"XMonad configs detected, backing up...\"\n        mkdir ~/.xmonad.old && mv ~/.xmonad/* ~/.xmonad.old/\n        cp -r ./xmonad/* ~/.xmonad/;\n    else\n        echo \"Installing xmonad configs...\"\n        mkdir ~/.xmonad && cp -r ./xmonad/* ~/.xmonad;\n    fi\n    if [ -d ~/bin ]; then\n        echo \"~/bin detected, backing up...\"\n        mkdir ~/bin.old && mv ~/bin/* ~/bin.old/\n        cp -r ./bin/* ~/bin;\n\tclear\n    else\n        echo \"Installing bin scripts...\"\n        mkdir ~/bin && cp -r ./bin/* ~/bin/;\n\tclear\n        echo \"Please add: export PATH='\\$PATH:$HOME/bin' to your .bashrc or whatever shell you use.\"\n    fi\n    \n\n# done \necho \"PLEASE MAKE .xinitrc TO LAUNCH, or just use your Display Manager (ie. lightdm or sddm, etc.)\" | tee ~/Note.txt\nprintf \"\\n\" >> ~/Note.txt\necho \"Please add: export PATH='\\$PATH:$HOME/bin' to your .bashrc if not done already.\" | tee -a ~/Note.txt\necho \"For startpage, copy the startpage directory into wherever you want, and set it as new tab in firefox settings.\" | tee -a ~/Note.txt\necho \"For more info on startpage (Which is a fork of Prismatic Night), visit https://github.com/dbuxy218/Prismatic-Night#Firefoxtheme\" | tee -a ~/Note.txt\necho \"ALL DONE! Reboot for all changes to take place!\" | tee -a ~/Note.txt\necho \"Open issues on github or ask me on discord or whatever if you face issues.\" | tee -a ~/Note.txt\necho \"Install Museo Sans as well. From Adobe I believe.\" | tee -a ~/Note.txt\necho \"If the bar doesn't work, use tint2conf and set stuff up, if you're hopelessly lost, open an issue.\" | tee -a ~/Note.txt\necho \"These instructions have been saved to ~/Note.txt. Make sure to go through them.\"\necho \"For instructions regarding usage on VirtualMachines, please refer to the VM folder of the repo.\" | tee -a ~/Note.txt\nsleep 10\nxmonad --recompile\n"
        },
        {
          "name": "install-on-arch.sh",
          "type": "blob",
          "size": 7.55859375,
          "content": "#!/bin/env bash\nset -e\n\necho \"Welcome!\" && sleep 2\n\n#Default vars\nHELPER=\"paru\"\n\n# does full system update\necho \"Doing a system update, cause stuff may break if it's not the latest version...\"\nsudo pacman --noconfirm -Syu\n\necho \"###########################################################################\"\necho \"Will do stuff, get ready\"\necho \"###########################################################################\"\n\n# install base-devel if not installed\nsudo pacman -S --noconfirm --needed base-devel wget git\n\n# choose video driver\necho \"1) xf86-video-intel \t2) xf86-video-amdgpu 3) nvidia 4) Skip\"\nread -r -p \"Choose you video card driver(default 1)(will not re-install): \" vid\n\ncase $vid in \n[1])\n\tDRI='xf86-video-intel'\n\t;;\n\n[2])\n\tDRI='xf86-video-amdgpu'\n\t;;\n\n[3])\n    DRI='nvidia nvidia-settings nvidia-utils'\n    ;;\n\n[4])\n\tDRI=\"\"\n\t;;\n[*])\n\tDRI='xf86-video-intel'\n\t;;\nesac\n\n# install xorg if not installed\nsudo pacman -S --noconfirm --needed rofi feh xorg xorg-xinit xorg-xinput $DRI xmonad\n\n# install fonts\nmkdir -p ~/.local/share/fonts\nmkdir -p ~/.srcs\n\ncp -r ./fonts/* ~/.local/share/fonts/\nfc-cache -f\nclear \n\necho \"We need an AUR helper. It is essential. 1) paru       2) yay\"\nread -r -p \"What is the AUR helper of your choice? (Default is paru): \" num\n\nif [ $num -eq 2 ]\nthen\n    HELPER=\"yay\"\nfi\n\nif ! command -v $HELPER &> /dev/null\nthen\n    echo \"It seems that you don't have $HELPER installed, I'll install that for you before continuing.\"\n\tgit clone https://aur.archlinux.org/$HELPER.git ~/.srcs/$HELPER\n\t(cd ~/.srcs/$HELPER/ && makepkg -si )\nfi\n\ngit clone https://github.com/jonaburg/picom ~/.srcs/picom\n(cd ~/.srcs/picom/ && makepkg -si )\n\n$HELPER -S \\\n\t   acpi              \\\n\t   candy-icons-git   \\\n\t   wmctrl            \\\n\t   alacritty         \\\n\t   playerctl         \\\n\t   dunst             \\\n\t   xmonad-contrib    \\\n\t   jq                \\\n\t   xclip             \\\n\t   maim              \\\n\t   rofi-greenclip    \\\n\t   xautolock         \\\n\t   betterlockscreen\n\n\n\n\n# Hack to make tint2 work for now.\nif ! [ -f /usr/lib/libasan.so.6 ]; then\n    sudo ln -s /usr/lib/libasan.so.8 /usr/lib/libasan.so.6 \nfi\n\n\n#install custom picom config file \nmkdir -p ~/.config/\n# cd .config/\n# git clone https://gist.github.com/f70dea1449cfae856d42b771912985f9.git ./picom \n    if [ -d ~/.config/rofi ]; then\n        echo \"Rofi configs detected, backing up...\"\n        mkdir ~/.config/rofi.old && mv ~/.config/rofi/* ~/.config/rofi.old/\n        cp -r ./config/rofi/* ~/.config/rofi;\n    else\n        echo \"Installing rofi configs...\"\n        mkdir ~/.config/rofi && cp -r ./config/rofi/* ~/.config/rofi;\n    fi\n    sleep 5\n    echo \"1)1366 x 768       2)1920 x 1080       3)2560 x 1440\"\n    read -r -p \"Choose your screen resolution: \" res\n    case $res in \n    [1])\n\tEWW_DIR='config/eww-1366'\n\t;;\n    [2])\n\tEWW_DIR='config/eww-1920'\n\t;;\n    [3])\n  EWW_DIR='config/eww-2560'\n  ;;\n    [*])\n\tEWW_DIR='config/eww-1366'\n\t;;\n    esac\n    if [ -d ~/.config/eww ]; then\n        echo \"Eww configs detected, backing up...\"\n        mkdir ~/.config/eww.old && mv ~/.config/eww/* ~/.config/eww.old/\n        cp -r ./$EWW_DIR/* ~/.config/eww;\n    else\n        echo \"Installing eww configs...\"\n        mkdir ~/.config/eww && cp -r ./$EWW_DIR/* ~/.config/eww;\n    fi\n    if [ -f ~/.config/picom.conf ]; then\n        echo \"Picom configs detected, backing up...\"\n        cp ~/.config/picom.conf ~/.config/picom.conf.old;\n        cp ./config/picom.conf ~/.config/picom.conf;\n    else\n        echo \"Installing picom configs...\"\n         cp ./config/picom.conf ~/.config/picom.conf;\n    fi\n    if [ -f ~/.config/alacritty.yml ]; then\n        echo \"Alacritty configs detected, backing up...\"\n        cp ~/.config/alacritty.yml ~/.config/alacritty.yml.old;\n        cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    else\n        echo \"Installing alacritty configs...\"\n         cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    fi\n    if [ -d ~/.config/dunst ]; then\n        echo \"Dunst configs detected, backing up...\"\n        mkdir ~/.config/dunst.old && mv ~/.config/dunst/* ~/.config/dunst.old/\n        cp -r ./config/dunst/* ~/.config/dunst;\n    else\n        echo \"Installing dunst configs...\"\n        mkdir ~/.config/dunst && cp -r ./config/dunst/* ~/.config/dunst;\n    fi\n    if [ -d ~/wallpapers ]; then\n        echo \"Adding wallpaper to ~/wallpapers...\"\n        cp ./wallpapers/yosemite-lowpoly.jpg ~/wallpapers/;\n    else\n        echo \"Installing wallpaper...\"\n        mkdir ~/wallpapers && cp -r ./wallpapers/* ~/wallpapers/;\n    fi\n    if [ -d ~/.config/tint2 ]; then\n        echo \"Tint2 configs detected, backing up...\"\n        mkdir ~/.config/tint2.old && mv ~/.config/tint2/* ~/.config/tint2.old/\n        cp -r ./config/tint2/* ~/.config/tint2;\n    else\n        echo \"Installing tint2 configs...\"\n        mkdir ~/.config/tint2 && cp -r ./config/tint2/* ~/.config/tint2;\n    fi\n    if [ -d ~/.xmonad ]; then\n        echo \"XMonad configs detected, backing up...\"\n        mkdir ~/.xmonad.old && mv ~/.xmonad/* ~/.xmonad.old/\n        cp -r ./xmonad/* ~/.xmonad/;\n    else\n        echo \"Installing xmonad configs...\"\n        mkdir ~/.xmonad && cp -r ./xmonad/* ~/.xmonad;\n    fi\n    if [ -d ~/bin ]; then\n        echo \"~/bin detected, backing up...\"\n        mkdir ~/bin.old && mv ~/bin/* ~/bin.old/\n        cp -r ./bin/* ~/bin;\n\tclear\n    else\n        echo \"Installing bin scripts...\"\n        mkdir ~/bin && cp -r ./bin/* ~/bin/;\n\tclear\n        SHELLNAME=$(echo $SHELL | grep -o '[^/]*$')\n        case $SHELLNAME in\n            bash)\n                if [[ \":$PATH:\" == *\":$HOME/bin:\"* ]]; then\n                    echo \"Looks like $HOME/bin is not on your PATH, adding it now.\"\n                    echo \"export PATH=\\$PATH:\\$HOME/bin\" >> $HOME/.bashrc\n                else\n                    echo \"$HOME/bin is already in your PATH. Proceeding.\"\n                fi\n                ;;\n\n            zsh)\n                if [[ \":$PATH:\" == *\":$HOME/bin:\"* ]]; then\n                    echo \"Looks like $HOME/bin is not on your PATH, adding it now.\"\n                    echo \"export PATH=\\$PATH:\\$HOME/bin\" >> $HOME/.zshrc\n                else\n                    echo \"$HOME/bin is already in your PATH. Proceeding.\"\n                fi\n                ;;\n\n            fish)\n                echo \"I see you use fish. shahab96 likes your choice.\"\n                fish -c fish_add_path -P $HOME/bin\n                ;;\n\n            *)\n                echo \"Please add: export PATH='\\$PATH:$HOME/bin' to your .bashrc or whatever shell you use.\"\n                echo \"If you know how to add stuff to shells other than bash, zsh and fish please help out here!\"\n        esac\n    fi\n    \n\n# done \necho \"PLEASE MAKE .xinitrc TO LAUNCH, or just use your Display Manager (ie. lightdm or sddm, etc.)\" | tee ~/Note.txt\nprintf \"\\n\" >> ~/Note.txt\necho \"For startpage, copy the startpage directory into wherever you want, and set it as new tab in firefox settings.\" | tee -a ~/Note.txt\necho \"For more info on startpage (Which is a fork of Prismatic Night), visit https://github.com/dbuxy218/Prismatic-Night#Firefoxtheme\" | tee -a ~/Note.txt\necho \"ALL DONE! Reboot for all changes to take place!\" | tee -a ~/Note.txt\necho \"Open issues on github or ask me on discord or whatever if you face issues.\" | tee -a ~/Note.txt\necho \"Install Museo Sans as well. From Adobe I believe.\" | tee -a ~/Note.txt\necho \"If the bar doesn't work, use tint2conf and set stuff up, if you're hopelessly lost, open an issue.\" | tee -a ~/Note.txt\necho \"These instructions have been saved to ~/Note.txt. Make sure to go through them.\"\necho \"For instructions regarding usage on VirtualMachines, please refer to the VM folder of the repo.\" | tee -a ~/Note.txt\nsleep 5\nxmonad --recompile\n"
        },
        {
          "name": "install-on-gentoo.sh",
          "type": "blob",
          "size": 5.267578125,
          "content": "#!/bin/bash\nset -e\n\necho \"Welcome!\"\necho \"Warning! Have you installed the dependencies already? If not, please do so before continuing or stuff wont work!\"\necho \"Dependencies are mentioned in README. Here they are anyways:\"\necho \"1) xmonad (by portage)\"\necho \"2) acpi (by portage)\"\necho \"3) picom (ibhagwan) (https://github.com/ibhagwan/picom)\"\necho \"4) alacritty (by portage)\"\necho \"5) dunst (by portage)\"\necho \"6) rofi (v 1.6.0) (echo '=rofi-1.6.0 ~amd64' >> /etc/portage/package.accept_keywords && emerge rofi)\"\necho \"7) candy-icon theme (https://github.com/EliverLara/candy-icons)\"\necho \"8) NetworkManager (by portage)\"\necho \"9) feh (by portage)\"\necho \"That should be the basics\"\nread -r -p \"Continue? [yes/no]: \" conti\n\ncase $conti in\n[yY][eE][sS]|[yY])  \n    mkdir -p ~/.local/share/fonts\n    cp -r ./fonts/* ~/.local/share/fonts/\n    fc-cache\n    clear \n    if [ -d ~/.config/rofi ]; then\n        echo \"Rofi configs detected, backing up...\"\n        mkdir -p ~/.config/rofi.old && mv ~/.config/rofi/* ~/.config/rofi.old/\n        cp -r ./config/rofi/* ~/.config/rofi;\n    else\n        echo \"Installing rofi configs...\"\n        mkdir ~/.config/rofi && cp -r ./config/rofi/* ~/.config/rofi;\n    fi\n    sleep 5\n    echo \"1)1366 x 768       2)1920 x 1080       3)2560 x 1440\"\n    read -r -p \"Choose your screen resolution: \" res\n    case $res in\n    [1])\n        EWW_DIR='config/eww-1366'\n        ;;\n    [2])\n        EWW_DIR='config/eww-1920'\n        ;;\n    [3])\n        EWW_DIR='config/eww-2560'\n        ;;\n    [*])\n        EWW_DIR='config/eww-1366'\n        ;;\n    esac\n    if [ -d ~/.config/eww ]; then\n        echo \"Eww configs detected, backing up...\"\n        mkdir ~/.config/eww.old && mv ~/.config/eww/* ~/.config/eww.old/\n        cp -r ./$EWW_DIR/* ~/.config/eww;\n    else\n        echo \"Installing eww configs...\"\n        mkdir ~/.config/eww && cp -r ./$EWW_DIR/* ~/.config/eww;\n    fi\n    if [ -f ~/.config/picom.conf ]; then\n        echo \"Picom configs detected, backing up...\"\n        cp ~/.config/picom.conf ~/.config/picom.conf.old;\n        cp ./config/picom.conf ~/.config/picom.conf;\n    else\n        echo \"Installing picom configs...\"\n         cp ./config/picom.conf ~/.config/picom.conf;\n    fi\n    if [ -f ~/.config/alacritty.yml ]; then\n        echo \"Alacritty configs detected, backing up...\"\n        cp ~/.config/alacritty.yml ~/.config/alacritty.yml.old;\n        cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    else\n        echo \"Installing alacritty configs...\"\n         cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    fi\n    if [ -d ~/.config/dunst ]; then\n        echo \"Dunst configs detected, backing up...\"\n        mkdir ~/.config/dunst.old && mv ~/.config/dunst/* ~/.config/dunst.old/\n        cp -r ./config/dunst/* ~/.config/dunst;\n    else\n        echo \"Installing dunst configs...\"\n        mkdir ~/.config/dunst && cp -r ./config/dunst/* ~/.config/dunst;\n    fi\n    if [ -d ~/wallpapers ]; then\n        echo \"Adding wallpaper to ~/wallpapers...\"\n        cp ./wallpapers/yosemite-lowpoly.jpg ~/wallpapers/;\n    else\n        echo \"Installing wallpaper...\"\n        mkdir ~/wallpapers && cp -r ./wallpapers/* ~/wallpapers/;\n    fi\n    if [ -d ~/.config/tint2 ]; then\n        echo \"Tint2 configs detected, backing up...\"\n        mkdir ~/.config/tint2.old && mv ~/.config/tint2/* ~/.config/tint2.old/\n        cp -r ./config/tint2/* ~/.config/tint2;\n    else\n        echo \"Installing tint2 configs...\"\n        mkdir ~/.config/tint2 && cp -r ./config/tint2/* ~/.config/tint2;\n    fi\n    if [ -d ~/.xmonad ]; then\n        echo \"XMonad configs detected, backing up...\"\n        mkdir ~/.xmonad.old && mv ~/.xmonad/* ~/.xmonad.old/\n        cp -r ./xmonad/* ~/.xmonad/;\n    else\n        echo \"Installing xmonad configs...\"\n        mkdir ~/.xmonad && cp -r ./xmonad/* ~/.xmonad;\n    fi\n    if [ -d ~/bin ]; then\n        echo \"~/bin detected, backing up...\"\n        mkdir ~/bin.old && mv ~/bin/* ~/bin.old/\n        cp -r ./bin/* ~/bin;\n    else\n        echo \"Installing bin scripts...\"\n        mkdir ~/bin && cp -r ./bin/* ~/bin/;\n    fi\n    printf \"\\n\"\n    echo \"PLEASE MAKE .xinitrc TO LAUNCH, or just use your Display Manager (ie. lightdm or sddm, etc.)\" | tee ~/Note.txt\n    printf \"\\n\" | tee -a ~/Note.txt\n    echo \"Please add: export PATH='\\$PATH:$HOME/bin' to your .bashrc if not done already.\" | tee -a ~/Note.txt\n    echo \"For startpage, copy the startpage directory into wherever you want, and set it as new tab in firefox settings.\" | tee -a ~/Note.txt\n    echo \"For more info on startpage (Which is a fork of Prismatic Night), visit https://github.com/dbuxy218/Prismatic-Night#Firefoxtheme\" | tee -a ~/Note.txt\n    echo \"Reboot for all changes to take place!\" | tee -a ~/Note.txt\n    echo \"Open issues on github or ask me on discord or whatever if you face issues.\" | tee -a ~/Note.txt\n    echo \"Install Museo Sans as well. From Adobe I believe.\" | tee -a ~/Note.txt\n    echo \"These instructions have been saved to ~/Note.txt. Make sure to go through them.\"\n    echo \"For instructions regarding usage on VirtualMachines, please refer to the VM folder of this repository.\" | tee -a ~/Note.txt\n    sleep 5\n    xmonad --recompile\n\t;;\n\n\n[nN][oO]|[nN])\n    echo \"Quitting. INSTALL THOSE DEPENDENCIES. YOU USE GENTOO. YOU DO KNOW HOW TO DO IT.\"\n    ;;\n\n[*])\n    echo \"Quitting. INSTALL THOSE DEPENDENCIES. YOU USE GENTOO. YOU DO KNOW HOW TO DO IT.\"\n\t;;\nesac\n"
        },
        {
          "name": "install-on-ubuntu.sh",
          "type": "blob",
          "size": 7.181640625,
          "content": "#!/bin/bash\n\nset -e\n\necho \"Welcome!\" && sleep 2\n\necho \"Doing a system update and adding needed repo, cause stuff may break if it's not the latest version...\"\nsudo add-apt-repository ppa:aslatter/ppa\nsudo apt update -y && sudo apt upgrade -y\n\necho \"###########################################################################\"\necho \"Will do stuff, get ready\"\necho \"###########################################################################\"\n\nsudo apt install build-essential wget git meson cmake pkgconf libev-dev\n\necho \"1) xserver-xorg-video-intel \t2) xserver-xorg-video-amdgpu 3) nvidia 4) Skip\"\nread -r -p \"Choose you video card driver(default 1)(will not re-install): \" vid\n\ncase $vid in\n[1])\n  DRI='xserver-xorg-video-intel'\n  ;;\n\n[2])\n  DRI='xserver-xorg-video-amdgpu'\n  ;;\n[3])\n  DRI='nvidia-driver-515 nvidia-dkms-515'\n  ;;\n\n[4])\n  DRI=\"\"\n  ;;\n[*])\n  DRI='xserver-xorg-video-intel'\n  ;;\nesac\n\nsudo apt install -y rofi feh xorg xinit xinput $DRI xmonad\n\nmkdir -p ~/.local/share/fonts\nmkdir -p ~/.srcs\n\ncp -r ./fonts/* ~/.local/share/fonts/\nfc-cache -f\nclear\n\nsudo apt install -y picom acpi alacritty wmctrl playerctl dunst libghc-xmonad-contrib-doc jq xclip maim xautolock i3lock imagemagick\n\nwget https://raw.githubusercontent.com/mildmelon/betterlockscreen-ubuntu-installer/master/betterlockscreen.sh -O lock.sh && chmod 777 ./lock.sh\n\nsudo wget https://github.com/erebe/greenclip/releases/download/v4.2/greenclip && chmod 777 greenclip && sudo cp greenclip /bin/\n\nwget https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip -O candy.zip && unzip candy.zip && sudo mv -v candy-icons-master candy-icons && sudo cp -r candy-icons /usr/share/icons/\n\nif ! [ -f /usr/lib/libasan.so.6 ]; then\n    sudo ln -s /usr/lib/libasan.so.8 /usr/lib/libasan.so.6\nfi\n\nmkdir -p ~/.config/\n# cd .config/\n# git clone https://gist.github.com/f70dea1449cfae856d42b771912985f9.git ./picom \n    if [ -d ~/.config/rofi ]; then\n        echo \"Rofi configs detected, backing up...\"\n        mkdir ~/.config/rofi.old && mv ~/.config/rofi/* ~/.config/rofi.old/\n        cp -r ./config/rofi/* ~/.config/rofi;\n    else\n        echo \"Installing rofi configs...\"\n        mkdir ~/.config/rofi && cp -r ./config/rofi/* ~/.config/rofi;\n    fi\n    sleep 5\n    echo \"1)1366 x 768       2)1920 x 1080       3)2560 x 1440\"\n    read -r -p \"Choose your screen resolution: \" res\n    case $res in \n    [1])\n\tEWW_DIR='config/eww-1366'\n\t;;\n    [2])\n\tEWW_DIR='config/eww-1920'\n\t;;\n    [3])\n  EWW_DIR='config/eww-2560'\n  ;;\n    [*])\n\tEWW_DIR='config/eww-1366'\n\t;;\n    esac\n    if [ -d ~/.config/eww ]; then\n        echo \"Eww configs detected, backing up...\"\n        mkdir ~/.config/eww.old && mv ~/.config/eww/* ~/.config/eww.old/\n        cp -r ./$EWW_DIR/* ~/.config/eww;\n    else\n        echo \"Installing eww configs...\"\n        mkdir ~/.config/eww && cp -r ./$EWW_DIR/* ~/.config/eww;\n    fi\n    if [ -f ~/.config/picom.conf ]; then\n        echo \"Picom configs detected, backing up...\"\n        cp ~/.config/picom.conf ~/.config/picom.conf.old;\n        cp ./config/picom.conf ~/.config/picom.conf;\n    else\n        echo \"Installing picom configs...\"\n         cp ./config/picom.conf ~/.config/picom.conf;\n    fi\n    if [ -f ~/.config/alacritty.yml ]; then\n        echo \"Alacritty configs detected, backing up...\"\n        cp ~/.config/alacritty.yml ~/.config/alacritty.yml.old;\n        cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    else\n        echo \"Installing alacritty configs...\"\n         cp ./config/alacritty.yml ~/.config/alacritty.yml;\n    fi\n    if [ -d ~/.config/dunst ]; then\n        echo \"Dunst configs detected, backing up...\"\n        mkdir ~/.config/dunst.old && mv ~/.config/dunst/* ~/.config/dunst.old/\n        cp -r ./config/dunst/* ~/.config/dunst;\n    else\n        echo \"Installing dunst configs...\"\n        mkdir ~/.config/dunst && cp -r ./config/dunst/* ~/.config/dunst;\n    fi\n    if [ -d ~/wallpapers ]; then\n        echo \"Adding wallpaper to ~/wallpapers...\"\n        cp ./wallpapers/yosemite-lowpoly.jpg ~/wallpapers/;\n    else\n        echo \"Installing wallpaper...\"\n        mkdir ~/wallpapers && cp -r ./wallpapers/* ~/wallpapers/;\n    fi\n    if [ -d ~/.config/tint2 ]; then\n        echo \"Tint2 configs detected, backing up...\"\n        mkdir ~/.config/tint2.old && mv ~/.config/tint2/* ~/.config/tint2.old/\n        cp -r ./config/tint2/* ~/.config/tint2;\n    else\n        echo \"Installing tint2 configs...\"\n        mkdir ~/.config/tint2 && cp -r ./config/tint2/* ~/.config/tint2;\n    fi\n    if [ -d ~/.xmonad ]; then\n        echo \"XMonad configs detected, backing up...\"\n        mkdir ~/.xmonad.old && mv ~/.xmonad/* ~/.xmonad.old/\n        cp -r ./xmonad/* ~/.xmonad/;\n    else\n        echo \"Installing xmonad configs...\"\n        mkdir ~/.xmonad && cp -r ./xmonad/* ~/.xmonad;\n    fi\n    if [ -d ~/bin ]; then\n        echo \"~/bin detected, backing up...\"\n        mkdir ~/bin.old && mv ~/bin/* ~/bin.old/\n        cp -r ./bin/* ~/bin;\n\tclear\n    else\n        echo \"Installing bin scripts...\"\n        mkdir ~/bin && cp -r ./bin/* ~/bin/;\n\tclear\n        SHELLNAME=$(echo $SHELL | grep -o '[^/]*$')\n        case $SHELLNAME in\n            bash)\n                if [[ \":$PATH:\" == *\":$HOME/bin:\"* ]]; then\n                    echo \"Looks like $HOME/bin is not on your PATH, adding it now.\"\n                    echo \"export PATH=\\$PATH:\\$HOME/bin\" >> $HOME/.bashrc\n                else\n                    echo \"$HOME/bin is already in your PATH. Proceeding.\"\n                fi\n                ;;\n\n            zsh)\n                if [[ \":$PATH:\" == *\":$HOME/bin:\"* ]]; then\n                    echo \"Looks like $HOME/bin is not on your PATH, adding it now.\"\n                    echo \"export PATH=\\$PATH:\\$HOME/bin\" >> $HOME/.zshrc\n                else\n                    echo \"$HOME/bin is already in your PATH. Proceeding.\"\n                fi\n                ;;\n\n            fish)\n                echo \"I see you use fish. shahab96 likes your choice.\"\n                fish -c fish_add_path -P $HOME/bin\n                ;;\n\n            *)\n                echo \"Please add: export PATH='\\$PATH:$HOME/bin' to your .bashrc or whatever shell you use.\"\n                echo \"If you know how to add stuff to shells other than bash, zsh and fish please help out here!\"\n        esac\n    fi\n    \n\n# done \necho \"PLEASE MAKE .xinitrc TO LAUNCH, or just use your Display Manager (ie. lightdm or sddm, etc.)\" | tee ~/Note.txt\nprintf \"\\n\" >> ~/Note.txt\necho \"For startpage, copy the startpage directory into wherever you want, and set it as new tab in firefox settings.\" | tee -a ~/Note.txt\necho \"For more info on startpage (Which is a fork of Prismatic Night), visit https://github.com/dbuxy218/Prismatic-Night#Firefoxtheme\" | tee -a ~/Note.txt\necho \"ALL DONE! Reboot for all changes to take place!\" | tee -a ~/Note.txt\necho \"Open issues on github or ask me on discord or whatever if you face issues.\" | tee -a ~/Note.txt\necho \"Install Museo Sans as well. From Adobe I believe.\" | tee -a ~/Note.txt\necho \"If the bar doesn't work, use tint2conf and set stuff up, if you're hopelessly lost, open an issue.\" | tee -a ~/Note.txt\necho \"These instructions have been saved to ~/Note.txt. Make sure to go through them.\"\necho \"For instructions regarding usage on VirtualMachines, please refer to the VM folder of the repo.\" | tee -a ~/Note.txt\nsleep 5\nxmonad --recompile\n\n\n\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "startpage",
          "type": "tree",
          "content": null
        },
        {
          "name": "wallpapers",
          "type": "tree",
          "content": null
        },
        {
          "name": "xmonad",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}