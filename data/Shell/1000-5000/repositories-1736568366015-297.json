{
  "metadata": {
    "timestamp": 1736568366015,
    "page": 297,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DP-3T/documents",
      "stars": 2250,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4794921875,
          "content": "# macOS.gitignore - https://github.com/github/gitignore/blob/master/Global/macOS.gitignore\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk"
        },
        {
          "name": "COVID19 Response - What Data Is Necessary For Digital Proximity Tracing.pdf",
          "type": "blob",
          "size": 73.3857421875,
          "content": null
        },
        {
          "name": "DP3T - Aims of the Project.pdf",
          "type": "blob",
          "size": 27.544921875,
          "content": null
        },
        {
          "name": "DP3T - Best Practices for Operation Security in Proximity Tracing.pdf",
          "type": "blob",
          "size": 494.66015625,
          "content": null
        },
        {
          "name": "DP3T - Data Protection and Security.pdf",
          "type": "blob",
          "size": 627.6083984375,
          "content": null
        },
        {
          "name": "DP3T - Exposure Score Calculation.pdf",
          "type": "blob",
          "size": 299.4814453125,
          "content": null
        },
        {
          "name": "DP3T - Interoperability Decentralized Proximity Tracing Specification (Preview).pdf",
          "type": "blob",
          "size": 782.7490234375,
          "content": null
        },
        {
          "name": "DP3T - Simplified Three Page Brief.pdf",
          "type": "blob",
          "size": 92.0908203125,
          "content": null
        },
        {
          "name": "DP3T - Upload Authorisation Analysis and Guidelines.pdf",
          "type": "blob",
          "size": 354.50390625,
          "content": null
        },
        {
          "name": "DP3T White Paper.pdf",
          "type": "blob",
          "size": 2602.79296875,
          "content": null
        },
        {
          "name": "DP3T-Slideshow.pdf",
          "type": "blob",
          "size": 2054.513671875,
          "content": null
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 10.4775390625,
          "content": "# FAQ: Decentralized Proximity Tracing\n\nThis FAQ attempts to answer frequently asked questions about the DP-3T project, the problems it tries to address, and its design choices. It is by no means complete. We’ll be updating this FAQ as we go, for now we have been focussing on answering the technical questions first. Feedback is very welcome.\n\n * [Protocol Questions](#protocol-questions)\n   * [P1: Why don’t infected users upload the ephemeral Bluetooth identifiers (EphIDs) they have observed to the backend server, so that other apps can download them and check for contacts locally?](#p1-why-dont-infected-users-upload-the-ephemeral-bluetooth-identifiers-ephids-they-have-observed-to-the-backend-server-so-that-other-apps-can-download-them-and-check-for-contacts-locally)\n   * [P2: Why don’t infected users upload the ephemeral Bluetooth identifiers (EphIDs) they have observed to the backend server, so that other apps can ask the server if there is a match with their own EphIDs?](#p2-why-dont-infected-users-upload-the-ephemeral-bluetooth-identifiers-ephids-they-have-observed-to-the-backend-server-so-that-other-apps-can-ask-the-server-if-there-is-a-match-with-their-own-ephids)\n   * [P3: Why not use multi party computation or custom privacy\\-preserving protocols (PSI, PIR, etc\\.) instead to query the server for the observed ephemeral Bluetooth identifiers?](#p3-why-not-use-multi-party-computation-or-custom-privacy-preserving-protocols-psi-pir-etc-instead-to-query-the-server-for-the-observed-ephemeral-bluetooth-identifiers)\n   * [P4: Why is the system not using public key cryptography when broadcasting identifiers?](#p4-why-is-the-system-not-using-public-key-cryptography-when-broadcasting-identifiers)\n   * [P5: Why not use mixnets or other anonymous communication systems to query the server?](#p5-why-not-use-mixnets-or-other-anonymous-communication-systems-to-query-the-server)\n   * [P6: Why do infected people upload a seed (which enables recreating EphIDs) instead of their individual EphIDs?](#p6-why-do-infected-people-upload-a-seed-which-enables-recreating-ephids-instead-of-their-individual-ephids-)\n   * [P7: Why do you call your design \"decentralized\" while having a backend?](#p7-why-do-you-call-your-design-decentralized-while-having-a-backend)\n\n## Protocol Questions\n\nQuestions regarding the underlying protocol and mitigations for known vulnerabilities\n\n### P1: Why don’t infected users upload the ephemeral Bluetooth identifiers (`EphIDs`) they have observed to the backend server, so that other apps can download them and check for contacts locally?\n\n*Short answer:** The bandwidth cost of downloading all observed Bluetooth\nidentifiers from all infected individuals is high. Furthermore, it facilitates\nattacks that insert or remove contact events. Finally, it reveals interactions\nbetween pseudonymous users to the backend server, without providing extra\nprivacy in comparison with publishing the infected users’ seeds.\n\n*Long answer:** It is possible to build a privacy-friendly contact tracing\nsystem by letting diagnosed patients upload the list of observed ephemeral\nBluetooth identifiers (EphIDs). All other smartphones would then download this list,\nand check if any of the identifiers they generated was seen by (and therefore in\nclose physical proximity to) an infected patient.\n\nThis option, however, is very costly. In Europe there are more than 30,000\npatients a day. The number of observed EphIDsis also high. We expect people to\nbe in close physical proximity with many people. For instance, spending 24 hours\nat home with your partner will already yield 96 recorded EphIDs(assuming they\nchange every 15 minutes). So let’s say an infected person uploads 5000 unique\ncontact events for 21 days. We then need to transfer 150 million records. Even\nusing efficient representations (e.g., a cuckoo filter) this would take at least\n600MB to be downloaded by every app, every day.\n\nSending observed contacts also increases the likelihood that a tech-savvy user\ncreates fake contact events, which in turn can lead to unnecessary anxiety. To\nfake at-risk contacts, an infected user simply inserts additional EphIDs from\nother users to his local storage. In DP3T, in which an infected user shares\ntheir own EphIDs, the barrier to fake contact events is much higher. The infected\nuser would have to actively broadcast their own EphIDs via another device to fake\ncontacts with other users.\n\n\n### P2: Why don’t infected users upload the ephemeral Bluetooth identifiers (`EphIDs`) they have observed to the backend server, so that other apps can ask the server if there is a match with their own `EphIDs`?\n\n*Short answer:* This results in a high load on the server and either reveals\nprivacy sensitive information to the server, or requires anonymous\ncommunication.\n\n*Long answer:** In this solution, rather than apps downloading a list of all\nEphIDs observed by infected patients, they would instead query the backend\nserver with their own EphIDs to ask if any of them has been in contact with an\ninfected patient. The consequence is a significant increase in bandwidth usage.\nIn particular, the apps must daily query all the EphIDs that they broadcasted\nin the last 21 days (as newly diagnosed patients might have seen these in the\npast), which is estimated as approximately 2,000 EphIDs per day per user.\n\nFor privacy reasons, it is essential that the server cannot link all EphIDs of a\nsingle user. Therefore, users must query their EphIDs separately and via an\nanonymous communication network so that their identifiers remain unlinkable. For\n50 million users, the server must therefore be able to process more than a\nmillion lookup queries per second.\n\n### P3: Why not use multi party computation or custom privacy-preserving protocols (PSI, PIR, etc.) instead to query the server for the observed ephemeral Bluetooth identifiers?\n\nWe all love privacy-preserving cryptography. However, the scale at which this\nsystem must operate is significant: a server set size of 150 million entries of\n16 bytes each (corresponding to 30k new infections a day and 5000 distinct\nrecorded EphIDs), a client set of 2,000 items, and 50 million daily queries\n(>500 queries per second).\n\nIt might be possible to design and deploy special purpose cryptographic\ntechniques that scale to this level and we are aware of research prototypes that\nmight be able to fulfil the requirements and for which code might be available.\nHowever, a significant investment of time and engineering effort would still be\nneeded to take such prototypes and develop them to the point where they could be\ndeployed in a mobile application.\n\n### P4: Why is the system not using public key cryptography when broadcasting identifiers?\n\nIn DP-3T any device must communicate with all of their neighbours, meaning that\nauthentication is impossible. Thus, a malicious party can inject their own\ntraffic and hence participate in any exchange.\n\nSecondly, any application of public key cryptography would require a connection\nbetween devices or multiple broadcasts (each broadcast is limited to only 11\nbytes and the smallest public keys are around 32 bytes). In a crowded\nenvironment there is substantial message loss from interference between\nmessages. It is unlikely that performing N^2 connections or exchanges between N\napps would function effectively, in contrast to N broadcasts in the current\nprotocol.\n\n### P5: Why not use mixnets or other anonymous communication systems to query the server?\n\nOur design uses a small amount of dummy messages to provide traffic analysis protection for uploads to the backend and epidemiologists with respect to network adversaries. The use of a mixnet, Tor or other anonymous system would in addition conceal the IP address of users submitting reports with respect to the backend.  \n\nWe considered using an anonymous communication system. However, we decided against doing so for the following reasons:\n 1. Relying on any form of anonymous communication system increases the\n    complexity of the system. Both in terms of integrating anonymous\n    communication into the app, as well as the server infrastructure needed to\n    support tens of millions of apps. (Even Tor, the most widely deployed\n    anonymous communication network, would struggle under this load.)\n 2. All anonymous communication systems must trade anonymity, latency, and\n    bandwidth overhead. It is not clear what is the good choice in this\n    scenario.\n 3. We need to take the security properties of the anonymous communication\n    system into account in our analysis. E.g., should we protect against a\n    global passive adversary or not? How well does the system protect against\n    intersection attacks?\n\nIn future versions of the app, if an approppriate anonymous communication network appears, we may include the option of submitting data anonymously to the backend.\n\n### P6: Why do infected people upload a seed (which enables recreating `EphIDs`) instead of their individual EphIDs ?\n\nThis is a choice that is made purely for performance reasons. It is much more\nefficient to send a single 32 byte seed than sending all EphIDs generated during\nthe infectious period (e.g., 21 days). We are aware that this makes the EphIDs\nof infected patients linkable during the infectious period.\n\nFor comparison, sending 21 days of EphIDs rotated every 15 minutes requires\nsending 32kB per infected patient. Even when compressing these EphIDs in a\ncuckoo filter, we’d need around 8kB per infected patient. So smartphones would need\nto download at least 2 orders of magnitude more (e.g., for 30k infected a day:\nfrom around 1 MB to 230 MB per day).\n\nWe are working on alternatives, and explored: sending all generated EphIDs in a\ncuckoo filter, using a hierarchical structure (keys per day, keys per 4 hours\netc.) so that users can do a more granular release, and smaller-region versions\nof those (e.g., work per state rather than country to lower communication cost).\nAll of these have downsides, either in computation, bandwidth or\ninteroperability/leakage cost. We’re trying to find a good middle ground. If you\nhave an idea that we did not yet list, please do reach out to us!\n\n### P7: Why do you call your design \"decentralized\" while having a backend?\n\nWe call our design decentralized because there is not central point of trust for\nsecurity and privacy. All critical operations: creating EphIDs and matching\nobservations are done locally in each phone. The backend server is only needed\nto ensure availability. However, it does not maintain any secrets. Attackers do\nnot gain anything by compromising the backend. All privacy-sensitive information\nis decentralized, and stored on individual’s phones.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.9775390625,
          "content": "﻿# DP3T - Decentralized Privacy-Preserving Proximity Tracing\n\nThis repository documents a secure, decentralized, privacy-preserving proximity tracing system. Its goal is to simplify and accelerate the process of identifying people who have been in contact with an infected person, thus providing a technological foundation to help slow the spread of the SARS-CoV-2 virus. The system aims to minimise privacy and security risks for individuals and communities and guarantee the highest level of data protection.\n\n# Who we are\n\nWe are a international consortium of technologists, legal experts, engineers and epidemiologists with a wide range of experience who are interested in ensuring that any proximity tracing technology does not result in governments obtaining surveillance capabilities which will endanger civil society.\n\nThe following people are behind this design:\n\n**EPFL**: Prof. Carmela Troncoso, Prof. Mathias Payer, Prof. Jean-Pierre Hubaux, Prof. Marcel Salathé, Prof. James Larus, Prof. Edouard Bugnion, Dr. Wouter Lueks, Theresa Stadler, Dr. Apostolos Pyrgelis, Dr. Daniele Antonioli, Ludovic Barman, Sylvain Chatel \n**ETHZ**: Prof. Kenneth Paterson, Prof. Srdjan Capkun, Prof. David Basin, Dr. Jan Beutel, Dennis Jackson  \n**KU Leuven**: Prof. Bart Preneel, Prof. Nigel Smart, Dr. Dave Singelee, Dr. Aysajan Abidin  \n**TU Delft**: Prof. Seda Gürses  \n**University College London**: Dr. Michael Veale  \n**CISPA Helmholtz Center for Information Security**: Prof. Cas Cremers, Prof. Michael Backes, Dr. Nils Ole Tippenhauer  \n**University of Oxford**: Dr. Reuben Binns  \n**University of Torino / ISI Foundation**: Prof. Ciro Cattuto  \n**Aix Marseille Univ, Université de Toulon, CNRS, CPT**: Dr. Alain Barrat  \n**University of Salerno**: Prof. Giuseppe Persiano  \n**IMDEA Software**: Prof. Dario Fiore  \n**University of Porto (FCUP) and INESC TEC**: Prof. Manuel Barbosa  \n**Stanford University**: Prof. Dan Boneh\n\n\nIn this repository you will find various documents defining our specification. The [white paper](DP3T%20White%20Paper.pdf) is accompanied by an [overview of the data protection aspects of the design](DP3T%20-%20Data%20Protection%20and%20Security.pdf), and a [three page simplified introduction to the protocol](DP3T%20-%20Simplified%20Three%20Page%20Brief.pdf).\n\nIn line with the [aims of the project](DP3T%20-%20Aims%20of%20the%20Project.pdf), we seek feedback from a broad audience on the high-level design, its security and privacy properties, and the functionality it offers, so that further protection mechanisms can be added to correct weaknesses. We feel it is essential that designs be made public so the community as a whole can verify the claimed privacy guarantees before applications are deployed.\n\nOpen source implementations for iOS, Android, and the back-end server are available in [other DP-3T repositories](https://github.com/DP-3T/). The DP-3T app developed for Switzerland is publicly available [Android](https://github.com/DP-3T/dp3t-app-android) and [iOS](https://github.com/DP-3T/dp3t-app-ios) and can be used as the basis for other apps\n\nAn explanatory comic [available in many languages](public_engagement/cartoon).\n\nWe publish our privacy and security analysis of specific and general proximity tracing systems. We have published a [guidebook](Security%20analysis/Privacy%20and%20Security%20Attacks%20on%20Digital%20Proximity%20Tracing%20Systems.pdf) to privacy and security risks of the entire spectrum of digital proximity tracing tools, an analysis of [PEPP-PT-NTK](Security%20analysis/PEPP-PT_%20Data%20Protection%20Architechture%20-%20Security%20and%20privacy%20analysis.pdf), and an analysis of [PEPP-PT-ROBERT](Security%20analysis/ROBERT%20-%20Security%20and%20privacy%20analysis.pdf). We have also published proposals for and an analysis of [mechanisms for upload authorisation](DP3T%20-%20Upload%20Authorisation%20Analysis%20and%20Guidelines.pdf).\n\nIn 2022, we published a retrospective analysis of the deployment of decentralised proximity tracing systems, \"Deploying Decentralised, Privacy-Preserving Proximity Tracing\" as Troncoso et al., 2022, available open access [here](https://dl.acm.org/doi/pdf/10.1145/3524107) and mirrored on this repository.\n\nContact email: [dp3t@groupes.epfl.ch](mailto:dp3t@groupes.epfl.ch).\n\n## Joint Statement\n\nDP-3T is listed as one of several privacy-preserving decentralized approaches to contact tracing in a joint statement from over 300 scientists from over 25 countries. The open letter is available [here](https://www.esat.kuleuven.be/cosic/sites/contact-tracing-joint-statement/).\n\n## Apple / Google Exposure Notification\n\nApple and Google released a [joint specification](https://www.apple.com/newsroom/2020/04/apple-and-google-partner-on-covid-19-contact-tracing-technology/) describing their system support for a privacy-preserving exposure notification system on iOS and Android. Their proposal is very similar to our early proposal [\"Low-cost decentralized proximity tracing\"](https://github.com/DP-3T/documents/blob/master/DP3T%20White%20Paper.pdf).\n \nDP-3T appreciates the endorsement of these two companies for our solution and has been working with both of them to implement our app on their platforms.\n\nThe Google / Apple Exposure Notification system is still evolving, in particular, the calibration of the measurement of attenuation values and duration of exposure between iOS and Android and between different phone models is still incomplete. In this phase, we have set our attenuation and duration thresholds conservatively to reduce false positives. We will evolve these thresholds as calibration improves.\n \nWe also strongly believe that Apple and Google should adopt our subsequent enhancements, detailed in our [white paper](https://github.com/DP-3T/documents/blob/master/DP3T%20White%20Paper.pdf), that increase user privacy. We also strongly encourage both companies to allow an external audit of their code to ensure its functionality corresponds to its specification.\n\n## Funding\n\nThe DP3T project is not funded by Google or Apple. All of the funding project’s expenses have come from Prof. James Larus’s discretionary funds at EPFL, in anticipation of a grant from the Botnar Foundation.\n\nTwo researchers involved with the project have received funding from Google in the past. In 2019, Prof. Carmela Troncoso received a Google Security and Privacy Research Award. In 2015, Prof. Edouard Bugnion’s student received a Google PhD Fellowship. In addition, Prof. Mathias Payer received a bug bounty for finding a 0day exploit.\n\nNo participants were funded by Apple.\n\n## April 8th, 2020: The relationship between DP-3T and PEPP-PT\n\n*Please note that since this announcement, DP-3T partners have resigned from the PEPP-PT initiative.*\n\nThe Decentralised Privacy-Preserving Proximity Tracing (DP-3T) project is an open protocol for COVID-19 proximity tracing using Bluetooth Low Energy functionality on mobile devices that ensures personal data and computation stays entirely on an individual's phone. It was produced by a core team of over 25 scientists and academic researchers from across Europe. It has also been scrutinized and improved by the wider community.\n\nDP-3T is a free-standing effort, originally started at EPFL and ETHZ, that has now broadened out to include stakeholders from across Europe and beyond. We develop the protocol and implement it in an open-sourced app and server on this repository.\n\nDP-3T members have been participating in the loose umbrella of the 'Pan-European Privacy-Preserving Proximity Tracing' (PEPP-PT) project. DP-3T is not the only protocol under this umbrella. PEPP-PT also endorses centralized approaches with very different privacy properties. Pandemics do not respect borders, so there is substantial value in PEPP-PT's role of encouraging dialogue, knowledge-sharing, and interoperability.\n\nNevertheless, as the systems endorsed by PEPP-PT have technical differences that yield very different privacy properties, it is a mistake to use the term 'PEPP-PT' to describe a specific solution or to refer to PEPP-PT as if it embodies a single approach rather than several very different ones.\n"
        },
        {
          "name": "Security analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "Troncoso et al_2022_Deploying decentralized, privacy-preserving proximity tracing.pdf",
          "type": "blob",
          "size": 5840.515625,
          "content": ""
        },
        {
          "name": "data_protection",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "public_engagement",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}