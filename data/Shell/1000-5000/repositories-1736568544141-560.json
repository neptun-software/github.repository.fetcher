{
  "metadata": {
    "timestamp": 1736568544141,
    "page": 560,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "slsa-framework/slsa",
      "stars": 1578,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.248046875,
          "content": ".bundle\n.DS_store\n.jekyll-cache\n.jekyll-metadata\n.sass-cache\n_site\nnode_modules\n/docs/vendor/bundle\n\n# Ignore the following files markdownlint that are already tracked by git (thus\n# uanffected by gitignore).\n/LICENSE.md\n\n# Local Netlify folder\n.netlify\n"
        },
        {
          "name": ".markdownlint.yaml",
          "type": "blob",
          "size": 1.4765625,
          "content": "# MD004/ul-style - Unordered list style\nMD004:\n  style: \"dash\"\n\n# MD007/ul-indent - Unordered list indentation\nMD007:\n  indent: 4\n\n# MD013/line-length - Line length\nMD013: false\n\n# MD024/no-duplicate-heading - No duplicate headings\nMD024:\n  # Only check that siblings aren't duplicated.\n  siblings_only: true\n\n# MD025/single-title/single-h1 - Multiple top-level headings\nMD025:\n  # Disable checking of YAML frontmatter.\n  front_matter_title: \"\"\n\n# MD028/no-blanks-blockquote - Blank line inside blockquote\nMD028: false\n\n# MD029/ol-prefix - Ordered list item prefix\nMD029:\n  # List style\n  style: \"ordered\"\n\n# MD030/list-marker-space - Spaces after list markers\nMD030:\n  # Spaces for single-line unordered list items\n  ul_single: 3\n  # Spaces for single-line ordered list items\n  ol_single: 2\n  # Spaces for multi-line unordered list items\n  ul_multi: 3\n  # Spaces for multi-line ordered list items\n  ol_multi: 2\n\n# MD033/no-inline-html - Inline HTML\nMD033: false\n\n# MD034/no-bare-urls - Bare URL used\nMD034: false\n\n# MD046/code-block-style - Code block style\nMD046:\n  style: \"fenced\"\n\n# MD047/single-trailing-newline - Files should end with a single newline character\nMD047: true\n\n# MD048/code-fence-style - Code fence style\nMD048:\n  style: \"backtick\"\n\n# MD055/table-pipe-style - Table pipe style\nMD055:\n  style: \"leading_only\"\n\n# Disable checks that currently have bugs:\nMD051: false  # https://github.com/DavidAnson/markdownlint/issues/538\nMD053: false  # https://github.com/DavidAnson/markdownlint/issues/537\n"
        },
        {
          "name": ".markdownlintignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".gitignore"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.71484375,
          "content": "# Contributing to SLSA\n\nThank you for your interest in contributing to SLSA. Please ensure you abide by\nour [Code of Conduct](code-of-conduct.md) when engaging with the SLSA community.\n\nThe SLSA project is authored on GitHub using [Issues] to describe proposed work\nand [Pull Requests] to submit changes.\n\nIf you would like to contribute to the SLSA Blog, please see: https://github.com/slsa-framework/governance/blob/main/6._Contributing.md\n\nFor other ways to engage with the SLSA community, see our [README](README.md).\n\n[Issues]: https://github.com/slsa-framework/slsa/issues\n[Pull Requests]: https://github.com/slsa-framework/slsa/pulls\n\n## Finding a good first issue\n\nIf you want to start helping but are unsure which issue might be good - you can look for issues with the label [`website`](https://github.com/slsa-framework/slsa/labels/website) if you have Jekyll, CSS, or design knowledge, these changes do not require in depth understanding of the SLSA specifications.\n\nAlternately you can look for issues with a [`shovel-ready`](https://github.com/slsa-framework/slsa/labels/shovel-ready) label, these should be well-defined and ready to be worked on.\n\n## Proposing changes\n\nIf a change is small enough to be fully discussed in a pull request, jump\nstraight to [Submitting changes].\n\nOtherwise, we recommend the following process to propose and reach agreement on\nchanges:\n\n1.  The proposer finds or creates a [GitHub Issue][Issues] describing the\n    problem and proposes an idea to address that problem.\n\n2.  The community discusses and refines the idea, guided by the steering\n    committee.\n\n3.  If supplemental documents are needed, the proposer creates a\n    [proposal document] to describe the proposal and references the document\n    from the Issue. This can be valuable in cases where the topic is too complex\n    to fully describe in an Issue comment.\n\n4.  Once there is general agreement that the proposal is sound, the proposer\n    [submits][submitting changes] a pull request implementing the idea. Final\n    agreement happens on the pull request.\n\n[proposal document]: https://github.com/slsa-framework/slsa-proposals\n\n## Submitting changes\n\n[submitting changes]: #submitting-changes\n\nAll changes require peer review through GitHub's pull request (PR) feature.\n\n### Markdown style\n\nChanges to any of the Markdown files in the repository should meet our Markdown\nstyle, as encoded in our [markdownlint configuration](.markdownlint.yaml). In\naddition we prefer to keep our Markdown documents wrapped at 80 columns (though\nthis is not currently enforced).\n\nTo check (and fix) style problems before sending a PR you can run linting\nlocally with `npm run lint && ./lint.sh` or `npm run format && ./lint.sh`.\n\n```shell\n$ npm run lint && ./lint.sh\n\n> lint\n> markdownlint .\n\nCONTRIBUTING.md:77 MD022/blanks-around-headings Headings should be surrounded by blank lines [Expected: 1; Actual: 0; Above] [Context: \"### Pull request conventions\"]\n$ npm run format && ./lint.sh\n\n> format\n> markdownlint . --fix\n\n$\n```\n\nIf you haven't already you'll need to install npm (e.g. `sudo apt install npm`)\nand package dependencies (`npm install`).\n\n### Pull request conventions\n\n[pull request conventions]: #pull-request-conventions\n\nPRs are expected to meet the following conventions:\n\n-   PR title follows [Conventional Commits][][^semantic-action] using the form\n    `<type>: <subject>`, where:\n    -   `<type>` is one of the values in the [table below](#pull-request-types).\n    -   `<subject>` concisely explains *what* the PR does.\n-   PR body explains *what* and *why* in a bit more detail, providing\n    enough context for a reader to understand the change. See\n    [Writing good CL descriptions](https://google.github.io/eng-practices/review/developer/cl-descriptions.html)\n    for more advice (in that doc, \"CL\" means PR and \"first line\" means PR title;\n    ignore the section about tags.)\n-   PR title and body use imperative tense, e.g. \"update X\" (not \"updated\n    X\" or \"updates X\").\n-   Every commit has a [signed-off-by] tag.\n    -   Note: Commit messages do not otherwise matter because we use the [squash\n        and merge] method, with the PR title and body as the squash\n        commit message.\n-   Example of a good PR title and body:\n    https://github.com/slsa-framework/slsa/pull/840 (predates our `<type>`\n    convention).\n\n[^semantic-action]: As implemented via [action-semantic-pull-request].\n\n[Conventional Commits]: https://www.conventionalcommits.org/en/v1.0.0/\n[action-semantic-pull-request]: https://github.com/amannn/action-semantic-pull-request\n\n### Pull request types\n\nEvery PR must be categorized using one of the following `<type>` values. The\npurpose is twofold: to make it easier for readers to understand the scope of the\nPR at a glance, and to allow us to adjust the minimum review period and number\nof approvers based on how sensitive the PR is.\n\nUse the closest entry in the table that applies, selecting the first one if\nmultiple apply. If you are not sure which type to use, take a guess and a\nmaintainer will update if needed. See [review and approval] for the meaning of\n\"waiting period\" and \"# approvers\".\n\n| Type | Meaning | Waiting period | # Approvers\n|---|---|---|---\n| `content` | A change to the meaning of the specification. Must include a [changelog entry]. | 72h | 3\n| `editorial` | A clarification to the specification that does not change its meaning, beyond a simple `fix`. | 24h | 2\n| `nonspec` | A change to a non-specification, non-blog page, beyond a simple `fix`. | 24h | 2\n| `blog` | A new or updated blog post. (Do not mix with categories above.) | 24h | 2\n| `fix` | A fix for obvious typos, broken links, and similar. | 0h | 1\n| `style` | A user-visible style or layout change. No content changes. | 0h | 1\n| `impl` | A user-invisible change, such as editing a README or the repo configuration. | 0h | 1\n\nNote 1: PR authors with write access to the repo count as second or third\napprovers for their own PRs. For example, if the author of a PR with the\n`content` type has write access to the repo, then the PR only requires\ntwo additional approvers before merging. However, a PR with the `impl` type\nalways requires one reviewer, even if the author has write access.\n\nNote 2: If the PR only touches files in the [Draft](docs/spec-stages.md)\nspecification stage, then the \"waiting period\" and \"# reviewers\" are relaxed and\nup to Maintainer discretion (including the PR author if they're a maintainer). Note\nthat a relaxed number of reviewers and waiting period may result in more back\nand forth with the expanded set of reviewers as drafts are finalized.\nDrafts should be indicated in the PR title following a pattern of `<type>: draft: <subject>`.\nFiles in the Draft stage have a large banner at the top of each rendered page,\nas well as the text \"Status: Draft\".\n\n[squash and merge]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-commits\n\n### Changelog entry\n\n[changelog entry]: #changelog-entry\n\nAll `content` changes to the specification should also include a brief\ndescription of the change in the adjacent `whats-new.md` file, in order to help\nreaders of an updated version of the specification to more easily identify\nchanges.\n\n### Review and approval\n\n[review and approval]: #review-and-approval\n\nReview process:\n\n1.  Ensure that the PR meets the [pull request conventions].\n\n2.  If there is a particular set of maintainers you've been working with, feel\n    free to assign the PR to them.  If they don't have time to review they\n    should feel free to assign to someone else, or provide feedback on when\n    they can get to it.  Otherwise, assign to\n    `@slsa-framework/specification-maintainers`.\n    -   Feel free to ping the reviwers in the\n    [slsa-specification Slack](https://openssf.slack.com/archives/C03NUSAPKC6)\n    when the PR is ready for review.\n    -   You will need a different number of approvals for different\n    [PR types](#pull-request-types). Your reviewers may ask that you use a\n    different PR type.\n\n3.  Wait an appropriate amount of time to allow for lazy consensus. Different\n    types have different minimum waiting periods. The waiting period begins at\n    the timestamp of either the final required approval or the latest non-author\n    comment, whichever is later.\n    -   If a few days have passed without any feedback please feel free to ping\n    the PR and [in Slack](https://openssf.slack.com/archives/C03NUSAPKC6).\n\n4.  Once the waiting period has passed, a maintainer will merge your PR. Expect\n    your PR to be squashed+merged unless your reviewers advise you otherwise.\n    If your PR has not been merged within 48h of the waiting period having\n    passed, and a reason for that has not been added as a PR comment, use the\n    PR's comment thread to request the PR be merged.\n\n### Signing your work\n\n[signed-off-by]: #signing-your-work\n\nWhen contributing patches to the project via pull request, please indicate that\nyou wrote the patch or have permission to pass it on by including your sign-off.\n\nIf you can certify this, answering yes to each of the statements below (from\n[developercertificate.org](https://developercertificate.org/)):\n\n<pre>\nDeveloper Certificate of Origin\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n</pre>\n\nyou can add a `Signed-off-by:` line to each commit message:\n\n`Signed-off-by: Some Author <some.author@example.com>`\n\nYou can automatically append a sign-off to a commit by passing the `-s` /\n`--sign-off` option to `git commit`:\n\n`git commit -s`\n\n**Note**: this requires your `user.name` and `user.email` are set correctly\nin your git config.\n\n## SLSA versions management\n\nThe main working draft is located in the `spec/draft` folder while the various versions are in specific folders:\n\n```none\nspec/draft\nspec/v0.1\nspec/v0.2\nspec/v1.0\nspec/v1.0-rc1\nspec/v1.0-rc2\nspec/v1.1\n```\n\n`spec/draft` is where all new work should take place. To publish a new version of the SLSA specification, copy the draft folder to a version specific folder (e.g., `spec/v1.1`) and make the necessary changes to that folder: it is possible for instance that not all that is in the draft should be included in which case you will need to remove that content, and several config and navigation files need to be updated such as:\n\n```none\n_data/nav/config.yml\n_data/nav/v1.1.yml (corresponding to the version you are creating)\n_data/versions.yml\n_redirects\n```\n\nTo patch a specific version of the specification, the changes should be made to both the corresponding folder as well as, if applicable, to all later versions including the draft folder.\n\nUnfortunately we've not figured out a better way to handle the different versions with Jekyll. If you do, please let us know!\n\nTo compare the changes between two versions you may find it handy to use the [diff site script](https://github.com/slsa-framework/slsa/tree/main/docs#comparing-built-versions).\n\n**Note**: When publishing new versions of the SLSA specification, make sure to follow the [Specification stages and versions documentation](docs/spec-stages.md) and the [Specification Development Process](https://github.com/slsa-framework/governance/blob/main/5._Governance.md#4-specification-development-process) to ensure compliance with the [Community Specification License](https://github.com/slsa-framework/governance/blob/main/1._Community_Specification_License-v1.md).\n\n## Workstream lifecycle\n\nMajor workstreams that require considerable effort, such as a new release, a new\ntrack, or a new level, should have a top-level GitHub issue and a shepherd to\noversee the workstream and move it along. Without a shepherd, a workstream is\nlikely to stagnate. If you would like to be a shepherd for a workstream, just\nnominate yourself in the issue.\n\nResponsibilities of the shepherd:\n\n-   Maintaining the top-level GitHub issue to track the overall workstream\n-   Breaking down the workstream into tasks\n-   Pinging open issues and pull requests when stale\n-   Getting consensus among Contributors and Maintainers\n-   Suggesting priorities\n-   Providing regular updates to the community\n-   Adding a workstream entry in [README.md](README.md)\n\nTemplate for GitHub issue:\n\n-   Title: `Workstream: <name>`\n-   Assignee: \\<shepherd\\>\n-   Labels: [`workstream`](https://github.com/slsa-framework/slsa/labels/workstream)\n-   Description:\n\n    ```markdown\n    This is a tracking issue for [SHORT DESCRIPTION].\n\n    [Workstream shepherd]: YOUR NAME (@GITHUB_USERNAME)\n\n    Sub-issues:\n\n    -   [ ] #1234\n    -   [ ] #4568\n\n    [Workstream shepherd]: https://github.com/slsa-framework/slsa/blob/main/CONTRIBUTING.md#workstream-lifecycle\n\n    ---\n\n    [any other text]\n\n    ```\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 15.7509765625,
          "content": "# Community Specification License 1.0\n\n**The Purpose of this License.**  This License sets forth the terms under which 1) Contributor will participate in and contribute to the development of specifications, standards, best practices, guidelines, and other similar materials under this Working Group, and 2) how the materials developed under this License may be used.  It is not intended for source code.  Capitalized terms are defined in the License’s last section.\n\n**1.\tCopyright.**\n\n**1.1.\tCopyright License.**  Contributor grants everyone a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) copyright license, without any obligation for accounting, to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute any materials it submits to the full extent of its copyright interest in those materials. Contributor also acknowledges that the Working Group may exercise copyright rights in the Specification, including the rights to submit the Specification to another standards organization.\n\n**1.2.\tCopyright Attribution.**  As a condition, anyone exercising this copyright license must include attribution to the Working Group in any derivative work based on materials developed by the Working Group.  That attribution must include, at minimum, the material’s name, version number, and source from where the materials were retrieved.  Attribution is not required for implementations of the Specification.\n\n**2.\tPatents.**\n\n**2.1.\tPatent License.**\n\n**2.1.1.\tAs a Result of Contributions.**\n\n**2.1.1.1.\tAs a Result of Contributions to Draft Specifications.**  Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims in 1) Contributor’s Contributions and 2) to the Draft Specification that is within Scope as of the date of that Contribution, in both cases for Licensee’s Implementation of the Draft Specification, except for those patent claims excluded by Contributor under Section 3.  \n\n**2.1.1.2.\tFor Approved Specifications.**  Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims included the Approved Specification that are within Scope for Licensee’s Implementation of the Approved Specification, except for those patent claims excluded by Contributor under Section 3.\n\n**2.1.2.\tPatent Grant from Licensee.**  Licensee grants each other Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims for its Implementation, except for those patent claims excluded under Section 3.\n\n**2.1.3.\tLicensee Acceptance.**  The patent grants set forth in Section 2.1 extend only to Licensees that have indicated their agreement to this License as follows: \n\n**2.1.3.1.\tSource Code Distributions.**  For distribution in source code, by including this License in the root directory of the source code with the Implementation;\n\n**2.1.3.2.\tNon-Source Code Distributions.**  For distribution in any form other than source code, by including this License in the documentation, legal notices, via notice in the software, and/or other written materials provided with the Implementation; or\n\n**2.1.3.3.\tVia Notices.md.**  By issuing pull request or commit to the Specification’s repository’s Notices.md file by the Implementer’s authorized representative, including the Implementer’s name, authorized individual and system identifier, and Specification version.\n\n**2.1.4.\tDefensive Termination.**  If any Licensee files or maintains a claim in a court asserting that a Necessary Claim is infringed by an Implementation, any licenses granted under this License to the Licensee are immediately terminated unless 1) that claim is directly in response to a claim against Licensee regarding an Implementation, or 2) that claim was brought to enforce the terms of this License, including intervention in a third-party action by a Licensee.\n\n**2.1.5.\tAdditional Conditions.**  This License is not an assurance (i) that any of Contributor’s copyrights or issued patent claims cover an Implementation of the Specification or are enforceable or (ii) that an Implementation of the Specification would not infringe intellectual property rights of any third party.\n\n**2.2.\tPatent Licensing Commitment.**  In addition to the rights granted in Section 2.1, Contributor agrees to grant everyone a no charge, royalty-free license on reasonable and non-discriminatory terms to Contributor’s Necessary Claims that are within Scope for:\n1) Implementations of a Draft Specification, where such license applies only to those Necessary Claims infringed by implementing Contributor's Contribution(s) included in that Draft Specification, and\n2) Implementations of the Approved Specification. \n\nThis patent licensing commitment does not apply to those claims subject to Contributor’s Exclusion Notice under Section 3.\n\n**2.3.\tEffect of Withdrawal.**  Contributor may withdraw from the Working Group by issuing a pull request or commit providing notice of withdrawal to the Working Group repository’s Notices.md file.  All of Contributor’s existing commitments and obligations with respect to the Working Group up to the date of that withdrawal notice will remain in effect, but no new obligations will be incurred. \n\n**2.4.\tBinding Encumbrance.**  This License is binding on any future owner, assignee, or party who has been given the right to enforce any Necessary Claims against third parties.\n\n**3.\tPatent Exclusion.**\n\n**3.1.\tAs a Result of Contributions.**  Contributor may exclude Necessary Claims from its licensing commitments incurred under Section 2.1.1 by issuing an Exclusion Notice within 45 days of the date of that Contribution.  Contributor may not issue an Exclusion Notice for any material that has been included in a Draft Deliverable for more than 45 days prior to the date of that Contribution.\n\n**3.2.\tAs a Result of a Draft Specification Becoming an Approved Specification.**  Prior to the adoption of a Draft Specification as an Approved Specification, Contributor may exclude Necessary Claims from its licensing commitments under this Agreement by issuing an Exclusion Notice.  Contributor may not issue an Exclusion Notice for patents that were eligible to have been excluded pursuant to Section 3.1.\n\n**4.\tSource Code License.**  Any source code developed by the Working Group is solely subject the source code license included in the Working Group’s repository for that code.  If no source code license is included, the source code will be subject to the MIT License.\n\n**5.\tNo Other Rights.**  Except as specifically set forth in this License, no other express or implied patent, trademark, copyright, or other rights are granted under this License, including by implication, waiver, or estoppel.\n\n**6.\tAntitrust Compliance.**  Contributor acknowledge that it may compete with other participants in various lines of business and that it is therefore imperative that they and their respective representatives act in a manner that does not violate any applicable antitrust laws and regulations.  This License does not restrict any Contributor from engaging in similar specification development projects. Each Contributor may design, develop, manufacture, acquire or market competitive deliverables, products, and services, and conduct its business, in whatever way it chooses.  No Contributor is obligated to announce or market any products or services.  Without limiting the generality of the foregoing, the Contributors agree not to have any discussion relating to any product pricing, methods or channels of product distribution, division of markets, allocation of customers or any other topic that should not be discussed among competitors under the auspices of the Working Group.\n\n**7.\tNon-Circumvention.**  Contributor agrees that it will not intentionally take or willfully assist any third party to take any action for the purpose of circumventing any obligations under this License.\n\n**8.\tRepresentations, Warranties and Disclaimers.**\n\n**8.1.  Representations, Warranties and Disclaimers.**  Contributor and Licensee represents and warrants that 1) it is legally entitled to grant the rights set forth in this License and 2) it will not intentionally include any third party materials in any Contribution unless those materials are available under terms that do not conflict with this License.  IN ALL OTHER RESPECTS ITS CONTRIBUTIONS ARE PROVIDED \"AS IS.\" The entire risk as to implementing or otherwise using the Contribution or the Specification is assumed by the implementer and user. Except as stated herein, CONTRIBUTOR AND LICENSEE EXPRESSLY DISCLAIM ANY WARRANTIES (EXPRESS, IMPLIED, OR OTHERWISE), INCLUDING IMPLIED WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, CONDITIONS OF QUALITY, OR TITLE, RELATED TO THE CONTRIBUTION OR THE SPECIFICATION.  IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. Any obligations regarding the transfer, successors in interest, or assignment of Necessary Claims will be satisfied if Contributor or Licensee notifies the transferee or assignee of any patent that it knows contains Necessary Claims or necessary claims under this License. Nothing in this License requires Contributor to undertake a patent search. If Contributor is 1) employed by or acting on behalf of an employer, 2) is making a Contribution under the direction or control of a third party, or 3) is making the Contribution as a consultant, contractor, or under another similar relationship with a third party, Contributor represents that they have been authorized by that party to enter into this License on its behalf.\n\n**8.2.  Distribution Disclaimer.**  Any distributions of technical information to third parties must include a notice materially similar to the following: “THESE MATERIALS ARE PROVIDED “AS IS.” The Contributors and Licensees expressly disclaim any warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to the materials.  The entire risk as to implementing or otherwise using the materials is assumed by the implementer and user. IN NO EVENT WILL THE CONTRIBUTORS OR LICENSEES BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS DELIVERABLE OR ITS GOVERNING AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER MEMBER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”\n\n**9.\tDefinitions.**\n\n**9.1.\tAffiliate.** “Affiliate” means an entity that directly or indirectly Controls, is Controlled by, or is under common Control of that party.\n\n**9.2.\tApproved Specification.**  “Approved Specification” means the final version and contents of any Draft Specification designated as an Approved Specification as set forth in the accompanying Governance.md file.\n\n**9.3.\tContribution.**  “Contribution” means any original work of authorship, including any modifications or additions to an existing work, that Contributor submits for inclusion in a Draft Specification, which is included in a Draft Specification or Approved Specification.\n\n**9.4.\tContributor.** “Contributor” means any person or entity that has indicated its acceptance of the License 1) by making a Contribution to the Specification, or 2) by entering into the Community Specification Contributor License Agreement for the Specification.  Contributor includes its Affiliates, assigns, agents, and successors in interest.\n\n**9.5.\tControl.**  “Control” means direct or indirect control of more than 50% of the voting power to elect directors of that corporation, or for any other entity, the power to direct management of such entity.\n\n**9.6.\tDraft Specification.**  “Draft Specification” means all versions of the material (except an Approved Specification) developed by this Working Group for the purpose of creating, commenting on, revising, updating, modifying, or adding to any document that is to be considered for inclusion in the Approved Specification. \n\n**9.7.\tExclusion Notice.**  “Exclusion Notice” means a written notice made by making a pull request or commit to the repository’s Notices.md file that identifies patents that Contributor is excluding from its patent licensing commitments under this License.  The Exclusion Notice for issued patents and published applications must include the Draft Specification’s name, patent number(s) or title and application number(s), as the case may be, for each of the issued patent(s) or pending patent application(s) that the Contributor is excluding from the royalty-free licensing commitment set forth in this License.  If an issued patent or pending patent application that may contain Necessary Claims is not set forth in the Exclusion Notice, those Necessary Claims shall continue to be subject to the licensing commitments under this License.  The Exclusion Notice for unpublished patent applications must provide either: (i) the text of the filed application; or (ii) identification of the specific part(s) of the Draft Specification whose implementation makes the excluded claim a Necessary Claim.  If (ii) is chosen, the effect of the exclusion will be limited to the identified part(s) of the Draft Specification.\n\n**9.8.\tImplementation.**  “Implementation” means making, using, selling, offering for sale, importing or distributing any implementation of the Specification 1) only to the extent it implements the Specification and 2) so long as all required portions of the Specification are implemented.\n\n**9.9.\tLicense.**  “License” means this Community Specification License.\n\n**9.10.\tLicensee.**  “Licensee” means any person or entity that has indicated its acceptance of the License as set forth in Section 2.1.3.  Licensee includes its Affiliates, assigns, agents, and successors in interest.\n\n**9.11.\tNecessary Claims.**  “Necessary Claims” are those patent claims, if any, that a party owns or controls, including those claims later acquired, that are necessary to implement the required portions (including the required elements of optional portions) of the Specification that are described in detail and not merely referenced in the Specification.\n\n**9.12.\tSpecification.**  “Specification” means a Draft Specification or Approved Specification included in the Working Group’s repository subject to this License, and the version of the Specification implemented by the Licensee.\n\n**9.13.\tScope.**  “Scope” has the meaning as set forth in the accompanying Scope.md file included in this Specification’s repository. Changes to Scope do not apply retroactively.  If no Scope is provided, each Contributor’s Necessary Claims are limited to that Contributor’s Contributions.\n\n**9.14.\tWorking Group.**  “Working Group” means this project to develop specifications, standards, best practices, guidelines, and other similar materials under this License.\n\n\n\n*The text of this Community Specification License is Copyright 2020 Joint Development Foundation and is licensed under the Creative Commons Attribution 4.0 International License available at https://creativecommons.org/licenses/by/4.0/.*\n\nSPDX-License-Identifier: CC-BY-4.0\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 3.8720703125,
          "content": "# Maintainers of the SLSA Specification\n\nMaintainers are [responsible][SLSA Governance] for day-to-day operation of the\nproject. Every pull request in this repository must be approved by\nat least one Maintainer, as per [CONTRIBUTING.md](CONTRIBUTING.md).\n\nThis file contains the canonical list of SLSA Specification Maintainers. It is\nmanually mirrored to the [Specification Maintainers] GitHub team, which confers\npermissions in this repository.\n\n## Current Maintainers\n\n<!-- Please keep the list sorted alphabetically by first name. -->\n<!-- Remember to add new candidates to the GitHub group. -->\n\n| Name | Email | OpenSSF Slack | GitHub | Affiliation\n| --- | --- | --- | --- | ---\n| Aditya Sirish A Yelgundhalli | aditya.sirish@nyu.edu | @Aditya Sirish | [adityasaky](https://github.com/adityasaky) | New York University and Bloomberg\n| Andrew McNamara | arewm@redhat.com |  @arewm | [arewm](https://github.com/arewm) | Red Hat\n| Arnaud Le Hors | lehors@us.ibm.com | @Arnaud Le Hors | [lehors](https://github.com/lehors) | IBM\n| Marcela Melara | marcela.melara@intel.com | @Marcela Melara | [marcelamelara](https://github.com/marcelamelara) | Intel\n| Mark Lodato | lodato@google.com |  @Mark Lodato | [MarkLodato](https://github.com/MarkLodato) | Google\n| Michael Lieberman | mlieberman85@gmail.com | @Michael Lieberman | [mlieberman85](https://github.com/mlieberman85) | Kusari\n| Tom Hennen | tomhennen@google.com | @Tom Hennen | [TomHennen](https://github.com/TomHennen) | Google\n| Trishank Karthik Kuppusamy | trishank.kuppusamy@datadoghq.com | @trishank | [trishankatdatadog](https://github.com/trishankatdatadog) | Datadog\n| Zachariah Cox | zachariahcox@github.com | @zachariahcox | [zachariahcox](https://github.com/zachariahcox) | GitHub\n\n### Becoming a Maintainer\n\nThe criteria for becoming a Maintainer is documented in the [SLSA Governance]\nrepository and copied here for convenience:\n\n-   Demonstrated track record of PR reviews (both quality and quantity of reviews)\n-   Demonstrated thought leadership in the project\n-   Demonstrated shepherding of project work and contributors\n\nThe best way to get started is to regularly contribute and review pull requests.\n\nTo nominate a candidate, send a PR adding the candidate's name to the list of\n[Current Maintainers]. If the candidate is not the author, have the candidate\napprove the PR as well.\n\nOnce the PR is approved and merged, an existing Maintainer will [add] the\ncandidate to the [Specification Maintainers] GitHub team.\n\n[add]: https://docs.github.com/en/organizations/organizing-members-into-teams/adding-organization-members-to-a-team\n\n## Retired Maintainers\n\n<!-- Please keep the list sorted alphabetically by first name. -->\n<!-- Remember to remove candidates from the GitHub group. -->\n\n| Name | Email | OpenSSF Slack | GitHub | Affiliation\n| --- | --- | --- | --- | ---\n| Kris K | kkris@google.com | @Kris K | [kpk47](https://github.com/kpk47) | Google\n| Joshua Lock | joshuagloe@gmail.com | @Joshua Lock |  [joshuagl](https://github.com/joshuagl) | Verizon\n\n### Removing a Maintainer\n\nThe criteria for removing a Maintainer is documented in the [SLSA Governance]\nrepository.\n\nTo remove Maintainer, send a PR to move the candidate from [Current Maintainers]\nto [Retired Maintainers]. If the candidate is not the author, request review\nfrom the candidate to inform them of their removal. Approval from the candidate\nis *not* required, though it is desirable.\n\nOnce the PR is approved and merged, a Maintainer will [remove] the person from\nthe [Specification Maintainers] GitHub team.\n\n[remove]: https://docs.github.com/en/organizations/organizing-members-into-teams/removing-organization-members-from-a-team\n\n[Current Maintainers]: #current-maintainers\n[Retired Maintainers]: #retired-maintainers\n[SLSA Governance]: https://github.com/slsa-framework/governance/blob/main/5._Governance.md\n[Specification Maintainers]: https://github.com/orgs/slsa-framework/teams/specification-maintainers\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3017578125,
          "content": "# SLSA (\"salsa\") is Supply-chain Levels for Software Artifacts\n\n<img align=\"right\" src=\"https://github.com/slsa-framework/slsa/blob/main/docs/images/slsa-dancing-goose-logo.svg\" alt=\"The OpenSSF mascot, a goose in armor, strikes a pose wearing a red salsa dress\">\n\nSLSA (pronounced [\"salsa\"](https://www.google.com/search?q=how+to+pronounce+salsa)) is a security framework from source to service, giving anyone working with software a common language for increasing levels of software security and supply chain integrity. It’s how you get from safe enough to being as resilient as possible, at any link in the chain.\n\n## Learning about SLSA\n\nSee https://slsa.dev to learn about SLSA.\n\n## What's in this repo?\n\nThe primary content of this repo is the [docs/](docs/) directory, which contains\nthe core SLSA specification and sources to the [slsa.dev] website. See the\nREADME.md in that directory for instructions on how to build the site.\n\nThis repository also hosts SLSA's main [issue tracker], covering the website,\nspecification, and overall project management. Other git repositories within the\n[slsa-framework](https://github.com/slsa-framework) organization have\nrepo-specific issue trackers.\n\n## How to get involved\n\nSee https://slsa.dev/community for ways to get involved in SLSA development.\n\n## Active workstreams\n\n| Workstream | [Shepherd]\n| ---------- | ----------\n| [Build Level 4] | David A Wheeler (@david-a-wheeler)\n| [Attested Build Environments Track] | Marcela Melara (@marcelamelara), Pavel Iakovenko (@paveliak)\n| [Source Track] | Kris K (@kpk47)\n| [Version 1.1 release] | Joshua Lock (@joshuagl)\n\n[Shepherd]: CONTRIBUTING.md#workstream-lifecycle\n[Build Level 4]: https://github.com/slsa-framework/slsa/issues/977\n[Attested Build Environments Track]: https://github.com/slsa-framework/slsa/labels/build-environment-track\n[Source Track]: https://github.com/slsa-framework/slsa/issues/956\n[Version 1.1 release]: https://github.com/slsa-framework/slsa/issues/900\n\n## URL Aliases\n\nWe have several [redirect](docs/_redirects) configured on slsa.dev for\nconvenience of the team:\n\n-   https://slsa.dev/gh &rArr; SLSA GitHub repo\n    -   https://slsa.dev/gh/issues\n    -   https://slsa.dev/gh/pulls\n    -   etc...\n-   https://slsa.dev/notes &rArr; meeting notes\n    -   https://slsa.dev/notes/community\n    -   https://slsa.dev/notes/positioning\n    -   https://slsa.dev/notes/specification\n        (or [.../spec](https://slsa.dev/notes/spec))\n    -   https://slsa.dev/notes/tooling\n\n## Governance\n\nSLSA is an [OpenSSF](https://openssf.org) project. See\n[slsa-framework/governance](https://github.com/slsa-framework/governance) for\ngovernance information, including current steering committee members.\n\nTo include the steering committee on GitHub, use\n`@slsa-framework/slsa-steering-committee`.\n\n## License\n\nAll SLSA specification content contributed following adoption of the Community\nSpecification governance model is provided under the\n[Community Specification License 1.0](LICENSE.md).\n\nPre-existing portions of the SLSA specification from contributors who have not\nsubsequently contributed under the Community Specification License 1.0 following\nits adoption are provided under the\n[Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0.txt).\n\n<!-- Links -->\n\n[issue tracker]: https://github.com/slsa-framework/slsa/issues\n[slsa.dev]: https://slsa.dev\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 5.1572265625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n-   Demonstrating empathy and kindness toward other people\n-   Being respectful of differing opinions, viewpoints, and experiences\n-   Giving and gracefully accepting constructive feedback\n-   Accepting responsibility and apologizing to those affected by our mistakes,\n    and learning from the experience\n-   Focusing on what is best not just for us as individuals, but for the\n    overall community\n\nExamples of unacceptable behavior include:\n\n-   The use of sexualized language or imagery, and sexual attention or\n    advances of any kind\n-   Trolling, insulting or derogatory comments, and personal or political attacks\n-   Public or private harassment\n-   Publishing others' private information, such as a physical or email\n    address, without their explicit permission\n-   Other conduct which could reasonably be considered inappropriate in a\n    professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[conduct@openssf.org](mailto:conduct@openssf.org).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "controls",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint.sh",
          "type": "blob",
          "size": 2.4228515625,
          "content": "#!/bin/bash\n\n# Require all RFC 2119 keywords to be uppercase to avoid ambiguity.\n#\n# For lack of a better solution, we allowlist \"recommended suite\" using a\n# negative lookahead assertion.\ncheck_rfc2119() {\n  local CMD=(\n      git grep --break --heading --line-number --perl-regexp --all-match\n      -e '(RFC ?|rfc ?)2119'\n      -e '\\b([Mm]ust( not)?|[Ss]hall( not)?|[Ss]hould( not)?|[Mm]ay|[Rr]equired|[Rr]ecommended|[Oo]ptional)\\b(?![ -][Ss]uite)'\n  )\n  # Exit silently if there are no matches.\n  \"${CMD[@]}\" -q '*.md' || return 0\n  # If there are matches, print an error and then print the results afterward.\n  # NOTE: We don't just capture the command above because that ends up being\n  # more difficult to code and also messes with colors (tty detection). It's\n  # easier to just run the command twice.\n  cat >&2 <<EOF\nERROR: Do not use lowercase RFC 2119 keywords (\"must\", \"should\", etc.) because\nsuch usage is ambiguous. Use uppercase if RFC 2119 meaning is intended,\notherwise use alternate phrasing.\n\n(This check triggers on any Markdown file containing the string \"RFC 2119\".)\n\nEOF\n  \"${CMD[@]}\" '*.md' >&2\n  return 1\n}\n\n# Require all links to be relative, not absolute.\n# Allowed: [requirements](/spec/v1.0/requirements)\n#          [requirements]: /spec/v1.0/requirements\n# Disallowed: [requirements](https://slsa.dev/spec/v1.0/requirements)\n#             [requirements]: https://slsa.dev/spec/v1.0/requirements\n#\n# This uses a heuristic to detect links in Markdown files, namely\n# `https?://slsa.dev` immediately following `(` or `]: `.\ncheck_absolute_links() {\n  local FILES=':/docs/*.md'\n  local CMD=(\n      git grep --break --heading --line-number\n      -e '\\((\\|\\]: \\)https\\?://slsa.dev'\n  )\n  # Exit silently if there are no matches.\n  \"${CMD[@]}\" -q \"$FILES\" || return 0\n  # If there are matches, print an error and then print the results afterward.\n  # NOTE: We don't just capture the command above because that ends up being\n  # more difficult to code and also messes with colors (tty detection). It's\n  # easier to just run the command twice.\n  cat >&2 <<EOF\nERROR: Absolute URLs to slsa.dev are disallowed; use a relative URL instead.\nFor example, instead of [foo](https://slsa.dev/foo), use [foo](/foo).\n\nEOF\n  \"${CMD[@]}\" \"$FILES\" >&2\n  return 1\n}\n\n# Run all of the checks above and exit with non-zero status if any failed.\n# We use this structure to allow for multiple checks in the future.\nRC=0\ncheck_rfc2119 || RC=1\ncheck_absolute_links || RC=1\nexit $RC\n"
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.189453125,
          "content": "[build]\nbase = \"docs/\"\npublish = \"_site/\"  # relative to `base` directory\ncommand = \"bundle exec jekyll build\"\n\n[context.deploy-preview]\n  command = \"bundle exec jekyll build --drafts --future\"\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 24.630859375,
          "content": "{\n  \"name\": \"slsa\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"dependencies\": {\n        \"markdownlint-cli\": \"0.43.0\"\n      }\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\"\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/commander\": {\n      \"version\": \"12.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-12.1.0.tgz\",\n      \"integrity\": \"sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/deep-extend\": {\n      \"version\": \"0.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz\",\n      \"integrity\": \"sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==\",\n      \"engines\": {\n        \"node\": \">=4.0.0\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/entities\": {\n      \"version\": \"4.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/entities/-/entities-4.5.0.tgz\",\n      \"integrity\": \"sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==\",\n      \"engines\": {\n        \"node\": \">=0.12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/fb55/entities?sponsor=1\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.1.1.tgz\",\n      \"integrity\": \"sha512-TMKDUnIte6bfb5nWv7V/caI169OHgvwjb7V4WkeUvbQQdjr5rWKqHFiKWb/fcOwB+CzBT+qbWjvj+DVwRskpIg==\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.0\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"11.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-11.0.0.tgz\",\n      \"integrity\": \"sha512-9UiX/Bl6J2yaBbxKoEBRm4Cipxgok8kQYcOPEhScPwebu2I0HoQOuYdIO6S3hLuWoZgpDpwQZMzTFxgpkyT76g==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^4.0.1\",\n        \"minimatch\": \"^10.0.0\",\n        \"minipass\": \"^7.1.2\",\n        \"package-json-from-dist\": \"^1.0.0\",\n        \"path-scurry\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \"20 || >=22\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/ignore\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/ignore/-/ignore-6.0.2.tgz\",\n      \"integrity\": \"sha512-InwqeHHN2XpumIkMvpl/DCJVrAHgCsG5+cn1XlnLWGwtZBm8QJfSusItfrwx81CTp5agNZqpKU2J/ccC5nGT4A==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/ini\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-4.1.1.tgz\",\n      \"integrity\": \"sha512-QQnnxNyfvmHFIsj7gkPcYymR8Jdw/o7mp5ZFihxn6h8Ci6fh3Dx4E1gPjpQEpIuPo9XVNY/ZUwh4BPMjGyL01g==\",\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-4.0.2.tgz\",\n      \"integrity\": \"sha512-bZsjR/iRjl1Nk1UkjGpAzLNfQtzuijhn2g+pbZb98HQ1Gk8vM9hfbxeMBP+M2/UUdwj0RqGG3mlvk2MsAqwvEw==\",\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"20 || >=22\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsonc-parser\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsonc-parser/-/jsonc-parser-3.3.1.tgz\",\n      \"integrity\": \"sha512-HUgH65KyejrUFPvHFPbqOY0rsFip3Bo5wb4ngvdi1EpCYWUQDC5V+Y7mZws+DLkr4M//zQJoanu1SP+87Dv1oQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/jsonpointer\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/jsonpointer/-/jsonpointer-5.0.1.tgz\",\n      \"integrity\": \"sha512-p/nXbhSEcu3pZRdkW1OfJhpsVtW1gd4Wa1fnQc9YLiTfAjn0312eMKimbdIQzuZl9aa9xUGaRlP9T/CJE/ditQ==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/linkify-it\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/linkify-it/-/linkify-it-5.0.0.tgz\",\n      \"integrity\": \"sha512-5aHCbzQRADcdP+ATqnDuhhJ/MRIqDkZX5pyjFHRRysS8vZ5AbqGEoFIb6pYHPZ+L/OC2Lc+xT8uHVVR5CAK/wQ==\",\n      \"dependencies\": {\n        \"uc.micro\": \"^2.0.0\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"11.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-11.0.1.tgz\",\n      \"integrity\": \"sha512-CgeuL5uom6j/ZVrg7G/+1IXqRY8JXX4Hghfy5YE0EhoYQWvndP1kufu58cmZLNIDKnRhZrXfdS9urVWx98AipQ==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \"20 || >=22\"\n      }\n    },\n    \"node_modules/markdown-it\": {\n      \"version\": \"14.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdown-it/-/markdown-it-14.1.0.tgz\",\n      \"integrity\": \"sha512-a54IwgWPaeBCAAsv13YgmALOF1elABB08FxO9i+r4VFk5Vl4pKokRPeX8u5TCgSsPi6ec1otfLjdOpVcgbpshg==\",\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\",\n        \"entities\": \"^4.4.0\",\n        \"linkify-it\": \"^5.0.0\",\n        \"mdurl\": \"^2.0.0\",\n        \"punycode.js\": \"^2.3.1\",\n        \"uc.micro\": \"^2.1.0\"\n      },\n      \"bin\": {\n        \"markdown-it\": \"bin/markdown-it.mjs\"\n      }\n    },\n    \"node_modules/markdownlint\": {\n      \"version\": \"0.36.1\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint/-/markdownlint-0.36.1.tgz\",\n      \"integrity\": \"sha512-s73fU2CQN7WCgjhaQUQ8wYESQNzGRNOKDd+3xgVqu8kuTEhmwepd/mxOv1LR2oV046ONrTLBFsM7IoKWNvmy5g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"markdown-it\": \"14.1.0\",\n        \"markdownlint-micromark\": \"0.1.12\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/DavidAnson\"\n      }\n    },\n    \"node_modules/markdownlint-cli\": {\n      \"version\": \"0.43.0\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint-cli/-/markdownlint-cli-0.43.0.tgz\",\n      \"integrity\": \"sha512-6vwurKK4B21eyYzwgX6ph13cZS7hE6LZfcS8QyD722CyxVD2RtAvbZK2p7k+FZbbKORulEuwl+hJaEq1l6/hoQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"commander\": \"~12.1.0\",\n        \"glob\": \"~11.0.0\",\n        \"ignore\": \"~6.0.2\",\n        \"js-yaml\": \"^4.1.0\",\n        \"jsonc-parser\": \"~3.3.1\",\n        \"jsonpointer\": \"5.0.1\",\n        \"markdownlint\": \"~0.36.1\",\n        \"minimatch\": \"~10.0.1\",\n        \"run-con\": \"~1.3.2\",\n        \"smol-toml\": \"~1.3.1\"\n      },\n      \"bin\": {\n        \"markdownlint\": \"markdownlint.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/markdownlint-micromark\": {\n      \"version\": \"0.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/markdownlint-micromark/-/markdownlint-micromark-0.1.12.tgz\",\n      \"integrity\": \"sha512-RlB6EwMGgc0sxcIhOQ2+aq7Zw1V2fBnzbXKGgYK/mVWdT7cz34fteKSwfYeo4rL6+L/q2tyC9QtD/PgZbkdyJQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/DavidAnson\"\n      }\n    },\n    \"node_modules/mdurl\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/mdurl/-/mdurl-2.0.0.tgz\",\n      \"integrity\": \"sha512-Lf+9+2r+Tdp5wXDXC4PcIBjTDtq4UKjCPMQhKIuzpJNW0b96kVqSwW0bT7FhRSfmAiFYgP+SCRvdrDozfh0U5w==\"\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"10.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-10.0.1.tgz\",\n      \"integrity\": \"sha512-ethXTt3SGGR+95gudmqJ1eNhRO7eGEGIgYA9vnPatK4/etz2MEVDno5GMCibdMTuBMyElzIlgxMna3K94XDIDQ==\",\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"20 || >=22\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/minimist\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\",\n      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==\",\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n      \"license\": \"ISC\",\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/package-json-from-dist\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\",\n      \"license\": \"BlueOak-1.0.0\"\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-2.0.0.tgz\",\n      \"integrity\": \"sha512-ypGJsmGtdXUOeM5u93TyeIEfEhM6s+ljAhrk5vAvSx8uyY/02OvrZnA0YNGUrPXfpJMgI1ODd3nwz8Npx4O4cg==\",\n      \"license\": \"BlueOak-1.0.0\",\n      \"dependencies\": {\n        \"lru-cache\": \"^11.0.0\",\n        \"minipass\": \"^7.1.2\"\n      },\n      \"engines\": {\n        \"node\": \"20 || >=22\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/punycode.js\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/punycode.js/-/punycode.js-2.3.1.tgz\",\n      \"integrity\": \"sha512-uxFIHU0YlHYhDQtV4R9J6a52SLx28BCjT+4ieh7IGbgwVJWO+km431c4yRlREUAsAmt/uMjQUyQHNEPf0M39CA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/run-con\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/run-con/-/run-con-1.3.2.tgz\",\n      \"integrity\": \"sha512-CcfE+mYiTcKEzg0IqS08+efdnH0oJ3zV0wSUFBNrMHMuxCtXvBCLzCJHatwuXDcu/RlhjTziTo/a1ruQik6/Yg==\",\n      \"dependencies\": {\n        \"deep-extend\": \"^0.6.0\",\n        \"ini\": \"~4.1.0\",\n        \"minimist\": \"^1.2.8\",\n        \"strip-json-comments\": \"~3.1.1\"\n      },\n      \"bin\": {\n        \"run-con\": \"cli.js\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/smol-toml\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/smol-toml/-/smol-toml-1.3.1.tgz\",\n      \"integrity\": \"sha512-tEYNll18pPKHroYSmLLrksq233j021G0giwW7P3D24jC54pQ5W5BXMsQ/Mvw1OJCmEYDgY+lrzT+3nNUtoNfXQ==\",\n      \"engines\": {\n        \"node\": \">= 18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/cyyynthia\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs/node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/string-width-cjs/node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs/node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/uc.micro\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/uc.micro/-/uc.micro-2.1.0.tgz\",\n      \"integrity\": \"sha512-ARDJmphmdvUk6Glw7y9DQ2bFkKBHwQHLi2lsaH6PPmz/Ka9sFOBsBluozhDltWmnv9u/cF6Rt87znRTPV+yp/A==\"\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs/node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.14453125,
          "content": "{\n  \"scripts\": {\n    \"lint\": \"markdownlint .\",\n    \"format\": \"markdownlint . --fix\"\n  },\n  \"dependencies\": {\n    \"markdownlint-cli\": \"0.43.0\"\n  }\n}\n"
        },
        {
          "name": "readme_images",
          "type": "tree",
          "content": null
        },
        {
          "name": "relatedwork.md",
          "type": "blob",
          "size": 2.267578125,
          "content": "# Related work\n\nIn parallel to the SLSA specification, there is work to develop core formats and\ndata models. Currently this is joint work between\n[Binary Authorization](https://cloud.google.com/binary-authorization) and\n[in-toto](https://in-toto.io/) but we invite wider participation.\n\n-   [Standard attestation format](https://github.com/in-toto/attestation#in-toto-attestations)\n    to express provenance and other attributes. This will allow sources and\n    builders to express properties in a standard way that can be consumed by\n    anyone. Also includes reference implementations for generating these\n    attestations.\n-   Policy data model and reference implementation.\n\nFor a broader view of the software supply chain problem:\n\n-   [Know, Prevent, Fix: A framework for shifting the discussion around\n    vulnerabilities in open\n    source](https://security.googleblog.com/2021/02/know-prevent-fix-framework-for-shifting.html)\n-   [Threats, Risks, and Mitigations in the Open Source Ecosystem]\n\nPrior iterations of the ideas presented here:\n\n-   [Building Secure and Reliable Systems, Chapter 14: Deploying Code](https://sre.google/static/pdf/building_secure_and_reliable_systems.pdf#page=339)\n-   [Binary Authorization for Borg] - This is how Google implements the SLSA\n    idea internally.\n\nOther related work:\n\n-   [CII Best Practices Badge](https://bestpractices.coreinfrastructure.org/en)\n-   [Security Scorecards](https://github.com/ossf/scorecard) - Perhaps SLSA\n    could be implemented as an aggregation of scorecard entries, for at least\n    the checks that can be automated.\n-   [Trustmarks](https://trustmark.gtri.gatech.edu/)\n\nOther takes on provenance and CI/CD:\n\n-   [The Path to Code Provenance](https://medium.com/uber-security-privacy/code-provenance-application-security-77ebfa4b6bc5)\n-   [How to Build a Compromise-Resilient CI/CD](https://www.youtube.com/watch?v=9hCiHr1f0zM)\n\n<!-- Links -->\n\n[Threats, Risks, and Mitigations in the Open Source Ecosystem]: https://github.com/Open-Source-Security-Coalition/Open-Source-Security-Coalition/blob/master/publications/threats-risks-mitigations/v1.1/Threats%2C%20Risks%2C%20and%20Mitigations%20in%20the%20Open%20Source%20Ecosystem%20-%20v1.1.pdf\n[Binary Authorization for Borg]: https://cloud.google.com/docs/security/binary-authorization-for-borg\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.2978515625,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"config:base\", \":gitSignOff\"\n  ],\n  \"schedule\": [\"every weekend\"],\n  \"packageRules\": [\n    {\n      \"matchManagers\": [\"github-actions\"],\n      \"groupName\": \"github-actions\"\n    }\n  ],\n  \"commitMessagePrefix\": \"impl:\"\n}\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}