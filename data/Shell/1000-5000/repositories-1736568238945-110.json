{
  "metadata": {
    "timestamp": 1736568238945,
    "page": 110,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tmux-plugins/tmux-continuum",
      "stars": 3375,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0849609375,
          "content": "# Force text files to have unix eols, so Windows/Cygwin does not break them\n*.* eol=lf\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.865234375,
          "content": "# Changelog\n\n### master\n- bugfix: \"auto restore\" feature stopped working\n- bugfix: prevent race condition when auto-saving with locks (@v9v)\n- Multiple users on a system can now each run continuum on their own.\n\n### v3.1.0, 2015-03-14\n- properly quote scripts\n- bugfix: \"auto restore\" feature does not work on tmux `1.9a`\n- bugfix: do not count `tmux source-file .tmux.conf` as a tmux process (when\n  checking if other tmux server is running). Previously, this caused\n  interpolation command not to be inserted into `status-right` because `tmux\n  source-file` was falsely detected as another tmux server.\n- add `#{continuum_status}` status line interpolation\n\n### v3.0.0, 2015-02-20\n- rename the plugin from `tmux-resurrect-auto` to `tmux-continuum`\n\n### v2.2.0, 2015-02-20\n- document tmux multi-server behavior in the readme\n- do not auto-restore tmux environment if another tmux server is already running\n  (we don't want to duplicate stuff)\n- bugfixes for 'tmux auto start' OS X Terminal.app and iTerm scripts\n- prevent saving for the first 15 minutes only when plugin is sourced the first\n  time (not on subsequent sources or tmux.conf reloads)\n- do not start auto-saving if there's another tmux server running (we don't want\n  for save files from various tmux environments to override each other)\n\n### v2.1.0, 2015-02-18\n- enable \"tmux auto start\" for OS X\n- enable customizing \"tmux auto start\" for OS X\n- fix errors when creating a launchd plist file for auto-start on OS X\n\n### v2.0.0, 2015-02-15\n- enable automatic environment restore when tmux is started\n\n### v1.0.0, 2015-02-12\n- first working version\n- run the save script in the background\n- do not start saving right after tmux is started\n- add a check for tmux version to the initializer script\n- when interval is set to '0' autosave is disabled\n- bugfix: helper files not loaded\n- update readme with the instructions how to disable auto saving\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.42578125,
          "content": "### Contributing\n\nCode contributions are welcome!\n\nIf you wanna contribute a bigger feature, please open a github issue so we can\ndiscuss it together first.\n\n### Reporting a bug\n\nIf you find a bug please report it in the issues. When reporting a bug please\nattach:\n- a file symlinked to `~/.tmux/resurrect/last`.\n- your `.tmux.conf`\n- if you're getting an error paste it to a [gist](https://gist.github.com/) and\n  link it in the issue\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.025390625,
          "content": "Copyright (C) Bruno Sutic\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.443359375,
          "content": "# tmux-continuum\n\nFeatures:\n\n- continuous saving of tmux environment\n- automatic tmux start when computer/server is turned on\n- automatic restore when tmux is started\n\nTogether, these features enable uninterrupted tmux usage. No matter the computer\nor server restarts, if the machine is on, tmux will be there how you left it off\nthe last time it was used.\n\nTested and working on Linux, OSX and Cygwin.\n\n#### Continuous saving\n\nTmux environment will be saved at an interval of 15 minutes. All the saving\nhappens in the background without impact to your workflow.\n\nThis action starts automatically when the plugin is installed. Note it requires\nthe status line to be `on` to run (since it uses a hook in status-right to run).\n\n#### Automatic tmux start\n\nTmux is automatically started after the computer/server is turned on.\n\nSee the [instructions](docs/automatic_start.md) on how to enable this for your\nsystem.\n\n#### Automatic restore\n\nLast saved environment is automatically restored when tmux is started.\n\nPut `set -g @continuum-restore 'on'` in `.tmux.conf` to enable this.\n\nNote: automatic restore happens **exclusively** on tmux server start. No other\naction (e.g. sourcing `.tmux.conf`) triggers this.\n\n#### Dependencies\n\n`tmux 1.9` or higher, `bash`,\n[tmux-resurrect](https://github.com/tmux-plugins/tmux-resurrect) plugin.\n\n### Installation with [Tmux Plugin Manager](https://github.com/tmux-plugins/tpm) (recommended)\n\nPlease make sure you have\n[tmux-resurrect](https://github.com/tmux-plugins/tmux-resurrect) installed.\n\nAdd plugin to the list of TPM plugins in `.tmux.conf`:\n\n    set -g @plugin 'tmux-plugins/tmux-resurrect'\n    set -g @plugin 'tmux-plugins/tmux-continuum'\n\nHit `prefix + I` to fetch the plugin and source it. The plugin will\nautomatically start \"working\" in the background, no action required.\n\n### Manual Installation\n\nPlease make sure you have\n[tmux-resurrect](https://github.com/tmux-plugins/tmux-resurrect) installed.\n\nClone the repo:\n\n    $ git clone https://github.com/tmux-plugins/tmux-continuum ~/clone/path\n\nAdd this line to the bottom of `.tmux.conf`:\n\n    run-shell ~/clone/path/continuum.tmux\n\nReload TMUX environment with: `$ tmux source-file ~/.tmux.conf`\n\nThe plugin will automatically start \"working\" in the background, no action\nrequired.\n\n### Docs\n\n- [frequently asked questions](docs/faq.md)\n- [behavior when running multiple tmux servers](docs/multiple_tmux_servers.md) -\n  this doc is safe to skip, but you might want to read it if you're using tmux\n  with `-L` or `-S` flags\n- [automatically start tmux after the computer is turned on](docs/automatic_start.md)\n- [continuum status in tmux status line](docs/continuum_status.md)\n\n### Other goodies\n\n- [tmux-copycat](https://github.com/tmux-plugins/tmux-copycat) - a plugin for\n  regex searches in tmux and fast match selection\n- [tmux-yank](https://github.com/tmux-plugins/tmux-yank) - enables copying\n  highlighted text to system clipboard\n- [tmux-open](https://github.com/tmux-plugins/tmux-open) - a plugin for quickly\n  opening highlighted file or a url\n\n### Known Issues\n\n- In order to be executed periodically, the plugin updates the `status-right` tmux variable. In case some plugin (usually themes) overwrites the `status-right` variable, the autosave feature stops working. To fix this issue, place the plugin last in the TPM plugins list. \n\n### Reporting bugs and contributing\n\nBoth contributing and bug reports are welcome. Please check out\n[contributing guidelines](CONTRIBUTING.md).\n\n### License\n[MIT](LICENSE.md)\n"
        },
        {
          "name": "continuum.tmux",
          "type": "blob",
          "size": 2.7236328125,
          "content": "#!/usr/bin/env bash\n\nset -x\n\nCURRENT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\nsource \"$CURRENT_DIR/scripts/helpers.sh\"\nsource \"$CURRENT_DIR/scripts/variables.sh\"\nsource \"$CURRENT_DIR/scripts/shared.sh\"\n\nsave_command_interpolation=\"#($CURRENT_DIR/scripts/continuum_save.sh)\"\n\nsupported_tmux_version_ok() {\n\t\"$CURRENT_DIR/scripts/check_tmux_version.sh\" \"$SUPPORTED_VERSION\"\n}\n\nhandle_tmux_automatic_start() {\n\t\"$CURRENT_DIR/scripts/handle_tmux_automatic_start.sh\"\n}\n\nanother_tmux_server_running() {\n\tif just_started_tmux_server; then\n\t\tanother_tmux_server_running_on_startup\n\telse\n\t\t# script loaded after tmux server start can have multiple clients attached\n\t\t[ \"$(number_tmux_processes_except_current_server)\" -gt \"$(number_current_server_client_processes)\" ]\n\tfi\n}\n\ndelay_saving_environment_on_first_plugin_load() {\n\tif [ -z \"$(get_tmux_option \"$last_auto_save_option\" \"\")\" ]; then\n\t\t# last save option not set, this is first time plugin load\n\t\tset_last_save_timestamp\n\tfi\n}\n\nadd_resurrect_save_interpolation() {\n\tlocal status_right_value=\"$(get_tmux_option \"status-right\" \"\")\"\n\t# check interpolation not already added\n\tif ! [[ \"$status_right_value\" == *\"$save_command_interpolation\"* ]]; then\n\t\tlocal new_value=\"${save_command_interpolation}${status_right_value}\"\n\t\tset_tmux_option \"status-right\" \"$new_value\"\n\tfi\n}\n\njust_started_tmux_server() {\n\tlocal tmux_start_time\n\ttmux_start_time=\"$(tmux display-message -p -F '#{start_time}')\"\n\tlocal restore_max_delay\n\trestore_max_delay=\"$(get_tmux_option \"$auto_restore_max_delay_option\" \"${auto_restore_max_delay_default}\")\"\n\t[ \"$tmux_start_time\" == \"\" ] || [ \"$tmux_start_time\" -gt \"$(($(date +%s)-${restore_max_delay}))\" ]\n}\n\nstart_auto_restore_in_background() {\n\t\"$CURRENT_DIR/scripts/continuum_restore.sh\" &\n}\n\nupdate_tmux_option() {\n\tlocal option=\"$1\"\n\tlocal option_value=\"$(get_tmux_option \"$option\")\"\n\t# replace interpolation string with a script to execute\n\tlocal new_option_value=\"${option_value/$status_interpolation_string/$status_script}\"\n\tset_tmux_option \"$option\" \"$new_option_value\"\n}\n\nmain() {\n\tif supported_tmux_version_ok; then\n\t\thandle_tmux_automatic_start\n\n\t\t# Advanced edge case handling: start auto-saving only if this is the\n\t\t# only tmux server. We don't want saved files from more environments to\n\t\t# overwrite each other.\n\t\tif ! another_tmux_server_running; then\n\t\t\t# give user a chance to restore previously saved session\n\t\t\tdelay_saving_environment_on_first_plugin_load\n\t\t\tadd_resurrect_save_interpolation\n\t\tfi\n\n\t\tif just_started_tmux_server; then\n\t\t\tstart_auto_restore_in_background\n\t\tfi\n\n\t\t# Put \"#{continuum_status}\" interpolation in status-right or\n\t\t# status-left tmux option to get current tmux continuum status.\n\t\tupdate_tmux_option \"status-right\"\n\t\tupdate_tmux_option \"status-left\"\n\tfi\n}\nmain\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}