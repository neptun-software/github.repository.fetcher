{
  "metadata": {
    "timestamp": 1736568782511,
    "page": 911,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "go-modules-by-example/index",
      "stars": 1089,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bin",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0234375,
          "content": "/.bin\n/.gopath\n/scratch\n"
        },
        {
          "name": "000_simple_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "001_go_modules_tour",
          "type": "tree",
          "content": null
        },
        {
          "name": "002_using_gopkg_in",
          "type": "tree",
          "content": null
        },
        {
          "name": "003_migrate_buffalo",
          "type": "tree",
          "content": null
        },
        {
          "name": "004_echo_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "005_old_go",
          "type": "tree",
          "content": null
        },
        {
          "name": "006_not_yet_go_module",
          "type": "tree",
          "content": null
        },
        {
          "name": "007_old_code_replace",
          "type": "tree",
          "content": null
        },
        {
          "name": "008_vendor_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "009_submodules",
          "type": "tree",
          "content": null
        },
        {
          "name": "010_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "011_using_gohack",
          "type": "tree",
          "content": null
        },
        {
          "name": "012_modvendor",
          "type": "tree",
          "content": null
        },
        {
          "name": "013_cyclic",
          "type": "tree",
          "content": null
        },
        {
          "name": "014_mod_graph",
          "type": "tree",
          "content": null
        },
        {
          "name": "015_semantic_import_versioning",
          "type": "tree",
          "content": null
        },
        {
          "name": "016_major_version_repo_strategy",
          "type": "tree",
          "content": null
        },
        {
          "name": "017_using_gobin",
          "type": "tree",
          "content": null
        },
        {
          "name": "018_go_list_mod_graph_why",
          "type": "tree",
          "content": null
        },
        {
          "name": "019_apidiff",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.9638671875,
          "content": "### How is a guide structured?\n\nA guide comprises a README.md and an accompanying bash script. The README is the human readable bit and the script acts\nas a reproducible set of steps (that can be tested) for the guide. For example, the vgo tour has been rewritten as a _Go\nmodules by example_ guide:\n\n<!-- __TEMPLATE: ls 001_go_modules_tour\n```\n$ {{.Cmd}}\n{{.Out -}}\n```\n-->\n```\n$ ls 001_go_modules_tour\nREADME.md\nscript.sh\n```\n<!-- END -->\n\nscript.sh contains, as its name suggests, the overall script for the guide. It includes a pre-amble that defines a\nnumber of helper functions for testing the script, followed by the header:\n\n```\n# **START**\n```\n\nThis marks the start of the script.\n\nWhat follows are a number of optionally commented \"blocks\". For example, the following block is labelled `\"install tools\"`\nand comprises all the contiguous lines that follow the special `# block:` comment:\n\n```\n# block: install tools\ngo install example.com/blah\nassert \"$? -eq 1\" $LINENO\n```\n\nBy default, each command is assumed to have an exit code of `0`, unless it is followed by an `assert` line, like above,\nthat asserts otherwise. In this respect, the script behaves much like `set -e`.\n\nThe corresponding README.md acts as a template for the guide itself, but crucially it can reference these blocks to\ninclude the commands themselves and/or their output, e.g.:\n\n    ```\n    {{PrintBlock \"install tools\" -}}\n    ```\n\nLook at the raw [Go modules by example tour README.md](https://raw.githubusercontent.com/go-modules-by-example/index/master/001_go_modules_tour/README.md)\nand [corresponding script](001_go_modules_tour/script.sh) for more examples.\n\n### Getting started: regenerating a guide\n\nWhat follows assumes you have [Docker](https://docs.docker.com/install/) installed.\n\nThe following environment variables must also be set:\n\n```bash\nGITHUB_USERNAME    # your Github username\nGITHUB_PAT         # a personal access token with public_repo scope\nGITHUB_ORG         # an org/user account where forks, examples will be created\nGITHUB_ORG_ARCHIVE # an org/user account where old forks, examples etc will be moved\n```\n\nIt's probably a good idea to [create a new personal access token](https://github.com/settings/tokens/new) specifically\nfor your \"fork\" of \"Go Modules by Example\" - you will need `public_repo` scope.\n\nCreating a [new GitHub organisation](https://github.com/organizations/new) will allow you to segregate the\nexamples/forks created by your guides (instead of cluttering your personal account). This corresponds to the\n`GITHUB_ORG` environment variable above. Similarly, create another organisation that will act as the archive,\n`GITHUB_ORG_ARCHIVE`.\n\n<!-- __JSON: sh -c \"gobin -m -run myitcv.io/cmd/egrunner -df -v=${DOLLAR}PWD:/self -df -v=/var/run/docker.sock:/var/run/docker.sock -df -v=/tmp:/tmp contributing.sh\" # LONG ONLINE\n\nVerify that you can pull the required image:\n\n```\n{{PrintBlock \"docker pull\" -}}\n```\n\nClone this repo:\n\n```\n{{PrintBlock \"clone\" -}}\n```\n\nCheck that you can use `egrunner`:\n\n```\n{{PrintBlockOut \"echo egrun\" -}}\n```\n\nshould give the output:\n\n```\n{{PrintBlockOut \"egrun\" -}}\n```\n\nFinally check you can use `mdreplace`:\n\n```\n{{PrintBlock \"mdrun\" -}}\n```\n\n-->\n\nVerify that you can pull the required image:\n\n```\n$ docker pull golang\nUsing default tag: latest\nlatest: Pulling from library/golang\nDigest: sha256:05f8812f1a3e1c9ce44c5a0ba462d1a6d75a0b89abbb2f86b2e02efeda85ce1e\nStatus: Image is up to date for golang:latest\n```\n\nClone this repo:\n\n```\n$ git clone https://github.com/go-modules-by-example/index\nCloning into 'index'...\n$ cd index\n```\n\nCheck that you can use `egrunner`:\n\n```\n$ gobin -m -run myitcv.io/cmd/egrunner -out std ./000_simple_example/script.sh\n```\n\nshould give the output:\n\n```\ngo: creating new go.mod: module example.com/simple\n$ cd /home/gopher\n$ mkdir simple\n$ cd simple\n$ go mod init example.com/simple\n$ go list -m\nexample.com/simple\n```\n\nFinally check you can use `mdreplace`:\n\n```\n$ gobin -m -run myitcv.io/cmd/mdreplace -w -long -online ./000_simple_example/README.md\n```\n\n<!-- END -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.45703125,
          "content": "Copyright (c) 2018 Paul Jolly <paul@myitcv.io>. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.7353515625,
          "content": "### Go modules by example\n\n_Go modules by example_ is a series of work-along guides that look to help explain how [Go\nmodules](https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more) work and how to get things done. They are\ndesigned to complement the official Go documentation and the [Go modules\nwiki](https://github.com/golang/go/wiki/Modules).\n\nThe guides are being released in no particular order and will instead be curated into a more cogent order/structure (in\nconjunction with the modules wiki) at a later date.\n\nThe release-ordered list of guides:\n\n* [How to use submodules](009_submodules/README.md)\n* [Using modules to manage\n  vendor](008_vendor_example/README.md)\n* [Creating a module download cache\n  \"vendor\"](012_modvendor/README.md)\n* [Using `gohack` to \"hack\" on\n  dependencies](011_using_gohack/README.md)\n* [Migrating Buffalo from `dep` to go\n  modules](003_migrate_buffalo/README.md)\n* [Tools as dependencies](010_tools/README.md)\n* [Cyclic module dependencies](013_cyclic/README.md)\n* [Visually analysing module dependencies](014_mod_graph/README.md)\n* [Semantic import versioning by example](015_semantic_import_versioning/README.md)\n* [Options for repository structure with multiple major versions](016_major_version_repo_strategy/README.md)\n* [Using `gobin` to install/run tools](017_using_gobin/README.md)\n* [Using `go list`, `go mod why` and `go mod graph`](018_go_list_mod_graph_why/README.md)\n* [Using `apidiff` to determine API compatibility](019_apidiff/README.md)\n\nWIP guides:\n\n* [The go modules tour](001_go_modules_tour/README.md) (a\n  rewrite of the original vgo tour)\n* [Using go modules with\n  gopkg.in](002_using_gopkg_in/README.md)\n* [Using a package that has not been converted to go\n  modules](004_echo_example/README.md)\n* [Example of backwards compatibility in Go 1.10 with semantic import\n  paths](005_old_go/README.md)\n* [Another example of package/project that has not yet been converted to a\n  module](006_not_yet_go_module/README.md)\n* [Forking a project which has not yet been converted to a Go\n  module](007_old_code_replace/README.md)\n* ...\n\nWikis:\n\n* [FAQ](https://github.com/go-modules-by-example/index/wiki/FAQ)\n* [TODO](https://github.com/go-modules-by-example/index/wiki/TODO)\n* [Feedback](https://github.com/go-modules-by-example/index/wiki/Feedback)\n\n### Contributing\n\nSee [Contributing](CONTRIBUTING.md).\n\n### Caveats\n\nThis project is work-in-progress. Feedback/PRs welcome.\n\n### Credits\n\nWith particular thanks (in no particular order) to:\n\n* [ajstarks](https://github.com/ajstarks)\n* [bcmills](https://github.com/bcmills)\n* [marwan-at-work](https://github.com/marwan-at-work)\n* [mvdan](https://github.com/mvdan)\n* [rogpeppe](https://github.com/rogpeppe)\n* [rsc](https://github.com/rsc)\n* [thepudds](https://github.com/thepudds)\n"
        },
        {
          "name": "common.sh",
          "type": "blob",
          "size": 0.736328125,
          "content": "#!/usr/bin/env bash\n\n# this is a useful pre-amble to put in a script to help with testing via docker\n# run directly\n\nset -u\nset -x\n\nassert()\n{\n  E_PARAM_ERR=98\n  E_ASSERT_FAILED=99\n\n  if [ -z \"$2\" ]\n  then\n    exit $E_PARAM_ERR\n  fi\n\n  lineno=$2\n\n  if [ ! $1 ]\n  then\n    echo \"Assertion failed:  \\\"$1\\\"\"\n    echo \"File \\\"$0\\\", line $lineno\"\n    exit $E_ASSERT_FAILED\n  fi\n}\n\nensure_github_repo()\n{\n\t# TODO improve this\n\tcat <<EOD | curl -s -H \"Content-Type: application/json\" -u $GITHUB_USERNAME:$GITHUB_PAT --request POST -d @- https://api.github.com/user/repos > /dev/null\n{\n  \"name\": \"$1\"\n}\nEOD\n\n\tcurl -s -H \"Content-Type: application/json\" -u $GITHUB_USERNAME:$GITHUB_PAT https://api.github.com/repos/$GITHUB_USERNAME/$1 | grep -q '\"id\"'\n}\n\n# START\n"
        },
        {
          "name": "contributing.sh",
          "type": "blob",
          "size": 1.0595703125,
          "content": "#!/usr/bin/env bash\n\n# **START**\n\nexport GOPATH=$HOME\nexport PATH=$GOPATH/bin:$PATH\necho \"machine github.com login $GITHUB_USERNAME password $GITHUB_PAT\" >> $HOME/.netrc\necho \"\" >> $HOME/.netrc\necho \"machine api.github.com login $GITHUB_USERNAME password $GITHUB_PAT\" >> $HOME/.netrc\ngit config --global user.email \"$GITHUB_USERNAME@github.com\"\ngit config --global user.name \"$GITHUB_USERNAME\"\ngit config --global advice.detachedHead false\ngit config --global push.default current\n\n# block: docker pull\ndocker pull golang\n\n# block: clone\ngit clone https://github.com/go-modules-by-example/index\ncd index\n\n# behind the scenes we switch to self in order that we\n# utilise the current version, not the latest remote commit\ncd /self\n\nexport egrun=\"gobin -m -run myitcv.io/cmd/egrunner -df -v=/tmp:/tmp -out std ./000_simple_example/script.sh\"\n\n# block: echo egrun\necho \"\\$ $(echo $egrun | sed -e 's+ -df -v=/tmp:/tmp++')\"\n\n# egrunner_envsubst: +egrun\n\n# block: egrun\n$egrun | head -n -1\n\n# block: mdrun\ngobin -m -run myitcv.io/cmd/mdreplace -w -long -online ./000_simple_example/README.md\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.0908203125,
          "content": "module myitcv.io/go-modules-by-example\n\nrequire myitcv.io v0.0.0-20190513145353-42487431adac\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 6.4638671875,
          "content": "github.com/Quasilyte/inltest v0.7.0/go.mod h1:dtucUPCtVvdlfhpampYI/MiobiJL3sUD/58/lgeWwFs=\ngithub.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=\ngithub.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/google/go-github v17.0.0+incompatible h1:N0LgJ1j65A7kfXrZnUDaYCs/Sf4rEjNlfyDHW9dolSY=\ngithub.com/google/go-github v17.0.0+incompatible/go.mod h1:zLgOLi98H3fifZn+44m+umXrS52loVEgC2AApnigrVQ=\ngithub.com/google/go-github/v21 v21.0.0 h1:tn4/tmCgPAsezJFwZcMnE7U0R9/AtKRBGX4s4LFdDzI=\ngithub.com/google/go-github/v21 v21.0.0/go.mod h1:RNbKQQDOg+lBuuu5l/v0joCrygzKEexxDEwaleXEHxA=\ngithub.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=\ngithub.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=\ngithub.com/gopherjs/gopherjs v0.0.0-20180628210949-0892b62f0d9f/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/jsbuiltin v0.0.0-20180426082241-50091555e127/go.mod h1:7X1acUyFRf+oVFTU6SWw9mnb57Vxn+Nbh8iPbKg95hs=\ngithub.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=\ngithub.com/jteeuwen/go-bindata v3.0.7+incompatible/go.mod h1:JVvhzYOiGBnFSYRyV00iY8q7/0PThjIYav1p9h5dmKs=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/myitcv/gobin v0.0.8/go.mod h1:ls+aW1M2tnZ+I/ANd/jBlqZpG6IY3Kbdq1q++Sb1Lak=\ngithub.com/myitcv/vbash v0.0.2/go.mod h1:8R1aaW5pjRay73Apauo2tzbNXizT9rViXl1jl5+/Xps=\ngithub.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=\ngithub.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=\ngithub.com/rogpeppe/go-internal v1.0.1-alpha.6/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.2.1/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/rogpeppe/go-internal v1.2.2/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/russross/blackfriday v1.5.1/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=\ngithub.com/sclevine/agouti v3.0.0+incompatible/go.mod h1:b4WX9W9L1sfQKXeJf1mUTLZKJ48R1S7H23Ji7oFO5Bw=\ngolang.org/x/crypto v0.0.0-20180820150726-614d502a4dac/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20181106171534-e4dc69e5b2fd/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd h1:nTDtHvHSdCn1m6ITfMRqtOd/9+7a3s8RBNOZ3eYZzJA=\ngolang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd h1:HuTn7WObtcDo9uEEU7rEqL0jYthdXAmZ6PP+meazmaU=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20181017192945-9dcd33a902f4 h1:99CA0JJbUX4ozCnLon680Jc9e0T1i8HCaLVJMwtI8Hc=\ngolang.org/x/oauth2 v0.0.0-20181017192945-9dcd33a902f4/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f h1:wMNYb4v58l5UBM7MYRLPG6ZhfOqbKu7X5eyFl8ZhKvA=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f h1:Bl/8QSvNqXvPGPGXa2z5xUTmV7VDcZyvRZ+QQXkXTZQ=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sys v0.0.0-20180824143301-4910a1d54f87/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/tools v0.0.0-20190308142131-b40df0fb21c3/go.mod h1:25r3+/G6/xytQM8iWZKq3Hn0kr0rgFKPUNVEL/dr3z4=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.2.0 h1:S0iUepdCWODXRvtE+gcRDd15L+k+k1AiHlMiMjefH24=\ngoogle.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=\ngopkg.in/fsnotify/fsnotify.v1 v1.4.7/go.mod h1:Fyux9zXlo4rWoMSIzpn9fDAYjalPqJ/K1qJ27s+7ltE=\ngopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=\ngopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\nhonnef.co/go/js/dom v0.0.0-20180323154144-6da835bec70f/go.mod h1:sUMDUKNB2ZcVjt92UnLy3cdGs+wDAcrPdV3JP6sVgA4=\nhonnef.co/go/js/util v0.0.0-20150216223935-96b8dd9d1621/go.mod h1:WrAIh8rWfzvMdLVgQ7vpu7aYbDAZ3rHLxydzv2VkL/w=\nhonnef.co/go/js/xhr v0.0.0-20150307031022-00e3346113ae/go.mod h1:QwoYXdHZpuR080H32s5jqyk7zh/k/U9bDFg2g8OMmOM=\nmvdan.cc/sh v2.6.0+incompatible h1:BLDuJ+D75OCaBF7W70+2oALi8aKAjcAiDBNmmwR8BQA=\nmvdan.cc/sh v2.6.0+incompatible/go.mod h1:IeeQbZq+x2SUGBensq/jge5lLQbS3XT2ktyp3wrt4x8=\nmvdan.cc/sh/v3 v3.0.0-alpha1/go.mod h1:hAMDEHexA8ZIIH2yeItRcTq3T2he5Ly8CVcsTst6QT8=\nmyitcv.io v0.0.0-20190513145353-42487431adac h1:94JQTpo4ngljuUAXjPmUZKng063cI/0E62pCOeClJr0=\nmyitcv.io v0.0.0-20190513145353-42487431adac/go.mod h1:0T8CN0qeKxmx8+r1ZQsSiDgU6BrJny7PTiIF9fmIBkk=\n"
        },
        {
          "name": "tools.go",
          "type": "blob",
          "size": 0.1259765625,
          "content": "// +build tools\n\npackage tools\n\nimport (\n\t_ \"myitcv.io/cmd/egrunner\"\n\t_ \"myitcv.io/cmd/githubcli\"\n\t_ \"myitcv.io/cmd/mdreplace\"\n)\n"
        }
      ]
    }
  ]
}