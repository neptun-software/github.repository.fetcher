{
  "metadata": {
    "timestamp": 1736568305062,
    "page": 208,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "markshust/docker-magento",
      "stars": 2616,
      "defaultBranch": "release/next",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01953125,
          "content": "/docs export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 52.5947265625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [48.0.1] - 2024-12-07\n\n### Fixed\n- Unit test scripts [PR #1263](https://github.com/markshust/docker-magento/pull/1263)\n\n## [48.0.0] - 2024-11-27\n\nThis release introduces significant enhancements to the development environment, including a new PHP 8.4 Docker image for early adopters and developers wanting to test future compatibility. The MageOS support has been substantially improved, and a new RabbitMQ 3.13 image has been added. Several quality-of-life improvements have been implemented, such as better unit testing tools, enhanced SSL generation for multi-site setups, and comprehensive documentation updates. A notable breaking change is the shift in the download command syntax - it now expects the edition type before the version number (ex: `bin/download community 2.4.7-p3` instead of the previous `bin/download 2.4.7 community`). Additionally, all Docker images have been updated to maintain parity with current Magento version requirements.\n\n### Added\n- New PHP 8.4 Docker image for development purposes [PR #1252](https://github.com/markshust/docker-magento/pull/1252)\n- New RabbitMQ 3.13 Docker image [PR #1252](https://github.com/markshust/docker-magento/pull/1252)\n- Backend login credentials and 2FA setup instructions to README [PR #1205](https://github.com/markshust/docker-magento/pull/1205)\n- PHP FTP extension to Docker setup [PR #1210](https://github.com/markshust/docker-magento/pull/1210)\n- PhpMyAdmin credentials to README [PR #1212](https://github.com/markshust/docker-magento/pull/1212)\n- `bin/test` helper scripts to execute unit tests [PR #1157](https://github.com/markshust/docker-magento/pull/1157)\n- `bin/ece-patches` command [PR #1171](https://github.com/markshust/docker-magento/pull/1171)\n- rsync to PHP images for Deployer support [PR #1163](https://github.com/markshust/docker-magento/pull/1163)\n- PhpMyAdmin for Linux [PR #1177](https://github.com/markshust/docker-magento/pull/1177)\n\n### Updated\n- Improved MageOS support [PR #1246](https://github.com/markshust/docker-magento/pull/1246)\n- System requirements helper script overhauled for easier use and maintenance [PR #1242](https://github.com/markshust/docker-magento/pull/1242)\n- Supported versions in `bin/check-dependencies` script [PR #1175](https://github.com/markshust/docker-magento/pull/1175)\n- Docker images for Magento version parity [PR #1252](https://github.com/markshust/docker-magento/pull/1252)\n- Bumped docker/build-push-action from 5 to 6 [PR #1174](https://github.com/markshust/docker-magento/pull/1174)\n- GitHub Actions to use release/next branch [PR #1254](https://github.com/markshust/docker-magento/pull/1254)\n- Speed improvement for `bin/xdebug` command [PR #1245](https://github.com/markshust/docker-magento/pull/1245)\n\n### Fixed\n- Code duplication [PR #1141](https://github.com/markshust/docker-magento/pull/1141)\n- Empty directory check moved to top of scripts [PR #1143](https://github.com/markshust/docker-magento/pull/1143)\n- Elasticsearch container issues [PR #1166](https://github.com/markshust/docker-magento/pull/1166)\n- Multi-site SSL generation support [PR #1200](https://github.com/markshust/docker-magento/pull/1200)\n- Various typos in files [PR #1238](https://github.com/markshust/docker-magento/pull/1238)\n\n## [47.0.1] - 2024-04-25\n\n### Fixed\n- \"The current directory is not empty\" message appearing on new install [PR #1141](https://github.com/markshust/docker-magento/pull/1141).\n\n## [47.0.0] - 2024-04-25\n\n### Added\n- Check to ensure directory does not already exist in project directory [PR #1127](https://github.com/markshust/docker-magento/pull/1127).\n\n### Updated\n- Remove obsolete version directive from docker compose files [PR #1125](https://github.com/markshust/docker-magento/pull/1125).\n- Predefined version from 2.4.6-p4 to 2.4.7 [PR #1128](https://github.com/markshust/docker-magento/pull/1128).\n- Integration testing configuration to use OpenSearch [PR #1131](https://github.com/markshust/docker-magento/pull/1131).\n\n### Fixed\n- SSL cert generation when domain has a port included [PR #1136](https://github.com/markshust/docker-magento/pull/1136).\n- OpenSearch container fails to start due to memory heap size configuration [PR #1137](https://github.com/markshust/docker-magento/pull/1137).\n\n## [46.1.1] - 2024-04-16\n\n### Fixed\n- Xdebug 3.3.1 and Blackfire PHP extension incompatibility [PR #1122](https://github.com/markshust/docker-magento/pull/1122).\n\n## [46.1.0] - 2024-04-13\n\n### Added\n- New `bin/blackfire` script to enable, disable, or check status of Blackfire extension [PR #1115](https://github.com/markshust/docker-magento/pull/1115).\n- Swool PHP extension to all PHP Docker images to support Adobe Commerce GraphQL Application Layer [PR #1114](https://github.com/markshust/docker-magento/pull/1114).\n\n### Updated\n- Supported versions in the `bin/check-dependencies` script [PR #1112](https://github.com/markshust/docker-magento/pull/1112).\n\n### Fixed\n- Random 502 Bad Gateway errors when Xdebug is enabled [PR #1085](https://github.com/markshust/docker-magento/pull/1085), [PR #1116](https://github.com/markshust/docker-magento/pull/1116).\n\n## [46.0.0] - 2024-04-09\n\n### Added\n- New `bin/check-dependencies` script which provides helpful recommendations for dependencies tailored to the chosen Magento version [PR #1018](https://github.com/markshust/docker-magento/pull/1018/files).\n- New `nginx` Docker images for versions 1.22, 1.24 [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `php-fpm` 8.3 Docker image for Magento 2.4.7 support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `opensearch` 2.12 Docker image for Magento 2.4.7 support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `elasticsearch` 7.16 and 8.11 Docker images for previous Magento versions support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `elasticsearch` 8.13 Docker image for Magento 2.4.7 support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `rabbitmq` 3.8 Docker image for previous Magento versions support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n- New `rabbitmq` 3.12 Docker image for Magento 2.4.7 support [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n\n### Updated\n- Link `php-fpm` Docker images to officially compatible Composer versions [PR #1019](https://github.com/markshust/docker-magento/pull/1109).\n\n## [45.1.0] - 2024-03-19\n\n### Added\n- New `bin/configure-linux` helper script to assist with easier Linux setup [PR #1016](https://github.com/markshust/docker-magento/pull/1016).\n- Linux dependencies to README [PR #1050](https://github.com/markshust/docker-magento/pull/1050).\n- Added `bin/create-user` script to allow for easy creation of Magento admin user & customer [PR #1040](https://github.com/markshust/docker-magento/pull/1040).\n- Descriptions for all missing helper scripts to README and Makefile [PR #1096](https://github.com/markshust/docker-magento/pull/1096).\n\n### Updated\n- `bin/docker-stats` to simplified output [PR #1083](https://github.com/markshust/docker-magento/pull/1083).\n- Pinned Composer version for increased compatibility with latest Magento versions [PR #1090](https://github.com/markshust/docker-magento/pull/1090).\n\n## [45.0.0] - 2024-02-25\n\n### Added\n- New PHP images based on bookworm, pegging pecl libraries for more predictability [PR #1071](https://github.com/markshust/docker-magento/pull/1071).\n- New PHP 8.3 image [PR #1071](https://github.com/markshust/docker-magento/pull/1071).\n- PHP SPX profiler to enhance performance monitoring capabilities [PR #533](https://github.com/markshust/docker-magento/pull/533).\n- Support for the `strace` command, providing developers with powerful tools for diagnosing and troubleshooting [PR #1033](https://github.com/markshust/docker-magento/pull/1033).\n- Ability for xdebug to listen to Magento CLI commands [PR #846](https://github.com/markshust/docker-magento/pull/846).\n- Abstraction of setup script into two scripts [PR #874](https://github.com/markshust/docker-magento/pull/874).\n- New Docker image for OpenSearch 2.4 [PR #858](https://github.com/markshust/docker-magento/pull/858).\n- Mage-OS mirror support [PR #835](https://github.com/markshust/docker-magento/pull/835).\n- New `bin/log` command to view Magento logs in real-time [PR #1060](https://github.com/markshust/docker-magento/pull/1060).\n- New `bin/docker-stats` command for container monitoring [PR #533](https://github.com/markshust/docker-magento/pull/533).\n- New `bin/setup-pwa-studio-sampledata` command to install Magento PWA Studio sample data, facilitating easier PWA development setups [#1045](https://github.com/markshust/docker-magento/pull/1045).\n- New `bin/deploy` script to deply Magento in pipeline [PR #926](https://github.com/markshust/docker-magento/pull/926).\n- New `bin/magento-version` script which outputs current Magento version [PR #931](https://github.com/markshust/docker-magento/pull/931).\n- New `bin/spx` script to enable or disable SPX [PR #1074](https://github.com/markshust/docker-magento/pull/1074).\n\n### Updated\n- Node.js to version 20.x LTS [PR #1071](https://github.com/markshust/docker-magento/pull/1071).\n- Support for Magento 2.4.6-p4, updating the default Magento version in the Docker setup to align with the latest Magento release [PR #1063](https://github.com/markshust/docker-magento/pull/1063).\n- Continuous integration and deployment processes were refined to include updates and to maintain dependencies through GitHub Actions and Dependabot, ensuring that the project's dependencies remain up to date and secure [PR #1032](https://github.com/markshust/docker-magento/pull/1032).\n- Rework docker compose script to allow future extensibility [PR #1002](https://github.com/markshust/docker-magento/pull/1002).\n- Replaced phpmyadmin Docker image with amd64-compatible image [PR #939](https://github.com/markshust/docker-magento/pull/939).\n- Set default Magento 2.4.6 search engine to OpenSearch [PR #937](https://github.com/markshust/docker-magento/pull/937).\n- Use `/usr/bin/env` to discover bash location [PR #879](https://github.com/markshust/docker-magento/pull/879).\n\n### Fixed\n- Execution rights in scripts [PR #1039](https://github.com/markshust/docker-magento/pull/1039).\n- Bug with Elasticsearch documentation [PR #1014](https://github.com/markshust/docker-magento/pull/1014).\n- Elasticsearch JAVA OPTS issue with containers not starting at startup [PR #938](https://github.com/markshust/docker-magento/pull/938).\n- Unexpected Ubuntu 18.04 startup failure [PR #310](https://github.com/markshust/docker-magento/pull/310).\n- Failing `npm install` of puppeteer due to missing Chromium [PR #848](https://github.com/markshust/docker-magento/pull/848).\n\n## [44.0.0] - 2022-12-05\n\n### Added\n- Allow more variables for the PhpStan analyse script [PR #789](https://github.com/markshust/docker-magento/pull/789).\n- New bin/docker-compose script to abstract away calls to docker-compose [PR #787](https://github.com/markshust/docker-magento/pull/787).\n- Support for Docker Compose V2 (\"docker compose\" and backwards-compatibility for \"docker-compose\") [PR #787](https://github.com/markshust/docker-magento/pull/787).\n- New Docker Compose healthcheck [PR #384](https://github.com/markshust/docker-magento/pull/384).\n- MageOS support [4591b68c](https://github.com/markshust/docker-magento/commit/4591b68c46667d4015e728392b813ec42939ae67).\n- Documentation to recover from failed install [#816](https://github.com/markshust/docker-magento/issues/816).\n- OpenSearch support [PR #680](https://github.com/markshust/docker-magento/pull/680).\n- New build for Elasticsearch 7.17 [c45f05c3](https://github.com/markshust/docker-magento/commit/c45f05c370fe1347afa35117511794f736710f71).\n\n### Updated\n- Rename docker-compose.yml to compose.yaml (preferred) [PR #799](https://github.com/markshust/docker-magento/pull/799).\n- Readme file with new info on configuring Xdebug in WSL2 environments [PR #810](https://github.com/markshust/docker-magento/pull/810).\n\n### Fixed\n- Lowered RAM check on setup [#720](https://github.com/markshust/docker-magento/issues/720).\n\n### Removed\n- Deprecated PHP 7.4 due to all versions < Magento 2.4.4 reaching EOL [3a64324e](https://github.com/markshust/docker-magento/commit/3a64324e08f3d15e3c3ce86b5c0f5e7ebb635a75).\n\n## [43.2.0] - 2022-09-13\n\n### Added\n- Added phpmyadmin to docker-compose.dev.yml file [PR #772](https://github.com/markshust/docker-magento/pull/772).\n\n## [43.1.0] - 2022-09-13\n\n### Added\n- Support for Grunt + LiveReload [#430](https://github.com/markshust/docker-magento/issues/430).\n\n## [43.0.0] - 2022-05-26\n\n### Added\n- Fall back to PHP 7.4 for Magento versions older than 2.4.4 [PR #685](https://github.com/markshust/docker-magento/pull/685) [PR #710](https://github.com/markshust/docker-magento/pull/710).\n- Checksum flag to rsync in `bin/update` [PR #707](https://github.com/markshust/docker-magento/pull/707).\n- New `bin/analyse` command to statically analyse code with PHPStan [8601c2f7](https://github.com/markshust/docker-magento/commit/8601c2f73cc6f1d2534f017c8f31eec49b0e00fc).\n- `node` & `npm` to PHP images [#694](https://github.com/markshust/docker-magento/issues/694).\n\n### Updated\n- Magento download to default to 2.4.4 [151dc09a](https://github.com/markshust/docker-magento/commit/151dc09ae95a5cff75598c366f3d77efa58098d5)\n- Prevent domain duplication in `/etc/hosts` [PR #693](https://github.com/markshust/docker-magento/pull/693).\n- Replace buster images with bullseye to properly fix Apple M1 5-sec delay [#636](https://github.com/markshust/docker-magento/issues/636).\n\n## [42.0.0] - 2022-04-14\n\nThis release brings streamlined PHP Docker images (saving 300MB on previous images), a brand new PHP 8.1 image with full support for Magento 2.4.4, a proper Elasticsearch health check during setup, and ability to detect memory assigned to Docker on startup (which will prevent failed installations). Elasticsearch, Redis & RabbitMQ Docker images have also all been updated to their recently supported Magento versions.\n\n### Added\n- New Docker image for PHP 8.1 [903f9867](https://github.com/markshust/docker-magento/commit/903f9867aa130100267290feaa03b1b48b157337).\n- New Docker image for Elasticsearch 7.16 [f70a1565](https://github.com/markshust/docker-magento/commit/f70a1565bddd56a3abe8df52d4122dbcdc85d98a).\n- New Docker image for RabbitMQ 3.9 [7711365c](https://github.com/markshust/docker-magento/commit/7711365cb73aab685859e3e34fc23774937a4e2a).\n- Elasticsearch health check timeout when installing Magento [#675](https://github.com/markshust/docker-magento/pull/675).\n- Ability to detect if memory usage is too low [#527](https://github.com/markshust/docker-magento/issues/527).\n\n### Updated\n- PHP 7.4 Docker image for parity with PHP 8.1 image [481097b3](https://github.com/markshust/docker-magento/commit/481097b3f9184d19deb102b901b43af906ebb256).\n\n### Removed\n- ionCube support from PHP 7 image in order to retain Docker image parity between versions, to slim down image size, and because I no longer want to support encrypted or obfuscated code in my open source projects. Feel free to pull, fork or modify if you still need ionCube in your projects.\n\n## [41.1.0] - 2022-03-28\n\n### Fixed\n- Increased RabbitMQ sleep timeout to prevent errors on startup [#426](https://github.com/markshust/docker-magento/issues/426).\n- RabbitMQ connection issues on Windows/WSL2 [#426](https://github.com/markshust/docker-magento/issues/426).\n- Problem with elasticsearch & unexpected character [#597](https://github.com/markshust/docker-magento/issues/597).\n- Issue with extra_hosts host.docker.internal for Xdebug on Linux [#595](https://github.com/markshust/docker-magento/issues/595).\n- Reverted Xdebug/magerun code refactor which caused issues [#595](https://github.com/markshust/docker-magento/pull/545).\n- Composer auth.json auth required message shows after authenticating [#587](https://github.com/markshust/docker-magento/issues/587).\n- Failing shellchecks [08206e6d](https://github.com/markshust/docker-magento/commit/08206e6d6a48fdb3c1c3adc8f52b146609ba771c), [53d9b858](https://github.com/markshust/docker-magento/commit/53d9b8585733f8f78a5dcaedce53a83863a1b634).\n- Firefox SSL cert fails on first-time install [2695fe2e](https://github.com/markshust/docker-magento/commit/2695fe2e508098906103dd442767d50e9f6011c0).\n- Some commands including bin/xdebug not working on Windows + Docker Desktop 4.4.3 [#619](https://github.com/markshust/docker-magento/issues/619).\n\n### Updated\n- Redis 5.0 to 6.0 [6653d787](https://github.com/markshust/docker-magento/commit/6653d78722fb8d1d76cc2433a89227456e48514f).\n- `bin/setup` script so it can run completely automated [PR #633](https://github.com/markshust/docker-magento/pull/633).\n- PHP 8 image to 8.1.4, last version before tagging final release [86093b70](https://github.com/markshust/docker-magento/commit/86093b70c9ee7f0ed3c62e84460b7e53926d033c).\n\n### Added\n- `bin/stopall` script to stop all running containers [#599](https://github.com/markshust/docker-magento/pull/599).\n- New PHP image to enable WebP support in GD [PR #651](https://github.com/markshust/docker-magento/pull/651).\n- Ability to configure custom user/group ID in Nginx image [PR #658](https://github.com/markshust/docker-magento/pull/658).\n\n### Removed\n- PHP 7.3 images have been deprecated due to 7.3's EOL.\n- EXPOSE statement from PHP image (unneeded) [790e2fe0](https://github.com/markshust/docker-magento/commit/790e2fe0293feb12455d7f9ed2593aa97ad6df99).\n\n## [41.0.2] - 2021-12-09\n\n### Fixed\n- Disable \"Composer is slower because of Xdebug\" message [1990d84](https://github.com/markshust/docker-magento/commit/1990d84).\n- Updated verbiage in setup on how to start cron [c3ba47d](https://github.com/markshust/docker-magento/commit/1990d84).\n- Fixed \"The input device is not a TTY\" error during setup [8aada97](https://github.com/markshust/docker-magento/commit/8aada97).\n- Expose port 9003 on PHP Docker image for Xdebug [263e40d](https://github.com/markshust/docker-magento/commit/263e40d).\n- Disable Xdebug by default for PHP 7.3 [263e40d](https://github.com/markshust/docker-magento/commit/263e40d).\n\n### Updated\n- Updated PHP 8.1 image to use official GA version [263e40d](https://github.com/markshust/docker-magento/commit/263e40d).\n\n## [41.0.1] - 2021-11-09\n\n### Fixed\n- Fixed additional issue of waiting for Elasticsearch/RabbitMQ connection on Mac [#442](https://github.com/markshust/docker-magento/issues/442).\n\n## [41.0.0] - 2021-11-08\n\nThere has been an ongoing issue with Docker for Mac + M1 chips (Apple Silicon) which causes a 5-second delay in network requests (see [#5626](https://github.com/docker/for-mac/issues/5626)). A fix has been implemented in this release that works around this issue, adding `extra_hosts` directives in the `docker-compose.yml` file. This update should be backwards-compatible, but will break existing setups that use custom Docker networks (this is an uncommon scenario). See notes at the top of `docker-compose.yml` for how to configure this project for custom Docker networks.\n\n### Added\n- Added Imagick PHP extension [#530](https://github.com/markshust/docker-magento/issues/530).\n\n### Fixed\n- Fixed issue with onelinesetup script failing on download [92b803c](https://github.com/markshust/docker-magento/commit/92b803c) [67c76b4](https://github.com/markshust/docker-magento/commit/67c76b4).\n- Fix Shellcheck failures for bin/setup-ssl-ca [#558](https://github.com/markshust/docker-magento/issues/558).\n- Fix wrong `sendmail_path` in php.ini [#556](https://github.com/markshust/docker-magento/issues/556).\n- Ensure .composer directory isn't created by root [#562](https://github.com/markshust/docker-magento/issues/562).\n- Fixed `bin/devconsole` command not working [646f617](https://github.com/markshust/docker-magento/commit/646f617).\n- Fixed `bin/setup-composer-auth` does not persist auth creds [#567](https://github.com/markshust/docker-magento/issues/567).\n- Fixed documentation around Xdebug port on Linux [90af7fa](https://github.com/markshust/docker-magento/commit/90af7fa).\n- Fixed waiting for Elasticsearch/RabbitMQ connection on Mac [#442](https://github.com/markshust/docker-magento/issues/442).\n\n### Updated\n- Updated info about MySQL backups and existing projects in README [86faa70](https://github.com/markshust/docker-magento/commit/86faa70).\n- Updated README for Xdebug + PhpStorm [b1fe812](https://github.com/markshust/docker-magento/commit/b1fe812).\n\n## [40.1.0] - 2021-10-29\n\n### Fixed\n- Fixed issues with onelinesetup script [#564](https://github.com/markshust/docker-magento/issues/564).\n- Fixed Shellcheck failures for bin/setup-ssl-ca [#558](https://github.com/markshust/docker-magento/issues/558).\n- Fixed php.ini possible wrong smtp-addr [#556](https://github.com/markshust/docker-magento/issues/556).\n- Ensure files are created so Docker doesn't create them as root [#562](https://github.com/markshust/docker-magento/issues/562).\n- Added additional time for Elasticsearch container to get initialized during setup.\n\n## [40.0.2] - 2021-10-20\n\n### Fixed\n- Fixed Selenium configuration for MFTF [PR #554](https://github.com/markshust/docker-magento/pull/554).\n\n## [40.0.1] - 2021-10-20\n\n### Fixed\n- Fixed PHP image `8.0-fpm-develop` for Magento 2.4.4 support (note: still has `-develop` tag).\n\n### Updated\n- Moved `~/.ssh` volume mount references to `docker-compose.yml` to ease maintenance.\n\n## [40.0.0] - 2021-10-15\n\nThis is one of the biggest releases of docker-magento 💥! This major update includes support for Apple Silicon (M1/M1X) chips, as well as SSH support for fully native filesystem speed.\n\nAll the images are now multi-arch builds, meaning they can install on both AMD & ARM chipsets. Additionally, by setting up your IDE to connect to Docker over SSH/SFTP to avoid selective filesystem syncing.\n\nThe docker-compose configuration files have also been streamlined & simplified, with dedicated files for both SSH and Linux setups. Read more about these updates at https://github.com/markshust/docker-magento#ssh and https://github.com/markshust/docker-magento#linux respectively.\n\nMany issues have been resolved, and long-standing pull requests have been merged. A special thanks to [@drpayyne](https://github.com/drpayyne) for multi-arch support, [@rangerz](https://github.com/rangerz) for their massive contributions, as well as many others for their continued work & pull requests submitted to this project.\n\n### Updated\n- Updated `onelinesetup` script to use version `2.4.3-p1` by default.\n- Updated `bin/cache-clean` with improved logic [PR #400](https://github.com/markshust/docker-magento/pull/400).\n- Simplified `docker-compose.dev.yml` file to only contain volume mounting information.\n\n### Added\n- Added new `mailcatcher` image to replace `mailhog` for multi-arch support [#511](https://github.com/markshust/docker-magento/issues/511).\n- Added `docker-compose.dev-ssh.xml` to streamline SSH setup.\n- Added `docker-compose.dev-linux.xml` to streamline Linux setup.\n- Added GitHub workflows for multi-arch build support [#396](https://github.com/markshust/docker-magento/issues/396).\n- Added multi-arch support for Nginx [PR #515](https://github.com/markshust/docker-magento/pull/515).\n- Added multi-arch support for PHP [PR #516](https://github.com/markshust/docker-magento/pull/516).\n- Added new `bin/setup-domain` script [PR #429](https://github.com/markshust/docker-magento/pull/429).\n- Added Basic MFTP Setup information [PR #269](https://github.com/markshust/docker-magento/pull/269).\n- Make uid & gid of app user configurable [#520](https://github.com/markshust/docker-magento/pull/520).\n- Added Makefile with list of available commands [#399](https://github.com/markshust/docker-magento/pull/399).\n- Xdebug 3 support for `bin/n98-magerun2` [#545](https://github.com/markshust/docker-magento/pull/545).\n\n### Fixed\n- Fixed SSL setup failing on Linux [#222](https://github.com/markshust/docker-magento/issues/222).\n- Fixed locale code for `bin/setup-grunt` [#484](https://github.com/markshust/docker-magento/pull/484).\n- Fixed cron not working [#540](https://github.com/markshust/docker-magento/issues/540).\n\n## [39.1.0] - 2021-09-21\n\n### Updated\n- Replace MailHog with Mailcatcher for multi-arch compatibility [#511](https://github.com/markshust/docker-magento/issues/511).\n\n## [39.0.2] - 2021-09-21\n\n### Fixed\n- Fixed placement of enabling developer mode within bin/setup.\n\n## [39.0.1] - 2021-09-21\n\n### Fixed\n- Connection to Redis fails without php-redis extension [#474](https://github.com/markshust/docker-magento/issues/474).\n\n## [39.0.0] - 2021-09-21\n\n### Added\n- New Elasticsearch Docker images `7.9`, `7.9.3-0` [#488](https://github.com/markshust/docker-magento/issues/488).\n\n### Updated\n- Replace Percona DB with MariaDB 10.4 [#514](https://github.com/markshust/docker-magento/issues/514).\n- Updated RabbitMQ image to 3.8.\n\n### Fixed\n- Resolve cron install script not in bin/setup [#420](https://github.com/markshust/docker-magento/issues/420).\n- Update Elasticsearch settings to fix catalog search index error [#488](https://github.com/markshust/docker-magento/issues/488).\n\n## [38.0.0] - 2021-07-27\n\n### Added\n- Composer 2 support [#409](https://github.com/markshust/docker-magento/issues/409).\n\n### Fixed\n- Composer `auth.json` not properly set after installation [#42](https://github.com/markshust/docker-magento/issues/42).\n- `bin/remove` not removing containers in newer versions of Docker Compose.\n- Invalid template error with Docker 3.5.1 [#486](https://github.com/markshust/docker-magento/issues/486).\n\n## [37.0.2] - 2021-02-17\n\n### Added\n- New `bin/setup-composer-auth` file to setup Composer auth creds.\n\n## [37.0.1] - 2021-02-15\n\n### Fixed\n- Fix onelinesetup script bug.\n\n## [37.0.0] - 2021-02-14\n\n### Added\n- Official support for Xdebug 3 [#390](https://github.com/markshust/docker-magento/issues/390). The new PHP images are `7.3-fpm-12` & `7.4-fpm-5`.\n- If you need to still use Xdebug 2, update your docker-compose.yml files to instead look at PHP image `7.3-fpm-11` or `7.4-fpm-4`. These images are exactly the same other than being pegged to Xdebug 2.\n\n## [36.0.2] - 2021-02-14\n\n### Updated\n- Reverted Xdebug to version 2 for backwards-compatible support [#390](https://github.com/markshust/docker-magento/issues/390).\n\n## [36.0.1] - 2021-02-04\n\n### Updated\n- Reverted DB image back to `percona:5.7` until issues with MySQL 8.0 image are resolved.\n\n## [36.0.0] - 2021-02-04\n\n### Added\n- New Elasticsearch Docker images `7.7`, `7.7.1-0` [#392](https://github.com/markshust/docker-magento/issues/392).\n- SpellCheck GitHub Action for continuous integration checks of shell scripts [#387](https://github.com/markshust/docker-magento/pull/387), [#388](https://github.com/markshust/docker-magento/pull/388).\n\n### Fixed\n- Support filesystem paths with spaces [e5f22e56](https://github.com/markshust/docker-magento/commit/e5f22e56fcd382b8339d5804a9d236dd6b238a3d).\n- Added missing `bin/cache-clean` file [f0e57202](https://github.com/markshust/docker-magento/commit/f0e5720281cd9f536f163bd5bdfe5bd66a956dc6).\n\n### Updated\n- Updated PHP images to NodeJS version 14 LTS [4a81f2b8](https://github.com/markshust/docker-magento/commit/4a81f2b8c61674b261ee7b42752e21fc8d5e945d).\n- Changed `db` service to use MySQL 8.0 Docker image.\n\n## [35.0.0] - 2021-01-29\n\n### Added\n- Automatically purge caches for a better dev experience [#380](https://github.com/markshust/docker-magento/issues/380).\n- Stop script execution on error [#363](https://github.com/markshust/docker-magento/pull/363/).\n- Make xdebug command understand partials [#371](https://github.com/markshust/docker-magento/pull/371).\n- Extended functionality for `bin/xdebug`, including new `status` and `toggle` commands [#332](https://github.com/markshust/docker-magento/pull/332).\n- Check Elasticsearch connection before setup:install [#326](https://github.com/markshust/docker-magento/pull/326).\n\n### Updated\n- The onelinesetup now accepts a `community` or `enterprise` param to pick version to install [b2399ff1](https://github.com/markshust/docker-magento/commit/ad573f6f3c8d2f7066034cbde936a86eb2399ff1).\n- Fix bin/start for macOS Big Sur [#355](https://github.com/markshust/docker-magento/pull/355/).\n\n## [34.2.0] - 2020-10-15\n\n### Updated\n- Updated Composer to version `1.10.15` to avoid nag update messages in new PHP Docker images `7.3-fpm-9`, `7.4-fpm-2`.\n\n## [34.1.0] - 2020-10-15\n\n### Added\n- HTTP/2 added to Nginx image `1.18-4`\n\n### Updated\n- `bin/download` falls back to using Composer if archive download fails or is not found.\n\n## [34.0.0] - 2020-10-11\n\n### Added\n- New `bin/setup-integration-tests` script to setup integration tests [3c021ff](https://github.com/markshust/docker-magento/commit/3c021ff6c92e49fad669deed0805cceae26bdccf).\n- Added `MYSQL_HOST` environment variable to `env/db.env` file.\n- New Nginx `1.18-3` Docker images uses Alpine as base image [PR #306](https://github.com/markshust/docker-magento/pull/306).\n\n### Updated\n- Prevent containers from starting if volume mapping doesn't exist, validate volumes to avoid empty folder creation [PR #256](https://github.com/markshust/docker-magento/pull/256).\n- Setup script uses MySQL `env/db.env` file for database connection credentials [PR #302](https://github.com/markshust/docker-magento/pull/302).\n- Increased MySQL's `max_allowed_packet` to `64M` in `docker-compose.yml` file [PR #303](https://github.com/markshust/docker-magento/pull/303).\n- `docker-compose.yml` now uses Alpine images for Redis and RabbitMQ [#305](https://github.com/markshust/docker-magento/pull/305).\n- `docker-compose.yml` file now uses new Alpine images for Redis, RabbitMQ & Nginx.\n- `bin/setup` script updated to use Redis for cache and session directly in installer script [PR #304](https://github.com/markshust/docker-magento/pull/304).\n- `bin/setup` script sets Admin URL to `/admin` [PR #304](https://github.com/markshust/docker-magento/pull/304).\n- Enabling/disabling Xdebug now only restarts `phpfpm` container rather than all containers [PR #314](https://github.com/markshust/docker-magento/pull/314).\n- `bin/setup` script moves `.vscode` directory to `src` after install [846d02c](https://github.com/markshust/docker-magento/commit/846d02c12c5af8005fe0cbb0b167b97f501db0c9).\n\n### Fixed\n- Exception while running integration tests [#292](https://github.com/markshust/docker-magento/pull/292).\n- Nested files not copying in copytocontainer script [#295](https://github.com/markshust/docker-magento/pull/295) [#296](https://github.com/markshust/docker-magento/pull/295).\n- Ubuntu unable to start because of missing volumes [#309](https://github.com/markshust/docker-magento/issues/309).\n\n## [33.0.0] - 2020-07-30\n\n### Added\n- The `php:7.4-fpm` Docker image has been setup with full support for Magento 2.4 (see [images/php/7.4](https://github.com/markshust/docker-magento/tree/master/images/php/7.4)).\n- Added easy way to mount an SSH key to the container (see [#89](https://github.com/markshust/docker-magento/issues/89)).\n- The `bin/download` script now falls back to Hypernode's Magento Download mirror in the event the archive doesn't exist or fails to download from Nexcess.\n\n### Updated\n- All Docker volumes now use `:cached` rather than `:delegated`. The `delegated` volume functionality is changing in a future version of Docker for Mac to use Mutagen volumes, and the implementation is very buggy & awkward. Using the `cached` flag retains the current functionality we've been using in `delegated` without any changes (confirmed in [docker/for-mac#1592](https://github.com/docker/for-mac/issues/1592#issuecomment-662504816)).\n- Updated `bin/setup-ssl-ca` so SSL generation works on Linux ([#222](https://github.com/markshust/docker-magento/issues/222))\n- Updated `php` Docker images to use most recent version of Composer (1.10.9).\n- The `bin/setup` script now runs `composer update` rather than `composer install`. There was an error happening with `composer install`, and with the start of the project it's best to just get the most recent Composer packages anyway.\n- The `bin/setup` script now sets Elasticsearch 7 as the default catalog search engine directly when executing `bin/magento setup:install`.\n\n### Removed\n- All `latest` tags have been removed on all Docker images. It is bad practice to not use a specific version. The `latest` tag will no longer be recompiled when new images are released.\n- The `php:7.2` Docker images have been deprecated, as that version is no longer supported in Magento.\n- The `elasticsearch:6` Docker images have been deprecated, as those versions are no longer supported in Magento.\n- Removed invalid checksum hack fix in `bin/setup` for `google-shopping-api` package, as that is only applicable to older versions of Magento.\n\n## [32.0.1] - 2020-05-12\n\n### Fixed\n- Backed out last Elasticsearch update with elasticsearch.yml, caused issues with startup.\n\n## [32.0.0] - 2020-05-11\n\n### Fixed\n- Updated `bin/dev-urn-catalog-generate` to account for new versions of PHPStorm (simplified).\n- Indexing error with possible ElasticSearch modules ([#262](https://github.com/markshust/docker-magento/issues/262)).\n\n### Updated\n- Updated ElasticSearch 6 to version 6.8.\n\n## [31.0.2] - 2020-04-30\n\n### Fixed\n- Fixed typo in last build image, new version is `magento-nginx:1.18-2`.\n\n## [31.0.1] - 2020-04-30\n\n### Fixed\n- Reverted old SSL cert, it needs to exist as default cert until new certs are generated.\n\n## [31.0.0] - 2020-04-30\n\n### Added\n- New `magento-nginx:1.18` Docker image.\n- New `magento-elasticsearch:7.6` Docker image.\n- Documentation to install Magento directly with sample data (using `with-samples-` prefix (thanks Nexcess!).\n\n### Updated\n- The `bin/setup` helper script to enable Elasticsearch 7 and automatically reindex during installation.\n- The `docker-compose.yml` file now references the `magento-nginx:1.18-0` and `magento-elasticsearch:7.6.2-0` Docker images.\n- The `docker-compose.yml` adds the new environment variable `\"discovery.type=single-node\"` for compatibility with Elasticsearch 7.\n- The new `nginx:1.18` Docker image sets `fastcgi_buffer_size 64k;` and `fastcgi_buffers 8 128k;` directives for Magento 2.3.5 compatibility.\n\n### Removed\n- Old SSL cert being generated directly on Nginx image (deprecated).\n- References to Nginx 1.13 images (deprecated).\n\n## [30.0.3] - 2020-04-25\n\n### Updated\n- Reverted disabling Temando_Shipping module in bin/magento for sample data installation. <a href=\"https://github.com/markshust/docker-magento/issues/250\">#250</a>\n\n## [30.0.2] - 2020-04-17\n\n### Fixed\n- The `Temando_Shipping` module conflicts with sample data installation. Added fix to `bin/magento` helper script to disable this module, install sample data, then re-enable it.\n\n### Added\n- Added a `--remove-orphans` flag to `bin/start` script to remove orphaned containers (applicable to cron service).\n\n## [30.0.1] - 2020-03-18\n\n### Updated\n- Increased php.ini `memory_limit` to `4G` to get PHPUnit tests to pass\n- Increased php.ini `upload_max_filesize` and `post_max_size` to `100M` just to prevent issues from being filed in the future\n\n### Added\n- New PHP image tags `7.2-fpm-9`, `7.3-fpm-6`\n\n## [30.0.0] - 2020-03-09\n\n### Added\n- Added new CLI to connect to MySQL\n\n### Updated\n- Updated readme with new bin/mysql documentation\n- n98-magerun2 to install on exec of `bin/n98-magerun2` instead of `bin/setup` script\n- Increased `max_input_vars` to `10000` to prevent Invalid Form Post submission errors\n\n### Fixed\n- Fixed PHP ioncube module missing ioncube.so file\n- Disable TTY on `bin/setup-ssl-ca script`\n- Fixed `bin/copytocontainer` script not copying files to proper directory\n\n## [29.0.0] - 2020-01-31\n\n### Fixed\n- Fixed implementation of grunt. The grunt-cli is now installed globally on the image and doesn't depend on contents of the `vendor` directory.\n\n## [28.0.0] - 2020-01-31\n\n### Updated\n- Upgraded NodeJS to 10.x, as 8.x was failing to install npm due to source repository updates <a href=\"https://github.com/markshust/docker-magento/issues/210\">#210</a>\n\n### Removed\n- Removed PHP 7.1 image from filesystem as it has been deprecated. If you need to reference the last version of these images, they are available at <a href=\"https://github.com/markshust/docker-magento/tree/27.2.0/images/php/7.1\">https://github.com/markshust/docker-magento/tree/27.2.0/images/php/7.1</a>\n\n## [27.2.0] - 2020-01-22\n\n### Added\n- Support for RabbitMQ <a href=\"https://github.com/markshust/docker-magento/pull/212\">PR #212</a>\n\n## [27.1.0] - 2020-01-20\n\n### Added\n- New `bin/setup-ssl` script to generate valid SSL certificates <a href=\"https://github.com/markshust/docker-magento/issues/211\">#211</a>\n- New `markoshust/magento-nginx:1.13-8` image containing mkcert script\n\n### Updated\n- Updated `bin/setup` to use new `bin/setup-ssl` script\n\n## [27.0.0] - 2020-01-01\n\nHappy new year! 🎉\n\n### Updated\n- Updated the PHP base images from Debian Stretch to Buster\n- Updated PHP libsodium package to `1.0.17` to support `HASH_VERSION_ARGON2ID13` <a href=\"https://github.com/markshust/docker-magento/issues/193\">#193</a>\n\n### Added\n- Built-in support for Blackfire.io\n- New PHP image tags `7.2-fpm-5`, `7.3-fpm-2`\n\n## [26.0.0] - 2019-12-30\n\n### Added\n- Ability for `src` directory to be a symlink\n\n### Fixed\n- Fixed Magento2 setup script with n98-magerun2.phar\n- Fixed dev-urn-catalog-generate script\n\n### Removed\n- All Windows-specific setup and helper scripts. This involved changing directory structure of `compose` folder, there is no longer specific `magento-2` and `magento-2-windows` specific folders. Windows support works on Docker with WSL.\n- Support for PHP 7.1 (EOL)\n\n## [25.0.0] - 2019-10-22\n\n### Added\n- Full parity with [Magento Cloud PHP extensions](https://devdocs.magento.com/guides/v2.3/cloud/project/project-conf-files_magento-app.html#php-extensions)\n\n### Updated\n- Optimized Dockerfile install order and layer usage for all PHP images (7.1, 7.2 & 7.3)\n- Updated few lib dependencies in Dockerfiles with new versions\n- Pegged Composer to version 1.9.0 for predictability, moved to lower layer so updating version doesn't require full rebuild of all layers\n\n## [24.2.0] - 2019-10-18\n\n### Fixed\n- Fixed logic of `bin/copyfromcontainer` and `bin/copytocontainer` so subdirectories are now properly copied from and to the container\n\n### Added\n- The `bin/fixowns` script now includes the ability to fix ownerships at the subdirectory level\n- The `bin/copyfromcontainer` and `bin/copytocontainer` scripts now fixes permissions and ownerships of just the subdirectories that are copied\n\n## [24.1.2] - 2019-10-15\n\n### Fixed\n- Fixed `bin/copyfromcontainer` and `bin/copytocontainer` referencing incorrect destination file locations\n\n## [24.1.1] - 2019-10-11\n\n### Fixed\n- Added missing `bin/pwa-studio` and `bin/setup-pwa-studio` bash scripts\n\n## [24.1.0] - 2019-10-10\n\n### Added\n- Documented in README how to retrieve `bin/update` file for previous versions that did not include it\n- Added `hirak/prestissimo` composer package to `bin/setup` helper script for much faster composer installs\n- Downloaded archive installs are now cached on the user's machine, so subsequent installs of Magento will no longer re-download the archive if previously downloaded. Downloaded archives are stored in the `~/.docker-magento` folder.\n\n### Fixed\n- There is an invalid checksum reference in the Nexcess archive of 2.3.3, replaced checksum reference in `bin/setup` to resolve the error\n\n### Removed\n- The previous CHANGELOG for `24.0.0` referenced `vertex/module-tax` being removed but for some reason it was not removed, now it is\n\n## [24.0.0] - 2019-10-09\n\n### Added\n- New PHP docker image version `7.3-fpm-0` for Magento 2.3.3 support\n- New Elasticsearch docker image `markoshust/magento-elasticsearch:6.5.4-0` which comes bundled with icu and phonetic plugins. The initial `6.5` version is for parity with Magento Cloud.\n- New `bin/update` helper script that updates your docker-magento setup to the latest version\n- Added `.gitignore` file to project root to ignore `src` directory. It is recommended to keep your root docker config files in one repository, and your Magento code setup in another. This ensures the Magento base path lives at the top of one specific repository, which makes automated build pipelines and deployments easy to manage, and maintains compatibility with projects such as Magento Cloud.\n- Install n98-magerun2 when setup is executed, and added related `bin/n98-magerun` and `bin/devconsole` helper scripts.\n- Added `bin/setup-pwa-studio` (BETA) helper script to easily install PWA Studio, usage accepts a single parameter being the site URL you wish PWA Studio to connect to (ex. `bin/setup-pwa-studio magento2.test`)\n- Added `bin/pwa-studio` (BETA) helper script to easily run the PWA Studio NodeJS web server\n\n### Fixed\n- The `bin/dev-urn-catalog-generate` helper script has been updated for compatibility with more recent versions of PHPStorm\n\n### Removed\n- The `vertex/module-tax` Composer package installs correctly as of 2.3.0, so the line within the `bin/setup` script which prevented it from being installed was removed. If one is having issues installing an older version of Magento 2, add the following line to your `composer.json` file to prevent this package from being installed:\n\n  `{\"replace\": { \"vertex/module-tax\": \"*\" }}`\n\n## [23.2.3] - 2019-07-20\n\n### Fixed\n- The `php` base Docker image changed from Debian Stretch to Buster and broke a lot of packages, which caused a failed build for `7.1-fpm-12` & `7.2-fpm-3` tags. This update pegs the `php` Docker image to Debian Stretch.\n\n## [23.2.2] - 2019-07-17\n\n### Fixed\n- Xdebug breakpoints not triggering\n\n### Added\n- New PHP docker image versions `7.1-fpm-12`, `7.2-fpm-3`\n\n## [23.2.1] - 2019-07-11\n\n### Fixed\n- Mailhog container doesn't stop when running bin/stop\n\n## [23.2.0] - 2019-07-07\n\n### Added\n- View emails sent locally through Mailhog by visiting [http://{yourdomain}:8025](http://{yourdomain}:8025)\n\n## [23.1.1] - 2019-07-01\n\n### Updated\n- Make Dockerfile consistent between versions\n- Move Docker layers to bottom for smaller downloads, useful for those using previous versions\n- Same Docker version tag, so just remove Docker image locally and re-pull to use\n\n## [23.1.0] - 2019-06-27\n\n### Added\n- `libsodium-dev` package and `sodium` PHP extension for Magento 2.3.2 support.\n- New PHP docker versions `7.1-fpm-10`, `7.2-fpm-1`\n\n## [23.0.0] - 2019-04-02\n\n### Added\n- Allow setup without SSH credentials.\n- Documentation for connecting to MySQL.\n- `bin/status` to check container status.\n\n### Updated\n- Readme for existing installs.\n- `bin/dev-urn-catalog-generate` to look at `src` folder as project root.\n\n### Fixed\n- Readme usage of pasting command into non-standard terminal.\n\n## [22.0.0] - 2019-02-14\n\n### Added\n- Host bind mount `var/log` folder in `docker-compose.dev.yml` for debugging purposes.\n- Redis is now the default storage engine for cache and session. Massively improved performance for local dev! 🚀\n- Added commented-out line in `docker-compose.dev.yml` file to easily mount `auth.json` file, with updated usage in README\n\n### Fixed\n- Cron not working correctly\n\n## [21.1.2] - 2019-02-04\n\n### Fixed\n- Helper script `bin/fixowns` now fixes permissions on `/var/www` instead of `/var/www/html` folder.\n- Removed superfluous mounting of `~/.composer` directory in `docker-compose.dev.yml` file.\n\n## [21.1.1] - 2018-12-27\n\n### Fixed\n- Helper script `bin/copytocontainer` now calls `bin/fixowns` afterwards to ensure correct file ownerships are set.\n\n## [21.1.0] - 2018-12-26\n\n### Added\n- Helper script `bin/removevolumes` to remove docker volumes easily.\n- Added removal of `vendor` folder and force of composer install to `bin/setup` script. When installed from zip, it's possible Magento isn't installing all deps properly and assigning wrong permissions in Docker. Forcing a reinstall fixes this issue.\n- Force deploy of static content when running `bin/setup` to speed up initial requests.\n\n### Fixed\n- Fixed helper script `bin/dev-urn-catalog-generate` to copy file to host.\n\n## [21.0.0] - 2018-12-24\n\n🎅 Santa Shust wishes you a very Merry Christmas!\n\n### Changed\n- 💯 performance improvements (14 second load times now take 7 seconds!)\n  - The `bin/start` helper script no longer copies docker volumes introduced in version 18.0.0. The `docker-compose.yml` setup has been updated to only reference native Docker volumes. A new `docker-compose.dev.yml` file has been added to reference development-specific settings, including host bind mounts. Only `.composer`, `app/code`, `app/design`, `app/etc`, `composer.json`, `composer.lock`, and `nginx.conf` filesystem locations are host bind mounted. Being very specific in which files and folders are being mounted leads to drastically faster response times. The main culprit in performance penalties before was mounting `generated` and `var` folders as host bind mounts. These directories are considered \"caching\" folders and should never be host bind mounted.\n  - If you need access to specific files that are created within the container and are not host bind mounted, you can use `bin/cli` or `bin/bash` commands to go into the container to access the files. You can also use the new `bin/copyfromcontainer` and `bin/copytocontainer` bin helper scripts to copy files & folders from or to containers.\n  - If you need to host bind mount files or folders, feel free to do so within the `docker-compose.dev.yml` file! Just be aware there is a performance penalty for doing so.\n- Updated `nginx` Docker image to look for `nginx.conf` file instead of `nginx.conf.sample` file. This will now require copying the `nginx.conf.sample` file to `nginx.conf`, or using a host bind mount. This location allows overrides that aren't overridden when you upgrade Magento, and allow customizations for projects. Tagged new image as `markoshust/magento-nginx:1.13-7`.\n- The `bin/setup` helper script uses only the `docker-compose.yml` file, with only native docker volume mounts.\n- The `bin/start` helper script uses both `docker-compose.yml` and `docker-compose.dev.yml` files. Development-only specifications should now be placed within `docker-compose.dev.yml`, such as host bind volume mounts.\n- The `docker-compose.yml` file now uses a `sockdata` volume mount to mount the `/sock` directory. You may need to delete the `appdata` volume mount (`docker volume rm NAME`) and rebuild it with `bin/copytocontainer --all`.\n- Removed call to `bin/fixperms` within `bin/setup` to speed up initial installation.\n\n### Added\n- Added `bin/copyfromcontainer` and `bin/copytocontainer` helper scripts to copy folders or files from or to containers. Specify the `--all` option to copy entire web directory structure.\n- Added `bin/rootnotty` to run root commands with no TTY (needed for unassisted one-line setup with new volume setup).\n- Added `bin/fixowns` to fix filesystem ownerships within the Docker container.\n- Added `docker-compose.dev.yml` file for development-only specifications.\n\n### Removed\n- The Magento 1 version of this development environment has been deprecated and is no longer supported. PHP 5 was used as it's base, and that version has reached end-of-life. If you still wish to use this setup, please reference [compose/magento-1 on tag 20.1.1](https://github.com/markshust/docker-magento/tree/master/compose/magento-1), but please be aware these images are no longer maintained.\n- The PHP 5.6 and 7.0 images have been deprecated, as both of these versions have reached end-of-life. These versions have been removed from the README and are no longer maintained. If you still wish to use these images, please reference the [README on tag 20.1.1](https://github.com/markshust/docker-magento/blob/master/README.md), but please be aware these images are no longer maintained.\n- Removed `bin/copydir` and `bin/copydirall` helper scripts.\n\n## [20.1.1] - 2018-12-10\n\n### Fixed\n- Fixed typo in docker-compose.yml for linux\n\n## [20.1.0] - 2018-12-03\n\n### Added\n- Official support for Elasticsearch. Go to Admin > Stores > Configuration > Catalog > Catalog > Catalog Search, and select \"Elasticsarch 5.0+\" from the list of options. Keep all defaults the same, but set Elasticsearch Server Hostname to `elasticsearch`. Save, clear the cache, and run `bin/magento indexer:reindex` to enable.\n\n## [20.0.0] - 2018-11-27\n\n### Added\n- Official support for Magento 2.3 & PHP 7.2. Officially tagging `7.2-fpm-0` php image.\n\n### Updated\n- Various updates to README, including references now being made to Magento 2.3.\n- Added comments to docker-compose for fixes needed on Linux machines (volume mounts and host.docker.internal fix).\n\n### Fixed\n- Volume mount issues on linux. Updated `bin/start` to ignore call to `bin/copydirall` when ran on Linux.\n\n## [19.0.0] - 2018-10-08\n\n### Added\n- Added SSL support and made it enabled by default in the nginx config. All http requests will also be forwarded to https.\n\n## [18.1.1] - 2018-10-08\n\n### Updated\n- Magento 2 nginx configuration now includes `nginx.conf.sample` file from root installation directory for configuration, instead of having standalone configuration.\n\n## [18.0.1] - 2018-10-08\n\n### Fixed\n- Reverted old `bin/cli` usage and created `bin/clinotty` for non-tty sessions. Updated calls in `bin/setup` and other scripts where appropriate to `bin/clinotty`.\n\n## [18.0.0] - 2018-10-06\n\n### Changed\n- Changed the way bind mounts work with Docker compose and Magento 2.\n    - Note that `bin/start` now includes a call to `bin/copydirall` after the containers start. This helper script runs a `docker cp` command of all Magento directories from the container to the host. There is still a bind mount setup to `./src` root directory.\n    - There is a condition/bug within Docker that when named volumes overlap with bind mounts, the named volumes automatically sync back to the host once a `docker cp` command runs, while retaining their named volume status within the Docker container.\n    - We're tapping into this very odd bug and taking advantage of this as long as we can. Since data is still fetched from within the Docker container as a named volume, this should also allow not-so-performant computers to now run this Docker setup, as it provides near or truly native filesystem performance, since requests to these directories are still fetched through the named volume as far as Docker is concerned.\n- `bin/start` now runs in daemon mode, as we also need to run `bin/copydirall` immediately after starting containers so data syncs back to the host (and vice versa). This also eliminates the need to to have a terminal window open all the time for keeping containers running.\n\n### Added\n- Added back support for Magento 1 and PHP 5.6 containers. Magento 1 EOL will not be until 2020, so we should support these images and Docker Compose setup indefinitely for the time being.\n- Added new `bin/restart` helper script to stop and start all containers.\n- Added new `bin/remove` helper script to remove all containers.\n- Added new `bin/copydir` which copies whichever folder you wish from the container to the host.\n- Added new `bin/copydirall` which copies all Magento folders from the container to the host.\n- Added `lib/template` and `lib/onelinesetup` for much easier installation methods.\n- Added automatic Xdebug support for VS Code - no setup needed!\n\n### Removed\n- Removed `bin/initloopback` along with any references to `10.254.254.254` ip address. This may break existing Xdebug setups. Note that this ip address has been replaced with `host.docker.internal`, which should automatically resolve back to the host machine.\n\n## [17.0.1] - 2018-10-06\n\n### Removed\n- Removed bind mount of vendor folder introduced in 16.2.0 due to inconsistency issues. Update coming soon that will implement new method of bind mounting.\n\n## [17.0.0] - 2018-09-06\n\n### Removed\n- Removed idekey setting from php.ini config.\n\n### Changed\n- Simplified Xdebug configuration for PHPStorm. This will require configuration updates for all users using Xdebug within PHPStorm.\n\n### Added\n- Added support for Xdebug and VS Code.\n\n## [16.2.0] - 2018-08-29\n\n### Changed\n- Updated docker-compose.yml file to volume mount vendor folder for 50% performance increase\n\n## [16.1.0] - 2018-08-23\n\n### Added\n- Added php ssh2 extension\n\n### Deprecated\n- The PHP 5.6 release will no longer be maintained, the last released version is 16.0.0\n\n## [16.0.0] - 2018-08-22\n\n### Changed\n- Moved `dev/auth.json` to `dev/composer/auth.json`\n- Added `client_max_body_size 20M` to nginx.conf\n- Added `upload_max_filesize = 20M` and `post_max_size = 20M` to php.ini\n\n## [15.0.1] - 2018-08-03\n\n### Fixed\n- Bugs with npm permissions.\n\n## [15.0.0] - 2018-08-03\n\n### Added\n- NodeJS 8 and npm 5 added to the PHP images!\n- New PHP 7.2 image. Be aware that this hasn't yet been fully tested.\n- New helper scripts bin/grunt, bin/node, bin/npm and bin/stop.\n\n### Changed\n- All bin helper script calls from ./bin/name to bin/name.\n- Updated bin scripts for Windows, possible breaking updates.\n\n## [14.0.1] - 2018-07-28\n\n### Fixed\n- Magento 2.2.5 requires username and password to be different values. Updated to dummy \"John Smith\" user persona with username `john.smith` and password `password123`.\n\n## [14.0.0] - 2018-07-21\n\n### Added\n- New `dev/auth.json` file used instead of `~/.composer/auth.json` file, so each project can have different auth credentials.\n\n### Changed\n- The `cron` service is now disabled by default. This services uses higher CPU and should probably only be enabled when working on cron-related tasks (or on production).\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2016 Mage Inferno\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 44.5361328125,
          "content": "<h1 align=\"center\">markshust/docker-magento</h1>\n\n<div align=\"center\">\n  <p>Mark Shust's Docker Configuration for Magento</p>\n  <img src=\"https://img.shields.io/badge/magento-2.X-brightgreen.svg?logo=magento&longCache=true\" alt=\"Supported Magento Versions\" />\n  <a href=\"https://hub.docker.com/r/markoshust/magento-php/\" target=\"_blank\"><img src=\"https://img.shields.io/docker/pulls/markoshust/magento-php.svg?label=php%20docker%20pulls\" alt=\"Docker Hub Pulls - PHP\" /></a>\n  <a href=\"https://hub.docker.com/r/markoshust/magento-nginx/\" target=\"_blank\"><img src=\"https://img.shields.io/docker/pulls/markoshust/magento-nginx.svg?label=nginx%20docker%20pulls\" alt=\"Docker Hub Pulls - Nginx\" /></a>\n  <a href=\"https://github.com/markshust/docker-magento/graphs/commit-activity\" target=\"_blank\"><img src=\"https://img.shields.io/badge/maintained%3F-yes-brightgreen.svg\" alt=\"Maintained - Yes\" /></a>\n  <img src=\"https://img.shields.io/badge/apple%20silicon%20support-yes-brightgreen\" alt=\"Apple Silicon Support\" />\n  <a href=\"https://opensource.org/licenses/MIT\" target=\"_blank\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" /></a>\n</div>\n\n## Table of contents\n\n- [Docker Hub](#docker-hub)\n- [Free Course](#free-course)\n- [Usage](#usage)\n- [Prerequisites](#prerequisites)\n- [Setup](#setup)\n- [Updates](#updates)\n- [Custom CLI Commands](#custom-cli-commands)\n- [Misc Info](#misc-info)\n- [Known Issues](#known-issues)\n- [Credits](#credits)\n- [License](#license)\n\n## Docker Hub\n\nView Dockerfiles for the latest tags:\n\n- [markoshust/magento-nginx (Docker Hub)](https://hub.docker.com/r/markoshust/magento-nginx/)\n  - [`1.18`, `1.18-8`](images/nginx/1.18)\n  - [`1.22`, `1.22-0`](images/nginx/1.22)\n  - [`1.24`, `1.24-0`](images/nginx/1.24)\n- [markoshust/magento-php (Docker Hub)](https://hub.docker.com/r/markoshust/magento-php/)\n  - [`8.1-fpm`, `8.1-fpm-6`](images/php/8.1)\n  - [`8.2-fpm`, `8.2-fpm-5`](images/php/8.2)\n  - [`8.3-fpm`, `8.3-fpm-3`](images/php/8.3)\n  - [`8.4-fpm-dev`](images/php/8.4)\n- [markoshust/magento-opensearch (Docker Hub)](https://hub.docker.com/r/markoshust/magento-opensearch/)\n  - [`1.2`, `1.2-0`](images/opensearch/1.2)\n  - [`2.5`, `2.5-1`](images/opensearch/2.5)\n  - [`2.12`, `2.12-0`](images/opensearch/2.12)\n- [markoshust/magento-elasticsearch (Docker Hub)](https://hub.docker.com/r/markoshust/magento-elasticsearch/)\n  - [`7.16`, `7.16-0`](images/elasticsearch/7.16)\n  - [`7.17`, `7.17-1`](images/elasticsearch/7.17)\n  - [`8.4`, `8.4-0`](images/elasticsearch/8.4)\n  - [`8.5`, `8.5-0`](images/elasticsearch/8.5)\n  - [`8.7`, `8.7-0`](images/elasticsearch/8.7)\n  - [`8.11`, `8.11-0`](images/elasticsearch/8.11)\n  - [`8.13`, `8.13-0`](images/elasticsearch/8.13)\n- [markoshust/magento-rabbitmq (Docker Hub)](https://hub.docker.com/r/markoshust/magento-rabbitmq/)\n  - [`3.8`, `3.8-0`](images/rabbitmq/3.8)\n  - [`3.9`, `3.9-0`](images/rabbitmq/3.9)\n  - [`3.11`, `3.11-1`](images/rabbitmq/3.11)\n  - [`3.12`, `3.12-0`](images/rabbitmq/3.12)\n- [markoshust/ssh (Docker Hub)](https://hub.docker.com/r/markoshust/magento-ssh/)\n  - [`latest`](images/ssh)\n\n## Free Course\n\nThis course is sponsored by <a href=\"https://m.academy\" target=\"_blank\">M.academy</a>, the simplest way to learn Magento.\n\n<a href=\"https://m.academy\" target=\"_blank\"><img src=\"docs/macademy-logo.png\" alt=\"M.academy\"></a>\n\nA free screencast course is available (which was fully refreshed in December 2021), which details the basic usage of this project:\n\n<a href=\"https://m.academy/courses/set-up-magento-2-development-environment-docker\" target=\"_blank\">\n<img src=\"docs/set-up-magento-2-development-environment-docker-og.png\" alt=\"Set Up a Magento 2 Development Environment with Docker\" width=\"400\"><br/>\nSet Up a Magento 2 Development Environment with Docker\n</a>\n\n### Course Curriculum\n\n#### Intro\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36738848\" target=\"_blank\">Quick hi & welcome from Mark!</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36738860\" target=\"_blank\">About the course format</a>\n\n#### Initial Project Setup\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9205849\" target=\"_blank\">Install Docker Desktop & configure preferences</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/8974570\" target=\"_blank\">Set up Magento with the automated onelinesetup script</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064259\" target=\"_blank\">Set up Magento manually from a custom Git branch</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9283467\" target=\"_blank\">Set up Docker for an existing Magento project</a>\n\n#### The Basics of docker-magento\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064258\" target=\"_blank\">Execute docker-magento helper scripts</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9331008\" target=\"_blank\">Start, stop, restart and check container status</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064269\" target=\"_blank\">Execute bin/magento and composer within Docker containers</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36150902\" target=\"_blank\">Install Magento sample data</a>\n\n#### Docker Filesystem & Data Volumes\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064334\" target=\"_blank\">Understand Docker volumes & host bind mounts</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064338\" target=\"_blank\">Manage files & folders within Docker containers</a>\n\n#### PhpStorm\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9748834\" target=\"_blank\">Set up a docker-magento project in PhpStorm</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9763893\" target=\"_blank\">Set up the Magento PhpStorm plugin</a>\n\n#### Code Quality Tools\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/52640115\" target=\"_blank\">Configure PHPCS (PHP CodeSniffer) for Magento</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/52642491\" target=\"_blank\">Configure PHPCSF (PHP CodeSniffer Fixer) for Magento</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/52643314\" target=\"_blank\">Configure PHPMD (PHP Mess Detector) for Magento</a>\n\n#### Xdebug\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064478\" target=\"_blank\">Install the Xdebug helper browser plugin for Chrome & PhpStorm</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064482\" target=\"_blank\">Enable disable check the status of Xdebug</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064615\" target=\"_blank\">Configure PhpStorm for Xdebug connections</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064617\" target=\"_blank\">Trigger an Xdebug breakpoint in PhpStorm</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36677538\" target=\"_blank\">Trigger an Xdebug breakpoint for CLI commands in PhpStorm</a>\n\n#### Customize Server Configurations\n\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36702830\" target=\"_blank\">Understand the docker-compose application structure</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36702861\" target=\"_blank\">Increase the PHP memory limit in php.ini</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064349\" target=\"_blank\">Increase the Nginx request timeout in nginx.conf</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/36703258\" target=\"_blank\">Increase the MySQL buffer pool size with command or in my.cnf</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/9064350\" target=\"_blank\">Install a new PHP extension by building a custom Docker image</a>\n- <a href=\"https://courses.m.academy/courses/set-up-magento-2-development-environment-docker/lectures/14780970\" target=\"_blank\">Configure multi-store instances in Docker with Nginx</a>\n\n## Usage\n\nThis configuration is intended to be used as a Docker-based development environment for Magento 2.\n\nFolders:\n\n- `images`: Docker images for nginx and php\n- `compose`: sample setups with Docker Compose\n\n> The Magento 1 version of this development environment has been deprecated and is no longer supported. PHP 5 was used as it's base, and that version has reached end-of-life. If you still wish to use this setup, please reference [compose/magento-1 on tag 20.1.1](https://github.com/markshust/docker-magento/tree/20.1.1/compose/magento-1), but please be aware these images are no longer maintained.\n\n## Prerequisites\n\nThis setup assumes you are running Docker on a computer with at least 6GB of RAM allocated to Docker, a dual-core, and an SSD hard drive. [Download & Install Docker Desktop](https://www.docker.com/products/docker-desktop).\n\nThis configuration has been tested on Mac & Linux. Windows is supported through the use of Docker on WSL.\n\n## Setup\n\n### Automated Setup (New Project)\n\n```bash\n# Create your project directory then go into it:\nmkdir -p ~/Sites/magento\ncd $_\n\n# Run this automated one-liner from the directory you want to install your project.\ncurl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/onelinesetup | bash -s -- magento.test community 2.4.7-p3\n```\n\nThe `magento.test` above defines the hostname to use, `community` is the Magento edition, and the `2.4.7-p3` defines the Magento version to install. Note that since we need a write to `/etc/hosts` for DNS resolution, you will be prompted for your system password during setup.\n\nAfter the one-liner above completes running, you should be able to access your site at `https://magento.test`.\n\n## Accessing the Magento Backend\n\nAfter successfully installing the Magento environment, you can access the backend by following these steps:\n\n1. Open your web browser and go to the following URL: `https://magento.test/admin/`.\n\n2. Use the following default credentials to log in:\n- **Username:** `john.smith`\n- **Password:** `password123`\n\n3. Upon logging in, you might be prompted to configure Two-Factor Authentication (2FA). This emails you a code to log in with (which you can check with Mailcatcher by visiting `http://{yourdomain}:1080`). By default, the email address used for this purpose is:\n- **Email:** `john.smith@gmail.com`\n\nIf you are testing in a local development environment and wish to disable 2FA, you can do so by installing [Mark's DisableTwoFactorAuth module](https://github.com/markshust/magento2-module-disabletwofactorauth).\n\n#### Install sample data\n\nAfter the above installation is complete, run the following lines to install sample data:\n\n```bash\nbin/magento sampledata:deploy\nbin/magento setup:upgrade\n```\n\n### Manual Setup\n\nSame result as the one-liner above. Just replace `magento.test` references with the hostname that you wish to use.\n\n#### New Projects\n\n```bash\n# Create your project directory then go into it:\nmkdir -p ~/Sites/magento\ncd $_\n\n# Download the Docker Compose template:\ncurl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash\n\n# Download the version of Magento you want to use with:\nbin/download community 2.4.7-p3\n# You can specify the edition (community, enterprise, mageos) and version (2.4.7-p3, 1.0.5, etc.)\n# If no arguments are passed in, the edition defaults to \"community\"\n# If no version is specified, it defaults to the most recent version defined in `bin/download`\n\n# or for Magento core development:\n# bin/start --no-dev\n# bin/setup-composer-auth\n# bin/cli git clone git@github.com:magento/magento2.git .\n# bin/cli git checkout 2.4-develop\n# bin/composer install\n\n# Want to install Magento <2.4.6? In bin/setup-install, replace the lines:\n#  --elasticsearch-host=\"$ES_HOST\" \\\n#  --elasticsearch-port=\"$ES_PORT\" \\\n#  --opensearch-host=\"$OPENSEARCH_HOST\" \\\n#  --opensearch-port=\"$OPENSEARCH_PORT\" \\\n#  --search-engine=opensearch \\\n# with:\n#  --elasticsearch-host=\"$ES_HOST\" \\\n#  --elasticsearch-port=\"$ES_PORT\" \\\n#  --search-engine=elasticsearch7 \\\n\n# Run the setup installer for Magento:\nbin/setup magento.test\n\nopen https://magento.test\n```\n\n#### Existing Projects\n\n```bash\n# Create your project directory then go into it:\nmkdir -p ~/Sites/magento\ncd $_\n\n# Download the Docker Compose template:\ncurl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash\n\n# Take a backup of your existing database:\nbin/mysqldump > ~/Sites/existing/magento.sql\n\n# Replace with existing source code of your existing Magento instance:\ncp -R ~/Sites/existing src\n# or: git clone git@github.com:myrepo.git src\n\n# Start some containers, copy files to them and then restart the containers:\nbin/start --no-dev\nbin/copytocontainer --all ## Initial copy will take a few minutes...\n\n# If your vendor directory was empty, populate it with:\nbin/composer install\n\n# Import existing database:\nbin/mysql < ../existing/magento.sql\n\n# Update database connection details to use the above Docker MySQL credentials:\n# Also note: creds for the MySQL server are defined at startup from env/db.env\n# vi src/app/etc/env.php\n\n# Import app-specific environment settings:\nbin/magento app:config:import\n\n# Create a DNS host entry and setup Magento base url\nbin/setup-domain yoursite.test\n\nbin/restart\n\nopen https://magento.test\n```\n\n### Elasticsearch vs OpenSearch\nOpenSearch is set as the default search engine when setting up this project. Follow the instructions below if you want to use Elasticsearch instead:\n1. Comment out or remove the `opensearch` container in both the [`compose.yaml`](https://github.com/markshust/docker-magento/blob/master/compose/compose.yaml#L69-L84) and [`compose.healthcheck.yaml`](https://github.com/markshust/docker-magento/blob/master/compose/compose.healthcheck.yaml#L36-L41) files\n2. Uncomment the `elasticsearch` container in both the [`compose.yaml`](https://github.com/markshust/docker-magento/blob/master/compose/compose.yaml#L86-L106) and [`compose.healthcheck.yaml`](https://github.com/markshust/docker-magento/blob/master/compose/compose.healthcheck.yaml#L43-L48) files\n3. Update the `bin/setup-install` command to use the Elasticsearch rather than OpenSearch. Change:\n\n```\n--opensearch-host=\"$OPENSEARCH_HOST\" \\\n--opensearch-port=\"$OPENSEARCH_PORT\" \\\n```\n\nto:\n\n```\n--elasticsearch-host=\"$ES_HOST\" \\\n--elasticsearch-port=\"$ES_PORT\" \\\n\n```\n\n## Updates\n\nTo update your project to the latest version of `docker-magento`, run:\n\n```\nbin/update\n```\n\nWe recommend keeping your docker config files in version control, so you can monitor the changes to files after updates. After reviewing the code updates and ensuring they updated as intended, run `bin/restart` to restart your containers to have the new configuration take effect.\n\nIt is recommended to keep your root docker config files in one repository, and your Magento code setup in another. This ensures the Magento base path lives at the top of one specific repository, which makes automated build pipelines and deployments easy to manage, and maintains compatibility with projects such as Magento Cloud.\n\n## Custom CLI Commands\n\n- `bin/analyse`: Run `phpstan analyse` within the container to statically analyse code, passing in directory to analyse. Ex. `bin/analyse app/code`\n- `bin/bash`: Drop into the bash prompt of your Docker container. The `phpfpm` container should be mainly used to access the filesystem within Docker.\n- `bin/blackfire`: Disable or enable Blackfire. Accepts argument `disable`, `enable`, or `status`. Ex. `bin/blackfire enable`\n- `bin/cache-clean`: Access the [cache-clean](https://github.com/mage2tv/magento-cache-clean) CLI. Note the watcher is automatically started at startup in `bin/start`. Ex. `bin/cache-clean config full_page`\n- `bin/check-dependencies`: Provides helpful recommendations for dependencies tailored to the chosen Magento version.\n- `bin/cli`: Run any CLI command without going into the bash prompt. Ex. `bin/cli ls`\n- `bin/clinotty`: Run any CLI command with no TTY. Ex. `bin/clinotty chmod u+x bin/magento`\n- `bin/cliq`: The same as `bin/cli`, but pipes all output to `/dev/null`. Useful for a quiet CLI, or implementing long-running processes.\n- `bin/composer`: Run the composer binary. Ex. `bin/composer install`\n- `bin/configure-linux`: Adds the Docker container's IP address to the system's `/etc/hosts` file if it's not already present. Additionally, it prompts the user to open port 9003 for Xdebug if desired.\n- `bin/copyfromcontainer`: Copy folders or files from container to host. Ex. `bin/copyfromcontainer vendor`\n- `bin/copytocontainer`: Copy folders or files from host to container. Ex. `bin/copytocontainer --all`\n- `bin/create-user`: Create either an admin user or customer account.\n- `bin/cron`: Start or stop the cron service. Ex. `bin/cron start`\n- `bin/debug-cli`: Enable Xdebug for bin/magento, with an optional argument of the IDE key. Defaults to PHPSTORM Ex. `bin/debug-cli enable PHPSTORM`\n- `bin/deploy`: Runs the standard Magento deployment process commands. Pass extra locales besides `en_US` via an optional argument. Ex. `bin/deploy nl_NL`\n- `bin/dev-test-run`: Facilitates running PHPUnit tests for a specified test type (e.g., integration). It expects the test type as the first argument and passes any additional arguments to PHPUnit, allowing for customization of test runs. If no test type is provided, it prompts the user to specify one before exiting.\n- `bin/dev-urn-catalog-generate`: Generate URN's for PhpStorm and remap paths to local host. Restart PhpStorm after running this command.\n- `bin/devconsole`: Alias for `bin/n98-magerun2 dev:console`\n- `bin/docker-compose`: Support V1 (`docker-compose`) and V2 (`docker compose`) docker compose command, and use custom configuration files, such as `compose.yml` and `compose.dev.yml`\n- `bin/docker-stats`: Display container name and container ID, status for CPU, memory usage(in MiB and %), and memory limit of currently-running Docker containers.\n- `bin/download`: Download specific Magento version from Composer to the container, with optional arguments of the type (\"community\" [default], \"enterprise\", or \"mageos\") and version ([default] is defined in `bin/download`). Ex. `bin/download mageos` or `bin/download enterprise 2.4.7-p3`\n- `bin/ece-patches`: Run the Cloud Patches CLI. Ex: `bin/ece-tools apply`\n- `bin/fixowns`: This will fix filesystem ownerships within the container.\n- `bin/fixperms`: This will fix filesystem permissions within the container.\n- `bin/grunt`: Run the grunt binary. Ex. `bin/grunt exec`\n- `bin/install-php-extensions`: Install PHP extension in the container. Ex. `bin/install-php-extensions sourceguardian`\n- `bin/log`: Monitor the Magento log files. Pass no params to tail all files. Ex. `bin/log debug.log`\n- `bin/magento`: Run the Magento CLI. Ex: `bin/magento cache:flush`\n- `bin/magento-version`: Determine the Magento version installed in the current environment.\n- `bin/mftf`: Run the Magento MFTF. Ex: `bin/mftf build:project`\n- `bin/mysql`: Run the MySQL CLI with database config from `env/db.env`. Ex. `bin/mysql -e \"EXPLAIN core_config_data\"` or`bin/mysql < magento.sql`\n- `bin/mysqldump`: Backup the Magento database. Ex. `bin/mysqldump > magento.sql`\n- `bin/n98-magerun2`: Access the [n98-magerun2](https://github.com/netz98/n98-magerun2) CLI. Ex: `bin/n98-magerun2 dev:console`\n- `bin/node`: Run the node binary. Ex. `bin/node --version`\n- `bin/npm`: Run the npm binary. Ex. `bin/npm install`\n- `bin/phpcbf`: Auto-fix PHP_CodeSniffer errors with Magento2 options. Ex. `bin/phpcbf <path-to-extension>`\n- `bin/phpcs`: Run PHP_CodeSniffer with Magento2 options. Ex. `bin/phpcs <path-to-extension>`\n- `bin/phpcs-json-report`: Run PHP_CodeSniffer with Magento2 options and save to `report.json` file. Ex. `bin/phpcs-json-report <path-to-extension>`\n- `bin/pwa-studio`: (BETA) Start the PWA Studio server. Note that Chrome will throw SSL cert errors and not allow you to view the site, but Firefox will.\n- `bin/redis`: Run a command from the redis container. Ex. `bin/redis redis-cli monitor`\n- `bin/remove`: Remove all containers.\n- `bin/removeall`: Remove all containers, networks, volumes, and images, calling `bin/stopall` before doing so.\n- `bin/removenetwork`: Remove a network associated with the current directory's name.\n- `bin/removevolumes`: Remove all volumes.\n- `bin/restart`: Stop and then start all containers.\n- `bin/root`: Run any CLI command as root without going into the bash prompt. Ex `bin/root apt-get install nano`\n- `bin/rootnotty`: Run any CLI command as root with no TTY. Ex `bin/rootnotty chown -R app:app /var/www/html`\n- `bin/setup`: Run the Magento setup process to install Magento from the source code, with optional domain name. Defaults to `magento.test`. Ex. `bin/setup magento.test`\n- `bin/setup-composer-auth`: Setup authentication credentials for Composer.\n- `bin/setup-domain`: Setup Magento domain name. Ex: `bin/setup-domain magento.test`\n- `bin/setup-grunt`: Install and configure Grunt JavaScript task runner to compile .less files\n- `bin/setup-install`: Automates the installation process for a Magento instance.\n- `bin/setup-integration-tests`: Script to set up integration tests.\n- `bin/setup-pwa-studio`: (BETA) Install PWA Studio (requires NodeJS and Yarn to be installed on the host machine). Pass in your base site domain, otherwise the default `master-7rqtwti-mfwmkrjfqvbjk.us-4.magentosite.cloud` will be used. Ex: `bin/setup-pwa-studio magento.test`.\n- `bin/setup-pwa-studio-sampledata`: This script makes it easier to install Venia sample data. Pass in your base site domain, otherwise the default `master-7rqtwti-mfwmkrjfqvbjk.us-4.magentosite.cloud` will be used. Ex: `bin/setup-pwa-studio-sampledata magento.test`.\n- `bin/setup-ssl`: Generate an SSL certificate for one or more domains. Ex. `bin/setup-ssl magento.test foo.test`\n- `bin/setup-ssl-ca`: Generate a certificate authority and copy it to the host.\n- `bin/spx`: Disable or enable output compression to enable or disbale SPX. Accepts params `disable` (default) or `enable`. Ex. `bin/spx enable`\n- `bin/start`: Start all containers, good practice to use this instead of `docker-compose up -d`, as it may contain additional helpers.\n- `bin/status`: Check the container status.\n- `bin/stop`: Stop all project containers.\n- `bin/stopall`: Stop all docker running containers\n- `bin/test/unit`: Run unit tests for a specific path. Ex. `bin/test/unit my-dir`\n- `bin/test/unit-coverage`: Generate unit tests coverage reports, saved to the folder `dev/tests/unit/report`. Ex. `bin/test/unit-coverage my-dir`\n- `bin/test/unit-xdebug`: Run unit tests with Xdebug. Ex. `bin/test/unit-xdebug my-dir`\n- `bin/update`: Update your project to the most recent version of `docker-magento`.\n- `bin/xdebug`: Disable or enable Xdebug. Accepts argument `disable`, `enable`, or `status`. Ex. `bin/xdebug enable`\n\n## Misc Info\n\n### Install fails because project directory is not empty\n\nThe most common issue with a failed docker-magento install is getting this error:\n\n```\nProject directory \"/var/www/html/.\" is not empty error\n```\n\nThis message occurs when _something_ fails to execute correctly during an install, and a subsequent install is re-attempted. Unfortunately, when attempting a second (or third) install, it's possible the `src` directory is no longer empty. This prevents Composer from creating the new project because it needs to create new projects within an empty directory.\n\nThe workaround to this is that once you have fixed the issue that was initially preventing your install from completing, you will need to completely remove the assets from the previously attempted install before attempting a subsequent install.\n\nYou can do this by running:\n\n```\nbin/removeall\ncd ..\nrm -rf yourproject\n```\n\nThen, create your new project directory again so you can attempt the install process again. The `bin/removeall` command removes all previous Docker containers & volumes related to the specific project directory you are within. You can then attempt the install process again.\n\n### Caching\n\nFor an improved developer experience, caches are automatically refreshed when related files are updated, courtesy of [cache-clean](https://github.com/mage2tv/magento-cache-clean). This means you can keep all of the standard Magento caches enabled, and this script will only clear the specific caches needed, and only when necessary.\n\nTo disable this functionality, uncomment the last line in the `bin/start` file to disable the watcher.\n\n### Database\n\nThe hostname of each service is the name of the service within the `compose.yaml` file. So for example, MySQL's hostname is `db` (not `localhost`) when accessing it from within a Docker container. Elasticsearch's hostname is `elasticsearch`.\n\nTo connect to the MySQL CLI tool of the Docker instance, run:\n\n```\nbin/mysql\n```\n\nYou can use the `bin/mysql` script to import a database, for example a file stored in your local host directory at `magento.sql`:\n\n```\nbin/mysql < magento.sql\n```\n\nYou also can use `bin/mysqldump` to export the database. The file will appear in your local host directory at `magento.sql`:\n\n```\nbin/mysqldump > magento.sql\n```\n\n> Getting an \"Access denied, you need (at least one of) the SUPER privilege(s) for this operation.\" message when running one of the above lines? Try running it as root with:\n> ```\n> bin/clinotty mysql -hdb -uroot -pmagento magento < src/backup.sql\n> ```\n> You can also remove the DEFINER lines from the MySQL backup file with:\n> ```\n> sed 's/\\sDEFINER=`[^`]*`@`[^`]*`//g' -i src/backup.sql\n> ```\n\n### Composer Authentication\n\nFirst setup Magento Marketplace authentication (details in the [DevDocs](http://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html)).\n\nCopy `src/auth.json.sample` to `src/auth.json`. Then, update the username and password values with your Magento public and private keys, respectively. Finally, copy the file to the container by running `bin/copytocontainer auth.json`.\n\n### Email / Mailcatcher\n\nView emails sent locally through Mailcatcher by visiting [http://{yourdomain}:1080](http://{yourdomain}:1080). In order to use mailcatcher, set the mailserver host to `mailcatcher` and set port to `1025`. Note that this port (`1025`) is different from the mailcatcher interface to read the emails (`1080`).\n\n### Redis\n\nRedis is now the default cache and session storage engine, and is automatically configured & enabled when running `bin/setup` on new installs.\n\nUse the following lines to enable Redis on existing installs:\n\n**Enable for Cache:**\n\n`bin/magento setup:config:set --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=0`\n\n**Enable for Full Page Cache:**\n\n`bin/magento setup:config:set --page-cache=redis --page-cache-redis-server=redis --page-cache-redis-db=1`\n\n**Enable for Session:**\n\n`bin/magento setup:config:set --session-save=redis --session-save-redis-host=redis --session-save-redis-log-level=4 --session-save-redis-db=2`\n\nYou may also monitor Redis by running: `bin/redis redis-cli monitor`\n\nFor more information about Redis usage with Magento, <a href=\"https://devdocs.magento.com/guides/v2.4/config-guide/redis/redis-session.html\" target=\"_blank\">see the DevDocs</a>.\n\n### PhpMyAdmin\n\nPhpMyAdmin is built into the `compose.dev.yaml` file. Simply open `http://localhost:8080` in a web browser.\n\nThese credentials can be used to log in to PhpMyAdmin:\n\n- **Username:** `magento`\n- **Password:** `magento`\n\n### Xdebug & VS Code\n\nInstall and enable the PHP Debug extension from the [Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug).\n\nOtherwise, this project now automatically sets up Xdebug support with VS Code. If you wish to set this up manually, please see the [`.vscode/launch.json`](https://github.com/markshust/docker-magento/blame/master/compose/.vscode/launch.json) file.\n\n### Xdebug & VS Code in a WSL2 environment\n\nInstall and enable the PHP Debug extension from the [Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=felixfbecker.php-debug).\n\nOtherwise, this project now automatically sets up Xdebug support with VS Code. If you wish to set this up manually, please see the [`.vscode/launch.json`](https://github.com/markshust/docker-magento/blame/master/compose/.vscode/launch.json) file.\n\n1. In VS Code, make sure that it's running in a WSL window, rather than in the default window.\n2. Install the [`PHP Debug`](https://marketplace.visualstudio.com/items?itemName=xdebug.php-debug) extension on VS Code.\n3. Create a new configuration file inside the project. Go to the `Run and Debug` section in VS Code, then click on `create a launch.json file`.\n4. Attention to the following configs inside the file:\n    * The port must be the same as the port on the xdebug.ini file.\n    ```bash\n      bin/cli cat /usr/local/etc/php/php.ini\n    ```\n    ```bash\n      memory_limit = 4G\n      max_execution_time = 1800\n      zlib.output_compression = On\n      cgi.fix_pathinfo = 0\n      date.timezone = UTC\n\n      xdebug.mode = debug\n      xdebug.client_host = host.docker.internal\n      xdebug.idekey = PHPSTORM\n      xdebug.client_port=9003\n      #You can uncomment the following line to force the debug with each request\n      #xdebug.start_with_request=yes\n\n      upload_max_filesize = 100M\n      post_max_size = 100M\n      max_input_vars = 10000\n    ```\n    * The pathMappings should have the same folder path as the project inside the Docker container.\n    ```json\n      {\n          \"version\": \"0.2.0\",\n          \"configurations\": [\n              {\n                  \"name\": \"Listen for XDebug\",\n                  \"type\": \"php\",\n                  \"request\": \"launch\",\n                  \"port\": 9003,\n                  \"pathMappings\": {\n                      \"/var/www/html\": \"${workspaceFolder}\"\n                  },\n                  \"hostname\": \"localhost\"\n              }\n          ]\n      }\n    ```\n5. Run the following command in the Windows Powershell. It allows WSL through the firewall, otherwise breakpoints might not be hitten.\n    ```powershell\n    New-NetFirewallRule -DisplayName \"WSL\" -Direction Inbound  -InterfaceAlias \"vEthernet (WSL)\"  -Action Allow\n    ```\n\n### Xdebug & PhpStorm\n\n1.  First, install the [Chrome Xdebug helper](https://chrome.google.com/webstore/detail/xdebug-helper/eadndfjplgieldjbigjakmdgkmoaaaoc). After installed, right click on the Chrome icon for it and go to Options. Under IDE Key, select PhpStorm from the list to set the IDE Key to \"PHPSTORM\", then click Save.\n\n2.  Next, enable Xdebug debugging in the PHP container by running: `bin/xdebug enable`.\n\n3.  Then, open `PhpStorm > Preferences > PHP` and configure:\n\n    * `CLI Interpreter`\n        * Create a new interpreter from the `From Docker, Vagrant, VM...` list.\n        * Select the Docker Compose option.\n        * For Server, select `Docker`. If you don't have Docker set up as a server, create one and name it `Docker`.\n        * For Configuration files, add both the `compose.yaml` and `compose.dev.yaml` files from your project directory.\n        * For Service, select `phpfpm`, then click OK.\n        * Name this CLI Interpreter `phpfpm`, then click OK again.\n\n    * `Path mappings`\n        * There is no need to define a path mapping in this area.\n\n4. Open `PhpStorm > Preferences > PHP > Debug` and ensure Debug Port is set to `9000,9003`.\n\n5. Open `PhpStorm > Preferences > PHP > Servers` and create a new server:\n\n    * For the Name, set this to the value of your domain name (ex. `magento.test`).\n    * For the Host, set this to the value of your domain name (ex. `magento.test`).\n    * Keep port set to `80`.\n    * Check the \"Use path mappings\" box and map `src` to the absolute path of `/var/www/html`.\n\n6. Go to `Run > Edit Configurations` and create a new `PHP Remote Debug` configuration.\n\n    * Set the Name to the name of your domain (ex. `magento.test`).\n    * Check the `Filter debug connection by IDE key` checkbox, select the Server you just setup.\n    * For IDE key, enter `PHPSTORM`. This value should match the IDE Key value set by the Chrome Xdebug Helper.\n    * Click OK to finish setting up the remote debugger in PHPStorm.\n\n7. Open up `pub/index.php` and set a breakpoint near the end of the file.\n\n    * Start the debugger with `Run > Debug 'magento.test'`, then open up a web browser.\n    * Ensure the Chrome Xdebug helper is enabled by clicking on it and selecting Debug. The icon should turn bright green.\n    * Navigate to your Magento store URL, and Xdebug should now trigger the debugger within PhpStorm at the toggled breakpoint.\n\n### SSH\n\nSince version `40.0.0`, this project supports connecting to Docker with SSH/SFTP. This means that if you solely use either PhpStorm or VSCode, you no longer need to selectively mount host volumes in order to gain bi-directional sync capabilities from host to container. This will enable full speed in the native filesystem, as all files will be stored directly in the `appdata` container volume, rather than being synced from the host. This is especially useful if you'd like to sync larger directories such as `generated`, `pub` & `vendor`.\n\nCopy `compose.dev-ssh.yaml` to `compose.dev.yaml` before installing Magento to take advantage of this setup. Then, create an SFTP connection at  Preferences -> Build, Execution, Deployment -> Deployment. Connect to `localhost` and use `app` for the username & password. You can set additional options for working with Magento in PhpStorm at Preferences -> Build, Execution, Deployment -> Deployment -> Options.\n\nNote that you must use your IDE's SSH/SFTP functionality, otherwise changes will not be synced. To re-sync your host environment at any time, run:\n\n```\nbin/copyfromcontainer --all\n```\n\n### Linux\n\nRunning Docker on Linux should be pretty straight-forward. Note that you need to run some [post install commands](https://docs.docker.com/install/linux/linux-postinstall/) as well as [installing Docker Compose](https://docs.docker.com/compose/install/) before continuing. These steps are taken care of automatically with Docker Desktop, but not on Linux.\n\nCopy `compose.dev-linux.yaml` to `compose.dev.yaml` before installing Magento to take advantage of this setup.\n\n#### Install necessary dependencies\n\nTo ensure proper functionality, the docker-magento setup requires a few system dependencies to be installed on Linux. To install these dependencies, please execute the following command from the terminal:\n\n```\nsudo apt install curl libnss3-tools unzip rsync\n```\n\n#### The host.docker.internal hostname\n\nThe `host.docker.internal` hostname is used on Docker for Mac/Windows to reference the Docker daemon. On Linux, this hostname does not exist.\n\nThis hostname is [hard-coded in the php.ini file](images/php/8.1/conf/php.ini#L8). To make this hostname resolve, add `\"host.docker.internal:172.17.0.1\"` to the `app.extra_hosts` parameter of `compose.yaml`, replacing `172.17.0.1` with the result of:\n\n```\ndocker run --rm alpine ip route | awk 'NR==1 {print $3}'\n```\n\nYou must also create a new entry in your `/etc/hosts` file using the same IP:\n\n```\n172.17.0.1 host.docker.internal\n```\n\n#### Extra settings\n\nTo enable Xdebug on Linux, you may also need to open port 9003 on the firewall by running:\n\n```\nsudo iptables -A INPUT -p tcp --dport 9003 -j ACCEPT\n```\n\nYou may also have to increase a virtual memory map count on the host system which is required by [Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html).\n\nAdd the following line to the `/etc/sysctl.conf` file on your host:\n\n```\nvm.max_map_count=262144\n```\n\n### Blackfire.io\n\nThese docker images have built-in support for Blackfire.io. To use it, first register your server ID and token with the Blackfire agent:\n\n```\nbin/root blackfire-agent --register --server-id={YOUR_SERVER_ID} --server-token={YOUR_SERVER_TOKEN}\n```\n\nNext, open up the `bin/start` helper script and uncomment the line:\n\n```\n#bin/root /etc/init.d/blackfire-agent start\n```\n\nFinally, restart the containers with `bin/restart`. After doing so, everything is now configured and you can use a browser extension to profile your Magento store with Blackfire.\n\n### Cloudflare Tunnel\n\nThese docker images have built-in support for Cloudflare Tunnel. It can be useful for testing implementations that require some third-party integrations involving allow-listing domains. Since your local app cannot be allow-listed by other services, you can use Cloudflare Tunnel to get a public hostname that can be allow-listed on the other service.\n\nTo use it:\n\n- First, create a tunnel in Cloudflare Zero Trust and add the token to `env/cloudflare.env`.\n- Next, uncomment Cloudflare Tunnel section in main `compose.yaml`.\n- Finally, restart the containers with `bin/restart`.\n\nIn Cloudflare Tunnel configuration, configure the service URL to use type `HTTPS` and a URL of `{name of app container}:{HTTPS port of app container}`. For examplem, `demo-app-1:8443`. Enable the `No TLS Verify` option, since our local certificates are self-signed. You should now be able to access your app via the public hostname defined in Cloudflare Tunnel.\n\nNOTE: Do not leave instances with Cloudflare Tunnel enabled running long-term, as your instance is publicly available to the world. You should ideally turn off tunnel container once testing is finished.\n\n### MFTF\n\nTo work with MFTF you will need to first enable the `selenium` image in the `compose.dev.yaml` file. Then, you will need to run the following.\n\n1. Run mftf build process `bin/mftf build:project`. This should build the basic setup for mftf in your project.\n2. Update the `extra_host` values to match your Magento URL and IP in `compose.dev.yaml`.\n3. Update the values in `src/dev/tests/acceptance/.env`, including adding the new line `SELENIUM_HOST=selenium` to define the host Codeception should connect to.\n4. Run a sample test `bin/mftf run:test AdminLoginSuccessfulTest`.\n5. Update your `nginx.conf` file to allow access to the dev section with the following, before the final `deny all` section:\n\n```\nlocation ~* ^/dev/tests/acceptance/utils($|/) {\n    root $MAGE_ROOT;\n    location ~ ^/dev/tests/acceptance/utils/command.php {\n        fastcgi_pass   fastcgi_backend;\n        fastcgi_index  index.php;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n}\n```\n\nFor debugging, you can connect to the selenium image using a VCN client.\n\n- Connect with the VCN option and `127.0.0.1:5900`, (default password: `secret`)\n- Run `bin/mftf doctor` to validate all sections are setup correctly.\n\nFind more info [here](https://devdocs.magento.com/mftf/docs/getting-started.html) about mftf configuration.\n\n### Grunt + LiveReload for Frontend Development\n\n#### Create a new theme and make it active\n\nCreate your new theme at `app/design/frontend/VendorName/theme-name`, with the related `composer.json`, `registration.php` and `theme.xml` files.\n\nMake your new theme active at Admin > Content > Design > Configuration. Click the Edit button next to Global Scope, and set the Applied Theme to your new theme name, and click Save Configuration.\n\n#### Load the LiveReload client file\n\nTo create a connection to LiveReload, you'll need to insert the LiveReload script into your theme. You can do this by creating a file in your theme at `Magento_Theme/layout/default_head_blocks.xml` with the contents:\n\n```xml\n<?xml version=\"1.0\"?>\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <head>\n        <script defer=\"true\" src=\"/livereload.js?port=443\" src_type=\"url\"/>\n    </head>\n</page>\n```\n\nThe \"?port=443\" parameter is important, otherwise the `livereload.js` script won't work.\n\nWhile we're at it, let's also create an initial LESS file so we have something to test. Create a new file in your theme at `web/css/source/_extend.less` with the contents:\n\n```css\nbody {\n    background: white;\n}\n```\n\nYou'll need to clear the Magento cache to enable your module, and make sure this layout XML update is properly loaded.\n\nYour new theme should now be active at `https://yourdomain.test`. Since this is a new theme, it should appear the same as the parent theme defined in your theme.xml file, which is usually Blank.\n\n#### Set up Grunt\n\nRun `bin/setup-grunt`. This will set up the Grunt configuration files for your new theme. It's important to run this step after setting up your new theme, not before.\n\n#### Start the Grunt watcher\n\nGrunt can watch for filesystem changes by running `bin/grunt watch`. You can optionally pass in the `--verbose` or `-v` flag to toggle verbose mode on. This will let you know what's going on under the hood, so you can be sure it is compiling & watching the correct files, and updating them as changes are made.\n\n#### LiveReload Browser extension\n\nRunning the `grunt watch` process also spawns the LiveReload server. Your browser needs to connect to this server, and this is done by installing the [LiveReload browser extension](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei?hl=en).\n\nIn your browser, be sure to also open the Google Chrome Dev Tools, go to the Network tab, and click \"Disable cache\". This will ensure the browser does not long-cache static file assets, such as JavaScript & CSS files, which is important during development.\n\nEnsure the LiveReload browser icon has been toggled on, and refresh the page. We can confirm the LiveReload script is loaded by going to the Network tab and ensuring the `livereload.js` file is loaded, and that it also spawns off a new websocket request to `/livereload`.\n\n#### Test LiveReload\n\nSince this is all set, let's update the CSS file to a different background color:\n\n```css\nbody {\n    background: blue;\n}\n```\n\nUpon saving this file, we will see the Grunt watcher detect the changes, and your browser should automatically load the new style without you needing to refresh the page, and without a full browser refresh.\n\n### PHP-SPX\n\nThe images also have additional profiler-tracers built-in to the <a href=\"https://github.com/NoiseByNorthwest/php-spx/tree/master#web-ui\" target=\"_blank\">Web UI.</a>\n\nTo access the control panel, just open the following URL: `https://magento.test/?SPX_UI_URI=/`\n\n**Suggested Configuration**\n\n- Enabled: Checked\n- Automatic start: Checked\n- Profile internal functions: Unchecked\n- Sampling: 5ms\n- Max profiling depth: Unlimited\n- Additional metrics: Unselected\n\nChanging any options on this page set cookies for the domain for these settings. After then visiting a page on the frontend, you can navigate back to the GUI and scroll to the bottom of the page, and click the related request to view the trace of the request & response.\n\nProfiling is also possible via command line, or curl:\n\n```\nSPX_REPORT=full SPX_ENABLED=1 SPX_SAMPLING_PERIOD=5000 bin/magento {command_name}\ncurl --cookie \"SPX_REPORT=full; SPX_ENABLED=1; SPX_SAMPLING_PERIOD=5000\" https://magento.test/\n```\n\nAdditional information of how to work with SPX is available at https://www.youtube.com/watch?v=xk-JiBLsKfA\n\n## Known Issues\n\nThere are currently no large known issues or workarounds needed to use docker-magento with your Magento project. If you find any, please [report them](https://github.com/markshust/docker-magento/issues)!\n\n## Credits\n\n### M.academy\n\nThis course is sponsored by <a href=\"https://m.academy\" target=\"_blank\">M.academy</a>, the simplest way to learn Magento.\n\n<a href=\"https://m.academy\" target=\"_blank\"><img src=\"docs/macademy-logo.png\" alt=\"M.academy\"></a>\n\n### Mark Shust\n\nMy name is Mark Shust and I'm the creator of this repo. I'm a <a href=\"https://www.credly.com/users/mark-shust/badges\" target=\"_blank\">6X Adobe Commerce Certified Developer</a> and have been involved with Magento since the early days (v0.8!). I create technical education courses full-time for my company, <a href=\"https://m.academy\" target=\"_blank\">M.academy</a>.\n\n- <a href=\"https://m.academy/courses\" target=\"_blank\">🖥️ See my Magento lessons & courses</a>\n- <a href=\"https://m.academy/articles\" target=\"_blank\">📖 Read my technical articles</a>\n- <a href=\"https://youtube.com/markshust\" target=\"_blank\">🎥 Watch my YouTube videos</a>\n- <a href=\"https://www.linkedin.com/in/MarkShust/\" target=\"_blank\">🔗 Connect on LinkedIn</a>\n- <a href=\"https://twitter.com/MarkShust\" target=\"_blank\">🐦 Follow me on X</a>\n- <a href=\"mailto:mark@m.academy\">💌 Contact me</a>\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT)\n"
        },
        {
          "name": "compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}