{
  "metadata": {
    "timestamp": 1736568292208,
    "page": 194,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Kyle-Ye/XcodeLLMEligible",
      "stars": 2692,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.029296875,
          "content": "Copyright 2024 Kyle-Ye\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.255859375,
          "content": "## <div align=\"center\"><b><a href=\"README.md\">English</a> | <a href=\"README_CN.md\">简体中文</a></b></div>\n\n# Darwin Eligibility Override\n\nThis project aims to achieve permanent use of Xcode LLM/Apple Intelligence on any Mac\nwithout disabling System Integrity Protection (SIP) or only disabling it once.\n\n> [!NOTE]\n> Xcode LLM is only supported on macOS 15.0+\n>\n> Apple Intelligence is only supported on macOS 15.1+\n>\n> XcodeLLM, Apple Intelligence and ChatGPT integration have been tested normally on Mac mini (M4 Pro, 2024) + macOS 15.2.\n\n![Screenshot](images/XcodeLLM/screenshot.png)\n\n## Notes\n\nthis project is for learning and research purposes only.\n\nIf you choose to use this project, you do so at your own risk and are responsible for compliance with any applicable laws.\n\nThe author of this project is not responsible for any consequences that may arise from your use of this project.\n\n## Usage\n\n### Method 1: util tool (Recommended)\n\nNeed one time SIP disable + \"amfi_get_out_of_my_way=1\" set boot-args in during the script.\n\n> [!TIP]\n> If you have issue on how to disable SIP or set boot-args, see [Manual Execution](#manual-execution) section for more detail.\n\n```shell\n# Force XcodeLLM to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util xcodellm\n# Force Apple Intelligence to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util greymatter\n# Force Cleanup to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util strontium\n```\n\n### Method 2: override file\n\nDo not require disable SIP at all.\n\n```shell\n# Override XcodeLLM only\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override xcodellm\n# Override Apple Intelligence only\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override greymatter\n# For Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override greymatter+strontium\n# For XcodeLLM + Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override xcodellm+greymatter+strontium\n```\n\n> [!NOTE]\n> The override file method is mutually exclusive.\n>\n> This repository only provides separate override files for Xcode LLM and Apple Intelligence.\n>\n> If you want to override multi key, please use util tool method and export the override file for your future use.\n\n## Uninstall\n\n### Method 1: util tool\n\n```shell\n# For XcodeLLM:\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util xcodellm\n# For Apple Intelligence\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util greymatter\n# For Clenaup as part of Apple Intelligence feature\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util strontium\n```\n\n### Method 2: override file\n\n```shell\n# For XcodeLLM:\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override xcodellm\n# For Apple Intelligence\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override greymatter\n# For Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override greymatter+strontium\n# For XcodeLLM + Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override xcodellm+greymatter+strontium\n```\n\n## Manual Execution\n\n### Method 1: util tool (Recommended)\n\n1. Disable SIP in recovery mode with `csrutil disable`\n\n2. Add boot argument by `sudo nvram boot-args=\"amfi_get_out_of_my_way=1\"` and reboot\n\n3. Download `eligibility_util` from the [release page](https://github.com/Kyle-Ye/XcodeLLMEligible/releases) and add executable permission.\n\n> The following command example assumes the downloaded file is in the `~/Downloads` folder.\n\n```shell\nchmod +x ~/Downloads/eligibility_util\n```\n\n4. Execute the following command\n\n```shell\ncd ~/Downloads\n# For XcodeLLM:\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_XCODE_LLM --answer 4\n# For Apple Intelligence (macOS 15.1+ required)\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER --answer 4\n# For Cleanup as part of Apple Intelligence feature (macOS 15.1 Beta 3+ required)\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_STRONTIUM --answer 4\n```\n\n4. Enable SIP in recovery mode with `csrutil enable` and reboot.\n\n5. Remove boot argument by `sudo nvram -d boot-args`\n\n> Read [Disabling and Enabling System Integrity Protection](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection) if you are unfamiliar with SIP operation.\n>\n> You can only set boot-args in recovery mode or normal mode with SIP disabled.\n>\n> After setting boot-args, remember to reboot to make the change take effect.\n\n> [!TIP]\n>\n> For more technical detail, see [Kyle-Ye/eligibility](https://github.com/Kyle-Ye/eligibility)\n\n\n### Method 2: override file\n\nNo SIP disabled needed in total.\n\n1. Download the corresponding `*.eligibility_overrides.data` file from the [release page](https://github.com/Kyle-Ye/XcodeLLMEligible/releases) and rename it to `eligibility_overrides.data`\n\n> For Xcode LLM, download [xcodellm.eligibility_overrides.data](https://github.com/Kyle-Ye/XcodeLLMEligible/releases/latest/download/xcodellm.eligibility_overrides.data)\n> \n> For Apple Intelligence, download [greymatter.eligibility_overrides.data](https://github.com/Kyle-Ye/XcodeLLMEligible/releases/latest/download/greymatter.eligibility_overrides.data)\n\n2. Find the correct container uuid for `eligibilityd` under `/private/var/root/Library/Daemon\\ Containers`\n\nList all container uuid by the following command:\n```shell\nsudo ls /private/var/root/Library/Daemon\\ Containers\n```\n\n3. Move downloaded file in the first step to the `Data/Library/Caches/NeverRestore/` folder of the corresponding Deamon container. If you are not sure which one is the correct container directory for eligibilityd, you can try it one by one or add the downloaded files to all Deamon containers.\n\n```shell\nsudo mkdir /private/var/root/Library/Daemon\\ Containers/<UUID>/Data/Library/Caches/NeverRestore\nsudo cp eligibility_overrides.data /private/var/root/Library/Daemon\\ Containers/<UUID>/Data/Library/Caches/NeverRestore/\n```\n\n4. Relaunch the `eligibilityd` service\n\n```shell\nsudo pkill -9 eligibilityd\nsudo launchctl kickstart -k system/com.apple.eligibilityd\n```\n\n## Trouble Shooting\n\n> [!TIP]\n> The difference of eligibility_util and eligibility_util_sip is that the former is for SIP disabled environment and the latter is for SIP enabled environment.\n\n### Issue of Method 1: util tool \n\n1. If you see the following output\n\n```shell\nzsh: no such file or directory: ./eligibility_util\n```\n\nPlease make sure the current working directory contains the `eligibility_util` file.\n\n2. If you see the following output\n\n```shell\nzsh: permission denied: ./eligibility_util\n```\n\nPlease make sure you have added the executable permission to the `eligibility_util` file via `chmod +x ./eligibility_util`.(Check step 3 in [Manual Execution](#manual-execution))\n\n3. If you see the following output\n\n```shell\n>[1]    61672 killed     ./eligibility_util\n```\n\nPlease make sure you have disabled SIP and set the boot-args correctly. (Check step 1 and 2 in [Manual Execution](#manual-execution))\n\n4. Other issue\n\n```shell\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- doctor\n```\n\n### Issue of Method 2: override file\n\nIf you are unable to access the Daemon Container related folders, please check if the terminal app you are using has full disk access permission.\n\nPath: Settings.app > Security & Privacy > Full Disk Access -> Add your terminal app to the list and enable it.\n\n### Other Xcode LLM related issue\n\n1. Confirom the override is working and you have the correct answer.\n\n```\n./eligibility_util_sip getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_XCODE_LLM\n```\n\n2. Reenable SIP and then open Xcode to download Model.\n\nSee detail for [#4](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/4)\n\n### Other Apple Intelligence related issue\n\n> [!IMPORTANT]\n> Suggestions:\n> 1. Log in with a US Apple ID\n> 2. Set Region to United States and English as the primary language\n> 3. Set English (United States) as your Siri language\n\n1. Confirom the override is working and you have the correct answer.\n\n```\n./eligibility_util_sip getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER\n```\n\n2. Go to Setting.app and choose \"Apple Intelligence & Siri\", click \"Join Apple Intelligence Waitlist\" button.\n\n![Step2](images/AppleIntelligence/Step2.png)\n\n3. You'll see \"Joined Waitlist\" label and wait for a while.\n\n![Step3](images/AppleIntelligence/Step3.png)\n\n4. You'll see \"Preparing\" label and wait for a while.\n\n![Step4](images/AppleIntelligence/Step4.png)\n\n5. You'll receive \"Apple Intelligence is Here\" notification.\n\n![Step5](images/AppleIntelligence/Step5.png)\n\n6. You can now turn on Apple Intelligence to use it.\n\n![Step6](images/AppleIntelligence/Step6.png)\n\n## FAQ\n\n1. Will \"Eligibility Override\" still work after an OS update?\n\nProbably yes. Eligibility Override does not require you to execute the steps again after an OS update.\n\nBut Apple may change the Eligibility mechanism in the future, so it is not guaranteed to work after an OS update.\n\n2. Why is there no Apple Intelligence in the settings?\n\nApple Intelligence is only available on macOS 15.1 and later.\n\n3. Why is there no ChatGPT related option in the settings?\n\nChatGPT integration is only available on macOS 15.2 and later.\n\n4. Why does Siri still use Baidu's services after enabling Apple Intelligence (CN related)?\n\nSiri's search engine is determined by your region language settings and network environment. Please refer to other resources on the internet for appropriate network proxy configuration.\n\neg. https://github.com/VirgilClyne/iRingo\n\n5. Apple Intelligence is stuck on downloading.\n\nTry disable and delete AssetsV2 folder after SIP disabled, then re-enable SIP.\n\n```shell\n# Disable SIP (Run on RecoveryOS mode)\ncsrutil disable\ncsrutil authenticated-root disable\n# Reboot into normal macOS\n# Turn off Apple Intelligence in settings\n# Run on normal macOS\nsudo rm -rf /System/Library/AssetsV2/*\n# Enable SIP (Run on RecoveryOS mode)\ncsrutil enable\ncsrutil authenticated-root enable\n# Turn on Apple Intelligence in settings to download it again (com.apple.MobileAsset.UAF.FM.GenerativeModels)\n```\n\n> See [#62](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/62#issuecomment-2541993096).\n\n6. Why I can use ChatGPT in Apple Intelligence?\n\nIt is probably caused by network issues. If you are in an unsupported area, please make sure that you use a global network proxy or other means to access the service.\n\n- For Shadowrocket, use the Global proxy mode.\n- For other proxy tools, please refer to its official documents.\n\n> [!NOTE]\n> It is not enough to proxy the network traffic of the Web alone. Please proxy at the OS or local network (router) level.\n>\n> You can verify it by directly launching your terminal and running `ping google.com` or `curl cip.cc` to check if your proxy is working or not. (Warning: `cip.cc` is a third-party service. Please use it at your own discretion.)\n>\n> See [#60](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/60#issuecomment-2541349746) for more details.\n\n## Related links\n\n- https://github.com/Kyle-Ye/eligibility/\n\n- https://gist.github.com/Kyle-Ye/4ad1aa92df3a31bd812487af65e16947\n- https://gist.github.com/unixzii/6f25be1842399022e16ad6477a304286\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=Kyle-Ye/XcodeLLMEligible&type=Date)](https://star-history.com/#Kyle-Ye/XcodeLLMEligible&Date)\n\n## License\n\nMIT. See LICENSE file."
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 11.7578125,
          "content": "## <div align=\"center\"><b><a href=\"README.md\">English</a> | <a href=\"README_CN.md\">简体中文</a></b></div>\n\n# Darwin Eligibility Override\n\n本项目旨在不禁用系统完整性保护 (SIP) 或者仅禁用一次的情况下\n实现永久在任意 Mac 上使用 Xcode LLM / Apple Intelligence。\n\n> [!NOTE]\n> Xcode LLM 仅支持在 macOS 15.0 及更高版本上使用。\n>\n> Apple Intelligence 仅支持在 macOS 15.1 及更高版本上使用。\n>\n> XcodeLLM, Apple Intelligence 和 ChatGPT 集成已在 Mac mini (M4 Pro, 2024) + macOS 15.2 上测试正常。\n\n![屏幕截图](images/XcodeLLM/screenshot.png)\n\n## 注意事项\n\n这个项目仅用于学习和研究目的。\n\n如果您选择使用此项目，您将自行承担风险，并有责任遵守任何适用法律。\n\n本项目的作者对您使用本项目可能产生的任何后果概不负责。\n\n## 使用方式\n\n### 方案一 util 工具（推荐）\n\n在脚本执行期间需要临时禁用一次 SIP 并在启动参数中添加 \"amfi_get_out_of_my_way=1\"。\n\n> [!TIP]\n> 如果你在如何禁用 SIP 或设置启动参数方面遇到问题，请参阅[手动执行](#manual-execution)部分以了解更多详细信息。\n\n```shell\n# Force XcodeLLM to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util xcodellm\n# Force Apple Intelligence to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util greymatter\n# Force Cleanup to be eligible\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util strontium\n# For Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override greymatter+strontium\n# For XcodeLLM + Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override xcodellm+greymatter+strontium\n```\n\n### 方案二 override 文件\n\n完全不需要禁用 SIP。\n\n```shell\n# Override XcodeLLM only\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override xcodellm\n# Override Apple Intelligence only\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install override greymatter\n```\n\n> [!NOTE]\n> override 文件方案是互斥的。\n>\n> 本仓库仅提供了单独了 Xcode LLM 和 Apple Intelligence 的 override 文件。\n>\n> 如果需要覆盖多个，请使用 util 工具方案分别覆盖后导出 override 文件供自己未来使用。\n\n## 卸载\n\n### 方案一 util 工具\n\n```shell\n# For XcodeLLM:\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util xcodellm\n# For Apple Intelligence\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util greymatter\n# For Clenaup as part of Apple Intelligence feature\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall util strontium\n```\n\n### 方案二 override 文件\n\n```shell\n# For XcodeLLM:\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override xcodellm\n# For Apple Intelligence\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override greymatter\n# For Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override greymatter+strontium\n# For XcodeLLM + Apple Intelligence + Cleanup\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- uninstall override xcodellm+greymatter+strontium\n```\n\n## 手动执行\n\n### 方案一 util 工具 （推荐）\n\n1. 在恢复模式下通过 `csrutil disable` 禁用 SIP\n\n2. 添加启动参数 `sudo nvram boot-args=\"amfi_get_out_of_my_way=1\"`并**重启**\n\n3. 从[发布页面](https://github.com/Kyle-Ye/XcodeLLMEligible/releases)下载可执行文件 `eligibility_util` 并添加执行权限。\n\n> 以下的命令假设下载的文件在 `~/Downloads` 文件夹。\n\n```shell\nchmod +x ~/Downloads/eligibility_util\n```\n\n4. 执行以下命令\n\n```shell\ncd ~/Downloads\n# For XcodeLLM:\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_XCODE_LLM --answer 4\n# For Apple Intelligence (macOS 15.1+ required)\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER --answer 4\n# For Cleanup as part of Apple Intelligence feature (macOS 15.1 Beta 3+ required)\n./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_STRONTIUM --answer 4\n```\n\n4. 在恢复模式下通过 `csrutil enable` 恢复 SIP\n5. 删除启动参数 `sudo nvram -d boot-args`\n\n> 如果你不熟悉 SIP 操作，请阅读 [Disabling and Enabling System Integrity Protection](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection)。\n>\n> 你只能在恢复模式或禁用 SIP 的普通模式下设置boot-args。\n>\n> 设置boot-args后，记得重新启动以使更改生效。\n\n> [!TIP]\n> 更多技术细节，请参阅 [Kyle-Ye/eligibility](https://github.com/Kyle-Ye/eligibility)\n\n### 方案二 override 文件\n\n完全不需要禁用 SIP。\n\n1. 从[发布页面](https://github.com/Kyle-Ye/XcodeLLMEligible/releases)下载需要的 `*.eligibility_overrides.data` 文件并重命名为 `eligibility_overrides.data`\n\n> 对于 Xcode LLM，下载 [xcodellm.eligibility_overrides.data](https://github.com/Kyle-Ye/XcodeLLMEligible/releases/download/0.2.0/xcodellm.eligibility_overrides.data)\n> \n> 对于 Apple Intelligence，下载 [greymatter.eligibility_overrides.data](https://github.com/Kyle-Ye/XcodeLLMEligible/releases/download/0.2.0/greymatter.eligibility_overrides.data)\n\n2. 在 `/private/var/root/Library/Daemon\\ Containers` 下找到 `eligibilityd` 的容器 UUID\n\n通过以下命令查看所有的 UUID\n```shell\nsudo ls /private/var/root/Library/Daemon\\ Containers\n```\n\n3. 将第一步下载的文件移动到相应的 Deamon 容器的 `Data/Library/Caches/NeverRestore/` 文件夹中。如果您不确定哪个是 eligibilityd 的容器目录，您可以一个一个地尝试，或者将下载的文件添加到所有 Deamon 容器中。\n\n```shell\nsudo mkdir /private/var/root/Library/Daemon\\ Containers/<UUID>/Data/Library/Caches/NeverRestore\nsudo cp eligibility_overrides.data /private/var/root/Library/Daemon\\ Containers/<UUID>/Data/Library/Caches/NeverRestore/\n```\n\n4. 重启 eligitbilityd 服务\n\n```shell\nsudo pkill -9 eligibilityd\nsudo launchctl kickstart -k system/com.apple.eligibilityd\n```\n\n## 故障排除\n\n> [!TIP]\n> eligibility_util 和 eligibility_util_sip 的区别在于，后者可以用于开启了SIP的环境（仅部分功能可用）。\n\n### 方案一 util 工具问题\n\n1. 如果看到以下输出\n\n```shell\nzsh: no such file or directory: ./eligibility_util\n```\n\n请确保当前工作路径含有 `eligibility_util` 的文件。\n\n2. 如果看到以下输出\n\n```shell\nzsh permission denied: ./eligibility_util\n```\n\n请确保已添加了执行权限 `chmod +x ./eligibility_util`。(检查[手动执行](#手动执行)的第 3 步)\n\n3. 如果看到以下输出\n\n```shell\n>[1]    61672 killed     ./eligibility_util\n```\n\n请确保已禁用了 SIP 设置了正确的 boot-args 并已重启。(检查[手动执行](#手动执行)的第 1 步和第 2 步)\n\n4. 其他问题\n\n```shell\ncurl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- doctor\n```\n\n### 方案二 override 文件问题\n\n如果你无法访问 Daemon Container 相关文件夹，请检查你使用的终端App是否拥有完全磁盘访问权限。\n\n路径：设置 App -> 隐私和安全性 -> 完全磁盘访问权限 -> 添加你的终端App并允许访问。\n\n### 其他 Xcode LLM 相关问题\n\n1. 确认覆盖生效并且你有正确的 Answer。\n```\n./eligibility_util_sip getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_XCODE_LLM\n```\n\n2. 重新启用 SIP，然后打开 Xcode 下载模型。\n\nSee detail for [#4](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/4)\n\n### 其他 Apple Intelligence 相关问题\n\n> [!IMPORTANT]\n> 建议：\n> 1. 登录美区 Apple ID\n> 2. 将地区设置为美国，并将英语设置为首选语音\n> 3. 将英语（美国）设置为 Siri 语言\n\n1. 确认覆盖生效并且你有正确的 Answer。\n\n```\n./eligibility_util_sip getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER\n```\n\n2. 进入设置 App > \"Apple Intelligence & Siri\"，点击 \"Join Apple Intelligence Waitlist\" 按钮。\n\n![Step2](images/AppleIntelligence/Step2.png)\n\n3. 你将看到 \"Joined Waitlist\" 标签，然后耐心等待一段时间。 \n\n![Step3](images/AppleIntelligence/Step3.png)\n\n4. 你将看到 \"Preparing\" 标签，然后继续耐心等待一段时间。\n\n![Step4](images/AppleIntelligence/Step4.png)\n\n5. 你将收到 \"Apple Intelligence is Here\" 通知。\n\n![Step5](images/AppleIntelligence/Step5.png)\n\n6. 你现在可以打开 Apple Intelligence 并使用它。\n\n![Step6](images/AppleIntelligence/Step6.png)\n\n## FAQ\n\n1. 在系统更新之后这种方式还会生效吗？\n\n大概率会。Eligibility Override 不需要你在系统更新后再次执行一遍命名。\n\n但是 Apple 可能会在未来更改 eligibility 机制，所以不能保证在系统更新后仍然有效。\n\n2. 为什么在设置里没有 Apple Intelligence？\n\nApple Intelligence 只在 macOS 15.1 及更高版本上可用。\n\n3. 为什么在设置里没有 ChatGPT 相关?\n\nChatGPT 集成只在 macOS 15.2 及更高版本上可用。\n\n4. 为什么开启 Apple Intelligence 后，Siri 仍然使用了百度的服务?\n\nSiri 的搜索引擎是由你的地区语言设置和网络环境决定的。请参考互联网上的其他资料选择合适的网络代理进行配置。\n\neg. https://github.com/VirgilClyne/iRingo\n\n5. 为什么我的 Apple Intelligence 一直卡在下载 100%?\n\n可以尝试关闭 SIP 后删除 AssetsV2 文件夹，然后重新启用 SIP。\n\n```shell\n# 关闭SIP (恢复 OS 模式下执行)\ncsrutil disable\ncsrutil authenticated-root disable\n# 重启进入到普通 macOS\n# 设置中关闭 Apple Intelligence\n# 普通 macOS 的终端中执行\nsudo rm -rf /System/Library/AssetsV2/*\n# 开启 SIP (恢复 OS 模式下执行)\ncsrutil enable\ncsrutil authenticated-root enable\n# 设置中开启 Apple Intelligence\n```\n\n> See [#62](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/62#issuecomment-2541993096).\n\n6. 为什么我的 Apple Intelligence 中无法使用 ChatGPT?\n\n大概率是网络原因导致，如果你处在不受支持的地区，请确保你使用了全局网络代理等方式来访问该服务。\n\n- 对于 Shadowrocket，开启全局代理即可。\n- 对于其他代理工具，请参考其官方文档。\n\n> [!NOTE]\n> 仅代理 Web 的网络流量是不够的，请在 OS 或者本地网络（路由器）层面进行代理。\n>\n> 可以通过直接启动终端并运行 `ping google.com` 或 `curl cip.cc` 来进行验证。（警告：`cip.cc`是第三方服务。请自行决定使用它。）\n>\n> See [#60](https://github.com/Kyle-Ye/XcodeLLMEligible/issues/60#issuecomment-2541349746) for more details.\n\n## 相关链接\n\n- https://github.com/Kyle-Ye/eligibility/\n\n- https://gist.github.com/Kyle-Ye/4ad1aa92df3a31bd812487af65e16947\n- https://gist.github.com/unixzii/6f25be1842399022e16ad6477a304286\n\n## 星星历史\n\n[![Star History Chart](https://api.star-history.com/svg?repos=Kyle-Ye/XcodeLLMEligible&type=Date)](https://star-history.com/#Kyle-Ye/XcodeLLMEligible&Date)\n\n## 版权信息\n\nMIT。详见 LICENSE 文件。"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "override_apple_intelligence.sh",
          "type": "blob",
          "size": 0.3984375,
          "content": "#!/bin/bash\n\necho -e \"\\033[31mThis script has been moved to https://github.com/Kyle-Ye/XcodeLLMEligible/blob/release/0.1/override_apple_intelligence.sh\\033[0m\"\necho -e \"\\033[31mRecommend to use the new script on https://github.com/Kyle-Ye/XcodeLLMEligible/blob/release/0.2/scripts/override.sh\\033[0m\"\necho -e \"\\033[31mFor more detail, see https://github.com/Kyle-Ye/XcodeLLMEligible/tree/release/0.2\\033[0m\"\n"
        },
        {
          "name": "override_xcodellm.sh",
          "type": "blob",
          "size": 0.388671875,
          "content": "#!/bin/bash\n\necho -e \"\\033[31mThis script has been moved to https://github.com/Kyle-Ye/XcodeLLMEligible/blob/release/0.1/override_xcodellm.sh\\033[0m\"\necho -e \"\\033[31mRecommend to use the new script on https://github.com/Kyle-Ye/XcodeLLMEligible/blob/release/0.2/scripts/override.sh\\033[0m\"\necho -e \"\\033[31mFor more detail, see https://github.com/Kyle-Ye/XcodeLLMEligible/tree/release/0.2\\033[0m\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}