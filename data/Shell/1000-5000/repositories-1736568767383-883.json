{
  "metadata": {
    "timestamp": 1736568767383,
    "page": 883,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tmux-plugins/tmux-copycat",
      "stars": 1116,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2578125,
          "content": "# Force text files to have unix eols, so Windows/Cygwin does not break them\n*.* eol=lf\n\n# These files are unfortunately not recognized as text files so\n# explicitly listing them here\nVagrantfile eol=lf\nrun-tests eol=lf\ntest/run-tests-within-vm eol=lf\n*.png binary\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".vagrant/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.93359375,
          "content": "# generic packages\nbefore_install:\n  - sudo apt-get update\n  - sudo apt-get install -y git-core expect gawk\n  - sudo apt-get install -y python-software-properties software-properties-common\n\n# install Tmux 2.5\ninstall:\n  - VERSION=2.5\n  - sudo apt-get -y remove tmux\n  - sudo apt-get -y install wget tar libevent-dev libncurses-dev make\n  - wget https://github.com/tmux/tmux/releases/download/${VERSION}/tmux-${VERSION}.tar.gz\n  - tar xf tmux-${VERSION}.tar.gz\n  - rm -f tmux-${VERSION}.tar.gz\n  - cd tmux-${VERSION}\n  - ./configure\n  - make\n  - sudo make install\n  - cd -\n  - sudo rm -rf /usr/local/src/tmux-*\n  - sudo mv tmux-${VERSION} /usr/local/src\n\n# override PS1 and irb prompt, fetch a git repo used for testing\nbefore_script:\n  - echo 'export PS1=\"\\$ \"' >> ~/.bashrc\n  - echo 'IRB.conf[:PROMPT_MODE] = :SIMPLE' >> ~/.irbrc\n  - git clone https://github.com/tmux-plugins/tmux-example-plugin ~/tmux-example-plugin\n\nscript: ./test/run-tests-within-vm\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.1904296875,
          "content": "# Changelog\n\n### master\n\n### v3.0.0, Nov 01, 2017\n- if installed use `gawk` instead of `awk` (@metcalfc)\n- add stored search for matching git SHAs (@jbnicolai)\n- move documentation from github wiki to `docs/` folder\n- support for tmux 2.4+, not compatible with tmux 2.3 and earlier (@thalesmello)\n\n### v2.1.0, Jan 01, 2015\n- combine send-keys calls to reduce flickering (@toupeira)\n- add `file:///` prefix for local file url's (@vellvisher)\n- add `git://` type url\n\n### v2.0.0, Oct 16, 2014\n- add tmux options for default searches\n- use `session_id` instead of `session_name` in the copycat file name (solution\n  provided by @toupeira)\n- use `grep -E` and remove eval (@toupeira)\n\n### v1.1.0, Sep 29, 2014\n- add IP address search\n- enhance url search with git and ftp urls\n\n### v1.0.0, Aug 31, 2014\n- simplify file search stored regex\n- match files starting with dot\n- improve README - add more relevant related plugins\n- do not use `copycat_clear_search` method when in copycat mode. It was causing\n  mysterious issues for some users.\n- update `README.md` - warning about a breaking mapping\n- remove rails request stored search `C-r`\n\n### v0.1.0, Aug 02, 2014\n- remove note about git history issue\n- url saved search includes `#` character\n- improve stored search handling\n- update README and document addding custom stored searches\n\n### v0.0.7, Jul 31, 2014\n- add customization section to the readme (@soli)\n- remove screencast from the project. The video is too bit and plugin download\n  is slow because of that. The video is moved to the separate `screencast`\n  branch.\n- run test suite on 2 vagrant VMs: ubuntu and centos\n\n### v0.0.6, Jul 28, 2014\n- update video script\n- update readme and invite for code contributions\n- update dockerfile with it's purpose\n- add test suite `README` file\n- add screencast original document to git\n- add video directory `README` file\n- update readme to reflect github organization change\n- add a screencast link to the readme\n\n### v0.0.5, Jul 24, 2014\n- improve stored file matching search\n- fix wrong result highlighting for lines that have \\r, \\n chars\n- another improvement to file matching search: changed regex strategy to be\n  \"inclusive\"\n- add test suite\n- update readme to show how test suite is started\n\n### v0.0.4, Jul 9, 2014\n- bugfix for incorrect result highlighting\n- optimize and improve the function that centers the result vertically on the\n  screen\n- fix OS X awk bug: awk variable content can't start with `=` char\n- fix a bug with wrong result highlighting caused by using `printf`\n- fix a bug with wrong result highlighting caused by a bug in OSX `grep`\n- improve URL matching regex. Matches don't include quotes anymore.\n\n### v0.0.3, Jun 29, 2014\n- add notifications about the first and last match\n- improve \"jump correction\" handling by fetching the precise window height\n- improve result vertical centering & fix a related bug\n\n### v0.0.2, Jun 26, 2014\n- search results are always at the bottom of the page. If possible center the\n  result, or provide maximum possible padding.\n- refactoring in `copycat_jump.sh` - extract 2 constants to file global variables\n- improve file matching regex. `master...origin/master` is not detected as a\n  string.\n\n### v0.0.1, Jun 25, 2014\n- first version, plugin working\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (C) 2014 Bruno Sutic\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.486328125,
          "content": "# Tmux copycat\n\n[![Build Status](https://travis-ci.org/tmux-plugins/tmux-copycat.svg?branch=master)](https://travis-ci.org/tmux-plugins/tmux-copycat)\n\n**NOTE: [tmux 3.1 adds support for native regex searches](https://raw.githubusercontent.com/tmux/tmux/3.1/CHANGES).\nThis is great news because it means a big part of 'tmux-copycat' is now\navailable natively! Use this plugin only if you need its other features.**\n\nThis plugin enables:\n\n- regex searches (native support added in tmux 3.1)\n- search result highlighting\n- predefined searches\n\nPredefined searches are plugin killer feature. It speeds the workflow and\nreduces mouse usage with Tmux.\n\nIt works even better when paired with\n[tmux yank](https://github.com/tmux-plugins/tmux-yank). Tested and working on\nLinux, OSX and Cygwin.\n\n### Screencast\n\n[![screencast screenshot](/video/screencast_img.png)](https://vimeo.com/101867689)\n\n#### Search\n\n- `prefix + /` - regex search (strings work too)\n\nExample search entries:\n\n- `foo` - searches for string `foo`\n- `[0-9]+` - regex search for numbers\n\nGrep is used for searching.<br/>\nSearches are case insensitive.<br/>\n\n#### Predefined searches\n\n- `prefix + ctrl-f` - simple *f*ile search\n- `prefix + ctrl-g` - jumping over *g*it status files (best used after `git status` command)\n- `prefix + alt-h` - jumping over SHA-1/SHA-256 hashes (best used after `git log` command)\n- `prefix + ctrl-u` - *u*rl search (http, ftp and git urls)\n- `prefix + ctrl-d` - number search (mnemonic d, as digit)\n- `prefix + alt-i` - *i*p address search\n\nThese start \"copycat mode\" and jump to first match.\n\n#### \"Copycat mode\" bindings\n\nThese are enabled when you search with copycat:\n\n- `n` - jumps to the next match\n- `N` - jumps to the previous match\n\nTo copy a highlighted match:\n\n- `Enter` - if you're using Tmux `vi` mode\n- `ctrl-w` or `alt-w` - if you're using Tmux `emacs` mode\n\nCopying a highlighted match will take you \"out\" of copycat mode. Paste with\n`prefix + ]` (this is Tmux default paste).\n\nCopying highlighted matches can be enhanced with\n[tmux yank](https://github.com/tmux-plugins/tmux-yank).\n\n### Installation with [Tmux Plugin Manager](https://github.com/tmux-plugins/tpm) (recommended)\n\nAdd plugin to the list of TPM plugins in `.tmux.conf`:\n\n    set -g @plugin 'tmux-plugins/tmux-copycat'\n\nHit `prefix + I` to fetch the plugin and source it. You should now be able to\nuse the plugin.\n\nOptional (but recommended) install `gawk` via your package manager of choice\nfor better UTF-8 character support.\n\n### Manual Installation\n\nClone the repo:\n\n    $ git clone https://github.com/tmux-plugins/tmux-copycat ~/clone/path\n\nAdd this line to the bottom of `.tmux.conf`:\n\n    run-shell ~/clone/path/copycat.tmux\n\nReload TMUX environment with: `$ tmux source-file ~/.tmux.conf`. You should now\nbe able to use the plugin.\n\nOptional (but recommended) install `gawk` via your package manager of choice\nfor better UTF-8 character support.\n\n### Installation for Tmux 2.3 and earlier\n\nDue to the changes in tmux, the latest version of this plugin doesn't support\ntmux 2.3 and earlier. It is recommended you upgrade to tmux version 2.4 or\nlater. If you must continue using older version, please follow\n[these steps for installation](docs/installation_for_tmux_2.3.md).\n\n### Limitations\n\nThis plugin has some known limitations. Please read about it\n[here](docs/limitations.md).\n\n### Docs\n\n- Most of the behavior of tmux-copycat can be customized via tmux options.\n  [Check out the full options list](docs/customizations.md).\n- To speed up the workflow you can define new bindings in `.tmux.conf` for\n  searches you use often, more info [here](docs/defining_new_stored_searches.md)\n\n### Other goodies\n\n`tmux-copycat` works great with:\n\n- [tmux-yank](https://github.com/tmux-plugins/tmux-yank) - enables copying\n  highlighted text to system clipboard\n- [tmux-open](https://github.com/tmux-plugins/tmux-open) - a plugin for quickly\n  opening a highlighted file or a url\n- [tmux-continuum](https://github.com/tmux-plugins/tmux-continuum) - automatic\n  restoring and continuous saving of tmux env\n\n### Test suite\n\nThis plugin has a pretty extensive integration test suite that runs on\n[travis](https://travis-ci.org/tmux-plugins/tmux-copycat).\n\nWhen run locally, it depends on `vagrant`. Run it with:\n\n    # within project top directory\n    $ ./run-tests\n\n### Contributions and new features\n\nBug fixes and contributions are welcome.\n\nFeel free to suggest new features, via github issues.\n\nIf you have a bigger idea you'd like to work on, please get in touch, also via\ngithub issues.\n\n### License\n\n[MIT](LICENSE.md)\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.2607421875,
          "content": "VAGRANTFILE_API_VERSION = '2'\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.define :ubuntu_two_five do |ubuntu|\n    ubuntu.vm.box = 'hashicorp/precise32'\n    ubuntu.vm.provision 'shell', path: 'vagrant_ubuntu_provisioning_two_five.sh'\n  end\nend\n"
        },
        {
          "name": "copycat.tmux",
          "type": "blob",
          "size": 2.822265625,
          "content": "#!/usr/bin/env bash\n\nCURRENT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\nsource \"$CURRENT_DIR/scripts/variables.sh\"\nsource \"$CURRENT_DIR/scripts/helpers.sh\"\nsource \"$CURRENT_DIR/scripts/stored_search_helpers.sh\"\n\n# this function defines default stored searches\nset_default_stored_searches() {\n\tlocal file_search=\"$(get_tmux_option \"$copycat_file_search_option\" \"$default_file_search_key\")\"\n\tlocal url_search=\"$(get_tmux_option \"$copycat_url_search_option\" \"$default_url_search_key\")\"\n\tlocal digit_search=\"$(get_tmux_option \"$copycat_digit_search_option\" \"$default_digit_search_key\")\"\n\tlocal hash_search=\"$(get_tmux_option \"$copycat_hash_search_option\" \"$default_hash_search_key\")\"\n\tlocal ip_search=\"$(get_tmux_option \"$copycat_ip_search_option\" \"$default_ip_search_key\")\"\n\n\tif stored_search_not_defined \"$url_search\"; then\n\t\ttmux set-option -g \"${COPYCAT_VAR_PREFIX}_${url_search}\" \"(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*\"\n\tfi\n\tif stored_search_not_defined \"$file_search\"; then\n\t\ttmux set-option -g \"${COPYCAT_VAR_PREFIX}_${file_search}\" \"(^|^\\.|[[:space:]]|[[:space:]]\\.|[[:space:]]\\.\\.|^\\.\\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*\"\n\tfi\n\tif stored_search_not_defined \"$digit_search\"; then\n\t\ttmux set-option -g \"${COPYCAT_VAR_PREFIX}_${digit_search}\" \"[[:digit:]]+\"\n\tfi\n\tif stored_search_not_defined \"$hash_search\"; then\n\t\ttmux set-option -g \"${COPYCAT_VAR_PREFIX}_${hash_search}\" \"\\b([0-9a-f]{7,40}|[[:alnum:]]{52}|[0-9a-f]{64})\\b\"\n\tfi\n\tif stored_search_not_defined \"$ip_search\"; then\n\t\ttmux set-option -g \"${COPYCAT_VAR_PREFIX}_${ip_search}\" \"[[:digit:]]{1,3}\\.[[:digit:]]{1,3}\\.[[:digit:]]{1,3}\\.[[:digit:]]{1,3}\"\n\tfi\n}\n\nset_start_bindings() {\n\tset_default_stored_searches\n\tlocal stored_search_vars=\"$(stored_search_vars)\"\n\tlocal search_var\n\tlocal key\n\tlocal pattern\n\tfor search_var in $stored_search_vars; do\n\t\tkey=\"$(get_stored_search_key \"$search_var\")\"\n\t\tpattern=\"$(get_stored_search_pattern \"$search_var\")\"\n\t\ttmux bind-key \"$key\" run-shell \"$CURRENT_DIR/scripts/copycat_mode_start.sh '$pattern'\"\n\tdone\n}\n\nset_copycat_search_binding() {\n\tlocal key_bindings\n\tread -r -d '' -a key_bindings <<<\"$(get_tmux_option \"$copycat_search_option\" \"$default_copycat_search_key\")\"\n\tlocal key\n\tfor key in \"${key_bindings[@]}\"; do\n\t\ttmux bind-key \"$key\" run-shell \"$CURRENT_DIR/scripts/copycat_search.sh\"\n\tdone\n}\n\nset_copycat_git_special_binding() {\n\tlocal key_bindings\n\tread -r -d '' -a key_bindings <<<\"$(get_tmux_option \"$copycat_git_search_option\" \"$default_git_search_key\")\"\n\tlocal key\n\tfor key in \"${key_bindings[@]}\"; do\n\t\ttmux bind-key \"$key\" run-shell \"$CURRENT_DIR/scripts/copycat_git_special.sh #{pane_current_path}\"\n\tdone\n}\n\nset_copycat_mode_bindings() {\n\t\"$CURRENT_DIR/scripts/copycat_mode_bindings.sh\"\n}\n\nmain() {\n\tset_start_bindings\n\tset_copycat_search_binding\n\tset_copycat_git_special_binding\n\tset_copycat_mode_bindings\n}\nmain\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-tests",
          "type": "blob",
          "size": 1.2197265625,
          "content": "#!/usr/bin/env bash\n\n# For each virtual machine where tests run, this script performs the following:\n# - starts VM\n# - starts the test suite witin a VM\n# - stops the VM after the test suite is done\n\n# global variable for script exit value\nexport EXIT_VALUE=0\n\nregister_failing_specs() {\n\tEXIT_VALUE=1\n}\n\nrun_vagrant() {\n\tlocal box=\"$1\"\n\tvagrant up \"$box\"\n}\n\n# Halt vagrant after tests are done running, unless KEEP_RUNNING environment\n# variable is set to 'true'.\nstop_vagrant() {\n\tlocal box=\"$1\"\n\tif [ -z \"$KEEP_RUNNING\" ]; then\n\t\tvagrant halt \"$box\"\n\telse\n\t\techo\n\t\techo \"KEEP_RUNNING is set. Vagrant not halted.\"\n\tfi\n}\n\nrun_tests() {\n\tlocal box=\"$1\"\n\tlocal test_file=\"/vagrant/test/run-tests-within-vm\"\n\techo \"Running test suite on $box from: $test_file\"\n\techo\n\tvagrant ssh \"$box\" -c \"cd /vagrant; $test_file\"\n}\n\nexit_message() {\n\tlocal exit_val=\"$1\"\n\techo\n\tif [ $exit_val == 0 ]; then\n\t\techo \"Success, tests pass!\"\n\telse\n\t\techo \"Tests failed!\" 1>&2\n\tfi\n}\n\nrun_tests_on_vm() {\n\tlocal vm=\"$1\"\n\trun_vagrant \"$vm\"\n\trun_tests \"$vm\"\n\tlocal tests_exit_value=\"$?\"\n\tstop_vagrant \"$vm\"\n\tif [ $tests_exit_value -gt 0 ]; then\n\t\tregister_failing_specs\n\tfi\n}\n\nmain() {\n\trun_tests_on_vm \"ubuntu_two_five\"\n\n\texit_message \"$EXIT_VALUE\"\n\texit \"$EXIT_VALUE\"\n}\nmain\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vagrant_ubuntu_provisioning_two_five.sh",
          "type": "blob",
          "size": 1.0517578125,
          "content": "#!/usr/bin/env bash\n\n# override PS1 prompt\necho 'export PS1=\"\\$ \"' >> /home/vagrant/.bashrc\n# simplify irb prompt\necho 'IRB.conf[:PROMPT_MODE] = :SIMPLE' >> /home/vagrant/.irbrc\nchown -R vagrant:vagrant /home/vagrant/.irbrc\n\nsudo apt-get update\nsudo apt-get install -y make\nsudo apt-get install -y git-core expect vim gawk\nsudo apt-get install -y python-software-properties software-properties-common\n\n# install Tmux 2.5\nVERSION=2.5\nsudo apt-get -y remove tmux\nsudo apt-get -y install wget tar libevent-dev libncurses-dev\nwget https://github.com/tmux/tmux/releases/download/${VERSION}/tmux-${VERSION}.tar.gz\ntar xf tmux-${VERSION}.tar.gz\nrm -f tmux-${VERSION}.tar.gz\ncd tmux-${VERSION}\n./configure\nmake\nsudo make install\ncd -\nsudo rm -rf /usr/local/src/tmux-*\nsudo mv tmux-${VERSION} /usr/local/src\n\n# clone a repo used later for tests\ngit clone https://github.com/tmux-plugins/tmux-example-plugin /home/vagrant/tmux-example-plugin\nchown -R vagrant:vagrant /home/vagrant/tmux-example-plugin\n\nsudo locale-gen \"en_US.UTF-8\"\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n"
        },
        {
          "name": "video",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}