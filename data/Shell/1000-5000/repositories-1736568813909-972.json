{
  "metadata": {
    "timestamp": 1736568813909,
    "page": 972,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "the0demiurge/CharlesScripts",
      "stars": 1034,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.427734375,
          "content": "*~\n*.swp\n*.save\n*.bak\n.git\nanacron\n.placeholder\n0anacron\n\n# Created by https://www.gitignore.io/api/visualstudiocode\n# Edit at https://www.gitignore.io/?templates=visualstudiocode\n\n### VisualStudioCode ###\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n\n# End of https://www.gitignore.io/api/visualstudiocode\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.05859375,
          "content": "sudo: required\nscript:\n  - 'yes|bash test/install.sh debug'\n"
        },
        {
          "name": "LICENCE",
          "type": "blob",
          "size": 3.5859375,
          "content": "MIT License\n\nCopyright (c) 2018 Chalres Xu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \\\"Software\\\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n----------\nCopyright (c) 2020 Charles Xu\n\n\"Anti 996\" License Version 1.0 (Draft)\n\nPermission is hereby granted to any individual or legal entity\nobtaining a copy of this licensed work (including the source code,\ndocumentation and/or related items, hereinafter collectively referred\nto as the \"licensed work\"), free of charge, to deal with the licensed\nwork for any purpose, including without limitation, the rights to use,\nreproduce, modify, prepare derivative works of, distribute, publish\nand sublicense the licensed work, subject to the following conditions:\n\n1. The individual or the legal entity must conspicuously display,\nwithout modification, this License and the notice on each redistributed\nor derivative copy of the Licensed Work.\n\n2. The individual or the legal entity must strictly comply with all\napplicable laws, regulations, rules and standards of the jurisdiction\nrelating to labor and employment where the individual is physically\nlocated or where the individual was born or naturalized; or where the\nlegal entity is registered or is operating (whichever is stricter). In\ncase that the jurisdiction has no such laws, regulations, rules and\nstandards or its laws, regulations, rules and standards are\nunenforceable, the individual or the legal entity are required to\ncomply with Core International Labor Standards.\n\n3. The individual or the legal entity shall not induce, suggest or force\nits employee(s), whether full-time or part-time, or its independent\ncontractor(s), in any methods, to agree in oral or written form, to\ndirectly or indirectly restrict, weaken or relinquish his or her\nrights or remedies under such laws, regulations, rules and standards\nrelating to labor and employment as mentioned above, no matter whether\nsuch written or oral agreements are enforceable under the laws of the\nsaid jurisdiction, nor shall such individual or the legal entity\nlimit, in any methods, the rights of its employee(s) or independent\ncontractor(s) from reporting or complaining to the copyright holder or\nrelevant authorities monitoring the compliance of the license about\nits violation(s) of the said license.\n\nTHE LICENSED WORK IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN ANY WAY CONNECTION WITH THE\nLICENSED WORK OR THE USE OR OTHER DEALINGS IN THE LICENSED WORK.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.455078125,
          "content": "<h1 align=\"center\">CharlesScripts</h1>\n<p align=\"center\">可以配合我的博客：<a href=\"https://the0demiurge.blogspot.jp/2017/02/ubuntu-gnome.html\">Ubuntu Gnome 酷炫完整指南系列</a>使用。</p>\n\n\n<a href=\"https://996.icu\"><img src=\"https://img.shields.io/badge/link-996.icu-red.svg\" alt=\"996.icu\" /></a>\n[![Build Status](https://travis-ci.org/the0demiurge/CharlesScripts.svg?branch=master)](https://travis-ci.org/the0demiurge/CharlesScripts)\n\n\n## 你为什么要安装本项目？ ##\n\n凡是喜欢折腾的朋友肯定经常会遇到下面几个困扰：\n\n1. 操作系统被自己搞烂，需要重装，难受！\n2. 换了新电脑 / 工作环境，一切常用工具又需要重新部署，麻烦！\n3. 许多插件配置起来太复杂了，缺少自动或版自动化的工具\n4. 常用的命令就那么几个，还又长又复杂（说的就是你！`apt`和`git`）\n\n\n## 内容介绍 ##\n\n最初因为我经常会因为愚蠢的操作把操作系统搞得崩溃，写下了本项目以便减轻重装系统之痛。后来我写了许多方便的小工具和脚本，把它们整合起来就变成了本项目：\n\n#### 1. 备份/恢复 ####\n\n本项目会将所有资料备份到 `$CHARLES_BACKUP` 即 `~/.config/CharlesBackup`，可以使用网盘或git自动上传备份（git备份已经集成在`charles-update`命令中）\n\n下面是是相关命令介绍：\n\n- `add-ppa`: 添加 `ppa` 的时候同时备份 `ppa` 列表，在`fish-shell`中运行 `add-ppa (add-ppa)` 可以自动添加列表中全部 ppa\n- `inst`: 使用 `apt` 安装软件的时候同时备份软件名，在`fish-shell`中运行 `inst (inst)` 可以自动安装列表中全部软件\n- `gnome-shell-extensions-backup` 和 `gnome-shell-extensions-restore`: 备份和恢复 `Gnome` 桌面的插件\n- `omf-backup` 和 `omf-restore`: 备份和恢复 `oh-my-fish`(`fish-shell` 的包管理器)的插件列表\n- `charles-backup`: 调用上述部分命令备份各种插件（可以放到 `cronjob` 里面实现自动备份）\n- `charles-update`: 更新本项目及相关依赖；自动使用git上传备份\n\n#### 2. 小工具 ####\n\n通知类：\n\n- `ef` `fifo`： `ef` 相当于一个短时备忘录，可以用来记录笔记，相当于编辑 `fifo` 命令；输入`fifo`即可运行之前写入的内容。\n- `notify`： 提醒你一定时间之后做某事 \n- `tomato`： 简单的蕃茄钟，定时运行 `fifo` 命令\n\n系统操作：\n\n- `update`： 相当于 `pacman -Syyu`，更新所有软件\n- `apt-unlock`： 删除 `apt` 因为异常退出而没有删掉的文件锁\n- `get-path`： 获得选定的文件绝对路径，并放到剪贴板内\n- `mac-addr-flush`： 重置 MAC 地址（重启失效）\n- `wallpaper-earthview`： 更新桌面壁纸（需要先设置好桌面壁纸位置为 `~/.cache/wallpaper/background-image.jpg`）\n\n其他：\n\n- `ssr`： ShadowSocksR 的一键安装、配置、使用客户端\n- `aria2c-daemon-start`： 启动 `aria2` 的下载服务\n- `gh-md-toc`： Forked from [gh-md-toc](https://github.com/ekalinin/github-markdown-toc), 为 GitHub 的 Markdown 文件加入目录\n- `gojuon`: 日语五十音学习小工具\n- `ipgw` `ipgw_py`： 命令行版的东北大学校园网登录器\n\n\n网页相关：\n\n- `wechat`： 打开微信\n- `pocket`： 打开 Pocket\n- `shanbay`： 打开扇贝单词\n\n包含在 `.bashrc` 或 `fish-shell config.fish` 中的简便操作：\n\n写在`CharlesScripts/charles/shell.rc.d`中的脚本函数：\n\n- `backup`: 将文件备份（复制一份并添加`.bak`后缀）\n- `cls`: `cd` 到指定文件夹然后`ls`\n- `dict`: 将 `dict` 查到的单词输出到`less`内，以免单词解释过长显示不完还要再翻回去看\n- `g`: 使用`git`一条龙地执行 `git add -A`，`git diff --cached`，`git status`，`git commit -m <commit message>`，`git push`，并检查 push 是否成功，若失败则提醒你检查一下\n- `mcd`: 先`mkdir`再`cd`到刚刚创建的文件夹内\n- `md5check`: `md5check <file> <md5>`，用`grep`检查md5是否一样\n- `viz`: 使用`graphviz`编译为指定格式的图片，用法为`viz source.dot png`\n\n在`CharlesScripts/charles/installation.d/conf.d/config-fish`配置好的命令缩写\n\n- `...` -> `cd ...`\n- `c` -> `clear; cd`\n- `cl` -> `cd ..;ls`\n- `eg` -> `grep -E`\n- `ftps` -> `python3 -m http.server 8080`: 快速开启一个简易 ftp 服务器\n- `gaa` -> `git add -A`\n- `gb` -> `git branch -c`\n- `gck` -> `git checkout`\n- `gcm` -> `git commit -m`\n- `gl` -> `git l`: 显示结构化的 git 日志\n- `gm` -> `git merge --no-ff`\n- `gp` -> `git push`\n- `gpl` -> `git pull`\n- `gst` -> `git status`\n- `histg` -> `history | grep`\n- `i` -> `ipython --no-confirm-exit --no-banner --pprint -i --pylab=auto`\n- `l` -> `ls --color=auto`\n- `la` -> `ls --almost-all --color=auto`\n- `le` -> `ls --almost-all --color=auto|egrep`\n- `lg` -> `ls --almost-all --color=auto|grep`\n- `ll` -> `ls --almost-all -lh --color=auto`\n- `n` -> `xdg-open .`\n- `o` -> `xdg-open`\n- `p` -> `python`\n- `pdb` -> `python -mpowerline.bindings.pdb`\n- `su` -> `sudo su`\n- `u` -> `update`\n\n\n\n#### 3. 安装软件 ####\n\n脚本在 `CharlesScripts/charles/installation.d/get.d`\n\n标 `*` 的是推荐安装的\n\n```\nget.d/\n├── get-calibre\n├── get-docker\n├──*get-fasd\n├──*get-oh-my-fish\n├──*get-powerline\n├── get-spacemacs\n├── get-spacevim\n├── get-sublime-text-3\n├──*get-thefuck\n└── get-xsh\n\n```\n\n#### 4. 配置软件 ####\n\n脚本在 `CharlesScripts/charles/installation.d/conf.d`\n\n标 `*` 的是推荐安装的\n\n```\nconf.d/\n├──*config-bash\n├──*config-fish\n├──*config-git\n├──*config-gnome\n├──*config-powerline-bash\n├── config-powerline-ipython\n└──*config-tmux\n\n```\n\n# 安装指南 #\n装前必读：\n\n- 本项目并未经过大量测试，需要读者有基本的 Linux 问题处理能力\n- 支持的操作系统：Arch Linux 或 Ubuntu Gnome 最新LTS版\n- 依赖项（需要用户自行安装）： Nerd Fonts, Google Chrome, curl\n- 可选项：Anaconda, ipython (>=5.0), fortune-zh\n\n逐步安装：\n\n1. 安装依赖\n2. 下载本项目：`git clone https://github.com/the0demiurge/CharlesScripts.git ~/.local/share/CharlesScripts`\n3. `cd ~/.local/share/CharlesScripts/charles/installation.d`\n4. 阅读并运行相关软件安装脚本和配置脚本。\n\n安装脚本（测试中）：\n\n`bash <(curl -L https://git.io/get-charles)`\n\n# 效果图： #\n\n按照[**Ubuntu Gnome 酷炫完整指南系列**](https://the0demiurge.blogspot.jp/2017/02/ubuntu-gnome.html)介绍的内容配置后如下图所示。\n\n![](figs/1.png)\n![](figs/2.png)\n![](figs/3.png)\n"
        },
        {
          "name": "accessories",
          "type": "tree",
          "content": null
        },
        {
          "name": "charles",
          "type": "tree",
          "content": null
        },
        {
          "name": "figs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 3.5078125,
          "content": "#!/bin/bash\nOS=$(cat /etc/issue | cut -f 1 -d ' ')\nCHARLES_BACKUP=~/.config/CharlesBackup\ncase $OS in\n'Arch')\n    INSTALL() { sudo pacman -S --needed $@; }\n    UPDATE() { sudo pacman -Sy; }\n    ;;\n'Ubuntu')\n    INSTALL() { sudo apt install $@ -y --allow-unauthenticated; }\n    UPDATE() { sudo apt update; }\n    ;;\n*) echo 'Your distribution has not implementd yet, please modify this command' ;;\nesac\n\nif [[ $0 != 'debug' ]]; then\n    set -e\nfi\n\npromptn() {\n    read -p 'Will you run '$1'?[y/N]' PMT\n    if [[ $PMT == 'y' || $PMT == 'Y' ]]; then\n        . ./$1\n    fi\n}\n\nprompty() {\n    read -p 'Will you run '$1'?[Y/n]' PMT\n    if [[ $PMT != 'n' && $PMT != 'N' ]]; then\n        . ./$1\n    fi\n}\n\ndependency() {\n    echo 'Installing part of the dependencies...'\n    UPDATE\n    case $OS in\n    'Arch') INSTALL git cowsay sl fish mlocate fortune-mod ;;\n    'Ubuntu') INSTALL git cowsay oneko sl fortune fish mlocate ;;\n    *) echo 'Your distribution has not implementd yet, please modify this command' ;;\n    esac\n    sudo updatedb\n}\n\ngitclone() {\n    if [ ! -d ~/.local/share ]; then mkdir -p ~/.local/share; fi\n    if [[ -x ~/.local/share/CharlesScripts ]]; then rm -rf ~/.local/share/CharlesScripts; fi\n    git clone https://github.com/the0demiurge/CharlesScripts.git ~/.local/share/CharlesScripts\n    if [[ ! -x $CHARLES_BACKUP ]]; then\n        echo 'Please type your backup git repo address. If you do not have one, you may create it on GitHub.com.'\n        read -p 'Press Enter to skip' REPO\n        git clone $REPO $CHARLES_BACKUP || true\n    fi\n    if [[ ! -x $CHARLES_BACKUP ]]; then\n        echo 'Clone failed! Default CharlesBackup will be cloned!'\n        git clone https://github.com/the0demiurge/CharlesBackup.git $CHARLES_BACKUP\n        echo 'You may modify $CHARLES_BACKUP, and type:'\n        echo 'cd $CHARLES_BACKUP'\n        echo 'git remote set-url origin <your-git-url>'\n        echo 'git add -A; git commit -m \"init commit\";git push -u origin master'\n    fi\n}\n\nget() {\n    Y_LIST=(get-fasd\n        get-powerline\n        get-thefuck\n        get-oh-my-fishi\n        get-albert\n        get-playdeb\n        get-typora)\n\n    N_LIST=(get-calibre\n        get-docker\n        get-spacemacs\n        get-spacevim\n        get-sublime-text-3\n        get-xsh)\n\n    for Y in ${Y_LIST[@]}; do\n        cd ~/.local/share/CharlesScripts/charles/installation.d/get.d/\n        prompty $Y\n    done\n\n    for N in ${N_LIST[@]}; do\n        cd ~/.local/share/CharlesScripts/charles/installation.d/get.d/\n        promptn $N\n    done\n}\n\nconf() {\n    Y_LIST=(config-bash\n        config-fish\n        config-git\n        config-gnome\n        config-powerline-bash\n        config-tmux)\n\n    N_LIST=(config-powerline-ipython\n        config-wine32)\n\n    for Y in ${Y_LIST[@]}; do\n        cd ~/.local/share/CharlesScripts/charles/installation.d/conf.d/\n        prompty $Y\n    done\n\n    for N in ${N_LIST[@]}; do\n        cd ~/.local/share/CharlesScripts/charles/installation.d/conf.d/\n        promptn $N\n    done\n}\n\nrestore() {\n    read -p 'DANGER! Restore dotfiles from ~/.local/share/CharlesScripts/data/home/.* ?[y/N]' PMT\n    if [[ $PMT == 'y' || $PMT == 'Y' ]]; then\n        cp -rv ~/.local/share/CharlesScripts/data/home/.* ~/\n    fi\n\n    Y_LIST=(gnome-shell-extensions-restore\n    )\n\n    for Y in ${Y_LIST[@]}; do\n        cd ~/.local/share/CharlesScripts/charles/bin\n        prompty $Y\n    done\n}\ndependency\ngitclone\nget\nconf\nrestore\n\ncd ~/.local/share/CharlesScripts/charles/installation.d/get.d/\nprompty get-oh-my-fish\n\ncd ~/.local/share/CharlesScripts/charles/bin\nprompty omf-restore\necho 'Finished!'\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}