{
  "metadata": {
    "timestamp": 1736568193689,
    "page": 30,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "armbian/build",
      "stars": 4358,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.7578125,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = tab\nindent_size = 8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.patch]\ntrim_trailing_whitespace = false\n\n[*.md]\nindent_style = space\nindent_size = 4\ninsert_final_newline = false\n\n[*.json]\nindent_style = space\nindent_size = 4\n\n# Custom Armbian formatting for bash sources and configuration\n[*.{sh,inc,conf,eos,wip,tvb,csc}]\nindent_size = 4\nshell_variant = bash\nbinary_next_line = false\nswitch_case_indent = true\nspace_redirects = true\nkeep_padding = false\nfunction_next_line = false\n\n[*.{yaml,yml}]\nindent_style = space\nindent_size = 2\ninsert_final_newline = false\n\n[*.py]\nindent_size = 4\nmax_line_length = 150\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5361328125,
          "content": "### Specific to building Armbian ###\n/.vagrant/\nubuntu-*-cloudimg-console.log\n\n### to ignore changes in a working copy\n.ignore_changes\n\n### compile configurations added by users\n/config-*.conf\n### but not default (supplied) files\n!/config-docker.conf\n!/config-vagrant.conf\n\n### output directories\n/.tmp/\n/output/\n/cache/\n/*userpatches*/\n/userpatches\n\n### General annoyances ###\n.DS_Store\n*~\n*.swp\n/__pycache__/*\n\n# Mainly generated by merge tools like 'meld'\n*.orig\n\n# Dockerfile and .dockerignore is generated by docker.sh\nDockerfile\n.dockerignore\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.5556640625,
          "content": "# Contributing to Armbian Linux build framework\n\nWe would love to have you join the Armbian community! Below summarizes the processes that we follow.\n\n## Reporting issues\n\nBefore [reporting an issue](https://github.com/armbian/build/issues/new/choose), check our [backlog of open issues](https://github.com/armbian/build/issues) and [pull requests](https://github.com/armbian/build/pulls) to see if someone else has already reported or working on it. If an issues is already open, feel free to add your scenario, or additional information, to the discussion. Or simply \"subscribe\" to it to be notified when it is updated.\n\nIf you find a new issue with the project please let us hear about it! The most important aspect of a bug report is that it includes enough information for us to reproduce it. So, please include as much detail as possible and try to remove the extra stuff that does not really relate to the issue itself. The easier it is for us to reproduce it, the faster it will be fixed!\n\nPlease do not include any private/sensitive information in your issue! We are not responsible for your privacy, this is open source software.\n\n## Working on issues\n\nOnce you have decided to contribute to Armbian by working on an issue, check our backlog of open (or [JIRA](https://armbian.atlassian.net/jira/dashboards/10000) issues open by the team) looking for any that do not have an \"In Progress\" label attached to it. Often issues will be assigned to someone, to be worked on at a later time. If you have the time to work on the issue now add yourself as an assignee, and set the \"In Progress\" label if you are a member of the “Containers” GitHub organization. If you can not set the label, just add a quick comment in the issue asking that the “In Progress” label be set and a member will do so for you.\n\nPlease be sure to review the [Development Code Review Procedures and Guidelines](https://docs.armbian.com/Development-Code_Review_Procedures_and_Guidelines/) as well before you begin.\n\n## PR and issues labeling\n\nLabels are defined in [.github/labels.yml](.github/labels.yml) YAML file. They are automatically recreated upon change. Require at least `Triage` users permission on repository. [Request access](https://github.com/armbian/build#contact) if you cannot change labels!\n\nMost of labels are self explanoritary but here are short instructions on how to use them:\n\nAutomated on PR:\n- `size/small`, `size/medium`, `size/large` is determined automatically from the size of the PR\n- `desktop`, `hardware` and `software` is determined automatically depending on location of the changes\n\nManual on PR:\n- `02` `05` `08` `11` milestone - determine into which release the PR should go\n- `work in progress` - when you are still working on\n- `needs review` - when you are done and seeking for attention\n- `ready to merge` - when you are done\n- `help needed` - when you are desperate and cannot move on\n\nLabeling Issues:\n- `bug` when it is clear that it is our bug, `not our bug` if its clearly not ours, `duplicate` if issue already exists\n- `discussion`, when needed, `user error` when we know it is a problem on the other side\n- `can be closed` for stalled issues\n\n\n\n## Contributing\n\nThis section describes how to start contributing to Armbian.\n\n### Prepare your environment\n\n* Create an Ubuntu 22.04 VM with VirtualBox or any other suitable hypervisor. \n* Install [Github CLI tool](https://github.com/cli/cli/blob/trunk/docs/install_linux.md)\n* Configure git:\n\n```bash\n    git config --global user.email \"your@email.com\"\n    git config --global user.name \"Your Name\"\n```\n\n* Generate GPG key\n\n```bash\n    gpg --generate-key\n```\n\n* Generate Github login [token](https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token)\n* Login to Github (you only have to do the steps above once)\n\n```bash\n    gh auth login --with-token <<< 'your_token'\n```\n\n### Fork and clone Armbian\n\n* Fork armbian/build, clone and add remote\n\n```bash\n    gh repo fork armbian/build --clone=true --remote=true\n```\n\n* Create branch\n\n```bash\n    cd build\n    git checkout -b your_branch_name # change branch name for your patch\n```\n\n### Generate new patch template\n\n* Compile Armbian (this use case is to change something in the device tree and test the built image)\n\n```bash\n    ./compile.sh CREATE_PATCHES=\"yes\"\n```\n\n* Full OS image for flashing\n* Do not change the kernel configuration\n* Choose a board\n* Choose a kernel\n* Choose a release package base\n* Choose image type\n* Configuring apt-cacher-ng\n* Wait for prompt to make u-boot changes (press Enter after making changes in specified directory)\n\n```bash\n    [ o.k. ] * [l][c] enable-distro-bootcmd.patch\n    [ warn ] Make your changes in directory: [ /home/yourhome/build/cache/sources/u-boot-odroidxu/odroidxu4-v2017.05 ]\n    [ warn ] Press <Enter> after you are done [ waiting ]\n```\n\n### Work on your patch\n\n* Open another terminal or files window\n* In this case I want to add gpio-line-names to the Odroid XU4 device tree when prompted to do so\n\n  ```bash\n    sudo nano build/cache/sources/linux-odroidxu4/odroid-5.4.y/arch/arm/boot/dts/exynos5420-pinctrl.dtsi\n  ```\n\n* Wait for prompt to make kernel changes (press Enter after making changes in specified directory)\n\n  ```bash\n    [ warn ] Make your changes in this directory: [ /home/yourhome/build/cache/sources/linux-odroidxu4/odroid-5.4.y ]\n    [ warn ] Press <Enter> after you are done [ waiting ]\n  ```\n\n* Test the changes you made on your board\n  * Mine was located in `/home/yourhome/build/output/images/Armbian_21.02.0-trunk_Odroidxu4_focal_current_5.4.83.img`\n* Rename patch to something meaningful and move to proper location\n\n  ```bash\n    mv output/patch/kernel-odroidxu4-current.patch patch/kernel/odroidxu4-current/add-gpio-line-names.patch\n  ```\n\nNext, you can prepare to submit your patch to the Armbian project.\n\n## Submitting pull requests\n\nNo Pull Request (PR) is too small! Typos, additional comments in the code, new test cases, bug fixes, new features, more documentation, ... everything is welcome!\n\nWhile bug fixes can first be identified via an \"issue\", that is not required for things mentioned above. It is fine to just open up a PR with the fix, but make sure you include the same information you would have included in an actual issue - like how to reproduce it.\n\nPRs for new features should include some background on what use cases the new code is trying to address. When possible and when it makes sense, try to break-up larger PRs into smaller parts - it is easier to [review](https://github.com/armbian/build/pulls?q=is%3Apr+is%3Aopen+review%3Arequired+label%3A%22Ready+%3Aarrow_right%3A%22) smaller code changes. But only if those smaller ones make sense as stand-alone PRs.\n\nYou should squash your commits into logical pieces of work that can be reviewed separate from the rest of the PRs. Squashing down to just one commit is ok as well, since in the end the entire PR will be reviewed anyway. If in doubt, squash.\n\n### Describe your changes in commit messages\n\nDescribe your problem(s). Whether your patch is a one-line bug fix or 5000 lines including a new feature, there must be an underlying problem that motivated you to do this work. Your description should work to convince the reviewer that there is a problem worth fixing and that it makes sense for them to read past the first paragraph.  This means providing comprehensive details about the issue, including, but not limited to: \n* How the problem presented itself\n* How to replicate the problem\n* Provide 'dmesg' and/or 'armbianmonitor -u' output showing board used and any console output surrounding the issue\n* Why you feel it is important for this issue to be resolved\n\n## Communications\n\nFor general questions and discussion, please use the IRC `#armbian`, `#armbian-devel` or `#armbian-desktop` on Libera.Chat or [Discord server](http://discord.armbian.com). Most IRC and Discord channels are bridged and recorded.\n\nFor discussions around issues/bugs and features, you can use the [GitHub issues](https://github.com/armbian/build/issues), the [PR tracking system](https://github.com/armbian/build/pulls) or our [Jira ticketing system](https://armbian.atlassian.net/jira/software/c/projects/AR/issues/?filter=allissues).\n\n## Other ways to contribute\n\n* [Become a new board maintainer](https://docs.armbian.com/Board_Maintainers_Procedures_and_Guidelines/)\n* [Apply for one of the position](https://forum.armbian.com/staffapplications/)\n* [Help us covering costs](https://forum.armbian.com/subscriptions/)\n* [Help community members in the Forum](https://forum.armbian.com/)\n* [Check forum announcements section for any requests for help from the community](https://forum.armbian.com/forum/37-announcements/)\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "[https://github.com/orgs/armbian/people](https://github.com/orgs/armbian/people)\n[https://www.armbian.com/authors](https://www.armbian.com/authors)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.603515625,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {fullname}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.8544921875,
          "content": "<p align=\"center\">\n  <a href=\"#build-framework\">\n  <img src=\".github/armbian-logo.png\" alt=\"Armbian logo\" width=\"144\">\n  </a><br>\n  <strong>Armbian Linux Build Framework</strong><br>\n<br>\n<a href=https://github.com/armbian/build/graphs/contributors><img alt=\"GitHub contributors\" src=\"https://img.shields.io/github/contributors-anon/armbian/build?logo=stackexchange&label=Contributors&style=for-the-badge&branch=main&logoColor=white\"></a>\n<a href=https://github.com/armbian/os><img alt=\"Artifacts generation\" src=\"https://img.shields.io/github/actions/workflow/status/armbian/os/complete-artifact-matrix-all.yml?logo=dependabot&label=CI%20Build&style=for-the-badge&branch=main&logoColor=white\"></a>\n<a href=https://github.com/armbian/build/commits/main><img alt=\"GitHub last commit (branch)\" src=\"https://img.shields.io/github/last-commit/armbian/build/main?logo=github&label=Last%20commit&style=for-the-badge&branch=main&logoColor=white\"></a>\n</p>\n\n## What does this project do?\n\n- Builds custom **kernel**, **image** or a **distribution** optimized for low-resource hardware,\n- Include filesystem generation, low-level control software, kernel image and **bootloader** compilation,\n- Provides a **consistent user experience** by keeping system standards across different platforms.\n\n## Getting started\n\n### Requirements for self hosted\n\n- x86_64 / aarch64 machine\n- at least 2GB of memory and ~35GB of disk space for VM, container or bare metal installation\n- [Armbian / Ubuntu Jammy 22.04.x](https://github.com/armbian/sdk) for native building or any Docker capable Linux for containerised\n- Windows 10/11 with WSL2 subsystem running Ubuntu Jammy 22.04.x\n- Superuser rights (configured sudo or root access).\n- Make sure your system is up-to-date! Outdated Docker binaries, for example, can cause trouble.\n\nFor stable branch use `--branch=v24.11`\n\n```bash\napt-get -y install git\ngit clone --depth=1 --branch=main https://github.com/armbian/build\ncd build\n./compile.sh\n```\n\n<a href=\"#how-to-build-an-image-or-a-kernel\"><img src=\".github/README.gif\" alt=\"Armbian logo\" width=\"100%\"></a>\n\n- Interactive graphical interface.\n- Prepares the workspace by installing the necessary dependencies and sources.\n- It guides the entire process and creates a kernel package or a ready-to-use SD card image.\n\n### Build parameter examples\n\nShow work-in-progress areas in interactive mode:\n\n```bash\n./compile.sh EXPERT=\"yes\"\n```\n\nBuild minimal CLI Armbian Jammy for Bananapi M5 with LTS kernel:\n\n```bash\n./compile.sh \\\nBOARD=bananapim5 \\\nBRANCH=current \\\nRELEASE=jammy \\\nBUILD_MINIMAL=yes \\\nBUILD_DESKTOP=no \\\nKERNEL_CONFIGURE=no\n```\n\nBuild with GitHub actions: ([advanced version](https://github.com/armbian/os/blob/main/.github/workflows/complete-artifact-one-by-one.yml))\n\n```\nname: \"Build Armbian\"\non:\n  workflow_dispatch:\njobs:\n  build-armbian:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: armbian/build@main\n        with:\n          armbian_token:     \"${{ secrets.GITHUB_TOKEN }}\"  # GitHub token\n          armbian_release:   \"jammy\"                        # userspace\n          armbian_target:    \"build\"                        # build=image, kernel=kernel\n          armbian_board:     \"bananapim5\"                   # build target\n```\nGenerated image will be uploaded to your repository release. Note: GitHub upload file limit is 2Gb.\n\n## More information:\n\n- [Building Armbian](https://docs.armbian.com/Developer-Guide_Build-Preparation/) (how to start)\n- [Build commands](https://docs.armbian.com/Developer-Guide_Build-Commands/) and [switches](https://docs.armbian.com/Developer-Guide_Build-Switches/) (build options)\n- [User configuration](https://docs.armbian.com/Developer-Guide_User-Configurations/) (how to add packages, patches, and override sources config)\n- [System config](https://docs.armbian.com/User-Guide_Armbian-Config/) (menu driven utility to setup OS and HW features)\n\n## Download prebuilt images releases\n\n### Point\n\n- [manually released **standard supported** builds](https://www.armbian.com/download/?device_support=Standard%20support) (quarterly)\n\n### Rolling\n\n- [automatically released **staging and standard supported** builds](https://github.com/armbian/os/releases/latest) (daily)\n- [automatically released **community maintained** builds](https://github.com/armbian/community/releases/latest) (weekly)\n\n## Compared with industry standards\n\n<details><summary>Expand</summary>\nCheck similarities, advantages and disadvantages compared with leading industry standard build software.\n\nFunction | Armbian | Yocto | Buildroot |\n|:--|:--|:--|:--|\n| Target | general purpose | embedded | embedded / IOT |\n| U-boot and kernel | compiled from sources | compiled from sources | compiled from sources |\n| Board support maintenance &nbsp; | complete | outside | outside |\n| Root file system | Debian or Ubuntu based| custom | custom |\n| Package manager | APT | any | none |\n| Configurability | limited | large | large |\n| Initramfs support | yes | yes | yes |\n| Getting started | quick | very slow | slow |\n| Cross compilation | yes | yes | yes |\n</details>\n\n## Project structure\n\n<details><summary>Expand</summary>\n\n```text\n├── cache                                Work / cache directory\n│   ├── aptcache                         Packages\n│   ├── ccache                           C/C++ compiler\n│   ├── docker                           Docker last pull\n│   ├── git-bare                         Minimal Git\n│   ├── git-bundles                      Full Git\n│   ├── initrd                           Ram disk\n│   ├── memoize                          Git status\n│   ├── patch                            Kernel drivers patch\n│   ├── pip                              Python\n│   ├── rootfs                           Compressed userspaces\n│   ├── sources                          Kernel, u-boot and other sources\n│   ├── tools                            Additional tools like ORAS\n│   └── utility\n├── config                               Packages repository configurations\n│   ├── targets.conf                     Board build target configuration\n│   ├── boards                           Board configurations\n│   ├── bootenv                          Initial boot loaders environments per family\n│   ├── bootscripts                      Initial Boot loaders scripts per family\n│   ├── cli                              CLI packages configurations per distribution\n│   ├── desktop                          Desktop packages configurations per distribution\n│   ├── distributions                    Distributions settings\n│   ├── kernel                           Kernel build configurations per family\n│   ├── sources                          Kernel and u-boot sources locations and scripts\n│   ├── templates                        User configuration templates which populate userpatches\n│   └── torrents                         External compiler and rootfs cache torrents\n├── extensions                           Extend build system with specific functionality\n├── lib                                  Main build framework libraries\n│   ├── functions\n│   │   ├── artifacts\n│   │   ├── bsp\n│   │   ├── cli\n│   │   ├── compilation\n│   │   ├── configuration\n│   │   ├── general\n│   │   ├── host\n│   │   ├── image\n│   │   ├── logging\n│   │   ├── main\n│   │   └── rootfs\n│   └── tools\n├── output                               Build artifact\n│   └── deb                              Deb packages\n│   └── images                           Bootable images - RAW or compressed\n│   └── debug                            Patch and build logs\n│   └── config                           Kernel configuration export location\n│   └── patch                            Created patches location\n├── packages                             Support scripts, binary blobs, packages\n│   ├── blobs                            Wallpapers, various configs, closed source bootloaders\n│   ├── bsp-cli                          Automatically added to armbian-bsp-cli package\n│   ├── bsp-desktop                      Automatically added to armbian-bsp-desktopo package\n│   ├── bsp                              Scripts and configs overlay for rootfs\n│   └── extras-buildpkgs                 Optional compilation and packaging engine\n├── patch                                Collection of patches\n│   ├── atf                              ARM trusted firmware\n│   ├── kernel                           Linux kernel patches\n|   |   └── family-branch                Per kernel family and branch\n│   ├── misc                             Linux kernel packaging patches\n│   └── u-boot                           Universal boot loader patches\n|       ├── u-boot-board                 For specific board\n|       └── u-boot-family                For entire kernel family\n├── tools                                Tools for dealing with kernel patches and configs\n└── userpatches                          User: configuration patching area\n    ├── lib.config                       User: framework common config/override file\n    ├── config-default.conf              User: default user config file\n    ├── customize-image.sh               User: script will execute just before closing the image\n    ├── atf                              User: ARM trusted firmware\n    ├── kernel                           User: Linux kernel per kernel family\n    ├── misc                             User: various\n    └── u-boot                           User: universal boot loader patches\n```\n</details>\n\n## Contribution\n\n### Want to help?\n\nWe always need those volunteering positions:\n\n- [Code reviewer](https://forum.armbian.com/staffapplications/application/23-code-reviewer/)\n- [Build framework maintainer](https://forum.armbian.com/staffapplications/application/9-build-framework-maintainer/)\n- [Test Automation Engineer](https://forum.armbian.com/staffapplications/application/19-test-automation-engineer/)\n\nJust apply and follow!\n\n## Support\n\nFor commercial or prioritized assistance:\n - Book an hour of [professional consultation](https://calendly.com/armbian/consultation)\n - Consider becoming a [project partner](https://forum.armbian.com/subscriptions/)\n - [Contact us](https://armbian.com/contact)!\n\nFree support:\n\n Find free support via [general project search engine](https://www.armbian.com/search), [documentation](https://docs.armbian.com), [community forums](https://forum.armbian.com/) or [IRC/Discord](https://docs.armbian.com/Community_IRC/). Remember that our awesome community members mainly provide this in a **best-effort** manner, so there are no guaranteed solutions.\n\n## Contact\n\n- [Forums](https://forum.armbian.com) for Participate in Armbian\n- IRC: `#armbian` on Libera.chat / oftc.net\n- Matrix: [https://forum.armbian.com/topic/40413-enter-the-matrix/](https://forum.armbian.com/topic/40413-enter-the-matrix/)\n- Discord: [https://discord.gg/armbian](https://discord.gg/armbian)\n- Follow [@armbian](https://twitter.com/armbian) on 𝕏 (formerly known as Twitter), <a rel=\"me\" href=\"https://fosstodon.org/@armbian\">Mastodon</a> or [LinkedIn](https://www.linkedin.com/company/armbian).\n- Bugs: [issues](https://github.com/armbian/build/issues) / [JIRA](https://armbian.atlassian.net/jira/dashboards/10000)\n- Office hours: [Wednesday, 12 midday, 18 afternoon, CET](https://calendly.com/armbian/office-hours)\n\n## Contributors\n\nThank you to all the people who already contributed to Armbian!\n\n<a href=\"https://github.com/armbian/build/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=armbian/build\" />\n</a>\n\n### Also\n\n- [Current and past contributors](https://github.com/armbian/build/graphs/contributors), our families and friends.\n- [Support staff](https://forum.armbian.com/members/2-moderators/) that keeps forums usable.\n- [Friends and individuals](https://armbian.com/authors) who support us with resources and their time.\n- [The Armbian Community](https://forum.armbian.com/) helps with their ideas, reports and [donations](https://www.armbian.com/donate).\n\n## Armbian Partners\n\nArmbian's partnership program helps to support Armbian and the Armbian community! Please take a moment to familiarize yourself with our Partners:\n\n- [Click here to visit our Partners page!](https://armbian.com/partners)\n- [How can I become a Partner?](https://forum.armbian.com/subscriptions)\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=armbian/build&type=Date)](https://star-history.com/#armbian/build&Date)\n\n## License\n\nThis software is published under the GPL-2.0 License license.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.013671875,
          "content": "25.02.0-trunk\n"
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 5.6591796875,
          "content": "name: \"Rebuild Armbian\"\nauthor: \"https://github.com/armbian\"\ndescription: \"Build Armbian Linux\"\ninputs:\n\n  armbian_token:\n    description: \"GitHub installation access token\"\n    required: true\n\n  armbian_runner_clean:\n    description: \"Make some space on GH runners\"\n    required: false\n    default: \"\"\n\n  armbian_artifacts:\n    descriptions: \"Upload PATH\"\n    required: false\n    default: \"build/output/images/\"\n\n  armbian_target:\n    description: \"Build image or kernel\"\n    required: false\n    default: \"kernel\"\n\n  armbian_branch:\n    description: \"Choose framework branch\"\n    required: false\n    default: \"main\"\n\n  armbian_kernel_branch:\n    description: \"Choose kernel branch\"\n    required: false\n    default: \"current\"\n\n  armbian_release:\n    description: \"Choose userspace release\"\n    required: false\n    default: \"jammy\"\n\n  armbian_version:\n    description: \"Set different version\"\n    required: false\n    default: \"\"\n\n  armbian_board:\n    description: \"Select hardware platform\"\n    required: false\n    default: \"uefi-x86\"\n\n  armbian_ui:\n    description: \"Armbian user interface\"\n    required: false\n    default: \"server\"\n\n  armbian_compress:\n    description: \"Armbian compress method\"\n    required: false\n    default: \"sha,img,xz\"\n\n  armbian_extensions:\n    description: \"Armbian lists of extensions\"\n    required: false\n    default: \"\"\n\n  armbian_userpatches:\n    description: \"Armbian userpatches path\"\n    required: false\n    default: \"\"\n\n  armbian_pgp_key:\n    description: \"Armbian PGP key\"\n    required: false\n    default: \"\"\n\n  armbian_pgp_password:\n    description: \"Armbian PGP password\"\n    required: false\n    default: \"\"\n\n  armbian_release_tittle:\n    description: \"Armbian image\"\n    required: false\n    default: \"Armbian image\"\n\n  armbian_release_body:\n    description: \"Armbian images\"\n    required: false\n    default: \"Build with [Armbian tools](https://github.com/armbian/build)\"\n\n  armbian_release_tag:\n    description: \"Armbian release tag\"\n    required: false\n\nruns:\n  using: \"composite\"\n\n  steps:\n\n    - name: Free Github Runner\n      if: ${{ inputs.armbian_runner_clean != '' }}\n      uses: descriptinc/free-disk-space@main\n      with:\n        android: true\n        dotnet: true\n        haskell: true\n        large-packages: true\n        docker-images: true\n        swap-storage: true\n\n    - name: \"Import GPG key\"\n      if: ${{ inputs.armbian_pgp_key != '' }}\n      uses: crazy-max/ghaction-import-gpg@v6\n      with:\n        gpg_private_key: ${{ inputs.armbian_pgp_key }}\n        passphrase: ${{ inputs.armbian_pgp_password }}\n\n    - name: \"Checkout Armbian os\"\n      uses: actions/checkout@v4\n      with:\n        repository: armbian/os\n        fetch-depth: 0\n        clean: false\n        path: os\n\n    - name: \"Checkout Armbian build framework\"\n      uses: actions/checkout@v4\n      with:\n        repository: armbian/build\n        ref: ${{ inputs.armbian_branch }}\n        clean: false\n        path: build\n\n    - name: \"Checkout customisations\"\n      uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n        clean: false\n        path: custom\n\n    - shell: bash\n      run: |\n\n        # read version from upstream Armbian OS\n        cat os/stable.json | jq '.version' | sed \"s/\\\"//g\" | sed 's/^/ARMBIAN_VERSION=/' >> $GITHUB_ENV\n        [[ \"${{ inputs.armbian_version }}\" != '' ]] && echo \"ARMBIAN_VERSION=${{ inputs.armbian_version }}\" >> $GITHUB_ENV\n\n        # copy os userpatches and custom\n        mkdir -pv build/userpatches\n        rsync -av os/userpatches/. build/userpatches/\n        [[ -d custom/userpatches ]] && rsync -av custom/userpatches/. build/userpatches/\n\n    - shell: bash\n      run: |\n\n        # userspace decode\n        if [[ \"${{ inputs.armbian_ui }}\" == minimal ]]; then\n          BUILD_DESKTOP=\"no\"\n          BUILD_MINIMAL=\"yes\"\n        elif [[ \"${{ inputs.armbian_ui }}\" == server ]]; then\n          BUILD_DESKTOP=\"no\"\n          BUILD_MINIMAL=\"no\"\n        else\n          BUILD_DESKTOP=\"yes\"\n          BUILD_MINIMAL=\"no\"\n          DESKTOP_ENVIRONMENT=\"${{ inputs.armbian_ui }}\"\n          DESKTOP_APPGROUPS_SELECTED=\"\"\n          DESKTOP_ENVIRONMENT_CONFIG_NAME=\"config_base\"\n        fi\n\n        # go to build folder\n        cd build\n\n        # execute build command\n        ./compile.sh \"${{ inputs.armbian_target }}\" \\\n        REVISION=\"${{ env.ARMBIAN_VERSION }}\" \\\n        BOARD=\"${{ inputs.armbian_board }}\" \\\n        BRANCH=\"${{ inputs.armbian_kernel_branch }}\" \\\n        RELEASE=\"${{ inputs.armbian_release }}\" \\\n        KERNEL_CONFIGURE=\"no\" \\\n        BUILD_DESKTOP=\"${BUILD_DESKTOP}\" \\\n        BUILD_MINIMAL=\"${BUILD_MINIMAL}\" \\\n        DESKTOP_ENVIRONMENT=\"${DESKTOP_ENVIRONMENT}\" \\\n        DESKTOP_APPGROUPS_SELECTED=\"${DESKTOP_APPGROUPS_SELECTED}\" \\\n        DESKTOP_ENVIRONMENT_CONFIG_NAME=\"${DESKTOP_ENVIRONMENT_CONFIG_NAME}\" \\\n        ENABLE_EXTENSIONS=\"${{ inputs.armbian_extensions }}\" \\\n        COMPRESS_OUTPUTIMAGE=\"${{ inputs.armbian_compress }}\" \\\n        SHARE_LOG=\"yes\" \\\n        EXPERT=\"yes\"\n\n    - name: Sign\n      shell: bash\n      if: ${{ inputs.armbian_pgp_password != '' }}\n      run: |\n        echo ${{ inputs.armbian_pgp_password }} | \\\n        gpg --passphrase-fd 0 --armor --detach-sign --pinentry-mode loopback --batch --yes \\\n        build/output/images/*.img*.xz\n\n    - uses: ncipollo/release-action@v1\n      with:\n        tag: ${{ inputs.armbian_release_tag != '' && inputs.armbian_release_tag || env.ARMBIAN_VERSION }}\n        name: \"${{ inputs.armbian_release_tittle }}\"\n        artifacts: \"${{ inputs.armbian_artifacts }}*\"\n        allowUpdates: true\n        removeArtifacts: false\n        replacesArtifacts: true\n        makeLatest: true\n        token: \"${{ inputs.armbian_token }}\"\n        body: |\n          ${{ inputs.armbian_release_body }}\n\nbranding:\n  icon: \"check\"\n  color: \"red\"\n\n"
        },
        {
          "name": "compile.sh",
          "type": "blob",
          "size": 1.81640625,
          "content": "#!/usr/bin/env bash\n#\n# SPDX-License-Identifier: GPL-2.0\n#\n# Copyright (c) 2013-2023 Igor Pecovnik, igor@armbian.com\n#\n# This file is a part of the Armbian Build Framework\n# https://github.com/armbian/build/\n\n# DO NOT EDIT THIS FILE\n# use configuration files like config-default.conf to set the build configuration\n# check Armbian documentation https://docs.armbian.com/ for more info\n\n#set -o pipefail  # trace ERR through pipes - will be enabled \"soon\"\n#set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable - one day will be enabled\nset -e\nset -o errtrace # trace ERR through - enabled\nset -o errexit  ## set -e : exit the script if any statement returns a non-true return value - enabled\n# Important, go read http://mywiki.wooledge.org/BashFAQ/105 NOW!\n\nSRC=\"$(dirname \"$(realpath \"${BASH_SOURCE[0]}\")\")\"\ncd \"${SRC}\" || exit\n\n# check for whitespace in ${SRC} and exit for safety reasons\ngrep -q \"[[:space:]]\" <<< \"${SRC}\" && {\n\techo \"\\\"${SRC}\\\" contains whitespace. Not supported. Aborting.\" >&2\n\texit 1\n}\n\n# Sanity check.\nif [[ ! -f \"${SRC}\"/lib/single.sh ]]; then\n\techo \"Error: missing build directory structure\"\n\techo \"Please clone the full repository https://github.com/armbian/build/\"\n\texit 255\nfi\n\n# shellcheck source=lib/single.sh\nsource \"${SRC}\"/lib/single.sh\n\n# initialize logging variables. (this does not consider parameters at this point, only environment variables)\nlogging_init\n\n# initialize the traps\ntraps_init\n\n# make sure git considers our build system dir as a safe dir (only if actually building)\n[[ \"${CONFIG_DEFS_ONLY}\" != \"yes\" && \"${PRE_PREPARED_HOST}\" != \"yes\" ]] && git_ensure_safe_directory \"${SRC}\"\n\n# Execute the main CLI entrypoint.\ncli_entrypoint \"$@\"\n\n# Log the last statement of this script for debugging purposes.\ndisplay_alert \"Armbian build script exiting\" \"very last thing\" \"cleanup\"\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "patch",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.9228515625,
          "content": "# Requirements/dependencies for various Python scripts used in the Armbian Build Framework\n#\n# IMPORTANT NOTES:\n# When adding a new requirements, please leave a comment to explain its purpose.\n# Always use a fixed version, this is important for correct hashing.\n# Dependabot will keep these versions up to date.\n\nsetuptools == 75.7.0   # for building Python packages\npyelftools == 0.31     # for building U-Boot\nunidiff == 0.7.5       # for parsing unified diff\nGitPython == 3.1.44    # for manipulating git repos\nunidecode == 1.3.8     # for converting strings to ascii\ncoloredlogs == 15.0.1  # for colored logging\nPyYAML == 6.0.2        # for parsing/writing YAML\noras == 0.1.30         # for OCI stuff in mapper-oci-update\nJinja2 == 3.1.5        # for templating\nrich == 13.9.4         # for rich text formatting\ndtschema == 2024.11     # for checking dts files and dt bindings\nyamllint == 1.35.1     # for checking dts files and dt bindings\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 0.2216796875,
          "content": "# Configuration file for Nix(OS) to provide a temporary development enviroment\n\n{ pkgs ? import <nixpkgs> {} }:\n  pkgs.mkShell {\n    nativeBuildInputs = with pkgs.buildPackages; [\n      util-linux # Needed for uuidgen\n    ];\n}\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}