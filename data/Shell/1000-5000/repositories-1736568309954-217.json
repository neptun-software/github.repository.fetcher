{
  "metadata": {
    "timestamp": 1736568309954,
    "page": 217,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openfans-community-offical/Debian-Pi-Aarch64",
      "stars": 2587,
      "defaultBranch": "master",
      "files": [
        {
          "name": "FW",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 70.861328125,
          "content": "# Notice !!!!!!!!!\n\n## Notify:\n\n## Statement! \n\n#### OPENFANS terminated all cooperation with the ~~Pifan (pifan.org)~~, and the Debian-Pi-Aarch64 2.0 project was officially frozen.\n\n----\n\n![openfans](./images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](./images/amatfan.png)、\n\n# =★= Debian-Pi-Aarch64 =★=\n\n*The newest Raspberry Pi 64-bit OS 2.0 Release!!!*\n\n*This is the first 64-bit system in the world to support all Raspberry Pi 64-bit hardware!!! (Include: 2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W)*\n\n![catalina](./images/catalina.jpg)\n\n```\nThere are always someone who do everything possible to find other's trouble, \nin order to avoid misleading,\nWe will explain all the help and reference that we have used and applied. \nIf there are any omissions, please feel free to give us feedback in time.\nThanks again to all those who have helped us.\n```\n\n## Official Documentation Version 2.0\n\n***◎ [中文版(Chinese)](README_zh.md)***\n\n***English edition translation is continuously optimized and adjusted ...***\n\nGive me a star, just a click, I will be very happy and satisfied...  :)\n\n**Gitee Repo:** [gitee.com/openfans-community/Debian-Pi-Aarch64](https://gitee.com/openfans-community/Debian-Pi-Aarch64)\n\n**Tencent Coding Repo:** [https://e.coding.net/openfans/pifan/Debian-Pi-Aarch64.git](https://e.coding.net/openfans/pifan/Debian-Pi-Aarch64.git)\n\n**Github Repo:** [github.com/openfans-community-offical/Debian-Pi-Aarch64](https://github.com/openfans-community-offical/Debian-Pi-Aarch64)\n\n**GitLab Repo:** [https://gitlab.com/openfans/Debian-Pi-Aarch64](https://gitlab.com/openfans/Debian-Pi-Aarch64)\n\n----\n\nThe newest **Raspberry Pi 64-bit OS**, **OPENFANS** open source community & Raspberry **Pi Fan** base community Co-Produced.\n\nThis is an **official version** readme for the newest version 2.0 of 64-bit OS which is support for the **full range** of 64-bit CPU Raspberry Pi such as **2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W** .\n\n**The passed system version: 1.0 and 2.0 preview has been without any updates or supported.**\n\nThe **\"Old Readme\"** was viewed **[here](./README_ORGI.md).** ( - Just A Chinese Edition)\n\n**First, Please read this document carefully before your questions, maybe your answers have included in this document (We'll refuse to reply any answered questions).**\n\n**Attention, please! Besides this document, any other documents in this Git repository are no longer supported (Except linked file form this document), just for a developer's archive.**\n\n## Attention!\n\n- All commands executed of this article, unless specified, are executed under the **root** privileges by default!!\n\n- With any problems, be sure to upgrade your **system**, **firmware** and **kernel** to the **latest** version first. Click **[here](./README.md#5-update-and-upgrade)** to check the **latest version** and learned how to upgrade your **system**, **kernel** and **firmware**.\n\n## ★★ Notice:\n\n#### The latest version of the system\n\n**2021-11-11-v2020-2.0-U6-Release** (kernelVer:**5.10.78-Release-OPENFANS+20211111-v8**)  ;   \n\n#### Newest Kernel Upkg version\n\n**5.10.88-Release-OPENFANS+20211222-v8** (Single Update Pkg)\n\n----\n\nIf you had found a *Chromium browser interface display error* issue on version **202006 U3** please see [here](./README.md#3-163-chromium-browser-interface-display-error).  **This issue had fixed after version >=20200617U3**\n\n*The system kernel and FW version* \"**5.10.88-Release-OPENFANS+20211222-v8**\" , we suggest to update to this version.\n\n***Note:*** **Fimware >=U3, >=U4 do not support upgrade from version <=U2(include) !!**\n\n## Donation\n\nThanks for your donation! We'll get the greatest power from your encourage!\n\n![jz](./images/jz.png)\n\n----\n\n## Contents\n\n[0. System Screenshots](./README.md#0-system-screenshots)\n\n----\n\n[1. Introduction](./README.md#1-introduction)\n\n[1-1. System Environment (Versions)](./README.md#1-1-system-environment-versions)\n\n[1-2. System Environment (Base Env)](./README.md#1-2-system-environment-base-env)\n\n[1-3. Features Comparison From Different Versions](./README.md#1-3-features-comparison-from-different-versions)\n\n[1-4. Some System Performance Testing Results](./README.md#1-4-some-system-performance-testing-results)\n\n----\n\n[2. Main features Introduction](./README.md#2-main-features-introduction)\n\n[2-1. Web Visual Management Interface](./README.md#2-1-web-visual-management-interface)\n\n[2-2. QEMU-KVM Virtualization Support](./README.md#2-2-qemu-kvm-virtualization-support)\n\n[2-3. Docker Container Support](./README.md#2-3-docker-container-support)\n\n[2-4. AUFS File System Support](./README.md#2-4-aufs-file-system-support)\n\n[2-5. TCP Acceleration](./README.md#2-5-tcp-acceleration)\n\n[2-6. Memory And Swap Optimization (Algorithm-level)](./README.md#2-6-memory-and-swap-optimization-algorithm-level)\n\n[2-7. macOS-Mojave Theme Desktop](./README.md#2-7-macos-mojave-theme-desktop)\n\n[2-8. CecOS-CaaS Container Cloud (JUST A CHINESE EDITION SUPPORT)](./README.md#2-8-cecos-caas-container-cloud-just-a-chinese-edition-support)\n\n[2-9. Other Features](./README.md#2-9-other-features)\n\n----\n\n[3. Instructions For Usage](./README.md#3-instructions-for-usage)\n\n[3-1. System Initialization (First Boot)](./README.md#3-1-system-initialization-first-boot)\n\n[3-2. Accounts And Passwords](./README.md#3-2-accounts-and-passwords)\n\n[3-3. Web Login Interface NOTE](./README.md#3-3-web-login-interface-note)\n\n[3-4. Pre-Configured Items](./README.md#3-4-pre-configured-items)\n\n[3-5. Wireless Configuration](./README.md#3-5-wireless-configuration)\n\n[3-6. Wired Network Configuration](./README.md#3-6-wired-network-configuration)\n\n[3-7. Boot Custom Startup Script](./README.md#3-7-boot-custom-startup-script)\n\n[3-8. DO NOT Upgrade The Deepin Desktop ENV](./README.md#3-8-do-not-upgrade-the-deepin-desktop-env)\n\n[3-9. TTY Display Chinese Font (Not Remote) Of Chinese Environment](./README.md#3-9-tty-display-chinese-font-not-remote-of-chinese-environment)\n\n[3-10. Web Interface VNC Remote Desktop Of macOS Mojave Theme Desktop Support](./README.md#3-10-web-interface-vnc-remote-desktop-of-macos-mojave-theme-desktop-support)\n\n[3-11. Switch Sound Output Channels](./README.md#3-11-switch-sound-output-channels)\n\n[3-12. 32-Bit Software Armhf Support](./README.md#3-12-32-bit-software-armhf-support)\n\n[3-13. Enabled And Start Docker Service](./README.md#3-13-enabled-and-start-docker-service)\n\n[3-14 Enabled And Start CecOS CaaS Container Cloud](./README.md#3-14-enabled-and-start-cecos-caas-container-cloud)\n\n[3-15 Create And Joined Or Exit And Left A Docker Cluster](./README.md#3-15-create-and-joined-or-exit-and-left-a-docker-cluster)\n\n[3-16. FAQ NOTE](./README.md#3-16-faq-note)\n\n[- 3-16.1 Using Profiles To Connect To The Wireless Networks Of Graphical Desktop Environment](./README.md#3-161-using-profiles-to-connect-to-the-wireless-networks-of-graphical-desktop-environment)\n\n[- 3-16.2 Version mismatch when installing packages using APT command](./README.md#3-162-version-mismatch-when-installing-packages-using-apt-command)\n\n[- 3-16.3 Chromium browser interface display error](./README.md#3-163-chromium-browser-interface-display-error)\n\n[- 3-16.4 Bluetooth Audio connection lost](./README.md#3-164-bluetooth-audio-connection-lost)\n\n[- 3-16.5 USB mass storage boot problem](./README.md#3-165-usb-mass-storage-boot-problem)\n\n[- 3-16.6 How to upgrade Docker-CE](./README.md#3-166-how-to-upgrade-docker-ce)\n\n[- 3-16.7 Change audio mono output to stereo for Desktop Version System](./README.md#3-167-change-audio-mono-output-to-stereo-for-desktop-version-system)\n\n[3-17. Extra Application Instructions](./README.md#3-17-extra-application-instructions)\n\n[- 3-17.1 WPS Office Arm 64-bit Desktop Installation Note](./README.md#3-171-wps-office-arm-64-bit-desktop-installation-note)\n\n[- 3-17.2 How to install the QQ Official Desktop App (Linux Edition)](./README.md#3-172-how-to-install-the-qq-official-desktop-app-linux-edition)\n\n[- 3-17.3 The OpenCV Extra Package](./README.md#3-173-The-OpenCV-Extra-Package)\n\n[- 3-17.4 PiBox Android Runtime](./README.md#3-174-PiBox-Android-Runtime)\n\n----\n\n[4. Virtual Machine Instructions](./README.md#4-virtual-machine-instructions)\n\n[4-1. Standard Virtual Machines PKG Instructions](./README.md#4-1-standard-virtual-machines-pkg-instructions)\n\n[4-2 BT-Panel Virtual Machine PKG Instructions](./README.md#4-2-bt-panel-virtual-machine-pkg-instructions)\n\n[4-3 How To Expand The Size Of A Virtual Machine Disk](./README.md#4-3-how-to-expand-the-size-of-a-virtual-machine-disk)\n\n----\n\n[5. Update And Upgrade](./README.md#5-update-and-upgrade)\n\n[5-1 Upgrade System](./README.md#5-1-upgrade-system)\n\n[5-2 Update Kernel And Firmware](./README.md#5-2-update-kernel-and-firmware)\n\n[5-3 Update Instructions](./README.md#5-3-update-instructions)\n\n[5-4 Latest Current Version](./README.md#5-4-latest-current-version)\n\n[5-5 Rpi4 USB Boot Support (Upgrade eeprom FW)](./README.md#5-5-rpi4-usb-boot-support-upgrade-eeprom-fw)\n\n[5-6 New features just for testing](./README.md#5-6-new-features-just-for-testing)\n\n[- 5-6.1 Mesa Vulkan (v3dv) drivers include RPI4 VC4 and V3D for OpenGL H/W acceleration](./README.md#5-61-mesa-vulkan-v3dv-drivers-include-rpi4-vc4-and-v3d-for-opengl-hw-acceleration)\n\n----\n\n[6. Download Links](./README.md#6-download-links)\n\n----\n\n[7. Other Instructions](./README.md#7-other-instructions)\n\n[7-1 Donation](./README.md#7-1-donation)\n\n[7-2 Contact Info.](./README.md#7-2-contact-info)\n\n[7-3 Copyright](./README.md#7-3-copyright)\n\n----\n\n[8. Join US!](./README.md#8-join-us)\n\n[9. Thanks](./README.md#9-thanks)\n\n----\n\n\n# Official Documentation Version 2.0\n\n----\n\n## 0. System Screenshots\n\nScreenshot of the macOS-Mojave theme desktop by XFCE.\n\n![macos](./images/macos1.jpg)\n\nScreenshot of the BaseOS Plus++ version: Web Management login interface.\n\n![loginUI](./images/ui1.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management system info interface.\n\n![WebUI](./images/ui2.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management container interface.\n\n![Docker](./images/ui3.png)\n\nScreenshot of the BaseOS Plus++ version: Web Management web console interface.\n\n![UI SHELL](./images/uishell.png)\n\nScreenshot of the CecOS CaaS Container Cloud: Main page.\n\n![CaaS](./images/caas.png)\n\nScreenshot of the CecOS CaaS Container Cloud: Cluster Management.\n\n![CaaS Cluster](./images/caas2.png)\n\nScreenshot of the macOS-Mojave theme desktop: Multimedia support.\n\n![macos](./images/macos2.jpg)\n\nScreenshot of the Deepin desktop environment: Main Desktop.\n\n![Deepin桌面1](./images/deepin_desktop_min.jpg)\n\nScreenshot of the Deepin desktop environment: Dashboard.\n\n![pi4桌面2](./images/p4-2.png)\n\nScreenshot of the Deepin desktop environment: System Settings & System info.\n\n![pi4桌面1](./images/p4-1.jpg)\n\nScreenshot of the macOS-Mojave Theme Desktop: Graphics Virtual Machine Manager (VMM). \n\n![pi4VMM](./images/vmm.jpg)\n\n----\n\nScreenshot of the macOS-Mojave Theme Desktop: Run Android App: DOTA.\n\n![pi4Android1](./images/apk0.jpg)\n\nScreenshot of the macOS-Mojave Themed Desktop: Run Android App: WPS (A China office compatible software) and DOTA.\n\n![pi4Android2](./images/apk1.jpg)\n\nScreenshot of the macOS-Mojave Themed Desktop: Run WPS-ARM64-Edition-App (A China office compatible software).\n\n![wps_arm64](./images/wps.jpg)\n\n----\n\n**Screenshot of the macOS-Mojave Themed Desktop: Run Windows 10 Arm Desktop Edition On Qemu.**\n\n![qemu_win_arm_0](./images/win0.jpeg)\n\n*Install Arm windows on qemu.*\n\n![qemu_win_arm_1](./images/win1.jpeg)\n\n*Arm desktop PIFAN desktop.*\n\n![qemu_win_arm_2](./images/win2.jpeg)\n\n*Arm windows on qemu: Systeminfo.*\n\n![qemu_win_arm_3](./images/win3.jpeg)\n\n*Arm windows on qemu: Run QQ X86 desktop edition App.*\n\n![qemu_win_arm_4](./images/weichat.jpg)\n\n*Arm windows on qemu: Run WeiChat X86 desktop edition App.*\n\n![qemu_win_arm_5](./images/tim.jpg)\n\n*Arm windows on qemu: Run TIM X86 desktop edition App.*\n\n**Also support Pi Zero 2 W**\n\n*Need OS and UPKG version >= 2021-11-11-v2020-2.0-U6-Release (kernelVer:5.10.78-Release-OPENFANS+20211111-v8)\n\n![Pi_Zero_2_W-1](./images/02w1.png)\n\n![Pi_Zero_2_W-2](./images/02w2.png)\n\n----\n\n## 1. Introduction\n\nDon't ask a question about using a 64-bit OS for the Raspberry Pi and what's the difference between 64-bit & 32-bit OS?\n\nCuz the Raspberry Pi with a 64-bit CPU, ~~unfortunately the Raspberry Pi foundation had without any system or software supported~~ the Raspberry Pi officially launched a 64bit **Beta** in May 2020, and the result is indeed Debian64+Pixel ... Otherwise please add your brain...\n\nAll the versions released in this article are official versions that had been used and validated in the real enterprise production environment. The system has been rigorously tested and used normally with fully compatible for the Raspberry Pi 2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W, such as local wired, wireless network card, Bluetooth, 3D acceleration, etc. The numbers of all system packages are almost comparable to the X86 version. The system was built from the official Debian 64-bit baseline (wasn't built from any other ported edition or third-part edition) to ensure the original flavor.\n\nThere isn't any other relationship with the official Raspberry Pi, so no proprietary commands as the Raspberry Pi official system used (such as raspi-config, rpi-update, etc.), you need to edit the configuration file ( /boot/config.txt ) by yourself.\n\n**Why choose Debian?**\n\nCuz the Raspberry Pi has the best compatible from Debian OS (This is inseparable from Raspbian does, the Raspbian is also based on Debian OS with the full-testing, also inherited a great power and performance of Debian. For example: Ubuntu, the most famous and successful distribution OS which was also based built from Debian).\n\nThis system is completely different from any systems we released before (also including the previous 64-bit Debian we published), we have all built from zero-os baseline this time and built a new automatic compilation and packaging, the testing system in our lab. We also redefined the packaging process and adjust all the relevant configurations, make a lot of modifications, adjustments and optimizations for the system, fixed a lot of bugs of the kernel. A lot of new features have been added, especially with the support for the hardware KVM virtualization acceleration and optimization for Docker features tuning.\n\n**We have specifically redefined and optimized our own cross compiler chain-tool and compiler for rebuild the base kernel and modules of Raspberry Pi when we were publishing the version 2.0 what is more greatly optimized and improved compiler faster and efficiency (About cross compiler chain-tool and compiler, you can refer to Huawei's Ark compiler, they have the same effect, our compiler is optimized for basic compilation tools such as C, C++, G++, ASM, NM, ld, CMAKE, and Glib, etc., Specifically target the raspberry-based hardware, ARM aarch64 A53 and ARM-v8a A72 and also including instructions set of hardware, etc.)**\n\nOn June 20, 2019, the Raspberry Pi foundation released the new fourth-generation single-board machine \"Raspberry Pi 4B\". We got the 4th-generation 4G version from the Raspberry Pi official Cambridge Global Store for the first time.\n\n- **On July 6, 2019, half a month hard-working after Pi4 released, The OPENFANS and the Pi Fan base community released the new Debian-Pi-Aarch64 OS version 2.0 release together.**\n\n- **This is the first 64-bit system in the world to support all Raspberry Pi 64-bit hardware!!! (Include: 2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W)**\n\nAll of the new version 2.0 has 3D acceleration supported (With FKMS), and finally introduced the **OPENFANS Container Cloud Management Platform**  supported (Also called CecOS CaaS, based build from an open-source project which is called Portainer) which is be more perfect and powerful than system version 1.0!\n\nThe newest OS 2.0 is also adhering to the all excellent tradition from the Debian-Pi-Aarch64 OS which was built by OPENFANS and Pi Fan Base community.\n\nThis newest OS 2.0 is full support to all Raspberry Pi aarch64 single boards: 2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W and still inherit all the features of the stable version 1.0!\n\n----\n\n### 1-1. System Environment (Versions)\n\n● **BaseOS** (none desktop environment, basic version)\n\n```\nStandard underlying system basic image, none x-window environment.\n**System image name format: OPENFANS-Debian-Buster-Aarch64-XXXXXX.img\n```\n\n● **BaseOS Plus++** (none desktop environment, plus++ version)\n\n```\nOut of the function of BaseOS, with a visual Web UI management interface added.\n**System image name format: OPENFANS-Debian-Buster-Aarch64-XXXXXX-plus.img\n```\n\n● **macOS Mojave theme custom desktop** (Desktop environment, Full-Featured)\n\n```\nExclusive system image ingested from the XFCE depth-customized \nand full support all the features as our other versions!\n**System image name format: OPENFANS-Debian-Buster-Desktop-Aarch64-XXXXXX.img\n```\n\n● **Deepin desktop environment**\n\n```\nBased on our own underlying BaseOS system image, from the complete \nDeepin 15.5 Pro desktop environment is ported, which is the first 64-bit ARM64 image currently built \nbased on the complete Debian Aarch64 architecture, adapted to the Raspberry Pi 3B, 3B+, 3A+ 4B, and CM3, CM4.\n**System image name format: OPENFANS-Deepin-Professional-Desktop-Aarch64-XXXXXX.img\n```\n\n● **Kernel** & **Firmware** Upgrade Package\n\n```\nGeneral naming rules are in the form of (starting with the upkg ) :\nupkg-xxxx (years)-xx (months) -xx (day) -vxxxx-x-x-zip/zip.xz\n```\n\n----\n\n### 1-2. System Environment (Base Env)\n\nAll the version 2.0 system images are used \"ext4\" file system as default, the Tsinghua source-mirror was set as the default software repo, and version was based on the Debian Buster 10 Arm64.\n\n**Note that version 2.0 does not support upgrades from any other version for the time being and requires a fresh installation.**\n\n### 1-3. Features Comparison From Different Versions\n\n|Projects|BaseOS|BaseOS Plus++|Desktop Full-Featured|Deepin Desktop|\n|---|---|---|---|---|\n| KVM Hardware Virtualization Support|★|★|★|★|\n|Graphical Virtual Machine Manager|X|X|★|X|\n|Docker Container|☆|★|☆|☆|\n|CecOS CaaS Platform|☆|☆|☆|X|\n|WebGUI Manager|X|★|★|X|\n|Web SSH Client|★|★|★|★|\n|Standard VM kit|★|★|★|X|\n|BT-Panel kit|★|★|★|X|\n\n----\n\n**(1)Note:**\n\n**★ :** Stands for supported and default enabled. It can directly be used.\n\n**☆ :** Stands for supported and default disabled. Need to be started manually. \n\n(There will be an instructions for how to use this service in this document.)\n\n**X :** Stands for not supported.\n\n**(2)Service control**\n\nDocker Container\n\n```\nManual start: systemctl start docker.service\nManual stop: systemctl stop docker.service\nEnable autostart: systemctl enable docker.service\nDisable autostart: systemctl disable docker.service\n```\n\nCecOS CaaS Platform (service port: 8443)\n\n```\nManual start: systemctl start cecos-caas.service\nManual stop: systemctl stop cecos-caas.service\nEnable autostart: systemctl enable cecos-caas.service\nDisable autostart: systemctl disable cecos-caas.service\n```\n\nWebGUI Manager (service port: 9090)\n\n```\nManual start: systemctl start cockpit.socket\nManual stop: systemctl stop cockpit.socket\nEnable autostart: systemctl enable cockpit.socket\nDisable autostart: systemctl disable cockpit.socket\n```\n\nWeb SSH Client (service port: 4200)\n\n```\nManual start: systemctl start shellinabox.service\nManual stop: systemctl stop shellinabox.service\nEnable autostart: systemctl enable shellinabox.service\nDisable autostart: systemctl disable shellinabox.service\n```\n\n----\n\n### 1-4. Some System Performance Testing Results\n\n#### Version 1.0 vs. other comparable 64-bit OS (developed by others) testing result\n\nAn incomplete testing result, just theoretical data, for reference only:\n\nUnixBench testing results using the Ext4 Standard File System and The Raspberry Pi 3B Plus (compared to comparable Debian Aarch64 systems):\n\n* **Single Thread:**\n\n![x1](/images/u1.JPG)\n* **Multi-threaded:**\n\n![x4](/images/u4.JPG)\n\n* **Overall rating:**\n\n![all](/images/uall.JPG)\n\nOverall performance comprehensively exceeds the comparison test system of 2 to 3 times, some indicators even reached more than 10 times, 1000% improvement.\n\n- Version 1.0 vs. Raspberry Pi Official 32-bit system testing result\n\nRecently, the Raspberry Pi official has done a lot of optimization work, the current system compared to the previous 32-bit system has a larger improvement, but limited to the 32-bit local architecture restrictions, and 64-bit system performance gap is still large.\n\n**Attached:** Pi Fan **Debian Pi Aarch64 64-bit version 1.0 system vs. Raspbian 32-bit** performance comparison testing result\n\n*Sysbench 0.4.12 Result:*\n\n| **Test projects** | **ARM32/EXT4** | **ARM64/F2FS** | test unit：**time** / the **smaller** the better |\n| --- | --- | --- | --- |\n| **System Information** | 2018-11-13-Raspbian | Raspberry Pi Fan 64-bit U8 Edition | Increase the multiple |\n| **The CPU single thread** | 119.2072 | 9.8725 | 12.07 |\n| **The four-threaded** | 299.5217 | 24.6616 | 12.15 |\n| **the eight-threaded** | 299.5824 | 24.6789 | 12.14 |\n| **Memory Random** | 1.2625 | 0.8751 | 1.44 |\n| **Memory Continuous** | 1.5803 | 1.1583 | 1.36 |\n| **Continuous read-write of files** | 6.1621 | 2.2928 | 2.69 |\n| **File Random Reading and Writing** | 484.812 | 6.3527 | **76.32** |\n\nMaximum Performance Gap Multiple: **76.32**\n\nMultiples of the average performance gap: **14.95**\n\n- Version 1.0 testing result comparison chart\n\n![sysbench](./images/sysbench_result.png)\n\n#### The latest 2.0 beta with The Raspberry Pi Official 32-bit System Testing Result\n\nTest hardware: Raspberry Pi 4B\n\n*Sysbench 0.4.12 Result:*\n\n| **Test projects** | **ARM32/EXT4** | **ARM64/EXT4** | test unit：**time** / the **smaller** the better |\n| --- | --- | --- | --- |\n| **The system** | 2019-06-20 raspbian-buster | 2019-07-06 Pi Fan 2.0 Beta Edition | Increase the multiple |\n| **Single-threaded** | 92.7292 | 6.7406 | 13.757 |\n| **The four-threaded** | 231.6591 | 16.8172 | 13.775 |\n| **the eight-threade** | 231.5002 | 16.8282 | 13.757 |\n| **Memory Random** | 2.4225 | 0.6086 | 3.980 |\n| **Memory Continuous** | 2.5631 | 0.9267 | 2.766 |\n| **Continuous read-write of files** | 6.3636 | 1.8859 | 3.374 |\n| **File Random Reading and Writing** | 627.719 | 10.6036 | 59.199 |\n| **Mutually exclusive lock performance (4096)** | 0.0206 | 0.0081 | 2.543 |\n\nMaximum Performance Gap Multiple: *59.199*\n\nAverage Performance Gap Multiple: *14.144*\n\n- Version 2.0 testing result comparison chart (statistical unit: time, the smaller the better)\n\n![sysbench](./images/sysbench_result2.png)\n\n----\n\n## 2. Main Features Introduction\n\n### 2-1. Web Visual Management Interface\n\n![web manage](./images/ui2.png)\n\nAll-platform web visual management interface (Only supported for BaseOS and Desktop Full-Featured version).\n\nWith web management interface support on the new 64-bit OS version 2.0, the system-wide platform enables visual operational management interface, whether it's standard desktop graphics or desktop-free systems (enhanced version), the Debian-Pi-Aarch64 officially opens the visual era.\n\nWeb management interface support:\n\n```\n1. New Full-featured version of support;\n\n2. Fully open the web management era, save the trouble of terminal tools, \nAnytime, Anywhere, direct browser management;\n\n3. Enabled docker container service by default, out-of-the-box \n(version 2.0 please manage and use containers via CecOS CaaS Container Cloud);\n\n4. Full-service monitoring of integrated Web interface;\n\n5. Support the web interface to view system conditions, \nhardware information, situation and other information;\n\n6. Support for web interface setting hostname;\n\n7. Support for web interface setting up host domain;\n\n8. Support web interface to set host time, NTP servers, update mode;\n\n9. Support web interface shutdown and restart the system;\n\n10. Support for web interface system log management;\n\n11. Support web interface system storage and related peripheral management, \nonline partitioning, mount equipment, and other functions;\n\n13. Support for web interface system account management;\n\n14. support for web interface system service management;\n\n15. Support for web interface system update management;\n\n16. Web interface integrates shell terminal, which can be operated directly on the web page;\n\n17. Support for cross-node and unified management: manage multiple devices in one interface, \ndramatically improving management and productivity;\n\n18. Web management communications are encrypted using SSL certificates to ensure the security \nof session data.\n```\n\n![shellinabox](./images/shellinabox.jpg)\n\n**WEB SSH** client support, using a separate web shell (shellinaBox) suite, provides separate **web ssh** login support.\n\n### 2-2. QEMU-KVM Virtualization Support\n\nThis is a QEMU virtual machine with local Aarch64 architecture that supports KVM hardware acceleration.\n\nWe recompiled KVM binary to address many of the bugs for **qemu-system-aarch64** in KVM hardware-accelerated environments:\n\nThe default version of the system virtual machine cannot run, the system cannot be installed, etc. After KVM hardware acceleration was turned on...\n\nWe added support for KVM virtual machines when compiling the kernel, directly supporting full virtualization of hardware-accelerated, and added support for local KVM virtual hardware kernel modules, the main kernel modules are as follows:\n\n```\n1. virtio //standard virtual disk\n\n2. virtio-scsi //virtual scsi disk\n\n3. virtio-blk //pass-through disk block device\n\n4. Virtio-blk-scsi //pass-through disk block device scsi mode\n\n5. virtio-net //virtio virtual network card\n\n6. virtio-balloon //memory bubble\n\n7. virtio-hw-random //virtual random number hardware\n\n8. virtio-console //virtual terminal\n\n9. virtio-input //virtual input device\n\n10. Virtio-crypto-device //virtual encryption device\n\n12. virtio-drm-gpu //virtual graphics\n\n13. Virtio-9p //directory Sharing with v9p\n\n14. vfio //Pass-through device support\n\n15. vhost //host data interaction\n\n16. vhost-net //host network data interaction\n\n...\n```\n\n**What is KSM?**\n\nThe principle of KSM is that in multiple processes, Linux merges kernel-like memory pages into one memory page.\n\nThis feature, which is used by KVM to reduce memory usage of multiple similar virtual machines, improves memory efficiency. Cuz memory is shared, so multiple virtual machines use less memory, which is more effective when using the same image and operating system for virtual machines. To better optimize the memory efficiency of virtual machines, the kernels of all our systems support KSM by default.\n\nThe current 2.0 system is fully available for virtualization support by default, and the graphical desktop provides a visual \"**Virt-Manager**\" app for management.\n\n### 2-3. Docker Container Support\n\nThe famous Docker will not be much introduced here, this time we recompile the kernel, added the full feature of Docker support, this is currently the most complete support for Docker features under the Raspberry Pi Aarch64 system architecture, Most other versions are still 32-bit systems with 32-bit dockers, and local 64-bit system cores lack much kernel support for Docker features.\n\nEven the latest version of the famous 32-bit Raspberry Pi Docker system **Hypriot** doesn't fully support the **Docker Swarm**.\n\nYou'll get the following error message because the **Hypriot** does not support the **bridge vlan/vxlan netfiler**:\n\n```\nreexec to set bridge default vlan failed exit status 1\n```\n\nThis will result in the complete use of the Docker Swarm cluster is not support (The Hypriot OS), the lack of relevant feature support for the network, there will be some functional missing problems.\n\nYou can find a lot of errors and warnings on the local 64-bit ARM system by using the **systemctl status containerd** and the **systemctl status docker** as well as by viewing the logs, and not counting them completely. The local system kernel includes at least lost the following features: (The Hypriot OS and most other system)\n\n```\n1. cgroup memory limit\n\n2. cgroup swap limit\n\n3. cgroup rt period\n\n4. cgroup rt runtime\n\n5. cgroup pid support\n\n6. cgroup memory sysfs\n\n7. cgroup rdma\n\n8. cgroup perf\n\n9. cgroup bridge vlan/vxlan\n\n10. cgroup netfiler\n\n11. cgroup net prio\n\n12. cgroup cfs bandwidth limit\n\n13. Bridge vlan ilter\n\n14. ipvs\n\n15. ipvs ipv6\n\n16. memory sysfs\n\n17. Kernel KSM\n\n...\n```\n\n**Docker Compose**\n\nDocker official doesn't provide arm/arm64 based docker-compose to run binary, so we recompiled and provided aarch64-bit binary that can be run and now the default is added to the system images, which you can use directly.\n\n### 2-4. AUFS File System Support\n\n***Note:***  Support for AUFS will be discontinued after version **2.0 U3 (Include)**!\n\n**What is the AUFS File System?**\n\nAUFS, the full name is an advanced multi-layered unification file system, the main function is to combine the contents of multiple folders to provide a unified view, mainly for the various Linux distributions livecd, and the docker inside used to organize the images.\n\nAUFS was Docker's default storage driver, with a very stable, lots of real deployments, and strong community-supported, with several key advantages:\n\n```\n- Very short container start-up time\n- Effective storage utilization\n- Effective memory utilization\n```\n\nBut since it is not included in the Linux kernel mainline, many Linux distributions do not support AUFS.\n\nThe latest Docker defaults to the faster and latest OverlayFS file system, we make maintains the default value for this official setting.\n\n**Do we need to use AUFS?**\n\nCuz Docker's mirror files use a file system that is divided into multiple tiers, OverlayFS supports only 2 tiers, multiple replicas are replicated when using the same mirror layer, and takes up more space and I/O, while a AUFS also provides the ability to use multi-tiered storage and share data. Docker uses AUFS' Copy-on-Write copy technology to achieve image sharing and minimize disk space usage.\n\nFor devices with less storage space like Raspberry Pi, using the AUFS file system makes better use of our limited storage space resources and reduces I/O consumption.\n\nTo allow users to freely choose and use OverlayFS or AUFS according to their circumstances, we have added support for AUFS modules by default in the kernel.\n\nSince AUFS is not supported by the mainline of Linux kernel, we have added AUFS kernel module code and recompiled to the kernel of mainline 4.19 through AUFS' PATH, and now the system boot will automatically load the AUFS module, which can be used directly without human intervention.\n\n### 2-5. TCP Acceleration\n\nThe kernel has turned on the TCP BBR congestion control algorithm by default.\n\n**What is TCP BBR?**\n\nLet's explain simply what the TCP BBR solves:\n\n```\n- Make full use of bandwidth on network links with a certain drop rate, \nideal for high-latency, high-bandwidth network links;\n\n- Reduces buffer occupancy on network links, reducing latency, \nmaking it ideal for users who access the network at slow speed.\n```\n\nSimply put, the TCP BBR congestion control algorithm can improve TCP transmission speed and efficiency to a certain extent and optimize network transmission.\n\n**How to turn off:**\n\nEdit the \"/etc/sysctl.conf\" file, execute the command \"**sysctl -p**\" to view the results, and do not see the following comments, representing the operation succeeded.\n\nComment out the following 2 lines: (Just put the \"**#**\" at the beginning of each line)\n\n```\nnet.core.default-qdisc-fq\nnet.ipv4.tcp.tcp-contents-control-bbr\n```\n\n### 2-6. Memory And Swap Optimization (Algorithm-level)\n\n- **Support: Swap Partition**\n\nThis new version of the system by default increased support for swap  caches to alleviate the problem of low memory in the system, greatly improved support and efficiency of executable large-capacity memory requirements applications, users do not need to manually create the system Swap, our system will automatically complete and initialize Swap after installation. The location of the Swap file or partition can be adjusted by looking at the system mount profile **/etc/fstab** .\n\n- **Support: zSWAP virtual memory compression**\n\nThis new version of the system kernel by default has added the virtual memory compression function of the \"zSWAP\" to provide a compressed writeback cache for the pages to be swapped, the default limit of physical memory is the 25%  of system's total memory upper limited.\n\n**Why zSWAP?**\n\nWhen the memory page is about to be swapped out, zSWAP does not move it to the switching device, but compresses it and then stores it in a pool of memory that is dynamically allocated within the system RAM, and the act of writing back to the actual swap device is delayed or even avoided altogether, thus significantly reducing the I/O used by the Linux system for switching. For Raspberry Pi such a device relying on the TF card, the original I/O is not very high, reducing the operation of I/O for exchange means improving system performance, I/O used in system applications and other more needed scheduling.\n\nIn scenarios where swap files/partitions are used, TF life can be increased by reducing I/O operation on Swap files/partitions.\n\n**zSWAP** does not virtual a block device, but hook into the ordinary Swap code, before the actual *write-to-disk/read* operation, the first use of their management of memory for data swap/in, memory is not enough to use before the use of traditional Swap files/partitions. So zSWAP is suitable for systems that already have swap partitions themselves, as well as hardware devices like Raspberry Pi, which have little memory of itself.\n\n**Why not zRAM?**\n\nzSWAP uses both memory and swap partitions, and automatically adjusts the size of the memory, and the cached data is automatically stored into the Swap file/partition when the system memory is not enough, greatly improving the efficiency of the system Swap swap exchange. More full use of memory space resources and avoid the system memory shortage, and zRam completely use memory to operate and store data, completely occupied memory, generally used in large memory scenarios, which is not appropriate for a small memory Raspberry Pi.\n\n**zSWAP memory allocators and data compression algorithms used in this system :**\n\n```\nMemory allocator zpool frame: smalloc, zbud, z3fold\n```\n\nThe reality shows that although zsmalloc has a high compression rate, the algorithm is complex and requires additional threads to be responsible for memory finishing, which consumes more cpu time.\n\nThe zbud implementation is simple, memory page storage does not produce memory fragmentation, but the compression rate is low, up to only 2 times, does not meet the actual needs of small memory system.\n\nAs a result, Sony developed the z3fold memory allocator, which is exactly the same as zbud's implementation, except that each page can store 3 compressed pages, with a maximum compression rate of 3 x, and a nearly 4x of zsmalloc, a technique used in xperia xzp, Get a 4GB experience with your 4GB phone.\n\nWe selected the z3fold algorithm in the system, and we can see the configuration in the system /boot/cmdline.txt:\n\n```\nzswap.enabled=1 zswap.zpool=z3fold zswap.compressor=lz4 zswap.max_pool_percent=25\n```\n\n**Compression algorithm**\n\nLinux has many compression algorithms: lz, lzo, xz, gzip, lzma...\n\nWe have adopted **lz4** with very high compression speed and high compression rate, **lz4** compared to other compression algorithms, compression rate is not the highest, but the speed is indeed the fastest, in the case of the z3fold algorithm has been used, combined with the Raspbery Pi's performance characteristics and actual testing, and also wanna get a good compression rate, Speed is the most important thing for the Raspberry Pi (given its CPU performance overhead and memory size).\n\n### 2-7. macOS-Mojave Theme Desktop\n\n![desktop](./images/apk0.jpg)\n\nThe default desktop theme uses a desktop that mimics the macOS Mojave theme.\n\n### 2-8. CecOS-CaaS Container Cloud (JUST A CHINESE EDITION SUPPORT)\n\n![caas-main](./images/caas.png)\n\n![caas-cluster](./images/caas2.png)\n\nRebuild from An open-source project [Portainer](http://potainer.net) and develop for Chinese and others By OPENFANS.\n\n### 2-9. Other Features\n\n- Support for 3D acceleration, all desktop environments are enabled by default.\n\n- There are too many new features of version 2.0, we won't elaborate anymore here.\n\n----\n\n## 3. Instructions For Usage\n\n### 3-1. System Initialization (First Boot)\n\nThe system will automatically expand the root partition, and then automatically configure, until complete, the normal use, in the process the system will automatically restart **3** times.\n\n### 3-2. Accounts And Passwords\n\nSystem default account: **pi**, default password: **raspberry**\n\nThe default account pi account supports ssh login, for root account password please login first and then use the command **\"sudo passwd root\"** to set,\n\nOr use the command **\"sudo -i\"** to switch to the root user mode.\n\n### 3-3. Web Login Interface NOTE\n\n```\n1.Web Visual Management Login Interface\nLogin address https://yourRasp's IP address:9090\nDescription: Please login system used default account: pi\n\n2.WEB SSH Client Portal Login Interface\nLogin address https://yourRasp's IP address:4200\nDescription: Used the account with the permission of console login, \nuser pi was already with this permission.\n```\n\n### 3-4. Pre-Configured Items\n\nThe system provides a pre-configured network and auto-start task during boot, with the path and correspondence of the relevant profile as follows:\n\n| Pre-configured items | Pre-profile paths | Corresponding to the system file path to the link |\n| --- | --- | --- |\n| Wireless Networks | /boot/wpa_supplicant.conf | /etc/wpa_supplicant/wpa_supplicant.conf |\n| Wired Networks | /boot/interfaces | /etc/network/interfaces |\n| DHCP Clients | /boot/dhclient.conf | /etc/dhcp/dhclient.conf |\n| Custom Boot Scripts | /boot/rc-local | /etc/rc.local |\n\n### 3-5. Wireless Configuration\n\nA desktop environment can be set up through a graphical interface after logging into the desktop environment, here provides how the configuration file is modified.\n\nIf the desktop environment wants to connect to wireless networks using a configuration-modifying approach, please NOTE [here](./README.md#3161%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C).\n\nModify the file **\"/boot/wpa_supplicant.conf\"**\n\n```\n## To use this file,you need to run the command: ##\n## \"systemctl disable network-manager\" and reboot system.##\n##\n## (Do not uncomment this line!) ##\n\n## 'country' is to set wifi area,'CN' is china ##\n#country=CN\n#ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n#update_config=1\n\n## The following \"WIFI 1\", \"WIFI 2\" represents the settings of multiple wireless networks ##\n## Unless you want to set up multiple wireless networks, ##\n##you only need to set the settings of \"WIFI 1\". ##\n## WIFI 1 (Do not uncomment this line!) ##\n\n## In addition to canceling the content comments that need to take effect, ##\n## the following only need to modify the contents of the quotes after \"ssid\" and \"psk\". ##\n## ssid is your wireless Wifi name, psk is your wireless Wifi password ##\n#network={\n#    ssid=\"your-wifi1-ssid\"\n#    psk=\"wifi1-password\"\n#    priority=1\n#    id_str=\"wifi-1\"\n#}\n\n## WIFI 2 (Do not uncomment this line!) ##\n\n#network={\n#    ssid=\"your-wifi2-ssid\"\n#    psk=\"wifi2-password\"\n#    priority=2\n#    id_str=\"wifi-2\"\n#}\n```\n\n**wireless area code settings**\n\nEdit the file of the **\"/etc/default/crda\"**, edit the contents behind **\"REGDOMAIN=\"**, the default has been set to \"**CN**\" China, in general, no settings are required.\n\n**with wireless common area code: **\n\n```\nAU Australia\nCA Canada\nCN China\nGB UK\nHK Hong Kong\nJP Japan\nKR Korea\nDE Germany\nUS USA\nTW Taiwan\n```\n\n### 3-6. Wired Network Configuration\n\nModifying the file of the file of the file: **\"/boot/interfaces\"**\n\n```\ninterfaces (5) file used by by ifup (8) and ifdown (8)\nInclude files from /etc/network/interfaces.d:\nsource-source/etc/network/interfaces.d\nUsed dhcp ip address set eth0 inet to dhcp,\nsor used static ip address set eth0 to static\nSand change other ip settings.\nIf you wanna let settings to take effect,\nsuncomment symbol in front.\n#auto eth0\n#allow-hotplug eth0\n#iface eth0 inet dhcp\n#iface eth0 inet static\n#address 172.16.192.168\n#netmask 255.255.255.0\n#gateway 172.16.192.1\n#dns-nameservers 8.8.8.8\n```\n\n### 3-7. Boot Custom Startup Script\n\nThe system supports a custom scripts as an auto-start task during boot, which can be pre-configured before the system starts.\n\nEdit the script file **\"/boot/rc-local\"** and add the custom script content before line: **\"exit 0\"**.\n\n### 3-8. DO NOT Upgrade The Deepin Desktop ENV\n\n**The version which was after 2019-11-10 (Also included) had supported upgrade!**\n\nCuz of compatibility issues with the Deepin system and upstream warehouses (deepin itself), it is strongly discouraged from using any of the following commands or any other operations that would cause the system to be upgraded unless you know what you need to do!!!\n\nAll Deepin version systems need attention, including all Deepin versions of 1.0 and 2.0!\n\n```\napt upgrade\napt-get upgrade\napt dist-upgrade\napt-get dist-upgrade\n```\n\n**PS:**\n\n*Some software installation limited to Deepin itself compatibility issues, there may be bug caused the system can not start or any other unknown problems, because the software is too much we can not test one by one, welcome feedback, recommended install through source code.*\n\n*The Deepin Software Store software is provided by Deepin, not us, at present, Depth Software Store does not provide software support for arm64 , if there is any needs, please go to the deepin official forum for assistance.*\n\n*So we strongly recommend using our customized macOS-Mojave themed desktop version.*\n\n### 3-9. TTY Display Chinese Font (Not Remote) Of Chinese Environment\n\nNotice: Remote login ignores this problem, there will be no garbled problem. When only using the local terminal through a local monitor or serial connection, because the Linux kernel local standard TTY does not support the display of Chinese font, the relevant of action when the display of garbled is required.\n\nWe need to install fbterm extension support, to do that, use following commands under network environment:\n\n```\n## Install fbterm\nsudo apt update; sudo apt install fbterm -y\n\n## Add a login user to the video group\nsudo adduser root video ; sudo adduser pi video\n\nsudo adduser you create your own other user name (if any) video\n\n## And then execute the following command each time you need to display Chinese fonts\n## (wait some time for the first time):\n\nfbterm\n```\n\n### 3-10. Web Interface VNC Remote Desktop Of macOS Mojave Theme Desktop Support\n\n![web VNC](./images/web-vnc.jpg)\n\n**Note:**\n\nThe **macOS Mojave theme custom desktop** (*Desktop environment, Full-Featured*) which the version is after 2019-11-17 (also include) had support web interface VNC remote desktop by default.\n\n```\nThe default VNC access password is: raspberry\nThe default VNC web interface address is: http://your-rpi-ip-addr:5901\nThe default VNC client address is: your-rpi-ip-addr:5900\n```\n\n*You can not used web interface and client to connect the same vnc server at the same time.*\n\nIf you wanna used a client to connect the vnc server, we suggest you to use RealVNC client, you can click [here](https://www.realvnc.com/en/connect/download/viewer/) to download RealVNC client.\n\n#### Instructions for web interface VNC remote desktop usage\n\nThere are two ways to used the default VNC:\n\n**● Connected a real monitor**\n\n```\nThe VNC was default enabled, you needn't do nothing.\n```\n\n**● Without any monitor connected**\n\n```\nThe VNC was default enabled, but if you haven't any monitor to connected, you should use a \nvirutal monitor, run command: \"virtual-monitor-enable\" to enable virutal monitor mode, \nafter this the system will reboot.\n```\n\n#### IMPORTANT\n\n```\nIf you wanna enable the virtual monitor mode, you can not connect to a real monitor the \nsame time, if you had enabled the virtual monitor mode, run command :\n\n\"virtual-monitor-disable\" \n\nto back to the normal when you wanna connect to a real monitor back.\n```\n\n**Note: The \"Virtual Monitor Mode\" is not enabled by default.**\n\n#### Commands for default VNC\n\n**virtual-monitor-enable**\n\n```\nEnable the virtual monitor mode, without connect a real monitor.\nAfter this, the system will reboot.\n```\n\n**virtual-monitor-disable**\n\n```\nDisable the virtual monitor mode, back to Normal and connect a real monitor.\nAfter this, the system will reboot.\nThis is a system default mode.\n```\n\n**enable-vnc**\n\n```\nEnable the default VNC service.\nAfter this, the system will reboot.\nThe system is enabled by default.\n```\n\n**disable-vnc**\n\n```\nDisable the default VNC service.\nAfter this, the system will reboot.\n```\n\n**vnc-passwd**\n\n```\nChange the default VNC access password.\n```\n\n----\n\n### 3-11. Switch Sound Output Channels\n\nVesrion 2.0: System Default Use the **HDMI** to output audio.\n\nThe commands for switching the sound output:\n\n```\namixer cset numid=3 2\n\n## Set the output here to 2, which is HDMI.\n## Setting the output to 1 switch to the analog signal (that is, the headphone connector).\n## The default setting is 0, which represents automatic selection.\n```\n\nAfter you have finished modifying your audio settings, you need to restart your Raspberry Pi in order for your changes to take effect.\n\n**If you're still not getting sound via HDMI:**\n\nIn some rare cases, it is necessary to edit config.txt to force HDMI mode (as opposed to DVI mode, which does not send sound). \n\nYou can do this by editing **/boot/config.txt** and setting **hdmi_drive=2** , then rebooting for the change to take effect.\n\n\n### 3-12. 32-Bit Software Armhf Support\n\n```\ndpkg --add-architecture armhf\napt update\n\n## The 32-bit \"libc6:armhf\" base library needs to be installed first\napt install libc6:armhf\n\napt install [Other package name]:[armhf]\n\n## Install 32-bit software Please add suffix \":armhf\" after the name of the package\n```\n\n### 3-13. Enabled And Start Docker Service\n\nThe **BaseOS** and **Desktop Full-Features Versions** are not enabled by default and require manual start-up.\n\n```\n## Turn on the Docker service automatically start\nsystemctl enable docker.service\n\n## Start Docker service\nsystemctl start docker.service\n\n######\n\n## Stop Docker services\nsystemctl stop docker.service\n\n## Disable Docker service from booting\nsystemctl disable docker.service\n```\n\n### 3-14 Enabled And Start CecOS CaaS Container Cloud\n\nThe **BaseOS** and **Desktop Full-Features Versions** are not enabled by default and require manual start-up.\n\n**Note: To enable the CecOS CaaS container cloud service, you must enable and start the docker service first!**\n\n```\n## Turn on the CecOS CaaS Container Cloud service automatically start\nsystemctl enable cecos-caas.service\n\n## Start CecOS CaaS Container Cloud service\nsystemctl start cecos-caas.service\n\n######\n\n## Stop CecOS CaaS Container Cloud service\nsystemctl stop cecos-caas.service\n\n## Disable CecOS CaaS Container Cloud service from booting\nsystemctl disable cecos-caas.service\n```\n\n### 3-15 Create And Joined Or Exit And Left A Docker Cluster\n\n```\n## Initialize and join a Docker Swarm Cluster\ndocker swarm init\n\n## View cluster node status\ndocker node ls\n\n## exit Docker Swarm Cluster\ndocker swarm leave -force\n```\n\n### 3-16. FAQ NOTE\n\n#### 3-16.1 Using Profiles To Connect To The Wireless Networks Of Graphical Desktop Environment\n\nThe graphical desktop environment uses a profile to connect to a wireless network, and after modifying the ** /boot/wpa_supplicant.conf** file, to ensure good network compatibility, do the following:\n\nwith root user identity:\n\n```Shell\nsystemctl disable NetworkManager\n```\n\nThen execute:\n\n```Shell\nsed -i  \\\n's/sudo systemctl restart NetworkManager/## sudo systemctl restart NetworkManager/g' \\\n/home/pi/.xsessionrc\n```\n\nFinally, after restart all done.\n\n#### 3-16.2 Version mismatch when installing packages using APT command\n\n**Problem Description:**\n\nWhen using the command apt to install the deb package online, you may encounter the problem that a matching version cannot be found, such as:\n\n```\nThe following packages have unmet dependencies:\n package-name-1 : Depends: package-name-2 ( >= x.x.x-xxx-2 ) but x.x.x-xxx-1 is to be installed\n              Recommends: package-name-3 but it is not going to be installed\nE: Unable to correct problems, you have held broken packages.\n```\n\n**Reason:**\n\nThis is because some of the newer upstream packages installed on our system do not match the version of the packages in the default repository.\n\n**Solution:**\n\nTo temporarily enable the upstream **sid** software repository, add the `sid-used sudo` command before your **apt** command:\n\nExample: `sid-used sudo` **apt install package-name**\n\n#### 3-16.3 Chromium browser interface display error\n\n**Reason:**\n\nMaybe U will see this issue on version 20200615 U3, Cuz we changed mesalib, should used another way to set Chromium.\n\n**Solution:**\n\nRun command:\n\n```\nsudo sed -i  \\\n's/\"hardware_acceleration_mode\":{\"enabled\":true},/\"hardware_acceleration_mode\":{\"enabled\":false},/' \\\n/home/pi/.config/chromium/Local\\ State\n```\n\nThen re-open your Chromium browser.\n\n#### 3-16.4 Bluetooth Audio connection lost\n\n**Reason:**\n\nPi's Bluetooth has compatibility issues with certain hardware between alsa and pulseaudio.\n\n**Solution:**\n\nDisable Bluealsa Service, just use pulseaudio for bluetooth audio. Run the command below and reboot:\n\n```\nsystemctl mask  bluealsa.service\n```\n\n**Note**： Here U must use **\"mask\"** for unactive bluealsa.service, mustn't use **\"disable\"** !!\n\n#### 3-16.5 USB mass storage boot problem\n\nIf you met a problem from USB mass storage to boot, pls read [here](/docs/pi4-usb-boot-problems.md) to fix the problem.\n\n#### 3-16.6 How to upgrade Docker-CE\n\nRun the following commands as root user:\n\n```\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \\\n      $(lsb_release -cs) stable\" | \\\n      sudo tee /etc/apt/sources.list.d/docker.list\napt update\napt upgrade \n```\n\n#### 3-16.7 Change audio mono output to stereo for Desktop Version System\n\nEdit the file **/usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf**\n\nAdd the \";\" symbol at the beginning of each line of the following content to comment out the following:\n\n```\n[Mapping analog-mono]\ndevice-strings = hw:%f\nchannel-map = mono\npaths-output = analog-output analog-output-lineout analog-output-speaker analog-output-headphones analog-output-headphones-2 analog-output-mono\npaths-input = analog-input-front-mic analog-input-rear-mic analog-input-internal-mic analog-input-dock-mic analog-input analog-input-mic analog-input-linein analog-input-aux analog-input-video analog-input-tvtuner analog-input-fm analog-input-mic-line analog-input-headset-mic\npriority = 7\n```\n\nThe following is the content after the comment:\n\n```\n;[Mapping analog-mono]\n;device-strings = hw:%f\n;channel-map = mono\n;paths-output = analog-output analog-output-lineout analog-output-speaker analog-output-headphones analog-output-headphones-2 analog-output-mono\n;paths-input = analog-input-front-mic analog-input-rear-mic analog-input-internal-mic analog-input-dock-mic analog-input analog-input-mic analog-input-linein analog-input-aux analog-input-video analog-input-tvtuner analog-input-fm analog-input-mic-line analog-input-headset-mic\n;priority = 7\n```\n\nFinally restart the system to take effect.\n\n### 3-17. Extra Application Instructions\n\n#### 3-17.1 WPS Office Arm 64-bit Desktop Installation Note\n\nGet the install package from download repo's \"APP\" folder, after extracting the installation package, go to the installation package directory.\n\nThen connect to the public network and execute the following command as the root user:\n\n```shell\nsudo ./install.sh\n```\n\nThe program will be installed.\n\n**Note:** *Test only on the* **macOS Mojave theme custom desktop** *version!!* \n\n**For testing and learning use only!!!**\n\n#### 3-17.2 How to install the QQ Official Desktop App (Linux Edition)\n\nMake sure your system can connect to internet, then run the commands below as root user:\n\n```\nqq_pkg='linuxqq_2.0.0-b1-1024_arm64.deb' ; \\\ncd ~ ; \\\nwget https://raw.githubusercontent.com/openfans-community-offical/Debian-Pi-Aarch64/master/add-app/$qq_pkg ; \\\napt install ./$qq_pkg -y ; \\\nrm -rf ./$qq_pkg\n```\n\nAfter this, the App will be finished the installation.\n\n![linux_qq](./images/linux_qq.jpg)\n\n#### 3-17.3 The OpenCV Extra Package\n\n![opencv-example-4](./images/opencv4.png)\n\n![opencv-example-5](./images/opencv5.png)\n\n![opencv-example-1](./images/opencv1.png)\n\n![opencv-example-2](./images/opencv2.png)\n\n![opencv-example-3](./images/opencv3.png)\n\n**Attention**: This package **just** support the \"Debian-Pi-Aarch64\" **Full Desktop Edition** !! Relative testing of other editions.\n\n**Version**: 4.5.1\n\n**Feature**: Support hardware GPU encoding and acceleration.\n\n**Download**: You can find it in \"Debian-Pi-Aarch64\" Baidu Cloud and MEGA Online Disk Share Repo \"***Extra***\"->\"***OpenCV***\" directory.\n\n**Install**:\n\nDownload packgae, make sure your system can get online, then run command:\n\n```\nsudo apt install -y ./xxxxxx.deb\n```\n\nThe \"**xxxxxx.deb**\" is an OpenCV Package Name.\n\nAfter you run the command above, reboot your system, everything will be done.\n\n#### 3-17.4 PiBox Android Runtime\n\n**For test only !!**\n\n![pibox](./images/pibox_dj.jpg)\n\n**Download Addr:**\n\n***Baidu NetDisk*** -> ***PIFAN Apps*** -> ***Pibox (Android Box)***\n\n**Installation method:**\n\nRun \"install.sh\" after decompression.\n\n**Note:**\n\n1. If there is a warning that **process \"system\" does not respond**, please select **\"wait\"**.\n\n2. Known issue: The application is slow to open for the first time after booting up.\n\n3. The system kernel version is required >= **\"5.10.82-Release-OPENFANS+20211204-v8\"**. \n\n----\n\n## 4. Virtual Machine Instructions\n\nVirtual machine resource packages are typically published as compression packages, and the following commands are performed to install the support for the unzip pack:\n\n```\napt update ; apt install tar gzip zip unzip bzip2 xz-utils -y\n```\n\n### 4-1. Standard Virtual Machines PKG Instructions\n\nDefault user: root (remote permissions turned on), password: raspberry\n\nAfter unzipping the virtual machine resource package, change location and into the virtual machine's resource package directory then unzip the virtual disk image:\n\n```\nxz -d -k disk.qcow2.xz\n```\n\nYou will get a virtual disk image of **disk.qcow2**, and the system can be restored at any time with the commands above.\n\n**Run the virtual machine:**\n\n```\nsudo ./vm-run\n\n## This script command above will run the virtual machine in a background manner by default.\n```\n\nRun the virtual machine in the way the previous station:\n\nCopy the file **vm_run** and name as **vm_run2** , open the file **vm_run2** and delete the following 2 lines:\n\n```\n... ## omitting content\nnohup \\\n... ## omitting content\n   &\n... ## omitting content\n```\n\nThen, run **\"sudo ./vm_run2\"**.\n\n**Remote login:**\n\nPort 22 of the virtual machine has been mapped by default to the local port 2222, SSH access to the local machine's port 2222 directly.\n\nExample of the command:\n\n```\nssh -p 2222 root@local-ip-address\n```\n----\n### 4-2 BT-Panel Virtual Machine PKG Instructions\n\nIn order to take care of new users and respond to the voices of the people, we finally “integrated” the Pagoda for you, using the virtual machine, 32-bit super clean custom ARMHF virtual system optimized for the pagoda, even for virtual machines, The speed is also greatly stronger than the official backplane system (who has used and who will understand :) --).\n\nTo run the benchmark:\n\n![BT-Panel](./images/bt_mark.png)\n\nBy default, all software is installed. Version 5.9.X Relatively stable professional \"learning version\", you know, this is just only allowed to use for your testing!!\n\n**Why BT-Panel?**\n\n```\n1. The use of beginners is convenient;\n2. The voice of the masses is too high;\n3. By the way...\n```\n\n**Why not integrate directly in the 64-bit OS?**\n\n```\n1. Not everyone needs a default integration, too bloated;\n\n2. Pollute system;\n\n3. BT-Panel is extremely poorly compatible with ARM64!\n\n4. The BT-Panel is not just a simple installation. \nThe software that needs to be used in the ARM system almost all needs to be recompiled. \nThe compatibility is poor and it takes a long time. \nIt can pretend that you doubt life and pretend that you wanna cry.\n\n5. The problems of various strange pits encountered in our use;\n\n6. It is not that the BT-Panel is not good overall. \nAt least the compatibility on the ARM64 is a considerable problem. \nIt feels like the official has not done the test. \nAll the work just like do the testing for them by free.\n```\n\n**Instructions:**\n\nAs with the standard virtual machine, extract the compressed package, and then change location and into the virtual machine's directory to perform related operations.\n\n**installation:**\n\n```\nsudo ./install\n```\n\n**Start BT-Panel Virtual Machine:**\n\n```\n./bt_run\n```\n\n**Close the BT-Panel Virtual Machine:**\n\nTo ensure the data synchronization security of the virtual machine, please follow the steps below:\n\n```\nPlease ssh login to the virtual machine and execute the command \"init 0\" \nto shut down the virtual machine.\n\nAfter shutting down, you need to execute the \" ./bt_prog \" command in the \nBT-Panel virtual machine directory \nto check if the virtual machine is closed.\n\nIf there is no output, it means the virtual machine has been shut down normally.\n\nIf the virtual machine cannot be shut down gracefully, \nexecute the \" ./bt_prog kill \" command in the BT-Panel virtual machine directory.\n\nAlso remember to execute the \" ./bt_prog \" command again to check \nif the virtual machine is down.\n```\n\n**Automatic startup:**\n\n```\n## Enable boot auto start\n./install int\n\n## Cancel the boot automatically\n./install uint\n```\n\n**Default parameter value:**\n\n|Project|Content|\n|---|---|\n|Default Management Port|28888|\n|Default Management Address|http://IP-Address-of-your-Raspberry-Pi:28888/|\n|Default Web Management User and Password|openfans/openfans|\n|BT-Panel Virtual Machine SSH Port|2222|\n|BT-Panel virtual machine root default password|raspberry|\n\n**How to use ssh to connect to BT-Panel virtual machine?**\n\n```\nLocal connection: ssh -p 2222 root@localhost\nExternal connection: ssh -p 2222 root@IP-address-of-your-Raspberry-Pi\n```\n\n**NOTE:**\n\n```\nDo not modify the default management port of the BT-Panel Panel unless you know how to modify the \ninstall the deployment script.\n\nIf you need to enable site support for custom ports, edit the ports file to add your custom port, \nbut don't modify the other default ports in the ports file.\n```\n\n**To save and save everyone's time, all the functions of the BT-Panel are turned on by default.**\n\n**For better performance, we strongly recommend turning off or removing features you don't need.**\n\n----\n\n### 4-3 How To Expand The Size Of A Virtual Machine Disk\n\nFirst, make sure your virtual machine was shutdown or not running.\n\nThe virtual machine disk in this article uses **bt.qcow2.disk** as an example.\n\n#### 4-3.1. Disk expansion\n\n**View disk size**\n\nExcuting an order:\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\nGet the following information:\n\n```shell\nImage: bt.qcow2.disk\nFile format: qcow2\nVirtual size: 10G (10737418240 bytes) # Total disk size\nDisk size: 6.4 # used capacity\nCluster_size: 65536\nFormat specific information:\n    Compat: 1.1\n    Lazy refcounts: false\n    Refcount bits: 16\n    Corrupt: false\n```\n\n**Disk expansion**\n\nIn this case, our goal is to add 10G capacity to the virtual machine disk.\n\nExecute the following command:\n\n```shell\nqemu-img resize bt.qcow2.disk +10G\n```\n\nThen look at the disk size again\n\nExcuting an order:\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\nThe results are as follows:\n\n```shell\nImage: bt.qcow2.disk\nFile format: qcow2\nVirtual size: 20G (21474836480 bytes) # Capacity increase is successful, the total size is 20G\nDisk size: 6.4G\nCluster_size: 65536\nFormat specific information:\n    Compat: 1.1\n    Lazy refcounts: false\n    Refcount bits: 16\n    Corrupt: false\n```\n\n#### 4-3.2. Extended partition\n\n**Expanding increased capacity to system partition**\n\nFirst, start the virtual machine and login to the virtual machine.\n\n```shell\nssh -p 2222 root@localhost\n```\n\n**View disk size**\n\nExcuting an order:\n\n```shell\nfdisk -l /dev/sda\n```\n\nThe results are as follows:\n\n```shell\nDisk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors # has been added to 20G\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0xcd0e4df1\n\nDevice Boot Start End Sectors Size Id Type\n/dev/sda1 * 2048 20969471 20967424 10G 83 Linux # Partition capacity has not been expanded\n```\n\n**View partition size**\n\nExcuting an order:\n\n```shell\ndf -hT\n```\n\nThe results are as follows:\n\n```shell\nFilesystem Type Size Used Avail Use% Mounted on\nUdev devtmpfs 496M 0 496M 0% /dev\nTmpfs tmpfs 103M 1.5M 101M 2% /run\n/dev/sda1 btrfs 10G 4.7G 4.7G 50% / # Partition capacity has not been expanded\nTmpfs tmpfs 513M 4.0K 513M 1% /dev/shm\nTmpfs tmpfs 5.0M 0 5.0M 0% /run/lock\nTmpfs tmpfs 513M 0 513M 0% /sys/fs/cgroup\nTmpfs tmpfs 103M 0 103M 0% /run/user/0\n```\n\n**Installation** *parted* **Disk Management Tool**\n\n```shell\napt update ; apt install parted -y\n```\n\n**Extended partition**\n\nEnter the following command: **parted** and follow these steps:\n\n```shell\nparted\n```\n\nAt this point, you can see the disk information as follows\n\n```shell\nGNU Parted 3.2\nUsing /dev/sda # This is the disk we need to operate\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) print # Enter \"print\" to view the disk information of the current operation\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB # Total size has been increased to 20G\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber Start End Size Type File system Flags\n 1 1049kB 10.7GB 10.7GB primary btrfs boot \n# Here \"1\" is the disk partition number, and the partition capacity has not changed yet.\n```\n\nNext enter the following command **resizepart** :\n\n```shell\n(parted) resizepart \n# Enter the command \"resizepart\" for partition expansion\nPartition number? 1 \n# Enter the partition number to be expanded. Since our disk here has only one partition, enter \"1\".\nWarning: Partition /dev/sda1 is being used. Are you sure you want to continue?\nYes/No? yes # Confirm to continue, type \"yes\"\nEnd? [10.7GB]? 100% \n# Enter \"100%\" to extend all available capacity to the partition specified in the previous step.\n(parted) print \n# Enter \"print\" to view the disk information of the current operation\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber Start End Size Type File system Flags\n 1 1049kB 21.5GB 21.5GB primary btrfs boot \n# You can see that the increased disk capacity has been expanded successfully.\n\n(parted) quit # Enter \"quit\" to quit\nInformation: You may need to update /etc/fstab.\n```\n\n**Update Partition Table**\n\nExecute the following command\n\n```shell\npartprobe /dev/sda\npartprobe /dev/sda1\n```\n\n**Extended File System**\n\nOur virtual machine here uses the *btrfs* file system. The related *btrfs* file system expansion operation is as follows:\n\nExcuting an order\n\n```shell\nbtrfs filesystem resize max /\n```\n\nWill get the following tips\n\n```shell\nresize '/' of 'max'\n```\n\n**Remount the partition**\n\nThis article extends the root partition **\"/\"**, so next we remount **\"/\"** root partition\n\nExcuting an order:\n\n```shell\nmount -o remount,rw /\n```\n\n**Synchronous Data**\n\nExcuting an order:\n\n```shell\nsync\n```\n\n**Validation results**\n\nCheck partition size\n\ninput the command\n\n```shell\ndf -hT\n```\n\nThe results are as follows:\n\n```shell\nFilesystem Type Size Used Avail Use% Mounted on\nUdev devtmpfs 496M 0 496M 0% /dev\nTmpfs tmpfs 103M 1.5M 101M 2% /run\n/dev/sda1 btrfs 20G 4.7G 15G 25% / # partition has been successfully expanded\nTmpfs tmpfs 513M 4.0K 513M 1% /dev/shm\nTmpfs tmpfs 5.0M 0 5.0M 0% /run/lock\nTmpfs tmpfs 513M 0 513M 0% /sys/fs/cgroup\nTmpfs tmpfs 103M 0 103M 0% /run/user/0\n```\n\nRestart the virtual machine, log in again, and execute the command **df -hT** to determine the result\n\n----\n\n## 5. Update And Upgrade\n\n### 5-1 Upgrade System\n\nFor system updates, please use the tools or commands with the system, such as \"apt update; apt upgrade\"\n\n**Due to Deepin compatibility issues, do not perform any system upgrades on Deepin Desktop!!**\n\n### 5-2 Update Kernel And Firmware\n\nDownload the kernel and firmware update package, extract and go to the updated package directory, execute the following command:\n\n```\ncd ./upkg\nsudo sh ./sys_upgrade\n```\n\nAfter the completion, restart it.\n\n#### Note:\n\n**Version 2.0 does not currently support upgrading from any other version and requires a new installation.**\n\n### 5-3 Update Instructions\n\nClick **[here](./update.md)** to see the update instructions.\n\n### 5-4 Latest Current Version\n\nClick **[here](./versions.md)** to view the latest current version information.\n\n### 5-5 Rpi4 USB Boot Support (Upgrade eeprom FW)\n\nClick **[here](./FW/)** to download file for eeprom FW upgrade, will be support Rpi4 usb boot.\n\nAfter decompressing the files, please read the readme.txt file and follow the note steps to upgrade. (Note: You must upgrade the firmware on TF boot mode first)\n\n### 5-6 New features just for testing\n\n## NOTE: !!!!!! （Important）\n\n#### The following drivers are included and adapted to the latest MESA by default after the version \"2021-06-11-v2020-2.0-U6-Release (included)\" system, and no longer need to be installed separately.\n\n\n#### 5-6.1 Mesa Vulkan (v3dv) drivers include RPI4 VC4 and V3D for OpenGL H/W acceleration\n\nWe had upgraded the Mesa drivers [21.0.0] add Vulkan (v3dv) include RPI4 VC4 and V3D for OpenGL H/W acceleration.\n\n![pi4_vulkan_info](./images/pi4_vulkan_info.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_1.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_2.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_3.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_4.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_5.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_6.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_7.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_8.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_9.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_10.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_11.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_12.png)\n\n**Where and how to upgrade ?**\n\nUse root user permission:\n\n**Important:** For this testing the kernel version required **>= \"5.10.25-Release-OPENFANS+20210325-v8\"**\n\n```\n0. First, run command:\n   apt update; apt install dpkg-dev -y\n\n1. Download the compressed package and decompress the file to the root (\"/\") directory.\n\n2. change the decompressd file directory user permission to \"_apt\", run command:\n   \"chown -R _apt [The decompressd file directory path]\"\n\n3. change path to the the decompressd file directory path, into the path, run command:\n   \"sh ./install.sh\"\n\n4. Then reboot the system, all will be done.\n\n```\n\n**PS:**\n\nThe files path to download.\n\n```\nFor Thunder Share: \"/raspberry-pi-images/2021-new/Testing/Graphic_Libs/v2/debs_repo.zip\"\n\nFor Baidu network disk：\"/Debian-Pi-Aarch64-2.0-Release/Testing/Graphic_Libs/v2/debs_repo.zip\"\n\nFor MEGA：\"/Debian-Pi-Aarch64/2021/extra/Graphic_Libs_Trsting/debs_repo.zip\"\n```\n\n----\n\n## 6. Download Links\n\n- Thunder Share: [Click to download](https://pan.xunlei.com/s/VMQ7-_8i3FJgwahadCfHzyetA1) *sharePassword:* **f5b3**\n\n- Baidu network disk: [Click to download](https://pan.baidu.com/s/1VPWngCO1aEPJXFMLiODmNg) *sharePassword:* **xbwy**\n\n- MEGA: [Click to download](https://mega.nz/folder/coVQAaZR#ifOeikkhJpGYw8B7vvlDOg)\n\n----\n\n## 7. Other Instructions\n\n### 7-1 Donation\n\n#### Thanks for your donation! We'll get the greatest power from your encourage!\n\nYou can choose to scan Alipay for direct sponsorship to support us, and we guarantee that all donations will be used for project development and equipment purchase.\n\n![jz](./images/jz.png)\n\n### 7-2 Contact Info.\n\nRaspberry Pi Fan Base 64-bit OS special official community **QQ group:** *703626518(Full)* , **976102807(new)**\n\nRaspberry Pi Fan Base official website: **[www.pifan.org](http://www.pifan.org)**\n\nTechnology support documents official website: **[blog.pifan.org](http://blog.pifan.org)**\n\nRaspberry Pi Fan Base official forum: **[bbs.pifan.org](http://bbs.pifan.org)**\n\nOPENFANS official website: **[www.openfans.org](http://www.openfans.org)**\n\n### 7-3 Copyright\n\n```\n1. The all above system is built by the OPENFANS open source community and is exclusively \ndistributed and provided technical support by the Raspberry Pi Fan base community;\n\n2. Any words or image reprint must indicate the source of the system (software); \nyou can make any modifications to the software or system, but you must keep the source and readme;\n\nStrictly used for any commercial purpose, if you need to use it commercially, \nplease contact and obtain permission from OPENFANS open source community and \nRaspberry Pi Fan base community;\n\n3. The above system and the ownership of the software belong to the corresponding software \nauthor and the license agreement to comply with the relevant software package;\n\n4. Failure to comply with the appeal rules, the OPENFANS open source community and the \nRaspberry Pi Fan base community have the right to pursue their respective responsibilities \nand order to stop all infringements;\n\n5. OPENFANS open source community and Raspberry Pi Fan base community have the final \ninterpretation of the above content.\n```\n\n## 8. Join US!\n\nThe Raspberry Pi Fan base community is recruiting **volunteers** to join the community now. The basic requirements are as follows:\n\n- **Hardware development and design staff**\n\n```\n1. Recognize the Raspberry Pi Fan base community culture and have great enthusiasm \nfor the Raspberry Pi;\n2. Responsible and responsible for the task of completing community arrangements on \ntime and in quality;\n3. Have the design ability of 3D printing modeling or circuit DSP;\n4. Have practical hardware design experience.\n```\n\n- **Software and system developer**\n\n```\n1. Recognize the Raspberry Pi Fan base community culture and have great enthusiasm \nfor the Raspberry Pi;\n2. Responsible and responsible for the task of completing community arrangements on \ntime and in quality;\n3. Familiar with system build compilation or software development;\n4. We like the development language, including but not limited to: JAVA, Python, \nGo, NodeJS, C, C++ ...;\n5. Require software compilation and Deb packaging;\n6. Have practical development experience.\n```\n\n**Another way, organizations, institutions and business units are welcome to discuss cooperation!!!**\n\nPlease contact us with any intent: **[admin@openfans.org](mailto:admin@openfans.org)**\n\nPlease write down the details and intentions and at least leave your **mobile phone number**, thank you for your cooperation.\n\n----\n\n## 9. Thanks\n\nOSCHINA : [Support fot git repo](https://gitee.com/)\n\nRaspbian: Official system (automatic expansion script part reference)\n\nUMRnInside :Project [UMRnInside/RPi-arm64](https://github.com/UMRnInside/RPi-arm64)(refer to the automatic expansion script section)\n\nAndreiw: Project [andreiw/RaspberryPiPkg](https://github.com/andreiw/RaspberryPiPkg)(EFI firmware referenced in version 1.0)\n\nSakaki(1) : [link](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=244478) (kernel boot problem reference)\n\nSakaki(2) : A H264-V4L2-M2M hardware acceleration command line video player.\n\nMargetts99 : [link](http://bbs.pifan.org/?thread-132.htm) (WPS integration recommendations and sharing issues report)\n\nWindows Arm On Qemu: *see [link1](https://github.com/virtio-win/kvm-guest-drivers-windows/issues/177#issuecomment-468149012) & [link2](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=248345&sid=d4dd0681937f13e9c0cb4f04e5b54979)*\n\n**And all other friends who have privately sponsored and helped us!**\n"
        },
        {
          "name": "README_ORGI.md",
          "type": "blob",
          "size": 46.912109375,
          "content": "![openfans](/images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](/images/amatfan.png)\n\n# ★ 树莓派 4B Debian Pi Aarch 64位系统 2.0 ★\n\n\n# ★★★★★★ 2019.07.06 - 全球首发 ！！★★★★★★\n\n### PS：Pi 4B [4G版] 4G内存问题我们已修复、显卡3D硬件加速已全线支持 (2.0 RC2以后的版本)，\n\n### 完美适配所有64位硬件版本，现已更新下载，欢迎使用！！！\n\n#### Pi 3B/3B+/3A+/4B 最新 *预览* 版本：2019.09.10 2.0 RC5\n\n#### 2.0 内核固件 - 更新： *预览* 版本：upkg-2019-09-10-v2019-2.0-RC5\n\n#### Pi 3B/3B+/3A+ 最新 *稳定* 版本：2019.09.05 1.0 U11\n\n# [打赏](donation/README.md)\n![zfb](./images/jz.png)\n\n----\n\n## Debian Pi Aarch64\n\n### ● 基础系统\n### ● 基础系统 - WebUI加强版\n### ● Xfce桌面 ( ★★ 全新界面！！★★ )\n### ● 深度桌面 \n\n## [打赏](donation/README.md)\n\n**[OPENFANS开源社区](http://www.openfans.org)&nbsp;&nbsp; && &nbsp;&nbsp;[树莓派爱好者基地](http://www.pifan.org/)&nbsp;&nbsp;荣誉出品**\n\n###  再次重申！我们是团队，企业级的专业团队出品的系统，不要拿个人作品来和我们比较\n\n----\n\n**树莓派64位系统** 1.0/2.0 **：** **Debian Aarch64 基础系统 (WebUI加强版)** + **深度桌面** + **Xfce桌面**\n\n![macos](./images/macos1.png)\n\n![loginUI](./images/ui1.png)\n\n![WebUI](./images/ui2.png)\n\n![Docker](./images/ui3.png)\n\n![UI SHELL](./images/uishell.png)\n\n![CaaS](./images/caas.png)\n\n![CaaS Cluster](./images/caas2.png)\n\n![macos](./images/macos2.png)\n\n![Deepin桌面1](./images/deepin_desktop_min.png)\n\n![Xfce桌面1](./images/xface_desktop.png)\n\n![pi4桌面2](./images/p4-2.png)\n\n![pi4桌面1](./images/p4-1.png)\n\n![pi4VMM](./images/vmm.png)\n\n![pi4Android1](./images/apk0.png)\n\n![pi4Android2](./images/apk1.png)\n\n## 系统下载\n\n- **v2.0 预览版**\n\n#### For: **Pi 4B**、3B、3B+、3A+ （支持树莓派全系64位CPU）  - 基于 [Debian Buster]\n\n● **基础** *Aarch64(ARM64)* 系统镜像(无桌面WebUI增强版) \n\n● **基础** *Aarch64(ARM64)* 系统镜像(无桌面) \n\n● **Deepin** *Aarch64(ARM64)* 深度桌面系统镜像\n\n● **Xfce** *Aarch64(ARM64)* 桌面系统镜像\n\n以上**2.0** 所有系统 及 内核固件更新 **->** 点击 **[此处](https://pan.baidu.com/s/1FKhVQJVW454m8qfrhpmjeQ )** ( 提取码：kayu ) 前往下载\n\n## [打赏](donation/README.md)\n\n**说明：**\n\n2.0系统无线设置和1.0不太一样，请点击此处 **[网络预配置](./README.md#%E7%BD%91%E7%BB%9C%E9%A2%84%E9%85%8D%E7%BD%AE)** 查看设置方法\n\n- **v1.0 稳定版**\n\n#### For: Pi 3B/3B+/3A+  - 基于 [Debian Stretch]\n\n● **基础** *Aarch64(ARM64)* 系统镜像(无桌面WebUI增强版) 点击 **[此处](https://pan.baidu.com/s/1gC7cdekQFCGVfQaALfX2XQ)**  ( 提取码：bc96 ) 前往下载\n\n● **基础** *Aarch64(ARM64)* 系统镜像(无桌面) 点击 **[此处](https://pan.baidu.com/s/1z6NLcbdPzijEIikovpST7Q)** 前往下载\n\n● **Deepin** *Aarch64(ARM64)* 深度桌面系统镜像 点击 **[此处](./docs/deepin.md)** 前往下载 \n\n● **Xfce** *Aarch64(ARM64)* 桌面系统镜像 点击 **[此处](./docs/xfce.md)** 前往下载 \n\n# [打赏](donation/README.md)\n\n### FAQ & 常见问题处理\n\n### ★★★★★ Deepin系统 - 特别说明 ★★★★★\n\n**由于 Deepin系统 和上游仓库存在一定的兼容性问题（deepin本身的问题），除非你清楚自己需要做什么，否则强烈建议不要使用以下的任何一条命令进行任何的升级操作！！！**\n\n- 所有的**Deepin**版本系统都需要注意，包括**1.0**和**2.0**的**所有Deepin版本**\n\n- 其他的软件正常安装和使用没有问题\n\n```\napt upgrade\napt-get upgrade\napt dist-upgrade\napt-get dist-upgrade\n\n# 或者其他任何会使得系统进行升级的操作\n\n```\n\n#### 为了更好的了解和使用系统，对于遇见的问题请优先查看一下链接，以免耽误大家时间，谢谢合作！^-^\n\n----\n\n- **时间同步** \n\n系统默认没有启用时间同步\"**ntp服务**\", 若要启用\"**时间同步**\"服务, 请执行以下命令：\n\n```\nsystemctl enable ntp.service && systemctl start ntp.service \n```\n\n- **更多配置情况请查看** [配置及说明](./README.md#%E9%85%8D%E7%BD%AE%E5%8F%8A%E8%AF%B4%E6%98%8E)\n\n- **更多详细FAQ请查看** [FAQ & 常见问题处理](./README.md#faq-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86)\n\n## [打赏](donation/README.md)\n\n----\n\n# 系统介绍\n\n这是为树莓派（Raspberry Pi）**3B/3B+/3A+/4B** 所全新构建的：\n\n**Debian 9 ARM64(Aarch64) 64位系统镜像**\n\n**2.0 基于 [Debian Buster]**\n\n**1.0 基于 [Debian Stretch]**\n\n别问为什么树莓派要用64位系统，64位和32位有什么差别 ？因为树莓派CPU支持64位，但是官方没有，其他的请自行补脑...\n\n## 系统环境\n\n### **●  基础系统**\n\n标准**基础系统镜像**默认没有安装 X-WINDOWS 的桌面环境，但是你可以随意自行安装你喜欢的任何桌面环境\n\n点击 **[此处](./README.md#%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2)** 查看**安装桌面环境**的示例\n\n### **●  基础系统 Plus++ 版 (WebUI加强版)**\n\n在基础系统之上，加入可视化的WebUI管理界面，默认开启容器支持，真正开箱即用\n\n浏览器使用 **https://你树莓派的IP地址:9090** 访问管理界面\n\n管理界面请使用系统默认账户 **pi** 登录\n\n### **●  深度(Deepin)桌面**\n\n现在，我们基于自己的基础系统镜像，移植了完整的 **【 深度Deepin 15.5 专业版 】** 桌面，目前已发布，并提供下载，这是目前 **第一个** 基于完整的Debian Aarch64架构而构建的适配于树莓派B/3B+/3A的64位 **深度ARM64镜像** ！！\n\n有关 **【 深度Deepin 15.5 ARM64位 专业版 】** 的详细介绍，请前往 **[此处](./docs/deepin.md)** 查看\n\n### **●  Xfce桌面**\n\n同时，我们也发布了 **【 定制优化的 Xfce桌面 】** 的系统镜像，请前往 **[此处](./docs/xfce.md)** 查看相关说明\n\n## [打赏](donation/README.md)\n\n---\n\n## 系统说明\n\n本文所发布的所有版本是已在企业生产环境下使用并验证的正式版本，系统经过严格测试，完全兼容树莓派 **3B/3B+/3A+/4B），原生的有线、无线网卡均可正常使用，所有系统软件包数量几乎可以媲美X86的版本，系统基于原生 **Debian 64位** 从头构建（非任何移植版和官改版本），保证原滋原味\n\n由于和原生树莓派没有关系，所以没有树莓派的相关专有命令（如 **raspi-config** ，**rpi-update** 等 ），请自行修改配置文件（ **/boot/config.txt** ）\n\n树莓派天生和Debian的系统兼容性最好（这离不开Raspbian的功劳，因为Raspbian也是基于Debian构建的，所以树莓派在Debian系下的测试是最完善最充分的，再加上本身Debian系统的强大和稳定，大名鼎鼎的Ubuntu就是基于Debian系最出名和成功的一个发行版），加之个人精力有限，之前所发布的Ubuntu、Centos等系统将不再更新，以后只会以本次发布的系统镜像为基线更新，特此说明\n\n本次系统**完全不同**于之前我们所发布的所有系统(同样也包括之前的64位的Debian )，此次我们**全部从头全新构建**在我们的实验室新构建了全新的自动编译和打包、测试系统，同样我们也对系统重新定义了打包流程和调整了所有的相关配置，对内核进行了大量的修改、调整优化和BUG修复，加入了很多新的功能和特性，特别是加入了**KVM虚拟化**的支持以及**重点加强**了对**Docker**的各项特性支持和优化\n\n本次发布的镜像根据不同的文件系统有3个版本，分别为：***Ext4、BtrFS、F2FS***，老铁们可以根据自己的喜好和场景选择不同的版本进行下载和使用\n\n- **考虑到系统的健壮性和稳定，我们推荐使用 Ext4 ！**\n\n- **桌面环境仅提供 Ext4 格式的镜像 ！**\n\n- **无桌面加强版环境目前仅提供 Ext4 格式的镜像 ！**\n\n## [打赏](donation/README.md)\n\n----\n\n# 64位 2.0新版系统\n\n## 发布说明 **（全球首发！！）**\n\n- 2019年6月20日，树莓派基金会发布了全新的第四代树莓派单板机**4B**，我们在第一时间托人从树莓派官方英国剑桥全球专卖店拿到了4代4G的单板机\n\n- 2019年7月6日，历时半个月的努力，OPENFANS和树莓派爱好者基地联合发布了新的Debian-Pi-Aarch64 2.0系统\n\n- 这是**全球**第一个发行的支持**树莓派4B**的**64位**系统\n\n- 秉承我们**OPENFANS和树莓派爱好者**基地联合发布的**Debian-Pi-Aarch64系统**一直以来的优良传统！\n\n- 系统全面兼容树莓派全线64位CPU的单板机：3B、3B+、3A+、**4B**，并仍然继承1.0稳定版的全部特性\n\n- 系统同频官方基线【debian buster】并已更新至最新版本\n\n- 内核同频上游【长期支持版本】最新版\n\n- 2019年7月24日，Beta2 版本发布\n\n- 2019年08月15日，RC1 版本发布，支持PI4 4G全内存使用\n\n- 2019年08月16日，RC2 版本发布，全系3D加速支持\n\n- 2019年08月25日，RC2 内核及固件更新：upkg-2019-08-25-v2019-2.0-RC2-U2\n\n- 2019年08月28日，RC2 内核及固件更新：upkg-2019-08-28-v2019-2.0-RC2-U3\n\n- 2019年08月31日，RC2 内核及固件更新：upkg-2019-08-31-v2019-2.0-RC2-U4\n\n- 2019年09月02日，RC2 内核及固件更新：upkg-2019-09-02-v2019-2.0-RC2-U5\n\n- 2019年09月03日，RC3 版本发布，内核使用全新优化重构的编译链工具生成，全面调整无线连接，使其更加稳定快速\n\n- 2019年09月06日，RC4 版本发布，再度高强度优化持续集成编译工具链，全新的XFCE界面\n\n- 2019年09月10日，RC5 版本发布，内核及固件更新：upkg-2019-09-10-v2019-2.0-RC5\n\n## [打赏](donation/README.md)\n\n## 2.0 预览版系统【 已知问题 】说明\n\n(max: 2019.08.15 update)\n\n- **内存问题**\n\n目前内存问题已全部修复，4B所有版本无需修改自动适配识别。\n\n- **无线问题（不影响使用）**\n\n**已确定3B(非3B+)在2.0新版内核下：**\n\n由于上游驱动所致，3B型号的单板机在连接5G模式的Wifi时存在不稳定现在，请连接使用2.4G信号无线，或等待上游及我们更新。\n\n- **GPU 3D加速问题**\n\n**所有系统已全线支持 ！！**\n\n## [打赏](donation/README.md)\n\n----\n\n#### ReMax PS：\n\n无线、蓝牙均正常，请放心使用\n\n----\n\n## 更新（2.0版本）\n\n#### 最新 *预览* 2.0 版本 | 支持：Pi 3B/3B+/3A+/4B\n\n- **基础系统（增强版）** 现已更新至 **2019-09-10-v2019-2.0-RC5-plus++**\n\n- **基础系统** 现已更新至 **2019-09-10-v2019-2.0-RC5**\n\n- **Deepin深度桌面** *Aarch64(ARM64)* 现已更新至 **2019-09-10-v2019-2.0-RC5**\n\n- **Xfce** *Aarch64(ARM64)* 现已更新至 **2019-09-10-v2019-2.0-RC5**\n\n- **2.0 内核及固件更新** 现已更新至 **2019-09-10-v2019-2.0-RC5**\n\n#### 有关更多更新相关的说明，请点击 [此处](./update.md) 查看\n\n**PS：** 由于架构变动较大，不支持系统从1.0版本升级到2.0。\n\n## [打赏](donation/README.md)\n\n----\n\n# 更新 (仅限1.0稳定版本)\n\n#### 如何升级和更新系统？ 请点击 [此处](./upgrade.md) 查看\n\n- 请点击 [此处](https://pan.baidu.com/s/1gC7cdekQFCGVfQaALfX2XQ) ( 提取码：bc96 ) 下载最新 **基础系统（增强版）** 镜像\n\n- 请点击 [此处](https://pan.baidu.com/s/1z6NLcbdPzijEIikovpST7Q) 下载最新基础系统镜像\n\n- 请点击 [此处](./upgrade.md)  查看：如何下载更新文件并更新至最新版本\n\n- 请点击 [此处](./qemu-kvm.md) 查看：QEMU虚拟机二进制软件包及虚拟机镜像下载地址和教程\n\n## [打赏](donation/README.md)\n\n#### **PS：** 由于架构变动较大，不支持系统从1.0版本升级到2.0。\n\n#### 最新 *稳定* 1.0 版本 | 支持：Pi 3B/3B+/3A+\n\n- **基础系统（增强版）** 现已更新至 **2019-09-05-v2019-1.0-U11-Plus++**\n\n- **基础系统** 现已更新至 **2019-09-05-v2019-1.0-U11**\n\n- **Deepin** *Aarch64(ARM64)* 现已更新至 **2019-09-05-v2019-1.0-U11**\n\n- **Xfce** *Aarch64(ARM64)* 现已更新至 **2019-09-05-v2019-1.0-U11**\n\n- **内核、固件驱动** 已更新至 **2019-07-12-v2019-1.0-U10**\n\n## 更新说明\n\n#### 有关更多更新相关的说明，请点击 [此处](./update.md) 查看\n\n**PS：** 由于架构变动较大，不支持系统从1.0版本升级到2.0。\n\n## [打赏](donation/README.md)\n\n----\n\n# 关键特征\n\n## 系统特性\n\n### 全平台可视化管理操作\n\n既**基础系统 U9 Plus++ 加强版**发布之后(以及2.0版本)，我们在无桌面版的系统上提供了Web管理和操作的支持，至此，全系统平台均实现了可视化的操作管理，不管是标准的桌面图形，还是无桌面的系统（ **Web可视化管理方式** ），**Debian Pi Aarch64** 正式全面开启可视化时代。\n\n* **Web管理支持**\n\n      1.  新增基础镜像U9加强版\n      2.  全面开启Web管理时代，省去终端工具的麻烦，Anytime,Anywhere, 直接使用浏览器管理\n      3.  默认开启容器服务，开箱即用\n      4.  集成WEB界面的全方位监控\n      5.  支持WEB界面查看系统状况、硬件信息、情况等信息\n      6.  支持WEB界面设置主机名\n      7.  支持WEB界面设置主机域\n      8.  支持WEB界面设置主机时间、NTP服务器，更新方式\n      9.  支持WEB界面关机、重启\n      10. 支持WEB界面系统日志管理\n      11. 支持WEB界面系统存储及相关外设管理，在线分区、挂载设备等功能\n      12. 支持WEB界面网络管理\n      13. 支持WEB界面系统账户管理\n      14. 支持WEB界面系统服务管理\n      15. 支持WEB界面系统更新管理\n      16. WEB界面集成Shell终端，可以在网页上直接进行终端相关操作\n      17. 支持跨节点和统一管理：一个界面管理多台设备，大幅度提升管理和工作效率\n      18. WEB管理通信使用SSL证书加密，保证会话数据的安全性\n\n* 浏览器使用 **https://你树莓派的IP地址:9090** 访问管理界面\n\n* 管理界面请使用系统默认账户 **pi** 登录\n\n### 软件支持\n\n* **QEMU-KVM 虚拟机**\n\n这是原生Aarch64架构的QEMU虚拟机，支持KVM硬件加速\n\n我们重新编译了KVM的二进制软件包，解决了在KVM硬件加速环境下 **qemu-system-aarch64** 的诸多BUG：\n\n开启KVM硬件加速后系统默认版本虚拟机无法运行，无法安装系统，等等...\n\n现已提供QEMU虚拟机二进制软件包下载，并提供了默认的*Debian Aarch64*虚拟机镜像供大家使用\n\n请点击 [此处](./qemu-kvm.md) 查看：QEMU虚拟机二进制软件包及虚拟机镜像下载地址和教程\n\n### 文件系统\n\n本次发布的镜像根据不同的文件系统有3个版本，分别为：***Ext4、BtrFS、F2FS*** ，老铁们可以根据自己的喜好和场景选择不同的版本进行下载和使用\n\n**关于 Ext4、BtrFS 和 F2FS**\n\n* **Ext4**\n\n主流Linux文件系统，经过多年的优化和使用是目前使用**最广泛**的Linux文件系统之一，在大量的企业生产环境中选用，非常的成熟和稳定，支持在线热扩容\n\n* **BtrFS**\n\n新兴的写时复制文件系统，支持更好的数据校验和快照功能，能提高文件系统的时间/空间性能，包括延迟分配，小文件的存储优化，目录索引等，支持在线热扩容\n\n* **F2FS**\n\n专门为 Flash Transition Layer 的 NAND 闪存开发的文件系统，在闪存随机读写性能上有较大提升，对小文件读取也有一定的优化，不支持在线扩容\n\n**考虑到系统的健壮性和稳定，我们推荐使用 Ext4 ！**\n\n### Docker\n\n大名鼎鼎的Docker这里就不做过多介绍了，本次我们重新编译内核，加入了对Dcoker全特性的各项支持，这可能是目前在 **树莓派Aarch64位系统架构下对 Docker 特性支持最完善的版本** ，其他的绝大多数版本都还是32位系统配上32位docker，原生的64位系统内核缺少了很多对Docker特性的内核支持\n\n就连大名鼎鼎的**32位**树莓派Docker系统 **hypriot** 最新版也不能完整支持 Dcoker Swarm\n\n由于 **Hypriot** 不支持“ **bridge vlan/vxlan netfiler** ”, 你将得到以下错误信息:\n\n```shell\nreexec to set bridge default vlan fialed exit status 1\n```\n\n这将导致不能完全正常使用**Dcoker Swarm**集群，网络缺少相关特性支持，会存在一些功能缺失的问题\n\n你可以通过 **systemctl status containerd** 和 **systemctl status docker** 以及查看日志的方式在原生的64位ARM系统上发现不少错误和警告信息，拒不完全统计，原生的系统内核至少包括以下特性的缺失：\n\n     1. cgroup memory limit\n     2. cgroup swap limit\n     3. cgroup rt period\n     4. cgroup rt runtime\n     5. cgroup pid support\n     6. cgroup memory sysfs\n     7. cgroup rdma\n     8. cgroup perf\n     9. cgroup bridge vlan/vxlan\n    10. cgroup netfiler\n    11. cgroup net prio\n    12. cgroup cfs bandwidth limit\n    13. bridge vlan ilter\n    14. ipvs\n    15. ipvs ipv6\n    16. memory sysfs\n    17. kernel KSM\n    18. ...\n\n考虑到通用性，我们的系统默认没有启用Docker服务，如需要启动Docker服务，请执行以下命令：\n\n```shell\nsystemctl enable containerd\nsystemctl enable docker\nsystemctl start containerd\nsystemctl start docker\n```\n\n执行以下命令查看服务状态：\n\n```shell\nsystemctl status containerd\nsystemctl status docker\n```\n\n - Docker Compose\n\nDocker官方没有提供基于arm的**docker-compose**可运行二进制程序，因此我们重新编译并提供了可运行的aarch64位二进制程序\n\n默认没有加入到系统镜像中，你可以按照以下步骤下载并安装：\n\n      1. 前往下载地址下载最新版的 docker-compose aarch64 二进制文件\n      2. 解压下载得到的文件\n      3. 将下载的文件重命名为 docker-compose\n      4. 然后将 docker-compose 文件复制到系统的 /usr/bin/ 目录下\n      5. 最后给予文件执行权限即可，执行命令\n      6. chmod +x /usr/bin/docker-compose\n\ndocker-compose aarch64 二进制文件的下载地址：[点击前往下载](./docker-compose-aarch64/)\n\n目前最新版本：v1.24.0\n\n- Docker Machine\n\nDocker官方没有提供基于arm64的**docker-machine**可运行二进制程序，因此我们重新编译并提供了可运行的aarch64位二进制程序\n\n默认没有加入到系统镜像中，你可以按照以下步骤下载并安装：\n\n      1. 前往下载地址下载最新版的 docker-machine aarch64 二进制文件\n      2. 解压下载得到的文件\n      3. 将下载的文件重命名为 docker-machine\n      4. 然后将 docker-machine 文件复制到系统的 /usr/bin/ 目录下\n      5. 最后给予文件执行权限即可，执行命令\n      6. chmod +x /usr/bin/docker-machine\n\ndocker-machine aarch64 二进制文件的下载地址：[点击前往下载](./docker-machine-aarch64/)\n\n目前最新版本：v0.16.1\n\n### AUFS\n\n* 什么是AUFS文件系统 ？\n\nAUFS的全称是 advanced multi-layered unification filesystem ，主要功能是把多个文件夹的内容合并到一起，提供一个统一的视图，主要用于各个Linux发行版的livecd中，以及docker里面用来组织镜像\n\nAUFS曾是Docker默认的首选存储驱动，它非常的稳定、有很多真实场景的部署、很强的社区支持，它有以下几个主要优点：\n \n1. 极短的容器启动时间\n\n2. 有效的存储利用率\n\n3. 有效的内存利用率\n\n4. 但由于它没有包含在Linux内核主线中，所有很多Linux发行版并不支持AUFS\n\n* 最新的Docker默认使用的是更快最新的OverlayFS文件系统 ，**本系统保持此官方设置的默认值**\n\n* 我是否需要使用AUFS ？\n\n由于Docker的镜像文件使用的文件系统是分成多层存储的，OverlayFS只支持2层，使用同样的镜像层时会复制多个副本，而且占用更多的空间和I/O，而对于AUFS则不一样，它同样提供使用多层存储的功能并共享数据，Docker使用AUFS的 CoW（Copy-on-Write）写时复制技术来实现镜像共享和最小化磁盘空间的使用\n\n对于树莓派这样存储空间较小的设备而言，使用AUFS文件系统能更好的利用我们有限的存储空间资源并降低I/O消耗\n\n**为了用户能够根据自己的情况自由的选择和使用OverlayFS还是AUFS，我们在内核中加入了对AUFS模块的支持**\n\n由于AUFS并不在原生的Linux内核支持中，所以我们通过AUFS的PATH，为主线4.14的内核加入了AUFS的内核模块代码并重新编译，现在系统启动会自动加载AUFS模块，无需人工干预，即可直接使用\n\n### Swap\n\n本次新版系统默认增加了对Swap交换缓存的支持，以缓解系统内存不足所造成的死机问题，大大提升了可执行大容量内存需求应用程序的支持和效率，**用户无需手动创建系统Swap，我们的系统在安装完成后将自动完成并初始化Swap**，Swap文件或分区的位置可以通过查看系统挂载配置文件 **/etc/fstab** 来调整\n\n* Ext4、F2FS 版本系统使用Swap文件方式，便于用户后期根据实际需求调整大小，默认大小为1G\n\n* BtrFS 版本系统由于BtrFS文件系统不支持使用Swap文件，而使用的是Swap分区方式，默认大小为1G，不支持修改默认Swap分区大小\n\n### zSWAP\n\n本次新版系统内核默认已加入了 **zSWAP** 虚拟内存压缩功能，可为将要交换的页面提供压缩回写缓存，默认占用物理内存上限为系统总内存的 **25%**\n\n* **zSWAP的好处**\n\n\n1. 当内存页将要交换出去时，zSWAP不将其移动到交换设备，而是对其执行压缩，然后存储到系统RAM内动态分配的内存池中，回写到实际交换设备的动作则会延迟，甚至能完全避免，从而显著减少Linux系统用于交换的I/O。对于树莓派这样依托于TF卡的设备，本来I/O就不是很高，减少用于交换的I/O的操作就意味着提高系统性能，把I/O用在系统应用程序等更需要的其他调度上去\n\n2. 在使用Swap文件/分区的场景下，由于减少了对Swap文件/分区的I/O操作，可以提升TF的使用寿命\n\n3. zSWAP并不虚拟一个块设备，而是hook到普通的Swap代码里，在实际发生写入到磁盘/从磁盘读取的操作前，先利用自己管理的内存进行数据的换出/换入，内存不够用以后再使用传统的Swap文件/分区。所以zSWAP适用于本身已经有交换分区的系统，以及树莓派这样本身内存不大的硬件设备\n\n* **为什么不使用zRAM**\n\nzSWAP同时使用内存和交换分区，并根据实际情况自动调整所占内存的大小，所缓存的数据在系统内存不够用时会自动存入到Swap文件/分区中，大大提高了系统swap交换的效率，更充分的利用了内存空间资源又避免了系统出现内存不够的情况，而zRam完全使用内存来进行操作和存储数据，完全占用内存，一般用在大内存的场景，这对于内存很小的树莓派来说就不合适了\n\n* **zSWAP在本系统中使用的内存分配器和数据压缩算法**\n\n**内存分配器zpool框架： smalloc、zbud、z3fold**\n      \n1. 现实表明，zsmalloc虽然压缩率高，但是算法复杂，还需要额外的线程负责内存整理，耗费更多的cpu时间\n\n2. 而zbud实现简单，以内存page为单位的存储又不会产生内存碎片，但是压缩率低，最高只有2倍，不满足小内存系统的实际需求\n\n3. 因此，索尼开发了z3fold内存分配器，和zbud的实现完全一致，只是每个page可以存储3个compressed page，**最高压缩率有 *3* 倍**，逼近zsmalloc的4倍，该技术在xperia xzp的中使用，使4GB的手机获得超过4GB内存的体验\n      \n我们在系统中选用了z3fold算法，在系统 /boot/cmdline.txt 中可以看到配置：\n\n```shell\nzswap.enabled=1 zswap.zpool=z3fold zswap.compressor=lz4 zswap.max_pool_percent=25\n```\n\n**压缩算法**\n\nLinux有很多压缩算法：lz,lzo,xz,gzip,lzma... \n\n我们这里采用了拥有极高压缩速度和较高压缩率的lz4 ，lz4相对于其他压缩算法而言，压缩率不是最高的，但速度确是最快的，在已采用 z3fold 算法的情况下，结合树莓派本身的性能特点和实际的测试，在拥有不错的压缩率的情况下，速度对于树莓派来说才是最重要的（考虑到本身CPU性能开销和内存大小的情况）\n\n\n### KVM 虚拟化支持\n\n我们在编译内核时加入了对KVM虚拟机的支持，直接支持全虚拟化的方式运行，添加了支持原生的KVM虚拟硬件内核模块的支持，相关的主要内核模块如下：\n\n    1.  virtio //标准虚拟磁盘\n    2.  virtio-scsi //虚拟scsi磁盘\n    3.  virtio-blk //磁盘直通\n    4.  virtio-blk-scsi //scsi模式磁盘直通\n    5.  virtio-net //虚拟网卡\n    6.  virtio-balloon //内存气泡\n    7.  virtio-hw-random //虚拟随机数硬件\n    8.  virtio-console //虚拟终端\n    9.  virtio-input //虚拟输入设备\n    10. virtio-crypto-device //虚拟加密设备\n    12. virtio-drm-gpu //虚拟显卡\n    13. virtio-9p //目录共享\n    14. vfio //设备直通\n    15. vhost //主机数据交互\n    16. vhost-net  //主机网络数据交互\n    ...\n    \n为了更好的优化虚拟机的内存使用效率，我们所有系统的内核默认都支持 **KSM**\n\n>\n>什么是KSM ？ \n>\n>KSM的原理，是多个进程中，Linux将内核相似的内存页合并成一个内存页 这个特性，被KVM用来减少多个相似的虚拟机的内存占用，提高内存的使用效率由于内存是共享的 所以多个虚拟机使用的内存减少了，这个特性，对于虚拟机使用相同镜像和操作系统时，效果更加明显\n\n考虑到系统的通用性，以上模块没有自动加载，需要老铁们自行手动配置加载，具体使用配置请查看KVM相关手册\n\n### USB启动\n\n- 本系统支持直接从USB设备启动，不需要使用TF卡，直接将系统镜像烧录至USB设备即可(U盘、移动硬盘经测试均可)\n\n- 目前仅3B+无需任何修改，可以直接使用，其他型号设备由于芯片固件的原因不支持直接启动，需要做相关设置后才可以支持直接使用USB启动(设置后不再需要TF卡)，请点击[树莓派官方网站](https://www.raspberrypi.org/documentation/hardware/raspberrypi/bootmodes/host.md)查看相关的设置方法\n\n### UEFI启动\n\n新系统抛弃了传统树莓派的启动方式，使用当下PC流行的EFI方式启动系统，其特性如下：\n\n    1. 纯64位EFI方式引导\n    2. 可配置的UEFI BIOS\n    3. 虚拟SMBIOS硬件支持（传统树莓派的系统模式下根本就没这玩意儿）\n    4. 启动时可进入BIOS进行设置\n    5. 支持EFI专有的EL2启动模式以启用KVM硬件虚拟化的支持，大幅度提升KVM性能（需要开机在BIOS里设置，默认使用EL1标准模式）\n    6. 支持自定义启动选项：从其他设备、分区、文件等\n\n#### ● 提示：如何设置系统启动方式 (这里以开启 \"KVM硬件加速\" 为例)\n\n    1. 开机按住 \"ESC\"\n    2. 进入 \"BIOS设置\"\n    3. 选择 \"Device Manager\"\n    4. 选择 \"Raspberry Pi Configuration\"\n    5. 选择 \"HypDxe Configuration\"\n    6. 选择 \"System Boot Mode\"\n    7. 选择 \"Boot in EL2\" 开启 \"KVM硬件加速\"\n    8. 按 \"F10\" 再按 \"Y\" 保存设置\n    9. 连续按 \"ESC\" 直到返回BIOS主界面，选择 \"Continue\" 继续\n    10. 配置完成，系统将自动重启\n    \n你可以点击[这里](./docs/biso_kvm.md)查看图文教程\n\n该BIOS功能异常强大，还有很多可配置选项，各位老铁请自行发掘 ^_^ :P\n\n    * EFI固件引用自 \"andreiw/RaspberryPiPkg\" 的项目\n\n### TCP加速\n\n内核默认已开启 **TCP BBR** 拥塞控制算法\n\n* 什么是 **TCP BBR** ？\n\n我们还是简答来说 TCP BBR 解决了什么问题吧\n\n    1. 在有一定丢包率的网络链路上充分利用带宽，非常适合高延迟、高带宽的网络链路\n    2. 降低网络链路上的 buffer 占用率，从而降低延迟，非常适合慢速接入网络的用户\n    \n简单来说使用 TCP BBR 拥塞控制算法能够在一定程度上提升TCP传输速度和效率，优化网络传输\n\n* 如何关闭\n\n编辑 “/mnt/etc/sysctl.conf” 文件，执行命令 \"sysctl -p\" 查看结果，看不到以下注释掉的内容，代表关闭成功    \n注释掉以下2行内容： (前面加上#即可)\n\n```shell\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n### VC4 图形双栈切换\n\n* 什么是VC（VideoCore）\n\nVideoCore 是一个由Alphamosaic Ltd开发并且现在被Broadcom拥有的低功耗移动多媒体指令集架构。二维的DSP架构使其在软件中可以灵活且高效地编解码多媒体数据的同时保持低功耗。该IP核目前仅在Broadcom的SoC中被使用\n\n简单来说VC就是树莓派的视频硬件解码加速芯片，VC4 就是指第四代架构\n\n由于树莓派使用的 VC4 没有发布硬解码部分的代码，所以如果要使用硬件解码（HardFP）加速功能只能使用 VC32 硬件加速模式 (**我们的系统支持在64位模式下运行VC32硬件加速模式**)\n\n**注意：如果需要使用VC32 硬件加速模式请参照后面的设置，开启显卡3D硬件加速**\n\n* 使用方法\n\n我们提供了系统VC4图形模式的双栈切换功能，非常方便\n\n支持 VC32 硬件加速模式（HardFP）和 vc64 原生64位的兼容模式切换，**系统默认使用原生vc64兼容模式**\n\n如需切换为vc32硬件加速模式，只需要执行命令：\n\n```shell\nenableVChardfp\n```\n\n切换回vc64兼容模式，请执行命令：\n\n```shell\nenableVC64\n```\n\n#### ps: 2.0 系统执行 enableVChardfp 需要在/boot/config.txt 文件中找到 \"vc4-kms-v3d\", 手动将其修改为 \"vc4-fkms-v3d\", 这是由于驱动工作模式改变引起的 (2.0使用DRM模式驱动显卡加速)，否则无法开机。\n\n**切换模式后需要重启系统生效**\n\n### CPU硬标支持\n\n在arm64的Linux主线内核上，已经不再支持在 \" **/proc/cpuinfo** \" 中显示硬件型号名称，而是使用DMI接口来获取相关信息，这就造成了树莓派的很多程序如 **GPIO Wiringpi** 在运行时检查不到设备的硬件型号（**一般主要是查找 *cpuinfo Hardware* 字段的型号信息**），提示不支持的硬件，无法运行，我们修改了Arm64内核的相关文件，提供了CPU硬标功能的支持，现在可以同样在64位系统下显示硬件的型号了，如下图所示：\n\n![cpuinfo](/images/cpuinfo-2.png)\n\n----\n\n# 配置及说明\n\n系统的其他配置如下：\n\n### 默认账户\n\n  1. 默认账户:    **pi**\n    \n  2. 默认账户**pi**密码:    **raspberry**\n\n  3. root账户密码需要自行设定\n\n### 默认仓库源为清华源\n     \n    用户可自行配置为其他源\n\n### 32位软件支持\n\n    系统默认已开启对32位软件包的支持，无需手动添加，安装32位软件请在包的名称后加入后缀 \":armhf\" \n    \n    例如: apt install ibc6:armhf  // 安装32位的ibc6\n\n    注意：这里的冒号 \":\" 是需要的哦\n\n### 启动模式\n\n三种文件系统格式的镜像都支持 **开机自动扩展根分区** 默认系统将 **重启3次**\n\n●  **第一次启动检查文件系统，第二次启动扩展root根分区，所以需要等待一些时间**\n\n●  **两次重启后，正常引导系统，在这一次启动过程中会自动完成系统配置和生成Swap文件并完成最后的系统初始化，这将消耗一段时间（仅一次），待完成Swap交换文件的设置后并完成重启后，即可进入到登录界面**\n\n●  如果使用的是BtrFS文件系统格式的镜像在最后完成系统初始化时不会创建Swap交换文件，所以无需等待\n\n●  因为正如前面文中提到的BtrFS文件系统不支持使用Swap交换文件的模式而只能使用交换分区的方式，考虑到这一点，我们在制作镜像的时候就已经默认创建并配置好了Swap交换分区，所以当然不需要了，这就是为什么BtrFS文件系统镜像会比其他两个镜像都大一些并且有3个分区（其中一个1G大小的是默认的交换分区）的原因 :P\n\n    * 自动扩容脚本部分参考了树莓派官方和 UMRnInside/RPi-arm64 项目的部分内容 \n\n### 预配置项\n\n系统提供网络和自动开机任务的预配置，相关配置文件的路径和对应关系如下：\n\n| 预配置项 | 预配置文件路径 | 对应链接到的系统文件路径 |\n| --- | --- | --- |\n| 无线网络 | /boot/wlan0 | /etc/network/interfaces.d/wlan0 |\n| 有线网络 | /boot/interfaces | /etc/network/interfaces |\n| DHCP客户端 | /boot/dhclient.conf | /etc/dhcp/dhclient.conf |\n| 自定义启动脚本 | /boot/rc-local | /etc/rc.local |\n\n#### 网络预配置\n\n● 无线网络配置 - **图形化桌面环境** (包括Deepin和Xfce)\n\n## 提示：\n\n**在使用图形化界面Wifi无线管理器之前，为了正常识别无线的固件和参数配置，需要先配置你的无线路由的地区码才能正常使用！！**\n\n**2.0 RC3 以后版本，默认已设置区域为 【 CN 】，如果你是在国内环境下使用，一般无需再次修改。**\n\n编辑文件 **/etc/default/crda** ，找到 **\"REGDOMAIN\"** 开头的行，将如下的默认内容：\n\n```\nREGDOMAIN=\n```\n\n改为 **\"REGDOMAIN=地区码\"** 的形式，大陆国产路由一般地区码为 **\"CN\"** ，所以绝大多数情况下改为如下内容：\n\n```\nREGDOMAIN=CN\n```\n\n设置完成后重启生效，方可使用图形化界面Wifi无线管理器连接网络，如果要立即生效，请执行如下命令：\n\n```\nsudo iw reg set 地区码\n\n如果要设置为中国，则执行：\nsudo iw reg set CN\n\n完成后查看是否设置生效，执行：（部分系统更新后，由于版本原因 iw get 可能不能使用，属于正常现象）\nsudo iw reg get\n\n得到如下内容:\nglobal\ncountry CN: DFS-FCC\n  (2402 - 2482 @ 40), (N/A, 20), (N/A)\n  (5170 - 5250 @ 80), (N/A, 23), (N/A), AUTO-BW\n  (5250 - 5330 @ 80), (N/A, 23), (0 ms), DFS, AUTO-BW\n  (5735 - 5835 @ 80), (N/A, 30), (N/A)\n  (57240 - 59400 @ 2160), (N/A, 28), (N/A)\n  (59400 - 63720 @ 2160), (N/A, 44), (N/A)\n  (63720 - 65880 @ 2160), (N/A, 28), (N/A)\n  \n如上面的country部分，可以看到是CN，代表设置成功\n\n```\n\n其他的国家地区码请点击 **[此处](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)** 查看\n\n**常用国家地区码：**\n\n```\nAU 澳大利亚\nCA 加拿大\nCN 中国\nGB 英国\nHK 香港\nJP 日本\nKR 韩国\nDE 德国\nUS 美国\nTW 台湾\n```\n\n**无线网络配置根据1.0和2.0的版本不同，配置有所区别，请注意**\n\n镜像支持在启动前提前配置好网络（无线、有线网络均可配置）\n\n● 无线网络配置 (1.0版本) /boot/wlan0\n\n```shell\n# Used this conf, unconfig # every line bellow. (Do not change this line)\n# 除第一行外，第一行可以删除，去掉以下每行的“#”注释符号，中文内容是注释，删除或不要取消前面的“#”符号）\n\n#auto wlan0\n#allow-hotplug wlan0\n#iface wlan0 inet dhcp\n\n#wpa-ssid \"Your-Wifi-SSID-Name\"\n#修改此处“Your-Wifi-SSID-Name”为无线的SSID名称\n\n#wpa-psk \"Your-Wifi-SSID-Password\"\n#修改此处“Your-Wifi-SSID-Password”为无线密码\n\n#注意，以上两行的双引号需保留\n\n```\n\n● 无线网络配置 - **无桌面环境，命令行界面** (2.0版本) /boot/wpa_supplicant.conf\n\n```\n## To use this file, you should run command \"systemctl disable network-manager\" and reboot system. (Do not uncomment this line!) ##\n## 除第一行外，第一行可以删除，去掉以下每行只有单个“#”的注释符号，两个“#”注释符号的行位说明内容，请不要修改\n## 中文内容是注释，删除或不要取消前面的“#”符号\n\n## country是设置无线的国家地区，CN是中国\n#country=CN\n#ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n#update_config=1\n\n## 下面的 \"WIFI 1\" 、\"WIFI 2\" 代表多个无线网络的设置\n## 除非你要设置多个无线网络，否则只需要设置 \"WIFI 1\" 这部分的设置即可\n## WIFI 1 (Do not uncomment this line!)\n\n## 除了取消需要生效的内容注释以外，以下仅需要修改 \"\" 和 \"psk\" 后面引号内的内容即可\n## ssid是你的无线Wifi名称，psk是你无线Wifi的密码\n#network={\n#    ssid=\"your-wifi1-ssid\"\n#    psk=\"wifi1-password\"\n#    priority=1\n#    id_str=\"wifi-1\"\n#}\n\n\n## WIFI 2 (Do not uncomment this line!)\n\n#network={\n#    ssid=\"your-wifi2-ssid\"\n#    psk=\"wifi2-password\"\n#    priority=2\n#    id_str=\"wifi-2\"\n#}\n```\n\n● 有线网络配置 /boot/interfaces\n\n```shell\n# interfaces(5) file used by ifup(8) and ifdown(8)\n# Include files from /etc/network/interfaces.d:\nsource-directory /etc/network/interfaces.d\n## Used dhcp ip address set eth0 inet to dhcp,\n## or used static ip address set eth0 to static\n## and change other ip settings.\n## If you wanna let settings to take effect,\n## uncomment symbol in front.\n\n#auto eth0\n#allow-hotplug eth0\n\n#iface eth0 inet dhcp\n#iface eth0 inet static\n#address 172.16.192.168\n#netmask 255.255.255.0\n#gateway 172.16.192.1\n#dns-nameservers 8.8.8.8\n```\n\n#### 自动任务预配置\n\n系统支持自定义任务自启动脚本，可以在系统启动前预先配置\n\n    编辑脚本文件 \"/boot/rc-local\" ，加入自定义的脚本内容\n\n## 其他杂项配置\n\n### 开启armel支持\n\n执行以下命令\n\n```shell\ndpkg --add-architecture armel  \napt-get update\napt-get install libc6-armel\n```\n\n### 安装桌面\n\n**这里以安装 *xfce* 桌面环境为例：**\n\n● 首先参照下面的 \"**开启显卡3D硬件加速**\" 部分的设置，为桌面开启 *显卡加速*\n\n● 然后修改 **/boot/config.txt** 文件配置，去掉下面一行前面的 \"**#**\" 注释符号，**否则桌面会有黑边框**\n\n```shell\ndisable_overscan=1\n```\n\n● 重启后即可生效\n\n● 然后执行以下命令安装桌面环境相关的软件包 (安装的软件包数量较多，请耐心等待)\n\n```shell\nsudo apt-get update; \\\nsudo apt-get install accountsservice xfce4 task-xfce-desktop wicd blueman fcitx-rime alsa-utils -y\n```\n\n● 如何添加中文支持\n\n执行以下命令即可\n\n```shell\nsudo apt install ttf-wqy-zenhei fonts-arphic-ukai fonts-arphic-uming fonts-wqy-zenhei \\\nfcitx-m17n fcitx-googlepinyin zhcon python-zhpy \\\nfirefox-esr-l10n-zh-cn libreoffice-l10n-zh-cn -y\n```\n\n● 图形界面显示中文\n\n需要修改文件 **/etc/default/locale**\n\n执行以下命令，然后重启后生效\n\n```shell\n切换至root用户身份\nsudo -i\n\n然后执行\ncat << EOF >/etc/default/locale\n#  File generated by update-locale\nLANGUAGE=\"zh_CN:zh:en_US:en\"\nLC_ALL=\"zh_CN.UTF-8\"\nLC_CTYPE=\"zh_CN.UTF-8\"\nLANG=\"zh_CN.UTF-8\"\nEOF\n```\n\n### 开启显卡3D硬件加速\n\n所有图形化系统镜像Xfce和Deepin桌面都已经开启3D硬件加速支持，无需配置\n\n###  ShellinaBox\n\n![shellinabox](/images/shellinabox.jpg)\n\nWEB SSH 客户端支持，不再需要SSH客户端来连接服务器，可以通过浏览器直接SSH访问服务器\n\n默认访问协议是*https*和**4200**端口，访问地址  https://树莓派IP地址:4200\n\n需要 *2019-01-18-v2019-1.0-U2* 以后的系统版本才已默认安装，之前的版本请执行以下命令安装并启用：\n\n```shell\napt update; apt install shellinabox -y\n```\n\n### 开启蓝牙支持\n\n所有系统默认已开启蓝牙支持，无需额外操作\n\n----\n\n# 系统测试\n\n## 同类64对比测试\n\n一个不完全的测试结果，只是理论数据，仅供参考\n\n使用 Ext4 标准文件系统和 树莓派3B+ 的 UnixBench 测试结果（和同类Debian Aarch64系统相比）：\n\n* **单线程：**\n\n![x1](/images/u1.JPG)\n\n* **多线程：**\n\n![x4](/images/u4.JPG)\n\n* **整体评分：**\n\n![all](/images/uall.JPG)\n\n综合整体性能全面超越对比测试系统的2~3倍以上，部分指标甚至达到了10倍以上，1000%的提升\n\n## [打赏](donation/README.md)\n\n## 与树莓派官方32位系统测试\n\n近来，树莓派官方做了不少优化工作，现在的系统对比以前的32位系统有了较大的提升，但是由于32位原生的架构限制，与64位系统性能差距仍然较大\n\n**附：** 树莓派爱好者基地**Debian Pi Aarch64 64位**系统与树莓派官方**Raspbian 32位**性能对比测试\n\n#### Sysbench 0.4.12 Result\n\n| **测试项目** | **ARM32/EXT4** | **ARM64/F2FS** | 测试单位：**时间** / 越**小**越好 |\n| --- | --- | --- | --- |\n| **系统信息** | 2018-11-13-Raspbian | 树莓派爱好者基地64位U8版 | 提升倍数 |\n| **CPU单线程** | 119.2072 | 9.8725 | 12.07 |\n| **四线程** | 299.5217 | 24.6616 | 12.15 |\n| **八线程** | 299.5824 | 24.6789 | 12.14 |\n| **内存随机** | 1.2625 | 0.8751 | 1.44 |\n| **内存连续** | 1.5803 | 1.1583 | 1.36 |\n| **文件连续读写** | 6.1621 | 2.2928 | 2.69 |\n| **文件随机读写** | 484.812 | 6.3527 | **76.32** |\n| **互斥锁性能** | 0.0117 | 0.0081 | 1.44 |\n\n最大性能差距倍数： **76.32**\n\n平均性能差距倍数： *14.95*\n\n- 统计图\n\n![sysbench](./images/sysbench_result.png)\n\n## [打赏](donation/README.md)\n\n----\n\n# 最新2.0测试版与树莓派官方32位系统测试\n\n## 测试硬件：树莓派4B\n\n#### Sysbench 0.4.12 Result\n\n| **测试项目** | **ARM32/EXT4** | **ARM64/EXT4** | 测试单位：**时间**/越**小**越好 |\n| --- | --- | --- | --- |\n| **系统** | 2019-06-20 raspbian-buster | 2019-07-06 树莓派爱好者基地64位 2.0 Beta版 | 提升倍数 |\n| **单线程** | 92.7292 | 6.7406 | 13.757 |\n| **四线程** | 231.6591 | 16.8172 | 13.775 |\n| **八线程** | 231.5002 | 16.8282 | 13.757 |\n| **内存随机** | 2.4225 | 0.6086 | 3.980 |\n| **内存连续** | 2.5631 | 0.9267 | 2.766 |\n| **文件连续读写** | 6.3636 | 1.8859 | 3.374 |\n| **文件随机读写** | 627.719 | 10.6036 | 59.199 |\n| **互斥锁性能(4096)** | 0.0206 | 0.0081 | 2.543 |\n\n最大性能差距倍数： **59.199**\n\n平均性能差距倍数： **14.144**\n\n- 统计图 **(统计单位：时间，越小越好)**\n\n![sysbench](./images/sysbench_result2.png)\n\n## [打赏](donation/README.md)\n\n----\n\n# 系统截图\n\n* **启动界面**\n\n![start](/images/boot_loader_screen.png)\n\n* **引导**\n\n![boot](/images/boot1-2.png)\n\n* **UEFI BIOS 界面**\n\n![BIOS](/images/bios_main.png)\n\n* **登录界面**\n\n![login](images/login0-2.png)\n\n----\n\n# FAQ (常见问题处理)\n\n### XFCE 桌面环境无线连接\n\n**问题描述：**\n\n```\n1. 客户端兼容性问题，即使输入正确的密码也无法连接到无线网络\n2. 使用\"Wicd管理器\"后，再次使用 \"NetworkManager管理器\" 找不到网络\n```\n\n**问题根源：**\n\n```\n对于问题1： \"Wicd管理器\" 存在部分无线设备或无线网络设置参数的的兼容问题\n对于问题2： \"Wicd管理器\" 和 \"NetworkManager管理器\" 有冲突\n```\n\n**解决方案：**\n\n**对于问题1：**\n\n- 如下图所示：右上角有2个无线管理程序，从 **最右边往左** 依次是 **\"NetworkManager\"** 和 **\"Wicd\"**\n\n```\n为了保证无线的兼容性，所以我们集成了多个无线管理工具，这里我们强烈推荐使用 \"NetworkManager管理器\" 来连接你的无线网络\n```\n\n![wifi0](./images/wifi-key/wifi-key0.png)\n\n**对于问题2：**\n\n- 1. 首先执行以下命令：\n\n```\nsystemctl disable wicd\nsystemctl restart NetworkManager\n```\n\n- 2. 然后，按照如下步骤操作：\n\n```\n点击屏幕最左上方，选择 \"所有应用程序\" -> \"设置\" -> \"设置管理器\" ，在弹出的 \"设置\" 窗口选择 \"会话和启动\" 如下图所示：\n```\n\n![wifi-key1](./images/wifi-key/wifi-key1.png)\n\n- 3. 最后打开 \"会话和启动\" 设置后，选择 \"应用程序自启动\" 选项，取消勾选下面的选项，完成后重启即可。 \n\n```\n* Wicd Network Manager Tray (Display network connection status in the system tray)\n```\n\n---\n\n### 时间同步\n\n**问题描述：**\n\n系统没有**自动**与时间服务器进行时间同步\n\n**根源：**\n\n系统默认没有启用时间同步\"**ntp服务**\"\n\n**解决方案：**\n\n启用\"**时间同步**\"服务, 执行以下命令：\n\n```\nsystemctl enable ntp.service && systemctl start ntp.service \n```\n\n---\n\n### 中文环境下，TTY 无法显示中文字体\n\n**问题描述：**\n\n在已安装中文字体并配置好语言为中文后，TTY(本地终端，非远程方式访问)下无法显示中文，中文变成方框或乱码\n\n**根源：**\n\nLinux标准TTY不支持显示中文字体\n\n**解决方案：**\n\n安装fbterm，以支持TTY下显示中文\n\n```shell\nfbterm 提供了一个快速的终端仿真器，它直接运行在你的系统中的帧缓冲 (framebuffer) 之上\n使用帧缓冲可以在终端渲染 UTF-8 文本时可以提高性能\nfbterm 旨在提供国际化和现代字体支持时至少与 Linux 内核终端一样快\n它允许你在同一个帧缓冲上创建多达 10 个不同的终端窗口，每个窗口都有它的回滚历史\n```\n\n请在你的本地终端执行以下操作，以支持显示中文\n\n```shell\n## 安装fbterm\nsudo apt update; sudo apt install fbterm -y\n## 添加登录用户到video组\nsudo adduser root video ; sudo adduser pi video \nsudo adduser 你自己创建的其他用户名(若果有) video\n## 然后每次需要显示时执行以下命令即可（第一次需要等待一些时间）：\nfbterm\n```\n\n---\n\n### 桌面环境如何设置VNC访问\n\n- 点击 **[此处](./docs/vnc.md)** 查看推荐VNC的使用说明\n\n### Xfce环境下，更好的桌面图形性能\n\n我们Xfce桌面环境默认开启了窗口合成，这会消耗一定的硬件资源和带来一定的系统开销，将其关闭后能够得到更好的性能和流畅度体验。\n\n**如果不是特别追求效果，我们强烈建议您可以关掉桌面合成的功能！！**\n\n关闭桌面合成的方法如下：\n\n- 点击左上角“所有应用程序”，选择“设置”->\"窗口管理器微调\"，如下图所示：\n\n![desktop_b1](/images/desktop_b1.png)\n\n- 在弹出的窗口选择“合成器”，**取消**勾选“启用显示合成”即可，如下图所示：\n\n![desktop_b2](/images/desktop_b2.png)\n\n- 当然，您还可以点击左上角 **“所有应用程序”**，选择 **“设置”** -> **\"窗口管理器\"**，\n\n然后在弹出的窗口找到 **“高级”** 选项，在 **“移动时隐藏窗口内容”** 项处，\n\n同时 *勾选* **“当移动”** 和 **“当调整大小”** ，来**更**进一步提升体验流畅度，如下图所示：\n\n![desktop_b3](/images/desktop_b3.png)\n\n----\n\n# 版权说明\n\n1. 以上系统由**OPENFANS开源社区**制作，仅由**树莓派爱好者基地**独家发布并提供技术支持\n\n2. 任何文字、图片转载必须标明系统（软件）来源；您可以对软件或系统进行任何修改，但必须保留出处；严谨用于任何商业用途，如需商业使用，请与**OPENFANS开源社区**及**树莓派爱好者基地**联系并获得许可\n\n3. 以上系统以及软件的所有权归属相对应的软件作者和遵守相关软件包的许可授权协议\n\n4. 未遵守上诉规定保留出处，**OPENFANS开源社区**及**树莓派爱好者基地**有权追究其相应责任并责令停止一切侵权行为\n\n5. **OPENFANS开源社区**及**树莓派爱好者基地**拥有以上内容的最终解释权\n\n----\n\n# 附：\n\n## **[打赏](donation/README.md)**\n\n## 联系方式\n\n### 树莓派爱好者基地QQ群\n\n**1群：** *695558192*\n\n**2群：** *203950207*\n\n**3群：** *788379183*\n\n### OPENFANS官方QQ群 \n\n**1群：** *370350002* \n\n![Debian-Pi-Aarch64 OPENFANS](/images/370350002.png)\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a target=\"_blank\" href=\"//shang.qq.com/wpa/qunwpa?idkey=07bab0507c84a21cc939f0d8ed5c86c2a32039f271af948ccf2dcbcfd900eee0\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"Debian-Pi-Aarch64\" title=\"Debian-Pi-Aarch64\"></a>\n\n----\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 66.3310546875,
          "content": "# 通知 ！！！！！！！！！\n\n## 声明！\n\n## OPENFANS终止与~~树莓派爱好者基地~~的一切合作，Debian-Pi-Aarch64 2.0 项目正式冻结。\n\n----\n\n![openfans](./images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](./images/amatfan.png)\n\n# Debian-Pi-Aarch64 ★ 全新树莓派64位系统\n\n# 2.0正式版 - 说明文档\n\n***[English Edition (英文版)](./README.md)***  **... 请不要吝啬，一个点击，给我一颗心(Star), 已是莫大的荣耀。**  **:)**\n\n*这是全球发行的第一个同时支持树莓派全系64位硬件的64位系统 !!!（包括：2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W）*\n\n![catalina](./images/catalina.jpg)\n\n```\n总有各类人恶意误导，请大家仔细阅读文档，欢迎各种批评指正而非恶意中伤。\n我们对所有使用中、应用到的帮助、借鉴都会加以说明,如有遗漏，欢迎大家及时反馈给我们加上\n再次致谢所有帮助过我们的人\n```\n\n----\n\n\\- **树莓派64位操作系统** - **OPENFANS开源社区 & 树莓派爱好者社区** - **联合出品** -\n\n这是支持树莓派全系列64位CPU的全新的64位2.0系统 **正式版** 的说明文档，系统支持树莓派2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W。\n\n**任何1.0版本及2.0预览版的历史系统版本目前已停止更新和维护，“历史说明文档” 请点击 [此处](./README_ORGI.md) 查看。**\n\n**在使用前请仔细阅读该文档，避免重复提问或询问任何在该文档中已说明的内容（我们将拒绝回答任何已说明的问题）。**\n\n**除本文档外本Git仓库中的其他任何文档已不再维护（本文链接的文档除外），仅作为开发人员存档，特此说明!!!**\n\n**Gitee(码云)仓库地址**: [gitee.com/openfans-community/Debian-Pi-Aarch64](https://gitee.com/openfans-community/Debian-Pi-Aarch64)\n\n**腾讯云(Coding)仓库地址**：[https://e.coding.net/openfans/pifan/Debian-Pi-Aarch64.git](https://e.coding.net/openfans/pifan/Debian-Pi-Aarch64.git)\n\n**Github仓库地址**：[github.com/openfans-community-offical/Debian-Pi-Aarch64](https://github.com/openfans-community-offical/Debian-Pi-Aarch64)\n\n**GitLab仓库地址**：[https://gitlab.com/openfans/Debian-Pi-Aarch64](https://gitlab.com/openfans/Debian-Pi-Aarch64)\n\n## 注意\n\n- 本文中所提到的执行的所有命令，没有特殊说明的情况下，默认都是在 **root** 用户的权限下执行！！\n\n- 遇到任何问题的时候，请保证先将系统、固件及内核更新至**最新**版本，你可以点击 **[此处](./README_zh.md#5%E6%9B%B4%E6%96%B0%E5%8F%8A%E5%8D%87%E7%BA%A7)** 了解如何更新系统及升级内核和固件，以及查看最新的系统和**内核、固件**版本。\n\n**★★ 快速友情提示:**\n\n#### 系统最新版本\n\n**2021-11-11-v2020-2.0-U6-Release** (kernelVer:**5.10.78-Release-OPENFANS+20211111-v8**)  ;  \n\n#### 最新内核固件\n\n**5.10.88-Release-OPENFANS+20211222-v8** （独立更新包）\n\n----\n\n如果你在版本 **202006 U3** 的系统中遇到了谷歌浏览器的显示问题，请看[这里](./README_zh.md#3-163-chromium%E6%B5%8F%E8%A7%88%E5%99%A8%E7%95%8C%E9%9D%A2%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF)，该问题已在20200617(含)之后的版本修复。\n\n2.0正式版 强烈建议更新至 “**5.10.88-Release-OPENFANS+20211222-v8**” 最新版固件。\n\n***注意：*** **U3(含)之后的固件不支持从 版本<=U2(包含在内)升级!!**\n\n## 打赏\n\n感谢无私帮助我们的朋友们！你们的支持才是我们前进最大的动力！\n\n![jz](./images/jz.png)\n\n----\n\n## 目录\n\n[0. 系统截图](./README_zh.md#0%E7%B3%BB%E7%BB%9F%E6%88%AA%E5%9B%BE)\n\n----\n\n[1. 系统介绍](./README_zh.md#1%E7%B3%BB%E7%BB%9F%E4%BB%8B%E7%BB%8D)\n\n[1-1. 系统环境（版本介绍）](./README_zh.md#1-1%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E7%89%88%E6%9C%AC%E4%BB%8B%E7%BB%8D)\n\n[1-2. 系统环境（系统相关）](./README_zh.md#1-2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3)\n\n[1-3. 各版本功能比较](./README_zh.md#1-3%E5%90%84%E7%89%88%E6%9C%AC%E5%8A%9F%E8%83%BD%E6%AF%94%E8%BE%83)\n\n[1-4. 部分系统性能测试结果](./README_zh.md#1-4%E9%83%A8%E5%88%86%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C)\n\n----\n\n[2. 主要特性说明](./README_zh.md#2%E4%B8%BB%E8%A6%81%E7%89%B9%E6%80%A7%E8%AF%B4%E6%98%8E)\n\n[2-1. Web可视化管理](./README_zh.md#2-1web%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AE%A1%E7%90%86)\n\n[2-2. QEMU-KVM 虚拟化支持](./README_zh.md#2-2qemu-kvm-%E8%99%9A%E6%8B%9F%E5%8C%96%E6%94%AF%E6%8C%81)\n\n[2-3. Docker 容器支持](./README_zh.md#2-3docker-%E5%AE%B9%E5%99%A8%E6%94%AF%E6%8C%81)\n\n[2-4. AUFS文件系统支持](./README_zh.md#2-4aufs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E6%94%AF%E6%8C%81)\n\n[2-5. TCP加速](./README_zh.md#2-5tcp%E5%8A%A0%E9%80%9F)\n\n[2-6. 内存及交换优化（算法级）](./README_zh.md#2-6%E5%86%85%E5%AD%98%E5%8F%8A%E4%BA%A4%E6%8D%A2%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%BA%A7)\n\n[2-7. MacOS Mojave 主题桌面](./README_zh.md#2-7macos_mojave%E4%B8%BB%E9%A2%98%E6%A1%8C%E9%9D%A2)\n\n[2-8. CecOS CaaS 容器云](./README_zh.md#2-8cecos_caas%E5%AE%B9%E5%99%A8%E4%BA%91)\n\n[2-9. 其他特性](./README_zh.md#2-9%E5%85%B6%E4%BB%96%E7%89%B9%E6%80%A7)\n\n----\n\n[3. 使用说明](./README_zh.md#3%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n\n[3-1. 系统初始化说明](./README_zh.md#3-1%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AF%B4%E6%98%8E)\n\n[3-2. 账户及密码](./README_zh.md#3-2%E8%B4%A6%E6%88%B7%E5%8F%8A%E5%AF%86%E7%A0%81)\n\n[3-3. Web登录接口说明](./README_zh.md#3-3web%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E)\n\n[3-4. 预配置项](./README_zh.md#3-4%E9%A2%84%E9%85%8D%E7%BD%AE%E9%A1%B9)\n\n[3-5. 无线配置说明](./README_zh.md#3-5%E6%97%A0%E7%BA%BF%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E)\n\n[3-6. 有线网络配置](./README_zh.md#3-6%E6%9C%89%E7%BA%BF%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE)\n\n[3-7. 开机自定义启动脚本](./README_zh.md#3-7%E5%BC%80%E6%9C%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC)\n\n[3-8. 深度桌面禁止自动升级的说明](./README_zh.md#3-8%E6%B7%B1%E5%BA%A6%E6%A1%8C%E9%9D%A2%E7%A6%81%E6%AD%A2%E8%87%AA%E5%8A%A8%E5%8D%87%E7%BA%A7%E7%9A%84%E8%AF%B4%E6%98%8E)\n\n[3-9. 中文环境下TTY显示中文字体(非远程方式)](./README_zh.md#3-9%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83%E4%B8%8Btty%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E9%9D%9E%E8%BF%9C%E7%A8%8B%E6%96%B9%E5%BC%8F)\n\n[3-10. macOS Mojave主题桌面支持Web界面VNC远程桌面访问](./README_zh.md#3-10macos-mojave%E4%B8%BB%E9%A2%98%E6%A1%8C%E9%9D%A2%E6%94%AF%E6%8C%81web%E7%95%8C%E9%9D%A2vnc%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AE%BF%E9%97%AE)\n\n[3-11. 切换声音输出通道](./README_zh.md#3-11%E5%88%87%E6%8D%A2%E5%A3%B0%E9%9F%B3%E8%BE%93%E5%87%BA%E9%80%9A%E9%81%93)\n\n[3-12. 32位软件armhf支持](./README_zh.md#3-1232%E4%BD%8D%E8%BD%AF%E4%BB%B6armhf%E6%94%AF%E6%8C%81)\n\n[3-13. 启用和运行Docker服务](./README_zh.md#3-13%E5%90%AF%E7%94%A8%E5%92%8C%E8%BF%90%E8%A1%8Cdocker%E6%9C%8D%E5%8A%A1)\n\n[3-14. 启用CecOS-CaaS容器云](./README_zh.md#3-14%E5%90%AF%E7%94%A8cecos-caas%E5%AE%B9%E5%99%A8%E4%BA%91)\n\n[3-15. 启用和退出Docker集群](./README_zh.md#3-15%E5%90%AF%E7%94%A8%E5%92%8C%E9%80%80%E5%87%BAdocker%E9%9B%86%E7%BE%A4)\n\n[3-16. FAQ常见问题说明](./README_zh.md#3-16faq%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%AF%B4%E6%98%8E)\n\n[- 3-16.1 图形化桌面环境使用配置文件连接无线网络](./README_zh.md#3-161%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C)\n\n[- 3-16.2 使用APT命令安装软件包时版本不匹配](./README_zh.md#3-162%E4%BD%BF%E7%94%A8apt%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%97%B6%E7%89%88%E6%9C%AC%E4%B8%8D%E5%8C%B9%E9%85%8D)\n\n[- 3-16.3 Chromium浏览器界面显示错误](./README_zh.md#3-163-chromium%E6%B5%8F%E8%A7%88%E5%99%A8%E7%95%8C%E9%9D%A2%E6%98%BE%E7%A4%BA%E9%94%99%E8%AF%AF)\n\n[- 3-16.4 蓝牙音频连接丢失](./README_zh.md#3-164-%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91%E8%BF%9E%E6%8E%A5%E4%B8%A2%E5%A4%B1)\n\n[- 3-16.5 USB大容量设备启动问题](./README_zh.md#3-165-usb%E5%A4%A7%E5%AE%B9%E9%87%8F%E8%AE%BE%E5%A4%87%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98)\n\n[- 3-16.6 升级 Docker-CE](./README_zh.md#3-166-%E5%8D%87%E7%BA%A7-docker-ce)\n\n[- 3-16.7 桌面版系统单声道改为立体声输出](./README_zh.md#3-167-%E6%A1%8C%E9%9D%A2%E7%89%88%E7%B3%BB%E7%BB%9F%E5%8D%95%E5%A3%B0%E9%81%93%E6%94%B9%E4%B8%BA%E7%AB%8B%E4%BD%93%E5%A3%B0%E8%BE%93%E5%87%BA)\n\n[3-17. 配套应用程序使用说明](./README_zh.md#3-17%E9%85%8D%E5%A5%97%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n\n[- 3-17.1 WPS Office ARM64位 桌面版安装说明](./README_zh.md#3-171-wps-office-arm64%E4%BD%8D-%E6%A1%8C%E9%9D%A2%E7%89%88%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E)\n\n[- 3-17.2 腾讯QQ官方Linux桌面版安装说明](./README_zh.md#3-172-%E8%85%BE%E8%AE%AFqq%E5%AE%98%E6%96%B9linux%E6%A1%8C%E9%9D%A2%E7%89%88%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E)\n\n[- 3-17.3 OpenCV 扩展](./README_zh.md#3-173-opencv-%E6%89%A9%E5%B1%95)\n\n[- 3-17.4 PiBox Android Runtime 运行环境](./README_zh.md#3-174-pibox-android-runtime-%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83)\n\n----\n\n[4.虚拟机使用说明](./README_zh.md#4%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n\n[4-1 标准虚拟机使用说明](./README_zh.md#4-1%E6%A0%87%E5%87%86%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E)\n\n[4-2 宝塔虚拟机使用介绍](./README_zh.md#4-2%E5%AE%9D%E5%A1%94%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D)\n\n[4-3 如何扩展虚拟机的磁盘大小](./README_zh.md#4-3%E5%A6%82%E4%BD%95%E6%89%A9%E5%B1%95%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%A3%81%E7%9B%98%E5%A4%A7%E5%B0%8F)\n\n----\n\n[5. 更新及升级](./README_zh.md#5%E6%9B%B4%E6%96%B0%E5%8F%8A%E5%8D%87%E7%BA%A7)\n\n[5-1 升级系统](./README_zh.md#5-1%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F)\n\n[5-2 更新内核及固件](./README_zh.md#5-2%E6%9B%B4%E6%96%B0%E5%86%85%E6%A0%B8%E5%8F%8A%E5%9B%BA%E4%BB%B6)\n\n[5-3 更新说明](./README_zh.md#5-3%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E)\n\n[5-4 当前最新版本](./README_zh.md#5-4%E5%BD%93%E5%89%8D%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC)\n\n[5-5 Rpi4 USB启动(固件升级)](./README_zh.md#5-5-rpi4-usb%E5%90%AF%E5%8A%A8%E5%9B%BA%E4%BB%B6%E5%8D%87%E7%BA%A7)\n\n[5-6 新特性支持（仅测试）](./README_zh.md#5-6-%E6%96%B0%E7%89%B9%E6%80%A7%E6%94%AF%E6%8C%81%E4%BB%85%E6%B5%8B%E8%AF%95)\n\n[- 5-6.1 Mesa Vulkan (v3dv) 驱动：支持树莓派4(B)的VC4及V3D的OpenGL硬件加速](./README_zh.md#5-61-mesa-vulkan-v3dv-%E9%A9%B1%E5%8A%A8%E6%94%AF%E6%8C%81%E6%A0%91%E8%8E%93%E6%B4%BE4b%E7%9A%84vc4%E5%8F%8Av3d%E7%9A%84opengl%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F)\n\n----\n\n[6. 下载地址](./README_zh.md#6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80)\n\n----\n\n[7. 其他说明](./README_zh.md#7%E5%85%B6%E4%BB%96%E8%AF%B4%E6%98%8E)\n\n[7-1 打赏](./README_zh.md#7-1%E6%89%93%E8%B5%8F)\n\n[7-2 联系方式](./README_zh.md#7-2%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F)\n\n[7-3 版权说明](./README_zh.md#7-3%E7%89%88%E6%9D%83%E8%AF%B4%E6%98%8E)\n\n----\n\n[8. 招募](./README_zh.md#8%E6%8B%9B%E5%8B%9F)\n\n[9. 致谢](https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README_zh.md#9%E8%87%B4%E8%B0%A2)\n\n----\n\n\n# 2.0正式版 - 说明文档\n\n#### 0.系统截图\n\nMacOS_Mojave主题桌面截图\n\n![macos](./images/macos1.jpg)\n\n无桌面加强版Web管理界面\n\n![loginUI](./images/ui1.png)\n\n无桌面加强版Web管理界面\n\n![WebUI](./images/ui2.png)\n\n无桌面加强版Web管理界面\n\n![Docker](./images/ui3.png)\n\n无桌面加强版Web管理界面\n\n![UI SHELL](./images/uishell.png)\n\nCecOS CaaS 容器云\n\n![CaaS](./images/caas.png)\n\nCecOS CaaS 容器云 集群管理\n\n![CaaS Cluster](./images/caas2.png)\n\nMacOS_Mojave主题桌面截图 多媒体支持\n\n![macos](./images/macos2.jpg)\n\n深度(Deepin)桌面截图\n\n![Deepin桌面1](./images/deepin_desktop_min.jpg)\n\n深度(Deepin)桌面截图\n\n![pi4桌面2](./images/p4-2.png)\n\n深度(Deepin)桌面截图\n\n![pi4桌面1](./images/p4-1.jpg)\n\nMacOS_Mojave主题桌面截图 虚拟机图形化管理器\n\n![pi4VMM](./images/vmm.jpg)\n\n----\n\nMacOS_Mojave主题桌面截图 运行 Android App: 刀塔\n\n![pi4Android1](./images/apk0.jpg)\n\nMacOS_Mojave主题桌面截图 运行 Android App: WPS和刀塔\n\n![pi4Android2](./images/apk1.jpg)\n\nMacOS_Mojave主题桌面截图 运行 *WPS* 桌面版\n\n![wps_arm64](./images/wps.jpg)\n\n----\n\n**MacOS_Mojave主题桌面截图：在Qemu中运行Windows Arm桌面版**\n\n![qemu_win_arm_0](./images/win0.jpeg)\n\n*在Qemu中安装 Windows Arm版本*\n\n![qemu_win_arm_1](./images/win1.jpeg)\n\n*Windows Arm版 基地桌面*\n\n![qemu_win_arm_2](./images/win2.jpeg)\n\n*Windows Arm版 系统信息*\n\n![qemu_win_arm_3](./images/win3.jpeg)\n\n*Windows Arm版 运行X86桌面版QQ*\n\n![qemu_win_arm_4](./images/weichat.jpg)\n\n*Windows Arm版 运行X86桌面版微信*\n\n![qemu_win_arm_5](./images/tim.jpg)\n\n*Windows Arm版 运行X86桌面版TIM*\n\n**同时也支持 树莓派 Zero 2 W**\n\n*需要系统或内核（固件）版本 >= 2021-11-11-v2020-2.0-U6-Release (kernelVer:5.10.78-Release-OPENFANS+20211111-v8)\n\n![Pi_Zero_2_W-1](./images/02w1.png)\n\n![Pi_Zero_2_W-2](./images/02w2.png)\n\n----\n\n## 1.系统介绍\n\n别问为什么树莓派要用64位系统，64位和32位有什么差别 ？\n\n因为树莓派CPU支持64位，~~但是官方没有~~ 树莓派官方于2020年5月推出了64位的**测试版**，结果使用的Debian64+Pixel... ，其他的请自行补脑...\n\n本文所发布的所有版本是已在企业生产环境下使用并验证的正式版本，系统经过严格测试，完全兼容树莓派2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W，原生的有线、无线网卡、蓝牙、3D加速均可正常使用，所有系统软件包数量几乎可以媲美X86的版本，系统基于原生 Debian 64位 从头构建（非任何移植版和官改版本），保证原滋原味。\n\n由于和原生树莓派没有关系，所以没有树莓派的相关专有命令（如 raspi-config ，rpi-update 等 ），请自行修改配置文件（ /boot/config.txt ）\n\n为什么选择Debian?\n\n因为树莓派天生和Debian的系统兼容性最好（这离不开Raspbian的功劳，因为Raspbian也是基于Debian构建的，所以树莓派在Debian系下的测试是最完善最充分的，再加上本身Debian系统的强大和稳定，大名鼎鼎的Ubuntu就是基于Debian系最出名和成功的一个发行版）。\n\n本次系统完全不同于之前我们所发布的所有系统(同样也包括之前的64位的Debian )，此次我们全部从头全新构建。在我们的实验室新构建了全新的自动编译和打包、测试系统，同样我们也对系统重新定义了打包流程和调整了所有的相关配置，对内核进行了大量的修改、调整优化和BUG修复，加入了很多新的功能和特性，特别是加入了KVM虚拟化的支持以及重点加强了对Docker的各项特性支持和优化。\n\n**除外，在这次2.0正式版的发布中，我们重新定义和优化了我们自己的专门针对树莓派的交叉编译链工具和编译器，并使用自定义的编译工具重新构建了基础内核以及相关系统模块，大幅度的优化和提高了编译器的编译速度及效率（关于编译链工具及编译器，大家可以参考华为的方舟编译器，有异曲同工之处，我们的编译器主要针对C、C++、G++、ASM、NM、ld、CMAKE、Glib库等底层编译工具进行了优化：专门针对树莓派的ARM aarch64 A53及A72 的 ARM-v8a进行了定制的针对性优化，包括编译硬件架构的指令集等）。**\n\n2019年6月20日，树莓派基金会发布了全新的第四代树莓派单板机4B，我们在第一时间托人从树莓派官方英国剑桥全球专卖店拿到了4代4G的单板机。\n\n- **2019年7月6日，历时半个月的努力，OPENFANS和树莓派爱好者基地联合发布了新的Debian-Pi-Aarch64 2.0系统。**\n\n- **这是全球发行的第一个同时支持树莓派全系64位硬件的64位系统!!!（包括：2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W）**\n\n新的2.0正式版开启了全系的3D加速支持（通过FKMS实现），正式引入**OPENFANS的容器云管理平台** (CecOS CaaS，基于开源的Portainer构建)，较1.0系统将更为完善和强大！\n\n秉承我们OPENFANS和树莓派爱好者基地联合发布的Debian-Pi-Aarch64系统一直以来的优良传统！\n\n系统全面兼容树莓派全线64位CPU的单板机：2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W，并仍然继承1.0稳定版的全部特性。\n\n----\n\n### 1-1.系统环境（版本介绍）\n\n● **基础系统（无桌面基础版）**\n\n```\n标准基础系统镜像，没有X-WINDOWS桌面环境。\n**镜像名称：OPENFANS-Debian-Buster-Aarch64-XXXXXX.img\n```\n\n● **基础系统Plus++（无桌面加强版）**\n\n```\n在标准基础系统之上，加入了可视化的WebUI管理界面支持。\n**镜像名称：OPENFANS-Debian-Buster-Aarch64-XXXXXX-plus++.img\n```\n\n● **MacOS_Mojave主题定制桌面（全功能版）**\n\n```\n在标准基础系统之上基于XFCE深度定制的树莓派爱好者基地的独家系统镜像，具备所有系统的全部功能！！\n**镜像名称： OPENFANS-Debian-Buster-Desktop-Aarch64-XXXXXX.img\n```\n\n● **深度(Deepin)桌面**\n\n```\n基于我们自己的基础系统镜像，移植了完整的深度Deepin 15.5专业版桌面，\n这是目前第一个基于完整的Debian Aarch64架构而构建的适配于树莓派3B/3B+/3A/4B/CM3/CM4的64位深度ARM64镜像。\n**镜像名称：OPENFANS-Deepin-Professional-Desktop-Aarch64-XXXXXX.img\n```\n\n● **固件升级包**\n\n```\n一般命名规则方式为(以 \"upkg\" 开头)：\nupkg-xxxx(年)-xx(月)-xx(日)-vxxxx-x.x-zip/zip.xz\n```\n\n----\n\n### 1-2.系统环境（系统相关）\n\n2.0正式版使用**ext4**文件系统，默认使用清华源，基于 **Debian Buster 10 Arm64** 构建。\n\n**2.0正式版暂时不支持从其他任何版本升级而来，需要全新安装。**\n\n### 1-3.各版本功能比较\n\n|项目|无桌面基础版|无桌面增强版|桌面全功能版|深度桌面|\n|---|---|---|---|---|\n|KVM硬件虚拟化支持|★|★|★|★|\n|虚拟机图形化控制端|X|X|★|X|\n|Docker容器支持|☆|★|☆|☆|\n|CecOS CaaS容器云支持|☆|☆|☆|X|\n|WebGUI管理平台|X|★|★|X|\n|Web SSH 客户端支持|★|★|★|★|\n|标准虚拟机套件|★|★|★|X|\n|宝塔虚拟机套件|★|★|★|X|\n\n----\n\n**(1)说明：**\n\n**★ ：** 表示支持，并以默认启用，可直接使用。\n\n**☆ ：** 表示支持，但默认未启用该服务，需要用户手动启动。（关于如果启用相关服务，在本文档中有说明。）\n\n**X ：** 表示不支持。\n\n**(2)服务开关：**\n\nDocker容器\n\n```\n手动开启：systemctl start docker.service\n手动停止：systemctl stop docker.service\n启用开机启动：systemctl enable docker.service\n禁用开机启动：systemctl disable docker.service\n```\n\nCecOS CaaS容器云（服务端口：8443）\n\n```\n手动开启：systemctl start cecos-caas.service\n手动停止：systemctl stop cecos-caas.service\n启用开机启动：systemctl enable cecos-caas.service\n禁用开机启动：systemctl disable cecos-caas.service\n```\n\nWebGUI管理平台（服务端口：9090）\n\n```\n手动开启：systemctl start cockpit.socket\n手动停止：systemctl stop cockpit.socket\n启用开机启动：systemctl enable cockpit.socket\n禁用开机启动：systemctl disable cockpit.socket\n```\n\nWeb SSH客户端（服务端口：4200）\n\n```\n手动开启：systemctl start shellinabox.service\n手动停止：systemctl stop shellinabox.service\n启用开机启动：systemctl enable shellinabox.service\n禁用开机启动：systemctl disable shellinabox.service\n```\n\n----\n\n### 1-4.部分系统性能测试结果\n\n#### 1.0版本与同类64位对比测试\n\n一个不完全的测试结果，只是理论数据，仅供参考：\n\n使用 Ext4 标准文件系统和 树莓派3B+ 的 UnixBench 测试结果（和同类Debian Aarch64系统相比）：\n\n* **单线程：**\n\n![x1](/images/u1.JPG)\n\n* **多线程：**\n\n![x4](/images/u4.JPG)\n\n* **整体评分：**\n\n![all](/images/uall.JPG)\n\n综合整体性能全面超越对比测试系统的2~3倍以上，部分指标甚至达到了10倍以上，1000%的提升。\n\n- 1.0版本与树莓派官方32位系统测试\n\n近来，树莓派官方做了不少优化工作，现在的系统对比以前的32位系统有了较大的提升，但是由于32位原生的架构限制，与64位系统性能差距仍然较大。\n\n**附：** 树莓派爱好者基地**Debian Pi Aarch64 64位 1.0版本**系统与树莓派官方**Raspbian 32位**性能对比测试\n\n*Sysbench 0.4.12 Result：*\n\n| **测试项目** | **ARM32/EXT4** | **ARM64/F2FS** | 测试单位：**时间** / 越**小**越好 |\n| --- | --- | --- | --- |\n| **系统信息** | 2018-11-13-Raspbian | 树莓派爱好者基地64位U8版 | 提升倍数 |\n| **CPU单线程** | 119.2072 | 9.8725 | 12.07 |\n| **四线程** | 299.5217 | 24.6616 | 12.15 |\n| **八线程** | 299.5824 | 24.6789 | 12.14 |\n| **内存随机** | 1.2625 | 0.8751 | 1.44 |\n| **内存连续** | 1.5803 | 1.1583 | 1.36 |\n| **文件连续读写** | 6.1621 | 2.2928 | 2.69 |\n| **文件随机读写** | 484.812 | 6.3527 | **76.32** |\n| **互斥锁性能** | 0.0117 | 0.0081 | 1.44 |\n\n最大性能差距倍数： **76.32**\n\n平均性能差距倍数： **14.95**\n\n- 1.0版本测试对比统计图\n\n![sysbench](./images/sysbench_result.png)\n\n\n#### 最新2.0测试版与树莓派官方32位系统测试\n\n测试硬件：树莓派4B\n\n*Sysbench 0.4.12 Result：*\n\n| **测试项目** | **ARM32/EXT4** | **ARM64/EXT4** | 测试单位：**时间**/越**小**越好 |\n| --- | --- | --- | --- |\n| **系统** | 2019-06-20 raspbian-buster | 2019-07-06 树莓派爱好者基地64位 2.0 Beta版 | 提升倍数 |\n| **单线程** | 92.7292 | 6.7406 | 13.757 |\n| **四线程** | 231.6591 | 16.8172 | 13.775 |\n| **八线程** | 231.5002 | 16.8282 | 13.757 |\n| **内存随机** | 2.4225 | 0.6086 | 3.980 |\n| **内存连续** | 2.5631 | 0.9267 | 2.766 |\n| **文件连续读写** | 6.3636 | 1.8859 | 3.374 |\n| **文件随机读写** | 627.719 | 10.6036 | 59.199 |\n| **互斥锁性能(4096)** | 0.0206 | 0.0081 | 2.543 |\n\n最大性能差距倍数： *59.199*\n\n平均性能差距倍数： *14.144*\n\n- 2.0版本测试对比统计图 *(统计单位：时间，越小越好)*\n\n![sysbench](./images/sysbench_result2.png)\n\n----\n\n## 2.主要特性说明\n\n### 2-1.Web可视化管理\n\n![web manage](./images/ui2.png)\n\n全平台Web可视化管理操作（仅桌面版和无桌面增强版提供支持）\n\n全新64位2.0系统上提供了Web管理和操作的支持，至此，全系统平台均实现了可视化的操作管理，不管是标准的桌面图形，还是无桌面的系统(增强版)，Debian Pi Aarch64 正式全面开启可视化时代。\n\nWeb管理支持：\n\n```\n1.  新增全功能版的支持\n2.  全面开启Web管理时代，省去终端工具的麻烦，Anytime,Anywhere, 直接使用浏览器管理\n3.  默认开启容器服务，开箱即用 (2.0正式版请通过 CecOS CaaS 容器云 管理和使用容器)\n4.  集成WEB界面的全方位监控\n5.  支持WEB界面查看系统状况、硬件信息、情况等信息\n6.  支持WEB界面设置主机名\n7.  支持WEB界面设置主机域\n8.  支持WEB界面设置主机时间、NTP服务器，更新方式\n9.  支持WEB界面关机、重启\n10. 支持WEB界面系统日志管理\n11. 支持WEB界面系统存储及相关外设管理，在线分区、挂载设备等功能\n12. 支持WEB界面网络管理\n13. 支持WEB界面系统账户管理\n14. 支持WEB界面系统服务管理\n15. 支持WEB界面系统更新管理\n16. WEB界面集成Shell终端，可以在网页上直接进行终端相关操作\n17. 支持跨节点和统一管理：一个界面管理多台设备，大幅度提升管理和工作效率\n18. WEB管理通信使用SSL证书加密，保证会话数据的安全性\n```\n\n![shellinabox](./images/shellinabox.jpg)\n\n**WEB SSH** 客户端支持，使用独立的 webshell(ShellinaBox)套件，提供独立的 **web ssh** 登录支持。\n\n### 2-2.QEMU-KVM 虚拟化支持\n\n这是原生Aarch64架构的QEMU虚拟机，支持KVM硬件加速。\n\n我们重新编译了KVM的二进制软件包，解决了在KVM硬件加速环境下 qemu-system-aarch64 的诸多BUG：\n\n开启KVM硬件加速后系统默认版本虚拟机无法运行，无法安装系统，等等...\n\n我们在编译内核时加入了对KVM虚拟机的支持，直接支持全虚拟化的方式运行，添加了支持原生的KVM虚拟硬件内核模块的支持，相关的主要内核模块如下：\n\n```\n1.  virtio //标准虚拟磁盘\n2.  virtio-scsi //虚拟scsi磁盘\n3.  virtio-blk //磁盘直通\n4.  virtio-blk-scsi //scsi模式磁盘直通\n5.  virtio-net //虚拟网卡\n6.  virtio-balloon //内存气泡\n7.  virtio-hw-random //虚拟随机数硬件\n8.  virtio-console //虚拟终端\n9.  virtio-input //虚拟输入设备\n10. virtio-crypto-device //虚拟加密设备\n12. virtio-drm-gpu //虚拟显卡\n13. virtio-9p //目录共享\n14. vfio //设备直通\n15. vhost //主机数据交互\n16. vhost-net  //主机网络数据交互\n...\n```\n\n**什么是KSM ？**\n\nKSM的原理，是多个进程中，Linux将内核相似的内存页合并成一个内存页。\n\n这个特性，被KVM用来减少多个相似的虚拟机的内存占用，提高内存的使用效率由于内存是共享的，所以多个虚拟机使用的内存减少了，这个特性，对于虚拟机使用相同镜像和操作系统时，效果更加明显\n\n为了更好的优化虚拟机的内存使用效率，我们所有系统的内核默认都支持KSM。\n\n目前2.0系统正式版已全部默认开启虚拟化支持，图形桌面提供可视化的“Virt-Manager”虚拟机管理程序。\n\n### 2-3.Docker 容器支持\n\n大名鼎鼎的Docker这里就不做过多介绍了，本次我们重新编译内核，加入了对Dcoker全特性的各项支持，这可能是目前在 **树莓派Aarch64位系统架构** 下对Docker特性支持最完善的版本 ，其他的绝大多数版本都还是32位系统配上32位docker，原生的64位系统内核缺少了很多对Docker特性的内核支持。\n\n就连大名鼎鼎的32位树莓派Docker系统 **hypriot** 最新版也不能完整支持 **Dcoker Swarm** 。\n\n由于 **Hypriot** 不支持 **bridge vlan/vxlan netfiler** , 你将得到以下错误信息:\n\n```\nreexec to set bridge default vlan fialed exit status 1\n```\n\n这将导致不能完全正常使用Dcoker Swarm集群，网络缺少相关特性支持，会存在一些功能缺失的问题。\n\n你可以通过 **systemctl status containerd** 和 **systemctl status docker** 以及查看日志的方式在原生的64位ARM系统上发现不少错误和警告信息，拒不完全统计，原生的系统内核至少包括以下特性的缺失：\n\n```\n 1. cgroup memory limit\n 2. cgroup swap limit\n 3. cgroup rt period\n 4. cgroup rt runtime\n 5. cgroup pid support\n 6. cgroup memory sysfs\n 7. cgroup rdma\n 8. cgroup perf\n 9. cgroup bridge vlan/vxlan\n10. cgroup netfiler\n11. cgroup net prio\n12. cgroup cfs bandwidth limit\n13. bridge vlan ilter\n14. ipvs\n15. ipvs ipv6\n16. memory sysfs\n17. kernel KSM\n...\n```\n\n**Docker Compose**\n\nDocker官方没有提供基于arm的docker-compose可运行二进制程序，因此我们重新编译并提供了可运行的aarch64位二进制程序，现在默认已加入到系统镜像中，你可以直接使用。\n\n### 2-4.AUFS文件系统支持\n\n***注意：*** **2.0 U3 (包括U3版本)** 版本后将停止支持AUFS！\n\n**什么是AUFS文件系统 ？**\n\nAUFS的全称是 advanced multi-layered unification filesystem ，主要功能是把多个文件夹的内容合并到一起，提供一个统一的视图，主要用于各个Linux发行版的livecd中，以及docker里面用来组织镜像。\n\nAUFS曾是Docker默认的首选存储驱动，它非常的稳定、有很多真实场景的部署、很强的社区支持，它有以下几个主要优点：\n\n```\n1.极短的容器启动时间\n2.有效的存储利用率\n3.有效的内存利用率\n```\n\n但由于它没有包含在Linux内核主线中，所有很多Linux发行版并不支持AUFS。\n\n最新的Docker默认使用的是更快最新的OverlayFS文件系统 ，本系统保持此官方设置的默认值。\n\n**我们是否需要使用AUFS ？**\n\n由于Docker的镜像文件使用的文件系统是分成多层存储的，OverlayFS只支持2层，使用同样的镜像层时会复制多个副本，而且占用更多的空间和I/O，而对于AUFS则不一样，它同样提供使用多层存储的功能并共享数据，Docker使用AUFS的 CoW（Copy-on-Write）写时复制技术来实现镜像共享和最小化磁盘空间的使用。\n\n对于树莓派这样存储空间较小的设备而言，使用AUFS文件系统能更好的利用我们有限的存储空间资源并降低I/O消耗。\n\n为了用户能够根据自己的情况自由的选择和使用OverlayFS还是AUFS，我们在内核中默认加入了对AUFS模块的支持。\n\n由于AUFS并不在原生的Linux内核支持中，所以我们通过AUFS的PATH，为主线4.19的内核加入了AUFS的内核模块代码并重新编译，现在系统启动会自动加载AUFS模块，无需人工干预，即可直接使用。\n\n### 2-5.TCP加速\n\n内核默认已开启 TCP BBR 拥塞控制算法。\n\n**什么是 TCP BBR ？**\n\n我们还是简答来说 TCP BBR 解决了什么问题吧:\n\n```\n1. 在有一定丢包率的网络链路上充分利用带宽，非常适合高延迟、高带宽的网络链路\n2. 降低网络链路上的 buffer 占用率，从而降低延迟，非常适合慢速接入网络的用户\n```\n\n简单来说使用 TCP BBR 拥塞控制算法能够在一定程度上提升TCP传输速度和效率，优化网络传输。\n\n**如何关闭**:\n\n编辑 “/etc/sysctl.conf” 文件，执行命令 \"sysctl -p\" 查看结果，看不到以下注释掉的内容，代表关闭成功。\n\n注释掉以下2行内容： (前面加上#即可)\n\n```\nnet.core.default_qdisc=fq\nnet.ipv4.tcp_congestion_control=bbr\n```\n\n### 2-6.内存及交换优化（算法级）\n\n- **支持：Swap交换分区**\n\n本次新版系统默认增加了对Swap交换缓存的支持，以缓解系统内存不足所造成的死机问题，大大提升了可执行大容量内存需求应用程序的支持和效率，用户无需手动创建系统Swap，我们的系统在安装完成后将自动完成并初始化Swap，Swap文件或分区的位置可以通过查看系统挂载配置文件 /etc/fstab 来调整。\n\n- **支持：zSWAP虚拟内存压缩**\n\n本次新版系统内核默认已加入了 **zSWAP** 虚拟内存压缩功能，可为将要交换的页面提供压缩回写缓存，默认占用物理内存上限为系统总内存的 **25%** 。\n\n**zSWAP的好处**：\n\n当内存页将要交换出去时，zSWAP不将其移动到交换设备，而是对其执行压缩，然后存储到系统RAM内动态分配的内存池中，回写到实际交换设备的动作则会延迟，甚至能完全避免，从而显著减少Linux系统用于交换的I/O。对于树莓派这样依托于TF卡的设备，本来I/O就不是很高，减少用于交换的I/O的操作就意味着提高系统性能，把I/O用在系统应用程序等更需要的其他调度上去。\n\n在使用Swap文件/分区的场景下，由于减少了对Swap文件/分区的I/O操作，可以提升TF的使用寿命。\n\nzSWAP并不虚拟一个块设备，而是hook到普通的Swap代码里，在实际发生写入到磁盘/从磁盘读取的操作前，先利用自己管理的内存进行数据的换出/换入，内存不够用以后再使用传统的Swap文件/分区。所以zSWAP适用于本身已经有交换分区的系统，以及树莓派这样本身内存不大的硬件设备。\n\n**为什么不使用zRAM？**\n\nzSWAP同时使用内存和交换分区，并根据实际情况自动调整所占内存的大小，所缓存的数据在系统内存不够用时会自动存入到Swap文件/分区中，大大提高了系统swap交换的效率，更充分的利用了内存空间资源又避免了系统出现内存不够的情况，而zRam完全使用内存来进行操作和存储数据，完全占用内存，一般用在大内存的场景，这对于内存很小的树莓派来说就不合适了。\n\n**zSWAP在本系统中使用的内存分配器和数据压缩算法** ：\n\n```\n内存分配器zpool框架： smalloc、zbud、z3fold\n```\n\n现实表明，zsmalloc虽然压缩率高，但是算法复杂，还需要额外的线程负责内存整理，耗费更多的cpu时间。\n\n而zbud实现简单，以内存page为单位的存储又不会产生内存碎片，但是压缩率低，最高只有2倍，不满足小内存系统的实际需求。\n\n因此，索尼开发了z3fold内存分配器，和zbud的实现完全一致，只是每个page可以存储3个compressed page，最高压缩率有 3 倍，逼近zsmalloc的4倍，该技术在xperia xzp的中使用，使4GB的手机获得超过4GB内存的体验。\n\n我们在系统中选用了z3fold算法，在系统 /boot/cmdline.txt 中可以看到配置：\n\n```\nzswap.enabled=1 zswap.zpool=z3fold zswap.compressor=lz4 zswap.max_pool_percent=25\n```\n\n**压缩算法**\n\nLinux有很多压缩算法：lz,lzo,xz,gzip,lzma...\n\n我们这里采用了拥有极高压缩速度和较高压缩率的lz4 ，lz4相对于其他压缩算法而言，压缩率不是最高的，但速度确是最快的，在已采用 z3fold 算法的情况下，结合树莓派本身的性能特点和实际的测试，在拥有不错的压缩率的情况下，速度对于树莓派来说才是最重要的（考虑到本身CPU性能开销和内存大小的情况）。\n\n### 2-7.MacOS_Mojave主题桌面\n\n![desktop](./images/apk0.jpg)\n\n默认桌面主题使用仿 **MacOS Mojave** 主题的桌面。\n\n### 2-8.CecOS_CaaS容器云\n\n![caas-main](./images/caas.png)\n\n![caas-cluster](./images/caas2.png)\n\n我们在2.0正式版的系统中移除了原WebUI管理界面的容器管理支持，而是用了OPENFANS基于开源项目\"Portainer\"并专门针对国人进行了再次深度定制的二次开发、提供的 **CecOS CaaS 容器云** ，这是 **完整的容器云平台** 的支持，完整具备了管理整个 **Docker Swarm** 集群环境的所有功能！\n\n包括但不限于对 **容器节点、集群、存储、网络、镜像仓库、模板、堆栈、任务计划、用户组、权限控制** ... 等太多太多的功能支持！！\n\n### 2-9.其他特性\n\n- 支持3D加速，默认所有桌面环境已开启\n\n- 新版2.0特性太多，这里就不再一一例举说明，以上只列举主要特性，其他特性请老铁们自行发掘 :)\n\n----\n\n## 3.使用说明\n\n### 3-1.系统初始化说明\n\n系统开机将自动扩展根分区，然后会自动进行相关配置，待完成后方可正常使用，此过程中系统将 **自动重启3次** 。\n\n### 3-2.账户及密码\n\n系统默认账户：**pi** ，默认密码：**raspberry**\n\n默认账户pi账户支持ssh登录，root账户密码请登陆后使用命令 **“sudo passwd root”** 执行设置，\n\n或使用命令 **“sudo -i”** 来切换到root用户。\n\n### 3-3.Web登录接口说明\n\n```\n1.Web可视化管理界面\n登录地址 https://你树莓派的IP地址:9090\n说明：请使用系统默认账户pi登录\n\n2.WEB SSH 客户端 入口界面\n登录地址 https://你树莓派的IP地址:4200\n说明：使用具有控制台登录权限的帐户登录，例如：pi\n\n3.CecOS CaaS 容器云管理平台 登录界面\n登录地址 https://你树莓派的IP地址:8443\n说明：默认管理账户 admin , 默认密码：password 。请登录后立即修改默认密码！！\n\n```\n\n### 3-4.预配置项\n\n系统提供网络和自动开机任务的预配置，相关配置文件的路径和对应关系如下：\n\n| 预配置项 | 预配置文件路径 | 对应链接到的系统文件路径 |\n| --- | --- | --- |\n| 无线网络 | /boot/wpa_supplicant.conf | /etc/wpa_supplicant/wpa_supplicant.conf |\n| 有线网络 | /boot/interfaces | /etc/network/interfaces |\n| DHCP客户端 | /boot/dhclient.conf | /etc/dhcp/dhclient.conf |\n| 自定义启动脚本 | /boot/rc-local | /etc/rc.local |\n\n### 3-5.无线配置说明\n\n桌面化环境可以登录到桌面环境后通过图形化界面设置，这里提供配置文件的修改方式。\n\n如果桌面化环境想使用修改配置文件的方式连接无线网络，请查看[此处](./README_zh.md#3-161%E5%9B%BE%E5%BD%A2%E5%8C%96%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%9E%E6%8E%A5%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C)说明。\n\n修改 **/boot/wpa_supplicant.conf** 文件\n\n```\n## To use this file, you should run command \"systemctl disable network-manager\" and reboot system. \n## (Do not uncomment this line and above!) ##\n## 除第一行外，第一行可以删除，去掉以下每行只有单个“#”的注释符号，两个“#”注释符号的行位说明内容，请不要修改\n## 中文内容是注释，删除或不要取消前面的“#”符号\n\n## country是设置无线的国家地区，CN是中国\n#country=CN\n#ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n#update_config=1\n\n## 下面的 \"WIFI 1\" 、\"WIFI 2\" 代表多个无线网络的设置\n## 除非你要设置多个无线网络，否则只需要设置 \"WIFI 1\" 这部分的设置即可\n## WIFI 1 (Do not uncomment this line!)\n\n## 除了取消需要生效的内容注释以外，以下仅需要修改 \"ssid\" 和 \"psk\" 后面引号内的内容即可\n## ssid是你的无线Wifi名称，psk是你无线Wifi的密码\n#network={\n#    ssid=\"your-wifi1-ssid\"\n#    psk=\"wifi1-password\"\n#    priority=1\n#    id_str=\"wifi-1\"\n#}\n\n\n## WIFI 2 (Do not uncomment this line!)\n\n#network={\n#    ssid=\"your-wifi2-ssid\"\n#    psk=\"wifi2-password\"\n#    priority=2\n#    id_str=\"wifi-2\"\n#}\n```\n\n**无线地区码设置：**\n\n编辑 **/etc/default/crda** 文件，编辑 **REGDOMAIN=** 后面的内容，默认已设置为 **“CN”中国** ，一般情况下无需设置。\n\n**附无线常用地区码：**\n\n```\nAU 澳大利亚\nCA 加拿大\nCN 中国\nGB 英国\nHK 香港\nJP 日本\nKR 韩国\nDE 德国\nUS 美国\nTW 台湾\n```\n\n### 3-6.有线网络配置\n\n修改 **/boot/interfaces** 文件\n\n```\n# interfaces(5) file used by ifup(8) and ifdown(8)\n# Include files from /etc/network/interfaces.d:\nsource-directory /etc/network/interfaces.d\n## Used dhcp ip address set eth0 inet to dhcp,\n## or used static ip address set eth0 to static\n## and change other ip settings.\n## If you wanna let settings to take effect,\n## uncomment symbol in front.\n\n#auto eth0\n#allow-hotplug eth0\n\n#iface eth0 inet dhcp\n#iface eth0 inet static\n#address 172.16.192.168\n#netmask 255.255.255.0\n#gateway 172.16.192.1\n#dns-nameservers 8.8.8.8\n```\n### 3-7.开机自定义启动脚本\n\n系统支持自定义任务自启动脚本，可以在系统启动前预先配置。\n\n编辑脚本文件 **\"/boot/rc-local\"** ，在 **“exit 0”** 前加入自定义的脚本内容。\n\n### 3-8.深度桌面禁止自动升级的说明\n\n**在版本v2019-11-10之后(也包括版本2019-11-10在内)，深度系统已经支持升级。**\n\n由于 Deepin系统和上游仓库存在一定的兼容性问题(deepin本身的问题)，除非你清楚自己需要做什么，否则强烈建议不要使用以下的任何一条命令或者其他任何会使得系统进行升级的操作！！！所有的Deepin版本系统都需要注意，包括1.0和2.0的所有Deepin版本!\n\n```\napt upgrade\napt-get upgrade\napt dist-upgrade\napt-get dist-upgrade\n```\n\n**PS：**\n\n*部分的软件安装由于deepin本身兼容性的问题，可能存在BUG造成系统无法启动或其他任何未知问题，由于软件太多我们无法一一测试，欢迎大家反馈，建议通过源码安装。*\n\n*深度软件商店的软件是由深度提供的，非我们提供，目前深度软件商店暂时没有提供对arm64的软件支持，如有任何需求，请到深度官方论坛寻求帮助。*\n\n*这里我们强烈建议使用我们提供的定制的 MacOS_Mojave主题桌面版本。*\n\n### 3-9.中文环境下TTY显示中文字体(非远程方式)\n\n注意：远程登录的方式无视这个问题，不会存在乱码的问题，仅在通过本地显示器或串口连接使用本地终端时由于Linux内核本地的标准TTY不支持显示中文字体，会显示乱码时才需要执行相关操作。\n\n我们需要安装fbterm扩展支持，在连网环境下执行如下操作：\n\n```\n## 安装fbterm\nsudo apt update; sudo apt install fbterm -y\n## 添加登录用户到video组\nsudo adduser root video ; sudo adduser pi video \nsudo adduser 你自己创建的其他用户名(若果有) video\n## 然后每次需要显示时执行以下命令即可（第一次需要等待一些时间）：\nfbterm\n```\n\n### 3-10.macOS Mojave主题桌面支持Web界面VNC远程桌面访问\n\n![web vnc](./images/web-vnc.jpg)\n\nmacOS Mojave主题桌面环境(全功能版) 在 *2019-11-17*(包括) 之后的版本默认情况下已支持Web界面的VNC远程桌面访问。\n\n```\n默认的VNC访问密码为: raspberry\n默认的WEB VNC访问地址为: http://你树莓派的IP地址:5901\n默认的客户端访问地址为: 你树莓派的IP地址:5900\n```\n\n您不能使用Web VNC界面和客户端在同一时间连接到同一个vnc服务器。\n\n如果要使用客户端连接vnc服务器，建议您使用RealVNC客户端，您可以单击 [此处](https://www.realvnc.com/en/connect/download/viewer/) 下载RealVNC客户端。\n\n#### Web VNC远程桌面使用说明\n\n访问系统默认的VNC有两种方法：\n\n● 连接了真实的显示器\n\n```\nVNC已默认启用，您无需执行任何操作。\n```\n\n● 未连接任何显示器\n\n```\n默认情况下已启用VNC服务，但如果未连接到任何真实的显示器，则应使用虚拟显示的支持，运行命令：\n\"virtual-monitor-enable\"\n以启用\"虚拟显示器模式\"，此后系统将自动重启并完成设置。\n```\n\n#### 重要\n\n```\n如果启用了\"虚拟显示器模式\"，则不能同时连接到真实的显示器(否则真实显示器将没有显示)，\n如果启用了\"虚拟显示器模式\"，请运行命令：\"virtual-monitor-disable\"\n以禁用\"虚拟显示器模式\"来恢复正常。\n```\n\n**注意：系统默认未开启 \"虚拟显示器模式\"**\n\n#### Commands for default VNC\n\n**virtual-monitor-enable**\n\n```\n启用\"虚拟显示器模式\"，在没有外接真实显示器的时候使用。\n此后系统将自动重启并完成设置。\n```\n\n**virtual-monitor-disable**\n\n```\n启用\"虚拟显示器模式\"，以连接到真实显示器的时候使用(系统默认模式)。\n此后系统将自动重启并完成设置。\n```\n\n**enable-vnc**\n\n```\n启用VNC服务(系统默认已开启)。\n此后系统将自动重启并完成设置。\n```\n\n**disable-vnc**\n\n```\n禁用VNC服务。\n此后系统将自动重启并完成设置。\n```\n\n**vnc-passwd**\n\n```\n修改默认的VNC访问密码。\n```\n\n----\n\n### 3-11.切换声音输出通道\n\n2.0系统默认声音使用 **HDMI** 输出\n\n切换声音输出的命令：\n\n```\namixer cset numid=3 2\n这里将输出设置为2，也就是HDMI。\n将输出设置为1将切换到模拟信号（也就是耳机接口）。\n默认的设置为0，代表自动选择\n```\n\n修改完音频设置后，需要重新启动Raspberry Pi，以使更改生效。\n\n**如果仍然无法通过HDMI接收声音:**\n\n在极少数情况下，有必要进行编辑config.txt以强制使用HDMI模式(与不发送声音的DVI模式相对)。\n\n您可以通过编辑 **/boot/config.txt** 文件并设置 **hdmi_drive=2** ，然后重新启动以使更改生效。\n\n### 3-12.32位软件armhf支持\n\n```\ndpkg --add-architecture armhf\napt update\n## 需要先安装32位的\"libc6:armhf\"的基础库\napt install libc6:armhf\napt install 其他软件包名:armhf\n## 安装32位软件请在包的名称后加入后缀 \":armhf\"\n```\n\n### 3-13.启用和运行Docker服务\n\n无桌面基础版和桌面全功能版默认没有启用 **Docker服务**，需要手动启动。\n\n```\n开机自动启动Docker服务\nsystemctl enable docker.service\n\n启动Docker服务\nsystemctl start docker.service\n\n######\n\n停止Docker服务\nsystemctl stop docker.service\n\n禁止Docker服务开机启动\nsystemctl disable docker.service\n\n```\n\n### 3-14.启用CecOS-CaaS容器云\n\n无桌面基础版和桌面全功能版默认没有启用 **CecOS CaaS容器云** 服务，需要手动启动。\n\n**注意：要启用CecOS CaaS容器云服务，必须要先启用和启动docker服务！！**\n\n```\n开机自动启动 CecOS CaaS容器云 服务\nsystemctl enable cecos-caas.service\n\n启动 CecOS CaaS容器云 服务\nsystemctl start cecos-caas.service\n\n######\n\n停止 CecOS CaaS容器云 服务\nsystemctl stop cecos-caas.service\n\n禁止 CecOS CaaS容器云 服务开机启动\nsystemctl disable cecos-caas.service\n```\n\n### 3-15.启用和退出Docker集群\n\n```\n#初始化并加入一个 Docker Swarm集群\ndocker swarm init\n\n#查看集群节点状态\ndocker node ls\n\n#退出Docker Swarm集群\ndocker swarm leave --force\n```\n\n### 3-16.FAQ常见问题说明\n\n#### 3-16.1图形化桌面环境使用配置文件连接无线网络\n\n图形化桌面环境使用配置文件连接无线网络，在修改完 **“/boot/wpa_supplicant.conf”** 文件后，为了保证良好的网络兼容性，请执行以下操作：\n\n使用root用户身份执行：\n\n```shell\nsystemctl disable NetworkManager\n```\n\n然后执行：\n\n```shell\nsed -i  \\\n's/sudo systemctl restart NetworkManager/## sudo systemctl restart NetworkManager/g' \\\n/home/pi/.xsessionrc\n```\n\n最后重启即可。\n\n#### 3-16.2使用APT命令安装软件包时版本不匹配\n\n**问题描述：**\n\n*在使用命令apt在线安装deb包时，遇到找不到匹配版本的问题，如：*\n\n```\nThe following packages have unmet dependencies:\n package-name-1 : Depends: package-name-2 ( >= x.x.x-xxx-2 ) but x.x.x-xxx-1 is to be installed\n              Recommends: package-name-3 but it is not going to be installed\nE: Unable to correct problems, you have held broken packages.\n```\n\n亦或者是：\n\n```\n下列软件包有未满足的依赖关系：\n package-name-1 : 依赖: package-name-2 ( >= x.x.x-xxx-2 ) 但是 x.x.x-xxx-1 正要被安装\n               依赖: package-name-3 但是它将不会被安装\nE: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。\n```\n\n**问题根源：**\n\n由于我们的系统引入了部分较新的上游软件包所致。\n\n**解决办法：**\n\n临时启用上游软件源**sid**仓库即可，在你的**apt**命令前加上`sid-used sudo`命令：\n\n例如：`sid-used sudo` **apt install package-name**\n\n#### 3-16.3 Chromium浏览器界面显示错误\n\n**问题根源：**\n\n您可能会在 **版本20200615 U3** 上看到此问题，因为我们更改了mesalib，应该使用另一种方式设置Chromium。\n\n**解决办法：**\n\n运行命令：\n\n```\nsudo sed -i  \\\n's/\"hardware_acceleration_mode\":{\"enabled\":true},/\"hardware_acceleration_mode\":{\"enabled\":false},/' \\\n/home/pi/.config/chromium/Local\\ State\n```\n\n然后重新打开您的Chromium浏览器。\n\n### 3-16.4 蓝牙音频连接丢失\n\n**问题根源：**\n\nPi的蓝牙设备在使用alsa和Pulseaudio时与某些硬件存在兼容性问题。\n\n**解决办法：**\n\n禁用Bluealsa服务，只需将pulseaudio用于蓝牙音频。运行以下命令并重新引导：\n\n```\nsystemctl mask  bluealsa.service\n```\n\n**注意**： 这里你必须使用 **\"mask\"** 禁用服务，而不是 **\"disable\"** !!\n\n#### 3-16.5 USB大容量设备启动问题\n\n如果你遇到了USB大容量设备启动问题，请点击[此处](/docs/pi4-usb-boot-problems.md)查看解决办法。\n\n#### 3-16.6 升级 Docker-CE\n\n以管理员root用户执行以下命令:\n\n```\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\necho \"deb https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian \\\n      $(lsb_release -cs) stable\" | \\\n      sudo tee /etc/apt/sources.list.d/docker.list\napt update\napt upgrade \n```\n\n#### 3-16.7 桌面版系统单声道改为立体声输出\n\n编辑文件 **/usr/share/pulseaudio/alsa-mixer/profile-sets/default.conf**\n\n在下面的内容每行最前面添加 **\";\"** 符号，以注释掉以下内容： \n\n```\n[Mapping analog-mono]\ndevice-strings = hw:%f\nchannel-map = mono\npaths-output = analog-output analog-output-lineout analog-output-speaker analog-output-headphones analog-output-headphones-2 analog-output-mono\npaths-input = analog-input-front-mic analog-input-rear-mic analog-input-internal-mic analog-input-dock-mic analog-input analog-input-mic analog-input-linein analog-input-aux analog-input-video analog-input-tvtuner analog-input-fm analog-input-mic-line analog-input-headset-mic\npriority = 7\n```\n\n下面是注释后的内容：\n\n```\n;[Mapping analog-mono]\n;device-strings = hw:%f\n;channel-map = mono\n;paths-output = analog-output analog-output-lineout analog-output-speaker analog-output-headphones analog-output-headphones-2 analog-output-mono\n;paths-input = analog-input-front-mic analog-input-rear-mic analog-input-internal-mic analog-input-dock-mic analog-input analog-input-mic analog-input-linein analog-input-aux analog-input-video analog-input-tvtuner analog-input-fm analog-input-mic-line analog-input-headset-mic\n;priority = 7\n```\n\n最后重启系统生效。\n\n### 3-17.配套应用程序使用说明\n\n#### 3-17.1 WPS Office ARM64位 桌面版安装说明\n\n至下载仓库的**APP**文件夹，对应下载最新的一键安装包，解压后进入安装包目录，在**已经连接公网的环境下**，\n\n使用**root**用户身份执行以下命令即可：\n\n```\nsudo ./install.sh\n```\n\n**注意：** 仅在 *macOS_Mojave主题定制桌面 (全功能版)* 上通过安装测试 !!!\n\n**仅供测试和学习使用!!!**\n\n#### 3-17.2 腾讯QQ官方Linux桌面版安装说明\n\n确保在连接互联网的情况下以root用户身份运行以下命令：\n\n```\nqq_pkg='linuxqq_2.0.0-b1-1024_arm64.deb' ; \\\ncd ~ ; \\\nwget https://raw.githubusercontent.com/openfans-community-offical/Debian-Pi-Aarch64/master/add-app/$qq_pkg ; \\\napt install ./$qq_pkg -y ; \\\nrm -rf ./$qq_pkg\n```\n\n执行上述操作以后，LinuxQQ桌面版应该安装完毕。\n\n![linux_qq](./images/linux_qq.jpg)\n\n#### 3-17.3 OpenCV 扩展\n\n![opencv-example-4](./images/opencv4.png)\n\n![opencv-example-5](./images/opencv5.png)\n\n![opencv-example-1](./images/opencv1.png)\n\n![opencv-example-2](./images/opencv2.png)\n\n![opencv-example-3](./images/opencv3.png)\n\n**注意**: 该安装包**仅支持**\"Debian-Pi-Aarch64\"的**全功能桌面版**！！其他版本未经测试。\n\n**版本**: 4.5.1\n\n**特征**: 支持硬件GPU编码和加速。\n\n**下载**: 您可以在\"**Debian-Pi-Aarch64**\"百度和MEGA网盘资源的\"***Extra***\"->\"***OpenCV***\"文件夹中找到下载。\n\n**安装**:\n\n下载完软件包后，请确保在**联网**环境下执行以下命令：\n\n```\nsudo apt install -y ./xxxxxx.deb\n```\n\n\"**xxxxxx.deb**\" 是你下载的OpenCV软件包的名字。\n\n执行完上述命令后重启系统，即可完成安装。\n\n#### 3-17.4 PiBox Android Runtime 运行环境\n\n**仅测试！！**\n\n![pibox](./images/pibox_dj.jpg)\n\n**下载地址：**\n\n***百度网盘*** -> ***PIFAN Apps*** -> ***Pibox (Android Box)***\n\n**安装方式：**\n\n解压后运行\"install.sh\"。\n\n**说明：**\n\n1.如果出现**进程\"system\"没响应**的警告, 请选择 **\"等待\"**。\n\n2.已知问题：应用开机启动后第一次打开较慢。\n\n3.要求系统内核版本 >= **\"5.10.82-Release-OPENFANS+20211204-v8\"**。\n\n----\n\n## 4.虚拟机使用说明\n\n虚拟机资源包一般以压缩包的形式发布，执行以下命令安装解压压缩包的支持：\n\n```\napt update ; apt install tar gzip zip unzip bzip2 xz-utils -y\n```\n\n### 4-1标准虚拟机使用说明\n\n默认用户：root (已开通远程权限) ， 密码：raspberry\n\n解压虚拟机资源包后，进入虚拟机的资源包目录，解压虚拟磁盘镜像：\n\n```\nxz -d -k disk.qcow2.xz\n```\n\n会得到一个 **disk.qcow2** 的虚拟磁盘镜像，恢复系统的话可以随时执行上面的命令还原初始硬盘。\n\n**运行虚拟机：**\n\n```\nsudo ./vm_run\n\n## 以上脚本命令默认将以后台的方式运行虚拟机\n```\n\n以前台的方式运行虚拟机：\n\n复制一份 **vm_run** 文件，并将及命名为 **vm_run2** ， 打开 **vm_run2** 文件，删除以下2行的内容：\n\n```\n...  ## 省略的内容\nnohup  \\\n...  ## 省略的内容\n  & \n...  ## 省略的内容\n```\n\n然后，运行 “sudo ./vm_run2” 即可。\n\n**远程登录：**\n\n该虚拟机的22号端口已默认映射到了本机的2222号端口，SSH访问本机的2222号端口即可。\n\n命令示例：\n\n```\nssh -p 2222 root@本机的IP地址\n```\n\n----\n\n### 4-2宝塔虚拟机使用介绍\n\n为了照顾小白和响应群众呼声，我们终于“顺便”把宝塔给你们集成进来了，用的是虚拟机的方式，32位超级干净的定制专为宝塔优化的ARMHF虚拟系统，即使是虚拟机，速度也大幅度强过官方的底板系统（谁用谁知道 ：） -- ）。\n\n来张跑分图：\n\n![宝塔面板](./images/bt_mark.png)\n\n默认安装了所有的软件，版本是相对较稳定的5.9.1版本，仅供自己学习，不得作为商业用途。\n\n**为什么集成宝塔？**\n\n```\n1.小白使用确实方便；\n2.群众呼声太高；\n3.顺便...\n```\n\n**为什么不在64的系统中直接集成？**\n\n```\n1.不是每个人都需要默认集成，太臃肿；\n2.环境构建造成更复杂的兼容性问题；\n3.宝塔对ARM64兼容性不够友好；\n4.宝塔不只是安装那么简单的一件事，里面需要的软件在ARM系统下编译耗时过长；\n5.我们使用中的部分版本组合问题；\n6.不是说宝塔整体不好，至少在ARM64上的兼容性上对小白是个很大的挑战。\n```\n\n**使用方法：**\n\n同标准虚拟机的使用方式一样，解压压缩包，然后进入虚拟机的目录，执行相关操作。\n\n**安装：**\n\n```\nsudo ./install\n```\n\n**启动宝塔虚拟机：**\n\n```\n./bt_run\n```\n\n**关闭宝塔虚拟机：**\n\n为了保证虚拟机的数据同步安全，请按照以下步骤操作：\n\n```\n请ssh登录到虚拟机再执行命令 \" init 0 \" 关闭虚拟机\n\n关闭后，需要在宝塔虚拟机目录下执行 \" ./bt_prog \" 命令，检查虚拟机是否已关闭\n\n如果没有任何输出结果，代表虚拟机已正常关闭\n\n如果无法正常关闭虚拟机，请在宝塔虚拟机目录下执行 \" ./bt_prog kill \" 命令\n\n同样记得再次执行 \" ./bt_prog \" 命令，检查虚拟机是否已关闭\n```\n\n**自动启动**\n\n```\n## 启用开机自动启动\n./install int\n\n## 取消开机自动启动\n./install uint\n```\n\n**默认参数值:**\n\n|项目|内容|\n|---|---|\n|默认管理端口|28888|\n|默认管理地址|http://你树莓派的IP地址:28888/|\n|默认Web管理用户及密码|openfans/openfans|\n|宝塔虚拟机ssh端口|2222|\n|宝塔虚拟机root默认密码|raspberry|\n\n**如何ssh连接到宝塔虚拟机?**\n\n```\n本机连接： ssh -p 2222 root@localhost\n外部连接： ssh -p 2222 root@你树莓派的IP地址\n```\n\n**注意:**\n\n```\n除非你懂得修改 install 部署脚本，否则不要修改宝塔面板默认的管理端口。\n如果你需要开启自定端口的站点支持，请编辑 ports文件 加入你自定义的端口，但不要修改 ports 文件里其他默认的端口。\n```\n\n**为了方便和节约大家时间，默认一次性开启了宝塔的所有功能。**\n\n**为了更好的性能起见，我们强烈建议关闭或删除自己不需要的功能。**\n\n----\n\n### 4-3如何扩展虚拟机的磁盘大小\n\n首先确认你的虚拟机已正常关闭或没有运行。\n\n本文虚拟机磁盘以 **bt.qcow2.disk** 为例。\n\n#### 4-3.1. 磁盘扩容\n\n**查看磁盘大小**\n\n执行命令：\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\n得到如下信息:\n\n```shell\nimage: bt.qcow2.disk\nfile format: qcow2\nvirtual size: 10G (10737418240 bytes)    #磁盘总大小\ndisk size: 6.4 # 已用容量\ncluster_size: 65536\nFormat specific information:\n    compat: 1.1\n    lazy refcounts: false\n    refcount bits: 16\n    corrupt: false\n```\n\n**磁盘扩容**\n\n本例我们的目标是为虚拟机磁盘增加10G的容量\n\n执行下面的命令：\n\n```shell\nqemu-img resize bt.qcow2.disk +10G\n```\n\n然后再次查看磁盘大小\n\n执行命令：\n\n```shell\nqemu-img info bt.qcow2.disk\n```\n\n结果如下：\n\n```shell\nimage: bt.qcow2.disk\nfile format: qcow2\nvirtual size: 20G (21474836480 bytes)    #容量增加成功，总大小为20G\ndisk size: 6.4G\ncluster_size: 65536\nFormat specific information:\n    compat: 1.1\n    lazy refcounts: false\n    refcount bits: 16\n    corrupt: false\n```\n\n#### 4-3.2. 扩展分区\n\n**扩展已增加的容量至系统分区**\n\n首先，启动虚拟机，并登陆虚拟机。\n\n```shell\nssh -p 2222 root@localhost\n```\n\n**查看磁盘大小**\n\n执行命令：\n\n```shell\nfdisk -l /dev/sda\n```\n\n结果如下：\n\n```shell\nDisk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors    #已增加到20G\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0xcd0e4df1\n\nDevice     Boot Start      End  Sectors Size Id Type\n/dev/sda1  *     2048 20969471 20967424  10G 83 Linux    #分区容量还未扩展\n```\n\n**查看分区大小**\n\n执行命令：\n\n```shell\ndf -hT\n```\n\n结果如下：\n\n```shell\nFilesystem     Type      Size  Used Avail Use% Mounted on\nudev           devtmpfs  496M     0  496M   0% /dev\ntmpfs          tmpfs     103M  1.5M  101M   2% /run\n/dev/sda1      btrfs      10G  4.7G  4.7G  50% /        #分区容量还未扩展\ntmpfs          tmpfs     513M  4.0K  513M   1% /dev/shm\ntmpfs          tmpfs     5.0M     0  5.0M   0% /run/lock\ntmpfs          tmpfs     513M     0  513M   0% /sys/fs/cgroup\ntmpfs          tmpfs     103M     0  103M   0% /run/user/0\n```\n\n**安装** *parted* **磁盘管理工具**\n\n```shell\napt update ; apt install parted -y\n```\n\n**扩展分区**\n\n输入下面的命令：**parted** ，然后按下列步骤操作：\n\n```shell \nparted\n```\n\n此时可以看到磁盘信息如下\n\n```shell\nGNU Parted 3.2\nUsing /dev/sda    #这是我们需要操作的磁盘\nWelcome to GNU Parted! Type 'help' to view a list of commands.\n(parted) print   #输入\"print\",查看当前操作的磁盘信息\nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB    #总大小已增加至20G\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber  Start   End     Size    Type     File system  Flags\n 1      1049kB  10.7GB  10.7GB  primary  btrfs        boot \n# 此处的“1”是磁盘分区编号，此时分区容量还没有变化\n```\n\n接下来输入如下命令 **resizepart** :\n\n```shell\n(parted) resizepart        #输入命令 \"resizepart\" 进行分区扩展\nPartition number? 1        #输入需要扩展的分区编号，由于我们这里的磁盘只有一个分区，所以输入 “1”\nWarning: Partition /dev/sda1 is being used. Are you sure you want to continue?\nYes/No? yes                #确认继续，输入 \"yes\"\nEnd?  [10.7GB]? 100%       #输入“100%”，将所有可用容量全部扩展到上一步指定的分区 \n(parted) print             #输入 \"print\" ,查看当前操作的磁盘信息    \nModel: QEMU QEMU HARDDISK (scsi)\nDisk /dev/sda: 21.5GB\nSector size (logical/physical): 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber  Start   End     Size    Type     File system  Flags\n 1      1049kB  21.5GB  21.5GB  primary  btrfs        boot    #可以看到增加的磁盘容量已扩展成功\n\n(parted) quit              # 输入 \"quit\" , 退出\nInformation: You may need to update /etc/fstab.\n```\n\n**更新分区表**\n\n执行下面的命令\n\n```shell\npartprobe /dev/sda\npartprobe /dev/sda1\n```\n\n**扩展文件系统**\n\n我们这里的虚拟机使用的是 *btrfs* 文件系统，相关的 *btrfs* 文件系统扩容的操作如下：\n\n执行命令\n\n```shell\nbtrfs filesystem resize max /\n```\n\n将得到如下提示\n\n```shell\nResize '/' of 'max'\n```\n\n**重新挂载分区**\n\n本文扩展的是根分区 **“/”** ，所以接下来我们重新挂载 **“/”** 根分区\n\n执行命令:\n\n```shell\nmount -o remount,rw /  \n```\n\n**同步数据**\n\n执行命令：\n\n```shell\nsync\n```\n\n**验证结果**\n\n检查分区大小\n\n输入命令\n\n```shell\ndf -hT\n```\n\n结果如下：\n\n```shell\nFilesystem     Type      Size  Used Avail Use% Mounted on\nudev           devtmpfs  496M     0  496M   0% /dev\ntmpfs          tmpfs     103M  1.5M  101M   2% /run\n/dev/sda1      btrfs      20G  4.7G   15G  25% /     #分区已成功扩展\ntmpfs          tmpfs     513M  4.0K  513M   1% /dev/shm\ntmpfs          tmpfs     5.0M     0  5.0M   0% /run/lock\ntmpfs          tmpfs     513M     0  513M   0% /sys/fs/cgroup\ntmpfs          tmpfs     103M     0  103M   0% /run/user/0\n```\n\n重启虚拟机，再次登录，并执行命令 **df -hT** 以确定结果\n\n----\n\n## 5.更新及升级\n\n### 5-1升级系统\n\n系统更新请使用系统自带的工具或命令，例如 \"apt update; apt upgrade\"\n\n**由于深度自身的兼容问题，深度桌面不要执行任何系统升级！！**\n\n### 5-2更新内核及固件\n\n下载内核和固件更新包，解压并进入更新包目录，执行以下命令：\n\n```\ncd ./upkg\nsudo  sh  ./sys_upgrade\n```\n\n待完成后，重启即可。\n\n#### 注意：\n\n**2.0正式版暂时不支持从其他任何版本升级而来，需要全新安装。**\n\n### 5-3更新说明\n\n点击 **[此处](./update.md)** 查看更新说明。\n\n### 5-4当前最新版本\n\n点击 **[此处](./versions.md)** 查看最新版本信息。\n\n### 5-5 Rpi4 USB启动(固件升级)\n\n点击 **[此处](./FW/)** 下载固件升级程序，以支持RPI4的USB启动。\n解压后，请阅读压缩包内的readme.txt文件说明，按照步骤升级即可。（注意：你必须现在TF启动的模式下升级固件）\n\n### 5-6 新特性支持（仅测试）\n\n## NOTE: !!!!!! (重要)\n\n#### 以下的驱动在版本\"2021-06-11-v2020-2.0-U6-Release（含）\"的系统之后，默认已经包含并适配了最新的MESA，不再需要单独安装。\n\n#### 5-6.1 Mesa Vulkan (v3dv) 驱动：支持树莓派4(B)的VC4及V3D的OpenGL硬件加速\n\n我们已经升级了Mesa驱动（21.0.0版本）和Vulkan（v3dv）对于树莓派4(B)的VC4及V3D的OpenGL硬件加速的支持。\n\n![pi4_vulkan_info](./images/pi4_vulkan_info.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_1.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_2.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_3.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_4.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_5.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_6.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_7.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_8.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_9.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_10.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_11.png)\n![pi4_vulkan_testing](./images/pi4_vulkan_12.png)\n\n**如何下载和测试？**\n\n使用root用户权限执行以下操作：\n\n**重要:** 此项测试功能要求内核的版本必须 **大于或等于 \"5.10.25-Release-OPENFANS+20210325-v8\"**\n\n```\n0. 首先执行命令: \n   apt update; apt install dpkg-dev -y\n\n1. 下载压缩包文件至root根(\"/\")目录。\n\n2. 更改解压的目录的用户权限，执行命令：\n   \"chown -R _apt [解压文件目录的绝对路径]\"\n\n3. 进入解压的文件目录内，执行命令：\n   \"sh ./install.sh\"\n\n4. 最后重启系统即可。\n\n```\n\n**附：**\n\n文件的下载路径：\n\n```\n迅雷：\"/raspberry-pi-images/2021-new/Testing/Graphic_Libs/v2/debs_repo.zip\"\n\n百度网盘：\"/Debian-Pi-Aarch64-2.0-Release/Testing/Graphic_Libs/v2/debs_repo.zip\"\n\nMEGA网盘：\"/Debian-Pi-Aarch64/2021/extra/Graphic_Libs_Trsting/debs_repo.zip\"\n```\n\n----\n\n## 6.下载地址\n\n- 迅雷云盘： [点击前往下载](https://pan.xunlei.com/s/VMQ7-_8i3FJgwahadCfHzyetA1) *提取码:* **f5b3**\n\n- 百度网盘： [点击前往下载](https://pan.baidu.com/s/1VPWngCO1aEPJXFMLiODmNg) *提取码:* **xbwy**\n\n- MEGA: [点击前往下载](https://mega.nz/folder/coVQAaZR#ifOeikkhJpGYw8B7vvlDOg)\n\n----\n\n## 7.其他说明\n\n### 7-1打赏\n\n#### Debian Pi Aarch64 的今天，离不开社区朋友们的支持!\n\n感谢无私帮助我们的朋友们！你们的支持才是我们前进的最大动力！\n\n您可以选择扫描支付宝直接帮助我们，我们保证所受到的帮助将全部用于项目的研发和设备的购买。\n\n![jz](./images/jz.png)\n\n### 7-2联系方式\n\n树莓派爱好者基地64位系统专用**QQ交流群：** *703626518(已满)* ，**976102807 (新群)**\n\n树莓派爱好者基地官网：[www.pifan.org](http://www.pifan.org)\n\n教程官网：[blog.pifan.org](http://blog.pifan.org)\n\n论坛：[bbs.pifan.org](http://bbs.pifan.org)\n\nOPENFANS Offical Site 官网： [www.openfans.org](http://www.openfans.org)\n\n### 7-3版权说明\n\n```\n1.以上系统由OPENFANS开源社区制作，仅由树莓派爱好者基地独家发布并提供技术支持；\n\n2.任何文字、图片转载必须标明系统（软件）来源；您可以对软件或系统进行任何修改，但必须保留出处；\n\n严禁用于任何商业用途，如需商业使用，请与OPENFANS开源社区及树莓派爱好者基地联系并获得许可；\n\n3.以上系统以及软件的所有权归属相对应的软件作者和遵守相关软件包的许可授权协议；\n\n4.未遵守上诉规定保留出处，OPENFANS开源社区及树莓派爱好者基地有权追究其相应责任并责令停止一切侵权行为；\n\n5.OPENFANS开源社区及树莓派爱好者基地拥有以上内容的最终解释权。\n```\n\n## 8.招募\n\n树莓派爱好者基地现招募各**志愿者**加入社区，基本要求如下：\n\n- **硬件研发及设计人员**\n\n```\n1. 认可树莓派爱好者基地文化，对树莓派有极大的热情；\n2. 认真负责，能够按时保质保量完成社区安排的任务；\n3. 具备3D打印建模或电路DSP的设计能力；\n4. 有实际的硬件设计经验。\n```\n\n- **软件及系统开发人员**\n\n```\n1. 认可树莓派爱好者基地文化，对树莓派有极大的热情；\n2. 认真负责，能够按时保质保量完成社区安排的任务；\n3. 熟悉系统构建编译或软件开发；\n4. 我们喜欢的开发语言，包括但不限于：JAVA、Python、Go、NodeJS、C、C++ ...；\n5. 要求会软件编译和Deb打包；\n6. 有实际的开发经验。\n```\n\n**另外欢迎各组织、机构、事企业单位洽谈合作！！！**\n\n任何意向请与我们联系： [admin@openfans.org](mailto:admin@openfans.org)\n\n来信请说明具体情况和意图并留下您的**联系电话**，谢谢合作。\n\n----\n\n## 9.致谢\n\nOSCHINA : [Git支持](https://gitee.com/)\n\nRaspbian : *官方系统 (自动扩容脚本部分参考)*\n\nUMRnInside : *项目 [UMRnInside/RPi-arm64](https://github.com/UMRnInside/RPi-arm64) (自动扩容脚本部分参考)*\n\nAndreiw : *项目 [andreiw/RaspberryPiPkg](https://github.com/andreiw/RaspberryPiPkg) (1.0版本引用的EFI固件)*\n\nsakaki(1) : *[Link](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=244478) (内核引导的问题参考)*\n\nSakaki(2) : *H264-V4L2-M2M硬件加速命令行播放器参考*\n\nmargetts99 : *[Link](http://bbs.pifan.org/?thread-132.htm) (WPS的集成建议和共享问题的报告)*\n\nWindows Arm On Qemu: *参考 [链接1](https://github.com/virtio-win/kvm-guest-drivers-windows/issues/177#issuecomment-468149012) & [链接2](https://www.raspberrypi.org/forums/viewtopic.php?f=56&t=248345&sid=d4dd0681937f13e9c0cb4f04e5b54979)*\n\n**以及其他无私赞助和帮助过我们的朋友们！**\n"
        },
        {
          "name": "add-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-aarch64",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-machine-aarch64",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "donation",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "hardware",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules-load.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "qemu-kvm.md",
          "type": "blob",
          "size": 4.33203125,
          "content": "![openfans](/images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](/images/amatfan.png)\n\n# Debian Pi Aarch64 - 基础系统 + 深度桌面 + Xfce桌面\n\n**[OPENFANS开源社区](http://www.openfans.org)&nbsp;&nbsp; && &nbsp;&nbsp;[树莓派爱好者基地](http://www.pifan.org/)&nbsp;&nbsp;荣誉出品**\n\n###  再次重申！我们是团队，企业级的专业团队出品的系统，不要拿个人作品来和我们比较\n\n----\n\n# QEMU-KVM 下载及使用说明 (1.0系统)\n\n## 下载地址\n\n* QEMU虚拟机二进制软件包 [下载地址](https://pan.baidu.com/s/1cQRDNV712f7sbrFrP4wpQg)\n\n      文件路径：Debian-Pi-Aarch64-PKGS -> qemu\n\n      文件名：qemu-2.12+dfsg-3ubuntu9.zip\n\n* Debian Aarch64虚拟机镜像 [下载地址](https://pan.baidu.com/s/1cQRDNV712f7sbrFrP4wpQg)\n\n      文件路径：Debian-Pi-Aarch64-PKGS -> qemu_vm -> debian9_vm\n\n      此文件夹下的所有文件均需要下载，如下图所示：\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;![vmfiles](./images/vmfiles.png)\n\n## 使用说明\n\n## 重要：\n\n**我们发布的二进制软件包和虚拟机镜像根据实际情况一般通常采用 tag、zip、tar.gz、xz 的压缩格式发布**\n\n**你必须至少安装了对以上压缩格式软件的支持，强烈建议通过下面的命令一键安装以上所有软件包的支持**\n\n安装过程要求你的树莓派已连接网络并能够访问互联网\n\n```shell\napt update ; apt install tar gzip zip unzip bzip2 xz-utils -y\n```\n----\n\n### **QEMU虚拟机二进制软件包 使用说明**\n\n1. 下载QEMU虚拟机二进制软件包\n2. 上传到你的树莓派\n3. 解压压缩包\n4. 进入解压文件目录，然后执行以下命令安装即可\n\n```shell\nsudo sh ./install\n```\n\n*注意：你的系统必须要能够连接互联网，安装过程中需要下载相关依赖的软件包*\n\n### **Debian Aarch64 虚拟机镜像 使用说明**\n\n#### 要使用此虚拟机镜像，BIOS必须开启 \"KVM硬件加速功能\" ，点击 [此处](./README.md#%E6%8F%90%E7%A4%BA%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F-%E8%BF%99%E9%87%8C%E4%BB%A5%E5%BC%80%E5%90%AF-kvm%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F-%E4%B8%BA%E4%BE%8B) 查看如何开启 \"KVM硬件加速\"\n\n1. 登录到你的树莓派并新建一个文件夹，例如 *virtual_michine*\n2. 将刚才下载的所有文件全部上传到这个目录中\n3. 进入刚才新建的这个目录，如 *virtual_michine*，执行以下命令解压虚拟机镜像文件\n\n```shell\nsudo xz -k -d disk.qcow2.xz\n```\n\n4. 解压镜像需要一定的时间，完成后在这个新建的目录下执行以下操作以**前台**的方式启动并运行虚拟机\n\n复制一份 **vm_run** 文件，并将及命名 为 **vm_run2**\n\n编辑这个复制的文件 **vm_run2**，去掉文件末尾的 **“ & ”** 符号，保存文件并退出编辑\n\n然后执行以下命令以**前台**的方式启动虚拟机\n\n```shell\nsudo sh ./vm_run2\n```\n\n5. 登录虚拟机并开启远程登录\n\n按照以上步骤启动虚拟机后，登录系统，默认**root**账户的密码为：**raspberry**\n\n编辑 **/etc/ssh/sshd_config** 文件\n\n找到有 “**PermitRootLogin**” 这一行的内容，去掉前面的 **\"#\"** 注释符号，并将这行内容改为以下内容\n\n```shell      \nPermitRootLogin yes\n```       \n\n保存文件并退出文件编辑，然后执行以下命令\n\n```shell \nsystemctl daemon-reload ; systemctl restart ssh\n```\n\n最后执行以下命令，关闭虚拟机\n\n```shell \ninit 0\n```\n\n5. 以**后台**方式运行虚拟机\n\n完成上述步骤后，现在我们让虚拟机以后台的方式运行\n\n执行以下命令，以**后台**的方式访问虚拟机：\n\n```shell\nsudo nohup sh ./vm_run\n```\n\n6. 远程登录\n\n该虚拟机的 **22** 号端口已默认映射到了本机的 **2222** 号端口，**SSH**访问本机的**2222** 号端口即可\n\n参考命令：\n\n```shell\nssh -p 2222 root@本机的IP地址\n```\n\n## 如何扩展虚拟机的磁盘大小\n\n[点击此处](./docs/resize_vmdisk.md) 查看相关文档 \n\n# 2.0系统KVM安装说明\n\n```\napt install qemu-efi qemu-efi-arm qemu-efi-aarch64 ipxe-qemu* \\\nqemu-block-extra qemu-system-arm qemu-system-common \\\nqemu-system-data qemu-system-gui qemu-utils \\\nqemu qemu-guest-agent qemu-skiboot qemu-system \\\nlibnfs12 libvirglrenderer0 faumachine-data ksmtuned \\\ncpu-checker seabios sgabios vde2 xserver-xorg-video-qxl \\\nvirt-manager -y\n```\n \n"
        },
        {
          "name": "qemu-roms.tar.gz",
          "type": "blob",
          "size": 233.21484375,
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.md",
          "type": "blob",
          "size": 38.53515625,
          "content": "![openfans](/images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](/images/amatfan.png)\n\n## Debian Pi Aarch64 - 树莓派64位系统\n\n**[OPENFANS开源社区](http://www.openfans.org)&nbsp;&nbsp; && &nbsp;&nbsp;[树莓派爱好者基地](http://www.pifan.org/)&nbsp;&nbsp;荣誉出品**\n\n###  再次重申！我们是团队，企业级的专业团队出品的系统，不要拿个人作品来和我们比较\n\n# [打赏](donation/README.md)\n\n----\n\n# 更新说明文档 ( Update Notes )\n\n## 2021.12.22 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.88-Release-OPENFANS+20211222-v8\" Released now.\n2.Media for v4l2-ctrls: Add V4L2_CID_NOTIFY_GAINS control.\n3.Virtio_ring: Fix querying of maximum DMA mapping size for virtio device.\n4.Add panel overlay for CutiePi.\n5.DRM/VC4: hdmi: Support HDMI YUV output.\n6.DRM/VC4: hdmi: Add full range RGB helper.\n7.DRM/EDID: Rename drm_hdmi_avi_infoframe_colorspace to _colorimetry.\n8.DRM/VC4: hdmi: Use full range helper in csc functions.\n9.DRM/VC4: hdmi: Replace CSC_CTL hardcoded value by defines.\n10.DRM/VC4: hdmi: Define colorspace matrices.\n11.DRM/VC4: hdmi: Change CSC callback prototype.\n12.DRM/VC4: hdmi: Take the sink maximum TMDS clock into account.\n13.DRM/VC4: hdmi: Take bpp into account for the scrambler.\n14.DRM/VC4: hdmi: Always try to have the highest bpc.\n15.DRM/VC4: Skip writes to disabled packet RAM.\n16.DRM/VC4: hdmi: Move clock validation to its own function.\n```\n\n## 2021.12.18 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.87-Release-OPENFANS+20211218-v8\" Released now.\n2. Fixted bugs for drm/vc4 HDMI and KMS.\n3. Fixted media stalls with kodi and stateful v4l2 video decode.\n```\n\n## 2021.12.09 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.83-Release-OPENFANS+20211209-v8\" Released now.\n2. vc4/drm: Ignore vc4_hdmi->output_enabled for allowing audio.\nEvert \"Revert \"overlays: vc4-kms-v3d: Change composite handling, Reinstates the new handling.\n```\n\n## 2021.12.04 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had updated to upstream \nas \"5.10.82-Release-OPENFANS+20211204-v8\" Released now.\n2. Xhci: add a quirk to work around a suspected cache bug on VLI controllers for usb 2.0.\n```\n\n## 2021.12.02 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.82-Release-OPENFANS+20211202-v8\" Released now.\n2. BCM2835_unicam: Add logging message when a frame is dropped.\n3. BCM2835-codec: Allow a different stride alignment per role.\n4. KMS fixes and ISP pitch fix.\n5. Media rpivid: remove min_buffers_needed from src queue.\n6. Board_info: Add upstream dtb names for cm1/3/4.\n7. Platform: Allow users to disable camera boot HMAC check.\n8. Clock BCM2711: Fix potential API issue in 2711 VCO setup.\n9. Arm_loader: Enable USB MSD boot mode on Zero 2 W.\n10. Isp: Fix Rec.709 colour space problems.\n11. Userland: raspicam check system is running legacy camera stack.\n12. MMAL: Hack to make mmal core register VideoCore components.\n```\n\n## 2021.11.27 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had updated to upstream \nas \"5.10.81-Release-OPENFANS+20211127-v8\" Released now.\n2. Allow multiple users for the ISP driver of cm2835_isp.\n3. Fix PCIe interrupts bcm2711 dts. \n4. Pass V4L2_CID_MPEG_VIDEO_H264_MIN_QP/MAX_QP to bcm2835-v4l2-codec\n5. Add support for composite syncs to vc4_dpi for drm/vc4.\n6. Ensure vc4_hdmi doesn't use 2711 HPD registers on Pi0-3 for drm/vc4. \n7. Gpio-ranges property is now required for arm dts. \n8. Update rpi-400 and cm4 dts to match 4-b for arm dts.\n```\n\n## 2021.11.25 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.81-Release-OPENFANS+20211125-v8\" Released now.\n```\n\n## 2021.11.20 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had updated to upstream \nas \"5.10.79-Release-OPENFANS+20211120-v8\" Released now.\n```\n\n## 2021.11.17 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.79-Release-OPENFANS+20211117-v8\" Released now.\n```\n\n## 2021.11.12 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel, firmware, bootloader had updated to upstream \nas \"5.10.78-Release-OPENFANS+20211112-v8\" released now.\n2. Change vc4-kms-v3d overlays composite handling.\n3. Set TCA8418 to module for kernel.\n4. Additional parameters for gpio-poweroff overlays.\n```\n\n**Also all of upkgs for all 64bit edtions support for 2Bv1.2,3B/B+/A+,4B,CM3/4,Pi400,Zero2W from now on.**\n\n## 2021.11.11 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All system images had upgraded to upstream Debian Buster 20211111 as \"2021-11-11-v2020-2.0-U6-Release\".\n2. All system images had included newest kernel version \"5.10.78-Release-OPENFANS+20211111-v8\".\n3. All systems kernel, firmware, bootloader, userland \"UPKG\" had upgraded to upstream version \n   \"5.10.78-Release-OPENFANS+20211111-v8\" as Released now.\n4. All system images and \"UPKG\" had upgraded to supported Pi Zero 2 W.\n```\n\n## 2021.11.06 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.77-Release-OPENFANS+20211106-v8\" Released now.\n2. This kernel and FW had supported for Pi Zero 2 W.\n```\n\n## 2021.10.29 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.76-Release-OPENFANS+20211029-v8\" Released now.\n```\n\n## 2021.10.26 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.75-Release-OPENFANS+20211026-v8\" Released now.\n```\n\n## 2021.10.21 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader, userland had upgraded to upstream \nas \"5.10.74-Release-OPENFANS+20211021-v8\" Released now.\n```\n\n## 2021.10.18 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel, firmware, bootloader had upgraded to upstream \nas \"5.10.73-Release-OPENFANS+20211018-v8\" Released now.\n2. Fixed HDMI Audio missing issue (bcm2835_audio missing firmware reference).\n```\n\n## 2021.10.15 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader had upgraded to upstream \nas \"5.10.73-Release-OPENFANS+20211015-v8\" Released now.\n```\n\n## 2021.10.07 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel, firmware, bootloader and userland had updated to upstream \nas \"5.10.63-Release-OPENFANS+20211007-v8\" Released now.\n```\n\n## 2021.08.24 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel and firmware version had updated to \"5.10.60-Release-OPENFANS+20210824-v8\" Released now.\n2. Optimized for the kernel build compiler chain-tool had updated.\n```\n\n## 2021.08.22 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel and firmware version had updated to \"5.10.60-Release-OPENFANS+20210822-v8\" Released now.\n2. Anbox kernel module remove cuz just for testing before.\n3. The anbox needs kernel modules are not modules now, was built into the kernel, such as ashmem and binder.\n4. If u wanna use binder fs, mkdir directory under dev and mount used binder fs type by yourself.\n```\n\n## 2021.08.21 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n#### (Add an anbox kernel module pkg, Only for this version)\n\n```\n1. All systems kernel and firmware version had upgraded to \"5.10.59-Release-OPENFANS+20210821-v8\" Released now.\n2. Add an anbox kernel module package 'anbox_kmod_5.10.59-Release-OPENFANS+20210821-v8.tar.gz' only for this kernel as a testing.\n3. The anbox kernel module used the anbox's officail upstrems (Add the patch for kernel 5.10.x), not used kernel defaults.\n4. The anbox kernel module version must be as the same as the upkg/FW/Kernel version.\n```\n\n## 2021.08_06~07 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel and firmware version had updated to \"5.10.52-Release-OPENFANS+20210806-v8\" Released now.\n2. Upkg name is: upkg-2021-08-07-v2021-2.0-U6-Release.zip.\n```\n\n## 2021.07.28 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel and firmware version had updated to \"5.10.52-Release-OPENFANS+20210728-v8\" Released now.\n2. Fixted some VC4 and issues, revert drm/vc4: increase the core clock to a minimum of 500MHZ.\n3. overlays: Set CMA to 512MB on Pi 4 for vc4:\n```\n\nCan be overridden by appending a parameter to the dtoverlay line, e.g.\n\n```\ndtoverlay=vc4-fkms-v3d,cma-256\n```\n\n## 2021.07.23 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel and firmware version had upgraded to \"5.10.52-Release-OPENFANS+20210723-v8\" Released now.\n```\n\n## 2021.07.22 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had updated.**\n\n```\n1. All systems kernel and firmware version had updated to \"5.10.50-Release-OPENFANS+20210722-v8\" Released now.\n2. Add support GUD USB Display DRM driver\n```\n\n## 2021.07.19 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel and firmware version had upgraded to \"5.10.50-Release-OPENFANS+20210719-v8\" Released now.\n```\n\n## 2021.07.10 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel and firmware version had upgraded to \"5.10.48-Release-OPENFANS+20210710-v8\" Released now.\n2. Upgrade the newest 5GHz wifi firmware brcmfmac43455-sdio.clm_blob.\n```\n\n## 2021.06.20 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel and firmware had upgraded.**\n\n```\n1. All systems kernel and firmware version had upgraded to \"5.10.44-Release-OPENFANS+20210620\" Released now.\n```\n\n## 2021.06.11 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;System Images had upgraded.**\n\n```\n1.  Main stable kernel & FW had upgraded to \"5.10.42-Release-OPENFANS+20210611-v8\" now.\n\n2.  The system had upgraded to upstream Debian Buster upstream and update to 2021-06-11.\n\n3.  The Docker-CE had upgrade to version \"20.10.7~3\".\n\n4.  Upgrade Mesa package to newest version \"21.1.0-4\".\n\n5.  The Mesa support vulkan driver for rpi, and FFmpeg suport mmal hardware acceleration.\n\n6.  Add a localhost mesa repo version \"21.1.0-4\", at \"/opt/mesa_ffmpeg_repos_v4/\", with other depends or used packages.\n\n7.  Update X86 runtime system env to ubuntu1804, and add a new testing game Aoe2c.\n\n8.  Desktop image had add the Wechat and QQ Music Apps.\n\n9.  Desktop image had upgraded the QQ, WPS version.\n\n10. The new os images support CM4 nvme boot and the upkg support u-boot booting.\n\n11. Default repo URL had changed to huaweicloud (mirrors.huaweicloud.com).\n```\n\n## 2021.06.09 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded.**\n\n```\n1. All systems FW version had upgraded to \"5.10.42-Release-OPENFANS+20210609-v8\" Released now.\n\n2. Kernel tunning.\n```\n\n## 2021.06.07 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel had upgraded.**\n\n```\n1. All systems FW version had upgraded to \"5.10.39-Release-OPENFANS+20210607-v8\" Released now.\n```\n\n## 2021.05.25 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel had updated.**\n\n```\n1. All systems FW version had updated to \"5.10.38-Release-OPENFANS+20210525-v8\" Released now.\n```\n\n## 2021.05.21 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel had upgraded.**\n\n```\n1. All systems kernel version had upgraded to \"5.10.38-Release-OPENFANS+20210521-v8\" Released now.\n\n2. Add AMD_GPU kernel modules back.\n\n3. Support CM4 NVME boot.\n```\n\n## 2021.05.14 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded.**\n\n```\n1. All systems kernel version had upgraded to \"5.10.36-Release-OPENFANS+20210514-v8\" Released now.\n\n2. Add ATI kernel modules.\n```\n\n## 2021.05.02 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded.**\n\n```\n1. All systems kernel version had upgraded to \"5.10.33-Release-OPENFANS+20210502-v8\" Released now.\n\n2. Remove ATI & AMD GPU/DRM kernel modules which is not used for rpi.\n```\n\n## 2021.04.11 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded.**\n\n```\n1. All systems kernel version had upgraded to \"5.10.27-Release-OPENFANS+20210411-v8\" Released now.\n```\n\n## 2021.03.28 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had updated.**\n\n```\n1. All systems kernel version had updated to \"5.10.25-Release-OPENFANS+20210328-v8\" Released now.\n```\n\n## 2021.03.25 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded.**\n\n#### Kernel Version: \"5.10.25\" and New \"Graphic_Libs\" is supported for testing.\n\n```\n1. Main stable kernel & FW had upgraded to \"5.10.25-Release-OPENFANS+20210324-v8\" now, kernek modules\n   and userland had supported mmal H/W acceleration now.\n\n2. 64bit MMAL userland is supported, and used by bundled tools like raspivid and raspistill,\n   the \"raspivid\" and \"raspistill\" command you can find in path \"/opt/vc64/bin/\".\n\n3. New H/W codec endpoints had supported for ffmpeg now, also inclue \"h264_v4l2m2m\" and \"h264_mmal\".\n\n4. The new \"Graphic_Libs\" is supported for PI4 testing：\n   >>1. Mesa libs has upgraded to version \"21.0.0\" and also inclue OpenGL/OpenGL ES2 etc.\n   >>2. Mesa vulkan driver which is named v3dv support for V3D/VC4 H/W acceleration.\n```\n\n## 2021.03.15 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel updated.**\n\n#### Kernel Version: \"5.10.22\"\n\n```\n1. All systems kernel version had updated to \"5.10.22-Release-OPENFANS+20210315-v8\" Released now.\n\n2. Add BCM2835_Timer and  Android_Binder_Test support for kernel. \n```\n\n## 2021.03.14 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had updated.**\n\n#### Kernel & FW Version: \"5.10.22\"\n\n```\n1. All systems kernel and FW version had updated to \"5.10.22-Release-OPENFANS+20210314-v8\" Released now.\n```\n\n## 2021.03.12 &nbsp;&nbsp;// **v2.0 U6:&nbsp;&nbsp;Kernel & FW had upgraded to Release version.**\n\n```\n1. All systems kernel and FW version had upgraded to \"5.10.22-Release-OPENFANS+20210312-v8\" Released now.\n\n2.Kernel config updated.\n```\n\n## 2021.02.17 &nbsp;&nbsp;// **System v2.0 U6 Release ver. Kernel & FW had upgraded to Release version.**\n\n#### Kernel & FW Version: \"5.10.16\"\n\n```\n1. Testing Kernel & FW version had upgraded to \"5.10.16-Release-OPENFANS+20210217-v8\" as Released published.\n\n2. All systems kernel and FW version had upgraded to \"5.10.16-Release-OPENFANS+20210217-v8\" Released now.\n```\n\n## 2021.02.10 &nbsp;&nbsp;// **System v2.0 U6 Release ver. Testing kernel & FW upgraded.**\n\n```\n1. Testing kernel & FW version had upgraded to \"5.10.14-ForTest-OPENFANS+20210210-v8\"\n```\n\n## 2021.01.31 &nbsp;&nbsp;// **System v2.0 U6 Release ver. Stable kernel & FW updated and testing upgraded.**\n\n```\n1. Main stable kernel & FW had upgraded to \"5.4.83-OPENFANS+20210131-v8\"\n2. Testing kernel & FW version had upgraded to \"5.10.11-ForTest-OPENFANS+20210131-v8\"\n```\n\n## 2021.01.30 &nbsp;&nbsp;//Add An Extra Package (OpenCV)\n\n```\n1.Add an extra OpenCV Package (Support hardware GPU encoding and acceleration): \n- opencv-4.5.1-org.pifan_20210116-1_arm64.deb\n```\n\n## 2021.01.23 &nbsp;&nbsp;// **System v2.0 U6 Release ver. Upkg upgraded.**\n\n```\n1. Kernel 5.10.9-ForTest-OPENFANS+20210123-v8 for Testing upgraded.\n\n2. Build change simd -> asimd ,  add evtstrm & cpuid hardware support for stable kernel \"5.4.83-OPENFANS+20210122-v8\".\n```\n\n## 2021.01.13 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 2101013 Kernel Testing Upkg.**\n\n```\n1. Kernel 5.10.6-ForTest-OPENFANS+20210112-v8 for Testing.\n\n2. Build change simd -> asimd ,  add evtstrm & cpuid hardware support.\n```\n\n## 2021.01.12 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 2101012 Kernel Testing Upkg.**\n\n```\n1. Kernel 5.10.6-ForTest-OPENFANS+20210112-v8 for Testing.\n```\n\n## 2021.01.11 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 2101011 Kernel Update.**\n\n```\n1. Kernel tunning!\n```\n\n## 2021.01.06 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 2101006 Kernel and FW Update.**\n\n```\n1. 编译工具链调整后专门针对树莓派CPU架构和指令集的特定编译优化的内核和固件。\n\nAfter the adjustment of the compilation tool chain, the kernel and firmware are specifically compiled \n\nand optimized for the Raspberry Pi CPU architecture and instruction set.\n```\n\n## 2021.01.04 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 2101004 Update.**\n\n```\n* 添加向日葵的支持。\n```\n\n## 2021.01.03 &nbsp;&nbsp;// **System v2.0 U6 Release ver. 210102/03 Upgraded.**\n\n```\n[A Chinese Team]\n\n1. The system had upgraded to upstream Debian Buster upstream and update to 2021-01-02;\n\n2. The Kernel and firmware had upgraded to \"5.4.83-OPENFANS+20210102-v8\" as support as \nnewest LTS main-line;\n   \n3. Upkg pkg had updated to version \"2021.01.02/03-2.0-U6\";\n\n4. Wifi 5G DB CN fixted.\n\n5. Kernel tunning!\n\n6. Support run X86 exe (It's not used virtualization for this!!), just include in Full Desktop Version.\n\n7. App a game Diablo for preinstall.\n\n8. Whole system pkg had updated and tuned.\n```\n\n## 2020.06.22 &nbsp;&nbsp;// **System v2.0 U4 Release ver. 200622 Upgraded.**\n\n```\n[A Chinese Team]\n\n1. All imgs had included U3's featrues.\n\n2. The system had upgraded to upstream Debian Buster upstream and update to 20200622;\n\n3. The Kernel and firmware had upgraded to \"5.4.47-OPENFANS+20200622-v8\" as support as \nnewest LTS main-line;\n   \n4. Upkg pkg had updated to version \"2020.06.22-2.0-U4\";\n\n5. Mesa and FFMPEG had changed, and Chromium issue had fixed.\n```\n\n## 2020.06.17 &nbsp;&nbsp;// **Updated Desktop (Full-Featured) Version \n\n## is update to : 2020-06-17 -v2019-2.0-U3.** 20617\n\n```\n[A Chinese Team]\n\n1.The video decoding library and graphics library had optimized,\n\nwith H264_V4L2M2M decoding and MMAL support.\n\n2. Optimized the Chromium browser the experience when playing web video.\n```\n\n## 2020.06.15 &nbsp;&nbsp;// **Updated Desktop (Full-Featured) Version \n\n## is update to : 2020-06-16 -v2019-2.0-U3.** 20615\n\n```\n[A Chinese Team]\n\n1. When HW VC4/3D enabled, the Chromium browser interface display error issue has fixed.\n```\n\n## 2020.06.15 &nbsp;&nbsp;// **System v2.0 U3 Release ver. 2-3:0615 upgraded.**\n\n```\n[A Chinese Team]\n\n1. The system had upgraded to upstream Debian Buster upstream and update to 20200615;\n\n2. The Kernel and firmware upgraded to \"5.4.45-OPENFANS+20200614-v8\" as support as \nnewest LTS main-line;\n   \n3. Upkg pkg had upgraded to version \"2020.06.15-2.0-U3\";\n\n4. Upgrade Docker pkg and docker-compose;\n\n5. Upgrade the Mesa pkg;\n\n6. Upgrade the VC4 FW;\n\n7. Desktop edition upgrade WPS and QQ app;\n\n8. Drop AUFS support prefer overlays;\n\n9. Rebuild kernel config defind;\n\n10. Wifi FW upgrade;\n\n11. Boot FW upgrade support USB BOOT (Must upgrade eeprom first!);\n\n12. ★ The dependency compatibility problems of library environment had solved.\n\n(Deepin version 15.5 has still needs to use \"sid-used\" command to solve the dependency problem,\n\nthe reason: Deepin version 15.5 library environment of system baseline still as the same as the \n\ndebian 9, the base version library was too old)\n```\n\n## 2019.12.30 &nbsp;&nbsp;// **System v2.0 U2 Release ver. 1230 Update.**\n\n```\n[A Chinese Team]\n\n1. The system had upgrade to upstream Debian Buster 10.2 and update to 1230;\n\n2. The Kernel and firmware upgrade to \"4.19.88-OPENFANS+20191230-v8\" as support as \nnewest LTS main-line;\n   \n3. Upkg pkg update to version \"2019.12.30-2.0-U2\";\n\n4. Upgrade Docker pkg.\n```\n\n## 2019.11.30 &nbsp;&nbsp;// **System v2.0 U1 Release ver. 1130 Upgraded.**\n\n```\n[A Chinese Team]\n\n1. The system had upgraded to upstream Debian Buster 10.2 and update to 1130;\n\n2. The Kernel and firmware upgrade to \"4.19.86-OPENFANS+20191130-v8\" as support as \nnewest LTS main-line;\n   \n3. Upkg pkg update to version \"2019.11.30-2.0-U1\";\n\n4. Upgrade the Mesa pkg;\n\n5. Add \"sid-used\";\n\n6. The **2.0-U1** version is the ending for the lifetime of `final 2.0 main-line`.\n```\n\n## 2019.11.25 &nbsp;&nbsp;// **System v2.0 Release ver. 1117 upgraded.**\n\n```\n[A Chinese Team]\n\n1. The system had upgraded to upstream Debian Buster 10.2 and update to 1125;\n\n2. The Kernel and firmware upgrade to \"4.19.85-OPENFANS+20191125-v8\" \n   as support as newest LTS main-line;\n   \n3. Upkg pkg update to version \"2019.11.25\";\n\n4. Upgrade Mesa, bluealsa, dhcpcd5, pi-bluetooth, Docker, Wifi-Firmware and etc.\n\n5. A screensaver issue had fixed for Desktop Full-Featured version;\n\n6. Upgrade rpi-eeprom to version 2.4-1;\n```\n\n## 2019.11.17 &nbsp;&nbsp;// **System v2.0 Release ver. 1117 upgraded.**\n\n```\n[A Chinese and an America Team]\n\n1. The system had upgraded to upstream Debian Buster 10.2 and update to 1117;\n\n2. The Kernel and firmware upgrade to \"4.19.83-OPENFANS+20191116-v8\" \n   as support as newest LTS main-line;\n\n3. Upkg pkg had upgraded to version \"2019.11.16\";\n\n4. Add catfish and unrar for Desktop Full-Featured version support;\n\n5. Add a Web VNC interface support for Desktop Full-Featured version;\n\n6. Upgrade QEMU-KVM pkg version to the newest upstream;\n```\n\n## 2019.11.10/11 &nbsp;&nbsp;// **System v2.0 Release ver. 1110/1111 Upgraded.**\n\n```\n[A Chinese Team]\n\n1. This is the first time we used a real powerfull Arm64-env physical server to build the whole  \n   system without ross compilation tools and get better performence with the native performance, \n   a really stronger server Cavium ThunderX which has 96-cores CPU is very fast and quickly;\n\n2. Kernel and firmware upgraded to \"4.19.81-OPENFANS+20191013-v8\" \n   as support as newest LTS main-line;\n\n3. System update to \"2019-11-10\" the mainline of upstream;\n\n4. Mesa pkg had upgraded to version \"19.2.3\";\n\n5. upkg pkg update to version \"2019.11.10\";\n\n6. Add a command line video player support with H264-V4L2-M2M hardware acceleration,  \n   and fixed some issues for hardware acceleration of video stream;\n\n7. Make a new build system on a Arm64-env physical server;\n\n8. Add a new macOS Catalina pic as the default desktop background for \n   Desktop Full-Featured version;\n\n9. QQ and WPS Office are integrated by default in the Desktop Full-Featured version;\n\n10. Rebuild the whole Deepin system and upgrade to the 15.5 SP2 version;\n\n11. Deepin system which version is 2011-11-10 (15.5 SP2) had supported upgrade now.\n```\n\n## 2019.10.13 &nbsp;&nbsp;// **System v2.0 Release ver. 1013 upgraded.** \n\n```\n[A Chinese Team]\n\n1. Kernel and firmware had upgraded to \"4.19.79-OPENFANS+20191013-v8\" as support as newest LTS main-line;\n\n2. CecOS CaaS Container Cloud Platform has upgrade to newest version \"2.22.1\";\n\n3. Docker-CE upgrade to newest version \"19.03.3~3-0\";\n\n4. Rebuild FFMPEG and used the main-line release version \"4.2.1\" to custom version \"4.2.1-v4l2\", \n   Add \"h264_v4l2_m2m\" video codec and camera decodec support;\n\n5. Hardware video decodec video player and camera command app support;\n\n6. Mesa pkg had upgraded to version \"19.2.1-1\";\n\n7. WPS Aarch64 desktop app edition extra pkg support;\n\n8. Add missing LAN shared browsing features：\n   add pkg \"gvfs-backends\" and \"gvfs-fuse\";\n\n9. Upgrade Wifi firmware to newest main-line version;\n\n10. upkg pkg update to version \"2019.10.13\".\n```\n\n## 2019.10.05 &nbsp;&nbsp;// **Upkg Updated.**\n1. 内核及固件同步上游最新稳定版本 *4.19.76* ；\n2. 内核及固件更新包更新至**upkg-2019.10.05** ;\n3. 更新了部分上游内核的DTB及DTS;\n4. **解决部分情况下的卡顿问题** ;\n5. 重命名HDMI:ALSA设备名称，检查启用状态;\n6. ACPI视频:添加新的hw_changes_brightness怪癖,在PB:Easyno上进行设置;\n7. iwlwifi:mvm:始终以20MHz带宽速率初始化rs_fw;\n8. iwlwifi:mvm:正确发送BCAST管理帧;\n9. clk:bcm2835:添加BCM2711_CLOCK_EMMC2支持; \n10. pinctrl-bcm2835:添加对BCM2838的支持; \n11. ARM:dts:bcm27xx:修复了内存节点的DTC警告;\n12. bcm2708_fb:修复结构vc4_display_settings_t的布局;\n\n\\*. **建议2.0正式版更新该固件** 。\n\n## 2019.10.03 &nbsp;&nbsp;// **System IMG v2.0 Release Published.**\n1. **2.0正式版发布 ！！！**\n2. 内核及固件同步上游最新稳定版本 *4.19.75*；\n3. 系统更新至上游最新 *2019-10-03*；\n4. 全线引入**OPENFANS CecOS CaaS 容器云**的支持；\n5. 更新无线WPA包；\n6. *桌面版* 升级为 **全功能版** ，包含基地64位系统全栈**所有**功能！\n7. **基础虚拟机镜像** 现在可直接用于2.0系统；\n8. **宝塔虚拟机镜像** 现在可直接用于2.0系统；\n9. 默认所有系统已开启内核硬件虚拟化支持；\n10. 除Deepin外，所有系统已默认预置**QEMU-KVM**虚拟机程序，并**支持硬件虚拟化加速**；\n11. 剔除WebGUI的鸡肋容器管理插件，使用**CecOS CaaS 容器云**全面替代；\n12. 暂停支持所有 **1.0系统** 、**2.0测试版/预览版** 的更新和支持，基地系统全面正式进入**2.0**时代；\n13. 全系所有系统默认已开启3D硬件加速支持；\n14. 为加快系统启动速度，删除了uEFI BIOS支持，所有uEFI BIOS的配置已全部开启；\n15. CPU硬标支持仍然适用于全系系统；\n16. 其他若干BUG修正；\n17. 编译打包系统的更新；\n18. OPENFANS ARM64 自定义交叉编译工具链的再次强度优化和调整。\n\n## 2019.09.10 &nbsp;&nbsp;// **v2.0 RC5 Released.**\n1. 内核及固件同步**RC5**升级包，系统更新至最新**2019-09-10, Debian Buster 10.1**\n2. Docker同步至上游CE最新**19.03.2~3-0**\n3. 修复内核上游无线地区码问题\n4. 修复Xfce Panel Length部分配置问题\n5. 更新raspberrypi-sys-mods至最新版本\n6. mac80211:正确设置PAE帧的noencrypt \n7. mac80211:在PAE拦截之前不要记忆RXCB\n8. mac80211:修复可能的sta泄漏\n9. cfg80211:非模块化时修复处理地区码的regdomain \n10. 升级bluealsa至0.12\n\n## 2019.09.06 &nbsp;&nbsp;// **v2.0 RC4 Released.**\n1. 内核及固件同步**RC3-U1**升级包，系统更新至最新**2019-09-06**\n2. **全新的XFCE界面，清新MacOS Mojave主题和背景**\n3. 默认全部开启NetworkManager, Web加强版无需再设置NM\n4. XFCE增加了更强的播放器SMPlayer\n5. 无线稳定和性能持续优化\n6. Pluse音量优化\n7. XFCE桌面图形界面定制及优化\n8. 自动构建系统小调整\n9. 开始为正式版发布准备\n10. 部分软件包的版本小调整\n\n## 2019.09.06 &nbsp;&nbsp;// **v2.0 UPKG RC3-U2 Released.**\n1. 内核及固件独立升级包：升级到 **RC3-U1**\n2. 内核模块及固件小调整，加入了新的模块和特性支持(主要针对KVM的特性)\n3. cpuinfo固件显示信息优化\n\n## 2019.09.05 &nbsp;&nbsp;// **v1.0 U11 Released.**\n1. 将无线区域默认至CN，国内环境无需再次修改\n2. BaseOS更新至上游最新2019-09-05\n\n## 2019.09.03 &nbsp;&nbsp;// **2.0 RC3 ( GCC Cross Line Rebuild ) Published.**\n1. 基于树莓派硬件定制再次优化GCC(gcc-9.1.0-64)交叉编译工具链重新编译内核及固件\n2. Kernel同步上游LTS 4.19.69 及固件主线 4.19.69\n2. 将无线区域默认至CN，国内环境无需再次修改\n3. 修复Deepin自动升级后崩溃的问题\n4. 无线参数调整和优化\n5. pulse声音输出优化\n6. 移除wicd\n7. BaseOS更新至上游20190902\n8. 重构升级脚本\n9. Docker更新至19.03.1_3\n\n## 2019.09.02 &nbsp;&nbsp;// **2.0 RC2 U5 ( GCC Cross Line Rebuild ) Published.**\n1. 基于树莓派硬件定制并优化GCC(gcc-9.1.0-64)交叉编译工具链重新编译 Kernel 4.19.69-OPENFANS+20190902-v8 LTS 内核及固件同步主线4.19.69\n\n## 2019.08.31 &nbsp;&nbsp;// **2.0 RC2 U4 ( Kernel & Firmware ) UPDATE Published.**\n1. Kernel upgrade to Mainline 4.19.69-OPENFANS+20190831-v8 LTS, 内核及固件更新至主线4.19.69\n\n## 2019.08.28 &nbsp;&nbsp;// **2.0 RC2 U3 ( Kernel & Firmware ) UPDATE Published.**\n1. Kernel upgrade to Mainline 4.19.68-OPENFANS+20190828-v8 LTS, 内核及固件更新至主线4.19.68\n2. Kernel support RPS feature, 内核支持RPS特性\n\n## 2019.08.25 &nbsp;&nbsp;// **2.0 RC2 U2 ( Kernel & Firmware ) UPDATE Published.**\n1. Kernel upgrade to Mainline 4.19.67-OPENFANS+20190825-v8 LTS, 内核及固件更新至主线4.19.67\n2. Fix DMA leaks caused swiotlb bounce buffer overflow errors under heavy wifi usage in bcm2835-mmc, 修复WIFI高数据负载下MMC引起的死机问题\n\n## 2019.08.16 &nbsp;&nbsp;// **2.0 RC2 Published.**\n1. 全系64位3D显卡硬件加速支持\n4. 基础系统更新至上游8月16日\n\n## 2019.08.15 &nbsp;&nbsp;// **2.0 RC1 Published.**\n1. 内核更新至主线 **4.19.65** 版本\n2. 固件同步至主线 **4.19.65** 版本\n3. 完整支持4B：1G、2G、4G版本均可自动适配识别\n4. 基础系统更新至上游8月15日\n\n## 2019.07.24 &nbsp;&nbsp;// **2.0 Beta2 Published.**\n1. 内核更新至主线 **4.19.58** 版本\n2. 固件同步至主线 **4.19.58** 版本\n3. 完整支持4B：1G、2G版本，有限支持4G版本\n4. 基础系统更新至上游7月24日\n\n## 2019.07.12 &nbsp;&nbsp;// **v1.0 U10 Released.**\n1. 基础 Aarch64(ARM64) 系统镜像(无桌面) U10 [Ext4/Btrfs/F2FS] 全线发布,开放下载\n2. 基础 Aarch64(ARM64) 系统镜像(无桌面WebUI增强版) U10 [Ext4/Btrfs/F2FS] 全线发布,开放下载\n3. Xface桌面更新至U10\n4. Deepin桌面更新U10\n5. Docker版本更新至 **18.09.7~3-0**\n6. 系统更新至 *Debian Buster* 2019-07-12 最新版本\n7. 添加丢失的系统用户组\n8. 默认开启NTP服务\n\n* (1): U10将会是V1.0的最后一个版本,在没有重大BUG的情况下将不会再作更新,此版本正式进入锁定状态后的维护序列周期\n* (2): V2.0版本未来预计将从Beta升级成为RC候选发布阶段,成为下一个发布的主线版本\n\n## 2019.07.06 &nbsp;&nbsp;// **2.0 Beta Published.**\n1. 基础 Aarch64(ARM64) 系统镜像(无桌面)2.0测试版发布\n2. 基础 Aarch64(ARM64) 系统镜像(无桌面WebUI增强版)2.0测试版发布\n3. 内核更新至长期支持主线最新 *4.19.57*\n4. 系统更新至 *Debian Buster* 最新版本\n5. WebUI增强版集成tuned\n6. 迁移内核修改4.14至4.19.57\n7. 优化4.19.57内核\n8. 更新自动化构建系统以适应新版需求\n9. 修改内核以适应4B单板机硬件\n10. 调整内核以适用于全线树莓派64位CPU单板机\n\n## 2019.06.07 &nbsp;&nbsp;// **U9 Plus++ Ext4 Released.**\n1. 新增基础镜像U9**加强版**\n2. 全面开启Web管理时代，省去终端工具的麻烦，Anytime,Anywhere, 直接使用浏览器管理\n3. 默认开启容器服务，开箱即用\n4. 集成WEB界面的全方位监控\n5. 支持WEB界面查看系统状况、硬件信息、情况等信息\n6. 支持WEB界面设置主机名\n7. 支持WEB界面设置主机域\n8. 支持WEB界面设置主机时间、NTP服务器，更新方式\n9. 支持WEB界面关机、重启\n10. 支持WEB界面系统日志管理\n11. 支持WEB界面系统存储及相关外设管理，在线分区、挂载设备等功能\n12. 支持WEB界面网络管理\n13. 支持WEB界面系统账户管理\n14. 支持WEB界面系统服务管理\n15. 支持WEB界面系统更新管理\n16. WEB界面集成Shell终端，可以在网页上直接进行终端相关操作\n17. 支持跨节点和统一管理：一个界面管理多台设备，大幅度提升管理和工作效率\n18. WEB管理通信使用SSL证书加密，保证会话数据的安全性\n19. 浏览器使用 **https://你树莓派的IP地址:9090** 访问管理界面\n20. 管理界面请使用系统默认账户 **pi** 登录\n\n## 2019.06.02 &nbsp;&nbsp;// *All Released to U9*\n1. 内核更新至主线稳定 **4.14.114** 版本\n2. 固件更新至主线稳定 **4.14.114** 版本\n3. 所有系统升级至主线 **debian 9 arm64 Jun 02 2019**\n4. Docker版本更新至 **18.09.6_3**\n\n## 2019.02.24/25 &nbsp;&nbsp;// *All Released to U8*\n\n1. 允许默认**pi**账户直接登录\n2. 所有系统升级至主线 **debian 9 arm64 Feb 22 2019**\n3. 修正原生蓝牙各种不稳定\n4. 裁剪内核 **4.14.98**\n5. 修复蓝牙驱动固件补丁路径问题\n6. 重新编译并升级Mesa图形库的支持\n7. 优化OPEN GLESV2的图形加速支持\n8. 优化内核堆栈\n9. 优化UDEV的规则支持\n10. 所有图形界面系统开启**initrd**支持\n11. 修复3B+有线网络Samba速率问题\n12. 优化图形化系统plymouth引导画面\n13. 图形化系统加入树莓派基地引导画面\n14. 基础系统加入基地相关提示信息\n15. 优化Xfce图形界面默认设置\n16. 修复Xfce图形界面蓝牙、网络图标丢失问题\n17. 调整默认CMA内存至64M\n18. 调整config.txt默认配置文件设置\n19. 调整GPU内核配置默认参数模式\n20. 优化GPU 3D加速支持\n21. 修复部分状态下系统时间始终为UTC且无法更改的问题\n22. 重修矫正系统镜像的4K对齐\n23. 修复DNS文件的链接错误问题\n24. 更新蓝牙固件\n25. 加入蓝牙的管理系统服务守护进程\n26. 支持*wpa_supplicant.conf*方式的无线配置\n27. 加入dhcpcd5支持\n28. *wpa_supplicant.conf* 支持多优先级无线配置和地区码支持\n29. 加入bluealsa组件支持\n30. 调整图形化系统的语言设置模式\n31. 开启Xfce硬件加速窗口合成\n32. 开启深度桌面硬件加速窗口合成\n33. 优化深度系统的不兼容的硬件加速模式\n34. 优化图形化系统Xorg的窗体配置\n35. 设置vchiq的权限优化\n36. 设置I2C、GPIO的UDEV规则优化\n37. 优化蓝牙UDEV规则设置\n38. 优化系统默认内存与SWAP交换比例\n39. 优化内存使用效率，提升缓存命中率\n40. 调整CPU默认模式为动态侦测\n41. 添加alsa的vc4-hdmi默认的配置文件支持\n42. 优化并调整内核sysctl参数\n43. 图形系统默认加入smbclient支持\n44. 调整系统*Machine-UUID*初始序列\n45. 加入额外的*Xorg Font*字体\n46. 加入初始化安装调整脚本\n47. 所有镜像已更新至U8版本\n48. 调整内核的编译配置的电源选项\n49. 调整默认镜像大小\n50. 重构镜像文件块生成结构\n51. 深度图形界面配置调优\n52. Xfce图形界面配置调优\n\n本次更新内容较多，此处仅列出主要内容，不再一一列举\n...\n\n## 2019.02.13 &nbsp;&nbsp;// *All Released to U7*\n\n1. 所有镜像已更新至 **U7** 版\n2. 内核、固件驱动已更新至 **U7** 版\n3. 内核已更新至Linux主线版本: **4.14.98** \n4. 固件驱动已同步更新至主线内核: **4.14.98**\n5. 所有系统升级至 **debian 9 arm64** 兼容主线 **Feb 13 2019**\n6. **桌面系统**加入终端原生中文实现，使用 **fbterm**\n7. **桌面系统**Deepin系统加入 **initrd** 的支持\n8. **桌面系统**Deepin系统加入 **引导动画** 支持\n9. 优化**基础系统**构建框架\n10. **桌面系统**重建 Xface 自动构建系统\n11. **桌面系统**重建 Deepin 自动构建系统\n12. **桌面系统**调整 Xorg 的结构包\n\n## 2019.02.11 &nbsp;&nbsp;// Deepin Aarch64(ARM64)\n\n1. **Deepin Aarch64(ARM64)** 现已更新至 **2019-02-11-v2019-1.0-U6**\n2. 更新内核及固件到 **U6** 版\n\n## 2019.02.07 &nbsp;&nbsp;// Kernel & Firmware\n\n1. 内核已更新至Linux主线版本: **4.14.97** \n2. 固件驱动已同步更新至主线内核: **4.14.97**\n3. 修改CMA为默认值\n\n## 2019.02.05 &nbsp;&nbsp;// *All Released to U5*\n\n1. 修复音频热插拔电源问题\n2. 去除内核多余的ARMV7支持\n3. 调整内核GPU有关CMA的内存交换大小设置\n4. 修复bcm2835相关驱动内核重载问题\n5. 优化深度桌面rootFS构建结构\n6. 优化Xface桌面rootFS构建结构\n7. 重新调整构建系统\n8. 升级OPENGL驱动\n9. 发布基于U5基础系统的深度桌面环境的系统镜像\n10. 发布基于U5基础系统的Xface桌面环境的系统镜像\n11. 强化内核GPU内存交换效率\n12. 优化VC4的内核代码\n13. 修正时区设置问题\n14. 优化字体缓存\n15. 添加对本地终端中文显示的支持\n16. 重构桌面系统镜像的构建环境\n17. 内核升级至主线 *4.14.95，Jan 30 2019*\n18. 系统升级至 *debian 9 arm64* 兼容主线 *Feb 5 2019*\n\n## 2019.02.01 &nbsp;&nbsp;// *Desktop System Image Released U4*\n\n1. **Xface** *Aarch64(ARM64)* 桌面系统镜像U4 **已发布！** (基于U4版基础系统镜像)\n2. **Deepin** *Aarch64(ARM64)* 深度桌面系统镜像U4 **已发布！** (基于U4版基础系统镜像)\n\n## 2019-01-31-v2019-1.0-U4 &nbsp;&nbsp;// *Update4*\n\n1. 调整构建系统参数\n2. 优化内核GPU驱动\n3. 调整内核CMA至32\n4. 增大GPU内存交换空间\n5. 内核魔改,以兼容深度系统\n6. 优化深度系统下内核GPU的效率\n7. 系统包更新至Debian稳定主线：2019-01-31\n\n## 2019-01-26-v2019-1.0-U3 &nbsp;&nbsp;// *Update3*\n\n1. 系统内核同步更新至Linux主线长期支持：**4.14.95**\n2. 固件 *Firmware *更新至对应内核主线：*4.14.95*\n3. 加入内核对 *virtio_pci、virtio_mmio、virtio_gpu* 的支持 \n4. 其他内核细微改动\n5. 系统包更新至Debian稳定主线：2019-01-26\n\n## 2019-01-18-v2019-1.0-U2 &nbsp;&nbsp;// *Update2*\n\n1. 系统内核同步更新至Linux主线长期支持：**4.14.93**\n2. 固件 *Firmware *更新至对应内核主线：*4.14.93*\n3. 启用内核对USB连接SCSI设备的支持\n4. 更新内核提交内容至0118\n5. 增加了对 *shellinabox* 的支持，最新镜像可用\n6. 添加了对 *zram* 的支持，以满足一些特殊场景下的需求\n7. 最新镜像默认添加了对各类压缩软件格式的支持\n8. 最新镜像加入了对vfat分区修复检查工具的支持\n9. 新版镜像调整了 *cmdline.txt* 的默认启动参数\n10. 新版镜像调整了 *config.txt* 的默认配置模板\n11. *Dcoker-CE* 更新至：**18.09.1**\n12. 默认开启WebShell，现可以直接使用浏览器登录系统\n13. 系统包更新至Debian稳定主线：2019-01-18\n\n## 2019.01.10 &nbsp;&nbsp;// *SoftWare Update*\n\n- **qemu-kvm** 虚拟机更新至 *qemu-2.12+dfsg-3ubuntu9*\n\n## 2019-01-02-v2019-1.0-u1 &nbsp;&nbsp;// *Update1*\n\n1. 系统内核同步更新至Linux主线长期支持：4.14.91\n2. 为KVM硬件虚拟化模式加入KSM内核支持（自动开启，无需手动加载）\n3. 发布原生Aarch64架构的QEMU虚拟机软件包，支持KVM硬件加速，并提供了默认的*Debian Aarch64*虚拟机镜像\n4. 系统包更新至Debian稳定主线：2019-01-02\n\n>**什么是KSM ？**\n</br>KSM的原理，是多个进程中，Linux将内核相似的内存页合并成一个内存页\n这个特性，被KVM用来减少多个相似的虚拟机的内存占用，提高内存的使用效率由于内存是共享的\n所以多个虚拟机使用的内存减少了，这个特性，对于虚拟机使用相同镜像和操作系统时，效果更加明显\n\n## 2018-12-30-v2019-1.0 &nbsp;&nbsp;// *第一版 ( First Edition )*\n\n1. 系统包更新至Debian稳定主线：2018-12-30\n2. 使用官方Dcoker-CE 版本已更新至：18.09\n3. 固件Firmware已更新至：v1.20181112\n4. 无线固件已更新至：2018-08-20官方版\n5. 系统内核同步更新至Linux主线长期支持：4.14.90\n"
        },
        {
          "name": "upgrade.md",
          "type": "blob",
          "size": 2.46875,
          "content": "![openfans](/images/openfans.png)&nbsp;&nbsp;&nbsp;&nbsp;![amatfan.png](/images/amatfan.png)\n\n# Debian Pi Aarch64 - 基础系统 + 深度桌面 + Xfce桌面\n\n**[OPENFANS开源社区](http://www.openfans.org)&nbsp;&nbsp; && &nbsp;&nbsp;[树莓派爱好者基地](http://www.pifan.org/)&nbsp;&nbsp;荣誉出品**\n\n## [打赏](donation/README.md)\n\n###  再次重申！我们是团队，企业级的专业团队出品的系统，不要拿个人作品来和我们比较\n\n----\n\n# 如何升级或更新 Debian Pi Aarch64 系统\n\n## 重要：\n\n**我们发布的更新或软件包根据实际情况一般通常采用 tag、zip、tar.gz、xz 的压缩格式发布**\n\n**你必须至少安装了对以上压缩格式软件的支持，强烈建议通过下面的命令一键安装以上所有软件包的支持**\n\n安装过程要求你的树莓派已连接网络并能够访问互联网\n\n```shell\napt update ; apt install tar gzip zip unzip bzip2 xz-utils -y\n```\n\n## [打赏](donation/README.md)\n\n----\n\n## 升级系统固件及驱动\n\n**请前往  [此处](https://pan.baidu.com/s/1-NY_WL5LB0stpxT1wAKSaA)**\n\n* 打开\"***Debian-Pi-Aarch64-Kernel-Firmware***\"文件夹，\n\n* **下载最新的升级包** (根据年月日判断，如202X-0X-XX)\n\n> 如：***upkg-202X-0X-XX-v202X-1.X-uX.zip*** OR 或者 ***upkg-202X-0X-XX-v202X-1.X-uX.tar.gz***\n\n* 上传到你的树莓派系统，**切换至root用户** 并解压这个升级包\n\n```shell\nunzip upkg-202X-0X-XX-v202X-1.X-uX.zip\n\n# Or 或者\n\ntar xvf upkg-202X-0X-XX-v202X-1.X-uX.tar.gz\n\n# 注意：这里的 upkg-202X-0X-XX-v202X-1.X-uX.** 以你实际下载的文件名为准\n```\n* 解压完成后执行以下命令\n\n```shell\ncd ./upkg\nsudo  sh  ./sys_upgrade\n```\n\n最后 **重启** 即可,  **注意：** 如果你使用的是 **\"深度桌面\"** 或 **\"xfce U6\"** 以后的版本 :\n\n- **在 重启 之前，还需要执行以下命令再 重新启动**\n\n```shell\nsudo -i\nsed -i '/initramfs.*/d' /boot/config.txt; sed -i '/initramfs.*/d' /boot/config.txt\nsync && sync && init 6\n```\n\n- **待完成重启后，执行以下命令**\n\n```shell\nmkinitramfs -o /boot/initrd.img-$(uname -r)\nupdate-initramfs -k $(uname -r) -u -t\nupdate-initramfs -u -t\nmk-initrd && sync && sync && init 6\n```\n\n- **最后重启系统，完成升级**\n\n## [打赏](donation/README.md)\n\n---\n\n## 如何更新系统\n\n更新系统无需额外操作，直接使用最新的 **Debian** 系统仓库更新即可，通过以下命令进行系统更新\n\n```shell\napt update ; apt upgrade -y\n```\n## [打赏](donation/README.md)\n"
        },
        {
          "name": "versions.md",
          "type": "blob",
          "size": 0.7421875,
          "content": "## 2.0正式版 系统及相关组件(内核、固件等) 最新版本情况\n\n#### The release version 2.0 System and related components (kernel, firmware, etc.) Latest version:\n\n---\n\n#### 系统（ System ）：\n\n**2021-11-11-v2020-2.0-U6-Release** (kernelVer:**5.10.78-Release-OPENFANS+20211111-v8**) ;\n\n#### 内核及固件（ kernel & firmware）：\n\n**5.10.88-Release-OPENFANS+20211222-v8** ( **建议更新 - Suggested to upgrade** )\n\n```\n注意：U3(含)之后的固件不支持从 版本<=U2(包含在内)升级!!*\nNote: Fimware >=U3, >=U4 do not support upgrade from version <=U2(include) !!*\n```\n----\n\n请前往 **[此处](./README_zh.md#6%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80)** 下载。\n\nClick **[HERE](./README.md#6-download-links)** to Download.\n"
        },
        {
          "name": "videos",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}