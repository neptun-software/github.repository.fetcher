{
  "metadata": {
    "timestamp": 1736568509396,
    "page": 508,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ddvk/remarkable-hacks",
      "stars": 1684,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0361328125,
          "content": "MIT License\n\nCopyright (c) 2020 ddvk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.4140625,
          "content": "# Binary patches for the rM\n\nThose are features that I find useful/wanted for me to have. If someone else would like to try them, they are welcome.\n\n\n## Supported devices and firmware versions\n\nLatest version supported:\n\n- rm1: 2.15.1.1189\n- rm2: 2.15.1.1189\n\n## Disclaimer\n*The files are offered without any warranty and you will be violating the reMarkable AS EULA by using them.\nThere may be bugs, you may lose data, your device may crash, etc.*\n\n*The only guarantee is, that there is no ill intended code*\n\nI am not affiliated with reMarkable AS in anyway\n\n## Demo\n\n<p align=\"center\">\n    <img src=\"docs/images/screenshot_25027_bookmarks.png\" alt=\"Screenshot with bookmarks\" width=\"300\"/>\n    <img src=\"docs/images/screenshot_25027_numpad.png\" alt=\"Screenshot with numpad\" width=\"300\"/>\n    <img src=\"docs/images/screenshot_25027_share.png\" alt=\"Screenshot with extended options\" width=\"300\"/>\n    <img src=\"docs/images/screenshot_recent_files.png\" alt=\"Screenshot with recent files\" width=\"300\"/>\n    <img src=\"docs/images/ddvk_hacks_cheat_sheet.png\" alt=\"cheat-sheet showing gestures\" width=\"300\"\n/>\n</p>\n\n\n## Changes\n- rm2 [2.15.0.1067](patches/21501067_rm2/readme.md)\n- rm1 [2.15.0.1067](patches/21501067_rm2/readme.md)\n- rm2 [2.14.3.1005](patches/21431005_rm2/readme.md)\n- rm1 [2.14.3.1005](patches/21431005_rm2/readme.md)\n- rm2 [2.14.3.977](patches/2143977_rm2/readme.md)\n- rm1 [2.14.3.977](patches/2143977_rm2/readme.md)\n- rm2 [2.14.1.866](patches/2141866_rm2/readme.md)\n- rm1 [2.14.1.866](patches/2141866_rm2/readme.md)\n- rm2 [2.14.0.861](patches/2140861_rm2/readme.md)\n- rm2 [2.12.3.606](patches/2123606_rm2/readme.md)\n- rm1 [2.12.3.606](patches/2123606_rm2/readme.md)\n- rm1 [2.12.2.573](patches/2122573_rm2/readme.md)\n- rm2 [2.12.2.573](patches/2122573_rm2/readme.md)\n- rm2 [2.12.1.527](patches/2121527_rm2/readme.md)\n- rm1 [2.12.1.527](patches/2121527_rm2/readme.md)\n- rm2 [2.11.0.442](patches/2110442_rm2/readme.md)\n- rm1 [2.11.0.442](patches/2110442_rm1/readme.md)\n\n## Quick Doc\n\nNote: the reMarkable 2 does not have buttons\n\n#### Gestures\n- pinch to zoom in/out (has to be enabled first in the Share menu)\n- swipe down in the middle of the screen, to toggle side-menu\n- swipe down from the top edge to close document (existing rM gesture, not a hack)\n- two finger swipe down to switch to previous document\n- two finger swipe up *or* long press home button for recent files\n    - long press on a recent file that was deleted but not synced to restore it\n- swipe up, top menu corner: switch between eraser/pen\n- swipe down, top menu corner: switch between last 2 pens\n- swipe up, top bookmark corner: cycle pen colors\n- swipe left, top middle: undo\n- swipe right, top middle: redo\n\n#### Bookmarks\n- tap upper right (or left for lefthanders) corner to bookmark a page\n- long press on bookmark to edit its description (also works in bookmark list in side-menu)\n\n#### Zen Mode\n- Enter/Exit: left & right buttons simultaneously *or* long press on the \"toggle menu\" (uppermost)\n- Gestures (swipe gestures work in a small area under the \"toggle menu\" icon)\n    - left button (or right button for lefthanders) *or* swipe up toggles eraser\n    - right button (or left button for lefthanders) *or* swipe down toggles last tool\n    - long press left button (or right button for lefthanders) or swipe left to undo\n    - swipe right to redo\n\n#### Reading Mode\n- Enter: home & right buttons simultaneously *or* tap M in the side-menu \"Document Menu\" (bottommost)\n- Exit: left & right buttons simultaneously *or* open side-menu and long press on the \"toggle menu\" (uppermost)\n- Gestures:\n    - tap left or right side of screen to change pages\n\n## Extras\n- email and hwr for scribbles on pdfs\n- extract scribbles from pdfs into new notebook (PDF page overview -> Select pages, tap Move, tap Move Out, tap New Notebook. Note that the scribble \"pages\" are literally removed from the PDF, but the PDF pages are not - so if you extract page 5, page 6 of your scribbles will now be on page 5 of your PDF. Probably not what you want! Make a backup copy first.)\n- clock (check the Timezones)\n- support for transparent pixels in suspended.png (only when using no lock passcode) and sleeping.png (after reboot)\n\n# Installation\nFind the ssh password (**write it down and keep it safe**)  \n\nin the newest version:\n\nSettings->Help->Copyright and Licenses (under GPLv3 Compliance)\n\t\nversions < 2.3:\n\nSettings->About->Copyright->General Information\n\n\n**It is really important to have the password somewhere, in case something goes wrong**\n\n\n## Linux\nYou got this\n\n## Windows 10\n- open a command line prompt (Win-R, type cmd, enter)\n- ssh root@10.11.99.1 \n- type the password\n- paste the automagic line\n\n_or_\n\n- install Putty and enter 10.11.99.1 as address and root for username\n- paste the automagic line\n\n## macOS\n- open Spotlight (Cmd-Space) type Terminal, enter\n- ssh root@10.11.99.1\n- type the password\n- paste the automagic line\n\n# Automagic\n\n**Make sure the device has Internet connectivity i.e. Wifi is ON and connected**\n\nPaste the following and press enter:\n```\nsh -c \"$(wget https://raw.githubusercontent.com/ddvk/remarkable-hacks/master/patch.sh -O-)\" \n```\nto try a different patch:\n\n```\nsh -c \"$(wget https://raw.githubusercontent.com/ddvk/remarkable-hacks/master/patch.sh -O-)\" _ patch_xxx \n```\nwhere xxx is the patch number\n\nThe app should start, play with it, but press **CTRL-C** (Hold the Control key and press C) to stop it when done **DON'T LEAVE IT JUST RUNNING** and follow the instructions after pressing **CTRL-C**\n\n**Should Press 'Y' and then Enter when asked to make it permanent**\n\n# Notes\npatches are cumulative (the last one contains all previous changes and gets updated with bugfixes)\na patch can be applied more than once, it's more of a snapshot really, you can go back to a previous version\n\n## Installation with oxide, draft or remux\nThe installation starts an instance of xochitl, but isn't aware of oxide, draft or remux running,\nwhich needs xochitl to be started in a different way. \nExecute this before the installation if you've got oxide or draft running:\n```shell\nsystemctl stop tarnish # only if you're using oxide\nsystemctl stop draft # only if you're using draft\nsystemctl stop remux # only if you're using remux\n```\nAnd this after the installation:\n```shell\nsystemctl stop xochitl\nsystemctl start tarnish # only if you're using oxide\nsystemctl start draft # only if you're using draft\nsystemctl start remux # only if you're using remux\n```\nIf you forget to do this, you'll have two xochitls, and the screen will be garbled.\n\n\n## Timezones\nThe time is in UTC. In order to have the right time, the right timezone should be set (which has things like Daylight Saving Time, utc offsets etc).\n\nCheck the list of timezones in [Timezones](docs/timezones.md)  \nTo set a timezone, run this on the device, by setting one that matches your location e.g.  \n`timedatectl set-timezone \"Europe/Paris\"` or  \n`timedatectl set-timezone \"America/Denver\"`\n\nThe device doesn't have all possible timezones. If yours is missing from the list, find a linux distro and copy the missing time zone to `/usr/share/zoneinfo/` then execute the above command with the new zone.\n\n## Extra fonts (e.g. Japanese)\nThe rootfs doesn't have enough space, so you can do this (copy paste in the rm terminal)  \n```\nmv /usr/share/fonts/ttf ~/ttf\nln -sf /home/root/ttf /usr/share/fonts/ttf\nwget https://github.com/tony/dot-fonts/raw/master/Hanazono/HanaMinA.ttf -O ~/ttf/HanaMinaA.ttf\nwget https://github.com/tony/dot-fonts/raw/master/Hanazono/HanaMinB.ttf -O ~/ttf/HanaMinaB.ttf\n```\nfor japanese: HanaMinA.ttf and HanaMinB.ttf seem ok  \nput new fonts in `/home/root/ttf`,  do `fc-cache` and restart xochitl\n\n\n## Making it permanent\nYou should have typed 'Y' when asked\n\n## Uninstall / Removal\n```\nsh -c \"$(wget https://raw.githubusercontent.com/ddvk/remarkable-hacks/master/patch.sh -O-)\" _ purge\n\nor if offline\n\nsh /home/rmhacks/patch.sh purge\n```\n\n\n## Revert in case things go terribly wrong\n# **DON'T DO FACTORY RESET!**\n(this will regenerate the root password, unless there is no free space on the root partition)  \nExcept when everything is working normally and you want to really remove all your documents.\n\nssh into your device and execute:\n```\nsystemctl stop xochitl\nrm -fr .cache/remarkable/xochitl/qmlcache/*\ncp /home/rmhacks/xochitl.version /usr/bin/xochitl #where version is the current device version\nsystemctl start xochitl\n```\n\n## Troubleshooting\n\n### Not enough space\nCan happen if you added additional sleep screens or templates to the root partition, also used to be a bug a long time ago. \n \nRemove those.\n\n### SSH REMOTE HOST IDENTIFICATION CHANGED, something nasty blah blah\nThe device regenerates the ssh host keys after every update.  \n\nRemove the offending line from `~/.ssh/known_hosts` or just delete the whole file.\n\n\n# [Features compiled by u/TheTomatoes2](docs/features.md)\n\n\n## FAQ\n\n#### How do you make the patches?\nI wrote some tools, I change the code, I patch\n\n#### Why is this not open source?\nI don't own the source, the legality is dubious, not in reMarkable AS's best interest due to various reasons, etc\n\n#### Can you add this or that feature?\nSome things are hard, very time consuming or even impossible for my skill level. I prefer to take a more pragmatic approach and add things that are easy, but from which most users can benefit.  \n\n\n#### What happens when a new offical version comes out? \nYou lose the hacks when the device auto updates (If you want to prevent this disable auto updates). When the patches have been ported, you can install them again (bookmarks stay on the device and will reappear) \n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "patch.sh",
          "type": "blob",
          "size": 13.1845703125,
          "content": "set -e\nbinary_name=xochitl\nworkdir=/home/rmhacks\npatched=\"$workdir/$binary_name.patched\"\n\nif [ ! -d $workdir ]; then\n    mkdir -p $workdir\n    # migrate stuff and clean old patches\n    mv /home/root/xochitl.* $workdir 2> /dev/null || true\n    rm /home/root/patch_* 2> /dev/null || true\nfi;\n\nfunction checkspace(){\n    part=$1\n    needed=$2\n    available=$(df $part | tail -n1 | awk '{print $4}');\n    let available=$available/1024\n    if [ $available -lt $needed ];then\n      echo \"Less than ${needed}MB free, ${available}MB\"\n      return 1;\n    fi;\n}\n\ncheckspace / 3 || (echo \"Trying to free space...\"; journalctl --vacuum-time=1m)\ncheckspace / 3 || (echo \"Aborting...\"; exit 10)\ncheckspace /home 10 || (echo \"Not enough space on /home\"; exit 10)\n\necho \"Disk space seems to be enough.\"\n\ntrap onexit INT\n\nfunction onexit(){\n    cleanup\n    auto_install\n\n    exit 0\n}\nfunction cleanup(){\n    echo \"Cleaning up...\"\n    rm /tmp/*crash* 2> /dev/null || true\n    rm -fr /home/root/.cache/remarkable/xochitl/qmlcache/*\n}\n\nfunction purge(){\n    if [ ! -f \"$backup_file\" ]; then\n        echo \"The backup file is missing\"\n        exit 1\n    fi\n\n    hash=$(sha1sum \"$backup_file\" | cut -c 1-40)\n\n    if [ \"$expectedhash\" != \"$hash\" ]; then\n        echo \"The backup $backup_file is not the original file (was it replaced/ deleted? / wrong hash)\"\n        echo \"Expected hash: $expectedhash\"\n        echo \"Actual hash: $hash\"\n        echo \"cowardly aborting...\"\n        exit 1\n    fi\n\n    systemctl stop xochitl\n    cleanup\n    cp \"$backup_file\" /usr/bin/xochitl\n    systemctl start xochitl\n    echo -n \"Remove all traces [Y/n]? \"\n    read yn\n    case $yn in \n        [Nn]* )\n            ;;\n            * ) \n            rm -fr \"$workdir\"\n            ;;\n    esac\n    exit 0\n}\n\nfunction auto_install(){\n    if [ -z \"$1\" ]; then\n        echo -n \"If everything worked, do you want to make it permanent [N/y]? \"\n        read yn\n    else\n        yn=$1\n    fi\n    case $yn in \n        [Yy]* ) \n            echo \"Making it permanent, DON'T DELETE $backup_file !!!\"\n            mv $patched /usr/bin/$binary_name\n            echo \"IMPORTANT: Do not forget to disable 'Automatic updates' on your reMarkable to avoid losing the hack unintentionally.\"\n            echo \"Starting the UI...\"\n            systemctl start xochitl\n            return 0\n            ;;\n        * )\n            echo \"Use the $patched binary if you change your mind / provide it if it segfaulted.\"\n            echo \"Starting the original...\"\n            systemctl start xochitl\n            ;;\n    esac\n    return 1\n}\n\ncurrentVersion=\"$(</etc/version)\"\ncase $currentVersion in\n    \"20221026103859\" )\n        patch_name=${1:-patch_39.1.01}\n        version=\"21511189_rm1\"\n        expectedhash=\"1c01bae469a2e29846c68758e2cae4a2b8b5055d\"\n        echo \"rM1 Version 2.15.1.1189 - $patch_name\"\n        ;;\n    \"20221026104022\" )\n        patch_name=${1:-patch_39.2.01}\n        version=\"21511189_rm2\"\n        expectedhash=\"64e3cb3d05aec4a40624ebfc730e480358e1b184\"\n        echo \"rM2 Version 2.15.1.1189 - $patch_name\"\n        ;;\n    \"20221003074737\" )\n        patch_name=${1:-patch_38.1.03}\n        version=\"21501067_rm1\"\n        expectedhash=\"a3ce408c8a717d48746e361336532924f5ff40f2\"\n        echo \"rM1 Version 2.15.0.1067 - $patch_name\"\n        ;;\n    \"20221003075633\" )\n        patch_name=${1:-patch_38.2.03}\n        version=\"21501067_rm2\"\n        expectedhash=\"fcd3c84215c5457d455419831760304736f3b694\"\n        echo \"rM2 Version 2.15.0.1067 - $patch_name\"\n        ;;\n    \"20220921102803\" )\n        patch_name=${1:-patch_37.1.01}\n        version=\"21431047_rm1\"\n        expectedhash=\"011742f027b70f37a0da293132daafcfc82b537d\"\n        echo \"rM1 Version 2.14.3.1047 - $patch_name\"\n        ;;\n    \"20220921101206\" )\n        patch_name=${1:-patch_37.2.01}\n        version=\"21431047_rm2\"\n        expectedhash=\"47c3ad26651f604be5de901881a8a44f9124a79c\"\n        echo \"rM2 Version 2.14.3.1047 - $patch_name\"\n        ;;\n    \"20220907142424\" )\n        patch_name=${1:-patch_36.1.01}\n        version=\"21431005_rm1\"\n        expectedhash=\"5b74a5d7bc7bd0926883c97d45af0d4015fb15f0\"\n        echo \"rM1 Version 2.14.3.1005 - $patch_name\"\n        ;;\n    \"20220907143405\" )\n        patch_name=${1:-patch_36.2.01}\n        version=\"21431005_rm2\"\n        expectedhash=\"6ef873c5addef949cb56e636a8fbd682840afe17\"\n        echo \"rM2 Version 2.14.3.1005 - $patch_name\"\n        ;;\n    \"20220825124750\" )\n        patch_name=${1:-patch_36.2.01}\n        version=\"2143977_rm2\"\n        expectedhash=\"470e88f8d5fb62f64939fe4ea3b89c515113f7e5\"\n        echo \"rM2 Version 2.14.3.977  - $patch_name\"\n        ;;\n    \"20220825122914\" )\n        patch_name=${1:-patch_36.1.01}\n        version=\"2143977_rm1\"\n        expectedhash=\"a88faec812ae20960bfbab38be0aa49aafec902a\"\n        echo \"rM1 Version 2.14.3.977  - $patch_name\"\n        ;;\n    \"20220617142418\" )\n        patch_name=${1:-patch_35.1.01}\n        version=\"2141866_rm1\"\n        expectedhash=\"a052dfbe587851d17146e586e4be65819f1360e3\"\n        echo \"rM1 Version 2.14.1.866 - $patch_name\"\n        ;;\n    \"20220617143306\" )\n        patch_name=${1:-patch_35.2.01}\n        version=\"2141866_rm2\"\n        expectedhash=\"1d7f6f049e5a6b192caaf07cbf67ba7c2555e5f0\"\n        echo \"rM2 Version 2.14.1.866 - $patch_name\"\n        ;;\n    \"20220615075543\" )\n        patch_name=${1:-patch_34.1.01}\n        version=\"2140861_rm1\"\n        expectedhash=\"a3da3cc4d393917703bcdc2ed3c280ebcc192e0f\"\n        echo \"rM1 Version 2.14.0.861 - $patch_name\"\n        ;;\n    \"20220615074909\" )\n        patch_name=${1:-patch_34.2.01}\n        version=\"2140861_rm2\"\n        expectedhash=\"6376fb20bdf6952bb7b75838c0bda1c80f0e9191\"\n        echo \"rM2 Version 2.14.0.861 - $patch_name\"\n        ;;\n    \"20220519120030\" )\n        patch_name=${1:-patch_33.2.01}\n        version=\"2130758_rm2\"\n        expectedhash=\"c77016e4608ccab1b1e619a6ef2769a205312025\"\n        echo \"rM2 Version 2.13.0.758 - $patch_name\"\n        ;;\n    \"20220330140034\" )\n        patch_name=${1:-patch_32.1.03}\n        version=\"2123606_rm1\"\n        expectedhash=\"e6693c76ad588c7a223cf5be5a280214495a68e0\"\n        echo \"rM1 Version 2.12.3.606 - $patch_name\"\n        ;;\n    \"20220330134519\" )\n        patch_name=${1:-patch_32.2.02}\n        version=\"2123606_rm2\"\n        expectedhash=\"b7d8f0ca786117cdf715e3f7b08b1eac3aed907a\"\n        echo \"rM2 Version 2.12.3.606 - $patch_name\"\n        ;;\n    \"20220303120824\" )\n        patch_name=${1:-patch_31.2.01}\n        version=\"2122573_rm2\"\n        expectedhash=\"7105e311df4df7f4ccde457ce574da63f49d3a4e\"\n        echo \"rM2 Version 2.12.2.573 - $patch_name\"\n        ;;\n    \"20220303122245\" )\n        patch_name=${1:-patch_31.1.01}\n        version=\"2122573_rm1\"\n        expectedhash=\"00b5095022a48e48cdbe435b8afff0e3dc736b96\"\n        echo \"rM1 Version 2.12.2.573 - $patch_name\"\n        ;;\n    \"20220202133838\" )\n        patch_name=${1:-patch_30.2.07}\n        version=\"2121527_rm2\"\n        expectedhash=\"8728cf8a2677a1b458f8e1ed665f8c1358568f7f\"\n        echo \"rM2 Version 2.12.1.527 - $patch_name\"\n        ;;\n    \"20220202133055\" )\n        patch_name=${1:-patch_30.1.08}\n        version=\"2121527_rm1\"\n        expectedhash=\"c542ee591b45cb18599dc852cc0d3ce82ec86b56\"\n        echo \"rM1 Version 2.12.1.527 - $patch_name\"\n        ;;\n    \"20211208075454\" )\n        patch_name=${1:-patch_29.2.02}\n        version=\"2110442_rm2\"\n        expectedhash=\"ad88de508a3c7da7f1ff6a9d394806c5d987026d\"\n        echo \"rM2 Version 2.11.0.442 - $patch_name\"\n        ;;\n    \"20211208080907\" )\n        patch_name=${1:-patch_29.1.02}\n        version=\"2110442_rm1\"\n        expectedhash=\"1f72eb42b0745d40196cb7fece6a8fee55f958c0\"\n        echo \"rM1 Version 2.11.0.442 - $patch_name\"\n        ;;\n    \"20211102142308\" )\n        patch_name=${1:-patch_28.1.02}\n        version=\"2103379_rm1\"\n        expectedhash=\"1978c56c0bf9a53e74fb05b7212381543adb709e\"\n        echo \"rM1 Version 2.10.3.379 - $patch_name\"\n        ;;\n    \"20211102143141\" )\n        patch_name=${1:-patch_28.2.02}\n        version=\"2103379_rm2\"\n        expectedhash=\"8510d6f4380b6155d630baecaccccfb0147263d0\"\n        echo \"rM2 Version 2.10.3.379 - $patch_name\"\n        ;;\n    \"20211014151303\" )\n        patch_name=${1:-patch_27.2.05}\n        version=\"2102356_rm2\"\n        expectedhash=\"2cc077e0bc5eca53664d4692197d54b477fa02ba\"\n        echo \"rM2 Version 2.10.2.356 - $patch_name\"\n        ;;\n    \"20211014150444\" )\n        patch_name=${1:-patch_27.1.03}\n        version=\"2102356_rm1\"\n        expectedhash=\"a76509107656c03e866ec169ad317da9111f71be\"\n        echo \"rM1 Version 2.10.2.356 - $patch_name\"\n        ;;\n    \"20210929140057\" )\n        patch_name=${1:-patch_26.2.02}\n        version=\"2101332_rm2\"\n        expectedhash=\"44ed43a128c821988519c3ea92c4516f011edd7e\"\n        echo \"rM2 Version 2.10.1.332 - $patch_name\"\n        ;;\n    \"20210923144714\" )\n        patch_name=${1:-patch_25.2.01}\n        version=\"2100324_rm2\"\n        expectedhash=\"0990b599d412a1c6368985d872383b29b47ffab6\"\n        echo \"rM2 Version 2.10.0.324 - $patch_name\"\n        ;;\n    \"20210923152158\" )\n        patch_name=${1:-patch_25.1.03}\n        version=\"2100324_rm1\"\n        expectedhash=\"635917603b0d9349ddf5f6ead818701a42979945\"\n        echo \"rM1 Version 2.10.0.324 - $patch_name\"\n        ;;\n    \"20210812195523\" )\n        patch_name=${1:-patch_24.2.04}\n        version=\"291217_rm2\"\n        expectedhash=\"ab37e201e819e4212fb4e2ce92cd747614499fbb\"\n        echo \"rM2 Version 2.9.1.217 - $patch_name\"\n        ;;\n    \"20210820111232\" )\n        patch_name=${1:-patch_24.1.02}\n        version=\"291236_rm1\"\n        expectedhash=\"e5d3ce51e81a6e23bac0c66549b809e6dd4e35a0\"\n        echo \"rM1 Version 2.9.1.236 - $patch_name\"\n        ;;\n    \"20210611153600\" )\n        patch_name=${1:-patch_23.2.02}\n        version=\"28098_rm2\"\n        expectedhash=\"02a851bc33231fcd253eee781eb127e3c942da69\"\n        echo \"rM2 Version 2.8.0.98 - $patch_name\"\n        ;;\n    \"20210611154039\" )\n        patch_name=${1:-patch_23.1.02}\n        version=\"28098_rm1\"\n        expectedhash=\"b688b4afbd5c13347bada20f26b9108d82658f9a\"\n        echo \"rM1 Version 2.8.0.98 - $patch_name\"\n        ;;\n    \"20210511153632\" )\n        patch_name=${1:-patch_22.2.01}\n        version=\"27153_rm2\"\n        expectedhash=\"f0846772da9b810aecc2a307ba5dae21c072674a\"\n        echo \"rM2 Version 2.7.1.53 - $patch_name\"\n        ;;\n    \"20210504114631\" )\n        patch_name=${1:-patch_21.2.05}\n        version=\"27051_rm2\"\n        expectedhash=\"f0846772da9b810aecc2a307ba5dae21c072674a\"\n        echo \"rM2 Version 2.7.0.51 - $patch_name\"\n        ;;\n    \"20210504114855\" )\n        patch_name=${1:-patch_21.1.04}\n        version=\"27051_rm1\"\n        expectedhash=\"123877bb7dd6133f4540e03d3912b1d4c4d76050\"\n        echo \"rM Version 2.7.0.51 - $patch_name\"\n        ;;\n    \"20210322075357\" )\n        patch_name=${1:-patch_20.2.03}\n        version=\"26275_rm2\"\n        expectedhash=\"7b314d6fb03c8789396f0ed43a4b27a18c649d2d\"\n        echo \"rM2 Version 2.6.2.75 - $patch_name\"\n        ;;\n    \"20210322075617\" )\n        patch_name=${1:-patch_20.1.03}\n        version=\"26275_rm1\"\n        expectedhash=\"50a44683ac1b8ce524e55e10f57b699e7c4ca409\"\n        echo \"rM Version 2.6.2.75 - $patch_name\"\n        ;;\n    \"20210311194323\" )\n        patch_name=${1:-patch_19.2.02}\n        version=\"26171_rm2\"\n        expectedhash=\"fc434bf45f1ff927af799ddccc7b2b0449f516f7\"\n        echo \"rM2 Version 2.6.1.71 - $patch_name\"\n        ;;\n\n    \"20210311193614\" )\n        patch_name=${1:-patch_19.1.02}\n        version=\"26171_rm1\"\n        expectedhash=\"2d31db3e7f1a7b98a493cc5a1351fe303f849cd3\"\n        echo \"rM1 Version 2.6.1.71 - $patch_name\"\n        ;;\n\n    * )\n        echo \"The version the device is running is not supported, yet. $currentVersion\"\n        exit 1\n        ;;\nesac\n\n\nbackup_file=\"$workdir/$binary_name.$version\"\n\nif [ $patch_name == \"purge\" ]; then\n    purge\n    exit 0\nfi\n\nif [ -z \"$SKIP_DOWNLOAD\" ]; then\n    wget \"https://github.com/ddvk/remarkable-hacks/raw/master/patches/$version/$patch_name\" -O \"$workdir/$patch_name\" || exit 1\n    # save this file locally for offline uninstall\n    wget \"https://github.com/ddvk/remarkable-hacks/raw/master/patch.sh\" -O \"$workdir/patch.sh\" || exit 1\n    chmod +x \"$workdir/patch.sh\"\nfi\n\n#make sure we keep the original, which is needed for additional patching or purge\nif [ ! -f $backup_file ]; then\n    cp /usr/bin/$binary_name $backup_file\nfi\n\nhash=$(sha1sum $backup_file | cut -c 1-40)\nif [ \"$expectedhash\" != \"$hash\" ]; then\n    echo \"The backup $backup_file is not the original file (was it replaced/ deleted? / wrong hash)\"\n    echo \"Expected hash: $expectedhash\"\n    echo \"Actual hash: $hash\"\n    echo \"cowardly aborting...\"\n    exit 1\nfi\n\n\nbspatch $backup_file $patched $workdir/$patch_name\nchmod +x $patched\n\nsystemctl stop xochitl\nsystemctl reset-failed xochitl\n#just to be sure, it goes into and endless reboot due to qml mismatch\nsystemctl stop remarkable-fail\n \n# there can be only one (accessing the fb)\nsystemctl stop rm2fb || true\nkillall remarkable-shutdown || true\n\n# oxide / remux / prevent multiple xochitl instances\nkillall xochitl || true\n\nif [ -z \"$MAKE_PERM\" ]; then\n\n   cleanup\n   echo \"\"\n   echo \"**********************************************\"\n   echo \"Trying to start the patched version...\"\n   echo -e \"\\e[1mYou can play around, press \\e[5m\\e[31mCTRL-C \\e[39m\\e[25mwhen done!\\e[0m\"\n   echo \"**********************************************\"\n   echo \"\"\n   QT_LOGGING_RULES=*=false $patched -plugin evdevlamy  || echo \"Did it crash?\"\n   cleanup\nelse\n   auto_install \"y\"\n   cleanup\n   exit\nfi\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "usr",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}