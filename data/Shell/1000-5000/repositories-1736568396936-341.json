{
  "metadata": {
    "timestamp": 1736568396936,
    "page": 341,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stefanzweifel/git-auto-commit-action",
      "stars": 2114,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1123046875,
          "content": "tests/test_fake_local_repository\ntests/test_fake_remote_repository\ntests/test_fake_temp_local_repository\nyarn.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 18.3515625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased](https://github.com/stefanzweifel/git-auto-commit-action/compare/v5.0.1...HEAD)\n\n> TBD\n\n## [v5.0.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v5.0.0...v5.0.1) - 2024-04-12\n\n### Fixed\n\n- Fail if attempting to execute git commands in a directory that is not a git-repo. ([#326](https://github.com/stefanzweifel/git-auto-commit-action/pull/326)) [@ccomendant](https://github.com/@ccomendant)\n\n### Dependency Updates\n\n- Bump bats from 1.10.0 to 1.11.0 ([#325](https://github.com/stefanzweifel/git-auto-commit-action/pull/325)) [@dependabot](https://github.com/@dependabot)\n- Bump release-drafter/release-drafter from 5 to 6 ([#319](https://github.com/stefanzweifel/git-auto-commit-action/pull/319)) [@dependabot](https://github.com/@dependabot)\n\n### Misc\n\n- Clarify `commit_author` input option ([#315](https://github.com/stefanzweifel/git-auto-commit-action/pull/315)) [@npanuhin](https://github.com/@npanuhin)\n- Add step id explanation for output in README.md ([#324](https://github.com/stefanzweifel/git-auto-commit-action/pull/324)) [@ChristianVermeulen](https://github.com/@ChristianVermeulen)\n- Linux is not UNIX ([#321](https://github.com/stefanzweifel/git-auto-commit-action/pull/321)) [@couling](https://github.com/@couling)\n\n## [v5.0.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.16.0...v5.0.0) - 2023-10-06\n\nNew major release that bumps the default runtime to Node 20. There are no other breaking changes.\n\n### Changed\n\n- Update node version to node20 ([#300](https://github.com/stefanzweifel/git-auto-commit-action/pull/300)) [@ryudaitakai](https://github.com/@ryudaitakai)\n- Add _log and _set_github_output functions ([#273](https://github.com/stefanzweifel/git-auto-commit-action/pull/273)) [@stefanzweifel](https://github.com/@stefanzweifel)\n\n### Fixed\n\n- Seems like there is an extra space ([#288](https://github.com/stefanzweifel/git-auto-commit-action/pull/288)) [@pedroamador](https://github.com/@pedroamador)\n- Fix git-auto-commit.yml ([#277](https://github.com/stefanzweifel/git-auto-commit-action/pull/277)) [@zcong1993](https://github.com/@zcong1993)\n\n### Dependency Updates\n\n- Bump actions/checkout from 3 to 4 ([#302](https://github.com/stefanzweifel/git-auto-commit-action/pull/302)) [@dependabot](https://github.com/@dependabot)\n- Bump bats from 1.9.0 to 1.10.0 ([#293](https://github.com/stefanzweifel/git-auto-commit-action/pull/293)) [@dependabot](https://github.com/@dependabot)\n- Bump github/super-linter from 4 to 5 ([#289](https://github.com/stefanzweifel/git-auto-commit-action/pull/289)) [@dependabot](https://github.com/@dependabot)\n- Bump bats from 1.8.2 to 1.9.0 ([#282](https://github.com/stefanzweifel/git-auto-commit-action/pull/282)) [@dependabot](https://github.com/@dependabot)\n\n## [v4.16.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.4...v4.16.0) - 2022-12-02\n\n### Changed\n\n- Don't commit files when only LF/CRLF changes ([#265](https://github.com/stefanzweifel/git-auto-commit-action/pull/265)) [@ZeroRin](https://github.com/@ZeroRin)\n- Update default email address of github-actions[bot] ([#264](https://github.com/stefanzweifel/git-auto-commit-action/pull/264)) [@Teko012](https://github.com/@Teko012)\n\n### Fixed\n\n- Fix link and text for workflow limitation ([#263](https://github.com/stefanzweifel/git-auto-commit-action/pull/263)) [@Teko012](https://github.com/@Teko012)\n\n## [v4.15.4](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.3...v4.15.4) - 2022-11-05\n\n### Fixed\n\n- Let Action fail if git binary can't be located ([#261](https://github.com/stefanzweifel/git-auto-commit-action/pull/261)) [@stefanzweifel](https://github.com/@stefanzweifel)\n\n### Dependency Updates\n\n- Bump github/super-linter from 3 to 4 ([#258](https://github.com/stefanzweifel/git-auto-commit-action/pull/258)) [@dependabot](https://github.com/@dependabot)\n- Bump bats from 1.7.0 to 1.8.2 ([#259](https://github.com/stefanzweifel/git-auto-commit-action/pull/259)) [@dependabot](https://github.com/@dependabot)\n- Bump actions/checkout from 2 to 3 ([#257](https://github.com/stefanzweifel/git-auto-commit-action/pull/257)) [@dependabot](https://github.com/@dependabot)\n\n## [v4.15.3](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.2...v4.15.3) - 2022-10-26\n\n### Changed\n\n- Use deprecated set-output syntax if GITHUB_OUTPUT environment is not available ([#255](https://github.com/stefanzweifel/git-auto-commit-action/pull/255)) [@stefanzweifel](https://github.com/@stefanzweifel)\n\n## [v4.15.2](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.1...v4.15.2) - 2022-10-22\n\n### Changed\n\n- Replace set-output usage with GITHUB_OUTPUT ([#252](https://github.com/stefanzweifel/git-auto-commit-action/pull/252)) [@amonshiz](https://github.com/amonshiz)\n\n## [v4.15.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.0...v4.15.1) - 2022-10-10\n\n### Fixed\n\n- Run Action on Node16 ([#247](https://github.com/stefanzweifel/git-auto-commit-action/pull/247)) [@stefanzweifel](https://github.com/@stefanzweifel)\n\n## [v4.15.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.14.1...v4.15.0) - 2022-09-24\n\n### Changed\n\n- Expand `file_pattern`-input to an array ([#205](https://github.com/stefanzweifel/git-auto-commit-action/pull/205)) [@stefanzweifel](https://github.com/@stefanzweifel)\n\n### Fixed\n\n- String values in README.md extended example are now correct ([#196](https://github.com/stefanzweifel/git-auto-commit-action/pull/196)) [@karolswdev](https://github.com/@karolswdev)\n- Fix Typos and grammer Errors in README ([#235](https://github.com/stefanzweifel/git-auto-commit-action/pull/235)) [@derrickleemy](https://github.com/@derrickleemy)\n- Fix Typo in README ([#230](https://github.com/stefanzweifel/git-auto-commit-action/pull/230)) [@fty4](https://github.com/@fty4)\n- Add missing links in the CHANGELOG ([#223](https://github.com/stefanzweifel/git-auto-commit-action/pull/223)) [@ericcornelissen](https://github.com/@ericcornelissen)\n\n## [v4.14.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.14.0...v4.14.1) - 2022-04-12\n\n## Changed\n\n- Change Commit User Name from \"GitHub Actions\" to \"github-actions[bot]\" ([#213](https://github.com/stefanzweifel/git-auto-commit-action/pull/213)) @jooola\n- Change Commit User Email from \"actions@github.com\" to \"github-actions[bot]@users.noreply.github.com\" ([#213](https://github.com/stefanzweifel/git-auto-commit-action/pull/213)) @jooola\n\n## Fixed\n\n- Update doc link to GITHUB_TOKEN not triggering new workflow runs ([#206](https://github.com/stefanzweifel/git-auto-commit-action/pull/206)) @gapple\n\n## [v4.14.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.13.1...v4.14.0) - 2022-03-18\n\n## Added\n\n- Add `create_branch` option to force create a new branch ([#203](https://github.com/stefanzweifel/git-auto-commit-action/pull/203)) @stefanzweifel\n\n## Fixed\n\n- README.md: Updates hyperlink to GH docs ([#200](https://github.com/stefanzweifel/git-auto-commit-action/pull/200)) @funkyfuture\n\n## [v4.13.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.13.0...v4.13.1) - 2022-01-13\n\n## Fixed\n\n- Properly disambiguate between branch or file checkout ([#199](https://github.com/stefanzweifel/git-auto-commit-action/pull/199)) @kenodegard\n\n## [v4.13.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.12.0...v4.13.0) - 2022-01-10\n\n## Added\n\n- Add `skip_checkout` option ([#197](https://github.com/stefanzweifel/git-auto-commit-action/pull/197)) @cmbuckley\n\n## Changed\n\n- Add note on minimum permissions to the docs ([#180](https://github.com/stefanzweifel/git-auto-commit-action/pull/180)) @ericcornelissen\n\n## [v4.12.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.11.0...v4.12.0) - 2021-09-10\n\n### Added\n\n- Add `commit_hash` output [#172](https://github.com/stefanzweifel/git-auto-commit-action/pull/172)\n\n## [v4.11.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.10.0...v4.11.0) - 2021-05-03\n\n### Added\n\n- Add `status_options` and `add_options` option [#156](https://github.com/stefanzweifel/git-auto-commit-action/pull/156)\n\n## [v4.10.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.9.2...v4.10.0) - 2021-04-12\n\n### Added\n\n- Add `disable_globbing` option [#153](https://github.com/stefanzweifel/git-auto-commit-action/issues/153), [#154](https://github.com/stefanzweifel/git-auto-commit-action/pull/154)\n\n## [v4.9.2](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.9.1...v4.9.2) - 2021-03-04\n\n### Fixes\n\n- Push created annotated tags to remote by using `--follow-tags` and `--atomic` instead of just `--tags` [#146](https://github.com/stefanzweifel/git-auto-commit-action/pull/146)\n\n## [v4.9.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.9.0...v4.9.1) - 2021-02-23\n\n### Changed\n\n- Revert changes made in v4.9.0. A branch will no longer be automatically generated. [#144](https://github.com/stefanzweifel/git-auto-commit-action/pull/144)\n\n## [v4.9.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.8.0...v4.9.0) - 2021-02-20\n\n### Changed\n\n- Automatically create branch if a branch with the given name does not exist [#140](https://github.com/stefanzweifel/git-auto-commit-action/pull/140)\n\n## [v4.8.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.7.2...v4.8.0) - 2020-12-15\n\n### Added\n\n- Add `skip_fetch` option to skip the execution of `git-fetch` [#131](https://github.com/stefanzweifel/git-auto-commit-action/pull/131)\n\n### Changed\n\n- Update `git fetch` to only fetch the latest commit from remote [#131](https://github.com/stefanzweifel/git-auto-commit-action/pull/131)\n\n## [v4.7.2](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.7.1...v4.7.2) - 2020-10-24\n\nThis release basically reverts the Action to the state of `v4.6.0`.\n\n### Changed\n\n- Revert change to fix git-checkout with special characters in branch names [#122](https://github.com/stefanzweifel/git-auto-commit-action/pull/122)\n\n## [v4.7.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.7.0...v4.7.1) - 2020-10-22\n\n### Removed\n\n- Remove `checkout_options` as it broke everything [#120](https://github.com/stefanzweifel/git-auto-commit-action/pull/120/)\n\n## [v4.7.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.6.0...v4.7.0) - 2020-10-21\n\n### Added\n\n- Add `checkout_options` [#115](https://github.com/stefanzweifel/git-auto-commit-action/pull/115)\n\n## [v4.6.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.5.1...v4.6.0) - 2020-10-11\n\n### Changed\n\n- Make \"commit_message\" optional and set default commit message to \"Apply automatic changes\" [#103](https://github.com/stefanzweifel/git-auto-commit-action/issues/103), [#110](https://github.com/stefanzweifel/git-auto-commit-action/pull/110)\n\n### Fixes\n\n- Better support for branch names with special characters in them [#108](https://github.com/stefanzweifel/git-auto-commit-action/pull/108)\n\n## [v4.5.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.5.0...v4.5.1) - 2020-09-11\n\n### Removed\n\n- Remove orphan branch feature added in #95 which broke stuff [#98](https://github.com/stefanzweifel/git-auto-commit-action/pull/98)\n\n## [v4.5.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.4.1...v4.5.0) - 2020-09-10\n\n### Added\n\n- Create orphan branch if branch name does not exist [#95](https://github.com/stefanzweifel/git-auto-commit-action/pull/95)\n\n## [v4.4.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.4.0...v4.4.1) - 2020-08-16\n\n### Changed\n\n- Include given `file_pattern` in git dirty check [#91](https://github.com/stefanzweifel/git-auto-commit-action/pull/91)\n\n## [v4.4.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.3.0...v4.4.0) - 2020-06-26\n\n### Added\n\n- Add option to skipt the dirty check and always try to create and push a commit [#82](https://github.com/stefanzweifel/git-auto-commit-action/issues/82), [#84](https://github.com/stefanzweifel/git-auto-commit-action/pull/84)\n\n## [v4.3.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.2.0...v4.3.0) - 2020-05-16\n\nNote: Since v4.3.0 we provide major version tags. You can now use `stefanzweifel/git-auto-commit-action@v4` to always use the latest release of a major version. See [#77](https://github.com/stefanzweifel/git-auto-commit-action/issues/77) for details.\n\n### Added\n\n- Add new `push_options`-input. This feature makes it easier for you to force-push commits to a repository. [#78](https://github.com/stefanzweifel/git-auto-commit-action/pull/78), [#72](https://github.com/stefanzweifel/git-auto-commit-action/issues/72)\n\n## [v4.2.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.6...v4.2.0) - 2020-05-10\n\n### Changed\n\n- Use `${{ github.head_ref }}` as default branch value. Therefore, the branch name when listening for `pull_request`-events is optional. [#75](https://github.com/stefanzweifel/git-auto-commit-action/pull/75), [#73](https://github.com/stefanzweifel/git-auto-commit-action/pull/73)\n\n## [v4.1.6](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.5...v4.1.6) - 2020-04-28\n\n### Fixes\n\n- Fix issue where tags could not be created correctly [#68](https://github.com/stefanzweifel/git-auto-commit-action/pull/68)\n\n## [v4.1.5](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.4...v4.1.5) - 2020-04-23\n\n### Added\n\n- Update `file_pattern` to support multiple file paths [#65](https://github.com/stefanzweifel/git-auto-commit-action/pull/65)\n\n### Changes\n\n- Revert changes made in v4.1.4 [#63](https://github.com/stefanzweifel/git-auto-commit-action/pull/63)\n\n### Fixes\n\n- Fix issue with `commit_options` [#64](https://github.com/stefanzweifel/git-auto-commit-action/pull/64)\n\n## [v4.1.4](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.3...v4.1.4) - 2020-04-22\n\n### Fixed\n\n- Fix bug introduced in previous version, where git user configuration has been placed inline [#62](https://github.com/stefanzweifel/git-auto-commit-action/pull/62)\n\n## [v4.1.3](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.2...v4.1.3) - 2020-04-18\n\n### Changed\n\n- Place Git user configuration inline [#59](https://github.com/stefanzweifel/git-auto-commit-action/pull/59)\n\n## [v4.1.2](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.1...v4.1.2) - 2020-04-03\n\n### Fixes\n\n- Fix Issue with `changes_detected`-output [#57](https://github.com/stefanzweifel/git-auto-commit-action/pull/57)\n\n## [v4.1.1](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.1.0...v4.1.1) - 2020-03-14\n\n### Fixes\n\n- Fix issue where commit has not been pushed to remote repository, when no `branch`-option has been given [#54](https://github.com/stefanzweifel/git-auto-commit-action/pull/54)\n\n## [v4.1.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.0.0...v4.1.0) - 2020-03-05\n\n### Added\n\n- Add `changes_detected` output [#49](https://github.com/stefanzweifel/git-auto-commit-action/pull/49), [#46](https://github.com/stefanzweifel/git-auto-commit-action/issues/46)\n- Add `tagging_message` input option to create and push tags [#50](https://github.com/stefanzweifel/git-auto-commit-action/pull/50), [#47](https://github.com/stefanzweifel/git-auto-commit-action/issues/47)\n\n## [v4.0.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v3.0.0...v4.0.0) - 2020-02-24\n\n### Changed\n\n- Switch Action to use `node12`-environment instead of `docker`. [#45](https://github.com/stefanzweifel/git-auto-commit-action/pull/45)\n\n## [v3.0.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.5.0...v3.0.0) - 2020-02-06\n\n### Added\n\n- Add `commit_user_name`, `commit_user_email` and `commit_author` input options for full customzation on how the commit is being created [#39](https://github.com/stefanzweifel/git-auto-commit-action/pull/39)\n\n### Changed\n\n- Make the `branch` input option optional [#41](https://github.com/stefanzweifel/git-auto-commit-action/pull/41)\n\n### Removed\n\n- Remove the need of a GITHUB_TOKEN. Users now have to use `actions/checkout@v2` or higher [#36](https://github.com/stefanzweifel/git-auto-commit-action/pull/36)\n\n## [v2.5.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.4.0...v2.5.0) - 2019-12-18\n\n### Added\n\n- Add new `repository`-argument [#22](https://github.com/stefanzweifel/git-auto-commit-action/pull/22)\n\n### Changed\n\n- Extract logic of the Action into methods and into a separate file [#24](https://github.com/stefanzweifel/git-auto-commit-action/pull/24)\n\n## [v2.4.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.3.0...v2.4.0) - 2019-11-30\n\n### Added\n\n- Commit untracked files [#19](https://github.com/stefanzweifel/git-auto-commit-action/pull/19) (fixes [#16](https://github.com/stefanzweifel/git-auto-commit-action/issues/16))\n- Add support for Git-LFS [#21](https://github.com/stefanzweifel/git-auto-commit-action/pull/21) (fixes [#20](https://github.com/stefanzweifel/git-auto-commit-action/issues/20))\n\n## [v2.3.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.2.0...v2.3.0) - 2019-11-04\n\n### Added\n\n- Add a new `commit_option`-argument. Allows users to define additional commit options for the `git-commit` command. [#14](https://github.com/stefanzweifel/git-auto-commit-action/pull/15)\n\n## [v2.2.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.1.0...v2.2.0) - 2019-10-26\n\n### Added\n\n- Add new `file_pattern`-argument. Allows users to define which files should be added in the commit. [#13](https://github.com/stefanzweifel/git-auto-commit-action/pull/13)\n\n## [v2.1.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v2.0.0...v2.1.0) - 2019-09-20\n\n### Added\n\n- Add `branch`-argument to determine, to which branch changes should be pushed. See README for usage details.\n\n### Fixed\n\n- Fixes Issue where changes couldn't be pushed to GitHub due to wrong ref-name.\n\n### Removed\n\n- Remove `commit_author_email` and `commit_author_name` arguments. The `$GITHUB_ACTOR` is now used as the Git Author\n\n## [v2.0.0](https://github.com/stefanzweifel/git-auto-commit-action/compare/v1.0.0...v2.0.0) - 2019-08-31\n\n### Changed\n\n- Make Action Compatible with latest beta of GitHub Actions [#3](https://github.com/stefanzweifel/git-auto-commit-action/pull/3)\n\n## v1.0.0 - 2019-06-10\n\n### Added\n\n- Add Core Logic for Action\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at stefan@stefanzweifel.dev. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0458984375,
          "content": "MIT License\n\nCopyright (c) 2021 Stefan Zweifel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.6650390625,
          "content": "# git-auto-commit Action\n\n> The GitHub Action for committing files for the 80% use case.\n\n<a href=\"https://github.com/stefanzweifel/git-auto-commit-action/actions?query=workflow%3Atests\">\n    <img src=\"https://github.com/stefanzweifel/git-auto-commit-action/workflows/tests/badge.svg\" alt=\"\">\n</a>\n\nA GitHub Action to detect changed files during a Workflow run and to commit and push them back to the GitHub repository.\nBy default, the commit is made in the name of \"GitHub Actions\" and co-authored by the user that made the last commit.\n\nIf you want to learn more how this Action works under the hood, check out [this article](https://michaelheap.com/git-auto-commit/) by Michael Heap.\n\n## Usage\n\nAdding git-auto-commit to your Workflow only takes a couple lines of code.\n\n1. Set the `contents`-permission of the default GITHUB_TOKEN to `true`. (Required to push new commits to the repository)\n2. Add the following step at the end of your job, after other steps that might add or change files.\n\n```yaml\n- uses: stefanzweifel/git-auto-commit-action@v5\n```\n\nYour Workflow should look similar to this example.\n\n```yaml\nname: Format\n\non: push\n\njobs:\n  format-code:\n    runs-on: ubuntu-latest\n\n    permissions:\n      # Give the default GITHUB_TOKEN write permission to commit and push the\n      # added or changed files to the repository.\n      contents: write\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          ref: ${{ github.head_ref }}\n\n      # Other steps that change files in the repository go here\n      # …\n\n      # Commit all changed files back to the repository\n      - uses: stefanzweifel/git-auto-commit-action@v5\n```\n\n> [!NOTE]\n> The Action has to be used in a Job that runs on a UNIX-like system (e.g. `ubuntu-latest`).\n\nThe following is an extended example with all available options.\n\n```yaml\n- uses: stefanzweifel/git-auto-commit-action@v5\n  with:\n    # Optional. Commit message for the created commit.\n    # Defaults to \"Apply automatic changes\"\n    commit_message: Automated Change\n\n    # Optional. Local and remote branch name where commit is going to be pushed\n    #  to. Defaults to the current branch.\n    #  You might need to set `create_branch: true` if the branch does not exist.\n    branch: feature-123\n\n    # Optional. Options used by `git-commit`.\n    # See https://git-scm.com/docs/git-commit#_options\n    commit_options: '--no-verify --signoff'\n\n    # Optional glob pattern of files which should be added to the commit\n    # Defaults to all (.)\n    # See the `pathspec`-documentation for git\n    # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203\n    # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec\n    file_pattern: '*.php src/*.js tests/*.js'\n\n    # Optional. Local file path to the repository.\n    # Defaults to the root of the repository.\n    repository: .\n\n    # Optional commit user and author settings\n    commit_user_name: My GitHub Actions Bot # defaults to \"github-actions[bot]\"\n    commit_user_email: my-github-actions-bot@example.org # defaults to \"41898282+github-actions[bot]@users.noreply.github.com\"\n    commit_author: Author <actions@github.com> # defaults to \"username <username@users.noreply.github.com>\", where \"username\" belongs to the author of the commit that triggered the run\n\n    # Optional. Tag name being created in the local repository and \n    # pushed to remote repository and defined branch.\n    tagging_message: 'v1.0.0'\n\n    # Optional. Option used by `git-status` to determine if the repository is \n    # dirty. See https://git-scm.com/docs/git-status#_options\n    status_options: '--untracked-files=no'\n\n    # Optional. Options used by `git-add`.\n    # See https://git-scm.com/docs/git-add#_options\n    add_options: '-u'\n\n    # Optional. Options used by `git-push`.\n    # See https://git-scm.com/docs/git-push#_options\n    push_options: '--force'\n    \n    # Optional. Disable dirty check and always try to create a commit and push\n    skip_dirty_check: true    \n    \n    # Optional. Skip internal call to `git fetch`\n    skip_fetch: true    \n    \n    # Optional. Skip internal call to `git checkout`\n    skip_checkout: true\n\n    # Optional. Prevents the shell from expanding filenames. \n    # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html\n    disable_globbing: true\n\n    # Optional. Create given branch name in local and remote repository.\n    create_branch: true\n```\n\nPlease note that the Action depends on `bash`. If you're using the Action in a job in combination with a custom Docker container, make sure that `bash` is installed.\n\n## Example Workflow\n\nIn this example, we're running `php-cs-fixer` in a PHP project to fix the codestyle automatically, then commit possible changed files back to the repository.\n\nNote that we explicitly specify `${{ github.head_ref }}` in the checkout Action.\nThis is required in order to work with the `pull_request` event (or any other non-`push` event).\n\n```yaml\nname: php-cs-fixer\n\non:\n  pull_request:\n  push:\n    branches:\n      - main\n\njobs:\n  php-cs-fixer:\n    runs-on: ubuntu-latest\n\n    permissions:\n      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.\n      contents: write\n\n    steps:\n    - uses: actions/checkout@v4\n      with:\n        ref: ${{ github.head_ref }}\n\n    - name: Run php-cs-fixer\n      uses: docker://oskarstark/php-cs-fixer-ga\n\n    - uses: stefanzweifel/git-auto-commit-action@v5\n      with:\n        commit_message: Apply php-cs-fixer changes\n```\n\n## Inputs\n\nCheckout [`action.yml`](https://github.com/stefanzweifel/git-auto-commit-action/blob/master/action.yml) for a full list of supported inputs.\n\n## Outputs\n\nYou can use these outputs to trigger other Actions in your Workflow run based on the result of `git-auto-commit-action`.\n\n- `changes_detected`: Returns either \"true\" or \"false\" if the repository was dirty and files have changed.\n- `commit_hash`: Returns the full hash of the commit if one was created.\n\n**⚠️ When using outputs, the step needs to be given an id. See example below.**\n\n### Example\n\n```yaml\n  - uses: stefanzweifel/git-auto-commit-action@v5\n    id: auto-commit-action #mandatory for the output to show up in ${{ steps }}\n    with:\n      commit_message: Apply php-cs-fixer changes\n\n  - name: \"Run if changes have been detected\"\n    if: steps.auto-commit-action.outputs.changes_detected == 'true'\n    run: echo \"Changes!\"\n\n  - name: \"Run if no changes have been detected\"\n    if: steps.auto-commit-action.outputs.changes_detected == 'false'\n    run: echo \"No Changes!\"\n```\n\n## Limitations & Gotchas\n\nThe goal of this Action is to be \"the Action for committing files for the 80% use case\". Therefore, you might run into issues if your Workflow falls into the not supported 20% portion.\n\nThe following is a list of edge cases the Action knowingly does not support:\n\n**No `git pull` when the repository is out of date with remote.** The Action will not do a `git pull` before doing the `git push`. **You** are responsible for keeping the repository up to date in your Workflow runs. \n\n**No support for running the Action in build matrices**. If your Workflow is using build matrices, and you want that each job commits and pushes files to the remote, you will run into the issue, that the repository in the workflow will become out of date. As the Action will not do a `git pull` for you, you have to do that yourself.\n\n**No support for `git rebase` or `git merge`**. There are many strategies on how to integrate remote upstream changes to a local repository. `git-auto-commit` does not want to be responsible for doing that. \n\n**No support for detecting line break changes between CR (Carriage Return) and LF (Line Feed)**. This is a low level issue, you have to resolve differently in your project. Sorry.\n\nIf this Action doesn't work for your workflow, check out [EndBug/add-and-commit](https://github.com/EndBug/add-and-commit).\n\n### Checkout the correct branch\n\nYou must use `action/checkout@v2` or later versions to check out the repository.\nIn non-`push` events, such as `pull_request`, make sure to specify the `ref` to check out:\n\n```yaml\n- uses: actions/checkout@v4\n  with:\n    ref: ${{ github.head_ref }}\n```\n\nDo this to avoid checking out the repository in a detached state.\n\n### Commits made by this Action do not trigger new Workflow runs\n\nThe resulting commit **will not trigger** another GitHub Actions Workflow run.\nThis is due to [limitations set by GitHub](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow).\n\n> When you use the repository's GITHUB_TOKEN to perform tasks on behalf of the GitHub Actions app, events triggered by the GITHUB_TOKEN will not create a new workflow run. This prevents you from accidentally creating recursive workflow runs.\n\nYou can change this by creating a new [Personal Access Token (PAT)](https://github.com/settings/tokens/new),\nstoring the token as a secret in your repository and then passing the new token to the [`actions/checkout`](https://github.com/actions/checkout#usage) Action step.\n\n```yaml\n- uses: actions/checkout@v4\n  with:\n    token: ${{ secrets.PAT }}\n```\n\nIf you create a personal access token (classic), apply the `repo` and `workflow` scopes.\nIf you create a fine-grained personal access token, apply the `Contents`-permissions.\n\nIf you work in an organization and don't want to create a PAT from your personal account, we recommend using a [robot account](https://docs.github.com/en/github/getting-started-with-github/types-of-github-accounts) for the token.\n\n### Prevent Infinite Loop when using a Personal Access Token\n\nIf you're using a Personal Access Token (PAT) to push commits to GitHub repository, the resulting commit or push can trigger other GitHub Actions workflows. This can result in an infinite loop.\n\nIf you would like to prevent this, you can add `skip-checks:true` to the commit message. See [Skipping workflow runs](https://docs.github.com/en/actions/managing-workflow-runs/skipping-workflow-runs) for details.\n\n### Change to file is not detected\n\nDoes your workflow change a file, but \"git-auto-commit\" does not detect the change? Check the `.gitignore` that applies to the respective file. You might have accidentally marked the file to be ignored by git.\n\n## Advanced Uses\n\n### Multiline Commit Messages\n\nIf your commit message should span multiple lines, you have to create a separate step to generate the string. \n\nThe example below can be used as a starting point to generate a multiline commit meesage. Learn more how multiline strings in GitHub Actions work in the [GitHub documentation](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings).\n\n```yaml\n    # Building a multiline commit message\n    # Adjust to your liking\n    - run: echo \"Commit Message 1\" >> commitmessage.txt\n    - run: echo \"Commit Message 2\" >> commitmessage.txt\n    - run: echo \"Commit Message 3\" >> commitmessage.txt\n\n    # Create a multiline string to be used by the git-auto-commit Action\n    - name: Set commit message\n      id: commit_message_step\n      run: |\n        echo 'commit_message<<EOF' >> $GITHUB_OUTPUT\n        cat commitmessage.txt >> $GITHUB_OUTPUT\n        echo 'EOF' >> $GITHUB_OUTPUT\n\n    # Quick and dirty step to get rid of the temporary file holding the commit message\n    - run: rm -rf commitmessage.txt\n\n    - uses: stefanzweifel/git-auto-commit-action@v5\n      id: commit\n      with:\n        commit_message: ${{ steps.commit_message_step.outputs.commit_message }}\n```  \n\n### Signing Commits\n\nIf you would like to sign your commits using a GPG key, you will need to use an additional action. \nYou can use the [crazy-max/ghaction-import-gpg](https://github.com/crazy-max/ghaction-import-gpg) action and follow its setup instructions.\n\nAs git-auto-commit by default does not use **your** username and email when creating a commit, you have to override these values in your workflow.\n\n```yml\n- name: \"Import GPG key\"\n  id: import-gpg\n  uses: crazy-max/ghaction-import-gpg@v6\n  with:\n    gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}\n    passphrase: ${{ secrets.GPG_PASSPHRASE }}\n    git_user_signingkey: true\n    git_commit_gpgsign: true\n\n- name: \"Commit and push changes\"\n  uses: stefanzweifel/git-auto-commit-action@v5\n  with:\n     commit_author: \"${{ steps.import-gpg.outputs.name }} <${{ steps.import-gpg.outputs.email }}>\"\n     commit_user_name: ${{ steps.import-gpg.outputs.name }}\n     commit_user_email: ${{ steps.import-gpg.outputs.email }}\n```\n\nSee discussion [#334](https://github.com/stefanzweifel/git-auto-commit-action/discussions/334) for details.\n\n### Use in forks from private repositories\n\nBy default, GitHub Actions doesn't run Workflows on forks from **private** repositories. To enable Actions for **private** repositories enable \"Run workflows from pull requests\" in your repository settings.\n\nSee [this announcement from GitHub](https://github.blog/2020-08-03-github-actions-improvements-for-fork-and-pull-request-workflows/) or the [GitHub docs](https://docs.github.com/en/github/administering-a-repository/disabling-or-limiting-github-actions-for-a-repository#enabling-workflows-for-private-repository-forks) for details.\n\n\n### Use in forks from public repositories\n\n> [!NOTE] \n> This Action technically works with forks. However, please note that the combination of triggers and their options can cause issues. Please read [the documentation](https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows) on which triggers GitHub Actions support.\\\n> Ensure your contributors enable \"Allow edits by maintainers\" when opening a pull request. ([Learn more](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/allowing-changes-to-a-pull-request-branch-created-from-a-fork)) \\\n> \\\n> **If you use this Action in combination with a linter/fixer, it's easier if you run the Action on `push` on your `main`-branch.**\n\n> [!WARNING] \n> Due to limitations of GitHub, this Action currently can't push commits to a base repository, if the fork _lives_ under an organisation. See [github/community#6634](https://github.com/orgs/community/discussions/5634) and [this comment](https://github.com/stefanzweifel/git-auto-commit-action/issues/211#issuecomment-1428849944) for details.\n\nBy default, this Action will not run on Pull Requests which have been opened by forks. (This is a limitation by GitHub, not by us.)   \nHowever, there are a couple of ways to use this Actions in Workflows that should be triggered by forked repositories.\n\n### Workflow should run in **base** repository\n\n> [!CAUTION]\n> The following section explains how you can use git-auto-commit in combination with the `pull_request_target` trigger.   \n> **Using `pull_request_target` in your workflows can lead to repository compromise as [mentioned](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/) by GitHub's own security team. This means, that a bad actor could potentially leak/steal your GitHub Actions repository secrets.**   \n> Please be aware of this risk when using `pull_request_target` in your workflows.\n> \n> If your workflow runs code-fixing tools, consider running the workflow on your default branch by listening to the `push` event or use a third-party tool like [autofix.ci](https://autofix.ci/).   \n> We keep this documentation around, as many questions came in over the years, on how to use this action for public forks.\n\nThe workflow below runs whenever a commit is pushed to the `main`-branch or when activity on a pull request happens, by listening to the [`pull_request_target`](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target) event.\n\nIf the workflow is triggered by the `pull_request_target`-event, the workflow will run in the context of the base of the pull request, rather than in the context of the merge commit, as the `pull_request` event does.\nIn other words, this will allow your workflow to be run in the repository where the pull request is opened to and will push changes back to the fork.\n\nCheck out the discussion in [#211](https://github.com/stefanzweifel/git-auto-commit-action/issues/211) for more information on this.\n\n```yaml\nname: Format PHP\n\non:\n  push:\n    branches:\n      - main\n  pull_request_target:\n\njobs:\n  php-cs-fixer:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n\n    steps:\n    - uses: actions/checkout@v4\n      with:\n        # Checkout the fork/head-repository and push changes to the fork.\n        # If you skip this, the base repository will be checked out and changes\n        # will be committed to the base repository!\n        repository: ${{ github.event.pull_request.head.repo.full_name }}\n\n        # Checkout the branch made in the fork. Will automatically push changes\n        # back to this branch.\n        ref: ${{ github.head_ref }}\n\n    - name: Run php-cs-fixer\n      uses: docker://oskarstark/php-cs-fixer-ga\n\n    - uses: stefanzweifel/git-auto-commit-action@v5\n```\n\nFor more information about running Actions on forks, see [this announcement from GitHub](https://github.blog/2020-08-03-github-actions-improvements-for-fork-and-pull-request-workflows/).\n\n### Using `--amend` and `--no-edit` as commit options\n\nIf you would like to use this Action to create a commit using [`--amend`](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---amend) and [`--no-edit`](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt---no-edit) you need to make some adjustments.\n\n> [!CAUTION] \n> You should understand the implications of rewriting history if you amend a commit that has already been published. [See rebasing](https://git-scm.com/docs/git-rebase#_recovering_from_upstream_rebase).\n\nFirst, you need to extract the previous commit message by using `git log -1 --pretty=%s`.\nThen you need to provide this last commit message to the Action through the `commit_message` input option.\n\nBy default, the commit author is changed to `username <username@users.noreply.github.com>`, where `username` is the name of the user who triggered the workflow (The [`github.actor`](https://docs.github.com/en/actions/learn-github-actions/contexts#github-context) context is used here). If you want to preserve the name and email of the original author, you must extract them from the last commit and provide them to the Action through the `commit_author` input option.\n\nFinally, you have to use `push_options: '--force'` to overwrite the git history on the GitHub remote repository. (git-auto-commit will not do a `git-rebase` for you!)\n\nThe steps in your workflow might look like this:\n\n```yaml\n- uses: actions/checkout@4\n  with:\n    # Fetch the last 2 commits instead of just 1. (Fetching just 1 commit would overwrite the whole history)\n    fetch-depth: 2\n\n# Other steps in your workflow to trigger a changed file\n\n- name: Get last commit message\n  id: last-commit\n  run: |\n    echo \"message=$(git log -1 --pretty=%s)\" >> $GITHUB_OUTPUT\n    echo \"author=$(git log -1 --pretty=\\\"%an <%ae>\\\")\" >> $GITHUB_OUTPUT\n\n- uses: stefanzweifel/git-auto-commit-action@v5\n  with:\n    commit_author: ${{ steps.last-commit.outputs.author }}\n    commit_message: ${{ steps.last-commit.outputs.message }}\n    commit_options: '--amend --no-edit'\n    push_options: '--force'\n    skip_fetch: true\n```\n\nSee discussion in [#159](https://github.com/stefanzweifel/git-auto-commit-action/issues/159#issuecomment-845347950) for details.\n\n## Troubleshooting\n### Action does not push commit to repository\n\nMake sure to [checkout the correct branch](#checkout-the-correct-branch).\n\n### Action does not push commit to repository: Authentication Issue\n\nIf your Workflow can't push the commit to the repository because of authentication issues,\nplease update your Workflow configuration and usage of [`actions/checkout`](https://github.com/actions/checkout#usage).\n\nUpdating the `token` value with a Personal Access Token should fix your issues.\n\n### git-auto-commit fails to push commit that creates or updates files in `.github/workflows/`\n\nThe default `GITHUB_TOKEN` issued by GitHub Action does not have permission to make changes to workflow files located in `.github/workflows/`.\nTo fix this, please create a personal access token (PAT) and pass the token to the `actions/checkout`-step in your workflow. (Similar to [how to push to protected branches](https://github.com/stefanzweifel/git-auto-commit-action?tab=readme-ov-file#push-to-protected-branches)).\n\nIf a PAT does not work for you, you could also create a new GitHub app and use it's token in your workflows. See [this comment in #87](https://github.com/stefanzweifel/git-auto-commit-action/issues/87#issuecomment-1939138661) for details.\n\nSee [#322](https://github.com/stefanzweifel/git-auto-commit-action/issues/322) for details and discussions around this topic.\n\n### Push to protected branches\n\nIf your repository uses [protected branches](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches) you have to make some changes to your Workflow for the Action to work properly: You need a Personal Access Token and you either have to allow force pushes or the Personal Access Token needs to belong to an Administrator.\n\nFirst, you have to create a new [Personal Access Token (PAT)](https://github.com/settings/tokens/new),\nstore the token as a secret in your repository and pass the new token to the [`actions/checkout`](https://github.com/actions/checkout#usage) Action step.\n\nIf you create a personal access token (classic), apply the `repo` and `workflow` scopes.\nIf you create a fine-grained personal access token, apply the `Contents`-permissions.\n\n```yaml\n- uses: actions/checkout@v4\n  with:\n    token: ${{ secrets.PAT }}\n```\nYou can learn more about Personal Access Token in the [GitHub documentation](https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token).\n\n> [!TIP] \n> If you're working in an organisation, and you don't want to create the PAT from your personal account, we recommend using a bot-account for such tokens.\n\nIf you go the \"force pushes\" route, you have to enable force pushes to a protected branch (see [documentation](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)) and update your Workflow to use force push like this.\n\n```yaml\n    - uses: stefanzweifel/git-auto-commit-action@v5\n      with:\n        commit_message: Apply php-cs-fixer changes\n        push_options: --force\n```\n\n### No new workflows are triggered by the commit of this action\n\nThis is due to limitations set up by GitHub, [commits made by this Action do not trigger new Workflow runs](#commits-made-by-this-action-do-not-trigger-new-workflow-runs).\n\n### Pathspec 'x' did not match any files\n\nIf you're using the Action with a custom `file_pattern` and the Action throws a fatal error with the message \"Pathspec 'file-pattern' did not match any files\", the problem is probably that no file for the pattern **exists** in the repository.\n\n`file_pattern` is used both for `git-status` and `git-add` in this Action. `git-add` will throw a fatal error, if for example, you use a file pattern like `*.js *.ts` but no `*.ts` files exist in your projects' repository.\n\nSee [Issue #227](https://github.com/stefanzweifel/git-auto-commit-action/issues/227) for details.\n\n### Custom `file_pattern`, changed files but seeing \"Working tree clean. Nothing to commit.\" in the logs\n\nIf you're using a custom `file_pattern` and the Action does not detect the changes made in your worfklow, you're probably running into a globbing issue.\n\nLet's imagine you use `file_pattern: '*.md'` to detect and commit changes to all Markdown files in your repository.\nIf your Workflow now only updates `.md`-files in a subdirectory, but you have an untouched `.md`-file in the root of the repository, the git-auto-commit Action will display \"Working tree clean. Nothing to commit.\" in the Workflow log.\n\nThis is due to the fact, that the `*.md`-glob is expanded before sending it to `git-status`. `git-status` will receive the filename of your untouched `.md`-file in the root of the repository and won't detect any changes; and therefore the Action does nothing.\n\nTo fix this add `disable_globbing: true` to your Workflow.\n\n```yaml\n- uses: stefanzweifel/git-auto-commit-action@v5\n  with:\n    file_pattern: '*.md'\n    disable_globbing: true\n```\n\nSee [Issue #239](https://github.com/stefanzweifel/git-auto-commit-action/issues/239) for details.\n\n## Running the tests\n\nThe Action has tests written in [bats](https://github.com/bats-core/bats-core). Before you can run the test suite locally, you have to install the dependencies with `npm` or `yarn`.\n\n```shell\nnpm install\nyarn\n```\n\nYou can run the test suite with `npm` or `yarn`.\n\n```shell\nnpm run test\nyarn test\n```\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/stefanzweifel/git-auto-commit-action/tags).\n\nWe also provide major version tags to make it easier to always use the latest release of a major version. For example, you can use `stefanzweifel/git-auto-commit-action@v5` to always use the latest release of the current major version.\n(More information about this [here](https://help.github.com/en/actions/building-actions/about-actions#versioning-your-action).)\n\n## Credits\n\n* [Stefan Zweifel](https://github.com/stefanzweifel)\n* [All Contributors](https://github.com/stefanzweifel/git-auto-commit-action/graphs/contributors)\n\nThis Action has been inspired and adapted from the [auto-commit](https://github.com/cds-snc/github-actions/tree/master/auto-commit\n)-Action of the Canadian Digital Service and this [commit](https://github.com/elstudio/actions-js-build/blob/41d604d6e73d632e22eac40df8cc69b5added04b/commit/entrypoint.sh)-Action by Eric Johnson.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](https://github.com/stefanzweifel/git-auto-commit-action/blob/master/LICENSE) file for details.\n"
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 3.0439453125,
          "content": "name: Git Auto Commit\ndescription: 'Automatically commits files which have been changed during the workflow run and push changes back to remote repository.'\n\nauthor: Stefan Zweifel <stefan@stefanzweifel.dev>\n\ninputs:\n  commit_message:\n    description: Commit message\n    required: false\n    default: Apply automatic changes\n  branch:\n    description: Git branch name, where changes should be pushed too. Required if Action is used on the `pull_request` event\n    required: false\n    default: ${{ github.head_ref }}\n  commit_options:\n    description: Commit options (eg. --no-verify)\n    required: false\n    default: ''\n  add_options:\n    description: Add options (eg. -u)\n    required: false\n    default: ''\n  status_options:\n    description: Status options (eg. --untracked-files=no)\n    required: false\n    default: ''\n  file_pattern:\n    description: File pattern used for `git add`. For example `src/*.js`\n    required: false\n    default: '.'\n  repository:\n    description: Local file path to the git repository. Defaults to the current directory (`.`)\n    required: false\n    default: '.'\n  commit_user_name:\n    description: Name used for the commit user\n    required: false\n    default: github-actions[bot]\n  commit_user_email:\n    description: Email address used for the commit user\n    required: false\n    default: 41898282+github-actions[bot]@users.noreply.github.com\n  commit_author:\n    description: Value used for the commit author. Defaults to the username of whoever triggered this workflow run.\n    required: false\n    default: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>\n  tagging_message:\n    description: Message used to create a new git tag with the commit. Keep this empty, if no tag should be created.\n    required: false\n    default: ''\n  push_options:\n    description: Push options (eg. --force)\n    required: false\n    default: ''\n  skip_dirty_check:\n    description: Skip the check if the git repository is dirty and always try to create a commit.\n    required: false\n    default: false\n  skip_fetch:\n    description: Skip the call to git-fetch.\n    required: false\n    default: false\n  skip_checkout:\n    description: Skip the call to git-checkout.\n    required: false\n    default: false\n  disable_globbing:\n    description: Stop the shell from expanding filenames (https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html)\n    default: false\n  create_branch:\n    description: Create new branch with the name of `branch`-input in local and remote repository, if it doesn't exist yet.\n    default: false\n  internal_git_binary:\n    description: Internal use only! Path to git binary used to check if git is available. (Don't change this!)\n    default: git\n\noutputs:\n  changes_detected:\n    description: Value is \"true\", if the repository was dirty and file changes have been detected. Value is \"false\", if no changes have been detected.\n  commit_hash:\n    description: Full hash of the created commit. Only present if the \"changes_detected\" output is \"true\".\n\nruns:\n  using: 'node20'\n  main: 'index.js'\n\nbranding:\n  icon: 'git-commit'\n  color: orange\n"
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 5.7001953125,
          "content": "#!/bin/bash\n\nset -eu\n\nif \"$INPUT_DISABLE_GLOBBING\"; then\n    set -o noglob;\nfi\n\n_set_github_output() {\n    local name=${1}\n    local value=${2}\n\n    # Check if $GITHUB_OUTPUT is available\n    # (Feature detection will be removed in spring 2023)\n    if [ -z ${GITHUB_OUTPUT+x} ]; then\n        echo \"::set-output name=$name::$value\";\n    else\n        echo \"$name=$value\" >> $GITHUB_OUTPUT;\n    fi\n}\n\n_log() {\n    local level=${1}\n    local message=${2}\n\n    echo \"::$level::$message\";\n}\n\n_main() {\n    _check_if_git_is_available\n\n    _switch_to_repository\n\n    if _git_is_dirty || \"$INPUT_SKIP_DIRTY_CHECK\"; then\n\n        _set_github_output \"changes_detected\" \"true\"\n\n        _switch_to_branch\n\n        _add_files\n\n        # Check dirty state of repo again using git-diff.\n        # (git-diff detects better if CRLF of files changes and does NOT\n        # proceed, if only CRLF changes are detected. See #241 and #265\n        # for more details.)\n        if [ -n \"$(git diff --staged)\" ] || \"$INPUT_SKIP_DIRTY_CHECK\"; then\n            _local_commit\n\n            _tag_commit\n\n            _push_to_github\n        else\n            _set_github_output \"changes_detected\" \"false\"\n\n            echo \"Working tree clean. Nothing to commit.\";\n        fi\n    else\n        _set_github_output \"changes_detected\" \"false\"\n\n        echo \"Working tree clean. Nothing to commit.\";\n    fi\n}\n\n_check_if_git_is_available() {\n    if hash -- \"$INPUT_INTERNAL_GIT_BINARY\" 2> /dev/null; then\n        _log \"debug\" \"git binary found.\";\n    else\n        _log \"error\" \"git-auto-commit could not find git binary. Please make sure git is available.\"\n        exit 1;\n    fi\n}\n\n_switch_to_repository() {\n    echo \"INPUT_REPOSITORY value: $INPUT_REPOSITORY\";\n    cd \"$INPUT_REPOSITORY\";\n}\n\n_git_is_dirty() {\n    echo \"INPUT_STATUS_OPTIONS: ${INPUT_STATUS_OPTIONS}\";\n    _log \"debug\" \"Apply status options ${INPUT_STATUS_OPTIONS}\";\n\n    echo \"INPUT_FILE_PATTERN: ${INPUT_FILE_PATTERN}\";\n    read -r -a INPUT_FILE_PATTERN_EXPANDED <<< \"$INPUT_FILE_PATTERN\";\n\n    # capture stderr\n    gitStatusMessage=\"$((git status -s $INPUT_STATUS_OPTIONS -- ${INPUT_FILE_PATTERN_EXPANDED:+${INPUT_FILE_PATTERN_EXPANDED[@]}} >/dev/null ) 2>&1)\";\n    # shellcheck disable=SC2086\n    gitStatus=\"$(git status -s $INPUT_STATUS_OPTIONS -- ${INPUT_FILE_PATTERN_EXPANDED:+${INPUT_FILE_PATTERN_EXPANDED[@]}})\";\n    if [ $? -ne 0 ]; then\n        _log \"error\" \"git-status failed with:<$gitStatusMessage>\";\n        exit 1;\n    fi\n    [ -n \"$gitStatus\" ]\n}\n\n_switch_to_branch() {\n    echo \"INPUT_BRANCH value: $INPUT_BRANCH\";\n\n    # Fetch remote to make sure that repo can be switched to the right branch.\n    if \"$INPUT_SKIP_FETCH\"; then\n        _log \"debug\" \"git-fetch will not be executed.\";\n    else\n        git fetch --depth=1;\n    fi\n\n    # If `skip_checkout`-input is true, skip the entire checkout step.\n    if \"$INPUT_SKIP_CHECKOUT\"; then\n        _log \"debug\" \"git-checkout will not be executed.\";\n    else\n        # Create new local branch if `create_branch`-input is true\n        if \"$INPUT_CREATE_BRANCH\"; then\n            # shellcheck disable=SC2086\n            git checkout -B $INPUT_BRANCH --;\n        else\n            # Switch to branch from current Workflow run\n            # shellcheck disable=SC2086\n            git checkout $INPUT_BRANCH --;\n        fi\n    fi\n}\n\n_add_files() {\n    echo \"INPUT_ADD_OPTIONS: ${INPUT_ADD_OPTIONS}\";\n    _log \"debug\" \"Apply add options ${INPUT_ADD_OPTIONS}\";\n\n    echo \"INPUT_FILE_PATTERN: ${INPUT_FILE_PATTERN}\";\n    read -r -a INPUT_FILE_PATTERN_EXPANDED <<< \"$INPUT_FILE_PATTERN\";\n\n    # shellcheck disable=SC2086\n    git add ${INPUT_ADD_OPTIONS} ${INPUT_FILE_PATTERN:+\"${INPUT_FILE_PATTERN_EXPANDED[@]}\"};\n}\n\n_local_commit() {\n    echo \"INPUT_COMMIT_OPTIONS: ${INPUT_COMMIT_OPTIONS}\";\n    _log \"debug\" \"Apply commit options ${INPUT_COMMIT_OPTIONS}\";\n\n    # shellcheck disable=SC2206\n    INPUT_COMMIT_OPTIONS_ARRAY=( $INPUT_COMMIT_OPTIONS );\n\n    echo \"INPUT_COMMIT_USER_NAME: ${INPUT_COMMIT_USER_NAME}\";\n    echo \"INPUT_COMMIT_USER_EMAIL: ${INPUT_COMMIT_USER_EMAIL}\";\n    echo \"INPUT_COMMIT_MESSAGE: ${INPUT_COMMIT_MESSAGE}\";\n    echo \"INPUT_COMMIT_AUTHOR: ${INPUT_COMMIT_AUTHOR}\";\n\n    git -c user.name=\"$INPUT_COMMIT_USER_NAME\" -c user.email=\"$INPUT_COMMIT_USER_EMAIL\" \\\n        commit -m \"$INPUT_COMMIT_MESSAGE\" \\\n        --author=\"$INPUT_COMMIT_AUTHOR\" \\\n        ${INPUT_COMMIT_OPTIONS:+\"${INPUT_COMMIT_OPTIONS_ARRAY[@]}\"};\n\n    _set_github_output \"commit_hash\" $(git rev-parse HEAD)\n}\n\n_tag_commit() {\n    echo \"INPUT_TAGGING_MESSAGE: ${INPUT_TAGGING_MESSAGE}\"\n\n    if [ -n \"$INPUT_TAGGING_MESSAGE\" ]\n    then\n        _log \"debug\" \"Create tag $INPUT_TAGGING_MESSAGE\";\n        git -c user.name=\"$INPUT_COMMIT_USER_NAME\" -c user.email=\"$INPUT_COMMIT_USER_EMAIL\" tag -a \"$INPUT_TAGGING_MESSAGE\" -m \"$INPUT_TAGGING_MESSAGE\";\n    else\n        echo \"No tagging message supplied. No tag will be added.\";\n    fi\n}\n\n_push_to_github() {\n\n    echo \"INPUT_PUSH_OPTIONS: ${INPUT_PUSH_OPTIONS}\";\n    _log \"debug\" \"Apply push options ${INPUT_PUSH_OPTIONS}\";\n\n    # shellcheck disable=SC2206\n    INPUT_PUSH_OPTIONS_ARRAY=( $INPUT_PUSH_OPTIONS );\n\n    if [ -z \"$INPUT_BRANCH\" ]\n    then\n        # Only add `--tags` option, if `$INPUT_TAGGING_MESSAGE` is set\n        if [ -n \"$INPUT_TAGGING_MESSAGE\" ]\n        then\n            _log \"debug\" \"git push origin --tags\";\n            git push origin --follow-tags --atomic ${INPUT_PUSH_OPTIONS:+\"${INPUT_PUSH_OPTIONS_ARRAY[@]}\"};\n        else\n            _log \"debug\" \"git push origin\";\n            git push origin ${INPUT_PUSH_OPTIONS:+\"${INPUT_PUSH_OPTIONS_ARRAY[@]}\"};\n        fi\n\n    else\n        _log \"debug\" \"Push commit to remote branch $INPUT_BRANCH\";\n        git push --set-upstream origin \"HEAD:$INPUT_BRANCH\" --follow-tags --atomic ${INPUT_PUSH_OPTIONS:+\"${INPUT_PUSH_OPTIONS_ARRAY[@]}\"};\n    fi\n}\n\n_main\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.990234375,
          "content": "/**\n * Most of this code has been copied from the following GitHub Action\n * to make it simpler or not necessary to install a lot of\n * JavaScript packages to execute a shell script.\n *\n * https://github.com/ad-m/github-push-action/blob/fe38f0a751bf9149f0270cc1fe20bf9156854365/start.js\n */\n\nconst spawn = require('child_process').spawn;\nconst path = require(\"path\");\n\nconst exec = (cmd, args=[]) => new Promise((resolve, reject) => {\n    console.log(`Started: ${cmd} ${args.join(\" \")}`)\n    const app = spawn(cmd, args, { stdio: 'inherit' });\n    app.on('close', code => {\n        if(code !== 0){\n            err = new Error(`Invalid status code: ${code}`);\n            err.code = code;\n            return reject(err);\n        };\n        return resolve(code);\n    });\n    app.on('error', reject);\n});\n\nconst main = async () => {\n    await exec('bash', [path.join(__dirname, './entrypoint.sh')]);\n};\n\nmain().catch(err => {\n    console.error(err);\n    console.error(err.stack);\n    process.exit(err.code || -1);\n})\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.1796875,
          "content": "{\n  \"devDependencies\": {\n    \"bats\": \"^1.11.1\",\n    \"bats-assert\": \"ztombol/bats-assert\",\n    \"bats-support\": \"ztombol/bats-support\"\n  },\n  \"scripts\": {\n    \"test\": \"bats tests\"\n  }\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 0.642578125,
          "content": "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\nbats-assert@ztombol/bats-assert:\n  version \"0.3.0\"\n  resolved \"https://codeload.github.com/ztombol/bats-assert/tar.gz/9f88b4207da750093baabc4e3f41bf68f0dd3630\"\n\nbats-support@ztombol/bats-support:\n  version \"0.3.0\"\n  resolved \"https://codeload.github.com/ztombol/bats-support/tar.gz/004e707638eedd62e0481e8cdc9223ad471f12ee\"\n\nbats@^1.11.1:\n  version \"1.11.1\"\n  resolved \"https://registry.yarnpkg.com/bats/-/bats-1.11.1.tgz#e87fa1161d5110ec3a685e2e233f2f2bfb26ebfd\"\n  integrity sha512-Dh26FsiLog+wwQeTkboYo2xYj9rUaPEbibUobnYb3G3M9hva/Kby00wrAN9VB9qqGVhl/pYjjt/LVBWwjXlD2A==\n"
        }
      ]
    }
  ]
}