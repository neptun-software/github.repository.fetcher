{
  "metadata": {
    "timestamp": 1736568496760,
    "page": 481,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ConSol/docker-headless-vnc-container",
      "stars": 1756,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "*\n!src\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.44921875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.c text\n*.h text\n*.sah text\n*.suite text\n*.inc text\n*.js text\n*.json text\n\n# Declare files that will always have CRLF line endings on checkout.\n*.sln text eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0234375,
          "content": "target\n.idea\n*.iml\n*.log"
        },
        {
          "name": ".pics",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile.debian-icewm-vnc",
          "type": "blob",
          "size": 1.810546875,
          "content": "# This Dockerfile is used to build an headles vnc image based on Debian\n\nFROM debian:12\n\nLABEL maintainer=\"Sven Nierlein sven@consol.de\"\nENV REFRESHED_AT=2024-08-28\n\nLABEL io.k8s.description=\"Headless VNC Container with IceWM window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Debian\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, debian, icewm\" \\\n      io.openshift.non-scalable=true\n\n## Connection ports for controlling the UI:\n# VNC port:5901\n# noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=:1 \\\n    VNC_PORT=5901 \\\n    NO_VNC_PORT=6901\nEXPOSE $VNC_PORT $NO_VNC_PORT\n\n### Envrionment config\nENV HOME=/headless \\\n    TERM=xterm \\\n    STARTUPDIR=/dockerstartup \\\n    INST_SCRIPTS=/headless/install \\\n    NO_VNC_HOME=/headless/noVNC \\\n    DEBIAN_FRONTEND=noninteractive \\\n    VNC_COL_DEPTH=24 \\\n    VNC_RESOLUTION=1280x1024 \\\n    VNC_PW=vncpassword \\\n    VNC_VIEW_ONLY=false\nWORKDIR $HOME\n\n### Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/debian/install/ $INST_SCRIPTS/\n\n### Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n### Install custom fonts\nRUN $INST_SCRIPTS/install_custom_fonts.sh\n\n### Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n\n### Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n\n### Install IceWM UI\nRUN $INST_SCRIPTS/icewm_ui.sh\nADD ./src/debian/icewm/ $HOME/\n\n### configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\n\nUSER 1000\n\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n"
        },
        {
          "name": "Dockerfile.debian-xfce-vnc",
          "type": "blob",
          "size": 1.8056640625,
          "content": "# This Dockerfile is used to build an headles vnc image based on Debian\n\nFROM debian:12\n\nLABEL maintainer=\"Sven Nierlein sven@consol.de\"\nENV REFRESHED_AT=2024-08-28\n\nLABEL io.k8s.description=\"Headless VNC Container with Xfce window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Debian\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, debian, xfce\" \\\n      io.openshift.non-scalable=true\n\n## Connection ports for controlling the UI:\n# VNC port:5901\n# noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=:1 \\\n    VNC_PORT=5901 \\\n    NO_VNC_PORT=6901\nEXPOSE $VNC_PORT $NO_VNC_PORT\n\n### Envrionment config\nENV HOME=/headless \\\n    TERM=xterm \\\n    STARTUPDIR=/dockerstartup \\\n    INST_SCRIPTS=/headless/install \\\n    NO_VNC_HOME=/headless/noVNC \\\n    DEBIAN_FRONTEND=noninteractive \\\n    VNC_COL_DEPTH=24 \\\n    VNC_RESOLUTION=1280x1024 \\\n    VNC_PW=vncpassword \\\n    VNC_VIEW_ONLY=false\nWORKDIR $HOME\n\n### Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/debian/install/ $INST_SCRIPTS/\n\n### Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n### Install custom fonts\nRUN $INST_SCRIPTS/install_custom_fonts.sh\n\n### Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n\n### Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n\n### Install xfce UI\nRUN $INST_SCRIPTS/xfce_ui.sh\nADD ./src/common/xfce/ $HOME/\n\n### configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\n\nUSER 1000\n\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n"
        },
        {
          "name": "Dockerfile.rocky-icewm-vnc",
          "type": "blob",
          "size": 1.744140625,
          "content": "# This Dockerfile is used to build an headles vnc image based on Rocky linux\n\nFROM rockylinux:9\n\nLABEL maintainer=\"Sven Nierlein sven@consol.de\"\nENV REFRESHED_AT=2024-08-28\n\nLABEL io.k8s.description=\"Headless VNC Container with IceWM window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Rocky linux\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, rocky, icewm\" \\\n      io.openshift.non-scalable=true\n\n## Connection ports for controlling the UI:\n# VNC port:5901\n# noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=:1 \\\n    VNC_PORT=5901 \\\n    NO_VNC_PORT=6901\nEXPOSE $VNC_PORT $NO_VNC_PORT\n\n### Envrionment config\nENV HOME=/headless \\\n    TERM=xterm \\\n    STARTUPDIR=/dockerstartup \\\n    INST_SCRIPTS=/headless/install \\\n    NO_VNC_HOME=/headless/noVNC \\\n    VNC_COL_DEPTH=24 \\\n    VNC_RESOLUTION=1280x1024 \\\n    VNC_PW=vncpassword \\\n    VNC_VIEW_ONLY=false\nWORKDIR $HOME\n\n### Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/rocky/install/ $INST_SCRIPTS/\n\n### Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n### Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n\n### Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n\n### Install IceWM UI\nRUN $INST_SCRIPTS/icewm_ui.sh\nADD ./src/rocky/icewm/ $HOME/\n\n### configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\nRUN $INST_SCRIPTS/rocky.sh\n\nUSER 1000\n\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n"
        },
        {
          "name": "Dockerfile.rocky-xfce-vnc",
          "type": "blob",
          "size": 1.740234375,
          "content": "# This Dockerfile is used to build an headles vnc image based on Rocky linux\n\nFROM rockylinux:9\n\nLABEL maintainer=\"Sven Nierlein sven@consol.de\"\nENV REFRESHED_AT=2024-08-28\n\nLABEL io.k8s.description=\"Headless VNC Container with Xfce window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Rocky linux\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, rocky, xfce\" \\\n      io.openshift.non-scalable=true\n\n## Connection ports for controlling the UI:\n# VNC port:5901\n# noVNC webport, connect via http://IP:6901/?password=vncpassword\nENV DISPLAY=:1 \\\n    VNC_PORT=5901 \\\n    NO_VNC_PORT=6901\nEXPOSE $VNC_PORT $NO_VNC_PORT\n\n### Envrionment config\nENV HOME=/headless \\\n    TERM=xterm \\\n    STARTUPDIR=/dockerstartup \\\n    INST_SCRIPTS=/headless/install \\\n    NO_VNC_HOME=/headless/noVNC \\\n    VNC_COL_DEPTH=24 \\\n    VNC_RESOLUTION=1280x1024 \\\n    VNC_PW=vncpassword \\\n    VNC_VIEW_ONLY=false\nWORKDIR $HOME\n\n### Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nADD ./src/rocky/install/ $INST_SCRIPTS/\n\n### Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n### Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n\n### Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\nRUN $INST_SCRIPTS/chrome.sh\n\n### Install xfce UI\nRUN $INST_SCRIPTS/xfce_ui.sh\nADD ./src/common/xfce/ $HOME/\n\n### configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR $HOME\nRUN $INST_SCRIPTS/rocky.sh\n\nUSER 1000\n\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.841796875,
          "content": "\nbuild: build-debian-xfce-vnc\n\nbuild-debian-xfce-vnc:\n\tdocker build -t local/debian-xfce-vnc -f ./Dockerfile.debian-xfce-vnc .\n\nbuild-debian-icewm-vnc:\n\tdocker build -t local/debian-icewm-vnc -f ./Dockerfile.debian-icewm-vnc .\n\nbuild-rocky-xfce-vnc:\n\tdocker build -t local/rocky-xfce-vnc -f ./Dockerfile.rocky-xfce-vnc .\n\nbuild-rocky-icewm-vnc:\n\tdocker build -t local/rocky-icewm-vnc -f ./Dockerfile.rocky-icewm-vnc .\n\nrun: run-debian-xfce-vnc\n\nrun-debian-xfce-vnc:\n\tdocker run -ti --rm -p 6901:6901 -p 5901:5901 local/debian-xfce-vnc\n\nrun-debian-icewm-vnc:\n\tdocker run -ti --rm -p 6901:6901 -p 5901:5901 local/debian-icewm-vnc\n\nrun-rocky-xfce-vnc:\n\tdocker run -ti --rm -p 6901:6901 -p 5901:5901 local/rocky-xfce-vnc\n\nrun-rocky-icewm-vnc:\n\tdocker run -ti --rm -p 6901:6901 -p 5901:5901 local/rocky-icewm-vnc\n\nclean:\n\t$(MAKE) -C t clean\n\ntest:\n\t$(MAKE) -C t test\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.7294921875,
          "content": "# Docker container images with \"headless\" VNC session\n\nThis repository contains a collection of Docker images with headless VNC environments.\n\nEach Docker image is installed with the following components:\n\n* Desktop environment [**Xfce4**](http://www.xfce.org) or [**IceWM**](http://www.icewm.org/)\n* VNC-Server (default VNC port `5901`)\n* [**noVNC**](https://github.com/novnc/noVNC) - HTML5 VNC client (default http port `6901`)\n* Browsers:\n  * Mozilla Firefox\n  * Chromium\n\n![Docker VNC Desktop access via HTML page](.pics/vnc_container_view.png)\n\n## Build Status\n[![Build Status MASTER](https://github.com/ConSol/docker-headless-vnc-container/actions/workflows/nightly.yml/badge.svg)](https://github.com/ConSol/docker-headless-vnc-container/actions/workflows/nightly.yml)\n\n## Current provided OS & UI sessions:\n* `consol/rocky-xfce-vnc`: __Rocky 9 with `Xfce4` UI session__\n* `consol/debian-xfce-vnc`: __Debian 11 with `Xfce4` UI session__\n* `consol/rocky-icewm-vnc`: __Rocky 9 with `IceWM` UI session__\n* `consol/debian-icewm-vnc`: __Debian 11 with `IceWM` UI session__\n\n## OpenShift / Kubernetes\n\nIt's also possible to run the images in container orchestration platforms like [Kubernetes](https://kubernetes.io) or [OpenShift](https://openshift.io/). For more information how to deploy containers in the cluster, take a look at:\n\n* [Kubernetes usage of \"headless\" VNC Docker images](./kubernetes/README.md)\n* [OpenShift usage of \"headless\" VNC Docker images](./openshift/README.md)\n\n## Usage\nUsage is **similar** for all provided images, e.g. for `consol/rocky-xfce-vnc`:\n\n- Print out help page:\n\n      docker run consol/rocky-xfce-vnc --help\n\n- Run command with mapping to local port `5901` (vnc protocol) and `6901` (vnc web access):\n\n      docker run -d -p 5901:5901 -p 6901:6901 consol/rocky-xfce-vnc\n\n- Change the default user and group within a container to your own with adding `--user $(id -u):$(id -g)`:\n\n      docker run -d -p 5901:5901 -p 6901:6901 --user $(id -u):$(id -g) consol/rocky-xfce-vnc\n\n- If you want to get into the container use interactive mode `-it` and `bash`\n\n      docker run -it -p 5901:5901 -p 6901:6901 consol/rocky-xfce-vnc bash\n\n- Build an image from scratch:\n\n      docker build -t consol/rocky-xfce-vnc rocky-xfce-vnc\n\n# Connect & Control\nIf the container is started like mentioned above, connect via one of these options:\n\n* connect via __VNC viewer `localhost:5901`__, default password: `vncpassword`\n* connect via __noVNC HTML5 full client__: [`http://localhost:6901/vnc.html`](http://localhost:6901/vnc.html), default password: `vncpassword`\n* connect via __noVNC HTML5 lite client__: [`http://localhost:6901/?password=vncpassword`](http://localhost:6901/?password=vncpassword)\n\n\n## Hints\n\n### 1) Extend a Image with your own software\nSince version `1.1.0` all images run as non-root user per default, so if you want to extend the image and install software, you have to switch back to the `root` user:\n\n```bash\n## Custom Dockerfile\nFROM consol/rocky-xfce-vnc\nENV REFRESHED_AT 2022-10-12\n\n# Switch to root user to install additional software\nUSER 0\n\n## Install a gedit\nRUN yum install -y gedit \\\n    && yum clean all\n\n## switch back to default user\nUSER 1000\n```\n\n### 2) Change User of running VNC Container\n\nPer default, since version `1.3.0` all container processes will be executed with user id `1000`. You can change the user id as follows:\n\n#### 2.1) Using root (user id `0`)\nAdd the `--user` flag to your docker run command:\n\n    docker run -it --user 0 -p 6911:6901 consol/rocky-xfce-vnc\n\n#### 2.2) Using user and group id of host system\nAdd the `--user` flag to your docker run command:\n\n    docker run -it -p 6911:6901 --user $(id -u):$(id -g) consol/rocky-xfce-vnc\n\n### 3) Override VNC environment variables\nThe following VNC environment variables can be overwritten at the `docker run` phase to customize your desktop environment inside the container:\n* `VNC_COL_DEPTH`, default: `24`\n* `VNC_RESOLUTION`, default: `1280x1024`\n* `VNC_PW`, default: `my-pw`\n* `VNC_PASSWORDLESS`, default: `<not set>`\n\n#### 3.1) Example: Override the VNC password\nSimply overwrite the value of the environment variable `VNC_PW`. For example in\nthe docker run command:\n\n    docker run -it -p 5901:5901 -p 6901:6901 -e VNC_PW=my-pw consol/rocky-xfce-vnc\n\n#### 3.2) Example: Override the VNC resolution\nSimply overwrite the value of the environment variable `VNC_RESOLUTION`. For example in\nthe docker run command:\n\n    docker run -it -p 5901:5901 -p 6901:6901 -e VNC_RESOLUTION=800x600 consol/rocky-xfce-vnc\n\n#### 3.3) Example: Start passwordless\nSet `VNC_PASSWORDLESS` to `true` to disable the VNC password.\nIt is highly recommended that you put some kind of authorization mechanism\nbefore this. For example in the docker run command:\n\n    docker run -it -p 5901:5901 -p 6901:6901 -e VNC_PASSWORDLESS=true consol/rocky-xfce-vnc\n\n### 4) View only VNC\nSince version `1.2.0` it's possible to prevent unwanted control via VNC. Therefore you can set the environment variable `VNC_VIEW_ONLY=true`. If set, the startup script will create a random password for the control connection and use the value of `VNC_PW` for view only connection over the VNC connection.\n\n     docker run -it -p 5901:5901 -p 6901:6901 -e VNC_VIEW_ONLY=true consol/rocky-xfce-vnc\n\n### 5) Known Issues\n\n#### 5.1) Chromium crashes with high VNC_RESOLUTION ([#53](https://github.com/ConSol/docker-headless-vnc-container/issues/53))\nIf you open some graphic/work intensive websites in the Docker container (especially with high resolutions e.g. `1920x1080`) it can happen that Chromium crashes without any specific reason. The problem there is the too small `/dev/shm` size in the container. Currently there is no other way, as define this size on startup via `--shm-size` option, see [#53 - Solution](https://github.com/ConSol/docker-headless-vnc-container/issues/53#issuecomment-347265977):\n\n    docker run --shm-size=256m -it -p 6901:6901 -e VNC_RESOLUTION=1920x1080 consol/rocky-xfce-vnc chromium-browser http://map.norsecorp.com/\n\nThx @raghavkarol for the hint!\n\n## How to release\nSee **[how-to-release.md](./how-to-release.md)**\n\n## Contributors\n\nAt this point we want to thank all contributors, which helped to move this great project by submitting code, writing documentation, or adapting other tools to play well together with the docker headless container.\n\n* [Sven Nierlein](https://github.com/sni)\n* [Tobias Schneck](https://github.com/toschneck)\n* [Robert Bohne](https://github.com/rbo) - IceWM images\n* [hsiaoyi0504](https://github.com/hsiaoyi0504) - PR [#66](https://github.com/ConSol/docker-headless-vnc-container/pull/66)\n* [dmhumph](https://github.com/dmhumph) - PR [#44](https://github.com/ConSol/docker-headless-vnc-container/issue/44)\n* [Simon Hofmann](https://github.com/s1hofmann)\n\n## Changelog\n\nThe current changelog is provided here: **[changelog.md](./changelog.md)**\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 5.93359375,
          "content": "## Changelog of the Docker headless VNC images\n\n### Version 2.0.4:\n* fix passwordless startup crash ([#201](https://github.com/ConSol/docker-headless-vnc-container/issues/201)))\n\n### Version 2.0.3:\n* update Kubernetes Manifest example ([#197](https://github.com/ConSol/docker-headless-vnc-container/issues/197)))\n\n### Version 2.0.2:\n* fix not exposing VNC port ([#165](https://github.com/ConSol/docker-headless-vnc-container/issues/165)))\n\n### Version 2.0.1:\n* add passwordless vnc option\n* fix chrome crash due to shm size\n\n### Version 2.0.0:\n* migrated ubuntu to debian 11\n* migrated centos 7 to rocky linux 9\n\n### Version 1.4.0:\n* added Github issue and pull request templates\n* added install script for custom fonts ([#83](https://github.com/ConSol/docker-headless-vnc-container/issues/83)))\n* fixed problem that VNC password was not properly set after doing a Docker commit ([#88](https://github.com/ConSol/docker-headless-vnc-container/issues/88))\n* fixed some typos ([#87](https://github.com/ConSol/docker-headless-vnc-container/issues/87))\n* added 'how-to-release' info ([#75](https://github.com/ConSol/docker-headless-vnc-container/issues/75))\n* added Travis build ([#74](https://github.com/ConSol/docker-headless-vnc-container/issues/74))\n\n### Version 1.3.0:\n* change default USER to `1000` ([#61](https://github.com/ConSol/docker-headless-vnc-container/issues/61))\n* refactor vnc startup script ([#73](https://github.com/ConSol/docker-headless-vnc-container/issues/73))\n  * add help option `--help`\n  * ensure correct forwarding of shutdown signals\n  * add \"DEBUG\" mode and move all log output to this mode\n  * update README.md\n* merge pull request from:\n  * [hsiaoyi0504](https://github.com/hsiaoyi0504) update noVNC to [v1.0.0](https://github.com/novnc/noVNC/releases/tag/v1.0.0) ([#66](https://github.com/ConSol/docker-headless-vnc-container/pull/66))\n* add example for [Kubernetes usage](./kubernetes/README.md) ([#71](https://github.com/ConSol/docker-headless-vnc-container/issues/71)) \n* remove verbose output by default from `set_user_permissions.sh` script\n \n### Version 1.2.3:\n\n* start no_vnc with localhost instead of VNC_IP to ensure startup on docker bridge mode ([#41](https://github.com/ConSol/docker-headless-vnc-container/issue/41)) \n* add xfce4-terminal to enable copy and paste ([#55](https://github.com/ConSol/docker-headless-vnc-container/issue/55))\n* add save mode for tag_image.sh script \n* disable trigger latest Dockerhub build -> use tag_image.sh script \n* use correct python-numpy packages \n* add \"Known Issues\" documentation: [Chromium crashes with high VNC_RESOLUTION](https://github.com/ConSol/docker-headless-vnc-container#51-chromium-crashes-with-high-vnc_resolution-53)\n\n### Version 1.2.2\n* disable automatic firefox updates ([#45](https://github.com/ConSol/docker-headless-vnc-container/issue/45))\n* fix wrong env usage of `$HOME` ([#47](https://github.com/ConSol/docker-headless-vnc-container/issue/47))\n* fix hanging vnc handshake if container is offline ([#50](https://github.com/ConSol/docker-headless-vnc-container/issue/50))\n* Merge pull request from:\n    * [dmhumph](https://github.com/dmhumph): Update OpenShift instructions for OCP 3.5 or greater ([#44](https://github.com/ConSol/docker-headless-vnc-container/issue/44)) \n\n### Version 1.2.1\n* Centos7: use temporally epel-testing repo to fix chrome error `libpng warning: Application built with libpng-1.6.22 but running with 1.5.13` in version `60.0.3112.113-2.el7`\n* Fix broken `docker stop/start` ([#40](https://github.com/ConSol/docker-headless-vnc-container/issues/40))\n\n### Version 1.2.0\n* Use fixed firefox version `45.9.0esr` ([#39](https://github.com/ConSol/docker-headless-vnc-container/issues/39), [#20](https://github.com/ConSol/docker-headless-vnc-container/issues/20), [#16](https://github.com/ConSol/docker-headless-vnc-container/issues/16)) \n  * fix memory consumption problems in comparison to current firefox 55\n  * tested on long term container issues without crashes \n* Add en_US.UTF-8 as default locale ([#27](https://github.com/ConSol/docker-headless-vnc-container/issues/27)) \n* Add enviroment variable `VNC_VIEW_ONLY=true` for view only VNC connections ([#25](https://github.com/ConSol/docker-headless-vnc-container/issues/25))\n  * Update to tigervnc version `1.8`\n* Use a more stable command for ip determination (PR [#31](https://github.com/ConSol/docker-headless-vnc-container/issues/31), thx to @arnaudveron) \n* Support empty `CMD` values in startup script ([#32](https://github.com/ConSol/docker-headless-vnc-container/issues/32)) \n* Add chromium flag `--disable-gpu` to work for current chromium ([#36](https://github.com/ConSol/docker-headless-vnc-container/issues/36)) \n* Add `TERM=xterm` environment var ([#37](https://github.com/ConSol/docker-headless-vnc-container/issues/37))  \n\n### Version 1.1.0\n\n* Add OpenShift support ([#3](https://github.com/ConSol/docker-headless-vnc-container/issues/3))\n   * Support for start container process as non-root in usermode ([#7](https://github.com/ConSol/docker-headless-vnc-container/issues/7))\n   * Add Labels for OpenShift\n* Add [IceWM](http://www.icewm.org/) as alternative UI\n* Remove Java installation, not needed in this image ([#5](https://github.com/ConSol/docker-headless-vnc-container/issues/5))\n* Refactor build structure ([#5](https://github.com/ConSol/docker-headless-vnc-container/issues/5))\n* Fix chromium/chrome startup ([#2](https://github.com/ConSol/docker-headless-vnc-container/issues/2)): Set chromium as default \"chrome\" and support `~/.chromium-browser.init`\n* Switch from vnc4server to tigervnc ([#4](https://github.com/ConSol/docker-headless-vnc-container/issues/4))\n* Remove not needed Screensaver pacakges ([#11](https://github.com/ConSol/docker-headless-vnc-container/issues/11))        \n* Use Firefox 45 as fixed browser as long current firefox crashes ([#16](https://github.com/ConSol/docker-headless-vnc-container/issues/16))\n* Fix issue be starting of reattached containers on `docker start` ([#15](https://github.com/ConSol/docker-headless-vnc-container/issues/15))\n"
        },
        {
          "name": "how-to-release.md",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# How to release\n\n* Check if `changelog.md` is correct\n* Check if all features are merged in master and pushed\n* Pull the latest `nightly` images\n* Test if the latest `nightly` build is usable\n*  On success - add git branch v{TAG} and tag and push branch\n"
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "openshift",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "t",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_refreshed_at.sh",
          "type": "blob",
          "size": 0.353515625,
          "content": "#!/usr/bin/env bash\n### updates the `REFRESHED_AT` env to the current day\n\nsearchdir=\"$(dirname $0)\"\nrefreshDate=$(date +%Y-%m-%d)\n\nfind $searchdir -type f -name 'Dockerfile*' | while read file ; do \\\n    sed -i -e \"s/^ENV REFRESHED_AT.*/ENV REFRESHED_AT $refreshDate/\" $file  \\\n    && echo -e \"replace ENV REFRESHED_AT with '$refreshDate' in file $file\" ;\ndone\n"
        }
      ]
    }
  ]
}