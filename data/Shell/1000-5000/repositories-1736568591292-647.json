{
  "metadata": {
    "timestamp": 1736568591292,
    "page": 647,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dikiaap/dotfiles",
      "stars": 1432,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".Xresources",
          "type": "blob",
          "size": 1.0888671875,
          "content": "! Oxide Color scheme\n! Diki Ananta (https://github.com/dikiaap/dotfiles)\n\n#define oxide_00_black      #212121\n#define oxide_01_red        #e57373\n#define oxide_02_green      #a6bc69\n#define oxide_03_yellow     #fac863\n#define oxide_04_blue       #6699cc\n#define oxide_05_magenta    #c594c5\n#define oxide_06_cyan       #5fb3b3\n#define oxide_07_white      #c0c5ce\n#define oxide_08_bright_black   #5c5c5c\n#define oxide_15_bright_white   #f3f4f5\n\n*foreground:   oxide_07_white\n#ifdef background_opacity\n*background:   [background_opacity]oxide_00_black\n#else\n*background:   oxide_00_black\n#endif\n*cursorColor:  oxide_07_white\n\n*color0:       oxide_00_black\n*color1:       oxide_01_red\n*color2:       oxide_02_green\n*color3:       oxide_03_yellow\n*color4:       oxide_04_blue\n*color5:       oxide_05_magenta\n*color6:       oxide_06_cyan\n*color7:       oxide_07_white\n*color8:       oxide_08_bright_black\n*color9:       oxide_01_red\n*color10:      oxide_02_green\n*color11:      oxide_03_yellow\n*color12:      oxide_04_blue\n*color13:      oxide_05_magenta\n*color14:      oxide_06_cyan\n*color15:      oxide_15_bright_white\n"
        },
        {
          "name": ".alacritty",
          "type": "tree",
          "content": null
        },
        {
          "name": ".aliases",
          "type": "blob",
          "size": 2.40234375,
          "content": "# Navigation\nalias ..='cd ..'\nalias ...='cd ../..'\nalias .3='cd ../../..'\nalias .4='cd ../../../..'\nalias .5='cd ../../../../..'\nalias ~='cd ~'\nalias -- -='cd -'\nalias 1='cd -'\nalias 2='cd -2'\nalias 3='cd -3'\nalias 4='cd -4'\nalias 5='cd -5'\n\n# Easy report\nalias ls='ls -Fh --color=auto --group-directories-first'\nalias grep='grep --color=auto'\nalias l='ls -l'\nalias la='ls -lA'\nalias lr='ls -R'\nalias lf='ls -l | grep \"^-\"'\nalias l.f='ls -ld .* | grep \"^-\"'\nalias ld='ls -l | grep \"^d\"'\nalias l.d='ls -ld .* | grep \"^d\"'\nalias dud='du -d 1 -h'\nalias duf='du -sh *'\nalias fdir='find . -type d -name'\nalias ff='find . -type f -name'\nalias h='history'\nalias hgrep='history | grep'\nalias lgrep='ls -l | grep'\nalias lagrep='ls -lA | grep'\nalias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,node_modules,tealdeer,Trash,vendor}'\nalias cp='cp -iv'\nalias mv='mv -iv'\nalias ln='ln -iv'\nalias mkdir='mkdir -v'\nalias rm='rm -i'\nalias rmf='rm -rf'\nalias p='ps axo pid,user,pcpu,comm'\nalias uptime='uptime -p'\nalias free='free -h'\nalias disk='df -h | grep sd \\\n    | sed -e \"s_/dev/sda[1-9]_\\x1b[34m&\\x1b[0m_\" \\\n    | sed -e \"s_/dev/sd[b-z][1-9]_\\x1b[33m&\\x1b[0m_\" \\\n    | sed -e \"s_[,0-9]*[MG]_\\x1b[36m&\\x1b[0m_\" \\\n    | sed -e \"s_[0-9]*%_\\x1b[32m&\\x1b[0m_\" \\\n    | sed -e \"s_9[0-9]%_\\x1b[31m&\\x1b[0m_\" \\\n    | sed -e \"s_/mnt/[-_A-Za-z0-9]*_\\x1b[34;1m&\\x1b[0m_\"'\nalias alu='apt list --upgradable'\nalias preview='fzf --height=50% --layout=reverse --preview=\"bat --color=always {}\"'\n\n# Bookmarks\nalias dl='cd ~/Downloads && ls -lA'\nalias doc='cd ~/Documents && ls -lA'\nalias tmp='cd ~/Temporary && ls -lA'\n\n# Shortcuts\nalias c='clear'\nalias cat='bat'\nalias ch='echo > ~/.bash_history && echo > ~/.zsh_history'\nalias cz='echo > ~/.z'\nalias e='exit'\nalias htop-user='htop -u \"$USER\"'\nalias mdv='glow -p -s ~/.config/glow/Material-Theme-Darker.json'\nalias mp3-dl='yt-dlp --ignore-config --extract-audio \\\n    --audio-format \"mp3\" --audio-quality 0 --embed-thumbnail --embed-metadata \\\n    --output \"$HOME/Downloads/%(title)s.%(ext)s\"'\nalias n='nnn'\nalias pbcopy='xclip -selection clipboard'\nalias pbpaste='xclip -selection clipboard -o'\nalias timer='echo \"Timer started. Stop with Ctrl-D.\" && date \"+%a, %d %b %H:%M:%S\" && time cat && date \"+%a, %d %b %H:%M:%S\"'\n\n# Developer shortcuts\nalias g='git'\nalias python='python3'\nalias s='subl'\nalias v='nvim'\n\n# PHP\nalias art='php artisan'\nalias artisan='php artisan'\n\n# Typos\nalias :q='exit'\nalias help='man'\nalias quit='exit'\n"
        },
        {
          "name": ".bash_profile",
          "type": "blob",
          "size": 0.0458984375,
          "content": "if [ -f ~/.bashrc ]; then source ~/.bashrc; fi\n"
        },
        {
          "name": ".bashrc",
          "type": "blob",
          "size": 1.314453125,
          "content": "# Load our dotfiles.\nfor file in ~/.{aliases,aliases_private,exports,functions,functions_private,privaterc}; do\n    [ -r \"$file\" ] && [ -f \"$file\" ] && source \"$file\"\ndone\nunset file\n\n# Autocorrect typos in path names when using `cd`.\nshopt -s cdspell\n\n# Case-insensitive globbing (used in pathname expansion).\nshopt -s nocaseglob\n\n# Bash attempts to save all lines of a multiple-line command in the same history entry.\n# This allows easy re-editing of multi-line commands.\nshopt -s cmdhist\n\n# Check the window size after each command and, if necessary,\n# update the values of lines and columns.\nshopt -s checkwinsize\n\n# Bash prompt.\nif [ \"$color_prompt\" = yes ]; then\n    PS1='\\n\\[\\e[36m\\]\\w$(__git_ps1 \"\\[\\033[00m\\] on \\[\\e[35m\\] %s\")\\[\\033[00m\\]\\n$ '\nelse\n    PS1='\\n\\[\\e[36m\\]\\w$(__git_ps1 \"\\[\\033[00m\\] on \\[\\e[35m\\] %s\")\\[\\033[00m\\]\\n$ '\nfi\nunset color_prompt force_color_prompt\n\n# Bash completion.\nif ! shopt -oq posix; then\n    if [ -f /usr/share/bash-completion/bash_completion ]; then\n        source /usr/share/bash-completion/bash_completion\n    elif [ -f /etc/bash_completion ]; then\n        source /etc/bash_completion\n    fi\nfi\n\n# dircolors.\nif [ -x \"$(command -v dircolors)\" ]; then\n    eval \"$(dircolors -b ~/.dircolors)\"\nfi\n\n# Base16 Shell.\nif [ -f ~/.local/bin/base16-oxide ]; then\n    source ~/.local/bin/base16-oxide\nfi\n"
        },
        {
          "name": ".composer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dircolors",
          "type": "blob",
          "size": 5.005859375,
          "content": "# Oxide dircolors by Diki Ananta (https://github.com/dikiaap/dotfiles)\n# Modification from Solarized dircolors (https://github.com/seebi/dircolors-solarized)\n\nCOLOR tty\nTERM alacritty\nTERM ansi\nTERM color_xterm\nTERM color-xterm\nTERM con132x25\nTERM con132x30\nTERM con132x43\nTERM con132x60\nTERM con80x25\nTERM con80x28\nTERM con80x30\nTERM con80x43\nTERM con80x50\nTERM con80x60\nTERM cons25\nTERM console\nTERM cygwin\nTERM dtterm\nTERM dvtm\nTERM dvtm-256color\nTERM Eterm\nTERM eterm-color\nTERM fbterm\nTERM gnome\nTERM gnome-256color\nTERM hurd\nTERM jfbterm\nTERM konsole\nTERM konsole-256color\nTERM kterm\nTERM linux\nTERM linux-c\nTERM mach-color\nTERM mach-gnu-color\nTERM mlterm\nTERM nxterm\nTERM putty\nTERM putty-256color\nTERM rxvt\nTERM rxvt-256color\nTERM rxvt-cygwin\nTERM rxvt-cygwin-native\nTERM rxvt-unicode\nTERM rxvt-unicode256\nTERM rxvt-unicode-256color\nTERM screen\nTERM screen-16color\nTERM screen-16color-bce\nTERM screen-16color-s\nTERM screen-16color-bce-s\nTERM screen-256color\nTERM screen-256color-bce\nTERM screen-256color-s\nTERM screen-256color-bce-s\nTERM screen-256color-italic\nTERM screen-bce\nTERM screen-w\nTERM screen.linux\nTERM screen.xterm-256color\nTERM screen.xterm-new\nTERM st\nTERM st-256color\nTERM st-meta\nTERM st-meta-256color\nTERM terminator\nTERM tmux\nTERM tmux-256color\nTERM vt100\nTERM xterm\nTERM xterm-16color\nTERM xterm-256color\nTERM xterm-256color-italic\nTERM xterm-88color\nTERM xterm-color\nTERM xterm-debian\nTERM xterm-new\nTERM xterm-termite\n\n# Attribute codes: 0=none 1=bold 2=dim 4=underline 5=blink 7=reverse 8=hidden\n# Foreground color codes: 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\n# Background color codes: 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\n\n# General\nEIGHTBIT 1\nNORMAL 0\nFILE 0\nRESET 0\nDIR 36\nLINK 4;35\nMULTIHARDLINK 4;32\nFIFO 30;44\nSOCK 38;5;125;44\nDOOR 30;45\nBLK 38;5;221;44\nCHR 38;5;255;44\nORPHAN 5;38;5;255;41\nMISSING 5;38;5;255;41\nSETUID 30;41\nSETGID 30;43\nCAPABILITY 30;42\nSTICKY_OTHER_WRITABLE 38;5;161;46\nOTHER_WRITABLE 30;46\nSTICKY 38;5;54;44\nEXEC 1;31\n\n# Documentation\n.info 34\n.log 34\n.markdown 34\n.md 34\n.MD 34\n.mkd 34\n.org 34\n.rst 34\n.txt 34\n.TXT 34\n*AUTHORS 1;34\n*Changelog 1;34\n*ChangeLog 1;34\n*CHANGELOG 1;34\n*CHANGELOG.md 1;34\n*CHANGES 1;34\n*CHANGES.md 1;34\n*code-of-conduct.md 1;34\n*CODE_OF_CONDUCT.md 1;34\n*CONTRIBUTING 1;34\n*contributing.md 1;34\n*CONTRIBUTING.md 1;34\n*CONTRIBUTORS 1;34\n*COPYING 1;34\n*COPYRIGHT 1;34\n*HACKING 1;34\n*HISTORY 1;34\n*INSTALL 1;34\n*INSTALL.md 1;34\n*LICENSE 1;34\n*LICENSE.md 1;34\n*LICENSE.MD 1;34\n*NEWS 1;34\n*NOTICE 1;34\n*PATENTS 1;34\n*README 1;34\n*readme.md 1;34\n*README.md 1;34\n*README.MD 1;34\n*README.rst 1;34\n*THANKS 1;34\n*TODO 1;34\n*VERSION 1;34\n\n# Programming\n.ac 32\n.asm 32\n.aspx 32\n.bash 32\n.c 32\n.C 32\n.cc 32\n.cl 32\n.class 32\n.coffee 32\n.cpp 32\n.csh 32\n.css 32\n.csv 32\n.cxx 32\n.db 32\n.el 32\n.erb 32\n.f90 32\n.fish 32\n.go 32\n.h 32\n.haml 32\n.hpp 32\n.hs 32\n.htm 32\n.html 32\n.java 32\n.js 32\n.json 32\n.l 32\n.less 32\n.lisp 32\n.lock 32\n.lua 32\n.m 32\n.man 32\n.n 32\n.p 32\n.php 32\n.pl 32\n.pm 32\n.pod 32\n.py 32\n.r 32\n.rb 32\n.rdf 32\n.rs 32\n.rss 32\n.sass 32\n.scss 32\n.sh 32\n.shtml 32\n.sql 32\n.sqlite 32\n.sv 32\n.svh 32\n.tex 32\n.toml 32\n.ts 32\n.v 32\n.vh 32\n.vhd 32\n.vim 32\n.xml 32\n.yaml 32\n.yml 32\n.zsh 32\n.am 38;5;246\n.in 38;5;246\n.m4 38;5;246\n.editorconfig 38;5;246\n.env 38;5;246\n.example 38;5;246\n.gitignore 38;5;246\n.gitattributes 38;5;246\n.gitmodules 38;5;246\n*Makefile 32\n\n# Unix\n.3des 34\n.aes 34\n.asc 34\n.cer 34\n.cfg 34\n.conf 34\n.csr 34\n.desktop 34\n.enc 34\n.gpg 34\n.ini 34\n.otf 34\n.pgp 34\n.pid 34\n.ttf 34\n\n# Executable\n.apk 31\n.app 31\n.bat 31\n.com 31\n.exe 31\n\n# Image\n.ai 33\n.bmp 33\n.cdr 33\n.cgm 33\n.dl 33\n.dvi 33\n.emf 33\n.eps 33\n.gif 33\n.ico 33\n.jpeg 33\n.jpg 33\n.JPG 33\n.mng 33\n.pbm 33\n.pcx 33\n.pgm 33\n.png 33\n.PNG 33\n.ppm 33\n.pps 33\n.ppsx 33\n.ps 33\n.psd 33\n.svg 33\n.svgz 33\n.tga 33\n.tif 33\n.tiff 33\n.xbm 33\n.xcf 33\n.xpm 33\n.xwd 33\n.yuv 33\n\n# Audio\n.aac 33\n.au 33\n.flac 33\n.m4a 33\n.mid 33\n.midi 33\n.mka 33\n.mp3 33\n.mpa 33\n.ogg 33\n.opus 33\n.ra 33\n.wav 33\n.wma 33\n\n# Video\n.3g2 33\n.3gp 33\n.anx 33\n.asf 33\n.ass 33\n.avi 33\n.axv 33\n.flc 33\n.fli 33\n.flv 33\n.gl 33\n.m2v 33\n.m4v 33\n.mkv 33\n.mov 33\n.MOV 33\n.mp4 33\n.MP4 33\n.mp4v 33\n.mpeg 33\n.mpg 33\n.nuv 33\n.ogm 33\n.ogv 33\n.ogx 33\n.qt 33\n.rm 33\n.rmvb 33\n.srt 33\n.swf 33\n.vob 33\n.vtt 33\n.webm 33\n.wmv 33\n.xspf 33\n\n# Documents\n.djvu 31\n.doc 31\n.docx 31\n.dot 31\n.dotx 31\n.fla 31\n.odp 31\n.ods 31\n.odt 31\n.otp 31\n.ots 31\n.ott 31\n.pdf 31\n.ppt 31\n.pptx 31\n.rtf 31\n.vcf 31\n.wps 31\n.xls 31\n.xlsx 31\n\n# Archives\n.7z 35\n.arj 35\n.bin 35\n.bz 35\n.bz2 35\n.cab 35\n.crx 35\n.deb 35\n.dmg 35\n.gem 35\n.gz 35\n.iso 35\n.jar 35\n.lz 35\n.lzma 35\n.msi 35\n.pkg 35\n.rar 35\n.rpm 35\n.s7z 35\n.sz 35\n.tar 35\n.tbz 35\n.tbz2 35\n.tgz 35\n.tx 35\n.war 35\n.xpi 35\n.xz 35\n.z 35\n.Z 35\n.zip 35\n.zipx 35\n\n# Miscellaneous\n.torrent 34\n.crdownload 37\n\n# Backup, Temporary, etc.\n*~ 1;34\n*# 1;34\n.bak 38;5;246\n.BAK 38;5;246\n.dat 38;5;246\n.DAT 38;5;246\n.dist 38;5;246\n.DIST 38;5;246\n.dll 38;5;246\n.o 38;5;246\n.off 38;5;246\n.OFF 38;5;246\n.old 38;5;246\n.OLD 38;5;246\n.org_archive 38;5;246\n.orig 38;5;246\n.ORIG 38;5;246\n.rlib 38;5;246\n.sassc 38;5;246\n.swo 38;5;246\n.swp 38;5;246\n.tmp 38;5;246\n*lockfile 38;5;246\n"
        },
        {
          "name": ".dunst",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.244140625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\ntrim_trailing_whitespace = true\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{css,html,js,json,scss,vue,xml,yml}]\nindent_style = space\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".exports",
          "type": "blob",
          "size": 2.076171875,
          "content": "# Initialize $PATH with system and user binaries.\nexport PATH=\"$PATH:$HOME/.config/composer/vendor/bin:$HOME/.node-packages/bin:$HOME/.cargo/bin:$HOME/.rbenv/shims:$HOME/.local/bin\"\n\n# Locale.\nexport LANG=\"en_US.UTF-8\"\nexport LANGUAGE=\"en_US.UTF-8\"\n\n# Term.\nexport TERM=\"xterm-256color\"\n\n# Default Editor.\nexport EDITOR=\"subl\"\n\n# Default Pager.\nexport PAGER=\"less\"\n\n# Zsh.\nif [ \"$(ps -p $$ -ocomm=)\" = \"zsh\" ]; then\n    # Oh My Zsh.\n    export ZSH=\"$HOME/.oh-my-zsh\"\n    # Set a character at the end of partial lines to none.\n    export PROMPT_EOL_MARK=\"\"\n    # History settings.\n    export HISTORY_IGNORE=\"([bf]g|c|clear|e|exit|h|history|incognito|l|l[adfls]|pwd|z)\"\nfi\n\n# Bash.\nif [ \"$(ps -p $$ -ocomm=)\" = \"bash\" ]; then\n    # History settings.\n    export HISTTIMEFORMAT=\"%F %T \"\n    export HISTCONTROL=ignoredups\n    export HISTIGNORE=\"[bf]g:c:clear:e:exit:h:history:incognito:l:l[adfls]:pwd\"\n    export HISTSIZE=10000\n    # Save and reload the history after each command finishes in another bash session.\n    export PROMPT_COMMAND=\"history -a; history -c; history -r; $PROMPT_COMMAND\"\nfi\n\n# bat.\nexport BAT_THEME=\"Material-Theme-Darker\"\n\n# fzf.\nexport FZF_DEFAULT_OPTS=\" \\\n    --color=fg:#c0c5ce,bg:#212121,hl:#808080,fg+:#e6e6e6,bg+:#3b3b3b,hl+:#f7c662 \\\n    --color=info:#f7c662,prompt:#6699cc,pointer:#a6bc69,marker:#a6bc69,spinner:#f7c662,header:#6699cc\"\n\n# nnn.\nexport NNN_OPTS=\"deo\" # Default command-line options\nexport NNN_BMS=\"d:~/Downloads;D:~/Documents;t:~/Temporary\" # Bookmarks\nexport NNN_FCOLORS=\"03040601000205f7d204d9f7\" # File colors\nexport NNN_PLUG=\"D:-!mediainfo \\$nnn\" # Plugins\nexport NNN_TRASH=1 # Trash instead of delete the files\n\n# ripgrep.\nexport RIPGREP_CONFIG_PATH=\"$HOME/.ripgreprc\"\n\n# Less.\nexport LESS=\"--RAW-CONTROL-CHARS\"\nexport LESS_TERMCAP_mb=$'\\e[1;31m' # Start blinking\nexport LESS_TERMCAP_md=$'\\e[1;34m' # Start bold mode\nexport LESS_TERMCAP_me=$'\\e[0m' # End all mode\nexport LESS_TERMCAP_so=$'\\e[38;5;215m' # Start standout mode\nexport LESS_TERMCAP_se=$'\\e[0m' # End standout mode\nexport LESS_TERMCAP_us=$'\\e[4;35m' # Start underline\nexport LESS_TERMCAP_ue=$'\\e[0m' # End underline\n"
        },
        {
          "name": ".functions",
          "type": "blob",
          "size": 2.4052734375,
          "content": "# Clean Debian packages\napt-clean() {\n    sudo apt-get clean\n    sudo apt-get autoclean\n    sudo apt-get autoremove\n}\n\n# Create a new directory and enter it\nmkd() {\n    mkdir -p \"$@\" && cd \"$@\"\n}\n\n# Print README file\nreadme() {\n    for readme in {readme,README}.{md,MD,markdown,mkd,txt,TXT}; do\n        if [[ -x \"$(command -v glow)\" ]] && [[ -f \"$readme\" ]]; then\n            mdv \"$readme\"\n        elif [[ -f \"$readme\" ]]; then\n            cat \"$readme\"\n        fi\n    done\n}\n\n# Weather\nweather() {\n    curl -s \"https://wttr.in/${1:-Ponorogo}?m2F&format=v2\"\n}\n\n# Get an information of IP address\nip-address() {\n    curl -s -H \"Accept: application/json\" \"https://ipinfo.io/${1:-}\" | jq \"del(.loc, .postal, .readme)\" || \\\n    curl -s -H \"Accept: application/json\" \"https://am.i.mullvad.net\" | jq \"del(.longitude, .latitude, .mullvad_exit_ip, .blacklisted)\"\n}\n\n# Incognito mode\nincognito() {\n    unset HISTFILE\n    if [ -x \"$(command -v tmux)\" ]; then\n        tmux set-option window-status-current-format \"#[fg=brightwhite,bg=#b487b4] #I #[fg=brightwhite,bg=#966396] #W \"\n    fi\n}\n\n# Git commit browser\nfshow() {\n    local commit_hash=\"echo {} | grep -o '[a-f0-9]\\{7\\}' | head -1\"\n    local view_commit=\"$commit_hash | xargs -I % sh -c 'git show --color=always % | diff-so-fancy'\"\n    git log --color=always \\\n        --format=\"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset\" \"$@\" | \\\n    fzf --no-sort --tiebreak=index --no-multi --reverse --ansi \\\n        --header=\"enter to view, alt-y to copy hash\" --preview=\"$view_commit\" \\\n        --bind=\"enter:execute:$view_commit | less -R\" \\\n        --bind=\"alt-y:execute:$commit_hash | xclip -selection clipboard\"\n}\n\n# Remove all commit in Git\ngit-remove-all-commit() {\n    local branch\n    branch=$(git symbolic-ref --short HEAD)\n    echo -e \"\\nDo you want to remove all your commit in \\033[1m$branch\\033[0m branch? [Y/n] \"\n    read -r response\n    case \"$response\" in\n        [yY][eE][sS]|[yY])\n            git checkout --orphan latest_branch\n            git add -A\n            git commit -am \"Initial commit\"\n            git branch -D \"$branch\"\n            git branch -m \"$branch\"\n            echo -e \"\\nTo force update your repository, run this command:\\n\\n    git push -fu origin $branch\"\n            ;;\n        *)\n            echo \"Cancelled.\"\n            ;;\n    esac\n}\n\n# Start PHP server\nphpserver() {\n    local ip=localhost\n    local port=\"${1:-4000}\"\n    php -S \"${ip}:${port}\"\n}\n"
        },
        {
          "name": ".gemrc",
          "type": "blob",
          "size": 0.1083984375,
          "content": "---\n:backtrace: false\n:sources:\n- http://rubygems.org/\n:update_sources: true\n:verbose: true\ngem: --no-document\n"
        },
        {
          "name": ".gitconfig",
          "type": "blob",
          "size": 1.8603515625,
          "content": "[alias]\n    a = add\n    aa = add -A\n    b = branch\n    ba = branch -a\n    c = commit -m\n    ca = commit -am\n    co = checkout\n    contributors = shortlog -nse\n    d = diff --patch-with-stat\n    df = diff --patch-with-stat --color-words\n    ds = diff --patch-with-stat --staged\n    dt = difftool\n    dts = difftool --staged\n    fc = \"!f() { git log --pretty='%C(yellow)%h%Creset -%Cred%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --grep=$1; }; f\"\n    fs = \"!f() { git log --pretty='%C(yellow)%h%Creset -%Cred%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' -S$1; }; f\"\n    lg = log --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'\n    pull-dir = \"!find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \\\\;\"\n    remotes = remote -v\n    s = status -sb\n    sclone = clone --depth 1\n    undo = reset HEAD~1\n\n[core]\n    editor = vim\n    autocrlf = false\n\n[push]\n    default = simple\n\n[pull]\n    ff = only\n\n[merge]\n    tool = vimdiff\n\n[color]\n    ui = always\n    diff = always\n\n[color \"diff\"]\n    meta = yellow bold\n    commit = cyan bold\n    frag = magenta bold\n    old = red bold\n    new = green bold\n    whitespace = red reverse\n\n[color \"diff-highlight\"]\n    oldNormal = red bold\n    oldHighlight = red bold 52\n    newNormal = green bold\n    newHighlight = green bold 22\n\n[color \"branch\"]\n    current = yellow reverse\n    local = yellow\n    remote = green\n\n[color \"status\"]\n    added = green\n    changed = yellow\n    untracked = red\n\n[pager]\n    diff = diff-so-fancy | less --tabs=4 -RFX\n    show = diff-so-fancy | less --tabs=4 -RFX\n\n[gpg]\n    program = gpg\n\n[url \"git@github.com:\"]\n    insteadOf = \"gh:\"\n    pushInsteadOf = \"gh:\"\n\n[url \"git@gist.github.com:\"]\n    insteadOf = \"gist:\"\n    pushInsteadOf = \"gist:\"\n\n[url \"git@gitlab.com:\"]\n    insteadOf = \"gl:\"\n    pushInsteadOf = \"gl:\"\n\n[include]\n    path = ~/.config/git/config.local\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gnupg",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gtkrc-2.0",
          "type": "blob",
          "size": 0.583984375,
          "content": "# DO NOT EDIT! This file will be overwritten by LXAppearance.\n# Any customization should be done in ~/.gtkrc-2.0.mine instead.\n\ninclude \"/home/dikiaap/.gtkrc-2.0.mine\"\ngtk-theme-name=\"Arc\"\ngtk-icon-theme-name=\"Paper\"\ngtk-font-name=\"Source Sans Pro 10.2998046875\"\ngtk-cursor-theme-name=\"DMZ-White\"\ngtk-cursor-theme-size=18\ngtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ\ngtk-toolbar-icon-size=GTK_ICON_SIZE_SMALL_TOOLBAR\ngtk-button-images=0\ngtk-menu-images=1\ngtk-enable-event-sounds=1\ngtk-enable-input-feedback-sounds=1\ngtk-xft-antialias=1\ngtk-xft-hinting=1\ngtk-xft-hintstyle=\"hintfull\"\ngtk-xft-rgba=\"rgb\"\n"
        },
        {
          "name": ".htop",
          "type": "tree",
          "content": null
        },
        {
          "name": ".i3",
          "type": "tree",
          "content": null
        },
        {
          "name": ".i3blocks",
          "type": "tree",
          "content": null
        },
        {
          "name": ".oh-my-zsh",
          "type": "tree",
          "content": null
        },
        {
          "name": ".picom",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ripgreprc",
          "type": "blob",
          "size": 0.66796875,
          "content": "# Search hidden files and directories.\n--hidden\n\n# Follow symbolic links.\n--follow\n\n# Don't respect ignore files (.gitignore, .ignore, etc.).\n--no-ignore\n\n# Exclude directories.\n--glob=!{.git,.svn,node_modules,tealdeer,Trash,vendor}\n\n# Exclude file types.\n--glob=!*.{lock}\n\n# Exclude files.\n--glob=!{package-lock.json}\n\n# Don't print lines longer than this limit.\n--max-columns=10000\n\n# Searches case insensitively.\n--smart-case\n\n# Sort by file path.\n--sort=path\n\n# Configure color settings and styles.\n--colors=path:bg:0x3b,0x3b,0x3b\n--colors=path:fg:white\n--colors=line:fg:0xf2,0xc2,0x60\n--colors=match:bg:0x2b,0x83,0xa6\n--colors=match:fg:0xff,0xff,0xff\n--colors=match:style:nobold\n"
        },
        {
          "name": ".rofi",
          "type": "tree",
          "content": null
        },
        {
          "name": ".tmux",
          "type": "tree",
          "content": null
        },
        {
          "name": ".wgetrc",
          "type": "blob",
          "size": 0.5634765625,
          "content": "# Retry a few times when a download fails.\ntries = 10\n\n# Retry even if connection is refused.\nretry_connrefused = on\n\n# Don't re-retrieve files unless newer than local.\ntimestamping = on\n\n# Print server response.\nserver_response = on\n\n# Set all timeout values.\ntimeout = 60\n\n# Save HTML/CSS documents with proper extensions.\nadjust_extension = on\n\n# Use the last component of a redirection URL for the local file name.\ntrust_server_names = on\n\n# Don't ascend to the parent directory.\nno_parent = on\n\n# Setting this to off makes Wget not download /robots.txt file.\nrobots = off\n"
        },
        {
          "name": ".zsh",
          "type": "tree",
          "content": null
        },
        {
          "name": ".zshrc",
          "type": "blob",
          "size": 1.0625,
          "content": "# Themes.\nZSH_THEME=\"oxide\"\n\n# Case-sensitive completion.\nCASE_SENSITIVE=\"true\"\n\n# Disable bi-weekly auto-update checks.\nzstyle ':omz:update' mode disabled\n\n# Disable auto-setting terminal title.\nDISABLE_AUTO_TITLE=\"true\"\n\n# Disable marking untracked files under VCS as dirty.\nDISABLE_UNTRACKED_FILES_DIRTY=\"true\"\n\n# History.\nHIST_STAMPS=\"yyyy-mm-dd\"\n\n# Plugins.\nplugins=(\n    archive\n    extract\n    git\n)\n\n# Environment variables.\nsource ~/.exports\n\n# Oh My Zsh.\nsource ~/.oh-my-zsh/oh-my-zsh.sh\n\n# User config.\nsource ~/.zsh/setopt.zsh\n\n# Aliases.\nsource ~/.aliases\nsource ~/.aliases_private\n\n# Functions.\nsource ~/.functions\nsource ~/.functions_private\n\n# Private config.\nsource ~/.privaterc\n\n# Tracks your most used directories, based on frecency with z.\nsource ~/.zsh/plugins/z/z.sh\n\n# dircolors.\nif [ -x \"$(command -v dircolors)\" ]; then\n    eval \"$(dircolors -b ~/.dircolors)\"\nfi\n\n# fzf key bindings.\nif [ -x \"$(command -v fzf)\" ]; then\n    source ~/.fzf/shell/key-bindings.zsh\nfi\n\n# Base16 Shell.\nif [ -f ~/.local/bin/base16-oxide ]; then\n    source ~/.local/bin/base16-oxide\nfi\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2015-2023 Diki Ananta\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3203125,
          "content": "<h1 align=\"center\">dotfiles ❤ ~/</h1>\n\n![dikiaap's dotfiles](https://dikiaap.pages.dev/img/dotfiles/i3.png)\n\n<p align=\"center\">\n    <b>Screenshots</b><br>\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/rofi.png\">Rofi</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/dunst.png\">Dunst</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/i3blocks.png\">i3blocks</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/zsh.png\">Zsh</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/tmux.png\">tmux</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/colors.png\">Colors</a>&nbsp;&nbsp;&nbsp;\n    <a href=\"https://dikiaap.pages.dev/img/dotfiles/dircolors.png\">dircolors</a>\n</p>\n\n\n## Details\n\n- CLI\n    - [Zsh](https://github.com/zsh-users/zsh) - A shell designed for interactive use, although it is also a powerful scripting language.\n        - [Oh My Zsh](https://github.com/ohmyzsh/ohmyzsh) - An open source, community-driven framework for managing your Zsh configuration.\n        - [z](https://github.com/rupa/z) - Tracks your most used directories, based on frecency.\n    - [Bash](https://git.savannah.gnu.org/cgit/bash.git) - A Unix shell and command language.\n    - [tmux](https://github.com/tmux/tmux) - A terminal multiplexer.\n        - [tmux-better-mouse-mode](https://github.com/NHDaly/tmux-better-mouse-mode) - A tmux plugin to better manage the mouse.\n        - [tmux-copycat](https://github.com/tmux-plugins/tmux-copycat) - A tmux plugin that enhances tmux search.\n    - [Neovim](https://github.com/neovim/neovim) - Hyperextensible Vim-based text editor.\n        - [Minimalist](https://github.com/dikiaap/minimalist) - A Material Color Scheme Darker for Vim and inspired by Material Theme.\n        - [vim-airline](https://github.com/vim-airline/vim-airline) - Lean and mean status/tabline for Vim that's light as air.\n        - [More config](https://github.com/dikiaap/dotfiles/blob/master/init.vim).\n    - [Git](https://github.com/git/git) - A free and open source distributed version control system.\n        - [diff-so-fancy](https://github.com/so-fancy/diff-so-fancy) - Make your diffs human readable instead of machine readable.\n    - [htop](https://github.com/htop-dev/htop) - An interactive process viewer.\n    - [bat](https://github.com/sharkdp/bat) - A cat clone with syntax highlighting and Git integration.\n    - [fzf](https://github.com/junegunn/fzf) - A command-line fuzzy finder.\n    - [ripgrep](https://github.com/BurntSushi/ripgrep) - A line-oriented search tool that recursively searches directories for a regex pattern.\n    - [Wget](https://git.savannah.gnu.org/cgit/wget.git) - A free software package for retrieving files using HTTP, HTTPS, FTP, and FTPS.\n    - [Hack](https://github.com/source-foundry/Hack) - Terminal font.\n- GUI\n    - [i3](https://github.com/i3/i3) - A tiling window manager.\n    - [i3blocks](https://github.com/vivien/i3blocks) - A feed generator for text based status bars.\n        - [i3blocks-contrib](https://github.com/vivien/i3blocks-contrib) - A set of scripts for i3blocks, contributed by the community.\n    - [i3lock-fancy](https://github.com/meskarune/i3lock-fancy) - A script that takes a screenshot of the desktop, blurs the background and adds a lock icon and text.\n    - [Rofi](https://github.com/davatorium/rofi) - A window switcher, application launcher and dmenu replacement.\n    - [Dunst](https://github.com/dunst-project/dunst) - A highly configurable and lightweight notification daemon.\n    - [picom](https://github.com/yshui/picom) - A lightweight compositor for X11.\n    - [Alacritty](https://github.com/alacritty/alacritty) - A cross-platform, GPU-accelerated terminal emulator.\n    - [Sublime Text](https://www.sublimetext.com) - A sophisticated text editor for code, markup and prose.\n    - [Arc Theme](https://github.com/arc-design/arc-theme) (Fork) - A flat theme with transparent elements for GTK 3, GTK 2, and GNOME Shell.\n    - [Paper Icon Theme](https://github.com/snwh/paper-icon-theme) - An open source Freedesktop icon theme and inspired by Material Design.\n    - [Source Sans](https://github.com/adobe-fonts/source-sans) - User Interface font.\n    - [Font Awesome](https://github.com/FortAwesome/Font-Awesome) - Iconic font.\n    - [Dark Planet](https://dikiaap.pages.dev/img/dotfiles/dark_planet_minimalist.png) - Wallpaper.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "init.vim",
          "type": "blob",
          "size": 5.3720703125,
          "content": "\" General.\nset nocompatible\nset number\nset autoindent \" Copy indent from last line when starting new line\nset autoread \" Set to auto read when a file is changed from the outside\nset backspace=indent,eol,start\nset cursorline \" Highlight current line\nset expandtab \" Expand tabs to spaces\nset foldcolumn=0 \" Column to show folds\nset foldenable \" Enable folding\nset foldlevel=0 \" Close all folds by default\nset foldmethod=syntax \" Syntax are used to specify folds\nset foldminlines=0 \" Allow folding single lines\nset foldnestmax=5 \" Set max fold nesting level\nset formatoptions=\nset formatoptions+=c \" Format comments\nset formatoptions+=r \" Continue comments by default\nset formatoptions+=o \" Make comment when using o or O from comment line\nset formatoptions+=q \" Format comments with gq\nset formatoptions+=n \" Recognize numbered lists\nset formatoptions+=2 \" Use indent from 2nd line of a paragraph\nset formatoptions+=l \" Don't break lines that are already long\nset formatoptions+=1 \" Break before 1-letter words\nset gdefault \" By default add g flag to search/replace. Add g to toggle\nset guicursor= \" Disable cursor style changes in Neovim\nset hidden \" When a buffer is brought to foreground, remember undo history and marks\nset history=500 \" Increase history from 20 default to 1000\nset hlsearch \" Highlight searches\nset ignorecase\nset incsearch \" Highlight dynamically as pattern is typed\nset laststatus=2 \" Always show status line\nset lazyredraw \" Don't redraw when we don't have to\nset lispwords+=defroutes \" Compojure\nset lispwords+=defpartial,defpage \" Noir core\nset lispwords+=defaction,deffilter,defview,defsection \" Ciste core\nset lispwords+=describe,it \" Speclj TDD/BDD\nset magic \" Enable extended regexes\nset mouse=a \" Enable mouse in all in all modes\nset noerrorbells \" Disable error bells\nset nojoinspaces \" Only insert single space after a '.', '?' and '!' with a join command\nset noshowmode \" Don't show the current mode (airline.vim takes care of us)\nset nostartofline \" Don't reset cursor to start of line when moving around\nset nowrap \" Do not wrap lines\nset ofu=syntaxcomplete#Complete \" Set omni-completion method\nset regexpengine=1 \" Use the old regular expression engine (it's faster for certain language syntaxes)\nset report=0 \" Show all changes\nset ruler \" Show the cursor position\nset scrolloff=3 \" Start scrolling three lines before horizontal border of window\nset shell=/bin/sh \" Use /bin/sh for executing shell commands\nset shiftwidth=4 \" The # of spaces for indenting\nset softtabstop=4\nset shortmess=atI \" Don't show the intro message when starting vim\nset showtabline=2 \" Always show tab bar\nset sidescrolloff=3 \" Start scrolling three columns before vertical border of window\nset smartcase \" Ignore 'ignorecase' if search patter contains uppercase characters\nset smarttab \" At start of line, <Tab> inserts shiftwidth spaces, <Bs> deletes shiftwidth spaces\nset splitbelow \" New window goes below\nset splitright \" New windows goes right\nset suffixes=.bak,~,.swp,.swo,.o,.d,.info,.aux,.log,.dvi,.pdf,.bin,.bbl,.blg,.brf,.cb,.dmg,.exe,.ind,.idx,.ilg,.inx,.out,.toc,.pyc,.pyd,.dll\nset switchbuf=\"\"\nset ttyfast \" Send more characters at a given time\nset undofile \" Persistent Undo\nset visualbell \" Use visual bell instead of audible bell (annnnnoying)\nset wildchar=<TAB> \" Character for CLI expansion (TAB-completion)\nset wildignore+=.DS_Store\nset wildignore+=*.jpg,*.jpeg,*.gif,*.png,*.gif,*.psd,*.o,*.obj,*.min.js\nset wildignore+=*/bower_components/*,*/node_modules/*\nset wildignore+=*/smarty/*,*/vendor/*,*/.git/*,*/.hg/*,*/.svn/*,*/.sass-cache/*,*/log/*,*/tmp/*,*/build/*,*/ckeditor/*,*/doc/*,*/source_maps/*,*/dist/*\nset wildmenu \" Hitting TAB in command mode will show possible completions above command line\nset wildmode=list:longest \" Complete only until point of ambiguity\nset winminheight=0 \" Allow splits to be reduced to a single line\nset wrapscan \" Searches wrap around end of file\n\n\" Plugin.\ncall plug#begin('~/.local/share/nvim/plugged')\nPlug 'ctrlpvim/ctrlp.vim'\nPlug 'dikiaap/minimalist'\nPlug 'editorconfig/editorconfig-vim'\nPlug 'junegunn/vim-plug'\nPlug 'mattn/emmet-vim'\nPlug 'preservim/nerdtree'\nPlug 'sheerun/vim-polyglot'\nPlug 'tpope/vim-fugitive'\nPlug 'vim-airline/vim-airline'\nPlug 'vim-syntastic/syntastic'\ncall plug#end()\n\n\" Colors, Fonts, and Syntax.\nfiletype plugin indent on\nsyntax enable\nset t_Co=256\nset encoding=utf-8\nset guifont=Hack\ncolorscheme minimalist\n\n\" Directories.\nset backupdir=~/.local/share/nvim/backup\nset directory=~/.local/share/nvim/swap\nset undodir=~/.local/share/nvim/undo\n\n\" Airline.\nlet g:airline_theme='minimalist'\nlet g:airline_powerline_fonts = 1\nlet g:airline#extensions#tabline#enabled = 1\nlet g:airline#extensions#branch#enabled = 1\nlet g:airline#extensions#whitespace#enabled = 1\nlet g:airline#extensions#hunks#non_zero_only = 1\n\n\" NERDTree.\nautocmd StdinReadPre * let s:std_in=1\nautocmd VimEnter * if argc() == 0 && !exists(\"s:std_in\") | NERDTree | endif\nlet g:NERDTreeDirArrowExpandable = ''\nlet g:NERDTreeDirArrowCollapsible = ''\n\n\" Syntastic.\nset statusline+=%#warningmsg#\nset statusline+=%{SyntasticStatuslineFlag()}\nset statusline+=%*\nlet g:syntastic_phpcs_disable = 1\nlet g:syntastic_phpmd_disable = 1\nlet g:syntastic_php_checkers = ['php']\nlet g:syntastic_quiet_messages = { \"type\": \"style\" }\nlet g:syntastic_aggregate_errors = 1\nlet g:syntastic_auto_jump = 2\nlet g:syntastic_always_populate_loc_list = 1\nlet g:syntastic_auto_loc_list = 1\nlet g:syntastic_check_on_open = 1\nlet g:syntastic_check_on_wq = 0\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 4.26953125,
          "content": "#!/usr/bin/env bash\n\nblue='\\e[1;34m'\nred='\\e[1;31m'\nwhite='\\e[0;37m'\ndotfiles_repo_dir=$(pwd)\nbackup_dir=\"$HOME/.dotfiles.orig\"\ndotfiles_home_dir=(.zsh .aliases .bash_profile .bashrc .dircolors .editorconfig .exports\n                   .functions .gemrc .ripgreprc .wgetrc .Xresources .zshrc)\ndotfiles_xdg_config_dir=(.alacritty .dunst .htop .i3 .i3blocks .picom .rofi .tmux)\n\n# Print usage message.\nusage() {\n    local program_name\n    program_name=${0##*/}\n    cat <<EOF\nUsage: $program_name [-option]\n\nOptions:\n    --help    Print this message\n    -i        Install all config\n    -r        Restore old config\nEOF\n}\n\ninstall_dotfiles() {\n    # Backup config.\n    if ! [ -f \"$backup_dir/check-backup.txt\" ]; then\n        mkdir -p \"$backup_dir/.config\"\n        cd \"$backup_dir\" || exit\n        touch check-backup.txt\n\n        # Backup to ~/.dotfiles.orig\n        for dots_home in \"${dotfiles_home_dir[@]}\"\n        do\n            env cp -rf \"$HOME/${dots_home}\" \"$backup_dir\" &> /dev/null\n        done\n\n        # Backup some folder in ~/.config to ~/.dotfiles.orig/.config\n        for dots_xdg_conf in \"${dotfiles_xdg_config_dir[@]//./}\"\n        do\n            env cp -rf \"$HOME/.config/${dots_xdg_conf}\" \"$backup_dir/.config\" &> /dev/null\n        done\n\n        # Backup again with Git.\n        if [ -x \"$(command -v git)\" ]; then\n            git init &> /dev/null\n            git add -u &> /dev/null\n            git add . &> /dev/null\n            git commit -m \"Backup original config on $(date '+%Y-%m-%d %H:%M')\" &> /dev/null\n        fi\n\n        # Output.\n        echo -e \"${blue}Your config is backed up in ${backup_dir}\\n\" >&2\n        echo -e \"${red}Please do not delete check-backup.txt in .dotfiles.orig folder.${white}\" >&2\n        echo -e \"It's used to backup and restore your old config.\\n\" >&2\n    fi\n\n    # Install config.\n    for dots_home in \"${dotfiles_home_dir[@]}\"\n    do\n        env rm -rf \"$HOME/${dots_home}\"\n        env ln -fs \"$dotfiles_repo_dir/${dots_home}\" \"$HOME/\"\n    done\n\n    # Install config to ~/.config.\n    mkdir -p \"$HOME/.config\"\n    for dots_xdg_conf in \"${dotfiles_xdg_config_dir[@]}\"\n    do\n        env rm -rf \"$HOME/.config/${dots_xdg_conf[*]//./}\"\n        env ln -fs \"$dotfiles_repo_dir/${dots_xdg_conf}\" \"$HOME/.config/${dots_xdg_conf[*]//./}\"\n    done\n\n    echo -e \"${blue}New dotfiles is installed!\\n${white}\" >&2\n    echo \"There may be some errors when Terminal is restarted.\" >&2\n    echo \"Please read carefully the error messages and make sure all packages are installed. See more info in README.md.\" >&2\n    echo \"Note that the author of this dotfiles uses dev branch in some packages.\" >&2\n    echo -e \"If you want to restore your old config, you can use ${red}./install.sh -r${white} command.\" >&2\n}\n\nuninstall_dotfiles() {\n    if [ -f \"$backup_dir/check-backup.txt\" ]; then\n        for dots_home in \"${dotfiles_home_dir[@]}\"\n        do\n            env rm -rf \"$HOME/${dots_home}\"\n            env cp -rf \"$backup_dir/${dots_home}\" \"$HOME/\" &> /dev/null\n            env rm -rf \"$backup_dir/${dots_home}\"\n        done\n\n        for dots_xdg_conf in \"${dotfiles_xdg_config_dir[@]//./}\"\n        do\n            env rm -rf \"$HOME/.config/${dots_xdg_conf}\"\n            env cp -rf \"$backup_dir/.config/${dots_xdg_conf}\" \"$HOME/.config\" &> /dev/null\n            env rm -rf \"$backup_dir/.config/${dots_xdg_conf}\"\n        done\n\n        # Save old config in backup directory with Git.\n        if [ -x \"$(command -v git)\" ]; then\n            cd \"$backup_dir\" || exit\n            git add -u &> /dev/null\n            git add . &> /dev/null\n            git commit -m \"Restore original config on $(date '+%Y-%m-%d %H:%M')\" &> /dev/null\n        fi\n    fi\n\n    if ! [ -f \"$backup_dir/check-backup.txt\" ]; then\n        echo -e \"${red}You have not installed this dotfiles yet.${white}\" >&2\n        exit 1\n    else\n        echo -e \"${blue}Your old config has been restored!\\n${white}\" >&2\n        echo \"Thanks for using my dotfiles.\" >&2\n        echo \"Enjoy your next journey!\" >&2\n    fi\n\n    env rm -rf \"$backup_dir/check-backup.txt\"\n}\n\nmain() {\n    case \"$1\" in\n        ''|-h|--help)\n            usage\n            exit 0\n            ;;\n        -i)\n            install_dotfiles\n            ;;\n        -r)\n            uninstall_dotfiles\n            ;;\n        *)\n            echo \"Command not found\" >&2\n            exit 1\n    esac\n}\n\nmain \"$@\"\n"
        }
      ]
    }
  ]
}