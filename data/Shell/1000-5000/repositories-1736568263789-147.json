{
  "metadata": {
    "timestamp": 1736568263789,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scop/bash-completion",
      "stars": 3007,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 0.265625,
          "content": ";;; Directory Local Variables\n;;; For more information see (info \"(emacs) Directory Variables\")\n\n((python-mode\n  (mode . ruff-format-on-save))\n (sh-mode\n  (mode . shfmt-on-save)\n  (shfmt-arguments \"-s\")\n  (flycheck-sh-bash-args \"-O\" \"extglob\")\n  (sh-indent-comment . t)))\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.330078125,
          "content": "[*]\nindent_style = space\nindent_size = 4\ntab_width = 8\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nmax_line_length = 79\n# for shfmt\nfunction_next_line = true\nswitch_case_indent = true\n\n[Makefile.am]\nindent_style = tab\n\n[*.{yml,yaml}]\nindent_size = 2\n\n[COMMIT_EDITMSG]\nmax_line_length = 72\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4208984375,
          "content": "*.swp\n*.tar*\n*~\n.pytest_cache/\n__pycache__/\npytestdebug.log\n/.python-version\n/bash-completion-config-version.cmake\n/bash-completion-config.cmake\n/bash-completion.pc\n/bash_completion.sh\n/.mise.local.toml\n/.mise.*.local.toml\n/sha256sums.txt\n/venv/\n\n# Files generated by autotools\nMakefile\nMakefile.in\n/aclocal.m4\n/autom4te.cache/\n/config.guess\n/config.log\n/config.status\n/config.sub\n/configure\n/configure.lineno\n/install-sh\n/missing\n"
        },
        {
          "name": ".gitlint",
          "type": "blob",
          "size": 0.30859375,
          "content": "[general]\nignore = body-is-missing\nignore-revert-commits = false\nignore-stdin = true\ncontrib = contrib-title-conventional-commits\nregex-style-search = true\n\n[ignore-body-lines]\nregex = ^(Co-authored-by:|((Refs|See|[*-]) )?https?://)\n\n[ignore-by-author-name]\nregex = \\[bot\\]\nignore = body-is-missing,title-max-length\n"
        },
        {
          "name": ".perltidyrc",
          "type": "blob",
          "size": 0.107421875,
          "content": "--perl-best-practices\n--maximum-line-length=79\n--paren-tightness=2\n--cuddled-else\n--warning-output\n--converge\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.9853515625,
          "content": "default_stages: [pre-commit]\nminimum_pre_commit_version: 3.2.0 # for \"default_stages\" names\n\nrepos:\n\n  - repo: https://github.com/jorisroovers/gitlint\n    rev: v0.19.1\n    hooks:\n      - id: gitlint\n\n  - repo: https://github.com/scop/pre-commit-shfmt\n    rev: v3.10.0-2\n    hooks:\n      - id: shfmt\n        types: [text]\n        files: ^(bash_completion(\\.d/[^/]+\\.bash)?|completions/.+|test/(config/bashrc|fixtures/.+/bin/.+|fallback/update-fallback-links|runLint|update-test-cmd-list)|.+\\.sh(\\.in)?)$\n        exclude: ^completions/(\\.gitignore|Makefile.*)$\n\n  - repo: https://github.com/shellcheck-py/shellcheck-py\n    rev: v0.10.0.1\n    hooks:\n      - id: shellcheck\n        args: [-f, gcc]\n        types: [text]\n        files: ^(bash_completion(\\.d/[^/]+\\.bash)?|completions/.+|test/(config/bashrc|fixtures/.+/bin/.+|fallback/update-fallback-links|runLint|update-test-cmd-list)|.+\\.sh(\\.in)?)$\n        exclude: ^completions/(\\.gitignore|Makefile.*)$\n        require_serial: false  # We disable SC1090 anyway, so parallel is ok\n\n  - repo: local\n    hooks:\n      - id: update-test-cmd-list\n        name: update-test-cmd-list\n        language: script\n        entry: test/update-test-cmd-list\n        files: ^test/t/.+\\.py$\n        pass_filenames: false\n\n      - id: update-test-fallback-links\n        name: update-test-fallback-links\n        language: script\n        entry: test/fallback/update-fallback-links\n        files: ^completions/_\n        pass_filenames: false\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.4\n    hooks:\n      - id: ruff\n        types: [text]\n        files: ^(helpers/python|.+\\.py)$\n        exclude: ^completions/\n      - id: ruff-format\n        types: [text]\n        files: ^(helpers/python|.+\\.py)$\n        exclude: ^completions/\n\n  - repo: local\n    hooks:\n      - id: mypy\n        name: mypy\n        language: python\n        additional_dependencies:\n          - venv-run==0.2.0\n        entry: venv-run mypy\n        args: [--config-file=test/setup.cfg]\n        types: [python]\n        # Intentionally not run on helpers/python (we support very old versions)\n        exclude: ^completions/|^test/fixtures/pytest/\n\n  - repo: https://github.com/perltidy/perltidy\n    rev: \"20240903\"\n    hooks:\n      - id: perltidy\n        types: [text]\n        files: ^(helpers/perl|.+\\.p[ml])$\n\n  - repo: https://github.com/scop/pre-commit-perlcritic\n    rev: v1.156-1\n    hooks:\n      - id: perlcritic\n        args: [--quiet, --verbose, \"5\"]\n        types: [text]\n        files: ^(helpers/perl|.+\\.p[ml])$\n\n  - repo: https://github.com/jackdewinter/pymarkdown\n    rev: v0.9.26\n    hooks:\n      - id: pymarkdown\n        entry: pymarkdown\n        args:\n          - --config=.pymarkdown.json\n          - scan\n        exclude: ^CHANGELOG\\.md$\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-case-conflict\n\n  - repo: https://github.com/crate-ci/typos\n    rev: v1.28.4\n    hooks:\n      - id: typos\n        exclude: ^(CHANGELOG\\.md|test/(test-cmd-list\\.txt|fixtures/.+))$\n"
        },
        {
          "name": ".pymarkdown.json",
          "type": "blob",
          "size": 0.5859375,
          "content": "{\n    \"plugins\": {\n        \"first-line-heading\": {\n            \"//\": \"Does not work with GitHub issue templates\",\n            \"enabled\": false\n        },\n        \"line-length\": {\n            \"//\": \"Disabled because necessary for tables, and no option to disable for them as of 0.9.6\",\n            \"enabled\": false\n        },\n        \"no-inline-html\": {\n            \"//\": \"!-- for issue template, kbd for README and in general\",\n            \"allowed_elements\": \"!--,kbd\"\n        },\n        \"ul-indent\": {\n            \"//\": \"Disabled for lists in FAQ/A\",\n            \"enabled\": false\n        }\n    }\n}\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 0.375,
          "content": "shell=bash\nenable=deprecate-which\nenable=require-double-brackets\ndisable=SC1090  # not really fixable usually (ever?)\ndisable=SC2034  # for localizing variables set in called functions\ndisable=SC2128  # intentional style choice\ndisable=SC2209  # interferes with our `set` (literal) vs empty booleans\n\n# These disables are to be investigated and decided\n\ndisable=SC2016\ndisable=SC2155\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 1.4658203125,
          "content": "[default.extend-identifiers]\n# https://github.com/crate-ci/typos/issues/436\nBRE = \"BRE\"\n\n[default.extend-words]\n# completions/ri\nane = \"ane\"\n# completions/reportbug\nbuildd = \"buildd\"\n# completions/tar\ncaf = \"caf\"\n# completions/chage, test/t/Makefile.am, test/t/test_chage.py,\n# test/test-cmd-list.txt\nchage = \"chage\"\n# test/t/test_ccache.py\nclea = \"clea\"\n# test/t/test_pylint_3.py\nclien = \"clien\"\n# completions/openssl\nede = \"ede\"\n# completions/patch\nfior = \"fior\"\n# completions/make\nfo = \"fo\"\n# completions/.gitignore, completions/Makefile.am, completions/_hexdump,\n# completions/gnome-screenshot, completions/mii-diag, completions/mii-tool,\n# completions/qemu,\nhd = \"hd\"\n# test/t/test_ccache.py\nhel = \"hel\"\n# completions/bts\nhelo = \"helo\"\n# completions/ip\niif = \"iif\"\n# completions/tcpdump\ninout = \"inout\"\n# test/t/unit/test_unit_expand_glob.py\nket = \"ket\"\n# completions/hcitool, completions/ip\nlst = \"lst\"\n# completions/tshark, test/t/test_screen.py\nnd = \"nd\"\n# bash_completion\nodf = \"odf\"\n# completions/ip\noif = \"oif\"\n# completions/mplayer\noly = \"oly\"\n# test/t/unit/test_unit_find_unique_completion_pair.py\not = \"ot\"\n# completions/modinfo\nparm = \"parm\"\n# bash_completion, completions/eog, completions/gnome-screenshot,\n# test/t/test_nmap.py\npn = \"pn\"\n# completions/wget\nreferer = \"referer\"\n# completions/_mount.linux, completions/tune2fs, test/t/test_curl.py,\n# test/t/unit/test_unit_find_unique_completion_pair.py\nro = \"ro\"\n# completions/ps\nser = \"ser\"\n\n[files]\nextend-exclude = [\"CHANGELOG.md\"]\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2783203125,
          "content": "David Paleino (Debian) <d.paleino@gmail.com>\nFreddy Vulto <fvulto@gmail.com>\nGuillame Rousse (Mandriva) <Guillaume.Rousse@inria.fr>\nIgor Murzov <e-mail@date.by>\nMike Kelly (Exherbo) <pioto@pioto.org>\nSantiago M. Mola (Exherbo) <cooldwind@gmail.com>\nVille Skytt√§ <ville.skytta@iki.fi>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 324.2041015625,
          "content": "## [2.16.0](https://github.com/scop/bash-completion/compare/2.15.0...2.16.0) (2024-12-25)\n\n\n### Features\n\n* **alp:** add 3rd party fallback completion loader ([606017f](https://github.com/scop/bash-completion/commit/606017f0b77734140a2612132985ee4dc01fd227))\n* **apko:** add 3rd party fallback completion loader ([e906c75](https://github.com/scop/bash-completion/commit/e906c75236fc961e6dbb21c4707e454952ab09cc))\n* **aqua:** add 3rd party fallback completion loader ([#1275](https://github.com/scop/bash-completion/issues/1275)) ([379a951](https://github.com/scop/bash-completion/commit/379a951454283e64ad6b5f55f885ff25bfc7454e))\n* **argc:** add 3rd party fallback completion loader ([f0c3b59](https://github.com/scop/bash-completion/commit/f0c3b59fd21edb99f6aec83043eb4ce0eaa64d29))\n* **argo:** add 3rd party fallback completion loader ([c069996](https://github.com/scop/bash-completion/commit/c06999686590810805b1b755da468025c7f21d54))\n* **atlas:** add 3rd party fallback completion loader ([ce0abdd](https://github.com/scop/bash-completion/commit/ce0abdd70617bdb41f018d26eee8542107cd5770))\n* **atmos:** add 3rd party fallback completion loader ([8796f86](https://github.com/scop/bash-completion/commit/8796f86938758396ae3e89c167f3dc1e834612e1))\n* **bashbot:** add 3rd party fallback completion loader ([494e625](https://github.com/scop/bash-completion/commit/494e6251e8ab7f8a707fcdcd40255a994357d824))\n* **bosh:** add 3rd party fallback completion loader ([21fcca5](https://github.com/scop/bash-completion/commit/21fcca5e44793cf235de1dd281e2d84ca5ee0263))\n* **caddy:** add 3rd party fallback completion loader ([6b999e5](https://github.com/scop/bash-completion/commit/6b999e5bd6167154d54e516fe631716713356740))\n* **chamber:** add 3rd party fallback completion loader ([d6f2798](https://github.com/scop/bash-completion/commit/d6f2798960b4597ee40206e80a140cfc40e85b92))\n* **changie:** add 3rd party fallback completion loader ([5268e0b](https://github.com/scop/bash-completion/commit/5268e0bd7700edd956ea3566216b3536cc7cbdfd))\n* **clusterctl:** add 3rd party fallback completion loader ([6124044](https://github.com/scop/bash-completion/commit/612404438fc99954e2fa21334cbfd078fc6de44b))\n* **cmctl:** add 3rd party fallback completion loader ([4dcef0b](https://github.com/scop/bash-completion/commit/4dcef0b6598fde5c141843ee7b3051f38d55d298))\n* **coder:** add 3rd party fallback completion loader ([4dc827a](https://github.com/scop/bash-completion/commit/4dc827a3c91d6f5badc73f479e8d75db72ff607e))\n* **colima:** add 3rd party fallback completion loader ([55a75aa](https://github.com/scop/bash-completion/commit/55a75aae8a21b11d65eef27e115d853a2e24819a))\n* **conform:** add 3rd party fallback completion loader ([676c062](https://github.com/scop/bash-completion/commit/676c0629ee1f7fdba5f480387b54b708cb211b43))\n* **conftest:** add 3rd party fallback completion loader ([123c8d5](https://github.com/scop/bash-completion/commit/123c8d599d1b818a3e775ab16854fee7ccb62f40))\n* **container-structure-test:** add 3rd party fallback completion loader ([42d9241](https://github.com/scop/bash-completion/commit/42d9241eee14f8cbbf7e71df1ba8d7cb56badbfa))\n* **cosign:** add 3rd party fallback completion loader ([#1286](https://github.com/scop/bash-completion/issues/1286)) ([2dba9c6](https://github.com/scop/bash-completion/commit/2dba9c66a42b0d0bbbcde678d54123f3f56c12d5))\n* **crane,gcrane,krane:** add 3rd party fallback completion loaders ([24918db](https://github.com/scop/bash-completion/commit/24918dbca1d0adfee7b88c761d4a48f36061c864))\n* **crictl:** add 3rd party fallback completion loader ([7823df8](https://github.com/scop/bash-completion/commit/7823df8716e32486d83a3ece16f688bca011191b))\n* **ctlptl:** add 3rd party fallback completion loader ([c3784cc](https://github.com/scop/bash-completion/commit/c3784cc41acf1bf984e4279ba34fb4cdfb13e61c))\n* **cue:** add 3rd party fallback completion loader ([b9b56e0](https://github.com/scop/bash-completion/commit/b9b56e031a1902a76b9a6fb55ce3bd17ccce413f))\n* **dagger:** add 3rd party fallback completion loader ([fb50c08](https://github.com/scop/bash-completion/commit/fb50c0860507518bec63f9b42d0116af5a9cd4b3))\n* **dapr:** add 3rd party fallback completion loader ([12b91f1](https://github.com/scop/bash-completion/commit/12b91f11ab9dd3335222099c7d02462375829181))\n* **dasel:** add 3rd party fallback completion loader ([6c85159](https://github.com/scop/bash-completion/commit/6c8515988c6cc9523c1798e64a99762a1c76fc5e))\n* **deck:** add 3rd party fallback completion loader ([254f76a](https://github.com/scop/bash-completion/commit/254f76a30838f624326346737c7b434fd20eac78))\n* **delta:** add 3rd party fallback completion loader ([164852f](https://github.com/scop/bash-completion/commit/164852f9555d8fcb1959f06f2cbaed75a24ab6d7))\n* **depot:** add 3rd party fallback completion loader ([ba56206](https://github.com/scop/bash-completion/commit/ba5620612b7e7c4ec2ca57ef92cbaa599fc42814))\n* **devspace:** add 3rd party fallback completion loader ([ad11337](https://github.com/scop/bash-completion/commit/ad113374f6808a9edd304055bbadc383b1cb0e1e))\n* **driftctl:** add 3rd party fallback completion loader ([fffafbc](https://github.com/scop/bash-completion/commit/fffafbc83720d49bc4c9531d712e583dafef8ee6))\n* **dyff:** add 3rd party fallback completion loader ([3a37c60](https://github.com/scop/bash-completion/commit/3a37c60699fa34a1a81afb654cbd79f7f5d94fa5))\n* **esc:** add 3rd party fallback completion loader ([48a2811](https://github.com/scop/bash-completion/commit/48a281172efcced5ee688e0e5c93530a0fed17a3))\n* **flux:** add 3rd party fallback completion loader ([ddd108b](https://github.com/scop/bash-completion/commit/ddd108b34ccc25eaa889c79ef23d2c36af30aada))\n* **furyctl:** add 3rd party fallback completion loader ([01ee387](https://github.com/scop/bash-completion/commit/01ee387a8d5181ebd6594a481405d960942d4f24))\n* **fx:** add 3rd party fallback completion loader ([86b838c](https://github.com/scop/bash-completion/commit/86b838c7028c5c2bea8c6664f4f25aaee17b4d9c))\n* **ghorg:** add 3rd party fallback completion loader ([7313401](https://github.com/scop/bash-completion/commit/731340147be6a66b1a7506df6ffeccdc2aaad680))\n* **gitconfig:** add 3rd party fallback completion loader ([1fe9904](https://github.com/scop/bash-completion/commit/1fe99041ab155648f77b3f3c67fa85a7247cddb9))\n* **gitleaks:** add 3rd party fallback completion loader ([a642fc8](https://github.com/scop/bash-completion/commit/a642fc87fb41e78a4cb3747afd325004cb33d184))\n* **gitsign:** add 3rd party fallback completion loader ([635d734](https://github.com/scop/bash-completion/commit/635d734ba8adcafb710402c79e105de7a73e986d))\n* **glen:** add 3rd party fallback completion loader ([89ad58f](https://github.com/scop/bash-completion/commit/89ad58f63def8459bfc13f3072ed94d33a705473))\n* **glow:** add 3rd party fallback completion loader ([8c3166b](https://github.com/scop/bash-completion/commit/8c3166bbdcfc8fc273c0e88c09c4cf92eb3f3148))\n* **gopass:** add 3rd party fallback completion loader ([81c6273](https://github.com/scop/bash-completion/commit/81c62737cb938fb21237d1c992c513a143a8b0e4))\n* **grype:** add 3rd party fallback completion loader ([a1b3831](https://github.com/scop/bash-completion/commit/a1b3831c8a5cffedd9295fb5ab5c9418a3089945))\n* **helmfile:** add 3rd party fallback completion loader ([3dec92b](https://github.com/scop/bash-completion/commit/3dec92b0f7f0a7f34c5540c3b2983938d2b64bca))\n* **hostctl:** add 3rd party fallback completion loader ([25700b6](https://github.com/scop/bash-completion/commit/25700b615424cd01974c81a5d2dbca84ac45f5a2))\n* **imgpkg:** add 3rd party fallback completion loader ([c7da7bb](https://github.com/scop/bash-completion/commit/c7da7bbc0c91d5c1fbbcd56407a908d54ef27f7e))\n* **jj:** add 3rd party fallback completion loader ([d70381e](https://github.com/scop/bash-completion/commit/d70381e15894ef0bab28e5c5079dd65f831cb53b))\n* **just:** add 3rd party fallback completion loader ([de59a20](https://github.com/scop/bash-completion/commit/de59a2070334af9d89aebbc1bd47d214a15b5d92))\n* **jwt:** add 3rd party fallback completion loader ([03229b3](https://github.com/scop/bash-completion/commit/03229b3bde066f281e5223302ee774f4f9870caa))\n* **k0sctl:** add 3rd party fallback completion loader ([9a78b89](https://github.com/scop/bash-completion/commit/9a78b899b093b0b599f389ac1fa1c909d5458de8))\n* **k3d:** add 3rd party fallback completion loader ([9bb60a3](https://github.com/scop/bash-completion/commit/9bb60a3d527746808b946d9113ecd2f6de61ae5e))\n* **k3sup:** add 3rd party fallback completion loader ([c58ae25](https://github.com/scop/bash-completion/commit/c58ae258383694488a726a58a5425968bfcf38ae))\n* **k6:** add 3rd party fallback completion loader ([05ec5d8](https://github.com/scop/bash-completion/commit/05ec5d8facaa7ae89b06e8ea583115b0de810d5d))\n* **k9s:** add 3rd party fallback completion loader ([cb5005c](https://github.com/scop/bash-completion/commit/cb5005c7e0922ede9b25b7b2d8ce28844a92b97c))\n* **kafkactl:** add 3rd party fallback completion loader ([baeb267](https://github.com/scop/bash-completion/commit/baeb267176894a962f942fa044938ee62e9b7564))\n* **kapp:** add 3rd party fallback completion loader ([dd6c685](https://github.com/scop/bash-completion/commit/dd6c68575690715ed7e970914c8a210274f75c97))\n* **kconf:** add 3rd party fallback completion loader ([9609b50](https://github.com/scop/bash-completion/commit/9609b50be2a875260ba7e94f40b600ceb7db069d))\n* **kind:** add 3rd party fallback completion loader ([bf54a1f](https://github.com/scop/bash-completion/commit/bf54a1fe40b3af77f3a538b97be8a50ccf74a2d5))\n* **ko:** add 3rd party fallback completion loader ([ae1b9a2](https://github.com/scop/bash-completion/commit/ae1b9a283ec2dcc08590573a022446fea0e9a552))\n* **kompose:** add 3rd party fallback completion loader ([e291111](https://github.com/scop/bash-completion/commit/e29111166e339ce38bbb7cb0ba58ae84d249dd5c))\n* **kops:** add 3rd party fallback completion loader ([6dad3f5](https://github.com/scop/bash-completion/commit/6dad3f5118730f97a66558269e5d19a78b73d06f))\n* **kube-capacity:** add 3rd party fallback completion loader ([ce05e4c](https://github.com/scop/bash-completion/commit/ce05e4c6f0cb0a8903904b91ed5dd2e01c9d4d64))\n* **kube-linter:** add 3rd party fallback completion loader ([37d645d](https://github.com/scop/bash-completion/commit/37d645df5efe28e333292098f8ba5dac9c7acd49))\n* **kubebuilder:** add 3rd party fallback completion loader ([1d6650c](https://github.com/scop/bash-completion/commit/1d6650c114072254bae56b9a65cac54d0c3cc052))\n* **kubecm:** add 3rd party fallback completion loader ([dbd94cb](https://github.com/scop/bash-completion/commit/dbd94cb85762d1c1195ef28752a3c12e858e2d56))\n* **kubectl-argo-rollouts:** add 3rd party fallback completion loader ([0282c1e](https://github.com/scop/bash-completion/commit/0282c1e06cf179a7b8b9ad59ce24b274f20336da))\n* **kubectl-kuttl:** add 3rd party fallback completion loader ([a9b0084](https://github.com/scop/bash-completion/commit/a9b00849f5f14b6bb89e2cef066990eeef6cc419))\n* **kubelogin:** add 3rd party fallback completion loader ([e130911](https://github.com/scop/bash-completion/commit/e13091122c4fa0b77f9782dcc38d7252cfbdaa38))\n* **kubemqctl:** add 3rd party fallback completion loader ([4c9798d](https://github.com/scop/bash-completion/commit/4c9798d26247bd96f457c9277d48c39ecd1428b4))\n* **kubesec:** add 3rd party fallback completion loader ([19c6c67](https://github.com/scop/bash-completion/commit/19c6c67a3a70c6697ff6b5022986f75110d06626))\n* **kubeshark:** add 3rd party fallback completion loader ([fdd3c4a](https://github.com/scop/bash-completion/commit/fdd3c4aa7fb33d17f32861317ad3eaf3f8d8274a))\n* **kubespy:** add 3rd party fallback completion loader ([7aa7ac1](https://github.com/scop/bash-completion/commit/7aa7ac18d11e3814fd517e4f1f2c1c62909fedd7))\n* **kustomize:** add 3rd party fallback completion loader ([b780527](https://github.com/scop/bash-completion/commit/b7805270088483b3b8e8498400ea8645ad916c83))\n* **kyverno:** add 3rd party fallback completion loader ([2ca5975](https://github.com/scop/bash-completion/commit/2ca59759892423db45a93972e91215fc5af16b1e))\n* **limactl:** add 3rd party fallback completion loader ([01bafcb](https://github.com/scop/bash-completion/commit/01bafcb87c74e76d87c73efbe7a3c00f387ff291))\n* **melange:** add 3rd party fallback completion loader ([6d4ad73](https://github.com/scop/bash-completion/commit/6d4ad73420506be2d6b69f5e9eb6005eb8bff865))\n* **minishift:** add 3rd party fallback completion loader ([d8d3fe1](https://github.com/scop/bash-completion/commit/d8d3fe1c3f4229ef6692de4d15653b6de15d39e1))\n* **mockery:** add 3rd party fallback completion loader ([c79bc1c](https://github.com/scop/bash-completion/commit/c79bc1c772f3a61ee8a453303b2ab7c7c45bb28f))\n* **notation:** add 3rd party fallback completion loader ([cbaef0f](https://github.com/scop/bash-completion/commit/cbaef0fd0790da8f0db22dc75d68b284ffa3854c))\n* **nova:** add 3rd party fallback completion loader ([ce7b092](https://github.com/scop/bash-completion/commit/ce7b0927d84b596c2064f245edcef3ff3fb2b287))\n* **odo:** add 3rd party fallback completion loader ([48f00ce](https://github.com/scop/bash-completion/commit/48f00cec63473f6ddb3ed2d34b0c7a20e7b0f518))\n* **opa:** add 3rd party fallback completion loader ([e0b4c7f](https://github.com/scop/bash-completion/commit/e0b4c7f5acf68e1365ee0231f61a971825239817))\n* **oras:** add 3rd party fallback completion loader ([cb5d152](https://github.com/scop/bash-completion/commit/cb5d152e9d79e752f62a3764e00fface687b4ea7))\n* **pitchfork:** add 3rd party fallback completion loader ([538344e](https://github.com/scop/bash-completion/commit/538344e8c1230d977237abb3ebaed1d9acbaaad6))\n* **pluto:** add 3rd party fallback completion loader ([f519f21](https://github.com/scop/bash-completion/commit/f519f2184fda8b81a4759e52856c21e96474d338))\n* **popeye:** add 3rd party fallback completion loader ([23140b2](https://github.com/scop/bash-completion/commit/23140b225fee9febe4a355c382c8625d2e484685))\n* **regal:** add 3rd party fallback completion loader ([a18e23c](https://github.com/scop/bash-completion/commit/a18e23cd90c6f4e3ea1d6213d6d864eead772110))\n* **regctl:** add 3rd party fallback completion loader ([b3eec76](https://github.com/scop/bash-completion/commit/b3eec7618c39b9a76013defe6a1e08f786e45422))\n* **rustic:** add 3rd party fallback completion loader ([8ec77d0](https://github.com/scop/bash-completion/commit/8ec77d0f530bfdd04b610f8a9ef2a0fee76a5bfb))\n* **sentry-cli:** add 3rd party fallback completion loader ([7b3ac92](https://github.com/scop/bash-completion/commit/7b3ac928b94ae12000017e8e29f0bccaa35601f8))\n* **sinker:** add 3rd party fallback completion loader ([69567f7](https://github.com/scop/bash-completion/commit/69567f7ed78db8b94766632296af8d897a5960ed))\n* **slsa-verifier:** add 3rd party fallback completion loader ([ac0bb34](https://github.com/scop/bash-completion/commit/ac0bb34d948e1690c639a1f9ae666d426faec6b3))\n* **sopstool:** add 3rd party fallback completion loader ([4c17fa0](https://github.com/scop/bash-completion/commit/4c17fa0c50867903fad137718f88a6850629a107))\n* **spacectl:** add 3rd party fallback completion loader ([542fb01](https://github.com/scop/bash-completion/commit/542fb01d9c23dbc0aaac60e6f0f01fc2389afe2a))\n* **steampipe:** add 3rd party fallback completion loader ([aa6f0fd](https://github.com/scop/bash-completion/commit/aa6f0fdc3b4795d40343fb2217824302fba25f8d))\n* **stern:** add 3rd party fallback completion loader ([0192486](https://github.com/scop/bash-completion/commit/01924865cc7883a5f912622d19bdba7b0e6ae6c3))\n* **stripe:** add 3rd party fallback completion loader ([7cf1b3f](https://github.com/scop/bash-completion/commit/7cf1b3f4117827be36a0f462d6923d859d89c472))\n* **syft:** add 3rd party fallback completion loader ([44427f4](https://github.com/scop/bash-completion/commit/44427f4c6723ec4843b3d7352c976685f0709729))\n* **talhelper:** add 3rd party fallback completion loader ([c6fc803](https://github.com/scop/bash-completion/commit/c6fc803c863a66e333290d76ffb68a13cb8abf05))\n* **task:** add 3rd party fallback completion loader ([6239823](https://github.com/scop/bash-completion/commit/6239823d558a990fedd9050df8ca79df5a120a6f))\n* **tctl:** add 3rd party fallback completion loader ([0348cbf](https://github.com/scop/bash-completion/commit/0348cbfcadb3be234789805798f3d0348727508f))\n* **tfctl:** add 3rd party fallback completion loader ([014faa5](https://github.com/scop/bash-completion/commit/014faa51c77c9334ea6db26302de11ee1859c038))\n* **tilt:** add 3rd party fallback completion loader ([eeeef1c](https://github.com/scop/bash-completion/commit/eeeef1cf717eabd627742599fe9efe8af89b9c56))\n* **timoni:** add 3rd party fallback completion loader ([d51ceba](https://github.com/scop/bash-completion/commit/d51ceba69a504f1fe36143c83f2780bf769c02e3))\n* **vela:** add 3rd party fallback completion loader ([34c8b32](https://github.com/scop/bash-completion/commit/34c8b328629eaaa280bc3fc4fbf36612d236e488))\n* **velero:** add 3rd party fallback completion loader ([b058145](https://github.com/scop/bash-completion/commit/b058145dadee09789daa38edcb2729fa597a15a9))\n* **venom:** add 3rd party fallback completion loader ([c77de6c](https://github.com/scop/bash-completion/commit/c77de6c214ed36707671566a4827d6db2efd7203))\n* **wasmer,wasmer-headless:** add 3rd party fallback completion loader ([5986022](https://github.com/scop/bash-completion/commit/5986022a18a6581891b1a8aee878ec5b3b1f582c))\n* **xc:** add 3rd party fallback completion loader ([97d8eae](https://github.com/scop/bash-completion/commit/97d8eaeca4473e60b4c83ba2eefbfe1fd2df221a))\n* **ytt:** add 3rd party fallback completion loader ([11cb8a6](https://github.com/scop/bash-completion/commit/11cb8a637e799823362be68f06bdd8e87d1b33c1))\n* **zola:** add 3rd party fallback completion loader ([34b1e24](https://github.com/scop/bash-completion/commit/34b1e2424561b039b93976b937b5fc6d2e6e9e87))\n\n\n### Bug Fixes\n\n* **mfiutil:** more link and style issues ([cbd2661](https://github.com/scop/bash-completion/commit/cbd266155020194ec824028fb5c0d7ac95c89474))\n\n## [2.15.0](https://github.com/scop/bash-completion/compare/2.14.0...2.15.0) (2024-11-24)\n\n\n### Features\n\n* **_comp_abspath:** handle \"..\" ([d599dcf](https://github.com/scop/bash-completion/commit/d599dcfb7f33146baa143d99067c7e71d2992ee6))\n* **_comp_compgen_filedir,_comp_compgen_filedir_xspec:** don‚Äôt suggest . and .. ([#1230](https://github.com/scop/bash-completion/issues/1230)) ([0e7a0cf](https://github.com/scop/bash-completion/commit/0e7a0cf04bd9dbb190e977323ff16a24c6e172e7))\n* associate unzip and friends with *.vsix ([3c3ab17](https://github.com/scop/bash-completion/commit/3c3ab1781bf6061607d327a72a77ea93cf8aaedf))\n* **curl:** Complete \"%\", \"-\" for --trace[-ascii] ([b44b29c](https://github.com/scop/bash-completion/commit/b44b29ca1078043d2957d68e932e1a27c7e10283))\n* **curl:** Complete files for --json, --write-out ([62c0ecb](https://github.com/scop/bash-completion/commit/62c0ecbc6b8d018f4eb313961d888ab1cb18ecb5))\n* **curl:** Complete stdin \"-\" in file locations ([9c72cf8](https://github.com/scop/bash-completion/commit/9c72cf85c72f1cc0ad31ab1a5b12bbc78f06956e))\n* **fprintd-*:** new completions ([8aa4914](https://github.com/scop/bash-completion/commit/8aa4914a9ce9896d2461b2e09ba3f7649e001d99))\n* **iftop:** -G, -s, -L, and -o arg (non-)completions ([35293af](https://github.com/scop/bash-completion/commit/35293af0aaa2d37cee5549d3687004a045003578))\n* **ip:** complete ip ntable show ([432f95f](https://github.com/scop/bash-completion/commit/432f95f2ac29e83a705cfeb1b2de2a1eba45b5c2))\n* **java:** enable .java filename completion for java command ([959ce82](https://github.com/scop/bash-completion/commit/959ce82920bf20329a4586a325dd4579f8d5b822)), closes [#1196](https://github.com/scop/bash-completion/issues/1196)\n* **kata-runtime:** add 3rd party fallback completion loader ([5ff8055](https://github.com/scop/bash-completion/commit/5ff805532d45768ff2ddb55bb8ac0ea7869c023c))\n* **nerdctl:** add 3rd party fallback completion loader ([cf0591a](https://github.com/scop/bash-completion/commit/cf0591a01eec9350d294dae6b8f9c04d314dfcc9))\n* **ngrok:** add 3rd party fallback completion loader ([#1252](https://github.com/scop/bash-completion/issues/1252)) ([df48031](https://github.com/scop/bash-completion/commit/df48031e9fb75420ff569accc2152068ab37b8df))\n* **openssl:** Stop having subcommands hardcoded ([300b936](https://github.com/scop/bash-completion/commit/300b93682e3b27ed7fd7b1299a78dfc6ceaf6e80))\n* **python,pyvenv:** versioned 3.13 executable support ([3039122](https://github.com/scop/bash-completion/commit/3039122fecf228e96174d23dc7a5dafa6bff2002))\n* **set:** more featureful completion ([1cb3eae](https://github.com/scop/bash-completion/commit/1cb3eaee7166f81ff3f0b8e0b178ddfe0f5c230c))\n* **slabtop:** new completion ([64be5ea](https://github.com/scop/bash-completion/commit/64be5ea8d90d7d743976dd9c439c6aab0ab14ae5))\n* **sops:** add 3rd party fallback completion loader ([47af482](https://github.com/scop/bash-completion/commit/47af482d43ad91b6aba0bb736ec68e1ab47458b6))\n* **tar:** use long option compression options ([0518a21](https://github.com/scop/bash-completion/commit/0518a21b3419c53c2dc13753320a4b205ea5a493))\n* **todoist:** add 3rd party fallback completion loader ([75f5d26](https://github.com/scop/bash-completion/commit/75f5d2684b2c36b2ac066648d33d70a13936e942))\n* **uv:** add 3rd party fallback completion loader ([ba003af](https://github.com/scop/bash-completion/commit/ba003af9684da4c416058f54be338b45a7e9eed4))\n* **uvx:** add 3rd party fallback completion loader ([499ecab](https://github.com/scop/bash-completion/commit/499ecab89f90e5006f3137e3094ec1c6a1977164))\n* **wine:** complete with `*.bat` and `*.cmd` ([01b34cb](https://github.com/scop/bash-completion/commit/01b34cb855ebb672646fc27795096c46fdd2e9ad))\n* **xv:** associate with *.webp and *.pnm ([#1227](https://github.com/scop/bash-completion/issues/1227)) ([2dab633](https://github.com/scop/bash-completion/commit/2dab63379b90619f93873976944f4f9ad338dc0d))\n* **xxd:** add -n, -o, and -R arg (non-)completions ([8304d33](https://github.com/scop/bash-completion/commit/8304d3342a07e0f1a402ff0a6752e513c2a0541a))\n\n\n### Bug Fixes\n\n* **_comp_compgen:** use `compgen -V array_name` in `bash &gt;= 5.3` ([2b5f9fa](https://github.com/scop/bash-completion/commit/2b5f9fa8d557a4376f10cf69da07c11b9f5db0be))\n* **_comp_expand_glob:** set LC_COLLATE for the sorting order ([ce98f68](https://github.com/scop/bash-completion/commit/ce98f686c0aac19bc5b0938cbfa245a2f06d8b79))\n* **_comp_expand_glob:** work around GLOBSORT in Bash 5.3 ([0fda821](https://github.com/scop/bash-completion/commit/0fda8211079e32e6fea29dabb46fe1a55a80cccd))\n* **compatdir:** use _comp_expand_glob for the correct order ([51e680a](https://github.com/scop/bash-completion/commit/51e680a684c5e0e8eb8a485797aea68975901fef))\n* **curl:** Complete all and category for --help ([7eb2eb2](https://github.com/scop/bash-completion/commit/7eb2eb2ceabfc882a1407f34c9dadb8e194a4ec2))\n* **dpkg:** Add missing short option -R ([9891762](https://github.com/scop/bash-completion/commit/9891762cc88f13a05b300466a9d317f39d95f7dd))\n* **rsync,ssh:** do not overescape spaces in remote filenames ([#910](https://github.com/scop/bash-completion/issues/910)) ([e8dc253](https://github.com/scop/bash-completion/commit/e8dc253ddda79f83532551e45deeeab0c3afc5f4))\n* source files using absolute paths for absolute BASH_SOURCE ([e1a70c6](https://github.com/scop/bash-completion/commit/e1a70c66433788e2d9d08e89d16329bb2fb340b9))\n* **tar:** Complete added files with long opts ([c94bebb](https://github.com/scop/bash-completion/commit/c94bebbe919ce696d57466d7c9c9328d82be9fd8))\n* **update-alternatives:** fix the \"--help\" parsing ([07605cb](https://github.com/scop/bash-completion/commit/07605cb3e0a3aca8963401c8f7a8e7ee42dbc399))\n\n## [2.14.0](https://github.com/scop/bash-completion/compare/2.13.0...2.14.0) (2024-05-09)\n\n\n### Features\n\n* **bao:** add 3rd party fallback completion loader ([af7fbb9](https://github.com/scop/bash-completion/commit/af7fbb97b470abce4025144fe4676c38cf4514d4))\n* **cryptsetup:** complete --header with filenames ([4c9fc87](https://github.com/scop/bash-completion/commit/4c9fc87975bd2dc04a6851017d9a71116ec1e44f))\n* **dlv:** add 3rd party fallback completion loader ([eefe71d](https://github.com/scop/bash-completion/commit/eefe71d8681d0735abc541cd0b7d2c7f9c535212))\n* **env:** complete commands and variable assignments ([5c75fa3](https://github.com/scop/bash-completion/commit/5c75fa332b5f86863f14c2ef45cdc8732c9a2c35))\n* **env:** treat `-*` as the command name after `-` and `--` ([0cd2883](https://github.com/scop/bash-completion/commit/0cd2883ca17e65a86fe81c650cea869f9fc70839))\n* **env:** treat `-*` as the command name after assignments ([71b7fb2](https://github.com/scop/bash-completion/commit/71b7fb2bc6fd9eef901e959aaf089419cc6f74a4))\n* **gup:** add 3rd party fallback completion loader (&gt;= 0.25.0) ([1641f1a](https://github.com/scop/bash-completion/commit/1641f1a3043e3a378b4dd08a0f07240dd1d56548))\n* **incus:** add 3rd party fallback completion loader ([7108d9c](https://github.com/scop/bash-completion/commit/7108d9ca84a2617ae36e88181d39aeeabe3225dd))\n* **ip:** Complete 'route get' options ([12fbdb1](https://github.com/scop/bash-completion/commit/12fbdb163b9ffabb5f673c910a98edc8eaa6ac65))\n* **ip:** Complete addr add/change/replace options ([8262664](https://github.com/scop/bash-completion/commit/82626648c75406509187d3775b25430da6347fea))\n* **ip:** Complete ip route list options ([43beafc](https://github.com/scop/bash-completion/commit/43beafcfde8f6c8630ad9197ffbae76bfae010a5))\n* **ip:** Complete link afstats command ([6721346](https://github.com/scop/bash-completion/commit/672134688efceb71dc58c1c00463f8c38a4b0477))\n* **ip:** Complete neigh add, del, change, replace ([ba80203](https://github.com/scop/bash-completion/commit/ba8020349c965e92e25ae66fc1f8eceda50bc450))\n* **ip:** Complete route save/showdump ([606f650](https://github.com/scop/bash-completion/commit/606f6509ddff9c30bb8b4971fb16a90fa39e4dfe))\n* **iperf:** --tos/-S argument completion ([d2f59bb](https://github.com/scop/bash-completion/commit/d2f59bb6fa55e2f4becd21bdd21ff75fe627ad38))\n* **ssh-copy-id:** (non-)complete args to `-t` and `-F` ([53fdce4](https://github.com/scop/bash-completion/commit/53fdce4bd972a71dba3e8e5be05eadb443ec93f3))\n* **ssh-keygen:** complete -r/-Y specific -O args ([d6977fc](https://github.com/scop/bash-completion/commit/d6977fcd43302c8b3820fe5f90ce56c31db6e5ad))\n* **ssh-keyscan:** complete -O argument ([39ea543](https://github.com/scop/bash-completion/commit/39ea5435abfc4b13445bb0eec086e246e3cadb38))\n* **tofu:** add 3rd party fallback completion loader ([4edd9a2](https://github.com/scop/bash-completion/commit/4edd9a2bde503d3897eb1906275d6509a3fafc97))\n* **zarf:** add 3rd party fallback completion loader ([032f0f0](https://github.com/scop/bash-completion/commit/032f0f0f35b53856c3be642bb3101a4d01c81aee))\n\n\n### Bug Fixes\n\n* **_comp_{compgen,xfunc}:** use `declare -F --` for arbitrary funcs ([8998491](https://github.com/scop/bash-completion/commit/899849127707f6d616d5312c0efab0092b8caea8))\n* **_comp_{load,realcommand}:** handle option-like command name ([883946d](https://github.com/scop/bash-completion/commit/883946d84d13d7947eb0c21a536bd947b3dbc31a))\n* **available_interfaces:** strip only trailing colon from entries ([a452aee](https://github.com/scop/bash-completion/commit/a452aee8fb58720ecfadbdaad95277ac9d9072ac))\n* **bash_completion,conftest:** use `complete -p --` for arbitrary cmds ([dafd338](https://github.com/scop/bash-completion/commit/dafd3382e019cf90156cc6abc4266a82ab4ebe5f))\n* **fio:** engines completion ([27a0ef8](https://github.com/scop/bash-completion/commit/27a0ef80a2dbd84d8a0d2f90945cc66577149726))\n* **ip:** Complete link change as well as set ([956bd5d](https://github.com/scop/bash-completion/commit/956bd5dfd26f40ba23d1708bb15174d18b142087))\n* **ip:** Don't stop at proxy and nomaster in neigh ([d58ea76](https://github.com/scop/bash-completion/commit/d58ea763364f234ed90e8152f36b99f02e82ec84))\n* **scp remote_files:** do not filter generated paths with \"$cur\" ([bc812df](https://github.com/scop/bash-completion/commit/bc812dff7246e5186c7ae752081605787942f8f9))\n* **scp remote_files:** localize variable `cur` ([34f7d0c](https://github.com/scop/bash-completion/commit/34f7d0c321977016e3191cb7e9ab7ebd1a4083a0))\n* **ssh-keygen:** handling of bundled short options ([18e436d](https://github.com/scop/bash-completion/commit/18e436d0a0a25809bc1c8e6457aaa78a1667fa51))\n* **ssh-keygen:** make work with custom IFS ([b71340b](https://github.com/scop/bash-completion/commit/b71340bb411fb5d8ddb0c96836e484ace7eeb8f3))\n* **ssh-keygen:** suggest -O arg completions depending on mode ([b49ab1d](https://github.com/scop/bash-completion/commit/b49ab1d9f5515d12920ddb1548790fa0bf78d0b1))\n* use -- to pass arbitrary cmdnames to `_comp_load` ([3c1d9bc](https://github.com/scop/bash-completion/commit/3c1d9bc3f5432dee7de0935e8a4b6bf66c2fad77))\n* use `pathcmd=$(type -P -- \"$1\")` for arbitrary cmds ([8795ca9](https://github.com/scop/bash-completion/commit/8795ca99f3eb147e26d49f06e535f0ce64b4d162))\n\n## [2.13.0](https://github.com/scop/bash-completion/compare/2.12.0...2.13.0) (2024-04-03)\n\n\n### Features\n\n* **curl:** Complete protocols for --proto-default ([7051379](https://github.com/scop/bash-completion/commit/7051379e448147407c3fe43c89872dafb76ebb27))\n* **ip:** Add completion for netconf subcommand ([03a10ff](https://github.com/scop/bash-completion/commit/03a10ff63226782e61dae4407138c3240ff0c7c2))\n* **ip:** Complete commands for netns exec ([1f03796](https://github.com/scop/bash-completion/commit/1f03796cd930ddad6207d46814da820674f16edc))\n* **ip:** Complete help for unknown subcommands ([21f7e32](https://github.com/scop/bash-completion/commit/21f7e32f9009c2064d1659668425b6b6ccb537bd))\n* **ip:** Complete ip link property ([efa663c](https://github.com/scop/bash-completion/commit/efa663cd0dd63d54fd2d2987ee66fb954ccf4a86))\n* **ip:** Complete link types for address show ([ca5ea03](https://github.com/scop/bash-completion/commit/ca5ea037e2ec1b0b5ec4d31295df88125d51b43e))\n* **ip:** Complete neigh show and flush ([c7c3c03](https://github.com/scop/bash-completion/commit/c7c3c039bf5a462ea577e8fcc92ebd94d6afad49))\n* **ip:** Complete stats subcommand ([cd73e8c](https://github.com/scop/bash-completion/commit/cd73e8c1689e3e014c4a75d5101ee3d932013120))\n* **ip:** Create function to get link types ([8e60245](https://github.com/scop/bash-completion/commit/8e60245c7531e1615dc96b032035bb4f59972f4a))\n* **rg:** add fallback 3rd party completion loader ([7e4cc2f](https://github.com/scop/bash-completion/commit/7e4cc2fb199f1c88bd9a358a157fe06327fc2b28))\n* **xmllint,xmlwf:** also suggest *.rss files ([a89cde2](https://github.com/scop/bash-completion/commit/a89cde2216b1634521b4a264b2dbc5cda7522061))\n\n\n### Bug Fixes\n\n* **available_interfaces:** fix regression of unwanted trailing colons ([c2f83e0](https://github.com/scop/bash-completion/commit/c2f83e0436208ef2bfa9c762bc28ff6374ba0c73))\n* **ip:** Complete addrlabel add/del properties ([ea07616](https://github.com/scop/bash-completion/commit/ea076166e9a5cce9d22a27e63f95bbf00be9b894))\n* **ip:** Complete ip delete with type correctly ([f3a9be3](https://github.com/scop/bash-completion/commit/f3a9be3e2f6eaf0d94bb66220fd02cf0e3c76481))\n* **ip:** Complete more variations of subcommands ([c8920c5](https://github.com/scop/bash-completion/commit/c8920c57f83199a14230485cc44b426f028acafb))\n* **ip:** Complete netns attach subcommand ([bfb1de6](https://github.com/scop/bash-completion/commit/bfb1de64a53d1eba749c9921cea3809460cd2319))\n* **ip:** Complete only relevant addrlabel subcmds ([05147f1](https://github.com/scop/bash-completion/commit/05147f19d3d04040fa8dacbd9e1705bfc1432073))\n* **ip:** Keep completing after -netns name ([1a5df4f](https://github.com/scop/bash-completion/commit/1a5df4fe22eb374424b18e7db27b8446e919f4b2))\n* **ip:** Quote all instantiation of ip as \"$1\" ([ef25163](https://github.com/scop/bash-completion/commit/ef25163e6bd9095e528b57d44cb31d32f0321bb9))\n* **ip:** Quote network namespace names ([216734b](https://github.com/scop/bash-completion/commit/216734bed7ba02655128bf1dbc2f184420ad69ef))\n* **Makefile:** include api-and-naming.md in dist ([fdd8048](https://github.com/scop/bash-completion/commit/fdd80487ba6944e639baf32ba991f8665840728d))\n\n## [2.12.0](https://github.com/scop/bash-completion/compare/v2.11.0...2.12.0) (2024-02-21)\n\n\n### Features\n\n* **_comp_backup_glob:** add `ucf` generated backup files ([351be1c](https://github.com/scop/bash-completion/commit/351be1c81ecd97135d3df64475a93d57526d5630))\n* **_comp_backup_glob:** require dash in dpkg backup files ([59a57f9](https://github.com/scop/bash-completion/commit/59a57f9f8c6a47dc9d21c61d13ffb90a5f3b82f0))\n* **_comp_compgen_{filedir,set}:** define exit status ([7920c9d](https://github.com/scop/bash-completion/commit/7920c9dbe46bd5ad0a92e78b744f00ffe8b14e76))\n* **_comp_compgen_commands:** align return value with other compgens ([9d3362e](https://github.com/scop/bash-completion/commit/9d3362e4a092efaecda2fa2a5f01feca75e7b24e))\n* **_comp_compgen_commands:** auto set `-o filenames` when appropriate ([4d4839e](https://github.com/scop/bash-completion/commit/4d4839e50210de4d3a8780caa4b9d8ab44b8f86d))\n* **_comp_compgen_commands:** include dirs ([b9c7b5d](https://github.com/scop/bash-completion/commit/b9c7b5dc414c09d27a6b157d37bede70e662b91c))\n* **_comp_compgen_known_hosts:** return 2 on usage error ([43bb8f0](https://github.com/scop/bash-completion/commit/43bb8f03798811d95a3068a8a53d2eac9ad877b5))\n* **_comp_compgen:** support `-i cmd` and `-x cmd` ([39cc200](https://github.com/scop/bash-completion/commit/39cc200f9e6d9b03d1e76a924371f85304e786d5))\n* **_comp_compgen:** support `-U var` to unlocal var ([b603535](https://github.com/scop/bash-completion/commit/b60353508eb470515f1063a1e1a75bdf1fda730f))\n* **_comp_compgen:** support option -C ([6b3dfa5](https://github.com/scop/bash-completion/commit/6b3dfa529950f3bc51b8ead9323a82f65c5cfeb9))\n* **_comp_expand_glob:** fail when no paths are generated ([6b0a466](https://github.com/scop/bash-completion/commit/6b0a46644d587182c20f880755a821a7680753fe))\n* **_comp_get_fist_arg:** support \"-o GLOB\" to skip optargs ([0f14cc0](https://github.com/scop/bash-completion/commit/0f14cc030ebdb54f3d120d8cadc08651dad00624))\n* **_ip_addresses:** auto ltrim colon completions when appropriate ([ccdf953](https://github.com/scop/bash-completion/commit/ccdf953b7956d6fc65334e9049e157a3480a5cfa))\n* add _comp_compgen_split ([542bf73](https://github.com/scop/bash-completion/commit/542bf73f571312659293dac664bf257ef66fbfef))\n* add `_comp_locate_first_arg` ([0384bd5](https://github.com/scop/bash-completion/commit/0384bd51df3f68a3e065aeead4e921462fff6655))\n* **airflow:** add fallback 3rd party completion loader ([bf5550b](https://github.com/scop/bash-completion/commit/bf5550b5fc304ed956b6061221f173516408d82d))\n* **ansible*:** add fallback 3rd party completion loader ([5f8384e](https://github.com/scop/bash-completion/commit/5f8384ef71acd1dc6e214177e5bbe3b0b83ee976))\n* **apt-get:** prefer `apt-cache` in same dir as command ([a731bfd](https://github.com/scop/bash-completion/commit/a731bfd0acf77c7e5ec52315e3b470cffa177b4a))\n* **b2sum:** new completion ([cd985df](https://github.com/scop/bash-completion/commit/cd985df6d8e613fd5421066248db1c50dc1686bd))\n* **bash_completion:** add function _comp_compgen_ltrim_colon ([ce5889b](https://github.com/scop/bash-completion/commit/ce5889ba3b1364d9afe7096c6fa14d7c65d08cc6))\n* **black,blackd:** add fallback 3rd party completion loader ([47a1f05](https://github.com/scop/bash-completion/commit/47a1f05e75399d25dcf0281ae6f8ba363a82e6bc))\n* **carton:** support exec command completions ([0eb3a21](https://github.com/scop/bash-completion/commit/0eb3a21afdcd4c52966e0894f43f501dc3b727e3))\n* **chezmoi:** add 3rd-party completion loader (cobra) ([31baa69](https://github.com/scop/bash-completion/commit/31baa69954351a2d30047f707692d361646aea53))\n* **conda:** add 3rd-party completion loader (argcomplete) ([c0f5ba2](https://github.com/scop/bash-completion/commit/c0f5ba2e19abea70dcde4bf0aafe36de801b28c0))\n* **crc:** add 3rd-party completion loader (cobra) ([f10866e](https://github.com/scop/bash-completion/commit/f10866e1aaf810ae5cb29ccd5c1e8ac722d0f2ae))\n* **cz:** add fallback 3rd party completion loader ([b7ba70e](https://github.com/scop/bash-completion/commit/b7ba70e52e1e0f287c29b5d7362439dccd132e8b))\n* **dot:** support filename extension .gv ([be0010e](https://github.com/scop/bash-completion/commit/be0010e8517de89bf06bda02bdccacc51968136e))\n* **dprint:** add fallback 3rd party completion loader ([e201e0e](https://github.com/scop/bash-completion/commit/e201e0ee336e79c26bce2afc3f2b4f98d4fea12d))\n* **eog:** add missing extension .heif ([9e4a48f](https://github.com/scop/bash-completion/commit/9e4a48fdaa372a41e6ad5c7d021164394054aa97))\n* **eog:** associate with `*.avif` and `*.webp` ([#1005](https://github.com/scop/bash-completion/issues/1005)) ([f1c04b8](https://github.com/scop/bash-completion/commit/f1c04b816e1612acdac62605528d32b5d896916f))\n* **eog:** associate with `*.heic` and `*.jxl` ([20c9cea](https://github.com/scop/bash-completion/commit/20c9cea129e1f1e92045098ce7555a3f2add30e8))\n* **eog:** associate with `*.pbm` ([#1006](https://github.com/scop/bash-completion/issues/1006)) ([5472cc1](https://github.com/scop/bash-completion/commit/5472cc1fef9c60abf240bd8f4acf38dbdaabf1a1))\n* **feh:** associate with y4m and heic/heif/avif ([e252c73](https://github.com/scop/bash-completion/commit/e252c73ff2b92320dfabc9daf0d3f4ac15171e96))\n* **feh:** deassociate with avci/avcs ([af46f34](https://github.com/scop/bash-completion/commit/af46f3411acfbd28624f57ff6a7511148d1857f9))\n* **flask:** add fallback 3rd party completion loader ([3e0d00d](https://github.com/scop/bash-completion/commit/3e0d00d4ea55a200ea67196a6de841e8633fcad3))\n* **hash:** new completion ([#1013](https://github.com/scop/bash-completion/issues/1013)) ([4d0bffb](https://github.com/scop/bash-completion/commit/4d0bffb791c34c96114aeb2e4f6726b80aa8698e))\n* **httpx:** add fallback 3rd party completion loader ([3f4861c](https://github.com/scop/bash-completion/commit/3f4861cc41ea05982b2c4a98cc1f56f21895419b))\n* **ip:** Add completion for monitor subcommand ([fa696e6](https://github.com/scop/bash-completion/commit/fa696e60f3fe525a14bfbb409effb4e51b2e4450))\n* **jungle:** add fallback 3rd-party completion loader ([c69845a](https://github.com/scop/bash-completion/commit/c69845abf7efe9c226cef46ebf8b9129058db43d))\n* **keyring:** add fallback 3rd party completion loader ([8082602](https://github.com/scop/bash-completion/commit/80826028b7760409f20624a6fb4f4c5a4eaec8e3))\n* **kontena:** add fallback 3rd-party completion loader ([5eef0ce](https://github.com/scop/bash-completion/commit/5eef0ce3e5bd29f32d5830abfaf60da1295c4562))\n* **lefthook:** add fallback 3rd party completion loader ([dc9650e](https://github.com/scop/bash-completion/commit/dc9650e917d2018fa9eeb251e2c3db2b0f9d230a))\n* **mailman:** prefer `list_lists` in same dir as command ([a46ccf1](https://github.com/scop/bash-completion/commit/a46ccf132d53f4f5adf5ad3b0e51ec1dde931298))\n* **mysql:** prefer `mysqlshow` from same dir ([643886c](https://github.com/scop/bash-completion/commit/643886cf3c34eef47a86fbc6c2a64712c455dad3))\n* no empty command completion if `no_empty_cmd_completion` is on ([faab292](https://github.com/scop/bash-completion/commit/faab29286074ec3c952dfe50f0cb22af65dadbeb))\n* **npm:** add fallback 3rd-party completion loader ([f1c085c](https://github.com/scop/bash-completion/commit/f1c085cc56cf15d2bd0c97148535e36e81dfc5d4))\n* **nvm:** add fallback 3rd-party completion loader ([dea7e1d](https://github.com/scop/bash-completion/commit/dea7e1d431f1700c2515ece47b07ba472e1f999c))\n* **oc:** add 3rd-party completion loader (cobra) ([26b5f09](https://github.com/scop/bash-completion/commit/26b5f09490159fd8fc6b7c592cb70c40e8b214dc))\n* **pip{,3}:** add fallback 3rd-party completion loader ([e3cbfba](https://github.com/scop/bash-completion/commit/e3cbfba64e6f52ee49c59052ef40eb4a11a48849))\n* **pipenv:** add fallback 3rd party completion loader ([#1020](https://github.com/scop/bash-completion/issues/1020)) ([6ecf5bd](https://github.com/scop/bash-completion/commit/6ecf5bdb3c534db894da60e336f58235547de80d))\n* **pytest:** complete new --import-mode value ([#1021](https://github.com/scop/bash-completion/issues/1021)) ([2d636a3](https://github.com/scop/bash-completion/commit/2d636a3cb4ee66b4bc3355fadff1a1e4246199d4))\n* **rtx:** add fallback 3rd party completion loader ([0628e22](https://github.com/scop/bash-completion/commit/0628e223689b7bad0b9dc43e56d935a66b73b8a2))\n* **scp,sftp:** prefer `ssh` from same dir to resolve options etc ([d55f5e6](https://github.com/scop/bash-completion/commit/d55f5e6a9e9fb53b02bb86a8fc6278e671099bb0))\n* **ssh-copy-id,ssh-keygen:** prefer `ssh` from same dir ([5c1d270](https://github.com/scop/bash-completion/commit/5c1d2701456e14fbe946ef7ccfecc7e10829b806))\n* **ssh-inscribe:** add fallback 3rd party completion loader ([7f2c197](https://github.com/scop/bash-completion/commit/7f2c197e4e59b313d0f47cde902f57145106660e))\n* **ssh:** complete RequiredRSASize ([#1064](https://github.com/scop/bash-completion/issues/1064)) ([de15205](https://github.com/scop/bash-completion/commit/de15205d6c7997e8596dce4f9d2a2bfc476be716))\n* **tkn-pac:** add 3rd-party completion loader (cobra) ([d0f2604](https://github.com/scop/bash-completion/commit/d0f26045937276427ebb9844e84f40cff1b928f4))\n* **tkn:** add 3rd-party completion loader (cobra) ([161fc5d](https://github.com/scop/bash-completion/commit/161fc5d42cd7dd814a9197f788045ca052062c22))\n* **xrandr:** comma separated `--setmonitor` third argument ([8a76f3d](https://github.com/scop/bash-completion/commit/8a76f3d75db290302f94ea732e01a9afd25c2c24))\n\n\n### Bug Fixes\n\n* **__load_completion:** quoted compspec for variants ([#1008](https://github.com/scop/bash-completion/issues/1008)) ([0a2443e](https://github.com/scop/bash-completion/commit/0a2443e3eec8557273dd905df9a28dc177861023))\n* **_cd_devices:** `/dev/cdc-*` CDC device false positives ([5250728](https://github.com/scop/bash-completion/commit/52507286a6ea8c576414d7cca0f6a2d30dd78c84))\n* **_comp__init_set_up_service_completions:** work around failglob ([2529d40](https://github.com/scop/bash-completion/commit/2529d40f22039b344fd0bb5280a8469b8783f2a9))\n* **_comp_{first_arg,count_args}:** count - as argument ([e23a79e](https://github.com/scop/bash-completion/commit/e23a79e0fd715b0ae564082d9f1e4e7a907a195d))\n* **_comp_{first_arg,count_args}:** count any arguments after -- ([9bfd760](https://github.com/scop/bash-completion/commit/9bfd760c1192da7b3d0d8f0f9c8bea8ed16f4e47))\n* **_comp_command_offset:** Support complete -C ([80450ca](https://github.com/scop/bash-completion/commit/80450ca06973535671dc76ffe5abd6e377418f76))\n* **_comp_compgen_fstypes:** avoid unexpected expansions ([a856d81](https://github.com/scop/bash-completion/commit/a856d811b73500550d317eff5fec487e41581add))\n* **_comp_compgen_help:** allow dots to connect names in longopt ([79dadfc](https://github.com/scop/bash-completion/commit/79dadfc7fa37be26c7b263b809687db0907ae71f))\n* **_comp_compgen_known_hosts:** work around bash-4.2 nounset ([d2860cb](https://github.com/scop/bash-completion/commit/d2860cb481be8f3cf97172cb1bf063da8f238e53))\n* **_comp_compgen_split:** work around nounset ([f488f96](https://github.com/scop/bash-completion/commit/f488f9615a58140dc610bf2d406f3fcf6b8d82da))\n* **_comp_compgen_term:** replace completions by default ([d3696a3](https://github.com/scop/bash-completion/commit/d3696a3f793b2e0b9a0940287b3ab3dd23ef247d))\n* **_comp_compgen_usergroup:** avoid directly overwriting COMPREPLY ([d380498](https://github.com/scop/bash-completion/commit/d3804982650ec4fc7fbb7f7cab5522709b43f52d))\n* **_comp_compgen:** do not inherit -a for explicitly specified var ([3c20766](https://github.com/scop/bash-completion/commit/3c20766a6248aec000eb55731dd6b159ecf45dc2))\n* **_comp_compgen:** explicitly exclude `cur` from the target variable ([5fe98f3](https://github.com/scop/bash-completion/commit/5fe98f3c30fa69d0921703c7c90522a28bb00737))\n* **_comp_count_args:** check optarg correctly ([874c503](https://github.com/scop/bash-completion/commit/874c5031986e23a3ca7843d216d7dde94b0f1d4b))\n* **_comp_count_args:** exclude &lt;&gt;& from wordbreaks as _comp_initialize ([521d2bb](https://github.com/scop/bash-completion/commit/521d2bb5330de4a721ae20d37d330190aa4beef0))\n* **_comp_count_args:** ignore empty $3 ([76eea74](https://github.com/scop/bash-completion/commit/76eea74581d4f404e817f686ea86236c8c75a9fc))\n* **_comp_count_args:** perform optarg check also on $3 ([21d3122](https://github.com/scop/bash-completion/commit/21d3122fa933169849e9743212248c80b7843abb))\n* **_comp_count_args:** skip reassembling cword and words ([3127703](https://github.com/scop/bash-completion/commit/3127703f12f3e82ddf3f950a801ab430024aca22))\n* **_comp_delimited:** treat delimiter as a fixed string ([571a0f7](https://github.com/scop/bash-completion/commit/571a0f70f39fed70b2db51e1624b2a0ee29f00c4))\n* **_comp_deprecate_func:** argument order in usage error message ([597f62f](https://github.com/scop/bash-completion/commit/597f62fe38627452f5330d40bc9004f2b3d4dda5))\n* **_comp_get_words:** empty prev if unavailable (localvar_inherit) ([d8b8eef](https://github.com/scop/bash-completion/commit/d8b8eef63602cb0e34837320938b0819363d7d87))\n* **_comp_initialize:** fix completions of redirections without space ([da16bf6](https://github.com/scop/bash-completion/commit/da16bf61c2604ea4efa9b2d125aedd2dd4acd4e5))\n* **_comp_initialize:** protect against \"localvar_inherit\" ([0cc8d83](https://github.com/scop/bash-completion/commit/0cc8d833011c0763eb00939ad9a94d525d87bcea))\n* **_comp_split,_comp_compgen:** strip periods from error message ([b3b6a7c](https://github.com/scop/bash-completion/commit/b3b6a7cf2865b3591ab571dc2563d1980a822ac5))\n* **_comp_split:** update error message for the correct options ([3c4a89c](https://github.com/scop/bash-completion/commit/3c4a89ce48ca29c0c6461d12519bbf78bcc1ca02))\n* **_comp_sysvdirs:** work around nounset ([da26178](https://github.com/scop/bash-completion/commit/da26178b9c7eaf11711b451ae292a01bd423a80c))\n* **_filedir_xspec:** clean up unused variable `tmp` ([67f1189](https://github.com/scop/bash-completion/commit/67f11892351b710b9b3609e138a0a2c9248c4422))\n* **_get_cword_at_cursor,cvs:** quote array length ([201239c](https://github.com/scop/bash-completion/commit/201239cb597a3d7d0165a5e37a093f063fe700d1))\n* **_get_first_arg:** remove invalid doccomment ([eb40f56](https://github.com/scop/bash-completion/commit/eb40f566cc9e3c5a845a12caf0f4344dab2a0b2c))\n* **_known_hosts:** use array for `options` (work around SC2178,SC2179) ([743d0a9](https://github.com/scop/bash-completion/commit/743d0a9be714c516dce23415e3a5c5f81d5d7bea))\n* **_mock,rpm:** avoid icase flag `s/reg/rep/i` of GNU sed ([33c18ce](https://github.com/scop/bash-completion/commit/33c18ce90df153dabb89813d472dacf5a6259b92))\n* **_service:** quote word ([c2d7fb7](https://github.com/scop/bash-completion/commit/c2d7fb73844531ccb10576ddd905fb058e00c88e))\n* **_slackpkg:** do not scan after cword ([ecd1384](https://github.com/scop/bash-completion/commit/ecd13849f76966d9e15607bdd604972279bb9cd8))\n* **7z:** remove redundant `printf '%s\\n' \"...\"` ([20c2e32](https://github.com/scop/bash-completion/commit/20c2e322f8eb93240de73b62647e7ca2f7b8fa4f))\n* **ant:** work around custom IFS ([584e567](https://github.com/scop/bash-completion/commit/584e56748da32e8f17a713b14c23ea2b7c92a4dc))\n* **apt-cache:** check all the words ([84cfeda](https://github.com/scop/bash-completion/commit/84cfedabe958ad6f7cfc52525d79e9b801de4233))\n* **aptitude:** do not use non-POSIX BRE \\w ([cd8c870](https://github.com/scop/bash-completion/commit/cd8c8701b60f17f9aecc27482f64f121821085ee))\n* **aspell:** use `_comp_expand_glob` against unexpected splitting ([58d5176](https://github.com/scop/bash-completion/commit/58d5176cba8bb25fe5348aadef100c083afa992f))\n* **bash_completion:** remove some unnecessary `-a` to `_comp_compgen` ([636bb7c](https://github.com/scop/bash-completion/commit/636bb7c4062c3e410904769f1fde4f5b14a12afc))\n* **bts:** update functions to generators and fix variable conflicts ([7d2867c](https://github.com/scop/bash-completion/commit/7d2867c01527c3037579fe24da62cccfdfd1883e))\n* **carton:** remove a branch never happening ([cd063f9](https://github.com/scop/bash-completion/commit/cd063f9a40e4dc85e0a9de7ceeac019cdac57449))\n* **chgrp:** fix typo `_comp_compgen{d  =&gt; _}filedir` ([#1063](https://github.com/scop/bash-completion/issues/1063)) ([4c98ce5](https://github.com/scop/bash-completion/commit/4c98ce58b7686b9f23f14bf05e809d9cd1a5669c))\n* **compat:** find compat dir for prefix-install ([b6d06bc](https://github.com/scop/bash-completion/commit/b6d06bc47119fcfc47f10eed328ff54e95ddc14d))\n* **completions/*:** quote array assignments properly ([848aa41](https://github.com/scop/bash-completion/commit/848aa413273516529ccc163966f138ad3a6c53a0))\n* **completions/*:** scan until cword instead of ${#words[@]}-1 ([17e0cc3](https://github.com/scop/bash-completion/commit/17e0cc36fdb4c6543c7729419d6f736ee779db1f))\n* **completions/*:** work around localvar_inherit ([e3a871d](https://github.com/scop/bash-completion/commit/e3a871d2517f688d7fe7132f33e96669a71b6aa1))\n* **curl,koji:** use _comp_compgen_help ([f37f221](https://github.com/scop/bash-completion/commit/f37f221f3f191fec0d301815d276d830f6119186))\n* **curl,qemu:** avoid using POSIX character classes for mawk ([d60c530](https://github.com/scop/bash-completion/commit/d60c5306f918b370c74f5ba6d3100720be139ad6))\n* **curl:** colon handling for IPv6 address completions ([8508d1d](https://github.com/scop/bash-completion/commit/8508d1d8f6f3d50ac6fb45ec2eb0f05dcef8d817))\n* **cvs,mutt,pkg_delete:** quote prefix to remove for literal matching ([533903e](https://github.com/scop/bash-completion/commit/533903edd5d0752cb4b910c3bcc6d86a0e55d779))\n* **cvs:** avoid variable conflicts ([0d145c9](https://github.com/scop/bash-completion/commit/0d145c9f2852955848ca1855d9fae216ebbd78c3))\n* **dict:** nounset error when host/port not set ([57191e2](https://github.com/scop/bash-completion/commit/57191e2731eb307434c2f11813d7dea303458dce))\n* **dict:** protect splitting from custom IFS ([b31fe1e](https://github.com/scop/bash-completion/commit/b31fe1e3e1b3480d9dc6a469cae4e83ed204b382))\n* **dict:** work around bash-4.2 array nounset ([d76dd9e](https://github.com/scop/bash-completion/commit/d76dd9ea448b71e111763e8048df49dde797d85e))\n* **dict:** work around bash-4.3 `${v+\"$@\"}` with custom IFS ([cc21298](https://github.com/scop/bash-completion/commit/cc212983a2b2523e5b62e9735c6dff5f011bb80a))\n* **dmypy:** protect against \"localvar_inherit\" ([768ce65](https://github.com/scop/bash-completion/commit/768ce656099879ba1b81de04b75db11679791c47))\n* **dpkg-source:** filter completions by `cur` ([dbcef6e](https://github.com/scop/bash-completion/commit/dbcef6e37313b00f00ca65397be6a061b1af3bb8))\n* **filedir:** work around bash-4.2 `compgen -f -- \"''\"` ([c8bb123](https://github.com/scop/bash-completion/commit/c8bb123abc0c148bfa078cf8bfe01bafc5cf50ff))\n* fix problems with `set -o nounset` ([9c3e196](https://github.com/scop/bash-completion/commit/9c3e1961928248da8a6dd8e327c3860f71eb7dff))\n* **gdb:** fix regression that fails to generate command names ([ca8e240](https://github.com/scop/bash-completion/commit/ca8e2405ae49c927f9c9d312aa0efdde3d231bf2))\n* **gdb:** remove duplicate candidates ([532fc05](https://github.com/scop/bash-completion/commit/532fc05a73b415369ce1987463d82d791ee72dc0))\n* **gdb:** use POSIX-compatible find expression ([73938cd](https://github.com/scop/bash-completion/commit/73938cd857c3a7fa884e24be7216d1c5b12d5a1c))\n* **gdb:** work around bash 4.4 `${v+\"$@\"}` ([41236da](https://github.com/scop/bash-completion/commit/41236da411794133d08792df28207e2a77271c57))\n* **get_words:** work around bash-4.3 connected `${v+\"$@\"}` ([81affbd](https://github.com/scop/bash-completion/commit/81affbd999a24f796f79fb5c1eec80e88b3a98d8))\n* **getent:** check noargopts ([6143f25](https://github.com/scop/bash-completion/commit/6143f257f1593c319504c2627fe01b4c94e90a48))\n* **getent:** work around localvar_inherit ([a12f438](https://github.com/scop/bash-completion/commit/a12f438ebf93d7427d1b5df7056ace8ec67e890c))\n* **gzip,isort:** fix typo `_comp_com{gp =&gt; pg}en` ([462feb3](https://github.com/scop/bash-completion/commit/462feb34d3b49f70a2451cbf724d14e59bfd8e0a))\n* **iperf,puppet:** use \\{m,n\\} instead of \\? and \\+ for POSIX sed ([3f0322b](https://github.com/scop/bash-completion/commit/3f0322b73d98c177ede1973ad1b84e66ee593ca9))\n* **iperf:** work around failglob with backslash in bash-5.0 ([979f04f](https://github.com/scop/bash-completion/commit/979f04f67c76395e21f77b7945639f2eeaa3b37f))\n* **ip:** Remove non-existent route completion ([3b9ce4d](https://github.com/scop/bash-completion/commit/3b9ce4dc0ba0a14d1d390f0e83c7b7b53a26b5a5))\n* **isql:** work around nounset ([cb7007a](https://github.com/scop/bash-completion/commit/cb7007af225369e5872280411bb6871b55f274a5))\n* **java,kldload:** use `_comp_compgen` for filename-based mod names ([81adc6c](https://github.com/scop/bash-completion/commit/81adc6ce741f69e936dfb0e1e891c372341814f2))\n* **java:** localize `cur` ([ec0068d](https://github.com/scop/bash-completion/commit/ec0068d13f3c98551771e4ada4335f131c2f0cb4))\n* **kcov,povray:** quote array expansions to avoid extra processing ([215edab](https://github.com/scop/bash-completion/commit/215edabcceece2b53becc78cf88a24fb120db299))\n* **kldload,mplayer,mutt:** work around nounset ([5330fbe](https://github.com/scop/bash-completion/commit/5330fbeecdd490aa79f1cf7ce320e1b27a776d69))\n* **kldunload:** remove unused -X option ([35017d2](https://github.com/scop/bash-completion/commit/35017d25acee6830d4c30485a1b2cba2f12e00ed))\n* **known_hosts_real:** match `*.pub` instead of `*pub` ([470a644](https://github.com/scop/bash-completion/commit/470a644be3144d9fbd7d58d99d1c3fd73c773b9f))\n* **known_hosts_real:** use `_comp_expand_glob` to avoid failglob ([672215e](https://github.com/scop/bash-completion/commit/672215e010d5f78085caf61cecda620b4c67f4ae))\n* **known_hosts_real:** work around nounset ([07c619a](https://github.com/scop/bash-completion/commit/07c619a56950de1960312ae24411c27688e5aa1a))\n* **lilo,rpcdebug,slapt-{get,src}:** work around nounset ([cfc3eda](https://github.com/scop/bash-completion/commit/cfc3eda9575a8b0b48a531652875206db36957d5))\n* **lvm:** replace array slices with existing utility ([ea49840](https://github.com/scop/bash-completion/commit/ea498402ccf07eb1e4acef0ad40a7c188e567145))\n* **lvm:** update call to sub-command ([30494f7](https://github.com/scop/bash-completion/commit/30494f7b426c73b1a6a616f63d3510027c6fb02e))\n* **make:** handle multiple short options in skipping arguments ([24c80c9](https://github.com/scop/bash-completion/commit/24c80c91b7183ea5fcc9f2e7bc7ded303ea57d0a))\n* **make:** typo fix in a code comment ([e72cc82](https://github.com/scop/bash-completion/commit/e72cc826534a0ea9dc840546134c19962697c3a0))\n* **mdadm,update-alternatives:** fix leak variable ([14cd53b](https://github.com/scop/bash-completion/commit/14cd53bb38d0d0ef91bf82731e8946551f15023a))\n* **medusa:** filter completions by the current word `cur` ([f3ae706](https://github.com/scop/bash-completion/commit/f3ae706e114c4924416c50cca90473e6ce98ae20))\n* **mr:** avoid `${var/pat/$'...'}` for compat42 in bash &gt;= 4.3 ([b5ae5fa](https://github.com/scop/bash-completion/commit/b5ae5fada8b788885b0fd65cca34b85672f08189))\n* **mr:** exactly match command names ([800b103](https://github.com/scop/bash-completion/commit/800b10372e383124856c37b505d5dc9232eb1e45))\n* **mutt:** avoid unexpected word splitting ([3183e67](https://github.com/scop/bash-completion/commit/3183e67c72fcf5ba3d713de59a5d6898a9a64952))\n* **mutt:** fix use of regex in the glob context ([63924e6](https://github.com/scop/bash-completion/commit/63924e67527e5fa7698ac0610c7fd90c7ba36ecf))\n* **mutt:** rewrite ${cur/#!/X} to X${cur:1} against patsub_replacement ([6b8f82b](https://github.com/scop/bash-completion/commit/6b8f82b44e2308db66bc10e4f3529fe0ca5137e5))\n* **mutt:** use _comp_dequote for safe eval ([f98379d](https://github.com/scop/bash-completion/commit/f98379d33ee376df7a7f7de6fb85af8fffb469ee))\n* **openssl:** avoid variable conflicts ([a31906c](https://github.com/scop/bash-completion/commit/a31906cd2886b51e74d5d1bcbae3528a0f9f135b))\n* **openssl:** fix variable `i` leak ([83844b7](https://github.com/scop/bash-completion/commit/83844b7df11ad4ca02bb5da473fa4c5e8e3df80d))\n* **perl:** fix ineffective condition in an awk script ([302dc52](https://github.com/scop/bash-completion/commit/302dc52b9b02dc9a8fa9b1833012b3c4f96b6d7b))\n* **perl:** helper call regression from 01611dd3d ([b85263a](https://github.com/scop/bash-completion/commit/b85263a6de7f8e60f09489caac3f9a0d613e804f))\n* **pgrep:** do not rely on uncontrolled IFS ([99e38b2](https://github.com/scop/bash-completion/commit/99e38b27424a53f901ec274269f5646bb4b02850))\n* **portinstall:** use awk and _comp_compgen to filter completions ([791f56c](https://github.com/scop/bash-completion/commit/791f56c62656ba19c4db804b7ccf8c2e8ba1d55a))\n* **povray,sbopkg:** check filetype ([434eb08](https://github.com/scop/bash-completion/commit/434eb0853ed25c8730a38d5c3afbac170b397153))\n* **povray:** process each element against patsub_replacement ([0afc2e4](https://github.com/scop/bash-completion/commit/0afc2e4a5db45b569827ca3bbef90f70bc7e74f5))\n* **povray:** quote an argument properly ([0a240bd](https://github.com/scop/bash-completion/commit/0a240bd958a8aed9ef4251d0b223c42c60a77125))\n* **ps,ss:** avoid extra expansions by -W \"$(...)\" in _comp_delimited ([cb347cb](https://github.com/scop/bash-completion/commit/cb347cb208c5708e30aa3d847849aa6ce71ba814))\n* **pydoc:** specify -a to _comp_compgen_filedir ([34a91e9](https://github.com/scop/bash-completion/commit/34a91e9425992262913cbacf36706618a6f99bd4))\n* **pytest:** do not filter underscores from parsed option arg choices ([ea13241](https://github.com/scop/bash-completion/commit/ea13241b2aaa9361ba6d701aaadd8f4ce39dc28a))\n* **python:** avoid variable conflicts ([bef94c3](https://github.com/scop/bash-completion/commit/bef94c39b9fac23655c8b50181d7834869d72702))\n* **python:** complete filenames for script arguments ([#1018](https://github.com/scop/bash-completion/issues/1018)) ([397a49d](https://github.com/scop/bash-completion/commit/397a49d1c3a4faa5e15639d2852828f99b659bcc))\n* **python:** complete micropython and pyston script args consistently ([5b60ccc](https://github.com/scop/bash-completion/commit/5b60ccc1ee573637263bdaac070065af1406de4d))\n* **qdbus:** remove cur and all the rest arguments ([531b751](https://github.com/scop/bash-completion/commit/531b75142dc812a37b638de5c272c2356506fcc2))\n* replace \\s with [[:space:]] for POSIX sed/awk ([1989ba9](https://github.com/scop/bash-completion/commit/1989ba9ad3de5cf33da3c9623fa87be5194fac08))\n* **ri:** avoid interference on existing COMPREPLY ([0a9d931](https://github.com/scop/bash-completion/commit/0a9d9319d50db21e0ca0051c19b9b3375790d353))\n* **ri:** fix wrongly quoted options to compgen ([5248bbf](https://github.com/scop/bash-completion/commit/5248bbf475d275bd6fc743d62f6f7f3ab0c30a39))\n* **ri:** properly split methods ([910a5a0](https://github.com/scop/bash-completion/commit/910a5a07c0f43095134c97c6b10db9d05505c3ef))\n* **ri:** split classes using `_comp_split` ([c95baa1](https://github.com/scop/bash-completion/commit/c95baa12d7879c81967b6dc9df896255d3253781))\n* **ri:** work around localvar_inherit ([9d6ff68](https://github.com/scop/bash-completion/commit/9d6ff689f44a2e560cbb643607f87551e7a88190))\n* **sbopkg:** add `;` mandatory before `}` in POSIX sed ([b286d53](https://github.com/scop/bash-completion/commit/b286d53dec9e7fb5edb513afa8bd60f8c0e9b68c))\n* **sbopkg:** work around nounset ([9709bdf](https://github.com/scop/bash-completion/commit/9709bdf226996878760ad87759f0011ff8587a3b))\n* **scp:** `nounset` mode error on unknown suboption, bash 4.2 ([82ca8d9](https://github.com/scop/bash-completion/commit/82ca8d924c4514f6570861d97b1ed953cbf9fe11))\n* **ssh-copy-id:** call ssh, not -copy-id for suboption completion check ([473278f](https://github.com/scop/bash-completion/commit/473278faed2f6d7d894dc674e71d1cef41022b6c))\n* **ssh-keygen:** call ssh, not -keygen to resolve supported protocols ([d569ea2](https://github.com/scop/bash-completion/commit/d569ea26389824b73732157947193efaea5f4ba8))\n* **ssh-keygen:** first arg to ssh query for protocol versions ([8a0a71e](https://github.com/scop/bash-completion/commit/8a0a71e449b5458f89fbc55b0ab7d6f6bf6656e9))\n* **ssh:** avoid variable conflicts ([f2df91d](https://github.com/scop/bash-completion/commit/f2df91d378004780d5237ab89faea2d6789169c0))\n* **ssh:** fix wrong quoting inside compgen -W ([febb3b3](https://github.com/scop/bash-completion/commit/febb3b3257fca6402fc4c33c4de293bbf962580c))\n* **ssh:** remove -a of generators ([55c5c45](https://github.com/scop/bash-completion/commit/55c5c459387e54ecdc869121fa97242e92ab87a8))\n* **ssh:** remove unnecessary -a to _comp_compgen ([992f28e](https://github.com/scop/bash-completion/commit/992f28e73c82f3157e346845ba9e440b7f3d8f22))\n* **ssh:** resolve relative ssh_config Include correctly ([4ac86e8](https://github.com/scop/bash-completion/commit/4ac86e84e55e793ba468c8cb6111510c9831377b))\n* **ssh:** use `_comp_compgen` for `_comp_xfunc_ssh_identityfile` ([05e70ed](https://github.com/scop/bash-completion/commit/05e70ede40dc4b50cdeb67bfa8484af53d24f995))\n* **ssh:** work around bash-4.2 nounset ([4447f83](https://github.com/scop/bash-completion/commit/4447f83c5d72823f336e3eefab2e8e10e080711b))\n* **ssh:** work around bash-4.2 nounset ([d0695d0](https://github.com/scop/bash-completion/commit/d0695d0bc9d44d851d41b5c7e123ab6b95f29e81))\n* **sudo:** use $1 (sudo) as $root_command ([329ca0e](https://github.com/scop/bash-completion/commit/329ca0eefd540b78e5fc287c2a4a2e2afdbfb45d))\n* **svcadm:** fix ineffective IFS for splitting ([1fd456e](https://github.com/scop/bash-completion/commit/1fd456e7435b88811b82809dc5845ee53ff7aafb))\n* **svcadm:** use the first matching name as command ([1870d5e](https://github.com/scop/bash-completion/commit/1870d5e0a67650a67c19895aefaae79eb2d6d76e))\n* **sysbench:** fix extraction of test-name option ([cc246a1](https://github.com/scop/bash-completion/commit/cc246a1b7d0433996c99534f64e0363170ac00cd))\n* **timeout:** always treat word after duration as command ([0d0531b](https://github.com/scop/bash-completion/commit/0d0531b254b03510f5dfa422a4198c33b5becd54))\n* **tipc:** remove filtered-out elements ([75b36b2](https://github.com/scop/bash-completion/commit/75b36b20b57e67a253d0c2622e88ba84ccc3bc25))\n* **update-alternatives:** quote dirname ([1205ed1](https://github.com/scop/bash-completion/commit/1205ed1958fa914faa8ccec778079e3f0ea2945b))\n* **update-alternatives:** suppress error for non-existent directory ([adbdab8](https://github.com/scop/bash-completion/commit/adbdab8fb5620e208826256e66851a1343f09e75))\n* **update-alternatives:** work around localvar_inherit ([1d9e19c](https://github.com/scop/bash-completion/commit/1d9e19cd2ae3650aa81512dc2ab811a80c16ca33))\n* **upgradepkg:** use `_comp_compgen` for `_comp_cmd_upgradepkg` ([a0973d7](https://github.com/scop/bash-completion/commit/a0973d77e8a3706490e33ba0f807727250b95c0e))\n* use _comp_compgen_split to avoid extra expansions by -W \"$(...)\" ([49997d0](https://github.com/scop/bash-completion/commit/49997d0b2ff4fbbea37558570632e096d777ee54))\n* use `_comp_compgen_split` to split and filter words ([158b8ba](https://github.com/scop/bash-completion/commit/158b8ba1de91913108507ae163611a44ae4871b0))\n* use `_comp_compgen_split` while keeping filtering by $cur ([a00ee19](https://github.com/scop/bash-completion/commit/a00ee19962e78f51a12b83bb1b11b89dc7512b22))\n* use `_comp_compgen` for word list ([83f033f](https://github.com/scop/bash-completion/commit/83f033f798c0fefbc9f37149d3bd40b0f238eabc))\n* use `_comp_split` while keeping filtering by $cur ([509e642](https://github.com/scop/bash-completion/commit/509e642d42a696a5737c94dc296c69ed60a4dd3b))\n* use compgen -P prefix -W '\"${arr[@]}\"' against patsub_replacement ([45d036a](https://github.com/scop/bash-completion/commit/45d036ad804973a4b1916e818a73421435db444d))\n* use XPG4 awk in Solaris ([cdd6da9](https://github.com/scop/bash-completion/commit/cdd6da9c77c7c99cab0aed7b9d7a5e4c0c5e0c78))\n* **wol:** filter IP addresses by `cur` ([c3505c5](https://github.com/scop/bash-completion/commit/c3505c518f9d2695f678d82a1efcf35118af08ec))\n* **wtf:** quote array assignment ([44c1d12](https://github.com/scop/bash-completion/commit/44c1d1292fdb840640a848aab6b2827002477ee9))\n* **xfreerdp:** support the new form of the option /list:kbd ([d8cadfe](https://github.com/scop/bash-completion/commit/d8cadfea1036cb558f5c6f663843a19eaa3b5025))\n* **xfunc ssh identityfile:** localize change to cur ([76b5726](https://github.com/scop/bash-completion/commit/76b572650f224e2e3b85918944af0bc8dfb49952))\n\n\n### Performance Improvements\n\n* **_comp_count_args:** skip reinitializing cword and words ([29398ef](https://github.com/scop/bash-completion/commit/29398efab4dd06fceb7c94c5329c5002b14cb8b4))\n* **mutt:** return earlier on empty `cur` ([a244587](https://github.com/scop/bash-completion/commit/a244587e3c2d83bbef090438b329478da1896a4c))\n* **portinstall:** return earlier for -lLo and non-existent file ([395e463](https://github.com/scop/bash-completion/commit/395e463d7e22bfb8b8b9f8ce4884ff7a979b2e35))\n* **vncviewer:** set nocasematch inside subshell ([5ed0020](https://github.com/scop/bash-completion/commit/5ed0020f4ec39c5ff9994882cae9f04eb45e4ed7))\n\n## 2.11 (2020-07-25)\n\n* lilo: add -B and -E completions ([7dd16ad](https://www.github.com/scop/bash-completion/commit/7dd16adf6ae409ee76256ac8b73977e9a88e341e))\n* lilo: honor -C when completing labels ([5b12f1d](https://www.github.com/scop/bash-completion/commit/5b12f1d49bf036f99ccd97df2c3effee63fb04d8))\n* lilo: don't complete on commented out labels ([ad6a349](https://www.github.com/scop/bash-completion/commit/ad6a3496c3517534e5791334094cc23ec7f09437))\n* test/dnssec-keygen: allow more alternatives in algorithm completion ([0f80613](https://www.github.com/scop/bash-completion/commit/0f80613bd8a554c6aece24cf694a4ba9a11e57ba))\n* test/wol: don't fail MAC test if test system has /etc/ethers entries ([8130f87](https://www.github.com/scop/bash-completion/commit/8130f87b4e035e3b439ce2f06bdb6bb495288e15))\n* : complete commands when prefixed with a backslash ([1e029e8](https://www.github.com/scop/bash-completion/commit/1e029e81dc0a121f575d35c925cc878448feccc4))\n* ipcalc: new completion ([1307b7a](https://www.github.com/scop/bash-completion/commit/1307b7ae9f809aec4d1cda74a13878c1947eb095))\n* README.md: add introduction ([3e941a6](https://www.github.com/scop/bash-completion/commit/3e941a643097d080277af00924e34ef925c4c41f))\n* chromium-browser, firefox: complete on *.txt (#379) ([d705123](https://www.github.com/scop/bash-completion/commit/d7051234afee6cc164b59660dade18f34fb0d52f))\n* test/ipcalc: fix tests with busybox ipcalc ([ba3b2ea](https://www.github.com/scop/bash-completion/commit/ba3b2ea05632e07920c4670d0297af557ba717c5))\n* lilo: work around shellcheck false positive ([42dbeef](https://www.github.com/scop/bash-completion/commit/42dbeefb8a681e52f381218c2b69e586537ab6e4))\n* test: port remaining finger, sftp, ssh, and xhost cases to pytest+pexpect ([aab32df](https://www.github.com/scop/bash-completion/commit/aab32df7ec7a9bff6059560d58c0c7088a983bd4))\n* test: port some scp test cases to pytest+pexpect ([f4f365d](https://www.github.com/scop/bash-completion/commit/f4f365dd6c619b41f9947eb3e53a120fd5173cbe))\n* test: fix spurious hosts fixture failure without avahi-browse installed ([b2c12be](https://www.github.com/scop/bash-completion/commit/b2c12be995eb4cb9aea931abb5f8c90a9f96907c))\n* test: remove some no longer needed tcl/expect code ([f066c67](https://www.github.com/scop/bash-completion/commit/f066c676f2145acb4df84461ba75847af35d2e9f))\n* test: port some _known_hosts_real unit tests to pytest+pexpect ([30aefd3](https://www.github.com/scop/bash-completion/commit/30aefd3ee918d2a2c70d24eeb37e7c36004d3ea8))\n* test: host helper lint and usage fixes ([bd3d509](https://www.github.com/scop/bash-completion/commit/bd3d509f04fe6ca0ef9477293006fada716aebca))\n* cryptsetup: add luksChangeKey arg completion (#380) ([5bb526a](https://www.github.com/scop/bash-completion/commit/5bb526a0b6f1af02b32464879c71a1fd5a5e4104))\n* tsig-keygen: new completion ([399771d](https://www.github.com/scop/bash-completion/commit/399771d6f19d839069f0eb45001887a04231885e))\n* test/upgradepkg: port remaining test case to pytest+pexpect ([3a0e9c1](https://www.github.com/scop/bash-completion/commit/3a0e9c1e78d33571f272d327c7f4fbb8dca250d8))\n* test/tsig-keygen: require command for test_options ([9f0ae30](https://www.github.com/scop/bash-completion/commit/9f0ae306200cbf5cc6e62f72f77ea8a774ea41e3))\n* test/chown,sudo: parametrize special case test, improve xfail targeting ([2f34e86](https://www.github.com/scop/bash-completion/commit/2f34e86d988733515e21b3050d4f4ab603b9adc4))\n* test: remove some no longer needed old test suite code ([8b3007f](https://www.github.com/scop/bash-completion/commit/8b3007f7315e7313add3518599ce44c288c48aa6))\n* test/cd: convert remaining test case to pytest+pexpect ([c23c807](https://www.github.com/scop/bash-completion/commit/c23c8079fb1d78f03acb5c183b85264f6c9e06db))\n* test/cd: make dir_at_point produce better debuggable failures ([a6cfbcd](https://www.github.com/scop/bash-completion/commit/a6cfbcdc729a640b1b89af4cd4c8f3d713d51a47))\n* nmap: parse options from -h output ([e99577a](https://www.github.com/scop/bash-completion/commit/e99577a3e7f7c571a61074242ab21e0245bfe3dd))\n* nmap: handle options split on equals sign ([c51ccb7](https://www.github.com/scop/bash-completion/commit/c51ccb76d1f4fa08f1260e8d204d3622dce76f4e))\n* openssl: support getting digest list from more recent openssl versions ([fe90e2a](https://www.github.com/scop/bash-completion/commit/fe90e2aef9364d2361bdc9ae57f06690de52a596))\n* openssl: parse available options from $command -help ([9e03fc5](https://www.github.com/scop/bash-completion/commit/9e03fc5ca07ecc7cbb863b2affdd06f8bbf8b415))\n* openssl: complete -writerand with filenames ([548feef](https://www.github.com/scop/bash-completion/commit/548feef55be93a99c488e31051f524a0e4c5549b))\n* totem: reuse kaffeine completions (#372) ([e4d5eba](https://www.github.com/scop/bash-completion/commit/e4d5ebadf2a7ae61162defb7d6045fb8bff3f0da))\n* test/cd: remove unused import ([9a9f09f](https://www.github.com/scop/bash-completion/commit/9a9f09fd175b859b53c014137b8c91722ef158f1))\n* test/totem: add basic test case ([9c33f68](https://www.github.com/scop/bash-completion/commit/9c33f68a04e0ec6766cb224ab025efbd42ca54e7))\n* extra/make-changelog: run through black ([c85e5b1](https://www.github.com/scop/bash-completion/commit/c85e5b16aed3e49b2a3445e67b5143c305c37883))\n* : python type hint fixes and improvements ([d1dee07](https://www.github.com/scop/bash-completion/commit/d1dee0769275e68d39ef4c49983f4c7c89534b8f))\n* test: drop redundant black args from docker runs ([eedaa1c](https://www.github.com/scop/bash-completion/commit/eedaa1c56c09d00d39347d4b4b12c5a9d2920b1f))\n* pre-commit: add config with black, flake8, and mypy ([3b82089](https://www.github.com/scop/bash-completion/commit/3b8208985813bb424bc58a2d013eda08c50f7591))\n* test: install black for Python 3.6 too ([3f1d1ee](https://www.github.com/scop/bash-completion/commit/3f1d1ee9e41f1976181fb9f8b7a8039ee42f0219))\n* test: add flake8-bugbear ([1dddc81](https://www.github.com/scop/bash-completion/commit/1dddc81eb7363dfefde6f3b595efaa8d12e05691))\n* test: add isort to pre-commit, run it ([092d20a](https://www.github.com/scop/bash-completion/commit/092d20a8c592cc801cd7604e7a2f6907a787fbf2))\n* test: shellcheck tweaks ([e0c9c5e](https://www.github.com/scop/bash-completion/commit/e0c9c5e67ffb9d3f5c4076ffd667fb4a9b6dafbe))\n* test: run pre-commit in tools container ([0a5d616](https://www.github.com/scop/bash-completion/commit/0a5d61699c25dc13fc7eec0a18a9e1ff87411dbe))\n* jarsigner: complete on *.apk too (#386) ([64449ed](https://www.github.com/scop/bash-completion/commit/64449edf99377f66739c4ce51eeaec077687b52b))\n* python: support executables with minor version (#389) ([bd3eba8](https://www.github.com/scop/bash-completion/commit/bd3eba8182e9cc72d838ea655a8c2aa25a3272fc))\n* _known_hosts_real: check that ruptime is present before calling (#390) ([6217345](https://www.github.com/scop/bash-completion/commit/62173450aa686bed5431342410eb6edd21c33e6d))\n* ip: improve completion of route subcommands (#326) ([9982cc3](https://www.github.com/scop/bash-completion/commit/9982cc34d6ea684720f171dcdfa1a20a0b5a81e3))\n* test: fix CompletionResult.__eq__ UnboundLocalError ([0e1fe15](https://www.github.com/scop/bash-completion/commit/0e1fe15aa71cd4fafe571613f9a77b17b71fbcc6))\n* copyright: add 2020 ([0055238](https://www.github.com/scop/bash-completion/commit/00552386675b8589943dc50748ab00e272979796))\n* printenv: new completion ([014b3f2](https://www.github.com/scop/bash-completion/commit/014b3f2a0e13e87f25f31fd0ccacbf09ba3bcec2))\n* _xinetd_services: look up from $BASHCOMP_XINETDDIR, add some unit tests ([ea1cfa1](https://www.github.com/scop/bash-completion/commit/ea1cfa1da4cd793f66e298dadc9b5b5a916d5a63))\n* test: ignore flake8 messages that are in black's domain ([6dae998](https://www.github.com/scop/bash-completion/commit/6dae998a9e8870fff5f9511383c5becc8005e7b1))\n* test: move shellcheck to pre-commit ([e908d02](https://www.github.com/scop/bash-completion/commit/e908d02129cf641784fcd14f0e3105bf573aaed3))\n* test: move perltidy to pre-commit, run with --converge ([15aacc9](https://www.github.com/scop/bash-completion/commit/15aacc96cb1c767f162836b121d18d7ecc744a55))\n* test: require openssl command for option argument tests ([4c64a1b](https://www.github.com/scop/bash-completion/commit/4c64a1bd293b6fe1b5ed182ac8306ed2036b2603))\n* git: trigger docker rebuild on pre-commit config change ([ffc5adf](https://www.github.com/scop/bash-completion/commit/ffc5adfb8f1d312bfc77664dc3144289e978d0ae))\n* test: split dependencies requiring Python 3.6.1+ to requirements-dev.txt ([009bf22](https://www.github.com/scop/bash-completion/commit/009bf2228c68894629eb6fd17b3dc0f1f6d67615))\n* test: upgrade mypy to 0.770 ([383cbad](https://www.github.com/scop/bash-completion/commit/383cbad64934208df355cb5c1d6f29026b3f3ebe))\n* printenv: indentation fixes ([3ac9f0a](https://www.github.com/scop/bash-completion/commit/3ac9f0a24331d0768ce16bdce4977694f037ed1e))\n* test/printenv: require command for arg completion test ([afc9052](https://www.github.com/scop/bash-completion/commit/afc9052be4990f41675766935933e95a2f8f9a20))\n* test/ldd: xfail if --help is not implemented ([71b465a](https://www.github.com/scop/bash-completion/commit/71b465a89801e60fc9c5172004e0d92353999adc))\n* test/python: add testcase for submodule completion ([900824d](https://www.github.com/scop/bash-completion/commit/900824d9162b42399c17331cbbcfe6bce56665b4))\n* pre-commit: run most python checks on helpers/python too ([5ed40e0](https://www.github.com/scop/bash-completion/commit/5ed40e089f5e5f33a125dc145f6d678fef0584ca))\n* lintian: complete paths for Ubuntu's .ddeb and Debian's buildinfo files (#397) ([0988831](https://www.github.com/scop/bash-completion/commit/0988831a7a4fea73e5d61e64dd657d69779cf8e3))\n* ip: add support for netns (#391) ([a2ccfa6](https://www.github.com/scop/bash-completion/commit/a2ccfa6bb0438cdb88ef1e551448e839bf70f99f))\n* apt-get etc: use _apt_cache_packages from apt-cache ([d90fbe3](https://www.github.com/scop/bash-completion/commit/d90fbe3bfd7e53c365897fa584edc9d2d0a2e9bf))\n* : whitespace tweaks ([3c87811](https://www.github.com/scop/bash-completion/commit/3c87811d8917852a132771e5c92b1e76886e493e))\n* : argument interaction improvements ([ec6995c](https://www.github.com/scop/bash-completion/commit/ec6995cadc3ab24246e363b4cbc2452091cd4d28))\n* test/aptitude: add some test cases ([762ee12](https://www.github.com/scop/bash-completion/commit/762ee12d24db419f02fc026e063962dde82e7275))\n* aptitude: parse options list from --help, hardcode less ([27219f8](https://www.github.com/scop/bash-completion/commit/27219f8e76970e7780062d6746ab609792bb7e3d))\n* aptitude: add some option arg (non)completions ([826b333](https://www.github.com/scop/bash-completion/commit/826b3336cfa25696b0886908609c29f87a37f8e4))\n* crontab, wodim: silence shellcheck SC2191 and SC2192 ([e81f690](https://www.github.com/scop/bash-completion/commit/e81f6908ffbbe8477f636e5ca68ffda0748c12de))\n* bash_completion: address shellcheck SC2220 ([a167497](https://www.github.com/scop/bash-completion/commit/a167497e3ea2136b51e62cb04851cb3178f9c332))\n* : address shellcheck SC2221 and SC2222 ([365fa76](https://www.github.com/scop/bash-completion/commit/365fa76e2b587bd6c9c39154433b9ced38fe091d))\n* smartctl: hush shellcheck SC2054 false positives ([0ad46d6](https://www.github.com/scop/bash-completion/commit/0ad46d6042d6dec1b28f3212551d668a1febe8d4))\n* mplayer: address shellcheck SC1078 false positive ([a6e5e99](https://www.github.com/scop/bash-completion/commit/a6e5e9953ee275b67aae8a1f34e3fdc3fa340e38))\n* java, pkgadd, sysbench: address shellcheck SC2124 ([5757fd4](https://www.github.com/scop/bash-completion/commit/5757fd4a3693da792f61ff600a0072218b4162dd))\n* chronyc, wvdial: address shellcheck SC2178 ([cddf99a](https://www.github.com/scop/bash-completion/commit/cddf99a63b9bd4d561691299a3eb04aa56e60fa1))\n* pkgadd: indentation fix ([523387e](https://www.github.com/scop/bash-completion/commit/523387e2891cf17dbf79767d0ee521c6946af46c))\n* sysbench: add --test= deprecation TODO ([9caf5c9](https://www.github.com/scop/bash-completion/commit/9caf5c99b64803be50d15421460978bfe33a85be))\n* protoc: complete all --*_out without more specific handling with dirs ([a10adf2](https://www.github.com/scop/bash-completion/commit/a10adf25a75bab2d9cd1eb5805e73d12149cb287))\n* test: don't run shellcheck on completions/.gitignore ([3f0d77f](https://www.github.com/scop/bash-completion/commit/3f0d77f079901c080d10cc2331c6def42648278e))\n* _known_hosts_real, op: address shellcheck SC2184 ([7fdd0a5](https://www.github.com/scop/bash-completion/commit/7fdd0a5582a0830d02575e290133b26f089c24e2))\n* test/aptitude: require command where necessary ([72a59a6](https://www.github.com/scop/bash-completion/commit/72a59a6a604a3fba297484732bc3eac66a702969))\n* test/printenv: xfail if --help doesn't contain options (e.g. busybox) ([2eccac4](https://www.github.com/scop/bash-completion/commit/2eccac4327e835f4ea553fe0fadf2f6103c24055))\n* insmod, modinfo, modprobe: support xz compressed modules (#401) ([2c6a522](https://www.github.com/scop/bash-completion/commit/2c6a52236026a8e3307faca7b897ae368489391d))\n* test: upgrade shellcheck to 0.7.1 ([6af1710](https://www.github.com/scop/bash-completion/commit/6af1710fcbf8ec1108a394a7d611394590957911))\n* quote_readline: fix $ret leak ([3f340bf](https://www.github.com/scop/bash-completion/commit/3f340bf8d7f63f86987a3c947db272ccd296487e))\n* info, java: address shellcheck SC2153 ([460f1b1](https://www.github.com/scop/bash-completion/commit/460f1b105f7ea3e6b26016cf61d6449c6b504c12))\n* man, perl, route, tipc: address shellcheck SC2053 ([0fcfa65](https://www.github.com/scop/bash-completion/commit/0fcfa6592bf6d4085c1e37f6d0dd00510c805a1f))\n* tipc: comment grammar and spelling fixes ([22b015e](https://www.github.com/scop/bash-completion/commit/22b015ec167cfe9cb8da1fc399067dc2d0a55f71))\n* renice: address shellcheck SC2254 ([5f25641](https://www.github.com/scop/bash-completion/commit/5f2564100ed436d4eb2dc7a664a2706304e80b66))\n* test/run: address shellcheck SC2164 ([49ac2d9](https://www.github.com/scop/bash-completion/commit/49ac2d9ffcc8cc2c58984ae1e38f360478ea80ed))\n* _upvar, _upvars, _variables, rpm: address shellcheck SC1083 ([e043fac](https://www.github.com/scop/bash-completion/commit/e043fac649b50c7c0e5d0a8d49ce8bd93a139322))\n* mutt: address shellcheck SC2088 ([2404e97](https://www.github.com/scop/bash-completion/commit/2404e9755aaba02bd11471f9a6bd3f11ce3a4386))\n* ssh: add new -Q completions in OpenSSH 8.2p1 (#400) ([a5890aa](https://www.github.com/scop/bash-completion/commit/a5890aa5e29e0f1cd1500df4758d7883dd55f2f5))\n* cvs, modprobe, sh: address shellcheck SC2209 ([f894bc1](https://www.github.com/scop/bash-completion/commit/f894bc19b770d83b91612219016674aed6546604))\n* rpm, ssh, umount.linux: address shellcheck SC2120 ([d7381be](https://www.github.com/scop/bash-completion/commit/d7381be935d96244838b0a3a603639d95a0e6564))\n* _filedir_xspec: address shellcheck SC2140 ([198d3f7](https://www.github.com/scop/bash-completion/commit/198d3f71fc09f11519321b9561c31b1ef796e7dd))\n* scp: address shellcheck SC2089 and SC2090 ([c906aeb](https://www.github.com/scop/bash-completion/commit/c906aeb76cae276b04d8cbe25f80a986fec42018))\n* java, pkgadd, sysbench: address shellchec SC2124 ([34e5e6a](https://www.github.com/scop/bash-completion/commit/34e5e6a0ad9d29b4f91e93a6952050e88c5ad2a6))\n* test/lib/library.sh: address shellcheck SC2125 ([bef80ef](https://www.github.com/scop/bash-completion/commit/bef80ef624c3d7101b3661895958365f71b890a8))\n* : address shellcheck SC2046 ([1d3add4](https://www.github.com/scop/bash-completion/commit/1d3add44563e48be7a6ec6cbd4cc8bb9e27d44f0))\n* test: bump shellcheck severity to warning + some disables ([a6cd66c](https://www.github.com/scop/bash-completion/commit/a6cd66cc4b0dcf8f36e788b0ecdb637c72f0118e))\n* test: tolerate duplicates from compgen actions ([bbd6814](https://www.github.com/scop/bash-completion/commit/bbd68147a9eb829ddbae4ffed6523b69a076b6ed))\n* test/xfreerdp: skip xfreerdp kbd test if kbd-list returns empty ([9746a39](https://www.github.com/scop/bash-completion/commit/9746a39cbc2a1102c3bc9f7fff36ce36e8d05881))\n* test: make it possible to not care whether command did output or not ([1ef3ad4](https://www.github.com/scop/bash-completion/commit/1ef3ad487fb9f02b8cc641439b2049529fbdfb9e))\n* test: run skipif and xfail commands without caring if they output or not ([005ab9f](https://www.github.com/scop/bash-completion/commit/005ab9f0957f33f092d415f2ab2e1b3a3f501dfd))\n* pgrep, pkill: add --ns and --nslist arg completions ([e649ea1](https://www.github.com/scop/bash-completion/commit/e649ea16374bbacfdb84c3d9803211754f62bfc1))\n* pytest: complete test classes ([f4ac160](https://www.github.com/scop/bash-completion/commit/f4ac16016d005d91652226272e3d496ede8e5ca1))\n* pytest: add some option arg (non-)completions ([61e5d8d](https://www.github.com/scop/bash-completion/commit/61e5d8de7fcbc426c5a1e3f7f5dcda9510051eed))\n* test/cd: fix test_dir_at_point for setups that repeat \"trailer\" ([25b4f1d](https://www.github.com/scop/bash-completion/commit/25b4f1db77f2373f7a700998327e9d9d837da89a))\n* test: generalize complete at point test ([8314c75](https://www.github.com/scop/bash-completion/commit/8314c7576134d2a1ae948bc6f3e008e15d837886))\n* test/alias: port remaining test case to pytest+pexpect ([f81d313](https://www.github.com/scop/bash-completion/commit/f81d313138cb6ab0fd155089b3c7499d733c118b))\n* nmap: fix option parsing with BSD sed ([e712b2f](https://www.github.com/scop/bash-completion/commit/e712b2f932a4f000c75a417ab62f19532147ed52))\n* carton: fix command parsing with BSD sed ([1968b3a](https://www.github.com/scop/bash-completion/commit/1968b3ae59b20ea16fe0004ecff53831a1728467))\n* _filedir*: update link to bug-bash discussion on -X (#404) ([bfd65f3](https://www.github.com/scop/bash-completion/commit/bfd65f3be7af378d944a269e77cdf5d93aaac022))\n* openssl: update -starttls completions (#403) ([28df326](https://www.github.com/scop/bash-completion/commit/28df3269a994a33ccb8a7946a960ba26a97b6790))\n* : replace various conditional expressions with arithmetic evaluation ([2ad992a](https://www.github.com/scop/bash-completion/commit/2ad992a1bca79e0a9353afc32cbb59749f2f07c0))\n* bash_completion, invoke-rc.d, svcadm: trivial cleanups ([69a835a](https://www.github.com/scop/bash-completion/commit/69a835a335c8ecea7c8f0453097ab909838eef08))\n* : enable and address shellcheck SC2053 ([333d590](https://www.github.com/scop/bash-completion/commit/333d5908887e5133916b5987ce67ba65b6a5b343))\n* ssh-keygen: -s and -n completion improvements ([6666ebb](https://www.github.com/scop/bash-completion/commit/6666ebbb0d9934fd999937c10028f51295be5d28))\n* : array subscript cleanups ([13b5a4b](https://www.github.com/scop/bash-completion/commit/13b5a4bea8bae0d67d9286ef1d732c5dad1de685))\n* doc: recommend arithmetic evaluation ([5e5c83b](https://www.github.com/scop/bash-completion/commit/5e5c83b13808b2c29c0264284042998e4cc0816e))\n* test: remove shellcheck severity filter, add explicit disables instead ([fd19ea0](https://www.github.com/scop/bash-completion/commit/fd19ea00db362d9a33a6d4edd0d626b3da26a69c))\n* test: enable parallel pre-commit shellcheck ([48ab77e](https://www.github.com/scop/bash-completion/commit/48ab77e2ac5518ffbf8c6a2ce5b205da4b072c97))\n* __reassemble_comp_words_by_ref, java: address and work around shellcheck SC2102 ([dcf9f39](https://www.github.com/scop/bash-completion/commit/dcf9f3991d94804591fac1941587f04d3f19b4c0))\n* : more arithmetic evaluation cleanups, thanks to shellcheck SC2004 ([b147516](https://www.github.com/scop/bash-completion/commit/b147516b6081f451ace1e8172e6041029177536e))\n* bash_completion, java, tipc: for loop whitespace consistency tweaks ([3abbd23](https://www.github.com/scop/bash-completion/commit/3abbd23be045138a1d63ecdd27b5c0de9f5c1cd1))\n* pytest: address shellcheck SC2002 ([fe53ef2](https://www.github.com/scop/bash-completion/commit/fe53ef2ae8e3615c5a1186bfbc980f918b1d0c99))\n* wget: address shellcheck SC2116 ([091a7cd](https://www.github.com/scop/bash-completion/commit/091a7cde3deaeb7650e6972f5dda8c943cd1c120))\n* mutt: address shellchec SC2236 ([566c5f5](https://www.github.com/scop/bash-completion/commit/566c5f521d1d4cc3bdcba4b7555a4460d78aeebe))\n* scp: work around shellcheck SC1003 ([e1cbe8f](https://www.github.com/scop/bash-completion/commit/e1cbe8f6f0d097b51f9815dcf6729ac3abca526c))\n* ssh, xsltproc: address shellcheck SC2006 ([32421d1](https://www.github.com/scop/bash-completion/commit/32421d1d74a2915c227caa5c08457c0d7a9f18e6))\n* test: make at-point completion tests easier ([e9450b8](https://www.github.com/scop/bash-completion/commit/e9450b88c38921aa9dd297f56c99c055857c1952))\n* doc: add loop variable naming guideline ([a6a59e3](https://www.github.com/scop/bash-completion/commit/a6a59e32b8dd165f04409897641ba72d11d44e1d))\n* apt-cache: fix command mode handling ([c41b772](https://www.github.com/scop/bash-completion/commit/c41b772dcb4e31c8a6ee8d3052f3d2742d7a889d))\n* crontab: fix loop over already given args ([568c658](https://www.github.com/scop/bash-completion/commit/568c658c2c0ac6097f5332d4bfe23a9cf7b4de37))\n* : various loop iteration improvements ([911a432](https://www.github.com/scop/bash-completion/commit/911a4322cdc8eb393921b2a52efbab4e394e67e2))\n* : remove some unused variables, thanks to shellcheck SC2034 ([95f3bec](https://www.github.com/scop/bash-completion/commit/95f3bec3ba948fdb4f26673e008e4bfa990b96a0))\n* test: add perlcritic to pre-commit, run on all perl ([dd890cd](https://www.github.com/scop/bash-completion/commit/dd890cd30ddc617a10c7ff114bef13ff6485536b))\n* test: run pre-commit on host instead of docker ([b8c2a95](https://www.github.com/scop/bash-completion/commit/b8c2a95c5ed41088cd94d6ece044f37b941d8a2f))\n* make: add bmake alias ([6b42551](https://www.github.com/scop/bash-completion/commit/6b42551fa0166508b1ef6c28751ccdf5c7c49f32))\n* test/make: mark more cases as requiring command ([6354520](https://www.github.com/scop/bash-completion/commit/63545202952c970146eced87ae156f023f7306e4))\n* test: run lint tests on Travis in a quickish separate first stage ([e493f6a](https://www.github.com/scop/bash-completion/commit/e493f6a2f2ea596f373c9f31e91f44633f6f2d4a))\n* test: add script to maintain list of executables for full test coverage ([e0b9397](https://www.github.com/scop/bash-completion/commit/e0b93973acdc6f3938ecc1103971a8a0d18bf5ad))\n* extra: trigger docker builds only on test-cmd-list.txt changes ([85f3c73](https://www.github.com/scop/bash-completion/commit/85f3c737d97e5f420885d9b875de73d56035c78a))\n* find: fix -exec etc argument and its completion ([3e849c2](https://www.github.com/scop/bash-completion/commit/3e849c25ef9a2a2dc95c713085898a9547a70e18))\n* reportbug, scp, sftp, svn: use compgen -c instead of _command ([e73535f](https://www.github.com/scop/bash-completion/commit/e73535f72e0190c953211625dd71d73cfb2fa7e6))\n* _command: improve commentary ([2cf6b67](https://www.github.com/scop/bash-completion/commit/2cf6b670323ad0e914c5bed13122d2ee0cf07821))\n* ssh-keygen: option and arg completion updates for new versions ([edc4f9b](https://www.github.com/scop/bash-completion/commit/edc4f9b0390ae07c572a3186bdb9741a5be321de))\n* ssh-keygen: add -b arg completions according to specified -t ([69b477b](https://www.github.com/scop/bash-completion/commit/69b477bada9672fa5ec9079f42758a866e874180))\n* ssh-keygen: -O arg updates and improvements ([63e04ee](https://www.github.com/scop/bash-completion/commit/63e04ee86aeee5dc33a0e5d80c5e4e28692ac937))\n* README: clarify loading automatically on demand ([f5e831b](https://www.github.com/scop/bash-completion/commit/f5e831bb789094dc0293e61727b0319bb5714909))\n* pre-commit, *.md: add markdownlint, address findings ([43e958a](https://www.github.com/scop/bash-completion/commit/43e958a6db294367451190624a73e5f532fb6174))\n* : doc and comment link updates ([a234784](https://www.github.com/scop/bash-completion/commit/a234784b39e657be671f292c384395ed2fd64a75))\n* pre-commit: use local perlcritic hook ([a277345](https://www.github.com/scop/bash-completion/commit/a277345460a38206837e5e98380b30c39be89734))\n* editorconfig: apply yaml settings to .yaml too ([7af92f5](https://www.github.com/scop/bash-completion/commit/7af92f506c60c32eb95d4625e542e4e67d77eee9))\n* test: add note about unescaped assert_complete single return values ([663ac51](https://www.github.com/scop/bash-completion/commit/663ac5175fd46b790beff1ac5952551b0e211f90))\n* test: port most umount test cases to pytest+pexpect ([b621591](https://www.github.com/scop/bash-completion/commit/b6215914784096189db0ef4fd9d580a249a19675))\n* Source user completion only if it's a file (#409) ([78bf738](https://www.github.com/scop/bash-completion/commit/78bf738eb082f67080ec26b64444fd9116907743))\n* test: prefix fake test commands with underscore ([5351161](https://www.github.com/scop/bash-completion/commit/53511617f0ab972d0b6912990ebf0adc3eeffe9d))\n* nmap: simplify help scraping a bit, don't try to emit unnecessary newlines ([8db05b4](https://www.github.com/scop/bash-completion/commit/8db05b4d1c6de665a76c330b484279dc279dff27))\n* test: upgrade markdownlint to 0.23.0 ([5520dd4](https://www.github.com/scop/bash-completion/commit/5520dd4a20a7e849d24cf239a63a876e48dabc1b))\n* test: fix incorrect fixtures/shared/default xfails/expectations ([f0fe52c](https://www.github.com/scop/bash-completion/commit/f0fe52c923a5becc0556798ea892d2710aa9500c))\n* pre-commit etc: add shfmt ([08db11f](https://www.github.com/scop/bash-completion/commit/08db11f12a04516622948bb6c1ff8cc50001fb3a))\n* : run all shell code through shfmt -s ([dbe0ec8](https://www.github.com/scop/bash-completion/commit/dbe0ec8c1a8a36752d3b63b685add075f36ba113))\n* travis: use golang 1.14 for shfmt ([d34719a](https://www.github.com/scop/bash-completion/commit/d34719aa79f80578fe4be11ac859f348ae62ed02))\n* apt-get: complete build-dep with dirs ([e7ea033](https://www.github.com/scop/bash-completion/commit/e7ea033f1075a99898b4ef8c3a364bb7ba23ef62))\n* secret-tool: new completion ([e9a556f](https://www.github.com/scop/bash-completion/commit/e9a556f4a233250c6f05dfd0c5e9ae17a0ffd747))\n* test/umount: convert remaining test case to pytest+pexpect ([4514d3e](https://www.github.com/scop/bash-completion/commit/4514d3e7ef774c4bdfc4fe3f9acdf66def16c664))\n* test/scp: port remaining test case to pytest+pexpect ([12de472](https://www.github.com/scop/bash-completion/commit/12de47263b5a49ae8adab7fb1c85d3a2f42852e5))\n* test/secret-tool: add to test command list ([25c1c76](https://www.github.com/scop/bash-completion/commit/25c1c76030107cf918015856299f899bfa251e80))\n* test/slapt-get: convert remaining test case to pytest+pexpect ([033f548](https://www.github.com/scop/bash-completion/commit/033f5488bdec49f635b6e0ef13784698cdf8d190))\n* apt-cache: avoid nonzero exit code from _apt_cache_packages ([ea97386](https://www.github.com/scop/bash-completion/commit/ea973866fdbb4f8f72d4e87d090950795ef68a49))\n* _xfunc: simplify ([c0f6a6d](https://www.github.com/scop/bash-completion/commit/c0f6a6d09c88a23441a46c351eff25f23e64b528))\n* test/slapt-src: convert remaining test case to pytest+pexpect ([62b3dc6](https://www.github.com/scop/bash-completion/commit/62b3dc6dc2024eb2101bddcd468552d485c60a8c))\n* test: drop some no longer needed old test suite code ([2612750](https://www.github.com/scop/bash-completion/commit/2612750d2527865f432218770ccaa0e3dd398f71))\n* lftp: use \"bookmark list\" command to list bookmarks ([c198a94](https://www.github.com/scop/bash-completion/commit/c198a94029aa33cfbd4bd0586e1674859337c35c))\n* test: run pytest --verbose in docker ([ea0236e](https://www.github.com/scop/bash-completion/commit/ea0236e1e6b6ad2f0ffc402e4a1d4da6365014a3))\n* test/_get_comp_words_by_ref: convert remaining test cases to pytest+pexpect ([322420d](https://www.github.com/scop/bash-completion/commit/322420d50b894e786226987c40c6d559313058f9))\n* test/__expand_tilde_by_ref: port remaining test cases to pytest+pexpect ([d258b3c](https://www.github.com/scop/bash-completion/commit/d258b3ca8ab65fec4dfc6a14c4697212e09ad69c))\n* test/_filedir: port more test cases to pytest+pexpect ([54c732a](https://www.github.com/scop/bash-completion/commit/54c732a82066e1595d8dd153e992987ea87b54b6))\n* test: drop not needed sudo on Travis ([a9822bc](https://www.github.com/scop/bash-completion/commit/a9822bc79b997cfb985b1d8c91f9c3402adce232))\n* test: run all Travis jobs on dist: bionic ([9c0a307](https://www.github.com/scop/bash-completion/commit/9c0a30729ce5dd9954ad32dd226021b733b94abd))\n* test/_filedir: port remaining test cases to pytest+pexpect ([fb7fb46](https://www.github.com/scop/bash-completion/commit/fb7fb461362fd99cf21de40821793c8a38bf6c56))\n* test: drop some no longer needed old test suite code ([4543212](https://www.github.com/scop/bash-completion/commit/4543212a52e9d569017013e1365e9d969683fb49))\n* test/_expand: port remaining test cases to pytest+pexpect ([db481c6](https://www.github.com/scop/bash-completion/commit/db481c67fd8ea17036bd432c7e41dbe578a274e4))\n* test/_filedir: fix shutil.rmtree on Python < 3.6 ([febf177](https://www.github.com/scop/bash-completion/commit/febf177e84162199394f71704cbcf58ce1dbefd3))\n* test: replace some echos with printfs ([bcdf00c](https://www.github.com/scop/bash-completion/commit/bcdf00ce3cec4e6f43521d6d24d75e4574f59b66))\n* test/_get_cword: port remaining test case to pytest+pexpect ([80ac63e](https://www.github.com/scop/bash-completion/commit/80ac63efbb3b4677514b900ba936d7af2d2c8eb9))\n* test/_known_hosts_real: port more test cases to pytest+pexpect ([5c7bb2d](https://www.github.com/scop/bash-completion/commit/5c7bb2d72c03ad28f700e82b8ca1aeaa4528fedd))\n* test: remove more no longer needed old test suite code ([b1a4de9](https://www.github.com/scop/bash-completion/commit/b1a4de9aee916b622889c28a61812092c4d76b9b))\n* test/_known_hosts_real: port remaining test cases to pytest+pexpect ([21d4fba](https://www.github.com/scop/bash-completion/commit/21d4fba9d75860454bc0c869f63d66c6cd66bca6))\n* test: remove old test suite code no longer used \\o/ ([5afc3b5](https://www.github.com/scop/bash-completion/commit/5afc3b558f7651a4a0854fdd9ac0a4580876fd33))\n* test: remove unused run-shellcheck, shellcheck is in pre-commit now ([76aa130](https://www.github.com/scop/bash-completion/commit/76aa130483d6da9761715b89ce750eebed3a95b0))\n* test: shfmt bashrc ([ead40fa](https://www.github.com/scop/bash-completion/commit/ead40fab3e8e09833b632a6c1c0b828b92ae4ecb))\n* test: sync shfmt and shellcheck configs ([c21e0e1](https://www.github.com/scop/bash-completion/commit/c21e0e11025fa2117417d5ddcbe65a7edd116fe3))\n* test: upgrade pre-commit to 2.4.0+, drop shfmt kludge ([8af206f](https://www.github.com/scop/bash-completion/commit/8af206f45ad801c47e9e79060a0fbad033cd1d89))\n* test: pre-commit config cleanups, ordering ([b4eadfd](https://www.github.com/scop/bash-completion/commit/b4eadfd4b401f15acaab714c363cb0a7ee7bcf8c))\n* test: upgrade flake8 to 3.8.1 ([1f27374](https://www.github.com/scop/bash-completion/commit/1f27374d45e7062e6a74a0046bba289eda02f75a))\n* test/irb: xfail options test if --help is not available ([f5ea515](https://www.github.com/scop/bash-completion/commit/f5ea515f07ec2cbbbc63262d1f053327a9d466ae))\n* : use $ifs for storing/restoring $IFS ([acc43ed](https://www.github.com/scop/bash-completion/commit/acc43edf81c7eaf8b3556453a7cfc4b0104975cd))\n* test: try harder to restore environment and cwd on failures ([f0bf00a](https://www.github.com/scop/bash-completion/commit/f0bf00a53677285600cdf8d82e754abb7f0e0644))\n* : use more arithmetic evaluation ([328ce5b](https://www.github.com/scop/bash-completion/commit/328ce5be5b4b8822b3b9421dab4460c56990df0b))\n* test: upgrade markdownlint-cli to 0.23.1 ([2255f2a](https://www.github.com/scop/bash-completion/commit/2255f2a8577cf7d48b5572d84a6900d9ffdef75e))\n* dpkg-deb: fix --show/-W completion ([2eee0b5](https://www.github.com/scop/bash-completion/commit/2eee0b5063ae3fd8d48594bc03d2f5a9e4678ce5))\n* test: add some dpkg-query test cases ([034bdee](https://www.github.com/scop/bash-completion/commit/034bdeec06f36c12d3cbf927ca293eee321817f0))\n* dpkg-deb: add --raw-extract and -X arg completions ([69198c0](https://www.github.com/scop/bash-completion/commit/69198c0c4ef9830de1ea25d0b5c713adef8b5987))\n* test: mark known non-ASCII issues with test suite as xfail ([106e825](https://www.github.com/scop/bash-completion/commit/106e825a7f3b07c6c4d59f0b9c4e66bfa48a870f))\n* test/mr: handle missing \"clean\" with skipif ([eb93dde](https://www.github.com/scop/bash-completion/commit/eb93dde7304ee62e20d54cba003639b46bd18119))\n* mr: avoid herestrings, simplify command parsing ([cf64492](https://www.github.com/scop/bash-completion/commit/cf6449226350987f8d0d3ff3d329ca31c19cbcac))\n* _bashcomp_try_faketty: new function to try running command with a fake tty ([3829fe9](https://www.github.com/scop/bash-completion/commit/3829fe95d6583cc9eebc1abae1e553dedacd8cd5))\n* postfix: try to arrange a fake tty so we can tickle the usage message out ([7aea619](https://www.github.com/scop/bash-completion/commit/7aea619b1b4563f6a5a55877aeeea009e71cfd87))\n* 7z: fix -o/-w attached arg completion ([54774d6](https://www.github.com/scop/bash-completion/commit/54774d610323daff29e4cd00d5bcce23b714513f))\n* __reassemble_comp_words_by_ref: avoid triggering nounset on indirect references ([0b0323c](https://www.github.com/scop/bash-completion/commit/0b0323c514276c0143568b9e03646b65ee57e788))\n* bash_completion: line wrapping tweaks, NFC ([1d1d308](https://www.github.com/scop/bash-completion/commit/1d1d308d1f15e3ab2794c14ed54206cc56b96655))\n* test/unit: include test_unit_known_hosts_real.py in dist ([fdc9fc9](https://www.github.com/scop/bash-completion/commit/fdc9fc9b231c084c6e8de32587ec6a746898ce39))\n* test/unit: sort files included in dist ([d8f309f](https://www.github.com/scop/bash-completion/commit/d8f309f9fa8cb57067c6ef559269ea1eb3f9d98a))\n* : avoid more errors in nounset mode ([3687d27](https://www.github.com/scop/bash-completion/commit/3687d27f1ac266fa784dacc4492f0c554ed3091c))\n* test/inputrc: comment and whitespace tweaks ([1293d7c](https://www.github.com/scop/bash-completion/commit/1293d7c7258ef93c131e0e0d546064593610e731))\n* : avoid more errors in nounset mode ([b807460](https://www.github.com/scop/bash-completion/commit/b807460140aa6dda09eb2af2ecf3afa1971c84c4))\n* : avoid more errors in nounset mode ([d0a0eb5](https://www.github.com/scop/bash-completion/commit/d0a0eb5979d2831174b50e541d97559ac30d7d73))\n* : avoid more errors in nounset mode ([505fb2c](https://www.github.com/scop/bash-completion/commit/505fb2c68e38c9071542ff30fbafdab7ddc6f363))\n* : mark nounset mode as supported, issues with it are bugs now ([e85a361](https://www.github.com/scop/bash-completion/commit/e85a361199f02f3818312ba149dc64bf2c920d7a))\n* test: skip various tests if we don't get a useful usage message ([6f12de6](https://www.github.com/scop/bash-completion/commit/6f12de60230b85fbdd004c69be23be1bc9798767))\n* test/runLint: warn about [ ] instead of [[ ]] use ([f6f49db](https://www.github.com/scop/bash-completion/commit/f6f49db9175eb1ee5521bcb59ac6747bebaf1f28))\n* modprobe, tshark, _included_ssh_config_files: use [[ ]] instead of [ ] ([50ad3f8](https://www.github.com/scop/bash-completion/commit/50ad3f8d91a2782b5d10dc177e98f2ec06171e20))\n* scp, sftp, ssh: fix completion on options bundled with -4/-6 ([b4490f2](https://www.github.com/scop/bash-completion/commit/b4490f238ed534ce9084614a3580656e4cf759f6))\n* _pids, _pgids, _pnames: improve shfmt formatting ([2bfb0a7](https://www.github.com/scop/bash-completion/commit/2bfb0a7e22ca94624e13df5876fe80acc7017f1b))\n* _filedir: avoid unbound variable error on Ubuntu 14 and 16 ([ac37d77](https://www.github.com/scop/bash-completion/commit/ac37d77db99425aaa9d71fe9215e98623378a4b1))\n* ip: add more completions for ip-rule ([426d07e](https://www.github.com/scop/bash-completion/commit/426d07e33ce5379ce4fc7726c140ca3b8c7c7575))\n* ip: style fixes similar to ip-netns ([75093c0](https://www.github.com/scop/bash-completion/commit/75093c018a5dee8db1d7a97f42b0cc2c0902ef3e))\n* ip: route shfmt, arithmetic evaluation ([a1fe69a](https://www.github.com/scop/bash-completion/commit/a1fe69adf7d476984a3498e8c1616d84e9b694f1))\n* ip: complete route add table arg ([e4ad602](https://www.github.com/scop/bash-completion/commit/e4ad602f483f3574fd8630bfcd82bd88ef6def28))\n* _init_completion: fix unassigned redirect completion in nounset mode ([2e52b40](https://www.github.com/scop/bash-completion/commit/2e52b40d5087c55798c7bf006654aafd98e5deab))\n* : drop support for bash 4.1 ([e2d47ae](https://www.github.com/scop/bash-completion/commit/e2d47aea537ed18892ba485b2acba470ad79301a))\n* test: enable shellcheck SC2035 ([77a3505](https://www.github.com/scop/bash-completion/commit/77a35054a335323014f8d63879c0017ff200f9c9))\n* qemu, sbopkg: avoid unintentional globbing on option arg completions ([7dc4f61](https://www.github.com/scop/bash-completion/commit/7dc4f61dc0ebdbf45d64195ab9a8cb97768e455a))\n* qemu: add -machine arg completion ([11cd174](https://www.github.com/scop/bash-completion/commit/11cd1746d94a98fe12bd989a168204e03583bf78))\n* : avoid more errors in nounset mode ([5103c5d](https://www.github.com/scop/bash-completion/commit/5103c5dc3e236e3fa4e0e5a9048ada6ea99a9c76))\n* _command_offset, route: cleanups ([9994be6](https://www.github.com/scop/bash-completion/commit/9994be6476247261cb8d3e1befcce4af72a136b0))\n* cfrun: fix $hostfile leak ([68b5719](https://www.github.com/scop/bash-completion/commit/68b5719bbc2db1e71f76d843b4b6df41e671952b))\n* : avoid more errors in nounset mode ([f4fa0b6](https://www.github.com/scop/bash-completion/commit/f4fa0b6d0ca079e350c8a98ddaeaa4d932fb21ef))\n* bash_completion: fix array set checks with empty elements in them ([efaa991](https://www.github.com/scop/bash-completion/commit/efaa991d385e28eeb21490b3a91fd903e4f90b30))\n* _known_hosts: avoid errors in nounset mode and no arguments ([36475fc](https://www.github.com/scop/bash-completion/commit/36475fc6762edca0d52a4817aba53f7c2431b9a7))\n* pytest: add test class method completion ([ba4c941](https://www.github.com/scop/bash-completion/commit/ba4c941faa1ff5eb63e7984a6a52a7b703e2887f))\n* README: document GNU make build requirement ([3423e14](https://www.github.com/scop/bash-completion/commit/3423e14fb0e891a7d2764233eccd3cbecc983e22))\n* java, make: avoid errors in nounset mode on Ubuntu 14 and 16 ([1a633f3](https://www.github.com/scop/bash-completion/commit/1a633f3a551154ac3c70bfdc5263d73d8b3d9f3f))\n* man, mutt: avoid errors in nounset mode on Ubuntu 14 and 16 ([e5fa022](https://www.github.com/scop/bash-completion/commit/e5fa0221578dce638a84107f0ee813be89bbe3bd))\n* pytest: fix test class method completion with BSD awk ([3374911](https://www.github.com/scop/bash-completion/commit/337491161b1278a30d3f0aaf4a7cd2508ea809f5))\n* gcc: avoid errors in nounset mode ([221a6aa](https://www.github.com/scop/bash-completion/commit/221a6aa9b18bb8afe11435ee2244589bbaac0ff4))\n* bash_completion: trivial cleanups ([817d832](https://www.github.com/scop/bash-completion/commit/817d832fb7ac49eceda6ed3c21428dcc4659fa48))\n* test/_known_hosts_real: tolerate duplicates ([0b2866a](https://www.github.com/scop/bash-completion/commit/0b2866a9fe32ee24df242e200896125c7ecf65ad))\n* test/_known_hosts_real: reset COMP_KNOWN_HOSTS_WITH_HOSTFILE between tests ([5e63557](https://www.github.com/scop/bash-completion/commit/5e63557aac12251538091dc40bf587842327ced5))\n* test/_known_hosts_real: don't modify class scoped base expected list ([133790c](https://www.github.com/scop/bash-completion/commit/133790c464c68fa728b2957a66ee1fa012181a88))\n* test: upgrade mypy to 0.780 ([2e7271b](https://www.github.com/scop/bash-completion/commit/2e7271b3aed635a7fead1b97517673092eba5923))\n* test: regex escape our magic mark for completeness ([588b05c](https://www.github.com/scop/bash-completion/commit/588b05c1bf74feadad61bd1d1b39e752e639c201))\n* test/lspci: skip -A arg test if lspci fails -A help, e.g. busybox lspci ([e2cb804](https://www.github.com/scop/bash-completion/commit/e2cb80403d32af436a93782de4f33aee8352dd2b))\n* .gitignore: clean up some no longer needed ignores ([df7b81e](https://www.github.com/scop/bash-completion/commit/df7b81ea93d799affa858f26749f6aba8f0c1a38))\n* test/dpkg-query: mark as xfail on non-Debian based systems ([d176aaf](https://www.github.com/scop/bash-completion/commit/d176aafc18cb15a90c6c1d89918884d03382b20d))\n* test: simplify completion parsing ([726e4c0](https://www.github.com/scop/bash-completion/commit/726e4c08a96b1f0be1c931179f1b3edb31913917))\n* test: partial hostname completion fixes ([ba39695](https://www.github.com/scop/bash-completion/commit/ba39695792410c88f9d8e2303288274e2959cef7))\n* test/slapt-src: single expected result handling fixes ([1b9c9bc](https://www.github.com/scop/bash-completion/commit/1b9c9bcc285c296aa2c6df3e75ad75537080947e))\n* test/xhost: multiple expected result handling fixes ([888f39a](https://www.github.com/scop/bash-completion/commit/888f39a84a1847333c9e8bc06806886cd95eb103))\n* test: upgrade flake8 to 3.8.3 ([4730f3f](https://www.github.com/scop/bash-completion/commit/4730f3fcb0c0cefafc29cad7b0aed81ecd1decca))\n* _known_hosts_real: fix # handling in ssh configs ([ebabed1](https://www.github.com/scop/bash-completion/commit/ebabed1a4ca28f6e56a02831fee0e33f15047119))\n* _known_hosts_real: fix completion of Host entries after a wildcard etc ([0c69125](https://www.github.com/scop/bash-completion/commit/0c69125d65faaa60b0829db58c88dc33366bb67c))\n* test: upgrade perltidy to 20200619 ([87b169d](https://www.github.com/scop/bash-completion/commit/87b169dcf3b95d071280d70b3fc2fb0d8306c9e1))\n* test: upgrade mypy to 0.781 ([d46e8a5](https://www.github.com/scop/bash-completion/commit/d46e8a58e7840c0a8a5e942eb987479c69a0272a))\n* CONTRIBUTING.md: add posix and nounset mode item ([25887a3](https://www.github.com/scop/bash-completion/commit/25887a38ba3b81e9a6791ade89f5fa1a7c7ea5d3))\n* test: upgrade mypy to 0.782 ([f7c14b5](https://www.github.com/scop/bash-completion/commit/f7c14b5579b7bde9b57ae9bb175be7cba916edd9))\n* test/_known_hosts_real: add explicit no globbing test case ([8200b9a](https://www.github.com/scop/bash-completion/commit/8200b9a9529316f1f467aea18aaed2cbf4776bf0))\n* test/shfmt: upgrade to 3.1.2, reformat with it ([de35c91](https://www.github.com/scop/bash-completion/commit/de35c91dd3fe6c6c1adaeeb7e1a96f6a8360b0eb))\n* _known_hosts_real: prevent unwanted pathname expansion on host entries ([29be9d2](https://www.github.com/scop/bash-completion/commit/29be9d2e6bea356f16f12bfa7ad647b3ed67839e))\n* _included_ssh_config_files: support globs ([8bd47d4](https://www.github.com/scop/bash-completion/commit/8bd47d4ee25642b5fcddefb825d5025721840673))\n* _longopt: exclude too many dashes, allow underscores, require ends with alnum ([e2bcbd5](https://www.github.com/scop/bash-completion/commit/e2bcbd5115868bcfc048da1ce1b6b10f76762bf1))\n* _known_hosts_real: avoid errors in nounset mode on Ubuntu 14 and 16 ([54fd092](https://www.github.com/scop/bash-completion/commit/54fd092139e05c8fa01b3256b6c717ef3cdb9fb6))\n* test: upgrade markdownlint-cli to 0.23.2 ([95992bf](https://www.github.com/scop/bash-completion/commit/95992bfeee3c0409991fe45e89c1d08cd2eb4401))\n* __get_cword_at_cursor_by_ref: fix regression on bash 4.2 ([2ed8d90](https://www.github.com/scop/bash-completion/commit/2ed8d90b51e3ca6a337a15086f47c7dc982891a4))\n* pytest: complete async test class methods ([5c4f7a4](https://www.github.com/scop/bash-completion/commit/5c4f7a42d9864dcf91de845ea8167aad9cd3bdfc))\n* test/inputrc: comment typo fix ([0d2367b](https://www.github.com/scop/bash-completion/commit/0d2367bd46b722a23e7b83e8bc828342ba857fa5))\n* test/inputrc: do not set print-completions-horizontally ([d050205](https://www.github.com/scop/bash-completion/commit/d05020538be21f4b41a2f129c8f4eab83c077f40))\n* unzip, zipinfo: complete *.aar (#428) ([8273ce3](https://www.github.com/scop/bash-completion/commit/8273ce3138708ad1db851b74eafba38d6683ca0a))\n* pre-commit: update shellcheck-py URL ([08451ec](https://www.github.com/scop/bash-completion/commit/08451ec8383bb309d945589cab7d8c74a347a8b7))\n* pre-commit: upgrade isort to 5.0.7 ([d128d70](https://www.github.com/scop/bash-completion/commit/d128d70b1baef5a93f376fd44f18c7824d4643f3))\n* _known_hosts_real: exclude Host negations ([812e2ac](https://www.github.com/scop/bash-completion/commit/812e2acec01689b7c20488e2e11d335efd25ce9a))\n* test/ant: gitignore all target cache files ([6703c90](https://www.github.com/scop/bash-completion/commit/6703c9035b7a1639a1eded9989ede80848539078))\n* pre-commit: add pyupgrade, run it ([54b1e6f](https://www.github.com/scop/bash-completion/commit/54b1e6f70decfb8b8a5b15a1d14279e52551edf2))\n* pre-commit: upgrade pyupgrade to 2.7.2 ([5ac90cc](https://www.github.com/scop/bash-completion/commit/5ac90cc4eb6330d0a1999e598e6873d7dc545b77))\n* pre-commit: upgrade isort to 5.1.4 ([c2f0056](https://www.github.com/scop/bash-completion/commit/c2f0056c8edc35fc53f40a9b4d53d48e40f6676f))\n* _xinetd_services: avoid nounset error on bash 4.2 ([0df93b0](https://www.github.com/scop/bash-completion/commit/0df93b02d355b2faaad0d25d20d45967b82edd63))\n* test/ant: avoid complete-ant-cmd.pl interference with ANT_ARGS ([2ad91ec](https://www.github.com/scop/bash-completion/commit/2ad91ec985dc1fbc57d27f7b9815c7d0797426e8))\n* test/tshark: fix multiple -O completion with no http2 support ([53f624f](https://www.github.com/scop/bash-completion/commit/53f624f8212497c116afd4a365768237ac4069bb))\n* test/xfreerdp: skip --help failure cases ([b41b97c](https://www.github.com/scop/bash-completion/commit/b41b97cd2c646e813317429edbb8285c09cfd0b7))\n* tshark: complete -r arg with all filenames (#422) ([436b0cb](https://www.github.com/scop/bash-completion/commit/436b0cbe9e0839a51edcc7948e4ca11f2444a238))\n* pytest: rewrite in bash, support toplevel funcs, avoid nondef ones and classes ([bf3f720](https://www.github.com/scop/bash-completion/commit/bf3f72046f62ea86f43b65389d6d706a28544adb))\n* pre-commit: anchor exclude patterns ([cc697a6](https://www.github.com/scop/bash-completion/commit/cc697a646c1bd1100890abd367bb8d0274a42275))\n* extra/make-changelog: check and output usage message ([cf90b29](https://www.github.com/scop/bash-completion/commit/cf90b297696cee57650f4fb6c29cebe872f773a7))\n\n## 2.10 (2019-12-05)\n\n* README: link to cygwin package ([8d60fd3](https://www.github.com/scop/bash-completion/commit/8d60fd32be777e4c6e734c1dac431b39b53fb216))\n* README: use light gray badges for unknown versions ([483968c](https://www.github.com/scop/bash-completion/commit/483968cd513142b71d1e6e9f199d5eaf958eb616))\n* test_rpm2tgz: Fix expected output ([ac51b00](https://www.github.com/scop/bash-completion/commit/ac51b00358ebe510f4899db9678480a6c6a4eda1))\n* test_chromium_browser: Skip test_2 if 'chromium-browser --help' fails ([0ee3982](https://www.github.com/scop/bash-completion/commit/0ee39821c67735fd16b5372cd4044775af1d1243))\n* tar: add missing bsdtar, gtar, and star symlinks ([af0b3d0](https://www.github.com/scop/bash-completion/commit/af0b3d0130f61a7d7960dd8eee99529fea6e39a2))\n* build: simplify symlink setup ([3bc0225](https://www.github.com/scop/bash-completion/commit/3bc0225ee28abc81800042c168b0721f5c68c49f))\n* build: really reset return value before completions check ([fce6732](https://www.github.com/scop/bash-completion/commit/fce673275bf2a024f91bb455e5353e02f3690cf8))\n* build: makefile whitespace tweaks ([a0949de](https://www.github.com/scop/bash-completion/commit/a0949de0f9988d3460b11820b97d6e4baab48cd3))\n* test: bashrc comment and whitespace tweaks ([27daf01](https://www.github.com/scop/bash-completion/commit/27daf018539500cad68e488cc81caf064e65075c))\n* test: more thorough system location interference avoidance ([7700896](https://www.github.com/scop/bash-completion/commit/77008960c7a402e96c24a5c9eab7d88ebc735896))\n* test: set up BASH_COMPLETION_COMPAT_DIR in bashrc (only) ([f7e2a41](https://www.github.com/scop/bash-completion/commit/f7e2a4192e6e2980859da1a64816fab75aa11b09))\n* test: reformat test_chromium_browser.py source ([7bf6281](https://www.github.com/scop/bash-completion/commit/7bf6281a47ce2fda45f8b7fec48e53e19e0f640d))\n* pkg_delete: don't limit to FreeBSD ([5bc9b8e](https://www.github.com/scop/bash-completion/commit/5bc9b8eb51ccc41f78af0e108503de5edc87f101))\n* tar: simplify locating tarball from command line ([26d9662](https://www.github.com/scop/bash-completion/commit/26d966207a2e4cef02a70d790f44812c1284d160))\n* test_arp: Skip if ARP tables are empty ([90ede98](https://www.github.com/scop/bash-completion/commit/90ede989622143dc93c9a05a18bc23767c4bff9c))\n* test: generalize check whether we're being run in a container ([1e3d3b4](https://www.github.com/scop/bash-completion/commit/1e3d3b4d40e3f6c150b9d31965f8b007ef823fc7))\n* test_feh, test_makepkg: invoke grep as \"command grep\" ([5e706a4](https://www.github.com/scop/bash-completion/commit/5e706a433440af4fad630d1b362f7e75578cbcdb))\n* test_getconf: skip if -a doesn't output any POSIX_V* ([70afc1e](https://www.github.com/scop/bash-completion/commit/70afc1ed3697c3171a004b7db2f19220117d2862))\n* test_iconv: skip option completion if --help fails ([2cdac1b](https://www.github.com/scop/bash-completion/commit/2cdac1b9f24df62a1fa80c1824ee8524c9b02393))\n* test_iconv: add basic file completion test ([0ba7af2](https://www.github.com/scop/bash-completion/commit/0ba7af221b3ec3ec7b1efecd3c8458068f1934b3))\n* iconv: weed out ... from encoding completions ([40be1f4](https://www.github.com/scop/bash-completion/commit/40be1f491bfbeec50787cbe6bd2c6a794b19ef46))\n* test: add Alpine Linux container, allow failures for now ([316289f](https://www.github.com/scop/bash-completion/commit/316289fb0837676f310925748070e1e1e87de750))\n* test: support xfail in our markers like skipif, use it a lot ([b3fecab](https://www.github.com/scop/bash-completion/commit/b3fecab48c22c07015a6fef7a00d4cb0ea1b74f3))\n* test: expect failures for various completions without useful --help ([0a777ff](https://www.github.com/scop/bash-completion/commit/0a777ff73bf5ddbd5de92f2bf1e3f8429e471f72))\n* test_lsusb: xfail with unparseable --help ([e717ce4](https://www.github.com/scop/bash-completion/commit/e717ce4503ab646055cd6b88d4087c162a529137))\n* test_wget: test --s instead of --h ([ddd4b39](https://www.github.com/scop/bash-completion/commit/ddd4b396b9a29c25715f6b2b768737b0b015c6c9))\n* timeout: fallback to _parse_usage from _parse_help ([7683eef](https://www.github.com/scop/bash-completion/commit/7683eefe974d7c508c7a7c3e2aa8f318f30c2699))\n* test_ifup: accept short option completions too ([071dc19](https://www.github.com/scop/bash-completion/commit/071dc199c1413146d485ee28bfa6c9a189c3681b))\n* test: use one Dockerfile for all dists ([495dab2](https://www.github.com/scop/bash-completion/commit/495dab2d80001aeabfe6136bd046a0231ff5d115))\n* test: run our docker script in test containers by default ([a59f00a](https://www.github.com/scop/bash-completion/commit/a59f00aeb2efa0decb3767e99c2445890a340d35))\n* _pnames: adapt for busybox ps, rewrite in pure bash ([5443c81](https://www.github.com/scop/bash-completion/commit/5443c819622495fcdc759d5dd4e5c31633eab389))\n* test: disallow Alpine failure on Travis ([2748b79](https://www.github.com/scop/bash-completion/commit/2748b79d678db1d06dac733b0ddc5a51a77cef1e))\n* iconv, lz4, tipc, xsltproc: replace some seds with compgen -X ([32e8b93](https://www.github.com/scop/bash-completion/commit/32e8b934c4bb3089b9a2b6e1677e7c014509f734))\n* test: port compgen and quote tests to pytest+pexpect ([3752208](https://www.github.com/scop/bash-completion/commit/37522086868ae6da2e3630b24056b443ba9706e0))\n* test: port _variables unit tests to pytest+pexpect ([b670968](https://www.github.com/scop/bash-completion/commit/b670968232cbc91e494658b2b06330693ee42939))\n* README: add some badges, tweak existing ([cd9f061](https://www.github.com/scop/bash-completion/commit/cd9f0616567eee91eb971575baabcb8d97f3780e))\n* test: convert finger partial test case to pytest+pexpect ([f3537dd](https://www.github.com/scop/bash-completion/commit/f3537dd02acb7e8cc8d6150f9e38785ee75f958d))\n* test: convert bunch of _filedir unit tests to pytest+pexpect ([2da46c3](https://www.github.com/scop/bash-completion/commit/2da46c3299403d93d1754b5ee2d8903cc874d267))\n* test: flake8 fix ([65aa0db](https://www.github.com/scop/bash-completion/commit/65aa0db5142f29ebd8a7e5d1bae91ffe8b2db516))\n* test: convert more _filedir unit tests to pytest+pexpect ([102e9a4](https://www.github.com/scop/bash-completion/commit/102e9a413101c702c1f458e55d79a861e80950a9))\n* test: add basic autossh test ([06cea18](https://www.github.com/scop/bash-completion/commit/06cea18e2ff03e90d1c663614e4d90422cfce246))\n* chsh, pwck: try _parse_help before _parse_usage ([696f90d](https://www.github.com/scop/bash-completion/commit/696f90d30a5cd6769be0affc166b2003de8a44e7))\n* test: add bunch of basic _parse_usage use test cases ([dcef445](https://www.github.com/scop/bash-completion/commit/dcef445f19d6c879144c09c5e6e96108fbe7c933))\n* cal: try _parse_help before _parse_usage ([2500b50](https://www.github.com/scop/bash-completion/commit/2500b504a16cfe8fd73caa5d1d53f377d1a90f11))\n* postfix: option completion is expected to fail at the moment ([2deda5b](https://www.github.com/scop/bash-completion/commit/2deda5b49d1fe722008c3d676a4e95a551237586))\n* badblocks: fix $i leak ([e8ac021](https://www.github.com/scop/bash-completion/commit/e8ac021ed13e5b110b9e0701b29d6c9704d33461))\n* .gitignore: add configure.lineno ([44ed05a](https://www.github.com/scop/bash-completion/commit/44ed05ac88888bbc0d156e89b62e63d630e1c2fc))\n* test: add bunch of basic _parse_help use test cases ([6b4fd9b](https://www.github.com/scop/bash-completion/commit/6b4fd9b783b1fe623f7fc1e55538a626076e5a8f))\n* test: add more basic _parse_help use test cases ([c64a4ac](https://www.github.com/scop/bash-completion/commit/c64a4acd6637f0718b8dabfb53f40e8a6d8b71d7))\n* test: xfail getent and pwdx option completions with unparseable --help ([ef215a6](https://www.github.com/scop/bash-completion/commit/ef215a624a3f83a0aadd02fe9ddd9da775a6aa91))\n* test: zopflipng flake8 fix ([026e52a](https://www.github.com/scop/bash-completion/commit/026e52a9b419cfb251f943be892b589b8520ff55))\n* test: enforce minimum pytest version ([69c94b9](https://www.github.com/scop/bash-completion/commit/69c94b9bf81811aba2b1b7f7bb7ade587880e95b))\n* build: make pytest executable configurable, look for pytest-3 too ([35188d9](https://www.github.com/scop/bash-completion/commit/35188d93848de125dc82c798dbcac0d6e93fb255))\n* test_pwdx: xfail more unparseable help cases ([98a7aa6](https://www.github.com/scop/bash-completion/commit/98a7aa6cfd694149a9ca3857d224fe85a4acf538))\n* test: xfail unparseable mock and munin-node-configure --help cases ([139acc9](https://www.github.com/scop/bash-completion/commit/139acc9fe3b35b000d899f54e06a7b638cc3e2e8))\n* pgrep: fix fallback to _parse_usage ([5cb4be4](https://www.github.com/scop/bash-completion/commit/5cb4be4220d649a78e85a6e772dcbe85622f9840))\n* test: don't try to install black on Python < 3.6 ([bfe14e7](https://www.github.com/scop/bash-completion/commit/bfe14e7b8e02f97d490a3b3c8087588e5318b5ee))\n* test_wsimport: xfail options test on unparseable -help ([2baab4f](https://www.github.com/scop/bash-completion/commit/2baab4f1a8ad70500cea543758aadc13cc219878))\n* man: fall back to _parse_usage for _parse_help ([2e1cb45](https://www.github.com/scop/bash-completion/commit/2e1cb45991af0e52a6be93b46264ffd45097d980))\n* test: add basic tox fixture ([a81a1e8](https://www.github.com/scop/bash-completion/commit/a81a1e80163147c1aabd9476507338dfa255b880))\n* tox: do simple parse on tox.ini if --listenvs* yields nothing ([d7c92e6](https://www.github.com/scop/bash-completion/commit/d7c92e602fc776272724c3c37a14181a4b01edf5))\n* README: badge title tweaks ([35411bf](https://www.github.com/scop/bash-completion/commit/35411bf821b66146d7dfcfc3abf4c7d7ba4a30bb))\n* influx: new completion ([378865d](https://www.github.com/scop/bash-completion/commit/378865db6e61d9a3ecfd0281b80b5d75167e792b))\n* test: source our profile.d test env script in docker ([3702ae0](https://www.github.com/scop/bash-completion/commit/3702ae08454974e8c847ef565a383384094a92b4))\n* chromium-browser: add --proxy-server arg completion ([fef4c9f](https://www.github.com/scop/bash-completion/commit/fef4c9f784f26d50af93d0b9c4f6628a91626a5b))\n* README: drop distro badges, link to Repology instead ([d2574f5](https://www.github.com/scop/bash-completion/commit/d2574f51c3cadde840a0601a561009d7a53a2ebf))\n* ip: invoke the tool as $1 ([bbe88bb](https://www.github.com/scop/bash-completion/commit/bbe88bb6b1b028adb103b9cbfafc7c7168ff0667))\n* test: fix required pytest version ([9cd7c03](https://www.github.com/scop/bash-completion/commit/9cd7c03f898559601e81e2a933d205d1ea1a51f6))\n* test: register our pytest markers to hush warnings from 4.5+ ([c187879](https://www.github.com/scop/bash-completion/commit/c18787923bc40b4ee599946deb579eab6d3fa5b2))\n* gssdp-discover: new completion ([f8fac3a](https://www.github.com/scop/bash-completion/commit/f8fac3aefd4067d039d1e088f227808259602676))\n* tox: complete defaults after a -- ([c06cfb0](https://www.github.com/scop/bash-completion/commit/c06cfb053eea2d5cbe478f5179ad5e3d824d760a))\n* tox: include -- in option completions ([0ee3a3b](https://www.github.com/scop/bash-completion/commit/0ee3a3b4db0a65a4ed6a2a07d5c259c1c398de59))\n* test: drop sourcing our no longer existing profile.d script ([ed14353](https://www.github.com/scop/bash-completion/commit/ed143530a2811d605de198a11bc699a90da645fd))\n* test: don't expect a .tox dir in fixture ([6dd937d](https://www.github.com/scop/bash-completion/commit/6dd937d3c86aa098b273002c9589f9e5ba2c5891))\n* test: expect failures for bc without --help useful with _longopt ([5fd2701](https://www.github.com/scop/bash-completion/commit/5fd2701371a491176b25fa9683481d6d143675f2))\n* test: skip gssdp-discover --message-type when option not available ([b0fb710](https://www.github.com/scop/bash-completion/commit/b0fb7101aaad984e21ce520b39e6416db261a354))\n* xvfb-run: new completion ([5c0e988](https://www.github.com/scop/bash-completion/commit/5c0e98832a1ee4e2829d47e2fb22f495ac09b641))\n* test: avoid gnome-mplayer core dump on Ubuntu 14 ([07eada3](https://www.github.com/scop/bash-completion/commit/07eada37598e19c282081102ad29d62a6e87e9f4))\n* test: remove unnecessary returns after pytest.skip ([d5fa7e3](https://www.github.com/scop/bash-completion/commit/d5fa7e31e2f88a438d224adde89e15c14e173ada))\n* test: fix acroread fixture dir ([1f7fdc6](https://www.github.com/scop/bash-completion/commit/1f7fdc67d3e015156d4622e6904a728f3717dadb))\n* test: installpkg test fixes ([322ec19](https://www.github.com/scop/bash-completion/commit/322ec19f06d4ec2ea32c861c023fb9644985150a))\n* java: make jar/zip listing work with unzip ([8b8783c](https://www.github.com/scop/bash-completion/commit/8b8783c48d58f0320fd72fa7805643a0f7615311))\n* test: use sh +* as ccache command test case ([87ba114](https://www.github.com/scop/bash-completion/commit/87ba114a2da100e4002240060a41b89fb9bbfdb5))\n* test: avoid some sed -r/-E runLint false positives ([970eab9](https://www.github.com/scop/bash-completion/commit/970eab95140451c04a11a515d9ee860154fce9d1))\n* ipv6calc: parse help instead of hardcoding option list ([151ac18](https://www.github.com/scop/bash-completion/commit/151ac18040eb27533ebca4815c6286e2d758c0f5))\n* lvm pv*, vg*: parse help instead of hardcoding option list ([a8d5489](https://www.github.com/scop/bash-completion/commit/a8d548950f6a79e14c131251091026730c2ddb49))\n* test: portinstall/upgrade test case and setup fixes ([669c3fe](https://www.github.com/scop/bash-completion/commit/669c3fe142f50d1f72c57c9639169691598622a0))\n* pkgutil: fix $i leak ([d375b63](https://www.github.com/scop/bash-completion/commit/d375b638160d9dea43528dc99054db0a0d5d4497))\n* pkg-get: fix $i leak ([07e8dc6](https://www.github.com/scop/bash-completion/commit/07e8dc6c89c81f72093ef1ff7dcd29b87016c2ee))\n* chromium-browser: Add support for .mhtml files ([a951666](https://www.github.com/scop/bash-completion/commit/a95166674def153222d46346863a456f73803877))\n* _terms: combine and simplify somewhat ([f6d4614](https://www.github.com/scop/bash-completion/commit/f6d461483ea7c6b3cc6710401cca6ba50c687ed4))\n* _terms: search directly from various terminfo dirs ([88ed3c7](https://www.github.com/scop/bash-completion/commit/88ed3c712df1b72d730496e736faba493488e892))\n* test: mark sbcl-mt xfail due to whitespace split issues ([9838cbf](https://www.github.com/scop/bash-completion/commit/9838cbfaf9e508b1ec1ad05959d89f3cf9e5d719))\n* test: explodepkg and upgradepkg test fixes ([f40a1ca](https://www.github.com/scop/bash-completion/commit/f40a1ca85658c9d7cc8366ac6766098f78b69412))\n* test: always run tests which don't require tested command ([674dd80](https://www.github.com/scop/bash-completion/commit/674dd805ba3639c7b507fd997fdf6e97708d84be))\n* test: add bunch of basic option parsing test cases ([faacf36](https://www.github.com/scop/bash-completion/commit/faacf36e3432fd740293788910ee6304e0b5a031))\n* test: don't sort expected completion lists under the hood ([1e3d504](https://www.github.com/scop/bash-completion/commit/1e3d50429d45e44d4fe65b3c7b2f37eb6e8c7b48))\n* test: hush flake8-bugbear B010 ([b6d74cc](https://www.github.com/scop/bash-completion/commit/b6d74cc99881e51e7bd9504ce55273a3f1b95def))\n* test: ignore _makepkg_bootstrap in makepkg test env ([b044a4f](https://www.github.com/scop/bash-completion/commit/b044a4f9d750410e4882e5badfa3b2f8a1145e28))\n* test: xfail MAC address completion without networking ([36db77a](https://www.github.com/scop/bash-completion/commit/36db77a14e516c4ab452ce57f83e4406852b83e3))\n* travis: pass NETWORK as env var, so we can actually use it ([0f8187d](https://www.github.com/scop/bash-completion/commit/0f8187ddc01dabc6129f7f1673e950d03d57cbfd))\n* test: fix retrieving command to test from request ([29ad382](https://www.github.com/scop/bash-completion/commit/29ad38254fa52ea159d2bc1959c80599c6b52128))\n* gprof: _parse_usage, drop hardcoded option list ([bebe43d](https://www.github.com/scop/bash-completion/commit/bebe43d6e7881d39e9c03faadf2927fa08042241))\n* lintian-info: _parse_help, add more option arg (non)completions ([29157d0](https://www.github.com/scop/bash-completion/commit/29157d07aafac3938fb26e93c542288d027eca9a))\n* screen, smartctl, update-alternatives: _parse_help, drop hardcoded option list ([bf207da](https://www.github.com/scop/bash-completion/commit/bf207da5b3879ca5c94fd382b609b5b41f6802b1))\n* sysctl: invoke completed sysctl instead of one from path to get variables ([e32ca04](https://www.github.com/scop/bash-completion/commit/e32ca04b96f4e7c78232d6d75bc3782847f8aa97))\n* test: mark more tests that parse command output as requiring command ([503143b](https://www.github.com/scop/bash-completion/commit/503143bf4dd7c43088b646f81eafa4494c476b26))\n* test: add require_longopt xfail helper, use it ([6d79948](https://www.github.com/scop/bash-completion/commit/6d79948d9fe5923a3ec9fcaf881fb182cb59569d))\n* dmypy: new completion ([3135bc3](https://www.github.com/scop/bash-completion/commit/3135bc3780fda004a2c04e2ae007ae9ae1672f22))\n* travis: generate dist tarball on alpine ([be2e8f3](https://www.github.com/scop/bash-completion/commit/be2e8f3fe6be17051a9aa6fe081b66897e0d8b43))\n* wine: install for wine-development and wine-stable too ([afc5a30](https://www.github.com/scop/bash-completion/commit/afc5a303ae25afdb109464e4f63fc17783383ed5))\n* perltidy: associate *.t (#338) ([96b5e07](https://www.github.com/scop/bash-completion/commit/96b5e07b585b3122d51c5c25bc4289daa96524a7))\n* travis: test with Debian 10 ([c0a3c55](https://www.github.com/scop/bash-completion/commit/c0a3c5592dadcee37cf41dcf5fac2a357d1b5f67))\n* ssh: option and argument completion updates (#332) ([29a14f0](https://www.github.com/scop/bash-completion/commit/29a14f0f33ea8f3e8a77070eb30d14d547f8ac2b))\n* java: don't assume jar is installed ([120bf77](https://www.github.com/scop/bash-completion/commit/120bf77ad2d644eba6fb506caed08fa475a426e7))\n* _sysvdirs: always return 0 ([debbff9](https://www.github.com/scop/bash-completion/commit/debbff95fe35082877ccda05153d6d87562088ea))\n* test: xfail locale-gen option completion if --help is not available ([4cf7e4f](https://www.github.com/scop/bash-completion/commit/4cf7e4f52d7da127198146cf57161f9bcee546da))\n* valgrind: look tool names from lib/*-linux-gnu dirs too ([6c8380d](https://www.github.com/scop/bash-completion/commit/6c8380df27f6af2704d15c2de7efbb87fe0d1f48))\n* test: adjust java expectations based on whether jars can be listed ([9e351e4](https://www.github.com/scop/bash-completion/commit/9e351e41eb4bbadd94f9df48915708f78b8246b9))\n* op: direct command parsing stderr to /dev/null ([d10dcdf](https://www.github.com/scop/bash-completion/commit/d10dcdf798890afcb361e6286dfbff1404d43916))\n* ri: hush some warnings ([f5d99f2](https://www.github.com/scop/bash-completion/commit/f5d99f22f6da6deb4fb037a2966d8b2f8532a4f3))\n* carton: new completion ([6722aaa](https://www.github.com/scop/bash-completion/commit/6722aaa018ff426953496577db2daf3980443ffd))\n* CONTRIBUTING: disable e-mail bug gateway due to spam ([8ef547a](https://www.github.com/scop/bash-completion/commit/8ef547aad3566cdf83e659bda1113a0de55a4738))\n* apt-get: fix pkg version completion if it contains a colon (#351) ([8f0595c](https://www.github.com/scop/bash-completion/commit/8f0595c6e2396e875aeffac03dbd8b9d5b3d10cf))\n* _variables: add TERM and LC_* completion (#353) ([d1756f0](https://www.github.com/scop/bash-completion/commit/d1756f06ef9bffb1b4621c4e63e47e181ddf1086))\n* cppcheck: Add new standards to --std option. (#356) ([d8df8b5](https://www.github.com/scop/bash-completion/commit/d8df8b5e2d56a5f2fa5930b7278cc2cc6b6c90b8))\n* test: mark dcop and mr testcases requiring the cmd as such ([73e8faf](https://www.github.com/scop/bash-completion/commit/73e8faf4d987aef26d52c2354d4336596a7cee92))\n* makepkg: fix option completion ([3566352](https://www.github.com/scop/bash-completion/commit/356635225de0fb1efecb6e17bb1284fb2c6c5a80))\n* .gitignore: mypy cache ([0dd1e65](https://www.github.com/scop/bash-completion/commit/0dd1e652c6045a51a4d5c6eb2952248d43fdc88e))\n* test: add minimal mypy config ([860766e](https://www.github.com/scop/bash-completion/commit/860766ea4f44ebb98497eb8990634b705dd3d4f9))\n* test: python typing fixes ([af136b5](https://www.github.com/scop/bash-completion/commit/af136b50b222dcbfb9d881a8c33280b5051dc266))\n* test: fix cpio users test in presence of usernames with whitespace ([20cacd2](https://www.github.com/scop/bash-completion/commit/20cacd2ebabfd1cb9178f0bccb2faf859e5469bc))\n* shellcheck: add some option arg (non)completions ([000fa10](https://www.github.com/scop/bash-completion/commit/000fa10469d4704803ed48563cf656449d77232a))\n* test: shellcheck config cleanups ([0f3922b](https://www.github.com/scop/bash-completion/commit/0f3922be10b83361505fffa76d7bb2931415d25e))\n* bash_completion.sh: shellcheck SC2086 fixes ([ded48bb](https://www.github.com/scop/bash-completion/commit/ded48bb7ab53c1836c6ec436cb304b6823a180f4))\n* _filedir: remove unused $x ([2701887](https://www.github.com/scop/bash-completion/commit/2701887f4862b29dafa0d9ecef329a766713a3fe))\n* _filedir: avoid duplicate dirs internally, and a compgen -d call for files ([da99bc5](https://www.github.com/scop/bash-completion/commit/da99bc55954e9f60b9c3a9e9071ff6301d7015cb))\n* curl: make @filename completion do the right thing with dirs ([aa3652b](https://www.github.com/scop/bash-completion/commit/aa3652b6b7de9aabfafa79f52c70825f23f967ab))\n* pkg-config: generate Name from autotools PACKAGE ([32369a0](https://www.github.com/scop/bash-completion/commit/32369a009d14f129e000cba4a0a2d1b8fc65ccea))\n* unzip, zipinfo: complete *.aab (#340) ([31b5cbc](https://www.github.com/scop/bash-completion/commit/31b5cbc8016b181675e10dd068c92008782d4196))\n* pkg-config: Relative paths ([8c53025](https://www.github.com/scop/bash-completion/commit/8c5302581ad20954cfa164dcae26f1ed6277dd90))\n* autotools: Replace pkgdatadir with datadir ([0cc34e8](https://www.github.com/scop/bash-completion/commit/0cc34e8de658bd11fa7f728eb9852c7e29d8d6d4))\n* cppcheck: Remove deprecated option 'posix'  for '--std=' ([d1ae094](https://www.github.com/scop/bash-completion/commit/d1ae094807532e42b71c18e648b182c5c44a0daf))\n* perl: fix completion with space between option and argument ([8eba6d0](https://www.github.com/scop/bash-completion/commit/8eba6d0c6b88dacd80762ada3a3bc5fe14673fb2))\n* perl: indentation fixes ([1360ba9](https://www.github.com/scop/bash-completion/commit/1360ba95149d0880486d1abfdcfcf6f77355c44d))\n* test: add some trivial perl -E/-e cases ([188ca8a](https://www.github.com/scop/bash-completion/commit/188ca8af208f35ebdc9895d5fd41d6cdd83d90a6))\n* screen: complete first arg with serial devices ([9cde25b](https://www.github.com/scop/bash-completion/commit/9cde25bfd74bdd1cb51e46a4b1958ebd444cdbd6))\n* screen: add //telnet completion ([7a8e408](https://www.github.com/scop/bash-completion/commit/7a8e408267ca21530d6d6de4ae92b9a0362e14fd))\n* screen: add serial device basic arg (non)completion ([fb46fed](https://www.github.com/scop/bash-completion/commit/fb46fed657d6b6575974b2fd5a9b6529ed2472b7))\n* update-rc.d: remove dead code ([845be11](https://www.github.com/scop/bash-completion/commit/845be116278719c2a4ab4d4edaee81f38cc17b9f))\n* update-rc.d: indentation fix ([645cc41](https://www.github.com/scop/bash-completion/commit/645cc41deab3dce6a38120be05ab02ee1ca6bc89))\n* ssh, scp, sftp, ssh-copy-id, curl: improve identity file completion ([44ce113](https://www.github.com/scop/bash-completion/commit/44ce11334803f924f60e2e2c00c8b7d3dc81c33f))\n* unrar: complete on *.exe (#337) ([2b81989](https://www.github.com/scop/bash-completion/commit/2b8198919e4bc65efd8c68ade769e65f6df473f1))\n* gcc: support new --completion option (#222) ([87a9e9c](https://www.github.com/scop/bash-completion/commit/87a9e9c47f028efb6178c69ced2df74b62a73639))\n* test: bump black to >=19.10b0 ([540e5d1](https://www.github.com/scop/bash-completion/commit/540e5d1a7ec9599f404ec88d35aa37bf25557755))\n\n## 2.9 (2019-04-27)\n\n* completions/Makefile: Fix check-local in VPATH builds ([57b2c93](https://www.github.com/scop/bash-completion/commit/57b2c937c1fa8409a4416702cf5b8844233a5566))\n* ssh: Order various switch cases closer to alphabetical ([cde26f0](https://www.github.com/scop/bash-completion/commit/cde26f07207d3256ec56f519256cb7a7d38d993e))\n* ssh: Sync query type list with OpenSSH 7.5p1 ([655ede3](https://www.github.com/scop/bash-completion/commit/655ede3db3f56ae7669c296110d8dbef9c329b3a))\n* ssh: Sync config option lists with OpenSSH 7.5p1, add some value completions ([15abc03](https://www.github.com/scop/bash-completion/commit/15abc03c71d49c1bfc328e5c860c1bd30b15feb0))\n* apt-get: Complete install package=versions ([c664b07](https://www.github.com/scop/bash-completion/commit/c664b07ac98bf46c0ea416161cef0a0dbe11ab50))\n* apt-get: Add indextargets to list of suggested commands ([d623786](https://www.github.com/scop/bash-completion/commit/d6237861144c897866630e2d3fb81da5d5413e81))\n* apt-get: Simplify -t and friends completion, support Ubuntu ([9b531a0](https://www.github.com/scop/bash-completion/commit/9b531a08cc825ec723ef8ff78f2072ace6f85a31))\n* apt-get: Sync option list with apt 1.5.1 ([f4e54d9](https://www.github.com/scop/bash-completion/commit/f4e54d918b5a367a7e665d563e2f8336553ea950))\n* apt-get: Add -h/-v/-o non-completions ([c80c82c](https://www.github.com/scop/bash-completion/commit/c80c82c9dcffeb2834f1bcb3edd38a228c20624a))\n* dpkg-source: Add --before-build --after-build --commit, and --print-format ([1404d3f](https://www.github.com/scop/bash-completion/commit/1404d3f995649e1f70ffbb8239acd585e8246df4))\n* README: Link to various distro packages ([c8f4f87](https://www.github.com/scop/bash-completion/commit/c8f4f87070150719249fc1c585d0ec414d120ce7))\n* README: Point Debian and openSUSE badges towards unstable and Tumbleweed ([2dc5865](https://www.github.com/scop/bash-completion/commit/2dc5865bb78d2d9ef131da53b15710528716054b))\n* ssh: Complete all *File option args with _filedir ([7cd0090](https://www.github.com/scop/bash-completion/commit/7cd00901477878d135a844624eff795995199761))\n* test: Add comment line to fixtures/_known_hosts_real/known_hosts ([a0e2ce3](https://www.github.com/scop/bash-completion/commit/a0e2ce369a28c5eb41dd8d96495457ddb9254b28))\n* _known_hosts_real: Reimplement known hosts file parsing in pure bash ([71ac42b](https://www.github.com/scop/bash-completion/commit/71ac42b98c0eba39819fb8478d6443032c6ef6f1))\n* mount, umount: Deprecate on Linux in favor of util-linux >= 2.28 ones ([861be75](https://www.github.com/scop/bash-completion/commit/861be7590ed96fb1aacc8b5161f10a00ae57eebe))\n* .dir-locals.el: Set -O extglob for flycheck bash checks ([b49a182](https://www.github.com/scop/bash-completion/commit/b49a182cc68a9d69d702754c3adc0b17d50e52f6))\n* reportbug: Add bunch of option arg (non-)completions ([81e2971](https://www.github.com/scop/bash-completion/commit/81e29716093a13dff3bde8b9f486e44f99662ac8))\n* a*,ccze,curl,wget: Support completing arg of last bundled short option ([b358aa1](https://www.github.com/scop/bash-completion/commit/b358aa1ebd88e353788f7c5655e9c489fe4eba40))\n* b*: Support completing arg of last bundled short option ([d664aeb](https://www.github.com/scop/bash-completion/commit/d664aebf6bd6ef5ca0602f6440887273bbe000e3))\n* cvs: Add completion for the log command ([7c5a752](https://www.github.com/scop/bash-completion/commit/7c5a75277842b0ac71d1154d87534fccd86ab22b))\n* chage, chpasswd: Add -R/--root arg completion ([5634cfe](https://www.github.com/scop/bash-completion/commit/5634cfe5923a0f9b83b5dc7275185578c9cac68e))\n* dhclient: Parse options with _parse_usage ([5789780](https://www.github.com/scop/bash-completion/commit/57897803dbce6cf90c24bfd59a08fb39cfdfd3c0))\n* dhclient: Add some option arg (non-)completions ([2a7d2e3](https://www.github.com/scop/bash-completion/commit/2a7d2e3eb540188cafda3bf0c103f59ef2b7991f))\n* dselect: Parse options with _parse_help ([1b15dc6](https://www.github.com/scop/bash-completion/commit/1b15dc6884a39928cd57f48f1d900f3d9fef86d7))\n* c*, d*: Support completing arg of last bundled short option ([ed24bbc](https://www.github.com/scop/bash-completion/commit/ed24bbc8e77e3fb40ef7bf730eebfaa3b06cac24))\n* ether-wake: Install for etherwake as well ([b6903bc](https://www.github.com/scop/bash-completion/commit/b6903bc346f6b97d12f02007676dfc280f051fb6))\n* e*: Support completing arg of last bundled short option ([008a407](https://www.github.com/scop/bash-completion/commit/008a4074c72152187195c7fd4a1e47e5ae348528))\n* f*: Support completing arg of last bundled short option ([c1dfa0f](https://www.github.com/scop/bash-completion/commit/c1dfa0f5ab43516e1c31978d05548ca2c8c6008a))\n* g*: Support completing arg of last bundled short option ([e00c119](https://www.github.com/scop/bash-completion/commit/e00c1195427bb092473ec7f753262e5751642d0f))\n* scrub: New completion ([6b5c8d4](https://www.github.com/scop/bash-completion/commit/6b5c8d4dc5ff49e84839279ca581202acc37fce5))\n* ecryptfs-migrate-home: New completion ([3f90f09](https://www.github.com/scop/bash-completion/commit/3f90f09f1b8dc32f9ffb55566bfe8ed88418c52b))\n* h*: Support completing arg of last bundled short option ([1c126ff](https://www.github.com/scop/bash-completion/commit/1c126ff5c64006edc58e33d8bee4546bafb49405))\n* i*: Support completing arg of last bundled short option ([665088a](https://www.github.com/scop/bash-completion/commit/665088ae3925e9d60352b898f35c449420702834))\n* test: Skip scrub -p test when its --help doesn't list available patterns ([9039d77](https://www.github.com/scop/bash-completion/commit/9039d771b63b562276151239c38f760418a9e5f4))\n* lftp: Support completing arg of last bundled short option, handle -s ([ff07e56](https://www.github.com/scop/bash-completion/commit/ff07e569964809400c652e4949c663e80a66fab1))\n* xgamma: Comment spelling fix ([6119b2c](https://www.github.com/scop/bash-completion/commit/6119b2cf0bd96b432482c3361634140a04a77f81))\n* links: Install completion for links2 too ([b1fbe75](https://www.github.com/scop/bash-completion/commit/b1fbe75475c140a7047cf8208650562332ef57ac))\n* iconv: Split charset completion to _iconv_charsets, add test case ([cefd0da](https://www.github.com/scop/bash-completion/commit/cefd0daf30e7022bdbce98de88dca5ba6244c1a5))\n* _filedir: Refactor to remove heredoc-dependent loop ([6ffde95](https://www.github.com/scop/bash-completion/commit/6ffde95c7ea257ff60cb51a263a8d33f4bb0898b))\n* _filedir: Drop unnecessary evals ([7be0dd6](https://www.github.com/scop/bash-completion/commit/7be0dd6c9556c264dfa0fe1b6a8f4d19a2216473))\n* wget: Remove nonexistent arg to _ip_addresses ([9214270](https://www.github.com/scop/bash-completion/commit/92142707893641834e177f6a928160878d6b0506))\n* _ip_addresses: Add option to complete all/v4/v6 addresses, add unit test ([dc72400](https://www.github.com/scop/bash-completion/commit/dc724002cb0291880a2daacc51f2e7ad4cf2950d))\n* links: Major rework, parse options from --help, add option arg completion ([173e104](https://www.github.com/scop/bash-completion/commit/173e1045361404cd9a765438885652cdcb5cef3b))\n* iperf, nc: Include IPv6 addresses in bind address completions ([209b16b](https://www.github.com/scop/bash-completion/commit/209b16bf0888ce6367c06d256e43afffa33a8d90))\n* chmod: New completion ([9501226](https://www.github.com/scop/bash-completion/commit/9501226cb139ac828c5079cb7c079d00277468c8))\n* json_xs: New completion ([1433694](https://www.github.com/scop/bash-completion/commit/143369404d844111a7f4cbd6f19cda16d3738d16))\n* README: Add Q/A on overriding a completion, modernize local install answer ([22e9a02](https://www.github.com/scop/bash-completion/commit/22e9a020adf1ab73896411ca2f3712a445062727))\n* build: Do cmake, pc, and profile variable replacements in Makefile ([81ba2c7](https://www.github.com/scop/bash-completion/commit/81ba2c7e7dfbaefbafa1e8615727c9612e5fb314))\n* build: Use AC_PROG_SED to locate sed ([3031df3](https://www.github.com/scop/bash-completion/commit/3031df31aba36be8fef11186a7bff5163433bae4))\n* pkg-config: Complete on *.pc files ([d8667ae](https://www.github.com/scop/bash-completion/commit/d8667ae379fa325ecd43626fe9cfd5e955450e85))\n* build: Improve cleanup of test/log and test/tmp dirs ([103db12](https://www.github.com/scop/bash-completion/commit/103db12fd29746ec88f69849842fa3d2f9d251d0))\n* test: Run perlcritic and flake8 on perl and python helpers in Travis ([da18668](https://www.github.com/scop/bash-completion/commit/da18668c64bcaa061db00ce17c86fb4dc39ac7dc))\n* lzma: Use _parse_help instead of hardcoded option list ([bca4c60](https://www.github.com/scop/bash-completion/commit/bca4c6002e9381310b3563551bf09b3865c15238))\n* [jkl]*: Support completing arg of last bundled short option ([9ab622e](https://www.github.com/scop/bash-completion/commit/9ab622e76be185380f627c68cd090e69d7b8466a))\n* __load_completion: Avoid bad array subscript on \"commands\" ending with slash ([583562b](https://www.github.com/scop/bash-completion/commit/583562b9e56207bd428497ceb96df4e1f1f53158))\n* aclocal, automake: Support versioned 1.16 executables ([485d6de](https://www.github.com/scop/bash-completion/commit/485d6de3909f9d8c83eb38c0a1797ba448a3a754))\n* test: Mark psql etc test cases untested if --help doesn't work ([e8e7a15](https://www.github.com/scop/bash-completion/commit/e8e7a154b2dbcad08b02396f114017d3caf02ac4))\n* _xspecs: Declare as global on bash >= 4.2 ([a47bd37](https://www.github.com/scop/bash-completion/commit/a47bd375bb0f95dc6d388d4097c420bddb72ae33))\n* README: Note $BASH_COMPLETION_USER_DIR ([8c67dad](https://www.github.com/scop/bash-completion/commit/8c67dadc402a370e082b372b2df7a9702ab72623))\n* README: Add instructions for overriding completions system wide ([7cbbf35](https://www.github.com/scop/bash-completion/commit/7cbbf353403292395dd4d3c04e506162a457c336))\n* pytest: Rename from py.test to follow upstream recommended name ([fbf2981](https://www.github.com/scop/bash-completion/commit/fbf298186fa94f001ae2ef01b4716e14fe8a544d))\n* rpm: Complete --licensefiles with -q ([fb13b2e](https://www.github.com/scop/bash-completion/commit/fb13b2ef4e7a10bf29ec30301bb8b2fc8654caf3))\n* ngrep, tshark: Complete on *.pcapng too ([550728e](https://www.github.com/scop/bash-completion/commit/550728eb93224da5442f6e9339cbb879a2af7300))\n* ifquery: New ifup alias completion ([932d0be](https://www.github.com/scop/bash-completion/commit/932d0be8904c3a65eb32d784a4b517ad68bf93da))\n* _count_args: Add support for not counting specified option args ([daf010a](https://www.github.com/scop/bash-completion/commit/daf010ad945d84f48ef672ab4905d56e34ad1886))\n* ifup etc: Add option and option argument completion ([f499aa3](https://www.github.com/scop/bash-completion/commit/f499aa3d3dc985d62e99b46198300ce19e0f9d2a))\n* ssh, scp, sftp: Support completing arg of last bundled short option ([645d901](https://www.github.com/scop/bash-completion/commit/645d90167c9d7cd737f49961a0730d9cb892f95b))\n* completions/Makefile.am: Use install-data-hook, not install-data-local ([ee6b37a](https://www.github.com/scop/bash-completion/commit/ee6b37ad7ff5b309cbb9b886a871252abd9398fa))\n* mplayer: Add common supported module music formats ([c2d4221](https://www.github.com/scop/bash-completion/commit/c2d4221655bc2267b8d992489316006a73cee498))\n* mplayer: Associate with *.S[3T]M, *.med, *.MED ([264fb85](https://www.github.com/scop/bash-completion/commit/264fb85647b4b70362cf5a34a69612e241e7fdf3))\n* minicom: Use _parse_help instead of hardcoded option list ([62578a3](https://www.github.com/scop/bash-completion/commit/62578a356387465ecdc878a6e3bb66395bf2b5b1))\n* modinfo: Use _parse_help instead of hardcoded option list ([1397fa7](https://www.github.com/scop/bash-completion/commit/1397fa72a918f5344798faf79273067ffa324345))\n* m*: Support completing arg of last bundled short option ([8f82fd9](https://www.github.com/scop/bash-completion/commit/8f82fd98cc56ac6973ff01407784c3c76b0e462a))\n* mysqladmin: Reuse --default-character-set completion from mysql ([b984e6a](https://www.github.com/scop/bash-completion/commit/b984e6a04a70088ac9c0d6bdb59279274b8a7137))\n* mysql, mysqladmin: Complete --ssl-{ca,cert,key} option arg ([d5ee055](https://www.github.com/scop/bash-completion/commit/d5ee055d6c30b6bc27a28547533912eb7e6b7bd2))\n* modinfo: Fall back to _parse_usage if _parse_help yields no results ([d2f55d0](https://www.github.com/scop/bash-completion/commit/d2f55d0d04eafc24d4a74a15c87d029b43942007))\n* cryptsetup, nc, sh: Skip option args when counting arguments ([11dee0e](https://www.github.com/scop/bash-completion/commit/11dee0e0497210443cf7a32c16ce913a62e449db))\n* cryptsetup: Add some option arg (non-)completions ([68295cc](https://www.github.com/scop/bash-completion/commit/68295cc7f40063e75ddaab0f08b90dcc5a653998))\n* n*: Support completing arg of last bundled short option ([02a13f7](https://www.github.com/scop/bash-completion/commit/02a13f7f0eda6db3e0017a625863c5c43af43829))\n* profile.d: Avoid tested variable values being confused as [ ] operators ([3f1c884](https://www.github.com/scop/bash-completion/commit/3f1c884bef639af2cae959b04b87fb3a41eeeb7d))\n* passwd: Try _parse_help before _parse_usage to parse options ([16e82b8](https://www.github.com/scop/bash-completion/commit/16e82b8c27a4ccce0cc0c4f203617f747d427b5f))\n* [op]*: Support completing arg of last bundled short option ([5a654a8](https://www.github.com/scop/bash-completion/commit/5a654a834a44c9569b527b543b39fbe969efbe74))\n* pyvenv: Support versioned 3.6-3.8 executables ([b0de719](https://www.github.com/scop/bash-completion/commit/b0de7196c1e211f0f832c8d7af3ce38f85f1ab94))\n* querybts: Use _parse_help, not hardcoded option list, misc improvements ([00de26b](https://www.github.com/scop/bash-completion/commit/00de26bf42b9d389dae36787386e4a2ab0cf6c1b))\n* reportbug: Run _parse_help and apt-cache more selectively ([ecdcdb5](https://www.github.com/scop/bash-completion/commit/ecdcdb5f240a2a63accaa1c5da35eb74fdbacef4))\n* [qr]*: Support completing arg of last bundled short option ([13579f2](https://www.github.com/scop/bash-completion/commit/13579f2426ca88b1ae966bea3abc6a6326d99e83))\n* jq: New completion ([8d57c41](https://www.github.com/scop/bash-completion/commit/8d57c41995f17eef59506d79d44ec4276d2086cc))\n* tune2fs: Update -o/-O argument lists ([27efd8c](https://www.github.com/scop/bash-completion/commit/27efd8c1d66a47a5313c3467ce6b67b6b150ef90))\n* sqlite3: Add some option arg (non-)completions ([1c2b0d7](https://www.github.com/scop/bash-completion/commit/1c2b0d778bcaf19dc13844100af3627c6367cbad))\n* sshow: Add -p arg completion ([c2acf69](https://www.github.com/scop/bash-completion/commit/c2acf697c57ff931d1c943f69c2745b7cf5eea20))\n* strace: Use _parse_help instead of hardcoded option list ([77539a5](https://www.github.com/scop/bash-completion/commit/77539a50d6073be3b4972ed14069002e69b3d41b))\n* sudo: Parse options from help/usage output, add some long option support ([46d5d2d](https://www.github.com/scop/bash-completion/commit/46d5d2d4ea9be932a48f7e7de5a9e4ad2231a74b))\n* test: Add sysctl option parsing test case ([5b8b66a](https://www.github.com/scop/bash-completion/commit/5b8b66a3feaf73bfa9780e69d0308e1d2d367f1d))\n* sysctl: Recognize --pattern/-r and --load options ([0f63ecb](https://www.github.com/scop/bash-completion/commit/0f63ecb8234f97a6669a7ee0bb4a57cbe3e5cb54))\n* sudo: Improve long option arg handling ([ca3b1f6](https://www.github.com/scop/bash-completion/commit/ca3b1f664f0bfa92cc688909dee68937fd638286))\n* s*: Support completing arg of last bundled short option ([bd1d93c](https://www.github.com/scop/bash-completion/commit/bd1d93cede385001667f0ad205f4e900711b42c8))\n* jq, sqlite3: Protect against negative array subscripts ([bd3e2f2](https://www.github.com/scop/bash-completion/commit/bd3e2f297018bdbcd81b719f47c433d8e0aa1d17))\n* test: Support running with local BSD binaries, do it w/ ubuntu14 in CI ([2fe53fe](https://www.github.com/scop/bash-completion/commit/2fe53fef669a9dc077784bf3ab73db650d879ab2))\n* xdg-settings: Make help parsing work on BSD ([40f1c24](https://www.github.com/scop/bash-completion/commit/40f1c24fb3109c074efdea1f897b062afccb725e))\n* test: Skip jq option completion test if its --help doesn't list them ([e407508](https://www.github.com/scop/bash-completion/commit/e40750884e25700aa02f3e1ffb9a7662b05e9a47))\n* tracepath: Actually use our separate completion instead of _known_hosts ([b0c0d5e](https://www.github.com/scop/bash-completion/commit/b0c0d5e201a15857c065ccea204ddaf67accfef0))\n* tracepath: Add -m and -p arg non-completions ([a7ee04e](https://www.github.com/scop/bash-completion/commit/a7ee04e98f0c30cab5e53f852e6373e75872a30c))\n* urlsnarf: Add -p arg completion ([8cf0ce3](https://www.github.com/scop/bash-completion/commit/8cf0ce3dc6f73aa67cee59846d1ec828814fe222))\n* uscan: Use _parse_help instead of hardcoded option list ([d13306d](https://www.github.com/scop/bash-completion/commit/d13306d74fbe879398bdc86a7b0dc4fc9bd5534b))\n* [tu]*: Support completing arg of last bundled short option ([26cb739](https://www.github.com/scop/bash-completion/commit/26cb739d3cd1a1935f1b5e186090ea9dfd4847fd))\n* test: Fix iwspy test case ([886f4a1](https://www.github.com/scop/bash-completion/commit/886f4a1e3168b6e413e5a9cb60c2b3ed714c3734))\n* [vwx]*: Support completing arg of last bundled short option ([bbd6296](https://www.github.com/scop/bash-completion/commit/bbd629670ca291e10d1d9a7a68941025d94959e0))\n* fio: New completion ([c92a426](https://www.github.com/scop/bash-completion/commit/c92a4264fe8522de6040a14e8e6f9a3ed1ddf792))\n* ngrep: Add \"any\" to -d arg completions ([507d593](https://www.github.com/scop/bash-completion/commit/507d593962ed8a305e17ac7807704ee5fc4f9ae1))\n* tshark: Get available interfaces from -D output ([8d7d24d](https://www.github.com/scop/bash-completion/commit/8d7d24d949ba77cd26ae904614fffdbae05e5246))\n* pylint: Option arg completion improvements ([fe69cb5](https://www.github.com/scop/bash-completion/commit/fe69cb582b42a02aebd6ea59ce6449de43da7f4c))\n* mplayer: Associate with *.w64 ([6526596](https://www.github.com/scop/bash-completion/commit/6526596964b311a830507c5342818253212ec405))\n* test: Mark flake8 untested if it seems broken ([a5d490a](https://www.github.com/scop/bash-completion/commit/a5d490a330be979c47f3a2b61c608c83a1e3db45))\n* test: Limit number of wget option completions to avoid unresolved result ([4f242f2](https://www.github.com/scop/bash-completion/commit/4f242f2bd70bd0706061c81600402f2887d032f9))\n* travis: Split long lines in script ([d765f75](https://www.github.com/scop/bash-completion/commit/d765f756036907574bcf9ecdb2be6f8ddb7bc056))\n* travis: Run ubuntu14/bsd with no network ([64c1817](https://www.github.com/scop/bash-completion/commit/64c18170a44df5fe3a0c384f9b95cebe80405997))\n* pydoc, pylint: Skip module completion if current looks like a path ([bdd6458](https://www.github.com/scop/bash-completion/commit/bdd64589f2466f1bdab9708aa530536c66a13bc7))\n* gpgv: New completion ([ff65882](https://www.github.com/scop/bash-completion/commit/ff6588216dc1e789b091a27430e6d512f5bbfcb0))\n* extra/git-post-commit.sh: Add git post-commit Docker Hub trigger hook ([03442fa](https://www.github.com/scop/bash-completion/commit/03442face6795c56ba0b89eadcc8f7e1ba1b0f14))\n* _services: Try systemctl list-unit-files if systemctl list-units fails ([9f52c69](https://www.github.com/scop/bash-completion/commit/9f52c693d9eecd66f6a92343121a8230c32215b3))\n* test: Run docker tests with --verbose ([d45f902](https://www.github.com/scop/bash-completion/commit/d45f9020ae30b5c70e0ddf449a6e7877ea637f44))\n* test: Bump expect's match_max to 20000 by default ([bda6e45](https://www.github.com/scop/bash-completion/commit/bda6e453e79123b1adbc7b979f93437ad2e4bcf0))\n* test: Fix buffer size option listing in run --help ([eb21e66](https://www.github.com/scop/bash-completion/commit/eb21e663bd82e1a6e13fef2fe272fcf7ebde6850))\n* pylint: Implement comma separated --confidence arg completion ([5aee5d7](https://www.github.com/scop/bash-completion/commit/5aee5d77ebb7c1a1e242558f72b0a1dd178b9945))\n* pylint: Bring -f/--format arg completion up to date with pylint 1.9.2 ([7e6a220](https://www.github.com/scop/bash-completion/commit/7e6a22079bfab2f9eb38d4743e43cadb89880a59))\n* pydoc, pylint: Determine python2/3 based on command basename only ([fa6ec59](https://www.github.com/scop/bash-completion/commit/fa6ec59dfacdb7067575ad0c2d13b8494fbd4397))\n* test: Limit number of pylint option completions ([9f75f4b](https://www.github.com/scop/bash-completion/commit/9f75f4bcd2da48dc24d9e5a0f8cce5658c164d94))\n* test: Add pylint-3 test case ([c401847](https://www.github.com/scop/bash-completion/commit/c40184702676816ea79cd1746867ffc1e5311e8d))\n* git-post-commit: Avoid some error trash when HEAD is not a symbolic ref ([579b733](https://www.github.com/scop/bash-completion/commit/579b73367d9437c1c5b33653d26be11c4a2a19b4))\n* tox: Fall back to --listenvs for env list if --listenvs-all fails ([6009de8](https://www.github.com/scop/bash-completion/commit/6009de8534cd24b71d0bfda479823abcc640e4b1))\n* test: Start converting test suite to pytest+pexpect ([641173e](https://www.github.com/scop/bash-completion/commit/641173e04e9819134a9ad1b02a4217f61bf7882c))\n* test: Update generate for pytest+pexpect ([8b1d916](https://www.github.com/scop/bash-completion/commit/8b1d916faf9841a6bbc09a36f2ba84049ce5be40))\n* test: Convert first bunch of completions to pytest+pexpect ([ff4289f](https://www.github.com/scop/bash-completion/commit/ff4289f9f2994eb807f4c0a9ec996fd78542e8c3))\n* test: Don't include our magic mark in completions ([d8712ad](https://www.github.com/scop/bash-completion/commit/d8712ad6a89827fef871e10c082a7fd2b533a337))\n* test: Fix completion list when there's one completion ([4fc8f71](https://www.github.com/scop/bash-completion/commit/4fc8f718d5bb0550c9e88452c43ce69437bfba57))\n* test: Convert remaining simple x* to pytest+pexpect ([ae9b3a9](https://www.github.com/scop/bash-completion/commit/ae9b3a9e8313e8403acfbb1d453dd2691f0c60c1))\n* test: Improve generate to handle basic args and problematic chars ([6fc2de1](https://www.github.com/scop/bash-completion/commit/6fc2de1b362dfbffa3d9156c68490d47259ba82e))\n* test: Convert trivial [u-z]* test cases to pytest+pexpect ([ac47b5c](https://www.github.com/scop/bash-completion/commit/ac47b5c49a9e8e2434bb33a86d687f347d6d03cb))\n* test: Add some additional simple completion test cases ([b2e0c51](https://www.github.com/scop/bash-completion/commit/b2e0c51ed5198bae5d9e1218f16967450eff93eb))\n* test: Use make pytest docker executable env-configurable, default pytest-3 ([2473d1f](https://www.github.com/scop/bash-completion/commit/2473d1f9490dd3cca631a8fb5e9722e0812e4cd0))\n* test: Use /root/.local/bin/pytest on centos6 by default ([6164b45](https://www.github.com/scop/bash-completion/commit/6164b45a48a5a058dcdfa7f5562ade4a126fc431))\n* test: Convert trivial t* test cases to pytest+pexpect ([4205d79](https://www.github.com/scop/bash-completion/commit/4205d7921caa09edae4a183133591fa2817e727c))\n* test: Convert trivial s* test cases to pytest+pexpect ([cd11331](https://www.github.com/scop/bash-completion/commit/cd113319ba73d14f6ed73782365902e6d938f10c))\n* test: Add new test files to EXTRA_DIST ([6130867](https://www.github.com/scop/bash-completion/commit/6130867362edd027183303aa174d2005e405a59c))\n* test: Add generated test files to t/Makefile.am automatically ([a672f55](https://www.github.com/scop/bash-completion/commit/a672f550aa0216b21ce8275a93cddb592e639481))\n* test: Convert trivial [qr]* test cases to pytest+pexpect ([2b79b27](https://www.github.com/scop/bash-completion/commit/2b79b273ce80bdd076335af22249929b7d3c09af))\n* test: Use /root/.local/bin/pytest on ubuntu14 by default ([36f73ad](https://www.github.com/scop/bash-completion/commit/36f73ad8a9a6cd7f29483823025c8ed06af2966c))\n* test: Convert trivial o* test cases to pytest+pexpect ([9ba87c3](https://www.github.com/scop/bash-completion/commit/9ba87c39a75b17b46894ad47217d83df2b5fe051))\n* test: Bulk convert lots of trivial test cases to pytest+pexpect ([cdb9a22](https://www.github.com/scop/bash-completion/commit/cdb9a224868449fefbe6447c5475b749d5a3851c))\n* test: Bulk convert some more trivial test cases to pytest+pexpect ([e546577](https://www.github.com/scop/bash-completion/commit/e5465771b901ac59fbbd67d121d26654e076c79a))\n* test: Make \"generate\" do the right thing with more partial args ([45d5ad9](https://www.github.com/scop/bash-completion/commit/45d5ad98adca66e20a6384aa825f492939d600c9))\n* test: Convert some more trivial test cases to pytest+pexpect ([de97e77](https://www.github.com/scop/bash-completion/commit/de97e775e08b4c60f93908927d85b45860e91dc2))\n* test: Convert some more trivial test cases to pytest+pexpect ([8c9c4f1](https://www.github.com/scop/bash-completion/commit/8c9c4f12d72c2b275e8d6d34edb2cf560d1aa93a))\n* test: Convert some more trivial test cases to pytest+pexpect ([5cab3b3](https://www.github.com/scop/bash-completion/commit/5cab3b32dcb22f585f16b4a34007b053bad90cc6))\n* test: Convert some more trivial test cases to pytest+pexpect ([cb17e4b](https://www.github.com/scop/bash-completion/commit/cb17e4be72e2ccf0c2704e97faa13ada8d22acac))\n* test: Treat non-dash args better in generate ([ecfa09d](https://www.github.com/scop/bash-completion/commit/ecfa09d4a5629d3adbc502940156db5498922049))\n* iperf: Add g/G to --format completions ([cfef384](https://www.github.com/scop/bash-completion/commit/cfef3841d1f38b724d1209a9e43885cde5b89b97))\n* iperf: Install for iperf3 too ([a520baa](https://www.github.com/scop/bash-completion/commit/a520baa0c68fabf283129521c2a59bc2e9597805))\n* iperf: Improve client/server specific option parsing ([51863c4](https://www.github.com/scop/bash-completion/commit/51863c4604771e04f7dca2f6f1a960fc7558b723))\n* xmodmap: Use _parse_help instead of hardcoded option list ([fa278dc](https://www.github.com/scop/bash-completion/commit/fa278dcf99bfae48ced96740712b231f069c1447))\n* iperf: Add g/G to --format completions ([a2277c0](https://www.github.com/scop/bash-completion/commit/a2277c0857ce13c2b4ada55206af72482c6c7d71))\n* iperf: Install for iperf3 too ([e4425bd](https://www.github.com/scop/bash-completion/commit/e4425bd5d36d94b2682c8ffb7cb60d91e8814be6))\n* iperf: Improve client/server specific option parsing ([c187063](https://www.github.com/scop/bash-completion/commit/c187063b955f837f9bbd22ec52ca4133aeac7d39))\n* xmodmap: Use _parse_help instead of hardcoded option list ([1b60881](https://www.github.com/scop/bash-completion/commit/1b608812e47a091933b685d01bcbed03dd2107f1))\n* test: Add some iperf, iperf3 and xmodmap test cases ([b3acc94](https://www.github.com/scop/bash-completion/commit/b3acc9412937abd92a9ff4d7a34515520df56b5c))\n* test: Make test base work with Python 3.3+ ([83e91da](https://www.github.com/scop/bash-completion/commit/83e91da21d33be89f0aa2a07a0706b4910f4ba2c))\n* test: Add support for pytest pre-test commands ([ccba78d](https://www.github.com/scop/bash-completion/commit/ccba78d32a82c2081d5d08beed2887f944f96335))\n* test: Convert some more test cases to pytest+pexpect ([987aa3d](https://www.github.com/scop/bash-completion/commit/987aa3d50cc3a5c6b1dd8620cd5c5c7ed7eb1d2e))\n* test: Add support for skipping individual tests based on shell command status ([6a4d824](https://www.github.com/scop/bash-completion/commit/6a4d8245f6919550f18c4534a25fd59f61d11437))\n* test: Convert some more test cases to pytest+pexpect ([8145625](https://www.github.com/scop/bash-completion/commit/81456254bb4e09a09447a4429c923e478088327b))\n* test: .gitignore pytestdebug.log ([24c66c1](https://www.github.com/scop/bash-completion/commit/24c66c1184c7f38d3c56fe6d4fcf8b8e38fc2514))\n* test: Convert some more test cases to pytest+pexpect ([27053d1](https://www.github.com/scop/bash-completion/commit/27053d104ce140291e9d2b024c313167facaf2e3))\n* test: Add support for running test case in a specified dir ([339874f](https://www.github.com/scop/bash-completion/commit/339874fdc5a5f9805fec6aaee0c4dd0f24febb6e))\n* test: Convert some more test cases to pytest+pexpect ([ed64828](https://www.github.com/scop/bash-completion/commit/ed64828e9f5c883946e93771b7d9a4f1bdaa0323))\n* test: Fix some regressions introduced in recent test conversions ([aaaa60d](https://www.github.com/scop/bash-completion/commit/aaaa60d67fea6322f54e2a79cb83b02f4f254e32))\n* test: Convert some more test cases to pytest+pexpect ([038fd4e](https://www.github.com/scop/bash-completion/commit/038fd4e2c92ebf487ca936edff2bd3cc6512706c))\n* test: Convert some more test cases to pytest+pexpect ([c32a405](https://www.github.com/scop/bash-completion/commit/c32a405000539483a4c5ad3527e297b640dd76b3))\n* test: Convert some more test cases to pytest+pexpect ([e0be296](https://www.github.com/scop/bash-completion/commit/e0be296af493d3998dca9acb44f82dce636af106))\n* test: Include command name in test class name, use numbered test method names ([649cd43](https://www.github.com/scop/bash-completion/commit/649cd43616fdba56648fbccaf5194c2a6022587d))\n* test: Convert some more test cases to pytest+pexpect ([aece7ad](https://www.github.com/scop/bash-completion/commit/aece7ad1bbc1870ba1016f00e9047094734a480a))\n* test: Add class level skipif based on bash exec result ([ae723ed](https://www.github.com/scop/bash-completion/commit/ae723ed0504c45afc1bb34fdc65d5329094ce083))\n* test: Add python3 test case ([9a0fddc](https://www.github.com/scop/bash-completion/commit/9a0fddc85b8f4d7c85446ea8e0e976187a4a4658))\n* test: Convert some more test cases to pytest+pexpect ([c5300cd](https://www.github.com/scop/bash-completion/commit/c5300cd5571cc432e277a8d9aff35f6f2d23eb8f))\n* test: Rename BASHCOMP_* test env variables to BASHCOMP_TEST_* ([2fa7566](https://www.github.com/scop/bash-completion/commit/2fa75666ee48edc744db322621398a4ffcc07d7d))\n* test: Log pexpect interaction to $BASHCOMP_TEST_LOGFILE if set ([5198bf5](https://www.github.com/scop/bash-completion/commit/5198bf5328fb5f6875b3b7c010e89efd6c92417a))\n* test: Pass through $HOME and $DISPLAY to test bash ([2c32433](https://www.github.com/scop/bash-completion/commit/2c3243300316d3ebff18045cb4e0f162a41a5fce))\n* test: Fixture reorganization ([c677b8e](https://www.github.com/scop/bash-completion/commit/c677b8e09bee213b6392dc4cd7364989ebb4f9a4))\n* test: Add ability to selectively ignore diffs in environment ([e575c8e](https://www.github.com/scop/bash-completion/commit/e575c8ed1e3e2f84c92c845790d50d5b31426e60))\n* test: Implement load_completion_for using assert_bash_exec ([dd9a6eb](https://www.github.com/scop/bash-completion/commit/dd9a6ebd14bec202ddf7809e2a18075e7e5bdcb4))\n* test: Convert some more test cases to pytest+pexpect ([73f05ba](https://www.github.com/scop/bash-completion/commit/73f05bad0c3db9dcee3572b8143ff13678951ad3))\n* test: Replace + with Plus in test class names ([d1c2c72](https://www.github.com/scop/bash-completion/commit/d1c2c72b9a79b97cc53b186d9c681a62f0a721c7))\n* test: Mark xfreerdp as expected failure for now ([489dc30](https://www.github.com/scop/bash-completion/commit/489dc30682529d2c2cce54f02bce8da1ec54e742))\n* test: Convert some more test cases to pytest+pexpect ([fff2fa3](https://www.github.com/scop/bash-completion/commit/fff2fa3098423cb1e2cfe52762c8fcf4a48fe5ee))\n* test: chdir to fixtures dir in Python as well ([08a89c0](https://www.github.com/scop/bash-completion/commit/08a89c08d531333966f54a70942d0c44a703856a))\n* test: Allow __load_completion to fail ([4abf2ba](https://www.github.com/scop/bash-completion/commit/4abf2bae1b5fcf58c6b981fcebf907ac83fe7107))\n* test: Sort completion results in Python for ease of use in Python tests ([f40cfe0](https://www.github.com/scop/bash-completion/commit/f40cfe0dfa40f2e7d6db68d370aa98ec2cbbd7b3))\n* test: Convert some more test cases to pytest+pexpect ([9e6ed13](https://www.github.com/scop/bash-completion/commit/9e6ed13f4936058e1042ad34558b95c1f46472c4))\n* test: Use more conventional Python file names for tests ([9c278da](https://www.github.com/scop/bash-completion/commit/9c278dada33667ff7edcfda2c21115fb8662909f))\n* test: Add support for per-test env modifications ([be3d073](https://www.github.com/scop/bash-completion/commit/be3d0735e78f1d3bc0e8eff17fcff86921bed6d4))\n* test: Don't require complete marker on test methods ([9d15992](https://www.github.com/scop/bash-completion/commit/9d1599228b07da22b6ec3ae876797ce3af1bbda8))\n* test: Fix jq and scrub skipif commands ([b7840bf](https://www.github.com/scop/bash-completion/commit/b7840bfccefe79189b782135aa85076723d72e24))\n* test: Convert some more test cases to pytest+pexpect ([ba4c972](https://www.github.com/scop/bash-completion/commit/ba4c972333bfbf86dbc94ccc9ed406b1883eb424))\n* test: Misc test suite fixes ([d1f983a](https://www.github.com/scop/bash-completion/commit/d1f983a9f5cdccaeb148b64f6887001c9182a8b0))\n* test: Convert some more test cases to pytest+pexpect ([ff1e0af](https://www.github.com/scop/bash-completion/commit/ff1e0afb01a8d4a655865cf40c0a46a25405454c))\n* test: Convert some more test cases to pytest+pexpect ([044e5da](https://www.github.com/scop/bash-completion/commit/044e5da3169137c8d777ab87cde5424430f65c66))\n* test: Misc test suite fixes ([6de89eb](https://www.github.com/scop/bash-completion/commit/6de89eb37d459d9a455ab7bb42c5fcbd97c5077c))\n* test: Convert some more test cases to pytest+pexpect ([75628f7](https://www.github.com/scop/bash-completion/commit/75628f77b481ed73120f9101e31e983057a16756))\n* test: Support setting cmd=None to require no command, for unit tests ([8884ceb](https://www.github.com/scop/bash-completion/commit/8884cebab72ae8d8ac3873d595ff501c3b54e27a))\n* test: Convert some more test cases to pytest+pexpect ([416fc05](https://www.github.com/scop/bash-completion/commit/416fc05ac24105a70f719419241fcff248827204))\n* test: Convert some more test cases to pytest+pexpect ([c85516b](https://www.github.com/scop/bash-completion/commit/c85516be79397c24ade9c12c89fd77f364f1ad46))\n* test: Use test_unit_* prefix for unit tests, to avoid name clashes ([c7b3427](https://www.github.com/scop/bash-completion/commit/c7b3427cb085d02b7559604489ded675752f58d1))\n* test: Convert some more test cases to pytest+pexpect ([d5b0d1b](https://www.github.com/scop/bash-completion/commit/d5b0d1b0a98fcea8de578a31e943d0187e4f1995))\n* test: Misc test suite fixes ([fddc36f](https://www.github.com/scop/bash-completion/commit/fddc36f36312eee100283d93baacf22a73952823))\n* test: Convert some more test cases to pytest+pexpect ([35e94b7](https://www.github.com/scop/bash-completion/commit/35e94b736a1304344a28430127bc5cae059dac63))\n* test: Misc test suite fixes ([e50dfec](https://www.github.com/scop/bash-completion/commit/e50dfeca93957f9b043538df6f7aa779d1f7f7e6))\n* test: Convert some more test cases to pytest+pexpect ([3ca2039](https://www.github.com/scop/bash-completion/commit/3ca20396fdb398c6c52956efe682c9d468da7266))\n* test: Convert some more test cases to pytest+pexpect ([451b3d1](https://www.github.com/scop/bash-completion/commit/451b3d1187547550cc382b2ee94c234dcf52d32b))\n* gccgo: Add as a GCC completion target (#227) ([ec9aefa](https://www.github.com/scop/bash-completion/commit/ec9aefa37fc9b0b53c004481402221e517a3a3ae))\n* gcc: Add g++, gcc, gccgo, and gfortran *-7 aliases ([bea1d6a](https://www.github.com/scop/bash-completion/commit/bea1d6a2419412513f11918f20fa74fd1f229403))\n* __load_completion: Avoid unnecessary lookups from nonexistent dirs ([f2b76a1](https://www.github.com/scop/bash-completion/commit/f2b76a1eb254bb6399c5d7a10bec659b691704e4))\n* unzip, zipinfo: Associate with *.whl ([df8bc32](https://www.github.com/scop/bash-completion/commit/df8bc32be0989cef6c4baaa30230848f9d1ea4ad))\n* test: Misc test suite fixes ([d1b0a75](https://www.github.com/scop/bash-completion/commit/d1b0a756a68e234b78861abf51b40f89123548d0))\n* test: Make case specific env entries shell code, not escaped ([703dcb8](https://www.github.com/scop/bash-completion/commit/703dcb860e2523f684479f73bb5caf14517d86d2))\n* test: Convert some more test cases to pytest+pexpect ([0518f62](https://www.github.com/scop/bash-completion/commit/0518f62c0c17fa48c574fe2cb915f8a75f87ab59))\n* test: Pylint fixes ([bbf6ff1](https://www.github.com/scop/bash-completion/commit/bbf6ff116f4be7236af996b014c24524513fe3e8))\n* test: Remove kill, killall remnants ([8e21442](https://www.github.com/scop/bash-completion/commit/8e214425bd53f6a7338e96b34748653abda781c2))\n* test: Mark MANPATH without leading/trailing colons test an xfail on CI CentOS 6 ([896aac9](https://www.github.com/scop/bash-completion/commit/896aac9b68cab927abf2351f4ea1041d30277156))\n* nc: Add some more option (non-)completions ([4d88339](https://www.github.com/scop/bash-completion/commit/4d88339928aa064a567d5feb40694dfd24a274c5))\n* test: Convert some more test cases to pytest+pexpect ([3f84586](https://www.github.com/scop/bash-completion/commit/3f8458652a65ad761b9b7f771385295c0cb43f73))\n* test: Pylint fixes ([1389110](https://www.github.com/scop/bash-completion/commit/13891101fc4e11b5fb9eab10b215f1caf501dc65))\n* test: Convert some more test cases to pytest+pexpect ([0db4768](https://www.github.com/scop/bash-completion/commit/0db4768883afbe01ec5f7333ee25289dee0eebd4))\n* test: Convert some more test cases to pytest+pexpect ([b6f4e50](https://www.github.com/scop/bash-completion/commit/b6f4e500b2389e92b69014cf316e521ac98c567a))\n* test: Convert some more test cases to pytest+pexpect ([23da5e6](https://www.github.com/scop/bash-completion/commit/23da5e63b7cee02e7f405f96cf8957b007abaf94))\n* firefox etc: New non-xspec completion ([ab572bb](https://www.github.com/scop/bash-completion/commit/ab572bbf1bd33785cf0c53b7c4ba87144413ea34))\n* chromium-browser, google-chrome*: New non-xspec completion ([9db48eb](https://www.github.com/scop/bash-completion/commit/9db48eb67e9a9b4479913f06b2384a6087051e81))\n* test: Convert some more test cases to pytest+pexpect ([f0f0976](https://www.github.com/scop/bash-completion/commit/f0f097642fb3aa8d91c403646367b65bddd2820f))\n* doc: Start documenting new pytest+pexpect tests ([58499ba](https://www.github.com/scop/bash-completion/commit/58499ba3c9d57ac2a08d9a8de29240e58d19de33))\n* mplayer etc: Complete on *.crdownload partial downloads in addition to *.part ([2837a48](https://www.github.com/scop/bash-completion/commit/2837a48c7954116b4e6d4e1c911798b6e54f6c68))\n* freeciv-gtk2: Install for freeciv and freeciv-gtk3, rename to freeciv ([f253e1e](https://www.github.com/scop/bash-completion/commit/f253e1e8edb4f7bd307afc5e7171e7995a4cb998))\n* freeciv: Option and arg completion updates ([fcaff16](https://www.github.com/scop/bash-completion/commit/fcaff164be94317b7cafbd05a5f5826105382df5))\n* isort: New completion ([c2dd674](https://www.github.com/scop/bash-completion/commit/c2dd6745661d886327bb79591a6c6911f6f5c3f6))\n* gnome-screenshot: New completion ([4581c6f](https://www.github.com/scop/bash-completion/commit/4581c6fe9715a57337af06648daad78d5d326d0e))\n* perlcritic: New completion ([2f8da81](https://www.github.com/scop/bash-completion/commit/2f8da814f715327db0f509c8e409e237fc9d5ff8))\n* gcc: Add g++, gcc, gccgo, and gfortran *-[568] aliases ([c9c14da](https://www.github.com/scop/bash-completion/commit/c9c14da4d32f3713b3a28e5c706f92a6f0903d35))\n* test: Remove leftover completion/ls.exp ([46ff7b3](https://www.github.com/scop/bash-completion/commit/46ff7b378430c5a3f456d2b096f9d16925f3f231))\n* tshark: update -T and -t completions ([5869351](https://www.github.com/scop/bash-completion/commit/58693518ecb561e7f7e9a0d4b6767cbf18f4238d))\n* tshark: prevent a single-character file from breaking -G completion ([8618ea5](https://www.github.com/scop/bash-completion/commit/8618ea52e48e55f04f001f0b90955b2a4a157e33))\n* tshark: support .gz and .cap files for -r expansion ([a250248](https://www.github.com/scop/bash-completion/commit/a25024815f43b99e9b77a2991ecc9ab16bfe7f41))\n* xmllint: Improve --encode, --pretty, and --xpath arg (non-)completions ([cf5fe10](https://www.github.com/scop/bash-completion/commit/cf5fe10fe03f67f6d477aef04585277fda3d3ee4))\n* chromium-browser: consider chrome and chromium as aliases ([58da331](https://www.github.com/scop/bash-completion/commit/58da33199ff84bf12ae561071a15fa825fda8487))\n* conftest: fix RemovedInPytest4Warning due to use of node.get_marker ([9249a2a](https://www.github.com/scop/bash-completion/commit/9249a2a9005a3b9c91ff6e432dd96337688254f6))\n* doc: Some pytest install clarifications ([e463b89](https://www.github.com/scop/bash-completion/commit/e463b89d600cc6a2d040556e24090a083f5c98cd))\n* test: fix flake8 complaints about unused imports ([27a9856](https://www.github.com/scop/bash-completion/commit/27a98567e3027fa006b3e4ee2702b14e5077d10d))\n* test: fix misinterpretation of completion output in tests ([85275cf](https://www.github.com/scop/bash-completion/commit/85275cf550433a90f4875845142ad93132b16820))\n* okular: Added support for xz-compressed files. ([0381d27](https://www.github.com/scop/bash-completion/commit/0381d275e085b63adf4842d0c6b3d41eeea02141))\n* hunspell: New completion ([eaecbf4](https://www.github.com/scop/bash-completion/commit/eaecbf4df704d43b27672a235e14cc3bf9d309b9))\n* op: New completion ([03ddd0b](https://www.github.com/scop/bash-completion/commit/03ddd0b4103d12b975a5a3be9c4b4627deae1e3a))\n* mypy: New completion ([12db483](https://www.github.com/scop/bash-completion/commit/12db483cdb08b4d602050f1ae63692e8d768fee2))\n* test: Convert remaining perl test cases to pytest+pexpect ([8aa8c84](https://www.github.com/scop/bash-completion/commit/8aa8c840ad636d4b31bdeaba63fb9d9a9e6c8fc1))\n* 7z: add .msi support ([d6b678c](https://www.github.com/scop/bash-completion/commit/d6b678cab235fa5b27fa4961bd4a92f19081b13d))\n* test: Convert more tar test cases to pytest+pexpect ([eaba3aa](https://www.github.com/scop/bash-completion/commit/eaba3aadf36751229b91215a24cb91bf3779ddb8))\n* dpkg: List held packages (#250) ([95042d0](https://www.github.com/scop/bash-completion/commit/95042d01826dd01340e09e948a2525a905e336d3))\n* makepkg: Use _parse_help instead of hardcoding option list ([bdbe5ef](https://www.github.com/scop/bash-completion/commit/bdbe5ef109d4942412e4f795bd29a7c79483832c))\n* test: Allow unknowns options in makepkg option completion ([9227e92](https://www.github.com/scop/bash-completion/commit/9227e920dbb35f47dcdf827e4561722ef0e8426f))\n* makepkg: Don't apply to other than Slackware makepkg ([d44e854](https://www.github.com/scop/bash-completion/commit/d44e8548cc8b8e4ee2656af7228248125de829eb))\n* locale-gen: New completion ([6176fd6](https://www.github.com/scop/bash-completion/commit/6176fd65af83cd7737d481d195030bdd0f92d1db))\n* test: Convert cancel test case to pytest+pexpect ([efd68b2](https://www.github.com/scop/bash-completion/commit/efd68b2b8b059328a7b39cc96bf4c236a0a55340))\n* cancel: Add some option arg (non-)completions ([9fcc52f](https://www.github.com/scop/bash-completion/commit/9fcc52fede350af591a9dad3295299afee5705aa))\n* cancel: Split long line ([896adae](https://www.github.com/scop/bash-completion/commit/896adaea7dbb703bb2b93879e5f293f2cf17063f))\n* test: Convert portinstall test case to pytest+pexpect (untested) ([da37fa3](https://www.github.com/scop/bash-completion/commit/da37fa341903565379523b6e85fb7626997e1879))\n* tar: Support completions for zstd compression extensions (#255) ([1d911cb](https://www.github.com/scop/bash-completion/commit/1d911cb0fe7ed2797d7ab16cd3858970b7dbae5c))\n* tar: Clean up some redundant code ([a143560](https://www.github.com/scop/bash-completion/commit/a143560f315ddfbe7c4662cba8a27b93137f425b))\n* ssh-copy-id: Add -i and -o arg (non-)completions ([f8d1280](https://www.github.com/scop/bash-completion/commit/f8d1280df57acfc1d0d49a9eb117f78cfb563ad3))\n* test suite: Ignore _scp_path_esc in env for ssh-copy-id ([84f40ab](https://www.github.com/scop/bash-completion/commit/84f40ab5dca1e70284e3bc56773b1de6a2974b68))\n* grpck: Add --root/-R arg completion ([5bd30be](https://www.github.com/scop/bash-completion/commit/5bd30be3990094f5ee6fc0468b6d24bc90465ebc))\n* grpck: Parse options with _parse_help, falling back to _parse_usage ([4f64fb0](https://www.github.com/scop/bash-completion/commit/4f64fb0d7ed7a83cd888e0f25d4050e26c20a060))\n* test: Add requirements.txt for installing dependencies ([b1192e2](https://www.github.com/scop/bash-completion/commit/b1192e26876ee01ae81b9dce2736a37beb9aeeba))\n* doc: Some test dependency doc updates ([9aaa0b8](https://www.github.com/scop/bash-completion/commit/9aaa0b80eb6798613781d8aa133975e5267eddcd))\n* _filedir_xspec: Fallback to suggesting all files if requested (#260) ([464c822](https://www.github.com/scop/bash-completion/commit/464c822ee44abb2f3d5a9f559099a303505668cf))\n* doc: Update docs on generating simple tests ([840f342](https://www.github.com/scop/bash-completion/commit/840f342d31c47debc9fdf69d6bb1733d24166608))\n* test: Expect failure in gkrellm if there's no X display ([eeb63ea](https://www.github.com/scop/bash-completion/commit/eeb63ead44b0eb28fe4c6f817a292f9a11e29436))\n* arp: New completion, somewhat incomplete ([a0d40e5](https://www.github.com/scop/bash-completion/commit/a0d40e53918a639a1550e4592871c86289badb78))\n* test: Be more consistent with \"CI\" env var examination and xfails ([0bfa552](https://www.github.com/scop/bash-completion/commit/0bfa5524f9ed318c5fcb44a4c73cdfb055bddc98))\n* unzip, zipinfo: Associate with *.xar (eXist-db application package) (#257) ([c263a3f](https://www.github.com/scop/bash-completion/commit/c263a3fc8ca098cb42eab88026e1ffa2fa809ec0))\n* test: Fix arp CI (non)expectations, remove redundant test case ([a7ece55](https://www.github.com/scop/bash-completion/commit/a7ece5532328f4901fa366f4ee23d9e3f7488674))\n* tcpdump: Various option and their arg completion updates ([e453c40](https://www.github.com/scop/bash-completion/commit/e453c401a9af815ea0c112f854fbca5a4e180d39))\n* doc: Note email issues gateway ([872164a](https://www.github.com/scop/bash-completion/commit/872164adb46a5c106442274d1cb9a56ecf88d723))\n* Travis: Remove unused PYTEST env var ([ff7bba7](https://www.github.com/scop/bash-completion/commit/ff7bba7eab63e32a456a97146145c08449b95ceb))\n* pydocstyle: New completion ([ebee700](https://www.github.com/scop/bash-completion/commit/ebee7008d2119c271f0ff216294b36fe9b2923c3))\n* test: Fix _count_args test_7 to test intended case ([7093e83](https://www.github.com/scop/bash-completion/commit/7093e8301852c0924dd94861e0d7ac47665bc761))\n* _count_args: Add 3rd arg for treating option-like things as args ([3809d95](https://www.github.com/scop/bash-completion/commit/3809d9558f2af6c63b675a1385f008f0ad3af388))\n* chmod: Fix file completion after modes starting with a dash ([75ec298](https://www.github.com/scop/bash-completion/commit/75ec298eaae391258da9418a55d3d47d855e5e9e))\n* .gitignore: Add pytestdebug.log ([3e9011a](https://www.github.com/scop/bash-completion/commit/3e9011aa012ef349d499f8ab96b019fe6b21e09a))\n* sysctl: Treat -f as alias for -p/--load ([76549bb](https://www.github.com/scop/bash-completion/commit/76549bb4e56bb4f968d686da52ca8b1ea46754a1))\n* xrandr: match the output name exactly for --mode ([3556fcb](https://www.github.com/scop/bash-completion/commit/3556fcbf478cbfe1ea631a98267056bb8a460240))\n* chmod: Fix \"-\" completion ([a269a60](https://www.github.com/scop/bash-completion/commit/a269a603207f5bf7b3a9eb17b8abeeb2159f159e))\n* _xspecs: Simplify bash version check ([ec630f5](https://www.github.com/scop/bash-completion/commit/ec630f50d62eb5599dd5c882da75681b69bf5608))\n* test: Remove some no longer used old test suite code ([a492414](https://www.github.com/scop/bash-completion/commit/a4924148f0c846cb8640fbc45e1a466058a16744))\n* tshark: Support preferences (-o) completion with memoization ([9b4098f](https://www.github.com/scop/bash-completion/commit/9b4098f748302568ff8c014f634fa822e962f029))\n* tshark: fix completion of -Xlua_script option ([50f52f7](https://www.github.com/scop/bash-completion/commit/50f52f77cf5c5339dfe7e1c3ff2991ea4a912c59))\n* test/t: Avoid trailing backslash in Makefile.am's to appease automake ([5c73b79](https://www.github.com/scop/bash-completion/commit/5c73b7948d924d48e84ea67000fdb7b07970f06b))\n* build: Include test/t in dist tarball ([698ef1d](https://www.github.com/scop/bash-completion/commit/698ef1dae56f366c729dd5c46cafc49e9fedb965))\n* test: Clean up and docker-ignore __pycache__ dirs ([a6916d6](https://www.github.com/scop/bash-completion/commit/a6916d682f5ded8e99c7918e27d6105e82cc7591))\n* test: Skip ifup options test if it doesn't grok --help, not in CI ([3780c80](https://www.github.com/scop/bash-completion/commit/3780c802fa6bdc915c4e667c003189c22d0f68bb))\n* test: Mark some xfails based on if in docker instead of in CI ([5af8f75](https://www.github.com/scop/bash-completion/commit/5af8f759b0ab7625e275873321db322c594bd750))\n* inotifywait: New completion ([8bea1ec](https://www.github.com/scop/bash-completion/commit/8bea1ec8f0e8a708bd22be5d7eddcdf37a19fcae))\n* _ip_addresses: Avoid completing ipv4 ones with -6 ([ebeecf8](https://www.github.com/scop/bash-completion/commit/ebeecf872dc0925e34177f862c371ad6e4010f08))\n* test: Convert _ip_addresses unit tests to pytest+pexpect, extend some ([186d47d](https://www.github.com/scop/bash-completion/commit/186d47dff33c8c2deea2c903dcc82f251a3d9bd0))\n* inotifywait: Avoid some false positive event names ([82a50b0](https://www.github.com/scop/bash-completion/commit/82a50b07719860a293c0dd12b53892ed3a86612d))\n* inotifywait: Fix -e completion with BSD sed ([cfa6432](https://www.github.com/scop/bash-completion/commit/cfa6432743b2107e4b7bba0ebe17a1dd8eac7ba7))\n* inotifywatch: New completion, common with inotifywait ([2aa57d1](https://www.github.com/scop/bash-completion/commit/2aa57d13202f15bf057ff5134ee6a56686032211))\n* man: Fix completion when failglob option is enabled (#225) ([b3a25cf](https://www.github.com/scop/bash-completion/commit/b3a25cfe429b8c87d9194c2d9042349ba71979c9))\n* test: Add pre_cmds support for completion fixture ([e56da98](https://www.github.com/scop/bash-completion/commit/e56da98dac7188b72c4df420c82452c438119636))\n* test: Add man failglob test case ([c1dd7f2](https://www.github.com/scop/bash-completion/commit/c1dd7f22995ba8c7c6064e47e2c557abdc2ddf78))\n* test: Rename completion.line to .output ([7d7032b](https://www.github.com/scop/bash-completion/commit/7d7032bfcfcd47f7ed3372c9c7ac95851d8402c0))\n* test: Match Python's default locale unaware sort in bash setup ([c46536a](https://www.github.com/scop/bash-completion/commit/c46536aa6e6e79764075800b5b747fea7e20bc2c))\n* test: Refactor/improve completion results checking ([0d9d375](https://www.github.com/scop/bash-completion/commit/0d9d375fed79651c8cd179df8bef032730506a5d))\n* __parse_options: Avoid non-zero exit status ([5ecb9d7](https://www.github.com/scop/bash-completion/commit/5ecb9d7e1372961f4f983b1fd0adaa273ac06bc4))\n* test: Convert remaining _parse_help unit test to pytest+pexpect ([a2c9da2](https://www.github.com/scop/bash-completion/commit/a2c9da2355e984eea8c9296e707bc77187d12b0d))\n* ifstat: New completion ([50251dc](https://www.github.com/scop/bash-completion/commit/50251dcaa79308c3926e331db944734d9aafa76e))\n* test: Fix test generation wrt results checking improvements ([39ab16a](https://www.github.com/scop/bash-completion/commit/39ab16a9be35c8942b2fa5371ea98ac1acb2a6ca))\n* iperf, iperf3: Add some option arg (non-)completions ([cd2b18a](https://www.github.com/scop/bash-completion/commit/cd2b18a53145f9f4dcca05ee583cc9b221d86f4f))\n* test: Convert remaining man test case to pytest+pexpect ([c10ece5](https://www.github.com/scop/bash-completion/commit/c10ece5f7646bbc7ffeb85943da1b45de85b8772))\n* ifstat: Make work with iproute2 version ([0b44673](https://www.github.com/scop/bash-completion/commit/0b4467343aeaab4d8760943bf26955505814b908))\n* test: Remove unnecessary autouse=True from fixtures ([cfd66c2](https://www.github.com/scop/bash-completion/commit/cfd66c236a19ec40dba7bfbf31cafff9cb537da9))\n* .gitignore: Add .python-version (for pyenv) ([2527706](https://www.github.com/scop/bash-completion/commit/2527706c0dbc65f125529101690087ad128d33ab))\n* test: Clean up man tmp dir ([e13640e](https://www.github.com/scop/bash-completion/commit/e13640eac170580211fed402473effc7f410670d))\n* test: Remove unnecessary ri xfail ([a4dd187](https://www.github.com/scop/bash-completion/commit/a4dd187c52e6270ae3dcc09c48a9f613b234f886))\n* jsonschema: New completion ([15fe639](https://www.github.com/scop/bash-completion/commit/15fe6395eb447a7e66a7aec07be2963c5f6c2131))\n* xfreerdp: Update for more modern xfreerdp ([7499fef](https://www.github.com/scop/bash-completion/commit/7499fefbd487196f78300e58f65138901862c128))\n* adb: Deprecate in favor of one shipped with the Android SDK ([479cc27](https://www.github.com/scop/bash-completion/commit/479cc270c594c3c1655519eba8745933b50d120c))\n* test: Convert remaining tar test cases to pytest+pexpect ([509878d](https://www.github.com/scop/bash-completion/commit/509878dcbc86b3528aac7b15e83203a3f7bfec38))\n* test: Fix declare test case with bash 5.0 ([89a0ed7](https://www.github.com/scop/bash-completion/commit/89a0ed758de066dec353687b6506b512f2901cf8))\n* test: Expect failure for chown all users test as non-root ([78bb3c0](https://www.github.com/scop/bash-completion/commit/78bb3c040f40bd903f7898812b3d2e95c4e7f47e))\n* xm: Deprecate completion for obsolete command (#284) ([c306a41](https://www.github.com/scop/bash-completion/commit/c306a418288d2e6cc94dac0f3f1443385405f3d1))\n* ssh: support RemoteCommand and SyslogFacility options ([8b2f90e](https://www.github.com/scop/bash-completion/commit/8b2f90e2174f8babb139097228d7923ef2ca4e90))\n* test: sort t/Makefile.am EXTRA_DIST in C locale ([17984a2](https://www.github.com/scop/bash-completion/commit/17984a2baa943b2166bc7217212dfa6d57a852d7))\n* test: rewrite \"generate\" in Python, fix trailing backslash in EXTRA_DIST ([7a9913f](https://www.github.com/scop/bash-completion/commit/7a9913ffa8c1508823ba05f832895d20b6a178a2))\n* xfreerdp: reinstate support for old versions with dash option syntax ([5f4f529](https://www.github.com/scop/bash-completion/commit/5f4f529ed3755a682e999d93f87dc5ac518ab51f))\n* test: remove no longer needed completion/*.exp ([2515f72](https://www.github.com/scop/bash-completion/commit/2515f726bd7195d8c80fdc8442fbd48bffe7398a))\n* test: avoid interrupting magic mark output ([1ea87c9](https://www.github.com/scop/bash-completion/commit/1ea87c99707fdc40c956560220e5a49d9e376383))\n* test: Increase expect pty to 160 columns ([b01cfe1](https://www.github.com/scop/bash-completion/commit/b01cfe1a4fed490ef1705f5c52e3c93e5187da49))\n* pytest: complete pytest-xdist --dist, --numprocesses, and --rsyncdir ([141e5e6](https://www.github.com/scop/bash-completion/commit/141e5e663789aa2243a0aa23c1bbe0b8c620e991))\n* post-commit: trigger on test/requirements.txt too ([51aa5c3](https://www.github.com/scop/bash-completion/commit/51aa5c3588fc22a3fef1313f5ed51cdce1c6a7f9))\n* test: add dependency on pytest-xdist ([eabce5b](https://www.github.com/scop/bash-completion/commit/eabce5b598b98489a831d44ec3e94b29e57926a6))\n* extra: add git pre-push hook for triggering Docker Hub builds ([7ab7a9b](https://www.github.com/scop/bash-completion/commit/7ab7a9bd418134b6c83d57f538dc5674b930e9a3))\n* test: use pytest-xdist ([0087574](https://www.github.com/scop/bash-completion/commit/0087574d5d130529c46d6c6a0b274439df652204))\n* python: make warning action list reusable ([fb0bb60](https://www.github.com/scop/bash-completion/commit/fb0bb6086864835d5bc71dfb1b43636767120267))\n* pytest: complete --pythonwarnings/-W arg ([6fad7d8](https://www.github.com/scop/bash-completion/commit/6fad7d8f411e734004a4f9b893dd32c266ed156f))\n* copyright: add 2019 ([95ae4bb](https://www.github.com/scop/bash-completion/commit/95ae4bbb17bb1ace29c4222fc7841ab69df23237))\n* _longopt: don't complete --no-* with file/dirname arg ([dd80f35](https://www.github.com/scop/bash-completion/commit/dd80f35279afd4f056dc191767b9869c9649d476))\n* nsupdate: new completion ([80ba367](https://www.github.com/scop/bash-completion/commit/80ba367c4e62c63927b2ffe6884ed9756ace5195))\n* _longopt: pick first long option on a line, not last ([54abb2e](https://www.github.com/scop/bash-completion/commit/54abb2e3c495e6732af6546b0fe41e0a5cd6922f))\n* _longopt: simplify regex, use printf instead of echo, drop unnecessary sort ([c1ec2e1](https://www.github.com/scop/bash-completion/commit/c1ec2e1b00913d9dc38e5dcf52bfbea4a2a9eff8))\n* test: add some _longopt unit tests ([6fdb0e2](https://www.github.com/scop/bash-completion/commit/6fdb0e2c3e47125ce29c2de0929d893452c2f595))\n* test: include test_unit_longopt.py in dist ([4a73043](https://www.github.com/scop/bash-completion/commit/4a73043f46be3f939c857f04673a659d8d10b0ac))\n* modprobe: append = to module parameter completions ([12d589e](https://www.github.com/scop/bash-completion/commit/12d589e705ccf8a44d4ce158c1c1c9885dce71ee))\n* dnssec-keygen: new completion ([6e008e2](https://www.github.com/scop/bash-completion/commit/6e008e200b700a303059a8c9658d3bcc79c11f98))\n* shellcheck: new completion ([fd37d6f](https://www.github.com/scop/bash-completion/commit/fd37d6f506013a42d35841b88d19851f192cf4ad))\n* ulimit: new completion ([2bf12d7](https://www.github.com/scop/bash-completion/commit/2bf12d7efb2ab73f5948d3c7868ff4c0273a71de))\n* ulimit: improvements when -a is specified ([6bc7bba](https://www.github.com/scop/bash-completion/commit/6bc7bba0315d64b1285861ad16a3f708d5437926))\n* ping, tracepath: parse options primarily with _parse_help ([09fa92d](https://www.github.com/scop/bash-completion/commit/09fa92d75e7b542c5ae601ba1fbd9c0155dbb66e))\n* modprobe: module parameter boolean values ([83b4b21](https://www.github.com/scop/bash-completion/commit/83b4b21d4075a88bd8e615b7e2da91520bd0a028))\n* bzip2: recognize *.tbz2 as bzipped ([c3e5447](https://www.github.com/scop/bash-completion/commit/c3e54476693dabecc1c8d52150001739d1404412))\n* : remove spaces immediately within $() ([90e380b](https://www.github.com/scop/bash-completion/commit/90e380b935afefbe63e4b68e4448a1bbb701696a))\n* : remove whitespace after redirections ([689beea](https://www.github.com/scop/bash-completion/commit/689beea52bd43bb45d96645f965e211351fbe579))\n* msynctool: code cleanups ([0fddd55](https://www.github.com/scop/bash-completion/commit/0fddd5512587cf717a9eb39ba422a80f8f7000e8))\n* : spelling fixes ([2a93236](https://www.github.com/scop/bash-completion/commit/2a932367917a9d7349bf049257e10840caa9c4da))\n* svn, svk, wget: use _iconv_charsets ([63257ba](https://www.github.com/scop/bash-completion/commit/63257ba4f8466fad3e4e219259554a0e8627def8))\n* : make _parse_usage fallbacks more concise ([3c10d4d](https://www.github.com/scop/bash-completion/commit/3c10d4d88015e096a0ee840d6a008508607cb81b))\n* valgrind: look up tools from libexec dirs too ([662cb72](https://www.github.com/scop/bash-completion/commit/662cb7267515ee6b26de9bea833a570a2df80be2))\n* .dir-locals.el: use flycheck-sh-bash-args ([77f2855](https://www.github.com/scop/bash-completion/commit/77f2855e10f08e9789908d7a91d42c407b67ea32))\n* : format Python code with black ([2c1a531](https://www.github.com/scop/bash-completion/commit/2c1a53114896d2f7b8bff075fd16fb811f17b311))\n* : format Perl code with perltidy ([ee73bf7](https://www.github.com/scop/bash-completion/commit/ee73bf7dce346d2ab20bd76d060c2906553c7792))\n* test: check for perltidy errors and warnings ([9be5de1](https://www.github.com/scop/bash-completion/commit/9be5de1e2ef3c9186c9cb317c12198073b50ed44))\n* test/tools: run all tools, don't stop at first failure ([4ebda77](https://www.github.com/scop/bash-completion/commit/4ebda77e88fce26e7e88abe035a6daae33a6c72a))\n* : arithmetic expression related cleanups ([834339f](https://www.github.com/scop/bash-completion/commit/834339fafabf9cab22c7708ca3c964e3fa8b769b))\n* test/tools: fix exit status incrementation ([9f4a18f](https://www.github.com/scop/bash-completion/commit/9f4a18fa20944d2cd2f30e196ddc9495c28566ac))\n* gdb: relax core filename pattern ([c59a2d0](https://www.github.com/scop/bash-completion/commit/c59a2d0950cb5b20da46598889f31bc17ac3658c))\n* _parse_help: look for long options somewhat more eagerly ([3f88944](https://www.github.com/scop/bash-completion/commit/3f88944e550b082984c71175e7a09a5f7801285e))\n* test: add some gdb non-core files ([6fa7458](https://www.github.com/scop/bash-completion/commit/6fa745848937b9714ca58cd0675d44c0f0145ea8))\n* test: port some more ssh test case to pytest+pexpect ([d2bec62](https://www.github.com/scop/bash-completion/commit/d2bec62f609e4ce4117ba74d5a81a45ad8e23369))\n* ssh: don't offer protocol v1 specific options if it's not supported ([aba5560](https://www.github.com/scop/bash-completion/commit/aba556019b7707e24093cc1c1ae082bec743ba3e))\n* : whitespace tweaks ([2f71b27](https://www.github.com/scop/bash-completion/commit/2f71b27557b196888971f2ada06f71f238939f00))\n* various: apply file vs dir special cases also when invoked with full path ([82ffbb2](https://www.github.com/scop/bash-completion/commit/82ffbb2d157bc401c0838fe98146fa89ecf8c56b))\n* phing: don't complete -l with files ([a8c4417](https://www.github.com/scop/bash-completion/commit/a8c4417ae5931fb9b172e3ff85d18e81061da8a3))\n* phing: fix getting just a tab for options on CentOS 6 ([e41f07e](https://www.github.com/scop/bash-completion/commit/e41f07e0be7aa22d19ad9f877ffe7ea5d1c99ce6))\n* : add missing \"ex: filetype=sh\" ([f237c25](https://www.github.com/scop/bash-completion/commit/f237c25fdf55ee1ce7076e2265ab5f80255efaaf))\n* _upvar: delete, unused ([b1a8a7d](https://www.github.com/scop/bash-completion/commit/b1a8a7d1c318d6fb2ffc5f050c887defa47ff77e))\n* Revert \"_upvar: delete, unused\" ([6970e6d](https://www.github.com/scop/bash-completion/commit/6970e6d62cf6ec1f6c79119843ad495b55f0d6de))\n* _upvar: deprecate in favor of _upvars ([4f35b0c](https://www.github.com/scop/bash-completion/commit/4f35b0cd7f6240addb68aa3127abe2a6dcc31411))\n* : error output consistency, use bash_completion prefix ([2a04042](https://www.github.com/scop/bash-completion/commit/2a04042d530ed5dd1b746073f8ffc059c42f3fa2))\n* : more arithmetic expression consistency ([c8c1b4d](https://www.github.com/scop/bash-completion/commit/c8c1b4da2f11f03db9665ca974fbe3d616b471b4))\n* tshark: ignore stderr when parsing -G, -L, and -h output ([7abc83e](https://www.github.com/scop/bash-completion/commit/7abc83ee03fbe61d82b568479a5c50ad543a09c5))\n* test: improve tshark -O arg completion test ([4548e71](https://www.github.com/scop/bash-completion/commit/4548e71e90bf591e537eaed2e7890fb85650cb2b))\n* tshark: speed up tshark -O completion ([b930bfc](https://www.github.com/scop/bash-completion/commit/b930bfc75af6229d456c58282e8bf80e04cfca5a))\n* apt-cache: protect showsrc against regex specials ([6e2ddea](https://www.github.com/scop/bash-completion/commit/6e2ddea986a3462070e6eafb098fc3d3f16bd835))\n* test: adjust _get_comp_words_by_ref test to changed error output ([56703df](https://www.github.com/scop/bash-completion/commit/56703df67ddfaeccb0cc2fd7f529c63527f031a0))\n* synclient: remove unused local variable \"split\" ([366488f](https://www.github.com/scop/bash-completion/commit/366488f2e3a806490eb1d7d6bcf674a8ea771f90))\n* mypy, mysql, xmms: don't complete unknown split long option args ([1a698d5](https://www.github.com/scop/bash-completion/commit/1a698d526c5b6747c9b40f23c1d91db421c9846b))\n* apt-get: protect source against regex specials ([22c5c3c](https://www.github.com/scop/bash-completion/commit/22c5c3c286575bd782f956e16abe4522474ae75a))\n* AUTHORS: remove unrelated project association from my entry ([8a74451](https://www.github.com/scop/bash-completion/commit/8a74451ec83af0741fff9d17003a13012fd1a00d))\n* test: shorten long gdb test core file name so tar doesn't croak on it ([e83bf9b](https://www.github.com/scop/bash-completion/commit/e83bf9b0a4e76d2ad361884a3c65eefbd685403f))\n* iptables: improve existing table arg parsing ([97a91f8](https://www.github.com/scop/bash-completion/commit/97a91f8993f45823c21fbc309c00915a0c1572e8))\n* test: add script to run shellcheck, run it in Travis, allowing failure for now ([f21c67f](https://www.github.com/scop/bash-completion/commit/f21c67f17fcc909745d59e3647398c50b2cd8eb9))\n* ebtables: improve existing table arg parsing ([996a203](https://www.github.com/scop/bash-completion/commit/996a203f07a075633baed3960763f34534ea2447))\n* test: add invoke-rc.d test case for not repeating already given options ([e0bb03a](https://www.github.com/scop/bash-completion/commit/e0bb03a588ba57a77424a19f690c1413b3de8086))\n* _included_ssh_config_files: doc grammar fixes ([bae4a3d](https://www.github.com/scop/bash-completion/commit/bae4a3d11ecb86767573c9b03aed85287a8c415a))\n* _included_ssh_config_files: store found included files in an array ([6d01267](https://www.github.com/scop/bash-completion/commit/6d012674ee28fd25f9bfa64b6409d7eb99844b61))\n* : shellcheck error fixes ([f1c32f4](https://www.github.com/scop/bash-completion/commit/f1c32f4b85227a4da5dbb6fc137a7703a4efe20a))\n* test: add make -C test case ([ea3c900](https://www.github.com/scop/bash-completion/commit/ea3c9001f42f31d49a13962586b71469aa416a4d))\n* make: quote eval array definitions to work around shellcheck SC1036 bug ([abe266c](https://www.github.com/scop/bash-completion/commit/abe266ce4d26c37cf8ad681136cc8fd7edd28d4e))\n* ri: shellcheck error fixes ([d45f9fa](https://www.github.com/scop/bash-completion/commit/d45f9faf432947ecf0e178d8be50f4c3163c2b4c))\n* travis: fail on shellcheck errors ([e146ef5](https://www.github.com/scop/bash-completion/commit/e146ef59c53ce311fb1f30f06499aa3c91ffb3f1))\n* travis: don't fail DIST != tools ([a3129ac](https://www.github.com/scop/bash-completion/commit/a3129ac624adf390b072f63f98c6f8be552b0415))\n* travis: run shellcheck on bash_completion.sh.in too ([0eebaef](https://www.github.com/scop/bash-completion/commit/0eebaef0a4296bf0c37c8fcdd0931701b25abb88))\n* tar, valgrind: avoid some herestrings ([3d3905c](https://www.github.com/scop/bash-completion/commit/3d3905cbb8232091c3b656567a843b97b8bc6e11))\n* test: make runLint search for herestrings ([8510da8](https://www.github.com/scop/bash-completion/commit/8510da8fb20658fbb18f3f0744214ddfc473f542))\n* test: move default shell option from run-shellcheck to .shellcheckrc ([4dc8da5](https://www.github.com/scop/bash-completion/commit/4dc8da5db79dd7d79312cdd139ab0422eb6fb532))\n* shellcheck: disable bunch of warnings when in \"-S warning\" mode ([a36f57f](https://www.github.com/scop/bash-completion/commit/a36f57f922d461558064be39f8cfb64288f64cbf))\n* arp, ccze, ifstat, inotifywait, makepkg: invoke sed with \"command\" ([5ff11ce](https://www.github.com/scop/bash-completion/commit/5ff11ced5729f9258b75b633fc366360b277cf4c))\n* __parse_options, 7z: avoid herestrings ([ff5fb58](https://www.github.com/scop/bash-completion/commit/ff5fb5864dc41629f216dbea0a1fbf892ded4e66))\n* CONTRIBUTING: note runLint and run-shellcheck ([07408a6](https://www.github.com/scop/bash-completion/commit/07408a6b3974c442f35dedf46ef49292b8664166))\n* CONTRIBUTING: add upstream vs bash-completion considerations ([34fb914](https://www.github.com/scop/bash-completion/commit/34fb91447ff9a92e8976732f042ba20cfa615326))\n* doc/testing: remove lots of legacy info, add some new ([d31f2c9](https://www.github.com/scop/bash-completion/commit/d31f2c9adbcab984754ecd93b44778e1e7a673d8))\n* xvnc4viewer: code cleanups ([3e193ed](https://www.github.com/scop/bash-completion/commit/3e193edea316461c2bf5d799ca90cce9c056e301))\n* ssh: fix suboption completion with combined -*o ([8d2c976](https://www.github.com/scop/bash-completion/commit/8d2c976c11e379f28430f1ae15be3764755dcffb))\n* ssh: make option completion case insensitive ([0984db6](https://www.github.com/scop/bash-completion/commit/0984db6747e3f3ef1e73cdadc4447b6cb091cc83))\n* ssh: make -o protocol completion less hardcoded ([73d8304](https://www.github.com/scop/bash-completion/commit/73d830445339df51eba37129c0151a250d290d84))\n* 7z: add some TODO notes on parsing \"i\" output for extensions ([7748282](https://www.github.com/scop/bash-completion/commit/7748282e1bff081b0507b09146cbbafab3c8cb1a))\n* : avoid shellcheck SC1010 ([a3aa845](https://www.github.com/scop/bash-completion/commit/a3aa84519e338d246925bf816b12f96224ba47ad))\n* : avoid shellcheck SC1007 ([659805b](https://www.github.com/scop/bash-completion/commit/659805bd2a834d2e58075b1807083eef54aa73fb))\n* dist: include various *.in explicitly ([f2f8c7b](https://www.github.com/scop/bash-completion/commit/f2f8c7b3c69039c0f1fe09e33c85c1075bdd409c))\n* test: use parallel make in docker test ([8efece6](https://www.github.com/scop/bash-completion/commit/8efece6123393c07c127375c9f754407d7702a20))\n* test: use $(RM) ([72b47aa](https://www.github.com/scop/bash-completion/commit/72b47aacefae825b670a1892665b74a6b690194e))\n* test: group dejagnu related stuff in one place in Makefile ([ce95fe4](https://www.github.com/scop/bash-completion/commit/ce95fe40fd88a2c425aece0b69544cc989da0b3e))\n* test: run pytest tests with make check ([5a53bc1](https://www.github.com/scop/bash-completion/commit/5a53bc1c24c672f774fde210c8bdd2f26992a58b))\n* test: run distcheck in docker, ditto test suite driven by it ([bdf40aa](https://www.github.com/scop/bash-completion/commit/bdf40aab2528d0c32a7fad97d3a1156b042ff81c))\n* test: add fixtures/make/extra_makefile to CLEANFILES ([47fc6d7](https://www.github.com/scop/bash-completion/commit/47fc6d7c217326aed607e21c8525084f3f0f6118))\n* travis: reindent with 2 spaces by usual convention ([54030ad](https://www.github.com/scop/bash-completion/commit/54030ad7738689d0709648e48d0177a1c9d00014))\n* travis: deploy release dist tarball to github ([8d91ee2](https://www.github.com/scop/bash-completion/commit/8d91ee269e4086cc1d3550865b3f9533796717b3))\n\n## 2.8 (2018-03-17)\n\n* test suite: Limit number of screen -T completion matches ([1c5d13e](https://www.github.com/scop/bash-completion/commit/1c5d13ee8c60cc2ef22751d9e876296be731d749))\n* test suite: Support overriding default match buffer size (#141) ([e6a56b9](https://www.github.com/scop/bash-completion/commit/e6a56b97e05d5df29f61b0e23650a65f1492f1fb))\n* lftp: Support ~/.local/... bookmark location (#144) ([1e347ee](https://www.github.com/scop/bash-completion/commit/1e347eef6a9de89855aba8a8b92f25be1fe18c17))\n* test suite: Limit amount of output from process name completion ([f206607](https://www.github.com/scop/bash-completion/commit/f206607cbde36b46473a11cce9b3ebfd75ec36f4))\n* ktutil: Don't leak i and command environment variables ([fb8e5aa](https://www.github.com/scop/bash-completion/commit/fb8e5aa106463cf0ef3a5920010d4805ae22e985))\n* test suite: Add bunch of missing basic test cases ([ca61c5e](https://www.github.com/scop/bash-completion/commit/ca61c5e60eb422fd90ef940fec3aceba4a6a5dff))\n* uscan: Don't leak cword and words environment variables ([0ab85ec](https://www.github.com/scop/bash-completion/commit/0ab85ec0a4177bee07253eacac1faa072ff64ff9))\n* xm: Don't leak args and commands environment variables ([29fd200](https://www.github.com/scop/bash-completion/commit/29fd2001928af49898184b9ada988f63f924a097))\n* test suite: Enable wine in ubuntu14 ([9ccc3db](https://www.github.com/scop/bash-completion/commit/9ccc3db8834168b7af65e76ef320dda01b38046e))\n* test suite: Install aptitude in ubuntu14 container ([1fc5d30](https://www.github.com/scop/bash-completion/commit/1fc5d3022333fa08d3fbb5bc4995cf5acbaf7e7b))\n* aptitude-curses: Use aptitude completion ([c8d40ea](https://www.github.com/scop/bash-completion/commit/c8d40eab48735c0ef601b2a227d42594b7511e24))\n* groupdel: Parse and handle long options ([e987744](https://www.github.com/scop/bash-completion/commit/e987744d342812185d675ea428a197de7394051b))\n* curl: Fix -x etc option argument hostname completion ([3708590](https://www.github.com/scop/bash-completion/commit/3708590603920a6e67be0df3f22924e4ea236fc9))\n* : Protect _known_hosts_real from user input treated as options ([8706bc1](https://www.github.com/scop/bash-completion/commit/8706bc1d70873698d0d456254f415322343f6b03))\n* aptitude: Add keep to commands list (Debian: #867587) ([5ed2fc4](https://www.github.com/scop/bash-completion/commit/5ed2fc4a9a604c780da48e87964d4ac21fc7a85d))\n* test suite: Add basic hid2hci and munin-node-configure test cases ([c498655](https://www.github.com/scop/bash-completion/commit/c4986556555f5a6f45761ad2fdc3a1a2623f5b76))\n* test suite: Add info and pinfo option test cases ([deba602](https://www.github.com/scop/bash-completion/commit/deba602bec10e4dda56ebe2908404e13ebd1286d))\n* test suite: Limit amount of info and pinfo test output ([bb8645b](https://www.github.com/scop/bash-completion/commit/bb8645b5ff71e532de2bc9678f6e77d7009b0b37))\n* : Protect shopt reset from non-default $IFS ([5240618](https://www.github.com/scop/bash-completion/commit/5240618033fecc3032a421d39c2eaeb2e4c20d57))\n* alias: Fix completion followed by = (#146) ([2f21940](https://www.github.com/scop/bash-completion/commit/2f2194011db46beaa4e9eb44705bc6a8a08c56ab))\n* oggdec: New completion ([0dc16d3](https://www.github.com/scop/bash-completion/commit/0dc16d38076cdea90a00d7e346ab545e88abf1d5))\n* Add support for .lzo extension (--lzop) to tar (#155) ([49a8dd8](https://www.github.com/scop/bash-completion/commit/49a8dd857628807460468db92a38233c50c83196))\n* Add support for .lz4 extension to file-roller (#158) ([5268e43](https://www.github.com/scop/bash-completion/commit/5268e43824773ccaf6c3cd48d1d4a5185a6a11d0))\n* lsusb: New completion ([4e323d9](https://www.github.com/scop/bash-completion/commit/4e323d9a71e9bbd1c4432c3ade3794073a88d3d7))\n* lspci: New completion ([ea3d2b2](https://www.github.com/scop/bash-completion/commit/ea3d2b249413aeda28b51e7eaf545be243c0684a))\n* test suite: Skip fedoradev GPG checks at least for now ([2ef9387](https://www.github.com/scop/bash-completion/commit/2ef9387bc4628e4c5203a63f14b66d5765763589))\n* test suite: Drop no longer needed fedoradev /usr/bin/which workaround ([53feba3](https://www.github.com/scop/bash-completion/commit/53feba31e9b49340605304258e18ff06baacaa22))\n* vpnc: Improve config completions ([c695083](https://www.github.com/scop/bash-completion/commit/c695083125fb6ce4f944039fc94745a1a33d30cf))\n* vpnc: Add some option argument (non)completions ([0086850](https://www.github.com/scop/bash-completion/commit/0086850c28c41cb383249ba47d44edb8b3ec3b53))\n* iptables: Parse options from --help output ([0bdc11d](https://www.github.com/scop/bash-completion/commit/0bdc11d8c9838abf055fc7403fa9739eb5d29820))\n* iptables: Avoid stderr trashing when invoked as non-root ([c8c61f7](https://www.github.com/scop/bash-completion/commit/c8c61f70f9f2cee5b9f7f6276a52af1424dbc380))\n* iptables: Use invoked command instead of hardcoded \"iptables\" ([1b5c6e8](https://www.github.com/scop/bash-completion/commit/1b5c6e87e4517326c778dd67ba174828f2f40697))\n* README.md: Whitespace cleanup ([a6e3655](https://www.github.com/scop/bash-completion/commit/a6e3655747120aa1782a17b414ffc2e6f80c8b64))\n* ebtables: new completion (#150) ([334b47c](https://www.github.com/scop/bash-completion/commit/334b47cf663c5d7c8f197970a340e745f47cd55f))\n* test: Use prebuilt docker hub bash-completion images ([ecaec9a](https://www.github.com/scop/bash-completion/commit/ecaec9a86470c6d6299a6522c0fddde44ff0b5f6))\n* rfkill: Rename to _rfkill to avoid conflict with util-linux >= 2.31 ([d962f3a](https://www.github.com/scop/bash-completion/commit/d962f3a3be2b5c3811e546890c99b19694c2a08e))\n* test suite: man cleanup ([c8ff683](https://www.github.com/scop/bash-completion/commit/c8ff6833a9f113d9feb29f750ae638436f64cbf3))\n* test suite: Make man test subject names less generic ([78f4cec](https://www.github.com/scop/bash-completion/commit/78f4cec642381e7bfe25c22c8c7fde15775431e7))\n* test suite: Add bunch of man and MANPATH test cases ([3b2fd04](https://www.github.com/scop/bash-completion/commit/3b2fd04caa12b720d941d27b751e76a32af8290e))\n* man: Don't use $MANPATH directly (#161) ([e6a4715](https://www.github.com/scop/bash-completion/commit/e6a471511dfdc230ff3eed65ccba09b6d7d30262))\n* unzip, zipinfo: Associate *.gar (#165) ([e5ee408](https://www.github.com/scop/bash-completion/commit/e5ee408a5aee2f1c9d898150e256540d020fc5ee))\n* pylint: Install for pylint-2 and pylint-3 too ([fee4f3d](https://www.github.com/scop/bash-completion/commit/fee4f3d6c97c4cc48650533d96c16faa71171b39))\n* pylint: Invoke python3 to search for modules if command contains 3 ([d63b33d](https://www.github.com/scop/bash-completion/commit/d63b33d415bf3103daa2aaeead9860084da0d8f3))\n* tox: New completion (#163) ([89fb872](https://www.github.com/scop/bash-completion/commit/89fb872bcf9b6cc508a8079a7d203d31a2694620))\n* tox: Avoid stderr spewage when -e invoked without tox.ini ([1ac8895](https://www.github.com/scop/bash-completion/commit/1ac88953a8a81d7509648ebe9f8751319bca3609))\n* tox: Include ALL in -e completions ([9678f55](https://www.github.com/scop/bash-completion/commit/9678f55dabe921b62dd848bfa38b4d1ffffc21ca))\n* tox: Remove spurious executable bits ([609ed0d](https://www.github.com/scop/bash-completion/commit/609ed0de65732f9442a9c17d12ba88c0ba855cef))\n* xdg-settings: New completion ([6cf792b](https://www.github.com/scop/bash-completion/commit/6cf792bf3dffcafdfb5765bd0b300e3c10ace9e2))\n* test: run bash with --norc to avoid system bashrc ([77ea9fc](https://www.github.com/scop/bash-completion/commit/77ea9fc444db7d240cffc2cbf1b38f0b12075aed))\n* test: Add some comments regarding bash init in library.exp ([215301d](https://www.github.com/scop/bash-completion/commit/215301dfb869b803b1dbada879d8e37ca6641e41))\n* test: Remove things moved to library.exp from bashrc ([6495d88](https://www.github.com/scop/bash-completion/commit/6495d886d8e86ef8f54cc0aacbd08838482e6d58))\n* Whitespace ([3fa189e](https://www.github.com/scop/bash-completion/commit/3fa189ee0b4be4da9aa8c9ac34ddead27e74f861))\n* test: Add files to test older ri with ([a85f96c](https://www.github.com/scop/bash-completion/commit/a85f96c75dc81ee1e5a24433ac7741d414a77c0b))\n* ri: Fix integrated ri 1.8 class completion ([9035568](https://www.github.com/scop/bash-completion/commit/903556864dc366c55ce2904821ef31a4920babb4))\n* apt-get: Complete *.deb on install if argument contains a slash ([a36231e](https://www.github.com/scop/bash-completion/commit/a36231e81eaeb272777abe581dce06e988f219a3))\n* reportbug: Add -A/--attach arg completion ([339abbb](https://www.github.com/scop/bash-completion/commit/339abbbaa07c824a278fc1e836e25b335b314676))\n* reportbug: Don't hardcode option lists, split option args at = ([1d44276](https://www.github.com/scop/bash-completion/commit/1d4427621185a6f005232c6d769109dadd46f795))\n* ssh-keygen: Add -E arg completion ([3807a99](https://www.github.com/scop/bash-completion/commit/3807a996dbf8f4a94c4cb1be5861c0f228584225))\n* xdg-mime: New completion ([24e7c26](https://www.github.com/scop/bash-completion/commit/24e7c266748b575358f978a73b0b5ff02a5868ed))\n* test: dpkg,ls,_tilde: Skip gracefully if no uniq user for completion is found ([95a04fe](https://www.github.com/scop/bash-completion/commit/95a04feab494e55c14de866e02a8a8bfbae398ec))\n* test: Ignore duplicates in find_unique_completion_pair list ([d2f14a7](https://www.github.com/scop/bash-completion/commit/d2f14a7b7504d05d9cbdd048cf546fb55fbbfbd8))\n* ssh: Declare $prefix closer to use ([2516a25](https://www.github.com/scop/bash-completion/commit/2516a257081be11b49a3755358d1ca39463b7162))\n* ssh: Add -J/ProxyJump completion ([cc6667e](https://www.github.com/scop/bash-completion/commit/cc6667e293c670b04b0d827d16935681b9de7083))\n* _known_hosts_real: Document -a better ([693282c](https://www.github.com/scop/bash-completion/commit/693282caaa206676fc4d1d17713877d630b07d65))\n* nproc: New completion ([cb7877c](https://www.github.com/scop/bash-completion/commit/cb7877caa89184e28ae7b6b58d1d1c42abdeb9d1))\n* getconf: New completion ([55ed68d](https://www.github.com/scop/bash-completion/commit/55ed68dab30d66dce7be89e6e4a8fc846cbe4044))\n* pv: New completion ([f6f5f4f](https://www.github.com/scop/bash-completion/commit/f6f5f4f1fe8e225e06ca5174e6e36899a7baf81c))\n* cryptsetup: Update option lists ([89d1a3f](https://www.github.com/scop/bash-completion/commit/89d1a3fe4a0e0e977244c43be399cb13890bff45))\n* dpkg: Add -V/--verify arg completion ([bb0a82f](https://www.github.com/scop/bash-completion/commit/bb0a82f3dc5d60561362c8259eb9a4bbdac701bd))\n* lowriter,localc etc: Use corresponding oo* completions ([fbd52a5](https://www.github.com/scop/bash-completion/commit/fbd52a5e31747beb4974da97b9d3ed4f6ceb7a61))\n* perltidy: New completion ([9cddfdf](https://www.github.com/scop/bash-completion/commit/9cddfdf1b777e028a9dbf32b442a3ce2629d20cf))\n* flake8: Various option arg completion improvements ([15389e6](https://www.github.com/scop/bash-completion/commit/15389e66c92d61a4a1de593dd4017d76d7e2a0ef))\n* pycodestyle: New completion ([0de48aa](https://www.github.com/scop/bash-completion/commit/0de48aa77f2b84ed409d983279f8b1334242de2f))\n* travis: Don't build local docker images, use vskytta/bash-completion ones ([f1a1e14](https://www.github.com/scop/bash-completion/commit/f1a1e14092db8613d0274a37073f078c1689a94e))\n* test: Work around broken centos/fedora postfix config in non-IPv6 setup ([5db0365](https://www.github.com/scop/bash-completion/commit/5db036505cb9d50651b4e5035e040435256dfffc))\n* test: Add \"postconf -\" test case ([ac73726](https://www.github.com/scop/bash-completion/commit/ac73726de7421a4a61ba46a2c30795c9080dc24a))\n* Revert \"travis: Don't build local docker images, use vskytta/bash-completion ones\" ([ac9c468](https://www.github.com/scop/bash-completion/commit/ac9c468c9375289effa39741c048c6aa154164e1))\n* test: Try to skip postconf variable test on broken postfix configs altogether ([4ba2e73](https://www.github.com/scop/bash-completion/commit/4ba2e73104a323143a8060ef4e1e5098a183e445))\n* test/docker: Tweak work dir, add bash as default cmd ([e0a4385](https://www.github.com/scop/bash-completion/commit/e0a438549221ed4e8be0b6e5487bc5f62c2479ca))\n* python: Support completing dotted module hierarchies ([db9f81b](https://www.github.com/scop/bash-completion/commit/db9f81be1673d432afeb85fce8a35e93d9e48643))\n* lsscsi: New completion ([079b7ac](https://www.github.com/scop/bash-completion/commit/079b7ac19124e1d59db176465d7b7ca65884f7d1))\n* radvdump: New completion ([5b3e79e](https://www.github.com/scop/bash-completion/commit/5b3e79e25df9c6d50eb23d465008a71bbac7dbfd))\n* java: Complete *.war ([c1912bf](https://www.github.com/scop/bash-completion/commit/c1912bfd080d4eadba8bc81754ba7b2723115d78))\n* ssh,ssh-add,ssh-keygen: Complete pkcs11 options with *.so ([0fb4ae2](https://www.github.com/scop/bash-completion/commit/0fb4ae2fea44b857f854af8b02c838fbbb1700aa))\n* kldunload: Show modules with digits ([6f17a85](https://www.github.com/scop/bash-completion/commit/6f17a85fad28c0770bb4fe704c2ed5e92e242029))\n* kldunload: Increase robustness of compgen filters (#185) ([e2193c7](https://www.github.com/scop/bash-completion/commit/e2193c771a4b3284fc0e50593902d9edbf60d8c1))\n* _known_hosts_real: Add option to filter IPv4 and IPv6 addresses ([0c40185](https://www.github.com/scop/bash-completion/commit/0c40185fcf70ba6f7dfddbc3933bcab22a339c46))\n* ping*,ssh,scp,sftp,tracepath6: Filter IPv4/IPv6 literal addresses ([b547f22](https://www.github.com/scop/bash-completion/commit/b547f2231a1d6c588bf425e5cd1f0bb6012fc562))\n* geoiplookup: New completion ([7c7dfe8](https://www.github.com/scop/bash-completion/commit/7c7dfe8b1c4b98cea0b7b4fc254207f16651eb87))\n* xdg-mime,xdg-settings: Fix inclusion in tarball ([3e9e03b](https://www.github.com/scop/bash-completion/commit/3e9e03ba3494668cbe663f36231445e15c2f005f))\n* tox: Complete comma separated -e arguments ([eb8a7e7](https://www.github.com/scop/bash-completion/commit/eb8a7e760088cc0fc15f9f1310092e6ac85738f2))\n* mplayer: Disable user config when parsing options ([df36cae](https://www.github.com/scop/bash-completion/commit/df36cae3f85fbf2c386560f4e2da62bb7a67196b))\n* test suite: Some more mplayer and mencoder coverage ([c71f5fc](https://www.github.com/scop/bash-completion/commit/c71f5fcf25ef321074a9f0b215784b0e28c37058))\n* : Comma separated opt arg completion improvements ([021058b](https://www.github.com/scop/bash-completion/commit/021058b38ad7279c33ffbaa36d73041d607385ba))\n* xine etc, ogg123, mplayer -audiofile: Associate with *.oga ([b102367](https://www.github.com/scop/bash-completion/commit/b10236717bae7e1a072031fa9cbf0006b66b4057))\n* dpkg: Fix man page section in comment ([e16b320](https://www.github.com/scop/bash-completion/commit/e16b320ae1eb898f45f7eb891d036c059a2c0040))\n* dpkg: Complete --vextract on deb files ([facefd6](https://www.github.com/scop/bash-completion/commit/facefd6dd0ea0aab8005c8a42ef125e594ed637d))\n* dpkg-query: Fix -W/--show completion ([78cdbe1](https://www.github.com/scop/bash-completion/commit/78cdbe1bb8f7ab597a020a1c606154ccd4e39eea))\n* ccze: New completion ([e858751](https://www.github.com/scop/bash-completion/commit/e858751feb53ca76b48bc9cbd1e4021044c0c34d))\n* make: Pass script to sed as parameter instead of using process substitution ([153d6d4](https://www.github.com/scop/bash-completion/commit/153d6d4fab1faafbd33fccb0ba8a99964f05a95b))\n* openssl: Add completion for the genpkey, pkey, pkeyparam, and pkeyutl commands ([19759ad](https://www.github.com/scop/bash-completion/commit/19759ad14d825896997f70fb37a9f34b98a28903))\n* _avaiable_interfaces: Get rid of eval ([edb7d59](https://www.github.com/scop/bash-completion/commit/edb7d599242a184769a3aed2a7167c354cab6033))\n* __load_completion: Code cleanup ([5e69954](https://www.github.com/scop/bash-completion/commit/5e69954bd1dd6e346d1cb1e44a6d5b03d2c106fb))\n* __load_completion: Load \"xspec\" completions dynamically too ([e6781be](https://www.github.com/scop/bash-completion/commit/e6781bebfff6da5e3b5ce244c103e35d06dee9c6))\n* mkdir: Complete on files in addition to dirs ([dbb3870](https://www.github.com/scop/bash-completion/commit/dbb38708e39bc8cb463ccaab294b5d1ae1e173f6))\n* mkdir: Complete files without appending space ([b0babf8](https://www.github.com/scop/bash-completion/commit/b0babf873b21eb2f1d936e6e2288b451c1a58778))\n* Bump copyright years to -2018 ([e306ffd](https://www.github.com/scop/bash-completion/commit/e306ffda0e8e9eb38ea676f7d0916d68d0cb87f3))\n* __expand_tilde_by_ref: Eval tilde expansion only, simplify ([21f410a](https://www.github.com/scop/bash-completion/commit/21f410a860c20ab79a9afebcf8a0ca8f7fba9d08))\n* dd: Omit space only when offering one completion ending with = ([cea7cce](https://www.github.com/scop/bash-completion/commit/cea7cce326235531fa36c2e10a2b907b266186a2))\n* dd, find, gcc: Remove unnecessary tilde expansion ([6927248](https://www.github.com/scop/bash-completion/commit/692724843c93fdbf4f253f26c62ad1a9334f73f1))\n* test: Add assert_complete_homedir, use in dpkg and ls ([ec85ac4](https://www.github.com/scop/bash-completion/commit/ec85ac48e3a38360c86d89abb8fe6ed7ea2568fc))\n* bzip2, gzip, and other compressors: Use _tilde instead of _expand ([3c4fc36](https://www.github.com/scop/bash-completion/commit/3c4fc36fd65f414960b5ad1c17bb88f720bca20b))\n* test: Add some _expand unit tests ([3b8dfd3](https://www.github.com/scop/bash-completion/commit/3b8dfd34709d621d928a61fb04a811a96fb15c03))\n* _expand: Reuse __expand_tilde_by_ref and _tilde logic, clean up ([6365265](https://www.github.com/scop/bash-completion/commit/63652650a4f43938e2b7195084ad03cf4e93ff36))\n* info, man, rsync: Defer _expand invocation ([add4e3c](https://www.github.com/scop/bash-completion/commit/add4e3cd443da011e8302b5d1fcfb5673d850f7a))\n* test/unit: Whitespace tweaks ([69c318a](https://www.github.com/scop/bash-completion/commit/69c318a339901699b430af699145a8ff62394894))\n* test: Fix getting username in non-login shells ([6ae330f](https://www.github.com/scop/bash-completion/commit/6ae330f1ab90f15d97477a8c254dd29f166ecdb6))\n* make-changelog.py: Use python3 ([5f1d238](https://www.github.com/scop/bash-completion/commit/5f1d2381a54dc236b0419e78f1a733f2d033ed93))\n\n## 2.7 (2017-07-01)\n\n* pdfunite: New *.pdf completion ([65239a9](https://www.github.com/scop/bash-completion/commit/65239a91a4fface3f1b183b17c79548916461077))\n* test suite: Fix __expand_tilde_by_ref test expectation output ([ff2afaf](https://www.github.com/scop/bash-completion/commit/ff2afaf4f8a89411b65e0f035509db1b6372e292))\n* Makefile: update default compatdir (#132) ([00a7b9f](https://www.github.com/scop/bash-completion/commit/00a7b9fb79ece368064cce41a74be5dd56f6b266))\n* pyflakes: Remove redundant xspec completion ([0a32296](https://www.github.com/scop/bash-completion/commit/0a32296840e928d25729a8661cd4d7196db3479e))\n* test suite: Generalize xspec completion install check ([1a7137f](https://www.github.com/scop/bash-completion/commit/1a7137fdf61a50a1ada5fe8cd3ae5c9dafddedc1))\n* Make user completion file configurable, disable in tests ([d231255](https://www.github.com/scop/bash-completion/commit/d231255201468e0b5a79c28d9a0e4b246dfeec90))\n\n## 2.6 (2017-06-27)\n\n* xine etc: Associate *.webm and *.weba (#112) ([eee71d2](https://www.github.com/scop/bash-completion/commit/eee71d240feacbce8fe3dcde4fe9d8f730849d7f))\n* mplayer: Associate *.weba (#112) ([82dbb85](https://www.github.com/scop/bash-completion/commit/82dbb853bb2bfb720ece29f2fe806ee8f3695b52))\n* xine etc: Associate uppercase *.WM[AV] ([7250d5b](https://www.github.com/scop/bash-completion/commit/7250d5b721c37b507127285b94a1083de379dfdc))\n* Add missing sidedoor to .gitignore (#114) ([440f65c](https://www.github.com/scop/bash-completion/commit/440f65ce444c00519bc9fa6b5a87fbd4f10a2e67))\n* Bump copyright years ([922bc58](https://www.github.com/scop/bash-completion/commit/922bc58693ad5254142b7aed9a160f2291ddf087))\n* eog: Associate with *.j2c and *.jpg2 ([c91b36d](https://www.github.com/scop/bash-completion/commit/c91b36dd8cd31ea95a952c1fd858d1f3738f3998))\n* xv: Associate with *.j2c, *.j2k, *.jp2, *.jpf, and *.jpg2 (Debian: #859774) ([0de9b7b](https://www.github.com/scop/bash-completion/commit/0de9b7b086574213d21b28c25d1bd5d517880ba0))\n* Travis: Switch tests to docker, update to Ubuntu 14 ([82d85c1](https://www.github.com/scop/bash-completion/commit/82d85c1380707461ad8511b95349d8a56b9961ea))\n* test suite: Add WIP Fedora dev config ([6ed2857](https://www.github.com/scop/bash-completion/commit/6ed285773db08b1200a5063a58a9c0cce9f94c53))\n* synclient, udevadm: Avoid use of posix char classes for awk ([2abecdc](https://www.github.com/scop/bash-completion/commit/2abecdc60e06aebc397a7eb62ae053d34fc68315))\n* ssh-keygen: Make option parsing work with OpenSSH < 7 ([375bd17](https://www.github.com/scop/bash-completion/commit/375bd174aa5750b98c2a01fd3a42b669a7fefb9d))\n* (docker): Run completion tests with xvfb-run, e.g. for gkrellm ([c8f5dac](https://www.github.com/scop/bash-completion/commit/c8f5dac01ee1cd26452bc7e67c75a86924a272e4))\n* tshark -G: Avoid stderr noise when running as superuser ([ea6377d](https://www.github.com/scop/bash-completion/commit/ea6377d2b03be91d6af2fc11c6581eb7aafa1ec4))\n* (test suite): Fix mmsitepass completion test ([596d961](https://www.github.com/scop/bash-completion/commit/596d961152b94fa45470e565d9adf2c3997011c1))\n* mr: Avoid stderr trash and test suite failure if man is N/A ([be12bb2](https://www.github.com/scop/bash-completion/commit/be12bb2514730576ce170a1e7c1f136e20f0f385))\n* (docker): Pull in missing fedoradev xvfb-run which dependency ([e468e44](https://www.github.com/scop/bash-completion/commit/e468e44b32092531dfd3f3c764dccaa5cad1ccb2))\n* (test suite): Don't assume lists set up in newlist test cases ([a9494fe](https://www.github.com/scop/bash-completion/commit/a9494fe4501067388783a6dc454ebe5c2413d3b6))\n* (test suite): Delete trailing whitespace ([ca64e75](https://www.github.com/scop/bash-completion/commit/ca64e755f13b64b1eaec0f4233ff6286e11f68b2))\n* newlist: Parse options from --help, add some arg non-completions ([472db27](https://www.github.com/scop/bash-completion/commit/472db27ae1c5869f7a2b84fb8a1597229d4807a2))\n* (test suite): Don't assume mounted filesystems in quota* tests ([a9fc3dc](https://www.github.com/scop/bash-completion/commit/a9fc3dc7766f0415acb4aba3d14776c97e5ea9fc))\n* (test suite): Make chkconfig test behave better in container ([fcaac9a](https://www.github.com/scop/bash-completion/commit/fcaac9ac97dc963d87023fe4fda32c722677bfee))\n* (test suite): Unsupport various kill, renice cases if ps is N/A ([b5d81bf](https://www.github.com/scop/bash-completion/commit/b5d81bf4479c6454822f21537ec7aa47d592ed39))\n* (test suite): Fix tar test case for ones having --owner-map ([b719ee2](https://www.github.com/scop/bash-completion/commit/b719ee2f27393008f2f6dc5722241f118e822906))\n* (test suite): curl has lots of options, add more test prefix ([4698dbe](https://www.github.com/scop/bash-completion/commit/4698dbe5ccc807333b4128aa1463a90062167ee5))\n* (test suite): Fix perl -d* test cases with no Devel::* installed ([9941b3d](https://www.github.com/scop/bash-completion/commit/9941b3d63d35913e44e41a7b1a05c449543f7fda))\n* (test suite): Ensure /usr/(local/)games is in $PATH ([fda9c43](https://www.github.com/scop/bash-completion/commit/fda9c43c233e16380704ae0ed6500fa91c38b167))\n* (test suite): Add bunch of packages to ubuntu14 container ([ffeb91a](https://www.github.com/scop/bash-completion/commit/ffeb91a28bee72038215d968a1f9237a8ad0599e))\n* (test suite): Add our ./configure to PATH to test it, test opts ([07cbd0d](https://www.github.com/scop/bash-completion/commit/07cbd0df40629a4b0da1eb1ccaf201e7aba1463a))\n* (test suite): Add basic hping3 test case ([9f2efc5](https://www.github.com/scop/bash-completion/commit/9f2efc525d76db97b8bbf702c7b8f243451e5bf7))\n* (test suite): Test lsof on ubuntu14 ([db40d50](https://www.github.com/scop/bash-completion/commit/db40d5084e781399a5b1276caf8a5a43315ab7b2))\n* unshunt: Parse options from --help ([a7caf57](https://www.github.com/scop/bash-completion/commit/a7caf57cc49feae235cc15daa4bdf5b3d7e4a491))\n* (test suite): Install jshint to ubuntu14 container with npm ([4813904](https://www.github.com/scop/bash-completion/commit/48139045355dd9ddee5e67938f6e61123542d7ee))\n* (test suite): Add mailman bin dir to PATH for some mailman tools ([5eee6c5](https://www.github.com/scop/bash-completion/commit/5eee6c571df8156fec45c9dfbd0b733b73014346))\n* (test suite): Install jshint globally in ubuntu14 ([987f251](https://www.github.com/scop/bash-completion/commit/987f251c02b0d367ef0a7ababf18eccc6be64458))\n* alpine: Parse opts from -h output, add some opt arg completions ([7c5bc49](https://www.github.com/scop/bash-completion/commit/7c5bc49e29cf20ed5a338bad0da178dcecc63b6f))\n* (test suite): Add basic alpine test case ([282cdba](https://www.github.com/scop/bash-completion/commit/282cdbae6272e966e9fb0f91b06cf415ef929dda))\n* (test suite): Fix alias and cd cursor position tests ([35f1cd8](https://www.github.com/scop/bash-completion/commit/35f1cd844227c9ddcc36f316d87c4de9fe9db426))\n* (test suite): Add unrar to ubuntu14 container ([77fa46d](https://www.github.com/scop/bash-completion/commit/77fa46de688341bf229d27d05b51af434b7b5e0c))\n* (test suite): Install some things N/A in ubuntu14 to fedoradev ([f6c0d3a](https://www.github.com/scop/bash-completion/commit/f6c0d3a207c59caac74f4943126ea147d8c6896b))\n* (test suite): Avoid interference from user and system dirs (#87) ([1d3b6da](https://www.github.com/scop/bash-completion/commit/1d3b6da02a731e43077dc7dbef51036381b7889c))\n* (test suite): Accept non-whitespace single word in assert_complete_any ([476b260](https://www.github.com/scop/bash-completion/commit/476b26017e4168ad4be0b8d66ee9db03315fbdac))\n* (test suite): Load tested completions dynamically ([7fa35af](https://www.github.com/scop/bash-completion/commit/7fa35afb89e0a6614c173fef56191f01fa2e3ee7))\n* arch: Parse options from --help ([ca31dfa](https://www.github.com/scop/bash-completion/commit/ca31dfaf37ba0302da8b75427e36d3248e1c51ef))\n* (test suite): Add mailman bin dir to PATH for arch test ([222fbb8](https://www.github.com/scop/bash-completion/commit/222fbb80c19f1fa229a554a01726c2bffe6ab5c1))\n* (test suite): Ignore runtime loaded env function changes ([3dd8112](https://www.github.com/scop/bash-completion/commit/3dd81121c41767afa46cc5ef2911b33fad9de8ad))\n* (test suite): Add basic CentOS 6 container for bash 4.1 coverage ([537c9a0](https://www.github.com/scop/bash-completion/commit/537c9a0e9d59c699927a2eeb04d87c05a3638490))\n* Don't offer * as configured interface when there are none ([c287bb2](https://www.github.com/scop/bash-completion/commit/c287bb2af817cf12e065ea9c7c500532612bcd6d))\n* (test suite): Don't assume configured interfaces in CI setups ([dbaafbd](https://www.github.com/scop/bash-completion/commit/dbaafbdc79cd2abbe3ed27acad7293e507c67116))\n* (test suite): Simplify renice test, fix with only one completion ([8936b10](https://www.github.com/scop/bash-completion/commit/8936b10767144c4e5f84c04660f86c0828f7cc99))\n* (test suite): Fix CentOS 6 tcllib setup ([b253814](https://www.github.com/scop/bash-completion/commit/b253814289bcbe606a9bda2b961898585f814d80))\n* (test suite): Info test needs docs, don't exclude from CentOS ([f4b79ae](https://www.github.com/scop/bash-completion/commit/f4b79ae1c4ec89e1539f4bc026fc21ee8c0a25e2))\n* (test suite): Add our own dummy ri test fixture ([1a61fc8](https://www.github.com/scop/bash-completion/commit/1a61fc8b41504cea6372c9c9ceb118bea3133d7b))\n* ri: Add option and arg completions ([bf838e9](https://www.github.com/scop/bash-completion/commit/bf838e938342d4ebb8e3a45b837a60c80be661a9))\n* Don't define BASH_COMPLETION_COMPAT_DIR ([c41a762](https://www.github.com/scop/bash-completion/commit/c41a76237bc9dcbfa326eeddd026b66d7646d91d))\n* oowriter: Associate with *.pdf ([0cea46f](https://www.github.com/scop/bash-completion/commit/0cea46f1c88c1805ef3e9d11802d48c0a8013b4b))\n* py.test: New completion ([eae26d9](https://www.github.com/scop/bash-completion/commit/eae26d9bfac3df98eb047fc45d9b8a7c4bc5d7b9))\n* _configured_interfaces: Parse from /etc/network/interfaces.d/* on Debian ([d0c4410](https://www.github.com/scop/bash-completion/commit/d0c44102a8ed2e0a40d4e5456fc27bc21973a40e))\n* (test suite): Don't insist on loading all completions dynamically ([f845109](https://www.github.com/scop/bash-completion/commit/f845109a83bb7efbab89df9016f23595fea0bb7a))\n* (test suite): Set dcop result to untested if dcop server is not running ([25fa2f7](https://www.github.com/scop/bash-completion/commit/25fa2f72dce597a30e1e4a6088f175f159e9d159))\n* man: Don't check OSTYPE or GNU userland, just enable on all systems ([d0ff1a9](https://www.github.com/scop/bash-completion/commit/d0ff1a946a3bea2122b5adb77260faf06627a2de))\n* _user_at_host: Append @ suffix to username part completions ([f9f10a3](https://www.github.com/scop/bash-completion/commit/f9f10a396da44dddcd3f965cfe55fb3e16f85cf8))\n* _user_at_host: Set nospace only when completing username part ([a4c6763](https://www.github.com/scop/bash-completion/commit/a4c67638eaea89503c1623a78e1680ac1eb2331f))\n* bind: Add option and argument (non-)completions ([67e082c](https://www.github.com/scop/bash-completion/commit/67e082cf9dd0a9d9a0c7fd187e66db8fc8a374ee))\n* xine etc: Fix *.m4a association ([279c3cd](https://www.github.com/scop/bash-completion/commit/279c3cd6c66f0b18a74dbc96fde178998a7283d8))\n* mplayer, xine, etc: Associate *.mp4a and *.mp4v ([c868d7b](https://www.github.com/scop/bash-completion/commit/c868d7becbcb7ac16617a4858f40dd123821c32a))\n* mplayer: Remove duplicate *.m4a and *.m4v associations ([0845c21](https://www.github.com/scop/bash-completion/commit/0845c2183c91054013055ca1966ec1e547fa5b13))\n* Revert \"(test suite): Fix alias and cd cursor position tests\" ([c30a613](https://www.github.com/scop/bash-completion/commit/c30a6135f3f56931ed8e92b54733be3494805c14))\n* (test suite): Set TERM to dumb, not dummy ([81c72d4](https://www.github.com/scop/bash-completion/commit/81c72d444ab8aa8393371effd2334b2b83cb8503))\n* (test suite): Test screen -T completions ([c936d99](https://www.github.com/scop/bash-completion/commit/c936d99610d7a47fd75f7df38b9611faadd2167e))\n* gm: New completion, commands only for now ([1ac39db](https://www.github.com/scop/bash-completion/commit/1ac39db3f9906d23357661093360747b6b45f59d))\n* openssl: Add sha2 commands ([ec02542](https://www.github.com/scop/bash-completion/commit/ec02542c4293f3013dac3ad57a6775c4da66260d))\n* openssl: Parse available digests from dgst -h ([b6ddef3](https://www.github.com/scop/bash-completion/commit/b6ddef3d1f80c17b81c254ede4b362624a73b2a4))\n* python: Fix traceback avoidance on module completion error ([5faa19c](https://www.github.com/scop/bash-completion/commit/5faa19cb380fa31aa569401b30014dde3598a485))\n* test suite: Add Python module completion test case ([6abf9d6](https://www.github.com/scop/bash-completion/commit/6abf9d6c9ad848040f50a7a8732950789f831f97))\n* micropython: New completion, aliased from python ([9e5522f](https://www.github.com/scop/bash-completion/commit/9e5522fc29bda255caf9dd796c75c4c02662c756))\n* python: Split module completion to separate helper ([abb3016](https://www.github.com/scop/bash-completion/commit/abb3016cac990ffacf66a05ecd7a8d657589d817))\n* test suite: Improve ls home dir test descriptions ([fc8c976](https://www.github.com/scop/bash-completion/commit/fc8c9760368d4da2d97d78bae1f89d35fa0e4d42))\n* dpkg: Fix dpkg -i home dir completion ([dd8c53b](https://www.github.com/scop/bash-completion/commit/dd8c53b05f4954d0401d18b108d771e0d79d88a2))\n* test suite: Cosmetic tweaks ([a01c66b](https://www.github.com/scop/bash-completion/commit/a01c66b6e1e7b288fb96aefed777e4e3afb367bc))\n* test suite: Mark dpkg -L test case untested if no packages installed ([d3276a8](https://www.github.com/scop/bash-completion/commit/d3276a8c2c8e3b17549c21fc4daec1159495edac))\n* tar: Comment spelling fixes ([8c5283f](https://www.github.com/scop/bash-completion/commit/8c5283f89840fcb81811eae8fc19d4905f640c52))\n* test suite: If colon trim doesn't do anything, trim as usual ([f4ffafe](https://www.github.com/scop/bash-completion/commit/f4ffafe0e9d361cf4494962d70e5d6b76ed91407))\n* test suite: Ignore env var pulled in by use of scp in tests ([7f1f33b](https://www.github.com/scop/bash-completion/commit/7f1f33bdcb6e5eded2295ffeaec27199335ce65f))\n* test suite: Fix ifdown and ifup CI test skipping ([089288d](https://www.github.com/scop/bash-completion/commit/089288dd8b7a3c1abbcb0b230014ae03c92ca663))\n* test suite: Skip an expected make test case failure in centos6 CI ([4d5785f](https://www.github.com/scop/bash-completion/commit/4d5785f1b3bc320266addfecc8fab6d0b07d6904))\n* Expose version in BASH_COMPLETION_VERSINFO, use it in profile.d script ([eb6f40c](https://www.github.com/scop/bash-completion/commit/eb6f40c5a7e715d8a9104bf90c67018428ca2eb7))\n* test suite: Mark expected centos6 CI _filedir failures as such ([a1a4eb8](https://www.github.com/scop/bash-completion/commit/a1a4eb82050084a8447c4d2e9e248da9131d55b0))\n\n## 2.5 (2017-02-04)\n\n* : Whitespace fixes ([2ed36b8](https://www.github.com/scop/bash-completion/commit/2ed36b808cee5416139a034477a223f4910b53d8))\n* Travis: zopfli is AWOL? ([96141cd](https://www.github.com/scop/bash-completion/commit/96141cd29817c38b30a6ede294d91913548e475e))\n* make: Declare _make_target_extract_script like other functions ([7be3f33](https://www.github.com/scop/bash-completion/commit/7be3f33541f6c18d36008b49d25d018d50a8fa28))\n* : Move indentation settings to .editorconfig ([619fb1f](https://www.github.com/scop/bash-completion/commit/619fb1f86ece68ea56e0e5c30c030376c1f8a07f))\n* CONTRIBUTING: Reorder sections ([fefcf16](https://www.github.com/scop/bash-completion/commit/fefcf162ffd00b34e24aae55ec92293c2a6590f3))\n* .ipa is just a zip file and we should let unzip handle it (#71) ([7b9dc46](https://www.github.com/scop/bash-completion/commit/7b9dc46c6a26a1a8e99409bb7752dfe153f2de0f))\n* deja-dup: New completion ([d3c483c](https://www.github.com/scop/bash-completion/commit/d3c483c6d13596062aafbe2e8359affb2c2a8a9e))\n* perl: Remove full path to cat in PERLDOC_PAGER call ([06e4c48](https://www.github.com/scop/bash-completion/commit/06e4c4859c270e0999f3c8c9ba02fc16adf8aa6b))\n* mr: New completion ([624a452](https://www.github.com/scop/bash-completion/commit/624a452f57c2a0a777984493a8756ef7388a3f72))\n* travis: Add mr ([78b0543](https://www.github.com/scop/bash-completion/commit/78b054319cc8f4dd39076fb1ffdf898c3aaf498f))\n* dd: Sync completions with coreutils 8.24 ([8b35dd3](https://www.github.com/scop/bash-completion/commit/8b35dd34233761c2b238858eae7b458a6d017672))\n* mplayer: Associate with *.mjpg, *.mjpeg (Debian: #837779) ([c16826e](https://www.github.com/scop/bash-completion/commit/c16826ee35ecb405fe87007404d0fb846ad61a15))\n* ssh-keygen: support ed25519 keys (#79) ([85b6951](https://www.github.com/scop/bash-completion/commit/85b6951358fc6d120f9bf73960694439050264a1))\n* ssh-keygen: Parse switches with _parse_usage, not _parse_help ([4dc0016](https://www.github.com/scop/bash-completion/commit/4dc0016625993487ed28ff0914ab8ebca47bd4e8))\n* Add support for Include in ssh config (#70) (#80) ([1016e43](https://www.github.com/scop/bash-completion/commit/1016e4336c2eaa95888275df6ea248b4e913fb76))\n* ant: parse targets in imported buildfiles (#84) ([62233c8](https://www.github.com/scop/bash-completion/commit/62233c87c030dfe96f4c55575c4ebb93bb984638))\n* mr: Disable \"clean\" test case, command N/A before mr 1.20141023 ([98146c9](https://www.github.com/scop/bash-completion/commit/98146c9275524e4db33d05c52147b103550be4a5))\n* Support for python gui source files (#91) ([84881eb](https://www.github.com/scop/bash-completion/commit/84881eb314f45a42e11f81e574777e3c05e86e72))\n* ip: Recognize address in addition to addr ([b53b287](https://www.github.com/scop/bash-completion/commit/b53b287c0c0166a0c66fea8aebe694086d71ba03))\n* ip: Recognize a as alias for address and l for link ([7029dd8](https://www.github.com/scop/bash-completion/commit/7029dd825201a1d75e052408102dd8a3f744ace1))\n* Add sidedoor to _ssh() completion (#106) ([7ecca5c](https://www.github.com/scop/bash-completion/commit/7ecca5c89aede4ddd39e516969f9bfc8aba219ee))\n* (test suite): Avoid loading user's ~/.bash_completion, fixes #87 ([c96f432](https://www.github.com/scop/bash-completion/commit/c96f4323c429b793cb03366faac59fbb78472dca))\n* test/config/*: Delete trailing whitespace ([d8cb128](https://www.github.com/scop/bash-completion/commit/d8cb1284245e23351ccc6d96346aea13ec1bcaf4))\n* travis: Skip bluez and nis for now due to post-install script issues ([58aaad3](https://www.github.com/scop/bash-completion/commit/58aaad3ee112333cdb1984d9838c6a7f747fdfc5))\n* Fix bug in 'make' completion when using BSD sed (#108) ([33f3ef3](https://www.github.com/scop/bash-completion/commit/33f3ef366e594ea8bf88d934031b63b5cd89285a))\n* ccache: fix completing compiler's flags ([ae84d53](https://www.github.com/scop/bash-completion/commit/ae84d53c44a3d4cb0bc38e7df53b69242dbd7cc7))\n* Add more tests for ccache ([b0ec56d](https://www.github.com/scop/bash-completion/commit/b0ec56d24caee277aaf35ee86beb939add648165))\n* javac: Complete -cp like -classpath ([c068fca](https://www.github.com/scop/bash-completion/commit/c068fcaa83c8e1b183df62df8f85be6012a56df0))\n* test suite: Add java/javac non-completion fixture ([b35c4c9](https://www.github.com/scop/bash-completion/commit/b35c4c9cbbf45b59206f1a4ed1260a554a0f920e))\n* Minor edits to README.md (mostly formatting) (#110) ([23cc43b](https://www.github.com/scop/bash-completion/commit/23cc43b4484c8d683d9c56400cc57698c2c2d984))\n\n## 2.4 (2016-08-12)\n\n* tipc: add tipc completions ([a0b5863](https://www.github.com/scop/bash-completion/commit/a0b586332f32f5c4ba4735424f387915bd975946))\n* CONTRIBUTING: Highlight request for test cases ([0eb9600](https://www.github.com/scop/bash-completion/commit/0eb9600990b0197b2982a7f79bcfa9aa2401cb6f))\n* test suite: Add function and declare test cases ([81f2708](https://www.github.com/scop/bash-completion/commit/81f2708198dd87604c4257b94b18c0e96a2852fb))\n* mpv: Don't install symlink for it, fixes #24 ([0382773](https://www.github.com/scop/bash-completion/commit/0382773bbfc21dc1fb5467c1c0426ea3c984b6ec))\n* aclocal: Install completion for 1.14 and 1.15, fixes #25 ([a8f4357](https://www.github.com/scop/bash-completion/commit/a8f4357f154f142ef30347b87a378e07b22608e9))\n* Better handling of typeset/declare ([af3934a](https://www.github.com/scop/bash-completion/commit/af3934ad3474e94faa08f94523ed029e95c98767))\n* Add tests for declare/typeset ([71b9147](https://www.github.com/scop/bash-completion/commit/71b9147d375393c60e3628bd7cd5ab41fac8504d))\n* Support completing array variables and expansions ([dde1d31](https://www.github.com/scop/bash-completion/commit/dde1d314c4e8934693e7090ef4467dfac7d72a92))\n* tipc: add test framework ([f6d00ad](https://www.github.com/scop/bash-completion/commit/f6d00ad8af985c8790eb9151aa3840e0cf4e76a0))\n* tipc: merge functions into main ([935a98d](https://www.github.com/scop/bash-completion/commit/935a98d1550372d082abe4ac6965cf9ea1fe3989))\n* tipc: use bash here string instead of echo ([d03425e](https://www.github.com/scop/bash-completion/commit/d03425e23ff8e2957bc639c61f9d9bfbc2fac3a9))\n* tipc: remove unnecessary function _tipc_get_val() ([1969438](https://www.github.com/scop/bash-completion/commit/1969438c818c0829b78f87d34968357f3478b94a))\n* tipc: add command prefix to link sed ([cdbc193](https://www.github.com/scop/bash-completion/commit/cdbc193826cabe74f89650236ae1bda8f7e9aa9f))\n* The BitKeeper completion used the wrong set of commands ([be62355](https://www.github.com/scop/bash-completion/commit/be623550daf22492d58dfa359eea71cf36b723f3))\n* man: Prioritize MANPATH, simplify, add fallback e.g. for busybox, fixes #28 ([c9f54e7](https://www.github.com/scop/bash-completion/commit/c9f54e7a411613cbfba2b200d35059f5bcb87113))\n* cppcheck: Complete filenames too for --platform ([7634fe1](https://www.github.com/scop/bash-completion/commit/7634fe1b88948cbb724b6f3e8e3d8a6786973fd3))\n* tipc: use cur variable for flag completion ([696eb89](https://www.github.com/scop/bash-completion/commit/696eb8961e2038c88eaff85b3bea20fe938ccd87))\n* tipc: readd call to complete command ([831abc7](https://www.github.com/scop/bash-completion/commit/831abc716288b636ce4aa66a4e0b1e5b3100a469))\n* Use shell globbing instead of ls to source files in compat dir ([760bd6f](https://www.github.com/scop/bash-completion/commit/760bd6f2758437eac08c4133884434cfd1ca54b3))\n* aspell, minicom, mysql: Replace use of ls with printf ([751dbbb](https://www.github.com/scop/bash-completion/commit/751dbbb156aaa5171ba5e9136662ee5fbc6cf7d6))\n* rpm: Fix --whatenhances arg completion ([e236020](https://www.github.com/scop/bash-completion/commit/e236020f858fc8929eee2fc4f1f4b7ce0ac5b3b0))\n* make: Avoid a grep ([47c5c97](https://www.github.com/scop/bash-completion/commit/47c5c9773b00504a174326e356a5455892efe616))\n* vncviewer: Cleanup shopt use, drop an eval ([cfc6212](https://www.github.com/scop/bash-completion/commit/cfc62125a8fc9e3d72e9154a504f9548b0b2ba38))\n* aptitude: List packages using _apt_cache_packages, fixes #33 ([49265f0](https://www.github.com/scop/bash-completion/commit/49265f0094690bb9443de1c46a54d87d58876310))\n* tar: silence --version's stderr output ([e1b1fd2](https://www.github.com/scop/bash-completion/commit/e1b1fd29a781d6f760ba2735e183d03a3e0ea130))\n* test suite: Add bashcomp_bash env var for better control on tested bash ([93940c0](https://www.github.com/scop/bash-completion/commit/93940c099aa629d1990ba4fc995d9e44453253ab))\n* Travis: First steps toward testing with OS X ([60a5b47](https://www.github.com/scop/bash-completion/commit/60a5b47760710836338faf4867a08985fcbb10d5))\n* chroot: New (generic long options) completion, see #38 ([ce49e8d](https://www.github.com/scop/bash-completion/commit/ce49e8d87430bd640fb2ed1b5e03b05e02093b75))\n* pyvenv: New completion ([fd9515f](https://www.github.com/scop/bash-completion/commit/fd9515fbe33bd5fa40a86251bb9e8a2616012633))\n* abook: Parse long options from command including full path ([5ad751f](https://www.github.com/scop/bash-completion/commit/5ad751f89726a34ad0a22720a686e80a877c76b3))\n* test suite: Add basic pushd test case ([864cb34](https://www.github.com/scop/bash-completion/commit/864cb342b37110df17903e6bae94c6bf2b785cd3))\n* pushd: Use _cd completion for CDPATH support, closes #38 ([e35c504](https://www.github.com/scop/bash-completion/commit/e35c5046676b12d43bc19b5d2727ec03a6086dc6))\n* Support pod document files for perldoc (#39) ([40e7b4e](https://www.github.com/scop/bash-completion/commit/40e7b4e8730e515a075c1e4852aa98ffa7ac78e0))\n* perl: Remove some duplicated code ([cf559ae](https://www.github.com/scop/bash-completion/commit/cf559aeb1e67ee40a2b8c38e5581e02cd346ee22))\n* test suite: Add perldoc module+pod completion test case ([c6defa3](https://www.github.com/scop/bash-completion/commit/c6defa39cede252c9b3b39aaa35a6608b6310ad2))\n* mysql: Avoid --default-character-set error with failglob, fixes #46 ([fa10367](https://www.github.com/scop/bash-completion/commit/fa10367f319b91bda56b8cf972d60dfb5ae65c5b))\n* tipc: remove unnecessary return values ([6c3942c](https://www.github.com/scop/bash-completion/commit/6c3942c8844dd95613d178dd835e6253004ce14e))\n* tipc: make loop variables local ([e1b535e](https://www.github.com/scop/bash-completion/commit/e1b535e31f28097a6f90da1e0e5b11d5280dcde0))\n* tipc: use double brackets in if conditions ([d815b46](https://www.github.com/scop/bash-completion/commit/d815b46102e6a0d92ca7c0e3a8c9d8881f606a3a))\n* apache2ctl, aspell, make: Don't hardcode completion generator command ([3426649](https://www.github.com/scop/bash-completion/commit/342664947b241902d352dba2aede4cdcda5585f1))\n* python: Support -Q and -W arg completion without space ([a9d0250](https://www.github.com/scop/bash-completion/commit/a9d0250abf879468272c56068cda5a94e1e850b3))\n* xetex, xelatex, luatex, lualatex: Associate with tex files ([1e567a5](https://www.github.com/scop/bash-completion/commit/1e567a5eaf861804b6b8d636f976e947b4d2dc1c))\n* CONTRIBUTING: Note patch preferences if not using GitHub pull requests ([5017ee6](https://www.github.com/scop/bash-completion/commit/5017ee6a3be315bf66eb5ee642a0450aa93741e6))\n* (test suite): Remove test/fixtures/_filedir/a\"b from git, create on the fly ([fec077d](https://www.github.com/scop/bash-completion/commit/fec077d555f112b9f455c45860f90a3b47392fcf))\n* (test suite): Remove Bash::Completion.3pm.gz from git, create on the fly ([52d05a6](https://www.github.com/scop/bash-completion/commit/52d05a68e4583c8ee4dcd2c1f0da5db6629e5ff1))\n* (test suite): Fix fallout from fec077d555f112b9f455c45860f90a3b47392fcf ([6170f07](https://www.github.com/scop/bash-completion/commit/6170f073a8765dabcd74f98c3362a10201f5322e))\n* tipc: suppress tipc error messages ([83f78d2](https://www.github.com/scop/bash-completion/commit/83f78d2b4c2942a01f16697963a5ff24540d9ca7))\n* tipc: handle complete words without trailing space ([1e778fc](https://www.github.com/scop/bash-completion/commit/1e778fcf780abe0f6d4044fe891b8385bf9bbd0b))\n* tipc: fix missing last char in link name completion ([502b718](https://www.github.com/scop/bash-completion/commit/502b7189350632cd074f86361b498294b745ee61))\n* tipc: Indentation fix ([48ab557](https://www.github.com/scop/bash-completion/commit/48ab5571b5a9c21db269cbf981cf7f9dae78bd44))\n* tipc: Invoke ls with \"command\" ([103dbe5](https://www.github.com/scop/bash-completion/commit/103dbe5cf25087da4e5804374debcf8e9bb289a1))\n* (test suite): Pass assert_complete_any for exact/only given arg completed ([847c2bf](https://www.github.com/scop/bash-completion/commit/847c2bf1aa30ca9f2718f583ad148ba558ca6cc2))\n* Travis: Install more packages for more test coverage ([6388b8f](https://www.github.com/scop/bash-completion/commit/6388b8f5e77e1357a2d99109a46df7b813fdfd52))\n* hcitool,svcadm,tar: Spelling fixes ([9a03b80](https://www.github.com/scop/bash-completion/commit/9a03b8068e20d4384786d9e5259b0d6d25575438))\n* pypy3: Alias to python ([35767bf](https://www.github.com/scop/bash-completion/commit/35767bfdf4c8751f2bb453aa65bf359b313b79de))\n* pypy*: Add basic --jit arg completion ([72beabe](https://www.github.com/scop/bash-completion/commit/72beabe4fcae1025a18e689b551b9c5c2d327c30))\n* : Remove redundant return 0's ([8611927](https://www.github.com/scop/bash-completion/commit/8611927cfd3f95b88adcd8eff34cb17250870291))\n* : Trivial cleanups ([b31c0f9](https://www.github.com/scop/bash-completion/commit/b31c0f95c7151beb8f97ebed042d555264aa6fc1))\n* pkg-get,pkgrm: Drop unnecessary _have calls ([2d2d15b](https://www.github.com/scop/bash-completion/commit/2d2d15b8f4eab836c39f7d31c4ef0c9586103ad8))\n* jarsigner: Add some option arg (non)completions ([5da97ee](https://www.github.com/scop/bash-completion/commit/5da97ee3da2582b988df7d9ecab788dc8b63485e))\n* pkg-get: Don't use hyphens in function names ([e194c31](https://www.github.com/scop/bash-completion/commit/e194c312c765cd87541ab46178b17521e098c64c))\n* lrzip: Add -m arg noncompletion ([fd6412e](https://www.github.com/scop/bash-completion/commit/fd6412e159143360972549233f28bb84e6cdc3f9))\n* javadoc: Add bunch of option arg (non)completions ([30598c8](https://www.github.com/scop/bash-completion/commit/30598c864c71e6a5184a7f4aef02cfed2df38e32))\n* rpm: Offer --filetriggers with -q ([8212aca](https://www.github.com/scop/bash-completion/commit/8212acae3588ecec0afcb0ac94a799b62a475737))\n\n## 2.3 (2016-03-28)\n\n* lvm: fix all commands that should get all PVs ([caa2222](https://www.github.com/scop/bash-completion/commit/caa22225f86034f72e7020e0919b4a618c580509))\n* lvm: pvcreate should be able to use all block devcices ([2212dc5](https://www.github.com/scop/bash-completion/commit/2212dc584160977cfbca1eb43dd745b8056baf3b))\n* CONTRIBUTING.md: Ask for test cases ([78e9493](https://www.github.com/scop/bash-completion/commit/78e949363c0f1162d324d7d6c788f74e5b10cc57))\n* make check: Test syntax of all completion files ([b5d8a84](https://www.github.com/scop/bash-completion/commit/b5d8a84852c0ef9984f56f047ed296d1081ce668))\n* travis: configure and run completions syntax check ([75c537c](https://www.github.com/scop/bash-completion/commit/75c537c5a72c078dcaa21dad6c19bf90e2d444a3))\n* Completion for python zip archives ([f205719](https://www.github.com/scop/bash-completion/commit/f20571949641f44eb8a0e6e88a1aeffd1bd2a42d))\n* unzip, zipinfo: Complete on *.pyz ([a576160](https://www.github.com/scop/bash-completion/commit/a5761607bd37a201a2512f10bbc7be646e51b2fb))\n* test suite: Add some python test cases ([16d52f9](https://www.github.com/scop/bash-completion/commit/16d52f9a6c6be22d421ba2de07aec8413803c112))\n* python: Complete all files only if -c is before current word ([6eae809](https://www.github.com/scop/bash-completion/commit/6eae809beacc7c6ab3db5f5ccfa57dce48d00e3b))\n* python: Don't offer options after -c ([5f016fc](https://www.github.com/scop/bash-completion/commit/5f016fcd3991c389da27edd37668b0fd7db37cf4))\n* python: Complete all files also after -m ([f17407b](https://www.github.com/scop/bash-completion/commit/f17407bc3282f2abd5fb9ea47e07b18cf4a9e898))\n* python: Simplify code ([235f726](https://www.github.com/scop/bash-completion/commit/235f7269773b80fed4b41722de28df93ee0fd817))\n* tar: Don't write to /tmp/jetel ([6bdd922](https://www.github.com/scop/bash-completion/commit/6bdd92202f55d7c530dcbeb2a243604dac546cf1))\n* test suite: Add tar xvf filename test case ([807f903](https://www.github.com/scop/bash-completion/commit/807f903f86ad647425c83f7ad6fc499014c6734e))\n* tar: Fix GNU tar help output parsing regex, fixes #15 ([0b7189d](https://www.github.com/scop/bash-completion/commit/0b7189d4eee4597e11cab02e6b4dcae488db5ca8))\n* tar: Remove unused variable ([7ab05bf](https://www.github.com/scop/bash-completion/commit/7ab05bf9d97ce5a6ced7acdfc21235e06542c3f2))\n* tar: Detect GNU/other from --version only once per session ([88c671a](https://www.github.com/scop/bash-completion/commit/88c671a2c74bfde3bc2ec7c6f74133ac613c61da))\n* test suite: Fix tar failure caused by previous tar change ([198ab64](https://www.github.com/scop/bash-completion/commit/198ab64862777763f9750216131938300bf3a79c))\n* test suite: Tolerate \"See 'man feh'\" feh --help output ([b4b8916](https://www.github.com/scop/bash-completion/commit/b4b89162e376574980292eaab761d393a6fbd5f9))\n* test suite: Don't insist on property completions if synclient -l fails ([9716a54](https://www.github.com/scop/bash-completion/commit/9716a54837d43cbd8d79c04ac66251df8d3fcf1f))\n* test suite: Fix abook test case ([eae0183](https://www.github.com/scop/bash-completion/commit/eae0183322854ee51500482e2223f5c3091d39b7))\n* : Use [:blank:] instead of $'\\t ' tricks where appropriate, fixes #19 ([657fcf6](https://www.github.com/scop/bash-completion/commit/657fcf62c77343ede3a21430a6c8e4faf4cd1dbe))\n* gnokii: Use <<< instead of echo + pipe ([b7ededc](https://www.github.com/scop/bash-completion/commit/b7ededc40fdf02f3ee110e057ebe103338ccbf0f))\n* make: Use <<< instead of printf + pipe ([1a122fb](https://www.github.com/scop/bash-completion/commit/1a122fb5827588d57339fc88f0692dd92a0c14b2))\n\n## 2.2 (2016-03-03)\n\n* feh: Add new sort type ([0354981](https://www.github.com/scop/bash-completion/commit/0354981b1f348263edb7c2e6f1f8dc619a48c476))\n* kcov: Add new sort types, complete --replace-src-path arguments ([6cb7f96](https://www.github.com/scop/bash-completion/commit/6cb7f969745dd6b2075dd61244f8e60445a6a3d5))\n* Add config for cmake to bash-completion. ([94b7e63](https://www.github.com/scop/bash-completion/commit/94b7e63f6d525a029efac07e20f4102fe8563a71))\n* _mac_addresses: Use explicit C locale for ifconfig (Debian: #704832). ([a9db458](https://www.github.com/scop/bash-completion/commit/a9db458339fb518178b1b6cc234930bb869e95ea))\n* aclocal, automake: Install for *-1.10, *-1.12, and *-1.13 too. ([e772425](https://www.github.com/scop/bash-completion/commit/e772425cdd660d4d59914d2e067be07d7f4b3504))\n* cvs rm: Don't filter existing files with -f (RedHat: #949479). ([9852597](https://www.github.com/scop/bash-completion/commit/9852597d8c19567ee1e01c03a297692d9c1cd764))\n* Use == instead of =. ([497c209](https://www.github.com/scop/bash-completion/commit/497c20902a978098512674bbaa37a839e355c782))\n* nmcli completion was integrated upstream ([580a4cf](https://www.github.com/scop/bash-completion/commit/580a4cf6e55ab1afd6b1f8f7efc54436e7046e44))\n* Revert \"nmcli completion was integrated upstream\" ([cdd2c3d](https://www.github.com/scop/bash-completion/commit/cdd2c3d71d9eec2860ad99ba3f81ef65dbd1e723))\n* nmcli: Deprecate our completion, upstream has one in 0.9.8.0. ([9780b0a](https://www.github.com/scop/bash-completion/commit/9780b0a04472187cb4ac4557e21038caac31fd86))\n* sh: Complete script arguments with all filenames (Alioth: #314226). ([daaa541](https://www.github.com/scop/bash-completion/commit/daaa54100ed061a0c8e7ce89a8bda009530246a3))\n* cvs: Fix checkout -j non-completion. ([bb0739f](https://www.github.com/scop/bash-completion/commit/bb0739fafd87bfca2e5d43e8b448ec1293a43ada))\n* Clean up/compact various globs. ([d99c220](https://www.github.com/scop/bash-completion/commit/d99c2203b9ff6e35ce12fbe0572773a9f3abeadb))\n* wget: Stop completing after --help/--version. ([5786568](https://www.github.com/scop/bash-completion/commit/57865686de2d2ff0c455704428a49d5a3b4f98c8))\n* wget: Drop incorrect -nv arg completion. ([1969d12](https://www.github.com/scop/bash-completion/commit/1969d125bacde3da22c06e5ca729c7e766ce7d65))\n* wget: Add --accept-regex/--reject-regex/--regex-type arg (non)completions. ([5c6b1bb](https://www.github.com/scop/bash-completion/commit/5c6b1bb4a47ca522c111f110f44eff771d9aea5f))\n* perl*: Fix handling of relative paths in @INC. ([18c28bb](https://www.github.com/scop/bash-completion/commit/18c28bb9a2147e662755e393d1ec39f270948d30))\n* perl: Fix -dt: completion. ([97efc7c](https://www.github.com/scop/bash-completion/commit/97efc7ca08f22043ce5c55f41ac093de9c7ca082))\n* hcitool, rfcomm, ciptool, hciconfig: Don't leak $args. ([3a3290d](https://www.github.com/scop/bash-completion/commit/3a3290ddcf81181bbd9f22a739536b65df0c5647))\n* 7z: New completion. ([5a9e8f2](https://www.github.com/scop/bash-completion/commit/5a9e8f219b847a6c99f294b4cc492e77a63a22f0))\n* file-roller: Reuse unzip's xspec. ([42196ef](https://www.github.com/scop/bash-completion/commit/42196ef7fc1f91c51a471a1b50d2c1a48d77560f))\n* 2to3: New completion. ([a4b69e7](https://www.github.com/scop/bash-completion/commit/a4b69e75873b9b24e1da0c6bda22d42365cc97ac))\n* perl: -d/-dt option argument is optional (Alioth: #314242) ([ad455df](https://www.github.com/scop/bash-completion/commit/ad455dfa9de9253d52d6352888777f6a9328eade))\n* dpkg: Suppress unwanted error messages (Debian: #706502) ([9ca8d93](https://www.github.com/scop/bash-completion/commit/9ca8d933c69e5a52e7866227dfc823657c180f40))\n* cppcheck: Add new --enable option argument and --library argument completion ([77ebc93](https://www.github.com/scop/bash-completion/commit/77ebc93a023e6b1bba87b9572c17e824d248c540))\n* export, _variables: Do TZ= completion (Redhat: #994646). ([3f144be](https://www.github.com/scop/bash-completion/commit/3f144beb721525821136f76f53a3147b4688d331))\n* Cosmetics. ([62e0c3b](https://www.github.com/scop/bash-completion/commit/62e0c3ba7245741c9ef2a664a84a8f6c61a6f875))\n* make: Use only posix basic regexps with sed (Alioth: #314345) ([f230cfd](https://www.github.com/scop/bash-completion/commit/f230cfddbd12b8c777040e33bac1174c0e2898af))\n* _longopt: Run commands in C locale. ([a282d02](https://www.github.com/scop/bash-completion/commit/a282d0254cca2e9e1e851e251dc77f3b2aa653ce))\n* aptitude: safe-upgrade accepts package name as parameters (Alioth: #313638, Debian: 673235) ([e91a458](https://www.github.com/scop/bash-completion/commit/e91a45889f3fb8b4007949797fc3f07af24bb52f))\n* bzip2, gzip, lzma: Cleanups. ([61d1d7d](https://www.github.com/scop/bash-completion/commit/61d1d7df42cace84c5d706b43f44ea2083c54723))\n* zopfli: New completion. ([2da4ee9](https://www.github.com/scop/bash-completion/commit/2da4ee9ad5a9016e4e4a89e4822bf6e1688c6175))\n* make: Fix basic regex for portability (Alioth: #314345) ([3ac523f](https://www.github.com/scop/bash-completion/commit/3ac523f57e8d26e0943dfb2fd22f4a8879741c60))\n* _known_hosts_real: Pre-expand \\t instead of relying on sed supporting it (Alioth: #314393). ([50ae579](https://www.github.com/scop/bash-completion/commit/50ae57927365a16c830899cc1714be73237bdcb2))\n* dict: Trivial regex cleanup. ([705be00](https://www.github.com/scop/bash-completion/commit/705be005027577ba540212be6b0bbb25e95f78f3))\n* abook, kldunload: Pre-expand \\t instead of relying on sed supporting it. ([24f0c58](https://www.github.com/scop/bash-completion/commit/24f0c58c29885f89ef2a3a16db17e73b6cd6f64e))\n* cc, c++: Install minimal completion for non-gcc ones (Alioth: #314417). ([d6600e6](https://www.github.com/scop/bash-completion/commit/d6600e6a10a370961b4bd4e1e060ba79e080a8d7))\n* cc, c++: Check path to binary when finding out if it's gcc (Alioth: #314417). ([ffabc6f](https://www.github.com/scop/bash-completion/commit/ffabc6f2829201815c1a9c69cfdf8bdbe77ff648))\n* f77, f95: Use the same completion as for g77, g95 if they are links to gfortran ([df8782d](https://www.github.com/scop/bash-completion/commit/df8782d76928bd39b3de138305f9b0af36628a9f))\n* 7z: Improve completion ([d048a14](https://www.github.com/scop/bash-completion/commit/d048a14b2ae18c70ddcf54558cdc79eaf7e8d751))\n* mplayer: -dvd-devices takes dvd devices, dirs and .iso files as argument ([d482e74](https://www.github.com/scop/bash-completion/commit/d482e746821f102205475dfb835ca75a7fd02d63))\n* _known_hosts_real: Exclude %h HostName entries (RedHat: #1015935). ([fcc9545](https://www.github.com/scop/bash-completion/commit/fcc9545b44f32b627f75e1589fb93a5c7ad86bff))\n* timeout: New completion. ([63b4995](https://www.github.com/scop/bash-completion/commit/63b499593a595cffd09403852555577e3f590cb5))\n* complete on freerdp-specific known hosts list ([1cfbbdd](https://www.github.com/scop/bash-completion/commit/1cfbbdd52cafd6b995f7241e2b87a41ed0f7a87a))\n* bts: New completion, thanks to Federico Ceratto. ([b2e7951](https://www.github.com/scop/bash-completion/commit/b2e7951cd714bd31e6efd0b6e16c1f916fd94486))\n* appdata-validate: New completion. ([e93cc98](https://www.github.com/scop/bash-completion/commit/e93cc98523e722bc0557ae623b4bd9d16ee01486))\n* uscan: New completion, thanks to Federico Ceratto ([61fa261](https://www.github.com/scop/bash-completion/commit/61fa261502f904c3afa5f053a68cccd243cbfcd4))\n* Refactor bts and uscan, since they use common functions ([780d97c](https://www.github.com/scop/bash-completion/commit/780d97c5ac41a1d170fa294811e8cadffa550248))\n* wtf: Hush stderr when db file doesn't exist. ([f5df66f](https://www.github.com/scop/bash-completion/commit/f5df66f47653ebe781090411a8e03fa052053273))\n* wtf: Don't offer -f if it was already specified. ([e694978](https://www.github.com/scop/bash-completion/commit/e694978346b017d92dfeb7968fc57d018c8721a4))\n* wtf: Look for acronym db from /usr/share/games/bsdgames/acronyms too. ([920bbb8](https://www.github.com/scop/bash-completion/commit/920bbb8582bcd3039ff4e4388e795e3144eb30b6))\n* (testsuite): Limit wtf completions to A* to keep expect happier. ([c527b54](https://www.github.com/scop/bash-completion/commit/c527b543a84363449902e2be5e80786aceaa7931))\n* cppcheck: Include - in --file-list completions. ([4df6d3f](https://www.github.com/scop/bash-completion/commit/4df6d3ffb86cf2cd9f583d5e927f2661a8a83a84))\n* optipng: New completion. ([34a74df](https://www.github.com/scop/bash-completion/commit/34a74df61973d1f49805135e79045e2c7b1589e0))\n* lz4: New completion. ([a2e2f19](https://www.github.com/scop/bash-completion/commit/a2e2f198d820c55857e372f6477c6fe07a23df92))\n* (testsuite) Check for grep and ls invoked without \"command\", see README ([d98e56f](https://www.github.com/scop/bash-completion/commit/d98e56fb0725f96a5cb39362c2d9a60a39e69154))\n* lintian: Replace some grep+cuts with awk ([93ee009](https://www.github.com/scop/bash-completion/commit/93ee00947ae112f195ed368f3414f3622d113630))\n* gcc, lintian, make, pkgadd, slackpkg: grep -> \"command grep\" (Debian: #734095) ([e3edf7a](https://www.github.com/scop/bash-completion/commit/e3edf7ac423179f70acbd77d9ffbbf5cfa91ce58))\n* aptitude, dpkg: Replace some grep+cuts with awk ([e777395](https://www.github.com/scop/bash-completion/commit/e777395ac3ce25527e58e04bfc406ae03bdb3b12))\n* ip: Add some addr, addrlabel, and route arg completions ([b5d0cdd](https://www.github.com/scop/bash-completion/commit/b5d0cdd802817708bb1fdb03880eb95e9be9e67b))\n* jpegoptim: New completion ([8617e22](https://www.github.com/scop/bash-completion/commit/8617e227e541ffc3d34c69d861c52f188bd5ae15))\n* Bump copyright years to 2014. ([01fd3b4](https://www.github.com/scop/bash-completion/commit/01fd3b4f55407623dbef58b6b6a756ad623c334f))\n* ssh-keygen: New completion ([0b7d92c](https://www.github.com/scop/bash-completion/commit/0b7d92cf2bb3eb04668c73b6d39726caca617bf9))\n* portsnap: New completion. ([c3770c1](https://www.github.com/scop/bash-completion/commit/c3770c17984bb61255db6adb48886b466c335e03))\n* freebsd-update: New completion. ([5ff5a4e](https://www.github.com/scop/bash-completion/commit/5ff5a4e0f875e8d1a49848408cfe72778889cbe8))\n* testsuite: Add basic tests for portsnap and freebsd-update ([602d188](https://www.github.com/scop/bash-completion/commit/602d18853ccb71baa233c33d93503b0ce27070a0))\n* hwclock,ionice,rtcwake: Deprecate in favor of util-linux ones (Debian: #737672) ([e4b1740](https://www.github.com/scop/bash-completion/commit/e4b17402bbb5d53797a601de93771d8bd0df5213))\n* _*: Install our deprecated completions too, try loading them secondarily ([e201d1b](https://www.github.com/scop/bash-completion/commit/e201d1be7ed92bf35c249d6d01c4001378e0ed77))\n* testsuite: Add basic test cases for deprecated completions ([3e06371](https://www.github.com/scop/bash-completion/commit/3e0637128f67807500f3af042a6f536d1404b968))\n* testsuite: Add basic newgrp test case ([bb76897](https://www.github.com/scop/bash-completion/commit/bb768978ba2eee1ab5d0f4e3d6158d9df1643630))\n* cal,chfn,chsh,dmesg,eject,hexdump,look,newgrp,renice,runuser,su,write: Deprecate on Linux in favor of util-linux ones (Debian: #737672) ([e452f2e](https://www.github.com/scop/bash-completion/commit/e452f2e8d6788458830bf2afe55d641e6adfa940))\n* pyflakes: New completion ([e14617e](https://www.github.com/scop/bash-completion/commit/e14617e498f0e2e2faceea9205f96d72c3e9ef8d))\n* flake8: New completion ([5152356](https://www.github.com/scop/bash-completion/commit/5152356ad1b0c8384d52ea9648529c448bbb4af2))\n* ri: Fix colon handling in class completion. ([24ea53f](https://www.github.com/scop/bash-completion/commit/24ea53f01de9c218a133d8cf7b3c77d6ad07bc26))\n* ri: Fix class completion with ri >= 3. ([3cdcfde](https://www.github.com/scop/bash-completion/commit/3cdcfdeda65a281a4f175a6b2f330c983a4bd217))\n* (testsuite) Avoid complete-ant-cmd.pl errors with our build.xml ([14be62a](https://www.github.com/scop/bash-completion/commit/14be62aae4197a7f98e913c0ada910c5c2ea7f04))\n* FAQ: Clarify that we mean the bash man page for M-/ ([293bbaa](https://www.github.com/scop/bash-completion/commit/293bbaaa90238511b12ffb0efd3d5de0cbd5abfc))\n* profile.d: Don't return from a sourced script (Debian: #741657) ([867282a](https://www.github.com/scop/bash-completion/commit/867282a7341ccfff9a0e8a8ef6bba6e781b66afb))\n* man: Use -w instead of --path ([4927730](https://www.github.com/scop/bash-completion/commit/492773098004700d670b4e1c12eebac506471d90))\n* xrandr: Add (some) --setprovider* arg completion support ([c50313c](https://www.github.com/scop/bash-completion/commit/c50313c30df5eb3a7956b0420f882508e79da0a5))\n* xrandr: Use the invoked command internally, not hardcoded \"xrandr\" ([b758afc](https://www.github.com/scop/bash-completion/commit/b758afc105fd0656c13f88a5bd2f73bac81399db))\n* qemu: Apply completion to qemu-kvm/-system-i386/-system-x86_64 too ([61ad655](https://www.github.com/scop/bash-completion/commit/61ad655fc4a6c18947ce6f17d4ea8f87abd6c945))\n* qemu: Fix -balloon arg completion ([4a4afd5](https://www.github.com/scop/bash-completion/commit/4a4afd5eab0fcaf19ac1f2ce55c1bb305f89903f))\n* pngfix: New completion ([13ad1f1](https://www.github.com/scop/bash-completion/commit/13ad1f1966f5baa14d9785c4b732dda3a29f4f14))\n* gdb: support --args style completion (Alioth: #314664) ([b1f7803](https://www.github.com/scop/bash-completion/commit/b1f78035565dcca343841cc4fa7ff54b09cc81b9))\n* eog: Complete on *.pgm (RedHat: #1090481) ([77e11c4](https://www.github.com/scop/bash-completion/commit/77e11c41ea376e364ac83ddc54428b18052b8ffe))\n* nslookup: complete on hosts (Alioth: #314673) ([b74d537](https://www.github.com/scop/bash-completion/commit/b74d53761afb48e5e0948b70e7202a1c1cda4897))\n* hostname: New completion ([c924d32](https://www.github.com/scop/bash-completion/commit/c924d32b4c127bc9cc46cb71d3148c8bdbfdd6cf))\n* pypy: New completion identical to python (Alioth: #314501) ([38a013e](https://www.github.com/scop/bash-completion/commit/38a013e22cd30c0cce84caaaff2763d0c39ce131))\n* Use more straightforward way to check bash version ([768a958](https://www.github.com/scop/bash-completion/commit/768a95854616e25c8da3f9d79048f9bbb5ecb2a6))\n* dpkg: Add support in dpkg completion for .ddeb (LP: #568404) ([eafde37](https://www.github.com/scop/bash-completion/commit/eafde3784836391741c2264ad1b350fff1aa276a))\n* make: completion shouldn't be confused by the output of $(info confuse: make) ([54d53c6](https://www.github.com/scop/bash-completion/commit/54d53c622745e907d288d67d832a0b09aaa1d3df))\n* Puppet: use puppet terminology ([ac98c31](https://www.github.com/scop/bash-completion/commit/ac98c31f30b74b32ec0eea8df6c71b866b16b58e))\n* Puppet: puppet -* doesn't imply 'puppet apply' ([20e9bef](https://www.github.com/scop/bash-completion/commit/20e9befbff2b4cac09f7beec58e5ad6eac1425b4))\n* Puppet: puppet parser support ([b56df70](https://www.github.com/scop/bash-completion/commit/b56df708a1bbaf27bf76d06b18448bba6b2d59f6))\n* Puppet: agent: update options list, accordind to 'puppet help agent' ([af5ba56](https://www.github.com/scop/bash-completion/commit/af5ba56089088669e31bb49d855bcc42c98f0951))\n* Puppet: apply: update options list, accordind to 'puppet help apply' ([5a536ae](https://www.github.com/scop/bash-completion/commit/5a536aec4ca4e8bc6c179dfd2f98d71a3c541f1d))\n* Puppet: cert: update options list, accordind to 'puppet help cert' ([b46636a](https://www.github.com/scop/bash-completion/commit/b46636ae16c98045caf9c4dbfa4020f3c08671a5))\n* Puppet: describe: update options list, accordind to 'puppet help describe' ([0bbcc47](https://www.github.com/scop/bash-completion/commit/0bbcc476b2d8f54c8a6a3e633db97586ecb0e23c))\n* puppet: Exit early on -h|-V|--version in addition to --help ([f94d1a6](https://www.github.com/scop/bash-completion/commit/f94d1a6803a488b24b3b7005ce86c19949a381e6))\n* puppet: Parse most subcommand options from \"help subcommand\" output ([00a80a2](https://www.github.com/scop/bash-completion/commit/00a80a2a830cc5cfea262865e5d97d1f901ca177))\n* puppet: Recognize some short options ([dbe7325](https://www.github.com/scop/bash-completion/commit/dbe732517ef2a2d8c628e3578db330b64d177948))\n* (testsuite) Add puppet subcommand option test case ([d748a5a](https://www.github.com/scop/bash-completion/commit/d748a5a24914a9f5f0173a98bd6435aac3d39747))\n* mpv: New completion alias + adjustments for mplayer (Debian: #749115) ([de78c16](https://www.github.com/scop/bash-completion/commit/de78c1653aad081daf28cd349e0f52801db3a180))\n* _services: README in sysv init dir is not a service ([41cdfc6](https://www.github.com/scop/bash-completion/commit/41cdfc6510093ddb6766aabb1574d2064279620e))\n* __reassemble_comp_words_by_ref: Make work with failglob on (Alioth: #312741) ([732906b](https://www.github.com/scop/bash-completion/commit/732906b25096508fbc5d15d684dea0312ed7fca0))\n* psql: Tell psql to not load .psqlrc as it may change output format (Alioth: #314636) ([9186add](https://www.github.com/scop/bash-completion/commit/9186add6298cac3c684b1123ea3c8006f87fc24b))\n* Quote unset array element to avoid globbing interference (Alioth: #314708) ([84135d7](https://www.github.com/scop/bash-completion/commit/84135d756bd395aa720c3bd08c660bc54d24f90c))\n* Various mostly array element unsetting fixes under failglob ([1ed2377](https://www.github.com/scop/bash-completion/commit/1ed2377c895d3f1826df0820d992f746c10373a9))\n* ssh-add, ssh-keygen: -? needs to be quoted under failglob (Alioth: #314709) ([24c8f1e](https://www.github.com/scop/bash-completion/commit/24c8f1e44e4e3a094745a45896963c4b3edff9ad))\n* Quote _filedir arguments when appropriate to prevent failglob failures ([8566a5a](https://www.github.com/scop/bash-completion/commit/8566a5a89633a6d689192638410914910e2a1523))\n* slapt-src: split options from their arguments ([3a65be4](https://www.github.com/scop/bash-completion/commit/3a65be4a18f67d1b5101ce1d03398728aebe0668))\n* slapt-{get,src}: Fix issue with sed not being able to handle some characters ([70e52c8](https://www.github.com/scop/bash-completion/commit/70e52c8a1fc4ebc3ea5516879505ca5da504b32b))\n* gendiff: Quoting suffix pattern to avoid triggering failglob ([154f388](https://www.github.com/scop/bash-completion/commit/154f3884139825a38e161c2e66837a35e9aa3841))\n* sbopkg, slapt-{get,src}: expand tilde in config file name ([505481c](https://www.github.com/scop/bash-completion/commit/505481c8cc4bdb13b89de8505d5d84c31314245c))\n* slapt-src: Handle --config=FILE option properly ([7220727](https://www.github.com/scop/bash-completion/commit/72207276a5d4a92c9fa0baef1f21941f9f1ad891))\n* _filedir_xspec: Fix with failglob on ([b65232f](https://www.github.com/scop/bash-completion/commit/b65232fa34e310cf357e2ff4b8921e50e260d294))\n* lvm: _lvm_count_args parameter must be quoted in order to failglob not to complain ([3717fe7](https://www.github.com/scop/bash-completion/commit/3717fe7b6d97ba8e8e8eb55ce10c05808dc4d4b8))\n* (testsuite) Add vgcreate test case for _lvm_count_args with failglob on ([615fd18](https://www.github.com/scop/bash-completion/commit/615fd18195793cd867c0a365c25069cdbb89c565))\n* _lvm: using a single-pattern case and invoking function according to words[1] ([01024f5](https://www.github.com/scop/bash-completion/commit/01024f595e9e6e3f243b2abc1a3474529ce1f083))\n* umount: Fix mount points escaping/unescaping with Bash-4.3 ([292830b](https://www.github.com/scop/bash-completion/commit/292830be53f69456d284c10dc5fea28dd393d7bc))\n* (testsuite): move testing of _linux_fstab() to umount.exp ([dcb0ea2](https://www.github.com/scop/bash-completion/commit/dcb0ea2ca29cf2c335f1b075f51290d023fcda2e))\n* _parse_help: Fix failglob failures (Alioth: #314707) ([d238ab5](https://www.github.com/scop/bash-completion/commit/d238ab5445627b6fd9888507d1b7545bb20408a7))\n* modprobe: fix params with multi-line descriptions ([454f67a](https://www.github.com/scop/bash-completion/commit/454f67a0478e2097e765169191151e9cf83fe978))\n* modprobe: Try parsing help before using hardcoding option list ([c6ec8f9](https://www.github.com/scop/bash-completion/commit/c6ec8f979bb6a6c6bdfeae75749a5be4c5145fdb))\n* ssh-add, ssh-keygen: -? needs to be quoted under failglob (take 2) (Alioth: #314709) ([60b8fab](https://www.github.com/scop/bash-completion/commit/60b8fabec499dbd56636548369ff3796e0d0d0fd))\n* isql: Fix failglob failure ([9d250f9](https://www.github.com/scop/bash-completion/commit/9d250f9b53a58c70c7a388e5d2272d8a384d6eb1))\n* Added test/site.{bak,exp} to .gitignore ([afe39fd](https://www.github.com/scop/bash-completion/commit/afe39fd1e171d0ea3d4fb8ec0d8c8c14fa120ed8))\n* adb: New completion ([4bbab19](https://www.github.com/scop/bash-completion/commit/4bbab196cbce908dacbc225de71433272228a985))\n* (testsuite) Use 'set' command posix behaviour when saving env (Alioth: #314720) ([16361c8](https://www.github.com/scop/bash-completion/commit/16361c873ba04d941c56c7e6a3fbe8d446f07ca7))\n* (testsuite) Save shell variables when saving env (Alioth: #314720) ([dbb93ae](https://www.github.com/scop/bash-completion/commit/dbb93ae77ba6613d89081b9592fb3714b604476c))\n* xz: Complete -T/--threads argument ([9e2db8a](https://www.github.com/scop/bash-completion/commit/9e2db8a03ea661eb7f4a4c41cd0558c063c04aca))\n* xmllint, xmlwf, xsltproc: Complete on *.dbk and *.docbook (Alioth: #314770) ([ab8eeb3](https://www.github.com/scop/bash-completion/commit/ab8eeb3a713b1223752336fc4cb0d515c24579cc))\n* xsltproc. TODO fix for previous commit ([7c5c622](https://www.github.com/scop/bash-completion/commit/7c5c622dda132a2c4a78028273f86fd51a9d680c))\n* python(3): Add -X argument non-completion ([eb79f9d](https://www.github.com/scop/bash-completion/commit/eb79f9d97fc384b2cbfdb0c9a782d9ef935356ab))\n* 7z, adb: Trivial cleanups ([d259e71](https://www.github.com/scop/bash-completion/commit/d259e7175851f08cda10ae6c279ab1d0e7bc8045))\n* ant: Don't offer more completions after options that exit ([98d6b5e](https://www.github.com/scop/bash-completion/commit/98d6b5e440fc666256cfb3ee2fe2f07da45f31a7))\n* (testsuite) Add ant -f <buildfile> test case ([40db483](https://www.github.com/scop/bash-completion/commit/40db4831747a0a4f80fcb383c0c7b5398b327538))\n* ant: Support buildfile set in $ANT_ARGS (Alioth: #314735) ([86df56d](https://www.github.com/scop/bash-completion/commit/86df56d5ec986566a33cc5b1067c6dbc6078dab1))\n* mplayer, *xine: Complete on *.mts (Debian: #759219) ([852e0f6](https://www.github.com/scop/bash-completion/commit/852e0f60f0df8264a84a3be543d09f1d13c6f04f))\n* rpmbuild: Complete *.spec on --clean (RedHat: #1132959) ([e879eb0](https://www.github.com/scop/bash-completion/commit/e879eb0a1706cad92d6df8b3c665d1d5227b1f67))\n* rpmbuild: Complete *.spec on --nobuild ([42e1f34](https://www.github.com/scop/bash-completion/commit/42e1f344b7fef71100e42ab97f63e35281116ced))\n* Comment update ([fa064e8](https://www.github.com/scop/bash-completion/commit/fa064e85633cd56000f8bf2cd8eb3bc76eceeeed))\n* _completion_loader: Set empty command to _EmptycmD_ for cross version compat ([7394d74](https://www.github.com/scop/bash-completion/commit/7394d744aee259929012cbcd53a9c268dfe9c025))\n* _init_completion: Handle cword < 0 (LP: #1289597) ([a9c556c](https://www.github.com/scop/bash-completion/commit/a9c556ccad819869a6a5d932aac0a75a99372f08))\n* pigz, unpigz: Handle *.zz ([4038c71](https://www.github.com/scop/bash-completion/commit/4038c71357dd85ee049363c6c48c513e1c1c263d))\n* Protect various compgen invocations from -* leakage (Debian: #766163) ([882649b](https://www.github.com/scop/bash-completion/commit/882649b7123855a0b87fcee7e4bc043ca2cca711))\n* (testsuite) Add cd in dir without subdirs or CDPATH test case ([9444a87](https://www.github.com/scop/bash-completion/commit/9444a8742e3aa8d1ef8eb35a377a860f9e59fa43))\n* _pnames: Add -s for producing (possibly) truncated names (RedHat: #744406) ([52d8316](https://www.github.com/scop/bash-completion/commit/52d8316c5ce4060cf86154eea3ba6fa51447760a))\n* Actually install the lz4 completion ([ed07b18](https://www.github.com/scop/bash-completion/commit/ed07b18e61bc4756c94d3230e6a0b32798087e20))\n* _completion_loader: Protect compgen from -* leakage (Debian: #769399) ([32e6e49](https://www.github.com/scop/bash-completion/commit/32e6e4908885197ae3f48da0f4fe7d182245818b))\n* gphoto2: Fix split argument handing, and colon treatment in --port args ([7d66285](https://www.github.com/scop/bash-completion/commit/7d66285b42f7847e1b5dedf5ed7c4536cb2bb288))\n* : Invoke command to be completed, not its basename ([7d3de61](https://www.github.com/scop/bash-completion/commit/7d3de619d1d84cba29597a54b4f0c0b786e8abe0))\n* gphoto2: Replace tail with awk ([89add74](https://www.github.com/scop/bash-completion/commit/89add74ae07d17eaaff811159e086663e4791d85))\n* ccache: Add -o/--set-config arg name completion ([dfb2d01](https://www.github.com/scop/bash-completion/commit/dfb2d01babcf00ecbb57c97e648d97881004797d))\n* chrome, firefox etc: Complete on *.pdf ([6a60025](https://www.github.com/scop/bash-completion/commit/6a60025e01165cddce61257902358badd738f1fa))\n* strings: Fix -T/--target arg completion with non-English locale ([976ad96](https://www.github.com/scop/bash-completion/commit/976ad96007fbc8edac189737876e485e0cc38e08))\n* upstart support for service completion ([3567d93](https://www.github.com/scop/bash-completion/commit/3567d9354fbc40f050831559df17d442e3177a8d))\n* (testsuite): Add mcrypt -a and -m argument completion tests ([377e240](https://www.github.com/scop/bash-completion/commit/377e24024ee419a50fd21a1ae2e984f19ac512b3))\n* mcrypt: Simplify -m arg completion ([a592a09](https://www.github.com/scop/bash-completion/commit/a592a09cc6fb1d43ef737baf5b31371f55ad19d0))\n* tshark: Simplify cut usage ([23bf3bd](https://www.github.com/scop/bash-completion/commit/23bf3bd412adb3cfff774f019d8c376658d50152))\n* createdb, dropdb: Drop -o default, it does not appear to do anything good here ([e71b452](https://www.github.com/scop/bash-completion/commit/e71b4522d18306dfa98b013441122910a1166ea9))\n* createuser: New completion ([7999f28](https://www.github.com/scop/bash-completion/commit/7999f28f62f49caf2b736fd835152c2579c2646d))\n* dropuser: New completion ([3cf50a1](https://www.github.com/scop/bash-completion/commit/3cf50a1437f9f0b8ef16bd6ea58db18e7a9204f6))\n* profile.d: Avoid some warnings from shells in \"nounset\" mode (Debian: #776160) ([c725e6b](https://www.github.com/scop/bash-completion/commit/c725e6b195ea6ac2d25dfbb85b7e87bfbe42fe68))\n* cppcheck: Option argument (non-)completion update ([e687c3a](https://www.github.com/scop/bash-completion/commit/e687c3a1085e06502b882f71b4deab79266b9b14))\n* reptyr: Rename file to _reptyr to avoid conflict with upstreamed completion ([6a4ad49](https://www.github.com/scop/bash-completion/commit/6a4ad49fa53cc92d3bd23b5b4db0b3318f2ef136))\n* tune2fs: Add missing return in -M arg completion ([edea6cb](https://www.github.com/scop/bash-completion/commit/edea6cb6da246930c1314384ba2f150efd0c07d5))\n* synclient: New completion ([6a1bf8d](https://www.github.com/scop/bash-completion/commit/6a1bf8d11430fea80864bd0fef46210143d91407))\n* Drop reference to no longer used sysconf_DATA ([ba79e9e](https://www.github.com/scop/bash-completion/commit/ba79e9e5798ac4f25036ddf15885cd3bbaeed4bc))\n* README: Add autotools and cmake tips ([3a8e7bd](https://www.github.com/scop/bash-completion/commit/3a8e7bd0fe45b4ebf76b4cd6da9246034b2e0557))\n* README: Add cmake usage example ([889718b](https://www.github.com/scop/bash-completion/commit/889718be68ccd442ee824f6405d706d8e2734a03))\n* README: Don't hardcode /etc in cmake fallback dir ([2c5efee](https://www.github.com/scop/bash-completion/commit/2c5efeec3a3b8cf29dd2f161935e786988d9dc36))\n* Revert \"README: Don't hardcode /etc in cmake fallback dir\" ([caaa474](https://www.github.com/scop/bash-completion/commit/caaa4745e40a5d1d9122b0774ba589ef5fafbcbf))\n* Load user completions from $BASH_COMPLETION_USER_DIR/completions ([1d25d72](https://www.github.com/scop/bash-completion/commit/1d25d72ca8633c19cb089dff447d08c531379c59))\n* 2015 ([d423969](https://www.github.com/scop/bash-completion/commit/d423969756d0043007d80a7b30e5b4c611e06883))\n* _filedir: Fix overquoted argument to compgen -d (RedHat: #1171396) ([d2920b7](https://www.github.com/scop/bash-completion/commit/d2920b7e79e5f347fed064b2a5aa952ef200e615))\n* _filedir: Remove unused variable ([80c2bb6](https://www.github.com/scop/bash-completion/commit/80c2bb696437134d6d8a3fb9c9f455fec75f470a))\n* make: Add __BASH_MAKE_COMPLETION__ variable ([f9115ce](https://www.github.com/scop/bash-completion/commit/f9115ce0bb215e9089266d6f1ec20c3375aa970a))\n* _filedir: Avoid some unnecessary work with -d ([40c764a](https://www.github.com/scop/bash-completion/commit/40c764af57ea0cd0c5c5cebeba6c838230d30c93))\n* gnokii: New completion ([3eb1b0d](https://www.github.com/scop/bash-completion/commit/3eb1b0dda81f2bc15a6c4f104cb5f0d2169c3101))\n* gnokii: Various minor and cosmetic fixes ([b07e355](https://www.github.com/scop/bash-completion/commit/b07e35511138adc2a375ea3fcd21aee6a175e4f3))\n* (testsuite): Add basic gnokii test case ([90ebb7e](https://www.github.com/scop/bash-completion/commit/90ebb7eb54b5598a5780dab90c984bad160f4268))\n* gnokii: Drop dead code ([ca138d0](https://www.github.com/scop/bash-completion/commit/ca138d05db3853ea89f09979be3c32eea554de1c))\n* gnokii: Fix completions of options that are prefixes for others ([8930330](https://www.github.com/scop/bash-completion/commit/89303303bd28d2c0b9d1e7e69e607ca2cf650760))\n* gnokii: Include and install it ([1950590](https://www.github.com/scop/bash-completion/commit/1950590367838993fba00586139137a50a1d4f80))\n* make: Fix detection of intermediate targets where make has changed its database whitespace ([4b209b0](https://www.github.com/scop/bash-completion/commit/4b209b0b172ddecff1e9aaf5de9ea64267fb9053))\n* jshint: New completion ([adff509](https://www.github.com/scop/bash-completion/commit/adff509ec54a45957ac3c0f1facbe6dec3c5a0aa))\n* tar: rework the completion completely ([8b23c84](https://www.github.com/scop/bash-completion/commit/8b23c84cc2935b15b8cb2ac1a90d061b914229a6))\n* bsdtar, tar: Remove symlinks from git, have make create them ([81cfa06](https://www.github.com/scop/bash-completion/commit/81cfa067cc1bcb9d508beb8f6689e14e436e2220))\n* (testsuite) Add required \"empty\" dir for tar ([a8f4507](https://www.github.com/scop/bash-completion/commit/a8f450797b47c25670c87452392161609ea67c36))\n* tar: Style tweaks ([055d1ae](https://www.github.com/scop/bash-completion/commit/055d1ae59f54bf20d22b068631698427f38ce4a0))\n* tar: Plug $line var leak ([d049481](https://www.github.com/scop/bash-completion/commit/d0494819521c1a70e3d83e26f2a55620ea64e89d))\n* eog: Complete on *.ppm (RedHat: #1090481) ([6c2ae9f](https://www.github.com/scop/bash-completion/commit/6c2ae9fb18cb56d89b190286a422b60f03d85ba4))\n* Document how to avoid command_not_found_handler interference ([1d9e705](https://www.github.com/scop/bash-completion/commit/1d9e705639e40c28b3ae4ce2a99c9c7308e3c653))\n* sysctl: Try parsing options from help before usage ([e9fe2d9](https://www.github.com/scop/bash-completion/commit/e9fe2d9f7b9c3401f990b140d58de9e6c6b42a5c))\n* sysctl: Return early on --help, --version ([d01427d](https://www.github.com/scop/bash-completion/commit/d01427df599c8ef2a32c95e286a6c82045d4d26e))\n* ssh: Add -Q argument completion ([b6ffe26](https://www.github.com/scop/bash-completion/commit/b6ffe261f8515d4fddb319424b87d4d38d10dd91))\n* ssh: Query ciphers and macs from ssh before hardcoded fallback ([cf4c7eb](https://www.github.com/scop/bash-completion/commit/cf4c7ebf6c754028957fe0061d0ed247a47ecb1c))\n* ssh: Complete HostbasedKeyTypes,HostKeyAlgorithms,KexAlgorithms values ([2779b66](https://www.github.com/scop/bash-completion/commit/2779b66e5dc8d0278dcde921ed29fc60ce89f181))\n* checksec: New completion ([ffd9038](https://www.github.com/scop/bash-completion/commit/ffd9038923aed3e8be6fe1c746ea3d41407cacb6))\n* pdftotext: New completion ([4289460](https://www.github.com/scop/bash-completion/commit/4289460691719255ca5d34c04d2a7cacc6ccd1ba))\n* pgrep, pidof, pkill, pwdx, vmstat: Add support for procps-ng ([f68589f](https://www.github.com/scop/bash-completion/commit/f68589fde4a95c1b30c9cbb70dcfada133f0f09e))\n* __get_cword: avoid $index < 0 (Alioth: #315107) ([fa1ad7d](https://www.github.com/scop/bash-completion/commit/fa1ad7dff9e7099b14552a8782181e9b00f89cc2))\n* rpm: Add --whatenhances/recommends/suggests/supplements and --recommends/supplements completions ([81acda7](https://www.github.com/scop/bash-completion/commit/81acda727a9ca34eb156c69becf38eac68b50ea7))\n* modplug*: Associate *.oct and *.okt ([69cfaed](https://www.github.com/scop/bash-completion/commit/69cfaed89c25171d40d9d268de7ab6b9412b159f))\n* __load_completion: New function, use in _completion_loader and _xfunc ([cad3abf](https://www.github.com/scop/bash-completion/commit/cad3abfc7ec1cfc2ae17a2330bf9f23993c73f09))\n* mpv: Remove mplayer-aliased completion ([00abd48](https://www.github.com/scop/bash-completion/commit/00abd48e5b1d5d79fff46b7f791b2b90d1d6953b))\n* make: Offer hidden targets when it is clear that the user is trying to complete one of them ([e0c0832](https://www.github.com/scop/bash-completion/commit/e0c08321795c8174fa2275d2683c4ffc1b36db5b))\n* ssh-copy-id: Offer only *.pub to -i ([f9f66c3](https://www.github.com/scop/bash-completion/commit/f9f66c39d35c18c5985bc2baca2242c2e17d539a))\n* sftp: Add -l arg non-completion ([4d82190](https://www.github.com/scop/bash-completion/commit/4d82190da70621d6b0fc375c063e12f97b27edb4))\n* scp, sftp: Fix querying ssh options ([50ea015](https://www.github.com/scop/bash-completion/commit/50ea015f8bc66919eb0ecc7ed351c1f89755f8c0))\n* scp, sftp: Complete -S on commands ([35a0f97](https://www.github.com/scop/bash-completion/commit/35a0f97a5a9bb0aadf834a81761855ad65bb5e28))\n* (testsuite) Ignore files generated by complete-ant-cmd.pl ([f661811](https://www.github.com/scop/bash-completion/commit/f6618113b55e49c4c81f3a2a9fd5dc95a36a683f))\n* make: Don't pick up variables when makefile is reloaded ([c5451db](https://www.github.com/scop/bash-completion/commit/c5451dbd310074f8bceeada0e48e542713dada1e))\n* Load completions also from $XDG_DATA_DIRS (RedHat: #1264094) ([c89dcbb](https://www.github.com/scop/bash-completion/commit/c89dcbbd5510876f6304ef10806b00cc9fda19dc))\n* chronyc: Add -6 option ([7669f0c](https://www.github.com/scop/bash-completion/commit/7669f0c1bece8f4a344d8e22f7d4969f8f141c10))\n* chronyc: Add missing subcommands ([ef26136](https://www.github.com/scop/bash-completion/commit/ef26136ea3f4fcf123c1a4af741be625fbac1a05))\n* chronyc: Update help text parsing ([bc03de5](https://www.github.com/scop/bash-completion/commit/bc03de502c3d8391ee220a3a28ed964db8c5e73a))\n* chronyc: Wrap long lines ([aa404ca](https://www.github.com/scop/bash-completion/commit/aa404ca17d3838b18669e006ab30446cb402988b))\n* chronyc: Parse command args from help output ([5fd0077](https://www.github.com/scop/bash-completion/commit/5fd00776c49f1d4552630c986e70f21e4a6028ad))\n* ssh: Avoid completing commands before hostname ([f8f6ffa](https://www.github.com/scop/bash-completion/commit/f8f6ffa72ed3db9c6628b50f1bd3ef9582b4f264))\n* cppcheck: Add native to --platform completions ([9cbd68b](https://www.github.com/scop/bash-completion/commit/9cbd68becbd728d5fda88a6f456c4c72eac92ec8))\n* minicom: Recognize user ~/.minirc.* as config files ([39acdb2](https://www.github.com/scop/bash-completion/commit/39acdb21e89f89c207089da4c061c193d5d8af84))\n* test suite: Fix ssh-copy-id test on old setups with no identities ([e899139](https://www.github.com/scop/bash-completion/commit/e899139ee38b96ebbf2338d35b4f5e99dce514a4))\n* test suite: Expect failure in modinfo/modprobe if there are no modules ([0a6877e](https://www.github.com/scop/bash-completion/commit/0a6877e8395ac6b46b4bdf3877b674c37aa4dec8))\n* Set up Travis ([e3c8573](https://www.github.com/scop/bash-completion/commit/e3c8573d14866041516beb3a503e3bd752666ec2))\n* test suite: Output tool log on failure in CI ([fa6b80f](https://www.github.com/scop/bash-completion/commit/fa6b80f89c53233fd00b9c33fde2161eef9d8e2a))\n* test suite: Make apt-get test less sensitive to available commands ([7234914](https://www.github.com/scop/bash-completion/commit/7234914a9fb3a17bc116f18bd1a8b6e4beece147))\n* travis: Avoid Travis default ri, use distro one instead ([dc6e8c2](https://www.github.com/scop/bash-completion/commit/dc6e8c257fb895142564eac871daeec78331d522))\n* README: Update POSIX spec link ([ac9f41b](https://www.github.com/scop/bash-completion/commit/ac9f41b93d8d280c9069cfb06efffcef991404d0))\n* Update URLs and various instructions to GitHub ([53215d4](https://www.github.com/scop/bash-completion/commit/53215d4a74ace3477e48dc70e5be19f8bb3c0866))\n* aclocal, automake: Install for versioned 1.14 and 1.15 executables ([caf3b36](https://www.github.com/scop/bash-completion/commit/caf3b364e367bcb2bd518fd436ec134049c2c9e6))\n* build system: Switch to xz compressed tarball ([b51eb9d](https://www.github.com/scop/bash-completion/commit/b51eb9d7f1bc9a7ad6c6f5feb56fca5b963572fa))\n* Drop references to bash-completion-devel@lists.alioth.debian.org ([aee91a9](https://www.github.com/scop/bash-completion/commit/aee91a91baa3c32dc315be39d5f95f8045217594))\n* README: Convert to markdown ([0d3e597](https://www.github.com/scop/bash-completion/commit/0d3e59703fa016f2a8ed0fe6efdfe7fd00fa9250))\n* README: Split contributing to separate CONTRIBUTING doc ([0345d02](https://www.github.com/scop/bash-completion/commit/0345d028ee4ad7793d6293a54bb69929e442041b))\n* Use command built-in to run sed to avoid any custom aliases ([0b37725](https://www.github.com/scop/bash-completion/commit/0b377254203680cb483168f45eaac301db8ac1b3))\n* test suite: Fix ssh partial hostname completion test ([4f13792](https://www.github.com/scop/bash-completion/commit/4f13792b4fe87ebfcd6d9bbe15c9813f2a1b2a94))\n* travis: Run tests with --all to get some more useful output ([d04af62](https://www.github.com/scop/bash-completion/commit/d04af6260a7cfcb1c521298eae346bec9303bfc0))\n* travis: Install more packages for [0-9][ab]* test coverage ([0cec990](https://www.github.com/scop/bash-completion/commit/0cec99072d36ffe68bec89e4e668ec94b4534929))\n* test suite: Use unsupported instead of xfail for modinfo/modprobe cases ([501c106](https://www.github.com/scop/bash-completion/commit/501c10692dfcf744dbf333d78e0ed933b9dc51a8))\n* test suite: Mark unsupported look test case as such, not unresolved ([3dedaa9](https://www.github.com/scop/bash-completion/commit/3dedaa9dd971ea1177561c3f4525ad044ca5dfc5))\n* travis: Add note about (currently) N/A packages ([b5caa09](https://www.github.com/scop/bash-completion/commit/b5caa09b6d1a24d778e87cb65f31590e8ce8b8e6))\n* travis: Install more packages for c* test coverage ([e41426a](https://www.github.com/scop/bash-completion/commit/e41426a57d9924a22af16e2d92b062568470ee61))\n* travis: Install more packages for [de]* test coverage ([1cca6ed](https://www.github.com/scop/bash-completion/commit/1cca6ed104330e1541942204890063f8accf798d))\n* Modify all usages of 'sed' to be run with command bash builtin ([1aad419](https://www.github.com/scop/bash-completion/commit/1aad419db4851fc7fa4b2e384645ecda2f000d88))\n* lint: Check for sed without \"command\" ([417122b](https://www.github.com/scop/bash-completion/commit/417122bd0293d79921cde05d80ecc1b6654a3542))\n* gnokii, minicom: Use grep through \"command\" ([536d79f](https://www.github.com/scop/bash-completion/commit/536d79ff42b38b38cc7b7453b0219e6dda888efc))\n* mysql, puppet: sed portability fixes ([f8b0828](https://www.github.com/scop/bash-completion/commit/f8b0828e4fcb25f9628b268fb760aa23cc5db60f))\n* mysql: Fix --default-character-set completion with mariadb ([695b28a](https://www.github.com/scop/bash-completion/commit/695b28aa860d867c49c2ea17e62f1d5b6ebd80a7))\n* travis: Install more packages for [fg]* test coverage ([987af3f](https://www.github.com/scop/bash-completion/commit/987af3f463cbe48f7b31b1a7bed9f3262772b716))\n* travis: Install more packages for [hi]* test coverage ([e0ff9ce](https://www.github.com/scop/bash-completion/commit/e0ff9cea15612e529c9d0702c0cf7ecc61860e67))\n* Update copyright year ([68f3e4e](https://www.github.com/scop/bash-completion/commit/68f3e4eb144125ac3d5dfc57f9482f4815dc9c41))\n* indent: Remove generic long option completion ([c4517d3](https://www.github.com/scop/bash-completion/commit/c4517d393250863afbb9ddc9b481ea6a61519720))\n* Don't complete hostnames found after Hostname in ~/.ssh/config ([4621117](https://www.github.com/scop/bash-completion/commit/46211179bff660992417fccd68e598b4e612e56a))\n* travis: Install more packages for [jkl]* test coverage ([6699288](https://www.github.com/scop/bash-completion/commit/6699288aee3ffd0530ad268fe06bc5c042eecec5))\n* travis: Install more packages for m* test coverage ([3495a48](https://www.github.com/scop/bash-completion/commit/3495a48ecbef38ab5e12ff41ecdbd22cb54c933c))\n* travis: Install more packages for [op]* test coverage ([26c2d23](https://www.github.com/scop/bash-completion/commit/26c2d231dd5e081c7e45d693eeb0f8a667850b0c))\n* travis: Install more packages for [qr]* test coverage ([d491063](https://www.github.com/scop/bash-completion/commit/d4910632f213af7eb6ee537300b1f76ce2faa0b7))\n* travis: Install more packages for [stuvw]* test coverage ([9d12e2c](https://www.github.com/scop/bash-completion/commit/9d12e2c554b7e2963773792f6936dc75df540951))\n* travis: Install more packages for [xyz]* test coverage ([18ca938](https://www.github.com/scop/bash-completion/commit/18ca93839af37b1e494c832016d2a766833ea7f4))\n* Remove various comments related to bash versions we don't support ([ffdc9da](https://www.github.com/scop/bash-completion/commit/ffdc9daecebf5ca4b45995de40469579fd36aac7))\n* ssh: Extract duplicate code to _ssh_configfile ([09f56f8](https://www.github.com/scop/bash-completion/commit/09f56f80a68f2fddc52cf8c91637b80c6ae02164))\n* xmllint, xmlwf, xsltproc: Complete on Mallard *.page files ([1c005b1](https://www.github.com/scop/bash-completion/commit/1c005b19e9b262fdd40c8fc5aae4e75779b1d78b))\n* README: Expand troubleshooting section somewhat ([06996ea](https://www.github.com/scop/bash-completion/commit/06996ea0d4ac83a002613f1d7e50ce68a595cb31))\n* README.md: Not need for autoreconf, fixes #11 ([20f9013](https://www.github.com/scop/bash-completion/commit/20f9013f38d5c54892900654ab037c173e5cc167))\n* zopflipng: New completion ([56c3ea1](https://www.github.com/scop/bash-completion/commit/56c3ea163fd294a144a79d641881f34e625b77db))\n* README.md: Markdown tweaks ([8a748d3](https://www.github.com/scop/bash-completion/commit/8a748d32fae35f2dcf5a7c7061f183a18adae320))\n* README.md: More markdown tweaks ([76d8823](https://www.github.com/scop/bash-completion/commit/76d88231013b0027239a5523f9c70f0ad3f571ee))\n* make-changelog.py: Make work with Python 3 ([8a9cb54](https://www.github.com/scop/bash-completion/commit/8a9cb54d9769fcfebc37d85d204a5893b7ae0eee))\n* make-changelog.py: flake8 fixes ([47ca0cd](https://www.github.com/scop/bash-completion/commit/47ca0cdaba318f6419b20d86050c6ef04ce1ce66))\n* make-changelog.py: Fix footer line output ([d178db6](https://www.github.com/scop/bash-completion/commit/d178db64b28bc5db39a33641930deefeab4baf10))\n* make-changelog.py: Set myself in footer ([7c713e8](https://www.github.com/scop/bash-completion/commit/7c713e872606558fc7314425e3dbaf3d85fea81f))\n* README.md: Note autoreconf need only in unprepared tarball ([3c3b696](https://www.github.com/scop/bash-completion/commit/3c3b696e8a9604f3a0dec159aa5da2c1c4d0f09e))\n\n## 2.1 (2013-04-05)\n\n* eog: New completion. ([3a1cdbd](https://www.github.com/scop/bash-completion/commit/3a1cdbdadc92e041b3b446f4d40d5ffcabe86d4e))\n* wsimport: New completion. ([bffce42](https://www.github.com/scop/bash-completion/commit/bffce4218e33bc61c0551b87e4b5bfbb41ad4223))\n* kcov: Add new sort types (introduced in kcov-9). ([36f1b83](https://www.github.com/scop/bash-completion/commit/36f1b832fd3544dd44dad7b6bce5c115f45cd50d))\n* kcov: Complete arguments of --limits option. ([f604f6c](https://www.github.com/scop/bash-completion/commit/f604f6ce5b952e10ea6053445e9f70c2079943b8))\n* Add .msi completion for Wine ([f3e3fc5](https://www.github.com/scop/bash-completion/commit/f3e3fc5a4d51367a3e8ce29255bb386c809d0947))\n* ssh: Add -O argument completion (Debian: #680652). ([217e143](https://www.github.com/scop/bash-completion/commit/217e143fd69ad2b83ec8187af2e9e1c21dcb759a))\n* Add more complete OpenDocument support to unzip completion. ([6a71ee5](https://www.github.com/scop/bash-completion/commit/6a71ee504c11b798125b9c85359d5b7367a27dd4))\n* Add support for OOXML document format extensions to unzip completion. ([7c7b560](https://www.github.com/scop/bash-completion/commit/7c7b5608c8505633aa55e106f98d2a943937d41a))\n* Fine tune previous commit. ([ca53345](https://www.github.com/scop/bash-completion/commit/ca533452195134de6ceb5c3f894e824fac53849a))\n* wine: Fix extension glob to work on its own. ([e2e64a1](https://www.github.com/scop/bash-completion/commit/e2e64a16329cf0005006dffea590dce20200469d))\n* man: Add support for .lz man pages (RedHat: #839310). ([c9ed166](https://www.github.com/scop/bash-completion/commit/c9ed16694da974ce9faa3f49a274c7c6cfb4abc9))\n* man: Trivial cleanups. ([a624cc2](https://www.github.com/scop/bash-completion/commit/a624cc2c3026981835330f4d001b7df53f8d84ae))\n* clzip, pdlzip, plzip: New lzip alias completions. ([fc107b4](https://www.github.com/scop/bash-completion/commit/fc107b4bdc5a42302b6316ab80755d6cca69d9ba))\n* lzip: Do not append space after equal sign in long options. ([9f0a6e4](https://www.github.com/scop/bash-completion/commit/9f0a6e45f8238e3220db3ffaa058c39110ea7a59))\n* mussh: New completion. ([882d527](https://www.github.com/scop/bash-completion/commit/882d527237c77cdc757672affa070bb1b150b778))\n* mount.linux: Add some new mount options intoduced in Linux 3.5 ([3ea1597](https://www.github.com/scop/bash-completion/commit/3ea1597d3c6c926553b850caad75527a08412eb1))\n* mount.linux: Clean up mount options, remove duplicates. ([3aa040d](https://www.github.com/scop/bash-completion/commit/3aa040d25f5556b6e9bf92c784072aba7620f729))\n* Remove trailing whitespace ([3f9fe7a](https://www.github.com/scop/bash-completion/commit/3f9fe7a853c74d68f64e05ecaca474e7a6819d81))\n* Remove more whitespace ([a9b253c](https://www.github.com/scop/bash-completion/commit/a9b253ca8b475dc2ffda6edc7451af28d23d4eed))\n* Trim trailing whitespace. ([a6ff579](https://www.github.com/scop/bash-completion/commit/a6ff57986f22d19e7a638e398a73a1a3ac19ff13))\n* slackpkg, slapt-get: Update the list of package sets. ([371fb91](https://www.github.com/scop/bash-completion/commit/371fb91b213c3bb4b86eb22e09701ec1be18b7dd))\n* colormake: New make alias completion (LP: #743208, Debian: #682557). ([31e262b](https://www.github.com/scop/bash-completion/commit/31e262bcaf9bee249deb24a0e08cd85346d7a628))\n* Ignore colormake symlink. ([6158bd2](https://www.github.com/scop/bash-completion/commit/6158bd2d86f6122cfc8d3df045e9f4c7c8f3293a))\n* opera: Handle options. ([3c49af9](https://www.github.com/scop/bash-completion/commit/3c49af9ec97b66553c3d756de8f4b5a5f8a54708))\n* mount.linux: Add options completion for davfs. ([f379e92](https://www.github.com/scop/bash-completion/commit/f379e9275c5a966dacd3b2bd45a5b651aae55641))\n* evince: Evince supports opening .pdf.xz files (Alioth: #313739). ([30f9335](https://www.github.com/scop/bash-completion/commit/30f93357c81bf3fbb03ef8a6b3b0f5ce9addde13))\n* Fix __reassemble_comp_words_by_ref for $COMP_CWORD == ${#COMP_WORDS[@]} ([dc15093](https://www.github.com/scop/bash-completion/commit/dc150937d126430f5cc20dfaf3239a71049fe0df))\n* valgrind: Add --soname-synonyms option arguments completion. ([904faab](https://www.github.com/scop/bash-completion/commit/904faab0c57b4f6a65a4f62dc9f644d4771e59fe))\n* eject: New completion. ([b9276c8](https://www.github.com/scop/bash-completion/commit/b9276c8a374ac5e8cbe7ac814fe3c989f903ddd0))\n* fusermount: Complete curlftpfs-mounts for \"fusermount -u\" (Debian: #685377) ([2897e62](https://www.github.com/scop/bash-completion/commit/2897e62fe7e535eb048f7e08f03ac3fbc3a84fa5))\n* gphoto2: new completion ([92ddcea](https://www.github.com/scop/bash-completion/commit/92ddcea20a473a8d59b1efaea94261b4b36fa35c))\n* nmcli: new completion ([7f1721d](https://www.github.com/scop/bash-completion/commit/7f1721dd9064e5685b984975a7819bfe18b8d71b))\n* cppcheck: Add new standards to --std option. ([1c362f4](https://www.github.com/scop/bash-completion/commit/1c362f4c99eea0ae32ffb6f006f71d1bfb18bc78))\n* make: convert make completion to use smarter parser ([b28d710](https://www.github.com/scop/bash-completion/commit/b28d7108d3677c61bd01c51ccee8bb1cf9e3bfba))\n* Fixed tilde expanding in _filedir_xspec ([fdb080f](https://www.github.com/scop/bash-completion/commit/fdb080ff89195f85e1b76d0752979dfefa777595))\n* make: Do not append space if target is a filepath. ([2babb45](https://www.github.com/scop/bash-completion/commit/2babb45402ee338b888056f01222a602d07a44cd))\n* tar: Fix detection if the $prev is a tar file. ([3622f2f](https://www.github.com/scop/bash-completion/commit/3622f2f9e531ddbb243b39774546cf11ee9ccf3e))\n* _parse_help, _parse_usage: Run commands in C locale. ([8227351](https://www.github.com/scop/bash-completion/commit/822735146f5a5ef71c75f6f8494ad3969eaf2cc5))\n* testsuite/_filedir: Remove the cruft from the a\\$b->h unit test (Alioth: #313480) ([23ac383](https://www.github.com/scop/bash-completion/commit/23ac38333e469eac47d35dae7c640bff4a6b5203))\n* make: incremental completion for make with compact display ([39f00f9](https://www.github.com/scop/bash-completion/commit/39f00f92e52b783e7e9e43aac4b4274cc9dee152))\n* make: Convert internal variable names to lowercase, indentation fix. ([b93e399](https://www.github.com/scop/bash-completion/commit/b93e3999b0c485a9808c1d4cb0f825b8019b5a73))\n* lvm volumes: Complete on /dev/mapper/* (RedHat: #851787). ([8e63eaf](https://www.github.com/scop/bash-completion/commit/8e63eafb83342dec5a04fe3c49330c6cbe00f96d))\n* tar: Don't take -I to mean bzip2. ([f321357](https://www.github.com/scop/bash-completion/commit/f32135799155cbde9237567a5a3a811172adf341))\n* feh: Add new options introduced in feh-2.7. ([52163a3](https://www.github.com/scop/bash-completion/commit/52163a337f34cf185fe55833bbd41080a0228baf))\n* wget: New completion. ([e29c6bc](https://www.github.com/scop/bash-completion/commit/e29c6bc872ba437f48eae7c70347c843413de4cc))\n* wget: Fix completion of multiple tags for --{follow,ignore}-tags. ([e0c70ab](https://www.github.com/scop/bash-completion/commit/e0c70abc8b63bed961b736b17e4757ca0a5f1875))\n* useradd: Fix -k, -K, and --home-dir argument completions. ([09d24da](https://www.github.com/scop/bash-completion/commit/09d24da884fcf98a7a22a4487ab79f03c3f20026))\n* useradd, usermod: Support comma separated -G/--groups arg completion. ([8ec4846](https://www.github.com/scop/bash-completion/commit/8ec484692225f2f1565975a763df856dfbb7f27b))\n* wget: Use == instead of =. ([d803323](https://www.github.com/scop/bash-completion/commit/d803323974dd979a55f7f87e96e96b5bf9d9da4f))\n* cppcheck: Add --language/-x argument completion. ([b9189ce](https://www.github.com/scop/bash-completion/commit/b9189ce170388d87c46a4a37f3e05dba0cd8878a))\n* new completion: svcadm ([80356ca](https://www.github.com/scop/bash-completion/commit/80356ca816cfee198bad59359d7a641449183fec))\n* new completion: pkg-get ([6ddec67](https://www.github.com/scop/bash-completion/commit/6ddec67c2f923ce54f3935bc23822c9eaf350430))\n* new completion: pkgadd ([a54fa73](https://www.github.com/scop/bash-completion/commit/a54fa7340a617eabb2c3bfede9a24c9f142505be))\n* new completion: pkgrm ([ff444b5](https://www.github.com/scop/bash-completion/commit/ff444b528397f273d46da7c52a445b924adccc00))\n* new completion: pkgutil ([e5ac55d](https://www.github.com/scop/bash-completion/commit/e5ac55d5df03b04ff082cebd8245fc28c2ef59fd))\n* better entry ([166ac77](https://www.github.com/scop/bash-completion/commit/166ac7754f31d95e7230cb80c521cda01e441faa))\n* fix perms ([8002d32](https://www.github.com/scop/bash-completion/commit/8002d320afee9e38aa39c1acb553402f4f109f84))\n* zathura: Add simple completion for zathura document viewer. ([97eb4da](https://www.github.com/scop/bash-completion/commit/97eb4daa62004ee882961ccd49e7af7418443c81))\n* gpg, mplayer: Restore correct options. ([6be8628](https://www.github.com/scop/bash-completion/commit/6be86286d6db176b785dcea5fdd262b49e133934))\n* lvm: Fix typo in option name: s/continguous/contiguous/. ([b2365b3](https://www.github.com/scop/bash-completion/commit/b2365b3d8743fb0fdca70c5138e66e6b389ba5bd))\n* mplayer: Add -subcp argument completion. ([7f2eb83](https://www.github.com/scop/bash-completion/commit/7f2eb8327c9c59576cd181f813bd27e6e681b02b))\n* mplayer: Add some new option argument completions. ([f3e1079](https://www.github.com/scop/bash-completion/commit/f3e10798e68d9b714a0f527179c48b22ab5c16ce))\n* mplayer: Cleanup. ([2c28608](https://www.github.com/scop/bash-completion/commit/2c2860826fdc624b6aad6532dd46cef79389d872))\n* mplayer: Add opus to the list of supported formats. ([b5dce1c](https://www.github.com/scop/bash-completion/commit/b5dce1c4b69ff2e9935941e54bf9f1ef3ceee542))\n* completions/Makefile.am: symlinks depends on $(DATA) to avoid race conditions ([370b7a0](https://www.github.com/scop/bash-completion/commit/370b7a0d2fdf7f322b59f3c35c1cea19901ef2f2))\n* _command_offset: Restore compopts properly (Alioth: #313890) ([2472fad](https://www.github.com/scop/bash-completion/commit/2472fad5de03ef91864926240a709b3f2b72a173))\n* Update copyright year and release number. ([3b93c22](https://www.github.com/scop/bash-completion/commit/3b93c22a5bb9e47301fca89ec677a9805ea71518))\n* _known_hosts_real: Filter ruptime stdout error spewage (Alioth: #313893). ([f917b75](https://www.github.com/scop/bash-completion/commit/f917b750dda9dc977579c264840878a97ed0fdfe))\n* lv{create,resize,extend}, vg{create,reduce,extend,split}: Fix variable leaks. ([b2d985c](https://www.github.com/scop/bash-completion/commit/b2d985c0bf9c0013a86cb63247d67b0ed39c9e75))\n* man: Fix -P/--pager full path arg completion. ([b8cbf1b](https://www.github.com/scop/bash-completion/commit/b8cbf1ba9401fc99375e01cfc122a7ef2aa620f2))\n* tcpdump: Fix -z full path arg completion. ([f009a1b](https://www.github.com/scop/bash-completion/commit/f009a1bfca25e262a68bbe52520bf91531ae6773))\n* valgrind: Fix full path <command> arg completion. ([c6f6080](https://www.github.com/scop/bash-completion/commit/c6f6080569e3572893a6ff6561b3b8182dd2d2c1))\n* vgcreate: Add missing symlink. ([e3a1a49](https://www.github.com/scop/bash-completion/commit/e3a1a49b972d1ade7342cd53a0a47d2589466fa1))\n* lvm: Take option args into account when counting args (RedHat: #860510). ([e96613e](https://www.github.com/scop/bash-completion/commit/e96613e32e21ea389dddba9756bf3d78070acc4b))\n* lvm: Add _lvm prefix to helper functions. ([609034d](https://www.github.com/scop/bash-completion/commit/609034db74f60eab6ae4531696a44849647f7d42))\n* mount: Fix parsing /etc/fstab on *BSD. ([7d59112](https://www.github.com/scop/bash-completion/commit/7d591128a8baf91dfe3a461ae53f7acded4c7473))\n* feh: Fix list of background styles. ([9e04f3e](https://www.github.com/scop/bash-completion/commit/9e04f3edc8e70c5aeef98866e400f772c0395e10))\n* mount.linux: Add options completion for nfs. ([4a76f5a](https://www.github.com/scop/bash-completion/commit/4a76f5a16646ef3c0407e092a66f9f35e273ff81))\n* mount.linux: Add some new mount options intoduced in Linux 3.7 ([74a37e7](https://www.github.com/scop/bash-completion/commit/74a37e7507ff5c779a8cdd271b2aeb80d33bcc96))\n* chronyc: New completion. ([ff11fed](https://www.github.com/scop/bash-completion/commit/ff11fed5f8f1d73b02d515da3af335644807ab4d))\n* scp: Treat strings with slash before colon or starting with [.~] as local. ([41a37d7](https://www.github.com/scop/bash-completion/commit/41a37d767940af7928282874618e3dc60549de54))\n* useradd,userdel,usermod: Add -R/--root arg completion. ([5c8279b](https://www.github.com/scop/bash-completion/commit/5c8279b818560146176372752c4a87c588207674))\n* userdel: Add -h/--help non-completion. ([1d75b67](https://www.github.com/scop/bash-completion/commit/1d75b671a00337ae74a1295682c130649aef3bfe))\n* luseradd,lusermod,luserdel: New completions. ([08203f7](https://www.github.com/scop/bash-completion/commit/08203f7743ea41e7f10a891c130a18be713bd494))\n* man: Don't expand man page extensions too early. ([49ea121](https://www.github.com/scop/bash-completion/commit/49ea121e5d86eea76bfa18174fd8f70911217d09))\n* ssh: Add some -o and related arg completions. ([45c9ff5](https://www.github.com/scop/bash-completion/commit/45c9ff5f691cfb6decdba1bf362708a698b3d595))\n* fix interface completion ([b9b4c6b](https://www.github.com/scop/bash-completion/commit/b9b4c6bf2ce61d46a798f11a4d04bc55ba276b0a))\n* add -p option completion ([89098f7](https://www.github.com/scop/bash-completion/commit/89098f79fd33216a46f7135a994f4c0a8057671f))\n* nc: New completion. ([26991e1](https://www.github.com/scop/bash-completion/commit/26991e1bf4270a95dfea537b7ea514a1130b65bd))\n* tar: Simplify bzip patterns. ([9c80d8b](https://www.github.com/scop/bash-completion/commit/9c80d8b5217df396efa44e0eccf94616bf585013))\n* tar: Recognize taz and tb2 as compressed tarballs. ([e8daf2d](https://www.github.com/scop/bash-completion/commit/e8daf2d2790b90b2abebd63b7a5534f1ea7e446a))\n* ncftp: Add option completion. ([2eeffee](https://www.github.com/scop/bash-completion/commit/2eeffeea7a5c067f4dc0c7645f664cd6232264f0))\n* Avoid sourcing dirs in completion loader to avoid fd leaks (RedHat: #903540). ([fea1c17](https://www.github.com/scop/bash-completion/commit/fea1c178b47cf7ac95ab27c39a98e0464e19976c))\n* Brown paper bag fix for the previous commit. ([c4cc3eb](https://www.github.com/scop/bash-completion/commit/c4cc3eb63bf120cf81e25cb97780fd3e4a91ebff))\n* modprobe: Don't suggest installing already installed modules. ([d08b9f2](https://www.github.com/scop/bash-completion/commit/d08b9f233559b3dced20050ba312b08fe0de53b4))\n* ngrep: New completion. ([8c57295](https://www.github.com/scop/bash-completion/commit/8c572951330bb0ed3a669fd2d8e4dd219430ff11))\n* tshark: New completion. ([cee32c6](https://www.github.com/scop/bash-completion/commit/cee32c6424113a2149daa2830ecb3fa942781420))\n* _mac_addresses: Fix with net-tools' ifconfig that outputs ether, not HWaddr. ([f6df76e](https://www.github.com/scop/bash-completion/commit/f6df76e8cac6ae47b93c87d594d70dab211b860a))\n* _mac_addresses: Try ARP cache with \"ip neigh\" if arp is not available. ([87dede9](https://www.github.com/scop/bash-completion/commit/87dede96c0fe8961081310284bfe58972dd801c4))\n* wol: Try \"ip addr\" before ifconfig for finding out broadcast addresses. ([19ce232](https://www.github.com/scop/bash-completion/commit/19ce23282ca6c00b482ac8044b64d91dbb3b62e6))\n* _mac_addresses: Try local interfaces with \"ip link\" if ifconfig is N/A. ([b78ef32](https://www.github.com/scop/bash-completion/commit/b78ef321bedfdf8071627366de74451967846f98))\n* _ip_addresses: Try with \"ip addr\" if ifconfig is not available. ([aa516ac](https://www.github.com/scop/bash-completion/commit/aa516acdc537b14541cb16424d51af6403321705))\n* _available_interfaces: Without -a, try with \"ip link\" if ifconfig is N/A. ([3064e9d](https://www.github.com/scop/bash-completion/commit/3064e9d707404e5aa59bb8b643d02208fb0f9daa))\n* dnsspoof,filesnarf,macof,sshow,tcpkill,tcpnice,urlsnarf: Fix -i completion. ([7543e0b](https://www.github.com/scop/bash-completion/commit/7543e0baf812e24066b863b5d13fdb1efffc3428))\n* arpspoof,dsniff,ether-wake,nmap: Offer active interfaces only. ([9d15e25](https://www.github.com/scop/bash-completion/commit/9d15e25a9e527e2d310ba0e0501e26350998532a))\n* modinfo: Use ,, for lowercasing instead of tr in a subshell. ([06002d0](https://www.github.com/scop/bash-completion/commit/06002d04c7cbfe9ac7c92508b6dcb7323627d07a))\n* pydoc: New completion. ([5c8a002](https://www.github.com/scop/bash-completion/commit/5c8a002008bd2dfdb9196b57c368193a6e05b1e2))\n* pyflakes: New completion. ([a77d3d5](https://www.github.com/scop/bash-completion/commit/a77d3d550564198c11e2b4823a53979868262a48))\n* python, pydoc: Add module completion. ([0e8d34e](https://www.github.com/scop/bash-completion/commit/0e8d34e6bda72787b6b9833e042d3f55d73a4288))\n* pydoc: Complete on keywords and topics. ([44f1065](https://www.github.com/scop/bash-completion/commit/44f1065ada14dda97d3c0417b120207d460e0be0))\n* pylint: New completion. ([f1100ef](https://www.github.com/scop/bash-completion/commit/f1100ef25a69a9910882c5692926cab22c173496))\n* xrandr: Don't leak $i when completing --mode. ([d66fc76](https://www.github.com/scop/bash-completion/commit/d66fc76be6058098d98e07e049db92079268dc0f))\n* xrandr: Cleanups. ([a3d4266](https://www.github.com/scop/bash-completion/commit/a3d4266cab93e2dacf4fc058344f10a0e0860313))\n* xrandr: Avoid --mode completion error when --output is not given. ([225b395](https://www.github.com/scop/bash-completion/commit/225b395b494d8c4f2167429cc58256e5898d1d14))\n* xrandr --mode: Clean up one awk call. ([1e6a791](https://www.github.com/scop/bash-completion/commit/1e6a79196cc4942d24ff78d7955e4c295786e883))\n* xrandr: Use _parse_help. ([ae42c96](https://www.github.com/scop/bash-completion/commit/ae42c9675838fc92a7b77f71c0a4988c8e724822))\n* xrandr: Add bunch of option arg non-completions. ([ba50a54](https://www.github.com/scop/bash-completion/commit/ba50a546418d88cfc45653cb1e91b43764eb9a3b))\n* vipw: Add -R/--root arg completion. ([23a049a](https://www.github.com/scop/bash-completion/commit/23a049a801a6ce2c86e343710cc0245e003df0cb))\n* host: Complete with known hosts. ([eb0be65](https://www.github.com/scop/bash-completion/commit/eb0be65d630e348d8e644fb70d8e2a86b00e3bdc))\n* groupmems: Add -R/--root arg completion. ([250d5eb](https://www.github.com/scop/bash-completion/commit/250d5eb93256bec97be3f5a01a1344939928b978))\n* acpi,chpasswd,dmesg,gkrellm,groupmems,hwclock,lastlog,pwd,vipw: Complete options even without \"-\" given. ([452e938](https://www.github.com/scop/bash-completion/commit/452e938766c784ce6750f8a718cb90a84b2e9d7d))\n* ip: Remove some stale TODOs. ([06fd510](https://www.github.com/scop/bash-completion/commit/06fd510c44c17db856678e0d572c14b0cebb2e00))\n* ip: Improve addr show and link show completions. ([61fe8d1](https://www.github.com/scop/bash-completion/commit/61fe8d10a8e15285e2ad152017403e8bb609614b))\n* _available_interfaces: Try with \"ip link\" if ifconfig is N/A also with -a. ([eef7941](https://www.github.com/scop/bash-completion/commit/eef7941842f309491d52a9fef457a8fbb6a4e6a2))\n* make: Don't leak $mode. ([2758c4f](https://www.github.com/scop/bash-completion/commit/2758c4fd7eacafdfd27772e46ccd00731d36931d))\n* (testsuite) Fix pwd unit test. ([23406dc](https://www.github.com/scop/bash-completion/commit/23406dcf20f4718775e8556766be7d55a879a4be))\n* make: Make work in POSIX mode. ([c0818b0](https://www.github.com/scop/bash-completion/commit/c0818b005ab8056bd4bb0a1894bfcd7de148238e))\n* (testsuite) Make pydoc test more likely to work with our limited expect buffer size. ([0837ad0](https://www.github.com/scop/bash-completion/commit/0837ad07d93c62e2b6b9cb917239183d9fbda95a))\n* cpio: Cleanups. ([e1a0759](https://www.github.com/scop/bash-completion/commit/e1a075971d37ed563ad22cc5a1df548a677d67da))\n* cpio: Recognize pass thru when -p is bundled w/other options (RedHat: #912113). ([eb396b5](https://www.github.com/scop/bash-completion/commit/eb396b58a709201e61daf2e381abecb411863b2a))\n* vpnc: Use _parse_help instead of hardcoding options, add basic test case. ([e479610](https://www.github.com/scop/bash-completion/commit/e4796104bc81247bceb591164b227b3cd762c46f))\n* vpnc: Add bunch of option arg (non)completions. ([e7cd7ba](https://www.github.com/scop/bash-completion/commit/e7cd7ba7df96a5a2bc74693fdede77ca06349af0))\n* genisoimage: Use _parse_help instead of hardcoding options, add basic test case. ([e424ed3](https://www.github.com/scop/bash-completion/commit/e424ed3e52f90884377cb2384498b2f907aff1e9))\n* : Line continuation, whitespace, and compgen -W ... -- \"$cur\" quoting cleanups. ([6185297](https://www.github.com/scop/bash-completion/commit/6185297fc90e82c2788a8f3ea0fd42d54267c499))\n* file-roller: New completion. ([7a1aad7](https://www.github.com/scop/bash-completion/commit/7a1aad780e9f64ad213caed8aa71f45e12294e63))\n* strings: New completion. ([ad8d1f1](https://www.github.com/scop/bash-completion/commit/ad8d1f1a8f879e696956ce0bd7733ef5f3365a6b))\n* ss: New completion. ([12ae7eb](https://www.github.com/scop/bash-completion/commit/12ae7eb21451710492a8bc450e07f6c3bd79a4ec))\n* hexdump: New completion. ([552a2f2](https://www.github.com/scop/bash-completion/commit/552a2f2a94cf03ef6ee8d53ba8bad1dbb52af640))\n* xxd: New completion. ([e38e68f](https://www.github.com/scop/bash-completion/commit/e38e68f96cd7d9d1c973462368003e12661305f9))\n* hexdump: Actually install for hd as well. ([73d1f0f](https://www.github.com/scop/bash-completion/commit/73d1f0f16482b3261291454f37bd9e663fbafaa8))\n* udevadm: Deprecate ours, one is shipped in systemd >= 196 (RedHat: #919246). ([48158ee](https://www.github.com/scop/bash-completion/commit/48158ee3e454fe4f6baf30bc59884962aaf3ce8e))\n* Fix __ltrim_colon_completions() fail on parameter (\\$1) containing a glob. ([e191799](https://www.github.com/scop/bash-completion/commit/e191799dea5b38272dba7e5efe60b3adf86311e5))\n* interdiff: New completion. ([796fbbd](https://www.github.com/scop/bash-completion/commit/796fbbdc86e10df67f4930597ce56f9fab5f9457))\n* koji: Complete on build targets when --target is given to wait-repo. ([2f2f127](https://www.github.com/scop/bash-completion/commit/2f2f1278c7ae535d1c3763370e22e7f4083a50e7))\n* lua: New completion. ([99153fb](https://www.github.com/scop/bash-completion/commit/99153fb1ef75b9beec2d85966883bf3e99d095ad))\n* luac: New completion. ([29f5a4a](https://www.github.com/scop/bash-completion/commit/29f5a4a5f4403f246e22fb8c2133e8696d2f0e41))\n* pkg-config: Try to complete --variable= if package name is already given. ([408cb08](https://www.github.com/scop/bash-completion/commit/408cb08051cf18404f89e3fb89c4924cc3fa04ea))\n* tar: Fix completing files inside *.tlz when J is explicitly given. ([d02d940](https://www.github.com/scop/bash-completion/commit/d02d94080d950768bfeb8c830a678da55549f824))\n* tar: Support *.tar.lz (Debian: #703599). ([beaba62](https://www.github.com/scop/bash-completion/commit/beaba62b346bc588d1f9466f338f64073ad2716f))\n* patch: New full featured completion. ([7afc973](https://www.github.com/scop/bash-completion/commit/7afc97366f0a931cb98bd151c5971d4c4c926e59))\n* unzip/zipinfo: Associate with more StarOffice extensions. ([f0a3147](https://www.github.com/scop/bash-completion/commit/f0a3147179ea06bdcd463e2d160df97255656e95))\n* jar: Reuse unzip's xspec (RedHat: #928253). ([3cb64ac](https://www.github.com/scop/bash-completion/commit/3cb64accaf281f6315baa7bced2c72e1eff9d12f))\n* cppcheck: Complete --include= with filenames. ([1a3967c](https://www.github.com/scop/bash-completion/commit/1a3967c8d4d8d9027040e00ecf0756dafaeb88ec))\n* Fix helper script to create changelogs ([4d096e0](https://www.github.com/scop/bash-completion/commit/4d096e0b873478c7b01c5019038c646b7184da60))\n* Releasing 2.1 ([3085c7e](https://www.github.com/scop/bash-completion/commit/3085c7e12179817a02a611016606391295c69942))\n\n## 2.0 (2012-06-17)\n\n* sudo: Handle options (Alioth: #311414). ([91a61af](https://www.github.com/scop/bash-completion/commit/91a61afe59eeca58736e55745ae76ad6641a6a12))\n* sudo: Fix option list parsing ([6621f37](https://www.github.com/scop/bash-completion/commit/6621f37c5dc2cf59ba2c34ee038f5699418e643e))\n* sudoedit: New completion. ([d0a1495](https://www.github.com/scop/bash-completion/commit/d0a14954ab45cb79aba9bff44d5ba910eac7925d))\n* ssh-add: New completion. ([28f15fd](https://www.github.com/scop/bash-completion/commit/28f15fd05c28ee84e79ee2d5f17b5867e682efef))\n* pwd: New completion. ([6943138](https://www.github.com/scop/bash-completion/commit/694313874a8ef025c5bbbf2a57de058fb684e9b9))\n* _command_offset: Properly quote arguments of eval (Alioth: #313499). ([2e97527](https://www.github.com/scop/bash-completion/commit/2e975278c59de9ab6caa5ace65de4b49c6678e65))\n* Fix completion loading when a symlink is sourced, thanks to Jonathan Nieder ([318759c](https://www.github.com/scop/bash-completion/commit/318759c8497cfce3704bc1b97c41459a5be08f7b))\n* Revert \"Fix completion loading when a symlink is sourced, thanks to Jonathan Nieder\" ([2ad325d](https://www.github.com/scop/bash-completion/commit/2ad325d4afc4ef96aedc7b91c8e75502647c260d))\n* mount.linux: Add some new mount options intoduced in Linux 3.0-3.2 ([1cb1e31](https://www.github.com/scop/bash-completion/commit/1cb1e31e182b0503ea82f9f74c9b43fe91799844))\n* _modules: Ignore error messages. ([db53fc7](https://www.github.com/scop/bash-completion/commit/db53fc77a5349088b24830b490b16dfcc6bee540))\n* modprobe, modinfo, insmod: Move modprobe and modinfo completions to their own files. ([f67818e](https://www.github.com/scop/bash-completion/commit/f67818e023f9afbeef8698fdd3c08eb0f90ad468))\n* sbopkg: Use _parse_help. ([32e8f33](https://www.github.com/scop/bash-completion/commit/32e8f3301801c9ff86f9620ca135f83f71590e29))\n* sbopkg, slackpkg, slapt-{get,src}: Use shorter form of the check if file exists. ([3388314](https://www.github.com/scop/bash-completion/commit/33883145af5e3290105e2f784f84c7468617d5ee))\n* rmmod: Add option completions. ([47c49db](https://www.github.com/scop/bash-completion/commit/47c49dbfec80c43695e4c95c4cc1e5781c685d93))\n* testsuite/generate: Generate less linefeeds. ([068e422](https://www.github.com/scop/bash-completion/commit/068e422222dd862c33137b0d88eab7fe08d9e71e))\n* insmod: Install for insmod.static too. ([d02b4e1](https://www.github.com/scop/bash-completion/commit/d02b4e15e3d130d426bcee1a7b03cc72f6144c90))\n* mplayer: Add -monitoraspect arg completion. ([a90d7d8](https://www.github.com/scop/bash-completion/commit/a90d7d861a53fa7aee6be505678cd43fb578cafc))\n* mplayer: Add generic handling of options that take arguments. ([45c0886](https://www.github.com/scop/bash-completion/commit/45c0886accafd08272fa17c5daad85a1ee52cd56))\n* Workaround bash bug that fails to complete <, > ([6f3d650](https://www.github.com/scop/bash-completion/commit/6f3d650e2309feff4f3e80717409ebccb2d38362))\n* testsuite: Fix spurious modinfo and modprobe test failures on systems that have /lib and /lib64 dirs. ([d7a6fb1](https://www.github.com/scop/bash-completion/commit/d7a6fb1f47d5daafb555f09fb5d9bd544ae99ec6))\n* _filedir: Properly quote paths to avoid unexpected expansion. ([98f90eb](https://www.github.com/scop/bash-completion/commit/98f90ebdf8b7ccf49e7854640712af1ff4a47871))\n* Properly declare 'symlinks' dependencies ([ec7fe00](https://www.github.com/scop/bash-completion/commit/ec7fe0006632f2c008414bb3e8c84fa4862c962f))\n* pigz: Add -p/--processes arg completion. ([cff897e](https://www.github.com/scop/bash-completion/commit/cff897eda8886c93b5b8c0e939588af36983a5f4))\n* apt-get: add 'changelog' to completed commands ([ae98bfa](https://www.github.com/scop/bash-completion/commit/ae98bfa721ff9ff4cd9c64075d2eb7fe01d76828))\n* Really complete 'changelog' ([071ba93](https://www.github.com/scop/bash-completion/commit/071ba93a0b9b5db37dc7c5b4b2423507d8f6b741))\n* su: Add linux-specific completion ([d2aedc8](https://www.github.com/scop/bash-completion/commit/d2aedc83e143e7d506c8c5340dac4a820cc50076))\n* testsuite: Add basic su test case. ([f41d7e2](https://www.github.com/scop/bash-completion/commit/f41d7e2ff660fdf9a95490d4fb438eefa565e9d1))\n* su: Fix long option handling. ([e4fe946](https://www.github.com/scop/bash-completion/commit/e4fe946621d824fe04f5c8a8f4f774342b53df40))\n* su: Add --session-command arg completion. ([e7c4035](https://www.github.com/scop/bash-completion/commit/e7c4035089548efdf9a15fb96a289585b8b322d1))\n* su: Complete -s/--shell with shells instead of all files. ([91528b5](https://www.github.com/scop/bash-completion/commit/91528b527145bec711b4b3ea8c65335a6ed617b0))\n* vmstat: New completion. ([bed5694](https://www.github.com/scop/bash-completion/commit/bed56941110985446aed52302f437c50b8182524))\n* lyx: Remove simple completion, upstream has more complete one (Debian: #662203) ([a062777](https://www.github.com/scop/bash-completion/commit/a062777d4b9c7dc8a51d1e87c938b48fed810232))\n* insmod, modprobe: Don't hardcode path to modinfo (Alioth: #313569) ([199a63b](https://www.github.com/scop/bash-completion/commit/199a63bd4db2020c8d6aaad6723cf881c023c0ff))\n* man: --path option is supported on Darwin (Alioth: #313584) ([fb2d657](https://www.github.com/scop/bash-completion/commit/fb2d657fac6be93a1c4ffa76018d8042859e0a03))\n* man: Move variable declaration to the right place. ([39ac464](https://www.github.com/scop/bash-completion/commit/39ac4642bff9cd9813b8d4b2758b17fe945584cc))\n* testsuite/generate: Tweak linefeeds. ([1fc97c4](https://www.github.com/scop/bash-completion/commit/1fc97c47baf7453b6a27f5e0104c9d434e59acc1))\n* acpi: New completion. ([0ab693c](https://www.github.com/scop/bash-completion/commit/0ab693ca50206e46f23fccba52eeb8516e2e6fc9))\n* hwclock: New completion. ([3d7102b](https://www.github.com/scop/bash-completion/commit/3d7102b9a5b138091122bad601cc3c104df0ce8f))\n* feh: Update option argument completions. ([d2a3db0](https://www.github.com/scop/bash-completion/commit/d2a3db0b7a0cfc7e0da037a003873c19b8fc22a2))\n* fbi, feh: Complete more supported file formats. ([63574c8](https://www.github.com/scop/bash-completion/commit/63574c8f14fb813bea08e59e43a170ff0f4cf592))\n* fbgs: Add new options introduced in fbida-2.09. ([4710d1b](https://www.github.com/scop/bash-completion/commit/4710d1bf48f9fde1becfcc902aa1c91312a58a91))\n* cppcheck: Complete new --relative-paths option arguments ([587d268](https://www.github.com/scop/bash-completion/commit/587d26834ac7116afedfdad86f6cc7a931fbf57d))\n* ri: Rename ri_get_methods helper to add leading underscore ([8b3f19a](https://www.github.com/scop/bash-completion/commit/8b3f19a82e60c725f8588a91b1679dde4b1b1967))\n* _expand: Suppress unwanted bash error messages (Alioth: #313497) ([ccda61d](https://www.github.com/scop/bash-completion/commit/ccda61d928505abfa839a2c048e3b3d7f89d3a9e))\n* make: Add generic variable completion. ([f7240b8](https://www.github.com/scop/bash-completion/commit/f7240b82a4d45f03b741f11b771fae17d3c1c713))\n* man: Recognize 3gl as man page filename extension -- at least Mesa uses it. ([739c6d2](https://www.github.com/scop/bash-completion/commit/739c6d2833370e618fcdc37b5a72c15426313fae))\n* _realcommand: Try greadlink before readlink (Alioth: #313659). ([32f2239](https://www.github.com/scop/bash-completion/commit/32f223963a013e4875c999109c0a2fa8f9a0ecdf))\n* Comment spelling fix. ([f990d5e](https://www.github.com/scop/bash-completion/commit/f990d5e617954c57e73209dba8a8061f87d538a4))\n* Spelling fix. ([7532eda](https://www.github.com/scop/bash-completion/commit/7532eda90ff631611e003e9b51dca8a0e558e95c))\n* qiv: Add *.svg. ([e0dc594](https://www.github.com/scop/bash-completion/commit/e0dc594d2aabc5040ce0cf53bb73e14f60218025))\n* xmllint: Add *.svgz. ([b54aded](https://www.github.com/scop/bash-completion/commit/b54adedd4f158ac41ecd6a8c6cc7d8faf51dc069))\n* add xz compression extension for kernel modules ([67d30da](https://www.github.com/scop/bash-completion/commit/67d30da6b79cf7983058a1840bce215990094246))\n* autotools: Use MKDIR_P instead of mkdir_p (Alioth: #313671). ([f8ac6a5](https://www.github.com/scop/bash-completion/commit/f8ac6a5aeb287763341e4db2dacd1eb2c3cdecf6))\n* lbzip2: Add -n argument completion. ([d141f9c](https://www.github.com/scop/bash-completion/commit/d141f9c6ebd8659638de9d5de64e202ac1f450c0))\n* _tilde*: Escape tilde in [[ $1 == \\~* ]] tests (RedHat: #817902). ([709d6e0](https://www.github.com/scop/bash-completion/commit/709d6e06902df7205280d0626995fc5b6abe6e89))\n* scp: Recognise symlinks to directories as directories (Debian: #666055). ([89acac9](https://www.github.com/scop/bash-completion/commit/89acac9910a27cc9428314e66c3bdbfc48c65f41))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.736328125,
          "content": "# Contributing to bash-completion\n\nContributions to the bash completion project are more than\nwelcome. Fixes, clean-ups and improvements of existing code are much\nappreciated, as are completion functions for new commands.\n\nHowever, before submitting a completion to us, first consider submitting it to\nthe project that ships the commands your completion is for. Having the\ncompletion shipped along with the command opens up some liberties we don't have\nif the completion is included with bash-completion. For example, we generally\ndo not want to hardcode lists of available command options and their\ncompletions, because they quite probably vary between versions of the completed\ncommand, and therefore resort to scraping --help output and the like. While we\ndo fairly well there, depending on the command, this can be fragile or\nexpensive, or just not possible. If the completion is shipped alongside the\ncommand, they can be kept in sync and use more hardcoding etc. They are also\nmore likely to be maintained and/or watched by people intimately familiar with\nthe completed commands. See instructions in README.md how to install completion\nfiles from other projects so they are automatically enabled and dynamically\nloaded by bash-completion.\n\nOn the other hand, we do have a pretty nice test suite and a bunch of helper\nfunctions that you may find useful. And a whole slew of completions in one\npackage. Our functions can be used from \"external\" completions as well, just\nmake sure you test for their existence and/or fail gracefully if you intend\nyour completion to be usable without having bash-completion installed.\n\nIt's nowhere near clear cut always what is the best place for the completion,\nupstream project or us. Even if it would seem to be upstream, not all upstreams\nare interested in shipping completions, or their install systems might not\neasily support installing completion files properly. Or the projects might be\nstagnant. But give it some thought, and ask if unsure.\n\nIf you wish to contribute code to us, volunteering for long term maintainership\nof your code within bash-completion is welcome, and stating willingness for\nthat goes a long way in getting your contribution accepted. There are a lot of\ncompletions in bash-completion already, and chances are that existing\nmaintainers might not want to add completions they don't actively use\nthemselves into their maintenance workload. When exactly you will be asked to\njoin the project depends on the case; there are no real, consistent \"rules\" for\nthat. Don't be disappointed if it does or doesn't happen instantly.\n\nAlso, please bear the following coding guidelines in mind:\n\n- See the related documents, [API and naming](doc/api-and-naming.md) and\n  [Coding style guide](doc/styleguide.md), for information about conventions to\n  follow related to those topics.\n\n- Do not use Perl, Ruby, Python etc. to do text processing unless the\n  command for which you are writing the completion code implies the\n  presence of one of those languages.\n\n  For example, if you were writing completion code for perldoc(1), the\n  use of Perl to achieve your goal would be acceptable. irb(1)\n  completion would similarly make the use of Ruby acceptable.\n\n  Even so, please consider alternatives to these large and slow to\n  start interpreters. Use lightweight programs such as grep(1), awk(1)\n  and sed(1).\n\n- Use the full power of bash >= 4.2. We no longer support earlier bash\n  versions, so you may as well use all the features of that version of\n  bash to optimise your code. However, be careful when using features\n  added since bash 4.2, since not everyone will be able to use them.\n\n  For example, extended globs often enable you to avoid the use of\n  external programs, which are expensive to fork and execute, so do\n  make full use of those:\n\n  - `?(pattern-list)` - match zero or one occurrences of patterns\n  - `*(pattern-list)` - match zero or more occurrences of patterns\n  - `+(pattern-list)` - match one or more occurrences of patterns\n  - `@(pattern-list)` - match exactly one of the given patterns\n  - `!(pattern-list)` - match anything except one of the given patterns\n\n- Following on from the last point, be sparing with the use of\n  external processes whenever you can. Completion functions need to be\n  fast, so sacrificing some code legibility for speed is acceptable.\n\n  For example, judicious use of sed(1) can save you from having to\n  call grep(1) and pipe the output to cut(1), which saves a fork(2)\n  and exec(3).\n\n  Sometimes you don't even need sed(1) or other external programs at\n  all, though. Use of constructs such as `${parameter#word}`,\n  `${parameter%word}` and `${parameter/pattern/string}` can provide\n  you a lot of power without having to leave the shell.\n\n  For example, if `$foo` contains the path to an executable,\n  `${foo##*/}` will give you the basename of the program, without\n  having to call basename(1). Similarly, `${foo%/*}` will give you the\n  dirname, without having to call dirname(1).\n\n  As another example,\n\n  ```shell\n  bar=$(echo $foo | command sed -e 's/bar/baz/g')\n  ```\n\n  can be replaced by:\n\n  ```shell\n  bar=${foo//bar/baz}\n  ```\n\n  These forms of parameter substitutions can also be used on arrays,\n  which makes them very powerful (if a little slow).\n\n- We want our completions to work in `posix` and `nounset` modes.\n\n  Unfortunately due to a bash < 5.1 bug, toggling POSIX mode\n  interferes with keybindings and should not be done. This rules out\n  use of process substitution which causes syntax errors in POSIX mode\n  of bash < 5.1.\n\n  Instead of toggling `nounset` mode, make sure to test whether\n  variables are set (e.g. with `[[ -v varname ]]`) or use default\n  expansion (e.g. `${varname-}`).\n\n- Prefer `_comp_compgen_split -- \"$(...)\"` over embedding `$cur` in external\n  command arguments (often e.g. sed, grep etc) unless there's a good reason to\n  embed it. Embedding user input in command lines can result in syntax errors\n  and other undesired behavior, or messy quoting requirements when the input\n  contains unusual characters.  Good reasons for embedding include\n  functionality (if the thing does not sanely work otherwise) or performance\n  (if it makes a big difference in speed), but all embedding cases should be\n  documented with rationale in comments in the code.\n\n  Do not use `_comp_compgen -- -W \"$(...)\"` or `_comp_compgen -- -W '$(...)'`\n  but always use `_comp_compgen_split -- \"$(...)\"`.  In the former case, when\n  the command output contains strings looking like shell expansions, the\n  expansions will be unexpectedly performed, which becomes a vulnerability.  In\n  the latter case, checks by shellcheck and shfmt will not be performed inside\n  `'...'`.  Also, `_comp_compgen_split` is `IFS`-safe.\n\n- When completing available options, offer only the most descriptive\n  ones as completion results if there are multiple options that do the\n  same thing. Usually this means that long options should be preferred\n  over the corresponding short ones. This way the user is more likely\n  to find what she's looking for and there's not too much noise to\n  choose from, and there are less situations where user choice would\n  be needed in the first place. Note that this concerns only display\n  of available completions; argument processing/completion for options\n  that take an argument should be made to work with all known variants\n  for the functionality at hand. For example if `-s`, `-S`, and\n  `--something` do the same thing and require an argument, offer only\n  `--something` as a completion when completing option names starting\n  with a dash, but do implement required argument processing for all\n  `-s`, `-S`, and `--something`. Note that GNU versions of various\n  standard commands tend to have long options while other userland\n  implementations of the same commands may not have them, and it would\n  be good to have the completions work for as many userlands as\n  possible so things aren't always that simple.\n\n- Do not write to the file-system under any circumstances. This can\n  create race conditions, is inefficient, violates the principle of\n  least surprise and lacks robustness.\n\n- Use printf(1) instead of echo(1) for portability reasons, and be\n  sure to invoke commands that are often found aliased (such as `ls`\n  or `grep` etc) using the `command` (or `builtin`) command as\n  appropriate.\n\n- Make small, incremental commits that do one thing. Don't cram\n  unrelated changes into a single commit.\n\n- We use [Conventional Commits](https://www.conventionalcommits.org/)\n  to format commit messages, with types and most other details from\n  [commitlint's config-conventional](https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional).\n  `gitlint` in our pre-commit config checks commit messages for\n  conformance with these rules.\n\n  It is important to do this correctly; commit types `fix` and `feat`\n  as well as any change marked as breaking affects what ends up in the\n  release notes, and what will the next bash-completion release's\n  (semantic) version be.\n\n- If your code was written for a particular platform, try to make it\n  portable to other platforms, so that everyone may enjoy it. If your\n  code works only with the version of a binary on a particular\n  platform, ensure that it will not be loaded on other platforms that\n  have a command with the same name.\n\n  In particular, do not use GNU extensions to commands like sed and\n  awk if you can write your code another way. If you really, REALLY must\n  use them, do so if there's no other sane way to do what you're doing.\n  The \"Shell and Utilities\" volume of the POSIX specification is a good\n  starting reference for portable use of various utilities, see\n  <https://pubs.opengroup.org/onlinepubs/9699919799/>.\n\n- Use an editor that supports EditorConfig, see <https://editorconfig.org/>,\n  and format source code according to our settings.\n\n- Read the existing source code for examples of how to solve\n  particular problems. Read the bash man page for details of all the\n  programming tools available to you within the shell.\n\n- Please test your code thoroughly before sending it to us. We don't\n  have access to all the commands for which we are sent completion\n  functions, so we are unable to test them all personally. If your\n  code is accepted into the distribution, a lot of people will try it\n  out, so try to do a thorough job of eradicating all the bugs before\n  you send it to us. If at all practical, **add test cases** to our\n  test suite (in the test/ dir) that verify that the code does what it\n  is intended to do, fixes issues it intends to fix, etc.\n\n- In addition to running the test suite, there are a few scripts in the test/\n  dir that catch some common issues, see and use for example runLint.\n\n- Make sure you have Python 3.7 or later installed. This is required for\n  running the development tooling, linters etc. Rest of the development\n  Python dependencies are specified in `test/requirements-dev.txt` which\n  can be fed for example to `pip`:\n\n  ```shell\n  python3 -m pip install -r test/requirements-dev.txt\n  ```\n\n- Install pre-commit and set it up, see <https://pre-commit.com/>.\n  That'll run a bunch of linters and the like, the same as the\n  bash-completion CI does. Running it locally and fixing found issues before\n  commit/push/PR reduces some roundtrips with the review.\n  After installing it, enable it for stages we use it with like:\n\n  ```shell\n  pre-commit install --hook-type pre-commit --hook-type commit-msg\n  ```\n\n- File bugs, enhancement, and pull requests at GitHub,\n  <https://github.com/scop/bash-completion>.\n  Sending them to the developers might work too, but is really strongly\n  discouraged as bits are more likely to fall through the cracks that\n  way compared to the tracker. Just use GitHub. If that's not an\n  option for some reason and you want to use email to send patches,\n  send them as attachments formatted by `git format-patch` or directly\n  with `git send-email`.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.4521484375,
          "content": "SUBDIRS = completions doc helpers test\n\npkgdata_DATA = bash_completion\n\n# Empty, but here just to get the compat dir created with install\ncompatdir = $(sysconfdir)/bash_completion.d\ncompat_DATA = bash_completion.d/000_bash_completion_compat.bash\n\nprofiledir = $(sysconfdir)/profile.d\nprofile_DATA = bash_completion.sh\n\npkgconfigdir = $(datadir)/pkgconfig\npkgconfig_DATA = bash-completion.pc\n\ncmakeconfigdir = $(datadir)/cmake/$(PACKAGE)/\ncmakeconfig_DATA = bash-completion-config.cmake \\\n                   bash-completion-config-version.cmake\n\n%: %.in Makefile\n\t$(SED) \\\n\t\t-e 's|@prefix[@]|$(prefix)|' \\\n\t\t-e 's|@datadir[@]|$(datadir)|' \\\n\t\t-e 's|@sysconfdir[@]|$(sysconfdir)|' \\\n\t\t-e 's|@PACKAGE[@]|$(PACKAGE)|' \\\n\t\t-e 's|@VERSION[@]|$(VERSION)|' \\\n\t\t<$(srcdir)/$@.in >$@\n\nCLEANFILES = bash_completion.sh bash-completion.pc \\\n\tbash-completion-config.cmake bash-completion-config-version.cmake\n\nEXTRA_DIST = CHANGELOG.md $(pkgdata_DATA) bash_completion.sh.in .dir-locals.el \\\n\t.editorconfig README.md CONTRIBUTING.md pyproject.toml .perltidyrc \\\n\t.shellcheckrc bash-completion.pc.in bash-completion-config.cmake.in \\\n\tbash-completion-config-version.cmake.in setup-symlinks.sh \\\n\t$(compat_DATA)\n\ninstall-data-hook:\n\ttmpfile=`mktemp $${TMPDIR:-/tmp}/bash_completion.XXXXXX` && \\\n\t$(SED) -e 's|-/etc/bash_completion\\.d|-$(compatdir)|' \\\n\t    $(DESTDIR)$(datadir)/$(PACKAGE)/bash_completion >$$tmpfile && \\\n\tcat $$tmpfile >$(DESTDIR)$(datadir)/$(PACKAGE)/bash_completion && \\\n\trm $$tmpfile\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.380859375,
          "content": "# bash-completion\n\n[![CI](https://github.com/scop/bash-completion/actions/workflows/ci.yaml/badge.svg)](https://github.com/scop/bash-completion/actions/workflows/ci.yaml)\n\n## Introduction\n\nbash-completion is a collection of command line command completions for the\n[Bash shell](https://www.gnu.org/software/bash/), collection of helper\nfunctions to assist in creating new completions, and set of facilities for\nloading completions automatically on demand, as well as installing them.\n\n## Installation\n\nThe easiest way to install this software is to use a package; refer to\n[Repology](https://repology.org/project/bash-completion) for a comprehensive\nlist of operating system distributions, package names, and available versions.\n\nDepending on the package, you may still\nneed to source it from either `/etc/bashrc` or `~/.bashrc` (or any\nother file sourcing those). If you have _only_ bash >= 4.2 installed, you can\ndo this by simply using:\n\n```shell\n# Use bash-completion, if available\n[[ $PS1 && -f /usr/share/bash-completion/bash_completion ]] && \\\n    . /usr/share/bash-completion/bash_completion\n```\n\nIf you have older bash versions in use, their loading of `bash_completion`\nshould be prevented. See further for more info.\n\nIf you don't have the package readily available for your distribution, or\nyou simply don't want to use one, you can install bash completion using the\nstandard commands for GNU autotools packages:\n\n```shell\nautoreconf -i      # if not installing from prepared release tarball\n./configure\nmake               # GNU make required\nmake check         # optional\nmake install       # as root\nmake installcheck  # optional, requires python3 with pytest >= 3.6, pexpect\n```\n\nThese commands install the completions and helpers, as well as a\n`profile.d` script that loads `bash_completion` where appropriate.\n\nIf your system does not use the `profile.d` directory (usually below\n`/etc`) mechanism (i.e., does not automatically source shell scripts in\nit), you can source the `$sysconfdir/profile.d/bash_completion.sh`\nscript in `/etc/bashrc` or `~/.bashrc`.\n\nThe `profile.d` script provides a configuration file hook that can be\nused to prevent loading `bash_completion` on per user basis when it's\ninstalled system wide. To do this:\n\n1. Turn off programmable completion with `shopt -u progcomp` in\n   `$XDG_CONFIG_HOME/bash_completion` (or `~/.config/bash_completion`\n   if `$XDG_CONFIG_HOME` is not set)\n2. Turn it back on (for example in `~/.bashrc`) if you want to use\n   programmable completion for other purposes.\n\n### macOS (OS X)\n\nIf you're using macOS (formerly OS X), `/etc/bashrc` is apparently not sourced\nat all, and `~/.bashrc` is not sourced from `~/.bash_profile` by default\n(because `~/.bash_profile` is not created by default).  In this case, the\nstandard way is to configure `~/.bash_profile` to source `~/.bashrc` and write\ninteractive settings in `~/.bashrc`.  You can source `~/.bashrc` in\n`~/.bash_profile` in the following way:\n\n```shell\n# ~/.bash_profile\n\nif [[ -f ~/.bashrc ]]; then\n  source ~/.bashrc\nfi\n```\n\nThen, you can source `bash-completion` in your `~/.bashrc`.  It should be noted\nthat `bash-completion` should not be sourced in `~/.bash_profile` because\n`~/.bash_profile` is only loaded in interactive _login_ shell sessions.  If you\nstart nested Bash sessions, the interactive settings in `~/.bash_profile` will\ndisappear.  It is strongly recommended to source `~/.bashrc` from\n`~/.bash_profile` and write interactive settings in `~/.bashrc`.\n\nFor example, if you install `bash-completion` using Homebrew, it will install\nthe entry point of `bash-completion` to\n`$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh`.  We can source it by\nadding the following to our startup file `~/.bashrc`:\n\n```shell\nif [[ -s $HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh ]]; then\n  . \"$HOMEBREW_PREFIX/etc/profile.d/bash_completion.sh\"\nfi\n```\n\n## Troubleshooting\n\nIf you find that a given function is producing errors or does not work\nas it should under certain circumstances when you attempt completion,\ntry running `set -x` or `set -v` prior to attempting the completion\nagain. This will produce useful debugging output that will aid us in\nfixing the problem if you are unable to do so yourself. Turn off the\ntrace output by running either `set +x` or `set +v`.\n\nIf you are filing an issue, please attach the generated debugging output\nin `set -x` mode copy-pasted to a separate, attached file in the report.\nBefore doing so, be sure to review the output for anything you may not want\nto share in public, and redact as appropriate.\n\nTo debug dynamic loading of a completion, tracing needs to be turned\non before the debugged completion is attempted the first time. The\neasiest way to do this is to start a new shell session, and to turn\ntracing on in it before doing anything else there.\n\n## Known problems\n\n1. Many of the completion functions assume GNU versions of the various\n   text utilities that they call (e.g. `grep`, `sed`, and `awk`). Your\n   mileage may vary.\n\n## FAQ\n\n**Q. The bash completion code inhibits some commands from completing on\n   files with extensions that are legitimate in my environment. Do I\n   have to disable completion for that command in order to complete on\n   the files that I need to?**\n\nA. No. If needed just once in a while,\n   use `M-/` to (in the words of the bash man page) attempt file\n   name completion on the text to the left of the cursor. This will\n   circumvent any file type restrictions put in place by the bash\n   completion code. If needed more regularly, see the next question:\n\n**Q. How can I override a completion shipped by bash-completion?**\n\nA. Install a local completion of your own appropriately for the desired\n   command, and it will take precedence over the one shipped by us. See the\n   next answer for details where to install it, if you are doing it on per user\n   basis. If you want to do it system wide, you can install eagerly loaded\n   files in `compatdir` (see a couple of questions further down for more\n   info. To get the path of `compatdir` for the current system, the output of\n   `pkg-config bash-completion --variable compatdir` can be used) and install a\n   completion for the commands to override our completion for in them.\n\n   If you want to use bash's default completion instead of one of ours,\n   something like this should work (where `$cmd` is the command to override\n   completion for): `complete -o default -o bashdefault $cmd`\n\n**Q. Where should I install my own local completions?**\n\nA. Put them in the `completions` subdir of `$BASH_COMPLETION_USER_DIR`\n   (defaults to `$XDG_DATA_HOME/bash-completion` or\n    `~/.local/share/bash-completion`\n   if `$XDG_DATA_HOME` is not set) to have them loaded automatically\n   on demand when the respective command is being completed.\n   See also the next question's answer for considerations for these\n   files' names, they apply here as well. Alternatively, you can write\n   them directly in `~/.bash_completion` which is loaded eagerly by\n   our main script.\n\n**Q. I author/maintain package X and would like to maintain my own\n   completion code for this package. Where should I put it to be sure\n   that interactive bash shells will find it and source it?**\n\nA. [ Disclaimer: Here, how to make the completion code visible to\n   bash-completion is explained.  We do not require always making the\n   completion code visible to bash-completion.  In what condition the\n   completion code is installed should be determined at the author/maintainers'\n   own discretion. ]\n\n   Install it in one of the directories pointed to by bash-completion's\n   `pkgconfig` file variables. There are two alternatives:\n\n   - The recommended directory is `completionsdir`, which you can get with\n     `pkg-config --variable=completionsdir bash-completion`. From this\n     directory, completions are automatically loaded on demand based on invoked\n     commands' names, so be sure to name your completion file accordingly, and\n     to include (for example) symbolic links in case the file provides\n     completions for more than one command. The completion filename for\n     command `foo` in this directory should be either `foo`, or `foo.bash`.\n     (Underscore prefixed `_foo` works too, but is reserved for\n     bash-completion internal use as a deprecation/fallback marker.)\n   - The other directory which is only present for backwards compatibility,\n     its usage is no longer recommended, is `compatdir` (get it with\n     `pkg-config --variable=compatdir bash-completion`). From this\n     directory, files are loaded eagerly when `bash_completion` is loaded.\n\n   For packages using GNU autotools the installation can be handled\n   for example like this in `configure.ac`:\n\n   ```m4\n   PKG_CHECK_VAR(bashcompdir, [bash-completion], [completionsdir], ,\n     bashcompdir=\"${sysconfdir}/bash_completion.d\")\n   AC_SUBST(bashcompdir)\n   ```\n\n   ...accompanied by this in `Makefile.am`:\n\n   ```makefile\n   bashcompdir = @bashcompdir@\n   dist_bashcomp_DATA = your-completion-file # completion files go here\n   ```\n\n   For cmake we ship the `bash-completion-config.cmake` and\n   `bash-completion-config-version.cmake` files. Example usage:\n\n   ```cmake\n   find_package(bash-completion)\n   if(BASH_COMPLETION_FOUND)\n     message(STATUS\n       \"Using bash completion dir ${BASH_COMPLETION_COMPLETIONSDIR}\")\n   else()\n     set (BASH_COMPLETION_COMPLETIONSDIR \"/etc/bash_completion.d\")\n     message (STATUS\n       \"Using fallback bash completion dir ${BASH_COMPLETION_COMPLETIONSDIR}\")\n   endif()\n\n   install(FILES your-completion-file DESTINATION\n     ${BASH_COMPLETION_COMPLETIONSDIR})\n   ```\n\n   In bash-completion >= 2.12, we search the data directory of\n   `bash-completion` under the installation prefix where the target command is\n   installed.  When one can assume that the version of the target\n   bash-completion is 2.12 or higher, the completion script can actually be\n   installed to `$PREFIX/share/bash-completion/completions/` under the same\n   installation prefix as the target program installed under `$PREFIX/bin/` or\n   `$PREFIX/sbin/`.  For the detailed search order, see also \"Q. What is the\n   search order for the completion file of each target command?\" below.\n\n   Example for `Makefile.am`:\n\n   ```makefile\n   bashcompdir = $(datarootdir)/bash-completion/completions\n   dist_bashcomp_DATA = your-completion-file\n   ```\n\n   Example for `CMakeLists.txt`:\n\n   ```cmake\n   install(FILES your-completion-file DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/bash-completion/completions\")\n   ```\n\n**Q. When completing on a symlink to a directory, bash does not append\n   the trailing `/` and I have to hit <kbd>&lt;Tab></kbd> again.\n   I don't like this.**\n\nA. This has nothing to do with `bash_completion`. It's the default for\n   completing symlinks to directories since bash 2.05a, and was added\n   because sometimes you want to operate on the symlink itself, rather\n   than what it points to.\n\n   You can get the pre-2.05a behaviour back by putting `set\n   mark-symlinked-directories on` in your `/etc/inputrc` or\n   `~/.inputrc` file.\n\n**Q. Completion goes awry when I try to complete on something that contains\n   a colon.**\n\nA. This is actually a 'feature' of bash. bash recognises a colon as\n   starting a new completion token, which is often what you want when\n   completing something like a `PATH` variable:\n\n   ```shell\n   export PATH=/bin:/sbin:/usr<Tab>\n   ```\n\n   Without the special treatment of the colon, the above wouldn't work\n   without programmable completion, so it has long been a feature of\n   the shell.\n\n   Unfortunately, you don't want the colon to be treated as a special\n   case when doing something like:\n\n   ```shell\n   man File::B<Tab>\n   ```\n\n   Here, the colons make bash think that it's completing a new token\n   that begins with 'B'.\n\n   Unfortunately, there's no way to turn this off. The only thing you\n   can do is escape the colons with a backslash.\n\n**Q. Why is `rpm` completion so slow with `-q`?**\n\nA. Probably because the database is being queried every time and this uses a\n   lot of memory.\n\n   You can make this faster by pregenerating the list of installed\n   packages on the system. Make sure you have a readable file called\n   `/var/log/rpmpkgs`. It's generated by `/etc/cron.daily/rpm` on\n   some Red Hat and Mandrake and derivative Linux systems.\n\n   If you don't have such a cron job, make one:\n\n   ```shell\n   #!/bin/sh\n\n   rpm -qa --qf '%{name}-%{version}-%{release}.%{arch}.rpm\\n' 2>&1 \\\n           | sort >/var/log/rpmpkgs\n   ```\n\n   rpm completion will use this flat text file instead of the RPM database,\n   unless it detects that the database has changed since the file was created,\n   in which case it will still use the database to ensure accuracy.\n\n**Q. bash-completion interferes with my `command_not_found_handle` function\n   (or the other way around)!**\n\nA. If your `command_not_found_handle` function is not intended to\n   address (possibly missing) commands invoked during bash\n   programmable completion functions, you can account for this\n   in the function by, for example, testing if the `$COMP_LINE`\n   variable is set and taking appropriate action, typically returning\n   early and silently with success.\n\n**Q. Can tab completion be made even easier?**\n\nA. The `readline(3)` library offers a few settings that can make tab\n   completion easier (or at least different) to use.\n\n   For example, try putting the following in either `/etc/inputrc` or\n   `~/.inputrc`:\n\n   ```inputrc\n   set show-all-if-ambiguous on\n   ```\n\n   This will allow single tab completion as opposed to requiring a\n   double tab. This makes things much more pleasant, in our opinion.\n\n   ```inputrc\n   set visible-stats on\n   ```\n\n   This will suffix each returned file completion with a character\n   denoting its type, in a similar way to `ls(1)` with `-F` or `--classify`.\n\n   ```inputrc\n   set page-completions off\n   ```\n\n   This turns off the use of the internal pager when returning long\n   completion lists.\n\n**Q. Is bash the be-all-and-end-all of completion as far as shells go?**\n\nA. Absolutely not. zsh has an extremely sophisticated completion system\n   that offers many features absent from the bash implementation. Its\n   users often cannot resist pointing this out. More information can\n   be found at <https://www.zsh.org/>.\n\n**Q. What is the search order for the completion file of each target command?**\n\nA. The completion files of commands are looked up by the shell function\n  `__load_completion`.  Here, the search order in bash-completion >= 2.12 is\n  explained.\n\n  1. `BASH_COMPLETION_USER_DIR`. The subdirectory `completions` of each paths\n     in `BASH_COMPLETION_USER_DIR` separated by colons is considered for a\n     completion directory.\n  2. The location of the main `bash_completion` file. The subdirectory\n     `completions` in the same directory as `bash_completion` is considered.\n  3. The location of the target command.  When the real location of the command\n     is in the directory `<prefix>/bin` or `<prefix>/sbin`, the directory\n     `<prefix>/share/bash-completion/completions` is considered.\n  4. `XDG_DATA_DIRS` (or the system directories `/usr/local/share:/usr/share`\n     if empty).  The subdirectory `bash-completion/completions` of each paths\n     in `XDG_DATA_DIRS` separated by colons is considered.\n\n  The completion files of the name `<cmd>` or `<cmd>.bash`, where `<cmd>` is\n  the name of the target command, are searched in the above completion\n  directories in order.  The file that is found first is used.  When no\n  completion file is found in any completion directories in this process, the\n  completion files of the name `_<cmd>` is next searched in the completion\n  directories in order.\n"
        },
        {
          "name": "bash-completion-config-version.cmake.in",
          "type": "blob",
          "size": 0.2509765625,
          "content": "set (PACKAGE_VERSION \"@VERSION@\")\nif (NOT ${PACKAGE_FIND_VERSION} VERSION_GREATER ${PACKAGE_VERSION})\n  set (PACKAGE_VERSION_COMPATIBLE 1)\n  if (${PACKAGE_FIND_VERSION} VERSION_EQUAL ${PACKAGE_VERSION})\n    set (PACKAGE_VERSION_EXACT 1)\n  endif ()\nendif ()\n"
        },
        {
          "name": "bash-completion-config.cmake.in",
          "type": "blob",
          "size": 0.38671875,
          "content": "# config file for bash-completion\n# https://github.com/scop/bash-completion\n\nset (BASH_COMPLETION_VERSION \"@VERSION@\")\n\nset (BASH_COMPLETION_PREFIX \"@prefix@\")\n\nset (BASH_COMPLETION_COMPATDIR \"@sysconfdir@/bash_completion.d\")\nset (BASH_COMPLETION_COMPLETIONSDIR \"@datadir@/@PACKAGE@/completions\")\nset (BASH_COMPLETION_HELPERSDIR \"@datadir@/@PACKAGE@/helpers\")\n\nset (BASH_COMPLETION_FOUND \"TRUE\")\n"
        },
        {
          "name": "bash-completion.pc.in",
          "type": "blob",
          "size": 0.318359375,
          "content": "prefix=@prefix@\ndatadir=@datadir@\nsysconfdir=@sysconfdir@\n\ncompatdir=${sysconfdir}/bash_completion.d\ncompletionsdir=${datadir}/@PACKAGE@/completions\nhelpersdir=${datadir}/@PACKAGE@/helpers\n\nName: @PACKAGE@\nDescription: programmable completion for the bash shell\nURL: https://github.com/scop/bash-completion\nVersion: @VERSION@\n"
        },
        {
          "name": "bash_completion",
          "type": "blob",
          "size": 123.9443359375,
          "content": "#                                                          -*- shell-script -*-\n#\n#   bash_completion - programmable completion functions for bash 4.2+\n#\n#   Copyright ¬© 2006-2008, Ian Macdonald <ian@caliban.org>\n#             ¬© 2009-2020, Bash Completion Maintainers\n#\n#   This program is free software; you can redistribute it and/or modify\n#   it under the terms of the GNU General Public License as published by\n#   the Free Software Foundation; either version 2, or (at your option)\n#   any later version.\n#\n#   This program is distributed in the hope that it will be useful,\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#   GNU General Public License for more details.\n#\n#   You should have received a copy of the GNU General Public License\n#   along with this program; if not, write to the Free Software Foundation,\n#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n#\n#   The latest version of this software can be obtained here:\n#\n#   https://github.com/scop/bash-completion\n\nBASH_COMPLETION_VERSINFO=(\n    2  # x-release-please-major\n    16 # x-release-please-minor\n    0  # x-release-please-patch\n)\n\nif [[ $- == *v* ]]; then\n    _comp__init_original_set_v=\"-v\"\nelse\n    _comp__init_original_set_v=\"+v\"\nfi\n\nif [[ ${BASH_COMPLETION_DEBUG-} ]]; then\n    set -v\nelse\n    set +v\nfi\n\n# Turn on extended globbing and programmable completion\nshopt -s extglob progcomp\n\n# Declare a compatibility function name\n# @param $1 Version of bash-completion where the deprecation occurred\n# @param $2 Old function name\n# @param $3 New function name\n# @since 2.12\n_comp_deprecate_func()\n{\n    if (($# != 3)); then\n        printf 'bash_completion: %s: usage: %s DEPRECATION_VERSION OLD_NAME NEW_NAME\\n' \"$FUNCNAME\" \"$FUNCNAME\"\n        return 2\n    fi\n    if [[ $2 != [a-zA-Z_]*([a-zA-Z_0-9]) ]]; then\n        printf 'bash_completion: %s: %s\\n' \"$FUNCNAME\" \"\\$2: invalid function name '$1'\" >&2\n        return 2\n    elif [[ $3 != [a-zA-Z_]*([a-zA-Z_0-9]) ]]; then\n        printf 'bash_completion: %s: %s\\n' \"$FUNCNAME\" \"\\$3: invalid function name '$2'\" >&2\n        return 2\n    fi\n    eval -- \"$2() { $3 \\\"\\$@\\\"; }\"\n}\n\n# Declare a compatibility variable name.\n# For bash 4.3+, a real name alias is created, allowing value changes to\n# \"apply through\" when the variables are set later. For bash versions earlier\n# than that, the operation is once-only; the value of the new variable\n# (if it's unset) is set to that of the old (if set) at call time.\n#\n# @param $1 Version of bash-completion where the deprecation occurred\n# @param $2 Old variable name\n# @param $3 New variable name\n# @since 2.12\n_comp_deprecate_var()\n{\n    if (($# != 3)); then\n        printf 'bash_completion: %s: usage: %s DEPRECATION_VERSION OLD_NAME NEW_NAME\\n' \"$FUNCNAME\" \"$FUNCNAME\"\n        return 2\n    fi\n    if [[ $2 != [a-zA-Z_]*([a-zA-Z_0-9]) ]]; then\n        printf 'bash_completion: %s: %s\\n' \"$FUNCNAME\" \"\\$2: invalid variable name '$1'\" >&2\n        return 2\n    elif [[ $3 != [a-zA-Z_]*([a-zA-Z_0-9]) ]]; then\n        printf 'bash_completion: %s: %s\\n' \"$FUNCNAME\" \"\\$3: invalid variable name '$2'\" >&2\n        return 2\n    fi\n    if ((BASH_VERSINFO[0] >= 5 || BASH_VERSINFO[0] == 4 && BASH_VERSINFO[1] >= 3)); then\n        eval \"declare -gn $2=$3\"\n    elif [[ -v $2 && ! -v $3 ]]; then\n        printf -v \"$3\" %s \"$2\"\n    fi\n}\n\n# A lot of the following one-liners were taken directly from the\n# completion examples provided with the bash 2.04 source distribution\n\n# start of section containing compspecs that can be handled within bash\n\n# user commands see only users\ncomplete -u groups slay w sux\n\n# bg completes with stopped jobs\ncomplete -A stopped -P '\"%' -S '\"' bg\n\n# other job commands\ncomplete -j -P '\"%' -S '\"' fg jobs disown\n\n# readonly and unset complete with shell variables\ncomplete -v readonly unset\n\n# shopt completes with shopt options\ncomplete -A shopt shopt\n\n# unalias completes with aliases\ncomplete -a unalias\n\n# type and which complete on commands\ncomplete -c command type which\n\n# builtin completes on builtins\ncomplete -b builtin\n\n# start of section containing completion functions called by other functions\n\n# Check if we're running on the given userland\n# @param $1 userland to check for\n# @since 2.12\n_comp_userland()\n{\n    local userland=$(uname -s)\n    [[ $userland == @(Linux|GNU/*) ]] && userland=GNU\n    [[ $userland == \"$1\" ]]\n}\n\n# This function sets correct SysV init directories\n#\n# @since 2.12\n_comp_sysvdirs()\n{\n    sysvdirs=()\n    [[ -d /etc/rc.d/init.d ]] && sysvdirs+=(/etc/rc.d/init.d)\n    [[ -d /etc/init.d ]] && sysvdirs+=(/etc/init.d)\n    # Slackware uses /etc/rc.d\n    [[ -f /etc/slackware-version ]] && sysvdirs=(/etc/rc.d)\n    ((${#sysvdirs[@]}))\n}\n\n# This function checks whether we have a given program on the system.\n#\n# @since 2.12\n_comp_have_command()\n{\n    # Completions for system administrator commands are installed as well in\n    # case completion is attempted via `sudo command ...'.\n    PATH=$PATH:/usr/sbin:/sbin:/usr/local/sbin type \"$1\" &>/dev/null\n}\n\n# This function checks whether a given readline variable\n# is `on'.\n#\n# @since 2.12\n_comp_readline_variable_on()\n{\n    [[ $(bind -v) == *$1+([[:space:]])on* ]]\n}\n\n# This function shell-quotes the argument\n# @param    $1  String to be quoted\n# @var[out] REPLY Resulting string\n# @since 2.12\n_comp_quote()\n{\n    REPLY=\\'${1//\\'/\\'\\\\\\'\\'}\\'\n}\n\n# shellcheck disable=SC1003\n_comp_dequote__initialize()\n{\n    local regex_param='\\$([_a-zA-Z][_a-zA-Z0-9]*|[-*@#?$!0-9_])|\\$\\{[!#]?([_a-zA-Z][_a-zA-Z0-9]*(\\[([0-9]+|[*@])\\])?|[-*@#?$!0-9_])\\}'\n    local regex_quoted='\\\\.|'\\''[^'\\'']*'\\''|\\$?\"([^\\\"$`!]|'$regex_param'|\\\\.)*\"|\\$'\\''([^\\'\\'']|\\\\.)*'\\'''\n    _comp_dequote__regex_safe_word='^([^\\'\\''\"$`;&|<>()!]|'$regex_quoted'|'$regex_param')*$'\n    unset -f \"$FUNCNAME\"\n}\n_comp_dequote__initialize\n\n# This function expands a word using `eval` in a safe way.  This function can\n# be typically used to get the expanded value of `${word[i]}` as\n# `_comp_dequote \"${word[i]}\"`.  When the word contains unquoted shell special\n# characters, command substitutions, and other unsafe strings, the function\n# call fails before applying `eval`.  Otherwise, `eval` is applied to the\n# string to generate the result.\n#\n# @param    $1  String to be expanded.  A safe word consists of the following\n#               sequence of substrings:\n#\n#               - Shell non-special characters: [^\\'\"$`;&|<>()!].\n#               - Parameter expansions of the forms $PARAM, ${!PARAM},\n#                 ${#PARAM}, ${NAME[INDEX]}, ${!NAME[INDEX]}, ${#NAME[INDEX]}\n#                 where INDEX is an integer, `*` or `@`, NAME is a valid\n#                 variable name [_a-zA-Z][_a-zA-Z0-9]*, and PARAM is NAME or a\n#                 parameter [-*@#?$!0-9_].\n#               - Quotes \\?, '...', \"...\", $'...', and $\"...\".  In the double\n#                 quotations, parameter expansions are allowed.\n#\n# @var[out] REPLY  Array that contains the expanded results.  Multiple words or\n#                  no words may be generated through pathname expansions.\n#\n# Note: This function allows parameter expansions as safe strings, which might\n# cause unexpected results:\n#\n# * This allows execution of arbitrary commands through extra expansions of\n#   array subscripts in name references. For example,\n#\n#     declare -n v='dummy[$(echo xxx >/dev/tty)]'\n#     echo \"$v\"            # This line executes the command 'echo xxx'.\n#     _comp_dequote '\"$v\"' # This line also executes it.\n#\n# * This may change the internal state of the variable that has side effects.\n#   For example, the state of the random number generator of RANDOM can change:\n#\n#     RANDOM=1234               # Set seed\n#     echo \"$RANDOM\"            # This produces 30658.\n#     RANDOM=1234               # Reset seed\n#     _comp_dequote '\"$RANDOM\"' # This line changes the internal state.\n#     echo \"$RANDOM\"            # This fails to reproduce 30658.\n#\n# We allow these parameter expansions as a part of safe strings assuming the\n# referential transparency of the simple parameter expansions and the sane\n# setup of the variables by the user or other frameworks that the user loads.\n# @since 2.12\n_comp_dequote()\n{\n    REPLY=() # fallback value for unsafe word and failglob\n    [[ $1 =~ $_comp_dequote__regex_safe_word ]] || return 1\n    eval \"REPLY=($1)\" 2>/dev/null # may produce failglob\n}\n\n# Unset the given variables across a scope boundary. Useful for unshadowing\n# global scoped variables. Note that simply calling unset on a local variable\n# will not unshadow the global variable. Rather, the result will be a local\n# variable in an unset state.\n# Usage: local IFS='|'; _comp_unlocal IFS\n# @param $* Variable names to be unset\n# @since 2.12\n_comp_unlocal()\n{\n    if ((BASH_VERSINFO[0] >= 5)) && shopt -q localvar_unset; then\n        shopt -u localvar_unset\n        unset -v \"$@\"\n        shopt -s localvar_unset\n    else\n        unset -v \"$@\"\n    fi\n}\n\n# Assign variables one scope above the caller\n# Usage: local varname [varname ...] &&\n#        _comp_upvars [-v varname value] | [-aN varname [value ...]] ...\n# Available OPTIONS:\n#     -aN  Assign next N values to varname as array\n#     -v   Assign single value to varname\n# @return  1 if error occurs\n# @see https://fvue.nl/wiki/Bash:_Passing_variables_by_reference\n# @since 2.12\n_comp_upvars()\n{\n    if ! (($#)); then\n        echo \"bash_completion: $FUNCNAME: usage: $FUNCNAME\" \\\n            \"[-v varname value] | [-aN varname [value ...]] ...\" >&2\n        return 2\n    fi\n    while (($#)); do\n        case $1 in\n            -a*)\n                # Error checking\n                [[ ${1#-a} ]] || {\n                    echo \"bash_completion: $FUNCNAME:\" \\\n                        \"\\`$1': missing number specifier\" >&2\n                    return 1\n                }\n                printf %d \"${1#-a}\" &>/dev/null || {\n                    echo bash_completion: \\\n                        \"$FUNCNAME: \\`$1': invalid number specifier\" >&2\n                    return 1\n                }\n                # Assign array of -aN elements\n                # shellcheck disable=SC2015,SC2140  # TODO\n                [[ $2 ]] && unset -v \"$2\" && eval \"$2\"=\\(\\\"\\$\"{@:3:${1#-a}}\"\\\"\\) &&\n                    shift $((${1#-a} + 2)) || {\n                    echo bash_completion: \\\n                        \"$FUNCNAME: \\`$1${2+ }$2': missing argument(s)\" \\\n                        >&2\n                    return 1\n                }\n                ;;\n            -v)\n                # Assign single value\n                # shellcheck disable=SC2015  # TODO\n                [[ $2 ]] && unset -v \"$2\" && eval \"$2\"=\\\"\\$3\\\" &&\n                    shift 3 || {\n                    echo \"bash_completion: $FUNCNAME: $1:\" \\\n                        \"missing argument(s)\" >&2\n                    return 1\n                }\n                ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: $1: invalid option\" >&2\n                return 1\n                ;;\n        esac\n    done\n}\n\n# Get the list of filenames that match with the specified glob pattern.\n# This function does the globbing in a controlled environment, avoiding\n# interference from user's shell options/settings or environment variables.\n# @param $1 array_name  Array name\n#   The array name should not start with an underscore \"_\", which is internally\n#   used.  The array name should not be \"GLOBIGNORE\" or \"GLOBSORT\".\n# @param $2 pattern     Pattern string to be evaluated.\n#   This pattern string will be evaluated using \"eval\", so brace expansions,\n#   parameter expansions, command substitutions, and other expansions will be\n#   processed.  The user-provided strings should not be directly specified to\n#   this argument.\n# @return 0 if at least one path is generated, 1 if no path is generated, or 2\n#   if the usage is incorrect.\n# @since 2.12\n_comp_expand_glob()\n{\n    if (($# != 2)); then\n        printf 'bash-completion: %s: unexpected number of arguments\\n' \"$FUNCNAME\" >&2\n        printf 'usage: %s ARRAY_NAME PATTERN\\n' \"$FUNCNAME\" >&2\n        return 2\n    elif [[ $1 == @(GLOBIGNORE|GLOBSORT|_*|*[^_a-zA-Z0-9]*|[0-9]*|'') ]]; then\n        printf 'bash-completion: %s: invalid array name \"%s\"\\n' \"$FUNCNAME\" \"$1\" >&2\n        return 2\n    fi\n\n    # Save and adjust the settings.\n    local _original_opts=$SHELLOPTS:$BASHOPTS\n    set +o noglob\n    shopt -s nullglob\n    shopt -u failglob dotglob\n\n    # Also the user's GLOBIGNORE and GLOBSORT (bash >= 5.3) may affect the\n    # result of pathname expansions.\n    local GLOBIGNORE=\"\" GLOBSORT=name\n\n    # To canonicalize the sorting order of the generated paths, we set\n    # LC_COLLATE=C and unset LC_ALL while preserving LC_CTYPE.\n    local LC_COLLATE=C LC_CTYPE=${LC_ALL:-${LC_CTYPE:-${LANG-}}} LC_ALL=\n\n    eval -- \"$1=()\" # a fallback in case that the next line fails.\n    eval -- \"$1=($2)\"\n\n    # Restore the settings.  Note: Changing GLOBIGNORE affects the state of\n    # \"shopt -q dotglob\", so we need to explicitly restore the original state\n    # of \"shopt -q dotglob\".\n    _comp_unlocal GLOBIGNORE\n    if [[ :$_original_opts: == *:dotglob:* ]]; then\n        shopt -s dotglob\n    else\n        shopt -u dotglob\n    fi\n    [[ :$_original_opts: == *:nullglob:* ]] || shopt -u nullglob\n    [[ :$_original_opts: == *:failglob:* ]] && shopt -s failglob\n    [[ :$_original_opts: == *:noglob:* ]] && set -o noglob\n    eval \"((\\${#$1[@]}))\"\n}\n\n# Split a string and assign to an array.  This function basically performs\n# `IFS=<sep>; <array_name>=(<text>)` but properly handles saving/restoring the\n# state of `IFS` and the shell option `noglob`.  A naive splitting by\n# `arr=(...)` suffers from unexpected IFS and pathname expansions, so one\n# should prefer this function to such naive splitting.\n# OPTIONS\n#   -a      Append to the array\n#   -F sep  Set a set of separator characters (used as IFS).  The default\n#           separator is $' \\t\\n'\n#   -l      The same as -F $'\\n'\n# @param $1 array_name  The array name\n#   The array name should not start with an underscores \"_\", which is\n#   internally used.  The array name should not be either \"IFS\" or\n#   \"OPT{IND,ARG,ERR}\".\n# @param $2 text        The string to split\n# @return 2 when the usage is wrong, 0 when one or more completions are\n#   generated, or 1 when the execution succeeds but no candidates are\n#   generated.\n# @since 2.12\n_comp_split()\n{\n    local _append=\"\" IFS=$' \\t\\n'\n\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 _opt\n    while getopts ':alF:' _opt \"$@\"; do\n        case $_opt in\n            a) _append=set ;;\n            l) IFS=$'\\n' ;;\n            F) IFS=$OPTARG ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 2\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n    if (($# != 2)); then\n        printf '%s\\n' \"bash_completion: $FUNCNAME: unexpected number of arguments\" >&2\n        printf '%s\\n' \"usage: $FUNCNAME [-al] [-F SEP] ARRAY_NAME TEXT\" >&2\n        return 2\n    elif [[ $1 == @(*[^_a-zA-Z0-9]*|[0-9]*|''|_*|IFS|OPTIND|OPTARG|OPTERR) ]]; then\n        printf '%s\\n' \"bash_completion: $FUNCNAME: invalid array name '$1'\" >&2\n        return 2\n    fi\n\n    local _original_opts=$SHELLOPTS\n    set -o noglob\n\n    local _old_size _new_size\n    if [[ $_append ]]; then\n        eval \"$1+=()\" # in case $1 is unset\n        eval \"_old_size=\\${#$1[@]}\"\n        eval \"$1+=(\\$2)\"\n    else\n        _old_size=0\n        eval \"$1=(\\$2)\"\n    fi\n    eval \"_new_size=\\${#$1[@]}\"\n\n    [[ :$_original_opts: == *:noglob:* ]] || set +o noglob\n    ((_new_size > _old_size))\n}\n\n# Helper function for _comp_compgen\n# @var[in] $?\n# @var[in] _var\n# @var[in] _append\n# @return original $?\n_comp_compgen__error_fallback()\n{\n    local _status=$?\n    if [[ $_append ]]; then\n        # make sure existence of variable\n        eval -- \"$_var+=()\"\n    else\n        eval -- \"$_var=()\"\n    fi\n    return \"$_status\"\n}\n\n# Provide a common interface to generate completion candidates in COMPREPLY or\n# in a specified array.\n# OPTIONS\n#   -a      Append to the array\n#   -v arr  Store the results to the array ARR. The default is `COMPREPLY`.\n#           The array name should not start with an underscores \"_\", which is\n#           internally used.  The array name should not be any of \"cur\", \"IFS\"\n#           or \"OPT{IND,ARG,ERR}\".\n#   -U var  Unlocalize VAR before performing the assignments.  This option can\n#           be specified multiple times to register multiple variables.  This\n#           option is supposed to be used in implementing a generator (G1) when\n#           G1 defines a local variable name that does not start with `_`.  In\n#           such a case, when the target variable specified to G1 by `-v VAR1`\n#           conflicts with the local variable, the assignment to the target\n#           variable fails to propagate outside G1.  To avoid such a situation,\n#           G1 can call `_comp_compgen` with `-U VAR` to unlocalize `VAR`\n#           before accessing the target variable.  For a builtin compgen call\n#           (i.e., _comp_compgen [options] -- options), VAR is unlocalized\n#           after calling the builtin `compgen` but before assigning results to\n#           the target array.  For a generator call (i.e., _comp_compgen\n#           [options] G2 ...), VAR is unlocalized before calling the child\n#           generator function `_comp_compgen_G2`.\n#   -c cur  Set a word used as a prefix to filter the completions.  The default\n#           is ${cur-}.\n#   -R      The same as -c ''.  Use raw outputs without filtering.\n#   -C dir  Evaluate compgen/generator in the specified directory.\n# @var[in,opt] cur  Used as the default value of a prefix to filter the\n#   completions.\n#\n# Usage #1: _comp_compgen [-alR|-F sep|-v arr|-c cur|-C dir] -- options...\n# Call `compgen` with the specified arguments and store the results in the\n# specified array.  This function essentially performs arr=($(compgen args...))\n# but properly handles shell options, IFS, etc. using _comp_split.  This\n# function is equivalent to `_comp_split [-a] -l arr \"$(IFS=sep; compgen\n# args... -- cur)\"`, but this pattern is frequent in the codebase and is good\n# to separate out as a function for the possible future implementation change.\n# OPTIONS\n#   -F sep  Set a set of separator characters (used as IFS in evaluating\n#           `compgen').  The default separator is $' \\t\\n'.  Note that this is\n#           not the set of separators to delimit output of `compgen', but the\n#           separators in evaluating the expansions of `-W '...'`, etc.  The\n#           delimiter of the output of `compgen` is always a newline.\n#   -l      The same as -F $'\\n'.  Use lines as words in evaluating compgen.\n# @param $1... options  Arguments that are passed to compgen (if $1 starts with\n#   a hyphen `-`).\n#\n#   Note: References to positional parameters $1, $2, ... (such as -W '$1')\n#   will not work as expected because these reference the arguments of\n#   `_comp_compgen' instead of those of the caller function.  When there are\n#   needs to reference them, save the arguments to an array and reference the\n#   array instead.\n#\n#   Note: The array option `-V arr` in bash >= 5.3 should be instead specified\n#   as `-v arr` as a part of the `_comp_compgen` options.\n# @return  True (0) if at least one completion is generated, False (1) if no\n#   completion is generated, or 2 with an incorrect usage.\n#\n# Usage #2: _comp_compgen [-aR|-v arr|-c cur|-C dir|-i cmd|-x cmd] name args...\n# Call the generator `_comp_compgen_NAME ARGS...` with the specified options.\n# This provides a common interface to call the functions `_comp_compgen_NAME`,\n# which produce completion candidates, with custom options [-alR|-v arr|-c\n# cur].  The option `-F sep` is not used with this usage.\n# OPTIONS\n#   -x cmd  Call exported generator `_comp_xfunc_CMD_compgen_NAME`\n#   -i cmd  Call internal generator `_comp_cmd_CMD__compgen_NAME`\n# @param $1... name args  Calls the function _comp_compgen_NAME with the\n#   specified ARGS (if $1 does not start with a hyphen `-`).  The options\n#   [-alR|-v arr|-c cur] are inherited by the child calls of `_comp_compgen`\n#   inside `_comp_compgen_NAME` unless the child call `_comp_compgen` receives\n#   overriding options.\n# @var[in,opt,internal] _comp_compgen__append\n# @var[in,opt,internal] _comp_compgen__var\n# @var[in,opt,internal] _comp_compgen__cur\n#   These variables are internally used to pass the effect of the options\n#   [-alR|-v arr|-c cur] to the child calls of `_comp_compgen` in\n#   `_comp_compgen_NAME`.\n# @return   Exit status of the generator.\n#\n# @remarks When no options are supplied to _comp_compgen, `_comp_compgen NAME\n# args` is equivalent to the direct call `_comp_compgen_NAME args`.  As the\n# direct call is slightly more efficient, the direct call is preferred over\n# calling it through `_comp_compgen`.\n#\n# @remarks Design `_comp_compgen_NAME`: a function that produce completions can\n# be defined with the name _comp_compgen_NAME.  The function is supposed to\n# generate completions by calling `_comp_compgen`.  To reflect the options\n# specified to the outer calls of `_comp_compgen`, the function should not\n# directly modify `COMPREPLY`.  To add words, one can call\n#\n#     _comp_compgen -- -W '\"${words[@]}\"'\n#\n# To directly add words without filtering by `cur`, one can call\n#\n#     _comp_compgen -R -- -W '\"${words[@]}\"'\n#\n# or use the utility `_comp_compgen_set`:\n#\n#     _comp_compgen_set \"${words[@]}\"\n#\n# Other nested calls of _comp_compgen can also be used.  The function is\n# supposed to replace the existing content of the array by default to allow the\n# caller control whether to replace or append by the option `-a`.\n#\n# @since 2.12\n_comp_compgen()\n{\n    local _append=\n    local _var=\n    local _cur=${_comp_compgen__cur-${cur-}}\n    local _dir=\"\"\n    local _ifs=$' \\t\\n' _has_ifs=\"\"\n    local _icmd=\"\" _xcmd=\"\"\n    local -a _upvars=()\n\n    local _old_nocasematch=\"\"\n    if shopt -q nocasematch; then\n        _old_nocasematch=set\n        shopt -u nocasematch\n    fi\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 _opt\n    while getopts ':av:U:Rc:C:lF:i:x:' _opt \"$@\"; do\n        case $_opt in\n            a) _append=set ;;\n            v)\n                if [[ $OPTARG == @(*[^_a-zA-Z0-9]*|[0-9]*|''|_*|IFS|OPTIND|OPTARG|OPTERR|cur) ]]; then\n                    printf 'bash_completion: %s: -v: invalid array name `%s'\\''\\n' \"$FUNCNAME\" \"$OPTARG\" >&2\n                    return 2\n                fi\n                _var=$OPTARG\n                ;;\n            U)\n                if [[ $OPTARG == @(*[^_a-zA-Z0-9]*|[0-9]*|'') ]]; then\n                    printf 'bash_completion: %s: -U: invalid variable name `%s'\\''\\n' \"$FUNCNAME\" \"$OPTARG\" >&2\n                    return 2\n                elif [[ $OPTARG == @(_*|IFS|OPTIND|OPTARG|OPTERR|cur) ]]; then\n                    printf 'bash_completion: %s: -U: unnecessary to mark `%s'\\'' as upvar\\n' \"$FUNCNAME\" \"$OPTARG\" >&2\n                    return 2\n                fi\n                _upvars+=(\"$OPTARG\")\n                ;;\n            c) _cur=$OPTARG ;;\n            R) _cur=\"\" ;;\n            C)\n                if [[ ! $OPTARG ]]; then\n                    printf 'bash_completion: %s: -C: invalid directory name `%s'\\''\\n' \"$FUNCNAME\" \"$OPTARG\" >&2\n                    return 2\n                fi\n                _dir=$OPTARG\n                ;;\n            l) _has_ifs=set _ifs=$'\\n' ;;\n            F) _has_ifs=set _ifs=$OPTARG ;;\n            [ix])\n                if [[ ! $OPTARG ]]; then\n                    printf 'bash_completion: %s: -%s: invalid command name `%s'\\''\\n' \"$FUNCNAME\" \"$_opt\" \"$OPTARG\" >&2\n                    return 2\n                elif [[ $_icmd ]]; then\n                    printf 'bash_completion: %s: -%s: `-i %s'\\'' is already specified\\n' \"$FUNCNAME\" \"$_opt\" \"$_icmd\" >&2\n                    return 2\n                elif [[ $_xcmd ]]; then\n                    printf 'bash_completion: %s: -%s: `-x %s'\\'' is already specified\\n' \"$FUNCNAME\" \"$_opt\" \"$_xcmd\" >&2\n                    return 2\n                fi\n                ;;&\n            i) _icmd=$OPTARG ;;\n            x) _xcmd=$OPTARG ;;\n            *)\n                printf 'bash_completion: %s: usage error\\n' \"$FUNCNAME\" >&2\n                return 2\n                ;;\n        esac\n    done\n    [[ $_old_nocasematch ]] && shopt -s nocasematch\n    shift \"$((OPTIND - 1))\"\n    if (($# == 0)); then\n        printf 'bash_completion: %s: unexpected number of arguments\\n' \"$FUNCNAME\" >&2\n        printf 'usage: %s [-alR|-F SEP|-v ARR|-c CUR] -- ARGS...' \"$FUNCNAME\" >&2\n        return 2\n    fi\n    if [[ ! $_var ]]; then\n        # Inherit _append and _var only when -v var is unspecified.\n        _var=${_comp_compgen__var-COMPREPLY}\n        [[ $_append ]] || _append=${_comp_compgen__append-}\n    fi\n\n    if [[ $1 != -* ]]; then\n        # usage: _comp_compgen [options] NAME args\n        if [[ $_has_ifs ]]; then\n            printf 'bash_completion: %s: `-l'\\'' and `-F sep'\\'' are not supported for generators\\n' \"$FUNCNAME\" >&2\n            return 2\n        fi\n\n        local -a _generator\n        if [[ $_icmd ]]; then\n            _generator=(\"_comp_cmd_${_icmd//[^a-zA-Z0-9_]/_}__compgen_$1\")\n        elif [[ $_xcmd ]]; then\n            _generator=(_comp_xfunc \"$_xcmd\" \"compgen_$1\")\n        else\n            _generator=(\"_comp_compgen_$1\")\n        fi\n        if ! declare -F -- \"${_generator[0]}\" &>/dev/null; then\n            printf 'bash_completion: %s: unrecognized generator `%s'\\'' (function %s not found)\\n' \"$FUNCNAME\" \"$1\" \"${_generator[0]}\" >&2\n            return 2\n        fi\n        shift\n\n        _comp_compgen__call_generator \"$@\"\n    else\n        # usage: _comp_compgen [options] -- [compgen_options]\n        if [[ $_icmd || $_xcmd ]]; then\n            printf 'bash_completion: %s: generator name is unspecified for `%s'\\''\\n' \"$FUNCNAME\" \"${_icmd:+-i $_icmd}${_xcmd:+x $_xcmd}\" >&2\n            return 2\n        fi\n\n        # Note: $* in the below checks would be affected by uncontrolled IFS in\n        # bash >= 5.0, so we need to set IFS to the normal value.  The behavior\n        # in bash < 5.0, where unquoted $* in conditional command did not honor\n        # IFS, was a bug.\n        # Note: Also, ${_cur:+-- \"$_cur\"} and ${_append:+-a} would be affected\n        # by uncontrolled IFS.\n        local IFS=$' \\t\\n'\n        # Note: extglob *\\$?(\\{)[0-9]* can be extremely slow when the string\n        # \"${*:2:_nopt}\" becomes longer, so we test \\$[0-9] and \\$\\{[0-9]\n        # separately.\n        if [[ $* == *\\$[0-9]* || $* == *\\$\\{[0-9]* ]]; then\n            printf 'bash_completion: %s: positional parameter $1, $2, ... do not work inside this function\\n' \"$FUNCNAME\" >&2\n            return 2\n        fi\n\n        _comp_compgen__call_builtin \"$@\"\n    fi\n}\n\n# Helper function for _comp_compgen.  This function calls a generator.\n# @param $1... generator_args\n# @var[in] _dir\n# @var[in] _cur\n# @arr[in] _generator\n# @arr[in] _upvars\n# @var[in] _append\n# @var[in] _var\n_comp_compgen__call_generator()\n{\n    ((${#_upvars[@]})) && _comp_unlocal \"${_upvars[@]}\"\n\n    if [[ $_dir ]]; then\n        local _original_pwd=$PWD\n        local PWD=${PWD-} OLDPWD=${OLDPWD-}\n        # Note: We also redirect stdout because `cd` may output the target\n        # directory to stdout when CDPATH is set.\n        command cd -- \"$_dir\" &>/dev/null ||\n            {\n                _comp_compgen__error_fallback\n                return\n            }\n    fi\n\n    local _comp_compgen__append=$_append\n    local _comp_compgen__var=$_var\n    local _comp_compgen__cur=$_cur cur=$_cur\n    # Note: we use $1 as a part of a function name, and we use $2... as\n    # arguments to the function if any.\n    # shellcheck disable=SC2145\n    \"${_generator[@]}\" \"$@\"\n    local _status=$?\n\n    # Go back to the original directory.\n    # Note: Failure of this line results in the change of the current\n    # directory visible to the user.  We intentionally do not redirect\n    # stderr so that the error message appear in the terminal.\n    # shellcheck disable=SC2164\n    [[ $_dir ]] && command cd -- \"$_original_pwd\"\n\n    return \"$_status\"\n}\n\n# Helper function for _comp_compgen.  This function calls the builtin compgen.\n# @param $1... compgen_args\n# @var[in] _dir\n# @var[in] _ifs\n# @var[in] _cur\n# @arr[in] _upvars\n# @var[in] _append\n# @var[in] _var\nif ((BASH_VERSINFO[0] > 5 || BASH_VERSINFO[0] == 5 && BASH_VERSINFO[1] >= 3)); then\n    # bash >= 5.3 has `compgen -V array_name`\n    _comp_compgen__call_builtin()\n    {\n        if [[ $_dir ]]; then\n            local _original_pwd=$PWD\n            local PWD=${PWD-} OLDPWD=${OLDPWD-}\n            # Note: We also redirect stdout because `cd` may output the target\n            # directory to stdout when CDPATH is set.\n            command cd -- \"$_dir\" &>/dev/null || {\n                _comp_compgen__error_fallback\n                return\n            }\n        fi\n\n        local -a _result=()\n\n        # Note: We specify -X '' to exclude empty completions to make the\n        # behavior consistent with the implementation for Bash < 5.3 where\n        # `_comp_split -l` removes empty lines.  If the caller specifies -X\n        # pat, the effect of -X '' is overwritten by the specified one.\n        IFS=$_ifs compgen -V _result -X '' \"$@\" ${_cur:+-- \"$_cur\"} || {\n            _comp_compgen__error_fallback\n            return\n        }\n\n        # Go back to the original directory.\n        # Note: Failure of this line results in the change of the current\n        # directory visible to the user.  We intentionally do not redirect\n        # stderr so that the error message appear in the terminal.\n        # shellcheck disable=SC2164\n        [[ $_dir ]] && command cd -- \"$_original_pwd\"\n\n        ((${#_upvars[@]})) && _comp_unlocal \"${_upvars[@]}\"\n        ((${#_result[@]})) || return\n        if [[ $_append ]]; then\n            eval -- \"$_var+=(\\\"\\${_result[@]}\\\")\"\n        else\n            eval -- \"$_var=(\\\"\\${_result[@]}\\\")\"\n        fi\n        return\n    }\nelse\n    _comp_compgen__call_builtin()\n    {\n        local _result\n        _result=$(\n            if [[ $_dir ]]; then\n                # Note: We also redirect stdout because `cd` may output the target\n                # directory to stdout when CDPATH is set.\n                command cd -- \"$_dir\" &>/dev/null || return\n            fi\n            IFS=$_ifs compgen \"$@\" ${_cur:+-- \"$_cur\"}\n        ) || {\n            _comp_compgen__error_fallback\n            return\n        }\n\n        ((${#_upvars[@]})) && _comp_unlocal \"${_upvars[@]}\"\n        _comp_split -l ${_append:+-a} \"$_var\" \"$_result\"\n    }\nfi\n\n# usage: _comp_compgen_set [words...]\n# Reset COMPREPLY with the specified WORDS.  If no arguments are specified, the\n# array is cleared.\n#\n# When an array name is specified by `-v VAR` in a caller _comp_compgen, the\n# array is reset instead of COMPREPLY.  When the `-a` flag is specified in a\n# caller _comp_compgen, the words are appended to the existing elements of the\n# array instead of replacing the existing elements.  This function ignores\n# ${cur-} or the prefix specified by `-v CUR`.\n# @return 0 if at least one completion is generated, or 1 otherwise.\n# @since 2.12\n_comp_compgen_set()\n{\n    local _append=${_comp_compgen__append-}\n    local _var=${_comp_compgen__var-COMPREPLY}\n    eval -- \"$_var${_append:++}=(\\\"\\$@\\\")\"\n    (($#))\n}\n\n# Simply split the text and generate completions.  This function should be used\n# instead of `_comp_compgen -- -W \"$(command)\"`, which is vulnerable because\n# option -W evaluates the shell expansions included in the option argument.\n# Options:\n#   -F sep  Specify the separators. The default is $' \\t\\n'\n#   -l      The same as -F $'\\n'\n#   -X arg  The same as the compgen option -X.\n#   -S arg  The same as the compgen option -S.\n#   -P arg  The same as the compgen option -P.\n#   -o arg  The same as the compgen option -o.\n# @param $1 String to split\n# @return 0 if at least one completion is generated, or 1 otherwise.\n# @since 2.12\n_comp_compgen_split()\n{\n    local _ifs=$' \\t\\n'\n    local -a _compgen_options=()\n\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 _opt\n    while getopts ':lF:X:S:P:o:' _opt \"$@\"; do\n        case $_opt in\n            l) _ifs=$'\\n' ;;\n            F) _ifs=$OPTARG ;;\n            [XSPo]) _compgen_options+=(\"-$_opt\" \"$OPTARG\") ;;\n            *)\n                printf 'bash_completion: usage: %s [-l|-F sep] [--] str\\n' \"$FUNCNAME\" >&2\n                return 2\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n    if (($# != 1)); then\n        printf 'bash_completion: %s: unexpected number of arguments.\\n' \"$FUNCNAME\" >&2\n        printf 'usage: %s [-l|-F sep] [--] str' \"$FUNCNAME\" >&2\n        return 2\n    fi\n\n    local input=$1 IFS=$' \\t\\n'\n    _comp_compgen -F \"$_ifs\" -U input -- ${_compgen_options[@]+\"${_compgen_options[@]}\"} -W '$input'\n}\n\n# Check if the argument looks like a path.\n# @param $1 thing to check\n# @return True (0) if it does, False (> 0) otherwise\n# @since 2.12\n_comp_looks_like_path()\n{\n    [[ ${1-} == @(*/|[.~])* ]]\n}\n\n# Reassemble command line words, excluding specified characters from the\n# list of word completion separators (COMP_WORDBREAKS).\n# @param $1 chars  Characters out of $COMP_WORDBREAKS which should\n#     NOT be considered word breaks. This is useful for things like scp where\n#     we want to return host:path and not only path, so we would pass the\n#     colon (:) as $1 here.\n# @param $2 words  Name of variable to return words to\n# @param $3 cword  Name of variable to return cword to\n#\n_comp__reassemble_words()\n{\n    local exclude=\"\" i j line ref\n    # Exclude word separator characters?\n    if [[ $1 ]]; then\n        # Yes, exclude word separator characters;\n        # Exclude only those characters, which were really included\n        exclude=\"[${1//[^$COMP_WORDBREAKS]/}]\"\n    fi\n\n    # Default to cword unchanged\n    printf -v \"$3\" %s \"$COMP_CWORD\"\n    # Are characters excluded which were former included?\n    if [[ $exclude ]]; then\n        # Yes, list of word completion separators has shrunk;\n        line=$COMP_LINE\n        # Re-assemble words to complete\n        for ((i = 0, j = 0; i < ${#COMP_WORDS[@]}; i++, j++)); do\n            # Is current word not word 0 (the command itself) and is word not\n            # empty and is word made up of just word separator characters to\n            # be excluded and is current word not preceded by whitespace in\n            # original line?\n            while [[ $i -gt 0 && ${COMP_WORDS[i]} == +($exclude) ]]; do\n                # Is word separator not preceded by whitespace in original line\n                # and are we not going to append to word 0 (the command\n                # itself), then append to current word.\n                [[ $line != [[:blank:]]* ]] && ((j >= 2)) && ((j--))\n                # Append word separator to current or new word\n                ref=\"$2[$j]\"\n                printf -v \"$ref\" %s \"${!ref-}${COMP_WORDS[i]}\"\n                # Indicate new cword\n                ((i == COMP_CWORD)) && printf -v \"$3\" %s \"$j\"\n                # Remove optional whitespace + word separator from line copy\n                line=${line#*\"${COMP_WORDS[i]}\"}\n                # Indicate next word if available, else end *both* while and\n                # for loop\n                if ((i < ${#COMP_WORDS[@]} - 1)); then\n                    ((i++))\n                else\n                    break 2\n                fi\n                # Start new word if word separator in original line is\n                # followed by whitespace.\n                [[ $line == [[:blank:]]* ]] && ((j++))\n            done\n            # Append word to current word\n            ref=\"$2[$j]\"\n            printf -v \"$ref\" %s \"${!ref-}${COMP_WORDS[i]}\"\n            # Remove optional whitespace + word from line copy\n            line=${line#*\"${COMP_WORDS[i]}\"}\n            # Indicate new cword\n            ((i == COMP_CWORD)) && printf -v \"$3\" %s \"$j\"\n        done\n        ((i == COMP_CWORD)) && printf -v \"$3\" %s \"$j\"\n    else\n        # No, list of word completions separators hasn't changed;\n        for i in \"${!COMP_WORDS[@]}\"; do\n            printf -v \"$2[i]\" %s \"${COMP_WORDS[i]}\"\n        done\n    fi\n}\n\n# @param $1 exclude  Characters out of $COMP_WORDBREAKS which should NOT be\n#     considered word breaks. This is useful for things like scp where\n#     we want to return host:path and not only path, so we would pass the\n#     colon (:) as $1 in this case.\n# @param $2 words  Name of variable to return words to\n# @param $3 cword  Name of variable to return cword to\n# @param $4 cur  Name of variable to return current word to complete to\n# @see _comp__reassemble_words()\n_comp__get_cword_at_cursor()\n{\n    local cword words=()\n    _comp__reassemble_words \"$1\" words cword\n\n    local i cur=\"\" index=$COMP_POINT lead=${COMP_LINE:0:COMP_POINT}\n    # Cursor not at position 0 and not led by just space(s)?\n    if [[ $index -gt 0 && ($lead && ${lead//[[:space:]]/}) ]]; then\n        cur=$COMP_LINE\n        for ((i = 0; i <= cword; ++i)); do\n            # Current word fits in $cur, and $cur doesn't match cword?\n            while [[ ${#cur} -ge ${#words[i]} &&\n                ${cur:0:${#words[i]}} != \"${words[i]-}\" ]]; do\n                # Strip first character\n                cur=${cur:1}\n                # Decrease cursor position, staying >= 0\n                ((index > 0)) && ((index--))\n            done\n\n            # Does found word match cword?\n            if ((i < cword)); then\n                # No, cword lies further;\n                local old_size=${#cur}\n                cur=${cur#\"${words[i]}\"}\n                local new_size=${#cur}\n                ((index -= old_size - new_size))\n            fi\n        done\n        # Clear $cur if just space(s)\n        [[ $cur && ! ${cur//[[:space:]]/} ]] && cur=\n        # Zero $index if negative\n        ((index < 0)) && index=0\n    fi\n\n    local IFS=$' \\t\\n'\n    local \"$2\" \"$3\" \"$4\" && _comp_upvars -a\"${#words[@]}\" \"$2\" ${words[@]+\"${words[@]}\"} \\\n        -v \"$3\" \"$cword\" -v \"$4\" \"${cur:0:index}\"\n}\n\n# Get the word to complete and optional previous words.\n# This is nicer than ${COMP_WORDS[COMP_CWORD]}, since it handles cases\n# where the user is completing in the middle of a word.\n# (For example, if the line is \"ls foobar\",\n# and the cursor is here -------->   ^\n# Also one is able to cross over possible wordbreak characters.\n# Usage: _comp_get_words [OPTIONS] [VARNAMES]\n# Available VARNAMES:\n#     cur         Return cur via $cur\n#     prev        Return prev via $prev\n#     words       Return words via $words\n#     cword       Return cword via $cword\n#\n# Available OPTIONS:\n#     -n EXCLUDE  Characters out of $COMP_WORDBREAKS which should NOT be\n#                 considered word breaks. This is useful for things like scp\n#                 where we want to return host:path and not only path, so we\n#                 would pass the colon (:) as -n option in this case.\n#     -c VARNAME  Return cur via $VARNAME\n#     -p VARNAME  Return prev via $VARNAME\n#     -w VARNAME  Return words via $VARNAME\n#     -i VARNAME  Return cword via $VARNAME\n#\n# Example usage:\n#\n#    $ _comp_get_words -n : cur prev\n#\n# @since 2.12\n_comp_get_words()\n{\n    local exclude=\"\" flag i OPTIND=1\n    local cur cword words=()\n    local upargs=() upvars=() vcur=\"\" vcword=\"\" vprev=\"\" vwords=\"\"\n\n    while getopts \"c:i:n:p:w:\" flag \"$@\"; do\n        case $flag in\n            [cipw])\n                if [[ $OPTARG != [a-zA-Z_]*([a-zA-Z_0-9])?(\\[*\\]) ]]; then\n                    echo \"bash_completion: $FUNCNAME: -$flag: invalid variable name \\`$OPTARG'\" >&2\n                    return 1\n                fi\n                ;;&\n            c) vcur=$OPTARG ;;\n            i) vcword=$OPTARG ;;\n            n) exclude=$OPTARG ;;\n            p) vprev=$OPTARG ;;\n            w) vwords=$OPTARG ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 1\n                ;;\n        esac\n    done\n    while [[ $# -ge $OPTIND ]]; do\n        case ${!OPTIND} in\n            cur) vcur=cur ;;\n            prev) vprev=prev ;;\n            cword) vcword=cword ;;\n            words) vwords=words ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: \\`${!OPTIND}':\" \\\n                    \"unknown argument\" >&2\n                return 1\n                ;;\n        esac\n        ((OPTIND += 1))\n    done\n\n    _comp__get_cword_at_cursor \"${exclude-}\" words cword cur\n\n    [[ $vcur ]] && {\n        upvars+=(\"$vcur\")\n        upargs+=(-v \"$vcur\" \"$cur\")\n    }\n    [[ $vcword ]] && {\n        upvars+=(\"$vcword\")\n        upargs+=(-v \"$vcword\" \"$cword\")\n    }\n    [[ $vprev ]] && {\n        local value=\"\"\n        ((cword >= 1)) && value=${words[cword - 1]}\n        upvars+=(\"$vprev\")\n        upargs+=(-v \"$vprev\" \"$value\")\n    }\n    [[ $vwords ]] && {\n        # Note: bash < 4.4 has a bug that all the elements are connected with\n        # ${v+\"$@\"} when IFS does not contain whitespace.\n        local IFS=$' \\t\\n'\n        upvars+=(\"$vwords\")\n        upargs+=(-a\"${#words[@]}\" \"$vwords\" ${words+\"${words[@]}\"})\n    }\n\n    ((${#upvars[@]})) && local \"${upvars[@]}\" && _comp_upvars \"${upargs[@]}\"\n}\n\n# Generate the specified items after left-trimming with the word-to-complete\n# containing a colon (:).  If the word-to-complete does not contain a colon,\n# this generates the specified items without modifications.\n# @param $@     items to generate\n# @var[in] cur  current word to complete\n#\n# @remarks In Bash, with a colon in COMP_WORDBREAKS, words containing colons\n# are always completed as entire words if the word to complete contains a\n# colon.  This function fixes this behavior by removing the\n# colon-containing-prefix from the items.\n#\n# The preferred solution is to remove the colon (:) from COMP_WORDBREAKS in\n# your .bashrc:\n#\n#    # Remove colon (:) from list of word completion separators\n#    COMP_WORDBREAKS=${COMP_WORDBREAKS//:}\n#\n# See also: Bash FAQ - E13) Why does filename completion misbehave if a colon\n# appears in the filename? - https://tiswww.case.edu/php/chet/bash/FAQ\n#\n# @since 2.12\n_comp_compgen_ltrim_colon()\n{\n    (($#)) || return 0\n    local -a _tmp\n    _tmp=(\"$@\")\n    if [[ $cur == *:* && $COMP_WORDBREAKS == *:* ]]; then\n        # Remove colon-word prefix from items\n        local _colon_word=${cur%\"${cur##*:}\"}\n        _tmp=(\"${_tmp[@]#\"$_colon_word\"}\")\n    fi\n    _comp_compgen_set \"${_tmp[@]}\"\n}\n\n# If the word-to-complete contains a colon (:), left-trim COMPREPLY items with\n# word-to-complete.\n#\n# @param $1 current word to complete (cur)\n# @var[in,out] COMPREPLY\n#\n# @since 2.12\n_comp_ltrim_colon_completions()\n{\n    ((${#COMPREPLY[@]})) || return 0\n    _comp_compgen -c \"$1\" ltrim_colon \"${COMPREPLY[@]}\"\n}\n\n# This function quotes the argument in a way so that readline dequoting\n# results in the original argument.  This is necessary for at least\n# `compgen` which requires its arguments quoted/escaped:\n#\n#     $ ls \"a'b/\"\n#     c\n#     $ compgen -f \"a'b/\"       # Wrong, doesn't return output\n#     $ compgen -f \"a\\'b/\"      # Good\n#     a\\'b/c\n#\n# See also:\n# - https://lists.gnu.org/archive/html/bug-bash/2009-03/msg00155.html\n# - https://www.mail-archive.com/bash-completion-devel@lists.alioth.debian.org/msg01944.html\n# @param $1      Argument to quote\n# @var[out] REPLY  Quoted result is stored in this variable\n# @since 2.12\n# shellcheck disable=SC2178 # The assignment is not intended for the global \"REPLY\"\n_comp_quote_compgen()\n{\n    if [[ $1 == \\'* ]]; then\n        # Leave out first character\n        REPLY=${1:1}\n    else\n        printf -v REPLY %q \"$1\"\n\n        # If result becomes quoted like this: $'string', re-evaluate in order\n        # to drop the additional quoting.  See also:\n        # https://www.mail-archive.com/bash-completion-devel@lists.alioth.debian.org/msg01942.html\n        if [[ $REPLY == \\$\\'*\\' ]]; then\n            local value=${REPLY:2:-1} # Strip beginning $' and ending '.\n            value=${value//'%'/%%}    # Escape % for printf format.\n            # shellcheck disable=SC2059\n            printf -v REPLY \"$value\" # Decode escape sequences of \\....\n        fi\n    fi\n}\n\n# This function performs file and directory completion. It's better than\n# simply using 'compgen -f', because it honours spaces in filenames.\n# @param $1  If `-d', complete only on directories.  Otherwise filter/pick only\n#            completions with `.$1' and the uppercase version of it as file\n#            extension.\n# @return 0 if at least one completion is generated, or 1 otherwise.\n#\n# @since 2.12\n_comp_compgen_filedir()\n{\n    _comp_compgen_tilde && return\n\n    local -a toks\n    local _arg=${1-}\n\n    if [[ $_arg == -d ]]; then\n        _comp_compgen -v toks -- -d\n    else\n        local REPLY\n        _comp_quote_compgen \"${cur-}\"\n        local _quoted=$REPLY\n        _comp_unlocal REPLY\n\n        # work around bash-4.2 where compgen -f \"''\" produces nothing.\n        [[ $_quoted == \"''\" ]] && _quoted=\"\"\n\n        # Munge xspec to contain uppercase version too\n        # https://lists.gnu.org/archive/html/bug-bash/2010-09/msg00036.html\n        # news://news.gmane.io/4C940E1C.1010304@case.edu\n        local _xspec=${_arg:+\"!*.@($_arg|${_arg^^})\"} _plusdirs=()\n\n        # Use plusdirs to get dir completions if we have a xspec; if we don't,\n        # there's no need, dirs come along with other completions. Don't use\n        # plusdirs quite yet if fallback is in use though, in order to not ruin\n        # the fallback condition with the \"plus\" dirs.\n        local _opts=(-f -X \"$_xspec\")\n        [[ $_xspec ]] && _plusdirs=(-o plusdirs)\n        [[ ${BASH_COMPLETION_FILEDIR_FALLBACK-} || ! ${_plusdirs-} ]] ||\n            _opts+=(\"${_plusdirs[@]}\")\n\n        _comp_compgen -v toks -c \"$_quoted\" -- \"${_opts[@]}\"\n\n        # Try without filter if it failed to produce anything and configured to\n        [[ ${BASH_COMPLETION_FILEDIR_FALLBACK-} &&\n            $_arg && ${#toks[@]} -lt 1 ]] &&\n            _comp_compgen -av toks -c \"$_quoted\" -- \\\n                -f ${_plusdirs+\"${_plusdirs[@]}\"}\n    fi\n\n    if ((${#toks[@]} != 0)); then\n        # Remove . and .. (as well as */. and */..) from suggestions, unless\n        # .. or */.. was typed explicitly by the user (for users who use\n        # tab-completion to append a slash after '..')\n        if [[ $cur != ?(*/).. ]]; then\n            _comp_compgen -Rv toks -- -X '?(*/)@(.|..)' -W '\"${toks[@]}\"'\n        fi\n    fi\n\n    if ((${#toks[@]} != 0)); then\n        # 2>/dev/null for direct invocation, e.g. in the _comp_compgen_filedir\n        # unit test\n        compopt -o filenames 2>/dev/null\n    fi\n\n    # Note: bash < 4.4 has a bug that all the elements are connected with\n    # ${v+\"${a[@]}\"} when IFS does not contain whitespace.\n    local IFS=$' \\t\\n'\n    _comp_compgen -U toks set ${toks[@]+\"${toks[@]}\"}\n}\n\n# This function splits $cur=--foo=bar into $prev=--foo, $cur=bar, making it\n# easier to support both \"--foo bar\" and \"--foo=bar\" style completions.\n# `=' should have been removed from COMP_WORDBREAKS when setting $cur for\n# this to be useful.\n# Returns 0 if current option was split, 1 otherwise.\n#\n_comp__split_longopt()\n{\n    if [[ $cur == --?*=* ]]; then\n        # Cut also backslash before '=' in case it ended up there\n        # for some reason.\n        prev=${cur%%?(\\\\)=*}\n        cur=${cur#*=}\n        return 0\n    fi\n\n    return 1\n}\n\n# Complete variables.\n# @return  True (0) if variables were completed,\n#          False (> 0) if not.\n# @since 2.12\n_comp_compgen_variables()\n{\n    if [[ $cur =~ ^(\\$(\\{[!#]?)?)([A-Za-z0-9_]*)$ ]]; then\n        # Completing $var / ${var / ${!var / ${#var\n        if [[ $cur == '${'* ]]; then\n            local arrs vars\n            _comp_compgen -v vars -c \"${BASH_REMATCH[3]}\" -- -A variable -P \"${BASH_REMATCH[1]}\" -S '}'\n            _comp_compgen -v arrs -c \"${BASH_REMATCH[3]}\" -- -A arrayvar -P \"${BASH_REMATCH[1]}\" -S '['\n            if ((${#vars[@]} == 1 && ${#arrs[@]} != 0)); then\n                # Complete ${arr with ${array[ if there is only one match, and that match is an array variable\n                compopt -o nospace\n                _comp_compgen -U vars -U arrs -R -- -W '\"${arrs[@]}\"'\n            else\n                # Complete ${var with ${variable}\n                _comp_compgen -U vars -U arrs -R -- -W '\"${vars[@]}\"'\n            fi\n        else\n            # Complete $var with $variable\n            _comp_compgen -ac \"${BASH_REMATCH[3]}\" -- -A variable -P '$'\n        fi\n        return 0\n    elif [[ $cur =~ ^(\\$\\{[#!]?)([A-Za-z0-9_]*)\\[([^]]*)$ ]]; then\n        # Complete ${array[i with ${array[idx]}\n        local vars\n        _comp_compgen -v vars -c \"${BASH_REMATCH[3]}\" -- -W '\"${!'\"${BASH_REMATCH[2]}\"'[@]}\"' \\\n            -P \"${BASH_REMATCH[1]}${BASH_REMATCH[2]}[\" -S ']}'\n        # Complete ${arr[@ and ${arr[*\n        if [[ ${BASH_REMATCH[3]} == [@*] ]]; then\n            vars+=(\"${BASH_REMATCH[1]}${BASH_REMATCH[2]}[${BASH_REMATCH[3]}]}\")\n        fi\n        # array indexes may have colons\n        if ((${#vars[@]})); then\n            _comp_compgen -U vars -c \"$cur\" ltrim_colon \"${vars[@]}\"\n        else\n            _comp_compgen_set\n        fi\n        return 0\n    elif [[ $cur =~ ^\\$\\{[#!]?[A-Za-z0-9_]*\\[.*\\]$ ]]; then\n        # Complete ${array[idx] with ${array[idx]}\n        _comp_compgen -c \"$cur\" ltrim_colon \"$cur}\"\n        return 0\n    fi\n    return 1\n}\n\n# Complete a delimited value.\n#\n# Usage: [-k] DELIMITER COMPGEN_ARG...\n#         -k: do not filter out already present tokens in value\n# @since 2.12\n_comp_delimited()\n{\n    local prefix=\"\" delimiter=$1 deduplicate=set\n    shift\n    if [[ $delimiter == -k ]]; then\n        deduplicate=\"\"\n        delimiter=$1\n        shift\n    fi\n    [[ $cur == *\"$delimiter\"* ]] && prefix=${cur%\"$delimiter\"*}$delimiter\n\n    if [[ $deduplicate ]]; then\n        # We could construct a -X pattern to feed to compgen, but that'd\n        # conflict with possibly already set -X in $@, as well as have\n        # glob char escaping issues to deal with. Do removals by hand instead.\n        _comp_compgen -R -- \"$@\"\n        local -a existing\n        _comp_split -F \"$delimiter\" existing \"$cur\"\n        # Do not remove the last from existing if it's not followed by the\n        # delimiter so we get space appended.\n        [[ ! $cur || $cur == *\"$delimiter\" ]] || unset -v \"existing[${#existing[@]}-1]\"\n        if ((${#COMPREPLY[@]})); then\n            local x i\n            for x in ${existing+\"${existing[@]}\"}; do\n                for i in \"${!COMPREPLY[@]}\"; do\n                    if [[ $x == \"${COMPREPLY[i]}\" ]]; then\n                        unset -v 'COMPREPLY[i]'\n                        continue 2 # assume no dupes in COMPREPLY\n                    fi\n                done\n            done\n            ((${#COMPREPLY[@]})) &&\n                _comp_compgen -c \"${cur##*\"$delimiter\"}\" -- -W '\"${COMPREPLY[@]}\"'\n        fi\n    else\n        _comp_compgen -c \"${cur##*\"$delimiter\"}\" -- \"$@\"\n    fi\n\n    # It would seem that in some specific cases we could avoid adding the\n    # prefix to all completions, thereby making the list of suggestions\n    # cleaner, and only adding it when there's exactly one completion.\n    # The cases where this opportunity has been observed involve having\n    # `show-all-if-ambiguous` on, but even that has cases where it fails\n    # and the last separator including everything before it is lost.\n    # https://github.com/scop/bash-completion/pull/913#issuecomment-1490140309\n    local i\n    for i in \"${!COMPREPLY[@]}\"; do\n        COMPREPLY[i]=\"$prefix${COMPREPLY[i]}\"\n    done\n\n    [[ $delimiter != : ]] || _comp_ltrim_colon_completions \"$cur\"\n}\n\n# Complete assignment of various known environment variables.\n#\n# The word to be completed is expected to contain the entire assignment,\n# including the variable name and the \"=\". Some known variables are completed\n# with colon separated values; for those to work, colon should not have been\n# used to split words. See related parameters to _comp_initialize.\n#\n# @param  $1 variable assignment to be completed\n# @return True (0) if variable value completion was attempted,\n#         False (> 0) if not.\n# @since 2.12\n_comp_variable_assignments()\n{\n    local cur=${1-} i\n\n    if [[ $cur =~ ^([A-Za-z_][A-Za-z0-9_]*)=(.*)$ ]]; then\n        prev=${BASH_REMATCH[1]}\n        cur=${BASH_REMATCH[2]}\n    else\n        return 1\n    fi\n\n    case $prev in\n        TZ)\n            cur=/usr/share/zoneinfo/$cur\n            _comp_compgen_filedir\n            if ((${#COMPREPLY[@]})); then\n                for i in \"${!COMPREPLY[@]}\"; do\n                    if [[ ${COMPREPLY[i]} == *.tab ]]; then\n                        unset -v 'COMPREPLY[i]'\n                        continue\n                    elif [[ -d ${COMPREPLY[i]} ]]; then\n                        COMPREPLY[i]+=/\n                        compopt -o nospace\n                    fi\n                    COMPREPLY[i]=${COMPREPLY[i]#/usr/share/zoneinfo/}\n                done\n            fi\n            ;;\n        TERM)\n            _comp_compgen_terms\n            ;;\n        LANG | LC_*)\n            _comp_compgen_split -- \"$(locale -a 2>/dev/null)\"\n            ;;\n        LANGUAGE)\n            _comp_delimited : -W '$(locale -a 2>/dev/null)'\n            ;;\n        *)\n            _comp_compgen_variables && return 0\n            _comp_compgen -a filedir\n            ;;\n    esac\n\n    return 0\n}\n\n# Initialize completion and deal with various general things: do file\n# and variable completion where appropriate, and adjust prev, words,\n# and cword as if no redirections exist so that completions do not\n# need to deal with them.  Before calling this function, make sure\n# cur, prev, words, and cword are local, ditto split if you use -s.\n#\n# Options:\n#     -n EXCLUDE  Passed to _comp_get_words -n with redirection chars\n#     -e XSPEC    Passed to _comp_compgen_filedir as first arg for stderr\n#                 redirections\n#     -o XSPEC    Passed to _comp_compgen_filedir as first arg for other output\n#                 redirections\n#     -i XSPEC    Passed to _comp_compgen_filedir as first arg for stdin\n#                 redirections\n#     -s          Split long options with _comp__split_longopt, implies -n =\n# @param $1...$3 args Original arguments specified to the completion function.\n#                     The first argument $1 is command name.  The second\n#                     argument $2 is the string before the cursor in the\n#                     current word.  The third argument $3 is the previous\n#                     word.\n# @var[out] cur           Reconstructed current word\n# @var[out] prev          Reconstructed previous word\n# @var[out] words         Reconstructed words\n# @var[out] cword         Current word index in `words`\n# @var[out] comp_args     Original arguments specified to the completion\n#                         function are saved in this array, if the arguments\n#                         $1...$3 is specified.\n# @var[out,opt] was_split When \"-s\" is specified, `\"set\"/\"\"` is set depending\n#                         on whether the split happened.\n# @return  True (0) if completion needs further processing,\n#          False (> 0) no further processing is necessary.\n#\n# @since 2.12\n_comp_initialize()\n{\n    local exclude=\"\" opt_split=\"\" outx=\"\" errx=\"\" inx=\"\"\n\n    local flag OPTIND=1 OPTARG=\"\" OPTERR=0\n    while getopts \"n:e:o:i:s\" flag \"$@\"; do\n        case $flag in\n            n) exclude+=$OPTARG ;;\n            e) errx=$OPTARG ;;\n            o) outx=$OPTARG ;;\n            i) inx=$OPTARG ;;\n            s)\n                opt_split=\"set\"\n                was_split=\"\"\n                exclude+=\"=\"\n                ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 1\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n    (($#)) && comp_args=(\"$@\")\n\n    COMPREPLY=()\n    local redir='@(?(+([0-9])|{[a-zA-Z_]*([a-zA-Z_0-9])})@(>?([>|&])|<?([>&])|<<?([-<]))|&>?(>))'\n    _comp_get_words -n \"$exclude<>&\" cur prev words cword\n\n    # Complete variable names.\n    _comp_compgen_variables && return 1\n\n    # Complete on files if current is a redirect possibly followed by a\n    # filename, e.g. \">foo\", or previous is a \"bare\" redirect, e.g. \">\".\n    # shellcheck disable=SC2053\n    if [[ $cur == $redir* || ${prev-} == $redir ]]; then\n        local xspec\n        case $cur in\n            2'>'*) xspec=${errx-} ;;\n            *'>'*) xspec=${outx-} ;;\n            *'<'*) xspec=${inx-} ;;\n            *)\n                case $prev in\n                    2'>'*) xspec=${errx-} ;;\n                    *'>'*) xspec=${outx-} ;;\n                    *'<'*) xspec=${inx-} ;;\n                esac\n                ;;\n        esac\n        # shellcheck disable=SC2295 # redir is a pattern\n        cur=${cur##$redir}\n        _comp_compgen_filedir \"$xspec\"\n        return 1\n    fi\n\n    # Remove all redirections so completions don't have to deal with them.\n    local i skip\n    for ((i = 1; i < ${#words[@]}; )); do\n        if [[ ${words[i]} == $redir* ]]; then\n            # If \"bare\" redirect, remove also the next word (skip=2).\n            # shellcheck disable=SC2053\n            [[ ${words[i]} == $redir ]] && skip=2 || skip=1\n            words=(\"${words[@]:0:i}\" \"${words[@]:i+skip}\")\n            ((i <= cword)) && ((cword -= skip))\n        else\n            ((i++))\n        fi\n    done\n\n    ((cword <= 0)) && return 1\n    prev=${words[cword - 1]}\n\n    [[ $opt_split ]] && _comp__split_longopt && was_split=\"set\"\n\n    return 0\n}\n\n# Helper function for _comp_compgen_help and _comp_compgen_usage.\n# Obtain the help output based on the arguments.\n# @param $@ args  Arguments specified to the caller.\n# @var[out] _lines\n# @return 2 if the usage is wrong, 1 if no output is obtained, or otherwise 0.\n_comp_compgen_help__get_help_lines()\n{\n    local -a help_cmd\n    case ${1-} in\n        -)\n            if (($# > 1)); then\n                printf 'bash_completion: %s -: extra arguments for -\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s -\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s -c cmd args...\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s [-- args...]\\n' \"${FUNCNAME[1]}\" >&2\n                return 2\n            fi\n            help_cmd=(exec cat)\n            ;;\n        -c)\n            if (($# < 2)); then\n                printf 'bash_completion: %s -c: no command is specified\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s -\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s -c cmd args...\\n' \"${FUNCNAME[1]}\" >&2\n                printf 'usage: %s [-- args...]\\n' \"${FUNCNAME[1]}\" >&2\n                return 2\n            fi\n            help_cmd=(\"${@:2}\")\n            ;;\n        --) shift 1 ;&\n        *)\n            local REPLY\n            _comp_dequote \"${comp_args[0]-}\" || REPLY=${comp_args[0]-}\n            help_cmd=(\"${REPLY:-false}\" \"$@\")\n            ;;\n    esac\n\n    local REPLY\n    _comp_split -l REPLY \"$(LC_ALL=C \"${help_cmd[@]}\" 2>&1)\" &&\n        _lines=(\"${REPLY[@]}\")\n}\n\n# Helper function for _comp_compgen_help and _comp_compgen_usage.\n# @var[in,out] options Add options\n# @return True (0) if an option was found, False (> 0) otherwise\n_comp_compgen_help__parse()\n{\n    local option option2 i\n\n    # Take first found long option, or first one (short) if not found.\n    option=\n    local -a array\n    if _comp_split -F $' \\t\\n,/|' array \"$1\"; then\n        for i in \"${array[@]}\"; do\n            case \"$i\" in\n                ---*) break ;;\n                --?*)\n                    option=$i\n                    break\n                    ;;\n                -?*) [[ $option ]] || option=$i ;;\n                *) break ;;\n            esac\n        done\n    fi\n    [[ $option ]] || return 1\n\n    # Expand --[no]foo to --foo and --nofoo etc\n    if [[ $option =~ (\\[((no|dont)-?)\\]). ]]; then\n        option2=${option/\"${BASH_REMATCH[1]}\"/}\n        option2=${option2%%[<{().[]*}\n        options+=(\"${option2/=*/=}\")\n        option=${option/\"${BASH_REMATCH[1]}\"/\"${BASH_REMATCH[2]}\"}\n    fi\n\n    [[ $option =~ ^([^=<{().[]|\\.[A-Za-z0-9])+=? ]] &&\n        options+=(\"$BASH_REMATCH\")\n}\n\n# Parse GNU style help output of the given command and generate and store\n# completions in an array. The help output is produced in the way depending on\n# the usage:\n# usage: _comp_compgen_help -              # read from stdin\n# usage: _comp_compgen_help -c cmd args... # run \"cmd args...\"\n# usage: _comp_compgen_help [[--] args...] # run \"${comp_args[0]} args...\"\n# When no arguments are specified, `--help` is assumed.\n#\n# @var[in] comp_args[0]\n# @since 2.12\n_comp_compgen_help()\n{\n    (($#)) || set -- -- --help\n\n    local -a _lines\n    _comp_compgen_help__get_help_lines \"$@\" || return \"$?\"\n\n    local -a options=()\n    local _line\n    for _line in \"${_lines[@]}\"; do\n        [[ $_line == *([[:blank:]])-* ]] || continue\n        # transform \"-f FOO, --foo=FOO\" to \"-f , --foo=FOO\" etc\n        while [[ $_line =~ ((^|[^-])-[A-Za-z0-9?][[:space:]]+)\\[?[A-Z0-9]+([,_-]+[A-Z0-9]+)?(\\.\\.+)?\\]? ]]; do\n            _line=${_line/\"${BASH_REMATCH[0]}\"/\"${BASH_REMATCH[1]}\"}\n        done\n        _comp_compgen_help__parse \"${_line// or /, }\"\n    done\n    ((${#options[@]})) || return 1\n\n    _comp_compgen -U options -- -W '\"${options[@]}\"'\n    return 0\n}\n\n# Parse BSD style usage output (options in brackets) of the given command. The\n# help output is produced in the way depending on the usage:\n# usage: _comp_compgen_usage -              # read from stdin\n# usage: _comp_compgen_usage -c cmd args... # run \"cmd args...\"\n# usage: _comp_compgen_usage [[--] args...] # run \"${comp_args[0]} args...\"\n# When no arguments are specified, `--usage` is assumed.\n#\n# @var[in] comp_args[0]\n# @since 2.12\n_comp_compgen_usage()\n{\n    (($#)) || set -- -- --usage\n\n    local -a _lines\n    _comp_compgen_help__get_help_lines \"$@\" || return \"$?\"\n\n    local -a options=()\n    local _line _match _option _i _char\n    for _line in \"${_lines[@]}\"; do\n        while [[ $_line =~ \\[[[:space:]]*(-[^]]+)[[:space:]]*\\] ]]; do\n            _match=${BASH_REMATCH[0]}\n            _option=${BASH_REMATCH[1]}\n            case $_option in\n                -?(\\[)+([a-zA-Z0-9?]))\n                    # Treat as bundled short options\n                    for ((_i = 1; _i < ${#_option}; _i++)); do\n                        _char=${_option:_i:1}\n                        [[ $_char != '[' ]] && options+=(\"-$_char\")\n                    done\n                    ;;\n                *)\n                    _comp_compgen_help__parse \"$_option\"\n                    ;;\n            esac\n            _line=${_line#*\"$_match\"}\n        done\n    done\n    ((${#options[@]})) || return 1\n\n    _comp_compgen -U options -- -W '\"${options[@]}\"'\n    return 0\n}\n\n# This function completes on signal names (minus the SIG prefix)\n# @param $1 prefix\n#\n# @since 2.12\n_comp_compgen_signals()\n{\n    local -a sigs\n    _comp_compgen -v sigs -c \"SIG${cur#\"${1-}\"}\" -- -A signal &&\n        _comp_compgen -RU sigs -- -P \"${1-}\" -W '\"${sigs[@]#SIG}\"'\n}\n\n# This function completes on known mac addresses\n#\n# @since 2.12\n_comp_compgen_mac_addresses()\n{\n    local _re='\\([A-Fa-f0-9]\\{2\\}:\\)\\{5\\}[A-Fa-f0-9]\\{2\\}'\n    local PATH=\"$PATH:/sbin:/usr/sbin\"\n    local -a addresses\n\n    # Local interfaces\n    # - ifconfig on Linux: HWaddr or ether\n    # - ifconfig on FreeBSD: ether\n    # - ip link: link/ether\n    _comp_compgen -v addresses split -- \"$(\n        {\n            ip -c=never link show || ip link show || LC_ALL=C ifconfig -a\n        } 2>/dev/null | command sed -ne \\\n            \"s/.*[[:space:]]HWaddr[[:space:]]\\{1,\\}\\($_re\\)[[:space:]].*/\\1/p\" -ne \\\n            \"s/.*[[:space:]]HWaddr[[:space:]]\\{1,\\}\\($_re\\)[[:space:]]*$/\\1/p\" -ne \\\n            \"s|.*[[:space:]]\\(link/\\)\\{0,1\\}ether[[:space:]]\\{1,\\}\\($_re\\)[[:space:]].*|\\2|p\" -ne \\\n            \"s|.*[[:space:]]\\(link/\\)\\{0,1\\}ether[[:space:]]\\{1,\\}\\($_re\\)[[:space:]]*$|\\2|p\"\n    )\"\n\n    # ARP cache\n    _comp_compgen -av addresses split -- \"$(\n        {\n            arp -an || ip -c=never neigh show || ip neigh show\n        } 2>/dev/null | command sed -ne \\\n            \"s/.*[[:space:]]\\($_re\\)[[:space:]].*/\\1/p\" -ne \\\n            \"s/.*[[:space:]]\\($_re\\)[[:space:]]*$/\\1/p\"\n    )\"\n\n    # /etc/ethers\n    _comp_compgen -av addresses split -- \"$(command sed -ne \\\n        \"s/^[[:space:]]*\\($_re\\)[[:space:]].*/\\1/p\" /etc/ethers 2>/dev/null)\"\n\n    _comp_compgen -U addresses ltrim_colon \"${addresses[@]}\"\n}\n\n# This function completes on configured network interfaces\n#\n# @since 2.12\n_comp_compgen_configured_interfaces()\n{\n    local -a files\n    if [[ -f /etc/debian_version ]]; then\n        # Debian system\n        _comp_expand_glob files '/etc/network/interfaces /etc/network/interfaces.d/*' || return 0\n        _comp_compgen -U files split -- \"$(command sed -ne \\\n            's|^iface \\([^ ]\\{1,\\}\\).*$|\\1|p' \"${files[@]}\" 2>/dev/null)\"\n    elif [[ -f /etc/SuSE-release ]]; then\n        # SuSE system\n        _comp_expand_glob files '/etc/sysconfig/network/ifcfg-*' || return 0\n        _comp_compgen -U files split -- \"$(printf '%s\\n' \"${files[@]}\" |\n            command sed -ne 's|.*ifcfg-\\([^*].*\\)$|\\1|p')\"\n    elif [[ -f /etc/pld-release ]]; then\n        # PLD Linux\n        _comp_compgen -U files split -- \"$(command ls -B /etc/sysconfig/interfaces |\n            command sed -ne 's|.*ifcfg-\\([^*].*\\)$|\\1|p')\"\n    else\n        # Assume Red Hat\n        _comp_expand_glob files '/etc/sysconfig/network-scripts/ifcfg-*' || return 0\n        _comp_compgen -U files split -- \"$(printf '%s\\n' \"${files[@]}\" |\n            command sed -ne 's|.*ifcfg-\\([^*].*\\)$|\\1|p')\"\n    fi\n}\n\n# Local IP addresses.\n# If producing IPv6 completions, `_comp_initialize` with `-n :`.\n#\n# -4: IPv4 addresses only (default)\n# -6: IPv6 addresses only\n# -a: All addresses\n#\n# @since 2.12\n_comp_compgen_ip_addresses()\n{\n    local _n\n    case ${1-} in\n        -a) _n='6\\{0,1\\}' ;;\n        -6) _n='6' ;;\n        *) _n= ;;\n    esac\n    local PATH=$PATH:/sbin\n    local addrs\n    _comp_compgen -v addrs split -- \"$({\n        ip -c=never addr show || ip addr show || LC_ALL=C ifconfig -a\n    } 2>/dev/null |\n        command sed -e 's/[[:space:]]addr:/ /' -ne \\\n            \"s|.*inet${_n}[[:space:]]\\{1,\\}\\([^[:space:]/]*\\).*|\\1|p\")\" ||\n        return\n\n    if [[ ! $_n ]]; then\n        _comp_compgen -U addrs set \"${addrs[@]}\"\n    else\n        _comp_compgen -U addrs ltrim_colon \"${addrs[@]}\"\n    fi\n}\n\n# This function completes on available kernel versions\n#\n# @since 2.12\n_comp_compgen_kernel_versions()\n{\n    _comp_compgen_split -- \"$(command ls /lib/modules)\"\n}\n\n# This function completes on all available network interfaces\n# -a: restrict to active interfaces only\n# -w: restrict to wireless interfaces only\n#\n# @since 2.12\n_comp_compgen_available_interfaces()\n{\n    local PATH=$PATH:/sbin\n    local generated\n    _comp_compgen -v generated split -- \"$({\n        if [[ ${1-} == -w ]]; then\n            iwconfig\n        elif [[ ${1-} == -a ]]; then\n            # Note: we prefer ip (iproute2) to ifconfig (inetutils) since long\n            # interface names will be truncated by ifconfig [1].\n            # [1]: https://github.com/scop/bash-completion/issues/1089\n            ip -c=never link show up || ip link show up || ifconfig\n        else\n            ip -c=never link show || ip link show || ifconfig -a\n        fi\n    } 2>/dev/null | _comp_awk \\\n        '/^[^ \\t]/ { if ($1 ~ /^[0-9]+:/) { print $2 } else { print $1 } }')\" &&\n        _comp_compgen -U generated set \"${generated[@]%:}\"\n}\n\n# Echo number of CPUs, falling back to 1 on failure.\n# @var[out] REPLY\n# @return 0 if it successfully obtained the number of CPUs, or otherwise 1\n# @since 2.12\n_comp_get_ncpus()\n{\n    local var=NPROCESSORS_ONLN\n    [[ $OSTYPE == *@(linux|msys|cygwin)* ]] && var=_$var\n    if REPLY=$(getconf $var 2>/dev/null) && ((REPLY >= 1)); then\n        return 0\n    else\n        REPLY=1\n        return 1\n    fi\n}\n\n# Perform tilde (~) completion\n# @return  False (1) if completion needs further processing,\n#          True (0) if tilde is followed by a valid username, completions are\n#          put in COMPREPLY and no further processing is necessary.\n# @since 2.12\n_comp_compgen_tilde()\n{\n    if [[ ${cur-} == \\~* && $cur != */* ]]; then\n        # Try generate ~username completions\n        if _comp_compgen -c \"${cur#\\~}\" -- -P '~' -u; then\n            # 2>/dev/null for direct invocation, e.g. in the\n            # _comp_compgen_tilde unit test\n            compopt -o filenames 2>/dev/null\n            return 0\n        fi\n    fi\n    return 1\n}\n\n# Expand string starting with tilde (~)\n# We want to expand ~foo/... to /home/foo/... to avoid problems when\n# word-to-complete starting with a tilde is fed to commands and ending up\n# quoted instead of expanded.\n# Only the first portion of the variable from the tilde up to the first slash\n# (~../) is expanded.  The remainder of the variable, containing for example\n# a dollar sign variable ($) or asterisk (*) is not expanded.\n# Example usage:\n#\n#    $ _comp_expand_tilde \"~\"; echo \"$REPLY\"\n#\n# Example output:\n#\n#       $1                 REPLY\n#    --------         ----------------\n#    ~                /home/user\n#    ~foo/bar         /home/foo/bar\n#    ~foo/$HOME       /home/foo/$HOME\n#    ~foo/a  b        /home/foo/a  b\n#    ~foo/*           /home/foo/*\n#\n# @param $1     Value to expand\n# @var[out] REPLY Expanded result\n# @since 2.12\n_comp_expand_tilde()\n{\n    REPLY=$1\n    if [[ $1 == \\~* ]]; then\n        printf -v REPLY '~%q' \"${1#\\~}\"\n        eval \"REPLY=$REPLY\"\n    fi\n}\n\n# This function expands tildes in pathnames\n#\n# @since 2.12\n_comp_expand()\n{\n    # Expand ~username type directory specifications.  We want to expand\n    # ~foo/... to /home/foo/... to avoid problems when $cur starting with\n    # a tilde is fed to commands and ending up quoted instead of expanded.\n\n    case ${cur-} in\n        ~*/*)\n            local REPLY\n            _comp_expand_tilde \"$cur\"\n            cur=$REPLY\n            ;;\n        ~*)\n            _comp_compgen -v COMPREPLY tilde &&\n                eval \"COMPREPLY[0]=$(printf ~%q \"${COMPREPLY[0]#\\~}\")\" &&\n                return 1\n            ;;\n    esac\n    return 0\n}\n\n# Process ID related functions.\n# for AIX and Solaris we use X/Open syntax, BSD for others.\n#\n# @since 2.12\nif [[ $OSTYPE == *@(solaris|aix)* ]]; then\n    # This function completes on process IDs.\n    _comp_compgen_pids()\n    {\n        _comp_compgen_split -- \"$(command ps -efo pid | command sed 1d)\"\n    }\n\n    _comp_compgen_pgids()\n    {\n        _comp_compgen_split -- \"$(command ps -efo pgid | command sed 1d)\"\n    }\n    _comp_compgen_pnames()\n    {\n        _comp_compgen_split -X '<defunct>' -- \"$(command ps -efo comm |\n            command sed -e 1d -e 's:.*/::' -e 's/^-//' | sort -u)\"\n    }\nelse\n    _comp_compgen_pids()\n    {\n        _comp_compgen_split -- \"$(command ps ax -o pid=)\"\n    }\n    _comp_compgen_pgids()\n    {\n        _comp_compgen_split -- \"$(command ps ax -o pgid=)\"\n    }\n    # @param $1 if -s, don't try to avoid truncated command names\n    _comp_compgen_pnames()\n    {\n        local -a procs=()\n        if [[ ${1-} == -s ]]; then\n            _comp_split procs \"$(command ps ax -o comm | command sed -e 1d)\"\n        else\n            # Some versions of ps don't support \"command\", but do \"comm\", e.g.\n            # some busybox ones. Fall back\n            local -a psout\n            _comp_split -l psout \"$({\n                command ps ax -o command= || command ps ax -o comm=\n            } 2>/dev/null)\"\n            local line i=-1\n            for line in \"${psout[@]}\"; do\n                if ((i == -1)); then\n                    # First line, see if it has COMMAND column header. For\n                    # example some busybox ps versions do that, i.e. don't\n                    # respect command=\n                    if [[ $line =~ ^(.*[[:space:]])COMMAND([[:space:]]|$) ]]; then\n                        # It does; store its index.\n                        i=${#BASH_REMATCH[1]}\n                    else\n                        # Nope, fall through to \"regular axo command=\" parsing.\n                        break\n                    fi\n                else\n                    #\n                    line=${line:i}   # take command starting from found index\n                    line=${line%% *} # trim arguments\n                    [[ $line ]] && procs+=(\"$line\")\n                fi\n            done\n            if ((i == -1)); then\n                # Regular command= parsing\n                for line in \"${psout[@]}\"; do\n                    if [[ $line =~ ^[[(](.+)[])]$ ]]; then\n                        procs+=(\"${BASH_REMATCH[1]}\")\n                    else\n                        line=${line%% *}      # trim arguments\n                        line=${line##@(*/|-)} # trim leading path and -\n                        [[ $line ]] && procs+=(\"$line\")\n                    fi\n                done\n            fi\n        fi\n        ((${#procs[@]})) &&\n            _comp_compgen -U procs -- -X \"<defunct>\" -W '\"${procs[@]}\"'\n    }\nfi\n\n# This function completes on user IDs\n#\n# @since 2.12\n_comp_compgen_uids()\n{\n    if type getent &>/dev/null; then\n        _comp_compgen_split -- \"$(getent passwd | cut -d: -f3)\"\n    elif type perl &>/dev/null; then\n        _comp_compgen_split -- \"$(perl -e 'while (($uid) = (getpwent)[2]) { print $uid . \"\\n\" }')\"\n    else\n        # make do with /etc/passwd\n        _comp_compgen_split -- \"$(cut -d: -f3 /etc/passwd)\"\n    fi\n}\n\n# This function completes on group IDs\n#\n# @since 2.12\n_comp_compgen_gids()\n{\n    if type getent &>/dev/null; then\n        _comp_compgen_split -- \"$(getent group | cut -d: -f3)\"\n    elif type perl &>/dev/null; then\n        _comp_compgen_split -- \"$(perl -e 'while (($gid) = (getgrent)[2]) { print $gid . \"\\n\" }')\"\n    else\n        # make do with /etc/group\n        _comp_compgen_split -- \"$(cut -d: -f3 /etc/group)\"\n    fi\n}\n\n# Glob for matching various backup files.\n#\n_comp_backup_glob='@(#*#|*@(~|.@(bak|orig|rej|swp|@(dpkg|ucf)-*|rpm@(orig|new|save))))'\n\n# Complete on xinetd services\n#\n# @since 2.12\n_comp_compgen_xinetd_services()\n{\n    local xinetddir=${_comp__test_xinetd_dir:-/etc/xinetd.d}\n    if [[ -d $xinetddir ]]; then\n        local -a svcs\n        if _comp_expand_glob svcs '$xinetddir/!($_comp_backup_glob)'; then\n            _comp_compgen -U svcs -U xinetddir -- -W '\"${svcs[@]#$xinetddir/}\"'\n        fi\n    fi\n}\n\n# This function completes on services\n#\n# @since 2.12\n_comp_compgen_services()\n{\n    local sysvdirs\n    _comp_sysvdirs || return 1\n\n    local services\n    _comp_expand_glob services '${sysvdirs[0]}/!($_comp_backup_glob|functions|README)'\n\n    local _generated=$({\n        systemctl list-units --full --all ||\n            systemctl list-unit-files\n    } 2>/dev/null |\n        _comp_awk '$1 ~ /\\.service$/ { sub(\"\\\\.service$\", \"\", $1); print $1 }')\n    _comp_split -la services \"$_generated\"\n\n    if [[ -x /sbin/upstart-udev-bridge ]]; then\n        _comp_split -la services \"$(initctl list 2>/dev/null | cut -d' ' -f1)\"\n    fi\n\n    ((${#services[@]})) || return 1\n    _comp_compgen -U services -U sysvdirs -- -W '\"${services[@]#${sysvdirs[0]}/}\"'\n}\n\n# This completes on a list of all available service scripts for the\n# 'service' command and/or the SysV init.d directory, followed by\n# that script's available commands\n# This function is in the main bash_completion file rather than in a separate\n# one, because we set it up eagerly as completer for scripts in sysv init dirs\n# below.\n#\n# @since 2.12\n_comp_complete_service()\n{\n    local cur prev words cword comp_args\n    _comp_initialize -- \"$@\" || return\n\n    # don't complete past 2nd token\n    ((cword > 2)) && return\n\n    if [[ $cword -eq 1 && $prev == ?(*/)service ]]; then\n        _comp_compgen_services\n        [[ -e /etc/mandrake-release ]] && _comp_compgen_xinetd_services\n    else\n        local sysvdirs\n        _comp_sysvdirs || return 1\n        _comp_compgen_split -l -- \"$(command sed -e 'y/|/ /' \\\n            -ne 's/^.*\\(U\\|msg_u\\)sage.*{\\(.*\\)}.*$/\\2/p' \\\n            \"${sysvdirs[0]}/${prev##*/}\" 2>/dev/null) start stop\"\n    fi\n} &&\n    complete -F _comp_complete_service service\n\n_comp__init_set_up_service_completions()\n{\n    local sysvdirs svc svcdir svcs\n    _comp_sysvdirs &&\n        for svcdir in \"${sysvdirs[@]}\"; do\n            if _comp_expand_glob svcs '\"$svcdir\"/!($_comp_backup_glob)'; then\n                for svc in \"${svcs[@]}\"; do\n                    [[ -x $svc ]] && complete -F _comp_complete_service \"$svc\"\n                done\n            fi\n        done\n    unset -f \"$FUNCNAME\"\n}\n_comp__init_set_up_service_completions\n\n# This function completes on kernel modules\n# @param $1 kernel version\n#\n# @since 2.12\n_comp_compgen_kernel_modules()\n{\n    local _modpath=/lib/modules/$1\n    _comp_compgen_split -- \"$(command ls -RL \"$_modpath\" 2>/dev/null |\n        command sed -ne 's/^\\(.*\\)\\.k\\{0,1\\}o\\(\\.[gx]z\\)\\{0,1\\}$/\\1/p' \\\n            -e 's/^\\(.*\\)\\.ko\\.zst$/\\1/p')\"\n}\n\n# This function completes on inserted kernel modules\n# @param $1 prefix to filter with, default $cur\n#\n# @since 2.12\n_comp_compgen_inserted_kernel_modules()\n{\n    _comp_compgen -c \"${1:-$cur}\" split -- \"$(PATH=\"$PATH:/sbin\" lsmod |\n        _comp_awk '{if (NR != 1) print $1}')\"\n}\n\n# This function completes on user or user:group format; as for chown and cpio.\n#\n# The : must be added manually; it will only complete usernames initially.\n# The legacy user.group format is not supported.\n#\n# @param $1  If -u, only return users/groups the user has access to in\n#            context of current completion.\n#\n# @since 2.12\n_comp_compgen_usergroups()\n{\n    if [[ $cur == *\\\\\\\\* || $cur == *:*:* ]]; then\n        # Give up early on if something seems horribly wrong.\n        return\n    elif [[ $cur == *\\\\:* ]]; then\n        # Completing group after 'user\\:gr<TAB>'.\n        # Reply with a list of groups prefixed with 'user:', readline will\n        # escape to the colon.\n        local tmp\n        if [[ ${1-} == -u ]]; then\n            _comp_compgen -v tmp -c \"${cur#*:}\" allowed_groups\n        else\n            _comp_compgen -v tmp -c \"${cur#*:}\" -- -g\n        fi\n        if ((${#tmp[@]})); then\n            local _prefix=${cur%%*([^:])}\n            _prefix=${_prefix//\\\\/}\n            _comp_compgen -Rv tmp -- -P \"$_prefix\" -W '\"${tmp[@]}\"'\n            _comp_compgen -U tmp set \"${tmp[@]}\"\n        fi\n    elif [[ $cur == *:* ]]; then\n        # Completing group after 'user:gr<TAB>'.\n        # Reply with a list of unprefixed groups since readline with split on :\n        # and only replace the 'gr' part\n        if [[ ${1-} == -u ]]; then\n            _comp_compgen -c \"${cur#*:}\" allowed_groups\n        else\n            _comp_compgen -c \"${cur#*:}\" -- -g\n        fi\n    else\n        # Completing a partial 'usernam<TAB>'.\n        #\n        # Don't suffix with a : because readline will escape it and add a\n        # slash. It's better to complete into 'chown username ' than 'chown\n        # username\\:'.\n        if [[ ${1-} == -u ]]; then\n            _comp_compgen_allowed_users\n        else\n            _comp_compgen -- -u\n        fi\n    fi\n}\n\n# @since 2.12\n_comp_compgen_allowed_users()\n{\n    if _comp_as_root; then\n        _comp_compgen -- -u\n    else\n        _comp_compgen_split -- \"$(id -un 2>/dev/null || whoami 2>/dev/null)\"\n    fi\n}\n\n# @since 2.12\n_comp_compgen_allowed_groups()\n{\n    if _comp_as_root; then\n        _comp_compgen -- -g\n    else\n        _comp_compgen_split -- \"$(id -Gn 2>/dev/null || groups 2>/dev/null)\"\n    fi\n}\n\n# @since 2.12\n_comp_compgen_selinux_users()\n{\n    _comp_compgen_split -- \"$(semanage user -nl 2>/dev/null |\n        _comp_awk '{ print $1 }')\"\n}\n\n# This function completes on valid shells\n# @param $1 chroot to search from\n#\n# @since 2.12\n_comp_compgen_shells()\n{\n    local -a shells=()\n    local _shell _rest\n    while read -r _shell _rest; do\n        [[ $_shell == /* ]] && shells+=(\"$_shell\")\n    done 2>/dev/null <\"${1-}\"/etc/shells\n    _comp_compgen -U shells -- -W '\"${shells[@]}\"'\n}\n\n# This function completes on valid filesystem types\n#\n# @since 2.12\n_comp_compgen_fstypes()\n{\n    local _fss\n\n    if [[ -e /proc/filesystems ]]; then\n        # Linux\n        _fss=\"$(cut -d$'\\t' -f2 /proc/filesystems)\n             $(_comp_awk '! /\\*/ { print $NF }' /etc/filesystems 2>/dev/null)\"\n    else\n        # Generic\n        _fss=\"$(_comp_awk '/^[ \\t]*[^#]/ { print $3 }' /etc/fstab 2>/dev/null)\n             $(_comp_awk '/^[ \\t]*[^#]/ { print $3 }' /etc/mnttab 2>/dev/null)\n             $(_comp_awk '/^[ \\t]*[^#]/ { print $4 }' /etc/vfstab 2>/dev/null)\n             $(_comp_awk '{ print $1 }' /etc/dfs/fstypes 2>/dev/null)\n             $(lsvfs 2>/dev/null | _comp_awk '$1 !~ /^(Filesystem|[^a-zA-Z])/ { print $1 }')\n             $([[ -d /etc/fs ]] && command ls /etc/fs)\"\n    fi\n\n    [[ $_fss ]] && _comp_compgen_split -- \"$_fss\"\n}\n\n# Get absolute path to a file, with rudimentary canonicalization.\n# No symlink resolution or existence checks are done;\n# see `_comp_realcommand` for those.\n# @param $1 The file\n# @var[out] REPLY The path\n# @since 2.12\n_comp_abspath()\n{\n    REPLY=$1\n    [[ $REPLY == /* ]] || REPLY=$PWD/$REPLY\n    REPLY=${REPLY//+(\\/)/\\/}\n    while true; do\n        # Process \".\" and \"..\".  To avoid reducing \"/../../ => /\", we convert\n        # \"/*/../\" one by one. \"/..\"  at the beginning is ignored. Then, /*/../\n        # in the middle is processed.  Finally, /*/.. at the end is removed.\n        case $REPLY in\n            */./*) REPLY=${REPLY//\\/.\\//\\/} ;;\n            */.) REPLY=${REPLY%/.} ;;\n            /..?(/*)) REPLY=${REPLY#/..} ;;\n            */+([^/])/../*) REPLY=${REPLY/\\/+([^\\/])\\/..\\//\\/} ;;\n            */+([^/])/..) REPLY=${REPLY%/+([^/])/..} ;;\n            *) break ;;\n        esac\n    done\n    [[ $REPLY ]] || REPLY=/\n}\n\n# Get real command.\n# Command is the filename of command in PATH with possible symlinks resolved\n# (if resolve tooling available), empty string if command not found.\n# @param    $1 Command\n# @var[out] REPLY Resulting string\n# @return   True (0) if command found, False (> 0) if not.\n# @since 2.12\n_comp_realcommand()\n{\n    REPLY=\"\"\n    local file\n    file=$(type -P -- \"$1\") || return $?\n    if type -p realpath >/dev/null; then\n        REPLY=$(realpath \"$file\")\n    elif type -p greadlink >/dev/null; then\n        REPLY=$(greadlink -f \"$file\")\n    elif type -p readlink >/dev/null; then\n        REPLY=$(readlink -f \"$file\")\n    else\n        _comp_abspath \"$file\"\n    fi\n}\n\n# This function returns the position of the first argument, excluding options\n#\n# Options:\n#     -a GLOB  Pattern of options that take an option argument\n#\n# @var[out] REPLY Position of the first argument before the current one being\n# completed if any, or otherwise an empty string\n# @return True (0) if any argument is found, False (> 0) otherwise.\n# @since 2.12\n_comp_locate_first_arg()\n{\n    local has_optarg=\"\"\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 _opt\n    while getopts ':a:' _opt \"$@\"; do\n        case $_opt in\n            a) has_optarg=$OPTARG ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 2\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n\n    local i\n    REPLY=\n    for ((i = 1; i < cword; i++)); do\n        # shellcheck disable=SC2053\n        if [[ $has_optarg && ${words[i]} == $has_optarg ]]; then\n            ((i++))\n        elif [[ ${words[i]} != -?* ]]; then\n            REPLY=$i\n            return 0\n        elif [[ ${words[i]} == -- ]]; then\n            ((i + 1 < cword)) && REPLY=$((i + 1)) && return 0\n            break\n        fi\n    done\n    return 1\n}\n\n# This function returns the first argument, excluding options\n#\n# Options:\n#     -a GLOB  Pattern of options that take an option argument\n#\n# @var[out] REPLY First argument before the current one being completed if any,\n# or otherwise an empty string\n# @return True (0) if any argument is found, False (> 0) otherwise.\n# @since 2.12\n_comp_get_first_arg()\n{\n    _comp_locate_first_arg \"$@\" && REPLY=${words[REPLY]}\n}\n\n# This function counts the number of args, excluding options\n#\n# Options:\n#     -n CHARS  Characters out of $COMP_WORDBREAKS which should\n#               NOT be considered word breaks. See\n#               _comp__reassemble_words.\n#     -a GLOB   Options whose following argument should not be counted\n#     -i GLOB   Options that should be counted as args\n#\n# @var[out] REPLY    Return the number of arguments\n# @since 2.12\n_comp_count_args()\n{\n    local has_optarg=\"\" has_exclude=\"\" exclude=\"\" glob_include=\"\"\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 _opt\n    while getopts ':a:n:i:' _opt \"$@\"; do\n        case $_opt in\n            a) has_optarg=$OPTARG ;;\n            n) has_exclude=set exclude+=$OPTARG ;;\n            i) glob_include=$OPTARG ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 2\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n\n    if [[ $has_exclude ]]; then\n        local cword words\n        _comp__reassemble_words \"$exclude<>&\" words cword\n    fi\n\n    local i\n    REPLY=1\n    for ((i = 1; i < cword; i++)); do\n        # shellcheck disable=SC2053\n        if [[ $has_optarg && ${words[i]} == $has_optarg ]]; then\n            ((i++))\n        elif [[ ${words[i]} != -?* || $glob_include && ${words[i]} == $glob_include ]]; then\n            ((REPLY++))\n        elif [[ ${words[i]} == -- ]]; then\n            ((REPLY += cword - i - 1))\n            break\n        fi\n    done\n}\n\n# This function completes on PCI IDs\n#\n# @since 2.12\n_comp_compgen_pci_ids()\n{\n    _comp_compgen_split -- \"$(PATH=\"$PATH:/sbin\" lspci -n | _comp_awk '{print $3}')\"\n}\n\n# This function completes on USB IDs\n#\n# @since 2.12\n_comp_compgen_usb_ids()\n{\n    _comp_compgen_split -- \"$(PATH=\"$PATH:/sbin\" lsusb | _comp_awk '{print $6}')\"\n}\n\n# CD device names\n#\n# @since 2.12\n_comp_compgen_cd_devices()\n{\n    _comp_compgen -c \"${cur:-/dev/}\" -- -f -d -X \"!*/?([amrs])cd!(c-*)\"\n}\n\n# DVD device names\n#\n# @since 2.12\n_comp_compgen_dvd_devices()\n{\n    _comp_compgen -c \"${cur:-/dev/}\" -- -f -d -X \"!*/?(r)dvd*\"\n}\n\n# TERM environment variable values\n#\n# @since 2.12\n_comp_compgen_terms()\n{\n    _comp_compgen_split -- \"$({\n        command sed -ne 's/^\\([^[:space:]#|]\\{2,\\}\\)|.*/\\1/p' /etc/termcap\n        {\n            toe -a || toe\n        } | _comp_awk '{ print $1 }'\n        _comp_expand_glob dirs '/{etc,lib,usr/lib,usr/share}/terminfo/?' &&\n            find \"${dirs[@]}\" -type f -maxdepth 1 |\n            _comp_awk -F / '{ print $NF }'\n    } 2>/dev/null)\"\n}\n\n# @since 2.12\n_comp_try_faketty()\n{\n    if type unbuffer &>/dev/null; then\n        unbuffer -p \"$@\"\n    elif script --version 2>&1 | command grep -qF util-linux; then\n        # BSD and Solaris \"script\" do not seem to have required features\n        script -qaefc \"$*\" /dev/null\n    else\n        \"$@\" # no can do, fallback\n    fi\n}\n\n# a little help for FreeBSD ports users\n[[ $OSTYPE == *freebsd* ]] && complete -W 'index search fetch fetch-list\n    extract patch configure build install reinstall deinstall clean\n    clean-depends kernel buildworld' make\n\n# This function provides simple user@host completion\n#\n# @since 2.12\n_comp_complete_user_at_host()\n{\n    local cur prev words cword comp_args\n    _comp_initialize -n : -- \"$@\" || return\n\n    if [[ $cur == *@* ]]; then\n        _comp_compgen_known_hosts \"$cur\"\n    else\n        _comp_compgen -- -u -S @\n        compopt -o nospace\n    fi\n}\nshopt -u hostcomplete && complete -F _comp_complete_user_at_host talk ytalk finger\n\n# NOTE: Using this function as a helper function is deprecated.  Use\n#       `_comp_compgen_known_hosts' instead.\n# @since 2.12\n_comp_complete_known_hosts()\n{\n    local cur prev words cword comp_args\n    _comp_initialize -n : -- \"$@\" || return\n\n    # NOTE: Using `_known_hosts' (the old name of `_comp_complete_known_hosts')\n    #       as a helper function and passing options to `_known_hosts' is\n    #       deprecated: Use `_comp_compgen_known_hosts' instead.\n    local -a options=()\n    [[ ${1-} == -a || ${2-} == -a ]] && options+=(-a)\n    [[ ${1-} == -c || ${2-} == -c ]] && options+=(-c)\n    local IFS=$' \\t\\n' # Workaround for connected ${v+\"$@\"} in bash < 4.4\n    _comp_compgen_known_hosts ${options[@]+\"${options[@]}\"} -- \"$cur\"\n}\n\n# Helper function to locate ssh included files in configs\n# This function looks for the \"Include\" keyword in ssh config files and\n# includes them recursively, adding each result to the config variable.\n_comp__included_ssh_config_files()\n{\n    (($# < 1)) &&\n        echo \"bash_completion: $FUNCNAME: missing mandatory argument CONFIG\" >&2\n    local configfile i files f REPLY\n    configfile=$1\n\n    # From man ssh_config:\n    # \"Files without absolute paths are assumed to be in ~/.ssh if included\n    # in a user configuration file or /etc/ssh if included from the system\n    # configuration file.\"\n    # This behavior is not affected by the the including file location -\n    # if the system configuration file is included from the user's config,\n    # relative includes are still resolved in the user's ssh config directory.\n    local relative_include_base\n    if [[ $configfile == /etc/ssh* ]]; then\n        relative_include_base=\"/etc/ssh\"\n    else\n        relative_include_base=\"$HOME/.ssh\"\n    fi\n\n    local depth=1\n    local -a included\n    local -a include_files\n    included=(\"$configfile\")\n\n    # Max recursion depth per openssh's READCONF_MAX_DEPTH:\n    # https://github.com/openssh/openssh-portable/blob/5ec5504f1d328d5bfa64280cd617c3efec4f78f3/readconf.c#L2240\n    local max_depth=16\n    while ((${#included[@]} > 0 && depth++ < max_depth)); do\n        _comp_split include_files \"$(command sed -ne 's/^[[:blank:]]*[Ii][Nn][Cc][Ll][Uu][Dd][Ee][[:blank:]]\\(.*\\)$/\\1/p' \"${included[@]}\")\" || return\n        included=()\n        for i in \"${include_files[@]}\"; do\n            if [[ $i != [~/]* ]]; then\n                i=\"${relative_include_base}/${i}\"\n            fi\n            _comp_expand_tilde \"$i\"\n            if _comp_expand_glob files '$REPLY'; then\n                # In case the expanded variable contains multiple paths\n                for f in \"${files[@]}\"; do\n                    if [[ -r $f && ! -d $f ]]; then\n                        config+=(\"$f\")\n                        included+=(\"$f\")\n                    fi\n                done\n            fi\n        done\n    done\n}\n\n# Helper function for completing _comp_complete_known_hosts.\n# This function performs host completion based on ssh's config and known_hosts\n# files, as well as hostnames reported by avahi-browse if\n# BASH_COMPLETION_KNOWN_HOSTS_WITH_AVAHI is set to a non-empty value.\n# Also hosts from HOSTFILE (compgen -A hostname) are added, unless\n# BASH_COMPLETION_KNOWN_HOSTS_WITH_HOSTFILE is set to an empty value.\n# Usage: _comp_compgen_known_hosts [OPTIONS] CWORD\n# Options:\n#     -a             Use aliases from ssh config files\n#     -c             Use `:' suffix\n#     -F configfile  Use `configfile' for configuration settings\n#     -p PREFIX      Use PREFIX\n#     -4             Filter IPv6 addresses from results\n#     -6             Filter IPv4 addresses from results\n# @var[out] COMPREPLY  Completions, starting with CWORD, are added\n# @return True (0) if one or more completions are generated, or otherwise False\n# (1).\n# @since 2.12\n_comp_compgen_known_hosts()\n{\n    local known_hosts\n    _comp_compgen_known_hosts__impl \"$@\" || return \"$?\"\n    _comp_compgen -U known_hosts set \"${known_hosts[@]}\"\n}\n_comp_compgen_known_hosts__impl()\n{\n    known_hosts=()\n\n    local configfile=\"\" flag prefix=\"\"\n    local cur suffix=\"\" aliases=\"\" i host ipv4=\"\" ipv6=\"\"\n    local -a kh tmpkh=() khd=() config=()\n\n    # TODO remove trailing %foo from entries\n\n    local OPTIND=1\n    while getopts \"ac46F:p:\" flag \"$@\"; do\n        case $flag in\n            a) aliases=set ;;\n            c) suffix=':' ;;\n            F)\n                if [[ ! $OPTARG ]]; then\n                    echo \"bash_completion: $FUNCNAME: -F: an empty filename is specified\" >&2\n                    return 2\n                fi\n                configfile=$OPTARG\n                ;;\n            p) prefix=$OPTARG ;;\n            4) ipv4=set ;;\n            6) ipv6=set ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 2\n                ;;\n        esac\n    done\n    if (($# < OPTIND)); then\n        echo \"bash_completion: $FUNCNAME: missing mandatory argument CWORD\" >&2\n        return 2\n    fi\n    cur=${!OPTIND}\n    ((OPTIND += 1))\n    if (($# >= OPTIND)); then\n        echo \"bash_completion: $FUNCNAME($*): unprocessed arguments:\" \\\n            \"$(while (($# >= OPTIND)); do\n                printf '%s ' ${!OPTIND}\n                shift\n            done)\" >&2\n        return 2\n    fi\n\n    [[ $cur == *@* ]] && prefix=$prefix${cur%@*}@ && cur=${cur#*@}\n    kh=()\n\n    # ssh config files\n    if [[ $configfile ]]; then\n        [[ -r $configfile && ! -d $configfile ]] && config+=(\"$configfile\")\n    else\n        for i in /etc/ssh/ssh_config ~/.ssh/config ~/.ssh2/config; do\n            [[ -r $i && ! -d $i ]] && config+=(\"$i\")\n        done\n    fi\n\n    # \"Include\" keyword in ssh config files\n    if ((${#config[@]} > 0)); then\n        for i in \"${config[@]}\"; do\n            _comp__included_ssh_config_files \"$i\"\n        done\n    fi\n\n    # Known hosts files from configs\n    if ((${#config[@]} > 0)); then\n        # expand paths (if present) to global and user known hosts files\n        # TODO(?): try to make known hosts files with more than one consecutive\n        #          spaces in their name work (watch out for ~ expansion\n        #          breakage! Alioth#311595)\n        if _comp_split -l tmpkh \"$(_comp_awk 'sub(\"^[ \\t]*([Gg][Ll][Oo][Bb][Aa][Ll]|[Uu][Ss][Ee][Rr])[Kk][Nn][Oo][Ww][Nn][Hh][Oo][Ss][Tt][Ss][Ff][Ii][Ll][Ee][ \\t=]+\", \"\") { print $0 }' \"${config[@]}\" | sort -u)\"; then\n            local tmpkh2 j REPLY\n            for i in \"${tmpkh[@]}\"; do\n                # First deal with quoted entries...\n                while [[ $i =~ ^([^\\\"]*)\\\"([^\\\"]*)\\\"(.*)$ ]]; do\n                    i=${BASH_REMATCH[1]}${BASH_REMATCH[3]}\n                    _comp_expand_tilde \"${BASH_REMATCH[2]}\" # Eval/expand possible `~' or `~user'\n                    [[ -r $REPLY ]] && kh+=(\"$REPLY\")\n                done\n                # ...and then the rest.\n                _comp_split tmpkh2 \"$i\" || continue\n                for j in \"${tmpkh2[@]}\"; do\n                    _comp_expand_tilde \"$j\" # Eval/expand possible `~' or `~user'\n                    [[ -r $REPLY ]] && kh+=(\"$REPLY\")\n                done\n            done\n        fi\n    fi\n\n    if [[ ! $configfile ]]; then\n        # Global and user known_hosts files\n        for i in /etc/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts2 \\\n            /etc/known_hosts /etc/known_hosts2 ~/.ssh/known_hosts \\\n            ~/.ssh/known_hosts2; do\n            [[ -r $i && ! -d $i ]] && kh+=(\"$i\")\n        done\n        for i in /etc/ssh2/knownhosts ~/.ssh2/hostkeys; do\n            [[ -d $i ]] || continue\n            _comp_expand_glob tmpkh '\"$i\"/*.pub' && khd+=(\"${tmpkh[@]}\")\n        done\n    fi\n\n    # If we have known_hosts files to use\n    if ((${#kh[@]} + ${#khd[@]} > 0)); then\n        if ((${#kh[@]} > 0)); then\n            # https://man.openbsd.org/sshd.8#SSH_KNOWN_HOSTS_FILE_FORMAT\n            for i in \"${kh[@]}\"; do\n                while read -ra tmpkh; do\n                    ((${#tmpkh[@]} == 0)) && continue\n                    # Skip entries starting with | (hashed) and # (comment)\n                    [[ ${tmpkh[0]} == [\\|\\#]* ]] && continue\n                    # Ignore leading @foo (markers)\n                    local host_list=${tmpkh[0]}\n                    [[ ${tmpkh[0]} == @* ]] && host_list=${tmpkh[1]-}\n                    # Split entry on commas\n                    local -a hosts\n                    if _comp_split -F , hosts \"$host_list\"; then\n                        for host in \"${hosts[@]}\"; do\n                            # Skip hosts containing wildcards\n                            [[ $host == *[*?]* ]] && continue\n                            # Remove leading [\n                            host=${host#[}\n                            # Remove trailing ] + optional :port\n                            host=${host%]?(:+([0-9]))}\n                            # Add host to candidates\n                            [[ $host ]] && known_hosts+=(\"$host\")\n                        done\n                    fi\n                done <\"$i\"\n            done\n        fi\n        if ((${#khd[@]} > 0)); then\n            # Needs to look for files called\n            # .../.ssh2/key_22_<hostname>.pub\n            # dont fork any processes, because in a cluster environment,\n            # there can be hundreds of hostkeys\n            for i in \"${khd[@]}\"; do\n                if [[ $i == *key_22_*.pub && -r $i ]]; then\n                    host=${i/#*key_22_/}\n                    host=${host/%.pub/}\n                    [[ $host ]] && known_hosts+=(\"$host\")\n                fi\n            done\n        fi\n\n        # apply suffix and prefix\n        ((${#known_hosts[@]})) &&\n            _comp_compgen -v known_hosts -- -W '\"${known_hosts[@]}\"' -P \"$prefix\" -S \"$suffix\"\n    fi\n\n    # append any available aliases from ssh config files\n    if [[ ${#config[@]} -gt 0 && $aliases ]]; then\n        local -a hosts\n        if _comp_split hosts \"$(command sed -ne 's/^[[:blank:]]*[Hh][Oo][Ss][Tt][[:blank:]=]\\{1,\\}\\(.*\\)$/\\1/p' \"${config[@]}\")\"; then\n            _comp_compgen -av known_hosts -- -P \"$prefix\" \\\n                -S \"$suffix\" -W '\"${hosts[@]%%[*?%]*}\"' -X '@(\\!*|)'\n        fi\n    fi\n\n    # Add hosts reported by avahi-browse, if desired and it's available.\n    if [[ ${BASH_COMPLETION_KNOWN_HOSTS_WITH_AVAHI-} ]] &&\n        type avahi-browse &>/dev/null; then\n        # Some old versions of avahi-browse reportedly didn't have -k\n        # (even if mentioned in the manpage); those we do not support any more.\n        local generated=$(avahi-browse -cprak 2>/dev/null | _comp_awk -F ';' \\\n            '/^=/ && $5 ~ /^_(ssh|workstation)\\._tcp$/ { print $7 }' |\n            sort -u)\n        _comp_compgen -av known_hosts -- -P \"$prefix\" -S \"$suffix\" -W '$generated'\n    fi\n\n    # Add hosts reported by ruptime.\n    if type ruptime &>/dev/null; then\n        local generated=$(ruptime 2>/dev/null | _comp_awk '!/^ruptime:/ { print $1 }')\n        _comp_compgen -av known_hosts -- -W '$generated'\n    fi\n\n    # Add results of normal hostname completion, unless\n    # `BASH_COMPLETION_KNOWN_HOSTS_WITH_HOSTFILE' is set to an empty value.\n    if [[ ${BASH_COMPLETION_KNOWN_HOSTS_WITH_HOSTFILE-set} ]]; then\n        _comp_compgen -av known_hosts -- -A hostname -P \"$prefix\" -S \"$suffix\"\n    fi\n\n    ((${#known_hosts[@]})) || return 1\n\n    if [[ $ipv4 ]]; then\n        known_hosts=(\"${known_hosts[@]/*:*$suffix/}\")\n    fi\n    if [[ $ipv6 ]]; then\n        known_hosts=(\"${known_hosts[@]/+([0-9]).+([0-9]).+([0-9]).+([0-9])$suffix/}\")\n    fi\n    if [[ $ipv4 || $ipv6 ]]; then\n        for i in \"${!known_hosts[@]}\"; do\n            [[ ${known_hosts[i]} ]] || unset -v 'known_hosts[i]'\n        done\n    fi\n    ((${#known_hosts[@]})) || return 1\n\n    _comp_compgen -v known_hosts -c \"$prefix$cur\" ltrim_colon \"${known_hosts[@]}\"\n}\ncomplete -F _comp_complete_known_hosts traceroute traceroute6 \\\n    fping fping6 telnet rsh rlogin ftp dig drill ssh-installkeys showmount\n\n# Convert the word index in `words` to the index in `COMP_WORDS`.\n# @param $1           Index in the array WORDS.\n# @var[in,opt] words  Words that contain reassmbled words.\n# @var[in,opt] cword  Current word index in WORDS.\n#                     WORDS and CWORD, if any, are expected to be created by\n#                     _comp__reassemble_words.\n#\n_comp__find_original_word()\n{\n    REPLY=$1\n\n    # If CWORD or WORDS are undefined, we return the first argument without any\n    # processing.\n    [[ -v cword && -v words ]] || return 0\n\n    local reassembled_offset=$1 i=0 j\n    for ((j = 0; j < reassembled_offset; j++)); do\n        local word=${words[j]}\n        while [[ $word && i -lt ${#COMP_WORDS[@]} && $word == *\"${COMP_WORDS[i]}\"* ]]; do\n            word=${word#*\"${COMP_WORDS[i++]}\"}\n        done\n    done\n    REPLY=$i\n}\n# A meta-command completion function for commands like sudo(8), which need to\n# first complete on a command, then complete according to that command's own\n# completion definition.\n#\n# @since 2.12\n_comp_command_offset()\n{\n    # rewrite current completion context before invoking\n    # actual command completion\n\n    # obtain the word index in COMP_WORDS\n    local REPLY\n    _comp__find_original_word \"$1\"\n    local word_offset=$REPLY\n\n    # make changes to COMP_* local.  Note that bash-4.3..5.0 have a\n    # bug that `local -a arr=(\"${arr[@]}\")` fails.  We instead first\n    # assign the values of `COMP_WORDS` to another array `comp_words`.\n    local COMP_LINE=$COMP_LINE COMP_POINT=$COMP_POINT COMP_CWORD=$COMP_CWORD\n    local -a comp_words=(\"${COMP_WORDS[@]}\")\n    local -a COMP_WORDS=(\"${comp_words[@]}\")\n\n    # find new first word position, then\n    # rewrite COMP_LINE and adjust COMP_POINT\n    local i tail\n    for ((i = 0; i < word_offset; i++)); do\n        tail=${COMP_LINE#*\"${COMP_WORDS[i]}\"}\n        ((COMP_POINT -= ${#COMP_LINE} - ${#tail}))\n        COMP_LINE=$tail\n    done\n\n    # shift COMP_WORDS elements and adjust COMP_CWORD\n    COMP_WORDS=(\"${COMP_WORDS[@]:word_offset}\")\n    ((COMP_CWORD -= word_offset))\n\n    COMPREPLY=()\n    local cur\n    _comp_get_words cur\n\n    if ((COMP_CWORD == 0)); then\n        _comp_compgen_commands\n    else\n        _comp_dequote \"${COMP_WORDS[0]}\" || REPLY=${COMP_WORDS[0]}\n        local cmd=$REPLY compcmd=$REPLY\n        local cspec=$(complete -p -- \"$cmd\" 2>/dev/null)\n\n        # If we have no completion for $cmd yet, see if we have for basename\n        if [[ ! $cspec && $cmd == */* ]]; then\n            cspec=$(complete -p -- \"${cmd##*/}\" 2>/dev/null)\n            [[ $cspec ]] && compcmd=${cmd##*/}\n        fi\n        # If still nothing, just load it for the basename\n        if [[ ! $cspec ]]; then\n            compcmd=${cmd##*/}\n            _comp_load -D -- \"$compcmd\"\n            cspec=$(complete -p -- \"$compcmd\" 2>/dev/null)\n        fi\n\n        local retry_count=0\n        while true; do # loop for the retry request by status 124\n            local args original_cur=${comp_args[1]-$cur}\n            if ((${#COMP_WORDS[@]} >= 2)); then\n                args=(\"$cmd\" \"$original_cur\" \"${COMP_WORDS[-2]}\")\n            else\n                args=(\"$cmd\" \"$original_cur\")\n            fi\n\n            if [[ ! $cspec ]]; then\n                if ((${#COMPREPLY[@]} == 0)); then\n                    # XXX will probably never happen as long as completion loader loads\n                    #     *something* for every command thrown at it ($cspec != empty)\n                    _comp_complete_minimal \"${args[@]}\"\n                fi\n            elif [[ $cspec == *\\ -[CF]\\ * ]]; then\n                if [[ $cspec == *' -F '* ]]; then\n                    # complete -F <function>\n\n                    # get function name\n                    local func=${cspec#* -F }\n                    func=${func%% *}\n                    $func \"${args[@]}\"\n\n                    # restart completion (once) if function exited with 124\n                    if (($? == 124 && retry_count++ == 0)); then\n                        # Note: When the completion function returns 124, the\n                        # state of COMPREPLY is discarded.\n                        COMPREPLY=()\n\n                        cspec=$(complete -p -- \"$compcmd\" 2>/dev/null)\n\n                        # Note: When completion spec is removed after 124, we\n                        # do not generate any completions including the default\n                        # ones. This is the behavior of the original Bash\n                        # progcomp.\n                        [[ $cspec ]] || break\n\n                        continue\n                    fi\n                else\n                    # complete -C <command>\n\n                    # get command name\n                    local completer=${cspec#* -C \\'}\n\n                    # completer commands are always single-quoted\n                    if ! _comp_dequote \"'$completer\"; then\n                        _minimal \"${args[@]}\"\n                        break\n                    fi\n                    completer=${REPLY[0]}\n\n                    local -a suggestions\n\n                    local IFS=$' \\t\\n'\n                    local reset_monitor=$(shopt -po monitor) reset_lastpipe=$(shopt -p lastpipe) reset_noglob=$(shopt -po noglob)\n                    set +o monitor\n                    shopt -s lastpipe\n                    set -o noglob\n\n                    COMP_KEY=\"$COMP_KEY\" COMP_LINE=\"$COMP_LINE\" \\\n                        COMP_POINT=\"$COMP_POINT\" COMP_TYPE=\"$COMP_TYPE\" \\\n                        $completer \"${args[@]}\" | mapfile -t suggestions\n\n                    $reset_monitor\n                    $reset_lastpipe\n                    $reset_noglob\n                    _comp_unlocal IFS\n\n                    local suggestion\n                    local i=0\n                    COMPREPLY=()\n                    for suggestion in \"${suggestions[@]}\"; do\n                        COMPREPLY[i]+=${COMPREPLY[i]+$'\\n'}$suggestion\n\n                        if [[ $suggestion != *\\\\ ]]; then\n                            ((i++))\n                        fi\n                    done\n                fi\n\n                # restore initial compopts\n                local opt\n                while [[ $cspec == *\" -o \"* ]]; do\n                    # FIXME: should we take \"+o opt\" into account?\n                    cspec=${cspec#*-o }\n                    opt=${cspec%% *}\n                    compopt -o \"$opt\"\n                    cspec=${cspec#\"$opt\"}\n                done\n            else\n                cspec=${cspec#complete}\n                cspec=${cspec%%@(\"$compcmd\"|\"'${compcmd//\\'/\\'\\\\\\'\\'}'\")}\n                eval \"_comp_compgen -- $cspec\"\n            fi\n            break\n        done\n    fi\n}\n\n# A _comp_command_offset wrapper function for use when the offset is unknown.\n# Only intended to be used as a completion function directly associated\n# with a command, not to be invoked from within other completion functions.\n#\n# @since 2.12\n_comp_command()\n{\n    # We unset the shell variable `words` locally to tell\n    # `_comp_command_offset` that the index is intended to be that in\n    # `COMP_WORDS` instead of `words`.\n    local words\n    unset -v words\n\n    local offset i\n\n    # find actual offset, as position of the first non-option\n    offset=1\n    for ((i = 1; i <= COMP_CWORD; i++)); do\n        if [[ ${COMP_WORDS[i]} != -* ]]; then\n            offset=$i\n            break\n        fi\n    done\n    _comp_command_offset $offset\n}\ncomplete -F _comp_command aoss command \"do\" else eval exec ltrace nice nohup padsp \\\n    \"then\" time tsocks vsound xargs\n\n# @since 2.12\n_comp_root_command()\n{\n    local PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin\n    local _comp_root_command=$1\n    _comp_command\n}\ncomplete -F _comp_root_command fakeroot gksu gksudo kdesudo really\n\n# Return true if the completion should be treated as running as root\n#\n# @since 2.12\n_comp_as_root()\n{\n    [[ $EUID -eq 0 || ${_comp_root_command-} ]]\n}\n\n# Complete on available commands, subject to `no_empty_cmd_completion`.\n# @return True (0) if one or more completions are generated, or otherwise False\n# (1).  Note that it returns 1 even when the completion generation is canceled\n# by `shopt -s no_empty_cmd_completion`.\n#\n# @since 2.12\n_comp_compgen_commands()\n{\n    [[ ! ${cur-} ]] && shopt -q no_empty_cmd_completion && return 1\n    # -o filenames for e.g. spaces in paths to and in command names\n    _comp_compgen -- -c -o plusdirs && compopt -o filenames\n}\n\n# @since 2.12\n_comp_complete_longopt()\n{\n    local cur prev words cword was_split comp_args\n    _comp_initialize -s -- \"$@\" || return\n\n    case \"${prev,,}\" in\n        --help | --usage | --version)\n            return\n            ;;\n        --!(no-*)dir*)\n            _comp_compgen -a filedir -d\n            return\n            ;;\n        --!(no-*)@(file|path)*)\n            _comp_compgen -a filedir\n            return\n            ;;\n        --+([-a-z0-9_]))\n            local argtype=$(LC_ALL=C $1 --help 2>&1 | command sed -ne \\\n                \"s|.*$prev\\[\\{0,1\\}=[<[]\\{0,1\\}\\([-A-Za-z0-9_]\\{1,\\}\\).*|\\1|p\")\n            case ${argtype,,} in\n                *dir*)\n                    _comp_compgen -a filedir -d\n                    return\n                    ;;\n                *file* | *path*)\n                    _comp_compgen -a filedir\n                    return\n                    ;;\n            esac\n            ;;\n    esac\n\n    [[ $was_split ]] && return\n\n    if [[ $cur == -* ]]; then\n        _comp_compgen_split -- \"$(LC_ALL=C $1 --help 2>&1 |\n            while read -r line; do\n                [[ $line =~ --[A-Za-z0-9]+([-_][A-Za-z0-9]+)*=? ]] &&\n                    printf '%s\\n' \"${BASH_REMATCH[0]}\"\n            done)\"\n        [[ ${COMPREPLY-} == *= ]] && compopt -o nospace\n    elif [[ $1 == *@(rmdir|chroot) ]]; then\n        _comp_compgen -a filedir -d\n    else\n        [[ $1 == *mkdir ]] && compopt -o nospace\n        _comp_compgen -a filedir\n    fi\n}\n# makeinfo and texi2dvi are defined elsewhere.\ncomplete -F _comp_complete_longopt \\\n    a2ps awk base64 bash bc bison cat chroot colordiff cp \\\n    csplit cut date df diff dir du enscript expand fmt fold gperf \\\n    grep grub head irb ld ldd less ln ls m4 mkdir mkfifo mknod \\\n    mv netstat nl nm objcopy objdump od paste pr ptx readelf rm rmdir \\\n    sed seq shar sort split strip sum tac tail tee \\\n    texindex touch tr uname unexpand uniq units vdir wc who\n\n# @since 2.12\ndeclare -Ag _comp_xspecs\n\n# @since 2.12\n_comp_complete_filedir_xspec()\n{\n    local cur prev words cword comp_args\n    _comp_initialize -- \"$@\" || return\n    _comp_compgen_filedir_xspec \"$1\"\n}\n\n# @since 2.12\n_comp_compgen_filedir_xspec()\n{\n    _comp_compgen_tilde && return\n\n    local REPLY\n    _comp_quote_compgen \"$cur\"\n    local quoted=$REPLY\n\n    local xspec=${_comp_xspecs[${1##*/}]-${_xspecs[${1##*/}]-}}\n    local -a toks\n    _comp_compgen -v toks -c \"$quoted\" -- -d\n\n    # Munge xspec to contain uppercase version too\n    # https://lists.gnu.org/archive/html/bug-bash/2010-09/msg00036.html\n    # news://news.gmane.io/4C940E1C.1010304@case.edu\n    eval xspec=\"${xspec}\"\n    local matchop=!\n    if [[ $xspec == !* ]]; then\n        xspec=${xspec#!}\n        matchop=@\n    fi\n    xspec=\"$matchop($xspec|${xspec^^})\"\n\n    _comp_compgen -av toks -c \"$quoted\" -- -f -X \"@(|!($xspec))\"\n\n    # Try without filter if it failed to produce anything and configured to\n    [[ ${BASH_COMPLETION_FILEDIR_FALLBACK-} && ${#toks[@]} -lt 1 ]] &&\n        _comp_compgen -av toks -c \"$quoted\" -- -f\n\n    ((${#toks[@]})) || return 1\n\n    # Remove . and .. (as well as */. and */..) from suggestions, unless .. or\n    # */.. was typed explicitly by the user (for users who use tab-completion\n    # to append a slash after '..')\n    if [[ $cur != ?(*/).. ]]; then\n        _comp_compgen -Rv toks -- -X '?(*/)@(.|..)' -W '\"${toks[@]}\"' || return 1\n    fi\n\n    compopt -o filenames\n    _comp_compgen -RU toks -- -W '\"${toks[@]}\"'\n}\n\n_comp__init_install_xspec()\n{\n    local xspec=$1 cmd\n    shift\n    for cmd in \"$@\"; do\n        _comp_xspecs[$cmd]=$xspec\n    done\n}\n# bzcmp, bzdiff, bz*grep, bzless, bzmore intentionally not here, see Debian: #455510\n_comp__init_install_xspec '!*.?(t)bz?(2)' bunzip2 bzcat pbunzip2 pbzcat lbunzip2 lbzcat\n_comp__init_install_xspec '!*.@(zip|[aegjkswx]ar|exe|pk3|wsz|zargo|xpi|s[tx][cdiw]|sx[gm]|o[dt][tspgfc]|od[bm]|oxt|?(o)xps|epub|cbz|apk|aab|ipa|do[ct][xm]|p[op]t[mx]|xl[st][xm]|pyz|vsix|whl|[Ff][Cc][Ss]td)' unzip zipinfo\n_comp__init_install_xspec '*.Z' compress znew\n# zcmp, zdiff, z*grep, zless, zmore intentionally not here, see Debian: #455510\n_comp__init_install_xspec '!*.@(Z|[gGd]z|t[ag]z)' gunzip zcat\n_comp__init_install_xspec '!*.@(Z|[gGdz]z|t[ag]z)' unpigz\n_comp__init_install_xspec '!*.Z' uncompress\n# lzcmp, lzdiff intentionally not here, see Debian: #455510\n_comp__init_install_xspec '!*.@(tlz|lzma)' lzcat lzegrep lzfgrep lzgrep lzless lzmore unlzma\n_comp__init_install_xspec '!*.@(?(t)xz|tlz|lzma)' unxz xzcat\n_comp__init_install_xspec '!*.lrz' lrunzip\n_comp__init_install_xspec '!*.@(gif|jp?(e)g|miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx)' ee\n_comp__init_install_xspec '!*.@(gif|jp?(e)g|tif?(f)|png|p[bgp]m|bmp|x[bp]m|rle|rgb|pcx|fits|pm|svg)' qiv\n_comp__init_install_xspec '!*.@(gif|jp?(e)g?(2)|j2[ck]|jp[2f]|tif?(f)|png|p[bgpn]m|webp|bmp|x[bp]m|rle|rgb|pcx|fits|pm|?(e)ps)' xv\n_comp__init_install_xspec '!*.@(@(?(e)ps|?(E)PS|pdf|PDF)?(.gz|.GZ|.bz2|.BZ2|.Z))' gv ggv kghostview\n_comp__init_install_xspec '!*.@(dvi|DVI)?(.@(gz|Z|bz2))' xdvi kdvi\n_comp__init_install_xspec '!*.dvi' dvips dviselect dvitype dvipdf advi dvipdfm dvipdfmx\n_comp__init_install_xspec '!*.[pf]df' acroread gpdf xpdf\n_comp__init_install_xspec '!*.@(?(e)ps|pdf)' kpdf\n_comp__init_install_xspec '!*.@(okular|@(?(e|x)ps|?(E|X)PS|[pf]df|[PF]DF|dvi|DVI|cb[rz]|CB[RZ]|djv?(u)|DJV?(U)|dvi|DVI|gif|jp?(e)g|miff|tif?(f)|pn[gm]|p[bgp]m|bmp|xpm|ico|xwd|tga|pcx|GIF|JP?(E)G|MIFF|TIF?(F)|PN[GM]|P[BGP]M|BMP|XPM|ICO|XWD|TGA|PCX|epub|EPUB|odt|ODT|fb?(2)|FB?(2)|mobi|MOBI|g3|G3|chm|CHM|md|markdown)?(.?(gz|GZ|bz2|BZ2|xz|XZ)))' okular\n_comp__init_install_xspec '!*.pdf' epdfview pdfunite\n_comp__init_install_xspec '!*.@(cb[rz7t]|djv?(u)|?(e)ps|pdf)' zathura\n_comp__init_install_xspec '!*.@(?(e)ps|pdf)' ps2pdf ps2pdf12 ps2pdf13 ps2pdf14 ps2pdfwr\n_comp__init_install_xspec '!*.texi*' makeinfo texi2html\n_comp__init_install_xspec '!*.@(?(la)tex|texi|dtx|ins|ltx|dbj)' tex latex slitex jadetex pdfjadetex pdftex pdflatex texi2dvi xetex xelatex luatex lualatex\n_comp__init_install_xspec '!*.mp3' mpg123 mpg321 madplay\n_comp__init_install_xspec '!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmv]|OG[AGMV]|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))' xine aaxine cacaxine fbxine\n_comp__init_install_xspec '!*@(.@(mp?(e)g|MP?(E)G|wm[av]|WM[AV]|avi|AVI|asf|vob|VOB|bin|dat|divx|DIVX|vcd|ps|pes|fli|flv|FLV|fxm|FXM|viv|rm|ram|yuv|mov|MOV|qt|QT|web[am]|WEB[AM]|mp[234]|MP[234]|m?(p)4[av]|M?(P)4[AV]|mkv|MKV|og[agmv]|OG[AGMV]|opus|OPUS|t[ps]|T[PS]|m2t?(s)|M2T?(S)|mts|MTS|wav|WAV|flac|FLAC|asx|ASX|mng|MNG|srt|m[eo]d|M[EO]D|s[3t]m|S[3T]M|it|IT|xm|XM|iso|ISO)|+([0-9]).@(vdr|VDR))?(.@(crdownload|part))' kaffeine dragon totem\n_comp__init_install_xspec '!*.@(avi|asf|wmv)' aviplay\n_comp__init_install_xspec '!*.@(rm?(j)|ra?(m)|smi?(l))' realplay\n_comp__init_install_xspec '!*.@(mpg|mpeg|avi|mov|qt)' xanim\n_comp__init_install_xspec '!*.@(og[ag]|m3u|flac|spx)' ogg123\n_comp__init_install_xspec '!*.@(mp3|ogg|pls|m3u)' gqmpeg freeamp\n_comp__init_install_xspec '!*.fig' xfig\n_comp__init_install_xspec '!*.@(mid?(i)|cmf)' playmidi\n_comp__init_install_xspec '!*.@(mid?(i)|rmi|rcp|[gr]36|g18|mod|xm|it|x3m|s[3t]m|kar)' timidity\n_comp__init_install_xspec '!*.@(669|abc|am[fs]|d[bs]m|dmf|far|it|mdl|m[eo]d|mid?(i)|mt[2m]|oct|okt?(a)|p[st]m|s[3t]m|ult|umx|wav|xm)' modplugplay modplug123\n_comp__init_install_xspec '*.@([ao]|so|so.!(conf|*/*)|[rs]pm|gif|jp?(e)g|mp3|mp?(e)g|avi|asf|ogg|class)' vi vim gvim rvim view rview rgvim rgview gview emacs xemacs sxemacs kate kwrite\n_comp__init_install_xspec '!*.@(zip|z|gz|tgz)' bzme\n# konqueror not here on purpose, it's more than a web/html browser\n_comp__init_install_xspec '!*.@(?([xX]|[sS])[hH][tT][mM]?([lL]))' netscape mozilla lynx galeon dillo elinks amaya epiphany\n_comp__init_install_xspec '!*.@(sxw|stw|sxg|sgl|doc?([mx])|dot?([mx])|rtf|txt|htm|html|?(f)odt|ott|odm|pdf)' oowriter lowriter\n_comp__init_install_xspec '!*.@(sxi|sti|pps?(x)|ppt?([mx])|pot?([mx])|?(f)odp|otp)' ooimpress loimpress\n_comp__init_install_xspec '!*.@(sxc|stc|xls?([bmx])|xlw|xlt?([mx])|[ct]sv|?(f)ods|ots)' oocalc localc\n_comp__init_install_xspec '!*.@(sxd|std|sda|sdd|?(f)odg|otg)' oodraw lodraw\n_comp__init_install_xspec '!*.@(sxm|smf|mml|odf)' oomath lomath\n_comp__init_install_xspec '!*.odb' oobase lobase\n_comp__init_install_xspec '!*.[rs]pm' rpm2cpio\n_comp__init_install_xspec '!*.aux' bibtex\n_comp__init_install_xspec '!*.po' poedit gtranslator kbabel lokalize\n_comp__init_install_xspec '!*.@([Pp][Rr][Gg]|[Cc][Ll][Pp])' harbour gharbour hbpp\n_comp__init_install_xspec '!*.[Hh][Rr][Bb]' hbrun\n_comp__init_install_xspec '!*.ly' lilypond ly2dvi\n_comp__init_install_xspec '!*.@(dif?(f)|?(d)patch)?(.@([gx]z|bz2|lzma))' cdiff\n_comp__init_install_xspec '!@(*.@(ks|jks|jceks|p12|pfx|bks|ubr|gkr|cer|crt|cert|p7b|pkipath|pem|p10|csr|crl)|cacerts)' portecle\n_comp__init_install_xspec '!*.@(mp[234c]|og[ag]|@(fl|a)ac|m4[abp]|spx|tta|w?(a)v|wma|aif?(f)|asf|ape)' kid3 kid3-qt\nunset -f _comp__init_install_xspec\n\n# Minimal completion to use as fallback in _comp_complete_load.\n# TODO:API: rename per conventions\n_comp_complete_minimal()\n{\n    local cur prev words cword comp_args\n    _comp_initialize -- \"$@\" || return\n    compopt -o bashdefault -o default\n}\n# Complete the empty string to allow completion of '>', '>>', and '<' on < 4.3\n# https://lists.gnu.org/archive/html/bug-bash/2012-01/msg00045.html\ncomplete -F _comp_complete_minimal ''\n\n# Initialize the variable \"_comp__base_directory\"\n# @var[out] _comp__base_directory\n_comp__init_base_directory()\n{\n    local REPLY\n    _comp_abspath \"${BASH_SOURCE[0]-./bash_completion}\"\n    _comp__base_directory=${REPLY%/*}\n    [[ $_comp__base_directory ]] || _comp__base_directory=/\n    unset -f \"$FUNCNAME\"\n}\n_comp__init_base_directory\n\n# @since 2.12\n_comp_load()\n{\n    local flag_fallback_default=\"\" IFS=$' \\t\\n'\n    local OPTIND=1 OPTARG=\"\" OPTERR=0 opt\n    while getopts ':D' opt \"$@\"; do\n        case $opt in\n            D) flag_fallback_default=set ;;\n            *)\n                echo \"bash_completion: $FUNCNAME: usage error\" >&2\n                return 2\n                ;;\n        esac\n    done\n    shift \"$((OPTIND - 1))\"\n\n    local cmd=$1 cmdname=${1##*/} dir compfile\n    local -a paths\n    [[ $cmdname ]] || return 1\n\n    local backslash=\n    if [[ $cmd == \\\\* ]]; then\n        cmd=${cmd:1}\n        # If we already have a completion for the \"real\" command, use it\n        $(complete -p -- \"$cmd\" 2>/dev/null || echo false) \"\\\\$cmd\" && return 0\n        backslash=\\\\\n    fi\n\n    # Resolve absolute path to $cmd\n    local REPLY pathcmd origcmd=$cmd\n    if pathcmd=$(type -P -- \"$cmd\"); then\n        _comp_abspath \"$pathcmd\"\n        cmd=$REPLY\n    fi\n\n    local -a dirs=()\n\n    # Lookup order:\n    # 1) From BASH_COMPLETION_USER_DIR (e.g. ~/.local/share/bash-completion):\n    # User installed completions.\n    if [[ ${BASH_COMPLETION_USER_DIR-} ]]; then\n        _comp_split -F : paths \"$BASH_COMPLETION_USER_DIR\" &&\n            dirs+=(\"${paths[@]/%//completions}\")\n    else\n        dirs=(\"${XDG_DATA_HOME:-$HOME/.local/share}/bash-completion/completions\")\n    fi\n\n    # 2) From the location of bash_completion: Completions relative to the main\n    # script. This is primarily for run-in-place-from-git-clone setups, where\n    # we want to prefer in-tree completions over ones possibly coming with a\n    # system installed bash-completion. (Due to usual install layouts, this\n    # often hits the correct completions in system installations, too.)\n    dirs+=(\"$_comp__base_directory/completions\")\n\n    # 3) From bin directories extracted from the specified path to the command,\n    # the real path to the command, and $PATH\n    paths=()\n    [[ $cmd == /* ]] && paths+=(\"${cmd%/*}\")\n    _comp_realcommand \"$cmd\" && paths+=(\"${REPLY%/*}\")\n    _comp_split -aF : paths \"$PATH\"\n    for dir in \"${paths[@]%/}\"; do\n        [[ $dir == ?*/@(bin|sbin) ]] &&\n            dirs+=(\"${dir%/*}/share/bash-completion/completions\")\n    done\n\n    # 4) From XDG_DATA_DIRS or system dirs (e.g. /usr/share, /usr/local/share):\n    # Completions in the system data dirs.\n    _comp_split -F : paths \"${XDG_DATA_DIRS:-/usr/local/share:/usr/share}\" &&\n        dirs+=(\"${paths[@]/%//bash-completion/completions}\")\n\n    # Set up default $IFS in case loaded completions depend on it,\n    # as well as for $compspec invocation below.\n    local IFS=$' \\t\\n'\n\n    # Look up and source\n    shift\n    local i prefix compspec\n    for prefix in \"\" _; do # Regular from all dirs first, then fallbacks\n        for i in ${!dirs[*]}; do\n            dir=${dirs[i]}\n            if [[ ! -d $dir ]]; then\n                unset -v 'dirs[i]'\n                continue\n            fi\n            for compfile in \"$prefix$cmdname\" \"$prefix$cmdname.bash\"; do\n                compfile=\"$dir/$compfile\"\n                # Avoid trying to source dirs as long as we support bash < 4.3\n                # to avoid an fd leak; https://bugzilla.redhat.com/903540\n                if [[ -d $compfile ]]; then\n                    # Do not warn with . or .. (especially the former is common)\n                    [[ $compfile == */.?(.) ]] ||\n                        echo \"bash_completion: $compfile: is a directory\" >&2\n                elif [[ -e $compfile ]] && . \"$compfile\" \"$cmd\" \"$@\"; then\n                    # At least $cmd is expected to have a completion set when\n                    # we return successfully; see if it already does\n                    if compspec=$(complete -p -- \"$cmd\" 2>/dev/null); then\n                        # $cmd is the case in which we do backslash processing\n                        [[ $backslash ]] && eval \"$compspec \\\"\\$backslash\\$cmd\\\"\"\n                        # If invoked without path, that one should be set, too\n                        # ...but let's not overwrite an existing one, if any\n                        [[ $origcmd != */* ]] &&\n                            ! complete -p -- \"$origcmd\" &>/dev/null &&\n                            eval \"$compspec \\\"\\$origcmd\\\"\"\n                        return 0\n                    fi\n                    # If not, see if we got one for $cmdname\n                    if [[ $cmdname != \"$cmd\" ]] && compspec=$(complete -p -- \"$cmdname\" 2>/dev/null); then\n                        # Use that for $cmd too, if we have a full path to it\n                        [[ $cmd == /* ]] && eval \"$compspec \\\"\\$cmd\\\"\"\n                        return 0\n                    fi\n                    # Nothing expected was set, continue lookup\n                fi\n            done\n        done\n    done\n\n    # Look up simple \"xspec\" completions\n    [[ -v _comp_xspecs[$cmdname] || -v _xspecs[$cmdname] ]] &&\n        complete -F _comp_complete_filedir_xspec \"$cmdname\" \"$backslash$cmdname\" && return 0\n\n    if [[ $flag_fallback_default ]]; then\n        complete -F _comp_complete_minimal -- \"$origcmd\" && return 0\n    fi\n\n    return 1\n}\n\n# set up dynamic completion loading\n# @since 2.12\n_comp_complete_load()\n{\n    # $1=_EmptycmD_ already for empty cmds in bash 4.3, set to it for earlier\n    local cmd=${1:-_EmptycmD_}\n\n    # Pass -D to define *something*, or otherwise there will be no completion\n    # at all.\n    _comp_load -D -- \"$cmd\" && return 124\n} &&\n    complete -D -F _comp_complete_load\n\n# Function for loading and calling functions from dynamically loaded\n# completion files that may not have been sourced yet.\n# @param $1 completion file to load function from in case it is missing\n# @param $2 the xfunc name.  When it does not start with `_',\n#   `_comp_xfunc_${1//[^a-zA-Z0-9_]/_}_$2' is used for the actual name of the\n#   shell function.\n# @param $3... if any, specifies the arguments that are passed to the xfunc.\n# @since 2.12\n_comp_xfunc()\n{\n    local xfunc_name=$2\n    [[ $xfunc_name == _* ]] ||\n        xfunc_name=_comp_xfunc_${1//[^a-zA-Z0-9_]/_}_$xfunc_name\n    declare -F -- \"$xfunc_name\" &>/dev/null || _comp_load -- \"$1\"\n    \"$xfunc_name\" \"${@:3}\"\n}\n\n# Call a POSIX-compatible awk.  Solaris awk is not POSIX-compliant, but Solaris\n# provides a POSIX-compatible version through /usr/xpg4/bin/awk.  We switch the\n# implementation to /usr/xpg4/bin/awk in Solaris if any.\n# @since 2.12\nif [[ $OSTYPE == *solaris* && -x /usr/xpg4/bin/awk ]]; then\n    _comp_awk()\n    {\n        /usr/xpg4/bin/awk \"$@\"\n    }\nelse\n    _comp_awk()\n    {\n        command awk \"$@\"\n    }\nfi\n\n# List custom/extra completion files to source on the startup\n## @param $1 path Path to \"bash_completion\"\n## @var[out] _comp__init_startup_configs\n_comp__init_collect_startup_configs()\n{\n    local base_path=${1:-${BASH_SOURCE[1]}}\n    _comp__init_startup_configs=()\n\n    # source compat completion directory definitions\n    local -a compat_dirs=()\n    local compat_dir\n    if [[ ${BASH_COMPLETION_COMPAT_DIR-} ]]; then\n        compat_dirs+=(\"$BASH_COMPLETION_COMPAT_DIR\")\n    else\n        compat_dirs+=(/etc/bash_completion.d)\n        # Similarly as for the \"completions\" dir, look up from relative to\n        # bash_completion, primarily for installed-with-prefix and\n        # run-in-place-from-git-clone setups.  Notably we do it after the\n        # system location here, in order to prefer in-tree variables and\n        # functions.\n        if [[ $_comp__base_directory == */share/bash-completion ]]; then\n            compat_dir=${_comp__base_directory%/share/bash-completion}/etc/bash_completion.d\n        else\n            compat_dir=$_comp__base_directory/bash_completion.d\n        fi\n        [[ ${compat_dirs[0]} == \"$compat_dir\" ]] ||\n            compat_dirs+=(\"$compat_dir\")\n    fi\n    for compat_dir in \"${compat_dirs[@]}\"; do\n        [[ -d $compat_dir && -r $compat_dir && -x $compat_dir ]] || continue\n        local compat_files\n        _comp_expand_glob compat_files '\"$compat_dir\"/*'\n        local compat_file\n        for compat_file in \"${compat_files[@]}\"; do\n            [[ ${compat_file##*/} != @($_comp_backup_glob|Makefile*|${BASH_COMPLETION_COMPAT_IGNORE-}) &&\n                -f $compat_file && -r $compat_file ]] &&\n                _comp__init_startup_configs+=(\"$compat_file\")\n        done\n    done\n\n    # source user completion file\n    #\n    # Remark: We explicitly check that $user_completion is not '/dev/null'\n    #   since /dev/null may be a regular file in broken systems and can contain\n    #   arbitrary garbages of suppressed command outputs.\n    local user_file=${BASH_COMPLETION_USER_FILE:-~/.bash_completion}\n    [[ $user_file != \"$base_path\" && $user_file != /dev/null && -r $user_file && -f $user_file ]] &&\n        _comp__init_startup_configs+=(\"$user_file\")\n\n    unset -f \"$FUNCNAME\"\n}\n_comp__init_collect_startup_configs \"$BASH_SOURCE\"\n# shellcheck disable=SC2154\nfor _comp_init_startup_config in \"${_comp__init_startup_configs[@]}\"; do\n    . \"$_comp_init_startup_config\"\ndone\nunset -v _comp__init_startup_configs _comp_init_startup_config\nunset -f have\nunset -v have\n\nset $_comp__init_original_set_v\nunset -v _comp__init_original_set_v\n\n# ex: filetype=sh\n"
        },
        {
          "name": "bash_completion.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "bash_completion.sh.in",
          "type": "blob",
          "size": 0.7158203125,
          "content": "# shellcheck shell=sh disable=SC1091,SC2166,SC2268,SC3028,SC3044,SC3054\n# Check for interactive bash and that we haven't already been sourced.\nif [ \"x${BASH_VERSION-}\" != x -a \"x${PS1-}\" != x -a \"x${BASH_COMPLETION_VERSINFO-}\" = x ]; then\n\n    # Check for recent enough version of bash.\n    if [ \"${BASH_VERSINFO[0]}\" -gt 4 ] ||\n        [ \"${BASH_VERSINFO[0]}\" -eq 4 -a \"${BASH_VERSINFO[1]}\" -ge 2 ]; then\n        [ -r \"${XDG_CONFIG_HOME:-$HOME/.config}/bash_completion\" ] &&\n            . \"${XDG_CONFIG_HOME:-$HOME/.config}/bash_completion\"\n        if shopt -q progcomp && [ -r @datadir@/@PACKAGE@/bash_completion ]; then\n            # Source completion code.\n            . @datadir@/@PACKAGE@/bash_completion\n        fi\n    fi\n\nfi\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 1.046875,
          "content": "AC_PREREQ([2.60])\nAC_INIT([bash-completion], [2.16.0]) dnl x-release-please-version\ndnl tar-pax for portable UTF-8 handling\nAM_INIT_AUTOMAKE([\n    foreign dist-xz no-dist-gzip tar-pax -Wall -Wno-portability -Werror\n])\nAC_PROG_LN_S\nAC_PROG_MKDIR_P\nAC_PROG_SED\nAC_ARG_WITH([pytest],[  --with-pytest=executable],[PYTEST=\"$withval\"])\nif test \"x$PYTEST\" = x; then\n    AC_CHECK_PROGS([PYTEST],[pytest pytest-3],[pytest])\nfi\n\nAC_CANONICAL_HOST\n\ninstall_bsd=\ninstall_freebsd=\ninstall_solaris=\ncase ${host_os} in\n    *bsd*)\n        install_bsd=yes\n        case ${host_os} in\n            *freebsd*)\n                install_freebsd=yes ;;\n        esac ;;\n    *solaris*)\n        install_solaris=yes ;;\nesac\n\nAM_CONDITIONAL([BSD], [test \"${install_bsd}\" = yes])\nAM_CONDITIONAL([FREEBSD], [test \"${install_freebsd}\" = yes])\nAM_CONDITIONAL([SOLARIS], [test \"${install_solaris}\" = yes])\n\nAC_CONFIG_FILES([\nMakefile\ncompletions/Makefile\ndoc/Makefile\nhelpers/Makefile\ntest/Makefile\ntest/fallback/Makefile\ntest/fallback/completions/Makefile\ntest/t/Makefile\ntest/t/unit/Makefile\n])\nAC_OUTPUT\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.52734375,
          "content": "[tool.ruff]\nline-length = 79\ntarget-version = \"py37\"\nlint.select = [\"E\", \"F\", \"B\", \"I\"]\nlint.ignore = [\n    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules\n    # (keep order of ignores here same as ^there for maintainability)\n    \"W191\",\n    \"E111\",\n    \"E114\",\n    \"E117\",\n    \"D206\",\n    \"D300\",\n    \"Q000\",\n    \"Q001\",\n    \"Q002\",\n    \"Q003\",\n    \"COM812\",\n    \"COM819\",\n    \"ISC001\",\n    \"ISC002\",\n    \"E501\",\n]\nlint.isort.known-first-party = [\"conftest\"]\nlint.isort.known-third-party = [\"pexpect\", \"pytest\"]\nfix = true\n"
        },
        {
          "name": "setup-symlinks.sh",
          "type": "blob",
          "size": 0.1416015625,
          "content": "#!/bin/sh -eu\n\ntargetdir=$1\nshift\ntarget=$1\nshift\n\nfor file in \"$@\"; do\n    rm -f \"$targetdir/$file\"\n    ln -s \"$target\" \"$targetdir/$file\"\ndone\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.txt",
          "type": "blob",
          "size": 0.0068359375,
          "content": "2.16.0\n"
        }
      ]
    }
  ]
}