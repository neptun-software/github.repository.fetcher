{
  "metadata": {
    "timestamp": 1736568307643,
    "page": 213,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jpetazzo/nsenter",
      "stars": 2594,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6044921875,
          "content": "FROM debian:jessie\nENV VERSION 2.33\nRUN apt-get update -q\nRUN apt-get install -qy curl build-essential\nRUN mkdir /src\nWORKDIR /src\nRUN curl -L https://www.kernel.org/pub/linux/utils/util-linux/v$VERSION/util-linux-$VERSION.tar.gz \\\n     | tar -zxf-\nRUN ln -s util-linux-$VERSION util-linux\nWORKDIR /src/util-linux\nRUN ./configure --without-ncurses\nRUN make LDFLAGS=-all-static nsenter\nRUN cp nsenter /\nADD docker-enter /docker-enter\nADD installer /installer\nCMD /installer\n# Now build the importenv helper\nWORKDIR /src\nADD importenv.c /src/importenv.c\nRUN make LDFLAGS=-static CFLAGS=-Wall importenv\nRUN cp importenv /\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6240234375,
          "content": "# Looking to start a shell inside a Docker container?\n\nStarting from Docker 1.3 you can use [Docker exec](https://docs.docker.com/reference/commandline/cli/#exec) to enter a Docker container. Example:\n\n    docker exec -it CONTAINER_NAME /bin/bash\n\nThere are differences between nsenter and docker exec; namely, nsenter doesn't enter the cgroups, and therefore evades resource limitations. The potential benefit of this would be debugging and external audit, but  for remote access, **docker exec is the current recommended approach**.\n\n**Important notice:** this repository was useful in the early days of Docker, because `nsenter` was missing from major distributions back then. `nsenter` was written in early 2013, and included in `util-linux` release 2.23. If we look at Ubuntu LTS releases, `trusty` (14.04) shipped `util-linux` 2.20, and `xenial` (16.04) shipped 2.27. In other words, if you were using Ubuntu LTS, you had to wait until 2016 to get `nsenter` through the main, official packages. That being said, all modern distros now ship with `nsenter`, and this repository is no longer useful, except for historical or curiosity purposes. **It is no longer maintained.**\n\n\n## nsenter in a can\n\nThis is a small Docker recipe to build `nsenter` easily and install it in your\nsystem.\n\n\n## What is `nsenter`?\n\nIt is a small tool allowing to `enter` into `n`ame`s`paces. Technically,\nit can enter existing namespaces, or spawn a process into a new set of\nnamespaces. \"What are those namespaces you're blabbering about?\"\nWe are talking about [container namespaces].\n\n`nsenter` can do many useful things, but the main reason why I'm so\nexcited about it is because it lets you [enter into a Docker container].\n\n\n## Why build `nsenter` in a container?\n\nThis is because my preferred distros (Debian and Ubuntu) ship with an\noutdated version of `util-linux` (the package that should contain `nsenter`).\nTherefore, if you need `nsenter` on those distros, you have to juggle with\nAPT repository, or compile from source, or… Ain't nobody got time for that.\n\nI'm going to make a very bold assumption: if you landed here, it's because\nyou want to enter a Docker container. Therefore, you won't mind if my\nmethod to build `nsenter` uses Docker itself.\n\n\n## How do I install `nsenter` with this?\n\nIf you want to install `nsenter` into `/usr/local/bin`, just do this:\n\n    docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n\nThe `jpetazzo/nsenter` container will detect that `/target` is a\nmountpoint, and it will copy the `nsenter` binary into it.\n\nIf you don't trust me, and prefer to extract the `nsenter` binary,\nrather than allowing my container to potentially wreak havoc into\nyour system's `$PATH`, you can also do this:\n\n    docker run --rm jpetazzo/nsenter cat /nsenter > /tmp/nsenter && chmod +x /tmp/nsenter\n\nThen do whatever you want with the binary in `/tmp/nsenter`.\n\n\n##  How do I *use* `nsenter`?\n\nFirst, figure out the PID of the container you want to enter:\n\n    PID=$(docker inspect --format {{.State.Pid}} <container_name_or_ID>)\n\nThen enter the container:\n\n    nsenter --target $PID --mount --uts --ipc --net --pid\n\n\n## What's that docker-enter thing?\n\nIt's just a small shell script that wraps up the steps described above into\na tiny helper. It takes the name or ID of a container and optionally the name\nof a program to execute inside the namespace. If no command is specified a\nshell will be invoked instead.\n\n    # list the root filesystem\n    docker-enter my_awesome_container ls -la\n\n\n## Docker toolbox usage for OS X or Windows user\n\n\n### SSH to the Docker Toolbox virtual machine\n\n    docker-machine ssh default\n\n\n### Install nsenter, docker-enter, and importenv into the VM\n\n    docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n\nYou can also install `nsenter` to another folder. In that case, you will\nneed to specify the full path of `nsenter` to run it.\n\n    docker run --rm -v /tmp:/target jpetazzo/nsenter\n\n\n### Using nsenter\n\nList running containers:\n\n    docker ps\n\nIdentify the ID of the container that you want to get into; and retrieve\nits associated PID:\n\n    PID=$(docker inspect --format {{.State.Pid}} 08a2a025e05f)\n\nEnter the container:\n\n    sudo nsenter --target $PID --mount --uts --ipc --net --pid\n\nRemember to run those commands in the Docker Toolbox virtual machine; not\nin your host environment.\n\n\n### Using docker-enter\n\nWith `docker-enter`, you don't need to lookup the container PID.\n\nYou can get a shell inside the container:\n\n    docker-enter 08a2a025e05f\n\nOr run commands directly:\n\n    docker-enter 08a2a025e05f ls /var/log\n    docker-enter 08a2a025e05f df -h\n\n\n## docker-enter with boot2docker\n\nIf you are using boot2docker, you can use the function below, to:\n\n- install `nsenter` and `docker-enter` into boot2docker's /var/lib/boot2docker/ directory,\n  so they survive restarts.\n- execute `docker-enter` inside of boot2docker combined with ssh\n\n```\ndocker-enter() {\n  boot2docker ssh '[ -f /var/lib/boot2docker/nsenter ] || docker run --rm -v /var/lib/boot2docker/:/target jpetazzo/nsenter'\n  boot2docker ssh -t sudo /var/lib/boot2docker/docker-enter \"$@\"\n}\n```\n\nYou can use it directly from your host (OS X/Windows), no need to ssh into boot2docker.\n\n\n## Caveats\n\n- This only works on Intel 64 bits platforms. It should be relatively\n  easy to adapt to other architectures, though.\n- `nsenter` still needs to run from the host; it cannot run inside a\n  container (yet).\n\n\n[container namespaces]: https://www.youtube.com/watch?v=sK5i-N34im8\n[enter into a Docker container]: http://jpetazzo.github.io/2014/03/23/lxc-attach-nsinit-nsenter-docker-0-9/\n[Debugging a Docker container]: http://blog.loof.fr/2014/06/debugging-docker-container.html\n[Nicolas De Loof]: https://twitter.com/ndeloof\n"
        },
        {
          "name": "docker-enter",
          "type": "blob",
          "size": 1.412109375,
          "content": "#!/bin/sh\n\nif [ -e $(dirname \"$0\")/nsenter ]; then\n    # with boot2docker, nsenter is not in the PATH but it is in the same folder\n    NSENTER=$(dirname \"$0\")/nsenter\nelse\n    NSENTER=nsenter\nfi\n\nif [ -e $(dirname \"$0\")/importenv ]; then\n    # with boot2docker, importenv is not in the PATH but it is in the same folder\n    IMPORTENV=$(dirname \"$0\")/importenv\nelse\n    IMPORTENV=importenv\nfi\n\nif [ -z \"$1\" ]; then\n    echo \"Usage: `basename \"$0\"` CONTAINER [COMMAND [ARG]...]\"\n    echo \"\"\n    echo \"Enters the Docker CONTAINER and executes the specified COMMAND.\"\n    echo \"If COMMAND is not specified, runs an interactive shell in CONTAINER.\"\n    exit\nfi\n\nPID=$(docker inspect --format \"{{.State.Pid}}\" \"$1\")\n[ -z \"$PID\" ] && exit 1\nshift\n\nif [ \"$(id -u)\" -ne \"0\" ]; then\n    which sudo > /dev/null\n    if [ \"$?\" -eq \"0\" ]; then\n      LAZY_SUDO=\"sudo \"\n    else\n      echo \"Warning: Cannot find sudo; Invoking nsenter as the user $USER.\" >&2\n    fi\nfi\n\nENVIRON=\"/proc/$PID/environ\"\n\n# Prepare nsenter flags\nOPTS=\"--target $PID --mount --uts --ipc --net --pid --\"\n\n# env is to clear all host environment variables and set then anew\nif [ $# -lt 1 ]; then\n    # No arguments, default to `su` which executes the default login shell\n    $LAZY_SUDO \"$IMPORTENV\" \"$ENVIRON\" \"$NSENTER\" $OPTS su -m root\nelse\n    # Has command\n    # \"$@\" is magic in bash, and needs to be in the invocation\n    $LAZY_SUDO \"$IMPORTENV\" \"$ENVIRON\" \"$NSENTER\" $OPTS \"$@\"\nfi\n"
        },
        {
          "name": "importenv.c",
          "type": "blob",
          "size": 1.0986328125,
          "content": "#define _GNU_SOURCE\n#include <errno.h>\n#include <fcntl.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <unistd.h>\n\nconst int MAX_ENV_SIZE = 1024*1024;\nconst int MAX_ENV_VARS = 1024;\n\nint main (int argc, char* argv[]) {\n    if (argc < 3) {\n\tprintf(\"Syntax: %s <environ-file> <cmd> [args...]\\n\", argv[0]);\n\texit(1);\n    }\n    int fd = open(argv[1], O_RDONLY);\n    if (-1 == fd) {\n\tperror(\"open\");\n\texit(1);\n    }\n    char env[MAX_ENV_SIZE+2];\n    int env_size = read(fd, env, MAX_ENV_SIZE);\n    if (-1 == env_size) {\n\tperror(\"read\");\n\texit(1);\n    }\n    if (MAX_ENV_SIZE == env_size) {\n\tprintf(\"WARNING: environment bigger than %d bytes. It has been truncated.\\n\", MAX_ENV_SIZE);\n    }\n    char* envp[MAX_ENV_VARS];\n    int i;\n    char *c;\n    for (i=0, c=env; i<MAX_ENV_VARS && *c; i++, c+=strlen(c)+1) {\n\tenvp[i] = c;\n    }\n    if (i == MAX_ENV_VARS) {\n\tprintf(\"WARNING: more than %d vars. Some have been clobbered.\\n\", MAX_ENV_VARS);\n    }\n    if (-1 == execvpe(argv[2], argv+2, envp)) {\n\tperror(\"exec\");\n\texit(1);\n    }\n    // Unreachable\n    exit(42);\n}\n"
        },
        {
          "name": "installer",
          "type": "blob",
          "size": 0.4130859375,
          "content": "#!/bin/sh\nif mountpoint -q /target; then\n\techo \"Installing nsenter to /target\"\n\tcp /nsenter /target\n\techo \"Installing docker-enter to /target\"\n\tcp /docker-enter /target\n\techo \"Installing importenv to /target\"\n\tcp /importenv /target\nelse\n\techo \"/target is not a mountpoint.\"\n\techo \"You can either:\"\n\techo \"- re-run this container with -v /usr/local/bin:/target\"\n\techo \"- extract the nsenter binary (located at /nsenter)\"\nfi\n"
        }
      ]
    }
  ]
}