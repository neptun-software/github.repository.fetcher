{
  "metadata": {
    "timestamp": 1736568481581,
    "page": 460,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jlesage/docker-firefox",
      "stars": 1789,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "DOCKERHUB.md",
          "type": "blob",
          "size": 2.791015625,
          "content": "# Docker container for Firefox\n[![Release](https://img.shields.io/github/release/jlesage/docker-firefox.svg?logo=github&style=for-the-badge)](https://github.com/jlesage/docker-firefox/releases/latest)\n[![Docker Image Size](https://img.shields.io/docker/image-size/jlesage/firefox/latest?logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox/tags)\n[![Docker Pulls](https://img.shields.io/docker/pulls/jlesage/firefox?label=Pulls&logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox)\n[![Docker Stars](https://img.shields.io/docker/stars/jlesage/firefox?label=Stars&logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/jlesage/docker-firefox/build-image.yml?logo=github&branch=master&style=for-the-badge)](https://github.com/jlesage/docker-firefox/actions/workflows/build-image.yml)\n[![Source](https://img.shields.io/badge/Source-GitHub-blue?logo=github&style=for-the-badge)](https://github.com/jlesage/docker-firefox)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?style=for-the-badge)](https://paypal.me/JocelynLeSage)\n\nThis is a Docker container for [Firefox](https://www.mozilla.org/firefox/).\n\nThe GUI of the application is accessed through a modern web browser (no\ninstallation or configuration needed on the client side) or via any VNC client.\n\n---\n\n[![Firefox logo](https://images.weserv.nl/?url=raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/firefox-icon.png&w=110)](https://www.mozilla.org/firefox/)[![Firefox](https://images.placeholders.dev/?width=224&height=110&fontFamily=monospace&fontWeight=400&fontSize=52&text=Firefox&bgColor=rgba(0,0,0,0.0)&textColor=rgba(121,121,121,1))](https://www.mozilla.org/firefox/)\n\nMozilla Firefox is a free and open-source web browser developed by Mozilla\nFoundation and its subsidiary, Mozilla Corporation.\n\n---\n\n## Quick Start\n\n**NOTE**:\n    The Docker command provided in this quick start is given as an example\n    and parameters should be adjusted to your need.\n\nLaunch the Firefox docker container with the following command:\n```shell\ndocker run -d \\\n    --name=firefox \\\n    -p 5800:5800 \\\n    -v /docker/appdata/firefox:/config:rw \\\n    jlesage/firefox\n```\n\nWhere:\n\n  - `/docker/appdata/firefox`: This is where the application stores its configuration, states, log and any files needing persistency.\n\nBrowse to `http://your-host-ip:5800` to access the Firefox GUI.\n\n## Documentation\n\nFull documentation is available at https://github.com/jlesage/docker-firefox.\n\n## Support or Contact\n\nHaving troubles with the container or have questions?  Please\n[create a new issue].\n\nFor other great Dockerized applications, see https://jlesage.github.io/docker-apps.\n\n[create a new issue]: https://github.com/jlesage/docker-firefox/issues\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.9287109375,
          "content": "#\n# firefox Dockerfile\n#\n# https://github.com/jlesage/docker-firefox\n#\n\n# Build the membarrier check tool.\nFROM alpine:3.14 AS membarrier\nWORKDIR /tmp\nCOPY membarrier_check.c .\nRUN apk --no-cache add build-base linux-headers\nRUN gcc -static -o membarrier_check membarrier_check.c\nRUN strip membarrier_check\n\n# Pull base image.\nFROM jlesage/baseimage-gui:alpine-3.21-v4.6.7\n\n# Docker image version is provided via build arg.\nARG DOCKER_IMAGE_VERSION=\n\n# Define software versions.\nARG FIREFOX_VERSION=133.0-r0\n#ARG PROFILE_CLEANER_VERSION=2.36\n\n# Define software download URLs.\n#ARG PROFILE_CLEANER_URL=https://github.com/graysky2/profile-cleaner/raw/v${PROFILE_CLEANER_VERSION}/common/profile-cleaner.in\n\n# Define working directory.\nWORKDIR /tmp\n\n# Install Firefox.\nRUN \\\n#    add-pkg --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \\\n#            --repository http://dl-cdn.alpinelinux.org/alpine/edge/community \\\n#            --upgrade firefox=${FIREFOX_VERSION}\n     add-pkg firefox=${FIREFOX_VERSION}\n\n# Install extra packages.\nRUN \\\n    add-pkg \\\n        # WebGL support.\n        mesa-dri-gallium \\\n        # Audio support.\n        libpulse \\\n        # Icons used by folder/file selection window (when saving as).\n        adwaita-icon-theme \\\n        # A font is needed.\n        font-dejavu \\\n        # The following package is used to send key presses to the X process.\n        xdotool \\\n        && \\\n    # Remove unneeded icons.\n    find /usr/share/icons/Adwaita -type d -mindepth 1 -maxdepth 1 -not -name 16x16 -not -name scalable -exec rm -rf {} ';' && \\\n    true\n\n# Install profile-cleaner.\n#RUN \\\n#    add-pkg --virtual build-dependencies curl && \\\n#    curl -# -L -o /usr/bin/profile-cleaner {$PROFILE_CLEANER_URL} && \\\n#    sed-patch 's/@VERSION@/'${PROFILE_CLEANER_VERSION}'/' /usr/bin/profile-cleaner && \\\n#    chmod +x /usr/bin/profile-cleaner && \\\n#    add-pkg \\\n#        bash \\\n#        file \\\n#        coreutils \\\n#        bc \\\n#        parallel \\\n#        sqlite \\\n#        && \\\n#    # Cleanup.\n#    del-pkg build-dependencies && \\\n#    rm -rf /tmp/* /tmp/.[!.]*\n\n# Generate and install favicons.\nRUN \\\n    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/firefox-icon.png && \\\n    install_app_icon.sh \"$APP_ICON_URL\"\n\n# Add files.\nCOPY rootfs/ /\nCOPY --from=membarrier /tmp/membarrier_check /usr/bin/\n\n# Set internal environment variables.\nRUN \\\n    set-cont-env APP_NAME \"Firefox\" && \\\n    set-cont-env APP_VERSION \"$FIREFOX_VERSION\" && \\\n    set-cont-env DOCKER_IMAGE_VERSION \"$DOCKER_IMAGE_VERSION\" && \\\n    true\n\n# Set public environment variables.\nENV \\\n    FF_OPEN_URL= \\\n    FF_KIOSK=0 \\\n    FF_CUSTOM_ARGS=\n\n# Metadata.\nLABEL \\\n      org.label-schema.name=\"firefox\" \\\n      org.label-schema.description=\"Docker container for Firefox\" \\\n      org.label-schema.version=\"${DOCKER_IMAGE_VERSION:-unknown}\" \\\n      org.label-schema.vcs-url=\"https://github.com/jlesage/docker-firefox\" \\\n      org.label-schema.schema-version=\"1.0\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2024 Jocelyn Le Sage\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 31.55859375,
          "content": "# Docker container for Firefox\n[![Release](https://img.shields.io/github/release/jlesage/docker-firefox.svg?logo=github&style=for-the-badge)](https://github.com/jlesage/docker-firefox/releases/latest)\n[![Docker Image Size](https://img.shields.io/docker/image-size/jlesage/firefox/latest?logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox/tags)\n[![Docker Pulls](https://img.shields.io/docker/pulls/jlesage/firefox?label=Pulls&logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox)\n[![Docker Stars](https://img.shields.io/docker/stars/jlesage/firefox?label=Stars&logo=docker&style=for-the-badge)](https://hub.docker.com/r/jlesage/firefox)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/jlesage/docker-firefox/build-image.yml?logo=github&branch=master&style=for-the-badge)](https://github.com/jlesage/docker-firefox/actions/workflows/build-image.yml)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?style=for-the-badge)](https://paypal.me/JocelynLeSage)\n\nThis project implements a Docker container for [Firefox](https://www.mozilla.org/firefox/).\n\nThe GUI of the application is accessed through a modern web browser (no\ninstallation or configuration needed on the client side) or via any VNC client.\n\n---\n\n[![Firefox logo](https://images.weserv.nl/?url=raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/firefox-icon.png&w=110)](https://www.mozilla.org/firefox/)[![Firefox](https://images.placeholders.dev/?width=224&height=110&fontFamily=monospace&fontWeight=400&fontSize=52&text=Firefox&bgColor=rgba(0,0,0,0.0)&textColor=rgba(121,121,121,1))](https://www.mozilla.org/firefox/)\n\nMozilla Firefox is a free and open-source web browser developed by Mozilla\nFoundation and its subsidiary, Mozilla Corporation.\n\n---\n\n## Table of Content\n\n   * [Quick Start](#quick-start)\n   * [Usage](#usage)\n      * [Environment Variables](#environment-variables)\n         * [Deployment Considerations](#deployment-considerations)\n      * [Data Volumes](#data-volumes)\n      * [Ports](#ports)\n      * [Changing Parameters of a Running Container](#changing-parameters-of-a-running-container)\n   * [Docker Compose File](#docker-compose-file)\n   * [Docker Image Versioning](#docker-image-versioning)\n   * [Docker Image Update](#docker-image-update)\n      * [Synology](#synology)\n      * [unRAID](#unraid)\n   * [User/Group IDs](#usergroup-ids)\n   * [Accessing the GUI](#accessing-the-gui)\n   * [Security](#security)\n      * [SSVNC](#ssvnc)\n      * [Certificates](#certificates)\n      * [VNC Password](#vnc-password)\n      * [Web Authentication](#web-authentication)\n         * [Configuring Users Credentials](#configuring-users-credentials)\n   * [Reverse Proxy](#reverse-proxy)\n      * [Routing Based on Hostname](#routing-based-on-hostname)\n      * [Routing Based on URL Path](#routing-based-on-url-path)\n   * [Shell Access](#shell-access)\n   * [Allowing the membarrier System Call](#allowing-the-membarrier-system-call)\n   * [Sound Support](#sound-support)\n   * [Setting Firefox Preferences Via Environment Variables](#setting-firefox-preferences-via-environment-variables)\n   * [Troubleshooting](#troubleshooting)\n      * [Crashes](#crashes)\n   * [Support or Contact](#support-or-contact)\n\n## Quick Start\n\n> [!IMPORTANT]\n> The Docker command provided in this quick start is given as an example and\n> parameters should be adjusted to your need.\n\nLaunch the Firefox docker container with the following command:\n```shell\ndocker run -d \\\n    --name=firefox \\\n    -p 5800:5800 \\\n    -v /docker/appdata/firefox:/config:rw \\\n    jlesage/firefox\n```\n\nWhere:\n\n  - `/docker/appdata/firefox`: This is where the application stores its configuration, states, log and any files needing persistency.\n\nBrowse to `http://your-host-ip:5800` to access the Firefox GUI.\n\n## Usage\n\n```shell\ndocker run [-d] \\\n    --name=firefox \\\n    [-e <VARIABLE_NAME>=<VALUE>]... \\\n    [-v <HOST_DIR>:<CONTAINER_DIR>[:PERMISSIONS]]... \\\n    [-p <HOST_PORT>:<CONTAINER_PORT>]... \\\n    jlesage/firefox\n```\n\n| Parameter | Description |\n|-----------|-------------|\n| -d        | Run the container in the background. If not set, the container runs in the foreground. |\n| -e        | Pass an environment variable to the container. See the [Environment Variables](#environment-variables) section for more details. |\n| -v        | Set a volume mapping (allows to share a folder/file between the host and the container). See the [Data Volumes](#data-volumes) section for more details. |\n| -p        | Set a network port mapping (exposes an internal container port to the host). See the [Ports](#ports) section for more details. |\n\n### Environment Variables\n\nTo customize some properties of the container, the following environment\nvariables can be passed via the `-e` parameter (one for each variable). Value\nof this parameter has the format `<VARIABLE_NAME>=<VALUE>`.\n\n| Variable       | Description                                  | Default |\n|----------------|----------------------------------------------|---------|\n|`USER_ID`| ID of the user the application runs as.  See [User/Group IDs](#usergroup-ids) to better understand when this should be set. | `1000` |\n|`GROUP_ID`| ID of the group the application runs as.  See [User/Group IDs](#usergroup-ids) to better understand when this should be set. | `1000` |\n|`SUP_GROUP_IDS`| Comma-separated list of supplementary group IDs of the application. | (no value) |\n|`UMASK`| Mask that controls how permissions are set for newly created files and folders.  The value of the mask is in octal notation.  By default, the default umask value is `0022`, meaning that newly created files and folders are readable by everyone, but only writable by the owner.  See the online umask calculator at http://wintelguy.com/umask-calc.pl. | `0022` |\n|`LANG`| Set the [locale](https://en.wikipedia.org/wiki/Locale_(computer_software)), which defines the application's language, **if supported**.  Format of the locale is `language[_territory][.codeset]`, where language is an [ISO 639 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes), territory is an [ISO 3166 country code](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) and codeset is a character set, like `UTF-8`.  For example, Australian English using the UTF-8 encoding is `en_AU.UTF-8`. | `en_US.UTF-8` |\n|`TZ`| [TimeZone](http://en.wikipedia.org/wiki/List_of_tz_database_time_zones) used by the container.  Timezone can also be set by mapping `/etc/localtime` between the host and the container. | `Etc/UTC` |\n|`KEEP_APP_RUNNING`| When set to `1`, the application will be automatically restarted when it crashes or terminates. | `0` |\n|`APP_NICENESS`| Priority at which the application should run.  A niceness value of -20 is the highest priority and 19 is the lowest priority.  The default niceness value is 0.  **NOTE**: A negative niceness (priority increase) requires additional permissions.  In this case, the container should be run with the docker option `--cap-add=SYS_NICE`. | `0` |\n|`INSTALL_PACKAGES`| Space-separated list of packages to install during the startup of the container.  List of available packages can be found at https://pkgs.alpinelinux.org.  **ATTENTION**: Container functionality can be affected when installing a package that overrides existing container files (e.g. binaries). | (no value) |\n|`PACKAGES_MIRROR`| Mirror of the repository to use when installing packages. List of mirrors is available at https://mirrors.alpinelinux.org. | (no value) |\n|`CONTAINER_DEBUG`| Set to `1` to enable debug logging. | `0` |\n|`DISPLAY_WIDTH`| Width (in pixels) of the application's window. | `1920` |\n|`DISPLAY_HEIGHT`| Height (in pixels) of the application's window. | `1080` |\n|`DARK_MODE`| When set to `1`, dark mode is enabled for the application. | `0` |\n|`WEB_AUDIO`| When set to `1`, audio support is enabled, meaning that any audio produced by the application is played through the browser. Note that audio is not supported for VNC clients. | `0` |\n|`WEB_AUTHENTICATION`| When set to `1`, the application' GUI is protected via a login page when accessed via a web browser.  Access is allowed only when providing valid credentials.  **NOTE**: This feature requires secure connection (`SECURE_CONNECTION` environment variable) to be enabled. | `0` |\n|`WEB_AUTHENTICATION_USERNAME`| Optional username to configure for the web authentication.  This is a quick and easy way to configure credentials for a single user.  To configure credentials in a more secure way, or to add more users, see the [Web Authentication](#web-authentication) section. | (no value) |\n|`WEB_AUTHENTICATION_PASSWORD`| Optional password to configure for the web authentication.  This is a quick and easy way to configure credentials for a single user.  To configure credentials in a more secure way, or to add more users, see the [Web Authentication](#web-authentication) section. | (no value) |\n|`SECURE_CONNECTION`| When set to `1`, an encrypted connection is used to access the application's GUI (either via a web browser or VNC client).  See the [Security](#security) section for more details. | `0` |\n|`SECURE_CONNECTION_VNC_METHOD`| Method used to perform the secure VNC connection.  Possible values are `SSL` or `TLS`.  See the [Security](#security) section for more details. | `SSL` |\n|`SECURE_CONNECTION_CERTS_CHECK_INTERVAL`| Interval, in seconds, at which the system verifies if web or VNC certificates have changed.  When a change is detected, the affected services are automatically restarted.  A value of `0` disables the check. | `60` |\n|`WEB_LISTENING_PORT`| Port used by the web server to serve the UI of the application.  This port is used internally by the container and it is usually not required to be changed.  By default, a container is created with the default bridge network, meaning that, to be accessible, each internal container port must be mapped to an external port (using the `-p` or `--publish` argument).  However, if the container is created with another network type, changing the port used by the container might be useful to prevent conflict with other services/containers.  **NOTE**: a value of `-1` disables listening, meaning that the application's UI won't be accessible over HTTP/HTTPs. | `5800` |\n|`VNC_LISTENING_PORT`| Port used by the VNC server to serve the UI of the application.  This port is used internally by the container and it is usually not required to be changed.  By default, a container is created with the default bridge network, meaning that, to be accessible, each internal container port must be mapped to an external port (using the `-p` or `--publish` argument).  However, if the container is created with another network type, changing the port used by the container might be useful to prevent conflict with other services/containers.  **NOTE**: a value of `-1` disables listening, meaning that the application's UI won't be accessible over VNC. | `5900` |\n|`VNC_PASSWORD`| Password needed to connect to the application's GUI.  See the [VNC Password](#vnc-password) section for more details. | (no value) |\n|`ENABLE_CJK_FONT`| When set to `1`, open-source computer font `WenQuanYi Zen Hei` is installed.  This font contains a large range of Chinese/Japanese/Korean characters. | `0` |\n|`FF_OPEN_URL`| The URL to open when Firefox starts. | (no value) |\n|`FF_KIOSK`| Set to `1` to enable kiosk mode.  This mode launches Firefox in a very restricted and limited mode best suitable for public areas or customer-facing displays. | `0` |\n|`FF_CUSTOM_ARGS`| Custom argument(s) to pass when launching Firefox. | `0` |\n\n#### Deployment Considerations\n\nMany tools used to manage Docker containers extract environment variables\ndefined by the Docker image and use them to create/deploy the container. For\nexample, this is done by:\n  - The Docker application on Synology NAS\n  - The Container Station on QNAP NAS\n  - Portainer\n  - etc.\n\nWhile this can be useful for the user to adjust the value of environment\nvariables to fit its needs, it can also be confusing and dangerous to keep all\nof them.\n\nA good practice is to set/keep only the variables that are needed for the\ncontainer to behave as desired in a specific setup. If the value of variable is\nkept to its default value, it means that it can be removed. Keep in mind that\nall variables are optional, meaning that none of them is required for the\ncontainer to start.\n\nRemoving environment variables that are not needed provides some advantages:\n\n  - Prevents keeping variables that are no longer used by the container. Over\n    time, with image updates, some variables might be removed.\n  - Allows the Docker image to change/fix a default value. Again, with image\n    updates, the default value of a variable might be changed to fix an issue,\n    or to better support a new feature.\n  - Prevents changes to a variable that might affect the correct function of\n    the container. Some undocumented variables, like `PATH` or `ENV`, are\n    required to be exposed, but are not meant to be changed by users. However,\n    container management tools still show these variables to users.\n  - There is a bug with the Container Station on QNAP and the Docker application\n    on Synology, where an environment variable without value might not be\n    allowed. This behavior is wrong: it's absolutely fine to have a variable\n    without value. In fact, this container does have variables without value by\n    default. Thus, removing unneeded variables is a good way to prevent\n    deployment issue on these devices.\n\n### Data Volumes\n\nThe following table describes data volumes used by the container. The mappings\nare set via the `-v` parameter. Each mapping is specified with the following\nformat: `<HOST_DIR>:<CONTAINER_DIR>[:PERMISSIONS]`.\n\n| Container path  | Permissions | Description |\n|-----------------|-------------|-------------|\n|`/config`| rw | This is where the application stores its configuration, states, log and any files needing persistency. |\n\n### Ports\n\nHere is the list of ports used by the container.\n\nWhen using the default bridge network, ports can be mapped to the host via the\n`-p` parameter (one per port mapping). Each mapping is defined with the\nfollowing format: `<HOST_PORT>:<CONTAINER_PORT>`. The port number used inside\nthe container might not be changeable, but you are free to use any port on the\nhost side.\n\nSee the [Docker Container Networking](https://docs.docker.com/config/containers/container-networking)\ndocumentation for more details.\n\n| Port | Protocol | Mapping to host | Description |\n|------|----------|-----------------|-------------|\n| 5800 | TCP | Optional | Port to access the application's GUI via the web interface.  Mapping to the host is optional if access through the web interface is not wanted.  For a container not using the default bridge network, the port can be changed with the `WEB_LISTENING_PORT` environment variable. |\n| 5900 | TCP | Optional | Port to access the application's GUI via the VNC protocol.  Mapping to the host is optional if access through the VNC protocol is not wanted.  For a container not using the default bridge network, the port can be changed with the `VNC_LISTENING_PORT` environment variable. |\n\n### Changing Parameters of a Running Container\n\nAs can be seen, environment variables, volume and port mappings are all specified\nwhile creating the container.\n\nThe following steps describe the method used to add, remove or update\nparameter(s) of an existing container. The general idea is to destroy and\nre-create the container:\n\n  1. Stop the container (if it is running):\n```shell\ndocker stop firefox\n```\n\n  2. Remove the container:\n```shell\ndocker rm firefox\n```\n\n  3. Create/start the container using the `docker run` command, by adjusting\n     parameters as needed.\n\n> [!NOTE]\n> Since all application's data is saved under the `/config` container folder,\n> destroying and re-creating a container is not a problem: nothing is lost and\n> the application comes back with the same state (as long as the mapping of the\n> `/config` folder remains the same).\n\n## Docker Compose File\n\nHere is an example of a `docker-compose.yml` file that can be used with\n[Docker Compose](https://docs.docker.com/compose/overview/).\n\nMake sure to adjust according to your needs. Note that only mandatory network\nports are part of the example.\n\n```yaml\nversion: '3'\nservices:\n  firefox:\n    image: jlesage/firefox\n    ports:\n      - \"5800:5800\"\n    volumes:\n      - \"/docker/appdata/firefox:/config:rw\"\n```\n\n## Docker Image Versioning\n\nEach release of a Docker image is versioned. Prior to october 2022, the\n[semantic versioning](https://semver.org) was used as the versioning scheme.\n\nSince then, versioning scheme changed to\n[calendar versioning](https://calver.org). The format used is `YY.MM.SEQUENCE`,\nwhere:\n  - `YY` is the zero-padded year (relative to year 2000).\n  - `MM` is the zero-padded month.\n  - `SEQUENCE` is the incremental release number within the month (first release\n    is 1, second is 2, etc).\n\n## Docker Image Update\n\nBecause features are added, issues are fixed, or simply because a new version\nof the containerized application is integrated, the Docker image is regularly\nupdated. Different methods can be used to update the Docker image.\n\nThe system used to run the container may have a built-in way to update\ncontainers. If so, this could be your primary way to update Docker images.\n\nAn other way is to have the image be automatically updated with [Watchtower].\nWatchtower is a container-based solution for automating Docker image updates.\nThis is a \"set and forget\" type of solution: once a new image is available,\nWatchtower will seamlessly perform the necessary steps to update the container.\n\nFinally, the Docker image can be manually updated with these steps:\n\n  1. Fetch the latest image:\n```shell\ndocker pull jlesage/firefox\n```\n\n  2. Stop the container:\n```shell\ndocker stop firefox\n```\n\n  3. Remove the container:\n```shell\ndocker rm firefox\n```\n\n  4. Create and start the container using the `docker run` command, with the\nthe same parameters that were used when it was deployed initially.\n\n[Watchtower]: https://github.com/containrrr/watchtower\n\n### Synology\n\nFor owners of a Synology NAS, the following steps can be used to update a\ncontainer image.\n\n  1.  Open the *Docker* application.\n  2.  Click on *Registry* in the left pane.\n  3.  In the search bar, type the name of the container (`jlesage/firefox`).\n  4.  Select the image, click *Download* and then choose the `latest` tag.\n  5.  Wait for the download to complete. A notification will appear once done.\n  6.  Click on *Container* in the left pane.\n  7.  Select your Firefox container.\n  8.  Stop it by clicking *Action*->*Stop*.\n  9.  Clear the container by clicking *Action*->*Reset* (or *Action*->*Clear* if\n      you don't have the latest *Docker* application). This removes the\n      container while keeping its configuration.\n  10. Start the container again by clicking *Action*->*Start*. **NOTE**:  The\n      container may temporarily disappear from the list while it is re-created.\n\n### unRAID\n\nFor unRAID, a container image can be updated by following these steps:\n\n  1. Select the *Docker* tab.\n  2. Click the *Check for Updates* button at the bottom of the page.\n  3. Click the *update ready* link of the container to be updated.\n\n## User/Group IDs\n\nWhen using data volumes (`-v` flags), permissions issues can occur between the\nhost and the container. For example, the user within the container may not\nexist on the host. This could prevent the host from properly accessing files\nand folders on the shared volume.\n\nTo avoid any problem, you can specify the user the application should run as.\n\nThis is done by passing the user ID and group ID to the container via the\n`USER_ID` and `GROUP_ID` environment variables.\n\nTo find the right IDs to use, issue the following command on the host, with the\nuser owning the data volume on the host:\n\n    id <username>\n\nWhich gives an output like this one:\n```text\nuid=1000(myuser) gid=1000(myuser) groups=1000(myuser),4(adm),24(cdrom),27(sudo),46(plugdev),113(lpadmin)\n```\n\nThe value of `uid` (user ID) and `gid` (group ID) are the ones that you should\nbe given the container.\n\n## Accessing the GUI\n\nAssuming that container's ports are mapped to the same host's ports, the\ngraphical interface of the application can be accessed via:\n\n  * A web browser:\n\n```text\nhttp://<HOST IP ADDR>:5800\n```\n\n  * Any VNC client:\n\n```text\n<HOST IP ADDR>:5900\n```\n\n## Security\n\nBy default, access to the application's GUI is done over an unencrypted\nconnection (HTTP or VNC).\n\nSecure connection can be enabled via the `SECURE_CONNECTION` environment\nvariable. See the [Environment Variables](#environment-variables) section for\nmore details on how to set an environment variable.\n\nWhen enabled, application's GUI is performed over an HTTPs connection when\naccessed with a browser. All HTTP accesses are automatically redirected to\nHTTPs.\n\nWhen using a VNC client, the VNC connection is performed over SSL. Note that\nfew VNC clients support this method. [SSVNC] is one of them.\n\n[SSVNC]: http://www.karlrunge.com/x11vnc/ssvnc.html\n\n### SSVNC\n\n[SSVNC] is a VNC viewer that adds encryption security to VNC connections.\n\nWhile the Linux version of [SSVNC] works well, the Windows version has some\nissues. At the time of writing, the latest version `1.0.30` is not functional,\nas a connection fails with the following error:\n```text\nReadExact: Socket error while reading\n```\nHowever, for your convenience, an unofficial and working version is provided\nhere:\n\nhttps://github.com/jlesage/docker-baseimage-gui/raw/master/tools/ssvnc_windows_only-1.0.30-r1.zip\n\nThe only difference with the official package is that the bundled version of\n`stunnel` has been upgraded to version `5.49`, which fixes the connection\nproblems.\n\n### Certificates\n\nHere are the certificate files needed by the container. By default, when they\nare missing, self-signed certificates are generated and used. All files have\nPEM encoded, x509 certificates.\n\n| Container Path                  | Purpose                    | Content |\n|---------------------------------|----------------------------|---------|\n|`/config/certs/vnc-server.pem`   |VNC connection encryption.  |VNC server's private key and certificate, bundled with any root and intermediate certificates.|\n|`/config/certs/web-privkey.pem`  |HTTPs connection encryption.|Web server's private key.|\n|`/config/certs/web-fullchain.pem`|HTTPs connection encryption.|Web server's certificate, bundled with any root and intermediate certificates.|\n\n> [!TIP]\n> To prevent any certificate validity warnings/errors from the browser or VNC\n> client, make sure to supply your own valid certificates.\n\n> [!NOTE]\n> Certificate files are monitored and relevant daemons are automatically\n> restarted when changes are detected.\n\n### VNC Password\n\nTo restrict access to your application, a password can be specified. This can\nbe done via two methods:\n  * By using the `VNC_PASSWORD` environment variable.\n  * By creating a `.vncpass_clear` file at the root of the `/config` volume.\n    This file should contain the password in clear-text.  During the container\n    startup, content of the file is obfuscated and moved to `.vncpass`.\n\nThe level of security provided by the VNC password depends on two things:\n  * The type of communication channel (encrypted/unencrypted).\n  * How secure the access to the host is.\n\nWhen using a VNC password, it is highly desirable to enable the secure\nconnection to prevent sending the password in clear over an unencrypted channel.\n\n> [!CAUTION]\n> Password is limited to 8 characters. This limitation comes from the Remote\n> Framebuffer Protocol [RFC](https://tools.ietf.org/html/rfc6143) (see section\n> [7.2.2](https://tools.ietf.org/html/rfc6143#section-7.2.2)). Any characters\n> beyond the limit are ignored.\n\n### Web Authentication\n\nAccess to the application's GUI via a web browser can be protected with a login\npage. When web authentication is enabled, users have to provide valid\ncredentials, otherwise access is denied.\n\nWeb authentication can be enabled by setting the `WEB_AUTHENTICATION`\nenvironment variable to `1`.\n\nSee the [Environment Variables](#environment-variables) section for more details\non how to set an environment variable.\n\n> [!IMPORTANT]\n> Secure connection must also be enabled to use web authentication.\n> See the [Security](#security) section for more details.\n\n#### Configuring Users Credentials\n\nTwo methods can be used to configure users credentials:\n\n  1. Via container environment variables.\n  2. Via password database.\n\nContainers environment variables can be used to quickly and easily configure\na single user. Username and pasword are defined via the following environment\nvariables:\n  - `WEB_AUTHENTICATION_USERNAME`\n  - `WEB_AUTHENTICATION_PASSWORD`\n\nSee the [Environment Variables](#environment-variables) section for more details\non how to set an environment variable.\n\nThe second method is more secure and allows multiple users to be configured.\nThe usernames and password hashes are saved into a password database, located at\n`/config/webauth-htpasswd` inside the container. This database file has the\nsame format as htpasswd files of the Apache HTTP server. Note that password\nthemselves are not saved into the database, but only their hash. The bcrypt\npassword hashing function is used to generate hashes.\n\nUsers are managed via the `webauth-user` tool included in the container:\n  - To add a user password: `docker exec -ti <container name or id> webauth-user add <username>`.\n  - To update a user password: `docker exec -ti <container name or id> webauth-user update <username>`.\n  - To remove a user: `docker exec <container name or id> webauth-user del <username>`.\n  - To list users: `docker exec <container name or id> webauth-user user`.\n\n## Reverse Proxy\n\nThe following sections contain NGINX configurations that need to be added in\norder to reverse proxy to this container.\n\nA reverse proxy server can route HTTP requests based on the hostname or the URL\npath.\n\n### Routing Based on Hostname\n\nIn this scenario, each hostname is routed to a different application/container.\n\nFor example, let's say the reverse proxy server is running on the same machine\nas this container. The server would proxy all HTTP requests sent to\n`firefox.domain.tld` to the container at `127.0.0.1:5800`.\n\nHere are the relevant configuration elements that would be added to the NGINX\nconfiguration:\n\n```nginx\nmap $http_upgrade $connection_upgrade {\n\tdefault upgrade;\n\t''      close;\n}\n\nupstream docker-firefox {\n\t# If the reverse proxy server is not running on the same machine as the\n\t# Docker container, use the IP of the Docker host here.\n\t# Make sure to adjust the port according to how port 5800 of the\n\t# container has been mapped on the host.\n\tserver 127.0.0.1:5800;\n}\n\nserver {\n\t[...]\n\n\tserver_name firefox.domain.tld;\n\n\tlocation / {\n\t        proxy_pass http://docker-firefox;\n\t}\n\n\tlocation /websockify {\n\t\tproxy_pass http://docker-firefox;\n\t\tproxy_http_version 1.1;\n\t\tproxy_set_header Upgrade $http_upgrade;\n\t\tproxy_set_header Connection $connection_upgrade;\n\t\tproxy_read_timeout 86400;\n\t}\n}\n\n```\n\n### Routing Based on URL Path\n\nIn this scenario, the hostname is the same, but different URL paths are used to\nroute to different applications/containers.\n\nFor example, let's say the reverse proxy server is running on the same machine\nas this container. The server would proxy all HTTP requests for\n`server.domain.tld/firefox` to the container at `127.0.0.1:5800`.\n\nHere are the relevant configuration elements that would be added to the NGINX\nconfiguration:\n\n```nginx\nmap $http_upgrade $connection_upgrade {\n\tdefault upgrade;\n\t''      close;\n}\n\nupstream docker-firefox {\n\t# If the reverse proxy server is not running on the same machine as the\n\t# Docker container, use the IP of the Docker host here.\n\t# Make sure to adjust the port according to how port 5800 of the\n\t# container has been mapped on the host.\n\tserver 127.0.0.1:5800;\n}\n\nserver {\n\t[...]\n\n\tlocation = /firefox {return 301 $scheme://$http_host/firefox/;}\n\tlocation /firefox/ {\n\t\tproxy_pass http://docker-firefox/;\n\t\t# Uncomment the following line if your Nginx server runs on a port that\n\t\t# differs from the one seen by external clients.\n\t\t#port_in_redirect off;\n\t\tlocation /firefox/websockify {\n\t\t\tproxy_pass http://docker-firefox/websockify/;\n\t\t\tproxy_http_version 1.1;\n\t\t\tproxy_set_header Upgrade $http_upgrade;\n\t\t\tproxy_set_header Connection $connection_upgrade;\n\t\t\tproxy_read_timeout 86400;\n\t\t}\n\t}\n}\n\n```\n## Shell Access\n\nTo get shell access to the running container, execute the following command:\n\n```shell\ndocker exec -ti CONTAINER sh\n```\n\nWhere `CONTAINER` is the ID or the name of the container used during its\ncreation.\n\n## Allowing the membarrier System Call\n\nTo properly work, recent versions of Firefox need the\n`membarrier` system call.  Without it, tabs would frequently crash.\n\nDocker uses [seccomp profile] to restrict system calls available to the\ncontainer.  Before Docker version `20.10.0`, the `membarrier` system call was\nnot allowed in the default profile.  If you run a such version, you can use one\nof the following solutions, from the most to the least secure, to provide the\ncontainer permission to use this sytem call:\n\n  1. Run the container with a custom seccomp profile allowing the `membarrier`\n     system call.  The [latest official seccomp profile] can be used.  Download\n     the file and then add the following parameter when creating the container:\n     `--security-opt seccomp=/path/to/seccomp_profile.json`.\n  2. Run the container without the default seccomp profile (thus allowing all\n     system calls). Use the following parameter when creating the container:\n     `--security-opt seccomp=unconfined`.\n  3. Run the container in privileged mode.  This effectively disables usage of\n     seccomp.  Add the `--privileged` parameter when creating the container.\n\n  [here]: https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10\n  [latest official seccomp profile]: https://github.com/moby/moby/blob/master/profiles/seccomp/default.json\n  [seccomp profile]: https://docs.docker.com/engine/security/seccomp/\n\n## Sound Support\n\nFor Firefox to be able to use the audio device available on\nthe host, `/dev/snd` must be exposed to the container by adding the\n`--device /dev/snd` parameter to the `docker run` command.\n\n## Setting Firefox Preferences Via Environment Variables\n\nFirefox preferences can be set via environment variables\npassed to the container.  During the startup, a script process all these\nvariables and modify the preference file accordingly.\n\nThe name of the environment variable must start with `FF_PREF_`, followed by a\nstring of your choice.  For example, `FF_PREF_MY_PREF` is a valid name.\n\nThe content of the variable should be in the format `NAME=VAL`, where `NAME` is\nthe name of the preference (as found in the `about:config` page) and `VAL` is\nits value.  A value can be one of the following types:\n  - string\n  - integer\n  - boolean\n\nIt is important to note that a value of type `string` should be surrounded by\ndouble quotes.  Other types don't need them.\n\nFor example, to set the `network.proxy.http` preference, one would pass the\nenvironment variable to the container by adding the following argument to the\n`docker run` command:\n\n```\n-e \"FF_PREF_HTTP_PROXY=network.proxy.http=\\\"proxy.example.com\\\"\"\n```\n\nIf a preference needs to be *removed*, its value should be set to `UNSET`.  For\nexample:\n\n```\n-e \"FF_PREF_HTTP_PROXY=network.proxy.http=UNSET\"\n```\n\n**NOTE**: This is an advanced usage and it is recommended to set preferences\nvia Firefox directly.\n\n## Troubleshooting\n\n### Crashes\n\nIf Firefox is crashing frequently, make sure that:\n  - The `membarrier` system call is not blocked by Docker.  See the\n    [Allowing the membarrier System Call](#allowing-the-membarrier-system-call)\n    for more details.\n  - Make sure the kernel of your Linux distribution is up-to-date.\n\n## Support or Contact\n\nHaving troubles with the container or have questions?  Please\n[create a new issue].\n\nFor other great Dockerized applications, see https://jlesage.github.io/docker-apps.\n\n[create a new issue]: https://github.com/jlesage/docker-firefox/issues\n"
        },
        {
          "name": "appdefs.yml",
          "type": "blob",
          "size": 19.638671875,
          "content": "---\n\n#\n# Definitions for Firefox docker container.\n#\n# This file is used as data source to generate README.md and unRAID template files\n# from Jinja2 templates.\n#\n\napp:\n  id: 14\n  name: firefox\n  friendly_name: Firefox\n  gui_type: x11\n  base_os: alpine\n  project:\n    description: |-\n      Mozilla Firefox is a free and open-source web browser developed by Mozilla\n      Foundation and its subsidiary, Mozilla Corporation.\n    url: https://www.mozilla.org/firefox/\n  unraid:\n    support_url: https://forums.unraid.net/topic/69440-support-firefox/\n    category: \"Tools:\"\n  documentation:\n    sections:\n      - title: Allowing the membarrier System Call\n        level: 2\n        content: |-\n          To properly work, recent versions of {{ app.friendly_name }} need the\n          `membarrier` system call.  Without it, tabs would frequently crash.\n\n          Docker uses [seccomp profile] to restrict system calls available to the\n          container.  Before Docker version `20.10.0`, the `membarrier` system call was\n          not allowed in the default profile.  If you run a such version, you can use one\n          of the following solutions, from the most to the least secure, to provide the\n          container permission to use this sytem call:\n\n            1. Run the container with a custom seccomp profile allowing the `membarrier`\n               system call.  The [latest official seccomp profile] can be used.  Download\n               the file and then add the following parameter when creating the container:\n               `--security-opt seccomp=/path/to/seccomp_profile.json`.\n            2. Run the container without the default seccomp profile (thus allowing all\n               system calls). Use the following parameter when creating the container:\n               `--security-opt seccomp=unconfined`.\n            3. Run the container in privileged mode.  This effectively disables usage of\n               seccomp.  Add the `--privileged` parameter when creating the container.\n\n            [here]: https://bugzilla.mozilla.org/show_bug.cgi?id=1338771#c10\n            [latest official seccomp profile]: https://github.com/moby/moby/blob/master/profiles/seccomp/default.json\n            [seccomp profile]: https://docs.docker.com/engine/security/seccomp/\n      - title: Sound Support\n        level: 2\n        content: |-\n          For {{ app.friendly_name }} to be able to use the audio device available on\n          the host, `/dev/snd` must be exposed to the container by adding the\n          `--device /dev/snd` parameter to the `docker run` command.\n      - title: Setting {{ app.friendly_name }} Preferences Via Environment Variables\n        level: 2\n        content: |-\n          {{ app.friendly_name }} preferences can be set via environment variables\n          passed to the container.  During the startup, a script process all these\n          variables and modify the preference file accordingly.\n\n          The name of the environment variable must start with `FF_PREF_`, followed by a\n          string of your choice.  For example, `FF_PREF_MY_PREF` is a valid name.\n\n          The content of the variable should be in the format `NAME=VAL`, where `NAME` is\n          the name of the preference (as found in the `about:config` page) and `VAL` is\n          its value.  A value can be one of the following types:\n            - string\n            - integer\n            - boolean\n\n          It is important to note that a value of type `string` should be surrounded by\n          double quotes.  Other types don't need them.\n\n          For example, to set the `network.proxy.http` preference, one would pass the\n          environment variable to the container by adding the following argument to the\n          `docker run` command:\n\n          ```\n          -e \"FF_PREF_HTTP_PROXY=network.proxy.http=\\\"proxy.example.com\\\"\"\n          ```\n\n          If a preference needs to be *removed*, its value should be set to `UNSET`.  For\n          example:\n\n          ```\n          -e \"FF_PREF_HTTP_PROXY=network.proxy.http=UNSET\"\n          ```\n\n          **NOTE**: This is an advanced usage and it is recommended to set preferences\n          via {{ app.friendly_name }} directly.\n      - title: Troubleshooting\n        level: 2\n      - title: Crashes\n        level: 3\n        content: |-\n          If {{ app.friendly_name }} is crashing frequently, make sure that:\n            - The `membarrier` system call is not blocked by Docker.  See the\n              [Allowing the membarrier System Call](#allowing-the-membarrier-system-call)\n              for more details.\n            - Make sure the kernel of your Linux distribution is up-to-date.\n  changelog:\n    - version: 24.12.1\n      date: 2024-12-07\n      changes:\n        - 'Updated Firefox to version 133.0-r0.'\n        - 'Updated baseimage to version 4.6.7, which brings the following changes:'\n        - '2:Fixed web audio feature with URL path-based reverse proxy.'\n        - '2:Fixed TLS secure connection method for VNC that was preventing web access.'\n        - '2:Fixed CJK font installation.'\n        - '2:Rebuild against latest distro images to get security fixes.'\n    - version: 24.11.1\n      date: 2024-11-11\n      changes:\n        - 'Updated Firefox to version 132.0-r0.'\n    - version: 24.10.1\n      date: 2024-10-28\n      changes:\n        - 'Updated Firefox to version 131.0.2-r0.'\n    - version: 24.09.1\n      date: 2024-09-29\n      changes:\n        - 'Updated Firefox to version 130.0.1-r0.'\n        - 'Updated baseimage to version 4.6.4, which brings the following changes:'\n        - '2:Fixed web authentication feature with URL path-based reverse proxy.'\n        - '2:Rebuild against latest distro images to get security fixes.'\n    - version: 24.08.1\n      date: 2024-08-05\n      changes:\n        - 'Updated Firefox to version 128.0.3-r0.'\n    - version: 24.07.1\n      date: 2024-07-02\n      changes:\n        - 'Updated Firefox to version 126.0.1-r0.'\n        - 'Updated baseimage to version 4.6.3, which brings the following changes:'\n        - '2:Audio support through web browser.'\n        - '2:Web authentication support.'\n        - '2:Better support of GTK4 applications.'\n        - '2:Updated noVNC to version 1.5.0.'\n        - '2:Updated web UI components (Bootstrap, Font Awesome).'\n        - '2:When connecting, the control bar is now temporarily shown only once.'\n        - '2:During package mirror setup, make sure to keep permissions of copied files.'\n    - version: 24.05.1\n      date: 2024-05-02\n      changes:\n        - 'Updated Firefox to version 125.0.3-r0.'\n    - version: 24.04.1\n      date: 2024-04-12\n      changes:\n        - 'Updated Firefox to version 124.0.1-r0.'\n    - version: 24.01.1\n      date: 2024-01-20\n      changes:\n        - 'Updated Firefox to version 120.0.1-r0.'\n        - 'Updated baseimage to version 4.5.3, based on Alpine Linux 3.19, which brings the following changes:'\n        - '2:Disabled fullscreen support when page is loaded into an iFrame.'\n        - '2:Rebuilt against latest distro images to get security fixes.'\n    - version: 23.11.3\n      date: 2023-11-19\n      changes:\n        - 'Updated baseimage to version 4.5.2, which brings the following changes:'\n        - '2:Fixed issue that would cause the helper that takes ownership of a directory to fail when using a very high user or group ID.'\n    - version: 23.11.2\n      date: 2023-11-10\n      changes:\n        - 'Updated baseimage to version 4.5.1, which brings the following changes:'\n        - '2:Mirror for packages installation can be set via the `PACKAGES_MIRROR` environment variable.'\n        - '2:Improved the way the `take-ownership` script is working.'\n        - '2:Readiness and minimum running time checks should not be done for a service defined with an interval.'\n        - '2:Raise an error when a synched service fails to start.'\n        - '2:Minimum running time check of a service was using an incorrect way to verify if process is still alive.'\n        - '2:Fixed installation of CJK font.'\n    - version: 23.11.1\n      date: 2023-11-09\n      changes:\n        - 'Updated Firefox to version 119.0-r0.'\n    - version: 23.08.2\n      date: 2023-08-20\n      changes:\n        - 'Updated Firefox to version 116.0.3-r0.'\n    - version: 23.08.1\n      date: 2023-08-04\n      changes:\n        - 'Updated Firefox to version 116.0-r0.'\n    - version: 23.06.1\n      date: 2023-06-24\n      changes:\n        - 'Updated Firefox to version 114.0.2-r0.'\n        - 'Fixed issue caused by the presence slash or backslash characters in Firefox preference''s value set via environment variable.'\n    - version: 23.05.2\n      date: 2023-05-27\n      changes:\n        - 'Updated Firefox to version 113.0.2-r1.'\n    - version: 23.05.1\n      date: 2023-05-19\n      changes:\n        - 'Updated Firefox to version 113.0.1-r1.'\n        - 'Updated baseimage to version 4.4.2, based on Alpine Linux 3.18, which brings the following changes:'\n        - '2:Rebuilt against latest distro images to get security fixes.'\n        - '2:Updated X server to version 1.20.14.'\n    - version: 23.04.1\n      date: 2023-04-29\n      changes:\n        - 'Fixed WebGL (software) support.'\n        - 'Reverted to using a font with better UTF-8 characters support.'\n        - 'Improved graceful shutdown of Firefox.'\n        - 'Updated baseimage to version 4.4.1, which brings the following changes:'\n        - '2:Updated TigerVNC to version 1.13.1.'\n    - version: 23.03.1\n      date: 2023-03-05\n      changes:\n        - 'Updated baseimage to version 4.4.0, which brings the following changes:'\n        - '2:Updated components providing access to application''s UI over web.'\n        - '2:Improved web UI usage with touch devices.'\n        - '2:Fixed issue with initialization of Linux users and groups when the `GROUP_ID` is also part of `SUP_GROUP_IDS`.'\n    - version: 23.02.3\n      date: 2023-02-13\n      changes:\n        - 'Updated baseimage to version 4.3.6, which brings the following changes:'\n        - '2:Limit the maximum number of opened files on system having a very large, unlimited value. This prevents unnecessary waste of CPU resources and time for applications trying to close all possible file descriptors.'\n        - 'Added default preference to prevent closing Firefox when closing the last tab.'\n    - version: 23.02.2\n      date: 2023-02-08\n      changes:\n        - 'Updated baseimage to version 4.3.4, which brings the following changes:'\n        - '2:Fixed error message from openbox about missing Fontconfig cache directory.'\n        - 'Do not use the OCI Docker image format yet to keep better compatibility (e.g with older docker clients).'\n    - version: 23.02.1\n      date: 2023-02-04\n      changes:\n        - 'Updated Firefox to version 109.0.1-r0.'\n        - 'Updated baseimage to version 4.3.3, which brings robustness related enhancements.'\n    - version: 23.01.1\n      date: 2023-01-04\n      changes:\n        - 'Updated Firefox to version 108.0.1-r1.'\n        - 'Update of the baseimage to version 4.3.1 brings the following changes:'\n        - '2:Control menu can be moved to the right side of the screen.'\n        - '2:Automatic focus of the clipboard text box when opening the control menu.'\n        - '2:Automatic close of the control menu when clicking into the application.'\n        - '2:Rotation of the internal web server log files.'\n    - version: 22.12.2\n      date: 2022-12-11\n      changes:\n        - 'Implemented workaround for issue seen with Synology devices where container would not start after an image update.  The problem is caused by Synology explicitly setting all environment variables and keeping values from the old version.'\n    - version: 22.12.1\n      date: 2022-12-09\n      changes:\n        - 'Updated Firefox to version 107.0.1-r1.'\n        - 'Updated baseimage to version `4.2.1`, which brings multiple internal enhancements.'\n    - version: 22.10.4\n      date: 2022-10-24\n      changes:\n        - 'Update of the baseimage to version 4.1.1 brings the following changes:'\n        - '2:Collapse the setting section of the control panel by default on touch devices to accommodate the size taken by the on-screen keyboard.'\n        - '2:Include the Docker image platform in informational box printed during container startup.'\n        - '2:Fixed logmonitor crash on arm64 platform.'\n        - '2:A umask value of `0000` was not properly applied.'\n        - '2:Fixed issue where the window manager configuration may fail to load.'\n        - '2:Fixed errors from yad caused by usage of wrong fontconfig related files.'\n    - version: 22.10.3\n      date: 2022-10-14\n      changes:\n        - 'Fixed scenario where a reverse proxy with routing based un URL path is used.'\n    - version: 22.10.2\n      date: 2022-10-10\n      changes:\n        - 'Fixed an issue where taking ownership of `/config` would fail if a subfolder is mapped to a network share.'\n        - 'Fixed handling of exposed sound device.'\n        - 'Fixed handling of the VNC password.'\n    - version: 22.10.1\n      date: 2022-10-09\n      changes:\n        - 'Versioning scheme of the Docker image changed to `YY.MM.SEQUENCE`.'\n        - 'Updated Firefox to version 101.0.1-r0.'\n        - 'Added support for kiosk mode.'\n        - 'Added support for URL opening at launch.'\n        - 'Update of the baseimage to version 4.0.1 brings the following nbew features:'\n        - '2:Multi-arch image support.'\n        - '2:Support for dark mode.'\n        - '2:Support for remote window resize.'\n        - '2:Updated the web UI with a new, simplified and less intrusive look.'\n    - version: 1.18.0\n      date: 2021-12-30\n      changes:\n        - 'Updated Firefox to version 94.0-r0.'\n        - 'Now using baseimage version 3.5.8, based on Alpine 3.15, which brings the following change:'\n        - '2:Updated installed packages to get latest security fixes.'\n    - version: 1.17.1\n      date: 2021-04-13\n      changes:\n        - 'Now using baseimage version 3.5.7, which brings the following change:'\n        - '2:Updated installed packages to get latest security fixes.'\n    - version: 1.17.0\n      date: 2021-02-06\n      changes:\n        - 'Updated Firefox to version 84.0.2-r0.'\n    - version: 1.16.0\n      date: 2020-12-16\n      changes:\n        - 'Updated Firefox to version 83.0-r1.'\n    - version: 1.15.0\n      date: 2020-10-01\n      changes:\n        - 'Updated Firefox to version 81.0-r0'\n    - version: 1.14.0\n      date: 2020-08-05\n      changes:\n        - 'Upgraded Firefox to version 79.0-r0.'\n        - 'Now using baseimage to version 3.5.6, which brings the following changes:'\n        - '2:Other small adjustments for the YAD log monitor target.'\n    - version: 1.13.0\n      date: 2020-07-19\n      changes:\n        - 'Upgraded Firefox to version 78.0.2-r1.'\n        - 'Added check for missing `membarrier` system call support.'\n        - 'Now using baseimage v3.5.5, based on Alpine 3.12, which brings the following changes:'\n        - '2:Upgraded glibc to version 2.31 on Alpine Linux images with glibc integrated.'\n        - '2:Updated installed packages to get latest security fixes.'\n        - '2:Adjusted the log monitor target for recent versions of YAD.'\n    - version: 1.12.0\n      date: 2020-06-24\n      changes:\n        - 'Upgraded Firefox to version 77.0.1-r2.'\n    - version: 1.11.0\n      date: 2020-04-25\n      changes:\n        - 'Upgraded Firefox to version 75.0-r2.'\n    - version: 1.10.0\n      date: 2020-03-15\n      changes:\n        - 'Upgraded Firefox to version 74.0-r0.'\n    - version: 1.9.1\n      date: 2020-02-10\n      changes:\n        - 'Upgraded Firefox to version 72.0.2-r0.'\n    - version: 1.9.0\n      date: 2020-01-14\n      changes:\n        - 'Upgraded Firefox to version 72.0.1-r0.'\n    - version: 1.8.0\n      date: 2019-12-25\n      changes:\n        - 'Upgraded Firefox to version 71.0-r0.'\n        - 'Now using baseimage v3.5.3, which brings the following changes:'\n        - '2:Updated installed packages to get latest security fixes.'\n        - '2:Make sure the tzdata is installed.'\n        - 'Use baseimage based on Alpine Linux 3.10.'\n    - version: 1.7.1\n      date: 2019-08-26\n      changes:\n        - 'Upgraded Firefox to version 68.0.2-r0.'\n    - version: 1.7.0\n      date: 2019-08-05\n      changes:\n        - 'Upgraded Firefox to version 68.0.r0.'\n    - version: 1.6.0\n      date: 2019-07-17\n      changes:\n        - 'Upgraded Firefox to version 67.0.4-r0.'\n    - version: 1.5.1\n      date: 2019-05-12\n      changes:\n        - 'Upgraded Firefox to version 66.0.5-r1.'\n    - version: 1.5.0\n      date: 2019-05-09\n      changes:\n        - 'Upgraded Firefox to version 66.0.4-r0.'\n        - 'Print the Firefox version during the container startup.'\n    - version: 1.4.1\n      date: 2019-04-24\n      changes:\n        - 'Upgraded Firefox to version 62.0.3-r4.'\n        - 'Now using baseimage v3.5.2, which brings the following changes:'\n        - '2:Updated installed packages to get latest security fixes.'\n        - '2:Fixed issue where the container could have a zombie process.'\n        - '2:Fixed issue where the password would not be submitted when pressing the enter key in the password modal.'\n        - '2:Use relative path for favicon ressources to be more friendly with reverse proxy senarios.'\n    - version: 1.4.0\n      date: 2019-02-24\n      changes:\n        - 'Upgraded Firefox to version 62.0.3-r2.'\n        - 'Preferences can now be set via environment variables.'\n        - 'Use baseimage based on Alpine Linux 3.9.'\n    - version: 1.3.1\n      date: 2018-09-18\n      changes:\n        - 'Now using baseimage v3.5.1, which brings the following changes:'\n        - '2:Updated installed packages to get latest security fixes.'\n    - version: 1.3.0\n      date: 2018-07-27\n      changes:\n        - 'Added support for more playable video formats.'\n        - 'Added support for sound in Firefox.'\n    - version: 1.2.0\n      date: 2018-07-12\n      changes:\n        - 'Now using baseimage v3.4.0, which is based on Alpine Linux 3.8.'\n        - 'Upgraded Firefox to version 61.0.1-r0.'\n    - version: 1.1.0\n      date: 2018-05-31\n      changes:\n        - 'Upgraded Firefox to version 60.0.1-r0.'\n    - version: 1.0.2\n      date: 2018-03-15\n      changes:\n        - 'Fixed issue where Firefox would not gracefully terminate.'\n        - 'Fixed an issue where restoring session would resize window to the wrong dimensions.'\n    - version: 1.0.1\n      date: 2018-03-02\n      changes:\n        - 'Now using baseimage v3.3.4, which brings the following changes:'\n        - '2:Fixed issue where log monitor states were not cleared during container startup.'\n        - 'Updated Firefox to version 58.0.1-r2.'\n    - version: 1.0.0\n      date: 2018-02-16\n      changes:\n        - 'Initial release.'\n\ncontainer:\n  unsupported_volume: /storage\n\n  # Environment variables.\n  environment_variables:\n    - name: FF_OPEN_URL\n      description: >-\n        The URL to open when {{ app.friendly_name }} starts.\n      type: public\n      unraid_template:\n        title: \"Open URL\"\n        display: advanced\n        required: false\n        mask: false\n    - name: FF_KIOSK\n      description: >-\n        Set to `1` to enable kiosk mode.  This mode launches Firefox in a very\n        restricted and limited mode best suitable for public areas or\n        customer-facing displays.\n      type: public\n      default: 0\n      unraid_template:\n        title: \"Kiosk Mode\"\n        description: >-\n          Set to 1 to enable kiosk mode.  This mode launches Firefox in a very\n          restricted and limited mode best suitable for public areas or\n          customer-facing displays.\n        display: advanced\n        required: false\n        mask: false\n    - name: FF_CUSTOM_ARGS\n      description: >-\n        Custom argument(s) to pass when launching {{ app.friendly_name }}.\n      type: public\n      default: 0\n      unraid_template:\n        title: \"Custom Arguments\"\n        display: advanced\n        required: false\n        mask: false\n\n  # Volumes\n  volumes: []\n\n  # Network ports\n  ports: []\n\n  # Devices\n  devices:\n    - path: /dev/snd\n      description: Optional Linux device to expose to have sound.\n"
        },
        {
          "name": "membarrier_check.c",
          "type": "blob",
          "size": 0.2626953125,
          "content": "#include <stdlib.h>\n#include <stdio.h>\n#include <linux/membarrier.h>\n#include <sys/membarrier.h>\n\nint main()\n{\n    int rc = membarrier(MEMBARRIER_CMD_QUERY, 0);\n    if (rc < 0) {\n        perror(\"membarrier\");\n        exit(EXIT_FAILURE);\n    }\n    exit(EXIT_SUCCESS);\n}\n"
        },
        {
          "name": "rootfs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}