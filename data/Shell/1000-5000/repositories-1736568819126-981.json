{
  "metadata": {
    "timestamp": 1736568819126,
    "page": 981,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sainnhe/tmux-fzf",
      "stars": 1028,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Anti-996-LICENSE",
          "type": "blob",
          "size": 2.51953125,
          "content": "Copyright (c) 2019 Sainnhepark\n\nAnti 996 License Version 1.0 (Draft)\n\nPermission is hereby granted to any individual or legal entity\nobtaining a copy of this licensed work (including the source code,\ndocumentation and/or related items, hereinafter collectively referred\nto as the \"licensed work\"), free of charge, to deal with the licensed\nwork for any purpose, including without limitation, the rights to use,\nreproduce, modify, prepare derivative works of, distribute, publish \nand sublicense the licensed work, subject to the following conditions:\n\n1. The individual or the legal entity must conspicuously display,\nwithout modification, this License and the notice on each redistributed \nor derivative copy of the Licensed Work.\n\n2. The individual or the legal entity must strictly comply with all\napplicable laws, regulations, rules and standards of the jurisdiction\nrelating to labor and employment where the individual is physically\nlocated or where the individual was born or naturalized; or where the\nlegal entity is registered or is operating (whichever is stricter). In\ncase that the jurisdiction has no such laws, regulations, rules and\nstandards or its laws, regulations, rules and standards are\nunenforceable, the individual or the legal entity are required to\ncomply with Core International Labor Standards.\n\n3. The individual or the legal entity shall not induce or force its\nemployee(s), whether full-time or part-time, or its independent\ncontractor(s), in any methods, to agree in oral or written form, to\ndirectly or indirectly restrict, weaken or relinquish his or her\nrights or remedies under such laws, regulations, rules and standards\nrelating to labor and employment as mentioned above, no matter whether\nsuch written or oral agreement are enforceable under the laws of the\nsaid jurisdiction, nor shall such individual or the legal entity\nlimit, in any methods, the rights of its employee(s) or independent\ncontractor(s) from reporting or complaining to the copyright holder or\nrelevant authorities monitoring the compliance of the license about\nits violation(s) of the said license.\n\nTHE LICENSED WORK IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN ANY WAY CONNECTION WITH THE\nLICENSED WORK OR THE USE OR OTHER DEALINGS IN THE LICENSED WORK.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2019 Sainnhepark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5908203125,
          "content": "![demo](https://gitlab.com/sainnhe/img/-/raw/master/tmux-fzf.gif)\n\n# Features\n\n- Manage sessions (switch, new, rename, detach, kill).\n- Manage windows (switch, link, move, swap, rename, kill).\n- Manage panes (switch, break, join, swap, layout, kill, resize).\n- Search commands and append to command prompt.\n- Search key bindings and execute.\n- Search clipboard history and paste to current window.\n- Process management (top, pstree, terminate, kill, interrupt, continue, stop, quit, hangup).\n- User menu (run custom commands).\n- Preview sessions, windows and panes.\n- Multiple selection.\n\n# Installation\n\n## Requirements\n\n- [GNU bash](https://www.gnu.org/software/bash/)\n- [sed](https://www.gnu.org/software/sed/)\n- [junegunn/fzf](https://github.com/junegunn/fzf/)\n- [CopyQ](https://github.com/hluk/CopyQ/) (optional): Access system clipboard, fallback to builtin tmux buffers if copyq is not executable.\n- [pstree](https://gitlab.com/psmisc/psmisc/) (optional): Display process tree.\n\n**Note:** Please use this command to check whether tmux is able to find fzf [#1](https://github.com/sainnhe/tmux-fzf/issues/1): `tmux run-shell -b 'command -v fzf'`\n\n## Install via [TPM](https://github.com/tmux-plugins/tpm/)\n\nAdd this line to your `~/.tmux.conf`\n\n```tmux\nset -g @plugin 'sainnhe/tmux-fzf'\n```\n\nReload configuration, then press `prefix` + `I`.\n\n# Usage\n\nTo launch tmux-fzf, press `prefix` + `F` (Shift+F).\n\nThis plugin supports multiple selection for some actions, you can press `TAB` and `Shift-TAB` to mark multiple items.\n\nMost of the features work out of the box, but there are some features that need to be explained here.\n\n## Kill Window(s)\n\nThe `kill` action in tmux-fzf actually uses `tmux unlink-window -k` instead of `tmux kill-window`.\n\nThe main difference between `unlink-window -k` and `kill-window` is that `kill-window` will kill current window and all other windows linked to it, while `unlink-window -k` will only kill current window.\n\nThe logic of `unlink -k` is a bit like hard links. If the current window only exists in one session, then kill; if the current window exists in multiple sessions, then unlink.\n\nBtw, if you want to bind a key to kill current window, I would recommend `unlink-window -k` instead of `kill`.\n\n## User Menu\n\nYou can add a custom menu to quickly execute some commands.\n\nThis feature is not enabled by default. To enable it, add something like this to `~/.tmux.conf`\n\n```tmux\nTMUX_FZF_MENU=\\\n\"foo\\necho 'Hello!'\\n\"\\\n\"bar\\nls ~\\n\"\\\n\"sh\\nsh ~/test.sh\\n\"\n```\n\nWhen you launch tmux-fzf, an extra item named `menu` will appear. Selecting this item will produce [this](https://user-images.githubusercontent.com/37491630/66251156-71836000-e73c-11e9-809d-e865651f8d7d.png).\n\nThere will be 3 items to select from: `foo`, `bar` and `sh`.\n\nWhen you select `foo`, tmux will execute `echo 'Hello!'`.\n\nWhen you select `bar`, tmux will execute `ls ~`.\n\nWhen you select `sh`, tmux will execute `sh ~/test.sh`.\n\n**Note:**\n\n- `foo` and `echo 'hello'` are separated by `\\n` in `TMUX_FZF_MENU`, and you need to add another `\\n` after `echo 'hello'`.\n- **DO NOT** add additional white spaces/tabs at the beginning of each line.\n- Commands are executed using `tmux -c`, so please make sure `tmux -c \"your command\"` does work.\n\n## Popup Window\n\nPopup window is a new feature introduced in tmux 3.2 . To enable this feature, you'll need to have tmux >= 3.2 installed.\n\nThis feature is automatically enabled in tmux >= 3.2, but you can disable it using `$TMUX_FZF_OPTIONS`, see [Fzf Behavior](#fzf-behavior).\n\n# Customization\n\n## Key Binding\n\nFor example, to use `prefix` + `C-f` (Ctrl+F), add this line to your `~/.tmux.conf`\n\n```tmux\nTMUX_FZF_LAUNCH_KEY=\"C-f\"\n```\n\n## Fzf Behavior\n\nThis plugin will read [fzf environment variables](https://github.com/junegunn/fzf/#environment-variables), so you can use these variables to customize the behavior of fzf (e.g. prompt and color).\n\nIn addition, this plugin supports customizing the options of `fzf-tmux` command which is [bundled with fzf](https://github.com/junegunn/fzf#fzf-tmux-script), you can customize them by adding something like this to `~/.tmux.conf`\n\n```tmux\n# Default value in tmux < 3.2\nTMUX_FZF_OPTIONS=\"-m\"\n\n# Default value in tmux >= 3.2\nTMUX_FZF_OPTIONS=\"-p -w 62% -h 38% -m\"\n```\n\nTo list all available options of `fzf-tmux`, execute `~/.tmux/plugins/tmux-fzf/scripts/.fzf-tmux --help` in your shell.\n\n## Preview\n\nPreview is enabled by default. To hide it, add something like this to your `~/.tmux.conf`:\n\n```tmux\nTMUX_FZF_PREVIEW=0\n```\n\nThen the preview window will be hidden until `toggle-preview` is triggered.\n\nBy default, the preview window will try to \"follow\" the content (see description in [the fzf docs](https://github.com/junegunn/fzf/blob/master/ADVANCED.md#log-tailing)). You can opt out this behavior using the following:\n\n```tmux\nTMUX_FZF_PREVIEW_FOLLOW=0\n```\n\n## Order\n\nTo customize the order of the actions, add something like this to your `~/.tmux.conf`:\n\n```tmux\nTMUX_FZF_ORDER=\"session|window|pane|command|keybinding|clipboard|process\"\n```\n\nYou can also use this variable to disable unwanted features. For example, to disable `clipboard` and `process`, simply delete them in `$TMUX_FZF_ORDER`:\n\n```tmux\nTMUX_FZF_ORDER=\"session|window|pane|command|keybinding\"\n```\n\n## Format\n\nFor some reasons, you may want to customize format of panes, windows, sessions listed in fzf. There are three variables to complete this work:\n\n`TMUX_FZF_PANE_FORMAT`   `TMUX_FZF_WINDOW_FORMAT`   `TMUX_FZF_SESSION_FORMAT`\n\nFor example, `tmux list-panes -a` doesn't show running program and window name by default. If you want to show running program and window name, add something like this to `~/.tmux.conf`\n\n```tmux\nTMUX_FZF_PANE_FORMAT=\"[#{window_name}] #{pane_current_command}  [#{pane_width}x#{pane_height}] [history #{history_size}/#{history_limit}, #{history_bytes} bytes] #{?pane_active,[active],[inactive]}\"\n```\n\nSimilarly, `TMUX_FZF_WINDOW_FORMAT` and `TMUX_FZF_SESSION_FORMAT` can also be handled in this way.\n\nFor more information, check \"FORMATS\" section in tmux manual.\n\n\n## Filter\n\nBy default, the current session, window, and pane, are not listed among the switch possibilities. To include it, set:\n\n```tmux\nTMUX_FZF_SWITCH_CURRENT=1\n```\n\nWhen using the window listing script, it is possible to filter its output. This relies on the tmux filtering feature with a specific syntax for filters. For more information about this feature, check \"FORMATS\" section in the tmux manual.\n\nTo use this filtering feature, set the variable `TMUX_FZF_WINDOW_FILTER` to the filter you want to apply before calling the `window.sh` script. \n\n# FAQ\n\n**Q: Why use environment variables instead of tmux options to customize this plugin?**\n\n**A:** Because the performance of tmux options is very bad. I pushed a branch named `tmux-options` to demonstrate how bad the performance will be if we use tmux options to customize this plugin, you can checkout this branch and get it a try.\n\n**Q: How to launch tmux-fzf with preselected action?**\n\n**A:** See [#6](https://github.com/sainnhe/tmux-fzf/issues/6).\n\n**Q: What's your status line configuration?**\n\n**A:** See this [post](https://www.sainnhe.dev/post/status-line-config/).\n\n**Q: What's the color scheme used in the screenshot?**\n\n**A:** [Gruvbox Material](https://github.com/sainnhe/gruvbox-material)\n\n# More plugins\n\n- [sainnhe/tmux-translator](https://github.com/sainnhe/tmux-translator): A translation plugin powered by popup window.\n\n# License\n\nThe code of [/scripts/.fzf-tmux](./scripts/.fzf-tmux) is copied from [junegunn/fzf](https://github.com/junegunn/fzf#license) which is licensed under [MIT](https://github.com/junegunn/fzf/blob/master/LICENSE).\n\nOther code is distributed under [MIT](./LICENSE) && [Anti-996](./Anti-996-LICENSE).\n"
        },
        {
          "name": "main.sh",
          "type": "blob",
          "size": 0.7265625,
          "content": "#!/usr/bin/env bash\n\nCURRENT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n[[ -z \"$TMUX_FZF_ORDER\" ]] && TMUX_FZF_ORDER=\"copy-mode|session|window|pane|command|keybinding|clipboard|process\"\nsource \"$CURRENT_DIR/scripts/.envs\"\n\nitems_origin=\"$(echo $TMUX_FZF_ORDER | tr '|' '\\n')\"\n\n# remove copy-mode from options if we aren't in copy-mode\nif [ \"$(tmux display-message -p '#{pane_in_mode}')\" -eq 0 ]; then\n    items_origin=\"$(echo \"${items_origin}\" | sed '/copy-mode/d')\"\nfi\n\nif [[ ! -z \"$TMUX_FZF_MENU\" ]]; then\n    items_origin+=$'\\nmenu'\nfi\nitems_origin+=$'\\n[cancel]'\nitem=$(echo \"${items_origin}\" | $TMUX_FZF_BIN $TMUX_FZF_OPTIONS )\n[[ \"$item\" == \"[cancel]\" || -z \"$item\" ]] && exit\ntmux run-shell -b \"$CURRENT_DIR/scripts/${item}.sh\"\n"
        },
        {
          "name": "main.tmux",
          "type": "blob",
          "size": 0.2734375,
          "content": "#!/usr/bin/env bash\n\nCURRENT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\nif [ -x \"$(command -v copyq)\" ]; then\n  copyq &>/dev/null &\nfi\n\n[ -z \"$TMUX_FZF_LAUNCH_KEY\" ] && TMUX_FZF_LAUNCH_KEY=\"F\"\ntmux bind-key \"$TMUX_FZF_LAUNCH_KEY\" run-shell -b \"$CURRENT_DIR/main.sh\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}