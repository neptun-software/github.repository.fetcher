{
  "metadata": {
    "timestamp": 1736568662393,
    "page": 744,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JBakamovic/yavide",
      "stars": 1296,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "*.pyc\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.115234375,
          "content": "[submodule \"core/external/cxxd-vim\"]\n\tpath = core/external/cxxd-vim\n\turl = https://github.com/JBakamovic/cxxd-vim.git\n"
        },
        {
          "name": ".vimrc",
          "type": "blob",
          "size": 1.1640625,
          "content": "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\" \tDescription: Yavide entry point (startup file)\n\" \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n\" \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\" Yavide runtime path (root directory)\n\" \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nlet g:YAVIDE_ROOT_DIRECTORY = expand('<sfile>:p:h')\n\nlet g:yavide_configuration_files = [\n\\                   'core/.core.vimrc',\n\\                   'config/.user_settings.vimrc',\n\\                   'core/.api.vimrc',\n\\                   'core/.editor.vimrc',\n\\                   'core/.plugins.vimrc',\n\\                   'core/.globals.vimrc',\n\\                   'core/.autocommands.vimrc',\n\\                   'core/.commands.vimrc',\n\\]\n\nfor file in g:yavide_configuration_files\n    execute('source ' . g:YAVIDE_ROOT_DIRECTORY . '/' . file)\nendfor\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 17.6689453125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 7.3740234375,
          "content": "# All development activities have been moved to [cxxd](https://github.com/JBakamovic/cxxd) and [cxxd-vim](https://github.com/JBakamovic/cxxd-vim) repositories. To keep up with the latest developments it is encouraged to use [cxxd-vim](https://github.com/JBakamovic/cxxd-vim) plugin. See first section of [FAQ](#faq) for more details.\n\n# Contents\n* [Changes](#changes)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Screenshots](#screenshots)\n* [Features](#features)\n* [Credits](#credits)\n* [FAQ](#faq)\n\n# Changes\n* 13th of July, 2018\n    * Core functionality has been extracted to separate repositories:\n        * [cxxd](https://github.com/JBakamovic/cxxd), an implementation of C/C++ language server\n        * [cxxd-vim](https://github.com/JBakamovic/cxxd-vim), a Vim frontend developed for `cxxd`\n    * `Yavide` will include those as dependencies and will continue to function normally but\n      **all development activity and focus is now moved to those projects** so in order to get\n      more features and stability please start using them directly from your ordinary Vim config.\n* 2nd of December, 2017\n    * Implemented Clang-based [indexer](docs/services_framework.md#indexing)\n    * Implemented Clang-based [find-all-references](docs/services_framework.md#find-all-references)\n    * Implemented Clang-based [go-to-definition](docs/services_framework.md#go-to-definition)\n    * Implemented Clang-based [go-to-include](docs/services_framework.md#go-to-include)\n    * Implemented support for [clang-tidy](docs/services_framework.md#clang-tidy)\n    * Implemented support for [JSON compilation databases](docs/services_framework.md#json-compilation-database)\n    * Implemented translation-unit caching mechanisms\n    * Various bugfixes and other smaller improvements\n* 12th of February, 2017\n    * Implemented [type deduction](docs/services_framework.md#type-deduction) service.\n        * A mouse cursor hover over source code will give details about the underlying constructs (i.e. data types, function signatures, etc.).\n* 10th of February, 2017\n    * Implemented Clang-based [fixits & diagnostics](docs/services_framework.md#fixits-and-diagnostics) service.\n    * Implemented mechanism which enables sharing the same AST within multiple services:\n        * E.g. Once the AST is built, semantic syntax highlighting and Clang fixits services\n          will be able to share the same AST.\n        * This will be especially important when more heavy-weight Clang-based services will\n          come into play, such as indexer and auto-completion engine.\n    * Refactored server-side code to decouple editor-specific integrations from the core implementation of services.\n* 19th of January, 2017\n    * Polished some rough edges around syntax highlighting:\n        * Implemented support for handling a set of overloaded functions or function templates (CursorKind.OVERLOADED_DECL_REF expressions)\n        * Implemented support for handling dependent types (TypeKind.DEPENDENT expressions)\n        * Implemented non-intrusive patch for clang.cindex enabling more flexible AST traversal\n* 28th of December, 2016\n    * Implemented Clang-based source code [syntax highlighting](docs/services_framework.md#syntax-highlighting) service\n      (run `cd <yavide_install_dir>/colors/yaflandia && git pull` to get required colorscheme changes)\n* 1st of July, 2016\n    * Implemented new generic client-server (async) [framework](docs/services_framework.md#framework) which enables dispatching any kind of operations to run in a separate \n      non-blocking background processes (so called [services](docs/services_framework.md#services)) and upon whose completion results can be reported back to the server ('Yavide').\n    * Implemented 4 new services on top of the new async framework:\n        * On-the-fly source code [syntax highlighting](docs/services_framework.md#syntax-highlighting) service.\n        * On-the-fly source code [indexing](docs/services_framework.md#indexing) service.\n        * Clang-based source code [auto-formatting](docs/services_framework.md#auto-formatting) service.\n        * [Project builder](docs/services_framework.md#project-builder) service.\n\n# Installation\nSee [Installation guide](docs/INSTALL.md).\n\n# Usage\nSee [Usage](docs/usage.md).\n\n# Screenshots\n![Yavide](https://raw.githubusercontent.com/wiki/JBakamovic/yavide/images/yavide_in_action.png)\n\nSee [some GIFs in action](docs/services_framework.md).\n\n[More details ...](https://github.com/JBakamovic/yavide/wiki/Screenshots#how-it-looks-like)\n\n# Features\n* Bundled and tweaked for C/C++ development\n* Project management\n  * Create new projects or import existing code base into the new workspace\n* Project explorer\n  * Explore the project using a tree-view widget\n* Project builder\n  * Trigger your builds within the environment to run non-intrusively in background\n* Class browser\n  * Featuring an overview of symbols defined in current unit (i.e. macro, struct, class, method, namespace, etc.)\n* Source code auto-completion\n  * Backed by real C/C++ compiler back-end to ensure total correctness\n* Source code navigation\n  * Featuring a fully automated tag generation system which keeps the symbol database up-to-date\n* Source code syntax highlighting based on `libclang`\n  * Providing more rich syntax highlighting support than the one provided originally by `Vim`\n* Source code auto-formatting\n  * `clang-formatter` support\n* Source code static analysis\n  * `Cppcheck` support\n* Source code management client integration\n  * Featuring integration of `Git` client\n* Many more miscellaneous features like:\n  * Parenthesis auto-complete\n  * Context-aware ordinary text auto-complete\n  * Multiple-selection editing support\n  * Code snippets\n  * Color schemes support\n\n# Credits\nThis is an alphabetically ordered list of third-party Vim plugins currently utilized in the system:\n* A (https://github.com/vim-scripts/a.vim)\n* Clang_complete (https://github.com/Rip-Rip/clang_complete)\n* NERDCommenter (https://github.com/scrooloose/nerdcommenter)\n* NERDTree (https://github.com/scrooloose/nerdtree)\n* SuperTab (https://github.com/ervandew/supertab)\n* Tagbar (https://github.com/majutsushi/tagbar)\n* UltiSnips (https://github.com/SirVer/ultisnips)\n* vim-airline (https://github.com/bling/vim-airline)\n* vim-autoclose (https://github.com/Townk/vim-autoclose)\n* vim-fugitive (https://github.com/tpope/vim-fugitive)\n* vim-gitgutter (https://github.com/airblade/vim-gitgutter)\n* vim-multiple-cursors (https://github.com/terryma/vim-multiple-cursors)\n* vim-pathogen (https://github.com/tpope/vim-pathogen)\n\n# FAQ\n## Why development focus has been moved to [cxxd](https://github.com/JBakamovic/cxxd) and [cxxd-vim](https://github.com/JBakamovic/cxxd-vim)?\nTL;DR Having separated one big monolithic `Yavide` repository into two separate ones (`cxxd` & `cxxd-vim`) brought us more modular, reusable, testable and flexible design. There are many many other advantages to this approach for all of them to be noted down here briefly but the important part now is that the frontend logic (e.g. UI implementation) is now separated from the backend implementation (C/C++ language server features). Both of these developments can now be driven separately and in parallel. Furthermore, `cxxd-vim` behaves like a real Vim plugin so you won't need to use hacky install scripts anymore but a regular way of installing just like for any other Vim plugin out there (e.g. Vundle). For many other details please have a look at respective repositories.\n\n## Other questions\nSee [FAQ](docs/FAQ.md).\n\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 10.9609375,
          "content": "#!/bin/bash\n# yavide installation script\n\n#####################################################################################################\n# Variables\n#####################################################################################################\nSYSTEM_PACKAGE_MANAGER=\"\"\nSYSTEM_PACKAGE_TYPE=\"\"\nSYSTEM_PACKAGE_SET=\"\"\nYAVIDE_INSTALL_DIR_DEFAULT=\"/opt\"\nPIP_INSTALL_CMD=\"pip install\"\n\n#####################################################################################################\n# Helper functions\n#####################################################################################################\nguess_system_package_manager(){\n    if [ \"`which dnf`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"dnf\"\n        SYSTEM_PACKAGE_TYPE=\"rpm\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"dnf -y install\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"dnf --refresh check-update\"\n    elif [ \"`which apt-get`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"apt-get\"\n        SYSTEM_PACKAGE_TYPE=\"deb\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"apt-get -y install\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"apt-get update\"\n    elif [ \"`which zypper`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"zypper\"\n        SYSTEM_PACKAGE_TYPE=\"rpm\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"zypper --non-interactive install\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"zypper refresh\"\n    elif [ \"`which yum`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"yum\"\n        SYSTEM_PACKAGE_TYPE=\"rpm\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"yum -y install\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"yum check-update\"\n    elif [ \"`which pacman`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"pacman\"\n        SYSTEM_PACKAGE_TYPE=\"archpkg\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"pacman --noconfirm -S\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"pacman -Syu\"\n    elif [ \"`which emerge`\" != \"\" ]; then\n        SYSTEM_PACKAGE_MANAGER=\"emerge\"\n        SYSTEM_PACKAGE_TYPE=\"ebuild\"\n        SYSTEM_PACKAGE_MANAGER_INSTALL=\"emerge\"\n        SYSTEM_PACKAGE_MANAGER_UPDATE=\"emerge --sync\"\n        PIP_INSTALL_CMD=\"pip install --user\"\n    fi\n\n    if [ \"$SYSTEM_PACKAGE_TYPE\" == \"rpm\" ]; then\n        SYSTEM_PACKAGE_SET=\"gvim ctags cppcheck git wget pcre-devel python-pip python-devel clang-devel clang-libs clang-tools-extra\"\n    elif [ \"$SYSTEM_PACKAGE_TYPE\" == \"deb\" ]; then\n        SYSTEM_PACKAGE_SET=\"vim-gnome ctags cppcheck git wget libpcre3 libpcre3-dev python-pip python-dev libclang-dev clang-tidy\"\n    elif [ \"$SYSTEM_PACKAGE_TYPE\" == \"archpkg\" ] || [ \"$SYSTEM_PACKAGE_TYPE\" == \"ebuild\" ]; then\n        SYSTEM_PACKAGE_SET=\"gvim ctags cppcheck git wget pcre python-pip python clang\"\n    fi\n\n    PIP_PACKAGE_SET=\"clang\"\n}\n\nprint_usage(){\n    echo -e \"Usage: './install.sh <directory>'\"\n    echo -e \"Args:  <directory>\"\n    echo -e \"           Optional argument defining installation directory. Default one is '\"$YAVIDE_INSTALL_DIR_DEFAULT\"'\"\n}\n\n#####################################################################################################\n# Plugins\n#####################################################################################################\n\n# Nerdtree\nPLUGINS=\"$PLUGINS https://github.com/scrooloose/nerdtree\"\n\n# Clang_complete\nPLUGINS=\"$PLUGINS https://github.com/Rip-Rip/clang_complete\"\n\n# SuperTab\nPLUGINS=\"$PLUGINS https://github.com/ervandew/supertab\"\n\n# Tagbar\nPLUGINS=\"$PLUGINS https://github.com/majutsushi/tagbar\"\n\n# Airline\nPLUGINS=\"$PLUGINS https://github.com/bling/vim-airline\"\nPLUGINS=\"$PLUGINS https://github.com/vim-airline/vim-airline-themes\"\n\n# A\nPLUGINS=\"$PLUGINS https://github.com/vim-scripts/a.vim\"\n\n# Auto-close\nPLUGINS=\"$PLUGINS https://github.com/Townk/vim-autoclose\"\n\n# Multiple-cursors\nPLUGINS=\"$PLUGINS https://github.com/terryma/vim-multiple-cursors.git\"\n\n# NERDCommenter\nPLUGINS=\"$PLUGINS https://github.com/scrooloose/nerdcommenter\"\n\n# UltiSnips\nPLUGINS=\"$PLUGINS https://github.com/SirVer/ultisnips\"\n\n# Git\nPLUGINS=\"$PLUGINS https://github.com/tpope/vim-fugitive.git\"\nPLUGINS=\"$PLUGINS https://github.com/airblade/vim-gitgutter.git\"\n\n# Pathogen\nPLUGINS=\"$PLUGINS https://github.com/tpope/vim-pathogen\"\n\n# Color schemes\nSCHEMES=\"$SCHEMES https://github.com/JBakamovic/yaflandia.git\"\nSCHEMES=\"$SCHEMES https://github.com/jeffreyiacono/vim-colors-wombat\"\nSCHEMES=\"$SCHEMES https://github.com/morhetz/gruvbox.git\"\n\n#####################################################################################################\n# Setup the installation directory\n#####################################################################################################\nYAVIDE_INSTALL_DIR=$YAVIDE_INSTALL_DIR_DEFAULT\nif [ $# -eq 0 ]; then\n    YAVIDE_INSTALL_DIR=$YAVIDE_INSTALL_DIR\"/yavide\"\n    echo \"Using default installation directory: '\"$YAVIDE_INSTALL_DIR\"'\"\nelif [ $# -eq 1 ]; then\n    YAVIDE_INSTALL_DIR=${1%/}\n    if [ ! -d $YAVIDE_INSTALL_DIR ]; then\n        echo \"Directory '\"$YAVIDE_INSTALL_DIR\"' does not exist.\"\n        print_usage\n        echo \"Exiting ...\"\n        exit\n    fi\n    YAVIDE_INSTALL_DIR=$YAVIDE_INSTALL_DIR\"/yavide\"\n    echo \"Using user-defined installation directory: '\"$YAVIDE_INSTALL_DIR\"'\"\nelse\n    echo \"Invalid number of arguments!\"\n    print_usage\n    echo \"Exiting ...\"\n    exit\nfi\n\n#####################################################################################################\n# Identify the system package manager\n#####################################################################################################\nguess_system_package_manager\nif [ -z $SYSTEM_PACKAGE_MANAGER ]; then\n    echo \"Identifying the system package manager failed. Currently supported ones are:\n    'dnf', 'apt-get', 'zypper', 'yum', 'pacman', 'emerge'\n\nShould you want to add support for new one, it should be easy enough to modify the\n'guess_system_package_manager()' function which can be found in 'install.sh' script.\n\nAlternatively, issue a support request on project homepage.\"\nfi\necho \"System package manager: '\"$SYSTEM_PACKAGE_MANAGER\"'\"\necho \"System package type: '\"$SYSTEM_PACKAGE_TYPE\"'\"\n\n#####################################################################################################\n# Root password needed for some operations\n#####################################################################################################\nCURRENT_USER=`whoami`\necho -n \"Enter the password for $CURRENT_USER: \"\nstty_orig=`stty -g` # save original terminal setting.\nstty -echo          # turn-off echoing.\nread passwd         # read the password\nstty $stty_orig     # restore terminal setting.\n\n#####################################################################################################\n# Install dependencies\n#####################################################################################################\necho \"$passwd\" | sudo -S $SYSTEM_PACKAGE_MANAGER_UPDATE\necho \"$passwd\" | sudo -S $SYSTEM_PACKAGE_MANAGER_INSTALL $SYSTEM_PACKAGE_SET\necho \"$passwd\" | sudo -S $PIP_INSTALL_CMD $PIP_PACKAGE_SET\n\nmkdir -p $HOME/.fonts && git clone https://github.com/Lokaltog/powerline-fonts.git $HOME/.fonts\nfc-cache -vf $HOME/.fonts\n\n#####################################################################################################\n# Start the installation\n#####################################################################################################\n\n# Yavide launcher file needs to be modified to reflect the destination directory selected in install process\nsed -i '/^Exec=/ s\\$\\ -u '\"$YAVIDE_INSTALL_DIR\"'/.vimrc\\' res/yavide.desktop\n\n# Try to setup the 'libclang' path automatically by searching for it in '/usr/lib*' system paths.\n# In case multiple paths were found, the last one will be selected. Reasoning lays behind the fact\n# that paths will be sorted alphabetically and selecting the last entry will make the script pick\n# up the most recent version of the library. However, user is free to change the selection afterwards\n# in configuration files. This is only to get the things going.\necho \"Searching for 'libclang' paths ...\"\ndeclare -a libclang_paths\npaths=`find /usr -path \"/usr/lib*/libclang.so\"`\nlibclang_paths=( ${paths} )\necho \"Found\" ${#libclang_paths[@]} \"'libclang' paths in total.\"\nif [ ${#libclang_paths[@]} != 0 ]; then\n\tfor (( i = 0; i < ${#libclang_paths[@]}; i++ ));\n\tdo\n\t\techo ${libclang_paths[$i]}\n\tdone\n\tlibclang_selected=${libclang_paths[${#libclang_paths[@]}-1]}\n\techo \"Selected 'libclang' is '\"$libclang_selected\"'\"\n\tsed -i '/let g:libclang_location/c\\let g:libclang_location = \"'${libclang_selected}'\"' config/.user_settings.vimrc\nfi\n\n# Build the destination directory and copy all of the relevant files\necho \"$passwd\" | sudo -S mkdir -p $YAVIDE_INSTALL_DIR\necho \"$passwd\" | sudo -S cp -R . $YAVIDE_INSTALL_DIR\n\n# Make Yavide accessible via desktop shortcut\ndesktop=`echo $(xdg-user-dir DESKTOP)`\ncp res/yavide.desktop $desktop\n\n# Make Yavide accessible via 'Applications' menu and via application launcher\necho \"$passwd\" | sudo -S cp res/yavide.desktop /usr/share/applications\n\n# Make Yavide accessible in terminal\nyavide_alias=`grep -w \"Exec\" res/yavide.desktop | sed s/Exec=//`\necho \"# Yavide alias\" >> $HOME/.bashrc\necho \"alias yavide=\\\"\"$yavide_alias\"\\\"\" >> $HOME/.bashrc\n\necho -e \"\\n\"\necho \"----------------------------------------------------------------------------\"\necho \"Installing plugins ...\"\necho \"----------------------------------------------------------------------------\"\necho \"$passwd\" | sudo -S mkdir -p $YAVIDE_INSTALL_DIR/core/external && cd $YAVIDE_INSTALL_DIR/core/external\n\n# Fetch/update the plugins\nfor URL in $PLUGINS; do\n    # remove path from url\n    DIR=${URL##*/}\n    # remove extension from dir\n    DIR=${DIR%.*}\n    if [ -d $DIR  ]; then\n        echo \"Updating plugin $DIR...\"\n        cd $DIR\n        echo \"$passwd\" | sudo -S git pull\n        cd ..\n    else\n        echo \"$passwd\" | sudo -S git clone $URL $DIR\n    fi\ndone\n\necho -e \"\\n\"\necho \"----------------------------------------------------------------------------\"\necho \"Installing clang_complete ...\"\necho \"----------------------------------------------------------------------------\"\ncd $YAVIDE_INSTALL_DIR/core/external/clang_complete\nmake install\n\necho -e \"\\n\"\necho \"----------------------------------------------------------------------------\"\necho \"Installing color schemes ...\"\necho \"----------------------------------------------------------------------------\"\necho \"$passwd\" | sudo -S mkdir -p $YAVIDE_INSTALL_DIR/colors && cd $YAVIDE_INSTALL_DIR/colors\n\n# Fetch/update the color schemes\nfor URL in $SCHEMES; do\n    # remove path from url\n    DIR=${URL##*/}\n    # remove extension from dir\n    DIR=${DIR%.*}\n    if [ -d $DIR  ]; then\n        echo \"Updating scheme $DIR...\"\n        cd $DIR\n        echo \"$passwd\" | sudo -S git pull\n        cd ..\n    else\n        echo \"$passwd\" | sudo -S git clone $URL $DIR\n\tfi\ndone\n\n# Make symlinks to scheme files\necho \"$passwd\" | sudo -S ln -s `find . -wholename '*/colors/*.vim'` .\n\necho -e \"\\n\"\necho \"----------------------------------------------------------------------------\"\necho \"Setting permissions ...\"\necho \"----------------------------------------------------------------------------\"\necho \"$passwd\" | sudo -S chown $USER $HOME/Desktop/yavide.desktop\necho \"$passwd\" | sudo -S chown -R $USER $YAVIDE_INSTALL_DIR\n\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}