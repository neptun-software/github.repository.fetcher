{
  "metadata": {
    "timestamp": 1736568216597,
    "page": 69,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rbenv/ruby-build",
      "stars": 3899,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0458984375,
          "content": "/share/man/man[1-8]/*.[1-8] linguist-generated\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "/bats\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.310546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting one of the project maintainers listed below. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Project Maintainers\n\n* Sam Stephenson <<sstephenson@gmail.com>>\n* Mislav MarohniÄ‡ <<mislav.marohnic@gmail.com>>\n* Erik Michaels-Ober <<sferik@gmail.com>>\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1455078125,
          "content": "## Adding a new Ruby version\n\nUse one of the scripts `script/update-*` to add a new Ruby version.\n\n## Updating OpenSSL\n\nUse `script/update-openssl`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "Copyright (c) 2012-2013 Sam Stephenson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.294921875,
          "content": "release_version := $(shell grep \"^RUBY_BUILD_VERSION\" bin/ruby-build | cut -d\\\" -f2)\n\n.PHONY: install\ninstall:\n\tbash install.sh\n\nshare/man/man1/%.1: share/man/man1/%.1.adoc bin/ruby-build\n\twhich asciidoctor || gem install asciidoctor\n\tasciidoctor -b manpage -a version=$(release_version:v%=%) -o $@ $<\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.1142578125,
          "content": "# ruby-build\n\nruby-build is a command-line tool that simplifies installation of any Ruby version from source on Unix-like systems.\n\nIt is available as a plugin for [rbenv][] as the `rbenv install` command, or as a standalone program as the `ruby-build` command.\n\n## Installation\n\n### Homebrew package manager\n```sh\nbrew install ruby-build\n```\n\nUpgrade with:\n```sh\nbrew upgrade ruby-build\n```\n\n### Clone as rbenv plugin using git\n```sh\ngit clone https://github.com/rbenv/ruby-build.git \"$(rbenv root)\"/plugins/ruby-build\n```\n\nUpgrade with:\n```sh\ngit -C \"$(rbenv root)\"/plugins/ruby-build pull\n```\n\n### Install manually as a standalone program\n\nFirst, download a tarball from https://github.com/rbenv/ruby-build/releases/latest. Then:\n```sh\ntar -xzf ruby-build-*.tar.gz\nPREFIX=/usr/local ./ruby-build-*/install.sh\n```\n\n## Usage\n\n### Basic Usage\n\n```sh\n# As a standalone program\n$ ruby-build --list                        # lists latest stable releases for each Ruby\n$ ruby-build --definitions                 # lists all definitions, including outdated ones\n$ ruby-build 3.2.2 ~/.rubies/ruby-3.2.2    # installs Ruby 3.2.2\n$ ruby-build -d ruby-3.2.2 ~/.rubies       # alternate form for the previous example\n\n# As an rbenv plugin\n$ rbenv install 3.2.2  # installs Ruby 3.2.2 to ~/.rbenv/versions/3.2.2\n```\n\n> [!WARNING]\n> ruby-build mostly does not verify that system dependencies are present before downloading and attempting to compile Ruby from source. Please ensure that [all requisite libraries][build-env] such as build tools and development headers are already present on your system.\n\nBasically, what ruby-build does when installing a Ruby version is this:\n- Downloads an official tarball of Ruby source code;\n- Extracts the archive into a temporary directory on your system;\n- Executes `./configure --prefix=/path/to/destination` in the source code;\n- Runs `make install` to compile Ruby;\n- Verifies that the installed Ruby is functional.\n\nDepending on the context, ruby-build does a little bit more than the above: for example, it will try to link Ruby to the appropriate OpenSSL version, even if that means downloading and compiling OpenSSL itself; it will discover and link to Homebrew-installed instances of some libraries like libyaml and readline, etc.\n\n### Advanced Usage\n\n#### Custom Build Definitions\n\nTo install a version of Ruby that is not recognized by ruby-build, you can specify the path to a custom build definition file in place of a Ruby version number.\n\nCheck out [default build definitions][definitions] as examples on how to write definition files.\n\n#### Custom Build Configuration\n\nThe build process may be configured through the following environment variables:\n\n| Variable                        | Function                                                                                         |\n| ------------------------------- | ------------------------------------------------------------------------------------------------ |\n| `TMPDIR`                        | Where temporary files are stored.                                                                |\n| `RUBY_BUILD_BUILD_PATH`         | Where sources are downloaded and built. (Default: a timestamped subdirectory of `TMPDIR`)        |\n| `RUBY_BUILD_CACHE_PATH`         | Where to cache downloaded package files. (Default: `~/.rbenv/cache` if invoked as rbenv plugin)  |\n| `RUBY_BUILD_HTTP_CLIENT`        | One of `aria2c`, `curl`, or `wget` to use for downloading. (Default: first one found in PATH)    |\n| `RUBY_BUILD_ARIA2_OPTS`         | Additional options to pass to `aria2c` for downloading.                                          |\n| `RUBY_BUILD_CURL_OPTS`          | Additional options to pass to `curl` for downloading.                                            |\n| `RUBY_BUILD_WGET_OPTS`          | Additional options to pass to `wget` for downloading.                                            |\n| `RUBY_BUILD_MIRROR_URL`         | Custom mirror URL root.                                                                          |\n| `RUBY_BUILD_MIRROR_PACKAGE_URL` | Custom complete mirror URL (e.g. http://mirror.example.com/package-1.0.0.tar.gz).                |\n| `RUBY_BUILD_SKIP_MIRROR`        | Bypass the download mirror and fetch all package files from their original URLs.                 |\n| `RUBY_BUILD_TARBALL_OVERRIDE`   | Override the URL to fetch the ruby tarball from, optionally followed by `#checksum`.             |\n| `RUBY_BUILD_DEFINITIONS`        | Colon-separated list of paths to search for build definition files.                              |\n| `RUBY_BUILD_ROOT`               | The path prefix to search for build definitions files. *Deprecated:* use `RUBY_BUILD_DEFINITIONS`|\n| `RUBY_BUILD_VENDOR_OPENSSL`     | Build and vendor openssl even if the system openssl is compatible                                |\n| `CC`                            | Path to the C compiler.                                                                          |\n| `RUBY_CFLAGS`                   | Additional `CFLAGS` options (_e.g.,_ to override `-O3`).                                         |\n| `CONFIGURE_OPTS`                | Additional `./configure` options.                                                                |\n| `MAKE`                          | Custom `make` command (_e.g.,_ `gmake`).                                                         |\n| `MAKE_OPTS` / `MAKEOPTS`        | Additional `make` options.                                                                       |\n| `MAKE_INSTALL_OPTS`             | Additional `make install` options.                                                               |\n| `RUBY_CONFIGURE_OPTS`           | Additional `./configure` options (applies only to Ruby source).                                  |\n| `RUBY_MAKE_OPTS`                | Additional `make` options (applies only to Ruby source).                                         |\n| `RUBY_MAKE_INSTALL_OPTS`        | Additional `make install` options (applies only to Ruby source).                                 |\n| `NO_COLOR`                      | Disable ANSI colors in output. The default is to use colors for output connected to a terminal.  |\n| `CLICOLOR_FORCE`                | Use ANSI colors in output even when not connected to a terminal.                                 |\n\n#### Applying Patches\n\nBoth `rbenv install` and `ruby-build` commands support the `-p/--patch` flag to apply a patch to the Ruby source code before building. Patches are read from standard input:\n\n```sh\n# applying a single patch\n$ rbenv install --patch 1.9.3-p429 < /path/to/ruby.patch\n\n# applying a patch from HTTP\n$ rbenv install --patch 1.9.3-p429 < <(curl -sSL http://git.io/ruby.patch)\n\n# applying multiple patches\n$ cat fix1.patch fix2.patch | rbenv install --patch 1.9.3-p429\n```\n\n#### Checksum Verification\n\nAll Ruby definition files bundled with ruby-build include checksums for packages, meaning that all externally downloaded packages are automatically checked for integrity after fetching.\n\nSee the next section for more information on how to author checksums.\n\n#### Package Mirrors\n\nTo speed up downloads, ruby-build fetches package files from a mirror hosted on\nAmazon CloudFront. To benefit from this, the packages must specify their checksum:\n\n```sh\n# example:\ninstall_package \"ruby-2.6.5\" \"https://ruby-lang.org/ruby-2.6.5.tgz#<SHA2>\"\n```\n\nruby-build will first try to fetch this package from `$RUBY_BUILD_MIRROR_URL/<SHA2>`\n(note: this is the complete URL), where `<SHA2>` is the checksum for the file. It\nwill fall back to downloading the package from the original location if:\n- the package was not found on the mirror;\n- the mirror is down;\n- the download is corrupt, i.e. the file's checksum doesn't match;\n- no tool is available to calculate the checksum; or\n- `RUBY_BUILD_SKIP_MIRROR` is enabled.\n\nYou may specify a custom mirror by setting `RUBY_BUILD_MIRROR_URL`.\n\nIf a mirror site doesn't conform to the above URL format, you can specify the\ncomplete URL by setting `RUBY_BUILD_MIRROR_PACKAGE_URL`. It behaves the same as\n`RUBY_BUILD_MIRROR_URL` except being a complete URL.\n\nThe default ruby-build download mirror is sponsored by\n[Basecamp](https://basecamp.com/).\n\n#### Keeping the build directory after installation\n\nBoth `ruby-build` and `rbenv install` accept the `-k` or `--keep` flag, which\ntells ruby-build to keep the downloaded source after installation. This can be\nuseful if you need to use `gdb` and `memprof` with Ruby.\n\nSource code will be kept in a parallel directory tree `~/.rbenv/sources` when\nusing `--keep` with the `rbenv install` command. You should specify the\nlocation of the source code with the `RUBY_BUILD_BUILD_PATH` environment\nvariable when using `--keep` with `ruby-build`.\n\n## Getting Help\n\nPlease see the [ruby-build wiki][wiki] for solutions to common problems.\n\nIf you can't find an answer on the wiki, open an issue on the [issue tracker][].\nBe sure to include the full build log for build failures.\n\n\n  [rbenv]: https://github.com/rbenv/rbenv#readme\n  [definitions]: https://github.com/rbenv/ruby-build/tree/master/share/ruby-build\n  [wiki]: https://github.com/rbenv/ruby-build/wiki\n  [build-env]: https://github.com/rbenv/ruby-build/wiki#suggested-build-environment\n  [issue tracker]: https://github.com/rbenv/ruby-build/issues\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.4443359375,
          "content": "#!/bin/sh\n# Usage: PREFIX=/usr/local ./install.sh\n#\n# Installs ruby-build under $PREFIX.\n\nset -e\n\ncd \"$(dirname \"$0\")\"\n\nif [ -z \"${PREFIX}\" ]; then\n  PREFIX=\"/usr/local\"\nfi\n\nBIN_PATH=\"${PREFIX}/bin\"\nSHARE_PATH=\"${PREFIX}/share/ruby-build\"\nMAN_PATH=\"${PREFIX}/share/man/man1\"\n\nmkdir -p \"$BIN_PATH\" \"$SHARE_PATH\" \"$MAN_PATH\"\n\ninstall -p bin/* \"$BIN_PATH\"\ninstall -p -m 0644 share/ruby-build/* \"$SHARE_PATH\"\ninstall -p -m 0644 share/man/man1/*.1 \"$MAN_PATH\"\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}