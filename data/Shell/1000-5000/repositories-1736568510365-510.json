{
  "metadata": {
    "timestamp": 1736568510365,
    "page": 510,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MFDGaming/ubuntu-in-termux",
      "stars": 1683,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.197265625,
          "content": "# ubuntu-in-termux\n\n[![DISCORD](https://img.shields.io/badge/Chat-On%20Discord-738BD7.svg?style=for-the-badge)](https://discord.gg/Xaqkdeh)\n\n## What's This?\n\nThis is a script that allows you to install Ubuntu in your termux application without a rooted device\n\n## Updates\n\n**â€¢ Updated to ubuntu 22.04**\n\n## Important\n\n**â€¢ If you have to use ubuntu in termux with a x86/i\\*86 architecture or prefer ubuntu 19.10 you can use this branch -> https://github.com/MFDGaming/ubuntu-in-termux/tree/ubuntu19.10**\n\n**â€¢ If you get an error message that says \"Fatal Kernel too old\" you have to uncomment the line that reads \"command+=\" -k 4.14.81\"\" (remove the # that is located in front of the line) in the \"startubuntu.sh\" file**\n\n### Installation steps\n\n1. Update termux: `apt-get update && apt-get upgrade -y`\n2. Install wget: `apt-get install wget -y`\n3. Install proot: `apt-get install proot -y`\n4. Install git: `apt-get install git -y`\n5. Go to HOME folder: `cd ~`\n6. Download script: `git clone https://github.com/MFDGaming/ubuntu-in-termux.git`\n7. Go to script folder: `cd ubuntu-in-termux`\n8. Give execution permission: `chmod +x ubuntu.sh`\n9. Run the script: `./ubuntu.sh -y`\n10. Now just start ubuntu: `./startubuntu.sh`\n"
        },
        {
          "name": "ubuntu.sh",
          "type": "blob",
          "size": 5.2587890625,
          "content": "#!/data/data/com.termux/files/usr/bin/bash\n\ntime1=\"$( date +\"%r\" )\"\n\ninstall1 () {\ndirectory=ubuntu-fs\nUBUNTU_VERSION='24.10'\nif [ -d \"$directory\" ];then\nfirst=1\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;227m[WARNING]:\\e[0m \\x1b[38;5;87m Skipping the download and the extraction\\n\"\nelif [ -z \"$(command -v proot)\" ];then\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;203m[ERROR]:\\e[0m \\x1b[38;5;87m Please install proot.\\n\"\nprintf \"\\e[0m\"\nexit 1\nelif [ -z \"$(command -v wget)\" ];then\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;203m[ERROR]:\\e[0m \\x1b[38;5;87m Please install wget.\\n\"\nprintf \"\\e[0m\"\nexit 1\nfi\nif [ \"$first\" != 1 ];then\nif [ -f \"ubuntu.tar.gz\" ];then\nrm -rf ubuntu.tar.gz\nfi\nif [ ! -f \"ubuntu.tar.gz\" ];then\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Downloading the ubuntu rootfs, please wait...\\n\"\nARCHITECTURE=$(dpkg --print-architecture)\ncase \"$ARCHITECTURE\" in\naarch64) ARCHITECTURE=arm64;;\narm) ARCHITECTURE=armhf;;\namd64|x86_64) ARCHITECTURE=amd64;;\n*)\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;203m[ERROR]:\\e[0m \\x1b[38;5;87m Unknown architecture :- $ARCHITECTURE\"\nexit 1\n;;\n\nesac\n\nwget https://cdimage.ubuntu.com/ubuntu-base/releases/${UBUNTU_VERSION}/release/ubuntu-base-${UBUNTU_VERSION}-base-${ARCHITECTURE}.tar.gz -q -O ubuntu.tar.gz \nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Download complete!\\n\"\n\nfi\n\ncur=`pwd`\nmkdir -p $directory\ncd $directory\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Decompressing the ubuntu rootfs, please wait...\\n\"\nproot --link2symlink tar -zxf $cur/ubuntu.tar.gz --exclude='dev'||:\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m The ubuntu rootfs have been successfully decompressed!\\n\"\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Fixing the resolv.conf, so that you have access to the internet\\n\"\nprintf \"nameserver 8.8.8.8\\nnameserver 8.8.4.4\\n\" > etc/resolv.conf\nstubs=()\nstubs+=('usr/bin/groups')\nfor f in ${stubs[@]};do\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Writing stubs, please wait...\\n\"\necho -e \"#!/bin/sh\\nexit\" > \"$f\"\ndone\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Successfully wrote stubs!\\n\"\ncd $cur\n\nfi\n\nmkdir -p ubuntu-binds\nbin=startubuntu.sh\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Creating the start script, please wait...\\n\"\ncat > $bin <<- EOM\n#!/bin/bash\ncd \\$(dirname \\$0)\n## unset LD_PRELOAD in case termux-exec is installed\nunset LD_PRELOAD\ncommand=\"proot\"\n## uncomment following line if you are having FATAL: kernel too old message.\n#command+=\" -k 4.14.81\"\ncommand+=\" --link2symlink\"\ncommand+=\" -0\"\ncommand+=\" -r $directory\"\nif [ -n \"\\$(ls -A ubuntu-binds)\" ]; then\n    for f in ubuntu-binds/* ;do\n      . \\$f\n    done\nfi\ncommand+=\" -b /dev\"\ncommand+=\" -b /proc\"\ncommand+=\" -b /sys\"\ncommand+=\" -b ubuntu-fs/tmp:/dev/shm\"\ncommand+=\" -b /data/data/com.termux\"\ncommand+=\" -b /:/host-rootfs\"\ncommand+=\" -b /sdcard\"\ncommand+=\" -b /storage\"\ncommand+=\" -b /mnt\"\ncommand+=\" -w /root\"\ncommand+=\" /usr/bin/env -i\"\ncommand+=\" HOME=/root\"\ncommand+=\" PATH=/usr/local/sbin:/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/games:/usr/local/games\"\ncommand+=\" TERM=\\$TERM\"\ncommand+=\" LANG=C.UTF-8\"\ncommand+=\" /bin/bash --login\"\ncom=\"\\$@\"\nif [ -z \"\\$1\" ];then\n    exec \\$command\nelse\n    \\$command -c \"\\$com\"\nfi\nEOM\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m The start script has been successfully created!\\n\"\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Fixing shebang of startubuntu.sh, please wait...\\n\"\ntermux-fix-shebang $bin\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Successfully fixed shebang of startubuntu.sh! \\n\"\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Making startubuntu.sh executable please wait...\\n\"\nchmod +x $bin\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Successfully made startubuntu.sh executable\\n\"\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Cleaning up please wait...\\n\"\nrm ubuntu.tar.gz -rf\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m Successfully cleaned up!\\n\"\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;83m[Installer thread/INFO]:\\e[0m \\x1b[38;5;87m The installation has been completed! You can now launch Ubuntu with ./startubuntu.sh\\n\"\nprintf \"\\e[0m\"\n\n}\nif [ \"$1\" = \"-y\" ];then\ninstall1\nelif [ \"$1\" = \"\" ];then\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;127m[QUESTION]:\\e[0m \\x1b[38;5;87m Do you want to install ubuntu-in-termux? [Y/n] \"\n\nread cmd1\nif [ \"$cmd1\" = \"y\" ];then\ninstall1\nelif [ \"$cmd1\" = \"Y\" ];then\ninstall1\nelse\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;203m[ERROR]:\\e[0m \\x1b[38;5;87m Installation aborted.\\n\"\nprintf \"\\e[0m\"\nexit\nfi\nelse\nprintf \"\\x1b[38;5;214m[${time1}]\\e[0m \\x1b[38;5;203m[ERROR]:\\e[0m \\x1b[38;5;87m Installation aborted.\\n\"\nprintf \"\\e[0m\"\nfi\n"
        }
      ]
    }
  ]
}