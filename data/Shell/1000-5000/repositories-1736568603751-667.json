{
  "metadata": {
    "timestamp": 1736568603751,
    "page": 667,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ContainerSolutions/kubernetes-examples",
      "stars": 1403,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "# tgz archive for krew plugin\nexamples.tar.gz\n"
        },
        {
          "name": ".kubeconform-ignore",
          "type": "blob",
          "size": 0.0810546875,
          "content": "./cloud-providers/gcp/https-ready-alb/https-ready-alb.yaml\n./plugins/examples.yaml\n"
        },
        {
          "name": ".supported-k8s-versions",
          "type": "blob",
          "size": 0.0546875,
          "content": "v1.27.0\nv1.26.0\nv1.25.0\nv1.24.0\nv1.23.0\nv1.22.0\nv1.21.0\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.595703125,
          "content": "---\n\nyaml-files:\n  - '*.yaml'\n  - '*.yml'\n  - '.yamllint'\n\nignore: |\n  .github/\n\nrules:\n  braces: enable\n  brackets: enable\n  colons: enable\n  commas: enable\n  comments:\n    level: warning\n  comments-indentation:\n    level: warning\n  document-end: disable\n  document-start:\n    level: warning\n  empty-lines: enable\n  empty-values: disable\n  hyphens: enable\n  indentation: enable\n  key-duplicates: enable\n  key-ordering: disable\n  line-length: disable\n  new-line-at-end-of-file: enable\n  new-lines: enable\n  octal-values: disable\n  quoted-strings: disable\n  trailing-spaces: enable\n  truthy:\n    level: warning\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.30859375,
          "content": "# Code of Conduct\n\nAll participants to the Kubernetes Examples project are required to comply with the following code\nof conduct, which is based on v2.0 of the [Contributor\nCovenant](https://www.contributor-covenant.org/).\n\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to ian.miell@container-solutions.com or any of the project admins.\n\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.001953125,
          "content": "# Contributing To Kubernetes Examples\n\nFirstly, big thanks for considering contributing to the project. We really hope to make this into a\ncommunity project and to do that we need your help!\n\n## Code of Conduct\n\nWe are serious about making this a welcoming, happy project. We will not tolerate discrimination,\naggressive or insulting behaviour.\n\nTo this end, the project and everyone participating in it is bound by the [Code of\nConduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code. Please report\nunacceptable behaviour to any of the project admins or ian.miell@container-solutions.com.\n\n## Bugs/Mistakes\n\nIf there is mistake in one of the YAML files, please [open an\nissue](https://github.com/ContainerSolutions/kuberntes-examples/issues). If the YAML doesn't work on\na given platform, please provide details of the platform. If it's a simple fix e.g. the API version\nneeds updated, please consider opening a PR instead. \n\n## Contributing New Examples\n\nNew examples are warmly welcomed! But please make sure they are in-keeping with the style of the\nexisting examples. All examples should be:\n\n    - As simple as possible to illustrate the functionality\n\n    - Self-contained (ie limited to one .yaml file)\n\n    - Non-conflicting (eg resource names are unique)\n\n    - Clear (eg resource names are verbose and unambiguous)\n \nPlease open a Pull Request to contribute new examples.\n\n## Pull Request Process\n\nAll PRs have to be reviewed and signed off by another developer before being merged to the master\nbranch. This review may ask for some changes - please don't be alarmed or upset at this; it is\nexpected that all PRs will need tweaks and a normal part of the process.\n\nBe aware that this repo uses the [MIT licence](LICENSE).\n\n### Thanks\n\nThese guidelines were best on several sources, including\n[Atom](https://github.com/atom/atom/blob/master/CONTRIBUTING.md), [PurpleBooth's\nadvice](https://gist.github.com/PurpleBooth/b24679402957c63ec426) and the [Contributor\nCovenant](https://www.contributor-covenant.org/).\n"
        },
        {
          "name": "ClusterRole",
          "type": "tree",
          "content": null
        },
        {
          "name": "ClusterRoleBinding",
          "type": "tree",
          "content": null
        },
        {
          "name": "ConfigMap",
          "type": "tree",
          "content": null
        },
        {
          "name": "CronJob",
          "type": "tree",
          "content": null
        },
        {
          "name": "CustomResourceDefinition",
          "type": "tree",
          "content": null
        },
        {
          "name": "DaemonSet",
          "type": "tree",
          "content": null
        },
        {
          "name": "Deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "Endpoints",
          "type": "tree",
          "content": null
        },
        {
          "name": "HorizontalPodAutoscaler",
          "type": "tree",
          "content": null
        },
        {
          "name": "Ingress",
          "type": "tree",
          "content": null
        },
        {
          "name": "Istio",
          "type": "tree",
          "content": null
        },
        {
          "name": "Job",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2017 ianmiell\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LimitRange",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.734375,
          "content": "tgz:\n\t@find . -regex './[A-Z][a-z].*\\.yaml' -type f -print0 \\\n\t | tar --null --files-from - -cf examples.tar\n\t@tar -uf examples.tar kubectl-examples\n\tgzip examples.tar\n\nver = $(shell git describe --tags)\nsha = $(shell shasum -a 256 < examples.tar.gz|cut -d\" \" -f1)\n\nfix-sha:\n\t@sed -i 's/sha256: .*$$/sha256: $(sha)/' plugins/examples.yaml\n\nfix-version:\n\t@sed -i 's/v[0-9]\\.[0-9]\\.[0-9]/$(ver)/' plugins/examples.yaml\n\ninstall: clean tgz fix-sha\n\tkubectl krew install --manifest=plugins/examples.yaml --archive=examples.tar.gz\n\nci: tgz fix-sha fix-version\n\t@echo github action ...\n\nclean:\n\t@rm -f examples.tar.gz\n\t@kubectl krew uninstall examples || :\n\ninstall_deprecations:\n\t@kubectl krew install deprecations\n\ncheck_deprecations:\n\t@tests/api_check.sh\n"
        },
        {
          "name": "Namespace",
          "type": "tree",
          "content": null
        },
        {
          "name": "NetworkPolicy",
          "type": "tree",
          "content": null
        },
        {
          "name": "PersistentVolume",
          "type": "tree",
          "content": null
        },
        {
          "name": "PersistentVolumeClaim",
          "type": "tree",
          "content": null
        },
        {
          "name": "Pod",
          "type": "tree",
          "content": null
        },
        {
          "name": "PodDisruptionBudget",
          "type": "tree",
          "content": null
        },
        {
          "name": "PriorityClass",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.921875,
          "content": "![yamllint](https://github.com/ContainerSolutions/kubernetes-examples/workflows/yamllint/badge.svg)\n# Kubernetes Examples\n\nA reference repository of YAML with canonical and as-simple-as-possible demonstrations of kubernetes functionality and features.\n\nSee here for a searchable front-end: https://k8s-examples.container-solutions.com/\n\n![Kubernetes Examples](logo.png)\n\n## Why?\n\nAt Container Solutions we find we regularly need chunks of YAML to  demonstrate something specific, such as:\n\n- A simple deployment\n\n- A simple pod\n\n- A pod with a volume\n\nThis might be to do a basic test of an environment, find an example to tinker with, or send to someone to get them going.\n\n## Usage\n\nThe examples can be used by a kubectl plugin `examples`. This plugin can be installed\nby [krew](https://krew.sigs.k8s.io/):\n\n- first [install krew](https://krew.sigs.k8s.io/docs/user-guide/setup/install/)\n- Install a custom plugin index: `kubectl krew index add cs https://github.com/ContainerSolutions/kubernetes-examples.git`\n- Install this plugin: `kubectl krew install cs/examples`\n\nInteractively discover by first selecting the resource type:\n```\n$ kubectl examples\n```\n\nfilter by resource type\n```\n$ kubectl examples Service\n```\n\nfilter by resource type and pattern\n```\n$ kubectl examples Pod res\n```\n\nIf there is only a single match selected by the parameters, it is printed to the stdout.\nSo you can deploy a modified version of a sample by:\n```\n$ export KUBE_EDITOR='code -w'\n$ kubectl examples Ingress fanout | kubectl create -f - --edit\n```\n\n## Sections\n\n`broken-*` - yamls that exemplify broken kubernetes yaml states\n\n`[A-Z][a-zA-Z]*` - Example yamls that correspond to resource types.\n\n`test` - Scripts to test or validate the YAML\n\nWithin those folders are either simple/canonical examples, or examples in subfolders that expose particular items of functionality that are highlighted by their yaml path, eg `Pod/spec.initContainers/`.\n\nIf an example is an exemplar of a particular feature but tightly related to another resource, then an absolute folder might be added eg in Service there is `Service/Pod.spec.subdomain`.\n\nSymlinks are also used to make finding things easier, eg `Service/headless-service -> Service/spec.clusterIP`.\n\n`plugins` - a directory following the spec for a Custom krew [plugin index](https://krew.sigs.k8s.io/docs/user-guide/custom-indexes/)\n\n## Principles\n\nThe examples seek to be:\n\n- As simple as possible to illustrate the functionality\n\n- Self-contained (ie limited to one .yaml file)\n\n- Non-conflicting (eg resource names are unique)\n\n- Clear (eg resource names are verbose and unambiguous)\n\n## Release Process\n\nSee [here](RELEASE_PROCESS.md)\n\n## Sources / Thanks To\n\n[Official Kubernetes docs](https://kubernetes.io/docs/)\n\n[Kubernetes by Example](https://kubernetesbyexample.com/)\n\n[Practical Kubernetes](https://github.com/kubernauts/practical-kubernetes-problems)\n\n[Security Examples](https://github.com/NodyHub/docker-k8s-resources/tree/master/k8s-pods)\n\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 3.068359375,
          "content": "# Release Notes\n\n## v0.0.5\n\n- v1.27.0\n- v1.26.0\n- v1.25.0\n- v1.24.0\n- v1.23.0\n- v1.22.0\n- v1.21.0\n\n### Changes\n\n#### Removed Examples\n\n- PodSecurityPolicy/Ingress/simple.yaml\n- PodSecurityPolicy/pod-security-policy.yaml\n- PodSecurityPolicy/restricted.yaml\n- PodSecurityPolicy/spec.privileged/privileged.yaml\n\n#### Other Changes\n\n- Updated list of supported Kubernetes versions\n\n## v0.0.4\n\nSupported Kubernetes versions:\n\n- v1.24.0\n- v1.23.0\n- v1.22.0\n- v1.21.0\n\n### Changes\n\n#### New Examples\n\n- CustomResourceDefinition/custom-resource-definition.yaml\n- Istio/DestinationRule/circuit-breaker.yaml\n- Istio/DestinationRule/connection-pool-settings.yaml\n- Istio/DestinationRule/load-balance.yaml\n- Istio/DestinationRule/sticky-sessions.yaml\n- Istio/DestinationRule/subsets.yaml\n- Istio/DestinationRule/tls.yaml\n- Istio/VirtualService/delay-injection.yaml\n- Istio/VirtualService/error-injection.yaml\n- Istio/VirtualService/header-manipulation.yaml\n- Istio/VirtualService/identity.yaml\n- Istio/VirtualService/layer-7-routing.yaml\n- Istio/VirtualService/redirect-rewrite.yaml\n- Istio/VirtualService/retry.yaml\n- Istio/VirtualService/timeout.yaml\n- Istio/VirtualService/traffic-split.yaml\n\n#### Updated Examples\n\n- CronJob/simple.yaml\n- Endpoints/endpoint-slice.yaml\n- Ingress/fanout.yaml\n- Ingress/ingress-class.yaml\n- Ingress/ingress.yaml\n- Ingress/nohost.yaml\n- Ingress/rewrite.yaml\n- Ingress/tls.yaml\n- Ingress/virtualhosting.yaml\n- Pod/spec.volumes.persistentVolumeClaim/pod-pvc.yaml\n- PodDisruptionBudget/pod-disruption-budget-max-unavailable.yaml\n- PodDisruptionBudget/pod-disruption-budget-min-available.yaml\n- PodSecurityPolicy/Ingress/simple.yaml\n- PodSecurityPolicy/restricted.yaml\n- Service/Pod.spec.subdomain/subdomain.yaml\n\n#### Removed Examples\n\n- PodPreset/pod-preset.yaml\n- Service/spec.topologyKeys/fallback.yaml\n\n#### Other Changes\n\n- Updated list of supported Kubernetes versions\n- Replaced kubeval with kubeconform for CI tests\n\n## v0.0.3\n\nSupported Kubernetes versions:\n- v1.19.0\n- v1.18.0\n- v1.17.0\n- v1.16.0\n- v1.15.0\n\nChanges:\n\n- Add Kubeval test\n- Added Deployment/simple-deployment-privileged.yaml\n- Added Deployment/simple-deployment-with-environment.yaml\n- Added Endpoints/endpoint-slice.yaml\n- Added restartPolicy to Job/simple.yaml\n- Added PersistentVolumeClaim/pvc.yaml\n- Added Pod/spec.affinity.nodeAffinity/node-affinity.yaml\n- Added Pod/spec.nodeSelector/simple.yaml\n- Added Pod/spec.volumes.persistentVolumeClaim/pod-pvc.yaml\n- Added PodDisruptionBudget/pod-disruption-budget-max-unavailable.yaml and PodDisruptionBudget/pod-disruption-budget-min-available.yaml\n- Added PodPreset/pod-preset.yaml\n- Added PriorityClass/default-priority-class.yaml\n- Added Secret/simple-secret.yaml\n- Added ServiceAccount/service-account-pod.yaml\n- Corrected Pod/spec.containers.volumes.projected/projected.yaml\n- Corrected Pod/spec.volumes.hostPath.type/file-or-create.yaml\n- Corrected PodSecurityPolicy/Ingress/simple.yaml\n- Corrected Service/spec.type/load-balancer.yaml\n- Code of conduct, license, and contributions guidelines added\n\n## v0.0.2\n\nChanges:\n\n- Bugfix for v0.0.1\n\n## v0.0.1\n\nChanges:\n\n- Initial base examples added\n"
        },
        {
          "name": "RELEASE_PROCESS.md",
          "type": "blob",
          "size": 3.5546875,
          "content": "# Kubernetes-Examples Release Process\n\n## Is Pipeline Green?\n\n## Is Latest Kubernetes Version Supported?\n\nEnsure examples are consistent with latest Kubernetes version.\nIt can be checked using `bin/test.sh` and `tests/api_check.sh`.\n\n## Fetch Tags and Diff\n\nGet the latest tags:\n\n```\ngit fetch --tag\ngit tag\n```\n\nDiff the current code tag from the last one, and update the `RELEASE_NOTES.md` file, eg:\n\n```\ngit diff -w v0.0.2\n```\n\nAlternatively you can use commit messages since latest release to get list of changes:\n\n```\ngit log --pretty=oneline \"$(git tag --sort=-creatordate | grep '^v' | head -1)...master\"\n```\n\n## Get List of Added, Modified and Deleted Files\n\nList of added(A), modified(M) and deleted(D) files can also be used to update the `RELEASE_NOTES.md` file.\n\nGet the list of added files:\n\n```\ngit diff --stat --name-only --diff-filter=A -w v0.0.4\n```\n\nGet the list of modified files:\n\n```\ngit diff --stat --name-only --diff-filter=M -w v0.0.4\n```\n\nGet the list of deleted files:\n\n```\ngit diff --stat --name-only --diff-filter=D -w v0.0.4\n```\n\n## Generate Code\n\nAfter all changes related to `RELEASE_NOTES.md` are merged, you can create and push a new tag with a new version.\nWith `.github/workflows/release.yml` GitHub Action, new release will be created.\nPlease update release notes on the release to match the updated content on `RELEASE_NOTES.md`.\n\nCheck this doc for more information to make a release in GitHub:\n\n[Release](https://docs.github.com/en/github/administering-a-repository/releasing-projects-on-github/managing-releases-in-a-repository)\n\n## Updating Web UI\n\nAs it can be seen in [README](README.md#kubernetes-examples), searchable web UI of the project is [here](https://containersolutions.github.io/kubernetes-examples/).\nTo update Web UI you can follow these steps:\n\n1. Update example files by running following commands:\n    ```\n    # please run these commands at the root directory of the repository\n    git checkout master\n\t\n\t# ensure you have latest master branch locally\n\tgit pull\n\t\n\t# get git commit hash of master branch\n\tMASTER_GIT_HASH=$(git rev-parse --short=8 HEAD)\n    \n    # checkout kubernetes-examples-UI branch\n    git checkout kubernetes-examples-UI\n\t\n\t# ensure you have latest kubernetes-examples-UI branch locally\n\tgit pull\n    \n    # create a branch for updates\n    BRANCH_NAME=kubernetes-examples-UI-update-${MASTER_GIT_HASH}-$(date +'%d%m%y')\n    git checkout -b ${BRANCH_NAME}\n    \n    # update examples folder\n    git subtree pull --prefix examples https://github.com/ContainerSolutions/kubernetes-examples.git  master --squash\n    ```\n\n2. Check missing index files for any of the example directories and add missing index files if it's needed.\n\n    ```\n\t./release.sh\n    ```\n\n\n3. Test updated web UI locally\n\n    You should have ruby installed to test web UI. If you haven't run this project locally before, you should install ruby and gems first.\n\n    Install ruby: https://www.ruby-lang.org/en/downloads/\n\n    Install gems while you are on kubernetes-examples-UI branch:\n    \n\t```\n    gem install bundler\n    bundle install\n    ```\n\n    After installation, you can run jekyll locally while you are on kubernetes-examples-UI branch:\n\n    ```\n    bundle exec jekyll serve\n    ```\n\n4. Commit changes on the new branch and push\n5. Create a Pull Request to merge updated kubernetes-examples-UI-update-... branch to kubernetes-examples-UI branch.\n6. Check CI run for the Pull Request kubernetes-examples-UI branch\n7. Request a review for the proposed updates\n8. After the PR is merged, confirm updates on the live page\n\n## Announce\n\nAnnounce on various channels:\n\n- Twitter\n- LinkedIn\n"
        },
        {
          "name": "ResourceQuotas",
          "type": "tree",
          "content": null
        },
        {
          "name": "Role",
          "type": "tree",
          "content": null
        },
        {
          "name": "RoleBinding",
          "type": "tree",
          "content": null
        },
        {
          "name": "Secret",
          "type": "tree",
          "content": null
        },
        {
          "name": "Service",
          "type": "tree",
          "content": null
        },
        {
          "name": "ServiceAccount",
          "type": "tree",
          "content": null
        },
        {
          "name": "StatefulSet",
          "type": "tree",
          "content": null
        },
        {
          "name": "StorageClass",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "broken-Deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "broken-Pod",
          "type": "tree",
          "content": null
        },
        {
          "name": "broken-Secret",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud-providers",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubectl-examples",
          "type": "blob",
          "size": 1.509765625,
          "content": "#!/usr/bin/env bash\n\ndebug() {\n  [[ \"$DEBUG\" ]] && echo \"-----> $*\" 1>&2\n}\n\nprint-example() {\n  declare res=$1 pattern=$2\n\n  dir=$(dirname $(readlink $BASH_SOURCE))\n  debug \"dir=${dir}\"\n\n  command fzf --version >/dev/null 2>/dev/null && FZF_INSTALLED=true\n\n  if [[ $res == \"\" ]]; then\n    if [[ $FZF_INSTALLED ]];then\n      res=$(cd ${dir}; ls -1 $dir|grep -v kubectl-examples | fzf -e --prompt=\"Resource Type>\" )\n    else\n      PS3=\"Resource Type: \"\n      select res in $(ls -1 $dir|grep -v kubectl-examples); do\n        debug \"res type choosen: ${res}\"\n        break\n      done\n    fi\n  fi\n\n  # resorce names can be abreviated\n  [[ -d ${dir}/${res} ]] || res=\"${res}*\"\n\n  match=0\n  for f in ${dir}/${res}/**/*${pattern}*.yaml; do\n    [[ -e ${f} ]] && : $(( match++ ))\n  done\n\n  case ${match} in\n    0)\n      debug \"no match ...\"\n      return\n      ;;\n    1)\n      debug \"exact match\"\n      yaml=${dir}/${res}*/**/*${pattern}*.yaml\n      ;;\n    *)\n      debug \"multiple choice\"\n      PS3=\"Yaml example: \"\n      if [[ $FZF_INSTALLED ]];then\n        yaml=$(\n          cd ${dir}/${res}\n          ls -1 **/*${pattern}*.yaml \\\n          | fzf -e --preview='cat {}'\n        )\n        yaml=\"${dir}/${res}/${yaml}\"\n      else\n        select yaml in ${dir}/${res}/**/*${pattern}*.yaml; do\n          debug \"YAML selected: ${yaml}\"\n          break\n        done\n      fi\n      ;;\n  esac\n\n  if [ -f ${yaml} ]; then \n    cat ${yaml}\n  fi\n}\n\nmain() {\n  : ${DEBUG:=1}\n  shopt -s globstar\n  print-example \"$@\"\n}\n\n[[ \"$0\" == \"$BASH_SOURCE\" ]] && main \"$@\" || true"
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 65.4638671875,
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}