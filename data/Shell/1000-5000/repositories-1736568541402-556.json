{
  "metadata": {
    "timestamp": 1736568541402,
    "page": 556,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TgCatUB/nekopack",
      "stars": 1586,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Aptfile",
          "type": "blob",
          "size": 0.0283203125,
          "content": "pv\ntree\nmediainfo\np7zip-full\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.0185546875,
          "content": "worker: bash catub\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.7548828125,
          "content": "# Catuserbot-heroku\n[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Ftgcatub%2Fnekopack&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://github.com/TgCatUB/nekopack)\n\nThis repo is only for deploying purpose if you want to look into main source code head to [main source](https://github.com/tgcatub/catuserbot) and fork and give star to these repos \n\n## Deploy\n\nTo be safe fork this repo and then press deploy button from the forked repo \n\nFork Deploy is highly recommended\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n## credits\n   - [@midnightmadwalk](https://t.me/midnightmadwalk)\n   - [@DeletedUser420](https://t.me/DeletedUser420)\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 2.841796875,
          "content": "{\n  \"name\": \"CatUserbot\",\n  \"description\": \"A simple Telegram userbot based on Telethon . Maintained by Sandeep \",\n  \"logo\": \"https://telegra.ph/file/3d60313110c58684b31ea.jpg\",\n  \"keywords\": [\n    \"plugin\",\n    \"modular\",\n    \"productivity\"\n  ],\n  \"repository\": \"https://github.com/TgCatUB/catuserbot\",\n  \"website\": \"#TODO\",\n  \"success_url\": \"#TODO\",\n  \"env\": {\n    \"ALIVE_NAME\": {\n      \"description\": \"give your name\",\n      \"value\": \"\"\n    },\n    \"APP_ID\": {\n      \"description\": \"Get this value from my.telegram.org! Please do not steal\",\n      \"value\": \"\"\n    },\n    \"API_HASH\": {\n      \"description\": \"Get this value from my.telegram.org! Please do not steal\",\n      \"value\": \"\"\n    },\n    \"STRING_SESSION\": {\n      \"description\": \"Get this value by running python3 stringsetup.py locally or https://generatestringsession.sandeep1709.repl.run\",\n      \"value\": \"\"\n    },\n    \"TG_BOT_TOKEN\": {\n      \"description\": \"Needed for inline buttons maker. Make a bot at http://telegram.dog/BotFather and get the token of your bot.\",\n      \"value\": \"\"\n    },\n    \"COMMAND_HAND_LER\": {\n      \"description\": \"Set this one with only one the symbol to use it before your command to run like . , ' `\",\n      \"value\": \".\",\n      \"required\": false\n    },\n    \"ENV\": {\n      \"description\": \"Setting this to ANYTHING will enable heroku.\",\n      \"value\": \"ANYTHING\",\n      \"required\": false\n    },\n    \"HEROKU_API_KEY\": {\n      \"description\": \"Required for updating the bot and other stuff get it from https://dashboard.heroku.com/account\",\n      \"value\": \"\",\n      \"required\": false\n    },\n    \"HEROKU_APP_NAME\": {\n      \"description\": \"YOUR app name \",\n      \"value\": \"\",\n      \"required\": false\n    },\n    \"TZ\": {\n      \"description\": \"Required for Correct Time on autopic/get time. Know your timezone from http://www.timezoneconverter.com/cgi-bin/findzone.tzc\",\n      \"value\": \"Asia/Kolkata\",\n      \"required\": false\n    },\n    \"EXTERNAL_REPO\": {\n      \"description\": \"To install external plugins. if you don't want, change value to 'False'\",\n      \"value\": \"True\",\n      \"required\": false\n    },\n    \"BADCAT\": {\n      \"description\": \"set 'True' to install 18+ plugins.\",\n      \"value\": \"False\",\n      \"required\": false\n    }\n  },\n  \"addons\": [{\n    \"plan\": \"heroku-postgresql\",\n    \"options\": {\n      \"version\": \"16\"\n    }\n  }],\n  \"buildpacks\": [{\n    \"url\": \"https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest\"\n  },{\n    \"url\":\"https://github.com/heroku/heroku-buildpack-google-chrome\"\n  },{\n    \"url\":\"https://github.com/heroku/heroku-buildpack-chromedriver\"\n  },{\n    \"url\": \"https://github.com/riganf/heroku-buildpack-p7zip\"\n  },{\n    \"url\": \"https://github.com/heroku/heroku-buildpack-apt.git\"\n  },{\n    \"url\": \"https://github.com/chrismytton/heroku-buildpack-jq\"\n  },{\n    \"url\": \"https://github.com/rahulps1000/heroku-buildpack-nodejs\"\n  },{\n    \"url\": \"heroku/python\"\n  }],\n  \"stack\": \"heroku-22\"\n}\n"
        },
        {
          "name": "catub",
          "type": "blob",
          "size": 3.806640625,
          "content": "#!/bin/bash\n\n_get_zlink () {\n    local regex\n    regex='(https?)://github.com/.+/.+'\n    if [[ $UPSTREAM_REPO == \"goodcat\" ]]\n    then\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    elif [[ $UPSTREAM_REPO == \"badcat\" ]]\n    then\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL2ppc2FuMDkvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    elif [[ $UPSTREAM_REPO =~ $regex ]]\n    then\n        if [[ $UPSTREAM_REPO_BRANCH ]]\n        then\n            echo \"${UPSTREAM_REPO}/archive/${UPSTREAM_REPO_BRANCH}.zip\"\n        else\n            echo \"${UPSTREAM_REPO}/archive/master.zip\"\n        fi\n    else\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    fi\n}\n\n_get_repolink () {\n    local regex\n    local rlink\n    regex='(https?)://github.com/.+/.+'\n    if [[ $UPSTREAM_REPO == \"goodcat\" ]]\n    then\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdA==\" | base64 -d`\n    elif [[ $UPSTREAM_REPO == \"badcat\" ]]\n    then\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL0ppc2FuMDkvY2F0dXNlcmJvdA==\" | base64 -d`\n    elif [[ $UPSTREAM_REPO =~ $regex ]]\n    then\n        rlink=`echo \"${UPSTREAM_REPO}\"`\n    else\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdA==\" | base64 -d`\n    fi\n    echo \"$rlink\"\n}\n\n\n_run_python_code() {\n    python3${pVer%.*} -c \"$1\"\n}\n\n_run_catpackgit() {\n    $(_run_python_code 'from git import Repo\nimport sys\n\nOFFICIAL_UPSTREAM_REPO = \"https://github.com/TgCatUB/nekopack\"\nACTIVE_BRANCH_NAME = \"master\"\n\nrepo = Repo.init()\norigin = repo.create_remote(\"temponame\", OFFICIAL_UPSTREAM_REPO)\norigin.fetch()\nrepo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])\nrepo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')\n}\n\n_run_catgit() {\n    local repolink=$(_get_repolink)\n    $(_run_python_code 'from git import Repo\nimport sys\nOFFICIAL_UPSTREAM_REPO=\"'$repolink'\"\nACTIVE_BRANCH_NAME = \"'$UPSTREAM_REPO_BRANCH'\" or \"master\"\nrepo = Repo.init()\norigin = repo.create_remote(\"temponame\", OFFICIAL_UPSTREAM_REPO)\norigin.fetch()\nrepo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])\nrepo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')\n}\n\n_start_bot () {\n    local zippath\n    zippath=\"catuserbot.zip\"\n    echo \"  Downloading source code ...\"\n    wget -q $(_get_zlink) -O \"$zippath\"\n    echo \"  Unpacking Data ...\"\n    CATPATH=$(zipinfo -1 \"$zippath\" | grep -v \"/.\");\n    unzip -qq \"$zippath\"\n    echo \"Done\"\n    echo \"  Cleaning ...\"\n    rm -rf \"$zippath\"\n    _run_catpackgit\n    cd $CATPATH\n    _run_catgit\n    python3 ../setup/updater.py ../requirements.txt requirements.txt\n    chmod -R 755 bin\n    echo \"    Starting CatUserBot    \"\n    echo \"\n                        :'######:::::'###::::'########::::\n                        '##... ##:::'## ##:::... ##..:::::\n                         ##:::..:::'##:. ##::::: ##:::::::\n                         ##:::::::'##:::. ##:::: ##:::::::\n                         ##::::::: #########:::: ##:::::::\n                         ##::: ##: ##.... ##:::: ##:::::::\n                        . ######:: ##:::: ##:::: ##:::::::\n                        :......:::..:::::..:::::..::::::::\n    \"\n\n    echo \"\n    '##::::'##::'######::'########:'########::'########:::'#######::'########:\n     ##:::: ##:'##... ##: ##.....:: ##.... ##: ##.... ##:'##.... ##:... ##..::\n     ##:::: ##: ##:::..:: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##:::: ##::::\n     ##:::: ##:. ######:: ######::: ########:: ########:: ##:::: ##:::: ##::::\n     ##:::: ##::..... ##: ##...:::: ##.. ##::: ##.... ##: ##:::: ##:::: ##::::\n     ##:::: ##:'##::: ##: ##::::::: ##::. ##:: ##:::: ##: ##:::: ##:::: ##::::\n    . #######::. ######:: ########: ##:::. ##: ########::. #######::::: ##::::\n    :.......::::......:::........::..:::::..::........::::.......::::::..:::::\n    \"\n    python3 -m userbot\n}\n\n_start_bot\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.8818359375,
          "content": "aiohttp\napscheduler\ncinemagoer\ncloudscraper\ncolour\ncowpy\nemoji==1.7.0\nfonttools\ngeopy\ngitpython\nglitch_this\ngoogle-api-python-client\ngoogle-auth-httplib2\ngoogle-auth-oauthlib\ngtts\nhachoir\nheroku3\nhtml-telegraph-poster\nhttpx[http2]\nhumanize\njikanpy\njustwatch\nlottie\nlyricsgenius\nlxml[html_clean]\nmarkdown\nmotor\nopenai\nPillow\nprettytable\npsutil\npsycopg2\npyfiglet\nPyGithub\npygments\npylast\npymediainfo\nPyMuPDF\npySmartDL\npython-barcode\npytz\nqrcode\nrequests\nselenium\nsetuptools\nShazamAPI\nsomnium\nspamwatch\nspeedtest-cli\nsqlalchemy-json\nsqlalchemy==1.3.23\ntelegraph==2.1.0\ntgcrypto\nujson\nurlextract\nvalidators\nvcsi\nwand\nwget\n\ngit+https://github.com/Jisan09/search-engine-parser\ngit+https://github.com/Jisan09/Telethon@test\ngit+https://github.com/goldsmith/Wikipedia\ngit+https://github.com/sandy1709/py-googletrans\ngit+https://github.com/alexmercerind/youtube-search-python\ngit+https://github.com/yt-dlp/yt-dlp\n"
        },
        {
          "name": "runtime.txt",
          "type": "blob",
          "size": 0.013671875,
          "content": "python-3.10.5\n"
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "start",
          "type": "blob",
          "size": 3.8046875,
          "content": "#!/bin/bash\n\n_get_zlink () {\n    local regex\n    regex='(https?)://github.com/.+/.+'\n    if [[ $UPSTREAM_REPO == \"goodcat\" ]]\n    then\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    elif [[ $UPSTREAM_REPO == \"badcat\" ]]\n    then\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL2ppc2FuMDkvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    elif [[ $UPSTREAM_REPO =~ $regex ]]\n    then\n        if [[ $UPSTREAM_REPO_BRANCH ]]\n        then\n            echo \"${UPSTREAM_REPO}/archive/${UPSTREAM_REPO_BRANCH}.zip\"\n        else\n            echo \"${UPSTREAM_REPO}/archive/master.zip\"\n        fi\n    else\n        echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdC9hcmNoaXZlL21hc3Rlci56aXA=\" | base64 -d\n    fi\n}\n\n_get_repolink () {\n    local regex\n    local rlink\n    regex='(https?)://github.com/.+/.+'\n    if [[ $UPSTREAM_REPO == \"goodcat\" ]]\n    then\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdA==\" | base64 -d`\n    elif [[ $UPSTREAM_REPO == \"badcat\" ]]\n    then\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL0ppc2FuMDkvY2F0dXNlcmJvdA==\" | base64 -d`\n    elif [[ $UPSTREAM_REPO =~ $regex ]]\n    then\n        rlink=`echo \"${UPSTREAM_REPO}\"`\n    else\n        rlink=`echo \"aHR0cHM6Ly9naXRodWIuY29tL1RnQ2F0VUIvY2F0dXNlcmJvdA==\" | base64 -d`\n    fi\n    echo \"$rlink\"\n}\n\n\n_run_python_code() {\n    python3${pVer%.*} -c \"$1\"\n}\n\n_run_catpackgit() {\n    $(_run_python_code 'from git import Repo\nimport sys\nOFFICIAL_UPSTREAM_REPO = \"https://github.com/TgCatUB/nekopack\"\nACTIVE_BRANCH_NAME = \"master\"\nrepo = Repo.init()\norigin = repo.create_remote(\"temponame\", OFFICIAL_UPSTREAM_REPO)\norigin.fetch()\nrepo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])\nrepo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')\n}\n\n_run_catgit() {\n    local repolink=$(_get_repolink)\n    $(_run_python_code 'from git import Repo\nimport sys\nOFFICIAL_UPSTREAM_REPO=\"'$repolink'\"\nACTIVE_BRANCH_NAME = \"'$UPSTREAM_REPO_BRANCH'\" or \"master\"\nrepo = Repo.init()\norigin = repo.create_remote(\"temponame\", OFFICIAL_UPSTREAM_REPO)\norigin.fetch()\nrepo.create_head(ACTIVE_BRANCH_NAME, origin.refs[ACTIVE_BRANCH_NAME])\nrepo.heads[ACTIVE_BRANCH_NAME].checkout(True) ')\n}\n\n_start_bot () {\n    local zippath\n    zippath=\"catuserbot.zip\"\n    echo \"  Downloading source code ...\"\n    wget -q $(_get_zlink) -O \"$zippath\"\n    echo \"  Unpacking Data ...\"\n    CATPATH=$(zipinfo -1 \"$zippath\" | grep -v \"/.\");\n    unzip -qq \"$zippath\"\n    echo \"Done\"\n    echo \"  Cleaning ...\"\n    rm -rf \"$zippath\"\n    _run_catpackgit\n    cd $CATPATH\n    _run_catgit\n    python3 ../setup/updater.py ../requirements.txt requirements.txt\n    chmod -R 755 bin\n    echo \"    Starting CatUserBot    \"\n    echo \"\n                        :'######:::::'###::::'########::::\n                        '##... ##:::'## ##:::... ##..:::::\n                         ##:::..:::'##:. ##::::: ##:::::::\n                         ##:::::::'##:::. ##:::: ##:::::::\n                         ##::::::: #########:::: ##:::::::\n                         ##::: ##: ##.... ##:::: ##:::::::\n                        . ######:: ##:::: ##:::: ##:::::::\n                        :......:::..:::::..:::::..::::::::\n    \"\n\n    echo \"\n    '##::::'##::'######::'########:'########::'########:::'#######::'########:\n     ##:::: ##:'##... ##: ##.....:: ##.... ##: ##.... ##:'##.... ##:... ##..::\n     ##:::: ##: ##:::..:: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##:::: ##::::\n     ##:::: ##:. ######:: ######::: ########:: ########:: ##:::: ##:::: ##::::\n     ##:::: ##::..... ##: ##...:::: ##.. ##::: ##.... ##: ##:::: ##:::: ##::::\n     ##:::: ##:'##::: ##: ##::::::: ##::. ##:: ##:::: ##: ##:::: ##:::: ##::::\n    . #######::. ######:: ########: ##:::. ##: ########::. #######::::: ##::::\n    :.......::::......:::........::..:::::..::........::::.......::::::..:::::\n    \"\n    python3 -m userbot\n}\n\n_start_bot\n"
        },
        {
          "name": "stringsetup.py",
          "type": "blob",
          "size": 0.7578125,
          "content": "#!/usr/bin/env python3\n# (c) https://t.me/TelethonChat/37677\n# This Source Code Form is subject to the terms of the GNU\n# General Public License, v.3.0. If a copy of the GPL was not distributed with this\n# file, You can obtain one at https://www.gnu.org/licenses/gpl-3.0.en.html.\n\nfrom telethon.sessions import StringSession\nfrom telethon.sync import TelegramClient\n\nprint(\n    \"\"\"Please go-to my.telegram.org\nLogin using your Telegram account\nClick on API Development Tools\nCreate a new application, by entering the required details\"\"\"\n)\nAPP_ID = int(input(\"Enter APP ID here: \"))\nAPI_HASH = input(\"Enter API HASH here: \")\n\nwith TelegramClient(StringSession(), APP_ID, API_HASH) as client:\n    print(client.session.save())\n    client.sendmessage(\"me\", client.session.save())\n"
        }
      ]
    }
  ]
}