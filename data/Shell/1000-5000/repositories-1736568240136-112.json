{
  "metadata": {
    "timestamp": 1736568240136,
    "page": 112,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "johanhaleby/kubetail",
      "stars": 3365,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.05078125,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n.idea"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.595703125,
          "content": "# Kubetail\n\nBash script that enables you to aggregate (tail/follow) logs from multiple pods into one stream.\nThis is the same as running \"kubectl logs -f <pod>\" but for multiple pods.\n\n## Installation\n\nJust download the [kubetail](https://raw.githubusercontent.com/johanhaleby/kubetail/master/kubetail) file (or any of the [releases](https://github.com/johanhaleby/kubetail/releases)) and you're good to go.\n\n### Homebrew\n\nYou can also install kubetail using [brew](https://brew.sh/):\n\n\t$ brew install johanhaleby/kubetail/kubetail\n\nIt's also possible to install kubetail abbreviated to `kt` by using the `--with-short-names` suffix:\n\n\t$ brew install johanhaleby/kubetail/kubetail --with-short-names\n\nNote that you may need to run `compinit` for zsh to pick-up the changes in competition after having upgraded from the non abbreviated installation.\n\nUse `brew install --HEAD johanhaleby/kubetail/kubetail` to install the latest (unreleased) version.\n\n### ASDF\n\nYou can install kubetail using the [asdf](https://github.com/asdf-vm/asdf) version manager.\n\n```\nasdf plugin-add kubetail https://github.com/janpieper/asdf-kubetail.git\nasdf install kubetail <version>\n```\n\nTo find out the available versions to install, you can run the following command:\n\n```\nasdf list-all kubetail\n```\n\n### ZSH plugin\n\nIf you're using a ZSH plugin manager, you can install `kubetail` as a plugin.\n\n#### Antigen\n\nIf you're using [Antigen](https://github.com/zsh-users/antigen):\n\n1. Add `antigen bundle johanhaleby/kubetail` to your `.zshrc` where you've listed your other plugins.\n2. Close and reopen your Terminal/iTerm window to **refresh context** and use the plugin. Alternatively, you can run `antigen bundle johanhaleby/kubetail` in a running shell to have `antigen` load the new plugin.\n\n#### oh-my-zsh\n\nIf you're using [oh-my-zsh](github.com/robbyrussell/oh-my-zsh):\n\n1. In the command line, change to _oh-my-zsh_'s custom plugin directory :\n\n    `cd ~/.oh-my-zsh/custom/plugins/`\n\n2. Clone the repository into a new `kubetail` directory:\n\n    `git clone https://github.com/johanhaleby/kubetail.git kubetail`\n\n3. Edit your `~/.zshrc` and add `kubetail` – same as clone directory – to the list of plugins to enable:\n\n    `plugins=( ... kubetail )`\n\n4. Then, restart your terminal application to **refresh context** and use the plugin. Alternatively, you can source your current shell configuration:\n\n    `source ~/.zshrc`\n\n#### zgen\n\nIf you're using [zgen](https://github.com/tarjoilija/zgen):\n\n1. Add `zgen load johanhaleby/kubetail` to your `.zshrc` along with your other `zgen load` commands.\n2. `zgen reset && zgen save`\n\n### Completion\n\nThe easiest option is to install kubetail from homebrew to dynamically display the pods names on `$ kubetail <tab>`. Alternatively install any of the [completion scripts](completion/) (bash/zsh/fish) manually. For example:\n* On Ubuntu, download the [kubetail.bash](https://raw.githubusercontent.com/johanhaleby/kubetail/master/completion/kubetail.bash) script and execute it in your `~/.bash_completion` file `source $HOME/kubetail/completion/kubetail.bash`. \n* On Mac with zsh copy the [kubetail.zsh](https://raw.githubusercontent.com/johanhaleby/kubetail/master/completion/kubetail.zsh) script to `/usr/local/share/zsh/site-functions/_kubetail`.\n* On Mac with fish copy the [kubetail.fish](https://raw.githubusercontent.com/johanhaleby/kubetail/master/completion/kubetail.fish) script to `~/.config/fish/completions/`.\n\nDon't forget to restart your terminal afterwards.\n\n## Usage\n\nFirst find the names of all your pods:\n\n\t$ kubectl get pods\n\nThis will return a list looking something like this:\n\n```bash\nNAME                   READY     STATUS    RESTARTS   AGE\napp1-v1-aba8y          1/1       Running   0          1d\napp1-v1-gc4st          1/1       Running   0          1d\napp1-v1-m8acl  \t       1/1       Running   0          6d\napp1-v1-s20d0  \t       1/1       Running   0          1d\napp2-v31-9pbpn         1/1       Running   0          1d\napp2-v31-q74wg         1/1       Running   0          1d\nmy-demo-v5-0fa8o       1/1       Running   0          3h\nmy-demo-v5-yhren       1/1       Running   0          2h\n```\n\nTo tail the logs of the two \"app2\" pods in one go simply do:\n\n\t$ kubetail app2\n\nTo tail only a specific container from multiple pods specify the container like this:\n\n\t$ kubetail app2 -c container1\n\nYou can repeat `-c` to tail multiple specific containers:\n\n\t$ kubetail app2 -c container1 -c container2\n\nTo tail multiple applications at the same time seperate them by comma:\n\n\t$ kubetail app1,app2\n\nFor advanced matching you can use regular expressions:\n\n\t$ kubetail \"^app1|.*my-demo.*\" --regex\n\t\nTo tail logs within a specific namespace, make sure to append the namespace flag *after* you have provided values for containers and applications:\n\n\t$ kubetail app2 -c container1 -n namespace1\n\nSupply `-h` for help and additional options:\n\n\t$ kubetail -h\n\n## Colors\n\nBy using the `-k` argument you can specify how kubetail makes use of colors (only applicable when tailing multiple pods).\n\n| Value   |     Description  |\n|----------|---------------|\n| pod | Only the pod name is colorized but the logged text is using the terminal default color |\n| line | The entire line is colorized (default) |\n| false | Don't colorize the output at all |\n   \nExample:\n\n\t$ kubetail app2 -k false\n\nIf you find that some colors are difficult to see then they can be skipped by supplying the color index either to the `-z` flag or by setting the `KUBETAIL_SKIP_COLORS` environment variable (either choice could be comma seperated). To find the color index you'd like to skip more easily, set the `-i` flag to `true` (`-i true`) or set the `KUBETAIL_SHOW_COLOR_INDEX` environment variable to `true` (`KUBETAIL_SHOW_COLOR_INDEX=true`). This will print the color index as a prefix to the pod name (e.g. `[3:my-pod-12341] some log` where `3` is the index of the color). This is also helpful if you suffer from color blindness since the index will always be printed with the default terminal color.\n\t\n## Filtering / Highlighting etc\n\nkubetail itself doesn't have filtering or highlighting capabilities built-in. If you're on MacOSX I recommend using [iTerm2](https://www.iterm2.com/) which allows for continuous highlighting of search terms, good scrolling capabilities and multitab arrangements. Another useful feature of iTerm2 is the \"timeline\" (`cmd` + `shift` + `e`) which lets you display a timeline in your own local timezone next to the logs (that are typically in UTC). \n\nIf you're not using iTerm2 or think that kubetail is lacking in features there's a [fork](https://github.com/aks/kubetail) of kubetail made by [Alan Stebbens](https://github.com/aks) that allows for richer configuration and uses [multitail](https://www.vanheusden.com/multitail/) and [bash-lib](https://github.com/aks/bash-lib). Alan has been kind enough to provide a pull request but my current thinking is that I'd like kubetail to stay simple and small and not use any dependencies.\n\n## Environment\n\nkubetail can take default option values from environment variables matching the option name.\n\n    KUBETAIL_PREVIOUS\n    KUBETAIL_SINCE\n    KUBETAIL_NAMESPACE\n    KUBETAIL_FOLLOW\n    KUBETAIL_PREFIX\n    KUBETAIL_LINE_BUFFERED\n    KUBETAIL_COLORED_OUTPUT\n    KUBETAIL_TIMESTAMPS\n    KUBETAIL_JQ_SELECTOR\n    KUBETAIL_SKIP_COLORS\n    KUBETAIL_TAIL\n    KUBETAIL_SHOW_COLOR_INDEX\n\n## More\n\nPull requests are very welcome!\n\nSee also: http://code.haleby.se/2015/11/13/tail-logs-from-multiple-pods-simultaneously-in-kubernetes/\n\n<a href=\"https://www.buymeacoffee.com/johanhaleby\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/arial-blue.png\" alt=\"Buy Me A Coffee\" style=\"height: 42px !important;width: 180px !important;\" height=\"42px\" width=\"180px\"></a>\n"
        },
        {
          "name": "completion",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubetail",
          "type": "blob",
          "size": 13.4287109375,
          "content": "#!/bin/bash\nif [ -z \"${KUBECTL_BIN}\" ]; then\n\tif hash kubectl 2>/dev/null; then\n\t\tKUBECTL_BIN='kubectl'\n\telif hash kubectl.exe 2>/dev/null; then\n\t\tKUBECTL_BIN='kubectl.exe'\n\telif hash microk8s 2>/dev/null; then\n\t\tKUBECTL_BIN='microk8s.kubectl'\n\tfi\nfi\n\nif ! hash \"${KUBECTL_BIN}\" 2>/dev/null; then\n\techo >&2 \"kubectl is not installed\"\n\texit 1\nfi\n\nreadonly PROGNAME=$(basename $0)\n\ncalculate_default_namespace() {\n\tlocal config_namespace=$(${KUBECTL_BIN} config view --minify --output 'jsonpath={..namespace}')\n\techo \"${KUBETAIL_NAMESPACE:-${config_namespace:-default}}\"\n}\n\n# Sets default color ouput to 'false' if output is not a terminal\nif [ -n \"$(tput colors)\" ] && [ \"$(tput colors)\" -ge 8 ]; then\n    terminal_aware_default_color=line\nelse\n    terminal_aware_default_color=false\nfi\n\ndefault_previous=\"${KUBETAIL_PREVIOUS:-false}\"\ndefault_since=\"${KUBETAIL_SINCE:-10s}\"\ndefault_namespace=$(calculate_default_namespace)\ndefault_follow=\"${KUBETAIL_FOLLOW:-true}\"\ndefault_prefix=\"${KUBETAIL_PREFIX:-true}\"\ndefault_line_buffered=\"${KUBETAIL_LINE_BUFFERED:-}\"\ndefault_colored_output=\"${KUBETAIL_COLORED_OUTPUT:-$terminal_aware_default_color}\"\ndefault_timestamps=\"${KUBETAIL_TIMESTAMPS:-}\"\ndefault_jq_selector=\"${KUBETAIL_JQ_SELECTOR:-}\"\ndefault_skip_colors=\"${KUBETAIL_SKIP_COLORS:-7,8}\"\ndefault_tail=\"${KUBETAIL_TAIL:--1}\"\ndefault_show_color_index=\"${KUBETAIL_SHOW_COLOR_INDEX:-false}\"\n\nnamespace=\"${default_namespace}\"\nfollow=\"${default_follow}\"\nprefix=\"${default_prefix}\"\nline_buffered=\"${default_line_buffered}\"\ncolored_output=\"${default_colored_output}\"\ntimestamps=\"${default_timestamps}\"\njq_selector=\"${default_jq_selector}\"\nskip_colors=\"${default_skip_colors}\"\ntail=\"${default_tail}\"\nshow_color_index=\"${default_show_color_index}\"\n\nif [[ ${1} != -* ]]\nthen\n\tpod=\"${1}\"\nfi\ncontainers=()\nselector=()\nregex='substring'\nprevious=\"${default_previous}\"\nsince=\"${default_since}\"\nversion=\"1.6.21-SNAPSHOT\"\ndryrun=false\ncluster=\"\"\nnamespace_arg=\"-n ${default_namespace}\"\n\nusage=\"${PROGNAME} <search term> [-h] [-c] [-n] [-t] [-l] [-f] [-d] [-P] [-p] [-s] [-b] [-e] [-j] [-k] [-z] [-v] [-r] [-i] -- tail multiple Kubernetes pod logs at the same time\n\nwhere:\n    -h, --help              Show this help text.\n    -c, --container         The name of the container to tail in the pod (if multiple containers are defined in the pod).\n                            Defaults to all containers in the pod. Can be used multiple times.\n    -t, --context           The k8s context. ex. int1-context. Relies on ~/.kube/config for the contexts.\n    -l, --selector          Label selector. If used the pod name is ignored.\n    -n, --namespace         The Kubernetes namespace where the pods are located. Defaults to \\\"${default_namespace}\\\".\n    -f, --follow            Specify if the logs should be streamed. (true|false) Defaults to ${default_follow}.\n    -d, --dry-run           Print the names of the matched pods and containers, then exit.\n    -P, --prefix            Specify if add the pod name prefix before each line. (true|false) Defaults to ${default_prefix}.\n    -p, --previous          Return logs for the previous instances of the pods, if available. (true|false) Defaults to ${default_previous}.\n    -s, --since             Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to ${default_since}.\n    -b, --line-buffered     Controls if lines should be buffered (true|false). Defaults to ${default_line_buffered:-true}.\n                            It can be useful to disable this if you're piping to e.g. sed/awk/grep and $PROGNAME doesn't generate enough data\n                            for sed/awk/grep to output it immediately.\n    -e, --regex             The type of name matching to use (regex|substring). Defaults to ${regex}.\n    -j, --jq                If your output is json - use this jq-selector to parse it. Defaults to \\\"${default_jq_selector}\\\".\n                            example: --jq \\\".logger + \\\\\\\" \\\\\\\" + .message\\\"\n    -k, --colored-output    Use colored output (pod|line|false).\n                            pod = only color pod name, line = color entire line, false = don't use any colors.\n                            Defaults to ${default_colored_output}.\n    -z, --skip-colors       Comma-separated list of colors to not use in output.\n                            If you have green foreground on black, this will skip dark grey and some greens: -z 2,8,10\n                            Defaults to: ${default_skip_colors}.\n        --timestamps        Show timestamps for each log line. (true|false) Defaults to ${default_timestamps:-false}.\n        --tail              Lines of recent log file to display. Defaults to ${default_tail}, showing all log lines.\n    -v, --version           Prints the kubetail version.\n    -r, --cluster           The name of the kubeconfig cluster to use.\n    -i, --show-color-index  Show the color index before the pod name prefix that is shown before each log line.\n                            Normally only the pod name is added as a prefix before each line, for example \\\"[app-5b7ff6cbcd-bjv8n]\\\",\n                            but if \\\"show-color-index\\\" is true then color index is added as well: \\\"[1:app-5b7ff6cbcd-bjv8n]\\\".\n                            This is useful if you have color blindness or if you want to know which colors to exclude (see \\\"--skip-colors\\\").\n                            Defaults to ${default_show_color_index}.\n\nexamples:\n    ${PROGNAME} my-pod-v1\n    ${PROGNAME} my-pod-v1 -c my-container\n    ${PROGNAME} my-pod-v1 -t int1-context -c my-container\n    ${PROGNAME} '(service|consumer|thing)' -e regex\n    ${PROGNAME} -l service=my-service\n    ${PROGNAME} --selector service=my-service --since 10m\n    ${PROGNAME} --tail 1\"\n\nif [ \"$#\" -ne 0 ]; then\n\twhile [ \"$#\" -gt 0 ]\n\tdo\n\t\tcase \"$1\" in\n\t\t-h|--help)\n\t\t\techo \"$usage\"\n\t\t\texit 0\n\t\t\t;;\n\t\t-v|--version)\n\t\t\techo \"$version\"\n\t\t\texit 0\n\t\t\t;;\n\t\t-c|--container)\n\t\t\tcontainers+=(\"$2\")\n\t\t\t;;\n\t\t-e|--regex)\n\t\t\tif [ \"$2\" = \"substring\" ]; then\n\t\t\t\tregex=\"substring\"\n\t\t\telse\n\t\t\t\tregex=\"regex\"\n\t\t\tfi\n\t\t\t;;\n\t\t-t|--context)\n\t\t\tcontext=\"$2\"\n\t\t\t;;\n\t\t-r|--cluster)\n\t\t\tcluster=\"--cluster $2\"\n\t\t\t;;\n\t\t-l|--selector)\n\t\t\tselector=(--selector \"$2\")\n\t\t\tpod=\"\"\n\t\t\t;;\n\t\t-d|--dry-run)\n\t\t\tdryrun=true\n\t\t\t;;\n\t\t-p|--previous)\n\t\t\tif [ \"$2\" = \"false\" ]; then\n\t\t\t\tprevious=\"false\"\n\t\t\telse\n\t\t\t\tprevious=\"true\"\n\t\t\tfi\n\t\t\t;;\n\t\t-s|--since)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\tsince=\"${default_since}\"\n\t\t\telse\n\t\t\t\tsince=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-n|--namespace)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\t# using namespace from context\n\t\t\t\t:\n\t\t\telse\n\t\t\t\tnamespace_arg=\"--namespace $2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-f|--follow)\n\t\t\tif [ \"$2\" = \"false\" ]; then\n\t\t\t\tfollow=\"false\"\n\t\t\telse\n\t\t\t\tfollow=\"true\"\n\t\t\tfi\n\t\t\t;;\n\t\t-P|--prefix)\n\t\t\tif [ \"$2\" = \"false\" ]; then\n\t\t\t\tprefix=\"false\"\n\t\t\telse\n\t\t\t\tprefix=\"true\"\n\t\t\tfi\n\t\t\t;;\n\t\t-b|--line-buffered)\n\t\t\tif [ \"$2\" = \"false\" ]; then\n\t\t\t\tline_buffered=\"false\"\n\t\t\telse\n\t\t\t\tline_buffered=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-k|--colored-output)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\tcolored_output=\"${default_colored_output}\"\n\t\t\telse\n\t\t\t\tcolored_output=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-j|--jq)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\tjq_selector=\"${default_jq_selector}\"\n\t\t\telse\n\t\t\t\tjq_selector=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-z|--skip-colors)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\tskip_colors=\"${default_skip_colors}\"\n\t\t\telse\n\t\t\t\tskip_colors=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t--timestamps)\n\t\t\tif [ \"$2\" = \"false\" ]; then\n\t\t\t\t\ttimestamps=\"$1=$2\"\n\t\t\telse\n\t\t\t\t\ttimestamps=\"$1\"\n\t\t\tfi\n\t\t\t;;\n\t\t--tail)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\t\ttail=\"${default_tail}\"\n\t\t\telse\n\t\t\t\t\ttail=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t-i|--show-color-index)\n\t\t\tif [ -z \"$2\" ]; then\n\t\t\t\t\tshow_color_index=\"${default_show_color_index}\"\n\t\t\telse\n\t\t\t\t\tshow_color_index=\"$2\"\n\t\t\tfi\n\t\t\t;;\n\t\t--)\n\t\t\tbreak\n\t\t\t;;\n\t\t-*)\n\t\t\techo \"Invalid option '$1'. Use --help to see the valid options\" >&2\n\t\t\texit 1\n\t\t\t;;\n\t\t# an option argument, continue\n\t\t*) ;;\n\t\tesac\n\t\tshift\n\tdone\nelse\n\techo \"$usage\"\n\texit 1\nfi\n\n# Join function that supports a multi-character separator (copied from http://stackoverflow.com/a/23673883/398441)\nfunction join() {\n\t# $1 is sep\n\t# $2... are the elements to join\n\tlocal sep=\"$1\"\n\tshift\n\n\tlocal F=0\n\tfor x in \"$@\"\n\tdo\n\t\tif [[ F -eq 1 ]]\n\t\t\tthen\n\t\t\t\techo -n \"$sep\"\n\t\t\telse\n\t\t\t\tF=1\n\t\t\tfi\n\t\t\techo -n \"$x\"\n\tdone\n\techo\n}\n\n# Check if pod query contains a comma and we've not specified \"regex\" explicitly,\n# if so we convert the pod query string into a regex that matches all pods seperated by the comma\nif [[ \"${pod}\" = *\",\"* ]] && [ ! \"${regex}\" == 'regex' ]; then\n\n\t# Split the supplied query string (in variable pod) by comma into an array named \"pods_to_match\"\n\tIFS=',' read -r -a pods_to_match <<< \"${pod}\"\n\n\t# Join all pod names into a string with \".*|.*\" as delimiter\n\tpod=$(join \".*|.*\" \"${pods_to_match[@]}\")\n\n\t# Prepend and initial \".*\" and and append the last \".*\"\n\tpod=\".*${pod}.*\"\n\n\t# Force the use of regex matching\n\tregex='regex'\nfi\n\ngrep_matcher=''\nif [ \"${regex}\" == 'regex' ]; then\n\techo \"Using regex '${pod}' to match pods\"\n\tgrep_matcher='-E'\nfi\n\n# Get all pods matching the input and put them in an array. If no input then all pods are matched.\nmatching_pods=(`${KUBECTL_BIN} get pods ${context:+--context=${context}} \"${selector[@]}\" ${namespace_arg} ${cluster} --field-selector=status.phase=Running --output=jsonpath='{.items[*].metadata.name}' | xargs -n1 | grep --color=never $grep_matcher \"${pod}\"`)\nmatching_pods_size=${#matching_pods[@]}\n\nif [ ${matching_pods_size} -eq 0 ]; then\n\techo \"No pod exists that matches ${pod}\"\n\texit 1\nfi\n\ncolor_end=$(tput sgr0)\n\n# Wrap all pod names in the \"kubectl logs <name> -f=true/false\" command\ndisplay_names_preview=()\npod_logs_commands=()\ni=0\ncolor_index=0\n\nfunction next_col {\n\tpotential_col=$(($1+1))\n\t[[ $skip_colors =~ (^|,)$potential_col($|,) ]] && echo `next_col $potential_col` || echo $potential_col\n}\n\n# Allows for more colors, this is useful if one tails a lot pods\nif [ ${colored_output} != \"false\" ]; then\n\texport TERM=xterm-256color\nfi\n\n# Function that kills all kubectl processes that are started by kubetail in the background\nfunction kill_kubectl_processes {\n\tkill 0\n}\n\n# Invoke the \"kill_kubectl_processes\" function when the script is stopped (including ctrl+c)\n# Note that \"INT\" is not used because if, for example, kubectl cannot find a container\n# (for example when running \"kubetail something -c non_matching\")\ntrap kill_kubectl_processes EXIT\n\n# Putting all needed values in a variable so that multiple requests to Kubernetes api can be avoided, thus making it faster\nall_pods_containers=$(echo -e `${KUBECTL_BIN} get pods ${namespace_arg} ${context:+--context=${context}} --output=jsonpath=\"{range .items[*]}{.metadata.name} {.spec['containers', 'initContainers'][*].name} \\n{end}\"`)\n\n\nfor pod in ${matching_pods[@]}; do\n\tif [ ${#containers[@]} -eq 0 ]; then\n\t\tpod_containers=($(echo -e \"$all_pods_containers\" | grep \"$pod \" | cut -d ' ' -f2- | xargs -n1))\n\telse\n\t\tpod_containers=(\"${containers[@]}\")\n\tfi\n\n\tfor container in ${pod_containers[@]}; do\n\t\t[ ${matching_pods_size} -eq 1 -a ${#pod_containers[@]} -eq 1 ] && single_stream=\"true\" || single_stream=\"false\"\n\n\t\tif [ ${colored_output} == \"false\" ] || [ ${single_stream} == \"true\" ]; then\n\t\t\tcolor_start=$(tput sgr0)\n\t\t\tcolor_index_prefix=\"\"\n\t\telse\n\t\t\tcolor_index=`next_col $color_index`\n\t\t\tcolor_start=$(tput setaf $color_index)\n\t\t\tcolor_index_prefix=`if [ ${show_color_index} == \"true\" ]; then echo \"${color_index}:\"; else echo \"\"; fi`\n\t\tfi\n\n\t\tif [ ${#pod_containers[@]} -eq 1 ]; then\n\t\t\tdisplay_name=\"${pod}\"\n\t\telse\n\t\t\tdisplay_name=\"${pod} ${container}\"\n\t\tfi\n\n\t\tif [ ${colored_output} == \"false\" ]; then\n\t\t\tdisplay_names_preview+=(\"${display_name}\")\n\t\telse\n\t\t\tdisplay_names_preview+=(\"$color_index_prefix${color_start}${display_name}${color_end}\")\n\t\tfi\n\n\t\tif [ ${prefix} == \"false\" ]; then\n\t\t\tprefix_line=\"\"\n\t\telse\n\t\t\tif [ ${colored_output} == \"false\" ]; then\n\t\t\t\tprefix_line=\"[${display_name}] \"\n\t\t\telse\n\t\t\t\tprefix_line=\"${color_start}[${color_end}${color_index_prefix}${color_start}${display_name}]${color_end} \"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ ${colored_output} == \"false\" ] || [ ${colored_output} == \"pod\" ]; then\n\t\t\tcolored_line=\"${prefix_line}\\$REPLY\"\n\t\telse\n\t\t\tcolored_line=\"${prefix_line}${color_start}\\$REPLY${color_end}\"\n\t\tfi\n\n\t\tkubectl_cmd=\"${KUBECTL_BIN} ${context:+--context=${context}} logs ${pod} ${container} -f=${follow} --previous=${previous} --since=${since} --tail=${tail} ${namespace_arg} ${cluster}\"\n\t\tcolorify_lines_cmd=\"while read -r; do echo \\\"$colored_line\\\" | tail -n +1; done\"\n\t\tif [ \"z\" == \"z$jq_selector\" ]; then\n\t\t\tlogs_commands+=(\"${kubectl_cmd} ${timestamps} | ${colorify_lines_cmd}\");\n\t\telse\n\t\t\tlogs_commands+=(\"${kubectl_cmd} | jq --unbuffered -r -R --stream '. as \\$line | try (fromjson | $jq_selector) catch \\$line' | ${colorify_lines_cmd}\");\n\t\tfi\n\n\t\t# There are only 11 usable colors\n\t\ti=$(( ($i+1)%13 ))\n\tdone\ndone\n\n# Preview pod colors\necho \"Will tail ${#display_names_preview[@]} logs...\"\nfor preview in \"${display_names_preview[@]}\"; do\n\techo \"$preview\"\ndone\n\nif [[ ${dryrun} == true ]];\nthen\n\texit 0\nfi\n\n# Join all log commands into one string separated by \" & \"\ncommand_to_tail=$(join \" & \" \"${logs_commands[@]}\")\n\n# Aggregate all logs and print to stdout\n# Note that tail +1f doesn't work on some Linux distributions so we use this slightly longer alternative\n# Note that if --follow=false, then the tail command should also not be followed\ntail_follow_command=\"-f\"\nif [[ ${follow} == false ]];\nthen\n\ttail_follow_command=\"\"\nfi\n\n\ncommand_to_run=\"tail ${tail_follow_command} -n +1 <( eval \"${command_to_tail}\" )\"\n\nif [ \"${line_buffered}\" == \"false\" ]; then\n\tdistro=\"$(uname)\"\n\tif [[ \"$distro\" == \"Darwin\" || \"$distro\" == \"FreeBSD\" ]]; then\n\t    command_to_run=\"script -q /dev/null ${command_to_run}\"\n\telse # Linux etc\n\t    command_to_run=\"script -q -c '${command_to_run}' /dev/null\"\n\tfi\nfi\n\neval \"${command_to_run}\""
        },
        {
          "name": "kubetail.plugin.zsh",
          "type": "blob",
          "size": 0.6767578125,
          "content": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Add our plugin's diretory to user's path\nPLUGIN_BIN=\"$(dirname $0)\"\nexport PATH=\"${PATH}:${PLUGIN_BIN}\"\n\nfpath=($PLUGIN_BIN/completion $fpath)\n"
        }
      ]
    }
  ]
}