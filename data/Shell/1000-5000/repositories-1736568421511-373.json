{
  "metadata": {
    "timestamp": 1736568421511,
    "page": 373,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dennyzhang/cheatsheet-kubernetes-A4",
      "stars": 2015,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "*.tex\nREADME.pdf\n.DS_Store\n*-A4.log\n"
        },
        {
          "name": "README.org",
          "type": "blob",
          "size": 103.244140625,
          "content": "* Kubectl Kubernetes CheatSheet                                   :Cloud:\n:PROPERTIES:\n:type:     kubernetes\n:export_file_name: cheatsheet-kubernetes-A4.pdf\n:END:\n\n#+BEGIN_HTML\n<a href=\"https://github.com/dennyzhang/cheatsheet-kubernetes-A4\"><img align=\"right\" width=\"200\" height=\"183\" src=\"https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png\" /></a>\n<div id=\"the whole thing\" style=\"overflow: hidden;\">\n<div style=\"float: left; padding: 5px\"> <a href=\"https://www.linkedin.com/in/dennyzhang001\"><img src=\"https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png\" alt=\"linkedin\" /></a></div>\n<div style=\"float: left; padding: 5px\"><a href=\"https://github.com/dennyzhang\"><img src=\"https://www.dennyzhang.com/wp-content/uploads/sns/github.png\" alt=\"github\" /></a></div>\n<div style=\"float: left; padding: 5px\"><a href=\"https://www.dennyzhang.com/slack\" target=\"_blank\" rel=\"nofollow\"><img src=\"https://www.dennyzhang.com/wp-content/uploads/sns/slack.png\" alt=\"slack\"/></a></div>\n</div>\n\n<br/><br/>\n<a href=\"http://makeapullrequest.com\" target=\"_blank\" rel=\"nofollow\"><img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg\" alt=\"PRs Welcome\"/></a>\n#+END_HTML\n\n- PDF Link: [[https://github.com/dennyzhang/cheatsheet-kubernetes-A4/blob/master/cheatsheet-kubernetes-A4.pdf][cheatsheet-kubernetes-A4.pdf]], Category: [[https://cheatsheet.dennyzhang.com/category/cloud/][Cloud]]\n- Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4\n- Related posts: [[https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4][Kubectl CheatSheet]], [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Kubernetes Yaml]], [[https://github.com/topics/denny-cheatsheets][#denny-cheatsheets]]\n\nFile me [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com/issues][Issues]] or star [[https://github.com/dennyzhang/cheatsheet.dennyzhang.com][this repo]].\n** Common Commands\n| Name                                 | Command                                                                                   |\n|--------------------------------------+-------------------------------------------------------------------------------------------|\n| Run curl test temporarily            | =kubectl run --generator=run-pod/v1 --rm mytest --image=yauritux/busybox-curl -it=        |\n| Run wget test temporarily            | =kubectl run --generator=run-pod/v1 --rm mytest --image=busybox -it wget=                 |\n| Run nginx deployment with 2 replicas | =kubectl run my-nginx --image=nginx --replicas=2 --port=80=                               |\n| Run nginx pod and expose it          | =kubectl run my-nginx --restart=Never --image=nginx --port=80 --expose=                   |\n| Run nginx deployment and expose it   | =kubectl run my-nginx --image=nginx --port=80 --expose=                                   |\n| List authenticated contexts          | =kubectl config get-contexts=, =~/.kube/config=                                           |\n| Set namespace preference             | =kubectl config set-context <context_name> --namespace=<ns_name>=                         |\n| List pods with nodes info            | =kubectl get pod -o wide=                                                                 |\n| List everything                      | =kubectl get all --all-namespaces=                                                        |\n| Get all services                     | =kubectl get service --all-namespaces=                                                    |\n| Get all deployments                  | =kubectl get deployments --all-namespaces=                                                |\n| Show nodes with labels               | =kubectl get nodes --show-labels=                                                         |\n| Get resources with json output       | =kubectl get pods --all-namespaces -o json=                                               |\n| Validate yaml file with dry run      | =kubectl create --dry-run --validate -f pod-dummy.yaml=                                   |\n| Start a temporary pod for testing    | =kubectl run --rm -i -t --image=alpine test-$RANDOM -- sh=                                |\n| kubectl run shell command            | =kubectl exec -it mytest -- ls -l /etc/hosts=                                             |\n| Get system conf via configmap        | =kubectl -n kube-system get cm kubeadm-config -o yaml=                                    |\n| Get deployment yaml                  | =kubectl -n denny-websites get deployment mysql -o yaml=                                  |\n| Explain resource                     | =kubectl explain pods=, =kubectl explain svc=                                             |\n| Watch pods                           | =kubectl get pods  -n wordpress --watch=                                                  |\n| Query healthcheck endpoint           | =curl -L http://127.0.0.1:10250/healthz=                                                  |\n| Open a bash terminal in a pod        | =kubectl exec -it storage sh=                                                             |\n| Check pod environment variables      | =kubectl exec redis-master-ft9ex env=                                                     |\n| Enable kubectl shell autocompletion  | =echo \"source <(kubectl completion bash)\" >>~/.bashrc=, and reload                        |\n| Use minikube dockerd in your laptop  | =eval $(minikube docker-env)=, No need to push docker hub any more                        |\n| Kubectl apply a folder of yaml files | =kubectl apply -R -f .=                                                                   |\n| Get services sorted by name          | kubectl get services --sort-by=.metadata.name                                             |\n| Get pods sorted by restart count     | kubectl get pods --sort-by='.status.containerStatuses[0].restartCount'                    |\n| List pods and images                 | kubectl get pods -o='custom-columns=PODS:.metadata.name,Images:.spec.containers[*].image' |\n| List all container images            | [[https://github.com/dennyzhang/cheatsheet-kubernetes-A4/blob/master/list-all-images.sh#L14-L17][list-all-images.sh]]                                                                        |\n| kubeconfig skip tls verification     | [[https://github.com/dennyzhang/cheatsheet-kubernetes-A4/blob/master/skip-tls-verify.md][skip-tls-verify.md]]                                                                        |\n| [[https://kubernetes.io/docs/tasks/tools/install-kubectl/][Ubuntu install kubectl]]               | =\"deb https://apt.kubernetes.io/ kubernetes-xenial main\"=                                 |\n| Reference                            | [[https://github.com/kubernetes/kubernetes/tags][GitHub: kubernetes releases]]                                                               |\n| Reference                            | [[https://cheatsheet.dennyzhang.com/cheatsheet-minikube-A4][minikube cheatsheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-docker-A4][docker cheatsheet]], [[https://cheatsheet.dennyzhang.com/cheatsheet-openshift-A4][OpenShift CheatSheet]]                              |\n** Check Performance\n| Name                                         | Command                                              |\n|----------------------------------------------+------------------------------------------------------|\n| Get node resource usage                      | =kubectl top node=                                   |\n| Get pod resource usage                       | =kubectl top pod=                                    |\n| Get resource usage for a given pod           | =kubectl top <podname> --containers=                 |\n| List resource utilization for all containers | =kubectl top pod --all-namespaces --containers=true= |\n** Resources Deletion\n| Name                                    | Command                                                  |\n|-----------------------------------------+----------------------------------------------------------|\n| Delete pod                              | =kubectl delete pod/<pod-name> -n <my-namespace>=        |\n| Delete pod by force                     | =kubectl delete pod/<pod-name> --grace-period=0 --force= |\n| Delete pods by labels                   | =kubectl delete pod -l env=test=                         |\n| Delete deployments by labels            | =kubectl delete deployment -l app=wordpress=             |\n| Delete all resources filtered by labels | =kubectl delete pods,services -l name=myLabel=           |\n| Delete resources under a namespace      | =kubectl -n my-ns delete po,svc --all=                   |\n| Delete persist volumes by labels        | =kubectl delete pvc -l app=wordpress=                    |\n| Delete state fulset only (not pods)     | =kubectl delete sts/<stateful_set_name> --cascade=false= |\n#+BEGIN_HTML\n<a href=\"https://cheatsheet.dennyzhang.com\"><img align=\"right\" width=\"185\" height=\"37\" src=\"https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png\"></a>\n#+END_HTML\n** Log & Conf Files\n| Name                      | Comment                                                                   |\n|---------------------------+---------------------------------------------------------------------------|\n| Config folder             | =/etc/kubernetes/=                                                        |\n| Certificate files         | =/etc/kubernetes/pki/=                                                    |\n| Credentials to API server | =/etc/kubernetes/kubelet.conf=                                            |\n| Superuser credentials     | =/etc/kubernetes/admin.conf=                                              |\n| kubectl config file       | =~/.kube/config=                                                          |\n| Kubernetes working dir    | =/var/lib/kubelet/=                                                       |\n| Docker working dir        | =/var/lib/docker/=, =/var/log/containers/=                                |\n| Etcd working dir          | =/var/lib/etcd/=                                                          |\n| Network cni               | =/etc/cni/net.d/=                                                         |\n| Log files                 | =/var/log/pods/=                                                          |\n| log in worker node        | =/var/log/kubelet.log=, =/var/log/kube-proxy.log=                         |\n| log in master node        | =kube-apiserver.log=, =kube-scheduler.log=, =kube-controller-manager.log= |\n| Env                       | =/etc/systemd/system/kubelet.service.d/10-kubeadm.conf=                   |\n| Env                       | export KUBECONFIG=/etc/kubernetes/admin.conf                              |\n** Pod\n| Name                         | Command                                                                                   |\n|------------------------------+-------------------------------------------------------------------------------------------|\n| List all pods                | =kubectl get pods=                                                                        |\n| List pods for all namespace  | =kubectl get pods --all-namespaces=                                                        |\n| List all critical pods       | =kubectl get -n kube-system pods -a=                                                      |\n| List pods with more info     | =kubectl get pod -o wide=, =kubectl get pod/<pod-name> -o yaml=                           |\n| Get pod info                 | =kubectl describe pod/srv-mysql-server=                                                   |\n| List all pods with labels    | =kubectl get pods --show-labels=                                                          |\n| [[https://github.com/kubernetes/kubernetes/issues/49387][List all unhealthy pods]]      | kubectl get pods --field-selector=status.phase!=Running --all-namespaces                  |\n| List running pods            | kubectl get pods --field-selector=status.phase=Running                                    |\n| Get Pod initContainer status | =kubectl get pod --template '{{.status.initContainerStatuses}}' <pod-name>=               |\n| kubectl run command          | kubectl exec -it -n \"$ns\" \"$podname\" -- sh -c \"echo $msg >>/dev/err.log\"                  |\n| Watch pods                   | =kubectl get pods  -n wordpress --watch=                                                  |\n| Get pod by selector          | kubectl get pods --selector=\"app=syslog\" -o jsonpath='{.items[*].metadata.name}'          |\n| List pods and images         | kubectl get pods -o='custom-columns=PODS:.metadata.name,Images:.spec.containers[*].image' |\n| List pods and containers     | -o='custom-columns=PODS:.metadata.name,CONTAINERS:.spec.containers[*].name'               |\n| Reference                    | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                                                           |\n** Label & Annotation\n| Name                             | Command                                                           |\n|----------------------------------+-------------------------------------------------------------------|\n| Filter pods by label             | =kubectl get pods -l owner=denny=                                 |\n| Manually add label to a pod      | =kubectl label pods dummy-input owner=denny=                      |\n| Remove label                     | =kubectl label pods dummy-input owner-=                           |\n| Manually add annotation to a pod | =kubectl annotate pods dummy-input my-url=https://dennyzhang.com= |\n** Deployment & Scale\n| Name                         | Command                                                                  |\n|------------------------------+--------------------------------------------------------------------------|\n| Scale out                    | =kubectl scale --replicas=3 deployment/nginx-app=                        |\n| online rolling upgrade       | =kubectl rollout app-v1 app-v2 --image=img:v2=                           |\n| Roll backup                  | =kubectl rollout app-v1 app-v2 --rollback=                               |\n| List rollout                 | =kubectl get rs=                                                         |\n| Check update status          | =kubectl rollout status deployment/nginx-app=                            |\n| Check update history         | =kubectl rollout history deployment/nginx-app=                           |\n| Pause/Resume                 | =kubectl rollout pause deployment/nginx-deployment=, =resume=            |\n| Rollback to previous version | =kubectl rollout undo deployment/nginx-deployment=                       |\n| Reference     | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]], [[https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#pausing-and-resuming-a-deployment][Link: Pausing and Resuming a Deployment]] |\n#+BEGIN_HTML\n<a href=\"https://cheatsheet.dennyzhang.com\"><img align=\"right\" width=\"185\" height=\"37\" src=\"https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png\"></a>\n#+END_HTML\n** Quota & Limits & Resource\n| Name                          | Command                                                                 |\n|-------------------------------+-------------------------------------------------------------------------|\n| List Resource Quota           | =kubectl get resourcequota=                                             |\n| List Limit Range              | =kubectl get limitrange=                                                |\n| Customize resource definition | =kubectl set resources deployment nginx -c=nginx --limits=cpu=200m=     |\n| Customize resource definition | =kubectl set resources deployment nginx -c=nginx --limits=memory=512Mi= |\n| Reference                     | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                                         |\n** Service\n| Name                            | Command                                                                           |\n|---------------------------------+-----------------------------------------------------------------------------------|\n| List all services               | =kubectl get services=                                                            |\n| List service endpoints          | =kubectl get endpoints=                                                           |\n| Get service detail              | =kubectl get service nginx-service -o yaml=                                       |\n| Get service cluster ip          | kubectl get service nginx-service -o go-template='{{.spec.clusterIP}}'            |\n| Get service cluster port        | kubectl get service nginx-service -o go-template='{{(index .spec.ports 0).port}}' |\n| Expose deployment as lb service | =kubectl expose deployment/my-app --type=LoadBalancer --name=my-service=          |\n| Expose service as lb service    | =kubectl expose service/wordpress-1-svc --type=LoadBalancer --name=ns1=           |\n| Reference                       | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                                                   |\n** Secrets\n| Name                             | Command                                                                 |\n|----------------------------------+-------------------------------------------------------------------------|\n| List secrets                     | =kubectl get secrets --all-namespaces=                                  |\n| Generate secret                  | =echo -n 'mypasswd', then redirect to base64 --decode=                  |\n| Get secret                       | =kubectl get secret denny-cluster-kubeconfig=                           |\n| Get a specific field of a secret | kubectl get secret denny-cluster-kubeconfig -o jsonpath=\"{.data.value}\" |\n| Create secret from cfg file      | kubectl create secret generic db-user-pass --from-file=./username.txt   |\n| Reference                        | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]], [[https://kubernetes.io/docs/concepts/configuration/secret/][Link: Secrets]]                          |\n** StatefulSet\n| Name                               | Command                                                  |\n|------------------------------------+----------------------------------------------------------|\n| List statefulset                   | =kubectl get sts=                                        |\n| Delete statefulset only (not pods) | =kubectl delete sts/<stateful_set_name> --cascade=false= |\n| Scale statefulset                  | =kubectl scale sts/<stateful_set_name> --replicas=5=     |\n| Reference                          | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                          |\n** Volumes & Volume Claims\n| Name                      | Command                                                      |\n|---------------------------+--------------------------------------------------------------|\n| List storage class        | =kubectl get storageclass=                                   |\n| Check the mounted volumes | =kubectl exec storage ls /data=                              |\n| Check persist volume      | =kubectl describe pv/pv0001=                                 |\n| Copy local file to pod    | =kubectl cp /tmp/my <some-namespace>/<some-pod>:/tmp/server= |\n| Copy pod file to local    | =kubectl cp <some-namespace>/<some-pod>:/tmp/server /tmp/my= |\n| Reference  | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                              |\n** Events & Metrics\n| Name                            | Command                                                    |\n|---------------------------------+------------------------------------------------------------|\n| View all events                 | =kubectl get events --all-namespaces=                      |\n| List Events sorted by timestamp | kubectl get events --sort-by=.metadata.creationTimestamp   |\n** Node Maintenance\n| Name                                      | Command                       |\n|-------------------------------------------+-------------------------------|\n| Mark node as unschedulable                | =kubectl cordon $NODE_NAME=   |\n| Mark node as schedulable                  | =kubectl uncordon $NODE_NAME= |\n| Drain node in preparation for maintenance | =kubectl drain $NODE_NAME=    |\n** Namespace & Security\n| Name                          | Command                                                                                             |\n|-------------------------------+-----------------------------------------------------------------------------------------------------|\n| List authenticated contexts   | =kubectl config get-contexts=, =~/.kube/config=                                                     |\n| Set namespace preference      | =kubectl config set-context <context_name> --namespace=<ns_name>=                                   |\n| Switch context                | =kubectl config use-context <context_name>=                                                         |\n| Load context from config file | =kubectl get cs --kubeconfig kube_config.yml=                                                       |\n| Delete the specified context  | =kubectl config delete-context <context_name>=                                                      |\n| List all namespaces defined   | =kubectl get namespaces=                                                                            |\n| List certificates             | =kubectl get csr=                                                                                   |\n| [[https://kubernetes.io/docs/concepts/policy/pod-security-policy/][Check user privilege]]          | kubectl --as=system:serviceaccount:ns-denny:test-privileged-sa -n ns-denny auth can-i use pods/list |\n| [[https://kubernetes.io/docs/concepts/policy/pod-security-policy/][Check user privilege]]          | =kubectl auth can-i use pods/list=                                                                  |\n| Reference                     | [[https://cheatsheet.dennyzhang.com/kubernetes-yaml-templates][Link: kubernetes yaml templates]]                                                                     |\n** Network\n| Name                              | Command                                                  |\n|-----------------------------------+----------------------------------------------------------|\n| Temporarily add a port-forwarding  | =kubectl port-forward redis-134 6379:6379=               |\n| Add port-forwarding for deployment | =kubectl port-forward deployment/redis-master 6379:6379= |\n| Add port-forwarding for replicaset | =kubectl port-forward rs/redis-master 6379:6379=         |\n| Add port-forwarding for service    | =kubectl port-forward svc/redis-master 6379:6379=        |\n| Get network policy                 | =kubectl get NetworkPolicy=                              |\n| Get ingress controller             | =kubectl get ingress=                                     |\n| Get ingress classes                | =kubectl get ingressclasses=                             |  \n** Patch\n| Name                          | Summary                                                             |\n|-------------------------------+---------------------------------------------------------------------|\n| Patch service to loadbalancer | kubectl patch svc $svc_name -p '{\"spec\": {\"type\": \"LoadBalancer\"}}' |\n** Extenstions\n| Name                                    | Summary                    |\n|-----------------------------------------+----------------------------|\n| Enumerates the resource types available | =kubectl api-resources=    |\n| List api group                          | =kubectl api-versions=     |\n| List all CRD                            | =kubectl get crd=          |\n| List storageclass                       | =kubectl get storageclass= |\n#+BEGIN_HTML\n<a href=\"https://cheatsheet.dennyzhang.com\"><img align=\"right\" width=\"185\" height=\"37\" src=\"https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png\"></a>\n#+END_HTML\n** Components & Services\n*** Services on Master Nodes\n| Name                     | Summary                                                                                    |\n|--------------------------+--------------------------------------------------------------------------------------------|\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kube-apiserver][kube-apiserver]]           | API gateway. Exposes the Kubernetes API from master nodes                                  |\n| [[https://coreos.com/etcd/][etcd]]                     | reliable data store for all k8s cluster data                                               |\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kube-scheduler][kube-scheduler]]           | schedule pods to run on selected nodes                                                     |\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kube-controller-manager][kube-controller-manager]]  | Reconcile the states. node/replication/endpoints/token controller and service account, etc |\n| cloud-controller-manager |                                                                                            |\n*** Services on Worker Nodes\n| Name              | Summary                                                                                      |\n|-------------------+----------------------------------------------------------------------------------------------|\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kubelet][kubelet]]           | A node agent makes sure that containers are running in a pod                                 |\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kube-proxy][kube-proxy]]        | Manage network connectivity to the containers. e.g, iptable, ipvs                            |\n| [[https://github.com/docker/engine][Container Runtime]] | Kubernetes supported runtimes: dockerd, cri-o, runc and any [[https://github.com/opencontainers/runtime-spec][OCI runtime-spec]] implementation. |\n\n*** Addons: pods and services that implement cluster features\n| Name                          | Summary                                                                   |\n|-------------------------------+---------------------------------------------------------------------------|\n| DNS                           | serves DNS records for Kubernetes services                                |\n| Web UI                        | a general purpose, web-based UI for Kubernetes clusters                   |\n| Container Resource Monitoring | collect, store and serve container metrics                                |\n| Cluster-level Logging         | save container logs to a central log store with search/browsing interface |\n\n*** Tools\n| Name                  | Summary                                                     |\n|-----------------------+-------------------------------------------------------------|\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kubectl][kubectl]]               | the command line util to talk to k8s cluster                |\n| [[https://github.com/kubernetes/kubernetes/tree/master/cmd/kubeadm][kubeadm]]               | the command to bootstrap the cluster                        |\n| [[https://kubernetes.io/docs/reference/setup-tools/kubefed/kubefed/][kubefed]]               | the command line to control a Kubernetes Cluster Federation |\n| Kubernetes Components | [[https://kubernetes.io/docs/concepts/overview/components/][Link: Kubernetes Components]]                                 |\n** More Resources\nLicense: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].\n\nhttps://kubernetes.io/docs/reference/kubectl/cheatsheet/\n\nhttps://codefresh.io/kubernetes-guides/kubernetes-cheat-sheet/\n\n#+BEGIN_HTML\n<a href=\"https://cheatsheet.dennyzhang.com\"><img align=\"right\" width=\"201\" height=\"268\" src=\"https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png\"></a>\n<a href=\"https://cheatsheet.dennyzhang.com\"><img align=\"right\" src=\"https://raw.githubusercontent.com/dennyzhang/cheatsheet.dennyzhang.com/master/images/cheatsheet_dns.png\"></a>\n\n<a href=\"https://www.linkedin.com/in/dennyzhang001\"><img align=\"bottom\" src=\"https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png\" alt=\"linkedin\" /></a>\n<a href=\"https://github.com/dennyzhang\"><img align=\"bottom\"src=\"https://www.dennyzhang.com/wp-content/uploads/sns/github.png\" alt=\"github\" /></a>\n<a href=\"https://www.dennyzhang.com/slack\" target=\"_blank\" rel=\"nofollow\"><img align=\"bottom\" src=\"https://www.dennyzhang.com/wp-content/uploads/sns/slack.png\" alt=\"slack\"/></a>\n#+END_HTML\n* org-mode configuration                                           :noexport:\n#+STARTUP: overview customtime noalign logdone showall\n#+DESCRIPTION:\n#+KEYWORDS:\n#+LATEX_HEADER: \\usepackage[margin=0.6in]{geometry}\n#+LaTeX_CLASS_OPTIONS: [8pt]\n#+LATEX_HEADER: \\usepackage[english]{babel}\n#+LATEX_HEADER: \\usepackage{lastpage}\n#+LATEX_HEADER: \\usepackage{fancyhdr}\n#+LATEX_HEADER: \\pagestyle{fancy}\n#+LATEX_HEADER: \\fancyhf{}\n#+LATEX_HEADER: \\rhead{Updated: \\today}\n#+LATEX_HEADER: \\rfoot{\\thepage\\ of \\pageref{LastPage}}\n#+LATEX_HEADER: \\lfoot{\\href{https://github.com/dennyzhang/cheatsheet-kubernetes-A4}{GitHub: https://github.com/dennyzhang/cheatsheet-kubernetes-A4}}\n#+LATEX_HEADER: \\lhead{\\href{https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4}{Blog URL: https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4}}\n#+AUTHOR: Denny Zhang\n#+EMAIL:  denny@dennyzhang.com\n#+TAGS: noexport(n)\n#+PRIORITIES: A D C\n#+OPTIONS:   H:3 num:t toc:nil \\n:nil @:t ::t |:t ^:t -:t f:t *:t <:t\n#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc\n#+EXPORT_EXCLUDE_TAGS: exclude noexport\n#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED\n#+LINK_UP:\n#+LINK_HOME:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* DONE Misc scripts                                                :noexport:\n  CLOSED: [2018-11-17 Sat 12:23]\n- Tail pod log by label\n#+BEGIN_SRC sh\nnamespace=\"mynamespace\"\nmylabel=\"app=mylabel\"\nkubectl get pod -l \"$mylabel\" -n \"$namespace\" | tail -n1 \\\n    | awk -F' ' '{print $1}' | xargs -I{} \\\n      kubectl logs -n \"$namespace\" -f {}\n#+END_SRC\n\n- Get node hardware resource utilization\n#+BEGIN_SRC sh\nkubectl get nodes --no-headers \\\n     | awk '{print $1}' | xargs -I {} \\\n     sh -c 'echo {}; kubectl describe node {} | grep Allocated -A 5'\n\nkubectl get nodes --no-headers | awk '{print $1}' | xargs -I {} \\\n    sh -c 'echo {}; kubectl describe node {} | grep Allocated -A 5 \\\n     | grep -ve Event -ve Allocated -ve percent -ve -- ; echo'\n#+END_SRC\n\n- Apply the configuration in manifest.yaml and delete all the other configmaps that are not in the file.\n\n#+BEGIN_EXAMPLE\nkubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/ConfigMap\n#+END_EXAMPLE\n* [#A] Kubernetes                                         :noexport:IMPORTANT:\nhttps://github.com/dennyzhang/cheatsheet-kubernetes-A4\n\nk8s provides declarative primitives for the \"desired state\"\n- Self-healing\n- Horizontal scaling\n- Automatic binpacking\n- Service discovery and load balancing\n** Names of certificates files\nhttps://github.com/kubernetes/kubeadm/blob/master/docs/design/design_v1.9.md\nNames of certificates files:\nca.crt, ca.key (CA certificate)\napiserver.crt, apiserver.key (API server certificate)\napiserver-kubelet-client.crt, apiserver-kubelet-client.key (client certificate for the apiservers to connect to the kubelets securely)\nsa.pub, sa.key (a private key for signing ServiceAccount )\nfront-proxy-ca.crt, front-proxy-ca.key (CA for the front proxy)\nfront-proxy-client.crt, front-proxy-client.key (client cert for the front proxy client)\n** TODO update k8s cheatsheet github: https://github.com/alex1x/kubernetes-cheatsheet\n** TODO Setting up MySQL Replication Clusters in Kubernetes: https://blog.kublr.com/setting-up-mysql-replication-clusters-in-kubernetes-ab7cbac113a5\n** TODO MySQL on Docker: Running Galera Cluster on Kubernetes\nhttps://severalnines.com/blog/mysql-docker-running-galera-cluster-kubernetes\n** TODO Try Functions as a Service - a serverless framework for Docker & Kubernetes http://docs.get-faas.com/\nhttps://blog.alexellis.io/first-faas-python-function/\n** TODO [#A] k8s clustering elasticsearch\nhttps://blog.alexellis.io/kubernetes-kubeadm-video/\n** TODO k8s scale with redis\n** TODO k8s scale with mysqld\n** TODO [#A] k8s: https://5pi.de/2016/11/20/15-producation-grade-kubernetes-cluster/\n** TODO Try kops with k8s\n** TODO k8s free course: https://classroom.udacity.com/courses/ud615\n** TODO feedbackup for k8s study project\nAaron Mulholland [1:18 AM]\nSo it looks pretty good. Got some good concepts in early on. Couple of suggestions for further work;\n\nPotentially the following scenarios;\n    * Setting up ingresses and TLS\n              * Fully configure something like Nginx Ingress Controller or Traefik.\n              * Create TLS Secrets within Kubernetes, and use them in your ingress controller.\n    * Managing RBAC  (Don't know enough about this one, but sounds like a good concept to include)\n              * Creating new roles, etc\n\nI'll have a think and if anymore come to me, I'll let you know.\n\n\nDenny Zhang (Github . Blogger)\n[1:19 AM]\n:thumbsup:\n\nWill update per your suggestions tomorrow, Aaron\n** TODO k8s add DNS challenges\nGui [4:01 PM]\nGetting familiar with the concepts like pod, service, RC, deployment, etc.\n\n\n[4:02]\nTry volume\n\n\n[4:02]\nDNS.\n\n\nDenny Zhang (Github . Blogger)\n[4:02 PM]\nI'm trying to cover the volume via mysql scenarios\n\n\nGui [4:02 PM]\nAnd other addons\n1 reply Today at 4:03 PM View thread\n\n\nDenny Zhang (Github . Blogger)\n[4:02 PM]\nFor DNS, not sure whether I get your point\n\n\nGui [4:03 PM]\nI haven't tried a lot myself.\n1 reply Today at 4:03 PM View thread\n\n\n[4:03]\nLike every pod and service has an DNS name to talk to each other.\n\n\nDenny Zhang (Github . Blogger) [4:04 PM]\nYes, that makes sense\n\n\n[4:04]\nFor addons, do you have any recommended scenario?\n** TODO k8s add challenge of addon\nhttps://www.cncf.io\n\nhttps://kubernetes.io/docs/concepts/cluster-administration/addons/\n** TODO k8s networking models\n** TODO k8s example: https://github.com/kubernetes/examples\n** TODO Blog: Wordpress powered by k8s, docker swarm\n** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n** TODO [#A] absord: https://github.com/kubecamp/kubernetes_in_one_day\n** TODO [#A] absord: https://github.com/kubecamp/kubernetes_in_2_days\n** DONE kubectl config view\n   CLOSED: [2017-12-31 Sun 10:40]\n** DONE [#A] kubernetes persistent volume claim pending\n  CLOSED: [2017-12-31 Sun 11:32]\nhttps://github.com/openshift/origin/issues/7170\n\nkubectl get pvc\nkubectl get pv\n\n#+BEGIN_EXAMPLE\nubuntu@k8s1:~$ kubectl describe pvc\nName:          ironic-gerbil-jenkins\nNamespace:     default\nStorageClass:\nStatus:        Pending\nVolume:\nLabels:        app=ironic-gerbil-jenkins\n               chart=jenkins-0.10.2\n               heritage=Tiller\n               release=ironic-gerbil\nAnnotations:   <none>\nCapacity:\nAccess Modes:\nEvents:\n  Type    Reason         Age                 From                         Message\n  ----    ------         ----                ----                         -------\n  Normal  FailedBinding  37s (x261 over 2h)  persistentvolume-controller  no persistent volumes available for this claim and no storage class is set\n\n\nName:          my-mysql-mysql\nNamespace:     default\nStorageClass:\nStatus:        Pending\nVolume:\nLabels:        app=my-mysql-mysql\n               chart=mysql-0.3.2\n               heritage=Tiller\n               release=my-mysql\nAnnotations:   <none>\nCapacity:\nAccess Modes:\nEvents:\n  Type    Reason         Age              From                         Message\n  ----    ------         ----             ----                         -------\n  Normal  FailedBinding  7s (x5 over 1m)  persistentvolume-controller  no persistent volumes available for this claim and no storage class is set\n#+END_EXAMPLE\n** DONE kubernetes start a container for testing: kubectl run -i --tty ubuntu --image=ubuntu:16.04 --restart=Never -- bash -il\n   CLOSED: [2017-12-31 Sun 11:26]\n** DONE [#A] ReplicaSet is the next-generation Replication Controller.\n  CLOSED: [2017-12-04 Mon 11:26]\nThe only difference between a ReplicaSet and a Replication Controller right now is the selector support.\n\nhttps://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\n\nhttps://github.com/arun-gupta/oreilly-kubernetes-book/blob/master/ch01/wildfly-replicaset.yml\nNext generation Replication Controller\n\nSet-based selector requirement\n- Expression: key, operator, value\n- Operators: In, NotIn, Exists, DoesNotExist\n\n▪Generally created with Deployment\n▪Enables Horizontal Pod Autoscaling\n** DONE k8s yaml API version: https://kubernetes.io/docs/reference/federation/extensions/v1beta1/definitions/\n   CLOSED: [2017-12-03 Sun 12:50]\n** DONE k8s cronjob\n  CLOSED: [2018-01-03 Wed 12:26]\nhttps://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/\n\nkubectl create -f ./cronjob.yaml\nkubectl get cronjob hello\nkubectl get jobs --watch\nkubectl delete cronjob hello\n\n#+BEGIN_EXAMPLE\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: hello\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: hello\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - date; echo Hello from the Kubernetes cluster\n          restartPolicy: OnFailure\n#+END_EXAMPLE\n** DONE [#B] check k8s status: kubectl get cs\n   CLOSED: [2018-01-03 Wed 11:57]\n** BYPASS crictl not found in system path: warning\n   CLOSED: [2018-01-03 Wed 12:36]\n** DONE kubernetes default service type: ClusterIP\n   CLOSED: [2018-01-02 Tue 11:07]\n** DONE kubectl get nodes: Unable to connect to the server: x509: certificate signed by unknown authority: incorrect /etc/kubernetes/admin.conf\n  CLOSED: [2018-01-04 Thu 00:09]\n\n\nroot@k8s1:~# kubectl get nodes\nUnable to connect to the server: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"kubernetes\")\nroot@k8s1:~# echo $KUBECONFIG\n\nroot@k8s1:~# export KUBECONFIG=/etc/kubernetes/admin.conf\nroot@k8s1:~# kubectl get nodes\nNAME      STATUS     ROLES     AGE       VERSION\nk8s1      Ready      master    29m       v1.9.0\nk8s2      NotReady   <none>    17m       v1.9.0\n** DONE [#A] kubernetes-the-hard-way: https://github.com/kelseyhightower/kubernetes-the-hard-way\n   CLOSED: [2017-12-04 Mon 15:49]\n*** CANCELED k8s hardway: etcdctl: Error:  context deadline exceeded\n  CLOSED: [2017-12-04 Mon 17:54]\nhttps://github.com/kelseyhightower/kubernetes-the-hard-way/blob/e8d728d0162ebcdf951464caa8be3a5b156eb463/docs/07-bootstrapping -etcd.md\n#+BEGIN_EXAMPLE\nmac@controller-0:~$ ETCDCTL_API=3 etcdctl member list\nError:  context deadline exceeded\n#+END_EXAMPLE\n\n#+BEGIN_EXAMPLE\nmac@controller-0:~$ kubectl get componentstatuses\nNAME                 STATUS      MESSAGE                                                                                          ERROR\netcd-2               Unhealthy   Get https://10.240.0.12:2379/health: dial tcp 10.240.0.12:2379: getsockopt: connection refused\ncontroller-manager   Healthy     ok\netcd-1               Unhealthy   Get https://10.240.0.11:2379/health: dial tcp 10.240.0.11:2379: getsockopt: connection refused\nscheduler            Healthy     ok\netcd-0               Unhealthy   Get https://10.240.0.10:2379/health: net/http: TLS handshake timeout\n#+END_EXAMPLE\n** DONE k8s livenessProbe(when to restart a Container), readinessProbe(when is ready to accept requests)\n  CLOSED: [2018-01-08 Mon 07:41]\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/\nhttp://kubernetesbyexample.com/healthz/\nhttps://kubernetes-v1-4.github.io/docs/user-guide/liveness/\nhttps://github.com/arun-gupta/kubernetes-java-sample/blob/master/wildfly-pod-hc-http.yaml\nhttp://kubernetesbyexample.com/healthz/\n\nProbes have a number of fields that you can use to more precisely control the behavior of liveness and readiness checks:\n\ninitialDelaySeconds: Number of seconds after the container has started before liveness or readiness probes are initiated.\nperiodSeconds: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\ntimeoutSeconds: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.\nsuccessThreshold: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.\nfailureThreshold: When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up. Giving up in case of liveness probe means restarting the Pod. In case of readiness probe the Pod will be marked Unready. Defaults to 3. Minimum value is 1.\n\n#+BEGIN_EXAMPLE\napiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    test: liveness\n  name: liveness-exec\nspec:\n  containers:\n  - args:\n    - /bin/sh\n    - -c\n    - echo ok > /tmp/health; sleep 10; rm -rf /tmp/health; sleep 600\n    image: gcr.io/google_containers/busybox\n    livenessProbe:\n      exec:\n        command:\n        - cat\n        - /tmp/health\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    name: liveness\n#+END_EXAMPLE\n** DONE list all critical pods\n  CLOSED: [2018-01-04 Thu 10:10]\nkubectl --namespace kube-system get pods\n\nfor pod in $(kubectl --namespace kube-system get pods -o jsonpath=\"{.items[*].metadata.name}\"); do\n    node_info=$(kubectl --namespace kube-system describe pod $pod | grep \"Node:\")\n    echo \"Pod: $pod, $node_info\"\ndone\n** DONE k8s cheatsheet: kube-shell https://github.com/cloudnativelabs/kube-shell\n   CLOSED: [2017-12-31 Sun 10:47]\n** DONE k8s configmap\n  CLOSED: [2018-01-08 Mon 10:32]\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/\n| Name                                                | Summary |\n|-----------------------------------------------------+---------|\n| kubectl get configmaps my-wordpress-mariadb -o yaml |         |\n** DONE [#A] k8s initContainers debug: kubectl logs <pod-name> -c <init-container-2>\n  CLOSED: [2018-01-05 Fri 16:29]\nhttps://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/\n** DONE Use GCE to setup k8s cluster deployment\n  CLOSED: [2018-01-07 Sun 07:26]\nhttps://github.com/kelseyhightower/kubernetes-the-hard-way\n\nhttps://cloud.google.com/\nsource /Users/mac/Downloads/google-cloud-sdk/completion.bash.inc\nsource /Users/mac/Downloads/google-cloud-sdk/path.bash.inc\n*** doc: gcloud setup\n#+BEGIN_EXAMPLE\n   [28] us-central1-f\n   [29] us-central1-c\n   [30] us-central1-b\n   [31] us-east1-d\n   [32] us-east1-c\n   [33] us-east1-b\n   [34] us-east4-c\n   [35] us-east4-a\n   [36] us-east4-b\n   [37] us-west1-a\n   [38] us-west1-c\n   [39] us-west1-b\n   [40] Do not set default zone\n  Please enter numeric choice or text value (must exactly match list\n  item):  36\n\n  Your project default Compute Engine zone has been set to [us-east4-b].\n  You can change it by running [gcloud config set compute/zone NAME].\n\n  Your project default Compute Engine region has been set to [us-east4].\n  You can change it by running [gcloud config set compute/region NAME].\n\n  Created a default .boto configuration file at [/Users/mac/.boto]. See this file and\n  [https://cloud.google.com/storage/docs/gsutil/commands/config] for more\n  information about configuring Google Cloud Storage.\n  Your Google Cloud SDK is configured and ready to use!\n\n  * Commands that require authentication will use denny.zhang001@gmail.com by default\n  * Commands will reference project `denny-k8s-test1` by default\n  * Compute Engine commands will use region `us-east4` by default\n  * Compute Engine commands will use zone `us-east4-b` by default\n\n  Run `gcloud help config` to learn how to change individual settings\n\n  This gcloud configuration is called [default]. You can create additional configurations if you work with multiple accounts and/or projects.\n  Run `gcloud topic configurations` to learn more.\n\n  Some things to try next:\n\n  * Run `gcloud --help` to see the Cloud Platform services you can interact with. And run `gcloud help COMMAND` to get help on any gcloud command.\n  * Run `gcloud topic -h` to learn about advanced features of the SDK like arg files and output formatting\n#+END_EXAMPLE\n*** TODO [#A] can't find gcloud                                   :IMPORTANT:\nsource /Users/mac/Downloads/google-cloud-sdk/completion.bash.inc\nsource /Users/mac/Downloads/google-cloud-sdk/path.bash.inc\n** DONE kubectl get pod\n   CLOSED: [2018-04-28 Sat 09:28]\n /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]\n\n#+BEGIN_EXAMPLE\n Your Kubernetes master has initialized successfully!\n\n To start using your cluster, you need to run the following as a regular user:\n\n   mkdir -p $HOME/.kube\n   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n   sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\n You should now deploy a pod network to the cluster.\n Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\n   https://kubernetes.io/docs/concepts/cluster-administration/addons/\n#+END_EXAMPLE\n** DONE pod CrashLoopBackOff: starting, then crashing, then starting again and crashing again.\n\n   CLOSED: [2018-01-05 Fri 15:47]\n https://www.krenger.ch/blog/crashloopbackoff-and-how-to-fix-it/\n\n https://kubernetes.io/docs/tasks/debug-application-cluster/debug-init-containers/\n\n| Status                     | Meaning                                                     |\n|----------------------------+-------------------------------------------------------------|\n| Init:N/M                   | The Pod has M Init Containers, and N have completed so far. |\n| Init:Error                 | An Init Container has failed to execute.                    |\n| Init:CrashLoopBackOff      | An Init Container has failed repeatedly.                    |\n| Pending                    | The Pod has not yet begun executing Init Containers.        |\n| PodInitializing or Running | The Pod has already finished executing Init Containers.     |\n** DONE k8s ImagePullBackOff: describe pod $pod_name; No space\n   CLOSED: [2018-06-25 Mon 14:28]\n** DONE default pods for single node installation\n   CLOSED: [2018-04-28 Sat 08:49]\n#+BEGIN_EXAMPLE\n root@mdm-k8s-node2:~# docker ps\n CONTAINER ID        IMAGE                                                                                                              COMMAND                  CREATED             STATUS              PORTS               NAMES\n 75d08dd2b171        k8s.gcr.io/kube-proxy-amd64@sha256:c7036a8796fd20c16cb3b1cef803a8e980598bff499084c29f3c759bdb429cd2                \"/usr/local/bin/ku...\"   16 hours ago        Up 16 hours                             k8s_kube-proxy_kube-proxy-jmcs9_kube-system_02a0eac8-4a75-11e8-afce-7aa5a78d07bd_0\n 0a769558ec4f        k8s.gcr.io/pause-amd64:3.1                                                                                         \"/pause\"                 16 hours ago        Up 16 hours                             k8s_POD_kube-proxy-jmcs9_kube-system_02a0eac8-4a75-11e8-afce-7aa5a78d07bd_0\n 2af1fbfd581a        k8s.gcr.io/kube-apiserver-amd64@sha256:1ba863c8e9b9edc6d1329ebf966e4aa308ca31b42a937b4430caf65aa11bdd12            \"kube-apiserver --...\"   16 hours ago        Up 16 hours                             k8s_kube-apiserver_kube-apiserver-mdm-k8s-node2_kube-system_fee65b809c1e455cf1672ebe7efc4bc7_0\n 63c214ac8d1b        k8s.gcr.io/kube-controller-manager-amd64@sha256:922ac89166ea228cdeff43e4c445a5dc4204972cc0e265a8762beec07b6238bf   \"kube-controller-m...\"   16 hours ago        Up 16 hours                             k8s_kube-controller-manager_kube-controller-manager-mdm-k8s-node2_kube-system_5ad7a10c5a8589117db7258c7d499a33_0\n 324ff1a8d357        k8s.gcr.io/kube-scheduler-amd64@sha256:5f50a339f66037f44223e2b4607a24888177da6203a7bc6c8554e0f09bd2b644            \"kube-scheduler --...\"   16 hours ago        Up 16 hours                             k8s_kube-scheduler_kube-scheduler-mdm-k8s-node2_kube-system_aa8d5cab3ea096315de0c2003230d4f9_0\n dce77d944669        k8s.gcr.io/etcd-amd64@sha256:68235934469f3bc58917bcf7018bf0d3b72129e6303b0bef28186d96b2259317                      \"etcd --listen-cli...\"   16 hours ago        Up 16 hours                             k8s_etcd_etcd-mdm-k8s-node2_kube-system_59f847fe34319ab1263f0b3ee03df8a3_0\n 2af621e52e11        k8s.gcr.io/pause-amd64:3.1                                                                                         \"/pause\"                 16 hours ago        Up 16 hours                             k8s_POD_kube-apiserver-mdm-k8s-node2_kube-system_fee65b809c1e455cf1672ebe7efc4bc7_0\n bdc64588b27d        k8s.gcr.io/pause-amd64:3.1                                                                                         \"/pause\"                 16 hours ago        Up 16 hours                             k8s_POD_kube-controller-manager-mdm-k8s-node2_kube-system_5ad7a10c5a8589117db7258c7d499a33_0\n 14dd26427abf        k8s.gcr.io/pause-amd64:3.1                                                                                         \"/pause\"                 16 hours ago        Up 16 hours                             k8s_POD_kube-scheduler-mdm-k8s-node2_kube-system_aa8d5cab3ea096315de0c2003230d4f9_0\n 17bfbb8af205        k8s.gcr.io/pause-amd64:3.1                                                                                         \"/pause\"                 16 hours ago        Up 16 hours                             k8s_POD_etcd-mdm-k8s-node2_kube-system_59f847fe34319ab1263f0b3ee03df8a3_0\n#+END_EXAMPLE\n** DONE One pod may have multiple containers\n   CLOSED: [2018-06-19 Tue 14:31]\n If a pod has more than 1 containers then you need to provide the name of the specific container.\n** DONE kubectl edit deployment parameters\n   CLOSED: [2018-04-15 Sun 21:49]\n https://github.com/kubernetes/helm/issues/2464\n kubectl -n kube-system patch deployment tiller-deploy -p '{\"spec\": {\"template\": {\"spec\": {\"automountServiceAccountToken\": true}}}}'\n\n kubectl --namespace=kube-system edit deployment/tiller-deploy and changed automountServiceAccountToken to true.\n** DONE [#A] k8s sidecar\n   CLOSED: [2018-07-15 Sun 22:50]\n https://k8s.io/examples/admin/logging/two-files-counter-pod-streaming-sidecar.yaml\n#+BEGIN_EXAMPLE\n apiVersion: v1\n kind: Pod\n metadata:\n   name: counter\n spec:\n   containers:\n   - name: count\n     image: busybox\n     args:\n     - /bin/sh\n     - -c\n     - >\n       i=0;\n       while true;\n       do\n         echo \"$i: $(date)\" >> /var/log/1.log;\n         echo \"$(date) INFO $i\" >> /var/log/2.log;\n         i=$((i+1));\n         sleep 1;\n       done\n     volumeMounts:\n     - name: varlog\n       mountPath: /var/log\n   - name: count-log-1\n     image: busybox\n     args: [/bin/sh, -c, 'tail -n+1 -f /var/log/1.log']\n     volumeMounts:\n     - name: varlog\n       mountPath: /var/log\n   - name: count-log-2\n     image: busybox\n     args: [/bin/sh, -c, 'tail -n+1 -f /var/log/2.log']\n     volumeMounts:\n     - name: varlog\n       mountPath: /var/log\n   volumes:\n   - name: varlog\n     emptyDir: {}\n#+END_EXAMPLE\n** TODO [#A] k8s debug why termination takes time\n** TODO Kubernetes availability\n*** TODO Building High-Availability Clusters: https://kubernetes.io/docs/admin/high-availability/\n** TODO [#A] Blog: Kubernetes Service Type: NodePort, ClusterIP and Loadbalancer?\n#+BEGIN_EXAMPLE\nhttps://kubernetes.io/docs/concepts/services-networking/service/\n\nPublishing services - service types\nFor some parts of your application (e.g. frontends) you may want to expose a Service onto an external (outside of your cluster) IP address.\n\nKubernetes ServiceTypes allow you to specify what kind of service you want. The default is ClusterIP.\n\nType values and their behaviors are:\n\nClusterIP: Exposes the service on a cluster-internal IP. Choosing this value makes the service only reachable from within the cluster. This is the default ServiceType.\nNodePort: Exposes the service on each Node's IP at a static port (the NodePort). A ClusterIP service, to which the NodePort service will route, is automatically created. You'll be able to contact the NodePort service, from outside the cluster, by requesting <NodeIP>:<NodePort>.\nLoadBalancer: Exposes the service externally using a cloud provider's load balancer. NodePort and ClusterIP services, to which the external load balancer will route, are automatically created.\nExternalName: Maps the service to the contents of the externalName field (e.g. foo.bar.example.com), by returning a CNAME record with its value. No proxying of any kind is set up. This requires version 1.7 or higher of kube-dns.\n#+END_EXAMPLE\n*** Type: Loadbalancer\n*** Type: ClusterIP\n*** Type: NodePort\nIf you set the type field to \"NodePort\", the Kubernetes master will allocate a port from a flag-configured range (default: 30000-32767)\n*** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n*** TODO Now if i access IP:NodePort, will it balance the load across multiple pods ?\nhttps://kubernetes.io/docs/tasks/access-application-cluster/load-balance-access-application-cluster/\n#+BEGIN_EXAMPLE\nVivek Yadav [8:34 AM]\nHey Denny, quick question -\n\n```\n---\n apiVersion: v1\n kind: Service\n metadata:\n   name: span\n   labels:\n     app: span\n spec:\n   type: NodePort\n   ports:\n     - port: 80\n       nodePort: 30080\n   selector:\n     app: spa\n\n---\n apiVersion: apps/v1beta2\n kind: Deployment\n metadata:\n   name: spa\n spec:\n   replicas: 2\n   selector:\n     matchLabels:\n       app: spa\n   template:\n     metadata:\n       labels:\n         app: spa\n     spec:\n       containers:\n         - name: py\n           image: viveky4d4v/local-simple-python:latest\n           ports:\n             - containerPort: 8080\n         - name: nginx\n           image: viveky4d4v/local-nginx-lb:latest\n           ports:\n             - containerPort: 80\n       imagePullSecrets:\n         - name: regsecret\n\n```\n\n\nNow if i access IP:NodePort, will it balance the load across multiple pods ?\n\n\nDenny Zhang (Github . Blogger) [8:35 AM]\nI don't think so\n#+END_EXAMPLE\n*** TODO How Does NodePort work behind the scene?\n*** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n*** TODO How Loadbalancer is implemented in code?\n*** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n*** TODO Does Loadbalancer works only for public cloud?\n*** TODO How I configure Ingress?\n** TODO [#A] NodePort VS clusterIP                                 :IMPORTANT:\nhttps://stackoverflow.com/questions/41509439/whats-the-difference-between-clusterip-nodeport-and-loadbalancer-service-types\nhttp://weezer.su/kubernetes-1.html\nhttps://docs.openshift.com/container-platform/3.3/dev_guide/getting_traffic_into_cluster.html\n\nclusterIP: You can only access this service while inside the cluster.\n** TODO [#A] k8s feature watch list\n*** I want to check pod initContainer logs, but I don't want to specify initContainer by name\n#+BEGIN_EXAMPLE\nmacs-MacBook-Pro:Scenario-401 mac$ kubectl logs my-jenkins-jenkins-89889ddb7-ct7jw -c 1\nError from server (BadRequest): container 1 is not valid for pod my-jenkins-jenkins-89889ddb7-ct7jw\nmacs-MacBook-Pro:Scenario-401 mac$ kubectl logs my-jenkins-jenkins-89889ddb7-ct7jw -c  copy-default-config\nError from server (BadRequest): container \"copy-default-config\" in pod \"my-jenkins-jenkins-89889ddb7-ct7jw\" is waiting to start: PodInitializing\nmacs-MacBook-Pro:Scenario-401 mac$ kubectl logs my-jenkins-jenkins-89889ddb7-ct7jw -c  copy-default-config\nError from server (BadRequest): container \"copy-default-config\" in pod \"my-jenkins-jenkins-89889ddb7-ct7jw\" is waiting to start: PodInitializing\n#+END_EXAMPLE\n*** Support using environment variables inside deployment yaml file\nhttps://github.com/kubernetes/kubernetes/issues/52787\n** TODO pod error: CreateContainerConfigError\nhttps://github.com/kubernetes/minikube/issues/2256\n#+BEGIN_EXAMPLE\nbash-3.2$ kubectl get pod my-wordpress-wordpress-df987548d-btvf5\nNAME                                     READY     STATUS                       RESTARTS   AGE\nmy-wordpress-wordpress-df987548d-btvf5   0/1       CreateContainerConfigError   0          2m\nbash-3.2$\n#+END_EXAMPLE\n\n#+BEGIN_EXAMPLE\nbash-3.2$ kubectl describe pod/my-wordpress-wordpress-df987548d-btvf5\nName:           my-wordpress-wordpress-df987548d-btvf5\nNamespace:      default\nNode:           minikube/192.168.99.102\nStart Time:     Fri, 05 Jan 2018 16:41:27 -0600\nLabels:         app=my-wordpress-wordpress\n                pod-template-hash=895431048\nAnnotations:    kubernetes.io/created-by={\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"ReplicaSet\",\"namespace\":\"default\",\"name\":\"my-wordpress-wordpress-df987548d\",\"uid\":\"910e01e0-f269-11e7-b6d8...\nStatus:         Pending\nIP:             172.17.0.6\nCreated By:     ReplicaSet/my-wordpress-wordpress-df987548d\nControlled By:  ReplicaSet/my-wordpress-wordpress-df987548d\nContainers:\n  my-wordpress-wordpress:\n    Container ID:\n    Image:          bitnami/wordpress:4.9.1-r1\n    Image ID:\n    Ports:          80/TCP, 443/TCP\n    State:          Waiting\n      Reason:       CreateContainerConfigError\n    Ready:          False\n    Restart Count:  0\n    Requests:\n      cpu:      300m\n      memory:   512Mi\n    Liveness:   http-get http://:http/wp-login.php delay=120s timeout=5s period=10s #success=1 #failure=6\n    Readiness:  http-get http://:http/wp-login.php delay=30s timeout=3s period=5s #success=1 #failure=3\n    Environment:\n      ALLOW_EMPTY_PASSWORD:         yes\n      MARIADB_ROOT_PASSWORD:        <set to the key 'mariadb-root-password' in secret 'my-wordpress-mariadb'>  Optional: false\n      MARIADB_HOST:                 my-wordpress-mariadb\n      MARIADB_PORT_NUMBER:          3306\n      WORDPRESS_DATABASE_NAME:      bitnami_wordpress\n      WORDPRESS_DATABASE_USER:      bn_wordpress\n      WORDPRESS_DATABASE_PASSWORD:  <set to the key 'mariadb-password' in secret 'my-wordpress-mariadb'>  Optional: false\n      WORDPRESS_USERNAME:           admin\n      WORDPRESS_PASSWORD:           <set to the key 'wordpress-password' in secret 'my-wordpress-wordpress'>  Optional: false\n      WORDPRESS_EMAIL:              contact@dennyzhang.com\n      WORDPRESS_FIRST_NAME:         FirstName\n      WORDPRESS_LAST_NAME:          LastName\n      WORDPRESS_BLOG_NAME:          My DevOps Blog!\n      SMTP_HOST:\n      SMTP_PORT:\n      SMTP_USER:\n      SMTP_PASSWORD:                <set to the key 'smtp-password' in secret 'my-wordpress-wordpress'>  Optional: false\n      SMTP_USERNAME:\n      SMTP_PROTOCOL:\n    Mounts:\n      /bitnami/apache from wordpress-data (rw)\n      /bitnami/php from wordpress-data (rw)\n      /bitnami/wordpress from wordpress-data (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-tc8kd (ro)\nConditions:\n  Type           Status\n  Initialized    True\n  Ready          False\n  PodScheduled   True\nVolumes:\n  wordpress-data:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  my-wordpress-wordpress\n    ReadOnly:   false\n  default-token-tc8kd:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-tc8kd\n    Optional:    false\nQoS Class:       Burstable\nNode-Selectors:  <none>\nTolerations:     <none>\nEvents:\n  Type     Reason                 Age              From               Message\n  ----     ------                 ----             ----               -------\n  Normal   Scheduled              1m               default-scheduler  Successfully assigned my-wordpress-wordpress-df987548d-btvf5 to minikube\n  Normal   SuccessfulMountVolume  1m               kubelet, minikube  MountVolume.SetUp succeeded for volume \"pvc-910644d3-f269-11e7-b6d8-08002782d6cd\"\n  Normal   SuccessfulMountVolume  1m               kubelet, minikube  MountVolume.SetUp succeeded for volume \"default-token-tc8kd\"\n  Normal   Pulled                 1s (x7 over 1m)  kubelet, minikube  Container image \"bitnami/wordpress:4.9.1-r1\" already present on machine\n  Warning  Failed                 1s (x7 over 1m)  kubelet, minikube  Error: lstat /tmp/hostpath-provisioner/pvc-910644d3-f269-11e7-b6d8-08002782d6cd: no such file or directory\n  Warning  FailedSync             1s (x7 over 1m)  kubelet, minikube  Error syncing pod\nbash-3.2$\n#+END_EXAMPLE\n** TODO [#A] Certified Kubernetes Administrator (CKA)              :IMPORTANT:\nhttps://www.cncf.io/certification/expert/\n\nhttps://github.com/cncf/curriculum/blob/master/certified_kubernetes_administrator_exam_v1.8.0.pdf\n\nIt is an online, proctored, performance-based test that requires solving multiple issues from a command line.\n\nCandidates have 3 hours to complete the tasks.\n** HALF Difference in between selectors and labels\n** TODO [#A] kubernetes mount a file to pod                        :IMPORTANT:\nhttps://stackoverflow.com/questions/33415913/whats-the-best-way-to-share-mount-one-file-into-a-pod\nhttps://www.linkedin.com/feed/update/urn:li:activity:6355445509146107904/\n** TODO K8S label & Selector\nhttps://github.com/dennyzhang/dennytest/tree/master/cheatsheet-kubernetes-A4][challenges-leetcode-interesting]]\n* [#A] k8s metric server                                 :noexport:IMPORTANT:\nMetrics Server is a cluster-wide aggregator of resource usage data.\n\nMetrics Server registered in the main API server through Kubernetes aggregator.\n\nhttps://github.com/kubernetes-incubator/metrics-server\nhttps://github.com/kubernetes-incubator/metrics-server/tree/master/deploy/1.8%2B\n\nhttps://kubernetes.io/docs/tasks/debug-application-cluster/core-metrics-pipeline/\n| Name           | Summary                                                           |\n|----------------+-------------------------------------------------------------------|\n| Core metrics   | node/container level metrics; CPU, memory, disk and network, etc. |\n| Custom metrics | refers to application metrics, e.g. HTTP request rate.            |\n\nToday (Kubernetes 1.7), there are several sources of metrics within a Kubernetes cluster\n| Name           | Summary                                                             |\n|----------------+---------------------------------------------------------------------|\n| Heapster       | k8s add-on                                                          |\n| Cadvisor       | a standalone container/node metrics collection and monitoring tool. |\n| Kubernetes API | does not track metrics. But can get real time metrics               |\n** metric server\nResource Metrics API is an effort to provide a first-class Kubernetes API (stable, versioned, discoverable, available through apiserver and with client support) that serves resource usage metrics for pods and nodes.\n\n- metric server is sort of a stripped-down version of Heapster\n- The metrics-server will collect \"Core\" metrics from cAdvisor APIs (currently embedded in the kubelet) and store them in memory as opposed to in etcd.\n- The metrics-server will provide a supported API for feeding schedulers and horizontal pod auto-scalers\n- All other Kubernetes components will supply their own metrics in a Prometheus format\n** Cadvisor\nCadvisor monitors node and container core metrics in addition to container events.\nIt natively provides a Prometheus metrics endpoint\nThe Kubernetes kublet has an embedded Cadvisor that only exposes the metrics, not the events.\n** heapster\nHeapster is an add on to Kubernetes that collects and forwards both node, namespace, pod and container level metrics to one or more \"sinks\" (e.g. InfluxDB).\n\nIt also provides REST endpoints to gather those metrics. The metrics are constrained to CPU, filesystem, memory, network and uptime.\n\nHeapster queries the kubelet for its data.\n\nToday, heapster is the source of the time-series data for the Kubernetes Dashboard.\n** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n** TODO How to query metric server\n** TODO Key scenarios of metric server\nThe metrics-server will provide a much needed official API for the internal components of Kubernetes to make decisions about the utilization and performance of the cluster.\n\n- HPA(Horizontal Pod Autoscaler) need input to do good auto-scaling\n** TODO There are plans for an \"Infrastore\", a Kubernetes component that keeps historical data and events\n** #  --8<-------------------------- separator ------------------------>8-- :noexport:\n** TODO why from heapster to k8s metric server?\n** TODO kube-aggregator\n** TODO what is prometheus format?\n#+BEGIN_EXAMPLE\nDenny Zhang [12:34 AM]\nAn easy introduction about k8s metric server. (It will replace heapster)\n\nhttps://blog.freshtracks.io/what-is-the-the-new-kubernetes-metrics-server-849c16aa01f4\n\n> All other Kubernetes components will supply their own metrics in a Prometheus format\n\nIn logging domain, we can say `syslog` is the standard format\n\nIn metric domain, maybe we can choose `prometheus` as the standard format.\n#+END_EXAMPLE\n** Metrics Use Cases\nhttps://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/resource-metrics-api.md\n\nhttps://docs.giantswarm.io/guides/kubernetes-heapster/\n\n#+BEGIN_EXAMPLE\nHorizontal Pod Autoscaler: It scales pods automatically based on CPU or custom metrics (not explained here). More information here.\nKubectl top: The command top of our beloved Kubernetes CLI display metrics directly in the terminal.\nKubernetes dashboard: See Pod and Nodes metrics integrated into the main Kubernetes UI dashboard. More info here\nScheduler: In the future Core Metrics will be considered in order to schedule best-effort Pods.\n#+END_EXAMPLE\n** useful link\nhttps://blog.freshtracks.io/what-is-the-the-new-kubernetes-metrics-server-849c16aa01f4\nhttps://blog.outlyer.com/monitoring-kubernetes-with-heapster-and-prometheus\nhttps://www.outcoldman.com/en/archive/2017/07/09/kubernetes-monitoring-resources/\n* k8s loadbalancer                                                 :noexport:\n** DONE k8s service: loadbalancer\n   CLOSED: [2018-06-19 Tue 13:51]\n#+BEGIN_EXAMPLE\n cat > service.yml <<EOF\n apiVersion: v1\n kind: Service\n metadata:\n   name: lb\n   namespace: logging\n spec:\n   selector:\n     app: kibana\n   ports:\n   - protocol: TCP\n     port: 5601\n   type: LoadBalancer\n EOF\n#+END_EXAMPLE\n* k8s DaemonSet                                                    :noexport:\n** DONE k8s daemonsets: ensures that all (or some) Nodes run a copy of a Pod.\n   CLOSED: [2018-06-19 Tue 13:28]\n https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\n\n As nodes are added to the cluster, Pods are added to them. As nodes are removed from the cluster, those Pods are garbage collected. Deleting a DaemonSet will clean up the Pods it created.\n\n Some typical uses of a DaemonSet are:\n\n - running a cluster storage daemon, such as glusterd, ceph, on each node.\n - running a logs collection daemon on every node, such as fluentd or logstash.\n   - running a node monitoring daemon on every node, such as Prometheus Node Exporter, collectd, Datadog agent, New Relic agent, or Ganglia gmond.\n* [#A] etcd                                                        :noexport:\nhttps://coreos.com/etcd/docs/latest/dev-guide/interacting_v3.html\nhttps://coreos.com/etcd/docs/latest/v2/README.html\n* [#B] k8s addons                                                  :noexport:\nhttps://kubernetes.io/docs/concepts/cluster-administration/addons/\n** DONE k8s install add-on: dashboard\n  CLOSED: [2018-01-03 Wed 12:19]\n- Install, then use kubectl-proxy to start\n- Create user and binding, then use token to login\n\n#+BEGIN_EXAMPLE\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml\nnohup kubectl proxy --port=8001 --address=0.0.0.0 &\n\ncurl http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/\n\n#+END_EXAMPLE\n\n#+BEGIN_EXAMPLE\n# https://github.com/kubernetes/dashboard/wiki/Creating-sample-user\ncat > user.yaml <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: admin-user\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: admin-user\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: admin-user\n  namespace: kube-system\nEOF\n#+END_EXAMPLE\n\nkubectl apply -f user.yaml\nkubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk '{print $1}')\n\nhttps://github.com/kubernetes/dashboard#kubernetes-dashboard\nhttps://blog.frognew.com/2017/09/kubeadm-install-kubernetes-1.8.html#8dashboard%E6%8F%92%E4%BB%B6%E9%83%A8%E7%BD%B2\n*** DONE kubectl proxy listen on all network nics\n  CLOSED: [2018-01-03 Wed 12:12]\nhttps://github.com/kubernetes/kubectl/issues/142\nkubectl proxy --port=8001 --address=0.0.0.0\n* [#A] k8s volumes                                                 :noexport:\n  CLOSED: [2017-12-01 Fri 22:45]\nhttps://kubernetes.io/docs/concepts/storage/volumes\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes/#claims-as-volumes\n\nhttps://blog.couchbase.com/stateful-containers-kubernetes-amazon-ebs/\nhttps://stackoverflow.com/questions/37555281/create-kubernetes-pod-with-volume-using-kubectl-run\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/\n\n▪Directory accessible to the containers in a pod\n▪Volume outlives any containers in a pod\n▪Common types\n   hostPath\n   nfs\n   awsElasticBlockStore\n   gcePersistentDisk\n\n#+BEGIN_EXAMPLE\nCreating and using a persistent volume is a three step process:\n1. Provision: Administrator provision a networked storage in the cluster, such as AWS ElasticBlockStore volumes. This is called as PersistentVolume.\n2. Request storage: User requests storage for pods by using claims. Claims can specify levels of resources (CPU and memory), specific sizes and access modes (e.g. can be mounted once read/write or many times write only).\nThis is called as PersistentVolumeClaim.\n1. Use claim: Claims are mounted as volumes and used in pods for storage.\n#+END_EXAMPLE\n** DONE persistence.accessMode ReadWriteOnce or ReadOnly: https://github.com/kubernetes/charts/tree/master/cheatsheet-kubernetes-A4][challenges-leetcode-interesting]]\n  CLOSED: [2018-01-02 Tue 16:52]\nThe access modes are:\n\nReadWriteOnce - the volume can be mounted as read-write by a single node\nReadOnlyMany - the volume can be mounted read-only by many nodes\nReadWriteMany - the volume can be mounted as read-write by many nodes\n* [#B] k8s security: secrets, authentication & authorization       :noexport:\n** what's service account: In contrast, service accounts are users managed by the Kubernetes API.\nhttps://kubernetes.io/docs/admin/authentication/\nhttps://github.com/kubernetes/kubernetes/blob/master/examples/elasticsearch/service-account.yaml\nhttps://kubernetes.io/docs/admin/authorization/\n** serviceaccount, clusterrolebinding\nhttps://blog.frognew.com/2017/12/its-time-to-use-helm.html\n#+BEGIN_EXAMPLE\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tiller\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: tiller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: tiller\n    namespace: kube-system\n#+END_EXAMPLE\n** k8s secrets: intended to hold sensitive information, such as passwords, OAuth tokens, and ssh keys.\nhttps://github.com/arun-gupta/vault-kubernetes/blob/master/secrets.yaml\nhttp://kubernetesbyexample.com/secrets/\n\n- Secrets are namespaced objects, that is, exist in the context of a namespace\n- You can access them via a volume or an environment variable from a container running in a pod\n- The secret data on nodes is stored in tmpfs volumes\n\nkubectl create secret generic mysecret --from-literal=mysql_root_password=my-secret-pw\nkubectl get secret mysecret\n\n#+BEGIN_EXAMPLE\napiVersion: v1\nkind: Pod\nmetadata:\n  name: secret-env-pod\nspec:\n  containers:\n  - name: mycontainer\n    image: redis\n    env:\n      - name: SECRET_USERNAME\n        valueFrom:\n          secretKeyRef:\n            name: mysecret\n            key: username\n      - name: SECRET_PASSWORD\n        valueFrom:\n          secretKeyRef:\n            name: mysecret\n            key: password\n  restartPolicy: Never\n#+END_EXAMPLE\n* HPA: Horizontal Pod Autoscaler                                   :noexport:\n* Uncertainty & Uncomfortable things with K8S                      :noexport:\n** Destroy namespace takes more than 15 minutes, with nowhere to check\nTesting in minikube\n** Pod stucks in containercreating for a long time\n* HALF kubectl apply to a list of folder: kubectl apply -R -f namespace-drain-manifests/manifests :noexport:\n* GKE user access                                                  :noexport:\n#+BEGIN_EXAMPLE\nIf y'all run into the following error: `is forbidden: attempt to grant extra privileges:` when trying to run `kubectl apply -R -f ~/workspace/namespace-drain/manifests/` against a GKE cluster, then run the following command.\n\n```kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user $(gcloud config get-value account)```\n#+END_EXAMPLE\n* Blog: How Enterprise Do XXX in Container world?                  :noexport:\n* TODO [#A] Blog: interview candidates for k8s experience          :noexport:\n** Explain concepts\n*** What's k8s context. Why we need it?\n*** What's initContainer? Why we need it?\n*** Network policy\n** Comparision\n*** configmap vs secrets\n*** labels vs annotations\nWhat are k8s Annotations? What differences it is compared with labels:\n\n- Like labels, annotations are key/value pairs. Where labels have length limits, annotations can be quite large.\n-  you can't query or select objects based on annotations.\n- Are used for non-identifying information. Stuff not used internally by k8s.\n\nhttps://codeengineered.com/blog/2017/kubernetes-labels-annotations/\nhttps://vsupalov.com/kubernetes-labels-annotations-difference/ (edited)\n*** clusterip, service, loadbalancer\n*** ClusterRole vs Role\n*** serviceaccount vs useraccount\n** Scenarios/Experience\n*** tell me about k8s security model\n*** tell me about k8s scheduling model\n*** tell me about k8s HA model\n*** tell me about k8s trouble shooting experience\n** Your Wish List\n*** layer of yaml\n*** ABBA on volumes\n*** apply one configmap to all namespace\n* k8s workflow: every 3 months has one new release                 :noexport:\nhttps://github.com/kubernetes/kubeadm/blob/master/docs/release-cycle.md\n* Blog: Kubernetes Limitation List                                 :noexport:\n- Starting with Kubernetes 1.6 we support 5000 nodes clusters with 30 pods per node. ([[https://github.com/kubernetes/community/blob/master/contributors/design-proposals/instrumentation/metrics-server.md#scalability-limitations][link]])\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* DONE Why we need Static Pods                                     :noexport:\n  CLOSED: [2019-01-04 Fri 15:04]\nhttps://kubernetes.io/docs/tasks/administer-cluster/static-pod/\nDenny Zhang [2:26 PM]\nFan, ever heard of `Static Pods` in k8s?\n\nIf yes, could you give me two use scenarios why I would use it.\n\nFan Zhang [3:00 PM]\n我听说过\n其实就是kubelet直接管理的pod\n\nDenny Zhang [3:01 PM]\n是的,文档是这么说的.\n\nFan Zhang [3:01 PM]\n我觉得这个是DeamonSet的补充\n\nDenny Zhang [3:01 PM]\n我在尝试理解这个背后的应用场景\n\nFan Zhang [3:02 PM]\n因为有时候在node上需要有一些particular的service,但又不希望被kubernetes的schecular 管理\n\nDenny Zhang [3:02 PM]\n将OS的进程容器化\n但这些只是OS级别,而不是k8s系统或app应用级别的进程\n可以这样理解吗？\n\nFan Zhang [3:03 PM]\n否则 drain之后 就没有了\n可以这样理解\n\nDenny Zhang [3:04 PM]\n所以drain node不会把static pod删掉？\n* TODO Why need kubernetes/apiserver: https://github.com/kubernetes/apiserver :noexport:\nLibrary for writing a Kubernetes-style API server.\n\nhttps://github.com/kubernetes/kube-aggregator\n* TODO [#A] Questions                                              :noexport:\n** pod type\nhttps://kubernetes.io/docs/tasks/debug-application-cluster/debug-application/#my-service-is-missing-endpoints\n#+BEGIN_EXAMPLE\n...\nspec:\n  - selector:\n     name: nginx\n     type: frontend\n#+END_EXAMPLE\n\nkubectl get pods --selector=name=nginx,type=frontend\n** Containers inside a Pod can communicate with one another using localhost.\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-overview/\n\nNetworking\nEach Pod is assigned a unique IP address. Every container in a Pod shares the network namespace, including the IP address and network ports. Containers inside a Pod can communicate with one another using localhost. When containers in a Pod communicate with entities outside the Pod, they must coordinate how they use the shared network resources (such as ports).\n** How to restart a container inside a Pod?\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-overview/\n\nRestarting a container in a Pod should not be confused with restarting the Pod. The Pod itself does not run, but is an environment the containers run in and persists until it is deleted.\n** explain k8s components: apiserver, scheduler, controller-manager, kube-proxy\n** get logs of failed container\nhttps://kubernetes.io/docs/tasks/debug-application-cluster/debug-application/#my-pod-is-crashing-or-otherwise-unhealthy\n#+BEGIN_EXAMPLE\nIf your container has previously crashed, you can access the previous container's crash log with:\n\n$ kubectl logs --previous ${POD_NAME} ${CONTAINER_NAME}\n#+END_EXAMPLE\n** Why k8s dashboard get deprecated?\nhttps://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/\n* TODO k8s architecture                                            :noexport:\nhttps://www.youtube.com/watch?v=_WfJz5VS_cU&list=PLj6h78yzYM2NGwRwkBPxigKio2r0XHPl9\n* TODO k8s scenario problems                                       :noexport:\n** TODO export k8s dashboard: kube proxy VS ingress\n** TODO how to back and restore etcd\nhttps://kubernetes-incubator.github.io/kube-aws/advanced-topics/etcd-backup-and-restore.html\n* TODO Apply yamls file recursively                                :noexport:\n#+BEGIN_SRC sh\n# create\ntime ls -1 */*.yml | grep -v namespace | xargs -I{} kubectl apply -f {}\n\n# delete\ntime ls -1r */*.yml | grep -v namespace | xargs -I{} kubectl delete -f {}\n#+END_SRC\n* TODO devstats: https://k8s.devstats.cncf.io/d/12/dashboards?refresh=15m&orgId=1 :noexport:\n* TODO create a ingress service for clusterip service              :noexport:\n* TODO kubectl -vvv                                                :noexport:\n* TODO kubectl get application --all-namespaces                    :noexport:\n* TODO kubectl delete namespace in GKE is extremely slow           :noexport:\n* TODO try more with ReplicaSet                                    :noexport:\n* TODO try PodDisruptionBudget: https://hackernoon.com/top-10-kubernetes-tips-and-tricks-27528c2d0222 :noexport:\n* TODO [#A] k8s services                                           :noexport:\nhttps://medium.com/google-cloud/kubernetes-nodeport-vs-loadbalancer-vs-ingress-when-should-i-use-what-922f010849e0\n* [#A] ClusterIP                                                   :noexport:\n** TODO kubernetes clusterip\n** TODO Is k8s ClusterIP SPOF?\n https://mp.weixin.qq.com/s?__biz=MzIzNjUxMzk2NQ==&mid=2247486025&idx=1&sn=1f95917918a3217bb92b97113c81b6c8&chksm=e8d7f58bdfa07c9dedbfbe4f39687ea5d467ec371ecb2dea5dd13101a46d3bb754d6738e481f&scene=27#wechat_redirect\n** TODO Use ExternalName to avoid ClusterIP SPOF\n* TODO k8s cpu 88m?                                                :noexport:\n#+BEGIN_EXAMPLE\n    Limits:\n      cpu:\t48m\n      memory:\t104Mi\n    Requests:\n      cpu:\t\t48m\n      memory:\t\t104Mi\n\n#+END_EXAMPLE\n* TODO autoscaling pod: try auto scaling                           :noexport:\n* TODO k8s volume: readwriteonce, readwritemany?                   :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO grant more privileges to a given serviceaccount             :noexport:\nkubectl get serviceaccount --all-namespaces\n\nprometheus-1-prometheusserviceaccount-e1fd\n\nsystem:kubelet-api-admin\n* TODO Question: PodDisruptionBudget: https://docs.pivotal.io/runtimes/pks/1-2/troubleshoot-issues.html#upgrade-drain-hangs :noexport:\nIf Kubernetes is unable to unschedule a pod, then the drain hangs indefinitely. \n\nOne reason why Kubernetes may be unable to unschedule the node is if\nthe PodDisruptionBudget object has been configured in a way that\nallows 0 disruptions and only a single instance of the pod has been\nscheduled.\n* TODO k8s events                                                  :noexport:\nhttps://solinea.com/blog/tapping-kubernetes-events\n* TODO kubectl from worker vm, I don't seem to need a kubeconfig   :noexport:\n* TODO kubectl apply -f -                                          :noexport:\n* TODO How does \"kubectl delete - f -\" works?                      :noexport:\n* TODO devstats: https://k8s.devstats.cncf.io/d/12/dashboards?refresh=15m&orgId=1 :noexport:\n* TODO Is it possible to assign a DNS address to Kubernetes service :noexport:\n* TODO k8s template templateinstance                               :noexport:\n* TODO [#A] k8s yaml create a loadbalancer                         :noexport:\n* TODO github improvememnt: update k8s cheatsheet: https://blog.billyc.io/notes/kubectl-notes/ :noexport:\nhttps://kubernetes.io/docs/reference/kubectl/cheatsheet/\n* [#A] Google Kubernetes                                 :noexport:IMPORTANT:\nNo.2 Kubernetes\n\nKubernetes是一个编排（orchestration）工具,类似运行于Apache Mesos之上的Marathon,但是它是专门为Docker容器而创建的.\n\nKubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts, providing container-centric infrastructure\n\nKubernetes来自Google,除了能在他们自己的Google Container Engine上工作之外,还支持VMware vSphere, Mesos, or Mesosphere DCOS,以及很多公有云,包括Amazon Web Services等.\n\nKubernetes 具备完善的集群管理能力,包括多层次的安全防护和准入机制`多租户应用支撑能力`透明的服务注册和服务发现机制`内建负载均衡器`故障发现和自我修复能力`服务滚动升级和在线扩容`可扩展的资源自动调度机制`多粒度的资源配额管理能力.\n\nKubernetes 还提供完善的管理工具,涵盖开发`部署测试`运维监控等各个环节.\n\n每个API对象都有3大类属性:元数据metadata`规范spec和状态status\n\n- Concepts: Pod, Service, Labels和单Pod单IP\n** Installing and Setting Up kubectl\nhttps://kubernetes.io/docs/tasks/tools/install-kubectl/\n\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\n** kubectl --help\nkubectl controls the Kubernetes cluster manager.\n\nFind more information at https://github.com/kubernetes/kubernetes.\n\nBasic Commands (Beginner):\n  create         Create a resource by filename or stdin\n  expose         Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service\n  run            Run a particular image on the cluster\n  set            Set specific features on objects\n\nBasic Commands (Intermediate):\n  get            Display one or many resources\n  explain        Documentation of resources\n  edit           Edit a resource on the server\n  delete         Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\nDeploy Commands:\n  rollout        Manage a deployment rollout\n  rolling-update Perform a rolling update of the given ReplicationController\n  scale          Set a new size for a Deployment, ReplicaSet, Replication Controller, or Job\n  autoscale      Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\nCluster Management Commands:\n  certificate    Modify certificate resources.\n  cluster-info   Display cluster info\n  top            Display Resource (CPU/Memory/Storage) usage.\n  cordon         Mark node as unschedulable\n  uncordon       Mark node as schedulable\n  drain          Drain node in preparation for maintenance\n  taint          Update the taints on one or more nodes\n\nTroubleshooting and Debugging Commands:\n  describe       Show details of a specific resource or group of resources\n  logs           Print the logs for a container in a pod\n  attach         Attach to a running container\n  exec           Execute a command in a container\n  port-forward   Forward one or more local ports to a pod\n  proxy          Run a proxy to the Kubernetes API server\n  cp             Copy files and directories to and from containers.\n  auth           Inspect authorization\nAdvanced Commands:\n  apply          Apply a configuration to a resource by filename or stdin\n  patch          Update field(s) of a resource using strategic merge patch\n  replace        Replace a resource by filename or stdin\n  convert        Convert config files between different API versions\n\nSettings Commands:\n  label          Update the labels on a resource\n  annotate       Update the annotations on a resource\n  completion     Output shell completion code for the specified shell (bash or zsh)\n\nOther Commands:\n  api-versions   Print the supported API versions on the server, in the form of \"group/version\"\n  config         Modify kubeconfig files\n  help           Help about any command\n  version        Print the client and server version information\n\nUse \"kubectl <command> --help\" for more information about a given command.\nUse \"kubectl options\" for a list of global command-line options (applies to all commands).\n** kubernetes: The connection to the server localhost:8080 was refused - did you specify the right host or port?\nhttps://github.com/kubernetes/kubernetes/issues/23092\n** Layers\n- Nucleus: API And Execution\n- Application layer: deployment and running\n- Governance layer: automation and policy enforcement\n- Interface layer: client libraries and tools\n- Ecosystem\n** healthcheck: LivenessProbe, ReadinessProbe\n** 核心组件\nKubernetes主要由以下几个核心组件组成:\n- etcd保存了整个集群的状态;\n- apiserver提供了资源操作的唯一入口,并提供认证`授权`访问控制`API注册和发现等机制;\n- controller manager负责维护集群的状态,比如故障检测`自动扩展`滚动更新等;\n- scheduler负责资源的调度,按照预定的调度策略将Pod调度到相应的机器上;\n- kubelet负责维护容器的生命周期,同时也负责Volume（CVI）和网络（CNI）的管理;\n- Container runtime负责镜像管理以及Pod和容器的真正运行（CRI）;\n- kube-proxy负责为Service提供cluster内部的服务发现和负载均衡\n** helloworld\nhttps://kubernetes.io/docs/tutorials/stateless-application/hello-minikube/\n** useful link\nhttps://kubernetes.io\nhttps://www.reddit.com/r/devops/comments/51ra9q/moving_from_docker_to_rkt/\nhttp://blog.dataman-inc.com/67/\nhttp://jpadilla.com/post/161144157937/update-kubernetes-deployment-after-pushing-image\nhttps://spacelift.io/blog/kubernetes-cheat-sheet\n\nhttp://www.oschina.net/news/70140/infoworlds-2016-technology-of-the-year-award-winners?p=3#comments\n** DONE Principle: API的操作复杂度不能超过O(N)\n   CLOSED: [2017-06-10 Sat 15:24]\nhttps://kubernetes.feisky.xyz/architecture/concepts.html\nAPI操作复杂度与对象数量成正比.这一条主要是从系统性能角度考虑,要保证整个系统随着系统规模的扩大,性能不会迅速变慢到无法使用,那么最低的限定就是API的操作复杂度不能超过O(N),N是对象的数量,否则系统就不具备水平伸缩性了.\n** Principle: API对象状态不能依赖于网络连接状态\nhttps://kubernetes.feisky.xyz/architecture/concepts.html\n** #  --8<-------------------------- separator ------------------------>8--\n** TODO [#A] fail to start minikube: \"VBoxManage not found. Make sure VirtualBox is installed and VBoxManage is in the path\".\nroot@totvsjenkins:/tmp# minikube start\nStarting local Kubernetes v1.6.4 cluster...\nStarting VM...\nE0610 20:14:57.518198   27907 start.go:127] Error starting host: Error creating host: Error with pre-create check: \"VBoxManage not found. Make sure VirtualBox is installed and VBoxManage is in the path\".\n\n Retrying.\nE0610 20:14:57.519201   27907 start.go:133] Error starting host:  Error creating host: Error with pre-create check: \"VBoxManage not found. Make sure VirtualBox is installed and VBoxManage is in the path\"\n** TODO how kubernetes use etcd\n** TODO how healthcheck is implemented\n** TODO What about alerting and reporting\n** TODO what's fluentd\n** #  --8<-------------------------- separator ------------------------>8--\n** TODO [#A] k8s support rolling deployment                       :IMPORTANT:\nhttps://www.youtube.com/watch?v=7TOWLerX0Ps\nKubernetes: zero downtime update at 1 million requests per second\nhttps://www.youtube.com/watch?v=9C6YeyyUUmI\nKubernetes: zero downtime update at 10 million QPS\n** TODO [#A] How to scale Pods with volumes configured            :IMPORTANT:\n** What is Kubernetes\nhttps://www.youtube.com/watch?v=R-3dfURb2hA\nWhat is Kubernetes\n\nDeployment, Scaling, Monitoring\n** DONE Kubernetes hellworld\n  CLOSED: [2017-07-11 Tue 08:42]\nhttps://kubernetes.io/docs/tutorials/stateless-application/hello-minikube/#create-a-minikube-cluster\n\n# build image\ndocker build -t hello-node:v1 .\n\n# create deployment\nkubectl run hello-node --image=hello-node:v1 --port=8080\n\n# View the Deployment\nkubectl get deployments\n\n# Create service\nkubectl expose deployment hello-node --type=LoadBalancer\n** TODO [#A] Install minikube in headless Ubuntu server           :IMPORTANT:\n| Name            | Summary |\n|-----------------+---------|\n| minikube status |         |\n** DONE [#A] Ubuntu install kubernetes for all-in-one POC: minikube\n  CLOSED: [2017-07-11 Tue 08:43]\nhttps://blog.jetstack.io/blog/k8s-getting-started-part2/\nhttps://github.com/kubernetes/minikube\nhttps://stackoverflow.com/questions/38528762/kubernetes-on-ubuntu-16-04\nhttps://hxquangnhat.com/2016/12/21/tutorial-deploy-a-kubernetes-cluster-on-ubuntu-16-04/\n*** TODO minikube fail to start\n#+BEGIN_EXAMPLE\nroot@totvsjenkins:/home/denny/minikube# ./minikube start --vm-driver=none --use-vendored-driver\nStarting local Kubernetes v1.6.4 cluster...\nStarting VM...\nMoving files into cluster...\n\nSetting up certs...\nStarting cluster components...\nConnecting to cluster...\nSetting up kubeconfig...\nKubectl is now configured to use the cluster.\n===================\nWARNING: IT IS RECOMMENDED NOT TO RUN THE NONE DRIVER ON PERSONAL WORKSTATIONS\n        The 'none' driver will run an insecure kubernetes apiserver as root that may leave the host vulnerable to CSRF attacks\n#+END_EXAMPLE\n*** useful link\nhttps://www.youtube.com/watch?v=PH-2FfFD2PU\nKubernetes in 5 mins\nhttps://www.youtube.com/watch?v=DC7NECq3Ghs\nSetting up and using a single node Kubernetes cluster.\nhttps://www.youtube.com/watch?v=BDrcUjOczsE\nKubernetes - Local Testing\n\nhttps://www.youtube.com/watch?v=R-3dfURb2hA\nThe Illustrated Children's Guide to Kubernetes\n\n* TODO [#A] Run a task on every node in a cluster                  :noexport:\n* TODO kubectl get all won't get psp                               :noexport:\n#+BEGIN_EXAMPLE\nroot@009069ee-95d5-49a2-6b82-67aff8eb6737:/tmp/build/4ecf0f02# kubectl get all --all-namespaces\nNAMESPACE                   NAME                                        READY     STATUS    RESTARTS   AGE\nkube-system                 pod/heapster-6d5f964dbd-2xxcm               1/1       Running   0          1d\nkube-system                 pod/kube-dns-6b697fcdbd-c4rmm               3/3       Running   0          1d\nkube-system                 pod/kubernetes-dashboard-785584f46b-9wmqj   1/1       Running   0          1d\nkube-system                 pod/metrics-server-6bbb689cf9-swtxc         1/1       Running   0          1d\nkube-system                 pod/monitoring-influxdb-76fd8dcff6-qws9m    1/1       Running   0          1d\nkube-system                 pod/wavefront-proxy-8498d5bbf4-gl6sw        4/4       Running   0          4m\ntest-afjogacpjsqfetejycxx   pod/busybox-io-ftpz8                        1/1       Running   0          1d\n\nNAMESPACE                   NAME                               DESIRED   CURRENT   READY     AGE\ntest-afjogacpjsqfetejycxx   replicationcontroller/busybox-io   1         1         1         1d\n\nNAMESPACE     NAME                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE\ndefault       service/kubernetes             ClusterIP   10.100.200.1     <none>        443/TCP         1d\nkube-system   service/heapster               ClusterIP   10.100.200.123   <none>        8443/TCP        1d\nkube-system   service/kube-dns               ClusterIP   10.100.200.10    <none>        53/UDP,53/TCP   1d\nkube-system   service/kubernetes-dashboard   NodePort    10.100.200.8     <none>        443:32433/TCP   1d\nkube-system   service/metrics-server         ClusterIP   10.100.200.102   <none>        443/TCP         1d\nkube-system   service/monitoring-influxdb    ClusterIP   10.100.200.89    <none>        8086/TCP        1d\n\nNAMESPACE     NAME                                   DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nkube-system   deployment.apps/heapster               1         1         1            1           1d\nkube-system   deployment.apps/kube-dns               1         1         1            1           1d\nkube-system   deployment.apps/kubernetes-dashboard   1         1         1            1           1d\nkube-system   deployment.apps/metrics-server         1         1         1            1           1d\nkube-system   deployment.apps/monitoring-influxdb    1         1         1            1           1d\nkube-system   deployment.apps/wavefront-proxy        1         1         1            1           4m\n\nNAMESPACE     NAME                                              DESIRED   CURRENT   READY     AGE\nkube-system   replicaset.apps/heapster-6d5f964dbd               1         1         1         1d\nkube-system   replicaset.apps/kube-dns-6b697fcdbd               1         1         1         1d\nkube-system   replicaset.apps/kubernetes-dashboard-785584f46b   1         1         1         1d\nkube-system   replicaset.apps/metrics-server-6bbb689cf9         1         1         1         1d\nkube-system   replicaset.apps/monitoring-influxdb-76fd8dcff6    1         1         1         1d\nkube-system   replicaset.apps/wavefront-proxy-8498d5bbf4        1         1         1         4m\nroot@009069ee-95d5-49a2-6b82-67aff8eb6737:/tmp/build/4ecf0f02# kubectl get psp\nNAME              PRIV      CAPS      SELINUX    RUNASUSER   FSGROUP    SUPGROUP   READONLYROOTFS   VOLUMES\nkube-system-psp   false     *         RunAsAny   RunAsAny    RunAsAny   RunAsAny   false            configMap,emptyDir,projected,secret,downwardAPI\nroot@009069ee-95d5-49a2-6b82-67aff8eb6737:/tmp/build/4ecf0f02# kubectl get all --all-namespaces | grep kube-system-psp\n#+END_EXAMPLE\n* TODO where is k8s job log?                                       :noexport:\nhttp://kubernetesbyexample.com/jobs/\n* TODO kubectl logs --previous nginx-app-zibvs                     :noexport:\nhttps://jimmysong.io/cheatsheets/kubernetes-kubectl\n* TODO [#A] play with k8s ingress service                          :noexport:\n* TODO Vanilla CNCF Certified Kubernetes                           :noexport:\n* TODO [#A] try admission controller                               :noexport:\n* HALF Accessing Kubernetes API from pods                          :noexport:\n curl -k -v --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt -H \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\" https://<mycluster>\n* TODO k8s training course from linux foundation: https://training.linuxfoundation.org/training/introduction-to-kubernetes/ :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO consolidate: https://codefresh.io/kubernetes-tutorial/page/4/ :noexport:\n* TODO consolidate: https://info.shadow-soft.com/hubfs/Kubernetes-Cheatsheet-Mesosphere.pdf :noexport:\n* TODO consolidate: https://kapeli.com/cheat_sheets/Kubernetes.docset/Contents/Resources/Documents/index :noexport:\n* TODO consolidate: https://lzone.de/cheat-sheet/kubernetes        :noexport:\n* TODO consolidate: http://www.productiondown.com/devops/2018/08/02/Kubernetes-Commands-Cheatsheet.html :noexport:\n* TODO consolidate cheatsheet: https://github.com/LeCoupa/awesome-cheatsheets/blob/master/tools/kubernetes.sh :noexport:\n* TODO consolidate: http://kubernetesbyexample.com/                :noexport:\n* TODO consolidate https://jimmysong.io/cheatsheets/kubernetes-tricks :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* HALF use kubectl to pull docker images, instead of ssh to vm     :noexport:\n* HALF use kubectl to cleanup docker images, instead of ssh to vm  :noexport:\nhttps://github.com/onfido/k8s-cleanup/blob/master/docker-clean.yml\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO pv termination hangs there forever                          :noexport:\n#+BEGIN_EXAMPLE\n   /Users/zdenny/git_code/codecommit/devops_blog/k8s  kubectl get pv                                                                                                                                                  master ✘ ✹  ✔ 0\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS        CLAIM                           STORAGECLASS   REASON    AGE\ndb-pv-volume                               400Gi      RWO            Retain           Available                                                              12h\npvc-bbddb940-5f43-11e9-ba3c-42010a800085   1Gi        RWO            Delete           Bound         denny-websites/cdn-pv-claim     standard                 12h\nwebsite-pv-volume                          10Gi       RWO            Retain           Terminating   denny-websites/mysql-pv-claim   standard                 12h\n#+END_EXAMPLE\n* TODO k8s configmap can't be changed                              :noexport:\n#+BEGIN_EXAMPLE\n   /Users/zdenny/git_code/codecommit/devops_blog/k8s  kubectl logs -n denny-websites pod/nginx-b88c67f77-dkw64                                                                                                    master ✘ ✖ ✹ ✭  ✔ 0\nUpdate /etc/nginx/conf.d/default.conf\n+ echo 'Update /etc/nginx/conf.d/default.conf'\n+ sed -i s/http_port_here/80/g /etc/nginx/conf.d/default.conf\nsed: cannot rename /etc/nginx/conf.d/sedz2uuPB: Device or resource busy\n#+END_EXAMPLE\n* TODO [#A] k8s mount configmap file, then edit it when process boostrap :noexport:\n* TODO gce disk: how and when the filesystem formating happens?    :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO k8s pod share volume within containers                      :noexport:\n* TODO gce use one disk in a small chunks                          :noexport:\n* TODO k8s mount jenkins home volume, then dockerfile copy/jenkins groovy. How to align? :noexport:\nCOPY resources/jobs/ /usr/share/jenkins/ref/jobs/\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO k8s: when jenkins pod gets recreated, jenkins secret parameters need to be reconfigured :noexport:\n* TODO k8s: instruct application to run a clean shutdown or a safe restart :noexport:\nhttps://support.cloudbees.com/hc/en-us/articles/115003926511-Best-Practices-for-Jenkins-Updates-Patches-and-Maintenance\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* HALF doc: configmap cannot be mounted as a file                  :noexport:\nhttps://stackoverflow.com/questions/44325048/kubernetes-configmap-only-one-file\n\nConfigMaps must be mounted as directories\n\nhttps://github.com/kubernetes/kubernetes/issues/45000\nhttps://stackoverflow.com/questions/44325048/kubernetes-configmap-only-one-file\n* HALF doc: mount configmap as a seperate file                     :noexport:\n* TODO How to pass credentials to yaml in a secured way?           :noexport:\n* TODO kubectl cluster-info only get recent information            :noexport:\n* DONE k8s pod dns                                                 :noexport:\n  CLOSED: [2019-05-25 Sat 08:21]\nhttps://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\n\n_my-port-name._my-port-protocol.my-svc.my-namespace.svc.cluster.local\n\ncurl -I http://jenkins-lb.my-testbed.svc.cluster.local\n* DONE why one pod has two docker images                           :noexport:\n  CLOSED: [2019-08-01 Thu 14:31]\nOne pod with two containers\n#+BEGIN_EXAMPLE\nroot@422e158feb46fff15217b24e4f8ad20b [ ~ ]# kubectl get pods -o='custom-columns=PODS:.metadata.name,Images:.spec.containers[*].image' --all-namespaces | grep sche\nkube-scheduler-422e158feb46fff15217b24e4f8ad20b            my/kube-scheduler:v1.13.1,my/wcp-schedext:0.0.1.26323453\n#+END_EXAMPLE\n* DONE kubectl get port nodeport                                   :noexport:\n  CLOSED: [2020-04-16 Thu 10:57]\nkubectl get service/wordpress -n blog -o json | jq '.spec.ports[].nodePort'\n\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO [#B] Create PVC workflow                                    :noexport:\n* TODO [#B] Create CRD workflow                                    :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO Why we need kube-controller-manager                         :noexport:\n* TODO Why we need cluster-controller-manager                      :noexport:\n* #  --8<-------------------------- separator ------------------------>8-- :noexport:\n* TODO k8s volume: CSI, vmdk, NFS                                  :noexport:\n* TODO k8s dynamic PV provision vs static PV provision             :noexport:\n* TODO [#A] k8s delete namespace hang                              :noexport:\nRelated resources need to be deleted first\n* TODO [#A] k8s debugging loadbalancer service: external ip in <pending> state :noexport:\n#+BEGIN_EXAMPLE\n$ kubectl get svc -n blog\nNAME        TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE\nmysql       ClusterIP      100.69.173.237   <none>        3306/TCP       12m\nwordpress   LoadBalancer   100.66.31.190    <pending>     80:30407/TCP   12m\n\n$ kubectl describe service/wordpress -n blog\nName:                     wordpress\nNamespace:                blog\nLabels:                   app=wordpress\nAnnotations:              Selector:  app=wordpress\nType:                     LoadBalancer\nIP:                       100.66.31.190\nPort:                     <unset>  80/TCP\nTargetPort:               80/TCP\nNodePort:                 <unset>  30407/TCP\nEndpoints:                100.117.221.13:80\nSession Affinity:         None\nExternal Traffic Policy:  Cluster\nEvents:                   <none>\n10:34\n\n$ cat 21-wordpress-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: wordpress\n  namespace: blog\n  name: wordpress\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 80\n      targetPort: 80\n      protocol: TCP\n  selector:\n    app: wordpress\n#+END_EXAMPLE\n* TODO K8s networking                                              :noexport:\n- container-to-container communication\n- pod-to-pod communication\n  K8s itself won't do it for you. And CNI can be used to configure the network of a pod and provide a single IP per pod.\n  CNI doesn't help you with pod-to-pod communication across nodes.\n- external-to-pod communication\n* Questions forked from CKA preparation                            :noexport:\n** TODO how etcd is designed and implemented?\n** TODO [#A] Only one IP address per Pod. How multiple containers talk with each other inside one pod?\n Two containers share the same network namespace of the thrid container, known as the pause container.\n\n - The pause container is used to get an IP address, then all containers in the pod will uses its network namespace.\n - To communicate with each other, containers can use the loopback interface, write to files on a common filesystem, or via IPC\n** TODO Why ipv6 doesn't gain popularity\n ipv6 not backward compatible\n NAT\n ipv4 better management\n** TODO How K8s reconcilation is done?\n** TODO How the feature of cluster ip is implemented?\n"
        },
        {
          "name": "cheatsheet-kubernetes-A4.pdf",
          "type": "blob",
          "size": 144.716796875,
          "content": null
        },
        {
          "name": "get-pod-error-log.sh",
          "type": "blob",
          "size": 1.115234375,
          "content": "#!/usr/bin/env bash\n##  @copyright 2019 DennyZhang.com\n## Licensed under MIT \n##   https://www.dennyzhang.com/wp-content/mit_license.txt\n##\n## File: delete_all_containers.sh\n## Author : Denny <https://www.dennyzhang.com/contact>\n## Description : https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4\n## --\n## Created : <2018-07-10>\n## Updated: Time-stamp: <2019-07-31 22:54:01>\n##-------------------------------------------------------------------\n# curl -L https://raw.githubusercontent.com/dennyzhang/cheatsheet-kubernetes-A4/master/get-pod-error-log.sh | bash\nnamespace=${1:-\"\"}\nlog_pattern=\"grep -iE 'exception|error' | grep -v 'Reconciler error' | tail -n10\"\n\nif [ -z \"$namespace\" ]; then\n    options=\"--all-namespaces\"\nelse\n    options=\"-n $namespace\"\nfi\ncommand=\"kubectl get pods -o='custom-columns=PODS:.metadata.name,PODS:.metadata.namespace' $options | grep -v PODS\"\necho \"$command\"\npods=$(eval \"$command\")\n\nIFS=$'\\n'\nfor item in $pods; do\n    pod=$(echo \"$item\" | awk '{print $1}')\n    ns=$(echo \"$item\" | awk '{print $2}')\n    command=\"kubectl logs pod/$pod -n $ns | $log_pattern\"\n    echo \"$command\" && eval \"$command\"\ndone\n"
        },
        {
          "name": "jenkinjavafile",
          "type": "blob",
          "size": 0.4580078125,
          "content": "public class SortedIntList extends IntListVer3{\n    \n    public SortedIntList(int initialCap){\n        //call IntList constructor\n        super(initialCap);\n    }\n    \n    public SortedIntList(){\n        super();\n    }\n    \n    //override add\n    public void add(int value){\n        //search for location to insert value\n        int pos = 0;\n        while( pos < size() && value > get(pos) ){\n            pos++;\n        }\n        super.insert(pos, value);\n    }\n    \n}\n"
        },
        {
          "name": "k8s-networking-ip.png",
          "type": "blob",
          "size": 76.3037109375,
          "content": null
        },
        {
          "name": "list-all-images.sh",
          "type": "blob",
          "size": 0.60546875,
          "content": "#!/usr/bin/env bash\n## @copyright 2018 DennyZhang.com\n## Licensed under MIT\n## https://www.dennyzhang.com/wp-content/mit_license.txt\n##\n## Author : Denny <https://www.dennyzhang.com/contact>\n## Description :\n## https://cheatsheet.dennyzhang.com/cheatsheet-kubernetes-A4\n## --\n## Created : <2018-07-17>\n## Updated: Time-stamp: <2018-12-30 19:07:42>\n##-------------------------------------------------------------------\n# https://kubernetes.io/docs/tasks/access-application-cluster/list-all-running-container-images/\nkubectl get pods --all-namespaces -o jsonpath=\"{..image}\" |\\\ntr -s '[[:space:]]' '\\n' |\\\nsort |\\\nuniq -c\n"
        },
        {
          "name": "skip-tls-verify.md",
          "type": "blob",
          "size": 0.4951171875,
          "content": "```\napiVersion: v1\nclusters:\n- cluster:\n    server: https://192.168.0.100:8443\n    insecure-skip-tls-verify: true\n  name: minikube\ncontexts:\n- context:\n    cluster: minikube\n    user: minikube\n  name: minikube\ncurrent-context: minikube\nkind: Config\npreferences: {}\nusers:\n- name: minikube\n  user:\n    client-certificate: C:\\Users\\wes.robinson\\.minikube\\client.crt\n    client-key: C:\\Users\\wes.robinson\\.minikube\\client.key\n```\n\nhttps://github.com/terraform-providers/terraform-provider-kubernetes/issues/189"
        }
      ]
    }
  ]
}