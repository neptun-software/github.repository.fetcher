{
  "metadata": {
    "timestamp": 1736568770280,
    "page": 888,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shr3ddersec/Shr3dKit",
      "stars": 1112,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 44.208984375,
          "content": "![alt text](https://i.imgur.com/bBQ9aKm.png)\n\nThis tool kit is very much influenced by infosecn1nja's kit.\nUse this script to grab majority of the repos.\n\n\n**NOTE: hard coded in /opt and made for Kali Linux**\n\n**Total Size (so far): 2.5+Gb**\n\nInstall Guide:\n\n```\napt -y install git apache2 python-requests libapache2-mod-php python-pymssql build-essential python-pexpect python-pefile python-crypto python-openssl libssl1.0-dev libffi-dev python-dev python-pip tcpdump python-virtualenv build-essential cmake libgtk-3-dev libboost-all-dev libx11-dev libatlas-base-dev libboost-python-dev pkg-config\n```\n\n```\ngit clone https://github.com/shr3ddersec/Shr3dKit.git\npip install -r requirements.txt\nbash shr3dkit.sh\n```\n**Change Log**\n```\nJune-13-2019\nTools Added: Added CobaltStrike-ToolKit, mimipenguin, PyKEK, ACLight\n--------------------------------------------------\nMay-06-2019\nCode: Added Invoke-CradleCrafter to Weaponization.\n--------------------------------------------------\nApril-2019\nFixed: macro_pack, LaZagne\nCode: Added all requirements to script, seperated pip requirements and merged to one file.\n\nTools Added: Modlishka, pwndb, cat-sites, Phantom-Evasion\n```\n**Phantom Evasion Forewarning**\n\n## Contents\n* [Reconnaissance](#reconnaissance)\n* [Weaponization](#weaponization)\n* [Delivery](#delivery)\n* [Command and Control](#command-and-control)\n* [Lateral Movement](#lateral-movement)\n* [Establish Foothold](#establish-foothold)\n* [Escalate Privileges](#escalate-privileges)\n* [Data Exfiltration](#data-exfiltration)\n* [Misc](#misc)\n* [References](#references)\n\n\n## Reconnaissance\n### Active Intelligence Gathering\n* **EyeWitness** is designed to take screenshots of websites, provide some server header info, and identify default credentials if possible. https://github.com/ChrisTruncer/EyeWitness\n* **AWSBucketDump** is a tool to quickly enumerate AWS S3 buckets to look for loot. https://github.com/jordanpotti/AWSBucketDump\n* **AQUATONE** is a set of tools for performing reconnaissance on domain names. https://github.com/michenriksen/aquatone\n* **spoofcheck** a program that checks if a domain can be spoofed from. The program checks SPF and DMARC records for weak configurations that allow spoofing. https://github.com/BishopFox/spoofcheck\n* **Nmap** is used to discover hosts and services on a computer network, thus building a \"map\" of the network. https://github.com/nmap/nmap\n* **dnsrecon** a tool DNS Enumeration Script. https://github.com/darkoperator/dnsrecon\n\n### Passive Intelligence Gathering\n* **Social Mapper** OSINT Social Media Mapping Tool, takes a list of names & images (or LinkedIn company name) and performs automated target searching on a huge scale across multiple social media sites. Not restricted by APIs as it instruments a browser using Selenium. Outputs reports to aid in correlating targets across sites. https://github.com/SpiderLabs/social_mapper\n* **skiptracer** OSINT scraping framework, utilizes some basic python webscraping (BeautifulSoup) of PII paywall sites to compile passive information on a target on a ramen noodle budget. https://github.com/xillwillx/skiptracer\n* **ScrapedIn** a tool to scrape LinkedIn without API restrictions for data reconnaissance. https://github.com/dchrastil/ScrapedIn\n* **linkScrape** A LinkedIn user/company enumeration tool. https://github.com/NickSanzotta/linkScrape\n* **FOCA** (Fingerprinting Organizations with Collected Archives) is a tool used mainly to find metadata and hidden information in the documents its scans. https://github.com/ElevenPaths/FOCA\n* **theHarvester** is a tool for gathering subdomain names, e-mail addresses, virtual\nhosts, open ports/ banners, and employee names from different public sources. https://github.com/laramies/theHarvester\n* **Metagoofil** is a tool for extracting metadata of public documents (pdf,doc,xls,ppt,etc) availables in the target websites. https://github.com/laramies/metagoofil\n* **SimplyEmail** Email recon made fast and easy, with a framework to build on. https://github.com/killswitch-GUI/SimplyEmail\n* **truffleHog** searches through git repositories for secrets, digging deep into commit history and branches.  https://github.com/dxa4481/truffleHog\n* **Just-Metadata** is a tool that gathers and analyzes metadata about IP addresses. It attempts to find relationships between systems within a large dataset. https://github.com/ChrisTruncer/Just-Metadata\n* **typofinder** a finder of domain typos showing country of IP address. https://github.com/nccgroup/typofinder\n* **pwnedOrNot** is a python script which checks if the email account has been compromised in a data breach, if the email account is compromised it proceeds to find passwords for the compromised account. https://github.com/thewhiteh4t/pwnedOrNot\n* **GitHarvester** This tool is used for harvesting information from GitHub like google dork. https://github.com/metac0rtex/GitHarvester\n\n* **pwndb** is a python command-line tool for searching leaked credentials using the Onion service with the same name. https://github.com/davidtavarez/pwndb/\n\n### Frameworks\n* **Maltego** is a unique platform developed to deliver a clear threat picture to the environment that an organization owns and operates. https://www.paterva.com/web7/downloads.php\n* **SpiderFoot** the open source footprinting and intelligence-gathering tool. https://github.com/smicallef/spiderfoot\n* **datasploit** is an OSINT Framework to perform various recon techniques on Companies, People, Phone Number, Bitcoin Addresses, etc., aggregate all the raw data, and give data in multiple formats. https://github.com/DataSploit/datasploit\n* **Recon-ng** is a full-featured Web Reconnaissance framework written in Python. https://bitbucket.org/LaNMaSteR53/recon-ng\n\n## Weaponization\n* **Composite Moniker** Proof of Concept exploit for CVE-2017-8570. https://github.com/rxwx/CVE-2017-8570\n* **Exploit toolkit CVE-2017-8759** is a handy python script which provides pentesters and security researchers a quick and effective way to test Microsoft .NET Framework RCE. https://github.com/bhdresh/CVE-2017-8759\n* **CVE-2017-11882 Exploit** accepts over 17k bytes long command/code in maximum. https://github.com/unamer/CVE-2017-11882\n* **Adobe Flash Exploit** CVE-2018-4878. https://github.com/anbai-inc/CVE-2018-4878\n* **Exploit toolkit CVE-2017-0199** is a handy python script which provides pentesters and security researchers a quick and effective way to test Microsoft Office RCE. https://github.com/bhdresh/CVE-2017-0199\n* **demiguise** is a HTA encryption tool for RedTeams. https://github.com/nccgroup/demiguise\n* **Office-DDE-Payloads** collection of scripts and templates to generate Office documents embedded with the DDE, macro-less command execution technique. https://github.com/0xdeadbeefJERKY/Office-DDE-Payloads\n* **CACTUSTORCH** Payload Generation for Adversary Simulations. https://github.com/mdsecactivebreach/CACTUSTORCH\n* **SharpShooter** is a payload creation framework for the retrieval and execution of arbitrary CSharp source code. https://github.com/mdsecactivebreach/SharpShooter\n* **Don't kill my cat** is a tool that generates obfuscated shellcode that is stored inside of polyglot images. The image is 100% valid and also 100% valid shellcode. https://github.com/Mr-Un1k0d3r/DKMC\n* **Malicious Macro Generator Utility** Simple utility design to generate obfuscated macro that also include a AV / Sandboxes escape mechanism. https://github.com/Mr-Un1k0d3r/MaliciousMacroGenerator\n* **SCT Obfuscator** Cobalt Strike SCT payload obfuscator. https://github.com/Mr-Un1k0d3r/SCT-obfuscator\n* **Invoke-Obfuscation** PowerShell Obfuscator. https://github.com/danielbohannon/Invoke-Obfuscation\n* **Invoke-DOSfuscation** cmd.exe Command Obfuscation Generator & Detection Test Harness. https://github.com/danielbohannon/Invoke-DOSfuscation\n* **morphHTA** Morphing Cobalt Strike's evil.HTA. https://github.com/vysec/morphHTA\n* **Unicorn** is a simple tool for using a PowerShell downgrade attack and inject shellcode straight into memory. https://github.com/trustedsec/unicorn\n* **Shellter** is a dynamic shellcode injection tool, and the first truly dynamic PE infector ever created. https://www.shellterproject.com/\n* **EmbedInHTML** Embed and hide any file in an HTML file. https://github.com/Arno0x/EmbedInHTML\n* **SigThief** Stealing Signatures and Making One Invalid Signature at a Time. https://github.com/secretsquirrel/SigThief\n* **Veil** is a tool designed to generate metasploit payloads that bypass common anti-virus solutions. https://github.com/Veil-Framework/Veil\n* **CheckPlease** Sandbox evasion modules written in PowerShell, Python, Go, Ruby, C, C#, Perl, and Rust. https://github.com/Arvanaghi/CheckPlease\n* **Invoke-PSImage** is a tool to embeded a PowerShell script in the pixels of a PNG file and generates a oneliner to execute. https://github.com/peewpw/Invoke-PSImage\n* **LuckyStrike** a PowerShell based utility for the creation of malicious Office macro documents. To be used for pentesting or educational purposes only. https://github.com/curi0usJack/luckystrike\n* **ClickOnceGenerator** Quick Malicious ClickOnceGenerator for Red Team. The default application a simple WebBrowser widget that point to a website of your choice. https://github.com/Mr-Un1k0d3r/ClickOnceGenerator\n* **macro_pack** is a tool by @EmericNasi used to automatize obfuscation and generation of MS Office documents, VB scripts, and other formats for pentest, demo, and social engineering assessments. https://github.com/sevagas/macro_pack\n* **StarFighters** a JavaScript and VBScript Based Empire Launcher. https://github.com/Cn33liz/StarFighters\n* **nps_payload** this script will generate payloads for basic intrusion detection avoidance. It utilizes publicly demonstrated techniques from several different sources. https://github.com/trustedsec/nps_payload\n* **SocialEngineeringPayloads** a collection of social engineering tricks and payloads being used for credential theft and spear phishing attacks. https://github.com/bhdresh/SocialEngineeringPayloads\n* **The Social-Engineer Toolkit** is an open-source penetration testing framework designed for social engineering. https://github.com/trustedsec/social-engineer-toolkit\n* **Phishery** is a Simple SSL Enabled HTTP server with the primary purpose of phishing credentials via Basic Authentication.  https://github.com/ryhanson/phishery\n* **PowerShdll** run PowerShell with rundll32. Bypass software restrictions. https://github.com/p3nt4/PowerShdll\n* **Ultimate AppLocker ByPass List** The goal of this repository is to document the most common techniques to bypass AppLocker. https://github.com/api0cradle/UltimateAppLockerByPassList\n* **Ruler** is a tool that allows you to interact with Exchange servers remotely, through either the MAPI/HTTP or RPC/HTTP protocol. https://github.com/sensepost/ruler\n* **Generate-Macro** is a standalone PowerShell script that will generate a malicious Microsoft Office document with a specified payload and persistence method. https://github.com/enigma0x3/Generate-Macro\n* **Malicious Macro MSBuild Generator** Generates Malicious Macro and Execute Powershell or Shellcode via MSBuild Application Whitelisting Bypass. https://github.com/infosecn1nja/MaliciousMacroMSBuild\n* **Meta Twin** is designed as a file resource cloner. Metadata, including digital signature, is extracted from one file and injected into another. https://github.com/threatexpress/metatwin\n* **WePWNise** generates architecture independent VBA code to be used in Office documents or templates and automates bypassing application control and exploit mitigation software. https://github.com/mwrlabs/wePWNise\n* **DotNetToJScript** a tool to create a JScript file which loads a .NET v2 assembly from memory. https://github.com/tyranid/DotNetToJScript\n* **PSAmsi** is a tool for auditing and defeating AMSI signatures. https://github.com/cobbr/PSAmsi\n* **Reflective DLL injection** is a library injection technique in which the concept of reflective programming is employed to perform the loading of a library from memory into a host process. https://github.com/stephenfewer/ReflectiveDLLInjection\n* **ps1encode** use to generate and encode a powershell based metasploit payloads. https://github.com/CroweCybersecurity/ps1encode\n* **Worse PDF** turn a normal PDF file into malicious. Use to steal Net-NTLM Hashes from windows machines. https://github.com/3gstudent/Worse-PDF\n* **SpookFlare** has a different perspective to bypass security measures and it gives you the opportunity to bypass the endpoint countermeasures at the client-side detection and network-side detection. https://github.com/hlldz/SpookFlare\n* **GreatSCT** is an open source project to generate application white list bypasses. This tool is intended for BOTH red and blue team. https://github.com/GreatSCT/GreatSCT\n* **nps** running powershell without powershell. https://github.com/Ben0xA/nps\n* **Meterpreter_Paranoid_Mode.sh** allows users to secure your staged/stageless connection for Meterpreter by having it check the certificate of the handler it is connecting to. https://github.com/r00t-3xp10it/Meterpreter_Paranoid_Mode-SSL\n* **The Backdoor Factory (BDF)** is to patch executable binaries with user desired shellcode and continue normal execution of the prepatched state. https://github.com/secretsquirrel/the-backdoor-factory\n* **MacroShop** a collection of scripts to aid in delivering payloads via Office Macros. https://github.com/khr0x40sh/MacroShop\n* **UnmanagedPowerShell** Executes PowerShell from an unmanaged process. https://github.com/leechristensen/UnmanagedPowerShell\n* **evil-ssdp** Spoof SSDP replies to phish for NTLM hashes on a network. Creates a fake UPNP device, tricking users into visiting a malicious phishing page. https://gitlab.com/initstring/evil-ssdp\n* **Ebowla** Framework for Making Environmental Keyed Payloads. https://github.com/Genetic-Malware/Ebowla\n* **make-pdf-embedded** a tool to create a PDF document with an embedded file. https://github.com/DidierStevens/DidierStevensSuite/blob/master/make-pdf-embedded.py\n* **avet** (AntiVirusEvasionTool) is targeting windows machines with executable files using different evasion techniques. https://github.com/govolution/avet\n* **Phantom-Evasion** Interactive antivirus evasion tool written in python capable to generate (almost) FUD executable even with the most common 32 bit msfvenom payload (lower detection ratio with 64 bit payloads). https://github.com/oddcod3/Phantom-Evasion **WARNING**: Please be aware this does install a Minero miner by default. This can be changed in the **Setup** folder and edit **Config.txt** and edit *Mining = False*. If you want to support the project and developers, I would recommend keeping on. \n* **Invoke-CradleCrafter** PowerShell remote download cradle generator and obfuscator. https://github.com/danielbohannon/Invoke-CradleCrafter\n\n## Delivery\n### Phishing\n* **King Phisher** is a tool for testing and promoting user awareness by simulating real world phishing attacks. https://github.com/securestate/king-phisher\n* **FiercePhish** is a full-fledged phishing framework to manage all phishing engagements. It allows you to track separate phishing campaigns, schedule sending of emails, and much more. https://github.com/Raikia/FiercePhish\n* **ReelPhish** is a Real-Time Two-Factor Phishing Tool. https://github.com/fireeye/ReelPhish/\n* **Gophish** is an open-source phishing toolkit designed for businesses and penetration testers. It provides the ability to quickly and easily setup and execute phishing engagements and security awareness training. https://github.com/gophish/gophish\n* **CredSniper** is a phishing framework written with the Python micro-framework Flask and Jinja2 templating which supports capturing 2FA tokens. https://github.com/ustayready/CredSniper\n* **PwnAuth** a web application framework for launching and managing OAuth abuse campaigns. https://github.com/fireeye/PwnAuth\n* **Phishing Frenzy** Ruby on Rails Phishing Framework. https://github.com/pentestgeek/phishing-frenzy\n* **Phishing Pretexts** a library of pretexts to use on offensive phishing engagements. https://github.com/L4bF0x/PhishingPretexts\n* **Modlishka** is a flexible and powerful reverse proxy, that will take your ethical phishing campaigns to the next level. https://github.com/drk1wi/Modlishka\n\n### Watering Hole Attack\n* **BeEF** is short for The Browser Exploitation Framework. It is a penetration testing tool that focuses on the web browser. https://github.com/beefproject/beef\n\n## Command and Control\n### Remote Access Tools\n* **Cobalt Strike** is software for Adversary Simulations and Red Team Operations. https://cobaltstrike.com/\n* **Empire** is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent. https://github.com/EmpireProject/Empire\n* **Metasploit Framework** is a computer security project that provides information about security vulnerabilities and aids in penetration testing and IDS signature development. https://github.com/rapid7/metasploit-framework\n* **SILENTTRINITY** A post-exploitation agent powered by Python, IronPython, C#/.NET. https://github.com/byt3bl33d3r/SILENTTRINITY\n* **Pupy** is an opensource, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool mainly written in python. https://github.com/n1nj4sec/pupy\n* **Koadic** or COM Command & Control, is a Windows post-exploitation rootkit similar to other penetration testing tools such as Meterpreter and Powershell Empire. https://github.com/zerosum0x0/koadic\n* **PoshC2** is a proxy aware C2 framework written completely in PowerShell to aid penetration testers with red teaming, post-exploitation and lateral movement. https://github.com/nettitude/PoshC2\n* **Gcat** a stealthy Python based backdoor that uses Gmail as a command and control server. https://github.com/byt3bl33d3r/gcat\n* **TrevorC2** is a legitimate website (browsable) that tunnels client/server communications for covert command execution. https://github.com/trustedsec/trevorc2\n* **Merlin** is a cross-platform post-exploitation HTTP/2 Command & Control server and agent written in golang. https://github.com/Ne0nd0g/merlin\n* **Quasar** is a fast and light-weight remote administration tool coded in C#. Providing high stability and an easy-to-use user interface, Quasar is the perfect remote administration solution for you. https://github.com/quasar/QuasarRAT\n\n### Staging\n* **Rapid Attack Infrastructure (RAI)** Red Team Infrastructure... Quick... Fast... Simplified\nOne of the most tedious phases of a Red Team Operation is usually the infrastructure setup. This usually entails\na teamserver or controller, domains, redirectors, and a Phishing server. https://github.com/obscuritylabs/RAI\n* **Red Baron** is a set of modules and custom/third-party providers for Terraform which tries to automate creating resilient, disposable, secure and agile infrastructure for Red Teams. https://github.com/byt3bl33d3r/Red-Baron\n* **EvilURL** generate unicode evil domains for IDN Homograph Attack and detect them. https://github.com/UndeadSec/EvilURL\n* **Domain Hunter** checks expired domains, bluecoat categorization, and Archive.org history to determine good candidates for phishing and C2 domain names. https://github.com/threatexpress/domainhunter\n* **PowerDNS** is a simple proof of concept to demonstrate the execution of PowerShell script using DNS only. https://github.com/mdsecactivebreach/PowerDNS\n* **Chameleon** a tool for evading Proxy categorisation. https://github.com/mdsecactivebreach/Chameleon\n* **CatMyFish** Search for categorized domain that can be used during red teaming engagement. Perfect to setup whitelisted domain for your Cobalt Strike beacon C&C. https://github.com/Mr-Un1k0d3r/CatMyFish\n* **Malleable C2** is a domain specific language to redefine indicators in Beacon's communication. https://github.com/rsmudge/Malleable-C2-Profiles\n* **Malleable-C2-Randomizer** This script randomizes Cobalt Strike Malleable C2 profiles through the use of a metalanguage, hopefully reducing the chances of flagging signature-based detection controls. https://github.com/bluscreenofjeff/Malleable-C2-Randomizer\n* **FindFrontableDomains** search for potential frontable domains. https://github.com/rvrsh3ll/FindFrontableDomains\n* **Postfix-Server-Setup** Setting up a phishing server is a very long and tedious process. It can take hours to setup, and can be compromised in minutes. https://github.com/n0pe-sled/Postfix-Server-Setup\n* **DomainFrontingLists** a list of Domain Frontable Domains by CDN. https://github.com/vysec/DomainFrontingLists\n* **Apache2-Mod-Rewrite-Setup** Quickly Implement Mod-Rewrite in your infastructure. https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup\n* **mod_rewrite rule** to evade vendor sandboxes. https://gist.github.com/curi0usJack/971385e8334e189d93a6cb4671238b10\n* **external_c2 framework** a python framework for usage with Cobalt Strike's External C2. https://github.com/Und3rf10w/external_c2_framework\n* **ExternalC2** a library for integrating communication channels with the Cobalt Strike External C2 server. https://github.com/ryhanson/ExternalC2\n* **cs2modrewrite** a tools for convert Cobalt Strike profiles to modrewrite scripts. https://github.com/threatexpress/cs2modrewrite\n* **e2modrewrite** a tools for convert Empire profiles to Apache modrewrite scripts. https://github.com/infosecn1nja/e2modrewrite\n* **redi** automated script for setting up CobaltStrike redirectors (nginx reverse proxy, letsencrypt). https://github.com/taherio/redi\n* **Domain Fronting Google App Engine**. https://github.com/redteam-cyberark/Google-Domain-fronting\n* **DomainFrontDiscover** Scripts and results for finding domain frontable CloudFront domains. https://github.com/peewpw/DomainFrontDiscover\n* **Automated Empire Infrastructure** https://github.com/bneg/RedTeam-Automation\n* **Serving Random Payloads** with NGINX. https://gist.github.com/jivoi/a33ace2e25515a31aa2ffbae246d98c9\n* **meek** is a blocking-resistant pluggable transport for Tor. It encodes a\ndata stream as a sequence of HTTPS requests and responses. https://github.com/arlolra/meek\n* **CobaltStrike-ToolKit** Some useful scripts for CobaltStrike. https://github.com/killswitch-GUI/CobaltStrike-ToolKit\n* **mkhtaccess_red** Auto-generate an HTaccess for payload delivery -- automatically pulls ips/nets/etc from known sandbox companies/sources that have been seen before, and redirects them to a benign payload. https://github.com/violentlydave/mkhtaccess_red\n* **RedFile** a flask wsgi application that serves files with intelligence, good for serving conditional RedTeam payloads. https://github.com/outflanknl/RedFile\n* **keyserver** Easily serve HTTP and DNS keys for proper payload protection. https://github.com/leoloobeek/keyserver\n* **DoHC2** allows the ExternalC2 library from Ryan Hanson (https://github.com/ryhanson/ExternalC2) to be leveraged for command and control (C2) via DNS over HTTPS (DoH). This is built for the popular Adversary Simulation and Red Team Operations Software Cobalt Strike (https://www.cobaltstrike.com). https://github.com/SpiderLabs/DoHC2\n* **cat-sites** Library of sites for categorization. https://github.com/audrummer15/cat-sites\n\n## Lateral Movement\n* **CrackMapExec** is a swiss army knife for pentesting networks. https://github.com/byt3bl33d3r/CrackMapExec\n* **PowerLessShell** rely on MSBuild.exe to remotely execute PowerShell scripts and commands without spawning powershell.exe. https://github.com/Mr-Un1k0d3r/PowerLessShell\n* **GoFetch** is a tool to automatically exercise an attack plan generated by the BloodHound application.\n https://github.com/GoFetchAD/GoFetch\n* **ANGRYPUPPY** a bloodhound attack path automation in CobaltStrike. https://github.com/vysec/ANGRYPUPPY\n* **DeathStar** is a Python script that uses Empire's RESTful API to automate gaining Domain Admin rights in Active Directory environments using a variety of techinques. https://github.com/byt3bl33d3r/DeathStar\n* **SharpHound** C# Rewrite of the BloodHound Ingestor. https://github.com/BloodHoundAD/SharpHound\n* **BloodHound.py** is a Python based ingestor for BloodHound, based on Impacket. https://github.com/fox-it/BloodHound.py\n* **Responder** is a LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. https://github.com/SpiderLabs/Responder\n* **SessionGopher** is a PowerShell tool that uses WMI to extract saved session information for remote access tools such as WinSCP, PuTTY, SuperPuTTY, FileZilla, and Microsoft Remote Desktop. It can be run remotely or locally. https://github.com/fireeye/SessionGopher\n* **PowerSploit** is a collection of Microsoft PowerShell modules that can be used to aid penetration testers during all phases of an assessment. https://github.com/PowerShellMafia/PowerSploit\n* **Nishang** is a framework and collection of scripts and payloads which enables usage of PowerShell for offensive security, penetration testing and red teaming. Nishang is useful during all phases of penetration testing. https://github.com/samratashok/nishang\n* **Inveigh** is a Windows PowerShell LLMNR/mDNS/NBNS spoofer/man-in-the-middle tool. https://github.com/Kevin-Robertson/Inveigh\n* **PowerUpSQL** a PowerShell Toolkit for Attacking SQL Server. https://github.com/NetSPI/PowerUpSQL\n* **MailSniper** is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). https://github.com/dafthack/MailSniper\n* **WMIOps** is a powershell script that uses WMI to perform a variety of actions on hosts, local or remote, within a Windows environment. It's designed primarily for use on penetration tests or red team engagements. https://github.com/ChrisTruncer/WMIOps\n* **Mimikatz** is an open-source utility that enables the viewing of credential information from the Windows lsass. https://github.com/gentilkiwi/mimikatz\n* **LaZagne** project is an open source application used to retrieve lots of passwords stored on a local computer. https://github.com/AlessandroZ/LaZagne\n* **mimipenguin** a tool to dump the login password from the current linux desktop user. Adapted from the idea behind the popular Windows tool mimikatz. https://github.com/huntergregal/mimipenguin\n* **PsExec** is a light-weight telnet-replacement that lets you execute processes on other systems, complete with full interactivity for console applications, without having to manually install client software. https://docs.microsoft.com/en-us/sysinternals/downloads/psexec\n* **KeeThief** allows for the extraction of KeePass 2.X key material from memory, as well as the backdooring and enumeration of the KeePass trigger system. https://github.com/HarmJ0y/KeeThief\n* **PSAttack** combines some of the best projects in the infosec powershell community into a self contained custom PowerShell console. https://github.com/jaredhaight/PSAttack\n* **Internal Monologue Attack** Retrieving NTLM Hashes without Touching LSASS. https://github.com/eladshamir/Internal-Monologue\n* **Impacket** is a collection of Python classes for working with network protocols. Impacket is focused on providing low-level programmatic access to the packets and for some protocols (for instance NMB, SMB1-3 and MS-DCERPC) the protocol implementation itself. https://github.com/CoreSecurity/impacket\n* **icebreaker** gets plaintext Active Directory credentials if you're on the internal network but outside the AD environment. https://github.com/DanMcInerney/icebreaker\n* **Living Off The Land Binaries and Scripts (and now also Libraries)** The goal of these lists are to document every binary, script and library that can be used for other purposes than they are designed to. https://github.com/api0cradle/LOLBAS\n* **WSUSpendu** for compromised WSUS server to extend the compromise to clients. https://github.com/AlsidOfficial/WSUSpendu\n* **Evilgrade** is a modular framework that allows the user to take advantage of poor upgrade implementations by injecting fake updates. https://github.com/infobyte/evilgrade\n* **NetRipper** is a post exploitation tool targeting Windows systems which uses API hooking in order to intercept network traffic and encryption related functions from a low privileged user, being able to capture both plain-text traffic and encrypted traffic before encryption/after decryption. https://github.com/NytroRST/NetRipper\n* **LethalHTA** Lateral Movement technique using DCOM and HTA. https://github.com/codewhitesec/LethalHTA\n* **Invoke-PowerThIEf** an Internet Explorer Post Exploitation library. https://github.com/nettitude/Invoke-PowerThIEf\n* **RedSnarf** is a pen-testing / red-teaming tool for Windows environments. https://github.com/nccgroup/redsnarf\n* **HoneypotBuster** Microsoft PowerShell module designed for red teams that can be used to find honeypots and honeytokens in the network or at the host. https://github.com/JavelinNetworks/HoneypotBuster\n\n## Establish Foothold\n* **Tunna** is a set of tools which will wrap and tunnel any TCP communication over HTTP. It can be used to bypass network restrictions in fully firewalled environments. https://github.com/SECFORCE/Tunna\n* **reGeorg** the successor to reDuh, pwn a bastion webserver and create SOCKS proxies through the DMZ. Pivot and pwn. https://github.com/sensepost/reGeorg\n* **Blade** is a webshell connection tool based on console, currently under development and aims to be a choice of replacement of Chooper. https://github.com/wonderqs/Blade\n* **TinyShell** Web Shell Framework. https://github.com/threatexpress/tinyshell\n* **PowerLurk** is a PowerShell toolset for building malicious WMI Event Subsriptions. https://github.com/Sw4mpf0x/PowerLurk\n* **DAMP** The Discretionary ACL Modification Project: Persistence Through Host-based Security Descriptor Modification.\nhttps://github.com/HarmJ0y/DAMP\n\n## Escalate Privileges\n### Domain Escalation\n* **PowerView** is a PowerShell tool to gain network situational awareness on Windows domains. https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1\n* **Get-GPPPassword** Retrieves the plaintext password and other information for accounts pushed through Group Policy Preferences. https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-GPPPassword.ps1\n* **Invoke-ACLpwn** is a tool that automates the discovery and pwnage of ACLs in Active Directory that are unsafe configured. https://github.com/fox-it/Invoke-ACLPwn\n* **BloodHound** uses graph theory to reveal the hidden and often unintended relationships within an Active Directory environment. https://github.com/BloodHoundAD/BloodHound\n* **PyKEK** (Python Kerberos Exploitation Kit), a python library to manipulate KRB5-related data. https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek\n* **Grouper** a PowerShell script for helping to find vulnerable settings in AD Group Policy.\nhttps://github.com/l0ss/Grouper\n* **ADRecon** is a tool which extracts various artifacts (as highlighted below) out of an AD environment in a specially formatted Microsoft Excel report that includes summary views with metrics to facilitate analysis. https://github.com/sense-of-security/ADRecon\n* **ADACLScanner** one script for ACL's in Active Directory. https://github.com/canix1/ADACLScanner\n* **ACLight** a useful script for advanced discovery of Domain Privileged Accounts that could be targeted - including Shadow Admins. https://github.com/cyberark/ACLightv\n* **LAPSToolkit** a tool to audit and attack LAPS environments. https://github.com/leoloobeek/LAPSToolkit\n* **PingCastle** is a free, Windows-based utility to audit the risk level of your AD infrastructure and check for vulnerable practices. https://www.pingcastle.com/download\n* **RiskySPNs** is a collection of PowerShell scripts focused on detecting and abusing accounts associated with SPNs (Service Principal Name). https://github.com/cyberark/RiskySPN\n* **Mystique** is a PowerShell tool to play with Kerberos S4U extensions, this module can assist blue teams to identify risky Kerberos delegation configurations as well as red teams to impersonate arbitrary users by leveraging KCD with Protocol Transition. https://github.com/machosec/Mystique\n* **Rubeus** is a C# toolset for raw Kerberos interaction and abuses. It is heavily adapted from Benjamin Delpy's Kekeo project. https://github.com/GhostPack/Rubeus\n* **kekeo** is a little toolbox I have started to manipulate Microsoft Kerberos in C (and for fun). https://github.com/gentilkiwi/kekeo\n\n### Local Escalation\n* **UACMe** is an open source assessment tool that contains many methods for bypassing Windows User Account Control on multiple versions of the operating system. https://github.com/hfiref0x/UACME\n* **windows-kernel-exploits** a collection windows kernel exploit. https://github.com/SecWiki/windows-kernel-exploits\n* **PowerUp** aims to be a clearinghouse of common Windows privilege escalation vectors that rely on misconfigurations. https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1\n* **The Elevate Kit** demonstrates how to use third-party privilege escalation attacks with Cobalt Strike's Beacon payload. https://github.com/rsmudge/ElevateKit\n* **Sherlock** a powerShell script to quickly find missing software patches for local privilege escalation vulnerabilities.\n https://github.com/rasta-mouse/Sherlock\n* **Tokenvator** a tool to elevate privilege with Windows Tokens. https://github.com/0xbadjuju/Tokenvator\n\n## Data Exfiltration\n* **CloakifyFactory** & the Cloakify Toolset - Data Exfiltration & Infiltration In Plain Sight; Evade DLP/MLS Devices; Social Engineering of Analysts; Defeat Data Whitelisting Controls; Evade AV Detection. https://github.com/TryCatchHCF/Cloakify\n* **DET** (is provided AS IS), is a proof of concept to perform Data Exfiltration using either single or multiple channel(s) at the same time. https://github.com/sensepost/DET\n* **DNSExfiltrator** allows for transfering (exfiltrate) a file over a DNS request covert channel. This is basically a data leak testing tool allowing to exfiltrate data over a covert channel. https://github.com/Arno0x/DNSExfiltrator\n* **PyExfil** a Python Package for Data Exfiltration. https://github.com/ytisf/PyExfil\n* **Egress-Assess** is a tool used to test egress data detection capabilities. https://github.com/ChrisTruncer/Egress-Assess\n* **Powershell RAT** python based backdoor that uses Gmail to exfiltrate data as an e-mail attachment. https://github.com/Viralmaniar/Powershell-RAT\n\n## Misc\n### Wireless Networks\n* **Wifiphisher** is a security tool that performs Wi-Fi automatic association attacks to force wireless clients to unknowingly connect to an attacker-controlled Access Point. https://github.com/wifiphisher/wifiphisher\n* **Evilginx** is a man-in-the-middle attack framework used for phishing credentials and session cookies of any web service. https://github.com/kgretzky/evilginx\n* **mana** toolkit for wifi rogue AP attacks and MitM. https://github.com/sensepost/mana\n\n### Embedded & Peripheral Devices Hacking\n* **magspoof** a portable device that can spoof/emulate any magnetic stripe, credit card or hotel card \"wirelessly\", even on standard magstripe (non-NFC/RFID) readers. https://github.com/samyk/magspoof\n* **WarBerryPi** was built to be used as a hardware implant during red teaming scenarios where we want to obtain as much information as possible in a short period of time with being as stealth as possible. https://github.com/secgroundzero/warberry\n* **P4wnP1** is a highly customizable USB attack platform, based on a low cost Raspberry Pi Zero or Raspberry Pi Zero W (required for HID backdoor). https://github.com/mame82/P4wnP1\n* **malusb** HID spoofing multi-OS payload for Teensy. https://github.com/ebursztein/malusb\n* **Fenrir** is a tool designed to be used \"out-of-the-box\" for penetration tests and offensive engagements. Its main feature and purpose is to bypass wired 802.1x protection and to give you an access to the target network. https://github.com/Orange-Cyberdefense/fenrir-ocd\n* **poisontap** exploits locked/password protected computers over USB, drops persistent WebSocket-based backdoor, exposes internal router, and siphons cookies using Raspberry Pi Zero & Node.js. https://github.com/samyk/poisontap\n* **WHID** WiFi HID Injector - An USB Rubberducky / BadUSB On Steroids.\nhttps://github.com/whid-injector/WHID\n\n### Software For Team Communication\n* **RocketChat** is free, unlimited and open source. Replace email & Slack with the ultimate team chat software solution. https://rocket.chat\n* **Etherpad** is an open source, web-based collaborative real-time editor, allowing authors to simultaneously edit a text document https://etherpad.net\n\n### Log Aggregation\n* **RedELK** Red Team's SIEM - easy deployable tool for Red Teams used for tracking and alarming about Blue Team activities as well as better usability in long term operations. https://github.com/outflanknl/RedELK/\n* **CobaltSplunk** Splunk Dashboard for CobaltStrike logs. https://github.com/vysec/CobaltSplunk\n* **Red Team Telemetry** A collection of scripts and configurations to enable centralized logging of red team infrastructure. https://github.com/ztgrace/red_team_telemetry\n* **Elastic for Red Teaming** Repository of resources for configuring a Red Team SIEM using Elastic. https://github.com/SecurityRiskAdvisors/RedTeamSIEM\n\n### C# Offensive Framework\n* **SharpSploit** is a .NET post-exploitation library written in C# that aims to highlight the attack surface of .NET and make the use of offensive .NET easier for red teamers. https://github.com/cobbr/SharpSploit\n* **GhostPack** is (currently) a collection various C# implementations of previous PowerShell functionality, and includes six separate toolsets being released today- Seatbelt, SharpUp, SharpRoast, SharpDump, SafetyKatz, and SharpWMI. https://github.com/GhostPack\n* **SharpWeb** .NET 2.0 CLR project to retrieve saved browser credentials from Google Chrome, Mozilla Firefox and Microsoft Internet Explorer/Edge. https://github.com/djhohnstein/SharpWeb\n* **reconerator** C# Targeted Attack Reconnissance Tools. https://github.com/stufus/reconerator\n* **SharpView** C# implementation of harmj0y's PowerView. https://github.com/tevora-threat/SharpView\n* **Watson** is a (.NET 2.0 compliant) C# implementation of Sherlock. https://github.com/rasta-mouse/Watson\n\n### Labs\n* **Detection Lab** This lab has been designed with defenders in mind. Its primary purpose is to allow the user to quickly build a Windows domain that comes pre-loaded with security tooling and some best practices when it comes to system logging configurations. https://github.com/clong/DetectionLab\n* **Modern Windows Attacks and Defense Lab** This is the lab configuration for the Modern Windows Attacks and Defense class that Sean Metcalf (@pyrotek3) and I teach. https://github.com/jaredhaight/WindowsAttackAndDefenseLab\n* **Invoke-UserSimulator** Simulates common user behaviour on local and remote Windows hosts. https://github.com/ubeeri/Invoke-UserSimulator\n* **Invoke-ADLabDeployer** Automated deployment of Windows and Active Directory test lab networks. Useful for red and blue teams. https://github.com/outflanknl/Invoke-ADLabDeployer\n* **Sheepl** Creating realistic user behaviour for supporting tradecraft development within lab environments. https://github.com/SpiderLabs/sheepl\n\n### Scripts\n* **Aggressor Scripts** is a scripting language for red team operations and adversary simulations inspired by scriptable IRC clients and bots.\n  * https://github.com/invokethreatguy/CSASC\n  * https://github.com/secgroundzero/CS-Aggressor-Scripts\n  * https://github.com/Und3rf10w/Aggressor-scripts\n  * https://github.com/harleyQu1nn/AggressorScripts\n  * https://github.com/rasta-mouse/Aggressor-Script\n  * https://github.com/RhinoSecurityLabs/Aggressor-Scripts\n  * https://github.com/bluscreenofjeff/AggressorScripts\n  * https://github.com/001SPARTaN/aggressor_scripts\n  * https://github.com/360-A-Team/CobaltStrike-Toolset\n  \n* A collection scripts useful for red teaming and pentesting\n  * https://github.com/FuzzySecurity/PowerShell-Suite\n  * https://github.com/nettitude/Powershell\n  * https://github.com/Mr-Un1k0d3r/RedTeamPowershellScripts\n  * https://github.com/threatexpress/red-team-scripts\n  * https://github.com/SadProcessor/SomeStuff\n  * https://github.com/rvrsh3ll/Misc-Powershell-Scripts\n  * https://github.com/enigma0x3/Misc-PowerShell-Stuff\n  * https://github.com/ChrisTruncer/PenTestScripts\n  * https://github.com/bluscreenofjeff/Scripts\n  * https://github.com/xorrior/RandomPS-Scripts\n  * https://github.com/xorrior/Random-CSharpTools\n  * https://github.com/leechristensen/Random\n  * https://github.com/mgeeky/Penetration-Testing-Tools/tree/master/social-engineering\n\n## References\n* **MITRE’s ATT&CK™** is a curated knowledge base and model for cyber adversary behavior, reflecting the various phases of an adversary’s lifecycle and the platforms they are known to target. https://attack.mitre.org/wiki/Main_Page\n* **Cheat Sheets** for various projects (Beacon/Cobalt Strike,PowerView, PowerUp, Empire, and PowerSploit). https://github.com/HarmJ0y/CheatSheets\n* **PRE-ATT&CK** Adversarial Tactics, Techniques & Common Knowledge for Left-of-Exploit. https://attack.mitre.org/pre-attack/index.php/Main_Page\n* **Adversary OPSEC** consists of the use of various technologies or 3rd party services to obfuscate, hide, or blend in with accepted network traffic or system behavior. https://attack.mitre.org/pre-attack/index.php/Adversary_OPSEC\n* **Adversary Emulation Plans** To showcase the practical use of ATT&CK for offensive operators and defenders, MITRE created Adversary Emulation Plans. https://attack.mitre.org/wiki/Adversary_Emulation_Plans\n* **Red-Team-Infrastructure-Wiki** Wiki to collect Red Team infrastructure hardening resources. https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki\n* **Advanced Threat Tactics – Course and Notes** This is a course on red team operations and adversary simulations. https://blog.cobaltstrike.com/2015/09/30/advanced-threat-tactics-course-and-notes\n* **Red Team Tips** as posted by @vysecurity on Twitter. https://vincentyiu.co.uk/red-team-tips\n* **Awesome Red Teaming** List of Awesome Red Team / Red Teaming Resources. https://github.com/yeyintminthuhtut/Awesome-Red-Teaming\n* **ATT&CK for Enterprise Software** is a generic term for custom or commercial code, operating system utilities, open-source software, or other tools used to conduct behavior modeled in ATT&CK. https://attack.mitre.org/wiki/Software\n* **Planning a Red Team exercise** This document helps inform red team planning by contrasting against the very specific red team style described in Red Teams. https://github.com/magoo/redteam-plan\n* **Awesome Lockpicking** a curated list of awesome guides, tools, and other resources related to the security and compromise of locks, safes, and keys. https://github.com/meitar/awesome-lockpicking\n* **Awesome Threat Intelligence** a curated list of awesome Threat Intelligence resources. https://github.com/hslatman/awesome-threat-intelligence\n* **APT Notes** Need some scenario? APTnotes is a repository of publicly-available papers and blogs (sorted by year) related to malicious campaigns/activity/software that have been associated with vendor-defined APT (Advanced Persistent Threat) groups and/or tool-sets. https://github.com/aptnotes/data\n* **TIBER-EU FRAMEWORK** The European Framework for Threat Intelligence-based Ethical Red Teaming (TIBER-EU), which is the first Europe-wide framework for controlled and bespoke tests against cyber attacks in the financial market. http://www.ecb.europa.eu/pub/pdf/other/ecb.tiber_eu_framework.en.pdf\n* **CBEST Implementation Guide** CBEST is a framework to deliver controlled, bespoke, intelligence-led cyber security tests. The tests replicate behaviours of threat actors, assessed by the UK Government and commercial intelligence providers as posing a genuine threat to systemically important financial institutions.\nhttps://www.crest-approved.org/wp-content/uploads/2014/07/CBEST-Implementation-Guide.pdf\n* **Red Team: Adversarial Attack Simulation Exercise Guidelines for the Financial Industry in Singapore** The Association of Banks in Singapore (ABS), with support from the Monetary Authority of Singapore (MAS), has developed a set of cybersecurity assessment guidelines today to strengthen the cyber resilience of the financial sector in Singapore. Known as the Adversarial Attack Simulation Exercises (AASE) Guidelines or “Red Teaming” Guidelines, the Guidelines provide financial institutions (FIs) with best practices and guidance on planning and conducting Red Teaming exercises to enhance their security testing.\nhttps://abs.org.sg/docs/library/abs-red-team-adversarial-attack-simulation-exercises-guidelines-v1-06766a69f299c69658b7dff00006ed795.pdf\n\n## License\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.892578125,
          "content": "asn1crypto==0.24.0\nbase58\nbeautifulsoup4==4.5.3\ncertifi==2019.3.9\ncffi==1.12.2\ncfscrape\nchardet==3.0.4\ncheroot>=6.3.3\nclick\nclr>=1.0.3\ncodecov==2.0.15\ncolorama\ncryptography==2.6.1\ndjango\ndlib\ndnslib\nemailprotectionslib>=0.8.2\nfacebook-sdk\nface_recognition\nFlask==1.0.2\npyftpdlib\nGitPython==2.1.1\nidna==2.8\n-i https://pypi.python.org/simple\nimpacket\nimportlib==1.0.4\nipdb\nipython\nitsdangerous==0.24\nJinja2\nldap3>=2.5\nldapdomaindump\nMarkupSafe==1.0\nmatplotlib\nnetifaces\npexpect\npillow\npprint\nprogressbar\npsutil>=5.4.3\npyasn1\npycparser==2.19\npycrypto\npycryptodomex\npyopenssl==19.0.0\npytesseract\npytest-cov==2.5.1\npython-docx\npytube\npyvirtualdisplay\nqrcode\nrequests\nrjsmin\nscikit-image\nscikit-learn\nscipy\nsecretstorage\nselenium\nsimplejson\nsix==1.12.0\nslackclient\ntabulate>=0.8.1\ntermcolor==1.1.0\nterminaltables\ntexttable==0.8.7\ntldextract\ntqdm\ntruffleHogRegexes==0.0.4\nunittest2==1.1.0\nWerkzeug==0.15.3\nwsgidav>=2.4.1\n"
        },
        {
          "name": "shr3dkit.sh",
          "type": "blob",
          "size": 72.84765625,
          "content": "#!/bin/bash\n# \n#  ███████╗██╗  ██╗██████╗ ██████╗ ██████╗ ██╗  ██╗██╗████████╗\n#  ██╔════╝██║  ██║██╔══██╗╚════██╗██╔══██╗██║ ██╔╝██║╚══██╔══╝\n#  ███████╗███████║██████╔╝ █████╔╝██║  ██║█████╔╝ ██║   ██║   \n#  ╚════██║██╔══██║██╔══██╗ ╚═══██╗██║  ██║██╔═██╗ ██║   ██║   \n#  ███████║██║  ██║██║  ██║██████╔╝██████╔╝██║  ██╗██║   ██║   \n#  ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝   ╚═╝   \n#                 -Influenced by infosecn1nja-\n#                   -Script by Shr3dderSec-\n#\n# Do not use this script for assisting in illegal activity, I take no responsibility in your actions.\n# \n\n# Check theHarvester.py permissions\nperms=$(stat /usr/share/theharvester/theHarvester.py | grep -m1 'Access' | cut -d '/' -f2 | cut -d ')' -f1)\nif [ \"$perms\" == '-rw-r--r--' ]; then\n     chmod 755 /usr/share/theharvester/theHarvester.py\nfi\n\n# Updating Kali \necho -e \"Updating Kali.\"\napt update ; apt-get -y upgrade ; apt-get -y dist-upgrade ; apt-get -y autoremove ; apt-get -y autoclean ; echo\necho -e \"Installing Veil\"\napt install veil\n# Making Directories\nmkdir -p /opt/RedTeam-Toolkit/{Reconnaissance/{Active,Passive},Frameworks,Weaponization,Delivery/{Phishing},\"Command and Control\"/{\"Remote Access\",Staging},\"Lateral Movement\",\"Establish Foothold\",\"Escalate Privileges\"/{\"Domain Escalation\",\"Local Escalation\"},\"Data Exfiltration\"}\n\n# Active Intelligence Gathering\n\necho -e \"Checking Active Intelligence Gathering.\"\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Active/EyeWitness/.git ]; then\n     echo -e \"Updating EyeWitness.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Active/EyeWitness ; git pull\n     echo\nelse\n  echo -e \"Downloading EyeWitness.\"\n  git clone https://github.com/FortyNorthSecurity/EyeWitness.git /opt/RedTeam-Toolkit/Reconnaissance/Active/EyeWitness\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Active/AWSBucketDump/.git ]; then\n     echo -e \"Updating AWSBucketDump.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Active/AWSBucketDump ; git pull\n     echo\nelse\n  echo -e \"Downloading AWSBucketDump.\"\n  git clone https://github.com/jordanpotti/AWSBucketDump.git /opt/RedTeam-Toolkit/Reconnaissance/Active/EyeWitness\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Active/AWSBucketDump/.git ]; then\n     echo -e \"Updating AQUATONE.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Active/AQUATONE ; git pull\n     echo\nelse\n  echo -e \"Downloading AQUATONE.\"\n  git clone https://github.com/michenriksen/aquatone.git /opt/RedTeam-Toolkit/Reconnaissance/Active/AQUATONE\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Active/spoofcheck/.git ]; then\n     echo -e \"Updating spoofcheck.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Active/spoofcheck ; git pull\n     echo\nelse\n  echo -e \"Downloading spoofcheck.\"\n  git clone https://github.com/BishopFox/spoofcheck.git /opt/RedTeam-Toolkit/Reconnaissance/Active/spoofcheck\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Active/AWSBucketDump/.git ]; then\n     echo -e \"Updating dnsrecon.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Active/dnsrecon ; git pull\n     echo\nelse\n  echo -e \"Downloading dnsrecon.\"\n  git clone https://github.com/darkoperator/dnsrecon.git /opt/RedTeam-Toolkit/Reconnaissance/Active/spoofcheck\n  echo\nfi\n\n# Passive Intelligence Gathering\necho -e \"Checking Passive Intelligence Gathering.\"\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/social_mapper/.git ]; then\n     echo -e \"Updating Social Mapper.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/social_mapper ; git pull\n     echo\nelse\n  echo -e \"Downloading Social Mapper.\"\n  git clone https://github.com/SpiderLabs/social_mapper.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/social_mapper\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/skiptracer/.git ]; then\n     echo -e \"Updating Skiptracer.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/skiptracer ; git pull\n     echo\nelse\n  echo -e \"Downloading Skiptracer.\"\n  git clone https://github.com/xillwillx/skiptracer.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/skiptracer\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/ScrapedIn/.git ]; then\n     echo -e \"Updating ScrapedIn.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/ScrapedIn ; git pull\n     echo\nelse\n  echo -e \"Downloading ScrapedIn.\"\n  git clone https://github.com/dchrastil/ScrapedIn.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/ScrapedIn\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/linkScrape/.git ]; then\n     echo -e \"Updating linkScrape.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/linkScrape ; git pull\n     echo\nelse\n  echo -e \"Downloading linkScrape.\"\n  git clone https://github.com/NickSanzotta/linkScrape.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/linkScrape\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/FOCA/.git ]; then\n     echo -e \"Updating FOCA.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/FOCA ; git pull\n     echo\nelse\n  echo -e \"Downloading FOCA.\"\n  git clone https://github.com/ElevenPaths/FOCA.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/linkScrape\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/metagoofil/.git ]; then\n     echo -e \"Updating Metagoofil.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/metagoofil ; git pull\n     echo\nelse\n  echo -e \"Downloading Metagoofil.\"\n  git clone https://github.com/laramies/metagoofil.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/metagoofil\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/SimplyEmail/.git ]; then\n     echo -e \"Updating SimplyEmail.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/SimplyEmail ; git pull\n     echo\nelse\n  echo -e \"Downloading SimplyEmail.\"\n  git clone https://github.com/SimplySecurity/SimplyEmail.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/SimplyEmail\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/truffleHog/.git ]; then\n     echo -e \"Updating truffleHog.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/truffleHog ; git pull\n     echo\nelse\n  echo -e \"Downloading truffleHog.\"\n  git clone https://github.com/dxa4481/truffleHog.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/truffleHog\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/Just-Metadata/.git ]; then\n     echo -e \"Updating Just-Metadata.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/Just-Metadata ; git pull\n     echo\nelse\n  echo -e \"Downloading Just-Metadata.\"\n  git clone https://github.com/FortyNorthSecurity/Just-Metadata.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/Just-Metadata\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/typofinder/.git ]; then\n     echo -e \"Updating typofinder.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/typofinder ; git pull\n     echo\nelse\n  echo -e \"Downloading typofinder.\"\n  git clone https://github.com/nccgroup/typofinder.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/typofinder\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwnedOrNot/.git ]; then\n     echo -e \"Updating pwnedOrNot.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwnedOrNot ; git pull\n     echo\nelse\n  echo -e \"Downloading pwnedOrNot.\"\n  git clone https://github.com/thewhiteh4t/pwnedOrNot.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwnedOrNot\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/GitHarvester/.git ]; then\n     echo -e \"Updating GitHarvester.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/GitHarvester ; git pull\n     echo\nelse\n  echo -e \"Downloading GitHarvester.\"\n  git clone https://github.com/metac0rtex/GitHarvester.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/GitHarvester\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwndb/.git ]; then\n     echo -e \"Updating pwndb.\"\n     cd /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwndb ; git pull\n     echo\nelse\n  echo -e \"Downloading pwnndb.\"\n  git clone https://github.com/davidtavarez/pwndb.git /opt/RedTeam-Toolkit/Reconnaissance/Passive/pwndb\n  echo\nfi\n\n# Reconnaissance Frameworks\n\necho -e \"Checking Frameworks.\"\n\nif [ -d /opt/RedTeam-Toolkit/Frameworks/spiderfoot/.git ]; then\n     echo -e \"Updating SpiderFoot.\"\n     cd /opt/RedTeam-Toolkit/Frameworks/spiderfoot ; git pull\n     echo\nelse\n  echo -e \"Downloading SpiderFoot.\"\n  git clone https://github.com/smicallef/spiderfoot.git /opt/RedTeam-Toolkit/Frameworks/spiderfoot\n  echo\n  echo -e \"Grabbing pip3 Requirements.\"\n  cd /opt/RedTeam-Toolkit/Frameworks/spiderfoot ; pip3 install -r requirements.txt\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Frameworks/datasploit/.git ]; then\n     echo -e \"Updating datasploit.\"\n     cd /opt/RedTeam-Toolkit/Frameworks/datasploit ; git pull\n     echo\nelse\n  echo -e \"Downloading datasploit.\"\n  git clone https://github.com/DataSploit/datasploit.git /opt/RedTeam-Toolkit/Frameworks/datasploit\n  echo\nfi\n\n# Weaponization (Exploits)\n\necho -e \"Checking Exploits.\"\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8570/.git ]; then\n     echo -e \"Updating CVE-2017-8570.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8570 ; git pull\n     echo\nelse\n  echo -e \"Downloading CVE-2017-8570.\"\n  git clone https://github.com/rxwx/CVE-2017-8570.git /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8570\n  echo\nfi\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8759/.git ]; then\n     echo -e \"Updating Exploit toolkit CVE-2017-8759.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8759 ; git pull\n     echo\nelse\n  echo -e \"Downloading Exploit toolkit CVE-2017-8759.\"\n  git clone https://github.com/bhdresh/CVE-2017-8759.git /opt/RedTeam-Toolkit/Weaponization/CVE-2017-8759\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CVE-2017-11882/.git ]; then\n     echo -e \"Updating Exploit toolkit CVE-2017-11882.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CVE-2017-11882 ; git pull\n     echo\nelse\n  echo -e \"Downloading Exploit toolkit CVE-2017-11882.\"\n  git clone https://github.com/unamer/CVE-2017-11882.git /opt/RedTeam-Toolkit/Weaponization/CVE-2017-11882\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CVE-2018-4878/.git ]; then\n     echo -e \"Updating Adobe Flash Exploit.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CVE-2018-4878 ; git pull\n     echo\nelse\n  echo -e \"Downloading Adobe Flash Exploit.\"\n  git clone https://github.com/anbai-inc/CVE-2018-4878.git /opt/RedTeam-Toolkit/Weaponization/CVE-2018-4878\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CVE-2017-0199/.git ]; then\n     echo -e \"Updating Exploit toolkit CVE-2017-0199.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CVE-2017-0199 ; git pull\n     echo\nelse\n  echo -e \"Downloading Exploit toolkit CVE-2017-0199.\"\n  git clone https://github.com/bhdresh/CVE-2017-0199.git /opt/RedTeam-Toolkit/Weaponization/CVE-2017-0199\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/demiguise/.git ]; then\n     echo -e \"Updating demiguise.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/demiguise ; git pull\n     echo\nelse\n  echo -e \"Downloading demiguise.\"\n  git clone https://github.com/nccgroup/demiguise.git /opt/RedTeam-Toolkit/Weaponization/demiguise\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Office-DDE-Payloads/.git ]; then\n     echo -e \"Updating Office-DDE-Payloads.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Office-DDE-Payloads ; git pull\n     echo\nelse\n  echo -e \"Downloading Office-DDE-Payloads.\"\n  git clone https://github.com/0xdeadbeefJERKY/Office-DDE-Payloads.git /opt/RedTeam-Toolkit/Weaponization/Office-DDE-Payloads\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CACTUSTORCH/.git ]; then\n     echo -e \"Updating CACTUSTORCH.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CACTUSTORCH ; git pull\n     echo\nelse\n  echo -e \"Downloading CACTUSTORCH.\"\n  git clone https://github.com/mdsecactivebreach/CACTUSTORCH.git /opt/RedTeam-Toolkit/Weaponization/CACTUSTORCH\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/SharpShooter/.git ]; then\n     echo -e \"Updating SharpShooter.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/SharpShooter ; git pull\n     echo\nelse\n  echo -e \"Downloading SharpShooter.\"\n  git clone https://github.com/mdsecactivebreach/SharpShooter.git /opt/RedTeam-Toolkit/Weaponization/SharpShooter\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/DKMC/.git ]; then\n     echo -e \"Updating Don't kill my cat.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/DKMC ; git pull\n     echo\nelse\n  echo -e \"Downloading Don't kill my cat.\"\n  git clone https://github.com/Mr-Un1k0d3r/DKMC.git /opt/RedTeam-Toolkit/Weaponization/DKMC\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroGenerator/.git ]; then\n     echo -e \"Updating Malicious Macro Generator Utility.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroGenerator ; git pull\n     echo\nelse\n  echo -e \"Downloading Malicious Macro Generator Utility.\"\n  git clone https://github.com/Mr-Un1k0d3r/MaliciousMacroGenerator.git /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroGenerator\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/SCT-obfuscator/.git ]; then\n     echo -e \"Updating SCT Obfuscator.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/SCT-obfuscator ; git pull\n     echo\nelse\n  echo -e \"Downloading SCT Obfuscator.\"\n  git clone https://github.com/Mr-Un1k0d3r/SCT-obfuscator.git /opt/RedTeam-Toolkit/Weaponization/SCT-obfuscator\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Invoke-Obfuscation/.git ]; then\n     echo -e \"Updating Invoke-Obfuscation.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Invoke-Obfuscation; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-Obfuscation.\"\n  git clone https://github.com/danielbohannon/Invoke-Obfuscation.git /opt/RedTeam-Toolkit/Weaponization/Invoke-Obfuscation\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Invoke-DOSfuscation/.git ]; then\n     echo -e \"Updating Invoke-DOSfuscation.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Invoke-Obfuscation; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-DOSfuscation.\"\n  git clone https://github.com/danielbohannon/Invoke-DOSfuscation.git /opt/RedTeam-Toolkit/Weaponization/Invoke-DOSfuscation\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/morphHTA/.git ]; then\n     echo -e \"Updating morphHTA.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/morphHTA; git pull\n     echo\nelse\n  echo -e \"Downloading morphHTA.\"\n  git clone https://github.com/vysec/morphHTA.git /opt/RedTeam-Toolkit/Weaponization/morphHTA\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/unicorn/.git ]; then\n     echo -e \"Updating Unicorn.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/unicorn; git pull\n     echo\nelse\n  echo -e \"Downloading Unicorn.\"\n  git clone https://github.com/trustedsec/unicorn.git /opt/RedTeam-Toolkit/Weaponization/unicorn\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/EmbedInHTML/.git ]; then\n     echo -e \"Updating EmbedInHTML.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/EmbedInHTML; git pull\n     echo\nelse\n  echo -e \"Downloading EmbedInHTML.\"\n  git clone https://github.com/Arno0x/EmbedInHTML.git /opt/RedTeam-Toolkit/Weaponization/EmbedInHTML\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/SigThief/.git ]; then\n     echo -e \"Updating SigThief.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/SigThief; git pull\n     echo\nelse\n  echo -e \"Downloading SigThief.\"\n  git clone https://github.com/secretsquirrel/SigThief.git /opt/RedTeam-Toolkit/Weaponization/SigThief\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/CheckPlease/.git ]; then\n     echo -e \"Updating CheckPlease.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/CheckPlease; git pull\n     echo\nelse\n  echo -e \"Downloading CheckPlease.\"\n  git clone https://github.com/Arvanaghi/CheckPlease.git /opt/RedTeam-Toolkit/Weaponization/CheckPlease\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Invoke-PSImage/.git ]; then\n     echo -e \"Updating Invoke-PSImage.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Invoke-PSImage; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-PSImage.\"\n  git clone https://github.com/peewpw/Invoke-PSImage.git /opt/RedTeam-Toolkit/Weaponization/Invoke-PSImage\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/LuckyStrike/.git ]; then\n     echo -e \"Updating LuckyStrike.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/LuckyStrike; git pull\n     echo\nelse\n  echo -e \"Downloading LuckyStrike.\"\n  git clone https://github.com/curi0usJack/luckystrike.git /opt/RedTeam-Toolkit/Weaponization/LuckyStrike\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/ClickOnceGenerator/.git ]; then\n     echo -e \"Updating ClickOnceGenerator.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/ClickOnceGenerator; git pull\n     echo\nelse\n  echo -e \"Downloading ClickOnceGenerator.\"\n  git clone https://github.com/Mr-Un1k0d3r/ClickOnceGenerator.git /opt/RedTeam-Toolkit/Weaponization/ClickOnceGenerator\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/macro_pack/.git ]; then\n     echo -e \"Updating macro_pack.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/macro_pack; git pull\n     echo\nelse\n  echo -e \"Downloading macro_pack.\"\n  git https://github.com/sevagas/macro_pack.git /opt/RedTeam-Toolkit/Weaponization/macro_pack\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/StarFighters/.git ]; then\n     echo -e \"Updating StarFighters.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/StarFighters; git pull\n     echo\nelse\n  echo -e \"Downloading StarFighters.\"\n  git clone https://github.com/Cn33liz/StarFighters.git /opt/RedTeam-Toolkit/Weaponization/StarFighters\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/StarFighters/.git ]; then\n     echo -e \"Updating StarFighters.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/StarFighters; git pull\n     echo\nelse\n  echo -e \"Downloading StarFighters.\"\n  git clone https://github.com/Cn33liz/StarFighters.git /opt/RedTeam-Toolkit/Weaponization/StarFighters\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/nps_payload/.git ]; then\n     echo -e \"Updating nps_payload.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/nps_payload; git pull\n     echo\nelse\n  echo -e \"Downloading nps_payload.\"\n  git clone https://github.com/trustedsec/nps_payload.git /opt/RedTeam-Toolkit/Weaponization/nps_payload\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/SocialEngineeringPayloads/.git ]; then\n     echo -e \"Updating SocialEngineeringPayloads.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/SocialEngineeringPayloads ; git pull\n     echo\nelse\n  echo -e \"Downloading SocialEngineeringPayloads.\"\n  git clone https://github.com/bhdresh/SocialEngineeringPayloads.git /opt/RedTeam-Toolkit/Weaponization/SocialEngineeringPayloads\n  echo\nfi\n\n# Removed Social-Engineer Toolkit - type setoolkit in terminal\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/phishery/.git ]; then\n     echo -e \"Updating phishery.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/phishery ; git pull\n     echo\nelse\n  echo -e \"Downloading phishery.\"\n  git clone https://github.com/ryhanson/phishery.git /opt/RedTeam-Toolkit/Weaponization/phishery\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/PowerShdll/.git ]; then\n     echo -e \"Updating PowerShdll.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/PowerShdll ; git pull\n     echo\nelse\n  echo -e \"Downloading PowerShdll.\"\n  git clone https://github.com/p3nt4/PowerShdll.git /opt/RedTeam-Toolkit/Weaponization/PowerShdll\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/UltimateAppLockerByPassList/.git ]; then\n     echo -e \"Updating Ultimate AppLocker ByPass List.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/UltimateAppLockerByPassList ; git pull\n     echo\nelse\n  echo -e \"Downloading Ultimate AppLocker ByPass List.\"\n  git clone https://github.com/api0cradle/UltimateAppLockerByPassList.git /opt/RedTeam-Toolkit/Weaponization/UltimateAppLockerByPassList\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Ruler/.git ]; then\n     echo -e \"Updating Ruler.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Ruler ; git pull\n     echo\nelse\n  echo -e \"Downloading Ruler.\"\n  git clone https://github.com/sensepost/ruler.git /opt/RedTeam-Toolkit/Weaponization/Ruler\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Ruler/.git ]; then\n     echo -e \"Updating Ruler.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Ruler ; git pull\n     echo\nelse\n  echo -e \"Downloading Ruler.\"\n  git clone https://github.com/sensepost/ruler.git /opt/RedTeam-Toolkit/Weaponization/Ruler\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Generate-Macro/.git ]; then\n     echo -e \"Updating Generate-Macro.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Generate-Macro ; git pull\n     echo\nelse\n  echo -e \"Downloading Generate-Macro.\"\n  git clone https://github.com/enigma0x3/Generate-Macro.git /opt/RedTeam-Toolkit/Weaponization/Generate-Macro\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroMSBuild/.git ]; then\n     echo -e \"Updating Malicious Macro MSBuild Generator.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroMSBuild ; git pull\n     echo\nelse\n  echo -e \"Downloading Malicious Macro MSBuild Generator.\"\n  git clone https://github.com/infosecn1nja/MaliciousMacroMSBuild.git /opt/RedTeam-Toolkit/Weaponization/MaliciousMacroMSBuild\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/metatwin/.git ]; then\n     echo -e \"Updating Meta Twin.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/metatwin ; git pull\n     echo\nelse\n  echo -e \"Downloading Meta Twin.\"\n  git clone https://github.com/threatexpress/metatwin.git /opt/RedTeam-Toolkit/Weaponization/metatwin\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/WePWNise/.git ]; then\n     echo -e \"Updating wePWNise.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/WePWNise ; git pull\n     echo\nelse\n  echo -e \"Downloading wePWNise.\"\n  git clone https://github.com/mwrlabs/wePWNise.git /opt/RedTeam-Toolkit/Weaponization/WePWNise\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/DotNetToJScript/.git ]; then\n     echo -e \"Updating DotNetToJScript.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/DotNetToJScript ; git pull\n     echo\nelse\n  echo -e \"Downloading DotNetToJScript.\"\n  git clone https://github.com/tyranid/DotNetToJScript.git /opt/RedTeam-Toolkit/Weaponization/DotNetToJScript\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/PSAmsi/.git ]; then\n     echo -e \"Updating PSAmsi.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/PSAmsi; git pull\n     echo\nelse\n  echo -e \"Downloading PSAmsi.\"\n  git clone https://github.com/cobbr/PSAmsi.git /opt/RedTeam-Toolkit/Weaponization/PSAmsi\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/ReflectiveDLLInjection/.git ]; then\n     echo -e \"Updating Reflective DLL injection.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/ReflectiveDLLInjection ; git pull\n     echo\nelse\n  echo -e \"Downloading Reflective DLL injection.\"\n  git clone https://github.com/stephenfewer/ReflectiveDLLInjection.git /opt/RedTeam-Toolkit/Weaponization/ReflectiveDLLInjection\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/ps1encode/.git ]; then\n     echo -e \"Updating ps1encode.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/ps1encode ; git pull\n     echo\nelse\n  echo -e \"Downloading ps1encode.\"\n  git clone https://github.com/CroweCybersecurity/ps1encode.git /opt/RedTeam-Toolkit/Weaponization/ps1encode\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Worse-PDF/.git ]; then\n     echo -e \"Updating Worse PDF.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Worse-PDF ; git pull\n     echo\nelse\n  echo -e \"Downloading Worse PDF.\"\n  git clone https://github.com/3gstudent/Worse-PDF.git /opt/RedTeam-Toolkit/Weaponization/Worse-PDF\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/SpookFlareF/.git ]; then\n     echo -e \"Updating SpookFlare.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/SpookFlare ; git pull\n     echo\nelse\n  echo -e \"Downloading SpookFlare.\"\n  git clone https://github.com/hlldz/SpookFlare.git /opt/RedTeam-Toolkit/Weaponization/SpookFlare\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/GreatSCT/.git ]; then\n     echo -e \"Updating GreatSCT.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/GreatSCT ; git pull\n     echo\nelse\n  echo -e \"Downloading GreatSCT.\"\n  git clone https://github.com/GreatSCT/GreatSCT.git /opt/RedTeam-Toolkit/Weaponization/GreatSCT\n  echo\n  echo -e \"Running Setup.\"\n  cd /opt/RedTeam-Toolkit/Weaponization/GreatSCT/setup ; /usr/bin/bash setup.sh -c\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/nps/.git ]; then\n     echo -e \"Updating nps.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/nps ; git pull\n     echo\nelse\n  echo -e \"Downloading nps.\"\n  git clone https://github.com/Ben0xA/nps.git /opt/RedTeam-Toolkit/Weaponization/nps\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Meterpreter_Paranoid_Mode-SSL/.git ]; then\n     echo -e \"Updating Meterpreter_Paranoid_Mode-SSL.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Meterpreter_Paranoid_Mode-SSL; git pull\n     echo\nelse\n  echo -e \"Downloading Meterpreter_Paranoid_Mode-SSL.\"\n  git clone https://github.com/r00t-3xp10it/Meterpreter_Paranoid_Mode-SSL.git /opt/RedTeam-Toolkit/Weaponization/Meterpreter_Paranoid_Mode-SSL\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/MacroShop/.git ]; then\n     echo -e \"Updating MacroShop.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/MacroShop; git pull\n     echo\nelse\n  echo -e \"Downloading MacroShop.\"\n  git clone https://github.com/khr0x40sh/MacroShop.git /opt/RedTeam-Toolkit/Weaponization/MacroShop\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/UnmanagedPowerShell/.git ]; then\n     echo -e \"Updating UnmanagedPowerShell.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/UnmanagedPowerShell; git pull\n     echo\nelse\n  echo -e \"Downloading UnmanagedPowerShell.\"\n  git clone https://github.com/leechristensen/UnmanagedPowerShell /opt/RedTeam-Toolkit/Weaponization/UnmanagedPowerShell\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/evil-ssdp/.git ]; then\n     echo -e \"Updating evil-ssdp.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/evil-ssdp; git pull\n     echo\nelse\n  echo -e \"Downloading evil-ssdp.\"\n  git clone https://gitlab.com/initstring/evil-ssdp.git /opt/RedTeam-Toolkit/Weaponization/evil-ssdp\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Ebowla/.git ]; then\n     echo -e \"Updating Ebowla.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Ebowla; git pull\n     echo\nelse\n  echo -e \"Downloading Ebowla.\"\n  git clone https://github.com/Genetic-Malware/Ebowla.git /opt/RedTeam-Toolkit/Weaponization/Ebowla\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/make-pdf-embedded/make-pdf-embedded.py ]; then\n     echo -e \"Skipping make-pdf-embedded, file is here.\"\nelse\n  echo -e \"Downloading make-pdf-embedded.\"\n  wget https://raw.githubusercontent.com/DidierStevens/DidierStevensSuite/master/make-pdf-embedded.py -O/opt/RedTeam-Toolkit/Weaponization/make-pdf-embedded/make-pdf-embedded.py\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/avet/.git ]; then\n     echo -e \"Updating avet (AntiVirusEvasionTool).\"\n     cd /opt/RedTeam-Toolkit/Weaponization/avet; git pull\n     echo\nelse\n  echo -e \"Downloading avet (AntiVirusEvasionTool).\"\n  git clone https://github.com/govolution/avet.git /opt/RedTeam-Toolkit/Weaponization/avet\n  echo\n  echo -e \"Beginning avet's Setup.\"\n  /usr/bin/bash /opt/RedTeam-Toolkit/Weaponization/avet/setup.sh\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Weaponization/Invoke-CradleCrafter/.git ]; then\n     echo -e \"Updating Invoke-CradleCrafter.\"\n     cd /opt/RedTeam-Toolkit/Weaponization/Invoke-CradleCrafter; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-CradleCrafter.\"\n  git clone https://github.com/danielbohannon/Invoke-CradleCrafter /opt/RedTeam-Toolkit/Weaponization/Invoke-CradleCrafter\n  echo\nfi\n\n# Delivery\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/king-phisher/.git ]; then\n     echo -e \"Updating King Phisher.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/king-phisher; git pull\n     echo\nelse\n  echo -e \"Downloading king-phisher.\"\n  git clone https://github.com/securestate/king-phisher.git /opt/RedTeam-Toolkit/Delivery/Phishing/king-phisher\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/FiercePhish/.git ]; then\n     echo -e \"Updating FiercePhish.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/FiercePhish; git pull\n     echo\nelse\n  echo -e \"Downloading FiercePhish.\"\n  git clone https://github.com/Raikia/FiercePhish.git /opt/RedTeam-Toolkit/Delivery/Phishing/FiercePhish\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/ReelPhish/.git ]; then\n     echo -e \"Updating ReelPhish.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/ReelPhish; git pull\n     echo\nelse\n  echo -e \"Downloading ReelPhish.\"\n  git clone https://github.com/fireeye/ReelPhish.git /opt/RedTeam-Toolkit/Delivery/Phishing/ReelPhish\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/CredSniper/.git ]; then\n     echo -e \"Updating CredSniper.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/CredSniper; git pull\n     echo\nelse\n  echo -e \"Downloading CredSniper.\"\n  git clone https://github.com/ustayready/CredSniper.git /opt/RedTeam-Toolkit/Delivery/Phishing/CredSniper\n  echo\n  echo -e \"Please check the directory and run the install.sh.\"\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/PwnAuth/.git ]; then\n     echo -e \"Updating PwnAuth.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/PwnAuth; git pull\n     echo\nelse\n  echo -e \"Downloading PwnAuth.\"\n  git clone https://github.com/fireeye/PwnAuth.git /opt/RedTeam-Toolkit/Delivery/Phishing/PwnAuth\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/phishing-frenzy/.git ]; then\n     echo -e \"Updating phishing-frenzy.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/phishing-frenzy; git pull\n     echo\nelse\n  echo -e \"Downloading phishing-frenzy.\"\n  git clone https://github.com/pentestgeek/phishing-frenzy.git /opt/RedTeam-Toolkit/Delivery/Phishing/phishing-frenzy\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts/.git ]; then\n     echo -e \"Updating PhishingPretexts.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts; git pull\n     echo\nelse\n  echo -e \"Downloading PhishingPretexts.\"\n  git clone https://github.com/L4bF0x/PhishingPretexts.git /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts/.git ]; then\n     echo -e \"Updating PhishingPretexts.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts; git pull\n     echo\nelse\n  echo -e \"Downloading PhishingPretexts.\"\n  git clone https://github.com/L4bF0x/PhishingPretexts.git /opt/RedTeam-Toolkit/Delivery/Phishing/PhishingPretexts\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/Delivery/Phishing/Modlishka/.git ]; then\n     echo -e \"Updating Modlishka.\"\n     cd /opt/RedTeam-Toolkit/Delivery/Phishing/Modlishka; git pull\n     echo\nelse\n  echo -e \"Downloading Modlishka.\"\n  git clone https://github.com/drk1wi/Modlishka.git /opt/RedTeam-Toolkit/Delivery/Phishing/Modlishka\n  echo\nfi\n\n#BeEF pre-installed in Kali | skipping\n\n##Command and Control##\n#Remote Access Tools#\n#File Path - \"Command and Control\"/\"Remote Access\"\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Empire/.git ]; then\n     echo -e \"Updating Empire.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Empire/; git pull\n     echo\nelse\n  echo -e \"Downloading Empire.\"\n  git clone https://github.com/EmpireProject/Empire.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Empire/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/SILENTTRINITY/.git ]; then\n     echo -e \"Updating SILENTTRINITY.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/SILENTTRINITY/; git pull\n     echo\nelse\n  echo -e \"Downloading SILENTTRINITY.\"\n  git clone https://github.com/byt3bl33d3r/SILENTTRINITY.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/SILENTTRINITY/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Pupy/.git ]; then\n     echo -e \"Updating Pupy.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Pupy/; git pull\n     echo\nelse\n  echo -e \"Downloading pupy.\"\n  git clone https://github.com/n1nj4sec/pupy.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Pupy/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Koadic/.git ]; then\n     echo -e \"Updating Koadic.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Koadic/; git pull\n     echo\nelse\n  echo -e \"Downloading Koadic.\"\n  git clone https://github.com/zerosum0x0/koadic.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/koadic/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/PoshC2_Python/.git ]; then\n     echo -e \"Updating PoshC2_Python.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/PoshC2_Python/; git pull\n     echo\nelse\n  echo -e \"Downloading PoshC2_Python.\"\n  git clone https://github.com/nettitude/PoshC2_Python.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/PoshC2_Python/\n  echo\n  git clone https://github.com/nettitude/PoshC2_Python.git /opt/Poshc2_Python\n  echo -e \"Installing PoshC2_Python.\"\n  /usr/bin/bash \"/opt/RedTeam-Toolkit/Command and Control/Remote Access/PoshC2_Python/Install.sh\"\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/gcat/.git ]; then\n     echo -e \"Updating Gcat.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/gcat/; git pull\n     echo\nelse\n  echo -e \"Downloading Gcat.\"\n  git clone https://github.com/byt3bl33d3r/gcat.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/gcat/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/trevorc2/.git ]; then\n     echo -e \"Updating TrevorC2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/trevorc2/; git pull\n     echo\nelse\n  echo -e \"Downloading TrevorC2.\"\n  git clone https://github.com/trustedsec/trevorc2.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/trevorc2/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/merlin/.git ]; then\n     echo -e \"Updating Merlin.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/merlin/; git pull\n     echo\nelse\n  echo -e \"Downloading Merlin.\"\n  git clone https://github.com/Ne0nd0g/merlin.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/merlin/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Covenant/.git ]; then\n     echo -e \"Updating Covenant.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Covenant/; git pull\n     echo\nelse\n  echo -e \"Downloading Covenant.\"\n  git clone https://github.com/cobbr/Covenant.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/Covenant/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/QuasarRAT/.git ]; then\n     echo -e \"Updating Quasar.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/QuasarRAT/; git pull\n     echo\nelse\n  echo -e \"Downloading Quasar.\"\n  git clone https://github.com/quasar/QuasarRAT.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/QuasarRAT/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/FactionC2/.git ]; then\n     echo -e \"Updating FactionC2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/FactionC2/; git pull\n     echo\nelse\n  echo -e \"Downloading FactionC2.\"\n  git clone https://github.com/FactionC2.git /opt/RedTeam-Toolkit/\"Command and Control\"/\"Remote Access\"/FactionC2/\n  echo\nfi\n\n#Staging\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RAI/.git ]; then\n     echo -e \"Updating Rapid Attack Infrastructure (RAI).\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RAI/; git pull\n     echo\nelse\n  echo -e \"Downloading Rapid Attack Infrastructure (RAI).\"\n  git clone https://github.com/obscuritylabs/RAI.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RAI/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Red-Baron/.git ]; then\n     echo -e \"Updating Red Baron.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Red-Baron/; git pull\n     echo\nelse\n  echo -e \"Downloading Red Baron.\"\n  git clone https://github.com/byt3bl33d3r/Red-Baron.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Red-Baron/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/EvilURL/.git ]; then\n     echo -e \"Updating EvilURL.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/EvilURL/; git pull\n     echo\nelse\n  echo -e \"Downloading EvilURL.\"\n  git clone https://github.com/UndeadSec/EvilURL /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/EvilURL/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/domainhunter/.git ]; then\n     echo -e \"Updating Domain Hunter.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/domainhunter/; git pull\n     echo\nelse\n  echo -e \"Downloading Domain Hunter.\"\n  git clone https://github.com/threatexpress/domainhunter.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/domainhunter/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/PowerDNS/.git ]; then\n     echo -e \"Updating PowerDNS.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/PowerDNS/; git pull\n     echo\nelse\n  echo -e \"Downloading PowerDNS.\"\n  git clone https://github.com/mdsecactivebreach/PowerDNS.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/PowerDNS/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/.git ]; then\n     echo -e \"Updating Chameleon.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/; git pull\n     echo\nelse\n  echo -e \"Downloading Chameleon.\"\n  git clone https://github.com/mdsecactivebreach/Chameleon.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/.git ]; then\n     echo -e \"Updating Chameleon.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/; git pull\n     echo\nelse\n  echo -e \"Downloading Chameleon.\"\n  git clone https://github.com/mdsecactivebreach/Chameleon.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Chameleon/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/.git ]; then\n     echo -e \"Updating CatMyPhish.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/; git pull\n     echo\nelse\n  echo -e \"Downloading CatMyPhish.\"\n  git clone https://github.com/Mr-Un1k0d3r/CatMyPhish.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/.git ]; then\n     echo -e \"Updating CatMyPhish.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/; git pull\n     echo\nelse\n  echo -e \"Downloading CatMyPhish.\"\n  git clone https://github.com/Mr-Un1k0d3r/CatMyPhish.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CatMyPhish/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Profiles/.git ]; then\n     echo -e \"Updating Malleable C2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Profiles/; git pull\n     echo\nelse\n  echo -e \"Downloading Malleable C2.\"\n  git clone https://github.com/rsmudge/Malleable-C2-Profiles.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Profiles/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Profiles/.git ]; then\n     echo -e \"Updating Malleable-C2-Randomizer.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Randomizer/; git pull\n     echo\nelse\n  echo -e \"Downloading Malleable-C2-Randomizer.\"\n  git clone https://github.com/bluscreenofjeff/Malleable-C2-Randomizer.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Malleable-C2-Randomizer/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/FindFrontableDomains/.git ]; then\n     echo -e \"Updating FindFrontableDomains.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/FindFrontableDomains/; git pull\n     echo\nelse\n  echo -e \"Downloading FindFrontableDomains.\"\n  git clone https://github.com/rvrsh3ll/FindFrontableDomains.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/FindFrontableDomains/\n  echo\n  /usr/bin/bash /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/FindFrontableDomains/setup.sh\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Postfix-Server-Setup/.git ]; then\n     echo -e \"Updating Postfix-Server-Setup.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Postfix-Server-Setup/; git pull\n     echo\nelse\n  echo -e \"Downloading Postfix-Server-Setup.\"\n  git clone https://github.com/n0pe-sled/Postfix-Server-Setup.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Postfix-Server-Setup/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontingLists/.git ]; then\n     echo -e \"Updating DomainFrontingLists.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontingLists/; git pull\n     echo\nelse\n  echo -e \"Downloading DomainFrontingLists.\"\n  git clone https://github.com/vysecurity/DomainFrontingLists.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontingLists/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Apache2-Mod-Rewrite-Setup/.git ]; then\n     echo -e \"Updating Apache2-Mod-Rewrite-Setup.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Apache2-Mod-Rewrite-Setup/; git pull\n     echo\nelse\n  echo -e \"Downloading Apache2-Mod-Rewrite-Setup.\"\n  git clone https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Apache2-Mod-Rewrite-Setup/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/mod_rewrite/.htaccess ]; then\n     echo -e \"Script is there; skipping.\"\nelse\n  echo -e \"Downloading Apache2-Mod-Rewrite-Setup.\"\n  git clone https://github.com/n0pe-sled/Apache2-Mod-Rewrite-Setup.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Apache2-Mod-Rewrite-Setup/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/external_c2 framework/.git ]; then\n     echo -e \"Updating external_c2_framework.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/external_c2_framework/; git pull\n     echo\nelse\n  echo -e \"Downloading external_c2_framework.\"\n  git clone https://github.com/Und3rf10w/external_c2_framework.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/external_c2_framework/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/external_c2 framework/.git ]; then\n     echo -e \"Updating ExternalC2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/ExternalC2/; git pull\n     echo\nelse\n  echo -e \"Downloading ExternalC2.\"\n  git clone https://github.com/ryhanson/ExternalC2.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/ExternalC2/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/.git ]; then\n     echo -e \"Updating cs2modrewrite.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/; git pull\n     echo\nelse\n  echo -e \"Downloading cs2modrewrite.\"\n  git clone https://github.com/threatexpress/cs2modrewrite.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/.git ]; then\n     echo -e \"Updating cs2modrewrite.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/; git pull\n     echo\nelse\n  echo -e \"Downloading cs2modrewrite.\"\n  git clone https://github.com/threatexpress/cs2modrewrite.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cs2modrewrite/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/e2modrewrite/.git ]; then\n     echo -e \"Updating cs2modrewrite.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/e2modrewrite/; git pull\n     echo\nelse\n  echo -e \"Downloading cs2modrewrite.\"\n  git clone https://github.com/infosecn1nja/e2modrewrite.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/e2modrewrite/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/redi/.git ]; then\n     echo -e \"Updating redi.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/redi/; git pull\n     echo\nelse\n  echo -e \"Downloading redi.\"\n  git clone https://github.com/taherio/redi.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/redi/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/.git ]; then\n     echo -e \"Updating Google-Domain-fronting.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/; git pull\n     echo\nelse\n  echo -e \"Downloading Google-Domain-fronting.\"\n  git clone https://github.com/redteam-cyberark/Google-Domain-fronting.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/.git ]; then\n     echo -e \"Updating Google-Domain-fronting.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/; git pull\n     echo\nelse\n  echo -e \"Downloading Google-Domain-fronting.\"\n  git clone https://github.com/redteam-cyberark/Google-Domain-fronting.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/Google-Domain-fronting/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontDiscover/.git ]; then\n     echo -e \"Updating DomainFrontDiscover.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontDiscover/; git pull\n     echo\nelse\n  echo -e \"Downloading DomainFrontDiscover.\"\n  git clone https://github.com/redteam-cyberark/DomainFrontDiscover.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DomainFrontDiscover/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedTeam-Automation/.git ]; then\n     echo -e \"Updating Automated Empire Infrastructure.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedTeam-Automation/; git pull\n     echo\nelse\n  echo -e \"Downloading Automated Empire Infrastructure.\"\n  git clone https://github.com/bneg/RedTeam-Automation.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedTeam-Automation/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/.git ]; then\n     echo -e \"Updating meek.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/; git pull\n     echo\nelse\n  echo -e \"Downloading meek.\"\n  git clone https://github.com/arlolra/meek.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/.git ]; then\n     echo -e \"Updating meek.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/; git pull\n     echo\nelse\n  echo -e \"Downloading meek.\"\n  git clone https://github.com/arlolra/meek.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/meek/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/.git ]; then\n     echo -e \"Updating CobaltStrike-ToolKit.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/; git pull\n     echo\nelse\n  echo -e \"Downloading CobaltStrike-ToolKit.\"\n  git clone https://github.com/killswitch-GUI/CobaltStrike-ToolKit.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/mkhtaccess_red/.git ]; then\n     echo -e \"Updating mkhtaccess_red.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/mkhtaccess_red/; git pull\n     echo\nelse\n  echo -e \"Downloading mkhtaccess_red.\"\n  git clone https://github.com/violentlydave/mkhtaccess_red.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/mkhtaccess_red/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedFile/.git ]; then\n     echo -e \"Updating RedFile.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedFile/; git pull\n     echo\nelse\n  echo -e \"Downloading RedFile.\"\n  git clone https://github.com/outflanknl/RedFile.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/RedFile/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/keyserver/.git ]; then\n     echo -e \"Updating keyserver.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/keyserver/; git pull\n     echo\nelse\n  echo -e \"Downloading keyserver.\"\n  git clone https://github.com/leoloobeek/keyserver.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/keyserver/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/ExternalC2/.git ]; then\n     echo -e \"Updating ExternalC2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/ExternalC2/; git pull\n     echo\nelse\n  echo -e \"Downloading ExternalC2.\"\n  git clone https://github.com/ryhanson/ExternalC2.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/ExternalC2/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DoHC2/.git ]; then\n     echo -e \"Updating DoHC2.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DoHC2/; git pull\n     echo\nelse\n  echo -e \"Downloading DoHC2.\"\n  git clone https://github.com/SpiderLabs/DoHC2.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/DoHC2/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cat-sites/.git ]; then\n     echo -e \"Updating cat-sites.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cat-sites/; git pull\n     echo\nelse\n  echo -e \"Downloading cat-sites.\"\n  git clone https://github.com/audrummer15/cat-sites.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/cat-sites/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/now-you-see-me/.git ]; then\n     echo -e \"Updating now-you-see-me.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/now-you-see-me/; git pull\n     echo\nelse\n  echo -e \"Downloading now-you-see-me.\"\n  git clone https://github.com/audrummer15/now-you-see-me.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/now-you-see-me/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/.git ]; then\n     echo -e \"Updating CobaltStrike-ToolKit.\"\n     cd /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/; git pull\n     echo\nelse\n  echo -e \"Downloading CobaltStrike-ToolKit .\"\n  git clone https://github.com/killswitch-GUI/CobaltStrike-ToolKit.git /opt/RedTeam-Toolkit/\"Command and Control\"/Staging/CobaltStrike-ToolKit/\n  echo\nfi\n\n#Lateral Movement Scripts\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/CrackMapExec/.git ]; then\n     echo -e \"Updating CrackMapExec.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/CrackMapExec/; git pull\n     echo\nelse\n  echo -e \"Downloading CrackMapExec.\"\n  git clone https://github.com/byt3bl33d3r/CrackMapExec.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/CrackMapExec/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerLessShell/.git ]; then\n     echo -e \"Updating PowerLessShell.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerLessShell/; git pull\n     echo\nelse\n  echo -e \"Downloading PowerLessShell.\"\n  git clone https://github.com/Mr-Un1k0d3r/PowerLessShell.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerLessShell/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/GoFetch/.git ]; then\n     echo -e \"Updating GoFetch.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/GoFetch/; git pull\n     echo\nelse\n  echo -e \"Downloading GoFetch.\"\n  git clone https://github.com/GoFetchAD/GoFetch.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/GoFetch/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/ANGRYPUPPY/.git ]; then\n     echo -e \"Updating ANGRYPUPPY.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/ANGRYPUPPY/; git pull\n     echo\nelse\n  echo -e \"Downloading ANGRYPUPPY.\"\n  git clone https://github.com/vysecurity/ANGRYPUPPY.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/ANGRYPUPPY/\n  echo\n  echo -e \"Installing ANGRYPUPPY.\"\n  /usr/bin/bash /opt/RedTeam-Toolkit/\"Lateral Movement\"/ANGRYPUPPY/Install.sh\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/DeathStar/.git ]; then\n     echo -e \"Updating DeathStar.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/DeathStar/; git pull\n     echo\nelse\n  echo -e \"Downloading DeathStar.\"\n  git clone https://github.com/byt3bl33d3r/DeathStar.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/DeathStar/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/.git ]; then\n     echo -e \"Updating SharpHound.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/; git pull\n     echo\nelse\n  echo -e \"Downloading SharpHound.\"\n  git clone https://github.com/BloodHoundAD/SharpHound.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/.git ]; then\n     echo -e \"Updating SharpHound.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/; git pull\n     echo\nelse\n  echo -e \"Downloading SharpHound.\"\n  git clone https://github.com/BloodHoundAD/SharpHound.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/SharpHound/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/BloodHound.py/.git ]; then\n     echo -e \"Updating BloodHound.py.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/BloodHound.py/; git pull\n     echo\nelse\n  echo -e \"Downloading BloodHound.py.\"\n  git clone https://github.com/fox-it/BloodHound.py.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/BloodHound.py/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/Responder/.git ]; then\n     echo -e \"Updating Responder.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/Responder/; git pull\n     echo\nelse\n  echo -e \"Downloading Responder.\"\n  git clone https://github.com/SpiderLabs/Responder.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/Responder/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/SessionGopher/.git ]; then\n     echo -e \"Updating SessionGopher.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/SessionGopher/; git pull\n     echo\nelse\n  echo -e \"Downloading SessionGopher.\"\n  git clone https://github.com/Arvanaghi/SessionGopher.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/SessionGopher/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerSploit/.git ]; then\n     echo -e \"Updating PowerSploit.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerSploit/; git pull\n     echo\nelse\n  echo -e \"Downloading PowerSploit.\"\n  git clone https://github.com/PowerShellMafia/PowerSploit.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerSploit/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/nishang/.git ]; then\n     echo -e \"Updating nishang.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/nishang/; git pull\n     echo\nelse\n  echo -e \"Downloading nishang.\"\n  git clone https://github.com/samratashok/nishang.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/nishang/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/.git ]; then\n     echo -e \"Updating Inveigh.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/; git pull\n     echo\nelse\n  echo -e \"Downloading Inveigh.\"\n  git clone https://github.com/Kevin-Robertson/Inveigh.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/.git ]; then\n     echo -e \"Updating Inveigh.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/; git pull\n     echo\nelse\n  echo -e \"Downloading Inveigh.\"\n  git clone https://github.com/Kevin-Robertson/Inveigh.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/Inveigh/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerUpSQL/.git ]; then\n     echo -e \"Updating PowerUpSQL.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerUpSQL/; git pull\n     echo\nelse\n  echo -e \"Downloading PowerUpSQL.\"\n  git clone https://github.com/NetSPI/PowerUpSQL.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/PowerUpSQL/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/MailSniper/.git ]; then\n     echo -e \"Updating MailSniper.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/MailSniper/; git pull\n     echo\nelse\n  echo -e \"Downloading MailSniper.\"\n  git clone https://github.com/dafthack/MailSniper.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/MailSniper/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/WMIOps/.git ]; then\n     echo -e \"Updating WMIOps.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/WMIOps/; git pull\n     echo\nelse\n  echo -e \"Downloading WMIOps.\"\n  git clone https://github.com/FortyNorthSecurity/WMIOps.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/WMIOps/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimikatz/.git ]; then\n     echo -e \"Updating mimikatz.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimikatz/; git pull\n     echo\nelse\n  echo -e \"Downloading mimikatz.\"\n  git clone https://github.com/gentilkiwi/mimikatz.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimikatz/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/LaZagne/.git ]; then\n     echo -e \"Updating LaZagne.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/LaZagne/; git pull\n     echo\nelse\n  echo -e \"Downloading LaZagne.\"\n  git clone https://github.com/AlessandroZ/LaZagne.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/LaZagne/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimipenguin/.git ]; then\n     echo -e \"Updating mimipenguin.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimipenguin/; git pull\n     echo\nelse\n  echo -e \"Downloading mimipenguin.\"\n  git clone https://github.com/huntergregal/mimipenguin.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/mimipenguin/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/.git ]; then\n     echo -e \"Updating PSAttack.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/; git pull\n     echo\nelse\n  echo -e \"Downloading PSAttack.\"\n  git clone https://github.com/jaredhaight/PSAttack.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/KeeThief/.git ]; then\n     echo -e \"Updating KeeThief.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/KeeThief/; git pull\n     echo\nelse\n  echo -e \"Downloading KeeThief.\"\n  git clone https://github.com/HarmJ0y/KeeThief.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/KeeThief/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/.git ]; then\n     echo -e \"Updating PSAttack.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/; git pull\n     echo\nelse\n  echo -e \"Downloading PSAttack.\"\n  git clone https://github.com/jaredhaight/PSAttack.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/Internal-Monologue/.git ]; then\n     echo -e \"Updating Internal-Monologue.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/PSAttack/; git pull\n     echo\nelse\n  echo -e \"Downloading Internal-Monologue.\"\n  git clone https://github.com/eladshamir/Internal-Monologue.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/Internal-Monologue/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/impacket/.git ]; then\n     echo -e \"Updating Impacket.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/impacket/; git pull\n     echo\nelse\n  echo -e \"Downloading Impacket.\"\n  git clone https://github.com/SecureAuthCorp/impacket.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/impacket/\n  echo\n  echo -e \"Running Setup.\"\n  /usr/bin/python /opt/RedTeam-Toolkit/\"Lateral Movement\"/impacket/setup.py install\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/icebreaker/.git ]; then\n     echo -e \"Updating icebreaker.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/icebreaker/; git pull\n     echo\nelse\n  echo -e \"Downloading icebreaker.\"\n  git clone https://github.com/DanMcInerney/icebreaker.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/icebreaker/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/LOLBAS/.git ]; then\n     echo -e \"Updating Living Off The Land Binaries and Scripts (and now also Libraries).\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/LOLBAS/; git pull\n     echo\nelse\n  echo -e \"Downloading Living Off The Land Binaries and Scripts (and now also Libraries).\"\n  git clone https://github.com/LOLBAS-Project/LOLBAS.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/LOLBAS/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/WSUSpendu/.git ]; then\n     echo -e \"Updating WSUSpendu.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/WSUSpendu/; git pull\n     echo\nelse\n  echo -e \"Downloading WSUSpendu.\"\n  git clone https://github.com/AlsidOfficial/WSUSpendu.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/WSUSpendu/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/evilgrade/.git ]; then\n     echo -e \"Updating evilgrade.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/evilgrade/; git pull\n     echo\nelse\n  echo -e \"Downloading evilgrade.\"\n  git clone https://github.com/infobyte/evilgrade.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/evilgrade/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/NetRipper/.git ]; then\n     echo -e \"Updating NetRipper.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/NetRipper/; git pull\n     echo\nelse\n  echo -e \"Downloading NetRipper.\"\n  git clone https://github.com/NytroRST/NetRipper.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/NetRipper/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/LethalHTA/.git ]; then\n     echo -e \"Updating LethalHTA.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/LethalHTA/; git pull\n     echo\nelse\n  echo -e \"Downloading LethalHTA.\"\n  git clone https://github.com/codewhitesec/LethalHTA.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/LethalHTA/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/Invoke-PowerThIEf/.git ]; then\n     echo -e \"Updating Invoke-PowerThIEf.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/Invoke-PowerThIEf/; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-PowerThIEf.\"\n  git clone https://github.com/nettitude/Invoke-PowerThIEf.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/Invoke-PowerThIEf/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/redsnarf/.git ]; then\n     echo -e \"Updating redsnarf.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/redsnarf/; git pull\n     echo\nelse\n  echo -e \"Downloading redsnarf.\"\n  git clone https://github.com/nccgroup/redsnarf.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/redsnarf/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Lateral Movement\"/HoneypotBuster/.git ]; then\n     echo -e \"Updating HoneypotBuster.\"\n     cd /opt/RedTeam-Toolkit/\"Lateral Movement\"/HoneypotBuster/; git pull\n     echo\nelse\n  echo -e \"Downloading HoneypotBuster.\"\n  git clone https://github.com/JavelinNetworks/HoneypotBuster.git /opt/RedTeam-Toolkit/\"Lateral Movement\"/HoneypotBuster/\n  echo\nfi\n\n#Establish Foothold\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/Tunna/.git ]; then\n     echo -e \"Updating Tunna.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/Tunna/; git pull\n     echo\nelse\n  echo -e \"Downloading Tunna.\"\n  git clone https://github.com/SECFORCE/Tunna.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/Tunna/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/reGeorg/.git ]; then\n     echo -e \"Updating reGeorg.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/reGeorg/; git pull\n     echo\nelse\n  echo -e \"Downloading reGeorg.\"\n  git clone https://github.com/sensepost/reGeorg.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/reGeorg/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/Blade/.git ]; then\n     echo -e \"Updating Blade.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/Blade/; git pull\n     echo\nelse\n  echo -e \"Downloading Blade.\"\n  git clone https://github.com/wonderqs/Blade.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/Blade/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/tinyshell/.git ]; then\n     echo -e \"Updating tinyshell.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/tinyshell/; git pull\n     echo\nelse\n  echo -e \"Downloading tinyshell.\"\n  git clone https://github.com/threatexpress/tinyshell.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/tinyshell/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/PowerLurk/.git ]; then\n     echo -e \"Updating PowerLurk.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/PowerLurk/; git pull\n     echo\nelse\n  echo -e \"Downloading PowerLurk.\"\n  git clone https://github.com/Sw4mpf0x/PowerLurk.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/PowerLurk/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Establish Foothold\"/DAMP/.git ]; then\n     echo -e \"Updating DAMP.\"\n     cd /opt/RedTeam-Toolkit/\"Establish Foothold\"/DAMP/; git pull\n     echo\nelse\n  echo -e \"Downloading DAMP.\"\n  git clone https://github.com/HarmJ0y/DAMP.git /opt/RedTeam-Toolkit/\"Establish Foothold\"/DAMP/\n  echo\nfi\n\n#Escalate Privileges\n\n#Folder Path - \"Escalate Privileges\"/{\"Domain Escalation\",\"Local Escalation\"}\n\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Invoke-ACLPwn/.git ]; then\n     echo -e \"Updating Invoke-ACLPwn.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Invoke-ACLPwn/; git pull\n     echo\nelse\n  echo -e \"Downloading Invoke-ACLPwn.\"\n  git clone https://github.com/fox-it/Invoke-ACLPwn.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Invoke-ACLPwn/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/BloodHound/.git ]; then\n     echo -e \"Updating BloodHound.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/BloodHound/; git pull\n     echo\nelse\n  echo -e \"Downloading BloodHound.\"\n  git clone https://github.com/BloodHoundAD/BloodHound.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/BloodHound/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/pykek/.git ]; then\n     echo -e \"Updating pykek.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/pykek/; git pull\n     echo\nelse\n  echo -e \"Downloading pykek.\"\n  git clone https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068/pykek /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/pykek/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Grouper/.git ]; then\n     echo -e \"Updating Grouper.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Grouper/; git pull\n     echo\nelse\n  echo -e \"Downloading Grouper.\"\n  git clone https://github.com/l0ss/Grouper.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Grouper/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADRecon/.git ]; then\n     echo -e \"Updating ADRecon.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADRecon/; git pull\n     echo\nelse\n  echo -e \"Downloading ADRecon.\"\n  git clone https://github.com/sense-of-security/ADRecon.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADRecon/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADACLScanner/.git ]; then\n     echo -e \"Updating ADACLScanner.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADACLScanner/; git pull\n     echo\nelse\n  echo -e \"Downloading ADACLScanner.\"\n  git clone https://github.com/canix1/ADACLScanner.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ADACLScanner/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ACLight/.git ]; then\n     echo -e \"Updating ACLight.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ACLight/; git pull\n     echo\nelse\n  echo -e \"Downloading ACLight.\"\n  git clone https://github.com/cyberark/ACLight.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/ACLight/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/LAPSToolkit/.git ]; then\n     echo -e \"Updating LAPSToolkit.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/LAPSToolkit/; git pull\n     echo\nelse\n  echo -e \"Downloading LAPSToolkit.\"\n  git clone https://github.com/leoloobeek/LAPSToolkit.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/LAPSToolkit/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/RiskySPN/.git ]; then\n     echo -e \"Updating RiskySPN.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/RiskySPN/; git pull\n     echo\nelse\n  echo -e \"Downloading RiskySPN.\"\n  git clone https://github.com/cyberark/RiskySPN.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/RiskySPN/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Mystique/.git ]; then\n     echo -e \"Updating Mystique.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Mystique/; git pull\n     echo\nelse\n  echo -e \"Downloading Mystique.\"\n  git clone https://github.com/machosec/Mystique.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Mystique/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Rubeus/.git ]; then\n     echo -e \"Updating Rubeus.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Rubeus/; git pull\n     echo\nelse\n  echo -e \"Downloading Rubeus.\"\n  git clone https://github.com/GhostPack/Rubeus.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/Rubeus/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/kekeo/.git ]; then\n     echo -e \"Updating kekeo.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/kekeo/; git pull\n     echo\nelse\n  echo -e \"Downloading kekeo.\"\n  git clone https://github.com/gentilkiwi/kekeo.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Domain Escalation\"/kekeo/\n  echo\nfi\n\n#Escalate Privileges\n#Folder Path - \"Escalate Privileges\"/{\"Domain Escalation\",\"Local Escalation\"}\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/UACME/.git ]; then\n     echo -e \"Updating UACME.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/UACME/; git pull\n     echo\nelse\n  echo -e \"Downloading UACME.\"\n  git clone https://github.com/hfiref0x/UACME.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/UACME/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/windows-kernel-exploits/.git ]; then\n     echo -e \"Updating windows-kernel-exploits.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/windows-kernel-exploits/; git pull\n     echo\nelse\n  echo -e \"Downloading windows-kernel-exploits.\"\n  git clone https://github.com/SecWiki/windows-kernel-exploits.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/windows-kernel-exploits/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/ElevateKit/.git ]; then\n     echo -e \"Updating ElevateKit.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/ElevateKit/; git pull\n     echo\nelse\n  echo -e \"Downloading ElevateKit.\"\n  git clone https://github.com/rsmudge/ElevateKit.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/ElevateKit/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Sherlock/.git ]; then\n     echo -e \"Updating Sherlock.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Sherlock/; git pull\n     echo\nelse\n  echo -e \"Downloading Sherlock.\"\n  git clone https://github.com/rasta-mouse/Sherlock.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Sherlock/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Tokenvator/.git ]; then\n     echo -e \"Updating Tokenvator.\"\n     cd /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Tokenvator/; git pull\n     echo\nelse\n  echo -e \"Downloading Tokenvator.\"\n  git clone https://github.com/0xbadjuju/Tokenvator.git /opt/RedTeam-Toolkit/\"Escalate Privileges\"/\"Local Escalation\"/Tokenvator/\n  echo\nfi\n\n#Data Exfiltration\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Cloakify/.git ]; then\n     echo -e \"Updating Cloakify.\"\n     cd /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Cloakify/; git pull\n     echo\nelse\n  echo -e \"Downloading Cloakify.\"\n  git clone https://github.com/TryCatchHCF/Cloakify.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Cloakify/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DET/.git ]; then\n     echo -e \"Updating DET.\"\n     cd /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DET/; git pull\n     echo\nelse\n  echo -e \"Downloading DET.\"\n  git clone https://github.com/sensepost/DET.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DET/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DNSExfiltrator/.git ]; then\n     echo -e \"Updating DNSExfiltrator.\"\n     cd /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DNSExfiltrator/; git pull\n     echo\nelse\n  echo -e \"Downloading DNSExfiltrator.\"\n  git clone https://github.com/Arno0x/DNSExfiltrator.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/DNSExfiltrator/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/PyExfil/.git ]; then\n     echo -e \"Updating PyExfil.\"\n     cd /opt/RedTeam-Toolkit/\"Data PyExfil\"/PyExfil/; git pull\n     echo\nelse\n  echo -e \"Downloading PyExfil.\"\n  git clone https://github.com/ytisf/PyExfil.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/PyExfil/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Egress-Assess/.git ]; then\n     echo -e \"Updating Egress-Assess.\"\n     cd /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Egress-Assess/; git pull\n     echo\nelse\n  echo -e \"Downloading Egress-Assess.\"\n  git clone https://github.com/FortyNorthSecurity/Egress-Assess.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Egress-Assess/\n  echo\nfi\n\nif [ -d /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Powershell-RAT/.git ]; then\n     echo -e \"Updating Powershell-RAT.\"\n     cd /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Powershell-RAT/; git pull\n     echo\nelse\n  echo -e \"Downloading Powershell-RAT.\"\n  git clone https://github.com/Viralmaniar/Powershell-RAT.git /opt/RedTeam-Toolkit/\"Data Exfiltration\"/Powershell-RAT/\n  echo\nfi\n"
        }
      ]
    }
  ]
}