{
  "metadata": {
    "timestamp": 1736568676866,
    "page": 751,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "appleboy/scp-action",
      "stars": 1286,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 0.65234375,
          "content": "builds:\n  - # If true, skip the build.\n    # Useful for library projects.\n    # Default is false\n    skip: true\n\nchangelog:\n  use: github\n  groups:\n    - title: Features\n      regexp: \"^.*feat[(\\\\w)]*:+.*$\"\n      order: 0\n    - title: \"Bug fixes\"\n      regexp: \"^.*fix[(\\\\w)]*:+.*$\"\n      order: 1\n    - title: \"Enhancements\"\n      regexp: \"^.*chore[(\\\\w)]*:+.*$\"\n      order: 2\n    - title: \"Refactor\"\n      regexp: \"^.*refactor[(\\\\w)]*:+.*$\"\n      order: 3\n    - title: \"Build process updates\"\n      regexp: ^.*?(build|ci)(\\(.+\\))??!?:.+$\n      order: 4\n    - title: \"Documentation updates\"\n      regexp: ^.*?docs?(\\(.+\\))??!?:.+$\n      order: 4\n    - title: Others\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1103515625,
          "content": "FROM ghcr.io/appleboy/drone-scp:1.6.14\n\nCOPY entrypoint.sh /bin/entrypoint.sh\n\nENTRYPOINT [\"/bin/entrypoint.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2019 Bo-Yi Wu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.4921875,
          "content": "# ðŸš€ SCP for GitHub Actions\n\n[GitHub Action](https://github.com/features/actions) for copying files and artifacts via SSH.\n\n[![Actions Status](https://github.com/appleboy/scp-action/workflows/scp%20files/badge.svg)](https://github.com/appleboy/scp-action/actions)\n\n**Important**: Only supports **Linux** [docker](https://www.docker.com/) containers.\n\n## Usage\n\nCopy files and artifacts via SSH:\n\n```yaml\nname: scp files\non: [push]\njobs:\n  build:\n    name: Build\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: copy file via ssh password\n        uses: appleboy/scp-action@v0.1.7\n        with:\n          host: ${{ secrets.HOST }}\n          username: ${{ secrets.USERNAME }}\n          password: ${{ secrets.PASSWORD }}\n          port: ${{ secrets.PORT }}\n          source: \"tests/a.txt,tests/b.txt\"\n          target: your_server_target_folder_path\n```\n\n## Input variables\n\nSee the [action.yml](./action.yml) file for more detail information.\n\n| Variable            | Description                                                                                                 | Default Value |\n| ------------------- | ----------------------------------------------------------------------------------------------------------- | ------------- |\n| host                | SCP remote host                                                                                             | -             |\n| port                | SCP remote port                                                                                             | `22`          |\n| username            | SCP username                                                                                                | -             |\n| password            | SCP password                                                                                                | -             |\n| passphrase          | The passphrase is usually used to encrypt the private key                                                   | -             |\n| protocol            | The IP protocol to use. Valid values are `tcp`, `tcp4`, or `tcp6`.                                          | `tcp`         |\n| fingerprint         | Fingerprint SHA256 of the host public key. Default is to skip verification                                  | -             |\n| timeout             | Timeout for SSH to remote host                                                                              | `30s`         |\n| command_timeout     | Timeout for SCP command                                                                                     | `10m`         |\n| key                 | Content of SSH private key. e.g., raw content of ~/.ssh/id_rsa                                              | -             |\n| key_path            | Path of SSH private key                                                                                     | -             |\n| target              | Target path on the server, must be a directory (**required**)                                               | -             |\n| source              | SCP file list (**required**)                                                                                | -             |\n| rm                  | Remove target folder before uploading data                                                                  | `false`       |\n| strip_components    | Remove the specified number of leading path elements                                                        | -             |\n| overwrite           | Use `--overwrite` flag with tar, overwrite existing files when extracting                                   | -             |\n| tar_tmp_path        | Temporary path for tar file on the destination host                                                         | -             |\n| tar_exec            | Path to tar executable on the destination host                                                              | `tar`         |\n| tar_dereference     | Use `--dereference` flag with tar, follow symlinks; archive and dump the files they point to                | -             |\n| use_insecure_cipher | Include more ciphers with use_insecure_cipher (see [#15](https://github.com/appleboy/scp-action/issues/15)) | -             |\n\nSSH Proxy Setting:\n\n| Variable                  | Description                                                                                                 | Default Value |\n| ------------------------- | ----------------------------------------------------------------------------------------------------------- | ------------- |\n| proxy_host                | Proxy host                                                                                                  | -             |\n| proxy_port                | Proxy port                                                                                                  | `22`          |\n| proxy_username            | Proxy username                                                                                              | -             |\n| proxy_password            | Proxy password                                                                                              | -             |\n| proxy_protocol            | The IP protocol to use. Valid values are `tcp`, `tcp4`, or `tcp6`.                                          | `tcp`         |\n| proxy_passphrase          | The passphrase is usually used to encrypt the private key                                                   | -             |\n| proxy_timeout             | Timeout for SSH to proxy host                                                                               | `30s`         |\n| proxy_key                 | Content of SSH proxy private key                                                                            | -             |\n| proxy_key_path            | Path of SSH proxy private key                                                                               | -             |\n| proxy_fingerprint         | Fingerprint SHA256 of the host public key. Default is to skip verification                                  | -             |\n| proxy_use_insecure_cipher | Include more ciphers with use_insecure_cipher (see [#15](https://github.com/appleboy/scp-action/issues/15)) | -             |\n\n## Setting up a SSH Key\n\nMake sure to follow the steps below when creating and using SSH keys.\nThe best practice is to create the SSH keys on the local machine, not the remote machine.\nLog in with the username specified in GitHub Secrets and generate an RSA key pair:\n\n```bash\n# rsa\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n\n# ed25519\nssh-keygen -t ed25519 -a 200 -C \"your_email@example.com\"\n```\n\nAdd newly generated key into Authorized keys. Read more about authorized keys [here](https://www.ssh.com/ssh/authorized_keys/).\n\n```bash\n# rsa\ncat .ssh/id_rsa.pub | ssh b@B 'cat >> .ssh/authorized_keys'\n\n# d25519\ncat .ssh/id_ed25519.pub | ssh b@B 'cat >> .ssh/authorized_keys'\n```\n\nCopy Private Key content and paste in Github Secrets.\n\n```bash\n# rsa\nclip < ~/.ssh/id_rsa\n\n# ed25519\nclip < ~/.ssh/id_ed25519\n```\n\nSee the detail information about [SSH login without password](http://www.linuxproblem.org/art_9.html).\n\n**A note** from one of our readers: Depending on your version of SSH you might also have to do the following changes:\n\n- Put the public key in `.ssh/authorized_keys2`\n- Change the permissions of `.ssh` to 700\n- Change the permissions of `.ssh/authorized_keys2` to 640\n\n### If you are using OpenSSH\n\nIf you are currently using OpenSSH and are getting the following error:\n\n```bash\nssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey]\n```\n\nMake sure that your key algorithm of choice is supported.\nOn Ubuntu 20.04 or later you must explicitly allow the use of the ssh-rsa algorithm. Add the following line to your OpenSSH daemon file (which is either `/etc/ssh/sshd_config` or a drop-in file under `/etc/ssh/sshd_config.d/`):\n\n```bash\nCASignatureAlgorithms +ssh-rsa\n```\n\nAlternatively, `ed25519` keys are accepted by default in OpenSSH. You could use this instead of rsa if needed:\n\n```bash\nssh-keygen -t ed25519 -a 200 -C \"your_email@example.com\"\n```\n\n## Example\n\nCopy file via a SSH password:\n\n```yaml\n- name: copy file via ssh password\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: example.com\n    username: foo\n    password: bar\n    port: 22\n    source: \"tests/a.txt,tests/b.txt\"\n    target: your_server_target_folder_path\n```\n\nUsing the environment variables\n\n```yaml\n- name: copy file via ssh password\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: ${{ env.HOST }}\n    username: ${{ env.USERNAME }}\n    password: ${{ secrets.PASSWORD }}\n    port: ${{ env.PORT }}\n    source: \"tests/a.txt,tests/b.txt\"\n    target: ${{ env.TARGET_PATH }}\n```\n\nCopy file via a SSH key:\n\n```yaml\n- name: copy file via ssh key\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: ${{ secrets.HOST }}\n    username: ${{ secrets.USERNAME }}\n    port: ${{ secrets.PORT }}\n    key: ${{ secrets.KEY }}\n    source: \"tests/a.txt,tests/b.txt\"\n    target: your_server_target_folder_path\n```\n\nExample configuration for ignore list:\n\n```yaml\n- name: copy file via ssh key\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: ${{ secrets.HOST }}\n    username: ${{ secrets.USERNAME }}\n    port: ${{ secrets.PORT }}\n    key: ${{ secrets.KEY }}\n    source: \"tests/*.txt,!tests/a.txt\"\n    target: your_server_target_folder_path\n```\n\nExample configuration for multiple servers:\n\n```diff\n  uses: appleboy/scp-action@v0.1.7\n  with:\n-   host: \"example.com\"\n+   host: \"foo.com,bar.com\"\n    username: foo\n    password: bar\n    port: 22\n    source: \"tests/a.txt,tests/b.txt\"\n    target: your_server_target_folder_path\n```\n\nExample configuration for exclude custom files:\n\n```yaml\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: \"example.com\"\n    username: foo\n    password: bar\n    port: 22\n-   source: \"tests/*.txt\"\n+   source: \"tests/*.txt,!tests/a.txt,!tests/b.txt\"\n    target: your_server_target_folder_path\n```\n\nUpload artifact files to remote server:\n\n```yaml\ndeploy:\n  name: deploy artifact\n  runs-on: ubuntu-latest\n  steps:\n    - name: checkout\n      uses: actions/checkout@v4\n\n    - run: echo hello > world.txt\n\n    - uses: actions/upload-artifact@v4\n      with:\n        name: my-artifact\n        path: world.txt\n\n    - uses: actions/download-artifact@v4\n      with:\n        name: my-artifact\n        path: distfiles\n\n    - name: copy file to server\n      uses: appleboy/scp-action@v0.1.7\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.KEY }}\n        port: ${{ secrets.PORT }}\n        source: distfiles/*\n        target: your_server_target_folder_path\n```\n\nRemove the specified number of leading path elements:\n\n```yaml\n- name: remove the specified number of leading path elements\n  uses: appleboy/scp-action@v0.1.7\n  with:\n    host: ${{ secrets.HOST }}\n    username: ${{ secrets.USERNAME }}\n    key: ${{ secrets.KEY }}\n    port: ${{ secrets.PORT }}\n    source: \"tests/a.txt,tests/b.txt\"\n    target: your_server_target_folder_path\n    strip_components: 1\n```\n\nOld target structure:\n\n```sh\nfoobar\n  â””â”€â”€ tests\n    â”œâ”€â”€ a.txt\n    â””â”€â”€ b.txt\n```\n\nNew target structure:\n\n```sh\nfoobar\n  â”œâ”€â”€ a.txt\n  â””â”€â”€ b.txt\n```\n\nOnly copy files that are newer than the corresponding destination files:\n\n```yaml\nchanges:\n  name: test changed-files\n  runs-on: ubuntu-latest\n  steps:\n    - name: checkout\n      uses: actions/checkout@v4\n\n    - name: Get changed files\n      id: changed-files\n      uses: tj-actions/changed-files@v35\n      with:\n        since_last_remote_commit: true\n        separator: \",\"\n\n    - name: copy file to server\n      uses: appleboy/scp-action@v0.1.7\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.KEY }}\n        port: ${{ secrets.PORT }}\n        source: ${{ steps.changed-files.outputs.all_changed_files }}\n        target: your_server_target_folder_path\n```\n\nProtecting a Private Key. The purpose of the passphrase is usually to encrypt the private key. This makes the key file by itself useless to an attacker. It is not uncommon for files to leak from backups or decommissioned hardware, and hackers commonly exfiltrate files from compromised systems.\n\n```diff\n  - name: ssh key with passphrase\n    uses: appleboy/scp-action@v0.1.7\n    with:\n      host: ${{ secrets.HOST }}\n      username: ${{ secrets.USERNAME }}\n      key: ${{ secrets.SSH2 }}\n+     passphrase: ${{ secrets.PASSPHRASE }}\n      port: ${{ secrets.PORT }}\n      source: \"tests/a.txt,tests/b.txt\"\n      target: your_server_target_folder_path\n```\n\nWhen copying files from a Linux runner to a Windows server, you should:\n\n1. Download git for Windows\n2. Change the default OpenSSH shell to git bach with the following powershell command.\n3. Set `tar_dereference` and `rm` variable to `true` in the YAML file\n4. Avoid putting the `port` value through a variable\n5. Convert the target path to a Unix path: `/c/path/to/target/`\n\nChange the default OpenSSH shell to git bach with the following powershell command.\n\n```powershell\nNew-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"$env:Programfiles\\Git\\bin\\bash.exe\" -PropertyType String -Force\n```\n\nConvert the target path to a Unix path: `/c/path/to/target/`\n\n```diff\n  - name: Copy to Windows\n      uses: appleboy/scp-action@v0.1.7\n      with:\n        host: ${{ secrets.HOST }}\n        username: ${{ secrets.USERNAME }}\n        key: ${{ secrets.SSH_PRIVATE_KEY }}\n        port: 22\n        source: 'your_source_path'\n-       target: 'C:\\path\\to\\target'\n+       target: '/c/path/to/target/'\n+       tar_dereference: true\n+       rm: true\n```\n"
        },
        {
          "name": "action.yml",
          "type": "blob",
          "size": 2.4482421875,
          "content": "name: \"SCP Command to Transfer Files\"\ndescription: \"How to Use SCP Command to Transfer Files/Folders in Linux\"\nauthor: \"Bo-Yi Wu\"\ninputs:\n  host:\n    description: \"scp remote host\"\n  port:\n    description: \"scp remote port\"\n    default: \"22\"\n  username:\n    description: \"scp username\"\n  password:\n    description: \"scp password\"\n  protocol:\n    description: \"The IP protocol to use. Valid values are 'tcp'. 'tcp4' or 'tcp6'. Default to tcp.\"\n    default: \"tcp\"\n  timeout:\n    description: \"timeout for ssh to remote host\"\n    default: \"30s\"\n  command_timeout:\n    description: \"timeout for scp command\"\n    default: \"10m\"\n  key:\n    description: \"content of ssh private key. ex raw content of ~/.ssh/id_rsa\"\n  key_path:\n    description: \"path of ssh private key\"\n  passphrase:\n    description: \"ssh key passphrase\"\n  fingerprint:\n    description: \"fingerprint SHA256 of the host public key, default is to skip verification\"\n  use_insecure_cipher:\n    description: \"include more ciphers with use_insecure_cipher\"\n  target:\n    description: \"target path on the server, must be a directory path.\"\n  source:\n    description: \"scp file list\"\n  rm:\n    description: \"remove target folder before upload data\"\n  debug:\n    description: \"enable debug message\"\n  strip_components:\n    description: \"remove the specified number of leading path elements\"\n  overwrite:\n    description: \"use --overwrite flag with tar\"\n  tar_dereference:\n    description: \"use --dereference flag with tar\"\n  tar_tmp_path:\n    description: \"temporary path for tar file on the dest host\"\n  tar_exec:\n    description: \"temporary path for tar file on the dest host\"\n    default: \"tar\"\n  proxy_host:\n    description: \"ssh proxy remote host\"\n  proxy_port:\n    description: \"ssh proxy remote port\"\n    default: \"22\"\n  proxy_username:\n    description: \"ssh proxy username\"\n  proxy_password:\n    description: \"ssh proxy password\"\n  proxy_passphrase:\n    description: \"ssh proxy key passphrase\"\n  proxy_timeout:\n    description: \"timeout for ssh to proxy host\"\n    default: \"30s\"\n  proxy_key:\n    description: \"content of ssh proxy private key. ex raw content of ~/.ssh/id_rsa\"\n  proxy_key_path:\n    description: \"path of ssh proxy private key\"\n  proxy_fingerprint:\n    description: \"fingerprint SHA256 of the host public key, default is to skip verification\"\n  proxy_use_insecure_cipher:\n    description: \"include more ciphers with use_insecure_cipher\"\nruns:\n  using: \"docker\"\n  image: \"Dockerfile\"\n\nbranding:\n  icon: \"copy\"\n  color: \"gray-dark\"\n"
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 0.1416015625,
          "content": "#!/bin/sh\n\nset -eu\n\n[ -n \"$INPUT_STRIP_COMPONENTS\" ] && export INPUT_STRIP_COMPONENTS=$((INPUT_STRIP_COMPONENTS + 0))\n\nsh -c \"/bin/drone-scp $*\"\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}