{
  "metadata": {
    "timestamp": 1736568589617,
    "page": 643,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SDRausty/TermuxArch",
      "stars": 1445,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".conf",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.38671875,
          "content": "[submodule \"docs\"]\n        path = docs\n        url = https://github.com/TermuxArch/docsTermuxArch\n[submodule \"gen\"]\n        path = gen\n        url = https://github.com/TermuxArch/genTermuxArch\n[submodule \"scripts\"]\n\tpath = scripts\n\turl = https://github.com/TermuxArch/scripts.TermuxArch\n[submodule \".scripts/maintenance\"]\n\tpath = .scripts/maintenance\n\turl = https://github.com/shlibs/maintenance\n"
        },
        {
          "name": ".gitpod.Dockerfile",
          "type": "blob",
          "size": 0.3759765625,
          "content": "FROM gitpod/workspace-full-vnc\n                    \nUSER gitpod\n\n# Install custom tools, runtime, etc. using apt-get\n# For example, the command below would install \"bastet\" - a command line tetris clone:\n#\n# RUN sudo apt-get -q update && #     sudo apt-get install -yq bastet && #     sudo rm -rf /var/lib/apt/lists/*\n#\n# More information: https://www.gitpod.io/docs/42_config_docker/\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.0390625,
          "content": "{ image: { file: .gitpod.Dockerfile } }\n"
        },
        {
          "name": ".scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "404.md",
          "type": "blob",
          "size": 1.845703125,
          "content": "---\nlayout: default\npermalink: /404.html\ntitle: \"sdrausty.github.io 404 Page\"\n---\n\nYou found the 404 page. Wow. Hopefully what you are looking for is right here!\n\n👉 [Build APKs in Termux](../buildAPKs)<br>\n👉 [GitHub and Git Foundations](../pages/ggf)<br>\n👉 [How to Automate Git Processes.](../pages/htgp)<br>\n👉 [Is Your Smartphone Your Computer?](../pages/ysyc)<br>\n👉 [Main Page](./index)<br>\n👉 [Sitemap](../sitemap)<br>\n👉 [Termux IRC Chat Log](../logs/ircFreenodeTermuxWeechatlog)<br>\n👉 [TermuxArch](../TermuxArch)<br>\n👉 [TeX in Termux](../pages/tit)<br>\n👉 [What Do You Do with Termux?](../pages/tf)<br>\n👉 [au](../au)<br>\n👉 [repo](../repo)<br>\n\nIf what you are seeking is not here, please try these [repositories](https://github.com/sdrausty?tab=repositories) at Github.\n\n#### You can do [much more](https://sdrausty.github.io/pages/more.html) onDevice!\n\n#### When you press and momentarily hold the `volumeDown+power` buttons simultaneously on a smartphone, it takes a screenshot much like this one which shows the screen and the the source code for this page in [vim](http://www.vim.org/git.php) running on [Termux](https://sdrausty.github.io/pages/asac.html) on [Android.](https://source.android.com/)\n\n![Screenshot](https://sdrausty.github.io/bitpics/404.png)\n\n#### This animation was created with [imagemagick](https://sdrausty.github.io/pages/im.html) in [Termux](https://sdrausty.github.io/pages/asac.html) on an Android smartphone.\n\n![Screenshot Animation](https://sdrausty.github.io/bitpics/ps1.gif)\n\nIf you're confused by this page try [this link,](http://tldp.org/) or you might want to try [this one.](https://www.debian.org/doc/) Post your what you have found at [the wiki,](https://github.com/sdrausty/sdrausty.github.io/wiki) [donate](https://sdrausty.github.io/pages/donate.md) and help [this website grow!](https://sdrausty.github.io/)\n"
        },
        {
          "name": "CHANGE.log",
          "type": "blob",
          "size": 0.779296875,
          "content": "Begin changelog.  \nSat Dec  9 2017\n1.9M    TermuxArch/\n1.6M    TermuxArch/.git\nWed Jan 10 2018\n4.9M    TermuxArch/\n4.5M    TermuxArch/.git\nComputed on 20180117 branch master.\n1.2M\t.git\n1.9M\t.\nComputed on 20180129 branch master.\n8.8M\t.git\n11M\t.\nComputed on 20180204 branch master.\n14M\t.git\n16M\t.\nComputed on 20180719 branch master.\n32.8M\t.git\n38.5M\t.\nComputed on 20180919 branch master.\n90.7M\t.git\n96.2M\t.\nComputed on 20180919 branch master.\n3.2M\t.git\n8.7M\t.\nComputed on 20180920 branch master.\n556.0K\t.git\n808.0K\t.\nComputed on 20180920 branch master.\n4.0M\t.git\n11.3M\t.\nComputed on 20190603 branch master.\nSize in KB\n3776\t.git\n4044\t.\nComputed on 20190603 branch master.\nSize in KB\n3780\t.git\n4048\t.\nRESET: size\nSize in KB\n388\t.git\n656\t.\nComputed on 20190611 branch master.\nSize in KB\n692\t.git\n1044\t.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 9.2138671875,
          "content": "##### -r--r--r-- [archsystemconfigs.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/archlinuxconfig.sh)\n\n##### -r--r--r-- [espritfunctions.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/espritfunctions.sh)\n\n##### -r--r--r-- [getimagefunctions.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/getimagefunctions.sh)\n\n##### -r--r--r-- [knownconfigurations.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/knownconfigurations.sh)\n\n##### -r--r--r-- [necessaryfunctions.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/necessaryfunctions.sh)\n\n##### -r--r--r-- [printoutstatements.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/printoutstatements.sh)\n\n##### -r--r--r-- [setupTermuxArch.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/setupTermuxArch.sh)\n\n##### -rw-rw-rw- [setupTermuxArch.tar.gz](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/setupTermuxArch.tar.gz)\n\n##### -r--r--r-- [systemmaintenance.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/maintenanceroutines.sh)\n\n## Contributions have helped in the successful development of this script and project immensely.  The following contributors have helped to refine [setupTermuxArch.sh](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/setupTermuxArch.tar.gz) 📲 __Thank you for contributing and collaborating!__  \n\n[![Join the chat at https://gitter.im/termux](https://badges.gitter.im/termux/termux.svg)](https://gitter.im/termux)  Termux developers welcome.\n\n#### Android smartphone screenshot 2018\n[![screenshot_20180413-172406](https://user-images.githubusercontent.com/27742457/38758637-ec0ff0dc-3f3f-11e8-802c-82bc511cde88.png)](https://sdrausty.github.io/TermuxArch/docs/install)\n\n[AccountsDept](https://github.com/accountsdept) submitted issue [#49](https://github.com/sdrausty/TermuxArch/issues/49), \"Every Mirror Returning 404\".  Result: TermuxArch instructions improved!\n\n[abicorios](https://github.com/abicorios) opened issue [#27](https://github.com/sdrausty/TermuxArch/issues/27), How to use Xorg in TermuxArch? Contributed important XServer XSDL information.  Made [#95](https://github.com/sdrausty/TermuxArch/pull/95) that enchanced rapid code streamlining from newly arisen keyring errors that, at times, uninstalled entire Arch Linux in Termux PRoot installations.\n\n[BearChavez](https://github.com/BearChavez) submitted an issue.  Result: TermuxArch improved!\n\n[Ben Shaji](https://github.com/bensh4) composed [#94]( https://github.com/sdrausty/TermuxArch/issues/94) that enchanced rapid code streamlining from newly arisen keyring errors that, at times, uninstalled entire Arch Linux in Termux PRoot installations.\n\n[FreshMosh](https://github.com/FreshMosh) supplied [#94]( https://github.com/sdrausty/TermuxArch/issues/94) including information that resolved newly arisen keyring errors manually that, at times, uninstalled entire Arch Linux in Termux PRoot installations.\n\n[brysgo](https://github.com/brysgo) helped debug Chromebook.  Result: TermuxArch improved!\n\n[Codimiracle](https://github.com/Codimiracle) submitted and discussed issue [#46](https://github.com/sdrausty/TermuxArch/issues/46), \"TermuxArch setup scripts has some error in Android x86_64(RemixOS 2.0.513) in Termux\" and suggested solutions resolving this matter.  Result: TermuxArch improved!\n\n[cb125](https://github.com/cb125) commented and contributed: `watch cat /proc/sys/kernel/random/entropy_avail` to resolve `pacman-key --populate archlinux` in issue #33. Result: addwe () created and TermuxArch improved!\n\n[cherryleafroad](https://github.com/cherryleafroad) opened and discussed issue [Ability for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device #54](https://github.com/sdrausty/TermuxArch/issues/54) Result: TermuxArch improved, option `setupTermuxArch.sh refresh` added, user login and command options introduced to `startarch`!  Opened and presented issue [Hush motd on login when using -c command #58](https://github.com/sdrausty/TermuxArch/issues/58) Result: TermuxArch improved!\n\n[cswl](https://github.com/cswl) suggested, \"I dont have time to tinker around with TermuxArch... but could we make an stub package for linux-aarch64 and linux-firmware... since we're just using proot...  I dont think we'd need the kernel and firmware... wasting space\"  Result: addtrim () created and TermuxArch improved!\n\n[Jezwin](https://github.com/Jezwin) submitted an issue.  Result: TermuxArch improved!\n\n[David xu](https://github.com/xqdoo00o) contributed [Shared: NO such file or directory! #61](https://github.com/sdrausty/TermuxArch/issues/61).  Result: TermuxArch improved!\n\n[developer787](https://github.com/developer787) submitted an issue.  Result: TermuxArch improved!\n\n[EsdrasTarsis](https://github.com/EsdrasTarsis) contributed insightful comments regarding `pacman-key` https://github.com/sdrausty/TermuxArch/issues/28 Result: TermuxArch improved!\n\n[emoryy](https://github.com/emoryy) submitted https://github.com/sdrausty/TermuxArch/issues/64  Result cleanliness in git repository added: TermuxArch improved!\n\n[evg-zhabotinsky](https://github.com/evg-zhabotinsky) Contributed standard output terminal benchmark information.  Result: `stdoutbench.sh` created.\n\n[fornwall](https://github.com/fornwall) contributed: Created Termux, Termux PRoot… Pushed wget v1.19.4 fixing wget v1.19.3 errors immediatly…  Result: TermuxArch improved!\n\n[Dmitry Matveyev](https://github.com/greenfork) contributed key debug information to resolve issue [Declare error: value too great for base (error token is: 08) #60](https://github.com/sdrausty/TermuxArch/issues/60)  Result: TermuxArch improved!\n\n[Hax4us](https://github.com/Hax4us) provided insight regarding open issues. Submitted pull request.  Result: TermuxArch improved!\n\n[iantothecore](https://github.com/iantothecore) submitted an issue.  Result: TermuxArch improved!\n\n[imdaveho](https://github.com/imdaveho) helped debug Chromebook.  Result: TermuxArch improved!\n\njlam: contributed `getprop ro.product.device` Chromebook detection, `getprop ro.product.cpu.abi`, polite KISS, program flow suggestions.  Result: TermuxArch improved!\n\n[Kitsumi](https://github.com/Kitsumi) contributed issue [Declare error: value too great for base (error token is: 08) #60](https://github.com/sdrausty/TermuxArch/issues/60)  Result: TermuxArch improved!\n\n[markfelt](https://github.com/markfelt) contributed [Succesfully Modified Stock 'makepkg'... #38](https://github.com/sdrausty/TermuxArch/issues/38) with instructions.  Result: pending\n\n[michalbednarski](https://github.com/michalbednarski) contributed Termux PRoot, discussed PRoot, contributed: `pacman-key --init` && `echo disable-scdaemon > /etc/pacman.d/gnupg/gpg-agent.conf` which resolved `pacman-key --populate archlinux` issuses, `export PROOT_NO_SECCOMP=1` resolving Android 8 installation issues.  Contributed kernel test and updated PRoot for Android 8.  Contributed `pacman -R linux-aarch64 linux-firmware` easing free space concerns.  Result: TermuxArch greatly improved!\n\n[mjskoneg](https://github.com/mjskoneg) submitted issues.  Result: TermuxArch improved!\n\n[Neo-Oli](https://github.com/Neo-Oli) suggested `unset LD_PRELOAD` to resolve an issue when using `termux-exec`.  Result: TermuxArch improved!\n\n[rootconfig27](https://github.com/rootconfig27) contributed to `printoutstatements.sh` with this [9cd505a](https://github.com/rootconfig27/TermuxArch/commit/5c5f1de746731b2f98dc11064fbfd7f8c9cd505a) commit.\n\n[Root-voidX](https://github.com/Root-voidX) contributed great discourse which resulted in instructions and diagnostic information about Arch Linux [#59](https://github.com/sdrausty/TermuxArch/issues/59) for GUI users and improvements for Android 8 user.  Result: TermuxArch improved!\n\n[Soph1a7](https://github.com/Soph1a7) contributed to issues and submitted pull requests (locale-gen, printf, quiet, mirrors, `wget -A tar.gz -m -nd -np http://mirrors.evowise.com/archlinux/iso/latest`, et al ).  Also provided numerous constructive suggestions.  Result: TermuxArch greatly improved, and working with this project improved too!\n\n[smu](https://github.com/smu) submitted issues [#21](https://github.com/sdrausty/TermuxArch/issues/21) \"`vi` Command Not Found\" and [#24](https://github.com/sdrausty/TermuxArch/issues/24) \"`sed` Command Not Found\" which helped debug i686 Chromebook installation.  Result: TermuxArch improved!\n\n[staymetal](https://github.com/staymetal) contributed: debugging wget v1.19.3 errors Result: TermuxArch improved!\n\n[Ublimjo](https://github.com/Ublimjo) submitted issue [#37](https://github.com/sdrausty/TermuxArch/issues/37), No such or file directory when setting Arch Linux up in Termux PRoot and commented.  Result: [https://github.com/sdrausty/dfa](https://github.com/sdrausty/dfa) created and TermuxArch improved!  TermuxArch space warnings added.\n\n[vishalbiswas](https://github.com/vishalbiswas) contributed: `export LD_PRELOAD=$PREFIX/lib/libtermux-exec.so`.  Result: TermuxArch improved!\n\n[wulvyrn](https://github.com/wulvyrn) contributed: `pacman -S rng-tools`, `rngd -r /dev/urandom` to resolve `pacman-key --init` in issues #28, #33 and #46.\n\nThank you for making this project work better and please contribute 🔆  See [Notice to Contributors](NOTICE) for information.  See [PRoot](docs/PRoot) for more information about Linux on device with Termux.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.443359375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 4.26171875,
          "content": "##### -r--r--r-- [archsystemconfigs.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/archlinuxconfig.bash)\n\n##### -r--r--r-- [espritfunctions.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/espritfunctions.bash)\n\n##### -r--r--r-- [getimagefunctions.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/getimagefunctions.bash)\n\n##### -r--r--r-- [knownconfigurations.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/knownconfigurations.bash)\n\n##### -r--r--r-- [necessaryfunctions.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/necessaryfunctions.bash)\n\n##### -r--r--r-- [printoutstatements.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/printoutstatements.bash)\n\n##### -r--r--r-- [setupTermuxArch.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/setupTermuxArch.bash)\n\n##### -rw-rw-rw- [setupTermuxArch.tar.gz](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/setupTermuxArch.tar.gz)\n\n##### -r--r--r-- [systemmaintenance.bash](https://raw.githubusercontent.com/sdrausty/TermuxArch/master/maintenanceroutines.bash)\n\n## Contributions have helped in the successful development of this script and project immensely.  This is a Notice to Contributors  📲 __Thank you for contributing and collaborating!__\n\n__Source code goals for this project are:__\n1. That it work as desired and provide the ultimate user experience possible when executed,\n2. Minimum lines and length possible while being obviously legible, clearly readable and understandable, all at the same time.  It.bashould be a pleasure to read.  This includes the documentation too.\n\nContributions have helped in the successful development of this script and project immensely.  Understanding the goals and workings of this project.bashall make interacting with this project all the more rewarding.  If you are considering collaborating, help is wanted in:\n1. Coding - Submit modifications in the `scripts/files` directory at [https://github.com/sdrausty/TermuxArch](https://github.com/sdrausty/TermuxArch) Run `/scripts/maintenance/makedownload.bash` to generate checksums and files,\n2. Documentation - Submit modifications at [https://github.com/sdrausty/docsTermuxArch](https://github.com/sdrausty/docsTermuxArch),\n3. Scree.bashots and Animations - Submit modifications at [https://github.com/sdrausty/imgsTermuxArch](https://github.com/sdrausty/imgsTermuxArch).\n\nThese pages and projects can be altered to our desire. Please think of them as a wiki pages that you have access to change if you want.  Thank you for contributing and collaborating to those who have helped improve this project.\n\nAdditional information:\n* All Termux Arch related issues and pull requests.bashould be addressed through [https://github.com/sdrausty/TermuxArch](https://github.com/sdrausty/TermuxArch) for script changes,\n* All Termux Arch related issues and pull requests.bashould be delivered through [https://github.com/sdrausty/docsTermuxArch](https://github.com/sdrausty/docsTermuxArch) for documentation.\n* All Termux Arch related issues and pull requests.bashould be delivered through [https://github.com/sdrausty/imgsTermuxArch](https://github.com/sdrausty/imgsTermuxArch) for graphics and presentation medium.\n\n__To avoid \"git bloat\", these repositories are reset periodically!__  This is also one of the reasons why this project is distributed in these repositories.  If you get a `fatal: refusing to merge unrelated histories` message while working with your current clone, save the important work from your current clone and reclone.\n\nTo understand more about \"git bloat\", run `du -hs .git` on older more mature projects.  Some might have a very large .git directory.  A very large .git directory can impede working with a git repository, especially when utilizing a slow Internet connection. This is why this repository is periodically reset.\n\n* Comments are welcome at [https://github.com/sdrausty/TermuxArch/issues](https://github.com/sdrausty/TermuxArch/issues) ✍\n\n* Pull requests are welcome [https://github.com/sdrausty/TermuxArch/pulls](https://github.com/sdrausty/TermuxArch/pulls) ✍\n\nThanks for making this project work; Please contribute 🔆  See [contributors](CONTRIBUTORS.md).  See [PRoot](docs/PRoot) for more information about Linux on device with Termux.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.66796875,
          "content": "<link rel=\"prerender\" href=\"https://sdrausty.github.io/TermuxArch/\">\n\n## [TermuxArch](https://github.com/SDRausty/TermuxArch/)\n\n##### -r--r--r-- [setupTermuxArch](https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch)\n##### -rwxrwx--- [setupTermuxArch](https://TermuxArch.github.io/TermuxArch/setupTermuxArch)\n\nThis Termux bash setup shell script will attempt to set Arch Linux up in your Termux environment.  Please see [install](https://TermuxArch.github.io/docsTermuxArch/install) for options how to run [`setupTermuxArch`](https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch) on device.  You can use `bash setupTermuxArch` to install [Arch Linux](https://wiki.archlinux.org/) in a [Termux PRoot](https://github.com/termux/proot) container on your Android smartphone and tablet, and Chromebook too.  When successfully completed, you will be experiencing the pleasure of the Linux command prompt in Arch Linux in Termux PRoot on Android, Chromebook and Fire OS on smartphone, tablet and wearable.\n\n#### Screenshot from an Android smartphone 2018\n[![screenshot_20180413-172406](https://user-images.githubusercontent.com/27742457/38758637-ec0ff0dc-3f3f-11e8-802c-82bc511cde88.png)](https://TermuxArch.github.io/docsTermuxArch/install)\n\n* Comments are welcome at [https://github.com/TermuxArch/TermuxArch/issues](https://github.com/TermuxArch/TermuxArch/issues) ✍\n\n* Pull requests are welcome at [https://github.com/TermuxArch/TermuxArch/pulls](https://github.com/TermuxArch/TermuxArch/pulls) ✍\n\nThank you for making this project work better and please contribute 🔆  [Contributors](CONTRIBUTORS.md) and [Notice to Contributors](NOTICE.md) have more information about this project.\n\n![Screenshot of Arch On Termux](https://raw.githubusercontent.com/TermuxArch/imgsTermuxArch/master/IMG_20171019_190414.jpg)\n\n[PRoot](https://termuxarch.github.io/docsTermuxArch/PRoot) has more information about Linux on device with Termux.\n\nShare https://wiki.termux.com/wiki/Development everwhere🌎🌍🌏🌐!\n\nInstall Arch Linux into a Termux PRoot container with [`bash setupTermuxArch`](setupTermuxArch).  After succesfull installation start the container with `startarch`.\n\nSee https://TermuxArch.github.io/TermuxArch/docs/install for options how to run [`setupTermuxArch`](https://TermuxArch.github.io/TermuxArch/setupTermuxArch) on device.\n\nSee https://TermuxArch.github.io/docsTermuxArch/startingArch for options how to start the Arch Linux container `startarch` on device.\n\nThis repository uses submodules.  To get all the pieces of this repository run the following code after cloning in the root directory of this repository:\n\n```\ngit submodule update --init --recursive\n```\n\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "archlinuxconfig.bash",
          "type": "blob",
          "size": 124.6484375,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n_DPTCHHLP_() { printf \"%s\\\\n%s\\\\n\" \"[ -e $INSTALLDIR$TMXRCHBNDR/am ] || cp -f $PREFIX/bin/am $INSTALLDIR$TMXRCHBNDR/am\" \"[ -e $INSTALLDIR$TMXRCHBNDR/patch ] || cp -f $PREFIX/bin/patch $INSTALLDIR$TMXRCHBNDR/patch\" >> \"$1\" ;  }\n_PRTPATCHHELP_() { printf \"%s\\\\n\" \"[ -e $TMXRCHBNDR/patch ] || printf \\\"\\\\e[1;30m%s\\\\e[0;40m%s\\\\e[1;30m%s\\\\e[0;40m%s\\\\e[1;30m%s\\\\e[0;40m%s\\\\e[1;30m%s\\\\e[0;40m%s\\\\e[1;30m%s\\\\e[0m\\\\n\\\" \\\"This command \\\" \\\"'ln -s $PREFIX/bin/patch $INSTALLDIR$TMXRCHBNDR/patch'\\\" \\\" should resolve a \\\" \\\"'patch: setting attribute security.selinux for security.selinux: Permission denied'\\\" \\\" error.  This workaround seems to work equally well in Termux PRoot with QEMU architecture emulation as well.  Issues \\\" \\\"“Building xrdp from AUR fails mentioning selinux #293”\\\" \\\" at https://github.com/SDRausty/TermuxArch/issues/293 and \\\" \\\"“patch: setting attribute security.selinux for security.selinux: Permission denied #182”\\\" \\\" at https://github.com/termux/proot/issues/182 have more information about this error.\\\"\" >> \"$1\" ; }\n_PRTRTHLP_() {\nprintf \"%s\\\\n\" \"if [ \\\"\\$EUID\\\" = 0 ] || [ \\\"\\$UID\\\" = 0 ]\nthen\nprintf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...  \\\\e[0m\\\" \\\"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:\\\" \\\"  Command '\\$SRPTNM' should not be used by the root user account.  The command 'addauser' creates user accounts in Arch Linux in Termux PRoot QEMU and configures these user accounts for the Arch Linux 'sudo' command.  The 'addauser' command can be run by the Arch Linux in Termux PRoot root and user accounts.  This command can be run '$STARTBIN command 'addauser user'' directly from Termux to create this account in Arch Linux Termux PRoot QEMU.  The command '$STARTBIN help' has more information about how to use '$STARTBIN'.  \\\"\nexit 101\nfi\" >> \"$1\"\n}\n\n_ADDREADME_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/README.md\nprintf \"%s\\\\n\" \"The $TMXRCHBNDR directory contains TermuxArch shortcut commands that automate and make using the command line easier.  Some of these commands are listed here:\n\n* Command 'addauser' creates Arch Linux user accounts in Termux PRoot QEMU and configures them for use with the Arch Linux 'sudo' command,\n* Command 'cams' records from device cameras,\n* Command 'csystemctl' replaces systemctl with https://github.com/TermuxArch/docker-systemctl-replacement,\n* Command 'em' is a 'uemacs' editor shortcut command that builds and installs and then runs the uemacs editor.\n* Command 'keys' installs Arch Linux keys,\n* Command 'gcl https://github.com/indigo-dc/udocker'  will clone 'udocker', a basic user tool to execute simple docker containers in user space without requiring root privileges,\n* Command 'makeaurhelpers' attempts to build and install AUR helper package installer commands,\n* Command 'patchmakepkg' patches the Arch Linux 'makepkg' command for use in Termux PRoot QEMU,\n* Command 'pc' is a pacman shortcut command; 'cw pc' in order to learn more,\n* Command 'pci' is a pacman shortcut command; 'cw pci' in order to learn more,\n* Command 'tour' runs a short tour of the TermuxArch Linux system,\n* Command 'trim' moves the downloaded packages from the Arch Linux system directories into a cache directory,\n* Command 'yt' is a youtube shortcut command that installs and runs the command 'youtube-dl',\n* Command 'v' is a 'vim' editor shortcut command that installs and runs the vim editor.\n\nThis command 'ls $TMXRCHBNDR && cat ~/.bashrc' issued in a Termux PRoot QEMU environment will show installed TermuxArch commands.  This README.md file can be expanded so a beginning user can get to know the *nix experience easier.  Would you like to create an issue along with a pull request to add information to this file so that a beginning user can get to know the Arch Linux in Termux PRoot experience much easier?  If you would like to expand this README.md file to encapsulate and enhance the newbie *nix experience, then please visit these links:\n\n* Comments are welcome at https://github.com/TermuxArch/TermuxArch/issues ✍\n* Pull requests are welcome at https://github.com/TermuxArch/TermuxArch/pulls ✍\n<!-- $INSTALLDIR$TMXRCHBNDR/README.md FE -->\" > \"$TMXRCHBNDS\"/README.md\n}\n\n_ADDae_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/ae \"# Developed at [pacman-key --populate archlinux hangs](https://github.com/SDRausty/TermuxArch/issues/33) Contributor cb125\"\nprintf \"%s\\\\n\" \"watch cat /proc/sys/kernel/random/entropy_avail\n## $INSTALLDIR$TMXRCHBNDR/ae FE\" >> \"$TMXRCHBNDS\"/ae\nchmod 755 \"$TMXRCHBNDS\"/ae\n}\n\n_ADDbash_logout_() {\nprintf \"%s\\\\n\" \"[ ! -f \\\"\\$HOME\\\"/.hushlogout ] && [ ! -f \\\"\\$HOME\\\"/.chushlogout ] && . /etc/moto\nh\n## .bash_logout FE\" > root/.bash_logout\n}\n\n_ADDbash_profile_() {\n[ -e root/.bash_profile ] && _DOTHRF_ \"root/.bash_profile\"\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"PPATH=\\\"\\$PATH\\\"\" \"# [ -d /system/xbin ] && PATH=\\\"/system/xbin\\\"\" \"# [ -d /system/sbin ] && PATH=\\\"/system/sbin:\\$PATH\\\"\" \"# [ -d /system/bin ] && PATH=\\\"/system/bin:\\$PATH\\\"\" > root/.bash_profile\nif [ -d \"$INSTALLDIR\"/usr/local/texlive ]\nthen\nTEXLIVEPATH=\"$(find \"$INSTALLDIR\"/usr/local/texlive/*/bin/ -maxdepth 1 | tail -n 1)\"\nTEXLIVEPATH=\"${TEXLIVEPATH#*\"${INSTALLDIR##*/}\"}\"\nTEXDIR=\"${TEXLIVEPATH%/*}\"\nTEXDIR=\"${TEXDIR%/*}\"\nprintf \"%s\\\\n\" \"PATH=\\\"\\$HOME/bin:$TMXRCHBNDR:$TEXLIVEPATH:\\$PPATH\\\"\" >> root/.bash_profile\nelse\nprintf \"%s\\\\n\" \"PATH=\\\"\\$HOME/bin:$TMXRCHBNDR:\\$PPATH\\\"\" >> root/.bash_profile\nfi\nprintf \"%s\\\\n\" \"[ -f \\\"\\$HOME\\\"/.bashrc ] && . \\\"\\$HOME\\\"/.bashrc\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -f \\\"\\$HOME\\\"/.profile ] && . \\\"\\$HOME\\\"/.profile\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"if [ ! -e \\\"\\$HOME\\\"/.hushlogin ] && [ ! -e \\\"\\$HOME\\\"/.chushlogin ]\nthen\n[ -e /etc/mota ] && . /etc/mota\nfi\nif [ -e \\\"\\$HOME\\\"/.chushlogin ]\nthen\nrm -f \\\"\\$HOME\\\"/.chushlogin\nfi\nPS1=\\\"\\\\[\\\\e[38;5;148m\\\\]\\\\u\\\\[\\\\e[1;0m\\\\]\\\\A\\\\[\\\\e[1;38;5;112m\\\\]\\\\W\\\\[\\\\e[0m\\\\]$ \\\"\" >> root/.bash_profile\n[[ ! -f \"$HOME\"/.bash_profile ]] || grep proxy \"$HOME\"/.bash_profile | grep -s \"export\" >> root/.bash_profile ||:\n[[ ! -f \"$HOME\"/.bash_profile ]] || grep EDITOR \"$HOME\"/.bash_profile | grep -s \"export\" >> root/.bash_profile ||:\nSHELVARS=\" ANDROID_ART_ROOT ANDROID_DATA ANDROID_I18N_ROOT ANDROID_ROOT ANDROID_RUNTIME_ROOT ANDROID_TZDATA_ROOT BOOTCLASSPATH DEX2OATBOOTCLASSPATH\"\nfor SHELVAR in ${SHELVARS[@]}\ndo\nISHELVAR=\"$(export | grep \"$SHELVAR\" || printf '%s\\n' 1)\"\nif [[ \"$ISHELVAR\" != 1 ]]\nthen\nprintf \"export %s\\\\n\" \"${ISHELVAR/declare -x }\" >> root/.bash_profile\nfi\ndone\nprintf \"%s\\\\n\" \"export GPG_TTY=\\\"\\$(tty)\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"export MOZ_FAKE_NO_SANDBOX=1\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"export PULSE_SERVER=127.0.0.1\" >> root/.bash_profile\nif [ -d \"$INSTALLDIR\"/usr/local/texlive ]\nthen\nprintf \"%s\\\\n\" \"[ -d \\\"$TEXDIR\\\" ] && export TEXDIR=\\\"$TEXDIR\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d \\\"\\$HOME\\\"/.texlive2021/texmf-config ] && export TEXMFCONFIG=\\\"\\$HOME/.texlive2021/texmf-config\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d \\\"\\$HOME\\\"/texmf ] && export TEXMFHOME=\\\"\\$HOME/texmf\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d /usr/local/texlive/texmf-local ] && export TEXMFLOCAL=\\\"/usr/local/texlive/texmf-local\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d $TEXDIR/texmf-config ] && export TEXMFSYSCONFIG=\\\"$TEXDIR/texmf-config\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d $TEXDIR/texmf-var ] && export TEXMFSYSVAR=\\\"$TEXDIR/texmf-var\\\"\" >> root/.bash_profile\nprintf \"%s\\\\n\" \"[ -d \\\"\\$HOME\\\"/.texlive2021/texmf-var ] && export TEXMFVAR=\\\"\\$HOME/.texlive2021/texmf-var\\\"\" >> root/.bash_profile\nfi\nprintf \"%s\\\\n\" \"export TZ=\\\"$(getprop persist.sys.timezone)\\\"\n## .bash_profile FE\" >> root/.bash_profile\n}\n\n_ADDbashrc_() {\n[ -e root/.bashrc ] && _DOTHRF_ \"root/.bashrc\"\ncat > root/.bashrc <<- EOM\nfunction _AM_() {\ncommand -v am 1>/dev/null || cp \"$PREFIX\"/bin/am \"$TMXRCHBNDR\"\n}\nfunction _PWD_() {\nprintf '%s\\n' \"\\$PWD\"\n}\nfunction git-branch() {\nif [ -d .git ]\nthen\nprintf \"%s\" \"(\\$(git branch | awk '/\\*/{print \\$2}'))\";\nfi\n}\nfunction em() {\n[ -x /usr/bin/make ] || { pc base base-devel || pci base base-devel ; }\n{ [ -x $TMXRCHBNDR/uemacs ] && $TMXRCHBNDR/uemacs \"\\$@\" ; } || { { { cd || exit 69 ; } && [ -d uemacs ] || gcl https://github.com/torvalds/uemacs ; } && { [ -d uemacs ] && { cd uemacs || exit 69 ; } ; } && printf '%s\\\\n' \"making uemacs\" && make && cp -f em $TMXRCHBNDR/uemacs && make clean && $TMXRCHBNDR/uemacs emacs.hlp ; }\n}\nalias ..='cd ../.. && _PWD_'\nalias ...='cd ../../.. && _PWD_'\nalias ....='cd ../../../.. && _PWD_'\nalias .....='cd ../../../../.. && _PWD_'\nalias aiabrowser='_AM_ && am start -a android.intent.action.VIEW -d \"content://com.android.externalstorage.documents/root/primary\"'\t## Reference [Android 11 (with Termux storage permission denied) question; What's the source for the shortcut to the file manager of the settings app?](https://www.reddit.com/r/termux/comments/msq7lm/android_11_with_termux_storage_permission_denied/) Contributors u/DutchOfBurdock u/xeffyr\nalias aiachrome='_AM_ && am start --user 0 -n com.android.chrome/com.google.android.apps.chrome.Main'\t## Reference [Can I start an app from Termux's command line? How?](https://www.reddit.com/r/termux/comments/62zi71/can_i_start_an_app_from_termuxs_command_line_how/) Contributors u/u/fornwall u/Kramshet\nalias aiadial='_AM_ && am start -a android.intent.action.DIAL'\nalias aiafilemanager='_AM_ && am start -a android.intent.action.VIEW -d \"content://com.android.externalstorage.documents/root/primary\"'\nalias aiasearch='_AM_ && am start -a android.intent.action.SEARCH'\nalias aiaview='_AM_ && am start -a android.intent.action.VIEW'\nalias aiaviewd='_AM_ && am start -a android.intent.action.VIEW -d '\nalias aiawebsearch='_AM_ && am start -a android.intent.action.WEB_SEARCH'\nalias C='cd .. && _PWD_'\nalias c='cd .. && _PWD_'\nalias CN='cat -n \\$(command -v' # use a close parenthesis ) to complete this alias\nalias Cn='cat -n \\$(command -v' # use a close parenthesis ) to complete this alias\nalias cn='cat -n \\$(command -v' # use a close parenthesis ) to complete this alias\nalias CW='cat \\$(command -v' # use a close parenthesis ) to complete this alias\nalias Cw='cat \\$(command -v' # use a close parenthesis ) to complete this alias\nalias cw='cat \\$(command -v' # use a close parenthesis ) to complete this alias\nalias CR='cp -r'\nalias Cr='cp -r'\nalias cr='cp -r'\nalias CUO='curl -C - --fail --retry 4 -O'\nalias Cuo='curl -C - --fail --retry 4 -O'\nalias cuo='curl -C - --fail --retry 4 -O'\nalias CUOL='curl -C - --fail --retry 4 -OL'\nalias Cuol='curl -C - --fail --retry 4 -OL'\nalias cuol='curl -C - --fail --retry 4 -OL'\nalias D='nice -n 20 du -hs'\nalias d='nice -n 20 du -hs'\nalias DFA='df | grep storage\\/emulated'\nalias Dfa='df | grep storage\\/emulated'\nalias dfa='df | grep storage\\/emulated'\nalias DFT='df | grep storage\\/'\nalias Dft='df | grep storage\\/'\nalias dft='df | grep storage\\/'\nalias E='exit'\nalias e='exit'\nalias F='nice -n 20 grep -n --color=always'\nalias f='nice -n 20 grep -n --color=always'\nalias G='ga ; gcm ; gp'\nalias g='ga ; gcm ; gp'\nalias GITS='git show'\nalias Gits='git show'\nalias gits='git show'\nalias GCA='git commit -a -S'\nalias Gca='git commit -a -S'\nalias gca='git commit -a -S'\nalias GCAM='git commit -a -S -m'\nalias Gcam='git commit -a -S -m'\nalias gcam='git commit -a -S -m'\nalias H='history >> \\$HOME/.historyfile'\nalias h='history >> \\$HOME/.historyfile'\nalias HW='head \\$(command -v' # use a close parenthesis ) to complete this alias\nalias Hw='head \\$(command -v' # use a close parenthesis ) to complete this alias\nalias hw='head \\$(command -v' # use a close parenthesis ) to complete this alias\nalias J='jobs'\nalias j='jobs'\nalias I='whoami'\nalias i='whoami'\nalias L='ls -al --color=always'\nalias l='ls -al --color=always'\nalias LA='ls -alR --color=always'\nalias La='ls -alR --color=always'\nalias la='ls -alR --color=always'\nalias LS='ls --color=always'\nalias Ls='ls --color=always'\nalias ls='ls --color=always'\nalias LR='ls -alR --color=always'\nalias Lr='ls -alR --color=always'\nalias lr='ls -alR --color=always'\nalias MEMAV='grep -i available /proc/meminfo'\nalias Memav='grep -i available /proc/meminfo'\nalias MEMFREE='grep -i free /proc/meminfo'\nalias Memfree='grep -i free /proc/meminfo'\nalias MEMINFO='cat /proc/meminfo'\nalias Meminfo='cat /proc/meminfo'\nalias MEMTOT='grep -i total /proc/meminfo'\nalias Memtot='grep -i total /proc/meminfo'\nalias MKDIP='mkdir -p'\nalias Mkdip='mkdir -p'\nalias mkdip='mkdir -p'\nalias N2='nice -n -20'\nalias n2='nice -n -20'\nalias P='_PWD_'\nalias p='_PWD_'\nalias PCS='pacman -S'\nalias Pcs='pacman -S'\nalias pcs='pacman -S'\nalias PCSS='pacman -Ss'\nalias Pcss='pacman -Ss'\nalias pcss='pacman -Ss'\nalias PF='printf \"%s\\n\"'\nalias Pf='printf \"%s\\n\"'\nalias pf='printf \"%s\\n\"'\nalias PX='ps aux'\nalias Px='ps aux'\nalias px='ps aux'\nalias Q='exit'\nalias q='exit'\nalias RMD='rmdir -p'\nalias Rmd='rmdir -p'\nalias rmd='rmdir -p'\nalias TO='termux-open'\nalias To='termux-open'\nalias to='termux-open'\nalias TW='tail \\$(command -v' # use a close parenthesis ) to complete this alias\nalias Tw='tail \\$(command -v' # use a close parenthesis ) to complete this alias\nalias tw='tail \\$(command -v' # use a close parenthesis ) to complete this alias\nalias V='v'\nalias v='v'\nalias UM='uname -m'\nalias Um='uname -m'\nalias um='uname -m'\nEOM\n[ ! -f \"$HOME\"/.bashrc ] ||grep -s EDITOR \"$HOME\"/.bashrc | grep -s \"export\" >>  root/.bashrc ||:\n[ ! -f \"$HOME\"/.bashrc ] || grep -s proxy \"$HOME\"/.bashrc | grep -s \"export\" >>  root/.bashrc ||:\nprintf \"%s\\\\n\" \"## .bashrc FE\" >> root/.bashrc\n}\n\n_ADDcams_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/cams \"### Example usage: 'cams 0 255 16 2048 r 90 2'\n### Loop example: 'while true ; do cams ; done'\n### Semantics: [camid [totalframes+1 [framespersecond [threshold [r[otate] [degrees [exitwait]]]]]]]\n### Please run 'au ffmpeg imagemagick termux-api' before running this script.  Also ensure that Termux-api is installed, which is available at this https://github.com/termux/termux-api/actions/workflows/debug_build.yml webpage.\n### VLC media player APK can be downloaded from these https://www.videolan.org/vlc/download-android.html and https://get.videolan.org/vlc-android/3.3.4/ webpages.\n### More options in addition to image checking and rotation can be added by editing this file at the magick rotation command;  The command line options for magick are listed at this https://imagemagick.org/script/command-line-options.php webpage.\n### Seven arguments are listed below, including their default values;  If run with no arguments, the default values will be used:\"\ncat >> \"$TMXRCHBNDS\"/cams <<- EOM\n[[ -n \"\\${1:-}\" ]] && { [[ \"\\${1//-}\" = [\\/]* ]] || [[ \"\\${1//-}\" = [?]* ]] || [[ \"\\${1//-}\" = [Hh]* ]] ; } && { printf '\\e[1;32m%s\\n' \"Help for '\\${0##*/}':\" && TSFILE=\"(\\$(grep '##\\ ' \"\\$0\"))\" && printf '\\e[0;32m%s\\e[1;32m\\n%s\\n' \"\\$(for HL in \"\\${TSFILE[@]}\" ; do cut -d\\) -f1 <<< \"\\${HL//###/\t}\" | cut -f 2 ; done )\" \"Help for '\\${0##*/}': DONE\" ; exit ; }\n[[ -n \"\\${1:-}\" ]] && { [[ \"\\${1//-}\" = [Pp]* ]] && POCKET=0 && CAMID=2 && printf '%s\\\\n' pocket || CAMID=\\${1:-2} ; }\n[[ -z \"\\${1:-}\" ]] && CAMID=2 ### [1] default 2:  One camera 0 1 2 3 4 5 6 7 id,\nFRAMECTOT=\\${2:-11} ### [2] default 11:  Total frame count + 1,\nFRAMERATE=\\${3:-1} ### [3] default 1:  Video 0.5 1 2 4 8 16 32 frames per second rendered in the mpg file,\nTHRESHOLDSET=\\${4:-256} ### [4] default 256:  Byte difference 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 between last two picture frames taken;  Can be used for motion detection.  The greater the number, the lesser the sensitivity.  Camera resolution also affects this argument,\n_CAMS_ () {\nwhile [ \"\\$FRAMECOUNT\" -le \"\\$FRAMECTOT\" ]\ndo\nLTSENSOR=\"\\$(termux-sensor -n 1 -s \"LIGHT\" | grep -w 0 || printf 1)\"\nif [ \"\\$LTSENSOR\" -eq 1 ]\nthen\n{ [[ \"\\${POCKET:-}\" == 0 ]] && _CAMSSENSORS_ \"\\$@\" ; } || _CAMSCORE_ \"\\$@\"\nelse\nprintf '\\e[0;36m%s\\e[0m\\n' \"IM light sensor wait; sleeping.\"\nsleep 4\nfi\ndone\n}\n_CAMSSENSORS_ () {\nITSENSOR=\"\\$(termux-sensor -n 1 -s \"IN_POCKET\" | grep 1|| printf 0)\"\nPYSENSOR=\"\\$(termux-sensor -n 1 -s \"PROXIMITY\" | grep 1|| printf 0)\"\nif [ \"\\${ITSENSOR//,}\" -eq 1 ] || [ \"\\$PYSENSOR\" -eq 1 ]\nthen\n_CAMSCORE_ \"\\$@\"\nelse\nprintf '\\e[0;36m%s\\e[0m\\n' \"IM sensors wait; sleeping.\"\nsleep 4\nfi\n}\n_CAMSCORE_ () {\nFRAMENAME=\"camid\\$(printf '%s.%04d.jpg' \"\\$CAMID\" \"\\$FRAMECOUNT\")\"\nprintf '\\e[0;32m%s\\e[1;32m%s\\e[0;32m%s\\e[1;32m%s\\e[0;32m%s\\n\\e[0;32m%s' \"IT \" \"\\$((FRAMECOUNT + 1))/\\$((FRAMECTOT + 1))\" \" frame count: \" \"\\${THRESHOLDSET:-} threshold\" \" set\" \"IP camid \\$CAMID taking picture \\$FRAMENAME: \"\n:>\"\\$PWD/\\$FRAMENAME\"\nsleep 0.42 # Adjust for device being used; This sleep may be unnecessary.\n\"\\${PREFIX:-/data/data/com.termux/files/usr}\"/libexec/termux-api CameraPhoto --es camera \"\\$CAMID\" --es file \"\\$PWD/\\$FRAMENAME\"\nprintf '\\e[0;32m%s\\n' \"DONE\"\n_ISZERO_ \"\\$@\"\n}\n_CHECKMOTIONDIFF_() {\nif [ \"\\$FRAMECOUNT\" -ne 0 ]\nthen\nTHRESHOLD=\"\\$((LASTZERO - ISZERO))\"\nTHRESHOLD=\"\\${THRESHOLD//-}\"\nif [ \"\\$THRESHOLD\" -le \"\\$THRESHOLDSET\" ]\nthen\nprintf '\\e[0;2m%s\\n' \"ID \\$THRESHOLD/\\$THRESHOLDSET threshold: deleting file \\$FRAMENAME\"\nrm -f \"\\$FRAMENAME\"\nOLDISZERO=\"\\$ISZERO\"\nfi\nfi\n}\n_ISZERO_ () {\nif [ -n \"\\${ISZERO:-}\" ]\nthen\nLASTZERO=\"\\$ISZERO\"\nfi\nISZERO=\"\\$(find . -type f -name \"\\$FRAMENAME\" -printf \"%s\")\"\nprintf '\\e[0;36m%s\\e[1;36m%s\\n' \"IS framename \\$FRAMENAME size: \" \"\\$ISZERO\"\nif [ \"\\$ISZERO\" -eq 0 ]\nthen\nISZERO=\"\\${OLDISZERO:-}\"\nprintf '\\e[0;33m%s' \"E0 deleting zero size file \\$FRAMENAME: \"\nrm -f \"\\$FRAMENAME\"\nprintf '\\e[0;32m%s\\n' \"DONE\"\nE0VAR=1\nfi\nif [[ \\${E0VAR:-} == 0 ]]\nthen\n_CHECKMOTIONDIFF_\n_MAGICKCK_ \"\\$@\"\nelse\nE0VAR=0\nfi\n}\n_MAKEDIRS_ () {\nCAMD=\"camid\\$CAMID\"\n[ -e \"output/\\$CAMD/\\$CAMD\\$TIMESTAMP\" ] || { printf '\\e[0;36m%s' \"IM mkdir -p output/\\$CAMD/\\$CAMD\\$TIMESTAMP: \" && mkdir -p output/\"\\$CAMD/\\$CAMD\\$TIMESTAMP\" && printf '\\e[0;32m%s\\n' \"DONE\"; }\n[ -e output/gifs/\"\\$CAMD\" ] || { printf '\\e[0;36m%s' \"IM mkdir -p output/gifs/\\$CAMD: \" && mkdir -p output/gifs/\"\\$CAMD\" && printf '\\e[0;32m%s\\n' \"DONE\"; }\n[ -e output/webms/\"\\$CAMD\" ] || { printf '\\e[0;36m%s' \"IM mkdir -p output/webms/\\$CAMD: \" && mkdir -p output/webms/\"\\$CAMD\" && printf '\\e[0;32m%s\\n' \"DONE\"; }\nprintf '\\e[0;36m%s' \"IM cd output/\\$CAMD/\\$CAMD\\$TIMESTAMP: \" && { cd output/\"\\$CAMD/\\$CAMD\\$TIMESTAMP\" || exit 69 ; } && printf '\\e[0;32m%s\\n' \"DONE\"\n}\n_MAGICKCK_ () {\nif [ -e \"\\$FRAMENAME\" ]\nthen\nprintf '\\e[0;36m%s' \"IC checking file \\$FRAMENAME for errors: \"\nMAGICKCK=\"\\$(nice -n 20 magick identify \"\\$FRAMENAME\" 2>&1 ||:)\"\nif grep -i error <<< \"\\$MAGICKCK\"\nthen\nprintf '\\e[0;31m%s\\e[0m\\n' \"ERROR\"\nrm -f \"\\$FRAMENAME\"\nprintf '\\e[0;31m%s\\n\\e[0;36m%s\\n' \"ED deleted file \\$FRAMENAME: ERROR\" \"IR redoing file \\$FRAMENAME...\"\nelse\nprintf '\\e[0;32m%s\\n' \"DONE\"\nFRAMECOUNT=\"\\$((FRAMECOUNT + 1))\"\nprintf '\\e[0;32m%s\\e[1;32m%s\\e[0;32m%s\\n' \"IF \" \"file \\$FRAMENAME added\" \" to que.\"\nif [ -n \"\\${5:-}\" ]\nthen\nif [[ \"\\${5//-}\" = [Rr]* ]] ### [5] default no rotation:  R|r[otate]: useful for portrait orientation.  You can use R or r to activate rotation which is preset to 90° rotation.  The sixth argument can be used to enter a rotation angle to change the preset 90° rotation,\nthen\nprintf '\\e[0;36m%s' \"IR rotating file \\$FRAMENAME by \\${6:-90}°: \" ### [6] default 90°:  Enter desired picture rotation angle in digits if you want to use 180° and 270° degree rotation.  Other rotation angles can also be used,\nnice -n 20 magick \"\\$FRAMENAME\" -rotate \"\\${6:-90}\" \"\\$FRAMENAME\".jpg\nmv \"\\$FRAMENAME\".jpg \"\\$FRAMENAME\"\nprintf '\\e[0;32m%s\\n' \"DONE\"\nfi\nfi\nfi\nfi\n}\n_MECONVERT_ () {\nprintf '\\e[0;36m%s\\e[0m\\n' \"IM making camid\\$CAMID.\\$TIMESTAMP.gif: This job will complete in the background...\" && nice -n 20 convert -delay \"\\$((FRAMERATE * 100))\" -loop 0 \"\\$CAMD.\"*.jpg \"\\$CAMD.\\$TIMESTAMP\".gif && { ls -al \"\\$CAMD.\\$TIMESTAMP\".gif && printf '\\e[0;32m%s\\e[0m\\n' \"IM making camid\\$CAMID.\\$TIMESTAMP.gif: DONE\" ; } || printf '\\e[1;31m%s\\e[0m\\n' \"EM creating camid\\$CAMID.\\$TIMESTAMP.gif: ERROR\"\nprintf '\\e[0;36m%s' \"IM mv camid\\$CAMID.\\$TIMESTAMP.gif ../../gifs/\\$CAMD: \" && mv \"\\$CAMD.\\$TIMESTAMP\".gif ../../gifs/\\$CAMD && printf '\\e[0;32m%s\\e[0m\\n' \"DONE\"\n}\n_MEFFMPEG_ () {\n# To start at frame 20 and finish at frame 420: ffmpeg -start_number 20 -i filename%04d.jpg -vframes 400 video.webm\nprintf '\\e[0;36m%s\\e[0m\\n' \"IM making camid\\$CAMID.\\$TIMESTAMP.webm: This job will complete in the background...\" && nice -n 20 ffmpeg -framerate \"\\$FRAMERATE\" -i \"\\$CAMD.\"%04d.jpg -movflags +faststart -c:v libvpx-vp9 -g 1 \"\\$CAMD.\\$TIMESTAMP\".webm && { ls -al \"\\$CAMD.\\$TIMESTAMP\".webm && printf '\\e[0;32m%s\\e[0m\\n' \"IM making camid\\$CAMID.\\$TIMESTAMP.webm: DONE\" ; } || printf '\\e[1;31m%s\\e[0m\\n' \"EM creating camid\\$CAMID.\\$TIMESTAMP.webm: ERROR\"\nprintf '\\e[0;36m%s' \"IM mv camid\\$CAMID.\\$TIMESTAMP.webm ../../webm/\\$CAMD; \" && mv \"\\$CAMD.\\$TIMESTAMP\".webm ../../webms/\\$CAMD && printf '\\e[0;32m%s\\e[0m\\n' \"DONE\"\n}\nprintf '\\e[0;34m%s\\e[1;36m%s\\e[0;34m%s' \"Starting command \" \"termux-wake-lock\" \": \"\nam startservice --user 0 -a com.termux.service_wake_lock com.termux/com.termux.app.TermuxService 1>/dev/null && printf '\\e[0;32m%s\\n\\e[0;34m%s\\e[1;36m%s\\e[0;34m%s\\n' \"DONE\" \"Command \" \"termux-wake-unlock\" \" stops the wake lock.\" || printf '\\e[0;33m%s\\e[0m\\n' \"UTP am startservice: Continuing...\"\nE0VAR=0 # used to process zero size files\nFRAMECOUNT=0 # initial frame count\nTIMESTAMP=\"\\$(date +%Y%m%d%H%M%S)\"\n_MAKEDIRS_ \"\\${1:-2}\"\n_CAMS_ \"\\$@\"\n_MECONVERT_ &\n_MEFFMPEG_ &\nPSAUX=\"(\\$(ps aux))\"\nPSAUX=\"\\$(grep -e convert -e ffmpeg <<< \"\\${PSAUX[@]}\" | cut -d\":\" -f 2-9999 | cut -d \" \" -f 2-9999 ||:)\"\nprintf '\\e[0;34m%s\\e[1;36m%s\\n\\e[1;32m%s\\n' \"IM \" \"running these background jobs:\" \"\\${PSAUX[@]}\"\nprintf '\\e[0;34m%s\\e[1;36m%s\\e[0;34m%s\\n' \"IM \" \"ps aux\" \" shows processes running.\"\nprintf '\\e[0;34m%s\\e[1;36m%s\\e[0;34m%s\\e[0m\\n' \"The command \" \"termux-wake-unlock\" \" stops the wake lock.\"\nsleep \"\\${7:-4}\" ### [7] default of four seconds:  Time before exit;  Programs 'convert' and 'ffmpeg' will continue to run in the background until their jobs of producing animated gif and webm files end.\n## $INSTALLDIR$TMXRCHBNDR/cams FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/cams\n}\n\n_ADDcdtd_() {\n_CFLHD_ \"$TMXRCHBNDS\"/cdtd \"# Usage: \\`. cdtd\\` the dot sources \\`cdtd\\` which makes this shortcut script work.\"\nprintf \"%s\\\\n\" \"#!/usr/bin/env bash\ncd $HOME/storage/downloads && pwd\n## $INSTALLDIR$TMXRCHBNDR/cdtd FE\" >> \"$TMXRCHBNDS\"/cdtd\nchmod 755 \"$TMXRCHBNDS\"/cdtd\n}\n\n_ADDcdth_() {\n_CFLHD_ \"$TMXRCHBNDS\"/cdth \"# Usage: \\`. cdth\\` the dot sources \\`cdth\\` which makes this shortcut script work.\"\nprintf \"%s\\\\n\" \"#!/usr/bin/env bash\ncd $HOME && pwd\n## $INSTALLDIR$TMXRCHBNDR/cdth FE\" > \"$TMXRCHBNDS\"/cdth\nchmod 755 \"$TMXRCHBNDS\"/cdth\n}\n\n_ADDcdtmp_() {\n_CFLHD_ \"$TMXRCHBNDS\"/cdtmp \"# Usage: \\`. cdtmp\\` the dot sources \\`cdtmp\\` which makes this shortcut script work.\"\nprintf \"%s\\\\n\" \"#!/usr/bin/env bash\ncd $TMPDIR && pwd || exit 69\n## $INSTALLDIR$TMXRCHBNDR/cdtmp FE\" > \"$TMXRCHBNDS\"/cdtmp\nchmod 755 \"$TMXRCHBNDS\"/cdtmp\n}\n\n_ADDch_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/ch \"# This script creates and deletes the .hushlogin and .hushlogout files.\"\ncat >> \"$TMXRCHBNDS\"/ch <<- EOM\ndeclare -a ARGS\n\n_TRPET_() {\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n_PRINTTAIL_ \"\\${ARGS[@]}\"\n}\n\n_PRINTTAIL_() {\nprintf \"\\\\e[0m%s \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;34m: \\\\e[1;32m%s\\\\e[0m 🏁  \\\\n\\\\e[0m\" \"TermuxArch command\" \"\\$STRNRG\"  \"version \\$VERSIONID\" \"DONE 📱\"\nprintf '\\033]2;  🔑 TermuxArch %s:DONE 📱 \\007' \"\\$STRNRG\"\n}\n\n## ch begin ####################################################################\n\nif [[ -z \"\\${1:-}\" ]]\nthen\nARGS=\"\"\nelse\nARGS=\"\\$@\"\nfi\n\nif [[ -f \"\\$HOME\"/.hushlogin ]] && [[ -f \"\\$HOME\"/.hushlogout ]]\nthen\nrm -f \"\\$HOME\"/.hushlogin \"\\$HOME\"/.hushlogout\nprintf \"%s\\\\n\" \"Hushed login and logout: OFF\"\nelif [[ -f \"\\$HOME\"/.hushlogin ]] || [[ -f \"\\$HOME\"/.hushlogout ]]\nthen\ntouch \"\\$HOME\"/.hushlogin \"\\$HOME\"/.hushlogout\nprintf \"%s\\\\n\" \"Hushed login and logout: ON\"\nelse\ntouch \"\\$HOME\"/.hushlogin \"\\$HOME\"/.hushlogout\nprintf \"%s\\\\n\" \"Hushed login and logout: ON\"\nfi\n## $INSTALLDIR$TMXRCHBNDR/ch FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/ch\n}\n\n_ADDchperms.cache+gnupg_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/chperms.cache+gnupg\ncat >> \"$TMXRCHBNDS\"/chperms.cache+gnupg <<- EOM\nset -x\n[[ -d \"\\$HOME\"/.cache ]] && find \"\\$HOME\"/.cache -type d -exec chmod 777 {} \\; && find \"\\$HOME\"/.cache -type f -exec chmod 666 {} \\;\n[[ -d \"\\$HOME/\".gnupg ]] && find \"\\$HOME/\".gnupg -type d -exec chmod 777 {} \\; && find \"\\$HOME/\".gnupg -type f -exec chmod 666 {} \\;\nset +x\n## $INSTALLDIR$TMXRCHBNDR/chperms.cache+gnupg FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/chperms.cache+gnupg\n}\n\n_ADDcsystemctl_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/csystemctl \"# Contributor https://github.com/petkar\"\ncat >> \"$TMXRCHBNDS\"/csystemctl <<- EOM\nINSTALLDIR=\"$INSTALLDIR\"\nprintf \"\\\\e[38;5;148m%s\\\\e[0m\\\\n\" \"Installing /usr/bin/systemctl replacement: \"\n[ -f \"/run/lock/${INSTALLDIR##*/}/csystemctl.lock\" ] && printf \"%s\\\\n\" \"Already installed $TMXRCHBNDR/systemctl replacement: DONE 🏁\" && exit\ndeclare COMMANDP\nCOMMANDP=\"\\$(command -v python3)\" || printf \"%s\\\\n\" \"Command python3 can not be found: continuing...\"\n[[ \"\\${COMMANDP:-}\" == *python3* ]] || { pc python3 || pci python3 ; }\nSDATE=\"\\$(date +%s)\"\n# path is $TMXRCHBNDR because updates overwrite /usr/bin/systemctl and may make systemctl-replacement obsolete\n# backup original binary\nmv -f /usr/bin/systemctl $INSTALLDIR/var/backups/${INSTALLDIR##*/}/systemctl.\\$SDATE.bkp\nprintf \"\\\\e[38;5;148m%s\\\\n\\\\e[0m\" \"Moved /usr/bin/systemctl to $INSTALLDIR/var/backups/${INSTALLDIR##*/}/systemctl.\\$SDATE.bkp\"\nprintf \"%s\\\\n\" \"Getting replacement systemctl from https://raw.githubusercontent.com/TermuxArch/docker-systemctl-replacement/master/files/docker/systemctl3.py\"\n# Arch Linux package 'systemctl' updates will mot halt functioning as $TMXRCHBNDR precedes /usr/bin in the PATH\n# download and copy to both directories $TMXRCHBNDR and /usr/bin\ncurl --fail --retry 2 https://raw.githubusercontent.com/TermuxArch/docker-systemctl-replacement/master/files/docker/systemctl3.py | tee /usr/bin/systemctl $TMXRCHBNDR/systemctl >/dev/null\nchmod 755 /usr/bin/systemctl $TMXRCHBNDR/systemctl\n:>\"/run/lock/${INSTALLDIR##*/}/csystemctl.lock\"\nprintf \"\\\\e[38;5;148m%s\\\\e[1;32m%s\\\\e[0m\\\\n\" \"Installing systemctl replacement in $TMXRCHBNDR and /usr/bin: \" \"DONE 🏁\"\n## $INSTALLDIR$TMXRCHBNDR/csystemctl FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/csystemctl\n}\n\n_ADDcolorizebashrc_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/colorizebashrc \"# Change always to never and vica versa in file '.bashrc'.\"\ncat >> \"$TMXRCHBNDS\"/colorizebashrc <<- EOM\ngrep always \"\\$HOME\"/.bashrc 1>/dev/null && sed -i 's/always/never/g' \"\\$HOME\"/.bashrc || sed -i 's/never/always/g' \"\\$HOME\"/.bashrc\ngrep always \"\\$HOME\"/.bashrc || grep never \"\\$HOME\"/.bashrc\n## $INSTALLDIR$TMXRCHBNDR/colorizebashrc FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/colorizebashrc\n}\n\n_ADDes_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/es\ncat >> \"$TMXRCHBNDS\"/es <<- EOM\nif [[ -z \"\\${1:-}\" ]]\nthen\nARGS=(\".\")\nelse\nARGS=(\"\\$@\")\nfi\nEOM\nprintf \"%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in $INSTALLDIR; the command '$STARTBIN command addauser username' can create user accounts in $INSTALLDIR from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit\" \"[ ! -x \\\"\\$(command -v emacs)\\\" ] && { pc emacs || pci emacs ; } && emacs \\\"\\${ARGS[@]}\\\" || emacs \\\"\\${ARGS[@]}\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/es FE\" >> \"$TMXRCHBNDS\"/es\nchmod 755 \"$TMXRCHBNDS\"/es\n}\n\n_ADDexd_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/exd \"# Usage: \\`. exd\\` the dot sources \\`exd\\` which makes this shortcut script work. Reference https://github.com/SDRausty/TermuxArch/issues/59#issuecomment-381285151_\"\ncat >> \"$TMXRCHBNDS\"/exd <<- EOM\nexport DISPLAY=:0 PULSE_SERVER=tcp:127.0.0.1:4712\n## $INSTALLDIR$TMXRCHBNDR/exd FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/exd\n}\n\n_ADDfibs_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/fibs\ncat >> \"$TMXRCHBNDS\"/fibs <<- EOM\nfind /proc/ -name maps 2>/dev/null | xargs awk '{print \\$6}' | grep '\\.so' | sort | uniq && exit\n## $INSTALLDIR$TMXRCHBNDR/fibs FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/fibs\n}\n\n_ADDga_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/ga\ncat >> \"$TMXRCHBNDS\"/ga <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit add .\nelse\n{ pc git || pci git ; }\ngit add .\nfi\n## $INSTALLDIR$TMXRCHBNDR/ga FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/ga\n}\n\n_ADDgcl_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gcl \"# Contributor reddit.com/u/ElectricalUnion\"\nprintf \"%s\\\\n\" \"{ [ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\e[0m\\\\n\\\" \\\"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:\\\" \\\"  Script '\\${0##*/}' should not be used as root:  The command 'addauser' creates user accounts in Arch Linux in Termux PRoot and configures these user accounts for the Arch Linux 'sudo' command:  The 'addauser' command is intended to be run by the Arch Linux in Termux PRoot root user:  To use 'addauser' directly from Termux you can run '$STARTBIN command 'addauser user'' in native Termux to create this account in Arch Linux Termux PRoot:  The command '$STARTBIN help' has more information about using '$STARTBIN':  \\\" ; } && exit 101\n{ [ \\\"\\$#\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\e[0m\\\\n\\\" \\\"Example usage: \\\" \\\"'\\${0##*/} https://github.com/TermuxArch/TermuxArch' \\\" ; } && exit 101\n_GITCLONE_() {\ngit clone --depth 1 \\\"\\$@\\\" --single-branch || git clone --depth 1 \\\"\\$@\\\" --single-branch || printf \\\"\\\\n\\\\e[1m%s\\\\n\\\" \\\"This command 'sudo pacman -Rdd ca-certificates-utils ; sudo pacman -S ca-certificates-utils ; sudo pacman -Syu' might resolve an 'error setting certificate verify locations:  CAfile:' error.\\\"\n}\nBASENAME=\\\"\\${@#*//}\\\" # strip before double slash\nBASENAME=\\\"\\${BASENAME##*/}\\\" # strip before last slash\nif [ -d \\\"\\$BASENAME\\\" ]\nthen\nprintf 'Directory '%s' exists;  EXITING...\\\\n' \\\"\\$BASENAME\\\"\nexit\nfi\n[ -x \\\"\\$(command -v git)\\\" ] || pc git || pci git\n_GITCLONE_ \\\"\\$@\\\"\n## $INSTALLDIR$TMXRCHBNDR/gcl FE\" >> \"$TMXRCHBNDS\"/gcl\nchmod 755 \"$TMXRCHBNDS\"/gcl\n}\n\n_ADDgclone_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gclone \"# Usefull for cloning over very slow and sketchy Internet connections.\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/gclone\n_DPTCHHLP_ \"$TMXRCHBNDS\"/gclone\ncat >> \"$TMXRCHBNDS\"/gclone <<- EOM\n{ [ \"\\$#\" = 0 ] && printf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...s\\\\e[0m\\\\n\" \"Example usage: \" \"'\\${0##*/} https://github.com/TermuxArch/TermuxArch' \" ; } && exit 101\n_GCLONEMAIN_() {\nBASENAME=\"\\${@%/}\" # strip trailing slash\nBASENAME=\"\\${BASENAME#*//}\" # strip before double slash\nREPONAME=\"\\${BASENAME##*/}\" # strip before last slash\n{ [ -e \"\\$REPONAME-master\" ] && { cd \"\\$REPONAME-master\" || exit 69 ; } ; } || { [ -e \"\\$REPONAME-main\" ] || { wget -c -O \"\\$REPONAME.zip\" \"\\$*\"/archive/main.zip && unzip \"\\$REPONAME.zip\"  ; } && { cd \"\\$REPONAME-main\" || exit 69 ; } ; } || { [ -e \"\\$REPONAME-master\" ] || { wget -c -O \"\\$REPONAME.zip\" \"\\$*\"/archive/master.zip && unzip \"\\$REPONAME.zip\" ; } && { cd \"\\$REPONAME-master\" || exit 69 ; } ; }\ngit init\ngit remote add origin \"\\$@\" ||:\ngit checkout -b main || git checkout main\ngit add .\ngit pull --no-rebase --depth 1 \"\\$@\" master || git pull --no-rebase --depth 1 \"\\$@\" main\ngit add .\n}\nif [[ ! -x \"\\$(command -v wget)\" ]] && [[ ! -x \"\\$(command -v unzip)\" ]]\nthen\n{ pc wget unzip || pci wget unzip || au wget unzip ; }\n_GCLONEMAIN_ \"\\$@\"\nelse\n_GCLONEMAIN_ \"\\$@\"\nfi\n## $INSTALLDIR$TMXRCHBNDR/gclone FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gclone\n}\n\n_ADDgcm_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gcm\ncat >> \"$TMXRCHBNDS\"/gcm <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit commit\nelse\n{ pc git || pci git ; }\ngit commit\nfi\n## $INSTALLDIR$TMXRCHBNDR/gcm FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gcm\n}\n\n_ADDgitconfig_() {\nif [[ -f \"$HOME/.gitconfig\" ]]\nthen\nif [[ -f \"$INSTALLDIR/root/.gitconfig\" ]]\nthen\n_DOTHRF_ \"root/.gitconfig\"\ncp \"$HOME/.gitconfig\" \"$INSTALLDIR/root/.gitconfig\"\nelse\ncp \"$HOME/.gitconfig\" \"$INSTALLDIR/root/.gitconfig\"\nfi\nelse\n:>\"$INSTALLDIR/root/.gitconfig\"\nfi\n}\n\n_ADDgmu_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gmu\ncat >> \"$TMXRCHBNDS\"/gmu <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit submodule update --init --recursive --remote || git submodule update --init --recursive --remote --verbose\nelse\n{ pc git || pci git ; }\ngit submodule update --init --recursive --remote || git submodule update --init --recursive --remote --verbose\nfi\n## $INSTALLDIR$TMXRCHBNDR/gmu FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gmu\n}\n\n_ADDgp_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gp \"# git push https://username:password@github.com/username/repository.git\"\ncat >> \"$TMXRCHBNDS\"/gp <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit push\nelse\n{ pc git || pci git ; }\ngit push\nfi\n## $INSTALLDIR$TMXRCHBNDR/gp FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gp\n}\n\n_ADDgpl_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gpl\ncat >> \"$TMXRCHBNDS\"/gpl <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit pull || git pull --verbose\nelse\n{ pc git || pci git ; }\ngit pull || git pull --verbose\nfi\n## $INSTALLDIR$TMXRCHBNDR/gpl FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gpl\n}\n\n_ADDgsu_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/gsu\ncat >> \"$TMXRCHBNDS\"/gsu <<- EOM\nif [ -x \"\\$(command -v git)\" ]\nthen\ngit submodule update --init --recursive --remote || git submodule update --init --recursive --remote --verbose\nelse\n{ pc git || pci git ; }\ngit submodule update --init --recursive --remote || git submodule update --init --recursive --remote --verbose\nfi\n## $INSTALLDIR$TMXRCHBNDR/gsu FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/gsu\n}\n\n_ADDhunf_ () {\n_CFLHDR_ \"$TMXRCHBNDS\"/hunf\n_PRTRTHLP_ \"$TMXRCHBNDS\"/hunf\nprintf \"%s\\\\n%s\\\\n\" \"{ [ -x \\\"/usr/bin/hunspell\\\" ] || { pc hunspell hunspell-en_US || pci hunspell hunspell-en_US ; } ; } && /usr/bin/hunspell -p en_US \\\"\\$@\\\" || /usr/bin/hunspell -p en_US \\\"\\$@\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/hunf FE\" >> \"$TMXRCHBNDS\"/hunf\nchmod 755 \"$TMXRCHBNDS\"/hunf\n}\n\n_ADDhunw_ () {\n_CFLHDR_ \"$TMXRCHBNDS\"/hunw\n_PRTRTHLP_ \"$TMXRCHBNDS\"/hunw\nprintf \"%s\\\\n%s\\\\n\" \"{ [ -x \\\"/usr/bin/hunspell\\\" ] || { pc hunspell hunspell-en_US || pci hunspell hunspell-en_US ; } ; } && /usr/bin/hunspell -p en_US <<< \\\"\\$@\\\" || /usr/bin/hunspell -p en_US <<< \\\"\\$@\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/hunw FE\" >> \"$TMXRCHBNDS\"/hunw\nchmod 755 \"$TMXRCHBNDS\"/hunw\n}\n\n_ADDinfo_ () {\n_CFLHDR_ \"$TMXRCHBNDS\"/info\n_PRTRTHLP_ \"$TMXRCHBNDS\"/info\nprintf \"%s\\\\n%s\\\\n\" \"{ [ -x \\\"/usr/bin/info\\\" ] || { pc texinfo || pci texinfo ; } ; } && /usr/bin/info \\\"\\$@\\\" || /usr/bin/info \\\"\\$@\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/info FE\" >> \"$TMXRCHBNDS\"/info\nchmod 755 \"$TMXRCHBNDS\"/info\n}\n\n_ADDmakelibguestfs_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makelibguestfs \"# Developed around [userspace mount #74](https://github.com/SDRausty/termux-archlinux/issues/74) contributor gordol and [Feature Request: mount loopback device #376](https://github.com/termux/termux-app/issues/376) contributor SDRausty, and at [make[2]: *** No rule to make target 'guestfs_protocol.c', needed by 'all'. Stop. #82](https://github.com/libguestfs/libguestfs/issues/82, et. al.) contributor rwmjones, et. al.  Reference https://libguestfs.org/guestfs-building.1.html#building-from-git\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makelibguestfs\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makelibguestfs\ncat >> \"$TMXRCHBNDS\"/makelibguestfs <<- EOM\n# builtin help string variables begin\nNMCMND=\"\\$(uname -m)\"\nPSCMMT=\"(please quote multiple words)\"\nXLCD00=\"'\\$SRPTNM f 'machine virtual'' \\$PSCMMT\"\nXLCD0L=\"'\\$SRPTNM find 'machine virtual'' \\$PSCMMT\"\nXLCD01=\"'\\$SRPTNM b libguestfs'\"\nXLCD02=\"'\\$SRPTNM s libguestfs'\"\nXLCD03=\"'\\$SRPTNM g 'guestfish --help'' \\$PSCMMT\"\nXLCD04=\"'\\$SRPTNM l 'guestfish --help'' \\$PSCMMT\"\n# builtin help string variables end\nHLPSTG=\"One and two letter arguments are good; i.e. Command \\$XLCD00 is an equivalent of \\$XLCD0L.  Command \\$SRPTNM accepts these arguments:\n\nb[uild]\t\t\tbuild libguestfs.  Useful for building 'libguestfs' again.  This argument is a synonym for option 'make',\n\nf[ind packages]★\tfind default 'machine virtual' search or find AUR packages with search terms, EXAMPLE: \\$XLCD00,\n\ng[uestfish 'cmd cmd']\trun either guestfish shell (default) or run command commands if they are built.  This argument is a synonym for option 'libguestfs', EXAMPLE: \\$XLCD03,\n\nh[elp]\t\t\tprint this help screen,\n\nhe[lp building]★\tpresent this https://libguestfs.org/guestfs-building.1.html webpage,\n\nhel[p faq]★\t\tpresent this https://libguestfs.org/guestfs-faq.1.html webpage,\n\nl[ibguestfs 'cmd cmd']\trun either guestfish shell (default) or run commands if they are built.  This argument is a synonym for option 'guestfish', EXAMPLE: \\$XLCD04,\n\nm[ake]\t\t\tmake libguestfs.  Useful for making 'libguestfs' again.  This argument is a synonym for option 'build',\n\ns[how PKGBUILD]★\tshow the libguestfs PKGBUILD file or show a PKGBUILD file for a particular package, EXAMPLE: \\$XLCD02,\n\nv[irt-inspector 'cmd cmd']  run either virt-inspector (default) or run command 'virt-inspector 'cmd cmd'' if they are built,\n\n★open and use an Android web browser to find Arch Linux AUR packages matching search term(s) or view a particular PKGBUILD package file.  \"\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Ff]* ]] && { printf '\\\\e[0;32m%s' \"Finding '\\${2:-machine virtual}' AUR packages...  \" && am start -a android.intent.action.VIEW -d \"https://aur.archlinux.org/packages?O=0&K=\\${2:-machine virtual}\" ; exit ; } ; }\n[ -n \"\\${1:-}\" ] && { { [[ \"\\${1//-}\" = [Gg]* ]] || [[ \"\\${1//-}\" = [Ll]* ]] ; } && { [ -d \"\\$HOME\"/libguestfs ] && cd \"\\$HOME\"/libguestfs && printf '%s\\n' \"Running command '\\$HOME/libguestfs/run \\$HOME/libguestfs/fish/guestfish \\${2:-}' in directory '\\$PWD'...\" && \\$HOME/libguestfs/run \"\\$HOME/libguestfs/fish/guestfish \\${2:-}\" && exit || { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; } ; } ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Hh][Ee][Ll]* ]] && { printf '\\\\e[0;32m%s' \"Presenting this 'https://libguestfs.org/guestfs-faq.1.html' webpage...  \" && am start -a android.intent.action.VIEW -d \"https://libguestfs.org/guestfs-faq.1.html\" ; exit ; } ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Hh][Ee]* ]] && { printf '\\\\e[0;32m%s' \"Presenting this 'https://libguestfs.org/guestfs-building.1.html' webpage...  \" && am start -a android.intent.action.VIEW -d \"https://libguestfs.org/guestfs-building.1.html\" ; exit ; } ; }\n[ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Ss]* ]] && { printf '\\\\e[0;32m%s' \"Showing PKGBUILD file for '\\${2:-libguestfs}'...  \" && am start -a android.intent.action.VIEW -d \"https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=\\${2:-libguestfs}\" && exit ; }\n[ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Vv]* ]] && { [ -d \"\\$HOME\"/libguestfs ] && cd \"\\$HOME\"/libguestfs && printf '%s\\n' \"Running command '\\$HOME/libguestfs/run \\$HOME/libguestfs/fish/virt-inspector \\${2:-}' in directory '\\$PWD'...\" && \\$HOME/libguestfs/run \"\\$HOME/libguestfs/fish/guestfish \\${2:-}\" && exit || { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; } ; }\n[ -n \"\\${1:-}\" ] && { for ARG1 in '/' '?' {0..9} Aa Cc Dd Ee Hh Ii Jj Kk Oo Qq Rr Tt Uu Ww Xx Yy Zz ; do [[ \"\\${1//-}\" = [\"\\$ARG1\"]* ]] && { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; } ; done ; }\n# makelibguestfs begin\n[ -z \"\\${1:-}\" ] && { { [ -f \"\\$HOME\"/libguestfs/fish/guestfish.1 ] && { [ -x /usr/bin/man ] || { pc man || pci man ; } ; } && TMRCMDVL=\"man \\$HOME/libguestfs/fish/guestfish.1\" && printf '%s\\n' \"Running command '\\$TMRCMDVL' in directory '\\$PWD'...\" && \\$TMRCMDVL && exit ; } || printf \"\\\\e[48;5;22m%s\\\\n\" \"Command \\$SRPTNM is attempting to build and install 'libguestfs' for computer architecture '\\$NMCMND'...\" ; }\n# libguestfs dependencies\nGTFSDPND=(\nacl\nattr\naugeas\nautoconf\nautomake\nbash\nbinutils\nbison\nbtrfs-progs\nbzip2\ncdrtools\nclang\ncoreutils\ncpio\ncryptsetup\ncurl\ndebootstrap\ndhclient\ndhcpcd\ndiffutils\ndosfstools\ne2fsprogs\nexfatprogs\nf2fs-tools\nfile\nfindutils\nflex\ngawk\ngdb\ngdisk\ngettext\nglibc\ngperf\ngptfdisk\ngrep\ngroff\ngrub\ngzip\nhivex\niproute2\niputils\njansson\njfsutils\nkmod\nless\nlibcap\nlibconfig\nlibtirpc\nlibtool\nlibxml2\nlinux\nlrzip\nlsof\nlsscsi\nlvm2\nlzop\nm4\nmake\nman\nmdadm\nmodule-init-tools\nmtools\nmultipath-tools\nnetpbm\nnilfs-utils\nntfs-3g\nocaml\nocaml-findlib\npacman\nparted\npatch\npciutils\npcre2\nperl\nperl-module-build\nperl-pod-parser\npkgconf\npopt\nprocps\nprocps-ng\npsmisc\npython\npython-pycodestyle\nreiserfsprogs\nrpcsvc-proto\nrpm-tools\nrsync\nsed\nsquashfs-tools\nstrace\nsudo\nsupermin\nsystemd\nsystemd-libs\ntar\ntexinfo\nudev\nutil-linux\nvalgrind\nvirt-install\nvim\nwget\nwhich\nxfsprogs\nxorriso\nxz\nyara\n)\nNBRFCMDS=19\nNMCMND=\"\\$(uname -m)\"\n_SLCTRHPR_() {\n_RCSNPTC0_() { printf \"\\\\e[48;5;112m%s\\\\e[48;5;28m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]C0\" \" Running complementary command '\\${3:-}' for command '\\${2:-}' in directory '\\$PWD'...  \" && { { \\${3:-:} || _RCSRPTA1_ \"\\${1:-}\" \"\\${2:-}\" \"\\${3:-}\" \"\\${4:-}\" ; } ; printf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]C0\" \" Finished running complementary command '\\${3:-}' for command '\\${2:-}'.\" ; } ; }\n_RCSRPTA0_() { printf \"\\\\e[48;5;112m%s\\\\e[48;5;28m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]A0\" \" Running alternate command '\\${3:-}' for command '\\${2:-}' in directory '\\$PWD'...  \" && { { \\${3:-:} || _RCSRPTA1_ \"\\${1:-}\" \"\\${2:-}\" \"\\${3:-}\" \"\\${4:-}\" ; } ; printf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]A0\" \" Finished running alternate command '\\${3:-}' for command '\\${2:-}'.\" ; } ; }\n_RCSRPTA1_() { printf \"\\\\e[48;5;112m%s\\\\e[48;5;28m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]A1\" \" Running alternate command '\\${4:-}' for commands '\\${2:-}' then '\\${3:-}' in directory '\\$PWD'...  \" && { { \\${4:-:}  || : ; } ; printf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]A1\" \" Finished running alternate command '\\${4:-}' for commands '\\${2:-}' then '\\${3:-}''.\" ; } ; }\n_RCSNPTNM_() { printf \"\\\\e[48;5;112m%s\\\\e[48;5;28m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]\" \" Running command '\\$2' in directory '\\$PWD'...  \" && { { { \\$2  && _RCSNPTC0_ \"\\${1:-}\" \"\\${2:-}\" \"\\${3:-}\" \"\\${4:-}\" ; } || printf '%s\\n' \"\\${SRPTNM^^} SIGNAL:  \\$2\" ; } ; printf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]\" \" Finished running command '\\$2'.\" ; } ; }\n_RCSRPTNM_() { printf \"\\\\e[48;5;112m%s\\\\e[48;5;28m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]\" \" Running command '\\$2' in directory '\\$PWD'...  \" && { { \\$2  || _RCSRPTA0_ \"\\${1:-}\" \"\\${2:-}\" \"\\${3:-}\" \"\\${4:-}\" ; } ; printf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$1/\\$NBRFCMDS]\" \" Finished running command '\\$2'.\" ; } ; }\n_PRPCLANG_() { command -v clang 1>/dev/null && export CC=clang || { { pc clang || pci clang ; } && export CC=clang ; } ; }\n_BULDQEMU_() { { QEMUPKGI=(acpica brltty capstone glusterfs libcacard libepoxy libiscsi libnfs liblouis libpulse libslirp libusb liburing libvirt libxkbcommon make ninja pkgconf pcsc-tools pixman python-sphinx spice spice-protocol virglrenderer sdl2 sdl2_image) && pc \"\\${QEMUPKGI[@]}\" || pci \"\\${QEMUPKGI[@]}\" ; } && { cd || exit 69 ; }\nif [ -d qemu ]\nthen\ncd qemu || exit 69\ngpl\nelse\ngcl https://gitlab.com/qemu-project/qemu.git\ncd qemu || exit 69\nfi\ngit pull --depth 1\nif [ -d build ]\nthen\nrm -rf build\nmkdir -p build && { cd build || exit 69 ; }\nelse\nmkdir -p build && { cd build || exit 69 ; }\nfi\nfor TMRCMD in \"../configure\" \"make\" \"sudo make install\"\ndo\n{ TMRCMDVL=\"\\$TMRCMD\" && printf '\\\\e[48;5;22m%s\\\\e[0m\\n' \"Running command '\\$TMRCMDVL' in directory '\\$PWD'...\" && \\$TMRCMDVL ; } || { TMRCMDVL=\"git pull --depth 1\" && printf '\\\\e[48;5;22m%s\\\\e[0m\\n' \"Running command '\\$TMRCMDVL' in directory '\\$PWD' and exiting...\" && \\$TMRCMDVL ; exit 169 ; }\ndone\n}\n_CHECKFORQEMU_() {\n_PACMANCKQEMU_() {\nif [[ \"\\$NMCMND\" = \"$CPUABI8\" ]] || [[ \"\\$NMCMND\" = \"aarch64\" ]]\nthen\ncommand -v qemu-system-aarch64 && command -v qemu-img\nelif [[ \"\\$NMCMND\" == \"$CPUABI7\" ]] || [[ \"\\$NMCMND\" == \"armv7\" ]]\nthen\ncommand -v qemu-system-arm && command -v qemu-img\nelif [[ \"\\$NMCMND\" == \"$CPUABIX86\" ]] || [[ \"\\$NMCMND\" == i686 ]]\nthen\ncommand -v qemu-system-i386 && command -v qemu-img\nelif [[ \"\\$NMCMND\" == \"$CPUABIX8664\" ]]\nthen\ncommand -v qemu-system-x86_64 && command -v qemu-img\nelse\ncommand -v qemu && command -v qemu-img\nfi\n}\n_PACMANINQEMU_() {\nif [[ \"\\$NMCMND\" == \"$CPUABI7\" ]] || [[ \"\\$NMCMND\" == \"armv7\" ]] || [[ \"\\$NMCMND\" = \"$CPUABI8\" ]] || [[ \"\\$NMCMND\" = \"aarch64\" ]] || [[ \"\\$NMCMND\" == \"$CPUABIX8664\" ]]\nthen\n{ pc qemu qemu-img qemu-tools || pci qemu qemu-img qemu-tools ; } || { printf \"\\\\e[48;5;22m%s\\\\n\" \"\\${SRPTNM^^} SIGNAL:  Missing qemu command(s) found:  Command '\\$SRPTNM' is attempting to build and install 'qemu' a 'libguestfs' prerequisite for computer architecture '\\$NMCMND'.  If you find a better and simpler resolution for command '\\$SRPTNM', please open an issue and pull request at GitHub.\" && _BULDQEMU_ ; } || makeaurhelpers build qemu-git\nelif [[ \"\\$NMCMND\" == \"$CPUABIX86\" ]] || [[ \"\\$NMCMND\" == i686 ]]\nthen\n{ pc qemu || pci qemu ; } || { printf \"\\\\e[48;5;22m%s\\\\n\" \"\\${SRPTNM^^} SIGNAL:  Missing qemu command(s) found:  Command '\\$SRPTNM' is attempting to build and install 'qemu' a 'libguestfs' prerequisite for computer architecture '\\$NMCMND'.  If you find a better and simpler resolution for command '\\$SRPTNM', please open an issue and pull request at GitHub.\" && _BULDQEMU_ ; } || makeaurhelpers build qemu-git\nelse\n{ pc qemu qemu-img || pci qemu qemu-img ; } || { printf \"\\\\e[48;5;22m%s\\\\n\" \"\\${SRPTNM^^} SIGNAL:  Missing qemu command(s) found:  Command '\\$SRPTNM' is attempting to build and install 'qemu' a 'libguestfs' prerequisite for computer architecture '\\$NMCMND'.  If you find a better and simpler resolution for command '\\$SRPTNM', please open an issue and pull request at GitHub.\" && _BULDQEMU_ ; } || makeaurhelpers build qemu-git\nfi\n}\n_PACMANCKQEMU_ || { printf \"\\\\e[48;5;22m%s\\\\n\" \"Command '\\$SRPTNM' is attempting to install 'qemu' a 'libguestfs' prerequisite for computer architecture '\\$NMCMND'.  If you find a better and simpler resolution for command '\\$SRPTNM', please open an issue and pull request at GitHub...\" && _PACMANINQEMU_ ; }\n}\n_CHCKFRPRREQUSTS_() { [ -f /usr/share/licenses/python-pycodestyle/LICENSE ] && [ -x /usr/bin/bison ] && [ -x /usr/bin/gdb ] && [ -x /usr/bin/libtool ] && [ -x /usr/bin/ocaml ] ; }\n_INSTLLPRREQUSTS_() { pc \\${GTFSDPND[@]} || pci \\${GTFSDPND[@]} ; }\nTMRCMDVL=\"_PRPCLANG_\" && _RCSRPTNM_ 1 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"_CHECKFORQEMU_\" && _RCSRPTNM_ 2 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\n_RCSRPTNM_ 3 \"_CHCKFRPRREQUSTS_\" \"_INSTLLPRREQUSTS_\" \"echo \\${SRPTNM^^} SIGNAL:  _CHCKFRPRREQUSTS_\"\n{ [ -f /run/lock/${INSTALLDIR##*/}/\\$UID.libguestfs.cpan.lock ] && _RCSRPTNM_ 4 \"echo file /run/lock/${INSTALLDIR##*/}/\\$UID.libguestfs.cpan.lock exists\" ; } || { _RCSNPTNM_ 4 \"cpan -i Locale::TextDomain Module::Build Pod::Man Pod::Simple Test::More\" \"touch /run/lock/${INSTALLDIR##*/}/\\$UID.libguestfs.cpan.lock\" ; }\n_RCSRPTNM_ 5 \"cd \\$HOME\" \"exit 69\"\nTMRCMDVL=\"gcl https://github.com/libguestfs/libguestfs\" && _RCSRPTNM_ 6 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\n_RCSRPTNM_ 7 \"cd libguestfs\" \"exit 69\"\nTMRCMDVL=\"gpl\" && _RCSRPTNM_ 8 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"gsu\" && _RCSRPTNM_ 9 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\n# using patches is optional:\n_PHLBGSTFS1_(){ [ -f /etc/os-release ] && TMRCMDVL=\"\\$(grep -w ID /etc/os-release | cut -d\"=\" -f 2)\" && sed -Ei \"s/ARCH\\ \\|\\ MANJARO\\ \\|/\\${TMRCMDVL^^}\\ \\|\\ MANJARO\\ \\|/g\" m4/guestfs-appliance.m4 ; }\n_PHLBGSTFS2_(){\nif [ -f \"\\$HOME\"/libguestfs/m4/patchfile  ]\nthen\ncd \"\\$HOME\"/libguestfs/m4 && patch guestfs-appliance.m4 patchfile ; cd \"\\$HOME\"/libguestfs\nelse\nprintf '%s\\n' \"Patch file \\$HOME/libguestfs/m4/patchfile is available at this https://listman.redhat.com/archives/libguestfs/2022-May/028941.html webpage.  No patch file found.  Exiting...\"  && exit 101\nfi\n}\nif [ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Pp]*[1]* ]]\nthen\nTMRCMDVL=\"_PHLBGSTFS1_\" && _RCSRPTNM_ 10 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nelif [ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Pp]*[Ii][Dd]* ]]\nthen\nTMRCMDVL=\"_PHLBGSTFS2_\" && _RCSRPTNM_ 10 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nelse\nTMRCMDVL=\"echo \\${SRPTNM^^} SIGNAL:  no patch\" && _RCSRPTNM_ 10 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nfi\n# using patches end\nTMRCMDVL=\"make -C appliance clean-supermin-appliance\" && _RCSRPTNM_ 11 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"make clean\" && _RCSRPTNM_ 12 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"autoupdate -f\" && _RCSRPTNM_ 13 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"autoreconf -i\" && _RCSRPTNM_ 14 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\n{ [ -f ./localconfigure ] &&  TMRCMDVL=\"./localconfigure\" && _RCSRPTNM_ 15 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\" ; } || { TMRCMDVL=\"./configure CFLAGS=-fPIC --with-supermin-extra-options=\\\"--use-installed\\\"\" && _RCSRPTNM_ 15 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\" ; }\nTMRCMDVL=\"make\"\n_RCSRPTNM_ 16 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\nTMRCMDVL=\"make quickcheck\" && _RCSRPTNM_ 17 \"\\$TMRCMDVL\" \"echo \\${SRPTNM^^} SIGNAL:  \\$TMRCMDVL\"\n_RCSRPTNM_ 18 \"\\$HOME/libguestfs/run guestfish --help\" \"\\${0##*/} h\" \"echo \\${SRPTNM^^} SIGNAL:  \\${0##*/} h\"\nprintf \"\\\\e[48;5;119m%s\\\\e[48;5;34m%s\\\\e[0;0;0m\\\\n\" \"[\\$NBRFCMDS/\\$NBRFCMDS]\" \" Please do NOT run 'make install' in directory '\\$HOME/libguestfs' as this may create conflicting versions.  Use the '\\$HOME/libguestfs/run' command instead.  Webpage https://libguestfs.org/guestfs-building.1.html#the-.-run-script has more information.  \"\n}\n\n_SLCTRHPR_ \\$@ || { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; }\n## $INSTALLDIR$TMXRCHBNDR/makelibguestfs FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makelibguestfs\n}\n\n_ADDmakeaurhelpers_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeaurhelpers \"# add Arch Linux AUR helpers https://wiki.archlinux.org/index.php/AUR_helpers\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeaurhelpers\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeaurhelpers\ncat >> \"$TMXRCHBNDS\"/makeaurhelpers <<- EOM\nNMKPKC=\"nice -n 20 makepkg -ACcfis --check --needed\"\nNMKPKN=\"nice -n 20 makepkg -ACcfis --check --needed --noconfirm\"\nNMKPKR=\"nice -n 20 makepkg -ACcfirs --check --needed --noconfirm\"\n{ [ -z \"\\${1:-}\" ] && NMKPKG=\"\\$NMKPKC\" ; } || { { [[ \"\\${1//-}\" = [Aa]* ]] || [[ \"\\${1//-}\" = [Nn]* ]] || [[ \"\\${1//-}\" = [Rr]* ]] || [[ \"\\${1//-}\" = [Ss][Bb]* ]] || [[ \"\\${1//-}\" = [Tt][Ss]* ]] ; } && NMKPKG=\"\\$NMKPKN\" ; } || { { [[ \"\\${1//-}\" = [Ee]* ]] || [[ \"\\${1//-}\" = [Gg]* ]] ; } && NMKPKG=\"\\$NMKPKR\" ; } || NMKPKG=\"\\$NMKPKC\"\n# builtin help string variables begin\nNMCMND=\"\\$(uname -m)\"\nDFLTSG=\"Default: \\\"-A ignore incomplete arch field in PKGBUILD\\\" also sets arch=('any').\"\nSLCTSYRNG=\"AUR helper\"\nXNMPKC=\"NMKPKC=\\\"\\$NMKPKC\\\"\"\nXNMPKN=\"NMKPKN=\\\"\\$NMKPKN\\\"\"\nXNMPKR=\"NMKPKR=\\\"\\$NMKPKR\\\"\"\nXLCD00=\"\\\"\\$SRPTNM f 'digital rain'\\\"\"\nXLCD0L=\"\\\"\\$SRPTNM find 'digital rain'\\\"\"\nXLCD01=\"\\\"\\$SRPTNM b greenrain\\\"\"\nXLCD02=\"\\\"\\$SRPTNM v greenrain\\\"\"\n# builtin help string variables end\nHLPSTG=\" Command \\$SRPTNM accepts these arguments:\n\na[ll AUR helpers]\tbuild all the AUR helper packages with passing checksums in alphabetical order,\n\nb[uild] package\t\tbuild one Arch Linux packages from AUR.  EXAMPLE: \\$XLCD01,\n\nc[andy]\t\t\tbuild a terminal candy from AUR,\n\nf[ind] packages★\tfind AUR packages,  EXAMPLE: \\$XLCD00,\n\ng[hcup install]\t\tbuild and install 'ghcup' (an installer for the general purpose language Haskell) AUR packages.  Command 'makeaurghcuphs' also installs command 'ghcup',\n\nh[elp]\t\t\tshow this help screen,\n\nl[ibguestfs install]\tbuild and install 'libguestfs', access and modify virtual machine disk image packages.  Command 'makelibguestfs' also attempts to install command 'libguestfs',\n\nm[ake makepkgs]\t\tmake Arch Linux makepkg related packages from AUR,\n\nn[oconfirm install]\tdo not confirm install (\\$SRPTNM installs packages by default with noconfirm except for individual package builds).  This option only applies to the main AUR helpers packages select menu,\n\nr[everse build all]\tbuild all the AUR helper packages with passing checksums in reverse alphabetical order, this option is like option 'a',\n\ns[earch] packages★\tsearch for AUR packages.  This option is a synonym for find,\n\nsc[reensavers build]\tbuild a terminal screensavers from AUR,\n\nsb[uild] \t\tsmall build builds some of the smaller AUR helper packages,\n\ntc[andies]\t\tterminal candies builds all of the terminal candies from AUR,\n\ntm[akepkgs]\t\ttotal makepkgs builds all the Arch Linux makepkg related package from AUR,\n\nts[creensavers]\t\tterminal screensavers builds all of the terminal screensavers from AUR,\n\nv[iew] package★\t\tview a PKGBUILD file for a particular package;  EXAMPLE: \\$XLCD02.\n\nOne and two letter arguments are good; i.e. Command \\$XLCD00 is an equivalent of the \\$XLCD0L command (quote multiple words).  \\${SRPTNM^^} NOTICE:  \\$DFLTSG  Variables \\$XNMPKC, \\$XNMPKN and \\$XNMPKR in file '\\$SRPTNM' can be edited.\n\n★open and use an Android web browser either to find an Arch Linux AUR package matching search term(s) or view a package PKGBUILD file.  \"\n[ -n \"\\${1:-}\" ] && [[ \"\\${1:-}\" = [Ff]* ]] && { am start -a android.intent.action.VIEW -d \"https://aur.archlinux.org/packages?O=0&K=\\${2:-AUR helper}\" ; exit ; }\n[ -n \"\\${1:-}\" ] && [ -n \"\\${2:-}\" ] && [[ \"\\${1:-}\" = [Vv]* ]] && { am start -a android.intent.action.VIEW -d \"https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=\\${2:-}\" ; exit ; }\n[ -n \"\\${1:-}\" ] && { for ARG1 in '/' '?' {0..9} Dd Hh Ii Jj Kk Oo Pp Qq Uu Ww Xx Yy Zz ; do [[ \"\\${1//-}\" = [\"\\$ARG1\"]* ]] && { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; } ; done ; }\nfor DRHLPR in AURHLPR AURHLPRD AURHLPRDPG AURHLPRDRN AURHLPRS AURHLPRSM GHCUPAURPKG CANDY GAME LIBGUESTFSD LIBGUESTFSP MAKEPKGS MKRPKGDS SCREENSAVERS ; do declare -A \\$DRHLPR ; done\n# depreciated aur helpers reason\nAURHLPRDRN=(\n[aget]=\"Validating source files with b2sums skipped\"\n[aura-git]=\"Validating source files with sha256sums skipped\"\n[auracle-git]=\"Validating source files with sha256sums skipped\"\n[aurh-git]=\"Validating source files with sha256sums skipped\"\n[aurman]=\"Validating source files with md5sums skipped\"\n[aurora-git]=\"Validating source files with md5sums skipped\"\n[aurs]=\"curl: (22) The requested URL returned error: 503\"\n[aurs-git]=\"Validating source files with sha512sum skipped\"\n[aurutils]=\"Validating source files with sha512sum skipped\"\n[baph]=\"Validating source files with md5sums skipped\"\n[foxaur]=\"curl: (22) The requested URL returned error: 503\"\n[gfoxaur]=\"curl: (22) The requested URL returned error: 503\"\n[goaur]=\"Validating source files with md5sums skipped\"\n[liteaur]=\"Validating source files with sha256sums FAILED\"\n[magico]=\"Validating source files with md5sums skipped\"\n[maur]=\"Validating source files with sha512sum skipped\"\n[pakku-git]=\"Validating source files with sha512sum skipped\"\n[pikaur-git]=\"Validating source files with md5sums skipped\"\n[pikaur-aurnews]=\"Validating source files with md5sums skipped\"\n[pkgbuilder-git]=\"Validating source files with md5sums skipped\"\n[repoctl-git]=\"Validating source files with sha512sum skipped\"\n[simpleaur-git]=\"Validating source files with sha512sum skipped\"\n[saurch-git]=\"fatal: repository 'http://vitali64.duckdns.org/git/utils/saurch.git/' not found\"\n[trizen-git]=\"Validating source files with sha512sum skipped\"\n[vam]=\"Validating source files with md5sums skipped\"\n[wfa-git]=\"Validating source files with md5sums skipped\"\n[yay-git]=\"Validating source files with sha512sum skipped\"\n[yayim]=\"curl: (60) SSL: no alternative certificate subject name matches target host name 'gitea.jojiiofficial.de'\"\n[yup]=\"Validating source files with sha256sums skipped\"\n[yup-bin]=\"Validating source files with sha256sums skipped\"\n[yup-git]=\"Validating source files with sha256sums skipped\"\n[zeus]=\"Validating source files with sha256sums FAILED\"\n[zur-git]=\"Validating source files with sha256sums skipped\"\n)\n# pending aur helpers\nAURHLPRDPG=(\n[aura]=\"aura\"\n[aura-git]=\"aura\"\n[aurto]=\"aurto\"\n[pacaur]=\"pacaur\"\n[pacaur-git]=\"pacaur\"\n[paru]=\"paru\"\n[paru-git]=\"paru\"\n[pkgbuilder]=\"pkgbuilder\"\n[ram]=\"ram\"\n[repoctl]=\"repoctl\"\n[rua]=\"rua\"\n[stack-static]=\"stack\"\n[tulip-pm]=\"tulip\"\n[xaur]=\"xaur\"\n[yay]=\"yay\"\n[zur-git]=\"zur\"\n)\n# depreciated aur helpers\nAURHLPRD=(\n[aura]=\"aura\"\n[aura-git]=\"aura\"\n[aurto]=\"aurto\"\n[aget]=\"aget\"\n[auracle-git]=\"auracle\"\n[aurh-git]=\"aurh\"\n[aurman]=\"aurman\"\n[aurora-git]=\"aurora\"\n[aurs]=\"aurs\"\n[aurs-git]=\"aurs\"\n[aurutils]=\"aurutils\"\n[baph]=\"baph\"\n[foxaur]=\"foxaur\"\n[gfoxaur]=\"gfoxaur\"\n[goaur]=\"goaur\"\n[liteaur]=\"liteaur\"\n[magico]=\"magico\"\n[maur]=\"maur\"\n[pakku-git]=\"pakku\"\n[pacaur]=\"pacaur\"\n[pacaur-git]=\"pacaur\"\n[paru]=\"paru\"\n[paru-git]=\"paru\"\n[pikaur-aurnews]=\"pikaur-aurnews\"\n[pikaur-git]=\"pikaur\"\n[pkgbuilder]=\"pkgbuilder\"\n[pkgbuilder-git]=\"pkgbuilder\"\n[ram]=\"ram\"\n[repoctl]=\"repoctl\"\n[repoctl-git]=\"repoctl\"\n[rua]=\"rua\"\n[simpleaur-git]=\"simpleaur\"\n[saurch-git]=\"saurch\"\n[stack-static]=\"stack\"\n[trizen-git]=\"trizen\"\n[tulip-pm]=\"tulip\"\n[vam]=\"vam\"\n[wfa-git]=\"wfa\"\n[xaur]=\"xaur\"\n[yay]=\"yay\"\n[yay-git]=\"yay\"\n[yayim]=\"yayim\"\n[yup]=\"yup\"\n[yup-bin]=\"yup\"\n[yup-git]=\"yup\"\n[zeus]=\"zeus\"\n[zeus-bin]=\"zeus\"\n[zur]=\"zur\"\n[zur-git]=\"zur\"\n)\n# aur helpers\nAURHLPRS=(\n[aurget]=\"aurget\"\n[aurutils-git]=\"aur\"\n[blinky]=\"blinky\"\n[buildaur]=\"buildaur\"\n[buildaur-git]=\"buildaur\"\n[git-aurcheck]=\"git-aurcheck\"\n[haur]=\"haur\"\n[lightpkg]=\"lightpkg\"\n[liteaur-git]=\"liteaur\"\n[package-query]=\"package-query\"\n[package-query-git]=\"package-query\"\n[packer]=\"packer\"\n[pakka]=\"pakka\"\n[pakku]=\"pakku\"\n[pakku-gui]=\"pakku\"\n[pakku-gui-git]=\"pakku\"\n[paru-bin]=\"paru\"\n[paruz]=\"paruz\"\n[pbget]=\"pbget\"\n[pikaur]=\"pikaur\"\n[pkgbuild-introspection]=\"mksrcinfo\"\n[pkgbuild-introspection-git]=\"mksrcinfo\"\n[powerpill]=\"powerpill\"\n[popular-packages]=\"popular-packages\"\n[puyo]=\"puyo\"\n[repofish]=\"repofish\"\n[sakuri]=\"sakuri\"\n[trizen]=\"trizen\"\n[yaourt]=\"yaourt\"\n[yaah]=\"yaah\"\n[yay-bin]=\"yay\"\n)\n# small build aur helpers\nAURHLPRSM=(\n[aurget]=\"aurget\"\n[haur]=\"haur\"\n[lightpkg]=\"lightpkg\"\n[liteaur-git]=\"liteaur\"\n[paruz]=\"paruz\"\n[pbget]=\"pbget\"\n[pikaur]=\"pikaur\"\n[sakuri]=\"sakuri\"\n[trizen]=\"trizen\"\n[yaah]=\"yaah\"\n[yay-bin]=\"yay\"\n)\n# terminal candy\nCANDY=(\n[cowsay-bin]=\"cowsay\"\n[ternimal]=\"ternimal\"\n[nbsdgames-git]=\"nbsdgames\"\n[sl-git]=\"sl\"\n[sl-patch]=\"sl\"\n)\n# one AUR game package\nGAME=([nbsdgames-git]=\"nbsdgames\")\n# two AUR ghcup packages\nGHCUPAURPKG=([ghcup-git]=\"ghcup\" [ghcup-hs-bin]=\"ghcup\")\n# AUR libguestfs packages descriptions\n# userspace mount #74 https://github.com/SDRausty/termux-archlinux/issues/74\nLIBGUESTFSD=([guestfs-tools]=\"Tools for accessing and modifying guest disk images\" [libguestfs-dev]=\"Library and tools for accessing and modifying virtual machine disk images, development version\" [libguestfs-git]=\"Access and modify virtual machine disk image\" [python-libguestfs]=\"Python bindings for libguestfs\")\n# AUR libguestfs packages\nLIBGUESTFSP=([guestfs-tools]=\"\" [libguestfs-dev]=\"libguestfs\" [libguestfs-git]=\"libguestfs\" [python-libguestfs]=\"libguestfs\")\n# AUR makepkg\nMAKEPKGS=(\n[dir-dlagent]=\"dir-dlagent\"\n[git-makepkg-templates-git]=\"/usr/share/makepkg-template/git.template\"\n[makepkg-git-lfs-proto]=\"/etc/makepkg-git-lfs.conf\"\n[makepkg-meta]=\"makepkg-meta\"\n[makepkg-nosudo]=\"/usr/share/libalpm/hooks/makepkg-nosudo.hook\"\n[pbget]=\"pbget\"\n[remakepkg]=\"remakepkg\"\n)\n# AUR makepkgs descriptions\nMKRPKGDS=(\n[dir-dlagent]=\"A makepkg DLAGENT which forwards requests to configured directories\"\n[git-makepkg-templates-git]=\"makepkg-templates for git source packages\"\n[makepkg-git-lfs-proto]=\"Add Git-lfs support to makepkg. Use \"git-lfs+\" as protocol specifier in source url.\"\n[makepkg-meta]=\"Easily create and install custom\"\n[makepkg-nosudo]=\"Use su instead of sudo in makepkg, for more convenient use in termux\"\n[makepkg-optimize-mold]=\"Supplemental build and packaging optimizations for makepkg\"\n[makepkg-optimize]=\"Supplemental build and packaging optimizations for makepkg\"\n[makepkg-tidy-ect]=\"A libmakepkg tidy script for loselessly compressing files using ect\"\n[makepkg-tidy-pdfsizeopt]=\"A libmakepkg tidy script for loselessly optimizing PDFs using pdfsizeopt\"\n[makepkg-tidy-scripts-git]=\"Collection of scripts for tidying packages created using makepkg. Includes optipng and upx support.\"\n[makepkg-unreal]=\"Some shell functions to ease the installation of various Unreal games.\"\n[pbget]=\"Retrieve PKGBUILDs and local source files from Git, ABS and the AUR for makepkg.\"\n[remakepkg]=\"Apply changes to pacman packages\"\n)\n# terminal screensavers\nSCREENSAVERS=(\n[asciiquarium-git]=\"asciiquarium\"\n[cmatrix-git]=\"cmatrix\"\n[digital-rain-git]=\"digital-rain\"\n[greenrain]=\"greenrain\"\n[neo-matrix]=\"neo-matrix\"\n[neo-matrix-git]=\"neo-matrix\"\n[pipes.c]=\"cpipes\"\n[termsaver-git]=\"termsaver\"\n[tmatrix]=\"tmatrix\"\n[tmatrix-git]=\"tmatrix\"\n[tty-clock-git]=\"tty-clock\"\n)\n_ARHCMD_() {\n{ [ -x /usr/bin/make ] && [ -x /usr/bin/strip ] ; } || { { pc base base-devel binutils git && makeaurfakeroottcp ; } || { pci base base-devel binutils git && makeaurfakeroottcp ; } ; }\n# add dependencies for bash-pipes\nif [ \"\\$AURHLPR\" = bash-pipes ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || makeaurpipessh\nfi\n# add dependencies for bauerbill\nif [ \"\\$AURHLPR\" = bauerbill ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\n[ -f /run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ] || { printf '\\\\e[0m%s\\\\n' \"Command '\\$SRPTNM' is running command 'gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680'...\" && gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680 && :>/run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ; }\nmakeaurpython3aur\nmakeaurpython3colorsysplus\n}\nfi\n# add dependencies for ghcup\nif [[ \"\\$AURHLPR\" = ghcup* ]]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || { [ -x /usr/bin/numactl ] || pc numactl || pci numactl ; }\nfi\n# add dependencies for pacaur and pacaur-git\nif [ \"\\$AURHLPR\" = pacaur ] || [ \"\\$AURHLPR\" = pacaur-git ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\n{ [ -x /usr/bin/expac ] || pc expac || pci expac ; }\nmakeauraclegit\n}\nfi\n# add dependencies for pbget\nif [ \"\\$AURHLPR\" = pbget ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\n[ -f /run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ] || { printf '\\\\e[0m%s\\\\n' \"Command '\\$SRPTNM' is running command 'gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680'...\" && gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680 && :>/run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ; }\nmakeaurpython3xcgf\nmakeaurpython3memoizedb\nmakeaurpython3xcpf\nmakeaurpython3aur\nmakeaurpm2ml\n}\nfi\n# add dependencies for popular-packages\nif [ \"\\$AURHLPR\" = popular-packages ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || makeaurpackagequery\nfi\n# add dependencies for powerpill\nif [ \"\\$AURHLPR\" = powerpill ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\nmakeaurpackagequery\n[ -x /usr/bin/aria2c ] || { pc aria2 || pci aria2 ; }\nmakeaurpython3xcgf\nmakeaurpython3memoizedb\nmakeaurpython3xcpf\nmakeaurpm2ml\n}\nfi\n# add dependencies for stack-static\nif [ \"\\$AURHLPR\" = stack-static ]\nthen\t# import stack-static key\ncommand -v \"\\$AURHLPR\" >/dev/null || {\n[ -f /run/lock/${INSTALLDIR##*/}/gpg575159689BEFB442.lock ] || { printf '\\\\e[0m%s\\\\n' \"Command '\\$SRPTNM' is running command 'gpg --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442'...\" && gpg --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442 && :>/run/lock/${INSTALLDIR##*/}/gpg575159689BEFB442.lock ; }\n}\nfi\n# add dependencies for xaur\nif [ \"\\$AURHLPR\" = xaur ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\nmakeaurpyinstaller\n}\nfi\n# add dependencies for zur\nif [ \"\\$AURHLPR\" = zur ]\nthen\ncommand -v \"\\$AURHLPR\" >/dev/null || {\n[ -x /usr/bin/zig ] || pc zig || pci zig\nmakeauraclegit\n}\nfi\n_CHKAURHLPR_ \"\\$@\"\n}\n# check if AUR command is on PATH\n_CHKAURHLPR_() {\n[ -n \"\\${2:-}\" ] && [[ \"\\${BLDPKG:-}\" = 0 ]] && CHKRHLPR=\"\\$2\" || CHKRHLPR=\"\\${AURHLPRS[\\$AURHLPR]}\"\nif command -v \"\\$CHKRHLPR\" >/dev/null || [ -f \"\\$CHKRHLPR\" ]\nthen\nRCHLXPKG=\"\\$(pacman -Ql \"\\$CHKRHLPR\" | head -n 1 | cut -d\" \" -f 1)\"\nprintf '%s' \"Found command and/or file '\\$CHKRHLPR'.  The '\\$CHKRHLPR' command and/or file belongs to Arch Linux package '\\${RCHLXPKG:-UNKNOWN}'.  \"\n[ -z \"\\${TALL:-}\" ] || \\$CHKRHLPR\n[[ \"\\$DALL\" = [Aa]* ]] || [[ \"\\$DALL\" = [Rr]* ]] || [[ \"\\$DALL\" = [Ss][Bb]* ]] || [[ \"\\$DALL\" = [Ss][Cc]* ]] || [[ \"\\$DALL\" = [Tt][Mm]* ]] || [[ \"\\$DALL\" = [Tt][Cc]* ]] || [[ \"\\$DALL\" = [Tt][Ss]* ]] || exit 0\nelse\n_CLONEAURHLPR_\nfi\n}\n# clone AUR package\n_CLONEAURHLPR_() {\nif [ -d \"\\$AURHLPR\" ]\nthen\n{ printf \"%s\" \"Repository '\\$AURHLPR' is already cloned...  \" && _MAKEAURHLPR_ ; } || _PRTERROR_\nelse\n{ printf \"%s\\\\n\" \"Cloning git repository from 'https://aur.archlinux.org/\\$AURHLPR' into directory '\\$HOME/\\$AURHLPR'...\" && cd && gcl https://aur.archlinux.org/\"\\$AURHLPR\" && _MAKEAURHLPR_ ; } || _PRTERROR_\nfi\n}\n# make AUR package\n_MAKEAURHLPR_() {\ncd \"\\$HOME/\\$AURHLPR\" || exit 196\n{ [ ! -f PKGBUILD ] && exit 198 ; } || { PKGBUILDVL=\"\\$(<\"\\$HOME/\\$AURHLPR/\"PKGBUILD)\" && VLGRPPBD=\"\\$(awk 'BEGIN { found = 0; } ; /depends=\\(/ { if (!found) { found = 1; \\$0 = substr(\\$0, index(\\$0, \"=\\\\(\") + 2); }; } ; /\\)/ { if (found) { found = 2; \\$0 = substr(\\$0, 0, index(\\$0, \"\\\\)\") - 1); } ; } ; { if (found) { print; if (found == 2) found = 0; } ; }' <<< \"\\$PKGBUILDVL\" 2>/dev/null)\" && printf '\\\\e[0;32m%s\\\\e[0m  ' \"Showing dependencies '\\$(xargs <<< \"\\$VLGRPPBD\")' for Arch Linux AUR package '\\$AURHLPR'.\" ; }\nprintf \"%s\\\\n\" \"Attempting to build and install Arch Linux AUR package '\\$AURHLPR' for architecture \\$NMCMND with '\\$SRPTNM':  Running command '\\$NMKPKG' in directory '\\$PWD':  Please be patient...\"\n\\$NMKPKG || _PRTERROR_\n}\n# print error help message\n_PRTERROR_() {\nprintf \"\\\\n\\\\e[1;31merror: \\\\e[1;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s) and run '\\$STRNRG' again.  You can use the TermuxArch command 'pci' to ensure that the system is up to date.  The command 'gpg --keyserver keyserver.ubuntu.com --recv-keys 71A1D0EF' can be used to import gpg keys.  In order to resolve 'unauthenticated git protocol on port 9418 is no longer supported' the command 'git config --global url.\"https://\".insteadOf git://' can be used.  Running command '\\$STRNRG' again with the same menu selection may resolve the errors previously encountered automatically as well.\"\n}\n_SLCTRHPR_() {\nprintf \"Please set the Arch Linux AUR package for command '%s \\$SLCTSYRNG' to build and install.  \\${SRPTNM^^} NOTICE:  \\$DFLTSG  The \\$SLCTSYRNG to install can be selected by name or number from this menu:\\\\n\" \"\\$SRPTNM\"\nselect AURHLPR in exit \\$(for AURHLP in \"\\${!AURHLPRS[@]}\" ; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n);\ndo\n{ [[ \"\\$REPLY\" = 0 ]] || [[ \"\\$REPLY\" = 1 ]] || [[ \"\\$REPLY\" = [Ee]* ]] || [[ \"\\$REPLY\" = [Qq]* ]] ; } && printf '%s\\\\n' \"Exiting...\" && exit\n{ [[ \"\\${!AURHLPRS[@]}\" =~ (^|[[:space:]])\"\\$AURHLPR\"($|[[:space:]]) ]] || { [[ \"\\${!AURHLPRS[@]}\" =~ (^|[[:space:]])\"\\$REPLY\"($|[[:space:]]) ]] && AURHLPR=\"\\$REPLY\" ; } ; } && printf \"\\\\e[0;32m%s  \" \"Option '\\$REPLY \\$AURHLPR' was picked from the menu.  The chosen Arch Linux \\$SLCTSYRNG for architecture \\$NMCMND to build and install is '\\$AURHLPR'...\" && _ARHCMD_ && break || printf \"%s\" \"Answer '\\$REPLY' was chosen.  Please select the Arch Linux \\$SLCTSYRNG to build and install by name or number from this menu.  Type e or q and tap enter to exit the '\\$SRPTNM' command\"\ndone\nexit\n}\n[ -n \"\\${1:-}\" ] && DALL=\"\\${1//-}\" && DALL=\"\\${1:0:2}\" || DALL=1\n[ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Aa]* ]] && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRS[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } && exit\n[ -n \"\\${1:-}\" ] && [[ \"\\${1//-}\" = [Bb]* ]] && { [ -n \"\\${2:-}\" ] && AURHLPR=\"\\$2\" && BLDPKG=0 && printf '%s\\\\n' \"Attempting to build AUR package '\\$AURHLPR'...\" && _ARHCMD_ \\$@ || _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Cc]* ]] && AURHLPRSTG=\\$(declare -p CANDY) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"candy\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Ee]* ]] && TALL=0 && AURHLPRSTG=\\$(declare -p GAME) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"extra\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Gg]* ]] && TALL=0 && AURHLPRSTG=\\$(declare -p GHCUPAURPKG) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"ghcup install\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Ll]* ]] && AURHLPRSTG=\\$(declare -p LIBGUESTFSP) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"libguestfs install\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Mm]* ]] && AURHLPRSTG=\\$(declare -p MAKEPKGS) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"make makepkgs\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Rr]* ]] && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRS[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -nr) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } && exit ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Ss][Bb]* ]] && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRSM[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } && exit ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Ss][Cc]* ]] && TALL=0 && AURHLPRSTG=\\$(declare -p SCREENSAVERS) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"screensavers build\" && _SLCTRHPR_ \\$ARGS ; }\n[ -n \"\\${1:-}\" ] && [[ \"\\${1:-}\" = [Ss]* ]] && { am start -a android.intent.action.VIEW -d \"https://aur.archlinux.org/packages?O=0&K=\\${2:-AUR helper}\" ; exit ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Tt][Cc]* ]] && AURHLPRSTG=\\$(declare -p CANDY) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"candy\" && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRS[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Tt][Hh]* ]] && for TSTHRNSS in h b c e f g l m n s sb a r tc tm ts ; do \"\\$0\" \"\\$TSTHRNSS\" ||: ; done ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Tt][Mm]* ]] && AURHLPRSTG=\\$(declare -p MAKEPKGS) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"makepkg\" && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRS[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } && exit ; }\n[ -n \"\\${1:-}\" ] && { [[ \"\\${1//-}\" = [Tt][Ss]* ]] && TALL=0 && AURHLPRSTG=\\$(declare -p SCREENSAVERS) && eval AURHLPRS=\"\\${AURHLPRSTG#*=}\" && SLCTSYRNG=\"screensaver\" && { for AURHLPR in \\$(for AURHLP in \"\\${!AURHLPRS[@]}\"; do printf '%s\\n' \"\\$AURHLP\" ; done | sort -n) ; do printf '%s\\\\n' \"Attempting to build \\$SLCTSYRNG '\\$AURHLPR'...\" && { _ARHCMD_ ||: ; } ; done ; } ; }\n{ [ -z \"\\${1:-}\" ] || [[ \"\\${1//-}\" = [Nn]* ]] ; } && _SLCTRHPR_ || { printf '\\\\e[0;32m%s' \"\\$HLPSTG\" ; exit ; }\n## $INSTALLDIR$TMXRCHBNDR/makeaurhelpers FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeaurhelpers\n}\n\n_ADDmakeaurfakeroottcp_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeaurfakeroottcp \"# build and install fakeroot-tcp\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeaurfakeroottcp\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeaurfakeroottcp\ncat >> \"$TMXRCHBNDS\"/makeaurfakeroottcp <<- EOM\n_DOMAKEFAKEROOTTCP_() {\n_PRTERROR_() {\nprintf \"\\\\n\\\\e[1;31merror: \\\\e[1;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s), and run '\\$STRNRG' again.\" && exit 104\n}\n[ ! -f \"/run/lock/${INSTALLDIR##*/}/patchmakepkg.lock\" ] && patchmakepkg || printf \"\\\\e[0;33m%s\\\\e[0m\\\\n\" \"Lock file \"/run/lock/${INSTALLDIR##*/}/patchmakepkg.lock\" found;  Continuing...\"\nprintf \"%s\\\\n\" \"Preparing to build and install fakeroot-tcp with \\${0##*/} version $VERSIONID: \"\nif { [ ! \"\\$(command -v automake)\" ] || [ ! \"\\$(command -v git)\" ] || [ ! \"\\$(command -v gcc -v)\" ] || [ ! \"\\$(command -v libtool)\" ] || [ ! \"\\$(command -v po4a)\" ] ; }\nthen\npci automake base base-devel fakeroot git gcc libtool po4a || printf \"\\\\n\\\\e[1;31mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \\\\e[7;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s) by running command 'pci automake base base-devel fakeroot git gcc go libtool po4a' as root user in a new Termux session.  You can do this without closing this session by running command \\\"$STARTBIN command 'pci automake base base-devel fakeroot git gcc go libtool po4a'\\\"in a new Termux session. Then return to this session and run '\\$STRNRG' again.\"\nfi\ncd\n[ -d fakeroot-tcp ] || gcl https://aur.archlinux.org/fakeroot-tcp.git\ncd fakeroot-tcp || exit 196\nprintf \"%s\\\\n\" \"Running command 'nice -n 20 makepkg -ACcfis --check --needed';  Attempting to build and install Arch Linux AUR package 'fakeroot-tcp' with '\\${0##*/}' version $VERSIONID.  Please be patient...\"\n{ nice -n 20 makepkg -ACcfis --check --needed && libtool --finish /usr/lib/libfakeroot && :>\"/run/lock/${INSTALLDIR##*/}/makeaurfakeroottcp.lock\" ; } || _PRTERROR_\nprintf \"%s\\\\n\" \"Building and installing fakeroot-tcp: DONE 🏁\"\n}\n[ ! -f \"/run/lock/${INSTALLDIR##*/}/makeaurfakeroottcp.lock\" ] && _DOMAKEFAKEROOTTCP_ || printf \"%s\\\\n\" \"Please remove file \"/run/lock/${INSTALLDIR##*/}/makeaurfakeroottcp.lock\" in order to rebuild fakeroot-tcp with \\${0##*/} version $VERSIONID.\"\n## $INSTALLDIR$TMXRCHBNDR/makeaurfakeroottcp FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeaurfakeroottcp\n}\n\n_ADDmakeaurghcuphs_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeaurghcuphs\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeaurghcuphs\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeaurghcuphs\ncat >> \"$TMXRCHBNDS\"/makeaurghcuphs <<- EOM\n[ -x /usr/bin/ghcup ] && printf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"The command 'ghcup' is already installed!  Please use the command 'ghcup':  Exiting...\" && exit\n[ -f /usr/lib/libnuma.so ] || { pc numactl || pci numactl ; } || { printf \"\\\\n\\\\e[1;31mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \\\\e[7;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s) by running command 'pci numactl' as proot root user.  You might be able to bring this about without closing this session.  Please try running command: $STARTBIN command 'pci numactl' in a new Termux PRoot session.  This should install the neccessary packages to make 'ksh'.  Then return to this session, and run '\\${0##*/}' again.\" && exit 120 ; }\npikaur ghcup-hs --noconfirm || { [ -f /usr/bin/pikaur ] || makeaurpikaur && pikaur ghcup-hs --noconfirm ; }\n## $INSTALLDIR$TMXRCHBNDR/makeaurghcuphs FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeaurghcuphs\n}\n\n_ADDmakeaurrustup_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeaurrustup\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeaurrustup\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeaurrustup\ncat >> \"$TMXRCHBNDS\"/makeaurrustup <<- EOM\n[ -x /usr/bin/rustup ] && printf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"The command 'rustup' is already installed!  Please use the command 'rustup':  Exiting...\" && exit\n{ pc rustup --noconfirm || pci rustup --noconfirm ; } || yay rustup --noconfirm\n## $INSTALLDIR$TMXRCHBNDR/rustup FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeaurrustup\n}\n\n_ADDmakeaurtllocalmgr_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeaurtllocalmgr\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeaurtllocalmgr\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeaurtllocalmgr\ncat >> \"$TMXRCHBNDS\"/makeaurtllocalmgr <<- EOM\n[ -x /usr/bin/tllocalmgr ] && printf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"The command 'tllocalmgr' is already installed!  Please use the command 'tllocalmgr':  Exiting...\" && exit\nyay tllocalmgr --noconfirm || { [ ! -x /usr/bin/yay ] && makeauryay && yay tllocalmgr --noconfirm ; }\n## $INSTALLDIR$TMXRCHBNDR/makeaurtllocalmgr FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeaurtllocalmgr\n}\n\n_ADDmakeauryay_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeauryay \"# build and install command yay; Contributors https://github.com/cb125 and https://github.com/SampsonCrowley\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeauryay\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeauryay\ncat >> \"$TMXRCHBNDS\"/makeauryay <<- EOM\n_PRTERROR_() {\nprintf \"\\\\n\\\\e[1;31mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \\\\e[1;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct thiserror the error(s) and/or warning(s), and run '\\${0##*/}' again.\"\nexit 100\n}\n[ -x /usr/bin/yay ] && printf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"The command 'yay' is already installed!  Please use the command 'yay':  Exiting...\" && exit\n_PRMAKE_() {\nprintf \"\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mnice -n 20 makepkg -ACcfis --check --needed --noconfirm\\\\e[1;37m...\\\\n\"\n}\nprintf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"Building and installing 'yay':\"\nif [[ -n \"\\${PREFIX:-}\" ]]\nthen\n: # pull requests are requested to automate install missing Termux packages\nelse\n[ ! -f \"/run/lock/${INSTALLDIR##*/}/patchmakepkg.lock\" ] && patchmakepkg\nif { [ ! \"\\$(command -v fakeroot)\" ] || [ ! \"\\$(command -v git)\" ] ; }\nthen\npci base base-devel fakeroot gcc git || pci base base-devel fakeroot gcc git || { printf \"\\\\n\\\\e[1;31mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \\\\e[7;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s);  The command 'pci base base-devel fakeroot gcc git go' can be run as proot root user in a new Termux session and might resolve this issue.  You might be able to do this without closing this session.  Please try running command: $STARTBIN command 'pci base base-devel fakeroot gcc git go' in a new Termux PRoot session.  Then return to this session, and run '\\${0##*/}' again.\" && exit 120 ; }\nfi\ncd\n[ -d yay-bin ] || gcl https://aur.archlinux.org/yay-bin.git\n{ { cd yay-bin || exit 69 ; } && _PRMAKE_ && nice -n 20 makepkg -ACcfis --check --needed --noconfirm ; } || { printf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \" \"The command 'nice -n 20 makepkg -ACcfis --check --needed --noconfirm' did not run as expected; \" \"EXITING...\" && exit 124 ; }\nprintf \"\\\\e[0;32m%s\\\\n%s\\\\n%s\\\\e[1;32m%s\\\\e[0m\\\\n\" \"Paths that can be followed after building 'yay' are 'yay cmatrix --noconfirm' which builds a matrix screensaver.  The commands 'yay pikaur|pikaur-git|tpac' build more AUR installers which can also be used to download AUR repositories and build packages like with 'yay' in your Android smartphone, tablet, wearable and more.  Did you know that 'android-studio' is available with the command 'yay android'?\" \"If you have trouble importing keys, this command 'gpg --keyserver keyserver.ubuntu.com --recv-keys 71A1D0EFCFEB6281FD0437C71A1D0EFCFEB6281F' might help.  Change the number to the number of the key being imported.\" \"Building and installing yay: \" \"DONE 🏁\"\nfi\n## $INSTALLDIR$TMXRCHBNDR/makeauryay FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeauryay\n}\n\n_PREPFILEFCTN_() { _PRTPATCHHELP_ \"$3\" && printf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf '\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n' \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit 0\" \"_PRNTWAIT_() { printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is attempting to make and install command \\\\e[1;32m%s\\\\e[0;32m, %s.  Please be patient...\\\\n' \\\"'\\${0##*/}'\\\" \\\"'$1'\\\"  \\\"$4\\\" ; }\" \"[ -x /usr/bin/\\\"$1\\\" ] && { printf '\\\\e[0;32m%s, command \\\\e[1;32m%s\\\\e[0;32m is installed!  Please use the command \\\\e[1;32m%s\\\\e[0;32m to continue.  ' \\\"${4^}\\\" \\\"'$1'\\\" \\\"'$1'\\\" && exit ; }\" \"_PRNTWAIT_ && [ -x /usr/bin/make ] || { pc base base-devel || pci base base-devel ; }\" \"{ [ -f /run/lock/\\\"${INSTALLDIR##*/}\\\"/patchmakepkg.lock ] || patchmakepkg ; } && ${5:-} cd && { [ -x \\\"$2\\\" ] || { gcl https://aur.archlinux.org/\\\"$2\\\" && printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is continuing to make and install command \\\\e[1;32m%s\\\\e[0;32m, %s;  Please be patient...\\\\n' \\\"'\\${0##*/}'\\\" \\\"'$1'\\\"  \\\"$4\\\" ; } ; } && { cd \\\"$2\\\" || exit 69 ; } && makepkg -ACcfis --check --needed --noconfirm && \\\"$1\\\" -h ||:\" \"## $INSTALLDIR/$3 FE\" >> \"$3\" ; }\n\n_PREPFILEFCTN1_() { _PRTPATCHHELP_ \"$3\" && printf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf '\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n' \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in /${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit 0\" \"_PRNTWAIT_() { printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is attempting to make and install Arch Linux package \\\\e[1;32m%s\\\\e[0;32m, %s;  Please be patient...\\\\n' \\\"'\\${0##*/}'\\\" \\\"'$2'\\\"  \\\"$4\\\" ; }\" \"[ -e \\\"$1\\\" ] && { printf '\\\\e[0;32m%s, package \\\\e[1;32m%s\\\\e[0;32m is installed!  Nothing to do for command \\\\e[1;32m%s\\\\e[0;32m.  ' \\\"${4^}\\\" \\\"'$2'\\\" \\\"'\\${0##*/}'\\\" && exit ; }\" \"_PRNTWAIT_ && [ -x /usr/bin/make ] || { pc base base-devel || pci base base-devel ; }\" \"{ [ -f /run/lock/\\\"${INSTALLDIR##*/}\\\"/patchmakepkg.lock ] || patchmakepkg ; } && ${5:-} cd && { [ -x \\\"$2\\\" ] || { gcl https://aur.archlinux.org/\\\"$2\\\" && printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is continuing to make and install command \\\\e[1;32m%s\\\\e[0;32m, %s;  Please be patient...\\\\n' \\\"'\\${0##*/}'\\\" \\\"'$1'\\\"  \\\"$4\\\" ; } ; } && { cd \\\"$2\\\" || exit 69 ; } && makepkg -ACcfis --check --needed --noconfirm\" \"## $INSTALLDIR/$3 FE\" >> \"$3\" ; }\n\n_PREPFILEFCTNS0_() { _PRTPATCHHELP_ \"$3\" && printf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf '\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n' \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit 0\" \"{ [ -x /usr/bin/\\\"$1\\\" ] && printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is installed!  Please use the command \\\\e[1;32m%s\\\\e[0;32m to continue.  ' \\\"'$1'\\\" \\\"'$1'\\\" && exit ; }\" \"_PRNTWAIT_() { printf '\\\\e[0;32mCommand \\\\e[1;32m%s\\\\e[0;32m is attempting to make and install package \\\\e[1;32m%s\\\\e[0;32m;  Please be patient...\\\\n' \\\"'\\${0##*/}'\\\" \\\"'$2'\\\" ; }\" \"[ -x /usr/bin/make ] || { pc base base-devel || pci base base-devel ; }\" \"[ -f /run/lock/\\\"${INSTALLDIR##*/}\\\"/patchmakepkg.lock ] || patchmakepkg\" >> \"$3\" ; }\n\n_PREPFILEFCTNS_() { printf \"%s\\\\n\" \"{ { [ -e \\\"$1\\\" ] && printf '\\\\e[0;32mPackage \\\\e[1;32m%s\\\\e[0;32m is installed;  Continuing...  ' \\\"'$2'\\\"  ; } || { ${5:-} cd && { [ -e \\\"$1\\\" ] || gcl https://aur.archlinux.org/\\\"$2\\\" ; } && { cd \\\"$2\\\" || exit 69 ; } && _PRNTWAIT_ && makepkg -ACcfis --check --needed --noconfirm ; } ; }\" >> \"$3\" ; }\n\n_PREPFILEFTN0_() { _CFLHDR_ \"$TMXRCHBNDS\"/makeaur\"$3\" \"# Command '$3' attempts to make and install command '$1' $4\" && _PREPFILEFCTN_ \"$1\" \"$2\" \"$TMXRCHBNDS/makeaur$3\" \"$4\" \"${5:-}\" && chmod 755 \"$TMXRCHBNDS\"/makeaur\"$3\" ; }\n\n_PREPFILEFTN1_() { _CFLHDR_ \"$TMXRCHBNDS\"/makeaur\"$3\" \"# Command '$3' attempts to make and install Arch Linux package '$3' $4\" && _PREPFILEFCTN1_ \"$1\" \"$2\" \"$TMXRCHBNDS/makeaur$3\" \"$4\" \"${5:-}\" && chmod 755 \"$TMXRCHBNDS\"/makeaur\"$3\" ; }\n\n_ADDmakeaurpacaur_() { _PREPFILEFTN0_ pacaur pacaur pacaur \"an AUR helper that minimizes user interaction\" \"{ [ -x /usr/bin/expac ] || pc expac --noconfirm || pci expac ; } && { makeauraclegit ||: ; } && { printf '\\\\e[0m[1/1]  ' ; makeaurjqgit ||: ; } &&\" ; }\n\n_ADDmakeaurjqgit_() { _PREPFILEFTN0_ jq jq-git jqgit \"Command line JSON processor\" \"\" ; }\n\n_ADDmakeaurpipessh_() { _PREPFILEFTN0_ pipes.sh pipes.sh pipessh \"Animated pipes terminal screensaver\" \"\" ; }\n\n_ADDmakeaurpyinstaller_() { _PREPFILEFTN0_ pyinstaller pyinstaller pyinstaller \"\" \"makeaurpyinstallerhookscontrib && makeaurpythonaltgraph &&\" ; }\n\n_ADDmakeaurpyinstallerhookscontrib_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/_pyinstaller_hooks_contrib/__init__.py\" pyinstaller-hooks-contrib pyinstallerhookscontrib \"\" ; }\n\n_ADDmakeaurpacaurgit_() { _PREPFILEFTN0_ pacaur pacaur-git pacaurgit \"an AUR helper that minimizes user interaction\" \"{ [ -x /usr/bin/cmake ] || { pc cmake expac || pci cmake expac ; } ; } && { printf '\\\\e[0m[1/1]  ' ; makeauraclegit ||: ; } &&\" ; }\n\n_ADDmakeaurpbget_() { _PREPFILEFTN0_ pbget pbget pbget \"retrieve PKGBUILD and local source files from Git, ABS and the AUR for makepkg\" \"{ [ -f /usr/lib/python3.10/site-packages/pyxdg-0.27-py3.10.egg-info/PKG-INFO ] || pc python-pyxdg ; } && { printf '\\\\e[0m[1/4]  ' ; makeaurpython3memoizedb ||: ; } && { printf '[2/4]  ' ; makeaurpython3xcgf ||: ; } && { printf '[2/4]  ' ; makeaurpython3xcpf ||: ; } && { printf '[3/4]  ' ; makeaurpm2ml ||: ; } && { printf '[4/4]  ' ; makeaurpython3aur ||: ; } &&\" ; }\n\n_ADDmakeaurpythonaltgraph_() { _PREPFILEFTN0_ python-altgraph python-altgraph pythonaltgraph \"\" ; }\n\n_ADDmakeaurpython3colorsysplus_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/colorsysplus/__init__.py\" python3-colorsysplus python3colorsysplus \"an extension of the standard colorsys module with support for CMYK, terminal colors, ANSI and more\" ; }\n\n_ADDmakeaurpython3memoizedb_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/MemoizeDB.py\" python3-memoizedb python3memoizedb \"a generic data retrieval memoizer that uses an sqlite database to cache data\" ; }\n\n_ADDmakeaurpython3xcgf_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/XCGF.py\" python3-xcgf python3xcgf \"Xyne's common Pacman functions, for internal use\" ; }\n\n_ADDmakeaurpython3xcpf_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/XCPF/ArchPkg.py\" python3-xcpf python3xcpf \"Xyne's common Pacman functions, for internal use\" \"[ -f /run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ] || { printf '\\\\e[0m%s\\\\n' \\\"Command '\\${0##*/}' is running command gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680\\\" && gpg --keyserver keyserver.ubuntu.com --recv-keys 1D1F0DC78F173680 && :>/run/lock/${INSTALLDIR##*/}/gpg1D1F0DC78F173680.lock ; } &&\" ; }\n\n_ADDmakeaurpm2ml_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/pm2ml.py\" pm2ml pm2ml \"generate metalinks for downloading Pacman packages and databases\" ; }\n\n_ADDmakeaurpython3aur_() { _PREPFILEFTN1_ \"/usr/lib/python3.10/site-packages/AUR/AurPkg.py\" python3-aur python3aur \"AUR-related modules and helper utilities (aurploader, aurquery, aurtomatic\" ; }\n\n_ADDmakeaurpackagequery_() { _PREPFILEFTN0_  package-query package-query packagequery \"Query ALPM and AUR\" \"{ [ -x /usr/bin/wget ] || { pc wget || pci wget ; } ; } &&\" ; }\n\n_ADDmakeauraclegit_() { _PREPFILEFTN0_ aur auracle-git aclegit \"a flexible client for the AUR\" ; }\n_ADDmakeaurto_() { _PREPFILEFTN0_ aurto aurto to \"an AUR tool for managing an auto-updating local 'aurto' package repositories using aurutils\" ; }\n_ADDmakeaurutils_() { _PREPFILEFTN0_ aur aurutils utils \"an AUR helper for the arch user repository\" ; }\n_ADDmakeaurutilsgit_() { _PREPFILEFTN0_ aur aurutils-git utilsgit \"an AUR helper for the arch user repository (git version)\" ; }\n_ADDmakeaurbauerbill_() { _PREPFILEFTN0_ bauerbill bauerbill bauerbill \"an extension of Powerpill with AUR and ABS support\" ; }\n_ADDmakeaurghcuphsdep_() { # depreciated\n_PREPFILEFTN0_ ghcup ghcup-hs-bin ghcuphs \"the Haskell language ghcup-hs installer\" \"{ [ -f /usr/lib/libnuma.so ] || { pc numactl || pci numactl ; } &&\" ; }\n_ADDmakeaurpakku_() { _PREPFILEFTN0_ pakku pakku pakku \"a Pacman wrapper and AUR helper with a Pacman-like user interface\" \"{ [ -e /usr/lib/python3.10/site-packages/asciidoc/utils.py ] || { pc asciidoc || pci asciidoc ; } ; } &&\" ; }\n_ADDmakeaurpakkugit_() { _PREPFILEFTN0_ pakku pakku-git pakkugit \"a Pacman wrapper and AUR helper with a Pacman-like user interface (git version)\" \"{ [ -e /usr/lib/python3.10/site-packages/asciidoc/utils.py ] || { pc asciidoc || pci asciidoc ; } ; } &&\" ; }\n_ADDmakeaurpakkugui_() { _PREPFILEFTN0_ pakku pakku-gui pakkugui \"a GTK frontend for pakku\" \"{ [ -e /usr/lib/python3.10/site-packages/asciidoc/utils.py ] || { pc asciidoc || pci asciidoc ; } ; } &&\" ; }\n_ADDmakeaurpakkuguigit_() { _PREPFILEFTN0_ pakku pakku-gui-git pakkuguigit \"a GTK frontend for pakku (git version)\" \"{ [ -e /usr/lib/python3.10/site-packages/asciidoc/utils.py ] || { pc asciidoc || pci asciidoc ; } ; } &&\" ; }\n_ADDmakeaurparu_() { _PREPFILEFTN0_ paru paru paru \"a feature packed AUR helper\" ; }\n_ADDmakeaurparubin_() { _PREPFILEFTN0_ paru paru-bin parubin  \"a feature packed AUR helper\" ; }\n_ADDmakeaurparugit_() { _PREPFILEFTN0_ paru paru-git parugit  \"a feature packed AUR helper (git version)\" ; }\n_ADDmakeaurparuz_() { _PREPFILEFTN0_ paruz paruz paruz \"a fzf terminal UI for paru or pacman\" ; }\n_ADDmakeaurpikaur_() { _PREPFILEFTN0_ pikaur pikaur pikaur \"an AUR helper which asks all questions before installing/building. Inspired by pacaur, yaourt and yay\" ; }\n_ADDmakeaurpikaurgit_() { _PREPFILEFTN0_ pikaur pikaur-git pikaurgit \"an AUR helper which asks all questions before installing/building. Inspired by pacaur, yaourt and yay (git version)\" ; }\n_ADDmakeaurpkgbuilder_() { _PREPFILEFTN0_ pkgbuilder pkgbuilder pkgbuilder \"a Python AUR helper/library\" ; }\n_ADDmakeaurpkgbuildergit_() { _PREPFILEFTN0_ pkgbuilder pkgbuilder-git pkgbuildergit \"a Python AUR helper/library (git version)\" ; }\n_ADDmakeaurpopularpackages_() { _PREPFILEFTN0_ popular-packages popular-packages popularpackages \"which lists popular packages not (yet) installed\" ; }\n_ADDmakeaurpowerpill_() { _PREPFILEFTN0_ powerpill powerpill powerpill \"pacman wrapper for faster downloads\" \"{ [ -e /usr/share/doc/fmt/index.html ] || { pc fmt || pci fmt ; } ; } &&\" ; }\n_ADDmakeaurpuyo_() { _PREPFILEFTN0_ puyo puyo puyo \"an assistant for managing packages on Arch Linux\" \"makeauryay &&\" ; }\n_ADDmakeaurrepoctl_() { _PREPFILEFTN0_ repoctl repoctl repoctl \"an AUR helper that also simplifies managing local Pacman repositories\" ; }\n_ADDmakeaurrepoctlgit_() { _PREPFILEFTN0_ repoctl repoctl-git repoctlgit \"an AUR helper that also simplifies managing local Pacman repositories (development version)\" ; }\n_ADDmakeaurrepofish_() { _PREPFILEFTN0_ repofish repofish repofish \"that my friends told me to make available this script I wrote to manage my local archlinux repo and AUR packages, so here it is\" ; }\n_ADDmakeaurshellcheckbin_() { _PREPFILEFTN0_ shellcheck shellcheck-bin shellcheckbin \"a shell script analysis tool (binary release, static)\" ; }\n_ADDmakeaurshellcheckgit_() { _PREPFILEFTN0_ shellcheck shellcheck-git shellcheckgit \"a shell script analysis tool (latest git commit)\" ; }\n_ADDmakeaurshellcheckgitstatic_() { _PREPFILEFTN0_ shellcheck shellcheck-git-static shellcheckgitstatic \"a shellcheck-static, but using the latest-commit builds maintained by the author\" ; }\n_ADDmakeaurtrizen_() { _PREPFILEFTN0_ trizen trizen trizen \"the Trizen AUR Package Manager, a lightweight pacman wrapper and AUR helper\" ; }\n_ADDmakeaurtrizengit_() { _PREPFILEFTN0_ trizen trizen-git trizengit \"the Trizen AUR Package Manager, a lightweight pacman wrapper and AUR helper (git version)\" ; }\n_ADDmakeaurtpac_() { _PREPFILEFTN0_ tpac tpac tpac  \"a trizen wrapper to mimic yaourt's search feature\" ; }\n_ADDmakeauryaah_() { _PREPFILEFTN0_ yaah yaah yaah \"Yet Another AUR Helper\" ; }\n_ADDmakeaurzigzag_() { _PREPFILEFTN0_ zig-zag zig-zag zig-zag \"a programming language prioritizing robustness, optimality, and clarity\" ; }\n\n_ADDmakefakeroottcp_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makefakeroottcp \"# build and install fakeroot-tcp\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makefakeroottcp\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makefakeroottcp\nprintf \"\\\\n%s\\\\n\" \"makeaurhelpers build fakeroot-tcp\" \"## $INSTALLDIR$TMXRCHBNDR/makefakeroottcp FE\" >> \"$TMXRCHBNDS\"/makefakeroottcp\nchmod 755 \"$TMXRCHBNDS\"/makefakeroottcp\n}\n\n_ADDmakeksh_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeksh \"# build and install the ksh shell; Inspired by https://github.com/termux/termux-api/issues/436\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeksh\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeksh\ncat >> \"$TMXRCHBNDS\"/makeksh <<- EOM\n_PRTERROR_() {\nprintf \"\\\\n\\\\e[1;31merror: \\\\e[1;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s), and run '\\$STRNRG' again.\"\nexit 100\n}\nprintf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \"Building and installing 'ksh':\"\nif [[ -n \"\\${PREFIX:-}\" ]]\nthen\n: # pull requests are requested to automate install missing Termux packages\nelse\nif { [ ! -f /usr/bin/make ] || [ ! -f /usr/bin/git ] || [ ! -f /usr/bin/bison ] ; }\nthen\npc bison base base-devel gcc git || pci bison base base-devel gcc git || { printf \"\\\\n\\\\e[1;31mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \\\\e[7;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s) by running command 'pci bison base base-devel gcc git' as proot root user.  You might be able to bring this about without closing this session.  Please try running command: $STARTBIN command 'pci base base-devel gcc git' in a new Termux PRoot session.  This should install the neccessary packages to make 'ksh'.  Then return to this session, and run '\\${0##*/}' again.\" && exit 120 ; }\nfi\ncd\n[ -d ksh ] || gcl https://github.com/ksh-community/ksh\n{ { cd ksh || exit 69 ; } && nice -n 20 ./bin/package make ; } || { printf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mEXITING...\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \" \"The commands 'cd ksh && nice -n 20 ./bin/package make' did not run as expected; \" && exit 124 ; }\nfind \"\\$HOME\"/ksh/arch/*/bin -type f -executable ||: # printf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} SIGNAL:  \" \"The command 'find arch/*/bin -type f -executable' did not run as expected; CONTINUING...\" && _PRTERROR_\nfi\n## $INSTALLDIR$TMXRCHBNDR/makeksh FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/makeksh\n}\n\n_ADDmakeyay_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/makeyay \"# build and install command yay\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/makeyay\n_DPTCHHLP_ \"$TMXRCHBNDS\"/makeyay\nprintf \"\\\\n%s\\\\n\" \"makeaurhelpers build yay-bin\" \"## $INSTALLDIR$TMXRCHBNDR/makeyay FE\" >> \"$TMXRCHBNDS\"/makeyay\nchmod 755 \"$TMXRCHBNDS\"/makeyay\n}\n\n_ADDmemav_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/memav\n_PRTRTHLP_ \"$TMXRCHBNDS\"/memav\nprintf \"%s\\\\n%s\\\\n\" \"grep -i available /proc/meminfo\" \"## $INSTALLDIR$TMXRCHBNDR/memav FE\" >> \"$TMXRCHBNDS\"/memav\nchmod 755 \"$TMXRCHBNDS\"/memav\n}\n\n_ADDmemfree_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/memfree\n_PRTRTHLP_ \"$TMXRCHBNDS\"/memfree\nprintf \"%s\\\\n%s\\\\n\" \"grep -i free /proc/meminfo\" \"## $INSTALLDIR$TMXRCHBNDR/memfree FE\" >> \"$TMXRCHBNDS\"/memfree\nchmod 755 \"$TMXRCHBNDS\"/memfree\n}\n\n_ADDmeminfo_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/meminfo\n_PRTRTHLP_ \"$TMXRCHBNDS\"/meminfo\nprintf \"%s\\\\n%s\\\\n\" \"cat /proc/meminfo\" \"## $INSTALLDIR$TMXRCHBNDR/meminfo FE\" >> \"$TMXRCHBNDS\"/meminfo\nchmod 755 \"$TMXRCHBNDS\"/meminfo\n}\n\n_ADDmemmem_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/memmem\n_PRTRTHLP_ \"$TMXRCHBNDS\"/memmem\nprintf \"%s\\\\n%s\\\\n\" \"grep -i mem /proc/meminfo\" \"## $INSTALLDIR$TMXRCHBNDR/memmem FE\" >> \"$TMXRCHBNDS\"/memmem\nchmod 755 \"$TMXRCHBNDS\"/memmem\n}\n\n_ADDmemtot_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/memtot\n_PRTRTHLP_ \"$TMXRCHBNDS\"/memtot\nprintf \"%s\\\\n%s\\\\n\" \"grep -i total /proc/meminfo\" \"## $INSTALLDIR$TMXRCHBNDR/memtot FE\" >> \"$TMXRCHBNDS\"/memtot\nchmod 755 \"$TMXRCHBNDS\"/memtot\n}\n\n_ADDmota_() {\ncat > etc/mota <<- EOM\nprintf \"\\\\n\\\\e[1;34m%s\\\\n%s\\\\e[0;34m%s\\\\n\\\\e[1;34m%s\\\\e[0;34m%s\\\\n\\\\e[1;34m%s\\\\e[0;34m%s\\\\n\\\\e[1;34m%s\\\\e[0;34m%s\\\\n\\\\n\\\\e[1;34m%s\\\\e[0m%s\\\\n\\\\e[1;34m%s\\\\e[0m%s\\\\n\\\\e[1;34m%s\\\\e[0m%s\\\\n\\\\e[1;34m%s\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[0;34m%s\\\\n\\\\e[1;34m%s\\\\e[0m%s\\\\n\\\\e[1;34m%s\\\\e[0m%s\\\\n\\\\n\" \"Welcome to Arch Linux in Termux PRoot!\" \"Install a package: \" \"pacman -S package\" \"More  information: \" \"pacman -[D|F|Q|R|S|T|U]h\" \"Search   packages: \" \"pacman -Ss query\" \"Upgrade  packages: \" \"pacman -Syu\" \"Chat:\t\" \"wiki.termux.com/wiki/Community\" \"Discus:\t\" \"github.com/login/repo/discussions\" \"GitHub:\t\" \"$MOTTECGIT\" \"Help:\t\" \"help man \" \"and \" \"info man\" \"IRC:\t\" \"$MOTTECIRC\" \"Rev:\t\" \"github.com/login/repo/releases\"\nEOM\n}\n\n_ADDmotd_() {\ncat > etc/motd <<- EOM\nWelcome to Arch Linux in Termux PRoot!\nInstall a package: pacman -S package\nMore  information: pacman -[D|F|Q|R|S|T|U]h\nSearch   packages: pacman -Ss query\nUpgrade  packages: pacman -Syu\n\n$MOTTECBBS\nChat:\twiki.termux.com/wiki/Community\nDiscus:\tgithub.com/login/repo/discussions\nHelp:\tinfo query and man query\nGitHub:\t$MOTTECGIT\nIRC:\t$MOTTECIRC\nRev:\tgithub.com/login/repo/releases\nEOM\n}\n\n_ADDmoto_() {\ncat > etc/moto <<- EOM\nprintf \"\\\\n\\\\e[1;34mPlease share your Arch Linux in Termux PRoot experience!\\\\n\\\\n\\\\e[1;34mChat:\t\\\\e[0mwiki.termux.com/wiki/Community\\\\n\\\\e[1;34mDiscus:\t\\\\e[0mgithub.com/login/repo/discussions\\\\n\\\\e[1;34mGitHub:\t\\\\e[0m%s\\\\n\\\\e[1;34mHelp:\t\\\\e[0;34mhelp man \\\\e[1;34mand \\\\e[0;34minfo man\\\\n\\\\e[1;34mIRC:\t\\\\e[0m%s\\\\n\\\\e[1;34mRev:\t\\\\e[0mgithub.com/login/repo/releases\\\\n\\\\n\\\\e[0m\" \"$MOTTECGIT\" \"$MOTTECIRC\"\nEOM\n}\n\n_ADDopen4root_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/open4root \"# Open programs in '$TMXRCHBNDR' for root login.\"\ncat >> \"$TMXRCHBNDS\"/open4root <<- EOM\nsed -i 's/UID\\\" = 0/UID\\\" = -1/g' $TMXRCHBNDR/* ||:\nsed -i 's/EUID == 0/EUID == -1/g' $TMXRCHBNDR/* ||:\n## $INSTALLDIR$TMXRCHBNDR/open4root FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/open4root\n}\n\n_ADDorcaconf_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/orcaconf \"# Contributor https://github.com/JanuszChmiel\" \"# Reference https://github.com/SDRausty/termux-archlinux/issues/66 Let us expand setupTermuxArch so users can install Orca screen reader (assistive technology) and also have VNC support added easily.\"\ncat >> \"$TMXRCHBNDS\"/orcaconf <<- EOM\n[[ -f \"/run/lock/${INSTALLDIR##*/}/orcaconf.lock\" ]] && printf \"%s\\\\n\" \"Already configured orca: DONE 🏁\" && exit\n_INSTALLORCACONF_() {\n[[ ! -f \"/run/lock/${INSTALLDIR##*/}/orcaconfinstall.lock\" ]] && { nice -n 18 pci espeak-ng mate mate-extra orca pulseaudio-alsa tigervnc || nice -n 18 pci espeak-ng mate mate-extra orca pulseaudio-alsa tigervnc ; } && :>\"/run/lock/${INSTALLDIR##*/}/orcaconfinstall.lock\" || printf \"%s\\\\n\" \"_INSTALLORCACONF_ \\${0##*/} did not completed as expected; Continuing...\"\n}\n_INSTALLORCACONF_ || _INSTALLORCACONF_ || { printf \"%s\\\\n\" \"_INSTALLORCACONF_ \\${0##*/} did not completed as expected.  Please check for errors and run \\${0##*/} again.\" && exit ; }\ncsystemctl || printf \"\\\\e[1;31m%s\\\\e[0m\\\\n\" \"command 'csystemctl' did not completed as expected\"\n[[ ! -f \"/run/lock/${INSTALLDIR##*/}/orcaconf.lock\" ]] && :>\"/run/lock/${INSTALLDIR##*/}/orcaconf.lock\"\norcarun || printf \"\\\\e[1;31m%s\\\\e[0m\\\\n\" \"command 'orcarun' did not completed as expected\"\n## $INSTALLDIR$TMXRCHBNDR/orcaconf FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/orcaconf\n_ADDorcarun_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/orcarun \"# Contributor https://github.com/JanuszChmiel \" \"# Reference https://github.com/SDRausty/termux-archlinux/issues/66 Let's expand setupTermuxArch so users can install Orca screen reader (assistive technology) and also have VNC support added easily.\"\ncat >> \"$TMXRCHBNDS\"/orcarun <<- EOM\nif ! command Xvnc\nthen\norcaconf\nelse\nXvnc -localhost -geometry 1024x768 -depth 24 -SecurityTypes=None\nfi\n## $INSTALLDIR$TMXRCHBNDR/orcarun FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/orcarun\n}\n_ADDorcarun_\n}\n\n_ADDpatchmakepkg_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/patchmakepkg \"# patch makepkg;  Contributor https://github.com/petkar\"\n_PRTPATCHHELP_ \"$TMXRCHBNDS\"/patchmakepkg\ncat >> \"$TMXRCHBNDS\"/patchmakepkg <<- EOM\n[ -f \"/run/lock/${INSTALLDIR##*/}/patchmakepkg.lock\" ] && printf \"%s\\\\n\" \"Nothing to do;  Already patched command 'makepkg': DONE 🏁\" && exit\nprintf \"Patching makepkg: \\\\n\"\nSDATE=\"\\$(date +%s)\"\nBKPDIR=\"$INSTALLDIR/var/backups/${INSTALLDIR##*/}/\"\n[ -d \"\\$BKPDIR\" ] || mkdir -p \"\\$BKPDIR\"\ncp /bin/makepkg \"\\$BKPDIR/makepkg.\\$SDATE.bkp\"\nif [ \"\\$(awk 'FNR==232{print \\$0}' /bin/makepkg)\" != \"#\" ]\nthen\nsed -ie 's/fakeroot -- bash/bash/g' /bin/makepkg\nsed -ir 's/\\$(fakeroot -v)/fakeroot -v/g' /bin/makepkg\n# sed append to beginning of lines\nsed -ie 240,241's/.*/# &/' /bin/makepkg\nsed -ie 1195,1199's/.*/# &/' /bin/makepkg\nfi\n# copy makepkg to $TMXRCHBNDR to update proof it (fail safe measure)\ncp /bin/makepkg $TMXRCHBNDR/makepkg\n# create lock file to update proof patchmakepkg\n:>\"/run/lock/${INSTALLDIR##*/}/patchmakepkg.lock\"\nprintf \"Patching makepkg: DONE 🏁\\\\n\"\n## $INSTALLDIR$TMXRCHBNDR/patchmakepkg FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/patchmakepkg\n}\n\n_ADDpacmandblock_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/pacmandblock \"# When using the alternate elogin or euser option to login with $STARTBIN as user 'pacman' does not behave as expected;  Hence 'pacman' is blocked when the alternate login feature is used.\"\ncat >> \"$TMXRCHBNDS\"/pacmandblock <<- EOM\nLOCKFILE=\"/var/lib/pacman/db.lck\"\nif [ ! -f \"\\$LOCKFILE\" ]\nthen\nprintf \"%s\" \"Creating file \\$LOCKFILE: \"\n:>\"\\$LOCKFILE\"\nprintf \"%s\\\\n\" \"DONE\"\nelif [ -f \"\\$LOCKFILE\" ]\nthen\nprintf \"%s\" \"Deleting file \\$LOCKFILE: \"\nrm -f \"\\$LOCKFILE\"\nprintf \"%s\\\\n\" \"DONE\"\nfi\n## $INSTALLDIR$TMXRCHBNDR/pacmandblock FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/pacmandblock\n}\n\n_ADDpc_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/pc \"# pacman install packages wrapper without system update\"\ncat >> \"$TMXRCHBNDS\"/pc <<- EOM\ndeclare -g ARGS=\"\\$@\"\n_PRINTTAIL_() {\nprintf \"\\\\e[0;32m%s \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;34m: \\\\e[1;32m%s\\\\e[0m 🏁  \\\\n\\\\n\\\\e[0m\" \"TermuxArch command\" \"\\$STRNRG\" \"version \\$VERSIONID\" \"DONE 📱\"\nprintf '\\033]2;  🔑 TermuxArch %s:DONE 📱 \\007' \"\\$STRNRG\"\n}\n_TRPET_() {\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n_PRINTTAIL_ \"\\$ARGS\"\n}\ntrap _TRPET_ EXIT\n## pc begin ####################################################################\nprintf '\\033]2;  🔑 TermuxArch %s 📲 \\007' \"\\$STRNRG\"\nprintf \"\\\\e[1;32m==> \\\\e[1;37mRunning TermuxArch command \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;37m...\\\\n\" \"\\$STRNRG\" \"version \\$VERSIONID\"\n[ \"\\$UID\" -eq 0 ] && SUDOCONF=\"\" || SUDOCONF=\"sudo\"\nif [[ -z \"\\${1:-}\" ]]\nthen\nprintf \"\\\\e[1;31m%s \\\\e[0m\\\\n\" \"Run command '\\${0##*/}' with at least one argument;  Exiting...\"\nelse\nnice -n 20 \\$SUDOCONF pacman --needed --noconfirm --color=always -S \"\\$@\" || nice -n 20 \\$SUDOCONF pacman --needed --noconfirm --color=always -S \"\\$@\"\nfi\n## $INSTALLDIR$TMXRCHBNDR/pc FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/pc\n}\n\n_ADDpci_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/pci \"# pacman install packages wrapper with system update\"\ncat >> \"$TMXRCHBNDS\"/pci <<- EOM\ndeclare ARGS=\"\\$@\"\n_PRINTTAIL_() {\nprintf \"\\\\e[0;32m%s \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;34m: \\\\e[1;32m%s\\\\e[0m 🏁  \\\\n\\\\n\\\\e[0m\" \"TermuxArch command\" \"\\$STRNRG\" \"version \\$VERSIONID\" \"DONE 📱\"\nprintf '\\033]2;  🔑 TermuxArch %s:DONE 📱 \\007' \"\\$STRNRG\"\n}\n_TRPET_() {\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n_PRINTTAIL_ \"\\$ARGS\"\n}\ntrap _TRPET_ EXIT\n## pci begin ###################################################################\nprintf '\\033]2;  🔑 TermuxArch %s 📲 \\007' \"\\$STRNRG\"\nprintf \"\\\\e[1;32m==> \\\\e[1;37mRunning TermuxArch command \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;37m...\\\\n\" \"\\$STRNRG\" \"version \\$VERSIONID\"\n[ \"\\$UID\" -eq 0 ] && SUDOCONF=\"\" || SUDOCONF=\"sudo\"\nnice -n 20 \\$SUDOCONF pacman --needed --noconfirm --color=always -Syu \"\\$@\" || nice -n 20 \\$SUDOCONF pacman --needed --noconfirm --color=always -Su \"\\$@\"\n## $INSTALLDIR$TMXRCHBNDR/pci FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/pci\n}\n\n_ADDprofileusretc_() {\nif ! grep -q pulseaudio \"$PREFIX/etc/profile\" 2>/dev/null\nthen\nprintf \"%s\\\\n%s\\\\n\" \"pulseaudio --start --exit-idle-time=-1\" \"pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1\" >> \"$PREFIX/etc/profile\"\nfi\n}\n\n_ADDprofileetc_() {\nif [ -f \"$INSTALLDIR/etc/profile\" ]\nthen\nif ! grep -q 'export PULSE_SERVER=127.0.0.1' \"$INSTALLDIR/etc/profile\"\nthen\nprintf \"%s\\\\n\" \"##  The next lines were generated by ${0##*/} at ${FTIME//-}.\nexport DISPLAY=:0\nexport PULSE_SERVER=127.0.0.1\nunset DBUS_SESSION_BUS_ADDRESS\nunset SESSION_MANAGER\" >> \"$INSTALLDIR/etc/profile\"\nfi\nfi\n}\n\n_ADDpinghelp_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/pinghelp\n_PRTRTHLP_ \"$TMXRCHBNDS\"/pinghelp\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"_PRTSYG_() { printf '%s\\\\n' \\\"Signal received:  Continuing...\\\" ; }\" \"ARGONE=\\\"\\${1-www.github.com}\\\"\" \"ISCOMCAR=\\\"\\$(command -v ping)\\\"\" \"printf '%s\\\\n' \\\"\\$ISCOMCAR\\\"\" \"{ SHUFREST=\\\"\\$(shuf -n 1 -i 2-8)\\\" && printf '\\\\n%s\\\\n' \\\"Running command '/system/bin/ping -c 2 -i \\$SHUFREST \\$ARGONE':\\\" && /system/bin/ping -c 2 -i \\\"\\$SHUFREST\\\" \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ SHUFREST=\\\"\\$(shuf -n 1 -i 2-8)\\\" && printf '\\\\n%s\\\\n' \\\"Running command '$PREFIX/bin/ping -c 2 -i \\$SHUFREST \\$ARGONE':\\\" && $PREFIX/bin/ping -c 2 -i \\\"\\$SHUFREST\\\" \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ SHUFREST=\\\"\\$(shuf -n 1 -i 2-8)\\\" && printf '\\\\n%s\\\\n' \\\"Running command '/bin/ping -c 2 -i \\$SHUFREST \\$ARGONE':\\\" && /bin/ping -c 2 -i \\\"\\$SHUFREST\\\" \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ SHUFREST=\\\"\\$(shuf -n 1 -i 2-8)\\\" && printf '\\\\n%s\\\\n' \\\"Running command '/usr/bin/ping -c 2 -i \\$SHUFREST \\$ARGONE':\\\" && /usr/bin/ping -c 2 -i \\\"\\$SHUFREST\\\" \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ printf '\\\\n%s\\\\n' \\\"Running command 'curl -I \\$ARGONE 80':\\\" && curl -I \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ printf '\\\\n%s\\\\n' \\\"Running command 'dig \\$ARGONE':\\\" && dig \\\"\\$ARGONE\\\" ; } || _PRTSYG_\" \"{ printf '\\\\n%s\\\\n' \\\"Running command 'telnet \\$ARGONE 79':\\\" && telnet \\\"\\$ARGONE\\\" 80 ; } || _PRTSYG_\" >> \"$TMXRCHBNDS\"/pinghelp\nprintf \"%s\\\\n%s\\\\n\" \"printf '\\\\n%s\\\\n' \\\"These packages 'dnsutils', 'lynx', 'net-tools' and 'strace' can be helpful in diagnosing network issues.  The 'dig' and 'telnet' command can assist as well.\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/pinghelp FE\" >> \"$TMXRCHBNDS\"/pinghelp\nchmod 755 \"$TMXRCHBNDS\"/pinghelp\n}\n\n_ADDresolvconf_() {\n[ -d run/systemd/resolve ] || mkdir -p run/systemd/resolve\ncat > run/systemd/resolve/resolv.conf <<- EOM\nnameserver 1.1.1.1\nnameserver 1.0.0.1\nEOM\n_ADDTORESOLVE_() {\ncat >> etc/resolv.conf <<- EOM\nnameserver 1.1.1.1\nnameserver 1.0.0.1\nEOM\n}\n_CHECKRESOLVE_() {\n[ -d etc ] || mkdir -p etc\nif [ -f etc/resolv.conf ]\nthen\nif ! grep -q 'nameserver 1.1.1.1' etc/resolv.conf\nthen\n_ADDTORESOLVE_\nfi\nfi\n}\n_CHECKRESOLVE_\n}\n\n_ADDstriphtmlcodefromfile_() { _CFLHDR_ \"$TMXRCHBNDS\"/striphtmlcodefromfile \"#strip html code from file\" ; printf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in $INSTALLDIR; the command '$STARTBIN command addauser username' can create user accounts in $INSTALLDIR from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit\" \"[ -x \\\"\\$(command -v sed)\\\" ] || { pc sed || pci sed ; }\" \"sed -n '/^$/!{s/<[^>]*>//g;p;}' \\\"\\$@\\\"\" \"## $INSTALLDIR$TMXRCHBNDR/striphtmlcodefromfile FE\" >> \"$TMXRCHBNDS\"/striphtmlcodefromfile ; chmod 755 \"$TMXRCHBNDS\"/striphtmlcodefromfile ; }\n\n_ADDt_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/t\nprintf \"%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit\" >> \"$TMXRCHBNDS\"/t\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"if [ -x /usr/bin/tree ] || [ -x \\\"\\${PREFIX:-}\\\"/bin/tree ]\" \"then\" \"tree \\\"\\$@\\\"\" \"else\" \"{ pc tree || pci tree ; } && tree \\\"\\$@\\\"\" \"fi\" \"## $INSTALLDIR$TMXRCHBNDR/t FE\" >> \"$TMXRCHBNDS\"/t\nchmod 755 \"$TMXRCHBNDS\"/t\n}\n\n_ADDtlmgrinstaller_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/tlmgrinstaller \"# install TexLive installer\"\nprintf \"%s\\\\n\" \"[ -d /usr/local/texlive ] || mkdir -p /usr/local/texlive\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n\" \"_GETINSTALLER_() { { [ -d /usr/local/texlive/install-tl ] || mkdir -p /usr/local/texlive/install-tl ; } && { { [ -f /usr/local/texlive/install-tl/install-tl.zip ] && [ -f /usr/local/texlive/install-tl/install-tl.zip.sha512 ] || wget -c -P /usr/local/texlive/install-tl https://mirror.math.princeton.edu/pub/CTAN/systems/texlive/tlnet/install-tl.zip.sha512 https://mirror.math.princeton.edu/pub/CTAN/systems/texlive/tlnet/install-tl.zip ; } && { cd /usr/local/texlive/install-tl || exit 69 ; } && { sha512sum -c install-tl.zip.sha512 || { rm -f install-tl.zip* && printf '%s\\\\n' \\\"Files were corrupt and were deleted;  Please try again.  Exiting...  \\\" && exit 189 ; } ; } && unzip -n install-tl.zip ; } && { CDDIR=\\\"\\$(find . -maxdepth 1 | tail -n 1)\\\" && { cd \\\"\\$CDDIR\\\" || exit 69 ; } && printf '%s\\\\n' \\\"\\$PWD\\\" && ls && printf '%s\\\\n' \\\"Please be patient.  Command '\\${0##*/}' continuing...\\\" && perl install-tl && printf '%s\\\\n' \\\"\\$PWD\\\" | tee dir.pth > dir.tmp ; } ; }\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n\" \"_PRINTHELP_() { printf '\\\\n%s\\\\n' \\\"The command '${0##*/} re' adds TEX environment variables automatically to BASH init files in the Arch Linux in Termux PRoot environment.  Please exit this shell and login again.  If logging in again does not add TEX environment variables, then please run command '${0##*/} re' in order to add TEX environment variables to the BASH init files in Termux PRoot.  Command '${0##*/} h' has more information.  \\\" ; }\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"printf '%s\\\\n' \\\"Command '\\${0##*/}';  Begun...  \\\"\" \"{ command -v tlmgr && printf '%s\\\\n' \\\"The command 'tlmgr' is installed;  Continuing...  \\\" ; } || if [ -x /usr/bin/perl ] && [ -x /usr/bin/wget ] && [ -x /usr/bin/unzip ]\" \"then\" \"_GETINSTALLER_\" \"else\" \"{ { pc perl wget unzip || pci perl wget unzip ; } || { pkg i perl wget unzip || { pkg up && pkg i perl wget unzip ; } ; } ; } && _GETINSTALLER_\" \"fi\" \"_PRINTHELP_\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n\" \"INSDIR=\\\"\\$(find /usr/local/texlive/install-tl/ -maxdepth 1 -type d | tail -n 1)\\\"\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n\" \"[ -d /usr/local/texlive/install-tl ] && { [ -f \\\"\\$INSDIR\\\"/dir.pth ] && [ -f \\\"\\$INSDIR\\\"/dir.tmp ] && rm -f \\\"\\$INSDIR\\\"/dir.tmp || printf '\\\\n%s\\\\n' \\\"Running command '\\$INSDIR/install-tl';  Continuing...  \\\" && \\\"\\$INSDIR\\\"/install-tl && exit 0 ; }\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nprintf \"%s\\\\n\" \"## $INSTALLDIR$TMXRCHBNDR/tlmgrinstaller FE\" >> \"$TMXRCHBNDS\"/tlmgrinstaller\nchmod 755 \"$TMXRCHBNDS\"/tlmgrinstaller\n}\n\n_ADDtop_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/top\nprintf \"%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit\" \"{ [ -f /system/bin/top ] && /system/bin/top && exit ; } || { printf \\\"%s\\\\n\\\" \\\"The command '\\${0##*/}' is currently disabled in Termux PRoot.   Please open an issue and PR should a better resolution for '\\${0##*/}' in Termux PRoot be found.  Running command 'ps aux':\\\" && ps aux && printf \\\"%s\\\\n\\\" \\\"Running command 'nproc':\\\" && nproc && printf \\\"%s\\\\n\\\" \\\"Running command 'nproc --all':\\\" && nproc --all && ps aux | cut -d:  -f2- | grep -v TIME | grep -v '\\-bash' | grep -v cut | grep -v ps\\ aux | grep -v sort | cut -c 4- | sort && exit ; }\" \"## $INSTALLDIR$TMXRCHBNDR/top FE\" >> \"$TMXRCHBNDS\"/top\nchmod 755 \"$TMXRCHBNDS\"/top\n}\n\n_ADDtimings_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/timings \"# Developed at [Terminal output speed issues](https://github.com/termux/termux-app/issues/603) Contributor evg-zhabotinsky\"\ncat >> \"$TMXRCHBNDS\"/timings <<- EOM\ndd if=/dev/urandom bs=1K count=100 | hexdump -C >500KBfile.txt\nfor TIMING in 0 1 2 3; do\nprintf '%s\\n' \\$TIMING\nsleep 1\ntime nice -n 20 cat 500KBfile.txt\nsleep 2\ndone\nrm -f 500KBfile.txt\n## $INSTALLDIR$TMXRCHBNDR/timings FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/timings\n}\n\n_ADDthstartarch_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/th\"$STARTBIN\"\n_PRTRTHLP_ \"$TMXRCHBNDS\"/th\"$STARTBIN\"\ncat >> \"$TMXRCHBNDS\"/th\"$STARTBIN\" <<- EOM\n_PRTERROR_() {\nprintf \"\\\\e[1;31mERROR;\\\\e[1;37m%s\\\\e[0m\\\\n\" \" Please run '\\${0##*/}' again.\"\n}\nprintf \"%s\\\\n\" \"$STARTBIN help\"\n$STARTBIN help\nsleep 1\nprintf '%s command \"pwd && whoami\"\\\\n' \"$STARTBIN\"\n$STARTBIN command \"pwd && whoami\" || _PRTERROR_\nsleep 1\nprintf \"%s\\\\n\" \"STARTBIN login user\"\n$STARTBIN login user || _PRTERROR_\nprintf '%s raw su user -c \"pwd && whoami\"\\\\n' \"$STARTBIN\"\n$STARTBIN raw su user -c \"pwd && whoami\" || _PRTERROR_\nsleep 1\nprintf '%s su user \"pwd && whoami\"\\\\n' \"$STARTBIN\"\n$STARTBIN su user \"pwd && whoami\" || _PRTERROR_\nprintf \"%s\\\\n\" \"th$STARTBIN done\"\n## $INSTALLDIR$TMXRCHBNDR/th$STARTBIN FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/th\"$STARTBIN\"\n}\n\n_ADDtools_() {\t# developing implementaion; working system tools that work can be added to array PRFXTOLS\nif [[ -z \"${EDO01LCR:-}\" ]]\nthen\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\t# set customized commands for Arch Linux 32 architecture\nPRFXTOLS=\"awk top\"\nelse\nPRFXTOLS=\"top\"\nfi\nelif [[ $EDO01LCR = 0 ]]\nthen\nPRFXTOLS=\"am awk dpkg getprop grep gzip ping ps sed top which $(compgen -c|grep termux- || find \"$PREFIX/bin\" -type f -executable -name termux-)\"\nfi\n_CPSTOOL_() {\t# copy Termux tool to PRoot installation\ncp \"$WHICHSTOOL\" \"$INSTALLDIR$TMXRCHBNDR/$STOOL\" && printf \"%s\\\\n\" \"cp $WHICHSTOOL $INSTALLDIR$TMXRCHBNDR/$STOOL: continuing...\"\n}\nfor STOOL in ${PRFXTOLS[@]}\ndo\nWHICHSTOOL=\"$(command -v \"$STOOL\" || printf \"1\")\"\nif [ ! -f \"$INSTALLDIR$TMXRCHBNDR/$STOOL\" ]\nthen\n_CPSTOOL_\nelse\nif [ \"$WHICHSTOOL\" != 1 ]\nthen\nif ! diff \"$WHICHSTOOL\" \"$INSTALLDIR$TMXRCHBNDR/$STOOL\"\nthen\n_CPSTOOL_\nfi\nelse\nprintf \"System tool \\\\e[1m'%s'\\\\e[0m cannot be found: continuing...\\\\e[1\\\\n\" \"$STOOL\"\nfi\nfi\ndone\nif [ ! -e root/storage ] && [ -e \"$HOME/storage\" ]\nthen\nln -s \"$HOME/storage\" root/storage\nfi\nif [ ! -e root/txhome ]\nthen\nln -s \"$HOME\" root/txhome\nfi\n}\n\n_ADDtour_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/tour \"# A short tour that shows a few of the new featires of this system.\"\ncat >> \"$TMXRCHBNDS\"/tour <<- EOM\nprintf \"\\\\e[1;32m==> \\\\e[1;37mPlease hide the virtual keyboard.  Beginning a short tour that shows a few of the new featires of this system.  Running command \\\\e[1;32mexport\\\\e[1;37m...\\\\n\\\\n\"\nsleep 4\nexport\nsleep 2\nprintf \"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mls -alRr --color=always %s\\\\e[1;37m...\\\\n\\\\n\" \"\\$HOME\"\nsleep 1\nls -alRr --color=always \"\\$HOME\"\nsleep 4\nprintf \"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mcat %s/.bash_profile\\\\e[1;37m...\\\\n\\\\n\" \"\\$HOME\"\nsleep 1\ncat \"\\$HOME\"/.bash_profile\nsleep 4\nprintf \"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mcat %s/.bashrc\\\\e[1;37m...\\\\n\\\\n\" \"\\$HOME\"\nsleep 1\ncat \"\\$HOME\"/.bashrc\nsleep 4\nprintf \"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mcat $TMXRCHBNDR/pci\\\\e[1;37m...\\\\n\\\\n\"\nsleep 1\ncat $TMXRCHBNDR/pci\nsleep 4\nprintf \"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mcat $TMXRCHBNDR/README.md\\\\e[1;37m...\\\\n\\\\n\"\nsleep 1\ncat $TMXRCHBNDR/README.md\nprintf \"\\\\e[1;32m\\\\n%s \\\\e[38;5;121m%s \\\\n\\\\n\\\\e[4;38;5;129m%s\\\\e[0m\\\\n\\\\n\\\\e[1;34m%s \\\\e[38;5;135m%s\\\\e[0m\\\\n\\\\n\" \"==>\" \"Short tour is complete. Scroll up if you wish to study the output.  Run this script again at a later time, and it might be surprising at how this environment changes over time. \" \"If you are new to *nix, http://tldp.org has documentation.\" \"IRC: \" \"https://$MOTTECIRC\"\n## $INSTALLDIR$TMXRCHBNDR/tour FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/tour\n}\n\nCCHDRX=\"$CACHEDIR$CACHEDIRSUFIX\"\n_ADDtrim_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/trim\ncat >> \"$TMXRCHBNDS\"/trim <<- EOM\n[ -f \"$INSTALLDIR\"/run/lock/\"${INSTALLDIR##*/}\"/pacman.cachedir.lock ] || { touch \"$CCHDRX\" && sed -Ei 's/.*#CacheDir.*/CacheDir    = ${CCHDRX//\\//\\\\\\/}/g' /etc/pacman.conf && :>\"$INSTALLDIR\"/run/lock/\"${INSTALLDIR##*/}\"/pacman.cachedir.lock ; }\nprintf \"\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32m%s\\\\e[1;37m…\\\\n\" \"\\${0##*/}\"\n[ \"\\$UID\" -eq 0 ] && SUTRIM=\"\" || SUTRIM=\"sudo\"\n_DTRM_() {\nprintf \"%s\\\\n\" \"Triming installation files in directory '$INSTALLDIR' and populating cache in directory '$CACHEDIR'.  The command '${0##*/} ref' can be used to repopulate cache directory '$INSTALLDIR/var/cache/pacman/pkg/':\"\n[ -d \"$CACHEDIR$CACHEDIRSUFIX\" ] || { mkdir -p \"$CACHEDIR$CACHEDIRSUFIX\" && printf '%s' \"mkdir -p $CACHEDIR$CACHEDIRSUFIX && \" ; }\nprintf \"%s\\\\n\" \"[1/3] find $INSTALLDIR -maxdepth 1 -type f -name \\\"*.tar.gz*\\\" -exec mv {} $CACHEDIR \\;\"\nfind $INSTALLDIR -maxdepth 1 -type f -name \"*.tar.gz*\" -exec mv {} \"$CACHEDIR\" \\; || _PMFSESTRING_ \"find $INSTALLDIR -maxdepth 1 -type f -exec mv {} $CACHEDIR \\;\"\nprintf \"%s\\\\n\" \"[2/3] find /var/cache/pacman/pkg/ -maxdepth 1 -type f -exec mv {} $CACHEDIR$CACHEDIRSUFIX \\;\"\nfind /var/cache/pacman/pkg/ -maxdepth 1 -type f -exec mv {} \"$CACHEDIR$CACHEDIRSUFIX\" \\; || _PMFSESTRING_ \"find /var/cache/pacman/pkg/ -maxdepth 1 -type f -exec mv {} $CACHEDIR$CACHEDIRSUFIX \\;\"\nprintf \"%s\" \"[3/3] paccache -r --keep 1 -c $CACHEDIR$CACHEDIRSUFIX\"\npaccache -r --keep 1 -c \"$CACHEDIR$CACHEDIRSUFIX\" || _PMFSESTRING_ \"paccache -r --keep 1 -c $CACHEDIR$CACHEDIRSUFIX\"\nprintf \"%s\\\\n\\\\n\" \"The command '${0##*/} ref' repopulates the installation package files in directory '$INSTALLDIR' from cache directory '$CACHEDIR' and updates the TermuxArch files to the newest published version.  \"\n}\n_PMFSESTRING_() {\nprintf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\n\\\\n\" \"Signal generated in '\\$1'; Cannot complete task; \" \"Continuing...\"\nprintf \"\\\\e[1;34m%s\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[0m\\\\n\\\\n\" \"  If you find improvements for \" \"${0##*/}\" \" and \" \"\\$0\" \" please open an issue and accompanying pull request.\"\n}\n_SUTRIM_() {\nnice -n 19 \\$SUTRIM pacman -Scc --noconfirm --color=always || _PMFSESTRING_ \"\\${SUTRIM}pacman -Scc \\${0##*/}\"\n}\n[ -d \"$CACHEDIR\" ] || mkdir -p \"$CACHEDIR\"\nif [ -f \"$CACHEDIR\"DLTCCH ]\nthen\nif grep 0 \"$CACHEDIR\"DLTCCH\nthen\n_DPRGLL_() {\nprintf \"%s\\\\\\\\n\" \"[1/6] rm -rf /boot/\"\nrm -rf /boot/\nprintf \"%s\\\\\\\\n\" \"[2/6] rm -rf /usr/lib/firmware\"\nrm -rf /usr/lib/firmware\nprintf \"%s\\\\\\\\n\" \"[3/6] rm -rf /usr/lib/modules\"\nrm -rf /usr/lib/modules\nprintf \"%s\\\\\\\\n\" \"[4/6] \\$SUTRIM\"\n_SUTRIM_\nprintf \"%s\\\\\\\\n\" \"[5/6] rm -f /var/cache/pacman/pkg/*pkg*\"\nrm -f /var/cache/pacman/pkg/*pkg* || _PMFSESTRING_ \"\\${0##*/} rm -f /var/cache/pacman/pkg/*pkg*\"\nprintf \"%s\\\\n\" \"[6/6] find $INSTALLDIR -maxdepth 1 -type f -name \\\"*.tar.gz*\\\" -delete\"\nfind $INSTALLDIR -maxdepth 1 -type f -name \"*.tar.gz*\" -delete || _PMFSESTRING_ \"\\${0##*/} find $INSTALLDIR -maxdepth 1 -type f -delete\"\n}\nprintf '%s\\n' \"Found 0 in file ${CACHEDIR}DLTCCH\" && _DPRGLL_\nelse\nprintf '%s' \"0 NOT found in file ${CACHEDIR}DLTCCH.  \" && _DTRM_\nfi\nelse\n_DTRM_\nfi\nprintf '%s' \"File ${CACHEDIR}DLTCCH not found.  If file ${CACHEDIR}DLTCCH is present with a 0, all the pkg cache files will be removed and trimming steps [1/6]-[6/6] will be used instead of steps [1/3]-[3/3].  Command 'cw \\${0##*/})' has more information.  \"\n## $INSTALLDIR$TMXRCHBNDR/trim FE\nEOM\nchmod 755 \"$TMXRCHBNDS\"/trim\n}\n\n_ADDv_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/v\ncat >> \"$TMXRCHBNDS\"/v <<- EOM\nif [[ -z \"\\${1:-}\" ]]\nthen\nARGS=(\".\")\nelse\nARGS=(\"\\$@\")\nfi\nEOM\nprintf \"%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\${0##*/}' as root user;\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/}; the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux; a default user account is created during setup; the default username 'user' can be used to access the PRoot system employing a user account; command '$STARTBIN help' has more information;  \\\" && exit\" >> \"$TMXRCHBNDS\"/v\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"if [ -x /usr/bin/vim ] || [ -x \\\"\\${PREFIX:-}\\\"/bin/vim ]\" \"then\" \"vim \\\"\\${ARGS[@]}\\\"\" \"else\" \"{ pc vim || pci vim ; } && vim \\\"\\${ARGS[@]}\\\"\" \"fi\" \"## $INSTALLDIR$TMXRCHBNDR/v FE\" >> \"$TMXRCHBNDS\"/v\nchmod 755 \"$TMXRCHBNDS\"/v\n}\n\n_ADDwe_() {\n_CFLHDR_ usr/bin/we \"# Watch available entropy on device.\" \"# cat /proc/sys/kernel/random/entropy_avail Contributor https://github.com/cb125\"\ncat >> usr/bin/we <<- EOM\ndeclare -a ARGS\n\n_TRPWE_() {\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n_PRINTTAIL_ \"\\${ARGS[@]}\"\n}\n\n_PRINTTAIL_() {\nprintf \"\\\\n\\\\e[0;32m%s \\\\e[1;32m%s \\\\e[0;32m%s\\\\e[1;34m: \\\\e[1;32m%s\\\\e[0m 🏁  \\\\n\\\\n\\\\e[0m\" \"TermuxArch command\" \"\\$STRNRG\" \"version \\$VERSIONID\" \"DONE 📱\"\nprintf '\\033]2;  🔑 TermuxArch command %s:DONE 📱 \\007' \"\\$STRNRG\"\n}\n\ntrap _TRPET_ EXIT\n## we begin ####################################################################\n\nif [[ -z \"\\${1:-}\" ]]\nthen\nARGS=\"\"\nelse\nARGS=\"\\$@\"\nfi\n\ni=1\nmulti=16\nentropy0=\\$(cat /proc/sys/kernel/random/entropy_avail 2>/dev/null)\n\nprintintro() {\nprintf '\\033]2; TermuxArch command Watch Entropy '%s' 📲  \\007' \"\\$STRNRG\"\nprintf \"\\\\n\\\\e[1;32mTermuxArch command Watch Entropy '%s':\\\\n\" \"\\$STRNRG\"\n}\n\n_PRINTTAIL_() {\nprintf \"\\\\n\\\\n\\\\e[1;32mTermuxArch command Watch Entropy 🏁 \\\\n\\\\n\"\nprintf '\\033]2; TermuxArch command Watch Entropy 🏁 \\007'\n}\n\n_PRINTUSAGE_() {\nprintf \"\\\\n\\\\e[0;32mUsage:  \\\\e[1;32mwe \\\\e[0;32m Watch Entropy sequential.\\\\n\\\\n\t\\\\e[1;32mwe sequential\\\\e[0;32m Watch Entropy sequential.\\\\n\\\\n\t\\\\e[1;32mwe simple\\\\e[0;32m Watch Entropy simple.\\\\n\\\\n\t\\\\e[1;32mwe verbose\\\\e[0;32m Watch Entropy verbose.\\\\n\\\\n\"'\\033]2; TermuxArch command Watch Entropy 📲  \\007'\n}\n\ninfif() {\nif [[ \\$entropy0 = \"inf\" ]] || [[ \\$entropy0 = \"\" ]] || [[ \\$entropy0 = 0 ]]\nthen\nentropy0=1000\nprintf \"\\\\e[1;32m∞^∞infifinfif2minfifinfifinfifinfif∞=1\\\\e[0;32minfifinfifinfifinfif\\\\e[0;32m∞==0infifinfifinfifinfif\\\\e[0;32minfifinfifinfif∞\"\nfi\n}\n\nen0=\\$((\\${entropy0}*\\$multi))\n\nesleep() {\nint=\\$(printf \"%s\\\\n\" \"\\$i/\\$entropy0\" | bc -l)\nfor i in {1..5}; do\nif (( \\$(printf \"%s\\\\n\" \"\\$int > 0.1\"|bc -l) ))\nthen\ntmp=\\$(printf \"%s\\\\n\" \"\\${int}/100\" | bc -l)\nint=\\$tmp\nfi\nif (( \\$(printf \"%s\\\\n\" \"\\$int > 0.1\"|bc -l) ))\nthen\nbreak\nfi\ndone\n}\n\n1sleep() {\nsleep 0.1\n}\n\nbcif() {\ncommandif=\\$(command -v getprop) ||:\nif [[ \\$commandif = \"\" ]]\nthen\nabcif=\\$(command -v bc) ||:\nif [[ \\$abcif = \"\" ]]\nthen\nprintf \"\\\\e[1;34mInstalling \\\\e[0;32mbc\\\\e[1;34m...\\\\n\\\\n\\\\e[1;32m\"\n{ pc bc || pci bc ; }\nprintf \"\\\\n\\\\e[1;34mInstalling \\\\e[0;32mbc\\\\e[1;34m: \\\\e[1;32mDONE 🏁\\\\n\\\\e[0m\"\nfi\nelse\ntbcif=\\$(command -v bc) ||:\nif [[ \\$tbcif = \"\" ]]\nthen\nprintf \"\\\\e[1;34mInstalling \\\\e[0;32mbc\\\\e[1;34m...\\\\n\\\\n\\\\e[1;32m\"\napt install bc --yes\nprintf \"\\\\n\\\\e[1;34mInstalling \\\\e[0;32mbc\\\\e[1;34m: \\\\e[1;32mDONE 🏁\\\\n\\\\e[0m\"\nfi\nfi\n}\n\nentropysequential() {\nprintf '\\033]2; TermuxArch Watch Entropy Sequential '%s' 📲  \\007' \"\\$STRNRG\"\nprintf \"\\\\n\\\\e[1;32mTermuxArch Watch Entropy Sequential '%s':\\\\n\" \"\\$STRNRG\"\nfor i in \\$(seq 1 \\$en0); do\nentropy0=\\$(cat /proc/sys/kernel/random/entropy_avail 2>/dev/null)\ninfif\nprintf \"\\\\e[1;30m \\$en0 \\\\e[0;32m\\$i \\\\e[1;32m\\${entropy0}\\\\n\"\n1sleep\ndone\n}\n\nentropysimple() {\nprintf '\\033]2; TermuxArch Watch Entropy Simple '%s' 📲  \\007' \"\\$STRNRG\"\nprintf \"\\\\n\\\\e[1;32mTermuxArch Watch Entropy Simple '%s':\\\\n\" \"\\$STRNRG\"\nfor i in \\$(seq 1 \\$en0); do\nentropy0=\\$(cat /proc/sys/kernel/random/entropy_avail 2>/dev/null)\ninfif\nprintf \"\\\\e[1;32m\\${entropy0} \"\n1sleep\ndone\n}\n\nentropyverbose() {\nprintf '\\033]2; TermuxArch Watch Entropy Verbose '%s' 📲  \\007' \"\\$STRNRG\"\nprintf \"\\\\n\\\\e[1;32mTermuxArch Watch Entropy Verbose '%s':\\\\n\" \"\\$STRNRG\"\nfor i in \\$(seq 1 \\$en0); do\nentropy0=\\$(cat /proc/sys/kernel/random/entropy_avail 2>/dev/null)\ninfif\nprintf \"\\\\e[1;30m \\$en0 \\\\e[0;32m\\$i \\\\e[1;32m\\${entropy0} \\\\e[0;32m#E&&√♪\"\nesleep\nsleep \\$int\nentropy1=\\$(cat /proc/sys/kernel/random/uuid)\ninfif\nprintf \"\\$entropy1\"\nesleep\nsleep \\$int\nprintf \"&&π™♪&##|♪FLT\"\nesleep\nsleep \\$int\nprintf \"\\$int♪||e\"\nesleep\nsleep \\$int\ndone\n}\n\n# [we sequential] Run sequential watch entropy.\nif [[ -z \"\\${1:-}\" ]]\nthen\nprintintro\nentropysequential\nelif [[ \\$1 = [Ss][Ee]* ]] || [[ \\$1 = -[Ss][Ee]* ]] || [[ \\$1 = --[Ss][Ee]* ]]\nthen\nprintintro\nentropysequential\n# [we simple] Run simple watch entropy.\nelif [[ \\$1 = [Ss]* ]] || [[ \\$1 = -[Ss]* ]] || [[ \\$1 = --[Ss]* ]]\nthen\nprintintro\nentropysimple\n# [we verbose] Run verbose watch entropy.\nelif [[ \\$1 = [Vv]* ]] || [[ \\$1 = -[Vv]* ]] || [[ \\$1 = --[Vv]* ]]\nthen\nprintintro\nbcif\nentropyverbose\n# [] Run default watch entropy.\nelif [[ \\$1 = \"\" ]]\nthen\nprintintro\nentropysequential\nelse\n_PRINTUSAGE_\nfi\n_PRINTTAIL_\n## $INSTALLDIR$TMXRCHBNDR/we FE\nEOM\nchmod 755 usr/bin/we\n}\n\n_ADDyt_() {\n_CFLHDR_ \"$TMXRCHBNDS\"/yt\nprintf \"%s\\\\n%s\\\\n%s\\\\n\" \"[ \\\"\\$UID\\\" = 0 ] && printf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;31mExiting...\\\\n\\\" \\\"Cannot run '\\$STRNRG' as root user :\\\" \\\" the command 'addauser username' creates user accounts in ~/${INSTALLDIR##*/} : the command '$STARTBIN command addauser username' can create user accounts in ~/${INSTALLDIR##*/} from Termux : a default user account is created during setup : the default username 'user' can be used to access the PRoot system employing a user account : command '$STARTBIN help' has more information :  \\\" && exit\" \"\nif [ -x /usr/bin/youtube-dl ]\nthen\nyoutube-dl \\\"\\${ARGS[@]}\\\"\nelse\npc youtube-dl  || pci youtube-dl\nyoutube-dl \\\"\\${ARGS[@]}\\\"\nfi\n\" \"## $INSTALLDIR$TMXRCHBNDR/yt FE\" >> \"$TMXRCHBNDS\"/yt\nchmod 755 \"$TMXRCHBNDS\"/yt\n}\n\n_DOMODdotfiles_() {\n# Are you familiar with metacarpals syndrome?  Metacarpals can flare from vibrations.  To disable the silent bell feature replace the contents of this function with a colon (:) as in this example:\n# \t_DOMODexample_() {\n# \t\t:\n# \t}\n_MODdotfile_() {\n_MODdotfNF_() {\nprintf \"\\\\e[0;33mline %s can not be found in %s file \\\\e[0;34m: adding line %s to %s file \\\\e[0m\\\\n\" \"'$MODFILEADD'\" \"/${INSTALLDIR##*/}/root/$MODFILENAME\" \"'$MODFILEADD'\" \"/${INSTALLDIR##*/}/root/$MODFILENAME\"\nprintf \"%s\\\\n\" \"$MODFILEADD\" >> \"$INSTALLDIR/root/$MODFILENAME\"\n}\n# add MODFILEADD to file /root/MODFILENAME\n{ [[ -f \"$INSTALLDIR/root/$MODFILENAME\" ]] && { _DOTHRF_ \"root/$MODFILENAME\" && ! grep -q \"$MODFILEADD\" \"$INSTALLDIR/root/$MODFILENAME\" && _MODdotfNF_ || printf \"\\\\e[0;34mline %s found in %s file\\\\e[0m\\\\n\" \"'$MODFILEADD'\" \"/${INSTALLDIR##*/}/root/$MODFILENAME\" ; } ; } || _MODdotfNF_\n}\n# add (setq visible-bell 1) to file /root/.emacs\nMODFILENAME=\".emacs\"\nMODFILEADD='(setq visible-bell 1)'\n_MODdotfile_\n# add set belloff=all to file /root/.vimrc\nMODFILENAME=\".vimrc\"\nMODFILEADD='set belloff=all'\n_MODdotfile_\n}\n\n_PREPMOTS_() {\nif [[ \"$ARCTEVAR\" = \"$CPUABIX8664\" ]]\nthen\nMOTTECBBS=\"BBS: bbs.archlinux.org\"\nMOTTECGIT=\"github.com/archlinux\"\nMOTTECIRC=\"wiki.archlinux.org/index.php/IRC_channel\"\nelif [[ \"$ARCTEVAR\" = \"$CPUABIX86\" ]]\nthen\nMOTTECBBS=\"BBS:\tbbs.archlinux32.org\"\nMOTTECGIT=\"github.com/archlinux32\"\nMOTTECIRC=\"wiki.archlinux32.org\"\nelse\nMOTTECBBS=\"\"\nMOTTECGIT=\"github.com/archlinuxarm\"\nMOTTECIRC=\"archlinuxarm.org/about/contact\"\nfi\n}\n\n_PREPPACMANCONF_() {\n[ -f \"$INSTALLDIR\"/run/lock/\"${INSTALLDIR##*/}\"/pacman.conf.lock ] || {\n[ -f \"$INSTALLDIR\"/etc/pacman.conf ] && { sed -i 's/^CheckSpace/\\#CheckSpace/g' \"$INSTALLDIR/etc/pacman.conf\" && sed -i 's/^#Color/Color/g' \"$INSTALLDIR/etc/pacman.conf\" && :>\"$INSTALLDIR\"/run/lock/\"${INSTALLDIR##*/}\"/pacman.conf.lock ; } ; }\n}\n# archlinuxconfig.bash FE\n"
        },
        {
          "name": "docs",
          "type": "commit",
          "content": null
        },
        {
          "name": "espritfunctions.bash",
          "type": "blob",
          "size": 13.7392578125,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n\n_MRCOUNTRIESx86_() {\nMRCOUNTRIESx86=(\"Belarus\" \"France\" \"Germany\" \"Greece\" \"Russia\" \"Switzerland\" \"United States\")\n}\n\n_MRCOUNTRIESx86_64_() {\nMRCOUNTRIESx86_64=(\"Worldwide\" \"Australia\" \"Austria\" \"Bangladesh\" \"Belarus\" \"Belgium\" \"Bosnia and Herzegovina\" \"Brazil\" \"Bulgaria\" \"Canada\" \"Chile\" \"China\" \"Colombia\" \"Croatia\" \"Czechia\" \"Denmark\" \"Ecuador\" \"Finland\" \"France\" \"Georgia\" \"Germany\" \"Greece\" \"Hong Kong\" \"Hungary\" \"Iceland\" \"India\" \"Indonesia\" \"Iran\" \"Ireland\" \"Israel\" \"Italy\" \"Japan\" \"Kazakhstan\" \"Kenya\" \"Latvia\" \"Lithuania\" \"Luxembourg\" \"Moldova\" \"Netherlands\" \"New Caledonia\" \"New Zealand\" \"North Macedonia\" \"Norway\" \"Pakistan\" \"Paraguay\" \"Philippines\" \"Poland\" \"Portugal\" \"Romania\" \"Russia\" \"Serbia\" \"Singapore\" \"Slovakia\" \"Slovenia\" \"South Africa\" \"South Korea\" \"Spain\" \"Sweden\" \"Switzerland\" \"Taiwan\" \"Thailand\" \"Turkey\" \"Ukraine\" \"United Kingdom\" \"United States\" \"Vietnam\")\n}\n\n_BLOOM_() { # Bloom = 'setupTermuxArch manual verbose'\n[[ -d \"$HOME\"/TermuxArchBloom ]] && _RMBLOOMQ_\nmkdir -p \"$HOME\"/TermuxArchBloom\ncp {LICENSE,archlinuxconfig.bash,espritfunctions.bash,fbindsfunctions.bash,getimagefunctions.bash,initkeyfunctions.bash,knownconfigurations.bash,maintenanceroutines.bash,necessaryfunctions.bash,setupTermuxArch,printoutstatements.bash} \"$HOME\"/TermuxArchBloom\ncd \"$HOME\"/TermuxArchBloom || exit 69\nprintf \"\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[0m 📲\\\\n\\\\n\" \"TermuxArch Bloom option via \" \"setupTermuxArch bloom\"\nls -agl\nprintf \"\\\\n\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[1;34m.  \" \"Use \" \"cd ~/TermuxArchBloom\" \" to continue.  Edit any of these files;  Then use \" \"bash ${0##*/} [options]\" \" to run the files in \" \"~/TermuxArchBloom\"\nif [ \"$ELCR\" = 0 ]\nthen\n{ [[ -d \"$INSTALLDIR\" ]] && [[ -d \"$INSTALLDIR\"/root/bin ]] && [[ -d \"$INSTALLDIR\"/var/binds ]] && [[ -f \"$INSTALLDIR\"/bin/we ]] && [[ -f \"$INSTALLDIR\"/usr/bin/env ]] ; } && printf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;32m%s.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ NOTICE!  \" \"The root directory structure of ~/${INSTALLDIR##*/} appears correct; Cannot continue '${0##*/} $ARGS' to create the directory skeleton!  \" \"Command '${0##*/} bloom customdir' can be appended with customdir.  The command '${0##*/} bloom customdir' can continue building the skeleton structure.  The commands '${0##*/} re[fresh]' will update the TermuxArch files in '~/${INSTALLDIR##*/}' to the most recent version.  Commands '${0##*/} h[e[lp]]' and '$STARTBIN h[elp]' have more information\" && exit\n## Create ~/TermuxArchBloom directory and Arch Linux in Termux PRoot root directory skeleton.\n_PREPTERMUXARCH_\n_NAMESTARTARCH_\n_SPACEINFO_\n_PREPINSTALLDIR_\ntree 2>/dev/null || find . -type f -print | sed 's@.*/@@' | sort\nfi\nexit\n}\n\n_EDITFILES_() {\nif [[ \"$USEREDIT\" = \"vi\" ]]\nthen\nsed -i -e 1,4d \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch vi instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# 17j then i opens edit mode for the Geo-IP mirror.\\n# Enter the # hash/num/pounds symbol to comment it out: \\n# Server = http://mirror.archlinuxarm.org/$arch/$repo.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap ESC to return to command mode in vi.\\n# CTRL+d and CTRL+b to find your local mirror.\\n# / for search, N and n for next match.\\n# Tap x to delete # to uncomment your local mirror.\\n# Choose only one mirror.  Use;x to save your work.\\n# Comment out the Geo-IP mirror\tend G\ttop gg\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #' \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch vi instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# Tap i for insert, ESC to return to command mode in vi.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap x to delete # to uncomment your favorite language(s).\\n# Enter the # hash/num/pounds symbol to comment out locales.\\n# CTRL+d and CTRL+b for PGUP & PGDN.\\n# top gg\tbottom G\\n# / for search, N and n for next match.\\n# Choose as many as you like.  Use;x to save your work.\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n#' \"$INSTALLDIR\"/etc/locale.gen\nelif [[ \"$USEREDIT\" = \"vim\" ]]\nthen\nsed -i -e 1,4d \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch vim instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# 17j then i opens edit mode for the Geo-IP mirror.\\n# Enter the # hash/num/pounds symbol to comment it out: \\n# Server = http://mirror.archlinuxarm.org/$arch/$repo.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap ESC to return to command mode in vi.\\n# CTRL+d and CTRL+b to find your local mirror.\\n# / for search, N and n for next match.\\n# Tap x to delete # to uncomment your local mirror.\\n# Choose only one mirror.  Use;x to save your work.\\n# Please comment out only one Geo-IP mirror\tend G\ttop gg\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #' \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch vim instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# Tap i for insert, ESC to return to command mode in vi.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap x to delete # to uncomment your favorite language(s).\\n# Enter the # hash/num/pounds symbol to comment out locales.\\n# CTRL+d and CTRL+b for PGUP & PGDN.\\n# top gg\tbottom G\\n# / for search, N and n for next match.\\n# Choose as many as you like.  Use;x to save your work.\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n#' \"$INSTALLDIR\"/etc/locale.gen\nelif [[ \"$USEREDIT\" = \"nvim\" ]]\nthen\nsed -i -e 1,4d \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch neovim instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# 17j then i opens edit mode for the Geo-IP mirror.\\n# Enter the # hash/num/pounds symbol to comment it out: \\n# Server = http://mirror.archlinuxarm.org/$arch/$repo.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap ESC to return to command mode in vi.\\n# CTRL+d and CTRL+b to find your local mirror.\\n# / for search, N and n for next match.\\n# Tap x to delete # to uncomment your local mirror.\\n# Choose only one mirror.  Use;x to save your work.\\n# Comment out the Geo-IP mirror\tend G\ttop gg\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #' \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch neovim instructions:\tCTR+r is redo.\\n# Use the hjkl keys to navigate. <h down j up k l>\\n# Numbers are multipliers.  The u is undelete/undo.\\n# Tap i for insert, ESC to return to command mode in vi.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Tap x to delete # to uncomment your favorite language(s).\\n# Enter the # hash/num/pounds symbol to comment out locales.\\n# CTRL+d and CTRL+b for PGUP & PGDN.\\n# top gg\tbottom G\\n# / for search, N and n for next match.\\n# Choose as many as you like.  Use;x to save your work.\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n#' \"$INSTALLDIR\"/etc/locale.gen\nelse\nsed -i '1i# # # # # # # # # # # # # # # # # # # # # # # # # # #\\n# TermuxArch edit instructions:\t Locate the Geo-IP mirror.\\n# Enter the # hash/num/pounds symbol to comment it out: \\n# Server = http://mirror.archlinuxarm.org/$arch/$repo.\\n# Long tap KEYBOARD in the side pane to see ESC, CTR...\\n# Choose only one mirror.\\n# Delete # to uncomment your local mirror.\\n# # # # # # # # # # # # # # # # # # # # # # # # # # #' \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nfi\n}\n\n_EDITORS_() {\n# populate array of all available Termux editors\nAEDS=(\"emacs\" \"joe\" \"jupp\" \"nano\" \"ne\" \"nvim\" \"micro\" \"vi\" \"vim\" \"zile\")\nfor OEAEDS in ${!AEDS[@]}\ndo\nif [[ -e \"$PREFIX/bin/${AEDS[$OEAEDS]}\" ]]\t# if editor is found\nthen\t# add editor to USEREDTR\nUSEREDTR+=(\"${AEDS[$OEAEDS]}\")\nfi\ndone\nfor i in \"${!USEREDTR[@]}\"\ndo\n_EDQ_\nif [[ \"$EINDEX\" = 1 ]]\nthen\nbreak\nfi\ndone\n}\n\n_EDQ_() {\nprintf \"\\\\e[0;32m\"\nfor EDQINDEX in \"${USEREDTR[@]}\"\ndo\nif [[ \"$EDQINDEX\" = \"vi\" ]]\nthen\n_EDQ2_\nEINDEX=1\nbreak\nfi\n_EDQA_ \"$USEREDTR\"\nif [[ \"$EINDEX\" = 1 ]]\nthen\nbreak\nfi\ndone\n}\n\n_EDQA_() {\nUSEREDIT=\"${USEREDTR[$i]}\"\nEINDEX=1\n}\n\n_EDQAQUESTION_() {\nwhile true\ndo\nprintf \"\\\\n\"\nif [[ \"$OPT\" = BLOOM ]] || [[ \"$OPT\" = MANUAL ]]\nthen\nprintf \"The following editor(s) %s\\\\b\\\\b are present.  Would you like to use '\\\\e[1;32m%s\\\\e[0;32m' to edit '\\\\e[1;32msetupTermuxArchConfigs.bash\\\\e[0;32m'?  \" \"$USEREDTR\" \"${USEREDTR[$i]}\"\nread -n 1 -p \"Answer yes or no [Y|n]. \"  yn\nelse\nprintf \"Change the worldwide mirror to a mirror that is geographically nearby.  Please choose only ONE active mirror in the mirrors file that you are about to edit.  The following editor(s) \\\\b\\\\b are present.  Would you like to use '\\\\e[1;32m%s\\\\e[0;32m' to edit the Arch Linux configuration files?  \" \"$USEREDTR\" \"${USEREDTR[$i]}\"\nread -n 1 -p \"Answer yes or no [Y|n]. \"  yn\nfi\nif [[ \"$YN\" = [Yy]* ]] || [[ \"$YN\" = \"\" ]]\nthen\nUSEREDIT=\"${USEREDTR[$i]}\"\nEINDEX=1\nbreak\nelif [[ \"$YN\" = [Nn]* ]]\nthen\nbreak\nelse\nprintf \"\\\\nYou answered \\\\e[1;36m%s\\\\e[1;32m.\\\\n\" \"$YN\"\nprintf \"\\\\nAnswer yes or no [Y|n].  \\\\n\"\nfi\ndone\n}\n\n_EDQ2_() {\nwhile true\ndo\nif [[ \"$OPT\" = BLOOM ]] || [[ \"$OPT\" = MANUAL ]]\nthen\nprintf \"\\\\n\\\\e[1;34m  Would you like to use \\\\e[1;32mnano\\\\e[1;34m or \\\\e[1;32mvi\\\\e[1;34m to edit \\\\e[1;32msetupTermuxArchConfigs.bash\\\\e[1;34m?  \"\nread -n 1 -p \"Answer nano or vi [n|V]? \"  nv\nelse\nprintf \"\\\\e[1;34m  Change the worldwide mirror to a mirror  that is geographically nearby.  Choose only ONE active mirror   in the mirror    file that you are about to edit.  Would you like to use \\\\e[1;32mnano\\\\e[1;34m or \\\\e[1;32mvi\\\\e[1;34m to edit the Arch Linux configuration files?  \"\nread -n 1 -p \"Answer nano or vi [n|V]? \"  nv\nfi\nif [[ \"$NV\" = [Nn]* ]]\nthen\nUSEREDIT=nano\n_NANOIF_\nEINDEX=1\nbreak\nelif [[ \"$NV\" = [Vv]* ]] || [[ \"$NV\" = \"\" ]]\nthen\nUSEREDIT=\"vi\"\nEINDEX=1\nbreak\nelse\nprintf \"\\\\nYou answered \\\\e[36;1m%s\\\\e[1;32m.\\\\n\\\\nAnswer nano or vi [n|v].  \\\\n\" \"$NV\"\nfi\ndone\nprintf \"\\\\n\"\n}\n\n_NANOIF_() {\nif [ ! -x \"$PREFIX\"/bin/nano ]\nthen\napt -o APT::Keep-Downloaded-Packages=\"true\" install \"nano\" -y\nif [ ! -x \"$PREFIX\"/bin/nano ]\nthen\nprintf \"\\\\n\\\\e[7;1;31m%s\\\\e[0;1;32m %s\\\\n\\\\n\\\\e[0m\" \"PREREQUISITE EXCEPTION!\" \"RUN ${0##*/} $ARGS AGAIN...\"\nprintf \"\\\\e]2;%s %s\\\\007\" \"RUN ${0##*/} $ARGS\" \"AGAIN...\"\nexit\nfi\nfi\n}\n\n_RMBLOOMQ_() {\nif [[ -d \"$HOME\"/TermuxArchBloom ]]\nthen\nprintf \"\\\\n\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m%s\\\\e[1;30m%s\\\\e[0;33m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ  \" \"DIRECTORY NOTICE!  ~/${INSTALLDIR##*}TermuxArchBloom \" \"directory detected;  \" \"setupTermuxArch bloom\" \" will continue.\"\nwhile true\ndo\nprintf \"\\\\n\\\\e[1;30m\"\nread -n 1 -p \"Refresh $HOME/TermuxArchBloom? [Y|n] \" RBUANSWER\nif [[ \"$RBUANSWER\" = [Ee]* ]] || [[ \"$RBUANSWER\" = [Nn]* ]] || [[ \"$RBUANSWER\" = [Qq]* ]]\nthen\nprintf \"\\\\n\"\nexit $?\nelif [[ \"$RBUANSWER\" = [Yy]* ]] || [[ \"$RBUANSWER\" = \"\" ]]\nthen\nprintf \"\\\\e[30m%s\\\\n\" \"Uninstalling $HOME/TermuxArchBloom...\"\nif [[ -d \"$HOME\"/TermuxArchBloom ]]\nthen\nrm -rf \"$HOME\"/TermuxArchBloom\nfi\nprintf \"%s\\\\n\\\\n\" \"Uninstalling $HOME/TermuxArchBloom done.\"\nbreak\nelse\nprintf \"\\\\n%s\\\\e[33;1m%s\\\\e[30m.\\\\n\\\\nAnswer \\\\e[32mYes\\\\e[30m or \\\\e[1;31mNo\\\\e[30m. [\\\\e[32mY\\\\e[30m|\\\\e[1;31mn\\\\e[30m]\\\\n\" \"You answered \" \"$RBUANSWER\"\nfi\ndone\nfi\n}\n\n_TASPINNER_() {\t# print spinner; derivation based on https://github.com/ringohub/sh-spinner and https://github.com/vozdev/termux-setup\nINCREMNT=1\nif [[ -z \"${1:-}\" ]]\nthen\nSPINNERL=\"⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏\"\nelif [[ \"${1//-}\" = clock ]]\nthen\nSPINNERL=\"🕛🕐🕑🕓🕔🕕🕖🕗🕘🕙🕚\"\nelif [[ \"${1//-}\" = moon ]]\nthen\nSPINNERL=\"🌑🌒🌓🌔🌕🌖🌗🌘\"\nfi\nSPINDLAY=\"0.$(shuf -i 4-8 -n 1)\"\nprintf \"\\\\e[?25l\"\nwhile :\ndo\nprintf \"  \\\\b\\\\b\\\\b%s\\\\b\" \"${SPINNERL:INCREMNT++%${#SPINNERL}:1}\"\nsleep \"$SPINDLAY\"\ndone\n}\n\n_TAMATRIX_() {\t# partial implemintation; print TermuxArch source code as matrix\n_DOTAMSTRIX_() {\nprintf \"\\\\e[?25l\\\\e[1;32m%s\" \"$(tr -d '\\n' < \"$0\")\"\n# split a string from file and print this split string\nfor EMSTRING in \"${TAMATARR[@]}\"\ndo\nprintf \"\\\\e[0;32m%s\" \"$EMSTRING\"\nsleep 0.0\"$(shuf -i 0-999 -n 1)\"\ndone\n}\nIFS=';' read -ra TAMATARR <<< \"$(tr -d '\\n' < \"$0\")\"\nif [[ -n \"${MATRIXLCR:-}\" ]]\nthen\nTAMATRIXENDLCR=0\nwhile :\ndo\n_DOTAMSTRIX_\ndone\nelse\n_DOTAMSTRIX_\nfi\ncat \"$0\"\n_TAMATRIXEND_\n}\n\n_TAMATRIXEND_() {\t# print 'setupTermuxArch mat[rix]' ending\n. \"$0\" h\ntail -n 18 \"$0\"\n. \"$0\" help\nprintf \"\\\\e[1;32mPlease run 'bash %s' again at a later time.  Also think about opening an issue and a pull request in order to enhance this feature;  Thank you for using '%s', and please enjoy using Linux on device!  \" \"${0##*/} $ARGS\" \"${0##*/} $ARGS\"\nexit\n}\n\n_WAKELOCK_() {\n_PRINTWLA_\nam startservice --user 0 -a com.termux.service_wake_lock com.termux/com.termux.app.TermuxService > /dev/null || _PSGI1ESTRING_ \"am startservice _WAKELOCK_ necessaryfunctions.bash ${0##/*}; Continuing...\"\n_PRINTDONE_\n}\n\n_WAKEUNLOCK_() {\n_PRINTWLD_\nam startservice --user 0 -a com.termux.service_wake_unlock com.termux/com.termux.app.TermuxService > /dev/null || _PSGI1ESTRING_ \"am startservice _WAKEUNLOCK_ necessaryfunctions.bash ${0##/*}; Continuing...\"\n_PRINTDONE_\n}\n# espritfunctions.bash FE\n"
        },
        {
          "name": "fbindsfunctions.bash",
          "type": "blob",
          "size": 12.0712890625,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n_ADDinitfbinds_() {\nFBINDFUNCS=(\n_ADDfbindkvm_\n_ADDfbindprocpcidevices_\n_ADDfbindprocshmem_\n_ADDfbindprocuptime_\n_ADDfbindprocstat_\n_ADDfbindprocversion_\n_ADDbindprocloadavg_\n_ADDbindprocvmstat_\n_ADDfbindsysdevices_\n)\nfor FBINDFUNC in \"${FBINDFUNCS[@]}\"\ndo\n\"$FBINDFUNC\"\ndone\n}\n\n_ADDfbindprocpcidevices_() {\n:>var/binds/fbindprocpcidevices\n}\n\n_ADDfbindprocshmem_() {\nprintf \"%s\\\\n\" \"------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages\n\n------ Shared Memory Segments --------\nkey        shmid      owner      perms      bytes      nattch     status\n\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems\" > var/binds/fbindprocshmem\n}\n\n_ADDfbindprocstat_() {\nNESSOR=\"$(grep cessor /proc/cpuinfo)\"\nNCESSOR=\"${NESSOR: -2}\"\nif [ \"$NCESSOR\"  -le 3 ]\nthen\n_ADDfbindprocstat4_\nelif [ \"$NCESSOR\"  -le 5 ]\nthen\n_ADDfbindprocstat6_\nelse\n_ADDfbindprocstat8_\nfi\n}\n\n_ADDfbindprocstat4_() {\nprintf \"%s\\\\n\" \"cpu  4232003 351921 6702657 254559583 519846 1828 215588 0 0 0\ncpu0 1595013 127789 2759942 61446568 310224 1132 92124 0 0 0\ncpu1 1348297 91900 1908179 63099166 110243 334 78861 0 0 0\ncpu2 780526 73446 1142504 64682755 61240 222 32586 0 0 0\ncpu3 508167 58786 892032 65331094 38139 140 12017 0 0 0\nintr 182663754 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23506963 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13479102 0 0 0 0 0 0 0 108 0 0 0 0 0 0 0 0 0 178219 72133 5 0 1486834 0 0 0 8586048 0 0 0 0 0 0 0 0 0 0 2254 0 0 0 0 29 3 7501 38210 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4610975 0 0 0 0 0 1 0 78471 0 0 0 0 0 0 0 0 0 0 0 0 0 0 305883 0 15420 0 3956500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8937474 0 943938 0 0 0 0 0 0 0 0 0 0 0 0 12923 0 0 0 34931 5 0 2922124 848989 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12502497 0 0 3270275 0 0 0 0 0 0 0 0 0 0 0 1002881 0 0 0 0 0 0 17842 0 44011 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1975390 0 0 0 0 0 0 0 0 0 0 0 0 4968 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1340 2 762 0 0 0 50 42 0 27 82 0 0 0 0 14 28 0 0 0 0 14277 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1974794 0 142 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 367 81\nctxt $(shuf -n 1 -i 465697-473465697)\nbtime $BINDPROCUPTIM0\nprocesses $(shuf -n 1 -i 32-32768)\nprocs_running 3\nprocs_blocked 0\nsoftirq 71223290 12005 18257219 222294 2975533 4317 4317 7683319 19799901 40540 22223845\" > var/binds/fbindprocstat\n}\n\n_ADDfbindprocstat6_() {\nprintf \"%s\\\\n\" \"cpu  148928556 146012 6648853 2086709554 4518337 0 1314039 293017 0 0\ncpu0 24948069 38092 1137251 347724817 1169568 0 30231 21138 0 0\ncpu1 16545576 29411 890111 356315677 971747 0 41593 115368 0 0\ncpu2 82009143 11955 2705377 286616379 473751 0 1239704 114343 0 0\ncpu3 9487436 29342 673090 364602319 631633 0 843 11690 0 0\ncpu4 6696319 23709 584149 367425424 501898 0 890 12546 0 0\ncpu5 9242011 13500 658872 364024935 769737 0 775 17929 0 0\nintr 3438098651 134 26 0 0 0 0 3 0 0 0 0 581717 74 0 0 3669554 0 0 0 0 0 0 0 0 0 150777509 19 0 843288252 7923 0 0 0 256 0 4 0 13323712 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\nctxt $(shuf -n 1 -i 789017-1109789017)\nbtime $BINDPROCUPTIM0\nprocesses $(shuf -n 1 -i 32-32768)\nprocs_running 5\nprocs_blocked 0\nsoftirq 3644958646 1 2007831497 2340 995352344 1834998 0 97563 249921452 0 389918451\" > var/binds/fbindprocstat\n}\n\n_ADDfbindprocstat8_() {\nprintf \"%s\\\\n\" \"cpu  10278859 1073916 12849197 97940412 70467 2636 323477 0 0 0\ncpu0 573749 46423 332546 120133 32 79 5615 0 0 0\ncpu1 489409 40445 325756 64094 0 59 5227 0 0 0\ncpu2 385758 36997 257949 50488114 40123 39 4021 0 0 0\ncpu3 343254 34729 227718 47025740 30205 20 2566 0 0 0\ncpu4 3063160 288232 4291656 58418 27 940 146236 0 0 0\ncpu5 2418517 277690 3105779 60431 48 751 67052 0 0 0\ncpu6 1671400 189460 2302016 61521 23 402 49717 0 0 0\ncpu7 1333612 159940 2005777 61961 9 346 43043 0 0 0\nintr 607306752 0 0 113 0 109 0 0 26 0 0 4 0 0 0 0 0 0 0 0 0 67750564 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 51073258 0 0 0 0 0 0 0 160 0 0 0 0 0 0 0 0 0 51831 2 5 0 24598 0 0 0 15239501 0 0 0 0 0 0 0 0 0 0 1125885 0 0 0 0 5966 3216 120 2 0 0 5990 0 24741 0 37 0 0 0 0 0 0 0 0 0 0 0 0 15262980 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 42742 16829690 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19844763 0 8873762 0 0 0 0 0 0 0 0 6 0 0 0 49937 0 0 0 2768306 5 0 3364052 3755518 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 41435584 0 0 3939101 0 0 0 0 0 0 0 0 0 0 0 1894201 0 0 0 0 0 0 864195 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8961077 3996222 0 0 0 0 0 0 0 0 0 0 0 0 66386 0 0 0 0 0 0 87497 0 285431 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11217187 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3578 0 0 0 0 0 301 300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 117 14 0 0 0 0 0 95 0 0 0 0 0 0 0 27 0 2394 0 0 0 0 62 0 0 0 0 0 857124 0 1 0 0 0 0 20 3990685 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5021 481 4\nctxt $(shuf -n 1 -i 9697753-1589697753)\nbtime $BINDPROCUPTIM0\nprocesses $(shuf -n 1 -i 64-4194304)\nprocs_running 7\nprocs_blocked 0\nsoftirq 204699421 2536598 39636497 522981 4632002 29263706 104522 6736991 41332715 232221 79701188\" > var/binds/fbindprocstat\n}\n\n_ADDfbindprocuptime_() {\nINVNUM=\"$(shuf -n 1 -i 0-1)\"\nDIVNUM=\"$(shuf -n 1 -i 0-1)\"\n[ \"$INVNUM\" = 0 ] && ADDSUB=\"-\" || ADDSUB=\"+\"\n[ \"$DIVNUM\" = 0 ] && DIVISOR=\" / 2\" || DIVISOR=\"\"\nBINDPROCUPTIM2=\"$(shuf -n 1 -i 10000-33333)\"\nBINDPROCUPTIM0=\"$(((BINDPROCUPTIM2 * 3)$DIVISOR))\"\nBINDPROCUPTIM1=\"$(shuf -n 1 -i 33-66)\"\nBINDPROCUPTIM3=\"$((BINDPROCUPTIM1 $ADDSUB $(shuf -n 1 -i 0-33)))\"\nprintf \"%s.%02d %s.%02d\\\\n\" \"$BINDPROCUPTIM0\" \"$BINDPROCUPTIM1\" \"$BINDPROCUPTIM2\" \"$BINDPROCUPTIM3\" > var/binds/fbindprocuptime\n}\n\n_ADDfbindprocversion_() {\nprintf \"%s\\\\n\" \"Linux version $UNAMER (root@localhost) (gcc version $UNAMER (prerelease) (GCC) ) #1 SMP PREEMPT $(date +%a\" \"%b\" \"%d\" \"%X\" UTC \"%Y)\" > var/binds/fbindprocversion\n}\n\n_ADDbindexample.prs_() {\n_CFLHDRS_ var/binds/bindexample.prs \"# Before regenerating the start script with \\`setupTermuxArch re[fresh]\\`, first copy this file to another name such as \\`fbinds.prs\\`.  Then add as many proot statements as you want; The init script will parse file \\`fbinds.prs\\` at refresh adding these proot options to \\`$STARTBIN\\`.  The space before the last double quote is necessary.  Examples are included for convenience:\"\nprintf \"%s\\\\n\" \"## PRoot bind usage: PROOTSTMNT+=\\\"-b host_path:guest_path \\\"\n## PROOTSTMNT+=\\\"-q $PREFIX/bin/${COMMS:-qemu-x86_64} \\\"\n## PROOTSTMNT+=\\\"-b /proc:/proc \\\"\n## [ -r /dev/shm ] || PROOTSTMNT+=\\\"-b $INSTALLDIR/tmp:/dev/shm \\\"\n## ~/${INSTALLDIR##*/}$TMXRCHBNDR/bindexample.prs FE\" >> var/binds/bindexample.prs\n}\n\n_ADDfbindkvm_() {\n:>var/binds/fbindkvm\nchmod 666 var/binds/fbindkvm\n}\n\n_ADDbindprocloadavg_() {\nprintf \"%s\" \"0.$(shuf -n 1 -i 48-64) 0.$(shuf -n 1 -i 32-48) 0.$(shuf -n 1 -i 24-32) 1/$(shuf -n 1 -i 128-1024) $(shuf -n 1 -i 333333-999999)\n\" > var/binds/fbindprocloadavg\n}\n\n_ADDbindprocvmstat_() {\nprintf \"%s\\\\n\" \"nr_free_pages $(shuf -n 1 -i 9216-18432)\nnr_zone_inactive_anon 196744\nnr_zone_active_anon 301503\nnr_zone_inactive_file 2457066\nnr_zone_active_file 729742\nnr_zone_unevictable 164\nnr_zone_write_pending 8\nnr_mlock 34\nnr_page_table_pages 6925\nnr_kernel_stack 13216\nnr_bounce 0\nnr_zspages 0\nnr_free_cma 0\nnuma_hit 672391199\nnuma_miss 0\nnuma_foreign 0\nnuma_interleave 62816\nnuma_local 672391199\nnuma_other 0\nnr_inactive_anon 196744\nnr_active_anon 301503\nnr_inactive_file 2457066\nnr_active_file 729742\nnr_unevictable 164\nnr_slab_reclaimable 132891\nnr_slab_unreclaimable 38582\nnr_isolated_anon 0\nnr_isolated_file 0\nworkingset_nodes 25623\nworkingset_refault 46689297\nworkingset_activate 4043141\nworkingset_restore 413848\nworkingset_nodereclaim 35082\nnr_anon_pages 599893\nnr_mapped 136339\nnr_file_pages 3086333\nnr_dirty 8\nnr_writeback 0\nnr_writeback_temp 0\nnr_shmem 13743\nnr_shmem_hugepages 0\nnr_shmem_pmdmapped 0\nnr_file_hugepages 0\nnr_file_pmdmapped 0\nnr_anon_transparent_hugepages 57\nnr_unstable 0\nnr_vmscan_write 57250\nnr_vmscan_immediate_reclaim 2673\nnr_dirtied 79585373\nnr_written 72662315\nnr_kernel_misc_reclaimable 0\nnr_dirty_threshold 657954\nnr_dirty_background_threshold 328575\npgpgin 372097889\npgpgout 296950969\npswpin 14675\npswpout 59294\npgalloc_dma 4\npgalloc_dma32 101793210\npgalloc_normal 614157703\npgalloc_movable 0\nallocstall_dma 0\nallocstall_dma32 0\nallocstall_normal 184\nallocstall_movable 239\npgskip_dma 0\npgskip_dma32 0\npgskip_normal 0\npgskip_movable 0\npgfree 716918803\npgactivate 68768195\npgdeactivate 7278211\npglazyfree 1398441\npgfault 491284262\npgmajfault 86567\npglazyfreed 1000581\npgrefill 7551461\npgsteal_kswapd 130545619\npgsteal_direct 205772\npgscan_kswapd 131219641\npgscan_direct 207173\npgscan_direct_throttle 0\nzone_reclaim_failed 0\npginodesteal 8055\nslabs_scanned 9977903\nkswapd_inodesteal 13337022\nkswapd_low_wmark_hit_quickly 33796\nkswapd_high_wmark_hit_quickly 3948\npageoutrun 43580\npgrotated 200299\ndrop_pagecache 0\ndrop_slab 0\noom_kill 0\nnuma_pte_updates 0\nnuma_huge_pte_updates 0\nnuma_hint_faults 0\nnuma_hint_faults_local 0\nnuma_pages_migrated 0\npgmigrate_success 768502\npgmigrate_fail 1670\ncompact_migrate_scanned 1288646\ncompact_free_scanned 44388226\ncompact_isolated 1575815\ncompact_stall 863\ncompact_fail 392\ncompact_success 471\ncompact_daemon_wake 975\ncompact_daemon_migrate_scanned 613634\ncompact_daemon_free_scanned 26884944\nhtlb_buddy_alloc_success 0\nhtlb_buddy_alloc_fail 0\nunevictable_pgs_culled 258910\nunevictable_pgs_scanned 3690\nunevictable_pgs_rescued 200643\nunevictable_pgs_mlocked 199204\nunevictable_pgs_munlocked 199164\nunevictable_pgs_cleared 6\nunevictable_pgs_stranded 6\nthp_fault_alloc 10655\nthp_fault_fallback 130\nthp_collapse_alloc 655\nthp_collapse_alloc_failed 50\nthp_file_alloc 0\nthp_file_mapped 0\nthp_split_page 612\nthp_split_page_failed 0\nthp_deferred_split_page 11238\nthp_split_pmd 632\nthp_split_pud 0\nthp_zero_page_alloc 2\nthp_zero_page_alloc_failed 0\nthp_swpout 4\nthp_swpout_fallback 0\nballoon_inflate 0\nballoon_deflate 0\nballoon_migrate 0\nswap_ra 9661\nswap_ra_hit 7872\" > var/binds/fbindprocvmstat\n}\n\n_ADDfbindsysdevices_() {\n:>var/binds/fbindsysdevices\nchmod 666 var/binds/fbindsysdevices\n}\n# fbindsfunctions.bash FE\n"
        },
        {
          "name": "gen",
          "type": "commit",
          "content": null
        },
        {
          "name": "getimagefunctions.bash",
          "type": "blob",
          "size": 3.9365234375,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n_FTCHIT_() {\n_PRINT_DOWNLOADING_FTCHIT_\nif [[ \"$DM\" = aria2 ]]\nthen\naria2c --continue -Z http://\"$CMIRROR/$RPATH/$IFILE\".md5 http://\"$CMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = axel ]]\nthen\naxel -a --no-clobber http://\"$CMIRROR/$RPATH/$IFILE\".md5 ||:\naxel -a --no-clobber http://\"$CMIRROR/$RPATH/$IFILE\" ||:\nelif [[ \"$DM\" = lftp ]]\nthen\nlftpget -c http://\"$CMIRROR/$RPATH/$IFILE\".md5 http://\"$CMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = wget ]]\nthen\nwget \"$DMVERBOSE\" --continue --show-progress -N http://\"$CMIRROR/$RPATH/$IFILE\".md5 http://\"$CMIRROR/$RPATH/$IFILE\"\nelse\ncurl \"$DMVERBOSE\" -C - --fail --retry 4 -OL {\"http://$CMIRROR/$RPATH/$IFILE.md5,http://$CMIRROR/$RPATH/$IFILE\"}\nfi\n}\n\n_FTCHSTND_() {\nFSTND=1\n_PRINTCONTACTING_\nif [[ \"$DM\" = aria2 ]]\nthen\naria2c http://\"$CMIRROR\" 1>\"$TMPDIR/global2localmirror\"\nNLCMIRROR=\"$(grep Redirecting \"$TMPDIR/global2localmirror\" | awk {'print $8'})\"\n_PRINTDONE_\n_PRINTDOWNLOADINGFTCH_\naria2c --continue -m 4 -Z \"$NLCMIRROR/$RPATH/$IFILE\".md5 \"$NLCMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = axel ]]\nthen\naxel -vv http://\"$CMIRROR\" 1 > \"$TMPDIR/global2localmirror\"\nNLCMIRR=\"$(grep downloading \"$TMPDIR/global2localmirror\" | awk {'print $5'})\"\nNLCMIRROR=\"${NLCMIRR::-3}\"\n_PRINTDONE_\n_PRINTDOWNLOADINGFTCH_\naxel -a --no-clobber http://\"$NLCMIRROR/$RPATH/$IFILE\".md5 ||:\naxel -a --no-clobber http://\"$NLCMIRROR/$RPATH/$IFILE\" ||:\nelif [[ \"$DM\" = lftp ]]\nthen\nlftp -e get http://\"$CMIRROR\" 2>&1 | tee>\"$TMPDIR/global2localmirror\"\nNLCMI=\"$(grep direct \"$TMPDIR/global2localmirror\" | awk {'print $5'})\"\nNLCMIRR=\"${NLCMI//\\`}\"\nNLCMIRROR=\"${NLCMIRR//\\'}\"\n_PRINTDONE_\n_PRINTDOWNLOADINGFTCH_\nlftpget -c \"$NLCMIRROR/$RPATH/$IFILE\".md5 \"$NLCMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = wget ]]\nthen\nwget -v -O/dev/null \"$CMIRROR\" 2>\"$TMPDIR/global2localmirror\"\nNLCMIRROR=\"$(grep Location \"$TMPDIR/global2localmirror\" | awk {'print $2'})\"\n_PRINTDONE_\n_PRINTDOWNLOADINGFTCH_\nwget \"$DMVERBOSE\" --continue --show-progress \"$NLCMIRROR/$RPATH/$IFILE\".md5 \"$NLCMIRROR/$RPATH/$IFILE\"\nelse\ncurl -v \"$CMIRROR\" &> \"$TMPDIR/global2localmirror\"\nNLCMIRROR=\"$(grep Location \"$TMPDIR/global2localmirror\" | awk {'print $3'})\"\nNLCMIRROR=\"${NLCMIRROR%$'\\r'}\" # remove trailing carrage return: strip bash variable of non printing characters\n_PRINTDONE_\n_PRINTDOWNLOADINGFTCH_\ncurl \"$DMVERBOSE\" -C - --fail --retry 4 -OL {\"$NLCMIRROR/$RPATH/$IFILE.md5,$NLCMIRROR/$RPATH/$IFILE\"}\nfi\nrm -f \"$TMPDIR/global2localmirror\"\n}\n\n_GETIMAGE_() {\n_PRINTDOWNLOADINGX86_\nif [[ \"$DM\" = aria2 ]]\nthen\naria2c http://\"$CMIRROR/$RPATH/$IFILE\".md5\n_ISX86_\naria2c --continue http://\"$CMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = axel ]]\nthen\naxel -a --no-clobber http://\"$CMIRROR/$RPATH/$IFILE\".md5 ||:\n_ISX86_\naxel -a --no-clobber http://\"$CMIRROR/$RPATH/$IFILE\" ||:\nelif [[ \"$DM\" = lftp ]]\nthen\nlftpget http://\"$CMIRROR/$RPATH\"/md5sums.txt || lftpget http://\"$CMIRROR/$RPATH\"/md5sums.txt\n_ISX86_\nlftpget -c http://\"$CMIRROR/$RPATH/$IFILE\" || lftpget -c http://\"$CMIRROR/$RPATH/$IFILE\"\nelif [[ \"$DM\" = wget ]]\nthen\nwget \"$DMVERBOSE\" -N --show-progress http://\"$CMIRROR/$RPATH/\"md5sums.txt\n_ISX86_\nwget \"$DMVERBOSE\" --continue --show-progress http://\"$CMIRROR/$RPATH/$IFILE\"\nelse\ncurl \"$DMVERBOSE\" --fail --retry 4 -OL http://\"$CMIRROR/$RPATH\"/md5sums.txt\n_ISX86_\ncurl \"$DMVERBOSE\" -C - --fail --retry 4 -OL http://\"$CMIRROR/$RPATH/$IFILE\"\nfi\n}\n\n_ISX86_() {\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\nIFILE=\"$(grep i686 md5sums.txt | awk {'print $2'} ||:)\"\nelse\nIFILE=\"$(grep boot md5sums.txt | awk {'print $2'} ||:)\"\nfi\nsed '2q;d' md5sums.txt > \"$IFILE\".md5 2>/dev/null ||:\nrm -f md5sums.txt\nrm -f \\.md5\n_PRINTDOWNLOADINGX86TWO_\n}\n# getimagefunctions.bash FE\n"
        },
        {
          "name": "initkeyfunctions.bash",
          "type": "blob",
          "size": 37.341796875,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\ndeclare -a USRINITFILES\t# declare array for user init files\nUSRINITFILES=(BASH_PROFILEFILE BASHRCFILE CSHRCFILE EMACSITFILE GITCONFIGFILE INITRCFILE INPUTRCFILE VIMRCFILE PROFILEFILE ZSHRCFILE)\n_ADDADDS_() {\n_ADDREADME_\n_ADDae_\n_ADDauser_\nprintf '\\e[0;32mGenerating dot files:  \\e[1;32mBEGUN…\\n'\n_ADDbash_logout_\n_ADDbash_profile_\n_ADDbashrc_\n_ADDbindexample.prs_\n_ADDcams_\n_ADDcshrc_\n_ADDcdtd_\n_ADDcdth_\n_ADDcdtmp_\n_ADDch_\n_ADDchperms.cache+gnupg_\n_ADDcsystemctl_\n_ADDcolorizebashrc_\n_ADDes_\n_ADDexd_\n_ADDfibs_\n_ADDga_\n_ADDgcl_\n_ADDgclone_\n_ADDgcm_\n_ADDgitconfig_\n_ADDgp_\n_ADDgpl_\n_ADDgsu_\n_ADDgmu_\n_ADDhunf_\n_ADDhunw_\n_ADDinfo_\n_ADDinitfbinds_\n_ADDinitrc_\n_ADDinputrc_\n_ADDkeys_\n_ADDmakelibguestfs_\n_ADDmakeauraclegit_\n_ADDmakeaurto_\n_ADDmakeaurbauerbill_\n_ADDmakeaurfakeroottcp_\n_ADDmakeaurghcuphs_\n_ADDmakeaurhelpers_\n_ADDmakeaurjqgit_\n_ADDmakeaurpacaur_\n_ADDmakeaurpacaurgit_\n_ADDmakeaurpackagequery_\n_ADDmakeaurpakku_\n_ADDmakeaurpakkugit_\n_ADDmakeaurpakkugui_\n_ADDmakeaurpakkuguigit_\n_ADDmakeaurparu_\n_ADDmakeaurparubin_\n_ADDmakeaurparugit_\n_ADDmakeaurparuz_\n_ADDmakeaurpbget_\n_ADDmakeaurpikaur_\n_ADDmakeaurpikaurgit_\n_ADDmakeaurpipessh_\n_ADDmakeaurpkgbuilder_\n_ADDmakeaurpkgbuildergit_\n_ADDmakeaurpm2ml_\n_ADDmakeaurpowerpill_\n_ADDmakeaurpopularpackages_\n_ADDmakeaurpyinstaller_\n_ADDmakeaurpyinstallerhookscontrib_\n_ADDmakeaurpythonaltgraph_\n_ADDmakeaurpython3colorsysplus_\n_ADDmakeaurpython3memoizedb_\n_ADDmakeaurpython3xcgf_\n_ADDmakeaurpython3xcpf_\n_ADDmakeaurpython3aur_\n_ADDmakeaurpuyo_\n_ADDmakeaurrepoctl_\n_ADDmakeaurrepoctlgit_\n_ADDmakeaurrepofish_\n_ADDmakeaurrustup_\n_ADDmakeaurshellcheckbin_\n_ADDmakeaurshellcheckgit_\n_ADDmakeaurshellcheckgitstatic_\n_ADDmakeaurtrizen_\n_ADDmakeaurtrizengit_\n_ADDmakeaurutils_\n_ADDmakeaurutilsgit_\n_ADDmakeauryaah_\n_ADDmakeauryay_\n_ADDmakeaurzigzag_\n_ADDmakefakeroottcp_\n_ADDmakeksh_\n_ADDmakeyay_\n_ADDmemav_\n_ADDmemfree_\n_ADDmeminfo_\n_ADDmemmem_\n_ADDmemtot_\n_ADDopen4root_\n_ADDorcaconf_\n_ADDpatchmakepkg_\n_ADDpacmandblock_\n_ADDpc_\n_ADDpci_\n_ADDpinghelp_\n_ADDprofile_\nif [ -n \"${VLORALCR:-}\" ]\nthen\n_ADDprofileetc_\n_ADDprofileusretc_\nfi\n_ADDresolvconf_\n_PREPMOTS_\n_ADDmota_\n_ADDmotd_\n_ADDmoto_\n_ADDstriphtmlcodefromfile_\n_ADDt_\n_ADDtlmgrinstaller_\n[ -f $TMXRCHBNDS/top ] ||  _ADDtop_\n_ADDthstartarch_\n_ADDtimings_\n# _ADDtools_\n_ADDtour_\n_ADDtrim_\n_ADDv_\n_ADDwe_\n_ADDyt_\n_ADDzshrc_\n}\n_ADDauser_() {\n_CFLHDR_ $TMXRCHBNDS/addauser \"# add Arch Linux in TermuxArch PRoot QEMU user\"\ncat >> $TMXRCHBNDS/addauser <<- EOM\n_HUSDIRC_() {\nif [ \"\\$UID\" != 0 ]\nthen\nWHOAMI=\"\\$(whoami)\"\nprintf \"\\\\\\\\e[1;31mUSAGE:\\\\\\\\e[1;37m  %s\\\\\\\\e[1;31m:  Exiting...\\\\\\\\e[0m\\\\\\\\n\" \"Script '\\${0##*/}' should be run using the root account, not the '\\$WHOAMI' account.  Alternatively '\\${0##*/}' can be used with the 'sudo' command, 'sudo \\${0##*/} user'\"\nexit 202\nfi\nif [ \\$# = 0 ]\nthen\nprintf \"\\\\\\\\e[1;31mUSAGE: \\\\\\\\e[1;37m'addauser username'\\\\\\\\e[1;32m: Exiting...\\\\\\\\n\"\nexit 201\nfi\nif [[ -d \"/home/\\$1\" ]]\nthen\nprintf \"\\\\\\\\e[1;33mDirectory: \\\\\\\\e[1;37m'/home/%s exists'\\\\\\\\e[0;32m: Exiting...\\\\\\\\n\" \"\\$1\"\nelse\n_FUNADDU_ \"\\$@\"\nfi\n}\n_FUNADDU_() {\ncommand -v sudo 1>/dev/null || { \"$TMXRCHBNDR\"/pc sudo || \"$TMXRCHBNDR\"/pc sudo ; }\nprintf \"\\\\\\\\e[0;32m%s\\\\\\\\n\\\\\\\\e[1;32m\" \"Adding Arch Linux in TermuxArch PRoot QEMU user '\\$1' and creating Arch Linux in TermuxArch PRoot QEMU user \\$1's home directory in /home/\\$1...\"\n[ -f /etc/sudoers ] || :>/etc/sudoers\nsed -i \"/# %wheel ALL=(ALL) NOPASSWD: ALL/ s/^# *//\" /etc/sudoers\nsed -i \"/# ALL ALL=(ALL) ALL/ s/^# *//\" /etc/sudoers\nsed -i \"s/# ALL ALL=(ALL) ALL/ALL ALL=(ALL) NOPASSWD: ALL/g\" /etc/sudoers\nprintf '%s\\\\n' \"\\$1    ALL=(ALL) ALL\" >> /etc/sudoers\ngrep -q 'ftp_proxy' /etc/sudoers || printf \"%s\\\\\\\\n\" 'Defaults env_keep += \"ftp_proxy http_proxy https_proxy\"' >> /etc/sudoers\nsed -i \"s/required/sufficient/g\" /etc/pam.d/su\nsed -i \"s/^#auth/auth/g\" /etc/pam.d/su\nuseradd -k /root -m -s /bin/bash \"\\$1\" -U\nusermod \"\\$1\" -aG wheel\nchage -I -1 -m 0 -M -1 -E -1 \"\\$1\"\npasswd -d \"\\$1\"\nchmod 775 \"/home/\\$1\"\nsed -i \"s/\\$1:x/\\$1:/g\" /etc/passwd\nprintf \"\\\\\\\\e[0;32m%s\\\\\\\\e[1;32m%s\\\\\\\\e[0;32m%s\\\\\\\\e[1;32m%s\\\\\\\\e[0;32m%s\\\\\\\\e[1;32m%s\\\\\\\\e[0;32m%s\\\\\\\\e[1;32m%s\\\\\\\\e[0;32m%s\\\\\\\\e[0m\\\\\\\\n\" \"Added Arch Linux in TermuxArch PRoot QEMU user \" \"'\\$1'\" \" and configured user '\\$1' for use with the Arch Linux command 'sudo'.  Created Arch Linux user \\$1's home directory in /home/\\$1.  To use this account run \" \"'$STARTBIN login \\$1'\" \" from the shell in Termux.  To add user accounts you can use \" \"'addauser \\$1'\" \" in Arch Linux and \" \"'$STARTBIN c[ommand] addauser \\$1'\" \" in a default Termux shell.  Please do not nest proot in proot by using '$STARTBIN' in '$STARTBIN' as this is known to cause issues for users of PRoot.\"\n}\n_PMFSESTRING_() {\nprintf \"\\\\\\\\e[1;31m%s\\\\\\\\e[0;31m%s\\\\\\\\e[0;36m%s\\\\\\\\n\\\\\\\\n\" \"Signal generated in '\\$1'; \" \"Cannot complete task; \" \"Continuing...\"\nprintf \"\\\\\\\\e[1;34m%s\\\\\\\\e[0;34m%s\\\\\\\\e[1;34m%s\\\\\\\\e[0;34m%s\\\\\\\\e[1;34m%s\\\\\\\\e[0m\\\\\\\\n\\\\\\\\n\" \"  If you find improvements for \" \"${0##*}\" \" and \" \"\\${0##*}\" \" please open an issue and an accompanying pull request.\"\n}\n_HUSDIRC_ \"\\$@\"\n## $INSTALLDIR$TMXRCHBNDR/addauser FE\nEOM\nchmod 755 $TMXRCHBNDS/addauser\n}\n\n_ADDkeys_() {\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\t# set customized commands for Arch Linux 32 architecture\nX86INT=\"_CURLDWND_() { { [ \\\"\\${CURLDWNDVAR_:-}\\\" = 0 ] && curl -C - --insecure --fail --retry 4 -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\".sig -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\" ; } || { curl -C - --fail --retry 4 -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\".sig -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\" || { CURLDWNDVAR_=0 && printf '%s\\\\n' \\\"Running command 'curl --insecure';  Continuing...\\\" && curl -C - --insecure --fail --retry 4 -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\".sig -OL https://archive.archlinux32.org/packages/\\\"\\$UPGDPAKG\\\" ; } ; } ; }\n\nUPGDPKGS=(\\\"a/archlinux-keyring/archlinux-keyring-20191219-1.0-any.pkg.tar.xz\\\" \\\"a/archlinux32-keyring/archlinux32-keyring-20191230-1.0-any.pkg.tar.xz\\\" \\\"g/glibc/glibc-2.28-1.1-i686.pkg.tar.xz\\\" \\\"l/linux-api-headers/linux-api-headers-5.3.1-2.0-any.pkg.tar.xz\\\" \\\"l/libarchive/libarchive-3.3.3-1.0-i686.pkg.tar.xz\\\" \\\"o/openssl/openssl-1.1.1.d-2.0-i686.pkg.tar.xz\\\" \\\"p/pacman/pacman-5.2.1-1.4-i686.pkg.tar.xz\\\" \\\"z/zstd/zstd-1.4.4-1.0-i686.pkg.tar.xz\\\" \\\"/c/coreutils/coreutils-8.31-3.0-i686.pkg.tar.xz\\\" \\\"w/which/which-2.21-5.0-i686.pkg.tar.xz\\\" \\\"g/grep/grep-3.3-3.0-i686.pkg.tar.xz\\\" \\\"g/gzip/gzip-1.10-3.0-i686.pkg.tar.xz\\\" \\\"l/less/less-551-3.0-i686.pkg.tar.xz\\\" \\\"s/sed/sed-4.7-3.0-i686.pkg.tar.xz\\\" \\\"u/unzip/unzip-6.0-13.1-i686.pkg.tar.xz\\\")\n\ncp -f /usr/lib/{libcrypto.so.1.0.0,libssl.so.1.0.0} \\\"\\$TMPDIR\\\"\ncd /var/cache/pacman/pkg/ || exit 196\n_DWLDFILE_() { { printf \\\"%s\\\\n\\\\n\\\" \\\"Downloading signature file and file '\\${UPGDPAKG##*/}' from https://archive.archlinux32.org.\\\" && _CURLDWND_ && printf \\\"%s\\\\n\\\\n\\\" \\\"Finished downloading signature file and file '\\${UPGDPAKG##*/}' from https://archive.archlinux32.org.\\\" ; } || _PRTERROR_ ; }\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep1.lock ] && [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep2.lock ] && [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep3.lock ] && [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep4.lock ] && [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep5.lock ]\nthen\nprintf \\\"\\\\n%s\\\\n\\\" \\\"Downloading transition package and signature files from https://archive.archlinux32.org;  DONE  \\\"\nelse\nprintf \\\"%s\\\\n\\\" \\\"Downloading files: '\\$(printf \\\"%s \\\" \\\"\\${UPGDPKGS[@]##*/}\\\")' from https://archive.archlinux32.org.\\\"\nfor UPGDPAKG in \\${UPGDPKGS[@]}\ndo\nif [[ -f /var/cache/pacman/pkg/\\\"\\${UPGDPAKG##*/}\\\" ]]\nthen\nprintf \\\"%s\\\\n\\\" \\\"File '\\${UPGDPAKG##*/}' is already downloaded.\\\"\nelse\n_DWLDFILE_ || _DWLDFILE_\nfi\ndone\nfi\n\n_PMUEOEP1_() {\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep1.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\n\\\" \\\"[\\$2/6]  The command \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nelse\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [\\$2/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} --needed --noconfirm\\\"\npacman -U /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$1]##*/}\\\" --needed --noconfirm && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep1.lock\nfi\n}\n\n_PMUEOEP2_() { # depreciated\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep2.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\n\\\" \\\"[\\$3/6]  The command \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nelse\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [\\$3/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} --needed --noconfirm\\\"\npacman -U /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$1]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$2]##*/}\\\" --needed --noconfirm && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep2.lock\nfi\n}\n\n_PMUEOEP3_() {\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep3.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\e[0m\\\\n\\\" \\\"[\\$4/6]  The command \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nelse\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [\\$4/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} --needed --noconfirm\\\"\npacman -U /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$1]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$2]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$3]##*/}\\\" --needed --noconfirm && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep3.lock\nfi\n}\n\n_PMUEOEP4_() {\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep4.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\e[0m\\\\n\\\" \\\"[\\$5/6]  The command \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} \\${UPGDPKGS[\\$4]##*/} --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nelse\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [\\$5/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} \\${UPGDPKGS[\\$4]##*/} --needed --noconfirm\\\"\npacman -U /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$1]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$2]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$3]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$4]##*/}\\\" --needed --noconfirm && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep4.lock\nfi\n}\n\n_PMUEOEP5_() {\nif [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep5.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\e[0m\\\\n\\\" \\\"[\\$6/6]  The command \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} \\${UPGDPKGS[\\$4]##*/} \\${UPGDPKGS[\\$5]##*/} --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nelse\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[0m...\\\\n\\\" \\\"Running command \\${0##*/} [\\$6/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -U \\${UPGDPKGS[\\$1]##*/} \\${UPGDPKGS[\\$2]##*/} \\${UPGDPKGS[\\$3]##*/} \\${UPGDPKGS[\\$4]##*/} \\${UPGDPKGS[\\$5]##*/} --needed --noconfirm\\\"\npacman -U /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$1]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$2]##*/}\\\" /var/cache/pacman/pkg/\\\"\\${UPGDPKGS[\\$3]##*/}\\\" \\\"\\${UPGDPKGS[\\$4]##*/}\\\" \\\"\\${UPGDPKGS[\\$5]##*/}\\\" --needed --noconfirm && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpmueoep5.lock\nfi\n}\n[ -f /etc/pacman.conf ] || cp /etc/pacman.conf /var/backups/\"${INSTALLDIR##*/}\"/etc/pacman.conf.\"$SDATE\".bkp\n{ [ -x /system/bin/sed ] && /system/bin/sed -i '/^LocalFileSigLevel/s/.*/SigLevel    = Never/' /etc/pacman.conf ; } || sed -i '/^LocalFileSigLevel/s/.*/SigLevel    = Never/' /etc/pacman.conf\n_PMUEOEP1_ 1 1\n_KEYSGENMSG_\nprintf \\\"\\\\e[1;32m==> \\\\e[1;37mRunning command %s \\\\e[1;32mpacman -Ss keyring --color=always\\\\e[1;37m...\\\\n\\\" \\\"\\${0##*/}\\\"\npacman -Ss keyring --color=always || _PRTERROR_\n_PMUEOEP5_ 9 10 11 12 13 2\n_PMUEOEP4_ 2 3 7 8 3\n_PMUEOEP3_ 4 5 6 4\nmv -f \\\"\\$TMPDIR\\\"/{libcrypto.so.1.0.0,libssl.so.1.0.0} /usr/lib/\nsed -i '/^Architecture/s/.*/Architecture = i686/' /etc/pacman.conf\nsed -i '/^SigLevel/s/.*/SigLevel    = Never/' /etc/pacman.conf\nsed -i 's/^HoldPkg/\\#HoldPkg/g' /etc/pacman.conf\nif [ ! -f /var/run/lock/\"${INSTALLDIR##*/}\"/keyring.lock ]\nthen\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [5/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -S archlinux-keyring archlinux32-keyring --needed --noconfirm\\\"\n_KEYSGENMSG_\n{ { pacman -S archlinux-keyring archlinux32-keyring --needed --noconfirm || pacman -Sy archlinux-keyring archlinux32-keyring --needed --noconfirm ; } && sed -i '/^SigLevel/s/.*/SigLevel    = Required DatabaseOptional/' /etc/pacman.conf && PACMANQ_=\\\"\\$(pacman -Qo /usr/lib/libblkid.so)\\\" && { [[ \\\"\\$(printf $\\{PACMANQ_/libsutil-linux})\\\" == *libsutil-linux* ]] || pacman -Rdd libutil-linux --noconfirm || _PRTERROR_ ; } && :>/var/run/lock/\"${INSTALLDIR##*/}\"/keyring.lock ; }\nelse\nprintf \\\"\\\\n\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\e[0m\\\\n\\\" \\\"[5/6]  The command \\\" \\\"pacman -S archlinux-keyring archlinux32-keyring --needed --noconfirm\\\" \\\" has already been successfully run; Continuing...\\\"\nfi\nrm -f /etc/ssl/certs/ca-certificates.crt\nsed -i '/^LocalFileSigLevel/s/.*/SigLevel    = Optional/' /etc/pacman.conf\nsed -i '/^SigLevel/s/.*/SigLevel    = Optional/' /etc/pacman.conf\nprintf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m...\\\\n\\\" \\\"Running command \\${0##*/} [6/6] $ARCHITEC ($CPUABI) architecture upgrade ; \\\" \\\"pacman -Su --needed --noconfirm ; Starting full system upgrade\\\"\npacman -Sy || pacman -Sy || sudo pacman -Sy\"\nX86IPT=\" \"\nX86INK=\":\"\nelse\t# Arch Linux architectures armv7, aarch64 and x86_64 use these options\nX86INT=\":\"\nX86IPT=\"(1/2)\"\nX86INK=\"[ \\\"\\${#ARGS}\\\" = 0 ] || { printf \\\"\\\\\\\\n\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman -S %s --needed --noconfirm --color=always\\\\\\\\e[1;37m...\\\\\\\\n\\\" \\\"\\$ARGS\\\" && pacman -S \\$ARGS --needed --noconfirm --color=always || _PRTERROR_ ; }\nprintf \\\"\\\\\\\\n\\\\\\\\e[1;32m(2/2) \\\\\\\\e[0;34mWhen \\\\\\\\e[1;37mGenerating pacman keyring master key\\\\\\\\e[0;34m appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  In order to generate some entropy quickly, play a multimedia file on this device.  \\\\\\\\n\\\\\\\\nThe program \\\\\\\\e[1;32mpacman-key\\\\\\\\e[0;34m will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When \\\\\\\\e[1;37mAppending keys from archlinux.gpg\\\\\\\\e[0;34m appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling this device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  The command \\\\\\\\e[1;32m~%s/bin/we\\\\\\\\e[0;34m can be used to generate and watch entropy on device in a new Termux session.\\\\\\\\n\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman-key --populate\\\\\\\\e[1;37m...\\\\\\\\n\\\" \\\"$DARCH\\\"\n{ [ -f /var/run/lock/\"${INSTALLDIR##*/}\"/kpp.lock ] && printf '\\\\e[1;32m==> \\\\e[1;37mAlready populated with command \\\\e[1;32mpacman-key --populate\\\\e[1;37m...\\\\n' ; } || { printf '\\\\e[1;32m==> \\\\e[1;37mRunning command \\\\e[1;32mpacman-key --populate\\\\e[1;37m...\\\\n' && { $ECHOEXEC pacman-key --populate && :>/var/run/lock/\"${INSTALLDIR##*/}\"/kpp.lock ; } || _PRTERROR_ ; }\nprintf \\\"\\\\\\\\e[1;32m==>\\\\\\\\e[1;37m Running command \\\\\\\\e[1;32mpacman -Ss keyring --color=always\\\\\\\\e[1;37m...\\\\\\\\n\\\"\npacman -Ss keyring --color=always\"\nfi\n_CFLHDR_ $TMXRCHBNDS/keys\ncat >> $TMXRCHBNDS/keys <<- EOM\ndeclare -a KEYRINGS\n\n_KEYSGENMSG_() {\nprintf \"\\\\\\\\n\\\\\\\\e[1;32m%s \\\\\\\\e[0;34mWhen \\\\\\\\e[1;37mGenerating pacman keyring master key\\\\\\\\e[0;34m appears on the screen, the installation process can be accelerated.  The system desires a lot of entropy at this part of the install procedure.  To generate as much entropy as possible quickly, watch and listen to a file on your device.  \\\\\\\\n\\\\\\\\nThe program \\\\\\\\e[1;32mpacman-key\\\\\\\\e[0;34m will want as much entropy as possible when generating keys.  Entropy is also created through tapping, sliding, one, two and more fingers tapping with short and long taps.  When \\\\\\\\e[1;37mAppending keys from archlinux.gpg\\\\\\\\e[0;34m appears on the screen, use any of these simple methods to accelerate the installation process if it is stalled.  Put even simpler, just do something on device.  Browsing files will create entropy on device.  Slowly swiveling this device in space and time will accelerate the installation process.  This method alone might not generate enough entropy (a measure of randomness in a closed system) for the process to complete quickly.  You can use \\\\\\\\e[1;32m~%s/bin/we\\\\\\\\e[0;34m in a new Termux session to generate and watch entropy on device.\\\\\\\\e[0m\\\\\\\\n\" \"$X86IPT\" \"$DARCH\"\n}\n\n_GENEN_() {\nprintf \"\\\\\\\\e[0;32mGenerating entropy on device;  \\\\\\\\e[1;32mPlease wait a moment...  \"\nGENENN=16\nfor GNNT in \\$(seq 1 \\$GENENN)\ndo\nnice -n 20 ls -alR /usr >/dev/null &\nnice -n 20 find /usr >/dev/null &\nnice -n 20 cat /dev/urandom >/dev/null &\ndone\n}\n\n_PRINTTAIL_() {\nprintf \"\\\\\\\\n\\\\\\\\e[0;32m%s \\\\\\\\e[1;32m%s \\\\\\\\e[0;32m%s\\\\\\\\e[1;34m: \\\\\\\\e[1;32m%s\\\\\\\\e[0m 🏁  \\\\\\\\n\\\\\\\\n\\\\\\\\e[0m\" \"TermuxArch command\" \"\\$STRNRG\" \"version \\$VERSIONID\" \"DONE 📱\"\nprintf '\\033]2;  🔑 TermuxArch %s: DONE 📱 \\007'  \"'\\$STRNRG'\"\n}\n\n_PRTERROR_() {\nprintf \"\\\\n\\\\e[1;31merror: \\\\e[1;37m%s\\\\e[0m\\\\n\\\\n\" \"Please study the first lines of the error output and correct the error(s) and/or warning(s) and run '\\$STRNRG' again.\"\n}\n\n_TRPET_() {\nprintf \"\\\\\\\\e[?25h\\\\\\\\e[0m\"\nset +Eeuo pipefail\n_PRINTTAIL_ \"\\${KEYRINGS[@]}\"\n}\ntrap _TRPET_ EXIT\n\n## keys begin ##################################################################\nKEYSUNAM_=\"\\$(uname -m)\"\nif [[ -z \"\\${1:-}\" ]] || [[ \"\\$KEYSUNAM_\" = aarch64 ]]\nthen\nKEYRINGS[0]=\"archlinux-keyring\"\nKEYRINGS[1]=\"archlinuxarm-keyring\"\nKEYRINGS[2]=\"ca-certificates-utils\"\nelif [[ \"\\$1\" = x86 ]] || [[ \"\\$KEYSUNAM_\" = x86 ]]\nthen\nKEYRINGS[0]=\"archlinux-keyring\"\nKEYRINGS[1]=\"archlinux32-keyring\"\nKEYRINGS[2]=\"ca-certificates-utils\"\nelif [[ \"\\$1\" = x86_64 ]] || [[ \"\\$KEYSUNAM_\" = x86_64 ]]\nthen\nKEYRINGS[0]=\"archlinux-keyring\"\nKEYRINGS[1]=\"ca-certificates-utils\"\nelse\nKEYRINGS=\"\"\nfi\nARGS=\"\\${KEYRINGS[@]}\"\nprintf '\\033]2;  🔑 TermuxArch %s 📲 \\007' \"'\\$STRNRG'\"\nprintf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32m%s \\\\\\\\e[0;32m%s\\\\\\\\e[1;37m...\\\\\\\\n\" \"\\$STRNRG\" \"version \\$VERSIONID\"\n_GENEN_ ; kill \\$! &\n_KEYSGENMSG_\n_DOPSY_() {\nprintf \"\\\\\\\\n\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman -Sy\\\\\\\\e[1;37m...\\\\\\\\n\"\n$ECHOEXEC $ECHOSYNC pacman -Sy || $ECHOEXEC $ECHOSYNC pacman -Sy || sudo $ECHOEXEC $ECHOSYNC pacman -Sy\n}\n_DOPSY_ || _DOPSY_ || _PRTERROR_\n_DOKPI_() {\nif [ ! -f \"/run/lock/${INSTALLDIR##*/}/kpi.lock\" ]\nthen\nprintf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman-key --init\\\\\\\\e[1;37m...\\\\\\\\n\"\n{ $ECHOEXEC pacman-key --init && :>\"/run/lock/${INSTALLDIR##*/}/kpi.lock\" ; } || _PRTERROR_\nelse\nprintf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mAlready initialized with command \\\\\\\\e[1;32mpacman-key --init\\\\\\\\e[1;37m...\\\\\\\\n\"\nfi\n}\n_DOKPI_ || _DOKPI_\numask 000\nchmod 4777 /usr/bin/newuidmap\nchmod 755 /etc/pacman.d/gnupg\numask 022\n_DOPP_() {\n{ [ -f \"/var/run/lock/${INSTALLDIR##*/}/kpp.lock\" ] && printf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mAlready populated with command \\\\\\\\e[1;32mpacman-key --populate\\\\\\\\e[1;37m...\\\\\\\\n\" ; } || { printf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman-key --populate\\\\\\\\e[1;37m...\\\\\\\\n\" && { $ECHOEXEC pacman-key --populate && :>\"/var/run/lock/${INSTALLDIR##*/}/kpp.lock\"; } || _PRTERROR_ ; }\n}\n_DOPP_ || _DOPP_\nprintf \"\\\\\\\\e[1;32m==> \\\\\\\\e[1;37mRunning command \\\\\\\\e[1;32mpacman -Ss keyring --color=always\\\\\\\\e[1;37m...\\\\\\\\n\"\npacman -Ss keyring --color=always || pacman -Ss keyring --color=always || _PRTERROR_\n$X86INT\n$X86INK\n## $INSTALLDIR$TMXRCHBNDR/keys FE\nEOM\nchmod 755 $TMXRCHBNDS/keys\n}\n\n_ADDcshrc_() { :>root/.cshrc ; }\n_ADDinitrc_() { printf '%s\\n' \"\" > root/.initrc ; }\n_ADDinputrc_() {\nINPUTRCFILE=\"$(printf '%s\\n' \"set bell-style none\nset colored-stats on\nset colored-completion-prefix on\nset completion-ignore-case on\nset completion-prefix-display-length 3\nset completion-query-items 32\n# set editing-mode vi\nset enable-keypad on\nset enable-meta-key on\nset expand-tilde off\nset horizontal-scroll-mode on\nset input-meta on\nset match-hidden-files off\nset mark-symlinked-directories on\nset output-meta on\nset print-completions-horizontally on\nset show-all-if-ambiguous on\nset show-all-if-unmodified on\n# set show-mode-in-prompt on\nset visible-stats on\")\"\n_COMPAREFILE_ \"$INPUTRCFILE\" \".inputrc\" \"root\"\n}\n\n_ADDprofile_() {\nPROFILEFILE=\"$(printf '%s\\n' \"export TMPDIR=\\\"/tmp\\\"\")\"\n_COMPAREFILE_ \"$PROFILEFILE\" \".profile\" \"root\"\n}\n\n_ADDzshrc_() { :>root/.zshrc ; }\n\n_COMPAREFILE_() { # compare and write file if differ\n_WRITENEWFILE_() { printf '%s\\n' \"$1\" > \"$3/$2\" && printf '\\e[0;32mFile \\e[0;32m%s \\e[0;32m%s.\\n' \"$3/$2\" \"${@: -1}\" ; }\nif [ -f \"$3/$2\" ] # file exists\nthen # compare\nif [[ \"$1\" != \"$(<\"$3\"/\"$2\")\" ]] # data differs\nthen # write file\n_WRITENEWFILE_ \"$@\" \"updated\"\nelse\nprintf '\\e[0;32mData in file \\e[1;32m%s\\e[0;32m is equal.\\n' \"$3/$2\"\nfi\nelse # write data to file if it does not exist\n_WRITENEWFILE_ \"$@\" \"created\"\nfi\n}\n\n_DOPROXY_() {\n[[ -f \"$HOME\"/.bash_profile ]] && grep -s \"proxy\" \"$HOME\"/.bash_profile | grep -s \"export\" >> root/bin/\"$BINFNSTP\" ||:\n[[ -f \"$HOME\"/.bashrc ]] && grep -s \"proxy\" \"$HOME\"/.bashrc  | grep -s \"export\" >> root/bin/\"$BINFNSTP\" ||:\n[[ -f \"$HOME\"/.profile ]] && grep -s \"proxy\" \"$HOME\"/.profile | grep -s \"export\" >> root/bin/\"$BINFNSTP\" ||:\n}\n\n_MAKESTARTBIN_() {\n_CFLHDR_ \"$STARTBIN\"\nprintf \"%s\\\\n\" \"${FLHDRP[@]}\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\n_CHCKUSER_() { [ -d \"$INSTALLDIR/home/\\$2\" ] || _PRNTUSGE_ \"\\$@\" ; }\n_COMMANDGNE_() { printf \"\\\\e[1;48;5;138mＴｅｒｍｕｘＡｒｃｈ %s\\\\e[0m  \" \"\\${SRPTNM^^} NOTICE:  Please run '\\${0##*/}' and 'bash \\${0##*/}' from the BASH shell in native Termux:  EXITING...\" && exit 202 ; }\nif [ -w /root ]\nthen\n_COMMANDGNE_\nfi\n_PRINTUSAGE_() {\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"$STARTBIN\" \"  starts Arch Linux in $TXPRQUON with PRoot QEMU root login.  This account is reserved for system administration.  Please use any system administrator account with care.\"\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"$STARTBIN c[ommand] command\" \"  runs an Arch Linux command from a Termux shell as PRoot QEMU root login.  Quoting multiple commands can assit when passing multiple arguments; i.e. \" \"$STARTBIN c 'whoami ; cat -n /etc/pacman.d/mirrorlist'\" \".  Please pass commands through the system administrator account with caution.\"\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"$STARTBIN e[login|user] user\" \"  login as user.  Uses alternate elogin and euser option to login as user.  This option is preferred for working with programs that have already been installed, and for working with the 'cp' and 'git' commands.  Please use \" \"$STARTBIN c 'addauser user'\" \" first to create this user and the user's home directory.\"\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"$STARTBIN l[ogin]|u[ser] user\" \"  login as user.  This option is preferred when installing software from a user account with the 'sudo' command, and when using the 'makeaur*' commands.  Please use 'addauser user' first to create this user and the user's home directory.\"\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"$STARTBIN r[aw]\" \"  construct the \" \"$STARTBIN \" \"proot statement from exec.../bin/.  For example \" \"$STARTBIN r su \" \"will exec 'su' in Arch Linux.  After installing the appropriate packages in Arch Linux, easy PRoot QEMU root shell access is possible with option raw:\n\n~ $ $STARTBIN r bash\n~ $ $STARTBIN r dash\n~ $ $STARTBIN+x86 r csh\n~ $ $STARTBIN+x86 r ksh\n~ $ $STARTBIN+x864 r sh\n~ $ $STARTBIN+x864 r zsh\n\nCommand '${0##*/} qemu [options]' assists in installing alternate architectures.  Variable PROOTSTMNT has more information about the PRoot QEMU init statement options 'grep -h PROOTSTMNT ~/TermuxArchBloom/* | grep \\=' if you wish to modify the PRoot QEMU init statement extensively.  The PRoot QEMU init statement can also be modified on-the-fly simply by using the /var/binds/ directory once logged into the Arch Linux in TermuxArch PRoot QEMU environment.\"\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\\\\e[0m\" \"$STARTBIN s[u] user command\" \"  executes commands as Arch Linux user from a Termux shell.  This option is preferred when installing software from a user account with the 'sudo' command, and when using the 'makeaur*' commands.  Quoting multiple commands can assit when passing multiple arguments:  \" \"$STARTBIN s user 'whoami ; cat -n /etc/pacman.d/mirrorlist'\" \".  Please use \" \"$STARTBIN c 'addauser user'\" \" first to create a login and the login's home directory.\"\nprintf '\\\\033]2;%s\\\\007' \"TermuxArch $STARTBIN $@ 📲; DONE 🏁\"\n}\n_PRNTUSGE_() { _PRINTUSAGE_ && printf \"\\\\e[0;33m%s\\\\e[0;32m%s\\\\e[1;31m%s\\\\e[0m\" \"It appears that user '\\$2' does not exist in the Arch Linux in TermuxArch PRoot QEMU system!  \" \"Command '\\${0##*/} command 'addauser \\$2'' can create user account '\\$2' in the TermuxArch PRoot QEMU system.   Command '\\${0##*/} login \\$2' can be run once more to login to the TermuxArch PRoot QEMU environment as user '\\$2'.\" \"  EXITING…  \" ; exit 69 ; }\n## [] Default Arch Linux in TermuxArch  PRoot QEMU root login.\nif [[ -z \"\\${1:-}\" ]]\nthen\nprintf '\\\\033]2;%s\\\\007' \"TermuxArch $STARTBIN 📲\"\nset +Eeuo pipefail\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNT /bin/bash -l ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\\\033]2;%s\\\\007' \"TermuxArch $STARTBIN 📲; DONE 🏁\"\nset -Eeuo pipefail\n## [? | help] Displays usage information.\nelif [[ \"\\${1//-}\" = [?]* ]] || [[ \"\\${1//-}\" = [Hh]* ]]\nthen\n_PRINTUSAGE_\nelif [[ -z \"\\${2:-}\" ]]\nthen\n_PRINTUSAGE_\nprintf \"\\\\e[0;33m%s\\\\e[1;30m%s\\\\e[0;0m%s\\\\e[1;30m%s\\\\e[0;31m%s\\\\e[1;30m%s\\\\e[0m\" \"Please use at least one more argument to continue.  The command '\\${0##*/} help' has more information;\" \"  Possible substitute command '\" \"\\${0##*/} c 'addauser \\$1'\" \"';\" \"  Exiting\" \"...  \"\n## [command ARGS] Execute a command in BASH as root.\nelif [[ \"\\${1//-}\" = [Cc]* ]]\nthen\nprintf '\\033]2; TermuxArch $STARTBIN command %s 📲\\007' \"\\${@:2}\"\n:>\"$INSTALLDIR/root/.chushlogin\"\nset +Eeuo pipefail\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNT /bin/bash -lc \\\"\\${@:2}\\\" ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\033]2; TermuxArch $STARTBIN command %s 📲;DONE 🏁 \\007' \"\\${@:2}\"\nset -Eeuo pipefail\nrm -f \"$INSTALLDIR/root/.chushlogin\"\n## [e[login|user] user] Login as user.\nelif [[ \"\\${1//-}\" = e* ]]\nthen\n_CHCKUSER_ \"\\$@\"\nprintf '\\033]2; TermuxArch $STARTBIN elogin %s 📲\\007' \"\\$2\"\nset +Eeuo pipefail\n:>\"$INSTALLDIR/var/lock/${INSTALLDIR##*/}/\\$\\$elock\"\nif [ -f \"$INSTALLDIR/var/lib/pacman/db.lck\" ]\nthen\nprintf \"%s\" \"File ~/${INSTALLDIR##*/}/var/lib/pacman/db.lck exists;  The TermuxArch 'pacmandblock' command can be used to alter the lock state.  Please use '$STARTBIN' and '$STARTBIN l[ogin] username' to install software in Arch Linux in TermuxArch PRoot QEMU: \"\nelse\nprintf \"%s\" \"Creating file ~/${INSTALLDIR##*/}/var/lib/pacman/db.lck;  The TermuxArch 'pacmandblock' command can be used to alter the lock state.  Please use '$STARTBIN' and '$STARTBIN l[ogin] username' to install software in the Arch Linux in TermuxArch PRoot QEMU environment:  \"\n:>\"$INSTALLDIR/var/lib/pacman/db.lck\"\nprintf \"%s\\\\n\" \"Continuing...\"\nfi\nprintf \"%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n%s\\\\n\" \"if [ -f \\\"$INSTALLDIR/var/lock/${INSTALLDIR##*/}/\\$\\$elock\\\" ]\" \"then\" \"if [ -f \\\"$INSTALLDIR/var/lib/pacman/db.lck\\\" ]\" \"then\" \"printf \\\"%s\\\" \\\"Deleting file '~/${INSTALLDIR##*/}/var/lib/pacman/db.lck'.  The TermuxArch 'pacmandblock' command can be used to alter the lock state.  Please use '$STARTBIN' and '$STARTBIN l[ogin] username' to install software in the Arch Linux in TermuxArch PRoot QEMU environment:  \\\"\" \"rm -f \\\"$INSTALLDIR/var/lib/pacman/db.lck\\\"\" \"printf \\\"%s\\\\\\\\n\\\" \\\"DONE\\\"\" \"fi\" \"rm -f \\\"$INSTALLDIR/var/lock/${INSTALLDIR##*}\\$\\$elock\\\"\" \"fi\" \"[ ! -f \"$INSTALLDIR/home/\\$2/.hushlogout\" ] && [ ! -f \"$INSTALLDIR/home/\\$2/.chushlogout\" ] && . /etc/moto\" \"h # write session history to file HOME/.historyfile\" \"## .bash_logout FE\" > \"$INSTALLDIR/home/\\$2/.bash_logout\"\n## $INSTALLDIR$TMXRCHBNDR/keys FE\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNTEU /bin/su - \\\"\\$2\\\" ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\033]2; TermuxArch $STARTBIN elogin %s 📲;DONE 🏁 \\007' \"\\$2\"\nset -Eeuo pipefail\nrm -f \"$INSTALLDIR/home/\\$2/.chushlogin\"\n## [l[ogin]|u[ser] user] Login as user.\nelif [[ \"\\${1//-}\" = [Ll]* ]] || [[ \"\\${1//-}\" = [Uu]* ]]\nthen\n_CHCKUSER_ \"\\$@\"\nprintf '\\033]2; TermuxArch $STARTBIN login %s 📲\\007' \"\\$2\"\nset +Eeuo pipefail\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNTU /bin/su - \\\"\\$2\\\" ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\033]2; TermuxArch $STARTBIN login %s 📲;DONE 🏁 \\007' \"\\$2\"\nset -Eeuo pipefail\n## [raw ARGS] Construct the '$STARTBIN' proot statement.\nelif [[ \"\\${1//-}\" = [Rr]* ]]\nthen\nprintf '\\033]2; TermuxArch $STARTBIN raw %s 📲\\007' \"\\$@\"\nset +Eeuo pipefail\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNT /bin/\\\"\\${@:2}\\\" ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\033]2; TermuxArch $STARTBIN raw %s 📲;DONE 🏁 \\007' \"\\$@\"\nset -Eeuo pipefail\n## [su user command] Login as user and execute command.\nelif [[ \"\\${1//-}\" = [Ss]* ]]\nthen\n_CHCKUSER_ \"\\$@\"\nprintf '\\\\033]2;%s\\\\007' \"TermuxArch $STARTBIN su \\$2 \\${@:3} 📲\"\nif [[ \"\\$2\" = root ]]\nthen\nprintf \"%s\\\\n\" \"Please use this command \\\"$STARTBIN c '\\${@:3}'\\\" for the Arch Linux in TermuxArch PRoot QEMU \\$2 user account;  Exiting...\"\nexit\nfi\n:>\"$INSTALLDIR/home/\\$2/.chushlogin\"\nset +Eeuo pipefail\nEOM\nprintf \"%s\\\\n\" \"$PROOTSTMNTU /bin/su - \\\"\\$2\\\" -c \\\"\\${@:3}\\\" ||:\" >> \"$STARTBIN\"\ncat >> \"$STARTBIN\" <<- EOM\nprintf '\\\\033]2;%s\\\\007' \"TermuxArch $STARTBIN su \\$2 \\${@:3} 📲; DONE 🏁\"\nset -Eeuo pipefail\nrm -f \"$INSTALLDIR/home/\\$2/.chushlogin\"\nelse\n_PRINTUSAGE_\nfi\n## $STARTBIN FE\nEOM\nchmod 700 \"$STARTBIN\"\n}\n\n_MAKEFINISHSETUP_() {\n_DOKEYS_() {\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\nDOKYSKEY=\"$TMXRCHBNDR/keys x86\"\nelif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nDOKYSKEY=\"$TMXRCHBNDR/keys x86_64\"\nelse\nDOKYSKEY=\"$TMXRCHBNDR/keys\"\nfi\n}\n_DOKYLGEN_() {\nDOKYSKEY=\"\"\nLOCGEN=\":\"\n}\n_LOCALEGENPACNEW_() {\nif [ ! -f var/run/lock/\"${INSTALLDIR##*/}\"/locale.gen.pacnew.lock ]\nthen\nif [ -f \"${INSTALLDIR##*/}\"etc/locale.gen.pacnew ]\nthen\ncp -f etc/locale.gen var/backups/\"${INSTALLDIR##*/}\"/etc/locale.gen.\"$SDATE\".bkp && cp -f etc/locale.gen.pacnew etc/locale.gen && :>var/run/lock/\"${INSTALLDIR##*/}\"/locale.gen.pacnew.lock\nfi\nfi\n}\nif [[ \"${LCR:-}\" -eq 5 ]] || [[ -z \"${LCR:-}\" ]]\t# LCR equals 5 or is undefined\nthen\n_DOKEYS_\n_LOCALEGENPACNEW_\nLOCGEN=\"locale-gen || locale-gen\"\nelif [[ \"${LCR:-}\" -eq 1 ]] || [[ \"${LCR:-}\" -eq 2 ]] || [[ \"${LCR:-}\" -eq 3 ]] || [[ \"${LCR:-}\" -eq 4 ]] \t# LCR equals 1 or 2 or 3 or 4\nthen\n_DOKYLGEN_\n_LOCALEGENPACNEW_\nfi\n_CFLHDR_ \"root/bin/$BINFNSTP\"\nprintf \"%s\\\\n\" \"_PMFSESTRING_() {\nprintf \\\"\\\\e[1;31m%s\\\\e[1;37m%s\\\\e[1;32m%s\\\\e[1;37m%s\\\\n\\\\n\\\" \\\"Signal generated in \\\" \\\"'\\$1'\\\" \\\"; Cannot complete task;  \\\" \\\"Continuing...\\\"\nprintf \\\"\\\\e[1;34m%s\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[0;34m%s\\\\e[1;34m%s\\\\n\\\\n\\\" \\\"  If you find better resolves for \\\" \\\"setupTermuxArch\\\" \\\" and \\\" \\\"\\$0\\\" \\\", please open an issue and accompanying pull request.\\\"\n}\n_PMGPSSTRING_() {\nprintf \\\"\\\\n\\\\e[1;34m:: \\\\e[1;32m%s\\\\n\\\" \\\"Processing system for $NASVER $ARCTEVAR, and removing redundant packages for TermuxArch PRoot QEMU...\\\"\n}\" >> root/bin/\"$BINFNSTP\"\n_DOPROXY_\n[ -d \"$INSTALLDIR/run/lock/${INSTALLDIR##*/}\" ] || mkdir -p \"$INSTALLDIR/run/lock/${INSTALLDIR##*/}\"\nprintf \"%s\\\\n\" \"$DOKYSKEY\" >> root/bin/\"$BINFNSTP\"\nif  [[ -z \"${LCR:-}\" ]] || [[ \"${LCR:-}\" -eq 5 ]]\nthen\nif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nprintf \"%s\\\\n\" \"pacman -Su keychain glibc grep gzip pacman-contrib sed sudo --needed --noconfirm --color=always || pacman -Su keychain glibc grep gzip pacman-contrib sed sudo --needed --noconfirm --color=always || _PMFSESTRING_ \\\"pacman -Su keychain glibc grep gzip sed sudo $BINFNSTP ${0##/*}\\\"\" >> root/bin/\"$BINFNSTP\"\nelif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\nprintf \"%s\\\\n\" \"pacman -Su keychain glibc pacman-contrib sed sudo --needed --noconfirm --color=always || pacman -Su keychain glibc sed sudo --needed --noconfirm --color=always || _PMFSESTRING_ \\\"pacman -Su keychain glibc pacman-contrib sed sudo $BINFNSTP ${0##/*}\\\"\" >> root/bin/\"$BINFNSTP\"\nelse\nprintf \"%s\\\\n\" \"pacman -Su keychain glibc pacman-contrib --needed --noconfirm --color=always || pacman -Su keychain glibc pacman -S pacman-contrib --needed --noconfirm --color=always || _PMFSESTRING_ \\\"pacman -Su keychain glibc $BINFNSTP ${0##/*}\\\"\" >> root/bin/\"$BINFNSTP\"\nfi\nfi\nprintf \"%s\\\\n\" \"printf \\\"\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\" \\\"To generate locales in a preferred language, you can use the native Android menu commands \\\" \\\"Settings > System > Input & Language > Language \\\" \\\"in Android;  Then run \\\" \\\"${0##*/} refresh\\\" \\\" for a full system refresh, which includes the locale generation function; For a quick refresh you can use \\\" \\\"${0##*/} r\\\" \\\".  For a refresh with user directories \\\" \\\"${0##*/} re\\\" \\\" can be used.\\\"\n$LOCGEN || _PMFSESTRING_ \\\"LOCGEN $BINFNSTP ${0##/*}.  Please run '$LOCGEN' again in the installed system.\\\"\" >> root/bin/\"$BINFNSTP\"\nprintf \"%s\\\\n\" \"[ -d /home/user ] || printf \\\"\\\\n\\\\e[1;32m==> \\\\e[1;37mRunning TermuxArch command \\\\e[1;32maddauser user\\\\e[1;37m...\\\\n\\\"\" >> root/bin/\"$BINFNSTP\"\nprintf \"%s\\\\n\" \"[ -d /home/user ] || \"$TMXRCHBNDR\"/addauser user || _PMFSESTRING_ \\\"addauser user $BINFNSTP ${0##/*}\\\"\" >> root/bin/\"$BINFNSTP\"\nif [[ \"${LCR:-}\" -eq 3 ]] || [[ \"${LCR:-}\" -eq 4 ]]\nthen\nprintf \"%s\\\\n\" \"locale-gen || locale-gen\" >> root/bin/\"$BINFNSTP\"\nfi\nprintf \"%s\\\\n\" \"# $BINFNSTP FE\" >> root/bin/\"$BINFNSTP\"\nchmod 700 root/bin/\"$BINFNSTP\"\n}\n\n_MAKESETUPBIN_() {\n_CFLHDR_ root/bin/setupbin.bash\nprintf \"%s\\\\n\" \"set +Eeuo pipefail\" >> root/bin/setupbin.bash\nprintf \"%s\\\\n\" \"$PROOTSTMNT /root/bin/$BINFNSTP ||:\" >> root/bin/setupbin.bash\nprintf \"%s\\\\n\" \"# setupbin.bash FE\" >> root/bin/setupbin.bash\nchmod 700 root/bin/setupbin.bash\n}\n\n_SETLANGUAGE_() { ## Function _SETLANGUAGE_ uses device system settings to set locales.  Generating locales in a preferred language should be simple if an exact language match was found.  \"Settings > System > Input & Language > Language\" sets the system language in Android which can be migrated into this system with one of the refresh options;  Command 'setupTermuxArch re' will attempt to update the TermuxArch system overlay with a quick refresh to the newest published version, and attempt to regenerate locales in your preferred language automatically.\nLANGIN=([0]=\"$(getprop user.language)\")\nLANGIN+=([1]=\"$(getprop user.region)\")\nLANGIN+=([2]=\"$(getprop persist.sys.country)\")\nLANGIN+=([3]=\"$(getprop persist.sys.language)\")\nLANGIN+=([4]=\"$(getprop persist.sys.locale)\")\nLANGIN+=([5]=\"$(getprop ro.product.locale)\")\nLANGIN+=([6]=\"$(getprop ro.product.locale.language)\")\nLANGIN+=([7]=\"$(getprop ro.product.locale.region)\")\nULANGUAGE=\"${LANGIN[0]:-C}_${LANGIN[1]:-C}\"\nfor LANGSET in \"${!LANGIN[@]}\"\ndo\nif [[ \"${LANGIN[LANGSET]}\" = *-* ]]\nthen\nULANGUAGE=\"${LANGIN[LANGSET]//-/_}\"\nbreak\nfi\ndone\nprintf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\n\" \"Setting locales to \" \"Language \" \">> $ULANGUAGE << \" \"Region\" \" Please wait a moment.\"\n}\n\n_SETLOCALE_() { ## Function _SETLOCALE_ uses device system settings to set locales.  Generating locales in a preferred language should be simple if an exact language match was found.  \"Settings > System > Input & Language > Language\" sets the system language in Android which can be migrated into this system with one of the refresh options;  Command 'setupTermuxArch re' will attempt to update the TermuxArch system overlay with a quick refresh to the newest published version, and attempt to regenerate locales in your preferred language automatically.\nprintf \"%s\\\\n\" \"##  File locale.conf was generated by ${0##*/} at ${FTIME//-}.\" > etc/locale.conf\nfor LC_N in \"${!LC_TYPE[@]}\"\ndo\nprintf \"%s\\\\n\" \"${LC_TYPE[LC_N]}=$ULANGUAGE.UTF-8\" >> etc/locale.conf\ndone\nset +e\nif grep \"$ULANGUAGE\"\\\\.UTF-8 etc/locale.gen 1>/dev/null\nthen\nsed -i \"/\\\\#$ULANGUAGE.UTF-8 UTF-8/{s/#//g;s/@/-at-/g;}\" etc/locale.gen && printf \"\\\\e[0;32mFound an exact match for language \\\\e[1;32m>> %s <<\\\\e[0;32m to continue locale configuration.  Command \\\\e[1;32m%s refresh\\\\e[0;32m generates locales from device.  Command \\\\e[1;32mlocale-gen\\\\e[0;32m generates locales.\" \"$ULANGUAGE\" \"${0##*/}\"\nelse\nprintf \"\\\\e[0;33mCould not find an exact match for language \\\\e[1;33m>> %s <<\\\\e[0;33m in file /etc/locale.gen.  Please edit files /etc/locale.conf, /etc/locale.gen and .profile.  Then run the command \\\\e[1;33mlocale-gen\\\\e[0;33m to generate locales.  \" \"$ULANGUAGE\"\nfi\n}\n# initkeyfunctions.bash FE\n"
        },
        {
          "name": "knownconfigurations.bash",
          "type": "blob",
          "size": 10.048828125,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n#  Running 'setupTermuxArch manual' will create 'setupTermuxArchConfigs.bash' from this file in the working directory.  Run 'setupTermuxArch' and file 'setupTermuxArchConfigs.bash' loads automatically once created, and file 'knownconfigurations.bash' is ignored at runtime; 'setupTermuxArch help' has additional information.  The mirror (information at https://wiki.archlinux.org/index.php/Mirrors and https://archlinuxarm.org/about/mirrors) can be changed to a desired geographic location in 'setupTermuxArchConfigs.bash' to resolve download, 404 and checksum issues should these take place.  User configurable variables are present in this file for your convenience:\n## DM=aria2c\t\t##  uncomment to use this download tool\n## DM=axel \t\t##  uncomment to use this download tool\n## DM=curl\t\t##  uncomment to use this download tool\n## DM=lftp \t\t##  uncomment to use this download tool\n## DM=wget\t\t##  uncomment to use this download tool\n## DMVERBOSE=\"-v\" \t##  uncomment for verbose download tool output with curl and wget;  For verbose output throughout runtime change this setting in file 'setupTermuxArch' also.\nECHOEXEC=\"\"\t\t##  insert 'echo' to suppress most 'pacman' instructions from 'keys' file during runtime\nECHOSYNC=\"\"\t\t##  insert 'echo' to only suppress 'pacman' syncing instructions from 'keys' file during runtime\nKEEP=0\t\t\t##  change to 1 to delete downloaded image;  Testing the installation process repeatedly can be made easier and lighter on your Internet bandwidth and SAR with 'KEEP=0' and this fragment of code  'mkdir ~/arch; cp ~/ArchLinux*.tar.gz* ~/arch/' and similar.  The variable KEEP when set to 0 (true) will keep the downloaded image and md5 files instead of deleting them for possible reuse.  The root file system image and md5 files can be saved and used again with subsequent installations.\nUSECACHEDIR=0\t\t##  set to 0 in order to use cache directory;  This installation script uses a cache directory that can be used to cache all of the installation files in order to save wireless bandwidth upon subsequent reinstallation.  Variable `KEEP=0` should also be set to 0 in order to keep the downloaded image file and md5 files. The downloaded image and md5 files can be moved to CACHEDIR from INSTALLDIR/var/cache/pacman/pkg with the command 'trim' in order to avoid redownloading files in order to reinstall the Arch Linux system in Termux PRoot QEMU.\nCACHLCTN=\"/storage/emulated/0\"\t##  change to external sdcard path if desired.\nCACHEDIR=\"$CACHLCTN/Android/data/com.termux/files/cache/archlinux/$ARCTEVAR/\"\nPREFIXDATAFILES=\"$CACHLCTN/Android/data/com.termux/\"\n# KID=1\t\t\t##  do not change, not user configurable;  Used for testing, timing and development.   For timing Arch Linux in PRoot, uncomment and then run script TermuxArch/scripts/frags/stdoutbench.sh in Arch Linux PRoot for timing Arch Linux in PRoot.\n##  If there are system image files available not listed here please open an issue and a pull request.\n\n_AARCH64ANDROID_() {\nIFILE=\"ArchLinuxARM-aarch64-latest.tar.gz\"\nCMIRROR=\"os.archlinuxarm.org\"\nRPATH=\"os\"\n_MAKESYSTEM_\n}\n\n_AARCH64CHROME_() {\nIFILE=\"ArchLinuxARM-aarch64-chromebook-latest.tar.gz\"\nCMIRROR=\"os.archlinuxarm.org\"\nRPATH=\"os\"\n_MAKESYSTEM_\n}\n\n_ARMV5L_() {\nIFILE=\"ArchLinuxARM-armv5-latest.tar.gz\"\nCMIRROR=\"os.archlinuxarm.org\"\nRPATH=\"os\"\n_MAKESYSTEM_\n}\n\n_ARMV7ANDROID_() {\nIFILE=\"ArchLinuxARM-armv7-latest.tar.gz\"\nCMIRROR=\"os.archlinuxarm.org\"\nRPATH=\"os\"\n_MAKESYSTEM_\n}\n\n_ARMV7CHROME_() {\nIFILE=\"ArchLinuxARM-armv7-chromebook-latest.tar.gz\"\nCMIRROR=\"os.archlinuxarm.org\"\nRPATH=\"os\"\n_MAKESYSTEM_\n}\n\n##  Information at https://www.archlinux.org/news/phasing-out-i686-support/ and https://archlinux32.org/ regarding why i686 is currently frozen at release 2017.03.01-i686.\n##  UPDATE: These topics have the most current information about Arch Linux 32 [Implementing QEMU #25](https://github.com/TermuxArch/TermuxArch/issues/25) and  [[SOLVED - Hurrah!] Upgrading from a truly ancient install.](https://bbs.archlinux32.org/viewtopic.php?id=2982)\n_I686_() { # IFILE is read from md5sums.txt\nCMIRROR=\"archive.archlinux.org\"\nRPATH=\"iso/2017.03.01\"\n_MAKESYSTEM_\n}\n\n_X86_64_() { # IFILE is read from md5sums.txt\nCMIRROR=\"mirror.rackspace.com\"\nRPATH=\"archlinux/iso/latest\"\n_MAKESYSTEM_\n}\n\n##  Appending to the PRoot statement can be accomplished on the fly by creating a .prs file in the var/binds directory.  The format is straightforward, 'PROOTSTMNT+=\"option command \"'.  The space is required before the last double quote.  Commands 'info proot' and 'man proot' have more information about what can be configured in a proot init statement.  If more suitable configurations are found, share them at https://github.com/TermuxArch/TermuxArch/issues to improve TermuxArch.  PRoot bind usage: PROOTSTMNT+=\"-b host_path:guest_path \"  The space before the last double quote is necessary.\n\n_PR00TSTRING_() { # construct the PRoot init statement\n[[ -z \"${QEMUCR:-}\" ]] && CPUABI=\"$(getprop ro.product.cpu.abi)\" && SYSVER=\"$(getprop ro.build.version.release)\" && NASVER=\"$(getprop net.bt.name ) $SYSVER\" || [[ $QEMUCR=\"0\" ]] && SYSVER=\"$(getprop ro.build.version.release)\" && NASVER=\"$(getprop net.bt.name) $SYSVER $(getprop ro.product.cpu.abi)\" || _PSGI1ESTRING_ \"CPUABI knownconfigurations.bash ${0##*/}\"\nPROOTSTMNT=\"exec proot \"\nif [[ -z \"${KID:-}\" ]]\nthen\t# command 'grep -w KID *h' shows variable KID usage\nPROOTSTMNT+=\"--kernel-release=$UNAMER \"\nelif [[ \"$KID\" = 0 ]]\nthen\nPROOTSTMNT+=\"--kernel-release=4.14.16 \"\nelse\nPROOTSTMNT+=\"\"\nfi\nPROOTSTMNT+=\"--kill-on-exit --sysvipc --link2symlink -i \\\"\\$2:wheel\\\" -0 -r $INSTALLDIR \"\nif [[ \"${QEMUCR:-}\" == 0 ]]\nthen\nPROOTSTMNT+=\"-q $PREFIX/bin/qemu-$ARCTEVAR \"\nfi\n##  Function _PR00TSTRING_ which creates the PRoot init statement PROOTSTMNT uses associative arrays.  Page https://www.gnu.org/software/bash/manual/html_node/Arrays.html has information about BASH arrays and is also available at https://www.gnu.org/software/bash/manual/ this link.\ndeclare -A PRSTARR # associative array\n# populate writable binds\nPRSTARR=([/dev/ashmem]=/dev/ashmem [/dev/kvm]=/dev/kvm [/dev/shm]=/dev/shm)\nfor PRBIND in ${!PRSTARR[@]}\ndo\nif [[ -w \"$PRBIND\" ]]\t# is writable\nthen\t# add proot bind\nPROOTSTMNT+=\"-b $PRBIND:$PRBIND \"\nfi\ndone\n# populate readable binds\nPRSTARR=([\"$EXTERNAL_STORAGE\"]=\"$EXTERNAL_STORAGE\" [\"$HOME\"]=\"$HOME\" [\"$PREFIX\"]=\"$PREFIX\" [/apex/]=/apex/ [/data/dalvik-cache/]=/data/dalvik-cache/ [/dev/]=/dev/ [/dev/urandom]=/dev/random [/linkerconfig/ld.config.txt]=/linkerconfig/ld.config.txt [/plat_property_contexts]=/plat_property_contexts [/property_contexts]=/property_contexts [/proc/]=/proc/ [/proc/self/fd]=/dev/fd [/proc/self/fd/0]=/dev/stdin [/proc/self/fd/1]=/dev/stdout [/proc/self/fd/2]=/dev/stderr [/proc/stat]=/proc/stat [/property_contexts]=/property_contexts [/storage/]=/storage/ [/system/]=/system/ [/vendor/]=/vendor/)\nfor PRBIND in ${!PRSTARR[@]}\ndo\nif [[ -r \"$PRBIND\" ]]\t# is readable\nthen\t# add proot bind\nPROOTSTMNT+=\"-b $PRBIND:${PRSTARR[$PRBIND]} \"\nfi\ndone\n[[ \"$SYSVER\" -ge 10 ]] && PROOTSTMNT+=\"-b /apex -b /storage -b /sys -b /system -b /vendor \"\n# populate NOT readable binds\nPRSTARR=([/dev/]=/dev/ [/dev/ashmem]=\"$INSTALLDIR/tmp\" [/dev/kvm]=\"$INSTALLDIR/var/binds/fbindkvm\" [/dev/shm]=\"$INSTALLDIR/tmp\" [/proc/loadavg]=\"$INSTALLDIR/var/binds/fbindprocloadavg\" [/proc/pcidevices]=\"$INSTALLDIR/var/binds/fbindprocpcidevices\" [/proc/shmem]=\"$INSTALLDIR/var/binds/fbindprocshmem\" [/proc/stat]=\"$INSTALLDIR/var/binds/fbindprocstat\" [/proc/uptime]=\"$INSTALLDIR/var/binds/fbindprocuptime\" [/proc/vmstat]=\"$INSTALLDIR/var/binds/fbindprocvmstat\" [/proc/version]=\"$INSTALLDIR/var/binds/fbindprocversion\" [/sys/devices]=\"$INSTALLDIR/var/binds/fbindsysdevices\")\nfor PRBIND in ${!PRSTARR[@]}\ndo\nif [[ ! -r \"$PRBIND\" ]]\t# is not readable\nthen\t# add proot bind\nPROOTSTMNT+=\"-b ${PRSTARR[$PRBIND]}:$PRBIND \"\nfi\ndone\n# file var/binds/fbindexample.prs has examples\nif [[ -n \"$(ls -A \"$INSTALLDIR\"/var/binds/*.prs)\" ]]\nthen\nfor PRSFILES in \"$INSTALLDIR\"/var/binds/*.prs\ndo\n. \"$PRSFILES\"\ndone\nfi\nPROOTSTMNT+=\"-b /data/data/com.termux/files/usr/tmp:/tmp -w /root /usr/bin/env -i HOME=/root TERM=\\\"$TERM\\\" TMPDIR=/tmp ANDROID_DATA=/data \"\nPROOTSTMNTU=\"${PROOTSTMNT//HOME=\\/root/HOME=\\/home\\/\\$2}\"\nPROOTSTMNTU=\"${PROOTSTMNTU//-0 }\"\nPROOTSTMNTU=\"${PROOTSTMNTU//-w \\/root/-w \\/home\\/\\$2}\" # PRoot user string with link2symlink option enabled\nPROOTSTMNTEU=\"${PROOTSTMNTU//--link2symlink }\" # PRoot user string with link2symlink option disabled\nPROOTSTMNT=\"${PROOTSTMNT//-i \\\"\\$2:wheel\\\" }\" # PRoot root user string\n}\n_PR00TSTRING_\n##  printf \"\\\\n%s\\\\n\" \"PROOTSTMNT string [root]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNT:-}\" && printf \"%s\\\\n\" \"PROOTSTMNTC string [root command]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNTU:-}\" && printf \"%s\\\\n\" \"PROOTSTMNTEU string [elogin]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNTU:-}\" && printf \"%s\\\\n\" \"PROOTSTMNTU string [login]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNTU:-}\" && printf \"%s\\\\n\" \"PROOTSTMNTPRTR string [raw]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNT:-}\" && printf \"%s\\\\n\" \"PROOTSTMNTPSLC string [su login command]:\" && printf \"%s\\\\n\\\\n\" \"${PROOTSTMNT:-}\" && exit\n##  The commands 'setupTermuxArch r[e[fresh]]' can be used to regenerate the start script to the newest version if there is a newer version published and can be customized as wanted.  Command 'setupTermuxArch refresh' will refresh the installation globally, including executing 'keys' and 'locales-gen' and backup user configuration files that were initially created and are refreshed.  The command 'setupTermuxArch re' will refresh the installation and update user configuration files and backup user configuration files that were initially created and are refreshed.  Command 'setupTermuxArch r' will only refresh the installation and update the root user configuration files and backup root user configuration files that were initially created and are refreshed.\n# knownconfigurations.bash FE\n"
        },
        {
          "name": "maintenanceroutines.bash",
          "type": "blob",
          "size": 19.85546875,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n\n_COPYIMAGE_() { # A systemimage.tar.gz file can be used: 'setupTermuxArch ./[path/]systemimage.tar.gz' and 'setupTermuxArch /absolutepath/systemimage.tar.gz'\nif [[ \"$LCP\" = \"0\" ]]\nthen\nprintf \"%s\\\\n\" \"Copying $GFILE.md5 to $INSTALLDIR...\"\ncp \"$GFILE\".md5  \"$INSTALLDIR\"\nprintf \"%s\\\\n\" \"Copying $GFILE to $INSTALLDIR...\"\ncp \"$GFILE\" \"$INSTALLDIR\"\nelif [[ \"$LCP\" = \"1\" ]]\nthen\nprintf \"%s\\\\n\" \"Copying $GFILE.md5 to $INSTALLDIR...\"\ncp \"$WDIR$GFILE\".md5  \"$INSTALLDIR\"\nprintf \"%s\\\\n\" \"Copying $GFILE to $INSTALLDIR...\"\ncp \"$WDIR$GFILE\" \"$INSTALLDIR\"\nfi\nGFILE=\"${GFILE##/*/}\"\nIFILE=\"${GFILE##*/}\"\n}\n\n_DOFUNLCR2_() {\n_BKPTHF_() { # backup file to backup file directory\ncp \"$INSTALLDIR/home/$TALUSER/$DOFLNAME\" \"$BKPDIR/$DOFLNAME.$SDATE.bkp\" && printf \"\\\\e[0;32mFile '%s' backed up to '\\\\e[1;32m%s\\\\e[0;32m'.  \" \"$INSTALLDIR/home/$TALUSER/$DOFLNAME\" \"$BKPDIR/$DOFLNAME.$SDATE.bkp\"\n}\n_CPYFRT_() { # copy file from root login to user\ncp \"$INSTALLDIR/root/$DOFLNAME\" \"$INSTALLDIR/home/$TALUSER/\" && printf \"\\\\e[0;32mFile '%s' copied to '\\\\e[1;32m%s\\\\e[0;32m'.  \" \"${INSTALLDIR##*/}/root/$DOFLNAME\" \"${INSTALLDIR##*/}/home/$TALUSER/$DOFLNAME\"\n}\nBKPDIR=\"$INSTALLDIR/var/backups/${INSTALLDIR##*/}/home/$TALUSER\"\n[ -d \"$BKPDIR\" ] || mkdir -p \"$BKPDIR\"\nif [ \"$TALUSER\" != alarm ]\nthen\nDOFLIST_=(.bash_logout .bash_profile .bashrc .cshrc .emacs .gitconfig .initrc .inputrc .vimrc .profile .zshrc)\nfor DOFLNAME in \"${DOFLIST_[@]}\"\ndo\nprintf \"\\\\n\\\\e[0;32mProcessing user \\\\e[1;32m%s\\\\e[0;32m file \\\\e[1;32m%s\\\\e[0;32m.  \" \"$TALUSER\" \"$DOFLNAME\"\nif [ -f \"$INSTALLDIR/root/$DOFLNAME\" ] && [ -f \"$INSTALLDIR/home/$TALUSER/$DOFLNAME\" ]\nthen\ndiff \"$INSTALLDIR/root/$DOFLNAME\" \"$INSTALLDIR/home/$TALUSER/$DOFLNAME\" 1>/dev/null || { _BKPTHF_ && _CPYFRT_ ; }\nelif [ -f \"$INSTALLDIR/root/$DOFLNAME\" ] && [ ! -f \"$INSTALLDIR/home/$TALUSER/$DOFLNAME\" ]\nthen\n_CPYFRT_\nfi\ndone\nfi\n}\n\n_DOTHRF_() { # do the root user files\n[ -f $1 ] && { printf \"\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[0m\\\\n\" \"==>\" \" cp $1 /var/backups/${INSTALLDIR##*/}/$1.$SDATE.bkp\" && cp \"$1\" \"$INSTALLDIR/var/backups/${INSTALLDIR##*/}/$1.$SDATE.bkp\" ; } || printf \"%s\" \"copy file '$1' if found; file not found; continuing; \"\n}\n\n_FUNLCR2_() { # copy from root to home\nexport FLCRVAR=($(ls home/))\nfor TALUSER in \"${FLCRVAR[@]}\"\ndo\n_DOFUNLCR2_\ndone\n}\n\n_PPLCACHEDIR_() {\nprintf '\\e[0;32mPopulating from cache files:  \\e[1;32mBEGUN…\\n\\e[0;32mThe \\e[1;32m%s\\e[0;32m command can be used to populate the cache.  The command \\e[1;32m%s\\e[0;32m will repopulate the installation package files from the cache directory and update the TermuxArch files to the newest published version.\\n\\e[1;32m' \"'trim'\" \"'${0##*/} ref'\"\n\n{ [ -e \"$CACHEDIR\" ] && cd \"$CACHEDIR\" && printf '%s' \"cd $CACHEDIR && \" ; } || { cd \"$PREFIXDATAFILES\" && mkdir -p \"$PREFIXDATAFILESUFIX\" && cd \"$CACHEDIR\" && printf '%s\\n' \"cd $PREFIXDATAFILES && mkdir -p $PREFIXDATAFILESUFIX && cd $CACHEDIR && \" ; } || exit 196\ncd \"$INSTALLDIR\" && printf '%s\\n' \"cd $INSTALLDIR\" || exit 196\nfind \"$CACHEDIR\" -type f -name \"*tar.gz*\" -exec ln -s {} \\; 2>/dev/null\n[ -d \"$INSTALLDIR\"/var/cache/pacman/pkg ] || { mkdir -p \"$INSTALLDIR\"/var/cache/pacman/pkg && printf '%s' \"mkdir -p $INSTALLDIR/var/cache/pacman/pkg && \" ; }\ncd \"$INSTALLDIR\"/var/cache/pacman/pkg && printf '%s\\n' \"cd $INSTALLDIR/var/cache/pacman/pkg\" || exit 196\nprintf '%s\\n' \"find \"$CACHEDIR$CACHEDIRSUFIX\" -type f -exec ln -s {} \\;\" && find \"$CACHEDIR$CACHEDIRSUFIX\" -type f -exec ln -s {} \\; 2>/dev/null\ncd \"$INSTALLDIR\" && printf '%s\\n' \"cd $INSTALLDIR\" || exit 196\nprintf '\\e[0;32mPopulating from cache files:  \\e[1;32mDONE\\n\\n'\n}\n\n_DOUSECACHEDIR_() {\nif { [ \"$USECACHEDIR\" = 0 ] && [ -z \"${LCR:-}\" ] ; } || { [ \"$USECACHEDIR\" = 0 ] && [ \"${LCR:-}\" = 3 ] ; }\nthen\n_PPLCACHEDIR_\nfi\n}\n\n_LOADIMAGE_() {\n_NAMESTARTARCH_\n_SPACEINFO_\nprintf \"\\\\n\"\n_PREPINSTALLDIR_\n_COPYIMAGE_\n_MD5CHECK_\n_PRINTCU_\nrm -f \"$INSTALLDIR\"/*.tar.gz \"$INSTALLDIR\"/*.tar.gz.md5\n_PRINTDONE_\n_PRINTCONFIGUP_\n_TOUCHUPSYS_\nprintf \"\\\\n\"\n_PRINTFOOTER_\nset +Eeuo pipefail\n\"$INSTALLDIR/$STARTBIN\" || _PRINTPROOTERROR_\nset -Eeuo pipefail\n_PRINTFOOTER2_\n_PRINTSTARTBIN_USAGE_\nexit\n}\n\n_FIXOWNER_() { # fix owner of INSTALLDIR/home/USER, PR by @petkar\n_DOFIXOWNER_() {\nprintf \"\\\\e[0;32m%s\" \"Adjusting ownership and permissions: BEGUN\"\nFXARR=\"$(ls \"$INSTALLDIR/home\")\"\nfor TALUSER in ${FXARR[@]}\ndo\nif [[ \"$TALUSER\" != alarm ]]\nthen\n$STARTBIN c \"chmod 777 $INSTALLDIR/home/$TALUSER\"\n$STARTBIN c \"chown -R $TALUSER:$TALUSER $INSTALLDIR/home/$TALUSER\"\nfi\ndone\nprintf \"\\\\e[0;32m%s\\\\e[0m\\\\n\" \": DONE\"\n}\n# _DOFIXOWNER_ || _PSGI1ESTRING_ \"_DOFIXOWNER_ maintenanceroutines.bash ${0##*/}\"\n}\n\n_REFRESHSYS_() { # refresh installation\nprintf '\\033]2; setupTermuxArch refresh 📲 \\007'\n_NAMESTARTARCH_\n_SPACEINFO_\n_PREPINSTALLDIR_\n_DOUSECACHEDIR_\n_SETLOCALE_\nprintf \"\\\\n\"\nprintf \"\\\\e[1;32m==> \\\\e[1;37m%s \\\\e[1;32m%s %s...\\\\n\" \"Running\" \"${0##*/}\" \"$ARGS\"\n\"$INSTALLDIR\"/root/bin/setupbin.bash || _PRINTPROOTERROR_\nrm -f root/bin/finishsetup.bash\nrm -f root/bin/setupbin.bash\nprintf \"\\\\n\\\\e[1;32mFiles updated to the newest version %s:\\\\n\\\\e[0;32m\" \"$VERSIONID\"\nls \"$INSTALLDIR/$STARTBIN\" | cut -f7- -d /\nls \"$INSTALLDIR\"/bin/we | cut -f7- -d /\nls \"$INSTALLDIR\"/root/.bashrc | cut -f7- -d /\nls \"$INSTALLDIR\"/root/.bash_profile | cut -f7- -d /\nls \"$INSTALLDIR\"/root/.vimrc | cut -f7- -d /\nls \"$INSTALLDIR\"/root/.gitconfig | cut -f7- -d /\nprintf \"\\\\n\\\\e[1;32m%s\\\\n\\\\e[0;32m\" \"Files updated to the newest version $VERSIONID in directory ~/${INSTALLDIR##*/}$TMXRCHBNDR/:\"\nls \"$INSTALLDIR$TMXRCHBNDR/\"\nif [[ \"${LCR:-}\" = 2 ]] || [[ \"${LCR:-}\" = 3 ]] || [[ \"${LCR:-}\" = 4 ]] || [[ \"${LCR:-}\" = 5 ]]\nthen\n_FUNLCR2_\n_SHFUNCWRAP_\nelse\nprintf \"\\\\n\\\\e[0;32mIn order to refresh user directories, please use '\\\\e[1;32m%s re[fresh]\\\\e[0;32m'.  \" \"${0##*/}\"\nfi\nprintf \"\\\\n\"\n_PRINTFOOTER_\nset +Eeuo pipefail\n$STARTBIN || _PRINTPROOTERROR_\nset -Eeuo pipefail\n_PRINTFOOTER2_\n_PRINTSTARTBIN_USAGE_\nexit\n}\n\n_SHFUNC_ () {\n_SHFDFUNC_ () {\nSHFD=\"$(find \"$RMDIR\" -type d -printf '%03d %p\\n' | sort -r -n -k 1 | cut -d\" \" -f 2)\"\nfor SHF1D in $SHFD\ndo\nrmdir \"$SHF1D\" || printf \"%s\" \"Cannot 'rmdir $SHF1D': Continuing...\"\ndone\n}\nprintf \"\\n%s\\n\" \"Script '${0##*/}' checking and fixing permissions in directory '$PWD': STARTED...\"\nSDIRS=\"apex data host-rootfs sdcard storage system vendor\"\nfor SDIR in $SDIRS\ndo\nRMDIR=\"$INSTALLDIR/$SDIR\"\n[ -d \"$RMDIR\" ] && { chmod 755 \"$RMDIR\" ; printf \"%s\" \"Deleting superfluous '$RMDIR' directory: \" && { rmdir \"$RMDIR\" || _SHFDFUNC_ ; } && printf \"%s\\n\" \"Continuing...\" ; }\ndone\nPERRS=\"$(du \"$INSTALLDIR\" 2>&1 >/dev/null ||:)\"\nPERRS=\"$(sed \"s/du: cannot read directory '//g\" <<< \"$PERRS\" | sed \"s/': Permission denied//g\")\"\n[ -z \"$PERRS\" ] || { printf \"%s\" \"Fixing  permissions in '$INSTALLDIR': \" && for PERR in $PERRS ; do chmod 777 \"$PERR\" ; done && printf \"%s\\n\" \"DONE\" ; } || printf \"%s\" \"Fixing  permissions signal PERRS: Continuing...\"\nprintf \"%s\\n\" \"Script '${0##*/}' checking and fixing permissions: DONE\"\n}\n\n_SHFUNCWRAP_ () {\nif [[ \"${LCR:-}\" -eq 3 ]] || [[ \"${LCR:-}\" -eq 4 ]] || [[ \"${LCR:-}\" -eq 5 ]]\nthen\n_PREPPACMANCONF_\nFNDTMPROOT=($(find \"$TMPDIR\" -maxdepth 1 -type d -name \"proot*\"))\nif [ ${#FNDTMPROOT[@]} = 0 ]\nthen\n_SHFUNC_ \"$@\"\nelse\nif [ ${#FNDTMPROOT[@]} = 1 ]\nthen\nprintf \"\\\\n\\\\e[0;34m%s\" \"Found ${#FNDTMPROOT[@]} open Termux PRoot QEMU session;  Not checking for errors.\"\nelse\nprintf \"\\\\n\\\\e[0;34m%s\" \"Found ${#FNDTMPROOT[@]} open Termux PRoot QEMU sessions;  Not checking for errors.\"\nfi\nfi\nfi\n}\n\n_SPACEINFO_() {\ndeclare SPACEMESSAGE=\"\"\nunits=\"$(df \"$INSTALLDIR\" | awk 'FNR == 1 {print $2}')\"\nif [[ \"$units\" = Size ]]\nthen\n_SPACEINFOGSIZE_\nprintf \"$SPACEMESSAGE\"\nelif [[ \"$units\" = 1K-blocks ]]\nthen\n_SPACEINFOKSIZE_\nprintf \"$SPACEMESSAGE\"\nfi\n}\n\n_SPACEINFOGSIZE_() {\n_USERSPACE_\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]] || [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nif [[ \"$USRSPACE\" = *G ]]\nthen\nSPACEMESSAGE=\"\"\nelif [[ \"$USRSPACE\" = *M ]]\nthen\nUSSPACE=\"${USRSPACE: : -1}\"\nfi\nif [[ \"$USSPACE\" -lt \"800\" ]] && [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  \\\\e[33mThere is only $USRSPACE of free user space is available on this device.  \\\\e[1;30mThe recommended minimum to install Arch Linux in Termux PRoot for x86_64 architecture is 800M of free user space.\\\\e[0m\\\\n\"\nfi\nif [[ \"$USSPACE\" -lt \"600\" ]] && [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  \\\\e[33mThere is only $USRSPACE of free user space is available on this device.  \\\\e[1;30mThe recommended minimum to install Arch Linux in Termux PRoot for $CPUABI architecture is 600M of free user space.\\\\e[0m\\\\n\"\nfi\nelif [[ \"$USRSPACE\" = *G ]]\nthen\nUSSPACE=\"${USRSPACE: : -1}\"\nif [[ \"$CPUABI\" = \"$CPUABI8\" ]]\nthen\nif [[ \"$USSPACE\" -le \"1.5\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  \\\\e[33mThere is only $USRSPACE of free user space is available on this device.  \\\\e[1;30mThe recommended minimum to install Arch Linux in Termux PRoot for aarch64 architecture is 1.5G of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nelif [[ \"$CPUABI\" = \"$CPUABI7\" ]]\nthen\nif [[ \"$USSPACE\" -le \"1.23\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  \\\\e[33mThere is only $USRSPACE of free user space is available on this device.  \\\\e[1;30mThe recommended minimum to install Arch Linux in Termux PRoot for armv7 architecture is 1.23G of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nelse\nSPACEMESSAGE=\"\"\nfi\nelse\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  \\\\e[33mThere is only $USRSPACE of free user space is available on this device.  \\\\e[1;30mThe recommended minimum to install Arch Linux in Termux PRoot is more than 1.5G for aarch64, more than 1.25G for armv7, 800M for x86_64 and 600M of free user space for x86 architecture.\\\\e[0m\\\\n\"\nfi\n}\n\n_SPACEINFOKSIZE_() {\n_USERSPACE_\nif [[ \"$CPUABI\" = \"$CPUABI8\" ]]\nthen\nif [[ \"$USRSPACE\" -lt \"1500000\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  There is only \\\\e[33m$USRSPACE $units of free user space \\\\e[1;30mavailable on this device.  The recommended minimum to install Arch Linux in Termux PRoot for aarch64 architecture is 1.5G of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nelif [[ \"$CPUABI\" = \"$CPUABI7\" ]]\nthen\nif [[ \"$USRSPACE\" -lt \"1250000\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  There is only \\\\e[33m$USRSPACE $units of free user space \\\\e[1;30mavailable on this device.  The recommended minimum to install Arch Linux in Termux PRoot for armv7 architecture is 1.25G of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nelif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nif [[ \"$USRSPACE\" -lt \"800000\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  There is only \\\\e[33m$USRSPACE $units of free user space \\\\e[1;30mavailable on this device.  The recommended minimum to install Arch Linux in Termux PRoot for x86_64 architecture is 800M of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nelif [[ \"$CPUABI\" = \"$CPUABIX86\" ]] || [[ \"$CPUABI\" = \"i386\" ]]\nthen\nif [[ \"$USRSPACE\" -lt \"600000\" ]]\nthen\nSPACEMESSAGE=\"\\\\e[0;33mＴｅｒｍｕｘＡｒｃｈ: \\\\e[1;33mFREE SPACE NOTICE!  \\\\e[1;30mStart thinking about cleaning out some stuff please.  There is only \\\\e[33m$USRSPACE $units of free user space \\\\e[1;30mavailable on this device.  The recommended minimum to install Arch Linux in Termux PRoot for $CPUABI architecture is 600M of free user space.\\\\e[0m\\\\n\"\nelse\nSPACEMESSAGE=\"\"\nfi\nfi\n}\n\n_SYSINFO_() {\n_NAMESTARTARCH_\n_SPACEINFO_\nprintf \"\\\\e[38;5;76m\"\nprintf \"%s\\\\n\" \"Generating TermuxArch version $VERSIONID system information;  Please wait...\"\n_TASPINNER_ clock & _SYSTEMINFO_ ; kill $! || _PRINTERRORMSG_ \"_SYSINFO_ _SYSTEMINFO_ ${0##*/} maintenanceroutines.bash\"\ncat \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n\\\\e[1mPlease share relevant system information along with an issue and pull request at https://github.com/TermuxArch/TermuxArch/issues and also include the input and output with information which may be quite important when planning issues at https://github.com/TermuxArch/TermuxArch/issues with the hope of improving this script, \\'%s\\'.\\\\n\\\\nIf you believe screenshots will help in a quicker resolution for an issue, also include them as well.  Please include the input as well as the output, along with screenshots relrevant to Xserver on Android device, and similar.\\\\n\\\\n\" \"${0##*/}\"\nexit\n}\n\n_SYSTEMINFO_ () {\nprintf \"%s\\\\n\" \"dpkg --print-architecture result:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ndpkg --print-architecture >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"uname -a results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nuname -a >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nfor n in 0 1 2 3 4 5\ndo\nprintf \"%s\\\\n\" \"BASH_VERSINFO[$n] = ${BASH_VERSINFO[$n]}\"  >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ndone\nprintf \"\\\\n%s\\\\n\" \"cat /proc/cpuinfo results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ncat /proc/cpuinfo >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"getprop | grep product.cpu results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ngetprop | grep product.cpu >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"getprop | grep net. results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ngetprop | grep net\\\\. >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\nFurther getprop results:\\\\n\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop gsm.sim.operator.iso-country]:\" \"[$(getprop gsm.sim.operator.iso-country)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop persist.sys.locale]:\" \"[$(getprop persist.sys.locale)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.build.target_country]:\" \"[$(getprop ro.build.target_country)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.build.version.release]:\" \"[$SYSVER]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.build.version.preview_sdk]:\" \"[$(getprop ro.build.version.preview_sdk)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.build.version.sdk]:\" \"[$(getprop ro.build.version.sdk)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.com.google.clientidbase]:\" \"[$(getprop ro.com.google.clientidbase)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.com.google.clientidbase.am]:\" \"[$(getprop ro.com.google.clientidbase.am)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.com.google.clientidbase.ms]:\" \"[$(getprop ro.com.google.clientidbase.ms)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.product.device]:\" \"[$(getprop ro.product.device)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.product.first_api_level]:\" \"[$(getprop ro.product.first_api_level)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.product.locale]:\" \"[$(getprop ro.product.locale)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.product.manufacturer]:\" \"[$(getprop ro.product.manufacturer)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"%s %s\\\\n\" \"[getprop ro.product.model]:\" \"[$(getprop ro.product.model)]\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"Download directory information results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /sdcard/Download ]] && printf \"%s\\\\n\" \"/sdcard/Download exists\" || printf \"%s\\\\n\" \"/sdcard/Download not found\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /storage/emulated/0/Download ]] && printf \"%s\\\\n\" \"/storage/emulated/0/Download exists\" || printf \"%s\\\\n\" \"/storage/emulated/0/Download not found\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e \"$HOME\"/downloads ]] && printf \"%s\\\\n\" \"$HOME/downloads exists\" || printf \"%s\\\\n\" \"~/downloads not found\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e \"$HOME\"/storage/downloads ]] && printf \"%s\\\\n\" \"$HOME/storage/downloads exists\" || printf \"%s\\\\n\" \"$HOME/storage/downloads not found\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"Device information results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /dev/ashmem ]] && printf \"%s\\\\n\" \"/dev/ashmem exists\" || printf \"%s\\\\n\" \"/dev/ashmem does not exist\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -r /dev/ashmem ]] && printf \"%s\\\\n\" \"/dev/ashmem is readable\" || printf \"%s\\\\n\" \"/dev/ashmem is not readable\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -w /dev/ashmem ]] && printf \"%s\\\\n\" \"/dev/ashmem is writable\" || printf \"%s\\\\n\" \"/dev/ashmem is not writable\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\" \"Ascertaining system information;  Please wait a moment  \"\n[[ -e /dev/shm ]] && printf \"%s\\\\n\" \"/dev/shm exists\" || printf \"%s\\\\n\" \"/dev/shm does not exist\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -r /dev/shm ]] && printf \"%s\\\\n\" \"/dev/shm is readable\" || printf \"%s\\\\n\" \"/dev/shm is not readable\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /proc/stat ]] && printf \"%s\\\\n\" \"/proc/stat exits\" || printf \"%s\\\\n\" \"/proc/stat does not exit\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -r /proc/stat ]] && printf \"%s\\\\n\" \"/proc/stat is readable\" || printf \"%s\\\\n\" \"/proc/stat is not readable\">> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /sys/ashmem ]] && printf \"%s\\\\n\" \"/sys/ashmmem exists\" || printf \"%s\\\\n\" \"/sys/ashmmem does not exist\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -r /sys/ashmmem ]] && printf \"%s\\\\n\" \"/sys/ashmmem is readable\" || printf \"%s\\\\n\" \"/sys/ashmmem is not readable\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -e /sys/shm ]] && printf \"%s\\\\n\" \"/sys/shm exists\" || printf \"%s\\\\n\" \"/sys/shm does not exist\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n[[ -r /sys/shm ]] && printf \"%s\\\\n\" \"/sys/shm is readable\" || printf \"%s\\\\n\" \"/sys/shm is not readable\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"Disk report $USRSPACE on /data $(date)\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\n\" \"df $INSTALLDIR results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ndf \"$INSTALLDIR\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log ||:\nprintf \"\\\\n%s\\\\n\" \"df results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ndf >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log ||:\nprintf \"\\\\n%s\\\\n\" \"du -hs $INSTALLDIR results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\ndu -hs \"$INSTALLDIR\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log ||:\nprintf \"\\\\n%s\\\\n\" \"ls -al $INSTALLDIR results:\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nls -al \"$INSTALLDIR\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log ||:\nprintf \"\\\\n%s\\\\n\" \"This file is found at '${WDIR}setupTermuxArchSysInfo$STIME.log'.\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\nprintf \"\\\\n%s\\\\e[0m\\\\n\" \"End 'setupTermuxArchSysInfo$STIME.log' version $VERSIONID system information.\" >> \"${WDIR}setupTermuxArchSysInfo$STIME\".log\n}\n\n_USERSPACE_() {\nUSRSPACE=\"$(df \"$INSTALLDIR\" | awk 'FNR == 2 {print $4}')\"\nif [[ \"$USRSPACE\" = \"\" ]]\nthen\nUSRSPACE=\"$(df \"$INSTALLDIR\" | awk 'FNR == 3 {print $3}')\"\nfi\n}\n# maintenanceroutines.bash FE\n"
        },
        {
          "name": "necessaryfunctions.bash",
          "type": "blob",
          "size": 9.734375,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n################################################################################\n_PRNT_ () { printf \"%s\\\\n\" \"$1\" ; }\t# print message with one trialing newline\n_PRT_ () { printf \"%s\" \"$1\" ; }\t# print message with no trialing newline\n_QEMUCFCK_() {\nif [[ -f \"$INSTALLDIR/$STARTBIN\" ]] && grep proot \"$INSTALLDIR/$STARTBIN\" | grep -m1 qemu 1>/dev/null\nthen    # set installed qemu architecture\nARCTEVAR=\"$(grep proot \"$INSTALLDIR/$STARTBIN\" | grep -m1 qemu)\"\nARCTEVAR=\"$(cut -d\" \" -f1 <<< ${ARCTEVAR#*qemu-})\"\n[ \"${ARCTEVAR:-}\" = x86 ] && ARCTEVAR=\"i386\"\nfor RCTFVR in ${ALLRCTFVR[@]}\ndo\nif [ \"$RCTFVR\" = \"${ARCTEVAR:-}\" ]\nthen\nINCOMM=\"qemu-user-${ARCTEVAR:-}\" && QEMUCR=0\nbreak\nfi\ndone\nfi\n[ -z ${ARCTEVAR:-} ] && ARCTEVAR=\"$CPUABI\"\nCPUABIDD=\"$(getprop ro.product.cpu.abi)\"\nprintf \"Detected architecture is %s;  Install architecture is set to %s.\\\\n\" \"$CPUABIDD\" \"$ARCTEVAR\"\n}\n_QEMUCFCK_\nBINFNSTP=\"finishsetup.bash\"\nCACHEDIRSUFIX=\"var/cache/pacman/pkg/\"\nLC_TYPE=(\"LANG\" \"LANGUAGE\" \"LC_ADDRESS\" \"LC_COLLATE\" \"LC_CTYPE\" \"LC_IDENTIFICATION\" \"LC_MEASUREMENT\" \"LC_MESSAGES\" \"LC_MONETARY\" \"LC_NAME\" \"LC_NUMERIC\" \"LC_PAPER\" \"LC_TELEPHONE\" \"LC_TIME\")\nPREFIXDATAFILESUFIX=\"files/cache/archlinux/$ARCTEVAR/var/cache/pacman/pkg/\"\nTXPRQUON=\"Termux PRoot with QEMU\"\nTXPRQUON=\"Termux PRoot\"\nUNAMER=\"$(uname -r)\"\n\n_CALLSYSTEM_() {\ndeclare COUNTER=\"\"\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]] || [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\n_GETIMAGE_ ||:\nelse\nif [[ \"$CMIRROR\" = \"os.archlinuxarm.org\" ]] || [[ \"$CMIRROR\" = \"mirror.archlinuxarm.org\" ]]\nthen\nuntil _FTCHSTND_ ||:\ndo\n_FTCHSTND_\nsleep 2\nprintf \"\\\\n\"\nCOUNTER=$((COUNTER + 1))\nif [[ \"$COUNTER\" = 9 ]]\nthen\n_PRINTMAX_\nbreak\nfi\ndone\nelse\n_FTCHIT_\nfi\nfi\n}\n\n_COPYSTARTBIN2PATH_() {\nif [[ \":$PATH:\" == *\":$HOME/bin:\"* ]] && [[ -d \"$HOME\"/bin ]]\nthen\nBPATH=\"$HOME\"/bin\nelse\nBPATH=\"$PREFIX\"/bin\nfi\ncp \"$INSTALLDIR/$STARTBIN\" \"$BPATH\"\nprintf \"\\\\n\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[1;34m%s\\\\e[1;37m%s\\\\e[1;34m.\\\\e[0m\\\\n\\\\n\" \" 🕛 > 🕐 \" \"File \" \"$STARTBIN \" \"copied to \" \"$BPATH\"\n}\n\n_DETECTSYSTEM_() {\n_PRINTDETECTEDSYSTEM_\nif [[ \"$CPUABI\" = \"$CPUABI5\" ]]\nthen\n_ARMV5L_\nelif [[ \"$CPUABI\" = \"$CPUABI7\" ]]\nthen\n_DETECTSYSTEM7_\nelif [[ \"$CPUABI\" = \"$CPUABI8\" ]]\nthen\n_DETECTSYSTEM64_\nelif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\n_I686_\nelif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\n_X86_64_\nelse\n_PRINTMISMATCH_\nfi\n}\n\n_DETECTSYSTEM7_() {\nif [[ \"$(getprop ro.product.device)\" == *_cheets ]]\nthen\n_ARMV7CHROME_\nelse\n_ARMV7ANDROID_\nfi\n}\n\n_DETECTSYSTEM64_() {\nif [[ \"$(getprop ro.product.device)\" == *_cheets ]]\nthen\n_AARCH64CHROME_\nelse\n_AARCH64ANDROID_\nfi\n}\n\n_DOMIRROR_() { # partial implementaion: choose the corrrect mirror and test this mirror website\n_DOCEMIRROR_() {\nCOUNTRYCODEISO=\"$(getprop gsm.operator.iso-country)\"\nUSERCOUNTRYCODE=\"${COUNTRYCODEISO%%[\\ \\,]*}\"\nif [[ -z \"${USERCOUNTRYCODE:-}\" ]]\nthen\nUSERCOUNTRYCODE=\"$(getprop gsm.sim.operator.iso-country)\"\nfi\nif [[ -z \"${USERCOUNTRYCODE:-}\" ]]\nthen\nUSERCOUNTRYCODE=\"us\"\nfi\nprintf \"Copying file '%s' to file '%s';  \" \"$INSTALLDIR/etc/pacman.d/mirrorlist\" \"$INSTALLDIR/etc/pacman.d/mirrorlist.$STIME.termuxarchnew\"\ncp \"$INSTALLDIR/etc/pacman.d/mirrorlist\" \"$INSTALLDIR/etc/pacman.d/mirrorlist.$STIME.termuxarchnew\"\nprintf \"DONE\\\\n\"\nif [[ $USERCOUNTRYCODE == us ]]\nthen\nUSERCOUNTRYCODE=\"edu\\/\"\nfi\nCHSENMIR=\"$(grep -w http \"$INSTALLDIR/etc/pacman.d/mirrorlist\" | grep ^#S | grep \"$USERCOUNTRYCODE\" | awk 'sub(/^.{1}/,\"\")' | head -n 1)\"\nprintf \"%s\\\\n\" \"$CHSENMIR\" >> \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\nprintf \"Choosing mirror '%s' in file '%s';  Continuing...\\\\n\" \"$CHSENMIR\" \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\nDOMIRLCR=0\n}\nif [[ -f \"$INSTALLDIR/run/lock/${INSTALLDIR##*/}/domirror.lock\" ]]\nthen\nprintf \"Lockfile '%s' exists;  Continuing...\" \"$INSTALLDIR/run/lock/${INSTALLDIR##*/}/domirror.lock\"\nelse\nif ! grep ^Server \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\nthen\n_DOCEMIRROR_\nfi\nfi\n}\n\n_MAINBLOCK_() {\ndeclare KID\ndeclare -i KERNEL_VERSION\ndeclare -i MAJOR_REVISION\ndeclare -- MINOR_REVISION\ndeclare -- TMPKERN\nexport KID=1\nKERNEL_VERSION=\"$(awk -F'.' '{print $1}' <<< \"$UNAMER\")\"\nMAJOR_REVISION=\"$(awk -F'.' '{print $2}' <<< \"$UNAMER\")\"\nTMPKERN=\"$(awk -F'.' '{print $3}' <<< \"$UNAMER\")\"\nMINOR_REVISION=\"$(sed 's/[^0-9]*//g' <<< \"${TMPKERN:0:3}\")\"\nif [[ \"$KERNEL_VERSION\" -le 2 ]]\nthen\nexport KID=0\nelse\nif [[ \"$KERNEL_VERSION\" -eq 3 ]]\nthen\nif [[ \"$MAJOR_REVISION\" -lt 2 ]]\nthen\nexport KID=0\nelse\nif [[ \"$MAJOR_REVISION\" -eq 2 ]] && [[ \"$MINOR_REVISION\" -eq 0 ]]\nthen\nexport KID=0\nfi\nfi\nfi\nfi\n_NAMESTARTARCH_\n_SPACEINFO_\n_PREPINSTALLDIR_\n_DETECTSYSTEM_\n_WAKEUNLOCK_\n_PRINTFOOTER_\n\"$INSTALLDIR/$STARTBIN\" || _PRINTPROOTERROR_\n_PRINTFOOTER2_\n_PRINTSTARTBIN_USAGE_\nexit\n}\n\n_MAKESYSTEM_() {\n_WAKELOCK_\nif [ \"$USECACHEDIR\" = 0 ] && [ -z \"${LCR:-}\" ]\nthen\nif [ -d \"$CACHEDIR\" ]\nthen\n_PPLCACHEDIR_\nelse\ncd \"$PREFIXDATAFILES\" && { [ -d \"$PREFIXDATAFILESUFIX\" ] || mkdir -p \"$PREFIXDATAFILESUFIX\" ; } && printf '%s' \"cd $PREFIXDATAFILES && mkdir -p $PREFIXDATAFILESUFIX && cd $CACHEDIR && \" || printf '%s\\n' \"Please create cache directory '$CACHEDIR' in order to use the cache directory feature;  Continuing...\"\nCMMDVL=\"$INSTALLDIR\" && { cd \"$CMMDVL\" && printf '%s\\n\\n' \"cd $CMMDVL\" ; } || exit 69\nfi\nfi\n_CALLSYSTEM_\n_MD5CHECK_\nif [ \"$KEEP\" = 0 ]\nthen\n_PRINTKEEP_\nelse\n_PRINTCU_\nrm -f \"$INSTALLDIR\"/*.tar.gz \"$INSTALLDIR\"/*.tar.gz.md5 ##  When KEEP=0 files *.tar.gz and *.tar.gz.md5 will remain on the system.\n_PRINTDONE_\nfi\n_PRINTCONFIGUP_\n_TOUCHUPSYS_\n}\n\n_MD5CHECK_() {\nif md5sum -c --quiet \"$IFILE\".md5 2> /dev/null\nthen\n_PRINTMD5SUCCESS_\nprintf \"\\\\e[0;32m\"\n_TASPINNER_ clock & _PREPROOT_ ; kill $! || _PRINTERRORMSG_ \"_PREPROOT_ _MD5CHECK_ ${0##*/} necessaryfunctions.bash\"\nelse\nif md5sum -c --quiet *.md5 2> /dev/null\nthen\n_PRINTMD5SUCCESS_\nprintf \"\\\\e[0;32m\"\n_TASPINNER_ clock & _PREPROOT_ ; kill $! || _PRINTERRORMSG_ \"_PREPROOT_ _MD5CHECK_ ${0##*/} necessaryfunctions.bash\"\nelse\n{ [[ \"$KEEP\" = 0 ]] && _PRINTKEEPEXIT_ ; exit 203 ; } || { _PRINTMD5ERROR_ && rm -f \"$INSTALLDIR\"/*.tar.gz \"$INSTALLDIR\"/*.tar.gz.md5 ; exit 205 ; }\nfi\nfi\n}\n\nTMXRCHBNDR=\"/usr/local/termuxarch/bin\"\nTMXRCHBNDL=\"usr/local/termuxarch/lib\"\nTMXRCHBNDS=\"usr/local/termuxarch/bin\"\n_PREPROOTDIR_() {\nlocal DRARRLST=(\"etc\" \"home\" \"root/bin\" \"usr/bin\" \"$TMXRCHBNDL\" \"$TMXRCHBNDS\" \"usr/local/bin\" \"var/backups/${INSTALLDIR##*/}/etc\" \"var/backups/${INSTALLDIR##*/}/root\" \"var/binds\")\nfor ISDIR in ${DRARRLST[@]}\ndo\n{ [ -d \"$ISDIR\" ] || printf \"\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[0m\\\\n\" \"Creating directory \" \"'/$ISDIR'\" \".\" && mkdir -p \"$ISDIR\" ; } || printf \"\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[0m\\\\n\" \"Directory \" \"/$ISDIR\" \" exists.  \"\ndone\n} # create directories from local varables plus an array of directory names\n\n_PREPINSTALLDIR_() {\ncd \"$INSTALLDIR\" || exit 196\n_PREPROOTDIR_\n_SETLANGUAGE_\n_ADDADDS_\n_DOMODdotfiles_\nprintf '\\e[0;32mGenerating dot files:  \\e[1;32mDONE\\n'\n_MAKEFINISHSETUP_\n_MAKESETUPBIN_\n_MAKESTARTBIN_\n_COPYSTARTBIN2PATH_\n_FIXOWNER_\n}\n\n_PREPROOT_() {\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]] || [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nproot --link2symlink -0 bsdtar -p -xf \"$IFILE\" --strip-components 1 ||:\nelse\nproot --link2symlink -0 bsdtar -p -xf \"$IFILE\" ||:\nfi\n}\n\n_RUNFINISHSETUP_() {\n_SEDUNCOM_() {\nsed -i \"/\\/mirror.archlinuxarm.org/ s/^# *//\" \"$INSTALLDIR/etc/pacman.d/mirrorlist\" || _PSGI1ESTRING_ \"sed -i _SEDUNCOM_ necessaryfunctions.bash ${0##*/}\" # sed replace a character in a matched line in place\n}\n_ADDresolvconf_\nALMLLOCN=\"$INSTALLDIR/etc/pacman.d/mirrorlist\"\ncp \"$ALMLLOCN\" \"$INSTALLDIR/var/backups/${INSTALLDIR##*/}/etc/mirrorlist.$SDATE.bkp\" || _PSGI1ESTRING_ \"cp _RUNFINISHSETUP_ necessaryfunctions.bash ${0##*/}\"\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\nAL32MRLT=\"https://git.archlinux32.org/packages/plain/core/pacman-mirrorlist/mirrorlist\"\nprintf \"\\\\e[0m\\\\n%s\\\\n\" \"Updating ${ALMLLOCN##*/} from $AL32MRLT.\"\ncurl --retry 4 \"$AL32MRLT\" -o \"$ALMLLOCN\" || curl --retry 4 \"$AL32MRLT\" -o \"$ALMLLOCN\"\n_DOMIRROR_\nelif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\nAL64MRLT=\"https://www.archlinux.org/mirrorlist/all/\"\nprintf \"\\\\e[0m\\\\n%s\\\\n\" \"Updating ${ALMLLOCN##*/} from $AL64MRLT.\"\ncurl -L --retry 4 \"$AL64MRLT\" -o \"$ALMLLOCN\"\n_DOMIRROR_\nfi\nprintf \"\\\\e[0m\"\nif [[ \"$FSTND\" ]]\nthen\nNMIR=\"$(awk -F'/' '{print $3}' <<< \"$NLCMIRROR\")\"\nsed -i '/http\\:\\/\\/mir/ s/^#*/# /' \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\n# test if NMIR is in mirrorlist file\nif grep \"$NMIR\" \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\nthen\nprintf \"%s\\\\n\" \"Found server $NMIR in /etc/pacman.d/mirrorlist; Uncommenting $NMIR.\"\nsed -i \"/$NMIR/ s/^# *//\" \"$INSTALLDIR/etc/pacman.d/mirrorlist\"  || _SEDUNCOM_ || _PSGI1ESTRING_ \"sed -i _RUNFINISHSETUP_ necessaryfunctions.bash ${0##*/}\"\nelse\nprintf \"%s\\\\n\" \"Did not find server $NMIR in /etc/pacman.d/mirrorlist; Adding $NMIR to file /etc/pacman.d/mirrorlist.\"\nprintf \"%s\\\\n\" \"Server = $NLCMIRROR/\\$arch/\\$repo\" >> \"$INSTALLDIR/etc/pacman.d/mirrorlist\"\nfi\nelse\nif [[ -z \"${DOMIRLCR:-}\" ]]\nthen\nDOMIRLCR=0\nif [[ -z \"${USEREDIT:-}\" ]] || [[ \"$USEREDIT\" = \"\" ]]\nthen\n_EDITORS_\nelse\nif [[ ! \"$(sed 1q  \"$INSTALLDIR\"/etc/pacman.d/mirrorlist)\" = \"# # # # # # # # # # # # # # # # # # # # # # # # # # #\" ]]\nthen\n_EDITFILES_\nfi\nfi\n\"$USEREDIT\" \"$INSTALLDIR\"/etc/pacman.d/mirrorlist\nfi\nfi\n\"$INSTALLDIR\"/root/bin/setupbin.bash || _PRINTPROOTERROR_\n}\n\n_TOUCHUPSYS_() {\n_ADDmotd_\n_PREPPACMANCONF_\n_SETLOCALE_\n_RUNFINISHSETUP_\n[ -f root/bin/\"$BINFNSTP\" ] && rm -f root/bin/\"$BINFNSTP\"\n[ -f root/bin/setupbin.bash ] && rm -f root/bin/setupbin.bash\nprintf \"\\\\n\\\\e[1;34m%s  \\\\e[0m\\\\n\\\\n\" \"🕛 > 🕤 Arch Linux in Termux is installed and configured 📲  \"\nprintf \"\\\\e]2;%s\\\\007\" \" 🕛 > 🕤 Arch Linux in Termux is installed and configured 📲\"\n}\n# necessaryfunctions.bash FE\n"
        },
        {
          "name": "printoutstatements.bash",
          "type": "blob",
          "size": 18.5625,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 by SDRausty. All rights reserved.  🌎 🌍 🌏 🌐 🗺\n## Hosted sdrausty.github.io/TermuxArch courtesy https://pages.github.com\n## https://sdrausty.github.io/TermuxArch/README has info about this project.\n## https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\n## printout statement subroutines for 'setupTermuxArch'\n################################################################################\nFLHDR0[0]=\"#!/usr/bin/env bash\"\nFLHDR0[1]=\"# Copyright 2017-2022 by SDRausty. All rights reserved, see LICENSE 🌎 🌍 🌏\"\nFLHDR0[2]=\"# Hosting sdrausty.github.io/TermuxArch courtesy https://pages.github.com.\"\nFLHDR0[3]=\"# https://sdrausty.github.io/TermuxArch/README has info about this project.\"\nFLHDR0[4]=\"# https://sdrausty.github.io/TermuxArch/CONTRIBUTORS Thank you for your help.\"\nFLHDR1[0]=\"##############################################################################\"\nFLHDR1[1]=\"\"\nFLHDR1[2]=\"set -Eeuo pipefail\"\nFLHDR1[3]=\"shopt -s extglob nullglob globstar\"\nFLHDR1[4]=\"unset LD_PRELOAD\"\nFLHDR1[5]=\"VERSIONID=2.0.548\"\nFLHDR1[6]=\"SRPTNM=\\\"\\${0##*/}\\\"\"\nFLHDRP[0]=\"## BEGIN #####################################################################\"\nFLHDRP[1]=\"\"\nTRPERROR[0]=\"_TRPERR_() {  # run on script error\"\nTRPERROR[1]=\"\tlocal RV=\\\"\\$?\\\"\"\nTRPERROR[2]=\"\tprintf \\\"\\\\\\\\e[?25h\\\\\\\\n\\\\\\\\e[1;48;5;138m %s\\\\\\\\e[0m\\\\\\\\n\\\\\\\\n\\\" \\\"ＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} NOTICE:  Generated script signal \\${RV:-UNKNOWN} near or at line number \\${1:-UNKNOWN} by '\\${2:-UNKNOWNCOMMAND}'!\\\"\"\nTRPERROR[3]=\"\texit \\\"\\$RV\\\"\"\nTRPERROR[4]=\"}\"\nTRPERROR[5]=\"\"\nTRPEXIT[0]=\"_TRPET_() {  # run on exit\"\nTRPEXIT[1]=\"\tlocal RV=\\\"\\$?\\\"\"\nTRPEXIT[2]=\"\tprintf \\\"\\\"\"\nTRPEXIT[3]=\"\tif [[ \\\"\\$RV\\\" = 0 ]]\"\nTRPEXIT[4]=\"\tthen\"\nTRPEXIT[5]=\"\t\tprintf \\\"\\\\\\\\e[0;32mTermuxArch command \\\\\\\\e[1;32m'%s'\\\\\\\\e[0;32m version %s\\\\\\\\e[1;34m: \\\\\\\\e[1;32mDONE 🏁\\\\\\\\e[0m\\\\\\\\n\\\" \\\"\\$STRNRG\\\" \\\"\\$VERSIONID\\\"\"\nTRPEXIT[6]=\"\t\tprintf \\\"\\\\\\\\e]2;%s\\007\\\" \\\"\\$STRNRG:  DONE 🏁 \\\"\"\nTRPEXIT[7]=\"\telse\"\nTRPEXIT[8]=\"\t\tprintf \\\"\\\\\\\\e[0;32mTermuxArch command \\\\\\\\e[1;32m'%s'\\\\\\\\e[0;32m version %s\\\\\\\\e[0m [Exit Signal %s]\\\\\\\\e[1;34m: \\\\\\\\e[1;32mDONE  🏁\\\\\\\\e[0m\\\\\\\\n\\\" \\\"\\$STRNRG\\\" \\\"\\$VERSIONID\\\" \\\"\\$RV\\\"\"\nTRPEXIT[9]=\"\t\tprintf \\\"\\033]2;%s\\007\\\" \\\"\\$STRNRG [Exit Signal \\$RV]:  DONE 🏁 \\\"\"\nTRPEXIT[10]=\"\tfi\"\nTRPEXIT[11]=\"\tprintf \\\"\\\\e[?25h\\\\e[0m\\\"\"\nTRPEXIT[12]=\"\tset +Eeuo pipefail\"\nTRPEXIT[13]=\"\texit\"\nTRPEXIT[14]=\"}\"\nTRPEXIT[15]=\"\"\nTRPSIGNAL[0]=\"_TRPSIG_() {  # run on signal\"\nTRPSIGNAL[1]=\"\tlocal RV=\\\"\\$?\\\"\"\nTRPSIGNAL[2]=\"\tprintf \\\"\\\\\\\\e[?25h\\\\\\\\e[1;7;38;5;0mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} NOTICE:  Signal %s received!\\\\\\\\e[0m\\\\\\\\n\\\" \\\"\\$?\\\"\"\nTRPSIGNAL[3]=\"\texit \\\"\\$RV\\\"\"\nTRPSIGNAL[4]=\"}\"\nTRPQUIT[0]=\"_TRPQ_() {  # run on quit\"\nTRPQUIT[1]=\"\tlocal RV=\\\"\\$?\\\"\"\nTRPQUIT[2]=\"\tprintf \\\"\\\\\\\\e[?25h\\\\\\\\e[1;7;38;5;0mＴｅｒｍｕｘＡｒｃｈ \\${SRPTNM^^} NOTICE:  Quit signal %s received!\\\\\\\\e[0m\\\\\\\\n\\\" \\\"\\$?\\\"\"\nTRPQUIT[3]=\"\texit \\\"\\$RV\\\"\"\nTRPQUIT[4]=\"}\"\nTRAPS[0]=\"trap '_TRPERR_ \\$LINENO \\$BASH_COMMAND \\$?' ERR\"\nTRAPS[1]=\"trap _TRPET_ EXIT\"\nTRAPS[2]=\"trap _TRPSIG_ HUP INT TERM\"\nTRAPS[3]=\"trap _TRPQ_ QUIT\"\nTRAPS[4]=\"ARGS=\\\"\\${@%/}\\\"\"\nTRAPS[5]=\"{ [ -z \\\"\\${ARGS:-}\\\" ] && STRNRG=\\\"\\${0##*/}\\\" ; } || STRNRG=\\\"\\${0##*/} \\${ARGS:-}\\\"\"\n# TRAPS[6]=\"printf \\\"\\\\\\\\e[1;32m==> \\\\\\\\e[0mRunning TermuxArch command \\\\\\\\e[1;32m%s\\\\\\\\e[0;32m %s\\\\\\\\e[1;37m...\\\\\\\\n\\\" \\\"\\$STRNRG\\\" \\\"version \\$VERSIONID\\\"\"\n\n_CFLHD_() { #\tcreates file header and inserts comments\nif [[ -z \"${2:-}\" ]]\nthen\nprintf \"%s\\\\n\" \"${FLHDR0[1]}\" > \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[2]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[3]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[4]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR1[0]}\" >> \"$1\"\nelse\nprintf \"%s\\\\n\" \"${FLHDR0[1]}\" > \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[2]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[3]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[4]}\" >> \"$1\"\nprintf \"%s\\\\n\"  \"${@:2}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR1[0]}\" >> \"$1\"\nfi\n}\n\n_CFLHDR_() { #\tcreates BASH script boilerplate, file header and inserts comments\nif [[ -z \"${2:-}\" ]]\nthen\nprintf \"%s\\\\n\" \"${FLHDR0[@]}\" > \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR1[@]}\" >> \"$1\"\nelse\nprintf \"%s\\\\n\" \"${FLHDR0[@]}\" > \"$1\"\nfor LINENUMR in ${#@}\ndo\nprintf \"%s\\\\n\" \"${@:LINENUMR}\" >> \"$1\"\ndone\nprintf \"%s\\\\n\" \"${FLHDR1[@]}\" >> \"$1\"\nfi\nprintf \"%s\\\\n\" \"${TRPERROR[@]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${TRPEXIT[@]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${TRPSIGNAL[@]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${TRPQUIT[@]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${TRAPS[@]}\" >> \"$1\"\n}\n\n_CFLHDRS_() { #\tcreates file header and inserts comments\nif [[ -z \"${2:-}\" ]]\nthen\nprintf \"%s\\\\n\" \"${FLHDR0[1]}\" > \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[2]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[3]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[4]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR1[0]}\" >> \"$1\"\nelse\nprintf \"%s\\\\n\" \"${FLHDR0[1]}\" > \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[2]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[3]}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR0[4]}\" >> \"$1\"\nprintf \"%s\\\\n\"  \"${@:2}\" >> \"$1\"\nprintf \"%s\\\\n\" \"${FLHDR1[0]}\" >> \"$1\"\nfi\n}\n\n_PRINTCONTACTING_() {\nprintf \"\\033]2;  🕛 > 🕞 Contacting https://%s...\\007\" \"$CMIRROR\"\nprintf \"\\\\e[0;34m 🕛 > 🕞 \\\\e[1;34mContacting worldwide mirror \\\\e[0;32m%s\\\\e[1;34m: \" \"http://$CMIRROR\"\n}\n\n_PRINTCU_() {\nprintf '\\033]2; 🕛 > 🕙 Cleaning up installation files: \\007'\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕙 \\\\e[1;34mCleaning up installation files: \"\n}\n\n_PRINTDETECTEDSYSTEM_() {\nif [[ \"$(getprop ro.product.device)\" == *_cheets ]]\nthen\nprintf \"\\\\e[1;34m%s\\\\n\\\\n\\\\e[0m\" \" 🕛 > 🕝 Detected $NASVER Chromebook operating system;  Install architecture is set to $CPUABI.\"\nelse\nprintf \"\\\\e[1;34m%s\\\\n\\\\n\\\\e[0m\" \" 🕛 > 🕝 Detected $NASVER operating system;  Install architecture is set to $CPUABI.\"\nfi\n}\n\n_PRINTDONE_() {\nprintf \"\\\\e[1;32mDONE  \\\\e[0m\\\\n\\\\n\"\n}\n\n_PRINTWLA_() {\nprintf '\\033]2; 🕛 > 🕒 Activating termux-wake-lock: OK\\007'\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕒 \\\\e[1;34mActivating termux-wake-lock: \"\n}\n\n_PRINTWLD_() {\nprintf '\\033]2; 🕛 > 🕙 Releasing termux-wake-lock: OK\\007'\nprintf \"\\\\e[0;34m 🕛 > 🕙 \\\\e[1;34mReleasing termux-wake-lock: \"\n}\n\n_PRINTDOWNLOADINGX86_() {\nprintf '\\033]2; 🕛 > 🕞 Downloading the Arch Linux system image checksum...  \\007'\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕞 \\\\e[0;34mDownloading checksum from \\\\e[0;32mhttp://%s\\\\e[0;34m...\\\\n\\\\n\\\\e[0;32m\" \"$CMIRROR\"\n}\n\n_PRINTDOWNLOADINGX86TWO_() {\nprintf '\\033]2; 🕛 > 🕓 Downloading the Arch Linux system image file...  \\007'\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕓 \\\\e[0;34mDownloading \\\\e[0;32m%s \\\\e[0;34mfrom \\\\e[0;32mhttp://%s\\\\e[0;34m...  \\\\e[1;37mThis may take a long time pending connection.\\\\n\\\\n\\\\e[0;32m\" \"$IFILE\" \"$CMIRROR\"\n}\n\n_PRINTDOWNLOADINGFTCH_() {\nprintf \"\\033]2;%s\\007\" \" 🕛 > 🕓 Downloading the checksum and Arch Linux system image files...  \"\nprintf \"\\\\e[0;34m 🕛 > 🕓 \\\\e[1;34mDownloading the checksum file and \\\\e[1;34m%s \\\\e[1;34mfrom the geographically local mirror \\\\e[1;32m%s\\\\e[1;34m.  If contact with the local mirror is not successful, run \\\\e[1;32mbash \\\\e[0;32m%s\\\\e[1;34m again.  Should the worldwide mirror not provide another geographically nearby server after a couple of attempts, use \\\\e[1;32mbash \\\\e[0;32m%s manual \\\\e[1;34mafter locating a local mirror from the Internet; The command \\\\e[1;32mbash \\\\e[0;32m%s help \\\\e[1;34mhas information about additional options.  \\\\e[1;37mDownload of %s pending Internet connection...\\\\n\\\\n\\\\e[0;32m\" \"$IFILE\" \"${NLCMIRROR:-MIRROR NOT FOUND}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"$IFILE\"\n}\n\n_PRINT_DOWNLOADING_FTCHIT_() {\nprintf \"\\033]2;%s\\007\" \" 🕛 > 🕓 Downloading the checksum and $IFILE files...  \"\nprintf \"\\\\e[0;34m 🕛 > 🕓 \\\\e[0;34mDownloading the checksum file and \\\\e[0;32m%s \\\\e[0;34m from \\\\e[0;32mhttp://%s\\\\e[0;34m...  \\\\e[1;37mThis may take a long time pending connection.\\\\n\\\\n\\\\e[0;32m\" \"$IFILE\" \"$CMIRROR\"\n}\n\n_PRINTCONFIGUP_() {\nprintf \"\\033]2;%s\\007\" \" 🕛 > 🕤 Arch Linux is installed!  Configuring and updating Arch Linux 📲\"\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕤 \\\\e[1;34mArch Linux in Termux PRoot QEMU is installed.  Configuring and updating Arch Linux 📲  \"\n}\n\n_PRINTMAX_() {\nprintf \"\\033]2;%s\\007\" \"Please run 'bash ${0##*/}' again.\"\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m 🔆 ＴｅｒｍｕｘＡｒｃｈ NOTICE: Maximum amount of attempts exceeded.\\\\e[34;1m\\\\e[30;1m\\\\n\\\\nPlease run 'bash %s' again.  See 'bash %s help' to resolve download errors.  If this keeps repeating, copy 'knownconfigurations.bash' to 'setupTermuxArchConfigs.bash' with preferred mirror.  After editing 'setupTermuxArchConfigs.bash', run 'bash %s' and 'setupTermuxArchConfigs.bash' loads automaticaly from the same directory.  Change mirror to desired geographic location to resolve md5sum errors.\\\\n\\\\nUser configurable variables are in 'setupTermuxArchConfigs.bash'.  To create this file from 'knownconfigurations.bash' in the working directory the command 'bash %s manual' can be used to create and edit 'setupTermuxArchConfigs.bash'.\\\\n\\\\nPlease run 'bash %s' again.\\\\n\\\\e[0;0m\\\\n\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\n}\n\n_PRINTKEEPEXIT_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕕 \\\\e[1;34mNot removing files after FAILED check of download integrity files with md5sum.  \\\\e[37;1m%s  \\\\e[1;33m\" \"Please run '${0##*/}' again to continue a partial download.  Otherwise remove '$INSTALLDIR' and restart the installation from scratch if the download is complete and FAILED checking download integrity checksum error continues.  You can set KEEP=1 in file 'setupTermuxArchConfigs.bash' by running '${0##*/} manual' to disable the keep download image file feature that is disabled by default as after downloading the root image file as it might no longer be needed by the end user execept for reinstalling the Arch Linux system and similar.  The command 'bash ${0##*/} help' and the source code for TermuxArch have more information.\"\n}\n\n_PRINTKEEP_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕗 \\\\e[1;34mNot removing files after checking download integrity with md5sum.  \\\\n\"\n}\n\n_PRINTMD5CHECK_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕠 \\\\e[1;34mChecking download integrity with md5sum.  \\\\e[37;1mThis may take a little while  \\\\e[1;33m\"\n}\n\n_PRINTMD5ERROR_() {\nprintf \"\\033]2;%s\\007\" \"Run 'bash ${0##*/}' again...\"\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m 🔆 ＴｅｒｍｕｘＡｒｃｈ SIGNAL md5sum mismatch! The download failed and was removed!\\\\e[30;1m  Run 'bash %s' again.  The command 'bash %s help' has more information.  This kind of error can go away, just like magic.  Waiting before executing %s again is recommended.  There are numerous reasons for checksum errors.  Proxies are one explaination.  Mirroring and mirrors are another explaination for md5sum errors.  An interrupted download is one more reason for an md5sum mismatch error.\\\\n\tIf this keeps repeating, file 'knownconfigurations.bash' can be copied to file 'setupTermuxArchConfigs.bash' with command 'bash %s manual' in order to choose a preferred mirror.  After editing 'setupTermuxArchConfigs.bash', command 'bash %s' loads file 'setupTermuxArchConfigs.bash' automaticaly from the same directory.  Change mirror to desired geographic location to resolve md5sum errors.\\\\n\tUser configurable variables are in 'setupTermuxArchConfigs.bash'.  In order to create this file from 'knownconfigurations.bash' in the working directory, the command 'bash %s manual' can be used to create and edit 'setupTermuxArchConfigs.bash'.\\\\n\\\\n\tPlease run command 'bash %s' again, or command 'bash %s manual' can be run which creates file '%sConfigs.bash' for editing.\\\\n\\\\e[0;0m\\n\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\n}\n\n_PRINTMD5SUCCESS_() {\nprintf \"\\\\e]2;%s\\\\007\" \" 🕛 > 🕡 Unpacking $IFILE...\"\nprintf \"\\\\n\\\\n\\\\e[0;34m 🕛 > 🕔 \\\\e[1;34mSystem image file download integrity check: \\\\e[1;32mDONE\\\\n\\\\n\\\\e[0;34m 🕛 > 🕡 \\\\e[1;34mUnpacking %s into %s.  The option to create Arch Linux system users is available through \\\\e[1;32maddauser\\\\e[1;34m.  Arch Linux user login from Termux with \\\\e[1;32m%s \\\\e[1;34mis now implemented.  Please see \\\\e[0;36mAbility for Scripts to Launch Commands for Arch Linux in Termux PRoot on Device\\\\e[1;34m https://github.com/sdrausty/TermuxArch/issues/54 for information how to use this option.  \\\\n\\\\nWhile waiting, any of these commands can be used \\\\e[0;36mdf\\\\e[1;34m, \\\\e[0;36mdu -hs\\\\e[1;34m, \\\\e[0;36mps\\\\e[1;34m, \\\\e[0;36mtop\\\\e[1;34m and \\\\e[0;36mwatch\\\\e[1;34m in a new Termux session to watch the unpacking while this session completes.  Use \\\\e[0;36mhelp man \\\\e[1;34mand \\\\e[0;36minfo man \\\\e[1;34mto learn more about your Linux system in the palm of your hand.  See The Linux Documentation Project http://tldp.org to learn more about Linux and CLI (command line interface) commands.\\\\n\\\\nIf simply scrolling the screen up by scrolling up does produce the desired effect, this method can be employed.  Long tap until the popup menu shows.  Then scroll up without loosing touch with the screen and without touching the popup menu.  \\\\e[1;37mUnpacking \\\\e[1;32m%s\\\\e[1;37m will take a long time;  Please be patient   \\\\e[0m\" \"$IFILE\" \"$INSTALLDIR\" \"$STARTBIN\" \"$IFILE\"\n}\n\n_PRINTMISMATCH_() {\nprintf \"\\033]2;%s\\007\" \"Run 'bash ${0##*/}' again...\"\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m 🔆 ＴｅｒｍｕｘＡｒｃｈ NOTICE: Unknown configuration!  Did not find an architecture and operating system match in 'knownconfigurations.bash'!  \\\\e[36;1m\\\\nDetected %s architecture.  There still is hope.  Other images may be available at http://mirror.archlinuxarm.org/os/ and https://www.archlinux.org/mirrors/ to see if any match might the device.  If there is a match found, then please \\\\e[37;1msubmit a pull request\\\\e[36;1m at https://github.com/TermuxArch/TermuxArch/pulls with script modifications.  Alternatively, \\\\e[37;1ma modification can be submitted\\\\e[36;1m at https://github.com/TermuxArch/TermuxArch/issues if a new configuration match is found.  Please include output from \\\\e[37;1m'uname -mo'\\\\e[36;1m on the device in order to expand autodetection for \\\\e[37;1m'%s'\\\\e[36;1m.  The webpage at https://termuxarch.github.io/docsTermuxArch/Known_Configurations has more information.\\\\n\\\\n\t\\\\e[36;1mRun '%s purge' to remove the installation;  Then please try '%s' again with new options...\\\\e[0m\\\\n\" \"$NASVER $CPUABI\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\nexit\n}\n\n_PRINTFOOTER_() {\nprintf \"\\033]2;%s\\007\" \"Thank you for using '${0##*/}' to install Arch Linux in Termux PRoot QEMU 📲 \"\nprintf \"\\\\e[0;34m 🕛 > 🕚 \\\\e[1;34mYou can use \\\\e[1;32m%s \\\\e[1;34mto launch Arch Linux in Termux PRoot QEMU.  Alternatively, command \\\\e[1;32m~%s \\\\e[1;34mcan be run in a BASH shell to start Arch Linux in Termux PRoot QEMU in future sessions.  See \\\\e[1;32m%s help \\\\e[1;34mfor usage information.\\\\e[0m\\\\n\\\\n\" \"$STARTBIN\" \"$PRINTROOTDIR/$STARTBIN\" \"$STARTBIN\"\nprintf \"\\\\e[0;32m 🕛 = 🕛 \\\\e[1;34mThe command \\\\e[1;32mtour \\\\e[1;34mcan be used to run a very short tour in order to get to know the new Arch Linux in Termux PRoot QEMU environment a little bit better.  If there was more than one error during the update procedure and you would like to refresh the installation, use \\\\e[1;32m%s refresh\\\\e[1;34m.  This will update and recreate the configuration provided.  The TermuxArch command \\\\e[1;32mkeys \\\\e[1;34mhelps install and generate Arch Linux keyring keys.\\\\n\\\\n\" \"${0##*/}\"\n_PRINTFOOTER2_\n}\n\n_PRINTFOOTER2_() {\n_PRTARM_() {\nprintf \"\\\\e[1;34m%s\\\\e[0;32m%s\\\\e[1;34m%s\\\\e[0m\\\\n\\\\n\" \"The webpage \" \"https://archlinuxarm.org/forum\" \" has discussion forums available for the Arch Linux arm project regarding the Arch Linux $CPUABI computer architecture.\"\n}\n_PRTX86_() {\nprintf \"\\\\e[1;34m%s\\\\e[0;32m%s\\\\e[1;34m%s\\\\e[0;32m%s\\\\e[1;34m%s\\\\e[0m\\\\n\\\\n\" \"The website \" \"https://bbs.archlinux32.org/\" \" has Arch Linux 32 discussion forums.  The website \" \"https://wiki.archlinux32.org/\" \" has information about the Arch Linux 32 project regarding the Arch Linux $CPUABI computer architecture.\"\n}\n_PRTX8664_() {\nprintf \"\\\\e[1;34m%s\\\\e[0;32m%s\\\\e[1;34m%s\\\\e[0;32m%s\\\\e[1;34m%s\\\\e[0m\\\\n\\\\n\" \"The website \" \"https://bbs.archlinux.org/\" \" has Arch Linux discussion forums for the Arch Linux project.  The webpage \" \"https://wiki.archlinux.org/index.php/IRC_channel\" \" lists available Arch Linux IRC channels regarding the Arch Linux $CPUABI computer architecture.\"\n}\nprintf \"\\\\e[1;34m%s\\\\n\\\\n%s\\\\e[1;32m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\e[1;34m%s\" \"Arch Linux in Termux PRoot QEMU is installed in $INSTALLDIR.  This project is in active development.  Contributions to this project are welcome; See https://sdrausty.github.io/TermuxArch/CONTRIBUTORS for information.  The documentation repository for TermuxArch https://sdrausty.github.io/TermuxArch/docs is a TermuxArch module that is located at https://github.com/sdrausty/docsTermuxArch.  Pull requests and contributions through the issues pages are open to improve the ux (user experience) and this Termux PRoot QEMU installation script. \" \"The commands \" \"~$PRINTROOTDIR/$STARTBIN \" \"and \" \"$STARTBIN \" \"can be used in a BASH shell to launch Arch Linux in Termux PRoot QEMU for future sessions.  For those new to *nix, http://tldp.org has *nix documentation.  \"\nif [[ \"$CPUABI\" = \"$CPUABIX86\" ]]\nthen\n_PRTX86_\nelif [[ \"$CPUABI\" = \"$CPUABIX8664\" ]]\nthen\n_PRTX8664_\nelse\n_PRTARM_\nfi\n}\n\n_PRINTPROOTERROR_() {\nprintf \"\\\\e[0;34m%s\\\\n\\\\n\" \"1) IF ERROR 'env ... not found' IS FOUND, ensure that all the software is up to date.  After updating, please reference these weblinks in order to find a resolution if updating Termux app and Termux packages and device software was unsuccessful:\ni) https://github.com/termux/proot/issues?q=\\\"env\\\"+\\\"not+found\\\"\nii) https://github.com/termux/termux-packages/issues?q=\\\"not+found\\\"+\\\"proot\\\"\"\nprintf \"%s\\\\n\\\\n\" \"2) IF ERROR 'proot info: vpid 1: terminated with signal 4' IS FOUND, please create a 'qbind.prs' file by using 'bindexample.prs' as an example file located in directory '$INSTALLDIR/var/binds/'.  In order to complete this PRoot QEMU configuration add a QEMU bind statement to variable PROOTSTMNT.  Then run the '$STRNRG' command again after creating and editing the 'qbind.prs' file; i.e:\n\\`\\`\\`\ncd $INSTALLDIR/var/binds/\ncp bindexample.prs bindq.prs\n\\`\\`\\`\nEdit file bindq.prs and run command '$STRNRG' again.\"\nprintf \"%s\\\\n\\\\n\\\\e[0m\" \"3) IF ERROR 'proot info: vpid 1: terminated with signal 11' IS FOUND, please ensure that all software is up to date.  After updating all the software, including device software was unsuccessful in resolving this signal, then please reference these weblinks in order to find a resolution if updating Termux app and Termux packages and device software was unsuccessful in resolving this signal:\ni)  https://github.com/termux/proot/issues?q=\\\"proot info: vpid 1: terminated with signal 11\\\"\nii) https://github.com/termux/termux-packages/issues?q=\\\"proot info: vpid 1: terminated with signal 11\\\"\"\n}\n\n_PRINTROOTDIRFUNCTION_() {\ndeclare -g PRINTROOTDIR\nPRINTROOTDIR=\"$(printf \"%s\" \"${ROOTDIR%/}\"|sed 's#//*#/#g')\"\n}\n_PRINTROOTDIRFUNCTION_\n# printoutstatements.bash FE\n"
        },
        {
          "name": "pullTermuxArchMods.bash",
          "type": "blob",
          "size": 3.291015625,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 (c) by TermuxArch, all rights reserved, see LICENSE 🌎 🌍 🌏 🌐 🗺\n## https://termuxarch.github.io/TermuxArch courtesy host https://pages.github.com\n## update git repository, then update modules\n################################################################################\nset -Eeuo pipefail\n\n_SGSATRPERROR_() { # run on script error signal\nlocal RV=\"$?\"\nprintf \"\\\\n%s\\\\n\" \"$RV\"\nprintf \"\\\\e[?25h\\\\n\\\\e[1;48;5;138mBuildAPKs %s ＴｅｒｍｕｘＡｒｃｈ SIGNAL:  Generated script error %s near or at line number %s by \\`%s\\`!\\\\e[0m\\\\n\" \"updateTermuxArch.bash\" \"${3:-VALUE}\" \"${1:-LINENO}\" \"${2:-BASH_COMMAND}\"\nexit 179\n}\n\n_SGSATRPEXIT_() { # run on exit signal\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\nexit\n}\n\n_SGSATRPSIGNAL_() { # run on signal\nlocal RV=\"$?\"\nprintf \"\\\\e[?25h\\\\e[1;7;38;5;0mＴｅｒｍｕｘＡｒｃｈ %s NOTICE:  Signal %s received!\\\\e[0m\\\\n\" \"${0##*/}\" \"$RV\"\nexit 178\n}\n\n_SGSATRPQUIT_() { # run on quit signal\nlocal RV=\"$?\"\nprintf \"\\\\e[?25h\\\\e[1;7;38;5;0mＴｅｒｍｕｘＡｒｃｈ %s NOTICE:  Quit signal %s received!\\\\e[0m\\\\n\" \"${0##*/}\" \"$RV\"\nexit 177\n}\n\ntrap '_SGSATRPERROR_ $LINENO $BASH_COMMAND $?' ERR\ntrap _SGSATRPEXIT_ EXIT\ntrap _SGSATRPSIGNAL_ HUP INT TERM\ntrap _SGSATRPQUIT_ QUIT\n\nRDR=\"$PWD\"\n_GSA_() { # git repository update modules\nWRDR=\"$1\"\n{ git submodule update --depth 1 --init --recursive --remote \"$1\" && _PRCS_ ; } || { git submodule add --depth 1 https://github.com/\"$3\"/\"$2\" \"$1\" && _PRCS_ ; } || _PESTRG_ \"$1\" update # the command ` git submodule help ` and the book https://git-scm.com/book/en/v2/Git-Tools-Submodules have more information about git submodules\n}\n\n_PESTRG_() {\nprintf \"\\\\n\\\\n%s\\\\n\" \"Cannot $2 module $1; Continuing...\"\n}\n\n_PRCS_ () {\t# print checksums message and run sha512sum\ncd \"$WRDR\"\nif [[ -f sha512.sum ]]\nthen\n_PRT_ \"Checking checksums in directory $PWD with sha512sum: \"\nsha512sum -c --quiet sha512.sum || printf \"%s\\\\n\" \"sha512sum -c sha512.sum FAILED!\"\n_PRNT_  \"DONE\"\nelse\nprintf \"%s\\\\n\" \"No 'sha512.sum' file found in directory $PWD.\"\nfi\ncd \"$RDR\"\nsleep 0.\"$(shuf -i 24-72 -n 1)\" # latency support\n}\n\n_PRT_ () {\t# print message with no trialing newline\nprintf \"%s\" \"$1\"\n}\n\n_PRNT_ () {\t# print message with one trialing newline\nprintf \"%s\\\\n\" \"$1\"\n}\n\ngit pull || printf \"\\\\n\\\\n%s\\\\n\" \"Cannot git pull; Continuing...\"\nif grep '\\.\\/\\.git\\/' sha512.sum 1>/dev/null || grep '\\.\\/\\.scripts\\/maintenance\\/' sha512.sum 1>/dev/null || grep '\\.\\/docs\\/' sha512.sum 1>/dev/null || grep '\\.\\/gen\\/' sha512.sum 1>/dev/null\nthen\nsed -i '/\\.\\/\\.git\\//d' sha512.sum\nsed -i '/\\.\\/\\.scripts\\/maintenance\\//d' sha512.sum\nsed -i '/\\.\\/docs\\//d' sha512.sum\nsed -i '/\\.\\/gen\\//d' sha512.sum\nfi\nsha512sum -c --quiet sha512.sum || _PRNT_ \"ＴｅｒｍｕｘＡｒｃｈ NOTICE:  Checking checksums in directory $PWD with sha512sum FAILED! \"\n_GSA_ \".scripts/maintenance\" maintenance shlibs || printf \"\\\\n\\\\n%s\\\\n\" \"Cannot add or update module .scripts/maintenance; Continuing...\"\n_GSA_ docs docsTermuxArch TermuxArch || printf \"\\\\n\\\\n%s\\\\n\" \"Cannot add or update module docs; Continuing...\"\n_GSA_ gen genTermuxArch TermuxArch || printf \"\\\\n\\\\n%s\\\\n\" \"Cannot add or update module gen; Continuing...\"\n_GSA_ scripts \"scripts.TermuxArch\" TermuxArch || printf \"\\\\n\\\\n%s\\\\n\" \"Cannot add or update module scripts; Continuing...\"\n# pullTermuxArchSubmodules.bash FE\n"
        },
        {
          "name": "robots.txt",
          "type": "blob",
          "size": 0.1025390625,
          "content": "User-agent: *\nAllow: /\nAllow: /sitemap.txt\nSitemap: https://TermuxArch.github.io/TermuxArch/sitemap.txt\n\n"
        },
        {
          "name": "scripts",
          "type": "commit",
          "content": null
        },
        {
          "name": "setupTermuxArch",
          "type": "blob",
          "size": 51.44921875,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 (c) by SDRausty, all rights reserved, see LICENSE\n## hosting termuxarch.github.io/TermuxArch courtesy pages.github.com\n## termuxarch.github.io/TermuxArch/CONTRIBUTORS thank you for your help!\n################################################################################\nset -Eeuo pipefail\nshopt -s  extglob nullglob globstar\nunset LD_PRELOAD\nVERSIONID=2.0.548\n_STRPEROR_() { # run on script error\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Generated script signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\n[ $(ifconfig 2>/dev/null | grep inet | wc -l) = 1 ] && printf \"\\\\e[1;48;5;133m %s\" \"Please ensure background data is not restricted.  Check the wireless connection.  \"\nexit \"$RV\"\n}\n_STRPEXIT_() { # run on exit\nlocal RV=\"$?\"\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\nif [[ \"$RV\" != 0 ]]\nthen\n_PTSTRPXT_\nfi\nif [[ \"$RV\" = 0 ]]\nthen\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-}:  DONE 🏁 \"\nelse\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"[Exit Signal $RV] DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-} [Exit Signal $RV]:  DONE 🏁 \"\nfi\n[ -z \"${TAMPDIR:-}\" ] || rm -rf \"$TAMPDIR\"\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n}\n_STRPHNGP_() { # run on hang up\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} HANG UP:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPNTRT_() { # run on signal\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m%s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPQUIT_() { # run on quit\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} QUIT:  Quit signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPTERM_() { # run on terminate\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} TERMINATE:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\ntrap '_STRPEROR_ $LINENO $BASH_COMMAND $?' ERR\ntrap '_STRPEXIT_ $LINENO $BASH_COMMAND $?' EXIT\ntrap '_STRPHNGP_ $LINENO $BASH_COMMAND $?' HUP\ntrap '_STRPNTRT_ $LINENO $BASH_COMMAND $?' INT\ntrap '_STRPQUIT_ $LINENO $BASH_COMMAND $?' QUIT\ntrap '_STRPTERM_ $LINENO $BASH_COMMAND $?' TERM\nARGS=\"${@%/}\"\nPGNM=\"${0##*/}\"\n{ [ -z \"${ARGS:-}\" ] && STRNRG=\"${0##*/}\" ; } || STRNRG=\"${0##*/} ${ARGS:-}\"\nif [ \"$EUID\" = 0 ] || [ \"$UID\" = 0 ]\nthen\nprintf \"\\\\e[1;48;5;168m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please do not use the root login for PRoot:  EXITING...\" && exit\nfi\nif [ -w /root ]\nthen\nprintf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please run '${0##*/}' and 'bash ${0##*/}' from the BASH shell in native Termux:  EXITING...\" && exit\nfi\n_ARG2DIR_() {  # argument as ROOTDIR\nARG2=\"${@:2:1}\"\nif [[ -z \"${ARG2:-}\" ]]\nthen\nROOTDIR=/arch\nelse\nROOTDIR=/\"$ARG2\"\nfi\n_PREPTERMUXARCH_\n}\n_CHK_() {\nif sha512sum -c --quiet termuxarchchecksum.sha512\nthen\nif [[ -z \"${INSTALLDIR:-}\" ]]\t# is unset\nthen\t# exit here or the program will run on\nprintf \"\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 = 🕛\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\nexit 123\nelse\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕜\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\n_CHKSELF_\n_COREFILESLOAD_\nfi\nelse\nprintf \"\\\\n\"\n_PRINTSHA512SYSCHKER_\nfi\n}\n_CHKDWN_() {\nsha512sum -c --quiet setupTermuxArch.sha512 && printf \"\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\n\" \" 🕛 > 🕐 \" \"TermuxArch download: \" \"OK\" || _PRINTSHA512SYSCHKER_\nTMPCMD=\"bsdtar -x -p -f setupTermuxArch.tar.gz\" && $TMPCMD || printf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL $TMPCMD:  CONTINUING...\"\n}\n_CHKSELF_() {\t# compare setupTermuxArch and file being used\ncd \"$WFDIR\"\t# change directory to working file directory\nif [[ \"$(<\"$TAMPDIR\"/setupTermuxArch)\" != \"$(<\"${0##*/}\")\" ]] # differ\nthen\t# update the working file to newest version\n## update working file\ncd \"$WDIR\"\ncp \"$TAMPDIR/setupTermuxArch\" \"$0\"\n[[ -z \"${ARGS:-}\" ]] && printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m  Please run 'bash %s' again if this automatic update was unsuccessful.\\\\n\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" || printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m run 'bash %s' again if this automatic update was unsuccessful;  You should be able to use the '!!' command to run '%s' again.\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"$STRNRG\" \"$STRNRG\" \"$STRNRG\"\n## restart with updated version\n. $0 $ARGS\nfi\ncd \"$TAMPDIR\"\n}\n_CHOOSEABI_(){\nif [[ -z \"$CPUABILIST64\" ]]\nthen\nARCHITEC=\"i386\"\nCPUABI=\"i386\"\nelse\nARCHITEC=\"x86_64\"\nCPUABI=\"x86_64\"\nfi\n}\n_CHOOSEABIx86_(){\nCPUABILIST64=\"$(getprop ro.product.cpu.abilist64)\"\nif [[ $CPUABI == *86* ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\n_CHOOSEABI_\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nfi\n}\n_COREFILES_() {\n[[ -f archlinuxconfig.bash ]] && [[ -f espritfunctions.bash ]] && [[ -f fbindsfunctions.bash ]] && [[ -f getimagefunctions.bash ]] && [[ -f initkeyfunctions.bash ]] && [[ -f knownconfigurations.bash ]] && [[ -f maintenanceroutines.bash ]] && [[ -f necessaryfunctions.bash ]] && [[ -f printoutstatements.bash ]] && [[ -f setupTermuxArch ]]\n}\n_COREFILESDO_() {\ncd \"$WFDIR\" || exit 169\t# change directory to working file directory\nif _COREFILES_\nthen\nLOADLCRFILES=0 && _COREFILESLOAD_\nelse\ncd \"$TAMPDIR\"\n_DWNL_\n_CHKDWN_\n_CHK_ \"$@\"\nfi\n}\n_COREFILESLOAD_() {\nif [[ \"$OPT\" = BLOOM ]]\nthen\nrm -f termuxarchchecksum.sha512\nfi\nif [[ \"$OPT\" = MANUAL ]]\nthen\n_MANUAL_\nfi\n. necessaryfunctions.bash\n_LOADCONF_\n. fbindsfunctions.bash\n. initkeyfunctions.bash\n. maintenanceroutines.bash\n. archlinuxconfig.bash\n. espritfunctions.bash\n. getimagefunctions.bash\n. printoutstatements.bash\n}\n_DEPENDDM_() { # check and set download manager\nfor PKG in \"${!ADM[@]}\"\ndo\nif [[ -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\nDM=\"$PKG\"\nprintf \"\\\\nFound download tool '%s': Continuing...\\\\n\" \"$PKG\"\nbreak\nfi\ndone\n}\n_DEPENDIFDM_() { # check if download tool is available and set for install\nfor PKG in \"${!ADM[@]}\" # check from available toolset and set one for install\ndo #\tcheck for both set DM and if tool exists on device\nif [[ \"$DM\" = \"$PKG\" ]] && [[ ! -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\t#\tsets both download tool for install and exception check.\nPKGS+=($PKG)\nprintf \"\\\\nSetting download tool '%s' for install: Continuing...\\\\n\" \"$PKG\"\nfi\ndone\n}\n_DEPENDS_() {\t# check for missing commands\n_INPKGS_() {\t# install missing packages\nSTRNGB=\"\\\\e[1;38;5;146m%s\"\nSTRNGC=\"\\\\e[1;38;5;124m%s\"\nif [[ \"$COMMANDIF\" = au ]] # can enable rollback https://wae.github.io/au/\nthen\t# use 'au' to install missing packages\nau \"${PKGS[@]}\" && printf \"$STRNGB%s\" \"$STRING1F\" || printf \"$STRNGC%s\" \"$STRING2\"\nelif [[ \"$COMMANDIF\" = pkg ]]\nthen\t# use 'pkg' to install missing packages\npkg install \"${PKGS[@]}\" printf '%s' \"$STRNGC $STRING1\" || printf '%s' \"$STRNGC $STRING2\"\nelif [[ \"$COMMANDIF\" = apt ]]\nthen\t# use 'apt' to install missing packages\napt install \"${PKGS[@]}\" --yes && printf \"$STRNGB%s\" \"$STRING1\" || printf \"$STRNGC%s\" \"$STRING2\"\nfi\n}\nif [[ -z \"${VLORALCR:-}\" ]]\nthen\nPKGS=(bsdtar proot)\nelse\nPKGS=(pulseaudio bsdtar proot)\nfi\nprintf \"\\\\e[1;34mChecking prerequisites...\\\\n\\\\e[1;32m\"\nADM=([aria2]=aria2c [axel]=axel [curl]=curl [lftp]=lftpget [wget]=wget)\nif [[ \"$DM\" != \"\" ]]\nthen\n_DEPENDIFDM_\nfi\nif [[ \"$DM\" = \"\" ]]\nthen\n_DEPENDDM_\nfi\n## set and install lftp if nothing else was found\nif [[ \"$DM\" = \"\" ]]\nthen\nDM=lftp\nPKGS+=(lftp)\nprintf \"Setting download tool 'lftp' for install: Continuing...\\\\n\"\nfi\nfor PKG in \"${PKGS[@]}\"\ndo\t# check for missing commands\nCOMMANDP=\"$(command -v \"$PKG\")\" || printf \"\\\\e[1;38;5;242mCommand %s not found: Continuing...\\\\e[0m\\\\n\" \"$PKG\" # test if command exists\nCOMMANDPF=\"${COMMANDP##*/}\"\nif [[ \"$COMMANDPF\" != \"$PKG\" ]]\nthen\n_INPKGS_\nfi\ndone\nprintf \"\\\\n\\\\e[1;38;5;242mUsing %s to manage downloads.\\\\e[0m\\\\n\" \"${DM:-lftp}\"\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕧 \\\\e[1;34mPrerequisites: \\\\e[1;32mOK  \\\\e[1;34mDownloading TermuxArch...\\\\n\\\\n\\\\e[0;32m\"\n}\n_DEPENDSBLOCK_() {\n_DEPENDS_ || _PSGI1ESTRING_ \"_DEPENDS_ _DEPENDSBLOCK_ ${0##*/}\"\n_COREFILESDO_ \"$@\"\n}\n_DWNL_() { # download TermuxArch from Github\nFILE[sha]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.sha512\"\nFILE[tar]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.tar.gz\"\nif [[ \"$DM\" = aria2 ]]\nthen\t# use https://github.com/aria2/aria2\n\"${ADM[aria2]}\" -Z \"${FILE[sha]}\" \"${FILE[tar]}\"\nelif [[ \"$DM\" = axel ]]\nthen\t# use https://github.com/mopp/Axel\n\"${ADM[axel]}\" -a \"${FILE[sha]}\"\n\"${ADM[axel]}\" -a \"${FILE[tar]}\"\nelif [[ \"$DM\" = curl ]]\nthen\t# use https://github.com/curl/curl\n\"${ADM[curl]}\" \"$DMVERBOSE\" -O {\"${FILE[sha]},${FILE[tar]}\"}\nelif [[ \"$DM\" = wget ]]\nthen\t# use https://github.com/mirror/wget\n_DOADMWGET_() {\n\"${ADM[wget]}\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\"\n}\n_DOADMWGET_  || (au wget && \"$PREFIX/bin/wget\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\") || _PSGI1ESTRING_ \"_DOADMWGET_ _DWNL_ ${0##*/}\"\nelse\t# use https://github.com/lavv17/lftp\n\"${ADM[lftp]}\" \"${FILE[sha]}\" \"${FILE[tar]}\"\nfi\n}\n_EDITORCHOOSER_() {\t# add 'export EDITOR=editor_name' to HOME/.bash_profile in order to use your favorite editor during runtime\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nif command -v editor 1>/dev/null\nthen\nUSEREDIT=\"editor\"\nfi\nelif [[ -n \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"$EDITOR\"\nfi\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"nano\"\nfi\n}\n_INTRO_() {\nprintf \"\\033]2;%s\\007\" \"bash $STRNRG 📲\"\n_SETROOT_EXCEPTION_\n_INSTLLDIRCHK_\n_PRINTINTRO_ \"will attempt to install Linux in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DEPENDSBLOCK_ \"$@\"\nif [[ \"$LCC\" = \"1\" ]]\nthen\n_LOADIMAGE_ \"$@\"\nelse\n_MAINBLOCK_\nfi\n}\n_INTROBLOOM_() { # BLOOM = setupTermuxArch manual verbose\nOPT=BLOOM\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} bloom 📲\"\n_PRINTINTRO_ \"bloom option\" \"\" \"\"\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_BLOOM_\n}\n_INTROSYSINFO_() {\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} sysinfo 📲\"\n_SETROOT_EXCEPTION_\n_PRINTINTRO_ \"will create a system information file\" \"\" \"\"\n_DEPENDSBLOCK_ \"$@\"\n_SYSINFO_ \"$@\"\n}\n_DODIRCHK_() {\n_SETROOT_EXCEPTION_\nif [ ! -d \"$INSTALLDIR\" ] || [ ! -d \"$INSTALLDIR/root/bin\" ] || [ ! -d \"$INSTALLDIR/var/binds\" ] || [ ! -f \"$INSTALLDIR/bin/we\" ] || [ ! -f \"$INSTALLDIR/usr/bin/env\" ]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure is of ~/${INSTALLDIR##*/} seems to be incorrect; Cannot continue '$STRNRG'!  This command '${0##*/} help' has more information\"\nif [ -d \"$INSTALLDIR\"/tmp ]\nthen\t# check for superfluous tmp directory\nDIRCHECK=0\nDIRNAME=(dev etc home opt proc root sys usr var)\nfor IDIRNAME in ${DIRNAME[@]}\ndo\nif [ ! -d \"$INSTALLDIR/$IDIRNAME\" ]\nthen\nDIRCHECK=1\nelse\nDIRCHECK=0\nfi\ndone\nfi\nif [ -z \"${DIRCHECK:-}\" ]\nthen\nprintf \"Variable DIRCHECK is unbound.\\\\n\"\nelif [ \"$DIRCHECK\" -eq 1 ]\nthen\t# delete superfluous tmp dir\nrm -rf \"$INSTALLDIR\"/tmp\nrmdir \"$INSTALLDIR\" ||  _PSGI1ESTRING_ \"rmdir INSTALLDIR _DODIRCHK_ ${0##*/}\"\nfi\nexit 204\nfi\n}\n_INTROREFRESH_() {\nprintf '\\033]2;  bash setupTermuxArch refresh 📲 \\007'\nif [ \"${OPT:-}\" = FORCE ]\nthen\n_DODIRCHK_\nelse\n_SETROOT_EXCEPTION_\nfi\n_PRINTINTRO_ \"will refresh your TermuxArch files in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DODIRCHK_\n_DEPENDSBLOCK_ \"$@\"\n_REFRESHSYS_ \"$@\"\n}\n_INSTLLDIRCHK_() {\nif [[ -f \"$INSTALLDIR\"/bin/we ]] && [[ -d \"$INSTALLDIR\"/usr/local/termuxarch/bin ]] && [[ -d \"$INSTALLDIR\"/root/bin ]] && [[ -d \"$INSTALLDIR\"/var/binds ]]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure of ~/${INSTALLDIR##*/} appears correct;  Cannot continue '$STRNRG' to install Arch Linux in TermuxArch PRoot QEMU!  Commands '${0##*/} h[e[lp]]' have more information\"\nexit 205\nfi\n}\n_LOADCONF_() {\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n. \"${WDIR}setupTermuxArchConfigs.bash\"\n_PRINTCONFLOADED_\nelse\n. knownconfigurations.bash\nfi\n}\n_MANUAL_() {\nprintf '\\033]2; bash setupTermuxArch manual 📲 \\007'\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nelse\ncp knownconfigurations.bash \"${WDIR}setupTermuxArchConfigs.bash\"\nsed -i \"7s/.*/\\# The architecture of this device is $CPUABI; Adjust configurations in the appropriate section.  Change mirror (https:\\/\\/wiki.archlinux.org\\/index.php\\/Mirrors and https:\\/\\/archlinuxarm.org\\/about\\/mirrors) to desired geographic location to resolve 404 and checksum issues.  /\" \"${WDIR}setupTermuxArchConfigs.bash\"\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nfi\n}\n_NAMEINSTALLDIR_() {\nif [[ \"$ROOTDIR\" = \"\" ]]\nthen\nROOTDIR=arch\nfi\nINSTALLDIR=\"$(printf \"%s\\\\n\" \"$HOME/${ROOTDIR%/}\" | sed 's#//*#/#g')\"\n}\n_NAMESTARTARCH_() {\nDARCH=\"$(printf \"%s\\\\n\" \"${ROOTDIR%/}\"|sed 's#//*#/#g')\" # ${@%/} removes trailing slash\nif [[ \"$DARCH\" = \"/arch\" ]]\nthen\nAARCH=\"\"\nSTARTBI2=arch\nelse\nAARCH=\"$(printf \"%s\\\\n\" \"$DARCH\" | sed 's/\\//\\+/g')\"\nSTARTBI2=arch\nfi\nSTARTBIN=start\"$STARTBI2$AARCH\"\n}\n_OPT1_() {\nif [[ -z \"${2:-}\" ]]\nthen\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Bb]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to bloom.\"\n_INTROBLOOM_ \"$@\"\nelif [[ \"${2//-}\" = [Dd]* ]] || [[ \"${2//-}\" = [Ss]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to sysinfo.\"\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\nelif [[ \"${2//-}\" = [Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to install.\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm][Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to 1 refresh.\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\n_OPT2_ \"$@\"\nfi\n}\n_OPT2_() {\nif [[ -z \"${3:-}\" ]]\nthen\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Ii]* ]]\nthen\nshift 2\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\nelif [[ \"${3//-}\" = [Mm][Ii]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Mm]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 1 refresh.\\\\n\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nfi\n}\n_PREPTMPDIR_() {\n[ -d \"$INSTALLDIR/tmp\" ] || { mkdir -p \"$INSTALLDIR/tmp\" && chmod 777 \"$INSTALLDIR/tmp\" && chmod +t \"$INSTALLDIR/tmp\" ; }\nTAMPDIR=\"$INSTALLDIR/tmp/${0##*/}$STIME$PPID\"\n[ -d \"$TAMPDIR\" ]|| mkdir -p \"$TAMPDIR\"\n}\n_PREPTERMUXARCH_() {\n_NAMEINSTALLDIR_\n_NAMESTARTARCH_\n_PREPTMPDIR_ || _PSGI1ESTRING_ \"_PREPTMPDIR_ _PREPTERMUXARCH_ ${0##*/}\"\n_EDITORCHOOSER_\n}\n_PRINTERRORMSG_() {\nprintf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\n\\\\n\" \"Signal generated in '$1'; Cannot complete task; \" \"Continuing...\"\nprintf \"\\\\e[1;34mIf you find improvements for \\\\e[0;34m'%s' \\\\e[1;34mplease open an issue and an accompanying pull request.  A pull request can assist in shedding more light on an issue.\\\\n\\\\n\" \"${0##*/}\"\n}\n_PRPREFRESH_() {\nprintf \"\\\\n%s\\\\n\" \"Refresh mode is set to refresh mode $1;  Initializing system refresh...\"\nLCR=\"$1\"\n}\n_PRINTCONFLOADED_() {\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[0;32m%s\\\\e[1;32m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕑\" \"TermuxArch configuration\" \"$WDIR\" \"setupTermuxArchConfigs.bash\" \"loaded:\" \"OK\"\n}\n_PRINTSHA512SYSCHKER_() {\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m\\\\n%s \\\\e[34;1m\\\\e[30;1m%s \\\\n\\\\e[0;0m\\\\n\" \" 🔆 ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE sha512sum mismatch!  Setup initialization mismatch!  Is your wireless on?\" \"  Try again, initialization was not successful this time.  Wait a little while.  Then run the command 'bash $STRNRG' again...\"\nprintf '\\033]2; Run %s again...\\007' \"bash $STRNRG\"\nexit 124\n}\n_PRINTSTARTBIN_USAGE_() {\n_NAMESTARTARCH_\nif [[ -x \"$(command -v \"$STARTBIN\")\" ]]\nthen\nprintf \"\\\\e[1;38;5;155m\\\\n%s\\\\n\" \"$STARTBIN help\"\n\"$STARTBIN\" help\nprintf \"\\\\n\"\nelse\nprintf \"\\\\n\"\nfi\n}\n_PRINTUSAGE_() {\nprintf \"\\\\n\\\\e[1;32m  %s     \\\\e[0;32mcommands \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"HELP\" \"'${0##*/} he[lp]'\" \"shows this help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s    \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"TERSE\" \"'${0##*/} he[lp]'\" \"shows the terse help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s  \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"VERBOSE\" \"'${0##*/} h[elp]'\" \"shows the verbose help screen.\"\nprintf \"\\\\n\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"Usage information for\" \" ${0##*/}\" \" version $VERSIONID.  Some arguments can be abbreviated to one, two and three letters each;  Two and three letter arguments are acceptable.  For example\" \" 'bash ${0##*/} cs'\" \" will use 'curl' to download TermuxArch and produce a file like\" \" setupTermuxArchSysInfo$STIME.log\" \" populated with system information.  If you have a new smartphone that you are not familiar with, once created, this file\" \" setupTermuxArchSysInfo$STIME.log\" \" might make for an interesting read in order to find out more about the device you might be holding in the palm of your hand right at this moment.  User configurable variables are in file\" \" setupTermuxArchConfigs.bash.\" \"  To create this file from file\" \" knownconfigurations.bash\" \" in the working directory, execute\" \" 'bash ${0##*/} manual'\" \" to create and edit file\" \" setupTermuxArchConfigs.bash\" \".\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  INSTALL\" \"  You can run\" \" ${0##*/}\" \" without arguments in a bash shell to install Arch Linux in a PRoot QEMU container in a smartphone, smartTV, table, wearable and more...  Command\" \" 'bash ${0##*/} curl'\"  \" will envoke 'curl' as the download manager.  You can copy\" \" knownconfigurations.bash\" \" to\" \" setupTermuxArchConfigs.bash\" \" with the command\" \" 'bash ${0##*/} manual'\" \" to edit your preferred mirror site, refine the init statement and to access more options.  Change mirror to desired geographic location to resolve download, 404 and checksum issues should these occur.\"\nprintf \"\\\\n\\\\e[0;32m  %s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"After editing file\" \" setupTermuxArchConfigs.bash\" \", you can run\" \" 'bash ${0##*/}'\" \" and\" \" setupTermuxArchConfigs.bash\" \" loads automatically from the working directory.  User configurable variables are present in this file for your convenience. This link\" \" https://github.com/SDRausty/TermuxArch/issues/212\" \" at GitHub has the most current information about setting Arch Linux in PRoot QEMU as the default login shell in Termux in your smartphone, tablet, smartTV, wearable and more.  If you choose to, or are simply curious about setting Arch Linux in PRoot QEMU as the default login shell, please be well acquainted with safe mode;  Long tapping on NEW SESSION will open a new session in safe mode.  This mode can be used to reset the default shell.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  PURGE    \" \"command \" \"'${0##*/} purge' \" \"uninstalls Arch Linux in PRoot from Termux.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"  SYSINFO  \" \"command\" \" '${0##*/} sysinfo'\" \" creates a system information file;  A file like\" \" 'setupTermuxArchSysInfo$STIME.log'\" \" will be populated with device and system information in the working directory.  Please post information from this file along with details at\" \" https://github.com/TermuxArch/TermuxArch/issues\"  \" if questions or comments are related to a particular device;  Should screenshots help in resolving an issue, include these with information from this system information log file as well.  If you are sharing an issue please consider creating a pull request at\"  \" https://github.com/TermuxArch/TermuxArch/pulls\"  \" also.  A pull request can give a much better perspective of how an issue can be easily resolved.\"\nif [[ \"$LCC\" = 1 ]]\nthen\nprintf \"\\\\e[1;38;5;150m%s\\\\n\\\\n\" \"$(sed -n '600,1240p;1240p' \"$0\" | grep \"^##\" | sed 's/## /\\n  /g')\"\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information:\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\n_PRINTSTARTBIN_USAGE_\nelse\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information.\\\\n\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\nfi\n}\n_PRINTINTRO_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕛 \\\\e[1;34mＴｅｒｍｕｘＡｒｃｈ %s $1\\\\e[1;32m$2\\\\e[1;34m$3.  You can use '!!' to run this BASH script again with options.  Please check the wireless connection if you do not see one o'clock 🕐 below and ensure background data is not restricted.  The command \\\\e[1;32mbash %s help \\\\e[1;34mhas additional information about \\\\e[1;32m%s\\\\e[1;34m.  \\\\e[0;34m\" \"version $VERSIONID\" \"${0##*/}\" \"${0##*/}\"\n}\n_PSGI1ESTRING_() {\t# print signal generated in arg 1 format\nprintf \"\\\\e[1;33m%s\\\\e[1;34m; \\\\e[1;32mCONTINUING...  \\\\e[0;34mExecuting \\\\e[0;32m%s\\\\e[0;34m in the native shell once the installation and configuration process completes will attempt to finish the autoconfiguration and installation if the installation and configuration processes were not completely successful.  Should better solutions for \\\\e[0;32m%s\\\\e[0;34m be found, please open an issue and accompanying pull request if possible.\\\\nThe entire script can be reviewed by creating a \\\\e[0;32m%s\\\\e[0;34m directory with the command \\\\e[0;32m%s\\\\e[0;34m which can be used to access the entire installation script.  This option does NOT configure and install the root file system.  This command transfers the entire script into the home directory for hacking, modification and review.  The command \\\\e[0;32m%s\\\\e[0;34m has more information about how to use use \\\\e[0;32m%s\\\\e[0;34m.\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL GENERATED in '$1'\" \"'bash ${0##*/} refresh'\" \"'${0##*/}'\" \"'~/TermuxArchBloom/'\" \"'${0##*/} b'\" \"'${0##*/} help'\" \"'${0##*/}'\"\n}\n_PTSTRPXT_() { # print run on exit messages\nprintf \"\\\\e[0;32mPlease run 'bash %s' again, or use 'bash %s refresh' once Arch Linux is installed in TermuxArch PRoot QEMU.  \" \"${STRNRG:-}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mRunning command '%s refresh' assists in completing the installation and configuration.  This command also updates the system to the newest version and runs the command 'keys'.  If command '%s refresh' does not assist in completing the tasks of installing and configuring the Arch Linux system completely, these alternate commands '%s re' then using '%s r' helps in the order given.  Command 'keys' assists in installing default Arch Linux system keyrings.  \" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mCommand '%s refresh' can be used to refresh the Arch Linux system in TermuxArch PRoot QEMU system to the newest version published;  Command '%s sysinfo' has more information and can help with diagnostics.  \" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[1;32mIs the system that you are using [up to date with packages](https://github.com/WAE/au), [Termux app](https://github.com/termux/termux-app/releases) and device software?  \"\nprintf \"\\\\e[0;32mCommand '%s help' has more information.  \" \"${0##*/}\"\n}\n_QEMU_() {\n_QEMUCHCK_() {\nif [[ \"$CPUABI\" == \"$1\" ]]\nthen\nprintf \"\\\\e[1;33m %s\\\\e[0;33m  %s\\\\e[1;31m  %s  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"QEMU NOTICE!  Machine architecture is $CPUABI.  Please choose a different computer architecture.\" \"Exiting...\"\nexit 189\nfi\n}\n_INSTLLDIRCHK_\n_INST_() { # check for neccessary commands\nCOMMS=\"$1\"\n[ \"$COMMS\" = \"qemu-user-x86_64\"  ] && COMMS=\"qemu-x86_64\"\nCOMMANDR=\"$(command -v au)\" || printf \"%s\\\\n\\\\n\" \"$STRING1\"\nCOMMANDIF=\"${COMMANDR##*/}\"\nPKG=\"$2\"\n[ \"$PKG\" = \"qemu-user-x86_64\"  ] && PKG=\"qemu-user-x86_64\"\n_INPKGS_() {\nprintf \"%s\\\\n\" \"Beginning qemu '$ARCHITEC' setup:\"\nif [ \"$COMMANDIF\" = au ]\nthen\nau \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nelse\ncurl -JOL https://wae.github.io/au/au \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nfi\n}\nif ! command -v \"$COMMS\"\nthen\n_INPKGS_\nfi\n}\n_INSTLLDIRCHK_\nprintf \"%s'\\\\n\" \"Command '$STRNRG':  Please set the architecture to install with PRoot QEMU emulation.  This computer architecture for this device is '$CPUABI'. 32 bit arm7 supports i386 emulated architecture.  64 bit arm64 supports arm7, i386 and x86_64 emulated architectures with PRoot QEMU.  Please select the architecture to install by number (2-5) from this list:\"\nselect ARCHITECTURE in exit armv7 arm64-v8a i386 x86_64 ;\ndo\n[[ \"$ARCHITECTURE\" == [Ee]* ]] && exit\nif [[ \"$ARCHITECTURE\" == armv7 ]]\nthen\n_QEMUCHCK_ \"armeabi-v7a\"\nARCHITEC=\"arm\"\nCPUABI=\"armeabi-v7a\"\nelif [[ \"$ARCHITECTURE\" == arm64-v8a ]]\nthen\n_QEMUCHCK_ \"arm64-v8a\"\nARCHITEC=\"aarch64\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == i386 ]]\nthen\n_QEMUCHCK_ \"i386\"\nARCHITEC=\"i386\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == x86_64 ]]\nthen\n_QEMUCHCK_ \"x86_64\"\nARCHITEC=\"x86_64\"\nCPUABI=\"$ARCHITECTURE\"\nfi\n[[ $CPUABI == *arm* ]] || [[ $CPUABI == *86* ]] && printf \"%s\\\\n\" \"Option ($REPLY) with architecture $CPUABI (${ARCHITEC:-}) was picked from this list;  The chosen Arch Linux architecture for installation with emulation is $CPUABI (${ARCHITEC:-}):  \" && INCOMM=\"qemu-user-${ARCHITEC:-}\" && QEMUCR=0 && break || printf \"%s\\\\n\" \"Answer ($REPLY) was chosen;  Please select the architecture by number from this list: (1) armeabi, (2) armeabi-v7a, (3) arm64-v8a, (4) i386, (5) x86_64 or choose option (6) exit to exit command '${0##*/}':\"\ndone\nINCOMM=\"qemu-user-$ARCHITEC\" && QEMUCR=0\nif ! command -v \"${INCOMM//-user}\"\nthen\n_INST_ \"$INCOMM\" \"$INCOMM\" \"${0##*/}\" || _PSGI1ESTRING_ \"_INST_ _QEMU_ setupTermuxArch ${0##*/}\"\nfi\nprintf \"Detected architecture is %s;  Install architecture is set to %s.\\\\n\" \"$CPUABI\" \"$ARCHITEC\"\n}\n_RMARCHQ_() {\nprintf \"\\\\n\\\\e[0;33m %s \\\\e[1;33m%s \\\\e[0;33m%s\\\\n\\\\n\\\\e[1;30m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"DIRECTORY NOTICE!  ~/${INSTALLDIR##*/}/\" \"directory detected.\" \"Purge '$INSTALLDIR' as requested?\"\nif [[ -z \"${PURGELCR:-}\" ]]\nthen\nPURGEMETHOD=\"quick \"\nelse\nPURGEMETHOD=\"\"\nfi\nprintf \"\\\\e[1;30m\"\nwhile true; do\nread -n 1 -p \"Uninstall '~/${INSTALLDIR##*/}/' with ${PURGEMETHOD}purge? [Y|n] \" RUANSWER\nif [[ \"$RUANSWER\" = [Ee]* ]] || [[ \"$RUANSWER\" = [Nn]* ]] || [[ \"$RUANSWER\" = [Qq]* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"No was answered: uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nbreak\nelif [[ \"$RUANSWER\" = [Yy]* ]] || [[ \"$RUANSWER\" = \"\" ]]\nthen\nprintf \"\\\\e[30m%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/'...\"\nif grep -q ^pacmd \"$PREFIX/etc/profile\" && grep -q ^pulseaudio \"$PREFIX/etc/profile\"\nthen\nawk '!/^pulseaudio/' \"$PREFIX/etc/profile\" > \"$TAMPDIR/profile$FTIME\"\nawk '!/^pacmd/' \"$TAMPDIR/profile$FTIME\" > \"$PREFIX/etc/profile\"\nfi\nif [[ -d \"$INSTALLDIR\" ]]\nthen\n_RMARCHRM_\nelse\nprintf \"%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nfi\nif [[ -e \"$PREFIX/bin/$STARTBIN\" ]]\nthen\nrm -f \"$PREFIX/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$PREFIX/bin/$STARTBIN': nothing to do for '$PREFIX/bin/$STARTBIN'.\"\nfi\nif [[ -e \"$HOME/bin/$STARTBIN\" ]]\nthen\nrm -f \"$HOME/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$HOME/bin/$STARTBIN': nothing to do for '$HOME/bin/$STARTBIN'.\"\nfi\nprintf \"%s \\\\e[1;32mDONE\\\\e[30m\\\\n\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/':\"\nbreak\nelse\nprintf \"\\\\nYou answered \\\\e[33;1m%s\\\\e[30m.\\\\n\\\\nAnswer \\\\e[32mYes\\\\e[30m or \\\\e[1;31mNo\\\\e[30m. [\\\\e[32my\\\\e[30m|\\\\e[1;31mn\\\\e[30m]\\\\n\" \"$RUANSWER\"\nfi\ndone\n}\n_RMARCHRM_() {\n_RMARCHCRRM_() {\t# remove installation\nchmod -R 777 \"$INSTALLDIR\" || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\nfind \"$INSTALLDIR\" -type l -delete  || _PSGI1ESTRING_ \"find INSTALLDIR _RMARCHRM_ ${0##*/}\"\nrm -rf \"$INSTALLDIR\" || _PSGI1ESTRING_ \"rm -rf INSTALLDIR _RMARCHRM_ ${0##*/}\"\n}\n_DOEXONSTGE_() {\t# remove empty storage directories\nprintf \"\\\\e[0;35m\"\nfor EXONSTGEM in ${EXONSTGE[@]:-}\ndo\n{ find \"$EXONSTGEM\" -type l -delete && rmdir \"$EXONSTGEM\" ; } || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\ndone\nprintf \"\\\\e[1;30m\"\n}\n_SETROOT_EXCEPTION_\ndeclare -a EXONSTGE\nEXONSTGE=(\"$(find \"$INSTALLDIR\" -name storage -type d || printf \"\")\")\nif [[ -n \"${EXONSTGE:-}\" ]]\nthen\n_DOEXONSTGE_\nfi\n_RMARCHCRRM_\n}\n_SETROOT_EXCEPTION_() {\nif [[ \"$INSTALLDIR\" = \"$HOME\" ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../../ ]]\nthen\nprintf  '\\033]2;%s\\007' \"Rootdir exception.  Please run bash ${0##*/} again with different options...\"\nprintf \"\\\\n\\\\e[1;31m%s\\\\n\\\\n\" \"Rootdir exception.  Please run the script ${0##*/} again with different options...\"\nexit 125\nfi\n}\n_TAMATRIXEXIT_() { # run when Matrix presentation ends\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\n}\n## USER INFORMATION:  Configurable variables such as mirrors and download manager options are in 'setupTermuxArchConfigs.bash'.  Working with 'knownconfigurations.bash' in the working directory is simple.  The command 'bash setupTermuxArch manual' will create 'setupTermuxArchConfigs.bash' in the working directory for editing;  This command 'setupTermuxArch h' has more information.\ndeclare -A ADM\t\t# declare associative array for download tools\ndeclare -A ALLRCTFVR\t# declare associative array for all known architectures\nALLRCTFVR=([i386]=\"i386\" [i686]=\"i686\" [x86]=\"x86\" [x86_64]=\"x86_64\" [armeabi]=\"armeabi\" [armv7]=\"armv7\" [armeabi-v7a]=\"armeabi-v7a\" [arm64-v8a]=\"arm64-v8a\")\t# populate associative array for all known architectures\ndeclare -A FILE\t\t# declare associative array for download file\ndeclare -a ECLAVARR\t# declare indexed array for arrays and variables\ndeclare -a LC_TYPE\t# declare indexed array for locale types\ndeclare -a QEMUUSER\t# declare indexed array for qemu user tools\ndeclare PRFXTOLS\t# declare variable for device tools\ndeclare -A EMPARIAS\t# declare associative array for empty variables\nEMPARIAS=([COMMANDIF]=\"\" [COMMANDG]=\"\" [DFL]=\"# used for development\" [DM]=\"\" [FILE]=\"\" [FSTND]=\"\" [INSTALLDIR]=\"\" [LCC]=\"\" [LCP]=\"\" [OPT]=\"\" [QEMUCR]=\"\" [ROOTDIR]=\"\" [WDIR]=\"\" [SDATE]=\"\" [STI]=\"# generates pseudo random number\" [STIME]=\"# generates pseudo random number\" [USEREDIT]=\"\")\nfor PKG in ${!EMPARIAS[@]} ; do declare \"$PKG\"=\"\" ; done\nECLAVARR=(ARGS BINFNSTP COMMANDIF COMMANDR COMMANDG CPUABI CPUABI5 CPUABI7 CPUABI8 CPUABIX86 CPUABIX8664 DFL DMVERBOSE DM EDO01LCR ELCR USEREDIT FSTND INSTALLDIR LCC LCP LCR OPT PKGS ROOTDIR RWDIR SDATE STI STIME STRING1 STRING2 TMXRCHBND)\nfor ECLAVARS in ${ECLAVARR[@]} ; do declare $ECLAVARS ; done\nARGS=\"${@%/}\"\n## TERMUXARCH FEATURES INCLUDE:\n## 1)  Create aliases and commands that aid in using the command line, and assist in accessing the more advanced features like the commands 'pikaur' and 'yay' easily;  The files '.bashrc', '.bash_profile' and 'usr/local/termuxarch/bin/README.md' have more information about this feature,\n## 2)  Set timezone and locales from device,\n## 3)  Test for correct OS,\n## 4)  Get device information via the 'getprop' command,\nCPUABI=\"$(getprop ro.product.cpu.abi)\"\nCPUABI5=\"armeabi\"\t# used for development; 'getprop ro.product.cpu.abi' ascertains architecture\nCPUABI7=\"armeabi-v7a\"\t# used for development\nCPUABI8=\"arm64-v8a\"\t# used for development\nCPUABIX86=\"i386\"\t# used for development\nCPUABIX8664=\"x86_64\"\t# used for development\nDMVERBOSE=\"-q\"\t# -v for verbose download manager output from curl and wget;  for verbose output throughout runtime also change in 'setupTermuxArchConfigs.bash' when using 'setupTermuxArch m[anual]'\nELCR=1\nROOTDIR=\"/arch\"\nSTRING1=\"COMMAND 'au' enables rollback, available at https://wae.github.io/au/ IS NOT FOUND: Continuing... \"\nSTRING1F=\"COMMAND 'au' enables auto upgrade and rollback.  Available at https://wae.github.io/au/ is found: Continuing... \"\nSTRING2=\"Cannot update '${0##*/}' prerequisites: Continuing...\"\n_COMMANDGNE_() { printf \"\\\\n\\\\e[1;48;5;138m%s\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Run '${0##*/}' and 'bash ${0##*/}' from the native BASH shell in Termux:  EXITING...\" && exit 126 ; }\nCOMMANDG=\"$(command -v getprop)\" || _COMMANDGNE_\n_IFBINEXT_() {\nif [ -d \"$HOME/bin\" ] && grep \"$HOME/bin\" <<< \"$PATH\"\nthen\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$HOME/bin/$SCMD\" && chmod 700 \"$HOME/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to HOME/bin setupTermuxArch ${0##*/}\"\nelse\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$PREFIX/bin/$SCMD\" && chmod 700 \"$PREFIX/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to PREFIX/bin setupTermuxArch ${0##*/}\"\nfi\n}\nSCMD=\"au\"\nif ! command -v \"$SCMD\"  > /dev/null\nthen\nprintf \"\\\\e[1;38;5;142mCommand \\\\e[1;38;5;138m%s\\\\e[1;38;5;142m not found: \\\\e[1;38;5;150mContinuing...\\\\n\" \"'$SCMD'\" && _IFBINEXT_\nfi\nCOMMANDR=\"$(command -v au)\" || COMMANDR=\"$(command -v pkg)\" || COMMANDR=\"$(command -v apt)\"\nCOMMANDIF=\"${COMMANDR##*/}\"\n## 5)  Generate pseudo random numbers to create uniq strings,\nSDATE=\"$(date +%s)\" || SDATE=\"$(shuf -i 0-99999999 -n 1)\" || _PSGI1ESTRING_ \"SDATE setupTermuxArch ${0##*/}\"\nif [[ -r /proc/sys/kernel/random/uuid ]]\nthen\nSTIME=\"$(cat /proc/sys/kernel/random/uuid)\" && STIME=\"${STIME//-}\" && STIME=\"${STIME//[[:alpha:]]}\" && STIME=\"${STIME:0:3}\"\nelse\nSTIME=\"$SDATE\" && STIME=\"$(rev <<< \"${STIME:7:4}\")\"\nfi\nONESA=\"${SDATE: -1}\"\nFTIME=\"$(date +%F%H%M%S)\"\nSTIME=\"$ONESA$STIME\"\n## 6)  Determine its own name and location of invocation,\nWDIR=\"$PWD/\" && WFDIR=\"$(realpath \"$0\")\"\nWFDIR=\"${WFDIR%/*}\"\n## 7)  Create a default Arch Linux in TermuxArch PRoot QEMU user account with the TermuxArch command 'addauser' that also configure user accounts to use the Arch Linux 'sudo' command,\n## 8)  Install emulated computer architectures with QEMU in your smartphone with two taps, or in one tap with 'setupTermuxArch visualorca [options]',\n## 9)  Help make some of aur installers including the installer the Arch Linux package installers 'pacaur', 'pikaur' and 'yay' with TermuxArch commands 'makeaur*' and more!  Please read /usr/local/termuxarch/bin/README.md for details,\n## 10)  And all options are are optional for installing Arch Linux in Android!\n## >>>>>>>>>>>>>>>>>>\n## >> HELP OPTIONS >>\n## >>>>>>>>>>>>>>>>>>\n## Open an issue and an accompanying pull request at GitHub if you would like to have any these options amended and/or new options added.  Please see the new feature at Github, the discussion option.  Brackets mean optional.  They are not meant to be typed.\n## []  Run default Arch Linux install.\nif [[ -z \"${1:-}\" ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [./path/systemimage.tar.gz [customdir]]  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch ./[path/]systemimage.tar.gz' and 'setupTermuxArch /absolutepath/systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  The install directory argument is optional.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"${ARGS:0:1}\" = . ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"1\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [systemimage.tar.gz [customdir]]  Install directory argument is optional.  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"$ARGS\" = *.tar.gz* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"0\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [axd|axs]  Get device system information with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx][Dd]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'axel'.\\\\n\"\nDM=axel\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [ax[el] [customdir]|axi [customdir]]  Install Arch Linux with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'axel' as download manager.\\\\n\"\nDM=axel\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [ad|as]  Get device system information with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa][Dd]* ]] || [[ \"${1//-}\" = [Aa][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'aria2c'.\\\\n\"\nDM=aria2\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [a[ria2c] [customdir]|ai [customdir]]  Install Arch Linux with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa]* ]]\nthen\nprintf \"\\\\nSetting 'aria2c' as download manager.\\\\n\"\nDM=aria2\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [bl[oom]]  Create ~/TermuxArchBloom directory and Arch Linux in TermuxArch PRoot QEMU root tree skeleton and skeleton files.  This option does NOT install the complete root file system.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb][Ll]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\nELCR=0\n_ARG2DIR_ \"$@\"\n_INTROBLOOM_ \"$@\"\n## [b[loom]]  Create a local copy of TermuxArch in TermuxArchBloom.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\n_INTROBLOOM_ \"$@\"\n## [cd|cs]  Get device system information with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Dd]* ]] || [[ \"${1//-}\" = [Cc][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'curl'.\\\\n\"\nDM=curl\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [cmi] [customdir]  Install Arch Linux with manual install using 'curl'.\nelif [[ \"${1//-}\" = [Cc][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nDM=curl\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [c[url] [customdir]|ci [customdir]]  Install Arch Linux with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Ii]* ]] || [[ \"${1//-}\" = [Cc]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nDM=curl\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [de[bug]|s[ysinfo]]  Generate system information.\nelif [[ \"${1//-}\" = [Dd][Ee]* ]] || [[ \"${1//-}\" = [Ss]* ]]\nthen\nprintf \"\\\\nSetting mode to sysinfo.\\\\n\"\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [do [[flavor] [variaty]] [installdir]]  please see [systemimage.tar.gz [customdir]], https://github.com/TermuxArch/TermuxArch/issues/25, https://github.com/TermuxArch/TermuxArch/issues/34 and https://github.com/TermuxArch/TermuxArch/issues/68 for information.\nelif [[ \"${1//-}\" = [Dd][Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to do/what.\\\\n\"\nshift\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [he[lp] [customdir]]  Display terse builtin help.\nelif [[ \"${1//-}\" = [Hh][Ee]* ]]\nthen\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [h [customdir]]  Display verbose builtin help.\nelif [[ \"${1//-}\" = [?]* ]] || [[ \"${1//-}\" = [Hh]* ]]\nthen\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [i[nstall] [customdir]]  Install Arch Linux in a custom directory.  Instructions: Install in userspace.  The HOME directory is appended to the installation directory.  To install Arch Linux in HOME/customdir use 'bash setupTermuxArch install customdir'.  In the BASH shell you can use './setupTermuxArch install customdir'.  All options can be abbreviated to one, two and three letters.  Hence './setupTermuxArch install customdir' can be run as './setupTermuxArch i customdir' in BASH.\nelif [[ \"${1//-}\" = [Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [ld|ls]  Get device system information with 'lftp'.\nelif [[ \"${1//-}\" = [Ll][Dd]* ]] || [[ \"${1//-}\" = [Ll][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'lftp'.\\\\n\"\nDM=lftp\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [l[ftp] [customdir]]  Install Arch Linux with 'lftp'.\nelif [[ \"${1//-}\" = [Ll]* ]]\nthen\nprintf \"\\\\nSetting 'lftp' as download manager.\\\\n\"\nDM=lftp\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [matr[ix]]  Print TermuxArch source code as Matrix loop\nelif [[ \"${1//-}\" = [Mm][Aa][Tt][Rr]* ]]\nthen\nprintf \"Setting mode to matrix loop.\\\\n\"\nMATRIXLCR=0\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [mat[ix]]  Print TermuxArch source code as Matrix\nelif [[ \"${1//-}\" = [Mm][Aa][Tt]* ]]\nthen\nprintf \"\\\\nSetting mode to matrix.\\\\n\"\nMATRIXLCR=1\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [m[anual]]  Manual Arch Linux install, can be useful for resolving download and proot init statement issues.\nelif [[ \"${1//-}\" = [Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Mm]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [o[ption]]  Option under development.\nelif [[ \"${1//-}\" = [Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to option.\\\\n\"\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh with refresh user directories\\\\e[1;34m;\\\\e[0;32m For a full system refresh you can use the%s \\\\e[1;32m'%s' \\\\e[0;32m%s\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} ref[resh]\" \"command\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [purge [customdir]]  Purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp][Uu]* ]]\nthen\nprintf \"\\\\nSetting mode to purge.\\\\n\"\nPURGELCR=0\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [p[urge] [customdir]] Quick purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp]* ]]\nthen\nprintf \"\\\\nSetting mode to quick purge.\\\\n\"\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [q[emu] [m[anual]] [i[nstall]|r[e[f[resh]]]] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Issue [Implementing QEMU #25](https://github.com/TermuxArch/TermuxArch/issues/25) has more information.\nelif [[ \"${1//-}\" = [Qq][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu manual install.\\\\n\"\nOPT=MANUAL\n_QEMU_\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu.\\\\n\"\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]*[Ff][Oo][Rr][Cc][Ee] ]]\nthen\nprintf \"\\\\nSetting mode to full refresh force.\\\\n\"\nOPT=FORCE\necho Developing feature\\; Please see https://github.com/TermuxArch/TermuxArch/discussions/92 for more information.\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [refre[sh] [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and the Arch Linux installation itself.  This option is useful for refreshing the installation, the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.  This refresh mode also runs keys, generates locales and updates the Arch Linux in PRoot QEMU system.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [ref [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and populate the installation from the cache directory.  Useful for refreshing the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff]* ]]\nthen\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [re [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for refreshing the root user's home directory and the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh with refresh user directories.  Directory '/var/backups/' backs up files \\\\e[1;34m:\\\\e[0;32m For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [r [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for only refreshing the root user's home directory and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.\nelif [[ \"${1//-}\" = [Rr]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh; Directory '/var/backups/' backs up files\\\\e[1;34m:\\\\e[0;32m  For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [u[pdateTermuxTools] [refresh] [customdir]]  Developing implementation; Update installation with Termux tools.\nelif [[ \"${1//-}\" = [Uu]* ]]\nthen\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh including user directories\\\\e[1;34m;\\\\e[0;32m  For a full system refresh the%s \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [vis[ualorca] [manual] [install|refresh] [customdir]]  Install Arch Linux on smartphone.  Please use the TermuxArch command 'orcaconf' once Arch Linux in installed to complete the configuration.  Issue [Expanding setupTermuxArch so visually impaired users can install Orca screen reader (assistive technology) and have VNC support added easily. #34](https://github.com/TermuxArch/TermuxArch/issues/34) has more information about this option.\nelif [[ \"${1//-}\" = [Vv][Ii][Ss]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vis[ualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [vi[sualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv][Ii]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vi[sualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [v[isualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to v[isualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [wd|ws]  Get device system information with 'wget'.\nelif [[ \"${1//-}\" = [Ww][Dd]* ]] || [[ \"${1//-}\" = [Ww][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'wget'.\\\\n\"\nDM=wget\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [w[get] [customdir]]  Install Arch Linux with 'wget'.\nelif [[ \"${1//-}\" = [Ww]* ]]\nthen\nprintf \"\\\\nSetting 'wget' as download manager.\\\\n\"\nDM=wget\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_\nfi\n## >>>>>>>>>>>>>>>>>>\n## >>  HELP FACTS  >>\n## >>>>>>>>>>>>>>>>>>\n## THESE OPTIONS ARE AVAILABLE FOR YOUR CONVENIENCE:\n## GRAMMAR[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## OPTIONS[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## GRAMMAR[b]: setupTermuxArch [WHAT] [WHERE]\n## OPTIONS[b]: setupTermuxArch [~/|./|/absolute/path/]image.tar.gz [WHERE]\n## DEFAULTS ARE IMPLIED AND CAN BE OMITTED\n## SYNTAX[1]: [HOW (aria2|axel|curl|lftp|wget (default1: present on system (default2: lftp)))]\n## SYNTAX[2]: [DO (do|help|install|manual|purge|refresh|sysinfo (default: install))]\n## SYNTAX[3]: [WHERE (default: arch)]  Install in userspace, not external storage.\n## EXAMPLE USAGE:\n## USAGE[1]: 'setupTermuxArch curl sysinfo' will use curl as the download manager and produce a system information file in the working directory.  This can be abbreviated to 'setupTermuxArch cs' and 'setupTermuxArch c s'.\n## USAGE[2]: 'setupTermuxArch curl manual customdir' will install the installation in customdir with curl and use manual mode during installation.\n## USAGE[3]: 'setupTermuxArch curl refresh customdir' will refresh the installation using curl as the download manager.\n## Should any of these options fail to work as expected, please open an issue at GitHub with the command line used and output.  This product is being designed for both the sighted, and also the visually impaired;  Comments are welcome at discussions and issues webportals.\n## After installing TermuxArch on device, file 'INSTALLDIR/usr/local/termuxarch/bin/README.md' has more information.  The TermuxArch files in directory 'INSTALLDIR/usr/local/termuxarch/bin' have more information.\n## Very many hardy thank yous to contributors who are helping and have worked very hard for many long years, some for more, and to those who took mere minutes from their valuable effort with time in order to make this open source resource much better for all of us!  Please enjoy using TermuxArch in PRoot QEMU in Android, Chromebook, Amazon Fire OS and Windows on smartphone, tablet, wearable and similar:  setupTermuxArch FE\n"
        },
        {
          "name": "setupTermuxArch.bash",
          "type": "blob",
          "size": 51.44921875,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 (c) by SDRausty, all rights reserved, see LICENSE\n## hosting termuxarch.github.io/TermuxArch courtesy pages.github.com\n## termuxarch.github.io/TermuxArch/CONTRIBUTORS thank you for your help!\n################################################################################\nset -Eeuo pipefail\nshopt -s  extglob nullglob globstar\nunset LD_PRELOAD\nVERSIONID=2.0.548\n_STRPEROR_() { # run on script error\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Generated script signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\n[ $(ifconfig 2>/dev/null | grep inet | wc -l) = 1 ] && printf \"\\\\e[1;48;5;133m %s\" \"Please ensure background data is not restricted.  Check the wireless connection.  \"\nexit \"$RV\"\n}\n_STRPEXIT_() { # run on exit\nlocal RV=\"$?\"\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\nif [[ \"$RV\" != 0 ]]\nthen\n_PTSTRPXT_\nfi\nif [[ \"$RV\" = 0 ]]\nthen\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-}:  DONE 🏁 \"\nelse\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"[Exit Signal $RV] DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-} [Exit Signal $RV]:  DONE 🏁 \"\nfi\n[ -z \"${TAMPDIR:-}\" ] || rm -rf \"$TAMPDIR\"\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n}\n_STRPHNGP_() { # run on hang up\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} HANG UP:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPNTRT_() { # run on signal\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m%s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPQUIT_() { # run on quit\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} QUIT:  Quit signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPTERM_() { # run on terminate\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} TERMINATE:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\ntrap '_STRPEROR_ $LINENO $BASH_COMMAND $?' ERR\ntrap '_STRPEXIT_ $LINENO $BASH_COMMAND $?' EXIT\ntrap '_STRPHNGP_ $LINENO $BASH_COMMAND $?' HUP\ntrap '_STRPNTRT_ $LINENO $BASH_COMMAND $?' INT\ntrap '_STRPQUIT_ $LINENO $BASH_COMMAND $?' QUIT\ntrap '_STRPTERM_ $LINENO $BASH_COMMAND $?' TERM\nARGS=\"${@%/}\"\nPGNM=\"${0##*/}\"\n{ [ -z \"${ARGS:-}\" ] && STRNRG=\"${0##*/}\" ; } || STRNRG=\"${0##*/} ${ARGS:-}\"\nif [ \"$EUID\" = 0 ] || [ \"$UID\" = 0 ]\nthen\nprintf \"\\\\e[1;48;5;168m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please do not use the root login for PRoot:  EXITING...\" && exit\nfi\nif [ -w /root ]\nthen\nprintf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please run '${0##*/}' and 'bash ${0##*/}' from the BASH shell in native Termux:  EXITING...\" && exit\nfi\n_ARG2DIR_() {  # argument as ROOTDIR\nARG2=\"${@:2:1}\"\nif [[ -z \"${ARG2:-}\" ]]\nthen\nROOTDIR=/arch\nelse\nROOTDIR=/\"$ARG2\"\nfi\n_PREPTERMUXARCH_\n}\n_CHK_() {\nif sha512sum -c --quiet termuxarchchecksum.sha512\nthen\nif [[ -z \"${INSTALLDIR:-}\" ]]\t# is unset\nthen\t# exit here or the program will run on\nprintf \"\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 = 🕛\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\nexit 123\nelse\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕜\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\n_CHKSELF_\n_COREFILESLOAD_\nfi\nelse\nprintf \"\\\\n\"\n_PRINTSHA512SYSCHKER_\nfi\n}\n_CHKDWN_() {\nsha512sum -c --quiet setupTermuxArch.sha512 && printf \"\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\n\" \" 🕛 > 🕐 \" \"TermuxArch download: \" \"OK\" || _PRINTSHA512SYSCHKER_\nTMPCMD=\"bsdtar -x -p -f setupTermuxArch.tar.gz\" && $TMPCMD || printf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL $TMPCMD:  CONTINUING...\"\n}\n_CHKSELF_() {\t# compare setupTermuxArch and file being used\ncd \"$WFDIR\"\t# change directory to working file directory\nif [[ \"$(<\"$TAMPDIR\"/setupTermuxArch)\" != \"$(<\"${0##*/}\")\" ]] # differ\nthen\t# update the working file to newest version\n## update working file\ncd \"$WDIR\"\ncp \"$TAMPDIR/setupTermuxArch\" \"$0\"\n[[ -z \"${ARGS:-}\" ]] && printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m  Please run 'bash %s' again if this automatic update was unsuccessful.\\\\n\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" || printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m run 'bash %s' again if this automatic update was unsuccessful;  You should be able to use the '!!' command to run '%s' again.\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"$STRNRG\" \"$STRNRG\" \"$STRNRG\"\n## restart with updated version\n. $0 $ARGS\nfi\ncd \"$TAMPDIR\"\n}\n_CHOOSEABI_(){\nif [[ -z \"$CPUABILIST64\" ]]\nthen\nARCHITEC=\"i386\"\nCPUABI=\"i386\"\nelse\nARCHITEC=\"x86_64\"\nCPUABI=\"x86_64\"\nfi\n}\n_CHOOSEABIx86_(){\nCPUABILIST64=\"$(getprop ro.product.cpu.abilist64)\"\nif [[ $CPUABI == *86* ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\n_CHOOSEABI_\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nfi\n}\n_COREFILES_() {\n[[ -f archlinuxconfig.bash ]] && [[ -f espritfunctions.bash ]] && [[ -f fbindsfunctions.bash ]] && [[ -f getimagefunctions.bash ]] && [[ -f initkeyfunctions.bash ]] && [[ -f knownconfigurations.bash ]] && [[ -f maintenanceroutines.bash ]] && [[ -f necessaryfunctions.bash ]] && [[ -f printoutstatements.bash ]] && [[ -f setupTermuxArch ]]\n}\n_COREFILESDO_() {\ncd \"$WFDIR\" || exit 169\t# change directory to working file directory\nif _COREFILES_\nthen\nLOADLCRFILES=0 && _COREFILESLOAD_\nelse\ncd \"$TAMPDIR\"\n_DWNL_\n_CHKDWN_\n_CHK_ \"$@\"\nfi\n}\n_COREFILESLOAD_() {\nif [[ \"$OPT\" = BLOOM ]]\nthen\nrm -f termuxarchchecksum.sha512\nfi\nif [[ \"$OPT\" = MANUAL ]]\nthen\n_MANUAL_\nfi\n. necessaryfunctions.bash\n_LOADCONF_\n. fbindsfunctions.bash\n. initkeyfunctions.bash\n. maintenanceroutines.bash\n. archlinuxconfig.bash\n. espritfunctions.bash\n. getimagefunctions.bash\n. printoutstatements.bash\n}\n_DEPENDDM_() { # check and set download manager\nfor PKG in \"${!ADM[@]}\"\ndo\nif [[ -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\nDM=\"$PKG\"\nprintf \"\\\\nFound download tool '%s': Continuing...\\\\n\" \"$PKG\"\nbreak\nfi\ndone\n}\n_DEPENDIFDM_() { # check if download tool is available and set for install\nfor PKG in \"${!ADM[@]}\" # check from available toolset and set one for install\ndo #\tcheck for both set DM and if tool exists on device\nif [[ \"$DM\" = \"$PKG\" ]] && [[ ! -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\t#\tsets both download tool for install and exception check.\nPKGS+=($PKG)\nprintf \"\\\\nSetting download tool '%s' for install: Continuing...\\\\n\" \"$PKG\"\nfi\ndone\n}\n_DEPENDS_() {\t# check for missing commands\n_INPKGS_() {\t# install missing packages\nSTRNGB=\"\\\\e[1;38;5;146m%s\"\nSTRNGC=\"\\\\e[1;38;5;124m%s\"\nif [[ \"$COMMANDIF\" = au ]] # can enable rollback https://wae.github.io/au/\nthen\t# use 'au' to install missing packages\nau \"${PKGS[@]}\" && printf \"$STRNGB%s\" \"$STRING1F\" || printf \"$STRNGC%s\" \"$STRING2\"\nelif [[ \"$COMMANDIF\" = pkg ]]\nthen\t# use 'pkg' to install missing packages\npkg install \"${PKGS[@]}\" printf '%s' \"$STRNGC $STRING1\" || printf '%s' \"$STRNGC $STRING2\"\nelif [[ \"$COMMANDIF\" = apt ]]\nthen\t# use 'apt' to install missing packages\napt install \"${PKGS[@]}\" --yes && printf \"$STRNGB%s\" \"$STRING1\" || printf \"$STRNGC%s\" \"$STRING2\"\nfi\n}\nif [[ -z \"${VLORALCR:-}\" ]]\nthen\nPKGS=(bsdtar proot)\nelse\nPKGS=(pulseaudio bsdtar proot)\nfi\nprintf \"\\\\e[1;34mChecking prerequisites...\\\\n\\\\e[1;32m\"\nADM=([aria2]=aria2c [axel]=axel [curl]=curl [lftp]=lftpget [wget]=wget)\nif [[ \"$DM\" != \"\" ]]\nthen\n_DEPENDIFDM_\nfi\nif [[ \"$DM\" = \"\" ]]\nthen\n_DEPENDDM_\nfi\n## set and install lftp if nothing else was found\nif [[ \"$DM\" = \"\" ]]\nthen\nDM=lftp\nPKGS+=(lftp)\nprintf \"Setting download tool 'lftp' for install: Continuing...\\\\n\"\nfi\nfor PKG in \"${PKGS[@]}\"\ndo\t# check for missing commands\nCOMMANDP=\"$(command -v \"$PKG\")\" || printf \"\\\\e[1;38;5;242mCommand %s not found: Continuing...\\\\e[0m\\\\n\" \"$PKG\" # test if command exists\nCOMMANDPF=\"${COMMANDP##*/}\"\nif [[ \"$COMMANDPF\" != \"$PKG\" ]]\nthen\n_INPKGS_\nfi\ndone\nprintf \"\\\\n\\\\e[1;38;5;242mUsing %s to manage downloads.\\\\e[0m\\\\n\" \"${DM:-lftp}\"\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕧 \\\\e[1;34mPrerequisites: \\\\e[1;32mOK  \\\\e[1;34mDownloading TermuxArch...\\\\n\\\\n\\\\e[0;32m\"\n}\n_DEPENDSBLOCK_() {\n_DEPENDS_ || _PSGI1ESTRING_ \"_DEPENDS_ _DEPENDSBLOCK_ ${0##*/}\"\n_COREFILESDO_ \"$@\"\n}\n_DWNL_() { # download TermuxArch from Github\nFILE[sha]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.sha512\"\nFILE[tar]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.tar.gz\"\nif [[ \"$DM\" = aria2 ]]\nthen\t# use https://github.com/aria2/aria2\n\"${ADM[aria2]}\" -Z \"${FILE[sha]}\" \"${FILE[tar]}\"\nelif [[ \"$DM\" = axel ]]\nthen\t# use https://github.com/mopp/Axel\n\"${ADM[axel]}\" -a \"${FILE[sha]}\"\n\"${ADM[axel]}\" -a \"${FILE[tar]}\"\nelif [[ \"$DM\" = curl ]]\nthen\t# use https://github.com/curl/curl\n\"${ADM[curl]}\" \"$DMVERBOSE\" -O {\"${FILE[sha]},${FILE[tar]}\"}\nelif [[ \"$DM\" = wget ]]\nthen\t# use https://github.com/mirror/wget\n_DOADMWGET_() {\n\"${ADM[wget]}\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\"\n}\n_DOADMWGET_  || (au wget && \"$PREFIX/bin/wget\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\") || _PSGI1ESTRING_ \"_DOADMWGET_ _DWNL_ ${0##*/}\"\nelse\t# use https://github.com/lavv17/lftp\n\"${ADM[lftp]}\" \"${FILE[sha]}\" \"${FILE[tar]}\"\nfi\n}\n_EDITORCHOOSER_() {\t# add 'export EDITOR=editor_name' to HOME/.bash_profile in order to use your favorite editor during runtime\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nif command -v editor 1>/dev/null\nthen\nUSEREDIT=\"editor\"\nfi\nelif [[ -n \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"$EDITOR\"\nfi\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"nano\"\nfi\n}\n_INTRO_() {\nprintf \"\\033]2;%s\\007\" \"bash $STRNRG 📲\"\n_SETROOT_EXCEPTION_\n_INSTLLDIRCHK_\n_PRINTINTRO_ \"will attempt to install Linux in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DEPENDSBLOCK_ \"$@\"\nif [[ \"$LCC\" = \"1\" ]]\nthen\n_LOADIMAGE_ \"$@\"\nelse\n_MAINBLOCK_\nfi\n}\n_INTROBLOOM_() { # BLOOM = setupTermuxArch manual verbose\nOPT=BLOOM\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} bloom 📲\"\n_PRINTINTRO_ \"bloom option\" \"\" \"\"\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_BLOOM_\n}\n_INTROSYSINFO_() {\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} sysinfo 📲\"\n_SETROOT_EXCEPTION_\n_PRINTINTRO_ \"will create a system information file\" \"\" \"\"\n_DEPENDSBLOCK_ \"$@\"\n_SYSINFO_ \"$@\"\n}\n_DODIRCHK_() {\n_SETROOT_EXCEPTION_\nif [ ! -d \"$INSTALLDIR\" ] || [ ! -d \"$INSTALLDIR/root/bin\" ] || [ ! -d \"$INSTALLDIR/var/binds\" ] || [ ! -f \"$INSTALLDIR/bin/we\" ] || [ ! -f \"$INSTALLDIR/usr/bin/env\" ]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure is of ~/${INSTALLDIR##*/} seems to be incorrect; Cannot continue '$STRNRG'!  This command '${0##*/} help' has more information\"\nif [ -d \"$INSTALLDIR\"/tmp ]\nthen\t# check for superfluous tmp directory\nDIRCHECK=0\nDIRNAME=(dev etc home opt proc root sys usr var)\nfor IDIRNAME in ${DIRNAME[@]}\ndo\nif [ ! -d \"$INSTALLDIR/$IDIRNAME\" ]\nthen\nDIRCHECK=1\nelse\nDIRCHECK=0\nfi\ndone\nfi\nif [ -z \"${DIRCHECK:-}\" ]\nthen\nprintf \"Variable DIRCHECK is unbound.\\\\n\"\nelif [ \"$DIRCHECK\" -eq 1 ]\nthen\t# delete superfluous tmp dir\nrm -rf \"$INSTALLDIR\"/tmp\nrmdir \"$INSTALLDIR\" ||  _PSGI1ESTRING_ \"rmdir INSTALLDIR _DODIRCHK_ ${0##*/}\"\nfi\nexit 204\nfi\n}\n_INTROREFRESH_() {\nprintf '\\033]2;  bash setupTermuxArch refresh 📲 \\007'\nif [ \"${OPT:-}\" = FORCE ]\nthen\n_DODIRCHK_\nelse\n_SETROOT_EXCEPTION_\nfi\n_PRINTINTRO_ \"will refresh your TermuxArch files in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DODIRCHK_\n_DEPENDSBLOCK_ \"$@\"\n_REFRESHSYS_ \"$@\"\n}\n_INSTLLDIRCHK_() {\nif [[ -f \"$INSTALLDIR\"/bin/we ]] && [[ -d \"$INSTALLDIR\"/usr/local/termuxarch/bin ]] && [[ -d \"$INSTALLDIR\"/root/bin ]] && [[ -d \"$INSTALLDIR\"/var/binds ]]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure of ~/${INSTALLDIR##*/} appears correct;  Cannot continue '$STRNRG' to install Arch Linux in TermuxArch PRoot QEMU!  Commands '${0##*/} h[e[lp]]' have more information\"\nexit 205\nfi\n}\n_LOADCONF_() {\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n. \"${WDIR}setupTermuxArchConfigs.bash\"\n_PRINTCONFLOADED_\nelse\n. knownconfigurations.bash\nfi\n}\n_MANUAL_() {\nprintf '\\033]2; bash setupTermuxArch manual 📲 \\007'\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nelse\ncp knownconfigurations.bash \"${WDIR}setupTermuxArchConfigs.bash\"\nsed -i \"7s/.*/\\# The architecture of this device is $CPUABI; Adjust configurations in the appropriate section.  Change mirror (https:\\/\\/wiki.archlinux.org\\/index.php\\/Mirrors and https:\\/\\/archlinuxarm.org\\/about\\/mirrors) to desired geographic location to resolve 404 and checksum issues.  /\" \"${WDIR}setupTermuxArchConfigs.bash\"\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nfi\n}\n_NAMEINSTALLDIR_() {\nif [[ \"$ROOTDIR\" = \"\" ]]\nthen\nROOTDIR=arch\nfi\nINSTALLDIR=\"$(printf \"%s\\\\n\" \"$HOME/${ROOTDIR%/}\" | sed 's#//*#/#g')\"\n}\n_NAMESTARTARCH_() {\nDARCH=\"$(printf \"%s\\\\n\" \"${ROOTDIR%/}\"|sed 's#//*#/#g')\" # ${@%/} removes trailing slash\nif [[ \"$DARCH\" = \"/arch\" ]]\nthen\nAARCH=\"\"\nSTARTBI2=arch\nelse\nAARCH=\"$(printf \"%s\\\\n\" \"$DARCH\" | sed 's/\\//\\+/g')\"\nSTARTBI2=arch\nfi\nSTARTBIN=start\"$STARTBI2$AARCH\"\n}\n_OPT1_() {\nif [[ -z \"${2:-}\" ]]\nthen\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Bb]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to bloom.\"\n_INTROBLOOM_ \"$@\"\nelif [[ \"${2//-}\" = [Dd]* ]] || [[ \"${2//-}\" = [Ss]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to sysinfo.\"\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\nelif [[ \"${2//-}\" = [Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to install.\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm][Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to 1 refresh.\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\n_OPT2_ \"$@\"\nfi\n}\n_OPT2_() {\nif [[ -z \"${3:-}\" ]]\nthen\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Ii]* ]]\nthen\nshift 2\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\nelif [[ \"${3//-}\" = [Mm][Ii]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Mm]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 1 refresh.\\\\n\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nfi\n}\n_PREPTMPDIR_() {\n[ -d \"$INSTALLDIR/tmp\" ] || { mkdir -p \"$INSTALLDIR/tmp\" && chmod 777 \"$INSTALLDIR/tmp\" && chmod +t \"$INSTALLDIR/tmp\" ; }\nTAMPDIR=\"$INSTALLDIR/tmp/${0##*/}$STIME$PPID\"\n[ -d \"$TAMPDIR\" ]|| mkdir -p \"$TAMPDIR\"\n}\n_PREPTERMUXARCH_() {\n_NAMEINSTALLDIR_\n_NAMESTARTARCH_\n_PREPTMPDIR_ || _PSGI1ESTRING_ \"_PREPTMPDIR_ _PREPTERMUXARCH_ ${0##*/}\"\n_EDITORCHOOSER_\n}\n_PRINTERRORMSG_() {\nprintf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\n\\\\n\" \"Signal generated in '$1'; Cannot complete task; \" \"Continuing...\"\nprintf \"\\\\e[1;34mIf you find improvements for \\\\e[0;34m'%s' \\\\e[1;34mplease open an issue and an accompanying pull request.  A pull request can assist in shedding more light on an issue.\\\\n\\\\n\" \"${0##*/}\"\n}\n_PRPREFRESH_() {\nprintf \"\\\\n%s\\\\n\" \"Refresh mode is set to refresh mode $1;  Initializing system refresh...\"\nLCR=\"$1\"\n}\n_PRINTCONFLOADED_() {\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[0;32m%s\\\\e[1;32m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕑\" \"TermuxArch configuration\" \"$WDIR\" \"setupTermuxArchConfigs.bash\" \"loaded:\" \"OK\"\n}\n_PRINTSHA512SYSCHKER_() {\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m\\\\n%s \\\\e[34;1m\\\\e[30;1m%s \\\\n\\\\e[0;0m\\\\n\" \" 🔆 ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE sha512sum mismatch!  Setup initialization mismatch!  Is your wireless on?\" \"  Try again, initialization was not successful this time.  Wait a little while.  Then run the command 'bash $STRNRG' again...\"\nprintf '\\033]2; Run %s again...\\007' \"bash $STRNRG\"\nexit 124\n}\n_PRINTSTARTBIN_USAGE_() {\n_NAMESTARTARCH_\nif [[ -x \"$(command -v \"$STARTBIN\")\" ]]\nthen\nprintf \"\\\\e[1;38;5;155m\\\\n%s\\\\n\" \"$STARTBIN help\"\n\"$STARTBIN\" help\nprintf \"\\\\n\"\nelse\nprintf \"\\\\n\"\nfi\n}\n_PRINTUSAGE_() {\nprintf \"\\\\n\\\\e[1;32m  %s     \\\\e[0;32mcommands \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"HELP\" \"'${0##*/} he[lp]'\" \"shows this help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s    \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"TERSE\" \"'${0##*/} he[lp]'\" \"shows the terse help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s  \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"VERBOSE\" \"'${0##*/} h[elp]'\" \"shows the verbose help screen.\"\nprintf \"\\\\n\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"Usage information for\" \" ${0##*/}\" \" version $VERSIONID.  Some arguments can be abbreviated to one, two and three letters each;  Two and three letter arguments are acceptable.  For example\" \" 'bash ${0##*/} cs'\" \" will use 'curl' to download TermuxArch and produce a file like\" \" setupTermuxArchSysInfo$STIME.log\" \" populated with system information.  If you have a new smartphone that you are not familiar with, once created, this file\" \" setupTermuxArchSysInfo$STIME.log\" \" might make for an interesting read in order to find out more about the device you might be holding in the palm of your hand right at this moment.  User configurable variables are in file\" \" setupTermuxArchConfigs.bash.\" \"  To create this file from file\" \" knownconfigurations.bash\" \" in the working directory, execute\" \" 'bash ${0##*/} manual'\" \" to create and edit file\" \" setupTermuxArchConfigs.bash\" \".\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  INSTALL\" \"  You can run\" \" ${0##*/}\" \" without arguments in a bash shell to install Arch Linux in a PRoot QEMU container in a smartphone, smartTV, table, wearable and more...  Command\" \" 'bash ${0##*/} curl'\"  \" will envoke 'curl' as the download manager.  You can copy\" \" knownconfigurations.bash\" \" to\" \" setupTermuxArchConfigs.bash\" \" with the command\" \" 'bash ${0##*/} manual'\" \" to edit your preferred mirror site, refine the init statement and to access more options.  Change mirror to desired geographic location to resolve download, 404 and checksum issues should these occur.\"\nprintf \"\\\\n\\\\e[0;32m  %s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"After editing file\" \" setupTermuxArchConfigs.bash\" \", you can run\" \" 'bash ${0##*/}'\" \" and\" \" setupTermuxArchConfigs.bash\" \" loads automatically from the working directory.  User configurable variables are present in this file for your convenience. This link\" \" https://github.com/SDRausty/TermuxArch/issues/212\" \" at GitHub has the most current information about setting Arch Linux in PRoot QEMU as the default login shell in Termux in your smartphone, tablet, smartTV, wearable and more.  If you choose to, or are simply curious about setting Arch Linux in PRoot QEMU as the default login shell, please be well acquainted with safe mode;  Long tapping on NEW SESSION will open a new session in safe mode.  This mode can be used to reset the default shell.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  PURGE    \" \"command \" \"'${0##*/} purge' \" \"uninstalls Arch Linux in PRoot from Termux.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"  SYSINFO  \" \"command\" \" '${0##*/} sysinfo'\" \" creates a system information file;  A file like\" \" 'setupTermuxArchSysInfo$STIME.log'\" \" will be populated with device and system information in the working directory.  Please post information from this file along with details at\" \" https://github.com/TermuxArch/TermuxArch/issues\"  \" if questions or comments are related to a particular device;  Should screenshots help in resolving an issue, include these with information from this system information log file as well.  If you are sharing an issue please consider creating a pull request at\"  \" https://github.com/TermuxArch/TermuxArch/pulls\"  \" also.  A pull request can give a much better perspective of how an issue can be easily resolved.\"\nif [[ \"$LCC\" = 1 ]]\nthen\nprintf \"\\\\e[1;38;5;150m%s\\\\n\\\\n\" \"$(sed -n '600,1240p;1240p' \"$0\" | grep \"^##\" | sed 's/## /\\n  /g')\"\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information:\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\n_PRINTSTARTBIN_USAGE_\nelse\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information.\\\\n\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\nfi\n}\n_PRINTINTRO_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕛 \\\\e[1;34mＴｅｒｍｕｘＡｒｃｈ %s $1\\\\e[1;32m$2\\\\e[1;34m$3.  You can use '!!' to run this BASH script again with options.  Please check the wireless connection if you do not see one o'clock 🕐 below and ensure background data is not restricted.  The command \\\\e[1;32mbash %s help \\\\e[1;34mhas additional information about \\\\e[1;32m%s\\\\e[1;34m.  \\\\e[0;34m\" \"version $VERSIONID\" \"${0##*/}\" \"${0##*/}\"\n}\n_PSGI1ESTRING_() {\t# print signal generated in arg 1 format\nprintf \"\\\\e[1;33m%s\\\\e[1;34m; \\\\e[1;32mCONTINUING...  \\\\e[0;34mExecuting \\\\e[0;32m%s\\\\e[0;34m in the native shell once the installation and configuration process completes will attempt to finish the autoconfiguration and installation if the installation and configuration processes were not completely successful.  Should better solutions for \\\\e[0;32m%s\\\\e[0;34m be found, please open an issue and accompanying pull request if possible.\\\\nThe entire script can be reviewed by creating a \\\\e[0;32m%s\\\\e[0;34m directory with the command \\\\e[0;32m%s\\\\e[0;34m which can be used to access the entire installation script.  This option does NOT configure and install the root file system.  This command transfers the entire script into the home directory for hacking, modification and review.  The command \\\\e[0;32m%s\\\\e[0;34m has more information about how to use use \\\\e[0;32m%s\\\\e[0;34m.\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL GENERATED in '$1'\" \"'bash ${0##*/} refresh'\" \"'${0##*/}'\" \"'~/TermuxArchBloom/'\" \"'${0##*/} b'\" \"'${0##*/} help'\" \"'${0##*/}'\"\n}\n_PTSTRPXT_() { # print run on exit messages\nprintf \"\\\\e[0;32mPlease run 'bash %s' again, or use 'bash %s refresh' once Arch Linux is installed in TermuxArch PRoot QEMU.  \" \"${STRNRG:-}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mRunning command '%s refresh' assists in completing the installation and configuration.  This command also updates the system to the newest version and runs the command 'keys'.  If command '%s refresh' does not assist in completing the tasks of installing and configuring the Arch Linux system completely, these alternate commands '%s re' then using '%s r' helps in the order given.  Command 'keys' assists in installing default Arch Linux system keyrings.  \" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mCommand '%s refresh' can be used to refresh the Arch Linux system in TermuxArch PRoot QEMU system to the newest version published;  Command '%s sysinfo' has more information and can help with diagnostics.  \" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[1;32mIs the system that you are using [up to date with packages](https://github.com/WAE/au), [Termux app](https://github.com/termux/termux-app/releases) and device software?  \"\nprintf \"\\\\e[0;32mCommand '%s help' has more information.  \" \"${0##*/}\"\n}\n_QEMU_() {\n_QEMUCHCK_() {\nif [[ \"$CPUABI\" == \"$1\" ]]\nthen\nprintf \"\\\\e[1;33m %s\\\\e[0;33m  %s\\\\e[1;31m  %s  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"QEMU NOTICE!  Machine architecture is $CPUABI.  Please choose a different computer architecture.\" \"Exiting...\"\nexit 189\nfi\n}\n_INSTLLDIRCHK_\n_INST_() { # check for neccessary commands\nCOMMS=\"$1\"\n[ \"$COMMS\" = \"qemu-user-x86_64\"  ] && COMMS=\"qemu-x86_64\"\nCOMMANDR=\"$(command -v au)\" || printf \"%s\\\\n\\\\n\" \"$STRING1\"\nCOMMANDIF=\"${COMMANDR##*/}\"\nPKG=\"$2\"\n[ \"$PKG\" = \"qemu-user-x86_64\"  ] && PKG=\"qemu-user-x86_64\"\n_INPKGS_() {\nprintf \"%s\\\\n\" \"Beginning qemu '$ARCHITEC' setup:\"\nif [ \"$COMMANDIF\" = au ]\nthen\nau \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nelse\ncurl -JOL https://wae.github.io/au/au \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nfi\n}\nif ! command -v \"$COMMS\"\nthen\n_INPKGS_\nfi\n}\n_INSTLLDIRCHK_\nprintf \"%s'\\\\n\" \"Command '$STRNRG':  Please set the architecture to install with PRoot QEMU emulation.  This computer architecture for this device is '$CPUABI'. 32 bit arm7 supports i386 emulated architecture.  64 bit arm64 supports arm7, i386 and x86_64 emulated architectures with PRoot QEMU.  Please select the architecture to install by number (2-5) from this list:\"\nselect ARCHITECTURE in exit armv7 arm64-v8a i386 x86_64 ;\ndo\n[[ \"$ARCHITECTURE\" == [Ee]* ]] && exit\nif [[ \"$ARCHITECTURE\" == armv7 ]]\nthen\n_QEMUCHCK_ \"armeabi-v7a\"\nARCHITEC=\"arm\"\nCPUABI=\"armeabi-v7a\"\nelif [[ \"$ARCHITECTURE\" == arm64-v8a ]]\nthen\n_QEMUCHCK_ \"arm64-v8a\"\nARCHITEC=\"aarch64\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == i386 ]]\nthen\n_QEMUCHCK_ \"i386\"\nARCHITEC=\"i386\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == x86_64 ]]\nthen\n_QEMUCHCK_ \"x86_64\"\nARCHITEC=\"x86_64\"\nCPUABI=\"$ARCHITECTURE\"\nfi\n[[ $CPUABI == *arm* ]] || [[ $CPUABI == *86* ]] && printf \"%s\\\\n\" \"Option ($REPLY) with architecture $CPUABI (${ARCHITEC:-}) was picked from this list;  The chosen Arch Linux architecture for installation with emulation is $CPUABI (${ARCHITEC:-}):  \" && INCOMM=\"qemu-user-${ARCHITEC:-}\" && QEMUCR=0 && break || printf \"%s\\\\n\" \"Answer ($REPLY) was chosen;  Please select the architecture by number from this list: (1) armeabi, (2) armeabi-v7a, (3) arm64-v8a, (4) i386, (5) x86_64 or choose option (6) exit to exit command '${0##*/}':\"\ndone\nINCOMM=\"qemu-user-$ARCHITEC\" && QEMUCR=0\nif ! command -v \"${INCOMM//-user}\"\nthen\n_INST_ \"$INCOMM\" \"$INCOMM\" \"${0##*/}\" || _PSGI1ESTRING_ \"_INST_ _QEMU_ setupTermuxArch ${0##*/}\"\nfi\nprintf \"Detected architecture is %s;  Install architecture is set to %s.\\\\n\" \"$CPUABI\" \"$ARCHITEC\"\n}\n_RMARCHQ_() {\nprintf \"\\\\n\\\\e[0;33m %s \\\\e[1;33m%s \\\\e[0;33m%s\\\\n\\\\n\\\\e[1;30m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"DIRECTORY NOTICE!  ~/${INSTALLDIR##*/}/\" \"directory detected.\" \"Purge '$INSTALLDIR' as requested?\"\nif [[ -z \"${PURGELCR:-}\" ]]\nthen\nPURGEMETHOD=\"quick \"\nelse\nPURGEMETHOD=\"\"\nfi\nprintf \"\\\\e[1;30m\"\nwhile true; do\nread -n 1 -p \"Uninstall '~/${INSTALLDIR##*/}/' with ${PURGEMETHOD}purge? [Y|n] \" RUANSWER\nif [[ \"$RUANSWER\" = [Ee]* ]] || [[ \"$RUANSWER\" = [Nn]* ]] || [[ \"$RUANSWER\" = [Qq]* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"No was answered: uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nbreak\nelif [[ \"$RUANSWER\" = [Yy]* ]] || [[ \"$RUANSWER\" = \"\" ]]\nthen\nprintf \"\\\\e[30m%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/'...\"\nif grep -q ^pacmd \"$PREFIX/etc/profile\" && grep -q ^pulseaudio \"$PREFIX/etc/profile\"\nthen\nawk '!/^pulseaudio/' \"$PREFIX/etc/profile\" > \"$TAMPDIR/profile$FTIME\"\nawk '!/^pacmd/' \"$TAMPDIR/profile$FTIME\" > \"$PREFIX/etc/profile\"\nfi\nif [[ -d \"$INSTALLDIR\" ]]\nthen\n_RMARCHRM_\nelse\nprintf \"%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nfi\nif [[ -e \"$PREFIX/bin/$STARTBIN\" ]]\nthen\nrm -f \"$PREFIX/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$PREFIX/bin/$STARTBIN': nothing to do for '$PREFIX/bin/$STARTBIN'.\"\nfi\nif [[ -e \"$HOME/bin/$STARTBIN\" ]]\nthen\nrm -f \"$HOME/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$HOME/bin/$STARTBIN': nothing to do for '$HOME/bin/$STARTBIN'.\"\nfi\nprintf \"%s \\\\e[1;32mDONE\\\\e[30m\\\\n\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/':\"\nbreak\nelse\nprintf \"\\\\nYou answered \\\\e[33;1m%s\\\\e[30m.\\\\n\\\\nAnswer \\\\e[32mYes\\\\e[30m or \\\\e[1;31mNo\\\\e[30m. [\\\\e[32my\\\\e[30m|\\\\e[1;31mn\\\\e[30m]\\\\n\" \"$RUANSWER\"\nfi\ndone\n}\n_RMARCHRM_() {\n_RMARCHCRRM_() {\t# remove installation\nchmod -R 777 \"$INSTALLDIR\" || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\nfind \"$INSTALLDIR\" -type l -delete  || _PSGI1ESTRING_ \"find INSTALLDIR _RMARCHRM_ ${0##*/}\"\nrm -rf \"$INSTALLDIR\" || _PSGI1ESTRING_ \"rm -rf INSTALLDIR _RMARCHRM_ ${0##*/}\"\n}\n_DOEXONSTGE_() {\t# remove empty storage directories\nprintf \"\\\\e[0;35m\"\nfor EXONSTGEM in ${EXONSTGE[@]:-}\ndo\n{ find \"$EXONSTGEM\" -type l -delete && rmdir \"$EXONSTGEM\" ; } || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\ndone\nprintf \"\\\\e[1;30m\"\n}\n_SETROOT_EXCEPTION_\ndeclare -a EXONSTGE\nEXONSTGE=(\"$(find \"$INSTALLDIR\" -name storage -type d || printf \"\")\")\nif [[ -n \"${EXONSTGE:-}\" ]]\nthen\n_DOEXONSTGE_\nfi\n_RMARCHCRRM_\n}\n_SETROOT_EXCEPTION_() {\nif [[ \"$INSTALLDIR\" = \"$HOME\" ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../../ ]]\nthen\nprintf  '\\033]2;%s\\007' \"Rootdir exception.  Please run bash ${0##*/} again with different options...\"\nprintf \"\\\\n\\\\e[1;31m%s\\\\n\\\\n\" \"Rootdir exception.  Please run the script ${0##*/} again with different options...\"\nexit 125\nfi\n}\n_TAMATRIXEXIT_() { # run when Matrix presentation ends\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\n}\n## USER INFORMATION:  Configurable variables such as mirrors and download manager options are in 'setupTermuxArchConfigs.bash'.  Working with 'knownconfigurations.bash' in the working directory is simple.  The command 'bash setupTermuxArch manual' will create 'setupTermuxArchConfigs.bash' in the working directory for editing;  This command 'setupTermuxArch h' has more information.\ndeclare -A ADM\t\t# declare associative array for download tools\ndeclare -A ALLRCTFVR\t# declare associative array for all known architectures\nALLRCTFVR=([i386]=\"i386\" [i686]=\"i686\" [x86]=\"x86\" [x86_64]=\"x86_64\" [armeabi]=\"armeabi\" [armv7]=\"armv7\" [armeabi-v7a]=\"armeabi-v7a\" [arm64-v8a]=\"arm64-v8a\")\t# populate associative array for all known architectures\ndeclare -A FILE\t\t# declare associative array for download file\ndeclare -a ECLAVARR\t# declare indexed array for arrays and variables\ndeclare -a LC_TYPE\t# declare indexed array for locale types\ndeclare -a QEMUUSER\t# declare indexed array for qemu user tools\ndeclare PRFXTOLS\t# declare variable for device tools\ndeclare -A EMPARIAS\t# declare associative array for empty variables\nEMPARIAS=([COMMANDIF]=\"\" [COMMANDG]=\"\" [DFL]=\"# used for development\" [DM]=\"\" [FILE]=\"\" [FSTND]=\"\" [INSTALLDIR]=\"\" [LCC]=\"\" [LCP]=\"\" [OPT]=\"\" [QEMUCR]=\"\" [ROOTDIR]=\"\" [WDIR]=\"\" [SDATE]=\"\" [STI]=\"# generates pseudo random number\" [STIME]=\"# generates pseudo random number\" [USEREDIT]=\"\")\nfor PKG in ${!EMPARIAS[@]} ; do declare \"$PKG\"=\"\" ; done\nECLAVARR=(ARGS BINFNSTP COMMANDIF COMMANDR COMMANDG CPUABI CPUABI5 CPUABI7 CPUABI8 CPUABIX86 CPUABIX8664 DFL DMVERBOSE DM EDO01LCR ELCR USEREDIT FSTND INSTALLDIR LCC LCP LCR OPT PKGS ROOTDIR RWDIR SDATE STI STIME STRING1 STRING2 TMXRCHBND)\nfor ECLAVARS in ${ECLAVARR[@]} ; do declare $ECLAVARS ; done\nARGS=\"${@%/}\"\n## TERMUXARCH FEATURES INCLUDE:\n## 1)  Create aliases and commands that aid in using the command line, and assist in accessing the more advanced features like the commands 'pikaur' and 'yay' easily;  The files '.bashrc', '.bash_profile' and 'usr/local/termuxarch/bin/README.md' have more information about this feature,\n## 2)  Set timezone and locales from device,\n## 3)  Test for correct OS,\n## 4)  Get device information via the 'getprop' command,\nCPUABI=\"$(getprop ro.product.cpu.abi)\"\nCPUABI5=\"armeabi\"\t# used for development; 'getprop ro.product.cpu.abi' ascertains architecture\nCPUABI7=\"armeabi-v7a\"\t# used for development\nCPUABI8=\"arm64-v8a\"\t# used for development\nCPUABIX86=\"i386\"\t# used for development\nCPUABIX8664=\"x86_64\"\t# used for development\nDMVERBOSE=\"-q\"\t# -v for verbose download manager output from curl and wget;  for verbose output throughout runtime also change in 'setupTermuxArchConfigs.bash' when using 'setupTermuxArch m[anual]'\nELCR=1\nROOTDIR=\"/arch\"\nSTRING1=\"COMMAND 'au' enables rollback, available at https://wae.github.io/au/ IS NOT FOUND: Continuing... \"\nSTRING1F=\"COMMAND 'au' enables auto upgrade and rollback.  Available at https://wae.github.io/au/ is found: Continuing... \"\nSTRING2=\"Cannot update '${0##*/}' prerequisites: Continuing...\"\n_COMMANDGNE_() { printf \"\\\\n\\\\e[1;48;5;138m%s\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Run '${0##*/}' and 'bash ${0##*/}' from the native BASH shell in Termux:  EXITING...\" && exit 126 ; }\nCOMMANDG=\"$(command -v getprop)\" || _COMMANDGNE_\n_IFBINEXT_() {\nif [ -d \"$HOME/bin\" ] && grep \"$HOME/bin\" <<< \"$PATH\"\nthen\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$HOME/bin/$SCMD\" && chmod 700 \"$HOME/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to HOME/bin setupTermuxArch ${0##*/}\"\nelse\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$PREFIX/bin/$SCMD\" && chmod 700 \"$PREFIX/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to PREFIX/bin setupTermuxArch ${0##*/}\"\nfi\n}\nSCMD=\"au\"\nif ! command -v \"$SCMD\"  > /dev/null\nthen\nprintf \"\\\\e[1;38;5;142mCommand \\\\e[1;38;5;138m%s\\\\e[1;38;5;142m not found: \\\\e[1;38;5;150mContinuing...\\\\n\" \"'$SCMD'\" && _IFBINEXT_\nfi\nCOMMANDR=\"$(command -v au)\" || COMMANDR=\"$(command -v pkg)\" || COMMANDR=\"$(command -v apt)\"\nCOMMANDIF=\"${COMMANDR##*/}\"\n## 5)  Generate pseudo random numbers to create uniq strings,\nSDATE=\"$(date +%s)\" || SDATE=\"$(shuf -i 0-99999999 -n 1)\" || _PSGI1ESTRING_ \"SDATE setupTermuxArch ${0##*/}\"\nif [[ -r /proc/sys/kernel/random/uuid ]]\nthen\nSTIME=\"$(cat /proc/sys/kernel/random/uuid)\" && STIME=\"${STIME//-}\" && STIME=\"${STIME//[[:alpha:]]}\" && STIME=\"${STIME:0:3}\"\nelse\nSTIME=\"$SDATE\" && STIME=\"$(rev <<< \"${STIME:7:4}\")\"\nfi\nONESA=\"${SDATE: -1}\"\nFTIME=\"$(date +%F%H%M%S)\"\nSTIME=\"$ONESA$STIME\"\n## 6)  Determine its own name and location of invocation,\nWDIR=\"$PWD/\" && WFDIR=\"$(realpath \"$0\")\"\nWFDIR=\"${WFDIR%/*}\"\n## 7)  Create a default Arch Linux in TermuxArch PRoot QEMU user account with the TermuxArch command 'addauser' that also configure user accounts to use the Arch Linux 'sudo' command,\n## 8)  Install emulated computer architectures with QEMU in your smartphone with two taps, or in one tap with 'setupTermuxArch visualorca [options]',\n## 9)  Help make some of aur installers including the installer the Arch Linux package installers 'pacaur', 'pikaur' and 'yay' with TermuxArch commands 'makeaur*' and more!  Please read /usr/local/termuxarch/bin/README.md for details,\n## 10)  And all options are are optional for installing Arch Linux in Android!\n## >>>>>>>>>>>>>>>>>>\n## >> HELP OPTIONS >>\n## >>>>>>>>>>>>>>>>>>\n## Open an issue and an accompanying pull request at GitHub if you would like to have any these options amended and/or new options added.  Please see the new feature at Github, the discussion option.  Brackets mean optional.  They are not meant to be typed.\n## []  Run default Arch Linux install.\nif [[ -z \"${1:-}\" ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [./path/systemimage.tar.gz [customdir]]  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch ./[path/]systemimage.tar.gz' and 'setupTermuxArch /absolutepath/systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  The install directory argument is optional.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"${ARGS:0:1}\" = . ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"1\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [systemimage.tar.gz [customdir]]  Install directory argument is optional.  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"$ARGS\" = *.tar.gz* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"0\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [axd|axs]  Get device system information with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx][Dd]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'axel'.\\\\n\"\nDM=axel\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [ax[el] [customdir]|axi [customdir]]  Install Arch Linux with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'axel' as download manager.\\\\n\"\nDM=axel\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [ad|as]  Get device system information with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa][Dd]* ]] || [[ \"${1//-}\" = [Aa][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'aria2c'.\\\\n\"\nDM=aria2\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [a[ria2c] [customdir]|ai [customdir]]  Install Arch Linux with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa]* ]]\nthen\nprintf \"\\\\nSetting 'aria2c' as download manager.\\\\n\"\nDM=aria2\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [bl[oom]]  Create ~/TermuxArchBloom directory and Arch Linux in TermuxArch PRoot QEMU root tree skeleton and skeleton files.  This option does NOT install the complete root file system.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb][Ll]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\nELCR=0\n_ARG2DIR_ \"$@\"\n_INTROBLOOM_ \"$@\"\n## [b[loom]]  Create a local copy of TermuxArch in TermuxArchBloom.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\n_INTROBLOOM_ \"$@\"\n## [cd|cs]  Get device system information with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Dd]* ]] || [[ \"${1//-}\" = [Cc][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'curl'.\\\\n\"\nDM=curl\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [cmi] [customdir]  Install Arch Linux with manual install using 'curl'.\nelif [[ \"${1//-}\" = [Cc][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nDM=curl\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [c[url] [customdir]|ci [customdir]]  Install Arch Linux with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Ii]* ]] || [[ \"${1//-}\" = [Cc]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nDM=curl\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [de[bug]|s[ysinfo]]  Generate system information.\nelif [[ \"${1//-}\" = [Dd][Ee]* ]] || [[ \"${1//-}\" = [Ss]* ]]\nthen\nprintf \"\\\\nSetting mode to sysinfo.\\\\n\"\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [do [[flavor] [variaty]] [installdir]]  please see [systemimage.tar.gz [customdir]], https://github.com/TermuxArch/TermuxArch/issues/25, https://github.com/TermuxArch/TermuxArch/issues/34 and https://github.com/TermuxArch/TermuxArch/issues/68 for information.\nelif [[ \"${1//-}\" = [Dd][Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to do/what.\\\\n\"\nshift\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [he[lp] [customdir]]  Display terse builtin help.\nelif [[ \"${1//-}\" = [Hh][Ee]* ]]\nthen\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [h [customdir]]  Display verbose builtin help.\nelif [[ \"${1//-}\" = [?]* ]] || [[ \"${1//-}\" = [Hh]* ]]\nthen\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [i[nstall] [customdir]]  Install Arch Linux in a custom directory.  Instructions: Install in userspace.  The HOME directory is appended to the installation directory.  To install Arch Linux in HOME/customdir use 'bash setupTermuxArch install customdir'.  In the BASH shell you can use './setupTermuxArch install customdir'.  All options can be abbreviated to one, two and three letters.  Hence './setupTermuxArch install customdir' can be run as './setupTermuxArch i customdir' in BASH.\nelif [[ \"${1//-}\" = [Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [ld|ls]  Get device system information with 'lftp'.\nelif [[ \"${1//-}\" = [Ll][Dd]* ]] || [[ \"${1//-}\" = [Ll][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'lftp'.\\\\n\"\nDM=lftp\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [l[ftp] [customdir]]  Install Arch Linux with 'lftp'.\nelif [[ \"${1//-}\" = [Ll]* ]]\nthen\nprintf \"\\\\nSetting 'lftp' as download manager.\\\\n\"\nDM=lftp\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [matr[ix]]  Print TermuxArch source code as Matrix loop\nelif [[ \"${1//-}\" = [Mm][Aa][Tt][Rr]* ]]\nthen\nprintf \"Setting mode to matrix loop.\\\\n\"\nMATRIXLCR=0\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [mat[ix]]  Print TermuxArch source code as Matrix\nelif [[ \"${1//-}\" = [Mm][Aa][Tt]* ]]\nthen\nprintf \"\\\\nSetting mode to matrix.\\\\n\"\nMATRIXLCR=1\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [m[anual]]  Manual Arch Linux install, can be useful for resolving download and proot init statement issues.\nelif [[ \"${1//-}\" = [Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Mm]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [o[ption]]  Option under development.\nelif [[ \"${1//-}\" = [Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to option.\\\\n\"\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh with refresh user directories\\\\e[1;34m;\\\\e[0;32m For a full system refresh you can use the%s \\\\e[1;32m'%s' \\\\e[0;32m%s\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} ref[resh]\" \"command\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [purge [customdir]]  Purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp][Uu]* ]]\nthen\nprintf \"\\\\nSetting mode to purge.\\\\n\"\nPURGELCR=0\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [p[urge] [customdir]] Quick purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp]* ]]\nthen\nprintf \"\\\\nSetting mode to quick purge.\\\\n\"\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [q[emu] [m[anual]] [i[nstall]|r[e[f[resh]]]] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Issue [Implementing QEMU #25](https://github.com/TermuxArch/TermuxArch/issues/25) has more information.\nelif [[ \"${1//-}\" = [Qq][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu manual install.\\\\n\"\nOPT=MANUAL\n_QEMU_\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu.\\\\n\"\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]*[Ff][Oo][Rr][Cc][Ee] ]]\nthen\nprintf \"\\\\nSetting mode to full refresh force.\\\\n\"\nOPT=FORCE\necho Developing feature\\; Please see https://github.com/TermuxArch/TermuxArch/discussions/92 for more information.\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [refre[sh] [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and the Arch Linux installation itself.  This option is useful for refreshing the installation, the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.  This refresh mode also runs keys, generates locales and updates the Arch Linux in PRoot QEMU system.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [ref [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and populate the installation from the cache directory.  Useful for refreshing the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff]* ]]\nthen\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [re [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for refreshing the root user's home directory and the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh with refresh user directories.  Directory '/var/backups/' backs up files \\\\e[1;34m:\\\\e[0;32m For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [r [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for only refreshing the root user's home directory and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.\nelif [[ \"${1//-}\" = [Rr]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh; Directory '/var/backups/' backs up files\\\\e[1;34m:\\\\e[0;32m  For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [u[pdateTermuxTools] [refresh] [customdir]]  Developing implementation; Update installation with Termux tools.\nelif [[ \"${1//-}\" = [Uu]* ]]\nthen\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh including user directories\\\\e[1;34m;\\\\e[0;32m  For a full system refresh the%s \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [vis[ualorca] [manual] [install|refresh] [customdir]]  Install Arch Linux on smartphone.  Please use the TermuxArch command 'orcaconf' once Arch Linux in installed to complete the configuration.  Issue [Expanding setupTermuxArch so visually impaired users can install Orca screen reader (assistive technology) and have VNC support added easily. #34](https://github.com/TermuxArch/TermuxArch/issues/34) has more information about this option.\nelif [[ \"${1//-}\" = [Vv][Ii][Ss]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vis[ualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [vi[sualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv][Ii]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vi[sualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [v[isualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to v[isualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [wd|ws]  Get device system information with 'wget'.\nelif [[ \"${1//-}\" = [Ww][Dd]* ]] || [[ \"${1//-}\" = [Ww][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'wget'.\\\\n\"\nDM=wget\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [w[get] [customdir]]  Install Arch Linux with 'wget'.\nelif [[ \"${1//-}\" = [Ww]* ]]\nthen\nprintf \"\\\\nSetting 'wget' as download manager.\\\\n\"\nDM=wget\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_\nfi\n## >>>>>>>>>>>>>>>>>>\n## >>  HELP FACTS  >>\n## >>>>>>>>>>>>>>>>>>\n## THESE OPTIONS ARE AVAILABLE FOR YOUR CONVENIENCE:\n## GRAMMAR[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## OPTIONS[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## GRAMMAR[b]: setupTermuxArch [WHAT] [WHERE]\n## OPTIONS[b]: setupTermuxArch [~/|./|/absolute/path/]image.tar.gz [WHERE]\n## DEFAULTS ARE IMPLIED AND CAN BE OMITTED\n## SYNTAX[1]: [HOW (aria2|axel|curl|lftp|wget (default1: present on system (default2: lftp)))]\n## SYNTAX[2]: [DO (do|help|install|manual|purge|refresh|sysinfo (default: install))]\n## SYNTAX[3]: [WHERE (default: arch)]  Install in userspace, not external storage.\n## EXAMPLE USAGE:\n## USAGE[1]: 'setupTermuxArch curl sysinfo' will use curl as the download manager and produce a system information file in the working directory.  This can be abbreviated to 'setupTermuxArch cs' and 'setupTermuxArch c s'.\n## USAGE[2]: 'setupTermuxArch curl manual customdir' will install the installation in customdir with curl and use manual mode during installation.\n## USAGE[3]: 'setupTermuxArch curl refresh customdir' will refresh the installation using curl as the download manager.\n## Should any of these options fail to work as expected, please open an issue at GitHub with the command line used and output.  This product is being designed for both the sighted, and also the visually impaired;  Comments are welcome at discussions and issues webportals.\n## After installing TermuxArch on device, file 'INSTALLDIR/usr/local/termuxarch/bin/README.md' has more information.  The TermuxArch files in directory 'INSTALLDIR/usr/local/termuxarch/bin' have more information.\n## Very many hardy thank yous to contributors who are helping and have worked very hard for many long years, some for more, and to those who took mere minutes from their valuable effort with time in order to make this open source resource much better for all of us!  Please enjoy using TermuxArch in PRoot QEMU in Android, Chromebook, Amazon Fire OS and Windows on smartphone, tablet, wearable and similar:  setupTermuxArch FE\n"
        },
        {
          "name": "setupTermuxArch.sh",
          "type": "blob",
          "size": 51.44921875,
          "content": "#!/usr/bin/env bash\n## Copyright 2017-2022 (c) by SDRausty, all rights reserved, see LICENSE\n## hosting termuxarch.github.io/TermuxArch courtesy pages.github.com\n## termuxarch.github.io/TermuxArch/CONTRIBUTORS thank you for your help!\n################################################################################\nset -Eeuo pipefail\nshopt -s  extglob nullglob globstar\nunset LD_PRELOAD\nVERSIONID=2.0.548\n_STRPEROR_() { # run on script error\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Generated script signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\n[ $(ifconfig 2>/dev/null | grep inet | wc -l) = 1 ] && printf \"\\\\e[1;48;5;133m %s\" \"Please ensure background data is not restricted.  Check the wireless connection.  \"\nexit \"$RV\"\n}\n_STRPEXIT_() { # run on exit\nlocal RV=\"$?\"\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\nif [[ \"$RV\" != 0 ]]\nthen\n_PTSTRPXT_\nfi\nif [[ \"$RV\" = 0 ]]\nthen\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-}:  DONE 🏁 \"\nelse\nprintf \"\\\\e[0;32mCommand \\\\e[1;32m'%s' \\\\e[0;32mversion %s\\\\e[1;34m: \\\\e[1;32m%s\\\\n\" \"${STRNRG:-}\" \"${VERSIONID:-}\" \"[Exit Signal $RV] DONE 🏁 \"\nprintf \"\\033]2;%s\\\\007\" \"${STRNRG:-} [Exit Signal $RV]:  DONE 🏁 \"\nfi\n[ -z \"${TAMPDIR:-}\" ] || rm -rf \"$TAMPDIR\"\nprintf \"\\\\e[?25h\\\\e[0m\"\nset +Eeuo pipefail\n}\n_STRPHNGP_() { # run on hang up\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} HANG UP:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPNTRT_() { # run on signal\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m%s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPQUIT_() { # run on quit\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} QUIT:  Quit signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\n_STRPTERM_() { # run on terminate\nlocal RV=\"$?\"\nprintf \"\\\\e[1;48;5;138m %s\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} TERMINATE:  Generated signal received ${RV:-UNKNOWN} near or at line number ${1:-UNKNOWN} by '${2:-UNKNOWNCOMMAND}'!  \"\nexit \"$RV\"\n}\ntrap '_STRPEROR_ $LINENO $BASH_COMMAND $?' ERR\ntrap '_STRPEXIT_ $LINENO $BASH_COMMAND $?' EXIT\ntrap '_STRPHNGP_ $LINENO $BASH_COMMAND $?' HUP\ntrap '_STRPNTRT_ $LINENO $BASH_COMMAND $?' INT\ntrap '_STRPQUIT_ $LINENO $BASH_COMMAND $?' QUIT\ntrap '_STRPTERM_ $LINENO $BASH_COMMAND $?' TERM\nARGS=\"${@%/}\"\nPGNM=\"${0##*/}\"\n{ [ -z \"${ARGS:-}\" ] && STRNRG=\"${0##*/}\" ; } || STRNRG=\"${0##*/} ${ARGS:-}\"\nif [ \"$EUID\" = 0 ] || [ \"$UID\" = 0 ]\nthen\nprintf \"\\\\e[1;48;5;168m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please do not use the root login for PRoot:  EXITING...\" && exit\nfi\nif [ -w /root ]\nthen\nprintf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL:  Please run '${0##*/}' and 'bash ${0##*/}' from the BASH shell in native Termux:  EXITING...\" && exit\nfi\n_ARG2DIR_() {  # argument as ROOTDIR\nARG2=\"${@:2:1}\"\nif [[ -z \"${ARG2:-}\" ]]\nthen\nROOTDIR=/arch\nelse\nROOTDIR=/\"$ARG2\"\nfi\n_PREPTERMUXARCH_\n}\n_CHK_() {\nif sha512sum -c --quiet termuxarchchecksum.sha512\nthen\nif [[ -z \"${INSTALLDIR:-}\" ]]\t# is unset\nthen\t# exit here or the program will run on\nprintf \"\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 = 🕛\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\nexit 123\nelse\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕜\" \"TermuxArch version $VERSIONID integrity:\" \"OK\"\n_CHKSELF_\n_COREFILESLOAD_\nfi\nelse\nprintf \"\\\\n\"\n_PRINTSHA512SYSCHKER_\nfi\n}\n_CHKDWN_() {\nsha512sum -c --quiet setupTermuxArch.sha512 && printf \"\\\\e[0;34m%s\\\\e[1;34m%s\\\\e[1;32m%s\\\\n\" \" 🕛 > 🕐 \" \"TermuxArch download: \" \"OK\" || _PRINTSHA512SYSCHKER_\nTMPCMD=\"bsdtar -x -p -f setupTermuxArch.tar.gz\" && $TMPCMD || printf \"\\\\e[1;48;5;138m%s\\\\e[0m  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL $TMPCMD:  CONTINUING...\"\n}\n_CHKSELF_() {\t# compare setupTermuxArch and file being used\ncd \"$WFDIR\"\t# change directory to working file directory\nif [[ \"$(<\"$TAMPDIR\"/setupTermuxArch)\" != \"$(<\"${0##*/}\")\" ]] # differ\nthen\t# update the working file to newest version\n## update working file\ncd \"$WDIR\"\ncp \"$TAMPDIR/setupTermuxArch\" \"$0\"\n[[ -z \"${ARGS:-}\" ]] && printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m  Please run 'bash %s' again if this automatic update was unsuccessful.\\\\n\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" || printf \"\\\\n\\\\e[1;32mFile \\\\e[0;32m'%s'\\\\e[1;32m was UPDATED\\\\e[1;34m:\\\\e[0;32m run 'bash %s' again if this automatic update was unsuccessful;  You should be able to use the '!!' command to run '%s' again.\\\\n\\\\e[1;32mRESTARTED \\\\e[0;32m'%s'\\\\e[1;34m:\\\\e[1;32m CONTINUING...\\\\n\\\\n\" \"${0##*/}\" \"$STRNRG\" \"$STRNRG\" \"$STRNRG\"\n## restart with updated version\n. $0 $ARGS\nfi\ncd \"$TAMPDIR\"\n}\n_CHOOSEABI_(){\nif [[ -z \"$CPUABILIST64\" ]]\nthen\nARCHITEC=\"i386\"\nCPUABI=\"i386\"\nelse\nARCHITEC=\"x86_64\"\nCPUABI=\"x86_64\"\nfi\n}\n_CHOOSEABIx86_(){\nCPUABILIST64=\"$(getprop ro.product.cpu.abilist64)\"\nif [[ $CPUABI == *86* ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\n_CHOOSEABI_\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nfi\n}\n_COREFILES_() {\n[[ -f archlinuxconfig.bash ]] && [[ -f espritfunctions.bash ]] && [[ -f fbindsfunctions.bash ]] && [[ -f getimagefunctions.bash ]] && [[ -f initkeyfunctions.bash ]] && [[ -f knownconfigurations.bash ]] && [[ -f maintenanceroutines.bash ]] && [[ -f necessaryfunctions.bash ]] && [[ -f printoutstatements.bash ]] && [[ -f setupTermuxArch ]]\n}\n_COREFILESDO_() {\ncd \"$WFDIR\" || exit 169\t# change directory to working file directory\nif _COREFILES_\nthen\nLOADLCRFILES=0 && _COREFILESLOAD_\nelse\ncd \"$TAMPDIR\"\n_DWNL_\n_CHKDWN_\n_CHK_ \"$@\"\nfi\n}\n_COREFILESLOAD_() {\nif [[ \"$OPT\" = BLOOM ]]\nthen\nrm -f termuxarchchecksum.sha512\nfi\nif [[ \"$OPT\" = MANUAL ]]\nthen\n_MANUAL_\nfi\n. necessaryfunctions.bash\n_LOADCONF_\n. fbindsfunctions.bash\n. initkeyfunctions.bash\n. maintenanceroutines.bash\n. archlinuxconfig.bash\n. espritfunctions.bash\n. getimagefunctions.bash\n. printoutstatements.bash\n}\n_DEPENDDM_() { # check and set download manager\nfor PKG in \"${!ADM[@]}\"\ndo\nif [[ -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\nDM=\"$PKG\"\nprintf \"\\\\nFound download tool '%s': Continuing...\\\\n\" \"$PKG\"\nbreak\nfi\ndone\n}\n_DEPENDIFDM_() { # check if download tool is available and set for install\nfor PKG in \"${!ADM[@]}\" # check from available toolset and set one for install\ndo #\tcheck for both set DM and if tool exists on device\nif [[ \"$DM\" = \"$PKG\" ]] && [[ ! -x $(command -v \"${ADM[$PKG]}\") ]]\nthen\t#\tsets both download tool for install and exception check.\nPKGS+=($PKG)\nprintf \"\\\\nSetting download tool '%s' for install: Continuing...\\\\n\" \"$PKG\"\nfi\ndone\n}\n_DEPENDS_() {\t# check for missing commands\n_INPKGS_() {\t# install missing packages\nSTRNGB=\"\\\\e[1;38;5;146m%s\"\nSTRNGC=\"\\\\e[1;38;5;124m%s\"\nif [[ \"$COMMANDIF\" = au ]] # can enable rollback https://wae.github.io/au/\nthen\t# use 'au' to install missing packages\nau \"${PKGS[@]}\" && printf \"$STRNGB%s\" \"$STRING1F\" || printf \"$STRNGC%s\" \"$STRING2\"\nelif [[ \"$COMMANDIF\" = pkg ]]\nthen\t# use 'pkg' to install missing packages\npkg install \"${PKGS[@]}\" printf '%s' \"$STRNGC $STRING1\" || printf '%s' \"$STRNGC $STRING2\"\nelif [[ \"$COMMANDIF\" = apt ]]\nthen\t# use 'apt' to install missing packages\napt install \"${PKGS[@]}\" --yes && printf \"$STRNGB%s\" \"$STRING1\" || printf \"$STRNGC%s\" \"$STRING2\"\nfi\n}\nif [[ -z \"${VLORALCR:-}\" ]]\nthen\nPKGS=(bsdtar proot)\nelse\nPKGS=(pulseaudio bsdtar proot)\nfi\nprintf \"\\\\e[1;34mChecking prerequisites...\\\\n\\\\e[1;32m\"\nADM=([aria2]=aria2c [axel]=axel [curl]=curl [lftp]=lftpget [wget]=wget)\nif [[ \"$DM\" != \"\" ]]\nthen\n_DEPENDIFDM_\nfi\nif [[ \"$DM\" = \"\" ]]\nthen\n_DEPENDDM_\nfi\n## set and install lftp if nothing else was found\nif [[ \"$DM\" = \"\" ]]\nthen\nDM=lftp\nPKGS+=(lftp)\nprintf \"Setting download tool 'lftp' for install: Continuing...\\\\n\"\nfi\nfor PKG in \"${PKGS[@]}\"\ndo\t# check for missing commands\nCOMMANDP=\"$(command -v \"$PKG\")\" || printf \"\\\\e[1;38;5;242mCommand %s not found: Continuing...\\\\e[0m\\\\n\" \"$PKG\" # test if command exists\nCOMMANDPF=\"${COMMANDP##*/}\"\nif [[ \"$COMMANDPF\" != \"$PKG\" ]]\nthen\n_INPKGS_\nfi\ndone\nprintf \"\\\\n\\\\e[1;38;5;242mUsing %s to manage downloads.\\\\e[0m\\\\n\" \"${DM:-lftp}\"\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕧 \\\\e[1;34mPrerequisites: \\\\e[1;32mOK  \\\\e[1;34mDownloading TermuxArch...\\\\n\\\\n\\\\e[0;32m\"\n}\n_DEPENDSBLOCK_() {\n_DEPENDS_ || _PSGI1ESTRING_ \"_DEPENDS_ _DEPENDSBLOCK_ ${0##*/}\"\n_COREFILESDO_ \"$@\"\n}\n_DWNL_() { # download TermuxArch from Github\nFILE[sha]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.sha512\"\nFILE[tar]=\"https://raw.githubusercontent.com/TermuxArch/TermuxArch/master/setupTermuxArch.tar.gz\"\nif [[ \"$DM\" = aria2 ]]\nthen\t# use https://github.com/aria2/aria2\n\"${ADM[aria2]}\" -Z \"${FILE[sha]}\" \"${FILE[tar]}\"\nelif [[ \"$DM\" = axel ]]\nthen\t# use https://github.com/mopp/Axel\n\"${ADM[axel]}\" -a \"${FILE[sha]}\"\n\"${ADM[axel]}\" -a \"${FILE[tar]}\"\nelif [[ \"$DM\" = curl ]]\nthen\t# use https://github.com/curl/curl\n\"${ADM[curl]}\" \"$DMVERBOSE\" -O {\"${FILE[sha]},${FILE[tar]}\"}\nelif [[ \"$DM\" = wget ]]\nthen\t# use https://github.com/mirror/wget\n_DOADMWGET_() {\n\"${ADM[wget]}\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\"\n}\n_DOADMWGET_  || (au wget && \"$PREFIX/bin/wget\" \"$DMVERBOSE\" -N --show-progress \"${FILE[sha]}\" \"${FILE[tar]}\") || _PSGI1ESTRING_ \"_DOADMWGET_ _DWNL_ ${0##*/}\"\nelse\t# use https://github.com/lavv17/lftp\n\"${ADM[lftp]}\" \"${FILE[sha]}\" \"${FILE[tar]}\"\nfi\n}\n_EDITORCHOOSER_() {\t# add 'export EDITOR=editor_name' to HOME/.bash_profile in order to use your favorite editor during runtime\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nif command -v editor 1>/dev/null\nthen\nUSEREDIT=\"editor\"\nfi\nelif [[ -n \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"$EDITOR\"\nfi\nif [[ -z \"${EDITOR:-}\" ]]\nthen\nUSEREDIT=\"nano\"\nfi\n}\n_INTRO_() {\nprintf \"\\033]2;%s\\007\" \"bash $STRNRG 📲\"\n_SETROOT_EXCEPTION_\n_INSTLLDIRCHK_\n_PRINTINTRO_ \"will attempt to install Linux in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DEPENDSBLOCK_ \"$@\"\nif [[ \"$LCC\" = \"1\" ]]\nthen\n_LOADIMAGE_ \"$@\"\nelse\n_MAINBLOCK_\nfi\n}\n_INTROBLOOM_() { # BLOOM = setupTermuxArch manual verbose\nOPT=BLOOM\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} bloom 📲\"\n_PRINTINTRO_ \"bloom option\" \"\" \"\"\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_BLOOM_\n}\n_INTROSYSINFO_() {\nprintf \"\\033]2;%s\\007\" \"bash ${0##*/} sysinfo 📲\"\n_SETROOT_EXCEPTION_\n_PRINTINTRO_ \"will create a system information file\" \"\" \"\"\n_DEPENDSBLOCK_ \"$@\"\n_SYSINFO_ \"$@\"\n}\n_DODIRCHK_() {\n_SETROOT_EXCEPTION_\nif [ ! -d \"$INSTALLDIR\" ] || [ ! -d \"$INSTALLDIR/root/bin\" ] || [ ! -d \"$INSTALLDIR/var/binds\" ] || [ ! -f \"$INSTALLDIR/bin/we\" ] || [ ! -f \"$INSTALLDIR/usr/bin/env\" ]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure is of ~/${INSTALLDIR##*/} seems to be incorrect; Cannot continue '$STRNRG'!  This command '${0##*/} help' has more information\"\nif [ -d \"$INSTALLDIR\"/tmp ]\nthen\t# check for superfluous tmp directory\nDIRCHECK=0\nDIRNAME=(dev etc home opt proc root sys usr var)\nfor IDIRNAME in ${DIRNAME[@]}\ndo\nif [ ! -d \"$INSTALLDIR/$IDIRNAME\" ]\nthen\nDIRCHECK=1\nelse\nDIRCHECK=0\nfi\ndone\nfi\nif [ -z \"${DIRCHECK:-}\" ]\nthen\nprintf \"Variable DIRCHECK is unbound.\\\\n\"\nelif [ \"$DIRCHECK\" -eq 1 ]\nthen\t# delete superfluous tmp dir\nrm -rf \"$INSTALLDIR\"/tmp\nrmdir \"$INSTALLDIR\" ||  _PSGI1ESTRING_ \"rmdir INSTALLDIR _DODIRCHK_ ${0##*/}\"\nfi\nexit 204\nfi\n}\n_INTROREFRESH_() {\nprintf '\\033]2;  bash setupTermuxArch refresh 📲 \\007'\nif [ \"${OPT:-}\" = FORCE ]\nthen\n_DODIRCHK_\nelse\n_SETROOT_EXCEPTION_\nfi\n_PRINTINTRO_ \"will refresh your TermuxArch files in \" \"~/${INSTALLDIR##*/}\" \".  Arch Linux in TermuxArch PRoot QEMU will be available upon successful completion\"\n_DODIRCHK_\n_DEPENDSBLOCK_ \"$@\"\n_REFRESHSYS_ \"$@\"\n}\n_INSTLLDIRCHK_() {\nif [[ -f \"$INSTALLDIR\"/bin/we ]] && [[ -d \"$INSTALLDIR\"/usr/local/termuxarch/bin ]] && [[ -d \"$INSTALLDIR\"/root/bin ]] && [[ -d \"$INSTALLDIR\"/var/binds ]]\nthen\nprintf \"\\\\n\\\\e[0;33m%s\\\\e[1;33m%s\\\\e[0;33m.\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE!  \" \"The root directory structure of ~/${INSTALLDIR##*/} appears correct;  Cannot continue '$STRNRG' to install Arch Linux in TermuxArch PRoot QEMU!  Commands '${0##*/} h[e[lp]]' have more information\"\nexit 205\nfi\n}\n_LOADCONF_() {\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n. \"${WDIR}setupTermuxArchConfigs.bash\"\n_PRINTCONFLOADED_\nelse\n. knownconfigurations.bash\nfi\n}\n_MANUAL_() {\nprintf '\\033]2; bash setupTermuxArch manual 📲 \\007'\nif [[ -f \"${WDIR}setupTermuxArchConfigs.bash\" ]]\nthen\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nelse\ncp knownconfigurations.bash \"${WDIR}setupTermuxArchConfigs.bash\"\nsed -i \"7s/.*/\\# The architecture of this device is $CPUABI; Adjust configurations in the appropriate section.  Change mirror (https:\\/\\/wiki.archlinux.org\\/index.php\\/Mirrors and https:\\/\\/archlinuxarm.org\\/about\\/mirrors) to desired geographic location to resolve 404 and checksum issues.  /\" \"${WDIR}setupTermuxArchConfigs.bash\"\n$USEREDIT \"${WDIR}setupTermuxArchConfigs.bash\"\nfi\n}\n_NAMEINSTALLDIR_() {\nif [[ \"$ROOTDIR\" = \"\" ]]\nthen\nROOTDIR=arch\nfi\nINSTALLDIR=\"$(printf \"%s\\\\n\" \"$HOME/${ROOTDIR%/}\" | sed 's#//*#/#g')\"\n}\n_NAMESTARTARCH_() {\nDARCH=\"$(printf \"%s\\\\n\" \"${ROOTDIR%/}\"|sed 's#//*#/#g')\" # ${@%/} removes trailing slash\nif [[ \"$DARCH\" = \"/arch\" ]]\nthen\nAARCH=\"\"\nSTARTBI2=arch\nelse\nAARCH=\"$(printf \"%s\\\\n\" \"$DARCH\" | sed 's/\\//\\+/g')\"\nSTARTBI2=arch\nfi\nSTARTBIN=start\"$STARTBI2$AARCH\"\n}\n_OPT1_() {\nif [[ -z \"${2:-}\" ]]\nthen\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Bb]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to bloom.\"\n_INTROBLOOM_ \"$@\"\nelif [[ \"${2//-}\" = [Dd]* ]] || [[ \"${2//-}\" = [Ss]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to sysinfo.\"\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\nelif [[ \"${2//-}\" = [Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to install.\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm][Ii]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${2//-}\" = [Mm]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr][Ee]* ]]\nthen\nshift\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${2//-}\" = [Rr]* ]]\nthen\nshift\nprintf \"%s\\\\n\" \"Setting mode to 1 refresh.\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\n_OPT2_ \"$@\"\nfi\n}\n_OPT2_() {\nif [[ -z \"${3:-}\" ]]\nthen\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Ii]* ]]\nthen\nshift 2\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\nelif [[ \"${3//-}\" = [Mm][Ii]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual install.\"\nOPT=MANUAL\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nelif [[ \"${3//-}\" = [Mm]* ]]\nthen\nshift 2\nprintf \"%s\\\\n\" \"Setting mode to manual.\"\nOPT=MANUAL\n_OPT2_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee][Ff]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr][Ee]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 2 refresh.\\\\n\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelif [[ \"${3//-}\" = [Rr]* ]]\nthen\nshift 2\nprintf \"\\\\nSetting mode to 1 refresh.\\\\n\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\n_INTROREFRESH_ \"$@\"\nelse\nshift\n_ARG2DIR_ \"$@\"\n_PREPTERMUXARCH_\nfi\n}\n_PREPTMPDIR_() {\n[ -d \"$INSTALLDIR/tmp\" ] || { mkdir -p \"$INSTALLDIR/tmp\" && chmod 777 \"$INSTALLDIR/tmp\" && chmod +t \"$INSTALLDIR/tmp\" ; }\nTAMPDIR=\"$INSTALLDIR/tmp/${0##*/}$STIME$PPID\"\n[ -d \"$TAMPDIR\" ]|| mkdir -p \"$TAMPDIR\"\n}\n_PREPTERMUXARCH_() {\n_NAMEINSTALLDIR_\n_NAMESTARTARCH_\n_PREPTMPDIR_ || _PSGI1ESTRING_ \"_PREPTMPDIR_ _PREPTERMUXARCH_ ${0##*/}\"\n_EDITORCHOOSER_\n}\n_PRINTERRORMSG_() {\nprintf \"\\\\e[1;31m%s\\\\e[1;37m%s\\\\n\\\\n\" \"Signal generated in '$1'; Cannot complete task; \" \"Continuing...\"\nprintf \"\\\\e[1;34mIf you find improvements for \\\\e[0;34m'%s' \\\\e[1;34mplease open an issue and an accompanying pull request.  A pull request can assist in shedding more light on an issue.\\\\n\\\\n\" \"${0##*/}\"\n}\n_PRPREFRESH_() {\nprintf \"\\\\n%s\\\\n\" \"Refresh mode is set to refresh mode $1;  Initializing system refresh...\"\nLCR=\"$1\"\n}\n_PRINTCONFLOADED_() {\nprintf \"\\\\n\\\\e[0;34m%s \\\\e[1;34m%s \\\\e[0;32m%s\\\\e[1;32m%s \\\\e[1;34m%s \\\\e[1;32m%s\\\\n\" \" 🕛 > 🕑\" \"TermuxArch configuration\" \"$WDIR\" \"setupTermuxArchConfigs.bash\" \"loaded:\" \"OK\"\n}\n_PRINTSHA512SYSCHKER_() {\nprintf \"\\\\n\\\\e[07;1m\\\\e[31;1m\\\\n%s \\\\e[34;1m\\\\e[30;1m%s \\\\n\\\\e[0;0m\\\\n\" \" 🔆 ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE sha512sum mismatch!  Setup initialization mismatch!  Is your wireless on?\" \"  Try again, initialization was not successful this time.  Wait a little while.  Then run the command 'bash $STRNRG' again...\"\nprintf '\\033]2; Run %s again...\\007' \"bash $STRNRG\"\nexit 124\n}\n_PRINTSTARTBIN_USAGE_() {\n_NAMESTARTARCH_\nif [[ -x \"$(command -v \"$STARTBIN\")\" ]]\nthen\nprintf \"\\\\e[1;38;5;155m\\\\n%s\\\\n\" \"$STARTBIN help\"\n\"$STARTBIN\" help\nprintf \"\\\\n\"\nelse\nprintf \"\\\\n\"\nfi\n}\n_PRINTUSAGE_() {\nprintf \"\\\\n\\\\e[1;32m  %s     \\\\e[0;32mcommands \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"HELP\" \"'${0##*/} he[lp]'\" \"shows this help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s    \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"TERSE\" \"'${0##*/} he[lp]'\" \"shows the terse help screen.\"\nprintf \"\\\\n\\\\e[1;32m  %s  \\\\e[0;32mcommand \\\\e[1;32m%s \\\\e[0;32m%s\\\\n\" \"VERBOSE\" \"'${0##*/} h[elp]'\" \"shows the verbose help screen.\"\nprintf \"\\\\n\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"Usage information for\" \" ${0##*/}\" \" version $VERSIONID.  Some arguments can be abbreviated to one, two and three letters each;  Two and three letter arguments are acceptable.  For example\" \" 'bash ${0##*/} cs'\" \" will use 'curl' to download TermuxArch and produce a file like\" \" setupTermuxArchSysInfo$STIME.log\" \" populated with system information.  If you have a new smartphone that you are not familiar with, once created, this file\" \" setupTermuxArchSysInfo$STIME.log\" \" might make for an interesting read in order to find out more about the device you might be holding in the palm of your hand right at this moment.  User configurable variables are in file\" \" setupTermuxArchConfigs.bash.\" \"  To create this file from file\" \" knownconfigurations.bash\" \" in the working directory, execute\" \" 'bash ${0##*/} manual'\" \" to create and edit file\" \" setupTermuxArchConfigs.bash\" \".\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  INSTALL\" \"  You can run\" \" ${0##*/}\" \" without arguments in a bash shell to install Arch Linux in a PRoot QEMU container in a smartphone, smartTV, table, wearable and more...  Command\" \" 'bash ${0##*/} curl'\"  \" will envoke 'curl' as the download manager.  You can copy\" \" knownconfigurations.bash\" \" to\" \" setupTermuxArchConfigs.bash\" \" with the command\" \" 'bash ${0##*/} manual'\" \" to edit your preferred mirror site, refine the init statement and to access more options.  Change mirror to desired geographic location to resolve download, 404 and checksum issues should these occur.\"\nprintf \"\\\\n\\\\e[0;32m  %s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"After editing file\" \" setupTermuxArchConfigs.bash\" \", you can run\" \" 'bash ${0##*/}'\" \" and\" \" setupTermuxArchConfigs.bash\" \" loads automatically from the working directory.  User configurable variables are present in this file for your convenience. This link\" \" https://github.com/SDRausty/TermuxArch/issues/212\" \" at GitHub has the most current information about setting Arch Linux in PRoot QEMU as the default login shell in Termux in your smartphone, tablet, smartTV, wearable and more.  If you choose to, or are simply curious about setting Arch Linux in PRoot QEMU as the default login shell, please be well acquainted with safe mode;  Long tapping on NEW SESSION will open a new session in safe mode.  This mode can be used to reset the default shell.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\" \"  PURGE    \" \"command \" \"'${0##*/} purge' \" \"uninstalls Arch Linux in PRoot from Termux.\"\nprintf \"\\\\n\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\e[1;32m%s\\\\e[0;32m%s\\\\n\\\\n\" \"  SYSINFO  \" \"command\" \" '${0##*/} sysinfo'\" \" creates a system information file;  A file like\" \" 'setupTermuxArchSysInfo$STIME.log'\" \" will be populated with device and system information in the working directory.  Please post information from this file along with details at\" \" https://github.com/TermuxArch/TermuxArch/issues\"  \" if questions or comments are related to a particular device;  Should screenshots help in resolving an issue, include these with information from this system information log file as well.  If you are sharing an issue please consider creating a pull request at\"  \" https://github.com/TermuxArch/TermuxArch/pulls\"  \" also.  A pull request can give a much better perspective of how an issue can be easily resolved.\"\nif [[ \"$LCC\" = 1 ]]\nthen\nprintf \"\\\\e[1;38;5;150m%s\\\\n\\\\n\" \"$(sed -n '600,1240p;1240p' \"$0\" | grep \"^##\" | sed 's/## /\\n  /g')\"\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information:\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\n_PRINTSTARTBIN_USAGE_\nelse\nprintf \"\\\\e[0;32m  Command \\\\e[1;32m%s\\\\e[0;32m has \\\\e[1;32m%s\\\\e[0;32m usage information.\\\\n\\\\n\" \"'$STARTBIN help'\" \"'$STARTBIN'\"\nfi\n}\n_PRINTINTRO_() {\nprintf \"\\\\n\\\\e[0;34m 🕛 > 🕛 \\\\e[1;34mＴｅｒｍｕｘＡｒｃｈ %s $1\\\\e[1;32m$2\\\\e[1;34m$3.  You can use '!!' to run this BASH script again with options.  Please check the wireless connection if you do not see one o'clock 🕐 below and ensure background data is not restricted.  The command \\\\e[1;32mbash %s help \\\\e[1;34mhas additional information about \\\\e[1;32m%s\\\\e[1;34m.  \\\\e[0;34m\" \"version $VERSIONID\" \"${0##*/}\" \"${0##*/}\"\n}\n_PSGI1ESTRING_() {\t# print signal generated in arg 1 format\nprintf \"\\\\e[1;33m%s\\\\e[1;34m; \\\\e[1;32mCONTINUING...  \\\\e[0;34mExecuting \\\\e[0;32m%s\\\\e[0;34m in the native shell once the installation and configuration process completes will attempt to finish the autoconfiguration and installation if the installation and configuration processes were not completely successful.  Should better solutions for \\\\e[0;32m%s\\\\e[0;34m be found, please open an issue and accompanying pull request if possible.\\\\nThe entire script can be reviewed by creating a \\\\e[0;32m%s\\\\e[0;34m directory with the command \\\\e[0;32m%s\\\\e[0;34m which can be used to access the entire installation script.  This option does NOT configure and install the root file system.  This command transfers the entire script into the home directory for hacking, modification and review.  The command \\\\e[0;32m%s\\\\e[0;34m has more information about how to use use \\\\e[0;32m%s\\\\e[0;34m.\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} SIGNAL GENERATED in '$1'\" \"'bash ${0##*/} refresh'\" \"'${0##*/}'\" \"'~/TermuxArchBloom/'\" \"'${0##*/} b'\" \"'${0##*/} help'\" \"'${0##*/}'\"\n}\n_PTSTRPXT_() { # print run on exit messages\nprintf \"\\\\e[0;32mPlease run 'bash %s' again, or use 'bash %s refresh' once Arch Linux is installed in TermuxArch PRoot QEMU.  \" \"${STRNRG:-}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mRunning command '%s refresh' assists in completing the installation and configuration.  This command also updates the system to the newest version and runs the command 'keys'.  If command '%s refresh' does not assist in completing the tasks of installing and configuring the Arch Linux system completely, these alternate commands '%s re' then using '%s r' helps in the order given.  Command 'keys' assists in installing default Arch Linux system keyrings.  \" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[0;32mCommand '%s refresh' can be used to refresh the Arch Linux system in TermuxArch PRoot QEMU system to the newest version published;  Command '%s sysinfo' has more information and can help with diagnostics.  \" \"${0##*/}\" \"${0##*/}\"\nprintf \"\\\\e[1;32mIs the system that you are using [up to date with packages](https://github.com/WAE/au), [Termux app](https://github.com/termux/termux-app/releases) and device software?  \"\nprintf \"\\\\e[0;32mCommand '%s help' has more information.  \" \"${0##*/}\"\n}\n_QEMU_() {\n_QEMUCHCK_() {\nif [[ \"$CPUABI\" == \"$1\" ]]\nthen\nprintf \"\\\\e[1;33m %s\\\\e[0;33m  %s\\\\e[1;31m  %s  \" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"QEMU NOTICE!  Machine architecture is $CPUABI.  Please choose a different computer architecture.\" \"Exiting...\"\nexit 189\nfi\n}\n_INSTLLDIRCHK_\n_INST_() { # check for neccessary commands\nCOMMS=\"$1\"\n[ \"$COMMS\" = \"qemu-user-x86_64\"  ] && COMMS=\"qemu-x86_64\"\nCOMMANDR=\"$(command -v au)\" || printf \"%s\\\\n\\\\n\" \"$STRING1\"\nCOMMANDIF=\"${COMMANDR##*/}\"\nPKG=\"$2\"\n[ \"$PKG\" = \"qemu-user-x86_64\"  ] && PKG=\"qemu-user-x86_64\"\n_INPKGS_() {\nprintf \"%s\\\\n\" \"Beginning qemu '$ARCHITEC' setup:\"\nif [ \"$COMMANDIF\" = au ]\nthen\nau \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nelse\ncurl -JOL https://wae.github.io/au/au \"$PKG\" || printf \"%s\\\\n\" \"$STRING2\"\nfi\n}\nif ! command -v \"$COMMS\"\nthen\n_INPKGS_\nfi\n}\n_INSTLLDIRCHK_\nprintf \"%s'\\\\n\" \"Command '$STRNRG':  Please set the architecture to install with PRoot QEMU emulation.  This computer architecture for this device is '$CPUABI'. 32 bit arm7 supports i386 emulated architecture.  64 bit arm64 supports arm7, i386 and x86_64 emulated architectures with PRoot QEMU.  Please select the architecture to install by number (2-5) from this list:\"\nselect ARCHITECTURE in exit armv7 arm64-v8a i386 x86_64 ;\ndo\n[[ \"$ARCHITECTURE\" == [Ee]* ]] && exit\nif [[ \"$ARCHITECTURE\" == armv7 ]]\nthen\n_QEMUCHCK_ \"armeabi-v7a\"\nARCHITEC=\"arm\"\nCPUABI=\"armeabi-v7a\"\nelif [[ \"$ARCHITECTURE\" == arm64-v8a ]]\nthen\n_QEMUCHCK_ \"arm64-v8a\"\nARCHITEC=\"aarch64\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == i386 ]]\nthen\n_QEMUCHCK_ \"i386\"\nARCHITEC=\"i386\"\nCPUABI=\"$ARCHITECTURE\"\nelif [[ \"$ARCHITECTURE\" == x86_64 ]]\nthen\n_QEMUCHCK_ \"x86_64\"\nARCHITEC=\"x86_64\"\nCPUABI=\"$ARCHITECTURE\"\nfi\n[[ $CPUABI == *arm* ]] || [[ $CPUABI == *86* ]] && printf \"%s\\\\n\" \"Option ($REPLY) with architecture $CPUABI (${ARCHITEC:-}) was picked from this list;  The chosen Arch Linux architecture for installation with emulation is $CPUABI (${ARCHITEC:-}):  \" && INCOMM=\"qemu-user-${ARCHITEC:-}\" && QEMUCR=0 && break || printf \"%s\\\\n\" \"Answer ($REPLY) was chosen;  Please select the architecture by number from this list: (1) armeabi, (2) armeabi-v7a, (3) arm64-v8a, (4) i386, (5) x86_64 or choose option (6) exit to exit command '${0##*/}':\"\ndone\nINCOMM=\"qemu-user-$ARCHITEC\" && QEMUCR=0\nif ! command -v \"${INCOMM//-user}\"\nthen\n_INST_ \"$INCOMM\" \"$INCOMM\" \"${0##*/}\" || _PSGI1ESTRING_ \"_INST_ _QEMU_ setupTermuxArch ${0##*/}\"\nfi\nprintf \"Detected architecture is %s;  Install architecture is set to %s.\\\\n\" \"$CPUABI\" \"$ARCHITEC\"\n}\n_RMARCHQ_() {\nprintf \"\\\\n\\\\e[0;33m %s \\\\e[1;33m%s \\\\e[0;33m%s\\\\n\\\\n\\\\e[1;30m%s\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^}\" \"DIRECTORY NOTICE!  ~/${INSTALLDIR##*/}/\" \"directory detected.\" \"Purge '$INSTALLDIR' as requested?\"\nif [[ -z \"${PURGELCR:-}\" ]]\nthen\nPURGEMETHOD=\"quick \"\nelse\nPURGEMETHOD=\"\"\nfi\nprintf \"\\\\e[1;30m\"\nwhile true; do\nread -n 1 -p \"Uninstall '~/${INSTALLDIR##*/}/' with ${PURGEMETHOD}purge? [Y|n] \" RUANSWER\nif [[ \"$RUANSWER\" = [Ee]* ]] || [[ \"$RUANSWER\" = [Nn]* ]] || [[ \"$RUANSWER\" = [Qq]* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"No was answered: uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nbreak\nelif [[ \"$RUANSWER\" = [Yy]* ]] || [[ \"$RUANSWER\" = \"\" ]]\nthen\nprintf \"\\\\e[30m%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/'...\"\nif grep -q ^pacmd \"$PREFIX/etc/profile\" && grep -q ^pulseaudio \"$PREFIX/etc/profile\"\nthen\nawk '!/^pulseaudio/' \"$PREFIX/etc/profile\" > \"$TAMPDIR/profile$FTIME\"\nawk '!/^pacmd/' \"$TAMPDIR/profile$FTIME\" > \"$PREFIX/etc/profile\"\nfi\nif [[ -d \"$INSTALLDIR\" ]]\nthen\n_RMARCHRM_\nelse\nprintf \"%s\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/': nothing to do for '~/${INSTALLDIR##*/}/'.\"\nfi\nif [[ -e \"$PREFIX/bin/$STARTBIN\" ]]\nthen\nrm -f \"$PREFIX/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$PREFIX/bin/$STARTBIN': nothing to do for '$PREFIX/bin/$STARTBIN'.\"\nfi\nif [[ -e \"$HOME/bin/$STARTBIN\" ]]\nthen\nrm -f \"$HOME/bin/$STARTBIN\"\nelse\nprintf \"%s\\\\n\" \"Uninstalling '$HOME/bin/$STARTBIN': nothing to do for '$HOME/bin/$STARTBIN'.\"\nfi\nprintf \"%s \\\\e[1;32mDONE\\\\e[30m\\\\n\\\\n\" \"Uninstalling '~/${INSTALLDIR##*/}/':\"\nbreak\nelse\nprintf \"\\\\nYou answered \\\\e[33;1m%s\\\\e[30m.\\\\n\\\\nAnswer \\\\e[32mYes\\\\e[30m or \\\\e[1;31mNo\\\\e[30m. [\\\\e[32my\\\\e[30m|\\\\e[1;31mn\\\\e[30m]\\\\n\" \"$RUANSWER\"\nfi\ndone\n}\n_RMARCHRM_() {\n_RMARCHCRRM_() {\t# remove installation\nchmod -R 777 \"$INSTALLDIR\" || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\nfind \"$INSTALLDIR\" -type l -delete  || _PSGI1ESTRING_ \"find INSTALLDIR _RMARCHRM_ ${0##*/}\"\nrm -rf \"$INSTALLDIR\" || _PSGI1ESTRING_ \"rm -rf INSTALLDIR _RMARCHRM_ ${0##*/}\"\n}\n_DOEXONSTGE_() {\t# remove empty storage directories\nprintf \"\\\\e[0;35m\"\nfor EXONSTGEM in ${EXONSTGE[@]:-}\ndo\n{ find \"$EXONSTGEM\" -type l -delete && rmdir \"$EXONSTGEM\" ; } || { printf \"\\\\e[1;31m%s\\\\e[1;35m%s\\\\e[1;31m%s\" \"Exit signal recieved:\" \"  Attempting to 'rmdir ${EXONSTGEM##*/}' exception.  Please either remove directory '$EXONSTGEM' manually or use command 'chmod -R 777 ~/${INSTALLDIR##*/}' followed by 'rm -rf ~/${INSTALLDIR##*/}' in order to remove directory '~/${INSTALLDIR##*/}'.  \" \"Exiting...  \" && exit 206 ; }\ndone\nprintf \"\\\\e[1;30m\"\n}\n_SETROOT_EXCEPTION_\ndeclare -a EXONSTGE\nEXONSTGE=(\"$(find \"$INSTALLDIR\" -name storage -type d || printf \"\")\")\nif [[ -n \"${EXONSTGE:-}\" ]]\nthen\n_DOEXONSTGE_\nfi\n_RMARCHCRRM_\n}\n_SETROOT_EXCEPTION_() {\nif [[ \"$INSTALLDIR\" = \"$HOME\" ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../ ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../.. ]] || [[ \"$INSTALLDIR\" = \"$HOME\"/../../ ]]\nthen\nprintf  '\\033]2;%s\\007' \"Rootdir exception.  Please run bash ${0##*/} again with different options...\"\nprintf \"\\\\n\\\\e[1;31m%s\\\\n\\\\n\" \"Rootdir exception.  Please run the script ${0##*/} again with different options...\"\nexit 125\nfi\n}\n_TAMATRIXEXIT_() { # run when Matrix presentation ends\nif [[ -n \"${TAMATRIXENDLCR:-}\" ]]\nthen\n_TAMATRIXEND_\nfi\n}\n## USER INFORMATION:  Configurable variables such as mirrors and download manager options are in 'setupTermuxArchConfigs.bash'.  Working with 'knownconfigurations.bash' in the working directory is simple.  The command 'bash setupTermuxArch manual' will create 'setupTermuxArchConfigs.bash' in the working directory for editing;  This command 'setupTermuxArch h' has more information.\ndeclare -A ADM\t\t# declare associative array for download tools\ndeclare -A ALLRCTFVR\t# declare associative array for all known architectures\nALLRCTFVR=([i386]=\"i386\" [i686]=\"i686\" [x86]=\"x86\" [x86_64]=\"x86_64\" [armeabi]=\"armeabi\" [armv7]=\"armv7\" [armeabi-v7a]=\"armeabi-v7a\" [arm64-v8a]=\"arm64-v8a\")\t# populate associative array for all known architectures\ndeclare -A FILE\t\t# declare associative array for download file\ndeclare -a ECLAVARR\t# declare indexed array for arrays and variables\ndeclare -a LC_TYPE\t# declare indexed array for locale types\ndeclare -a QEMUUSER\t# declare indexed array for qemu user tools\ndeclare PRFXTOLS\t# declare variable for device tools\ndeclare -A EMPARIAS\t# declare associative array for empty variables\nEMPARIAS=([COMMANDIF]=\"\" [COMMANDG]=\"\" [DFL]=\"# used for development\" [DM]=\"\" [FILE]=\"\" [FSTND]=\"\" [INSTALLDIR]=\"\" [LCC]=\"\" [LCP]=\"\" [OPT]=\"\" [QEMUCR]=\"\" [ROOTDIR]=\"\" [WDIR]=\"\" [SDATE]=\"\" [STI]=\"# generates pseudo random number\" [STIME]=\"# generates pseudo random number\" [USEREDIT]=\"\")\nfor PKG in ${!EMPARIAS[@]} ; do declare \"$PKG\"=\"\" ; done\nECLAVARR=(ARGS BINFNSTP COMMANDIF COMMANDR COMMANDG CPUABI CPUABI5 CPUABI7 CPUABI8 CPUABIX86 CPUABIX8664 DFL DMVERBOSE DM EDO01LCR ELCR USEREDIT FSTND INSTALLDIR LCC LCP LCR OPT PKGS ROOTDIR RWDIR SDATE STI STIME STRING1 STRING2 TMXRCHBND)\nfor ECLAVARS in ${ECLAVARR[@]} ; do declare $ECLAVARS ; done\nARGS=\"${@%/}\"\n## TERMUXARCH FEATURES INCLUDE:\n## 1)  Create aliases and commands that aid in using the command line, and assist in accessing the more advanced features like the commands 'pikaur' and 'yay' easily;  The files '.bashrc', '.bash_profile' and 'usr/local/termuxarch/bin/README.md' have more information about this feature,\n## 2)  Set timezone and locales from device,\n## 3)  Test for correct OS,\n## 4)  Get device information via the 'getprop' command,\nCPUABI=\"$(getprop ro.product.cpu.abi)\"\nCPUABI5=\"armeabi\"\t# used for development; 'getprop ro.product.cpu.abi' ascertains architecture\nCPUABI7=\"armeabi-v7a\"\t# used for development\nCPUABI8=\"arm64-v8a\"\t# used for development\nCPUABIX86=\"i386\"\t# used for development\nCPUABIX8664=\"x86_64\"\t# used for development\nDMVERBOSE=\"-q\"\t# -v for verbose download manager output from curl and wget;  for verbose output throughout runtime also change in 'setupTermuxArchConfigs.bash' when using 'setupTermuxArch m[anual]'\nELCR=1\nROOTDIR=\"/arch\"\nSTRING1=\"COMMAND 'au' enables rollback, available at https://wae.github.io/au/ IS NOT FOUND: Continuing... \"\nSTRING1F=\"COMMAND 'au' enables auto upgrade and rollback.  Available at https://wae.github.io/au/ is found: Continuing... \"\nSTRING2=\"Cannot update '${0##*/}' prerequisites: Continuing...\"\n_COMMANDGNE_() { printf \"\\\\n\\\\e[1;48;5;138m%s\\\\n\\\\n\" \"ＴｅｒｍｕｘＡｒｃｈ ${PGNM^^} NOTICE:  Run '${0##*/}' and 'bash ${0##*/}' from the native BASH shell in Termux:  EXITING...\" && exit 126 ; }\nCOMMANDG=\"$(command -v getprop)\" || _COMMANDGNE_\n_IFBINEXT_() {\nif [ -d \"$HOME/bin\" ] && grep \"$HOME/bin\" <<< \"$PATH\"\nthen\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$HOME/bin/$SCMD\" && chmod 700 \"$HOME/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to HOME/bin setupTermuxArch ${0##*/}\"\nelse\n{ curl -L \"https://raw.githubusercontent.com/WAE/au/master/$SCMD\" -o \"$PREFIX/bin/$SCMD\" && chmod 700 \"$PREFIX/bin/$SCMD\" ; } || _PSGI1ESTRING_ \"curl SCMD to PREFIX/bin setupTermuxArch ${0##*/}\"\nfi\n}\nSCMD=\"au\"\nif ! command -v \"$SCMD\"  > /dev/null\nthen\nprintf \"\\\\e[1;38;5;142mCommand \\\\e[1;38;5;138m%s\\\\e[1;38;5;142m not found: \\\\e[1;38;5;150mContinuing...\\\\n\" \"'$SCMD'\" && _IFBINEXT_\nfi\nCOMMANDR=\"$(command -v au)\" || COMMANDR=\"$(command -v pkg)\" || COMMANDR=\"$(command -v apt)\"\nCOMMANDIF=\"${COMMANDR##*/}\"\n## 5)  Generate pseudo random numbers to create uniq strings,\nSDATE=\"$(date +%s)\" || SDATE=\"$(shuf -i 0-99999999 -n 1)\" || _PSGI1ESTRING_ \"SDATE setupTermuxArch ${0##*/}\"\nif [[ -r /proc/sys/kernel/random/uuid ]]\nthen\nSTIME=\"$(cat /proc/sys/kernel/random/uuid)\" && STIME=\"${STIME//-}\" && STIME=\"${STIME//[[:alpha:]]}\" && STIME=\"${STIME:0:3}\"\nelse\nSTIME=\"$SDATE\" && STIME=\"$(rev <<< \"${STIME:7:4}\")\"\nfi\nONESA=\"${SDATE: -1}\"\nFTIME=\"$(date +%F%H%M%S)\"\nSTIME=\"$ONESA$STIME\"\n## 6)  Determine its own name and location of invocation,\nWDIR=\"$PWD/\" && WFDIR=\"$(realpath \"$0\")\"\nWFDIR=\"${WFDIR%/*}\"\n## 7)  Create a default Arch Linux in TermuxArch PRoot QEMU user account with the TermuxArch command 'addauser' that also configure user accounts to use the Arch Linux 'sudo' command,\n## 8)  Install emulated computer architectures with QEMU in your smartphone with two taps, or in one tap with 'setupTermuxArch visualorca [options]',\n## 9)  Help make some of aur installers including the installer the Arch Linux package installers 'pacaur', 'pikaur' and 'yay' with TermuxArch commands 'makeaur*' and more!  Please read /usr/local/termuxarch/bin/README.md for details,\n## 10)  And all options are are optional for installing Arch Linux in Android!\n## >>>>>>>>>>>>>>>>>>\n## >> HELP OPTIONS >>\n## >>>>>>>>>>>>>>>>>>\n## Open an issue and an accompanying pull request at GitHub if you would like to have any these options amended and/or new options added.  Please see the new feature at Github, the discussion option.  Brackets mean optional.  They are not meant to be typed.\n## []  Run default Arch Linux install.\nif [[ -z \"${1:-}\" ]]\nthen\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [./path/systemimage.tar.gz [customdir]]  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch ./[path/]systemimage.tar.gz' and 'setupTermuxArch /absolutepath/systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  The install directory argument is optional.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"${ARGS:0:1}\" = . ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"1\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [systemimage.tar.gz [customdir]]  Install directory argument is optional.  Network install can be substituted by copying systemimage.tar.gz and systemimage.tar.gz.md5 files with 'setupTermuxArch systemimage.tar.gz'.  Both '*.tar.gz' and '*.tar.gz.md5' files are required for this process to complete successfully.  Installation for many versions of Linux that publish a root file sysytem is supported with this TermuxArch festure.  Download and configuration is not presently implemented, and hopefully will be in the future.  Create an issue and pull request at GitHub to implement these features.\nelif [[ \"$ARGS\" = *.tar.gz* ]]\nthen\nprintf \"\\\\n%s\\\\n\" \"Setting mode to copy system image.\"\nGFILE=\"$1\"\nLCC=\"1\"\nLCP=\"0\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [axd|axs]  Get device system information with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx][Dd]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'axel'.\\\\n\"\nDM=axel\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [ax[el] [customdir]|axi [customdir]]  Install Arch Linux with 'axel'.\nelif [[ \"${1//-}\" = [Aa][Xx]* ]] || [[ \"${1//-}\" = [Aa][Xx][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'axel' as download manager.\\\\n\"\nDM=axel\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [ad|as]  Get device system information with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa][Dd]* ]] || [[ \"${1//-}\" = [Aa][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'aria2c'.\\\\n\"\nDM=aria2\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [a[ria2c] [customdir]|ai [customdir]]  Install Arch Linux with 'aria2c'.\nelif [[ \"${1//-}\" = [Aa]* ]]\nthen\nprintf \"\\\\nSetting 'aria2c' as download manager.\\\\n\"\nDM=aria2\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [bl[oom]]  Create ~/TermuxArchBloom directory and Arch Linux in TermuxArch PRoot QEMU root tree skeleton and skeleton files.  This option does NOT install the complete root file system.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb][Ll]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\nELCR=0\n_ARG2DIR_ \"$@\"\n_INTROBLOOM_ \"$@\"\n## [b[loom]]  Create a local copy of TermuxArch in TermuxArchBloom.  Useful for running a customized setupTermuxArch locally and for developing and hacking TermuxArch.\nelif [[ \"${1//-}\" = [Bb]* ]]\nthen\nprintf \"\\\\nSetting mode to bloom. \\\\n\"\n_INTROBLOOM_ \"$@\"\n## [cd|cs]  Get device system information with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Dd]* ]] || [[ \"${1//-}\" = [Cc][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'curl'.\\\\n\"\nDM=curl\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [cmi] [customdir]  Install Arch Linux with manual install using 'curl'.\nelif [[ \"${1//-}\" = [Cc][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nDM=curl\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [c[url] [customdir]|ci [customdir]]  Install Arch Linux with 'curl'.\nelif [[ \"${1//-}\" = [Cc][Ii]* ]] || [[ \"${1//-}\" = [Cc]* ]]\nthen\nprintf \"\\\\nSetting 'curl' as download manager.\\\\n\"\nDM=curl\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [de[bug]|s[ysinfo]]  Generate system information.\nelif [[ \"${1//-}\" = [Dd][Ee]* ]] || [[ \"${1//-}\" = [Ss]* ]]\nthen\nprintf \"\\\\nSetting mode to sysinfo.\\\\n\"\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [do [[flavor] [variaty]] [installdir]]  please see [systemimage.tar.gz [customdir]], https://github.com/TermuxArch/TermuxArch/issues/25, https://github.com/TermuxArch/TermuxArch/issues/34 and https://github.com/TermuxArch/TermuxArch/issues/68 for information.\nelif [[ \"${1//-}\" = [Dd][Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to do/what.\\\\n\"\nshift\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [he[lp] [customdir]]  Display terse builtin help.\nelif [[ \"${1//-}\" = [Hh][Ee]* ]]\nthen\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [h [customdir]]  Display verbose builtin help.\nelif [[ \"${1//-}\" = [?]* ]] || [[ \"${1//-}\" = [Hh]* ]]\nthen\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_ \"$@\"\n## [i[nstall] [customdir]]  Install Arch Linux in a custom directory.  Instructions: Install in userspace.  The HOME directory is appended to the installation directory.  To install Arch Linux in HOME/customdir use 'bash setupTermuxArch install customdir'.  In the BASH shell you can use './setupTermuxArch install customdir'.  All options can be abbreviated to one, two and three letters.  Hence './setupTermuxArch install customdir' can be run as './setupTermuxArch i customdir' in BASH.\nelif [[ \"${1//-}\" = [Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\n## [ld|ls]  Get device system information with 'lftp'.\nelif [[ \"${1//-}\" = [Ll][Dd]* ]] || [[ \"${1//-}\" = [Ll][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'lftp'.\\\\n\"\nDM=lftp\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [l[ftp] [customdir]]  Install Arch Linux with 'lftp'.\nelif [[ \"${1//-}\" = [Ll]* ]]\nthen\nprintf \"\\\\nSetting 'lftp' as download manager.\\\\n\"\nDM=lftp\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [matr[ix]]  Print TermuxArch source code as Matrix loop\nelif [[ \"${1//-}\" = [Mm][Aa][Tt][Rr]* ]]\nthen\nprintf \"Setting mode to matrix loop.\\\\n\"\nMATRIXLCR=0\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [mat[ix]]  Print TermuxArch source code as Matrix\nelif [[ \"${1//-}\" = [Mm][Aa][Tt]* ]]\nthen\nprintf \"\\\\nSetting mode to matrix.\\\\n\"\nMATRIXLCR=1\n_PREPTERMUXARCH_\n_DEPENDSBLOCK_ \"$@\"\n_TAMATRIX_\n## [m[anual]]  Manual Arch Linux install, can be useful for resolving download and proot init statement issues.\nelif [[ \"${1//-}\" = [Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Mm]* ]]\nthen\nprintf \"\\\\nSetting mode to manual install.\\\\n\"\nOPT=MANUAL\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\n## [o[ption]]  Option under development.\nelif [[ \"${1//-}\" = [Oo]* ]]\nthen\nprintf \"\\\\nSetting mode to option.\\\\n\"\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh with refresh user directories\\\\e[1;34m;\\\\e[0;32m For a full system refresh you can use the%s \\\\e[1;32m'%s' \\\\e[0;32m%s\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} ref[resh]\" \"command\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [purge [customdir]]  Purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp][Uu]* ]]\nthen\nprintf \"\\\\nSetting mode to purge.\\\\n\"\nPURGELCR=0\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [p[urge] [customdir]] Quick purge/uninstall Arch Linux from device.\nelif [[ \"${1//-}\" = [Pp]* ]]\nthen\nprintf \"\\\\nSetting mode to quick purge.\\\\n\"\n_ARG2DIR_ \"$@\"\n_RMARCHQ_\n## [q[emu] [m[anual]] [i[nstall]|r[e[f[resh]]]] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Issue [Implementing QEMU #25](https://github.com/TermuxArch/TermuxArch/issues/25) has more information.\nelif [[ \"${1//-}\" = [Qq][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu install.\\\\n\"\n_ARG2DIR_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq][Mm][Ii]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu manual install.\\\\n\"\nOPT=MANUAL\n_QEMU_\n_ARG2DIR_ \"$@\"\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Qq]* ]]\nthen\nprintf \"\\\\nSetting mode to qemu.\\\\n\"\n_OPT1_ \"$@\"\n_QEMU_\n_INTRO_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]*[Ff][Oo][Rr][Cc][Ee] ]]\nthen\nprintf \"\\\\nSetting mode to full refresh force.\\\\n\"\nOPT=FORCE\necho Developing feature\\; Please see https://github.com/TermuxArch/TermuxArch/discussions/92 for more information.\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [refre[sh] [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and the Arch Linux installation itself.  This option is useful for refreshing the installation, the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.  This refresh mode also runs keys, generates locales and updates the Arch Linux in PRoot QEMU system.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr][Ee]* ]]\nthen\nprintf \"\\\\nSetting mode to full refresh.\\\\n\"\n_PRPREFRESH_ \"5\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\nelif [[ \"${1//-}\" = [Rr][Ee][Ff][Rr]* ]]\nthen\nprintf \"\\\\nSetting mode to 4 refresh.\\\\n\"\n_PRPREFRESH_ \"4\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [ref [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch and populate the installation from the cache directory.  Useful for refreshing the root user's home directory, the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee][Ff]* ]]\nthen\nprintf \"\\\\nSetting mode to 3 refresh.\\\\n\"\n_PRPREFRESH_ \"3\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [re [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for refreshing the root user's home directory and the user home directories and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up files.\nelif [[ \"${1//-}\" = [Rr][Ee]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh with refresh user directories.  Directory '/var/backups/' backs up files \\\\e[1;34m:\\\\e[0;32m For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [r [customdir]]  Refresh the Arch Linux in TermuxArch PRoot QEMU scripts created by TermuxArch.  Useful for only refreshing the root user's home directory and the TermuxArch generated scripts to their newest version;  Directory '/var/backups/' backs up the refreshed files.\nelif [[ \"${1//-}\" = [Rr]* ]]\nthen\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m: \\\\e[1;32mminimal refresh; Directory '/var/backups/' backs up files\\\\e[1;34m:\\\\e[0;32m  For a full system refresh the \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"1\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [u[pdateTermuxTools] [refresh] [customdir]]  Developing implementation; Update installation with Termux tools.\nelif [[ \"${1//-}\" = [Uu]* ]]\nthen\nEDO01LCR=0\nprintf \"\\\\n\\\\e[0;32mSetting mode\\\\e[1;34m; \\\\e[1;32mupdate Termux tools with minimal refresh including user directories\\\\e[1;34m;\\\\e[0;32m  For a full system refresh the%s \\\\e[1;32m'%s' \\\\e[0;32mcommand can used\\\\e[1;34m...\\\\n\" \"\" \"${0##*/} refresh\"\n_PRPREFRESH_ \"2\"\n_ARG2DIR_ \"$@\"\n_INTROREFRESH_ \"$@\"\n## [vis[ualorca] [manual] [install|refresh] [customdir]]  Install Arch Linux on smartphone.  Please use the TermuxArch command 'orcaconf' once Arch Linux in installed to complete the configuration.  Issue [Expanding setupTermuxArch so visually impaired users can install Orca screen reader (assistive technology) and have VNC support added easily. #34](https://github.com/TermuxArch/TermuxArch/issues/34) has more information about this option.\nelif [[ \"${1//-}\" = [Vv][Ii][Ss]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vis[ualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_OPT1_ \"$@\"\n_PREPTERMUXARCH_\n_INTRO_ \"$@\"\n## [vi[sualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv][Ii]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to vi[sualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [v[isualorca] [manual] [install|refresh] [customdir]]  Install alternate architecture on smartphone with https://github.com/qemu/QEMU emulation.  Please use the TermuxArch command 'orcaconf' once Arch Linux is installed to complete the configuration.\nelif [[ \"${1//-}\" = [Vv]* ]]\nthen\nVLORALCR=0\nprintf \"\\\\nSetting mode to v[isualorca] [manual] [install|refresh] [customdir].\\\\n\"\n_CHOOSEABIx86_ \"$@\"\n## [wd|ws]  Get device system information with 'wget'.\nelif [[ \"${1//-}\" = [Ww][Dd]* ]] || [[ \"${1//-}\" = [Ww][Ss]* ]]\nthen\nprintf \"\\\\nGetting device system information with 'wget'.\\\\n\"\nDM=wget\nshift\n_ARG2DIR_ \"$@\"\n_INTROSYSINFO_ \"$@\"\n## [w[get] [customdir]]  Install Arch Linux with 'wget'.\nelif [[ \"${1//-}\" = [Ww]* ]]\nthen\nprintf \"\\\\nSetting 'wget' as download manager.\\\\n\"\nDM=wget\n_OPT1_ \"$@\"\n_INTRO_ \"$@\"\nelse\nLCC=\"1\"\n_ARG2DIR_ \"$@\"\n_PRINTUSAGE_\nfi\n## >>>>>>>>>>>>>>>>>>\n## >>  HELP FACTS  >>\n## >>>>>>>>>>>>>>>>>>\n## THESE OPTIONS ARE AVAILABLE FOR YOUR CONVENIENCE:\n## GRAMMAR[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## OPTIONS[a]: setupTermuxArch [HOW/WHAT] [DO] [WHERE]\n## GRAMMAR[b]: setupTermuxArch [WHAT] [WHERE]\n## OPTIONS[b]: setupTermuxArch [~/|./|/absolute/path/]image.tar.gz [WHERE]\n## DEFAULTS ARE IMPLIED AND CAN BE OMITTED\n## SYNTAX[1]: [HOW (aria2|axel|curl|lftp|wget (default1: present on system (default2: lftp)))]\n## SYNTAX[2]: [DO (do|help|install|manual|purge|refresh|sysinfo (default: install))]\n## SYNTAX[3]: [WHERE (default: arch)]  Install in userspace, not external storage.\n## EXAMPLE USAGE:\n## USAGE[1]: 'setupTermuxArch curl sysinfo' will use curl as the download manager and produce a system information file in the working directory.  This can be abbreviated to 'setupTermuxArch cs' and 'setupTermuxArch c s'.\n## USAGE[2]: 'setupTermuxArch curl manual customdir' will install the installation in customdir with curl and use manual mode during installation.\n## USAGE[3]: 'setupTermuxArch curl refresh customdir' will refresh the installation using curl as the download manager.\n## Should any of these options fail to work as expected, please open an issue at GitHub with the command line used and output.  This product is being designed for both the sighted, and also the visually impaired;  Comments are welcome at discussions and issues webportals.\n## After installing TermuxArch on device, file 'INSTALLDIR/usr/local/termuxarch/bin/README.md' has more information.  The TermuxArch files in directory 'INSTALLDIR/usr/local/termuxarch/bin' have more information.\n## Very many hardy thank yous to contributors who are helping and have worked very hard for many long years, some for more, and to those who took mere minutes from their valuable effort with time in order to make this open source resource much better for all of us!  Please enjoy using TermuxArch in PRoot QEMU in Android, Chromebook, Amazon Fire OS and Windows on smartphone, tablet, wearable and similar:  setupTermuxArch FE\n"
        },
        {
          "name": "setupTermuxArch.sha512",
          "type": "blob",
          "size": 0.1494140625,
          "content": "033731f69dea719816bbf73088a5615f4cbc8c26b011ac10a6d0abc03726014c7ab19fdf28f6706bfeb54f95847638388ef0a487cb2809477dc30da90f1e40a2  setupTermuxArch.tar.gz\n"
        },
        {
          "name": "setupTermuxArch.tar.gz",
          "type": "blob",
          "size": 73.0400390625,
          "content": null
        },
        {
          "name": "sha512.sum",
          "type": "blob",
          "size": 5.005859375,
          "content": "e67be29efdd034781f6ef5bc4114f56023ea7c927b94a22fa99595319c172268bdc545f7c2646e7d71c66b6736b90b244732f4f494c83fbacdf0f42a034569e4  ./.conf/VERSIONID\n05a502a845e35bc0495a3a3006ae914785c48679dddd362bd98bd33c306ed2aa8fac57344b1b65955d41755c3967f3e991770764f6c2f14c6a52f3e52e00ef1c  ./.github/FUNDING.yml\nc5b8dd6c602b3acea11ff4b6bd541cc77ebd44fa359ffd40f78785a16949a3a0f435c763c2dbc05327c071326e19c9951940e85ebd832ec1fad4feeb9dc97dac  ./.github/workflows/greetings.yml\ncd90fd3ba3554fbae5c5cbe38142191c74a76a039288d37c10a6f247bdac47e84dfeb7f17055a9bf27cb19dd0d859cd5989307c037ab3847a98c916b4e811ef9  ./.github/workflows/label.yml\n4d98975d2749318d41060484f8c60a4f4e47f5a1c136bfe90d5d23e604613d83f7e0c90e2c1a7eb6828f50c911e85100f62ea413f3e42fe7fd1216b5a8b0b568  ./.github/workflows/stale.yml\ncdc820ca2ff7cde63d4455320d34984cf370c60d3b230b4d7bdcbaf8dd5c913a060f02655b1628355ae4d6307a5fce2573573bbf48d60c9dabbb77f709c4fefd  ./.gitmodules\nb9303b1c4ccd5cb151e65c243005e9bcf59182b02fb413d47a255672a85dc08adf323e754d1615f9ce5962e97b7824d2a78047cd56972c9109f3e7e5d1ab7a17  ./.gitpod.Dockerfile\nbe4cf1b862e9843e359c08d8fbe90eff27e193a4f864b1937b3cad1fffecdf2374541eb21359fbe6b346e4bd1db4e223861878389f8e887f78ba06f53feb8eb7  ./.gitpod.yml\n98943e78485ed91b32dcd723520fcda14d829f82c882697979e8366121a449467aae0cbd6171cd00b19f818bec26d1f6525161b9836080db80801dbcf4c337d2  ./404.md\n8fa003af5524d81bfcd74663833f64bc00791a1ca7894f74bfaba8012736ed60beaf89ca932fd69a0fa3104e9a48944bc1a0b14634a41848688af6d409859024  ./CHANGE.log\nf2d9bb93b52e89f1dc7051f1cef5a640b3d115ffdc20a91dca0827ac9089f8ad6ec9f5484f27cba2137cd709b176e3b0d8d593fc20d09676beaf8c10e2f21604  ./CONTRIBUTORS.md\n1fbd5bbe1d7a8fad9bcbfe3410fab3ebbd1e79bc728b301eeb78b956357d3d0cd5829e500879e5621eb531147f2c2fc0e4f76f313dd515892bec6010bd3a2a00  ./LICENSE\nf926dc402b414c955b3ae593d3b0a9dc4a20657a8075749c3774d2cf7b30d60da3ff7ba0e06bde4ab75f72b4fc8840aa2357d6383d00cb31d636f3589fb49012  ./NOTICE.md\ne21012fb1f59efa4b3e6e8d3a953a5304e5b8eac0deb3631b068b463d8bee1d616bf9f2c706b2b78444e2bfdf6ee24b7dea8f890be36a216df20f95f2bada174  ./README.md\nb6f3bc5d831d7de898d665ab0c3c97ae19cba1dad6276bbe6fccd8fa10fee1dba3d600e869b917bd29c6ecdb1cc72ca18421f0120254ca9d377a19f641f99928  ./archlinuxconfig.bash\nca1b3f26dc0d74401c48c754cfcbf7f57cc79827d8e6f6c5fe585d6cd00ece8770672f85f60371526c3dcecade7d6f0bf4d4d9744f316603501479a200daafbe  ./espritfunctions.bash\n53ef82880f9e8e2ebb16ff2cfaf18dae7d4c866046979f41716de40c2c619529fb5f0d86364a7ab4ec0a6ab839446104d3ba0cbfc92c68ede87a09d456e7e386  ./getimagefunctions.bash\nb67fea23eb50e58f40e0e8183de2e1079ac98b1316478870b1cd6842fb80a758217e1bafbb1b5146af69795395078e07d3e79b0015fc24246be0d31700e3a396  ./knownconfigurations.bash\nb4447309fc2a1ac9b8aedab94ee2bb3dae8dda6dd9a8f9c6df5786d907040731fc152018b8a15a56df4a98a97a312db4dc72c48b862b0ef10654ddf09e470ccf  ./maintenanceroutines.bash\ne262e693486af502d1cb81106ea745b9bc411f80b5726daaa0ae526f3e6e915f7f7780afbd45e3f769a174a3488e5acb5d4b1838a596b7f92ed1c84e5d4cdc5b  ./necessaryfunctions.bash\n5367a15b51fe4909ed5365c890f46992b9e42befc7f273ef47ff069cdc8e512f257fe61a200dd8e5ae7cfb3ccfb6bcbff3e092979c2272a60e5cd9730146a0be  ./printoutstatements.bash\n91f866372458ffb4399d0acbcdd8b24b161cd48d776020ea274b1ac6db46826519248d12574493a8b003af320df12d5c7baab331137d2e71d5deace6ca69146e  ./pullTermuxArchMods.bash\n6f8a50ec0f811b35515666ecf5131bc59391a32a4760dd9994c64b2209544532dac4160c61dc0a53622b6453d34e6061b810e7a64bdcc853cf795e10d21ba3b8  ./robots.txt\nefaab643329dc559d46a4f6b1f806e565871ee98a3a41e1a6371430ec1159b616a6586bcb7cab741269787a8cbf322b05a323f6dcd0c1af61b179091b0013cb6  ./setupTermuxArch\nefaab643329dc559d46a4f6b1f806e565871ee98a3a41e1a6371430ec1159b616a6586bcb7cab741269787a8cbf322b05a323f6dcd0c1af61b179091b0013cb6  ./setupTermuxArch.bash\nefaab643329dc559d46a4f6b1f806e565871ee98a3a41e1a6371430ec1159b616a6586bcb7cab741269787a8cbf322b05a323f6dcd0c1af61b179091b0013cb6  ./setupTermuxArch.sh\n23bcbd684a6cde0ba85fb6e70bdf25401cb93463a37bb1f967b6912940c38287b57e254a728f9098b017e72ed5910468b5ee3558f3e7471ca7c6e0f102065b96  ./setupTermuxArch.sha512\n033731f69dea719816bbf73088a5615f4cbc8c26b011ac10a6d0abc03726014c7ab19fdf28f6706bfeb54f95847638388ef0a487cb2809477dc30da90f1e40a2  ./setupTermuxArch.tar.gz\n9ae12dac3a7ad11cc929036d608e0113595925c48f6f9bf65af299bf01e1b0dbf9eedaa118c53bf957ae909c52e322bf7431b95ca0cc8517924321c678346dcb  ./sitemap.txt\n48bf62b56bc0801ade1c8181f862461d5e86c3c91a1c44b12826ac919accf9f5375d61c5e04bf426f3911ea58fb1728227d541835df90ed7791ff45b204063ba  ./taprootuserland.bash\n48bf62b56bc0801ade1c8181f862461d5e86c3c91a1c44b12826ac919accf9f5375d61c5e04bf426f3911ea58fb1728227d541835df90ed7791ff45b204063ba  ./taqemualpinex86.bash\n1773309efeebea769538351fff26fc0be992317ec6e786974a508913133d7804b04c9cce580a3b5a9167b596bba12517e19b3973c2d698870c24e696623dcdf4  ./fbindsfunctions.bash\n44e298a301832bcab98c4f8b2ab2f15881df951ce2e8a3bfb40628ec43c120d2e7655bc70cf4fb3b212102fa5ac67d3e4b2272e2f618dec620dc06bbd631c8ea  ./initkeyfunctions.bash\n315f14e2c62a56abf3b3d195a0f0f12c16fcfca61b6b8fcb887f925899df3435a31b412500dae8b9ebca1b437f4bfa9552383dd0f6bb2eaf3455fd61583a066d  ./_config.yml\n"
        },
        {
          "name": "sitemap.txt",
          "type": "blob",
          "size": 1.703125,
          "content": "https://TermuxArch.github.io/TermuxArch/CONTRIBUTORS.html\nhttps://TermuxArch.github.io/TermuxArch/docs/Architectures.html\nhttps://TermuxArch.github.io/TermuxArch/docs/blurb1.html\nhttps://TermuxArch.github.io/TermuxArch/docs/blurb2.html\nhttps://TermuxArch.github.io/TermuxArch/docs/blurb2s.html\nhttps://TermuxArch.github.io/TermuxArch/docs/blurb.html\nhttps://TermuxArch.github.io/TermuxArch/docs/Community.html\nhttps://TermuxArch.github.io/TermuxArch/docs/CONTRIBUTORS.html\nhttps://TermuxArch.github.io/TermuxArch/docs/FAQ.html\nhttps://TermuxArch.github.io/TermuxArch/docs/index.html\nhttps://TermuxArch.github.io/TermuxArch/docs/install.html\nhttps://TermuxArch.github.io/TermuxArch/docs/Known_Configurations.html\nhttps://TermuxArch.github.io/TermuxArch/docs/listofarchpackages.html\nhttps://TermuxArch.github.io/TermuxArch/docs/LICENSE\nhttps://TermuxArch.github.io/TermuxArch/docs/md5sums.html\nhttps://TermuxArch.github.io/TermuxArch/docs/mirrors.html\nhttps://TermuxArch.github.io/TermuxArch/docs/Notice-to-Contributors.html\nhttps://TermuxArch.github.io/TermuxArch/docs/PRoot.html\nhttps://TermuxArch.github.io/TermuxArch/docs/README.html\nhttps://TermuxArch.github.io/TermuxArch/docs/storage.html\nhttps://TermuxArch.github.io/TermuxArch/docs/Termux.html\nhttps://TermuxArch.github.io/TermuxArch/docs/wdih.html\nhttps://TermuxArch.github.io/TermuxArch/index.html\nhttps://TermuxArch.github.io/TermuxArch/LICENSE\nhttps://TermuxArch.github.io/TermuxArch/NOTICE.html\nhttps://TermuxArch.github.io/TermuxArch/README.html\nhttps://TermuxArch.github.io/TermuxArch/robots.txt\nhttps://TermuxArch.github.io/TermuxArch/scripts/debug/README.html\nhttps://TermuxArch.github.io/TermuxArch/scripts/frags/README.html\nhttps://TermuxArch.github.io/TermuxArch/sitemap.txt\n"
        },
        {
          "name": "taprootuserland.bash",
          "type": "blob",
          "size": 3.27734375,
          "content": "#!/usr/bin/env bash\n## copyright 2020 (c) by SDRausty, all rights reserved, see LICENSE\n## hosting termuxarch.github.io/TermuxArch courtesy pages.github.com\n## contributors:  github.com/WMCB-Tech github.com/JanuszChmiel thank you for helping\n################################################################################\nset -eu\n_AU_() {\nif command -v au\nthen\nau \"$@\"\nelse\nprintf \"%s\\\\n\" \"Installing 'au'\" && curl -OL \"https://raw.githubusercontent.com/WAE/au/master/au\" -o \"$PREFIX/bin/au\" && chmod 744 \"$PREFIX/bin/au\"\nau \"$@\"\nfi\n}\n_BKPPROOT_() {\n[ ! -d \"$HOME/termux/proot/tmp\" ] && mkdir -p \"$HOME/termux/proot/tmp\"\nif [ ! -f \"$HOME/termux/proot/tmp/proot.bkp\" ] && [ -f \"$PREFIX/bin/proot\" ]\nthen\ncp \"$PREFIX/bin/proot\" \"$HOME/termux/proot/tmp/proot.bkp\" && printf \"%s\\\\n\" \"Copied file '$PREFIX/bin/proot' to '$HOME/termux/proot/tmp/proot.bkp'.\"\nfi\n}\n_GITCLONETERMUXPROOT_ () {\nif [[ -z \"${GITCLONETERMUXPROOTLCR:-}\" ]]\nthen\nprintf \"%s\\\\n\" \"Cloning 'https://github.com/termux/proot' with 'git --depth 1 --single-branch'.\"\ngit clone --depth 1 \"https://github.com/termux/proot\" --single-branch\nelse\nprintf \"%s\\\\n\" \"Cloning 'https://github.com/termux/proot' with 'git'.\"\ngit clone \"https://github.com/termux/proot\"\ncd proot\ngit reset --hard \"$GITCLONETERMUXPROOTLCR\"\nfi\n}\n_MAKEV1_() {\nif [ -f \"$HOME/termux/proot/src/builttaprootuserland.lock\" ]\nthen\nprintf \"%s\\\\n\" \"Found file '$HOME/termux/proot/src/builttaprootuserland.lock' in directory '$HOME/termux/proot/src';  Please remove file '$HOME/termux/proot/src/builttaprootuserland.lock' to attempt to rebuild Termux PRoot with USERLAND support:  Continuing...\"\nelse\nif ! grep DUSERLAND GNUmakefile\nthen\nsed -ir 's/^CPPFLAGS.*/CPPFLAGS += -DUSERLAND -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I. -I$(VPATH)/g' GNUmakefile\nfi\n_BKPPROOT_\nif ! ./proot -V\nthen\nprintf \"%s\\\\n\" \"Running 'make clean && make V=1' in directory $(pwd)...\"\nmake clean && make V=1\nmake install\nelse\nmake install\nfi\nfi\n}\n_DOTAPROOTUSERLAND_() {\nif [ ! -e \"$HOME/termux/proot/src\" ]\nthen\nmkdir -p \"$HOME/termux\" && cd \"$HOME/termux\"\n_GITCLONETERMUXPROOT_ || (_AU_ git && _GITCLONETERMUXPROOT_)\nfi\nprintf \"%s\\\\n\" \"'cd $HOME/termux/proot/src'...\" && cd \"$HOME/termux/proot/src\"\n_MAKEV1_ || ( _AU_ clang libtalloc make && _MAKEV1_ )\ncommand -v \"$HOME/termux/proot/src/proot\" && touch \"$HOME/termux/proot/src/builttaprootuserland.lock\"\n}\n## begin ##\nif [[ -z \"${1:-}\" ]]\nthen\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr][Ee][Vv]* ]]\t##  [rev[ert] build from commit:\nthen\nGITCLONETERMUXPROOTLCR=\"bc3668f3238cee2011f9afa5a964b2dfc9dc523b\"\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr][Ee]* ]]\t##  [re[vert] build from commit:\nthen\nGITCLONETERMUXPROOTLCR=\"292fbc8a5406fdaf17b530444cd3dbaa92b1551d\"\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr]* ]]\t##  [r[evert] from backup file:\nthen\nif [ -f \"$HOME/termux/proot/tmp/proot.bkp\" ]\nthen\ncp \"$HOME/termux/proot/tmp/proot.bkp\" \"$PREFIX/bin/proot\" && printf \"%s\\\\n\" \"Copied file '$HOME/termux/proot/tmp/proot.bkp' to '$PREFIX/bin/proot'.\"\nfi\nelse\nprintf \"%s\\\\n\" \"Please run '${0##*/}' with no options to apply the DUSERLAND patch and to build the latest version of Termux 'proot' on smartphone;  You can also use the '${0##*/} r[e[v[ertPRootVersion]]]' options for DUSERLAND patching and building Termux 'proot' to one of two previously published source code versions.\"\nfi\n# taprootuserland.bash EOF\n"
        },
        {
          "name": "taqemualpinex86.bash",
          "type": "blob",
          "size": 3.27734375,
          "content": "#!/usr/bin/env bash\n## copyright 2020 (c) by SDRausty, all rights reserved, see LICENSE\n## hosting termuxarch.github.io/TermuxArch courtesy pages.github.com\n## contributors:  github.com/WMCB-Tech github.com/JanuszChmiel thank you for helping\n################################################################################\nset -eu\n_AU_() {\nif command -v au\nthen\nau \"$@\"\nelse\nprintf \"%s\\\\n\" \"Installing 'au'\" && curl -OL \"https://raw.githubusercontent.com/WAE/au/master/au\" -o \"$PREFIX/bin/au\" && chmod 744 \"$PREFIX/bin/au\"\nau \"$@\"\nfi\n}\n_BKPPROOT_() {\n[ ! -d \"$HOME/termux/proot/tmp\" ] && mkdir -p \"$HOME/termux/proot/tmp\"\nif [ ! -f \"$HOME/termux/proot/tmp/proot.bkp\" ] && [ -f \"$PREFIX/bin/proot\" ]\nthen\ncp \"$PREFIX/bin/proot\" \"$HOME/termux/proot/tmp/proot.bkp\" && printf \"%s\\\\n\" \"Copied file '$PREFIX/bin/proot' to '$HOME/termux/proot/tmp/proot.bkp'.\"\nfi\n}\n_GITCLONETERMUXPROOT_ () {\nif [[ -z \"${GITCLONETERMUXPROOTLCR:-}\" ]]\nthen\nprintf \"%s\\\\n\" \"Cloning 'https://github.com/termux/proot' with 'git --depth 1 --single-branch'.\"\ngit clone --depth 1 \"https://github.com/termux/proot\" --single-branch\nelse\nprintf \"%s\\\\n\" \"Cloning 'https://github.com/termux/proot' with 'git'.\"\ngit clone \"https://github.com/termux/proot\"\ncd proot\ngit reset --hard \"$GITCLONETERMUXPROOTLCR\"\nfi\n}\n_MAKEV1_() {\nif [ -f \"$HOME/termux/proot/src/builttaprootuserland.lock\" ]\nthen\nprintf \"%s\\\\n\" \"Found file '$HOME/termux/proot/src/builttaprootuserland.lock' in directory '$HOME/termux/proot/src';  Please remove file '$HOME/termux/proot/src/builttaprootuserland.lock' to attempt to rebuild Termux PRoot with USERLAND support:  Continuing...\"\nelse\nif ! grep DUSERLAND GNUmakefile\nthen\nsed -ir 's/^CPPFLAGS.*/CPPFLAGS += -DUSERLAND -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -I. -I$(VPATH)/g' GNUmakefile\nfi\n_BKPPROOT_\nif ! ./proot -V\nthen\nprintf \"%s\\\\n\" \"Running 'make clean && make V=1' in directory $(pwd)...\"\nmake clean && make V=1\nmake install\nelse\nmake install\nfi\nfi\n}\n_DOTAPROOTUSERLAND_() {\nif [ ! -e \"$HOME/termux/proot/src\" ]\nthen\nmkdir -p \"$HOME/termux\" && cd \"$HOME/termux\"\n_GITCLONETERMUXPROOT_ || (_AU_ git && _GITCLONETERMUXPROOT_)\nfi\nprintf \"%s\\\\n\" \"'cd $HOME/termux/proot/src'...\" && cd \"$HOME/termux/proot/src\"\n_MAKEV1_ || ( _AU_ clang libtalloc make && _MAKEV1_ )\ncommand -v \"$HOME/termux/proot/src/proot\" && touch \"$HOME/termux/proot/src/builttaprootuserland.lock\"\n}\n## begin ##\nif [[ -z \"${1:-}\" ]]\nthen\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr][Ee][Vv]* ]]\t##  [rev[ert] build from commit:\nthen\nGITCLONETERMUXPROOTLCR=\"bc3668f3238cee2011f9afa5a964b2dfc9dc523b\"\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr][Ee]* ]]\t##  [re[vert] build from commit:\nthen\nGITCLONETERMUXPROOTLCR=\"292fbc8a5406fdaf17b530444cd3dbaa92b1551d\"\n_DOTAPROOTUSERLAND_\nelif [[ \"${1//-}\" = [Rr]* ]]\t##  [r[evert] from backup file:\nthen\nif [ -f \"$HOME/termux/proot/tmp/proot.bkp\" ]\nthen\ncp \"$HOME/termux/proot/tmp/proot.bkp\" \"$PREFIX/bin/proot\" && printf \"%s\\\\n\" \"Copied file '$HOME/termux/proot/tmp/proot.bkp' to '$PREFIX/bin/proot'.\"\nfi\nelse\nprintf \"%s\\\\n\" \"Please run '${0##*/}' with no options to apply the DUSERLAND patch and to build the latest version of Termux 'proot' on smartphone;  You can also use the '${0##*/} r[e[v[ertPRootVersion]]]' options for DUSERLAND patching and building Termux 'proot' to one of two previously published source code versions.\"\nfi\n# taprootuserland.bash EOF\n"
        }
      ]
    }
  ]
}