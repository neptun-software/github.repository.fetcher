{
  "metadata": {
    "timestamp": 1736568559790,
    "page": 589,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ONLYOFFICE/Docker-DocumentServer",
      "stars": 1531,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.1904296875,
          "content": "language: generic\n\ndist: trusty\n\nenv:\n  # community edition\n  - config: standalone.yml\n\n  # integration edition\n  - config: standalone.yml\n    PRODUCT_NAME: documentserver-ie\n\n\n  # certificates (default tls if onlyoffice not exists)\n  - config: certs.yml\n    ssl: true\n\n  # certificates (default onlyoffice if exists)\n  - config: certs.yml\n    ssl: true\n    private_key: onlyoffice.key\n    certificate_request: onlyoffice.csr\n    certificate: onlyoffice.crt\n\n  # custom certificates\n  - config: certs-customized.yml\n    ssl: true\n    private_key: mycert.key\n    certificate_request: mycert.csr\n    certificate: mycert.crt\n    SSL_CERTIFICATE_PATH: /var/www/onlyoffice/Data/certs/mycert.crt\n    SSL_KEY_PATH: /var/www/onlyoffice/Data/certs/mycert.key\n\n\n  # postgresql 16\n  - config: postgres.yml\n    POSTGRES_VERSION: 16\n\n  # postgresql 15\n  - config: postgres.yml\n    POSTGRES_VERSION: 15\n\n  # postgresql 14\n  - config: postgres.yml\n    POSTGRES_VERSION: 14\n\n  # postgresql 13\n  - config: postgres.yml\n    POSTGRES_VERSION: 13\n\n  # postgresql 12\n  - config: postgres.yml\n\n  # postgresql custom values\n  - config: postgres.yml\n    DB_NAME: mydb\n    DB_USER: myuser\n    DB_PWD: password\n    POSTGRES_DB: mydb\n    POSTGRES_USER: myuser\n\n  # postgresql deprecated variables\n  - config: postgres-old.yml\n\n\n  # mysql 8\n  - config: mysql.yml\n    MYSQL_VERSION: 8\n\n  # mysql 5\n  - config: mysql.yml\n    MYSQL_VERSION: 5\n\n  # mysql 5.7\n  - config: mysql.yml\n\n\n  # mariadb 10\n  - config: mariadb.yml\n    MARIADB_VERSION: 10\n\n  # mariadb 10.5\n  - config: mariadb.yml\n\n\n  - config: activemq.yml\n    ACTIVEMQ_VERSION: latest\n\n  # activemq 5.14.3\n  - config: activemq.yml\n\n\n  # rabbitmq latest\n  - config: rabbitmq.yml\n\n  # rabbitmq 3\n  - config: rabbitmq.yml\n    RABBITMQ_VERSION: 3\n\n  # rabbitmq old variables\n  - config: rabbitmq-old.yml\n\n\n  # redis latest with community edition\n  - config: redis.yml\n\n  # redis latest with integraion edition\n  - config: redis.yml\n    PRODUCT_NAME: documentserver-ie\n\n  # redis 6\n  - config: redis.yml\n    REDIS_VERSION: 6\n\n  # redis 5\n  - config: redis.yml\n    REDIS_VERSION: 5\n\n\n  # graphite\n  - config: graphite.yml\n\nservices:\n  - docker\n\nscript:\n  # Go to tests dir\n  - cd ${PWD}/tests\n\n  # Run test.\n  - ./test.sh\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.17578125,
          "content": "ARG BASE_VERSION=22.04\n\nARG BASE_IMAGE=ubuntu:$BASE_VERSION\n\nFROM ${BASE_IMAGE} AS documentserver\nLABEL maintainer Ascensio System SIA <support@onlyoffice.com>\n\nARG BASE_VERSION\nARG PG_VERSION=14\n\nENV OC_RELEASE_NUM=21\nENV OC_RU_VER=12\nENV OC_RU_REVISION_VER=0\nENV OC_RESERVED_NUM=0\nENV OC_RU_DATE=0\nENV OC_PATH=${OC_RELEASE_NUM}${OC_RU_VER}000\nENV OC_FILE_SUFFIX=${OC_RELEASE_NUM}.${OC_RU_VER}.${OC_RU_REVISION_VER}.${OC_RESERVED_NUM}.${OC_RU_DATE}${OC_FILE_SUFFIX}dbru\nENV OC_VER_DIR=${OC_RELEASE_NUM}_${OC_RU_VER}\nENV OC_DOWNLOAD_URL=https://download.oracle.com/otn_software/linux/instantclient/${OC_PATH}\n\nENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8 DEBIAN_FRONTEND=noninteractive PG_VERSION=${PG_VERSION} BASE_VERSION=${BASE_VERSION}\n\nARG ONLYOFFICE_VALUE=onlyoffice\n\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d && \\\n    apt-get -y update && \\\n    apt-get -yq install wget apt-transport-https gnupg locales lsb-release && \\\n    wget -q -O /etc/apt/sources.list.d/mssql-release.list https://packages.microsoft.com/config/ubuntu/$BASE_VERSION/prod.list && \\\n    wget -q -O - https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n    apt-get -y update && \\\n    locale-gen en_US.UTF-8 && \\\n    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && \\\n    ACCEPT_EULA=Y apt-get -yq install \\\n        adduser \\\n        apt-utils \\\n        bomstrip \\\n        certbot \\\n        cron \\\n        curl \\\n        htop \\\n        libaio1 \\\n        libasound2 \\\n        libboost-regex-dev \\\n        libcairo2 \\\n        libcurl3-gnutls \\\n        libcurl4 \\\n        libgtk-3-0 \\\n        libnspr4 \\\n        libnss3 \\\n        libstdc++6 \\\n        libxml2 \\\n        libxss1 \\\n        libxtst6 \\\n        mssql-tools18 \\\n        mysql-client \\\n        nano \\\n        net-tools \\\n        netcat-openbsd \\\n        nginx-extras \\\n        postgresql \\\n        postgresql-client \\\n        pwgen \\\n        rabbitmq-server \\\n        redis-server \\\n        sudo \\\n        supervisor \\\n        ttf-mscorefonts-installer \\\n        unixodbc-dev \\\n        unzip \\\n        xvfb \\\n        xxd \\\n        zlib1g && \\\n    if [  $(ls -l /usr/share/fonts/truetype/msttcorefonts | wc -l) -ne 61 ]; \\\n        then echo 'msttcorefonts failed to download'; exit 1; fi  && \\\n    echo \"SERVER_ADDITIONAL_ERL_ARGS=\\\"+S 1:1\\\"\" | tee -a /etc/rabbitmq/rabbitmq-env.conf && \\\n    sed -i \"s/bind .*/bind 127.0.0.1/g\" /etc/redis/redis.conf && \\\n    sed 's|\\(application\\/zip.*\\)|\\1\\n    application\\/wasm wasm;|' -i /etc/nginx/mime.types && \\\n    pg_conftool $PG_VERSION main set listen_addresses 'localhost' && \\\n    service postgresql restart && \\\n    sudo -u postgres psql -c \"CREATE USER $ONLYOFFICE_VALUE WITH password '$ONLYOFFICE_VALUE';\" && \\\n    sudo -u postgres psql -c \"CREATE DATABASE $ONLYOFFICE_VALUE OWNER $ONLYOFFICE_VALUE;\" && \\\n    wget -O basic.zip ${OC_DOWNLOAD_URL}/instantclient-basic-linux.x64-${OC_FILE_SUFFIX}.zip && \\\n    wget -O sqlplus.zip ${OC_DOWNLOAD_URL}/instantclient-sqlplus-linux.x64-${OC_FILE_SUFFIX}.zip && \\\n    unzip -d /usr/share basic.zip && \\\n    unzip -d /usr/share sqlplus.zip && \\\n    mv /usr/share/instantclient_${OC_VER_DIR} /usr/share/instantclient && \\\n    service postgresql stop && \\\n    service redis-server stop && \\\n    service rabbitmq-server stop && \\\n    service supervisor stop && \\\n    service nginx stop && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY config/supervisor/supervisor /etc/init.d/\nCOPY config/supervisor/ds/*.conf /etc/supervisor/conf.d/\nCOPY run-document-server.sh /app/ds/run-document-server.sh\nCOPY oracle/sqlplus /usr/bin/sqlplus\n\nEXPOSE 80 443\n\nARG COMPANY_NAME=onlyoffice\nARG PRODUCT_NAME=documentserver\nARG PRODUCT_EDITION=\nARG PACKAGE_VERSION=\nARG TARGETARCH\nARG PACKAGE_BASEURL=\"http://download.onlyoffice.com/install/documentserver/linux\"\n\nENV COMPANY_NAME=$COMPANY_NAME \\\n    PRODUCT_NAME=$PRODUCT_NAME \\\n    PRODUCT_EDITION=$PRODUCT_EDITION \\\n    DS_PLUGIN_INSTALLATION=false \\\n    DS_DOCKER_INSTALLATION=true\n\nRUN PACKAGE_FILE=\"${COMPANY_NAME}-${PRODUCT_NAME}${PRODUCT_EDITION}${PACKAGE_VERSION:+_$PACKAGE_VERSION}_${TARGETARCH:-$(dpkg --print-architecture)}.deb\" && \\\n    wget -q -P /tmp \"$PACKAGE_BASEURL/$PACKAGE_FILE\" && \\\n    apt-get -y update && \\\n    service postgresql start && \\\n    apt-get -yq install /tmp/$PACKAGE_FILE && \\\n    service postgresql stop && \\\n    chmod 755 /etc/init.d/supervisor && \\\n    sed \"s/COMPANY_NAME/${COMPANY_NAME}/g\" -i /etc/supervisor/conf.d/*.conf && \\\n    service supervisor stop && \\\n    chmod 755 /app/ds/*.sh && \\\n    printf \"\\nGO\" >> /var/www/$COMPANY_NAME/documentserver/server/schema/mssql/createdb.sql && \\\n    printf \"\\nGO\" >> /var/www/$COMPANY_NAME/documentserver/server/schema/mssql/removetbl.sql && \\\n    printf \"\\nexit\" >> /var/www/$COMPANY_NAME/documentserver/server/schema/oracle/createdb.sql && \\\n    printf \"\\nexit\" >> /var/www/$COMPANY_NAME/documentserver/server/schema/oracle/removetbl.sql && \\\n    rm -f /tmp/$PACKAGE_FILE && \\\n    rm -rf /var/log/$COMPANY_NAME && \\\n    rm -rf /var/lib/apt/lists/*\n\nVOLUME /var/log/$COMPANY_NAME /var/lib/$COMPANY_NAME /var/www/$COMPANY_NAME/Data /var/lib/postgresql /var/lib/rabbitmq /var/lib/redis /usr/share/fonts/truetype/custom\n\nENTRYPOINT [\"/app/ds/run-document-server.sh\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.015625,
          "content": "COMPANY_NAME ?= ONLYOFFICE\nGIT_BRANCH ?= develop\nPRODUCT_NAME ?= documentserver\nPRODUCT_EDITION ?= \nPRODUCT_VERSION ?= 0.0.0\nBUILD_NUMBER ?= 0\nBUILD_CHANNEL ?= nightly\nONLYOFFICE_VALUE ?= onlyoffice\n\nCOMPANY_NAME_LOW = $(shell echo $(COMPANY_NAME) | tr A-Z a-z)\n\nPACKAGE_NAME := $(COMPANY_NAME_LOW)-$(PRODUCT_NAME)$(PRODUCT_EDITION)\nPACKAGE_VERSION ?= $(PRODUCT_VERSION)-$(BUILD_NUMBER)~stretch\nPACKAGE_BASEURL ?= https://s3.eu-west-1.amazonaws.com/repo-doc-onlyoffice-com/server/linux/debian\n\nifeq ($(BUILD_CHANNEL),$(filter $(BUILD_CHANNEL),nightly test))\n\tDOCKER_TAG := $(PRODUCT_VERSION).$(BUILD_NUMBER)\nelse\n\tDOCKER_TAG := $(PRODUCT_VERSION).$(BUILD_NUMBER)-$(subst /,-,$(GIT_BRANCH))\nendif\n\nDOCKER_ORG ?= $(COMPANY_NAME_LOW)\nDOCKER_IMAGE := $(DOCKER_ORG)/4testing-$(PRODUCT_NAME)$(PRODUCT_EDITION)\nDOCKER_DUMMY := $(COMPANY_NAME_LOW)-$(PRODUCT_NAME)$(PRODUCT_EDITION)__$(DOCKER_TAG).dummy\nDOCKER_ARCH := $(COMPANY_NAME_LOW)-$(PRODUCT_NAME)_$(DOCKER_TAG).tar.gz\n\n.PHONY: all clean clean-docker image deploy docker\n\n$(DOCKER_DUMMY):\n\tdocker pull ubuntu:22.04\n\tdocker build \\\n\t\t--build-arg COMPANY_NAME=$(COMPANY_NAME_LOW) \\\n\t\t--build-arg PRODUCT_NAME=$(PRODUCT_NAME) \\\n\t\t--build-arg PRODUCT_EDITION=$(PRODUCT_EDITION) \\\n\t\t--build-arg PACKAGE_VERSION=$(PACKAGE_VERSION) \\\n\t\t--build-arg PACKAGE_BASEURL=$(PACKAGE_BASEURL) \\\n\t\t--build-arg TARGETARCH=amd64 \\\n\t\t--build-arg ONLYOFFICE_VALUE=$(ONLYOFFICE_VALUE) \\\n\t\t-t $(DOCKER_IMAGE):$(DOCKER_TAG) . && \\\n\tmkdir -p $$(dirname $@) && \\\n\techo \"Done\" > $@\n\n$(DOCKER_ARCH): $(DOCKER_DUMMY)\n\tdocker save $(DOCKER_IMAGE):$(DOCKER_TAG) | \\\n\t\tgzip > $@\n\nall: image\n\nclean:\n\trm -rfv *.dummy *.tar.gz\n\t\t\nclean-docker:\n\tdocker rmi -f $$(docker images -q $(COMPANY_NAME_LOW)/*) || exit 0\n\nimage: $(DOCKER_DUMMY)\n\ndeploy: $(DOCKER_DUMMY)\n\tfor i in {1..3}; do \\\n\t\tdocker push $(DOCKER_IMAGE):$(DOCKER_TAG) && break || sleep 1m; \\\n\tdone\nifeq ($(BUILD_CHANNEL),nightly)\n\tdocker tag $(DOCKER_IMAGE):$(DOCKER_TAG) $(DOCKER_IMAGE):latest\n\tfor i in {1..3}; do \\\n\t\tdocker push $(DOCKER_IMAGE):latest && break || sleep 1m; \\\n\tdone\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.84375,
          "content": "* [Overview](#overview)\n* [Functionality](#functionality)\n* [Recommended System Requirements](#recommended-system-requirements)\n* [Running Docker Image](#running-docker-image)\n* [Configuring Docker Image](#configuring-docker-image)\n    - [Storing Data](#storing-data)\n    - [Running ONLYOFFICE Document Server on Different Port](#running-onlyoffice-document-server-on-different-port)\n    - [Running ONLYOFFICE Document Server using HTTPS](#running-onlyoffice-document-server-using-https)\n        + [Generation of Self Signed Certificates](#generation-of-self-signed-certificates)\n        + [Strengthening the Server Security](#strengthening-the-server-security)\n        + [Installation of the SSL Certificates](#installation-of-the-ssl-certificates)\n        + [Available Configuration Parameters](#available-configuration-parameters)\n* [Installing ONLYOFFICE Document Server integrated with Community and Mail Servers](#installing-onlyoffice-document-server-integrated-with-community-and-mail-servers)\n* [ONLYOFFICE Document Server ipv6 setup](#onlyoffice-document-server-ipv6-setup)\n* [Issues](#issues)\n    - [Docker Issues](#docker-issues)\n    - [Document Server usage Issues](#document-server-usage-issues)\n* [Project Information](#project-information)\n* [User Feedback and Support](#user-feedback-and-support)\n\n## Overview\n\nONLYOFFICE Document Server is an online office suite comprising viewers and editors for texts, spreadsheets and presentations, fully compatible with Office Open XML formats: .docx, .xlsx, .pptx and enabling collaborative editing in real time.\n\nStarting from version 6.0, Document Server is distributed as ONLYOFFICE Docs. It has [three editions](https://github.com/ONLYOFFICE/DocumentServer#onlyoffice-document-server-editions). With this image, you will install the free Community version. \n\nONLYOFFICE Docs can be used as a part of ONLYOFFICE Workspace or with third-party sync&share solutions (e.g. Nextcloud, ownCloud, Seafile) to enable collaborative editing within their interface.\n\n***Important*** Please update `docker-engine` to latest version (`20.10.21` as of writing this doc) before using it. We use `ubuntu:22.04` as base image and it older versions of docker have compatibility problems with it\n\n## Functionality ##\n* ONLYOFFICE Document Editor\n* ONLYOFFICE Spreadsheet Editor\n* ONLYOFFICE Presentation Editor\n* ONLYOFFICE Documents application for iOS\n* Collaborative editing\n* Hieroglyph support\n* Support for all the popular formats: DOC, DOCX, TXT, ODT, RTF, ODP, EPUB, ODS, XLS, XLSX, CSV, PPTX, HTML\n\nIntegrating it with ONLYOFFICE Community Server you will be able to:\n* view and edit files stored on Drive, Box, Dropbox, OneDrive, OwnCloud connected to ONLYOFFICE;\n* share files;\n* embed documents on a website;\n* manage access rights to documents.\n\n## Recommended System Requirements\n\n* **RAM**: 4 GB or more\n* **CPU**: dual-core 2 GHz or higher\n* **Swap**: at least 2 GB\n* **HDD**: at least 2 GB of free space\n* **Distribution**: 64-bit Red Hat, CentOS or other compatible distributive with kernel version 3.8 or later, 64-bit Debian, Ubuntu or other compatible distributive with kernel version 3.8 or later\n* **Docker**: version 1.9.0 or later\n\n## Running Docker Image\n\n    sudo docker run -i -t -d -p 80:80 onlyoffice/documentserver\n\nUse this command if you wish to install ONLYOFFICE Document Server separately. To install ONLYOFFICE Document Server integrated with Community and Mail Servers, refer to the corresponding instructions below.\n\n## Configuring Docker Image\n\n### Storing Data\n\nAll the data are stored in the specially-designated directories, **data volumes**, at the following location:\n* **/var/log/onlyoffice** for ONLYOFFICE Document Server logs\n* **/var/www/onlyoffice/Data** for certificates\n* **/var/lib/onlyoffice** for file cache\n* **/var/lib/postgresql** for database\n\nTo get access to your data from outside the container, you need to mount the volumes. It can be done by specifying the '-v' option in the docker run command.\n\n    sudo docker run -i -t -d -p 80:80 \\\n        -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \\\n        -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  \\\n        -v /app/onlyoffice/DocumentServer/lib:/var/lib/onlyoffice \\\n        -v /app/onlyoffice/DocumentServer/rabbitmq:/var/lib/rabbitmq \\\n        -v /app/onlyoffice/DocumentServer/redis:/var/lib/redis \\\n        -v /app/onlyoffice/DocumentServer/db:/var/lib/postgresql  onlyoffice/documentserver\n\nNormally, you do not need to store container data because the container's operation does not depend on its state. Saving data will be useful:\n* For easy access to container data, such as logs\n* To remove the limit on the size of the data inside the container\n* When using services launched outside the container such as PostgreSQL, Redis, RabbitMQ\n\n### Running ONLYOFFICE Document Server on Different Port\n\nTo change the port, use the -p command. E.g.: to make your portal accessible via port 8080 execute the following command:\n\n    sudo docker run -i -t -d -p 8080:80 onlyoffice/documentserver\n\n### Running ONLYOFFICE Document Server using HTTPS\n\n        sudo docker run -i -t -d -p 443:443 \\\n        -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver\n\nAccess to the onlyoffice application can be secured using SSL so as to prevent unauthorized access. While a CA certified SSL certificate allows for verification of trust via the CA, a self signed certificates can also provide an equal level of trust verification as long as each client takes some additional steps to verify the identity of your website. Below the instructions on achieving this are provided.\n\nTo secure the application via SSL basically two things are needed:\n\n- **Private key (.key)**\n- **SSL certificate (.crt)**\n\nSo you need to create and install the following files:\n\n        /app/onlyoffice/DocumentServer/data/certs/tls.key\n        /app/onlyoffice/DocumentServer/data/certs/tls.crt\n\nWhen using CA certified certificates (e.g [Let's encrypt](https://letsencrypt.org)), these files are provided to you by the CA. If you are using self-signed certificates you need to generate these files [yourself](#generation-of-self-signed-certificates).\n\n#### Using the automatically generated Let's Encrypt SSL Certificates\n\n        sudo docker run -i -t -d -p 80:80 -p 443:443 \\\n        -e LETS_ENCRYPT_DOMAIN=your_domain -e LETS_ENCRYPT_MAIL=your_mail  onlyoffice/documentserver\n\nIf you want to get and extend Let's Encrypt SSL Certificates automatically just set LETS_ENCRYPT_DOMAIN and LETS_ENCRYPT_MAIL variables.\n\n#### Generation of Self Signed Certificates\n\nGeneration of self-signed SSL certificates involves a simple 3 step procedure.\n\n**STEP 1**: Create the server private key\n\n```bash\nopenssl genrsa -out tls.key 2048\n```\n\n**STEP 2**: Create the certificate signing request (CSR)\n\n```bash\nopenssl req -new -key tls.key -out tls.csr\n```\n\n**STEP 3**: Sign the certificate using the private key and CSR\n\n```bash\nopenssl x509 -req -days 365 -in tls.csr -signkey tls.key -out tls.crt\n```\n\nYou have now generated an SSL certificate that's valid for 365 days.\n\n#### Strengthening the server security\n\nThis section provides you with instructions to [strengthen your server security](https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html).\nTo achieve this you need to generate stronger DHE parameters.\n\n```bash\nopenssl dhparam -out dhparam.pem 2048\n```\n\n#### Installation of the SSL Certificates\n\nOut of the four files generated above, you need to install the `tls.key`, `tls.crt` and `dhparam.pem` files at the onlyoffice server. The CSR file is not needed, but do make sure you safely backup the file (in case you ever need it again).\n\nThe default path that the onlyoffice application is configured to look for the SSL certificates is at `/var/www/onlyoffice/Data/certs`, this can however be changed using the `SSL_KEY_PATH`, `SSL_CERTIFICATE_PATH` and `SSL_DHPARAM_PATH` configuration options.\n\nThe `/var/www/onlyoffice/Data/` path is the path of the data store, which means that you have to create a folder named certs inside `/app/onlyoffice/DocumentServer/data/` and copy the files into it and as a measure of security you will update the permission on the `tls.key` file to only be readable by the owner.\n\n```bash\nmkdir -p /app/onlyoffice/DocumentServer/data/certs\ncp tls.key /app/onlyoffice/DocumentServer/data/certs/\ncp tls.crt /app/onlyoffice/DocumentServer/data/certs/\ncp dhparam.pem /app/onlyoffice/DocumentServer/data/certs/\nchmod 400 /app/onlyoffice/DocumentServer/data/certs/tls.key\n```\n\nYou are now just one step away from having our application secured.\n\n#### Available Configuration Parameters\n\n*Please refer the docker run command options for the `--env-file` flag where you can specify all required environment variables in a single file. This will save you from writing a potentially long docker run command.*\n\nBelow is the complete list of parameters that can be set using environment variables.\n\n- **ONLYOFFICE_HTTPS_HSTS_ENABLED**: Advanced configuration option for turning off the HSTS configuration. Applicable only when SSL is in use. Defaults to `true`.\n- **ONLYOFFICE_HTTPS_HSTS_MAXAGE**: Advanced configuration option for setting the HSTS max-age in the onlyoffice nginx vHost configuration. Applicable only when SSL is in use. Defaults to `31536000`.\n- **SSL_CERTIFICATE_PATH**: The path to the SSL certificate to use. Defaults to `/var/www/onlyoffice/Data/certs/tls.crt`.\n- **SSL_KEY_PATH**: The path to the SSL certificate's private key. Defaults to `/var/www/onlyoffice/Data/certs/tls.key`.\n- **SSL_DHPARAM_PATH**: The path to the Diffie-Hellman parameter. Defaults to `/var/www/onlyoffice/Data/certs/dhparam.pem`.\n- **SSL_VERIFY_CLIENT**: Enable verification of client certificates using the `CA_CERTIFICATES_PATH` file. Defaults to `false`\n- **NODE_EXTRA_CA_CERTS**: The [NODE_EXTRA_CA_CERTS](https://nodejs.org/api/cli.html#node_extra_ca_certsfile \"Node.js documentation\") to extend CAs with the extra certificates for Node.js. Defaults to `/var/www/onlyoffice/Data/certs/extra-ca-certs.pem`.\n- **DB_TYPE**: The database type. Supported values are `postgres`, `mariadb`, `mysql`, `mssql` or `oracle`. Defaults to `postgres`.\n- **DB_HOST**: The IP address or the name of the host where the database server is running.\n- **DB_PORT**: The database server port number.\n- **DB_NAME**: The name of a database to use. Should be existing on container startup.\n- **DB_USER**: The new user name with superuser permissions for the database account.\n- **DB_PWD**: The password set for the database account.\n- **AMQP_URI**: The [AMQP URI](https://www.rabbitmq.com/uri-spec.html \"RabbitMQ URI Specification\") to connect to message broker server.\n- **AMQP_TYPE**: The message broker type. Supported values are `rabbitmq` or `activemq`. Defaults to `rabbitmq`.\n- **REDIS_SERVER_HOST**: The IP address or the name of the host where the Redis server is running.\n- **REDIS_SERVER_PORT**:  The Redis server port number.\n- **REDIS_SERVER_PASS**: The Redis server password. The password is not set by default.\n- **NGINX_WORKER_PROCESSES**: Defines the number of nginx worker processes.\n- **NGINX_WORKER_CONNECTIONS**: Sets the maximum number of simultaneous connections that can be opened by a nginx worker process.\n- **SECURE_LINK_SECRET**: Defines secret for the nginx config directive [secure_link_md5](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5). Defaults to `random string`.\n- **JWT_ENABLED**: Specifies the enabling the JSON Web Token validation by the ONLYOFFICE Document Server. Defaults to `true`.\n- **JWT_SECRET**: Defines the secret key to validate the JSON Web Token in the request to the ONLYOFFICE Document Server. Defaults to random value.\n- **JWT_HEADER**: Defines the http header that will be used to send the JSON Web Token. Defaults to `Authorization`.\n- **JWT_IN_BODY**: Specifies the enabling the token validation in the request body to the ONLYOFFICE Document Server. Defaults to `false`.\n- **WOPI_ENABLED**: Specifies the enabling the wopi handlers. Defaults to `false`.\n- **ALLOW_META_IP_ADDRESS**: Defines if it is allowed to connect meta IP address or not. Defaults to `false`.\n- **ALLOW_PRIVATE_IP_ADDRESS**: Defines if it is allowed to connect private IP address or not. Defaults to `false`.\n- **USE_UNAUTHORIZED_STORAGE**: Set to `true`if using selfsigned certificates for your storage server e.g. Nextcloud. Defaults to `false`\n- **GENERATE_FONTS**: When 'true' regenerates fonts list and the fonts thumbnails etc. at each start. Defaults to `true`\n- **METRICS_ENABLED**: Specifies the enabling StatsD for ONLYOFFICE Document Server. Defaults to `false`.\n- **METRICS_HOST**: Defines StatsD listening host. Defaults to `localhost`.\n- **METRICS_PORT**: Defines StatsD listening port. Defaults to `8125`.\n- **METRICS_PREFIX**: Defines StatsD metrics prefix for backend services. Defaults to `ds.`.\n- **LETS_ENCRYPT_DOMAIN**: Defines the domain for Let's Encrypt certificate.\n- **LETS_ENCRYPT_MAIL**: Defines the domain administator mail address for Let's Encrypt certificate.\n- **PLUGINS_ENABLED**: Defines whether to enable default plugins. Defaults to `true`.\n\n## Installing ONLYOFFICE Document Server integrated with Community and Mail Servers\n\nONLYOFFICE Document Server is a part of ONLYOFFICE Community Edition that comprises also Community Server and Mail Server. To install them, follow these easy steps:\n\n**STEP 1**: Create the `onlyoffice` network.\n\n```bash\ndocker network create --driver bridge onlyoffice\n```\nThen launch containers on it using the 'docker run --net onlyoffice' option:\n\n**STEP 2**: Install MySQL.\n\nFollow [these steps](#installing-mysql) to install MySQL server.\n\n**STEP 3**: Generate JWT Secret\n\nJWT secret defines the secret key to validate the JSON Web Token in the request to the **ONLYOFFICE Document Server**. You can specify it yourself or easily get it using the command:\n```\nJWT_SECRET=$(cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 12);\n```\n\n**STEP 4**: Install ONLYOFFICE Document Server.\n\n```bash\nsudo docker run --net onlyoffice -i -t -d --restart=always --name onlyoffice-document-server \\\n -e JWT_ENABLED=true \\\n -e JWT_SECRET=${JWT_SECRET} \\\n -e JWT_HEADER=AuthorizationJwt \\\n -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \\\n -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  \\\n -v /app/onlyoffice/DocumentServer/lib:/var/lib/onlyoffice \\\n -v /app/onlyoffice/DocumentServer/db:/var/lib/postgresql \\\n onlyoffice/documentserver\n```\n\n**STEP 5**: Install ONLYOFFICE Mail Server. \n\nFor the mail server correct work you need to specify its hostname 'yourdomain.com'.\n\n```bash\nsudo docker run --init --net onlyoffice --privileged -i -t -d --restart=always --name onlyoffice-mail-server -p 25:25 -p 143:143 -p 587:587 \\\n -e MYSQL_SERVER=onlyoffice-mysql-server \\\n -e MYSQL_SERVER_PORT=3306 \\\n -e MYSQL_ROOT_USER=root \\\n -e MYSQL_ROOT_PASSWD=my-secret-pw \\\n -e MYSQL_SERVER_DB_NAME=onlyoffice_mailserver \\\n -v /app/onlyoffice/MailServer/data:/var/vmail \\\n -v /app/onlyoffice/MailServer/data/certs:/etc/pki/tls/mailserver \\\n -v /app/onlyoffice/MailServer/logs:/var/log \\\n -h yourdomain.com \\\n onlyoffice/mailserver\n```\n\nThe additional parameters for mail server are available [here](https://github.com/ONLYOFFICE/Docker-CommunityServer/blob/master/docker-compose.workspace_enterprise.yml#L87).\n\nTo learn more, refer to the [ONLYOFFICE Mail Server documentation](https://github.com/ONLYOFFICE/Docker-MailServer \"ONLYOFFICE Mail Server documentation\").\n\n**STEP 6**: Install ONLYOFFICE Community Server\n\n```bash\nsudo docker run --net onlyoffice -i -t -d --privileged --restart=always --name onlyoffice-community-server -p 80:80 -p 443:443 -p 5222:5222 --cgroupns=host \\\n -e MYSQL_SERVER_ROOT_PASSWORD=my-secret-pw \\\n -e MYSQL_SERVER_DB_NAME=onlyoffice \\\n -e MYSQL_SERVER_HOST=onlyoffice-mysql-server \\\n -e MYSQL_SERVER_USER=onlyoffice_user \\\n -e MYSQL_SERVER_PASS=onlyoffice_pass \\\n \n -e DOCUMENT_SERVER_PORT_80_TCP_ADDR=onlyoffice-document-server \\\n -e DOCUMENT_SERVER_JWT_ENABLED=true \\\n -e DOCUMENT_SERVER_JWT_SECRET=${JWT_SECRET} \\\n -e DOCUMENT_SERVER_JWT_HEADER=AuthorizationJwt \\\n \n -e MAIL_SERVER_API_HOST=${MAIL_SERVER_IP} \\\n -e MAIL_SERVER_DB_HOST=onlyoffice-mysql-server \\\n -e MAIL_SERVER_DB_NAME=onlyoffice_mailserver \\\n -e MAIL_SERVER_DB_PORT=3306 \\\n -e MAIL_SERVER_DB_USER=root \\\n -e MAIL_SERVER_DB_PASS=my-secret-pw \\\n \n -v /app/onlyoffice/CommunityServer/data:/var/www/onlyoffice/Data \\\n -v /app/onlyoffice/CommunityServer/logs:/var/log/onlyoffice \\\n -v /app/onlyoffice/CommunityServer/letsencrypt:/etc/letsencrypt \\\n -v /sys/fs/cgroup:/sys/fs/cgroup:rw \\\n onlyoffice/communityserver\n```\n\nWhere `${MAIL_SERVER_IP}` is the IP address for **ONLYOFFICE Mail Server**. You can easily get it using the command:\n```\nMAIL_SERVER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' onlyoffice-mail-server)\n```\n\nAlternatively, you can use an automatic installation script to install the whole ONLYOFFICE Community Edition at once. For the mail server correct work you need to specify its hostname 'yourdomain.com'.\n\n**STEP 1**: Download the Community Edition Docker script file\n\n```bash\nwget https://download.onlyoffice.com/install/opensource-install.sh\n```\n\n**STEP 2**: Install ONLYOFFICE Community Edition executing the following command:\n\n```bash\nbash opensource-install.sh -md yourdomain.com\n```\n\nOr, use [docker-compose](https://docs.docker.com/compose/install \"docker-compose\"). For the mail server correct work you need to specify its hostname 'yourdomain.com'. Assuming you have docker-compose installed, execute the following command:\n\n```bash\nwget https://raw.githubusercontent.com/ONLYOFFICE/Docker-CommunityServer/master/docker-compose.groups.yml\ndocker-compose up -d\n```\n\n## ONLYOFFICE Document Server ipv6 setup\n\n(Works and is supported only for Linux hosts)\n\nDocker does not currently provide ipv6 addresses to containers by default. This function is experimental now.\n\nTo set up interaction via ipv6, you need to enable support for this feature in your Docker. For this you need:\n- create the `/etc/docker/daemon.json` file with the following content:\n\n```\n{\n\"ipv6\": true,\n\"fixed-cidr-v6\": \"2001:db8:abc1::/64\"\n}\n```\n- restart docker with the following command: `systemctl restart docker`\n\nAfter that, all running containers receive an ipv6 address and have an inet6 interface.\n\nYou can check your default bridge network and see the field there\n`EnableIPv6=true`. A new ipv6 subnet will also be added.\n\nFor more information, visit the official [Docker manual site](https://docs.docker.com/config/daemon/ipv6/)\n\n## Issues\n\n### Docker Issues\n\nAs a relatively new project Docker is being worked on and actively developed by its community. So it's recommended to use the latest version of Docker, because the issues that you encounter might have already been fixed with a newer Docker release.\n\nThe known Docker issue with ONLYOFFICE Document Server with rpm-based distributives is that sometimes the processes fail to start inside Docker container. Fedora and RHEL/CentOS users should try disabling selinux with setenforce 0. If it fixes the issue then you can either stick with SELinux disabled which is not recommended by RedHat, or switch to using Ubuntu.\n\n### Document Server usage issues\n\nDue to the operational characteristic, **Document Server** saves a document only after the document has been closed by all the users who edited it. To avoid data loss, you must forcefully disconnect the **Document Server** users when you need to stop **Document Server** in cases of the application update, server reboot etc. To do that, execute the following script on the server where **Document Server** is installed:\n\n```\nsudo docker exec <CONTAINER> documentserver-prepare4shutdown.sh\n```\n\nPlease note, that both executing the script and disconnecting users may take a long time (up to 5 minutes).\n\n## Project Information\n\nOfficial website: [https://www.onlyoffice.com](https://www.onlyoffice.com/?utm_source=github&utm_medium=cpc&utm_campaign=GitHubDockerDS)\n\nCode repository: [https://github.com/ONLYOFFICE/DocumentServer](https://github.com/ONLYOFFICE/DocumentServer \"https://github.com/ONLYOFFICE/DocumentServer\")\n\nDocker Image: [https://github.com/ONLYOFFICE/Docker-DocumentServer](https://github.com/ONLYOFFICE/Docker-DocumentServer \"https://github.com/ONLYOFFICE/Docker-DocumentServer\")\n\nLicense: [GNU AGPL v3.0](https://help.onlyoffice.com/products/files/doceditor.aspx?fileid=4358397&doc=K0ZUdlVuQzQ0RFhhMzhZRVN4ZFIvaHlhUjN2eS9XMXpKR1M5WEppUk1Gcz0_IjQzNTgzOTci0 \"GNU AGPL v3.0\")\n\nFree version vs commercial builds comparison: https://github.com/ONLYOFFICE/DocumentServer#onlyoffice-document-server-editions\n\nSaaS version: [https://www.onlyoffice.com/cloud-office.aspx](https://www.onlyoffice.com/cloud-office.aspx?utm_source=github&utm_medium=cpc&utm_campaign=GitHubDockerDS)\n\n## User Feedback and Support\n\nIf you have any problems with or questions about this image, please visit our official forum to find answers to your questions: [forum.onlyoffice.com][1] or you can ask and answer ONLYOFFICE development questions on [Stack Overflow][2].\n\n  [1]: https://forum.onlyoffice.com\n  [2]: https://stackoverflow.com/questions/tagged/onlyoffice\n"
        },
        {
          "name": "cluster.yml",
          "type": "blob",
          "size": 2.9052734375,
          "content": "version: '2.1'\n\nx-ds-image:\n  &ds-image\n  ${COMPANY_NAME:-onlyoffice}/${PRODUCT_NAME:-documentserver-de}:${PRODUCT_VERSION:-latest}\n\nservices:\n  onlyoffice-documentserver-data:  \n    container_name: onlyoffice-documentserver-data\n    image: *ds-image\n    environment:\n      - ONLYOFFICE_DATA_CONTAINER=true\n      - DB_HOST=onlyoffice-postgresql\n      - DB_PORT=5432\n      - DB_NAME=onlyoffice\n      - DB_USER=onlyoffice\n      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq\n      - REDIS_SERVER_HOST=onlyoffice-redis\n      - REDIS_SERVER_PORT=6379\n      # Uncomment strings below to enable the JSON Web Token validation.\n      #- JWT_ENABLED=true\n      #- JWT_SECRET=secret\n      #- JWT_HEADER=Authorization\n      #- JWT_IN_BODY=true\n    stdin_open: true\n    restart: always\n    volumes:\n       - /etc/onlyoffice\n       - /var/www/onlyoffice/Data\n       - /var/log/onlyoffice\n       - /var/lib/onlyoffice/documentserver/App_Data/cache/files\n       - /var/www/onlyoffice/documentserver-example/public/files\n       - /usr/share/fonts\n       \n  onlyoffice-documentserver:\n    image: *ds-image\n    depends_on:\n      - onlyoffice-documentserver-data\n      - onlyoffice-postgresql\n      - onlyoffice-redis\n      - onlyoffice-rabbitmq\n    environment:\n      - ONLYOFFICE_DATA_CONTAINER_HOST=onlyoffice-documentserver-data\n      - BALANCE=uri depth 3\n      - EXCLUDE_PORTS=443\n      - HTTP_CHECK=GET /healthcheck\n      - EXTRA_SETTINGS=http-check expect string true\n      # Uncomment the string below to redirect HTTP request to HTTPS request.\n      #- FORCE_SSL=true\n    stdin_open: true\n    restart: always\n    expose:\n      - '80'\n    volumes_from:\n     - onlyoffice-documentserver-data\n\n  onlyoffice-haproxy:\n    container_name: onlyoffice-haproxy\n    image: dockercloud/haproxy:1.5.1\n    depends_on:\n      - onlyoffice-documentserver\n    environment:\n      - MODE=http\n      # Uncomment the string below to specify the path of ssl certificates\n      #- CERT_FOLDER=/certs/\n    stdin_open: true\n    links:\n     - onlyoffice-documentserver\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      # Uncomment the string below to map a ssl certificate from host\n      # to the proxy container\n      #- /app/onlyoffice/DocumentServer/data/certs/onlyoffice.pem:/certs/cert1.pem\n    restart: always\n    ports:\n      - '80:80'\n      - '443:443'\n      - '1936:1936'\n       \n  onlyoffice-redis:\n    container_name: onlyoffice-redis\n    image: redis\n    restart: always\n    expose:\n      - '6379'\n\n  onlyoffice-rabbitmq:\n    container_name: onlyoffice-rabbitmq\n    image: rabbitmq\n    restart: always\n    expose:\n      - '5672'\n\n  onlyoffice-postgresql:\n    container_name: onlyoffice-postgresql\n    image: postgres:9.5\n    environment:\n      - POSTGRES_DB=onlyoffice\n      - POSTGRES_USER=onlyoffice\n      - POSTGRES_HOST_AUTH_METHOD=trust\n    restart: always\n    expose:\n      - '5432'\n    volumes:\n      - postgresql_data:/var/lib/postgresql\n\nvolumes:\n  postgresql_data:\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-bake.hcl",
          "type": "blob",
          "size": 4.74609375,
          "content": "variable \"TAG\" {\n    default = \"\"\n}\n\nvariable \"SHORTER_TAG\" {\n    default = \"\"\n}\n\nvariable \"SHORTEST_TAG\" {\n    default = \"\"\n}\n\nvariable \"PULL_TAG\" {\n    default = \"\"\n}\n\nvariable \"COMPANY_NAME\" {\n    default = \"\"\n}\n\nvariable \"PREFIX_NAME\" {\n    default = \"\"\n}\n\nvariable \"PRODUCT_EDITION\" {\n    default = \"\"\n}\n\nvariable \"PRODUCT_NAME\" {\n    default = \"\"\n}\n\nvariable \"PACKAGE_VERSION\" {\n    default = \"\"\n}\n\nvariable \"DOCKERFILE\" {\n    default = \"\"\n}\n\nvariable \"PLATFORM\" {\n    default = \"\"\n}\n\nvariable \"PACKAGE_BASEURL\" {\n    default = \"\"\n}\n\nvariable \"PACKAGE_FILE\" {\n    default = \"\"\n}\n\nvariable \"BUILD_CHANNEL\" {\n    default = \"\"\n}\n\nvariable \"PUSH_MAJOR\" {\n    default = \"false\"\n}\n\nvariable \"LATEST\" {\n    default = \"false\"\n}\n\n### ↓ Variables for UCS build ↓\n\nvariable \"BASE_VERSION\" {\n    default     = \"\"\n}\n\nvariable \"PG_VERSION\" {\n    default     = \"\"\n}\n\nvariable \"UCS_REBUILD\" {\n    default = \"\"\n}\n\nvariable \"UCS_PREFIX\" {\n    default = \"\"\n}\n\n### ↑ Variables for UCS build ↑\n\ntarget \"documentserver\" {\n    target = \"documentserver\"\n    dockerfile = \"${DOCKERFILE}\"\n    tags = [\n           \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${TAG}\",\n           equal(\"nightly\",BUILD_CHANNEL) ? \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:latest\": \"\",\n           ]\n    platforms = [\"${PLATFORM}\"]\n    args = {\n        \"COMPANY_NAME\": \"${COMPANY_NAME}\"\n        \"PRODUCT_NAME\": \"${PRODUCT_NAME}\"\n        \"PRODUCT_EDITION\": \"${PRODUCT_EDITION}\"\n        \"PACKAGE_VERSION\": \"${PACKAGE_VERSION}\"\n        \"PACKAGE_BASEURL\": \"${PACKAGE_BASEURL}\"\n        \"PLATFORM\": \"${PLATFORM}\"\n    }\n}\n\ntarget \"documentserver-stable\" {\n    target = \"documentserver-stable\"\n    dockerfile = \"production.dockerfile\"\n    tags = [\"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${TAG}\",\n            \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${SHORTER_TAG}\",\n            \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${SHORTEST_TAG}\",\n            \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:latest\",\n            equal(\"-ee\",PRODUCT_EDITION) ? \"docker.io/${COMPANY_NAME}4enterprise/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${TAG}\": \"\",]\n    platforms = [\"linux/amd64\", \"linux/arm64\"]\n    args = {\n        \"PULL_TAG\": \"${PULL_TAG}\"\n        \"COMPANY_NAME\": \"${COMPANY_NAME}\"\n        \"PRODUCT_NAME\": \"${PRODUCT_NAME}\"\n        \"PRODUCT_EDITION\": \"${PRODUCT_EDITION}\"\n    }\n}\n\ntarget \"documentserver-ucs\" {\n    target = \"documentserver\"\n    dockerfile = \"${DOCKERFILE}\"\n    tags = [\n           \"docker.io/${COMPANY_NAME}/${PRODUCT_NAME}${PRODUCT_EDITION}-ucs:${TAG}\"\n           ]\n    platforms = [\"linux/amd64\", \"linux/arm64\"]\n    args = {\n        \"PRODUCT_EDITION\": \"${PRODUCT_EDITION}\"\n        \"PRODUCT_NAME\": \"${PRODUCT_NAME}\"\n        \"COMPANY_NAME\": \"${COMPANY_NAME}\"\n        \"PACKAGE_VERSION\": \"${PACKAGE_VERSION}\"\n        \"PACKAGE_BASEURL\": \"${PACKAGE_BASEURL}\"\n        \"BASE_VERSION\": \"${BASE_VERSION}\"\n        \"PG_VERSION\": \"${PG_VERSION}\"\n    }\n}\n\ntarget \"documentserver-nonexample\" {\n    target = \"documentserver-nonexample\"\n    dockerfile = \"production.dockerfile\"\n    tags = [ \"docker.io/${COMPANY_NAME}/${PRODUCT_NAME}${PREFIX_NAME}${PRODUCT_EDITION}:${TAG}-nonexample\" ]\n    platforms = [\"linux/amd64\", \"linux/arm64\"]\n    args = {\n        \"PULL_TAG\": \"${PULL_TAG}\"\n        \"COMPANY_NAME\": \"${COMPANY_NAME}\"\n        \"PRODUCT_NAME\": \"${PRODUCT_NAME}\"\n        \"PRODUCT_EDITION\": \"${PRODUCT_EDITION}\"\n    } \n}\n\ntarget \"documentserver-stable-rebuild\" {\n    target = \"documentserver-stable-rebuild\"\n    dockerfile = \"production.dockerfile\"\n    tags = equal(\"true\",UCS_REBUILD) ? [\"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}-ucs:${TAG}\",] : [\n                                        \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${TAG}\",\n                equal(\"\",PREFIX_NAME) ? \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${SHORTER_TAG}\": \"\",\n             equal(\"true\",PUSH_MAJOR) ? \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${SHORTEST_TAG}\": \"\",\n                equal(\"\",PREFIX_NAME) && equal(\"true\",LATEST) ? \"docker.io/${COMPANY_NAME}/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:latest\": \"\",\n         equal(\"-ee\",PRODUCT_EDITION) && equal(\"\",PREFIX_NAME) ? \"docker.io/${COMPANY_NAME}4enterprise/${PREFIX_NAME}${PRODUCT_NAME}${PRODUCT_EDITION}:${TAG}\": \"\",\n                                 ]\n    platforms = [\"linux/amd64\", \"linux/arm64\"]\n    args = {\n        \"UCS_PREFIX\": \"${UCS_PREFIX}\"\n        \"PULL_TAG\": \"${PULL_TAG}\"\n        \"COMPANY_NAME\": \"${COMPANY_NAME}\"\n        \"PRODUCT_NAME\": \"${PRODUCT_NAME}\"\n        \"PRODUCT_EDITION\": \"${PRODUCT_EDITION}\"\n    }\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.37890625,
          "content": "services:\n  onlyoffice-documentserver:\n    build:\n      context: .\n    container_name: onlyoffice-documentserver\n    depends_on:\n      - onlyoffice-postgresql\n      - onlyoffice-rabbitmq\n    environment:\n      - DB_TYPE=postgres\n      - DB_HOST=onlyoffice-postgresql\n      - DB_PORT=5432\n      - DB_NAME=onlyoffice\n      - DB_USER=onlyoffice\n      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq\n      # Uncomment strings below to enable the JSON Web Token validation.\n      #- JWT_ENABLED=true\n      #- JWT_SECRET=secret\n      #- JWT_HEADER=Authorization\n      #- JWT_IN_BODY=true\n    ports:\n      - '80:80'\n      - '443:443'\n    stdin_open: true\n    restart: always\n    stop_grace_period: 60s\n    volumes:\n       - /var/www/onlyoffice/Data\n       - /var/log/onlyoffice\n       - /var/lib/onlyoffice/documentserver/App_Data/cache/files\n       - /var/www/onlyoffice/documentserver-example/public/files\n       - /usr/share/fonts\n       \n  onlyoffice-rabbitmq:\n    container_name: onlyoffice-rabbitmq\n    image: rabbitmq\n    restart: always\n    expose:\n      - '5672'\n\n  onlyoffice-postgresql:\n    container_name: onlyoffice-postgresql\n    image: postgres:12\n    environment:\n      - POSTGRES_DB=onlyoffice\n      - POSTGRES_USER=onlyoffice\n      - POSTGRES_HOST_AUTH_METHOD=trust\n    restart: always\n    expose:\n      - '5432'\n    volumes:\n      - postgresql_data:/var/lib/postgresql\n\nvolumes:\n  postgresql_data:\n"
        },
        {
          "name": "oracle",
          "type": "tree",
          "content": null
        },
        {
          "name": "production.dockerfile",
          "type": "blob",
          "size": 1.109375,
          "content": "### Arguments avavlivable only for FROM instruction ### \nARG PULL_TAG=latest\nARG COMPANY_NAME=onlyoffice\nARG PRODUCT_EDITION=\n### Rebuild arguments\nARG UCS_PREFIX=\nARG IMAGE=${COMPANY_NAME}/documentserver${PRODUCT_EDITION}${UCS_PREFIX}:${PULL_TAG}\n\n### Build main-release ###\n\nFROM ${COMPANY_NAME}/4testing-documentserver${PRODUCT_EDITION}:${PULL_TAG} as documentserver-stable\n\n### Rebuild stable images with secure updates \nFROM ${IMAGE} as documentserver-stable-rebuild\nRUN    echo \"This is rebuild\" \\\n    && apt-get update -y \\\n    && apt-get upgrade -y\n\n### Build nonexample ###\n \nFROM ${COMPANY_NAME}/documentserver${PRODUCT_EDITION}:${PULL_TAG} as documentserver-nonexample\n\nARG COMPANY_NAME=onlyoffice\nARG PRODUCT_NAME=documentserver\nARG DS_SUPERVISOR_CONF=/etc/supervisor/conf.d/ds.conf\n\n### Remove all documentserver-example data ###\n\nRUN    rm -rf /var/www/$COMPANY_NAME/$PRODUCT_NAME-example \\\n    && rm -rf /etc/$COMPANY_NAME/$PRODUCT_NAME-example \\\n    && rm -f $DS_SUPERVISOR_CONF \\ \n    && rm -f /etc/nginx/includes/ds-example.conf \\\n    && ln -s /etc/$COMPANY_NAME/$PRODUCT_NAME/supervisor/ds.conf  $DS_SUPERVISOR_CONF \n"
        },
        {
          "name": "run-document-server.sh",
          "type": "blob",
          "size": 26.1513671875,
          "content": "#!/bin/bash\n\numask 0022\n\nstart_process() {\n  \"$@\" &\n  CHILD=$!; wait \"$CHILD\"; CHILD=\"\";\n}\n\nfunction clean_exit {\n  [[ -z \"$CHILD\" ]] || kill -s SIGTERM \"$CHILD\" 2>/dev/null\n  if [ ${ONLYOFFICE_DATA_CONTAINER} == \"false\" ] && \\\n  [ ${ONLYOFFICE_DATA_CONTAINER_HOST} == \"localhost\" ]; then\n    /usr/bin/documentserver-prepare4shutdown.sh\n  fi\n  exit\n}\n\ntrap clean_exit SIGTERM SIGQUIT SIGABRT SIGINT\n\n# Define '**' behavior explicitly\nshopt -s globstar\n\nAPP_DIR=\"/var/www/${COMPANY_NAME}/documentserver\"\nDATA_DIR=\"/var/www/${COMPANY_NAME}/Data\"\nPRIVATE_DATA_DIR=\"${DATA_DIR}/.private\"\nDS_RELEASE_DATE=\"${PRIVATE_DATA_DIR}/ds_release_date\"\nLOG_DIR=\"/var/log/${COMPANY_NAME}\"\nDS_LOG_DIR=\"${LOG_DIR}/documentserver\"\nLIB_DIR=\"/var/lib/${COMPANY_NAME}\"\nDS_LIB_DIR=\"${LIB_DIR}/documentserver\"\nCONF_DIR=\"/etc/${COMPANY_NAME}/documentserver\"\nSUPERVISOR_CONF_DIR=\"/etc/supervisor/conf.d\"\nIS_UPGRADE=\"false\"\nPLUGINS_ENABLED=${PLUGINS_ENABLED:-true}\n\nONLYOFFICE_DATA_CONTAINER=${ONLYOFFICE_DATA_CONTAINER:-false}\nONLYOFFICE_DATA_CONTAINER_HOST=${ONLYOFFICE_DATA_CONTAINER_HOST:-localhost}\nONLYOFFICE_DATA_CONTAINER_PORT=80\n\nRELEASE_DATE=\"$(stat -c=\"%y\" ${APP_DIR}/server/DocService/docservice | sed -r 's/=([0-9]+)-([0-9]+)-([0-9]+) ([0-9:.+ ]+)/\\1-\\2-\\3/')\";\nif [ -f ${DS_RELEASE_DATE} ]; then\n  PREV_RELEASE_DATE=$(head -n 1 ${DS_RELEASE_DATE})\nelse\n  PREV_RELEASE_DATE=\"0\"\nfi\n\nif [ \"${RELEASE_DATE}\" != \"${PREV_RELEASE_DATE}\" ]; then\n  if [ ${ONLYOFFICE_DATA_CONTAINER} != \"true\" ]; then\n    IS_UPGRADE=\"true\";\n  fi\nfi\n\nSSL_CERTIFICATES_DIR=\"/usr/share/ca-certificates/ds\"\nmkdir -p ${SSL_CERTIFICATES_DIR}\nif find \"${DATA_DIR}/certs\" -type f \\( -name \"*.crt\" -o -name \"*.pem\" \\) -print -quit >/dev/null 2>&1; then\n  cp -f ${DATA_DIR}/certs/* ${SSL_CERTIFICATES_DIR}\n  chmod 644 ${SSL_CERTIFICATES_DIR}/*.{crt,pem} 2>/dev/null\n  chmod 400 ${SSL_CERTIFICATES_DIR}/*.key 2>/dev/null\nfi\n\nif [[ -z $SSL_CERTIFICATE_PATH ]] && [[ -f ${SSL_CERTIFICATES_DIR}/${COMPANY_NAME}.crt ]]; then\n  SSL_CERTIFICATE_PATH=${SSL_CERTIFICATES_DIR}/${COMPANY_NAME}.crt\nelse\n  SSL_CERTIFICATE_PATH=${SSL_CERTIFICATE_PATH:-${SSL_CERTIFICATES_DIR}/tls.crt}\nfi\nif [[ -z $SSL_KEY_PATH ]] && [[ -f ${SSL_CERTIFICATES_DIR}/${COMPANY_NAME}.key ]]; then\n  SSL_KEY_PATH=${SSL_CERTIFICATES_DIR}/${COMPANY_NAME}.key\nelse\n  SSL_KEY_PATH=${SSL_KEY_PATH:-${SSL_CERTIFICATES_DIR}/tls.key}\nfi\n\n#When set, the well known \"root\" CAs will be extended with the extra certificates in file\nNODE_EXTRA_CA_CERTS=${NODE_EXTRA_CA_CERTS:-${SSL_CERTIFICATES_DIR}/extra-ca-certs.pem}\nif [[ -f ${NODE_EXTRA_CA_CERTS} ]]; then\n  NODE_EXTRA_ENVIRONMENT=\"${NODE_EXTRA_CA_CERTS}\"\nelif [[ -f ${SSL_CERTIFICATE_PATH} ]]; then\n  SSL_CERTIFICATE_SUBJECT=$(openssl x509 -subject -noout -in \"${SSL_CERTIFICATE_PATH}\" | sed 's/subject=//')\n  SSL_CERTIFICATE_ISSUER=$(openssl x509 -issuer -noout -in \"${SSL_CERTIFICATE_PATH}\" | sed 's/issuer=//')\n\n  #Add self-signed certificate to trusted list for validating Docs requests to the test example \n  if [[ -n $SSL_CERTIFICATE_SUBJECT && $SSL_CERTIFICATE_SUBJECT == $SSL_CERTIFICATE_ISSUER ]]; then\n    NODE_EXTRA_ENVIRONMENT=\"${SSL_CERTIFICATE_PATH}\"\n  fi\nfi\n\nif [[ -n $NODE_EXTRA_ENVIRONMENT ]]; then\n  sed -i \"s|^environment=.*$|&,NODE_EXTRA_CA_CERTS=${NODE_EXTRA_ENVIRONMENT}|\" /etc/supervisor/conf.d/*.conf\nfi\n\nCA_CERTIFICATES_PATH=${CA_CERTIFICATES_PATH:-${SSL_CERTIFICATES_DIR}/ca-certificates.pem}\nSSL_DHPARAM_PATH=${SSL_DHPARAM_PATH:-${SSL_CERTIFICATES_DIR}/dhparam.pem}\nSSL_VERIFY_CLIENT=${SSL_VERIFY_CLIENT:-off}\nUSE_UNAUTHORIZED_STORAGE=${USE_UNAUTHORIZED_STORAGE:-false}\nONLYOFFICE_HTTPS_HSTS_ENABLED=${ONLYOFFICE_HTTPS_HSTS_ENABLED:-true}\nONLYOFFICE_HTTPS_HSTS_MAXAGE=${ONLYOFFICE_HTTPS_HSTS_MAXAGE:-31536000}\nSYSCONF_TEMPLATES_DIR=\"/app/ds/setup/config\"\n\nNGINX_CONFD_PATH=\"/etc/nginx/conf.d\";\nNGINX_ONLYOFFICE_PATH=\"${CONF_DIR}/nginx\"\nNGINX_ONLYOFFICE_CONF=\"${NGINX_ONLYOFFICE_PATH}/ds.conf\"\nNGINX_ONLYOFFICE_EXAMPLE_PATH=\"${CONF_DIR}-example/nginx\"\nNGINX_ONLYOFFICE_EXAMPLE_CONF=\"${NGINX_ONLYOFFICE_EXAMPLE_PATH}/includes/ds-example.conf\"\n\nNGINX_CONFIG_PATH=\"/etc/nginx/nginx.conf\"\nNGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-1}\n# Limiting the maximum number of simultaneous connections due to possible memory shortage\nLIMIT=$(ulimit -n); [ $LIMIT -gt 1048576 ] && LIMIT=1048576\nNGINX_WORKER_CONNECTIONS=${NGINX_WORKER_CONNECTIONS:-$LIMIT}\nRABBIT_CONNECTIONS=${RABBIT_CONNECTIONS:-$LIMIT}\n\nJWT_ENABLED=${JWT_ENABLED:-true}\n\n# validate user's vars before usinig in json\nif [ \"${JWT_ENABLED}\" == \"true\" ]; then\n  JWT_ENABLED=\"true\"\nelse\n  JWT_ENABLED=\"false\"\nfi\n\n[ -z $JWT_SECRET ] && JWT_MESSAGE='JWT is enabled by default. A random secret is generated automatically. Run the command \"docker exec $(sudo docker ps -q) sudo documentserver-jwt-status.sh\" to get information about JWT.'\n\nJWT_SECRET=${JWT_SECRET:-$(pwgen -s 32)}\nJWT_HEADER=${JWT_HEADER:-Authorization}\nJWT_IN_BODY=${JWT_IN_BODY:-false}\n\nWOPI_ENABLED=${WOPI_ENABLED:-false}\nALLOW_META_IP_ADDRESS=${ALLOW_META_IP_ADDRESS:-false}\nALLOW_PRIVATE_IP_ADDRESS=${ALLOW_PRIVATE_IP_ADDRESS:-false}\n\nGENERATE_FONTS=${GENERATE_FONTS:-true}\n\nif [[ ${PRODUCT_NAME}${PRODUCT_EDITION} == \"documentserver\" ]]; then\n  REDIS_ENABLED=false\nelse\n  REDIS_ENABLED=true\nfi\n\nONLYOFFICE_DEFAULT_CONFIG=${CONF_DIR}/local.json\nONLYOFFICE_LOG4JS_CONFIG=${CONF_DIR}/log4js/production.json\nONLYOFFICE_EXAMPLE_CONFIG=${CONF_DIR}-example/local.json\n\nJSON_BIN=${APP_DIR}/npm/json\nJSON=\"${JSON_BIN} -q -f ${ONLYOFFICE_DEFAULT_CONFIG}\"\nJSON_LOG=\"${JSON_BIN} -q -f ${ONLYOFFICE_LOG4JS_CONFIG}\"\nJSON_EXAMPLE=\"${JSON_BIN} -q -f ${ONLYOFFICE_EXAMPLE_CONFIG}\"\n\nLOCAL_SERVICES=()\n\nPG_ROOT=/var/lib/postgresql\nPG_NAME=main\nPGDATA=${PG_ROOT}/${PG_VERSION}/${PG_NAME}\nPG_NEW_CLUSTER=false\nRABBITMQ_DATA=/var/lib/rabbitmq\nREDIS_DATA=/var/lib/redis\n\nif [ \"${LETS_ENCRYPT_DOMAIN}\" != \"\" -a \"${LETS_ENCRYPT_MAIL}\" != \"\" ]; then\n  LETSENCRYPT_ROOT_DIR=\"/etc/letsencrypt/live\"\n  SSL_CERTIFICATE_PATH=${LETSENCRYPT_ROOT_DIR}/${LETS_ENCRYPT_DOMAIN}/fullchain.pem\n  SSL_KEY_PATH=${LETSENCRYPT_ROOT_DIR}/${LETS_ENCRYPT_DOMAIN}/privkey.pem\nfi\n\nread_setting(){\n  deprecated_var POSTGRESQL_SERVER_HOST DB_HOST\n  deprecated_var POSTGRESQL_SERVER_PORT DB_PORT\n  deprecated_var POSTGRESQL_SERVER_DB_NAME DB_NAME\n  deprecated_var POSTGRESQL_SERVER_USER DB_USER\n  deprecated_var POSTGRESQL_SERVER_PASS DB_PWD\n  deprecated_var RABBITMQ_SERVER_URL AMQP_URI\n  deprecated_var AMQP_SERVER_URL AMQP_URI\n  deprecated_var AMQP_SERVER_TYPE AMQP_TYPE\n\n  METRICS_ENABLED=\"${METRICS_ENABLED:-false}\"\n  METRICS_HOST=\"${METRICS_HOST:-localhost}\"\n  METRICS_PORT=\"${METRICS_PORT:-8125}\"\n  METRICS_PREFIX=\"${METRICS_PREFIX:-.ds}\"\n\n  DB_HOST=${DB_HOST:-${POSTGRESQL_SERVER_HOST:-$(${JSON} services.CoAuthoring.sql.dbHost)}}\n  DB_TYPE=${DB_TYPE:-$(${JSON} services.CoAuthoring.sql.type)}\n  case $DB_TYPE in\n    \"postgres\")\n      DB_PORT=${DB_PORT:-\"5432\"}\n      ;;\n    \"mariadb\"|\"mysql\")\n      DB_PORT=${DB_PORT:-\"3306\"}\n      ;;\n    \"dameng\")\n      DB_PORT=${DB_PORT:-\"5236\"}\n      ;;\n    \"mssql\")\n      DB_PORT=${DB_PORT:-\"1433\"}\n      ;;\n    \"oracle\")\n      DB_PORT=${DB_PORT:-\"1521\"}\n      ;;\n    \"\")\n      DB_PORT=${DB_PORT:-${POSTGRESQL_SERVER_PORT:-$(${JSON} services.CoAuthoring.sql.dbPort)}}\n      ;;\n    *)\n      echo \"ERROR: unknown database type\"\n      exit 1\n      ;;\n  esac\n  DB_NAME=${DB_NAME:-${POSTGRESQL_SERVER_DB_NAME:-$(${JSON} services.CoAuthoring.sql.dbName)}}\n  DB_USER=${DB_USER:-${POSTGRESQL_SERVER_USER:-$(${JSON} services.CoAuthoring.sql.dbUser)}}\n  DB_PWD=${DB_PWD:-${POSTGRESQL_SERVER_PASS:-$(${JSON} services.CoAuthoring.sql.dbPass)}}\n\n  RABBITMQ_SERVER_URL=${RABBITMQ_SERVER_URL:-$(${JSON} rabbitmq.url)}\n  AMQP_URI=${AMQP_URI:-${AMQP_SERVER_URL:-${RABBITMQ_SERVER_URL}}}\n  AMQP_TYPE=${AMQP_TYPE:-${AMQP_SERVER_TYPE:-rabbitmq}}\n  parse_rabbitmq_url ${AMQP_URI}\n\n  REDIS_SERVER_HOST=${REDIS_SERVER_HOST:-$(${JSON} services.CoAuthoring.redis.host)}\n  REDIS_SERVER_PORT=${REDIS_SERVER_PORT:-6379}\n\n  DS_LOG_LEVEL=${DS_LOG_LEVEL:-$(${JSON_LOG} categories.default.level)}\n}\n\ndeprecated_var() {\n  if [[ -n ${!1} ]]; then\n    echo \"Variable $1 is deprecated. Use $2 instead.\"\n  fi\n}\n\nparse_rabbitmq_url(){\n  local amqp=$1\n\n  # extract the protocol\n  local proto=\"$(echo $amqp | grep :// | sed -e's,^\\(.*://\\).*,\\1,g')\"\n  # remove the protocol\n  local url=\"$(echo ${amqp/$proto/})\"\n\n  # extract the user and password (if any)\n  local userpass=\"`echo $url | grep @ | cut -d@ -f1`\"\n  local pass=`echo $userpass | grep : | cut -d: -f2`\n\n  local user\n  if [ -n \"$pass\" ]; then\n    user=`echo $userpass | grep : | cut -d: -f1`\n  else\n    user=$userpass\n  fi\n\n  # extract the host\n  local hostport=\"$(echo ${url/$userpass@/} | cut -d/ -f1)\"\n  # by request - try to extract the port\n  local port=\"$(echo $hostport | grep : | sed -r 's_^.*:+|/.*$__g')\"\n\n  local host\n  if [ -n \"$port\" ]; then\n    host=`echo $hostport | grep : | cut -d: -f1`\n  else\n    host=$hostport\n    port=\"5672\"\n  fi\n\n  # extract the path (if any)\n  local path=\"$(echo $url | grep / | cut -d/ -f2-)\"\n\n  AMQP_SERVER_PROTO=${proto:0:-3}\n  AMQP_SERVER_HOST=$host\n  AMQP_SERVER_USER=$user\n  AMQP_SERVER_PASS=$pass\n  AMQP_SERVER_PORT=$port\n}\n\nwaiting_for_connection(){\n  until nc -z -w 3 \"$1\" \"$2\"; do\n    >&2 echo \"Waiting for connection to the $1 host on port $2\"\n    sleep 1\n  done\n}\n\nwaiting_for_db_ready(){\n  case $DB_TYPE in\n    \"oracle\")\n      PDB=\"XEPDB1\"\n      ORACLE_SQL=\"sqlplus $DB_USER/$DB_PWD@//$DB_HOST:$DB_PORT/$PDB\"\n      DB_TEST=\"echo \\\"SELECT version FROM V\\$INSTANCE;\\\" | $ORACLE_SQL 2>/dev/null | grep \\\"Connected\\\" | wc -l\"\n      ;;\n    *)\n      return\n      ;;\n  esac\n\n  for (( i=1; i <= 10; i++ )); do\n    RES=$(eval $DB_TEST)\n    if [ \"$RES\" -ne \"0\" ]; then\n      echo \"Database is ready\"\n      break\n    fi\n    sleep 5\n  done\n}\n\nwaiting_for_db(){\n  waiting_for_connection $DB_HOST $DB_PORT\n  waiting_for_db_ready\n}\n\nwaiting_for_amqp(){\n  waiting_for_connection ${AMQP_SERVER_HOST} ${AMQP_SERVER_PORT}\n}\n\nwaiting_for_redis(){\n  waiting_for_connection ${REDIS_SERVER_HOST} ${REDIS_SERVER_PORT}\n}\nwaiting_for_datacontainer(){\n  waiting_for_connection ${ONLYOFFICE_DATA_CONTAINER_HOST} ${ONLYOFFICE_DATA_CONTAINER_PORT}\n}\n\nupdate_statsd_settings(){\n  ${JSON} -I -e \"if(this.statsd===undefined)this.statsd={};\"\n  ${JSON} -I -e \"this.statsd.useMetrics = '${METRICS_ENABLED}'\"\n  ${JSON} -I -e \"this.statsd.host = '${METRICS_HOST}'\"\n  ${JSON} -I -e \"this.statsd.port = '${METRICS_PORT}'\"\n  ${JSON} -I -e \"this.statsd.prefix = '${METRICS_PREFIX}'\"\n  sed -i -E \"s/(autostart|autorestart)=.*$/\\1=${METRICS_ENABLED}/g\" ${SUPERVISOR_CONF_DIR}/ds-metrics.conf\n}\n\nupdate_db_settings(){\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.type = '${DB_TYPE}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.dbHost = '${DB_HOST}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.dbPort = '${DB_PORT}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.dbName = '${DB_NAME}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.dbUser = '${DB_USER}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.sql.dbPass = '${DB_PWD}'\"\n}\n\nupdate_rabbitmq_setting(){\n  if [ \"${AMQP_TYPE}\" == \"rabbitmq\" ]; then\n    ${JSON} -I -e \"if(this.queue===undefined)this.queue={};\"\n    ${JSON} -I -e \"this.queue.type = 'rabbitmq'\"\n    ${JSON} -I -e \"this.rabbitmq.url = '${AMQP_URI}'\"\n  fi\n  \n  if [ \"${AMQP_TYPE}\" == \"activemq\" ]; then\n    ${JSON} -I -e \"if(this.queue===undefined)this.queue={};\"\n    ${JSON} -I -e \"this.queue.type = 'activemq'\"\n    ${JSON} -I -e \"if(this.activemq===undefined)this.activemq={};\"\n    ${JSON} -I -e \"if(this.activemq.connectOptions===undefined)this.activemq.connectOptions={};\"\n\n    ${JSON} -I -e \"this.activemq.connectOptions.host = '${AMQP_SERVER_HOST}'\"\n\n    if [ ! \"${AMQP_SERVER_PORT}\" == \"\" ]; then\n      ${JSON} -I -e \"this.activemq.connectOptions.port = '${AMQP_SERVER_PORT}'\"\n    else\n      ${JSON} -I -e \"delete this.activemq.connectOptions.port\"\n    fi\n\n    if [ ! \"${AMQP_SERVER_USER}\" == \"\" ]; then\n      ${JSON} -I -e \"this.activemq.connectOptions.username = '${AMQP_SERVER_USER}'\"\n    else\n      ${JSON} -I -e \"delete this.activemq.connectOptions.username\"\n    fi\n\n    if [ ! \"${AMQP_SERVER_PASS}\" == \"\" ]; then\n      ${JSON} -I -e \"this.activemq.connectOptions.password = '${AMQP_SERVER_PASS}'\"\n    else\n      ${JSON} -I -e \"delete this.activemq.connectOptions.password\"\n    fi\n\n    case \"${AMQP_SERVER_PROTO}\" in\n      amqp+ssl|amqps)\n        ${JSON} -I -e \"this.activemq.connectOptions.transport = 'tls'\"\n        ;;\n      *)\n        ${JSON} -I -e \"delete this.activemq.connectOptions.transport\"\n        ;;\n    esac \n  fi\n}\n\nupdate_redis_settings(){\n  ${JSON} -I -e \"if(this.services.CoAuthoring.redis===undefined)this.services.CoAuthoring.redis={};\"\n  ${JSON} -I -e \"this.services.CoAuthoring.redis.host = '${REDIS_SERVER_HOST}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.redis.port = '${REDIS_SERVER_PORT}'\"\n\n  if [ -n \"${REDIS_SERVER_PASS}\" ]; then\n    ${JSON} -I -e \"this.services.CoAuthoring.redis.options = {'password':'${REDIS_SERVER_PASS}'}\"\n  fi\n\n}\n\nupdate_ds_settings(){\n  ${JSON} -I -e \"this.services.CoAuthoring.token.enable.browser = ${JWT_ENABLED}\"\n  ${JSON} -I -e \"this.services.CoAuthoring.token.enable.request.inbox = ${JWT_ENABLED}\"\n  ${JSON} -I -e \"this.services.CoAuthoring.token.enable.request.outbox = ${JWT_ENABLED}\"\n\n  ${JSON} -I -e \"this.services.CoAuthoring.secret.inbox.string = '${JWT_SECRET}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.secret.outbox.string = '${JWT_SECRET}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.secret.session.string = '${JWT_SECRET}'\"\n\n  ${JSON} -I -e \"this.services.CoAuthoring.token.inbox.header = '${JWT_HEADER}'\"\n  ${JSON} -I -e \"this.services.CoAuthoring.token.outbox.header = '${JWT_HEADER}'\"\n\n  ${JSON} -I -e \"this.services.CoAuthoring.token.inbox.inBody = ${JWT_IN_BODY}\"\n  ${JSON} -I -e \"this.services.CoAuthoring.token.outbox.inBody = ${JWT_IN_BODY}\"\n\n  if [ -f \"${ONLYOFFICE_EXAMPLE_CONFIG}\" ]; then\n    ${JSON_EXAMPLE} -I -e \"this.server.token.enable = ${JWT_ENABLED}\"\n    ${JSON_EXAMPLE} -I -e \"this.server.token.secret = '${JWT_SECRET}'\"\n    ${JSON_EXAMPLE} -I -e \"this.server.token.authorizationHeader = '${JWT_HEADER}'\"\n  fi\n \n  if [ \"${USE_UNAUTHORIZED_STORAGE}\" == \"true\" ]; then\n    ${JSON} -I -e \"if(this.services.CoAuthoring.requestDefaults===undefined)this.services.CoAuthoring.requestDefaults={}\"\n    ${JSON} -I -e \"if(this.services.CoAuthoring.requestDefaults.rejectUnauthorized===undefined)this.services.CoAuthoring.requestDefaults.rejectUnauthorized=false\"\n  fi\n\n  WOPI_PRIVATE_KEY=\"${DATA_DIR}/wopi_private.key\"\n  WOPI_PUBLIC_KEY=\"${DATA_DIR}/wopi_public.key\"\n\n  [ ! -f \"${WOPI_PRIVATE_KEY}\" ] && echo -n \"Generating WOPI private key...\" && openssl genpkey -algorithm RSA -outform PEM -out \"${WOPI_PRIVATE_KEY}\" >/dev/null 2>&1 && echo \"Done\"\n  [ ! -f \"${WOPI_PUBLIC_KEY}\" ] && echo -n \"Generating WOPI public key...\" && openssl rsa -RSAPublicKey_out -in \"${WOPI_PRIVATE_KEY}\" -outform \"MS PUBLICKEYBLOB\" -out \"${WOPI_PUBLIC_KEY}\" >/dev/null 2>&1  && echo \"Done\"\n  WOPI_MODULUS=$(openssl rsa -pubin -inform \"MS PUBLICKEYBLOB\" -modulus -noout -in \"${WOPI_PUBLIC_KEY}\" | sed 's/Modulus=//' | xxd -r -p | openssl base64 -A)\n  WOPI_EXPONENT=$(openssl rsa -pubin -inform \"MS PUBLICKEYBLOB\" -text -noout -in \"${WOPI_PUBLIC_KEY}\" | grep -oP '(?<=Exponent: )\\d+')\n  \n  ${JSON} -I -e \"if(this.wopi===undefined)this.wopi={};\"\n  ${JSON} -I -e \"this.wopi.enable = ${WOPI_ENABLED}\"\n  ${JSON} -I -e \"this.wopi.privateKey = '$(awk '{printf \"%s\\\\n\", $0}' ${WOPI_PRIVATE_KEY})'\"\n  ${JSON} -I -e \"this.wopi.privateKeyOld = '$(awk '{printf \"%s\\\\n\", $0}' ${WOPI_PRIVATE_KEY})'\"\n  ${JSON} -I -e \"this.wopi.publicKey = '$(openssl base64 -in ${WOPI_PUBLIC_KEY} -A)'\"\n  ${JSON} -I -e \"this.wopi.publicKeyOld = '$(openssl base64 -in ${WOPI_PUBLIC_KEY} -A)'\"\n  ${JSON} -I -e \"this.wopi.modulus = '${WOPI_MODULUS}'\"\n  ${JSON} -I -e \"this.wopi.modulusOld = '${WOPI_MODULUS}'\"\n  ${JSON} -I -e \"this.wopi.exponent = ${WOPI_EXPONENT}\"\n  ${JSON} -I -e \"this.wopi.exponentOld = ${WOPI_EXPONENT}\"\n\n  if [ \"${ALLOW_META_IP_ADDRESS}\" = \"true\" ] || [ \"${ALLOW_PRIVATE_IP_ADDRESS}\" = \"true\" ]; then\n    ${JSON} -I -e \"if(this.services.CoAuthoring['request-filtering-agent']===undefined)this.services.CoAuthoring['request-filtering-agent']={}\"\n    [ \"${ALLOW_META_IP_ADDRESS}\" = \"true\" ] && ${JSON} -I -e \"this.services.CoAuthoring['request-filtering-agent'].allowMetaIPAddress = true\"\n    [ \"${ALLOW_PRIVATE_IP_ADDRESS}\" = \"true\" ] && ${JSON} -I -e \"this.services.CoAuthoring['request-filtering-agent'].allowPrivateIPAddress = true\"\n  fi\n}\n\ncreate_postgresql_cluster(){\n  local pg_conf_dir=/etc/postgresql/${PG_VERSION}/${PG_NAME}\n  local postgresql_conf=$pg_conf_dir/postgresql.conf\n  local hba_conf=$pg_conf_dir/pg_hba.conf\n\n  mv $postgresql_conf $postgresql_conf.backup\n  mv $hba_conf $hba_conf.backup\n\n  pg_createcluster ${PG_VERSION} ${PG_NAME}\n}\n\ncreate_postgresql_db(){\n  sudo -u postgres psql -c \"CREATE USER $DB_USER WITH password '\"$DB_PWD\"';\"\n  sudo -u postgres psql -c \"CREATE DATABASE $DB_NAME OWNER $DB_USER;\"\n}\n\ncreate_mssql_db(){\n  MSSQL=\"/opt/mssql-tools18/bin/sqlcmd -S $DB_HOST,$DB_PORT\"\n\n  $MSSQL -U $DB_USER -P \"$DB_PWD\" -C -Q \"IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = '$DB_NAME') BEGIN CREATE DATABASE $DB_NAME; END\"\n}\n\ncreate_db_tbl() {\n  case $DB_TYPE in\n    \"postgres\")\n      create_postgresql_tbl\n    ;;\n    \"mariadb\"|\"mysql\")\n      create_mysql_tbl\n    ;;\n    \"mssql\")\n      create_mssql_tbl\n    ;;\n    \"oracle\")\n      create_oracle_tbl\n    ;;\n  esac\n}\n\nupgrade_db_tbl() {\n  case $DB_TYPE in\n    \"postgres\")\n      upgrade_postgresql_tbl\n    ;;\n    \"mariadb\"|\"mysql\")\n      upgrade_mysql_tbl\n    ;;\n    \"mssql\")\n      upgrade_mssql_tbl\n    ;;\n    \"oracle\")\n      upgrade_oracle_tbl\n    ;;\n  esac\n}\n\nupgrade_postgresql_tbl() {\n  if [ -n \"$DB_PWD\" ]; then\n    export PGPASSWORD=$DB_PWD\n  fi\n\n  PSQL=\"psql -q -h$DB_HOST -p$DB_PORT -d$DB_NAME -U$DB_USER -w\"\n\n  $PSQL -f \"$APP_DIR/server/schema/postgresql/removetbl.sql\"\n  $PSQL -f \"$APP_DIR/server/schema/postgresql/createdb.sql\"\n}\n\nupgrade_mysql_tbl() {\n  CONNECTION_PARAMS=\"-h$DB_HOST -P$DB_PORT -u$DB_USER -p$DB_PWD -w\"\n  MYSQL=\"mysql -q $CONNECTION_PARAMS\"\n\n  $MYSQL $DB_NAME < \"$APP_DIR/server/schema/mysql/removetbl.sql\" >/dev/null 2>&1\n  $MYSQL $DB_NAME < \"$APP_DIR/server/schema/mysql/createdb.sql\" >/dev/null 2>&1\n}\n\nupgrade_mssql_tbl() {\n  CONN_PARAMS=\"-U $DB_USER -P \"$DB_PWD\" -C\"\n  MSSQL=\"/opt/mssql-tools18/bin/sqlcmd -S $DB_HOST,$DB_PORT $CONN_PARAMS\"\n\n  $MSSQL < \"$APP_DIR/server/schema/mssql/removetbl.sql\" >/dev/null 2>&1\n  $MSSQL < \"$APP_DIR/server/schema/mssql/createdb.sql\" >/dev/null 2>&1\n}\n\nupgrade_oracle_tbl() {\n  PDB=\"XEPDB1\"\n  ORACLE_SQL=\"sqlplus $DB_USER/$DB_PWD@//$DB_HOST:$DB_PORT/$PDB\"\n\n  $ORACLE_SQL @$APP_DIR/server/schema/oracle/removetbl.sql >/dev/null 2>&1\n  $ORACLE_SQL @$APP_DIR/server/schema/oracle/createdb.sql >/dev/null 2>&1\n}\n\ncreate_postgresql_tbl() {\n  if [ -n \"$DB_PWD\" ]; then\n    export PGPASSWORD=$DB_PWD\n  fi\n\n  PSQL=\"psql -q -h$DB_HOST -p$DB_PORT -d$DB_NAME -U$DB_USER -w\"\n  $PSQL -f \"$APP_DIR/server/schema/postgresql/createdb.sql\"\n}\n\ncreate_mysql_tbl() {\n  CONNECTION_PARAMS=\"-h$DB_HOST -P$DB_PORT -u$DB_USER -p$DB_PWD -w\"\n  MYSQL=\"mysql -q $CONNECTION_PARAMS\"\n\n  # Create db on remote server\n  $MYSQL -e \"CREATE DATABASE IF NOT EXISTS $DB_NAME DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;\" >/dev/null 2>&1\n\n  $MYSQL $DB_NAME < \"$APP_DIR/server/schema/mysql/createdb.sql\" >/dev/null 2>&1\n}\n\ncreate_mssql_tbl() {  \n  create_mssql_db\n\n  CONN_PARAMS=\"-U $DB_USER -P \"$DB_PWD\" -C\"\n  MSSQL=\"/opt/mssql-tools18/bin/sqlcmd -S $DB_HOST,$DB_PORT $CONN_PARAMS\"\n\n  $MSSQL < \"$APP_DIR/server/schema/mssql/createdb.sql\" >/dev/null 2>&1\n}\n\ncreate_oracle_tbl() {\n  PDB=\"XEPDB1\"\n  ORACLE_SQL=\"sqlplus $DB_USER/$DB_PWD@//$DB_HOST:$DB_PORT/$PDB\"\n\n  $ORACLE_SQL @$APP_DIR/server/schema/oracle/createdb.sql >/dev/null 2>&1\n}\n\nupdate_welcome_page() {\n  WELCOME_PAGE=\"${APP_DIR}-example/welcome/docker.html\"\n  if [[ -e $WELCOME_PAGE ]]; then\n    DOCKER_CONTAINER_ID=$(basename $(cat /proc/1/cpuset))\n    (( ${#DOCKER_CONTAINER_ID} < 12 )) && DOCKER_CONTAINER_ID=$(hostname)\n    if (( ${#DOCKER_CONTAINER_ID} >= 12 )); then\n      if [[ -x $(command -v docker) ]]; then\n        DOCKER_CONTAINER_NAME=$(docker inspect --format=\"{{.Name}}\" $DOCKER_CONTAINER_ID)\n        sed 's/$(sudo docker ps -q)/'\"${DOCKER_CONTAINER_NAME#/}\"'/' -i $WELCOME_PAGE\n        JWT_MESSAGE=$(echo $JWT_MESSAGE | sed 's/$(sudo docker ps -q)/'\"${DOCKER_CONTAINER_NAME#/}\"'/')\n      else\n        sed 's/$(sudo docker ps -q)/'\"${DOCKER_CONTAINER_ID::12}\"'/' -i $WELCOME_PAGE\n        JWT_MESSAGE=$(echo $JWT_MESSAGE | sed 's/$(sudo docker ps -q)/'\"${DOCKER_CONTAINER_ID::12}\"'/')\n      fi\n    fi\n  fi\n}\n\nupdate_nginx_settings(){\n  # Set up nginx\n  sed 's/^worker_processes.*/'\"worker_processes ${NGINX_WORKER_PROCESSES};\"'/' -i ${NGINX_CONFIG_PATH}\n  sed 's/worker_connections.*/'\"worker_connections ${NGINX_WORKER_CONNECTIONS};\"'/' -i ${NGINX_CONFIG_PATH}\n  sed 's/access_log.*/'\"access_log off;\"'/' -i ${NGINX_CONFIG_PATH}\n\n  # setup HTTPS\n  if [ -f \"${SSL_CERTIFICATE_PATH}\" -a -f \"${SSL_KEY_PATH}\" ]; then\n    cp -f ${NGINX_ONLYOFFICE_PATH}/ds-ssl.conf.tmpl ${NGINX_ONLYOFFICE_CONF}\n\n    # configure nginx\n    sed 's,{{SSL_CERTIFICATE_PATH}},'\"${SSL_CERTIFICATE_PATH}\"',' -i ${NGINX_ONLYOFFICE_CONF}\n    sed 's,{{SSL_KEY_PATH}},'\"${SSL_KEY_PATH}\"',' -i ${NGINX_ONLYOFFICE_CONF}\n\n    # turn on http2\n    sed 's,\\(443 ssl\\),\\1 http2,' -i ${NGINX_ONLYOFFICE_CONF}\n\n    # if dhparam path is valid, add to the config, otherwise remove the option\n    if [ -r \"${SSL_DHPARAM_PATH}\" ]; then\n      sed 's,\\(\\#* *\\)\\?\\(ssl_dhparam \\).*\\(;\\)$,'\"\\2${SSL_DHPARAM_PATH}\\3\"',' -i ${NGINX_ONLYOFFICE_CONF}\n    else\n      sed '/ssl_dhparam/d' -i ${NGINX_ONLYOFFICE_CONF}\n    fi\n\n    sed 's,\\(ssl_verify_client \\).*\\(;\\)$,'\"\\1${SSL_VERIFY_CLIENT}\\2\"',' -i ${NGINX_ONLYOFFICE_CONF}\n\n    if [ -f \"${CA_CERTIFICATES_PATH}\" ]; then\n      sed '/ssl_verify_client/a '\"ssl_client_certificate ${CA_CERTIFICATES_PATH}\"';' -i ${NGINX_ONLYOFFICE_CONF}\n    fi\n\n    if [ \"${ONLYOFFICE_HTTPS_HSTS_ENABLED}\" == \"true\" ]; then\n      sed 's,\\(max-age=\\).*\\(;\\)$,'\"\\1${ONLYOFFICE_HTTPS_HSTS_MAXAGE}\\2\"',' -i ${NGINX_ONLYOFFICE_CONF}\n    else\n      sed '/max-age=/d' -i ${NGINX_ONLYOFFICE_CONF}\n    fi\n  else\n    ln -sf ${NGINX_ONLYOFFICE_PATH}/ds.conf.tmpl ${NGINX_ONLYOFFICE_CONF}\n  fi\n\n  # check if ipv6 supported otherwise remove it from nginx config\n  if [ ! -f /proc/net/if_inet6 ]; then\n    sed '/listen\\s\\+\\[::[0-9]*\\].\\+/d' -i $NGINX_ONLYOFFICE_CONF\n  fi\n\n  if [ -f \"${NGINX_ONLYOFFICE_EXAMPLE_CONF}\" ]; then\n    sed 's/linux/docker/' -i ${NGINX_ONLYOFFICE_EXAMPLE_CONF}\n  fi\n\n  start_process documentserver-update-securelink.sh -s ${SECURE_LINK_SECRET:-$(pwgen -s 20)} -r false\n}\n\nupdate_log_settings(){\n   ${JSON_LOG} -I -e \"this.categories.default.level = '${DS_LOG_LEVEL}'\"\n}\n\nupdate_logrotate_settings(){\n  sed 's|\\(^su\\b\\).*|\\1 root root|' -i /etc/logrotate.conf\n}\n\nupdate_release_date(){\n  mkdir -p ${PRIVATE_DATA_DIR}\n  echo ${RELEASE_DATE} > ${DS_RELEASE_DATE}\n}\n\n# create base folders\nfor i in converter docservice metrics; do\n  mkdir -p \"${DS_LOG_DIR}/$i\"\ndone\n\nmkdir -p ${DS_LOG_DIR}-example\n\n# create app folders\nfor i in ${DS_LIB_DIR}/App_Data/cache/files ${DS_LIB_DIR}/App_Data/docbuilder ${DS_LIB_DIR}-example/files; do\n  mkdir -p \"$i\"\ndone\n\n# change folder rights\nfor i in ${DS_LOG_DIR} ${DS_LOG_DIR}-example ${LIB_DIR}; do\n  chown -R ds:ds \"$i\"\n  chmod -R 755 \"$i\"\ndone\n\nif [ ${ONLYOFFICE_DATA_CONTAINER_HOST} = \"localhost\" ]; then\n\n  read_setting\n\n  if [ $METRICS_ENABLED = \"true\" ]; then\n    update_statsd_settings\n  fi\n\n  update_welcome_page\n\n  update_log_settings\n\n  update_ds_settings\n\n  # update settings by env variables\n  if [ $DB_HOST != \"localhost\" ]; then\n    update_db_settings\n    waiting_for_db\n    create_db_tbl\n  else\n    # change rights for postgres directory\n    chown -R postgres:postgres ${PG_ROOT}\n    chmod -R 700 ${PG_ROOT}\n\n    # create new db if it isn't exist\n    if [ ! -d ${PGDATA} ]; then\n      create_postgresql_cluster\n      PG_NEW_CLUSTER=true\n    fi\n    LOCAL_SERVICES+=(\"postgresql\")\n  fi\n\n  if [ ${AMQP_SERVER_HOST} != \"localhost\" ]; then\n    update_rabbitmq_setting\n  else\n    # change rights for rabbitmq directory\n    chown -R rabbitmq:rabbitmq ${RABBITMQ_DATA}\n    chmod -R go=rX,u=rwX ${RABBITMQ_DATA}\n    if [ -f ${RABBITMQ_DATA}/.erlang.cookie ]; then\n        chmod 400 ${RABBITMQ_DATA}/.erlang.cookie\n    fi\n\n    echo \"ulimit -n $RABBIT_CONNECTIONS\" >> /etc/default/rabbitmq-server\n\n    LOCAL_SERVICES+=(\"rabbitmq-server\")\n    # allow Rabbitmq startup after container kill\n    rm -rf /var/run/rabbitmq\n  fi\n\n  if [ ${REDIS_ENABLED} = \"true\" ]; then\n    if [ ${REDIS_SERVER_HOST} != \"localhost\" ]; then\n      update_redis_settings\n    else\n      # change rights for redis directory\n      chown -R redis:redis ${REDIS_DATA}\n      chmod -R 750 ${REDIS_DATA}\n\n      LOCAL_SERVICES+=(\"redis-server\")\n    fi\n  fi\nelse\n  # no need to update settings just wait for remote data\n  waiting_for_datacontainer\n\n  # read settings after the data container in ready state\n  # to prevent get unconfigureted data\n  read_setting\n  \n  update_welcome_page\nfi\n\nfind /etc/${COMPANY_NAME} ! -path '*logrotate*' -exec chown ds:ds {} \\;\n\n#start needed local services\nfor i in ${LOCAL_SERVICES[@]}; do\n  service $i start\ndone\n\nif [ ${PG_NEW_CLUSTER} = \"true\" ]; then\n  create_postgresql_db\n  create_postgresql_tbl\nfi\n\nif [ ${ONLYOFFICE_DATA_CONTAINER} != \"true\" ]; then\n  waiting_for_db\n  waiting_for_amqp\n  if [ ${REDIS_ENABLED} = \"true\" ]; then\n    waiting_for_redis\n  fi\n\n  if [ \"${IS_UPGRADE}\" = \"true\" ]; then\n    upgrade_db_tbl\n    update_release_date\n  fi\n\n  update_nginx_settings\n  \n  service supervisor start\n  \n  # start cron to enable log rotating\n  update_logrotate_settings\n  service cron start\nfi\n\n# Fix to resolve the `unknown \"cache_tag\" variable` error\nstart_process documentserver-flush-cache.sh -r false\n\n# nginx used as a proxy, and as data container status service.\n# it run in all cases.\nservice nginx start\n\nif [ \"${LETS_ENCRYPT_DOMAIN}\" != \"\" -a \"${LETS_ENCRYPT_MAIL}\" != \"\" ]; then\n  if [ ! -f \"${SSL_CERTIFICATE_PATH}\" -a ! -f \"${SSL_KEY_PATH}\" ]; then\n    start_process documentserver-letsencrypt.sh ${LETS_ENCRYPT_MAIL} ${LETS_ENCRYPT_DOMAIN}\n  fi\nfi\n\n# Regenerate the fonts list and the fonts thumbnails\nif [ \"${GENERATE_FONTS}\" == \"true\" ]; then\n  start_process documentserver-generate-allfonts.sh ${ONLYOFFICE_DATA_CONTAINER}\nfi\n\nif [ \"${PLUGINS_ENABLED}\" = \"true\" ]; then\n  echo -n Installing plugins, please wait...\n  start_process documentserver-pluginsmanager.sh -r false --update=\\\"${APP_DIR}/sdkjs-plugins/plugin-list-default.json\\\" >/dev/null\n  echo Done\nfi\n\nstart_process documentserver-static-gzip.sh ${ONLYOFFICE_DATA_CONTAINER}\n\necho \"${JWT_MESSAGE}\" \n\nstart_process tail -f /var/log/${COMPANY_NAME}/**/*.log\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}