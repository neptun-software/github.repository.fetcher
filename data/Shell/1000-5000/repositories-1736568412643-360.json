{
  "metadata": {
    "timestamp": 1736568412643,
    "page": 360,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mrzool/bash-sensible",
      "stars": 2048,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Mattia Tezzele\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9638671875,
          "content": "# Sensible Bash\n\nAn attempt at saner Bash defaults. Inspired by Tim Pope's [sensible.vim](https://github.com/tpope/vim-sensible).\n\n## The config\n\nSensible Bash is intended to be a simple starting point for a better Bash user experience out of the box.\n\nRefer to the commented [source](https://github.com/mrzool/bash-sensible/blob/master/sensible.bash) for a complete list of all the options with explanations. Here's a taste:\n\n#### Smarter tab completion\n\nReadline bindings to improve on Bash's default tab completion:\n\n- Perform file completion in a case insensitive fashion\n- Treat hyphens and underscores as equivalent\n- Display matches for ambiguous patterns at the first press of the tab key (instead of requiring two tab-presses)\n\n#### Saner history defaults\n\nSensible defaults for the command history:\n\n- Append to the history file instead of overwriting it\n- Save multi-line commands as one command\n- Record each line as it gets issued\n- Keep track of a bigger history\n- Avoid duplicate entries\n- Avoid recording unneeded commands (`exit`, `ls`, `bg`, `fg`, and `history` itself)\n- Use a [standard ISO 8601](https://tools.ietf.org/html/rfc3339) timestamp for recording commands (ex: `2016-04-09 13:06:31`)\n\nRead more about the settings used here in the article [Better Bash History](http://blog.sanctum.geek.nz/better-bash-history/) by Tom Ryder.\n\n#### Faster file system navigation\n\nOptions that considerably speed up the ability to navigate throughout the file system:\n\n- Prepend `cd` to directory names automatically, so you can change to a directory just by typing its name\n- Automatically correct spelling errors during tab-completion and in arguments supplied to `cd`\n- Set more targets to the `cd` command besides the current working directory (ex: `projects`, `repos`, `documents`, etc)\n- Define paths as variables and `cd` into it from anywhere, kind of like a bookmarking system for Bash (`cdable_vars`)\n\n## Usage\n\nYou can copy `sensible.bash` in your `bashrc`, cherry-pick the options you like, or source the file at the top of your `bashrc`:\n\n```bash\nif [ -f ~/bin/sensible.bash ]; then\n   source ~/bin/sensible.bash\nfi\n```\n\n### Caveats\n\nIn order to get Sensible Bash to work correctly, make sure that:\n\n- You're running at least Bash 4.x (`echo $BASH_VERSION`).\n- You have the [Bash Completion](https://github.com/scop/bash-completion) package installed and properly configured on your system.\n- If you're on macOS, I recommend to follow [Josh Staiger's advice](http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html) and source `bashrc` from `bash_profile` so to keep all your configuration in one place.\n\n## See also\n\n- My [article](http://mrzool.cc/writing/sensible-bash/) about Sensible Bash\n- My [dotfiles](https://github.com/mrzool/dotfiles) for more \\*nix configuration goodies\n- [Unix as IDE](https://github.com/mrzool/unix-as-ide), my ebook port of the excellent [post series](http://blog.sanctum.geek.nz/series/unix-as-ide/) by Tom Ryder\n\n## License\n\n[MIT](https://opensource.org/licenses/MIT)\n"
        },
        {
          "name": "sensible.bash",
          "type": "blob",
          "size": 3.189453125,
          "content": "# Sensible Bash - An attempt at saner Bash defaults\n# Maintainer: mrzool <http://mrzool.cc>\n# Repository: https://github.com/mrzool/bash-sensible\n# Version: 0.2.2\n\n# Unique Bash version check\nif ((BASH_VERSINFO[0] < 4))\nthen \n  echo \"sensible.bash: Looks like you're running an older version of Bash.\" \n  echo \"sensible.bash: You need at least bash-4.0 or some options will not work correctly.\" \n  echo \"sensible.bash: Keep your software up-to-date!\"\nfi\n\n## GENERAL OPTIONS ##\n\n# Prevent file overwrite on stdout redirection\n# Use `>|` to force redirection to an existing file\nset -o noclobber\n\n# Update window size after every command\nshopt -s checkwinsize\n\n# Automatically trim long paths in the prompt (requires Bash 4.x)\nPROMPT_DIRTRIM=2\n\n# Enable history expansion with space\n# E.g. typing !!<space> will replace the !! with your last command\nbind Space:magic-space\n\n# Turn on recursive globbing (enables ** to recurse all directories)\nshopt -s globstar 2> /dev/null\n\n## SMARTER TAB-COMPLETION (Readline bindings) ##\n\n# Perform file completion in a case insensitive fashion\nbind \"set completion-ignore-case on\"\n\n# Treat hyphens and underscores as equivalent\nbind \"set completion-map-case on\"\n\n# Display matches for ambiguous patterns at first tab press\nbind \"set show-all-if-ambiguous on\"\n\n# Immediately add a trailing slash when autocompleting symlinks to directories\nbind \"set mark-symlinked-directories on\"\n\n## SANE HISTORY DEFAULTS ##\n\n# Append to the history file, don't overwrite it\nshopt -s histappend\n\n# Save multi-line commands as one command\nshopt -s cmdhist\n\n# Record each line as it gets issued\nPROMPT_COMMAND='history -a'\n\n# Huge history. Doesn't appear to slow things down, so why not?\nHISTSIZE=500000\nHISTFILESIZE=100000\n\n# Avoid duplicate entries\nHISTCONTROL=\"erasedups:ignoreboth\"\n\n# Don't record some commands\nexport HISTIGNORE=\"&:[ ]*:exit:ls:bg:fg:history:clear\"\n\n# Use standard ISO 8601 timestamp\n# %F equivalent to %Y-%m-%d\n# %T equivalent to %H:%M:%S (24-hours format)\nHISTTIMEFORMAT='%F %T '\n\n# Enable incremental history search with up/down arrows (also Readline goodness)\n# Learn more about this here: http://codeinthehole.com/writing/the-most-important-command-line-tip-incremental-history-searching-with-inputrc/\nbind '\"\\e[A\": history-search-backward'\nbind '\"\\e[B\": history-search-forward'\nbind '\"\\e[C\": forward-char'\nbind '\"\\e[D\": backward-char'\n\n## BETTER DIRECTORY NAVIGATION ##\n\n# Prepend cd to directory names automatically\nshopt -s autocd 2> /dev/null\n# Correct spelling errors during tab-completion\nshopt -s dirspell 2> /dev/null\n# Correct spelling errors in arguments supplied to cd\nshopt -s cdspell 2> /dev/null\n\n# This defines where cd looks for targets\n# Add the directories you want to have fast access to, separated by colon\n# Ex: CDPATH=\".:~:~/projects\" will look for targets in the current working directory, in home and in the ~/projects folder\nCDPATH=\".\"\n\n# This allows you to bookmark your favorite places across the file system\n# Define a variable containing a path and you will be able to cd into it regardless of the directory you're in\nshopt -s cdable_vars\n\n# Examples:\n# export dotfiles=\"$HOME/dotfiles\"\n# export projects=\"$HOME/projects\"\n# export documents=\"$HOME/Documents\"\n# export dropbox=\"$HOME/Dropbox\"\n\n"
        }
      ]
    }
  ]
}