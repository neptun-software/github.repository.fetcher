{
  "metadata": {
    "timestamp": 1736568792894,
    "page": 930,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Athena-OS/athena",
      "stars": 1069,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.6513671875,
          "content": "BSD Zero Clause License\n\nCopyright (c) 2025 Athena OS Team\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5546875,
          "content": "# Dockerfile\nFROM docker.io/athenaos/base-devel:latest\n\nENV PUSER=builder\nENV PUID=1000\n\nRUN pacman -Syyu --noconfirm coreutils git pacman-contrib rate-mirrors rsync sshpass sudo\n\nRUN useradd -d /src -ms /bin/bash $PUSER\nRUN usermod -aG wheel -u \"$PUID\" $PUSER && echo \"$PUSER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$PUSER\nRUN chmod 044 /etc/sudoers.d/$PUSER\n\n# Copy the PKGBUILD files\nCOPY packages/ /src/packages/\nRUN mkdir -p /src/output\n\nUSER $PUSER\nWORKDIR /src\n\nCOPY --chown=$PUSER:$PUSER . .\n\n# Define the entry point\nENTRYPOINT [\"/src/packages/hephaestus\"]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1123046875,
          "content": "<h1 align=\"center\">\n  Dive into a new Pentesting Experience with<br>\nAthena OS\n</h1>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/badge/Maintained%3F-Yes-CD8335\">\n  <img src=\"https://badgen.net/github/release/Athena-OS/athena\">\n  <img src=\"https://badgen.net/github/stars/Athena-OS/athena\">\n  <img src=\"https://img.shields.io/github/issues-raw/Athena-OS/athena\">\n  <img src=\"https://img.shields.io/github/issues-closed-raw/Athena-OS/athena\">\n  <img src=\"https://img.shields.io/github/license/Athena-OS/athena\">\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.instagram.com/athenaos_sec\">\n    <img src=\"https://img.shields.io/badge/Follow%20us%20on%20Instagram-Ya?logo=instagram&logoColor=white&color=%23e95950&style=['for-the-badge']&url=https://www.instagram.com/athenaos_sec\">\n    </a>\n  <a href=\"https://discord.gg/AHXqyJHhGc\">\n    <img src=\"https://img.shields.io/badge/Join%20on%20Discord-Ya?logo=discord&logoColor=white&color=%235865F2&style=['for-the-badge']&url=https://discord.gg/AHXqyJHhGc\">\n  </a>\n</p>\n\n<!--<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/83867734/174499581-e0f74d41-36ce-4c01-af0d-6ecd98841a64.png\" data-canonical-src=\"https://user-images.githubusercontent.com/83867734/174499581-e0f74d41-36ce-4c01-af0d-6ecd98841a64.png\" width=\"600\" height=\"496\" />\n</p>-->\n![image](https://github.com/Athena-OS/athena/assets/83867734/b130dd25-5e7f-4cc8-bc16-6f384b4210f3)\n\n<!--\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/83867734/192104268-ddfd4b2e-d79e-44e9-a0f7-3d627829d894.png\" data-canonical-src=\"https://user-images.githubusercontent.com/83867734/192104268-ddfd4b2e-d79e-44e9-a0f7-3d627829d894.png\" width=\"400\" height=\"422\" />\n</p>\n-->\n<!--\n<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/83867734/192106351-96cc40a5-994c-4068-9092-f05c69e686c6.png\" data-canonical-src=\"https://user-images.githubusercontent.com/83867734/192106351-96cc40a5-994c-4068-9092-f05c69e686c6.png\" width=\"400\" height=\"400\" />\n</p>\n-->\n\n<h3 align=\"center\">\n  üèÖBorn for InfoSec Professionals, Bug Bounty Hunters, Passionate Students and Spicy HackersüèÖ\n</h3>\n\n<h3 align=\"center\">\n  üíû\n  <a href=\"https://github.com/Athena-OS/athena/releases/\">\n  Get Athena OS Now!\n    </a>\n  üíû\n</h3>\n<br>\n<p align=\"center\">\n  <a href=\"https://hub.docker.com/u/athenaos\"><img src=\"https://user-images.githubusercontent.com/83867734/224526828-b4f2a470-d539-494d-9ac0-34568a75af3a.png\" width=\"150\" height=\"128\" /></a>\n</p>\n<h5 align=\"center\">\nClick Docker icon above to explore Athena OS Docker containers!\n</h5>\n<br>\n<p align=\"center\">\n  <a href=\"https://apps.microsoft.com/store/detail/athena-os/9N1M7Q4F1KQF?hl=en-us&gl=us\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/f/f7/Get_it_from_Microsoft_Badge.svg\" width=\"250\" height=\"90\" /></a>\n</p>\n<h5 align=\"center\">\nClick the icon above to explore Athena OS WSL in Microsoft Store App!\n</h5>\n\n## Hephaestus\n**Hephaestus** is the Athena OS Continuous Integration/Continuous Delivery Builder to improve the integration and delivery of the packages.\n\nAs a container, it can be run in every platform supporting Docker or Podman. It is used to automate the building and delivery of Athena OS packages and for package debugging.\n```\n**===========================================================**\n||     __  __           __                    __             ||\n||    / / / /__  ____  / /_  ____ ____  _____/ /___  _______ ||\n||   / /_/ / _ \\/ __ \\/ __ \\/ __ `/ _ \\/ ___/ __/ / / / ___/ ||\n||  / __  /  __/ /_/ / / / / /_/ /  __(__  ) /_/ /_/ (__  )  ||\n|| /_/ /_/\\___/ .___/_/ /_/\\__,_/\\___/____/\\__/\\__,_/____/   ||\n||            /_/                                            ||\n**===========================================================**\n\nThe Athena OS CI/CD Builder\n\nUsage: ./hephaestus [-a] [-c <ncores>] [-d] [-r] [-s] [-u] [-w] [-x] [package1 package2 ...]\n\nOptions:\n-a     Build all packages.\n-c     Set number of cores for building (maximum 4).\n-d     Skip all dependency checks.\n-h     Print this Help.\n-r     Upload packages to the specified repository server. Use '-e SSH_SEC=' to specify the SSH secret object and '-e REPOSITORY_SERVER=' to define the target repository server as container environment variable arguments.\n-s     Sign packages. Use '-e GPG_SEC' to specify the signing key secret object as container environment variable argument.\n-u     Update the package repository database.\n-w     Overwrite existing packages in the output directory.\n-x     Search for the fastest mirrors.\n```\nIt builds the specified packages or all the repository packages if no package names are provided.\n\nFirst to proceed, it is important to set the secret objects of GPG and SSH keys if needed. To do it in a secure manner:\n1. create a file named `key-sec-file`, write the secret inside it and save it;\n2. create a file named `ssh-sec-file`, write the secret inside it and save it.\n\nThen, run:\n```\npodman secret create key-sec key-sec-file\npodman secret create ssh-sec ssh-sec-file\n```\nFinally, remove the file storing the secrets because no needed anymore:\n```\nrm key-sec-file ssh-sec-file\n```\n\nHephaestus can be run by using the following parameters:\n```\nsystemctl start --user podman\npodman run \\\n    -ti \\\n    --rm \\\n    --secret key-sec \\\n    --secret ssh-sec \\\n    --secret strapi-sec \\\n    --ulimit nofile=1024:524288 \\ # Fix fakeroot hanging\n    --userns=keep-id \\ # Prevent to set root as owner of mounted volume directories\n    -v \"/srv/mirrors/athena:/src/output\" \\ # Set the target directory to store packages\n    -v \"/srv/logs:/src/logs\" \\ # Set the target directory to store build logs\n    -v \"$HOME/keydir:/src/keydir\" \\ # Set the target directory to retrieve the signing key from the host\n    -e REPOSITORY_SERVER=username@server.com:/path/to/dir// \\ # Set the target repository server\n    -e PRE_EXEC=\"ls -la /src\" \\ # Pre-build command\n    -e POST_EXEC=\"ls -la /src/output\" # Post-build command\n    docker.io/athenaos/hephaestus -a -d -r -s -x\n```\nExample usage:\n```\npodman run -ti --rm --secret key-sec --ulimit nofile=1024:524288 --userns=keep-id -v \"/srv/mirrors/athena:/src/output\" -v \"$HOME/keydir:/src/keydir\" -e GPG_SEC=\"key-sec\" docker.io/athenaos/hephaestus -s -x bloodhound-python certipy\n```\n"
        },
        {
          "name": "iso",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vulcano",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}