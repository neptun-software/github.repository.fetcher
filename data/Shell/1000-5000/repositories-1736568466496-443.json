{
  "metadata": {
    "timestamp": 1736568466496,
    "page": 443,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hcengineering/huly-selfhost",
      "stars": 1822,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".env",
          "type": "blob",
          "size": 0.0087890625,
          "content": "huly.conf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0869140625,
          "content": "letsencrypt/\ntraefik/docker-compose.yaml\nnginx.conf\nnginx.conf.bak\nhuly.conf\n.huly.secret"
        },
        {
          "name": ".huly.nginx",
          "type": "blob",
          "size": 3.0078125,
          "content": "server {\n    listen 80;\n    server_name _;\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_pass http://front:8080;\n    }\n\n    location /_accounts {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        rewrite ^/_accounts(/.*)$ $1 break;\n        proxy_pass http://account:3000/;\n    }\n\n    #location /_love {\n    #    proxy_set_header Host $host;\n    #    proxy_set_header X-Real-IP $remote_addr;\n    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    #    proxy_set_header X-Forwarded-Proto $scheme;\n\n    #    proxy_http_version 1.1;\n    #    proxy_set_header Upgrade $http_upgrade;\n    #    proxy_set_header Connection \"upgrade\";\n    #    rewrite ^/_love(/.*)$ $1 break;\n    #    proxy_pass http://love:8096/;\n    #}\n\n    location /_collaborator {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        rewrite ^/_collaborator(/.*)$ $1 break;\n        proxy_pass http://collaborator:3078/;\n    }\n\n    location /_transactor {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        rewrite ^/_transactor(/.*)$ $1 break;\n        proxy_pass http://transactor:3333/;\n    }\n\n    location ~ ^/eyJ {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_pass http://transactor:3333;\n    }\n\n    location /_rekoni {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        rewrite ^/_rekoni(/.*)$ $1 break;\n        proxy_pass http://rekoni:4004/;\n    }\n\n    location /_stats {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        rewrite ^/_stats(/.*)$ $1 break;\n        proxy_pass http://stats:4900/;\n    }\n}"
        },
        {
          "name": ".template.huly.conf",
          "type": "blob",
          "size": 0.8046875,
          "content": "HULY_VERSION=v0.6.377\nDOCKER_NAME=huly\n\n# The address of the host or server from which you will access your Huly instance.\n# This can be a domain name (e.g., huly.example.com) or an IP address (e.g., 192.168.1.1).\nHOST_ADDRESS=${HOST_ADDRESS}\n\n# Set this variable to 'true' to enable SSL (HTTPS/WSS). \n# Leave it empty to use non-SSL (HTTP/WS).\nSECURE=${SECURE}\n\n# Specify the IP address to bind to; leave blank to bind to all interfaces (0.0.0.0).\n# Do not use IP:PORT format in HTTP_BIND or HTTP_PORT.\nHTTP_PORT=${HTTP_PORT}\nHTTP_BIND=${HTTP_BIND}\n\n# Huly specific variables\nTITLE=${TITLE}\nDEFAULT_LANGUAGE=${DEFAULT_LANGUAGE}\nLAST_NAME_FIRST=${LAST_NAME_FIRST}\n\n# The following configs are auto-generated by the setup script. \n# Please do not manually overwrite.\n\n# Run with --secret to regenerate.\nSECRET=${HULY_SECRET}\n"
        },
        {
          "name": ".template.nginx.conf",
          "type": "blob",
          "size": 0.39453125,
          "content": "server {\n    server_name ;\n    listen ;\n    location / {\n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection \"upgrade\";\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n      proxy_pass ;\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 13.8642578125,
          "content": "Eclipse Public License - v 2.0\n\n    THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE\n    PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION\n    OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\n  a) in the case of the initial Contributor, the initial content\n     Distributed under this Agreement, and\n\n  b) in the case of each subsequent Contributor:\n     i) changes to the Program, and\n     ii) additions to the Program;\n  where such changes and/or additions to the Program originate from\n  and are Distributed by that particular Contributor. A Contribution\n  \"originates\" from a Contributor if it was added to the Program by\n  such Contributor itself or anyone acting on such Contributor's behalf.\n  Contributions do not include changes or additions to the Program that\n  are not Modified Works.\n\n\"Contributor\" means any person or entity that Distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which\nare necessarily infringed by the use or sale of its Contribution alone\nor when combined with the Program.\n\n\"Program\" means the Contributions Distributed in accordance with this\nAgreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement\nor any Secondary License (as applicable), including Contributors.\n\n\"Derivative Works\" shall mean any work, whether in Source Code or other\nform, that is based on (or derived from) the Program and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship.\n\n\"Modified Works\" shall mean any work in Source Code or other form that\nresults from an addition to, deletion from, or modification of the\ncontents of the Program, including, for purposes of clarity any new file\nin Source Code form that contains any contents of the Program. Modified\nWorks shall not include works that contain only declarations,\ninterfaces, types, classes, structures, or files of the Program solely\nin each case in order to link to, bind by name, or subclass the Program\nor Modified Works thereof.\n\n\"Distribute\" means the acts of a) distributing or b) making available\nin any manner that enables the transfer of a copy.\n\n\"Source Code\" means the form of a Program preferred for making\nmodifications, including but not limited to software source code,\ndocumentation source, and configuration files.\n\n\"Secondary License\" means either the GNU General Public License,\nVersion 2.0, or any later versions of that license, including any\nexceptions or additional permissions as identified by the initial\nContributor.\n\n2. GRANT OF RIGHTS\n\n  a) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free copyright\n  license to reproduce, prepare Derivative Works of, publicly display,\n  publicly perform, Distribute and sublicense the Contribution of such\n  Contributor, if any, and such Derivative Works.\n\n  b) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free patent\n  license under Licensed Patents to make, use, sell, offer to sell,\n  import and otherwise transfer the Contribution of such Contributor,\n  if any, in Source Code or other form. This patent license shall\n  apply to the combination of the Contribution and the Program if, at\n  the time the Contribution is added by the Contributor, such addition\n  of the Contribution causes such combination to be covered by the\n  Licensed Patents. The patent license shall not apply to any other\n  combinations which include the Contribution. No hardware per se is\n  licensed hereunder.\n\n  c) Recipient understands that although each Contributor grants the\n  licenses to its Contributions set forth herein, no assurances are\n  provided by any Contributor that the Program does not infringe the\n  patent or other intellectual property rights of any other entity.\n  Each Contributor disclaims any liability to Recipient for claims\n  brought by any other entity based on infringement of intellectual\n  property rights or otherwise. As a condition to exercising the\n  rights and licenses granted hereunder, each Recipient hereby\n  assumes sole responsibility to secure any other intellectual\n  property rights needed, if any. For example, if a third party\n  patent license is required to allow Recipient to Distribute the\n  Program, it is Recipient's responsibility to acquire that license\n  before distributing the Program.\n\n  d) Each Contributor represents that to its knowledge it has\n  sufficient copyright rights in its Contribution, if any, to grant\n  the copyright license set forth in this Agreement.\n\n  e) Notwithstanding the terms of any Secondary License, no\n  Contributor makes additional grants to any Recipient (other than\n  those set forth in this Agreement) as a result of such Recipient's\n  receipt of the Program under the terms of a Secondary License\n  (if permitted under the terms of Section 3).\n\n3. REQUIREMENTS\n\n3.1 If a Contributor Distributes the Program in any form, then:\n\n  a) the Program must also be made available as Source Code, in\n  accordance with section 3.2, and the Contributor must accompany\n  the Program with a statement that the Source Code for the Program\n  is available under this Agreement, and informs Recipients how to\n  obtain it in a reasonable manner on or through a medium customarily\n  used for software exchange; and\n\n  b) the Contributor may Distribute the Program under a license\n  different than this Agreement, provided that such license:\n     i) effectively disclaims on behalf of all other Contributors all\n     warranties and conditions, express and implied, including\n     warranties or conditions of title and non-infringement, and\n     implied warranties or conditions of merchantability and fitness\n     for a particular purpose;\n\n     ii) effectively excludes on behalf of all other Contributors all\n     liability for damages, including direct, indirect, special,\n     incidental and consequential damages, such as lost profits;\n\n     iii) does not attempt to limit or alter the recipients' rights\n     in the Source Code under section 3.2; and\n\n     iv) requires any subsequent distribution of the Program by any\n     party to be under a license that satisfies the requirements\n     of this section 3.\n\n3.2 When the Program is Distributed as Source Code:\n\n  a) it must be made available under this Agreement, or if the\n  Program (i) is combined with other material in a separate file or\n  files made available under a Secondary License, and (ii) the initial\n  Contributor attached to the Source Code the notice described in\n  Exhibit A of this Agreement, then the Program may be made available\n  under the terms of such Secondary Licenses, and\n\n  b) a copy of this Agreement must be included with each copy of\n  the Program.\n\n3.3 Contributors may not remove or alter any copyright, patent,\ntrademark, attribution notices, disclaimers of warranty, or limitations\nof liability (\"notices\") contained within the Program from any copy of\nthe Program which they Distribute, provided that Contributors may add\ntheir own appropriate notices.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities\nwith respect to end users, business partners and the like. While this\nlicense is intended to facilitate the commercial use of the Program,\nthe Contributor who includes the Program in a commercial product\noffering should do so in a manner which does not create potential\nliability for other Contributors. Therefore, if a Contributor includes\nthe Program in a commercial product offering, such Contributor\n(\"Commercial Contributor\") hereby agrees to defend and indemnify every\nother Contributor (\"Indemnified Contributor\") against any losses,\ndamages and costs (collectively \"Losses\") arising from claims, lawsuits\nand other legal actions brought by a third party against the Indemnified\nContributor to the extent caused by the acts or omissions of such\nCommercial Contributor in connection with its distribution of the Program\nin a commercial product offering. The obligations in this section do not\napply to any claims or Losses relating to any actual or alleged\nintellectual property infringement. In order to qualify, an Indemnified\nContributor must: a) promptly notify the Commercial Contributor in\nwriting of such claim, and b) allow the Commercial Contributor to control,\nand cooperate with the Commercial Contributor in, the defense and any\nrelated settlement negotiations. The Indemnified Contributor may\nparticipate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial\nproduct offering, Product X. That Contributor is then a Commercial\nContributor. If that Commercial Contributor then makes performance\nclaims, or offers warranties related to Product X, those performance\nclaims and warranties are such Commercial Contributor's responsibility\nalone. Under this section, the Commercial Contributor would have to\ndefend claims against the other Contributors related to those performance\nclaims and warranties, and if a court requires any other Contributor to\npay any damages as a result, the Commercial Contributor must pay\nthose damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN \"AS IS\"\nBASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR\nIMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF\nTITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR\nPURPOSE. Each Recipient is solely responsible for determining the\nappropriateness of using and distributing the Program and assumes all\nrisks associated with its exercise of rights under this Agreement,\nincluding but not limited to the risks and costs of program errors,\ncompliance with applicable laws, damage to or loss of data, programs\nor equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS\nSHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST\nPROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\nEXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under\napplicable law, it shall not affect the validity or enforceability of\nthe remainder of the terms of this Agreement, and without further\naction by the parties hereto, such provision shall be reformed to the\nminimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity\n(including a cross-claim or counterclaim in a lawsuit) alleging that the\nProgram itself (excluding combinations of the Program with other software\nor hardware) infringes such Recipient's patent(s), then such Recipient's\nrights granted under Section 2(b) shall terminate as of the date such\nlitigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it\nfails to comply with any of the material terms or conditions of this\nAgreement and does not cure such failure in a reasonable period of\ntime after becoming aware of such noncompliance. If all Recipient's\nrights under this Agreement terminate, Recipient agrees to cease use\nand distribution of the Program as soon as reasonably practicable.\nHowever, Recipient's obligations under this Agreement and any licenses\ngranted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement,\nbut in order to avoid inconsistency the Agreement is copyrighted and\nmay only be modified in the following manner. The Agreement Steward\nreserves the right to publish new versions (including revisions) of\nthis Agreement from time to time. No one other than the Agreement\nSteward has the right to modify this Agreement. The Eclipse Foundation\nis the initial Agreement Steward. The Eclipse Foundation may assign the\nresponsibility to serve as the Agreement Steward to a suitable separate\nentity. Each new version of the Agreement will be given a distinguishing\nversion number. The Program (including Contributions) may always be\nDistributed subject to the version of the Agreement under which it was\nreceived. In addition, after a new version of the Agreement is published,\nContributor may elect to Distribute the Program (including its\nContributions) under the new version.\n\nExcept as expressly stated in Sections 2(a) and 2(b) above, Recipient\nreceives no rights or licenses to the intellectual property of any\nContributor under this Agreement, whether expressly, by implication,\nestoppel or otherwise. All rights in the Program not expressly granted\nunder this Agreement are reserved. Nothing in this Agreement is intended\nto be enforceable by any entity that is not a Contributor or Recipient.\nNo third-party beneficiary rights are created under this Agreement.\n\nExhibit A - Form of Secondary Licenses Notice\n\n\"This Source Code may also be made available under the following\nSecondary Licenses when the conditions for such availability set forth\nin the Eclipse Public License, v. 2.0 are satisfied: {name license(s),\nversion(s), and exceptions or additional permissions here}.\"\n\n  Simply including a copy of this Agreement, including this Exhibit A\n  is not sufficient to license the Source Code under Secondary Licenses.\n\n  If it is not possible or desirable to put the notice in a particular\n  file, then You may include the notice in a location (such as a LICENSE\n  file in a relevant directory) where a recipient would be likely to\n  look for such a notice.\n\n  You may add additional accurate notices of copyright ownership.\n"
        },
        {
          "name": "MIGRATION.md",
          "type": "blob",
          "size": 1.5849609375,
          "content": "# Huly Migration\n\n## v0.6.377\n\n### Fulltext Service\n\nFulltext search functionality has been extracted into a separate `fulltext` service. This service is now required to be running in order to use the fulltext search functionality.\n\nConfiguration:\n\n```yaml\n  fulltext:\n    image: hardcoreeng/fulltext:${HULY_VERSION}\n    ports:\n      - 4700:4700\n    environment:\n      - SERVER_SECRET=${HULY_SECRET}\n      - DB_URL=mongodb://mongodb:27017\n      - FULLTEXT_DB_URL=http://elastic:9200\n      - ELASTIC_INDEX_NAME=huly_storage_index\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - REKONI_URL=http://rekoni:4004\n      - ACCOUNTS_URL=http://account:3000\n      - STATS_URL=http://stats:4900\n    restart: unless-stopped\n```\n\nUpdate the `transactor` service to use the new `fulltext` service:\n\n```yaml\n  transactor:\n    ...\n    environment:\n      ...\n      - FULLTEXT_URL=http://fulltext:4700\n      # Remove the following lines\n      # - ELASTIC_URL=http://elastic:9200\n      # - ELASTIC_INDEX_NAME=huly_storage_index\n      # - REKONI_URL=http://rekoni:4004\n```\n\n### Statistics Service\n\nNew statistics service has been added. The serivce is responsible for collecting and storing statistics about the usage of the application.\n\nConfiguration:\n\n```yaml\n  stats:\n    image: hardcoreeng/stats:${HULY_VERSION}\n    ports:\n      - 4900:4900\n    environment:\n      - PORT=4900\n      - SERVER_SECRET=${HULY_SECRET}\n    restart: unless-stopped\n```\n\nOther Huly services have been updated to use the new statistics service:\n\n```yaml\n  ...\n    environment:\n      - STATS_URL=http://stats:4900\n      ...\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.587890625,
          "content": "# Huly Self-Hosted\n\nPlease use this README if you want to deploy Huly on your server with `docker compose`. I'm using a Basic Droplet on Digital Ocean with Ubuntu 23.10, but these instructions can be easily adapted for any Linux distribution.\n\n> [!NOTE]\n> Huly is quite resource-heavy, so I recommend using a Droplet with 2 vCPUs and 4GB of RAM. Droplets with less RAM may stop responding or fail.\n\nIf you prefer Kubernetes deployment, there is a sample Kubernetes configuration under [kube](kube) directory.\n\n## Installing `nginx` and `docker`\n\nFirst, let's install `nginx` and `docker` using the commands below if you have not already installed them on your machine.\n\n```bash\nsudo apt update\nsudo apt install nginx\nsudo snap install docker\n```\n\n## Clone the `huly-selfhost` repository and configure `nginx`\n\nNext, let's clone the `huly-selfhost` repository and configure Huly.\n\n```bash\ngit clone https://github.com/hcengineering/huly-selfhost.git\ncd huly-selfhost\n./setup.sh\n```\nThis will generate a [huly.conf](./huly.conf) file with your chosen values and create your nginx config.\n\nTo add the generated configuration to your Nginx setup, run the following:\n```bash\nsudo ln -s $(pwd)/nginx.conf /etc/nginx/sites-enabled/huly.conf\n```\n> [!NOTE]\n> If you change `HOST_ADDRESS`, `SECURE`, `HTTP_PORT` or `HTTP_BIND` be sure to update your [nginx.conf](./nginx.conf) by running:\n> ```bash\n> ./nginx.sh\n> ```\n>You can safely execute this script after adding your custom configurations like ssl. It will only overwrite the necessary settings.\n\nFinally, let's reload `nginx` and start Huly with `docker compose`.\n\n```bash\nsudo nginx -s reload\nsudo docker compose up -d\n```\n\nNow, launch your web browser and enjoy Huly!\n\n## Generating Public and Private VAPID keys for front-end\n\nYou'll need `Node.js` installed on your machine. Installing `npm` on Debian based distro:\n```\nsudo apt-get install npm\n```\nInstall web-push using npm\n```\nsudo npm install -g web-push\n```\nGenerate VAPID Keys. Run the following command to generate a VAPID key pair:\n```\nweb-push generate-vapid-keys \n```\nIt will generate both keys that looks like this:\n```\n=======================================\n\nPublic Key:\nsdfgsdgsdfgsdfggsdf\n\nPrivate Key:\nasdfsadfasdfsfd\n\n=======================================\n```\nKeep these keys secure, as you will need them to set up your push notification service on the server.\n\nAdd these keys into `compose.yaml` in section `services:front:environment`:\n```\n- PUSH_PUBLIC_KEY=your public key\n- PUSH_PRIVATE_KEY=your private key\n```\n\n## AWS SES email notifications\n\n1. Setup Amazon Simple Email Service in AWS: https://docs.aws.amazon.com/ses/latest/dg/setting-up.html\n\n2. Add email address you'll use to send notifications into \"SOURCE\", SES access such as ACCESS_KEY, SECRET_KEY, REGION\n\n    ```yaml\n      ses:\n        image: hardcoreeng/ses:v0.6.295\n        container_name: ses\n        ports:\n          - 3335:3335\n        environment:\n          - SOURCE=<EMAIL_FROM>\n          - ACCESS_KEY=<SES_ACCESS_KEY>\n          - SECRET_KEY=<SES_SECRET_KEY>\n          - REGION=<SES_REGION>\n          - PORT=3335\n        restart: unless-stopped\n    ```\n\n3. Add SES container URL into `transactor` and `account` containers:\n\n    ```yaml\n    account:\n      ...\n      environment:\n        - SES_URL=http://ses:3335\n      ...\n    transactor:\n      ...\n      environment:\n        - SES_URL=http://ses:3335\n      ...\n    ```\n\n4. In `Settings -> Notifications` setup email notifications for events you need to be notified for. It's a user's setting not a company wide, meaning each user has to setup their own notification rules.\n\n## Love Service (Audio & Video calls)\n\nHuly audio and video calls are created on top of LiveKit insfrastructure. In order to use Love service in your self-hosted Huly, perform the following steps:\n\n1. Set up [LiveKit Cloud](https://cloud.livekit.io) account\n2. Add `love` container to the docker-compose.yaml\n\n    ```yaml\n      love:\n        image: hardcoreeng/love:v0.6.295\n        container_name: love\n        ports:\n          - 8096:8096\n        environment:\n          - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n          - SECRET=secret\n          - ACCOUNTS_URL=http://account:3000\n          - DB_URL=mongodb://mongodb:27017\n          - MONGO_URL=mongodb://mongodb:27017\n          - STORAGE_PROVIDER_NAME=minio\n          - PORT=8096\n          - LIVEKIT_HOST=<LIVEKIT_HOST>\n          - LIVEKIT_API_KEY=<LIVEKIT_API_KEY>\n          - LIVEKIT_API_SECRET=<LIVEKIT_API_SECRET>\n        restart: unless-stopped\n    ```\n\n3. Configure `front` service:\n\n    ```yaml\n      front:\n        ...\n        environment:\n          - LIVEKIT_WS=<LIVEKIT_HOST>\n          - LOVE_ENDPOINT=http://love:8096\n        ...\n    ```\n\n## Configure OpenID Connect (OIDC)\n\nYou can configure a Huly instance to authorize users (sign-in/sign-up) using an OpenID Connect identity provider (IdP).\n\n### On the IdP side\n1. Create a new OpenID application.  \n   * Use `{huly_account_svc}/auth/openid/callback` as the sign-in redirect URI. The `huly_account_svc` is the hostname for the account service of the deployment, which should be accessible externally from the client/browser side. In the provided example setup, the account service runs on port 3000.  \n\n   **URI Example:**  \n   - `http://huly.mydomain.com:3000/auth/openid/callback`  \n\n2. Configure user access to the application as needed.  \n\n### On the Huly side\nFor the account service, set the following environment variables as provided by the IdP:\n\n* OPENID_CLIENT_ID\n* OPENID_CLIENT_SECRET\n* OPENID_ISSUER\n\nEnsure you have configured or add the following environment variable to the front service:\n\n* ACCOUNTS_URL (This should contain the URL of the account service, accessible from the client side.)\n\nYou will need to expose your account service port (e.g. 3000) in your nginx.conf.\n\nNote: Once all the required environment variables are configured, you will see an additional button on the sign-in/sign-up pages.\n\n## Configure GitHub OAuth\n\nYou can also configure a Huly instance to use GitHub OAuth for user authorization (sign-in/sign-up).\n\n### On the GitHub side\n1. Create a new GitHub OAuth application.  \n   * Use `{huly_account_svc}/auth/github/callback` as the sign-in redirect URI. The `huly_account_svc` is the hostname for the account service of the deployment, which should be accessible externally from the client/browser side. In the provided example setup, the account service runs on port 3000.  \n\n   **URI Example:**  \n   - `http://huly.mydomain.com:3000/auth/github/callback`  \n\n### On the Huly side\nSpecify the following environment variables for the account service:\n\n* `GITHUB_CLIENT_ID`  \n* `GITHUB_CLIENT_SECRET`  \n\nEnsure you have configured or add the following environment variable to the front service:\n\n* `ACCOUNTS_URL` (The URL of the account service, accessible from the client side.)  \n\nYou will need to expose your account service port (e.g. 3000) in your nginx.conf.\n\nNotes:\n* The `ISSUER` environment variable is not required for GitHub OAuth.\n* Once all the required environment variables are configured, you will see an additional button on the sign-in/sign-up pages.\n\n## Disable Sign-Up\n\nYou can disable public sign-ups for a deployment. When configured, sign-ups will only be permitted through an invite link to a specific workspace.\n\nTo implement this, set the following environment variable for both the front and account services:\n\n```yaml\n  account:\n    ...\n    environment:\n      - DISABLE_SIGNUP=true\n    ...  \n  front:    \n    ...\n    environment:\n      - DISABLE_SIGNUP=true\n    ...\n```\n\n_Note: When setting up a new deployment, either create the initial account before disabling sign-ups or use the development tool to create the first account._\n"
        },
        {
          "name": "compose.yml",
          "type": "blob",
          "size": 5.0703125,
          "content": "name: ${DOCKER_NAME}\nversion: \"3\"\nservices:\n  nginx:\n    image: \"nginx:1.21.3\"\n    ports:\n      - \"${HTTP_BIND}:${HTTP_PORT}:80\"\n    volumes:\n      - ./.huly.nginx:/etc/nginx/conf.d/default.conf\n    restart: unless-stopped\n\n  mongodb:\n    image: \"mongo:7-jammy\"\n    environment:\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - db:/data/db\n    restart: unless-stopped\n\n  minio:\n    image: \"minio/minio\"\n    command: server /data --address \":9000\" --console-address \":9001\"\n    volumes:\n      - files:/data\n    restart: unless-stopped\n\n  elastic:\n    image: \"elasticsearch:7.14.2\"\n    command: |\n      /bin/sh -c \"./bin/elasticsearch-plugin list | grep -q ingest-attachment || yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;\n      /usr/local/bin/docker-entrypoint.sh eswrapper\"\n    volumes:\n      - elastic:/usr/share/elasticsearch/data\n    environment:\n      - ELASTICSEARCH_PORT_NUMBER=9200\n      - BITNAMI_DEBUG=true\n      - discovery.type=single-node\n      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m\n      - http.cors.enabled=true\n      - http.cors.allow-origin=http://localhost:8082\n    healthcheck:\n      interval: 20s\n      retries: 10\n      test: curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'\n    restart: unless-stopped\n\n  rekoni:\n    image: hardcoreeng/rekoni-service:${HULY_VERSION}\n    environment:\n      - SECRET=${SECRET}\n    deploy:\n      resources:\n        limits:\n          memory: 500M\n    restart: unless-stopped\n\n  transactor:\n    image: hardcoreeng/transactor:${HULY_VERSION}\n    environment:\n      - SERVER_PORT=3333\n      - SERVER_SECRET=${SECRET}\n      - SERVER_CURSOR_MAXTIMEMS=30000\n      - DB_URL=mongodb://mongodb:27017\n      - MONGO_URL=mongodb://mongodb:27017\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - FRONT_URL=http://localhost:8087\n      - ACCOUNTS_URL=http://account:3000\n      - FULLTEXT_URL=http://fulltext:4700\n      - STATS_URL=http://stats:4900\n      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}\n    restart: unless-stopped\n\n  collaborator:\n    image: hardcoreeng/collaborator:${HULY_VERSION}\n    environment:\n      - COLLABORATOR_PORT=3078\n      - SECRET=${SECRET}\n      - ACCOUNTS_URL=http://account:3000\n      - DB_URL=mongodb://mongodb:27017\n      - STATS_URL=http://stats:4900\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n    restart: unless-stopped\n\n  account:\n    image: hardcoreeng/account:${HULY_VERSION}\n    environment:\n      - SERVER_PORT=3000\n      - SERVER_SECRET=${SECRET}\n      - DB_URL=mongodb://mongodb:27017\n      - MONGO_URL=mongodb://mongodb:27017\n      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - FRONT_URL=http://front:8080\n      - STATS_URL=http://stats:4900\n      - MODEL_ENABLED=*\n      - ACCOUNTS_URL=http://localhost:3000\n      - ACCOUNT_PORT=3000\n    restart: unless-stopped\n\n  workspace:\n    image: hardcoreeng/workspace:${HULY_VERSION}\n    environment:\n      - SERVER_SECRET=${SECRET}\n      - DB_URL=mongodb://mongodb:27017\n      - MONGO_URL=mongodb://mongodb:27017\n      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - MODEL_ENABLED=*\n      - ACCOUNTS_URL=http://account:3000\n      - STATS_URL=http://stats:4900\n    restart: unless-stopped\n\n  front:\n    image: hardcoreeng/front:${HULY_VERSION}\n    environment:\n      - SERVER_PORT=8080\n      - SERVER_SECRET=${SECRET}\n      - LOVE_ENDPOINT=http${SECURE:+s}://${HOST_ADDRESS}/_love\n      - ACCOUNTS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_accounts\n      - REKONI_URL=http${SECURE:+s}://${HOST_ADDRESS}/_rekoni\n      - CALENDAR_URL=http${SECURE:+s}://${HOST_ADDRESS}/_calendar\n      - GMAIL_URL=http${SECURE:+s}://${HOST_ADDRESS}/_gmail\n      - TELEGRAM_URL=http${SECURE:+s}://${HOST_ADDRESS}/_telegram\n      - STATS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_stats\n      - UPLOAD_URL=/files\n      - ELASTIC_URL=http://elastic:9200\n      - COLLABORATOR_URL=ws${SECURE:+s}://${HOST_ADDRESS}/_collaborator\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - DB_URL=mongodb://mongodb:27017\n      - MONGO_URL=mongodb://mongodb:27017\n      - TITLE=${TITLE:-Huly Self Host}\n      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en}\n      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}\n      - DESKTOP_UPDATES_CHANNEL=selfhost\n    restart: unless-stopped\n\n  fulltext:\n    image: hardcoreeng/fulltext:${HULY_VERSION}\n    environment:\n      - SERVER_SECRET=${SECRET}\n      - DB_URL=mongodb://mongodb:27017\n      - FULLTEXT_DB_URL=http://elastic:9200\n      - ELASTIC_INDEX_NAME=huly_storage_index\n      - STORAGE_CONFIG=minio|minio?accessKey=minioadmin&secretKey=minioadmin\n      - REKONI_URL=http://rekoni:4004\n      - ACCOUNTS_URL=http://account:3000\n      - STATS_URL=http://stats:4900\n    restart: unless-stopped\n\n  stats:\n    image: hardcoreeng/stats:${HULY_VERSION}\n    environment:\n      - PORT=4900\n      - SERVER_SECRET=${SECRET}\n    restart: unless-stopped\nvolumes:\n  db:\n  elastic:\n  files:"
        },
        {
          "name": "kube",
          "type": "tree",
          "content": null
        },
        {
          "name": "nginx.sh",
          "type": "blob",
          "size": 2.6259765625,
          "content": "#!/bin/bash\n\nif [ -f \"huly.conf\" ]; then\n    source \"huly.conf\"\nfi\n\n# Check for --recreate flag\nRECREATE=false\nif [ \"$1\" == \"--recreate\" ]; then\n    RECREATE=true\nfi\n\n# Handle nginx.conf recreation or updating\nif [ \"$RECREATE\" == true ]; then\n    cp .template.nginx.conf nginx.conf\n    echo \"nginx.conf has been recreated from the template.\"\nelse\n    if [ ! -f \"nginx.conf\" ]; then\n        echo \"nginx.conf not found, creating from template.\"\n        cp .template.nginx.conf nginx.conf\n    else\n        echo \"nginx.conf already exists. Only updating server_name, listen, and proxy_pass.\"\n        echo \"Run with --recreate to fully overwrite nginx.conf.\"\n    fi\nfi\n\n# Update server_name and proxy_pass using sed\nsed -i.bak \"s|server_name .*;|server_name ${HOST_ADDRESS};|\" ./nginx.conf\nsed -i.bak \"s|proxy_pass .*;|proxy_pass http://${HTTP_BIND:-127.0.0.1}:${HTTP_PORT};|\" ./nginx.conf\n\n# Update listen directive to either port 80 or 443, while preserving IP address\nif [[ -n \"$SECURE\" ]]; then\n    # Secure (use port 443 and add 'ssl')\n    sed -i.bak -E 's|(listen )(.*:)?([0-9]+)?;|\\1443 ssl;|' ./nginx.conf\n    echo \"Serving over SSL. Make sure to add your SSL certificates.\"\nelse\n    # Non-secure (use port 80 and remove 'ssl')\n    sed -i.bak -E \"s|(listen )(.*:)?[0-9]+ ssl;|\\1\\280;|\" ./nginx.conf\n    sed -i.bak -E \"s|(listen )(.*:)?([0-9]+)?;|\\1\\280;|\" ./nginx.conf\nfi\n\n# Extract IP address for redirect configuration\nIP_ADDRESS=$(grep -oE 'listen \\K[^:]+(?=:[0-9]+ ssl;)' nginx.conf)\n\n# Remove HTTP to HTTPS redirect server block if SSL is enabled\nif [[ -z \"$SECURE\" ]]; then\n    echo \"Enabling SSL; removing HTTP to HTTPS redirect block...\"\n    # Remove the entire server block for port 80\n    if grep -q 'return 301 https://\\$host\\$request_uri;' nginx.conf; then\n        sed -i.bak '/# !/,/!/d' nginx.conf\n    fi\nelse\n    # Check if the HTTP to HTTPS redirect block already exists\n    if grep -q 'return 301 https://\\$host\\$request_uri;' nginx.conf; then\n        sed -i.bak '/# !/,/!/d' nginx.conf\n    fi\n\n    echo \"Creating HTTP to HTTPS redirect...\"\n    echo -e \"# ! DO NOT REMOVE COMMENT\n# DO NOT MODIFY, CHANGES WILL BE OVERWRITTEN\nserver {\n    listen ${IP_ADDRESS:+${IP_ADDRESS}:}80;\n    server_name ${HOST_ADDRESS};\n    return 301 https://\\$host\\$request_uri;\n}\n# DO NOT REMOVE COMMENT !\" >> ./nginx.conf\nfi\n\nread -p \"Do you want to run 'nginx -s reload' now to load your updated Huly config? (Y/n): \" RUN_NGINX\ncase \"${RUN_NGINX:-Y}\" in  \n    [Yy]* )  \n        echo -e \"\\033[1;32mRunning 'nginx -s reload' now...\\033[0m\"\n        sudo nginx -s reload\n        ;;\n    [Nn]* )\n        echo \"You can run 'nginx -s reload' later to load your updated Huly config.\"\n        ;;\nesac"
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 3.2529296875,
          "content": "#!/usr/bin/env bash\n\nHULY_VERSION=\"v0.6.377\"\nDOCKER_NAME=\"huly\"\nCONFIG_FILE=\"huly.conf\"\n\nif [ -f \"$CONFIG_FILE\" ]; then\n    source \"$CONFIG_FILE\"\nfi\n\nwhile true; do\n    if [[ -n \"$HOST_ADDRESS\" ]]; then\n        prompt_type=\"current\"\n        prompt_value=\"${HOST_ADDRESS}\"\n    else\n        prompt_type=\"default\"\n        prompt_value=\"localhost\"\n    fi\n    read -p \"Enter the host address (domain name or IP) [${prompt_type}: ${prompt_value}]: \" input\n    _HOST_ADDRESS=\"${input:-${HOST_ADDRESS:-localhost}}\"\n    break\ndone\n\nwhile true; do\n    if [[ -n \"$HTTP_PORT\" ]]; then\n        prompt_type=\"current\"\n        prompt_value=\"${HTTP_PORT}\" \n    else\n        prompt_type=\"default\"\n        prompt_value=\"80\"\n    fi\n    read -p \"Enter the port for HTTP [${prompt_type}: ${prompt_value}]: \" input\n    _HTTP_PORT=\"${input:-${HTTP_PORT:-80}}\"\n    if [[ \"$_HTTP_PORT\" =~ ^[0-9]+$ && \"$_HTTP_PORT\" -ge 1 && \"$_HTTP_PORT\" -le 65535 ]]; then\n        break\n    else\n        echo \"Invalid port. Please enter a number between 1 and 65535.\"\n    fi\ndone\n\necho \"$_HOST_ADDRESS $HOST_ADDRESS $_HTTP_PORT $HTTP_PORT\"\n\nif [[ \"$_HOST_ADDRESS\" == \"localhost\" || \"$_HOST_ADDRESS\" == \"127.0.0.1\" || \"$_HOST_ADDRESS\" =~ ^([0-9]{1,3}\\.){3}[0-9]{1,3}:?$ ]]; then\n    _HOST_ADDRESS=\"${_HOST_ADDRESS%:}:${_HTTP_PORT}\"\n    SECURE=\"\"\nelse\n    while true; do\n        if [[ -n \"$SECURE\" ]]; then\n            prompt_type=\"current\"\n            prompt_value=\"Yes\"\n        else\n            prompt_type=\"default\"\n            prompt_value=\"No\" \n        fi\n        read -p \"Will you serve Huly over SSL? (y/n) [${prompt_type}: ${prompt_value}]: \" input\n        case \"${input}\" in\n            [Yy]* )\n                _SECURE=\"true\"; break;;\n            [Nn]* )\n                _SECURE=\"\"; break;;\n            \"\" )\n                _SECURE=\"${SECURE:+true}\"; break;;\n            * )\n                echo \"Invalid input. Please enter Y or N.\";;\n        esac\n    done\nfi\n\nSECRET=false\nif [ \"$1\" == \"--secret\" ]; then\n  SECRET=true\nfi\n\nif [ ! -f .huly.secret ] || [ \"$SECRET\" == true ]; then\n  openssl rand -hex 32 > .huly.secret\n  echo \"Secret generated and stored in .huly.secret\"\nelse\n  echo -e \"\\033[33m.huly.secret already exists, not overwriting.\"\n  echo \"Run this script with --secret to generate a new secret.\"\nfi\n\nexport HOST_ADDRESS=$_HOST_ADDRESS\nexport SECURE=$_SECURE\nexport HTTP_PORT=$_HTTP_PORT\nexport HTTP_BIND=$HTTP_BIND\nexport TITLE=${TITLE:-Huly}\nexport DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en}\nexport LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}\nexport HULY_SECRET=$(cat .huly.secret)\n\nenvsubst < .template.huly.conf > $CONFIG_FILE\n\necho -e \"\\n\\033[1;34mConfiguration Summary:\\033[0m\"\necho -e \"Host Address: \\033[1;32m$_HOST_ADDRESS\\033[0m\"\necho -e \"HTTP Port: \\033[1;32m$_HTTP_PORT\\033[0m\"\nif [[ -n \"$SECURE\" ]]; then\n    echo -e \"SSL Enabled: \\033[1;32mYes\\033[0m\"\nelse\n    echo -e \"SSL Enabled: \\033[1;31mNo\\033[0m\"\nfi\n\nread -p \"Do you want to run 'docker compose up -d' now to start Huly? (Y/n): \" RUN_DOCKER\ncase \"${RUN_DOCKER:-Y}\" in  \n    [Yy]* )  \n         echo -e \"\\033[1;32mRunning 'docker compose up -d' now...\\033[0m\"\n         sudo docker compose up -d\n         ;;\n    [Nn]* )\n        echo \"You can run 'docker compose up -d' later to start Huly.\"\n        ;;\nesac\n\necho -e \"\\033[1;32mSetup is complete!\\n Generating nginx.conf...\\033[0m\"\n./nginx.sh\n"
        },
        {
          "name": "traefik",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}