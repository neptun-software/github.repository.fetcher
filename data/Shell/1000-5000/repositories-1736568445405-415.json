{
  "metadata": {
    "timestamp": 1736568445405,
    "page": 415,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "huyng/bashmarks",
      "stars": 1905,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5390625,
          "content": "# Copyright (c) 2010, Huy Nguyen, http://everyhue.me\n# All rights reserved.\n# \n# Redistribution and use in source and binary forms, with or without modification, are permitted provided \n# that the following conditions are met:\n# \n#     * Redistributions of source code must retain the above copyright notice, this list of conditions \n#       and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n#       following disclaimer in the documentation and/or other materials provided with the distribution.\n#     * Neither the name of Huy Nguyen nor the names of contributors\n#       may be used to endorse or promote products derived from this software without \n#       specific prior written permission.\n#       \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED \n# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR \n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) \n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING \n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \n# POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.6337890625,
          "content": "INSTALL_DIR=~/.local/bin\n\nall:\n\t@echo \"Please run 'make install'\"\n\ninstall:\n\t@echo \"\"\n\tmkdir -p $(INSTALL_DIR)\n\tcp bashmarks.sh $(INSTALL_DIR)\n\t@echo \"\"\n\t@echo \"Please add 'source $(INSTALL_DIR)/bashmarks.sh' to your .bashrc file\"\n\t@echo ''\n\t@echo 'USAGE:'\n\t@echo '------'\n\t@echo 's <bookmark_name> - Saves the current directory as \"bookmark_name\"'\n\t@echo 'g <bookmark_name> - Goes (cd) to the directory associated with \"bookmark_name\"'\n\t@echo 'p <bookmark_name> - Prints the directory associated with \"bookmark_name\"'\n\t@echo 'd <bookmark_name> - Deletes the bookmark'\n\t@echo 'l                 - Lists all available bookmarks'\n\n.PHONY: all install\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.03515625,
          "content": "### Bashmarks is a shell script that allows you to save and jump to commonly used directories. Now supports tab completion.\n\n## Install\n\n1. `git clone git@github.com:huyng/bashmarks.git`\n2. `cd bashmarks`\n3. `make install`\n4. source **~/.local/bin/bashmarks.sh** from within your **~.bash\\_profile** or **~/.bashrc** file\n\n## Shell Commands\n\n    s <bookmark_name> - Saves the current directory as \"bookmark_name\"\n    g <bookmark_name> - Goes (cd) to the directory associated with \"bookmark_name\"\n    p <bookmark_name> - Prints the directory associated with \"bookmark_name\"\n    d <bookmark_name> - Deletes the bookmark\n    l                 - Lists all available bookmarks\n    \n## Example Usage\n\n    $ cd /var/www/\n    $ s webfolder\n    $ cd /usr/local/lib/\n    $ s locallib\n    $ l\n    $ g web<tab>\n    $ g webfolder\n\n## Where Bashmarks are stored\n    \nAll of your directory bookmarks are saved in a file called \".sdirs\" in your HOME directory.\n\n\n## Creators \n\n* [Huy Nguyen](https://github.com/huyng)\n* [Karthick Gururaj](https://github.com/karthick-gururaj)\n"
        },
        {
          "name": "bashmarks.sh",
          "type": "blob",
          "size": 5.23046875,
          "content": "# Copyright (c) 2010, Huy Nguyen, http://www.huyng.com\n# All rights reserved.\n# \n# Redistribution and use in source and binary forms, with or without modification, are permitted provided \n# that the following conditions are met:\n# \n#     * Redistributions of source code must retain the above copyright notice, this list of conditions \n#       and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n#       following disclaimer in the documentation and/or other materials provided with the distribution.\n#     * Neither the name of Huy Nguyen nor the names of contributors\n#       may be used to endorse or promote products derived from this software without \n#       specific prior written permission.\n#       \n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED \n# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR \n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) \n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING \n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \n# POSSIBILITY OF SUCH DAMAGE.\n\n\n# USAGE: \n# s bookmarkname - saves the curr dir as bookmarkname\n# g bookmarkname - jumps to the that bookmark\n# g b[TAB] - tab completion is available\n# p bookmarkname - prints the bookmark\n# p b[TAB] - tab completion is available\n# d bookmarkname - deletes the bookmark\n# d [TAB] - tab completion is available\n# l - list all bookmarks\n\n# setup file to store bookmarks\nif [ ! -n \"$SDIRS\" ]; then\n    SDIRS=~/.sdirs\nfi\ntouch \"$SDIRS\"\n\nRED=\"0;31m\"\nGREEN=\"0;33m\"\n\n# save current directory to bookmarks\nfunction s {\n    check_help $1\n    _bookmark_name_valid \"$@\"\n    if [ -z \"$exit_message\" ]; then\n        _purge_line \"$SDIRS\" \"export DIR_$1=\"\n        CURDIR=$(echo $PWD| sed \"s#^$HOME#\\$HOME#g\")\n        echo \"export DIR_$1=\\\"$CURDIR\\\"\" >> $SDIRS\n    fi\n}\n\n# jump to bookmark\nfunction g {\n    check_help $1\n    source $SDIRS\n    target=\"$(eval $(echo echo $(echo \\$DIR_$1)))\"\n    if [ -d \"$target\" ]; then\n        cd \"$target\"\n    elif [ ! -n \"$target\" ]; then\n        echo -e \"\\033[${RED}WARNING: '${1}' bashmark does not exist\\033[00m\"\n    else\n        echo -e \"\\033[${RED}WARNING: '${target}' does not exist\\033[00m\"\n    fi\n}\n\n# print bookmark\nfunction p {\n    check_help $1\n    source $SDIRS\n    echo \"$(eval $(echo echo $(echo \\$DIR_$1)))\"\n}\n\n# delete bookmark\nfunction d {\n    check_help $1\n    _bookmark_name_valid \"$@\"\n    if [ -z \"$exit_message\" ]; then\n        _purge_line \"$SDIRS\" \"export DIR_$1=\"\n        unset \"DIR_$1\"\n    fi\n}\n\n# print out help for the forgetful\nfunction check_help {\n    if [ \"$1\" = \"-h\" ] || [ \"$1\" = \"-help\" ] || [ \"$1\" = \"--help\" ] ; then\n        echo ''\n        echo 's <bookmark_name> - Saves the current directory as \"bookmark_name\"'\n        echo 'g <bookmark_name> - Goes (cd) to the directory associated with \"bookmark_name\"'\n        echo 'p <bookmark_name> - Prints the directory associated with \"bookmark_name\"'\n        echo 'd <bookmark_name> - Deletes the bookmark'\n        echo 'l                 - Lists all available bookmarks'\n        kill -SIGINT $$\n    fi\n}\n\n# list bookmarks with dirnam\nfunction l {\n    check_help $1\n    source $SDIRS\n        \n    # if color output is not working for you, comment out the line below '\\033[1;32m' == \"red\"\n    env | sort | awk '/^DIR_.+/{split(substr($0,5),parts,\"=\"); printf(\"\\033[0;33m%-20s\\033[0m %s\\n\", parts[1], parts[2]);}'\n    \n    # uncomment this line if color output is not working with the line above\n    # env | grep \"^DIR_\" | cut -c5- | sort |grep \"^.*=\" \n}\n# list bookmarks without dirname\nfunction _l {\n    source $SDIRS\n    env | grep \"^DIR_\" | cut -c5- | sort | grep \"^.*=\" | cut -f1 -d \"=\" \n}\n\n# validate bookmark name\nfunction _bookmark_name_valid {\n    exit_message=\"\"\n    if [ -z $1 ]; then\n        exit_message=\"bookmark name required\"\n        echo $exit_message\n    elif [ \"$1\" != \"$(echo $1 | sed 's/[^A-Za-z0-9_]//g')\" ]; then\n        exit_message=\"bookmark name is not valid\"\n        echo $exit_message\n    fi\n}\n\n# completion command\nfunction _comp {\n    local curw\n    COMPREPLY=()\n    curw=${COMP_WORDS[COMP_CWORD]}\n    COMPREPLY=($(compgen -W '`_l`' -- $curw))\n    return 0\n}\n\n# ZSH completion command\nfunction _compzsh {\n    reply=($(_l))\n}\n\n# safe delete line from sdirs\nfunction _purge_line {\n    if [ -s \"$1\" ]; then\n        # safely create a temp file\n        t=$(mktemp -t bashmarks.XXXXXX) || exit 1\n        trap \"/bin/rm -f -- '$t'\" EXIT\n\n        # purge line\n        sed \"/$2/d\" \"$1\" > \"$t\"\n        /bin/mv \"$t\" \"$1\"\n\n        # cleanup temp file\n        /bin/rm -f -- \"$t\"\n        trap - EXIT\n    fi\n}\n\n# bind completion command for g,p,d to _comp\nif [ $ZSH_VERSION ]; then\n    compctl -K _compzsh g\n    compctl -K _compzsh p\n    compctl -K _compzsh d\nelse\n    shopt -s progcomp\n    complete -F _comp g\n    complete -F _comp p\n    complete -F _comp d\nfi\n"
        }
      ]
    }
  ]
}