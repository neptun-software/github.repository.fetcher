{
  "metadata": {
    "timestamp": 1736568221756,
    "page": 79,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "puckel/docker-airflow",
      "stars": 3789,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": ".git\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4638671875,
          "content": "### Vim ###\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n### SublimeText ###\n# cache files for sublime text\n*.tmlanguage.cache\n*.tmPreferences.cache\n*.stTheme.cache\n\n# workspace files are user-specific\n*.sublime-workspace\n\n# project files should be checked into the repository, unless a significant\n# proportion of contributors will probably not be using SublimeText\n# *.sublime-project\n\n# sftp configuration file\nsftp-config.json\n\n# Python\n__pycache__\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.369140625,
          "content": "# VERSION 1.10.9\n# AUTHOR: Matthieu \"Puckel_\" Roisil\n# DESCRIPTION: Basic Airflow container\n# BUILD: docker build --rm -t puckel/docker-airflow .\n# SOURCE: https://github.com/puckel/docker-airflow\n\nFROM python:3.7-slim-buster\nLABEL maintainer=\"Puckel_\"\n\n# Never prompt the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n# Airflow\nARG AIRFLOW_VERSION=1.10.9\nARG AIRFLOW_USER_HOME=/usr/local/airflow\nARG AIRFLOW_DEPS=\"\"\nARG PYTHON_DEPS=\"\"\nENV AIRFLOW_HOME=${AIRFLOW_USER_HOME}\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\n\n# Disable noisy \"Handling signal\" log messages:\n# ENV GUNICORN_CMD_ARGS --log-level WARNING\n\nRUN set -ex \\\n    && buildDeps=' \\\n        freetds-dev \\\n        libkrb5-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        libpq-dev \\\n        git \\\n    ' \\\n    && apt-get update -yqq \\\n    && apt-get upgrade -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n        $buildDeps \\\n        freetds-bin \\\n        build-essential \\\n        default-libmysqlclient-dev \\\n        apt-utils \\\n        curl \\\n        rsync \\\n        netcat \\\n        locales \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n    && useradd -ms /bin/bash -d ${AIRFLOW_USER_HOME} airflow \\\n    && pip install -U pip setuptools wheel \\\n    && pip install pytz \\\n    && pip install pyOpenSSL \\\n    && pip install ndg-httpsclient \\\n    && pip install pyasn1 \\\n    && pip install apache-airflow[crypto,celery,postgres,hive,jdbc,mysql,ssh${AIRFLOW_DEPS:+,}${AIRFLOW_DEPS}]==${AIRFLOW_VERSION} \\\n    && pip install 'redis==3.2' \\\n    && if [ -n \"${PYTHON_DEPS}\" ]; then pip install ${PYTHON_DEPS}; fi \\\n    && apt-get purge --auto-remove -yqq $buildDeps \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nCOPY script/entrypoint.sh /entrypoint.sh\nCOPY config/airflow.cfg ${AIRFLOW_USER_HOME}/airflow.cfg\n\nRUN chown -R airflow: ${AIRFLOW_USER_HOME}\n\nEXPOSE 8080 5555 8793\n\nUSER airflow\nWORKDIR ${AIRFLOW_USER_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"webserver\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0888671875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017 Matthieu \"Puckel_\" Roisil\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7646484375,
          "content": "# docker-airflow\n[![CI status](https://github.com/puckel/docker-airflow/workflows/CI/badge.svg?branch=master)](https://github.com/puckel/docker-airflow/actions?query=workflow%3ACI+branch%3Amaster+event%3Apush)\n[![Docker Build status](https://img.shields.io/docker/build/puckel/docker-airflow?style=plastic)](https://hub.docker.com/r/puckel/docker-airflow/tags?ordering=last_updated)\n\n[![Docker Hub](https://img.shields.io/badge/docker-ready-blue.svg)](https://hub.docker.com/r/puckel/docker-airflow/)\n[![Docker Pulls](https://img.shields.io/docker/pulls/puckel/docker-airflow.svg)]()\n[![Docker Stars](https://img.shields.io/docker/stars/puckel/docker-airflow.svg)]()\n\nThis repository contains **Dockerfile** of [apache-airflow](https://github.com/apache/incubator-airflow) for [Docker](https://www.docker.com/)'s [automated build](https://registry.hub.docker.com/u/puckel/docker-airflow/) published to the public [Docker Hub Registry](https://registry.hub.docker.com/).\n\n## Informations\n\n* Based on Python (3.7-slim-buster) official Image [python:3.7-slim-buster](https://hub.docker.com/_/python/) and uses the official [Postgres](https://hub.docker.com/_/postgres/) as backend and [Redis](https://hub.docker.com/_/redis/) as queue\n* Install [Docker](https://www.docker.com/)\n* Install [Docker Compose](https://docs.docker.com/compose/install/)\n* Following the Airflow release from [Python Package Index](https://pypi.python.org/pypi/apache-airflow)\n\n## Installation\n\nPull the image from the Docker repository.\n\n    docker pull puckel/docker-airflow\n\n## Build\n\nOptionally install [Extra Airflow Packages](https://airflow.incubator.apache.org/installation.html#extra-package) and/or python dependencies at build time :\n\n    docker build --rm --build-arg AIRFLOW_DEPS=\"datadog,dask\" -t puckel/docker-airflow .\n    docker build --rm --build-arg PYTHON_DEPS=\"flask_oauthlib>=0.9\" -t puckel/docker-airflow .\n\nor combined\n\n    docker build --rm --build-arg AIRFLOW_DEPS=\"datadog,dask\" --build-arg PYTHON_DEPS=\"flask_oauthlib>=0.9\" -t puckel/docker-airflow .\n\nDon't forget to update the airflow images in the docker-compose files to puckel/docker-airflow:latest.\n\n## Usage\n\nBy default, docker-airflow runs Airflow with **SequentialExecutor** :\n\n    docker run -d -p 8080:8080 puckel/docker-airflow webserver\n\nIf you want to run another executor, use the other docker-compose.yml files provided in this repository.\n\nFor **LocalExecutor** :\n\n    docker-compose -f docker-compose-LocalExecutor.yml up -d\n\nFor **CeleryExecutor** :\n\n    docker-compose -f docker-compose-CeleryExecutor.yml up -d\n\nNB : If you want to have DAGs example loaded (default=False), you've to set the following environment variable :\n\n`LOAD_EX=n`\n\n    docker run -d -p 8080:8080 -e LOAD_EX=y puckel/docker-airflow\n\nIf you want to use Ad hoc query, make sure you've configured connections:\nGo to Admin -> Connections and Edit \"postgres_default\" set this values (equivalent to values in airflow.cfg/docker-compose*.yml) :\n- Host : postgres\n- Schema : airflow\n- Login : airflow\n- Password : airflow\n\nFor encrypted connection passwords (in Local or Celery Executor), you must have the same fernet_key. By default docker-airflow generates the fernet_key at startup, you have to set an environment variable in the docker-compose (ie: docker-compose-LocalExecutor.yml) file to set the same key accross containers. To generate a fernet_key :\n\n    docker run puckel/docker-airflow python -c \"from cryptography.fernet import Fernet; FERNET_KEY = Fernet.generate_key().decode(); print(FERNET_KEY)\"\n\n## Configuring Airflow\n\nIt's possible to set any configuration value for Airflow from environment variables, which are used over values from the airflow.cfg.\n\nThe general rule is the environment variable should be named `AIRFLOW__<section>__<key>`, for example `AIRFLOW__CORE__SQL_ALCHEMY_CONN` sets the `sql_alchemy_conn` config option in the `[core]` section.\n\nCheck out the [Airflow documentation](http://airflow.readthedocs.io/en/latest/howto/set-config.html#setting-configuration-options) for more details\n\nYou can also define connections via environment variables by prefixing them with `AIRFLOW_CONN_` - for example `AIRFLOW_CONN_POSTGRES_MASTER=postgres://user:password@localhost:5432/master` for a connection called \"postgres_master\". The value is parsed as a URI. This will work for hooks etc, but won't show up in the \"Ad-hoc Query\" section unless an (empty) connection is also created in the DB\n\n## Custom Airflow plugins\n\nAirflow allows for custom user-created plugins which are typically found in `${AIRFLOW_HOME}/plugins` folder. Documentation on plugins can be found [here](https://airflow.apache.org/plugins.html)\n\nIn order to incorporate plugins into your docker container\n- Create the plugins folders `plugins/` with your custom plugins.\n- Mount the folder as a volume by doing either of the following:\n    - Include the folder as a volume in command-line `-v $(pwd)/plugins/:/usr/local/airflow/plugins`\n    - Use docker-compose-LocalExecutor.yml or docker-compose-CeleryExecutor.yml which contains support for adding the plugins folder as a volume\n\n## Install custom python package\n\n- Create a file \"requirements.txt\" with the desired python modules\n- Mount this file as a volume `-v $(pwd)/requirements.txt:/requirements.txt` (or add it as a volume in docker-compose file)\n- The entrypoint.sh script execute the pip install command (with --user option)\n\n## UI Links\n\n- Airflow: [localhost:8080](http://localhost:8080/)\n- Flower: [localhost:5555](http://localhost:5555/)\n\n\n## Scale the number of workers\n\nEasy scaling using docker-compose:\n\n    docker-compose -f docker-compose-CeleryExecutor.yml scale worker=5\n\nThis can be used to scale to a multi node setup using docker swarm.\n\n## Running other airflow commands\n\nIf you want to run other airflow sub-commands, such as `list_dags` or `clear` you can do so like this:\n\n    docker run --rm -ti puckel/docker-airflow airflow list_dags\n\nor with your docker-compose set up like this:\n\n    docker-compose -f docker-compose-CeleryExecutor.yml run --rm webserver airflow list_dags\n\nYou can also use this to run a bash shell or any other command in the same environment that airflow would be run in:\n\n    docker run --rm -ti puckel/docker-airflow bash\n    docker run --rm -ti puckel/docker-airflow ipython\n\n# Simplified SQL database configuration using PostgreSQL\n\nIf the executor type is set to anything else than *SequentialExecutor* you'll need an SQL database.\nHere is a list of PostgreSQL configuration variables and their default values. They're used to compute\nthe `AIRFLOW__CORE__SQL_ALCHEMY_CONN` and `AIRFLOW__CELERY__RESULT_BACKEND` variables when needed for you\nif you don't provide them explicitly:\n\n| Variable            | Default value |  Role                |\n|---------------------|---------------|----------------------|\n| `POSTGRES_HOST`     | `postgres`    | Database server host |\n| `POSTGRES_PORT`     | `5432`        | Database server port |\n| `POSTGRES_USER`     | `airflow`     | Database user        |\n| `POSTGRES_PASSWORD` | `airflow`     | Database password    |\n| `POSTGRES_DB`       | `airflow`     | Database name        |\n| `POSTGRES_EXTRAS`   | empty         | Extras parameters    |\n\nYou can also use those variables to adapt your compose file to match an existing PostgreSQL instance managed elsewhere.\n\nPlease refer to the Airflow documentation to understand the use of extras parameters, for example in order to configure\na connection that uses TLS encryption.\n\nHere's an important thing to consider:\n\n> When specifying the connection as URI (in AIRFLOW_CONN_* variable) you should specify it following the standard syntax of DB connections,\n> where extras are passed as parameters of the URI (note that all components of the URI should be URL-encoded).\n\nTherefore you must provide extras parameters URL-encoded, starting with a leading `?`. For example:\n\n    POSTGRES_EXTRAS=\"?sslmode=verify-full&sslrootcert=%2Fetc%2Fssl%2Fcerts%2Fca-certificates.crt\"\n\n# Simplified Celery broker configuration using Redis\n\nIf the executor type is set to *CeleryExecutor* you'll need a Celery broker. Here is a list of Redis configuration variables\nand their default values. They're used to compute the `AIRFLOW__CELERY__BROKER_URL` variable for you if you don't provide\nit explicitly:\n\n| Variable          | Default value | Role                           |\n|-------------------|---------------|--------------------------------|\n| `REDIS_PROTO`     | `redis://`    | Protocol                       |\n| `REDIS_HOST`      | `redis`       | Redis server host              |\n| `REDIS_PORT`      | `6379`        | Redis server port              |\n| `REDIS_PASSWORD`  | empty         | If Redis is password protected |\n| `REDIS_DBNUM`     | `1`           | Database number                |\n\nYou can also use those variables to adapt your compose file to match an existing Redis instance managed elsewhere.\n\n# Wanna help?\n\nFork, improve and PR.\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "dags",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-CeleryExecutor.yml",
          "type": "blob",
          "size": 2.7841796875,
          "content": "version: '2.1'\nservices:\n    redis:\n        image: 'redis:5.0.5'\n        # command: redis-server --requirepass redispass\n\n    postgres:\n        image: postgres:9.6\n        environment:\n            - POSTGRES_USER=airflow\n            - POSTGRES_PASSWORD=airflow\n            - POSTGRES_DB=airflow\n        # Uncomment these lines to persist data on the local filesystem.\n        #     - PGDATA=/var/lib/postgresql/data/pgdata\n        # volumes:\n        #     - ./pgdata:/var/lib/postgresql/data/pgdata\n\n    webserver:\n        image: puckel/docker-airflow:1.10.9\n        restart: always\n        depends_on:\n            - postgres\n            - redis\n        environment:\n            - LOAD_EX=n\n            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=\n            - EXECUTOR=Celery\n            # - POSTGRES_USER=airflow\n            # - POSTGRES_PASSWORD=airflow\n            # - POSTGRES_DB=airflow\n            # - REDIS_PASSWORD=redispass\n        volumes:\n            - ./dags:/usr/local/airflow/dags\n            # Uncomment to include custom plugins\n            # - ./plugins:/usr/local/airflow/plugins\n        ports:\n            - \"8080:8080\"\n        command: webserver\n        healthcheck:\n            test: [\"CMD-SHELL\", \"[ -f /usr/local/airflow/airflow-webserver.pid ]\"]\n            interval: 30s\n            timeout: 30s\n            retries: 3\n\n    flower:\n        image: puckel/docker-airflow:1.10.9\n        restart: always\n        depends_on:\n            - redis\n        environment:\n            - EXECUTOR=Celery\n            # - REDIS_PASSWORD=redispass\n        ports:\n            - \"5555:5555\"\n        command: flower\n\n    scheduler:\n        image: puckel/docker-airflow:1.10.9\n        restart: always\n        depends_on:\n            - webserver\n        volumes:\n            - ./dags:/usr/local/airflow/dags\n            # Uncomment to include custom plugins\n            # - ./plugins:/usr/local/airflow/plugins\n        environment:\n            - LOAD_EX=n\n            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=\n            - EXECUTOR=Celery\n            # - POSTGRES_USER=airflow\n            # - POSTGRES_PASSWORD=airflow\n            # - POSTGRES_DB=airflow\n            # - REDIS_PASSWORD=redispass\n        command: scheduler\n\n    worker:\n        image: puckel/docker-airflow:1.10.9\n        restart: always\n        depends_on:\n            - scheduler\n        volumes:\n            - ./dags:/usr/local/airflow/dags\n            # Uncomment to include custom plugins\n            # - ./plugins:/usr/local/airflow/plugins\n        environment:\n            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=\n            - EXECUTOR=Celery\n            # - POSTGRES_USER=airflow\n            # - POSTGRES_PASSWORD=airflow\n            # - POSTGRES_DB=airflow\n            # - REDIS_PASSWORD=redispass\n        command: worker\n"
        },
        {
          "name": "docker-compose-LocalExecutor.yml",
          "type": "blob",
          "size": 0.93359375,
          "content": "version: '3.7'\nservices:\n    postgres:\n        image: postgres:9.6\n        environment:\n            - POSTGRES_USER=airflow\n            - POSTGRES_PASSWORD=airflow\n            - POSTGRES_DB=airflow\n        logging:\n            options:\n                max-size: 10m\n                max-file: \"3\"\n\n    webserver:\n        image: puckel/docker-airflow:1.10.9\n        restart: always\n        depends_on:\n            - postgres\n        environment:\n            - LOAD_EX=n\n            - EXECUTOR=Local\n        logging:\n            options:\n                max-size: 10m\n                max-file: \"3\"\n        volumes:\n            - ./dags:/usr/local/airflow/dags\n            # - ./plugins:/usr/local/airflow/plugins\n        ports:\n            - \"8080:8080\"\n        command: webserver\n        healthcheck:\n            test: [\"CMD-SHELL\", \"[ -f /usr/local/airflow/airflow-webserver.pid ]\"]\n            interval: 30s\n            timeout: 30s\n            retries: 3\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}