{
  "metadata": {
    "timestamp": 1736568208968,
    "page": 57,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyenv/pyenv-installer",
      "stars": 4008,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0458984375,
          "content": "*pyenv-package.tar.gz\n\n*.swo\n*.swp\n\n.vagrant/*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "Copyright (c) 2013-2025 Yamashita, Yuu\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.3916015625,
          "content": "pyenv installer\n===============\n\nThis tool installs `pyenv <https://github.com/pyenv/pyenv>`__ and friends. It is inspired by `rbenv-installer <https://github.com/rbenv/rbenv-installer>`__.\n\nPrerequisites\n----\n`Git <https://git-scm.com/>`__ installed.\n\nIn general, compiling your own Python interpreter requires the installation of the\nappropriate libraries and packages.  The `installation wiki\n<https://github.com/pyenv/pyenv/wiki/Common-build-problems>`__ provides a list of these for common\noperating systems.\n\n\nInstallation / Update / Uninstallation\n--------------------------------------\nOnce prerequisites have been installed correctly: \n\nInstall:\n~~~~\nIf you wish to install a specific release of Pyenv rather than the latest head, set the ``PYENV_GIT_TAG`` environment variable (e.g. ``export PYENV_GIT_TAG=v2.2.5``).\n\n.. code:: bash\n\n    curl https://pyenv.run | bash\n    \n``pyenv.run`` redirects to the install script in this repository and the invocation above is equivalent to::\n\n    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash\n\nAfter installing, follow `these instructions <https://github.com/pyenv/pyenv#set-up-your-shell-environment-for-pyenv>`_ to set up your shell environment.\n\nYou can now begin using pyenv.\n\nIf you need, ``export USE_SSH`` to use ``git@github.com``(SSH pseudo-URL) instead of ``https://`` for git clone. (Need to have `ssh` installled.)\n\nUpdate:\n~~~~\n\n.. code:: bash\n\n    pyenv update\n\nUninstall:\n~~~~\n\n``pyenv`` is installed within ``$PYENV_ROOT``\n(default: ``~/.pyenv``). To uninstall, just remove it:\n\n.. code:: bash\n\n    rm -fr ~/.pyenv\n    \nthen remove these three lines from ``.bashrc``:\n\n.. code:: bash\n\n    export PATH=\"$HOME/.pyenv/bin:$PATH\"\n    eval \"$(pyenv init --path)\"\n    eval \"$(pyenv virtualenv-init -)\"\n\nand finally, restart your shell:\n\n.. code:: bash\n\n    exec $SHELL\n\n          \n\n\nUsing pyenv-installer on Travis CI\n----------------------------------\n\nTravis itself uses pyenv and therefore ``PYENV_ROOT`` is set already. To make it work anyway the installation for pyenv-installer needs to look like this::\n\n  [...]\n  - unset PYENV_ROOT\n  - curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash\n  - export PATH=\"$HOME/.pyenv/bin:$PATH\"\n  - pyenv install 3.5.2\n\nDevelopment and testing\n-----------------------\n\nThe `project on github <https://github.com/pyenv/pyenv-installer>`__ contains\na setup for vagrant to test the installer inside a vagrant managed virtual image.\n\nIf you don't know vagrant yet: just `install the latest\npackage <https://www.vagrantup.com/downloads.html>`__, open a shell in\nthis project directory and say\n\n::\n\n    vagrant up\n    vagrant ssh\n\nNow you are inside the vagrant container and your prompt should like\nsomething like ``vagrant@vagrant-ubuntu-trusty-64:~$``\n\nThe project (this repository) is mapped into the vagrant image at\n/vagrant\n\n.. code:: bash\n\n    cd /vagrant\n    python setup.py install\n    echo 'export PATH=\"$HOME/.pyenv/bin:$PATH\"' >> ~/.bashrc\n    echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc\n    echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc\n    source ~/.bashrc\n\nPyenv should be installed and responding now.\n\n\nVersion History\n---------------\n\n20190111\n~~~~~~~~\n\n-  Remove experimental PyPi support and replace with a dummy package.\n\n20150113\n~~~~~~~~\n\n-  Initial release on PyPi.\n\n20130601\n~~~~~~~~\n\n-  Initial public release.\n\n\nLicense\n-------\n\nMIT - see `License file <LICENSE>`_.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.4326171875,
          "content": "VAGRANTFILE_API_VERSION = \"2\"\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n    config.vm.box = \"ubuntu/trusty64\"\n\n    config.vm.synced_folder \"vagrant-salt/\", \"/srv/salt/\"\n    config.vm.provision :salt do |saltCnf|\n        saltCnf.verbose = true\n        saltCnf.minion_config = './vagrant-salt/minion'\n        saltCnf.run_highstate = true\n        saltCnf.bootstrap_options = '-D'\n        saltCnf.temp_config_dir = '/tmp'\n    end\nend\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pypi-dummy",
          "type": "tree",
          "content": null
        },
        {
          "name": "vagrant-salt",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}