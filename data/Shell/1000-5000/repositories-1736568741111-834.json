{
  "metadata": {
    "timestamp": 1736568741111,
    "page": 834,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nahamsec/bbht",
      "stars": 1175,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.5888671875,
          "content": "# BBHT\n\nBug Bounty Hunting Tools is a script to install the most popular tools used while looking for vulnerabilities for a bug bounty program.\n \n# Tools\n\n- dirsearch\n- JSParser\n- knockpy\n- lazys3\n- recon_profile\n- sqlmap-dev\n- Sublist3r\n- teh_s3_bucketeers\n- virtual-host-discovery\n- wpscan\n- webscreenshot\n- Massdns\n- Asnlookup\n- Unfurl\n- Waybackurls\n- Httprobe\n- Seclists collection\n\nThis script also grabs the aliases created and published here:\nhttps://github.com/nahamsec/recon_profile\n\n\n# Installing\n- git clone https://github.com/nahamsec/bbht.git\n- cd bbht\n- chmod +x install.sh\n- ./install.sh\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 4.4677734375,
          "content": "#!/bin/bash\nsudo apt-get -y update\nsudo apt-get -y upgrade\n\n\nsudo apt-get install -y libcurl4-openssl-dev\nsudo apt-get install -y libssl-dev\nsudo apt-get install -y jq\nsudo apt-get install -y ruby-full\nsudo apt-get install -y libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev build-essential libgmp-dev zlib1g-dev\nsudo apt-get install -y build-essential libssl-dev libffi-dev python-dev\nsudo apt-get install -y python-setuptools\nsudo apt-get install -y libldns-dev\nsudo apt-get install -y python3-pip\nsudo apt-get install -y python-pip\nsudo apt-get install -y python-dnspython\nsudo apt-get install -y git\nsudo apt-get install -y rename\nsudo apt-get install -y xargs\n\necho \"installing bash_profile aliases from recon_profile\"\ngit clone https://github.com/nahamsec/recon_profile.git\ncd recon_profile\ncat bash_profile >> ~/.bash_profile\nsource ~/.bash_profile\ncd ~/tools/\necho \"done\"\n\n\n\n#install go\nif [[ -z \"$GOPATH\" ]];then\necho \"It looks like go is not installed, would you like to install it now\"\nPS3=\"Please select an option : \"\nchoices=(\"yes\" \"no\")\nselect choice in \"${choices[@]}\"; do\n        case $choice in\n                yes)\n\n\t\t\t\t\techo \"Installing Golang\"\n\t\t\t\t\twget https://dl.google.com/go/go1.13.4.linux-amd64.tar.gz\n\t\t\t\t\tsudo tar -xvf go1.13.4.linux-amd64.tar.gz\n\t\t\t\t\tsudo mv go /usr/local\n\t\t\t\t\texport GOROOT=/usr/local/go\n\t\t\t\t\texport GOPATH=$HOME/go\n\t\t\t\t\texport PATH=$GOPATH/bin:$GOROOT/bin:$PATH\n\t\t\t\t\techo 'export GOROOT=/usr/local/go' >> ~/.bash_profile\n\t\t\t\t\techo 'export GOPATH=$HOME/go'\t>> ~/.bash_profile\t\t\t\n\t\t\t\t\techo 'export PATH=$GOPATH/bin:$GOROOT/bin:$PATH' >> ~/.bash_profile\t\n\t\t\t\t\tsource ~/.bash_profile\n\t\t\t\t\tsleep 1\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\tno)\n\t\t\t\t\techo \"Please install go and rerun this script\"\n\t\t\t\t\techo \"Aborting installation...\"\n\t\t\t\t\texit 1\n\t\t\t\t\t;;\n\tesac\t\ndone\nfi\n\n\n#Don't forget to set up AWS credentials!\necho \"Don't forget to set up AWS credentials!\"\napt install -y awscli\necho \"Don't forget to set up AWS credentials!\"\n\n\n\n#create a tools folder in ~/\nmkdir ~/tools\ncd ~/tools/\n\n#install aquatone\necho \"Installing Aquatone\"\ngo get github.com/michenriksen/aquatone\necho \"done\"\n\n#install chromium\necho \"Installing Chromium\"\nsudo snap install chromium\necho \"done\"\n\necho \"installing JSParser\"\ngit clone https://github.com/nahamsec/JSParser.git\ncd JSParser*\nsudo python setup.py install\ncd ~/tools/\necho \"done\"\n\necho \"installing Sublist3r\"\ngit clone https://github.com/aboul3la/Sublist3r.git\ncd Sublist3r*\npip install -r requirements.txt\ncd ~/tools/\necho \"done\"\n\n\necho \"installing teh_s3_bucketeers\"\ngit clone https://github.com/tomdev/teh_s3_bucketeers.git\ncd ~/tools/\necho \"done\"\n\n\necho \"installing wpscan\"\ngit clone https://github.com/wpscanteam/wpscan.git\ncd wpscan*\nsudo gem install bundler && bundle install --without test\ncd ~/tools/\necho \"done\"\n\necho \"installing dirsearch\"\ngit clone https://github.com/maurosoria/dirsearch.git\ncd ~/tools/\necho \"done\"\n\n\necho \"installing lazys3\"\ngit clone https://github.com/nahamsec/lazys3.git\ncd ~/tools/\necho \"done\"\n\necho \"installing virtual host discovery\"\ngit clone https://github.com/jobertabma/virtual-host-discovery.git\ncd ~/tools/\necho \"done\"\n\n\necho \"installing sqlmap\"\ngit clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev\ncd ~/tools/\necho \"done\"\n\necho \"installing knock.py\"\ngit clone https://github.com/guelfoweb/knock.git\ncd ~/tools/\necho \"done\"\n\necho \"installing lazyrecon\"\ngit clone https://github.com/nahamsec/lazyrecon.git\ncd ~/tools/\necho \"done\"\n\necho \"installing nmap\"\nsudo apt-get install -y nmap\necho \"done\"\n\necho \"installing massdns\"\ngit clone https://github.com/blechschmidt/massdns.git\ncd ~/tools/massdns\nmake\ncd ~/tools/\necho \"done\"\n\necho \"installing asnlookup\"\ngit clone https://github.com/yassineaboukir/asnlookup.git\ncd ~/tools/asnlookup\npip install -r requirements.txt\ncd ~/tools/\necho \"done\"\n\necho \"installing httprobe\"\ngo get -u github.com/tomnomnom/httprobe \necho \"done\"\n\necho \"installing unfurl\"\ngo get -u github.com/tomnomnom/unfurl \necho \"done\"\n\necho \"installing waybackurls\"\ngo get github.com/tomnomnom/waybackurls\necho \"done\"\n\necho \"installing crtndstry\"\ngit clone https://github.com/nahamsec/crtndstry.git\necho \"done\"\n\necho \"downloading Seclists\"\ncd ~/tools/\ngit clone https://github.com/danielmiessler/SecLists.git\ncd ~/tools/SecLists/Discovery/DNS/\n##THIS FILE BREAKS MASSDNS AND NEEDS TO BE CLEANED\ncat dns-Jhaddix.txt | head -n -14 > clean-jhaddix-dns.txt\ncd ~/tools/\necho \"done\"\n\n\n\necho -e \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDone! All tools are set up in ~/tools\"\nls -la\necho \"One last time: don't forget to set up AWS credentials in ~/.aws/!\"\n"
        }
      ]
    }
  ]
}