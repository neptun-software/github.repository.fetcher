{
  "metadata": {
    "timestamp": 1736568279323,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "helmuthdu/aui",
      "stars": 2819,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.189453125,
          "content": "### Jetbrains\n.idea/*\n\n### Intellij idea\n*.iml\n\n### VisualStudioCode\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n### Local log files\n*.log"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.302734375,
          "content": "### Project only accepting patches\nThis project is not actively developed but *will* accept Pull Requests.\n\n<h1 align=\"center\">\n  <a href=https://www.archlinux.org/>Archlinux</a> Ultimate Installer\n</h1>\n<h4 align=\"center\">Installation & Configuration of archlinux has never been much easier!</h4>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/badge/Maintained%3F-Yes-green?style=for-the-badge\">\n  <img src=\"https://img.shields.io/github/license/helmuthdu/aui?style=for-the-badge\">\n  <img src=\"https://img.shields.io/github/issues/helmuthdu/aui?color=violet&style=for-the-badge\">\n  <img src=\"https://img.shields.io/github/stars/helmuthdu/aui?style=for-the-badge\">\n  <img src=\"https://img.shields.io/github/forks/helmuthdu/aui?color=teal&style=for-the-badge\">\n</p>\n\n## Note\n* You can first try it in a `VirtualMachine`\n\n## Prerequisites\n\n- A working internet connection\n- Logged in as 'root'\n\n## Obtaining The Repository\n### With git\n- Increase cowspace partition: `mount -o remount,size=2G /run/archiso/cowspace`\n- Get list of packages and install git: `pacman -Sy git`\n- Get the script: `git clone https://github.com/helmuthdu/aui`\n\n### Without git\n- Increase cowspace partition: `mount -o remount,size=2G /run/archiso/cowspace`\n- Get the script: ` wget https://github.com/helmuthdu/aui/tarball/master -O - | tar xz`\n    - an alternate URL (for less typing (github shorten)) is ` wget https://git.io/vS1GH -O - | tar xz`\n    - an alternate URL (for less typing) is ` wget http://bit.ly/NoUPC6 -O - | tar xz`\n    - super short `wget ow.ly/wnFgh -O aui.zip`\n\n## How to use\n- FIFO [System Base]: `cd aui ; ./fifo`\n- LILO [The Rest]: `cd aui ; ./lilo`\n\n## Features\n### FIFO SCRIPT\n- Configure keymap\n- Select editor\n- Automatic configure mirrorlist\n- Create partition\n- Format device\n- Install system base\n- Configure fstab\n- Configure hostname\n- Configure timezone\n- Configure hardware clock\n- Configure locale\n- Configure mkinitcpio\n- Install/Configure bootloader\n- Configure mirrorlist\n- Configure root password\n\n### LILO SCRIPT\n- Backup all modified files\n- Install additional repositories\n- Create and configure new user\n- Install and configure sudo\n- Automatic enable services in systemd\n- Install an AUR Helper [trizen, yay...]\n- Install Base System\n- Install systemd\n- Install Preload\n- Install Zram\n- Install Xorg\n- Install GPU Drivers\n- Install CUPS\n- Install Additional wireless/bluetooth firmwares\n- Ensuring access to GIT through a firewall\n- Install DE or WM [Cinnamon, Enlightenment, FluxBox, GNOME, i3, KDE, LXDE, OpenBox, XFCE...]\n- Install Developement tools [Vim, Emacs, Eclipse...]\n- Install Office apps [LibreOffice, GNOME-Office, Latex...]\n- Install System tools [Wine, Virtualbox, Grsync, Htop...]\n- Install Graphics apps [Inkscape, Gimp, Blender, MComix...]\n- Install Internet apps [Firefox, Google-Chrome, Jdownloader...]\n- Install Multimedia apps [Rhythmbox, Clementine, Codecs...]\n- Install Games [Desura, PlayOnLinux, Steam, Minecraft...]\n- Install Fonts [Liberation, MS-Fonts, Google-webfonts...]\n- Install and configure Web Servers\n- And Many More...\n\n\n## Thank helmuthdu\nIf you like my work, please consider a small Paypal donation at helmuthdu@gmail.com :)\n\n## License :scroll:\nThis project is licenced under the GNU General Public License V3. For more information, see the `LICENSE` file or visit https://www.gnu.org/licenses/gpl-3.0.en.html.\n"
        },
        {
          "name": "fifo",
          "type": "blob",
          "size": 31.6025390625,
          "content": "#!/bin/bash\n# FIX THIS ISSUES | NON-ACUTE\n#shellcheck disable=SC1091,SC2001,SC2015,SC2153,SC2154,SC2155,SC2181,SC2207\n\n: 'ATTENTION!:\n--------------------------------------------------\n|  Created by helmuthdu <helmuthdu@gmail.com>    |\n|  Shellchecked by uniminin <uniminin@zoho.com>  |\n|  Formatted by molese <molese@protonmail.com>   |\n--------------------------------------------------\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n------------------------------------------------------------------------\nRun this script after your first boot with archlinux (as root)\n'\n\nif [[ -f $(pwd)/sharedfuncs ]]; then\n\tsource sharedfuncs\nelse\n\techo \"missing file: sharedfuncs\"\n\texit 1\nfi\n\n#ARCHLINUX INSTALL SCRIPTS MODE {{{\n#SELECT KEYMAP {{{\nselect_keymap() {\n\tprint_title \"KEYMAP - https://wiki.archlinux.org/index.php/KEYMAP\"\n\tkeymap_list=($(find /usr/share/kbd/keymaps/ -type f -printf \"%f\\n\" | sort -V | sed 's/.map.gz//g'))\n\tPS3=\"$prompt1\"\n\tprint_info \"The KEYMAP variable is specified in the /etc/rc.conf file. It defines what keymap the keyboard is in the virtual consoles. Keytable files are provided by the kbd package.\"\n\techo \"keymap list in /usr/share/kbd/keymaps\"\n\tselect KEYMAP in \"${keymap_list[@]}\"; do\n\t\tif contains_element \"$KEYMAP\" \"${keymap_list[@]}\"; then\n\t\t\tloadkeys \"$KEYMAP\"\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\n#}}}\n#DEFAULT EDITOR {{{\nselect_editor() {\n\tprint_title \"DEFAULT EDITOR\"\n\teditors_list=(\"emacs\" \"nano\" \"vi\" \"vim\" \"neovim\" \"zile\")\n\tPS3=\"$prompt1\"\n\techo -e \"Select editor\\n\"\n\tselect EDITOR in \"${editors_list[@]}\"; do\n\t\tif contains_element \"$EDITOR\" \"${editors_list[@]}\"; then\n\t\t\tpackage_install \"$EDITOR\"\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\n#}}}\n#MIRRORLIST {{{\nconfigure_mirrorlist() {\n\t# Modified from: https://stackoverflow.com/a/24628676\n\tSAVEIFS=$IFS\n\tIFS=$'\\n'\n\t#`reflector --list-countries | sed 's/[0-9]//g' | sed 's/\\s*$//g' | sed -r 's/(.*) /\\1./' | cut -d '.' -f 1 | sed 's/\\s*$//g'`\n\tlocal countries_name=($( (reflector --list-countries) | sed 's/[0-9]//g' | sed 's/\\s*$//g' | sed -r 's/(.*) /\\1./' | cut -d '.' -f 1 | sed 's/\\s*$//g'))\n\tIFS=$SAVEIFS\n\tcountry_list() {\n\t\tPS3=\"$prompt1\"\n\t\techo \"Select your country:\"\n\t\tselect country_name in \"${countries_name[@]}\"; do\n\t\t\tif contains_element \"$country_name\" \"${countries_name[@]}\"; then\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\tdone\n\t}\n\tprint_title \"MIRRORLIST - https://wiki.archlinux.org/index.php/Mirrors\"\n\tprint_info \"This option is a guide to selecting and configuring your mirrors, and a listing of current available mirrors.\"\n\tOPTION=n\n\twhile [[ $OPTION != y ]]; do\n\t\tcountry_list\n\t\tread_input_text \"Confirm country: $country_name\"\n\tdone\n\n\t# Backup and replace current mirrorlist file.\n\techo \" Backing up the original mirrorlist...\"\n\tmv -i /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.orig\n\n\t# Get fastest mirrors of the country by Reflector.\n\techo \" Fetching mirrors located in $country_name...\"\n\treflector --country \"$country_name\" --sort rate --protocol http --protocol https --save /etc/pacman.d/mirrorlist\n\n\t# allow global read access (required for non-root yaourt execution)\n\tchmod +r /etc/pacman.d/mirrorlist\n\n\t# Final touches to mirrorlist by $EDITOR\n\t$EDITOR /etc/pacman.d/mirrorlist\n}\n#}}}\n#UMOUNT PARTITIONS {{{\numount_partitions() {\n\tmounted_partitions=($(lsblk | grep \"${MOUNTPOINT}\" | awk '{print $7}' | sort -r))\n\tswapoff -a\n\tfor i in \"${mounted_partitions[@]}\"; do\n\t\tumount \"$i\"\n\tdone\n}\n#}}}\n#SELECT DEVICE {{{\nselect_device() {\n\tdevices_list=($(lsblk -d | awk '{print \"/dev/\" $1}' | grep 'sd\\|hd\\|vd\\|nvme\\|mmcblk'))\n\tPS3=\"$prompt1\"\n\techo -e \"Attached Devices:\\n\"\n\tlsblk -lnp -I 2,3,8,9,22,34,56,57,58,65,66,67,68,69,70,71,72,91,128,129,130,131,132,133,134,135,259 | awk '{print $1,$4,$6,$7}' | column -t\n\techo -e \"\\n\"\n\techo -e \"Select device to partition:\\n\"\n\tselect device in \"${devices_list[@]}\"; do\n\t\tif contains_element \"${device}\" \"${devices_list[@]}\"; then\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n\tBOOT_MOUNTPOINT=$device\n}\n#}}}\n#CREATE PARTITION SCHEME {{{\ncreate_partition_scheme() {\n\tLUKS=0\n\tLVM=0\n\tprint_title \"https://wiki.archlinux.org/index.php/Partitioning\"\n\tprint_info \"Partitioning a hard drive allows one to logically divide the available space into sections that can be accessed independently of one another.\"\n\tprint_warning \"Maintain Current does not work with LUKS\"\n\tpartition_layouts=(\"Default\" \"LVM\" \"LVM+LUKS\" \"Maintain Current\")\n\tPS3=\"$prompt1\"\n\techo -e \"Select partition scheme:\"\n\tselect OPT in \"${partition_layouts[@]}\"; do\n\t\tpartition_layout=$OPT\n\t\tcase \"$REPLY\" in\n\t\t1)\n\t\t\tcreate_partition\n\t\t\t;;\n\t\t2)\n\t\t\tcreate_partition\n\t\t\tsetup_lvm\n\t\t\t;;\n\t\t3)\n\t\t\tcreate_partition\n\t\t\tsetup_luks\n\t\t\tsetup_lvm\n\t\t\t;;\n\t\t4)\n\t\t\tmodprobe dm-mod\n\t\t\tvgscan &>/dev/null\n\t\t\tvgchange -ay &>/dev/null\n\t\t\t;;\n\t\t*)\n\t\t\tinvalid_option\n\t\t\t;;\n\t\tesac\n\t\t[[ -n $OPT ]] && break\n\tdone\n}\n#}}}\n#SETUP PARTITION{{{\ncreate_partition() {\n\tapps_list=(\"cfdisk\" \"cgdisk\" \"fdisk\" \"gdisk\" \"parted\")\n\tPS3=\"$prompt1\"\n\techo -e \"Select partition program:\"\n\tselect OPT in \"${apps_list[@]}\"; do\n\t\tif contains_element \"$OPT\" \"${apps_list[@]}\"; then\n\t\t\tselect_device\n\t\t\tcase $OPT in\n\t\t\tparted)\n\t\t\t\tparted -a opt \"${device}\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\t$OPT \"${device}\"\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\n#}}}\n#SETUP LUKS {{{\nsetup_luks() {\n\tprint_title \"LUKS - https://wiki.archlinux.org/index.php/LUKS\"\n\tprint_info \"The Linux Unified Key Setup or LUKS is a disk-encryption specification created by Clemens Fruhwirth and originally intended for Linux.\"\n\tprint_danger \"\\tDo not use this for boot partitions\"\n\tblock_list=($(lsblk | grep 'part' | awk '{print \"/dev/\" substr($1,3)}'))\n\tPS3=\"$prompt1\"\n\techo -e \"Select partition:\"\n\tselect OPT in \"${block_list[@]}\"; do\n\t\tif contains_element \"$OPT\" \"${block_list[@]}\"; then\n\t\t\tcryptsetup --cipher aes-xts-plain64 --key-size 512 --hash sha512 --iter-time 5000 --use-random --verify-passphrase luksFormat \"$OPT\"\n\t\t\tif [[ $TRIM -eq 1 ]]; then\n\t\t\t\tcryptsetup open --type luks --allow-discards \"$OPT\" crypt\n\t\t\telse\n\t\t\t\tcryptsetup open --type luks \"$OPT\" crypt\n\t\t\tfi\n\t\t\tLUKS=1\n\t\t\tLUKS_DISK=$(echo \"${OPT}\" | sed 's/\\/dev\\///')\n\t\t\tbreak\n\t\telif [[ $OPT == \"Cancel\" ]]; then\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\n#}}}\n#SETUP LVM {{{\nsetup_lvm() {\n\tprint_title \"LVM - https://wiki.archlinux.org/index.php/LVM\"\n\tprint_info \"LVM is a logical volume manager for the Linux kernel; it manages disk drives and similar mass-storage devices. \"\n\tprint_warning \"Last partition will take 100% of free space left\"\n\tif [[ $LUKS -eq 1 ]]; then\n\t\tpvcreate /dev/mapper/crypt\n\t\tvgcreate lvm /dev/mapper/crypt\n\telse\n\t\tblock_list=($(lsblk | grep 'part' | awk '{print \"/dev/\" substr($1,3)}'))\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Select partition:\"\n\t\tselect OPT in \"${block_list[@]}\"; do\n\t\t\tif contains_element \"$OPT\" \"${block_list[@]}\"; then\n\t\t\t\tpvcreate \"$OPT\"\n\t\t\t\tvgcreate lvm \"$OPT\"\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\tdone\n\tfi\n\tprintf \"%s\" \"Enter number of partitions [ex: 2]: \"\n\tread -r number_partitions\n\ti=1\n\twhile [[ $i -le $number_partitions ]]; do\n\t\tprintf \"%s\" \"Enter $iª partition name [ex: home]: \"\n\t\tread -r partition_name\n\t\tif [[ $i -eq $number_partitions ]]; then\n\t\t\tlvcreate -l 100%FREE lvm -n \"${partition_name}\"\n\t\telse\n\t\t\tprintf \"%s\" \"Enter $iª partition size [ex: 25G, 200M]: \"\n\t\t\tread -r partition_size\n\t\t\tlvcreate -L \"${partition_size}\" lvm -n \"${partition_name}\"\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\tLVM=1\n}\n#}}}\n#SELECT|FORMAT PARTITIONS {{{\nformat_partitions() {\n\tprint_title \"https://wiki.archlinux.org/index.php/File_Systems\"\n\tprint_info \"This step will select and format the selected partition where archlinux will be installed\"\n\tprint_danger \"\\tAll data on the ROOT and SWAP partition will be LOST.\"\n\ti=0\n\n\tblock_list=($(lsblk | grep 'part\\|lvm' | awk '{print substr($1,3)}'))\n\n\t# check if there is no partition\n\tif [[ ${#block_list[@]} -eq 0 ]]; then\n\t\techo \"No partition found\"\n\t\texit 0\n\tfi\n\n\tpartitions_list=()\n\tfor OPT in \"${block_list[@]}\"; do\n\t\tcheck_lvm=$(echo \"$OPT\" | grep lvm)\n\t\tif [[ -z $check_lvm ]]; then\n\t\t\tpartitions_list+=(\"/dev/$OPT\")\n\t\telse\n\t\t\tpartitions_list+=(\"/dev/mapper/$OPT\")\n\t\tfi\n\tdone\n\n\t# partitions based on boot system\n\tif [[ $UEFI -eq 1 ]]; then\n\t\tpartition_name=(\"root\" \"EFI\" \"swap\" \"another\")\n\telse\n\t\tpartition_name=(\"root\" \"swap\" \"another\")\n\tfi\n\n\tselect_filesystem() {\n\t\tfilesystems_list=(\"btrfs\" \"ext2\" \"ext3\" \"ext4\" \"f2fs\" \"jfs\" \"nilfs2\" \"ntfs\" \"reiserfs\" \"vfat\" \"xfs\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Select filesystem:\\n\"\n\t\tselect filesystem in \"${filesystems_list[@]}\"; do\n\t\t\tif contains_element \"${filesystem}\" \"${filesystems_list[@]}\"; then\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\tdone\n\t}\n\n\tdisable_partition() {\n\t\t#remove the selected partition from list\n\t\tunset partitions_list[\"${partition_number}\"]\n\t\tpartitions_list=(\"${partitions_list[@]}\")\n\t\t#increase i\n\t\t[[ ${partition_name[i]} != another ]] && i=$((i + 1))\n\t}\n\n\tformat_partition() {\n\t\tread_input_text \"Confirm format $1 partition\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\t[[ -z $3 ]] && select_filesystem || filesystem=$3\n\t\t\tmkfs.\"${filesystem}\" \"$1\" \\\n\t\t\t\t\"$([[ ${filesystem} == xfs || ${filesystem} == btrfs || ${filesystem} == reiserfs ]] && echo \"-f\")\" \\\n\t\t\t\t\"$([[ ${filesystem} == vfat ]] && echo \"-F32\")\" \\\n\t\t\t\t\"$([[ $TRIM -eq 1 && ${filesystem} == ext4 ]] && echo \"-E discard\")\"\n\t\t\tfsck \"$1\"\n\t\t\tmkdir -p \"$2\"\n\t\t\tmount -t \"${filesystem}\" \"$1\" \"$2\"\n\t\t\tdisable_partition\n\t\tfi\n\t}\n\n\tformat_swap_partition() {\n\t\tread_input_text \"Confirm format $1 partition\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\tmkswap \"$1\"\n\t\t\tswapon \"$1\"\n\t\t\tdisable_partition\n\t\tfi\n\t}\n\n\tcreate_swap() {\n\t\tswap_options=(\"partition\" \"file\" \"skip\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Select ${BYellow}${partition_name[i]}${Reset} filesystem:\\n\"\n\t\tselect OPT in \"${swap_options[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tselect partition in \"${partitions_list[@]}\"; do\n\t\t\t\t\t#get the selected number - 1\n\t\t\t\t\tpartition_number=$((REPLY - 1))\n\t\t\t\t\tif contains_element \"${partition}\" \"${partitions_list[@]}\"; then\n\t\t\t\t\t\tformat_swap_partition \"${partition}\"\n\t\t\t\t\tfi\n\t\t\t\t\tbreak\n\t\t\t\tdone\n\t\t\t\tswap_type=\"partition\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\ttotal_memory=$(grep MemTotal /proc/meminfo | awk '{print $2/1024}' | sed 's/\\..*//')\n\t\t\t\tdd if=/dev/zero of=\"${MOUNTPOINT}\"/swapfile bs=1M count=\"${total_memory}\" status=progress\n\t\t\t\tchmod 600 \"${MOUNTPOINT}\"/swapfile\n\t\t\t\tmkswap \"${MOUNTPOINT}\"/swapfile\n\t\t\t\tswapon \"${MOUNTPOINT}\"/swapfile\n\t\t\t\ti=$((i + 1))\n\t\t\t\tswap_type=\"file\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\ti=$((i + 1))\n\t\t\t\tswap_type=\"none\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t}\n\n\tcheck_mountpoint() {\n\t\tif mount | grep \"$2\"; then\n\t\t\techo \"Successfully mounted\"\n\t\t\tdisable_partition \"$1\"\n\t\telse\n\t\t\techo \"WARNING: Not Successfully mounted\"\n\t\tfi\n\t}\n\n\tset_efi_partition() {\n\t\tefi_options=(\"/boot/efi\" \"/boot\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Select EFI mountpoint:\\n\"\n\t\tselect EFI_MOUNTPOINT in \"${efi_options[@]}\"; do\n\t\t\tif contains_element \"${EFI_MOUNTPOINT}\" \"${efi_options[@]}\"; then\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\tdone\n\t}\n\n\twhile true; do\n\t\tPS3=\"$prompt1\"\n\t\tif [[ ${partition_name[i]} == swap ]]; then\n\t\t\tcreate_swap\n\t\telse\n\t\t\techo -e \"Select ${BYellow}${partition_name[i]}${Reset} partition:\\n\"\n\t\t\tselect partition in \"${partitions_list[@]}\"; do\n\t\t\t\t#get the selected number - 1\n\t\t\t\tpartition_number=$((REPLY - 1))\n\t\t\t\tif contains_element \"${partition}\" \"${partitions_list[@]}\"; then\n\t\t\t\t\tcase ${partition_name[i]} in\n\t\t\t\t\troot)\n\t\t\t\t\t\tROOT_PART=$(echo \"${partition}\" | sed 's/\\/dev\\/mapper\\///' | sed 's/\\/dev\\///')\n\t\t\t\t\t\tROOT_MOUNTPOINT=${partition}\n\t\t\t\t\t\tformat_partition \"${partition}\" \"${MOUNTPOINT}\"\n\t\t\t\t\t\t;;\n\t\t\t\t\tEFI)\n\t\t\t\t\t\tset_efi_partition\n\t\t\t\t\t\tread_input_text \"Format ${partition} partition\"\n\t\t\t\t\t\tif [[ $OPTION == y ]]; then\n\t\t\t\t\t\t\tformat_partition \"${partition}\" \"${MOUNTPOINT}${EFI_MOUNTPOINT}\" vfat\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tmkdir -p \"${MOUNTPOINT}${EFI_MOUNTPOINT}\"\n\t\t\t\t\t\t\tmount -t vfat \"${partition}\" \"${MOUNTPOINT}${EFI_MOUNTPOINT}\"\n\t\t\t\t\t\t\tcheck_mountpoint \"${partition}\" \"${MOUNTPOINT}${EFI_MOUNTPOINT}\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\t\tanother)\n\t\t\t\t\t\tprintf \"%s\" \"Mountpoint [ex: /home]:\"\n\t\t\t\t\t\tread -r directory\n\t\t\t\t\t\t[[ $directory == \"/boot\" ]] && BOOT_MOUNTPOINT=$(echo \"${partition}\" | sed 's/[0-9]//')\n\t\t\t\t\t\tselect_filesystem\n\t\t\t\t\t\tread_input_text \"Format ${partition} partition\"\n\t\t\t\t\t\tif [[ $OPTION == y ]]; then\n\t\t\t\t\t\t\tformat_partition \"${partition}\" \"${MOUNTPOINT}${directory}\" \"${filesystem}\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tread_input_text \"Confirm fs=\"\"${filesystem}\"\" part=\"\"${partition}\"\" dir=\"\"${directory}\"\"\"\n\t\t\t\t\t\t\tif [[ $OPTION == y ]]; then\n\t\t\t\t\t\t\t\tmkdir -p \"${MOUNTPOINT}${directory}\"\n\t\t\t\t\t\t\t\tmount -t \"${filesystem}\" \"${partition}\" \"${MOUNTPOINT}\"\"${directory}\"\n\t\t\t\t\t\t\t\tcheck_mountpoint \"${partition}\" \"${MOUNTPOINT}${directory}\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\t;;\n\t\t\t\t\tesac\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tinvalid_option\n\t\t\t\tfi\n\t\t\tdone\n\t\tfi\n\t\t#check if there is no partitions left\n\t\tif [[ ${#partitions_list[@]} -eq 0 && ${partition_name[i]} != swap ]]; then\n\t\t\tbreak\n\t\telif [[ ${partition_name[i]} == another ]]; then\n\t\t\tread_input_text \"Configure more partitions\"\n\t\t\t[[ $OPTION != y ]] && break\n\t\tfi\n\tdone\n\tpause_function\n}\n#}}}\n#INSTALL BASE SYSTEM {{{\nselect_linux_version() {\n\tprint_title \"LINUX VERSION\"\n\tversion_list=(\"linux (default)\" \"linux-lts (long term support)\" \"linux-hardened (security features)\" \"linux-zen (tuned kernel)\")\n\tPS3=\"$prompt1\"\n\techo -e \"Select linux version to install\\n\"\n\tselect VERSION in \"${version_list[@]}\"; do\n\t\tif contains_element \"$VERSION\" \"${version_list[@]}\"; then\n\t\t\tif [ \"linux (default)\" == \"$VERSION\" ]; then\n\t\t\t\tpacstrap \"${MOUNTPOINT}\" base linux linux-headers\n\t\t\telif [ \"linux-lts (long term support)\" == \"$VERSION\" ]; then\n\t\t\t\tpacstrap \"${MOUNTPOINT}\" base linux-lts linux-lts-headers\n\t\t\telif [ \"linux-hardened (security features)\" == \"$VERSION\" ]; then\n\t\t\t\tpacstrap \"${MOUNTPOINT}\" base linux-hardened linux-hardened-headers\n\t\t\telif [ \"linux-zen (tuned kernel)\" == \"$VERSION\" ]; then\n\t\t\t\tpacstrap \"${MOUNTPOINT}\" base linux-zen linux-zen-headers\n\t\t\tfi\n\t\t\tpacstrap \"${MOUNTPOINT}\" \\\n\t\t\t\tcryptsetup lvm2 netctl dhcpcd inetutils jfsutils diffutils e2fsprogs \\\n\t\t\t\tless linux-firmware logrotate man-db man-pages mdadm nano \\\n\t\t\t\tperl reiserfsprogs s-nail sysfsutils texinfo usbutils vi which xfsprogs --needed\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\ninstall_base_system() {\n\tprint_title \"INSTALL BASE SYSTEM\"\n\tprint_info \"Installing PGP keyring\"\n\tpacman -Sy archlinux-keyring\n\tprint_info \"Using the pacstrap script we install the base system. The base-devel package group will be installed also.\"\n\trm \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/vmlinuz-linux\n\tselect_linux_version\n\tpacstrap \"${MOUNTPOINT}\" base-devel parted btrfs-progs f2fs-tools net-tools --needed\n\t[[ $? -ne 0 ]] && error_msg \"Installing base system to ${MOUNTPOINT} failed. Check error messages above.\"\n\tlocal PTABLE=$(parted -sl | grep \"gpt\")\n\t[[ -n $PTABLE ]] && pacstrap \"${MOUNTPOINT}\" gptfdisk --needed\n\tWIRELESS_DEV=$(ip link | grep wl | awk '{print $2}' | sed 's/://' | sed '1!d')\n\tif [[ -n $WIRELESS_DEV ]]; then\n\t\tpacstrap \"${MOUNTPOINT}\" iw wireless_tools wpa_supplicant dialog --needed\n\telse\n\t\tWIRED_DEV=$(ip link | grep \"ens\\|eno\\|enp\" | awk '{print $2}' | sed 's/://' | sed '1!d')\n\t\tif [[ -n $WIRED_DEV ]]; then\n\t\t\tarch_chroot \"systemctl enable dhcpcd@${WIRED_DEV}.service\"\n\t\tfi\n\tfi\n\tif is_package_installed \"espeakup\"; then\n\t\tpacstrap \"${MOUNTPOINT}\" alsa-utils --needed\n\t\tarch_chroot \"systemctl enable espeakup.service\"\n\tfi\n}\n#}}}\n#CONFIGURE KEYMAP {{{\nconfigure_keymap() {\n\t#ADD KEYMAP TO THE NEW SETUP\n\techo \"KEYMAP=$KEYMAP\" >\"${MOUNTPOINT}\"/etc/vconsole.conf\n\tlocalectl set-x11-keymap \"$KEYMAP\"\n}\n#}}}\n#CONFIGURE FSTAB {{{\nconfigure_fstab() {\n\tprint_title \"FSTAB - https://wiki.archlinux.org/index.php/Fstab\"\n\tprint_info \"The /etc/fstab file contains static filesystem information. It defines how storage devices and partitions are to be mounted and integrated into the overall system. It is read by the mount command to determine which options to use when mounting a specific partition or partition.\"\n\tif [[ ! -f ${MOUNTPOINT}/etc/fstab.aui ]]; then\n\t\tcp \"${MOUNTPOINT}\"/etc/fstab \"${MOUNTPOINT}\"/etc/fstab.aui\n\telse\n\t\tcp \"${MOUNTPOINT}\"/etc/fstab.aui \"${MOUNTPOINT}\"/etc/fstab\n\tfi\n\tif [[ $UEFI -eq 1 ]]; then\n\t\tfstab_list=(\"DEV\" \"PARTUUID\" \"LABEL\")\n\telse\n\t\tfstab_list=(\"DEV\" \"UUID\" \"LABEL\")\n\tfi\n\n\tPS3=\"$prompt1\"\n\techo -e \"Configure fstab based on:\"\n\tselect OPT in \"${fstab_list[@]}\"; do\n\t\tcase \"$REPLY\" in\n\t\t1) genfstab -p \"${MOUNTPOINT}\" >>\"${MOUNTPOINT}\"/etc/fstab ;;\n\t\t2)\n\t\t\tif [[ $UEFI -eq 1 ]]; then\n\t\t\t\tgenfstab -t PARTUUID -p \"${MOUNTPOINT}\" >>\"${MOUNTPOINT}\"/etc/fstab\n\t\t\telse\n\t\t\t\tgenfstab -U -p \"${MOUNTPOINT}\" >>\"${MOUNTPOINT}\"/etc/fstab\n\t\t\tfi\n\t\t\t;;\n\t\t3) genfstab -L -p \"${MOUNTPOINT}\" >>\"${MOUNTPOINT}\"/etc/fstab ;;\n\t\t*) invalid_option ;;\n\t\tesac\n\t\t[[ -n $OPT ]] && break\n\tdone\n\tfstab=$OPT\n\techo \"Review your fstab\"\n\t[[ -f ${MOUNTPOINT}/swapfile ]] && sed -i \"s/\\\\${MOUNTPOINT}//\" \"${MOUNTPOINT}\"/etc/fstab\n\tpause_function\n\t$EDITOR \"${MOUNTPOINT}\"/etc/fstab\n}\n#}}}\n#CONFIGURE HOSTNAME {{{\nconfigure_hostname() {\n\tprint_title \"HOSTNAME - https://wiki.archlinux.org/index.php/HOSTNAME\"\n\tprint_info \"A host name is a unique name created to identify a machine on a network.Host names are restricted to alphanumeric characters.\\nThe hyphen (-) can be used, but a host name cannot start or end with it. Length is restricted to 63 characters.\"\n\tprintf \"%s\" \"Hostname [ex: archlinux]: \"\n\tread -r host_name\n\techo \"$host_name\" >\"${MOUNTPOINT}\"/etc/hostname\n\tif [[ ! -f ${MOUNTPOINT}/etc/hosts.aui ]]; then\n\t\tcp \"${MOUNTPOINT}\"/etc/hosts \"${MOUNTPOINT}\"/etc/hosts.aui\n\telse\n\t\tcp \"${MOUNTPOINT}\"/etc/hosts.aui \"${MOUNTPOINT}\"/etc/hosts\n\tfi\n\tarch_chroot \"sed -i '/127.0.0.1/s/$/ '${host_name}'/' /etc/hosts\"\n\tarch_chroot \"sed -i '/::1/s/$/ '${host_name}'/' /etc/hosts\"\n}\n#}}}\n#CONFIGURE TIMEZONE {{{\nconfigure_timezone() {\n\tprint_title \"TIMEZONE - https://wiki.archlinux.org/index.php/Timezone\"\n\tprint_info \"In an operating system the time (clock) is determined by four parts: Time value, Time standard, Time Zone, and DST (Daylight Saving Time if applicable).\"\n\tOPTION=n\n\twhile [[ $OPTION != y ]]; do\n\t\tsettimezone\n\t\tread_input_text \"Confirm timezone (${ZONE}/${SUBZONE})\"\n\tdone\n\tarch_chroot \"ln -sf /usr/share/zoneinfo/${ZONE}/${SUBZONE} /etc/localtime\"\n\tarch_chroot \"sed -i '/#NTP=/d' /etc/systemd/timesyncd.conf\"\n\tarch_chroot \"sed -i 's/#Fallback//' /etc/systemd/timesyncd.conf\"\n\tarch_chroot \"echo \\\"FallbackNTP=0.pool.ntp.org 1.pool.ntp.org 0.fr.pool.ntp.org\\\" >> /etc/systemd/timesyncd.conf\"\n\tarch_chroot \"systemctl enable systemd-timesyncd.service\"\n}\n#}}}\n#CONFIGURE HARDWARECLOCK {{{\nconfigure_hardwareclock() {\n\tprint_title \"HARDWARE CLOCK TIME - https://wiki.archlinux.org/index.php/Internationalization\"\n\tprint_info \"This is set in /etc/adjtime. Set the hardware clock mode uniformly between your operating systems on the same machine. Otherwise, they will overwrite the time and cause clock shifts (which can cause time drift correction to be miscalibrated).\"\n\thwclock_list=('UTC' 'Localtime')\n\tPS3=\"$prompt1\"\n\tselect OPT in \"${hwclock_list[@]}\"; do\n\t\tcase \"$REPLY\" in\n\t\t1)\n\t\t\tarch_chroot \"hwclock --systohc --utc\"\n\t\t\t;;\n\t\t2)\n\t\t\tarch_chroot \"hwclock --systohc --localtime\"\n\t\t\t;;\n\t\t*) invalid_option ;;\n\t\tesac\n\t\t[[ -n $OPT ]] && break\n\tdone\n\thwclock=$OPT\n}\n#}}}\n#CONFIGURE LOCALE {{{\nconfigure_locale() {\n\tprint_title \"LOCALE - https://wiki.archlinux.org/index.php/Locale\"\n\tprint_info \"Locales are used in Linux to define which language the user uses. As the locales define the character sets being used as well, setting up the correct locale is especially important if the language contains non-ASCII characters.\"\n\tOPTION=n\n\twhile [[ $OPTION != y ]]; do\n\t\tsetlocale\n\t\tread_input_text \"Confirm locale ($LOCALE)\"\n\tdone\n\techo 'LANG=\"'\"$LOCALE_UTF8\"'\"' >\"${MOUNTPOINT}\"/etc/locale.conf\n\tarch_chroot \"sed -i 's/#\\('${LOCALE_UTF8}'\\)/\\1/' /etc/locale.gen\"\n\tarch_chroot \"locale-gen\"\n}\n#}}}\n#CONFIGURE MKINITCPIO {{{\nconfigure_mkinitcpio() {\n\tprint_title \"MKINITCPIO - https://wiki.archlinux.org/index.php/Mkinitcpio\"\n\tprint_info \"mkinitcpio is a Bash script used to create an initial ramdisk environment.\"\n\t[[ $LUKS -eq 1 ]] && sed -i '/^HOOK/s/block/block keymap encrypt/' \"${MOUNTPOINT}\"/etc/mkinitcpio.conf\n\t[[ $LVM -eq 1 ]] && sed -i '/^HOOK/s/filesystems/lvm2 filesystems/' \"${MOUNTPOINT}\"/etc/mkinitcpio.conf\n\t$EDITOR \"${MOUNTPOINT}\"/etc/mkinitcpio.conf\n\tif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep hardened -c)\" -gt \"0\" ]; then\n\t\tarch_chroot \"mkinitcpio -p linux-hardened\"\n\telif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep lts -c)\" -gt \"0\" ]; then\n\t\tarch_chroot \"mkinitcpio -p linux-lts\"\n\telif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\tarch_chroot \"mkinitcpio -p linux-zen\"\n\telse\n\t\tarch_chroot \"mkinitcpio -p linux\"\n\tfi\n}\n#}}}\n#INSTALL BOOTLOADER {{{\ninstall_bootloader() {\n\tprint_title \"BOOTLOADER - https://wiki.archlinux.org/index.php/Bootloader\"\n\tprint_info \"The boot loader is responsible for loading the kernel and initial RAM disk before initiating the boot process.\"\n\tprint_warning \"\\tROOT Partition: ${ROOT_MOUNTPOINT}\"\n\tif [[ $UEFI -eq 1 ]]; then\n\t\tprint_warning \"\\tUEFI Mode Detected\"\n\t\tbootloaders_list=(\"Grub2\" \"Syslinux\" \"Systemd\" \"rEFInd\" \"Skip\")\n\telse\n\t\tprint_warning \"\\tBIOS Mode Detected\"\n\t\tbootloaders_list=(\"Grub2\" \"Syslinux\" \"Skip\")\n\tfi\n\tPS3=\"$prompt1\"\n\techo -e \"Install bootloader:\\n\"\n\tselect bootloader in \"${bootloaders_list[@]}\"; do\n\t\tcase \"$REPLY\" in\n\t\t1)\n\t\t\tpacstrap \"${MOUNTPOINT}\" grub os-prober --needed\n\t\t\tbreak\n\t\t\t;;\n\t\t2)\n\t\t\tpacstrap \"${MOUNTPOINT}\" syslinux gptfdisk --needed\n\t\t\tbreak\n\t\t\t;;\n\t\t3)\n\t\t\tbreak\n\t\t\t;;\n\t\t4)\n\t\t\tif [[ $UEFI -eq 1 ]]; then\n\t\t\t\tpacstrap \"${MOUNTPOINT}\" refind-efi os-prober --needed\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\t\t;;\n\t\t5)\n\t\t\t[[ $UEFI -eq 1 ]] && break || invalid_option\n\t\t\t;;\n\t\t*)\n\t\t\tinvalid_option\n\t\t\t;;\n\t\tesac\n\tdone\n\t[[ $UEFI -eq 1 ]] && pacstrap \"${MOUNTPOINT}\" efibootmgr dosfstools --needed\n}\n#}}}\n#CONFIGURE BOOTLOADER {{{\nconfigure_bootloader() {\n\tcase $bootloader in\n\tGrub2)\n\t\tprint_title \"GRUB2 - https://wiki.archlinux.org/index.php/GRUB2\"\n\t\tprint_info \"GRUB2 is the next generation of the GRand Unified Bootloader (GRUB).\\nIn brief, the bootloader is the first software program that runs when a computer starts. It is responsible for loading and transferring control to the Linux kernel.\"\n\t\tgrub_install_mode=(\"Automatic\" \"Manual\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Grub Install:\\n\"\n\t\tselect OPT in \"${grub_install_mode[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tif [[ $LUKS -eq 1 ]]; then\n\t\t\t\t\tsed -i -e 's/GRUB_CMDLINE_LINUX=\"\\(.\\+\\)\"/GRUB_CMDLINE_LINUX=\"\\1 cryptdevice=\\/dev\\/'\"${LUKS_DISK}\"':crypt\"/g' -e 's/GRUB_CMDLINE_LINUX=\"\"/GRUB_CMDLINE_LINUX=\"cryptdevice=\\/dev\\/'\"${LUKS_DISK}\"':crypt\"/g' \"${MOUNTPOINT}\"/etc/default/grub\n\t\t\t\tfi\n\t\t\t\tif [[ $UEFI -eq 1 ]]; then\n\t\t\t\t\tarch_chroot \"grub-install --target=x86_64-efi --efi-directory=${EFI_MOUNTPOINT} --bootloader-id=arch_grub --recheck\"\n\t\t\t\telse\n\t\t\t\t\tarch_chroot \"grub-install --target=i386-pc --recheck --debug ${BOOT_MOUNTPOINT}\"\n\t\t\t\tfi\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tarch-chroot \"${MOUNTPOINT}\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tarch_chroot \"grub-mkconfig -o /boot/grub/grub.cfg\"\n\t\t;;\n\tSyslinux)\n\t\tprint_title \"SYSLINUX - https://wiki.archlinux.org/index.php/Syslinux\"\n\t\tprint_info \"Syslinux is a collection of boot loaders capable of booting from hard drives, CDs, and over the network via PXE. It supports the fat, ext2, ext3, ext4, and btrfs file systems.\"\n\t\tsyslinux_install_mode=(\"[MBR] Automatic\" \"[PARTITION] Automatic\" \"Manual\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Syslinux Install:\\n\"\n\t\tselect OPT in \"${syslinux_install_mode[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tarch_chroot \"syslinux-install_update -iam\"\n\t\t\t\tif [[ $LUKS -eq 1 ]]; then\n\t\t\t\t\tsed -i \"s/APPEND root=.*/APPEND root=\\/dev\\/mapper\\/${ROOT_PART} cryptdevice=\\/dev\\/${LUKS_DISK}:crypt ro/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\telif [[ $LVM -eq 1 ]]; then\n\t\t\t\t\tsed -i \"s/sda[0-9]/\\/dev\\/mapper\\/${ROOT_PART}/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\telse\n\t\t\t\t\tsed -i \"s/sda[0-9]/${ROOT_PART}/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\tfi\n\t\t\t\tprint_warning \"The partition in question needs to be whatever you have as / (root), not /boot.\"\n\t\t\t\tpause_function\n\t\t\t\t$EDITOR \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tarch_chroot \"syslinux-install_update -i\"\n\t\t\t\tif [[ $LUKS -eq 1 ]]; then\n\t\t\t\t\tsed -i \"s/APPEND root=.*/APPEND root=\\/dev\\/mapper\\/${ROOT_PART} cryptdevice=\\/dev\\/${LUKS_DISK}:crypt ro/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\telif [[ $LVM -eq 1 ]]; then\n\t\t\t\t\tsed -i \"s/sda[0-9]/\\/dev\\/mapper\\/${ROOT_PART}/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\telse\n\t\t\t\t\tsed -i \"s/sda[0-9]/${ROOT_PART}/g\" \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\tfi\n\t\t\t\tprint_warning \"The partition in question needs to be whatever you have as / (root), not /boot.\"\n\t\t\t\tpause_function\n\t\t\t\t$EDITOR \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/syslinux/syslinux.cfg\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tprint_info \"Your boot partition, on which you plan to install Syslinux, must contain a FAT, ext2, ext3, ext4, or Btrfs file system. You should install it on a mounted directory, not a /dev/sdXY partition. You do not have to install it on the root directory of a file system, e.g., with partition /dev/sda1 mounted on /boot you can install Syslinux in the syslinux directory\"\n\t\t\t\techo -e \"$prompt3\"\n\t\t\t\tprint_warning \"mkdir /boot/syslinux\\nextlinux --install /boot/syslinux \"\n\t\t\t\tarch-chroot \"${MOUNTPOINT}\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\t;;\n\tSystemd)\n\t\tprint_title \"SYSTEMD-BOOT - https://wiki.archlinux.org/index.php/Systemd-boot\"\n\t\tprint_info \"systemd-boot (previously called gummiboot), is a simple UEFI boot manager which executes configured EFI images. The default entry is selected by a configured pattern (glob) or an on-screen menu. It is included with systemd since systemd 220-2.\"\n\t\tprint_warning \"\\tSystemd-boot heavily suggests that /boot is mounted to the EFI partition, not /boot/efi, in order to simplify updating and configuration.\"\n\t\tgummiboot_install_mode=(\"Automatic\" \"Manual\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Gummiboot install:\\n\"\n\t\tselect OPT in \"${gummiboot_install_mode[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tarch_chroot \"bootctl --path=${EFI_MOUNTPOINT} install\"\n\t\t\t\tprint_warning \"Please check your .conf file\"\n\t\t\t\tpartuuid=$(blkid -s PARTUUID \"${ROOT_MOUNTPOINT}\" | awk '{print $2}' | sed 's/\"//g' | sed 's/^.*=//')\n\t\t\t\tif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep hardened -c)\" -gt \"0\" ]; then\n\t\t\t\t\timg_name=\"linux-hardened\"\n\t\t\t\telif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep lts -c)\" -gt \"0\" ]; then\n\t\t\t\t\timg_name=\"linux-lts\"\n\t\t\t\telif [ \"$(arch-chroot \"${MOUNTPOINT}\" ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\t\t\t\timg_name=\"linux-zen\"\n\t\t\t\telse\n\t\t\t\t\timg_name=\"linux\"\n\t\t\t\tfi\n\t\t\t\tif [[ $LUKS -eq 1 ]]; then\n\t\t\t\t\techo -e \"title\\tArch Linux\\nlinux\\t/vmlinuz-${img_name}\\ninitrd\\t/initramfs-${img_name}.img\\noptions\\tcryptdevice=\\/dev\\/${LUKS_DISK}:luks root=\\/dev\\/mapper\\/${ROOT_PART} rw\" >\"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/entries/arch.conf\n\t\t\t\telif [[ $LVM -eq 1 ]]; then\n\t\t\t\t\techo -e \"title\\tArch Linux\\nlinux\\t/vmlinuz-${img_name}\\ninitrd\\t/initramfs-${img_name}.img\\noptions\\troot=\\/dev\\/mapper\\/${ROOT_PART} rw\" >\"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/entries/arch.conf\n\t\t\t\telse\n\t\t\t\t\techo -e \"title\\tArch Linux\\nlinux\\t/vmlinuz-${img_name}\\ninitrd\\t/initramfs-${img_name}.img\\noptions\\troot=PARTUUID=${partuuid} rw\" >\"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/entries/arch.conf\n\t\t\t\tfi\n\t\t\t\techo -e \"default  arch\\ntimeout  5\" >\"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/loader.conf\n\t\t\t\tpause_function\n\t\t\t\t$EDITOR \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/entries/arch.conf\n\t\t\t\t$EDITOR \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/loader/loader.conf\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tarch-chroot \"${MOUNTPOINT}\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\t;;\n\trEFInd)\n\t\tprint_title \"REFIND - https://wiki.archlinux.org/index.php/REFInd\"\n\t\tprint_info \"rEFInd is a UEFI boot manager capable of launching EFISTUB kernels. It is a fork of the no-longer-maintained rEFIt and fixes many issues with respect to non-Mac UEFI booting. It is designed to be platform-neutral and to simplify booting multiple OSes.\"\n\t\tprint_warning \"When refind-install (used in Automatic mode) is run in chroot (e.g. in live system when installing Arch Linux) /boot/refind-linux.conf is populated with kernel options from the live system not the one on which it is installed. You need to adjust kernel options in /boot/refind-linux.conf manually.\"\n\t\trefind_install_mode=(\"Automatic\" \"Manual\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"rEFInd install:\\n\"\n\t\tselect OPT in \"${refind_install_mode[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tarch_chroot \"refind-install\"\n\t\t\t\t$EDITOR \"${MOUNTPOINT}\"\"${EFI_MOUNTPOINT}\"/refind_linux.conf\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tarch-chroot \"${MOUNTPOINT}\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\t;;\n\tesac\n\tpause_function\n}\n#}}}\n#ROOT PASSWORD {{{\nroot_password() {\n\tprint_title \"ROOT PASSWORD\"\n\tprint_warning \"Enter your new root password\"\n\tarch_chroot \"passwd\"\n\tpause_function\n}\n#}}}\n#FINISH {{{\nfinish() {\n\tprint_title \"INSTALL COMPLETED\"\n\t#COPY AUI TO ROOT FOLDER IN THE NEW SYSTEM\n\tprint_warning \"\\nA copy of the AUI will be placed in /root directory of your new system\"\n\tcp -R \"$(pwd)\" \"${MOUNTPOINT}\"/root\n\tread_input_text \"Reboot system\"\n\tif [[ $OPTION == y ]]; then\n\t\tumount_partitions\n\t\treboot\n\tfi\n\texit 0\n}\n#}}}\n\npause_function\ncheck_boot_system\ncheck_connection\ncheck_trim\npacman -Sy\nwhile true; do\n\tprint_title \"ARCHLINUX ULTIMATE INSTALL - https://github.com/helmuthdu/aui\"\n\techo \" 1) $(mainmenu_item \"${checklist[1]}\" \"Select Keymap\" \"${KEYMAP}\")\"\n\techo \" 2) $(mainmenu_item \"${checklist[2]}\" \"Select Editor\" \"${EDITOR}\")\"\n\techo \" 3) $(mainmenu_item \"${checklist[3]}\" \"Configure Mirrorlist\" \"${country_name} (${country_code})\")\"\n\techo \" 4) $(mainmenu_item \"${checklist[4]}\" \"Partition Scheme\" \"${partition_layout}: ${partition}(${filesystem}) swap(${swap_type})\")\"\n\techo \" 5) $(mainmenu_item \"${checklist[5]}\" \"Install Base System\")\"\n\techo \" 6) $(mainmenu_item \"${checklist[6]}\" \"Configure Fstab\" \"${fstab}\")\"\n\techo \" 7) $(mainmenu_item \"${checklist[7]}\" \"Configure Hostname\" \"${host_name}\")\"\n\techo \" 8) $(mainmenu_item \"${checklist[8]}\" \"Configure Timezone\" \"${ZONE}/${SUBZONE}\")\"\n\techo \" 9) $(mainmenu_item \"${checklist[9]}\" \"Configure Hardware Clock\" \"${hwclock}\")\"\n\techo \"10) $(mainmenu_item \"${checklist[10]}\" \"Configure Locale\" \"${LOCALE}\")\"\n\techo \"11) $(mainmenu_item \"${checklist[11]}\" \"Configure Mkinitcpio\")\"\n\techo \"12) $(mainmenu_item \"${checklist[12]}\" \"Install Bootloader\" \"${bootloader}\")\"\n\techo \"13) $(mainmenu_item \"${checklist[13]}\" \"Root Password\")\"\n\techo \"\"\n\techo \" d) Done\"\n\techo \"\"\n\tread_input_options\n\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\tcase \"$OPT\" in\n\t\t1)\n\t\t\tselect_keymap\n\t\t\tchecklist[1]=1\n\t\t\t;;\n\t\t2)\n\t\t\tselect_editor\n\t\t\tchecklist[2]=1\n\t\t\t;;\n\t\t3)\n\t\t\tconfigure_mirrorlist\n\t\t\tchecklist[3]=1\n\t\t\t;;\n\t\t4)\n\t\t\tumount_partitions\n\t\t\tcreate_partition_scheme\n\t\t\tformat_partitions\n\t\t\tchecklist[4]=1\n\t\t\t;;\n\t\t5)\n\t\t\tinstall_base_system\n\t\t\tconfigure_keymap\n\t\t\tchecklist[5]=1\n\t\t\t;;\n\t\t6)\n\t\t\tconfigure_fstab\n\t\t\tchecklist[6]=1\n\t\t\t;;\n\t\t7)\n\t\t\tconfigure_hostname\n\t\t\tchecklist[7]=1\n\t\t\t;;\n\t\t8)\n\t\t\tconfigure_timezone\n\t\t\tchecklist[8]=1\n\t\t\t;;\n\t\t9)\n\t\t\tconfigure_hardwareclock\n\t\t\tchecklist[9]=1\n\t\t\t;;\n\t\t10)\n\t\t\tconfigure_locale\n\t\t\tchecklist[10]=1\n\t\t\t;;\n\t\t11)\n\t\t\tconfigure_mkinitcpio\n\t\t\tchecklist[11]=1\n\t\t\t;;\n\t\t12)\n\t\t\tinstall_bootloader\n\t\t\tconfigure_bootloader\n\t\t\tchecklist[12]=1\n\t\t\t;;\n\t\t13)\n\t\t\troot_password\n\t\t\tchecklist[13]=1\n\t\t\t;;\n\t\t\"d\")\n\t\t\tfinish\n\t\t\t;;\n\t\t*)\n\t\t\tinvalid_option\n\t\t\t;;\n\t\tesac\n\tdone\ndone\n#}}}\n"
        },
        {
          "name": "lilo",
          "type": "blob",
          "size": 103.7900390625,
          "content": "#!/bin/bash\n# FIX THIS ISSUES | NON-ACUTE\n#shellcheck disable=SC1001,SC1091,SC2001,SC2010,SC2015,SC2034,SC2104,SC2154\n#shellcheck disable=SC2154,SC2153,SC2155,SC2165,SC2167,SC2181,SC2207\n\n: 'ATTENTION!:\n--------------------------------------------------\n|  Created by helmuthdu <helmuthdu@gmail.com>    |\n|  Contributed by flexiondotorg                  |\n|  Shellchecked by uniminin <uniminin@zoho.com>  |\n|  Formatted by molese <molese@protonmail.com>   |\n--------------------------------------------------\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n------------------------------------------------------------------------\nRun this script after your first boot with archlinux (as root)\n'\n\nif [[ -f $(pwd)/sharedfuncs ]]; then\n\tsource sharedfuncs\nelse\n\techo \"missing file: sharedfuncs\"\n\texit 1\nfi\n\n#ARCHLINUX U INSTALL {{{\n#WELCOME {{{\nwelcome() {\n\tclear\n\techo -e \"${Bold}Welcome to the Archlinux U Install script by helmuthdu${White}\"\n\tprint_line\n\techo \"Requirements:\"\n\techo \"-> Archlinux installation\"\n\techo \"-> Run script as root user\"\n\techo \"-> Working internet connection\"\n\tprint_line\n\techo \"Script can be cancelled at any time with CTRL+C\"\n\tprint_line\n\techo \"http://www.github.com/helmuthdu/aui\"\n\tprint_line\n\techo -e \"\\nBackups:\"\n\tprint_line\n\t# backup old configs\n\t[[ ! -f /etc/pacman.conf.aui ]] && cp -v /etc/pacman.conf /etc/pacman.conf.aui || echo \"/etc/pacman.conf.aui\"\n\t[[ -f /etc/ssh/sshd_config.aui ]] && echo \"/etc/ssh/sshd_conf.aui\"\n\t[[ -f /etc/sudoers.aui ]] && echo \"/etc/sudoers.aui\"\n\tpause_function\n\techo \"\"\n}\n#}}}\n#LOCALE SELECTOR {{{\nlanguage_selector() {\n\t#AUTOMATICALLY DETECTS THE SYSTEM LOCALE {{{\n\t#automatically detects the system language based on your locale\n\tLOCALE=$(locale | grep LANG | sed 's/LANG=//' | cut -c1-5)\n\t#KDE #{{{\n\tif [[ $LOCALE == pt_BR || $LOCALE == en_GB || $LOCALE == zh_CN ]]; then\n\t\tLOCALE_KDE=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]')\n\telse\n\t\tLOCALE_KDE=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\tfi\n\t#}}}\n\t#FIREFOX #{{{\n\tif [[ $LOCALE == pt_BR || $LOCALE == pt_PT || $LOCALE == en_GB || $LOCALE == en_US || $LOCALE == es_AR || $LOCALE == es_CL || $LOCALE == es_ES || $LOCALE == zh_CN ]]; then\n\t\tLOCALE_FF=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\telse\n\t\tLOCALE_FF=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\tfi\n\t#}}}\n\t#THUNDERBIRD #{{{\n\tif [[ $LOCALE == pt_BR || $LOCALE == pt_PT || $LOCALE == en_US || $LOCALE == en_GB || $LOCALE == es_AR || $LOCALE == es_ES || $LOCALE == zh_CN ]]; then\n\t\tLOCALE_TB=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\telif [[ $LOCALE == es_CL ]]; then\n\t\tLOCALE_TB=\"es-es\"\n\telse\n\t\tLOCALE_TB=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\tfi\n\t#}}}\n\t#HUNSPELL #{{{\n\tif [[ $LOCALE == pt_BR ]]; then\n\t\tLOCALE_HS=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\telif [[ $LOCALE == pt_PT ]]; then\n\t\tLOCALE_HS=\"pt_pt\"\n\telse\n\t\tLOCALE_HS=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\tfi\n\t#}}}\n\t#ASPELL #{{{\n\tLOCALE_AS=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t#}}}\n\t#LIBREOFFICE #{{{\n\tif [[ $LOCALE == pt_BR || $LOCALE == en_GB || $LOCALE == en_US || $LOCALE == zh_CN ]]; then\n\t\tLOCALE_LO=$(echo \"$LOCALE\" | sed 's/_/-/')\n\telse\n\t\tLOCALE_LO=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\tfi\n\t#}}}\n\t#}}}\n\tprint_title \"LOCALE - https://wiki.archlinux.org/index.php/Locale\"\n\tprint_info \"Locales are used in Linux to define which language the user uses. As the locales define the character sets being used as well, setting up the correct locale is especially important if the language contains non-ASCII characters.\"\n\tprintf \"%s\" \"Default system language: \\\"$LOCALE\\\" [Y/n]: \"\n\tread -r OPTION\n\tcase \"$OPTION\" in\n\t\"n\")\n\t\twhile [[ $OPTION != y ]]; do\n\t\t\tsetlocale\n\t\t\tread_input_text \"Confirm locale ($LOCALE)\"\n\t\tdone\n\t\tsed -i '/'\"${LOCALE}\"'/s/^#//' /etc/locale.gen\n\t\tlocale-gen\n\t\tlocalectl set-locale LANG=\"${LOCALE_UTF8}\"\n\t\t#KDE #{{{\n\t\tif [[ $LOCALE == pt_BR || $LOCALE == en_GB || $LOCALE == zh_CN ]]; then\n\t\t\tLOCALE_KDE=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]')\n\t\telse\n\t\t\tLOCALE_KDE=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\tfi\n\t\t#}}}\n\t\t#FIREFOX #{{{\n\t\tif [[ $LOCALE == pt_BR || $LOCALE == pt_PT || $LOCALE == en_GB || $LOCALE == en_US || $LOCALE == es_AR || $LOCALE == es_CL || $LOCALE == es_ES || $LOCALE == zh_CN ]]; then\n\t\t\tLOCALE_FF=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\t\telse\n\t\t\tLOCALE_FF=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\tfi\n\t\t#}}}\n\t\t#THUNDERBIRD #{{{\n\t\tif [[ $LOCALE == pt_BR || $LOCALE == pt_PT || $LOCALE == en_US || $LOCALE == en_GB || $LOCALE == es_AR || $LOCALE == es_ES || $LOCALE == zh_CN ]]; then\n\t\t\tLOCALE_TB=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\t\telif [[ $LOCALE == es_CL ]]; then\n\t\t\tLOCALE_TB=\"es-es\"\n\t\telse\n\t\t\tLOCALE_TB=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\tfi\n\t\t#}}}\n\t\t#HUNSPELL #{{{\n\t\tif [[ $LOCALE == pt_BR ]]; then\n\t\t\tLOCALE_HS=$(echo \"$LOCALE\" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/')\n\t\telif [[ $LOCALE == pt_PT ]]; then\n\t\t\tLOCALE_HS=\"pt_pt\"\n\t\telse\n\t\t\tLOCALE_HS=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\tfi\n\t\t#}}}\n\t\t#ASPELL #{{{\n\t\tLOCALE_AS=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\t#}}}\n\t\t#LIBREOFFICE #{{{\n\t\tif [[ $LOCALE == pt_BR || $LOCALE == en_GB || $LOCALE == en_US || $LOCALE == zh_CN ]]; then\n\t\t\tLOCALE_LO=$(echo \"$LOCALE\" | sed 's/_/-/')\n\t\telse\n\t\t\tLOCALE_LO=$(echo \"$LOCALE\" | cut -d\\_ -f1)\n\t\tfi\n\t\t#}}}\n\t\t;;\n\t*) ;;\n\n\tesac\n}\n#}}}\n#SELECT/CREATE USER {{{\nselect_user() {\n\t#CREATE NEW USER {{{\n\tcreate_new_user() {\n\t\tprintf \"%s\" \"Username: \"\n\t\tread -r username\n\t\tusername=$(echo \"$username\" | tr '[:upper:]' '[:lower:]')\n\t\tuseradd -m -g users -G wheel -s /bin/bash \"${username}\"\n\t\tchfn \"${username}\"\n\t\tpasswd \"${username}\"\n\t\twhile [[ $? -ne 0 ]]; do\n\t\t\tpasswd \"${username}\"\n\t\tdone\n\t\tpause_function\n\t\tconfigure_user_account\n\t}\n\t#}}}\n\t#CONFIGURE USER ACCOUNT {{{\n\tconfigure_user_account() {\n\t\t#BASHRC {{{\n\t\tprint_title \"BASHRC - https://wiki.archlinux.org/index.php/Bashrc\"\n\t\tbashrc_list=(\"Get helmuthdu .bashrc from github\" \"Vanilla .bashrc\" \"Get personal .bashrc from github\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Choose your .bashrc\\n\"\n\t\tselect OPT in \"${bashrc_list[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"git\"\n\t\t\t\tpackage_install \"colordiff\"\n\t\t\t\tgit clone https://github.com/helmuthdu/dotfiles\n\t\t\t\tcp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc dotfiles/.yaourtrc ~/\n\t\t\t\tcp dotfiles/.bashrc dotfiles/.dircolors dotfiles/.dircolors_256 dotfiles/.nanorc dotfiles/.yaourtrc /home/\"${username}\"/\n\t\t\t\trm -fr dotfiles\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tcp /etc/skel/.bashrc /home/\"${username}\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"git\"\n\t\t\t\tprintf \"%s\" \"Enter your github username [ex: helmuthdu]: \"\n\t\t\t\tread -r GITHUB_USER\n\t\t\t\tprintf \"%s\" \"Enter your github repository [ex: aui]: \"\n\t\t\t\tread -r GITHUB_REPO\n\t\t\t\tgit clone https://github.com/\"$GITHUB_USER\"/\"$GITHUB_REPO\"\n\t\t\t\tcp -R \"$GITHUB_REPO\"/.* /home/\"${username}\"/\n\t\t\t\trm -fr \"$GITHUB_REPO\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\t\t[[ -n $OPT ]] && break\n\t\tdone\n\t\t#}}}\n\t\t#EDITOR {{{\n\t\tprint_title \"DEFAULT EDITOR\"\n\t\teditors_list=(\"emacs\" \"nano\" \"vi\" \"vim\" \"neovim\" \"zile\")\n\t\tPS3=\"$prompt1\"\n\t\techo -e \"Select editor\\n\"\n\t\tselect EDITOR in \"${editors_list[@]}\"; do\n\t\t\tif contains_element \"$EDITOR\" \"${editors_list[@]}\"; then\n\t\t\t\tif [[ $EDITOR == vim || $EDITOR == neovim ]]; then\n\t\t\t\t\t[[ $EDITOR == vim ]] && (! is_package_installed \"gvim\" && package_install \"vim ctags\") || package_install \"neovim python2-neovim python-neovim xclip\"\n\t\t\t\t\t#VIMRC {{{\n\t\t\t\t\tif [[ ! -f /home/${username}/.vimrc ]]; then\n\t\t\t\t\t\tvimrc_list=(\"Get helmuthdu .vimrc from github\" \"Vanilla .vimrc\" \"Get personal .vimrc from github\")\n\t\t\t\t\t\tPS3=\"$prompt1\"\n\t\t\t\t\t\techo -e \"Choose your .vimrc\\n\"\n\t\t\t\t\t\tselect OPT in \"${vimrc_list[@]}\"; do\n\t\t\t\t\t\t\tcase \"$REPLY\" in\n\t\t\t\t\t\t\t1)\n\t\t\t\t\t\t\t\tpackage_install \"git\"\n\t\t\t\t\t\t\t\tgit clone https://github.com/helmuthdu/vim /home/\"${username}\"/.vim\n\t\t\t\t\t\t\t\tln -sf /home/\"${username}\"/.vim/vimrc /home/\"${username}\"/.vimrc\n\t\t\t\t\t\t\t\tcp -R vim /home/\"${username}\"/.vim/fonts /home/\"${username}\"/.fonts\n\t\t\t\t\t\t\t\tmkdir /home/\"${username}\"/.vim/colors\n\t\t\t\t\t\t\t\tcurl -fsSL -o /home/\"${username}\"/.vim/colors/tender.vim https://raw.githubusercontent.com/jacoborus/tender.vim/master/colors/tender.vim\n\t\t\t\t\t\t\t\tGRUVBOX_NEEDED=1\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t3)\n\t\t\t\t\t\t\t\tpackage_install \"git\"\n\t\t\t\t\t\t\t\tprintf \"%s\" \"Enter your github username [ex: helmuthdu]: \"\n\t\t\t\t\t\t\t\tread -r GITHUB_USER\n\t\t\t\t\t\t\t\tprintf \"%s\" \"Enter your github repository [ex: vim]: \"\n\t\t\t\t\t\t\t\tread -r GITHUB_REPO\n\t\t\t\t\t\t\t\tgit clone https://github.com/\"$GITHUB_USER\"/\"$GITHUB_REPO\"\n\t\t\t\t\t\t\t\tcp -R \"$GITHUB_REPO\"/.vim /home/\"${username}\"/\n\t\t\t\t\t\t\t\tif [[ -f $GITHUB_REPO/vimrc ]]; then\n\t\t\t\t\t\t\t\t\tln -sf /home/\"${username}\"/.vim/vimrc /home/\"${username}\"/.vimrc\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tln -sf /home/\"${username}\"/.vim/.vimrc /home/\"${username}\"/.vimrc\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\trm -fr \"$GITHUB_REPO\"\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t2)\n\t\t\t\t\t\t\t\techo \"Nothing to do...\"\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\tesac\n\t\t\t\t\t\t\t[[ -n $OPT ]] && break\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ $EDITOR == neovim && ! -f /home/${username}/.config/nvim ]]; then\n\t\t\t\t\t\tmkdir ~/.config\n\t\t\t\t\t\tln -s ~/.vim ~/.config/nvim\n\t\t\t\t\t\tln -s ~/.vimrc ~/.config/nvim/init.vim\n\t\t\t\t\tfi\n\t\t\t\t\t#}}}\n\t\t\t\telif [[ $EDITOR == emacs ]]; then\n\t\t\t\t\tpackage_install \"emacs\"\n\t\t\t\t\t#.emacs.d{{{\n\t\t\t\t\tif [[ ! -d /home/${username}/.emacs.d && ! -f /home/${username}/.emacs ]]; then\n\t\t\t\t\t\temacsd_list=(\"Spacemacs\" \"Centaur Emacs\" \"Vanilla .emacs.d\" \"Get personal .emacs.d from github\")\n\t\t\t\t\t\tPS3=\"$prompt1\"\n\t\t\t\t\t\techo -e \"Choose your .emacs.d\\n\"\n\t\t\t\t\t\tselect OPT in \"${emacsd_list[@]}\"; do\n\t\t\t\t\t\t\tcase \"$REPLY\" in\n\t\t\t\t\t\t\t1)\n\t\t\t\t\t\t\t\tpackage_install \"git\"\n\t\t\t\t\t\t\t\tgit clone https://github.com/syl20bnr/spacemacs /home/\"${username}\"/.emacs.d\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t2)\n\t\t\t\t\t\t\t\tpackage_install \"git\"\n\t\t\t\t\t\t\t\tgit clone --depth 1 https://github.com/seagle0128/.emacs.d.git /home/\"${username}\"/.emacs.d\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t3)\n\t\t\t\t\t\t\t\tpackage_install \"git\"\n\t\t\t\t\t\t\t\tprintf \"%s\" \"Enter your github username [ex: helmuthdu]: \"\n\t\t\t\t\t\t\t\tread -r GITHUB_USER\n\t\t\t\t\t\t\t\tprintf \"%s\" \"Enter your github repository [ex: vim]: \"\n\t\t\t\t\t\t\t\tread -r GITHUB_REPO\n\t\t\t\t\t\t\t\tgit clone https://github.com/\"$GITHUB_USER\"/\"$GITHUB_REPO\" /home/\"${username}\"/.emacs.d\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t4)\n\t\t\t\t\t\t\t\techo \"Nothing to do...\"\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\t*)\n\t\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\tesac\n\t\t\t\t\t\t\t[[ -n $OPT ]] && break\n\t\t\t\t\t\tdone\n\t\t\t\t\tfi\n\t\t\t\t\t#}}}\n\t\t\t\telse\n\t\t\t\t\tpackage_install \"$EDITOR\"\n\t\t\t\tfi\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tinvalid_option\n\t\t\tfi\n\t\tdone\n\t\t#}}}\n\t\tchown -R \"${username}\":users /home/\"${username}\"\n\t}\n\t#}}}\n\tprint_title \"SELECT/CREATE USER - https://wiki.archlinux.org/index.php/Users_and_Groups\"\n\tusers_list=($(grep \"/home\" /etc/passwd | cut -d: -f1))\n\tPS3=\"$prompt1\"\n\techo \"Avaliable Users:\"\n\tif [[ $((${#users_list[@]})) -gt 0 ]]; then\n\t\tprint_warning \"WARNING: THE SELECTED USER MUST HAVE SUDO PRIVILEGES\"\n\telse\n\t\techo \"\"\n\tfi\n\tselect OPT in \"${users_list[@]}\" \"Create new user\"; do\n\t\tif [[ $OPT == \"Create new user\" ]]; then\n\t\t\tcreate_new_user\n\t\telif contains_element \"$OPT\" \"${users_list[@]}\"; then\n\t\t\tusername=$OPT\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\t\t[[ -n $OPT ]] && break\n\tdone\n\t[[ ! -f /home/${username}/.bashrc ]] && configure_user_account\n\tif [[ -n \"$http_proxy\" ]]; then\n\t\techo \"proxy = $http_proxy\" >/home/\"${username}\"/.curlrc\n\t\tchown \"${username}\":users /home/\"${username}\"/.curlrc\n\tfi\n}\n#}}}\n#CONFIGURE SUDO {{{\nconfigure_sudo() {\n\tif ! is_package_installed \"sudo\"; then\n\t\tprint_title \"SUDO - https://wiki.archlinux.org/index.php/Sudo\"\n\t\tpackage_install \"sudo\"\n\tfi\n\t#CONFIGURE SUDOERS {{{\n\tif [[ ! -f /etc/sudoers.aui ]]; then\n\t\tcp -v /etc/sudoers /etc/sudoers.aui\n\t\t## Uncomment to allow members of group wheel to execute any command\n\t\tsed -i '/%wheel ALL=(ALL) ALL/s/^#//' /etc/sudoers\n\t\t## Same thing without a password (not secure)\n\t\t#sed -i '/%wheel ALL=(ALL) NOPASSWD: ALL/s/^#//' /etc/sudoers\n\n\t\t#This config is especially helpful for those using terminal multiplexers like screen, tmux, or ratpoison, and those using sudo from scripts/cronjobs:\n\t\t{\n\t\t\techo \"\"\n\t\t\techo 'Defaults !requiretty, !tty_tickets, !umask'\n\t\t\techo 'Defaults visiblepw, path_info, insults, lecture=always'\n\t\t\techo 'Defaults loglinelen=0, logfile =/var/log/sudo.log, log_year, log_host, syslog=auth'\n\t\t\techo 'Defaults passwd_tries=3, passwd_timeout=1'\n\t\t\techo 'Defaults env_reset, always_set_home, set_home, set_logname'\n\t\t\techo 'Defaults !env_editor, editor=\"/usr/bin/vim:/usr/bin/vi:/usr/bin/nano\"'\n\t\t\techo 'Defaults timestamp_timeout=15'\n\t\t\techo 'Defaults passprompt=\"[sudo] password for %u: \"'\n\t\t\techo 'Defaults lecture=never'\n\t\t} >>/etc/sudoers\n\tfi\n\t#}}}\n}\n#}}}\n#AUR HELPER {{{\nchoose_aurhelper() {\n\tprint_title \"AUR HELPER - https://wiki.archlinux.org/index.php/AUR_Helpers\"\n\tprint_info \"AUR Helpers are written to make using the Arch User Repository more comfortable.\"\n\tprint_warning \"\\tNone of these tools are officially supported by Arch devs.\"\n\taurhelper=(\"trizen\" \"yay\" \"aurman\" \"aura\" \"pikaur\")\n\tPS3=\"$prompt1\"\n\techo -e \"Choose your default AUR helper to install\\n\"\n\tselect OPT in \"${aurhelper[@]}\"; do\n\t\tcase \"$REPLY\" in\n\t\t1)\n\t\t\tif ! is_package_installed \"trizen\"; then\n\t\t\t\tpackage_install \"base-devel git perl\"\n\t\t\t\taui_download_packages \"trizen\"\n\t\t\t\tif ! is_package_installed \"trizen\"; then\n\t\t\t\t\techo \"trizen not installed. EXIT now\"\n\t\t\t\t\tpause_function\n\t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tAUR_PKG_MANAGER=\"trizen\"\n\t\t\t;;\n\t\t2)\n\t\t\tif ! is_package_installed \"yay\"; then\n\t\t\t\tpackage_install \"base-devel git go\"\n\t\t\t\tpacman -D --asdeps go\n\t\t\t\taui_download_packages \"yay\"\n\t\t\t\tif ! is_package_installed \"yay\"; then\n\t\t\t\t\techo \"yay not installed. EXIT now\"\n\t\t\t\t\tpause_function\n\t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tAUR_PKG_MANAGER=\"yay\"\n\t\t\t;;\n\t\t3)\n\t\t\tif ! is_package_installed \"aurman\"; then\n\t\t\t\tpackage_install \"base-devel git expac python pyalpm python-requests python-feedparser python-regex python-dateutil\"\n\t\t\t\tgit clone https://github.com/polygamma/aurman.git\n\t\t\t\tpython3 aurman/setup.py install\n\t\t\t\trm -rf aurman\n\t\t\t\tif ! is_package_installed \"aurman\"; then\n\t\t\t\t\techo \"aurman not installed. EXIT now\"\n\t\t\t\t\tpause_function\n\t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tAUR_PKG_MANAGER=\"aurman\"\n\t\t\t;;\n\t\t4)\n\t\t\tif ! is_package_installed \"aura\"; then\n\t\t\t\tpackage_install \"base-devel git stack\"\n\t\t\t\tgit clone https://github.com/fosskers/aura.git\n\t\t\t\t(\n\t\t\t\t\tcd aura || exit\n\t\t\t\t\tstack install -- aura\n\t\t\t\t)\n\t\t\t\trm -rf aura\n\t\t\t\tif ! is_package_installed \"aura\"; then\n\t\t\t\t\techo \"aura not installed. EXIT now\"\n\t\t\t\t\tpause_function\n\t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tAUR_PKG_MANAGER=\"aura\"\n\t\t\t;;\n\t\t5)\n\t\t\tif ! is_package_installed \"pikaur\"; then\n\t\t\t\tpackage_install \"base-devel git\"\n\t\t\t\tgit clone https://aur.archlinux.org/pikaur.git\n\t\t\t\t(\n\t\t\t\t\tcd pikaur || exit\n\t\t\t\t\tmakepkg -fsri\n\t\t\t\t)\n\t\t\t\trm -rf pikaur\n\t\t\t\tif ! is_package_installed \"pikaur\"; then\n\t\t\t\t\techo \"pikaur not installed. EXIT now\"\n\t\t\t\t\tpause_function\n\t\t\t\t\texit 0\n\t\t\t\tfi\n\t\t\tfi\n\t\t\tAUR_PKG_MANAGER=\"pikaur\"\n\t\t\t;;\n\t\t*)\n\t\t\tinvalid_option\n\t\t\t;;\n\t\tesac\n\t\t[[ -n $OPT ]] && break\n\tdone\n\tpause_function\n}\n#}}}\n#AUTOMODE {{{\nautomatic_mode() {\n\tprint_title \"AUTOMODE\"\n\tprint_info \"Create a custom install with all options pre-selected.\\nUse this option with care.\"\n\tprint_danger \"\\tUse this mode only if you already know all the option.\\n\\tYou won't be able to select anything later.\"\n\tread_input_text \"Enable Automatic Mode\"\n\tif [[ $OPTION == y ]]; then\n\t\t$EDITOR \"${AUI_DIR}\"/lilo.automode\n\t\t# shellcheck source=/root/aui/lilo.automode\n\t\tsource \"${AUI_DIR}\"/lilo.automode\n\t\techo -e \"The installation will start now.\"\n\t\tpause_function\n\t\tAUTOMATIC_MODE=1\n\tfi\n}\n#}}}\n#CUSTOM REPOSITORIES {{{\nadd_custom_repositories() {\n\tprint_title \"CUSTOM REPOSITORIES - https://wiki.archlinux.org/index.php/Unofficial_User_Repositories\"\n\tread_input_text \"Add custom repositories\" \"$CUSTOMREPO\"\n\tif [[ $OPTION == y ]]; then\n\t\twhile true; do\n\t\t\tprint_title \"CUSTOM REPOSITORIES - https://wiki.archlinux.org/index.php/Unofficial_User_Repositories\"\n\t\t\techo \" 1) \\\"Add new repository\\\"\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tprintf \"%s\" \"$prompt1\" OPTION\n\t\t\tcase $OPTION in\n\t\t\t1)\n\t\t\t\tprintf \"%s\" \"Repository Name [ex: custom]: \"\n\t\t\t\tread -r repository_name\n\t\t\t\tprintf \"%s\" \"Repository Address [ex: file:///media/backup/Archlinux]: \"\n\t\t\t\tread -r repository_addr\n\t\t\t\tadd_repository \"${repository_name}\" \"${repository_addr}\" \"Never\"\n\t\t\t\tpause_function\n\t\t\t\t;;\n\t\t\t\"d\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\tfi\n}\n#}}}\n#BASIC SETUP {{{\ninstall_basic_setup() {\n\tprint_title \"BASH TOOLS - https://wiki.archlinux.org/index.php/Bash\"\n\tpackage_install \"bc rsync mlocate bash-completion pkgstats arch-wiki-lite\"\n\tpause_function\n\tprint_title \"(UN)COMPRESS TOOLS - https://wiki.archlinux.org/index.php/P7zip\"\n\tpackage_install \"zip unzip unrar p7zip lzop cpio\"\n\tpause_function\n\tprint_title \"AVAHI - https://wiki.archlinux.org/index.php/Avahi\"\n\tprint_info \"Avahi is a free Zero Configuration Networking (Zeroconf) implementation, including a system for multicast DNS/DNS-SD discovery. It allows programs to publish and discovers services and hosts running on a local network with no specific configuration.\"\n\tpackage_install \"avahi nss-mdns\"\n\tis_package_installed \"avahi\" && system_ctl enable avahi-daemon.service\n\tpause_function\n\tprint_title \"ALSA - https://wiki.archlinux.org/index.php/Alsa\"\n\tprint_info \"The Advanced Linux Sound Architecture (ALSA) is a Linux kernel component intended to replace the original Open Sound System (OSSv3) for providing device drivers for sound cards.\"\n\tpackage_install \"alsa-utils alsa-plugins\"\n\tpause_function\n\tprint_title \"PULSEAUDIO - https://wiki.archlinux.org/index.php/Pulseaudio\"\n\tprint_info \"PulseAudio is the default sound server that serves as a proxy to sound applications using existing kernel sound components like ALSA or OSS\"\n\tpackage_install \"pulseaudio pulseaudio-alsa\"\n\tpause_function\n\tprint_title \"FAT/exFAT/F2FS - https://wiki.archlinux.org/index.php/File_Systems\"\n\tprint_info \"A file system (or filesystem) is a means to organize data expected to be retained after a program terminates by providing procedures to store, retrieve and update data, as well as manage the available space on the device(s) which contain it. A file system organizes data in an efficient manner and is tuned to the specific characteristics of the device.\"\n\tpackage_install \"dosfstools exfat-utils f2fs-tools fuse fuse-exfat mtpfs\"\n\tpause_function\n\tprint_title \"SYSTEMD-TIMESYNCD - https://wiki.archlinux.org/index.php/Systemd-timesyncd\"\n\tprint_info \"A file system (or filesystem) is a means to organize data expected to be retained after a program terminates by providing procedures to store, retrieve and update data, as well as manage the available space on the device(s) which contain it. A file system organizes data in an efficient manner and is tuned to the specific characteristics of the device.\"\n\ttimedatectl set-ntp true\n\tpause_function\n}\n#}}}\n#SSH {{{\ninstall_ssh() {\n\tprint_title \"SSH - https://wiki.archlinux.org/index.php/Ssh\"\n\tprint_info \"Secure Shell (SSH) is a network protocol that allows data to be exchanged over a secure channel between two computers.\"\n\tread_input_text \"Install ssh\" \"$SSH\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"openssh\"\n\t\tsystem_ctl enable sshd\n\t\t[[ ! -f /etc/ssh/sshd_config.aui ]] && cp -v /etc/ssh/sshd_config /etc/ssh/sshd_config.aui\n\t\t#CONFIGURE SSHD_CONF #{{{\n\t\tsed -i '/Port 22/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/Protocol 2/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/HostKey \\/etc\\/ssh\\/ssh_host_rsa_key/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/HostKey \\/etc\\/ssh\\/ssh_host_dsa_key/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/HostKey \\/etc\\/ssh\\/ssh_host_ecdsa_key/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/KeyRegenerationInterval/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/ServerKeyBits/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/SyslogFacility/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/LogLevel/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/LoginGraceTime/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/PermitRootLogin/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/HostbasedAuthentication no/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/StrictModes/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/RSAAuthentication/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/PubkeyAuthentication/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/IgnoreRhosts/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/PermitEmptyPasswords/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/AllowTcpForwarding/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/AllowTcpForwarding no/d' /etc/ssh/sshd_config\n\t\tsed -i '/X11Forwarding/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/X11Forwarding/s/no/yes/' /etc/ssh/sshd_config\n\t\tsed -i -e '/\\tX11Forwarding yes/d' /etc/ssh/sshd_config\n\t\tsed -i '/X11DisplayOffset/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/X11UseLocalhost/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/PrintMotd/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/PrintMotd/s/yes/no/' /etc/ssh/sshd_config\n\t\tsed -i '/PrintLastLog/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/TCPKeepAlive/s/^#//' /etc/ssh/sshd_config\n\t\tsed -i '/the setting of/s/^/#/' /etc/ssh/sshd_config\n\t\tsed -i '/RhostsRSAAuthentication and HostbasedAuthentication/s/^/#/' /etc/ssh/sshd_config\n\t\t#}}}\n\t\tpause_function\n\tfi\n}\n#}}}\n#NFS {{{\ninstall_nfs() {\n\tprint_title \"NFS - https://wiki.archlinux.org/index.php/Nfs\"\n\tprint_info \"NFS allowing a user on a client computer to access files over a network in a manner similar to how local storage is accessed.\"\n\tread_input_text \"Install nfs\" \"$NFS\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"nfs-utils\"\n\t\tsystem_ctl enable rpcbind\n\t\tsystem_ctl enable nfs-client.target\n\t\tsystem_ctl enable remote-fs.target\n\t\tpause_function\n\tfi\n}\n#}}}\n#ZSH {{{\ninstall_zsh() {\n\tprint_title \"ZSH - https://wiki.archlinux.org/index.php/Zsh\"\n\tprint_info \"Zsh is a powerful shell that operates as both an interactive shell and as a scripting language interpreter. \"\n\tread_input_text \"Install zsh\" \"$ZSH\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"zsh\"\n\t\tread_input_text \"Install oh-my-zsh\" \"$OH_MY_ZSH\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\tif [[ -f /home/${username}/.zshrc ]]; then\n\t\t\t\tread_input_text \"Replace current .zshrc file\"\n\t\t\t\tif [[ $OPTION == y ]]; then\n\t\t\t\t\trun_as_user \"mv /home/${username}/.zshrc /home/${username}/.zshrc.bkp\"\n\t\t\t\t\trun_as_user \"sh -c \\\"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\\\"\"\n\t\t\t\t\trun_as_user \"$EDITOR /home/${username}/.zshrc\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\trun_as_user \"sh -c \\\"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\\\"\"\n\t\t\t\trun_as_user \"$EDITOR /home/${username}/.zshrc\"\n\t\t\tfi\n\t\tfi\n\t\tpause_function\n\tfi\n}\n#}}}\n#FISH {{{\ninstall_fish() {\n\tprint_title \"fish - https://wiki.archlinux.org/index.php/fish\"\n\tprint_info \"fish is a friendly interactive shell and a commandline shell intended to be interactive and user-friendly. \"\n\tread_input_text \"Install fish\" \"$FISH\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"fish\"\n\t\tread_input_text \"Install oh-my-fish\" \"$OH_MY_FISH\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\trun_as_user \"curl -L https://get.oh-my.fish | fish\"\n\t\tfi\n\t\tpause_function\n\tfi\n}\n#}}}\n#SAMBA {{{\ninstall_samba() {\n\tprint_title \"SAMBA - https://wiki.archlinux.org/index.php/Samba\"\n\tprint_info \"Samba is a re-implementation of the SMB/CIFS networking protocol, it facilitates file and printer sharing among Linux and Windows systems as an alternative to NFS.\"\n\tread_input_text \"Install Samba\" \"$SAMBA\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"wget samba smbnetfs\"\n\t\t[[ ! -f /etc/samba/smb.conf ]] && wget -q -O /etc/samba/smb.conf \"https://git.samba.org/samba.git/?p=samba.git;a=blob_plain;f=examples/smb.conf.default;hb=HEAD\"\n\t\tlocal CONFIG_SAMBA=$(grep usershare /etc/samba/smb.conf)\n\t\tif [[ -z $CONFIG_SAMBA ]]; then\n\t\t\t# configure usershare\n\t\t\texport USERSHARES_DIR=\"/var/lib/samba/usershare\"\n\t\t\texport USERSHARES_GROUP=\"sambashare\"\n\t\t\tmkdir -p ${USERSHARES_DIR}\n\t\t\tgroupadd ${USERSHARES_GROUP}\n\t\t\tchown root:${USERSHARES_GROUP} ${USERSHARES_DIR}\n\t\t\tchmod 1770 ${USERSHARES_DIR}\n\t\t\tsed -i -e '/\\[global\\]/a\\\\n   usershare path = /var/lib/samba/usershare\\n   usershare max shares = 100\\n   usershare allow guests = yes\\n   usershare owner only = False' /etc/samba/smb.conf\n\t\t\tsed -i -e '/\\[global\\]/a\\\\n   socket options = IPTOS_LOWDELAY TCP_NODELAY SO_KEEPALIVE\\n   write cache size = 2097152\\n   use sendfile = yes\\n' /etc/samba/smb.conf\n\t\t\tusermod -a -G ${USERSHARES_GROUP} \"${username}\"\n\t\t\tsed -i '/user_allow_other/s/^#//' /etc/fuse.conf\n\t\t\tmodprobe fuse\n\t\tfi\n\t\techo \"Enter your new samba account password:\"\n\t\tpdbedit -a -u \"${username}\"\n\t\twhile [[ $? -ne 0 ]]; do\n\t\t\tpdbedit -a -u \"${username}\"\n\t\tdone\n\t\t# enable services\n\t\tsystem_ctl enable smb.service\n\t\tsystem_ctl enable nmb.service\n\t\tpause_function\n\tfi\n}\n#}}}\n#READAHEAD {{{\nenable_readahead() {\n\tprint_title \"Readahead - https://wiki.archlinux.org/index.php/Improve_Boot_Performance\"\n\tprint_info \"Systemd comes with its own readahead implementation, this should in principle improve boot time. However, depending on your kernel version and the type of your hard drive, your mileage may vary (i.e. it might be slower).\"\n\tread_input_text \"Enable Readahead\" \"$READAHEAD\"\n\tif [[ $OPTION == y ]]; then\n\t\tsystem_ctl enable systemd-readahead-collect\n\t\tsystem_ctl enable systemd-readahead-replay\n\t\tpause_function\n\tfi\n}\n#}}}\n#ZRAM {{{\ninstall_zram() {\n\tprint_title \"ZRAM - https://wiki.archlinux.org/index.php/Maximizing_Performance\"\n\tprint_info \"Zram creates a device in RAM and compresses it. If you use for swap means that part of the RAM can hold much more information but uses more CPU. Still, it is much quicker than swapping to a hard drive. If a system often falls back to swap, this could improve responsiveness. Zram is in mainline staging (therefore its not stable yet, use with caution).\"\n\tread_input_text \"Install Zram\" \"$ZRAM\"\n\tif [[ $OPTION == y ]]; then\n\t\taur_package_install \"zramswap\"\n\t\tsystem_ctl enable zramswap\n\t\tpause_function\n\tfi\n}\n#}}}\n#TLP {{{\ninstall_tlp() {\n\tprint_title \"TLP - https://wiki.archlinux.org/index.php/Tlp\"\n\tprint_info \"TLP is an advanced power management tool for Linux. It is a pure command line tool with automated background tasks and does not contain a GUI.\"\n\tread_input_text \"Install TLP\" \"$TLP\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"tlp\"\n\t\tsystem_ctl enable tlp.service\n\t\tsystem_ctl enable tlp-sleep.service\n\t\tsystem_ctl mask systemd-rfkill.service\n\t\tsystem_ctl mask systemd-rfkill.socket\n\t\ttlp start\n\t\tpause_function\n\tfi\n}\n#}}}\n#XORG {{{\ninstall_xorg() {\n\tprint_title \"XORG - https://wiki.archlinux.org/index.php/Xorg\"\n\tprint_info \"Xorg is the public, open-source implementation of the X window system version 11.\"\n\techo \"Installing X-Server (req. for Desktopenvironment, GPU Drivers, Keyboardlayout,...)\"\n\tpackage_install \"xorg-server xorg-apps xorg-xinit xorg-xkill xorg-xinput xf86-input-libinput\"\n\tpackage_install \"mesa\"\n\tmodprobe uinput\n\tpause_function\n}\n#}}}\n#WAYLAND {{{\ninstall_wayland() {\n\tprint_title \"WAYLAND - https://wiki.archlinux.org/index.php/Wayland\"\n\tprint_info \"Wayland is a protocol for a compositing window manager to talk to its clients, as well as a library implementing the protocol. \"\n\tpackage_install \"weston xorg-server-xwayland\"\n\tpause_function\n}\n#}}}\n#FONT CONFIGURATION {{{\nfont_config() {\n\tprint_title \"FONTS CONFIGURATION - https://wiki.archlinux.org/index.php/Font_Configuration\"\n\tprint_info \"Fontconfig is a library designed to provide a list of available fonts to applications, and also for configuration for how fonts get rendered.\"\n\tpacman -S --asdeps --needed cairo fontconfig freetype2\n\tpause_function\n}\n#}}}\n#VIDEO CARDS {{{\ncreate_ramdisk_environment() {\n\tif [ \"$(ls /boot | grep hardened -c)\" -gt \"0\" ]; then\n\t\tmkinitcpio -p linux-hardened\n\telif [ \"$(ls /boot | grep lts -c)\" -gt \"0\" ]; then\n\t\tmkinitcpio -p linux-lts\n\telif [ \"$(ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\tmkinitcpio -p linux-zen\n\telse\n\t\tmkinitcpio -p linux\n\tfi\n}\ninstall_video_cards() {\n\tpackage_install \"dmidecode\"\n\tprint_title \"VIDEO CARD\"\n\tcheck_vga\n\t#Virtualbox {{{\n\tif [[ ${VIDEO_DRIVER} == virtualbox ]]; then\n\t\tif [ \"$(lspci | grep 'VMware SVGA' -c)\" -gt \"0\" ]; then\n\t\t\tpackage_install \"xf86-video-vmware\"\n\t\tfi\n\t\tif [ \"$(ls /boot | grep hardened -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep lts -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\t\tpackage_install \"virtualbox-guest-utils mesa-libgl\"\n\t\telse\n\t\t\tpackage_install \"virtualbox-guest-utils mesa-libgl\"\n\t\tfi\n\t\tadd_module \"vboxguest vboxsf vboxvideo\" \"virtualbox-guest\"\n\t\tadd_user_to_group \"${username}\" vboxsf\n\t\tsystem_ctl enable vboxservice\n\t\tcreate_ramdisk_environment\n\t#}}}\n\t#VMware {{{\n\telif [[ ${VIDEO_DRIVER} == vmware ]]; then\n\t\tpackage_install \"xf86-video-vmware xf86-input-vmmouse\"\n\t\tif [ \"$(ls /boot | grep hardened -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep lts -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\t\taur_package_install \"open-vm-tools-dkms\"\n\t\telse\n\t\t\tpackage_install \"open-vm-tools\"\n\t\tfi\n\t\tcat /proc/version >/etc/arch-release\n\t\tsystem_ctl enable vmtoolsd\n\t\tcreate_ramdisk_environment\n\t#}}}\n\t#Optimus {{{\n\telif [[ ${VIDEO_DRIVER} == optimus ]]; then\n\t\tXF86_DRIVERS=$(pacman -Qe | grep xf86-video | awk '{print $1}')\n\t\t[[ -n $XF86_DRIVERS ]] && pacman -Rcsn \"$XF86_DRIVERS\"\n\t\tread_input_text \"Use NVIDIA PRIME Render Offload instead of Bumblebee?\" \"$BUMBLEBEE\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\tpackage_install \"nvidia nvidia-utils libglvnd nvidia-prime\"\n\t\t\tpackage_install \"mesa mesa-libgl libvdpau-va-gl\"\n\t\t\t[[ ${ARCHI} == x86_64 ]] && pacman -S --needed lib32-virtualgl lib32-nvidia-utils\n\t\t\treplace_line '*options nouveau modeset=1' '#options nouveau modeset=1' /etc/modprobe.d/modprobe.conf\n\t\t\treplace_line '*MODULES=\"nouveau\"' '#MODULES=\"nouveau\"' /etc/mkinitcpio.conf\n\t\t\tcreate_ramdisk_environment\n\t\telse\n\t\t\tpacman -S --needed xf86-video-intel bumblebee nvidia\n\t\t\t[[ ${ARCHI} == x86_64 ]] && pacman -S --needed lib32-virtualgl lib32-nvidia-utils\n\t\t\treplace_line '*options nouveau modeset=1' '#options nouveau modeset=1' /etc/modprobe.d/modprobe.conf\n\t\t\treplace_line '*MODULES=\"nouveau\"' '#MODULES=\"nouveau\"' /etc/mkinitcpio.conf\n\t\t\tcreate_ramdisk_environment\n\t\t\tadd_user_to_group \"${username}\" bumblebee\n\t\tfi\n\t#}}}\n\t#NVIDIA {{{\n\telif [[ ${VIDEO_DRIVER} == nvidia ]]; then\n\t\tXF86_DRIVERS=$(pacman -Qe | grep xf86-video | awk '{print $1}')\n\t\t[[ -n $XF86_DRIVERS ]] && pacman -Rcsn \"$XF86_DRIVERS\"\n\t\tif [ \"$(ls /boot | grep hardened -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep lts -c)\" -gt \"0\" ] || [ \"$(ls /boot | grep zen -c)\" -gt \"0\" ]; then\n\t\t\tpackage_install \"nvidia-dkms nvidia-utils libglvnd\"\n\t\t\techo \"Do not forget to make a mkinitcpio every time you updated the nvidia driver!\"\n\t\telse\n\t\t\tpackage_install \"nvidia nvidia-utils libglvnd\"\n\t\tfi\n\t\t[[ ${ARCHI} == x86_64 ]] && pacman -S --needed lib32-nvidia-utils\n\t\treplace_line '*options nouveau modeset=1' '#options nouveau modeset=1' /etc/modprobe.d/modprobe.conf\n\t\treplace_line '*MODULES=\"nouveau\"' '#MODULES=\"nouveau\"' /etc/mkinitcpio.conf\n\t\tcreate_ramdisk_environment\n\t\tnvidia-xconfig --add-argb-glx-visuals --allow-glx-with-composite --composite --render-accel -o /etc/X11/xorg.conf.d/20-nvidia.conf\n\t#}}}\n\t#Nouveau [NVIDIA] {{{\n\telif [[ ${VIDEO_DRIVER} == nouveau ]]; then\n\t\tis_package_installed \"nvidia\" && pacman -Rdds --noconfirm nvidia{,-utils}\n\t\t[[ ${ARCHI} == x86_64 ]] && is_package_installed \"lib32-nvidia-utils\" && pacman -Rdds --noconfirm lib32-nvidia-utils\n\t\t[[ -f /etc/X11/xorg.conf.d/20-nvidia.conf ]] && rm /etc/X11/xorg.conf.d/20-nvidia.conf\n\t\tpackage_install \"xf86-video-${VIDEO_DRIVER} mesa-libgl libvdpau-va-gl\"\n\t\treplace_line '#*options nouveau modeset=1' 'options nouveau modeset=1' /etc/modprobe.d/modprobe.conf\n\t\treplace_line '#*MODULES=\"nouveau\"' 'MODULES=\"nouveau\"' /etc/mkinitcpio.conf\n\t\tcreate_ramdisk_environment\n\t#}}}\n\t#ATI {{{\n\telif [[ ${VIDEO_DRIVER} == ati ]]; then\n\t\t[[ -f /etc/X11/xorg.conf.d/20-radeon.conf ]] && rm /etc/X11/xorg.conf.d/20-radeon.conf\n\t\t[[ -f /etc/X11/xorg.conf ]] && rm /etc/X11/xorg.conf\n\t\tpackage_install \"xf86-video-${VIDEO_DRIVER} mesa-libgl mesa-vdpau libvdpau-va-gl\"\n\t\tadd_module \"radeon\" \"ati\"\n\t\tcreate_ramdisk_environment\n\t#}}}\n\t#AMDGPU {{{\n\telif [[ ${VIDEO_DRIVER} == amdgpu ]]; then\n\t\t[[ -f /etc/X11/xorg.conf.d/20-radeon.conf ]] && rm /etc/X11/xorg.conf.d/20-radeon.conf\n\t\t[[ -f /etc/X11/xorg.conf ]] && rm /etc/X11/xorg.conf\n\t\tpackage_install \"xf86-video-${VIDEO_DRIVER} vulkan-radeon mesa-libgl mesa-vdpau libvdpau-va-gl\"\n\t\tadd_module \"amdgpu radeon\" \"ati\"\n\t\tcreate_ramdisk_environment\n\t#}}}\n\t#Intel {{{\n\telif [[ ${VIDEO_DRIVER} == intel ]]; then\n\t\tpackage_install \"xf86-video-${VIDEO_DRIVER} mesa-libgl libvdpau-va-gl\"\n\t#}}}\n\t#Vesa {{{\n\telse\n\t\tpackage_install \"xf86-video-${VIDEO_DRIVER} mesa-libgl libvdpau-va-gl\"\n\tfi\n\t#}}}\n\tif [[ ${ARCHI} == x86_64 ]]; then\n\t\tis_package_installed \"mesa-libgl\" && package_install \"lib32-mesa-libgl\"\n\t\tis_package_installed \"mesa-vdpau\" && package_install \"lib32-mesa-vdpau\"\n\tfi\n\tif is_package_installed \"libvdpau-va-gl\"; then\n\t\tadd_line \"export VDPAU_DRIVER=va_gl\" \"/etc/profile\"\n\tfi\n\tpause_function\n}\n#}}}\n#CUPS {{{\ninstall_cups() {\n\tprint_title \"CUPS - https://wiki.archlinux.org/index.php/Cups\"\n\tprint_info \"CUPS is the standards-based, open source printing system developed by Apple Inc. for Mac OS X and other UNIX-like operating systems.\"\n\tread_input_text \"Install CUPS (aka Common Unix Printing System)\" \"$CUPS\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"cups cups-pdf\"\n\t\tpackage_install \"gutenprint ghostscript gsfonts foomatic-db foomatic-db-engine foomatic-db-nonfree foomatic-db-ppds foomatic-db-nonfree-ppds foomatic-db-gutenprint-ppds\"\n\t\tsystem_ctl enable org.cups.cupsd.service\n\t\tpause_function\n\tfi\n}\n#}}}\n#ADDITIONAL FIRMWARE {{{\ninstall_additional_firmwares() {\n\tprint_title \"INSTALL ADDITIONAL FIRMWARES\"\n\tread_input_text \"Install additional firmwares [Audio,Bluetooth,Scanner,Wireless]\" \"$FIRMWARE\"\n\tif [[ $OPTION == y ]]; then\n\t\twhile true; do\n\t\t\tprint_title \"INSTALL ADDITIONAL FIRMWARES\"\n\t\t\techo \" 1) $(menu_item \"aic94xx-firmware\") $AUR\"\n\t\t\techo \" 2) $(menu_item \"alsa-firmware\")\"\n\t\t\techo \" 3) $(menu_item \"b43-firmware\") $AUR\"\n\t\t\techo \" 4) $(menu_item \"b43-firmware-legacy\") $AUR\"\n\t\t\techo \" 5) $(menu_item \"bluez-firmware\") [Broadcom BCM203x/STLC2300 Bluetooth]\"\n\t\t\techo \" 6) $(menu_item \"broadcom-wl-dkms\")\"\n\t\t\techo \" 7) $(menu_item \"ipw2100-fw\")\"\n\t\t\techo \" 8) $(menu_item \"ipw2200-fw\")\"\n\t\t\techo \" 9) $(menu_item \"libffado\") [Fireware Audio Devices]\"\n\t\t\techo \"10) $(menu_item \"libmtp\") [Android Devices]\"\n\t\t\techo \"11) $(menu_item \"libraw1394\") [IEEE1394 Driver]\"\n\t\t\techo \"12) $(menu_item \"wd719x-firmware\") $AUR\"\n\t\t\techo \"13) $(menu_item \"upd72020x-fw\") [Renesas USB3.0 Driver] $AUR\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tFIRMWARE_OPTIONS+=\" d\"\n\t\t\tread_input_options \"$FIRMWARE_OPTIONS\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\taur_package_install \"aic94xx-firmware\"\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tpackage_install \"alsa-firmware\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\taur_package_install \"b43-firmware\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\taur_package_install \"b43-firmware-legacy\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\tpackage_install \"bluez-firmware\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\tpackage_install \"broadcom-wl-dkms\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\tpackage_install \"ipw2100-fw\"\n\t\t\t\t\t;;\n\t\t\t\t8)\n\t\t\t\t\tpackage_install \"ipw2200-fw\"\n\t\t\t\t\t;;\n\t\t\t\t9)\n\t\t\t\t\tpackage_install \"libffado\"\n\t\t\t\t\t;;\n\t\t\t\t10)\n\t\t\t\t\tpackage_install \"libmtp\"\n\t\t\t\t\tpackage_install \"android-udev\"\n\t\t\t\t\t;;\n\t\t\t\t11)\n\t\t\t\t\tpackage_install \"libraw1394\"\n\t\t\t\t\t;;\n\t\t\t\t12)\n\t\t\t\t\taur_package_install \"wd719x-firmware\"\n\t\t\t\t\t;;\n\t\t\t\t13)\n\t\t\t\t\taur_package_install \"upd72020x-fw\"\n\t\t\t\t\t;;\n\t\t\t\t\"d\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\t\tcreate_ramdisk_environment\n\t\tdone\n\tfi\n}\n#}}}\n#DESKTOP ENVIRONMENT {{{\ninstall_desktop_environment() {\n\tinstall_icon_theme() { #{{{\n\t\twhile true; do\n\t\t\tprint_title \"GNOME ICONS\"\n\t\t\techo \" 1) $(menu_item \"arc-icon-theme\")\"\n\t\t\techo \" 2) $(menu_item \"adwaita-icon-theme-git\") $AUR\"\n\t\t\techo \" 3) $(menu_item \"emerald-icon-theme-git\") $AUR\"\n\t\t\techo \" 4) $(menu_item \"la-capitaine-icon-theme-git\") $AUR\"\n\t\t\techo \" 5) $(menu_item \"numix-icon-theme-git\") $AUR\"\n\t\t\techo \" 6) $(menu_item \"paper-icon-theme-git\") $AUR\"\n\t\t\techo \" 7) $(menu_item \"papirus-icon-theme-git\") $AUR\"\n\t\t\techo \" 8) $(menu_item \"pop-icon-theme-git\") $AUR\"\n\t\t\techo \" 9) $(menu_item \"solus-icon-theme-git\") $AUR\"\n\t\t\techo \"10) $(menu_item \"yaru-icon-theme-git\") $AUR\"\n\t\t\techo \"\"\n\t\t\techo \" b) BACK\"\n\t\t\techo \"\"\n\t\t\tICONS_THEMES+=\" b\"\n\t\t\tread_input_options \"$ICONS_THEMES\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tpackage_install \"arc-icon-theme elementary-icon-theme\"\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\taur_package_install \"adwaita-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\taur_package_install \"emerald-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\taur_package_install \"la-capitaine-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\taur_package_install \"numix-icon-theme-git numix-circle-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\taur_package_install \"paper-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\taur_package_install \"papirus-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t8)\n\t\t\t\t\taur_package_install \"pop-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t9)\n\t\t\t\t\taur_package_install \"solus-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t10)\n\t\t\t\t\taur_package_install \"yaru-icon-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t\"b\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t}                     #}}}\n\tinstall_gtk_theme() { #{{{\n\t\twhile true; do\n\t\t\tprint_title \"GTK2/GTK3 THEMES\"\n\t\t\techo \" 1) $(menu_item \"arc-gtk-theme\")\"\n\t\t\techo \" 2) $(menu_item \"abrus-gtk-theme-git\") $AUR\"\n\t\t\techo \" 3) $(menu_item \"acid-gtk-theme\") $AUR\"\n\t\t\techo \" 4) $(menu_item \"adapta-gtk-theme-git\") $AUR\"\n\t\t\techo \" 5) $(menu_item \"amber-theme-git\") $AUR\"\n\t\t\techo \" 6) $(menu_item \"candy-gtk-theme\") $AUR\"\n\t\t\techo \" 7) $(menu_item \"evopop-gtk-theme-git\") $AUR\"\n\t\t\techo \" 8) $(menu_item \"flat-remix-gtk\") $AUR\"\n\t\t\techo \" 9) $(menu_item \"zuki-themes-git\") $AUR\"\n\t\t\techo \"10) $(menu_item \"zukitwo-themes-git\") $AUR\"\n\t\t\techo \"\"\n\t\t\techo \" b) BACK\"\n\t\t\techo \"\"\n\t\t\tGTK_THEMES+=\" b\"\n\t\t\tread_input_options \"$GTK_THEMES\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tpackage_install \"arc-gtk-theme\"\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\taur_package_install \"abrus-gtk-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\taur_package_install \"acid-gtk-theme\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\taur_package_install \"adapta-gtk-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\taur_package_install \"amber-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\taur_package_install \"candy-gtk-theme\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\taur_package_install \"evopop-gtk-theme-git\"\n\t\t\t\t\t;;\n\t\t\t\t8)\n\t\t\t\t\taur_package_install \"flat-remix-gtk\"\n\t\t\t\t\t;;\n\t\t\t\t9)\n\t\t\t\t\taur_package_install \"zuki-themes-git\"\n\t\t\t\t\t;;\n\t\t\t\t10)\n\t\t\t\t\taur_package_install \"zukitwo-themes-git\"\n\t\t\t\t\t;;\n\t\t\t\t\"b\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t}                           #}}}\n\tinstall_display_manager() { #{{{\n\t\twhile true; do\n\t\t\tprint_title \"DISPLAY MANAGER - https://wiki.archlinux.org/index.php/Display_Manager\"\n\t\t\tprint_info \"A display manager, or login manager, is a graphical interface screen that is displayed at the end of the boot process in place of the default shell.\"\n\t\t\techo \" 1) $(menu_item \"entrance-git\" \"Entrance\") $AUR\"\n\t\t\techo \" 2) $(menu_item \"gdm\" \"GDM\")\"\n\t\t\techo \" 3) $(menu_item \"lightdm\" \"LightDM\")\"\n\t\t\techo \" 4) $(menu_item \"sddm\" \"SDDM\")\"\n\t\t\techo \" 5) $(menu_item \"slim\" \"Slim\")\"\n\t\t\techo \" 6) $(menu_item \"lxdm\" \"lxdm\")\"\n\t\t\techo \" 7) $(menu_item \"lxdm-gtk3\" \"lxdm-gtk3\")\"\n\t\t\techo \"\"\n\t\t\techo \" b) BACK|SKIP\"\n\t\t\techo \"\"\n\t\t\tDISPLAY_MANAGER+=\" b\"\n\t\t\tread_input_options \"$DISPLAY_MANAGER\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\taur_package_install \"entrance-git\"\n\t\t\t\t\tsystem_ctl enable entrance\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tpackage_install \"gdm\"\n\t\t\t\t\tsystem_ctl enable gdm\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\tpackage_install \"lightdm lightdm-kde-greeter\"\n\t\t\t\t\telse\n\t\t\t\t\t\tpackage_install \"lightdm lightdm-gtk-greeter\"\n\t\t\t\t\tfi\n\t\t\t\t\tsystem_ctl enable lightdm\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\tpackage_install \"sddm sddm-kcm\"\n\t\t\t\t\tsystem_ctl enable sddm\n\t\t\t\t\tsddm --example-config >/etc/sddm.conf\n\t\t\t\t\tsed -i 's/Current=/Current=breeze/' /etc/sddm.conf\n\t\t\t\t\tsed -i 's/CursorTheme=/CursorTheme=breeze_cursors/' /etc/sddm.conf\n\t\t\t\t\tsed -i 's/Numlock=none/Numlock=on/' /etc/sddm.conf\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\tpackage_install \"slim\"\n\t\t\t\t\tsystem_ctl enable slim\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\tpackage_install \"lxdm\"\n\t\t\t\t\tsystem_ctl enable lxdm\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\tpackage_install \"lxdm-gtk3\"\n\t\t\t\t\tsystem_ctl enable lxdm\n\t\t\t\t\t;;\n\t\t\t\t\"b\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t}                  #}}}\n\tinstall_themes() { #{{{\n\t\twhile true; do\n\t\t\tprint_title \"$1 THEMES\"\n\t\t\techo \" 1) $(menu_item \"arc-icon-theme\" \"Icons Themes\")\"\n\t\t\techo \" 2) $(menu_item \"arc-gtk-theme\" \"GTK Themes\")\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tTHEMES_OPTIONS+=\" d\"\n\t\t\tread_input_options \"$THEMES_OPTIONS\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tinstall_icon_theme\n\t\t\t\t\tOPT=1\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tinstall_gtk_theme\n\t\t\t\t\tOPT=2\n\t\t\t\t\t;;\n\t\t\t\t\"d\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t}                     #}}}\n\tinstall_misc_apps() { #{{{\n\t\twhile true; do\n\t\t\tprint_title \"$1 ESSENTIAL APPS\"\n\t\t\techo \" 1) $(menu_item \"entrance-git gdm lightdm sddm\" \"Display Manager\") $AUR\"\n\t\t\techo \" 2) $(menu_item \"dmenu\")\"\n\t\t\techo \" 3) $(menu_item \"viewnior\")\"\n\t\t\techo \" 4) $(menu_item \"gmrun\")\"\n\t\t\techo \" 5) $(menu_item \"rxvt-unicode\")\"\n\t\t\techo \" 6) $(menu_item \"squeeze-git\") $AUR\"\n\t\t\techo \" 7) $(menu_item \"thunar\")\"\n\t\t\techo \" 8) $(menu_item \"tint2\")\"\n\t\t\techo \" 9) $(menu_item \"volwheel\")\"\n\t\t\techo \"10) $(menu_item \"xfburn\")\"\n\t\t\techo \"11) $(menu_item \"xcompmgr\")\"\n\t\t\techo \"12) $(menu_item \"zathura\")\"\n\t\t\techo \"13) $(menu_item \"speedtest-cli\")\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tMISCAPPS+=\" d\"\n\t\t\tread_input_options \"$MISCAPPS\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tinstall_display_manager\n\t\t\t\t\tOPT=1\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tpackage_install \"dmenu\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\tpackage_install \"viewnior\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\tpackage_install \"gmrun\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\tpackage_install \"rxvt-unicode\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\taur_package_install \"squeeze-git\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\tpackage_install \"thunar tumbler\"\n\t\t\t\t\t;;\n\t\t\t\t8)\n\t\t\t\t\tpackage_install \"tint2\"\n\t\t\t\t\t;;\n\t\t\t\t9)\n\t\t\t\t\tpackage_install \"volwheel\"\n\t\t\t\t\t;;\n\t\t\t\t10)\n\t\t\t\t\tpackage_install \"xfburn\"\n\t\t\t\t\t;;\n\t\t\t\t11)\n\t\t\t\t\tpackage_install \"xcompmgr transset-df\"\n\t\t\t\t\t;;\n\t\t\t\t12)\n\t\t\t\t\tpackage_install \"zathura\"\n\t\t\t\t\t;;\n\t\t\t\t13)\n\t\t\t\t\tpackage_install \"speedtest-cli\"\n\t\t\t\t\t;;\n\t\t\t\t\"d\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t} #}}}\n\n\tprint_title \"DESKTOP ENVIRONMENT|WINDOW MANAGER\"\n\tprint_info \"A DE provide a complete GUI for a system by bundling together a variety of X clients written using a common widget toolkit and set of libraries.\\n\\nA window manager is one component of a system's graphical user interface.\"\n\n\techo -e \"Select your DE or WM:\\n\"\n\techo \" --- DE ---         --- WM ---\"\n\techo \" 1) Cinnamon        12) Awesome\"\n\techo \" 2) Deepin          13) Fluxbox\"\n\techo \" 3) Enlightenment   14) i3\"\n\techo \" 4) GNOME           15) i3-Gaps\"\n\techo \" 5) KDE             16) OpenBox\"\n\techo \" 6) LXQT            17) Xmonad\"\n\techo \" 7) Mate\"\n\techo \" 8) XFCE\"\n\techo \" 9) Budgie\"\n\techo \" 10) UKUI\"\n\techo \" 11) Pantheon\"\n\techo \"\"\n\techo \" b) BACK\"\n\tread_input \"$DESKTOPENV\"\n\tcase \"$OPTION\" in\n\t1)\n\t\t#CINNAMON {{{\n\t\tprint_title \"CINNAMON - https://wiki.archlinux.org/index.php/Cinnamon\"\n\t\tprint_info \"Cinnamon is a fork of GNOME Shell, initially developed by Linux Mint. It attempts to provide a more traditional user environment based on the desktop metaphor, like GNOME 2. Cinnamon uses Muffin, a fork of the GNOME 3 window manager Mutter, as its window manager.\"\n\t\tpackage_install \"cinnamon nemo-fileroller nemo-preview\"\n\t\t# Cinnamon does not include the following: a screenshot utility, editor, terminal... Hence installing some default choices explicitly.\n\t\tpackage_install \"gnome-screenshot gedit gnome-terminal gnome-control-center gnome-system-monitor gnome-power-manager\"\n\t\t# Suggested by https://bbs.archlinux.org/viewtopic.php?id=185123\n\t\taur_package_install \"mintlocale\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"cinnamon-session\"\n\t\tCINNAMON=1\n\t\tpause_function\n\t\tinstall_display_manager\n\t\tinstall_themes \"CINNAMON\"\n\t\t;;\n\t\t#}}}\n\t2)\n\t\t#DEEPIN {{{\n\t\tprint_title \"DEEPIN - https://wiki.archlinux.org/index.php/Deepin_Desktop_Environment\"\n\t\tprint_info \"The desktop interface and apps feature an intuitive and elegant design. Moving around, sharing and searching etc. has become simply a joyful experience.\"\n\t\tpackage_install \"deepin deepin-extra lightdm-gtk-greeter\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"startdde\"\n\t\t#Tweaks\n\t\tpause_function\n\t\tsystem_ctl enable lightdm\n\t\tsed -i 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-deepin-greeter/' /etc/lightdm/lightdm.conf\n\t\t;;\n\t\t#}}}\n\t3)\n\t\t#ENLIGHTENMENT {{{\n\t\tprint_title \"ENLIGHTENMENT - http://wiki.archlinux.org/index.php/Enlightenment\"\n\t\tprint_info \"Enlightenment, also known simply as E, is a stacking window manager for the X Window System which can be used alone or in conjunction with a desktop environment such as GNOME or KDE. Enlightenment is often used as a substitute for a full desktop environment.\"\n\t\tpackage_install \"enlightenment terminology\"\n\t\tpackage_install \"leafpad epdfview\"\n\t\tpackage_install \"lxappearance\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"enlightenment_start\"\n\t\tpause_function\n\t\tinstall_misc_apps \"Enlightenment\"\n\t\tinstall_themes \"Enlightenment\"\n\t\t;;\n\t\t#}}}\n\t4)\n\t\t#GNOME {{{\n\t\tprint_title \"GNOME - https://wiki.archlinux.org/index.php/GNOME\"\n\t\tprint_info \"GNOME is a desktop environment and graphical user interface that runs on top of a computer operating system. It is composed entirely of free and open source software. It is an international project that includes creating software development frameworks, selecting application software for the desktop, and working on the programs that manage application launching, file handling, and window and task management.\"\n\t\tpackage_install \"gnome gnome-extra gnome-software gnome-initial-setup\"\n\t\tpackage_install \"deja-dup gedit-plugins gpaste gnome-tweak-tool gnome-power-manager\"\n\t\tpackage_install \"nautilus-share\"\n\t\t# remove gnome games\n\t\tpackage_remove \"aisleriot atomix four-in-a-row five-or-more gnome-2048 gnome-chess gnome-klotski gnome-mahjongg gnome-mines gnome-nibbles gnome-robots gnome-sudoku gnome-tetravex gnome-taquin swell-foop hitori iagno quadrapassel lightsoff tali\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"gnome-session\"\n\t\tGNOME=1\n\t\tpause_function\n\t\tinstall_themes \"GNOME\"\n\t\t#Gnome Display Manager (a reimplementation of xdm)\n\t\tsystem_ctl enable gdm\n\t\t;;\n\t\t#}}}\n\t5)\n\t\t#KDE {{{\n\t\tprint_title \"KDE - https://wiki.archlinux.org/index.php/KDE\"\n\t\tprint_info \"KDE is an international free software community producing an integrated set of cross-platform applications designed to run on Linux, FreeBSD, Microsoft Windows, Solaris and Mac OS X systems. It is known for its Plasma Desktop, a desktop environment provided as the default working environment on many Linux distributions.\"\n\t\tpackage_install \"plasma kf5 sddm\"\n\t\tpackage_install \"ark dolphin dolphin-plugins kaccounts-providers kio-extras kdeconnect sshfs quota-tools gwenview kipi-plugins kwrite kcalc konsole spectacle okular sweeper kwalletmanager packagekit-qt5\"\n\t\tis_package_installed \"cups\" && package_install \"print-manager\"\n\t\t[[ $LOCALE != en_US ]] && package_install \"kde-l10n-$LOCALE_KDE\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"startkde\"\n\t\tpause_function\n\t\t#KDE CUSTOMIZATION {{{\n\t\twhile true; do\n\t\t\tprint_title \"KDE CUSTOMIZATION\"\n\t\t\techo \" 1) $(menu_item \"choqok\")\"\n\t\t\techo \" 2) $(menu_item \"digikam\")\"\n\t\t\techo \" 3) $(menu_item \"k3b\")\"\n\t\t\techo \" 4) $(menu_item \"kvantum\") $AUR\"\n\t\t\techo \" 5) $(menu_item \"latte-dock\")\"\n\t\t\techo \" 6) $(menu_item \"skrooge\")\"\n\t\t\techo \" 7) $(menu_item \"yakuake\")\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tKDE_OPTIONS+=\" d\"\n\t\t\tread_input_options \"$KDE_OPTIONS\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tpackage_install \"choqok\"\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tpackage_install \"digikam\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\tpackage_install \"k3b cdrdao dvd+rw-tools\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\taur_package_install \"kvantum-qt5-git\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\tpackage_install \"latte-dock\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\tpackage_install \"skrooge\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\tpackage_install \"yakuake\"\n\t\t\t\t\t;;\n\t\t\t\t\"d\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t\t#}}}\n\t\tsystem_ctl enable sddm\n\t\tsddm --example-config >/etc/sddm.conf\n\t\tsed -i 's/Current=/Current=breeze/' /etc/sddm.conf\n\t\tsed -i 's/CursorTheme=/CursorTheme=breeze_cursors/' /etc/sddm.conf\n\t\tsed -i 's/Numlock=none/Numlock=on/' /etc/sddm.conf\n\t\tKDE=1\n\t\t;;\n\t\t#}}}\n\t6)\n\t\t#LXQT {{{\n\t\tprint_title \"LXQT - http://wiki.archlinux.org/index.php/lxqt\"\n\t\tprint_info \"LXQt is the Qt port and the upcoming version of LXDE, the Lightweight Desktop Environment. It is the product of the merge between the LXDE-Qt and the Razor-qt projects: A lightweight, modular, blazing-fast and user-friendly desktop environment.\"\n\t\tpackage_install \"lxqt openbox breeze-icons\"\n\t\tpackage_install \"leafpad epdfview\"\n\t\tmkdir -p /home/\"${username}\"/.config/lxqt\n\t\tcp /etc/xdg/lxqt/* /home/\"${username}\"/.config/lxqt\n\t\tmkdir -p /home/\"${username}\"/.config/openbox/\n\t\tcp /etc/xdg/openbox/{menu.xml,rc.xml,autostart} /home/\"${username}\"/.config/openbox/\n\t\tchown -R \"${username}\":users /home/\"${username}\"/.config\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"startlxqt\"\n\t\tpause_function\n\t\tinstall_misc_apps \"LXQT\"\n\t\tinstall_themes \"LXQT\"\n\t\tKDE=1\n\t\t;;\n\t\t#}}}\n\t7)\n\t\t#MATE {{{\n\t\tprint_title \"MATE - https://wiki.archlinux.org/index.php/Mate\"\n\t\tprint_info \"The MATE Desktop Environment is a fork of GNOME 2 that aims to provide an attractive and intuitive desktop to Linux users using traditional metaphors.\"\n\t\tpackage_install \"mate mate-extra\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"mate-session\"\n\t\tpause_function\n\t\tinstall_display_manager\n\t\tinstall_themes \"MATE\"\n\t\t;;\n\t\t#}}}\n\t8)\n\t\t#XFCE {{{\n\t\tprint_title \"XFCE - https://wiki.archlinux.org/index.php/Xfce\"\n\t\tprint_info \"Xfce is a free software desktop environment for Unix and Unix-like platforms, such as Linux, Solaris, and BSD. It aims to be fast and lightweight, while still being visually appealing and easy to use.\"\n\t\tpackage_install \"xfce4 xfce4-goodies xarchiver mupdf\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"startxfce4\"\n\t\tpause_function\n\t\tinstall_display_manager\n\t\tinstall_themes \"XFCE\"\n\t\t;;\n\t\t#}}}\n\t9)\n\t\t#BUDGIE {{{\n\t\tprint_title \"BUDGIE - https://wiki.archlinux.org/index.php/Budgie_Desktop\"\n\t\tprint_info \"Budgie is the default desktop of Solus Operating System, written from scratch. Besides a more modern design, Budgie can emulate the look and feel of the GNOME 2 desktop.\"\n\t\tpackage_install \"gnome gnome-extra gnome-software gnome-initial-setup telepathy\"\n\t\tpackage_install \"deja-dup gedit-plugins gpaste gnome-tweak-tool gnome-power-manager\"\n\t\tpackage_install \"budgie-desktop\"\n\t\tpackage_install \"nautilus-share\"\n\t\t# remove gnome games\n\t\tpackage_remove \"aisleriot atomix four-in-a-row five-or-more gnome-2048 gnome-chess gnome-klotski gnome-mahjongg gnome-mines gnome-nibbles gnome-robots gnome-sudoku gnome-tetravex gnome-taquin swell-foop hitori iagno quadrapassel lightsoff\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"export XDG_CURRENT_DESKTOP=Budgie:GNOME \\n budgie-desktop\"\n\t\tGNOME=1\n\t\tpause_function\n\t\tinstall_themes \"GNOME\"\n\t\t#Gnome Display Manager (a reimplementation of xdm)\n\t\tsystem_ctl enable gdm\n\t\t;;\n\t\t#}}}\n\t10)\n\t\t#UKUI {{{\n\t\tprint_title \"UKUI - https://wiki.archlinux.org/index.php/UKUI\"\n\t\tprint_info \"UKUI is a lightweight Linux desktop environment, developed based on GTK and Qt. UKUI is the default desktop environment for Ubuntu kylin.\"\n\t\tpackage_install \"ukui xorg-server\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"ukui-session\"\n\t\tpause_function\n\t\t#Light Display Manager\n\t\tsystem_ctl enable lightdm\n\t\t;;\n\t\t#}}}\n\t11)\n\t\t#Pantheon {{{\n\t\tprint_title \"Pantheon - https://wiki.archlinux.org/title/Pantheon\"\n\t\tprint_info \"Pantheon is the desktop environment of elementary OS. It is written in Vala, using GTK 3 and Granite.\"\n\t\tpackage_install \"pantheon pantheon-print xorg-server\"\n\t\taur_package_install \"switchboard-plug-pantheon-tweaks-git\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"io.elementary.wingpanel & \\n plank & \\n exec gala\"\n\t\tpause_function\n\t\t#Light Display Manager\n\t\tsystem_ctl enable lightdm\n\t\tsed -i 's/#greeter-session=example-gtk-gnome/greeter-session=lightdm-pantheon-greeter/' /etc/lightdm/lightdm.conf\n\t\t;;\n\t\t#}}}\n\t12)\n\t\t#AWESOME {{{\n\t\tprint_title \"AWESOME - http://wiki.archlinux.org/index.php/Awesome\"\n\t\tprint_info \"awesome is a highly configurable, next generation framework window manager for X. It is very fast, extensible and licensed under the GNU GPLv2 license.\"\n\t\tpackage_install \"awesome\"\n\t\tpackage_install \"lxappearance\"\n\t\tpackage_install \"leafpad epdfview nitrogen\"\n\t\tif [[ ! -d /home/${username}/.config/awesome/ ]]; then\n\t\t\tmkdir -p /home/\"${username}\"/.config/awesome/\n\t\t\tcp /etc/xdg/awesome/rc.lua /home/\"${username}\"/.config/awesome/\n\t\t\tchown -R \"${username}\":users /home/\"${username}\"/.config\n\t\tfi\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"awesome\"\n\t\tpause_function\n\t\tinstall_misc_apps \"AWESOME\"\n\t\tinstall_themes \"AWESOME\"\n\t\t;;\n\t\t#}}}\n\t13)\n\t\t#FLUXBOX {{{\n\t\tprint_title \"FLUXBOX - http://wiki.archlinux.org/index.php/Fluxbox\"\n\t\tprint_info \"Fluxbox is yet another window manager for X11. It is based on the (now abandoned) Blackbox 0.61.1 code, but with significant enhancements and continued development. Fluxbox is very light on resources and fast, yet provides interesting window management tools such as tabbing and grouping.\"\n\t\tpackage_install \"fluxbox menumaker\"\n\t\tpackage_install \"lxappearance\"\n\t\tpackage_install \"leafpad epdfview\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"startfluxbox\"\n\t\tinstall_misc_apps \"FLUXBOX\"\n\t\tinstall_themes \"FLUXBOX\"\n\t\tpause_function\n\t\t;;\n\t\t#}}}\n\t14)\n\t\t#I3 {{{\n\t\tprint_title \"i3 - https://wiki.archlinux.org/index.php/I3\"\n\t\tprint_info \"i3 is a dynamic tiling window manager inspired by wmii that is primarily targeted at developers and advanced users. The stated goals for i3 include clear documentation, proper multi-monitor support, a tree structure for windows, and different modes like in vim.\"\n\t\tpackage_install \"i3-wm\"\n\t\tpackage_install \"dmenu\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"i3\"\n\t\tpause_function\n\t\tinstall_misc_apps \"i3\"\n\t\tinstall_themes \"i3\"\n\t\t;;\n\t\t#}}}\n\t15)\n\t\t#I3-Gaps {{{\n\t\tprint_title \"i3 - https://wiki.archlinux.org/index.php/I3\"\n\t\tprint_info \"i3-gaps is a fork of i3wm, a tiling window manager for X11 with more features, such as gaps between windows.\"\n\t\tpackage_install \"i3-gaps\"\n\t\tinstall_misc_apps \"i3\"\n\t\tinstall_themes \"i3\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"i3\"\n\t\tpause_function\n\t\t#i3-GAPS CUSTOMIZATION {{{\n\t\twhile true; do\n\t\t\tprint_title \"i3-GAPS CUSTOMIZATION\"\n\t\t\techo \" 1) $(menu_item \"arandr\")\"\n\t\t\techo \" 2) $(menu_item \"bashtop\")\"\n\t\t\techo \" 3) $(menu_item \"cava\") $AUR\"\n\t\t\techo \" 4) $(menu_item \"cmus\")\"\n\t\t\techo \" 5) $(menu_item \"dmenu\")\"\n\t\t\techo \" 6) $(menu_item \"dunst\")\"\n\t\t\techo \" 7) $(menu_item \"excalibar\") $AUR\"\n\t\t\techo \" 8) $(menu_item \"feh\")\"\n\t\t\techo \" 9) $(menu_item \"picom\")\"\n\t\t\techo \"10) $(menu_item \"polybar\") $AUR\"\n\t\t\techo \"11) $(menu_item \"qutebrowser\")\"\n\t\t\techo \"12) $(menu_item \"ranger\")\"\n\t\t\techo \"13) $(menu_item \"rofi\")\"\n\t\t\techo \"14) $(menu_item \"rxvt-unicode\")\"\n\t\t\techo \"\"\n\t\t\techo \" d) DONE\"\n\t\t\techo \"\"\n\t\t\tGAPS_OPTIONS+=\" d\"\n\t\t\tread_input_options \"$GAPS_OPTIONS\"\n\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\tcase \"$OPT\" in\n\t\t\t\t1)\n\t\t\t\t\tpackage_install \"arandr\"\n\t\t\t\t\t;;\n\t\t\t\t2)\n\t\t\t\t\tpackage_install \"bashtop\"\n\t\t\t\t\t;;\n\t\t\t\t3)\n\t\t\t\t\taur_package_install \"cava\"\n\t\t\t\t\t;;\n\t\t\t\t4)\n\t\t\t\t\tpackage_install \"cmus\"\n\t\t\t\t\t;;\n\t\t\t\t5)\n\t\t\t\t\tpackage_install \"dmenu\"\n\t\t\t\t\t;;\n\t\t\t\t6)\n\t\t\t\t\tpackage_install \"dunst\"\n\t\t\t\t\t;;\n\t\t\t\t7)\n\t\t\t\t\taur_package_install \"excalibar-git\"\n\t\t\t\t\t;;\n\t\t\t\t8)\n\t\t\t\t\tpackage_install \"feh\"\n\t\t\t\t\t;;\n\t\t\t\t9)\n\t\t\t\t\tpackage_install \"picom\"\n\t\t\t\t\t;;\n\t\t\t\t10)\n\t\t\t\t\taur_package_install \"polybar\"\n\t\t\t\t\t;;\n\t\t\t\t11)\n\t\t\t\t\tpackage_install \"qutebrowser\"\n\t\t\t\t\t;;\n\t\t\t\t12)\n\t\t\t\t\tpackage_install \"ranger\"\n\t\t\t\t\t;;\n\t\t\t\t13)\n\t\t\t\t\tpackage_install \"rofi\"\n\t\t\t\t\t;;\n\t\t\t\t14)\n\t\t\t\t\tpackage_install \"rxvt-unicode\"\n\t\t\t\t\t;;\n\t\t\t\t\"d\")\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\t\t*)\n\t\t\t\t\tinvalid_option\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tdone\n\t\t\tsource sharedfuncs_elihw\n\t\tdone\n\t\t;;\n\t\t#}}}\n\t16)\n\t\t#OPENBOX {{{\n\t\tprint_title \"OPENBOX - http://wiki.archlinux.org/index.php/Openbox\"\n\t\tprint_info \"Openbox is a lightweight and highly configurable window manager with extensive standards support.\"\n\t\tpackage_install \"openbox obconf obmenu menumaker\"\n\t\tpackage_install \"lxappearance\"\n\t\tpackage_install \"leafpad epdfview nitrogen\"\n\t\tmkdir -p /home/\"${username}\"/.config/openbox/\n\t\tcp /etc/xdg/openbox/{menu.xml,rc.xml,autostart} /home/\"${username}\"/.config/openbox/\n\t\tchown -R \"${username}\":users /home/\"${username}\"/.config\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"openbox-session\"\n\t\tpause_function\n\t\tinstall_misc_apps \"OPENBOX\"\n\t\tinstall_themes \"OPENBOX\"\n\t\t;;\n\t\t#}}}\n\t17)\n\t\t#XMONAD {{{\n\t\tprint_title \"XMONAD - http://wiki.archlinux.org/index.php/Xmonad\"\n\t\tprint_info \"xmonad is a tiling window manager for X. Windows are arranged automatically to tile the screen without gaps or overlap, maximizing screen use. Window manager features are accessible from the keyboard: a mouse is optional.\"\n\t\tpackage_install \"xmonad xmonad-contrib\"\n\t\t# config xinitrc\n\t\tconfig_xinitrc \"xmonad\"\n\t\tpause_function\n\t\tinstall_misc_apps \"XMONAD\"\n\t\tinstall_themes \"XMONAD\"\n\t\t;;\n\t\t#}}}\n\t\"b\") ;;\n\n\t*)\n\t\tinvalid_option\n\t\tinstall_desktop_environment\n\t\t;;\n\tesac\n\t#COMMON PKGS {{{\n\t#MTP SUPPORT {{{\n\tif is_package_installed \"libmtp\"; then\n\t\tpackage_install \"gvfs-mtp\"\n\tfi\n\t#}}}\n\tif [[ ${KDE} -eq 0 ]]; then\n\t\tpackage_install \"gvfs gvfs-goa gvfs-afc gvfs-mtp gvfs-google\"\n\t\tpackage_install \"xdg-user-dirs-gtk\"\n\t\tpackage_install \"pavucontrol\"\n\t\tpackage_install \"ttf-bitstream-vera ttf-dejavu\"\n\t\taur_package_install \"gnome-defaults-list\"\n\t\tis_package_installed \"cups\" && package_install \"system-config-printer gtk3-print-backends\"\n\t\tis_package_installed \"samba\" && package_install \"gvfs-smb\"\n\tfi\n\t#}}}\n\t#COMMON CONFIG {{{\n\t# speed up application startup\n\tmkdir -p ~/.compose-cache\n\t# D-Bus interface for user account query and manipulation\n\tsystem_ctl enable accounts-daemon\n\t# Improvements\n\tadd_line \"fs.inotify.max_user_watches = 524288\" \"/etc/sysctl.d/99-sysctl.conf\"\n\t#}}}\n}\n#}}}\n#CONNMAN/NETWORKMANAGER/WICD {{{\ninstall_nm_wicd() {\n\tprint_title \"NETWORK MANAGER\"\n\techo \" 1) Networkmanager\"\n\techo \" 2) Wicd\"\n\techo \" 3) ConnMan\"\n\techo \"\"\n\techo \" n) NONE\"\n\techo \"\"\n\tread_input \"$NETWORKMANAGER\"\n\tcase \"$OPTION\" in\n\t1)\n\t\tprint_title \"NETWORKMANAGER - https://wiki.archlinux.org/index.php/Networkmanager\"\n\t\tprint_info \"NetworkManager is a program for providing detection and configuration for systems to automatically connect to network. NetworkManager's functionality can be useful for both wireless and wired networks.\"\n\t\tpackage_install \"networkmanager dnsmasq networkmanager-openconnect networkmanager-openvpn networkmanager-pptp networkmanager-vpnc\"\n\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\tpackage_install \"plasma-nm\"\n\t\telif [[ ${GNOME} -eq 0 ]]; then\n\t\t\tpackage_install \"network-manager-applet nm-connection-editor gnome-keyring\"\n\t\tfi\n\t\t# network management daemon\n\t\tsystem_ctl enable NetworkManager.service\n\t\tpause_function\n\t\t;;\n\t2)\n\t\tprint_title \"WICD - https://wiki.archlinux.org/index.php/Wicd\"\n\t\tprint_info \"Wicd is a network connection manager that can manage wireless and wired interfaces, similar and an alternative to NetworkManager.\"\n\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\techo \"KDE unsupported. Installing CLI and curses versions only.\"\n\t\t\tpackage_install \"wicd\"\n\t\telse\n\t\t\tpackage_install \"wicd wicd-gtk\"\n\t\tfi\n\t\t# WICD daemon\n\t\tsystem_ctl enable wicd.service\n\t\tpause_function\n\t\t;;\n\t3)\n\t\tprint_title \"CONNMAN - https://wiki.archlinux.org/index.php/Connman\"\n\t\tprint_info \"ConnMan is an alternative to NetworkManager and Wicd and was created by Intel and the Moblin project for use with embedded devices.\"\n\t\tpackage_install \"connman\"\n\t\t# ConnMan daemon\n\t\tsystem_ctl enable connman.service\n\t\tpause_function\n\t\t;;\n\tesac\n}\n#}}}\n#USB 3G MODEM {{{\ninstall_usb_modem() {\n\tprint_title \"USB 3G MODEM - https://wiki.archlinux.org/index.php/USB_3G_Modem\"\n\tprint_info \"A number of mobile telephone networks around the world offer mobile internet connections over UMTS (or EDGE or GSM) using a portable USB modem device.\"\n\tread_input_text \"Install usb 3G modem support\" \"$USBMODEM\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"usbutils usb_modeswitch\"\n\t\tif is_package_installed \"networkmanager\"; then\n\t\t\tpackage_install \"modemmanager\"\n\t\t\t[[ ${KDE} -eq 1 ]] && package_install \"modemmanager-qt\"\n\t\t\tsystem_ctl enable ModemManager.service\n\t\telse\n\t\t\tpackage_install \"wvdial\"\n\t\tfi\n\t\tpause_function\n\tfi\n}\n#}}}\n#BLUETOOTH {{{\ninstall_bluetooth() {\n\tprint_title \"BLUETOOTH - https://wiki.archlinux.org/index.php/Bluetooth\"\n\tprint_info \"Bluetooth is a standard for the short-range wireless interconnection of cellular phones, computers, and other electronic devices. In Linux, the canonical implementation of the Bluetooth protocol stack is BlueZ\"\n\tread_input_text \"Install bluetooth support\" \"$BLUETOOTH\"\n\tif [[ $OPTION == y ]]; then\n\t\tpackage_install \"bluez bluez-utils\"\n\t\tsystem_ctl enable bluetooth.service\n\t\tpause_function\n\tfi\n}\n#}}}\n#ACCESSORIES {{{\ninstall_accessories_apps() {\n\twhile true; do\n\t\tprint_title \"ACCESSORIES APPS\"\n\t\techo \" 1) $(menu_item \"albert\")\"\n\t\techo \" 2) $(menu_item \"catfish\")\"\n\t\techo \" 3) $(menu_item \"conky-lua\") $AUR\"\n\t\techo \" 4) $(menu_item \"enpass-bin\") $AUR\"\n\t\techo \" 5) $(menu_item \"flameshot\")\"\n\t\techo \" 6) $(menu_item \"keepass\")\"\n\t\techo \" 7) $(menu_item \"pamac-aur\" \"Pamac\") $AUR\"\n\t\techo \" 8) $(menu_item \"shutter hotshots\" \"$([[ ${KDE} -eq 1 ]] && echo \"Hotshots\" || echo \"Shutter\")\")\"\n\t\techo \" 9) $(menu_item \"synapse\")\"\n\t\techo \"10) $(menu_item \"terminator\")\"\n\t\techo \"11) $(menu_item \"tilix-bin\") $AUR\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tACCESSORIES_OPTIONS+=\" b\"\n\t\tread_input_options \"$ACCESSORIES_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"albert\"\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"catfish\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\taur_package_install \"conky-lua\"\n\t\t\t\tpackage_install \"lm_sensors\"\n\t\t\t\tsensors-detect --auto\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\taur_package_install \"enpass-bin\"\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tpackage_install \"flameshot\"\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\tpackage_install \"keepass\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\taur_package_install \"pamac-aur\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\taur_package_install \"hotshots\"\n\t\t\t\telse\n\t\t\t\t\taur_package_install \"shutter\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\tpackage_install \"synapse\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"terminator\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\taur_package_install \"tilix-bin\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#DEVELOPEMENT {{{\ninstall_development_apps() {\n\twhile true; do\n\t\tprint_title \"DEVELOPMENT APPS\"\n\t\techo \" 1) $(menu_item \"atom\" \"Atom\")\"\n\t\techo \" 2) $(menu_item \"emacs\")\"\n\t\techo \" 3) $(menu_item \"gvim\")\"\n\t\techo \" 4) $(menu_item \"meld\")\"\n\t\techo \" 5) $(menu_item \"sublime-merge\") $AUR\"\n\t\techo \" 6) $(menu_item \"sublime-text2\" \"Sublime Text 2\") $AUR\"\n\t\techo \" 7) $(menu_item \"sublime-text-dev\" \"Sublime Text 3\") $AUR\"\n\t\techo \" 8) $(menu_item \"android-studio\" \"Android Studio\") $AUR\"\n\t\techo \" 9) $(menu_item \"jetbrains-toolbox\" \"Jetbrains Toolbox\") $AUR\"\n\t\techo \"10) $(menu_item \"intellij-idea-community-edition\" \"IntelliJ IDEA Community Edition\")\"\n\t\techo \"11) $(menu_item \"intellij-idea-ultimate-edition\" \"IntelliJ IDEA Ultimate Edition\") $AUR\"\n\t\techo \"12) $(menu_item \"micro\") $AUR\"\n\t\techo \"13) $(menu_item \"monodevelop\")\"\n\t\techo \"14) $(menu_item \"qtcreator\")\"\n\t\techo \"15) $(menu_item \"mysql-workbench\" \"MySQL Workbench\") $AUR\"\n\t\techo \"16) $(menu_item \"jdk8-openjdk\" \"OpenJDK 8\")\"\n\t\techo \"17) $(menu_item \"jdk9-openjdk\" \"OpenJDK 9\")\"\n\t\techo \"18) $(menu_item \"jdk10-openjdk\" \"OpenJDK 10\")\"\n\t\techo \"19) $(menu_item \"jdk\" \"Oracle JDK\") $AUR\"\n\t\techo \"20) $(menu_item \"nodejs\")\"\n\t\techo \"21) $(menu_item \"visual-studio-code-bin\" \"Visual Studio Code\") $AUR\"\n\t\techo \"22) $(menu_item \"gitg\")\"\n\t\techo \"23) $(menu_item \"kdiff3\")\"\n\t\techo \"24) $(menu_item \"regexxer\")\"\n\t\techo \"25) $(menu_item \"postman-bin\" \"Postman\") $AUR\"\n\t\techo \"26) $(menu_item \"gitkraken\" \"Gitkraken\") $AUR\"\n\t\techo \"27) $(menu_item \"freecad\" \"FreeCad\") $AUR\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tDEVELOPMENT_OPTIONS+=\" b\"\n\t\tread_input_options \"$DEVELOPMENT_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"atom\"\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"emacs\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_remove \"vim\"\n\t\t\t\tpackage_install \"gvim ctags\"\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"meld\"\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\taur_package_install \"sublime-merge\"\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\taur_package_install \"sublime-text2\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\taur_package_install \"sublime-text-dev\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\taur_package_install \"android-sdk android-sdk-platform-tools android-sdk-build-tools android-platform\"\n\t\t\t\tadd_user_to_group \"${username}\" sdkusers\n\t\t\t\tchown -R :sdkusers /opt/android-sdk/\n\t\t\t\tchmod -R g+w /opt/android-sdk/\n\t\t\t\tadd_line \"export ANDROID_HOME=/opt/android-sdk\" \"/home/${username}/.bashrc\"\n\t\t\t\taur_package_install \"android-studio\"\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\taur_package_install \"jetbrains-toolbox\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"intellij-idea-community-edition\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\taur_package_install \"intellij-idea-ultimate-edition\"\n\t\t\t\t;;\n\t\t\t12)\n\t\t\t\taur_package_install \"micro\"\n\t\t\t\t;;\n\t\t\t13)\n\t\t\t\tpackage_install \"monodevelop monodevelop-debugger-gdb\"\n\t\t\t\t;;\n\t\t\t14)\n\t\t\t\tpackage_install \"qtcreator\"\n\t\t\t\t;;\n\t\t\t15)\n\t\t\t\taur_package_install \"mysql-workbench\"\n\t\t\t\t;;\n\t\t\t16)\n\t\t\t\tpackage_remove \"jdk\"\n\t\t\t\tpackage_install \"jdk8-openjdk\"\n\t\t\t\t;;\n\t\t\t17)\n\t\t\t\tpackage_remove \"jdk\"\n\t\t\t\tpackage_install \"jdk9-openjdk\"\n\t\t\t\t;;\n\t\t\t18)\n\t\t\t\tpackage_remove \"jdk\"\n\t\t\t\tpackage_install \"jdk10-openjdk\"\n\t\t\t\t;;\n\t\t\t19)\n\t\t\t\tpackage_remove \"jre{7,8,9,10}-openjdk\"\n\t\t\t\tpackage_remove \"jdk{7,8,9,10}-openjdk\"\n\t\t\t\taur_package_install \"jdk\"\n\t\t\t\t;;\n\t\t\t20)\n\t\t\t\tpackage_install \"nodejs\"\n\t\t\t\t;;\n\t\t\t21)\n\t\t\t\taur_package_install \"visual-studio-code-bin\"\n\t\t\t\t;;\n\t\t\t22)\n\t\t\t\taur_package_install \"gitg\"\n\t\t\t\taur_package_install \"qgit\"\n\t\t\t\t;;\n\t\t\t23)\n\t\t\t\taur_package_install \"kdiff3\"\n\t\t\t\t;;\n\t\t\t24)\n\t\t\t\taur_package_install \"regexxer\"\n\t\t\t\t;;\n\t\t\t25)\n\t\t\t\taur_package_install \"postman-bin\"\n\t\t\t\t;;\n\t\t\t26)\n\t\t\t\taur_package_install \"gitkraken\"\n\t\t\t\t;;\n\t\t\t27)\n\t\t\t\taur_package_install \"freecad\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#OFFICE {{{\ninstall_office_apps() {\n\twhile true; do\n\t\tprint_title \"OFFICE APPS\"\n\t\techo \" 1) $(menu_item \"goffice calligra-libs\" \"$([[ ${KDE} -eq 1 ]] && echo \"Caligra\" || echo \"Abiword + Gnumeric\")\")\"\n\t\techo \" 2) $(menu_item \"calibre\")\"\n\t\techo \" 3) $(menu_item \"goldendict\")\"\n\t\techo \" 4) $(menu_item \"homebank\")\"\n\t\techo \" 5) $(menu_item \"texlive-core\" \"latex\")\"\n\t\techo \" 6) $(menu_item \"libreoffice-fresh\" \"LibreOffice\")\"\n\t\techo \" 7) $(menu_item \"lyx\")\"\n\t\techo \" 8) $(menu_item \"ocrfeeder\")\"\n\t\techo \" 9) $(menu_item \"tellico\")\"\n\t\techo \"10) $(menu_item \"typora\")\"\n\t\techo \"11) $(menu_item \"xmind\")\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tOFFICE_OPTIONS+=\" b\"\n\t\tread_input_options \"$OFFICE_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\tpackage_install \"calligra\"\n\t\t\t\telse\n\t\t\t\t\tpackage_install \"gnumeric abiword abiword-plugins\"\n\t\t\t\tfi\n\t\t\t\tpackage_install \"hunspell hunspell-$LOCALE_HS\"\n\t\t\t\tpackage_install \"aspell aspell-$LOCALE_AS\"\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"calibre\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"goldendict\"\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"homebank\"\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tpackage_install \"texlive-most\"\n\t\t\t\tif [[ $LOCALE == pt_BR ]]; then\n\t\t\t\t\taur_package_install \"abntex\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\tprint_title \"LIBREOFFICE - https://wiki.archlinux.org/index.php/LibreOffice\"\n\t\t\t\tpackage_install \"libreoffice-fresh\"\n\t\t\t\t[[ $LOCALE != en_US ]] && package_install \"libreoffice-fresh-$LOCALE_LO\"\n\t\t\t\tpackage_install \"hunspell hunspell-$LOCALE_HS\"\n\t\t\t\tpackage_install \"aspell aspell-$LOCALE_AS\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\tpackage_install \"lyx\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\tpackage_install \"ocrfeeder tesseract gocr\"\n\t\t\t\tpackage_install \"aspell aspell-$LOCALE_AS\"\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\tpackage_install \"tellico\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"typora\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\tpackage_install \"xmind\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#SYSTEM TOOLS {{{\ninstall_system_apps() {\n\twhile true; do\n\t\tprint_title \"SYSTEM TOOLS APPS\"\n\t\techo \" 1) $(menu_item \"clamav\" \"Clamav Antivirus\")\"\n\t\techo \" 2) $(menu_item \"cockpit\") $AUR\"\n\t\techo \" 3) $(menu_item \"webmin\") $AUR\"\n\t\techo \" 4) $(menu_item \"docker\")\"\n\t\techo \" 5) $(menu_item \"firewalld\")\"\n\t\techo \" 6) $(menu_item \"gparted\")\"\n\t\techo \" 7) $(menu_item \"grsync\")\"\n\t\techo \" 8) $(menu_item \"hosts-update\") $AUR\"\n\t\techo \" 9) $(menu_item \"htop\")\"\n\t\techo \"10) $(menu_item \"stacer\") $AUR\"\n\t\techo \"11) $(menu_item \"gotop\") $AUR\"\n\t\techo \"12) $(menu_item \"ufw\")\"\n\t\techo \"13) $(menu_item \"unified-remote-server\" \"Unified Remote\") $AUR\"\n\t\techo \"14) $(menu_item \"virtualbox\")\"\n\t\techo \"15) $(menu_item \"wine\")\"\n\t\techo \"16) $(menu_item \"netdata\")\"\n\t\techo \"17) $(menu_item \"nload\")\"\n\t\techo \"18) $(menu_item \"vmware-workstation12\" \"VMware Workstation 12\") $AUR\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tSYSTEMTOOLS_OPTIONS+=\" b\"\n\t\tread_input_options \"$SYSTEMTOOLS_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"clamav\"\n\t\t\t\tcp /etc/clamav/clamd.conf.sample /etc/clamav/clamd.conf\n\t\t\t\tcp /etc/clamav/freshclam.conf.sample /etc/clamav/freshclam.conf\n\t\t\t\tsed -i '/Example/d' /etc/clamav/freshclam.conf\n\t\t\t\tsed -i '/Example/d' /etc/clamav/clamd.conf\n\t\t\t\tsystem_ctl enable clamd\n\t\t\t\tfreshclam\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\taur_package_install \"cockpit storaged linux-user-chroot ostree\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\taur_package_install \"webmin\"\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"docker\"\n\t\t\t\tadd_user_to_group \"${username}\" docker\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tis_package_installed \"ufw\" && package_remove \"ufw\"\n\t\t\t\tis_package_installed \"firewalld\" && package_remove \"firewalld\"\n\t\t\t\tpackage_install \"firewalld\"\n\t\t\t\tsystem_ctl enable firewalld\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\tpackage_install \"gparted\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\tpackage_install \"grsync\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\taur_package_install \"hosts-update\"\n\t\t\t\thosts-update\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\tpackage_install \"htop\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\taur_package_install \"stacer\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\taur_package_install \"gotop-bin\"\n\t\t\t\t;;\n\t\t\t12)\n\t\t\t\tprint_title \"UFW - https://wiki.archlinux.org/index.php/Ufw\"\n\t\t\t\tprint_info \"Ufw stands for Uncomplicated Firewall, and is a program for managing a netfilter firewall. It provides a command line interface and aims to be uncomplicated and easy to use.\"\n\t\t\t\tis_package_installed \"firewalld\" && package_remove \"firewalld\"\n\t\t\t\tpackage_install \"ufw gufw\"\n\t\t\t\tsystem_ctl enable ufw.service\n\t\t\t\t;;\n\t\t\t13)\n\t\t\t\taur_package_install \"unified-remote-server\"\n\t\t\t\tsystem_ctl enable urserver.service\n\t\t\t\t;;\n\t\t\t14)\n\t\t\t\t#Make sure we are not a VirtualBox Guest\n\t\t\t\tVIRTUALBOX_GUEST=$(dmidecode --type 1 | grep VirtualBox)\n\t\t\t\tif [[ -z ${VIRTUALBOX_GUEST} ]]; then\n\t\t\t\t\tpackage_install \"virtualbox virtualbox-host-dkms virtualbox-guest-iso linux-headers\"\n\t\t\t\t\taur_package_install \"virtualbox-ext-oracle\"\n\t\t\t\t\tadd_user_to_group \"${username}\" vboxusers\n\t\t\t\t\tmodprobe vboxdrv vboxnetflt\n\t\t\t\telse\n\t\t\t\t\tcecho \"${BBlue}[${Reset}${Bold}!${BBlue}]${Reset} VirtualBox was not installed as we are a VirtualBox guest.\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t15)\n\t\t\t\tpackage_install \"icoutils wine wine_gecko wine-mono winetricks\"\n\t\t\t\t;;\n\t\t\t16)\n\t\t\t\tpackage_install \"netdata\"\n\t\t\t\tsystem_ctl enable netdata.service\n\t\t\t\t;;\n\t\t\t17)\n\t\t\t\tpackage_install \"nload\"\n\t\t\t\t;;\n\t\t\t18)\n\t\t\t\taur_package_install \"vmware-workstation12\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#GRAPHICS {{{\ninstall_graphics_apps() {\n\twhile true; do\n\t\tprint_title \"GRAPHICS APPS\"\n\t\techo \" 1) $(menu_item \"blender\")\"\n\t\techo \" 2) $(menu_item \"gimp\")\"\n\t\techo \" 3) $(menu_item \"gthumb\")\"\n\t\techo \" 4) $(menu_item \"inkscape\")\"\n\t\techo \" 5) $(menu_item \"krita\")\"\n\t\techo \" 6) $(menu_item \"mcomix\")\"\n\t\techo \" 7) $(menu_item \"mypaint\")\"\n\t\techo \" 8) $(menu_item \"pencil\" \"Pencil Prototyping Tool\") $AUR\"\n\t\techo \" 9) $(menu_item \"scribus\")\"\n\t\techo \"10) $(menu_item \"shotwell\")\"\n\t\techo \"11) $(menu_item \"simple-scan\")\"\n\t\techo \"12) $(menu_item \"yacreader\")\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tGRAPHICS_OPTIONS+=\" b\"\n\t\tread_input_options \"$GRAPHICS_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"blender\"\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"gimp\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"gthumb\"\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"inkscape python2-numpy python-lxml\"\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tpackage_install \"krita\"\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\tpackage_install \"mcomix\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\tpackage_install \"mypaint\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\taur_package_install \"pencil\"\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\tpackage_install \"scribus\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"shotwell\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\tpackage_install \"simple-scan\"\n\t\t\t\t;;\n\t\t\t12)\n\t\t\t\tpackage_install \"yacreader\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#INTERNET {{{\ninstall_internet_apps() {\n\twhile true; do\n\t\tprint_title \"INTERNET APPS\"\n\t\techo \" 1) Browser\"\n\t\techo \" 2) Download|Fileshare\"\n\t\techo \" 3) Email|RSS\"\n\t\techo \" 4) Instant Messaging|IRC\"\n\t\techo \" 5) Mapping Tools\"\n\t\techo \" 6) VNC|Desktop Share\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tINTERNET_OPTIONS+=\" b\"\n\t\tread_input_options \"$INTERNET_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\t#BROWSER {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"BROWSER\"\n\t\t\t\t\techo \" 1) $(menu_item \"google-chrome\" \"Chrome\") $AUR\"\n\t\t\t\t\techo \" 2) $(menu_item \"chromium\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"firefox\")\"\n\t\t\t\t\techo \" 4) $(menu_item \"midori konqueror\" \"$([[ ${KDE} -eq 1 ]] && echo \"Konqueror\" || echo \"Midori\")\")\"\n\t\t\t\t\techo \" 5) $(menu_item \"opera\")\"\n\t\t\t\t\techo \" 6) $(menu_item \"vivaldi\") $AUR\"\n\t\t\t\t\techo \" 7) $(menu_item \"tor browser\") $AUR\"\n\t\t\t\t\techo \" 8) $(menu_item \"brave browser\") $AUR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tBROWSERS_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$BROWSERS_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\taur_package_install \"google-chrome\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"chromium\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\tpackage_install \"firefox firefox-i18n-$LOCALE_FF\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\t\t\tpackage_install \"konqueror\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpackage_install \"midori\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\tpackage_install \"opera\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\taur_package_install \"vivaldi\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\taur_package_install \"tor-browser\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\taur_package_install \"brave-browser\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=1\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\t#DOWNLOAD|FILESHARE {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"DOWNLOAD|FILESHARE\"\n\t\t\t\t\techo \" 1) $(menu_item \"deluge\")\"\n\t\t\t\t\techo \" 2) $(menu_item \"dropbox\") $AUR\"\n\t\t\t\t\techo \" 3) $(menu_item \"flareget\") $AUR\"\n\t\t\t\t\techo \" 4) $(menu_item \"freedownloadmanager\") $AUR\"\n\t\t\t\t\techo \" 5) $(menu_item \"google-drive-ocamlfuse\", \"Google Drive OCamlFuse\") $AUR\"\n\t\t\t\t\techo \" 6) $(menu_item \"jdownloader\") $AUR\"\n\t\t\t\t\techo \" 7) $(menu_item \"qbittorrent\")\"\n\t\t\t\t\techo \" 8) $(menu_item \"nitroshare\") $AUR\"\n\t\t\t\t\techo \" 9) $(menu_item \"rslsync\" \"Resilio Sync\") $AUR\"\n\t\t\t\t\techo \"10) $(menu_item \"sparkleshare\")\"\n\t\t\t\t\techo \"11) $(menu_item \"spideroak-one\") $AUR\"\n\t\t\t\t\techo \"12) $(menu_item \"tixati\") $AUR\"\n\t\t\t\t\techo \"13) $(menu_item \"transmission-qt transmission-gtk\" \"Transmission\")\"\n\t\t\t\t\techo \"14) $(menu_item \"uget\")\"\n\t\t\t\t\techo \"15) $(menu_item \"youtube-dl\")\"\n\t\t\t\t\techo \"16) $(menu_item \"megasync\")\"\n\t\t\t\t\techo \"17) $(menu_item \"extreme download manager\") $AUR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tDOWNLOAD_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$DOWNLOAD_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tpackage_install \"deluge\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\taur_package_install \"dropbox\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\taur_package_install \"flareget\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\taur_package_install \"freedownloadmanager\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\taur_package_install \"google-drive-ocamlfuse\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\taur_package_install \"jdownloader\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\tpackage_install \"qbittorrent\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\tpackage_install \"nitroshare\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t9)\n\t\t\t\t\t\t\taur_package_install \"rslsync\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t10)\n\t\t\t\t\t\t\tpackage_install \"sparkleshare\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t11)\n\t\t\t\t\t\t\taur_package_install \"spideroak\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t12)\n\t\t\t\t\t\t\taur_package_install \"tixati\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t13)\n\t\t\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\t\t\tpackage_install \"transmission-qt\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpackage_install \"transmission-gtk\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tif [[ -f /home/${username}/.config/transmission/settings.json ]]; then\n\t\t\t\t\t\t\t\treplace_line '\"blocklist-enabled\": false' '\"blocklist-enabled\": true' /home/\"${username}\"/.config/transmission/settings.json\n\t\t\t\t\t\t\t\treplace_line \"www\\.example\\.com\\/blocklist\" \"list\\.iblocklist\\.com\\/\\?list=bt_level1&fileformat=p2p&archiveformat=gz\" /home/\"${username}\"/.config/transmission/settings.json\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t14)\n\t\t\t\t\t\t\tpackage_install \"uget\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t15)\n\t\t\t\t\t\t\tpackage_install \"youtube-dl\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t16)\n\t\t\t\t\t\t\taur_package_install \"megasync\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t17)\n\t\t\t\t\t\t\taur_package_install \"xdman\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=2\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\t#EMAIL {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"EMAIL|RSS\"\n\t\t\t\t\techo \" 1) $(menu_item \"liferea\")\"\n\t\t\t\t\techo \" 2) $(menu_item \"thunderbird\")\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tEMAIL_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$EMAIL_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tpackage_install \"liferea\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"thunderbird\"\n\t\t\t\t\t\t\t[[ \"$LOCALE_TB\" != en_US ]] && package_install \"thunderbird-i18n-$LOCALE_TB\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=3\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\t#IM|IRC {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"IM - INSTANT MESSAGING\"\n\t\t\t\t\techo \" 1) $(menu_item \"hexchat konversation\" \"$([[ ${KDE} -eq 1 ]] && echo \"Konversation\" || echo \"Hexchat\")\")\"\n\t\t\t\t\techo \" 2) $(menu_item \"irssi\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"pidgin\")\"\n\t\t\t\t\techo \" 4) $(menu_item \"element-desktop\")\"\n\t\t\t\t\techo \" 5) $(menu_item \"skypeforlinux-stable-bin\" \"Skype Stable\") $AUR\"\n\t\t\t\t\techo \" 6) $(menu_item \"skypeforlinux-preview-bin\" \"Skype Preview\") $AUR\"\n\t\t\t\t\techo \" 7) $(menu_item \"teamspeak3\")\"\n\t\t\t\t\techo \" 8) $(menu_item \"viber\") $AUR\"\n\t\t\t\t\techo \" 9) $(menu_item \"telegram-desktop\")\"\n\t\t\t\t\techo \"10) $(menu_item \"qtox\")\"\n\t\t\t\t\techo \"11) $(menu_item \"discord\")\"\n\t\t\t\t\techo \"12) $(menu_item \"slack\") $AUR\"\n\t\t\t\t\techo \"13) $(menu_item \"vk-messenger\") $AUR\"\n\t\t\t\t\techo \"14) $(menu_item \"zoom\") $AUR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tIM_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$IM_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\t\t\tpackage_install \"konversation\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpackage_install \"hexchat\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"irssi\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\tpackage_install \"pidgin\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tpackage_install \"element-desktop\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\taur_package_install \"skypeforlinux-stable-bin\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\taur_package_install \"skypeforlinux-preview-bin\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\tpackage_install \"teamspeak3\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\taur_package_install \"viber\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t9)\n\t\t\t\t\t\t\tpackage_install \"telegram-desktop\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t10)\n\t\t\t\t\t\t\tpackage_install \"qtox\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t11)\n\t\t\t\t\t\t\tpackage_install \"discord\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t12)\n\t\t\t\t\t\t\taur_package_install \"slack-desktop\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t13)\n\t\t\t\t\t\t\taur_package_install \"vk-messanger\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t14)\n\t\t\t\t\t\t\taur_package_install \"zoom\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=4\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\t#MAPPING {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"MAPPING TOOLS\"\n\t\t\t\t\techo \" 1) $(menu_item \"google-earth\") $AUR\"\n\t\t\t\t\techo \" 2) $(menu_item \"qgis\" \"QGIS\") $AUR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tMAPPING_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$MAPPING_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\taur_package_install \"google-earth\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\taur_package_install \"qgis\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=5\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\t#DESKTOP SHARE {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"DESKTOP SHARE\"\n\t\t\t\t\techo \" 1) $(menu_item \"anydesk\") $AUR\"\n\t\t\t\t\techo \" 2) $(menu_item \"remmina\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"teamviewer\") $AUR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tVNC_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$VNC_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\taur_package_install \"anydesk\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"remmina\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\taur_package_install \"teamviewer\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=6\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#AUDIO {{{\ninstall_audio_apps() {\n\twhile true; do\n\t\tprint_title \"AUDIO APPS\"\n\t\techo \" 1) Players\"\n\t\techo \" 2) Editors|Tools\"\n\t\techo \" 3) Codecs\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tAUDIO_OPTIONS+=\" b\"\n\t\tread_input_options \"$AUDIO_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\t#PLAYERS {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"AUDIO PLAYERS\"\n\t\t\t\t\techo \" 1) $(menu_item \"amarok\")\"\n\t\t\t\t\techo \" 2) $(menu_item \"audacious\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"clementine\")\"\n\t\t\t\t\techo \" 4) $(menu_item \"deadbeef\")\"\n\t\t\t\t\techo \" 5) $(menu_item \"guayadeque\") $AUR\"\n\t\t\t\t\techo \" 6) $(menu_item \"lollypop\") $AUR\"\n\t\t\t\t\techo \" 7) $(menu_item \"musique\") $AUR\"\n\t\t\t\t\techo \" 8) $(menu_item \"pragha\")\"\n\t\t\t\t\techo \" 9) $(menu_item \"rhythmbox\")\"\n\t\t\t\t\techo \"10) $(menu_item \"spotify\") $AUR\"\n\t\t\t\t\techo \"11) $(menu_item \"timidity++\") $AUR\"\n\t\t\t\t\techo \"12) $(menu_item \"quodlibet\")\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tAUDIO_PLAYER_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$AUDIO_PLAYER_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tpackage_install \"amarok\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"audacious audacious-plugins\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\tpackage_install \"clementine\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tpackage_install \"deadbeef\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\taur_package_install \"guayadeque\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\taur_package_install \"lollypop\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\taur_package_install \"musique\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\tpackage_install \"pragha\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t9)\n\t\t\t\t\t\t\tpackage_install \"rhythmbox grilo grilo-plugins libgpod libdmapsharing gnome-python python-mako\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t10)\n\t\t\t\t\t\t\taur_package_install \"spotify ffmpeg-compat ffmpeg-compat-57\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t11)\n\t\t\t\t\t\t\taur_package_install \"timidity++ fluidr3\"\n\t\t\t\t\t\t\techo -e 'soundfont /usr/share/soundfonts/fluidr3/FluidR3GM.SF2' >>/etc/timidity++/timidity.cfg\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t12)\n\t\t\t\t\t\t\tpackage_install \"quodlibet\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=1\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\t#EDITORS {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"AUDIO EDITORS|TOOLS\"\n\t\t\t\t\techo \" 1) $(menu_item \"audacity\")\"\n\t\t\t\t\techo \" 2) $(menu_item \"easytag\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"ocenaudio-bin\") $AUR\"\n\t\t\t\t\techo \" 4) $(menu_item \"soundconverter soundkonverter\" \"$([[ ${KDE} -eq 1 ]] && echo \"Soundkonverter\" || echo \"Soundconverter\")\")\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tAUDIO_EDITOR_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$AUDIO_EDITOR_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tpackage_install \"audacity\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"easytag\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\taur_package_install \"ocenaudio-bin\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\t\t\tpackage_install \"soundkonverter\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpackage_install \"soundconverter\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=2\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"gst-plugins-base gst-plugins-base-libs gst-plugins-good gst-plugins-bad gst-plugins-ugly gst-libav\"\n\t\t\t\t[[ ${KDE} -eq 1 ]] && package_install \"phonon-qt5-gstreamer\"\n\t\t\t\t# Use the 'standard' preset by default. This preset should generally be\n\t\t\t\t# transparent to most people on most music and is already quite high in quality.\n\t\t\t\t# The resulting bitrate should be in the 170-210kbps range, according to music\n\t\t\t\t# complexity.\n\t\t\t\trun_as_user \"gconftool-2 --type string --set /system/gstreamer/0.10/audio/profiles/mp3/pipeline \\audio/x-raw-int,rate=44100,channels=2 ! lame name=enc preset=1001 ! id3v2mux\\\"\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#VIDEO {{{\ninstall_video_apps() {\n\twhile true; do\n\t\tprint_title \"VIDEO APPS\"\n\t\techo \" 1) Players\"\n\t\techo \" 2) Editors|Tools\"\n\t\techo \" 3) Codecs\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tVIDEO_OPTIONS+=\" b\"\n\t\tread_input_options \"$VIDEO_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\t#PLAYERS {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"VIDEO PLAYERS\"\n\t\t\t\t\techo \"  1) $(menu_item \"gnome-mplayer\")\"\n\t\t\t\t\techo \"  2) $(menu_item \"livestreamer\")\"\n\t\t\t\t\techo \"  3) $(menu_item \"minitube\")\"\n\t\t\t\t\techo \"  4) $(menu_item \"mpv\")\"\n\t\t\t\t\techo \"  5) $(menu_item \"smplayer\")\"\n\t\t\t\t\techo \"  6) $(menu_item \"parole\")\"\n\t\t\t\t\techo \"  7) $(menu_item \"plex-media-server\" \"Plex\") $AUR\"\n\t\t\t\t\techo \"  8) $(menu_item \"popcorntime-ce\") $AUR\"\n\t\t\t\t\techo \"  9) $(menu_item \"vlc\")\"\n\t\t\t\t\techo \" 10) $(menu_item \"kodi\")\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tVIDEO_PLAYER_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$VIDEO_PLAYER_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\tpackage_install \"gnome-mplayer\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tpackage_install \"livestreamer\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\tpackage_install \"minitube\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tpackage_install \"mpv\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\tpackage_install \"smplayer\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\tpackage_install \"parole\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\taur_package_install \"plex-media-server\"\n\t\t\t\t\t\t\tsystem_ctl enable plexmediaserver.service\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\taur_package_install \"popcorntime-ce\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t9)\n\t\t\t\t\t\t\tpackage_install \"vlc\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t10)\n\t\t\t\t\t\t\tpackage_install \"kodi\"\n\t\t\t\t\t\t\tadd_user_to_group \"${username}\" kodi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=1\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\t#EDITORS {{{\n\t\t\t\twhile true; do\n\t\t\t\t\tprint_title \"VIDEO EDITORS|TOOLS\"\n\t\t\t\t\techo \" 1) $(menu_item \"arista\") $AUR\"\n\t\t\t\t\techo \" 2) $(menu_item \"avidemux-gtk avidemux-qt\" \"Avidemux\")\"\n\t\t\t\t\techo \" 3) $(menu_item \"filebot\") $AUR\"\n\t\t\t\t\techo \" 4) $(menu_item \"handbrake\")\"\n\t\t\t\t\techo \" 5) $(menu_item \"kdenlive\")\"\n\t\t\t\t\techo \" 6) $(menu_item \"lwks\" \"Lightworks\") $AUR\"\n\t\t\t\t\techo \" 7) $(menu_item \"openshot\")\"\n\t\t\t\t\techo \" 8) $(menu_item \"pitivi\")\"\n\t\t\t\t\techo \" 9) $(menu_item \"transmageddon\")\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\techo \" b) BACK\"\n\t\t\t\t\techo \"\"\n\t\t\t\t\tVIDEO_EDITOR_OPTIONS+=\" b\"\n\t\t\t\t\tread_input_options \"$VIDEO_EDITOR_OPTIONS\"\n\t\t\t\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\t\t\t\tcase \"$OPT\" in\n\t\t\t\t\t\t1)\n\t\t\t\t\t\t\taur_package_install \"arista\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t2)\n\t\t\t\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\t\t\t\tpackage_install \"avidemux-qt\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tpackage_install \"avidemux-gtk\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t3)\n\t\t\t\t\t\t\taur_package_install \"filebot\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t4)\n\t\t\t\t\t\t\tpackage_install \"handbrake\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t5)\n\t\t\t\t\t\t\tpackage_install \"kdenlive\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t6)\n\t\t\t\t\t\t\taur_package_install \"lwks\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t7)\n\t\t\t\t\t\t\tpackage_install \"openshot\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t8)\n\t\t\t\t\t\t\tpackage_install \"pitivi frei0r-plugins\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t9)\n\t\t\t\t\t\t\tpackage_install \"transmageddon\"\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t\"b\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\t*)\n\t\t\t\t\t\t\tinvalid_option\n\t\t\t\t\t\t\t;;\n\t\t\t\t\t\tesac\n\t\t\t\t\tdone\n\t\t\t\t\tsource sharedfuncs_elihw\n\t\t\t\tdone\n\t\t\t\t#}}}\n\t\t\t\tOPT=2\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"libdvdnav libdvdcss cdrdao cdrtools ffmpeg ffmpegthumbnailer ffmpegthumbs\"\n\t\t\t\tif [[ ${KDE} -eq 1 ]]; then\n\t\t\t\t\tpackage_install \"kdegraphics-thumbnailers\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#GAMES {{{\ninstall_games() {\n\twhile true; do\n\t\tprint_title \"GAMES - https://wiki.archlinux.org/index.php/Games\"\n\t\techo \" 1) 0AD\"\n\t\techo \" 2) PlayOnLinux\"\n\t\techo \" 3) Steam\"\n\t\techo \" 4) Lutris\"\n\t\techo \" 5) Mindustry $AUR\"\n\t\techo \" 6) Minecraft $AUR\"\n\t\techo \" 7) Minetest\"\n\t\techo \" 8) Openra\"\n\t\techo \" 9) OSU!-Lazer $AUR\"\n\t\techo \"10) Wesnoth\"\n\t\techo \"11) Xonotic\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tGAMES_OPTIONS+=\" b\"\n\t\tread_input_options \"$GAMES_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"0ad\"\n\t\t\t\tOPT=1\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"playonlinux\"\n\t\t\t\tOPT=2\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_install \"steam\"\n\t\t\t\tOPT=3\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"lutris\"\n\t\t\t\tOPT=4\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\taur_package_install \"mindustry\"\n\t\t\t\tOPT=5\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\taur_package_install \"minecraft\"\n\t\t\t\tOPT=6\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\tpackage_install \"minetest\"\n\t\t\t\tOPT=7\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\tpackage_install \"openra\"\n\t\t\t\tOPT=8\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\taur_package_install \"osu-lazer\"\n\t\t\t\tOPT=9\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"wesnoth\"\n\t\t\t\tOPT=10\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\tpackage_install \"xonotic\"\n\t\t\t\tOPT=11\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#WEBSERVER {{{\ninstall_web_server() {\n\tinstall_adminer() { #{{{\n\t\taur_package_install \"adminer\"\n\t\tlocal ADMINER=$(grep Adminer /etc/httpd/conf/httpd.conf)\n\t\t[[ -z $ADMINER ]] && echo -e '\\n# Adminer Configuration\\nInclude conf/extra/httpd-adminer.conf' >>/etc/httpd/conf/httpd.conf\n\t} #}}}\n\n\tinstall_mariadb() { #{{{\n\t\tpackage_install \"mariadb\"\n\t\t/usr/bin/mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\n\t\tsystem_ctl enable mysqld.service\n\t\tsystemctl start mysqld.service\n\t\t/usr/bin/mysql_secure_installation\n\t} #}}}\n\n\tinstall_postgresql() { #{{{\n\t\tpackage_install \"postgresql\"\n\t\tmkdir -p /var/lib/postgres\n\t\tchown -R postgres:postgres /var/lib/postgres\n\t\tsystemd-tmpfiles --create postgresql.conf\n\t\techo \"Enter your new postgres account password:\"\n\t\tpasswd postgres\n\t\twhile [[ $? -ne 0 ]]; do\n\t\t\tpasswd postgres\n\t\tdone\n\t\tsu - postgres -c \"initdb --locale ${LOCALE}.UTF-8 -D /var/lib/postgres/data\"\n\t\tsystem_ctl enable postgresql.service\n\t\tsystem_ctl start postgresql.service\n\t\tread_input_text \"Install Postgis + Pgrouting\" \"$POSTGIS\"\n\t\t[[ $OPTION == y ]] && install_gis_extension\n\t} #}}}\n\n\tinstall_gis_extension() { #{{{\n\t\tpackage_install \"postgis\"\n\t\taur_package_install \"pgrouting\"\n\t} #}}}\n\n\tconfigure_php() { #{{{\n\t\tif [[ -f /etc/php/php.ini.pacnew ]]; then\n\t\t\tmv -v /etc/php/php.ini /etc/php/php.ini.pacold\n\t\t\tmv -v /etc/php/php.ini.pacnew /etc/php/php.ini\n\t\t\trm -v /etc/php/php.ini.aui\n\t\tfi\n\t\t[[ -f /etc/php/php.ini.aui ]] && echo \"/etc/php/php.ini.aui\" || cp -v /etc/php/php.ini /etc/php/php.ini.aui\n\t\tif [[ $1 == mariadb ]]; then\n\t\t\tsed -i '/mysqli.so/s/^;//' /etc/php/php.ini\n\t\t\tsed -i '/mysql.so/s/^;//' /etc/php/php.ini\n\t\t\tsed -i '/skip-networking/s/^/#/' /etc/mysql/my.cnf\n\t\telse\n\t\t\tsed -i '/pgsql.so/s/^;//' /etc/php/php.ini\n\t\tfi\n\t\tsed -i '/mcrypt.so/s/^;//' /etc/php/php.ini\n\t\tsed -i '/gd.so/s/^;//' /etc/php/php.ini\n\t\tsed -i '/display_errors=/s/off/on/' /etc/php/php.ini\n\t} #}}}\n\n\tconfigure_php_apache() { #{{{\n\t\tif [[ -f /etc/httpd/conf/httpd.conf.pacnew ]]; then\n\t\t\tmv -v /etc/httpd/conf/httpd.conf.pacnew /etc/httpd/conf/httpd.conf\n\t\t\trm -v /etc/httpd/conf/httpd.conf.aui\n\t\tfi\n\t\t[[ -f /etc/httpd/conf/httpd.conf.aui ]] && echo \"/etc/httpd/conf/httpd.conf.aui\" || cp -v /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.aui\n\t\tlocal IS_DISABLED=$(grep php5_module.conf /etc/httpd/conf/httpd.conf)\n\t\tif [[ -z $IS_DISABLED ]]; then\n\t\t\techo -e 'application/x-httpd-php5                php php5' >>/etc/httpd/conf/mime.types\n\t\t\tsed -i '/LoadModule dir_module modules\\/mod_dir.so/a\\LoadModule php5_module modules\\/libphp5.so' /etc/httpd/conf/httpd.conf\n\t\t\techo -e '\\n# Use for PHP 5.x:\\nInclude conf/extra/php5_module.conf\\n\\nAddHandler php5-script php' >>/etc/httpd/conf/httpd.conf\n\t\t\t#  libphp5.so included with php-apache does not work with mod_mpm_event (FS#39218). You'll have to use mod_mpm_prefork instead\n\t\t\treplace_line 'LoadModule mpm_event_module modules/mod_mpm_event.so' 'LoadModule mpm_prefork_module modules/mod_mpm_prefork.so' /etc/httpd/conf/httpd.conf\n\t\t\treplace_line 'DirectoryIndex\\ index.html' 'DirectoryIndex\\ index.html\\ index.php' /etc/httpd/conf/httpd.conf\n\t\tfi\n\t} #}}}\n\n\tconfigure_php_nginx() { #{{{\n\t\tif [[ -f /etc/nginx/nginx.conf.pacnew ]]; then\n\t\t\tmv -v /etc/nginx/nginx.conf.pacnew /etc/nginx/nginx.conf\n\t\t\trm -v /etc/nginx/nginx.conf.aui\n\t\tfi\n\t\t[[ -f /etc/nginx/nginx.conf.aui ]] && cp -v /etc/nginx/nginx.conf.aui /etc/nginx/nginx.conf || cp -v /etc/nginx/nginx.conf /etc/nginx/nginx.conf.aui\n\t\tsed -i -e '/location ~ \\.php$ {/,/}/d' /etc/nginx/nginx.conf\n\t\tsed -i -e '/pass the PHP/a\\        #\\n        location ~ \\.php$ {\\n            fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;\\n            fastcgi_index  index.php;\\n            root           /srv/http;\\n            include        fastcgi.conf;\\n        }' /etc/nginx/nginx.conf\n\t} #}}}\n\n\tcreate_sites_folder() { #{{{\n\t\t[[ ! -f /etc/httpd/conf/extra/httpd-userdir.conf.aui ]] && cp -v /etc/httpd/conf/extra/httpd-userdir.conf /etc/httpd/conf/extra/httpd-userdir.conf.aui\n\t\treplace_line 'public_html' 'Sites' /etc/httpd/conf/extra/httpd-userdir.conf\n\t\tsu - \"${username}\" -c \"mkdir -p ~/Sites\"\n\t\tsu - \"${username}\" -c \"chmod o+x ~/ && chmod -R o+x ~/Sites\"\n\t\tprint_line\n\t\techo \"The folder \\\"Sites\\\" has been created in your home\"\n\t\techo \"You can access your projects at \\\"http://localhost/~username\\\"\"\n\t\tpause_function\n\t} #}}}\n\n\tprint_title \"WEB SERVER - https://wiki.archlinux.org/index.php/LAMP|LAPP\"\n\tprint_info \"*Adminer is installed by default in all options\"\n\techo \" 1) LAMP - APACHE, MariaDB & PHP\"\n\techo \" 2) LAPP - APACHE, POSTGRESQL & PHP\"\n\techo \" 3) LEMP - NGINX, MariaDB & PHP\"\n\techo \" 4) LEPP - NGINX, POSTGRESQL & PHP\"\n\techo \"\"\n\techo \" b) BACK\"\n\techo \"\"\n\tread_input \"$WEBSERVER\"\n\tcase \"$OPTION\" in\n\t1)\n\t\tpackage_install \"apache php php-apache php-mcrypt php-gd\"\n\t\tinstall_mariadb\n\t\tinstall_adminer\n\t\tsystem_ctl enable httpd.service\n\t\tconfigure_php_apache\n\t\tconfigure_php \"mariadb\"\n\t\tcreate_sites_folder\n\t\t;;\n\t2)\n\t\tpackage_install \"apache php php-apache php-pgsql php-gd\"\n\t\tinstall_postgresql\n\t\tinstall_adminer\n\t\tsystem_ctl enable httpd.service\n\t\tconfigure_php_apache\n\t\tconfigure_php \"postgresql\"\n\t\tcreate_sites_folder\n\t\t;;\n\t3)\n\t\tpackage_install \"nginx php php-mcrypt php-fpm\"\n\t\tinstall_mariadb\n\t\tsystem_ctl enable nginx.service\n\t\tsystem_ctl enable php-fpm.service\n\t\tconfigure_php_nginx\n\t\tconfigure_php \"mariadb\"\n\t\t;;\n\t4)\n\t\tpackage_install \"nginx php php-fpm php-pgsql\"\n\t\tinstall_postgresql\n\t\tsystem_ctl enable nginx.service\n\t\tsystem_ctl enable php-fpm.service\n\t\tconfigure_php_nginx\n\t\tconfigure_php \"postgresql\"\n\t\t;;\n\tesac\n}\n#}}}\n#FONTS {{{\ninstall_fonts() {\n\twhile true; do\n\t\tprint_title \"FONTS - https://wiki.archlinux.org/index.php/Fonts\"\n\t\techo \" 1) $(menu_item \"ttf-dejavu\")\"\n\t\techo \" 2) $(menu_item \"ttf-fira-code\") $AUR\"\n\t\techo \" 3) $(menu_item \"ttf-google-fonts-git\") $AUR\"\n\t\techo \" 4) $(menu_item \"ttf-liberation\")\"\n\t\techo \" 5) $(menu_item \"ttf-bitstream-vera\")\"\n\t\techo \" 6) $(menu_item \"ttf-hack\")\"\n\t\techo \" 7) $(menu_item \"ttf-mac-fonts\") $AUR\"\n\t\techo \" 8) $(menu_item \"ttf-ms-fonts\") $AUR\"\n\t\techo \" 9) $(menu_item \"wqy-microhei\") (Chinese/Japanese/Korean Support)\"\n\t\techo \"10) $(menu_item \"noto-fonts-cjk\") (Chinese/Japanese/Korean Support)\"\n\t\techo \"11) $(menu_item \"nerd-fonts-complete\") $AUR\"\n\t\techo \"12) $(menu_item \"yanc-font\") $AUR\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tFONTS_OPTIONS+=\" b\"\n\t\tread_input_options \"$FONTS_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"ttf-dejavu\"\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\taur_package_install \"ttf-fira-code\"\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\tpackage_remove \"ttf-droid\"\n\t\t\t\tpackage_remove \"ttf-roboto\"\n\t\t\t\tpackage_remove \"ttf-ubuntu-font-family\"\n\t\t\t\tpackage_remove \"otf-oswald-ib\"\n\t\t\t\taur_package_install \"ttf-google-fonts-git\"\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tpackage_install \"ttf-liberation\"\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tpackage_install \"ttf-bitstream-vera\"\n\t\t\t\t;;\n\t\t\t6)\n\t\t\t\tpackage_install \"ttf-hack\"\n\t\t\t\t;;\n\t\t\t7)\n\t\t\t\taur_package_install \"ttf-mac-fonts\"\n\t\t\t\t;;\n\t\t\t8)\n\t\t\t\taur_package_install \"ttf-ms-fonts\"\n\t\t\t\t;;\n\t\t\t9)\n\t\t\t\tpackage_install \"wqy-microhei\"\n\t\t\t\t;;\n\t\t\t10)\n\t\t\t\tpackage_install \"noto-fonts-cjk\"\n\t\t\t\t;;\n\t\t\t11)\n\t\t\t\taur_package_install \"nerd-fonts-complete\"\n\t\t\t\t;;\n\t\t\t12)\n\t\t\t\taur_package_install \"yanc-font\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#IME INPUT TOOLS {{{\nchoose_ime_m17n() {\n\twhile true; do\n\t\tprint_title \"INTERNATIONALIZATION - https://wiki.archlinux.org/index.php/Internationalization\"\n\t\techo \" 1) $(menu_item \"fcitx\")\"\n\t\techo \" 2) $(menu_item \"ibus\")\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tIME_OPTIONS+=\" b\"\n\t\tread_input_options \"IME_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\tpackage_install \"fcitx\"\n\t\t\t\tpackage_install \"fcitx-m17n\"\n\t\t\t\tpackage_install \"fcitx-qt4\"\n\t\t\t\tpackage_install \"fcitx-qt5\"\n\t\t\t\tpackage_install \"fcitx-gtk2\"\n\t\t\t\tpackage_install \"fcitx-gtk3\"\n\t\t\t\tpackage_install \"kcm-fcitx\"\n\t\t\t\tpackage_install \"fcitx-configtool\"\n\t\t\t\techo -e '#!/bin/sh\\n\\n\\n# Identify fcitx as a input module for both GTK and QT apps\\nXMODIFIERS=@im=fcitx\\nGTK_IM_MODULE=fcitx\\nQT_IM_MODULE=fcitx\\n\\nexport XMODIFIERS GTK_IM_MODULE QT_IM_MODULE\\necho we set XMODIFIERS GTK_IM_MODULE QT_IM_MODULE in profile.d\\n' >/etc/profile.d/ime.sh\n\t\t\t\t# echo -e '#!/bin/sh\\n\\n\\n# Identify fcitx as a input module for both GTK and QT apps\\nXMODIFIERS=@im=fcitx\\nGTK_IM_MODULE=fcitx\\nQT_IM_MODULE=fcitx\\n\\nexport XMODIFIERS GTK_IM_MODULE QT_IM_MODULE\\necho we set XMODIFIERS GTK_IM_MODULE QT_IM_MODULE in xprofile\\n' > /etc/xprofile\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tpackage_install \"ibus\"\n\t\t\t\tpackage_install \"ibus-m17n\"\n\t\t\t\tpackage_install \"ibus-qt\"\n\t\t\t\techo -e '#!/bin/sh\\n\\n\\n# Identify ibus as a input module for both GTK and QT apps\\nXMODIFIERS=@im=ibus\\nGTK_IM_MODULE=ibus\\nQT_IM_MODULE=ibus\\n\\nexport XMODIFIERS GTK_IM_MODULE QT_IM_MODULE\\necho we set XMODIFIERS GTK_IM_MODULE QT_IM_MODULE in profile.d\\n' >/etc/profile.d/ime.sh\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#CLEAN ORPHAN PACKAGES {{{\nclean_orphan_packages() {\n\tprint_title \"CLEAN ORPHAN PACKAGES\"\n\tpacman -Rsc --noconfirm \"$(pacman -Qqdt)\"\n\t#pacman -Sc --noconfirm\n\tpacman-optimize\n}\n#}}}\n#RECONFIGURE SYSTEM {{{\nreconfigure_system() {\n\tprint_title \"HOSTNAME - https://wiki.archlinux.org/index.php/HOSTNAME\"\n\tprint_info \"A host name is a unique name created to identify a machine on a network.Host names are restricted to alphanumeric characters.\\nThe hyphen (-) can be used, but a host name cannot start or end with it. Length is restricted to 63 characters.\"\n\tprintf \"%s\" \"Hostname [ex: archlinux]: \"\n\tread -r HN\n\thostnamectl set-hostname \"$HN\"\n\n\tprint_title \"TIMEZONE - https://wiki.archlinux.org/index.php/Timezone\"\n\tprint_info \"In an operating system the time (clock) is determined by four parts: Time value, Time standard, Time Zone, and DST (Daylight Saving Time if applicable).\"\n\tOPTION=n\n\twhile [[ $OPTION != y ]]; do\n\t\tsettimezone\n\t\tread_input_text \"Confirm timezone ($ZONE/$SUBZONE)\"\n\tdone\n\ttimedatectl set-timezone \"${ZONE}\"/\"${SUBZONE}\"\n\n\tprint_title \"HARDWARE CLOCK TIME - https://wiki.archlinux.org/index.php/Internationalization\"\n\tprint_info \"This is set in /etc/adjtime. Set the hardware clock mode uniformly between your operating systems on the same machine. Otherwise, they will overwrite the time and cause clock shifts (which can cause time drift correction to be miscalibrated).\"\n\thwclock_list=('UTC' 'Localtime')\n\tPS3=\"$prompt1\"\n\tselect OPT in \"${hwclock_list[@]}\"; do\n\t\tcase \"$REPLY\" in\n\t\t1)\n\t\t\ttimedatectl set-local-rtc false\n\t\t\t;;\n\t\t2)\n\t\t\ttimedatectl set-local-rtc true\n\t\t\t;;\n\t\t*) invalid_option ;;\n\t\tesac\n\t\t[[ -n $OPT ]] && break\n\tdone\n\ttimedatectl set-ntp true\n}\n#}}}\n#EXTRA {{{\ninstall_extra() {\n\twhile true; do\n\t\tprint_title \"EXTRA\"\n\t\techo \" 1) $(menu_item \"profile-sync-daemon\") $AUR\"\n\t\techo \"\"\n\t\techo \" b) BACK\"\n\t\techo \"\"\n\t\tEXTRA_OPTIONS+=\" b\"\n\t\tread_input_options \"$EXTRA_OPTIONS\"\n\t\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\t\tcase \"$OPT\" in\n\t\t\t1)\n\t\t\t\taur_package_install \"profile-sync-daemon\"\n\t\t\t\trun_as_user \"psd\"\n\t\t\t\trun_as_user \"$EDITOR /home/${username}/.config/psd/psd.conf\"\n\t\t\t\trun_as_user \"systemctl --user enable psd.service\"\n\t\t\t\t;;\n\t\t\t\"b\")\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tsource sharedfuncs_elihw\n\tdone\n}\n#}}}\n#FINISH {{{\nfinish() {\n\tprint_title \"WARNING: PACKAGES INSTALLED FROM AUR\"\n\tprint_danger \"List of packages not officially supported that may kill your cat:\"\n\tpause_function\n\tAUR_PKG_LIST=\"${AUI_DIR}/aur_pkg_list.log\"\n\tpacman -Qm | awk '{print $1}' >\"$AUR_PKG_LIST\"\n\tless \"$AUR_PKG_LIST\"\n\tprint_title \"INSTALL COMPLETED\"\n\techo -e \"Thanks for using the Archlinux Ultimate Install script by helmuthdu\\n\"\n\t#REBOOT\n\tprintf \"%s\" \"Reboot your system [y/N]: \"\n\tread -r OPTION\n\t[[ $OPTION == y ]] && reboot\n\texit 0\n}\n#}}}\n\nwelcome\ncheck_root\ncheck_archlinux\ncheck_hostname\ncheck_connection\ncheck_pacman_blocked\ncheck_multilib\npacman_key\nsystem_update\nlanguage_selector\nconfigure_sudo\nselect_user\nchoose_aurhelper\nautomatic_mode\n\nif is_package_installed \"kdebase-workspace\"; then KDE=1; fi\n\nwhile true; do\n\tprint_title \"ARCHLINUX INSTALL - https://github.com/helmuthdu/aui\"\n\tprint_warning \"USERNAME: ${username}\"\n\techo \" 1) $(mainmenu_item \"${checklist[1]}\" \"Basic Setup\")\"\n\techo \" 2) $(mainmenu_item \"${checklist[2]}\" \"Desktop Environment|Window Manager\")\"\n\techo \" 3) $(mainmenu_item \"${checklist[3]}\" \"Accessories Apps\")\"\n\techo \" 4) $(mainmenu_item \"${checklist[4]}\" \"Development Apps\")\"\n\techo \" 5) $(mainmenu_item \"${checklist[5]}\" \"Office Apps\")\"\n\techo \" 6) $(mainmenu_item \"${checklist[6]}\" \"System Apps\")\"\n\techo \" 7) $(mainmenu_item \"${checklist[7]}\" \"Graphics Apps\")\"\n\techo \" 8) $(mainmenu_item \"${checklist[8]}\" \"Internet Apps\")\"\n\techo \" 9) $(mainmenu_item \"${checklist[9]}\" \"Audio Apps\")\"\n\techo \"10) $(mainmenu_item \"${checklist[10]}\" \"Video Apps\")\"\n\techo \"11) $(mainmenu_item \"${checklist[11]}\" \"Games\")\"\n\techo \"12) $(mainmenu_item \"${checklist[12]}\" \"Web server\")\"\n\techo \"13) $(mainmenu_item \"${checklist[13]}\" \"Fonts\")\"\n\techo \"14) $(mainmenu_item \"${checklist[14]}\" \"Internationalization\")\"\n\techo \"15) $(mainmenu_item \"${checklist[15]}\" \"Extra\")\"\n\techo \"16) $(mainmenu_item \"${checklist[16]}\" \"Clean Orphan Packages\")\"\n\techo \"17) $(mainmenu_item \"${checklist[17]}\" \"Reconfigure System\")\"\n\techo \"\"\n\techo \" q) Quit\"\n\techo \"\"\n\tMAINMENU+=\" q\"\n\tread_input_options \"$MAINMENU\"\n\tfor OPT in \"${OPTIONS[@]}\"; do\n\t\tcase \"$OPT\" in\n\t\t1)\n\t\t\tadd_custom_repositories\n\t\t\tinstall_basic_setup\n\t\t\tinstall_zsh\n\t\t\tinstall_fish\n\t\t\tinstall_ssh\n\t\t\tinstall_nfs\n\t\t\tinstall_samba\n\t\t\tinstall_tlp\n\t\t\tenable_readahead\n\t\t\tinstall_zram\n\t\t\tinstall_video_cards\n\t\t\tinstall_xorg\n\t\t\tinstall_wayland\n\t\t\tfont_config\n\t\t\tinstall_cups\n\t\t\tinstall_additional_firmwares\n\t\t\tchecklist[1]=1\n\t\t\t;;\n\t\t2)\n\t\t\tif [[ checklist[1] -eq 0 ]]; then\n\t\t\t\tprint_danger \"\\nWARNING: YOU MUST RUN THE BASIC SETUP FIRST\"\n\t\t\t\tread_input_text \"Are you sure you want to continue?\"\n\t\t\t\t[[ $OPTION != y ]] && continue\n\t\t\tfi\n\t\t\tinstall_desktop_environment\n\t\t\tinstall_nm_wicd\n\t\t\tinstall_usb_modem\n\t\t\tinstall_bluetooth\n\t\t\tchecklist[2]=1\n\t\t\t;;\n\t\t3)\n\t\t\tinstall_accessories_apps\n\t\t\tchecklist[3]=1\n\t\t\t;;\n\t\t4)\n\t\t\tinstall_development_apps\n\t\t\tchecklist[4]=1\n\t\t\t;;\n\t\t5)\n\t\t\tinstall_office_apps\n\t\t\tchecklist[5]=1\n\t\t\t;;\n\t\t6)\n\t\t\tinstall_system_apps\n\t\t\tchecklist[6]=1\n\t\t\t;;\n\t\t7)\n\t\t\tinstall_graphics_apps\n\t\t\tchecklist[7]=1\n\t\t\t;;\n\t\t8)\n\t\t\tinstall_internet_apps\n\t\t\tchecklist[8]=1\n\t\t\t;;\n\t\t9)\n\t\t\tinstall_audio_apps\n\t\t\tchecklist[9]=1\n\t\t\t;;\n\t\t10)\n\t\t\tinstall_video_apps\n\t\t\tchecklist[10]=1\n\t\t\t;;\n\t\t11)\n\t\t\tinstall_games\n\t\t\tchecklist[11]=1\n\t\t\t;;\n\t\t12)\n\t\t\tinstall_web_server\n\t\t\tchecklist[12]=1\n\t\t\t;;\n\t\t13)\n\t\t\tinstall_fonts\n\t\t\tchecklist[13]=1\n\t\t\t;;\n\t\t14)\n\t\t\tchoose_ime_m17n\n\t\t\tchecklist[14]=1\n\t\t\t;;\n\t\t15)\n\t\t\tinstall_extra\n\t\t\tchecklist[15]=1\n\t\t\t;;\n\t\t16)\n\t\t\tclean_orphan_packages\n\t\t\tchecklist[16]=1\n\t\t\t;;\n\t\t17)\n\t\t\tprint_danger \"\\nWARNING: THIS OPTION WILL RECONFIGURE THINGS LIKE HOSTNAME, TIMEZONE, CLOCK...\"\n\t\t\tread_input_text \"Are you sure you want to continue?\"\n\t\t\t[[ $OPTION != y ]] && continue\n\t\t\treconfigure_system\n\t\t\tchecklist[17]=1\n\t\t\t;;\n\t\t\"q\")\n\t\t\tfinish\n\t\t\t;;\n\t\t*)\n\t\t\tinvalid_option\n\t\t\t;;\n\t\tesac\n\tdone\ndone\n#}}}\n"
        },
        {
          "name": "lilo.automode",
          "type": "blob",
          "size": 7.47265625,
          "content": "#!/bin/bash\n#shellcheck disable=SC2034\n\n: 'ATTENTION!:\n--------------------------------------------------\n|  Created by helmuthdu <helmuthdu@gmail.com>    |\n|  Shellchecked by uniminin <uniminin@zoho.com>  |\n|  Formatted by molese <molese@protonmail.com>   |\n--------------------------------------------------\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n-------------------------------------------------------------------------------\n'\n\n#MAINMENU {{{\n#  1) Basic Setup\n#  2) Desktop Environment\n#  3) Accessories Apps\n#  4) Development Apps\n#  5) Office Apps\n#  6) System Apps\n#  7) Graphics Apps\n#  8) Internet Apps\n#  9) Audio Apps\n# 10) Video Apps\n# 11) Games\n# 12) Web server\n# 13) Fonts\n# 14) Internationalization\n# 15) Extra\n# 16) Clean Orphan Packages\nMAINMENU=\"1-13\"\n#}}}\n#BASIC SETUP {{{\nCUPS=\"y\"\nCUSTOMREPO=\"n\" # Add custom repositories\nFIRMWARE=\"n\"   # Install custom firmwares\nNFS=\"n\"\nREADAHEAD=\"n\"\nSAMBA=\"n\"\nSSH=\"n\"\nTLP=\"n\" # Laptop Power Manager\nZRAM=\"n\"\nZSH=\"n\"\nOH_MY_ZSH=\"n\"\nBETTER_VIDEO_DRIVER=\"y\" # NVIDIA/AMDGPU\nBUMBLEBEE=\"y\"           # Optimus, use Bumblebee instead of NVIDIA PRIME Render Offload\nFONTCONFIG=\"y\"\n#}}}\n#ADDITIONAL FIRMWARE {{{\n#  1) aic94xx-firmware\n#  2) alsa-firmware\n#  3) b43-firmware\n#  4) b43-firmware-legacy\n#  5) bluez-firmware\n#  6) broadcom-wl-dkms\n#  7) ipw2100-fw\n#  8) ipw2200-fw\n#  9) libffado [Firmware Audio Devices]\n# 10) libmtp [Android Devices]\n# 11) libraw1394 [IEE1394 Driver]\n# 12) wd719x-firmware\n# 13) upd72020x-fw [Renesas USB3.0 Driver]\nFIRMWARE_OPTIONS=\"\"\n#}}}\n#}}}\n#DESKTOP ENVIRONMENT|WINDOW MANAGER {{{\n#  1) Cinnamon\n#  2) Deepin\n#  3) Enlightenment\n#  4) GNOME\n#  5) KDE\n#  6) LXQT\n#  7) Mate\n#  8) XFCE\n#  9) Budgie\n# 10) UKUI\n# 11) Pantheon\n# 12) Awesome\n# 13) Fluxbox\n# 14) i3\n# 15) i3-Gaps\n# 16) OpenBox\n# 17) Xmonad\nDESKTOPENV=\"4\"\n#KDE {{{\n# 1) Choqok\n# 2) Digikam\n# 3) K3b\n# 4) kvantum\n# 5) latte-dock\n# 6) Skrooge\n# 7) Yakuake\nKDE_OPTIONS=\"1 2 3 6 7\"\n#}}}\n#ESSENTIAL APPS [Enlightenment,LXDE,Awesome,Fluxbox,OpenBox] {{{\n#  1) Display Manager\n#  2) Dmenu\n#  3) Viewnior\n#  4) Gmrun\n#  5) rxvt-unicode\n#  6) Squeeze\n#  7) Thunar\n#  8) Tint2\n#  9) Volwheel\n# 10) Xfburn\n# 11) Xcompmgr\n# 12) Zathura\n# 13) speedtest-cli\nMISCAPPS=\"1 3\"\n#}}}\n#DISPLAY MANAGER {{{\n# 1) Entrance\n# 2) GDM\n# 3) LightDM\n# 4) SDDM\n# 5) Slim\n# 6) lxdm\n# 7) lxdm-gtk\nDISPLAY_MANAGER=\"3\"\n#}}}\n# 1) Icons Themes\n# 2) GTK2|GTK3 Themes\nTHEMES_OPTIONS=\"1 2\"\n#ICONS THEMES {{{\n#  1) Arc\n#  2) Adwaita\n#  3) Emerald\n#  4) la-capitaine\n#  5) Numix\n#  6) Paper\n#  7) Papirus\n#  8) Pop\n#  9) Solus\n# 10) Yaru\nICONS_THEMES=\"7\"\n#}}}\n#GTK THEMES {{{\n#  1) Arc\n#  2) Abrus\n#  3) Acid\n#  4) Adapta\n#  5) Amber\n#  6) Candy\n#  7) Evopop\n#  8) Flat-Remix\n#  9) Zuki\n# 10) Zukitwo\nGTK_THEMES=\"1\"\n#}}}\n#}}}\n#NETWORK MANAGER {{{\n# 1) NetworkManager\n# 2) Wicd\n# 3) ConnMan\n# n) None\nNETWORKMANAGER=\"1\"\nUSBMODEM=\"y\"  #USB 3G MODEM SUPPORT\nBLUETOOTH=\"y\" #BLUETOOTH SUPPORT\n#}}}\n#ACCESSORIES {{{\n#  1) Albert\n#  2) Catfish\n#  3) Conky\n#  4) Enpass\n#  5) flameshot\n#  6) keepass\n#  7) Pamac\n#  8) Shutter| Hotshots\n#  9) Synapse\n# 10) Terminator\n# 11) Tilix\nACCESSORIES_OPTIONS=\"4 11\"\n#}}}\n#DEVELOPEMENT {{{\n#  1) Atom\n#  2) Emacs\n#  3) Gvim\n#  4) Meld\n#  5) Sublime Merge\n#  6) Sublime Text 2\n#  7) Sublime Text 3\n#  8) Android Studio\n#  9) Jetbrains Toolbox\n# 10) IntelliJ IDEA\n# 11) IntelliJ IDEA Ultimate Edition\n# 12) Micro\n# 13) Monodevelop\n# 14) QT Creator\n# 15) MySQL Workbench\n# 16) OpenJDK 8\n# 17) OpenJDK 9\n# 18) OpenJDK 10\n# 19) OracleJDK\n# 20) NodeJS\n# 21) Microsoft Visual Studio Code\n# 22) Git GUI-s\n# 23) kdiff3\n# 24) Regexxer\n# 25) Postman\n# 26) Gitkraken\n# 27) FreeCad\nDEVELOPMENT_OPTIONS=\"18\"\n#}}}\n#OFFICE {{{\n#  1) Abiword+Gnumeric|Calligra\n#  2) Calibre\n#  3) Goldendict\n#  4) Homebank\n#  5) Latex\n#  6) LibreOffice\n#  7) Lyx\n#  8) OCRFeeder\n#  9) Tellico\n# 10) Typora\n# 11) Xmind\nOFFICE_OPTIONS=\"6\"\n#}}}\n#SYSTEM TOOLS {{{\n#  1) ClamAV\n#  2) Cockpit\n#  3) Webmin\n#  4) Docker\n#  5) FirewallD\n#  6) Gparted\n#  7) Grsync\n#  8) Hosts Update\n#  9) Htop\n# 10) Stacer\n# 11) Gotop\n# 12) UFW\n# 13) Unified Remote\n# 14) Virtualbox\n# 15) Wine\n# 16) netdata\n# 17) nload\n# 18) vmware-workstation 12\nSYSTEMTOOLS_OPTIONS=\"12 14\"\n#}}}\n#GRAPHICS {{{\n#  1) Blender\n#  2) Gimp\n#  3) Gthumb\n#  4) Inkscape\n#  5) Krita\n#  6) MComix\n#  7) Mypaint\n#  8) Pencil\n#  9) Scribus\n# 10) Shotwell\n# 11) Simple Scan\n# 12) YACReader\nGRAPHICS_OPTIONS=\"2 3 4 6 10\"\n#}}}\n#INTERNET {{{\n# 1) Browser\n# 2) Download|Fileshare\n# 3) Email|RSS\n# 4) Instant Messaging|IRC\n# 5) Mapping Tools\n# 6) VNC|Desktop Share\nINTERNET_OPTIONS=\"1-6\"\n#BROWSER {{{\n# 1) Chrome\n# 2) Chromium\n# 3) Firefox\n# 4) Midori|Konqueror\n# 5) Opera\n# 6) Vivaldi\n# 7) Tor-browser\n# 8) Brave\nBROWSERS_OPTIONS=\"3\"\n#}}}\n#DOWNLOAD|FILESHARE {{{\n#  1) Deluge\n#  2) Dropbox\n#  3) Flareget\n#  4) free Download Manager\n#  5) Google Drive OCamlFuse\n#  6) Jdownloader\n#  7) qBittorrent\n#  8) Nitroshare\n#  9) Resilio Sync\n# 10) Sparkleshare\n# 11) Spideroak\n# 12) Tixati\n# 13) Transmission\n# 14) uGet\n# 15) Youtube-dl\n# 16) Megasync\n# 17) Extreme Download Manager\nDOWNLOAD_OPTIONS=\"13\"\n#}}}\n#EMAIL|RSS {{{\n# 1) Liferea\n# 2) Thunderbird\nEMAIL_OPTIONS=\"\"\n#}}}\n#IM|IRC {{{\n#  1) HexChat|Konversation\n#  2) Irssi\n#  3) Pidgin\n#  4) Riot\n#  5) Skype Stable\n#  6) Skype Preview\n#  7) Teamspeak\n#  8) Viber\n#  9) Telegram Desktop\n# 10) qTox\n# 11) Discord\n# 12) Slack\n# 13) VK Messanger\n# 14) Zoom.us\nIM_OPTIONS=\"5\"\n#}}}\n#MAPPING {{{\n# 1) Anydesk\n# 2) Google Earth\n# 3) QGIS\nMAPPING_OPTIONS=\"\"\n#}}}\n#VNC|Desktop Share {{{\n# 1) Remmina\n# 2) Teamviewer\nVNC_OPTIONS=\"\"\n#}}}\n#}}}\n#AUDIO {{{\n# 1) Players\n# 2) Editors|Tools\n# 3) Codecs\nAUDIO_OPTIONS=\"1-3\"\n#PLAYERS {{{\n#  1) Amarok\n#  2) Audacious\n#  3) Clementine\n#  4) Deadbeef\n#  5) Guayadeque\n#  6) lollypop\n#  7) Musique\n#  8) Pragha\n#  9) Rhythmbox\n# 10) Spotify\n# 11) Timidity++\n# 12) quodlibet\nAUDIO_PLAYER_OPTIONS=\"9\"\n#}}}\n#EDITORS|TOOLS {{{\n# 1) Audacity\n# 2) Easytag\n# 3) OcenAudio\n# 4) Soundconverter|Soundkonverter\nAUDIO_EDITOR_OPTIONS=\"2\"\n#}}}\n#}}}\n#VIDEO {{{\n# 1) Players\n# 2) Editors|Tools\n# 3) Codecs\nVIDEO_OPTIONS=\"1-3\"\n#PLAYERS {{{\n#  1) Gnome Mplayer\n#  2) LiveStreamer\n#  3) Minitube\n#  4) MPV\n#  5) Smplayer\n#  6) Parole\n#  7) Plex\n#  8) Popcorn Time\n#  9) VLC\n# 10) Kodi\nVIDEO_PLAYER_OPTIONS=\"8\"\n#}}}\n#EDITORS|TOOLS {{{\n# 1) Arista\n# 2) Avidemux\n# 3) Filebot\n# 4) Handbrake\n# 5) Kdenlive\n# 6) Lightworks\n# 7) Openshot\n# 8) Pitivi\n# 9) Transmageddon\nVIDEO_EDITOR_OPTIONS=\"8\"\n#}}}\n#}}}\n#GAMES {{{\n# 1) Desura\n# 2) PlayOnLinux\n# 3) Steam\n# 4) Minecraft\n# 5) OSU!LAZER\nGAMES_OPTIONS=\"\"\n#}}}\n#WEBSERVER {{{\n# 1) LAMP - APACHE, MariaDB & PHP\n# 2) LAPP - APACHE, POSTGRESQL & PHP\n# 3) LEMP - NGINX, MariaDB & PHP\n# 4) LEPP - NGINX, POSTGRESQL & PHP\nWEBSERVER=\"4\"\nPOSTGIS=\"n\"\n#}}}\n#FONTS {{{\n#  1) ttf-dejavu\n#  2) ttf-fira-code\n#  3) ttf-google-webfonts\n#  4) ttf-liberation\n#  5) ttf-bitstream-vera\n#  6) ttf-hack\n#  7) ttf-mac-fonts\n#  8) ttf-ms-fonts\n#  9) wqy-microhei\n# 10) noto-fonts-cjk\n# 11) nerd-fonts-complete\n# 12) Yanc\nFONTS_OPTIONS=\"1-9\"\n#}}}\n#IME INPUT TOOLS  {{{\n# 1) fcitx\n# 2) ibus\nIME_OPTIONS=\"\"\n#}}}\n#EXTRA {{{\n# 1) Profile Sync\nEXTRA_OPTIONS=\"\"\n#}}}\n"
        },
        {
          "name": "sharedfuncs",
          "type": "blob",
          "size": 19.5634765625,
          "content": "#!/bin/bash\n# FIX THIS ISSUES | NON-ACUTE\n#shellcheck disable=SC1091,SC2001,SC2015,SC2034,SC2126,SC2154\n#shellcheck disable=SC2154,SC2155,SC2181,SC2207,SC2143,SC2162\n\n: 'ATTENTION!:\n--------------------------------------------------\n|  Created by helmuthdu <helmuthdu@gmail.com>    |\n|  Shellchecked by uniminin <uniminin@zoho.com>  |\n|  Formatted by molese <molese@protonmail.com>   |\n--------------------------------------------------\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n------------------------------------------------------------------------\nRun this script after your first boot with archlinux (as root)\n'\n\n#GLOBAL VARIABLES {{{\nchecklist=(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)\n# COLORS {{{\nBold=$(tput bold)\nUnderline=$(tput sgr 0 1)\nReset=$(tput sgr0)\n# Regular Colors\nRed=$(tput setaf 1)\nGreen=$(tput setaf 2)\nYellow=$(tput setaf 3)\nBlue=$(tput setaf 4)\nPurple=$(tput setaf 5)\nCyan=$(tput setaf 6)\nWhite=$(tput setaf 7)\n# Bold\nBRed=${Bold}${Red}\nBGreen=${Bold}${Green}\nBYellow=${Bold}${Yellow}\nBBlue=${Bold}${Blue}\nBPurple=${Bold}${Purple}\nBCyan=${Bold}${Cyan}\nBWhite=${Bold}${White}\n#}}}\n# PROMPT {{{\nprompt1=\"Enter your option: \"\nprompt2=\"Enter n° of options (ex: 1 2 3 or 1-3): \"\nprompt3=\"You have to manually enter the following commands, then press ${BYellow}ctrl+d${Reset} or type ${BYellow}exit${Reset}:\"\n#}}}\n# EDITOR {{{\nAUTOMATIC_MODE=0\nif [[ -f /usr/bin/vim ]]; then\n\tEDITOR=\"vim\"\nelif [[ -z $EDITOR ]]; then\n\tEDITOR=\"nano\"\nfi\n#}}}\n# DESKTOP ENVIRONMENT{{{\nCINNAMON=0\nGNOME=0\nKDE=0\n#}}}\n# MOUNTPOINTS {{{\nEFI_MOUNTPOINT=\"/boot\"\nROOT_MOUNTPOINT=\"/dev/sda1\"\nBOOT_MOUNTPOINT=\"/dev/sda\"\nMOUNTPOINT=\"/mnt\"\n#}}}\nARCHI=$(uname -m) # ARCHITECTURE\nUEFI=0\nLVM=0\nLUKS=0\nLUKS_DISK=\"sda2\"\nAUR=$(echo -e \"(${BPurple}aur${Reset})\")\nEXTERNAL=$(echo -e \"(${BYellow}external${Reset})\")\nAUI_DIR=$(pwd)                                                        #CURRENT DIRECTORY\n[[ $1 == -v || $1 == --verbose ]] && VERBOSE_MODE=1 || VERBOSE_MODE=0 # VERBOSE MODE\nLOG=\"${AUI_DIR}/$(basename \"${0}\").log\"                               # LOG FILE\n[[ -f $LOG ]] && rm -f \"$LOG\"\nPKG=\"\"\nPKG_FAIL=\"${AUI_DIR}/$(basename \"${0}\")_fail_install.log\"\n[[ -f $PKG_FAIL ]] && rm -f \"$PKG_FAIL\"\nXPINGS=0    # CONNECTION CHECK\nSPIN=\"/-\\|\" #SPINNER POSITION\nAUTOMATIC_MODE=0\nTRIM=0\n#}}}\n#COMMON FUNCTIONS {{{\nerror_msg() { #{{{\n\tlocal _msg=\"${1}\"\n\techo -e \"${_msg}\"\n\texit 1\n}         #}}}\ncecho() { #{{{\n\techo -e \"$1\"\n\techo -e \"$1\" >>\"$LOG\"\n\ttput sgr0\n}          #}}}\nncecho() { #{{{\n\techo -ne \"$1\"\n\techo -ne \"$1\" >>\"$LOG\"\n\ttput sgr0\n}          #}}}\nspinny() { #{{{\n\techo -ne \"\\b${SPIN:i++%${#SPIN}:1}\"\n}            #}}}\nprogress() { #{{{\n\tncecho \"  \"\n\twhile true; do\n\t\tkill -0 \"$pid\" &>/dev/null\n\t\tif [[ $? == 0 ]]; then\n\t\t\tspinny\n\t\t\tsleep 0.25\n\t\telse\n\t\t\tncecho \"\\b\\b\"\n\t\t\twait \"$pid\"\n\t\t\tretcode=$?\n\t\t\techo -ne \"$pid's retcode: $retcode\" >>\"$LOG\"\n\t\t\tif [[ $retcode == 0 ]] || [[ $retcode == 255 ]]; then\n\t\t\t\tcecho success\n\t\t\telse\n\t\t\t\tcecho failed\n\t\t\t\techo -e \"$PKG\" >>\"$PKG_FAIL\"\n\t\t\t\ttail -n 15 \"$LOG\"\n\t\t\tfi\n\t\t\tbreak\n\t\tfi\n\tdone\n}                     #}}}\ncheck_boot_system() { #{{{\n\tif [[ \"$(cat /sys/class/dmi/id/sys_vendor)\" == 'Apple Inc.' ]] || [[ \"$(cat /sys/class/dmi/id/sys_vendor)\" == 'Apple Computer, Inc.' ]]; then\n\t\tmodprobe -r -q efivars || true # if MAC\n\telse\n\t\tmodprobe -q efivarfs # all others\n\tfi\n\tif [[ -d \"/sys/firmware/efi/\" ]]; then\n\t\t## Mount efivarfs if it is not already mounted\n\t\tif (mount | grep /sys/firmware/efi/efivars); then\n\t\t\tmount -t efivarfs efivarfs /sys/firmware/efi/efivars\n\t\tfi\n\t\tUEFI=1\n\t\techo \"UEFI Mode detected\"\n\telse\n\t\tUEFI=0\n\t\techo \"BIOS Mode detected\"\n\tfi\n}\n#}}}\ncheck_trim() { #{{{\n\t[[ -n $(hdparm -I /dev/sda | grep TRIM 2>/dev/null) ]] && TRIM=1\n}\n#}}}\ncheck_root() { #{{{\n\tif [[ \"$(id -u)\" != \"0\" ]]; then\n\t\terror_msg \"ERROR! You must execute the script as the 'root' user.\"\n\tfi\n}              #}}}\ncheck_user() { #{{{\n\tif [[ \"$(id -u)\" == \"0\" ]]; then\n\t\terror_msg \"ERROR! You must execute the script as a normal user.\"\n\tfi\n}                   #}}}\ncheck_archlinux() { #{{{\n\tif [[ ! -e /etc/arch-release ]]; then\n\t\terror_msg \"ERROR! You must execute the script on Arch Linux.\"\n\tfi\n}                  #}}}\ncheck_hostname() { #{{{\n\tif [[ $(echo \"${HOSTNAME}\" | sed 's/ //g') == \"\" ]]; then\n\t\terror_msg \"ERROR! Hostname is not configured.\"\n\tfi\n}                        #}}}\ncheck_pacman_blocked() { #{{{\n\tif [[ -f /var/lib/pacman/db.lck ]]; then\n\t\terror_msg \"ERROR! Pacman is blocked. \\nIf not running remove /var/lib/pacman/db.lck.\"\n\tfi\n}                    #}}}\ncheck_domainname() { #{{{\n\tlocal _domainname=$(echo \"${HOSTNAME}\" | cut -d'.' -f2- | sed 's/ //g')\n\n\t# no domain name. Keep looking...\n\tif [[ \"${_domainname}\" == \"\" ]]; then\n\t\t_domainname=$(grep domain /etc/resolv.conf | sed 's/domain //g' | sed 's/ //g')\n\tfi\n\n\t# not founded...\n\tif [[ \"${_domainname}\" == \"\" ]]; then\n\t\terror_msg \"ERROR! Domain name is not configured.\"\n\tfi\n}                    #}}}\ncheck_connection() { #{{{\n\tXPINGS=$((XPINGS + 1))\n\tconnection_test() {\n\t\tping -q -w 1 -c 1 \"$(ip r | grep default | awk 'NR==1 {print $3}')\" &>/dev/null && return 1 || return 0\n\t}\n\tWIRED_DEV=$(ip link | grep \"ens\\|eno\\|enp\" | awk '{print $2}' | sed 's/://' | sed '1!d')\n\tWIRELESS_DEV=$(ip link | grep wlp | awk '{print $2}' | sed 's/://' | sed '1!d')\n\tif connection_test; then\n\t\tprint_warning \"ERROR! Connection not Found.\"\n\t\tprint_info \"Network Setup\"\n\t\tlocal _connection_opts=(\"Wired Automatic\" \"Wired Manual\" \"Wireless\" \"Configure Proxy\" \"Skip\")\n\t\tPS3=\"$prompt1\"\n\t\tselect CONNECTION_TYPE in \"${_connection_opts[@]}\"; do\n\t\t\tcase \"$REPLY\" in\n\t\t\t1)\n\t\t\t\tsystemctl start dhcpcd@\"${WIRED_DEV}\".service\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t2)\n\t\t\t\tsystemctl stop dhcpcd@\"${WIRED_DEV}\".service\n\t\t\t\tprintf \"%s\" \"IP Address: \"\n\t\t\t\tread -r IP_ADDR\n\t\t\t\tprintf \"%s\" \"Submask: \"\n\t\t\t\tread -r SUBMASK\n\t\t\t\tprintf \"%s\" \"Gateway: \"\n\t\t\t\tread -r GATEWAY\n\t\t\t\tip link set \"${WIRED_DEV}\" up\n\t\t\t\tip addr add \"${IP_ADDR}\"/\"${SUBMASK}\" dev \"${WIRED_DEV}\"\n\t\t\t\tip route add default via \"${GATEWAY}\"\n\t\t\t\t$EDITOR /etc/resolv.conf\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t3)\n\t\t\t\twifi-menu \"${WIRELESS_DEV}\"\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t4)\n\t\t\t\tprintf \"%s\" \"Enter your proxy e.g. protocol://adress:port: \"\n\t\t\t\tread -r OPTION\n\t\t\t\texport http_proxy=$OPTION\n\t\t\t\texport https_proxy=$OPTION\n\t\t\t\texport ftp_proxy=$OPTION\n\t\t\t\techo \"proxy = $OPTION\" >~/.curlrc\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t5)\n\t\t\t\tbreak\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tinvalid_option\n\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\t\tif [[ $XPINGS -gt 2 ]]; then\n\t\t\tprint_warning \"Can't establish connection. exiting...\"\n\t\t\texit 1\n\t\tfi\n\t\t[[ $REPLY -ne 5 ]] && check_connection\n\tfi\n}             #}}}\ncheck_vga() { #{{{\n\t# Determine video chipset - only Intel, ATI and nvidia are supported by this script\n\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Detecting video chipset \"\n\tlocal _vga=$(lspci | grep VGA | tr \"[:upper:]\" \"[:lower:]\")\n\tlocal _vga_length=$(lspci | grep VGA | wc -l)\n\n\tif [[ -n $(dmidecode --type 1 | grep VirtualBox) ]]; then\n\t\tcecho Virtualbox\n\t\tVIDEO_DRIVER=\"virtualbox\"\n\telif [[ -n $(dmidecode --type 1 | grep VMware) ]]; then\n\t\tcecho VMware\n\t\tVIDEO_DRIVER=\"vmware\"\n\telif [[ $_vga_length -eq 2 ]] && [[ -n $(echo \"${_vga}\" | grep \"nvidia\") || -f /sys/kernel/debug/dri/0/vbios.rom ]]; then\n\t\tcecho Optimus\n\t\tVIDEO_DRIVER=\"optimus\"\n\telif [[ -n $(echo \"${_vga}\" | grep \"nvidia\") || -f /sys/kernel/debug/dri/0/vbios.rom ]]; then\n\t\tcecho Nvidia\n\t\tread_input_text \"Install NVIDIA proprietary driver\" \"$BETTER_VIDEO_DRIVER\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\tVIDEO_DRIVER=\"nvidia\"\n\t\telse\n\t\t\tVIDEO_DRIVER=\"nouveau\"\n\t\tfi\n\telif [[ -n $(echo \"${_vga}\" | grep \"advanced micro devices\") || -f /sys/kernel/debug/dri/0/radeon_pm_info || -f /sys/kernel/debug/dri/0/radeon_sa_info ]]; then\n\t\tcecho AMD/ATI\n\t\tread_input_text \"Install AMDGPU driver\" \"$BETTER_VIDEO_DRIVER\"\n\t\tif [[ $OPTION == y ]]; then\n\t\t\tVIDEO_DRIVER=\"amdgpu\"\n\t\telse\n\t\t\tVIDEO_DRIVER=\"ati\"\n\t\tfi\n\telif [[ -n $(echo \"${_vga}\" | grep \"intel corporation\") || -f /sys/kernel/debug/dri/0/i915_capabilities ]]; then\n\t\tcecho Intel\n\t\tVIDEO_DRIVER=\"intel\"\n\telse\n\t\tcecho VESA\n\t\tVIDEO_DRIVER=\"vesa\"\n\tfi\n\tOPTION=\"y\"\n\t[[ $VIDEO_DRIVER == intel || $VIDEO_DRIVER == vesa ]] && read -p \"Confirm video driver: $VIDEO_DRIVER [Y/n]\" OPTION\n\tif [[ $OPTION == n ]]; then\n\t\tprintf \"%s\" \"Type your video driver [ex: sis, fbdev, modesetting]: \"\n\t\tread -r VIDEO_DRIVER\n\tfi\n}              #}}}\nread_input() { #{{{\n\tif [[ $AUTOMATIC_MODE -eq 1 ]]; then\n\t\tOPTION=$1\n\telse\n\t\tprintf \"%s\" \"$prompt1\"\n\t\tread -r OPTION\n\tfi\n}                   #}}}\nread_input_text() { #{{{\n\tif [[ $AUTOMATIC_MODE -eq 1 ]]; then\n\t\tOPTION=$2\n\telse\n\t\tprintf \"%s\" \"$1 [y/N]: \"\n\t\tread -r OPTION\n\t\techo \"\"\n\tfi\n\tOPTION=$(echo \"$OPTION\" | tr '[:upper:]' '[:lower:]')\n}                      #}}}\nread_input_options() { #{{{\n\tlocal line\n\tlocal packages\n\tif [[ $AUTOMATIC_MODE -eq 1 ]]; then\n\t\tarray=(\"$1\")\n\telse\n\t\tprintf \"%s\" \"$prompt2\"\n\t\tread -r OPTION\n\t\tIFS=' ' read -r -a array <<<\"${OPTION}\"\n\tfi\n\tfor line in \"${array[@]/,/ }\"; do\n\t\tif [[ ${line/-/} != \"$line\" ]]; then\n\t\t\tfor ((i = ${line%-*}; i <= ${line#*-}; i++)); do\n\t\t\t\tpackages+=(\"$i\")\n\t\t\tdone\n\t\telse\n\t\t\tpackages+=(\"$line\")\n\t\tfi\n\tdone\n\tOPTIONS=(\"${packages[@]}\")\n}              #}}}\nprint_line() { #{{{\n\tprintf \"%$(tput cols)s\\n\" | tr ' ' '-'\n}               #}}}\nprint_title() { #{{{\n\tclear\n\tprint_line\n\techo -e \"# ${Bold}$1${Reset}\"\n\tprint_line\n\techo \"\"\n}              #}}}\nprint_info() { #{{{\n\t#Console width number\n\tT_COLS=$(tput cols)\n\techo -e \"${Bold}$1${Reset}\\n\" | fold -sw $((T_COLS - 18)) | sed 's/^/\\t/'\n}                 #}}}\nprint_warning() { #{{{\n\tT_COLS=$(tput cols)\n\techo -e \"${BYellow}$1${Reset}\\n\" | fold -sw $((T_COLS - 1))\n}                #}}}\nprint_danger() { #{{{\n\tT_COLS=$(tput cols)\n\techo -e \"${BRed}$1${Reset}\\n\" | fold -sw $((T_COLS - 1))\n}                #}}}\nstart_module() { #{{{\n\tmodprobe \"$1\"\n}              #}}}\nadd_module() { #{{{\n\tfor module in $1; do\n\t\t#check if the name of the module can be the same of the module or the given name\n\t\t[[ $# -lt 2 ]] && local _module_name=\"$module\" || local _module_name=\"$2\"\n\t\tlocal _has_module=$(grep \"$module\" /etc/modules-load.d/\"${_module_name}\".conf 2>&1)\n\t\t[[ -z $_has_module ]] && echo \"$module\" >>/etc/modules-load.d/\"${_module_name}\".conf\n\t\tstart_module \"$module\"\n\tdone\n}                  #}}}\nadd_repository() { #{{{\n\tlocal _repo=${1}\n\tlocal _url=${2}\n\t[[ -n ${3} ]] && local _siglevel=\"\\nSigLevel = ${3}\" || local _siglevel=\"\"\n\n\tlocal _check_repo=$(grep -F \"${_repo}\" /etc/pacman.conf)\n\tif [[ -z $_check_repo ]]; then\n\t\techo -e \"\\n[${_repo}]${_siglevel}\\nServer = ${_url}\" >>/etc/pacman.conf\n\t\tsystem_update\n\tfi\n}                  #}}}\ncheck_multilib() { #{{{\n\t# this option will avoid any problem with packages install\n\tif [[ $ARCHI == x86_64 ]]; then\n\t\tlocal _has_multilib=$(grep -n \"\\[multilib\\]\" /etc/pacman.conf | cut -f1 -d:)\n\t\tif [[ -z $_has_multilib ]]; then\n\t\t\techo -e \"\\n[multilib]\\nInclude = /etc/pacman.d/mirrorlist\" >>/etc/pacman.conf\n\t\t\techo -e '\\nMultilib repository added into pacman.conf file'\n\t\telse\n\t\t\tsed -i \"${_has_multilib}s/^#//\" /etc/pacman.conf\n\t\t\tlocal _has_multilib=$((_has_multilib + 1))\n\t\t\tsed -i \"${_has_multilib}s/^#//\" /etc/pacman.conf\n\t\tfi\n\tfi\n}           #}}}\nadd_key() { #{{{\n\tpacman-key -r \"$1\"\n\tpacman-key --lsign-key \"$1\"\n}                #}}}\nadd_key_user() { #{{{\n\tsu - \"${username}\" -c \"gpg --recv-keys --keyserver $1\"\n}              #}}}\npacman_key() { #{{{\n\tif [[ ! -d /etc/pacman.d/gnupg ]]; then\n\t\tprint_title \"PACMAN KEY - https://wiki.archlinux.org/index.php/pacman-key\"\n\t\tprint_info \"Pacman uses GnuPG keys in a web of trust model to determine if packages are authentic.\"\n\t\tpackage_install \"haveged\"\n\t\thaveged -w 1024\n\t\tpacman-key --init\n\t\tpacman-key --populate archlinux\n\t\tpkill haveged\n\t\tpackage_remove \"haveged\"\n\tfi\n}            #}}}\nadd_line() { #{{{\n\tlocal _add_line=${1}\n\tlocal _filepath=${2}\n\n\tlocal _has_line=$(grep -ci \"${_add_line}\" \"${_filepath}\" 2>&1)\n\t[[ $_has_line -eq 0 ]] && echo \"${_add_line}\" >>\"${_filepath}\"\n}                #}}}\nreplace_line() { #{{{\n\tlocal _search=${1}\n\tlocal _replace=${2}\n\tlocal _filepath=${3}\n\tlocal _filebase=$(basename \"${3}\")\n\n\tsed -e \"s/${_search}/${_replace}/\" \"${_filepath}\" >/tmp/\"${_filebase}\" 2>\"$LOG\"\n\tif [[ ${?} -eq 0 ]]; then\n\t\tmv /tmp/\"${_filebase}\" \"${_filepath}\"\n\telse\n\t\tcecho \"failed: ${_search} - ${_filepath}\"\n\tfi\n}                        #}}}\nupdate_early_modules() { #{{{\n\tlocal _new_module=${1}\n\tlocal _current_modules=$(grep -E ^MODULES= /etc/mkinitcpio.conf)\n\n\tif [[ -n ${_new_module} ]]; then\n\t\t# Determine if the new module is already listed.\n\t\tlocal _exists=$(echo \"${_current_modules}\" | grep \"${_new_module}\")\n\t\tif [ $? -eq 1 ]; then\n\t\t\tsource /etc/mkinitcpio.conf\n\t\t\tif [[ -z ${MODULES} ]]; then\n\t\t\t\t_new_moduleS=\"${_new_module}\"\n\t\t\telse\n\t\t\t\t_new_moduleS=\"${MODULES} ${_new_module}\"\n\t\t\tfi\n\t\t\treplace_line \"MODULES=\\\"${MODULES}\\\"\" \"MODULES=\\\"${_new_moduleS}\\\"\" /etc/mkinitcpio.conf\n\t\t\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Rebuilding init \"\n\t\t\tmkinitcpio -p linux >>\"$LOG\" 2>&1 &\n\t\t\tpid=$!\n\t\t\tprogress $pid\n\t\tfi\n\tfi\n}                        #}}}\nis_package_installed() { #{{{\n\t#check if a package is already installed\n\tfor PKG in $1; do\n\t\tpacman -Q \"$PKG\" &>/dev/null && return 0\n\tdone\n\treturn 1\n}            #}}}\ncheckbox() { #{{{\n\t#display [X] or [ ]\n\t[[ \"$1\" -eq 1 ]] && echo -e \"${BBlue}[${Reset}${Bold}X${BBlue}]${Reset}\" || echo -e \"${BBlue}[ ${BBlue}]${Reset}\"\n}                    #}}}\ncheckbox_package() { #{{{\n\t#check if [X] or [ ]\n\tis_package_installed \"$1\" && checkbox 1 || checkbox 0\n}                         #}}}\naui_download_packages() { #{{{\n\tfor PKG in $1; do\n\t\t#exec command as user instead of root\n\t\tsu - \"${username}\" -c \"\n        [[ ! -d aui_packages ]] && mkdir aui_packages\n        cd aui_packages\n        curl -o ${PKG}.tar.gz https://aur.archlinux.org/cgit/aur.git/snapshot/${PKG}.tar.gz\n        tar zxvf ${PKG}.tar.gz\n        rm ${PKG}.tar.gz\n        cd ${PKG}\n        makepkg -csi --noconfirm\n      \"\n\tdone\n}                       #}}}\naur_package_install() { #{{{\n\tsu - \"${username}\" -c \"sudo -v\"\n\t#install package from aur\n\tfor PKG in $1; do\n\t\tif ! is_package_installed \"${PKG}\"; then\n\t\t\tif [[ $AUTOMATIC_MODE -eq 1 ]]; then\n\t\t\t\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing ${AUR} ${Bold}${PKG}${Reset} \"\n\t\t\t\tsu - \"${username}\" -c \"${AUR_PKG_MANAGER} --noconfirm -S ${PKG}\" >>\"$LOG\" 2>&1 &\n\t\t\t\tpid=$!\n\t\t\t\tprogress $pid\n\t\t\telse\n\t\t\t\tsu - \"${username}\" -c \"${AUR_PKG_MANAGER} --noconfirm -S ${PKG}\"\n\t\t\tfi\n\t\telse\n\t\t\tif [[ $VERBOSE_MODE -eq 0 ]]; then\n\t\t\t\tcecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing ${AUR} ${Bold}${PKG}${Reset} success\"\n\t\t\telse\n\t\t\t\techo -e \"Warning: ${PKG} is up to date --skipping\"\n\t\t\tfi\n\t\tfi\n\tdone\n}                   #}}}\npackage_install() { #{{{\n\t#install packages using pacman\n\tif [[ $AUTOMATIC_MODE -eq 1 || $VERBOSE_MODE -eq 0 ]]; then\n\t\tfor PKG in ${1}; do\n\t\t\tlocal _pkg_repo=$(pacman -Sp --print-format %r \"${PKG}\" | uniq | sed '1!d')\n\t\t\tcase $_pkg_repo in\n\t\t\t\"core\")\n\t\t\t\t_pkg_repo=\"${BRed}${_pkg_repo}${Reset}\"\n\t\t\t\t;;\n\t\t\t\"extra\")\n\t\t\t\t_pkg_repo=\"${BYellow}${_pkg_repo}${Reset}\"\n\t\t\t\t;;\n\t\t\t\"community\")\n\t\t\t\t_pkg_repo=\"${BGreen}${_pkg_repo}${Reset}\"\n\t\t\t\t;;\n\t\t\t\"multilib\")\n\t\t\t\t_pkg_repo=\"${BCyan}${_pkg_repo}${Reset}\"\n\t\t\t\t;;\n\t\t\tesac\n\t\t\tif ! is_package_installed \"${PKG}\"; then\n\t\t\t\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing (${_pkg_repo}) ${Bold}${PKG}${Reset} \"\n\t\t\t\tpacman -S --noconfirm --needed \"${PKG}\" >>\"$LOG\" 2>&1 &\n\t\t\t\tpid=$!\n\t\t\t\tprogress $pid\n\t\t\telse\n\t\t\t\tcecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Installing (${_pkg_repo}) ${Bold}${PKG}${Reset} exists \"\n\t\t\tfi\n\t\tdone\n\telse\n\t\tpacman -S --needed \"${1}\"\n\tfi\n}                  #}}}\npackage_remove() { #{{{\n\t#remove package\n\tfor PKG in ${1}; do\n\t\tif is_package_installed \"${PKG}\"; then\n\t\t\tif [[ $AUTOMATIC_MODE -eq 1 || $VERBOSE_MODE -eq 0 ]]; then\n\t\t\t\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Removing ${Bold}${PKG}${Reset} \"\n\t\t\t\tpacman -Rcsn --noconfirm \"${PKG}\" >>\"$LOG\" 2>&1 &\n\t\t\t\tpid=$!\n\t\t\t\tprogress $pid\n\t\t\telse\n\t\t\t\tpacman -Rcsn \"${PKG}\"\n\t\t\tfi\n\t\tfi\n\tdone\n}                 #}}}\nsystem_update() { #{{{\n\tpacman -Sy\n}               #}}}\nnpm_install() { #{{{\n\t#install packages using pacman\n\tnpm install -g \"$1\"\n}               #}}}\ngem_install() { #{{{\n\t#install packages using pacman\n\tfor PKG in ${1}; do\n\t\tsudo -u \"${username}\" gem install -V \"$PKG\"\n\tdone\n}                    #}}}\ncontains_element() { #{{{\n\t#check if an element exist in a string\n\tfor e in \"${@:2}\"; do [[ \"$e\" == \"$1\" ]] && break; done\n}                  #}}}\nconfig_xinitrc() { #{{{\n\t#create a xinitrc file in home user directory\n\tcp -fv /etc/X11/xinit/xinitrc /home/\"${username}\"/.xinitrc\n\techo -e \"exec $1\" >>/home/\"${username}\"/.xinitrc\n\tchown -R \"${username}\":users /home/\"${username}\"/.xinitrc\n}                  #}}}\ninvalid_option() { #{{{\n\tprint_line\n\techo \"Invalid option. Try another one.\"\n\tpause_function\n}                  #}}}\npause_function() { #{{{\n\tprint_line\n\tif [[ $AUTOMATIC_MODE -eq 0 ]]; then\n\t\tread -e -sn 1 -p \"Press enter to continue...\"\n\tfi\n}             #}}}\nmenu_item() { #{{{\n\t#check if the number of arguments is less then 2\n\t[[ $# -lt 2 ]] && _package_name=\"$1\" || _package_name=\"$2\"\n\t#list of chars to remove from the package name\n\tlocal _chars=(\"Ttf-\" \"-bzr\" \"-hg\" \"-svn\" \"-git\" \"-stable\" \"-icon-theme\" \"Gnome-shell-theme-\" \"Gnome-shell-extension-\")\n\t#remove chars from package name\n\tfor char in \"${_chars[@]}\"; do _package_name=$(echo \"${_package_name^}\" | sed 's/'\"$char\"'//'); done\n\t#display checkbox and package name\n\techo -e \"$(checkbox_package \"$1\") ${Bold}${_package_name}${Reset}\"\n}                 #}}}\nmainmenu_item() { #{{{\n\t#if the task is done make sure we get the state\n\tif [ \"$1\" == 1 ] && [ \"$3\" != \"\" ]; then\n\t\tstate=\"${BGreen}[${Reset}$3${BGreen}]${Reset}\"\n\tfi\n\techo -e \"$(checkbox \"$1\") ${Bold}$2${Reset} ${state}\"\n}              #}}}\nsystem_ctl() { #{{{\n\tlocal _action=${1}\n\tlocal _object=${2}\n\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} systemctl ${_action} ${_object} \"\n\tsystemctl \"${_action}\" \"${_object}\" >>\"$LOG\" 2>&1\n\tpid=$!\n\tprogress $pid\n}\n#}}}\narch_chroot() { #{{{\n\tarch-chroot $MOUNTPOINT /bin/bash -c \"${1}\"\n}\n#}}}\nrun_as_user() { #{{{\n\tsudo -H -u \"${username}\" \"${1}\"\n}\n#}}}\nadd_user_to_group() { #{{{\n\tlocal _user=${1}\n\tlocal _group=${2}\n\n\tif [[ -z ${_group} ]]; then\n\t\terror_msg \"ERROR! 'add_user_to_group' was not given enough parameters.\"\n\tfi\n\n\tncecho \" ${BBlue}[${Reset}${Bold}X${BBlue}]${Reset} Adding ${Bold}${_user}${Reset} to ${Bold}${_group}${Reset} \"\n\tgroupadd \"${_group}\" >>\"$LOG\" 2>&1 &\n\tgpasswd -a \"${_user}\" \"${_group}\" >>\"$LOG\" 2>&1 &\n\tpid=$!\n\tprogress $pid\n}             #}}}\nsetlocale() { #{{{\n\tlocal _locale_list=($(grep UTF-8 /etc/locale.gen | sed 's/\\..*$//' | sed '/@/d' | awk '{print $1}' | uniq | sed 's/#//g'))\n\tPS3=\"$prompt1\"\n\techo \"Select locale:\"\n\tselect LOCALE in \"${_locale_list[@]}\"; do\n\t\tif contains_element \"$LOCALE\" \"${_locale_list[@]}\"; then\n\t\t\tLOCALE_UTF8=\"${LOCALE}.UTF-8\"\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n}\n#}}}\nsettimezone() { #{{{\n\tlocal _zones=($(timedatectl list-timezones | sed 's/\\/.*$//' | uniq))\n\tPS3=\"$prompt1\"\n\techo \"Select zone:\"\n\tselect ZONE in \"${_zones[@]}\"; do\n\t\tif contains_element \"$ZONE\" \"${_zones[@]}\"; then\n\t\t\tlocal _subzones=($(timedatectl list-timezones | grep \"${ZONE}\" | sed 's/^.*\\///'))\n\t\t\tPS3=\"$prompt1\"\n\t\t\techo \"Select subzone:\"\n\t\t\tselect SUBZONE in \"${_subzones[@]}\"; do\n\t\t\t\tif contains_element \"$SUBZONE\" \"${_subzones[@]}\"; then\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\tinvalid_option\n\t\t\t\tfi\n\t\t\tdone\n\t\t\tbreak\n\t\telse\n\t\t\tinvalid_option\n\t\tfi\n\tdone\n} #}}}\n#}}}\n"
        },
        {
          "name": "sharedfuncs_elihw",
          "type": "blob",
          "size": 0.087890625,
          "content": "# shellcheck shell=bash\n#shellcheck disable=SC2105\n\n[[ $OPT == b || $OPT == d ]] && break\n"
        }
      ]
    }
  ]
}