{
  "metadata": {
    "timestamp": 1736568678873,
    "page": 755,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mislav/dotfiles",
      "stars": 1282,
      "defaultBranch": "master",
      "files": [
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.265625,
          "content": "# vi:ft=ruby:\nbrew 'tmux'\nbrew 'vim'\nbrew 'ag'\nbrew 'go'\nbrew 'git'\nbrew 'hub'\nbrew 'gh'\n\ncask 'dropbox'\ncask 'spotify'\ncask 'iterm2'\ncask 'slack'\ncask 'google-chrome'\ncask 'zoomus'\ncask 'visual-studio-code'\n\nmas 'iA Writer', id: 775737590\nmas '1Password', id: 1333542190\n"
        },
        {
          "name": "bash_profile",
          "type": "blob",
          "size": 0.5966796875,
          "content": "# vim:ft=sh:sw=2:ts=2:et\nif [ -r ~/.profile ]; then\n  source ~/.profile\nfi\n\nHISTCONTROL=ignoredups\n\nHOMEBREW_PREFIX=\"$(brew --prefix 2>/dev/null)\"\nif [ -r \"${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh\" ]; then\n  source \"${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh\"\nelse\n  for HOMEBREW_COMPLETION in \"${HOMEBREW_PREFIX}/etc/bash_completion.d/\"*; do\n    [ -r \"$HOMEBREW_COMPLETION\" ] && source \"$HOMEBREW_COMPLETION\"\n  done\nfi\nunset HOMEBREW_PREFIX\nunset HOMEBREW_COMPLETION\n\n# Allow <C-s> to pass through to shell and programs\nstty -ixon -ixoff\n\nfor file in ~/.shrc/*.sh; do\n  source \"$file\"\ndone\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "ctags",
          "type": "blob",
          "size": 0.14453125,
          "content": "--exclude=.git\n--exclude=log\n--exclude=vendor\n--exclude=bundle\n--exclude=*.min.js\n--exclude=jquery.*.js\n--exclude=jquery-*.js\n--languages=-html,sql\n"
        },
        {
          "name": "gemrc",
          "type": "blob",
          "size": 0.0361328125,
          "content": "gem: --no-rdoc --no-ri --no-document\n"
        },
        {
          "name": "gitconfig",
          "type": "blob",
          "size": 0.2197265625,
          "content": "[user]\n\tname = Mislav Marohnić\n\temail = git@mislav.net\n[init]\n\tdefaultBranch = main\n[core]\n\teditor = vim\n\tpager = delta\n[delta]\n\tsyntax-theme = Coldark-Dark\n\tplus-style = syntax 22\n\tminus-style = syntax 52\n[pull]\n\tff = only\n"
        },
        {
          "name": "irbrc",
          "type": "blob",
          "size": 0.1552734375,
          "content": "require 'pp'\nrequire 'irb/completion'\n\nIRB.conf[:PROMPT_MODE] = :SIMPLE\n\ndef pbcopy(data)\n  File.popen('pbcopy', 'w') { |p| p << data.to_s }\n  $?.success?\nend\n"
        },
        {
          "name": "osx",
          "type": "blob",
          "size": 3.3447265625,
          "content": "#!/bin/bash\n# vi:ft=sh\n# Adopted from https://github.com/mathiasbynens/dotfiles/blob/7d43ff6/.osx\nset -e\n\n# Set a blazingly fast keyboard repeat rate\ndefaults write NSGlobalDomain KeyRepeat -int 2\ndefaults write NSGlobalDomain InitialKeyRepeat -int 25\ndefaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false\n\n# Disable all sorts of autocorrection\ndefaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false\ndefaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false\ndefaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false\ndefaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false\ndefaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false\n\n# Enable full keyboard access for all controls (e.g. Tab in modal dialogs)\ndefaults write NSGlobalDomain AppleKeyboardUIMode -int 3\n\n# Press Tab to highlight each item on a web page\ndefaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true\n\n# Enable the Develop menu and the Web Inspector in Safari\ndefaults write com.apple.Safari IncludeDevelopMenu -bool true\ndefaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true\ndefaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true\n\n# Set Safari’s home page to `about:blank` for faster loading\ndefaults write com.apple.Safari HomePage -string \"about:blank\"\n# Disable site favorites when focusing Safari’s URL bar\ndefaults write com.apple.Safari ShowFavoritesUnderSmartSearchField -bool false\n# Disable preloading top hit in the background\ndefaults write com.apple.Safari PreloadTopHit -bool false\n# Disable Quick Website Search\ndefaults write com.apple.Safari WebsiteSpecificSearchEnabled -bool false\n# Stop Safari from offering to store passwords and credit card data\ndefaults write com.apple.Safari AutoFillPasswords -bool false\ndefaults write com.apple.Safari AutoFillCreditCardData -bool false\ndefaults write com.apple.Safari AutoFillFromAddressBook -bool false\ndefaults write com.apple.Safari AutoFillMiscellaneousForms -bool false\n\n# Trackpad: enable tap to click for this user and for the login screen\ndefaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true\ndefaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\ndefaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1\n\n# Show the ~/Library folder\nchflags nohidden ~/Library\n\n# Disable Dashboard\ndefaults write com.apple.dashboard mcx-disabled -bool true\n\n# Don’t show Dashboard as a Space\ndefaults write com.apple.dock dashboard-in-overlay -bool true\n\n# Automatically hide the Dock\nif [ \"$(defaults read com.apple.dock autohide 2>/dev/null)\" != 1 ]; then\n  defaults write com.apple.dock autohide -bool true\n  killall Dock\nfi\n\n# Configure iTerm2 to read preferences from Dropbox\ndefaults write com.googlecode.iterm2 PrefsCustomFolder ~/Dropbox\ndefaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -int 1\n\n# Set lock screen text\n[ -n \"$(defaults read /Library/Preferences/com.apple.loginwindow LoginwindowText 2>/dev/null)\" ] || \\\n  sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText \\\n  'Found this computer? Please contact Mislav Marohnić at mislav@github.com'\n"
        },
        {
          "name": "rdebugrc",
          "type": "blob",
          "size": 0.0400390625,
          "content": "set autolist\nset autoeval\nset autoreload\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 1.6435546875,
          "content": "# dotfiles\n\nMislav's configuration files for bash, zsh, git, and more.\n\n## Installation\n\nClone somewhere, then run the bootstrap script:\n\n~~~ sh\n$ git clone https://github.com/mislav/dotfiles.git ~/dotfiles\n$ ~/dotfiles/script/bootstrap\n~~~\n\nThe install script won't overwrite your existing dotfiles, but will symlink\nthe ones that don't exist. If you want to replace your existing dotfiles, simply\nmove them to a backup location and run install again.\n\n## Misc. commands in `bin`\n\nCheck [the `bin` directory](./bin) for an assortment of useful utilities.\n\n## tmux\n\n- `C-h/j/k/l` - switch to pane in the given direction\n- `C-\\\\` - toggle between last active panes\n\nUnder tmux prefix `C-a`:\n\n- `C-l` - clear terminal\n- `S` - switch to a session that starts with given name, or switch to the last\n  session if no name given\n- `m` - open man page in a vertical split\n- `g` - tail `log/development.log` in a new window\n- `R` - source `~/.tmux.conf` after changes\n\nRegular tmux keybindings:\n\n    % vertical split\n    \" horizontal split\n    ! break pane into new window\n    c new window\n\n    o select next pane\n    { swap pane with previous\n    } swap pane with next\n    n next window\n    p previous window\n    ) next session\n    ( previous session\n    ; select previously active pane\n    l select previously active window\n\n    s interactive session & window browser\n    w interactive window browser\n\n    $ rename session\n    , rename window\n\n    : command prompt\n    d detach\n    f search text in open windows\n\n    [ copy mode\n    ] paste buffer\n    # list buffers\n    - delete buffer\n\n\n[vimfiles]: https://github.com/mislav/vimfiles#readme\n[rbenv]: https://github.com/rbenv/rbenv#readme\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "shrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "tmux.conf",
          "type": "blob",
          "size": 2.271484375,
          "content": "# vim:ft=conf:\n\n# Ctrl-a as prefix instead of Ctrl-b\nset -g prefix C-a\nunbind C-b\n# have `C-a C-a` send C-a keypress to the current window\nbind C-a send-prefix\n\n# Smart pane switching with awareness of vim splits\nbind -n C-k run-shell    '#{d:config_files}/bin/tmux-vim-select-pane -U'\nbind -n C-j run-shell    '#{d:config_files}/bin/tmux-vim-select-pane -D'\nbind -n C-h run-shell    '#{d:config_files}/bin/tmux-vim-select-pane -L'\nbind -n C-l run-shell    '#{d:config_files}/bin/tmux-vim-select-pane -R'\nbind -n \"C-\\\\\" run-shell '#{d:config_files}/bin/tmux-vim-select-pane -l'\n\n# Have new windows and panes open in the current directory\nbind '\"' split-window -c '#{pane_current_path}'\nbind %   split-window -c '#{pane_current_path}' -h\nbind c   new-window   -c '#{pane_current_path}'\n\n# Copy to clipboard\nbind-key -Tcopy-mode-vi 'v' send -X begin-selection\nbind-key -Tcopy-mode-vi 'y' send -X copy-selection\n\n# switch to a session that start with the given name\nbind S command-prompt -p session: \"run-shell '#{d:config_files}/bin/tmux-switch-session \\\"%%\\\"'\"\nbind s choose-tree -sN\n\nbind m command-prompt -p man:   \"split-window -h 'man %1'\"\n\n# source this file after changes\nbind R source-file ~/.tmux.conf\n\n# enable for iTerm (Terminal.app doesn't have mouse support)\nset -g mouse on\n\n# Faster escape sequences (default is 500ms).\n# This helps when exiting insert mode in Vim: http://superuser.com/a/252717/65504\nset -s escape-time 50\n\n# start numbering windows from 1 instead of zero\nset -g base-index 1\n\n# syntax highlighting in Vim\nset -g default-terminal \"xterm-256color\"\nset -ga terminal-overrides \",xterm-256color:Tc\"\n\n# disable programs changing window names via terminal escape sequence\nset-window-option -g allow-rename off\n\n# status bar\nset -g status-fg colour8\nset -g status-bg colour234\n# current session\nset -g status-left ' #S '\nset -g status-left-length 15\n# set -g status-left-fg colour229\n# set -g status-left-bg colour166\n# window list\nset -g window-status-format \"#[fg=colour8] #I #[fg=colour231]#W#[fg=colour166]#F \"\nset -g window-status-current-format \"#[fg=colour117,bg=colour31] #I #[fg=colour231]#W#[fg=colour234]#F \"\nset -g window-status-separator \"\"\n# battery status\nset -g status-right ' #(battery) '\nset -g status-interval 15\n\n# disable possibly set visual editor\nset-environment -gu GEM_EDITOR\n"
        },
        {
          "name": "vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "zshrc",
          "type": "blob",
          "size": 0.505859375,
          "content": "# load support for tab completions\nautoload -U compinit\ncompinit -i\nzstyle ':completion:*' menu select\n\nautoload colors\ncolors\n\nexport LSCOLORS=\"Gxfxcxdxbxegedabagacad\"\n# Find the option for using colors in ls, depending on the version: Linux or BSD\nls --color -d . >/dev/null 2>&1 && alias ls='ls --color=tty' || alias ls='ls -G'\n\nexport GREP_OPTIONS='--color=auto'\n\nfor file in ~/.shrc/*.sh; do\n  source \"$file\"\ndone\n\ntest -e \"${HOME}/.iterm2_shell_integration.zsh\" && source \"${HOME}/.iterm2_shell_integration.zsh\"\n"
        }
      ]
    }
  ]
}