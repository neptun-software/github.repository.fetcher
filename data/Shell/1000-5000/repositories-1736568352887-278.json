{
  "metadata": {
    "timestamp": 1736568352887,
    "page": 278,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "snaplet/postgres-wasm",
      "stars": 2314,
      "defaultBranch": "main",
      "files": [
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.05859375,
          "content": "MIT License\n\nCopyright (c) 2022 Snaplet Inc., Supabase Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.466796875,
          "content": "<div align=\"center\">\n  <h1 align=\"center\">Postgres WASM</h1>\n  <p align=\"center\">A PostgreSQL server instance running in a virtual machine running in the browser<br />\n  <i>by Supabase &amp; Snaplet</i></p>\n  <img align=\"center\" src=\"https://user-images.githubusercontent.com/90199159/192729860-730e89a9-2489-4a95-a814-25eaaebebb7d.png\" alt=\"Snaplet, Supabase and friends\" width=\"480\">\n  <br /><br />\n  <a href=\"https://postgres-wasm.netlify.com\">Demo</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://app.snaplet.dev/chat\">Discord</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.snaplet.dev/\">Snaplet</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.supabase.com\">Supabase</a>\n</div>\n<br />\n\n## The future is now\n\nSince we worked on this project, awesome and more usable solutions exist:\n\n- [PGlite by ElectricSQL](https://github.com/electric-sql/pglite) which is a native WASM build of Postgres\n- [pgmock by Stackframe](https://github.com/stackframe-projects/pgmock) which is using the same approach as this project, emulating the Postgres server in an x86 emulator\n\nWhile `postgres-wasm` was more of a proof of concept, both the above solutions can be used to run PostgreSQL in the browser or getting in-memory PostgreSQL databases!\n\n## Quickstart\n\n```terminal\ncd packages/runtime && npx serve\n```\n\nGo to http://localhost:3000 and have fun!\n\n## Packages\n\nThis repo is split into three packages that build up the environment for running PostgreSQL in the browser.\n\n- [runtime](/packages/runtime): The v86 emulator that starts the `buildroot` image\n- [Buildroot](/packages/buildroot): Scripts to build the CPU and memory snapshot run by v86.\n- [Websockproxy](/packages/websockproxy): Networking\n\n## Acknowledgements\n\n- [v86](https://github.com/copy/v86) which is **the** emulator for running x86 operating systems in the browser, without it none of the following projects would be possible\n- [crunchydata playground](https://www.crunchydata.com/developers/playground) for leading the way and showing the world that it was possible to run PostgreSQL in the browser\n- [browser-shell](https://github.com/humphd/browser-shell) which was already way ahead of its time, especially on the filesystem part\n- [browser-linux](https://github.com/Darin755/browser-linux) for showing us how we can make the pieces fit together\n- [Websockets Proxy](https://github.com/benjamincburns/websockproxy) the ingenious workaround that opened up the world for **v86** emulators everywhere\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}