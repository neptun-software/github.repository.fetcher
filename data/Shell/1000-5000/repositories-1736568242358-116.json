{
  "metadata": {
    "timestamp": 1736568242358,
    "page": 116,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "P3TERX/aria2.conf",
      "stars": 3315,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0634765625,
          "content": "MIT License\n\nCopyright (c) 2018-2021 P3TERX <https://p3terx.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.669921875,
          "content": "# Aria2 完美配置\n\n[![LICENSE](https://img.shields.io/github/license/mashape/apistatus.svg?style=flat-square&label=License)](https://github.com/P3TERX/aria2.conf/blob/master/LICENSE)\n[![GitHub Stars](https://img.shields.io/github/stars/P3TERX/aria2.conf.svg?style=flat-square&label=Stars&logo=github)](https://github.com/P3TERX/aria2.conf/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/P3TERX/aria2.conf.svg?style=flat-square&label=Forks&logo=github)](https://github.com/P3TERX/aria2.conf/fork)\n\n一套 Aria2 配置方案，包含了配置文件、附加功能脚本等文件，用于实现 Aria2 功能的增强和扩展，提升 Aria2 的下载速度与使用体验。\n\n## 功能特性\n\n* BT 下载率高、速度快\n* 重启后不丢失任务进度、不重复下载\n* 删除正在下载的任务自动删除未完成的文件\n* 下载错误自动删除未完成的文件\n* 下载完成自动删除控制文件(`.aria2`后缀名文件)\n* 下载完成自动删除种子文件(`.torrent`后缀名文件)\n* 下载完成自动删除空目录\n* 下载完成自动移动文件到指定目录\n* 下载完成自动上传到 Google Drive 和 OneDrive 等网盘(RCLONE 联动功能)\n* BT 下载完成自动清除垃圾文件(文件类型过滤功能)\n* BT 下载完成自动清除小文件(文件大小过滤功能)\n* 一键自动更新 BT tracker，进一步加速 BT 下载\n* 有一定的防版权投诉、防迅雷吸血效果\n* 更好的 PT 下载支持\n\n## 部署方法\n\n**推荐使用以下项目部署以获得最佳使用体验**\n\n- [Aria2 Pro](https://github.com/P3TERX/docker-aria2-pro) (Docker)\n- [Aria2 一键安装管理脚本 增强版](https://github.com/P3TERX/aria2.sh) (GNU/Linux)\n\n## 进阶玩法\n\n* [OneDrive、Google Drive 等网盘离线下载](https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html)\n* [百度网盘转存到 OneDrive 、Google Drive 等其他网盘](https://p3terx.com/archives/baidunetdisk-transfer-to-onedrive-and-google-drive.html)\n\n## 文件说明\n\n> **TIPS:** 附加功能脚本需配合配置文件使用，仅适用于 GNU/Linux ，理论上 macOS 安装 GNU 工具套件可以使用。依赖：`bash`、`curl`、`findutils`、`jq`\n\n| 文件                    | 说明                                                                                                                                                                                                                                                                                      |\n| ----------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `aria2.conf`            | Aria2 配置文件。建议配合 1.35.0 及以上版本使用。内附可能比官方文档还详细的中文注释说明和修改建议，在不了解的情况下随意修改可能导致本方案的特性失效。                                                                                                                                      |\n| `script.conf`           | Aria2 附加功能脚本配置文件。                                                                                                                                                                                                                                                              |\n| `core`                  | Aria2 附加功能脚本核心文件。所有脚本都依赖于此文件运行。                                                                                                                                                                                                                                  |\n| `clean.sh`              | 文件清理脚本。在下载完成后执行([on-download-complete](https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-on-download-complete))，自动清理控制文件(`*.aria2`)、种子文件(`*.torrent`)和空目录。（默认启用）                                                                       |\n| `delete.sh`             | 文件删除脚本。在下载停止后执行([on-download-stop](https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-on-download-stop))，当下载错误或删除正在下载的任务后自动删除相关文件，并自动清理控制文件(`*.aria2`)、种子文件(`*.torrent`)和空目录，防止不必要的磁盘空间占用。（默认启用） |\n| `upload.sh`             | 文件上传脚本。在下载完成后执行([on-download-complete](https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-on-download-complete))，自动调用 RCLONE 上传(move)下载完成的文件到网盘，并自动清理控制文件(`*.aria2`)、种子文件(`*.torrent`)和空目录。（默认不启用）                   |\n| `rclone.env`            | [RCLONE 环境变量](https://rclone.org/docs/#environment-variables)文件。配合`upload.sh`使用，用于配置 RCLONE 的选项参数。                                                                                                                                                                  |\n| `move.sh`               | 文件移动脚本。在下载完成后执行([on-download-complete](https://aria2.github.io/manual/en/html/aria2c.html#cmdoption-on-download-complete))，自动将下载完成的文件移动到指定目录，并自动清理控制文件(`*.aria2`)、种子文件(`*.torrent`)和空目录。（默认不启用）                               |\n| `tracker.sh`            | BT tracker 列表更新脚本。在 Aria2 配置文件(`aria2.conf`)所在目录执行即可获取[最新 tracker 列表](https://raw.githubusercontent.com/XIU2/TrackersListCollection/master/all.txt)并添加到配置文件中。其它使用方法详见 [tracker.md](./tracker.md)                                              |\n| `dht.dat`<br>`dht6.dat` | DHT 网络节点数据文件。提升 BT 下载率和下载速度的关键之一。相关科普：《[解决 Aria2 无法下载磁力链接、BT种子和速度慢的问题](https://p3terx.com/archives/solved-aria2-cant-download-magnetic-link-bt-seed-and-slow-speed.html)》                                                             |\n\n## 遇到问题如何处理\n\n遇到问题先看 [FAQ](https://p3terx.com/archives/aria2_perfect_config-faq.html) 再提问，你还可以加入 [Aria2 TG 群](https://t.me/Aria2c)和小伙伴们一起讨论。要注意提问的方式和提供有用的信息，提问前建议去学习《[提问的智慧](https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md)》，这能更好的帮助你去解决问题和节约时间。诸如 “为什么不能使用？”、“那你能帮帮我吗？” 之类的问题应该没有人会知道。\n\n## 更新日志\n\n更新推送：[Aria2 Channel](https://t.me/Aria2_Channel)\n\n### 2021-07-04\n\n- 新增 正则表达式文件过滤功能。感谢 @hereisderek\n- 新增 支持自定义多个 tracker 列表 URL ([Aria2 Pro](https://github.com/P3TERX/Aria2-Pro-Docker))。感谢 @hereisderek\n- 修复 目录名有特殊符号时导致的路径处理错误。感谢 @zzjjbb\n\n### 2020-12-24\n\n- 调整一些过于激进的配置选项值，提升稳定性。\n  - 单个 BT 下载任务最大连接数(`bt-max-peers`)从`0`(不限制)调整为`128`，减少不必要的 CPU 和网络占用。\n  - 下载进度自动保存间隔时间(`auto-save-interval`)从`1`秒调整为`20`秒，减少磁盘 I/O 。\n- 补充一些说明和设置建议。\n\n### 2020-12-09\n\n- 优化 RCLONE 环境变量文件加载方法\n- 更换 User Agent（因部分用户的滥用行为导致被某知名开源镜像站屏蔽）\n- 增加一些高级选项及说明\n\n### 2020-07-12 | V3\n\n- 全新 附加功能脚本\n- 新增 种子文件删除功能\n- 新增 全局文件过滤功能\n- 新增 前端自定义临时下载目录功能。免手动设定脚本中的路径。\n- 新增 附加功能脚本核心文件(`core`)。强大的功能源自于强大的核心。\n- 新增 附加功能脚本配置文件(`script.conf`)。独立文件持久化配置，方便更新。\n- 新增 RCLONE 环境变量文件(`rclone.env`)\n- 优化 文件删除机制。防止极限环境和极端使用习惯情况下误删文件。\n- 更多改进请自行体验\n\n<details>\n<summary>历史记录</summary>\n\n早期版本和其它记录已归档至 [v2 分支](https://github.com/P3TERX/aria2.conf/tree/v2)\n\n</details>\n\n## 声明\n\n本项目使用 [MIT](https://github.com/P3TERX/aria2.conf/blob/master/LICENSE) 开源协议，对于本项复制、修改、发布等行为请遵守相关协议保留所有文件中的版权信息，谢谢合作！\n"
        },
        {
          "name": "aria2.conf",
          "type": "blob",
          "size": 15.6298828125,
          "content": "#\n# https://github.com/P3TERX/aria2.conf\n# File name：aria2.conf\n# Description: Awesome Aria2 configuration file\n# Version: 2021.09.15\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# This is free software, licensed under the MIT License.\n# See /LICENSE for more information.\n#\n\n## 文件保存设置 ##\n\n# 下载目录。可使用绝对路径或相对路径, 默认: 当前启动位置\ndir=/root/Download\n\n# 磁盘缓存, 0 为禁用缓存，默认:16M\n# 磁盘缓存的作用是把下载的数据块临时存储在内存中，然后集中写入硬盘，以减少磁盘 I/O ，提升读写性能，延长硬盘寿命。\n# 建议在有足够的内存空闲情况下适当增加，但不要超过剩余可用内存空间大小。\n# 此项值仅决定上限，实际对内存的占用取决于网速(带宽)和设备性能等其它因素。\ndisk-cache=64M\n\n# 文件预分配方式, 可选：none, prealloc, trunc, falloc, 默认:prealloc\n# 预分配对于机械硬盘可有效降低磁盘碎片、提升磁盘读写性能、延长磁盘寿命。\n# 机械硬盘使用 ext4（具有扩展支持），btrfs，xfs 或 NTFS（仅 MinGW 编译版本）等文件系统建议设置为 falloc\n# 若无法下载，提示 fallocate failed.cause：Operation not supported 则说明不支持，请设置为 none\n# prealloc 分配速度慢, trunc 无实际作用，不推荐使用。\n# 固态硬盘不需要预分配，只建议设置为 none ，否则可能会导致双倍文件大小的数据写入，从而影响寿命。\nfile-allocation=none\n\n# 文件预分配大小限制。小于此选项值大小的文件不预分配空间，单位 K 或 M，默认：5M\nno-file-allocation-limit=64M\n\n# 断点续传\ncontinue=true\n\n# 始终尝试断点续传，无法断点续传则终止下载，默认：true\nalways-resume=false\n\n# 不支持断点续传的 URI 数值，当 always-resume=false 时生效。\n# 达到这个数值从将头开始下载，值为 0 时所有 URI 不支持断点续传时才从头开始下载。\nmax-resume-failure-tries=0\n\n# 获取服务器文件时间，默认:false\nremote-time=true\n\n\n## 进度保存设置 ##\n\n# 从会话文件中读取下载任务\ninput-file=/root/.aria2/aria2.session\n\n# 会话文件保存路径\n# Aria2 退出时或指定的时间间隔会保存`错误/未完成`的下载任务到会话文件\nsave-session=/root/.aria2/aria2.session\n\n# 任务状态改变后保存会话的间隔时间（秒）, 0 为仅在进程正常退出时保存, 默认:0\n# 为了及时保存任务状态、防止任务丢失，此项值只建议设置为 1\nsave-session-interval=1\n\n# 自动保存任务进度到控制文件(*.aria2)的间隔时间（秒），0 为仅在进程正常退出时保存，默认：60\n# 此项值也会间接影响从内存中把缓存的数据写入磁盘的频率\n# 想降低磁盘 IOPS (每秒读写次数)则提高间隔时间\n# 想在意外非正常退出时尽量保存更多的下载进度则降低间隔时间\n# 非正常退出：进程崩溃、系统崩溃、SIGKILL 信号、设备断电等\nauto-save-interval=20\n\n# 强制保存，即使任务已完成也保存信息到会话文件, 默认:false\n# 开启后会在任务完成后保留 .aria2 文件，文件被移除且任务存在的情况下重启后会重新下载。\n# 关闭后已完成的任务列表会在重启后清空。\nforce-save=false\n\n\n## 下载连接设置 ##\n\n# 文件未找到重试次数，默认:0 (禁用)\n# 重试时同时会记录重试次数，所以也需要设置 max-tries 这个选项\nmax-file-not-found=10\n\n# 最大尝试次数，0 表示无限，默认:5\nmax-tries=0\n\n# 重试等待时间（秒）, 默认:0 (禁用)\nretry-wait=10\n\n# 连接超时时间（秒）。默认：60\nconnect-timeout=10\n\n# 超时时间（秒）。默认：60\ntimeout=10\n\n# 最大同时下载任务数, 运行时可修改, 默认:5\nmax-concurrent-downloads=5\n\n# 单服务器最大连接线程数, 任务添加时可指定, 默认:1\n# 最大值为 16 (增强版无限制), 且受限于单任务最大连接线程数(split)所设定的值。\nmax-connection-per-server=16\n\n# 单任务最大连接线程数, 任务添加时可指定, 默认:5\nsplit=64\n\n# 文件最小分段大小, 添加时可指定, 取值范围 1M-1024M (增强版最小值为 1K), 默认:20M\n# 比如此项值为 10M, 当文件为 20MB 会分成两段并使用两个来源下载, 文件为 15MB 则只使用一个来源下载。\n# 理论上值越小使用下载分段就越多，所能获得的实际线程数就越大，下载速度就越快，但受限于所下载文件服务器的策略。\nmin-split-size=4M\n\n# HTTP/FTP 下载分片大小，所有分割都必须是此项值的倍数，最小值为 1M (增强版为 1K)，默认：1M\npiece-length=1M\n\n# 允许分片大小变化。默认：false\n# false：当分片大小与控制文件中的不同时将会中止下载\n# true：丢失部分下载进度继续下载\nallow-piece-length-change=true\n\n# 最低下载速度限制。当下载速度低于或等于此选项的值时关闭连接（增强版本为重连），此选项与 BT 下载无关。单位 K 或 M ，默认：0 (无限制)\nlowest-speed-limit=0\n\n# 全局最大下载速度限制, 运行时可修改, 默认：0 (无限制)\nmax-overall-download-limit=0\n\n# 单任务下载速度限制, 默认：0 (无限制)\nmax-download-limit=0\n\n# 禁用 IPv6, 默认:false\ndisable-ipv6=true\n\n# GZip 支持，默认:false\nhttp-accept-gzip=true\n\n# URI 复用，默认: true\nreuse-uri=false\n\n# 禁用 netrc 支持，默认:false\nno-netrc=true\n\n# 允许覆盖，当相关控制文件(.aria2)不存在时从头开始重新下载。默认:false\nallow-overwrite=false\n\n# 文件自动重命名，此选项仅在 HTTP(S)/FTP 下载中有效。新文件名在名称之后扩展名之前加上一个点和一个数字（1..9999）。默认:true\nauto-file-renaming=true\n\n# 使用 UTF-8 处理 Content-Disposition ，默认:false\ncontent-disposition-default-utf8=true\n\n# 最低 TLS 版本，可选：TLSv1.1、TLSv1.2、TLSv1.3 默认:TLSv1.2\n#min-tls-version=TLSv1.2\n\n\n## BT/PT 下载设置 ##\n\n# BT 监听端口(TCP), 默认:6881-6999\n# 直通外网的设备，比如 VPS ，务必配置防火墙和安全组策略允许此端口入站\n# 内网环境的设备，比如 NAS ，除了防火墙设置，还需在路由器设置外网端口转发到此端口\nlisten-port=51413\n\n# DHT 网络与 UDP tracker 监听端口(UDP), 默认:6881-6999\n# 因协议不同，可以与 BT 监听端口使用相同的端口，方便配置防火墙和端口转发策略。\ndht-listen-port=51413\n\n# 启用 IPv4 DHT 功能, PT 下载(私有种子)会自动禁用, 默认:true\nenable-dht=true\n\n# 启用 IPv6 DHT 功能, PT 下载(私有种子)会自动禁用，默认:false\n# 在没有 IPv6 支持的环境开启可能会导致 DHT 功能异常\nenable-dht6=false\n\n# 指定 BT 和 DHT 网络中的 IP 地址\n# 使用场景：在家庭宽带没有公网 IP 的情况下可以把 BT 和 DHT 监听端口转发至具有公网 IP 的服务器，在此填写服务器的 IP ，可以提升 BT 下载速率。\n#bt-external-ip=\n\n# IPv4 DHT 文件路径，默认：$HOME/.aria2/dht.dat\ndht-file-path=/root/.aria2/dht.dat\n\n# IPv6 DHT 文件路径，默认：$HOME/.aria2/dht6.dat\ndht-file-path6=/root/.aria2/dht6.dat\n\n# IPv4 DHT 网络引导节点\ndht-entry-point=dht.transmissionbt.com:6881\n\n# IPv6 DHT 网络引导节点\ndht-entry-point6=dht.transmissionbt.com:6881\n\n# 本地节点发现, PT 下载(私有种子)会自动禁用 默认:false\nbt-enable-lpd=true\n\n# 指定用于本地节点发现的接口，可能的值：接口，IP地址\n# 如果未指定此选项，则选择默认接口。\n#bt-lpd-interface=\n\n# 启用节点交换, PT 下载(私有种子)会自动禁用, 默认:true\nenable-peer-exchange=true\n\n# BT 下载最大连接数（单任务），运行时可修改。0 为不限制，默认:55\n# 理想情况下连接数越多下载越快，但在实际情况是只有少部分连接到的做种者上传速度快，其余的上传慢或者不上传。\n# 如果不限制，当下载非常热门的种子或任务数非常多时可能会因连接数过多导致进程崩溃或网络阻塞。\n# 进程崩溃：如果设备 CPU 性能一般，连接数过多导致 CPU 占用过高，因资源不足 Aria2 进程会强制被终结。\n# 网络阻塞：在内网环境下，即使下载没有占满带宽也会导致其它设备无法正常上网。因远古低性能路由器的转发性能瓶颈导致。\nbt-max-peers=128\n\n# BT 下载期望速度值（单任务），运行时可修改。单位 K 或 M 。默认:50K\n# BT 下载速度低于此选项值时会临时提高连接数来获得更快的下载速度，不过前提是有更多的做种者可供连接。\n# 实测临时提高连接数没有上限，但不会像不做限制一样无限增加，会根据算法进行合理的动态调节。\nbt-request-peer-speed-limit=10M\n\n# 全局最大上传速度限制, 运行时可修改, 默认:0 (无限制)\n# 设置过低可能影响 BT 下载速度\nmax-overall-upload-limit=2M\n\n# 单任务上传速度限制, 默认:0 (无限制)\nmax-upload-limit=0\n\n# 最小分享率。当种子的分享率达到此选项设置的值时停止做种, 0 为一直做种, 默认:1.0\n# 强烈建议您将此选项设置为大于等于 1.0\nseed-ratio=1.0\n\n# 最小做种时间（分钟）。设置为 0 时将在 BT 任务下载完成后停止做种。\nseed-time=0\n\n# 做种前检查文件哈希, 默认:true\nbt-hash-check-seed=true\n\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=false\n\n# BT tracker 服务器连接超时时间（秒）。默认：60\n# 建立连接后，此选项无效，将使用 bt-tracker-timeout 选项的值\nbt-tracker-connect-timeout=10\n\n# BT tracker 服务器超时时间（秒）。默认：60\nbt-tracker-timeout=10\n\n# BT 服务器连接间隔时间（秒）。默认：0 (自动)\n#bt-tracker-interval=0\n\n# BT 下载优先下载文件开头或结尾\nbt-prioritize-piece=head=32M,tail=32M\n\n# 保存通过 WebUI(RPC) 上传的种子文件(.torrent)，默认:true\n# 所有涉及种子文件保存的选项都建议开启，不保存种子文件有任务丢失的风险。\n# 通过 RPC 自定义临时下载目录可能不会保存种子文件。\nrpc-save-upload-metadata=true\n\n# 下载种子文件(.torrent)自动开始下载, 默认:true，可选：false|mem\n# true：保存种子文件\n# false：仅下载种子文件\n# mem：将种子保存在内存中\nfollow-torrent=true\n\n# 种子文件下载完后暂停任务，默认：false\n# 在开启 follow-torrent 选项后下载种子文件或磁力会自动开始下载任务进行下载，而同时开启当此选项后会建立相关任务并暂停。\npause-metadata=false\n\n# 保存磁力链接元数据为种子文件(.torrent), 默认:false\nbt-save-metadata=true\n\n# 加载已保存的元数据文件(.torrent)，默认:false\nbt-load-saved-metadata=true\n\n# 删除 BT 下载任务中未选择文件，默认:false\nbt-remove-unselected-file=true\n\n# BT强制加密, 默认: false\n# 启用后将拒绝旧的 BT 握手协议并仅使用混淆握手及加密。可以解决部分运营商对 BT 下载的封锁，且有一定的防版权投诉与迅雷吸血效果。\n# 此选项相当于后面两个选项(bt-require-crypto=true, bt-min-crypto-level=arc4)的快捷开启方式，但不会修改这两个选项的值。\nbt-force-encryption=true\n\n# BT加密需求，默认：false\n# 启用后拒绝与旧的 BitTorrent 握手协议(\\19BitTorrent protocol)建立连接，始终使用混淆处理握手。\n#bt-require-crypto=true\n\n# BT最低加密等级，可选：plain（明文），arc4（加密），默认：plain\n#bt-min-crypto-level=arc4\n\n# 分离仅做种任务，默认：false\n# 从正在下载的任务中排除已经下载完成且正在做种的任务，并开始等待列表中的下一个任务。\nbt-detach-seed-only=true\n\n\n## 客户端伪装 ##\n\n# 自定义 User Agent\nuser-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 Edg/93.0.961.47\n\n# BT 客户端伪装\n# PT 下载需要保持 user-agent 和 peer-agent 两个参数一致\n# 部分 PT 站对 Aria2 有特殊封禁机制，客户端伪装不一定有效，且有封禁账号的风险。\n#user-agent=Deluge 1.3.15\npeer-agent=Deluge 1.3.15\npeer-id-prefix=-DE13F0-\n\n\n## 执行额外命令 ##\n\n# 下载停止后执行的命令\n# 从 正在下载 到 删除、错误、完成 时触发。暂停被标记为未开始下载，故与此项无关。\non-download-stop=/root/.aria2/delete.sh\n\n# 下载完成后执行的命令\n# 此项未定义则执行 下载停止后执行的命令 (on-download-stop)\non-download-complete=/root/.aria2/clean.sh\n\n# 下载错误后执行的命令\n# 此项未定义则执行 下载停止后执行的命令 (on-download-stop)\n#on-download-error=\n\n# 下载暂停后执行的命令\n#on-download-pause=\n\n# 下载开始后执行的命令\n#on-download-start=\n\n# BT 下载完成后执行的命令\n#on-bt-download-complete=\n\n\n## RPC 设置 ##\n\n# 启用 JSON-RPC/XML-RPC 服务器, 默认:false\nenable-rpc=true\n\n# 接受所有远程请求, 默认:false\nrpc-allow-origin-all=true\n\n# 允许外部访问, 默认:false\nrpc-listen-all=true\n\n# RPC 监听端口, 默认:6800\nrpc-listen-port=6800\n\n# RPC 密钥\nrpc-secret=P3TERX\n\n# RPC 最大请求大小\nrpc-max-request-size=10M\n\n# RPC 服务 SSL/TLS 加密, 默认：false\n# 启用加密后必须使用 https 或者 wss 协议连接\n# 不推荐开启，建议使用 web server 反向代理，比如 Nginx、Caddy ，灵活性更强。\n#rpc-secure=false\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)\n#rpc-certificate=/root/.aria2/xxx.pem\n\n# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)\n#rpc-private-key=/root/.aria2/xxx.key\n\n# 事件轮询方式, 可选：epoll, kqueue, port, poll, select, 不同系统默认值不同\n#event-poll=select\n\n\n## 高级选项 ##\n\n# 启用异步 DNS 功能。默认：true\n#async-dns=true\n\n# 指定异步 DNS 服务器列表，未指定则从 /etc/resolv.conf 中读取。\n#async-dns-server=119.29.29.29,223.5.5.5,8.8.8.8,1.1.1.1\n\n# 指定单个网络接口，可能的值：接口，IP地址，主机名\n# 如果接口具有多个 IP 地址，则建议指定 IP 地址。\n# 已知指定网络接口会影响依赖本地 RPC 的连接的功能场景，即通过 localhost 和 127.0.0.1 无法与 Aria2 服务端进行讯通。\n#interface=\n\n# 指定多个网络接口，多个值之间使用逗号(,)分隔。\n# 使用 interface 选项时会忽略此项。\n#multiple-interface=\n\n\n## 日志设置 ##\n\n# 日志文件保存路径，忽略或设置为空为不保存，默认：不保存\n#log=\n\n# 日志级别，可选 debug, info, notice, warn, error 。默认：debug\n#log-level=warn\n\n# 控制台日志级别，可选 debug, info, notice, warn, error ，默认：notice\nconsole-log-level=notice\n\n# 安静模式，禁止在控制台输出日志，默认：false\nquiet=false\n\n# 下载进度摘要输出间隔时间（秒），0 为禁止输出。默认：60\nsummary-interval=0\n\n# 关闭控制台进度条输出，避免日志里面打印大量空行\nshow-console-readout=false\n\n\n## 增强扩展设置(非官方) ##\n\n# 仅适用于 myfreeer/aria2-build-msys2 (Windows) 和 P3TERX/Aria2-Pro-Core (GNU/Linux) 项目所构建的增强版本\n\n# 在服务器返回 HTTP 400 Bad Request 时重试，仅当 retry-wait > 0 时有效，默认 false\n#retry-on-400=true\n\n# 在服务器返回 HTTP 403 Forbidden 时重试，仅当 retry-wait > 0 时有效，默认 false\n#retry-on-403=true\n\n# 在服务器返回 HTTP 406 Not Acceptable 时重试，仅当 retry-wait > 0 时有效，默认 false\n#retry-on-406=true\n\n# 在服务器返回未知状态码时重试，仅当 retry-wait > 0 时有效，默认 false\n#retry-on-unknown=true\n\n# 是否发送 Want-Digest HTTP 标头。默认：false (不发送)\n# 部分网站会把此标头作为特征来检测和屏蔽 Aria2\n#http-want-digest=false\n\n\n## BitTorrent trackers ##\nbt-tracker=\n"
        },
        {
          "name": "clean.sh",
          "type": "blob",
          "size": 1.5849609375,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/P3TERX/aria2.conf\n# File name：clean.sh\n# Description: Remove redundant files after Aria2 download is complete\n# Version: 3.0\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\nCHECK_CORE_FILE() {\n    CORE_FILE=\"$(dirname $0)/core\"\n    if [[ -f \"${CORE_FILE}\" ]]; then\n        . \"${CORE_FILE}\"\n    else\n        echo \"!!! core file does not exist !!!\"\n        exit 1\n    fi\n}\n\nCHECK_CORE_FILE \"$@\"\nCHECK_PARAMETER \"$@\"\nCHECK_FILE_NUM\nCHECK_SCRIPT_CONF\nGET_TASK_INFO\nGET_DOWNLOAD_DIR\nCONVERSION_PATH\nCLEAN_UP\nexit 0\n"
        },
        {
          "name": "core",
          "type": "blob",
          "size": 9.6201171875,
          "content": "#\n# https://github.com/P3TERX/aria2.conf\n# File name：core\n# Description: Aria2 additional function script core file\n# Version: 3.3\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\nTASK_GID=$1\nFILE_NUM=$2\nFILE_PATH=$3\nARIA2_CONF_DIR=\"$(dirname $0)\"\nARIA2_CONF=\"${ARIA2_CONF_DIR}/aria2.conf\"\nARIA2_SESSION=\"${ARIA2_CONF_DIR}/aria2.session\"\nSCRIPT_CONF=\"${ARIA2_CONF_DIR}/script.conf\"\nRED_FONT_PREFIX=\"\\033[31m\"\nLIGHT_GREEN_FONT_PREFIX=\"\\033[1;32m\"\nYELLOW_FONT_PREFIX=\"\\033[1;33m\"\nLIGHT_PURPLE_FONT_PREFIX=\"\\033[1;35m\"\nFONT_COLOR_SUFFIX=\"\\033[0m\"\nINFO=\"[${LIGHT_GREEN_FONT_PREFIX}INFO${FONT_COLOR_SUFFIX}]\"\nERROR=\"[${RED_FONT_PREFIX}ERROR${FONT_COLOR_SUFFIX}]\"\nWARRING=\"[${YELLOW_FONT_PREFIX}WARRING${FONT_COLOR_SUFFIX}]\"\n\nDATE_TIME() {\n    date +\"%m/%d %H:%M:%S\"\n}\n\nCHECK_PARAMETER() {\n    [[ $# -eq 0 ]] && {\n        echo && echo -e \"${ERROR} This script can only be used by passing parameters through Aria2.\"\n        exit 1\n    }\n}\n\nCHECK_FILE_NUM() {\n    [[ ${FILE_NUM} -eq 0 ]] && {\n        echo && echo -e \"$(DATE_TIME) ${WARRING} Number of files is zero, maybe a Magnet Link.\"\n        exit 0\n    }\n}\n\nCHECK_SCRIPT_CONF() {\n    if [[ -f \"${SCRIPT_CONF}\" ]]; then\n        LOAD_SCRIPT_CONF\n    else\n        echo && echo \"!!! '${SCRIPT_CONF}' does not exist !!!\"\n        exit 1\n    fi\n}\n\nLOAD_SCRIPT_CONF() {\n    DRIVE_NAME=\"$(grep ^drive-name \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DRIVE_DIR=\"$(grep ^drive-dir \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    UPLOAD_LOG_PATH=\"$(grep ^upload-log \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DEST_DIR=\"$(grep ^dest-dir \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    MOVE_LOG_PATH=\"$(grep ^move-log \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_ON_REMOVED=\"$(grep ^delete-on-removed \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_ON_ERROR=\"$(grep ^delete-on-error \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_ON_UNKNOWN=\"$(grep ^delete-on-unknown \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_DOT_ARIA2=\"$(grep ^delete-dot-aria2 \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_DOT_TORRENT=\"$(grep ^delete-dot-torrent \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    DELETE_EMPTY_DIR=\"$(grep ^delete-empty-dir \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    MIN_SIZE=\"$(grep ^min-size \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    INCLUDE_FILE=\"$(grep ^include-file \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    EXCLUDE_FILE=\"$(grep ^exclude-file \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    INCLUDE_FILE_REGEX=\"$(grep ^include-file-regex \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n    EXCLUDE_FILE_REGEX=\"$(grep ^exclude-file-regex \"${SCRIPT_CONF}\" | cut -d= -f2-)\"\n}\n\nREAD_ARIA2_CONF() {\n    if [ ! -f \"${ARIA2_CONF}\" ]; then\n        echo -e \"$(DATE_TIME) ${ERROR} '${ARIA2_CONF}' does not exist.\"\n        exit 1\n    else\n        ARIA2_DOWNLOAD_DIR=$(grep ^dir \"${ARIA2_CONF}\" | cut -d= -f2-)\n        RPC_PORT=$(grep ^rpc-listen-port \"${ARIA2_CONF}\" | cut -d= -f2-)\n        RPC_SECRET=$(grep ^rpc-secret \"${ARIA2_CONF}\" | cut -d= -f2-)\n        SAVE_SESSION_INTERVAL=$(grep ^save-session-interval \"${ARIA2_CONF}\" | cut -d= -f2-)\n        [[ ${ARIA2_DOWNLOAD_DIR} && ${RPC_PORT} && ${SAVE_SESSION_INTERVAL} ]] || {\n            echo -e \"$(DATE_TIME) ${ERROR} Aria2 configuration file incomplete.\"\n            exit 1\n        }\n        RPC_ADDRESS=\"localhost:${RPC_PORT}/jsonrpc\"\n    fi\n}\n\nRPC_TASK_INFO() {\n    if [[ \"${RPC_SECRET}\" ]]; then\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.tellStatus\",\"id\":\"P3TERX\",\"params\":[\"token:'${RPC_SECRET}'\",\"'${TASK_GID}'\"]}'\n    else\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.tellStatus\",\"id\":\"P3TERX\",\"params\":[\"'${TASK_GID}'\"]}'\n    fi\n    curl \"${RPC_ADDRESS}\" -fsSd \"${RPC_PAYLOAD}\" || curl \"https://${RPC_ADDRESS}\" -kfsSd \"${RPC_PAYLOAD}\"\n}\n\nGET_TASK_INFO() {\n    READ_ARIA2_CONF\n    RPC_RESULT=\"$(RPC_TASK_INFO)\"\n}\n\nGET_DOWNLOAD_DIR() {\n    [[ -z ${RPC_RESULT} ]] && {\n        echo -e \"$(DATE_TIME) ${ERROR} Aria2 RPC interface error!\"\n        exit 1\n    }\n    DOWNLOAD_DIR=$(echo \"${RPC_RESULT}\" | jq -r '.result.dir')\n    [[ -z \"${DOWNLOAD_DIR}\" || \"${DOWNLOAD_DIR}\" = \"null\" ]] && {\n        echo ${RPC_RESULT} | jq '.result'\n        echo -e \"$(DATE_TIME) ${ERROR} Failed to get download directory!\"\n        exit 1\n    }\n}\n\nGET_TASK_STATUS() {\n    TASK_STATUS=$(echo \"${RPC_RESULT}\" | jq -r '.result.status')\n    [[ -z \"${TASK_STATUS}\" || \"${TASK_STATUS}\" = \"null\" ]] && {\n        echo \"${RPC_RESULT}\" | jq '.result'\n        echo -e \"$(DATE_TIME) ${ERROR} Failed to get task status!\"\n        exit 1\n    }\n}\n\nGET_INFO_HASH() {\n    INFO_HASH=$(echo \"${RPC_RESULT}\" | jq -r '.result.infoHash')\n    if [[ -z \"${INFO_HASH}\" ]]; then\n        echo \"${RPC_RESULT}\" | jq '.result'\n        echo -e \"$(DATE_TIME) ${ERROR} Failed to get Info Hash!\"\n        exit 1\n    elif [[ \"${INFO_HASH}\" = \"null\" ]]; then\n        return 1\n    else\n        TORRENT_FILE=\"${DOWNLOAD_DIR}/${INFO_HASH}.torrent\"\n    fi\n}\n\nCONVERSION_PATH() {\n    RELATIVE_PATH=\"${FILE_PATH#\"${DOWNLOAD_DIR}/\"}\"\n    TASK_FILE_NAME=\"${RELATIVE_PATH%%/*}\"\n    TASK_PATH=\"${DOWNLOAD_DIR}/${TASK_FILE_NAME}\"\n    DEST_PATH_SUFFIX=\"${TASK_PATH#\"${ARIA2_DOWNLOAD_DIR}\"}\"\n}\n\nOUTPUT_LOG() {\n    echo -e \"${LOG}\"\n    [[ \"${LOG_PATH}\" && -e \"${LOG_PATH%/*}\" ]] && echo -e \"${LOG}\" | sed \"s,\\x1B\\[[0-9;]*m,,g\" >>\"${LOG_PATH}\"\n}\n\nCHECK_DOT_ARIA2() {\n    if [ -f \"${FILE_PATH}.aria2\" ]; then\n        DOT_ARIA2_FILE=\"${FILE_PATH}.aria2\"\n    elif [ -f \"${TASK_PATH}.aria2\" ]; then\n        DOT_ARIA2_FILE=\"${TASK_PATH}.aria2\"\n    else\n        DOT_ARIA2_FILE='null'\n        echo -e \"$(DATE_TIME) ${INFO} .aria2 file does not exist.\"\n        return 1\n    fi\n}\n\nDELETE_DOT_ARIA2() {\n    if [[ \"${DELETE_DOT_ARIA2}\" = \"true\" ]] && CHECK_DOT_ARIA2; then\n        echo -e \"$(DATE_TIME) ${INFO} Deleting .aria2 file ...\"\n        rm -vf \"${DOT_ARIA2_FILE}\"\n    fi\n}\n\nDELETE_TORRENT_FILES() {\n    sleep $(($SAVE_SESSION_INTERVAL + 1))\n    TORRENT_FILES=$(ls \"${DOWNLOAD_DIR}\" | grep '.*.torrent')\n    if [[ -f \"${ARIA2_SESSION}\" && -n \"${TORRENT_FILES}\" ]]; then\n        for TORRENT_FILE in \"${TORRENT_FILES}\"; do\n            if [[ -n \"${TORRENT_FILE}\" && -z $(cat \"${ARIA2_SESSION}\" | grep -i \"${TORRENT_FILE%.*}\") ]]; then\n                echo -e \"$(DATE_TIME) ${INFO} Deleting .torrent file (enhanced) ...\"\n                rm -vf ${DOWNLOAD_DIR}/${TORRENT_FILE}\n            fi\n        done\n    else\n        [[ ! -f \"${ARIA2_SESSION}\" ]] &&\n            echo -e \"$(DATE_TIME) ${ERROR} '${ARIA2_SESSION}' does not exist.\" ||\n            echo -e \"$(DATE_TIME) ${WARRING} .torrent file does not exist.\"\n    fi\n}\n\nDELETE_DOT_TORRENT() {\n    if GET_INFO_HASH; then\n        if [[ \"${DELETE_DOT_TORRENT}\" = \"true\" || \"${DELETE_DOT_TORRENT}\" = \"normal\" ]] && [[ -f \"${TORRENT_FILE}\" ]]; then\n            echo -e \"$(DATE_TIME) ${INFO} Deleting .torrent file ...\"\n            rm -vf ${TORRENT_FILE}\n        elif [[ \"${DELETE_DOT_TORRENT}\" = \"true\" || \"${DELETE_DOT_TORRENT}\" = \"enhanced\" ]]; then\n            DELETE_TORRENT_FILES\n        elif [[ \"${DELETE_DOT_TORRENT}\" = \"normal\" ]]; then\n            echo -e \"$(DATE_TIME) ${WARRING} .torrent file may exist but cannot be found. Recommended to enable enhanced mode.\"\n        else\n            echo -e \"$(DATE_TIME) ${INFO} Delete .torrent file function is disabled.\"\n        fi\n    else\n        echo -e \"$(DATE_TIME) ${INFO} General download task, skipped delete .torrent file.\"\n    fi\n}\n\nDELETE_EMPTY_DIR() {\n    if [[ \"${DELETE_EMPTY_DIR}\" = \"true\" ]]; then\n        echo -e \"$(DATE_TIME) ${INFO} Deleting empty directory ...\"\n        if [[ \"${DOWNLOAD_DIR}\" =~ \"${ARIA2_DOWNLOAD_DIR}\" ]]; then\n            find \"${ARIA2_DOWNLOAD_DIR}\" ! -path \"${ARIA2_DOWNLOAD_DIR}\" -depth -type d -empty -exec rm -vrf {} \\;\n        else\n            find \"${DOWNLOAD_DIR}\" -depth -type d -empty -exec rm -vrf {} \\;\n        fi\n    fi\n}\n\nDELETE_EXCLUDE_FILE() {\n    if [[ ${FILE_NUM} -gt 1 ]] && [[ -n ${MIN_SIZE} || -n ${INCLUDE_FILE} || -n ${EXCLUDE_FILE} || -n ${EXCLUDE_FILE_REGEX} || -n ${INCLUDE_FILE_REGEX} ]]; then\n        echo -e \"${INFO} Deleting excluded files ...\"\n        [[ -n ${MIN_SIZE} ]] && find \"${TASK_PATH}\" -type f -size -${MIN_SIZE} -print0 | xargs -0 rm -vf\n        [[ -n ${EXCLUDE_FILE} ]] && find \"${TASK_PATH}\" -type f -regextype posix-extended -iregex \".*\\.(${EXCLUDE_FILE})\" -print0 | xargs -0 rm -vf\n        [[ -n ${INCLUDE_FILE} ]] && find \"${TASK_PATH}\" -type f -regextype posix-extended ! -iregex \".*\\.(${INCLUDE_FILE})\" -print0 | xargs -0 rm -vf\n        [[ -n ${EXCLUDE_FILE_REGEX} ]] && find \"${TASK_PATH}\" -type f -regextype posix-extended -iregex \"${EXCLUDE_FILE_REGEX}\" -print0 | xargs -0 rm -vf\n        [[ -n ${INCLUDE_FILE_REGEX} ]] && find \"${TASK_PATH}\" -type f -regextype posix-extended ! -iregex \"${INCLUDE_FILE_REGEX}\" -print0 | xargs -0 rm -vf\n    fi\n}\n\nCLEAN_UP() {\n    DELETE_DOT_ARIA2\n    DELETE_DOT_TORRENT\n    DELETE_EXCLUDE_FILE\n    DELETE_EMPTY_DIR\n}\n"
        },
        {
          "name": "delete.sh",
          "type": "blob",
          "size": 3.517578125,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/P3TERX/aria2.conf\n# File name：delete.sh\n# Description: Delete files after Aria2 download error or task removed\n# Version: 3.0\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\nCHECK_CORE_FILE() {\n    CORE_FILE=\"$(dirname $0)/core\"\n    if [[ -f \"${CORE_FILE}\" ]]; then\n        . \"${CORE_FILE}\"\n    else\n        echo \"!!! core file does not exist !!!\"\n        exit 1\n    fi\n}\n\nCHECK_RPC_CONECTION() {\n    READ_ARIA2_CONF\n    if [[ \"${RPC_SECRET}\" ]]; then\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.getVersion\",\"id\":\"P3TERX\",\"params\":[\"token:'${RPC_SECRET}'\"]}'\n    else\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.getVersion\",\"id\":\"P3TERX\"}'\n    fi\n    (curl \"${RPC_ADDRESS}\" -fsSd \"${RPC_PAYLOAD}\" || curl \"https://${RPC_ADDRESS}\" -kfsSd \"${RPC_PAYLOAD}\") >/dev/null\n}\n\nDELETE_ON_STOP() {\n    if [[ \"${TASK_STATUS}\" = \"error\" && \"${DELETE_ON_ERROR}\" = \"true\" ]] || [[ \"${TASK_STATUS}\" = \"removed\" && \"${DELETE_ON_REMOVED}\" = \"true\" ]]; then\n        if [[ -f \"${TASK_PATH}.aria2\" ]]; then\n            echo -e \"$(DATE_TIME) ${INFO} Download task ${TASK_STATUS}, deleting files...\"\n            rm -vrf \"${TASK_PATH}.aria2\" \"${TASK_PATH}\"\n        else\n            [[ -e \"${TASK_PATH}\" ]] &&\n                echo -e \"$(DATE_TIME) ${WARRING} Skip delete. Download completed files: ${TASK_PATH}\" ||\n                echo -e \"$(DATE_TIME) ${WARRING} Skip delete. File does not exist: ${TASK_PATH}\"\n        fi\n    else\n        echo -e \"$(DATE_TIME) ${WARRING} Skip delete. Task status invalid: ${TASK_STATUS}\"\n    fi\n}\n\nDELETE_ON_UNKNOWN() {\n    if [[ -f \"${FILE_PATH}.aria2\" ]]; then\n        echo -e \"$(DATE_TIME) ${INFO} Download task force removed, deleting files...\"\n        rm -vrf \"${FILE_PATH}.aria2\" \"${FILE_PATH}\"\n    else\n        [[ -e \"${FILE_PATH}\" ]] &&\n            echo -e \"$(DATE_TIME) ${WARRING} Skip delete. Download completed files: ${FILE_PATH}\" ||\n            echo -e \"$(DATE_TIME) ${WARRING} Skip delete. File does not exist: ${FILE_PATH}\"\n    fi\n}\n\nDELETE_FILE() {\n    if GET_TASK_INFO; then\n        GET_DOWNLOAD_DIR\n        GET_TASK_STATUS\n        CONVERSION_PATH\n        DELETE_ON_STOP\n        DELETE_DOT_TORRENT\n        DELETE_EMPTY_DIR\n    elif CHECK_RPC_CONECTION && [[ \"${DELETE_ON_UNKNOWN}\" = \"true\" && ${FILE_NUM} -eq 1 ]]; then\n        DELETE_ON_UNKNOWN\n    else\n        echo -e \"$(DATE_TIME) ${ERROR} Aria2 RPC interface error!\"\n        exit 1\n    fi\n}\n\nCHECK_CORE_FILE \"$@\"\nCHECK_PARAMETER \"$@\"\nCHECK_FILE_NUM\nCHECK_SCRIPT_CONF\nDELETE_FILE\nexit 0\n"
        },
        {
          "name": "dht.dat",
          "type": "blob",
          "size": 69.015625,
          "content": null
        },
        {
          "name": "dht6.dat",
          "type": "blob",
          "size": 7.875,
          "content": null
        },
        {
          "name": "move.sh",
          "type": "blob",
          "size": 3.3974609375,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/P3TERX/aria2.conf\n# File name：move.sh\n# Description: Move files after Aria2 download is complete\n# Version: 3.0\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\nCHECK_CORE_FILE() {\n    CORE_FILE=\"$(dirname $0)/core\"\n    if [[ -f \"${CORE_FILE}\" ]]; then\n        . \"${CORE_FILE}\"\n    else\n        echo \"!!! core file does not exist !!!\"\n        exit 1\n    fi\n}\n\nTASK_INFO() {\n    echo -e \"\n-------------------------- [${YELLOW_FONT_PREFIX}Task Infomation${FONT_COLOR_SUFFIX}] --------------------------\n${LIGHT_PURPLE_FONT_PREFIX}Task GID:${FONT_COLOR_SUFFIX} ${TASK_GID}\n${LIGHT_PURPLE_FONT_PREFIX}Number of Files:${FONT_COLOR_SUFFIX} ${FILE_NUM}\n${LIGHT_PURPLE_FONT_PREFIX}First File Path:${FONT_COLOR_SUFFIX} ${FILE_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Task File Name:${FONT_COLOR_SUFFIX} ${TASK_FILE_NAME}\n${LIGHT_PURPLE_FONT_PREFIX}Task Path:${FONT_COLOR_SUFFIX} ${TASK_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Aria2 Download Directory:${FONT_COLOR_SUFFIX} ${ARIA2_DOWNLOAD_DIR}\n${LIGHT_PURPLE_FONT_PREFIX}Custom Download Directory:${FONT_COLOR_SUFFIX} ${DOWNLOAD_DIR}\n${LIGHT_PURPLE_FONT_PREFIX}Source Path:${FONT_COLOR_SUFFIX} ${SOURCE_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Destination Path:${FONT_COLOR_SUFFIX} ${DEST_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}.aria2 File Path:${FONT_COLOR_SUFFIX} ${DOT_ARIA2_FILE}\n-------------------------- [${YELLOW_FONT_PREFIX}Task Infomation${FONT_COLOR_SUFFIX}] --------------------------\n\"\n}\n\nOUTPUT_MOVE_LOG() {\n    LOG=\"${MOVE_LOG}\"\n    LOG_PATH=\"${MOVE_LOG_PATH}\"\n    OUTPUT_LOG\n}\n\nDEFINITION_PATH() {\n    SOURCE_PATH=\"${TASK_PATH}\"\n    if [[ \"${DOWNLOAD_DIR}\" != \"${ARIA2_DOWNLOAD_DIR}\" && \"${DOWNLOAD_DIR}\" =~ \"${ARIA2_DOWNLOAD_DIR}\" ]]; then\n        DEST_PATH=\"${DEST_DIR}${DEST_PATH_SUFFIX%/*}\"\n    else\n        DEST_PATH=\"${DEST_DIR}\"\n    fi\n}\n\nMOVE_FILE() {\n    echo -e \"$(DATE_TIME) ${INFO} Start move files ...\"\n    TASK_INFO\n    mkdir -p \"${DEST_PATH}\"\n    mv -vf \"${SOURCE_PATH}\" \"${DEST_PATH}\"\n    MOVE_EXIT_CODE=$?\n    if [ ${MOVE_EXIT_CODE} -eq 0 ]; then\n        MOVE_LOG=\"$(DATE_TIME) ${INFO} Move done: ${SOURCE_PATH} -> ${DEST_PATH}\"\n    else\n        MOVE_LOG=\"$(DATE_TIME) ${ERROR} Move failed: ${SOURCE_PATH}\"\n    fi\n    OUTPUT_MOVE_LOG\n    DELETE_EMPTY_DIR\n}\n\nCHECK_CORE_FILE \"$@\"\nCHECK_PARAMETER \"$@\"\nCHECK_FILE_NUM\nCHECK_SCRIPT_CONF\nGET_TASK_INFO\nGET_DOWNLOAD_DIR\nCONVERSION_PATH\nDEFINITION_PATH\nCLEAN_UP\nMOVE_FILE\nexit 0\n"
        },
        {
          "name": "rclone.env",
          "type": "blob",
          "size": 1.2685546875,
          "content": "#\n# https://github.com/P3TERX/aria2.conf\n# File name：rclone.env\n# Description: RCLONE environment variables file\n# Version: 2020.11.26\n#\n# For more information on RCLONE environment variables：\n# https://rclone.org/docs/#environment-variables\n#\n\n# RCLONE 配置文件路径\n#RCLONE_CONFIG=$HOME/.config/rclone/rclone.conf\n\n# RCLONE 配置文件密码\n#RCLONE_CONFIG_PASS=\n\n# RCLONE 速率限制(单位K,M,G)\n#RCLONE_BWLIMIT=10M\n\n# RCLONE 并行上传文件数，使用 Aria2 联动上传时仅适用于单个任务。\n#RCLONE_TRANSFERS=4\n\n# RCLONE 缓存大小。默认：16M\n# 理论上此项值越大文件传输速度越快。每个并行任务都将占用此大小的内存进行缓存，根据实际内存大小合理设置，设置得太大可能会导致进程中断。\n#RCLONE_BUFFER_SIZE=16M\n\n# RCLONE 上传失败重试次数，默认：3\n#RCLONE_RETRIES=3\n\n# RCLONE 上传失败重试等待时间(s, m, h)，默认禁用\nRCLONE_RETRIES_SLEEP=10s\n\n# RCLONE 跳过错误继续上传。默认：false\n#RCLONE_IGNORE_ERRORS=true\n\n# RCLONE 跳过已经存在的文件。默认：false\n#RCLONE_IGNORE_EXISTING=true\n\n# RCLONE 实时显示传输进度。默认：false（每分钟显示一次）\n#RCLONE_PROGRESS=true\n\n# RCLONE 代理设置\n#HTTP_PROXY=localhost:1080\n#HTTPS_PROXY=$HTTP_PROXY\n"
        },
        {
          "name": "script.conf",
          "type": "blob",
          "size": 2.419921875,
          "content": "#\n# https://github.com/P3TERX/aria2.conf\n# File name：script.conf\n# Description: Aria2 additional function script configuration file\n# Version: 2021.07.04\n#\n\n## 文件上传设置(upload.sh) ##\n\n# 网盘名称(RCLONE 配置时填写的 name)\ndrive-name=OneDrive\n\n# 网盘目录(上传目标目录，网盘中的文件夹路径)。注释或留空为网盘根目录，末尾不要有斜杠。\n#drive-dir=/DRIVEX/Download\n\n# 上传日志保存路径。注释或留空为不保存。\n#upload-log=/root/.aria2/upload.log\n\n\n## 文件移动设置(move.sh) ##\n\n# 移动目标目录\ndest-dir=/root/completed\n\n# 移动日志保存路径。注释或留空为不保存。\n#move-log=/root/.aria2/move.log\n\n\n## 文件删除设置(delete.sh) ##\n\n# 删除正在下载任务后删除文件\ndelete-on-removed=true\n\n# 下载错误时删除文件\ndelete-on-error=true\n\n# 删除正在下载任务后且任务信息无法读取时删除文件(第三方度盘工具)\ndelete-on-unknown=true\n\n\n## 文件清理设置(全局) ##\n\n# 删除 .aria2 文件\ndelete-dot-aria2=true\n\n# 删除 .torrent 文件。可选：normal | enhanced | true | false\n# normal: 删除相关任务的种子文件，但可能无法删除通过 RPC 方式(比如 WebUI、Bot)上传的种子文件(文件名无法确定)。\n# enhanced：在下载目录中查找非正在下载和暂停任务以外的其它种子文件并删除(非实时)。开启 强制保存(force-save) 后此项无效。\n# true：优先使用 normal 模式，在种子文件名无法确定的情况下使用 enhanced 模式。\n# false：不删除种子文件\n# 注意：通过 RPC 自定义临时下载目录的任务可能不会保存种子文件，与此功能无关。\ndelete-dot-torrent=true\n\n# 删除空目录\ndelete-empty-dir=true\n\n\n## 文件过滤设置(全局) ##\n\n# 仅 BT 多文件下载时有效，用于过滤无用文件。\n\n# 排除小文件。低于此大小的文件将在下载完成后被删除。\n#min-size=10M\n\n# 保留文件类型。其它文件类型将在下载完成后被删除。\n#include-file=mp4|mkv|rmvb|mov|avi\n\n# 排除文件类型。排除的文件类型将在下载完成后被删除。\n#exclude-file=html|url|lnk|txt|jpg|png\n\n# 保留文件(正则表达式)。其它文件类型将在下载完成后被删除。\n#include-file-regex=\n\n# 排除文件(正则表达式)。排除的文件类型将在下载完成后被删除。\n# 示例为排除比特彗星的 padding file\n#exclude-file-regex=\"(.*/)_+(padding)(_*)(file)(.*)(_+)\"\n"
        },
        {
          "name": "tracker.md",
          "type": "blob",
          "size": 0.79296875,
          "content": "## tracker.sh\n\n- 执行以下命令可直接获取 Aria2 可用格式的 BT tracker 列表。\n```\nbash <(curl -fsSL git.io/tracker.sh) cat\n```\n\n- 在 Aria2 配置文件(`aria2.conf`)所在目录执行以下命令即可获取最新 BT tracker 列表并自动添加到配置文件中。\n```\nbash <(curl -fsSL git.io/tracker.sh)\n```\n\n- 指定 Aria2 配置文件路径，比如配置文件在`/root/.aria2/aria2.conf`：\n```\nbash <(curl -fsSL git.io/tracker.sh) \"/root/.aria2/aria2.conf\"\n```\n\n- 通过 RPC 方式给远程 Aria2 更新 BT tracker 列表。\n```\nbash <(curl -fsSL git.io/tracker.sh) RPC '233.233.233.233:6800' 'Secret123'\n```\n\n- 通过 RPC 方式给本地 Aria2 更新 BT tracker 列表，并写入到 Aria2 配置文件中。\n```\nbash <(curl -fsSL git.io/tracker.sh) \"/root/.aria2/aria2.conf\" RPC\n```\n"
        },
        {
          "name": "tracker.sh",
          "type": "blob",
          "size": 5.37890625,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/P3TERX/aria2.conf\n# File name：tracker.sh\n# Description: Get BT trackers and add to Aria2\n# Version: 3.1\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n# BT tracker is provided by the following project.\n# https://github.com/XIU2/TrackersListCollection\n#\n\nRED_FONT_PREFIX=\"\\033[31m\"\nGREEN_FONT_PREFIX=\"\\033[32m\"\nYELLOW_FONT_PREFIX=\"\\033[1;33m\"\nLIGHT_PURPLE_FONT_PREFIX=\"\\033[1;35m\"\nFONT_COLOR_SUFFIX=\"\\033[0m\"\nINFO=\"[${GREEN_FONT_PREFIX}INFO${FONT_COLOR_SUFFIX}]\"\nERROR=\"[${RED_FONT_PREFIX}ERROR${FONT_COLOR_SUFFIX}]\"\nARIA2_CONF=${1:-aria2.conf}\nDOWNLOADER=\"curl -fsSL --connect-timeout 3 --max-time 3 --retry 2\"\nNL=$'\\n'\n\nDATE_TIME() {\n    date +\"%m/%d %H:%M:%S\"\n}\n\nGET_TRACKERS() {\n    \n    if [[ -z \"${CUSTOM_TRACKER_URL}\" ]]; then\n        echo && echo -e \"$(DATE_TIME) ${INFO} Get BT trackers...\"\n        TRACKER=$(\n            ${DOWNLOADER} https://trackerslist.com/all_aria2.txt ||\n                ${DOWNLOADER} https://cdn.statically.io/gh/XIU2/TrackersListCollection/master/all_aria2.txt ||\n                ${DOWNLOADER} https://trackers.p3terx.com/all_aria2.txt\n        )\n    else\n        echo && echo -e \"$(DATE_TIME) ${INFO} Get BT trackers from url(s):${CUSTOM_TRACKER_URL} ...\"\n        URLS=$(echo ${CUSTOM_TRACKER_URL} | tr \",\" \"$NL\")\n        for URL in $URLS; do\n            TRACKER+=\"$(${DOWNLOADER} ${URL} | tr \",\" \"\\n\")$NL\"\n        done\n        TRACKER=\"$(echo \"$TRACKER\" | awk NF | sort -u | sed 'H;1h;$!d;x;y/\\n/,/' )\"\n    fi\n\n    [[ -z \"${TRACKER}\" ]] && {\n        echo\n        echo -e \"$(DATE_TIME) ${ERROR} Unable to get trackers, network failure or invalid links.\" && exit 1\n    }\n}\n\nECHO_TRACKERS() {\n    echo -e \"\n--------------------[BitTorrent Trackers]--------------------\n${TRACKER}\n--------------------[BitTorrent Trackers]--------------------\n\"\n}\n\nADD_TRACKERS() {\n    echo -e \"$(DATE_TIME) ${INFO} Adding BT trackers to Aria2 configuration file ${LIGHT_PURPLE_FONT_PREFIX}${ARIA2_CONF}${FONT_COLOR_SUFFIX} ...\" && echo\n    if [ ! -f ${ARIA2_CONF} ]; then\n        echo -e \"$(DATE_TIME) ${ERROR} '${ARIA2_CONF}' does not exist.\"\n        exit 1\n    else\n        [ -z $(grep \"bt-tracker=\" ${ARIA2_CONF}) ] && echo \"bt-tracker=\" >>${ARIA2_CONF}\n        sed -i \"s@^\\(bt-tracker=\\).*@\\1${TRACKER}@\" ${ARIA2_CONF} && echo -e \"$(DATE_TIME) ${INFO} BT trackers successfully added to Aria2 configuration file !\"\n    fi\n}\n\nADD_TRACKERS_RPC() {\n    if [[ \"${RPC_SECRET}\" ]]; then\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.changeGlobalOption\",\"id\":\"P3TERX\",\"params\":[\"token:'${RPC_SECRET}'\",{\"bt-tracker\":\"'${TRACKER}'\"}]}'\n    else\n        RPC_PAYLOAD='{\"jsonrpc\":\"2.0\",\"method\":\"aria2.changeGlobalOption\",\"id\":\"P3TERX\",\"params\":[{\"bt-tracker\":\"'${TRACKER}'\"}]}'\n    fi\n    curl \"${RPC_ADDRESS}\" -fsSd \"${RPC_PAYLOAD}\" || curl \"https://${RPC_ADDRESS}\" -kfsSd \"${RPC_PAYLOAD}\"\n}\n\nADD_TRACKERS_RPC_STATUS() {\n    RPC_RESULT=$(ADD_TRACKERS_RPC)\n    [[ $(echo ${RPC_RESULT} | grep OK) ]] &&\n        echo -e \"$(DATE_TIME) ${INFO} BT trackers successfully added to Aria2 !\" ||\n        echo -e \"$(DATE_TIME) ${ERROR} Network failure or Aria2 RPC interface error!\"\n}\n\nADD_TRACKERS_REMOTE_RPC() {\n    echo -e \"$(DATE_TIME) ${INFO} Adding BT trackers to remote Aria2: ${LIGHT_PURPLE_FONT_PREFIX}${RPC_ADDRESS%/*}${FONT_COLOR_SUFFIX} ...\" && echo\n    ADD_TRACKERS_RPC_STATUS\n}\n\nADD_TRACKERS_LOCAL_RPC() {\n    if [ ! -f ${ARIA2_CONF} ]; then\n        echo -e \"$(DATE_TIME) ${ERROR} '${ARIA2_CONF}' does not exist.\"\n        exit 1\n    else\n        RPC_PORT=$(grep ^rpc-listen-port ${ARIA2_CONF} | cut -d= -f2-)\n        RPC_SECRET=$(grep ^rpc-secret ${ARIA2_CONF} | cut -d= -f2-)\n        [[ ${RPC_PORT} ]] || {\n            echo -e \"$(DATE_TIME) ${ERROR} Aria2 configuration file incomplete.\"\n            exit 1\n        }\n        RPC_ADDRESS=\"localhost:${RPC_PORT}/jsonrpc\"\n        echo -e \"$(DATE_TIME) ${INFO} Adding BT trackers to Aria2 ...\" && echo\n        ADD_TRACKERS_RPC_STATUS\n    fi\n}\n\n[ $(command -v curl) ] || {\n    echo -e \"$(DATE_TIME) ${ERROR} curl is not installed.\"\n    exit 1\n}\n\nif [ \"$1\" = \"cat\" ]; then\n    GET_TRACKERS\n    ECHO_TRACKERS\nelif [ \"$1\" = \"RPC\" ]; then\n    RPC_ADDRESS=\"$2/jsonrpc\"\n    RPC_SECRET=\"$3\"\n    GET_TRACKERS\n    ECHO_TRACKERS\n    ADD_TRACKERS_REMOTE_RPC\nelif [ \"$2\" = \"RPC\" ]; then\n    GET_TRACKERS\n    ECHO_TRACKERS\n    ADD_TRACKERS\n    echo\n    ADD_TRACKERS_LOCAL_RPC\nelse\n    GET_TRACKERS\n    ECHO_TRACKERS\n    ADD_TRACKERS\nfi\n\nexit 0\n"
        },
        {
          "name": "upload.sh",
          "type": "blob",
          "size": 4.54296875,
          "content": "#!/usr/bin/env bash\n#\n# https://github.com/P3TERX/aria2.conf\n# File name：upload.sh\n# Description: Use Rclone to upload files after Aria2 download is complete\n# Version: 3.1\n#\n# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\nCHECK_CORE_FILE() {\n    CORE_FILE=\"$(dirname $0)/core\"\n    if [[ -f \"${CORE_FILE}\" ]]; then\n        . \"${CORE_FILE}\"\n    else\n        echo && echo \"!!! core file does not exist !!!\"\n        exit 1\n    fi\n}\n\nCHECK_RCLONE() {\n    [[ $# -eq 0 ]] && {\n        echo && echo -e \"Checking RCLONE connection ...\"\n        rclone mkdir \"${DRIVE_NAME}:${DRIVE_DIR}/P3TERX.COM\"\n        if [[ $? -eq 0 ]]; then\n            rclone rmdir \"${DRIVE_NAME}:${DRIVE_DIR}/P3TERX.COM\"\n            echo\n            echo -e \"${LIGHT_GREEN_FONT_PREFIX}success${FONT_COLOR_SUFFIX}\"\n            exit 0\n        else\n            echo\n            echo -e \"${RED_FONT_PREFIX}failure${FONT_COLOR_SUFFIX}\"\n            exit 1\n        fi\n    }\n}\n\nTASK_INFO() {\n    echo -e \"\n-------------------------- [${YELLOW_FONT_PREFIX}Task Infomation${FONT_COLOR_SUFFIX}] --------------------------\n${LIGHT_PURPLE_FONT_PREFIX}Task GID:${FONT_COLOR_SUFFIX} ${TASK_GID}\n${LIGHT_PURPLE_FONT_PREFIX}Number of Files:${FONT_COLOR_SUFFIX} ${FILE_NUM}\n${LIGHT_PURPLE_FONT_PREFIX}First File Path:${FONT_COLOR_SUFFIX} ${FILE_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Task File Name:${FONT_COLOR_SUFFIX} ${TASK_FILE_NAME}\n${LIGHT_PURPLE_FONT_PREFIX}Task Path:${FONT_COLOR_SUFFIX} ${TASK_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Aria2 Download Directory:${FONT_COLOR_SUFFIX} ${ARIA2_DOWNLOAD_DIR}\n${LIGHT_PURPLE_FONT_PREFIX}Custom Download Directory:${FONT_COLOR_SUFFIX} ${DOWNLOAD_DIR}\n${LIGHT_PURPLE_FONT_PREFIX}Local Path:${FONT_COLOR_SUFFIX} ${LOCAL_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}Remote Path:${FONT_COLOR_SUFFIX} ${REMOTE_PATH}\n${LIGHT_PURPLE_FONT_PREFIX}.aria2 File Path:${FONT_COLOR_SUFFIX} ${DOT_ARIA2_FILE}\n-------------------------- [${YELLOW_FONT_PREFIX}Task Infomation${FONT_COLOR_SUFFIX}] --------------------------\n\"\n}\n\nOUTPUT_UPLOAD_LOG() {\n    LOG=\"${UPLOAD_LOG}\"\n    LOG_PATH=\"${UPLOAD_LOG_PATH}\"\n    OUTPUT_LOG\n}\n\nDEFINITION_PATH() {\n    LOCAL_PATH=\"${TASK_PATH}\"\n    if [[ -f \"${TASK_PATH}\" ]]; then\n        REMOTE_PATH=\"${DRIVE_NAME}:${DRIVE_DIR}${DEST_PATH_SUFFIX%/*}\"\n    else\n        REMOTE_PATH=\"${DRIVE_NAME}:${DRIVE_DIR}${DEST_PATH_SUFFIX}\"\n    fi\n}\n\nLOAD_RCLONE_ENV() {\n    RCLONE_ENV_FILE=\"${ARIA2_CONF_DIR}/rclone.env\"\n    [[ -f ${RCLONE_ENV_FILE} ]] && export $(grep -Ev \"^#|^$\" ${RCLONE_ENV_FILE} | xargs -0)\n}\n\nUPLOAD_FILE() {\n    echo -e \"$(DATE_TIME) ${INFO} Start upload files...\"\n    TASK_INFO\n    RETRY=0\n    RETRY_NUM=3\n    while [ ${RETRY} -le ${RETRY_NUM} ]; do\n        [ ${RETRY} != 0 ] && (\n            echo\n            echo -e \"$(DATE_TIME) ${ERROR} Upload failed! Retry ${RETRY}/${RETRY_NUM} ...\"\n            echo\n        )\n        rclone move -v \"${LOCAL_PATH}\" \"${REMOTE_PATH}\"\n        RCLONE_EXIT_CODE=$?\n        if [ ${RCLONE_EXIT_CODE} -eq 0 ]; then\n            UPLOAD_LOG=\"$(DATE_TIME) ${INFO} Upload done: ${LOCAL_PATH} -> ${REMOTE_PATH}\"\n            OUTPUT_UPLOAD_LOG\n            DELETE_EMPTY_DIR\n            break\n        else\n            RETRY=$((${RETRY} + 1))\n            [ ${RETRY} -gt ${RETRY_NUM} ] && (\n                echo\n                UPLOAD_LOG=\"$(DATE_TIME) ${ERROR} Upload failed: ${LOCAL_PATH}\"\n                OUTPUT_UPLOAD_LOG\n            )\n            sleep 3\n        fi\n    done\n}\n\nCHECK_CORE_FILE \"$@\"\nCHECK_SCRIPT_CONF\nCHECK_RCLONE \"$@\"\nCHECK_FILE_NUM\nGET_TASK_INFO\nGET_DOWNLOAD_DIR\nCONVERSION_PATH\nDEFINITION_PATH\nCLEAN_UP\nLOAD_RCLONE_ENV\nUPLOAD_FILE\nexit 0\n"
        }
      ]
    }
  ]
}