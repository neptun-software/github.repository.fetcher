{
  "metadata": {
    "timestamp": 1736568354458,
    "page": 280,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "redis/redis-doc",
      "stars": 2311,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01953125,
          "content": ".idea\ntmp\n.DS_Store\n"
        },
        {
          "name": ".spellcheck.yml",
          "type": "blob",
          "size": 0.26171875,
          "content": "files:\n  - '**/*.md'  \n  - '!resources/clients/index.md'\n  - '!resources/libraries/index.md'\n  - '!resources/modules/index.md'\n  - '!resources/tools/index.md'\n  - '!docs/reference/modules/modules-api-ref.md'\ndictionaries:\n  - wordlist\nno-suggestions: true\nquiet: true\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 0.65625,
          "content": "This documentation is Copyright (C) 2009-2014 Salvatore Sanfilippo and\nis released under the following license:\n\nCreative Commons Attribution-ShareAlike 4.0 International\n\nYou can find the full text of the license in the Creative Commons web site\nat the following URL:\n\nhttp://creativecommons.org/licenses/by-sa/4.0/\n\nThe following is a human-readable summary of (and not a substitute for)\nthe license:\n\nYou are free to:\n\n* Share — copy and redistribute the material in any medium or format\n* Adapt — remix, transform, and build upon the material\n\nfor any purpose, even commercially.\n\nThe licensor cannot revoke these freedoms as long as you follow the license\nterms.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 15.6220703125,
          "content": "Creative Commons Attribution-ShareAlike 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-ShareAlike 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. BY-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  k. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  l. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  m. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part; and\n\n            b. produce, reproduce, and Share Adapted Material.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.\n\n            c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-SA Compatible License.\n\n       2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n\n     including for purposes of Section 3(b); and\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4091796875,
          "content": "# Redis documentation\n\n> **Important**: This repository got replaced by the new [Redis docs](https://github.com/redis/docs) repository and will be archived soon.\n\n\n## License vs Trademarks\n\nOPEN SOURCE LICENSE VS. TRADEMARKS. The three-clause BSD license gives you the right to redistribute and use the software in source and binary forms, with or without modification, under certain conditions. However, open source licenses like the three-clause BSD license do not address trademarks. For further details please read the [Redis Trademark Policy](https://www.redis.com/legal/trademark-policy).\"\n\n## Clients\n\nAll clients are listed under language specific sub-folders of [clients](./clients)\n\nThe path follows the pattern: ``clients/{language}/github.com/{owner}/{repository}.json``.\nThe ``{language}`` component of the path is the path-safe representation\nof the full language name which is mapped in [languages.json](./languages.json).\n\nEach client's JSON object represents the details displayed on the [clients documentation page](https://redis.io/docs/clients).\n\nFor example [clients/python/github.com/redis](./clients/python/github.com/redis/redis-py.json):\n\n```\n{\n    \"name\": \"redis-py\",\n    \"description\": \"Mature and supported. Currently the way to go for Python.\",\n    \"recommended\": true\n}\n```\n\n## Commands\n\nRedis commands are described in the `commands.json` file that is auto generated\nfrom the Redis repo based on the JSON files in the commands folder.\nSee: https://github.com/redis/redis/tree/unstable/src/commands\nSee: https://github.com/redis/redis/tree/unstable/utils/generate-commands-json.py\n\nFor each command there's a Markdown file with a complete, human-readable\ndescription.\nWe process this Markdown to provide a better experience, so some things to take\ninto account:\n\n*   Inside text, all commands should be written in all caps, in between\n    backticks.\n    For example: `INCR`.\n\n*   You can use some magic keywords to name common elements in Redis.\n    For example: `@multi-bulk-reply`.\n    These keywords will get expanded and auto-linked to relevant parts of the\n    documentation.\n\nEach command will have a description and both RESP2 and RESP3 return values.\nRegarding the return values, these are contained in the files:\n\n* `resp2_replies.json`\n* `resp3_replies.json`\n\nEach file is a dictionary with a matching set of keys. Each key is an array of strings that,\nwhen processed, produce Markdown content. Here's an example:\n\n```\n{\n  ...\n  \"ACL CAT\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements representing ACL categories or commands in a given category.\",\n    \"* [Simple error reply](/docs/reference/protocol-spec#simple-errors): the command returns an error if an invalid category name is given.\"\n  ],\n  ...\n}\n```\n\n**Important**: when adding or editing return values, be sure to edit both files. Use the following\nlinks for the reply type. Note: do not use `@reply-type` specifiers; use only the Markdown link.\n\n```md\n@simple-string-reply: [Simple string reply](https://redis.io/docs/reference/protocol-spec#simple-strings)\n@simple-error-reply: [Simple error reply](https://redis.io/docs/reference/protocol-spec#simple-errors)\n@integer-reply: [Integer reply](https://redis.io/docs/reference/protocol-spec#integers)\n@bulk-string-reply: [Bulk string reply](https://redis.io/docs/reference/protocol-spec#bulk-strings)\n@array-reply: [Array reply](https://redis.io/docs/reference/protocol-spec#arrays)\n@nil-reply: [Nil reply](https://redis.io/docs/reference/protocol-spec#bulk-strings)\n@null-reply: [Null reply](https://redis.io/docs/reference/protocol-spec#nulls)\n@boolean-reply: [Boolean reply](https://redis.io/docs/reference/protocol-spec#booleans)\n@double-reply: [Double reply](https://redis.io/docs/reference/protocol-spec#doubles)\n@big-number-reply: [Big number reply](https://redis.io/docs/reference/protocol-spec#big-numbers)\n@bulk-error-reply: [Bulk error reply](https://redis.io/docs/reference/protocol-spec#bulk-errors)\n@verbatim-string-reply: [Verbatim string reply](https://redis.io/docs/reference/protocol-spec#verbatim-strings)\n@map-reply: [Map reply](https://redis.io/docs/reference/protocol-spec#maps)\n@set-reply: [Set reply](https://redis.io/docs/reference/protocol-spec#sets)\n@push-reply: [Push reply](https://redis.io/docs/reference/protocol-spec#pushes)\n```\n\n**Note:** RESP3 return schemas are not currently included in the `resp2/resp3_replies.json` files for Redis Stack modules.\n\n## Styling guidelines\n\nPlease use the following formatting rules (aiming for smaller diffs that are easier to review):\n\n* No need for manual lines wrapping at any specific length,\n  doing so usually means that adding a word creates a cascade effect and changes other lines.\n* Please avoid writing lines that are too long,\n  this makes the diff harder to review when only one word is changed. \n* Start every sentence on a new line.\n\n\n## Checking your work\n\nAfter making changes to the documentation, you can use the [spellchecker-cli package](https://www.npmjs.com/package/spellchecker-cli) to validate your spelling as well as some minor grammatical errors. You can install the spellchecker locally by running:\n\n```bash\nnpm install --global spellchecker-cli\n```\n\nYou can than validate your spelling by running the following\n\n```\nspellchecker --no-suggestions -f '**/*.md' -l en-US -q -d wordlist\n```\n\nAny exceptions you need for spelling can be added to the `wordlist` file.\n"
        },
        {
          "name": "_index.md",
          "type": "blob",
          "size": 0.5576171875,
          "content": "---\ntitle: Redis\nlinkTitle: Redis\n---\n\nRedis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams. Redis has built-in replication, Lua scripting, LRU eviction, transactions, and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster. [Learn more →](/topics/introduction)\n"
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "commands.json",
          "type": "blob",
          "size": 516.4248046875,
          "content": "{\n    \"ACL\": {\n        \"summary\": \"A container for Access List Control commands.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"ACL CAT\": {\n        \"summary\": \"Lists the ACL categories, or the commands inside a category.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1) since the categories and commands are a fixed set.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"category\",\n                \"type\": \"string\",\n                \"display_text\": \"category\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL DELUSER\": {\n        \"summary\": \"Deletes ACL users, and terminates their connections.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1) amortized time considering the typical user.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"username\",\n                \"type\": \"string\",\n                \"display_text\": \"username\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"ACL DRYRUN\": {\n        \"summary\": \"Simulates the execution of a command by a user, without executing the command.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1).\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"username\",\n                \"type\": \"string\",\n                \"display_text\": \"username\"\n            },\n            {\n                \"name\": \"command\",\n                \"type\": \"string\",\n                \"display_text\": \"command\"\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL GENPASS\": {\n        \"summary\": \"Generates a pseudorandom, secure password that can be used to identify ACL users.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"bits\",\n                \"type\": \"integer\",\n                \"display_text\": \"bits\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL GETUSER\": {\n        \"summary\": \"Lists the ACL rules of a user.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of password, command and pattern rules that the user has.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added Pub/Sub channel patterns.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added selectors and changed the format of key and channel patterns from a list to their rule representation.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"username\",\n                \"type\": \"string\",\n                \"display_text\": \"username\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL LIST\": {\n        \"summary\": \"Dumps the effective rules in ACL file format.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of configured users.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL LOAD\": {\n        \"summary\": \"Reloads the rules from the configured ACL file.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of configured users.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL LOG\": {\n        \"summary\": \"Lists recent security events generated due to ACL rules.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) with N being the number of entries shown.\",\n        \"history\": [\n            [\n                \"7.2.0\",\n                \"Added entry ID, timestamp created, and timestamp last updated.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"operation\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    },\n                    {\n                        \"name\": \"reset\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"reset\",\n                        \"token\": \"RESET\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL SAVE\": {\n        \"summary\": \"Saves the effective ACL rules in the configured ACL file.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of configured users.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"ACL SETUSER\": {\n        \"summary\": \"Creates and modifies an ACL user and its rules.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of rules provided.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added Pub/Sub channel patterns.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added selectors and key based permissions.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"username\",\n                \"type\": \"string\",\n                \"display_text\": \"username\"\n            },\n            {\n                \"name\": \"rule\",\n                \"type\": \"string\",\n                \"display_text\": \"rule\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"ACL USERS\": {\n        \"summary\": \"Lists all ACL users.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N). Where N is the number of configured users.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"ACL WHOAMI\": {\n        \"summary\": \"Returns the authenticated username of the current connection.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"APPEND\": {\n        \"summary\": \"Appends a string to the value of a key. Creates the key if it doesn't exist.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1). The amortized time complexity is O(1) assuming the appended value is small and the already present value is of any size, since the dynamic string library used by Redis will double the free space available on every reallocation.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"ASKING\": {\n        \"summary\": \"Signals that a cluster client is following an -ASK redirect.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"fast\"\n        ]\n    },\n    \"AUTH\": {\n        \"summary\": \"Authenticates the connection.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(N) where N is the number of passwords defined for the user\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"Added ACL style (username and password).\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"username\",\n                \"type\": \"string\",\n                \"display_text\": \"username\",\n                \"since\": \"6.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"password\",\n                \"type\": \"string\",\n                \"display_text\": \"password\"\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"no_auth\",\n            \"allow_busy\"\n        ]\n    },\n    \"BGREWRITEAOF\": {\n        \"summary\": \"Asynchronously rewrites the append-only file to disk.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\"\n        ]\n    },\n    \"BGSAVE\": {\n        \"summary\": \"Asynchronously saves the database(s) to disk.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"3.2.2\",\n                \"Added the `SCHEDULE` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"schedule\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"schedule\",\n                \"token\": \"SCHEDULE\",\n                \"since\": \"3.2.2\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\"\n        ]\n    },\n    \"BITCOUNT\": {\n        \"summary\": \"Counts the number of set bits (population counting) in a string.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(N)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `BYTE|BIT` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@bitmap\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"range\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"start\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"start\"\n                    },\n                    {\n                        \"name\": \"end\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"end\"\n                    },\n                    {\n                        \"name\": \"unit\",\n                        \"type\": \"oneof\",\n                        \"since\": \"7.0.0\",\n                        \"optional\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"byte\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"byte\",\n                                \"token\": \"BYTE\"\n                            },\n                            {\n                                \"name\": \"bit\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"bit\",\n                                \"token\": \"BIT\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"BITFIELD\": {\n        \"summary\": \"Performs arbitrary bitfield integer operations on strings.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(1) for each subcommand specified\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@bitmap\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"notes\": \"This command allows both access and modification of the key\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true,\n                \"variable_flags\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"operation\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"get-block\",\n                        \"type\": \"block\",\n                        \"token\": \"GET\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"encoding\",\n                                \"type\": \"string\",\n                                \"display_text\": \"encoding\"\n                            },\n                            {\n                                \"name\": \"offset\",\n                                \"type\": \"integer\",\n                                \"display_text\": \"offset\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"write\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"overflow-block\",\n                                \"type\": \"oneof\",\n                                \"token\": \"OVERFLOW\",\n                                \"optional\": true,\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"wrap\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"wrap\",\n                                        \"token\": \"WRAP\"\n                                    },\n                                    {\n                                        \"name\": \"sat\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"sat\",\n                                        \"token\": \"SAT\"\n                                    },\n                                    {\n                                        \"name\": \"fail\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"fail\",\n                                        \"token\": \"FAIL\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"write-operation\",\n                                \"type\": \"oneof\",\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"set-block\",\n                                        \"type\": \"block\",\n                                        \"token\": \"SET\",\n                                        \"arguments\": [\n                                            {\n                                                \"name\": \"encoding\",\n                                                \"type\": \"string\",\n                                                \"display_text\": \"encoding\"\n                                            },\n                                            {\n                                                \"name\": \"offset\",\n                                                \"type\": \"integer\",\n                                                \"display_text\": \"offset\"\n                                            },\n                                            {\n                                                \"name\": \"value\",\n                                                \"type\": \"integer\",\n                                                \"display_text\": \"value\"\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"name\": \"incrby-block\",\n                                        \"type\": \"block\",\n                                        \"token\": \"INCRBY\",\n                                        \"arguments\": [\n                                            {\n                                                \"name\": \"encoding\",\n                                                \"type\": \"string\",\n                                                \"display_text\": \"encoding\"\n                                            },\n                                            {\n                                                \"name\": \"offset\",\n                                                \"type\": \"integer\",\n                                                \"display_text\": \"offset\"\n                                            },\n                                            {\n                                                \"name\": \"increment\",\n                                                \"type\": \"integer\",\n                                                \"display_text\": \"increment\"\n                                            }\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"BITFIELD_RO\": {\n        \"summary\": \"Performs arbitrary read-only bitfield integer operations on strings.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(1) for each subcommand specified\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@bitmap\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"get-block\",\n                \"type\": \"block\",\n                \"token\": \"GET\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"multiple_token\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"encoding\",\n                        \"type\": \"string\",\n                        \"display_text\": \"encoding\"\n                    },\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"BITOP\": {\n        \"summary\": \"Performs bitwise operations on multiple strings, and stores the result.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(N)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@bitmap\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 3\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"operation\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"and\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"and\",\n                        \"token\": \"AND\"\n                    },\n                    {\n                        \"name\": \"or\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"or\",\n                        \"token\": \"OR\"\n                    },\n                    {\n                        \"name\": \"xor\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xor\",\n                        \"token\": \"XOR\"\n                    },\n                    {\n                        \"name\": \"not\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"not\",\n                        \"token\": \"NOT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"destkey\",\n                \"type\": \"key\",\n                \"display_text\": \"destkey\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"BITPOS\": {\n        \"summary\": \"Finds the first set (1) or clear (0) bit in a string.\",\n        \"since\": \"2.8.7\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(N)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `BYTE|BIT` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@bitmap\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"bit\",\n                \"type\": \"integer\",\n                \"display_text\": \"bit\"\n            },\n            {\n                \"name\": \"range\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"start\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"start\"\n                    },\n                    {\n                        \"name\": \"end-unit-block\",\n                        \"type\": \"block\",\n                        \"optional\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"end\",\n                                \"type\": \"integer\",\n                                \"display_text\": \"end\"\n                            },\n                            {\n                                \"name\": \"unit\",\n                                \"type\": \"oneof\",\n                                \"since\": \"7.0.0\",\n                                \"optional\": true,\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"byte\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"byte\",\n                                        \"token\": \"BYTE\"\n                                    },\n                                    {\n                                        \"name\": \"bit\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"bit\",\n                                        \"token\": \"BIT\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"BLMOVE\": {\n        \"summary\": \"Pops an element from a list, pushes it to another list and returns it. Blocks until an element is available otherwise. Deletes the list if the last element was moved.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": 6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"wherefrom\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"whereto\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"blocking\"\n        ]\n    },\n    \"BLMPOP\": {\n        \"summary\": \"Pops the first element from one of multiple lists. Blocks until an element is available otherwise. Deletes the list if the last element was popped.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N+M) where N is the number of provided keys and M is the number of elements returned.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"where\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\",\n            \"movablekeys\"\n        ]\n    },\n    \"BLPOP\": {\n        \"summary\": \"Removes and returns the first element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of provided keys.\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"`timeout` is interpreted as a double instead of an integer.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -2,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\"\n        ]\n    },\n    \"BRPOP\": {\n        \"summary\": \"Removes and returns the last element in a list. Blocks until an element is available otherwise. Deletes the list if the last element was popped.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of provided keys.\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"`timeout` is interpreted as a double instead of an integer.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -2,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\"\n        ]\n    },\n    \"BRPOPLPUSH\": {\n        \"summary\": \"Pops an element from a list, pushes it to another list and returns it. Block until an element is available otherwise. Deletes the list if the last element was popped.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`BLMOVE` with the `RIGHT` and `LEFT` arguments\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"`timeout` is interpreted as a double instead of an integer.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"blocking\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"BZMPOP\": {\n        \"summary\": \"Removes and returns a member by score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(K) + O(M*log(N)) where K is the number of provided keys, N being the number of elements in the sorted set, and M being the number of elements popped.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"where\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"min\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"min\",\n                        \"token\": \"MIN\"\n                    },\n                    {\n                        \"name\": \"max\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"max\",\n                        \"token\": \"MAX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\",\n            \"movablekeys\"\n        ]\n    },\n    \"BZPOPMAX\": {\n        \"summary\": \"Removes and returns the member with the highest score from one or more sorted sets. Blocks until a member available otherwise.  Deletes the sorted set if the last element was popped.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) with N being the number of elements in the sorted set.\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"`timeout` is interpreted as a double instead of an integer.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\",\n            \"@blocking\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -2,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\",\n            \"fast\"\n        ]\n    },\n    \"BZPOPMIN\": {\n        \"summary\": \"Removes and returns the member with the lowest score from one or more sorted sets. Blocks until a member is available otherwise. Deletes the sorted set if the last element was popped.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) with N being the number of elements in the sorted set.\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"`timeout` is interpreted as a double instead of an integer.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\",\n            \"@blocking\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -2,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"double\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\",\n            \"fast\"\n        ]\n    },\n    \"CLIENT\": {\n        \"summary\": \"A container for client connection commands.\",\n        \"since\": \"2.4.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"CLIENT CACHING\": {\n        \"summary\": \"Instructs the server whether to track the keys in the next request.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"mode\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"yes\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"yes\",\n                        \"token\": \"YES\"\n                    },\n                    {\n                        \"name\": \"no\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"no\",\n                        \"token\": \"NO\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT GETNAME\": {\n        \"summary\": \"Returns the name of the connection.\",\n        \"since\": \"2.6.9\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT GETREDIR\": {\n        \"summary\": \"Returns the client ID to which the connection's tracking notifications are redirected.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT ID\": {\n        \"summary\": \"Returns the unique client ID of the connection.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT INFO\": {\n        \"summary\": \"Returns information about the connection.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLIENT KILL\": {\n        \"summary\": \"Terminates open connections.\",\n        \"since\": \"2.4.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(N) where N is the number of client connections\",\n        \"history\": [\n            [\n                \"2.8.12\",\n                \"Added new filter format.\"\n            ],\n            [\n                \"2.8.12\",\n                \"`ID` option.\"\n            ],\n            [\n                \"3.2.0\",\n                \"Added `master` type in for `TYPE` option.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Replaced `slave` `TYPE` with `replica`. `slave` still supported for backward compatibility.\"\n            ],\n            [\n                \"6.2.0\",\n                \"`LADDR` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"filter\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"old-format\",\n                        \"type\": \"string\",\n                        \"display_text\": \"ip:port\",\n                        \"deprecated_since\": \"2.8.12\"\n                    },\n                    {\n                        \"name\": \"new-format\",\n                        \"type\": \"oneof\",\n                        \"multiple\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"client-id\",\n                                \"type\": \"integer\",\n                                \"display_text\": \"client-id\",\n                                \"token\": \"ID\",\n                                \"since\": \"2.8.12\",\n                                \"optional\": true\n                            },\n                            {\n                                \"name\": \"client-type\",\n                                \"type\": \"oneof\",\n                                \"token\": \"TYPE\",\n                                \"since\": \"2.8.12\",\n                                \"optional\": true,\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"normal\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"normal\",\n                                        \"token\": \"NORMAL\"\n                                    },\n                                    {\n                                        \"name\": \"master\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"master\",\n                                        \"token\": \"MASTER\",\n                                        \"since\": \"3.2.0\"\n                                    },\n                                    {\n                                        \"name\": \"slave\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"slave\",\n                                        \"token\": \"SLAVE\"\n                                    },\n                                    {\n                                        \"name\": \"replica\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"replica\",\n                                        \"token\": \"REPLICA\",\n                                        \"since\": \"5.0.0\"\n                                    },\n                                    {\n                                        \"name\": \"pubsub\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"pubsub\",\n                                        \"token\": \"PUBSUB\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"name\": \"username\",\n                                \"type\": \"string\",\n                                \"display_text\": \"username\",\n                                \"token\": \"USER\",\n                                \"optional\": true\n                            },\n                            {\n                                \"name\": \"addr\",\n                                \"type\": \"string\",\n                                \"display_text\": \"ip:port\",\n                                \"token\": \"ADDR\",\n                                \"optional\": true\n                            },\n                            {\n                                \"name\": \"laddr\",\n                                \"type\": \"string\",\n                                \"display_text\": \"ip:port\",\n                                \"token\": \"LADDR\",\n                                \"since\": \"6.2.0\",\n                                \"optional\": true\n                            },\n                            {\n                                \"name\": \"skipme\",\n                                \"type\": \"oneof\",\n                                \"token\": \"SKIPME\",\n                                \"optional\": true,\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"yes\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"yes\",\n                                        \"token\": \"YES\"\n                                    },\n                                    {\n                                        \"name\": \"no\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"no\",\n                                        \"token\": \"NO\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT LIST\": {\n        \"summary\": \"Lists open connections.\",\n        \"since\": \"2.4.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(N) where N is the number of client connections\",\n        \"history\": [\n            [\n                \"2.8.12\",\n                \"Added unique client `id` field.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Added optional `TYPE` filter.\"\n            ],\n            [\n                \"6.0.0\",\n                \"Added `user` field.\"\n            ],\n            [\n                \"6.2.0\",\n                \"Added `argv-mem`, `tot-mem`, `laddr` and `redir` fields and the optional `ID` filter.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added `resp`, `multi-mem`, `rbs` and `rbp` fields.\"\n            ],\n            [\n                \"7.0.3\",\n                \"Added `ssub` field.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"client-type\",\n                \"type\": \"oneof\",\n                \"token\": \"TYPE\",\n                \"since\": \"5.0.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"normal\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"normal\",\n                        \"token\": \"NORMAL\"\n                    },\n                    {\n                        \"name\": \"master\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"master\",\n                        \"token\": \"MASTER\"\n                    },\n                    {\n                        \"name\": \"replica\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"replica\",\n                        \"token\": \"REPLICA\"\n                    },\n                    {\n                        \"name\": \"pubsub\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"pubsub\",\n                        \"token\": \"PUBSUB\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"client-id\",\n                \"type\": \"integer\",\n                \"display_text\": \"client-id\",\n                \"token\": \"ID\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLIENT NO-EVICT\": {\n        \"summary\": \"Sets the client eviction mode of the connection.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"enabled\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"on\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"on\",\n                        \"token\": \"ON\"\n                    },\n                    {\n                        \"name\": \"off\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"off\",\n                        \"token\": \"OFF\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT NO-TOUCH\": {\n        \"summary\": \"Controls whether commands sent by the client affect the LRU/LFU of accessed keys.\",\n        \"since\": \"7.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"enabled\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"on\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"on\",\n                        \"token\": \"ON\"\n                    },\n                    {\n                        \"name\": \"off\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"off\",\n                        \"token\": \"OFF\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT PAUSE\": {\n        \"summary\": \"Suspends commands processing.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"`CLIENT PAUSE WRITE` mode added along with the `mode` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"timeout\",\n                \"type\": \"integer\",\n                \"display_text\": \"timeout\"\n            },\n            {\n                \"name\": \"mode\",\n                \"type\": \"oneof\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"write\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"write\",\n                        \"token\": \"WRITE\"\n                    },\n                    {\n                        \"name\": \"all\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"all\",\n                        \"token\": \"ALL\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT REPLY\": {\n        \"summary\": \"Instructs the server whether to reply to commands.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"action\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"on\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"on\",\n                        \"token\": \"ON\"\n                    },\n                    {\n                        \"name\": \"off\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"off\",\n                        \"token\": \"OFF\"\n                    },\n                    {\n                        \"name\": \"skip\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"skip\",\n                        \"token\": \"SKIP\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT SETINFO\": {\n        \"summary\": \"Sets information specific to the client or connection.\",\n        \"since\": \"7.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 4,\n        \"arguments\": [\n            {\n                \"name\": \"attr\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"libname\",\n                        \"type\": \"string\",\n                        \"display_text\": \"libname\",\n                        \"token\": \"LIB-NAME\"\n                    },\n                    {\n                        \"name\": \"libver\",\n                        \"type\": \"string\",\n                        \"display_text\": \"libver\",\n                        \"token\": \"LIB-VER\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"CLIENT SETNAME\": {\n        \"summary\": \"Sets the connection name.\",\n        \"since\": \"2.6.9\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"connection-name\",\n                \"type\": \"string\",\n                \"display_text\": \"connection-name\"\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"CLIENT TRACKING\": {\n        \"summary\": \"Controls server-assisted client-side caching for the connection.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1). Some options may introduce additional complexity.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"status\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"on\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"on\",\n                        \"token\": \"ON\"\n                    },\n                    {\n                        \"name\": \"off\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"off\",\n                        \"token\": \"OFF\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"client-id\",\n                \"type\": \"integer\",\n                \"display_text\": \"client-id\",\n                \"token\": \"REDIRECT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"prefix\",\n                \"type\": \"string\",\n                \"display_text\": \"prefix\",\n                \"token\": \"PREFIX\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"multiple_token\": true\n            },\n            {\n                \"name\": \"bcast\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"bcast\",\n                \"token\": \"BCAST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"optin\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"optin\",\n                \"token\": \"OPTIN\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"optout\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"optout\",\n                \"token\": \"OPTOUT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"noloop\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"noloop\",\n                \"token\": \"NOLOOP\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT TRACKINGINFO\": {\n        \"summary\": \"Returns information about server-assisted client-side caching for the connection.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT UNBLOCK\": {\n        \"summary\": \"Unblocks a client blocked by a blocking command from a different connection.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(log N) where N is the number of client connections\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"client-id\",\n                \"type\": \"integer\",\n                \"display_text\": \"client-id\"\n            },\n            {\n                \"name\": \"unblock-type\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"timeout\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"timeout\",\n                        \"token\": \"TIMEOUT\"\n                    },\n                    {\n                        \"name\": \"error\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"error\",\n                        \"token\": \"ERROR\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLIENT UNPAUSE\": {\n        \"summary\": \"Resumes processing commands from paused clients.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(N) Where N is the number of paused clients\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLUSTER\": {\n        \"summary\": \"A container for Redis Cluster commands.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"CLUSTER ADDSLOTS\": {\n        \"summary\": \"Assigns new hash slots to a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of hash slot arguments\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"slot\",\n                \"type\": \"integer\",\n                \"display_text\": \"slot\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER ADDSLOTSRANGE\": {\n        \"summary\": \"Assigns new hash slot ranges to a node.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of the slots between the start slot and end slot arguments.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"range\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"start-slot\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"start-slot\"\n                    },\n                    {\n                        \"name\": \"end-slot\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"end-slot\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER BUMPEPOCH\": {\n        \"summary\": \"Advances the cluster config epoch.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER COUNT-FAILURE-REPORTS\": {\n        \"summary\": \"Returns the number of active failure reports active for a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of failure reports\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"node-id\",\n                \"type\": \"string\",\n                \"display_text\": \"node-id\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER COUNTKEYSINSLOT\": {\n        \"summary\": \"Returns the number of keys in a hash slot.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"slot\",\n                \"type\": \"integer\",\n                \"display_text\": \"slot\"\n            }\n        ],\n        \"command_flags\": [\n            \"stale\"\n        ]\n    },\n    \"CLUSTER DELSLOTS\": {\n        \"summary\": \"Sets hash slots as unbound for a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of hash slot arguments\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"slot\",\n                \"type\": \"integer\",\n                \"display_text\": \"slot\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER DELSLOTSRANGE\": {\n        \"summary\": \"Sets hash slot ranges as unbound for a node.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of the slots between the start slot and end slot arguments.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"range\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"start-slot\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"start-slot\"\n                    },\n                    {\n                        \"name\": \"end-slot\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"end-slot\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER FAILOVER\": {\n        \"summary\": \"Forces a replica to perform a manual failover of its master.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"options\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"force\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"force\",\n                        \"token\": \"FORCE\"\n                    },\n                    {\n                        \"name\": \"takeover\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"takeover\",\n                        \"token\": \"TAKEOVER\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER FLUSHSLOTS\": {\n        \"summary\": \"Deletes all slots information from a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER FORGET\": {\n        \"summary\": \"Removes a node from the nodes table.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"node-id\",\n                \"type\": \"string\",\n                \"display_text\": \"node-id\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER GETKEYSINSLOT\": {\n        \"summary\": \"Returns the key names in a hash slot.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of requested keys\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"arguments\": [\n            {\n                \"name\": \"slot\",\n                \"type\": \"integer\",\n                \"display_text\": \"slot\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\"\n            }\n        ],\n        \"command_flags\": [\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CLUSTER INFO\": {\n        \"summary\": \"Returns information about the state of a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER KEYSLOT\": {\n        \"summary\": \"Returns the hash slot for a key.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of bytes in the key\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"string\",\n                \"display_text\": \"key\"\n            }\n        ],\n        \"command_flags\": [\n            \"stale\"\n        ]\n    },\n    \"CLUSTER LINKS\": {\n        \"summary\": \"Returns a list of all TCP links to and from peer nodes.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of Cluster nodes\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER MEET\": {\n        \"summary\": \"Forces a node to handshake with another node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Added the optional `cluster_bus_port` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"ip\",\n                \"type\": \"string\",\n                \"display_text\": \"ip\"\n            },\n            {\n                \"name\": \"port\",\n                \"type\": \"integer\",\n                \"display_text\": \"port\"\n            },\n            {\n                \"name\": \"cluster-bus-port\",\n                \"type\": \"integer\",\n                \"display_text\": \"cluster-bus-port\",\n                \"since\": \"4.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER MYID\": {\n        \"summary\": \"Returns the ID of a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"stale\"\n        ]\n    },\n    \"CLUSTER MYSHARDID\": {\n        \"summary\": \"Returns the shard ID of a node.\",\n        \"since\": \"7.2.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER NODES\": {\n        \"summary\": \"Returns the cluster configuration for a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of Cluster nodes\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER REPLICAS\": {\n        \"summary\": \"Lists the replica nodes of a master node.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of replicas.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"node-id\",\n                \"type\": \"string\",\n                \"display_text\": \"node-id\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER REPLICATE\": {\n        \"summary\": \"Configure a node as replica of a master node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"node-id\",\n                \"type\": \"string\",\n                \"display_text\": \"node-id\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER RESET\": {\n        \"summary\": \"Resets a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of known nodes. The command may execute a FLUSHALL as a side effect.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"reset-type\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"hard\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"hard\",\n                        \"token\": \"HARD\"\n                    },\n                    {\n                        \"name\": \"soft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"soft\",\n                        \"token\": \"SOFT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"stale\"\n        ]\n    },\n    \"CLUSTER SAVECONFIG\": {\n        \"summary\": \"Forces a node to save the cluster configuration to disk.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER SET-CONFIG-EPOCH\": {\n        \"summary\": \"Sets the configuration epoch for a new node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"config-epoch\",\n                \"type\": \"integer\",\n                \"display_text\": \"config-epoch\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER SETSLOT\": {\n        \"summary\": \"Binds a hash slot to a node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"slot\",\n                \"type\": \"integer\",\n                \"display_text\": \"slot\"\n            },\n            {\n                \"name\": \"subcommand\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"importing\",\n                        \"type\": \"string\",\n                        \"display_text\": \"node-id\",\n                        \"token\": \"IMPORTING\"\n                    },\n                    {\n                        \"name\": \"migrating\",\n                        \"type\": \"string\",\n                        \"display_text\": \"node-id\",\n                        \"token\": \"MIGRATING\"\n                    },\n                    {\n                        \"name\": \"node\",\n                        \"type\": \"string\",\n                        \"display_text\": \"node-id\",\n                        \"token\": \"NODE\"\n                    },\n                    {\n                        \"name\": \"stable\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"stable\",\n                        \"token\": \"STABLE\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"CLUSTER SHARDS\": {\n        \"summary\": \"Returns the mapping of cluster slots to shards.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of cluster nodes\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER SLAVES\": {\n        \"summary\": \"Lists the replica nodes of a master node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the number of replicas.\",\n        \"deprecated_since\": \"5.0.0\",\n        \"replaced_by\": \"`CLUSTER REPLICAS`\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"node-id\",\n                \"type\": \"string\",\n                \"display_text\": \"node-id\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"stale\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"CLUSTER SLOTS\": {\n        \"summary\": \"Returns the mapping of cluster slots to nodes.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(N) where N is the total number of Cluster nodes\",\n        \"deprecated_since\": \"7.0.0\",\n        \"replaced_by\": \"`CLUSTER SHARDS`\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Added node IDs.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added additional networking metadata field.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"COMMAND\": {\n        \"summary\": \"Returns detailed information about all commands.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the total number of Redis commands\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -1,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"COMMAND COUNT\": {\n        \"summary\": \"Returns a count of commands.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"COMMAND DOCS\": {\n        \"summary\": \"Returns documentary information about one, multiple or all commands.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of commands to look up\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"command-name\",\n                \"type\": \"string\",\n                \"display_text\": \"command-name\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"COMMAND GETKEYS\": {\n        \"summary\": \"Extracts the key names from an arbitrary command.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of arguments to the command\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"command\",\n                \"type\": \"string\",\n                \"display_text\": \"command\"\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"COMMAND GETKEYSANDFLAGS\": {\n        \"summary\": \"Extracts the key names and access flags for an arbitrary command.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of arguments to the command\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"command\",\n                \"type\": \"string\",\n                \"display_text\": \"command\"\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"COMMAND HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"COMMAND INFO\": {\n        \"summary\": \"Returns information about one, multiple or all commands.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of commands to look up\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Allowed to be called with no argument to get info on all commands.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"command-name\",\n                \"type\": \"string\",\n                \"display_text\": \"command-name\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"COMMAND LIST\": {\n        \"summary\": \"Returns a list of command names.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the total number of Redis commands\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"filterby\",\n                \"type\": \"oneof\",\n                \"token\": \"FILTERBY\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"module-name\",\n                        \"type\": \"string\",\n                        \"display_text\": \"module-name\",\n                        \"token\": \"MODULE\"\n                    },\n                    {\n                        \"name\": \"category\",\n                        \"type\": \"string\",\n                        \"display_text\": \"category\",\n                        \"token\": \"ACLCAT\"\n                    },\n                    {\n                        \"name\": \"pattern\",\n                        \"type\": \"pattern\",\n                        \"display_text\": \"pattern\",\n                        \"token\": \"PATTERN\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"CONFIG\": {\n        \"summary\": \"A container for server configuration commands.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"CONFIG GET\": {\n        \"summary\": \"Returns the effective values of configuration parameters.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) when N is the number of configuration parameters provided\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the ability to pass multiple pattern parameters in one call\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"parameter\",\n                \"type\": \"string\",\n                \"display_text\": \"parameter\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CONFIG HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"CONFIG RESETSTAT\": {\n        \"summary\": \"Resets the server's statistics.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"CONFIG REWRITE\": {\n        \"summary\": \"Persists the effective configuration to file.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"CONFIG SET\": {\n        \"summary\": \"Sets configuration parameters in-flight.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) when N is the number of configuration parameters provided\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the ability to set multiple parameters in one call.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"arguments\": [\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"parameter\",\n                        \"type\": \"string\",\n                        \"display_text\": \"parameter\"\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"COPY\": {\n        \"summary\": \"Copies the value of a key to a new key.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N) worst case for collections, where N is the number of nested items. O(1) for string values.\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"destination-db\",\n                \"type\": \"integer\",\n                \"display_text\": \"destination-db\",\n                \"token\": \"DB\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"replace\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"replace\",\n                \"token\": \"REPLACE\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"DBSIZE\": {\n        \"summary\": \"Returns the number of keys in the database.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"DEBUG\": {\n        \"summary\": \"A container for debugging commands.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"doc_flags\": [\n            \"syscmd\"\n        ]\n    },\n    \"DECR\": {\n        \"summary\": \"Decrements the integer value of a key by one. Uses 0 as initial value if the key doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"DECRBY\": {\n        \"summary\": \"Decrements a number from the integer value of a key. Uses 0 as initial value if the key doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"decrement\",\n                \"type\": \"integer\",\n                \"display_text\": \"decrement\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"DEL\": {\n        \"summary\": \"Deletes one or more keys.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N) where N is the number of keys that will be removed. When a key to remove holds a value other than a string, the individual complexity for this key is O(M) where M is the number of elements in the list, set, sorted set or hash. Removing a single key that holds a string value is O(1).\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RM\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"DISCARD\": {\n        \"summary\": \"Discards a transaction.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"transactions\",\n        \"complexity\": \"O(N), when N is the number of queued commands\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@transaction\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"allow_busy\"\n        ]\n    },\n    \"DUMP\": {\n        \"summary\": \"Returns a serialized representation of the value stored at a key.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1) to access the key and additional O(N*M) to serialize it, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1).\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"ECHO\": {\n        \"summary\": \"Returns the given string.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"arguments\": [\n            {\n                \"name\": \"message\",\n                \"type\": \"string\",\n                \"display_text\": \"message\"\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"EVAL\": {\n        \"summary\": \"Executes a server-side Lua script.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the script that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"notes\": \"We cannot tell how the keys will be used so we assume the worst, RW and UPDATE\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"script\",\n                \"type\": \"string\",\n                \"display_text\": \"script\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"EVALSHA\": {\n        \"summary\": \"Executes a server-side Lua script by SHA1 digest.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the script that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"sha1\",\n                \"type\": \"string\",\n                \"display_text\": \"sha1\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"EVALSHA_RO\": {\n        \"summary\": \"Executes a read-only server-side Lua script by SHA1 digest.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the script that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"sha1\",\n                \"type\": \"string\",\n                \"display_text\": \"sha1\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"EVAL_RO\": {\n        \"summary\": \"Executes a read-only server-side Lua script.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the script that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"notes\": \"We cannot tell how the keys will be used so we assume the worst, RO and ACCESS\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"script\",\n                \"type\": \"string\",\n                \"display_text\": \"script\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"EXEC\": {\n        \"summary\": \"Executes all commands in a transaction.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"transactions\",\n        \"complexity\": \"Depends on commands in the transaction\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@transaction\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"skip_slowlog\"\n        ]\n    },\n    \"EXISTS\": {\n        \"summary\": \"Determines whether one or more keys exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N) where N is the number of keys to check.\",\n        \"history\": [\n            [\n                \"3.0.3\",\n                \"Accepts multiple `key` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"EXPIRE\": {\n        \"summary\": \"Sets the expiration time of a key in seconds.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added options: `NX`, `XX`, `GT` and `LT`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"seconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"seconds\"\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"7.0.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    },\n                    {\n                        \"name\": \"gt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"gt\",\n                        \"token\": \"GT\"\n                    },\n                    {\n                        \"name\": \"lt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"lt\",\n                        \"token\": \"LT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"EXPIREAT\": {\n        \"summary\": \"Sets the expiration time of a key to a Unix timestamp.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added options: `NX`, `XX`, `GT` and `LT`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"unix-time-seconds\",\n                \"type\": \"unix-time\",\n                \"display_text\": \"unix-time-seconds\"\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"7.0.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    },\n                    {\n                        \"name\": \"gt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"gt\",\n                        \"token\": \"GT\"\n                    },\n                    {\n                        \"name\": \"lt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"lt\",\n                        \"token\": \"LT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"EXPIRETIME\": {\n        \"summary\": \"Returns the expiration time of a key as a Unix timestamp.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"FAILOVER\": {\n        \"summary\": \"Starts a coordinated failover from a server to one of its replicas.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"target\",\n                \"type\": \"block\",\n                \"token\": \"TO\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"host\",\n                        \"type\": \"string\",\n                        \"display_text\": \"host\"\n                    },\n                    {\n                        \"name\": \"port\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"port\"\n                    },\n                    {\n                        \"name\": \"force\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"force\",\n                        \"token\": \"FORCE\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"abort\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"abort\",\n                \"token\": \"ABORT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"milliseconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"milliseconds\",\n                \"token\": \"TIMEOUT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"stale\"\n        ]\n    },\n    \"FCALL\": {\n        \"summary\": \"Invokes a function.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the function that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"notes\": \"We cannot tell how the keys will be used so we assume the worst, RW and UPDATE\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"function\",\n                \"type\": \"string\",\n                \"display_text\": \"function\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"FCALL_RO\": {\n        \"summary\": \"Invokes a read-only function.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on the function that is executed.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"notes\": \"We cannot tell how the keys will be used so we assume the worst, RO and ACCESS\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"function\",\n                \"type\": \"string\",\n                \"display_text\": \"function\"\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"noscript\",\n            \"stale\",\n            \"skip_monitor\",\n            \"no_mandatory_keys\",\n            \"movablekeys\"\n        ]\n    },\n    \"FLUSHALL\": {\n        \"summary\": \"Removes all keys from all databases.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the total number of keys in all databases\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Added the `ASYNC` flushing mode modifier.\"\n            ],\n            [\n                \"6.2.0\",\n                \"Added the `SYNC` flushing mode modifier.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"flush-type\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"async\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"async\",\n                        \"token\": \"ASYNC\",\n                        \"since\": \"4.0.0\"\n                    },\n                    {\n                        \"name\": \"sync\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sync\",\n                        \"token\": \"SYNC\",\n                        \"since\": \"6.2.0\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FLUSHDB\": {\n        \"summary\": \"Remove all keys from the current database.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of keys in the selected database\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Added the `ASYNC` flushing mode modifier.\"\n            ],\n            [\n                \"6.2.0\",\n                \"Added the `SYNC` flushing mode modifier.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"flush-type\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"async\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"async\",\n                        \"token\": \"ASYNC\",\n                        \"since\": \"4.0.0\"\n                    },\n                    {\n                        \"name\": \"sync\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sync\",\n                        \"token\": \"SYNC\",\n                        \"since\": \"6.2.0\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FUNCTION\": {\n        \"summary\": \"A container for function commands.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"FUNCTION DELETE\": {\n        \"summary\": \"Deletes a library and its functions.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"library-name\",\n                \"type\": \"string\",\n                \"display_text\": \"library-name\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FUNCTION DUMP\": {\n        \"summary\": \"Dumps all libraries into a serialized binary payload.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) where N is the number of functions\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\"\n        ]\n    },\n    \"FUNCTION FLUSH\": {\n        \"summary\": \"Deletes all libraries and functions.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) where N is the number of functions deleted\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"flush-type\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"async\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"async\",\n                        \"token\": \"ASYNC\"\n                    },\n                    {\n                        \"name\": \"sync\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sync\",\n                        \"token\": \"SYNC\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FUNCTION HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"FUNCTION KILL\": {\n        \"summary\": \"Terminates a function during execution.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"allow_busy\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:one_succeeded\"\n        ]\n    },\n    \"FUNCTION LIST\": {\n        \"summary\": \"Returns information about all libraries.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) where N is the number of functions\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"library-name-pattern\",\n                \"type\": \"string\",\n                \"display_text\": \"library-name-pattern\",\n                \"token\": \"LIBRARYNAME\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withcode\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcode\",\n                \"token\": \"WITHCODE\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"FUNCTION LOAD\": {\n        \"summary\": \"Creates a library.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1) (considering compilation time is redundant)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"replace\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"replace\",\n                \"token\": \"REPLACE\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"function-code\",\n                \"type\": \"string\",\n                \"display_text\": \"function-code\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FUNCTION RESTORE\": {\n        \"summary\": \"Restores all libraries from a payload.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) where N is the number of functions on the payload\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"serialized-value\",\n                \"type\": \"string\",\n                \"display_text\": \"serialized-value\"\n            },\n            {\n                \"name\": \"policy\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"flush\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"flush\",\n                        \"token\": \"FLUSH\"\n                    },\n                    {\n                        \"name\": \"append\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"append\",\n                        \"token\": \"APPEND\"\n                    },\n                    {\n                        \"name\": \"replace\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"replace\",\n                        \"token\": \"REPLACE\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"FUNCTION STATS\": {\n        \"summary\": \"Returns information about a function during execution.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"allow_busy\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_shards\",\n            \"response_policy:special\"\n        ]\n    },\n    \"GEOADD\": {\n        \"summary\": \"Adds one or more members to a geospatial index. The key is created if it doesn't exist.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(log(N)) for each item added, where N is the number of elements in the sorted set.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `CH`, `NX` and `XX` options.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"change\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"change\",\n                \"token\": \"CH\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"longitude\",\n                        \"type\": \"double\",\n                        \"display_text\": \"longitude\"\n                    },\n                    {\n                        \"name\": \"latitude\",\n                        \"type\": \"double\",\n                        \"display_text\": \"latitude\"\n                    },\n                    {\n                        \"name\": \"member\",\n                        \"type\": \"string\",\n                        \"display_text\": \"member\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"GEODIST\": {\n        \"summary\": \"Returns the distance between two members of a geospatial index.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member1\",\n                \"type\": \"string\",\n                \"display_text\": \"member1\"\n            },\n            {\n                \"name\": \"member2\",\n                \"type\": \"string\",\n                \"display_text\": \"member2\"\n            },\n            {\n                \"name\": \"unit\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"m\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"m\",\n                        \"token\": \"M\"\n                    },\n                    {\n                        \"name\": \"km\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"km\",\n                        \"token\": \"KM\"\n                    },\n                    {\n                        \"name\": \"ft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"ft\",\n                        \"token\": \"FT\"\n                    },\n                    {\n                        \"name\": \"mi\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"mi\",\n                        \"token\": \"MI\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"GEOHASH\": {\n        \"summary\": \"Returns members from a geospatial index as geohash strings.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(1) for each member requested.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"GEOPOS\": {\n        \"summary\": \"Returns the longitude and latitude of members from a geospatial index.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(1) for each member requested.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"GEORADIUS\": {\n        \"summary\": \"Queries a geospatial index for members within a distance from a coordinate, optionally stores the result.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`GEOSEARCH` and `GEOSEARCHSTORE` with the `BYRADIUS` argument\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `ANY` option for `COUNT`.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added support for uppercase unit names.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STORE\",\n                        \"startfrom\": 6\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STOREDIST\",\n                        \"startfrom\": 6\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"longitude\",\n                \"type\": \"double\",\n                \"display_text\": \"longitude\"\n            },\n            {\n                \"name\": \"latitude\",\n                \"type\": \"double\",\n                \"display_text\": \"latitude\"\n            },\n            {\n                \"name\": \"radius\",\n                \"type\": \"double\",\n                \"display_text\": \"radius\"\n            },\n            {\n                \"name\": \"unit\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"m\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"m\",\n                        \"token\": \"M\"\n                    },\n                    {\n                        \"name\": \"km\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"km\",\n                        \"token\": \"KM\"\n                    },\n                    {\n                        \"name\": \"ft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"ft\",\n                        \"token\": \"FT\"\n                    },\n                    {\n                        \"name\": \"mi\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"mi\",\n                        \"token\": \"MI\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withcoord\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcoord\",\n                \"token\": \"WITHCOORD\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withdist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withdist\",\n                \"token\": \"WITHDIST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withhash\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withhash\",\n                \"token\": \"WITHHASH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"since\": \"6.2.0\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"store\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"storekey\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 1,\n                        \"token\": \"STORE\"\n                    },\n                    {\n                        \"name\": \"storedistkey\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 2,\n                        \"token\": \"STOREDIST\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"movablekeys\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"GEORADIUSBYMEMBER\": {\n        \"summary\": \"Queries a geospatial index for members within a distance from a member, optionally stores the result.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`GEOSEARCH` and `GEOSEARCHSTORE` with the `BYRADIUS` and `FROMMEMBER` arguments\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added support for uppercase unit names.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STORE\",\n                        \"startfrom\": 5\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STOREDIST\",\n                        \"startfrom\": 5\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            },\n            {\n                \"name\": \"radius\",\n                \"type\": \"double\",\n                \"display_text\": \"radius\"\n            },\n            {\n                \"name\": \"unit\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"m\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"m\",\n                        \"token\": \"M\"\n                    },\n                    {\n                        \"name\": \"km\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"km\",\n                        \"token\": \"KM\"\n                    },\n                    {\n                        \"name\": \"ft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"ft\",\n                        \"token\": \"FT\"\n                    },\n                    {\n                        \"name\": \"mi\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"mi\",\n                        \"token\": \"MI\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withcoord\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcoord\",\n                \"token\": \"WITHCOORD\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withdist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withdist\",\n                \"token\": \"WITHDIST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withhash\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withhash\",\n                \"token\": \"WITHHASH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"store\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"storekey\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 1,\n                        \"token\": \"STORE\"\n                    },\n                    {\n                        \"name\": \"storedistkey\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 2,\n                        \"token\": \"STOREDIST\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"movablekeys\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"GEORADIUSBYMEMBER_RO\": {\n        \"summary\": \"Returns members from a geospatial index that are within a distance from a member.\",\n        \"since\": \"3.2.10\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`GEOSEARCH` with the `BYRADIUS` and `FROMMEMBER` arguments\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            },\n            {\n                \"name\": \"radius\",\n                \"type\": \"double\",\n                \"display_text\": \"radius\"\n            },\n            {\n                \"name\": \"unit\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"m\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"m\",\n                        \"token\": \"M\"\n                    },\n                    {\n                        \"name\": \"km\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"km\",\n                        \"token\": \"KM\"\n                    },\n                    {\n                        \"name\": \"ft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"ft\",\n                        \"token\": \"FT\"\n                    },\n                    {\n                        \"name\": \"mi\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"mi\",\n                        \"token\": \"MI\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withcoord\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcoord\",\n                \"token\": \"WITHCOORD\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withdist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withdist\",\n                \"token\": \"WITHDIST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withhash\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withhash\",\n                \"token\": \"WITHHASH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"GEORADIUS_RO\": {\n        \"summary\": \"Returns members from a geospatial index that are within a distance from a coordinate.\",\n        \"since\": \"3.2.10\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`GEOSEARCH` with the `BYRADIUS` argument\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `ANY` option for `COUNT`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"longitude\",\n                \"type\": \"double\",\n                \"display_text\": \"longitude\"\n            },\n            {\n                \"name\": \"latitude\",\n                \"type\": \"double\",\n                \"display_text\": \"latitude\"\n            },\n            {\n                \"name\": \"radius\",\n                \"type\": \"double\",\n                \"display_text\": \"radius\"\n            },\n            {\n                \"name\": \"unit\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"m\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"m\",\n                        \"token\": \"M\"\n                    },\n                    {\n                        \"name\": \"km\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"km\",\n                        \"token\": \"KM\"\n                    },\n                    {\n                        \"name\": \"ft\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"ft\",\n                        \"token\": \"FT\"\n                    },\n                    {\n                        \"name\": \"mi\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"mi\",\n                        \"token\": \"MI\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withcoord\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcoord\",\n                \"token\": \"WITHCOORD\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withdist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withdist\",\n                \"token\": \"WITHDIST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withhash\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withhash\",\n                \"token\": \"WITHHASH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"since\": \"6.2.0\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"GEOSEARCH\": {\n        \"summary\": \"Queries a geospatial index for members inside an area of a box or a circle.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements in the grid-aligned bounding box area around the shape provided as the filter and M is the number of items inside the shape\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added support for uppercase unit names.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -7,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"from\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"member\",\n                        \"type\": \"string\",\n                        \"display_text\": \"member\",\n                        \"token\": \"FROMMEMBER\"\n                    },\n                    {\n                        \"name\": \"fromlonlat\",\n                        \"type\": \"block\",\n                        \"token\": \"FROMLONLAT\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"longitude\",\n                                \"type\": \"double\",\n                                \"display_text\": \"longitude\"\n                            },\n                            {\n                                \"name\": \"latitude\",\n                                \"type\": \"double\",\n                                \"display_text\": \"latitude\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"by\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"circle\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"radius\",\n                                \"type\": \"double\",\n                                \"display_text\": \"radius\",\n                                \"token\": \"BYRADIUS\"\n                            },\n                            {\n                                \"name\": \"unit\",\n                                \"type\": \"oneof\",\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"m\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"m\",\n                                        \"token\": \"M\"\n                                    },\n                                    {\n                                        \"name\": \"km\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"km\",\n                                        \"token\": \"KM\"\n                                    },\n                                    {\n                                        \"name\": \"ft\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"ft\",\n                                        \"token\": \"FT\"\n                                    },\n                                    {\n                                        \"name\": \"mi\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"mi\",\n                                        \"token\": \"MI\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"box\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"width\",\n                                \"type\": \"double\",\n                                \"display_text\": \"width\",\n                                \"token\": \"BYBOX\"\n                            },\n                            {\n                                \"name\": \"height\",\n                                \"type\": \"double\",\n                                \"display_text\": \"height\"\n                            },\n                            {\n                                \"name\": \"unit\",\n                                \"type\": \"oneof\",\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"m\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"m\",\n                                        \"token\": \"M\"\n                                    },\n                                    {\n                                        \"name\": \"km\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"km\",\n                                        \"token\": \"KM\"\n                                    },\n                                    {\n                                        \"name\": \"ft\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"ft\",\n                                        \"token\": \"FT\"\n                                    },\n                                    {\n                                        \"name\": \"mi\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"mi\",\n                                        \"token\": \"MI\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"withcoord\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withcoord\",\n                \"token\": \"WITHCOORD\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withdist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withdist\",\n                \"token\": \"WITHDIST\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withhash\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withhash\",\n                \"token\": \"WITHHASH\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"GEOSEARCHSTORE\": {\n        \"summary\": \"Queries a geospatial index for members inside an area of a box or a circle, optionally stores the result.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"geo\",\n        \"complexity\": \"O(N+log(M)) where N is the number of elements in the grid-aligned bounding box area around the shape provided as the filter and M is the number of items inside the shape\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added support for uppercase unit names.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@geo\",\n            \"@slow\"\n        ],\n        \"arity\": -8,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"from\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"member\",\n                        \"type\": \"string\",\n                        \"display_text\": \"member\",\n                        \"token\": \"FROMMEMBER\"\n                    },\n                    {\n                        \"name\": \"fromlonlat\",\n                        \"type\": \"block\",\n                        \"token\": \"FROMLONLAT\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"longitude\",\n                                \"type\": \"double\",\n                                \"display_text\": \"longitude\"\n                            },\n                            {\n                                \"name\": \"latitude\",\n                                \"type\": \"double\",\n                                \"display_text\": \"latitude\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"by\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"circle\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"radius\",\n                                \"type\": \"double\",\n                                \"display_text\": \"radius\",\n                                \"token\": \"BYRADIUS\"\n                            },\n                            {\n                                \"name\": \"unit\",\n                                \"type\": \"oneof\",\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"m\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"m\",\n                                        \"token\": \"M\"\n                                    },\n                                    {\n                                        \"name\": \"km\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"km\",\n                                        \"token\": \"KM\"\n                                    },\n                                    {\n                                        \"name\": \"ft\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"ft\",\n                                        \"token\": \"FT\"\n                                    },\n                                    {\n                                        \"name\": \"mi\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"mi\",\n                                        \"token\": \"MI\"\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"box\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"width\",\n                                \"type\": \"double\",\n                                \"display_text\": \"width\",\n                                \"token\": \"BYBOX\"\n                            },\n                            {\n                                \"name\": \"height\",\n                                \"type\": \"double\",\n                                \"display_text\": \"height\"\n                            },\n                            {\n                                \"name\": \"unit\",\n                                \"type\": \"oneof\",\n                                \"arguments\": [\n                                    {\n                                        \"name\": \"m\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"m\",\n                                        \"token\": \"M\"\n                                    },\n                                    {\n                                        \"name\": \"km\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"km\",\n                                        \"token\": \"KM\"\n                                    },\n                                    {\n                                        \"name\": \"ft\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"ft\",\n                                        \"token\": \"FT\"\n                                    },\n                                    {\n                                        \"name\": \"mi\",\n                                        \"type\": \"pure-token\",\n                                        \"display_text\": \"mi\",\n                                        \"token\": \"MI\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\"\n                    },\n                    {\n                        \"name\": \"any\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"any\",\n                        \"token\": \"ANY\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"storedist\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"storedist\",\n                \"token\": \"STOREDIST\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"GET\": {\n        \"summary\": \"Returns the string value of a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"GETBIT\": {\n        \"summary\": \"Returns a bit value by offset.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@bitmap\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"offset\",\n                \"type\": \"integer\",\n                \"display_text\": \"offset\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"GETDEL\": {\n        \"summary\": \"Returns the string value of a key after deleting the key.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"GETEX\": {\n        \"summary\": \"Returns the string value of a key after setting its expiration time.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"notes\": \"RW and UPDATE because it changes the TTL\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"expiration\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"seconds\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"seconds\",\n                        \"token\": \"EX\"\n                    },\n                    {\n                        \"name\": \"milliseconds\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"milliseconds\",\n                        \"token\": \"PX\"\n                    },\n                    {\n                        \"name\": \"unix-time-seconds\",\n                        \"type\": \"unix-time\",\n                        \"display_text\": \"unix-time-seconds\",\n                        \"token\": \"EXAT\"\n                    },\n                    {\n                        \"name\": \"unix-time-milliseconds\",\n                        \"type\": \"unix-time\",\n                        \"display_text\": \"unix-time-milliseconds\",\n                        \"token\": \"PXAT\"\n                    },\n                    {\n                        \"name\": \"persist\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"persist\",\n                        \"token\": \"PERSIST\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"GETRANGE\": {\n        \"summary\": \"Returns a substring of the string stored at a key.\",\n        \"since\": \"2.4.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N) where N is the length of the returned string. The complexity is ultimately determined by the returned length, but because creating a substring from an existing string is very cheap, it can be considered O(1) for small strings.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"integer\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"end\",\n                \"type\": \"integer\",\n                \"display_text\": \"end\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"GETSET\": {\n        \"summary\": \"Returns the previous string value of a key after setting it to a new value.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`SET` with the `!GET` argument\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"HDEL\": {\n        \"summary\": \"Deletes one or more fields and their values from a hash. Deletes the hash if no fields remain.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the number of fields to be removed.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple `field` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"HELLO\": {\n        \"summary\": \"Handshakes with the Redis server.\",\n        \"since\": \"6.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"`protover` made optional; when called without arguments the command reports the current connection's context.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"arguments\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"protover\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"protover\"\n                    },\n                    {\n                        \"name\": \"auth\",\n                        \"type\": \"block\",\n                        \"token\": \"AUTH\",\n                        \"optional\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"username\",\n                                \"type\": \"string\",\n                                \"display_text\": \"username\"\n                            },\n                            {\n                                \"name\": \"password\",\n                                \"type\": \"string\",\n                                \"display_text\": \"password\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"clientname\",\n                        \"type\": \"string\",\n                        \"display_text\": \"clientname\",\n                        \"token\": \"SETNAME\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"no_auth\",\n            \"allow_busy\"\n        ]\n    },\n    \"HEXISTS\": {\n        \"summary\": \"Determines whether a field exists in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"HGET\": {\n        \"summary\": \"Returns the value of a field in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"HGETALL\": {\n        \"summary\": \"Returns all fields and values in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the size of the hash.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"HINCRBY\": {\n        \"summary\": \"Increments the integer value of a field in a hash by a number. Uses 0 as initial value if the field doesn't exist.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"integer\",\n                \"display_text\": \"increment\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"HINCRBYFLOAT\": {\n        \"summary\": \"Increments the floating point value of a field by a number. Uses 0 as initial value if the field doesn't exist.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"double\",\n                \"display_text\": \"increment\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"HKEYS\": {\n        \"summary\": \"Returns all fields in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the size of the hash.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"HLEN\": {\n        \"summary\": \"Returns the number of fields in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"HMGET\": {\n        \"summary\": \"Returns the values of all fields in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the number of fields being requested.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"HMSET\": {\n        \"summary\": \"Sets the values of multiple fields.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the number of fields being set.\",\n        \"deprecated_since\": \"4.0.0\",\n        \"replaced_by\": \"`HSET` with multiple field-value pairs\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"field\",\n                        \"type\": \"string\",\n                        \"display_text\": \"field\"\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"HRANDFIELD\": {\n        \"summary\": \"Returns one or more random fields from a hash.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the number of fields returned\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"options\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    },\n                    {\n                        \"name\": \"withvalues\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"withvalues\",\n                        \"token\": \"WITHVALUES\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"HSCAN\": {\n        \"summary\": \"Iterates over fields and values of a hash.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"cursor\",\n                \"type\": \"integer\",\n                \"display_text\": \"cursor\"\n            },\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"token\": \"MATCH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"HSET\": {\n        \"summary\": \"Creates or modifies the value of a field in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1) for each field/value pair added, so O(N) to add N field/value pairs when the command is called with multiple field/value pairs.\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Accepts multiple `field` and `value` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"field\",\n                        \"type\": \"string\",\n                        \"display_text\": \"field\"\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"HSETNX\": {\n        \"summary\": \"Sets the value of a field in a hash only when the field doesn't exist.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"HSTRLEN\": {\n        \"summary\": \"Returns the length of the value of a field.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"field\",\n                \"type\": \"string\",\n                \"display_text\": \"field\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"HVALS\": {\n        \"summary\": \"Returns all values in a hash.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"hash\",\n        \"complexity\": \"O(N) where N is the size of the hash.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hash\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"INCR\": {\n        \"summary\": \"Increments the integer value of a key by one. Uses 0 as initial value if the key doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"INCRBY\": {\n        \"summary\": \"Increments the integer value of a key by a number. Uses 0 as initial value if the key doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"integer\",\n                \"display_text\": \"increment\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"INCRBYFLOAT\": {\n        \"summary\": \"Increment the floating point value of a key by a number. Uses 0 as initial value if the key doesn't exist.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"double\",\n                \"display_text\": \"increment\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"INFO\": {\n        \"summary\": \"Returns information and statistics about the server.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added support for taking multiple section arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"section\",\n                \"type\": \"string\",\n                \"display_text\": \"section\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_shards\",\n            \"response_policy:special\"\n        ]\n    },\n    \"KEYS\": {\n        \"summary\": \"Returns all key names that match a pattern.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N) with N being the number of keys in the database, under the assumption that the key names in the database and the given pattern have limited length.\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"arguments\": [\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"LASTSAVE\": {\n        \"summary\": \"Returns the Unix timestamp of the last successful save to disk.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@fast\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"LATENCY\": {\n        \"summary\": \"A container for latency diagnostics commands.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"LATENCY DOCTOR\": {\n        \"summary\": \"Returns a human-readable latency analysis report.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_nodes\",\n            \"response_policy:special\"\n        ]\n    },\n    \"LATENCY GRAPH\": {\n        \"summary\": \"Returns a latency graph for an event.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"event\",\n                \"type\": \"string\",\n                \"display_text\": \"event\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_nodes\",\n            \"response_policy:special\"\n        ]\n    },\n    \"LATENCY HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"LATENCY HISTOGRAM\": {\n        \"summary\": \"Returns the cumulative distribution of latencies of a subset or all commands.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of commands with latency information being retrieved.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"command\",\n                \"type\": \"string\",\n                \"display_text\": \"command\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_nodes\",\n            \"response_policy:special\"\n        ]\n    },\n    \"LATENCY HISTORY\": {\n        \"summary\": \"Returns timestamp-latency samples for an event.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"event\",\n                \"type\": \"string\",\n                \"display_text\": \"event\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_nodes\",\n            \"response_policy:special\"\n        ]\n    },\n    \"LATENCY LATEST\": {\n        \"summary\": \"Returns the latest latency samples for all events.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_nodes\",\n            \"response_policy:special\"\n        ]\n    },\n    \"LATENCY RESET\": {\n        \"summary\": \"Resets the latency data for one or more events.\",\n        \"since\": \"2.8.13\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"event\",\n                \"type\": \"string\",\n                \"display_text\": \"event\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"LCS\": {\n        \"summary\": \"Finds the longest common substring.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N*M) where N and M are the lengths of s1 and s2, respectively\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key1\",\n                \"type\": \"key\",\n                \"display_text\": \"key1\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"key2\",\n                \"type\": \"key\",\n                \"display_text\": \"key2\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"len\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"len\",\n                \"token\": \"LEN\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"idx\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"idx\",\n                \"token\": \"IDX\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"min-match-len\",\n                \"type\": \"integer\",\n                \"display_text\": \"min-match-len\",\n                \"token\": \"MINMATCHLEN\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"withmatchlen\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withmatchlen\",\n                \"token\": \"WITHMATCHLEN\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"LINDEX\": {\n        \"summary\": \"Returns an element from a list by its index.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements to traverse to get to the element at index. This makes asking for the first or the last element of the list O(1).\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"index\",\n                \"type\": \"integer\",\n                \"display_text\": \"index\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"LINSERT\": {\n        \"summary\": \"Inserts an element before or after another element in a list.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements to traverse before seeing the value pivot. This means that inserting somewhere on the left end on the list (head) can be considered O(1) and inserting somewhere on the right end (tail) is O(N).\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"where\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"before\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"before\",\n                        \"token\": \"BEFORE\"\n                    },\n                    {\n                        \"name\": \"after\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"after\",\n                        \"token\": \"AFTER\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"pivot\",\n                \"type\": \"string\",\n                \"display_text\": \"pivot\"\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"LLEN\": {\n        \"summary\": \"Returns the length of a list.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"LMOVE\": {\n        \"summary\": \"Returns an element after popping it from one list and pushing it to another. Deletes the list if the last element was moved.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"wherefrom\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"whereto\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"LMPOP\": {\n        \"summary\": \"Returns multiple elements from a list after removing them. Deletes the list if the last element was popped.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N+M) where N is the number of provided keys and M is the number of elements returned.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"where\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"left\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"left\",\n                        \"token\": \"LEFT\"\n                    },\n                    {\n                        \"name\": \"right\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"right\",\n                        \"token\": \"RIGHT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"movablekeys\"\n        ]\n    },\n    \"LOLWUT\": {\n        \"summary\": \"Displays computer art and the Redis version\",\n        \"since\": \"5.0.0\",\n        \"group\": \"server\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"version\",\n                \"type\": \"integer\",\n                \"display_text\": \"version\",\n                \"token\": \"VERSION\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"LPOP\": {\n        \"summary\": \"Returns the first elements in a list after removing it. Deletes the list if the last element was popped.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements returned\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `count` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"LPOS\": {\n        \"summary\": \"Returns the index of matching elements in a list.\",\n        \"since\": \"6.0.6\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements in the list, for the average case. When searching for elements near the head or the tail of the list, or when the MAXLEN option is provided, the command may run in constant time.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\"\n            },\n            {\n                \"name\": \"rank\",\n                \"type\": \"integer\",\n                \"display_text\": \"rank\",\n                \"token\": \"RANK\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"num-matches\",\n                \"type\": \"integer\",\n                \"display_text\": \"num-matches\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"len\",\n                \"type\": \"integer\",\n                \"display_text\": \"len\",\n                \"token\": \"MAXLEN\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"LPUSH\": {\n        \"summary\": \"Prepends one or more elements to a list. Creates the key if it doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple `element` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"LPUSHX\": {\n        \"summary\": \"Prepends one or more elements to a list only when the list exists.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Accepts multiple `element` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"LRANGE\": {\n        \"summary\": \"Returns a range of elements from a list.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(S+N) where S is the distance of start offset from HEAD for small lists, from nearest end (HEAD or TAIL) for large lists; and N is the number of elements in the specified range.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"integer\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"stop\",\n                \"type\": \"integer\",\n                \"display_text\": \"stop\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"LREM\": {\n        \"summary\": \"Removes elements from a list. Deletes the list if the last element was removed.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N+M) where N is the length of the list and M is the number of elements removed.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\"\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"LSET\": {\n        \"summary\": \"Sets the value of an element in a list by its index.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the length of the list. Setting either the first or the last element of the list is O(1).\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"index\",\n                \"type\": \"integer\",\n                \"display_text\": \"index\"\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"LTRIM\": {\n        \"summary\": \"Removes elements from both ends a list. Deletes the list if all elements were trimmed.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements to be removed by the operation.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"integer\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"stop\",\n                \"type\": \"integer\",\n                \"display_text\": \"stop\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"MEMORY\": {\n        \"summary\": \"A container for memory diagnostics commands.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"MEMORY DOCTOR\": {\n        \"summary\": \"Outputs a memory problems report.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_shards\",\n            \"response_policy:special\"\n        ]\n    },\n    \"MEMORY HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"MEMORY MALLOC-STATS\": {\n        \"summary\": \"Returns the allocator statistics.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on how much memory is allocated, could be slow\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_shards\",\n            \"response_policy:special\"\n        ]\n    },\n    \"MEMORY PURGE\": {\n        \"summary\": \"Asks the allocator to release memory.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on how much memory is allocated, could be slow\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"MEMORY STATS\": {\n        \"summary\": \"Returns details about memory usage.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:all_shards\",\n            \"response_policy:special\"\n        ]\n    },\n    \"MEMORY USAGE\": {\n        \"summary\": \"Estimates the memory usage of a key.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of samples.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"SAMPLES\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"MGET\": {\n        \"summary\": \"Atomically returns the string values of one or more keys.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N) where N is the number of keys to retrieve.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\"\n        ]\n    },\n    \"MIGRATE\": {\n        \"summary\": \"Atomically transfers a key from one Redis instance to another.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"This command actually executes a DUMP+DEL in the source instance, and a RESTORE in the target instance. See the pages of these commands for time complexity. Also an O(N) data transfer between the two instances is performed.\",\n        \"history\": [\n            [\n                \"3.0.0\",\n                \"Added the `COPY` and `REPLACE` options.\"\n            ],\n            [\n                \"3.0.6\",\n                \"Added the `KEYS` option.\"\n            ],\n            [\n                \"4.0.7\",\n                \"Added the `AUTH` option.\"\n            ],\n            [\n                \"6.0.0\",\n                \"Added the `AUTH2` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 3\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"KEYS\",\n                        \"startfrom\": -2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true,\n                \"incomplete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"host\",\n                \"type\": \"string\",\n                \"display_text\": \"host\"\n            },\n            {\n                \"name\": \"port\",\n                \"type\": \"integer\",\n                \"display_text\": \"port\"\n            },\n            {\n                \"name\": \"key-selector\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"key\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 0\n                    },\n                    {\n                        \"name\": \"empty-string\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"empty-string\",\n                        \"token\": \"\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"destination-db\",\n                \"type\": \"integer\",\n                \"display_text\": \"destination-db\"\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"integer\",\n                \"display_text\": \"timeout\"\n            },\n            {\n                \"name\": \"copy\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"copy\",\n                \"token\": \"COPY\",\n                \"since\": \"3.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"replace\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"replace\",\n                \"token\": \"REPLACE\",\n                \"since\": \"3.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"authentication\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"auth\",\n                        \"type\": \"string\",\n                        \"display_text\": \"password\",\n                        \"token\": \"AUTH\",\n                        \"since\": \"4.0.7\"\n                    },\n                    {\n                        \"name\": \"auth2\",\n                        \"type\": \"block\",\n                        \"token\": \"AUTH2\",\n                        \"since\": \"6.0.0\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"username\",\n                                \"type\": \"string\",\n                                \"display_text\": \"username\"\n                            },\n                            {\n                                \"name\": \"password\",\n                                \"type\": \"string\",\n                                \"display_text\": \"password\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"name\": \"keys\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"token\": \"KEYS\",\n                \"since\": \"3.0.6\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"movablekeys\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"MODULE\": {\n        \"summary\": \"A container for module commands.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"MODULE HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"MODULE LIST\": {\n        \"summary\": \"Returns all loaded modules.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of loaded modules.\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"MODULE LOAD\": {\n        \"summary\": \"Loads a module.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"path\",\n                \"type\": \"string\",\n                \"display_text\": \"path\"\n            },\n            {\n                \"name\": \"arg\",\n                \"type\": \"string\",\n                \"display_text\": \"arg\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\"\n        ]\n    },\n    \"MODULE LOADEX\": {\n        \"summary\": \"Loads a module using extended parameters.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"path\",\n                \"type\": \"string\",\n                \"display_text\": \"path\"\n            },\n            {\n                \"name\": \"configs\",\n                \"type\": \"block\",\n                \"token\": \"CONFIG\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"multiple_token\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"name\",\n                        \"type\": \"string\",\n                        \"display_text\": \"name\"\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"args\",\n                \"type\": \"string\",\n                \"display_text\": \"args\",\n                \"token\": \"ARGS\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\"\n        ]\n    },\n    \"MODULE UNLOAD\": {\n        \"summary\": \"Unloads a module.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"name\",\n                \"type\": \"string\",\n                \"display_text\": \"name\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\"\n        ]\n    },\n    \"MONITOR\": {\n        \"summary\": \"Listens for all requests received by the server in real-time.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"MOVE\": {\n        \"summary\": \"Moves a key to another database.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"db\",\n                \"type\": \"integer\",\n                \"display_text\": \"db\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"MSET\": {\n        \"summary\": \"Atomically creates or modifies the string values of one or more keys.\",\n        \"since\": \"1.0.1\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N) where N is the number of keys to set.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 2,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"key\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 0\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"MSETNX\": {\n        \"summary\": \"Atomically modifies the string values of one or more keys only when all keys don't exist.\",\n        \"since\": \"1.0.1\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N) where N is the number of keys to set.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 2,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"key\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 0\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"MULTI\": {\n        \"summary\": \"Starts a transaction.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"transactions\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@transaction\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"allow_busy\"\n        ]\n    },\n    \"OBJECT\": {\n        \"summary\": \"A container for object introspection commands.\",\n        \"since\": \"2.2.3\",\n        \"group\": \"generic\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"OBJECT ENCODING\": {\n        \"summary\": \"Returns the internal encoding of a Redis object.\",\n        \"since\": \"2.2.3\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"OBJECT FREQ\": {\n        \"summary\": \"Returns the logarithmic access frequency counter of a Redis object.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"OBJECT HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"OBJECT IDLETIME\": {\n        \"summary\": \"Returns the time since the last access to a Redis object.\",\n        \"since\": \"2.2.3\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"OBJECT REFCOUNT\": {\n        \"summary\": \"Returns the reference count of a value of a key.\",\n        \"since\": \"2.2.3\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"PERSIST\": {\n        \"summary\": \"Removes the expiration time of a key.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"PEXPIRE\": {\n        \"summary\": \"Sets the expiration time of a key in milliseconds.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added options: `NX`, `XX`, `GT` and `LT`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"milliseconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"milliseconds\"\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"7.0.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    },\n                    {\n                        \"name\": \"gt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"gt\",\n                        \"token\": \"GT\"\n                    },\n                    {\n                        \"name\": \"lt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"lt\",\n                        \"token\": \"LT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"PEXPIREAT\": {\n        \"summary\": \"Sets the expiration time of a key to a Unix milliseconds timestamp.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added options: `NX`, `XX`, `GT` and `LT`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"unix-time-milliseconds\",\n                \"type\": \"unix-time\",\n                \"display_text\": \"unix-time-milliseconds\"\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"7.0.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    },\n                    {\n                        \"name\": \"gt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"gt\",\n                        \"token\": \"GT\"\n                    },\n                    {\n                        \"name\": \"lt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"lt\",\n                        \"token\": \"LT\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"PEXPIRETIME\": {\n        \"summary\": \"Returns the expiration time of a key as a Unix milliseconds timestamp.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"PFADD\": {\n        \"summary\": \"Adds elements to a HyperLogLog key. Creates the key if it doesn't exist.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"hyperloglog\",\n        \"complexity\": \"O(1) to add every element.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hyperloglog\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"PFCOUNT\": {\n        \"summary\": \"Returns the approximated cardinality of the set(s) observed by the HyperLogLog key(s).\",\n        \"since\": \"2.8.9\",\n        \"group\": \"hyperloglog\",\n        \"complexity\": \"O(1) with a very small average constant time when called with a single key. O(N) with N being the number of keys, and much bigger constant times, when called with multiple keys.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@hyperloglog\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"notes\": \"RW because it may change the internal representation of the key, and propagate to replicas\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"PFDEBUG\": {\n        \"summary\": \"Internal commands for debugging HyperLogLog values.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"hyperloglog\",\n        \"complexity\": \"N/A\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hyperloglog\",\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"subcommand\",\n                \"type\": \"string\",\n                \"display_text\": \"subcommand\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"admin\"\n        ],\n        \"doc_flags\": [\n            \"syscmd\"\n        ]\n    },\n    \"PFMERGE\": {\n        \"summary\": \"Merges one or more HyperLogLog values into a single key.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"hyperloglog\",\n        \"complexity\": \"O(N) to merge N HyperLogLogs, but with high constant times.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@hyperloglog\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"insert\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destkey\",\n                \"type\": \"key\",\n                \"display_text\": \"destkey\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"sourcekey\",\n                \"type\": \"key\",\n                \"display_text\": \"sourcekey\",\n                \"key_spec_index\": 1,\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"PFSELFTEST\": {\n        \"summary\": \"An internal command for testing HyperLogLog values.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"hyperloglog\",\n        \"complexity\": \"N/A\",\n        \"acl_categories\": [\n            \"@hyperloglog\",\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"admin\"\n        ],\n        \"doc_flags\": [\n            \"syscmd\"\n        ]\n    },\n    \"PING\": {\n        \"summary\": \"Returns the server's liveliness response.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"message\",\n                \"type\": \"string\",\n                \"display_text\": \"message\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"PSETEX\": {\n        \"summary\": \"Sets both string value and expiration time in milliseconds of a key. The key is created if it doesn't exist.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"2.6.12\",\n        \"replaced_by\": \"`SET` with the `PX` argument\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"milliseconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"milliseconds\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"PSUBSCRIBE\": {\n        \"summary\": \"Listens for messages published to channels that match one or more patterns.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of patterns to subscribe to.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PSYNC\": {\n        \"summary\": \"An internal command used in replication.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"server\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"replicationid\",\n                \"type\": \"string\",\n                \"display_text\": \"replicationid\"\n            },\n            {\n                \"name\": \"offset\",\n                \"type\": \"integer\",\n                \"display_text\": \"offset\"\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\",\n            \"no_multi\"\n        ]\n    },\n    \"PTTL\": {\n        \"summary\": \"Returns the expiration time in milliseconds of a key.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"2.8.0\",\n                \"Added the -2 reply.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"PUBLISH\": {\n        \"summary\": \"Posts a message to a channel.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total number of subscribed patterns (by any client).\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"channel\",\n                \"type\": \"string\",\n                \"display_text\": \"channel\"\n            },\n            {\n                \"name\": \"message\",\n                \"type\": \"string\",\n                \"display_text\": \"message\"\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"PUBSUB\": {\n        \"summary\": \"A container for Pub/Sub commands.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"PUBSUB CHANNELS\": {\n        \"summary\": \"Returns the active channels.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of active channels, and assuming constant time pattern matching (relatively short channels and patterns)\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUBSUB HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUBSUB NUMPAT\": {\n        \"summary\": \"Returns a count of unique pattern subscriptions.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUBSUB NUMSUB\": {\n        \"summary\": \"Returns a count of subscribers to channels.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) for the NUMSUB subcommand, where N is the number of requested channels\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"channel\",\n                \"type\": \"string\",\n                \"display_text\": \"channel\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUBSUB SHARDCHANNELS\": {\n        \"summary\": \"Returns the active shard channels.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of active shard channels, and assuming constant time pattern matching (relatively short shard channels).\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUBSUB SHARDNUMSUB\": {\n        \"summary\": \"Returns the count of subscribers of shard channels.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) for the SHARDNUMSUB subcommand, where N is the number of requested shard channels\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"shardchannel\",\n                \"type\": \"string\",\n                \"display_text\": \"shardchannel\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"PUNSUBSCRIBE\": {\n        \"summary\": \"Stops listening to messages published to channels that match one or more patterns.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of patterns to unsubscribe.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"QUIT\": {\n        \"summary\": \"Closes the connection.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"7.2.0\",\n        \"replaced_by\": \"just closing the connection\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": -1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"no_auth\",\n            \"allow_busy\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"RANDOMKEY\": {\n        \"summary\": \"Returns a random key name from the database.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:special\",\n            \"nondeterministic_output\"\n        ]\n    },\n    \"READONLY\": {\n        \"summary\": \"Enables read-only queries for a connection to a Redis Cluster replica node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"READWRITE\": {\n        \"summary\": \"Enables read-write queries for a connection to a Reids Cluster replica node.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"cluster\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"RENAME\": {\n        \"summary\": \"Renames a key and overwrites the destination.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"newkey\",\n                \"type\": \"key\",\n                \"display_text\": \"newkey\",\n                \"key_spec_index\": 1\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"RENAMENX\": {\n        \"summary\": \"Renames a key only when the target key name doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"3.2.0\",\n                \"The command no longer returns an error when source and destination names are the same.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"newkey\",\n                \"type\": \"key\",\n                \"display_text\": \"newkey\",\n                \"key_spec_index\": 1\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"REPLCONF\": {\n        \"summary\": \"An internal command for configuring the replication stream.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"allow_busy\"\n        ],\n        \"doc_flags\": [\n            \"syscmd\"\n        ]\n    },\n    \"REPLICAOF\": {\n        \"summary\": \"Configures a server as replica of another, or promotes it to a master.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"args\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"host-port\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"host\",\n                                \"type\": \"string\",\n                                \"display_text\": \"host\"\n                            },\n                            {\n                                \"name\": \"port\",\n                                \"type\": \"integer\",\n                                \"display_text\": \"port\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"no-one\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"no\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"no\",\n                                \"token\": \"NO\"\n                            },\n                            {\n                                \"name\": \"one\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"one\",\n                                \"token\": \"ONE\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"stale\",\n            \"no_async_loading\"\n        ]\n    },\n    \"RESET\": {\n        \"summary\": \"Resets the connection.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"no_auth\",\n            \"allow_busy\"\n        ]\n    },\n    \"RESTORE\": {\n        \"summary\": \"Creates a key from the serialized representation of a value.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1) to create the new key and additional O(N*M) to reconstruct the serialized value, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). However for sorted set values the complexity is O(N*M*log(N)) because inserting values into sorted sets is O(log(N)).\",\n        \"history\": [\n            [\n                \"3.0.0\",\n                \"Added the `REPLACE` modifier.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Added the `ABSTTL` modifier.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Added the `IDLETIME` and `FREQ` options.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"ttl\",\n                \"type\": \"integer\",\n                \"display_text\": \"ttl\"\n            },\n            {\n                \"name\": \"serialized-value\",\n                \"type\": \"string\",\n                \"display_text\": \"serialized-value\"\n            },\n            {\n                \"name\": \"replace\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"replace\",\n                \"token\": \"REPLACE\",\n                \"since\": \"3.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"absttl\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"absttl\",\n                \"token\": \"ABSTTL\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"seconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"seconds\",\n                \"token\": \"IDLETIME\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"frequency\",\n                \"type\": \"integer\",\n                \"display_text\": \"frequency\",\n                \"token\": \"FREQ\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"RESTORE-ASKING\": {\n        \"summary\": \"An internal command for migrating keys in a cluster.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1) to create the new key and additional O(N*M) to reconstruct the serialized value, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). However for sorted set values the complexity is O(N*M*log(N)) because inserting values into sorted sets is O(log(N)).\",\n        \"history\": [\n            [\n                \"3.0.0\",\n                \"Added the `REPLACE` modifier.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Added the `ABSTTL` modifier.\"\n            ],\n            [\n                \"5.0.0\",\n                \"Added the `IDLETIME` and `FREQ` options.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"ttl\",\n                \"type\": \"integer\",\n                \"display_text\": \"ttl\"\n            },\n            {\n                \"name\": \"serialized-value\",\n                \"type\": \"string\",\n                \"display_text\": \"serialized-value\"\n            },\n            {\n                \"name\": \"replace\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"replace\",\n                \"token\": \"REPLACE\",\n                \"since\": \"3.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"absttl\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"absttl\",\n                \"token\": \"ABSTTL\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"seconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"seconds\",\n                \"token\": \"IDLETIME\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"frequency\",\n                \"type\": \"integer\",\n                \"display_text\": \"frequency\",\n                \"token\": \"FREQ\",\n                \"since\": \"5.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"asking\"\n        ],\n        \"doc_flags\": [\n            \"syscmd\"\n        ]\n    },\n    \"ROLE\": {\n        \"summary\": \"Returns the replication role.\",\n        \"since\": \"2.8.12\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@fast\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"RPOP\": {\n        \"summary\": \"Returns and removes the last elements of a list. Deletes the list if the last element was popped.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(N) where N is the number of elements returned\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `count` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"RPOPLPUSH\": {\n        \"summary\": \"Returns the last element of a list after removing and pushing it to another list. Deletes the list if the last element was popped.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`LMOVE` with the `RIGHT` and `LEFT` arguments\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"RPUSH\": {\n        \"summary\": \"Appends one or more elements to a list. Creates the key if it doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple `element` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"RPUSHX\": {\n        \"summary\": \"Appends an element to a list only when the list exists.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"list\",\n        \"complexity\": \"O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Accepts multiple `element` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@list\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"element\",\n                \"type\": \"string\",\n                \"display_text\": \"element\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"SADD\": {\n        \"summary\": \"Adds one or more members to a set. Creates the key if it doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple `member` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"SAVE\": {\n        \"summary\": \"Synchronously saves the database(s) to disk.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the total number of keys in all databases\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\",\n            \"no_multi\"\n        ]\n    },\n    \"SCAN\": {\n        \"summary\": \"Iterates over the key names in the database.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"Added the `TYPE` subcommand.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"cursor\",\n                \"type\": \"integer\",\n                \"display_text\": \"cursor\"\n            },\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"token\": \"MATCH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"type\",\n                \"type\": \"string\",\n                \"display_text\": \"type\",\n                \"token\": \"TYPE\",\n                \"since\": \"6.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\",\n            \"request_policy:special\",\n            \"response_policy:special\"\n        ]\n    },\n    \"SCARD\": {\n        \"summary\": \"Returns the number of members in a set.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"SCRIPT\": {\n        \"summary\": \"A container for Lua scripts management commands.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"SCRIPT DEBUG\": {\n        \"summary\": \"Sets the debug mode of server-side Lua scripts.\",\n        \"since\": \"3.2.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"mode\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"yes\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"yes\",\n                        \"token\": \"YES\"\n                    },\n                    {\n                        \"name\": \"sync\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sync\",\n                        \"token\": \"SYNC\"\n                    },\n                    {\n                        \"name\": \"no\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"no\",\n                        \"token\": \"NO\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\"\n        ]\n    },\n    \"SCRIPT EXISTS\": {\n        \"summary\": \"Determines whether server-side Lua scripts exist in the script cache.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) with N being the number of scripts to check (so checking a single script is an O(1) operation).\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -3,\n        \"arguments\": [\n            {\n                \"name\": \"sha1\",\n                \"type\": \"string\",\n                \"display_text\": \"sha1\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:agg_logical_and\"\n        ]\n    },\n    \"SCRIPT FLUSH\": {\n        \"summary\": \"Removes all server-side Lua scripts from the script cache.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) with N being the number of scripts in cache\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `ASYNC` and `SYNC` flushing mode modifiers.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"flush-type\",\n                \"type\": \"oneof\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"async\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"async\",\n                        \"token\": \"ASYNC\"\n                    },\n                    {\n                        \"name\": \"sync\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sync\",\n                        \"token\": \"SYNC\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"SCRIPT HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"SCRIPT KILL\": {\n        \"summary\": \"Terminates a server-side Lua script during execution.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"noscript\",\n            \"allow_busy\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:one_succeeded\"\n        ]\n    },\n    \"SCRIPT LOAD\": {\n        \"summary\": \"Loads a server-side Lua script to the script cache.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"scripting\",\n        \"complexity\": \"O(N) with N being the length in bytes of the script body.\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@scripting\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"script\",\n                \"type\": \"string\",\n                \"display_text\": \"script\"\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"SDIFF\": {\n        \"summary\": \"Returns the difference of multiple sets.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the total number of elements in all given sets.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"SDIFFSTORE\": {\n        \"summary\": \"Stores the difference of multiple sets in a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the total number of elements in all given sets.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SELECT\": {\n        \"summary\": \"Changes the selected database.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"connection\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@connection\"\n        ],\n        \"arity\": 2,\n        \"arguments\": [\n            {\n                \"name\": \"index\",\n                \"type\": \"integer\",\n                \"display_text\": \"index\"\n            }\n        ],\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"SET\": {\n        \"summary\": \"Sets the string value of a key, ignoring its type. The key is created if it doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"2.6.12\",\n                \"Added the `EX`, `PX`, `NX` and `XX` options.\"\n            ],\n            [\n                \"6.0.0\",\n                \"Added the `KEEPTTL` option.\"\n            ],\n            [\n                \"6.2.0\",\n                \"Added the `GET`, `EXAT` and `PXAT` option.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Allowed the `NX` and `GET` options to be used together.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"notes\": \"RW and ACCESS due to the optional `GET` argument\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true,\n                \"variable_flags\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"2.6.12\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"get\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"get\",\n                \"token\": \"GET\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"expiration\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"seconds\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"seconds\",\n                        \"token\": \"EX\",\n                        \"since\": \"2.6.12\"\n                    },\n                    {\n                        \"name\": \"milliseconds\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"milliseconds\",\n                        \"token\": \"PX\",\n                        \"since\": \"2.6.12\"\n                    },\n                    {\n                        \"name\": \"unix-time-seconds\",\n                        \"type\": \"unix-time\",\n                        \"display_text\": \"unix-time-seconds\",\n                        \"token\": \"EXAT\",\n                        \"since\": \"6.2.0\"\n                    },\n                    {\n                        \"name\": \"unix-time-milliseconds\",\n                        \"type\": \"unix-time\",\n                        \"display_text\": \"unix-time-milliseconds\",\n                        \"token\": \"PXAT\",\n                        \"since\": \"6.2.0\"\n                    },\n                    {\n                        \"name\": \"keepttl\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"keepttl\",\n                        \"token\": \"KEEPTTL\",\n                        \"since\": \"6.0.0\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SETBIT\": {\n        \"summary\": \"Sets or clears the bit at offset of the string value. Creates the key if it doesn't exist.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"bitmap\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@bitmap\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"offset\",\n                \"type\": \"integer\",\n                \"display_text\": \"offset\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"integer\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SETEX\": {\n        \"summary\": \"Sets the string value and expiration time of a key. Creates the key if it doesn't exist.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"2.6.12\",\n        \"replaced_by\": \"`SET` with the `EX` argument\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"seconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"seconds\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"SETNX\": {\n        \"summary\": \"Set the string value of a key only when the key doesn't exist.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"2.6.12\",\n        \"replaced_by\": \"`SET` with the `NX` argument\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"SETRANGE\": {\n        \"summary\": \"Overwrites a part of a string value with another by an offset. Creates the key if it doesn't exist.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1), not counting the time taken to copy the new string in place. Usually, this string is very small so the amortized complexity is O(1). Otherwise, complexity is O(M) with M being the length of the value argument.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"offset\",\n                \"type\": \"integer\",\n                \"display_text\": \"offset\"\n            },\n            {\n                \"name\": \"value\",\n                \"type\": \"string\",\n                \"display_text\": \"value\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SHUTDOWN\": {\n        \"summary\": \"Synchronously saves the database(s) to disk and shuts down the Redis server.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) when saving, where N is the total number of keys in all databases when saving data, otherwise O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `NOW`, `FORCE` and `ABORT` modifiers.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"save-selector\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nosave\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nosave\",\n                        \"token\": \"NOSAVE\"\n                    },\n                    {\n                        \"name\": \"save\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"save\",\n                        \"token\": \"SAVE\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"now\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"now\",\n                \"token\": \"NOW\",\n                \"since\": \"7.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"force\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"force\",\n                \"token\": \"FORCE\",\n                \"since\": \"7.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"abort\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"abort\",\n                \"token\": \"ABORT\",\n                \"since\": \"7.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"no_multi\",\n            \"allow_busy\"\n        ]\n    },\n    \"SINTER\": {\n        \"summary\": \"Returns the intersect of multiple sets.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"SINTERCARD\": {\n        \"summary\": \"Returns the number of members of the intersect of multiple sets.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"integer\",\n                \"display_text\": \"limit\",\n                \"token\": \"LIMIT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"movablekeys\"\n        ]\n    },\n    \"SINTERSTORE\": {\n        \"summary\": \"Stores the intersect of multiple sets in a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SISMEMBER\": {\n        \"summary\": \"Determines whether a member belongs to a set.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"SLAVEOF\": {\n        \"summary\": \"Sets a Redis server as a replica of another, or promotes it to being a master.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"deprecated_since\": \"5.0.0\",\n        \"replaced_by\": \"`REPLICAOF`\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"args\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"host-port\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"host\",\n                                \"type\": \"string\",\n                                \"display_text\": \"host\"\n                            },\n                            {\n                                \"name\": \"port\",\n                                \"type\": \"integer\",\n                                \"display_text\": \"port\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"no-one\",\n                        \"type\": \"block\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"no\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"no\",\n                                \"token\": \"NO\"\n                            },\n                            {\n                                \"name\": \"one\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"one\",\n                                \"token\": \"ONE\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"stale\",\n            \"no_async_loading\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"SLOWLOG\": {\n        \"summary\": \"A container for slow log commands.\",\n        \"since\": \"2.2.12\",\n        \"group\": \"server\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"SLOWLOG GET\": {\n        \"summary\": \"Returns the slow log's entries.\",\n        \"since\": \"2.2.12\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of entries returned\",\n        \"history\": [\n            [\n                \"4.0.0\",\n                \"Added client IP address, port and name to the reply.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"admin\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"nondeterministic_output\"\n        ]\n    },\n    \"SLOWLOG HELP\": {\n        \"summary\": \"Show helpful text about the different subcommands\",\n        \"since\": \"6.2.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"SLOWLOG LEN\": {\n        \"summary\": \"Returns the number of entries in the slow log.\",\n        \"since\": \"2.2.12\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:agg_sum\",\n            \"nondeterministic_output\"\n        ]\n    },\n    \"SLOWLOG RESET\": {\n        \"summary\": \"Clears all entries from the slow log.\",\n        \"since\": \"2.2.12\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the number of entries in the slowlog\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"admin\",\n            \"loading\",\n            \"stale\"\n        ],\n        \"hints\": [\n            \"request_policy:all_nodes\",\n            \"response_policy:all_succeeded\"\n        ]\n    },\n    \"SMEMBERS\": {\n        \"summary\": \"Returns all members of a set.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the set cardinality.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"SMISMEMBER\": {\n        \"summary\": \"Determines whether multiple members belong to a set.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the number of elements being checked for membership\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"SMOVE\": {\n        \"summary\": \"Moves a member from one set to another.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"source\",\n                \"type\": \"key\",\n                \"display_text\": \"source\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"SORT\": {\n        \"summary\": \"Sorts the elements in a list, a set, or a sorted set, optionally storing the result.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M the number of returned elements. When the elements are not sorted, complexity is O(N).\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@sortedset\",\n            \"@list\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"notes\": \"For the optional BY/GET keyword. It is marked 'unknown' because the key names derive from the content of the key we sort\",\n                \"begin_search\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"find_keys\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"notes\": \"For the optional STORE keyword. It is marked 'unknown' because the keyword can appear anywhere in the argument array\",\n                \"begin_search\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"find_keys\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"OW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"by-pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"key_spec_index\": 1,\n                \"token\": \"BY\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"get-pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"key_spec_index\": 1,\n                \"token\": \"GET\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"multiple_token\": true\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"sorting\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"sorting\",\n                \"token\": \"ALPHA\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 2,\n                \"token\": \"STORE\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"movablekeys\"\n        ]\n    },\n    \"SORT_RO\": {\n        \"summary\": \"Returns the sorted elements of a list, a set, or a sorted set.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M the number of returned elements. When the elements are not sorted, complexity is O(N).\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@sortedset\",\n            \"@list\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            },\n            {\n                \"notes\": \"For the optional BY/GET keyword. It is marked 'unknown' because the key names derive from the content of the key we sort\",\n                \"begin_search\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"find_keys\": {\n                    \"type\": \"unknown\",\n                    \"spec\": {}\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"by-pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"key_spec_index\": 1,\n                \"token\": \"BY\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"get-pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"key_spec_index\": 1,\n                \"token\": \"GET\",\n                \"optional\": true,\n                \"multiple\": true,\n                \"multiple_token\": true\n            },\n            {\n                \"name\": \"order\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"asc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"asc\",\n                        \"token\": \"ASC\"\n                    },\n                    {\n                        \"name\": \"desc\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"desc\",\n                        \"token\": \"DESC\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"sorting\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"sorting\",\n                \"token\": \"ALPHA\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"movablekeys\"\n        ]\n    },\n    \"SPOP\": {\n        \"summary\": \"Returns one or more random members from a set after removing them. Deletes the set if the last member was popped.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"Without the count argument O(1), otherwise O(N) where N is the value of the passed count.\",\n        \"history\": [\n            [\n                \"3.2.0\",\n                \"Added the `count` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"since\": \"3.2.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"SPUBLISH\": {\n        \"summary\": \"Post a message to a shard channel\",\n        \"since\": \"7.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of clients subscribed to the receiving shard channel.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@fast\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"not_key\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"shardchannel\",\n                \"type\": \"string\",\n                \"display_text\": \"shardchannel\"\n            },\n            {\n                \"name\": \"message\",\n                \"type\": \"string\",\n                \"display_text\": \"message\"\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ]\n    },\n    \"SRANDMEMBER\": {\n        \"summary\": \"Get one or multiple random members from a set\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"Without the count argument O(1), otherwise O(N) where N is the absolute value of the passed count.\",\n        \"history\": [\n            [\n                \"2.6.0\",\n                \"Added the optional `count` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"since\": \"2.6.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"SREM\": {\n        \"summary\": \"Removes one or more members from a set. Deletes the set if the last member was removed.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the number of members to be removed.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple `member` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"SSCAN\": {\n        \"summary\": \"Iterates over members of a set.\",\n        \"since\": \"2.8.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"cursor\",\n                \"type\": \"integer\",\n                \"display_text\": \"cursor\"\n            },\n            {\n                \"name\": \"pattern\",\n                \"type\": \"pattern\",\n                \"display_text\": \"pattern\",\n                \"token\": \"MATCH\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"SSUBSCRIBE\": {\n        \"summary\": \"Listens for messages published to shard channels.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of shard channels to subscribe to.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"not_key\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"shardchannel\",\n                \"type\": \"string\",\n                \"display_text\": \"shardchannel\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"STRLEN\": {\n        \"summary\": \"Returns the length of a string value.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"SUBSCRIBE\": {\n        \"summary\": \"Listens for messages published to channels.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of channels to subscribe to.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"arguments\": [\n            {\n                \"name\": \"channel\",\n                \"type\": \"string\",\n                \"display_text\": \"channel\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"SUBSTR\": {\n        \"summary\": \"Returns a substring from a string value.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"string\",\n        \"complexity\": \"O(N) where N is the length of the returned string. The complexity is ultimately determined by the returned length, but because creating a substring from an existing string is very cheap, it can be considered O(1) for small strings.\",\n        \"deprecated_since\": \"2.0.0\",\n        \"replaced_by\": \"`GETRANGE`\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@string\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"integer\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"end\",\n                \"type\": \"integer\",\n                \"display_text\": \"end\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"SUNION\": {\n        \"summary\": \"Returns the union of multiple sets.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the total number of elements in all given sets.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output_order\"\n        ]\n    },\n    \"SUNIONSTORE\": {\n        \"summary\": \"Stores the union of multiple sets in a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"set\",\n        \"complexity\": \"O(N) where N is the total number of elements in all given sets.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@set\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"SUNSUBSCRIBE\": {\n        \"summary\": \"Stops listening to messages posted to shard channels.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of shard channels to unsubscribe.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -1,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"not_key\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"shardchannel\",\n                \"type\": \"string\",\n                \"display_text\": \"shardchannel\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"SWAPDB\": {\n        \"summary\": \"Swaps two Redis databases.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(N) where N is the count of clients watching or blocking on keys from both databases.\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\",\n            \"@dangerous\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"index1\",\n                \"type\": \"integer\",\n                \"display_text\": \"index1\"\n            },\n            {\n                \"name\": \"index2\",\n                \"type\": \"integer\",\n                \"display_text\": \"index2\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"SYNC\": {\n        \"summary\": \"An internal command used in replication.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"server\",\n        \"acl_categories\": [\n            \"@admin\",\n            \"@slow\",\n            \"@dangerous\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"admin\",\n            \"noscript\",\n            \"no_async_loading\",\n            \"no_multi\"\n        ]\n    },\n    \"TIME\": {\n        \"summary\": \"Returns the server time.\",\n        \"since\": \"2.6.0\",\n        \"group\": \"server\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"TOUCH\": {\n        \"summary\": \"Returns the number of existing keys out of those specified after updating the time they were last accessed.\",\n        \"since\": \"3.2.1\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(N) where N is the number of keys that will be touched.\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"TTL\": {\n        \"summary\": \"Returns the expiration time in seconds of a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"2.8.0\",\n                \"Added the -2 reply.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"TYPE\": {\n        \"summary\": \"Determines the type of value stored at a key.\",\n        \"since\": \"1.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@read\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"UNLINK\": {\n        \"summary\": \"Asynchronously deletes one or more keys.\",\n        \"since\": \"4.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1) for each key removed regardless of its size. Then the command does O(N) work in a different thread in order to reclaim memory, where N is the number of allocations the deleted objects where composed of.\",\n        \"acl_categories\": [\n            \"@keyspace\",\n            \"@write\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RM\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"request_policy:multi_shard\",\n            \"response_policy:agg_sum\"\n        ]\n    },\n    \"UNSUBSCRIBE\": {\n        \"summary\": \"Stops listening to messages posted to channels.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"pubsub\",\n        \"complexity\": \"O(N) where N is the number of channels to unsubscribe.\",\n        \"acl_categories\": [\n            \"@pubsub\",\n            \"@slow\"\n        ],\n        \"arity\": -1,\n        \"arguments\": [\n            {\n                \"name\": \"channel\",\n                \"type\": \"string\",\n                \"display_text\": \"channel\",\n                \"optional\": true,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"pubsub\",\n            \"noscript\",\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"UNWATCH\": {\n        \"summary\": \"Forgets about watched keys of a transaction.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"transactions\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@transaction\"\n        ],\n        \"arity\": 1,\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"allow_busy\"\n        ]\n    },\n    \"WAIT\": {\n        \"summary\": \"Blocks until the asynchronous replication of all preceding write commands sent by the connection is completed.\",\n        \"since\": \"3.0.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 3,\n        \"arguments\": [\n            {\n                \"name\": \"numreplicas\",\n                \"type\": \"integer\",\n                \"display_text\": \"numreplicas\"\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"integer\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:agg_min\"\n        ]\n    },\n    \"WAITAOF\": {\n        \"summary\": \"Blocks until all of the preceding write commands sent by the connection are written to the append-only file of the master and/or replicas.\",\n        \"since\": \"7.2.0\",\n        \"group\": \"generic\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@slow\",\n            \"@connection\"\n        ],\n        \"arity\": 4,\n        \"arguments\": [\n            {\n                \"name\": \"numlocal\",\n                \"type\": \"integer\",\n                \"display_text\": \"numlocal\"\n            },\n            {\n                \"name\": \"numreplicas\",\n                \"type\": \"integer\",\n                \"display_text\": \"numreplicas\"\n            },\n            {\n                \"name\": \"timeout\",\n                \"type\": \"integer\",\n                \"display_text\": \"timeout\"\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\"\n        ],\n        \"hints\": [\n            \"request_policy:all_shards\",\n            \"response_policy:agg_min\"\n        ]\n    },\n    \"WATCH\": {\n        \"summary\": \"Monitors changes to keys to determine the execution of a transaction.\",\n        \"since\": \"2.2.0\",\n        \"group\": \"transactions\",\n        \"complexity\": \"O(1) for every key.\",\n        \"acl_categories\": [\n            \"@fast\",\n            \"@transaction\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"noscript\",\n            \"loading\",\n            \"stale\",\n            \"fast\",\n            \"allow_busy\"\n        ]\n    },\n    \"XACK\": {\n        \"summary\": \"Returns the number of messages that were successfully acknowledged by the consumer group member of a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1) for each message ID processed.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"id\",\n                \"type\": \"string\",\n                \"display_text\": \"id\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"XADD\": {\n        \"summary\": \"Appends a new message to a stream. Creates the key if it doesn't exist.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1) when adding a new entry, O(N) when trimming where N being the number of entries evicted.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `NOMKSTREAM` option, `MINID` trimming strategy and the `LIMIT` option.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added support for the `<ms>-*` explicit ID form.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"notes\": \"UPDATE instead of INSERT because of the optional trimming feature\",\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"nomkstream\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"nomkstream\",\n                \"token\": \"NOMKSTREAM\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"trim\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"strategy\",\n                        \"type\": \"oneof\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"maxlen\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"maxlen\",\n                                \"token\": \"MAXLEN\"\n                            },\n                            {\n                                \"name\": \"minid\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"minid\",\n                                \"token\": \"MINID\",\n                                \"since\": \"6.2.0\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"operator\",\n                        \"type\": \"oneof\",\n                        \"optional\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"equal\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"equal\",\n                                \"token\": \"=\"\n                            },\n                            {\n                                \"name\": \"approximately\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"approximately\",\n                                \"token\": \"~\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"threshold\",\n                        \"type\": \"string\",\n                        \"display_text\": \"threshold\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"LIMIT\",\n                        \"since\": \"6.2.0\",\n                        \"optional\": true\n                    }\n                ]\n            },\n            {\n                \"name\": \"id-selector\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"auto-id\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"auto-id\",\n                        \"token\": \"*\"\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"string\",\n                        \"display_text\": \"id\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"field\",\n                        \"type\": \"string\",\n                        \"display_text\": \"field\"\n                    },\n                    {\n                        \"name\": \"value\",\n                        \"type\": \"string\",\n                        \"display_text\": \"value\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"XAUTOCLAIM\": {\n        \"summary\": \"Changes, or acquires, ownership of messages in a consumer group, as if the messages were delivered to as consumer group member.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1) if COUNT is small.\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added an element to the reply array, containing deleted entries the command cleared from the PEL\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"consumer\",\n                \"type\": \"string\",\n                \"display_text\": \"consumer\"\n            },\n            {\n                \"name\": \"min-idle-time\",\n                \"type\": \"string\",\n                \"display_text\": \"min-idle-time\"\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"string\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"justid\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"justid\",\n                \"token\": \"JUSTID\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"XCLAIM\": {\n        \"summary\": \"Changes, or acquires, ownership of a message in a consumer group, as if the message was delivered a consumer group member.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(log N) with N being the number of messages in the PEL of the consumer group.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -6,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"consumer\",\n                \"type\": \"string\",\n                \"display_text\": \"consumer\"\n            },\n            {\n                \"name\": \"min-idle-time\",\n                \"type\": \"string\",\n                \"display_text\": \"min-idle-time\"\n            },\n            {\n                \"name\": \"id\",\n                \"type\": \"string\",\n                \"display_text\": \"id\",\n                \"multiple\": true\n            },\n            {\n                \"name\": \"ms\",\n                \"type\": \"integer\",\n                \"display_text\": \"ms\",\n                \"token\": \"IDLE\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"unix-time-milliseconds\",\n                \"type\": \"unix-time\",\n                \"display_text\": \"unix-time-milliseconds\",\n                \"token\": \"TIME\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"RETRYCOUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"force\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"force\",\n                \"token\": \"FORCE\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"justid\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"justid\",\n                \"token\": \"JUSTID\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"lastid\",\n                \"type\": \"string\",\n                \"display_text\": \"lastid\",\n                \"token\": \"LASTID\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"XDEL\": {\n        \"summary\": \"Returns the number of messages after removing them from a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1) for each single item to delete in the stream, regardless of the stream size.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"id\",\n                \"type\": \"string\",\n                \"display_text\": \"id\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"XGROUP\": {\n        \"summary\": \"A container for consumer groups commands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"XGROUP CREATE\": {\n        \"summary\": \"Creates a consumer group.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `entries_read` named argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"id-selector\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"string\",\n                        \"display_text\": \"id\"\n                    },\n                    {\n                        \"name\": \"new-id\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"new-id\",\n                        \"token\": \"$\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"mkstream\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"mkstream\",\n                \"token\": \"MKSTREAM\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"entries-read\",\n                \"type\": \"integer\",\n                \"display_text\": \"entries-read\",\n                \"token\": \"ENTRIESREAD\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"XGROUP CREATECONSUMER\": {\n        \"summary\": \"Creates a consumer in a consumer group.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"insert\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"consumer\",\n                \"type\": \"string\",\n                \"display_text\": \"consumer\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"XGROUP DELCONSUMER\": {\n        \"summary\": \"Deletes a consumer from a consumer group.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"consumer\",\n                \"type\": \"string\",\n                \"display_text\": \"consumer\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"XGROUP DESTROY\": {\n        \"summary\": \"Destroys a consumer group.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(N) where N is the number of entries in the group's pending entries list (PEL).\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"XGROUP HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"XGROUP SETID\": {\n        \"summary\": \"Sets the last-delivered ID of a consumer group.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the optional `entries_read` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"id-selector\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"string\",\n                        \"display_text\": \"id\"\n                    },\n                    {\n                        \"name\": \"new-id\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"new-id\",\n                        \"token\": \"$\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"entriesread\",\n                \"type\": \"integer\",\n                \"display_text\": \"entries-read\",\n                \"token\": \"ENTRIESREAD\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"XINFO\": {\n        \"summary\": \"A container for stream introspection commands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"Depends on subcommand.\",\n        \"acl_categories\": [\n            \"@slow\"\n        ],\n        \"arity\": -2\n    },\n    \"XINFO CONSUMERS\": {\n        \"summary\": \"Returns a list of the consumers in a consumer group.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.2.0\",\n                \"Added the `inactive` field.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"XINFO GROUPS\": {\n        \"summary\": \"Returns a list of the consumer groups of a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `entries-read` and `lag` fields\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"XINFO HELP\": {\n        \"summary\": \"Returns helpful text about the different subcommands.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": 2,\n        \"command_flags\": [\n            \"loading\",\n            \"stale\"\n        ]\n    },\n    \"XINFO STREAM\": {\n        \"summary\": \"Returns information about a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"6.0.0\",\n                \"Added the `FULL` modifier.\"\n            ],\n            [\n                \"7.0.0\",\n                \"Added the `max-deleted-entry-id`, `entries-added`, `recorded-first-entry-id`, `entries-read` and `lag` fields\"\n            ],\n            [\n                \"7.2.0\",\n                \"Added the `active-time` field, and changed the meaning of `seen-time`.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"full-block\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"full\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"full\",\n                        \"token\": \"FULL\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"COUNT\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"XLEN\": {\n        \"summary\": \"Return the number of messages in a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"XPENDING\": {\n        \"summary\": \"Returns the information and entries from a stream consumer group's pending entries list.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(N) with N being the number of elements returned, so asking for a small fixed number of entries per call is O(1). O(M), where M is the total number of entries scanned when used with the IDLE filter. When the command returns just the summary and the list of consumers is small, it runs in O(1) time; otherwise, an additional O(N) time for iterating every consumer.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `IDLE` option and exclusive range intervals.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"group\",\n                \"type\": \"string\",\n                \"display_text\": \"group\"\n            },\n            {\n                \"name\": \"filters\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"min-idle-time\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"min-idle-time\",\n                        \"token\": \"IDLE\",\n                        \"since\": \"6.2.0\",\n                        \"optional\": true\n                    },\n                    {\n                        \"name\": \"start\",\n                        \"type\": \"string\",\n                        \"display_text\": \"start\"\n                    },\n                    {\n                        \"name\": \"end\",\n                        \"type\": \"string\",\n                        \"display_text\": \"end\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    },\n                    {\n                        \"name\": \"consumer\",\n                        \"type\": \"string\",\n                        \"display_text\": \"consumer\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"XRANGE\": {\n        \"summary\": \"Returns the messages from a stream within a range of IDs.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(N) with N being the number of elements being returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1).\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added exclusive ranges.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"string\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"end\",\n                \"type\": \"string\",\n                \"display_text\": \"end\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"XREAD\": {\n        \"summary\": \"Returns messages from multiple streams with IDs greater than the ones requested. Blocks until a message is available otherwise.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STREAMS\",\n                        \"startfrom\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 2\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"milliseconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"milliseconds\",\n                \"token\": \"BLOCK\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"streams\",\n                \"type\": \"block\",\n                \"token\": \"STREAMS\",\n                \"arguments\": [\n                    {\n                        \"name\": \"key\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 0,\n                        \"multiple\": true\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"string\",\n                        \"display_text\": \"id\",\n                        \"multiple\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"blocking\",\n            \"movablekeys\"\n        ]\n    },\n    \"XREADGROUP\": {\n        \"summary\": \"Returns new or historical messages from a stream for a consumer in a group. Blocks until a message is available otherwise.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"For each stream mentioned: O(M) with M being the number of elements returned. If M is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1). On the other side when XREADGROUP blocks, XADD will pay the O(N) time in order to serve the N clients blocked on the stream getting new data.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\",\n            \"@blocking\"\n        ],\n        \"arity\": -7,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"keyword\",\n                    \"spec\": {\n                        \"keyword\": \"STREAMS\",\n                        \"startfrom\": 4\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": -1,\n                        \"keystep\": 1,\n                        \"limit\": 2\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"group-block\",\n                \"type\": \"block\",\n                \"token\": \"GROUP\",\n                \"arguments\": [\n                    {\n                        \"name\": \"group\",\n                        \"type\": \"string\",\n                        \"display_text\": \"group\"\n                    },\n                    {\n                        \"name\": \"consumer\",\n                        \"type\": \"string\",\n                        \"display_text\": \"consumer\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"milliseconds\",\n                \"type\": \"integer\",\n                \"display_text\": \"milliseconds\",\n                \"token\": \"BLOCK\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"noack\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"noack\",\n                \"token\": \"NOACK\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"streams\",\n                \"type\": \"block\",\n                \"token\": \"STREAMS\",\n                \"arguments\": [\n                    {\n                        \"name\": \"key\",\n                        \"type\": \"key\",\n                        \"display_text\": \"key\",\n                        \"key_spec_index\": 0,\n                        \"multiple\": true\n                    },\n                    {\n                        \"name\": \"id\",\n                        \"type\": \"string\",\n                        \"display_text\": \"id\",\n                        \"multiple\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"blocking\",\n            \"movablekeys\"\n        ]\n    },\n    \"XREVRANGE\": {\n        \"summary\": \"Returns the messages from a stream within a range of IDs in reverse order.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(N) with N being the number of elements returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1).\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added exclusive ranges.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"end\",\n                \"type\": \"string\",\n                \"display_text\": \"end\"\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"string\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"XSETID\": {\n        \"summary\": \"An internal command for replicating stream values.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(1)\",\n        \"history\": [\n            [\n                \"7.0.0\",\n                \"Added the `entries_added` and `max_deleted_entry_id` arguments.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"last-id\",\n                \"type\": \"string\",\n                \"display_text\": \"last-id\"\n            },\n            {\n                \"name\": \"entries-added\",\n                \"type\": \"integer\",\n                \"display_text\": \"entries-added\",\n                \"token\": \"ENTRIESADDED\",\n                \"since\": \"7.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"max-deleted-id\",\n                \"type\": \"string\",\n                \"display_text\": \"max-deleted-id\",\n                \"token\": \"MAXDELETEDID\",\n                \"since\": \"7.0.0\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"XTRIM\": {\n        \"summary\": \"Deletes messages from the beginning of a stream.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"stream\",\n        \"complexity\": \"O(N), with N being the number of evicted entries. Constant times are very small however, since entries are organized in macro nodes containing multiple entries that can be released with a single deallocation.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `MINID` trimming strategy and the `LIMIT` option.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@stream\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"trim\",\n                \"type\": \"block\",\n                \"arguments\": [\n                    {\n                        \"name\": \"strategy\",\n                        \"type\": \"oneof\",\n                        \"arguments\": [\n                            {\n                                \"name\": \"maxlen\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"maxlen\",\n                                \"token\": \"MAXLEN\"\n                            },\n                            {\n                                \"name\": \"minid\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"minid\",\n                                \"token\": \"MINID\",\n                                \"since\": \"6.2.0\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"operator\",\n                        \"type\": \"oneof\",\n                        \"optional\": true,\n                        \"arguments\": [\n                            {\n                                \"name\": \"equal\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"equal\",\n                                \"token\": \"=\"\n                            },\n                            {\n                                \"name\": \"approximately\",\n                                \"type\": \"pure-token\",\n                                \"display_text\": \"approximately\",\n                                \"token\": \"~\"\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"threshold\",\n                        \"type\": \"string\",\n                        \"display_text\": \"threshold\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\",\n                        \"token\": \"LIMIT\",\n                        \"since\": \"6.2.0\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"ZADD\": {\n        \"summary\": \"Adds one or more members to a sorted set, or updates their scores. Creates the key if it doesn't exist.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) for each item added, where N is the number of elements in the sorted set.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple elements.\"\n            ],\n            [\n                \"3.0.2\",\n                \"Added the `XX`, `NX`, `CH` and `INCR` options.\"\n            ],\n            [\n                \"6.2.0\",\n                \"Added the `GT` and `LT` options.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"condition\",\n                \"type\": \"oneof\",\n                \"since\": \"3.0.2\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"nx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"nx\",\n                        \"token\": \"NX\"\n                    },\n                    {\n                        \"name\": \"xx\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"xx\",\n                        \"token\": \"XX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"comparison\",\n                \"type\": \"oneof\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"gt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"gt\",\n                        \"token\": \"GT\"\n                    },\n                    {\n                        \"name\": \"lt\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"lt\",\n                        \"token\": \"LT\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"change\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"change\",\n                \"token\": \"CH\",\n                \"since\": \"3.0.2\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"increment\",\n                \"token\": \"INCR\",\n                \"since\": \"3.0.2\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"block\",\n                \"multiple\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"score\",\n                        \"type\": \"double\",\n                        \"display_text\": \"score\"\n                    },\n                    {\n                        \"name\": \"member\",\n                        \"type\": \"string\",\n                        \"display_text\": \"member\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"ZCARD\": {\n        \"summary\": \"Returns the number of members in a sorted set.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(1)\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": 2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"ZCOUNT\": {\n        \"summary\": \"Returns the count of members in a sorted set that have scores within a range.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) with N being the number of elements in the sorted set.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"double\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"double\",\n                \"display_text\": \"max\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"ZDIFF\": {\n        \"summary\": \"Returns the difference between multiple sorted sets.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"withscores\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withscores\",\n                \"token\": \"WITHSCORES\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZDIFFSTORE\": {\n        \"summary\": \"Stores the difference of multiple sorted sets in a key.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZINCRBY\": {\n        \"summary\": \"Increments the score of a member in a sorted set.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) where N is the number of elements in the sorted set.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"update\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"increment\",\n                \"type\": \"integer\",\n                \"display_text\": \"increment\"\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"fast\"\n        ]\n    },\n    \"ZINTER\": {\n        \"summary\": \"Returns the intersect of multiple sorted sets.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of input sorted sets and M being the number of elements in the resulting sorted set.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"weight\",\n                \"type\": \"integer\",\n                \"display_text\": \"weight\",\n                \"token\": \"WEIGHTS\",\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"aggregate\",\n                \"type\": \"oneof\",\n                \"token\": \"AGGREGATE\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"sum\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sum\",\n                        \"token\": \"SUM\"\n                    },\n                    {\n                        \"name\": \"min\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"min\",\n                        \"token\": \"MIN\"\n                    },\n                    {\n                        \"name\": \"max\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"max\",\n                        \"token\": \"MAX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withscores\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withscores\",\n                \"token\": \"WITHSCORES\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZINTERCARD\": {\n        \"summary\": \"Returns the number of members of the intersect of multiple sorted sets.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(N*K) worst case with N being the smallest input sorted set, K being the number of input sorted sets.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"integer\",\n                \"display_text\": \"limit\",\n                \"token\": \"LIMIT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZINTERSTORE\": {\n        \"summary\": \"Stores the intersect of multiple sorted sets in a key.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of input sorted sets and M being the number of elements in the resulting sorted set.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"destination\",\n                \"type\": \"key\",\n                \"display_text\": \"destination\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 1,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"weight\",\n                \"type\": \"integer\",\n                \"display_text\": \"weight\",\n                \"token\": \"WEIGHTS\",\n                \"optional\": true,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"aggregate\",\n                \"type\": \"oneof\",\n                \"token\": \"AGGREGATE\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"sum\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"sum\",\n                        \"token\": \"SUM\"\n                    },\n                    {\n                        \"name\": \"min\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"min\",\n                        \"token\": \"MIN\"\n                    },\n                    {\n                        \"name\": \"max\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"max\",\n                        \"token\": \"MAX\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZLEXCOUNT\": {\n        \"summary\": \"Returns the number of members in a sorted set within a lexicographical range.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)) with N being the number of elements in the sorted set.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"string\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"string\",\n                \"display_text\": \"max\"\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"ZMPOP\": {\n        \"summary\": \"Returns the highest- or lowest-scoring members from one or more sorted sets after removing them. Deletes the sorted set if the last member was popped.\",\n        \"since\": \"7.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(K) + O(M*log(N)) where K is the number of provided keys, N being the number of elements in the sorted set, and M being the number of elements popped.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"keynum\",\n                    \"spec\": {\n                        \"keynumidx\": 0,\n                        \"firstkey\": 1,\n                        \"keystep\": 1\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"numkeys\",\n                \"type\": \"integer\",\n                \"display_text\": \"numkeys\"\n            },\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0,\n                \"multiple\": true\n            },\n            {\n                \"name\": \"where\",\n                \"type\": \"oneof\",\n                \"arguments\": [\n                    {\n                        \"name\": \"min\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"min\",\n                        \"token\": \"MIN\"\n                    },\n                    {\n                        \"name\": \"max\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"max\",\n                        \"token\": \"MAX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"token\": \"COUNT\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"movablekeys\"\n        ]\n    },\n    \"ZMSCORE\": {\n        \"summary\": \"Returns the score of one or more members in a sorted set.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(N) where N is the number of members being requested.\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"ZPOPMAX\": {\n        \"summary\": \"Returns the highest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"ZPOPMIN\": {\n        \"summary\": \"Returns the lowest-scoring members from a sorted set after removing them. Deletes the sorted set if the last member was popped.\",\n        \"since\": \"5.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"access\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"count\",\n                \"type\": \"integer\",\n                \"display_text\": \"count\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"ZRANDMEMBER\": {\n        \"summary\": \"Returns one or more random members from a sorted set.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(N) where N is the number of members returned\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -2,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"options\",\n                \"type\": \"block\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    },\n                    {\n                        \"name\": \"withscores\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"withscores\",\n                        \"token\": \"WITHSCORES\",\n                        \"optional\": true\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"hints\": [\n            \"nondeterministic_output\"\n        ]\n    },\n    \"ZRANGE\": {\n        \"summary\": \"Returns members in a sorted set within a range of indexes.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.\",\n        \"history\": [\n            [\n                \"6.2.0\",\n                \"Added the `REV`, `BYSCORE`, `BYLEX` and `LIMIT` options.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"string\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"stop\",\n                \"type\": \"string\",\n                \"display_text\": \"stop\"\n            },\n            {\n                \"name\": \"sortby\",\n                \"type\": \"oneof\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"byscore\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"byscore\",\n                        \"token\": \"BYSCORE\"\n                    },\n                    {\n                        \"name\": \"bylex\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"bylex\",\n                        \"token\": \"BYLEX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"rev\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"rev\",\n                \"token\": \"REV\",\n                \"since\": \"6.2.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"since\": \"6.2.0\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"withscores\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withscores\",\n                \"token\": \"WITHSCORES\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ]\n    },\n    \"ZRANGEBYLEX\": {\n        \"summary\": \"Returns members in a sorted set within a lexicographical range.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`ZRANGE` with the `BYLEX` argument\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"string\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"string\",\n                \"display_text\": \"max\"\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"ZRANGEBYSCORE\": {\n        \"summary\": \"Returns members in a sorted set within a range of scores.\",\n        \"since\": \"1.0.5\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`ZRANGE` with the `BYSCORE` argument\",\n        \"history\": [\n            [\n                \"2.0.0\",\n                \"Added the `WITHSCORES` modifier.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"double\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"double\",\n                \"display_text\": \"max\"\n            },\n            {\n                \"name\": \"withscores\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withscores\",\n                \"token\": \"WITHSCORES\",\n                \"since\": \"2.0.0\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\"\n        ],\n        \"doc_flags\": [\n            \"deprecated\"\n        ]\n    },\n    \"ZRANGESTORE\": {\n        \"summary\": \"Stores a range of members from sorted set in a key.\",\n        \"since\": \"6.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements stored into the destination key.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -5,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"OW\": true,\n                \"update\": true\n            },\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 2\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"dst\",\n                \"type\": \"key\",\n                \"display_text\": \"dst\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"src\",\n                \"type\": \"key\",\n                \"display_text\": \"src\",\n                \"key_spec_index\": 1\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"string\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"string\",\n                \"display_text\": \"max\"\n            },\n            {\n                \"name\": \"sortby\",\n                \"type\": \"oneof\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"byscore\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"byscore\",\n                        \"token\": \"BYSCORE\"\n                    },\n                    {\n                        \"name\": \"bylex\",\n                        \"type\": \"pure-token\",\n                        \"display_text\": \"bylex\",\n                        \"token\": \"BYLEX\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"rev\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"rev\",\n                \"token\": \"REV\",\n                \"optional\": true\n            },\n            {\n                \"name\": \"limit\",\n                \"type\": \"block\",\n                \"token\": \"LIMIT\",\n                \"optional\": true,\n                \"arguments\": [\n                    {\n                        \"name\": \"offset\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"offset\"\n                    },\n                    {\n                        \"name\": \"count\",\n                        \"type\": \"integer\",\n                        \"display_text\": \"count\"\n                    }\n                ]\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"denyoom\"\n        ]\n    },\n    \"ZRANK\": {\n        \"summary\": \"Returns the index of a member in a sorted set ordered by ascending scores.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N))\",\n        \"history\": [\n            [\n                \"7.2.0\",\n                \"Added the optional `WITHSCORE` argument.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\"\n            },\n            {\n                \"name\": \"withscore\",\n                \"type\": \"pure-token\",\n                \"display_text\": \"withscore\",\n                \"token\": \"WITHSCORE\",\n                \"optional\": true\n            }\n        ],\n        \"command_flags\": [\n            \"readonly\",\n            \"fast\"\n        ]\n    },\n    \"ZREM\": {\n        \"summary\": \"Removes one or more members from a sorted set. Deletes the sorted set if all members were removed.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(M*log(N)) with N being the number of elements in the sorted set and M the number of elements to be removed.\",\n        \"history\": [\n            [\n                \"2.4.0\",\n                \"Accepts multiple elements.\"\n            ]\n        ],\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@fast\"\n        ],\n        \"arity\": -3,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"member\",\n                \"type\": \"string\",\n                \"display_text\": \"member\",\n                \"multiple\": true\n            }\n        ],\n        \"command_flags\": [\n            \"write\",\n            \"fast\"\n        ]\n    },\n    \"ZREMRANGEBYLEX\": {\n        \"summary\": \"Removes members in a sorted set within a lexicographical range. Deletes the sorted set if all members were removed.\",\n        \"since\": \"2.8.9\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"string\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"string\",\n                \"display_text\": \"max\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"ZREMRANGEBYRANK\": {\n        \"summary\": \"Removes members in a sorted set within a range of indexes. Deletes the sorted set if all members were removed.\",\n        \"since\": \"2.0.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"start\",\n                \"type\": \"integer\",\n                \"display_text\": \"start\"\n            },\n            {\n                \"name\": \"stop\",\n                \"type\": \"integer\",\n                \"display_text\": \"stop\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"ZREMRANGEBYSCORE\": {\n        \"summary\": \"Removes members in a sorted set within a range of scores. Deletes the sorted set if all members were removed.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.\",\n        \"acl_categories\": [\n            \"@write\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": 4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RW\": true,\n                \"delete\": true\n            }\n        ],\n        \"arguments\": [\n            {\n                \"name\": \"key\",\n                \"type\": \"key\",\n                \"display_text\": \"key\",\n                \"key_spec_index\": 0\n            },\n            {\n                \"name\": \"min\",\n                \"type\": \"double\",\n                \"display_text\": \"min\"\n            },\n            {\n                \"name\": \"max\",\n                \"type\": \"double\",\n                \"display_text\": \"max\"\n            }\n        ],\n        \"command_flags\": [\n            \"write\"\n        ]\n    },\n    \"ZREVRANGE\": {\n        \"summary\": \"Returns members in a sorted set within a range of indexes in reverse order.\",\n        \"since\": \"1.2.0\",\n        \"group\": \"sorted-set\",\n        \"complexity\": \"O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.\",\n        \"deprecated_since\": \"6.2.0\",\n        \"replaced_by\": \"`ZRANGE` with the `REV` argument\",\n        \"acl_categories\": [\n            \"@read\",\n            \"@sortedset\",\n            \"@slow\"\n        ],\n        \"arity\": -4,\n        \"key_specs\": [\n            {\n                \"begin_search\": {\n                    \"type\": \"index\",\n                    \"spec\": {\n                        \"index\": 1\n                    }\n                },\n                \"find_keys\": {\n                    \"type\": \"range\",\n                    \"spec\": {\n                        \"lastkey\": 0,\n                        \"keystep\": 1,\n                        \"limit\": 0\n                    }\n                },\n                \"RO\": true,\n                \"access\": true\n            }\n        ],\n        \"argumen"
        },
        {
          "name": "commands",
          "type": "tree",
          "content": null
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "groups.json",
          "type": "blob",
          "size": 1.66796875,
          "content": "{\n  \"bitmap\": {\n    \"display\": \"Bitmap\",\n    \"description\": \"Operations on the Bitmap data type\"\n  },\n  \"cluster\": {\n    \"display\": \"Cluster\",\n    \"description\": \"Redis Cluster management\"\n  },\n  \"connection\": {\n    \"display\": \"Connection\",\n    \"description\": \"Client connections management\"\n  },\n  \"generic\": {\n    \"display\": \"Generic\",\n    \"description\": \"Generic commands\"\n  },\n  \"geo\": {\n    \"display\": \"Geospatial indices\",\n    \"description\": \"Operations on the Geospatial Index data type\"\n  },\n  \"hash\": {\n    \"display\": \"Hash\",\n    \"description\": \"Operations on the Hash data type\"\n  },\n  \"hyperloglog\": {\n    \"display\": \"HyperLogLog\",\n    \"description\": \"Operations on the HyperLogLog data type\"\n  },\n  \"list\": {\n    \"display\": \"List\",\n    \"description\": \"Operations on the List data type\"\n  },\n  \"pubsub\": {\n    \"display\": \"Pub/Sub\",\n    \"description\": \"Pub/Sub commands\"\n  },\n  \"scripting\": {\n    \"display\": \"Scripting and Functions\",\n    \"description\": \"Redis server-side scripting and functions\"\n  },\n  \"sentinel\": {\n    \"display\": \"Sentinel\",\n    \"description\": \"Redis Sentinel commands\"\n  },\n  \"server\": {\n    \"display\": \"Server\",\n    \"description\": \"Server management commands\"\n  },\n  \"set\": {\n    \"display\": \"Set\",\n    \"description\": \"Operations on the Set data type\"\n  },\n  \"sorted-set\": {\n    \"display\": \"Sorted Set\",\n    \"description\": \"Operations on the Sorted Set data type\"\n  },\n  \"stream\": {\n    \"display\": \"Stream\",\n    \"description\": \"Operations on the Stream data type\"\n  },\n  \"string\": {\n    \"display\": \"String\",\n    \"description\": \"Operations on the String data type\"\n  },\n  \"transactions\": {\n    \"display\": \"Transactions\",\n    \"description\": \"Redis Transaction management\"\n  }\n}\n"
        },
        {
          "name": "languages.json",
          "type": "blob",
          "size": 1.4140625,
          "content": "{\n    \"ActionScript\": \"actionscript\",\n    \"ActiveX/COM+\": \"activex-com\",\n    \"Ballerina\": \"ballerina\",\n    \"Bash\": \"bash\",\n    \"Boomi\": \"boomi\",\n    \"C\": \"c\",\n    \"C#\": \"csharp\",\n    \"C++\": \"cpp\",\n    \"Clojure\": \"clojure\",\n    \"Common Lisp\": \"common-lisp\",\n    \"Crystal\": \"crystal\",\n    \"D\": \"d\",\n    \"Dart\": \"dart\",\n    \"Delphi\": \"delphi\",\n    \"Deno\": \"deno\",\n    \"Elixir\": \"elixir\",\n    \"emacs lisp\": \"emacs-lisp\",\n    \"Erlang\": \"erlang\",\n    \"Fancy\": \"fancy\",\n    \"gawk\": \"gawk\",\n    \"Gleam\": \"gleam\",\n    \"GNU Prolog\": \"gnu-prolog\",\n    \"Go\": \"go\",\n    \"Haskell\": \"haskell\",\n    \"Haxe\": \"haxe\",\n    \"Io\": \"io\",\n    \"Java\": \"java\",\n    \"Javascript\": \"javascript\",\n    \"Julia\": \"julia\",\n    \"Kotlin\": \"kotlin\",\n    \"LabVIEW\": \"labview\",\n    \"Lasso\": \"lasso\",\n    \"Lua\": \"lua\",\n    \"Matlab\": \"matlab\",\n    \"mruby\": \"mruby\",\n    \".Net\": \"dotnet\",\n    \"Nim\": \"nim\",\n    \"Node.js\": \"nodejs\",\n    \"Objective-C\": \"objective-c\",\n    \"OCaml\": \"ocaml\",\n    \"Pascal\": \"pascal\",\n    \"Perl\": \"perl\",\n    \"PHP\": \"php\",\n    \"PL/SQL\": \"plsql\",\n    \"Prolog\": \"prolog\",\n    \"Pure Data\": \"pure-data\",\n    \"Python\": \"python\",\n    \"R\": \"r\",\n    \"Racket\": \"racket\",\n    \"Rebol\": \"rebol\",\n    \"Ruby\": \"ruby\",\n    \"Rust\": \"rust\",\n    \"Scala\": \"scala\",\n    \"Scheme\": \"scheme\",\n    \"Smalltalk\": \"smalltalk\",\n    \"SQL\": \"sql\",\n    \"Swift\": \"swift\",\n    \"Tcl\": \"tcl\",\n    \"TypeScript\": \"typescript\",\n    \"VB\": \"vb\",\n    \"VCL\": \"vcl\",\n    \"Xojo\": \"xojo\",\n    \"Zig\": \"zig\"\n}\n"
        },
        {
          "name": "libraries",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.bash",
          "type": "blob",
          "size": 0.421875,
          "content": "#!/bin/bash\n# Prepares the Netlify preview\n: ${REDIS_STACK_REPOSITORY:=\"github.com/redis-stack/redis-stack-website\"}\nif [[ -n $PRIVATE_ACCESS_TOKEN ]]; then\n    REDIS_STACK_REPOSITORY=\"$PRIVATE_ACCESS_TOKEN@$REDIS_STACK_REPOSITORY\"\nfi\nrepo_dir=$(pwd)\n\nrm -rf website\ngit clone --recurse-submodules https://$REDIS_STACK_REPOSITORY website\ncd website\nREPO_DIR=$repo_dir REPOSITORY_URL=$REPOSITORY_URL PREVIEW_MODE=1 make deps netlify\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "resp2_replies.json",
          "type": "blob",
          "size": 72.41015625,
          "content": "{\n  \"ACL\": [],\n  \"ACL CAT\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements representing ACL categories or commands in a given category.\",\n    \"* [Simple error reply](/docs/reference/protocol-spec#simple-errors): the command returns an error if an invalid category name is given.\"\n  ],\n  \"ACL DELUSER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of users that were deleted. This number will not always match the number of arguments since certain users may not exist.\"\n  ],\n  \"ACL DRYRUN\": [\n    \"Any of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): an error describing why the user can't execute the command.\"\n  ],\n  \"ACL GENPASS\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): pseudorandom data. By default it contains 64 bytes, representing 256 bits of data. If `bits` was given, the output string length is the number of specified bits (rounded to the next multiple of 4) divided by 4.\"\n  ],\n  \"ACL GETUSER\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of ACL rule definitions for the user.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if user does not exist.\"\n  ],\n  \"ACL HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"ACL LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements.\"\n  ],\n  \"ACL LOG\": [\n    \"When called to show security events:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements representing ACL security events.\",\n    \"When called with `RESET`:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the security log was cleared.\"\n  ],\n  \"ACL SAVE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\",\n    \"The command may fail with an error for several reasons: if the file cannot be written or if the server is not configured to use an external ACL file.\"\n  ],\n  \"ACL SETUSER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\",\n    \"If the rules contain errors, the error is returned.\"\n  ],\n  \"ACL USERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): list of existing ACL users.\"\n  ],\n  \"ACL WHOAMI\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the username of the current connection.\"\n  ],\n  \"ACL-LOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"\",\n    \"The command may fail with an error for several reasons: if the file is not readable, if there is an error inside the file, and in such cases, the error will be reported to the user in the error.\",\n    \"Finally, the command will fail if the server is not configured to use an external ACL file.\"\n  ],\n  \"APPEND\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string after the append operation.\"\n  ],\n  \"ASKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"AUTH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`, or an error if the password, or username/password pair, is invalid.\"\n  ],\n  \"BGREWRITEAOF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): a simple string reply indicating that the rewriting started or is about to start ASAP when the call is executed with success.\",\n    \"\",\n    \"The command may reply with an error in certain cases, as documented above.\"\n  ],\n  \"BGSAVE\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `Background saving started`.\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `Background saving scheduled`.\"\n  ],\n  \"BITCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of bits set to 1.\"\n  ],\n  \"BITFIELD\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): each entry being the corresponding result of the sub-command given at the same position.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if OVERFLOW FAIL was given and overflows or underflows are detected.\"\n  ],\n  \"BITFIELD_RO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): each entry being the corresponding result of the sub-command given at the same position.\"\n  ],\n  \"BITOP\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the size of the string stored in the destination key is equal to the size of the longest input string.\"\n  ],\n  \"BITPOS\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the position of the first bit set to 1 or 0 according to the request\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1`. In case the `bit` argument is 1 and the string is empty or composed of just zero bytes\",\n    \"\",\n    \"If we look for set bits (the bit argument is 1) and the string is empty or composed of just zero bytes, -1 is returned.\",\n    \"\",\n    \"If we look for clear bits (the bit argument is 0) and the string only contains bits set to 1, the function returns the first bit not part of the string on the right. So if the string is three bytes set to the value `0xff` the command `BITPOS key 0` will return 24, since up to bit 23 all the bits are 1.\",\n    \"\",\n    \"The function considers the right of the string as padded with zeros if you look for clear bits and specify no range or the _start_ argument **only**.\",\n    \"\",\n    \"However, this behavior changes if you are looking for clear bits and specify a range with both _start_ and _end_.\",\n    \"If a clear bit isn't found in the specified range, the function returns -1 as the user specified a clear range and there are no 0 bits in that range.\"\n  ],\n  \"BLMOVE\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped from the _source_ and pushed to the _destination_.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): the operation timed-out\"\n  ],\n  \"BLMPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when no element could be popped and the _timeout_ is reached.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped, and the second element being an array of the popped elements.\"\n  ],\n  \"BLPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): no element could be popped and the timeout expired\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the key from which the element was popped and the value of the popped element.\"\n  ],\n  \"BRPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): no element could be popped and the timeout expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the key from which the element was popped and the value of the popped element\"\n  ],\n  \"BRPOPLPUSH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped from _source_ and pushed to _destination_.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): the timeout is reached.\"\n  ],\n  \"BZMPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped, and the second element is an array of the popped elements. Every entry in the elements array is also an array that contains the member and its score.\"\n  ],\n  \"BZPOPMAX\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when no element could be popped and the _timeout_ expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the keyname, popped member, and its score.\"\n  ],\n  \"BZPOPMIN\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when no element could be popped and the _timeout_ expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the keyname, popped member, and its score.\"\n  ],\n  \"CLIENT\": [],\n  \"CLIENT CACHING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` or an error if the argument is not \\\"yes\\\" or \\\"no\\\".\"\n  ],\n  \"CLIENT GETNAME\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the connection name of the current connection.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): the connection name was not set.\"\n  ],\n  \"CLIENT GETREDIR\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` when not redirecting notifications to any client.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if client tracking is not enabled.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the ID of the client to which notification are being redirected.\"\n  ],\n  \"CLIENT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"CLIENT ID\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the ID of the client.\"\n  ],\n  \"CLIENT INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a unique string for the current client, as described at the `CLIENT LIST` page.\"\n  ],\n  \"CLIENT KILL\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when called in 3 argument format and the connection has been closed.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): when called in filter/value format, the number of clients killed.\"\n  ],\n  \"CLIENT LIST\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): information and statistics about client connections.\"\n  ],\n  \"CLIENT NO-EVICT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLIENT NO-TOUCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLIENT PAUSE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` or an error if the timeout is invalid.\"\n  ],\n  \"CLIENT REPLY\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when called with `ON`. When called with either `OFF` or `SKIP` sub-commands, no reply is made.\"\n  ],\n  \"CLIENT SETINFO\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the attribute name was successfully set.\"\n  ],\n  \"CLIENT SETNAME\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the connection name was successfully set.\"\n  ],\n  \"CLIENT TRACKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the connection was successfully put in tracking mode or if the tracking mode was successfully disabled. Otherwise, an error is returned.\"\n  ],\n  \"CLIENT TRACKINGINFO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of tracking information sections and their respective values.\"\n  ],\n  \"CLIENT UNBLOCK\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the client was unblocked successfully.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the client wasn't unblocked.\"\n  ],\n  \"CLIENT UNPAUSE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLUSTER\": [],\n  \"CLUSTER ADDSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER ADDSLOTSRANGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER BUMPEPOCH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `BUMPED` if the epoch was incremented.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `STILL` if the node already has the greatest configured epoch in the cluster.\"\n  ],\n  \"CLUSTER COUNT-FAILURE-REPORTS\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of active failure reports for the node.\"\n  ],\n  \"CLUSTER COUNTKEYSINSLOT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of keys in the specified hash slot, or an error if the hash slot is invalid.\"\n  ],\n  \"CLUSTER DELSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER DELSLOTSRANGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER FAILOVER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was accepted and a manual failover is going to be attempted. An error if the operation cannot be executed, for example if the client is connected to a node that is already a master.\"\n  ],\n  \"CLUSTER FLUSHSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`\"\n  ],\n  \"CLUSTER FORGET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was executed successfully. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER GETKEYSINSLOT\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array with up to count elements.\"\n  ],\n  \"CLUSTER HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"CLUSTER INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): A map between named fields and values in the form of `<field>:<value>` lines separated by newlines composed by the two bytes `CRLF`.\"\n  ],\n  \"CLUSTER KEYSLOT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The hash slot number for the specified key\"\n  ],\n  \"CLUSTER LINKS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of maps where each map contains various attributes and their values of a cluster link.\"\n  ],\n  \"CLUSTER MEET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. If the address or port specified are invalid an error is returned.\"\n  ],\n  \"CLUSTER MYID\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the node ID.\"\n  ],\n  \"CLUSTER MYSHARDID\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the node's shard ID.\"\n  ],\n  \"CLUSTER NODES\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the serialized cluster configuration.\"\n  ],\n  \"CLUSTER REPLICAS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of replica nodes replicating from the specified master node provided in the same format used by `CLUSTER NODES`.\"\n  ],\n  \"CLUSTER REPLICATE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SAVECONFIG\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SET-CONFIG-EPOCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SETSLOT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): all the sub-commands return `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SHARDS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of a map of hash ranges and shard nodes describing individual shards.\"\n  ],\n  \"CLUSTER SLAVES\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of replica nodes replicating from the specified master node provided in the same format used by `CLUSTER NODES`.\"\n  ],\n  \"CLUSTER SLOTS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): nested list of slot ranges with networking information.\"\n  ],\n  \"COMMAND\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of command details. The order of the commands in the array is random.\"\n  ],\n  \"COMMAND COUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of commands returned by `COMMAND`.\"\n  ],\n  \"COMMAND DOCS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a map, as a flattened array, where each key is a command name, and each value is the documentary information.\"\n  ],\n  \"COMMAND GETKEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): list of keys from the given command.\"\n  ],\n  \"COMMAND GETKEYSANDFLAGS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of keys from the given command and their usage flags.\"\n  ],\n  \"COMMAND HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"COMMAND INFO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of command details.\"\n  ],\n  \"COMMAND LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of command names.\"\n  ],\n  \"CONFIG\": [],\n  \"CONFIG GET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of configuration parameters matching the provided arguments.\"\n  ],\n  \"CONFIG HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"CONFIG RESETSTAT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CONFIG REWRITE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when the configuration was rewritten properly. Otherwise an error is returned.\"\n  ],\n  \"CONFIG SET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when the configuration was set properly. Otherwise an error is returned.\"\n  ],\n  \"COPY\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _source_ was copied.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _source_ was not copied.\"\n  ],\n  \"DBSIZE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys in the currently-selected database.\"\n  ],\n  \"DEBUG\": [],\n  \"DECR\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after decrementing it.\"\n  ],\n  \"DECRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after decrementing it.\"\n  ],\n  \"DEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that were removed.\"\n  ],\n  \"DISCARD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"DUMP\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The serialized value of the key.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): the key does not exist.\"\n  ],\n  \"ECHO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the given string.\"\n  ],\n  \"EVAL\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVALSHA\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVALSHA_RO\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVAL_RO\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EXEC\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): each element being the reply to each of the commands in the atomic transaction.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): the transaction was aborted because a `WATCH`ed key was touched.\"\n  ],\n  \"EXISTS\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that exist from those specified as arguments.\"\n  ],\n  \"EXPIRE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set; for example, the key doesn't exist, or the operation was skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"EXPIREAT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set; for example, the key doesn't exist, or the operation was skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"EXPIRETIME\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the expiration Unix timestamp in seconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration time.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"FAILOVER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was accepted and a coordinated failover is in progress. An error if the operation cannot be executed.\"\n  ],\n  \"FCALL\": [\n    \"The return value depends on the function that was executed.\"\n  ],\n  \"FCALL_RO\": [\n    \"The return value depends on the function that was executed.\"\n  ],\n  \"FLUSHALL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FLUSHDB\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION\": [],\n  \"FUNCTION DELETE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION DUMP\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the serialized payload\"\n  ],\n  \"FUNCTION FLUSH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions\"\n  ],\n  \"FUNCTION KILL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): information about functions and libraries.\"\n  ],\n  \"FUNCTION LOAD\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the library name that was loaded.\"\n  ],\n  \"FUNCTION RESTORE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION STATS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): information about the function that's currently running and information about the available execution engines.\"\n  ],\n  \"GEOADD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): When used without optional arguments, the number of elements added to the sorted set (excluding score updates).  If the CH option is specified, the number of elements that were changed (added or updated).\"\n  ],\n  \"GEODIST\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): one or both of the elements are missing.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): distance as a double (represented as a string) in the specified units.\"\n  ],\n  \"GEOHASH\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array where each element is the Geohash corresponding to each member name passed as an argument to the command.\"\n  ],\n  \"GEOPOS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): An array where each element is a two elements array representing longitude and latitude (x,y) of each member name passed as argument to the command. Non-existing elements are reported as [Nil reply](/docs/reference/protocol-spec#bulk-strings) elements of the array.\"\n  ],\n  \"GEORADIUS\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    1. The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    1. The Geohash integer.\",\n    \"    1. The coordinates as a two items x,y array (longitude,latitude).\",\n    \"\",\n    \"For example, the command `GEORADIUS Sicily 15 37 200 km WITHCOORD WITHDIST` will return each item in the following way:\",\n    \"\",\n    \"`[\\\"Palermo\\\",\\\"190.4424\\\",[\\\"13.361389338970184\\\",\\\"38.115556395496299\\\"]]`\"\n  ],\n  \"GEORADIUSBYMEMBER\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEORADIUSBYMEMBER_RO\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEORADIUS_RO\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEOSEARCH\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEOSEARCHSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set\"\n  ],\n  \"GET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\"\n  ],\n  \"GETBIT\": [\n    \"The bit value stored at _offset_, one of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0`.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1`.\"\n  ],\n  \"GETDEL\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist or if the key's value type is not a string.\"\n  ],\n  \"GETEX\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of `key`\",\n    \"[Nil reply](/docs/reference/protocol-spec#bulk-strings): if `key` does not exist.\"\n  ],\n  \"GETRANGE\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The substring of the string value stored at key, determined by the offsets start and end (both are inclusive).\"\n  ],\n  \"GETSET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the old value stored at the key.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\"\n  ],\n  \"HDEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of fields that were removed from the hash, excluding any specified but non-existing fields.\"\n  ],\n  \"HELLO\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a list of server properties.\",\n    \"[Simple error reply](/docs/reference/protocol-spec#simple-errors): if the `protover` requested does not exist.\"\n  ],\n  \"HEXISTS\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the hash does not contain the field, or the key does not exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the hash contains the field.\"\n  ],\n  \"HGET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The value associated with the field.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): If the field is not present in the hash or key does not exist.\"\n  ],\n  \"HGETALL\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of fields and their values stored in the hash, or an empty list when key does not exist.\"\n  ],\n  \"HINCRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the field after the increment operation.\"\n  ],\n  \"HINCRBYFLOAT\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the field after the increment operation.\"\n  ],\n  \"HKEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of fields in the hash, or an empty list when the key does not exist\"\n  ],\n  \"HLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of fields in the hash, or 0 when the key does not exist.\"\n  ],\n  \"HMGET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values associated with the given fields, in the same order as they are requested.\"\n  ],\n  \"HMSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"HRANDFIELD\": [\n    \"Any of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key doesn't exist\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a single, randomly selected field when the `count` option is not used\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list containing `count` fields when the `count` option is used, or an empty array if the key does not exists.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of fields and their values when `count` and `WITHVALUES` were both used.\"\n  ],\n  \"HSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a two-element array.\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) of field/value pairs that were scanned.\"\n  ],\n  \"HSET\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of fields that were added.\"\n  ],\n  \"HSETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the field already exists in the hash and no operation was performed.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the field is a new field in the hash and the value was set.\"\n  ],\n  \"HSTRLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the string length of the value associated with the _field_, or zero when the _field_ isn't present in the hash or the _key_ doesn't exist at all.\"\n  ],\n  \"HVALS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values in the hash, or an empty list when the key does not exist\"\n  ],\n  \"INCR\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after the increment.\"\n  ],\n  \"INCRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after the increment.\"\n  ],\n  \"INCRBYFLOAT\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key after the increment.\"\n  ],\n  \"INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a map of info fields, one field per line in the form of `<field>:<value>` where the value can be a comma separated map like `<key>=<val>`. Also contains section header lines starting with `#` and blank lines.\",\n    \"\",\n    \"Lines can contain a section name (starting with a `#` character) or a property. All the properties are in the form of `field:value` terminated by `\\\\r\\\\n`.\"\n  ],\n  \"KEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of keys matching _pattern_.\"\n  ],\n  \"LASTSAVE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): UNIX TIME of the last DB save executed with success.\"\n  ],\n  \"LATENCY\": [],\n  \"LATENCY DOCTOR\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a human readable latency analysis report.\"\n  ],\n  \"LATENCY GRAPH\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): Latency graph\"\n  ],\n  \"LATENCY HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"LATENCY HISTOGRAM\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a map where each key is a command name, and each value is a map with the total calls, and an inner map of the histogram time buckets.\"\n  ],\n  \"LATENCY HISTORY\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array where each element is a two elements array representing the timestamp and the latency of the event.\"\n  ],\n  \"LATENCY LATEST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array where each element is a four elements array representing the event's name, timestamp, latest and all-time latency measurements.\"\n  ],\n  \"LATENCY RESET\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of event time series that were reset.\"\n  ],\n  \"LCS\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the longest common subsequence.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the length of the longest common subsequence when _LEN_ is given.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array with the LCS length and all the ranges in both the strings when _IDX_ is given.\"\n  ],\n  \"LINDEX\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when _index_ is out of range.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the requested element.\"\n  ],\n  \"LINSERT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the list length after a successful insert operation.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` when the key doesn't exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` when the pivot wasn't found.\"\n  ],\n  \"LLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list.\"\n  ],\n  \"LMOVE\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped and pushed.\"\n  ],\n  \"LMPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped and the second element being an array of elements.\"\n  ],\n  \"LOLWUT\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a string containing generative computer art and the Redis version.\"\n  ],\n  \"LPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the value of the first element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of popped elements.\"\n  ],\n  \"LPOS\": [\n    \"Any of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if there is no matching element.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): an integer representing the matching element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): If the COUNT option is given, an array of integers representing the matching elements (or an empty array if there are no matches).\"\n  ],\n  \"LPUSH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"LPUSHX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"LRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of elements in the specified range, or an empty array if the key doesn't exist.\"\n  ],\n  \"LREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of removed elements.\"\n  ],\n  \"LSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"LTRIM\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"MEMORY\": [],\n  \"MEMORY DOCTOR\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a memory problems report.\"\n  ],\n  \"MEMORY HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions\"\n  ],\n  \"MEMORY MALLOC-STATS\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the memory allocator's internal statistics report\"\n  ],\n  \"MEMORY PURGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"MEMORY STATS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of memory usage metrics and their values.\"\n  ],\n  \"MEMORY USAGE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the memory usage in bytes.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\"\n  ],\n  \"MGET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values at the specified keys.\"\n  ],\n  \"MIGRATE\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `NOKEY` when no keys were found in the source instance.\"\n  ],\n  \"MODULE\": [],\n  \"MODULE HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"MODULE LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): list of loaded modules. Each element in the list represents a represents a module, and is in itself a list of property names and their values. The following properties is reported for each loaded module:\",\n    \"* name: the name of the module.\",\n    \"* ver: the version of the module.\"\n  ],\n  \"MODULE LOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was loaded.\"\n  ],\n  \"MODULE LOADEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was loaded.\"\n  ],\n  \"MODULE UNLOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was unloaded.\"\n  ],\n  \"MONITOR\": [\n    \"**Non-standard return value**. Dumps the received commands in an infinite flow.\"\n  ],\n  \"MOVE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _key_ was moved.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _key_ wasn't moved.\"\n  ],\n  \"MSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): always `OK` because `MSET` can't fail.\"\n  ],\n  \"MSETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if no key was set (at least one key already existed).\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if all the keys were set.\"\n  ],\n  \"MULTI\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"OBJECT\": [],\n  \"OBJECT ENCODING\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key doesn't exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the encoding of the object.\"\n  ],\n  \"OBJECT FREQ\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the counter's value.\",\n    \"[Nil reply](/docs/reference/protocol-spec#bulk-strings): if _key_ doesn't exist.\"\n  ],\n  \"OBJECT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions\"\n  ],\n  \"OBJECT IDLETIME\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the idle time in seconds.\",\n    \"[Nil reply](/docs/reference/protocol-spec#bulk-strings): if _key_ doesn't exist.\"\n  ],\n  \"OBJECT REFCOUNT\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of references.\",\n    \"[Nil reply](/docs/reference/protocol-spec#bulk-strings): if _key_ doesn't exist.\"\n  ],\n  \"PERSIST\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _key_ does not exist or does not have an associated timeout.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout has been removed.\"\n  ],\n  \"PEXPIRE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0`if the timeout was not set. For example, if the key doesn't exist, or the operation skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"PEXPIREAT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set. For example, if the key doesn't exist, or the operation was skipped due to the provided arguments.\"\n  ],\n  \"PEXPIRETIME\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): Expiration Unix timestamp in milliseconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration time.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"PFADD\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if at least one HyperLogLog internal register was altered.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if no HyperLogLog internal registers were altered.\"\n  ],\n  \"PFCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the approximated number of unique elements observed via `PFADD`.\"\n  ],\n  \"PFDEBUG\": [],\n  \"PFMERGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PFSELFTEST\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PING\": [\n    \"Any of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `PONG` when no argument is provided.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the provided argument.\"\n  ],\n  \"PSETEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each pattern, one message with the first element being the string `psubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"PSYNC\": [\n    \"**Non-standard return value**, a bulk transfer of the data followed by `PING` and write requests from the master.\"\n  ],\n  \"PTTL\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): TTL in milliseconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"PUBLISH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of clients that received the message. Note that in a Redis Cluster, only clients that are connected to the same node as the publishing client are included in the count.\"\n  ],\n  \"PUBSUB\": [],\n  \"PUBSUB CHANNELS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of active channels, optionally matching the specified pattern.\"\n  ],\n  \"PUBSUB HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"PUBSUB NUMPAT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of patterns all the clients are subscribed to.\"\n  ],\n  \"PUBSUB NUMSUB\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the number of subscribers per channel, each even element (including the 0th) is channel name, each odd element is the number of subscribers\"\n  ],\n  \"PUBSUB SHARDCHANNELS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of active channels, optionally matching the specified pattern.\"\n  ],\n  \"PUBSUB SHARDNUMSUB\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the number of subscribers per shard channel, each even element (including the 0th) is channel name, each odd element is the number of subscribers.\"\n  ],\n  \"PUNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each pattern, one message with the first element being the string `punsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"QUIT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): OK.\"\n  ],\n  \"RANDOMKEY\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when the database is empty.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a random key in database.\"\n  ],\n  \"READONLY\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"READWRITE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RENAME\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RENAMENX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _key_ was renamed to _newkey_.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _newkey_ already exists.\"\n  ],\n  \"REPLCONF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"REPLICAOF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `RESET`.\"\n  ],\n  \"RESTORE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RESTORE-ASKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"ROLE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): where the first element is one of `master`, `slave`, or `sentinel`, and the additional elements are role-specific as illustrated above.\"\n  ],\n  \"RPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the value of the last element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of popped elements.\"\n  ],\n  \"RPOPLPUSH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped and pushed.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the source list is empty.\"\n  ],\n  \"RPUSH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"RPUSHX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"SADD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements that were added to the set, not including all the elements already present in the set.\"\n  ],\n  \"SAVE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, an array with two elements.\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) with the names of scanned keys.\"\n  ],\n  \"SCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the cardinality (number of elements) of the set, or `0` if the key does not exist.\"\n  ],\n  \"SCRIPT\": [],\n  \"SCRIPT DEBUG\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT EXISTS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of integers that correspond to the specified SHA1 digest arguments.\"\n  ],\n  \"SCRIPT FLUSH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"SCRIPT KILL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT LOAD\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the SHA1 digest of the script added into the script cache.\"\n  ],\n  \"SDIFF\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with members of the resulting set.\"\n  ],\n  \"SDIFFSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set.\"\n  ],\n  \"SELECT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SET\": [\n    \"Any of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): `GET` not given: Operation was aborted (conflict with one of the `XX`/`NX` options).\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. `GET` not given: The key was set.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): `GET` given: The key didn't exist before the `SET`.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `GET` given: The previous value of the key.\"\n  ],\n  \"SETBIT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the original bit value stored at _offset_.\"\n  ],\n  \"SETEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the key was not set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the key was set.\"\n  ],\n  \"SETRANGE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string after it was modified by the command.\"\n  ],\n  \"SHUTDOWN\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if _ABORT_ was specified and shutdown was aborted. On successful shutdown, nothing is returned because the server quits and the connection is closed. On failure, an error is returned.\"\n  ],\n  \"SINTER\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with the members of the resulting set.\"\n  ],\n  \"SINTERCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting intersection.\"\n  ],\n  \"SINTERSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set.\"\n  ],\n  \"SISMEMBER\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the element is not a member of the set, or when the key does not exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the element is a member of the set.\"\n  ],\n  \"SLAVEOF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SLOWLOG\": [],\n  \"SLOWLOG GET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of slow log entries per the above format.\"\n  ],\n  \"SLOWLOG HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"SLOWLOG LEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries in the slow log.\"\n  ],\n  \"SLOWLOG RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SMEMBERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): all members of the set.\"\n  ],\n  \"SMISMEMBER\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list representing the membership of the given elements, in the same order as they are requested.\"\n  ],\n  \"SMOVE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the element is moved.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the element is not a member of _source_ and no operation was performed.\"\n  ],\n  \"SORT\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): without passing the _STORE_ option, the command returns a list of sorted elements.\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): when the _STORE_ option is specified, the command returns the number of sorted elements in the destination list.\"\n  ],\n  \"SORT_RO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sorted elements.\"\n  ],\n  \"SPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the removed member.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of the removed members.\"\n  ],\n  \"SPUBLISH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of clients that received the message. Note that in a Redis Cluster, only clients that are connected to the same node as the publishing client are included in the count\"\n  ],\n  \"SRANDMEMBER\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): without the additional _count_ argument, the command returns a randomly selected member, or a [Nil reply](/docs/reference/protocol-spec#bulk-strings) when _key_ doesn't exist.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the optional _count_ argument is passed, the command returns an array of members, or an empty array when _key_ doesn't exist.\"\n  ],\n  \"SREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members that were removed from the set, not including non existing members.\"\n  ],\n  \"SSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, an array with two elements:\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) with the names of scanned members.\"\n  ],\n  \"SSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each shard channel, one message with the first element being the string `ssubscribe` is pushed as a confirmation that the command succeeded. Note that this command can also return a -MOVED redirect.\"\n  ],\n  \"STRLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string stored at key, or 0 when the key does not exist.\"\n  ],\n  \"SUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each channel, one message with the first element being the string `subscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"SUBSTR\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the substring of the string value stored at key, determined by the offsets start and end (both are inclusive).\"\n  ],\n  \"SUNION\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with members of the resulting set.\"\n  ],\n  \"SUNIONSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set.\"\n  ],\n  \"SUNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each shard channel, one message with the first element being the string `sunsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"SWAPDB\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SYNC\": [\n    \"**Non-standard return value**, a bulk transfer of the data followed by `PING` and write requests from the master.\"\n  ],\n  \"TIME\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, a two-element array consisting of the Unix timestamp in seconds and the microseconds' count.\"\n  ],\n  \"TOUCH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of touched keys.\"\n  ],\n  \"TTL\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): TTL in seconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"TYPE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): the type of _key_, or `none` when _key_ doesn't exist.\"\n  ],\n  \"UNLINK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that were unlinked.\"\n  ],\n  \"UNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each channel, one message with the first element being the string `unsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"UNWATCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"WAIT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the command returns the number of replicas reached by all the writes performed in the context of the current connection.\"\n  ],\n  \"WAITAOF\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): The command returns an array of two integers:\",\n    \"1. The first is the number of local Redises (0 or 1) that have fsynced to AOF  all writes performed in the context of the current connection\",\n    \"2. The second is the number of replicas that have acknowledged doing the same.\"\n  ],\n  \"WATCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XACK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The command returns the number of messages successfully acknowledged. Certain message IDs may no longer be part of the PEL (for example because they have already been acknowledged), and XACK will not count them as successfully acknowledged.\"\n  ],\n  \"XADD\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The ID of the added entry. The ID is the one automatically generated if an asterisk (`*`) is passed as the _id_ argument, otherwise the command just returns the same ID specified by the user during insertion.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the NOMKSTREAM option is given and the key doesn't exist.\"\n  ],\n  \"XAUTOCLAIM\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays), specifically, an array with three elements:\",\n    \"1. A stream ID to be used as the _start_ argument for the next call to XAUTOCLAIM.\",\n    \"2. An [Array reply](/docs/reference/protocol-spec#arrays) containing all the successfully claimed messages in the same format as `XRANGE`.\",\n    \"3. An [Array reply](/docs/reference/protocol-spec#arrays) containing message IDs that no longer exist in the stream, and were deleted from the PEL in which they were found.\"\n  ],\n  \"XCLAIM\": [\n    \"Any of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the _JUSTID_ option is specified, an array of IDs of messages successfully claimed.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of stream entries, each of which contains an array of two elements, the entry ID and the entry data itself.\"\n  ],\n  \"XDEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries that were deleted.\"\n  ],\n  \"XGROUP\": [],\n  \"XGROUP CREATE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XGROUP CREATECONSUMER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of created consumers, either 0 or 1.\"\n  ],\n  \"XGROUP DELCONSUMER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of pending messages the consumer had before it was deleted.\"\n  ],\n  \"XGROUP DESTROY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of destroyed consumer groups, either 0 or 1.\"\n  ],\n  \"XGROUP HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"XGROUP SETID\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XINFO\": [],\n  \"XINFO CONSUMERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of consumers and their attributes.\"\n  ],\n  \"XINFO GROUPS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of consumer groups.\"\n  ],\n  \"XINFO HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"XINFO STREAM\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the _FULL_ argument is used, a list of information about a stream in summary form.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the _FULL_ argument is used, a list of information about a stream in extended form.\"\n  ],\n  \"XLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries of the stream at _key_.\"\n  ],\n  \"XPENDING\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): different data depending on the way XPENDING is called, as explained on this page.\"\n  ],\n  \"XRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of stream entries with IDs matching the specified range.\"\n  ],\n  \"XREAD\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array where each element is an array composed of a two elements containing the key name and the entries reported for that key. The entries reported are full stream entries, having IDs and the list of all the fields and values. Field and values are guaranteed to be reported in the same order they were added by `XADD`.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the _BLOCK_ option is given and a timeout occurs, or if there is no stream that can be served.\"\n  ],\n  \"XREADGROUP\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array where each element is an array composed of a two elements containing the key name and the entries reported for that key. The entries reported are full stream entries, having IDs and the list of all the fields and values. Field and values are guaranteed to be reported in the same order they were added by `XADD`.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the _BLOCK_ option is given and a timeout occurs, or if there is no stream that can be served.\"\n  ],\n  \"XREVRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): The command returns the entries with IDs matching the specified range. The returned entries are complete, which means that the ID and all the fields they are composed of are returned. Moreover, the entries are returned with their fields and values in the same order as `XADD` added them.\"\n  ],\n  \"XSETID\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XTRIM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of entries deleted from the stream.\"\n  ],\n  \"ZADD\": [\n    \"Any of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the operation was aborted because of a conflict with one of the _XX/NX/LT/GT_ options.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the number of new members when the _CH_ option is not used.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the number of new or updated members when the _CH_ option is used.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the updated score of the member when the _INCR_ option is used.\"\n  ],\n  \"ZCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the cardinality (number of members) of the sorted set, or 0 if the key doesn't exist.\"\n  ],\n  \"ZCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the specified score range.\"\n  ],\n  \"ZDIFF\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the result of the difference including, optionally, scores when the _WITHSCORES_ option is used.\"\n  ],\n  \"ZDIFFSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting sorted set at _destination_.\"\n  ],\n  \"ZINCRBY\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the new score of _member_ as a double precision floating point number.\"\n  ],\n  \"ZINTER\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the result of the intersection including, optionally, scores when the _WITHSCORES_ option is used.\"\n  ],\n  \"ZINTERCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting intersection.\"\n  ],\n  \"ZINTERSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting sorted set at the _destination_.\"\n  ],\n  \"ZLEXCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the specified score range.\"\n  ],\n  \"ZMPOP\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): when no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): A two-element array with the first element being the name of the key from which elements were popped, and the second element is an array of the popped elements. Every entry in the elements array is also an array that contains the member and its score.\"\n  ],\n  \"ZMSCORE\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the member does not exist in the sorted set.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) _member_ scores as double-precision floating point numbers.\"\n  ],\n  \"ZPOPMAX\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of popped elements and scores.\"\n  ],\n  \"ZPOPMIN\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of popped elements and scores.\"\n  ],\n  \"ZRANDMEMBER\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): without the additional _count_ argument, the command returns a randomly selected member, or [Nil reply](/docs/reference/protocol-spec#bulk-strings) when _key_ doesn't exist.\",\n    \"[Array reply](/docs/reference/protocol-spec#arrays): when the additional _count_ argument is passed, the command returns an array of members, or an empty array when _key_ doesn't exist. If the _WITHSCORES_ modifier is used, the reply is a list of members and their scores from the sorted set.\"\n  ],\n  \"ZRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of members in the specified range with, optionally, their scores when the _WITHSCORES_ option is given.\"\n  ],\n  \"ZRANGEBYLEX\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of elements in the specified score range.\"\n  ],\n  \"ZRANGEBYSCORE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of the members with, optionally, their scores in the specified score range.\"\n  ],\n  \"ZRANGESTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting sorted set.\"\n  ],\n  \"ZRANK\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist or the member does not exist in the sorted set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the rank of the member when _WITHSCORE_ is not used.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the rank and score of the member when _WITHSCORE_ is used.\"\n  ],\n  \"ZREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members removed from the sorted set, not including non-existing members.\"\n  ],\n  \"ZREMRANGEBYLEX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members removed.\"\n  ],\n  \"ZREMRANGEBYRANK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members removed.\"\n  ],\n  \"ZREMRANGEBYSCORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members removed.\"\n  ],\n  \"ZREVRANGE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of members in the specified range, optionally with their scores if _WITHSCORE_ was used.\"\n  ],\n  \"ZREVRANGEBYLEX\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of members in the specified score range.\"\n  ],\n  \"ZREVRANGEBYSCORE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of the members and, optionally, their scores in the specified score range.\"\n  ],\n  \"ZREVRANK\": [\n    \"One of the following:\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if the key does not exist or the member does not exist in the sorted set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): The rank of the member when _WITHSCORE_ is not used.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): The rank and score of the member when _WITHSCORE_ is used.\"\n  ],\n  \"ZSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): cursor and scan response in array form.\"\n  ],\n  \"ZSCORE\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the score of the member (a double-precision floating point number), represented as a string.\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if _member_ does not exist in the sorted set, or the key does not exist.\"\n  ],\n  \"ZUNION\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the result of the union with, optionally, their scores when _WITHSCORES_ is used.\"\n  ],\n  \"ZUNIONSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting sorted set.\"\n  ]\n}\n"
        },
        {
          "name": "resp3_replies.json",
          "type": "blob",
          "size": 75.375,
          "content": "{\n  \"ACL\": [],\n  \"ACL CAT\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements representing ACL categories or commands in a given category.\",\n    \"* [Simple error reply](/docs/reference/protocol-spec#simple-errors): the command returns an error if an invalid category name is given.\"\n  ],\n  \"ACL DELUSER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of users that were deleted. This number will not always match the number of arguments since certain users may not exist.\"\n  ],\n  \"ACL DRYRUN\": [\n    \"Any of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): an error describing why the user can't execute the command.\"\n  ],\n  \"ACL GENPASS\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): pseudorandom data. By default it contains 64 bytes, representing 256 bits of data. If `bits` was given, the output string length is the number of specified bits (rounded to the next multiple of 4) divided by 4.\"\n  ],\n  \"ACL GETUSER\": [\n    \"One of the following:\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): a set of ACL rule definitions for the user\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if user does not exist.\"\n  ],\n  \"ACL HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"ACL LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements.\"\n  ],\n  \"ACL LOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"\",\n    \"The command may fail with an error for several reasons: if the file is not readable, if there is an error inside the file, and in such cases, the error will be reported to the user in the error.\",\n    \"Finally, the command will fail if the server is not configured to use an external ACL file.\"\n  ],\n  \"ACL LOG\": [\n    \"When called to show security events:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) elements representing ACL security events.\",\n    \"When called with `RESET`:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the security log was cleared.\"\n  ],\n  \"ACL SAVE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\",\n    \"The command may fail with an error for several reasons: if the file cannot be written or if the server is not configured to use an external ACL file.\"\n  ],\n  \"ACL SETUSER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\",\n    \"If the rules contain errors, the error is returned.\"\n  ],\n  \"ACL USERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): list of existing ACL users.\"\n  ],\n  \"ACL WHOAMI\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the username of the current connection.\"\n  ],\n  \"APPEND\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string after the append operation.\"\n  ],\n  \"ASKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"AUTH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`, or an error if the password, or username/password pair, is invalid.\"\n  ],\n  \"BGREWRITEAOF\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a simple string reply indicating that the rewriting started or is about to start ASAP when the call is executed with success.\",\n    \"\",\n    \"The command may reply with an error in certain cases, as documented above.\"\n  ],\n  \"BGSAVE\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `Background saving started`.\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `Background saving scheduled`.\"\n  ],\n  \"BITCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of bits set to 1.\"\n  ],\n  \"BITFIELD\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): each entry being the corresponding result of the sub-command given at the same position.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if OVERFLOW FAIL was given and overflows or underflows are detected.\"\n  ],\n  \"BITFIELD_RO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): each entry being the corresponding result of the sub-command given at the same position.\"\n  ],\n  \"BITOP\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the size of the string stored in the destination key is equal to the size of the longest input string.\"\n  ],\n  \"BITPOS\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the position of the first bit set to 1 or 0 according to the request\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1`. In case the `bit` argument is 1 and the string is empty or composed of just zero bytes\",\n    \"\",\n    \"If we look for set bits (the bit argument is 1) and the string is empty or composed of just zero bytes, -1 is returned.\",\n    \"\",\n    \"If we look for clear bits (the bit argument is 0) and the string only contains bits set to 1, the function returns the first bit not part of the string on the right. So if the string is three bytes set to the value `0xff` the command `BITPOS key 0` will return 24, since up to bit 23 all the bits are 1.\",\n    \"\",\n    \"The function considers the right of the string as padded with zeros if you look for clear bits and specify no range or the _start_ argument **only**.\",\n    \"\",\n    \"However, this behavior changes if you are looking for clear bits and specify a range with both _start_ and _end_.\",\n    \"If a clear bit isn't found in the specified range, the function returns -1 as the user specified a clear range and there are no 0 bits in that range.\"\n  ],\n  \"BLMOVE\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped from the _source_ and pushed to the _destination_.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): the operation timed-out\"\n  ],\n  \"BLMPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when no element could be popped and the _timeout_ is reached.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped, and the second element being an array of the popped elements.\"\n  ],\n  \"BLPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): no element could be popped and the timeout expired\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the key from which the element was popped and the value of the popped element.\"\n  ],\n  \"BRPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): no element could be popped and the timeout expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the key from which the element was popped and the value of the popped element\"\n  ],\n  \"BRPOPLPUSH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped from _source_ and pushed to _destination_.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): the timeout is reached.\"\n  ],\n  \"BZMPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped, and the second element is an array of the popped elements. Every entry in the elements array is also an array that contains the member and its score.\"\n  ],\n  \"BZPOPMAX\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when no element could be popped and the _timeout_ expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the keyname, popped member, and its score.\"\n  ],\n  \"BZPOPMIN\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when no element could be popped and the _timeout_ expired.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the keyname, popped member, and its score.\"\n  ],\n  \"CLIENT\": [],\n  \"CLIENT CACHING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` or an error if the argument is not \\\"yes\\\" or \\\"no\\\".\"\n  ],\n  \"CLIENT GETNAME\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the connection name of the current connection.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): the connection name was not set.\"\n  ],\n  \"CLIENT GETREDIR\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` when not redirecting notifications to any client.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if client tracking is not enabled.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the ID of the client to which notification are being redirected.\"\n  ],\n  \"CLIENT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"CLIENT ID\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the ID of the client.\"\n  ],\n  \"CLIENT INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a unique string for the current client, as described at the `CLIENT LIST` page.\"\n  ],\n  \"CLIENT KILL\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when called in 3 argument format and the connection has been closed.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): when called in filter/value format, the number of clients killed.\"\n  ],\n  \"CLIENT LIST\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): information and statistics about client connections.\"\n  ],\n  \"CLIENT NO-EVICT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLIENT NO-TOUCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLIENT PAUSE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` or an error if the timeout is invalid.\"\n  ],\n  \"CLIENT REPLY\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when called with `ON`. When called with either `OFF` or `SKIP` sub-commands, no reply is made.\"\n  ],\n  \"CLIENT SETINFO\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the attribute name was successfully set.\"\n  ],\n  \"CLIENT SETNAME\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the connection name was successfully set.\"\n  ],\n  \"CLIENT TRACKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the connection was successfully put in tracking mode or if the tracking mode was successfully disabled. Otherwise, an error is returned.\"\n  ],\n  \"CLIENT TRACKINGINFO\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a list of tracking information sections and their respective values.\"\n  ],\n  \"CLIENT UNBLOCK\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the client was unblocked successfully.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the client wasn't unblocked.\"\n  ],\n  \"CLIENT UNPAUSE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLUSTER\": [],\n  \"CLUSTER ADDSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER ADDSLOTSRANGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER BUMPEPOCH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `BUMPED` if the epoch was incremented.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `STILL` if the node already has the greatest configured epoch in the cluster.\"\n  ],\n  \"CLUSTER COUNT-FAILURE-REPORTS\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of active failure reports for the node.\"\n  ],\n  \"CLUSTER COUNTKEYSINSLOT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of keys in the specified hash slot, or an error if the hash slot is invalid.\"\n  ],\n  \"CLUSTER DELSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER DELSLOTSRANGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER FAILOVER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was accepted and a manual failover is going to be attempted. An error if the operation cannot be executed, for example if the client is connected to a node that is already a master.\"\n  ],\n  \"CLUSTER FLUSHSLOTS\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CLUSTER FORGET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was executed successfully. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER GETKEYSINSLOT\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array with up to count elements.\"\n  ],\n  \"CLUSTER HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of subcommands and their descriptions.\"\n  ],\n  \"CLUSTER INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): A map between named fields and values in the form of <field>:<value> lines separated by newlines composed by the two bytes CRLF\"\n  ],\n  \"CLUSTER KEYSLOT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The hash slot number for the specified key\"\n  ],\n  \"CLUSTER LINKS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of [Map reply](/docs/reference/protocol-spec#maps) where each map contains various attributes and their values of a cluster link.\"\n  ],\n  \"CLUSTER MEET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. If the address or port specified are invalid an error is returned.\"\n  ],\n  \"CLUSTER MYID\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the node ID.\"\n  ],\n  \"CLUSTER MYSHARDID\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the node's shard ID.\"\n  ],\n  \"CLUSTER NODES\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the serialized cluster configuration.\"\n  ],\n  \"CLUSTER REPLICAS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of replica nodes replicating from the specified master node provided in the same format used by `CLUSTER NODES`.\"\n  ],\n  \"CLUSTER REPLICATE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SAVECONFIG\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SET-CONFIG-EPOCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SETSLOT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): all the sub-commands return `OK` if the command was successful. Otherwise an error is returned.\"\n  ],\n  \"CLUSTER SHARDS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of [Map reply](/docs/reference/protocol-spec#maps) of hash ranges and shard nodes describing individual shards.\"\n  ],\n  \"CLUSTER SLAVES\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of replica nodes replicating from the specified master node provided in the same format used by `CLUSTER NODES`.\"\n  ],\n  \"CLUSTER SLOTS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): nested list of slot ranges with networking information.\"\n  ],\n  \"COMMAND\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of command details. The order of the commands in the array is random.\"\n  ],\n  \"COMMAND COUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of commands returned by `COMMAND`.\"\n  ],\n  \"COMMAND DOCS\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a map where each key is a command name, and each value is the documentary information.\"\n  ],\n  \"COMMAND GETKEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of keys from the given command.\"\n  ],\n  \"COMMAND GETKEYSANDFLAGS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of keys from the given command and their usage flags.\"\n  ],\n  \"COMMAND HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"COMMAND INFO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a nested list of command details.\"\n  ],\n  \"COMMAND LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of command names.\"\n  ],\n  \"CONFIG\": [],\n  \"CONFIG GET\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a list of configuration parameters matching the provided arguments.\"\n  ],\n  \"CONFIG HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"CONFIG RESETSTAT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"CONFIG REWRITE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when the configuration was rewritten properly. Otherwise an error is returned.\"\n  ],\n  \"CONFIG SET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` when the configuration was set properly. Otherwise an error is returned.\"\n  ],\n  \"COPY\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _source_ was copied.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _source_ was not copied.\"\n  ],\n  \"DBSIZE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys in the currently-selected database.\"\n  ],\n  \"DEBUG\": [],\n  \"DECR\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after decrementing it.\"\n  ],\n  \"DECRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after decrementing it.\"\n  ],\n  \"DEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that were removed.\"\n  ],\n  \"DISCARD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"DUMP\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the serialized value of the key.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): the key does not exist.\"\n  ],\n  \"ECHO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the given string.\"\n  ],\n  \"EVAL\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVALSHA\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVALSHA_RO\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EVAL_RO\": [\n    \"The return value depends on the script that was executed.\"\n  ],\n  \"EXEC\": [\n    \"One of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): each element being the reply to each of the commands in the atomic transaction.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): the transaction was aborted because a `WATCH`ed key was touched.\"\n  ],\n  \"EXISTS\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that exist from those specified as arguments.\"\n  ],\n  \"EXPIRE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set; for example, the key doesn't exist, or the operation was skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"EXPIREAT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set; for example, the key doesn't exist, or the operation was skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"EXPIRETIME\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the expiration Unix timestamp in seconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration time.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"FAILOVER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the command was accepted and a coordinated failover is in progress. An error if the operation cannot be executed.\"\n  ],\n  \"FCALL\": [\n    \"The return value depends on the function that was executed.\"\n  ],\n  \"FCALL_RO\": [\n    \"The return value depends on the function that was executed.\"\n  ],\n  \"FLUSHALL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FLUSHDB\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION\": [],\n  \"FUNCTION DELETE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION DUMP\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the serialized payload\"\n  ],\n  \"FUNCTION FLUSH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"FUNCTION KILL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): information about functions and libraries.\"\n  ],\n  \"FUNCTION LOAD\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the library name that was loaded.\"\n  ],\n  \"FUNCTION RESTORE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"FUNCTION STATS\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): information about the function that's currently running and information about the available execution engines.\"\n  ],\n  \"GEOADD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): When used without optional arguments, the number of elements added to the sorted set (excluding score updates).  If the CH option is specified, the number of elements that were changed (added or updated).\"\n  ],\n  \"GEODIST\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): one or both of the elements are missing.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): distance as a double (represented as a string) in the specified units.\"\n  ],\n  \"GEOHASH\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): An array where each element is the Geohash corresponding to each member name passed as an argument to the command.\"\n  ],\n  \"GEOPOS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): An array where each element is a two elements array representing longitude and latitude (x,y) of each member name passed as argument to the command. Non-existing elements are reported as [Null reply](/docs/reference/protocol-spec#nulls) elements of the array.\"\n  ],\n  \"GEORADIUS\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    1. The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    1. The Geohash integer.\",\n    \"    1. The coordinates as a two items x,y array (longitude,latitude).\",\n    \"\",\n    \"For example, the command `GEORADIUS Sicily 15 37 200 km WITHCOORD WITHDIST` will return each item in the following way:\",\n    \"\",\n    \"`[\\\"Palermo\\\",\\\"190.4424\\\",[\\\"13.361389338970184\\\",\\\"38.115556395496299\\\"]]`\"\n  ],\n  \"GEORADIUSBYMEMBER\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEORADIUSBYMEMBER_RO\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEORADIUS_RO\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEOSEARCH\": [\n    \"One of the following:\",\n    \"* If no `WITH*` option is specified, an [Array reply](/docs/reference/protocol-spec#arrays) of matched member names\",\n    \"* If `WITHCOORD`, `WITHDIST`, or `WITHHASH` options are specified, the command returns an [Array reply](/docs/reference/protocol-spec#arrays) of arrays, where each sub-array represents a single item:\",\n    \"    * The distance from the center as a floating point number, in the same unit specified in the radius.\",\n    \"    * The Geohash integer.\",\n    \"    * The coordinates as a two items x,y array (longitude,latitude).\"\n  ],\n  \"GEOSEARCHSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set\"\n  ],\n  \"GET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): key does not exist.\"\n  ],\n  \"GETBIT\": [\n    \"The bit value stored at _offset_, one of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0`.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1`.\"\n  ],\n  \"GETDEL\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist or if the key's value type is not a string.\"\n  ],\n  \"GETEX\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of `key`\",\n    \"[Null reply](/docs/reference/protocol-spec#nulls): if `key` does not exist.\"\n  ],\n  \"GETRANGE\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The substring of the string value stored at key, determined by the offsets start and end (both are inclusive).\"\n  ],\n  \"GETSET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the old value stored at the key.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist.\"\n  ],\n  \"HDEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of fields that were removed from the hash, excluding any specified but non-existing fields.\"\n  ],\n  \"HELLO\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a list of server properties.\",\n    \"[Simple error reply](/docs/reference/protocol-spec#simple-errors): if the `protover` requested does not exist.\"\n  ],\n  \"HEXISTS\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the hash does not contain the field, or the key does not exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the hash contains the field.\"\n  ],\n  \"HGET\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The value associated with the field.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): If the field is not present in the hash or key does not exist.\"\n  ],\n  \"HGETALL\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a map of fields and their values stored in the hash, or an empty list when key does not exist.\"\n  ],\n  \"HINCRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the field after the increment operation.\"\n  ],\n  \"HINCRBYFLOAT\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The value of the field after the increment operation.\"\n  ],\n  \"HKEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of fields in the hash, or an empty list when the key does not exist.\"\n  ],\n  \"HLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of the fields in the hash, or 0 when the key does not exist.\"\n  ],\n  \"HMGET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values associated with the given fields, in the same order as they are requested.\"\n  ],\n  \"HMSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"HRANDFIELD\": [\n    \"Any of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key doesn't exist\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a single, randomly selected field when the `count` option is not used\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list containing `count` fields when the `count` option is used, or an empty array if the key does not exists.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of fields and their values when `count` and `WITHVALUES` were both used.\"\n  ],\n  \"HSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a two-element array.\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) of field/value pairs that were scanned.\"\n  ],\n  \"HSET\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of fields that were added.\"\n  ],\n  \"HSETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the field already exists in the hash and no operation was performed.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the field is a new field in the hash and the value was set.\"\n  ],\n  \"HSTRLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the string length of the value associated with the _field_, or zero when the _field_ isn't present in the hash or the _key_ doesn't exist at all.\"\n  ],\n  \"HVALS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values in the hash, or an empty list when the key does not exist.\"\n  ],\n  \"INCR\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after the increment.\"\n  ],\n  \"INCRBY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the value of the key after the increment.\"\n  ],\n  \"INCRBYFLOAT\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the value of the key after the increment.\"\n  ],\n  \"INFO\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a map of info fields, one field per line in the form of `<field>:<value>` where the value can be a comma separated map like `<key>=<val>`. Also contains section header lines starting with `#` and blank lines.\",\n    \"\",\n    \"Lines can contain a section name (starting with a `#` character) or a property. All the properties are in the form of `field:value` terminated by `\\\\r\\\\n`.\"\n  ],\n  \"KEYS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of keys matching _pattern_.\"\n  ],\n  \"LASTSAVE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): UNIX TIME of the last DB save executed with success.\"\n  ],\n  \"LATENCY\": [],\n  \"LATENCY DOCTOR\": [\n    \"[Verbatim string reply](/docs/reference/protocol-spec#verbatim-strings): a human readable latency analysis report.\"\n  ],\n  \"LATENCY GRAPH\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): Latency graph\"\n  ],\n  \"LATENCY HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"LATENCY HISTOGRAM\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): a map where each key is a command name, and each value is a map with the total calls, and an inner map of the histogram time buckets.\"\n  ],\n  \"LATENCY HISTORY\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array where each element is a two elements array representing the timestamp and the latency of the event.\"\n  ],\n  \"LATENCY LATEST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array where each element is a four elements array representing the event's name, timestamp, latest and all-time latency measurements.\"\n  ],\n  \"LATENCY RESET\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of event time series that were reset.\"\n  ],\n  \"LCS\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the longest common subsequence.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the length of the longest common subsequence when _LEN_ is given.\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): a map with the LCS length and all the ranges in both the strings when _IDX_ is given.\"\n  ],\n  \"LINDEX\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when _index_ is out of range.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the requested element.\"\n  ],\n  \"LINSERT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the list length after a successful insert operation.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` when the key doesn't exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` when the pivot wasn't found.\"\n  ],\n  \"LLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list.\"\n  ],\n  \"LMOVE\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped and pushed.\"\n  ],\n  \"LMPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a two-element array with the first element being the name of the key from which elements were popped and the second element being an array of elements.\"\n  ],\n  \"LOLWUT\": [\n    \"[Verbatim string reply](/docs/reference/protocol-spec#verbatim-strings): a string containing generative computer art and the Redis version.\"\n  ],\n  \"LPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the value of the first element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of popped elements.\"\n  ],\n  \"LPOS\": [\n    \"Any of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if there is no matching element.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): an integer representing the matching element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): If the COUNT option is given, an array of integers representing the matching elements (or an empty array if there are no matches).\"\n  ],\n  \"LPUSH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"LPUSHX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"LRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of elements in the specified range, or an empty array if the key doesn't exist.\"\n  ],\n  \"LREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of removed elements.\"\n  ],\n  \"LSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"LTRIM\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"MEMORY\": [],\n  \"MEMORY DOCTOR\": [\n    \"[Verbatim string reply](/docs/reference/protocol-spec#verbatim-strings): a memory problems report.\"\n  ],\n  \"MEMORY HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"MEMORY MALLOC-STATS\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The memory allocator's internal statistics report.\"\n  ],\n  \"MEMORY PURGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"MEMORY STATS\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): memory usage metrics and their values.\"\n  ],\n  \"MEMORY USAGE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the memory usage in bytes.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist.\"\n  ],\n  \"MGET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of values at the specified keys.\"\n  ],\n  \"MIGRATE\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` on success.\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `NOKEY` when no keys were found in the source instance.\"\n  ],\n  \"MODULE\": [],\n  \"MODULE HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions\"\n  ],\n  \"MODULE LIST\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): list of loaded modules. Each element in the list represents a represents a module, and is a [Map reply](/docs/reference/protocol-spec#maps) of property names and their values. The following properties is reported for each loaded module:\",\n    \"* name: the name of the module.\",\n    \"* ver: the version of the module.\"\n  ],\n  \"MODULE LOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was loaded.\"\n  ],\n  \"MODULE LOADEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was loaded.\"\n  ],\n  \"MODULE UNLOAD\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if the module was unloaded.\"\n  ],\n  \"MONITOR\": [\n    \"**Non-standard return value**. Dumps the received commands in an infinite flow.\"\n  ],\n  \"MOVE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _key_ was moved.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _key_ wasn't moved.\"\n  ],\n  \"MSET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): always `OK` because `MSET` can't fail.\"\n  ],\n  \"MSETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if no key was set (at least one key already existed).\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if all the keys were set.\"\n  ],\n  \"MULTI\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"OBJECT\": [],\n  \"OBJECT ENCODING\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key doesn't exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the encoding of the object.\"\n  ],\n  \"OBJECT FREQ\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the counter's value.\",\n    \"[Null reply](/docs/reference/protocol-spec#nulls): if _key_ doesn't exist.\"\n  ],\n  \"OBJECT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"OBJECT IDLETIME\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the idle time in seconds.\",\n    \"[Null reply](/docs/reference/protocol-spec#nulls): if _key_ doesn't exist.\"\n  ],\n  \"OBJECT REFCOUNT\": [\n    \"One of the following:\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of references.\",\n    \"[Null reply](/docs/reference/protocol-spec#nulls): if _key_ doesn't exist.\"\n  ],\n  \"PERSIST\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _key_ does not exist or does not have an associated timeout.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout has been removed.\"\n  ],\n  \"PEXPIRE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0`if the timeout was not set. For example, if the key doesn't exist, or the operation skipped because of the provided arguments.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\"\n  ],\n  \"PEXPIREAT\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the timeout was set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the timeout was not set. For example, if the key doesn't exist, or the operation was skipped due to the provided arguments.\"\n  ],\n  \"PEXPIRETIME\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): Expiration Unix timestamp in milliseconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration time.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"PFADD\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if at least one HyperLogLog internal register was altered.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if no HyperLogLog internal registers were altered.\"\n  ],\n  \"PFCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the approximated number of unique elements observed via `PFADD`\"\n  ],\n  \"PFDEBUG\": [],\n  \"PFMERGE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PFSELFTEST\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PING\": [\n    \"Any of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `PONG` when no argument is provided.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the provided argument.\"\n  ],\n  \"PSETEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"PSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each pattern, one message with the first element being the string `psubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"PSYNC\": [\n    \"**Non-standard return value**, a bulk transfer of the data followed by `PING` and write requests from the master.\"\n  ],\n  \"PTTL\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): TTL in milliseconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"PUBLISH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of clients that received the message. Note that in a Redis Cluster, only clients that are connected to the same node as the publishing client are included in the count.\"\n  ],\n  \"PUBSUB\": [],\n  \"PUBSUB CHANNELS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of active channels, optionally matching the specified pattern.\"\n  ],\n  \"PUBSUB HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"PUBSUB NUMPAT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of patterns all the clients are subscribed to.\"\n  ],\n  \"PUBSUB NUMSUB\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the number of subscribers per channel, each even element (including the 0th) is channel name, each odd element is the number of subscribers\"\n  ],\n  \"PUBSUB SHARDCHANNELS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of active channels, optionally matching the specified pattern.\"\n  ],\n  \"PUBSUB SHARDNUMSUB\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the number of subscribers per shard channel, each even element (including the 0th) is channel name, each odd element is the number of subscribers.\"\n  ],\n  \"PUNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each pattern, one message with the first element being the string `punsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"QUIT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RANDOMKEY\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when the database is empty.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): a random key in the database.\"\n  ],\n  \"READONLY\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"READWRITE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RENAME\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RENAMENX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if _key_ was renamed to _newkey_.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if _newkey_ already exists.\"\n  ],\n  \"REPLCONF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"REPLICAOF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `RESET`.\"\n  ],\n  \"RESTORE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"RESTORE-ASKING\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"ROLE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): where the first element is one of `master`, `slave`, or `sentinel`, and the additional elements are role-specific as illustrated above.\"\n  ],\n  \"RPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the value of the last element.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of popped elements.\"\n  ],\n  \"RPOPLPUSH\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the element being popped and pushed.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the source list is empty.\"\n  ],\n  \"RPUSH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"RPUSHX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the list after the push operation.\"\n  ],\n  \"SADD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements that were added to the set, not including all the elements already present in the set.\"\n  ],\n  \"SAVE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, an array with two elements.\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) with the names of scanned keys.\"\n  ],\n  \"SCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The cardinality (number of elements) of the set, or 0 if the key does not exist.\"\n  ],\n  \"SCRIPT\": [],\n  \"SCRIPT DEBUG\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT EXISTS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): an array of integers that correspond to the specified SHA1 digest arguments.\"\n  ],\n  \"SCRIPT FLUSH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"SCRIPT KILL\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SCRIPT LOAD\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the SHA1 digest of the script added into the script cache.\"\n  ],\n  \"SDIFF\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with the members of the resulting set.\"\n  ],\n  \"SDIFFSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting set.\"\n  ],\n  \"SELECT\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SENTINEL CKQUORUM\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): Returns OK if the current Sentinel configuration is able to reach the quorum needed to failover a master, and the majority needed to authorize the failover.\"\n  ],\n  \"SENTINEL CONFIG\": [\n    \"One of the following:\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): When 'SENTINEL-CONFIG GET' is called, returns a map.\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. When 'SENTINEL-CONFIG SET' is called, returns OK on success.\"\n  ],\n  \"SENTINEL DEBUG\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. The configuration update was successful.\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): List of configurable time parameters and their values (milliseconds).\"\n  ],\n  \"SENTINEL FAILOVER\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. Force a fail over as if the master was not reachable, and without asking for agreement to other Sentinels.\"\n  ],\n  \"SENTINEL FLUSHCONFIG\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. Force Sentinel to rewrite its configuration on disk, including the current Sentinel state.\"\n  ],\n  \"SENTINEL GET MASTER-ADDR-BY-NAME\": [],\n  \"SENTINEL HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): Helpful text about subcommands.\"\n  ],\n  \"SENTINEL INFO CACHE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): This is actually a map, the odd entries are a master name, and the even entries are the last cached INFO output from that master and all its replicas.\"\n  ],\n  \"SENTINEL IS MASTER-DOWN-BY-ADDR\": [],\n  \"SENTINEL MASTER\": [\n    \"[Map reply](/docs/reference/protocol-spec#maps): The state and info of the specified master.\"\n  ],\n  \"SENTINEL MASTERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of monitored Redis masters, and their state.\"\n  ],\n  \"SENTINEL MONITOR\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SENTINEL MYID\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): Node ID of the sentinel instance.\"\n  ],\n  \"SENTINEL PENDING SCRIPTS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of pending scripts.\"\n  ],\n  \"SENTINEL REMOVE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SENTINEL REPLICAS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of replicas for this master, and their state.\"\n  ],\n  \"SENTINEL RESET\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of masters that were reset.\"\n  ],\n  \"SENTINEL SENTINELS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of sentinel instances, and their state.\"\n  ],\n  \"SENTINEL SET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SENTINEL SIMULATE FAILURE\": [\n    \"One of the following:\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. The simulated flag was set.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): Supported simulates flags. Returned in case `HELP` was used.\"\n  ],\n  \"SENTINEL SLAVES\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of monitored replicas, and their state.\"\n  ],\n  \"SET\": [\n    \"Any of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): `GET` not given: Operation was aborted (conflict with one of the `XX`/`NX` options).\",\n    \"* [Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`. `GET` not given: The key was set.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): `GET` given: The key didn't exist before the `SET`.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): `GET` given: The previous value of the key.\"\n  ],\n  \"SETBIT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the original bit value stored at _offset_.\"\n  ],\n  \"SETEX\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SETNX\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the key was not set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the key was set.\"\n  ],\n  \"SETRANGE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string after it was modified by the command.\"\n  ],\n  \"SHUTDOWN\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK` if _ABORT_ was specified and shutdown was aborted. On successful shutdown, nothing is returned because the server quits and the connection is closed. On failure, an error is returned.\"\n  ],\n  \"SINTER\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with the members of the resulting set.\"\n  ],\n  \"SINTERCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of the elements in the resulting intersection.\"\n  ],\n  \"SINTERSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of the elements in the result set.\"\n  ],\n  \"SISMEMBER\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the element is not a member of the set, or when the key does not exist.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the element is a member of the set.\"\n  ],\n  \"SLAVEOF\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SLOWLOG\": [],\n  \"SLOWLOG GET\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of slow log entries per the above format.\"\n  ],\n  \"SLOWLOG HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"SLOWLOG LEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries in the slow log.\"\n  ],\n  \"SLOWLOG RESET\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SMEMBERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): all members of the set.\"\n  ],\n  \"SMISMEMBER\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list representing the membership of the given elements, in the same order as they are requested.\"\n  ],\n  \"SMOVE\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `1` if the element is moved.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `0` if the element is not a member of _source_ and no operation was performed.\"\n  ],\n  \"SORT\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): without passing the _STORE_ option, the command returns a list of sorted elements.\",\n    \"[Integer reply](/docs/reference/protocol-spec#integers): when the _STORE_ option is specified, the command returns the number of sorted elements in the destination list.\"\n  ],\n  \"SORT_RO\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sorted elements.\"\n  ],\n  \"SPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist.\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): when called without the _count_ argument, the removed member.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when called with the _count_ argument, a list of the removed members.\"\n  ],\n  \"SPUBLISH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of clients that received the message. Note that in a Redis Cluster, only clients that are connected to the same node as the publishing client are included in the count\"\n  ],\n  \"SRANDMEMBER\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): without the additional _count_ argument, the command returns a randomly selected member, or a [Null reply](/docs/reference/protocol-spec#nulls) when _key_ doesn't exist.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the optional _count_ argument is passed, the command returns an array of members, or an empty array when _key_ doesn't exist.\"\n  ],\n  \"SREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): Number of members that were removed from the set, not including non existing members.\"\n  ],\n  \"SSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, an array with two elements:\",\n    \"* The first element is a [Bulk string reply](/docs/reference/protocol-spec#bulk-strings) that represents an unsigned 64-bit number, the cursor.\",\n    \"* The second element is an [Array reply](/docs/reference/protocol-spec#arrays) with the names of scanned members.\"\n  ],\n  \"SSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each shard channel, one message with the first element being the string 'ssubscribe' is pushed as a confirmation that the command succeeded. Note that this command can also return a -MOVED redirect.\"\n  ],\n  \"STRLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the length of the string stored at key, or 0 when the key does not exist.\"\n  ],\n  \"SUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each channel, one message with the first element being the string `subscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"SUBSTR\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): the substring of the string value stored at key, determined by the offsets start and end (both are inclusive).\"\n  ],\n  \"SUNION\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list with the members of the resulting set.\"\n  ],\n  \"SUNIONSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): Number of the elements in the resulting set.\"\n  ],\n  \"SUNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each shard channel, one message with the first element being the string `sunsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"SWAPDB\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"SYNC\": [\n    \"**Non-standard return value**, a bulk transfer of the data followed by `PING` and write requests from the master.\"\n  ],\n  \"TIME\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): specifically, a two-element array consisting of the Unix timestamp in seconds and the microseconds' count.\"\n  ],\n  \"TOUCH\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of touched keys.\"\n  ],\n  \"TTL\": [\n    \"One of the following:\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): TTL in seconds.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-1` if the key exists but has no associated expiration.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): `-2` if the key does not exist.\"\n  ],\n  \"TYPE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): the type of _key_, or `none` when _key_ doesn't exist.\"\n  ],\n  \"UNLINK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of keys that were unlinked.\"\n  ],\n  \"UNSUBSCRIBE\": [\n    \"When successful, this command doesn't return anything. Instead, for each channel, one message with the first element being the string `unsubscribe` is pushed as a confirmation that the command succeeded.\"\n  ],\n  \"UNWATCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"WAIT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of replicas reached by all the writes performed in the context of the current connection.\"\n  ],\n  \"WAITAOF\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): The command returns an array of two integers:\",\n    \"1. The first is the number of local Redises (0 or 1) that have fsynced to AOF  all writes performed in the context of the current connection\",\n    \"2. The second is the number of replicas that have acknowledged doing the same.\"\n  ],\n  \"WATCH\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XACK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The command returns the number of messages successfully acknowledged. Certain message IDs may no longer be part of the PEL (for example because they have already been acknowledged), and XACK will not count them as successfully acknowledged.\"\n  ],\n  \"XADD\": [\n    \"One of the following:\",\n    \"* [Bulk string reply](/docs/reference/protocol-spec#bulk-strings): The ID of the added entry. The ID is the one automatically generated if an asterisk (`*`) is passed as the _id_ argument, otherwise the command just returns the same ID specified by the user during insertion.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the NOMKSTREAM option is given and the key doesn't exist.\"\n  ],\n  \"XAUTOCLAIM\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays), specifically, an array with three elements:\",\n    \"1. A stream ID to be used as the _start_ argument for the next call to XAUTOCLAIM.\",\n    \"2. An [Array reply](/docs/reference/protocol-spec#arrays) containing all the successfully claimed messages in the same format as `XRANGE`.\",\n    \"3. An [Array reply](/docs/reference/protocol-spec#arrays) containing message IDs that no longer exist in the stream, and were deleted from the PEL in which they were found.\"\n  ],\n  \"XCLAIM\": [\n    \"Any of the following:\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): when the _JUSTID_ option is specified, an array of IDs of messages successfully claimed.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): an array of stream entries, each of which contains an array of two elements, the entry ID and the entry data itself.\"\n  ],\n  \"XDEL\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries that were deleted.\"\n  ],\n  \"XGROUP\": [],\n  \"XGROUP CREATE\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XGROUP CREATECONSUMER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of created consumers, either 0 or 1.\"\n  ],\n  \"XGROUP DELCONSUMER\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of pending messages the consumer had before it was deleted.\"\n  ],\n  \"XGROUP DESTROY\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of destroyed consumer groups, either 0 or 1.\"\n  ],\n  \"XGROUP HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"XGROUP SETID\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XINFO\": [],\n  \"XINFO CONSUMERS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of consumers and their attributes.\"\n  ],\n  \"XINFO GROUPS\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of consumer groups.\"\n  ],\n  \"XINFO HELP\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of sub-commands and their descriptions.\"\n  ],\n  \"XINFO STREAM\": [\n    \"One of the following:\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): when the _FULL_ argument was not given, a list of information about a stream in summary form.\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): when the _FULL_ argument was given, a list of information about a stream in extended form.\"\n  ],\n  \"XLEN\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of entries of the stream at _key_.\"\n  ],\n  \"XPENDING\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): different data depending on the way XPENDING is called, as explained on this page.\"\n  ],\n  \"XRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of stream entries with IDs matching the specified range.\"\n  ],\n  \"XREAD\": [\n    \"One of the following:\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): A map of key-value elements where each element is composed of the key name and the entries reported for that key. The entries reported are full stream entries, having IDs and the list of all the fields and values. Field and values are guaranteed to be reported in the same order they were added by `XADD`.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the _BLOCK_ option is given and a timeout occurs, or if there is no stream that can be served.\"\n  ],\n  \"XREADGROUP\": [\n    \"One of the following:\",\n    \"* [Map reply](/docs/reference/protocol-spec#maps): A map of key-value elements where each element is composed of the key name and the entries reported for that key. The entries reported are full stream entries, having IDs and the list of all the fields and values. Field and values are guaranteed to be reported in the same order they were added by `XADD`.\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the _BLOCK_ option is given and a timeout occurs, or if there is no stream that can be served.\"\n  ],\n  \"XREVRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): The command returns the entries with IDs matching the specified range. The returned entries are complete, which means that the ID and all the fields they are composed of are returned. Moreover, the entries are returned with their fields and values in the same order as `XADD` added them.\"\n  ],\n  \"XSETID\": [\n    \"[Simple string reply](/docs/reference/protocol-spec#simple-strings): `OK`.\"\n  ],\n  \"XTRIM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): The number of entries deleted from the stream.\"\n  ],\n  \"ZADD\": [\n    \"Any of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the operation was aborted because of a conflict with one of the _XX/NX/LT/GT_ options.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the number of new members when the _CH_ option is not used.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the number of new or updated members when the _CH_ option is used.\",\n    \"* [Double reply](/docs/reference/protocol-spec#doubles): the updated score of the member when the _INCR_ option is used.\"\n  ],\n  \"ZCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the cardinality (number of members) of the sorted set, or 0 if the key doesn't exist.\"\n  ],\n  \"ZCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the specified score range.\"\n  ],\n  \"ZDIFF\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the result of the difference including, optionally, scores when the _WITHSCORES_ option is used.\"\n  ],\n  \"ZDIFFSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting sorted set at _destination_.\"\n  ],\n  \"ZINCRBY\": [\n    \"[Double reply](/docs/reference/protocol-spec#doubles): the new score of _member_.\"\n  ],\n  \"ZINTER\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the result of the intersection including, optionally, scores when the _WITHSCORES_ option is used.\"\n  ],\n  \"ZINTERCARD\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting intersection.\"\n  ],\n  \"ZINTERSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the resulting sorted set at the _destination_.\"\n  ],\n  \"ZLEXCOUNT\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members in the specified score range.\"\n  ],\n  \"ZMPOP\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): when no element could be popped.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): A two-element array with the first element being the name of the key from which elements were popped, and the second element is an array of the popped elements. Every entry in the elements array is also an array that contains the member and its score.\"\n  ],\n  \"ZMSCORE\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the member does not exist in the sorted set.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of [Double reply](/docs/reference/protocol-spec#doubles) _member_ scores as double-precision floating point numbers.\"\n  ],\n  \"ZPOPMAX\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of popped elements and scores.\"\n  ],\n  \"ZPOPMIN\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of popped elements and scores.\"\n  ],\n  \"ZRANDMEMBER\": [\n    \"[Bulk string reply](/docs/reference/protocol-spec#bulk-strings): without the additional _count_ argument, the command returns a randomly selected member, or [Null reply](/docs/reference/protocol-spec#nulls) when _key_ doesn't exist.\",\n    \"[Array reply](/docs/reference/protocol-spec#arrays): when the additional _count_ argument is passed, the command returns an array of members, or an empty array when _key_ doesn't exist. If the _WITHSCORES_ modifier is used, the reply is a list of members and their scores from the sorted set.\"\n  ],\n  \"ZRANGE\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of members in the specified range with, optionally, their scores when the _WITHSCORES_ option is given.\"\n  ],\n  \"ZRANGEBYLEX\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): a list of elements in the specified score range.\"\n  ],\n  \"ZRANGEBYSCORE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of the members with, optionally, their scores in the specified score range.\"\n  ],\n  \"ZRANGESTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting sorted set.\"\n  ],\n  \"ZRANK\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist or the member does not exist in the sorted set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): the rank of the member when _WITHSCORE_ is not used.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): the rank and score of the member when _WITHSCORE_ is used.\"\n  ],\n  \"ZREM\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of members removed from the sorted set, not including non-existing members.\"\n  ],\n  \"ZREMRANGEBYLEX\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): Number of members removed.\"\n  ],\n  \"ZREMRANGEBYRANK\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): Number of members removed.\"\n  ],\n  \"ZREMRANGEBYSCORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): Number of members removed.\"\n  ],\n  \"ZREVRANGE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of members in the specified range, optionally with their scores if _WITHSCORE_ was used.\"\n  ],\n  \"ZREVRANGEBYLEX\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): List of the elements in the specified score range.\"\n  ],\n  \"ZREVRANGEBYSCORE\": [\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): a list of the members and, optionally, their scores in the specified score range.\"\n  ],\n  \"ZREVRANK\": [\n    \"One of the following:\",\n    \"* [Null reply](/docs/reference/protocol-spec#nulls): if the key does not exist or the member does not exist in the sorted set.\",\n    \"* [Integer reply](/docs/reference/protocol-spec#integers): The rank of the member when _WITHSCORE_ is not used.\",\n    \"* [Array reply](/docs/reference/protocol-spec#arrays): The rank and score of the member when _WITHSCORE_ is used.\"\n  ],\n  \"ZSCAN\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): cursor and scan response in array form.\"\n  ],\n  \"ZSCORE\": [\n    \"One of the following:\",\n    \"* [Double reply](/docs/reference/protocol-spec#doubles): the score of the member (a double-precision floating point number).\",\n    \"* [Nil reply](/docs/reference/protocol-spec#bulk-strings): if _member_ does not exist in the sorted set, or the key does not exist.\"\n  ],\n  \"ZUNION\": [\n    \"[Array reply](/docs/reference/protocol-spec#arrays): the result of the union with, optionally, their scores when _WITHSCORES_ is used.\"\n  ],\n  \"ZUNIONSTORE\": [\n    \"[Integer reply](/docs/reference/protocol-spec#integers): the number of elements in the resulting sorted set.\"\n  ]\n}\n"
        },
        {
          "name": "tool_types.json",
          "type": "blob",
          "size": 0.0810546875,
          "content": "{\n    \"cli\": \"CLI\",\n    \"gui\": \"GUI\",\n    \"proxy\": \"Proxy\",\n    \"other\": \"Other\"\n}\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "wordlist",
          "type": "blob",
          "size": 10.251953125,
          "content": "3:00 AM\n4:00 AM\n5:00 AM\n6:00 AM\n.rdb\nˈrɛd-ɪs\n0s\n0x00060007\n0x00MMmmpp\n100k\n100MB\n10GB\n10k\n128MB\n12k\n1GB\n1s\n1th\n2GB\n3am\n300ms\n30ms\n32bit\n32MB\n3c3a0c\n3c3a0c74aae0b56170ccb03a76b60cfe7dc1912e\n3GB\n3MB\n4am\n4GB\n4k\n5am\n500MB\n512MB\n5GB\n6am\n60s\n6sync\n80ms\n85MB\n8MB\n8ms\n90s\n97a3a64667477371c4479320d683e4c8db5858b1\nA1\nacknowledgement\nACKs\nacl\nacl-pubsub-default\nACLs\nad-hoc\nAioredlock\nAlibaba\nalice\nallchannels\nallkeys\nallkeys-lru\nallkeys-random\nallocator\nallocator's\nallocators\nAMD64\nanalytics\nantirez\nantirez's\nAOF\naof\nAOF_START\naof-1\naof-2\naof-N\nAOFRW\napi\napiname\nAPIs\nappendfsync\nappendonly\napplicative\nargs\nARGV\nargv\nargvs\nArity\narity\nASN\nAsync\nasync\nAsyncio\natomicity\nAtomicvar\nAuth\nauth\nauthenticateClientWithUser\nauto-reconnection\nautocomplete\nAUTOID\nautoload\nautoloader\nautoloading\nAutoloading\nB1\nB2\nB3\nbackend\nbackported\nbackslashed\nbackticks\nbacktrace\nbalancer\nbazzar\nbc\nbcc\nBCC's\nbcc's\nBDFL-style\nbeforeSleep\nbehaviour\nbenchmarked\nBenchmarking\nbenchmarking\nbig-endian\nBigNumber\nbikes:racing:france\nbikes:racing:italy\nbikes:racing:usa\nbikes:rentable\nbirthyear\nbitfield\nbitfield\nBitfields\nbitfields\nBitOp\nbitop\nBitwise\nbitwise\nbitwise\nbool\nBooleans\nbooleans\nBPF\nBPF-optimized\nBPF's\nbreakpoint\nbroadcasted\nbrpop\nbt\nbtree1-az\nC1\nC2\nC3\nC4\nC5\nCallReply\ncancelled\ncardinalities\ncardinality\nCAS\nCAs\ncasted\nCastilla\ncd\nCentOS\nCFIELD\nChangelog\nchangelogs\ncharset\nChemeris\ncheprasov\nCitrusbyte\ncjson\nCKQUORUM\ncleartext\nCLI\ncli\nCLI's\nCloseKey\ncluster-config-file\nCmd\ncmsgpack\nCn\ncodename\ncodenamed\nCollina's\ncommandstats\ncommnad\nCONFIG\nConfig\nconfig\nconfig-file\nconfigEpoch\nconfigs\nconst\nContextFlags\nCostin\nCP\ncpu\ncpu-profiling\nCPUs\nCraigslist\nCRC\nCRC-16\nCRC16\nCRC64\nCRDTs\nCRLF\nCRLF-terminated\ncron\ncryptographic\nCSV\nCtrl-a\nctx\ndaemonize\ndaemonized\ndaemontools\ndataset\ndatastore\ndbid\nDBs\nde\nde-serialization\nde-serialize\ndeallocated\ndearmor\nDeauthenticate\ndeauthenticate\ndeauthenticated\nDeauthenticates\ndeduplicated\nDefrag\ndefrag\ndefragging\ndefragment\ndefragmentable\ndefragmentation\ndefragmented\ndel\nDeno\ndeny-oom\ndeserialize\ndeserialized\ndeserializing\ndesync\ndesynchronize\ndev\ndir\nDiskless\ndiskless\nDistLock\ndistlock\nDLM\nDMA\ndnf\nDNF\nDNS\nDSL\ndup-sentinel\nDynomite\nearts\nEBADF\neBPF\nEBS\nEC2\nEDOM\nEEXIST\nEFBIG\nEINVAL\nele\nemented\nenable-protected-configs\nencodings\nencver\nencver=0\nencver=1\nend-slot1\nend-slot2\nend-slotN\nendian\nendianness\nEnduro\nENOENT\nENOTSUP\nEnum\nenum\nenum_val\nenum_vals\nenums\nEOF\nEP\nEPEL\nepel-release\nepoll\nEPSG:3785\nEPSG:900913\nERANGE\nErgonom\nerrno\nerror1\nerror2\nerrorstats\nethernet\nEval\neval\neval-intro\nEventLoop\neventloop\nEventMachine\neverysec\nexecutables\nexpiries\nexplainer\nexplainers\nfacto\nfactorializing\nFailover\nfailover\nFailover-based\nfailover-detected\nfailover-end\nfailover-end-for-timeout\nfailover-state-reconf-slaves\nfailover-state-select-slave\nfailover-state-send-slaveof-noone\nfailover.\nFailovers\nfailovers\nfanout\nfaq\nfavorited\nfdatasync\nfilesystem\nfirewalled\nfirewalling\nfirst-arg\nfirst-args\nfirstkey\nFlameGraph\nFLUSHCONFIG\nfmt\nfoo0\nfoo1\nfoo2\nformatter\nfrance_location\nFreeBSD\nFreeString\nfractionals\nfrequencyonly\nfsSL\nfsync\nfsynced\nFsyncing\nfsyncing\nfsyncs\nfunc\nGbit\nGDB\ngdb\ngeo\ngeo_tutorial\ngeoadd\nGEODEL\nGeohash\ngeohash\ngeohash-encoded\nGeoHashes\nGeohashes\ngeosearch\nGeospatial\ngeospatial\nGET-MASTER-ADDR-BY-NAME\ngetkeys-api\nGithub\ngithub\nglobals\ngo-redis\nGottlieb\nGPG\ngpg\nGradle\nHacktoberfest\nhacktoberfest\nhandleClientsWithPendingWrites\nHardcoded\nhardcoded\nhardlinks\nHashMap\nHashMaps\nHashSet\nHashSets\nHaversine\nHealthcheck\nhealthchecks\nHenshaw\nHexastore\nhexastore\nhget\nhgetall\nhincrby\nhiredis\nHitmeister\nHLL\nHLLs\nHMAC-SHA256\nhmget\nholdApplicationUntilProxyStarts\nHomebrew\nhostname\nhostnames\nHotspot\nhotspots\nhset\nHVM\nHW\nHyperLogLog\nhyperloglog\nHyperLogLog.\nHyperLogLogs\nHyperloglogs\nhyperloglogs\ni8\niamonds\nIANA\nIdentinal\nidletime\nidx\nidx'-th\nincr\nincrby\nincrby_get_mget\nindexable\ning\ninit\nint_vals\ninternals-eventlib\ninternals-rediseventlib\ninternals-sds\ninternals-vm\nintsets\ninvalidations\niojob\nIOPs\niostat\nIoT\nip\nip:port\nIPC\nIPs\nIPv4\nIPv6\nIS-MASTER-DOWN-BY-ADDR\nIstio\nitaly_racers\nItamar\niterable\niteratively\nition\nJanowski\nJavadocs\nJDK\nJedis\njedis\nJedisCluster\njedisClusterNodes\nJedisPool\nJedisPooled\nJemalloc\njemalloc\nJKS\njpeg\njs\nJSON\nJSON-encoded\nJUSTID\nkB\nkeepalive\nkeylen\nkeyN\nkeyname\nkeynum\nkeynumidx\nkeyrings\nKEYSPACE\nKeyspace\nkeyspace\nkeyspace-notifications\nKeyspaceNotification\nkeyspec\nkeystep\nkeytool\nKleppman's\nKleppmann\nknockknock\nkqueue\nL3\nlast-failover-wins\nlastkey\nlastVoteEpoch\nlate-defrag\nlatencies\nlatencystats\nlaunchd\nlazyfree-lazy-user-flush\nLDB\nldb\nleaderboard\nLeaderboards\nleaderboards\nLeau\nLehmann\nlen\nlenptr\nLevelgraph\nlexicographically\nLF\nLFU\nLHF\nlibc\nLibLZF\nlibssl-dev\nlicensor\nlicensor's\nlinenoise\nlinkTitle\nLinode\nlittle-endian\nLiveness\nliveness\nllen\nLLOOGG\nlmove_lrange\nlmove_lrange\nln\nLoadX509KeyPair\nlocalhost\nlog2\nlogfile\nlogics\nloglevel\nlookups\nloopback\nlpop\nlpop_rpop\nlpush\nlpush_rpush\nlrange\nLRU\nlru_cache\nLRU.\nLRU's\nlsb_release\nlsb-release\nltrim\nltrim_end_of_list\nLUA\nLua\nlua-api\nlua-debugging\nlua-replicate-commands\nLua-to-Redis\nLua's\nlubs\nLucraft\nM1\nMacBook\nmacOS\nmacroscopically\nmalloc\nMASTERDOWN\nMatteo\nmatteocollina\nmaxlen\nMAXLEN\nMaxmemory\nmaxmemory\nMemcache\nmemcached\nmemset\nmemtest86\nmemtier_benchmark\nMERCHANTABILITY\nMessagePack\nmetatag\nmget\nmiddleware\nMINID\nmiranda\nmisconfiguration\nmisconfigured\nMKSTREAM\nmodules-api-ref\nmoduleType\nMovablekeys\nmovablekeys\nMrkris\nmset\nmultisets\nmutex\nmylist\nmymaster\nmystream\nmyuser\nmyzset\nnamespace\nnamespacing\nNaN\nNAS\nnatively\nNATted\nNehalem\nnetcat\nnewjobs\nNFS\nNIC\nNICs\nnils\nno-appendfsync-on-rewrite\nnode-redis\nnode-redlock\nNodeJS\nnoeviction\nnon-reachability\nnon-TCP\nnon-TLS\nnon-loopback\nnon-reachability\nnon-virtualized\nnonprintable\nNOOP\nNoordhuis\nnopass\nNorem\nNoSQL\nnotify-keyspace-events\nnotifyKeyspaceEvent\nNRedisStack\nNTP\nNullArray\nnullarray\nnum-items\nNUMA\nnumactl\nnumkeys\nNX\nnx\nobservability\nODOWN\noctothorpe\nodown\nOk\nok\noldval\noneof\nonwards\nOOM\nOpenBSD\nOpenSSL\nopenssl\nOpteron\noptionals\nOR-ing\nORed\nORM\nOSGEO:41001\novercommit\np50\np999\nPackagist\npades\npageview\nParameterization\nparameterization\nparametrize\nparams\nparsable\nPEL\nPELs\nPEM\nperf\nperf_events\nperformance-on-cpu\nPFAIL\nphp-redis-lock\nPHPRedisMutex\nPID\npid\npidfile\nPieter\npipelined\nPipelining\npipelining\npkcs12\nPMCs\npmessage\nPMU\nPool2\nPOP3\nPOSIX\nPOV\nppa:redislabs\npre-conditions\npre-configured\npre-existing\npre-imported\npre-loaded\npre-populated\npre-sharding\nPredis\nprepend\nPrepend\npreprocessing\nprerequesits\nPrev\nprev\nPrickett\nprintf\nprintf-alike\nPrioglio\nprivdata\nPRNG\nprobabilistically\nproc\nProgramm\nProgrammability\nprogrammability\nprogrammatically\nprogrammatically-generated\npseudorandom\nPSR-4\nPubsub\npubsub\nPubSub-related\nPubsub.\nPV\nPydantic\nqsort\nqueueing\nquickstarts\nR1\nR2\nrace:france\nrace:italy\nrace:usa\nradix\nrc\nRC1\nRC3\nRC4\nRDB\nrdb-preamble\nRDB-saving\nrdd\nrdd-1\nrdd-2\nreacquisition\nreact-redlock\nreadibility\nreadonly\nreadwrite\nrealloc\nreallocations\nrealtime\nreauthenticate\nrebalance\nrebalancing\nRebranding\nreconfigurations\nreconfigures\nReconfiguring\nreconfiguring\nreconnection\nreconnections\nReddit's\nRedimension\nredirections\nREdis\nredis\nredis-benchmark\nredis-check-aof\nredis-cli\nredis-clients\nredis-doc\nredis-hashes\nredis-lua\nredis-macOS-demo\nredis-om-python\nredis-om-python.\nredis-py\nRedis-rb\nredis-rb-cluster\nredis-server\nredis-stable\nRedis-to-Lua\nRedisCallReply\nRedisConf\nRediSearch\nRedises\nRedisHost.\nRedisInsight\nRedisJSON\nREDISMODULE_OPTIONS_HANDLE_REPL_ASYNC_LOAD\nRedisModule.*\nredisObjectVM\nREDISPORT\nRedisson\nRedistributions\nRedlock\nRedlock-cpp\nRedlock-cs\nRedlock-php\nRedlock-py\nRedlock-rb\nRedlock4Net\nRedsync\nregisterAPI\nreimplements\nREPL\nrepl-diskless-load\nrepo\nrepresentable\nreprovisioned\nrepy\nrequirepass\nrescan\nrescanned\nreseek\nresends\nresetpass\nReshard\nreshard\nresharded\nResharding\nresharding\nreshardings\nRESP2\nRESP2.\nRESP3\nRESP3-typed\nRESP3.\nRESP3's\nResque\nresque\nresync\nresynchronization\nresynchronizations\nresyncs\nRetainString\nretcode\nreturing\nRetwis\nRetwis-J\nRetwis-RB\nRHEL\nRM_.*\nRM_CreateCommand\nRM_CreateStringFromString\nRM_IsKeysPositionRequest\nRM_KeyAtPosWithFlags\nRM_SetCommandInfo\nroadmap\nrobj\nRoshi\nroundtrips\nRPC\nrpc-perf\nrpop\nrpush\nRslock\nRSS\nrss\nrtckit\nRTT\nRU101\nRU102\nRU202\nrunid\nrunlevels\nRW\nRx/Tx\nS1\nS2\nS3\nS4\nSaaS\nsadd\nsadd_smembers\nSam-Bodden\nSandboxed\nsandboxed\nSanfilippo\nSanfilippo's\nscalable\nscard\nScarletLock\nSCP\nsdiff\nSDOWN\nsdown\nsds\nse\nseeked\nSelectable\nsemantical\nserverCron\nsetnx_xx\nSHA-256\nSHA1\nSHA256\nSharded\nsharded\nsharding\nShuttleworth\nsi\nsidekiq\nSIGBUS\nSIGFPE\nSIGILL\nSIGINT\nsignle\nSIGSEGV\nSIGTERM\nsinter\nsismember\nslave-reconf-done\nslave-reconf-inprog\nslave-reconf-sent\nSlicehost\nslot1\nslowlog\nsmaps\nSmartOS\nsmismember\nSnapchat\nSnapcraft\nsnapd\nSnapshotting\nsnapshotting\nSolaris-derived\nsomekey\nSomeOtherValue\nSonatype\nSoundCloud\nspectrogram\nspellchecker-cli\nspiped\nspo\nsponsorships\nsrem\nSSD\nSSL\nStackOverflow\nstart-slot1\nstart-slot2\nstart-slotN\nstartfrom\nstatus1\nstatus2\nstdin\nstorepass\nstrace\nstream_toturial\nStringDMA\nstruct\nstruct-encoded\nstruct's\nstructs\nstunnel\nsubcommand\nsubcommand.\nsubcommand's\nSubcommands\nsubcommands\nsubevent\nsubevents\nsuboptimal\nsubsequence\nsubstring\nsudo\nSVGs\nsuperset\nswapdb\nswappability\nSYNC_RDB_START\nsyncd\nsyscall\nsystemctl\nT1\nT2\ntaskset\nTCL\ntcmalloc\nTCP\ntcp\nthe-redis-keyspace\nTLS\nTLS-enabled\ntls-port\ntmp\ntmux\ntoolkits\ntopologies\ntonumber\ntradeoff\ntradeoffs\ntransactional\ntry-failover\nTthe\nTTL\nTTLs\ntty\ntunable\nTwemproxy\ntypemethods_ptr\nUI\nULID\nULIds\nULIDs\nun-authenticated\nun-gated\nunclaimable\nunderflows\nunencrypted\nunguessable\nunivocally\nunix\nunlink\nunlinked\nunlinks\nUnmodifiable\nunmodifiable\nunpause\nunreachability\nUnregister\nunregister\nunregisters\nUntrusted\nuntrusted\nuntuned\nUnwatches\nunwatches\nuppercased\nurandom\nURI\nUSD\nused_memory_scripts_eval\nuserSession\nusr\nUTF-8\nutf8\nutils\nv9\nvalue-ptr\nValueN\nVariadic\nvariadic\nvenv\nvirginia\nVirtualized\nvirtualized\nVladev\nVM\nvm\nvm-max-memory\nVMs\nvmstat\nvmSwapOneObject\nVMware\nvolatile-lru\nvolatile-ttl\nVPS\nvtype\nWAITAOF\nWestmere\nwget\nwherefrom\nwhitespace\nwhitespaces\nwhos-using-redis\nWRONGTYPE\nWSL\nWSL2\nxack\nXACK\nxadd\nXADD\nxadd_2\nxadd_7\nxadd_bad_id\nxadd_id\nxautoclaim\nXAUTOCLAIM\nxautoclaim_cursor\nxclaim\nXCLAIM\nxdel\nXDEL\nXen\nXen-specific\nXeon\nxff\nXGROUP\nxgroup_create\nxgroup_create_mkstream\nxgroup_read\nxgroup_read_bob\nxinfo\nXINFO\nxinfo_consumers\nxinfo_groups\nxlen\nXLEN\nXMODEM\nxpending\nXPENDING\nxpending_plus_minus\nxrange\nXRANGE\nxrange_all\nxrange_empty\nxrange_pending\nxrange_step_1\nxrange_step_2\nxrange_time\nxread\nXREAD\nXREADGROUP\nxgroup_read_id\nxread_block\nxrevrange\nXREVRANGE\nXSCAN\nxtrim\nXTRIM\nxtrim2\nXYZ\nxzvf\nYCSB\nYossi\nZ1\nZeroBrane\nzeroed-ACLs\nZhao\nziplists\nZMODEM\nZPOP\nZSET\nzset\n"
        }
      ]
    }
  ]
}