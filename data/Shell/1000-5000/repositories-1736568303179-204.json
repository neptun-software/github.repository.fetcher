{
  "metadata": {
    "timestamp": 1736568303179,
    "page": 204,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "containers/toolbox",
      "stars": 2643,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codespellexcludefile",
          "type": "blob",
          "size": 1.0625,
          "content": "    usr_mount_destination_flags=\"ro\"\n        toolbox_profile_bind=\"--volume /etc/profile.d/toolbox.sh:/etc/profile.d/toolbox.sh:ro\"\n        toolbox_profile_bind=\"--volume /usr/share/profile.d/toolbox.sh:/etc/profile.d/toolbox.sh:ro\"\n            if echo \"$usr_mount_source_flags\" | grep --invert-match \"ro\" >/dev/null 2>&3; then\n            --volume \"$TOOLBOX_PATH\":/usr/bin/toolbox:ro \\\n            if ! mount_bind /run/host/etc/machine-id /etc/machine-id ro; then\n            if ! mount_bind /run/host/var/lib/flatpak /var/lib/flatpak ro; then\n            if ! mount_bind /run/host/var/log/journal /var/log/journal ro; then\n\t\tif strings.Contains(command.Name(), \"complet\") {\n\ttoolboxPathMountArg := toolboxPath + \":/usr/bin/toolbox:ro\"\n\t\t\ttoolboxShMountArg := mount.source + \":\" + mount.containerPath + \":ro\"\n\t\t{\"/etc/machine-id\", \"/run/host/etc/machine-id\", \"ro\"},\n\t\t{\"/var/lib/flatpak\", \"/run/host/var/lib/flatpak\", \"ro\"},\n\t\t{\"/var/lib/systemd/coredump\", \"/run/host/var/lib/systemd/coredump\", \"ro\"},\n\t\t{\"/var/log/journal\", \"/run/host/var/log/journal\", \"ro\"},\n\t\t\t\t\"          \\\"ro\\\",\" +\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01171875,
          "content": "src/toolbox\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2607421875,
          "content": "[submodule \"test/system/libs/bats-support\"]\n\tpath = test/system/libs/bats-support\n\turl = https://github.com/bats-core/bats-support.git\n[submodule \"test/system/libs/bats-assert\"]\n\tpath = test/system/libs/bats-assert\n\turl = https://github.com/bats-core/bats-assert.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.0859375,
          "content": "<rishi@fedoraproject.org> <debarshir@gnome.org>\nOndřej Míchal <harrymichal@seznam.cz>\n"
        },
        {
          "name": ".zuul.yaml",
          "type": "blob",
          "size": 6.5322265625,
          "content": "#\n# Copyright © 2020 – 2024 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n---\n- job:\n    name: unit-test\n    description: Run Toolbx's unit tests declared in Meson\n    timeout: 1800\n    nodeset:\n      nodes:\n        - name: fedora-rawhide\n          label: cloud-fedora-rawhide\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/unit-test.yaml\n\n- job:\n    name: unit-test-migration-path-for-coreos-toolbox\n    description: Run Toolbx's unit tests declared in Meson when built with -Dmigration_path_for_coreos_toolbox\n    timeout: 600\n    nodeset:\n      nodes:\n        - name: centos-9-stream\n          label: cloud-centos-9-stream\n    pre-run: playbooks/setup-env-migration-path-for-coreos-toolbox.yaml\n    run: playbooks/unit-test.yaml\n\n- job:\n    name: unit-test-restricted\n    description: Run Toolbx's unit tests declared in Meson in a restricted build environment\n    timeout: 1800\n    nodeset:\n      nodes:\n        - name: fedora-rawhide\n          label: cloud-fedora-rawhide\n    pre-run: playbooks/setup-env-restricted.yaml\n    run: playbooks/unit-test.yaml\n\n- job:\n    name: system-test-fedora-rawhide-commands-options\n    description: Run Toolbx's commands-options system tests in Fedora Rawhide\n    timeout: 7200\n    nodeset:\n      nodes:\n        - name: fedora-rawhide\n          label: cloud-fedora-rawhide\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-commands-options.yaml\n\n- job:\n    name: system-test-fedora-rawhide-runtime-environment-arch-fedora\n    description: Run Toolbx's (arch-fedora,runtime-environment) system tests in Fedora Rawhide\n    timeout: 7200\n    nodeset:\n      nodes:\n        - name: fedora-rawhide\n          label: cloud-fedora-rawhide\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-arch-fedora.yaml\n\n- job:\n    name: system-test-fedora-rawhide-runtime-environment-ubuntu\n    description: Run Toolbx's (runtime-environment,ubuntu) system tests in Fedora Rawhide\n    timeout: 7200\n    nodeset:\n      nodes:\n        - name: fedora-rawhide\n          label: cloud-fedora-rawhide\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-ubuntu.yaml\n\n- job:\n    name: system-test-fedora-41-commands-options\n    description: Run Toolbx's commands-options system tests in Fedora 41\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-41\n          label: cloud-fedora-41\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-commands-options.yaml\n\n- job:\n    name: system-test-fedora-41-runtime-environment-arch-fedora\n    description: Run Toolbx's (arch-fedora,runtime-environment) system tests in Fedora 41\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-41\n          label: cloud-fedora-41\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-arch-fedora.yaml\n\n- job:\n    name: system-test-fedora-41-runtime-environment-ubuntu\n    description: Run Toolbx's (runtime-environment,ubuntu) system tests in Fedora 41\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-41\n          label: cloud-fedora-41\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-ubuntu.yaml\n\n- job:\n    name: system-test-fedora-40-commands-options\n    description: Run Toolbx's commands-options system tests in Fedora 40\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-40\n          label: cloud-fedora-40\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-commands-options.yaml\n\n- job:\n    name: system-test-fedora-40-runtime-environment-arch-fedora\n    description: Run Toolbx's (arch-fedora,runtime-environment) system tests in Fedora 40\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-40\n          label: cloud-fedora-40\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-arch-fedora.yaml\n\n- job:\n    name: system-test-fedora-40-runtime-environment-ubuntu\n    description: Run Toolbx's (runtime-environment,ubuntu) system tests in Fedora 40\n    timeout: 6300\n    nodeset:\n      nodes:\n        - name: fedora-40\n          label: cloud-fedora-40\n    pre-run: playbooks/setup-env.yaml\n    run: playbooks/system-test-runtime-environment-ubuntu.yaml\n\n- project:\n    periodic:\n      jobs:\n        - system-test-fedora-rawhide-commands-options\n        - system-test-fedora-rawhide-runtime-environment-arch-fedora\n        - system-test-fedora-rawhide-runtime-environment-ubuntu\n        - system-test-fedora-41-commands-options\n        - system-test-fedora-41-runtime-environment-arch-fedora\n        - system-test-fedora-41-runtime-environment-ubuntu\n        - system-test-fedora-40-commands-options\n        - system-test-fedora-40-runtime-environment-arch-fedora\n        - system-test-fedora-40-runtime-environment-ubuntu\n    check:\n      jobs:\n        - unit-test\n        - unit-test-migration-path-for-coreos-toolbox\n        - unit-test-restricted\n        - system-test-fedora-rawhide-commands-options\n        - system-test-fedora-rawhide-runtime-environment-arch-fedora\n        - system-test-fedora-rawhide-runtime-environment-ubuntu\n        - system-test-fedora-41-commands-options\n        - system-test-fedora-41-runtime-environment-arch-fedora\n        - system-test-fedora-41-runtime-environment-ubuntu\n        - system-test-fedora-40-commands-options\n        - system-test-fedora-40-runtime-environment-arch-fedora\n        - system-test-fedora-40-runtime-environment-ubuntu\n    gate:\n      jobs:\n        - unit-test\n        - unit-test-migration-path-for-coreos-toolbox\n        - unit-test-restricted\n        - system-test-fedora-rawhide-commands-options\n        - system-test-fedora-rawhide-runtime-environment-arch-fedora\n        - system-test-fedora-rawhide-runtime-environment-ubuntu\n        - system-test-fedora-41-commands-options\n        - system-test-fedora-41-runtime-environment-arch-fedora\n        - system-test-fedora-41-runtime-environment-ubuntu\n        - system-test-fedora-40-commands-options\n        - system-test-fedora-40-runtime-environment-arch-fedora\n        - system-test-fedora-40-runtime-environment-ubuntu\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.1826171875,
          "content": "## The Toolbx Project Community Code of Conduct\n\nThe Toolbx project follows the [Containers Community Code of Conduct](https://github.com/containers/common/blob/main/CODE-OF-CONDUCT.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.861328125,
          "content": "![Contributing](data/gfx/CONTRIBUTING.gif)\n\n# Contributing to Toolbx\n\nThank you for wanting to contribute to Toolbx! We greatly appreciate your\ninterest!\n\n# Reporting Bugs\n\n## Before Submitting a Bug Report\n\n- Check if your issue is already reported in our [bug tracker](https://github.com/containers/toolbox/issues)\n  - If the issue is already reported and is marked as **OPEN**, comment on it\n    and if possible and needed, share info about the issue just as if you were\n    submitting a new issue\n  - If the issue is marked as **CLOSED**, check if your version of Toolbx is\n    up-to-date or if there are some steps, described in the closed issue, that\n    you should follow. If you are still experiencing the issue, please file a\n    new issue\n- See our [documentation](https://docs.fedoraproject.org/en-US/fedora-silverblue/toolbox/)\n  if there are some steps that could help you solve your issue\n- Sometimes a bug is not reported in our bug tracker but instead people ask for\n  help somewhere else (e.g., chat channels). In such cases we'd like you to still report the bug and\n  share with us any info that could be gathered from those places\n\n## Writing a Bug Report\n\nWriting good bug reports is a nice way to make the job of the maintainers and\nother contributors a bit easier.\n\nWhen writing a bug report:\n\n- **Use a clear and descriptive title**\n- **Describe the problem** - Can you reproduce the bug reliably? What first\n  triggered the problem? Did it start happening after upgrading your system?\n- **Provide steps how to reproduce** - It's easier for us to fix a bug if we can\n  reproduce it.\n- **Describe the behavior you received and what you expected** - Sometimes it\n  may not be clear what the *right* behavior should look like.\n- **Provide info about the version of used software** - What version of Toolbx\n  and Podman do you use?\n- **Provide info about your system** - What distribution do you use? Which\n  desktop environment? Is it a VM or a real machine?\n\n# Making Suggestions\n\nToolbx is not feature-complete and some of it's functionality is not-there-yet.\nWe are thankful for all suggestions and ideas but be ready that your suggestion\nmay be rejected.\n\n## Before Submitting a Suggestion\n\n- Check if your suggestion has not already been made in our [bug tracker](https://github.com/containers/toolbox/issues)\n  - If it has and is marked as **OPEN**, go ahead and share your own thoughts\n    about the topic!\n  - If it has and is marked as **CLOSED**, please read the ticket and depending\n    on whether the suggestion was accepted or not consider if it is worth\n    opening a new issue or not.\n- Consider if the suggestion is not too out of scope of the project.\n\n## Writing a Suggestion\n\nWhen writing a suggestion:\n\n- **Use a clear and descriptive title**\n- **Describe the idea** - What parts of Toolbx does it affect? Is it a major\n  functionality or a minor tweak?\n- **Provide step-by-step description of the suggested behavior** so that we\n  will understand.\n- **Explain why would this idea be useful** - It sounds good to have a lot of\n  options but sometimes less is more. See this [article](https://ometer.com/preferences.html).\n\n# First Contribution\n\nToolbx is written in [Go](https://golang.org) and uses [Meson](https://mesonbuild.com)\nas it's buildsystem.\n\nInstructions for building Toolbx from source are in our [README](https://github.com/containers/toolbox/blob/main/README.md).\n\n> You may not need to build the project from source if your contribution is not\n> related to the code of Toolbx itself (e.g., documentation, updating CI\n> config, playing with image definitions,...).\n\nHere are some ideas of what you could contribute with:\n\n- Check our [bug tracker](https://github.com/containers/toolbox/issues)\n  and look for tickets marked with labels `good-first-issue` or `help-wanted`.\n- Write tests - Go has [tools](https://golang.org/pkg/testing/) for writing tests.\n  There are also [some](https://github.com/stretchr/testify) [libraries](https://github.com/onsi/ginkgo)\n  used for creating even more sophisticated tests.\n- Play with custom images - Toolbx currently officially works with Fedora-based\n  images. Ultimately there should be a wide variety of supported distro images.\n  You can help with testing other people's image definitions or creating your\n  own. **Beware**, maintainers still don't have a clear idea of how the image\n  infrastructure should look like.\n- Write documentation - Some functions in Toolbx's code don't have comments and\n  it's not very clear what they do. Toolbx has it's [documentation](https://docs.fedoraproject.org/en-US/fedora-silverblue/toolbox/)\n  hosted by Fedora. It's not very large and could use some attention.\n- Hack on the code and share the result - Seriously! Sometimes random ideas are\n  the best.\n\nToolbx currently does not have an infrastructure for translations. You can help\nus to set it up!\n\n# Pull Requests\n\nAll pull requests are welcome! Features, bug fixes, fixing of typos, tests,\ndocumentation, code comments and much more.\n\n## Creating a Pull Request\n\n- Document well your changes - This applies to the description of your PR and to\n  your commit messages.\n- If possible add additional test cases - If there are no tests for the part of\n  code you're contributing to, consider opening another PR if you want to\n  implement it yourself or file an issue so that somebody else can pick it up.\n- Update documentation to reflect your changes - Manual pages can be found in\n  directory `doc`. If your changes affect Toolbx's [documentation](https://docs.fedoraproject.org/en-US/fedora-silverblue/toolbox/),\n  consider creating a PR there (but to save yourself time, you can do it\n  after your changes are accepted), too.\n- After creating a PR add to the bottom of all your commits a link to the PR. This helps the future maintainers find discussions around the changes.\n\n## After Creating a Pull Request\n\nIt may take the us some time to review your changes and sometimes even longer to\nactually merge them. Please, don't interpret this as an act of not appreciating\nyour efforts! We really appreciate them! Sometimes we may be stuck in different\nparts of our lives.\n\nIf it takes us a very long time to even respond to your Pull Request, you can\ntry to @ping us at our communication channels (see section #Communication).\n\n## \nToolbx has a CI (Continuous Integration) setup for running tests. Their goal is to check if your\nchanges don't affect adversely Toolbx's functionality. Sometimes these tests\nmail fail with a false-positive. If you are not sure about the outcome of the\ntests, you can try to trigger a new test run by writing a comment with text `recheck` (really just that). If the issue persists, reach out to the maintainers!\n\nToolbx's CI system is [Zuul](https://zuul-ci.org/) hosted at [softwarefactory](https://softwarefactory-project.io/). The CI is defined using [Ansible](https://www.ansible.com) playbooks. For more information on writing Zuul jobs see their [documentation](https://zuul-ci.org/docs/zuul/reference/user.html).\n\n# Little Style Guide\n\nToolbx is written in [Go](https://golang.org) and uses its default set of tools\nincluding `gofmt` and `golint`.\n\nHere are some good materials to learn from about the way how to write nice and\nidiomatic code in Go:\n\n- [A Tour of Go](https://tour.golang.org/welcome)\n- [How To Write Go Code](https://golang.org/doc/code.html)\n- [Effective Go](https://golang.org/doc/effective_go.html)\n\nOverall, the [Go Blog](https://blog.golang.org/) is a good place to learn more\nabout Go.\n\nIf you are using Visual Studio Code, there are [plugins](https://marketplace.visualstudio.com/items?itemName=golang.Go)\nthat include all this functionality and throw a warning if you're doing\nsomething wrong.\n\n# Communication\n\nThe Toolbx team hangs-out at a dedicated Matrix channel: [#toolbx:matrix.org](https://matrix.to/#/#toolbx:matrix.org).\n\nFor Fedora-specific discussions you can visit their [wiki](https://docs.fedoraproject.org/en-US/project/join/) to learn about the means to contact the community."
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "GOALS.md",
          "type": "blob",
          "size": 2.5595703125,
          "content": "<img src=\"data/logo/toolbox-logo-landscape.svg\" alt=\"Toolbox logo landscape\" width=\"800\"/>\n\n## Goals\n\n### High Level Goals\n\n- Provide a convenient command line interface to run containers using\n  [Podman](https://podman.io/)\n- Support for development, debugging and system management use cases\n- Support for multiple distros\n  - `toolbox` package in multiple distros\n  - `toolbox` containers for multiple distros\n\n### Non-goals\n\n- Supporting multiple container runtimes. Toolbx will use Podman exclusively\n- Adding significant features on top of Podman\n  - Significant feature requests should be driven into Podman upstream\n- To run containers that aren't tightly integrated with the host\n  - Extremely sandboxed containers quickly become specific to the user\n\n### Developer Use Cases\n\n- I’m a developer hacking on source code and building/testing code\n  - Most cases: user doesn't need root, rootless containers work fine\n  - Some cases: user needs root for testing\n- Desktop Development:\n  - Developers need things like D-Bus, display, etc. to be forwarded into the\n    Toolbx container\n- Headless Development:\n  - Toolbx works properly in headless environments (no display, etc)\n- Need development tools like GDB, strace, etc. to work\n\n### Debugging and System Management Use Cases\n\n- Inspecting host processes and the kernel\n  - Typically need root access\n  - Need bpftrace, strace on host processes to work\n    - Ideally even do things like helping get kernel-debuginfo data for the\n      host kernel\n- Managing system services\n  - `systemctl restart foo.service`\n  - journalctl\n- Managing updates to the host\n  - rpm-ostree\n  - dnf/yum (classic systems)\n\n### Specific environments\n\n- Fedora Silverblue\n  - Silverblue comes with a subset of packages and discourages host software\n    changes\n    - Users need a Toolbx container as a working environment\n    - Future: use Toolbx container by default when a user opens a shell\n- Fedora CoreOS\n  - Similar to Silverblue, but non-graphical and smaller package set\n- RHEL CoreOS\n  - Similar to Fedora CoreOS. Based on RHEL content and the underlying\n    operating system for OpenShift\n  - Need to [use default authfile on pull](https://github.com/coreos/toolbox/pull/58/commits/413f83f7240d3c31121b557bfd55e489fad24489)\n  - Need to ensure compatibility with the rhel7/support-tools container\n    - Currently not a Toolbx image, opportunity for collaboration\n  - Alignment with `oc debug node/` (OpenShift)\n    - `oc debug node` opens a shell on a kubernetes node\n    - Value in having a consistent environment for both Toolbx's debugging\n      mode and `oc debug node`\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.6298828125,
          "content": "0.1.1\n=====\n\n### Security fixes\n\n* Bumped the minimum github.com/NVIDIA/nvidia-container-toolkit version to\n  1.16.2 for CVE-2024-0132 or GHSA-mjjw-553x-87pq, and CVE-2024-0133 or\n  GHSA-f748-7hpg-88ch\n\n### Bug fixes\n\n* Unbroke 'enter' if the NVIDIA Persistence Daemon is used (regression in\n  0.0.99.6)\n* Unbroke 'enter' if the proprietary NVIDIA driver is installed, but not used\n  (regression in 0.0.99.6)\n\n\n----\n\nCopyright © 2024 Red Hat, Inc.\nAll rights reserved.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.\n"
        },
        {
          "name": "NEWS.old",
          "type": "blob",
          "size": 23.3544921875,
          "content": "Overview of changes in 0.1.0\n============================\n\n* Add ubuntu-toolbox image definitions for Ubuntu 24.10\n* Optimize the CI on stable Fedora nodes\n* Stop updating the ubuntu-toolbox images for Ubuntu 16.04 and 18.04\n* Stop using slirp4netns(1) in the system tests\n* Unbreak the downstream Fedora CI\n* Unbreak the ubuntu-toolbox image build for Ubuntu 24.04\n* Update fallback release to 40 for non-fedora hosts\n\n\nOverview of changes in 0.0.99.6\n===============================\n\n* Add all the iconv converter modules for glibc to the fedora-toolbox images\n* Add an extra space after the ⬢ in the PS1\n* Add cracklib-dicts to the fedora-toolbox images\n* Add logos to the Arch Linux and Fedora badges, and a badge for the Ubuntu\n  package\n* Add manual pages and pacman progress bars to the arch-toolbox image\n* Add toolbox image definitions for RHELs 8.8, 8.9, 9.2 and 9.3\n* Add translations for gawk to the fedora-toolbox images\n* Add ubuntu-toolbox image definitions for Ubuntu 24.04\n* Avoid running out of storage space when running the system tests on the CI\n* Bump the minimum github.com/briandowns/spinner version to 1.18.0\n* Depend on github.com/go-logfmt/logfmt version 0.5.0\n* Depend on github.com/NVIDIA/go-nvlib version 0.6.1\n* Depend on github.com/NVIDIA/nvidia-container-toolkit version 1.16.1\n* Don't unmarshal the 'podman ps' JSON twice\n* Don't use use auto dependencies for shell completion scripts\n* Drop one \"o\" and rename the project as \"Toolbx\"\n* Enable more tests on Ubuntu 22.04 by setting the SHELL environment variable\n* Enable the proprietary NVIDIA driver\n* Exclude the meson.build files when installing the system tests\n* Fix pacman cache removal in the arch-toolbox image\n* Let 'create' use an image without a name\n* Let the terminal know the active container on all host operating systems,\n  and not just Fedora Silverblue and Workstation\n* Limit the scope of temporary files used by the system tests\n* Optimize 'enter' and 'run' for both an already running container and a\n  container getting initialized\n* Optimize the CI on Fedora nodes\n* Optimize the resource limits tests\n* Preserve the Konsole and xterm versions\n* Require --assumeyes to pull an image when not connected to a terminal\n* Retain errors from toolbox(1) without --verbose when forwarding to host\n* Retain exit codes from toolbox(1) when forwarding to host\n* Show the entry point's debug logs & errors in 'enter' and 'run'\n* Support 64-bit LoongArch\n* Synchronize the documentation with the website\n* Unbreak Podman's downstream Fedora CI\n* Use Buildah and Podman to build and test the arch-toolbox and ubuntu-toolbox\n  images\n* Use the same linker flags as NVIDIA Container Toolkit, and '-z now' is\n  unsupported\n* Work around bug in pasta(1) networks in the system tests\n\n\nOverview of changes in 0.0.99.5\n===============================\n\n* Add psmisc to the fedora-toolbox images\n* Add several new system and unit tests, and make the existing ones stricter\n* Add workaround to support configuring the user's password on some Active\n  Directory set-ups\n* Be aware of security hardened mount points marked with 'nosuid,nodev,noexec'\n* Bump the minimum Bats version to 1.7.0 to simplify running a subset of the\n  system tests and fix various warnings\n* Bump the minimum Go requirement to 1.20\n* Bump the minimum github.com/docker/go-units version to 0.5.0\n* Bump the minimum golang.org/x/sys version to 0.1.0 for CVE-2022-29526 or\n  GHSA-p782-xgp4-8hr8\n* Bump the minimum golang.org/x/text version to 0.3.8 for CVE-2022-32149 or\n  GHSA-69ch-w2m2-3vjp\n* Bump the minimum gopkg.in/yaml.v3 version to 3.0.0 for CVE-2022-28948 or\n  GHSA-hp87-p4gw-j4gq\n* Deprecate the --monitor-host option of 'init-container'\n* Don't leak the NAME and VERSION environment variables into containers made\n  from the fedora-toolbox images\n* Drop golang.org/x/term as a dependency\n* Ensure that Toolbx containers start even if there aren't sufficient resources\n  for inotify(7)\n* Ensure that the fedora-toolbox images retain documentation and translations\n* Ensure that toolbox(1) can be built without using podman(1) and validating\n  subordinate IDs\n* Fix DNS queries in Toolbx containers made from images with systemd-resolved,\n  when running on hosts that don't use it\n* Handle space-separated input when asking for confirmation\n* Let the terminal know the active container also on Fedora Linux Asahi Remix\n* Offer built-in support for Arch Linux\n* Offer built-in support for Ubuntu\n* Preserve the host's environment variables for Bash's history facility inside\n  Toolbx containers\n* Rely on podman >= 1.6.4 always being present\n* Report the size of the image that will be downloaded from a registry\n* Show welcome message on Fedora Sericea\n* Support 64-bit RISC-V\n* Update fallback release to 38 for non-fedora hosts\n* Unbreak the line count checks with Bats >= 1.10.0\n* Unbreak the manual page checks with GNU roff >= 1.23\n* Various updates to the documentation and manuals\n\n\nOverview of changes in 0.0.99.4\n===============================\n\n* Add an --authfile option to 'create'\n* Add a --preserve-fds option to 'run'\n* Add a test that runs codespell\n* Add fedora-toolbox image definition for Fedoras 37, 38 and 39\n* Add several new system tests and make the existing ones stricter\n* Avoid unexpected DNF behaviour with reinstalling or swapping RPMs when\n  building the fedora-toolbox images\n* Be more strict when looking for a C compiler for building\n* Call 'systemd-tmpfiles --create' when installing\n* Check if subordinate ID ranges are present for also the UID, and not just\n  the username\n* Document the toolbox.conf configuration file\n* Don't create a nested pseudo-terminal device during 'run' if the standard\n  input and output streams are not connected to a terminal\n* Don't leak ID and VARIANT_ID into the shell\n* Don't unmarshal the 'podman images' JSON twice\n* Enable OpenGL and Vulkan for hardware with free drivers on the\n  fedora-toolbox images\n* Enable running non-nested display servers from a virtual terminal\n* Enforce all the default 'go vet' checks on all Go sources\n* Enforce gofmt on all Go sources\n* Ensure that the 'distro' option is valid, instead of silently falling back\n  to Fedora\n* Ensure that 'run' has the same container environment as 'enter'\n* Ensure that the fedora-toolbox images has all the locales known to glibc,\n  and not just C, POSIX and C.UTF-8\n* Exit 'run' with exit code of invoked command\n* Fix the titles of the manuals\n* Give precedence to /etc/os-release over /usr/lib/os-release in\n  /etc/profile.d/toolbox.sh\n* Hide the Fedora-specific welcome banner on non-Fedora containers\n* Improve the error messages if the 'distro' and 'release' options are invalid\n* Improve the error messages for mutually exclusive options\n* Improve the default image used for RHEL Toolbx containers to offer an\n  interactive command line experience similar to that on RHEL Workstation\n* Make /etc/profile.d/toolbox.sh compatible with Z shell again\n* Make sd_booted(3) work inside Toolbx containers\n* Preserve the host's XDG_SESSION_CLASS environment variable inside Toolbx\n  containers\n* Replace github.com/mattn/go-isatty and the deprecated\n  golang.org/x/crypto/ssh/terminal API with golang.org/x/term\n* Replace jwhois with whois in the fedora-toolbox images for Fedora >= 37\n* Replace the hand-written shell completion for Bash with ones generated by\n  Cobra that cover fish and Z shell too\n* Restore more documentation removed from the base Fedora images\n* Run unit tests with -Dmigration_path_for_coreos_toolbox on CentOS Stream 9 as\n  part of the CI\n* Silence warning when running the system tests with Bats >= 1.7.0\n* Support RHEL 9 Toolbx containers\n* Support subordinate user and group ID ranges on enterprise set-ups\n* Unbreak sorting and clearly identify copied images in 'list'\n* Update fallback release to 37 for non-fedora hosts\n* Update the Go dependencies with 'go get -u'\n* Various updates to the documentation and manuals\n* Work around Cobra 1.1.2's handling of usage functions\n\n\nOverview of changes in 0.0.99.3\n===============================\n\n* Add bc and iproute to the fedora-toolbox images\n* Add fedora-toolbox image definition for Fedoras 35 and 36\n* Add support for configuration files\n* Add optional migration paths for coreos/toolbox users\n* Allow overriding the path to tmpfilesdir\n* Avoid RPM failures due to unexpected file owners\n* Bump minimum Meson version to 0.58.0\n* Ensure that binaries are run against their build-time ABI\n* Expose the host's entire / in the container at /run/host\n* Fix the PS1 on Z shell\n* Fix wrong use of regexp.MatchString\n* Give access to PC/SC smart card daemon\n* Make locate(1) opt-in by default\n* Make the test suite non-destructive\n* Mention that private images require 'podman login'\n* Remove misleading and redundant CMD from the fedora-toolbox images\n* Remove the deprecated com.github.debarshiray.toolbox label from the\n  fedora-toolbox images, and when creating a new container\n* Replace outdated logos with pixels\n* Show basic help when man(1) is not available\n* Show welcome message on Fedora Kinoite\n* Test ImageReferenceCanBeID and ParseRelease\n* Unbreak 'enter' if the shell had exited with 127\n* Various additions and improvements to the test suite\n* Various updates to the documentation and manuals\n\n\nOverview of changes in 0.0.99.2\n===============================\n\n* Add nano-default-editor to the fedora-toolbox images\n* Add unit tests for pkg/shell\n* Connect Go unit tests to Meson & rename CI job\n* Decouple image caching from Zuul for the system tests\n* Don't assume that the user's GID is the same as the UID\n* Don't require /etc/machine-id in toolbox images\n* Drop ShellCheck on Shell Toolbox\n* Give access to systemd-resolved's Varlink socket\n* Optimize 'enter' and 'run' in the non-fallback case\n* Optimize the performance of 'list'\n* Properly separate builddir setup & build in the Ansible playbooks\n* Rename Dockerfile to Containerfile for the fedora-toolbox images\n* Show test execution time for the system tests\n* Support listing images without names\n* Unbreak 'create' on an unlocked OSTree deployment\n* Unbreak 'create' on CoreOS with read-only /boot\n* Update default release to 33 for non-Fedora hosts\n* Update the GitHub issue templates\n* Use a regular file, not a symbolic link, for the README.md in the\n  fedora-toolbox images\n* Fall back to $HOME when using a container if the current working directory\n  isn't present in it\n* Various updates to the Bash completion\n* Various updates to the manuals\n\n\nOverview of changes in 0.0.99.1\n===============================\n\n* Add deprecation notices to the POSIX shell implementation\n* Add test for the new --distro option\n* Drop the FGC namespace from the fedora-toolbox images\n* Fix miscellaneous issues pointed out by https://www.shellcheck.net/\n* Handle hosts with /etc/localtime as absolute symlink\n* Improve README.md\n* Improve the Zuul configuration\n* Mount /mnt only if it is available\n* Refactor the system tests, and use bats-assert and bats-support\n* Test that sudo doesn't require a password\n* Update the manuals\n\n\nOverview of changes in 0.0.99\n=============================\n\n* Add a --distro option to 'create', 'enter' and 'run'\n* Prevent setting VTE-specific PROMPT_COMMAND without VTE\n* Remove the --candidate-registry option from Bash completion and the manual\n  for 'create'\n* Remove the deprecated reset command\n* Support RHEL hosts by creating containers based on UBI\n* Try to avoid 'latest' tags, when looking at RepoTags\n* Update the labels used for filtering toolbox containers images\n* Update the range of supported Fedora releases\n\n\nOverview of changes in 0.0.98.1\n===============================\n\n* Pass the USER environment variable to the container\n* Make /etc/profile.d/toolbox.sh compatible with Z shell again\n* Update the manual to mention that the --image and --release options of\n  'create' can't be used together\n\n\nOverview of changes in 0.0.98\n=============================\n\n* Add nss-mdns to the fedora-toolbox images\n* Correctly check validity of container name\n* Don't leak all the os-release fields into the shell\n* Don't rely on XDG_RUNTIME_DIR when running as root\n* Give access to Avahi to resolve the .local mDNS domain\n* Make coredumpctl(1) 'dump' and 'debug' work inside toolbox containers\n* Make options --image and --release for 'create' mutually exclusive\n* Notify the terminal about the real UID of 'toolbox enter'\n* Remove periods at the end of flag descriptions\n* Set XDG_RUNTIME_DIR when creating the toolbox container\n* Unbreak 'enter' on hosts without a /etc/localtime\n* Unbreak the system tests on Fedora 33\n* Use the host's user namespace when running as root\n\n\nOverview of changes in 0.0.97\n=============================\n\n* Allow X11 clients to run as root\n* Color the output only when displaying on a terminal\n* Don't rely on user D-Bus to track time zone configuration\n* Enable running minikube on Silverblue\n* Expose the host's /boot inside the container at /run/host\n* Fix missing terminfo warning for Ubuntu containers\n* Make locate(1) work inside toolbox containers\n* Make pseudo-terminal devices be owned by the 'tty' group\n* Rework test to check if a toolbox container started successfully\n* Run a login shell when falling back to Bash during 'enter'\n\n\nOverview of changes in 0.0.96\n=============================\n\n* Don't break GNU Readline's ctrl-p shortcut\n* Enable system tests on Fedora 33\n* Fix containers with missing /media possibly due to a failed RPM transaction\n* Give access to the udev database\n* Unbreak X11 applications with GNOME 3.38\n* Update default release to 31 for non-Fedora hosts\n\n\nOverview of changes in 0.0.95\n=============================\n\n* Try to handle configuration files that're absolute symlinks when the entry\n  point sets up the container\n* Unbreak 'enter' on Fedora CoreOS\n* Unbreak 'sudo' inside toolbox containers with Podman 2.0.5\n* Warn if $TERM has no terminfo entry in the container\n\n\nOverview of changes in 0.0.94\n=============================\n\n* Add contribution guidelines\n* Add fedora-toolbox image definition for Fedora 34\n* Add more information to errors from creating symbolic links when setting up\n  the toolbox container in the entry point\n* Ensure binaries built on Fedora 33 run on Fedoras 32 & 31\n* Install the tests\n* Make it more obvious when falling back to /bin/bash\n* Document that sudo(8) should work without a password\n* Mount a tmpfs at /tmp to match the host\n* Update issue templates\n\n\nOverview of changes in 0.0.93\n=============================\n\n* Ensure reproducible builds by using the -trimpath build flag\n* Fix the test suite to work with the Go implementation\n* Make listing of containers and images more robust against changes in the JSON\n  returned by Podman\n* List out dependencies and installation instructions\n* Re-enable highlighting of running containers\n* Show the spinner only when connected to a terminal\n* Speed things up by caching the Podman version at runtime\n* Update hint after creating a container to use the new syntax\n* Use the correct verb format for string\n\n\nOverview of changes in 0.0.92\n=============================\n\n* Embed the version from Meson into the binary\n* Make it build on aarch64\n\n\nOverview of changes in 0.0.91\n=============================\n\n* Add gvfs-client to the fedora-toolbox images\n* Adjust for changes in JSON output from 'podman ps' and 'podman images' in\n  Podman 2.0\n* Lower the Go build requirements to make it easier to build on Fedora\n* Show an error if $PWD is missing inside the container\n\n\nOverview of changes in 0.0.90\n=============================\n\n* Rewrite Toolbox in Go\n* Remove support for toolbox containers created by Toolbox 0.0.9 and older\n* Add option --version to show current Toolbox version\n* Add options --log-level and --log-podman as possible future replacements for\n  --verbose and --very-verbose\n* Clean up the spinner when aborted by SIGINT (or ctrl+c) and such\n* Fix duplication in the output of the list command\n* Mark the reset command as deprecated (replaced by 'podman system reset')\n* Support specifying the name of a toolbox container as an argument to the\n  create and enter commands, in addition to the --container option\n\n\nOverview of changes in 0.0.18\n=============================\n\n* Check /usr/share/profile.d when bind mounting toolbox.sh\n* Mount /media only if it is available\n* Set up /media and /mnt to match the host\n* Unbreak 'enter' when SELinux is disabled\n\n\nOverview of changes in 0.0.17\n=============================\n\n* Add a --very-verbose or -vv option\n* Deprecate all toolbox containers that don't use a reflexive entry point\n* Ensure that 'run' has at least one argument for the command\n* Give access to the host's systemd journal\n* Wipe out the container's /sys/fs/selinux to not advertise SELinux\n\n\nOverview of changes in 0.0.16\n=============================\n\n* Add a reset command\n* Document requirements for distro support\n* Don't use a toolbox container until after it has been configured\n* Drop the coloured heading from 'list'\n* Miscellaneous fixes to Bash completion\n* Remove the hidden --sudo option and the /etc/sudoers.d snippet\n* Try to migrate to a supported OCI runtime if 'podman start' suggests so\n* Unbreak 'run' if container lacks files that are redirected to the host\n\n\nOverview of changes in 0.0.15\n=============================\n\n* Be forgiving of a missing /etc/profile.d/toolbox.sh in 'run'\n* Don't sanity check /etc/subgid and /etc/subuid when running as root\n* Install only flatpak-spawn, not the rest of flatpak-xdg-utils, in the images\n* Let the terminal know the active container only on some Fedora variants\n* Rely on 'podman system migrate' always being present\n* Simplify code by dropping compatibility with 'podman create' < 1.4.0\n* Switch to using /usr/lib/os-release instead of /etc/os-release\n* Unbreak 'create' on Silverblue\n* Update default release to 30 when running on non-fedora hosts\n\n\nOverview of changes in 0.0.14\n=============================\n\n* Adjust the grep match pattern to be more specific\n* Don't exit with a non-zero code from 'toolbox list -i'\n* Expose a few more host locations inside the container under /run/host\n* Give access to the system Flatpak directory\n* Give access to the system libvirt instance\n* Mount /run/media only if it is available\n* Preserve the host's ulimits when creating toolbox containers\n* Work around 'podman exec' resetting the terminal size to 80x24\n\n\nOverview of changes in 0.0.13\n=============================\n\n* Drop PackageKit-command-not-found from the images\n* Improve the help or usage output\n* Simplify code by taking advantage of 'podman create --userns=keep-id'\n* Simplify code by taking advantage of 'podman exec --workdir ...'\n* Tighten the Silverblue check for the welcome message\n\n\nOverview of changes in 0.0.12\n=============================\n\n* Create /run/.toolboxenv inside the toolbox container's entry point too\n* Don't use 'podman cp' to copy toolbox.sh to old containers\n* Drop the \"immutable\" term\n* Unbreak /etc/localtime & /etc/timezone if /run/host/monitor is absent\n\n\nOverview of changes in 0.0.11\n=============================\n\n* Allow Qt applications to work without QT_X11_NO_MITSHM\n* Check if /etc/subgid and /etc/subuid have entries for the user\n* Give access to the entire /dev from the host operating system\n* Keep /etc/host.conf, /etc/localtime and /etc/timezone synchronized with the\n  host\n* Notify the terminal about the current toolbox container in use\n* Prevent Podman from complaining about 'podman cp --pause=true ...'\n* Unbreak rendering & wrapping of commands typed at an interactive prompt\n* Unbreak setting up /home as a symbolic link\n\n\nOverview of changes in 0.0.10\n=============================\n\n* Add a run command\n* Create /run/.toolboxenv in 'toolbox enter' for identification\n* Drop the Buildah dependency and the user-specific customized image\n* Keep /etc/hosts and /etc/resolv.conf synchronized with the host\n* Migrate existing containers when Podman is updated\n* Retain the PS1 across su(1) and sudo(8)\n* Set the Kerberos credential cache type only if Kerberos is available\n* Support column(1) from bsdmainutils\n* Support 'sudo' as default sudo(8) group\n* Use a magenta hexagon instead of 🔹 in the PS1\n\n\nOverview of changes in 0.0.9\n============================\n\n* Add Bash completion\n* Allow connecting to Wayland displays other than \"wayland-0\"\n* Ask for confirmation before downloading the base image\n* Improve the onboarding experience\n* Make it available inside the toolbox container\n* Make 'toolbox enter' create or fall back to a container when possible\n* Set TOOLBOX_CONTAINER in the environment to identify as a toolbox\n* Set default release to 29 when running on non-fedora hosts\n* Show welcome texts on interactive shells\n\n\nOverview of changes in 0.0.8\n============================\n\n* Add label for tagging, not tied to the fedora-toolbox name\n* Add short variants for various options in 'create' and 'enter'\n* Ensure that names of toolbox containers don't have a colon\n* Enable Travis\n* Fix miscellaneous issues pointed out by https://www.shellcheck.net/\n* Give access to Kerberos if KCM credential caches are being used\n* Improve the onboarding experience\n* Reduce the sizes of the images by removing temporary files created by DNF\n* Use a lighter entry point than /bin/sh\n\n\nOverview of changes in 0.0.7\n============================\n\n* Add fedora-toolbox image definition for Fedora 31\n* Add flatpak-xdg-utils to Fedoras 29 and 30\n* Add manuals\n* Add rm and rmi commands\n* Be more informative when creating the working container\n* Clarify the error message if the toolbox container is not found\n* Don't create volumes in the image for bind mounts from the host\n* Fix miscellaneous issues pointed out by https://www.shellcheck.net/\n* Give access to /dev/bus for control transfers from USB devices\n* Give access to removable devices and other temporary mounts\n* Lots of Bash-isms removed for POSIX correctness\n* Make the --image flag override the base toolbox image, as documented\n* Make the spinner more efficient\n* Restore documentation removed from the base Fedora images\n\n\nOverview of changes in 0.0.6\n============================\n\n* Add a list command\n* Drop the \"fedora\" prefix and rename the project as just \"toolbox\"\n* Fix typos pointed out by https://www.shellcheck.net/\n* Lots of Bash-isms removed for POSIX correctness\n* Make --container and --image command-specific options\n* Make it work inside the toolbox container itself\n* Shorten the prefix for debug and error messages\n* Use the host's PID namespace for the toolbox container\n* Use the standard error output for error messages\n\n\nOverview of changes in 0.0.5\n============================\n\n* Give access to mounts under $HOME, and make autofs work\n* Show a spinner when creating the toolbox\n\n\nOverview of changes in 0.0.4\n============================\n\n* Avoid spooky root-like behaviour for non-root interactive shells\n* Give access to the FUSE kernel module\n* Improve the readability of the debug output\n* Set up $HOME and /home to match the host\n* Try to enter the same directory inside the toolbox\n\n\nOverview of changes in 0.0.3\n============================\n\n* Clean up the Buildah working containers on error\n* Unbreak creating the toolbox if the toolbox image already exists\n\n\nOverview of changes in 0.0.2\n============================\n\n* Allow an 'F' or 'f' prefix when specifying the release\n* Avoid a Bash-ism (ie. ==) and stick to POSIX (ie. =)\n* Fallback to /bin/bash if $SHELL doesn't exist in the toolbox container\n* Give access to the system D-Bus instance\n* Make shm_open work\n\n\nOverview of changes in 0.0.1\n============================\n\n* First preview release\n\n\n----\n\nCopyright © 2018 – 2024 Red Hat, Inc.\nAll rights reserved.\n\nCopying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.115234375,
          "content": "![README](data/gfx/README.gif)\n\n[Toolbx](https://containertoolbx.org/) is a tool for Linux, which allows the\nuse of interactive command line environments for software development and\ntroubleshooting the host operating system, without having to install software\non the host. It is built on top of [Podman](https://podman.io/) and other\nstandard container technologies from [OCI](https://opencontainers.org/).\n\nToolbx environments have seamless access to the user's home directory,\nthe Wayland and X11 sockets, networking (including Avahi), removable devices\n(like USB sticks), systemd journal, SSH agent, D-Bus, ulimits, /dev and the\nudev database, etc..\n\nThis is particularly useful on\n[OSTree](https://ostreedev.github.io/ostree/) based operating systems like\n[Fedora CoreOS](https://fedoraproject.org/coreos/) and\n[Silverblue](https://fedoraproject.org/silverblue/). The intention of these\nsystems is to discourage installation of software on the host, and instead\ninstall software as (or in) containers — they mostly don't even have package\nmanagers like DNF or YUM. This makes it difficult to set up a development\nenvironment or troubleshoot the operating system in the usual way.\n\nToolbx solves this problem by providing a fully mutable container within\nwhich one can install their favourite development and troubleshooting tools,\neditors and SDKs. For example, it's possible to do `yum install ansible`\nwithout affecting the base operating system.\n\nHowever, this tool doesn't *require* using an OSTree based system. It works\nequally well on Fedora Workstation and Server, and that's a useful way to\nincrementally adopt containerization.\n\nThe Toolbx environment is based on an [OCI](https://www.opencontainers.org/)\nimage. On Fedora this is the `fedora-toolbox` image. This image is used to\ncreate a Toolbx container that offers the interactive command line\nenvironment.\n\nNote that Toolbx makes no promise about security beyond what's already\navailable in the usual command line environment on the host that everybody is\nfamiliar with.\n\n\n## Installation & Use\n\nSee our guides on\n[installing & getting started](https://containertoolbx.org/install/) with\nToolbx and [Linux distro support](https://containertoolbx.org/distros/).\n\n\n##\n\n[![Star History Chart](https://api.star-history.com/svg?repos=containers/toolbox&type=Date)](https://star-history.com/#containers/toolbox&Date)\n\n\n##\n\n[![Zuul](https://zuul-ci.org/gated.svg)](https://softwarefactory-project.io/zuul/t/local/builds?project=containers/toolbox)\n[![Daily Pipeline](https://softwarefactory-project.io/zuul/api/tenant/local/badge?project=containers/toolbox&pipeline=periodic)](https://softwarefactory-project.io/zuul/t/local/builds?project=containers%2Ftoolbox&pipeline=periodic)\n\n[![Arch Linux package](https://img.shields.io/archlinux/v/extra/x86_64/toolbox?logo=archlinux)](https://www.archlinux.org/packages/extra/x86_64/toolbox/)\n[![Fedora package](https://img.shields.io/fedora/v/toolbox/rawhide?logo=fedora)](https://src.fedoraproject.org/rpms/toolbox/)\n[![Ubuntu package](https://img.shields.io/badge/ubuntu-0.0.99.3%2Bgit20230118%2B446d7bfdef6a-orange?logo=ubuntu)](https://packages.ubuntu.com/noble/podman-toolbox)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2294921875,
          "content": "## Security and Disclosure Information Policy for the Toolbx Project\n\nThe Toolbx Project follows the\n[Security and Disclosure Information Policy](https://github.com/containers/common/blob/main/SECURITY.md)\nfor the Containers Projects.\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen-docs-list",
          "type": "blob",
          "size": 1.986328125,
          "content": "#!/bin/sh\n#\n# Copyright © 2019 – 2024 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\ncollect()\n(\n    if $1; then\n        postfix=\"_toolbox\"\n    else\n        postfix=\"\"\n    fi\n\n    manpages_list=\"\"\n    for dir in /usr/share/man/man*/ ; do\n        for docs in $dir*; do\n            package=$(rpm -qf $docs --qf \"%{NAME}\\n\")\n            if ! [[ $package = *\"is not owned by any\"* ]]; then\n                manpages_list=\"$manpages_list$package\\n\"\n            fi\n        done\n    done\n\n    mkdir -p tmp\n    echo -e \"$manpages_list\" | sort | uniq > tmp/docs_list$postfix\n    rpm -qa --qf \"%{NAME}\\n\" | sort | uniq > tmp/rpm_list$postfix\n)\n\n\ngenerate()\n(\n    diff -c tmp/rpm_list_toolbox tmp/rpm_list | grep -E \"^\\+\" | tr -d '+ ' > tmp/missing_packages\n    diff -c tmp/docs_list_toolbox tmp/docs_list | grep -E \"^\\+\" | tr -d '+ ' > tmp/missing_manpages\n    manpages_list=$(comm -1 -3 tmp/missing_packages tmp/missing_manpages)\n    manpages_final=\"\"\n    while read -r line; do\n        if [ \"$(man $line)\" != \"\" ]; then\n            manpages_final=\"$manpages_final$line\\n\"\n        fi\n    done <<< \"$manpages_list\"\n    echo -e \"$manpages_final\" >> missing-docs\n)\n\n\ncase $1 in\n    collect )\n        shift\n        toolbox=false\n        case $1 in\n            -t | --toolbox )\n                toolbox=true\n                ;;\n        esac\n        collect \"$toolbox\"\n        exit\n        ;;\n    generate )\n        generate\n        exit\n        ;;\n    clean )\n        rm -rf tmp\n        exit\n        ;;\n    * )\n        exit 1\nesac\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 3.345703125,
          "content": "project(\n  'toolbox',\n  'c',\n  version: '0.1.1',\n  license: 'ASL 2.0',\n  default_options: 'c_std=c99',\n  meson_version: '>= 0.58.0',\n)\n\nfs = import('fs')\n\ncc = meson.get_compiler('c')\nif not cc.has_argument('-print-file-name=libc.so')\n  error('C compiler does not support the -print-file-name argument.')\nendif\n\nsubid_dep = cc.find_library('subid', has_headers: ['shadow/subid.h'])\n\ngo = find_program('go')\ngo_md2man = find_program('go-md2man')\n\nbats = find_program('bats', required: false)\ncodespell = find_program('codespell', required: false)\nhtpasswd = find_program('htpasswd', required: false)\nopenssl = find_program('openssl', required: false)\npodman = find_program('podman', required: false)\nshellcheck = find_program('shellcheck', required: false)\nskopeo = find_program('skopeo', required: false)\n\nbashcompletionsdir = get_option('bash_completions_dir')\nif bashcompletionsdir == ''\n  bash_completion_dep = dependency('bash-completion', required: get_option('bash_completions'))\n  if bash_completion_dep.found()\n    bashcompletionsdir = bash_completion_dep.get_variable(pkgconfig: 'completionsdir')\n  endif\nendif\n\nfishcompletionsdir = get_option('fish_completions_dir')\nif fishcompletionsdir == ''\n  fish_completion_dep = dependency('fish', required: get_option('fish_completions'))\n  if fish_completion_dep.found()\n    fishcompletionsdir = fish_completion_dep.get_variable(pkgconfig: 'completionsdir')\n  endif\nendif\n\nzshcompletionsdir = get_option('zsh_completions_dir')\nif zshcompletionsdir == ''\n  zshcompletionsdir = get_option('datadir') / 'zsh' / 'site-functions'\nendif\n\nmigration_path_for_coreos_toolbox = get_option('migration_path_for_coreos_toolbox')\nprofiledir = get_option('profile_dir')\n\ntmpfilesdir = get_option('tmpfiles_dir')\nif tmpfilesdir == '' or not fs.exists('/run/.containerenv')\n  systemd_dep = dependency('systemd')\n\n  if tmpfilesdir == ''\n    tmpfilesdir = systemd_dep.get_variable(pkgconfig: 'tmpfilesdir')\n  endif\nendif\n\ntoolbox_sh = files('toolbox')\n\nif codespell.found()\n  test(\n    'codespell',\n    codespell,\n    args: [\n      '--check-filenames',\n      '--check-hidden',\n      '--context', '3',\n      '--exclude-file', meson.project_source_root() / '.codespellexcludefile',\n      '--skip', meson.project_build_root(),\n      '--skip', meson.project_source_root() / '.git',\n      '--skip', meson.project_source_root() / 'test/system/libs/bats-assert',\n      '--skip', meson.project_source_root() / 'test/system/libs/bats-support',\n      meson.project_source_root(),\n    ],\n  )\nendif\n\nif shellcheck.found()\n  test('shellcheck toolbox (deprecated)', shellcheck, args: [toolbox_sh])\nendif\n\ninstall_subdir(\n  'test',\n  install_dir: get_option('datadir') / meson.project_name(),\n  exclude_files: [\n    'meson.build',\n    'system/libs/bats-assert/.git',\n    'system/libs/bats-assert/.gitignore',\n    'system/libs/bats-assert/.travis.yml',\n    'system/libs/bats-assert/package.json',\n    'system/libs/bats-support/.git',\n    'system/libs/bats-support/.gitignore',\n    'system/libs/bats-support/.travis.yml',\n    'system/libs/bats-support/package.json',\n    'system/meson.build',\n    ],\n  exclude_directories: [\n    'system/libs/bats-assert/script',\n    'system/libs/bats-assert/test',\n    'system/libs/bats-support/script',\n    'system/libs/bats-support/test'\n  ]\n)\n\nsubdir('data')\nsubdir('doc')\nsubdir('profile.d')\nsubdir('src')\nsubdir('test')\n\nmeson.add_install_script('meson_post_install.py')\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.98828125,
          "content": "option(\n  'bash_completions',\n  description: 'Install Bash completion scripts',\n  type: 'feature',\n)\n\noption(\n  'bash_completions_dir',\n  description: 'Directory for Bash completion scripts',\n  type: 'string',\n)\n\noption(\n  'fish_completions',\n  description: 'Install fish completion scripts',\n  type: 'feature',\n)\n\noption(\n  'fish_completions_dir',\n  description: 'Directory for fish completion scripts',\n  type: 'string',\n)\n\noption(\n  'zsh_completions_dir',\n  description: 'Directory for Z shell completion scripts (default=$datadir/zsh/site-functions)',\n  type: 'string',\n)\n\noption(\n  'migration_path_for_coreos_toolbox',\n  description: 'Offer a migration path to users of github.com/coreos/toolbox',\n  type: 'boolean',\n  value: false\n)\n\noption(\n  'profile_dir',\n  description: 'Directory for profile.d files to be read by the shell on start-up',\n  type: 'string',\n  value: '/usr/share/profile.d'\n)\n\noption(\n  'tmpfiles_dir',\n  description: 'Directory for system-wide tmpfiles.d(5) files',\n  type: 'string',\n)\n"
        },
        {
          "name": "meson_post_install.py",
          "type": "blob",
          "size": 0.849609375,
          "content": "#!/usr/bin/env python3\n#\n# Copyright © 2021 – 2024 Red Hat Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nimport os\nimport subprocess\nimport sys\n\ndestdir = os.environ.get('DESTDIR', '')\neuid = os.geteuid()\n\nif not destdir and not os.path.exists('/run/.containerenv') and euid == 0:\n    subprocess.run(['systemd-tmpfiles', '--create'], check=True)\n\nsys.exit(0)\n"
        },
        {
          "name": "playbooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "profile.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolbox",
          "type": "blob",
          "size": 82.5478515625,
          "content": "#!/bin/sh\n#\n# Copyright © 2018 – 2022 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# THIS IMPLEMENTATION OF TOOLBOX IS NO LONGER MAINTAINED.\n# Please, use the Go implementation instead:\n# https://containertoolbx.org/install/\n\nexec 3>/dev/null\n\narguments=\"\"\nassume_yes=false\nbase_toolbox_command=$(basename \"$0\" 2>&3)\nbase_toolbox_image=\"\"\ncgroups_version=\"\"\n\n# Based on the nameRegex value in:\n# https://github.com/containers/libpod/blob/master/libpod/options.go\ncontainer_name_regexp=\"[a-zA-Z0-9][a-zA-Z0-9_.-]*\"\n\nenvironment=$(set)\nenvironment_variables=\"COLORTERM \\\n        COLUMNS \\\n        DBUS_SESSION_BUS_ADDRESS \\\n        DBUS_SYSTEM_BUS_ADDRESS \\\n        DESKTOP_SESSION \\\n        DISPLAY \\\n        LANG \\\n        LINES \\\n        SHELL \\\n        SSH_AUTH_SOCK \\\n        TERM \\\n        TOOLBOX_PATH \\\n        USER \\\n        VTE_VERSION \\\n        WAYLAND_DISPLAY \\\n        XAUTHORITY \\\n        XDG_CURRENT_DESKTOP \\\n        XDG_DATA_DIRS \\\n        XDG_MENU_PREFIX \\\n        XDG_RUNTIME_DIR \\\n        XDG_SEAT \\\n        XDG_SESSION_DESKTOP \\\n        XDG_SESSION_ID \\\n        XDG_SESSION_TYPE \\\n        XDG_VTNR\"\nfgc=\"\"\n\npodman_command=\"podman\"\nregistry=\"registry.fedoraproject.org\"\nregistry_candidate=\"candidate-registry.fedoraproject.org\"\nrelease=\"\"\nrelease_default=\"\"\nspinner_animation=\"[>----] [=>---] [==>--] [===>-] [====>] [----<] [---<=] [--<==] [-<===] [<====]\"\nspinner_template=\"toolbox-spinner-XXXXXXXXXX\"\ntab=\"$(printf '\\t')\"\ntoolbox_command_path=\"\"\ntoolbox_container=\"\"\ntoolbox_container_default=\"\"\ntoolbox_container_old_v1=\"\"\ntoolbox_container_old_v2=\"\"\ntoolbox_container_prefix_default=\"\"\ntoolbox_image=\"\"\ntoolbox_runtime_directory=\"$XDG_RUNTIME_DIR\"/toolbox\nuser_id_real=$(id -ru 2>&3)\nverbose=false\n\n\nLGC='\\033[1;32m' # Light Green Color\nNC='\\033[0m' # No Color\n\n\nhas_prefix()\n(\n    str=\"$1\"\n    prefix=\"$2\"\n\n    ret_val=1\n\n    case \"$str\" in\n        \"$prefix\"* )\n            ret_val=0\n            ;;\n        * )\n            ret_val=1\n            ;;\n    esac\n\n    return \"$ret_val\"\n)\n\n\nhas_substring()\n(\n    haystack=\"$1\"\n    needle=\"$2\"\n\n    ret_val=1\n\n    case \"$haystack\" in\n        *\"$needle\"* )\n            ret_val=0\n            ;;\n        * )\n            ret_val=1\n            ;;\n    esac\n\n    return \"$ret_val\"\n)\n\n\nis_integer()\n{\n    [ \"$1\" != \"\" ] && [ \"$1\" -eq \"$1\" ] 2>&3\n    return \"$?\"\n}\n\n\nsave_positional_parameters()\n{\n    for i; do\n        printf \"%s\\\\n\" \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" 2>&3\n    done\n    echo \" \"\n}\n\n\nspinner_start()\n(\n    directory=\"$1\"\n    message=\"$2\"\n\n    if $verbose; then\n        rm --force --recursive \"$directory\" 2>&3\n        return 0\n    fi\n\n    if ! touch \"$directory/spinner-start\" 2>&3; then\n        echo \"$base_toolbox_command: unable to start spinner: spinner start file couldn't be created\" >&2\n        return 1\n    fi\n\n    printf \"%s\" \"$message\"\n    tput civis 2>&3\n\n    exec 4>\"$directory/spinner-start\"\n    if ! flock 4 2>&3; then\n        echo \"$base_toolbox_command: unable to start spinner: spinner lock couldn't be acquired\" >&2\n        return 1\n    fi\n\n    (\n        while [ -f \"$directory/spinner-start\" ]; do\n            echo \"$spinner_animation\" | sed \"s/ /\\n/g\" 2>&3 | while read -r frame; do\n                if ! [ -f \"$directory/spinner-start\" ] 2>&3; then\n                   break\n                fi\n\n                printf \"%s\" \"$frame\"\n\n                frame_len=${#frame}\n                i=0\n                while [ \"$i\" -lt \"$frame_len\" ]; do\n                    printf \"\\b\"\n                    i=$((i + 1))\n                done\n\n                sleep 1\n            done\n        done\n\n        printf \"\\033[2K\" # delete entire line regardless of cursor position\n        printf \"\\r\"\n        tput cnorm 2>&3\n    ) &\n\n    return 0\n)\n\n\nspinner_stop()\n(\n    $verbose && return\n    directory=\"$1\"\n\n    exec 4>\"$directory/spinner-start\"\n\n    if ! rm \"$directory/spinner-start\" 2>&3; then\n        echo \"$base_toolbox_command: unable to stop spinner: spinner start file couldn't be removed\" >&2\n        return\n    fi\n\n    if ! flock 4 2>&3; then\n        echo \"$base_toolbox_command: unable to stop spinner: spinner lock couldn't be acquired\" >&2\n        return\n    fi\n\n    rm --force --recursive \"$directory\" 2>&3\n)\n\n\nask_for_confirmation()\n(\n    default_response=\"$1\"\n    prompt=\"$2\"\n    ret_val=0\n\n    while :; do\n        printf \"%s \" \"$prompt\"\n        read -r user_response\n\n        if [ \"$user_response\" = \"\" ] 2>&3; then\n            user_response=\"$default_response\"\n        else\n            user_response=$(echo \"$user_response\" | tr \"[:upper:]\" \"[:lower:]\" 2>&3)\n        fi\n\n        if [ \"$user_response\" = \"no\" ] 2>&3 || [ \"$user_response\" = \"n\" ] 2>&3; then\n            ret_val=1\n            break\n        elif [ \"$user_response\" = \"yes\" ] 2>&3 || [ \"$user_response\" = \"y\" ] 2>&3; then\n            ret_val=0\n            break\n        fi\n    done\n\n    return \"$ret_val\"\n)\n\n\ncontainer_name_is_valid()\n(\n    name=\"$1\"\n\n    echo \"$name\" | grep \"^$container_name_regexp$\" >/dev/null 2>&3\n    return \"$?\"\n)\n\n\ncontainer_start()\n(\n    container=\"$1\"\n\n    error_message=$( ($podman_command start \"$container\" >/dev/null) 2>&1)\n    ret_val=\"$?\"\n    [ \"$error_message\" != \"\" ] 2>&3 && echo \"$error_message\" >&3\n\n    if [ \"$ret_val\" -ne 0 ] 2>&3; then\n        if echo \"$error_message\" | grep \"use system migrate to mitigate\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: checking if 'podman system migrate' supports --new-runtime\" >&3\n\n            if ! ($podman_command system migrate --help 2>&3 | grep \"new-runtime\" >/dev/null 2>&3); then\n                echo \"$base_toolbox_command: container $container doesn't support cgroups v$cgroups_version\" >&2\n                echo \"Update Podman to version 1.6.2 or newer.\" >&2\n                return 1\n            else\n                echo \"$base_toolbox_command: 'podman system migrate' supports --new-runtime\" >&3\n\n                oci_runtime_required=\"runc\"\n                [ \"$cgroups_version\" -eq 2 ] 2>&3 && oci_runtime_required=\"crun\"\n\n                echo \"$base_toolbox_command: migrating containers to OCI runtime $oci_runtime_required\" >&3\n\n                if ! $podman_command system migrate --new-runtime \"$oci_runtime_required\" >/dev/null 2>&3; then\n                    echo \"$base_toolbox_command: failed to migrate containers to OCI runtime $oci_runtime_required\" >&2\n                    echo \"Factory reset with: toolbox reset\" >&2\n                    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n                    return 1\n                fi\n\n                if ! $podman_command start \"$container\" >/dev/null 2>&3; then\n                    echo \"$base_toolbox_command: container $container doesn't support cgroups v$cgroups_version\" >&2\n                    echo \"Factory reset with: toolbox reset\" >&2\n                    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n                    return 1\n                fi\n            fi\n        else\n            echo \"$base_toolbox_command: failed to start container $container\" >&2\n            return 1\n        fi\n    fi\n\n    return 0\n)\n\n\ncopy_etc_profile_d_toolbox_to_container()\n(\n    container=\"$1\"\n\n    profile_d_lock=\"$toolbox_runtime_directory\"/profile.d-toolbox.lock\n\n    # shellcheck disable=SC2174\n    if ! mkdir --mode 700 --parents \"$toolbox_runtime_directory\" 2>&3; then\n        echo \"$base_toolbox_command: unable to copy $toolbox_runtime_directory/toolbox.sh: runtime directory not created\" >&2\n        return 1\n    fi\n\n    exec 5>\"$profile_d_lock\"\n    if ! flock 5 2>&3; then\n        echo \"$base_toolbox_command: unable to copy $toolbox_runtime_directory/toolbox.sh: copy lock not acquired\" >&2\n        return 1\n    fi\n\n    if ! [ -f \"$toolbox_runtime_directory\"/toolbox.sh ] 2>&3; then\n        echo \"$base_toolbox_command: $toolbox_runtime_directory/toolbox.sh not found\" >&2\n        return 0\n    fi\n\n    echo \"$base_toolbox_command: copying $toolbox_runtime_directory/toolbox.sh to container $container\" >&3\n\n    if ! $podman_command exec \\\n                 --user root:root \\\n                 \"$container\" \\\n                 sh -c \"cp $toolbox_runtime_directory/toolbox.sh /etc/profile.d\" sh 2>&3; then\n        echo \"$base_toolbox_command: unable to copy $toolbox_runtime_directory/toolbox.sh to container $container\" >&2\n        return 1\n    fi\n\n    return 0\n)\n\n\ncopy_etc_profile_d_toolbox_to_runtime_directory()\n(\n    profile_d_lock=\"$toolbox_runtime_directory\"/profile.d-toolbox.lock\n\n    if ! [ -f /etc/profile.d/toolbox.sh ] 2>&3; then\n        echo \"$base_toolbox_command: /etc/profile.d/toolbox.sh not found\" >&2\n        return 0\n    fi\n\n    # shellcheck disable=SC2174\n    if ! mkdir --mode 700 --parents \"$toolbox_runtime_directory\" 2>&3; then\n        echo \"$base_toolbox_command: unable to copy /etc/profile.d/toolbox.sh: runtime directory not created\" >&2\n        return 1\n    fi\n\n    exec 5>\"$profile_d_lock\"\n    if ! flock 5 2>&3; then\n        echo \"$base_toolbox_command: unable to copy /etc/profile.d/toolbox.sh: copy lock not acquired\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: copying /etc/profile.d/toolbox.sh to $toolbox_runtime_directory\" >&3\n\n    if ! cp /etc/profile.d/toolbox.sh \"$toolbox_runtime_directory\" 2>&3; then\n        echo \"$base_toolbox_command: unable to copy /etc/profile.d/toolbox.sh to $toolbox_runtime_directory\" >&2\n        return 1\n    fi\n\n    return 0\n)\n\n\ncreate_enter_command()\n(\n    container=\"$1\"\n\n    if [ \"$container\" = \"$toolbox_container_default\" ] 2>&3; then\n        echo \"$base_toolbox_command enter\"\n    elif [ \"$container\" = \"$toolbox_container_prefix_default-$release\" ] 2>&3; then\n        echo \"$base_toolbox_command enter --release $release\"\n    else\n        echo \"$base_toolbox_command enter --container $container\"\n    fi\n)\n\n\ncreate_environment_options()\n(\n    columns=\"\"\n    lines=\"\"\n\n    if terminal_size=$(stty size 2>&3); then\n        columns=$(echo \"$terminal_size\" | cut --delimiter \" \" --fields 2 2>&3)\n        if ! is_integer \"$columns\"; then\n            echo \"$base_toolbox_command: failed to parse the number of columns from the terminal size\" >&3\n            columns=\"\"\n        fi\n\n        lines=$(echo \"$terminal_size\" | cut --delimiter \" \" --fields 1 2>&3)\n        if ! is_integer \"$lines\"; then\n            echo \"$base_toolbox_command: failed to parse the number of lines from the terminal size\" >&3\n            lines=\"\"\n        fi\n    else\n        echo \"$base_toolbox_command: failed to read terminal size\" >&3\n    fi\n\n    echo \"$environment_variables\" \\\n        | sed \"s/ \\+/\\n/g\" 2>&3 \\\n        | {\n              environment_options=\"\"\n              echo \"$base_toolbox_command: creating list of environment variables to forward\" >&3\n              value=\"\"\n              while read -r variable; do\n                  if echo \"$environment\" | grep \"^$variable\" >/dev/null 2>&3; then\n                      eval value=\"$\"\"$variable\"\n                      echo \"$base_toolbox_command: $variable=$value\" >&3\n                      environment_options=\"$environment_options --env=$variable=$value\"\n                  else\n                      echo \"$base_toolbox_command: $variable is unset\" >&3\n                  fi\n              done\n\n              if ! (echo \"$environment_options\" | grep COLUMNS >/dev/null 2>&3) && [ \"$columns\" != \"\" ] 2>&3; then\n                  environment_options=\"$environment_options --env=COLUMNS=$columns\"\n              fi\n\n              if ! (echo \"$environment_options\" | grep LINES >/dev/null 2>&3) && [ \"$lines\" != \"\" ] 2>&3; then\n                  environment_options=\"$environment_options --env=LINES=$lines\"\n              fi\n\n              environment_options=${environment_options#\" \"}\n              echo \"$base_toolbox_command: created options for environment variables to forward\" >&3\n              echo \"$environment_options\" >&3\n              echo \"$environment_options\"\n          }\n)\n\n\ncreate_toolbox_container_name()\n(\n    image=\"$1\"\n\n    basename=$(image_reference_get_basename \"$image\")\n    if [ \"$basename\" = \"\" ] 2>&3; then\n        return 100\n    fi\n\n    tag=$(image_reference_get_tag \"$image\")\n    if [ \"$tag\" = \"\" ] 2>&3; then\n        return 101\n    fi\n\n    echo \"$basename-$tag\"\n    return 0\n)\n\n\ncreate_toolbox_image_name()\n(\n    # Based on the ResolveName function implemented in:\n    # https://github.com/containers/buildah/blob/master/util/util.go\n\n    if image_reference_can_be_id \"$base_toolbox_image\"; then\n        if base_toolbox_image_id=$($podman_command inspect \\\n                                           --format \"{{.Id}}\" \\\n                                           --type image \\\n                                           \"$base_toolbox_image\" 2>&3); then\n            if has_prefix \"$base_toolbox_image_id\" \"$base_toolbox_image\"; then\n                echo \"$base_toolbox_image-$USER:latest\"\n                return 0\n            fi\n        fi\n    fi\n\n    basename=$(image_reference_get_basename \"$base_toolbox_image\")\n    if [ \"$basename\" = \"\" ] 2>&3; then\n        return 100\n    fi\n\n    tag=$(image_reference_get_tag \"$base_toolbox_image\")\n    if [ \"$tag\" = \"\" ] 2>&3; then\n        echo \"$basename-$USER:latest\"\n    else\n        echo \"$basename-$USER:$tag\"\n    fi\n\n    return 0\n)\n\n\nenter_print_container_not_found()\n(\n    container=\"$1\"\n\n    echo \"$base_toolbox_command: container $container not found\" >&2\n    echo \"Use the 'create' command to create a toolbox.\" >&2\n    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n)\n\n\nget_cgroups_version()\n(\n    version=1\n\n    if ! mounts=$(mount 2>&3); then\n        echo \"$base_toolbox_command: failed to detect cgroups version: couldn't list mount points\" >&2\n        return 1\n    fi\n\n    if ! (echo \"$mounts\" | grep \"^cgroup \" >/dev/null 2>&3) && (echo \"$mounts\" | grep \"^cgroup2 \" >/dev/null 2>&3); then\n        version=2\n    fi\n\n    echo \"$version\"\n    return 0\n)\n\n\nget_group_for_sudo()\n(\n    group=\"\"\n    if getent group sudo >/dev/null 2>&3; then\n        group=\"sudo\"\n    elif getent group wheel >/dev/null 2>&3; then\n        group=\"wheel\"\n    else\n        return 1\n    fi\n\n    echo \"$group\"\n    return 0\n)\n\n\nget_host_id()\n(\n    # shellcheck disable=SC1091\n    . /usr/lib/os-release\n    echo \"$ID\"\n)\n\n\nget_host_variant_id()\n(\n    # shellcheck disable=SC1091\n    . /usr/lib/os-release\n    echo \"$VARIANT_ID\"\n)\n\n\nget_host_version_id()\n(\n    # shellcheck disable=SC1091\n    . /usr/lib/os-release\n    echo \"$VERSION_ID\"\n)\n\n\nimage_reference_can_be_id()\n(\n    image=\"$1\"\n\n    echo \"$image\" | grep \"^[a-f0-9]\\{6,64\\}$\" >/dev/null 2>&3\n    return \"$?\"\n)\n\n\nimage_reference_get_basename()\n(\n    image=\"$1\"\n\n    domain=$(image_reference_get_domain \"$image\")\n    remainder=${image#\"$domain\"}\n    path=${remainder%:*}\n    basename=${path##*/}\n    echo \"$basename\"\n)\n\n\nimage_reference_get_domain()\n(\n    image=\"$1\"\n\n    image_reference_has_domain \"$image\" && domain=${image%%/*}\n    echo \"$domain\"\n)\n\n\nimage_reference_get_tag()\n(\n    image=\"$1\"\n\n    domain=$(image_reference_get_domain \"$image\")\n    remainder=${image#\"$domain\"}\n\n    tag=\"\"\n    if (echo \"$remainder\" | grep \":\" >/dev/null 2>&3); then\n       tag=${remainder#*:}\n    fi\n\n    echo \"$tag\"\n)\n\n\nimage_reference_has_domain()\n(\n    # Based on the splitDockerDomain function implemented in:\n    # https://github.com/docker/distribution/blob/master/reference/normalize.go\n\n    image=\"$1\"\n\n    if ! (echo \"$image\" | grep \"/\" >/dev/null 2>&3); then\n        return 1\n    fi\n\n    prefix=${image%%/*}\n    if ! (echo \"$prefix\" | grep \"[.:]\" >/dev/null 2>&3) && [ \"$prefix\" != \"localhost\" ] 2>&3; then\n       return 1\n    fi\n\n    return 0\n)\n\n\nimages_get_details()\n(\n    images=\"$1\"\n\n    if ! echo \"$images\" | while read -r image; do\n            [ \"$image\" = \"\" ] 2>&3 && continue\n\n            if ! $podman_command images \\\n                         --format \"{{.ID}} {{.Repository}}:{{.Tag}} {{.Created}}\" \\\n                         --noheading \\\n                         \"$image\" 2>&3; then\n                echo \"$base_toolbox_command: failed to get details for image $image\" >&2\n                return 1\n            fi\n            echo\n         done; then\n        return 1\n    fi\n\n    return 0\n)\n\n\nis_etc_profile_d_toolbox_a_bind_mount()\n{\n    container=\"$1\"\n\n    $podman_command inspect --format \"[{{range .Mounts}}{{.Dst}} {{end}}]\" --type container \"$container\" 2>&3 \\\n    | grep /etc/profile.d/toolbox.sh >/dev/null 2>/dev/null 2>&3\n\n    return \"$?\"\n}\n\n\nlist_container_names()\n(\n    if ! containers_old=$($podman_command ps \\\n                                  --all \\\n                                  --filter \"label=com.redhat.component=fedora-toolbox\" \\\n                                  --format \"{{.Names}}\" 2>&3); then\n        echo \"$base_toolbox_command: failed to list containers with com.redhat.component=fedora-toolbox\" >&2\n        return 1\n    fi\n\n    if ! containers=$($podman_command ps \\\n                              --all \\\n                              --filter \"label=com.github.debarshiray.toolbox=true\" \\\n                              --format \"{{.Names}}\" 2>&3); then\n        echo \"$base_toolbox_command: failed to list containers with com.github.debarshiray.toolbox=true\" >&2\n        return 1\n    fi\n\n    printf \"%s\\n%s\\n\" \"$containers_old\" \"$containers\" | sort 2>&3 | uniq 2>&3\n    return 0\n)\n\n\nmount_bind()\n(\n    source=\"$1\"\n    target=\"$2\"\n    mount_flags=\"$3\"\n\n    mount_o=\"\"\n\n    ! [ -d \"$source\" ] 2>&3 && ! [ -f \"$source\" ] 2>&3 && return 0\n\n    if [ -d \"$source\" ] 2>&3; then\n        echo \"$base_toolbox_command: creating $target\" >&3\n\n        if ! mkdir --parents \"$target\" 2>&3; then\n            echo \"$base_toolbox_command: failed to create $target\" >&2\n            return 1\n        fi\n    fi\n\n    echo \"$base_toolbox_command: binding $target to $source\" >&3\n\n    [ \"$mount_flags\" = \"\" ] 2>&3 || mount_o=\"-o $mount_flags\"\n\n    # shellcheck disable=SC2086\n    if ! mount --rbind $mount_o \"$source\" \"$target\" 2>&3; then\n        echo \"$base_toolbox_command: failed to bind $target to $source\" >&2\n        return 1\n    fi\n\n    return 0\n)\n\n\npull_base_toolbox_image()\n(\n    domain=\"\"\n    has_domain=false\n    prompt_for_download=true\n    pull_image=false\n\n    if image_reference_can_be_id \"$base_toolbox_image\"; then\n        echo \"$base_toolbox_command: looking for image $base_toolbox_image\" >&3\n\n        if $podman_command image exists \"$base_toolbox_image\" >/dev/null 2>&3; then\n            return 0\n        fi\n    fi\n\n    image_reference_has_domain \"$base_toolbox_image\" && has_domain=true\n\n    if ! $has_domain; then\n        echo \"$base_toolbox_command: looking for image localhost/$base_toolbox_image\" >&3\n\n        if $podman_command image exists \"localhost/$base_toolbox_image\" >/dev/null 2>&3; then\n            return 0\n        fi\n    fi\n\n    if $has_domain; then\n        base_toolbox_image_full=\"$base_toolbox_image\"\n    else\n        base_toolbox_image_full=\"$registry/$fgc/$base_toolbox_image\"\n    fi\n\n    echo \"$base_toolbox_command: looking for image $base_toolbox_image_full\" >&3\n\n    if $podman_command image exists \"$base_toolbox_image_full\" >/dev/null 2>&3; then\n        return 0\n    fi\n\n    domain=$(image_reference_get_domain \"$base_toolbox_image_full\")\n    if $assume_yes || [ \"$domain\" = \"localhost\" ] 2>&3; then\n        prompt_for_download=false\n        pull_image=true\n    fi\n\n    if $prompt_for_download; then\n        echo \"Image required to create toolbox container.\"\n\n        prompt=$(printf \"Download %s (500MB)? [y/N]:\" \"$base_toolbox_image_full\")\n        if ask_for_confirmation \"n\" \"$prompt\"; then\n            pull_image=true\n        else\n            pull_image=false\n        fi\n    fi\n\n    if ! $pull_image; then\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: pulling image $base_toolbox_image_full\" >&3\n\n    if spinner_directory=$(mktemp --directory --tmpdir $spinner_template 2>&3); then\n        spinner_message=\"Pulling $base_toolbox_image_full: \"\n        if ! spinner_start \"$spinner_directory\" \"$spinner_message\"; then\n            spinner_directory=\"\"\n        fi\n    else\n        echo \"$base_toolbox_command: unable to start spinner: spinner directory not created\" >&2\n        spinner_directory=\"\"\n    fi\n\n    $podman_command pull \"$base_toolbox_image_full\" >/dev/null 2>&3\n    ret_val=$?\n\n    if [ \"$spinner_directory\" != \"\" ]; then\n        spinner_stop \"$spinner_directory\"\n    fi\n\n    if [ \"$ret_val\" -ne 0 ] 2>&3; then\n        echo \"$base_toolbox_command: failed to pull base image $base_toolbox_image\" >&2\n    fi\n\n    return $ret_val\n)\n\n\nunshare_userns_rm()\n(\n    path=\"$1\"\n\n    if ! unshare_directory=$(mktemp --directory --tmpdir \"toolbox-unshare-userns-rm-XXXXXXXXXX\" 2>&3); then\n        echo \"$base_toolbox_command: failed to enter user namespace: directory couldn't be created\" >&2\n        return 1\n    fi\n\n    if ! touch \"$unshare_directory/map\" 2>&3; then\n        echo \"$base_toolbox_command: failed to enter user namespace: file couldn't be created\" >&2\n        return 1\n    fi\n\n    exec 4>\"$unshare_directory/map\"\n    if ! flock 4 2>&3; then\n        echo \"$base_toolbox_command: failed to enter user namespace: lock couldn't be acquired\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: parsing /etc/subgid\" >&3\n\n    if ! subgid_entry=$(grep \"^$USER:\" /etc/subgid 2>&3); then\n        echo \"$base_toolbox_command: failed to enter user namespace: no entry in /etc/subgid\" >&2\n        return 1\n    fi\n\n    userns_gid_start=$(echo \"$subgid_entry\" | cut --delimiter \":\" --fields 2 2>&3)\n    if ! is_integer \"$userns_gid_start\"; then\n        echo \"$base_toolbox_command: failed to enter user namespace: cannot parse the first sub-GID\" >&2\n        return 1\n    fi\n\n    userns_gid_len=$(echo \"$subgid_entry\" | cut --delimiter \":\" --fields 3 2>&3)\n    if ! is_integer \"$userns_gid_len\"; then\n        echo \"$base_toolbox_command: failed to enter user namespace: cannot parse the sub-GID count\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: parsing /etc/subuid\" >&3\n\n    if ! subuid_entry=$(grep \"^$USER:\" /etc/subuid 2>&3); then\n        echo \"$base_toolbox_command: failed to enter user namespace: no entry in /etc/subuid\" >&2\n        return 1\n    fi\n\n    userns_uid_start=$(echo \"$subuid_entry\" | cut --delimiter \":\" --fields 2 2>&3)\n    if ! is_integer \"$userns_uid_start\"; then\n        echo \"$base_toolbox_command: failed to enter user namespace: cannot parse the first sub-UID\" >&2\n        return 1\n    fi\n\n    userns_uid_len=$(echo \"$subuid_entry\" | cut --delimiter \":\" --fields 3 2>&3)\n    if ! is_integer \"$userns_uid_len\"; then\n        echo \"$base_toolbox_command: failed to enter user namespace: cannot parse the sub-UID count\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: unsharing user namespace\" >&3\n\n    unshare --user sh -c \"flock $unshare_directory/map rm --force --recursive $path\" 2>&3 &\n    unshare_pid=\"$!\"\n\n    echo \"$base_toolbox_command: setting GID and UID map of user namespace\" >&3\n\n    if ! newgidmap \"$unshare_pid\" 0 \"$user_id_real\" 1 1 \"$userns_gid_start\" \"$userns_gid_len\" 2>&3; then\n        echo \"$base_toolbox_command: failed to set GID mapping of user namespace\" >&2\n        kill -9 \"$unshare_pid\" 2>&3\n        return 1\n    fi\n\n    if ! newuidmap \"$unshare_pid\" 0 \"$user_id_real\" 1 1 \"$userns_uid_start\" \"$userns_uid_len\" 2>&3; then\n        echo \"$base_toolbox_command: failed to set UID mapping of user namespace\" >&2\n        kill -9 \"$unshare_pid\" 2>&3\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: GID map of user namespace:\" >&3\n    cat /proc/\"$unshare_pid\"/gid_map 1>&3 2>&3\n\n    echo \"$base_toolbox_command: UID map of user namespace:\" >&3\n    cat /proc/\"$unshare_pid\"/uid_map 1>&3 2>&3\n\n    if ! flock --unlock 4 2>&3; then\n        echo \"$base_toolbox_command: failed to remove $path: lock couldn't be unlocked\" >&2\n        kill -9 \"$unshare_pid\" 2>&3\n        return 1\n    fi\n\n    if ! wait \"$unshare_pid\" 2>&3; then\n        echo \"$base_toolbox_command: failed to remove $path\" >&2\n        return 1\n    fi\n\n    rm --force --recursive \"$unshare_directory\" 2>&3\n\n    return 0\n)\n\n\ncreate()\n(\n    enter_command_skip=\"$1\"\n\n    dbus_system_bus_address=\"unix:path=/var/run/dbus/system_bus_socket\"\n    home_link=\"\"\n    kcm_socket=\"\"\n    kcm_socket_bind=\"\"\n    media_link=\"\"\n    media_path_bind=\"\"\n    mnt_link=\"\"\n    mnt_path_bind=\"\"\n    run_media_path_bind=\"\"\n    toolbox_profile_bind=\"\"\n    ulimit_host=\"\"\n    usr_mount_destination_flags=\"ro\"\n\n    # shellcheck disable=SC2153\n    if [ \"$DBUS_SYSTEM_BUS_ADDRESS\" != \"\" ]; then\n        dbus_system_bus_address=$DBUS_SYSTEM_BUS_ADDRESS\n    fi\n    dbus_system_bus_path=$(echo \"$dbus_system_bus_address\" | cut --delimiter = --fields 2 2>&3)\n    dbus_system_bus_path=$(readlink --canonicalize \"$dbus_system_bus_path\" 2>&3)\n\n    # Note that 'systemctl show ...' doesn't terminate with a non-zero exit\n    # code when used with an unknown unit. eg.:\n    #   $ systemctl show --value --property Listen foo\n    #   $ echo $?\n    #   0\n    if ! kcm_socket_listen=$(systemctl show --value --property Listen sssd-kcm.socket 2>&3); then\n        echo \"$base_toolbox_command: failed to use 'systemctl show'\" >&3\n        kcm_socket_listen=\"\"\n    elif [ \"$kcm_socket_listen\" = \"\" ] 2>&3; then\n        echo \"$base_toolbox_command: failed to read property Listen from sssd-kcm.socket\" >&3\n    else\n        echo \"$base_toolbox_command: checking value $kcm_socket_listen of property Listen in sssd-kcm.socket\" >&3\n\n        if ! (echo \"$kcm_socket_listen\" | grep \" (Stream)$\" >/dev/null 2>&3); then\n            echo \"$base_toolbox_command: unknown socket in sssd-kcm.socket\" >&2\n            echo \"$base_toolbox_command: expected SOCK_STREAM\" >&2\n            kcm_socket_listen=\"\"\n        elif ! (echo \"$kcm_socket_listen\" | grep \"^/\" >/dev/null 2>&3); then\n            echo \"$base_toolbox_command: unknown socket in sssd-kcm.socket\" >&2\n            echo \"$base_toolbox_command: expected file system socket in the AF_UNIX family\" >&2\n            kcm_socket_listen=\"\"\n        fi\n    fi\n\n    echo \"$base_toolbox_command: parsing value $kcm_socket_listen of property Listen in sssd-kcm.socket\" >&3\n\n    if [ \"$kcm_socket_listen\" != \"\" ] 2>&3; then\n        kcm_socket=${kcm_socket_listen%\" (Stream)\"}\n        kcm_socket_bind=\"--volume $kcm_socket:$kcm_socket\"\n    fi\n\n    echo \"$base_toolbox_command: checking if 'podman create' supports --ulimit host\" >&3\n\n    if man podman-create 2>&3 | grep \"You can pass host\" >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: 'podman create' supports --ulimit host\" >&3\n\n        ulimit_host=\"--ulimit host\"\n    fi\n\n    if ! pull_base_toolbox_image; then\n        return 1\n    fi\n\n    if image_reference_has_domain \"$base_toolbox_image\"; then\n        base_toolbox_image_full=\"$base_toolbox_image\"\n    else\n        if ! base_toolbox_image_full=$($podman_command inspect \\\n                                               --format \"{{index .RepoTags 0}}\" \\\n                                               --type image \\\n                                               \"$base_toolbox_image\" 2>&3); then\n            echo \"$base_toolbox_command: failed to get RepoTag for base image $base_toolbox_image\" >&2\n            return 1\n        fi\n\n        echo \"$base_toolbox_command: base image $base_toolbox_image resolved to $base_toolbox_image_full\" >&3\n    fi\n\n    echo \"$base_toolbox_command: checking if container $toolbox_container already exists\" >&3\n\n    enter_command=$(create_enter_command \"$toolbox_container\")\n    if $podman_command container exists \"$toolbox_container\" >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: container $toolbox_container already exists\" >&2\n        echo \"Enter with: $enter_command\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        return 1\n    fi\n\n    if [ -f /etc/profile.d/toolbox.sh ] 2>&3; then\n        toolbox_profile_bind=\"--volume /etc/profile.d/toolbox.sh:/etc/profile.d/toolbox.sh:ro\"\n    elif [ -f /usr/share/profile.d/toolbox.sh ] 2>&3; then\n        toolbox_profile_bind=\"--volume /usr/share/profile.d/toolbox.sh:/etc/profile.d/toolbox.sh:ro\"\n    else\n        echo \"$base_toolbox_command: failed to bind mount toolbox.sh\" >&3\n    fi\n\n    if [ -d /media ] 2>&3; then\n        echo \"$base_toolbox_command: checking if /media is a symbolic link to /run/media\" >&3\n\n        if [ \"$(readlink /media)\" = run/media ] 2>&3; then\n            echo \"$base_toolbox_command: /media is a symbolic link to /run/media\" >&3\n            media_link=\"--media-link\"\n        else\n            media_path_bind=\"--volume /media:/media:rslave\"\n        fi\n    fi\n\n    echo \"$base_toolbox_command: checking if /mnt is a symbolic link to /var/mnt\" >&3\n\n    if [ \"$(readlink /mnt)\" = var/mnt ] 2>&3; then\n        echo \"$base_toolbox_command: /mnt is a symbolic link to /var/mnt\" >&3\n        mnt_link=\"--mnt-link\"\n    else\n        mnt_path_bind=\"--volume /mnt:/mnt:rslave\"\n    fi\n\n    if [ -d /run/media ] 2>&3; then\n        run_media_path_bind=\"--volume /run/media:/run/media:rslave\"\n    fi\n\n    echo \"$base_toolbox_command: checking if /usr is mounted read-only or read-write\" >&3\n\n    if ! usr_mount_point=$(df --output=target /usr | tail --lines 1 2>&3); then\n        echo \"$base_toolbox_command: failed to get the mount-point of /usr\" >&2\n    else\n        echo \"$base_toolbox_command: mount-point of /usr is $usr_mount_point\" >&3\n\n        if ! usr_mount_source_flags=$(findmnt --noheadings --output OPTIONS \"$usr_mount_point\" 2>&3); then\n            echo \"$base_toolbox_command: failed to get the mount options of $usr_mount_point\" >&2\n        else\n            echo \"$base_toolbox_command: mount flags of /usr on the host are $usr_mount_source_flags\" >&3\n\n            if echo \"$usr_mount_source_flags\" | grep --invert-match \"ro\" >/dev/null 2>&3; then\n                usr_mount_destination_flags=\"rw\"\n            fi\n        fi\n    fi\n\n    if ! home_canonical=$(readlink --canonicalize \"$HOME\" 2>&3); then\n        echo \"$base_toolbox_command: failed to canonicalize $HOME\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: $HOME canonicalized to $home_canonical\" >&3\n\n    echo \"$base_toolbox_command: checking if /home is a symbolic link to /var/home\" >&3\n\n    if [ \"$(readlink /home)\" = var/home ] 2>&3; then\n\techo \"$base_toolbox_command: /home is a symbolic link to /var/home\" >&3\n\thome_link=\"--home-link\"\n    fi\n\n    echo \"$base_toolbox_command: calling org.freedesktop.Flatpak.SessionHelper.RequestSession\" >&3\n\n    if ! gdbus call \\\n                 --session \\\n                 --dest org.freedesktop.Flatpak \\\n                 --object-path /org/freedesktop/Flatpak/SessionHelper \\\n                 --method org.freedesktop.Flatpak.SessionHelper.RequestSession >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: failed to call org.freedesktop.Flatpak.SessionHelper.RequestSession\" >&2\n        exit 1\n    fi\n\n    echo \"$base_toolbox_command: creating container $toolbox_container\" >&3\n\n    if spinner_directory=$(mktemp --directory --tmpdir $spinner_template 2>&3); then\n        spinner_message=\"Creating container $toolbox_container: \"\n        if ! spinner_start \"$spinner_directory\" \"$spinner_message\"; then\n            spinner_directory=\"\"\n        fi\n    else\n        echo \"$base_toolbox_command: unable to start spinner: spinner directory not created\" >&2\n        spinner_directory=\"\"\n    fi\n\n    # shellcheck disable=SC2086\n    $podman_command create \\\n            --dns none \\\n            --env TOOLBOX_PATH=\"$TOOLBOX_PATH\" \\\n            --hostname toolbox \\\n            --ipc host \\\n            --label \"com.github.containers.toolbox=true\" \\\n            --label \"com.github.debarshiray.toolbox=true\" \\\n            --name $toolbox_container \\\n            --network host \\\n            --no-hosts \\\n            --pid host \\\n            --privileged \\\n            --security-opt label=disable \\\n            $ulimit_host \\\n            --userns=keep-id \\\n            --user root:root \\\n            $kcm_socket_bind \\\n            $media_path_bind \\\n            $mnt_path_bind \\\n            $run_media_path_bind \\\n            $toolbox_profile_bind \\\n            --volume \"$TOOLBOX_PATH\":/usr/bin/toolbox:ro \\\n            --volume \"$XDG_RUNTIME_DIR\":\"$XDG_RUNTIME_DIR\" \\\n            --volume \"$XDG_RUNTIME_DIR\"/.flatpak-helper/monitor:/run/host/monitor \\\n            --volume \"$dbus_system_bus_path\":\"$dbus_system_bus_path\" \\\n            --volume \"$home_canonical\":\"$home_canonical\":rslave \\\n            --volume /etc:/run/host/etc \\\n            --volume /dev:/dev:rslave \\\n            --volume /run:/run/host/run:rslave \\\n            --volume /tmp:/run/host/tmp:rslave \\\n            --volume /usr:/run/host/usr:\"$usr_mount_destination_flags\",rslave \\\n            --volume /var:/run/host/var:rslave \\\n            \"$base_toolbox_image_full\" \\\n            toolbox --verbose init-container \\\n                    --home \"$HOME\" \\\n                    $home_link \\\n                    $media_link \\\n                    $mnt_link \\\n                    --monitor-host \\\n                    --shell \"$SHELL\" \\\n                    --uid \"$user_id_real\" \\\n                    --user \"$USER\" >/dev/null 2>&3\n    ret_val=$?\n\n    if [ \"$spinner_directory\" != \"\" ]; then\n        spinner_stop \"$spinner_directory\"\n    fi\n\n    if [ $ret_val -ne 0 ]; then\n        echo \"$base_toolbox_command: failed to create container $toolbox_container\" >&2\n        return 1\n    fi\n\n    if ! $enter_command_skip; then\n        echo \"Created container: $toolbox_container\"\n        echo \"Enter with: $enter_command\"\n    fi\n\n    return 0\n)\n\n\nenter()\n(\n    emit_escape_sequence=false\n    host_id=$(get_host_id)\n    host_variant_id=$(get_host_variant_id)\n\n    if [ \"$host_id\" = \"fedora\" ] 2>&3 \\\n       && { [ \"$host_variant_id\" = \"silverblue\" ] 2>&3 || [ \"$host_variant_id\" = \"workstation\" ] 2>&3; }; then\n        emit_escape_sequence=true\n    fi\n\n    run \"$emit_escape_sequence\" true false \"$SHELL\" -l\n)\n\n\ninit_container()\n{\n    init_container_home=\"$1\"\n    init_container_home_link=\"$2\"\n    init_container_media_link=\"$3\"\n    init_container_mnt_link=\"$4\"\n    init_container_monitor_host=\"$5\"\n    init_container_shell=\"$6\"\n    init_container_uid=\"$7\"\n    init_container_user=\"$8\"\n\n    if [ \"$XDG_RUNTIME_DIR\" = \"\" ] 2>&3; then\n        echo \"$base_toolbox_command: XDG_RUNTIME_DIR is unset\" >&3\n\n        XDG_RUNTIME_DIR=/run/user/\"$init_container_uid\"\n        echo \"$base_toolbox_command: XDG_RUNTIME_DIR set to $XDG_RUNTIME_DIR\" >&3\n\n        toolbox_runtime_directory=\"$XDG_RUNTIME_DIR\"/toolbox\n    fi\n\n    init_container_initialized_stamp=\"$toolbox_runtime_directory\"/container-initialized-\"$$\"\n\n    echo \"$base_toolbox_command: creating /run/.toolboxenv\" >&3\n\n    if ! touch /run/.toolboxenv 2>&3; then\n        echo \"$base_toolbox_command: failed to create /run/.toolboxenv\" >&2\n        return 1\n    fi\n\n    if $init_container_monitor_host; then\n        working_directory=\"$PWD\"\n\n        if [ -d /run/host/etc ] 2>&3; then\n            if ! readlink /etc/host.conf >/dev/null 2>&3; then\n                echo \"$base_toolbox_command: redirecting /etc/host.conf to /run/host/etc/host.conf\" >&3\n\n                if ! (cd /etc 2>&3 \\\n                      && rm --force host.conf 2>&3 \\\n                      && ln --symbolic /run/host/etc/host.conf host.conf 2>&3); then\n                    echo \"$base_toolbox_command: failed to redirect /etc/host.conf to /run/host/etc/host.conf\" >&2\n                    return 1\n                fi\n            fi\n\n            if ! readlink /etc/hosts >/dev/null 2>&3; then\n                echo \"$base_toolbox_command: redirecting /etc/hosts to /run/host/etc/hosts\" >&3\n\n                if ! (cd /etc 2>&3 \\\n                      && rm --force hosts 2>&3 \\\n                      && ln --symbolic /run/host/etc/hosts hosts 2>&3); then\n                    echo \"$base_toolbox_command: failed to redirect /etc/hosts to /run/host/etc/hosts\" >&2\n                    return 1\n                fi\n            fi\n\n            if ! readlink /etc/resolv.conf >/dev/null 2>&3; then\n                echo \"$base_toolbox_command: redirecting /etc/resolv.conf to /run/host/etc/resolv.conf\" >&3\n\n                if ! (cd /etc 2>&3 \\\n                      && rm --force resolv.conf 2>&3 \\\n                      && ln --symbolic /run/host/etc/resolv.conf resolv.conf 2>&3); then\n                    echo \"$base_toolbox_command: failed to redirect /etc/resolv.conf to /run/host/etc/resolv.conf\" \\\n                            >&2\n                    return 1\n                fi\n            fi\n\n\n            if ! mount_bind /run/host/etc/machine-id /etc/machine-id ro; then\n                return 1\n            fi\n\n            if ! mount_bind /run/host/run/libvirt /run/libvirt; then\n                return 1\n            fi\n\n            if ! mount_bind /run/host/run/systemd/journal /run/systemd/journal; then\n                return 1\n            fi\n\n            if [ -d /sys/fs/selinux ] 2>&3; then\n                if ! mount_bind /usr/share/empty /sys/fs/selinux; then\n                    return 1\n                fi\n            fi\n\n            if ! mount_bind /run/host/var/lib/flatpak /var/lib/flatpak ro; then\n                return 1\n            fi\n\n            if ! mount_bind /run/host/var/log/journal /var/log/journal ro; then\n                return 1\n            fi\n\n            if ! mount_bind /run/host/var/mnt /var/mnt rslave; then\n                return 1\n            fi\n        fi\n\n        if [ -d /run/host/monitor ] 2>&3; then\n            if ! localtime_target=$(readlink /etc/localtime >/dev/null 2>&3) \\\n               || [ \"$localtime_target\" != \"/run/host/monitor/localtime\" ] 2>&3; then\n                echo \"$base_toolbox_command: redirecting /etc/localtime to /run/host/monitor/localtime\" >&3\n\n                if ! (cd /etc 2>&3 \\\n                      && rm --force localtime 2>&3 \\\n                      && ln --symbolic /run/host/monitor/localtime localtime 2>&3); then\n                    echo \"$base_toolbox_command: failed to redirect /etc/localtime to /run/host/monitor/localtime\" \\\n                            >&2\n                    return 1\n                fi\n            fi\n\n            if ! readlink /etc/timezone >/dev/null 2>&3; then\n                echo \"$base_toolbox_command: redirecting /etc/timezone to /run/host/monitor/timezone\" >&3\n\n                if ! (cd /etc 2>&3 \\\n                      && rm --force timezone 2>&3 \\\n                      && ln --symbolic /run/host/monitor/timezone timezone 2>&3); then\n                    echo \"$base_toolbox_command: failed to redirect /etc/timezone to /run/host/monitor/timezone\" >&2\n                    return 1\n                fi\n            fi\n        fi\n\n        if ! cd \"$working_directory\" 2>&3; then\n            echo \"$base_toolbox_command: failed to restore working directory\" >&2\n        fi\n    fi\n\n    if $init_container_media_link && ! readlink /media >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: making /media a symbolic link to /run/media\" >&3\n\n        # shellcheck disable=SC2174\n        if ! (rmdir /media 2>&3 \\\n              && mkdir --mode 0755 --parents /run/media 2>&3 \\\n              && ln --symbolic run/media /media 2>&3); then\n            echo \"$base_toolbox_command: failed to make /media a symbolic link\" >&2\n            return 1\n        fi\n    fi\n\n    if $init_container_mnt_link && ! readlink /mnt >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: making /mnt a symbolic link to /var/mnt\" >&3\n\n        # shellcheck disable=SC2174\n        if ! (rmdir /mnt 2>&3 \\\n              && mkdir --mode 0755 --parents /var/mnt 2>&3 \\\n              && ln --symbolic var/mnt /mnt 2>&3); then\n            echo \"$base_toolbox_command: failed to make /mnt a symbolic link\" >&2\n            return 1\n        fi\n    fi\n\n    if ! id -u \"$init_container_user\" >/dev/null 2>&3; then\n        if $init_container_home_link ; then\n            echo \"$base_toolbox_command: making /home a symlink\" >&3\n\n            # shellcheck disable=SC2174\n            if ! (rmdir /home 2>&3 \\\n                  && mkdir --mode 0755 --parents /var/home 2>&3 \\\n                  && ln --symbolic var/home /home 2>&3); then\n                echo \"$base_toolbox_command: failed to make /home a symlink\" >&2\n                return 1\n            fi\n        fi\n\n        if ! groups=$(get_group_for_sudo); then\n            echo \"$base_toolbox_command: failed to add user $init_container_user: group for sudo not found\" >&2\n            return 1\n        fi\n\n        echo \"$base_toolbox_command: adding user $init_container_user with UID $init_container_uid\" >&3\n\n        if ! useradd \\\n                     --home-dir \"$init_container_home\" \\\n                     --no-create-home \\\n                     --shell \"$init_container_shell\" \\\n                     --uid \"$init_container_uid\" \\\n                     --groups \"$groups\" \\\n                     \"$init_container_user\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to add user $init_container_user with UID $init_container_uid\" >&2\n            return 1\n        fi\n\n        echo \"$base_toolbox_command: removing password for user $init_container_user\" >&3\n\n        if ! passwd --delete \"$init_container_user\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove password for user $init_container_user\" >&2\n            return 1\n        fi\n\n        echo \"$base_toolbox_command: removing password for user root\" >&3\n\n        if ! passwd --delete root >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove password for user root\" >&2\n            return 1\n        fi\n\n    fi\n\n    if [ -d /etc/krb5.conf.d ] 2>&3 && ! [ -f /etc/krb5.conf.d/kcm_default_ccache ] 2>&3; then\n        echo \"$base_toolbox_command: setting KCM as the default Kerberos credential cache\" >&3\n\n        cat <<EOF >/etc/krb5.conf.d/kcm_default_ccache 2>&3\n# Written by Toolbox\n# https://github.com/containers/toolbox\n#\n# # To disable the KCM credential cache, comment out the following lines.\n\n[libdefaults]\n    default_ccache_name = KCM:\nEOF\n        ret_val=$?\n\n        if [ \"$ret_val\" -ne 0 ] 2>&3; then\n            echo \"$base_toolbox_command: failed to set KCM as the default Kerberos credential cache\" >&2\n            return 1\n        fi\n    fi\n\n    echo \"$base_toolbox_command: finished initializing container\" >&3\n\n    if ! touch \"$init_container_initialized_stamp\" 2>&3; then\n        echo \"$base_toolbox_command: failed to create initialization stamp\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: going to sleep\" >&3\n\n    exec sleep +Inf\n}\n\n\nrun()\n(\n    emit_escape_sequence=\"$1\"\n    fallback_to_bash=\"$2\"\n    pedantic=\"$3\"\n    program=\"$4\"\n    shift 4\n\n    create_toolbox_container=false\n    prompt_for_create=true\n\n    echo \"$base_toolbox_command: checking if container $toolbox_container exists\" >&3\n\n    if ! $podman_command container exists \"$toolbox_container\" 2>&3; then\n        echo \"$base_toolbox_command: container $toolbox_container not found\" >&3\n\n        if $podman_command container exists \"$toolbox_container_old_v1\" 2>&3; then\n            echo \"$base_toolbox_command: container $toolbox_container_old_v1 found\" >&3\n\n            # shellcheck disable=SC2030\n            toolbox_container=\"$toolbox_container_old_v1\"\n        elif $podman_command container exists \"$toolbox_container_old_v2\" 2>&3; then\n            echo \"$base_toolbox_command: container $toolbox_container_old_v2 found\" >&3\n\n            # shellcheck disable=SC2030\n            toolbox_container=\"$toolbox_container_old_v2\"\n        else\n            if $pedantic; then\n                enter_print_container_not_found \"$toolbox_container\"\n                exit 1\n            fi\n\n            if ! containers=$(list_container_names); then\n                enter_print_container_not_found \"$toolbox_container\"\n                exit 1\n            fi\n\n            containers_count=$(echo \"$containers\" | grep --count . 2>&3)\n            if ! is_integer \"$containers_count\"; then\n                enter_print_container_not_found \"$toolbox_container\"\n                exit 1\n            fi\n\n            echo \"$base_toolbox_command: found $containers_count containers\" >&3\n\n            if [ \"$containers_count\" -eq 0 ] 2>&3; then\n                if $assume_yes; then\n                    create_toolbox_container=true\n                    prompt_for_create=false\n                fi\n\n                if $prompt_for_create; then\n                    prompt=\"No toolbox containers found. Create now? [y/N]\"\n                    if ask_for_confirmation \"n\" \"$prompt\"; then\n                        create_toolbox_container=true\n                    else\n                        create_toolbox_container=false\n                    fi\n                fi\n\n                if ! $create_toolbox_container; then\n                    echo \"A container can be created later with the 'create' command.\" >&2\n                    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n                    exit 1\n                fi\n\n                if ! update_container_and_image_names; then\n                    exit 1\n                fi\n\n                if ! create true; then\n                    exit 1\n                fi\n            elif [ \"$containers_count\" -eq 1 ] 2>&3 \\\n                 && [ \"$toolbox_container\" = \"$toolbox_container_default\" ] 2>&3; then\n                echo \"$base_toolbox_command: container $toolbox_container not found\" >&2\n\n                toolbox_container=$(echo \"$containers\" | grep . 2>&3 | head --lines 1 2>&3)\n                echo \"Entering container $toolbox_container instead.\" >&2\n                echo \"Use the 'create' command to create a different toolbox.\" >&2\n                echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n            else\n                echo \"$base_toolbox_command: container $toolbox_container not found\" >&2\n                echo \"Use the '--container' option to select a toolbox.\" >&2\n                echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n                exit 1\n            fi\n        fi\n    fi\n\n    echo \"$base_toolbox_command: calling org.freedesktop.Flatpak.SessionHelper.RequestSession\" >&3\n\n    if ! gdbus call \\\n                 --session \\\n                 --dest org.freedesktop.Flatpak \\\n                 --object-path /org/freedesktop/Flatpak/SessionHelper \\\n                 --method org.freedesktop.Flatpak.SessionHelper.RequestSession >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: failed to call org.freedesktop.Flatpak.SessionHelper.RequestSession\" >&2\n        exit 1\n    fi\n\n    echo \"$base_toolbox_command: starting container $toolbox_container\" >&3\n\n    if is_etc_profile_d_toolbox_a_bind_mount \"$toolbox_container\"; then\n        echo \"$base_toolbox_command: /etc/profile.d/toolbox.sh already mounted in container $toolbox_container\" >&3\n\n        if ! container_start \"$toolbox_container\"; then\n            exit 1\n        fi\n    else\n        echo \"$base_toolbox_command: /etc/profile.d/toolbox.sh not mounted in container $toolbox_container\" >&3\n\n        if ! copy_etc_profile_d_toolbox_to_runtime_directory; then\n            exit 1\n        fi\n\n        if ! container_start \"$toolbox_container\"; then\n            exit 1\n        fi\n\n        if ! copy_etc_profile_d_toolbox_to_container \"$toolbox_container\"; then\n            exit 1\n        fi\n    fi\n\n    echo \"$base_toolbox_command: inspecting entry point of container $toolbox_container\" >&3\n\n    if ! entry_point=$($podman_command inspect --format \"{{index .Config.Cmd 0}}\" --type container \"$toolbox_container\" 2>&3); then\n        echo \"$base_toolbox_command: failed to inspect entry point of container $toolbox_container\" >&2\n        exit 1\n    fi\n\n    echo \"$base_toolbox_command: entry point of container $toolbox_container is $entry_point\" >&3\n\n    if [ \"$entry_point\" = \"toolbox\" ] 2>&3; then\n        echo \"$base_toolbox_command: waiting for container $toolbox_container to finish initializing\" >&3\n\n        if ! entry_point_pid=$($podman_command inspect --format \"{{.State.Pid}}\" --type container \"$toolbox_container\" 2>&3); then\n            echo \"$base_toolbox_command: failed to inspect entry point PID of container $toolbox_container\" >&2\n            exit 1\n        fi\n\n        if ! is_integer \"$entry_point_pid\"; then\n            echo \"$base_toolbox_command: failed to parse entry point PID of container $toolbox_container\" >&2\n            exit 1\n        fi\n\n        if [ \"$entry_point_pid\" -le 0 ] 2>&3; then\n            echo \"$base_toolbox_command: invalid entry point PID of container $toolbox_container\" >&2\n            exit 1\n        fi\n\n        container_initialized_stamp=\"$toolbox_runtime_directory/container-initialized-$entry_point_pid\"\n        container_initialized_timeout=25 #s\n\n        i=0\n        while ! [ -f \"$container_initialized_stamp\" ] 2>&3; do\n            sleep 1 2>&3\n\n            i=$((i + 1))\n            if [ \"$i\" -eq \"$container_initialized_timeout\" ] 2>&3; then\n                echo \"$base_toolbox_command: failed to initialize container $toolbox_container\" >&2\n                exit 1\n            fi\n        done\n    else\n        echo \"$base_toolbox_command: container $toolbox_container uses deprecated features\" >&2\n        echo \"Consider recreating it with Toolbox version 0.0.17 or newer.\" >&2\n    fi\n\n    if ! $podman_command exec --user root:root \"$toolbox_container\" touch /run/.toolboxenv 2>&3; then\n        echo \"$base_toolbox_command: failed to create /run/.toolboxenv in container $toolbox_container\" >&2\n        exit 1\n    fi\n\n    set_environment=$(create_environment_options)\n\n    echo \"$base_toolbox_command: looking for $program in container $toolbox_container\" >&3\n\n    # shellcheck disable=SC2016\n    if ! $podman_command exec \\\n                 --user \"$USER\" \\\n                 \"$toolbox_container\" \\\n                 sh -c 'command -v \"$1\"' sh \"$program\" >/dev/null 2>&3; then\n        if $fallback_to_bash; then\n            echo \"$base_toolbox_command: $program not found in $toolbox_container; using /bin/bash instead\" >&3\n            program=/bin/bash\n        else\n            echo \"$base_toolbox_command: command '$program' not found in container $toolbox_container\" >&2\n            exit 127\n        fi\n    fi\n\n    echo \"$base_toolbox_command: running in container $toolbox_container:\" >&3\n    echo \"$base_toolbox_command: $program\" >&3\n    for i in \"$@\"; do\n        echo \"$base_toolbox_command: $i\" >&3\n    done\n\n    $emit_escape_sequence && printf \"\\033]777;container;push;%s;toolbox\\033\\\\\" \"$toolbox_container\"\n\n    # shellcheck disable=SC2016\n    # for the command passed to capsh\n    # shellcheck disable=SC2086\n    $podman_command exec \\\n            --interactive \\\n            --tty \\\n            --user \"$USER\" \\\n            --workdir \"$PWD\" \\\n            $set_environment \\\n            \"$toolbox_container\" \\\n            capsh --caps=\"\" -- -c 'exec \"$@\"' /bin/sh \"$program\" \"$@\" 2>&3\n    ret_val=\"$?\"\n\n    $emit_escape_sequence && printf \"\\033]777;container;pop;;\\033\\\\\"\n\n    if [ \"$ret_val\" -eq 127 ] 2>&3; then\n        # shellcheck disable=SC2016\n        if ! $podman_command exec \\\n                     --user \"$USER\" \\\n                     \"$toolbox_container\" \\\n                     sh -c 'test -d \"$1\"' sh \"$PWD\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: directory '$PWD' not found in container $toolbox_container\" >&2\n        fi\n    fi\n\n    exit \"$ret_val\"\n)\n\n\nhelp()\n(\n    to_help_command=\"$1\"\n\n    if [ \"$to_help_command\" = \"\" ] 2>&3 || [ \"$to_help_command\" = \"$base_toolbox_command\" ] 2>&3; then\n        exec man toolbox 2>&1\n    fi\n\n    exec man toolbox-\"$to_help_command\" 2>&1\n)\n\n\nlist_images()\n(\n    output=\"\"\n\n    if ! images_old=$($podman_command images \\\n                              --filter \"label=com.redhat.component=fedora-toolbox\" \\\n                              --format \"{{.Repository}}:{{.Tag}}\" 2>&3); then\n        echo \"$base_toolbox_command: failed to list images with com.redhat.component=fedora-toolbox\" >&2\n        return 1\n    fi\n\n    if ! images=$($podman_command images \\\n                          --filter \"label=com.github.debarshiray.toolbox=true\" \\\n                          --format \"{{.Repository}}:{{.Tag}}\" 2>&3); then\n        echo \"$base_toolbox_command: failed to list images with com.github.debarshiray.toolbox=true\" >&2\n        return 1\n    fi\n\n    images=$(printf \"%s\\n%s\\n\" \"$images_old\" \"$images\" | sort 2>&3 | uniq 2>&3)\n    if ! details=$(images_get_details \"$images\"); then\n        return 1\n    fi\n\n    if [ \"$details\" != \"\" ] 2>&3; then\n        table_data=$(printf \"%s\\t%s\\t%s\\n\" \"IMAGE ID\" \"IMAGE NAME\" \"CREATED\"; echo \"$details\")\n        if ! output=$(echo \"$table_data\" | sed \"s/ \\{2,\\}/\\t/g\" 2>&3 | column -s \"$tab\" -t 2>&3); then\n            echo \"$base_toolbox_command: failed to parse list of images\" >&2\n            return 1\n        fi\n    fi\n\n    if [ \"$output\" != \"\" ]; then\n        echo \"$output\"\n    fi\n\n    return 0\n)\n\n\ncontainers_get_details()\n(\n    containers=\"$1\"\n\n    if ! echo \"$containers\" | while read -r container; do\n            [ \"$container\" = \"\" ] 2>&3 && continue\n\n            if ! $podman_command ps --all \\\n                         --filter \"name=$container\" \\\n                         --format \"{{.ID}}  {{.Names}}  {{.Created}}  {{.Status}}  {{.Image}}\" 2>&3; then\n                echo \"$base_toolbox_command: failed to get details for container $container\" >&2\n                return 1\n            fi\n         done; then\n        return 1\n    fi\n\n    return 0\n)\n\n\nlist_containers()\n(\n    output=\"\"\n\n    if ! containers=$(list_container_names); then\n        return 1\n    fi\n\n    if ! details=$(containers_get_details \"$containers\"); then\n        return 1\n    fi\n\n    if [ \"$details\" != \"\" ] 2>&3; then\n        table_data=$(printf \"%s\\t%s\\t%s\\t%s\\t%s\\n\" \"CONTAINER ID\" \"CONTAINER NAME\" \"CREATED\" \"STATUS\" \"IMAGE NAME\"\n                     echo \"$details\")\n        if ! output=$(echo \"$table_data\" | sed \"s/ \\{2,\\}/\\t/g\" 2>&3 | column -s \"$tab\" -t 2>&3); then\n            echo \"$base_toolbox_command: failed to parse list of containers\" >&2\n            return 1\n        fi\n    fi\n\n    if [ \"$output\" != \"\" ]; then\n        echo \"$output\" | head --lines 1 2>&3\n\n        echo \"$output\" | tail --lines +2 2>&3 \\\n            | (\n                  while read -r container; do\n                      id=$(echo \"$container\" | cut --delimiter \" \" --fields 1 2>&3)\n                      is_running=$($podman_command inspect \"$id\" --format \"{{.State.Running}}\" 2>&3)\n                      if $is_running; then\n                          # shellcheck disable=SC2059\n                          printf \"${LGC}$container${NC}\\n\"\n                      else\n                          echo \"$container\"\n                      fi\n                  done\n              )\n    fi\n\n    return 0\n)\n\n\nmigrate()\n(\n    configuration_directory=\"$HOME/.config/toolbox\"\n    migrate_stamp=\"$configuration_directory/podman-system-migrate\"\n\n    migrate_lock=\"$toolbox_runtime_directory\"/migrate.lock\n\n    if ! version=$($podman_command version --format \"{{.Version}}\" 2>&3); then\n        echo \"$base_toolbox_command: unable to migrate containers: Podman version couldn't be read\" >&2\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: current Podman version is $version\" >&3\n\n    if ! mkdir --parents \"$configuration_directory\" 2>&3; then\n        echo \"$base_toolbox_command: unable to migrate containers: configuration directory not created\" >&2\n        return 1\n    fi\n\n    # shellcheck disable=SC2174\n    if ! mkdir --mode 700 --parents \"$toolbox_runtime_directory\" 2>&3; then\n        echo \"$base_toolbox_command: unable to migrate containers: runtime directory not created\" >&2\n        return 1\n    fi\n\n    exec 5>\"$migrate_lock\"\n    if ! flock 5 2>&3; then\n        echo \"$base_toolbox_command: unable to migrate containers: migration lock not acquired\" >&3\n        return 1\n    fi\n\n    if [ -f \"$migrate_stamp\" ] 2>&3; then\n        if grep \"$version\" \"$migrate_stamp\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: migration not needed: Podman version $version is unchanged\" >&3\n            return 0\n        fi\n\n        if ! version_old=$(printf \"%s\\n\" \"$version\" \\\n                           | cat \"$migrate_stamp\" - 2>&3 \\\n                           | sort --version-sort 2>&3 \\\n                           | head --lines 1 2>&3); then\n            echo \"$base_toolbox_command: unable to migrate containers: Podman versions couldn't be sorted\" >&2\n            return 1\n        fi\n\n        if [ \"$version\" = \"$version_old\" ] 2>&3; then\n            echo \"$base_toolbox_command: migration not needed: Podman version $version is old\" >&3\n            return 0\n        fi\n    fi\n\n    if ! $podman_command system migrate >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: unable to migrate containers\" >&2\n        return 1\n    fi\n\n    echo \"$version\" >\"$migrate_stamp\"\n    return 0\n)\n\n\nremove_containers()\n(\n    ids=$1\n    all=$2\n    force=$3\n\n    ret_val=0\n\n    $force && force_option=\"--force\"\n\n    if $all; then\n        if ! ids_old=$($podman_command ps \\\n                               --all \\\n                               --filter \"label=com.redhat.component=fedora-toolbox\" \\\n                               --format \"{{.ID}}\" 2>&3); then\n            echo \"$base_toolbox_command: failed to list containers with com.redhat.component=fedora-toolbox\" >&2\n            return 1\n        fi\n\n        if ! ids=$($podman_command ps \\\n                           --all \\\n                           --filter \"label=com.github.debarshiray.toolbox=true\" \\\n                           --format \"{{.ID}}\" 2>&3); then\n            echo \"$base_toolbox_command: failed to list containers with com.github.debarshiray.toolbox=true\" >&2\n            return 1\n        fi\n\n        ids=$(printf \"%s\\n%s\\n\" \"$ids_old\" \"$ids\" | sort 2>&3 | uniq 2>&3)\n        if [ \"$ids\" != \"\" ]; then\n            ret_val=$(echo \"$ids\" \\\n                      | (\n                            while read -r id; do\n                                if ! $podman_command rm \"$force_option\" \"$id\" >/dev/null 2>&3; then\n                                    echo \"$base_toolbox_command: failed to remove container $id\" >&2\n                                    ret_val=1\n                                fi\n                            done\n\n                            echo \"$ret_val\"\n                        )\n                     )\n        fi\n    else\n        ret_val=$(echo \"$ids\" \\\n                  | sed \"s/ \\+/\\n/g\" 2>&3 \\\n                  | (\n                        while read -r id; do\n                            if ! labels=$($podman_command inspect \\\n                                                  --format \"{{.Config.Labels}}\" \\\n                                                  --type container \\\n                                                  \"$id\" 2>&3); then\n                                echo \"$base_toolbox_command: failed to inspect $id\" >&2\n                                ret_val=1\n                                continue\n                            fi\n\n                            if ! has_substring \"$labels\" \"com.github.debarshiray.toolbox\" \\\n                               && ! has_substring \"$labels\" \"com.redhat.component:fedora-toolbox\"; then\n                                echo \"$base_toolbox_command: $id is not a toolbox container\" >&2\n                                ret_val=1\n                                continue\n                            fi\n\n                            if ! $podman_command rm \"$force_option\" \"$id\" >/dev/null 2>&3; then\n                                echo \"$base_toolbox_command: failed to remove container $id\" >&2\n                                ret_val=1\n                            fi\n                        done\n\n                        echo \"$ret_val\"\n                    )\n                 )\n    fi\n\n    return \"$ret_val\"\n)\n\n\nremove_images()\n(\n    ids=$1\n    all=$2\n    force=$3\n\n    ret_val=0\n\n    $force && force_option=\"--force\"\n\n    if $all; then\n        if ! ids_old=$($podman_command images \\\n                               --filter \"label=com.redhat.component=fedora-toolbox\" \\\n                               --format \"{{.ID}}\" 2>&3); then\n            echo \"$0: failed to list images with com.redhat.component=fedora-toolbox\" >&2\n            return 1\n        fi\n\n        if ! ids=$($podman_command images \\\n                           --all \\\n                           --filter \"label=com.github.debarshiray.toolbox=true\" \\\n                           --format \"{{.ID}}\" 2>&3); then\n            echo \"$0: failed to list images with com.github.debarshiray.toolbox=true\" >&2\n            return 1\n        fi\n\n        ids=$(printf \"%s\\n%s\\n\" \"$ids_old\" \"$ids\" | sort 2>&3 | uniq 2>&3)\n        if [ \"$ids\" != \"\" ]; then\n            ret_val=$(echo \"$ids\" \\\n                      | (\n                            while read -r id; do\n                                if ! $podman_command rmi \"$force_option\" \"$id\" >/dev/null 2>&3; then\n                                    echo \"$base_toolbox_command: failed to remove image $id\" >&2\n                                    ret_val=1\n                                fi\n                            done\n\n                            echo \"$ret_val\"\n                        )\n                     )\n        fi\n    else\n        ret_val=$(echo \"$ids\" \\\n                  | sed \"s/ \\+/\\n/g\" 2>&3 \\\n                  | (\n                        while read -r id; do\n                            if ! labels=$($podman_command inspect \\\n                                                  --format \"{{.Labels}}\" \\\n                                                  --type image \\\n                                                  \"$id\" 2>&3); then\n                                echo \"$base_toolbox_command: failed to inspect $id\" >&2\n                                ret_val=1\n                                continue\n                            fi\n\n                            if ! has_substring \"$labels\" \"com.github.debarshiray.toolbox\" \\\n                               && ! has_substring \"$labels\" \"com.redhat.component:fedora-toolbox\"; then\n                                echo \"$base_toolbox_command: $id is not a toolbox image\" >&2\n                                ret_val=1\n                                continue\n                            fi\n\n                            if ! $podman_command rmi \"$force_option\" \"$id\" >/dev/null 2>&3; then\n                                echo \"$base_toolbox_command: failed to remove image $id\" >&2\n                                ret_val=1\n                            fi\n                        done\n\n                        echo \"$ret_val\"\n                    )\n                 )\n    fi\n\n    return \"$ret_val\"\n)\n\n\nreset()\n(\n    do_reset=false\n    prompt_for_reset=true\n    ret_val=0\n\n    if [ \"$user_id_real\" -eq 0 ] 2>&3; then\n        if [ -d /run/containers ] 2>&3; then\n            echo \"$base_toolbox_command: The 'reset' command cannot be used after other commands\" >&2\n            echo \"Reboot the system before using it again.\" >&2\n            echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n            return 1\n        fi\n    else\n        if [ -d \"$XDG_RUNTIME_DIR\"/overlay-containers ] 2>&3 \\\n           || [ -d \"$XDG_RUNTIME_DIR\"/overlay-layers ] 2>&3 \\\n           || [ -d \"$XDG_RUNTIME_DIR\"/overlay-locks ] 2>&3; then\n            echo \"$base_toolbox_command: The 'reset' command cannot be used after other commands\" >&2\n            echo \"Reboot the system before using it again.\" >&2\n            echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n            return 1\n        fi\n    fi\n\n    if $assume_yes; then\n        do_reset=true\n        prompt_for_reset=false\n    fi\n\n    if $prompt_for_reset; then\n        echo \"All existing podman (and toolbox) containers and images will be removed.\"\n\n        prompt=$(printf \"Continue? [y/N]:\")\n        if ask_for_confirmation \"n\" \"$prompt\"; then\n            do_reset=true\n        else\n            do_reset=false\n        fi\n    fi\n\n    if ! $do_reset; then\n        return 1\n    fi\n\n    echo \"$base_toolbox_command: resetting local state\" >&3\n\n    if [ \"$user_id_real\" -eq 0 ] 2>&3; then\n        if ! rm --force --recursive /var/lib/containers/cache >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove /var/lib/containers/cache\" >&2\n            ret_val=1\n        fi\n\n        if ! rm --force --recursive /var/lib/containers/sigstore/* >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove the contents of /var/lib/containers/sigstore\" >&2\n            ret_val=1\n        fi\n\n        if ! rm --force --recursive /var/lib/containers/storage >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove /var/lib/containers/storage\" >&2\n            ret_val=1\n        fi\n    else\n        if ! unshare_userns_rm \"$HOME/.local/share/containers\"; then\n            ret_val=1\n        fi\n\n        if ! rm --force --recursive \"$HOME/.config/containers\" >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: failed to remove $HOME/.config/containers\" >&2\n            ret_val=1\n        fi\n    fi\n\n    if ! rm --force --recursive \"$HOME/.config/toolbox\" >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: failed to remove $HOME/.config/toolbox\" >&2\n        ret_val=1\n    fi\n\n    return \"$ret_val\"\n)\n\n\nexit_if_extra_operand()\n{\n    if [ \"$1\" != \"\" ]; then\n        echo \"$base_toolbox_command: extra operand '$1'\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\n    fi\n}\n\n\nexit_if_missing_argument()\n{\n    if [ \"$2\" = \"\" ]; then\n        echo \"$base_toolbox_command: missing argument for '$1'\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\n    fi\n}\n\n\nexit_if_non_positive_argument()\n{\n    if ! is_integer \"$2\"; then\n        echo \"$base_toolbox_command: invalid argument for '$1'\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\n    fi\n    if [ \"$2\" -le 0 ] 2>&3; then\n        echo \"$base_toolbox_command: invalid argument for '$1'\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\n    fi\n}\n\n\nexit_if_unrecognized_option()\n{\n    echo \"$base_toolbox_command: unrecognized option '$1'\" >&2\n    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n    exit 1\n}\n\n\n# shellcheck disable=SC2120\nforward_to_host()\n(\n    if ! command -v flatpak-spawn >/dev/null 2>&3; then\n        echo \"$base_toolbox_command: flatpak-spawn not found\" >&2\n        return 1\n    fi\n\n    eval \"set -- $arguments\"\n\n    set_environment=$(create_environment_options)\n\n    echo \"$base_toolbox_command: forwarding to host:\" >&3\n    echo \"$base_toolbox_command: $TOOLBOX_PATH\" >&3\n    for i in \"$@\"; do\n        echo \"$base_toolbox_command: $i\" >&3\n    done\n\n    # shellcheck disable=SC2086\n    flatpak-spawn $set_environment --host \"$TOOLBOX_PATH\" \"$@\" 2>&3\n    ret_val=\"$?\"\n\n    return \"$ret_val\"\n)\n\n\nupdate_container_and_image_names()\n{\n    [ \"$release\" = \"\" ] 2>&3 && release=\"$release_default\"\n\n    if [ \"$base_toolbox_image\" = \"\" ] 2>&3; then\n        base_toolbox_image=\"fedora-toolbox:$release\"\n    else\n        release=$(image_reference_get_tag \"$base_toolbox_image\")\n        [ \"$release\" = \"\" ] 2>&3 && release=\"$release_default\"\n    fi\n\n    fgc=\"f$release\"\n    echo \"$base_toolbox_command: Fedora generational core is $fgc\" >&3\n\n    echo \"$base_toolbox_command: base image is $base_toolbox_image\" >&3\n\n    toolbox_image=$(create_toolbox_image_name)\n    if ! (\n            ret_val=$?\n            if [ \"$ret_val\" -ne 0 ] 2>&3; then\n                if [ \"$ret_val\" -eq 100 ] 2>&3; then\n                    echo \"$base_toolbox_command: failed to get the basename of base image $base_toolbox_image\" >&2\n                else\n                    echo \"$base_toolbox_command: failed to create an ID for the customized user-specific image\" >&2\n                fi\n\n                exit 1\n            fi\n\n            exit 0\n         ); then\n        return 1\n    fi\n\n    # shellcheck disable=SC2031\n    if [ \"$toolbox_container\" = \"\" ]; then\n        toolbox_container=$(create_toolbox_container_name \"$base_toolbox_image\")\n        if ! (\n                 ret_val=$?\n                 if [ \"$ret_val\" -ne 0 ] 2>&3; then\n                     if [ \"$ret_val\" -eq 100 ] 2>&3; then\n                         echo \"$base_toolbox_command: failed to get the basename of image $base_toolbox_image\" >&2\n                     elif [ \"$ret_val\" -eq 101 ] 2>&3; then\n                         echo \"$base_toolbox_command: failed to get the tag of image $base_toolbox_image\" >&2\n                     else\n                         echo \"$base_toolbox_command: failed to create a name for the toolbox container\" >&2\n                     fi\n\n                     exit 1\n                 fi\n\n                 exit 0\n            ); then\n            return 1\n        fi\n\n        if ! container_name_is_valid \"$toolbox_container\"; then\n            echo \"$base_toolbox_command: generated container name $toolbox_container is invalid\" >&2\n            echo \"Container names must match '$container_name_regexp'.\" >&2\n            echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n            return 1\n        fi\n\n        toolbox_container_old_v1=$(create_toolbox_container_name \"$toolbox_image\")\n        if ! (\n                 ret_val=$?\n                 if [ \"$ret_val\" -ne 0 ] 2>&3; then\n                     if [ \"$ret_val\" -eq 100 ] 2>&3; then\n                         echo \"$base_toolbox_command: failed to get the basename of image $toolbox_image\" >&2\n                     elif [ \"$ret_val\" -eq 101 ] 2>&3; then\n                         echo \"$base_toolbox_command: failed to get the tag of image $toolbox_image\" >&2\n                     else\n                         echo \"$base_toolbox_command: failed to create a name for the toolbox container\" >&2\n                     fi\n\n                     exit 1\n                 fi\n\n                 exit 0\n            ); then\n            return 1\n        fi\n\n        toolbox_container_old_v2=\"$toolbox_image\"\n    fi\n\n    echo \"$base_toolbox_command: container is $toolbox_container\" >&3\n    return 0\n}\n\n\narguments=$(save_positional_parameters \"$@\")\n\necho \"THIS IMPLEMENTATION OF TOOLBOX IS NO LONGER MAINTAINED.\"\nprintf \"Please, use the Go implementation instead: \"\n# shellcheck disable=SC1003\nprintf '\\033]8;;https://containertoolbx.org/install/\\033\\\\containertoolbx.org/install\\033]8;;\\033\\\\'\nprintf \"\\n\"\necho\n\nhost_id=$(get_host_id)\nif [ \"$host_id\" = \"fedora\" ] 2>&3; then\n    release_default=$(get_host_version_id)\nelse\n    release_default=\"30\"\nfi\ntoolbox_container_prefix_default=\"fedora-toolbox\"\ntoolbox_container_default=\"$toolbox_container_prefix_default-$release_default\"\n\nwhile has_prefix \"$1\" -; do\n    case $1 in\n        --assumeyes | -y )\n            assume_yes=true\n            ;;\n        -h | --help )\n            if [ -f /run/.containerenv ] 2>&3; then\n                if ! [ -f /run/.toolboxenv ] 2>&3; then\n                    echo \"$base_toolbox_command: this is not a toolbox container\" >&2\n                    exit 1\n                fi\n\n                # shellcheck disable=SC2119\n                forward_to_host\n                exit\n            fi\n\n            help \"$2\"\n            exit\n            ;;\n        -v | --verbose )\n            exec 3>&2\n            verbose=true\n            ;;\n        -vv | --very-verbose )\n            exec 3>&2\n            podman_command=\"podman --log-level debug\"\n            verbose=true\n            ;;\n        * )\n            exit_if_unrecognized_option \"$1\"\n    esac\n    shift\ndone\n\necho \"$base_toolbox_command: running as real user ID $user_id_real\" >&3\n\nif ! toolbox_command_path=$(realpath \"$0\" 2>&3); then\n    echo \"$base_toolbox_command: failed to resolve absolute path to $0\" >&2\n    exit 1\nfi\n\necho \"$base_toolbox_command: resolved absolute path for $0 to $toolbox_command_path\" >&3\n\nif [ -f /run/.containerenv ] 2>&3; then\n    if [ \"$TOOLBOX_PATH\" = \"\" ] 2>&3; then\n        echo \"$base_toolbox_command: TOOLBOX_PATH not set\" >&2\n        exit 1\n    fi\nelse\n    if [ \"$user_id_real\" -ne 0 ] 2>&3; then\n        echo \"$base_toolbox_command: checking if /etc/subgid and /etc/subuid have entries for user $USER\" >&3\n\n        if ! grep \"^$USER:\" /etc/subgid >/dev/null 2>&3 || ! grep \"^$USER:\" /etc/subuid >/dev/null 2>&3; then\n            echo \"$base_toolbox_command: /etc/subgid and /etc/subuid don't have entries for user $USER\" >&2\n            echo \"See the podman(1), subgid(5), subuid(5) and usermod(8) manuals for more\" >&2\n            echo \"information.\" >&2\n            exit 1\n        fi\n    fi\n\n    if [ \"$TOOLBOX_PATH\" = \"\" ] 2>&3; then\n        TOOLBOX_PATH=\"$toolbox_command_path\"\n    fi\nfi\n\necho \"$base_toolbox_command: TOOLBOX_PATH is $TOOLBOX_PATH\" >&3\n\nif [ \"$1\" = \"\" ]; then\n    echo \"$base_toolbox_command: missing command\" >&2\n    echo >&2\n    echo \"These are some common commands:\" >&2\n    echo \"create    Create a new toolbox container\" >&2\n    echo \"enter     Enter an existing toolbox container\" >&2\n    echo \"list      List all existing toolbox containers and images\" >&2\n    echo >&2\n    echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n    exit 1\nfi\n\nop=$1\nshift\n\nif [ -f /run/.containerenv ] 2>&3; then\n    case $op in\n        create | enter | list | rm | rmi | run | help )\n            if ! [ -f /run/.toolboxenv ] 2>&3; then\n                echo \"$base_toolbox_command: this is not a toolbox container\" >&2\n                exit 1\n            fi\n\n            # shellcheck disable=SC2119\n            forward_to_host\n            exit \"$?\"\n            ;;\n        init-container )\n            init_container_home_link=false\n            init_container_media_link=false\n            init_container_mnt_link=false\n            init_container_monitor_host=false\n            while has_prefix \"$1\" -; do\n                case $1 in\n                    -h | --help )\n                        # shellcheck disable=SC2119\n                        forward_to_host\n                        exit\n                        ;;\n                    --home )\n                        shift\n                        exit_if_missing_argument --home \"$1\"\n                        init_container_home=\"$1\"\n                        ;;\n                    --home-link )\n                        init_container_home_link=true\n                        ;;\n                    --media-link )\n                        init_container_media_link=true\n                        ;;\n                    --mnt-link )\n                        init_container_mnt_link=true\n                        ;;\n                    --monitor-host )\n                        init_container_monitor_host=true\n                        ;;\n                    --shell )\n                        shift\n                        exit_if_missing_argument --shell \"$1\"\n                        init_container_shell=\"$1\"\n                        ;;\n                    --uid )\n                        shift\n                        exit_if_missing_argument --uid \"$1\"\n                        init_container_uid=\"$1\"\n                        ;;\n                    --user )\n                        shift\n                        exit_if_missing_argument --user \"$1\"\n                        init_container_user=\"$1\"\n                        ;;\n                    * )\n                        exit_if_unrecognized_option \"$1\"\n                esac\n                shift\n            done\n            init_container \\\n                    \"$init_container_home\" \\\n                    \"$init_container_home_link\" \\\n                    \"$init_container_media_link\" \\\n                    \"$init_container_mnt_link\" \\\n                    \"$init_container_monitor_host\" \\\n                    \"$init_container_shell\" \\\n                    \"$init_container_uid\" \\\n                    \"$init_container_user\"\n            exit \"$?\"\n            ;;\n        reset )\n            echo \"$base_toolbox_command: The 'reset' command cannot be used inside containers\" >&2\n            echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n            exit 1\n            ;;\n        * )\n           echo \"$base_toolbox_command: unrecognized command '$op'\" >&2\n           echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n           exit 1\n           ;;\n    esac\nfi\n\nif ! cgroups_version=$(get_cgroups_version); then\n    exit 1\nfi\n\necho \"$base_toolbox_command: running on a cgroups v$cgroups_version host\" >&3\n\nif [ \"$op\" != \"reset\" ] 2>&3; then\n    if ! migrate; then\n        exit 1\n    fi\nfi\n\ncase $op in\n    create )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                --candidate-registry )\n                    registry=$registry_candidate\n                    ;;\n                -c | --container )\n                    shift\n                    exit_if_missing_argument --container \"$1\"\n                    arg=$1\n                    if ! container_name_is_valid \"$arg\"; then\n                        echo \"$base_toolbox_command: invalid argument for '--container'\" >&2\n                        echo \"Container names must match '$container_name_regexp'.\" >&2\n                        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n                        exit 1\n                    fi\n                    toolbox_container=\"$arg\"\n                    ;;\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                -i | --image )\n                    shift\n                    exit_if_missing_argument --image \"$1\"\n                    base_toolbox_image=$1\n                    ;;\n                -r | --release )\n                    shift\n                    exit_if_missing_argument --release \"$1\"\n                    arg=$(echo \"$1\" | sed \"s/^F\\|^f//\" 2>&3)\n                    exit_if_non_positive_argument --release \"$arg\"\n                    release=$arg\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            shift\n        done\n        exit_if_extra_operand \"$1\"\n        if ! update_container_and_image_names; then\n            exit 1\n        fi\n        if ! create false; then\n            exit 1\n        fi\n        exit\n        ;;\n    enter )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -c | --container )\n                    shift\n                    exit_if_missing_argument --container \"$1\"\n                    toolbox_container=$1\n                    ;;\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                -r | --release )\n                    shift\n                    exit_if_missing_argument --release \"$1\"\n                    arg=$(echo \"$1\" | sed \"s/^F\\|^f//\" 2>&3)\n                    exit_if_non_positive_argument --release \"$arg\"\n                    release=$arg\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            shift\n        done\n        exit_if_extra_operand \"$1\"\n        if ! update_container_and_image_names; then\n            exit 1\n        fi\n        enter\n        exit\n        ;;\n    help )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            # shellcheck disable=SC2317\n            shift\n        done\n        help \"$1\"\n        exit\n        ;;\n    init-container )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -h | --help )\n                    help \"$op\"\n                    exit\n            esac\n            shift\n        done\n        echo \"$base_toolbox_command: The 'init-container' command can only be used inside containers\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\n        ;;\n    list )\n        ls_add_empty_line=false\n        ls_images=false\n        ls_containers=false\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -c | --containers )\n                    ls_containers=true\n                    ;;\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                -i | --images )\n                    ls_images=true\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            shift\n        done\n        exit_if_extra_operand \"$1\"\n\n        if ! $ls_containers && ! $ls_images; then\n            ls_containers=true\n            ls_images=true\n        fi\n\n        if $ls_images; then\n            if ! images=$(list_images); then\n                exit 1\n            fi\n        fi\n\n        if $ls_containers; then\n            if ! containers=$(list_containers); then\n                exit 1\n            fi\n        fi\n\n        if $ls_images && [ \"$images\" != \"\" ] 2>&3; then\n            echo \"$images\"\n            ls_add_empty_line=true\n        fi\n\n        if $ls_containers && [ \"$containers\" != \"\" ] 2>&3; then\n            $ls_add_empty_line && echo \"\"\n            echo \"$containers\"\n        fi\n\n        exit\n        ;;\n    reset )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            # shellcheck disable=SC2317\n            shift\n        done\n        exit_if_extra_operand \"$1\"\n\n        reset\n        exit \"$?\"\n        ;;\n    rm | rmi )\n        rm_all=false\n        rm_force=false\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -a | --all )\n                    rm_all=true\n                    ;;\n                -f | --force )\n                    rm_force=true\n                    ;;\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            shift\n        done\n\n        rm_ids=\"\"\n        if $rm_all; then\n            exit_if_extra_operand \"$1\"\n        else\n            exit_if_missing_argument \"$op\" \"$1\"\n            while [ \"$1\" != \"\" ]; do\n                rm_ids=\"$rm_ids $1\"\n                shift\n            done\n        fi\n\n        rm_ids=$(echo \"$rm_ids\" | sed \"s/^ \\+//\" 2>&3)\n\n        if [ \"$op\" = \"rm\" ]; then\n            remove_containers \"$rm_ids\" \"$rm_all\" \"$rm_force\"\n        else\n            remove_images \"$rm_ids\" \"$rm_all\" \"$rm_force\"\n        fi\n        exit\n        ;;\n    run )\n        while has_prefix \"$1\" -; do\n            case $1 in\n                -c | --container )\n                    shift\n                    exit_if_missing_argument --container \"$1\"\n                    toolbox_container=$1\n                    ;;\n                -h | --help )\n                    help \"$op\"\n                    exit\n                    ;;\n                -r | --release )\n                    shift\n                    exit_if_missing_argument --release \"$1\"\n                    arg=$(echo \"$1\" | sed \"s/^F\\|^f//\" 2>&3)\n                    exit_if_non_positive_argument --release \"$arg\"\n                    release=$arg\n                    ;;\n                * )\n                    exit_if_unrecognized_option \"$1\"\n            esac\n            shift\n        done\n        exit_if_missing_argument \"$op\" \"$1\"\n        if ! update_container_and_image_names; then\n            exit 1\n        fi\n        run false false true \"$@\"\n        exit\n        ;;\n    * )\n        echo \"$base_toolbox_command: unrecognized command '$op'\" >&2\n        echo \"Try '$base_toolbox_command --help' for more information.\" >&2\n        exit 1\nesac\n"
        }
      ]
    }
  ]
}