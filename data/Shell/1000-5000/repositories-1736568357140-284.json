{
  "metadata": {
    "timestamp": 1736568357140,
    "page": 284,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ComplianceAsCode/content",
      "stars": 2298,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cmakelintrc",
          "type": "blob",
          "size": 0.0517578125,
          "content": "# project has long lines\nfilter=-linelength\nspaces=4\n"
        },
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.873046875,
          "content": "---\nversion: \"2\"\nchecks:\n  file-lines:\n    config:\n      threshold: 400\n\n  similar-code:\n     config:\n       languages:\n         python:\n           threshold: 40\n\n  method-complexity:\n    config:\n      threshold: 7\n\nplugins:\n  markdownlint:\n    enabled: true\n  pep8:\n    enabled: true\n  radon:\n    enabled: true\n    config:\n        threshold: \"C\"\n  sonar-python:\n    enabled: true\n  shellcheck:\n    enabled: true\n  editorconfig:\n    enabled: true\n    config:\n      editorconfig: .editorconfig\n\nexclude_patterns:\n  - \"**/*\"\n  - \"**/.*\"\n\n  - \"!build-scripts/*.py\"\n  - \"!ssg/*.py\"\n  - \"!ssg/**/*.py\"\n  - \"!utils/*.py\"\n  - \"!utils/**/*.py\"\n\n  - \"!shared/**/*.py\"\n\n  - \"!*.md\"\n  - \"!**/*.md\"\n  - \"!.*/*.md\"\n\n  - \".editorconfig\"\n\n  - \"!tests/*.sh\"\n  - \"!tests/shared/*.sh\"\n  - \"!utils/*.sh\"\n  - \"!build_product\"\n\n  - \"!tests/*.py\"\n  - \"!tests/ssg_test_suite/*.py\"\n  - \"!tests/ssg_test_suite/**/*.py\"\n"
        },
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0048828125,
          "content": ".git\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4765625,
          "content": "# EditorConfig https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[**]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindentation_guess = true\n\n[**.py]\nindent_style = space\nindent_size = unset\ntab_width = 4\nmax_line_length = 99\n\n[{**.yml,**.yaml,**.jinja,**.var,**.profile,**.json}]\nindent_style = space\nindent_size = 4\n\n[{CMakeLists.txt,**.cmake}]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4921875,
          "content": "# Files and directories not to track in git tree\n\n# Global files for the entire tree\n*.swp\n*~\n*.pyc\n\n# Build files\nrpmbuild\ncontainer_build/\nbuild/\n\n# Ignore docs generated API sources\ndocs/api/\n\n# Ignore workflow artifacts\n.tox/\next/\n__pycache__/\n\n# Ignore docs tmp directories\ndocs/Developer_Guide/tmp\ndocs/SCAP_and_STIG_Workshop/tmp\ndocs/User_Guide/tmp\n\n# Ignore docs publish directories\ndocs/Developer_Guide/publish\ndocs/SCAP_and_STIG_Workshop/publish\ndocs/User_Guide/publish\n\n# Ignore docs SCAP_Security_Guide directory\ndocs/html/en-US/SCAP_Security_Guide\n\n# Ignore PCI_DSS_v3-1.pdf\nshared/transforms/pcidss/PCI_DSS_v3-1.pdf\n\n# Ignore zipfile and tarball dirs\nzipfile/\ntarball/\n\n# Ignore QtCreator files\nCMakeLists.txt.user\n\n# Ignore VIM's ropeproject files\n.ropeproject\n\n# Ignore pytest cache\n.pytest_cache/\n\n# Ignore Visual Studio Code configuration files\n.vscode/\n\n# Ignore IntelliJ Idea configuration files\n.idea/\n\n# Ignore release tools data file\nrelease_tools/.env\nrelease_tools/.jenkins_builds\nrelease_tools/*.log\nrelease_tools/release_notes.txt\nrelease_tools/artifacts\n\n# Ignore the test profile that utils/add_kubernetes_rule.py creates\nocp4/profiles/test.profile\n\n# Ignore the build profiling files\n.build_profiling/*\n\n# Ignore .ssh folder that is used by gitpod integration to store\n# keys used for automatus backends\n.ssh\n\n# Ignore MyPy Cache\n.mypy_cache/\n\n# Ignore build profiling data\n.build_profiling/\n\n# Ignore coverage files\n.coverage\ncoverage.xml\n\n# Trestle specfic\nshared/references/oscal/.trestle/cache\n"
        },
        {
          "name": ".gitpod.Dockerfile",
          "type": "blob",
          "size": 1.18359375,
          "content": "FROM gitpod/workspace-full\nENV PYTHONUSERBASE=/workspace/.pip-modules\nENV PATH=$PYTHONUSERBASE/bin:$PATH\nENV PIP_USER=yes\nUSER gitpod\nRUN sudo apt-get update -q && \\\n        sudo apt-get install -yq \\\n        cmake \\\n        ninja-build \\\n        libxml2-utils \\\n        xsltproc \\\n        python3-jinja2 \\\n        python3-yaml \\\n        python3-setuptools \\\n        ansible-lint \\\n        python3-github \\\n        bats \\\n        python3-pytest \\\n        python3-pytest-cov \\\n        libdbus-1-dev libdbus-glib-1-dev libcurl4-openssl-dev \\\n        libgcrypt20-dev libselinux1-dev libxslt1-dev libgconf2-dev libacl1-dev libblkid-dev \\\n        libcap-dev libxml2-dev libldap2-dev libpcre3-dev python3-dev swig libxml-parser-perl \\\n        libxml-xpath-perl libperl-dev libbz2-dev librpm-dev g++ libapt-pkg-dev libyaml-dev \\\n        libxmlsec1-dev libxmlsec1-openssl \\\n        shellcheck \\\n        bats \\\n        yamllint\n\nRUN wget https://github.com/OpenSCAP/openscap/releases/download/1.3.6/openscap-1.3.6.tar.gz\n\nRUN tar -zxvf openscap-1.3.6.tar.gz\n\nRUN cd openscap-1.3.6 && \\\n        mkdir -p build && cd build && \\\n        cmake -DCMAKE_INSTALL_PREFIX=/ .. && \\\n        sudo make install && \\\n        cd ../..\n"
        },
        {
          "name": ".gitpod.launch.json",
          "type": "blob",
          "size": 2.794921875,
          "content": "{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"inputs\": [\n      {\n      \"id\": \"pickContainerName\",\n      \"description\": \"Select Container Name\",\n      \"type\": \"pickString\",\n      \"options\": [\"&&CONTAINER_NAME&&\"],\n      \"default\": \"&&CONTAINER_NAME&&\"\n      },\n      {\n      \"id\": \"pickProductName\",\n      \"description\": \"Select Product Name\",\n      \"type\": \"pickString\",\n      \"options\": [\n          \"chromium\",\n          \"debian11\", \"debian12\",\n          \"eap6\",\n          \"fedora\",\n          \"firefox\",\n          \"macos1015\",\n          \"ocp4\",\n          \"ol7\", \"ol8\",\n          \"opensuse\", \"rhel8\", \"rhel9\", \"rhel10\",\n          \"rhosp10\", \"rhosp13\",\n          \"rhv4\",\n          \"sle12\", \"sle15\",\n          \"ubuntu1604\", \"ubuntu1804\", \"ubuntu2004\", \"ubuntu2204\"\n      ],\n      \"default\": \"&&DEFAULT_PRODUCT&&\"\n      },\n      {\n      \"id\": \"pickRemediationType\",\n      \"description\": \"Select Remediation Type\",\n      \"type\": \"pickString\",\n      \"options\": [\"oscap\", \"bash\", \"ansible\"],\n      \"default\": \"bash\"\n      }\n  ],\n  \"configurations\": [\n    {\n      \"name\": \"Run Automatus using Docker backend\",\n      \"type\": \"python\",\n      \"request\": \"launch\",\n      \"console\": \"integratedTerminal\",\n      \"program\": \"${workspaceFolder}/tests/automatus.py\",\n      \"args\": [\n          \"rule\",\n          \"--dontclean\",\n          \"--debug\",\n          \"--docker\",\n          \"${input:pickContainerName}\",\n          \"--datastream\",\n          \"${workspaceFolder}/build/ssg-${input:pickProductName}-ds.xml\",\n          \"--remediate-using\",\n          \"${input:pickRemediationType}\",\n          \"--make-applicable-in-containers\",\n          \"--remove-ocp4-only\",\n          \"--remove-fips-certified\",\n          \"--remove-platforms\",\n          \"${command:content-navigator.getRuleId}\"\n      ],\n      \"env\": {\n        \"SSH_ADDITIONAL_OPTIONS\": \"-o IdentityFile=${workspaceFolder}/&&PRIVATE_KEY_FILEPATH&&\"\n      }\n    },\n    {\n      \"name\": \"Run Automatus using Docker backend (test_rule_in_container.sh)\",\n      \"type\": \"bashdb\",\n      \"request\": \"launch\",\n      \"program\": \"${workspaceFolder}/tests/test_rule_in_container.sh\",\n      \"args\": [\n          \"--dontclean\",\n          \"--docker\",\n          \"--name\",\n          \"${input:pickContainerName}\",\n          \"--datastream\",\n          \"${workspaceFolder}/build/ssg-${input:pickProductName}-ds.xml\",\n          \"--remediate-using\",\n          \"${input:pickRemediationType}\",\n          \"${command:content-navigator.getRuleId}\"\n      ],\n      \"env\": {\n        \"ADDITIONAL_SSGTS_OPTIONS\": \"--debug --duplicate-templates --remove-fips-certified\",\n        \"SSH_ADDITIONAL_OPTIONS\": \"-o IdentityFile=${workspaceFolder}/&&PRIVATE_KEY_FILEPATH&&\"\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 1.8642578125,
          "content": "# Commands to start on workspace startup\nimage:\n  file: .gitpod.Dockerfile\n\nvscode:\n  extensions:\n    - ggbecker.content-navigator # useful extension for the ComplianceAsCode/content project\n    - ritwickdey.liveserver # HTML preview\n    - rogalmic.bash-debug # support bashdb debug configurations\n    - eamodio.gitlens # cool git extension with a bunch of extra features\n    - twxs.cmake # support to CMakeLists.txt syntax highlighting and more\n    - ms-python.python # running python configurations\n\ntasks:\n  - name: Prepare Env\n    init: |\n      pip install docker ansible json2html docutils==0.17.1 \\\n        myst-parser \\\n        sphinx \\\n        sphinx-rtd-theme \\\n        git+https://github.com/ggbecker/sphinxcontrib.jinjadomain.git#egg=sphinxcontrib-jinjadomain\n      [ -z \"$PRODUCT\" ] && PRODUCT=\"fedora\"\n      [ -z \"$CONTAINER\" ] && CONTAINER=$PRODUCT\n      [ -z \"$CONTAINER_VERSION\" ] && CONTAINER_VERSION=\"$CONTAINER\"\n      mkdir -p .vscode && cp .gitpod.launch.json .vscode/launch.json\n      CONTAINER_NAME=${CONTAINER}_container\n      sed -i \"s/&&CONTAINER_NAME&&/$CONTAINER_NAME/g\" .vscode/launch.json\n      sed -i \"s/&&DEFAULT_PRODUCT&&/$PRODUCT/g\" .vscode/launch.json\n      PRIVATE_KEY_FOLDER=.ssh\n      PRIVATE_KEY_FILEPATH=$PRIVATE_KEY_FOLDER/id_rsa\n      sed -i \"s,&&PRIVATE_KEY_FILEPATH&&,$PRIVATE_KEY_FILEPATH,g\" .vscode/launch.json\n      mkdir -p $PRIVATE_KEY_FOLDER\n      ssh-keygen -N '' -f $PRIVATE_KEY_FILEPATH\n      docker build --build-arg \"CLIENT_PUBLIC_KEY=$(cat $PRIVATE_KEY_FILEPATH.pub)\" -t $CONTAINER_NAME --build-arg IMAGE=$CONTAINER_VERSION -f Dockerfiles/test_suite-$CONTAINER .\n      [ -n \"$WORKSHOP\" ] && ansible-playbook -i 127.0.0.1, docs/workshop/labs_setup.yml -e EXERCISE=$WORKSHOP -e LAB_DIR=$GITPOD_REPO_ROOT --connection=local -u gitpod --ssh-extra-args '-F docs/workshop/data/ssh_config'\n      [ -z \"$WORKSHOP\" ] && ./build_product $PRODUCT --datastream-only\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 4.0302734375,
          "content": "# People here are sorted by last name\n\nEdgar Aguilar <edgar.aguilar@oracle.com>\nEdgar Aguilar <edgar.aguilar@oracle.com> <xeicker@gmail.com>\n\nGabe Alford <redhatrises@gmail.com>\n\nFiras AlShafei <firas.alshafei@us.abb.com>\nFiras AlShafei <firas.alshafei@us.abb.com> <firas.alshafei@gmail.com>\n\nEduardo Barretto <eduardo.barretto@canonical.com> <edusbarretto@gmail.com>\n\nJeff Blank <blank@eclipse.ncsc.mil>\nJeff Blank <blank@eclipse.ncsc.mil> <jeff@t440.local>\n\nDominique Blaze <dominique.blaze@devinci.fr> <dominique.blaze@edu.devinci.fr>\n\nOlivier Bonhomme <ptitoliv@ptitoliv.net>\n\nTed Brunell <tbrunell@redhat.com> <tbrunell@tbrunell.corp.redhat.com>\n\nMarcus Burghardt <maburgha@redhat.com> <marcus@mbsec.com.br>\nMarcus Burghardt <maburgha@redhat.com> <2074099+marcusburghardt@users.noreply.github.com>\n\nMatthew Burket <mburket@redhat.com>\nMatthew Burket <mburket@redhat.com> <m@tthewburket.com>\n\nFrank Caviggia <fcaviggia@users.noreply.github.com> <fcaviggi@ra.iad.redhat.com>\n\nDan Clark <danclark@redhat.com>\nDan Clark <danclark@redhat.com> <danielmclark@gmail.com>\n\nWill Cushen  <54533890+wcushen@users.noreply.github.com> <wcushen@redhat.com>\n\nJean-Baptiste Donnette <jean-baptiste.donnette@epita.fr> <donnet_j@epita.fr>\n\nGreg Elin <gregelin@gitmachines.com> <greg@fotonotes.net>\n\nAndrew Gilmore <agilmore2@gmail.com> <agilmore@ecahdb2.bor.doi.net>\n\nMarek Haicman <mhaicman@redhat.com> <dahaic@users.noreply.github.com>\n\nJohn Hooks <jhooks@starscream.pa.jhbcomputers.com> <hooksie11@gmail.com>\n\nMarc Jadoul <mgjadoul@laptomatic.auth-o-matic.corp> <marc.jadoul@gmail.com>\n\nLee Kinser <lee.kinser@gmail.com>\n\nJoseph Lenox <joseph.lenox@collins.com> <jdlenox@labnet.rockwellcollins.lab>\nJoseph Lenox <joseph.lenox@collins.com> <lordofhyphens@gmail.com>\nJoseph Lenox <joseph.lenox@collins.com> <Joseph.Lenox@corp.rockwellcollins.com>\nJoseph Lenox <joseph.lenox@collins.com> <Joseph.Lenox@collins.com>\n\nSimon Lukasik <slukasik@redhat.com> <isimluk@fedoraproject.org>\n\nMilan Lysonek <mlysonek@redhat.com>\nMilan Lysonek <mlysonek@redhat.com> <milan.lysonek@gmail.com>\nMilan Lysonek <mlysonek@redhat.com> <mlysonek@redhat.om>\n\nZbynek Moravec <zmoravec@redhat.com> <ybznek@users.noreply.github.com>\nZbynek Moravec <zmoravec@redhat.com> <moraveczbynek@gmail.com>\n\nNathan Peters <Nathaniel.Peters@ca.com> <nathan@nathanpeters.com>\nNathan Peters <Nathaniel.Peters@ca.com> <petna01@ca.com>\n\nVojtech Polasek <vpolasek@redhat.com>\nVojtech Polasek <vpolasek@redhat.com> <Vojtech.Polasek@gmail.com>\nVojtech Polasek <vpolasek@redhat.com> <krecoun@gmail.com>\n\nMartin Preisler <mpreisle@redhat.com> <martin@preisler.me>\n\nRobin Price II <robin@redhat.com> <rprice@users.noreply.github.com>\nRobin Price II <robin@redhat.com> <rprice@redhat.com>\n\nJuan Antonio Osorio Robles <juan.osoriorobles@eu.equinix.com>\nJuan Antonio Osorio Robles <juan.osoriorobles@eu.equinix.com> <jaosorior@redhat.com>\nJuan Antonio Osorio Robles <juan.osoriorobles@eu.equinix.com> <jaosorior@gmail.com>\n\nVincent Shen <wenshen@redhat.com>\nVincent Shen <wenshen@redhat.com> <47534281+Vincent056@users.noreply.github.com>\n\nDave Smith <dsmith@eclipse.ncsc.mil> <dsmith@secure-innovations.net>\nDave Smith <dsmith@eclipse.ncsc.mil> <dsmith@eclipse.ncsc.mil>\n\nAlexander Scheel <alexander.m.scheel@gmail.com> <alex.scheel@canonical.com>\nAlexander Scheel <alexander.m.scheel@gmail.com> <alex.scheel@hashicorp.com>\nAlexander Scheel <alexander.m.scheel@gmail.com> <ascheel@redhat.com>\n\nPhilippe Thierry <phil@reseau-libre.net> <phil@internal.reseau-libre.net>\nPhilippe Thierry <phil@reseau-libre.net> <philippe.thierry@reseau-libre.net>\nPhilippe Thierry <phil@reseau-libre.net> <philippe.thierry@thalesgroup.com>\n\nMatěj Týč <matyc@redhat.com>\nMatěj Týč <matyc@redhat.com> <matej.tyc@gmail.com>\n\nShawn Wells <shawn@redhat.com> <shawn@localhost.localdomain>\nShawn Wells <shawn@redhat.com> <shawnw@localhost.localdomain>\nShawn Wells <shawn@redhat.com> <shawndwells@gmail.com>\nShawn Wells <shawn@redhat.com> <shawn@shawndwells.io>\n\nAchilleas John Yfantis <ayfantis@redhat.com> <achilleasein@gmail.com>\nAchilleas John Yfantis <ayfantis@redhat.com> <ayfantis@localhost.localdomain>\n"
        },
        {
          "name": ".mdl.rb",
          "type": "blob",
          "size": 0.0751953125,
          "content": "all\nexclude_tag :line_length\nrule 'MD007', :indent => 4\nexclude_rule 'MD014'\n"
        },
        {
          "name": ".mdlrc",
          "type": "blob",
          "size": 0.015625,
          "content": "style \".mdl.rb\"\n"
        },
        {
          "name": ".packit.yaml",
          "type": "blob",
          "size": 4.00390625,
          "content": "downstream_package_name: scap-security-guide\nupstream_package_name: scap-security-guide\nspecfile_path: scap-security-guide.spec\n\nactions:\n  get-current-version:\n  - bash utils/version.sh\n\nsrpm_build_deps:\n  - bash\n\njobs:\n- &build\n  job: copr_build\n  trigger: pull_request\n  targets:\n  - fedora-all-x86_64\n  - centos-stream-8-x86_64\n  - centos-stream-9-x86_64\n\n- <<: *build\n  trigger: commit\n  branch: \"gh-readonly-queue/.*\"\n\n- &test-static-checks\n  job: tests\n  trigger: pull_request\n  fmf_path: tests/tmt-plans\n  identifier: /static-checks\n  tmt_plan: /static-checks$\n  targets:\n    centos-stream-8: {}\n    centos-stream-9: {}\n\n# when modifying this, modify also tests/tmt-plans/\n\n- <<: *test-static-checks\n  identifier: /rpmbuild-ctest-fedora\n  tmt_plan: /rpmbuild-ctest-fedora$\n  targets:\n    fedora-all: {}\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/anssi_bp28_high\n  tmt_plan: /hardening/host-os/ansible/anssi_bp28_high$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/ccn_advanced\n  tmt_plan: /hardening/host-os/ansible/ccn_advanced$\n  targets:\n    centos-stream-9: {}\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/cis\n  tmt_plan: /hardening/host-os/ansible/cis$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/cis_server_l1\n  tmt_plan: /hardening/host-os/ansible/cis_server_l1$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/cis_workstation_l1\n  tmt_plan: /hardening/host-os/ansible/cis_workstation_l1$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/cis_workstation_l2\n  tmt_plan: /hardening/host-os/ansible/cis_workstation_l2$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/cui\n  tmt_plan: /hardening/host-os/ansible/cui$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/e8\n  tmt_plan: /hardening/host-os/ansible/e8$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/hipaa\n  tmt_plan: /hardening/host-os/ansible/hipaa$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/ism_o\n  tmt_plan: /hardening/host-os/ansible/ism_o$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/ospp\n  tmt_plan: /hardening/host-os/ansible/ospp$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/pci-dss\n  tmt_plan: /hardening/host-os/ansible/pci-dss$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/ansible/stig\n  tmt_plan: /hardening/host-os/ansible/stig$\n\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/anssi_bp28_high\n  tmt_plan: /hardening/host-os/oscap/anssi_bp28_high$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/ccn_advanced\n  tmt_plan: /hardening/host-os/oscap/ccn_advanced$\n  targets:\n    centos-stream-9: {}\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/cis\n  tmt_plan: /hardening/host-os/oscap/cis$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/cis_server_l1\n  tmt_plan: /hardening/host-os/oscap/cis_server_l1$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/cis_workstation_l1\n  tmt_plan: /hardening/host-os/oscap/cis_workstation_l1$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/cis_workstation_l2\n  tmt_plan: /hardening/host-os/oscap/cis_workstation_l2$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/cui\n  tmt_plan: /hardening/host-os/oscap/cui$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/e8\n  tmt_plan: /hardening/host-os/oscap/e8$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/hipaa\n  tmt_plan: /hardening/host-os/oscap/hipaa$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/ism_o\n  tmt_plan: /hardening/host-os/oscap/ism_o$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/ospp\n  tmt_plan: /hardening/host-os/oscap/ospp$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/pci-dss\n  tmt_plan: /hardening/host-os/oscap/pci-dss$\n- <<: *test-static-checks\n  identifier: /hardening/host-os/oscap/stig\n  tmt_plan: /hardening/host-os/oscap/stig$\n"
        },
        {
          "name": ".pyenv.sh",
          "type": "blob",
          "size": 1.2646484375,
          "content": "#!/bin/bash\n\n# This script sets the PYTHONPATH environment variable for the user, without\n# overriding their existing path. This allows them to directly execute scripts\n# in utils/ or build-scripts/ without having to install the ssg/ module in a\n# traditional python location (either system-wide or user-wide).\n#\n# This script can either be executed as:\n#     $ source ../relative/or/absolute/path/to/.pyenv.sh\n# In which case, the user can then proceed to use any script as they wish.\n# Otherwise, it can be executed as:\n#     $ PYTHONPATH=`.../path/to/.pyenv.sh` .../path/to/utils/some_script.py\n# In which case, the changes to $PYTHONPATH will not persist past this command.\n\n\n# By acquiring both the path to the current source, and the current working\n# directory, joining the two gives us an absolute path which we can add to\n# PYTHONPATH, allowing the user to change directories without having to\n# constantly re-source the script.\nscript_dir=\"$(dirname \"${BASH_SOURCE[@]}\")\"\ncurrent_dir=\"$(pwd)\"\npathdir=\"$(python -c \"import os.path; print(os.path.abspath(os.path.join('$current_dir', '$script_dir')))\")\"\nnewpath=\"$pathdir\"\n\n# If the path is already set, append to it.\nif [ \"x$PYTHONPATH\" != \"x\" ]; then\n    newpath=\"$newpath:$PYTHONPATH\"\nfi\n\necho \"$newpath\"\nexport PYTHONPATH=\"$newpath\"\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.265625,
          "content": "# Required\nversion: 2\n\n\nbuild:\n  os: ubuntu-22.04\n  apt_packages:\n      - libvirt-dev\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": ".tekton",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeGraphVizOptions.cmake",
          "type": "blob",
          "size": 0.033203125,
          "content": "set(GRAPHVIZ_CUSTOM_TARGETS TRUE)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 26.521484375,
          "content": "cmake_minimum_required(VERSION 2.8.12)\n\n# Strictly speaking in-source will work but will be very messy so it is not supported.\nif(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_BINARY_DIR}\")\n    message(FATAL_ERROR \"In-source builds are not supported! Please use out of source builds:\\n\"\n        \"$ cd content\\n\"\n        \"$ rm CMakeCache.txt\\n\"\n        \"$ cd build\\n\"\n        \"$ cmake ../\\n\"\n        \"$ make -j4\"\n    )\nendif()\n\n# Inspired and referenced from https://blog.kitware.com/cmake-and-the-default-build-type\nif(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)\n    message(STATUS \"Setting build type to 'Release' as none was specified.\")\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build.\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\"\n        \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n\nproject(scap-security-guide NONE)\nlist(APPEND CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\n\n# This is set to silence GNUInstallDirs warning about no language being used with cmake.\nset(CMAKE_INSTALL_LIBDIR \"/nowhere\")\ninclude(GNUInstallDirs)\ninclude(CMakeDependentOption)\ninclude(FindOpenSCAP)\ninclude(FindPythonModule)\ninclude(SSGCommon)\n\n# Define Version values\nset(SSG_MAJOR_VERSION 0)\nset(SSG_MINOR_VERSION 1)\nset(SSG_PATCH_VERSION 76)\nset(SSG_VERSION \"${SSG_MAJOR_VERSION}.${SSG_MINOR_VERSION}.${SSG_PATCH_VERSION}\")\n\nset(SSG_TARGET_OVAL_MAJOR_VERSION \"5\" CACHE STRING \"Which major version of OVAL are we targetting. Only 5 is supported at the moment.\")\nset(SSG_TARGET_OVAL_MINOR_VERSION \"11\" CACHE STRING \"Which minor version of OVAL are we targetting. Only 11 is supported at the moment.\")\nset(SSG_TARGET_OVAL_VERSION \"${SSG_TARGET_OVAL_MAJOR_VERSION}.${SSG_TARGET_OVAL_MINOR_VERSION}\")\nset(SSG_VENDOR \"ssgproject\" CACHE STRING \"Specify the XCCDF 1.2 vendor string.\")\n\n# Define Install Directories, where built content will be stored.\nset(SSG_ANSIBLE_ROLE_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/scap-security-guide/ansible\")\nset(SSG_ANSIBLE_PER_RULE_PLAYBOOKS_INSTALL_DIR \"${SSG_ANSIBLE_ROLE_INSTALL_DIR}/rule_playbooks\")\nset(SSG_BASH_ROLE_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/scap-security-guide/bash\")\nset(SSG_CONTENT_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/xml/scap/ssg/content\")\nset(SSG_GUIDE_INSTALL_DIR \"${CMAKE_INSTALL_DOCDIR}/guides\")\nset(SSG_KICKSTART_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/scap-security-guide/kickstart\")\nset(SSG_TABLE_INSTALL_DIR \"${CMAKE_INSTALL_DOCDIR}/tables\")\nset(SSG_TAILORING_INSTALL_DIR \"${CMAKE_INSTALL_DATADIR}/scap-security-guide/tailoring\")\n\n# Define Source Directories, which will be used during the build.\nset(SSG_BUILD_SCRIPTS \"${CMAKE_SOURCE_DIR}/build-scripts\")\nset(SSG_JINJA2_CACHE_DIR \"${CMAKE_BINARY_DIR}/jinja2_cache\" CACHE PATH \"Where the jinja2 cached bytecode should be stored. This speeds up builds at the expense of disk space. You can use one location for multiple SSG builds for performance improvements.\")\nset(SSG_SHARED \"${CMAKE_SOURCE_DIR}/shared\")\nset(SSG_SHARED_REFS \"${SSG_SHARED}/references\")\nset(SSG_SHARED_TRANSFORMS \"${SSG_SHARED}/transforms\")\nset(SSG_UTILS_SCRIPTS \"${CMAKE_SOURCE_DIR}/utils\")\n\n# Content Generation Opetions\noption(SSG_ANSIBLE_PLAYBOOKS_ENABLED \"If enabled, Ansible Playbooks for each profile will be built and installed.\" TRUE)\noption(SSG_ANSIBLE_PLAYBOOKS_PER_RULE_ENABLED \"If enabled, Ansible Playbooks for each rule will be built and installed.\" FALSE)\noption(SSG_BASH_SCRIPTS_ENABLED \"If enabled, Bash remediation scripts for each profile will be built and installed.\" TRUE)\noption(SSG_BUILD_DISA_DELTA_FILES \"If enabled, If the product has automated content from DISA for its STIG a tailoring file will be created with rules not covered by DISA's content enabled.\" TRUE)\noption(SSG_JINJA2_CACHE_ENABLED \"If enabled, the jinja2 templating files will be cached into bytecode. Also see SSG_JINJA2_CACHE_DIR.\" TRUE)\noption(SSG_SCE_ENABLED \"If enabled, additional SCE audit content will be enabled alongside OVAL-based auditing.\" FALSE)\noption(SSG_SRG_XLSX_EXPORT \"If enabled, an XLSX of SRG Export will be ceated.\" FALSE)\noption(SSG_SEPARATE_SCAP_FILES_ENABLED \"If enabled, separate SCAP files (OVAL, XCCDF, CPE dict, ...) will be installed alongside the source data-streams\" TRUE)\n# Validation Options\noption(SSG_BATS_TESTS_ENABLED \"If enabled, bats will be used to run unit-tests of bash remediations.\" TRUE)\noption(SSG_LINKCHECKER_VALIDATION_ENABLED \"If enabled, linkchecker will be used to validate URLs in all the HTML guides and tables.\" TRUE)\noption(SSG_SCAP_VALIDATION_ENABLED \"If enabled, CTest tests will contain validation of built SCAP content. This is very time consuming.\" TRUE)\noption(SSG_OVAL_SCHEMATRON_VALIDATION_ENABLED \"If enabled, schematron validation will be performed as part of the ctest tests. Schematron takes a lot of time to complete but can find more issues than just plain XSD validation.\" TRUE)\noption(SSG_SHELLCHECK_BASH_FIXES_VALIDATION_ENABLED \"If enabled, shellcheck validation of bash fixes will be performed as part of the ctest tests.\" TRUE)\noption(ENABLE_SCAPVAL13 \"Set to ON to enable SCAPVal tests\" OFF)\noption(FORCE_VALIDATE_EVERYTHING \"If enabled, perform all validation tests regardless of oscap version requirements. By default, the build system may not perform validation of some content types if the openscap used to build it is not up-to-date\" FALSE)\n\n# SSG_PRODUCT_DEFAULT modifies the behavior of all other options. Products which should be built\n# by default should use the value ${SSG_PRODUCT_DEFAULT} instead of the boolean True. This allows\n# us to disable all default products by passing `-DSSG_PRODUCT_DEFAULT=OFF` and then manually\n# specifying a list of products to build.\noption(SSG_PRODUCT_DEFAULT \"If enabled, all default release products will be built; otherwise only explicitly enabled products will be\" TRUE)\n\n# Products to build content for. These generally correspond to directories in the root of this\n# project. Note that the example product is always disabled unless explicitly asked for.\noption(SSG_PRODUCT_ALINUX2 \"If enabled, the Alibaba Cloud Linux 2 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_ALINUX3 \"If enabled, the Alibaba Cloud Linux 3 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_ANOLIS8 \"If enabled, the Anolis OS 8 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_ANOLIS23 \"If enabled, the Anolis OS 23 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_CHROMIUM \"If enabled, the Chromium SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_DEBIAN11 \"If enabled, the Debian 11 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_DEBIAN12 \"If enabled, the Debian 12 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_EKS \"If enabled, the EKS SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_EXAMPLE \"If enabled, the Example SCAP content will be built\" FALSE)\noption(SSG_PRODUCT_FEDORA \"If enabled, the Fedora SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_FIREFOX \"If enabled, the Firefox SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_MACOS1015 \"If enabled, the Apple macOS 10.15 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_KYLINSERVER10 \"If enabled, the Kylin Server V10 content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OCP4 \"If enabled, the OCP4 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OL7 \"If enabled, the Oracle Linux 7 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OL8 \"If enabled, the Oracle Linux 8 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OL9 \"If enabled, the Oracle Linux 9 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OL10 \"If enabled, the Oracle Linux 10 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OPENEMBEDDED \"If enabled, the OpenEmbedded SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OPENEULER2203 \"If enabled, the openEuler 22.03 LTS content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_OPENSUSE \"If enabled, the openSUSE SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_RHCOS4 \"If enabled, the RHCOS4 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_RHEL8 \"If enabled, the RHEL8 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_RHEL9 \"If enabled, the RHEL9 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_RHEL10 \"If enabled, the RHEL10 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_RHV4 \"If enabled, the RHV4 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_SLE12 \"If enabled, the SLE12 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_SLE15 \"If enabled, the SLE15 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_SLMICRO5 \"If enabled, the SLE Micro 5 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_UBUNTU1604 \"If enabled, the Ubuntu 16.04 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_UBUNTU1804 \"If enabled, the Ubuntu 18.04 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_UBUNTU2004 \"If enabled, the Ubuntu 20.04 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_UBUNTU2204 \"If enabled, the Ubuntu 22.04 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_UBUNTU2404 \"If enabled, the Ubuntu 24.04 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\noption(SSG_PRODUCT_AL2023 \"If enabled, the AL2023 SCAP content will be built\" ${SSG_PRODUCT_DEFAULT})\n# Products derivatives\noption(SSG_CENTOS_DERIVATIVES_ENABLED \"If enabled, CentOS derivative content will be built from the RHEL content\" TRUE)\n\nif(\"$ENV{PYTHONPATH}\" STREQUAL \"\")\n    set(ENV{PYTHONPATH} \"${PROJECT_SOURCE_DIR}\")\nelse()\n    set(ENV{PYTHONPATH} \"${PROJECT_SOURCE_DIR}:$ENV{PYTHONPATH}\")\nendif()\nmessage(STATUS \"PYTHONPATH: $ENV{PYTHONPATH}\")\n\n# Setting Python_ADDITIONAL_VERSIONS before calling PythonInterp can influence the priority of\n# python executables in a scenario where multiple versions are present.\nset(Python_ADDITIONAL_VERSIONS 3 2)\n# Required Packages\nfind_package(PythonInterp REQUIRED)\nfind_package(OpenSCAP REQUIRED)\n\nfind_program(ANSIBLE_LINT_EXECUTABLE NAMES ansible-lint)\nfind_program(ANSIBLE_PLAYBOOK_EXECUTABLE NAMES ansible-playbook)\nfind_program(BATS_EXECUTABLE NAMES bats)\nfind_program(GIT_EXECUTABLE NAMES git)\nfind_program(GREP_EXECUTABLE NAMES grep)\nfind_program(LINKCHECKER_EXECUTABLE NAMES linkchecker)\nfind_program(SED_EXECUTABLE NAMES sed REQUIRED)\nfind_program(SHELLCHECK_EXECUTABLE NAMES shellcheck)\nfind_program(XMLLINT_EXECUTABLE NAMES xmllint REQUIRED)\nfind_program(XSLTPROC_EXECUTABLE NAMES xsltproc REQUIRED)\nfind_program(YAMLLINT_EXECUTABLE NAMES yamllint)\n\nmessage(STATUS \"\")\nmessage(STATUS \"SCAP Security Guide ${SSG_VERSION}\")\nmessage(STATUS \"(see ${CMAKE_SOURCE_DIR}/docs/manual/developer_guide.adoc for build instructions)\")\n\nmessage(STATUS \"\")\nmessage(STATUS \"Finding Python Modules:\")\nfind_python_module(jinja2 REQUIRED)\nfind_python_module(yaml REQUIRED)\nfind_python_module(cmakelint)\nfind_python_module(github)\nfind_python_module(json2html)\nfind_python_module(lxml)\nfind_python_module(mypy)\nfind_python_module(openpyxl)\nfind_python_module(pandas)\nfind_python_module(pcre2)\nfind_python_module(pytest)\nfind_python_module(pytest_cov)\ncmake_dependent_option(ENABLE_PYTHON_COVERAGE \"Enable Python tests with coverage support\" ON \"PY_PYTEST_COV\" OFF)\n\n# sphinx documentation requirements\nfind_python_module(myst_parser)\nfind_python_module(sphinx)\nfind_python_module(sphinxcontrib.autojinja)\nfind_python_module(sphinx_rtd_theme)\n\nif(PY_SPHINX AND PY_SPHINXCONTRIB.AUTOJINJA AND PY_SPHINX_RTD_THEME AND PY_MYST_PARSER)\n    message(STATUS \"Enabling docs directory as system supports Sphinx builds.\")\n    add_subdirectory(\"docs\")\nendif()\n\n# prometheus_metrics requirements\nfind_python_module(prometheus_client)\n\n# compliance-trestle requirements\nfind_python_module(requests)\nfind_python_module(trestle)\n\nif(NOT SSG_TARGET_OVAL_VERSION VERSION_EQUAL \"5.11\")\n    message(WARNING \"You are targeting OVAL version ${SSG_TARGET_OVAL_VERSION}. In SSG we support/test 5.11 only!\")\nendif()\n\n# OCP4 requires non-standard extensions. Vanilla OpenSCAP 1.2 doesn't support it.\n# See also: https://github.com/ComplianceAsCode/content/issues/6798\nif(\"${OSCAP_VERSION}\" VERSION_LESS \"1.3.4\" AND SSG_PRODUCT_OCP4)\n    set(SSG_PRODUCT_OCP4 OFF)\n    message(WARNING \"Won't build OCP4 content as it requires an OpenSCAP version with OCP4 support. See also: https://github.com/ComplianceAsCode/content/issues/6798. n.b.: if 1.3.4 fails to build OCP4 content, please update to 1.3.5\")\nendif()\n\n# EKS requires non-standard extensions. Vanilla OpenSCAP 1.2 doesn't support it.\n\nif(\"${OSCAP_VERSION}\" VERSION_LESS \"1.3.4\" AND SSG_PRODUCT_EKS)\n    set(SSG_PRODUCT_EKS OFF)\n    message(WARNING \"Won't build EKS content as it requires an OpenSCAP version with EKS support. See also: https://github.com/ComplianceAsCode/content/issues/6798. n.b.: if 1.3.4 fails to build EKS content, please update to 1.3.5\")\nendif()\n\nset(LOG_LEVEL \"WARNING\")\nif(SSG_LOG)\n    set(LOG_LEVEL \"DEBUG\")\nendif()\n\nif(NOT SSG_THIN_DS)\n    set(SSG_THIN_DS_RULE_ID \"off\")\nendif()\n\nif(SSG_JINJA2_CACHE_ENABLED)\n    file(MAKE_DIRECTORY \"${SSG_JINJA2_CACHE_DIR}\")\n    if(NOT EXISTS \"${SSG_JINJA2_CACHE_DIR}\")\n        message(FATAL_ERROR \"jinja2 cache dir was set to '${SSG_JINJA2_CACHE_DIR}'. This directory doesn't seem to exist and attempt to create it has failed.\")\n    endif()\n    set(SSG_JINJA2_CACHE_ENABLED_BOOL \"true\")\nelse()\n    set(SSG_JINJA2_CACHE_ENABLED_BOOL \"false\")\nendif()\n\nconfigure_file(\"${CMAKE_SOURCE_DIR}/build_config.yml.in\" \"${CMAKE_BINARY_DIR}/build_config.yml\" @ONLY)\n\nmessage(STATUS \" \")\nmessage(STATUS \"Summary of Python Tools and Modules:\")\n# Required Python Tools\nmessage(STATUS \"python: ${PYTHON_EXECUTABLE} (version: ${PYTHON_VERSION_STRING})\")\nmessage(STATUS \"python yaml module: ${PY_YAML}\")\nmessage(STATUS \"python jinja2 module: ${PY_JINJA2}\")\n# Optional Python Tools\nmessage(STATUS \"python compliance-trestle module (optional): ${PY_TRESTLE}\")\nmessage(STATUS \"python cmakelint module (optional): ${PY_CMAKELINT}\")\nmessage(STATUS \"python github (PyGitHub) module (optional): ${PY_GITHUB}\")\nmessage(STATUS \"python json2html module (optional): ${PY_JSON2HTML}\")\nmessage(STATUS \"python lxml module (optional): ${PY_LXML}\")\nmessage(STATUS \"python mypy module (optional): ${PY_MYPY}\")\nmessage(STATUS \"python myst-parser module (optional): ${PY_MYST_PARSER}\")\nmessage(STATUS \"python openpyxl module (optional): ${PY_OPENPYXL}\")\nmessage(STATUS \"python pandas module (optional): ${PY_PANDAS}\")\nmessage(STATUS \"python pcre2 module (optional): ${PY_PCRE2}\")\nmessage(STATUS \"python prometheus-client module (optional): ${PY_PROMETHEUS_CLIENT}\")\nmessage(STATUS \"python pytest_cov module (optional): ${PY_PYTEST_COV}\")\nmessage(STATUS \"python pytest module (optional): ${PY_PYTEST}\")\nmessage(STATUS \"python requests module (optional): ${PY_REQUESTS}\")\nmessage(STATUS \"python sphinx module (optional): ${PY_SPHINX}\")\nmessage(STATUS \"python sphinxcontrib.autojinja module (optional): ${PY_SPHINXCONTRIB.AUTOJINJA}\")\nmessage(STATUS \"python sphinx_rtd_theme module (optional): ${PY_SPHINX_RTD_THEME}\")\nmessage(STATUS \" \")\nmessage(STATUS \"Summary of System Tools:\")\n# Required System Tools\nmessage(STATUS \"oscap: ${OPENSCAP_OSCAP_EXECUTABLE} (version: ${OSCAP_VERSION})\")\nmessage(STATUS \"sed: ${SED_EXECUTABLE}\")\nmessage(STATUS \"xsltproc: ${XSLTPROC_EXECUTABLE}\")\nmessage(STATUS \"xmllint: ${XMLLINT_EXECUTABLE}\")\n# Optional System Tools\nmessage(STATUS \"ansible-lint module (optional): ${ANSIBLE_LINT_EXECUTABLE}\")\nmessage(STATUS \"ansible-playbook module (optional): ${ANSIBLE_PLAYBOOK_EXECUTABLE}\")\nmessage(STATUS \"BATS framework (optional): ${BATS_EXECUTABLE}\")\nmessage(STATUS \"grep (optional): ${GREP_EXECUTABLE}\")\nmessage(STATUS \"linkchecker (optional): ${LINKCHECKER_EXECUTABLE}\")\nmessage(STATUS \"shellcheck (optional): ${SHELLCHECK_EXECUTABLE}\")\nmessage(STATUS \"yamllint module (optional): ${YAMLLINT_EXECUTABLE}\")\n\nmessage(STATUS \" \")\nmessage(STATUS \"CMake Settings:\")\nmessage(STATUS \"build type: ${CMAKE_BUILD_TYPE}\")\nmessage(STATUS \"build directory: ${CMAKE_BINARY_DIR}\")\nmessage(STATUS \"generator: ${CMAKE_GENERATOR}\")\nmessage(STATUS \"source directory: ${CMAKE_SOURCE_DIR}\")\n\nmessage(STATUS \" \")\nmessage(STATUS \"Build options:\")\nmessage(STATUS \"SSG vendor string: ${SSG_VENDOR}\")\nmessage(STATUS \"Target OVAL version: ${SSG_TARGET_OVAL_VERSION}\")\nmessage(STATUS \"Logging: ${SSG_LOG}\")\nmessage(STATUS \"Ansible Playbooks: ${SSG_ANSIBLE_PLAYBOOKS_ENABLED}\")\nmessage(STATUS \"Ansible Playbooks Per Rule: ${SSG_ANSIBLE_PLAYBOOKS_PER_RULE_ENABLED}\")\nmessage(STATUS \"Bash scripts: ${SSG_BASH_SCRIPTS_ENABLED}\")\nmessage(STATUS \"Build SCE Content: ${SSG_SCE_ENABLED}\")\nmessage(STATUS \"Build SRG XLSX Export: ${SSG_SRG_XLSX_EXPORT}\")\nif(SSG_JINJA2_CACHE_ENABLED)\n    message(STATUS \"jinja2 cache: enabled\")\n    message(STATUS \"jinja2 cache dir: ${SSG_JINJA2_CACHE_DIR}\")\nelse()\n    message(STATUS \"jinja2 cache: disabled\")\nendif()\nmessage(STATUS \"Separate SCAP files: ${SSG_SEPARATE_SCAP_FILES_ENABLED}\")\nmessage(STATUS \"STIG Delta Taloring files: ${SSG_BUILD_DISA_DELTA_FILES}\")\nmessage(STATUS \"Thin data streams: ${SSG_THIN_DS}\")\n\nmessage(STATUS \" \")\nmessage(STATUS \"Validation options:\")\nmessage(STATUS \"BATS tests: ${SSG_BATS_TESTS_ENABLED}\")\nmessage(STATUS \"Link Checker validation: ${SSG_LINKCHECKER_VALIDATION_ENABLED}\")\nmessage(STATUS \"OVAL schematron validation: ${SSG_OVAL_SCHEMATRON_VALIDATION_ENABLED}\")\nmessage(STATUS \"shellcheck bash fixes validation: ${SSG_SHELLCHECK_BASH_FIXES_VALIDATION_ENABLED}\")\nmessage(STATUS \"SCAPVal 1.3 Enabled: ${ENABLE_SCAPVAL13}\")\nif(ENABLE_SCAPVAL13)\n    message(STATUS \"SCAPVAL Path: ${SCAPVAL_PATH}\")\n    if(NOT SCAPVAL_PATH)\n        message(SEND_ERROR \"Path to SCAPVal was not specified.\")\n    endif()\n    find_program(JAVA_EXECUTABLE NAMES java)\n    message(STATUS \"java: ${JAVA_EXECUTABLE}\")\n    if(NOT JAVA_EXECUTABLE)\n        message(SEND_ERROR \"java is required for SCAPVal!\")\n    endif()\nendif()\nmessage(STATUS \"Validate SCAP content: ${SSG_SCAP_VALIDATION_ENABLED}\")\nmessage(STATUS \"Force validate everything: ${FORCE_VALIDATE_EVERYTHING}\")\n\nmessage(STATUS \" \")\nmessage(STATUS \"Products:\")\nmessage(STATUS \"Alibaba Cloud Linux 2: ${SSG_PRODUCT_ALINUX2}\")\nmessage(STATUS \"Alibaba Cloud Linux 3: ${SSG_PRODUCT_ALINUX3}\")\nmessage(STATUS \"Anolis OS 8: ${SSG_PRODUCT_ANOLIS8}\")\nmessage(STATUS \"Anolis OS 23: ${SSG_PRODUCT_ANOLIS23}\")\nmessage(STATUS \"Chromium: ${SSG_PRODUCT_CHROMIUM}\")\nmessage(STATUS \"Debian 11: ${SSG_PRODUCT_DEBIAN11}\")\nmessage(STATUS \"Debian 12: ${SSG_PRODUCT_DEBIAN12}\")\nmessage(STATUS \"Example: ${SSG_PRODUCT_EXAMPLE}\")\nmessage(STATUS \"EKS: ${SSG_PRODUCT_EKS}\")\nmessage(STATUS \"Fedora: ${SSG_PRODUCT_FEDORA}\")\nmessage(STATUS \"Firefox: ${SSG_PRODUCT_FIREFOX}\")\nmessage(STATUS \"MacOS 1015: ${SSG_PRODUCT_MACOS1015}\")\nmessage(STATUS \"Kylin Server V10: ${SSG_PRODUCT_KYLINSERVER10}\")\nmessage(STATUS \"OCP4: ${SSG_PRODUCT_OCP4}\")\nmessage(STATUS \"RHCOS4: ${SSG_PRODUCT_RHCOS4}\")\nmessage(STATUS \"Oracle Linux 7: ${SSG_PRODUCT_OL7}\")\nmessage(STATUS \"Oracle Linux 8: ${SSG_PRODUCT_OL8}\")\nmessage(STATUS \"Oracle Linux 9: ${SSG_PRODUCT_OL9}\")\nmessage(STATUS \"Oracle Linux 10: ${SSG_PRODUCT_OL10}\")\nmessage(STATUS \"openEuler 22.03 LTS: ${SSG_PRODUCT_OPENEULER2203}\")\nmessage(STATUS \"openSUSE: ${SSG_PRODUCT_OPENSUSE}\")\nmessage(STATUS \"RHEL 8: ${SSG_PRODUCT_RHEL8}\")\nmessage(STATUS \"RHEL 9: ${SSG_PRODUCT_RHEL9}\")\nmessage(STATUS \"RHEL 10: ${SSG_PRODUCT_RHEL10}\")\nmessage(STATUS \"RHV 4: ${SSG_PRODUCT_RHV4}\")\nmessage(STATUS \"SUSE 12: ${SSG_PRODUCT_SLE12}\")\nmessage(STATUS \"SUSE 15: ${SSG_PRODUCT_SLE15}\")\nmessage(STATUS \"SLE Micro 5: ${SSG_PRODUCT_SLMICRO5}\")\nmessage(STATUS \"Ubuntu 16.04: ${SSG_PRODUCT_UBUNTU1604}\")\nmessage(STATUS \"Ubuntu 18.04: ${SSG_PRODUCT_UBUNTU1804}\")\nmessage(STATUS \"Ubuntu 20.04: ${SSG_PRODUCT_UBUNTU2004}\")\nmessage(STATUS \"Ubuntu 22.04: ${SSG_PRODUCT_UBUNTU2204}\")\nmessage(STATUS \"Ubuntu 24.04: ${SSG_PRODUCT_UBUNTU2404}\")\nmessage(STATUS \"AL 2023: ${SSG_PRODUCT_AL2023}\")\nmessage(STATUS \"OpenEmbedded: ${SSG_PRODUCT_OPENEMBEDDED}\")\nmessage(STATUS \" \")\n\n# Remove this option when we would like to run ansible-lint and yamllint against our playbooks by\n# default. Right now these checks are not performed and need to be enabled by adding\n# -DANSIBLE_CHECKS=ON to cmake before running ctest.\noption(ANSIBLE_CHECKS \"Set to ON to enable ansible-lint and yamllint checks\" OFF)\nenable_testing()\n\nadd_subdirectory(\"tests\")\n\n# Targets 'stats', 'profile-stats' and 'zipfile' need to be added before any product because they\n# will receive dependencies from products added.\nssg_build_zipfile_target(\"scap-security-guide-${SSG_VERSION}\")\n\nadd_custom_target(stats)\nadd_custom_target(profile-stats)\n\nadd_custom_target(html-stats)\nadd_custom_target(html-profile-stats)\n\nadd_custom_target(render-policies)\n\nssg_build_man_page()\n\nif(SSG_PRODUCT_AL2023)\n    add_subdirectory(\"products/al2023\" \"al2023\")\nendif()\nif(SSG_PRODUCT_ALINUX2)\n    add_subdirectory(\"products/alinux2\" \"alinux2\")\nendif()\nif(SSG_PRODUCT_ALINUX3)\n    add_subdirectory(\"products/alinux3\" \"alinux3\")\nendif()\nif(SSG_PRODUCT_ANOLIS8)\n    add_subdirectory(\"products/anolis8\" \"anolis8\")\nendif()\nif(SSG_PRODUCT_ANOLIS23)\n    add_subdirectory(\"products/anolis23\" \"anolis23\")\nendif()\nif(SSG_PRODUCT_CHROMIUM)\n    add_subdirectory(\"products/chromium\" \"chromium\")\nendif()\n\nif(SSG_PRODUCT_DEBIAN11)\n    add_subdirectory(\"products/debian11\" \"debian11\")\nendif()\nif(SSG_PRODUCT_DEBIAN12)\n    add_subdirectory(\"products/debian12\" \"debian12\")\nendif()\nif(SSG_PRODUCT_EXAMPLE)\n    add_subdirectory(\"products/example\" \"example\")\nendif()\nif(SSG_PRODUCT_EKS)\n    add_subdirectory(\"products/eks\" \"eks\")\nendif()\nif(SSG_PRODUCT_FEDORA)\n    add_subdirectory(\"products/fedora\" \"fedora\")\nendif()\nif(SSG_PRODUCT_FIREFOX)\n    add_subdirectory(\"products/firefox\" \"firefox\")\nendif()\nif(SSG_PRODUCT_MACOS1015)\n    add_subdirectory(\"products/macos1015\" \"macos1015\")\nendif()\nif(SSG_PRODUCT_KYLINSERVER10)\n    add_subdirectory(\"products/kylinserver10\" \"kylinserver10\")\nendif()\nif(SSG_PRODUCT_OCP4)\n    add_subdirectory(\"products/ocp4\" \"ocp4\")\nendif()\nif(SSG_PRODUCT_RHCOS4)\n    add_subdirectory(\"products/rhcos4\" \"rhcos4\")\nendif()\nif(SSG_PRODUCT_OL7)\n    add_subdirectory(\"products/ol7\" \"ol7\")\nendif()\nif(SSG_PRODUCT_OL8)\n    add_subdirectory(\"products/ol8\" \"ol8\")\nendif()\nif(SSG_PRODUCT_OL9)\n    add_subdirectory(\"products/ol9\" \"ol9\")\nendif()\nif(SSG_PRODUCT_OL10)\n    add_subdirectory(\"products/ol10\" \"ol10\")\nendif()\nif(SSG_PRODUCT_OPENEULER2203)\n    add_subdirectory(\"products/openeuler2203\" \"openeuler2203\")\nendif()\nif(SSG_PRODUCT_OPENSUSE)\n    add_subdirectory(\"products/opensuse\" \"opensuse\")\nendif()\nif(SSG_PRODUCT_RHEL8)\n    add_subdirectory(\"products/rhel8\" \"rhel8\")\nendif()\nif(SSG_PRODUCT_RHEL9)\n    add_subdirectory(\"products/rhel9\" \"rhel9\")\nendif()\nif(SSG_PRODUCT_RHEL10)\n    add_subdirectory(\"products/rhel10\" \"rhel10\")\nendif()\nif(SSG_PRODUCT_RHV4)\n    add_subdirectory(\"products/rhv4\" \"rhv4\")\nendif()\nif(SSG_PRODUCT_SLE12)\n    add_subdirectory(\"products/sle12\" \"sle12\")\nendif()\nif(SSG_PRODUCT_SLE15)\n    add_subdirectory(\"products/sle15\" \"sle15\")\nendif()\nif(SSG_PRODUCT_SLMICRO5)\n    add_subdirectory(\"products/slmicro5\" \"slmicro5\")\nendif()\nif(SSG_PRODUCT_UBUNTU1604)\n    add_subdirectory(\"products/ubuntu1604\" \"ubuntu1604\")\nendif()\nif(SSG_PRODUCT_UBUNTU1804)\n    add_subdirectory(\"products/ubuntu1804\" \"ubuntu1804\")\nendif()\nif(SSG_PRODUCT_UBUNTU2004)\n    add_subdirectory(\"products/ubuntu2004\" \"ubuntu2004\")\nendif()\nif(SSG_PRODUCT_UBUNTU2204)\n    add_subdirectory(\"products/ubuntu2204\" \"ubuntu2204\")\nendif()\nif(SSG_PRODUCT_UBUNTU2404)\n    add_subdirectory(\"products/ubuntu2404\" \"ubuntu2404\")\nendif()\nif(SSG_PRODUCT_OPENEMBEDDED)\n    add_subdirectory(\"products/openembedded\" \"openembedded\")\nendif()\n\n# ZIP only contains source datastreams and kickstarts.\n# People who want sources to build from should get the tarball instead.\nssg_build_zipfile(\"scap-security-guide-${SSG_VERSION}\")\n\nssg_define_guide_and_table_tests()\n\ninstall(FILES \"${CMAKE_SOURCE_DIR}/LICENSE\"\n    DESTINATION ${CMAKE_INSTALL_DOCDIR})\ninstall(FILES \"${CMAKE_SOURCE_DIR}/README.md\"\n    DESTINATION ${CMAKE_INSTALL_DOCDIR})\ninstall(FILES \"${CMAKE_SOURCE_DIR}/Contributors.md\"\n    DESTINATION ${CMAKE_INSTALL_DOCDIR})\n\ninstall(FILES \"${CMAKE_BINARY_DIR}/scap-security-guide.8\"\n    DESTINATION \"${CMAKE_INSTALL_MANDIR}/man8\")\n\n# We use CPack to generate the tarball with all sources and packages for testing.\n# Only CPack should follow.\nset(CPACK_CMAKE_GENERATOR \"Unix Makefiles\")\nset(CPACK_SOURCE_GENERATOR \"TBZ2\")\nset(CPACK_SOURCE_PACKAGE_FILE_NAME \"scap-security-guide-${SSG_VERSION}\" CACHE INTERNAL \"tarball basename\")\nset(CPACK_SOURCE_IGNORE_FILES\n\"\\\\\\\\.git.*\"\n\"\\\\\\\\.pyc\"\n\"__pycache__\"\n\n\"build/\"\n\"~$\"\n\n\"\\\\\\\\CMakeLists.txt.user\"\n)\n# Common definitions for RPM and DEB packages\nset(CPACK_PACKAGE_VERSION ${SSG_VERSION})\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"Security guidance and baselines in SCAP formats\")\nset(CPACK_PACKAGE_VENDOR \"scap-security-guide\")\n# The package contact is needed to build the deb package\nset(CPACK_PACKAGE_CONTACT \"open-scap-list@redhat.com\")\nset(CPACK_PACKAGE_RELOCATABLE FALSE)\n\n# This adds \"${?dist} to Release field in spec file\nset(CPACK_RPM_PACKAGE_RELEASE \"1%{?dist}\")\nset(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION \"/usr/share/xml;/usr/share/man;/usr/share/man/man8\")\nset(CPACK_RPM_PACKAGE_GROUP \"Applications/System\")\nset(CPACK_RPM_PACKAGE_LICENSE \"BSD-3-Clause\")\nset(CPACK_RPM_PACKAGE_URL \"https://www.open-scap.org/security-policies/scap-security-guide/\")\nset(CPACK_RPM_PACKAGE_ARCHITECTURE \"noarch\")\nset(CPACK_RPM_PACKAGE_REQUIRES \"xml-common, openscap-utils >= 1.0.8\")\nset(CPACK_RPM_PACKAGE_PROVIDES \"openscap-content\")\nset(CPACK_RPM_PACKAGE_DESCRIPTION \"The %{name} project provides a guide for configuration of the\nsystem from the final system's security point of view. The guidance is\nspecified in the Security Content Automation Protocol (SCAP) format and\nconstitutes a catalog of practical hardening advice, linked to government\nrequirements where applicable. The project bridges the gap between generalized\npolicy requirements and specific implementation guidelines. The system\nadministrator can use the oscap command-line tool from the openscap-utils\npackage to verify that the system conforms to provided guidelines.\nThe %{name} package also contains HTML formatted documents containing\nhardening guidances that have been generated from XCCDF benchmarks.\n\")\n\n# Change the default file name of the RPMs.\n# %{release} includes release number and dist type.\n# This only has effect with cmake v3.6 or higher.\nset(CPACK_RPM_FILE_NAME \"%{name}-%{version}-%{release}.rpm\")\n# For older versions of cmake (e.g. v2.8) file name is defined like below.\nset(CPACK_PACKAGE_FILE_NAME \"scap-security-guide-${SSG_VERSION}\")\nset(CPACK_PACKAGE_CHECKSUM SHA512)\nset(CPACK_GENERATOR \"RPM;DEB\")\ninclude(CPack)\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.8876953125,
          "content": "# Products\n\n/tests/data/product_stability/rhel*.yml @ComplianceAsCode/red-hatters\n/tests/data/product_stability/ol*.yml @ComplianceAsCode/oracle-maintainers\n/tests/data/product_stability/sle*.yml @ComplianceAsCode/suse-maintainers\n/tests/data/product_stability/ubuntu*.yml @ComplianceAsCode/ubuntu-maintainers\n\n# Product Specific Profiles\n\n/products/rhel*/profiles/ @ComplianceAsCode/red-hatters\n/products/ol*/profiles/ @ComplianceAsCode/oracle-maintainers\n/products/sle*/profiles/ @ComplianceAsCode/suse-maintainers\n/products/ubuntu*/profiles/ @ComplianceAsCode/ubuntu-maintainers\n\n# Product Specific Control Files\n\n/controls/cis_rhel8.yml @ComplianceAsCode/red-hatters\n/controls/cis_rhel9.yml @ComplianceAsCode/red-hatters\n/controls/cis_sle12.yml @ComplianceAsCode/suse-maintainers\n/controls/cis_sle15.yml @ComplianceAsCode/suse-maintainers\n/controls/cis_ubuntu2404.yml @ComplianceAsCode/ubuntu-maintainers\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.6748046875,
          "content": "ComplianceAsCode Contribution Guidelines\n===\n\nWe're so glad you're thinking about contributing to ComplianceAsCode! If you're unsure about\nanything, just ask -- or submit the issue or pull request to start the conversation! The worst that\ncould happen is you'll politely be asked to change something.\n\nWe want to ensure a welcoming environment for all members of the ComplianceAsCode community.\nReading the projects CONTRIBUTING policy (you are here), its\n[LICENSE](https://github.com/ComplianceAsCode/content/blob/master/LICENSE), and its\n[README](https://github.com/ComplianceAsCode/content/blob/master/README.md), will help you get\ncalibrated.\n\nIssues\n---\nBefore filing a new issue, search through existing issues to ensure a similar issue is not already reported. Sometimes there are similar issues with subtle differences or spanning different use cases, but essentially related to the same issue. If this is the case, we recommend expressing your support and including relevant information to existing issues.\n\nWhen creating an issue, please be detailed as possible without writing an essay! This makes the\nissue actionable. Ideally, issues with small tasks should be created to help others understand what\nneeds to be accomplished.\n\n\nPull Requests\n---\n\n### Contributor Information\n\nTwo-party review is needed for merging pull requests. This second set of eyes helps review the code\nfor functionality and style, and helps create a shared understanding of why certain things are\nmerged (or not!). Therefore, pull requests should not be merged by the author, with one exception:\ntypo fixes and small changes to textual data (only if it would not shift the meaning of the text).\nIf one of reviewers raises material objections to the pull request, those objections should be\naddressed before the merge.\n\nIdeally, pull request feedback should be addressed within 30 days. This helps us move the project\nforward and helps prevent the need for major rebasing of pull requests. If you are unable to work\nthrough the feedback within the 30 days, please let us know in the pull request to avoid it being\nclosed for no response. Even if your pull request is closed, worst case you'll need to re-open it\nupon your return (no code will be lost!).\n\nPull requests may be closed by a reviewer or maintainer for some of the following reasons:\n - The change would render the build system, a profile, or a tool broken.\n - The change is out-of-scope for the project.\n - The change does not meet the expectations of the public-private partnership.\n - There is no way to improve the pull request.\nPlease provide some justification and an explanation as part of the feedback.\n\nAs in any project, pull requests should pass continuous integration tests before merging. There are\ntimes when the continuous integration tests may error or fail. In this case, a reviewer can merge\nthe pull requests if they deem the failure unrelated to the pull request itself. Additionally,\nthere are certain types of pull requests (like changing `README.md`) that the continuous\nintegration tests do not evaluate that a reviewer might merge regardless of continuous integration\ntest status. In any case, generally most reviewers wait until everything passes before merging.\n\nIf possible, please create a set of small self-contained pull requests rather than a single\nmassive pull request. If a pull request consists of a sequence of well-defined steps, the best\napproach is to keep the *one step = one commit* approach.\n\nAvoid merge commits in pull requests - use `git rebase` to get rid of them. This helps us keep git\ntree clean and helps to make it easy to understand historical changes done in past commits.\n\n\n### Maintainer Information\n\nReviewers should pay attention to the following points:\n\nThe PR ...\n* ... has been approved by an SME of the area that the PR addresses, which indicates that it is generally a step in a right direction.\n* ... passes PR gating tests, or failing tests are waived in a comment by the reviewer explaining the reasoning.\n* ... adheres to the [coding style](docs/manual/developer/04_style_guide.md#complianceascode-style-guide).\n* ... has been tested. The following options allow for testing various aspects of the project:\n  * [Automatus](tests/README.md) for rule tests to ensure that OVAL checks are correct and test the ability of remediations to satisfy those checks.\n    Every testable rule that is newly created or that just got modified has to have at least one test scenario.\n    If a PR interacts with a testable rule without tests, the author shall supply a test scenario as part of the PR to get it merged.\n  * [BATS framework](tests/unit/bash) for bash tests that allows for fast and exhaustive testing of remediations that are parametrized by Jinja2.\n  * [Unit tests](tests/unit) that test components of the build system as well as components of the Automatus.\n  * Ad-hoc tests that are integrated into the `ctest` chain directly, i.e. the shellcheck test.\n* ... updates READMEs, man pages or other documentation when changes of described behavior are introduced.\n* ... doesn't contain merge commits - those can be removed by rebasing.\n* ... is rebased against recent-enough branch that executes the whole range of relevant integrated gating tests.\n* ... doesn't increase maintenance costs, and if it does, there is a substantial counterbalance.\n* ... doesn't prolong the build time in a significant way.\n\n\nContributing Content\n---\n\nIf you are considering contributing content to the project, thank you for your willingness to do so.\nThere are some guidelines and rules to consider when you are contributing content:\n\n1. There should only be 1 configuration change per XCCDF rule. This is to not only help us meet U.S. Government expectations, but it makes our content easier to use and tweak for the end users.\n1. Create variables when a configuration change can be multiple different values. For example if a rule says to \"create a 16 character password\", create a variable that by default is set to 16 and add other possible password lengths. This is not just to make the content more usable, but not everyone's computing environments require a 16 character password.\n1. It is always better to fix an issue in external upstream open source projects before contributing, fixing, or breaking content here. For example if the `gdm` rpm reports changed permissions when the `rpm_verify_permissions` rule runs, the fix needs to be provided in the `gdm` rpm not by changing or disabling the content. Another example of this is adding a configuration option like to `pam_faillock` and `pam_pwquality` to make it easy for centralized accounts to ignore local settings which may be governed by the centralized account management tool. Once the patches are merged in the upstream project, you should then open a new pull request in this project with the changes. Following this approach not only ensures that it is easier for others to securely configure their systems, but it makes other upstream projects better and easier to use.\n1. Ask before you disable or remove content because you feel that they are not security relevant. They might actually be security relevant in ways that you might not realize. This way we all learn something.\n1. Products or content that have been previously retired should stay retired unless there is a heavy commitment to support that content.\n1. While this is an open source project, contributing content from projects (e.g. Webmin) that have been taken over by a hacker is a no-go. Not only can you or the project not guarantee that that project is truly cleaned up, but doing so diminishes the trust and provenance of this project.\n1. Both DISA and NSA have said CentOS does not meet the expectations of U.S. Government security requirements. Therefore, there are no government profiles for CentOS, and they are not supported by this project whether through development or contributions. This clearly angers some, but good cyber practices and compliance are practiced and expected by this project.\n1. Changes related to one product or profile shouldn't change behavior for other products or profiles unless the nature of the change affects multiple products or profiles.\n1. If you are able and have time, prevent duplication of code. Use Jinja macros and [check (remediation) templates](/docs/manual/developer_guide.adoc#732-list-of-available-templates).\n1. When developing Python scripts, follow the indentation style. For Python code, follow [PEP8](https://www.python.org/dev/peps/pep-0008/).\n\nMore details can be found in our [style guide](/docs/manual/developer/04_style_guide.md).\n\nAnd as always, you can view the docs at [https://complianceascode.readthedocs.io/](https://complianceascode.readthedocs.io/),\nor if you do not have internet access, the docs can be viewed at [Developer Guide](/docs/manual/developer_guide.adoc).\n\nEnjoy!\n"
        },
        {
          "name": "Contributors.md",
          "type": "blob",
          "size": 12.7294921875,
          "content": "<!---This file is generated using the contributors.py script. DO NOT MANUALLY EDIT!!!!\nLast Modified: 2024-11-05 16:58 UTC\n--->\n\nThe following people have contributed to the SCAP Security Guide project\n(listed in alphabetical order):\n\n* Frank J Cameron (CAM1244) <cameron@ctc.com>\n* 0x66656c6978 <0x66656c6978@users.noreply.github.com>\n* Håvard F. Aasen <havard.f.aasen@pfft.no>\n* Armando Acosta <armando.acosta@oracle.com>\n* Jack Adolph <jack.adolph@gmail.com>\n* Edgar Aguilar <edgar.aguilar@oracle.com>\n* akuster <akuster808@gmail.com>\n* Gabe Alford <redhatrises@gmail.com>\n* Firas AlShafei <firas.alshafei@us.abb.com>\n* Rodrigo Alvares <ralvares@redhat.com>\n* Christopher Anderson <cba@fedoraproject.org>\n* Craig Andrews <candrews@integralblue.com>\n* angystardust <angystardust@users.noreply.github.com>\n* anivan-suse <anastasija.ivanovic@suse.com>\n* anixon-rh <55244503+anixon-rh@users.noreply.github.com>\n* Steve Arnold <sarnold@vctlabs.com>\n* Ikko Ashimine <eltociear@gmail.com>\n* Chuck Atkins <chuck.atkins@kitware.com>\n* Bharath B <bhb@redhat.com>\n* Ryan Ballanger <root@rballang-admin-2.fastenal.com>\n* Alex Baranowski <alex@euro-linux.com>\n* Eduardo Barretto <eduardo.barretto@canonical.com>\n* Paul Bastide <pbastide@us.ibm.com>\n* Molly Jo Bault <Molly.Jo.Bault@ballardtech.com>\n* Andrew Becker <A-Beck@users.noreply.github.com>\n* Gabriel Becker <ggasparb@redhat.com>\n* BenGui <benoit.guillon1@etu.unilim.fr>\n* Alexander Bergmann <abergmann@suse.com>\n* Eric Berry <eric.berry@canonical.com>\n* Dale Bewley <dale@bewley.net>\n* Jose Luis BG <bgjoseluis@gmail.com>\n* binyanling <binyanling@uniontech.com>\n* Joseph Bisch <joseph.bisch@gmail.com>\n* Jeff Blank <blank@eclipse.ncsc.mil>\n* Olivier Bonhomme <ptitoliv@ptitoliv.net>\n* Lance Bragstad <lbragstad@gmail.com>\n* Ted Brunell <tbrunell@redhat.com>\n* Marcus Burghardt <maburgha@redhat.com>\n* Matthew Burket <mburket@redhat.com>\n* Blake Burkhart <blake.burkhart@us.af.mil>\n* Patrick Callahan <pmc@patrickcallahan.com>\n* George Campbell <gcampbell@palantir.com>\n* Nick Carboni <ncarboni@redhat.com>\n* Carlos <64919342+carlosmmatos@users.noreply.github.com>\n* James Cassell <james.cassell@ll.mit.edu>\n* Frank Caviggia <fcaviggia@users.noreply.github.com>\n* Eric Christensen <echriste@redhat.com>\n* Dan Clark <danclark@redhat.com>\n* Jayson Cofell <1051437+70k10@users.noreply.github.com>\n* David du Colombier <djc@datadoghq.com>\n* Commandcracker <lukas.fricke.dev@gmail.com>\n* Caleb Cooper <coopercd@ornl.gov>\n* CoreyCook8 <129206271+CoreyCook8@users.noreply.github.com>\n* cortesana <acortes@redhat.com>\n* Richard Maciel Costa <richard.maciel.costa@canonical.com>\n* Xavier Coulon <xavier.coulon@suse.com>\n* Deric Crago <deric.crago@gmail.com>\n* crleekwc <crleekwc@gmail.com>\n* cueball23 <christoph.alms@westnetz.de>\n* cyarbrough76 <42849651+cyarbrough76@users.noreply.github.com>\n* Maura Dailey <maura@eclipse.ncsc.mil>\n* Klaas Demter <demter@atix.de>\n* denknorr <dennis.knorr@suse.com>\n* dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\n* dhanushkar-wso2 <dhanushkar@wso2.com>\n* Andrew DiPrinzio <andrew.diprinzio@jhuapl.edu>\n* dom <dominique.blaze@devinci.fr>\n* Jean-Baptiste Donnette <jean-baptiste.donnette@epita.fr>\n* Marco De Donno <mdedonno1337@gmail.com>\n* dperrone <dperrone@redhat.com>\n* drax <applezip@gmail.com>\n* Sebastian Dunne <sdunne@redhat.com>\n* François Duthilleul <francoisduthilleul@gmail.com>\n* Greg Elin <gregelin@gitmachines.com>\n* eradot4027 <jrtonmac@gmail.com>\n* ermeratos <manuel.ermer@eviden.net>\n* Alexis Facques <alexis.facques@mythalesgroup.io>\n* Henry Finucane <hfinucane@zscaler.com>\n* Leah Fisher <lfisher047@gmail.com>\n* Marco Fortina <marco_fortina@hotmail.it>\n* Yavor Georgiev <strandjata@gmail.com>\n* Alijohn Ghassemlouei <alijohn@secureagc.com>\n* Swarup Ghosh <swghosh@redhat.com>\n* ghylock <ghylock@gmail.com>\n* Andrew Gilmore <agilmore2@gmail.com>\n* Joshua Glemza <jglemza@nasa.gov>\n* Nick Gompper <forestgomp@yahoo.com>\n* David Fernandez Gonzalez <david.fernandezgonzalez@canonical.com>\n* Loren Gordon <lorengordon@users.noreply.github.com>\n* Gene Gotimer <otherdevopsgene@portinfo.com>\n* Patrik Greco <sikevux@sikevux.se>\n* Steve Grubb <sgrubb@redhat.com>\n* guangyee <gyee@suse.com>\n* Christian Hagenest <christian.hagenest@suse.com>\n* Marek Haicman <mhaicman@redhat.com>\n* Vern Hart <vern.hart@canonical.com>\n* Alex Haydock <alex@alexhaydock.co.uk>\n* Rebekah Hayes <rhayes@corp.rivierautilities.com>\n* Trey Henefield <thenefield@gmail.com>\n* Henning Henkel <henning.henkel@helvetia.ch>\n* hex2a <hex2a@users.noreply.github.com>\n* hipponix <mirco.santori@gmail.com>\n* John Hooks <jhooks@starscream.pa.jhbcomputers.com>\n* Jakub Hrozek <jhrozek@redhat.com>\n* Donald Hunter <donald.hunter@gmail.com>\n* De Huo <De.Huo@windriver.com>\n* Robin Price II <robin@redhat.com>\n* Yasir Imam <yimam@redhat.com>\n* Jiri Jaburek <jjaburek@redhat.com>\n* Keith Jackson <keithkjackson@gmail.com>\n* Marc Jadoul <mgjadoul@laptomatic.auth-o-matic.corp>\n* Jeremiah Jahn <jeremiah@goodinassociates.com>\n* Jakub Jelen <jjelen@redhat.com>\n* Jessicahfy <Jessicahfy@users.noreply.github.com>\n* Stephan Joerrens <Stephan.Joerrens@fiduciagad.de>\n* Hunter Jones <hjones2199@gmail.com>\n* Jono <jono@ubuntu-18.localdomain>\n* justchris1 <justchris1@justchris1.email>\n* Kacper <kacper@kacper.se>\n* Kai Kang <kai.kang@windriver.com>\n* Charles Kernstock <charles.kernstock@ultra-ats.com>\n* Yuli Khodorkovskiy <ykhodorkovskiy@tresys.com>\n* Sherine Khoury <skhoury@redhat.com>\n* Nathan Kinder <nkinder@redhat.com>\n* Lee Kinser <lee.kinser@gmail.com>\n* Evgeny Kolesnikov <ekolesni@redhat.com>\n* Peter 'Pessoft' Kolínek <github@pessoft.com>\n* Luke Kordell <luke.t.kordell@lmco.com>\n* Malte Kraus <malte.kraus@suse.com>\n* Seth Kress <seth.kress@dsainc.com>\n* Felix Krohn <felix.krohn@helvetia.ch>\n* kspargur <kspargur@kspargur.csb>\n* Amit Kumar <amitkuma@redhat.com>\n* Fen Labalme <fen@civicactions.com>\n* Dexter Le <dexter.le@sap.com>\n* Ade Lee <alee@redhat.com>\n* Christopher Lee <Crleekwc@gmail.com>\n* Ian Lee <lee1001@llnl.gov>\n* Jarrett Lee <jarrettl@umd.edu>\n* Joseph Lenox <joseph.lenox@collins.com>\n* lichtblaugue <guenther.lichtblau@eviden.com>\n* Jan Lieskovsky <jlieskov@redhat.com>\n* Markus Linnala <Markus.Linnala@knowit.fi>\n* Flos Lonicerae <lonicerae@gmail.com>\n* Simon Lukasik <slukasik@redhat.com>\n* Milan Lysonek <mlysonek@redhat.com>\n* Fredrik Lysén <fredrik@pipemore.se>\n* Mab879 <207087+Mab879@users.noreply.github.com>\n* Mackemania <8738793+Mackemania@users.noreply.github.com>\n* Caitlin Macleod <caitelatte@gmail.com>\n* Dmitry Makovey <dmakovey@yahoo.com>\n* Nick Maludy <nmaludy@gmail.com>\n* Lokesh Mandvekar <lsm5@fedoraproject.org>\n* Matus Marhefka <mmarhefk@redhat.com>\n* Jamie Lorwey Martin <jlmartin@redhat.com>\n* Carlos Matos <cmatos@redhat.com>\n* Robert McAllister <rmcallis@redhat.com>\n* Karen McCarron <kmccarro@redhat.com>\n* Michael McConachie <michael@redhat.com>\n* Marcus Meissner <meissner@suse.de>\n* Khary Mendez <kmendez@redhat.com>\n* Rodney Mercer <rmercer@harris.com>\n* Matt Micene <nzwulfin@gmail.com>\n* Brian Millett <bmillett@gmail.com>\n* Takuya Mishina <tmishina@jp.ibm.com>\n* Mixer9 <35545791+Mixer9@users.noreply.github.com>\n* mmosel <mmosel@kde.example.com>\n* Thomas Montague <montague.thomas@gmail.com>\n* Zbynek Moravec <zmoravec@redhat.com>\n* Kazuo Moriwaka <moriwaka@users.noreply.github.com>\n* Michael Moseley <michael@eclipse.ncsc.mil>\n* Nathan Moyer <nmoyer@spectric.com>\n* Ross Murphy <RossMurphy@ibm.com>\n* Renaud Métrich <rmetrich@redhat.com>\n* Joe Nall <joe@nall.com>\n* namoyer10 <48189779+namoyer10@users.noreply.github.com>\n* Neiloy <neiloy@redhat.com>\n* Axel Nennker <axel@nennker.de>\n* Michele Newman <mnewman@redhat.com>\n* nnerdmann <128606223+nnerdmann@users.noreply.github.com>\n* Sean O'Keeffe <seanokeeffe797@gmail.com>\n* Jiri Odehnal <jodehnal@redhat.com>\n* Ilya Okomin <ilya.okomin@oracle.com>\n* Kaustubh Padegaonkar <theTuxRacer@gmail.com>\n* Michael Palmiotto <mpalmiotto@tresys.com>\n* Eryx Paredes <eryxp@lyft.com>\n* Max R.D. Parmer <maxp@trystero.is>\n* Arnaud Patard <apatard@hupstream.com>\n* Jan Pazdziora <jpazdziora@redhat.com>\n* pcactr <paul.c.arnold4.ctr@mail.mil>\n* Kenneth Peeples <kennethwpeeples@gmail.com>\n* Nathan Peters <Nathaniel.Peters@ca.com>\n* Frank Lin PIAT <fpiat@klabs.be>\n* Stefan Pietsch <mail.ipv4v6+gh@gmail.com>\n* piggyvenus <piggyvenus@gmail.com>\n* Vojtech Polasek <vpolasek@redhat.com>\n* Orion Poplawski <orion@nwra.com>\n* Jennifer Power <barnabei.jennifer@gmail.com>\n* Nick Poyant <npoyant@redhat.com>\n* Martin Preisler <mpreisle@redhat.com>\n* Wesley Ceraso Prudencio <wcerasop@redhat.com>\n* Raphael Sanchez Prudencio <rsprudencio@redhat.com>\n* Miha Purg <miha.purg@canonical.com>\n* T.O. Radzy Radzykewycz <radzy@windriver.com>\n* rain-Qing <yangyuqing6@qq.com>\n* Kenyon Ralph <kenyon@kenyonralph.com>\n* Mike Ralph <mralph@redhat.com>\n* Federico Ramirez <federico.r.ramirez@oracle.com>\n* rchikov <rumen.chikov@suse.com>\n* Rick Renshaw <Richard_Renshaw@xtoenergy.com>\n* Paul Rensing <prensing@cimetrics.com>\n* Chris Reynolds <c.reynolds82@gmail.com>\n* rhayes <rhayes@rivierautilities.com>\n* Pat Riehecky <riehecky@fnal.gov>\n* rlucente-se-jboss <rlucente@redhat.com>\n* Juan Antonio Osorio Robles <juan.osoriorobles@eu.equinix.com>\n* Paul Roche <paul.roche@menlosecurity.com>\n* Jan Rodak <hony.com@seznam.cz>\n* Matt Rogers <mrogers@redhat.com>\n* Jesse Roland <jesse.roland@onyxpoint.com>\n* Joshua Roys <roysjosh@gmail.com>\n* rrenshaw <bofh69@yahoo.com>\n* Chris Ruffalo <chris.ruffalo@gmail.com>\n* Benjamin Ruland <benjamin.ruland@gmail.com>\n* rumch-se <77793453+rumch-se@users.noreply.github.com>\n* Rutvik <rutksh@gmail.com>\n* Ray Shaw (Cont ARL/CISD) rvshaw <rvshaw@esme.arl.army.mil>\n* Nicolas SAID <nicolas.said@atos.net>\n* Earl Sampson <ESampson@suse.com>\n* sampsone <esampson@suse.com>\n* Mirco Santori <mirco.santori@roche.com>\n* Willy Santos <wsantos@redhat.com>\n* Nagarjuna Sarvepalli <snagarju@redhat.com>\n* Anderson Sasaki <33833274+ansasaki@users.noreply.github.com>\n* Gautam Satish <gautams@hpe.com>\n* Watson Sato <wsato@redhat.com>\n* Satoru SATOH <satoru.satoh@gmail.com>\n* Alexander Scheel <alexander.m.scheel@gmail.com>\n* Bryan Schneiders <pschneiders@trisept.com>\n* Robert Schweikert <rjschwei@suse.com>\n* shaneboulden <shane.boulden@gmail.com>\n* Vincent Shen <wenshen@redhat.com>\n* Dhriti Shikhar <dhriti.shikhar.rokz@gmail.com>\n* Spencer Shimko <sshimko@tresys.com>\n* Mark Shoger <mshoger@redhat.com>\n* Shane Siebken <shane.siebken@capellaspace.com>\n* THOBY Simon <Simon.THOBY@viveris.fr>\n* Thomas Sjögren <konstruktoid@users.noreply.github.com>\n* Jindrich Skacel <102800748+jskacel@users.noreply.github.com>\n* Alexandre Skrzyniarz <alexandre.skrzyniarz@laposte.net>\n* Francisco Slavin <fslavin@tresys.com>\n* sluetze <13255307+sluetze@users.noreply.github.com>\n* Dave Smith <dsmith@eclipse.ncsc.mil>\n* David Smith <dsmith@fornax.eclipse.ncsc.mil>\n* Kevin Spargur <kspargur@redhat.com>\n* Kenneth Stailey <kstailey.lists@gmail.com>\n* Leland Steinke <leland.j.steinke.ctr@mail.mil>\n* Justin Stephenson <jstephen@redhat.com>\n* steven.y.gui <steven_ygui@163.com>\n* Brian Stinson <brian@bstinson.com>\n* Jake Stookey <jakestookey@gmail.com>\n* Jonathan Sturges <jsturges@redhat.com>\n* svet-se <svetlin.boychev@suse.com>\n* teacup-on-rockingchair <315160+teacup-on-rockingchair@users.noreply.github.com>\n* Ian Tewksbury <itewk@redhat.com>\n* Philippe Thierry <phil@reseau-libre.net>\n* Simon THOBY <git@nightmared.fr>\n* Derek Thurston <thegrit@gmail.com>\n* tianzhenjia <jiatianzhen@cmss.chinamobile.com>\n* Greg Tinsley <gtinsley@redhat.com>\n* Paul Tittle <ptittle@cmf.nrl.navy.mil>\n* tom <tom@localhost.localdomain>\n* tomas.hudik <tomas.hudik@embedit.cz>\n* Jeb Trayer <jeb.d.trayer@uscg.mil>\n* TrilokGeer <tgeer@redhat.com>\n* Viktors Trubovics <viktors.trubovics@suse.com>\n* Nico Truzzolino <nico.truzzolino@gmx.de>\n* Brian Turek <brian.turek@gmail.com>\n* Matěj Týč <matyc@redhat.com>\n* VadimDor <29509093+VadimDor@users.noreply.github.com>\n* Trevor Vaughan <tvaughan@onyxpoint.com>\n* vtrubovics <82443408+vtrubovics@users.noreply.github.com>\n* Samuel Warren <swarren@redhat.com>\n* wcushen <54533890+wcushen@users.noreply.github.com>\n* Shawn Wells <shawn@redhat.com>\n* Whidix <31294015+Whidix@users.noreply.github.com>\n* Daniel E. White <linuxdan@users.noreply.github.com>\n* Bernhard M. Wiedemann <bwiedemann@suse.de>\n* Roy Williams <roywilli@roywilli.redhat.com>\n* Willumpie <willumpie@xs4all.nl>\n* Rob Wilmoth <rwilmoth@redhat.com>\n* win97pro <win97pro@protonmail.com>\n* wqian <alan.moore@canonical.com>\n* Lucas Yamanishi <lucas.yamanishi@onyxpoint.com>\n* Xirui Yang <xirui.yang@oracle.com>\n* Yuqing Yang <yyq01323329@alibaba-inc.com>\n* yarunachalam <yarunachalam@suse.com>\n* Guang Yee <guang.yee@suse.com>\n* Achilleas John Yfantis <ayfantis@redhat.com>\n* YiLin.Li <YiLin.Li@linux.alibaba.com>\n* yunimoo <yunimoo@nekocake.cafe>\n* YuQing <yyq0391@163.com>\n* zhaoyun <zhaoyun@kylinos.cn>\n* Kevin Zimmerman <kevin.zimmerman@kitware.com>\n* Luigi Mario Zuccarelli <luzuccar@redhat.com>\n* Jan Černý <jcerny@redhat.com>\n* Michal Šrubař <msrubar@redhat.com>\n"
        },
        {
          "name": "Contributors.xml",
          "type": "blob",
          "size": 21.9326171875,
          "content": "<!--This file is generated using the contributors.py script. DO NOT MANUALLY EDIT!!!!\nLast Modified: 2024-11-05 16:58 UTC\n-->\n\n<text>\n<contributor>Frank J Cameron (CAM1244) &lt;cameron@ctc.com&gt;</contributor>\n<contributor>0x66656c6978 &lt;0x66656c6978@users.noreply.github.com&gt;</contributor>\n<contributor>Håvard F. Aasen &lt;havard.f.aasen@pfft.no&gt;</contributor>\n<contributor>Armando Acosta &lt;armando.acosta@oracle.com&gt;</contributor>\n<contributor>Jack Adolph &lt;jack.adolph@gmail.com&gt;</contributor>\n<contributor>Edgar Aguilar &lt;edgar.aguilar@oracle.com&gt;</contributor>\n<contributor>akuster &lt;akuster808@gmail.com&gt;</contributor>\n<contributor>Gabe Alford &lt;redhatrises@gmail.com&gt;</contributor>\n<contributor>Firas AlShafei &lt;firas.alshafei@us.abb.com&gt;</contributor>\n<contributor>Rodrigo Alvares &lt;ralvares@redhat.com&gt;</contributor>\n<contributor>Christopher Anderson &lt;cba@fedoraproject.org&gt;</contributor>\n<contributor>Craig Andrews &lt;candrews@integralblue.com&gt;</contributor>\n<contributor>angystardust &lt;angystardust@users.noreply.github.com&gt;</contributor>\n<contributor>anivan-suse &lt;anastasija.ivanovic@suse.com&gt;</contributor>\n<contributor>anixon-rh &lt;55244503+anixon-rh@users.noreply.github.com&gt;</contributor>\n<contributor>Steve Arnold &lt;sarnold@vctlabs.com&gt;</contributor>\n<contributor>Ikko Ashimine &lt;eltociear@gmail.com&gt;</contributor>\n<contributor>Chuck Atkins &lt;chuck.atkins@kitware.com&gt;</contributor>\n<contributor>Bharath B &lt;bhb@redhat.com&gt;</contributor>\n<contributor>Ryan Ballanger &lt;root@rballang-admin-2.fastenal.com&gt;</contributor>\n<contributor>Alex Baranowski &lt;alex@euro-linux.com&gt;</contributor>\n<contributor>Eduardo Barretto &lt;eduardo.barretto@canonical.com&gt;</contributor>\n<contributor>Paul Bastide &lt;pbastide@us.ibm.com&gt;</contributor>\n<contributor>Molly Jo Bault &lt;Molly.Jo.Bault@ballardtech.com&gt;</contributor>\n<contributor>Andrew Becker &lt;A-Beck@users.noreply.github.com&gt;</contributor>\n<contributor>Gabriel Becker &lt;ggasparb@redhat.com&gt;</contributor>\n<contributor>BenGui &lt;benoit.guillon1@etu.unilim.fr&gt;</contributor>\n<contributor>Alexander Bergmann &lt;abergmann@suse.com&gt;</contributor>\n<contributor>Eric Berry &lt;eric.berry@canonical.com&gt;</contributor>\n<contributor>Dale Bewley &lt;dale@bewley.net&gt;</contributor>\n<contributor>Jose Luis BG &lt;bgjoseluis@gmail.com&gt;</contributor>\n<contributor>binyanling &lt;binyanling@uniontech.com&gt;</contributor>\n<contributor>Joseph Bisch &lt;joseph.bisch@gmail.com&gt;</contributor>\n<contributor>Jeff Blank &lt;blank@eclipse.ncsc.mil&gt;</contributor>\n<contributor>Olivier Bonhomme &lt;ptitoliv@ptitoliv.net&gt;</contributor>\n<contributor>Lance Bragstad &lt;lbragstad@gmail.com&gt;</contributor>\n<contributor>Ted Brunell &lt;tbrunell@redhat.com&gt;</contributor>\n<contributor>Marcus Burghardt &lt;maburgha@redhat.com&gt;</contributor>\n<contributor>Matthew Burket &lt;mburket@redhat.com&gt;</contributor>\n<contributor>Blake Burkhart &lt;blake.burkhart@us.af.mil&gt;</contributor>\n<contributor>Patrick Callahan &lt;pmc@patrickcallahan.com&gt;</contributor>\n<contributor>George Campbell &lt;gcampbell@palantir.com&gt;</contributor>\n<contributor>Nick Carboni &lt;ncarboni@redhat.com&gt;</contributor>\n<contributor>Carlos &lt;64919342+carlosmmatos@users.noreply.github.com&gt;</contributor>\n<contributor>James Cassell &lt;james.cassell@ll.mit.edu&gt;</contributor>\n<contributor>Frank Caviggia &lt;fcaviggia@users.noreply.github.com&gt;</contributor>\n<contributor>Eric Christensen &lt;echriste@redhat.com&gt;</contributor>\n<contributor>Dan Clark &lt;danclark@redhat.com&gt;</contributor>\n<contributor>Jayson Cofell &lt;1051437+70k10@users.noreply.github.com&gt;</contributor>\n<contributor>David du Colombier &lt;djc@datadoghq.com&gt;</contributor>\n<contributor>Commandcracker &lt;lukas.fricke.dev@gmail.com&gt;</contributor>\n<contributor>Caleb Cooper &lt;coopercd@ornl.gov&gt;</contributor>\n<contributor>CoreyCook8 &lt;129206271+CoreyCook8@users.noreply.github.com&gt;</contributor>\n<contributor>cortesana &lt;acortes@redhat.com&gt;</contributor>\n<contributor>Richard Maciel Costa &lt;richard.maciel.costa@canonical.com&gt;</contributor>\n<contributor>Xavier Coulon &lt;xavier.coulon@suse.com&gt;</contributor>\n<contributor>Deric Crago &lt;deric.crago@gmail.com&gt;</contributor>\n<contributor>crleekwc &lt;crleekwc@gmail.com&gt;</contributor>\n<contributor>cueball23 &lt;christoph.alms@westnetz.de&gt;</contributor>\n<contributor>cyarbrough76 &lt;42849651+cyarbrough76@users.noreply.github.com&gt;</contributor>\n<contributor>Maura Dailey &lt;maura@eclipse.ncsc.mil&gt;</contributor>\n<contributor>Klaas Demter &lt;demter@atix.de&gt;</contributor>\n<contributor>denknorr &lt;dennis.knorr@suse.com&gt;</contributor>\n<contributor>dependabot[bot] &lt;49699333+dependabot[bot]@users.noreply.github.com&gt;</contributor>\n<contributor>dhanushkar-wso2 &lt;dhanushkar@wso2.com&gt;</contributor>\n<contributor>Andrew DiPrinzio &lt;andrew.diprinzio@jhuapl.edu&gt;</contributor>\n<contributor>dom &lt;dominique.blaze@devinci.fr&gt;</contributor>\n<contributor>Jean-Baptiste Donnette &lt;jean-baptiste.donnette@epita.fr&gt;</contributor>\n<contributor>Marco De Donno &lt;mdedonno1337@gmail.com&gt;</contributor>\n<contributor>dperrone &lt;dperrone@redhat.com&gt;</contributor>\n<contributor>drax &lt;applezip@gmail.com&gt;</contributor>\n<contributor>Sebastian Dunne &lt;sdunne@redhat.com&gt;</contributor>\n<contributor>François Duthilleul &lt;francoisduthilleul@gmail.com&gt;</contributor>\n<contributor>Greg Elin &lt;gregelin@gitmachines.com&gt;</contributor>\n<contributor>eradot4027 &lt;jrtonmac@gmail.com&gt;</contributor>\n<contributor>ermeratos &lt;manuel.ermer@eviden.net&gt;</contributor>\n<contributor>Alexis Facques &lt;alexis.facques@mythalesgroup.io&gt;</contributor>\n<contributor>Henry Finucane &lt;hfinucane@zscaler.com&gt;</contributor>\n<contributor>Leah Fisher &lt;lfisher047@gmail.com&gt;</contributor>\n<contributor>Marco Fortina &lt;marco_fortina@hotmail.it&gt;</contributor>\n<contributor>Yavor Georgiev &lt;strandjata@gmail.com&gt;</contributor>\n<contributor>Alijohn Ghassemlouei &lt;alijohn@secureagc.com&gt;</contributor>\n<contributor>Swarup Ghosh &lt;swghosh@redhat.com&gt;</contributor>\n<contributor>ghylock &lt;ghylock@gmail.com&gt;</contributor>\n<contributor>Andrew Gilmore &lt;agilmore2@gmail.com&gt;</contributor>\n<contributor>Joshua Glemza &lt;jglemza@nasa.gov&gt;</contributor>\n<contributor>Nick Gompper &lt;forestgomp@yahoo.com&gt;</contributor>\n<contributor>David Fernandez Gonzalez &lt;david.fernandezgonzalez@canonical.com&gt;</contributor>\n<contributor>Loren Gordon &lt;lorengordon@users.noreply.github.com&gt;</contributor>\n<contributor>Gene Gotimer &lt;otherdevopsgene@portinfo.com&gt;</contributor>\n<contributor>Patrik Greco &lt;sikevux@sikevux.se&gt;</contributor>\n<contributor>Steve Grubb &lt;sgrubb@redhat.com&gt;</contributor>\n<contributor>guangyee &lt;gyee@suse.com&gt;</contributor>\n<contributor>Christian Hagenest &lt;christian.hagenest@suse.com&gt;</contributor>\n<contributor>Marek Haicman &lt;mhaicman@redhat.com&gt;</contributor>\n<contributor>Vern Hart &lt;vern.hart@canonical.com&gt;</contributor>\n<contributor>Alex Haydock &lt;alex@alexhaydock.co.uk&gt;</contributor>\n<contributor>Rebekah Hayes &lt;rhayes@corp.rivierautilities.com&gt;</contributor>\n<contributor>Trey Henefield &lt;thenefield@gmail.com&gt;</contributor>\n<contributor>Henning Henkel &lt;henning.henkel@helvetia.ch&gt;</contributor>\n<contributor>hex2a &lt;hex2a@users.noreply.github.com&gt;</contributor>\n<contributor>hipponix &lt;mirco.santori@gmail.com&gt;</contributor>\n<contributor>John Hooks &lt;jhooks@starscream.pa.jhbcomputers.com&gt;</contributor>\n<contributor>Jakub Hrozek &lt;jhrozek@redhat.com&gt;</contributor>\n<contributor>Donald Hunter &lt;donald.hunter@gmail.com&gt;</contributor>\n<contributor>De Huo &lt;De.Huo@windriver.com&gt;</contributor>\n<contributor>Robin Price II &lt;robin@redhat.com&gt;</contributor>\n<contributor>Yasir Imam &lt;yimam@redhat.com&gt;</contributor>\n<contributor>Jiri Jaburek &lt;jjaburek@redhat.com&gt;</contributor>\n<contributor>Keith Jackson &lt;keithkjackson@gmail.com&gt;</contributor>\n<contributor>Marc Jadoul &lt;mgjadoul@laptomatic.auth-o-matic.corp&gt;</contributor>\n<contributor>Jeremiah Jahn &lt;jeremiah@goodinassociates.com&gt;</contributor>\n<contributor>Jakub Jelen &lt;jjelen@redhat.com&gt;</contributor>\n<contributor>Jessicahfy &lt;Jessicahfy@users.noreply.github.com&gt;</contributor>\n<contributor>Stephan Joerrens &lt;Stephan.Joerrens@fiduciagad.de&gt;</contributor>\n<contributor>Hunter Jones &lt;hjones2199@gmail.com&gt;</contributor>\n<contributor>Jono &lt;jono@ubuntu-18.localdomain&gt;</contributor>\n<contributor>justchris1 &lt;justchris1@justchris1.email&gt;</contributor>\n<contributor>Kacper &lt;kacper@kacper.se&gt;</contributor>\n<contributor>Kai Kang &lt;kai.kang@windriver.com&gt;</contributor>\n<contributor>Charles Kernstock &lt;charles.kernstock@ultra-ats.com&gt;</contributor>\n<contributor>Yuli Khodorkovskiy &lt;ykhodorkovskiy@tresys.com&gt;</contributor>\n<contributor>Sherine Khoury &lt;skhoury@redhat.com&gt;</contributor>\n<contributor>Nathan Kinder &lt;nkinder@redhat.com&gt;</contributor>\n<contributor>Lee Kinser &lt;lee.kinser@gmail.com&gt;</contributor>\n<contributor>Evgeny Kolesnikov &lt;ekolesni@redhat.com&gt;</contributor>\n<contributor>Peter 'Pessoft' Kolínek &lt;github@pessoft.com&gt;</contributor>\n<contributor>Luke Kordell &lt;luke.t.kordell@lmco.com&gt;</contributor>\n<contributor>Malte Kraus &lt;malte.kraus@suse.com&gt;</contributor>\n<contributor>Seth Kress &lt;seth.kress@dsainc.com&gt;</contributor>\n<contributor>Felix Krohn &lt;felix.krohn@helvetia.ch&gt;</contributor>\n<contributor>kspargur &lt;kspargur@kspargur.csb&gt;</contributor>\n<contributor>Amit Kumar &lt;amitkuma@redhat.com&gt;</contributor>\n<contributor>Fen Labalme &lt;fen@civicactions.com&gt;</contributor>\n<contributor>Dexter Le &lt;dexter.le@sap.com&gt;</contributor>\n<contributor>Ade Lee &lt;alee@redhat.com&gt;</contributor>\n<contributor>Christopher Lee &lt;Crleekwc@gmail.com&gt;</contributor>\n<contributor>Ian Lee &lt;lee1001@llnl.gov&gt;</contributor>\n<contributor>Jarrett Lee &lt;jarrettl@umd.edu&gt;</contributor>\n<contributor>Joseph Lenox &lt;joseph.lenox@collins.com&gt;</contributor>\n<contributor>lichtblaugue &lt;guenther.lichtblau@eviden.com&gt;</contributor>\n<contributor>Jan Lieskovsky &lt;jlieskov@redhat.com&gt;</contributor>\n<contributor>Markus Linnala &lt;Markus.Linnala@knowit.fi&gt;</contributor>\n<contributor>Flos Lonicerae &lt;lonicerae@gmail.com&gt;</contributor>\n<contributor>Simon Lukasik &lt;slukasik@redhat.com&gt;</contributor>\n<contributor>Milan Lysonek &lt;mlysonek@redhat.com&gt;</contributor>\n<contributor>Fredrik Lysén &lt;fredrik@pipemore.se&gt;</contributor>\n<contributor>Mab879 &lt;207087+Mab879@users.noreply.github.com&gt;</contributor>\n<contributor>Mackemania &lt;8738793+Mackemania@users.noreply.github.com&gt;</contributor>\n<contributor>Caitlin Macleod &lt;caitelatte@gmail.com&gt;</contributor>\n<contributor>Dmitry Makovey &lt;dmakovey@yahoo.com&gt;</contributor>\n<contributor>Nick Maludy &lt;nmaludy@gmail.com&gt;</contributor>\n<contributor>Lokesh Mandvekar &lt;lsm5@fedoraproject.org&gt;</contributor>\n<contributor>Matus Marhefka &lt;mmarhefk@redhat.com&gt;</contributor>\n<contributor>Jamie Lorwey Martin &lt;jlmartin@redhat.com&gt;</contributor>\n<contributor>Carlos Matos &lt;cmatos@redhat.com&gt;</contributor>\n<contributor>Robert McAllister &lt;rmcallis@redhat.com&gt;</contributor>\n<contributor>Karen McCarron &lt;kmccarro@redhat.com&gt;</contributor>\n<contributor>Michael McConachie &lt;michael@redhat.com&gt;</contributor>\n<contributor>Marcus Meissner &lt;meissner@suse.de&gt;</contributor>\n<contributor>Khary Mendez &lt;kmendez@redhat.com&gt;</contributor>\n<contributor>Rodney Mercer &lt;rmercer@harris.com&gt;</contributor>\n<contributor>Matt Micene &lt;nzwulfin@gmail.com&gt;</contributor>\n<contributor>Brian Millett &lt;bmillett@gmail.com&gt;</contributor>\n<contributor>Takuya Mishina &lt;tmishina@jp.ibm.com&gt;</contributor>\n<contributor>Mixer9 &lt;35545791+Mixer9@users.noreply.github.com&gt;</contributor>\n<contributor>mmosel &lt;mmosel@kde.example.com&gt;</contributor>\n<contributor>Thomas Montague &lt;montague.thomas@gmail.com&gt;</contributor>\n<contributor>Zbynek Moravec &lt;zmoravec@redhat.com&gt;</contributor>\n<contributor>Kazuo Moriwaka &lt;moriwaka@users.noreply.github.com&gt;</contributor>\n<contributor>Michael Moseley &lt;michael@eclipse.ncsc.mil&gt;</contributor>\n<contributor>Nathan Moyer &lt;nmoyer@spectric.com&gt;</contributor>\n<contributor>Ross Murphy &lt;RossMurphy@ibm.com&gt;</contributor>\n<contributor>Renaud Métrich &lt;rmetrich@redhat.com&gt;</contributor>\n<contributor>Joe Nall &lt;joe@nall.com&gt;</contributor>\n<contributor>namoyer10 &lt;48189779+namoyer10@users.noreply.github.com&gt;</contributor>\n<contributor>Neiloy &lt;neiloy@redhat.com&gt;</contributor>\n<contributor>Axel Nennker &lt;axel@nennker.de&gt;</contributor>\n<contributor>Michele Newman &lt;mnewman@redhat.com&gt;</contributor>\n<contributor>nnerdmann &lt;128606223+nnerdmann@users.noreply.github.com&gt;</contributor>\n<contributor>Sean O'Keeffe &lt;seanokeeffe797@gmail.com&gt;</contributor>\n<contributor>Jiri Odehnal &lt;jodehnal@redhat.com&gt;</contributor>\n<contributor>Ilya Okomin &lt;ilya.okomin@oracle.com&gt;</contributor>\n<contributor>Kaustubh Padegaonkar &lt;theTuxRacer@gmail.com&gt;</contributor>\n<contributor>Michael Palmiotto &lt;mpalmiotto@tresys.com&gt;</contributor>\n<contributor>Eryx Paredes &lt;eryxp@lyft.com&gt;</contributor>\n<contributor>Max R.D. Parmer &lt;maxp@trystero.is&gt;</contributor>\n<contributor>Arnaud Patard &lt;apatard@hupstream.com&gt;</contributor>\n<contributor>Jan Pazdziora &lt;jpazdziora@redhat.com&gt;</contributor>\n<contributor>pcactr &lt;paul.c.arnold4.ctr@mail.mil&gt;</contributor>\n<contributor>Kenneth Peeples &lt;kennethwpeeples@gmail.com&gt;</contributor>\n<contributor>Nathan Peters &lt;Nathaniel.Peters@ca.com&gt;</contributor>\n<contributor>Frank Lin PIAT &lt;fpiat@klabs.be&gt;</contributor>\n<contributor>Stefan Pietsch &lt;mail.ipv4v6+gh@gmail.com&gt;</contributor>\n<contributor>piggyvenus &lt;piggyvenus@gmail.com&gt;</contributor>\n<contributor>Vojtech Polasek &lt;vpolasek@redhat.com&gt;</contributor>\n<contributor>Orion Poplawski &lt;orion@nwra.com&gt;</contributor>\n<contributor>Jennifer Power &lt;barnabei.jennifer@gmail.com&gt;</contributor>\n<contributor>Nick Poyant &lt;npoyant@redhat.com&gt;</contributor>\n<contributor>Martin Preisler &lt;mpreisle@redhat.com&gt;</contributor>\n<contributor>Wesley Ceraso Prudencio &lt;wcerasop@redhat.com&gt;</contributor>\n<contributor>Raphael Sanchez Prudencio &lt;rsprudencio@redhat.com&gt;</contributor>\n<contributor>Miha Purg &lt;miha.purg@canonical.com&gt;</contributor>\n<contributor>T.O. Radzy Radzykewycz &lt;radzy@windriver.com&gt;</contributor>\n<contributor>rain-Qing &lt;yangyuqing6@qq.com&gt;</contributor>\n<contributor>Kenyon Ralph &lt;kenyon@kenyonralph.com&gt;</contributor>\n<contributor>Mike Ralph &lt;mralph@redhat.com&gt;</contributor>\n<contributor>Federico Ramirez &lt;federico.r.ramirez@oracle.com&gt;</contributor>\n<contributor>rchikov &lt;rumen.chikov@suse.com&gt;</contributor>\n<contributor>Rick Renshaw &lt;Richard_Renshaw@xtoenergy.com&gt;</contributor>\n<contributor>Paul Rensing &lt;prensing@cimetrics.com&gt;</contributor>\n<contributor>Chris Reynolds &lt;c.reynolds82@gmail.com&gt;</contributor>\n<contributor>rhayes &lt;rhayes@rivierautilities.com&gt;</contributor>\n<contributor>Pat Riehecky &lt;riehecky@fnal.gov&gt;</contributor>\n<contributor>rlucente-se-jboss &lt;rlucente@redhat.com&gt;</contributor>\n<contributor>Juan Antonio Osorio Robles &lt;juan.osoriorobles@eu.equinix.com&gt;</contributor>\n<contributor>Paul Roche &lt;paul.roche@menlosecurity.com&gt;</contributor>\n<contributor>Jan Rodak &lt;hony.com@seznam.cz&gt;</contributor>\n<contributor>Matt Rogers &lt;mrogers@redhat.com&gt;</contributor>\n<contributor>Jesse Roland &lt;jesse.roland@onyxpoint.com&gt;</contributor>\n<contributor>Joshua Roys &lt;roysjosh@gmail.com&gt;</contributor>\n<contributor>rrenshaw &lt;bofh69@yahoo.com&gt;</contributor>\n<contributor>Chris Ruffalo &lt;chris.ruffalo@gmail.com&gt;</contributor>\n<contributor>Benjamin Ruland &lt;benjamin.ruland@gmail.com&gt;</contributor>\n<contributor>rumch-se &lt;77793453+rumch-se@users.noreply.github.com&gt;</contributor>\n<contributor>Rutvik &lt;rutksh@gmail.com&gt;</contributor>\n<contributor>Ray Shaw (Cont ARL/CISD) rvshaw &lt;rvshaw@esme.arl.army.mil&gt;</contributor>\n<contributor>Nicolas SAID &lt;nicolas.said@atos.net&gt;</contributor>\n<contributor>Earl Sampson &lt;ESampson@suse.com&gt;</contributor>\n<contributor>sampsone &lt;esampson@suse.com&gt;</contributor>\n<contributor>Mirco Santori &lt;mirco.santori@roche.com&gt;</contributor>\n<contributor>Willy Santos &lt;wsantos@redhat.com&gt;</contributor>\n<contributor>Nagarjuna Sarvepalli &lt;snagarju@redhat.com&gt;</contributor>\n<contributor>Anderson Sasaki &lt;33833274+ansasaki@users.noreply.github.com&gt;</contributor>\n<contributor>Gautam Satish &lt;gautams@hpe.com&gt;</contributor>\n<contributor>Watson Sato &lt;wsato@redhat.com&gt;</contributor>\n<contributor>Satoru SATOH &lt;satoru.satoh@gmail.com&gt;</contributor>\n<contributor>Alexander Scheel &lt;alexander.m.scheel@gmail.com&gt;</contributor>\n<contributor>Bryan Schneiders &lt;pschneiders@trisept.com&gt;</contributor>\n<contributor>Robert Schweikert &lt;rjschwei@suse.com&gt;</contributor>\n<contributor>shaneboulden &lt;shane.boulden@gmail.com&gt;</contributor>\n<contributor>Vincent Shen &lt;wenshen@redhat.com&gt;</contributor>\n<contributor>Dhriti Shikhar &lt;dhriti.shikhar.rokz@gmail.com&gt;</contributor>\n<contributor>Spencer Shimko &lt;sshimko@tresys.com&gt;</contributor>\n<contributor>Mark Shoger &lt;mshoger@redhat.com&gt;</contributor>\n<contributor>Shane Siebken &lt;shane.siebken@capellaspace.com&gt;</contributor>\n<contributor>THOBY Simon &lt;Simon.THOBY@viveris.fr&gt;</contributor>\n<contributor>Thomas Sjögren &lt;konstruktoid@users.noreply.github.com&gt;</contributor>\n<contributor>Jindrich Skacel &lt;102800748+jskacel@users.noreply.github.com&gt;</contributor>\n<contributor>Alexandre Skrzyniarz &lt;alexandre.skrzyniarz@laposte.net&gt;</contributor>\n<contributor>Francisco Slavin &lt;fslavin@tresys.com&gt;</contributor>\n<contributor>sluetze &lt;13255307+sluetze@users.noreply.github.com&gt;</contributor>\n<contributor>Dave Smith &lt;dsmith@eclipse.ncsc.mil&gt;</contributor>\n<contributor>David Smith &lt;dsmith@fornax.eclipse.ncsc.mil&gt;</contributor>\n<contributor>Kevin Spargur &lt;kspargur@redhat.com&gt;</contributor>\n<contributor>Kenneth Stailey &lt;kstailey.lists@gmail.com&gt;</contributor>\n<contributor>Leland Steinke &lt;leland.j.steinke.ctr@mail.mil&gt;</contributor>\n<contributor>Justin Stephenson &lt;jstephen@redhat.com&gt;</contributor>\n<contributor>steven.y.gui &lt;steven_ygui@163.com&gt;</contributor>\n<contributor>Brian Stinson &lt;brian@bstinson.com&gt;</contributor>\n<contributor>Jake Stookey &lt;jakestookey@gmail.com&gt;</contributor>\n<contributor>Jonathan Sturges &lt;jsturges@redhat.com&gt;</contributor>\n<contributor>svet-se &lt;svetlin.boychev@suse.com&gt;</contributor>\n<contributor>teacup-on-rockingchair &lt;315160+teacup-on-rockingchair@users.noreply.github.com&gt;</contributor>\n<contributor>Ian Tewksbury &lt;itewk@redhat.com&gt;</contributor>\n<contributor>Philippe Thierry &lt;phil@reseau-libre.net&gt;</contributor>\n<contributor>Simon THOBY &lt;git@nightmared.fr&gt;</contributor>\n<contributor>Derek Thurston &lt;thegrit@gmail.com&gt;</contributor>\n<contributor>tianzhenjia &lt;jiatianzhen@cmss.chinamobile.com&gt;</contributor>\n<contributor>Greg Tinsley &lt;gtinsley@redhat.com&gt;</contributor>\n<contributor>Paul Tittle &lt;ptittle@cmf.nrl.navy.mil&gt;</contributor>\n<contributor>tom &lt;tom@localhost.localdomain&gt;</contributor>\n<contributor>tomas.hudik &lt;tomas.hudik@embedit.cz&gt;</contributor>\n<contributor>Jeb Trayer &lt;jeb.d.trayer@uscg.mil&gt;</contributor>\n<contributor>TrilokGeer &lt;tgeer@redhat.com&gt;</contributor>\n<contributor>Viktors Trubovics &lt;viktors.trubovics@suse.com&gt;</contributor>\n<contributor>Nico Truzzolino &lt;nico.truzzolino@gmx.de&gt;</contributor>\n<contributor>Brian Turek &lt;brian.turek@gmail.com&gt;</contributor>\n<contributor>Matěj Týč &lt;matyc@redhat.com&gt;</contributor>\n<contributor>VadimDor &lt;29509093+VadimDor@users.noreply.github.com&gt;</contributor>\n<contributor>Trevor Vaughan &lt;tvaughan@onyxpoint.com&gt;</contributor>\n<contributor>vtrubovics &lt;82443408+vtrubovics@users.noreply.github.com&gt;</contributor>\n<contributor>Samuel Warren &lt;swarren@redhat.com&gt;</contributor>\n<contributor>wcushen &lt;54533890+wcushen@users.noreply.github.com&gt;</contributor>\n<contributor>Shawn Wells &lt;shawn@redhat.com&gt;</contributor>\n<contributor>Whidix &lt;31294015+Whidix@users.noreply.github.com&gt;</contributor>\n<contributor>Daniel E. White &lt;linuxdan@users.noreply.github.com&gt;</contributor>\n<contributor>Bernhard M. Wiedemann &lt;bwiedemann@suse.de&gt;</contributor>\n<contributor>Roy Williams &lt;roywilli@roywilli.redhat.com&gt;</contributor>\n<contributor>Willumpie &lt;willumpie@xs4all.nl&gt;</contributor>\n<contributor>Rob Wilmoth &lt;rwilmoth@redhat.com&gt;</contributor>\n<contributor>win97pro &lt;win97pro@protonmail.com&gt;</contributor>\n<contributor>wqian &lt;alan.moore@canonical.com&gt;</contributor>\n<contributor>Lucas Yamanishi &lt;lucas.yamanishi@onyxpoint.com&gt;</contributor>\n<contributor>Xirui Yang &lt;xirui.yang@oracle.com&gt;</contributor>\n<contributor>Yuqing Yang &lt;yyq01323329@alibaba-inc.com&gt;</contributor>\n<contributor>yarunachalam &lt;yarunachalam@suse.com&gt;</contributor>\n<contributor>Guang Yee &lt;guang.yee@suse.com&gt;</contributor>\n<contributor>Achilleas John Yfantis &lt;ayfantis@redhat.com&gt;</contributor>\n<contributor>YiLin.Li &lt;YiLin.Li@linux.alibaba.com&gt;</contributor>\n<contributor>yunimoo &lt;yunimoo@nekocake.cafe&gt;</contributor>\n<contributor>YuQing &lt;yyq0391@163.com&gt;</contributor>\n<contributor>zhaoyun &lt;zhaoyun@kylinos.cn&gt;</contributor>\n<contributor>Kevin Zimmerman &lt;kevin.zimmerman@kitware.com&gt;</contributor>\n<contributor>Luigi Mario Zuccarelli &lt;luzuccar@redhat.com&gt;</contributor>\n<contributor>Jan Černý &lt;jcerny@redhat.com&gt;</contributor>\n<contributor>Michal Šrubař &lt;msrubar@redhat.com&gt;</contributor>\n</text>\n"
        },
        {
          "name": "DISCLAIMER",
          "type": "blob",
          "size": 0.953125,
          "content": "The upstream STIG for any STIG profile the SCAP Security Guide project is\ndeveloped under the DoD consensus model and DISA FSO Vendor STIG process,\nserving as the upstream development environment for Red Hat Product STIGS.\n\nAs a result of the upstream/downstream relationship between the SCAP Security\nGuide project and the official DISA FSO STIG baseline, users should expect\nvariance between SSG and DISA FSO content. For official DISA FSO STIG content,\nrefer to https://public.cyber.mil/stigs/.\n\nWhile this profile is packaged by Red Hat as part of the SCAP Security Guide\npackage, please note that commercial support of this SCAP content is NOT\navailable. This profile is provided as example SCAP content with no endorsement\nfor suitability or production readiness. Support for this profile is provided\nby the upstream SCAP Security Guide community on a best-effort basis. The\nupstream project homepage is https://www.open-scap.org/security-policies/scap-security-guide/.\n"
        },
        {
          "name": "Dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5166015625,
          "content": "SPDX license identifier: BSD-3-Clause\nCopyright (c) 2012-2017, Red Hat, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the Red Hat nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.103515625,
          "content": "# Welcome!\n\n[![Docs](https://img.shields.io/readthedocs/complianceascode)](https://complianceascode.readthedocs.io/en/latest/)\n[![Release](https://img.shields.io/github/release/ComplianceAsCode/content.svg)](https://github.com/ComplianceAsCode/content/releases/latest)\n[![Nightly ZIP Status](https://github.com/ComplianceAsCode/content/actions/workflows/nightly_build.yml/badge.svg)](https://nightly.link/ComplianceAsCode/content/workflows/nightly_build/master/Nightly%20Build.zip)\n[![Maintainability](https://api.codeclimate.com/v1/badges/62c1f8d8064b2163db3e/maintainability)](https://codeclimate.com/github/ComplianceAsCode/content/maintainability)\n[![Stats, Guides, Tables](https://github.com/ComplianceAsCode/content/actions/workflows/gh-pages.yaml/badge.svg)](https://complianceascode.github.io/content-pages/)\n[![Join the chat at https://gitter.im/Compliance-As-Code-The/content](https://badges.gitter.im/Compliance-As-Code-The/content.svg)](https://gitter.im/Compliance-As-Code-The/content?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/ComplianceAsCode/content)\n\n\nThe purpose of this project is to create *security policy content* for various\nplatforms &mdash; *Red Hat Enterprise Linux*, *Fedora*, *Ubuntu*, *Debian*, *SUSE Linux Enterprise Server (SLES)*,... &mdash;\nas well as products &mdash; *Firefox*, *Chromium*, ...\nWe aim to make it as easy as possible to write new and maintain existing\nsecurity content in all the commonly used formats.\n\n* [ComplianceAsCode Documentation](https://complianceascode.readthedocs.io/)\n* [ComplianceAsCode Blog](https://complianceascode.github.io/)\n* [Online Workshops](docs/workshop/README.adoc) - Perfect as a starting point\n* [Profiles in ComplianceAsCode](https://complianceascode.github.io/content-pages/guides/index.html) - online HTML guides for each profile\n\n\n## We build security content in various formats\n\n![NIST logo](docs/readme_images/nist_logo.svg \"NIST logo\") &nbsp; &nbsp; ![Ansible logo](docs/readme_images/ansible_logo.svg \"Ansible logo\") &nbsp; &nbsp; ![Bash logo](docs/readme_images/bash_logo.png \"Bash logo\")\n\n*\"SCAP content\"* refers to documents  in the *XCCDF*, *OVAL* and\n*SCAP source data stream* formats.  These documents can be presented\nin different forms and by different organizations to meet their security\nautomation and technical implementation needs.  For general use, we\nrecommend *SCAP source data streams* because they contain all the data you\nneed to evaluate and put machines into compliance. The data streams are\npart of our release ZIP archives.\n\n*\"Ansible content\"* refers to Ansible playbooks generated from security\nprofiles.  These can be used both in check-mode to evaluate compliance,\nas well as run-mode to put machines into compliance.  We publish these\non *Ansible Galaxy* as well as in release ZIP archives.\n\n*\"Bash fix files\"* refers to *Bash* scripts generated from security\nprofiles.  These are meant to be run on machines to put them into\ncompliance.  We recommend using other formats but understand that for\nsome deployment scenarios bash is the only option.\n\n### Why?\n\nWe want multiple organizations to be able to efficiently develop security\ncontent. By taking advantage of the powerful build system of this project,\nwe avoid as much redundancy as possible.\n\nThe build system combines the easy-to-edit YAML rule files with OVAL checks,\nAnsible task snippets, Bash fixes, and other files. Templating is provided\nat every step to avoid boilerplate. Security identifiers\n(CCE, NIST ID, STIG, ...) appear in all of our output formats but are all\nsourced from the YAML rule files.\n\nWe understand that depending on your organization's needs you may need\nto use a specific security content format. We let you choose.\n\n![Build system schema](docs/readme_images/build_schema.svg \"Build system schema\")\n\n---\nWe use an OpenControl-inspired YAML rule format for input. Write once and\ngenerate security content in XCCDF, Ansible, and others.\n\n```YAML\ntitle: 'Configure The Number of Allowed Simultaneous Requests'\n\ndescription: |-\n    The <tt>MaxKeepAliveRequests</tt> directive should be set and configured to\n    <sub idref=\"var_max_keepalive_requests\" /> or greater by setting the following\n    in <tt>/etc/httpd/conf/httpd.conf</tt>:\n    <pre>MaxKeepAliveRequests {{{ xccdf_value(\"var_max_keepalive_requests\") }}}</pre>\n\nrationale: |-\n    Resource exhaustion can occur when an unlimited number of concurrent requests\n    are allowed on a web site, facilitating a denial of service attack. Mitigating\n    this kind of attack will include limiting the number of concurrent HTTP/HTTPS\n    requests per IP address and may include, where feasible, limiting parameter\n    values associated with keepalive, (i.e., a parameter used to limit the amount of\n    time a connection may be inactive).\n\nseverity: medium\n\nidentifiers:\n    cce: \"80551-5\"\n```\n\n### Scan targets\n\nOur security content can be used to scan bare-metal machines, virtual machines,\nvirtual machine images (qcow2 and others), containers (including Docker), and\ncontainer images.\n\nWe use platform checks to detect whether we should or should not evaluate some\nof the rules. For example: separate partition checks make perfect sense on bare-metal\nmachines but go against recommended practices on containers.\n\n## Installation\n\n### From packages\n\nThe preferred method of installation is via the package manager of your\ndistribution. On *Red Hat Enterprise Linux* and *Fedora* you can use:\n\n```bash\nyum install scap-security-guide\n```\n\nOn Debian (sid), you can use:\n\n```bash\napt install ssg-debian  # for Debian guides\napt install ssg-debderived  # for Debian-based distributions (e.g. Ubuntu) guides\napt install ssg-nondebian  # for other distributions guides (RHEL, Fedora, etc.)\napt install ssg-applications  # for application-oriented guides (Firefox, JBoss, etc.)\n```\n\n### From release ZIP files\n\nDownload pre-built SSG zip archive from\n[the release page](https://github.com/ComplianceAsCode/content/releases/latest).\nEach zip file is an archive with ready-made SCAP source data streams.\n\n\n### From source\n\nIf ComplianceAsCode is not packaged in your distribution (it may be present there as `scap-security-guide` package), or if the\nversion that is packaged is too old, you need to build the content yourself\nand install it via `make install`. Please see the [Developer Guide](https://complianceascode.readthedocs.io/en/latest/manual/developer/02_building_complianceascode.html)\ndocument for more info. We also recommend opening an issue on that distributions\nbug tracker to voice interest.\n\n## Usage\n\nWe assume you have installed ComplianceAsCode system-wide into a\nstandard location from current upstream sources as instructed in the previous section.\n\nThere are several ways to consume ComplianceAsCode content, we will only\ngo through a few of them here.\n\n### `oscap` tool\n\nThe `oscap` tool is a low-level command line interface that comes from\nthe OpenSCAP project. It can be used to scan the local machine.\n\n```bash\noscap xccdf eval --profile xccdf_org.ssgproject.content_profile_ospp --results-arf arf.xml --report report.html --oval-results /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml\n```\n\n<a href=\"docs/readme_images/report_sample.png\"><img align=\"right\" width=\"250\" src=\"docs/readme_images/report_sample.png\" alt=\"Evaluation report sample\"></a>\n\nAfter evaluation, the `arf.xml` file will contain all results in a reusable\n*result data stream* (ARF) format, `report.html` will contain a human-readable\nreport that can be opened in a browser.\n\nReplace the profile with other profile of your choice, you can display\nall possible choices using:\n\n```bash\noscap info /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml\n```\n\nPlease see the [OpenSCAP](https://www.open-scap.org/) website for more information.\n\n### SCAP Workbench\n\nThe SCAP Workbench is a graphical user interface for SCAP evaluation and\ncustomization. It is suitable for scanning a single machine, either local\nor remote (via SSH). New versions of SCAP Workbench have SSG integration\nand will automatically offer it when the application is started.\n\nPlease see the [SCAP Workbench](https://www.open-scap.org/tools/scap-workbench/) website for more information.\n\n### `oscap-ssh` tool\n\n`oscap-ssh` comes bundled with OpenSCAP 1.2.3 and later. It allows scanning\na remote machine via SSH with an interface resembling the `oscap` tool.\n\nThe following command evaluates a machine with IP `192.168.1.123` with content\nstored on the local machine. Keep in mind that `oscap` has to be installed on the\nremote machine but the SSG content doesn't need to be.\n\n```bash\noscap-ssh root@192.168.1.123 22 xccdf eval --profile xccdf_org.ssgproject.content_profile_standard --results-arf arf.xml --report report.html /usr/share/xml/scap/ssg/content/ssg-fedora-ds.xml\n```\n\n### Ansible\n\nTo see a list of available Ansible Playbooks, run:\n\n```bash\nls /usr/share/scap-security-guide/ansible/\n```\n\nThese Ansible Playbooks are generated from *SCAP* profiles available for the products.\n\nTo apply the playbook on your local machine run:\n(*THIS WILL CHANGE CONFIGURATION OF THE MACHINE!*)\n\n```bash\nansible-playbook -i \"localhost,\" -c local /usr/share/scap-security-guide/ansible/rhel9-playbook-ospp.yml\n```\n\nEach of the Ansible Playbooks contains instructions on how to deploy them. Here\nis a snippet of the instructions:\n\n```YAML\n...\n# This file was generated by OpenSCAP 1.2.16 using:\n#   $ oscap xccdf generate fix --profile rht-ccp --fix-type ansible sds.xml\n#\n# This script is generated from an OpenSCAP profile without preliminary evaluation.\n# It attempts to fix every selected rule, even if the system is already compliant.\n#\n# How to apply this remediation role:\n# $ ansible-playbook -i \"192.168.1.155,\" playbook.yml\n# $ ansible-playbook -i inventory.ini playbook.yml\n...\n```\n\n### Bash\nTo see a list of available Bash scripts, run:\n\n```bash\n# ls /usr/share/scap-security-guide/bash/\n...\nrhel8-script-hipaa.sh\nrhel8-script-ospp.sh\nrhel8-script-pci-dss.sh\n...\n```\n\nThese Bash scripts are generated from *SCAP* profiles available for the products.\nSimilar to Ansible Playbooks, each of the Bash scripts contain instructions on how to deploy them.\n\n## Support\n\nThe SSG mailing list can be found at [https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide](https://lists.fedorahosted.org/mailman/listinfo/scap-security-guide).\n\nIf you encounter issues with OpenSCAP or SCAP Workbench, use [https://www.redhat.com/mailman/listinfo/open-scap-list](https://www.redhat.com/mailman/listinfo/open-scap-list)\n\nIf you prefer more interactive contact with the community, you can join us on Gitter and IRC:\n- Gitter: https://gitter.im/Compliance-As-Code-The/content\n- IRC: join the `#openscap` IRC channel on `libera.chat`.\n\n## A little bit of history\n\nThis project started in 2011 as a collaboration between United States Government agencies and commercial operating system vendors.\nThe original name was SCAP Security Guide, commonly abbreviated as SSG.\nThe original scope was to create SCAP data streams. Over time, it grew into the\nbiggest open-source beyond-SCAP content project.\n\nThe next few years saw the introduction of not just government-specific security\nprofiles but also commercial, such as PCI-DSS and CIS.\n\nLater, the industry starts moving towards different security content formats,\nsuch as Ansible, Puppet, and Chef InSpec. The community reacted by evolving the\ntooling and helped transform SSG into a more general-purpose security content\nproject. This change happened over time in 2017 and 2018. In September 2018, we\ndecided to change the name of the project to `ComplianceAsCode`, in order to avoid confusion.\n\nWe envision that the future will be format-agnostic. That's why opted for an\nabstraction instead of using XCCDF for the input format.\n\n## Contributors\nThis project is welcome to new contributors. We are continually trying to remove the complexities to make contributions easier and more enjoyable for everyone. This is a nice project and a friendly community.\n\nThere are many ways to contribute. Check the documentation for more details:\nhttps://complianceascode.readthedocs.io/en/latest/manual/developer/01_introduction.html\n\nCheck the updated list of [Contributors](Contributors.md).\n"
        },
        {
          "name": "apple_os",
          "type": "tree",
          "content": null
        },
        {
          "name": "applications",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_config.yml.in",
          "type": "blob",
          "size": 0.4130859375,
          "content": "cmake_build_type: \"@CMAKE_BUILD_TYPE@\"\n\nssg_version: [@SSG_MAJOR_VERSION@, @SSG_MINOR_VERSION@, @SSG_PATCH_VERSION@]\nssg_version_str: \"@SSG_VERSION@\"\ntarget_oval_version: [@SSG_TARGET_OVAL_MAJOR_VERSION@, @SSG_TARGET_OVAL_MINOR_VERSION@]\ntarget_oval_version_str: \"@SSG_TARGET_OVAL_VERSION@\"\n\njinja2_cache_enabled: @SSG_JINJA2_CACHE_ENABLED_BOOL@\njinja2_cache_dir: \"@SSG_JINJA2_CACHE_DIR@\"\n\nsce_enabled: \"@SSG_SCE_ENABLED@\"\n"
        },
        {
          "name": "build_product",
          "type": "blob",
          "size": 14.7294921875,
          "content": "#!/bin/bash\n\n# Created by argbash-init v2.8.1\n# Rearrange the order of options below according to what you would like to see in the help message.\n# ARG_OPTIONAL_SINGLE([oval],[o],[OVAL version],[auto])\n# ARG_OPTIONAL_SINGLE([builder],[b],[Builder engine],[auto])\n# ARG_OPTIONAL_SINGLE([jobs],[j],[Count of simultaneous jobs],[auto])\n# ARG_OPTIONAL_BOOLEAN([debug],[],[Make a debug build with draft profiles],[off])\n# ARG_OPTIONAL_BOOLEAN([derivatives],[],[Also build derivatives of products if applicable],[off])\n# ARG_OPTIONAL_BOOLEAN([ansible-playbooks],[],[Build Ansible Playbooks for every profile],[on])\n# ARG_OPTIONAL_BOOLEAN([bash-scripts],[],[Build Bash remediation scripts for every profile],[on])\n# ARG_OPTIONAL_BOOLEAN([datastream-only],[d],[Build the data stream only. Do not build any of the guides, tables, etc],[off])\n# ARG_OPTIONAL_BOOLEAN([profiling],[p],[Use ninja and call the build_profiler.sh util],[off])\n# ARG_USE_ENV([ADDITIONAL_CMAKE_OPTIONS],[],[Whitespace-separated string of arguments to pass to CMake])\n# ARG_POSITIONAL_INF([product],[Products to build, ALL means all products],[0],[ALL])\n# ARG_DEFAULTS_POS([])\n# ARG_TYPE_GROUP_SET([oval_ver],[VERSION],[oval],[5.11,auto])\n# ARG_TYPE_GROUP_SET([builder_type],[BUILDER],[builder],[make,ninja,auto])\n# ARG_HELP([Wipes out contents of the 'build' directory and builds only and only the given products.])\n# ARGBASH_GO()\n# needed because of Argbash --> m4_ignore([\n### START OF CODE GENERATED BY Argbash v2.10.0 one line above ###\n# Argbash is a bash code generator used to get arguments parsing right.\n# Argbash is FREE SOFTWARE, see https://argbash.io for more info\n\n# Setting environmental variables\n\n\ndie()\n{\n\tlocal _ret=\"${2:-1}\"\n\ttest \"${_PRINT_HELP:-no}\" = yes && print_help >&2\n\techo \"$1\" >&2\n\texit \"${_ret}\"\n}\n\n# validators\n\noval_ver()\n{\n\tlocal _allowed=(\"5.11\" \"auto\") _seeking=\"$1\"\n\tfor element in \"${_allowed[@]}\"\n\tdo\n\t\ttest \"$element\" = \"$_seeking\" && echo \"$element\" && return 0\n\tdone\n\tdie \"Value '$_seeking' (of argument '$2') doesn't match the list of allowed values: '5.11' and 'auto'\" 4\n}\n\n\nbuilder_type()\n{\n\tlocal _allowed=(\"make\" \"ninja\" \"auto\") _seeking=\"$1\"\n\tfor element in \"${_allowed[@]}\"\n\tdo\n\t\ttest \"$element\" = \"$_seeking\" && echo \"$element\" && return 0\n\tdone\n\tdie \"Value '$_seeking' (of argument '$2') doesn't match the list of allowed values: 'make', 'ninja' and 'auto'\" 4\n}\n\n\nbegins_with_short_option()\n{\n\tlocal first_option all_short_options='objdph'\n\tfirst_option=\"${1:0:1}\"\n\ttest \"$all_short_options\" = \"${all_short_options/$first_option/}\" && return 1 || return 0\n}\n\n# THE DEFAULTS INITIALIZATION - POSITIONALS\n_positionals=()\n_arg_product=(\"ALL\")\n# THE DEFAULTS INITIALIZATION - OPTIONALS\n_arg_oval=\"auto\"\n_arg_builder=\"auto\"\n_arg_jobs=\"auto\"\n_arg_debug=\"off\"\n_arg_derivatives=\"off\"\n_arg_ansible_playbooks=\"on\"\n_arg_playbook_per_rule=\"off\"\n_arg_bash_scripts=\"on\"\n_arg_datastream_only=\"off\"\n_arg_profiling=\"off\"\n_arg_log=\"off\"\n_arg_thin_datastream=\"off\"\n_arg_rule_id=\"off\"\n\nprint_help()\n{\n\tprintf '%s\\n' \"Wipes out contents of the 'build' directory and builds only and only the given products.\"\n\tprintf 'Usage: %s [-o|--oval <VERSION>] [-b|--builder <BUILDER>] [-j|--jobs <arg>] [--(no-)debug] [--(no-)derivatives] [--(no-)ansible-playbooks] [--(no-)bash-scripts] [-d|--(no-)datastream-only] [-p|--(no-)profiling] [-h|--help] [<product-1>] ... [<product-n>] ...\\n' \"$0\"\n\tprintf '\\t%s\\n' \"<product>: Products to build, ALL means all products (defaults for <product>: 'ALL')\"\n\tprintf '\\t%s\\n' \"-o, --oval: OVAL version. Can be one of: '5.11' or 'auto' (default: 'auto')\"\n\tprintf '\\t%s\\n' \"-b, --builder: Builder engine. Can be one of: 'make', 'ninja' and 'auto' (default: 'auto')\"\n\tprintf '\\t%s\\n' \"-j, --jobs: Count of simultaneous jobs (default: 'auto')\"\n\tprintf '\\t%s\\n' \"--debug, --no-debug: Make a debug build with draft profiles (off by default)\"\n\tprintf '\\t%s\\n' \"--derivatives, --no-derivatives: Also build derivatives of products if applicable (off by default)\"\n\tprintf '\\t%s\\n' \"--ansible-playbooks, --no-ansible-playbooks: Build Ansible Playbooks for every profile (on by default)\"\n\tprintf '\\t%s\\n' \"--playbook-per-rule, --no-playbook-per-rule: Build Ansible Playbooks for every rule (off by default)\"\n\tprintf '\\t%s\\n' \"--bash-scripts, --no-bash-scripts: Build Bash remediation scripts for every profile (on by default)\"\n\tprintf '\\t%s\\n' \"-t, --thin, --no-thin: Build thin data streams for each rule. Do not build any of the guides, tables, etc (off by default)\"\n\tprintf '\\t%s\\n' \"-r, --rule-id: Rule ID: Build a thin data stream with the specified rule. Do not build any of the guides, tables, etc (off by default)\"\n\tprintf '\\t%s\\n' \"-d, --datastream-only, --no-datastream-only: Build the data stream only. Do not build any of the guides, tables, etc (off by default)\"\n\tprintf '\\t%s\\n' \"-p, --profiling, --no-profiling: Use ninja and call the build_profiler.sh util (off by default)\"\n\tprintf '\\t%s\\n' \"-l, --log, --no-log: Logs all debugging messages (off by default)\"\n\tprintf '\\t%s\\n' \"-h, --help: Prints help\"\n\tprintf '\\nEnvironment variables that are supported:\\n'\n\tprintf '\\t%s\\n' \"ADDITIONAL_CMAKE_OPTIONS: Whitespace-separated string of arguments to pass to CMake.\"\n\n}\n\n\nparse_commandline()\n{\n\t_positionals_count=0\n\twhile test $# -gt 0\n\tdo\n\t\t_key=\"$1\"\n\t\tcase \"$_key\" in\n\t\t\t-o|--oval)\n\t\t\t\ttest $# -lt 2 && die \"Missing value for the optional argument '$_key'.\" 1\n\t\t\t\t_arg_oval=\"$(oval_ver \"$2\" \"oval\")\" || exit 1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--oval=*)\n\t\t\t\t_arg_oval=\"$(oval_ver \"${_key##--oval=}\" \"oval\")\" || exit 1\n\t\t\t\t;;\n\t\t\t-o*)\n\t\t\t\t_arg_oval=\"$(oval_ver \"${_key##-o}\" \"oval\")\" || exit 1\n\t\t\t\t;;\n\t\t\t-b|--builder)\n\t\t\t\ttest $# -lt 2 && die \"Missing value for the optional argument '$_key'.\" 1\n\t\t\t\t_arg_builder=\"$(builder_type \"$2\" \"builder\")\" || exit 1\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--builder=*)\n\t\t\t\t_arg_builder=\"$(builder_type \"${_key##--builder=}\" \"builder\")\" || exit 1\n\t\t\t\t;;\n\t\t\t-b*)\n\t\t\t\t_arg_builder=\"$(builder_type \"${_key##-b}\" \"builder\")\" || exit 1\n\t\t\t\t;;\n\t\t\t-j|--jobs)\n\t\t\t\ttest $# -lt 2 && die \"Missing value for the optional argument '$_key'.\" 1\n\t\t\t\t_arg_jobs=\"$2\"\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--jobs=*)\n\t\t\t\t_arg_jobs=\"${_key##--jobs=}\"\n\t\t\t\t;;\n\t\t\t-j*)\n\t\t\t\t_arg_jobs=\"${_key##-j}\"\n\t\t\t\t;;\n\t\t\t--no-debug|--debug)\n\t\t\t\t_arg_debug=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_debug=\"off\"\n\t\t\t\t;;\n\t\t\t-r|--rule-id)\n\t\t\t\t_arg_rule_id=\"$2\"\n\t\t\t\ttest $# -lt 2 && _arg_rule_id=\"ALL_RULES\"\n\t\t\t\tshift\n\t\t\t\t;;\n\t\t\t--rule-id=*)\n\t\t\t\t_arg_rule_id=\"${_key##--oval=}\"\n\t\t\t\t;;\n\t\t\t-r*)\n\t\t\t\t_arg_rule_id=\"${_key##-r}\"\n\t\t\t\t;;\n\t\t\t--no-derivatives|--derivatives)\n\t\t\t\t_arg_derivatives=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_derivatives=\"off\"\n\t\t\t\t;;\n\t\t\t--no-ansible-playbooks|--ansible-playbooks)\n\t\t\t\t_arg_ansible_playbooks=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_ansible_playbooks=\"off\"\n\t\t\t\t;;\n\t\t\t--no-playbook-per-rule|--playbook-per-rule)\n\t\t\t\t_arg_playbook_per_rule=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_playbook_per_rule=\"off\"\n\t\t\t\t;;\n\t\t\t--no-bash-scripts|--bash-scripts)\n\t\t\t\t_arg_bash_scripts=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_bash_scripts=\"off\"\n\t\t\t\t;;\n\t\t\t-t|--no-thin|--thin)\n\t\t\t\t_arg_thin_datastream=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_thin_datastream=\"off\"\n\t\t\t\t;;\n\t\t\t-t*)\n\t\t\t\t_arg_thin_datastream=\"on\"\n\t\t\t\t_next=\"${_key##-d}\"\n\t\t\t\tif test -n \"$_next\" -a \"$_next\" != \"$_key\"\n\t\t\t\tthen\n\t\t\t\t\t{ begins_with_short_option \"$_next\" && shift && set -- \"-d\" \"-${_next}\" \"$@\"; } || die \"The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option.\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t-d|--no-datastream-only|--datastream-only)\n\t\t\t\t_arg_datastream_only=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_datastream_only=\"off\"\n\t\t\t\t;;\n\t\t\t-d*)\n\t\t\t\t_arg_datastream_only=\"on\"\n\t\t\t\t_next=\"${_key##-d}\"\n\t\t\t\tif test -n \"$_next\" -a \"$_next\" != \"$_key\"\n\t\t\t\tthen\n\t\t\t\t\t{ begins_with_short_option \"$_next\" && shift && set -- \"-d\" \"-${_next}\" \"$@\"; } || die \"The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option.\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t-p|--no-profiling|--profiling)\n\t\t\t\t_arg_profiling=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_profiling=\"off\"\n\t\t\t\t;;\n\t\t\t-p*)\n\t\t\t\t_arg_profiling=\"on\"\n\t\t\t\t_next=\"${_key##-p}\"\n\t\t\t\tif test -n \"$_next\" -a \"$_next\" != \"$_key\"\n\t\t\t\tthen\n\t\t\t\t\t{ begins_with_short_option \"$_next\" && shift && set -- \"-p\" \"-${_next}\" \"$@\"; } || die \"The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option.\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t-l|--no-log|--log)\n\t\t\t\t_arg_log=\"on\"\n\t\t\t\ttest \"${1:0:5}\" = \"--no-\" && _arg_log=\"off\"\n\t\t\t\t;;\n\t\t\t-l*)\n\t\t\t\t_arg_log=\"on\"\n\t\t\t\t_next=\"${_key##-l}\"\n\t\t\t\tif test -n \"$_next\" -a \"$_next\" != \"$_key\"\n\t\t\t\tthen\n\t\t\t\t\t{ begins_with_short_option \"$_next\" && shift && set -- \"-l\" \"-${_next}\" \"$@\"; } || die \"The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option.\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\t\t-h|--help)\n\t\t\t\tprint_help\n\t\t\t\texit 0\n\t\t\t\t;;\n\t\t\t-h*)\n\t\t\t\tprint_help\n\t\t\t\texit 0\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\t_last_positional=\"$1\"\n\t\t\t\t_positionals+=(\"$_last_positional\")\n\t\t\t\t_positionals_count=$((_positionals_count + 1))\n\t\t\t\t;;\n\t\tesac\n\t\tshift\n\tdone\n}\n\n\nassign_positional_args()\n{\n\tlocal _positional_name _shift_for=$1\n\t_positional_names=\"\"\n\t_our_args=$((${#_positionals[@]} - 0))\n\tfor ((ii = 0; ii < _our_args; ii++))\n\tdo\n\t\t_positional_names=\"$_positional_names _arg_product[$((ii + 0))]\"\n\tdone\n\n\tshift \"$_shift_for\"\n\tfor _positional_name in ${_positional_names}\n\tdo\n\t\ttest $# -gt 0 || break\n\t\teval \"$_positional_name=\\${1}\" || die \"Error during argument parsing, possibly an Argbash bug.\" 1\n\t\tshift\n\tdone\n}\n\nparse_commandline \"$@\"\nassign_positional_args 1 \"${_positionals[@]}\"\n\n# OTHER STUFF GENERATED BY Argbash\n# Validation of values\n\n\n\n### END OF CODE GENERATED BY Argbash (sortof) ### ])\n# [ <-- needed because of Argbash\n\n\nto_uppercase() {\n\tprintf '%s' \"$1\" | tr '[:lower:]' '[:upper:]'\n}\n\nto_lowercase() {\n\tprintf '%s' \"$1\" | tr '[:upper:]' '[:lower:]'\n}\n\nopt_product_in() {\n\tswitch=\"-DSSG_PRODUCT_$(to_uppercase \"$1\")=ON\"\n\techo \"$switch\"\n}\n\nis_product() {\n\tlocal candidate=\"$1\"\n\tfor cmake_product in \"${all_cmake_products[@]}\"; do\n\t\tif test \"$(to_uppercase \"$candidate\")\" = \"$cmake_product\"; then\n\t\t\treturn 0\n\t\tfi\n\tdone\n\n\treturn 1\n}\n\nbuild_with_ninja() {\n\tcmake_generator=\"Ninja\"\n\tbuild_command=\"ninja\"\n}\n\nbuild_with_make() {\n\tcmake_generator=\"Unix Makefiles\"\n\tbuild_command=\"make\"\n}\n\nautodetect_builder() {\n\tif command -v ninja &>/dev/null ; then\n\t\tbuild_with_ninja\n\telse\n\t\tbuild_with_make\n\tfi\n}\n\nhandle_wrong_products() {\n\tall_cmake_lowercase=()\n\tfor p in \"${all_cmake_products[@]}\"; do\n\t\tall_cmake_lowercase+=(\"$(to_lowercase \"$p\")\")\n\tdone\n\tpossible_products=$'\\n'\"$(printf ' * %s\\n' \"${all_cmake_lowercase[@]}\")\"\n\n\tprintf '%s is not a valid product, choose one or more product names from the list: %s\\n' \"$1\" \"$possible_products\"\n\texit 1\n}\n\nset_no_derivatives_options() {\n\ttest \"$_arg_derivatives\" = on && return\n\tif grep -q 'rhel' <<< \"${_arg_product[*]}\"; then\n\t\tCMAKE_OPTIONS+=(\"-DSSG_CENTOS_DERIVATIVES_ENABLED:BOOL=OFF\")\n\tfi\n}\n\nset_sce_options() {\n\tgrep -q \"SSG_SCE_ENABLED\" <<< \"$ADDITIONAL_CMAKE_OPTIONS\" && return\n\t# These products will build SCE by default\n\tif grep -q -E 'rhel9|rhel10|ubuntu2004|ubuntu2204|ubuntu2404' <<< \"${_arg_product[*]}\"; then\n\t\tCMAKE_OPTIONS+=(\"-DSSG_SCE_ENABLED:BOOL=ON\")\n\tfi\n}\n\nset_explict_build_targets() {\n\tif test \"$_arg_datastream_only\" = on || test \"$_arg_thin_datastream\" = on || test \"$_arg_rule_id\" != off ; then\n\t\tfor chosen_product in \"${_arg_product[@]}\"; do\n\t\t\tEXPLICIT_BUILD_TARGETS+=(\"generate-ssg-$(to_lowercase \"$chosen_product\")-ds.xml\")\n\t\tdone\n\tfi\n}\n\n# Get this using\n# grep 'option(SSG_PRODUCT' CMakeLists.txt  | sed -e 's/option(SSG_PRODUCT_\\(\\w\\+\\).*/\\1/'\nall_cmake_products=(\n\tAL2023\n\tALINUX2\n\tALINUX3\n\tANOLIS8\n\tANOLIS23\n\tCHROMIUM\n\tDEBIAN11\n\tDEBIAN12\n\tEXAMPLE\n\tEKS\n\tFEDORA\n\tFIREFOX\n\tOCP4\n\tRHCOS4\n\tOL7\n\tOL8\n\tOL9\n\tOL10\n\tOPENSUSE\n\tRHEL8\n\tRHEL9\n\tRHEL10\n\tRHV4\n\tSLE12\n\tSLE15\n        SLMICRO5\n\tUBUNTU1604\n\tUBUNTU1804\n\tUBUNTU2004\n\tUBUNTU2204\n\tUBUNTU2404\n\tMACOS1015\n\tOPENEMBEDDED\n\tOPENEULER2203\n\tKYLINSERVER10\n)\n\nDEFAULT_OVAL_MAJOR_VERSION=5\nDEFAULT_OVAL_MINOR_VERSION=11\n\nbuild_type_option=\"-DCMAKE_BUILD_TYPE=Release\"\n\ncores=$(nproc 2>/dev/null) || cores=1\n\n\nif test \"$_arg_oval\" = auto; then\n\toval_major_version_option=\"-DSSG_TARGET_OVAL_MAJOR_VERSION:STRING=$DEFAULT_OVAL_MAJOR_VERSION\"\n\toval_minor_version_option=\"-DSSG_TARGET_OVAL_MINOR_VERSION:STRING=$DEFAULT_OVAL_MINOR_VERSION\"\nelse\n\toval_major_version_option=\"-DSSG_TARGET_OVAL_MAJOR_VERSION:STRING=$(cut -f 1 -d . <<< \"$_arg_oval\")\"\n\toval_minor_version_option=\"-DSSG_TARGET_OVAL_MINOR_VERSION:STRING=$(cut -f 1 -d . --complement <<< \"$_arg_oval\")\"\nfi\n\ntest \"$_arg_debug\" = on && build_type_option=\"-DCMAKE_BUILD_TYPE=Debug\"\n\njobs=\"$_arg_jobs\"\ntest \"$jobs\" = auto && jobs=$cores\n\nif test \"$_arg_profiling\" = on; then\n\tbuild_with_ninja\n\tjobs=1\nelif test \"$_arg_builder\" = ninja; then\n\tbuild_with_ninja\nelif test \"$_arg_builder\" = make; then\n\tbuild_with_make\nelse\n\tautodetect_builder\nfi\n\ntest \"${_arg_product[0]}\" = ALL && _arg_product=(\"${all_cmake_products[@]}\")\n\ncmake_enable_args=()\nfor chosen_product in \"${_arg_product[@]}\"; do\n\tif is_product \"$chosen_product\"; then\n\t\tcmake_enable_args+=(\"$(opt_product_in \"$chosen_product\")\")\n\telse\n\t\thandle_wrong_products \"$chosen_product\"\n\tfi\ndone\n\nCMAKE_OPTIONS=(${ADDITIONAL_CMAKE_OPTIONS} \"${build_type_option}\" \"${oval_major_version_option}\" \"${oval_minor_version_option}\" '-DSSG_PRODUCT_DEFAULT=OFF' \"${cmake_enable_args[@]}\" -G \"$cmake_generator\")\nset_no_derivatives_options\nset_sce_options\nif [ \"$_arg_ansible_playbooks\" = off ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_ANSIBLE_PLAYBOOKS_ENABLED:BOOL=OFF\")\nfi\nif [ \"$_arg_playbook_per_rule\" = on ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_ANSIBLE_PLAYBOOKS_PER_RULE_ENABLED:BOOL=ON\")\nfi\nif [ \"$_arg_bash_scripts\" = off ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_BASH_SCRIPTS_ENABLED:BOOL=OFF\")\nfi\nEXPLICIT_BUILD_TARGETS=()\nset_explict_build_targets\n\nif [ \"$_arg_log\" = on ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_LOG:BOOL=ON\")\nelse\n\tCMAKE_OPTIONS+=(\"-DSSG_LOG:BOOL=OFF\")\nfi\n\n\nif [ \"$_arg_rule_id\" != off ] ; then\n\t_arg_thin_datastream=\"on\"\n\tCMAKE_OPTIONS+=(\"-DSSG_THIN_DS_RULE_ID:STR=${_arg_rule_id}\")\nelif [ \"$_arg_thin_datastream\" == on ] && [ \"$_arg_rule_id\" == off ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_THIN_DS_RULE_ID:STR=ALL_RULES\")\nelse\n\tCMAKE_OPTIONS+=(\"-DSSG_THIN_DS_RULE_ID:STR=off\")\nfi\n\nif [ \"$_arg_thin_datastream\" = on ] ; then\n\tCMAKE_OPTIONS+=(\"-DSSG_THIN_DS:BOOL=ON\")\nelse\n\tCMAKE_OPTIONS+=(\"-DSSG_THIN_DS:BOOL=OFF\")\nfi\n\nset -e\n[ -d build ] || mkdir build\nrm -rf build/*\ncd build\ncmake .. \"${CMAKE_OPTIONS[@]}\"\n$build_command \"-j${jobs}\" \"${EXPLICIT_BUILD_TARGETS[@]}\"\n\nif test \"$_arg_profiling\" = on; then\n\t# remove cycles in ninja logs\n\tninja -t recompact\n\t# go back to content dir\n\tcd ..\n\tutils/build_profiler.sh `echo \"${_arg_product[@]}\" | sed 's/ /_/g'`\nfi\n# ] <-- needed because of Argbash\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "controls",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "linux_os",
          "type": "tree",
          "content": null
        },
        {
          "name": "ocp-resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "product_properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "products",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.8828125,
          "content": "[build-system]\nrequires = [\"setuptools>=64\", \"setuptools_scm>=8\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"ssg\"\ndescription = \"Library used while building and maintaining the ComplianceasCode/content project\"\ndynamic = [\"version\"]\ndependencies = [\n  \"pyyaml\",\n  \"Jinja2\",\n  \"setuptools\"\n]\nrequires-python = \">= 3\"\nmaintainers = [\n  {name = \"Gabriel Gaspar Becker\", email = \"ggasparb@redhat.com\"},\n  {name = \"Jan Cerny\", email = \"jcerny@redhat.com\"},\n  {name = \"Marcus Burghardt\", email = \"maburgha@redhat.com\"},\n  {name = \"Matthew Burket\", email = \"mburket@redhat.com\"},\n  {name = \"Matus Marhefka\", email = \"mmarhefk@redhat.com\"},\n  {name = \"Vojtech Polasek\", email = \"vpolasek@redhat.com\"}\n]\nreadme = \"README.md\"\nlicense = {file = \"LICENSE\"}\n\n[project.urls]\nHomepage = \"https://github.com/ComplianceAsCode/content\"\nDocumentation = \"https://complianceascode.readthedocs.io/en/latest/\"\n\n\n[tool.setuptools_scm]\n# The ComplianceasCode/content uses git tag in an uncommon way.\n# That's why this elaborate command is used to get somehow meaningful version.\n# The project uses tags, but they describe commits which are not in the master branch.\n# Instead, they describe commits which are marked as final in stabilization branches.\n# These branches are temporary and they are deleted after stabilization finishes.\n# That is the reason why the regular \"git describe --long\" command cannot be used in this place.\n# Instead the latest tag is selected with some heuristics added, stored in the $tag variable.\n# Then number of commits between the tag and the current head is calculated and stored in the $numcommits variable.\n# Then the HEAD short commit hash is added.\ngit_describe_command = [\"sh\", \"-c\", \"tag=$(git tag | grep -v '-' | sort | tail -n 1); numcommits=$(git rev-list --count $tag..HEAD); com=$(git log -1 --pretty=format:%h); echo $tag-$numcommits-$com\"]\n\n[tool.setuptools.packages.find]\ninclude = [\"ssg*\"]\n"
        },
        {
          "name": "requirements-base.txt",
          "type": "blob",
          "size": 0.025390625,
          "content": "pyyaml\nJinja2\nsetuptools\n\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.275390625,
          "content": "-r requirements-base.txt\ncmakelint\ntypes-openpyxl\ntypes-PyYAML\nopenpyxl-stubs\nopenpyxl\njson2html\nruamel.yaml\npandas\nmypy\nlxml\nlxml-stubs\npycompliance\n# used in utils/controleval_metrics.py\nprometheus_client\n# used in utils/oscal\nrequests\ncompliance-trestle==3.6.0\npyopenssl>=23.2.0\n"
        },
        {
          "name": "scap-security-guide.spec",
          "type": "blob",
          "size": 3.78125,
          "content": "# SSG build system and tests count with build directory name `build`.\n# For more details see:\n# https://fedoraproject.org/wiki/Changes/CMake_to_do_out-of-source_builds\n%global _vpath_builddir build\n%global _default_patch_fuzz 2\n\n%if 0%{?rhel}\n%global _rhel_like %{rhel}\n%else\n%if 0%{?centos}\n%global _rhel_like %{centos}\n%endif\n%endif\n\nName:\t\tscap-security-guide\n# Version placeholder. Copr build version is determined by utils/version.sh. See .packit.yaml config\nVersion:\t0.0.1\nRelease:\t0%{?dist}\nSummary:\tSecurity guidance and baselines in SCAP formats\nLicense:\tBSD-3-Clause\nURL:\t\thttps://github.com/ComplianceAsCode/content/\nSource0:\thttps://github.com/ComplianceAsCode/content/releases/download/v%{version}/scap-security-guide-%{version}.tar.bz2\nBuildArch:\tnoarch\n\n%if 0%{?_rhel_like} == 7\nBuildRequires:  libxslt, openscap-scanner >= 1.2.5, cmake >= 2.8, python, python-jinja2, PyYAML, python-setuptools\n%else\nBuildRequires:  libxslt, openscap-scanner >= 1.2.5, cmake >= 2.8, python%{python3_pkgversion}, python%{python3_pkgversion}-jinja2, python%{python3_pkgversion}-PyYAML, python%{python3_pkgversion}-setuptools\n%endif\nRequires:\txml-common, openscap-scanner >= 1.2.5\n\n%description\nThe scap-security-guide project provides a guide for configuration of the\nsystem from the final system's security point of view. The guidance is specified\nin the Security Content Automation Protocol (SCAP) format and constitutes\na catalog of practical hardening advice, linked to government requirements\nwhere applicable. The project bridges the gap between generalized policy\nrequirements and specific implementation guidelines. The system\nadministrator can use the oscap CLI tool from openscap-scanner package, or the\nscap-workbench GUI tool from scap-workbench package to verify that the system\nconforms to provided guideline. Refer to scap-security-guide(8) manual page for\nfurther information.\n\n%package\tdoc\nSummary:\tHTML formatted security guides generated from XCCDF benchmarks\nRequires:\t%{name} = %{version}-%{release}\n\n%description\tdoc\nThe %{name}-doc package contains HTML formatted documents containing\nhardening guidances that have been generated from XCCDF benchmarks\npresent in %{name} package.\n\n%prep\n%autosetup -p1\n\n%define cmake_defines_common -DSSG_SEPARATE_SCAP_FILES_ENABLED=OFF -DSSG_BASH_SCRIPTS_ENABLED=OFF -DSSG_BUILD_DISA_DELTA_FILES=OFF\n%define cmake_defines_specific %{nil}\n%define centos_8_specific %{nil}\n\n%if 0%{?_rhel_like}\n%if 0%{?_rhel_like} == 7 || 0%{?_rhel_like} == 8\n%define cmake_defines_specific -DSSG_PRODUCT_DEFAULT:BOOLEAN=FALSE -DSSG_PRODUCT_RHEL%{_rhel_like}:BOOLEAN=TRUE -DSSG_CENTOS_DERIVATIVES_ENABLED:BOOL=ON\n%else\n%define cmake_defines_specific -DSSG_PRODUCT_DEFAULT:BOOLEAN=FALSE -DSSG_PRODUCT_RHEL%{_rhel_like}:BOOLEAN=TRUE -DSSG_CENTOS_DERIVATIVES_ENABLED:BOOL=ON -DSSG_SCE_ENABLED:BOOL=ON\n%endif\n%endif\n%if 0%{?fedora}\n%define cmake_defines_specific -DSSG_PRODUCT_DEFAULT:BOOLEAN=FALSE -DSSG_PRODUCT_FEDORA:BOOLEAN=TRUE\n%endif\n\nmkdir -p build\n%build\n%if 0%{?_rhel_like} == 7 || 0%{?_rhel_like} == 8\ncd build\n%cmake %{cmake_defines_common} %{cmake_defines_specific} ../\n%else\n%cmake %{cmake_defines_common} %{cmake_defines_specific}\n%endif\n\n%if 0%{?_rhel_like} == 7\nmake %{?_smp_mflags}\n%else\n%cmake_build\n%endif\n\n%install\n%if 0%{?_rhel_like} == 7 || 0%{?_rhel_like} == 8\ncd build\n%endif\n%if 0%{?_rhel_like} == 7\n%make_install\n%else\n%cmake_install\n%endif\nrm %{buildroot}/%{_docdir}/%{name}/README.md\nrm %{buildroot}/%{_docdir}/%{name}/Contributors.md\n\n%files\n%{_datadir}/xml/scap/ssg/content\n# No kickstarts for Fedora\n%if 0%{?_rhel_like}\n%{_datadir}/%{name}/kickstart\n%endif\n%{_datadir}/%{name}/ansible/*.yml\n%lang(en) %{_mandir}/man8/scap-security-guide.8.*\n%doc %{_docdir}/%{name}/LICENSE\n\n%files doc\n%doc %{_docdir}/%{name}/guides/*.html\n# No tables for Fedora\n%if 0%{?_rhel_like}\n%doc %{_docdir}/%{name}/tables/*.html\n%endif\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0341796875,
          "content": "[pycodestyle]\nmax-line-length = 99\n"
        },
        {
          "name": "shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssg",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.0673828125,
          "content": "xmldiff\npytest\npytest-cov\n# used in tests/units/utils/oscal\nPyGitHub\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.044921875,
          "content": "[tox]\nenvlist = coverage_clean, py27, py3{6, 8, 9}, py3, coverage_report\nskip_missing_interpreters = true\nisolated_build = true\nskipsdist = true\n\n# Unit tests\n[testenv]\nsetenv =\n    tests_dir = {toxinidir}{/}tests/unit\n    PYTHONPATH = {toxinidir}\ncommands =\n    python -m pytest --cov-append --cov-report=xml --cov=ssg \"{env:tests_dir}{/}ssg-module\"\n\ndeps =\n    pyyaml\n    Jinja2\n    -r test-requirements.txt\n\n# Coverage\n[testenv:coverage_report]\ndeps = coverage\nskip_install = true\ncommands =\n    coverage html\n    coverage xml\n    coverage report -m\n\n[testenv:coverage_clean]\ndeps = coverage\nskip_install = true\ncommands = coverage erase\n\n\n# Code style\n[flake8]\nmax-line-length = 99\nper-file-ignores =__init__.py:F401\n\n[testenv:flake8]\ncommands =\n    flake8 ssg utils tests build-scripts\ndeps =\n    flake8\n\n# Documentation\n[testenv:docs]\nbasepython = python3\nallowlist_externals =\n    make\n    rm\ndeps =\n    -r docs/requirements.txt\ncommands_pre =\n    make -C docs clean\n    rm -rf docs/api\ncommands =\n    make -C docs html\ncommands_post =\n    make -C docs linkcheck\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}