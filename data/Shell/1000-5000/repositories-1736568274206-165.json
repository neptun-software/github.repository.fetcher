{
  "metadata": {
    "timestamp": 1736568274206,
    "page": 165,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nestybox/sysbox",
      "stars": 2875,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2392578125,
          "content": "# Ignore the sysbox build token and build dir\nbuild\n.buildinfo\n\n# Ignore virtual-studio-code metadata\n.vscode\n\n# Ignore paths holding build artifacts and related files.\nimage/deb/debbuild/\nimage/deb/sources/\n\n# GNU Global Tags\nGPATH\nGRTAGS\nGTAGS"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.494140625,
          "content": "[submodule \"sysbox-fs\"]\n\tpath = sysbox-fs\n\turl = ../sysbox-fs.git\n[submodule \"sysbox-runc\"]\n\tpath = sysbox-runc\n\turl = ../sysbox-runc.git\n[submodule \"sysbox-ipc\"]\n\tpath = sysbox-ipc\n\turl = ../sysbox-ipc.git\n[submodule \"sysbox-mgr\"]\n\tpath = sysbox-mgr\n\turl = ../sysbox-mgr.git\n[submodule \"sysbox-libs\"]\n\tpath = sysbox-libs\n\turl = ../sysbox-libs.git\n[submodule \"sysbox-pkgr\"]\n\tpath = sysbox-pkgr\n\turl = ../sysbox-pkgr.git\n[submodule \"sysbox-dockerfiles\"]\n\tpath = sysbox-dockerfiles\n\turl = ../dockerfiles.git\n"
        },
        {
          "name": ".remarkrc",
          "type": "blob",
          "size": 0.33203125,
          "content": "{\n    \"plugins\": {\n      \"remark-toc\": {\n        \"tight\": true,\n        \"heading\": \"contents\"\n      },\n      \"remark-validate-links\": {\n      },\n      \"remark-lint\": {\n        \"no-multiple-toplevel-headings\": false,\n        \"maximum-line-length\": 90,\n        \"table-pipe-alignment\": true,\n        \"table-cell-padding\": false\n      }\n    }\n}"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.4140625,
          "content": "# Changelog\nAll notable changes to this project will be documented in this file.\n\n## [0.6.6] - 2025-01-03\n### Added\n  * Add support for k8s v1.31 and deprecate k8s v1.27.\n  * Ensure latest OCI runc works inside Sysbox containers (issue #879).\n  * Retry fix for bug in sysbox-fs that resulted in left-over nsenter mounts of procfs and sysfs (issue #829).\n  * Fix bug in parsing of subid limits in /etc/login.defs (issue #870).\n  * Fix bug in Sysbox shiftfs checker that was causing false negatives.\n\n## [0.6.5] - 2024-11-08\n### Added\n  * Update to Golang 1.22.\n  * Implement 'relaxed-read-only' mode to ease the bind-mount requirements of read-only containers.\n  * Enhance sysbox-fs emulation to allow writes to '/proc/sys/kernel/shm*' paths.\n  * Fix emulation of /proc/sys/kernel/random (issue #785).\n  * Fix bug in sysbox-fs that resulted in left-over nsenter mounts of procfs and sysfs (issue #829).\n  * Fix issue causing Sysbox to slow down due to the accumulation of large numbers of mountpoints when '--allow-immutable-unmounts' knob is set to 'false'.\n  * Skip dns change when default route doesn't exists (issue #834).\n  * Fix issue breaking read() operations over '/sys/kernel' nodes with non-zero offsets.\n  * Return error for disallowed unmount of sysbox-fs managed mountpoint (issue #808).\n  * sysbox-deploy-k8s: add support for K8s v1.29 and v1.30.\n  * sysbox-deploy-k8s: deprecate support of K8s v1.26.\n  * sysbox-deploy-k8s: add support for incremental Sysbox upgrades.\n  * sysbox-deploy-k8s: introduce logic to config Sysbox's daemons through a configMap.\n  * sysbox-deploy-k8s: increase 'vm.max_map_count' to satisfy mmap-demanding apps (Elastic).\n  * sysbox-deploy-k8s: enhance logic to detect Sysbox's config-environment changes (sysctl vars).\n  * sysbox-deploy-k8s: fix issue preventing Sysbox installation from concluding during upgrades.\n  * sysbox-deploy-k8s: fix for race-condition in GKE clusters.\n  * sysbox-deploy-k8s: fix for 'sysbox-installer-helper' to workaround dpkg error.\n  * sysbox-deploy-k8s: check for existence of 'unprivileged_userns_clone' procfs node before attempting to write().\n  * sysbox-deploy-k8s: delete preexisting sysbox pods during upgrade or re-installation process.\n\n## [0.6.4] - 2024-04-06\n### Added\n  * Fix to allowing running x86 apps in Sysbox containers (issue #350).\n  * Fix sysbox-fs nsenter mount leak.\n  * Fix sysbox emulation of /proc and /sys in containers for kernels 6.5+.\n  * Add hardening against CVE-2024-21626.\n  * Fix ordering of mounts under /run for containers with systemd (issue #767).\n\n## [0.6.3] - 2024-01-08\n### Added\n  * Fix to ensure \"docker --net=host\" works inside Sysbox containers (issue #712).\n  * Fix bug when mounting host kernel headers into containers (issue #727).\n  * Fix emulation of /sys/devices/virtual/* inside containers (issue #719).\n  * Don't intercept *xattr syscalls by default (improves performance).\n  * Add feature to skip shiftfs and idmapping on specific container files/dirs (via `SYSBOX_SKIP_UID_SHIFT` container env var).\n  * Fix bug with fsuid-map-fail-on-error config option.\n  * Fix bug with pivot-root inside Sysbox containers (ensures docker:24-dind image can run inside Sysbox containers).\n  * sysbox-deploy-k8s: add support for Kubernetes v1.27 and v1.28.\n  * sysbox-deploy-k8s: automatically detect installation on GKE clusters and set up configs accordingly.\n  * sysbox-deploy-k8s: support installation on Debian-based K8s nodes.\n  * sysbox-deploy-k8s: don't install shiftfs on K8s nodes with kernel >= 5.19.\n### Removed\n  * sysbox-deploy-k8s: deprecated support for K8s v1.24 and v1.25 (EOL'd).\n\n## [0.6.2] - 2023-06-09\n### Added\n  * Fix bug in Sysbox's checking of host support for idmapping and shiftfs.\n  * Fix storage leak in /var/lib/sysbox when using Sysbox on K8s clusters.\n  * Fix bug in Sysbox's handling of \"docker run -w\" flag.\n  * Change disable-inner-image-preload flag to allow running (but not committing) sysbox containers with preloaded inner images.\n  * Set disable-inner-image-preload flag in Sysbox K8s deployments to improve performance when stopping pods.\n\n## [0.6.1] - 2023-04-07\n### Added\n  * Added support for ID-mapped overlayfs lower layers; eliminates need for shiftfs and Sysbox rootfs chown; requires kernel 5.19+.\n  * Have Sysbox perform shiftfs and ID-mapping functional checks during init (issue #596).\n  * Fixed rootfs cloning to prevent inode leakage (for hosts with kernel < 5.19 and no shiftfs) (issue #570).\n  * Added support for Kubernetes v1.24 to v1.26.\n  * Added --disable-inner-image-preload flag to sysbox-mgr (speeds up Sysbox container startup).\n  * Added --syscont-mode flag to sysbox-mgr; allows Sysbox to work in system container mode (default) or regular container mode; the latter is meant for running microservices with stronger isolation.\n  * Added --disable-shiftfs-on-fuse flag to sysbox-mgr; prevents Sysbox from mounting shiftfs on top of FUSE-backed filesystems (some of which don't work with shiftfs).\n  * Added few optimizations to expedite I/O operations in procfs/sysfs emulated resources.\n  * Enhanced life-cycle management of Sysbox daemons in Systemd-free scenarios.\n  * Prevented concurrent execution of Sysbox daemons (multi-instance problem).\n  * Improved the handling of ungraceful shutdown scenarios.\n  * Eliminated Sysbox dependencies on configfs kernel module presence.\n  * Fixed emulation of /sys/module/nf_conntrack/parameters inside containers.\n  * Added emulation of /sys/devices/virtual/dmi branch inside containers (for hosts where this or inner resources is not present).\n  * Hide /sys/kernel/security inside containers (issue #662)\n  * Don't assign more capabilities to the container than those given to Sysbox itself.\n  * Don't fail in kernel distros without /lib/modules/<kernel-release>.\n  * Increased the pods-per-node limit from 16 to 4K (Sysbox-CE now matches Sysbox-EE on this regard).\n  * Extended kubelet config-detection process to multiple drop-in files in sysbox-deploy-k8s daemon-set.\n  * Incorporated taints during sysbox-deploy-k8s installation process.\n  * Fixed issue preventing sysbox-deploy-k8s installation in rke2 environments (issue #614).\n  * Fixed issue preventing proper sysbox-deploy-k8s installation in Azure (issue #612).\n\n## [0.5.2] - 2022-05-18\n### Added\n  * Fixed issue #544 preventing containers initialization within sysbox containers when running latest oci-runc releases (1.1.0-rc.1+).\n\n## [0.5.1] - 2022-04-06\n### Added\n  * Added support to allow CIFS mounts within Sysbox containers (Sysbox-EE only).\n  * Fixed issue to allow shiftfs mounts over files that are themselves bind-mounts.\n\n## [0.5.0] - 2022-03-22\n### Added\n  * Added support for Linux ID-mapped mounts (shiftfs alternative in kernels >= 5.12).\n  * Added support for ARM64 hosts.\n  * Added support for running buildx/buildkit inside Sysbox containers.\n  * Added support for running Rancher RKE2 and Mirantis K0s inside Sysbox containers.\n  * Added configs to disable trapping chown and xattr* syscalls (improves performance but may reduce functionality).\n  * Added config to strictly honor container capabilities from higher-level container manager.\n  * Added support for per-container configs via `SYSBOX_*` env vars.\n  * Improved performance of Sysbox's syscall interception code.\n  * Improved the way Sysbox releases the seccomp-fd handles for intercept syscalls (kernels >= 5.8).\n  * Improved Sysbox's cross-compilation support (artifacts can now be generated from/to either AMD64 or ARM64 hosts).\n  * Update to golang 1.16.\n  * Replaced the per-distro *.deb installation packages with a single deb bundle package.\n  * Allow alternative Docker data-root inside a Sysbox container (if Docker is pre-installed in the Sysbox container image).\n  * Fixed segfault when building Docker image inside Sysbox container (issue #484).\n  * Fixed segfault when running python pip install inside nested sysbox container (issue #485).\n  * Fixed issue with running KinD inside a Sysbox container (issue #415).\n  * Fixed problem with shiftfs mounts on Kubernetes persistent volumes (issue #431).\n\n### Removed\n  * None.\n\n## [0.4.1] - 2021-09-30\n### Added\n  * Added important optimization to expedite the container creation cycle.\n  * Enhanced uid-shifting logic to perform shifting operations of Sysbox's special dirs on a need basis.\n  * Added support for Kinvolk's Flatcar Linux distribution (Sysbox-EE only).\n  * Added basic building-blocks to allow Sysbox support on ARM platforms.\n  * Fixed issue preventing Sysbox folders from being eliminated from HDD when Sysbox is shutdown.\n  * Enable sys container processes to set 'trusted.overlay.opaque' xattr on files (issue #254).\n  * Fixed bug resulting in the failure of \"mount\" operation within a sys container.\n  * Made various enhancements to Sysbox's kubernetes installer to simplify its operation.\n  * Extend Sysbox's kubernetes installer to support Rancher's RKE k8s distribution.\n\n## [0.4.0] - 2021-07-13\n### Added\n  * Added support to create secure Kubernetes PODs with Sysbox (sysbox-pods).\n  * Added support for Cgroups-v2 systems.\n  * Added support to allow K3s execution within Sysbox containers.\n  * Extended Sysbox support to Fedora-33 and Fedora-34 releases.\n  * Extended Sysbox support to Flatcar Linux distribution.\n  * Modified Sysbox binaries' installation path (\"/usr/local/sbin\" -> \"/usr/bin\").\n  * Enhanced generation and handling of logging output by relying on systemd (journald) subsystem.\n  * Multiple enhancements in /proc & /sys file-system's emulation logic.\n  * Extended installer to allow it to deploy Sysbox in non-strictly-supported distros / releases.\n  * Improved security of shiftfs mounts.\n  * Fixed issue impacting sysbox-fs stability in scaling scenarios (issue #266).\n  * Fixed issue preventing sys-container initialization due a recent change in oci-runc (issue #291).\n  * Fixed issue with \"--mountpoint\" cli knob being ignored (sysbox issue #310).\n  * Fixed issue causing sysbox-fs handlers to stall upon access to a procfs node (issue #306).\n  * Fixed issue preventing write access to 'domainname' procfs node (issue #287).\n  * Fixed issue preventing systemd-based containers from being able to initialize (issue #273).\n  * Made changes to allow Docker network sharing between containers.\n  * Ensure that Sysbox mounts in read-only containers are mounted as read only.\n### Removed\n  * Deprecated EOL'd Fedora-31 and Fedora-32 releases.\n\n## [0.3.0] - 2021-03-26\n### Added\n  * Secured system container initial mounts (mount/remount/unmounts on these from within the container are now restricted). See [here](docs/user-guide/security.md#initial-mount-immutability) for details.\n  * Improved Sysbox systemd service unit files (dependencies, open-file limits).\n  * Improved logging by sysbox-mgr and sysbox-fs (json logging, more succint logs).\n  * Added support for systemd-managed cgroups v1 on the host (cgroups v2 still not supported).\n  * Added support for read-only Docker containers.\n  * Synced-up sysbox-runc to include the latest changes from the OCI runc.\n  * Added support for Debian distribution (Buster and Bullseye).\n  * Added ground-work to support Sysbox on RedHat, Fedora, and CentOS (next step is creating a package manager for these).\n  * Added config option to configure the Sysbox work directory (defaults to /var/lib/sysbox).\n  * Added support and required automation for Sysbox-in-Docker deployments.\n  * Fixed sporadic session stalling issue during syscall interception handling.\n  * Fixed sysbox-mgr file descriptor leak (sysbox issue #195).\n  * Fixed problem with \"docker --restart\" on Sysbox containers (sysbox issue #184).\n  * Fixed race condition in sysbox-fs procfs & sysfs emulation.\n  * Fixed problem preventing kernel-headers from being properly imported within sys containers.\n  * Fixed inappropriate handling of mount instructions in chroot jail environments.\n### Removed\n  * None.\n\n## [0.2.1] - 2020-08-25\n### Added\n  * Created debian packages for first community-edition release.\n  * Fixed package installer bug preventing 'shiftfs' feature from being properly utilized.\n  * Enhanced package installer to prevent network overlaps between inner and outer containers.\n### Removed\n  * Deprecated support of Ubuntu's EOL release: Eoan (19.10).\n\n## [0.2.0] - 2020-07-03\n### Added\n  * Added initial Kubernetes-in-Docker support to enable secure, flexible and portable K8s clusters.\n  * Added support for running privileged-containers within secure system containers.\n  * Added support for containerd to run within system containers.\n  * Made multiple performance improvements to expedite container initialization and i/o operations.\n  * Added support for Ubuntu-Eoan (19.10) and Ubuntu-Focal (20.04).\n  * Extended support for Ubuntu-Cloud releases (Bionic, Eoan, Focal).\n  * Enhanced Sysbox documentation.\n### Removed\n  * Deprecated support of Ubuntu's EOL releases: Ubuntu-Disco (19.04) and Ubuntu-Cosmic (18.10).\n\n## [0.1.2] - 2019-11-11\n### Added\n  * Created Sysbox Quick Start Guide document (with several examples on how to use system containers).\n  * Added support for running Systemd in a system container.\n  * Added support for the Ubuntu shiftfs filesytem (replaces the Nestybox shiftfs).\n  * Using `docker build` to create a system container image that includes inner container images.\n  * Using `docker commit` to create a system container image that includes inner container images.\n  * Added support for mounts over a system container's `/var/lib/docker` (for persistency of inner container images).\n  * Made multiple improvements to the Sysbox User's Guide and Design Guide docs.\n  * Rebranded 'sysboxd' to 'sysbox'.\n### Removed\n  * Deprecated Nestybox shiftfs module.\n\n## [0.1.1] - 2019-09-04\n### Added\n  * Extend installer support to latest Ubuntu kernel (5.0.0-27).\n\n## [0.1.0] - 2019-08-28\n### Added\n  * Initial public release.\n  * Added external documentation: README, user-guide, design-guide, etc.\n  * Extend support to Ubuntu-Bionic (+5.x kernel) with userns-remap disabled.\n  * Added consistent versioning to all sysboxd components.\n  * Increased list of kernels supported by nbox-shiftfs module (refer to nbox-shiftfs module documentation).\n  * Add changelog info to the debian package installer.\n\n## [0.0.1] - unreleased\n### Added\n  * Internal release (non-public).\n  * Supports launching system containers with Docker.\n  * Supports running Docker inside a system container.\n  * Supports exclusive uid(gid) mappings per system container.\n  * Supports partially virtualized procfs.\n  * Supports docker with or without userns-remap.\n  * Supports Ubuntu Disco (with userns-remap disabled).\n  * Supports Ubuntu Disco, Cosmic, and Bionic (with userns-remap enabled).\n  * Includes the Nestybox shiftfs kernel module for uid(gid) shifting.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.666015625,
          "content": "# Contribute to Sysbox\n\nWant to contribute to Sysbox? Thanks, the Sysbox community welcomes your\ncontributions!\n\nThis page contains information about the process to contribute.\n\n## Contents\n\n-   [Reporting security issues](#reporting-security-issues)\n-   [Reporting other issues](#reporting-other-issues)\n-   [Documentation Changes](#documentation-changes)\n-   [Developer's guide](#developers-guide)\n-   [We welcome pull requests](#we-welcome-pull-requests)\n-   [Criteria for accepting changes](#criteria-for-accepting-changes)\n-   [Open-source vs. proprietary functionality](#open-source-vs-proprietary-functionality)\n-   [Write clean code](#write-clean-code)\n-   [Testing is super important](#testing-is-super-important)\n-   [Please keep the documentation up to date](#please-keep-the-documentation-up-to-date)\n-   [Process for creating pull requests](#process-for-creating-pull-requests)\n-   [Sign your work](#sign-your-work)\n\n## Reporting security issues\n\nStrong container security is of upmost concern for Sysbox.\n\nIf you are reporting a security issue, please do not create an issue or file a\npull request on GitHub. Instead, disclose the issue responsibly by sending an\nemail to security@nestybox.com.\n\n## Reporting other issues\n\nPlease follow these guidelines when filing issues with Sysbox.\n\nIn all cases, first search existing issues, as it's likely the bug has already\nbeen reported (and we want to avoid multiple bugs for the same issue).\n\n### Bug Reports\n\n* Create a GitHub issue with the label \"Bug\"\n\n* Add a label corresponding to the Sysbox release (e.g. `v0.2.0`)\n\n* Describe the issue as clearly and completely as possible.\n\n* Describe how to best reproduce it.\n\n* Include information about the host's Linux version (e.g., `lsb_release`, `uname -a`).\n\n* If appropriate, consider generating a core-dump of the Sysbox daemon that is\nnot operating as expected. Refer to this [link](docs/user-guide/troubleshoot.md#core-dump-generation) for the details.\n\n### Feature requests\n\n* Create a GitHub issue with the label \"Enhancement\"\n\n* Add a label corresponding to the Sysbox release (e.g. `v0.2.0`)\n\n* Describe the need for the proposed enhancement.\n\n* Provide a high-level description of the enhancement and its benefits.\n\n### Documentation Changes\n\n* Create a GitHub issue with the label \"Documentation\"\n\n* Describe the need for the proposed documentation change.\n\n## Developer's guide\n\nIf you wish to contribute code changes to Sysbox, the [developer's guide](docs/developers-guide/README.md)\nhas all the info to help you setup your environment for building and testing\nSysbox.\n\n## We welcome pull requests\n\nWe appreciate your pull requests, as they help us improve Sysbox.\n\nA pull request can fix or improve any aspect of Sysbox, from a minor\ndocumentation typo to an important feature.\n\nFor pull requests that fix bugs, add features / functionality, or change\ndocumentation in important ways, we ask that you first file an issue (see prior\nsection), such that the pull request can be coupled to that issue.\n\nFor minor changes (e.g., a small documentation typo, a small code refactoring,\nadding a small test, etc.), you can file the pull request without filing an\nissue for it.\n\nIf your pull request is not accepted on the first try, don't be discouraged. The\ncommunity will do its best to give you constructive feedback so you can improve\nthe pull request.\n\n## Criteria for accepting changes\n\nThe Sysbox maintainers are in charge of approving pull requests.\n\nThey will do so based on:\n\n* The need for the change.\n\n* Whether the change meets the goals of Sysbox project's community.\n\n* The quality of the change.\n\n* The testing done (when appropriate).\n\n## Open-source vs. proprietary functionality\n\nTo ensure synergy between the Sysbox project and companies that wish to build\nproducts based on it (such as Nestybox), we use the following criteria when\nconsidering adding functionality to Sysbox:\n\nAny features that mainly benefit individual practitioners are made part of the Sysbox\nopen-source project. Any features that mainly address enterprise-level needs are\nnot part of the Sysbox open-source project.\n\nThe Sysbox maintainers will make this determination on a feature by feature\nbasis, with total transparency.\n\nThis way, the Sysbox open source project satisfies the needs of individual\npractitioners while giving companies such as Nestybox the chance to monetize on\nenterprise-level features (which in turn enables Nestybox to continue to sponsor\nthe Sysbox open source project).\n\n## Write clean code\n\nWrite clean code (keep it simple, make it easy to understand for your fellow\ncontributors).\n\nSysbox is written in [Go](https://golang.org/). Always run `gofmt -s -w file.go`\non each changed file before committing your changes. Most editors have plugins\nthat do this automatically.\n\n## Testing is super important\n\nAll functional changes to Sysbox must pass the Sysbox's regression test suite\nbefore the pull request can be accepted.\n\nIn addition, changes that fix bugs or add new functionality must be accompanied\nwith a corresponding set of tests.\n\nIn Sysbox, tests are divided into two categories:\n\n* Unit tests: written with Go's \"testing\" package.\n\n* Integration tests: written using the [bats](https://github.com/sstephenson/bats) framework.\n\nIn general, having a combination of these is best, with unit tests performing\nthorough testing (main code paths, corner-cases, etc) and integration tests\nfocusing on interaction of the target functionality with other aspects of Sysbox\nor the rest of the system.\n\nThe [developer's guide](docs/developers-guide/README.md) has the info on how to run\nSysbox tests.\n\n## Please keep the documentation up to date\n\nSysbox is a complex piece of software. As such, clear and concise documentation\ndescribing its features and functionality is of upmost importance.\n\nPlease update the docs whenever:\n\n* You see a mismatch between the document and existing functionality.\n\n* You add a new feature.\n\n* You change or remove an existing feature.\n\n* You spot typos, missing docs, or unclear/incorrect docs.\n\nAnd remember: the documentation is as important as the software itself.\n\n## Process for creating pull requests\n\n1) Fork the Sysbox repo\n\n2) Make changes on your fork in a dedicated branch.\n\n- Name it XXX-something where XXX is the number of the issue (e.g., \"202-fix\").\n\n3) Test your changes (see [above](#testing-is-super-important).\n\n4) Commit the changes in your branch\n\n- Commit messages must start with a capitalized and short summary (max. 70\n  chars) written in the imperative, followed by an optional, more detailed\n  explanatory text which is separated from the summary by an empty line.\n\n- For example:\n\n  \"Add a command line option to configure logging in sysbox-mgr.\n\n  Add the \"--log-level\" option to the sysbox-mgr, to configure\n  logging levels. We initially support the following log-levels ...\"\n\n- Sign-off the commit (see [next section](#sign-your-work)).\n\n5) Submit the pull request.\n\n- Pull requests descriptions should be as clear as possible and include a\n  reference to all the issues that they address.\n\n- Pull requests must not contain commits from other users or branches.\n\nCode review comments may be added to your pull request. Discuss, then make the\nsuggested modifications and push additional commits to your feature branch. Be\nsure to post a comment after pushing. The new commits will show up in the pull\nrequest automatically, but the reviewers will not be notified unless you\ncomment.\n\nBefore the pull request is merged, make sure that you squash your commits into\nlogical units of work using `git rebase -i` and `git push -f`. After every\ncommit the test suite should be passing.\n\nInclude documentation changes in the same commit so that a revert would remove\nall traces of the feature or fix.\n\nCommits that fix or close an issue should include a reference like `Closes\n#XXX` or `Fixes #XXX`.\n\n## Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the\npatch, which certifies that you wrote it or otherwise have the right to\npass it on as an open-source patch.\n\nThe rules are pretty simple: if you can certify the below (from\n[developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nthen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe@gmail.com>\n\nusing your real name (sorry, no pseudonyms or anonymous contributions.)\n\nYou can add the sign off when creating the git commit via `git commit -s`.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5078125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2020 Nestybox, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.0986328125,
          "content": "Rodny Molina <rmolina@nestybox.com> (@rodnymolina)\nCesar Talledo <ctalledo@nestybox.com> (@ctalledo)\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 22.8828125,
          "content": "#\n# Sysbox Makefile\n#\n\n.PHONY: sysbox sysbox-debug sysbox-static \\\n\tsysbox-local sysbox-debug-local sysbox-static-local \\\n\tsysbox-runc sysbox-runc-static sysbox-runc-debug \\\n\tsysbox-fs sysbox-fs-static sysbox-fs-debug \\\n\tsysbox-mgr sysbox-mgr-static sysbox-mgr-debug \\\n\tsysbox-ipc \\\n\tinstall uninstall \\\n\ttest \\\n\ttest-sysbox test-sysbox-ci test-sysbox-systemd test-sysbox-installer \\\n\ttest-runc test-fs test-mgr test-sysbox-libs \\\n\ttest-shell test-shell-debug test-shell-systemd test-shell-systemd-debug test-shell-installer test-shell-installer-debug \\\n\ttest-img test-img-systemd test-cleanup \\\n\ttest-sysbox-local test-sysbox-local-installer test-sysbox-local-ci test-fs-local test-mgr-local test-sysbox-libs-local \\\n\tlint lint-local lint-sysbox-local lint-tests-local shfmt \\\n\tsysbox-runc-recvtty \\\n\tlistRuncPkgs listFsPkgs listMgrPkgs listSysboxLibsPkgs \\\n\tclean\n\nexport SHELL=bash\n\nifeq ($(HOSTNAME),)\n\texport HOSTNAME=$(shell hostname)\nendif\n\nexport VERSION := $(shell cat ./VERSION)\nexport EDITION := Community Edition (CE)\nexport PACKAGE := sysbox-ce\nexport HOST_UID ?= $(shell id -u)\nexport HOST_GID ?= $(shell id -g)\n\n# Obtain the current system architecture.\nUNAME_M := $(shell uname -m)\nifeq ($(UNAME_M),x86_64)\n\tSYS_ARCH := amd64\nelse ifeq ($(UNAME_M),aarch64)\n\tSYS_ARCH := arm64\nelse ifeq ($(UNAME_M),arm)\n\tSYS_ARCH := armhf\nelse ifeq ($(UNAME_M),armel)\n\tSYS_ARCH := armel\nendif\n\n# Set target architecture if not explicitly defined by user.\nifeq ($(TARGET_ARCH),)\n\tTARGET_ARCH := $(SYS_ARCH)\nendif\n\n# Compute the target triple.\nifeq ($(TARGET_ARCH),armel)\n\tHOST_TRIPLE := arm-linux-gnueabi\nelse ifeq ($(TARGET_ARCH),armhf)\n\tHOST_TRIPLE := arm-linux-gnueabihf\nelse ifeq ($(TARGET_ARCH),arm64)\n\tHOST_TRIPLE := aarch64-linux-gnu\nelse\n\tHOST_TRIPLE := x86_64-linux-gnu\nendif\n\nexport SYS_ARCH\nexport TARGET_ARCH\nexport HOST_TRIPPLE\n\n# Source-code paths of the sysbox binary targets.\nSYSRUNC_DIR     := sysbox-runc\nSYSFS_DIR       := sysbox-fs\nSYSMGR_DIR      := sysbox-mgr\nSYSIPC_DIR      := sysbox-ipc\nSYSLIBS_DIR     := sysbox-libs\n\nPROJECT := /root/nestybox/sysbox\n\n# Sysbox binary targets destination.\nifeq ($(DESTDIR),)\nINSTALL_DIR := /usr/bin\nelse\nINSTALL_DIR := ${DESTDIR}\nendif\n\nIMAGE_BASE_DISTRO := $(shell cat /etc/os-release | grep \"^ID=\" | cut -d \"=\" -f2 | tr -d '\"')\n\n# Host kernel info\nKERNEL_REL := $(shell uname -r)\nKERNEL_REL_MAJ := $(shell echo $(KERNEL_REL) | cut -d'.' -f1)\nKERNEL_REL_MIN := $(shell echo $(KERNEL_REL) | cut -d'.' -f2)\nexport KERNEL_REL\n\n# Sysbox image-generation globals utilized during the sysbox's building and testing process.\nifeq ($(IMAGE_BASE_DISTRO),$(filter $(IMAGE_BASE_DISTRO),centos fedora redhat almalinux rocky amzn))\n\tIMAGE_BASE_RELEASE := $(shell cat /etc/os-release | grep \"^VERSION_ID\" | cut -d \"=\" -f2 | tr -d '\"' | cut -d \".\" -f1)\n\tKERNEL_HEADERS := kernels/$(KERNEL_REL)\nelse\n\tIMAGE_BASE_RELEASE := $(shell cat /etc/os-release | grep \"^VERSION_CODENAME\" | cut -d \"=\" -f2)\n\tifeq ($(IMAGE_BASE_DISTRO),linuxmint)\n\t\tIMAGE_BASE_DISTRO := ubuntu\n\t\tifeq ($(IMAGE_BASE_RELEASE),$(filter $(IMAGE_BASE_RELEASE),ulyana ulyssa uma))\n\t\t\tIMAGE_BASE_RELEASE := focal\n\t\tendif\n\t\tifeq ($(IMAGE_BASE_RELEASE),$(filter $(IMAGE_BASE_RELEASE),tara tessa tina tricia))\n\t\t\tIMAGE_BASE_RELEASE := bionic\n\t\tendif\n\tendif\n\tKERNEL_HEADERS := linux-headers-$(KERNEL_REL)\n\tKERNEL_HEADERS_BASE := $(shell find /usr/src/$(KERNEL_HEADERS) -maxdepth 1 -type l -exec readlink {} \\; | cut -d\"/\" -f2 | egrep -v \"^\\.\\.\" | head -1)\nendif\n\nTEST_DIR := $(CURDIR)/tests\nTEST_IMAGE := sysbox-test-$(TARGET_ARCH)\nTEST_IMAGE_FLATCAR := sysbox-test-flatcar-$(TARGET_ARCH):$(FLATCAR_VERSION)\n\nTEST_SYSTEMD_IMAGE := sysbox-systemd-test\nTEST_SYSTEMD_DOCKERFILE := Dockerfile.systemd.$(IMAGE_BASE_DISTRO)\n\nTEST_FILES := $(shell find tests -type f | egrep \"\\.bats\")\nTEST_SCR := $(shell grep -rwl -e '\\#!/bin/bash' -e '\\#!/bin/sh' tests/*)\n\nifeq ($(KERNEL_HEADERS_BASE), )\n\tKERNEL_HEADERS_MOUNTS := -v /usr/src/$(KERNEL_HEADERS):/usr/src/$(KERNEL_HEADERS):ro\nelse\n\tKERNEL_HEADERS_MOUNTS := -v /usr/src/$(KERNEL_HEADERS):/usr/src/$(KERNEL_HEADERS):ro \\\n\t\t\t\t -v /usr/src/$(KERNEL_HEADERS_BASE):/usr/src/$(KERNEL_HEADERS_BASE):ro\nendif\n\nexport KERNEL_HEADERS\nexport KERNEL_HEADERS_MOUNTS\n\nPACKAGE_FILE_PATH ?= sysbox-pkgr/deb/build/$(TARGET_ARCH)/$(IMAGE_BASE_DISTRO)-$(IMAGE_BASE_RELEASE)\nPACKAGE_FILE_NAME := $(PACKAGE)_$(VERSION).linux_$(TARGET_ARCH).deb\n\n# Volumes to mount into the privileged test container. These are\n# required because certain mounts inside the test container can't\n# be backed by overlayfs (e.g., /var/lib/docker, /var/lib/sysbox, etc.).\n# Note that the volumes must not be on tmpfs either, because the\n# docker engine inside the privileged test container will mount overlayfs\n# on top , and overlayfs can't be mounted on top of tmpfs.\nTEST_VOL1 := /var/tmp/sysbox-test-var-lib\nTEST_VOL2 := /var/tmp/sysbox-test-scratch\nTEST_VOL3 := /var/tmp/sysbox-test-var-run\n\nexport TEST_VOL1\nexport TEST_VOL2\nexport TEST_VOL3\n\n# In scenarios where the egress-interface's mtu is lower than expected (1500 bytes),\n# we must explicitly configure dockerd with such a value.\nEGRESS_IFACE := $(shell ip route show | awk '/default via/ {print $$5}')\nEGRESS_IFACE_MTU := $(shell ip link show dev $(EGRESS_IFACE) | awk '/mtu/ {print $$5}')\n\n# Ensure that a gitconfig file is always present.\n$(shell touch $(HOME)/.gitconfig)\n\n#\n# build targets\n# TODO: parallelize building of runc, fs, and mgr; note that grpc must be built before these.\n#\n\n.DEFAULT := help\n\nhelp:\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\n\\033[1mUsage:\\n  make \\033[36m<target>\\033[0m\\n\"} \\\n\t/^[a-zA-Z_-]+:.*?##/ { printf \"  \\033[36m%-40s\\033[0m %s\\n\", $$1, $$2 } /^##@/ \\\n\t{ printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\n##@ Building targets\n\nDOCKER_SYSBOX_BLD := docker run --privileged --rm --runtime=runc      \\\n\t\t\t--hostname sysbox-build                       \\\n\t\t\t--name sysbox-build                           \\\n\t\t\t-e SYS_ARCH=$(SYS_ARCH)                       \\\n\t\t\t-e TARGET_ARCH=$(TARGET_ARCH)                 \\\n\t\t\t-v $(CURDIR):$(PROJECT)                       \\\n\t\t\t-v $(GOPATH)/pkg/mod:/go/pkg/mod              \\\n\t\t\t-v $(HOME)/.gitconfig:/root/.gitconfig        \\\n\t\t\t-v /lib/modules/$(KERNEL_REL):/lib/modules/$(KERNEL_REL):ro \\\n\t\t\t$(KERNEL_HEADERS_MOUNTS) \\\n\t\t\t$(TEST_IMAGE)\n\nDOCKER_SYSBOX_BLD_FLATCAR := docker run --privileged --rm --runtime=runc      \\\n\t\t\t--hostname sysbox-build                       \\\n\t\t\t--name sysbox-build                           \\\n\t\t\t-e ARCH=$(ARCH)                               \\\n\t\t\t-v $(CURDIR):$(PROJECT)                       \\\n\t\t\t-v $(GOPATH)/pkg/mod:/go/pkg/mod              \\\n\t\t\t-v $(HOME)/.gitconfig:/root/.gitconfig        \\\n\t\t\t$(TEST_IMAGE_FLATCAR)\n\nsysbox: ## Build sysbox (the build occurs inside a container, so the host is not polluted)\nsysbox: test-img\n\t@printf \"\\n** Building sysbox (target-arch: $(TARGET_ARCH)) **\\n\\n\"\n\t$(DOCKER_SYSBOX_BLD) /bin/bash -c \"export HOST_UID=$(HOST_UID) && \\\n\t\texport HOST_GID=$(HOST_GID) && buildContainerInit sysbox-local\"\n\nsysbox-flatcar: test-img-flatcar\n\t@printf \"\\n** Building sysbox for Kinvolk's Flatcar OS (target-arch: $(TARGET_ARCH)) **\\n\\n\"\n\t$(DOCKER_SYSBOX_BLD_FLATCAR) /bin/bash -c \"export HOST_UID=$(HOST_UID) && \\\n\t\texport HOST_GID=$(HOST_GID) && buildContainerInit sysbox-local\"\n\nsysbox-debug: ## Build sysbox (with debug symbols)\nsysbox-debug: test-img\n\t@printf \"\\n** Building sysbox with debuging on (target-arch: $(TARGET_ARCH)) **\\n\\n\"\n\t$(DOCKER_SYSBOX_BLD) /bin/bash -c \"export HOST_UID=$(HOST_UID) && \\\n\t\texport HOST_GID=$(HOST_GID) && buildContainerInit sysbox-debug-local\"\n\nsysbox-static: ## Build sysbox (static linking)\nsysbox-static: test-img\n\t@printf \"\\n** Building sysbox statically (target-arch: $(TARGET_ARCH)) **\\n\\n\"\n\t$(DOCKER_SYSBOX_BLD) /bin/bash -c \"export HOST_UID=$(HOST_UID) && \\\n\t\texport HOST_GID=$(HOST_GID) && buildContainerInit sysbox-static-local\"\n\nsysbox-local: sysbox-ipc sysbox-runc sysbox-fs sysbox-mgr\n\t@echo $(HOSTNAME)-$(TARGET_ARCH) > .buildinfo\n\nsysbox-debug-local: sysbox-runc-debug sysbox-fs-debug sysbox-mgr-debug\n\nsysbox-static-local: sysbox-runc-static sysbox-fs-static sysbox-mgr-static\n\nsysbox-runc: sysbox-ipc\n\t@cd $(SYSRUNC_DIR) && make\n\t@cd $(SYSRUNC_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-runc-debug: sysbox-ipc\n\t@cd $(SYSRUNC_DIR) && make sysbox-runc-debug\n\t@cd $(SYSRUNC_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-runc-static: sysbox-ipc\n\t@cd $(SYSRUNC_DIR) && make static\n\t@cd $(SYSRUNC_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-fs: sysbox-ipc\n\t@cd $(SYSFS_DIR) && make\n\t@cd $(SYSFS_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-fs-debug: sysbox-ipc\n\t@cd $(SYSFS_DIR) && make sysbox-fs-debug\n\t@cd $(SYSFS_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-fs-static: sysbox-ipc\n\t@cd $(SYSFS_DIR) && make sysbox-fs-static\n\t@cd $(SYSFS_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-mgr: sysbox-ipc\n\t@cd $(SYSMGR_DIR) && make\n\t@cd $(SYSMGR_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-mgr-debug: sysbox-ipc\n\t@cd $(SYSMGR_DIR) && make sysbox-mgr-debug\n\t@cd $(SYSMGR_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-mgr-static: sysbox-ipc\n\t@cd $(SYSMGR_DIR) && make sysbox-mgr-static\n\t@cd $(SYSMGR_DIR) && chown -R $(HOST_UID):$(HOST_GID) build\n\nsysbox-ipc:\n\t@cd $(SYSIPC_DIR) && make sysbox-ipc\n\t@cd $(SYSIPC_DIR) && chown -R $(HOST_UID):$(HOST_GID) *\n\n#\n# install targets (require root privileges)\n#\n\n##@ Installation targets\n\ninstall: ## Install all sysbox binaries (requires root privileges)\n\tinstall -D -m0755 sysbox-fs/build/$(TARGET_ARCH)/sysbox-fs $(INSTALL_DIR)/sysbox-fs\n\tinstall -D -m0755 sysbox-mgr/build/$(TARGET_ARCH)/sysbox-mgr $(INSTALL_DIR)/sysbox-mgr\n\tinstall -D -m0755 sysbox-runc/build/$(TARGET_ARCH)/sysbox-runc $(INSTALL_DIR)/sysbox-runc\n\tinstall -D -m0755 scr/sysbox $(INSTALL_DIR)/sysbox\n\nuninstall: ## Uninstall all sysbox binaries (requires root privileges)\n\trm -f $(INSTALL_DIR)/sysbox\n\trm -f $(INSTALL_DIR)/sysbox-fs\n\trm -f $(INSTALL_DIR)/sysbox-mgr\n\trm -f $(INSTALL_DIR)/sysbox-runc\n\n#\n# Test targets\n#\n# These targets run Sysbox tests within a privileged test container.\n# they are meant as development tests.\n#\n\n# For batch targets\nDOCKER_RUN := docker run --privileged --rm --runtime=runc             \\\n\t\t\t--hostname sysbox-test                        \\\n\t\t\t--name sysbox-test                            \\\n\t\t\t-e HOST_UID=$(HOST_UID)                       \\\n\t\t\t-e HOST_GID=$(HOST_GID)                       \\\n\t\t\t-v $(CURDIR):$(PROJECT)                       \\\n\t\t\t-v $(TEST_VOL1):/var/lib                      \\\n\t\t\t-v $(TEST_VOL2):/mnt/scratch                  \\\n\t\t\t-v $(TEST_VOL3):/var/run                      \\\n\t\t\t-v $(GOPATH)/pkg/mod:/go/pkg/mod              \\\n\t\t\t-v /lib/modules/$(KERNEL_REL):/lib/modules/$(KERNEL_REL):ro \\\n\t\t\t-v $(HOME)/.gitconfig:/root/.gitconfig        \\\n\t\t\t$(KERNEL_HEADERS_MOUNTS) \\\n\t\t\t$(TEST_IMAGE)\n\n# For interactive targets\nDOCKER_RUN_TTY := docker run -it --privileged --rm --runtime=runc         \\\n\t\t\t--hostname sysbox-test                        \\\n\t\t\t--name sysbox-test                            \\\n\t\t\t-e HOST_UID=$(HOST_UID)                       \\\n\t\t\t-e HOST_GID=$(HOST_GID)                       \\\n\t\t\t-v $(CURDIR):$(PROJECT)                       \\\n\t\t\t-v $(TEST_VOL1):/var/lib                      \\\n\t\t\t-v $(TEST_VOL2):/mnt/scratch                  \\\n\t\t\t-v $(TEST_VOL3):/var/run                      \\\n\t\t\t-v $(GOPATH)/pkg/mod:/go/pkg/mod              \\\n\t\t\t-v /lib/modules/$(KERNEL_REL):/lib/modules/$(KERNEL_REL):ro \\\n\t\t\t-v $(HOME)/.gitconfig:/root/.gitconfig        \\\n\t\t\t$(KERNEL_HEADERS_MOUNTS) \\\n\t\t\t$(TEST_IMAGE)\n\n# Must use \"--cgroups private\" as otherwise the inner Docker may get confused\n# when configured with the systemd cgroup driver.\nDOCKER_RUN_SYSTEMD := docker run -d --rm --runtime=runc --privileged  \\\n\t\t\t--hostname sysbox-test                        \\\n\t\t\t--name sysbox-test                            \\\n\t\t\t--cgroupns private                            \\\n\t\t\t-e HOST_UID=$(HOST_UID)                       \\\n\t\t\t-e HOST_GID=$(HOST_GID)                       \\\n\t\t\t-v $(CURDIR):$(PROJECT)                       \\\n\t\t\t-v $(TEST_VOL1):/var/lib                      \\\n\t\t\t-v $(TEST_VOL2):/mnt/scratch                  \\\n\t\t\t-v $(TEST_VOL3):/var/run                      \\\n\t\t\t-v $(GOPATH)/pkg/mod:/go/pkg/mod              \\\n\t\t\t-v /lib/modules:/lib/modules:ro               \\\n\t\t\t-v $(HOME)/.gitconfig:/root/.gitconfig        \\\n\t\t\t$(KERNEL_HEADERS_MOUNTS)                      \\\n\t\t\t--mount type=tmpfs,destination=/run           \\\n\t\t\t--mount type=tmpfs,destination=/run/lock      \\\n\t\t\t$(TEST_SYSTEMD_IMAGE)\n\nDOCKER_EXEC := docker exec -it sysbox-test\nDOCKER_STOP := docker stop -t0 sysbox-test\n\n##@ Testing targets\n\ntest: ## Run all sysbox test suites\ntest: test-fs test-mgr test-runc test-sysbox-libs test-sysbox test-sysbox-systemd\n\ntest-sysbox: ## Run sysbox integration tests\ntest-sysbox: test-prereq test-img\n\t@printf \"\\n** Running sysbox integration tests **\\n\\n\"\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN) /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\ttestContainerInit && make test-sysbox-local TESTPATH=$(TESTPATH)\"\n\ntest-sysbox-ci: ## Run sysbox integration tests (continuous integration)\ntest-sysbox-ci: test-prereq test-img test-fs test-mgr\n\t@printf \"\\n** Running sysbox integration tests **\\n\\n\"\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN) /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\ttestContainerInit && make test-sysbox-local-ci TESTPATH=$(TESTPATH)\"\n\ntest-sysbox-systemd: ## Run sysbox integration tests in a test container with systemd\ntest-sysbox-systemd: test-prereq test-img-systemd\n\t@printf \"\\n** Running sysbox integration tests (with systemd) **\\n\\n\"\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec sysbox-test /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\ttestContainerInit && make test-sysbox-local TESTPATH=$(TESTPATH)\"\n\t$(DOCKER_STOP)\n\ntest-sysbox-installer: ## Run sysbox integration tests in a test container with systemd and the sysbox installer\ntest-sysbox-installer: test-prereq test-img-systemd\n\t@printf \"\\n** Running sysbox integration tests (with systemd + the sysbox installer) **\\n\\n\"\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec sysbox-test /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\texport SB_INSTALLER=true SB_PACKAGE=$(PACKAGE) SB_PACKAGE_FILE=$(PACKAGE_FILE_PATH)/$(PACKAGE_FILE_NAME) && \\\n\t\ttestContainerInit && \\\n\t\tmake test-sysbox-local TESTPATH=$(TESTPATH) && \\\n\t\tmake test-sysbox-local-installer TESTPATH=$(TESTPATH)\"\n\t$(DOCKER_STOP)\n\ntest-runc: ## Run sysbox-runc unit & integration tests\ntest-runc: test-prereq sysbox\n\t@printf \"\\n** Running sysbox-runc unit & integration tests **\\n\\n\"\n\tcd $(SYSRUNC_DIR) && make clean && make test\n\ntest-fs: ## Run sysbox-fs unit tests\ntest-fs: test-prereq sysbox\n\t@printf \"\\n** Running sysbox-fs unit tests **\\n\\n\"\n\t$(DOCKER_RUN) /bin/bash -c \"make --no-print-directory test-fs-local\"\n\ntest-mgr: ## Run sysbox-mgr unit tests\ntest-mgr: test-prereq test-img\n\t@printf \"\\n** Running sysbox-mgr unit tests **\\n\\n\"\n\t$(DOCKER_RUN) /bin/bash -c \"make --no-print-directory test-mgr-local\"\n\ntest-sysbox-libs: test-prereq sysbox\n\t@printf \"\\n** Running sysbox-libs unit tests **\\n\\n\"\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN) /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\ttestContainerInit && \\\n\t\tmake --no-print-directory test-sysbox-libs-local\"\n\ntest-shell: ## Get a shell in the test container (useful for debug)\ntest-shell: test-prereq test-img\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_TTY) /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\tmake sysbox-runc-recvtty && \\\n\t\ttestContainerInit && /bin/bash\"\n\ntest-shell-debug: test-prereq test-img\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_TTY) /bin/bash -c \"export PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) && \\\n\t\tmake sysbox-runc-recvtty && \\\n\t\texport DEBUG_ON=true && testContainerInit && /bin/bash\"\n\ntest-shell-systemd: ## Get a shell in the test container that includes systemd (useful for debug)\ntest-shell-systemd: test-prereq test-img-systemd\n\t$(eval DOCKER_ENV := -e PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU))\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec $(DOCKER_ENV) sysbox-test make sysbox-runc-recvtty\n\tdocker exec $(DOCKER_ENV) sysbox-test testContainerInit\n\tdocker exec -it $(DOCKER_ENV) sysbox-test /bin/bash\n\t$(DOCKER_STOP)\n\ntest-shell-systemd-debug: test-img-systemd\n\t$(eval DOCKER_ENV := -e PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) -e DEBUG_ON=true)\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec $(DOCKER_ENV) sysbox-test make sysbox-runc-recvtty\n\tdocker exec $(DOCKER_ENV) sysbox-test testContainerInit\n\tdocker exec -it $(DOCKER_ENV) sysbox-test /bin/bash\n\t$(DOCKER_STOP)\n\ntest-shell-installer: ## Get a shell in the test container that includes systemd and the sysbox installer (useful for debug)\ntest-shell-installer: test-prereq test-img-systemd\n\t$(eval DOCKER_ENV := -e PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) \\\n\t\t-e SB_INSTALLER=true -e SB_PACKAGE=$(PACKAGE) \\\n\t\t-e SB_PACKAGE_FILE=$(PACKAGE_FILE_PATH)/$(PACKAGE_FILE_NAME))\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec $(DOCKER_ENV) sysbox-test make sysbox-runc-recvtty\n\tdocker exec $(DOCKER_ENV) sysbox-test testContainerInit\n\tdocker exec -it $(DOCKER_ENV) sysbox-test /bin/bash\n\t$(DOCKER_STOP)\n\ntest-shell-installer-debug: test-prereq test-img-systemd\n\t$(eval DOCKER_ENV := -e PHY_EGRESS_IFACE_MTU=$(EGRESS_IFACE_MTU) \\\n\t\t-e SB_INSTALLER=true -e SB_PACKAGE=$(PACKAGE) \\\n\t\t-e SB_PACKAGE_FILE=$(PACKAGE_FILE_PATH)/$(PACKAGE_FILE_NAME) \\\n\t\t-e DEBUG_ON=true)\n\t$(TEST_DIR)/scr/testContainerPre $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\t$(DOCKER_RUN_SYSTEMD)\n\tdocker exec $(DOCKER_ENV) sysbox-test make sysbox-runc-recvtty\n\tdocker exec $(DOCKER_ENV) sysbox-test testContainerInit\n\tdocker exec -it $(DOCKER_ENV) sysbox-test /bin/bash\n\t$(DOCKER_STOP)\n\ntest-prereq:\nifneq ($(SYS_ARCH),$(TARGET_ARCH))\n\t@printf \"\\n\\n*** Test execution targets are not allowed in cross-compilation setups: sys-arch \\\"$(SYS_ARCH)\\\", target-arch \\\"$(TARGET_ARCH)\\\" ***\\n\\n\"\n\t@exit 1\nendif\n\ntest-img: ## Build test container image\ntest-img:\n\t@printf \"\\n** Building the test container **\\n\\n\"\n\t@cd $(TEST_DIR) && docker build -t $(TEST_IMAGE) \\\n\t\t--build-arg sys_arch=$(SYS_ARCH) --build-arg target_arch=$(TARGET_ARCH) \\\n\t\t-f Dockerfile.$(IMAGE_BASE_DISTRO)-$(IMAGE_BASE_RELEASE) .\n\ntest-img-systemd: ## Build test container image that includes systemd\ntest-img-systemd: test-img\n\t@printf \"\\n** Building the test container image (includes systemd) **\\n\\n\"\n\t@cd $(TEST_DIR) && docker build -t $(TEST_SYSTEMD_IMAGE) \\\n\t\t--build-arg sys_arch=$(SYS_ARCH) --build-arg target_arch=$(TARGET_ARCH) \\\n\t\t-f $(TEST_SYSTEMD_DOCKERFILE) .\n\ntest-img-flatcar: ## Build test container image for Flatcar\ntest-img-flatcar:\n\t@printf \"\\n** Building the test container for Flatcar **\\n\\n\"\n\t@cd $(TEST_DIR) && docker build -t $(TEST_IMAGE_FLATCAR) \\\n\t\t--build-arg arch=$(SYS_ARCH) --build-arg target_arch=$(TARGET_ARCH) \\\n\t\t--build-arg FLATCAR_VERSION=$(FLATCAR_VERSION) \\\n\t\t-f Dockerfile.flatcar .\n\ntest-cleanup: ## Clean up sysbox integration tests (requires root privileges)\ntest-cleanup: test-img\n\t@printf \"\\n** Cleaning up sysbox integration tests **\\n\\n\"\n\t$(DOCKER_RUN) /bin/bash -c \"testContainerCleanup\"\n\t$(TEST_DIR)/scr/testContainerPost $(TEST_VOL1) $(TEST_VOL2) $(TEST_VOL3)\n\n#\n# Local test targets (these are invoked from within the test container\n# by the test target above); in theory they can run directly on a host\n# machine, but they require root privileges and might messup the state\n# of the host.\n#\n\ntest-sysbox-local: sysbox-runc-recvtty\n\t$(TEST_DIR)/scr/testSysbox $(TESTPATH)\n\ntest-sysbox-local-installer: sysbox-runc-recvtty\n\t$(TEST_DIR)/scr/testSysboxInstaller $(TESTPATH)\n\ntest-sysbox-local-ci: sysbox-runc-recvtty\n\tTEST_SYSBOX_CI=true $(TEST_DIR)/scr/testSysbox $(TESTPATH)\n\ntest-fs-local: sysbox-ipc\n\tcd $(SYSFS_DIR) && go test -buildvcs=false -timeout 3m -v $(fsPkgs)\n\ntest-mgr-local: sysbox-ipc\n\tdockerd > /var/log/dockerd.log 2>&1 &\n\tsleep 2\n\tcd $(SYSMGR_DIR) && go test -buildvcs=false -timeout 3m -v $(mgrPkgs)\n\ntest-sysbox-libs-local:\n\t@for dir in $(sysboxLibsPkgDirs); do \\\n\t\tpushd $$dir > /dev/null; \\\n\t\tgo test ./... || break; \\\n\t\tpopd > /dev/null; \\\n\tdone\n\n##@ Code Hygiene targets\n\nlint: ## Runs lint checker on sysbox source code and tests\nlint: test-img\n\t@printf \"\\n** Linting sysbox **\\n\\n\"\n\t$(DOCKER_SYSBOX_BLD) /bin/bash -c \"make lint-local\"\n\nlint-local: lint-sysbox-local lint-tests-local\n\nlint-sysbox-local:\n\t@cd $(SYSRUNC_DIR) && make lint\n\t@cd $(SYSMGR_DIR) && make lint\n\t@cd $(SYSFS_DIR) && make lint\n\t@cd $(SYSIPC_DIR) && make lint\n\t@cd $(SYSLIBS_DIR) && make lint\n\nlint-tests-local:\n\tshellcheck $(TEST_FILES)\n\tshellcheck $(TEST_SCR)\n\nshfmt: ## Formats shell scripts in the repo; requires shfmt.\nshfmt:\n\tshfmt -ln bats -d -w $(TEST_FILES)\n\tshfmt -ln bash -d -w $(TEST_SCR)\n\n#\n# Misc targets\n#\n\n# recvtty is a tool inside the sysbox-runc repo that is needed by some integration tests\nsysbox-runc-recvtty: sysbox-runc/contrib/cmd/recvtty/recvtty\n\nsysbox-runc/contrib/cmd/recvtty/recvtty:\n\t@cd $(SYSRUNC_DIR) && make recvtty\n\t@cd $(SYSRUNC_DIR) && chown $(HOST_UID):$(HOST_GID) contrib/cmd/recvtty/recvtty\n\nlistRuncPkgs:\n\t@echo $(runcPkgs)\n\nlistFsPkgs:\n\t@echo $(fsPkgs)\n\nlistMgrPkgs:\n\t@echo $(mgrPkgs)\n\nlistSysboxLibsPkgs:\n\t@echo $(sysboxLibsPkgs)\n\n#\n# cleanup targets\n#\n\n##@ Cleaning targets\n\ngomod-tidy: ## Clean go.mod and go.sum files across the Sysbox subrepos\ngomod-tidy:\n\t@cd $(SYSIPC_DIR) && make gomod-tidy\n\t@cd $(SYSRUNC_DIR) && make gomod-tidy\n\t@cd $(SYSMGR_DIR) && make gomod-tidy\n\t@cd $(SYSFS_DIR) && make gomod-tidy\n\nclean: ## Eliminate sysbox binaries\nclean:\n\tcd $(SYSRUNC_DIR) && make clean TARGET_ARCH=$(TARGET_ARCH)\n\tcd $(SYSFS_DIR) && make clean TARGET_ARCH=$(TARGET_ARCH)\n\tcd $(SYSMGR_DIR) && make clean TARGET_ARCH=$(TARGET_ARCH)\n\tcd $(SYSIPC_DIR) && make clean TARGET_ARCH=$(TARGET_ARCH)\n\trm -rf ./build/$(TARGET_ARCH)\n\n\ndistclean: ## Eliminate all sysbox binaries\ndistclean:\n\tcd $(SYSRUNC_DIR) && make distclean\n\tcd $(SYSFS_DIR) && make distclean\n\tcd $(SYSMGR_DIR) && make distclean\n\tcd $(SYSIPC_DIR) && make distclean\n\trm -rf ./build\n\n# memoize all packages once\n\n_runcPkgs = $(shell cd $(SYSRUNC_DIR) && go list -buildvcs=false ./... | grep -v vendor)\nruncPkgs = $(if $(__runcPkgs),,$(eval __runcPkgs := $$(_runcPkgs)))$(__runcPkgs)\n\n_fsPkgs = $(shell cd $(SYSFS_DIR) && go list -buildvcs=false ./... | grep -v vendor)\nfsPkgs = $(if $(__fsPkgs),,$(eval __fsPkgs := $$(_fsPkgs)))$(__fsPkgs)\n\n_mgrPkgs = $(shell cd $(SYSMGR_DIR) && go list -buildvcs=false ./... | grep -v vendor)\nmgrPkgs = $(if $(__mgrPkgs),,$(eval __mgrPkgs := $$(_mgrPkgs)))$(__mgrPkgs)\n\nsysboxLibsPkgDirs := $(shell find $(SYSLIBS_DIR) -type f -name \"go.mod\" -exec dirname {} \\;)\nsysboxLibsPkgs := $(foreach dir,$(sysboxLibsPkgDirs),$(shell cd $(dir); go list ./...; cd ..))\n"
        },
        {
          "name": "OSS_DISCLOSURES.md",
          "type": "blob",
          "size": 68.759765625,
          "content": "# Sysbox Open Source Disclosures\n\n## LGPL v2.1 Licenses\n\nThe GNU Lesser General Public License (LGPL v2.1) is applicable to the following\ncomponent(s):\n\n* libc.so.6\n* libpthread.so.0\n* nestybox/libseccomp\n\nConditions for section 6 of this license are met by disclosure of the\nSysbox source code in this repo.\n\n```\nGNU Lesser General Public License\nVersion 2.1, February 1999\nCopyright © 1991, 1999 Free Software Foundation, Inc.\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\nThis is the first released version of the Lesser GPL. It also counts as the\nsuccessor of the GNU Library Public License, version 2, hence the version number\n2.1.\n\nPreamble\n\nThe licenses for most software are designed to take away your freedom\nto share and change it. By contrast, the GNU General Public Licenses are\nintended to guarantee your freedom to share and change free software--to make\nsure the software is free for all its users.\n\nThis license, the Lesser General Public License, applies to some specially\ndesignated software packages--typically libraries--of the Free Software\nFoundation and other authors who decide to use it. You can use it too, but we\nsuggest you first think carefully about whether this license or the ordinary\nGeneral Public License is the better strategy to use in any particular case,\nbased on the explanations below.\n\nWhen we speak of free software, we are referring to freedom of use, not\nprice. Our General Public Licenses are designed to make sure that you have the\nfreedom to distribute copies of free software (and charge for this service if\nyou wish); that you receive source code or can get it if you want it; that you\ncan change the software and use pieces of it in new free programs; and that you\nare informed that you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid distributors to\ndeny you these rights or to ask you to surrender these rights. These\nrestrictions translate to certain responsibilities for you if you distribute\ncopies of the library or if you modify it.\n\nFor example, if you distribute copies of the library, whether gratis or for a\nfee, you must give the recipients all the rights that we gave you. You must make\nsure that they, too, receive or can get the source code. If you link other code\nwith the library, you must provide complete object files to the recipients, so\nthat they can relink them with the library after making changes to the library\nand recompiling it. And you must show them these terms so they know their\nrights.\n\nWe protect your rights with a two-step method: (1) we copyright the library, and\n(2) we offer you this license, which gives you legal permission to copy,\ndistribute and/or modify the library.\n\nTo protect each distributor, we want to make it very clear that there is no\nwarranty for the free library. Also, if the library is modified by someone else\nand passed on, the recipients should know that what they have is not the\noriginal version, so that the original author's reputation will not be affected\nby problems that might be introduced by others.\n\nFinally, software patents pose a constant threat to the existence of any free\nprogram. We wish to make sure that a company cannot effectively restrict the\nusers of a free program by obtaining a restrictive license from a patent\nholder. Therefore, we insist that any patent license obtained for a version of\nthe library must be consistent with the full freedom of use specified in this\nlicense.\n\nMost GNU software, including some libraries, is covered by the ordinary GNU\nGeneral Public License. This license, the GNU Lesser General Public License,\napplies to certain designated libraries, and is quite different from the\nordinary General Public License. We use this license for certain libraries in\norder to permit linking those libraries into non-free programs.\n\nWhen a program is linked with a library, whether statically or using a shared\nlibrary, the combination of the two is legally speaking a combined work, a\nderivative of the original library. The ordinary General Public License\ntherefore permits such linking only if the entire combination fits its criteria\nof freedom. The Lesser General Public License permits more lax criteria for\nlinking other code with the library.\n\nWe call this license the “Lesser” General Public License because it does Less to\nprotect the user's freedom than the ordinary General Public License. It also\nprovides other free software developers Less of an advantage over competing\nnon-free programs. These disadvantages are the reason we use the ordinary\nGeneral Public License for many libraries. However, the Lesser license provides\nadvantages in certain special circumstances.\n\nFor example, on rare occasions, there may be a special need to encourage the\nwidest possible use of a certain library, so that it becomes a de-facto\nstandard. To achieve this, non-free programs must be allowed to use the\nlibrary. A more frequent case is that a free library does the same job as widely\nused non-free libraries. In this case, there is little to gain by limiting the\nfree library to free software only, so we use the Lesser General Public License.\n\nIn other cases, permission to use a particular library in non-free programs\nenables a greater number of people to use a large body of free software. For\nexample, permission to use the GNU C Library in non-free programs enables many\nmore people to use the whole GNU operating system, as well as its variant, the\nGNU/Linux operating system.\n\nAlthough the Lesser General Public License is Less protective of the users'\nfreedom, it does ensure that the user of a program that is linked with the\nLibrary has the freedom and the wherewithal to run that program using a modified\nversion of the Library.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow. Pay close attention to the difference between a “work based on the\nlibrary” and a “work that uses the library”. The former contains code derived\nfrom the library, whereas the latter must be combined with the library in order\nto run.\n\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License Agreement applies to any software library or other program which\n   contains a notice placed by the copyright holder or other authorized party\n   saying it may be distributed under the terms of this Lesser General Public\n   License (also called “this License”). Each licensee is addressed as “you”.\n\n   A “library” means a collection of software functions and/or data prepared so\n   as to be conveniently linked with application programs (which use some of\n   those functions and data) to form executables.\n\n   The “Library”, below, refers to any such software library or work which has\n   been distributed under these terms. A “work based on the Library” means\n   either the Library or any derivative work under copyright law: that is to\n   say, a work containing the Library or a portion of it, either verbatim or\n   with modifications and/or translated straightforwardly into another\n   language. (Hereinafter, translation is included without limitation in the\n   term “modification”.)\n\n   “Source code” for a work means the preferred form of the work for making\n   modifications to it. For a library, complete source code means all the source\n   code for all modules it contains, plus any associated interface definition\n   files, plus the scripts used to control compilation and installation of the\n   library.\n\n   Activities other than copying, distribution and modification are not covered\n   by this License; they are outside its scope. The act of running a program\n   using the Library is not restricted, and output from such a program is\n   covered only if its contents constitute a work based on the Library\n   (independent of the use of the Library in a tool for writing it). Whether\n   that is true depends on what the Library does and what the program that uses\n   the Library does.\n\n1. You may copy and distribute verbatim copies of the Library's complete source\n   code as you receive it, in any medium, provided that you conspicuously and\n   appropriately publish on each copy an appropriate copyright notice and\n   disclaimer of warranty; keep intact all the notices that refer to this\n   License and to the absence of any warranty; and distribute a copy of this\n   License along with the Library.\n\n   You may charge a fee for the physical act of transferring a copy, and you may\n   at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Library or any portion of it, thus\n   forming a work based on the Library, and copy and distribute such\n   modifications or work under the terms of Section 1 above, provided that you\n   also meet all of these conditions:\n\n   a) The modified work must itself be a software library.\n\n   b) You must cause the files modified to carry prominent notices stating that\n   you changed the files and the date of any change.\n\n   c) You must cause the whole of the work to be licensed at no charge to all\n   third parties under the terms of this License.\n\n   d) If a facility in the modified Library refers to a function or a table of\n   data to be supplied by an application program that uses the facility, other\n   than as an argument passed when the facility is invoked, then you must make a\n   good faith effort to ensure that, in the event an application does not supply\n   such function or table, the facility still operates, and performs whatever\n   part of its purpose remains meaningful.\n\n   (For example, a function in a library to compute square roots has a purpose\n   that is entirely well-defined independent of the application. Therefore,\n   Subsection 2d requires that any application-supplied function or table used\n   by this function must be optional: if the application does not supply it, the\n   square root function must still compute square roots.)\n\n   These requirements apply to the modified work as a whole. If identifiable\n   sections of that work are not derived from the Library, and can be reasonably\n   considered independent and separate works in themselves, then this License,\n   and its terms, do not apply to those sections when you distribute them as\n   separate works. But when you distribute the same sections as part of a whole\n   which is a work based on the Library, the distribution of the whole must be\n   on the terms of this License, whose permissions for other licensees extend to\n   the entire whole, and thus to each and every part regardless of who wrote it.\n\n   Thus, it is not the intent of this section to claim rights or contest your\n   rights to work written entirely by you; rather, the intent is to exercise the\n   right to control the distribution of derivative or collective works based on\n   the Library.\n\n   In addition, mere aggregation of another work not based on the Library with\n   the Library (or with a work based on the Library) on a volume of a storage or\n   distribution medium does not bring the other work under the scope of this\n   License.\n\n3. You may opt to apply the terms of the ordinary GNU General Public License\n   instead of this License to a given copy of the Library. To do this, you must\n   alter all the notices that refer to this License, so that they refer to the\n   ordinary GNU General Public License, version 2, instead of to this\n   License. (If a newer version than version 2 of the ordinary GNU General\n   Public License has appeared, then you can specify that version instead if you\n   wish.) Do not make any other change in these notices.\n\n   Once this change is made in a given copy, it is irreversible for that copy,\n   so the ordinary GNU General Public License applies to all subsequent copies\n   and derivative works made from that copy.\n\n   This option is useful when you wish to copy part of the code of the Library\n   into a program that is not a library.\n\n4. You may copy and distribute the Library (or a portion or derivative of it,\n   under Section 2) in object code or executable form under the terms of\n   Sections 1 and 2 above provided that you accompany it with the complete\n   corresponding machine-readable source code, which must be distributed under\n   the terms of Sections 1 and 2 above on a medium customarily used for software\n   interchange.\n\n   If distribution of object code is made by offering access to copy from a\n   designated place, then offering equivalent access to copy the source code\n   from the same place satisfies the requirement to distribute the source code,\n   even though third parties are not compelled to copy the source along with the\n   object code.\n\n5. A program that contains no derivative of any portion of the Library, but is\n   designed to work with the Library by being compiled or linked with it, is\n   called a “work that uses the Library”. Such a work, in isolation, is not a\n   derivative work of the Library, and therefore falls outside the scope of this\n   License.\n\n   However, linking a “work that uses the Library” with the Library creates an\n   executable that is a derivative of the Library (because it contains portions\n   of the Library), rather than a “work that uses the library”. The executable\n   is therefore covered by this License. Section 6 states terms for distribution\n   of such executables.\n\n   When a “work that uses the Library” uses material from a header file that is\n   part of the Library, the object code for the work may be a derivative work of\n   the Library even though the source code is not. Whether this is true is\n   especially significant if the work can be linked without the Library, or if\n   the work is itself a library. The threshold for this to be true is not\n   precisely defined by law.\n\n   If such an object file uses only numerical parameters, data structure layouts\n   and accessors, and small macros and small inline functions (ten lines or less\n   in length), then the use of the object file is unrestricted, regardless of\n   whether it is legally a derivative work. (Executables containing this object\n   code plus portions of the Library will still fall under Section 6.)\n\n   Otherwise, if the work is a derivative of the Library, you may distribute the\n   object code for the work under the terms of Section 6. Any executables\n   containing that work also fall under Section 6, whether or not they are\n   linked directly with the Library itself.\n\n6. As an exception to the Sections above, you may also combine or link a “work\n   that uses the Library” with the Library to produce a work containing portions\n   of the Library, and distribute that work under terms of your choice, provided\n   that the terms permit modification of the work for the customer's own use and\n   reverse engineering for debugging such modifications.\n\n   You must give prominent notice with each copy of the work that the Library is\n   used in it and that the Library and its use are covered by this License. You\n   must supply a copy of this License. If the work during execution displays\n   copyright notices, you must include the copyright notice for the Library\n   among them, as well as a reference directing the user to the copy of this\n   License. Also, you must do one of these things:\n\n   a) Accompany the work with the complete corresponding machine-readable source\n   code for the Library including whatever changes were used in the work (which\n   must be distributed under Sections 1 and 2 above); and, if the work is an\n   executable linked with the Library, with the complete machine-readable “work\n   that uses the Library”, as object code and/or source code, so that the user\n   can modify the Library and then relink to produce a modified executable\n   containing the modified Library. (It is understood that the user who changes\n   the contents of definitions files in the Library will not necessarily be able\n   to recompile the application to use the modified definitions.)\n\n   b) Use a suitable shared library mechanism for linking with the Library. A\n   suitable mechanism is one that (1) uses at run time a copy of the library\n   already present on the user's computer system, rather than copying library\n   functions into the executable, and (2) will operate properly with a modified\n   version of the library, if the user installs one, as long as the modified\n   version is interface-compatible with the version that the work was made with.\n\n   c) Accompany the work with a written offer, valid for at least three years,\n   to give the same user the materials specified in Subsection 6a, above, for a\n   charge no more than the cost of performing this distribution.\n\n   d) If distribution of the work is made by offering access to copy from a\n   designated place, offer equivalent access to copy the above specified\n   materials from the same place.\n\n   e) Verify that the user has already received a copy of these materials or\n   that you have already sent this user a copy.\n\n   For an executable, the required form of the “work that uses the Library” must\n   include any data and utility programs needed for reproducing the executable\n   from it. However, as a special exception, the materials to be distributed\n   need not include anything that is normally distributed (in either source or\n   binary form) with the major components (compiler, kernel, and so on) of the\n   operating system on which the executable runs, unless that component itself\n   accompanies the executable.\n\n   It may happen that this requirement contradicts the license restrictions of\n   other proprietary libraries that do not normally accompany the operating\n   system. Such a contradiction means you cannot use both them and the Library\n   together in an executable that you distribute.\n\n7. You may place library facilities that are a work based on the Library\n   side-by-side in a single library together with other library facilities not\n   covered by this License, and distribute such a combined library, provided\n   that the separate distribution of the work based on the Library and of the\n   other library facilities is otherwise permitted, and provided that you do\n   these two things:\n\n   a) Accompany the combined library with a copy of the same work based on the\n   Library, uncombined with any other library facilities. This must be\n   distributed under the terms of the Sections above.\n\n   b) Give prominent notice with the combined library of the fact that part of\n   it is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n8. You may not copy, modify, sublicense, link with, or distribute the Library\n   except as expressly provided under this License. Any attempt otherwise to\n   copy, modify, sublicense, link with, or distribute the Library is void, and\n   will automatically terminate your rights under this License. However, parties\n   who have received copies, or rights, from you under this License will not\n   have their licenses terminated so long as such parties remain in full\n   compliance.\n\n9. You are not required to accept this License, since you have not signed\n   it. However, nothing else grants you permission to modify or distribute the\n   Library or its derivative works. These actions are prohibited by law if you\n   do not accept this License. Therefore, by modifying or distributing the\n   Library (or any work based on the Library), you indicate your acceptance of\n   this License to do so, and all its terms and conditions for copying,\n   distributing or modifying the Library or works based on it.\n\n10. Each time you redistribute the Library (or any work based on the Library),\n    the recipient automatically receives a license from the original licensor to\n    copy, distribute, link with or modify the Library subject to these terms and\n    conditions. You may not impose any further restrictions on the recipients'\n    exercise of the rights granted herein. You are not responsible for enforcing\n    compliance by third parties with this License.\n\n11. If, as a consequence of a court judgment or allegation of patent\n    infringement or for any other reason (not limited to patent issues),\n    conditions are imposed on you (whether by court order, agreement or\n    otherwise) that contradict the conditions of this License, they do not\n    excuse you from the conditions of this License. If you cannot distribute so\n    as to satisfy simultaneously your obligations under this License and any\n    other pertinent obligations, then as a consequence you may not distribute\n    the Library at all. For example, if a patent license would not permit\n    royalty-free redistribution of the Library by all those who receive copies\n    directly or indirectly through you, then the only way you could satisfy both\n    it and this License would be to refrain entirely from distribution of the\n    Library.\n\n    If any portion of this section is held invalid or unenforceable under any\n    particular circumstance, the balance of the section is intended to apply,\n    and the section as a whole is intended to apply in other circumstances.\n\n    It is not the purpose of this section to induce you to infringe any patents\n    or other property right claims or to contest validity of any such claims;\n    this section has the sole purpose of protecting the integrity of the free\n    software distribution system which is implemented by public license\n    practices. Many people have made generous contributions to the wide range of\n    software distributed through that system in reliance on consistent\n    application of that system; it is up to the author/donor to decide if he or\n    she is willing to distribute software through any other system and a\n    licensee cannot impose that choice.\n\n    This section is intended to make thoroughly clear what is believed to be a\n    consequence of the rest of this License.\n\n12. If the distribution and/or use of the Library is restricted in certain\n    countries either by patents or by copyrighted interfaces, the original\n    copyright holder who places the Library under this License may add an\n    explicit geographical distribution limitation excluding those countries, so\n    that distribution is permitted only in or among countries not thus\n    excluded. In such case, this License incorporates the limitation as if\n    written in the body of this License.\n\n13. The Free Software Foundation may publish revised and/or new versions of the\n    Lesser General Public License from time to time. Such new versions will be\n    similar in spirit to the present version, but may differ in detail to\n    address new problems or concerns.\n\n    Each version is given a distinguishing version number. If the Library\n    specifies a version number of this License which applies to it and “any\n    later version”, you have the option of following the terms and conditions\n    either of that version or of any later version published by the Free\n    Software Foundation. If the Library does not specify a license version\n    number, you may choose any version ever published by the Free Software\n    Foundation.\n\n14. If you wish to incorporate parts of the Library into other free programs\n    whose distribution conditions are incompatible with these, write to the\n    author to ask for permission. For software which is copyrighted by the Free\n    Software Foundation, write to the Free Software Foundation; we sometimes\n    make exceptions for this. Our decision will be guided by the two goals of\n    preserving the free status of all derivatives of our free software and of\n    promoting the sharing and reuse of software generally.\n\nNO WARRANTY\n\n15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE\n    LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE\n    STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE\n    LIBRARY “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED,\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n    FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND\n    PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE,\n    YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL\n    ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE\n    THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\n    GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE\n    OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA\n    OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\n    PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE),\n    EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGES.\n\nEND OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Libraries\n\nIf you develop a new library, and you want it to be of the greatest possible use\nto the public, we recommend making it free software that everyone can\nredistribute and change. You can do so by permitting redistribution under these\nterms (or, alternatively, under the terms of the ordinary General Public\nLicense).\n\nTo apply these terms, attach the following notices to the library. It is safest\nto attach them to the start of each source file to most effectively convey the\nexclusion of warranty; and each file should have at least the “copyright” line\nand a pointer to where the full notice is found.\n\n<one line to give the library's name and a brief idea of what it does.>\nCopyright (C) <year> <name of author>\n\nThis library is free software; you can redistribute it and/or modify it under\nthe terms of the GNU Lesser General Public License as published by the Free\nSoftware Foundation; either version 2.1 of the License, or (at your option) any\nlater version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License along\nwith this library; if not, write to the Free Software Foundation, Inc., 51\nFranklin Street, Fifth Floor, Boston, MA 02110-1301 USA Also add information on\nhow to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your school,\nif any, to sign a “copyright disclaimer” for the library, if necessary. Here is\na sample; alter the names:\n\nYoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a\nlibrary for tweaking knobs) written by James Random Hacker.\n\n<signature of Ty Coon>, 1 April 1990\nTy Coon, President of Vice\n\nThat's all there is to it!\n```\n\n## BSD 2-clause Licenses\n\nBSD 2-clause \"Simplified\" License is applicable to the following component(s):\n\n### https://github.com/syndtr/gocapability\n\n```\nCopyright 2013 Suryandaru Triandana <syndtr@gmail.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/godbus/dbus\n\n```\nCopyright (c) 2013, Georg Reinke (<guelfey at gmail dot com>), Google\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/pkg/errors\n### https://github.com/pkg/profile\n\n```\nCopyright (c) 2015, Dave Cheney <dave@cheney.net>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/seccomp/libseccomp-golang\n\n```\nCopyright (c) 2015 Matthew Heon <mheon@redhat.com>\nCopyright (c) 2015 Paul Moore <pmoore@redhat.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/russross/blackfriday\n\n```\nBlackfriday is distributed under the Simplified BSD License:\n\nCopyright © 2011 Russ Ross\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1.  Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n2.  Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following\n    disclaimer in the documentation and/or other materials provided with\n    the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/karrick/godirwalk\n\n```\nBSD 2-Clause License\n\nCopyright (c) 2017, Karrick McDermott\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n## BSD 3-clause Licenses\n\nBSD 3-clause \"New\" or \"Revised\" License is applicable to the following component(s):\n\n### https://github.com/golang/go\n### https://golang.org/x/net\n### https://golang.org/x/sys\n### https://golang.org/x/text\n\n```\nCopyright (c) 2009 The Go Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/cyphar/filepath-securejoin\n\n```\nCopyright (C) 2014-2015 Docker Inc & Go Authors. All rights reserved.\nCopyright (C) 2017 SUSE LLC. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/protocolbuffers/protobuf\n\n```\nCopyright 2008 Google Inc.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCode generated by the Protocol Buffer compiler is owned by the owner\nof the input file used when generating it.  This code is not\nstandalone and requires a support library to be linked with it.  This\nsupport library is itself covered by the above license.\n```\n\n### https://github.com/willf/bitset\n\n```\nCopyright (c) 2014 Will Fitzgerald. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/pmezard/go-difflib\n\n```\nCopyright (c) 2013, Patrick Mezard\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n    The names of its contributors may not be used to endorse or promote\nproducts derived from this software without specific prior written\npermission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/fsnotify/fsnotify\n\n```\nCopyright (c) 2012 The Go Authors. All rights reserved.\nCopyright (c) 2012-2019 fsnotify Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/gogo/protobuf\n\n```\nCopyright (c) 2013, The GoGo Authors. All rights reserved.\n\nProtocol Buffers for Go with Gadgets\n\nGo support for Protocol Buffers - Google's data interchange format\n\nCopyright 2010 The Go Authors.  All rights reserved.\nhttps://github.com/golang/protobuf\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/golang/protobuf\n\n```\nCopyright 2010 The Go Authors.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/google/uuid\n\n```\nCopyright (c) 2009,2014 Google Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n### https://github.com/bazil/fuse\n\n```\nCopyright (c) 2013-2019 Tommi Virtanen.\nCopyright (c) 2009, 2011, 2012 The Go Authors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\nThe following included software components have additional copyright\nnotices and license terms that may differ from the above.\n\n\nFile fuse.go:\n\n// Adapted from Plan 9 from User Space's src/cmd/9pfuse/fuse.c,\n// which carries this notice:\n//\n// The files in this directory are subject to the following license.\n//\n// The author of this software is Russ Cox.\n//\n//         Copyright (c) 2006 Russ Cox\n//\n// Permission to use, copy, modify, and distribute this software for any\n// purpose without fee is hereby granted, provided that this entire notice\n// is included in all copies of any software which is or includes a copy\n// or modification of this software and in all copies of the supporting\n// documentation for such software.\n//\n// THIS SOFTWARE IS BEING PROVIDED \"AS IS\", WITHOUT ANY EXPRESS OR IMPLIED\n// WARRANTY.  IN PARTICULAR, THE AUTHOR MAKES NO REPRESENTATION OR WARRANTY\n// OF ANY KIND CONCERNING THE MERCHANTABILITY OF THIS SOFTWARE OR ITS\n// FITNESS FOR ANY PARTICULAR PURPOSE.\n\n\nFile fuse_kernel.go:\n\n// Derived from FUSE's fuse_kernel.h\n/*\n   This file defines the kernel interface of FUSE\n   Copyright (C) 2001-2007  Miklos Szeredi <miklos@szeredi.hu>\n\n\n   This -- and only this -- header file may also be distributed under\n   the terms of the BSD Licence as follows:\n\n   Copyright (C) 2001-2007 Miklos Szeredi. All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n   THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE\n   FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n   OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n   OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n   SUCH DAMAGE.\n*/\n```\n\n## Mozilla Public License 2.0\n\nMozilla Public License 2.0 is applicable to the following component(s):\n\n### https://github.com/hashicorp/go-immutable-radix\n### https://github.com/hashicorp/golang-lru/simplelru\n\n```\nMozilla Public License, version 2.0\n\n1. Definitions\n\n1.1. \"Contributor\"\n\n     means each individual or legal entity that creates, contributes to the\n     creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n\n     means the combination of the Contributions of others (if any) used by a\n     Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n\n     means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n\n     means Source Code Form to which the initial Contributor has attached the\n     notice in Exhibit A, the Executable Form of such Source Code Form, and\n     Modifications of such Source Code Form, in each case including portions\n     thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n     means\n\n     a. that the initial Contributor has attached the notice described in\n        Exhibit B to the Covered Software; or\n\n     b. that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the terms of\n        a Secondary License.\n\n1.6. \"Executable Form\"\n\n     means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n\n     means a work that combines Covered Software with other material, in a\n     separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n\n     means this document.\n\n1.9. \"Licensable\"\n\n     means having the right to grant, to the maximum extent possible, whether\n     at the time of the initial grant or subsequently, any and all of the\n     rights conveyed by this License.\n\n1.10. \"Modifications\"\n\n     means any of the following:\n\n     a. any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered Software; or\n\n     b. any new file in Source Code Form that contains any Covered Software.\n\n1.11. \"Patent Claims\" of a Contributor\n\n      means any patent claim(s), including without limitation, method,\n      process, and apparatus claims, in any patent Licensable by such\n      Contributor that would be infringed, but for the grant of the License,\n      by the making, using, selling, offering for sale, having made, import,\n      or transfer of either its Contributions or its Contributor Version.\n\n1.12. \"Secondary License\"\n\n      means either the GNU General Public License, Version 2.0, the GNU Lesser\n      General Public License, Version 2.1, the GNU Affero General Public\n      License, Version 3.0, or any later versions of those licenses.\n\n1.13. \"Source Code Form\"\n\n      means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n\n      means an individual or a legal entity exercising rights under this\n      License. For legal entities, \"You\" includes any entity that controls, is\n      controlled by, or is under common control with You. For purposes of this\n      definition, \"control\" means (a) the power, direct or indirect, to cause\n      the direction or management of such entity, whether by contract or\n      otherwise, or (b) ownership of more than fifty percent (50%) of the\n      outstanding shares or beneficial ownership of such entity.\n\n\n2. License Grants and Conditions\n\n2.1. Grants\n\n     Each Contributor hereby grants You a world-wide, royalty-free,\n     non-exclusive license:\n\n     a. under intellectual property rights (other than patent or trademark)\n        Licensable by such Contributor to use, reproduce, make available,\n        modify, display, perform, distribute, and otherwise exploit its\n        Contributions, either on an unmodified basis, with Modifications, or\n        as part of a Larger Work; and\n\n     b. under Patent Claims of such Contributor to make, use, sell, offer for\n        sale, have made, import, and otherwise transfer either its\n        Contributions or its Contributor Version.\n\n2.2. Effective Date\n\n     The licenses granted in Section 2.1 with respect to any Contribution\n     become effective for each Contribution on the date the Contributor first\n     distributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\n     The licenses granted in this Section 2 are the only rights granted under\n     this License. No additional rights or licenses will be implied from the\n     distribution or licensing of Covered Software under this License.\n     Notwithstanding Section 2.1(b) above, no patent license is granted by a\n     Contributor:\n\n     a. for any code that a Contributor has removed from Covered Software; or\n\n     b. for infringements caused by: (i) Your and any other third party's\n        modifications of Covered Software, or (ii) the combination of its\n        Contributions with other software (except as part of its Contributor\n        Version); or\n\n     c. under Patent Claims infringed by Covered Software in the absence of\n        its Contributions.\n\n     This License does not grant any rights in the trademarks, service marks,\n     or logos of any Contributor (except as may be necessary to comply with\n     the notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\n     No Contributor makes additional grants as a result of Your choice to\n     distribute the Covered Software under a subsequent version of this\n     License (see Section 10.2) or under the terms of a Secondary License (if\n     permitted under the terms of Section 3.3).\n\n2.5. Representation\n\n     Each Contributor represents that the Contributor believes its\n     Contributions are its original creation(s) or it has sufficient rights to\n     grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\n     This License is not intended to limit any rights You have under\n     applicable copyright doctrines of fair use, fair dealing, or other\n     equivalents.\n\n2.7. Conditions\n\n     Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in\n     Section 2.1.\n\n\n3. Responsibilities\n\n3.1. Distribution of Source Form\n\n     All distribution of Covered Software in Source Code Form, including any\n     Modifications that You create or to which You contribute, must be under\n     the terms of this License. You must inform recipients that the Source\n     Code Form of the Covered Software is governed by the terms of this\n     License, and how they can obtain a copy of this License. You may not\n     attempt to alter or restrict the recipients' rights in the Source Code\n     Form.\n\n3.2. Distribution of Executable Form\n\n     If You distribute Covered Software in Executable Form then:\n\n     a. such Covered Software must also be made available in Source Code Form,\n        as described in Section 3.1, and You must inform recipients of the\n        Executable Form how they can obtain a copy of such Source Code Form by\n        reasonable means in a timely manner, at a charge no more than the cost\n        of distribution to the recipient; and\n\n     b. You may distribute such Executable Form under the terms of this\n        License, or sublicense it under different terms, provided that the\n        license for the Executable Form does not attempt to limit or alter the\n        recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\n     You may create and distribute a Larger Work under terms of Your choice,\n     provided that You also comply with the requirements of this License for\n     the Covered Software. If the Larger Work is a combination of Covered\n     Software with a work governed by one or more Secondary Licenses, and the\n     Covered Software is not Incompatible With Secondary Licenses, this\n     License permits You to additionally distribute such Covered Software\n     under the terms of such Secondary License(s), so that the recipient of\n     the Larger Work may, at their option, further distribute the Covered\n     Software under the terms of either this License or such Secondary\n     License(s).\n\n3.4. Notices\n\n     You may not remove or alter the substance of any license notices\n     (including copyright notices, patent notices, disclaimers of warranty, or\n     limitations of liability) contained within the Source Code Form of the\n     Covered Software, except that You may alter any license notices to the\n     extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\n     You may choose to offer, and to charge a fee for, warranty, support,\n     indemnity or liability obligations to one or more recipients of Covered\n     Software. However, You may do so only on Your own behalf, and not on\n     behalf of any Contributor. You must make it absolutely clear that any\n     such warranty, support, indemnity, or liability obligation is offered by\n     You alone, and You hereby agree to indemnify every Contributor for any\n     liability incurred by such Contributor as a result of warranty, support,\n     indemnity or liability terms You offer. You may include additional\n     disclaimers of warranty and limitations of liability specific to any\n     jurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n\n   If it is impossible for You to comply with any of the terms of this License\n   with respect to some or all of the Covered Software due to statute,\n   judicial order, or regulation then You must: (a) comply with the terms of\n   this License to the maximum extent possible; and (b) describe the\n   limitations and the code they affect. Such description must be placed in a\n   text file included with all distributions of the Covered Software under\n   this License. Except to the extent prohibited by statute or regulation,\n   such description must be sufficiently detailed for a recipient of ordinary\n   skill to be able to understand it.\n\n5. Termination\n\n5.1. The rights granted under this License will terminate automatically if You\n     fail to comply with any of its terms. However, if You become compliant,\n     then the rights granted under this License from a particular Contributor\n     are reinstated (a) provisionally, unless and until such Contributor\n     explicitly and finally terminates Your grants, and (b) on an ongoing\n     basis, if such Contributor fails to notify You of the non-compliance by\n     some reasonable means prior to 60 days after You have come back into\n     compliance. Moreover, Your grants from a particular Contributor are\n     reinstated on an ongoing basis if such Contributor notifies You of the\n     non-compliance by some reasonable means, this is the first time You have\n     received notice of non-compliance with this License from such\n     Contributor, and You become compliant prior to 30 days after Your receipt\n     of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\n     infringement claim (excluding declaratory judgment actions,\n     counter-claims, and cross-claims) alleging that a Contributor Version\n     directly or indirectly infringes any patent, then the rights granted to\n     You by any and all Contributors for the Covered Software under Section\n     2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user\n     license agreements (excluding distributors and resellers) which have been\n     validly granted by You or Your distributors under this License prior to\n     termination shall survive termination.\n\n6. Disclaimer of Warranty\n\n   Covered Software is provided under this License on an \"as is\" basis,\n   without warranty of any kind, either expressed, implied, or statutory,\n   including, without limitation, warranties that the Covered Software is free\n   of defects, merchantable, fit for a particular purpose or non-infringing.\n   The entire risk as to the quality and performance of the Covered Software\n   is with You. Should any Covered Software prove defective in any respect,\n   You (not any Contributor) assume the cost of any necessary servicing,\n   repair, or correction. This disclaimer of warranty constitutes an essential\n   part of this License. No use of  any Covered Software is authorized under\n   this License except under this disclaimer.\n\n7. Limitation of Liability\n\n   Under no circumstances and under no legal theory, whether tort (including\n   negligence), contract, or otherwise, shall any Contributor, or anyone who\n   distributes Covered Software as permitted above, be liable to You for any\n   direct, indirect, special, incidental, or consequential damages of any\n   character including, without limitation, damages for lost profits, loss of\n   goodwill, work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses, even if such party shall have been\n   informed of the possibility of such damages. This limitation of liability\n   shall not apply to liability for death or personal injury resulting from\n   such party's negligence to the extent applicable law prohibits such\n   limitation. Some jurisdictions do not allow the exclusion or limitation of\n   incidental or consequential damages, so this exclusion and limitation may\n   not apply to You.\n\n8. Litigation\n\n   Any litigation relating to this License may be brought only in the courts\n   of a jurisdiction where the defendant maintains its principal place of\n   business and such litigation shall be governed by laws of that\n   jurisdiction, without reference to its conflict-of-law provisions. Nothing\n   in this Section shall prevent a party's ability to bring cross-claims or\n   counter-claims.\n\n9. Miscellaneous\n\n   This License represents the complete agreement concerning the subject\n   matter hereof. If any provision of this License is held to be\n   unenforceable, such provision shall be reformed only to the extent\n   necessary to make it enforceable. Any law or regulation which provides that\n   the language of a contract shall be construed against the drafter shall not\n   be used to construe this License against a Contributor.\n\n\n10. Versions of the License\n\n10.1. New Versions\n\n      Mozilla Foundation is the license steward. Except as provided in Section\n      10.3, no one other than the license steward has the right to modify or\n      publish new versions of this License. Each version will be given a\n      distinguishing version number.\n\n10.2. Effect of New Versions\n\n      You may distribute the Covered Software under the terms of the version\n      of the License under which You originally received the Covered Software,\n      or under the terms of any subsequent version published by the license\n      steward.\n\n10.3. Modified Versions\n\n      If you create software not governed by this License, and you want to\n      create a new license for such software, you may create and use a\n      modified version of this License if you rename the license and remove\n      any references to the name of the license steward (except to note that\n      such modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\n      Licenses If You choose to distribute Source Code Form that is\n      Incompatible With Secondary Licenses under the terms of this version of\n      the License, the notice described in Exhibit B of this License must be\n      attached.\n\nExhibit A - Source Code Form License Notice\n\n      This Source Code Form is subject to the\n      terms of the Mozilla Public License, v.\n      2.0. If a copy of the MPL was not\n      distributed with this file, You can\n      obtain one at\n      http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular file,\nthen You may include the notice in a location (such as a LICENSE file in a\nrelevant directory) where a recipient would be likely to look for such a\nnotice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n\n      This Source Code Form is \"Incompatible\n      With Secondary Licenses\", as defined by\n      the Mozilla Public License, v. 2.0.\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.26171875,
          "content": "<p align=\"center\">\n    <img alt=\"sysbox\" src=\"./docs/figures/sysbox-ce-header.png\"/>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/nestybox/sysbox/blob/master/LICENSE\"><img alt=\"GitHub license\" src=\"https://img.shields.io/github/license/nestybox/sysbox\"></a>\n    <a href=\"https://travis-ci.com/nestybox/sysbox\">\n    <img src=\"https://img.shields.io/circleci/project/github/badges/shields/master\" alt=\"build status\"></a>\n    <a href=\"https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#\">\n    <img src=\"https://img.shields.io/badge/chat-on%20slack-FF3386\"></a>\n</p>\n\n## Introduction\n\n**Sysbox** is an open-source and free container runtime (a specialized \"runc\"),\noriginally developed by Nestybox ([acquired by Docker][docker-acquisition] on\n05/2022), that enhances containers in two key ways:\n\n*   **Improves container isolation:**\n\n    *   Linux user-namespace on all containers (i.e., root user in the container\n        has zero privileges on the host).\n\n    *   Virtualizes portions of procfs & sysfs inside the container.\n\n    *   Hides host info inside the container.\n\n    *   Locks the container's initial mounts, and more.\n\n*   **Enables containers to run same workloads as VMs**:\n\n    *   With Sysbox, containers can run system-level software such as systemd,\n        Docker, Kubernetes, K3s, buildx, legacy apps, and more seamlessly &\n        securely.\n\n    *   This software can run inside Sysbox containers without modification and\n        without using special versions of the software (e.g., rootless\n        variants).\n\n    *   No privileged containers, no complex images, no tricky entrypoints, no\n        special volume mounts, etc.\n\nThink of it as a **\"container supercharger\"**: it enables your existing container\nmanagers / orchestrators (e.g., Docker, Kubernetes, etc.) to deploy containers\nthat have hardened isolation and can run almost any workload that runs in VMs.\n\nSysbox does this by making the container resemble a VM-like environment as much\nas possible, using advanced OS virtualization techniques.\n\nUnlike alternative runtimes such as Kata and KubeVirt, **it does not use VMs**.\nThis makes it easier to use (particularly in cloud environments by avoiding\nnested virtualization), although it does not provide the level of isolation\nthat VM-based runtimes do. See [here](#comparison-to-related-technologies) for a\ncomparison.\n\nThere is no need to learn new tools or modify your existing container images or\nworkflows to take advantage of Sysbox. Simply install it and point your container\nmanager / orchestrator to it to deploy enhanced containers.\n\nSysbox can live side-by-side with other container runtimes on the same host\n(e.g., the default OCI runc, Kata, etc.) You can easily choose which containers\nor pods to run with each, depending on your needs.\n\n## Demo Videos\n\n*   [\"VM-like\" containers with Docker + Sysbox](https://asciinema.org/a/kkTmOxl8DhEZiM2fLZNFlYzbo?speed=2)\n\n*   [Rootless Kubernetes pods with Sysbox](https://asciinema.org/a/401488?speed=1.5)\n\n## Contents\n\n*   [License](#license)\n*   [Relationship to Nestybox & Docker](#relationship-to-nestybox--docker)\n*   [Motivation](#motivation)\n*   [How it Works](#how-it-works)\n*   [Comparison to Related Technologies](#comparison-to-related-technologies)\n*   [Audience](#audience)\n*   [Sysbox Enterprise Edition](#sysbox-enterprise-edition)\n*   [Sysbox Features](#sysbox-features)\n*   [System Containers](#system-containers)\n*   [Installation](#installation)\n*   [Using Sysbox](#using-sysbox)\n*   [Documentation](#documentation)\n*   [Performance](#performance)\n*   [Under the Covers](#under-the-covers)\n*   [Contributing](#contributing)\n*   [Security](#security)\n*   [Troubleshooting & Support](#troubleshooting--support)\n*   [Uninstallation](#uninstallation)\n*   [Roadmap](#roadmap)\n*   [Contact](#contact)\n*   [Thank You](#thank-you)\n\n## License\n\nSysbox is free and open-source, licensed under the Apache License,\nVersion 2.0. See the [LICENSE](LICENSE) file for details.\n\n## Relationship to Nestybox & Docker\n\nSysbox was originally developed by Nestybox. As [Nestybox is now part of\nDocker][docker-acquisition], Docker is the main sponsor of the Sysbox project.\n\nHaving said this, Sysbox is a community open-source project and it's **not\nofficially supported by Docker** (i.e., Docker subscriptions do not include\nSysbox support).  Support is provided on a **best effort basis** via this Github\nrepo or via the [Sysbox Slack Workspace][slack].\n\nWe encourage participation from the community to help evolve and improve Sysbox,\nwith the goal of increasing the use cases and benefits it enables. External\nmaintainers and contributors are welcomed.\n\n## Motivation\n\nSysbox solves problems such as:\n\n*   Enhancing the isolation of containerized microservices\n    (root in the container maps to an unprivileged user on the host).\n\n*   Enabling a highly capable root user inside the container without\n    compromising host security.\n\n*   Securing CI/CD pipelines by enabling Docker-in-Docker (DinD) or\n    Kubernetes-in-Docker (KinD) without insecure privileged containers\n    or host Docker socket mounts.\n\n*   Enabling the use of containers as \"VM-like\" environments for development,\n    local testing, learning, etc., with strong isolation and the ability\n    to run systemd, Docker, IDEs, and more inside the container.\n\n*   Running legacy apps inside containers (instead of less efficient VMs).\n\n*   Replacing VMs with an easier, faster, more efficient, and more portable\n    container-based alternative, one that can be deployed across cloud\n    environments easily.\n\n*   Partitioning bare-metal hosts into multiple isolated compute environments\n    with 2X the density of VMs (i.e., deploy twice as many VM-like containers\n    as VMs on the same hardware at the same performance).\n\n*   Partitioning cloud instances (e.g., EC2, GCP, etc.) into multiple isolated\n    compute environments without resorting to expensive nested virtualization.\n\n## How it Works\n\n<p align=\"center\">\n    <img alt=\"sysbox\" src=\"./docs/figures/sysbox-diagram.png\"/>\n</p>\n\nSysbox [installs easily](#installation) on Linux hosts (bare-metal, VM, on-prem, cloud, etc.). It\nworks on all mayor cloud-based IaaS and Kubernetes services (e.g., EC2, GCP, GKE,\nEKS, AKS, Rancher, etc.)\n\nOnce installed, Sysbox works under the covers: you use Docker, Kubernetes, etc.\nto deploy containers with it.\n\nFor example, this simple Docker command creates a container with Sysbox:\n\n    $ docker run --runtime=sysbox-runc -it any_image\n\nYou get a well isolated container capable of seamlessly running microservices as\nwell as system-level software that normally that runs on VMs (e.g., systemd,\nDocker, Kubernetes, etc).\n\nMore on how to use Sysbox [here](#using-sysbox).\n\n## Comparison to Related Technologies\n\n<p align=\"center\">\n    <img alt=\"sysbox\" src=\"./docs/figures/sysbox-comparison.png\"/>\n</p>\n\nAs shown, Sysbox enables unprivileged containers to run system-level workloads\nsuch as systemd, Docker, Kubernetes, etc., seamlessly, while giving you a\nbalanced approach between container isolation, performance, efficiency, and\nportability.\n\nAnd it does this with minimal configuration changes to your existing infra: just\ninstall Sysbox and configure your container manager/orchestrator to launch\ncontainers with it, using the image of your choice.\n\nNote that while Sysbox hardens the isolation of standard containers and voids\nthe need for insecure privileged containers in many scenarios, it does not (yet)\nprovide the same level of isolation as VM-based alternatives or user-space OSes\nlike gVisor. Therefore, for scenarios where the highest level of isolation is\nrequired, alternatives such as KubeVirt may be preferable (at the expense of\nlower performance and efficiency and higher complexity and cost).\n\nSee this [blog post](https://blog.nestybox.com/2020/10/06/related-tech-comparison.html) for\nmore.\n\n## Audience\n\nThe Sysbox project is intended for anyone looking to experiment, invent, learn,\nand build systems using [system containers](#system-containers). It's\ncutting-edge OS virtualization, and contributions are welcomed.\n\n## Sysbox Enterprise Edition [DEPRECATED]\n\nPrior to the [acquisition by Docker][docker-acquisition] on 05/2022, Nestybox\noffered [Sysbox Enterprise][sysbox-ee-repo] as an enhanced version of Sysbox\n(e.g., more security, more workloads, and official support).\n\nAfter the acquisition however, Sysbox Enterprise is no longer offered as a\nstandalone product but has instead been incorporated into [Docker Desktop](https://www.docker.com/products/docker-desktop/)\n(see [Docker Hardened Desktop](https://docs.docker.com/desktop/hardened-desktop/)).\n\n**NOTE:** As Sysbox Enterprise is no longer offered as a standalone product, Docker\nplans to make some Sysbox Enterprise features available in Sysbox Community\nEdition. The features are TBD and [your feedback](#contact) on this is welcome.\n\n## Sysbox Features\n\nThe table below summarizes the key features of the Sysbox container runtime.\n\nIt also provides a comparison between the Sysbox Community Edition (i.e., this\nrepo) and the previously available Sysbox Enterprise Edition (now deprecated).\n\n<p align=\"center\">\n    <img alt=\"sysbox\" src=\"./docs/figures/sysbox-features.png\" width=\"1000\" />\n</p>\n\nMore on the Sysbox features [here](docs/user-guide/features.md).\n\nIf you have questions, you can reach us [here](#contact).\n\n## System Containers\n\nWe call the containers deployed by Sysbox **system containers**, to highlight the\nfact that they can run not just micro-services (as regular containers do), but\nalso system software such as Docker, Kubernetes, Systemd, inner containers, etc.\n\nMore on system containers [here](docs/user-guide/concepts.md#system-container).\n\n## Installation\n\n### Host Requirements\n\nThe Sysbox host must meet the following requirements:\n\n*   It must be running one of the [supported Linux distros](docs/distro-compat.md)\n    and be a machine with a [supported architecture](docs/arch-compat.md) (e.g., amd64, arm64).\n\n*   We recommend a minimum of 4 CPUs (e.g., 2 cores with 2 hyperthreads) and 4GB\n    of RAM. Though this is not a hard requirement, smaller configurations may\n    slow down Sysbox.\n\n### Installing Sysbox\n\nThe method of installation depends on the environment where Sysbox will be\ninstalled:\n\n*   To install Sysbox on a Kubernetes cluster, use the [sysbox-deploy-k8s daemonset](docs/user-guide/install-k8s.md).\n\n*   Otherwise, use the [Sysbox package](docs/user-guide/install-package.md) for\n    your distro.\n\n*   Alternatively, if a package for your distro is not yet available, or if you\n    want to get the latest changes from upstream, you can [build and install Sysbox from source](docs/developers-guide/README.md).\n\n## Using Sysbox\n\nOnce Sysbox is installed, you create a container using your container manager\nor orchestrator (e.g., Docker or Kubernetes) and an image of your choice.\n\nDocker command example:\n\n```console\n$ docker run --runtime=sysbox-runc --rm -it --hostname my_cont registry.nestybox.com/nestybox/ubuntu-bionic-systemd-docker\nroot@my_cont:/#\n```\n\nKubernetes pod spec example:\n\n```yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ubu-bio-systemd-docker\n  annotations:\n    io.kubernetes.cri-o.userns-mode: \"auto:size=65536\"\nspec:\n  runtimeClassName: sysbox-runc\n  containers:\n  - name: ubu-bio-systemd-docker\n    image: registry.nestybox.com/nestybox/ubuntu-bionic-systemd-docker\n    command: [\"/sbin/init\"]\n  restartPolicy: Never\n```\n\nYou can choose whatever container image you want, Sysbox places no requirements\non the image.\n\nNestybox makes several reference images available in its [Dockerhub](https://hub.docker.com/u/nestybox)\nand [GitHub Container Registry](https://github.com/orgs/nestybox/packages) repos. These are\nimages that typically include systemd, Docker, Kubernetes, and more inside the containers.\nThe Dockerfiles are [here](https://github.com/nestybox/dockerfiles/tree/master). Feel free\nto use and modify per your needs.\n\n## Documentation\n\nWe strive to provide good documentation; it's a key component of the Sysbox project.\n\nWe have several documents to help you get started and get the best out of\nSysbox.\n\n*   [Sysbox Distro Compatibility Doc](docs/distro-compat.md)\n\n    *   Distro compatibility requirements. Check this out before installing Sysbox.\n\n*   [Sysbox Quick Start Guide](docs/quickstart/README.md)\n\n    *   Provides many examples for using Sysbox. New users should start here.\n\n*   [Sysbox User Guide](docs/user-guide/README.md)\n\n    *   Provides more detailed information on Sysbox installation,\n        configuration, features and design.\n\n*   [Nestybox blog site](https://blog.nestybox.com/)\n\n    *   Articles on using Sysbox to solve real-life problems.\n\n## Performance\n\nSysbox is fast and efficient, as described in this [Nestybox blog post](https://blog.nestybox.com/2020/09/23/perf-comparison.html).\n\nThe containers created by Sysbox have similar performance to those created by\nthe OCI runc (the default runtime for Docker and Kubernetes).\n\nEven containers deployed inside the system containers have excellent\nperformance, thought there is a slight overhead for network IO (as expected\nsince packets emitted by inner containers go through an additional network\ninterface / bridge inside the system container).\n\nNow, if you use Sysbox to deploy system containers that replace VMs, then the\nperformance and efficiency gains are significant: you can deploy 2X as many\nsystem containers as VMs on the same server and get the same performance, and do\nthis with a fraction of the memory and storage consumption. The blog post\nreferenced above has more on this.\n\n## Under the Covers\n\nSysbox was forked from the excellent [OCI runc][oci-runc] in early 2019 and it\nstands on the shoulders of the work done by the OCI runc developers.\n\nHaving said this, Sysbox adds significant functionality on top. It's written in\nGo, and it is currently composed of three components: sysbox-runc, sysbox-fs,\nand sysbox-mgr.\n\nSysbox uses many OS-virtualization features of the Linux kernel and complements\nthese with OS-virtualization techniques implemented in user-space. These include\nusing all Linux namespaces (in particular the user-namespace), partial\nvirtualization of procfs and sysfs, selective syscall trapping, and more.\n\nMore on Sysbox's design can be found in the [Sysbox user guide](docs/user-guide/design.md).\n\n### Sysbox does not use hardware virtualization\n\nThough the containers generated by Sysbox resemble virtual machines in some ways\n(e.g., you can run as root, run multiple services, and deploy Docker and K8s\ninside), Sysbox does **not** use hardware virtualization.\n\nSysbox is a pure OS-virtualization technology meant to create containers that\ncan run applications as well as system-level software, easily and securely.\n\nThis makes the containers created by Sysbox fast, efficient, and portable (i.e.,\nthey aren't tied to a hypervisor).\n\nIsolation wise, it's fair to say that Sysbox containers provide stronger\nisolation than regular Docker containers (by virtue of using the Linux\nuser-namespace and light-weight OS shim), but weaker isolation than VMs (by\nsharing the Linux kernel among containers).\n\n## Contributing\n\nWe welcome contributions to Sysbox, whether they are small documentation changes,\nbug fixes, or feature additions. Please see the [contribution guidelines](CONTRIBUTING.md)\nand [developer's guide](docs/developers-guide/README.md) for more info.\n\n## Security\n\nSee the User Guide's [Security Chapter](docs/user-guide/security.md) for\ninfo on how Sysbox secures containers.\n\nIf you find bugs or issues that may expose a Sysbox vulnerability, please report\nthese by sending an email to security@nestybox.com. Please do not open security\nissues in this repo. Thanks!\n\nIn addition, a few vulnerabilities have recently been found in the Linux kernel\nthat in some cases reduce or negate the enhanced isolation provided by Sysbox\ncontainers. Fortunately they are all fixed in recent Linux kernels. See the\nSysbox User Guide's [Vulnerabilities & CVEs chapter](docs/user-guide/security-cve.md)\nfor more info, and reach out on the [Sysbox Slack channel][slack] for further questions.\n\n## Troubleshooting & Support\n\nSupport is currently offered on a best-effort basis.\n\nIf you have a question or comment, we love to hear it. You can reach us at our\n[slack channel][slack] or file an issue on this GitHub repo.\n\nIf you spot a problem with Sysbox, please search the existing\n[issues](https://github.com/nestybox/sysbox/issues) as they may describe the\nproblem and provide a work-around.\n\nCheck also the [Troubleshooting document](docs/user-guide/troubleshoot.md).\n\n## Uninstallation\n\nPrior to uninstalling Sysbox, make sure all containers deployed with it are\nstopped and removed.\n\nThe method of uninstallation depends on the method used to install Sysbox:\n\n*   To uninstall Sysbox on a Kubernetes cluster, follow [these instructions](docs/user-guide/install-k8s.md#uninstallation).\n\n*   Otherwise, to uninstall the Sysbox package, follow [these instructions](docs/user-guide/install-package.md#uninstallation).\n\n*   If Sysbox was built and installed from source, follow [these instructions](docs/developers-guide/build.md#cleanup--uninstall).\n\n## Roadmap\n\nThe following is a list of features in the Sysbox roadmap.\n\nWe list these here so that our users can get a better idea of where we\nare going and can give us feedback on which of these they like best\n(or least).\n\nHere is a short list; the Sysbox issue tracker has many more.\n\n*   Support for more Linux distros.\n\n*   More improvements to procfs and sysfs virtualization.\n\n*   Continued improvements to container isolation.\n\n*   Exposing host devices inside system containers with proper permissions.\n\n## Contact\n\nSlack: [Sysbox Slack Workspace][slack]\n\nEmail: contact@nestybox.com\n\nWe are available from Monday-Friday, 9am-5pm Pacific Time.\n\n## Thank You\n\nWe thank you **very much** for using and/or contributing to Sysbox. We hope you\nfind it interesting and that it helps you use containers in new and more powerful\nways.\n\n[slack]: https://nestybox-support.slack.com/join/shared_invite/enQtOTA0NDQwMTkzMjg2LTAxNGJjYTU2ZmJkYTZjNDMwNmM4Y2YxNzZiZGJlZDM4OTc1NGUzZDFiNTM4NzM1ZTA2NDE3NzQ1ODg1YzhmNDQ#/\n\n[perf-blog]: https://blog.nestybox.com/2020/09/23/perf-comparison.html\n\n[oci-runc]: https://github.com/opencontainers/runc\n\n[sysbox-ee-repo]: https://github.com/nestybox/sysbox-ee\n\n[docker-acquisition]: https://www.docker.com/blog/docker-advances-container-isolation-and-workloads-with-acquisition-of-nestybox/\n\n[docker-desktop]: https://www.docker.com/products/\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.6.6\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "scr",
          "type": "tree",
          "content": null
        },
        {
          "name": "sysbox-dockerfiles",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-fs",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-ipc",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-k8s-manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "sysbox-libs",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-mgr",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-pkgr",
          "type": "commit",
          "content": null
        },
        {
          "name": "sysbox-runc",
          "type": "commit",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}