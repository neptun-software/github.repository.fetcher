{
  "metadata": {
    "timestamp": 1736568250491,
    "page": 124,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "antonbabenko/pre-commit-terraform",
      "stars": 3259,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.958984375,
          "content": "---\n\ncodecov:\n  notify:\n    after_n_builds: 21  # Number of test matrix+lint jobs uploading coverage\n    wait_for_ci: false\n\n  require_ci_to_pass: false\n\n  token: >-  # notsecret  # repo-scoped, upload-only, stability in fork PRs\n    7316089b-55fe-4646-b640-78d84b79d109\n\ncomment:\n  require_changes: true\n\ncoverage:\n  range: 100..100\n  status:\n    patch:\n      default:\n        target: 100%\n      pytest:\n        target: 100%\n        flags:\n        - pytest\n      typing:\n        flags:\n        - MyPy\n    project:\n      default:\n        target: 95%\n      lib:\n        flags:\n        - pytest\n        paths:\n        - src/\n        target: 100%\n      tests:\n        flags:\n        - pytest\n        paths:\n        - tests/\n        target: 100%\n      typing:\n        flags:\n        - MyPy\n        target: 90%\n\ngithub_checks:\n  # Annotations are deprecated in Codecov because they are misleading.\n  # Ref: https://github.com/codecov/codecov-action/issues/1710\n  annotations: false\n\n...\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.6083984375,
          "content": "[html]\nshow_contexts = true\nskip_covered = false\n\n[paths]\n_site-packages-to-src-mapping =\n  src\n  */src\n  *\\src\n  */lib/pypy*/site-packages\n  */lib/python*/site-packages\n  *\\Lib\\site-packages\n\n[report]\nskip_covered = true\nskip_empty = true\nshow_missing = true\nexclude_also =\n  ^\\s*@pytest\\.mark\\.xfail\n  ^\\s*\\.\\.\\.\\s*(#.*)?$\n\n[run]\nbranch = true\ncover_pylib = false\n# https://coverage.rtfd.io/en/latest/contexts.html#dynamic-contexts\n# dynamic_context = test_function  # conflicts with `pytest-cov` if set here\nparallel = true\nplugins =\n  covdefaults\nrelative_files = true\nsource =\n  .\nsource_pkgs =\n  pre_commit_terraform\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.068359375,
          "content": "*\n!.dockerignore\n!Dockerfile\n!tools/entrypoint.sh\n!tools/install/*.sh\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2080078125,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[{*.{py,md},Dockerfile}]\nindent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.4638671875,
          "content": "# Generated by https://gitignore.io\n# Created by https://www.toptal.com/developers/gitignore/api/python\n# Edit at https://www.toptal.com/developers/gitignore?templates=python\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n\n### Python Patch ###\n# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration\npoetry.toml\n\n# ruff\n.ruff_cache/\n\n# LSP config files\npyrightconfig.json\n\n# End of https://www.toptal.com/developers/gitignore/api/python\n\ntests/results/*\n"
        },
        {
          "name": ".mypy.ini",
          "type": "blob",
          "size": 1.48828125,
          "content": "[mypy]\npython_version = 3.9\ncolor_output = true\nerror_summary = true\n# IMPORTANT: The file list MUST NOT have a trailing comma after the last entry.\n# Ref: https://github.com/python/mypy/issues/11171#issuecomment-2567150548\nfiles =\n  src/,\n  tests/pytest/\n\ncheck_untyped_defs = true\n\ndisallow_any_explicit = true\ndisallow_any_expr = true\ndisallow_any_decorated = true\ndisallow_any_generics = true\ndisallow_any_unimported = true\ndisallow_incomplete_defs = true\ndisallow_subclassing_any = true\ndisallow_untyped_calls = true\ndisallow_untyped_decorators = true\ndisallow_untyped_defs = true\n\nenable_error_code =\n  ignore-without-code\n\nexplicit_package_bases = true\n\nextra_checks = true\n\nfollow_imports = normal\n\nignore_missing_imports = false\n\nlocal_partial_types = true\n\nmypy_path = ${MYPY_CONFIG_FILE_DIR}/src:${MYPY_CONFIG_FILE_DIR}/_type_stubs\n\nnamespace_packages = true\n\nno_implicit_reexport = true\n\npretty = true\n\nshow_column_numbers = true\nshow_error_code_links = true\nshow_error_codes = true\nshow_error_context = true\nshow_error_end = true\n\n# `strict` will pick up any future strictness-related settings:\nstrict = true\nstrict_equality = true\nstrict_optional = true\n\nwarn_no_return = true\nwarn_redundant_casts = true\nwarn_return_any = true\nwarn_unused_configs = true\nwarn_unused_ignores = true\n\n[mypy-tests.*]\n# crashes with some decorators like `@pytest.mark.parametrize`:\ndisallow_any_expr = false\n# fails on `@hypothesis.given()`:\ndisallow_any_decorated = false\n\n[mypy-tests.pytest.*]\ndisable_error_code = attr-defined\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 3.9775390625,
          "content": "---\n\nci:\n  autoupdate_schedule: quarterly\n  skip:\n  - shfmt\n  - shellcheck\n  - hadolint\n\nrepos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v5.0.0\n  hooks:\n  # Git style\n  - id: check-added-large-files\n  - id: check-merge-conflict\n  - id: check-vcs-permalinks\n  - id: forbid-new-submodules\n  - id: no-commit-to-branch\n\n  # Common errors\n  - id: end-of-file-fixer\n  - id: trailing-whitespace\n    args: [--markdown-linebreak-ext=md]\n    exclude: CHANGELOG.md\n  - id: check-yaml\n  - id: check-merge-conflict\n  - id: check-executables-have-shebangs\n\n  # Cross platform\n  - id: check-case-conflict\n  - id: mixed-line-ending\n    args: [--fix=lf]\n\n  # Security\n  - id: detect-aws-credentials\n    args:\n    - --allow-missing-credentials\n  - id: detect-private-key\n\n  # Non-modifying checks:\n  - id: name-tests-test\n    files: >-\n      ^tests/[^_].*\\.py$\n\n- repo: https://github.com/adrienverge/yamllint.git\n  rev: v1.35.1\n  hooks:\n  - id: yamllint\n    types:\n    - file\n    - yaml\n    args:\n    - --strict\n\n- repo: https://github.com/pre-commit/mirrors-mypy.git\n  rev: v1.14.1\n  hooks:\n  - id: mypy\n    alias: mypy-py313\n    name: MyPy, for Python 3.13\n    additional_dependencies:\n    - lxml  # dep of `--txt-report`, `--cobertura-xml-report` & `--html-report`\n    - pytest\n    - pytest-mock\n    args:\n    - --python-version=3.13\n    - --any-exprs-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --cobertura-xml-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --html-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --linecount-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --linecoverage-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --lineprecision-report=.tox/.tmp/.test-results/mypy--py-3.13\n    - --txt-report=.tox/.tmp/.test-results/mypy--py-3.13\n    pass_filenames: false\n  - id: mypy\n    alias: mypy-py311\n    name: MyPy, for Python 3.11\n    additional_dependencies:\n    - lxml  # dep of `--txt-report`, `--cobertura-xml-report` & `--html-report`\n    - pytest\n    - pytest-mock\n    args:\n    - --python-version=3.11\n    - --any-exprs-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --cobertura-xml-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --html-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --linecount-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --linecoverage-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --lineprecision-report=.tox/.tmp/.test-results/mypy--py-3.11\n    - --txt-report=.tox/.tmp/.test-results/mypy--py-3.11\n    pass_filenames: false\n  - id: mypy\n    alias: mypy-py39\n    name: MyPy, for Python 3.9\n    additional_dependencies:\n    - lxml  # dep of `--txt-report`, `--cobertura-xml-report` & `--html-report`\n    - pytest\n    - pytest-mock\n    args:\n    - --python-version=3.9\n    - --any-exprs-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --cobertura-xml-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --html-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --linecount-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --linecoverage-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --lineprecision-report=.tox/.tmp/.test-results/mypy--py-3.9\n    - --txt-report=.tox/.tmp/.test-results/mypy--py-3.9\n    pass_filenames: false\n\n- repo: https://github.com/jumanjihouse/pre-commit-hooks\n  rev: 3.0.0\n  hooks:\n  - id: shfmt\n    args:\n    - -l\n    - -i\n    - '2'\n    - -ci\n    - -sr\n    - -w\n  - id: shellcheck\n\n# Dockerfile linter\n- repo: https://github.com/hadolint/hadolint\n  rev: v2.12.1-beta\n  hooks:\n  - id: hadolint\n    args:\n    - --ignore=DL3007  # Using latest\n    - --ignore=DL3013  # Pin versions in pip\n    - --ignore=DL3027  # Do not use apt\n    - --ignore=DL3059  # Docker `RUN`s shouldn't be consolidated here\n    - --ignore=DL4006  # Not related to alpine\n    - --ignore=SC1091  # Useless check\n    - --ignore=SC2015  # Useless check\n    - --ignore=SC3037  # Not related to alpine\n\n# JSON5 Linter\n- repo: https://github.com/pre-commit/mirrors-prettier\n  rev: v3.1.0\n  hooks:\n  - id: prettier\n    # https://prettier.io/docs/en/options.html#parser\n    files: .json5$\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 4.912109375,
          "content": "---\n\n- id: infracost_breakdown\n  name: Infracost breakdown\n  description: Check terraform infrastructure cost\n  entry: hooks/infracost_breakdown.sh\n  language: script\n  require_serial: true\n  files: \\.(tf(vars)?|hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_fmt\n  name: Terraform fmt\n  description: >-\n    Rewrites all Terraform configuration files to a canonical format.\n  entry: hooks/terraform_fmt.sh\n  language: script\n  files: (\\.tf|\\.tfvars)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_docs\n  name: Terraform docs\n  description: >-\n    Inserts input and output documentation into README.md\n    (using terraform-docs).\n  require_serial: true\n  entry: hooks/terraform_docs.sh\n  language: script\n  files: (\\.tf|\\.terraform\\.lock\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_docs_without_aggregate_type_defaults\n  name: Terraform docs (without aggregate type defaults)\n  description: >-\n    Inserts input and output documentation into README.md\n    (using terraform-docs). Identical to terraform_docs.\n  require_serial: true\n  entry: hooks/terraform_docs.sh\n  language: script\n  files: (\\.tf)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_docs_replace\n  name: Terraform docs (overwrite README.md)\n  description: Overwrite content of README.md with terraform-docs.\n  require_serial: true\n  entry: python -Im pre_commit_terraform replace-docs\n  language: python\n  files: (\\.tf)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_validate\n  name: Terraform validate\n  description: Validates all Terraform configuration files.\n  require_serial: true\n  entry: hooks/terraform_validate.sh\n  language: script\n  files: \\.(tf(vars)?|terraform\\.lock\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_providers_lock\n  name: Lock terraform provider versions\n  description: Updates provider signatures in dependency lock files.\n  require_serial: true\n  entry: hooks/terraform_providers_lock.sh\n  language: script\n  files: (\\.terraform\\.lock\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terraform_tflint\n  name: Terraform validate with tflint\n  description: Validates all Terraform configuration files with TFLint.\n  require_serial: true\n  entry: hooks/terraform_tflint.sh\n  language: script\n  files: (\\.tf|\\.tfvars)$\n  exclude: \\.terraform/.*$\n\n- id: terragrunt_fmt\n  name: Terragrunt fmt\n  description: >-\n    Rewrites all Terragrunt configuration files to a canonical format.\n  entry: hooks/terragrunt_fmt.sh\n  language: script\n  files: (\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terragrunt_validate\n  name: Terragrunt validate\n  description: Validates all Terragrunt configuration files.\n  entry: hooks/terragrunt_validate.sh\n  language: script\n  files: (\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terragrunt_validate_inputs\n  name: Terragrunt validate inputs\n  description: Validates Terragrunt unused and undefined inputs.\n  entry: hooks/terragrunt_validate_inputs.sh\n  language: script\n  files: (\\.hcl)$\n  exclude: \\.terraform/.*$\n\n- id: terragrunt_providers_lock\n  name: Terragrunt providers lock\n  description: >-\n    Updates provider signatures in dependency lock files using terragrunt.\n  entry: hooks/terragrunt_providers_lock.sh\n  language: script\n  files: (terragrunt|\\.terraform\\.lock)\\.hcl$\n  exclude: \\.(terraform/.*|terragrunt-cache)$\n\n- id: terraform_tfsec\n  name: Terraform validate with tfsec (deprecated, use \"terraform_trivy\")\n  description: >-\n    Static analysis of Terraform templates to spot potential security issues.\n  require_serial: true\n  entry: hooks/terraform_tfsec.sh\n  files: \\.tf(vars)?$\n  language: script\n\n- id: terraform_trivy\n  name: Terraform validate with trivy\n  description: >-\n    Static analysis of Terraform templates to spot potential security issues.\n  require_serial: true\n  entry: hooks/terraform_trivy.sh\n  files: \\.tf(vars)?$\n  language: script\n\n- id: checkov\n  name: checkov (deprecated, use \"terraform_checkov\")\n  description: Runs checkov on Terraform templates.\n  entry: checkov -d .\n  language: python\n  pass_filenames: false\n  always_run: false\n  files: \\.tf$\n  exclude: \\.terraform/.*$\n  require_serial: true\n\n- id: terraform_checkov\n  name: Checkov\n  description: Runs checkov on Terraform templates.\n  entry: hooks/terraform_checkov.sh\n  language: script\n  always_run: false\n  files: \\.tf$\n  exclude: \\.terraform/.*$\n  require_serial: true\n\n- id: terraform_wrapper_module_for_each\n  name: Terraform wrapper with for_each in module\n  description: Generate Terraform wrappers with for_each in module.\n  entry: hooks/terraform_wrapper_module_for_each.sh\n  language: script\n  pass_filenames: false\n  always_run: false\n  require_serial: true\n  files: \\.tf$\n  exclude: \\.terraform/.*$\n\n- id: terrascan\n  name: terrascan\n  description: Runs terrascan on Terraform templates.\n  language: script\n  entry: hooks/terrascan.sh\n  files: \\.tf$\n  exclude: \\.terraform/.*$\n  require_serial: true\n\n- id: tfupdate\n  name: tfupdate\n  description: Runs tfupdate on Terraform templates.\n  language: script\n  entry: hooks/tfupdate.sh\n  args:\n  - --args=terraform\n  files: \\.tf$\n  require_serial: true\n"
        },
        {
          "name": ".releaserc.json",
          "type": "blob",
          "size": 0.861328125,
          "content": "{\n  \"branches\": [\n    \"main\",\n    \"master\"\n  ],\n  \"ci\": false,\n  \"plugins\": [\n    \"@semantic-release/commit-analyzer\",\n    \"@semantic-release/release-notes-generator\",\n    [\n      \"@semantic-release/github\",\n      {\n        \"successComment\":\n        \"This ${issue.pull_request ? 'PR is included' : 'issue has been resolved'} in version ${nextRelease.version} :tada:\",\n        \"labels\": false,\n        \"releasedLabels\": false\n      }\n    ],\n    [\n      \"@semantic-release/changelog\",\n      {\n        \"changelogFile\": \"CHANGELOG.md\",\n        \"changelogTitle\": \"# Changelog\\n\\nAll notable changes to this project will be documented in this file.\"\n      }\n    ],\n    [\n      \"@semantic-release/git\",\n      {\n        \"assets\": [\n          \"CHANGELOG.md\"\n        ],\n        \"message\": \"chore(release): version ${nextRelease.version} [skip ci]\\n\\n${nextRelease.notes}\"\n      }\n    ]\n  ]\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.283203125,
          "content": "---\n\nextends: default\n\nrules:\n  indentation:\n    level: error\n    indent-sequences: false\n  quoted-strings:\n    required: only-when-needed\n  truthy:\n    allowed-values:\n    - >-\n      false\n    - >-\n      true\n    - >-  # Allow \"on\" key name in GHA CI/CD workflow definitions\n      on\n\n...\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 55.681640625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n## [1.96.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.96.2...v1.96.3) (2024-12-24)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Restore multiply `--hook-config` args support. Regression from v1.95.0 ([#731](https://github.com/antonbabenko/pre-commit-terraform/issues/731)) ([87143fb](https://github.com/antonbabenko/pre-commit-terraform/commit/87143fb465503f87d5871b2d579e29b318d2bddf))\n\n## [1.96.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.96.1...v1.96.2) (2024-10-31)\n\n\n### Bug Fixes\n\n* **WSL:** Make parallelism work appropriately ([#728](https://github.com/antonbabenko/pre-commit-terraform/issues/728)) ([e87ee43](https://github.com/antonbabenko/pre-commit-terraform/commit/e87ee4371c9f09daac814845df196a65cac28a7a))\n\n## [1.96.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.96.0...v1.96.1) (2024-09-17)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Fix issue with processing multiply files without `terraform-docs` markers. Issue introduced in v1.95.0 ([#720](https://github.com/antonbabenko/pre-commit-terraform/issues/720)) ([2b1aec8](https://github.com/antonbabenko/pre-commit-terraform/commit/2b1aec86d8a086de4f25b502bdb97345de2eaa27)), closes [#717](https://github.com/antonbabenko/pre-commit-terraform/issues/717) [/github.com/antonbabenko/pre-commit-terraform/blob/869a106a4c8c48f34f58318a830436142e31e10a/hooks/terraform_docs.sh#L216](https://github.com//github.com/antonbabenko/pre-commit-terraform/blob/869a106a4c8c48f34f58318a830436142e31e10a/hooks/terraform_docs.sh/issues/L216)\n\n# [1.96.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.95.0...v1.96.0) (2024-09-16)\n\n\n### Features\n\n* Expand environment variables in `--args=` which contains lowercase symbols, like `${TF_VAR_lowercase}` ([#719](https://github.com/antonbabenko/pre-commit-terraform/issues/719)) ([bf156b4](https://github.com/antonbabenko/pre-commit-terraform/commit/bf156b40780275db9b8ab5db6d9ef41cecc78861))\n\n# [1.95.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.94.3...v1.95.0) (2024-09-11)\n\n\n### Features\n\n* **`terraform_docs`:** Drop support for `terraform-docs` <0.12.0 ([#717](https://github.com/antonbabenko/pre-commit-terraform/issues/717)) ([81e4572](https://github.com/antonbabenko/pre-commit-terraform/commit/81e4572ad4d24fb0066fbfc4626152b6c7d48838))\n\n## [1.94.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.94.2...v1.94.3) (2024-09-10)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Restore `--hook-config=--add-to-existing-file` default behavior. Regression from 1.94.0. ([#716](https://github.com/antonbabenko/pre-commit-terraform/issues/716)) ([315342e](https://github.com/antonbabenko/pre-commit-terraform/commit/315342e16d8ac8afe67222176e417ea02e415407))\n\n## [1.94.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.94.1...v1.94.2) (2024-09-09)\n\n\n### Bug Fixes\n\n* Support custom TF paths which contains spaces ([#714](https://github.com/antonbabenko/pre-commit-terraform/issues/714)) ([2bca410](https://github.com/antonbabenko/pre-commit-terraform/commit/2bca410814fad06f4d9cc9e31123277ae0eed23c))\n\n## [1.94.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.94.0...v1.94.1) (2024-08-30)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Fix non-GNU sed issues, introduced in v1.93.0, as previous fix doesn't work correctly ([#708](https://github.com/antonbabenko/pre-commit-terraform/issues/708)) ([c986c5e](https://github.com/antonbabenko/pre-commit-terraform/commit/c986c5e3440be4bf5a46c7933bb629227a3cd292))\n\n# [1.94.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.93.1...v1.94.0) (2024-08-29)\n\n\n### Features\n\n* **`terraform-docs`:** Add support for `replace` mode  for TF 0.12+; Use native saving to file for TF 0.12+. Both requires `terraform-docs` v0.12.0+ which released in 2021. ([#705](https://github.com/antonbabenko/pre-commit-terraform/issues/705)) ([1a1b4a3](https://github.com/antonbabenko/pre-commit-terraform/commit/1a1b4a3181065f221568a9bff86319435a4a87e1))\n\n## [1.93.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.93.0...v1.93.1) (2024-08-29)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Fix non-GNU `sed` issues, introduced in v1.93.0 ([#704](https://github.com/antonbabenko/pre-commit-terraform/issues/704)) ([3c8734d](https://github.com/antonbabenko/pre-commit-terraform/commit/3c8734dc55e69bcfc70eceff485768a0ee89e811))\n\n# [1.93.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.92.3...v1.93.0) (2024-08-28)\n\n\n### Features\n\n* **`terraform_docs`:** Start seamless migration to `terraform-docs` markers ([#701](https://github.com/antonbabenko/pre-commit-terraform/issues/701)) ([d03f44f](https://github.com/antonbabenko/pre-commit-terraform/commit/d03f44facabf31ab7d464468907fb0a5d549e5e7))\n\n## [1.92.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.92.2...v1.92.3) (2024-08-27)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Suppress redundant warnings pop-ups introduced in v1.92.2 ([#700](https://github.com/antonbabenko/pre-commit-terraform/issues/700)) ([59b2454](https://github.com/antonbabenko/pre-commit-terraform/commit/59b2454e076a9d26ad93d0ca4037746fd7f5962d))\n\n## [1.92.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.92.1...v1.92.2) (2024-08-16)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Fix issue and prioritize `output.file` setting from `.terraform-docs.yml` config over `--hook-config=--path-to-file=` ([#698](https://github.com/antonbabenko/pre-commit-terraform/issues/698)) ([9d6a22b](https://github.com/antonbabenko/pre-commit-terraform/commit/9d6a22badbd9693a72c2519eb7dde01d10db57b2))\n\n## [1.92.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.92.0...v1.92.1) (2024-08-01)\n\n\n### Bug Fixes\n\n* **`terraform_docs`:** Suppress \"terraform command not found\" error message in case binary does not exist ([#693](https://github.com/antonbabenko/pre-commit-terraform/issues/693)) ([6ff3572](https://github.com/antonbabenko/pre-commit-terraform/commit/6ff3572afb0a70c6fe4c6a0524d1f332a4f8fb6c))\n\n# [1.92.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.91.0...v1.92.0) (2024-06-19)\n\n\n### Features\n\n* Add `terragrunt_validate_inputs` hook to check unused and undefined inputs ([#677](https://github.com/antonbabenko/pre-commit-terraform/issues/677)) ([a139b71](https://github.com/antonbabenko/pre-commit-terraform/commit/a139b71bc722ac1d2d5ed89caeb74d66a882bb94))\n\n# [1.91.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.90.0...v1.91.0) (2024-06-07)\n\n\n### Features\n\n* Added Terramate as sponsor ([#676](https://github.com/antonbabenko/pre-commit-terraform/issues/676)) ([dae1a48](https://github.com/antonbabenko/pre-commit-terraform/commit/dae1a483b429506863c3c7203932fef4fa74f86a))\n\n# [1.90.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.89.1...v1.90.0) (2024-05-23)\n\n\n### Features\n\n* Support set custom TF/OpenTofu binary. | If you use a custom Docker image build, please note that `TERRAFORM_VERSION` now must be provided ([#670](https://github.com/antonbabenko/pre-commit-terraform/issues/670)) ([c7011c0](https://github.com/antonbabenko/pre-commit-terraform/commit/c7011c06b84fc96c9a5f2f4508d5ced83ddd2af0))\n\n## [1.89.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.89.0...v1.89.1) (2024-04-25)\n\n\n### Bug Fixes\n\n* **docker:** Prevent all possible \"silent errors\" during `docker build` ([#644](https://github.com/antonbabenko/pre-commit-terraform/issues/644)) ([0340c8d](https://github.com/antonbabenko/pre-commit-terraform/commit/0340c8d00fe3ba39829b66fd7890d828697a7878))\n\n# [1.89.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.88.4...v1.89.0) (2024-04-15)\n\n\n### Features\n\n* Hook terraform_wrapper_module_for_each should use versions.tf from the module if it exists ([#657](https://github.com/antonbabenko/pre-commit-terraform/issues/657)) ([b127601](https://github.com/antonbabenko/pre-commit-terraform/commit/b127601a0b3d5af3dcc9f91a6d74e16f37d66a60))\n\n## [1.88.4](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.88.3...v1.88.4) (2024-03-25)\n\n\n### Bug Fixes\n\n* Improve README and drop quotes from hook env vars ([#651](https://github.com/antonbabenko/pre-commit-terraform/issues/651)) ([daec682](https://github.com/antonbabenko/pre-commit-terraform/commit/daec6823f980ef0e9ac8675ed93b6861fcbe58cc))\n\n## [1.88.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.88.2...v1.88.3) (2024-03-22)\n\n\n### Bug Fixes\n\n* **`terraform_providers_lock`:** Require `terraform init` (and `terraform_validate` hook) run when only lockfile changed ([#649](https://github.com/antonbabenko/pre-commit-terraform/issues/649)) ([02c1935](https://github.com/antonbabenko/pre-commit-terraform/commit/02c1935a12c889a029bc0a571410f19eb39bbab1))\n\n## [1.88.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.88.1...v1.88.2) (2024-03-13)\n\n\n### Bug Fixes\n\n* **non-linux:** Bash environment variables in arguments not expanded + Add `trace` log level ([#645](https://github.com/antonbabenko/pre-commit-terraform/issues/645)) ([a2a2990](https://github.com/antonbabenko/pre-commit-terraform/commit/a2a2990ca42f93e2c1d61507d8c75e493d29dee6))\n\n## [1.88.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.88.0...v1.88.1) (2024-03-11)\n\n\n### Bug Fixes\n\n* **docker:** Checkov installation silently fails on `docker build` in arm64. Workaround till issue will be fixed in `checkov` itself ([#635](https://github.com/antonbabenko/pre-commit-terraform/issues/635)) ([f255b05](https://github.com/antonbabenko/pre-commit-terraform/commit/f255b05feaace02f38822e3b53cf38c38e069115))\n\n# [1.88.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.87.1...v1.88.0) (2024-02-22)\n\n\n### Features\n\n* Add `terragrunt_providers_lock` hook ([#632](https://github.com/antonbabenko/pre-commit-terraform/issues/632)) ([77940fd](https://github.com/antonbabenko/pre-commit-terraform/commit/77940fd1fbbe9d3ea70306f396e1d8a13534d51d))\n\n## [1.87.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.87.0...v1.87.1) (2024-02-19)\n\n\n### Bug Fixes\n\n* Replace `mapfile` to support Bash 3.2.57 pre-installed in macOS ([#628](https://github.com/antonbabenko/pre-commit-terraform/issues/628)) ([01ab3f0](https://github.com/antonbabenko/pre-commit-terraform/commit/01ab3f0c68abda9f5799647f783c91c3d1fa3a90))\n\n# [1.87.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.86.1...v1.87.0) (2024-02-17)\n\n\n### Features\n\n* Add parallelism to major chunk of hooks. Check `Parallelism` section in README ([#620](https://github.com/antonbabenko/pre-commit-terraform/issues/620)) ([6c6eca4](https://github.com/antonbabenko/pre-commit-terraform/commit/6c6eca463a74fa2608cb3de3e03873765d46252f))\n\n## [1.86.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.86.0...v1.86.1) (2024-02-16)\n\n\n### Bug Fixes\n\n* `grep: warning: stray \\ before /` which pop-up in `grep 3.8` ([#625](https://github.com/antonbabenko/pre-commit-terraform/issues/625)) ([e1a93b2](https://github.com/antonbabenko/pre-commit-terraform/commit/e1a93b26b29eda144fd0f53e3d84a99c07b15070))\n\n# [1.86.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.85.0...v1.86.0) (2023-12-21)\n\n\n### Features\n\n* **`terraform_docs`:** Add `terraform-docs` default markers support and describe how to migrate to them ([#609](https://github.com/antonbabenko/pre-commit-terraform/issues/609)) ([4a0e1fe](https://github.com/antonbabenko/pre-commit-terraform/commit/4a0e1fed008230b65085da0e42b7695bc4e0a5f1))\n\n# [1.85.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.84.0...v1.85.0) (2023-12-15)\n\n\n### Features\n\n* **trivy:** Add `terraform_trivy` hook and deprecate `terraform_tfsec` ([#606](https://github.com/antonbabenko/pre-commit-terraform/issues/606)) ([f3c819a](https://github.com/antonbabenko/pre-commit-terraform/commit/f3c819a747662d1257fa6989318d6ede5fabaff3))\n\n# [1.84.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.6...v1.84.0) (2023-12-12)\n\n\n### Features\n\n* **deps:** Bump Python version in docker image from 3.11.5 to v3.12.0 ([#597](https://github.com/antonbabenko/pre-commit-terraform/issues/597)) ([28e3cde](https://github.com/antonbabenko/pre-commit-terraform/commit/28e3cde152370bcc5b38e82beb0345299f8c511d))\n\n## [1.83.6](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.5...v1.83.6) (2023-11-16)\n\n\n### Bug Fixes\n\n* **`terraform_validate`:** Run `terraform init` on \"Missing required provider\" error ([#586](https://github.com/antonbabenko/pre-commit-terraform/issues/586)) ([6e2bb2e](https://github.com/antonbabenko/pre-commit-terraform/commit/6e2bb2e2a12528903d8b8a21f2924473e498385a))\n\n## [1.83.5](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.4...v1.83.5) (2023-10-11)\n\n\n### Bug Fixes\n\n* Suppress duplicate error messages in `terraform_validate` ([#577](https://github.com/antonbabenko/pre-commit-terraform/issues/577)) ([4ea6b14](https://github.com/antonbabenko/pre-commit-terraform/commit/4ea6b14c6fdf48e33fa6e116cbe332bba0888bbb))\n\n## [1.83.4](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.3...v1.83.4) (2023-09-22)\n\n\n### Bug Fixes\n\n* Fix terraform_wrapper_module_for_each for when resource name contains 'variable' ([#573](https://github.com/antonbabenko/pre-commit-terraform/issues/573)) ([941177e](https://github.com/antonbabenko/pre-commit-terraform/commit/941177e066e8de255f58f0a5afbda72995eb3f08))\n\n## [1.83.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.2...v1.83.3) (2023-09-15)\n\n\n### Bug Fixes\n\n* Run `terraform_tfsec` only on terraform code changes ([#571](https://github.com/antonbabenko/pre-commit-terraform/issues/571)) ([4253162](https://github.com/antonbabenko/pre-commit-terraform/commit/42531626144fb8cdca3d5750c7206393f501feb4))\n\n## [1.83.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.1...v1.83.2) (2023-09-04)\n\n\n### Bug Fixes\n\n* Extend `terraform_validate` `--retry-once-with-cleanup` errors list ([#566](https://github.com/antonbabenko/pre-commit-terraform/issues/566)) ([19188e5](https://github.com/antonbabenko/pre-commit-terraform/commit/19188e5c384a1803bca607e4e79faf61cc55a5b9))\n\n## [1.83.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.83.0...v1.83.1) (2023-09-04)\n\n\n### Bug Fixes\n\n* Fixed ordering issue in terraform_wrapper_module_for_each hook ([#565](https://github.com/antonbabenko/pre-commit-terraform/issues/565)) ([dc12be1](https://github.com/antonbabenko/pre-commit-terraform/commit/dc12be1faff4b73a3fc9bd62296c40a351597a20))\n\n# [1.83.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.82.0...v1.83.0) (2023-08-25)\n\n\n### Features\n\n* Skip legacy modules (with provider block) in terraform_wrapper_module_for_each hook ([#560](https://github.com/antonbabenko/pre-commit-terraform/issues/560)) ([456cc76](https://github.com/antonbabenko/pre-commit-terraform/commit/456cc7616ac4facc3392c51ed9606a7535f8fd0f))\n\n# [1.82.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.81.2...v1.82.0) (2023-08-15)\n\n\n### Features\n\n* **docker:** Add ssh-client to Docker image to access private modules via ssh ([#553](https://github.com/antonbabenko/pre-commit-terraform/issues/553)) ([1d76157](https://github.com/antonbabenko/pre-commit-terraform/commit/1d76157c9d67a2cbc1b08a4d7bc5ad53a3b663e7))\n\n## [1.81.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.81.1...v1.81.2) (2023-08-10)\n\n\n### Bug Fixes\n\n* Fix terraform_wrapper_module_for_each hook heredoc vars defaults ([#554](https://github.com/antonbabenko/pre-commit-terraform/issues/554)) ([6fd4263](https://github.com/antonbabenko/pre-commit-terraform/commit/6fd4263f599ff3318cc2095dde03a312bb617511))\n\n## [1.81.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.81.0...v1.81.1) (2023-08-10)\n\n\n### Bug Fixes\n\n* Fix the terraform_wrapper_module_for_each hook for modules without outputs or variables ([#552](https://github.com/antonbabenko/pre-commit-terraform/issues/552)) ([f24b3fa](https://github.com/antonbabenko/pre-commit-terraform/commit/f24b3fab71b248c4be75ec378c43e6921053491a))\n\n# [1.81.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.80.0...v1.81.0) (2023-06-12)\n\n\n### Features\n\n* Speedup `terraform_validate` - firstly try run validate without checking is `.terraform/` is valid ([#524](https://github.com/antonbabenko/pre-commit-terraform/issues/524)) ([d0d08ac](https://github.com/antonbabenko/pre-commit-terraform/commit/d0d08ac63cebd23e4ee7ff58fb91ea20c398ab69))\n\n# [1.80.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.79.1...v1.80.0) (2023-05-30)\n\n\n### Features\n\n* **`terraform_providers_lock`:** Add `--mode` option and deprecate previous workflow ([#528](https://github.com/antonbabenko/pre-commit-terraform/issues/528)) ([2426b52](https://github.com/antonbabenko/pre-commit-terraform/commit/2426b527aeee39aad0386cbbd734747d883ed7b6))\n\n## [1.79.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.79.0...v1.79.1) (2023-05-09)\n\n\n### Bug Fixes\n\n* Fix `terraform_providers_lock` hook broken in v1.79.0 ([#521](https://github.com/antonbabenko/pre-commit-terraform/issues/521)) ([6bfc5bf](https://github.com/antonbabenko/pre-commit-terraform/commit/6bfc5bf7670a6d9fbf21d1a686fdaa941ab34aa6))\n\n# [1.79.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.78.0...v1.79.0) (2023-05-08)\n\n\n### Features\n\n* TFLint: Add `--hook-config=--delegate-chdir` to use `tflint -chdir` ([#512](https://github.com/antonbabenko/pre-commit-terraform/issues/512)) ([1e9debc](https://github.com/antonbabenko/pre-commit-terraform/commit/1e9debc02f558156823fc1ddd5cf2b48b1593167))\n\n# [1.78.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.77.4...v1.78.0) (2023-04-28)\n\n\n### Features\n\n* **ci:** Build multi-arch Docker images (`amd64`, `arm64`) ([#496](https://github.com/antonbabenko/pre-commit-terraform/issues/496)) ([923c2c6](https://github.com/antonbabenko/pre-commit-terraform/commit/923c2c6a1e093620980790e864801f48a13ecf57))\n\n## [1.77.4](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.77.3...v1.77.4) (2023-04-28)\n\n\n### Bug Fixes\n\n* Speed up x2 TFLint hook execution in dirs with violations ([#514](https://github.com/antonbabenko/pre-commit-terraform/issues/514)) ([49974ab](https://github.com/antonbabenko/pre-commit-terraform/commit/49974ab9ef37e199d65778e6055aaf8130c6a875))\n\n## [1.77.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.77.2...v1.77.3) (2023-04-21)\n\n\n### Bug Fixes\n\n* Updates all dependencies used in Dockerfile and fix Docker image ([#507](https://github.com/antonbabenko/pre-commit-terraform/issues/507)) ([dc177fe](https://github.com/antonbabenko/pre-commit-terraform/commit/dc177fe29ed250fbb98702248c7de232bdb75f58))\n\n## [1.77.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.77.1...v1.77.2) (2023-04-09)\n\n\n### Bug Fixes\n\n* Fixed spacing in `terraform_wrapper_module_for_each` hook ([#503](https://github.com/antonbabenko/pre-commit-terraform/issues/503)) ([ddc0d81](https://github.com/antonbabenko/pre-commit-terraform/commit/ddc0d81d31a2571de95246b9970216ae0e4432c4))\n\n## [1.77.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.77.0...v1.77.1) (2023-02-03)\n\n\n### Bug Fixes\n\n* Pass command line arguments to tflint init ([#487](https://github.com/antonbabenko/pre-commit-terraform/issues/487)) ([29a8c00](https://github.com/antonbabenko/pre-commit-terraform/commit/29a8c00251e16941059df0f460b1e55890d4d7b5))\n\n# [1.77.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.76.1...v1.77.0) (2022-11-26)\n\n\n### Features\n\n* Add `--retry-once-with-cleanup` to `terraform_validate` ([#441](https://github.com/antonbabenko/pre-commit-terraform/issues/441)) ([96fe3ef](https://github.com/antonbabenko/pre-commit-terraform/commit/96fe3ef6577705ee72ae33cba5f366ce32b9a5f7))\n\n## [1.76.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.76.0...v1.76.1) (2022-11-26)\n\n\n### Bug Fixes\n\n* Describe migration instructions from `terraform_docs_replace` ([#451](https://github.com/antonbabenko/pre-commit-terraform/issues/451)) ([a8bcaa7](https://github.com/antonbabenko/pre-commit-terraform/commit/a8bcaa7975175679f2da0a5d1379f0e20446a2f9))\n\n# [1.76.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.75.0...v1.76.0) (2022-10-06)\n\n\n### Features\n\n* Add support for version constraints in `tfupdate` ([#437](https://github.com/antonbabenko/pre-commit-terraform/issues/437)) ([a446642](https://github.com/antonbabenko/pre-commit-terraform/commit/a4466425fb486257cfc672094d92b0fb04fdfe93))\n\n# [1.75.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.74.2...v1.75.0) (2022-09-07)\n\n\n### Features\n\n* Allow running container as non-root UID/GID for ownership issues (docker) ([#433](https://github.com/antonbabenko/pre-commit-terraform/issues/433)) ([abc2570](https://github.com/antonbabenko/pre-commit-terraform/commit/abc2570e42d3b01b56d34a474eedbf13063d3c31))\n\n## [1.74.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.74.1...v1.74.2) (2022-09-02)\n\n\n### Bug Fixes\n\n* Fixed url for wrappers in generated README (terraform_wrapper_module_for_each) ([#429](https://github.com/antonbabenko/pre-commit-terraform/issues/429)) ([fe29c6c](https://github.com/antonbabenko/pre-commit-terraform/commit/fe29c6c71abf31e5e7fbba6ed1d3555971e89ee4))\n\n## [1.74.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.74.0...v1.74.1) (2022-07-13)\n\n\n### Bug Fixes\n\n* Passed scenario in `terraform_docs` hook now works as expected ([7ac2736](https://github.com/antonbabenko/pre-commit-terraform/commit/7ac2736ab9544455b06fb66f2fb40d3609a010b6))\n\n# [1.74.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.73.0...v1.74.0) (2022-07-12)\n\n\n### Bug Fixes\n\n* Add `--env-vars`, deprecate `--envs` ([#410](https://github.com/antonbabenko/pre-commit-terraform/issues/410)) ([2b35cad](https://github.com/antonbabenko/pre-commit-terraform/commit/2b35cad50fd7fe1c662cab1bfaab2a4ef7baa3c9))\n* Add `--tf-init-args`, deprecate `--init-args` ([#407](https://github.com/antonbabenko/pre-commit-terraform/issues/407)) ([c4f8251](https://github.com/antonbabenko/pre-commit-terraform/commit/c4f8251d302260953c62a6b2116ea89584ce04a6))\n\n\n### Features\n\n* Add support for set env vars inside hook runtime ([#408](https://github.com/antonbabenko/pre-commit-terraform/issues/408)) ([d490231](https://github.com/antonbabenko/pre-commit-terraform/commit/d4902313ce11cc12c738397463f307b830a9ba3e))\n* Allow `terraform_providers_lock` specify terraform init args ([#406](https://github.com/antonbabenko/pre-commit-terraform/issues/406)) ([32b232f](https://github.com/antonbabenko/pre-commit-terraform/commit/32b232f039ceee24b2db8e09de57047c78c6005b))\n* Suppress color for all hooks if `PRE_COMMIT_COLOR=never` set ([#409](https://github.com/antonbabenko/pre-commit-terraform/issues/409)) ([b12f0c6](https://github.com/antonbabenko/pre-commit-terraform/commit/b12f0c662c4ebd104b27880fc380854590c0ca22))\n\n# [1.73.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.72.2...v1.73.0) (2022-06-27)\n\n\n### Features\n\n* Add __GIT_WORKING_DIR__ to terraform_checkov ([#399](https://github.com/antonbabenko/pre-commit-terraform/issues/399)) ([ae88ed7](https://github.com/antonbabenko/pre-commit-terraform/commit/ae88ed73cfb63398270608d4e68f46bb4424f150))\n\n## [1.72.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.72.1...v1.72.2) (2022-06-21)\n\n\n### Bug Fixes\n\n* Pre-commit-terraform terraform_validate hook ([#401](https://github.com/antonbabenko/pre-commit-terraform/issues/401)) ([d9f482c](https://github.com/antonbabenko/pre-commit-terraform/commit/d9f482c0c6fa0bd464bbaa7444b4f853f1bc4fb9))\n\n## [1.72.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.72.0...v1.72.1) (2022-05-25)\n\n\n### Bug Fixes\n\n* Fixed `terraform_fmt` with `tfenv`, when `terraform` default version is not specified ([#389](https://github.com/antonbabenko/pre-commit-terraform/issues/389)) ([1b9476a](https://github.com/antonbabenko/pre-commit-terraform/commit/1b9476a2798f49c474cb59e812ddaf66b2cc6ca2))\n\n# [1.72.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.71.0...v1.72.0) (2022-05-25)\n\n\n### Features\n\n* When a config file is given, do not specify formatter on cli (terraform_docs) ([#386](https://github.com/antonbabenko/pre-commit-terraform/issues/386)) ([962054b](https://github.com/antonbabenko/pre-commit-terraform/commit/962054b923e7a4fff5338fd3f5cb76f957797dd3))\n\n# [1.71.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.70.1...v1.71.0) (2022-05-02)\n\n\n### Features\n\n* Added terraform_wrapper_module_for_each hook ([#376](https://github.com/antonbabenko/pre-commit-terraform/issues/376)) ([e4e9a73](https://github.com/antonbabenko/pre-commit-terraform/commit/e4e9a73d7eb8182bcad5ffca17876d1c0a4a8a49))\n\n## [1.70.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.70.0...v1.70.1) (2022-04-28)\n\n\n### Bug Fixes\n\n* Fixed `tfupdate` to work in all cases, not only `pre-commit run --all` ([#375](https://github.com/antonbabenko/pre-commit-terraform/issues/375)) ([297cc75](https://github.com/antonbabenko/pre-commit-terraform/commit/297cc757879f25bed6d3adf3b6254cf0d37b17c2))\n\n# [1.70.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.69.0...v1.70.0) (2022-04-28)\n\n\n### Features\n\n* Add support for `pre-commit/pre-commit-hooks` in Docker image ([#374](https://github.com/antonbabenko/pre-commit-terraform/issues/374)) ([017da74](https://github.com/antonbabenko/pre-commit-terraform/commit/017da745d0817f94b44c3c773e4aa8d42a80aa09))\n\n# [1.69.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.68.1...v1.69.0) (2022-04-26)\n\n\n### Features\n\n* Allow env vars expansion in `--args` section for all hooks ([#363](https://github.com/antonbabenko/pre-commit-terraform/issues/363)) ([caa01c3](https://github.com/antonbabenko/pre-commit-terraform/commit/caa01c30b33a5a829b75ee6a9e9e08a534a42216))\n\n## [1.68.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.68.0...v1.68.1) (2022-04-20)\n\n\n### Bug Fixes\n\n* Fixed git fatal error in Dockerfile ([#372](https://github.com/antonbabenko/pre-commit-terraform/issues/372)) ([c3f8dd4](https://github.com/antonbabenko/pre-commit-terraform/commit/c3f8dd40e6d6867c661e2495f8194ee7bd9c7fdd))\n\n# [1.68.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.67.0...v1.68.0) (2022-04-18)\n\n\n### Features\n\n* Removed `coreutils` (realpath) from dependencies for MacOS ([#368](https://github.com/antonbabenko/pre-commit-terraform/issues/368)) ([944a2e5](https://github.com/antonbabenko/pre-commit-terraform/commit/944a2e5fefd50df6130c68bcaa4beb4d770c11b9))\n\n# [1.67.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.66.0...v1.67.0) (2022-04-15)\n\n\n### Features\n\n* Added `terraform_checkov` (run per folder), deprecated `checkov` hook ([#290](https://github.com/antonbabenko/pre-commit-terraform/issues/290)) ([e3a9834](https://github.com/antonbabenko/pre-commit-terraform/commit/e3a98345bb3be407c476749496827b418b81241c))\n\n# [1.66.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.65.1...v1.66.0) (2022-04-13)\n\n\n### Features\n\n* Added support for `tfupdate` to update version constraints in Terraform configurations ([#342](https://github.com/antonbabenko/pre-commit-terraform/issues/342)) ([ef7a0f2](https://github.com/antonbabenko/pre-commit-terraform/commit/ef7a0f2b467d20f30341d25df3d4012cff2194ec))\n\n## [1.65.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.65.0...v1.65.1) (2022-04-13)\n\n\n### Bug Fixes\n\n* Improve `tflint --init` command execution ([#361](https://github.com/antonbabenko/pre-commit-terraform/issues/361)) ([d31cb69](https://github.com/antonbabenko/pre-commit-terraform/commit/d31cb6936376bd1aaa9ada83021c29e6ca6727e0))\n\n# [1.65.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.64.1...v1.65.0) (2022-04-13)\n\n\n### Features\n\n* Adding init to terraform_tflint hook ([#352](https://github.com/antonbabenko/pre-commit-terraform/issues/352)) ([1aff30f](https://github.com/antonbabenko/pre-commit-terraform/commit/1aff30f2a4cb0df65a1e693690b5225a112cf621))\n\n## [1.64.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.64.0...v1.64.1) (2022-03-31)\n\n\n### Bug Fixes\n\n* Make hooks bash 3.2 compatible ([#339](https://github.com/antonbabenko/pre-commit-terraform/issues/339)) ([4ad825d](https://github.com/antonbabenko/pre-commit-terraform/commit/4ad825d8d39254c69f0e01fb3e7728f0be9acbb9))\n\n# [1.64.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.63.0...v1.64.0) (2022-02-10)\n\n\n### Features\n\n* Improved speed of `pre-commit run -a` for multiple hooks ([#338](https://github.com/antonbabenko/pre-commit-terraform/issues/338)) ([579dc45](https://github.com/antonbabenko/pre-commit-terraform/commit/579dc45fb40bc64c6742d42a9da78eddb0b70e1d))\n\n# [1.63.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.62.3...v1.63.0) (2022-02-10)\n\n\n### Features\n\n* Improve performance during `pre-commit --all (-a)` run ([#327](https://github.com/antonbabenko/pre-commit-terraform/issues/327)) ([7e7c916](https://github.com/antonbabenko/pre-commit-terraform/commit/7e7c91643e8f213168b95d0583f787f914b04ce4))\n\n## [1.62.3](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.62.2...v1.62.3) (2021-12-22)\n\n\n### Bug Fixes\n\n* Check all directories with changes and pass all args in terrascan hook ([#305](https://github.com/antonbabenko/pre-commit-terraform/issues/305)) ([66401d9](https://github.com/antonbabenko/pre-commit-terraform/commit/66401d93f485164fb2272af297df835b932c61c3))\n\n## [1.62.2](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.62.1...v1.62.2) (2021-12-21)\n\n\n### Bug Fixes\n\n* Properly exclude .terraform directory with checkov hook ([#306](https://github.com/antonbabenko/pre-commit-terraform/issues/306)) ([b431a43](https://github.com/antonbabenko/pre-commit-terraform/commit/b431a43ffa6cd13156485ef853c967856e9572ef))\n* Speedup `terrascan` hook up to x3 times in big repos ([#307](https://github.com/antonbabenko/pre-commit-terraform/issues/307)) ([2e8dcf9](https://github.com/antonbabenko/pre-commit-terraform/commit/2e8dcf9298733a256cc7f8c6f05b3ef9a1047a36))\n\n## [1.62.1](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.62.0...v1.62.1) (2021-12-18)\n\n\n### Bug Fixes\n\n* **terraform_tflint:** Restore current working directory behavior ([#302](https://github.com/antonbabenko/pre-commit-terraform/issues/302)) ([93029dc](https://github.com/antonbabenko/pre-commit-terraform/commit/93029dcfcf6b9b121c24573f3e647d9fde255486))\n\n# [1.62.0](https://github.com/antonbabenko/pre-commit-terraform/compare/v1.61.0...v1.62.0) (2021-12-12)\n\n\n### Features\n\n* Added semantic release ([#296](https://github.com/antonbabenko/pre-commit-terraform/issues/296)) ([1bcca44](https://github.com/antonbabenko/pre-commit-terraform/commit/1bcca44d1677128c23d505be644f1d16c320eb4c))\n\n# Change Log\n\nAll notable changes to this project will be documented in this file.\n\n<a name=\"unreleased\"></a>\n## [Unreleased]\n\n\n\n<a name=\"v1.61.0\"></a>\n## [v1.61.0] - 2021-12-11\n\n- feat: Pass custom arguments to terraform init in `terraform_validate` hook ([#293](https://github.com/antonbabenko/pre-commit-terraform/issues/293))\n- fix: analyse all folders with tflint and don't stop on first execution ([#289](https://github.com/antonbabenko/pre-commit-terraform/issues/289))\n\n\n<a name=\"v1.60.0\"></a>\n## [v1.60.0] - 2021-12-08\n\n- fix: pre-build docker image ([#292](https://github.com/antonbabenko/pre-commit-terraform/issues/292))\n\n\n<a name=\"v1.59.0\"></a>\n## [v1.59.0] - 2021-12-06\n\n- fix: Fixed docker build ([#288](https://github.com/antonbabenko/pre-commit-terraform/issues/288))\n\n\n<a name=\"v1.58.0\"></a>\n## [v1.58.0] - 2021-11-20\n\n- chore: Publish container image on release ([#285](https://github.com/antonbabenko/pre-commit-terraform/issues/285))\n- chore: Fix master merge to working branch on pre-commit autofixes ([#286](https://github.com/antonbabenko/pre-commit-terraform/issues/286))\n\n\n<a name=\"v1.57.0\"></a>\n## [v1.57.0] - 2021-11-17\n\n- fix: typo in arg name for terraform-docs ([#283](https://github.com/antonbabenko/pre-commit-terraform/issues/283))\n- chore: Add deprecation notice to `terraform_docs_replace` ([#280](https://github.com/antonbabenko/pre-commit-terraform/issues/280))\n\n\n<a name=\"v1.56.0\"></a>\n## [v1.56.0] - 2021-11-08\n\n- feat: Updated Docker image from Ubuntu to Alpine ([#278](https://github.com/antonbabenko/pre-commit-terraform/issues/278))\n- chore: Updated messages shown in terraform_tflint hook ([#274](https://github.com/antonbabenko/pre-commit-terraform/issues/274))\n\n\n<a name=\"v1.55.0\"></a>\n## [v1.55.0] - 2021-10-27\n\n- fix: Fixed 1.54.0 where `terraform_docs` was broken ([#272](https://github.com/antonbabenko/pre-commit-terraform/issues/272))\n\n\n<a name=\"v1.54.0\"></a>\n## [v1.54.0] - 2021-10-27\n\n- feat: Add support for quoted values in `infracost_breakdown` `--hook-config` ([#269](https://github.com/antonbabenko/pre-commit-terraform/issues/269))\n- docs: Added notes about sponsors ([#268](https://github.com/antonbabenko/pre-commit-terraform/issues/268))\n- fix: Fixed args expand in terraform_docs ([#260](https://github.com/antonbabenko/pre-commit-terraform/issues/260))\n\n\n<a name=\"v1.53.0\"></a>\n## [v1.53.0] - 2021-10-26\n\n- docs: Pre-release 1.53 ([#267](https://github.com/antonbabenko/pre-commit-terraform/issues/267))\n- docs: Clarify docs for terraform_tfsec hook ([#266](https://github.com/antonbabenko/pre-commit-terraform/issues/266))\n- feat: Add infracost_breakdown hook ([#252](https://github.com/antonbabenko/pre-commit-terraform/issues/252))\n- feat: Set up PR reviewers automatically ([#258](https://github.com/antonbabenko/pre-commit-terraform/issues/258))\n- docs: fix protocol to prevent MITM ([#257](https://github.com/antonbabenko/pre-commit-terraform/issues/257))\n- feat: add __GIT_WORKING_DIR__ to tfsec ([#255](https://github.com/antonbabenko/pre-commit-terraform/issues/255))\n- docs: Add missing space in terrascan install cmd ([#253](https://github.com/antonbabenko/pre-commit-terraform/issues/253))\n- fix: command not found ([#251](https://github.com/antonbabenko/pre-commit-terraform/issues/251))\n- fix: execute tflint once in no errors ([#250](https://github.com/antonbabenko/pre-commit-terraform/issues/250))\n- docs: fix deps ([#249](https://github.com/antonbabenko/pre-commit-terraform/issues/249))\n- feat: Add `terraform_docs` hook settings ([#245](https://github.com/antonbabenko/pre-commit-terraform/issues/245))\n- fix: terrafrom_tflint ERROR output for files located in repo root ([#243](https://github.com/antonbabenko/pre-commit-terraform/issues/243))\n- feat: Add support for specify terraform-docs config file ([#244](https://github.com/antonbabenko/pre-commit-terraform/issues/244))\n- docs: Document hooks dependencies ([#247](https://github.com/antonbabenko/pre-commit-terraform/issues/247))\n- feat: Allow passing of args to terraform_fmt ([#147](https://github.com/antonbabenko/pre-commit-terraform/issues/147))\n- docs: Add terraform_fmt usage instructions and how-to debug script with args ([#242](https://github.com/antonbabenko/pre-commit-terraform/issues/242))\n- fix: TFSec outputs the same results multiple times ([#237](https://github.com/antonbabenko/pre-commit-terraform/issues/237))\n- chore: Do not mark issues and PR's in milestone as stale ([#241](https://github.com/antonbabenko/pre-commit-terraform/issues/241))\n\n\n<a name=\"v1.52.0\"></a>\n## [v1.52.0] - 2021-10-04\n\n- feat: Add new hook for `terraform providers lock` operation ([#173](https://github.com/antonbabenko/pre-commit-terraform/issues/173))\n- docs: Document terraform_tfsec args usage ([#238](https://github.com/antonbabenko/pre-commit-terraform/issues/238))\n- docs: Make contributors more visible ([#236](https://github.com/antonbabenko/pre-commit-terraform/issues/236))\n- docs: Add contributing guide and docs about performance tests ([#235](https://github.com/antonbabenko/pre-commit-terraform/issues/235))\n- fix: terraform_tflint hook executes in a serial way to run less often ([#211](https://github.com/antonbabenko/pre-commit-terraform/issues/211))\n- feat: Add PATH outputs when TFLint found any problem ([#234](https://github.com/antonbabenko/pre-commit-terraform/issues/234))\n- fix: Dockerfile if INSTALL_ALL is not defined ([#233](https://github.com/antonbabenko/pre-commit-terraform/issues/233))\n- docs: Describe hooks usage and improve examples ([#232](https://github.com/antonbabenko/pre-commit-terraform/issues/232))\n- chore: Add shfmt to workflow ([#231](https://github.com/antonbabenko/pre-commit-terraform/issues/231))\n- fix: remove dead code from terraform-docs script ([#229](https://github.com/antonbabenko/pre-commit-terraform/issues/229))\n\n\n<a name=\"v1.51.0\"></a>\n## [v1.51.0] - 2021-09-17\n\n- fix: trigger terraform-docs on changes in lock files ([#228](https://github.com/antonbabenko/pre-commit-terraform/issues/228))\n- fix: label auto-adding after label rename ([#226](https://github.com/antonbabenko/pre-commit-terraform/issues/226))\n- chore: Updated GH stale action config ([#223](https://github.com/antonbabenko/pre-commit-terraform/issues/223))\n- feat: Add GH checks and templates ([#222](https://github.com/antonbabenko/pre-commit-terraform/issues/222))\n- feat: Add mixed line ending check to prevent possible errors ([#221](https://github.com/antonbabenko/pre-commit-terraform/issues/221))\n- fix: Dockerized pre-commit-terraform ([#219](https://github.com/antonbabenko/pre-commit-terraform/issues/219))\n- docs: Initial docs improvement ([#218](https://github.com/antonbabenko/pre-commit-terraform/issues/218))\n- chore: Update Ubuntu install method ([#198](https://github.com/antonbabenko/pre-commit-terraform/issues/198))\n\n\n<a name=\"v1.50.0\"></a>\n## [v1.50.0] - 2021-04-22\n\n- feat: Adds support for Terrascan ([#195](https://github.com/antonbabenko/pre-commit-terraform/issues/195))\n\n\n<a name=\"v1.49.0\"></a>\n## [v1.49.0] - 2021-04-20\n\n- fix: Fix and pin versions in Dockerfile ([#193](https://github.com/antonbabenko/pre-commit-terraform/issues/193))\n- chore: Fix mistake on command ([#185](https://github.com/antonbabenko/pre-commit-terraform/issues/185))\n- Update README.md\n\n\n<a name=\"v1.48.0\"></a>\n## [v1.48.0] - 2021-03-12\n\n- chore: add dockerfile ([#183](https://github.com/antonbabenko/pre-commit-terraform/issues/183))\n- docs: Added checkov install ([#182](https://github.com/antonbabenko/pre-commit-terraform/issues/182))\n\n\n<a name=\"v1.47.0\"></a>\n## [v1.47.0] - 2021-02-25\n\n- fix: remove sed postprocessing from the terraform_docs_replace hook to fix compatibility with terraform-docs 0.11.0+ ([#176](https://github.com/antonbabenko/pre-commit-terraform/issues/176))\n- docs: updates installs for macOS and ubuntu ([#175](https://github.com/antonbabenko/pre-commit-terraform/issues/175))\n\n\n<a name=\"v1.46.0\"></a>\n## [v1.46.0] - 2021-02-20\n\n- fix: Terraform validate for submodules ([#172](https://github.com/antonbabenko/pre-commit-terraform/issues/172))\n\n\n<a name=\"v1.45.0\"></a>\n## [v1.45.0] - 2020-11-12\n\n- fix: Correct deprecated parameter to terraform-docs ([#156](https://github.com/antonbabenko/pre-commit-terraform/issues/156))\n\n\n<a name=\"v1.44.0\"></a>\n## [v1.44.0] - 2020-11-02\n\n\n\n<a name=\"v1.43.1\"></a>\n## [v1.43.1] - 2020-11-02\n\n- feat: Make terraform_validate to run init if necessary ([#158](https://github.com/antonbabenko/pre-commit-terraform/issues/158))\n\n\n<a name=\"v1.43.0\"></a>\n## [v1.43.0] - 2020-09-24\n\n- fix: Fix regex considering terraform-docs v0.10.0 old ([#151](https://github.com/antonbabenko/pre-commit-terraform/issues/151))\n\n\n<a name=\"v1.42.0\"></a>\n## [v1.42.0] - 2020-09-24\n\n- fix: make terraform_docs Windows compatible ([#129](https://github.com/antonbabenko/pre-commit-terraform/issues/129))\n\n\n<a name=\"v1.41.0\"></a>\n## [v1.41.0] - 2020-09-23\n\n- fix: terraform-docs version 0.10 removed with-aggregate-type-defaults ([#150](https://github.com/antonbabenko/pre-commit-terraform/issues/150))\n\n\n<a name=\"v1.40.0\"></a>\n## [v1.40.0] - 2020-09-22\n\n- feat: Add possibility to share tflint config file for subdirs ([#149](https://github.com/antonbabenko/pre-commit-terraform/issues/149))\n\n\n<a name=\"v1.39.0\"></a>\n## [v1.39.0] - 2020-09-08\n\n- feat: Add checkov support ([#143](https://github.com/antonbabenko/pre-commit-terraform/issues/143))\n\n\n<a name=\"v1.38.0\"></a>\n## [v1.38.0] - 2020-09-07\n\n- fix: Correctly handle arrays in terraform_docs.sh ([#141](https://github.com/antonbabenko/pre-commit-terraform/issues/141))\n\n\n<a name=\"v1.37.0\"></a>\n## [v1.37.0] - 2020-09-01\n\n- fix: make terraform_tfsec.sh executable ([#140](https://github.com/antonbabenko/pre-commit-terraform/issues/140))\n\n\n<a name=\"v1.36.0\"></a>\n## [v1.36.0] - 2020-09-01\n\n- feat: have option for terraform_tfsec hook to only run in relevant modified directories ([#135](https://github.com/antonbabenko/pre-commit-terraform/issues/135))\n\n\n<a name=\"v1.35.0\"></a>\n## [v1.35.0] - 2020-08-28\n\n- fix: Squash terraform_docs bug ([#138](https://github.com/antonbabenko/pre-commit-terraform/issues/138))\n\n\n<a name=\"v1.34.0\"></a>\n## [v1.34.0] - 2020-08-27\n\n- chore: Use lib_getopt for all hooks and some style tweaks ([#137](https://github.com/antonbabenko/pre-commit-terraform/issues/137))\n\n\n<a name=\"v1.33.0\"></a>\n## [v1.33.0] - 2020-08-27\n\n- fix: Pass args and env vars to terraform validate ([#125](https://github.com/antonbabenko/pre-commit-terraform/issues/125))\n- docs: Update terraform-docs link pointing to new organization ([#130](https://github.com/antonbabenko/pre-commit-terraform/issues/130))\n\n\n<a name=\"v1.32.0\"></a>\n## [v1.32.0] - 2020-08-19\n\n- feat: add terragrunt validate hook ([#134](https://github.com/antonbabenko/pre-commit-terraform/issues/134))\n\n\n<a name=\"v1.31.0\"></a>\n## [v1.31.0] - 2020-05-27\n\n- fix: Updated formatting in README (closes [#113](https://github.com/antonbabenko/pre-commit-terraform/issues/113))\n- docs: Fixed the docs to use the latest config syntax([#106](https://github.com/antonbabenko/pre-commit-terraform/issues/106))\n- docs: Added coreutils as requirements in README.md ([#105](https://github.com/antonbabenko/pre-commit-terraform/issues/105))\n\n\n<a name=\"v1.30.0\"></a>\n## [v1.30.0] - 2020-04-23\n\n- Updated pre-commit deps\n- feat: Support for TFSec ([#103](https://github.com/antonbabenko/pre-commit-terraform/issues/103))\n\n\n<a name=\"v1.29.0\"></a>\n## [v1.29.0] - 2020-04-04\n\n- fix: Change terraform_validate hook functionality for subdirectories with terraform files ([#100](https://github.com/antonbabenko/pre-commit-terraform/issues/100))\n\n### \n\nconfiguration for the appropriate working directory.\n\n* Neglected to change the terraform validate call to use the default of the\ncurrent directory.\n\n* Several changes to improve functionality:\n- Switch to checking the path for '*.tf' instead of always checking the current\n\ndirectory.\n- Try to find a '.terraform' directory (which indicates a `terraform init`) and\n\nchange to that directory before running `terraform validate`.\n\n* Fix the description for the terraform_validate hook to reflect changes that were\nmade in:\nhttps://github.com/antonbabenko/pre-commit-terraform/commit/35e0356188b64a4c5af9a4e7200d936e514cba71\n\n* - Clean up comments.\n- Adjust variable names to better reflect what they are holding.\n\n\n<a name=\"v1.28.0\"></a>\n## [v1.28.0] - 2020-04-04\n\n- Allow passing multiple args to terraform-docs ([#98](https://github.com/antonbabenko/pre-commit-terraform/issues/98))\n- Update installation instructions ([#79](https://github.com/antonbabenko/pre-commit-terraform/issues/79))\n\n\n<a name=\"v1.27.0\"></a>\n## [v1.27.0] - 2020-03-02\n\n- corrected tflint documentation ([#95](https://github.com/antonbabenko/pre-commit-terraform/issues/95))\n\n\n<a name=\"v1.26.0\"></a>\n## [v1.26.0] - 2020-02-21\n\n- Updated pre-commit-hooks\n- Fixed exit code for terraform 0.11 branch in terraform_docs ([#94](https://github.com/antonbabenko/pre-commit-terraform/issues/94))\n\n\n<a name=\"v1.25.0\"></a>\n## [v1.25.0] - 2020-01-30\n\n- Fixed tflint hook to iterate over files ([#77](https://github.com/antonbabenko/pre-commit-terraform/issues/77))\n\n\n<a name=\"v1.24.0\"></a>\n## [v1.24.0] - 2020-01-21\n\n- Added shfmt to autoformat shell scripts ([#86](https://github.com/antonbabenko/pre-commit-terraform/issues/86))\n\n\n<a name=\"v1.23.0\"></a>\n## [v1.23.0] - 2020-01-21\n\n- Added support for terraform-docs 0.8.0 with proper support for Terraform 0.12 syntax (bye-bye awk) ([#85](https://github.com/antonbabenko/pre-commit-terraform/issues/85))\n\n\n<a name=\"v1.22.0\"></a>\n## [v1.22.0] - 2020-01-13\n\n- move terraform-docs args after markdown command ([#83](https://github.com/antonbabenko/pre-commit-terraform/issues/83))\n\n\n<a name=\"v1.21.0\"></a>\n## [v1.21.0] - 2019-11-16\n\n- use getopt for args in the tflint hook, following the approach in terraform-docs ([#75](https://github.com/antonbabenko/pre-commit-terraform/issues/75))\n\n\n<a name=\"v1.20.0\"></a>\n## [v1.20.0] - 2019-11-02\n\n- Fixes [#65](https://github.com/antonbabenko/pre-commit-terraform/issues/65): terraform-docs should not fail if complex types contain 'description' keyword ([#73](https://github.com/antonbabenko/pre-commit-terraform/issues/73))\n- Added FUNDING.yml\n- Improve installation instructions and make README more readable ([#72](https://github.com/antonbabenko/pre-commit-terraform/issues/72))\n- Update rev in README.md ([#70](https://github.com/antonbabenko/pre-commit-terraform/issues/70))\n\n\n<a name=\"v1.19.0\"></a>\n## [v1.19.0] - 2019-08-20\n\n- Updated README with terraform_tflint hook\n- Added support for TFLint with --deep parameter ([#53](https://github.com/antonbabenko/pre-commit-terraform/issues/53))\n\n\n<a name=\"v1.18.0\"></a>\n## [v1.18.0] - 2019-08-20\n\n- Updated README with terragrunt_fmt hook\n- Formatter for Terragrunt HCL files ([#60](https://github.com/antonbabenko/pre-commit-terraform/issues/60))\n\n\n<a name=\"v1.17.0\"></a>\n## [v1.17.0] - 2019-06-25\n\n- Fixed enquoted types in terraform_docs (fixed [#52](https://github.com/antonbabenko/pre-commit-terraform/issues/52))\n- Fix typo in README ([#51](https://github.com/antonbabenko/pre-commit-terraform/issues/51))\n\n\n<a name=\"v1.16.0\"></a>\n## [v1.16.0] - 2019-06-18\n\n- Add slash to mktemp dir (fixed [#50](https://github.com/antonbabenko/pre-commit-terraform/issues/50))\n\n\n<a name=\"v1.15.0\"></a>\n## [v1.15.0] - 2019-06-18\n\n- Fixed awk script for terraform-docs (kudos [@cytopia](https://github.com/cytopia)) and mktemp on Mac (closes [#47](https://github.com/antonbabenko/pre-commit-terraform/issues/47), [#48](https://github.com/antonbabenko/pre-commit-terraform/issues/48), [#49](https://github.com/antonbabenko/pre-commit-terraform/issues/49))\n- Fix version in README.md ([#46](https://github.com/antonbabenko/pre-commit-terraform/issues/46))\n\n\n<a name=\"v1.14.0\"></a>\n## [v1.14.0] - 2019-06-17\n\n- Upgraded to work with Terraform >= 0.12 ([#44](https://github.com/antonbabenko/pre-commit-terraform/issues/44))\n\n\n<a name=\"v1.13.0\"></a>\n## [v1.13.0] - 2019-06-17\n\n- Added support for terraform_docs for Terraform 0.12 ([#45](https://github.com/antonbabenko/pre-commit-terraform/issues/45))\n\n\n<a name=\"v1.12.0\"></a>\n## [v1.12.0] - 2019-05-27\n\n- Added note about incompatibility of terraform-docs with Terraform 0.12 ([#41](https://github.com/antonbabenko/pre-commit-terraform/issues/41))\n- Fixed broken \"maintained badge\"\n- Update README.md ([#36](https://github.com/antonbabenko/pre-commit-terraform/issues/36))\n\n\n<a name=\"v1.11.0\"></a>\n## [v1.11.0] - 2019-03-01\n\n- Updated changelog\n- fix check for errors at the end ([#35](https://github.com/antonbabenko/pre-commit-terraform/issues/35))\n\n\n<a name=\"v1.10.0\"></a>\n## [v1.10.0] - 2019-02-21\n\n- Bump new version\n- Add exit code for 'terraform validate' so pre-commit check fails ([#34](https://github.com/antonbabenko/pre-commit-terraform/issues/34))\n\n\n<a name=\"v1.9.0\"></a>\n## [v1.9.0] - 2019-02-18\n\n- Added chglog (hi [@robinbowes](https://github.com/robinbowes) :))\n- Require terraform-docs runs in serial to avoid pre-commit doing parallel operations on similar file paths\n\n\n<a name=\"v1.8.1\"></a>\n## [v1.8.1] - 2018-12-15\n\n- Fix bug not letting terraform_docs_replace work in the root directory of a repo\n\n\n<a name=\"v1.8.0\"></a>\n## [v1.8.0] - 2018-12-14\n\n- fix typo\n- Address requested changes\n- Add `--dest` argument\n- Address requested changes\n- Add new hook for running terraform-docs with replacing README.md from doc in main.tf\n\n\n<a name=\"v1.7.4\"></a>\n## [v1.7.4] - 2018-12-11\n\n- Merge remote-tracking branch 'origin/master' into pr25\n- Added followup after [#25](https://github.com/antonbabenko/pre-commit-terraform/issues/25)\n- Add feature to pass options to terraform-docs.\n- Added license file (fixed [#21](https://github.com/antonbabenko/pre-commit-terraform/issues/21))\n\n\n<a name=\"v1.7.3\"></a>\n## [v1.7.3] - 2018-05-24\n\n- Updated README\n- Only run validate if .tf files exist in the directory. ([#20](https://github.com/antonbabenko/pre-commit-terraform/issues/20))\n\n\n<a name=\"v1.7.2\"></a>\n## [v1.7.2] - 2018-05-20\n\n- Replace terraform_docs use of GNU sed with perl ([#15](https://github.com/antonbabenko/pre-commit-terraform/issues/15))\n- Fixes use of md5 for tempfile name ([#16](https://github.com/antonbabenko/pre-commit-terraform/issues/16))\n\n\n<a name=\"v1.7.1\"></a>\n## [v1.7.1] - 2018-05-16\n\n- Run terraform_docs only if README.md is present\n- Run terraform_docs only if README.md is present\n\n\n<a name=\"v1.7.0\"></a>\n## [v1.7.0] - 2018-05-16\n\n- Added terraform-docs integration ([#13](https://github.com/antonbabenko/pre-commit-terraform/issues/13))\n\n\n<a name=\"v1.6.0\"></a>\n## [v1.6.0] - 2018-04-21\n\n- Allow to have spaces in directories ([#11](https://github.com/antonbabenko/pre-commit-terraform/issues/11))\n\n\n<a name=\"v1.5.0\"></a>\n## [v1.5.0] - 2018-03-06\n\n- Bump new version\n- Format tfvars files explicitely, because terraform fmt ignores them ([#9](https://github.com/antonbabenko/pre-commit-terraform/issues/9))\n\n\n<a name=\"v1.4.0\"></a>\n## [v1.4.0] - 2018-01-24\n\n- Updated readme\n- Show failed path\n- Show failed path\n- Show failed path\n- Updated scripts\n- Added scripts to validate terraform files\n\n\n<a name=\"v1.3.0\"></a>\n## [v1.3.0] - 2018-01-15\n\n- Added badges\n- Added formatting for tfvars (fixes [#4](https://github.com/antonbabenko/pre-commit-terraform/issues/4)) ([#6](https://github.com/antonbabenko/pre-commit-terraform/issues/6))\n\n\n<a name=\"v1.2.0\"></a>\n## [v1.2.0] - 2017-06-08\n\n- Renamed shell script file to the correct one\n- Updated .pre-commit-hooks.yaml\n- Updated sha in README\n- Exclude .terraform even on subfolders\n\n\n<a name=\"v1.1.0\"></a>\n## [v1.1.0] - 2017-02-04\n\n- Copied to .pre-commit-hooks.yaml for compatibility (closes [#1](https://github.com/antonbabenko/pre-commit-terraform/issues/1))\n\n\n<a name=\"v1.0.0\"></a>\n## v1.0.0 - 2016-09-27\n\n- Updated README\n- Ready, probably :)\n- Initial commit\n- Initial commit\n\n\n[Unreleased]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.61.0...HEAD\n[v1.61.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.60.0...v1.61.0\n[v1.60.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.59.0...v1.60.0\n[v1.59.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.58.0...v1.59.0\n[v1.58.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.57.0...v1.58.0\n[v1.57.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.56.0...v1.57.0\n[v1.56.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.55.0...v1.56.0\n[v1.55.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.54.0...v1.55.0\n[v1.54.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.53.0...v1.54.0\n[v1.53.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.52.0...v1.53.0\n[v1.52.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.51.0...v1.52.0\n[v1.51.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.50.0...v1.51.0\n[v1.50.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.49.0...v1.50.0\n[v1.49.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.48.0...v1.49.0\n[v1.48.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.47.0...v1.48.0\n[v1.47.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.46.0...v1.47.0\n[v1.46.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.45.0...v1.46.0\n[v1.45.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.44.0...v1.45.0\n[v1.44.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.43.1...v1.44.0\n[v1.43.1]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.43.0...v1.43.1\n[v1.43.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.42.0...v1.43.0\n[v1.42.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.41.0...v1.42.0\n[v1.41.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.40.0...v1.41.0\n[v1.40.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.39.0...v1.40.0\n[v1.39.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.38.0...v1.39.0\n[v1.38.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.37.0...v1.38.0\n[v1.37.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.36.0...v1.37.0\n[v1.36.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.35.0...v1.36.0\n[v1.35.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.34.0...v1.35.0\n[v1.34.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.33.0...v1.34.0\n[v1.33.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.32.0...v1.33.0\n[v1.32.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.31.0...v1.32.0\n[v1.31.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.30.0...v1.31.0\n[v1.30.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.29.0...v1.30.0\n[v1.29.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.28.0...v1.29.0\n[v1.28.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.27.0...v1.28.0\n[v1.27.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.26.0...v1.27.0\n[v1.26.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.25.0...v1.26.0\n[v1.25.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.24.0...v1.25.0\n[v1.24.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.23.0...v1.24.0\n[v1.23.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.22.0...v1.23.0\n[v1.22.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.21.0...v1.22.0\n[v1.21.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.20.0...v1.21.0\n[v1.20.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.19.0...v1.20.0\n[v1.19.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.18.0...v1.19.0\n[v1.18.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.17.0...v1.18.0\n[v1.17.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.16.0...v1.17.0\n[v1.16.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.15.0...v1.16.0\n[v1.15.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.14.0...v1.15.0\n[v1.14.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.13.0...v1.14.0\n[v1.13.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.12.0...v1.13.0\n[v1.12.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.11.0...v1.12.0\n[v1.11.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.10.0...v1.11.0\n[v1.10.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.9.0...v1.10.0\n[v1.9.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.8.1...v1.9.0\n[v1.8.1]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.8.0...v1.8.1\n[v1.8.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.7.4...v1.8.0\n[v1.7.4]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.7.3...v1.7.4\n[v1.7.3]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.7.2...v1.7.3\n[v1.7.2]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.7.1...v1.7.2\n[v1.7.1]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.7.0...v1.7.1\n[v1.7.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.6.0...v1.7.0\n[v1.6.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.5.0...v1.6.0\n[v1.5.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.4.0...v1.5.0\n[v1.4.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.3.0...v1.4.0\n[v1.3.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.2.0...v1.3.0\n[v1.2.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.1.0...v1.2.0\n[v1.1.0]: https://github.com/antonbabenko/pre-commit-terraform/compare/v1.0.0...v1.1.0\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.8564453125,
          "content": "ARG TAG=3.12.0-alpine3.17@sha256:fc34b07ec97a4f288bc17083d288374a803dd59800399c76b977016c9fe5b8f2\nFROM python:${TAG} as builder\nARG TARGETOS\nARG TARGETARCH\n\nWORKDIR /bin_dir\n\nRUN apk add --no-cache \\\n    # Builder deps\n    bash=~5 \\\n    curl=~8 && \\\n    # Upgrade packages for be able get latest Checkov\n    python3 -m pip install --no-cache-dir --upgrade \\\n        pip \\\n        setuptools\n\nCOPY tools/install/ /install/\n\n#\n# Install required tools\n#\nARG PRE_COMMIT_VERSION=${PRE_COMMIT_VERSION:-latest}\nRUN touch /.env && \\\n    if [ \"$PRE_COMMIT_VERSION\" = \"false\" ]; then \\\n        echo \"Vital software can't be skipped\" && exit 1; \\\n    fi\nRUN /install/pre-commit.sh\n\n#\n# Install tools\n#\nARG OPENTOFU_VERSION=${OPENTOFU_VERSION:-false}\nARG TERRAFORM_VERSION=${TERRAFORM_VERSION:-false}\n\nARG CHECKOV_VERSION=${CHECKOV_VERSION:-false}\nARG HCLEDIT_VERSION=${HCLEDIT_VERSION:-false}\nARG INFRACOST_VERSION=${INFRACOST_VERSION:-false}\nARG TERRAFORM_DOCS_VERSION=${TERRAFORM_DOCS_VERSION:-false}\nARG TERRAGRUNT_VERSION=${TERRAGRUNT_VERSION:-false}\nARG TERRASCAN_VERSION=${TERRASCAN_VERSION:-false}\nARG TFLINT_VERSION=${TFLINT_VERSION:-false}\nARG TFSEC_VERSION=${TFSEC_VERSION:-false}\nARG TFUPDATE_VERSION=${TFUPDATE_VERSION:-false}\nARG TRIVY_VERSION=${TRIVY_VERSION:-false}\n\n\n# Tricky thing to install all tools by set only one arg.\n# In RUN command below used `. /.env` <- this is sourcing vars that\n# specified in step below\nARG INSTALL_ALL=${INSTALL_ALL:-false}\nRUN if [ \"$INSTALL_ALL\" != \"false\" ]; then \\\n        echo \"OPENTOFU_VERSION=latest\"       >> /.env && \\\n        echo \"TERRAFORM_VERSION=latest\"      >> /.env && \\\n        \\\n        echo \"CHECKOV_VERSION=latest\"        >> /.env && \\\n        echo \"HCLEDIT_VERSION=latest\"        >> /.env && \\\n        echo \"INFRACOST_VERSION=latest\"      >> /.env && \\\n        echo \"TERRAFORM_DOCS_VERSION=latest\" >> /.env && \\\n        echo \"TERRAGRUNT_VERSION=latest\"     >> /.env && \\\n        echo \"TERRASCAN_VERSION=latest\"      >> /.env && \\\n        echo \"TFLINT_VERSION=latest\"         >> /.env && \\\n        echo \"TFSEC_VERSION=latest\"          >> /.env && \\\n        echo \"TFUPDATE_VERSION=latest\"       >> /.env && \\\n        echo \"TRIVY_VERSION=latest\"          >> /.env \\\n    ; fi\n\nRUN /install/opentofu.sh\nRUN /install/terraform.sh\n\nRUN /install/checkov.sh\nRUN /install/hcledit.sh\nRUN /install/infracost.sh\nRUN /install/terraform-docs.sh\nRUN /install/terragrunt.sh\nRUN /install/terrascan.sh\nRUN /install/tflint.sh\nRUN /install/tfsec.sh\nRUN /install/tfupdate.sh\nRUN /install/trivy.sh\n\n\n# Checking binaries versions and write it to debug file\nRUN . /.env && \\\n    F=tools_versions_info && \\\n    pre-commit --version >> $F && \\\n    (if [ \"$OPENTOFU_VERSION\"       != \"false\" ]; then echo \"./tofu --version | head -n 1\" >> $F;      else echo \"opentofu SKIPPED\" >> $F      ; fi) && \\\n    (if [ \"$TERRAFORM_VERSION\"      != \"false\" ]; then echo \"./terraform --version | head -n 1\" >> $F; else echo \"terraform SKIPPED\" >> $F     ; fi) && \\\n    \\\n    (if [ \"$CHECKOV_VERSION\"        != \"false\" ]; then echo \"checkov $(checkov --version)\" >> $F;     else echo \"checkov SKIPPED\" >> $F        ; fi) && \\\n    (if [ \"$HCLEDIT_VERSION\"        != \"false\" ]; then echo \"hcledit $(./hcledit version)\" >> $F;     else echo \"hcledit SKIPPED\" >> $F        ; fi) && \\\n    (if [ \"$INFRACOST_VERSION\"      != \"false\" ]; then echo \"$(./infracost --version)\" >> $F;         else echo \"infracost SKIPPED\" >> $F      ; fi) && \\\n    (if [ \"$TERRAFORM_DOCS_VERSION\" != \"false\" ]; then ./terraform-docs --version >> $F;              else echo \"terraform-docs SKIPPED\" >> $F ; fi) && \\\n    (if [ \"$TERRAGRUNT_VERSION\"     != \"false\" ]; then ./terragrunt --version >> $F;                  else echo \"terragrunt SKIPPED\" >> $F     ; fi) && \\\n    (if [ \"$TERRASCAN_VERSION\"      != \"false\" ]; then echo \"terrascan $(./terrascan version)\" >> $F; else echo \"terrascan SKIPPED\" >> $F      ; fi) && \\\n    (if [ \"$TFLINT_VERSION\"         != \"false\" ]; then ./tflint --version >> $F;                      else echo \"tflint SKIPPED\" >> $F         ; fi) && \\\n    (if [ \"$TFSEC_VERSION\"          != \"false\" ]; then echo \"tfsec $(./tfsec --version)\" >> $F;       else echo \"tfsec SKIPPED\" >> $F          ; fi) && \\\n    (if [ \"$TFUPDATE_VERSION\"       != \"false\" ]; then echo \"tfupdate $(./tfupdate --version)\" >> $F; else echo \"tfupdate SKIPPED\" >> $F       ; fi) && \\\n    (if [ \"$TRIVY_VERSION\"          != \"false\" ]; then echo \"trivy $(./trivy --version)\" >> $F;       else echo \"trivy SKIPPED\" >> $F          ; fi) && \\\n    echo -e \"\\n\\n\" && cat $F && echo -e \"\\n\\n\"\n\n\n\nFROM python:${TAG}\n\nRUN apk add --no-cache \\\n    # pre-commit deps\n    git=~2 \\\n    # All hooks deps\n    bash=~5 \\\n    # pre-commit-hooks deps: https://github.com/pre-commit/pre-commit-hooks\n    musl-dev=~1 \\\n    gcc=~12 \\\n    # entrypoint wrapper deps\n    su-exec=~0.2 \\\n    # ssh-client for external private module in ssh\n    openssh-client=~9\n\n# Copy tools\nCOPY --from=builder \\\n    # Needed for all hooks\n    /usr/local/bin/pre-commit \\\n    # Hooks and terraform binaries\n    /bin_dir/ \\\n    /usr/local/bin/checkov* \\\n        /usr/bin/\n# Copy pre-commit packages\nCOPY --from=builder /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/site-packages/\n# Copy terrascan policies\nCOPY --from=builder /root/ /root/\n\n# Install hooks extra deps\nRUN if [ \"$(grep -o '^terraform-docs SKIPPED$' /usr/bin/tools_versions_info)\" = \"\" ]; then \\\n        apk add --no-cache perl=~5 \\\n    ; fi && \\\n    if [ \"$(grep -o '^infracost SKIPPED$' /usr/bin/tools_versions_info)\" = \"\" ]; then \\\n        apk add --no-cache jq=~1 \\\n    ; fi && \\\n    # Fix git runtime fatal:\n    # unsafe repository ('/lint' is owned by someone else)\n    git config --global --add safe.directory /lint\n\nCOPY tools/entrypoint.sh /entrypoint.sh\n\nENV PRE_COMMIT_COLOR=${PRE_COMMIT_COLOR:-always}\n\nENV INFRACOST_API_KEY=${INFRACOST_API_KEY:-}\nENV INFRACOST_SKIP_UPDATE_CHECK=${INFRACOST_SKIP_UPDATE_CHECK:-false}\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0322265625,
          "content": "Copyright (c) 2017 Anton Babenko\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 65.1611328125,
          "content": "# Collection of git hooks for Terraform to be used with [pre-commit framework](http://pre-commit.com/)\n\n[![Github tag](https://img.shields.io/github/tag/antonbabenko/pre-commit-terraform.svg)](https://github.com/antonbabenko/pre-commit-terraform/releases) ![maintenance status](https://img.shields.io/maintenance/yes/2024.svg) [![Help Contribute to Open Source](https://www.codetriage.com/antonbabenko/pre-commit-terraform/badges/users.svg)](https://www.codetriage.com/antonbabenko/pre-commit-terraform)\n[![CI/CD Badge]][CI/CD]\n[![Codecov Badge]][Codecov]\n\n[CI/CD Badge]:\nhttps://github.com/antonbabenko/pre-commit-terraform/actions/workflows/ci-cd.yml/badge.svg?branch=master\n[CI/CD]:\nhttps://github.com/antonbabenko/pre-commit-terraform/actions/workflows/ci-cd.yml\n\n[Codecov Badge]:\nhttps://codecov.io/gh/antonbabenko/pre-commit-terraform/branch/master/graph/badge.svg?flags[]=pytest\n[Codecov]: https://app.codecov.io/gh/antonbabenko/pre-commit-terraform?flags[]=pytest\n\n[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://github.com/vshymanskyy/StandWithUkraine/blob/main/docs/README.md)\n\nWant to contribute? Check [open issues](https://github.com/antonbabenko/pre-commit-terraform/issues?q=label%3A%22good+first+issue%22+is%3Aopen+sort%3Aupdated-desc) and [contributing notes](/.github/CONTRIBUTING.md).\n\n## Sponsors\n\n<!-- markdownlint-disable no-inline-html -->\n\n<br />\n<a href=\"https://www.terramate.io/?utm_campaign=pre-commit-terraform&utm_source=sponsorship&utm_medium=social\"><img src=\"https://raw.githubusercontent.com/antonbabenko/pre-commit-terraform/master/assets/terramate.png\" alt=\"Terramate: Automate, Orchestrate and Observe Terraform\" width=\"200\" height=\"36\" />\n\nTerramate is an IaC collaboration, visibility and observability platform that empowers your team to manage Terraform and OpenTofu faster and more confidently than ever before.</a>\n\nIf you want to support the development of `pre-commit-terraform` and [many other open-source projects](https://github.com/antonbabenko/terraform-aws-devops), please become a [GitHub Sponsor](https://github.com/sponsors/antonbabenko)!\n\n\n## Table of content\n\n* [Sponsors](#sponsors)\n* [Table of content](#table-of-content)\n* [How to install](#how-to-install)\n  * [1. Install dependencies](#1-install-dependencies)\n    * [1.1 Custom Terraform binaries and OpenTofu support](#11-custom-terraform-binaries-and-opentofu-support)\n  * [2. Install the pre-commit hook globally](#2-install-the-pre-commit-hook-globally)\n  * [3. Add configs and hooks](#3-add-configs-and-hooks)\n  * [4. Run](#4-run)\n* [Available Hooks](#available-hooks)\n* [Hooks usage notes and examples](#hooks-usage-notes-and-examples)\n  * [Known limitations](#known-limitations)\n  * [All hooks: Usage of environment variables in `--args`](#all-hooks-usage-of-environment-variables-in---args)\n  * [All hooks: Set env vars inside hook at runtime](#all-hooks-set-env-vars-inside-hook-at-runtime)\n  * [All hooks: Disable color output](#all-hooks-disable-color-output)\n  * [All hooks: Log levels](#all-hooks-log-levels)\n  * [Many hooks: Parallelism](#many-hooks-parallelism)\n  * [checkov (deprecated) and terraform\\_checkov](#checkov-deprecated-and-terraform_checkov)\n  * [infracost\\_breakdown](#infracost_breakdown)\n  * [terraform\\_docs](#terraform_docs)\n  * [terraform\\_docs\\_replace (deprecated)](#terraform_docs_replace-deprecated)\n  * [terraform\\_fmt](#terraform_fmt)\n  * [terraform\\_providers\\_lock](#terraform_providers_lock)\n  * [terraform\\_tflint](#terraform_tflint)\n  * [terraform\\_tfsec (deprecated)](#terraform_tfsec-deprecated)\n  * [terraform\\_trivy](#terraform_trivy)\n  * [terraform\\_validate](#terraform_validate)\n  * [terraform\\_wrapper\\_module\\_for\\_each](#terraform_wrapper_module_for_each)\n  * [terrascan](#terrascan)\n  * [tfupdate](#tfupdate)\n  * [terragrunt\\_providers\\_lock](#terragrunt_providers_lock)\n  * [terragrunt\\_validate\\_inputs](#terragrunt_validate_inputs)\n* [Docker Usage](#docker-usage)\n  * [File Permissions](#file-permissions)\n  * [Download Terraform modules from private GitHub repositories](#download-terraform-modules-from-private-github-repositories)\n* [Github Actions](#github-actions)\n* [Authors](#authors)\n* [License](#license)\n  * [Additional information for users from Russia and Belarus](#additional-information-for-users-from-russia-and-belarus)\n\n## How to install\n\n### 1. Install dependencies\n\n* [`pre-commit`](https://pre-commit.com/#install),\n  <sub><sup>[`terraform`](https://www.terraform.io/downloads.html) or [`opentofu`](https://opentofu.org/docs/intro/install/),\n  <sub><sup>[`git`](https://git-scm.com/downloads),\n  <sub><sup>[BASH `3.2.57` or newer](https://www.gnu.org/software/bash/#download),\n  <sub><sup>Internet connection (on first run),\n  <sub><sup>x86_64 or arm64 compatible operation system,\n  <sub><sup>Some hardware where this OS will run,\n  <sub><sup>Electricity for hardware and internet connection,\n  <sub><sup>Some basic physical laws,\n  <sub><sup>Hope that it all will work.\n  </sup></sub></sup></sub></sup></sub></sup></sub></sup></sub></sup></sub></sup></sub></sup></sub></sup></sub><br><br>\n* [`checkov`](https://github.com/bridgecrewio/checkov) required for `terraform_checkov` hook\n* [`terraform-docs`](https://github.com/terraform-docs/terraform-docs) 0.12.0+ required for `terraform_docs` hook\n* [`terragrunt`](https://terragrunt.gruntwork.io/docs/getting-started/install/) required for `terragrunt_validate` and `terragrunt_valid_inputs` hooks\n* [`terrascan`](https://github.com/tenable/terrascan) required for `terrascan` hook\n* [`TFLint`](https://github.com/terraform-linters/tflint) required for `terraform_tflint` hook\n* [`TFSec`](https://github.com/liamg/tfsec) required for `terraform_tfsec` hook\n* [`Trivy`](https://github.com/aquasecurity/trivy) required for `terraform_trivy` hook\n* [`infracost`](https://github.com/infracost/infracost) required for `infracost_breakdown` hook\n* [`jq`](https://github.com/stedolan/jq) required for `terraform_validate` with `--retry-once-with-cleanup` flag, and for `infracost_breakdown` hook\n* [`tfupdate`](https://github.com/minamijoyo/tfupdate) required for `tfupdate` hook\n* [`hcledit`](https://github.com/minamijoyo/hcledit) required for `terraform_wrapper_module_for_each` hook\n\n\n#### 1.1 Custom Terraform binaries and OpenTofu support\n\nIt is possible to set custom path to `terraform` binary.  \nThis makes it possible to use [OpenTofu](https://opentofu.org) binary `tofu` instead of `terraform`.\n\nHow binary discovery works and how you can redefine it (first matched takes precedence):\n\n1. Check if per hook configuration `--hook-config=--tf-path=<path_to_binary_or_binary_name>` is set\n2. Check if `PCT_TFPATH=<path_to_binary_or_binary_name>` environment variable is set\n3. Check if `TERRAGRUNT_TFPATH=<path_to_binary_or_binary_name>` environment variable is set\n4. Check if `terraform` binary can be found in the user's $PATH\n5. Check if `tofu` binary can be found in the user's $PATH\n\n<details><summary><b>Docker</b></summary><br>\n\n**Pull docker image with all hooks**:\n\n```bash\nTAG=latest\ndocker pull ghcr.io/antonbabenko/pre-commit-terraform:$TAG\n```\n\nAll available tags [here](https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions).\n\n**Build from scratch**:\n\n> [!IMPORTANT]\n> To build image you need to have [`docker buildx`](https://docs.docker.com/build/install-buildx/) enabled as default builder.  \n> Otherwise - provide `TARGETOS` and `TARGETARCH` as additional `--build-arg`'s to `docker build`.\n\nWhen hooks-related `--build-arg`s are not specified, only the latest version of `pre-commit` and `terraform` will be installed.\n\n```bash\ngit clone git@github.com:antonbabenko/pre-commit-terraform.git\ncd pre-commit-terraform\n# Install the latest versions of all the tools\ndocker build -t pre-commit-terraform --build-arg INSTALL_ALL=true .\n```\n\nTo install a specific version of individual tools, define it using `--build-arg` arguments or set it to `latest`:\n\n```bash\ndocker build -t pre-commit-terraform \\\n    --build-arg PRE_COMMIT_VERSION=latest \\\n    --build-arg OPENTOFU_VERSION=latest \\\n    --build-arg TERRAFORM_VERSION=1.5.7 \\\n    --build-arg CHECKOV_VERSION=2.0.405 \\\n    --build-arg HCLEDIT_VERSION=latest \\\n    --build-arg INFRACOST_VERSION=latest \\\n    --build-arg TERRAFORM_DOCS_VERSION=0.15.0 \\\n    --build-arg TERRAGRUNT_VERSION=latest \\\n    --build-arg TERRASCAN_VERSION=1.10.0 \\\n    --build-arg TFLINT_VERSION=0.31.0 \\\n    --build-arg TFSEC_VERSION=latest \\\n    --build-arg TFUPDATE_VERSION=latest \\\n    --build-arg TRIVY_VERSION=latest \\\n    .\n```\n\nSet `-e PRE_COMMIT_COLOR=never` to disable the color output in `pre-commit`.\n\n</details>\n\n\n<details><summary><b>MacOS</b></summary><br>\n\n```bash\nbrew install pre-commit terraform-docs tflint tfsec trivy checkov terrascan infracost tfupdate minamijoyo/hcledit/hcledit jq\n```\n\n</details>\n\n<details><summary><b>Ubuntu 18.04</b></summary><br>\n\n```bash\nsudo apt update\nsudo apt install -y unzip software-properties-common\nsudo add-apt-repository ppa:deadsnakes/ppa\nsudo apt install -y python3.7 python3-pip\npython3 -m pip install --upgrade pip\npip3 install --no-cache-dir pre-commit\npython3.7 -m pip install -U checkov\ncurl -L \"$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 \"https://.+?-linux-amd64.tar.gz\")\" > terraform-docs.tgz && tar -xzf terraform-docs.tgz && rm terraform-docs.tgz && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.zip\")\" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 \"https://.+?tfsec-linux-amd64\")\" > tfsec && chmod +x tfsec && sudo mv tfsec /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 \"https://.+?/trivy_.+?_Linux-64bit.tar.gz\")\" > trivy.tar.gz && tar -xzf trivy.tar.gz trivy && rm trivy.tar.gz && sudo mv trivy /usr/bin\ncurl -L \"$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 \"https://.+?_Linux_x86_64.tar.gz\")\" > terrascan.tar.gz && tar -xzf terrascan.tar.gz terrascan && rm terrascan.tar.gz && sudo mv terrascan /usr/bin/ && terrascan init\nsudo apt install -y jq && \\\ncurl -L \"$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 \"https://.+?-linux-amd64.tar.gz\")\" > infracost.tgz && tar -xzf infracost.tgz && rm infracost.tgz && sudo mv infracost-linux-amd64 /usr/bin/infracost && infracost auth login\ncurl -L \"$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.tar.gz\")\" > tfupdate.tar.gz && tar -xzf tfupdate.tar.gz tfupdate && rm tfupdate.tar.gz && sudo mv tfupdate /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.tar.gz\")\" > hcledit.tar.gz && tar -xzf hcledit.tar.gz hcledit && rm hcledit.tar.gz && sudo mv hcledit /usr/bin/\n```\n\n</details>\n\n\n<details><summary><b>Ubuntu 20.04+</b></summary><br>\n\n```bash\nsudo apt update\nsudo apt install -y unzip software-properties-common python3 python3-pip python-is-python3\npython3 -m pip install --upgrade pip\npip3 install --no-cache-dir pre-commit\npip3 install --no-cache-dir checkov\ncurl -L \"$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep -o -E -m 1 \"https://.+?-linux-amd64.tar.gz\")\" > terraform-docs.tgz && tar -xzf terraform-docs.tgz terraform-docs && rm terraform-docs.tgz && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E -m 1 \"https://.+?_Linux_x86_64.tar.gz\")\" > terrascan.tar.gz && tar -xzf terrascan.tar.gz terrascan && rm terrascan.tar.gz && sudo mv terrascan /usr/bin/ && terrascan init\ncurl -L \"$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.zip\")\" > tflint.zip && unzip tflint.zip && rm tflint.zip && sudo mv tflint /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E -m 1 \"https://.+?tfsec-linux-amd64\")\" > tfsec && chmod +x tfsec && sudo mv tfsec /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -o -E -i -m 1 \"https://.+?/trivy_.+?_Linux-64bit.tar.gz\")\" > trivy.tar.gz && tar -xzf trivy.tar.gz trivy && rm trivy.tar.gz && sudo mv trivy /usr/bin\nsudo apt install -y jq && \\\ncurl -L \"$(curl -s https://api.github.com/repos/infracost/infracost/releases/latest | grep -o -E -m 1 \"https://.+?-linux-amd64.tar.gz\")\" > infracost.tgz && tar -xzf infracost.tgz && rm infracost.tgz && sudo mv infracost-linux-amd64 /usr/bin/infracost && infracost auth login\ncurl -L \"$(curl -s https://api.github.com/repos/minamijoyo/tfupdate/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.tar.gz\")\" > tfupdate.tar.gz && tar -xzf tfupdate.tar.gz tfupdate && rm tfupdate.tar.gz && sudo mv tfupdate /usr/bin/\ncurl -L \"$(curl -s https://api.github.com/repos/minamijoyo/hcledit/releases/latest | grep -o -E -m 1 \"https://.+?_linux_amd64.tar.gz\")\" > hcledit.tar.gz && tar -xzf hcledit.tar.gz hcledit && rm hcledit.tar.gz && sudo mv hcledit /usr/bin/\n```\n\n</details>\n\n<details><summary><b>Windows 10/11</b></summary>\n\nWe highly recommend using [WSL/WSL2](https://docs.microsoft.com/en-us/windows/wsl/install) with Ubuntu and following the Ubuntu installation guide. Or use Docker.\n\n> [!IMPORTANT]\n> We won't be able to help with issues that can't be reproduced in Linux/Mac.\n> So, try to find a working solution and send PR before open an issue.\n\nOtherwise, you can follow [this gist](https://gist.github.com/etiennejeanneaurevolve/1ed387dc73c5d4cb53ab313049587d09):\n\n1. Install [`git`](https://git-scm.com/downloads) and [`gitbash`](https://gitforwindows.org/)\n2. Install [Python 3](https://www.python.org/downloads/)\n3. Install all prerequisites needed (see above)\n\nEnsure your PATH environment variable looks for `bash.exe` in `C:\\Program Files\\Git\\bin` (the one present in `C:\\Windows\\System32\\bash.exe` does not work with `pre-commit.exe`)\n\nFor `checkov`, you may need to also set your `PYTHONPATH` environment variable with the path to your Python modules.  \nE.g. `C:\\Users\\USERNAME\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages`\n\n</details>\n\n### 2. Install the pre-commit hook globally\n\n> [!NOTE]\n> Not needed if you use the Docker image\n\n```bash\nDIR=~/.git-template\ngit config --global init.templateDir ${DIR}\npre-commit init-templatedir -t pre-commit ${DIR}\n```\n\n### 3. Add configs and hooks\n\nStep into the repository you want to have the pre-commit hooks installed and run:\n\n```bash\ngit init\ncat <<EOF > .pre-commit-config.yaml\nrepos:\n- repo: https://github.com/antonbabenko/pre-commit-terraform\n  rev: <VERSION> # Get the latest from: https://github.com/antonbabenko/pre-commit-terraform/releases\n  hooks:\n    - id: terraform_fmt\n    - id: terraform_docs\nEOF\n```\n\n### 4. Run\n\nExecute this command to run `pre-commit` on all files in the repository (not only changed files):\n\n```bash\npre-commit run -a\n```\n\nOr, using Docker ([available tags](https://github.com/antonbabenko/pre-commit-terraform/pkgs/container/pre-commit-terraform/versions)):\n\n> [!TIP]\n> This command uses your user id and group id for the docker container to use to access the local files.  If the files are owned by another user, update the `USERID` environment variable.  See [File Permissions section](#file-permissions) for more information.\n\n```bash\nTAG=latest\ndocker run -e \"USERID=$(id -u):$(id -g)\" -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a\n```\n\nExecute this command to list the versions of the tools in Docker:\n\n```bash\nTAG=latest\ndocker run --rm --entrypoint cat ghcr.io/antonbabenko/pre-commit-terraform:$TAG /usr/bin/tools_versions_info\n```\n\n## Available Hooks\n\nThere are several [pre-commit](https://pre-commit.com/) hooks to keep Terraform configurations (both `*.tf` and `*.tfvars`) and Terragrunt configurations (`*.hcl`) in a good shape:\n\n| Hook name                                              | Description                                                                                                                                                                                                                                                      | Dependencies<br><sup>[Install instructions here](#1-install-dependencies)</sup>      |\n| ------------------------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| `checkov` and `terraform_checkov`                      | [checkov](https://github.com/bridgecrewio/checkov) static analysis of terraform templates to spot potential security issues. [Hook notes](#checkov-deprecated-and-terraform_checkov)                                                                             | `checkov`<br>Ubuntu deps: `python3`, `python3-pip`                                   |\n| `infracost_breakdown`                                  | Check how much your infra costs with [infracost](https://github.com/infracost/infracost). [Hook notes](#infracost_breakdown)                                                                                                                                     | `infracost`, `jq`, [Infracost API key](https://www.infracost.io/docs/#2-get-api-key) |\n| `terraform_docs`                                       | Inserts input and output documentation into `README.md`. Recommended. [Hook notes](#terraform_docs)                                                                                                                                                              | `terraform-docs`                                                                     |\n| `terraform_docs_replace`                               | Runs `terraform-docs` and pipes the output directly to README.md. **DEPRECATED**, see [#248](https://github.com/antonbabenko/pre-commit-terraform/issues/248). [Hook notes](#terraform_docs_replace-deprecated)                                                  | `python3`, `terraform-docs`                                                          |\n| `terraform_docs_without_`<br>`aggregate_type_defaults` | Inserts input and output documentation into `README.md` without aggregate type defaults. Hook notes same as for [terraform_docs](#terraform_docs)                                                                                                                | `terraform-docs`                                                                     |\n| `terraform_fmt`                                        | Reformat all Terraform configuration files to a canonical format. [Hook notes](#terraform_fmt)                                                                                                                                                                   | -                                                                                    |\n| `terraform_providers_lock`                             | Updates provider signatures in [dependency lock files](https://www.terraform.io/docs/cli/commands/providers/lock.html). [Hook notes](#terraform_providers_lock)                                                                                                  | -                                                                                    |\n| `terraform_tflint`                                     | Validates all Terraform configuration files with [TFLint](https://github.com/terraform-linters/tflint). [Available TFLint rules](https://github.com/terraform-linters/tflint-ruleset-terraform/blob/main/docs/rules/README.md). [Hook notes](#terraform_tflint). | `tflint`                                                                             |\n| `terraform_tfsec`                                      | [TFSec](https://github.com/aquasecurity/tfsec) static analysis of terraform templates to spot potential security issues. **DEPRECATED**, use `terraform_trivy`. [Hook notes](#terraform_tfsec-deprecated)                                                        | `tfsec`                                                                              |\n| `terraform_trivy`                                      | [Trivy](https://github.com/aquasecurity/trivy) static analysis of terraform templates to spot potential security issues. [Hook notes](#terraform_trivy)                                                                                                          | `trivy`                                                                              |\n| `terraform_validate`                                   | Validates all Terraform configuration files. [Hook notes](#terraform_validate)                                                                                                                                                                                   | `jq`, only for `--retry-once-with-cleanup` flag                                      |\n| `terragrunt_fmt`                                       | Reformat all [Terragrunt](https://github.com/gruntwork-io/terragrunt) configuration files (`*.hcl`) to a canonical format.                                                                                                                                       | `terragrunt`                                                                         |\n| `terragrunt_validate`                                  | Validates all [Terragrunt](https://github.com/gruntwork-io/terragrunt) configuration files (`*.hcl`)                                                                                                                                                             | `terragrunt`                                                                         |\n| `terragrunt_validate_inputs`                           | Validates [Terragrunt](https://github.com/gruntwork-io/terragrunt) unused and undefined inputs (`*.hcl`)\n| `terragrunt_providers_lock`                            | Generates `.terraform.lock.hcl` files using [Terragrunt](https://github.com/gruntwork-io/terragrunt).                                                                                                                                                            | `terragrunt`                                                                         |\n| `terraform_wrapper_module_for_each`                    | Generates Terraform wrappers with `for_each` in module. [Hook notes](#terraform_wrapper_module_for_each)                                                                                                                                                         | `hcledit`                                                                            |\n| `terrascan`                                            | [terrascan](https://github.com/tenable/terrascan) Detect compliance and security violations. [Hook notes](#terrascan)                                                                                                                                            | `terrascan`                                                                          |\n| `tfupdate`                                             | [tfupdate](https://github.com/minamijoyo/tfupdate) Update version constraints of Terraform core, providers, and modules. [Hook notes](#tfupdate)                                                                                                                 | `tfupdate`                                                                           |\n\nCheck the [source file](https://github.com/antonbabenko/pre-commit-terraform/blob/master/.pre-commit-hooks.yaml) to know arguments used for each hook.\n\n## Hooks usage notes and examples\n\n### Known limitations\n\nTerraform operates on a per-dir basis, while `pre-commit` framework only supports files and files that exist. This means if you only remove the TF-related file without any other changes in the same dir, checks will be skipped. Example and details [here](https://github.com/pre-commit/pre-commit/issues/3048).\n\n### All hooks: Usage of environment variables in `--args`\n\n> All, except deprecated hooks: `checkov`, `terraform_docs_replace`\n\nYou can use environment variables for the `--args` section.\n\n> [!IMPORTANT]\n> You _must_ use the `${ENV_VAR}` definition, `$ENV_VAR` will not expand.\n\nConfig example:\n\n```yaml\n- id: terraform_tflint\n  args:\n  - --args=--config=${CONFIG_NAME}.${CONFIG_EXT}\n  - --args=--module\n```\n\nIf for config above set up `export CONFIG_NAME=.tflint; export CONFIG_EXT=hcl` before `pre-commit run`, args will be expanded to `--config=.tflint.hcl --module`.\n\n### All hooks: Set env vars inside hook at runtime\n\n> All, except deprecated hooks: `checkov`, `terraform_docs_replace`\n\nYou can specify environment variables that will be passed to the hook at runtime.\n\n> [!IMPORTANT]\n> Variable values are exported _verbatim_:\n> - No interpolation or expansion are applied\n> - The enclosing double quotes are removed if they are provided\n\nConfig example:\n\n```yaml\n- id: terraform_validate\n  args:\n    - --env-vars=AWS_DEFAULT_REGION=\"us-west-2\"\n    - --env-vars=AWS_PROFILE=\"my-aws-cli-profile\"\n```\n\n### All hooks: Disable color output\n\n> All, except deprecated hooks: `checkov`, `terraform_docs_replace`\n\nTo disable color output for all hooks, set `PRE_COMMIT_COLOR=never` var. Eg:\n\n```bash\nPRE_COMMIT_COLOR=never pre-commit run\n```\n\n### All hooks: Log levels\n\nIn case you need to debug hooks, you can set `PCT_LOG=trace`.\n\nFor example:\n\n```bash\nPCT_LOG=trace pre-commit run -a\n```\n\nLess verbose log levels will be implemented in [#562](https://github.com/antonbabenko/pre-commit-terraform/issues/562).\n\n### Many hooks: Parallelism\n\n> All, except deprecated hooks: `checkov`, `terraform_docs_replace` and hooks which can't be paralleled this way: `infracost_breakdown`, `terraform_wrapper_module_for_each`.  \n> Also, there's a chance that parallelism have no effect on `terragrunt_fmt` and `terragrunt_validate` hooks\n\nBy default, parallelism is set to `number of logical CPUs - 1`.  \nIf you'd like to disable parallelism, set it to `1`\n\n```yaml\n- id: terragrunt_validate\n  args:\n    - --hook-config=--parallelism-limit=1\n```\n\nIn the same way you can set it to any positive integer.\n\nIf you'd like to set parallelism value relative to number of CPU logical cores - provide valid Bash arithmetic expression and use `CPU` as a reference to the number of CPU logical cores\n\n\n```yaml\n- id: terraform_providers_lock\n  args:\n    - --hook-config=--parallelism-limit=CPU*4\n```\n\n> [!TIP]\n> <details><summary>Info useful for parallelism fine-tunning</summary>\n>\n> <br>\n> Tests below were run on repo with 45 Terraform dirs on laptop with 16 CPUs, SSD and 1Gbit/s network. Laptop was slightly used in the process.\n>\n> Observed results may vary greatly depending on your repo structure, machine characteristics and their usage.\n>\n> If during fine-tuning you'll find that your results are very different from provided below and you think that this data could help someone else - feel free to send PR.\n>\n>\n> | Hook                                                                           | Most used resource                 | Comparison of optimization results / Notes                      |\n> | ------------------------------------------------------------------------------ | ---------------------------------- | --------------------------------------------------------------- |\n> | terraform_checkov                                                              | CPU heavy                          | -                                                               |\n> | terraform_fmt                                                                  | CPU heavy                          | -                                                               |\n> | terraform_providers_lock (3 platforms,<br>`--mode=always-regenerate-lockfile`) | Network & Disk heavy               | `defaults (CPU-1)` - 3m 39s; `CPU*2` - 3m 19s; `CPU*4` - 2m 56s |\n> | terraform_tflint                                                               | CPU heavy                          | -                                                               |\n> | terraform_tfsec                                                                | CPU heavy                          | -                                                               |\n> | terraform_trivy                                                                | CPU moderate                       | `defaults (CPU-1)` - 32s; `CPU*2` - 30s; `CPU*4` - 31s          |\n> | terraform_validate (t validate only)                                           | CPU heavy                          | -                                                               |\n> | terraform_validate (t init + t validate)                                       | Network & Disk heavy, CPU moderate | `defaults (CPU-1)` - 1m 30s; `CPU*2` - 1m 25s; `CPU*4` - 1m 41s |\n> | terragrunt_fmt                                                                 | CPU heavy                          | N/A? need more info from TG users                               |\n> | terragrunt_validate                                                            | CPU heavy                          | N/A? need more info from TG users                               |\n> | terrascan                                                                      | CPU moderate-heavy                 | `defaults (CPU-1)` - 8s; `CPU*2` - 6s                           |\n> | tfupdate                                                                       | Disk/Network?                      | too quick in any settings. More info needed                     |\n>\n>\n> </details>\n\n\n\n```yaml\nargs:\n  - --hook-config=--parallelism-ci-cpu-cores=N\n```\n\nIf you don't see code above in your `pre-commit-config.yaml` or logs - you don't need it.  \n`--parallelism-ci-cpu-cores` used only in edge cases and is ignored in other situations. Check out its usage in [hooks/_common.sh](hooks/_common.sh)\n\n### checkov (deprecated) and terraform_checkov\n\n> `checkov` hook is deprecated, please use `terraform_checkov`.\n\nNote that `terraform_checkov` runs recursively during `-d .` usage. That means, for example, if you change `.tf` file in repo root, all existing `.tf` files in the repo will be checked.\n\n1. You can specify custom arguments. E.g.:\n\n    ```yaml\n    - id: terraform_checkov\n      args:\n        - --args=--quiet\n        - --args=--skip-check CKV2_AWS_8\n    ```\n\n    Check all available arguments [here](https://www.checkov.io/2.Basics/CLI%20Command%20Reference.html).\n\nFor deprecated hook you need to specify each argument separately:\n\n```yaml\n- id: checkov\n  args: [\n    \"-d\", \".\",\n    \"--skip-check\", \"CKV2_AWS_8\",\n  ]\n```\n\n2. When you have multiple directories and want to run `terraform_checkov` in all of them and share a single config file - use the `__GIT_WORKING_DIR__` placeholder. It will be replaced by `terraform_checkov` hooks with the Git working directory (repo root) at run time. For example:\n\n    ```yaml\n    - id: terraform_checkov\n      args:\n        - --args=--config-file __GIT_WORKING_DIR__/.checkov.yml\n    ```\n\n### infracost_breakdown\n\n`infracost_breakdown` executes `infracost breakdown` command and compare the estimated costs with those specified in the hook-config. `infracost breakdown` parses Terraform HCL code, and calls Infracost Cloud Pricing API (remote version or [self-hosted version](https://www.infracost.io/docs/cloud_pricing_api/self_hosted)).\n\nUnlike most other hooks, this hook triggers once if there are any changed files in the repository.\n\n1. `infracost_breakdown` supports all `infracost breakdown` arguments (run `infracost breakdown --help` to see them). The following example only shows costs:\n\n    ```yaml\n    - id: infracost_breakdown\n      args:\n        - --args=--path=./env/dev\n      verbose: true # Always show costs\n    ```\n\n    <details><summary>Output</summary>\n\n    ```bash\n    Running in \"env/dev\"\n\n    Summary: {\n    \"unsupportedResourceCounts\": {\n        \"aws_sns_topic_subscription\": 1\n      }\n    }\n\n    Total Monthly Cost:        86.83 USD\n    Total Monthly Cost (diff): 86.83 USD\n    ```\n\n    </details>\n\n2. Note that spaces are not allowed in `--args`, so you need to split it, like this:\n\n    ```yaml\n    - id: infracost_breakdown\n      args:\n        - --args=--path=./env/dev\n        - --args=--terraform-var-file=\"terraform.tfvars\"\n        - --args=--terraform-var-file=\"../terraform.tfvars\"\n    ```\n\n3. (Optionally) Define `cost constraints` the hook should evaluate successfully in order to pass:\n\n    ```yaml\n    - id: infracost_breakdown\n      args:\n        - --args=--path=./env/dev\n        - --hook-config='.totalHourlyCost|tonumber > 0.1'\n        - --hook-config='.totalHourlyCost|tonumber > 1'\n        - --hook-config='.projects[].diff.totalMonthlyCost|tonumber != 10000'\n        - --hook-config='.currency == \"USD\"'\n    ```\n\n    <details><summary>Output</summary>\n\n    ```bash\n    Running in \"env/dev\"\n    Passed: .totalHourlyCost|tonumber > 0.1         0.11894520547945205 >  0.1\n    Failed: .totalHourlyCost|tonumber > 1           0.11894520547945205 >  1\n    Passed: .projects[].diff.totalMonthlyCost|tonumber !=10000              86.83 != 10000\n    Passed: .currency == \"USD\"              \"USD\" == \"USD\"\n\n    Summary: {\n    \"unsupportedResourceCounts\": {\n        \"aws_sns_topic_subscription\": 1\n      }\n    }\n\n    Total Monthly Cost:        86.83 USD\n    Total Monthly Cost (diff): 86.83 USD\n    ```\n\n    </details>\n\n    * Only one path per one hook (`- id: infracost_breakdown`) is allowed.\n    * Set `verbose: true` to see cost even when the checks are passed.\n    * Hook uses `jq` to process the cost estimation report returned by `infracost breakdown` command\n    * Expressions defined as `--hook-config` argument should be in a jq-compatible format (e.g. `.totalHourlyCost`, `.totalMonthlyCost`)\n    To study json output produced by `infracost`, run the command `infracost breakdown -p PATH_TO_TF_DIR --format json`, and explore it on [jqplay.org](https://jqplay.org/).\n    * Supported comparison operators: `<`, `<=`, `==`, `!=`, `>=`, `>`.\n    * Most useful paths and checks:\n        * `.totalHourlyCost` (same as `.projects[].breakdown.totalHourlyCost`) - show total hourly infra cost\n        * `.totalMonthlyCost` (same as `.projects[].breakdown.totalMonthlyCost`) - show total monthly infra cost\n        * `.projects[].diff.totalHourlyCost` - show the difference in hourly cost for the existing infra and tf plan\n        * `.projects[].diff.totalMonthlyCost` - show the difference in monthly cost for the existing infra and tf plan\n        * `.diffTotalHourlyCost` (for Infracost version 0.9.12 or newer) or `[.projects[].diff.totalMonthlyCost | select (.!=null) | tonumber] | add` (for Infracost older than 0.9.12)\n\n4. **Docker usage**. In `docker build` or `docker run` command:\n    * You need to provide [Infracost API key](https://www.infracost.io/docs/integrations/environment_variables/#infracost_api_key) via `-e INFRACOST_API_KEY=<your token>`. By default, it is saved in `~/.config/infracost/credentials.yml`\n    * Set `-e INFRACOST_SKIP_UPDATE_CHECK=true` to [skip the Infracost update check](https://www.infracost.io/docs/integrations/environment_variables/#infracost_skip_update_check) if you use this hook as part of your CI/CD pipeline.\n\n### terraform_docs\n\n1. `terraform_docs` and `terraform_docs_without_aggregate_type_defaults` will insert/update documentation generated by [terraform-docs](https://github.com/terraform-docs/terraform-docs) framed by markers:\n\n    ```txt\n    <!-- BEGIN_TF_DOCS -->\n\n    <!-- END_TF_DOCS -->\n    ```\n\n    if they are present in `README.md`.\n\n2. It is possible to pass additional arguments to shell scripts when using `terraform_docs` and `terraform_docs_without_aggregate_type_defaults`.\n\n3. It is possible to automatically:\n    * create a documentation file\n    * extend existing documentation file by appending markers to the end of the file (see item 1 above)\n    * use different filename for the documentation (default is `README.md`)\n    * use the same insertion markers as `terraform-docs`. It's default starting from `v1.93`.  \n      To migrate everything to `terraform-docs` insertion markers, run in repo root:\n\n      ```bash\n      sed --version &> /dev/null && SED_CMD=(sed -i) || SED_CMD=(sed -i '')\n      grep -rl --null 'BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK' . | xargs -0 \"${SED_CMD[@]}\" -e 's/BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK/BEGIN_TF_DOCS/'\n      grep -rl --null 'END OF PRE-COMMIT-TERRAFORM DOCS HOOK' . | xargs -0 \"${SED_CMD[@]}\" -e 's/END OF PRE-COMMIT-TERRAFORM DOCS HOOK/END_TF_DOCS/'\n      ```\n\n    ```yaml\n    - id: terraform_docs\n      args:\n        - --hook-config=--path-to-file=README.md        # Valid UNIX path. I.e. ../TFDOC.md or docs/README.md etc.\n        - --hook-config=--add-to-existing-file=true     # Boolean. true or false\n        - --hook-config=--create-file-if-not-exist=true # Boolean. true or false\n        - --hook-config=--use-standard-markers=true     # Boolean. Defaults to true (v1.93+), false (<v1.93). Set to true for compatibility with terraform-docs\n    ```\n\n4. If you want to use a terraform-docs config file, you must supply the path to the file, relative to the git repo root path:\n\n    ```yaml\n    - id: terraform_docs\n      args:\n        - --args=--config=.terraform-docs.yml\n    ```\n\n    > **Warning**  \n    > Avoid use `recursive.enabled: true` in config file, that can cause unexpected behavior.\n\n5. You can provide [any configuration available in `terraform-docs`](https://terraform-docs.io/user-guide/configuration/) as an argument to `terraform_docs` hook:\n\n    ```yaml\n    - id: terraform_docs\n      args:\n        - --args=--output-mode=replace\n    ```\n\n6. If you need some exotic settings, it can be done too. I.e. this one generates HCL files:\n\n    ```yaml\n    - id: terraform_docs\n      args:\n        - tfvars hcl --output-file terraform.tfvars.model .\n    ```\n\n### terraform_docs_replace (deprecated)\n\n**DEPRECATED**. Will be merged in [`terraform_docs`](#terraform_docs).\n\n`terraform_docs_replace` replaces the entire `README.md` rather than doing string replacement between markers. Put your additional documentation at the top of your `main.tf` for it to be pulled in.\n\nTo replicate functionality in `terraform_docs` hook:\n\n1. Create `.terraform-docs.yml` in the repo root with the following content:\n\n    ```yaml\n    formatter: \"markdown\"\n\n    output:\n    file: \"README.md\"\n    mode: replace\n    template: |-\n        {{/** End of file fixer */}}\n    ```\n\n2. Replace `terraform_docs_replace` hook config in `.pre-commit-config.yaml` with:\n\n    ```yaml\n    - id: terraform_docs\n    args:\n        - --args=--config=.terraform-docs.yml\n    ```\n\n### terraform_fmt\n\n1. `terraform_fmt` supports custom arguments so you can pass [supported flags](https://www.terraform.io/docs/cli/commands/fmt.html#usage). Eg:\n\n    ```yaml\n     - id: terraform_fmt\n       args:\n         - --args=-no-color\n         - --args=-diff\n         - --args=-write=false\n    ```\n\n### terraform_providers_lock\n\n> [!NOTE]\n> The hook requires Terraform 0.14 or later.\n\n> [!NOTE]\n> The hook can invoke `terraform providers lock` that can be really slow and requires fetching metadata from remote Terraform registries - not all of that metadata is currently being cached by Terraform.\n\n> [!NOTE]\n> <details><summary>Read this if you used this hook before v1.80.0 | Planned breaking changes in v2.0</summary>\n> <br>\n> We introduced `--mode` flag for this hook. If you'd like to continue using this hook as before, please:\n>\n> * Specify `--hook-config=--mode=always-regenerate-lockfile` in `args:`\n> * Before `terraform_providers_lock`, add `terraform_validate` hook with `--hook-config=--retry-once-with-cleanup=true`\n> * Move `--tf-init-args=` to `terraform_validate` hook\n>\n> In the end, you should get config like this:\n>\n> ```yaml\n> - id: terraform_validate\n>   args:\n>     - --hook-config=--retry-once-with-cleanup=true\n>     # - --tf-init-args=-upgrade\n>\n> - id: terraform_providers_lock\n>   args:\n>   - --hook-config=--mode=always-regenerate-lockfile\n> ```\n>\n> Why? When v2.x will be introduced - the default mode will be changed, probably, to `only-check-is-current-lockfile-cross-platform`.\n>\n> You can check available modes for hook below.\n> </details>\n\n\n1. The hook can work in a few different modes: `only-check-is-current-lockfile-cross-platform` with and without [terraform_validate hook](#terraform_validate) and `always-regenerate-lockfile` - only with terraform_validate hook.\n\n    * `only-check-is-current-lockfile-cross-platform` without terraform_validate - only checks that lockfile has all required SHAs for all providers already added to lockfile.\n\n        ```yaml\n        - id: terraform_providers_lock\n          args:\n          - --hook-config=--mode=only-check-is-current-lockfile-cross-platform\n        ```\n\n    * `only-check-is-current-lockfile-cross-platform` with [terraform_validate hook](#terraform_validate) - make up-to-date lockfile by adding/removing providers and only then check that lockfile has all required SHAs.\n\n        > **Important**\n        > Next `terraform_validate` flag requires additional dependency to be installed: `jq`. Also, it could run another slow and time consuming command - `terraform init`\n\n        ```yaml\n        - id: terraform_validate\n          args:\n            - --hook-config=--retry-once-with-cleanup=true\n\n        - id: terraform_providers_lock\n          args:\n          - --hook-config=--mode=only-check-is-current-lockfile-cross-platform\n        ```\n\n    * `always-regenerate-lockfile` only with [terraform_validate hook](#terraform_validate) - regenerate lockfile from scratch. Can be useful for upgrading providers in lockfile to latest versions\n\n        ```yaml\n        - id: terraform_validate\n          args:\n            - --hook-config=--retry-once-with-cleanup=true\n            - --tf-init-args=-upgrade\n\n        - id: terraform_providers_lock\n          args:\n          - --hook-config=--mode=always-regenerate-lockfile\n        ```\n\n\n3. `terraform_providers_lock` supports custom arguments:\n\n    ```yaml\n     - id: terraform_providers_lock\n       args:\n          - --args=-platform=windows_amd64\n          - --args=-platform=darwin_amd64\n    ```\n\n4. It may happen that Terraform working directory (`.terraform`) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can find and delete all `.terraform` directories in your repository:\n\n    ```bash\n    echo \"\n    function rm_terraform {\n        find . \\( -iname \".terraform*\" ! -iname \".terraform-docs*\" \\) -print0 | xargs -0 rm -r\n    }\n    \" >>~/.bashrc\n\n    # Reload shell and use `rm_terraform` command in the repo root\n    ```\n\n    `terraform_providers_lock` hook will try to reinitialize directories before running the `terraform providers lock` command.\n\n3. `terraform_providers_lock` support passing custom arguments to its `terraform init`:\n\n    > **Warning**  \n    > DEPRECATION NOTICE: This is available only in `no-mode` mode, which will be removed in v2.0. Please provide this keys to [`terraform_validate`](#terraform_validate) hook, which, to take effect, should be called before `terraform_providers_lock`\n\n    ```yaml\n    - id: terraform_providers_lock\n      args:\n        - --tf-init-args=-upgrade\n    ```\n\n\n### terraform_tflint\n\n1. `terraform_tflint` supports custom arguments so you can enable module inspection, enable / disable rules, etc.\n\n    Example:\n\n    ```yaml\n    - id: terraform_tflint\n      args:\n        - --args=--module\n        - --args=--enable-rule=terraform_documented_variables\n    ```\n\n2. When you have multiple directories and want to run `tflint` in all of them and share a single config file, it is impractical to hard-code the path to the `.tflint.hcl` file. The solution is to use the `__GIT_WORKING_DIR__` placeholder which will be replaced by `terraform_tflint` hooks with the Git working directory (repo root) at run time. For example:\n\n    ```yaml\n    - id: terraform_tflint\n      args:\n        - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl\n    ```\n\n3. By default, pre-commit-terraform performs directory switching into the terraform modules for you. If you want to delegate the directory changing to the binary - this will allow tflint to determine the full paths for error/warning messages, rather than just module relative paths. *Note: this requires `tflint>=0.44.0`.* For example:\n\n    ```yaml\n    - id: terraform_tflint\n          args:\n            - --hook-config=--delegate-chdir\n    ```\n\n\n### terraform_tfsec (deprecated)\n\n**DEPRECATED**. [tfsec was replaced by trivy](https://github.com/aquasecurity/tfsec/discussions/1994), so please use [`terraform_trivy`](#terraform_trivy).\n\n1. `terraform_tfsec` will consume modified files that pre-commit\n    passes to it, so you can perform whitelisting of directories\n    or files to run against via [files](https://pre-commit.com/#config-files)\n    pre-commit flag\n\n    Example:\n\n    ```yaml\n    - id: terraform_tfsec\n      files: ^prd-infra/\n    ```\n\n    The above will tell pre-commit to pass down files from the `prd-infra/` folder\n    only such that the underlying `tfsec` tool can run against changed files in this\n    directory, ignoring any other folders at the root level\n\n2. To ignore specific warnings, follow the convention from the\n[documentation](https://github.com/aquasecurity/tfsec#ignoring-warnings).\n\n    Example:\n\n    ```hcl\n    resource \"aws_security_group_rule\" \"my-rule\" {\n        type = \"ingress\"\n        cidr_blocks = [\"0.0.0.0/0\"] #tfsec:ignore:AWS006\n    }\n    ```\n\n3. `terraform_tfsec` supports custom arguments, so you can pass supported `--no-color` or `--format` (output), `-e` (exclude checks) flags:\n\n    ```yaml\n     - id: terraform_tfsec\n       args:\n         - >\n           --args=--format json\n           --no-color\n           -e aws-s3-enable-bucket-logging,aws-s3-specify-public-access-block\n    ```\n\n4. When you have multiple directories and want to run `tfsec` in all of them and share a single config file - use the `__GIT_WORKING_DIR__` placeholder. It will be replaced by `terraform_tfsec` hooks with Git working directory (repo root) at run time. For example:\n\n    ```yaml\n    - id: terraform_tfsec\n      args:\n        - --args=--config-file=__GIT_WORKING_DIR__/.tfsec.json\n    ```\n\n    Otherwise, will be used files that located in sub-folders:\n\n    ```yaml\n    - id: terraform_tfsec\n      args:\n        - --args=--config-file=.tfsec.json\n    ```\n\n### terraform_trivy\n\n1. `terraform_trivy` will consume modified files that pre-commit\n    passes to it, so you can perform whitelisting of directories\n    or files to run against via [files](https://pre-commit.com/#config-files)\n    pre-commit flag\n\n    Example:\n\n    ```yaml\n    - id: terraform_trivy\n      files: ^prd-infra/\n    ```\n\n    The above will tell pre-commit to pass down files from the `prd-infra/` folder\n    only such that the underlying `trivy` tool can run against changed files in this\n    directory, ignoring any other folders at the root level\n\n2. To ignore specific warnings, follow the convention from the\n[documentation](https://aquasecurity.github.io/trivy/latest/docs/configuration/filtering/).\n\n    Example:\n\n    ```hcl\n    #trivy:ignore:AVD-AWS-0107\n    #trivy:ignore:AVD-AWS-0124\n    resource \"aws_security_group_rule\" \"my-rule\" {\n        type = \"ingress\"\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n    ```\n\n3. `terraform_trivy` supports custom arguments, so you can pass supported `--format` (output), `--skip-dirs` (exclude directories) and other flags:\n\n    ```yaml\n     - id: terraform_trivy\n        args:\n          - --args=--format=json\n          - --args=--skip-dirs=\"**/.terraform\"\n    ```\n\n4. When you have multiple directories and want to run `trivy` in all of them and share a single config file - use the `__GIT_WORKING_DIR__` placeholder. It will be replaced by `terraform_trivy` hooks with Git working directory (repo root) at run time. For example:\n\n    ```yaml\n    - id: terraform_trivy\n      args:\n        - --args=--ignorefile=__GIT_WORKING_DIR__/.trivyignore\n    ```\n\n### terraform_validate\n\n> [!IMPORTANT]\n> If you use [`TF_PLUGIN_CACHE_DIR`](https://developer.hashicorp.com/terraform/cli/config/config-file#provider-plugin-cache), we recommend enabling `--hook-config=--retry-once-with-cleanup=true` or disabling parallelism (`--hook-config=--parallelism-limit=1`) to avoid [race conditions when `terraform init` writes to it](https://github.com/hashicorp/terraform/issues/31964).\n\n1. `terraform_validate` supports custom arguments so you can pass supported `-no-color` or `-json` flags:\n\n    ```yaml\n     - id: terraform_validate\n       args:\n         - --args=-json\n         - --args=-no-color\n    ```\n\n2. `terraform_validate` also supports passing custom arguments to its `terraform init`:\n\n    ```yaml\n    - id: terraform_validate\n      args:\n        - --tf-init-args=-upgrade\n        - --tf-init-args=-lockfile=readonly\n    ```\n\n3. It may happen that Terraform working directory (`.terraform`) already exists but not in the best condition (eg, not initialized modules, wrong version of Terraform, etc.). To solve this problem, you can delete broken `.terraform` directories in your repository:\n\n    **Option 1**\n\n    ```yaml\n    - id: terraform_validate\n      args:\n        - --hook-config=--retry-once-with-cleanup=true     # Boolean. true or false\n    ```\n\n    > **Important**  \n    > The flag requires additional dependency to be installed: `jq`.\n\n    > **Note**  \n    > Reinit can be very slow and require downloading data from remote Terraform registries, and not all of that downloaded data or meta-data is currently being cached by Terraform.\n\n    When `--retry-once-with-cleanup=true`, in each failed directory the cached modules and providers from the `.terraform` directory will be deleted, before retrying once more. To avoid unnecessary deletion of this directory, the cleanup and retry will only happen if Terraform produces any of the following error messages:\n\n    * \"Missing or corrupted provider plugins\"\n    * \"Module source has changed\"\n    * \"Module version requirements have changed\"\n    * \"Module not installed\"\n    * \"Could not load plugin\"\n\n    > **Warning**  \n    > When using `--retry-once-with-cleanup=true`, problematic `.terraform/modules/` and `.terraform/providers/` directories will be recursively deleted without prompting for consent. Other files and directories will not be affected, such as the `.terraform/environment` file.\n\n    **Option 2**\n\n    An alternative solution is to find and delete all `.terraform` directories in your repository:\n\n    ```bash\n    echo \"\n    function rm_terraform {\n        find . \\( -iname \".terraform*\" ! -iname \".terraform-docs*\" \\) -print0 | xargs -0 rm -r\n    }\n    \" >>~/.bashrc\n\n    # Reload shell and use `rm_terraform` command in the repo root\n    ```\n\n   `terraform_validate` hook will try to reinitialize them before running the `terraform validate` command.\n\n    > **Caution**  \n    > If you use Terraform workspaces, DO NOT use this option ([details](https://github.com/antonbabenko/pre-commit-terraform/issues/203#issuecomment-918791847)). Consider the first option, or wait for [`force-init`](https://github.com/antonbabenko/pre-commit-terraform/issues/224) option implementation.\n\n1. `terraform_validate` in a repo with Terraform module, written using Terraform 0.15+ and which uses provider `configuration_aliases` ([Provider Aliases Within Modules](https://www.terraform.io/language/modules/develop/providers#provider-aliases-within-modules)), errors out.\n\n   When running the hook against Terraform code where you have provider `configuration_aliases` defined in a `required_providers` configuration block, terraform will throw an error like:\n\n   > Error: Provider configuration not present\n   > To work with `<resource>` its original provider configuration at provider `[\"registry.terraform.io/hashicorp/aws\"].<provider_alias>` is required, but it has been removed. This occurs when a provider configuration is removed while\n   > objects created by that provider still exist in the state. Re-add the provider configuration to destroy `<resource>`, after which you can remove the provider configuration again.\n\n   This is a [known issue](https://github.com/hashicorp/terraform/issues/28490) with Terraform and how providers are initialized in Terraform 0.15 and later. To work around this you can add an `exclude` parameter to the configuration of `terraform_validate` hook like this:\n\n   ```yaml\n   - id: terraform_validate\n     exclude: '^[^/]+$'\n   ```\n\n   This will exclude the root directory from being processed by this hook. Then add a subdirectory like \"examples\" or \"tests\" and put an example implementation in place that defines the providers with the proper aliases, and this will give you validation of your module through the example. If instead you are using this with multiple modules in one repository you'll want to set the path prefix in the regular expression, such as `exclude: modules/offendingmodule/[^/]+$`.\n\n   Alternately, you can use [terraform-config-inspect](https://github.com/hashicorp/terraform-config-inspect) and use a variant of [this script](https://github.com/bendrucker/terraform-configuration-aliases-action/blob/main/providers.sh) to generate a providers file at runtime:\n\n   ```bash\n   terraform-config-inspect --json . | jq -r '\n     [.required_providers[].aliases]\n     | flatten\n     | del(.[] | select(. == null))\n     | reduce .[] as $entry (\n       {};\n       .provider[$entry.name] //= [] | .provider[$entry.name] += [{\"alias\": $entry.alias}]\n     )\n   ' | tee aliased-providers.tf.json\n   ```\n\n   Save it as `.generate-providers.sh` in the root of your repository and add a `pre-commit` hook to run it before all other hooks, like so:\n\n   ```yaml\n   - repos:\n     - repo: local\n       hooks:\n         - id: generate-terraform-providers\n            name: generate-terraform-providers\n            require_serial: true\n            entry: .generate-providers.sh\n            language: script\n            files: \\.tf(vars)?$\n            pass_filenames: false\n\n     - repo: https://github.com/pre-commit/pre-commit-hooks\n   [...]\n   ```\n\n    > **Tip**  \n    > The latter method will leave an \"aliased-providers.tf.json\" file in your repo. You will either want to automate a way to clean this up or add it to your `.gitignore` or both.\n\n### terraform_wrapper_module_for_each\n\n`terraform_wrapper_module_for_each` generates module wrappers for Terraform modules (useful for Terragrunt where `for_each` is not supported). When using this hook without arguments it will create wrappers for the root module and all modules available in \"modules\" directory.\n\nYou may want to customize some of the options:\n\n1. `--module-dir=...` - Specify a single directory to process. Values: \".\" (means just root module), \"modules/iam-user\" (a single module), or empty (means include all submodules found in \"modules/*\").\n2. `--module-repo-org=...` - Module repository organization (e.g. \"terraform-aws-modules\").\n3. `--module-repo-shortname=...` - Short name of the repository (e.g. \"s3-bucket\").\n4. `--module-repo-provider=...` - Name of the repository provider (e.g. \"aws\" or \"google\").\n\nSample configuration:\n\n```yaml\n- id: terraform_wrapper_module_for_each\n  args:\n    - --args=--module-dir=.   # Process only root module\n    - --args=--dry-run        # No files will be created/updated\n    - --args=--verbose        # Verbose output\n```\n\n**If you use hook inside Docker:**  \nThe `terraform_wrapper_module_for_each` hook attempts to determine the module's short name to be inserted into the generated `README.md` files for the `source` URLs. Since the container uses a bind mount at a static location, it can cause this short name to be incorrect.  \nIf the generated name is incorrect, set them by providing the `module-repo-shortname` option to the hook:\n\n```yaml\n- id: terraform_wrapper_module_for_each\n  args:\n    - '--args=--module-repo-shortname=ec2-instance'\n```\n\n### terrascan\n\n1. `terrascan` supports custom arguments so you can pass supported flags like `--non-recursive` and `--policy-type` to disable recursive inspection and set the policy type respectively:\n\n    ```yaml\n    - id: terrascan\n      args:\n        - --args=--non-recursive # avoids scan errors on subdirectories without Terraform config files\n        - --args=--policy-type=azure\n    ```\n\n    See the `terrascan run -h` command line help for available options.\n\n2. Use the `--args=--verbose` parameter to see the rule ID in the scanning output. Useful to skip validations.\n3. Use `--skip-rules=\"ruleID1,ruleID2\"` parameter to skip one or more rules globally while scanning (e.g.: `--args=--skip-rules=\"ruleID1,ruleID2\"`).\n4. Use the syntax `#ts:skip=RuleID optional_comment` inside a resource to skip the rule for that resource.\n\n### tfupdate\n\n1. Out of the box `tfupdate` will pin the terraform version:\n\n    ```yaml\n    - id: tfupdate\n      name: Autoupdate Terraform versions\n    ```\n\n2. If you'd like to pin providers, etc., use custom arguments, i.e `provider=PROVIDER_NAME`:\n\n    ```yaml\n    - id: tfupdate\n      name: Autoupdate AWS provider versions\n      args:\n        - --args=provider aws # Will be pined to latest version\n\n    - id: tfupdate\n      name: Autoupdate Helm provider versions\n      args:\n        - --args=provider helm\n        - --args=--version 2.5.0 # Will be pined to specified version\n    ```\n\nCheck [`tfupdate` usage instructions](https://github.com/minamijoyo/tfupdate#usage) for other available options and usage examples.  \nNo need to pass `--recursive .` as it is added automatically.\n\n### terragrunt_providers_lock\n\n> [!TIP]\n> Use this hook only in infrastructure repos managed solely by `terragrunt` and do not mix with [`terraform_providers_lock`](#terraform_providers_lock) to avoid conflicts.\n\n> [!WARNING]\n> Hook _may_ be very slow, because terragrunt invokes `t init` under the hood.\n\nHook produces same results as [`terraform_providers_lock`](#terraform_providers_lock), but for terragrunt root modules.\n\nIt invokes `terragrunt providers lock` under the hood and terragrunt [does its' own magic](https://terragrunt.gruntwork.io/docs/features/lock-file-handling/) for handling lock files.\n\n\n```yaml\n- id: terragrunt_providers_lock\n  name: Terragrunt providers lock\n  args:\n    - --args=-platform=darwin_arm64\n    - --args=-platform=darwin_amd64\n    - --args=-platform=linux_amd64\n```\n\n### terragrunt_validate_inputs\n\nValidates Terragrunt unused and undefined inputs. This is useful for keeping\nconfigs clean when module versions change or if configs are copied.\n\nSee the [Terragrunt docs](https://terragrunt.gruntwork.io/docs/reference/cli-options/#validate-inputs) for more details.\n\nExample:\n\n```yaml\n- id: terragrunt_validate_inputs\n  name: Terragrunt validate inputs\n  args:\n    # Optionally check for unused inputs\n    - --args=--terragrunt-strict-validate\n```\n\n> [!NOTE]\n> This hook requires authentication to a given account if defined by config to work properly. For example, if you use a third-party tool to store AWS credentials like `aws-vault` you must be authenticated first.\n>\n> See docs for the [iam_role](https://terragrunt.gruntwork.io/docs/reference/config-blocks-and-attributes/#iam_role) attribute and [--terragrunt-iam-role](https://terragrunt.gruntwork.io/docs/reference/cli-options/#terragrunt-iam-role) flag for more.\n\n## Docker Usage\n\n### File Permissions\n\nA mismatch between the Docker container's user and the local repository file ownership can cause permission issues in the repository where `pre-commit` is run.  The container runs as the `root` user by default, and uses a `tools/entrypoint.sh` script to assume a user ID and group ID if specified by the environment variable `USERID`.\n\nThe [recommended command](#4-run) to run the Docker container is:\n\n```bash\nTAG=latest\ndocker run -e \"USERID=$(id -u):$(id -g)\" -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:$TAG run -a\n```\n\nwhich uses your current session's user ID and group ID to set the variable in the run command.  Without this setting, you may find files and directories owned by `root` in your local repository.\n\nIf the local repository is using a different user or group for permissions, you can modify the `USERID` to the user ID and group ID needed.  **Do not use the username or groupname in the environment variable, as it has no meaning in the container.**  You can get the current directory's owner user ID and group ID from the 3rd (user) and 4th (group) columns in `ls` output:\n\n```bash\n$ ls -aldn .\ndrwxr-xr-x 9 1000 1000 4096 Sep  1 16:23 .\n```\n\n### Download Terraform modules from private GitHub repositories\n\nIf you use a private Git repository as your Terraform module source, you are required to authenticate to GitHub using a [Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\n\nWhen running pre-commit on Docker, both locally or on CI, you need to configure the [~/.netrc](https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html) file, which contains login and initialization information used by the auto-login process.\n\nThis can be achieved by firstly creating the `~/.netrc` file including your `GITHUB_PAT` and `GITHUB_SERVER_HOSTNAME`\n\n```bash\n# set GH values (replace with your own values)\nGITHUB_PAT=ghp_bl481aBlabl481aBla\nGITHUB_SERVER_HOSTNAME=github.com\n\n# create .netrc file\necho -e \"machine $GITHUB_SERVER_HOSTNAME\\n\\tlogin $GITHUB_PAT\" >> ~/.netrc\n```\n\nThe `~/.netrc` file will look similar to the following:\n\n```\nmachine github.com\n  login ghp_bl481aBlabl481aBla\n```\n\n> [!TIP]\n> The value of `GITHUB_SERVER_HOSTNAME` can also refer to a GitHub Enterprise server (i.e. `github.my-enterprise.com`).\n\nFinally, you can execute `docker run` with an additional volume mount so that the `~/.netrc` is accessible within the container\n\n```bash\n# run pre-commit-terraform with docker\n# adding volume for .netrc file\n# .netrc needs to be in /root/ dir\ndocker run --rm -e \"USERID=$(id -u):$(id -g)\" -v ~/.netrc:/root/.netrc -v $(pwd):/lint -w /lint ghcr.io/antonbabenko/pre-commit-terraform:latest run -a\n```\n\n## Github Actions\n\nYou can use this hook in your GitHub Actions workflow togehther with [pre-commit](https://pre-commit.com). To easy up dependency management, you can use the managed [docker image](#docker-usage) within your workflow. Make sure to set the image tag to the version you want to use.\n\nIn this repository's pre-commit [workflow file](.github/workflows/pre-commit.yaml) we run pre-commit without the container image.\n\nHere is an example that use the container image, includes caching of pre-commit dependencies and uses the `pre-commit` command to run the checks (but fixes will be not automatically push back to your branch, when it possible):\n\n```yaml\nname: pre-commit-terraform\n\non:\n  pull_request:\n\njobs:\n  pre-commit:\n    runs-on: ubuntu-latest\n    container:\n      image: ghcr.io/antonbabenko/pre-commit-terraform:latest # latest used here for simplicity, not recommended\n    defaults:\n      run:\n        shell: bash\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          ref: ${{ github.event.pull_request.head.sha }}\n\n      - run: |\n          git config --global --add safe.directory $GITHUB_WORKSPACE\n          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*\n\n      - name: Get changed files\n        id: file_changes\n        run: |\n          export DIFF=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }})\n          echo \"Diff between ${{ github.base_ref }} and ${{ github.sha }}\"\n          echo \"files=$( echo \"$DIFF\" | xargs echo )\" >> $GITHUB_OUTPUT\n\n      - name: fix tar dependency in alpine container image\n        run: |\n          apk --no-cache add tar\n          # check python modules installed versions\n          python -m pip freeze --local\n\n      - name: Cache pre-commit since we use pre-commit from container\n        uses: actions/cache@v4\n        with:\n          path: ~/.cache/pre-commit\n          key: pre-commit-3|${{ hashFiles('.pre-commit-config.yaml') }}\n\n      - name: Execute pre-commit\n        run: |\n          pre-commit run --color=always --show-diff-on-failure --files ${{ steps.file_changes.outputs.files }}\n```\n\n## Authors\n\nThis repository is managed by [Anton Babenko](https://github.com/antonbabenko) with help from these awesome contributors:\n\n<a href=\"https://github.com/antonbabenko/pre-commit-terraform/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=antonbabenko/pre-commit-terraform\" />\n</a>\n\n\n<a href=\"https://star-history.com/#antonbabenko/pre-commit-terraform&Date\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&type=Date&theme=dark\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&type=Date\" />\n    <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=antonbabenko/pre-commit-terraform&type=Date\" />\n  </picture>\n</a>\n\n## License\n\nMIT licensed. See [LICENSE](LICENSE) for full details.\n\n### Additional information for users from Russia and Belarus\n\n* Russia has [illegally annexed Crimea in 2014](https://en.wikipedia.org/wiki/Annexation_of_Crimea_by_the_Russian_Federation) and [brought the war in Donbas](https://en.wikipedia.org/wiki/War_in_Donbas) followed by [full-scale invasion of Ukraine in 2022](https://en.wikipedia.org/wiki/2022_Russian_invasion_of_Ukraine).\n* Russia has brought sorrow and devastations to millions of Ukrainians, killed hundreds of innocent people, damaged thousands of buildings, and forced several million people to flee.\n* [Putin khuylo!](https://en.wikipedia.org/wiki/Putin_khuylo!)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "hatch.toml",
          "type": "blob",
          "size": 0.4091796875,
          "content": "[build.targets.sdist]\ninclude = [\n  '.codecov.yml',\n  '.coveragerc',\n  'src/',\n  'tests/',\n  'pytest.ini',\n  'tox.ini',\n]\n\n[build.targets.wheel]\npackages = [\n  'src/pre_commit_terraform/',\n]\n\n[metadata.hooks.vcs.urls]\n'Source Archive' = 'https://github.com/antonbabenko/pre-commit-terraform/archive/{commit_hash}.tar.gz'\n'GitHub: repo' = 'https://github.com/antonbabenko/pre-commit-terraform'\n\n[version]\nsource = 'vcs'\n"
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib_getopt",
          "type": "blob",
          "size": 15.0751953125,
          "content": "#!/bin/bash\n\ngetopt() {\n  # pure-getopt, a drop-in replacement for GNU getopt in pure Bash.\n  # version 1.4.4\n  #\n  # Copyright 2012-2020 Aron Griffis <aron@scampersand.com>\n  #\n  # Permission is hereby granted, free of charge, to any person obtaining\n  # a copy of this software and associated documentation files (the\n  # \"Software\"), to deal in the Software without restriction, including\n  # without limitation the rights to use, copy, modify, merge, publish,\n  # distribute, sublicense, and/or sell copies of the Software, and to\n  # permit persons to whom the Software is furnished to do so, subject to\n  # the following conditions:\n  #\n  # The above copyright notice and this permission notice shall be included\n  # in all copies or substantial portions of the Software.\n  #\n  # THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  # OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  # MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n  # IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n  # CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  # TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  # SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  _getopt_main() {\n    # Returns one of the following statuses:\n    #   0 success\n    #   1 error parsing parameters\n    #   2 error in getopt invocation\n    #   3 internal error\n    #   4 reserved for -T\n    #\n    # For statuses 0 and 1, generates normalized and shell-quoted\n    # \"options -- parameters\" on stdout.\n\n    declare parsed status\n    declare short long='' name flags=''\n    declare have_short=false\n\n    # Synopsis from getopt man-page:\n    #\n    #   getopt optstring parameters\n    #   getopt [options] [--] optstring parameters\n    #   getopt [options] -o|--options optstring [options] [--] parameters\n    #\n    # The first form can be normalized to the third form which\n    # _getopt_parse() understands. The second form can be recognized after\n    # first parse when $short hasn't been set.\n\n    if [[ -n ${GETOPT_COMPATIBLE+isset} || $1 == [^-]* ]]; then\n      # Enable compatibility mode\n      flags=c$flags\n      # Normalize first to third synopsis form\n      set -- -o \"$1\" -- \"${@:2}\"\n    fi\n\n    # First parse always uses flags=p since getopt always parses its own\n    # arguments effectively in this mode.\n    parsed=$(_getopt_parse getopt ahl:n:o:qQs:TuV \\\n      alternative,help,longoptions:,name:,options:,quiet,quiet-output,shell:,test,version \\\n      p \"$@\")\n    status=$?\n    if [[ $status != 0 ]]; then\n      if [[ $status == 1 ]]; then\n        echo \"Try \\`getopt --help' for more information.\" >&2\n        # Since this is the first parse, convert status 1 to 2\n        status=2\n      fi\n      return $status\n    fi\n    eval \"set -- $parsed\"\n\n    while [[ $# -gt 0 ]]; do\n      case $1 in\n        (-a|--alternative)\n          flags=a$flags ;;\n\n        (-h|--help)\n          _getopt_help\n          return 2  # as does GNU getopt\n          ;;\n\n        (-l|--longoptions)\n          long=\"$long${long:+,}$2\"\n          shift ;;\n\n        (-n|--name)\n          name=$2\n          shift ;;\n\n        (-o|--options)\n          short=$2\n          have_short=true\n          shift ;;\n\n        (-q|--quiet)\n          flags=q$flags ;;\n\n        (-Q|--quiet-output)\n          flags=Q$flags ;;\n\n        (-s|--shell)\n          case $2 in\n            (sh|bash)\n              flags=${flags//t/} ;;\n            (csh|tcsh)\n              flags=t$flags ;;\n            (*)\n              echo 'getopt: unknown shell after -s or --shell argument' >&2\n              echo \"Try \\`getopt --help' for more information.\" >&2\n              return 2 ;;\n          esac\n          shift ;;\n\n        (-u|--unquoted)\n          flags=u$flags ;;\n\n        (-T|--test)\n          return 4 ;;\n\n        (-V|--version)\n          echo \"pure-getopt 1.4.4\"\n          return 0 ;;\n\n        (--)\n          shift\n          break ;;\n      esac\n\n      shift\n    done\n\n    if ! $have_short; then\n      # $short was declared but never set, not even to an empty string.\n      # This implies the second form in the synopsis.\n      if [[ $# == 0 ]]; then\n        echo 'getopt: missing optstring argument' >&2\n        echo \"Try \\`getopt --help' for more information.\" >&2\n        return 2\n      fi\n      short=$1\n      have_short=true\n      shift\n    fi\n\n    if [[ $short == -* ]]; then\n      # Leading dash means generate output in place rather than reordering,\n      # unless we're already in compatibility mode.\n      [[ $flags == *c* ]] || flags=i$flags\n      short=${short#?}\n    elif [[ $short == +* ]]; then\n      # Leading plus means POSIXLY_CORRECT, unless we're already in\n      # compatibility mode.\n      [[ $flags == *c* ]] || flags=p$flags\n      short=${short#?}\n    fi\n\n    # This should fire if POSIXLY_CORRECT is in the environment, even if\n    # it's an empty string.  That's the difference between :+ and +\n    flags=${POSIXLY_CORRECT+p}$flags\n\n    _getopt_parse \"${name:-getopt}\" \"$short\" \"$long\" \"$flags\" \"$@\"\n  }\n\n  _getopt_parse() {\n    # Inner getopt parser, used for both first parse and second parse.\n    # Returns 0 for success, 1 for error parsing, 3 for internal error.\n    # In the case of status 1, still generates stdout with whatever could\n    # be parsed.\n    #\n    # $flags is a string of characters with the following meanings:\n    #   a - alternative parsing mode\n    #   c - GETOPT_COMPATIBLE\n    #   i - generate output in place rather than reordering\n    #   p - POSIXLY_CORRECT\n    #   q - disable error reporting\n    #   Q - disable normal output\n    #   t - quote for csh/tcsh\n    #   u - unquoted output\n\n    declare name=\"$1\" short=\"$2\" long=\"$3\" flags=\"$4\"\n    shift 4\n\n    # Split $long on commas, prepend double-dashes, strip colons;\n    # for use with _getopt_resolve_abbrev\n    declare -a longarr\n    _getopt_split longarr \"$long\"\n    longarr=( \"${longarr[@]/#/--}\" )\n    longarr=( \"${longarr[@]%:}\" )\n    longarr=( \"${longarr[@]%:}\" )\n\n    # Parse and collect options and parameters\n    declare -a opts params\n    declare o alt_recycled=false error=0\n\n    while [[ $# -gt 0 ]]; do\n      case $1 in\n        (--)\n          params=( \"${params[@]}\" \"${@:2}\" )\n          break ;;\n\n        (--*=*)\n          o=${1%%=*}\n          if ! o=$(_getopt_resolve_abbrev \"$o\" \"${longarr[@]}\"); then\n            error=1\n          elif [[ ,\"$long\", == *,\"${o#--}\"::,* ]]; then\n            opts=( \"${opts[@]}\" \"$o\" \"${1#*=}\" )\n          elif [[ ,\"$long\", == *,\"${o#--}\":,* ]]; then\n            opts=( \"${opts[@]}\" \"$o\" \"${1#*=}\" )\n          elif [[ ,\"$long\", == *,\"${o#--}\",* ]]; then\n            if $alt_recycled; then o=${o#-}; fi\n            _getopt_err \"$name: option '$o' doesn't allow an argument\"\n            error=1\n          else\n            echo \"getopt: assertion failed (1)\" >&2\n            return 3\n          fi\n          alt_recycled=false\n          ;;\n\n        (--?*)\n          o=$1\n          if ! o=$(_getopt_resolve_abbrev \"$o\" \"${longarr[@]}\"); then\n            error=1\n          elif [[ ,\"$long\", == *,\"${o#--}\",* ]]; then\n            opts=( \"${opts[@]}\" \"$o\" )\n          elif [[ ,\"$long\", == *,\"${o#--}::\",* ]]; then\n            opts=( \"${opts[@]}\" \"$o\" '' )\n          elif [[ ,\"$long\", == *,\"${o#--}:\",* ]]; then\n            if [[ $# -ge 2 ]]; then\n              shift\n              opts=( \"${opts[@]}\" \"$o\" \"$1\" )\n            else\n              if $alt_recycled; then o=${o#-}; fi\n              _getopt_err \"$name: option '$o' requires an argument\"\n              error=1\n            fi\n          else\n            echo \"getopt: assertion failed (2)\" >&2\n            return 3\n          fi\n          alt_recycled=false\n          ;;\n\n        (-*)\n          if [[ $flags == *a* ]]; then\n            # Alternative parsing mode!\n            # Try to handle as a long option if any of the following apply:\n            #  1. There's an equals sign in the mix -x=3 or -xy=3\n            #  2. There's 2+ letters and an abbreviated long match -xy\n            #  3. There's a single letter and an exact long match\n            #  4. There's a single letter and no short match\n            o=${1::2} # temp for testing #4\n            if [[ $1 == *=* || $1 == -?? || \\\n                  ,$long, == *,\"${1#-}\"[:,]* || \\\n                  ,$short, != *,\"${o#-}\"[:,]* ]]; then\n              o=$(_getopt_resolve_abbrev \"${1%%=*}\" \"${longarr[@]}\" 2>/dev/null)\n              case $? in\n                (0)\n                  # Unambiguous match. Let the long options parser handle\n                  # it, with a flag to get the right error message.\n                  set -- \"-$1\" \"${@:2}\"\n                  alt_recycled=true\n                  continue ;;\n                (1)\n                  # Ambiguous match, generate error and continue.\n                  _getopt_resolve_abbrev \"${1%%=*}\" \"${longarr[@]}\" >/dev/null\n                  error=1\n                  shift\n                  continue ;;\n                (2)\n                  # No match, fall through to single-character check.\n                  true ;;\n                (*)\n                  echo \"getopt: assertion failed (3)\" >&2\n                  return 3 ;;\n              esac\n            fi\n          fi\n\n          o=${1::2}\n          if [[ \"$short\" == *\"${o#-}\"::* ]]; then\n            if [[ ${#1} -gt 2 ]]; then\n              opts=( \"${opts[@]}\" \"$o\" \"${1:2}\" )\n            else\n              opts=( \"${opts[@]}\" \"$o\" '' )\n            fi\n          elif [[ \"$short\" == *\"${o#-}\":* ]]; then\n            if [[ ${#1} -gt 2 ]]; then\n              opts=( \"${opts[@]}\" \"$o\" \"${1:2}\" )\n            elif [[ $# -ge 2 ]]; then\n              shift\n              opts=( \"${opts[@]}\" \"$o\" \"$1\" )\n            else\n              _getopt_err \"$name: option requires an argument -- '${o#-}'\"\n              error=1\n            fi\n          elif [[ \"$short\" == *\"${o#-}\"* ]]; then\n            opts=( \"${opts[@]}\" \"$o\" )\n            if [[ ${#1} -gt 2 ]]; then\n              set -- \"$o\" \"-${1:2}\" \"${@:2}\"\n            fi\n          else\n            if [[ $flags == *a* ]]; then\n              # Alternative parsing mode! Report on the entire failed\n              # option. GNU includes =value but we omit it for sanity with\n              # very long values.\n              _getopt_err \"$name: unrecognized option '${1%%=*}'\"\n            else\n              _getopt_err \"$name: invalid option -- '${o#-}'\"\n              if [[ ${#1} -gt 2 ]]; then\n                set -- \"$o\" \"-${1:2}\" \"${@:2}\"\n              fi\n            fi\n            error=1\n          fi ;;\n\n        (*)\n          # GNU getopt in-place mode (leading dash on short options)\n          # overrides POSIXLY_CORRECT\n          if [[ $flags == *i* ]]; then\n            opts=( \"${opts[@]}\" \"$1\" )\n          elif [[ $flags == *p* ]]; then\n            params=( \"${params[@]}\" \"$@\" )\n            break\n          else\n            params=( \"${params[@]}\" \"$1\" )\n          fi\n      esac\n\n      shift\n    done\n\n    if [[ $flags == *Q* ]]; then\n      true  # generate no output\n    else\n      echo -n ' '\n      if [[ $flags == *[cu]* ]]; then\n        printf '%s -- %s' \"${opts[*]}\" \"${params[*]}\"\n      else\n        if [[ $flags == *t* ]]; then\n          _getopt_quote_csh \"${opts[@]}\" -- \"${params[@]}\"\n        else\n          _getopt_quote \"${opts[@]}\" -- \"${params[@]}\"\n        fi\n      fi\n      echo\n    fi\n\n    return $error\n  }\n\n  _getopt_err() {\n    if [[ $flags != *q* ]]; then\n      printf '%s\\n' \"$1\" >&2\n    fi\n  }\n\n  _getopt_resolve_abbrev() {\n    # Resolves an abbrevation from a list of possibilities.\n    # If the abbreviation is unambiguous, echoes the expansion on stdout\n    # and returns 0.  If the abbreviation is ambiguous, prints a message on\n    # stderr and returns 1. (For first parse this should convert to exit\n    # status 2.)  If there is no match at all, prints a message on stderr\n    # and returns 2.\n    declare a q=\"$1\"\n    declare -a matches=()\n    shift\n    for a; do\n      if [[ $q == \"$a\" ]]; then\n        # Exact match. Squash any other partial matches.\n        matches=( \"$a\" )\n        break\n      elif [[ $flags == *a* && $q == -[^-]* && $a == -\"$q\" ]]; then\n        # Exact alternative match. Squash any other partial matches.\n        matches=( \"$a\" )\n        break\n      elif [[ $a == \"$q\"* ]]; then\n        # Abbreviated match.\n        matches=( \"${matches[@]}\" \"$a\" )\n      elif [[ $flags == *a* && $q == -[^-]* && $a == -\"$q\"* ]]; then\n        # Abbreviated alternative match.\n        matches=( \"${matches[@]}\" \"${a#-}\" )\n      fi\n    done\n    case ${#matches[@]} in\n      (0)\n        [[ $flags == *q* ]] || \\\n        printf \"$name: unrecognized option %s\\\\n\" >&2 \\\n          \"$(_getopt_quote \"$q\")\"\n        return 2 ;;\n      (1)\n        printf '%s' \"${matches[0]}\"; return 0 ;;\n      (*)\n        [[ $flags == *q* ]] || \\\n        printf \"$name: option %s is ambiguous; possibilities: %s\\\\n\" >&2 \\\n          \"$(_getopt_quote \"$q\")\" \"$(_getopt_quote \"${matches[@]}\")\"\n        return 1 ;;\n    esac\n  }\n\n  _getopt_split() {\n    # Splits $2 at commas to build array specified by $1\n    declare IFS=,\n    eval \"$1=( \\$2 )\"\n  }\n\n  _getopt_quote() {\n    # Quotes arguments with single quotes, escaping inner single quotes\n    declare s space='' q=\\'\n    for s; do\n      printf \"$space'%s'\" \"${s//$q/$q\\\\$q$q}\"\n      space=' '\n    done\n  }\n\n  _getopt_quote_csh() {\n    # Quotes arguments with single quotes, escaping inner single quotes,\n    # bangs, backslashes and newlines\n    declare s i c space\n    for s; do\n      echo -n \"$space'\"\n      for ((i=0; i<${#s}; i++)); do\n        c=${s:i:1}\n        case $c in\n          (\\\\|\\'|!)\n            echo -n \"'\\\\$c'\" ;;\n          ($'\\n')\n            echo -n \"\\\\$c\" ;;\n          (*)\n            echo -n \"$c\" ;;\n        esac\n      done\n      echo -n \\'\n      space=' '\n    done\n  }\n\n  _getopt_help() {\n    cat <<-EOT >&2\n\n\tUsage:\n\t getopt <optstring> <parameters>\n\t getopt [options] [--] <optstring> <parameters>\n\t getopt [options] -o|--options <optstring> [options] [--] <parameters>\n\n\tParse command options.\n\n\tOptions:\n\t -a, --alternative             allow long options starting with single -\n\t -l, --longoptions <longopts>  the long options to be recognized\n\t -n, --name <progname>         the name under which errors are reported\n\t -o, --options <optstring>     the short options to be recognized\n\t -q, --quiet                   disable error reporting by getopt(3)\n\t -Q, --quiet-output            no normal output\n\t -s, --shell <shell>           set quoting conventions to those of <shell>\n\t -T, --test                    test for getopt(1) version\n\t -u, --unquoted                do not quote the output\n\n\t -h, --help     display this help and exit\n\t -V, --version  output version information and exit\n\n\tFor more details see getopt(1).\n\tEOT\n  }\n\n  _getopt_version_check() {\n    if [[ -z $BASH_VERSION ]]; then\n      echo \"getopt: unknown version of bash might not be compatible\" >&2\n      return 1\n    fi\n\n    # This is a lexical comparison that should be sufficient forever.\n    if [[ $BASH_VERSION < 2.05b ]]; then\n      echo \"getopt: bash $BASH_VERSION might not be compatible\" >&2\n      return 1\n    fi\n\n    return 0\n  }\n\n  _getopt_version_check\n  _getopt_main \"$@\"\n  declare status=$?\n  unset -f _getopt_main _getopt_err _getopt_parse _getopt_quote \\\n    _getopt_quote_csh _getopt_resolve_abbrev _getopt_split _getopt_help \\\n    _getopt_version_check\n  return $status\n}\n\n# vim:sw=2\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.392578125,
          "content": "[build-system]\nrequires = [\n  'hatchling',\n  'hatch-vcs',  # setuptools-scm\n]\nbuild-backend = 'hatchling.build'\n\n[dependency-groups]\nbuilding = [\n  'build',\n]\nlinting = [\n  'pre-commit',\n]\ntesting = [\n  'covdefaults',  # sets up `coveragepy` config boilerplate\n  'pytest >= 8',\n  'pytest-cov',  # integrates `coveragepy` into pytest runs\n  'pytest-mock',  # provides a `mocker` fixture\n  'pytest-xdist',  # paralellizes tests through subprocesses\n]\nupstreaming = [\n  'twine',\n]\n\n[project]\nname = 'pre-commit-terraform'\nclassifiers = [\n  'License :: OSI Approved :: MIT License',\n\n  'Programming Language :: Python :: 3',\n  'Programming Language :: Python :: 3.9',\n  'Programming Language :: Python :: 3.10',\n  'Programming Language :: Python :: 3.11',\n  'Programming Language :: Python :: 3.12',\n  'Programming Language :: Python :: 3.13',\n\n  'Programming Language :: Python :: Implementation :: CPython',\n  'Programming Language :: Python :: Implementation :: PyPy',\n]\ndescription = 'Pre-commit hooks for terraform_docs_replace'\ndependencies = []\ndynamic = [\n  'urls',\n  'version',\n]\nrequires-python = \">= 3.9\"\n\n[[project.authors]]\nname = 'Anton Babenko'\nemail = 'anton@antonbabenko.com'\n\n[[project.authors]]\nname = 'Contributors'\n\n[[project.maintainers]]\nname = 'Maksym Vlasov'\n\n[[project.maintainers]]\nname = 'George L. Yermulnik'\nemail = 'yz@yz.kiev.ua'\n\n[project.readme]\nfile = 'README.md'\ncontent-type = 'text/markdown'\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 1.7548828125,
          "content": "[pytest]\naddopts =\n  # `pytest-xdist`:\n  --numprocesses=auto\n  # NOTE: the plugin is disabled because it's slower with so few tests\n  --numprocesses=0\n\n  # Show 10 slowest invocations:\n  --durations=10\n\n  # Report all the things == -rxXs:\n  -ra\n\n  # Show values of the local vars in errors/tracebacks:\n  --showlocals\n\n  # Autocollect and invoke the doctests from all modules:\n  # https://docs.pytest.org/en/stable/doctest.html\n  --doctest-modules\n\n  # Pre-load the `pytest-cov` plugin early:\n  -p pytest_cov\n\n  # `pytest-cov`:\n  --cov\n  --cov-config=.coveragerc\n  --cov-context=test\n  --no-cov-on-fail\n\n  # Fail on config parsing warnings:\n  # --strict-config\n\n  # Fail on non-existing markers:\n  # * Deprecated since v6.2.0 but may be reintroduced later covering a\n  #   broader scope:\n  # --strict\n  # * Exists since v4.5.0 (advised to be used instead of `--strict`):\n  --strict-markers\n\ndoctest_optionflags = ALLOW_UNICODE ELLIPSIS\n\n# Marks tests with an empty parameterset as xfail(run=False)\nempty_parameter_set_mark = xfail\n\nfaulthandler_timeout = 30\n\nfilterwarnings =\n  error\n\n# https://docs.pytest.org/en/stable/usage.html#creating-junitxml-format-files\njunit_duration_report = call\n# xunit1 contains more metadata than xunit2 so it's better for CI UIs:\njunit_family = xunit1\njunit_logging = all\njunit_log_passing_tests = true\njunit_suite_name = awx_plugins_test_suite\n\n# A mapping of markers to their descriptions allowed in strict mode:\nmarkers =\n\nminversion = 6.1.0\n\n# Optimize pytest's lookup by restricting potentially deep dir tree scan:\nnorecursedirs =\n  build\n  dependencies\n  dist\n  docs\n  .cache\n  .eggs\n  .git\n  .github\n  .tox\n  *.egg\n  *.egg-info\n  */*.egg-info\n  */**/*.egg-info\n  *.dist-info\n  */*.dist-info\n  */**/*.dist-info\n\ntestpaths = tests/pytest/\n\nxfail_strict = true\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 9.3583984375,
          "content": "[tox]\nisolated_build = true\n\n\n[python-cli-options]\nbyte-warnings = -b\nbyte-errors = -bb\nmax-isolation = -E -s -I\nsome-isolation = -E -s\nwarnings-to-errors = -Werror\n\n\n[testenv]\ndescription = Run pytest under {envpython}\ndependency_groups =\n  testing\ncommands =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -m pytest \\\n      {tty:--color=yes} \\\n      {posargs:--cov-report=html:{envtmpdir}{/}htmlcov{/}}\ncommands_post =\n  -{envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'import atexit, os, sys; \\\n      os.getenv(\"GITHUB_ACTIONS\") == \"true\" or sys.exit(); \\\n      import coverage; \\\n      gh_summary_fd = open(\\\n        os.environ[\"GITHUB_STEP_SUMMARY\"], encoding=\"utf-8\", mode=\"a\",\\\n      ); \\\n      atexit.register(gh_summary_fd.close); \\\n      cov = coverage.Coverage(); \\\n      cov.load(); \\\n      cov.report(file=gh_summary_fd, output_format=\"markdown\")'\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'import os, pathlib, sys; \\\n      os.getenv(\"GITHUB_ACTIONS\") == \"true\" or sys.exit(); \\\n      cov_report_arg_prefix = \"--cov-report=xml:\"; \\\n      test_report_arg_prefix = \"--junitxml=\"; \\\n      cov_reports = [\\\n        arg[len(cov_report_arg_prefix):] for arg in sys.argv \\\n        if arg.startswith(cov_report_arg_prefix)\\\n      ]; \\\n      test_reports = [\\\n        arg[len(test_report_arg_prefix):] for arg in sys.argv \\\n        if arg.startswith(test_report_arg_prefix)\\\n      ]; \\\n      cov_report_file = cov_reports[-1] if cov_reports else None; \\\n      test_report_file = test_reports[-1] if test_reports else None; \\\n      gh_output_fd = open(\\\n        os.environ[\"GITHUB_OUTPUT\"], encoding=\"utf-8\", mode=\"a\",\\\n      ); \\\n      cov_report_file and \\\n        print(f\"cov-report-files={cov_report_file !s}\", file=gh_output_fd); \\\n      test_report_file and \\\n        print(f\"test-result-files={test_report_file !s}\", file=gh_output_fd); \\\n      print(\"codecov-flags=pytest\", file=gh_output_fd); \\\n      gh_output_fd.close()' \\\n    {posargs}\n  # Print out the output coverage dir and a way to serve html:\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c\\\n      'import pathlib, shlex, sys; \\\n      cov_html_report_arg_prefix = \"--cov-report=html:\"; \\\n      cov_html_reports = [\\\n        arg[len(cov_html_report_arg_prefix):] for arg in sys.argv \\\n        if arg.startswith(cov_html_report_arg_prefix)\\\n      ]; \\\n      cov_html_reports or sys.exit(); \\\n      cov_html_report_dir = pathlib.Path(cov_html_reports[-1]); \\\n      index_file = cov_html_report_dir / \"index.html\";\\\n      html_url = f\"file://\\{index_file\\}\";\\\n      browse_cmd = shlex.join((\"python3\", \"-Im\", \"webbrowser\", html_url)); \\\n      serve_cmd = shlex.join((\\\n        \"python3\", \"-Im\", \"http.server\", \\\n        \"--directory\", \"cov_html_report_dir\", \"0\", \\\n      )); \\\n      print(f\"\\nTo open the HTML coverage report, run\\n\\n\\\n      \\t\\{browse_cmd !s\\}\\n\");\\\n      print(f\"To serve \\\n      the HTML coverage report with a local web server, use\\n\\n\\\n      \\t\\{serve_cmd !s\\}\\n\")' \\\n    {posargs:--cov-report=html:{envtmpdir}{/}htmlcov{/}}\npackage = editable\npass_env =\n  CI\n  GITHUB_*\n  SSH_AUTH_SOCK\n  TERM\nset_env =\n  COVERAGE_PROCESS_START = {toxinidir}{/}.coveragerc\nwheel_build_env = .pkg\n\n\n[testenv:cleanup-dists]\ndescription =\n  Wipe the the dist{/} folder\ndependency_groups =\ncommands_pre =\ncommands =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'import os, shutil, sys; \\\n      dists_dir = \"{toxinidir}{/}dist{/}\"; \\\n      shutil.rmtree(dists_dir, ignore_errors=True); \\\n      sys.exit(os.path.exists(dists_dir))'\ncommands_post =\npackage = skip\n\n\n[testenv:build-dists]\ndescription =\n  Build dists with {basepython} and put them into the dist{/} folder\ndependency_groups =\n  building\ndepends =\n  cleanup-dists\ncommands =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -m build \\\n      {posargs:}\ncommands_post =\npackage = skip\n\n\n[testenv:metadata-validation]\ndescription =\n  Verify that dists under the `dist{/}` dir\n  have valid metadata\ndependency_groups =\n  upstreaming\ndepends =\n  build-dists\ncommands =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -m twine \\\n      check \\\n      --strict \\\n      dist{/}*\ncommands_post =\npackage = skip\n\n\n[testenv:pre-commit]\ndescription =\n  Run the quality checks under {basepython}; run as\n  `SKIP=check-id1,check-id2 tox r -e pre-commit` to instruct the underlying\n  `pre-commit` invocation avoid running said checks; Use\n  `tox r -e pre-commit -- check-id1 --all-files` to select checks matching IDs\n  aliases{:} `tox r -e pre-commit -- mypy --all-files` will run 3 MyPy\n  invocations, but `tox r -e pre-commit -- mypy-py313 --all-files` runs one.\ncommands =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -m pre_commit \\\n      run \\\n      --color=always \\\n      --show-diff-on-failure \\\n      {posargs:--all-files}\n\n  # Print out the advice on how to install pre-commit from this env into Git:\n  -{envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'cmd = \"{envpython} -m pre_commit install\"; \\\n      scr_width = len(cmd) + 10; \\\n      sep = \"=\" * scr_width; \\\n      cmd_str = \"    $ \\{cmd\\}\";' \\\n      'print(f\"\\n\\{sep\\}\\nTo install pre-commit hooks into the Git repo, run:\\\n      \\n\\n\\{cmd_str\\}\\n\\n\\{sep\\}\\n\")'\ncommands_post =\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'import os, pathlib, sys; \\\n      os.getenv(\"GITHUB_ACTIONS\") == \"true\" or sys.exit(); \\\n      project_root_path = pathlib.Path(r\"{toxinidir}\"); \\\n      test_results_dir = pathlib.Path(r\"{temp_dir}\") / \".test-results\"; \\\n      coverage_result_files = \",\".join(\\\n        str(xml_path.relative_to(project_root_path)) \\\n        for xml_path in test_results_dir.glob(\"mypy--py-*{/}cobertura.xml\")\\\n      ); \\\n      gh_output_fd = open(\\\n        os.environ[\"GITHUB_OUTPUT\"], encoding=\"utf-8\", mode=\"a\",\\\n      ); \\\n      print(\\\n        f\"cov-report-files={coverage_result_files !s}\", file=gh_output_fd\\\n      ); \\\n      print(\"codecov-flags=MyPy\", file=gh_output_fd); \\\n      gh_output_fd.close()'\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c \\\n      'import itertools, os, pathlib, shlex, sys; \\\n      os.getenv(\"GITHUB_ACTIONS\") == \"true\" or sys.exit(); \\\n      test_results_dir = pathlib.Path(r\"{temp_dir}\") / \".test-results\"; \\\n      text_and_json_reports = itertools.chain( \\\n        test_results_dir.glob(\"mypy--py-*{/}*.json\"), \\\n        test_results_dir.glob(\"mypy--py-*{/}*.txt\"), \\\n      ); \\\n      report_contents = { \\\n        report{:} report.read_text() \\\n        for report in text_and_json_reports \\\n      }; \\\n      reports_summary_text_blob = \"\\n\\n\".join( \\\n        f\"\\N\\{NUMBER SIGN\\}\\N\\{NUMBER SIGN\\} {report_path.parent.name}{:} \" \\\n        f\"`{report_path.name}`\\n\\n\" \\\n        f\"```{report_path.suffix[1:]}\\n{report_text}\\n```\\n\" \\\n        for report_path, report_text in report_contents.items() \\\n      ); \\\n      gh_summary_fd = open( \\\n        os.environ[\"GITHUB_STEP_SUMMARY\"], encoding=\"utf-8\", mode=\"a\", \\\n      ); \\\n      print(reports_summary_text_blob, file=gh_summary_fd); \\\n      gh_summary_fd.close()'\n  # Print out the output coverage dir and a way to serve html:\n  {envpython} \\\n    {[python-cli-options]byte-errors} \\\n    {[python-cli-options]max-isolation} \\\n    {[python-cli-options]warnings-to-errors} \\\n    -c\\\n      'import os, pathlib, sys; \\\n      os.getenv(\"GITHUB_ACTIONS\") == \"true\" and sys.exit(); \\\n      len(sys.argv) >= 3 and all(\\\n        arg != \"mypy\" and not arg.startswith(\"mypy-py3\") \\\n        for arg in sys.argv \\\n      ) and sys.exit(); \\\n      project_root_path = pathlib.Path(r\"{toxinidir}\"); \\\n      test_results_dir = pathlib.Path(r\"{temp_dir}\") / \".test-results\"; \\\n      coverage_html_report_urls = [\\\n        f\"file://\\{xml_path !s\\}\" \\\n        for xml_path in test_results_dir.glob(\"mypy--py-*{/}index.html\")\\\n      ]; \\\n      coverage_html_report_open_cmds = [\\\n      f\"python3 -Im webbrowser \\N\\{QUOTATION MARK\\}\\{html_url !s\\}\\N\\{QUOTATION MARK\\}\" \\\n      for html_url in coverage_html_report_urls\\\n      ]; \\\n      coverage_html_report_open_cmds_blob = \"\\n\\n\\t\".join(\\\n        coverage_html_report_open_cmds,\\\n      ); \\\n      print(\\\n        f\"\\nTo open the HTML coverage reports, run\\n\\n\\\n        \\t\\{coverage_html_report_open_cmds_blob !s\\}\\n\"\\\n      ); \\\n      print(\\\n        f\"[*] Find rest of JSON and text reports, are in the same directories.\"\\\n      )\\\n      ' \\\n    {posargs:--all-files}\ndependency_groups =\n  linting\nisolated_build = true\npackage = skip\npass_env =\n  {[testenv]pass_env}\n  SKIP  # set this variable\n"
        }
      ]
    }
  ]
}