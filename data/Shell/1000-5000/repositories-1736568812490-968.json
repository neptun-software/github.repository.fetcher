{
  "metadata": {
    "timestamp": 1736568812490,
    "page": 968,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker-library/mongo",
      "stars": 1037,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1474609375,
          "content": "/*/**/Dockerfile            linguist-generated\n/*/**/docker-entrypoint.sh  linguist-generated\n/Dockerfile*.template       linguist-language=Dockerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": ".jq-template.awk\n"
        },
        {
          "name": "5.0-rc",
          "type": "tree",
          "content": null
        },
        {
          "name": "5.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "6.0-rc",
          "type": "tree",
          "content": null
        },
        {
          "name": "6.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "7.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "8.0",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile-linux.template",
          "type": "blob",
          "size": 5.3642578125,
          "content": "{{ def target: .targets[.linux] -}}\nFROM {{ target.image }}\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN set -eux; \\\n\tgroupadd --gid 999 --system mongodb; \\\n\tuseradd --uid 999 --system --gid mongodb --home-dir /data/db mongodb; \\\n\tmkdir -p /data/db /data/configdb; \\\n\tchown -R mongodb:mongodb /data/db /data/configdb\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tjq \\\n\t\tnumactl \\\n\t\tprocps \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION 1.17\n# grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION 3.13.1\nENV JSYAML_CHECKSUM 662e32319bdd378e91f67578e56a34954b0a2e33aca11d70ab9f4826af24b941\n\nRUN set -eux; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tgnupg \\\n\t\twget \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n# download/install gosu\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\t\\\n# download/install js-yaml\n\tmkdir -p /opt/js-yaml/; \\\n\twget -O /opt/js-yaml/js-yaml.tgz https://registry.npmjs.org/js-yaml/-/js-yaml-${JSYAML_VERSION}.tgz; \\\n\techo \"$JSYAML_CHECKSUM */opt/js-yaml/js-yaml.tgz\" | sha256sum -c -; \\\n\ttar -xz --strip-components=1 -f /opt/js-yaml/js-yaml.tgz -C /opt/js-yaml package/dist/js-yaml.js package/package.json; \\\n\trm /opt/js-yaml/js-yaml.tgz; \\\n\tln -s /opt/js-yaml/dist/js-yaml.js /js-yaml.js; \\\n\t\\\n# download/install MongoDB PGP keys\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\twget -O KEYS {{ [ .pgp[].url ] | map(@sh) | join(\" \") }}; \\\n\tgpg --batch --import KEYS; \\\n\tmkdir -p /etc/apt/keyrings; \\\n\tgpg --batch --export --armor {{ [ .pgp[].fingerprints[] ] | map(@sh) | join(\" \") }} > /etc/apt/keyrings/mongodb.asc; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" KEYS; \\\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\\\n# smoke test\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nRUN mkdir /docker-entrypoint-initdb.d\n\n# Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n# Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n# Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n# Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org{{ if (env.version != env.rcVersion) and (env.rcVersion | split(\".\")[1] | tonumber % 2 == 1) then \"-unstable\" else \"\" end }}\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=${MONGO_PACKAGE} MONGO_REPO=${MONGO_REPO}\n\nENV MONGO_MAJOR {{ if env.version != env.rcVersion then \"testing\" else env.version end }}\nRUN echo \"deb [ signed-by=/etc/apt/keyrings/mongodb.asc ] http://$MONGO_REPO/apt/{{ target.image | gsub(\":.*$\"; \"\") }} {{ target.suite }}/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR {{ if target.image | test(\"^debian\") then \"main\" else \"multiverse\" end }}\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n{{ if env.version != env.rcVersion then ( -}}\n# add GA repo for mongodb-mongosh and mongodb-database-tools\nRUN echo \"deb [ signed-by=/etc/apt/keyrings/mongodb.asc ] http://$MONGO_REPO/apt/{{ target.image | gsub(\":.*$\"; \"\") }} {{ target.suite }}/${MONGO_PACKAGE%-unstable}/{{ env.rcVersion }} {{ if target.image | test(\"^debian\") then \"main\" else \"multiverse\" end }}\" | tee \"/etc/apt/sources.list.d/mongodb-{{ env.rcVersion }}.list\"\n{{ ) else \"\" end -}}\n\n{{ if .notes then ( -}}\n# {{ .notes }}\n{{ ) else \"\" end -}}\nENV MONGO_VERSION {{ .version | gsub(\"-\"; \"~\") }}\n{{ if .date or .githash then ( -}}\n# {{ [ .date // empty, \"https://github.com/mongodb/mongo/tree/\" + .githash // empty ] | join(\", \") }}\n{{ ) else \"\" end -}}\n\nRUN set -x \\\n# installing \"mongodb-enterprise\" pulls in \"tzdata\" which prompts for input\n\t&& export DEBIAN_FRONTEND=noninteractive \\\n\t&& apt-get update \\\n\t&& apt-get install -y \\\n\t\t${MONGO_PACKAGE}=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-server=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-shell=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-mongos=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-tools=$MONGO_VERSION \\\n{{ if (env.rcVersion | tonumber >= 6) then ( -}}\n{{ # TODO: auto update this list of packages or just pin them -}}\n\t\t${MONGO_PACKAGE}-database=$MONGO_VERSION \\\n\t\t${MONGO_PACKAGE}-database-tools-extra=$MONGO_VERSION \\\n{{ ) else \"\" end -}}\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -rf /var/lib/mongodb \\\n\t&& mv /etc/mongod.conf /etc/mongod.conf.orig\n\nVOLUME /data/db /data/configdb\n\n# ensure that if running as custom user that \"mongosh\" has a valid \"HOME\"\n# https://github.com/docker-library/mongo/issues/524\nENV HOME /data/db\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 27017\nCMD [\"mongod\"]\n"
        },
        {
          "name": "Dockerfile-windows.template",
          "type": "blob",
          "size": 3.4169921875,
          "content": "{{\n\tdef has_client:\n\t\t.targets.windows.features | index(\"Client\")\n-}}\nFROM mcr.microsoft.com/windows/{{ env.windowsVariant }}:{{ env.windowsRelease }}\n\n{{ if env.windowsVariant == \"servercore\" then ( -}}\nSHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop';\"]\n\n{{ if .notes then ( -}}\n# {{ .notes }}\n{{ ) else \"\" end -}}\nENV MONGO_VERSION {{ .version }}\n{{ if .date or .githash then ( -}}\n# {{ [ .date // empty, \"https://github.com/mongodb/mongo/tree/\" + .githash // empty ] | join(\", \") }}\n{{ ) else \"\" end -}}\n\nENV MONGO_DOWNLOAD_URL {{ .targets.windows.msi }}\nENV MONGO_DOWNLOAD_SHA256={{ .targets.windows.sha256 }}\n\nRUN Write-Host ('Downloading {0} ...' -f $env:MONGO_DOWNLOAD_URL); \\\n\t[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \\\n\t(New-Object System.Net.WebClient).DownloadFile($env:MONGO_DOWNLOAD_URL, 'mongo.msi'); \\\n\t\\\n\tif ($env:MONGO_DOWNLOAD_SHA256) { \\\n\t\tWrite-Host ('Verifying sha256 ({0}) ...' -f $env:MONGO_DOWNLOAD_SHA256); \\\n\t\tif ((Get-FileHash mongo.msi -Algorithm sha256).Hash -ne $env:MONGO_DOWNLOAD_SHA256) { \\\n\t\t\tWrite-Host 'FAILED!'; \\\n\t\t\texit 1; \\\n\t\t}; \\\n\t}; \\\n\t\\\n\tWrite-Host 'Installing ...'; \\\n# https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/#install-mongodb-community-edition\n\tStart-Process msiexec -Wait \\\n\t\t-ArgumentList @( \\\n\t\t\t'/i', \\\n\t\t\t'mongo.msi', \\\n\t\t\t'/quiet', \\\n\t\t\t'/qn', \\\n\t\t\t'/l*v', 'install.log', \\\n# https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows-unattended/#run-the-windows-installer-from-the-windows-command-interpreter\n\t\t\t'INSTALLLOCATION=C:\\mongodb', \\\n\t\t\t'ADDLOCAL={{ .targets.windows.features | join(\",\") }}' \\\n\t\t); \\\n\tif (-Not (Test-Path C:\\mongodb\\bin\\mongod.exe -PathType Leaf)) { \\\n\t\tWrite-Host 'Installer failed!'; \\\n\t\tGet-Content install.log; \\\n\t\texit 1; \\\n\t}; \\\n\tRemove-Item install.log; \\\n\t\\\n\t$env:PATH = 'C:\\mongodb\\bin;' + $env:PATH; \\\n\t[Environment]::SetEnvironmentVariable('PATH', $env:PATH, [EnvironmentVariableTarget]::Machine); \\\n\t\\\n\tWrite-Host 'Verifying install ...'; \\\n{{ if has_client then ( -}}\n\tWrite-Host '  mongo --version'; mongo --version; \\\n{{ ) else \"\" end -}}\n\tWrite-Host '  mongod --version'; mongod --version; \\\n\t\\\n\tWrite-Host 'Removing ...'; \\\n\tRemove-Item C:\\windows\\installer\\*.msi -Force; \\\n\tRemove-Item mongo.msi -Force; \\\n\t\\\n\tWrite-Host 'Complete.';\n\n# TODO docker-entrypoint.ps1 ? (for \"docker run <image> --flag --flag --flag\")\n{{ ) else ( -}}\nSHELL [\"cmd\", \"/S\", \"/C\"]\n\n# PATH isn't actually set in the Docker image, so we have to set it from within the container\nUSER ContainerAdministrator\nRUN setx /m PATH \"C:\\mongodb\\bin;%PATH%\"\nUSER ContainerUser\n# doing this first to share cache across versions more aggressively\n\n{{ def copy_from: \"mongo:\" + .version + \"-windowsservercore-\" + env.windowsRelease -}}\nCOPY --from={{ copy_from }} \\\n\tC:\\\\Windows\\\\System32\\\\msvcp140.dll \\\n\tC:\\\\Windows\\\\System32\\\\msvcp140_1.dll \\\n\tC:\\\\Windows\\\\System32\\\\vcruntime140.dll \\\n\tC:\\\\Windows\\\\System32\\\\vcruntime140_1.dll \\\n\tC:\\\\Windows\\\\System32\\\\\n\n{{ if .notes then ( -}}\n# {{ .notes }}\n{{ ) else \"\" end -}}\nENV MONGO_VERSION {{ .version }}\n{{ if .date or .githash then ( -}}\n# {{ [ .date // empty, \"https://github.com/mongodb/mongo/tree/\" + .githash // empty ] | join(\", \") }}\n{{ ) else \"\" end -}}\n\nCOPY --from={{ copy_from }} C:\\\\mongodb C:\\\\mongodb\nRUN {{ if has_client then ( }}mongo --version && {{ ) else \"\" end }}mongod --version\n{{ ) end -}}\n\nVOLUME C:\\\\data\\\\db C:\\\\data\\\\configdb\n\nEXPOSE 27017\nCMD [\"mongod\", \"--bind_ip_all\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.2470703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\nAPACHE HTTP SERVER SUBCOMPONENTS: \n\nThe Apache HTTP Server includes a number of subcomponents with\nseparate copyright notices and license terms. Your use of the source\ncode for the these subcomponents is subject to the terms and\nconditions of the following licenses. \n\nFor the mod_mime_magic component:\n\n/*\n * mod_mime_magic: MIME type lookup via file magic numbers\n * Copyright (c) 1996-1997 Cisco Systems, Inc.\n *\n * This software was submitted by Cisco Systems to the Apache Group in July\n * 1997.  Future revisions and derivatives of this source code must\n * acknowledge Cisco Systems as the original contributor of this module.\n * All other licensing and usage conditions are those of the Apache Group.\n *\n * Some of this code is derived from the free version of the file command\n * originally posted to comp.sources.unix.  Copyright info for that program\n * is included below as required.\n * ---------------------------------------------------------------------------\n * - Copyright (c) Ian F. Darwin, 1987. Written by Ian F. Darwin.\n *\n * This software is not subject to any license of the American Telephone and\n * Telegraph Company or of the Regents of the University of California.\n *\n * Permission is granted to anyone to use this software for any purpose on any\n * computer system, and to alter it and redistribute it freely, subject to\n * the following restrictions:\n *\n * 1. The author is not responsible for the consequences of use of this\n * software, no matter how awful, even if they arise from flaws in it.\n *\n * 2. The origin of this software must not be misrepresented, either by\n * explicit claim or by omission.  Since few users ever read sources, credits\n * must appear in the documentation.\n *\n * 3. Altered versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.  Since few users ever read\n * sources, credits must appear in the documentation.\n *\n * 4. This notice may not be removed or altered.\n * -------------------------------------------------------------------------\n *\n */\n\n\nFor the  modules\\mappers\\mod_imagemap.c component:\n\n  \"macmartinized\" polygon code copyright 1992 by Eric Haines, erich@eye.com\n\nFor the  server\\util_md5.c component:\n\n/************************************************************************\n * NCSA HTTPd Server\n * Software Development Group\n * National Center for Supercomputing Applications\n * University of Illinois at Urbana-Champaign\n * 605 E. Springfield, Champaign, IL 61820\n * httpd@ncsa.uiuc.edu\n *\n * Copyright  (C)  1995, Board of Trustees of the University of Illinois\n *\n ************************************************************************\n *\n * md5.c: NCSA HTTPd code which uses the md5c.c RSA Code\n *\n *  Original Code Copyright (C) 1994, Jeff Hostetler, Spyglass, Inc.\n *  Portions of Content-MD5 code Copyright (C) 1993, 1994 by Carnegie Mellon\n *     University (see Copyright below).\n *  Portions of Content-MD5 code Copyright (C) 1991 Bell Communications \n *     Research, Inc. (Bellcore) (see Copyright below).\n *  Portions extracted from mpack, John G. Myers - jgm+@cmu.edu\n *  Content-MD5 Code contributed by Martin Hamilton (martin@net.lut.ac.uk)\n *\n */\n\n\n/* these portions extracted from mpack, John G. Myers - jgm+@cmu.edu */\n/* (C) Copyright 1993,1994 by Carnegie Mellon University\n * All Rights Reserved.\n *\n * Permission to use, copy, modify, distribute, and sell this software\n * and its documentation for any purpose is hereby granted without\n * fee, provided that the above copyright notice appear in all copies\n * and that both that copyright notice and this permission notice\n * appear in supporting documentation, and that the name of Carnegie\n * Mellon University not be used in advertising or publicity\n * pertaining to distribution of the software without specific,\n * written prior permission.  Carnegie Mellon University makes no\n * representations about the suitability of this software for any\n * purpose.  It is provided \"as is\" without express or implied\n * warranty.\n *\n * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO\n * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE\n * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\n * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING\n * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n * SOFTWARE.\n */\n\n/*\n * Copyright (c) 1991 Bell Communications Research, Inc. (Bellcore)\n *\n * Permission to use, copy, modify, and distribute this material\n * for any purpose and without fee is hereby granted, provided\n * that the above copyright notice and this permission notice\n * appear in all copies, and that the name of Bellcore not be\n * used in advertising or publicity pertaining to this\n * material without the specific, prior written permission\n * of an authorized representative of Bellcore.  BELLCORE\n * MAKES NO REPRESENTATIONS ABOUT THE ACCURACY OR SUITABILITY\n * OF THIS MATERIAL FOR ANY PURPOSE.  IT IS PROVIDED \"AS IS\",\n * WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.  \n */\n\nFor the  srclib\\apr\\include\\apr_md5.h component: \n/*\n * This is work is derived from material Copyright RSA Data Security, Inc.\n *\n * The RSA copyright statement and Licence for that original material is\n * included below. This is followed by the Apache copyright statement and\n * licence for the modifications made to that material.\n */\n\n/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n   rights reserved.\n\n   License to copy and use this software is granted provided that it\n   is identified as the \"RSA Data Security, Inc. MD5 Message-Digest\n   Algorithm\" in all material mentioning or referencing this software\n   or this function.\n\n   License is also granted to make and use derivative works provided\n   that such works are identified as \"derived from the RSA Data\n   Security, Inc. MD5 Message-Digest Algorithm\" in all material\n   mentioning or referencing the derived work.\n\n   RSA Data Security, Inc. makes no representations concerning either\n   the merchantability of this software or the suitability of this\n   software for any particular purpose. It is provided \"as is\"\n   without express or implied warranty of any kind.\n\n   These notices must be retained in any copies of any part of this\n   documentation and/or software.\n */\n\nFor the  srclib\\apr\\passwd\\apr_md5.c component:\n\n/*\n * This is work is derived from material Copyright RSA Data Security, Inc.\n *\n * The RSA copyright statement and Licence for that original material is\n * included below. This is followed by the Apache copyright statement and\n * licence for the modifications made to that material.\n */\n\n/* MD5C.C - RSA Data Security, Inc., MD5 message-digest algorithm\n */\n\n/* Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n   rights reserved.\n\n   License to copy and use this software is granted provided that it\n   is identified as the \"RSA Data Security, Inc. MD5 Message-Digest\n   Algorithm\" in all material mentioning or referencing this software\n   or this function.\n\n   License is also granted to make and use derivative works provided\n   that such works are identified as \"derived from the RSA Data\n   Security, Inc. MD5 Message-Digest Algorithm\" in all material\n   mentioning or referencing the derived work.\n\n   RSA Data Security, Inc. makes no representations concerning either\n   the merchantability of this software or the suitability of this\n   software for any particular purpose. It is provided \"as is\"\n   without express or implied warranty of any kind.\n\n   These notices must be retained in any copies of any part of this\n   documentation and/or software.\n */\n/*\n * The apr_md5_encode() routine uses much code obtained from the FreeBSD 3.0\n * MD5 crypt() function, which is licenced as follows:\n * ----------------------------------------------------------------------------\n * \"THE BEER-WARE LICENSE\" (Revision 42):\n * <phk@login.dknet.dk> wrote this file.  As long as you retain this notice you\n * can do whatever you want with this stuff. If we meet some day, and you think\n * this stuff is worth it, you can buy me a beer in return.  Poul-Henning Kamp\n * ----------------------------------------------------------------------------\n */\n\nFor the srclib\\apr-util\\crypto\\apr_md4.c component:\n\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n * rights reserved.\n *\n * License to copy and use this software is granted provided that it\n * is identified as the \"RSA Data Security, Inc. MD4 Message-Digest\n * Algorithm\" in all material mentioning or referencing this software\n * or this function.\n *\n * License is also granted to make and use derivative works provided\n * that such works are identified as \"derived from the RSA Data\n * Security, Inc. MD4 Message-Digest Algorithm\" in all material\n * mentioning or referencing the derived work.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\nFor the srclib\\apr-util\\include\\apr_md4.h component:\n\n *\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All\n * rights reserved.\n *\n * License to copy and use this software is granted provided that it\n * is identified as the \"RSA Data Security, Inc. MD4 Message-Digest\n * Algorithm\" in all material mentioning or referencing this software\n * or this function.\n *\n * License is also granted to make and use derivative works provided\n * that such works are identified as \"derived from the RSA Data\n * Security, Inc. MD4 Message-Digest Algorithm\" in all material\n * mentioning or referencing the derived work.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\n\nFor the srclib\\apr-util\\test\\testmd4.c component:\n\n *\n * This is derived from material copyright RSA Data Security, Inc.\n * Their notice is reproduced below in its entirety.\n *\n * Copyright (C) 1990-2, RSA Data Security, Inc. Created 1990. All\n * rights reserved.\n *\n * RSA Data Security, Inc. makes no representations concerning either\n * the merchantability of this software or the suitability of this\n * software for any particular purpose. It is provided \"as is\"\n * without express or implied warranty of any kind.\n *\n * These notices must be retained in any copies of any part of this\n * documentation and/or software.\n */\n\nFor the srclib\\apr-util\\xml\\expat\\conftools\\install-sh component:\n\n#\n# install - install a program, script, or datafile\n# This comes from X11R5 (mit/util/scripts/install.sh).\n#\n# Copyright 1991 by the Massachusetts Institute of Technology\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n# the above copyright notice appear in all copies and that both that\n# copyright notice and this permission notice appear in supporting\n# documentation, and that the name of M.I.T. not be used in advertising or\n# publicity pertaining to distribution of the software without specific,\n# written prior permission.  M.I.T. makes no representations about the\n# suitability of this software for any purpose.  It is provided \"as is\"\n# without express or implied warranty.\n#\n\nFor the test\\zb.c component:\n\n/*                          ZeusBench V1.01\n\t\t\t    ===============\n\nThis program is Copyright (C) Zeus Technology Limited 1996.\n\nThis program may be used and copied freely providing this copyright notice\nis not removed.\n\nThis software is provided \"as is\" and any express or implied waranties, \nincluding but not limited to, the implied warranties of merchantability and\nfitness for a particular purpose are disclaimed.  In no event shall \nZeus Technology Ltd. be liable for any direct, indirect, incidental, special, \nexemplary, or consequential damaged (including, but not limited to, \nprocurement of substitute good or services; loss of use, data, or profits;\nor business interruption) however caused and on theory of liability.  Whether\nin contract, strict liability or tort (including negligence or otherwise) \narising in any way out of the use of this software, even if advised of the\npossibility of such damage.\n\n     Written by Adam Twiss (adam@zeus.co.uk).  March 1996\n\nThanks to the following people for their input:\n  Mike Belshe (mbelshe@netscape.com) \n  Michael Campanella (campanella@stevms.enet.dec.com)\n\n*/\n\nFor the expat xml parser component:\n\nCopyright (c) 1998, 1999, 2000 Thai Open Source Software Center Ltd\n                               and Clark Cooper\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\t\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\t\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n====================================================================\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.615234375,
          "content": "# https://github.com/docker-library/mongo\n\n## Maintained by: [the Docker Community](https://github.com/docker-library/mongo)\n\nThis is the Git repo of the [Docker \"Official Image\"](https://github.com/docker-library/official-images#what-are-official-images) for [`mongo`](https://hub.docker.com/_/mongo/) (not to be confused with any official `mongo` image provided by `mongo` upstream). See [the Docker Hub page](https://hub.docker.com/_/mongo/) for the full readme on how to use this Docker image and for information regarding contributing and issues.\n\nThe [full image description on Docker Hub](https://hub.docker.com/_/mongo/) is generated/maintained over in [the docker-library/docs repository](https://github.com/docker-library/docs), specifically in [the `mongo` directory](https://github.com/docker-library/docs/tree/master/mongo).\n\n## See a change merged here that doesn't show up on Docker Hub yet?\n\nFor more information about the full official images change lifecycle, see [the \"An image's source changed in Git, now what?\" FAQ entry](https://github.com/docker-library/faq#an-images-source-changed-in-git-now-what).\n\nFor outstanding `mongo` image PRs, check [PRs with the \"library/mongo\" label on the official-images repository](https://github.com/docker-library/official-images/labels/library%2Fmongo). For the current \"source of truth\" for [`mongo`](https://hub.docker.com/_/mongo/), see [the `library/mongo` file in the official-images repository](https://github.com/docker-library/official-images/blob/master/library/mongo).\n\n<!-- THIS FILE IS GENERATED BY https://github.com/docker-library/docs/blob/master/generate-repo-stub-readme.sh -->\n"
        },
        {
          "name": "apply-templates.sh",
          "type": "blob",
          "size": 1.6875,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\n[ -f versions.json ] # run \"versions.sh\" first\n\njqt='.jq-template.awk'\nif [ -n \"${BASHBREW_SCRIPTS:-}\" ]; then\n\tjqt=\"$BASHBREW_SCRIPTS/jq-template.awk\"\nelif [ \"$BASH_SOURCE\" -nt \"$jqt\" ]; then\n\t# https://github.com/docker-library/bashbrew/blob/master/scripts/jq-template.awk\n\twget -qO \"$jqt\" 'https://github.com/docker-library/bashbrew/raw/9f6a35772ac863a0241f147c820354e4008edf38/scripts/jq-template.awk'\nfi\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'keys | map(@sh) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\ngenerated_warning() {\n\tcat <<-EOH\n\t\t#\n\t\t# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n\t\t#\n\t\t# PLEASE DO NOT EDIT IT DIRECTLY.\n\t\t#\n\n\tEOH\n}\n\nfor version; do\n\trcVersion=\"${version%-rc}\"\n\texport version rcVersion\n\n\trm -rf \"$version\"\n\n\tif jq -e '.[env.version] | not' versions.json > /dev/null; then\n\t\techo \"skipping $version ...\"\n\t\tcontinue\n\tfi\n\n\techo \"processing $version ...\"\n\n\tmkdir -p \"$version\"\n\t{\n\t\tgenerated_warning\n\t\tgawk -f \"$jqt\" Dockerfile-linux.template\n\t} > \"$version/Dockerfile\"\n\n\tcp -a docker-entrypoint.sh \"$version/\"\n\n\tvariants=\"$(jq -r '.[env.version].targets.windows.variants | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\tfor variant in \"${variants[@]}\"; do\n\t\twindowsVariant=\"${variant%%-*}\" # \"windowsservercore\", \"nanoserver\"\n\t\twindowsRelease=\"${variant#$windowsVariant-}\" # \"ltsc2022\", \"1809\", etc\n\t\twindowsVariant=\"${windowsVariant#windows}\" # \"servercore\", \"nanoserver\"\n\t\texport windowsVariant windowsRelease\n\n\t\tdir=\"$version/windows/$variant\"\n\t\techo \"processing $dir ...\"\n\n\t\tmkdir -p \"$dir\"\n\t\t{\n\t\t\tgenerated_warning\n\t\t\tgawk -f \"$jqt\" Dockerfile-windows.template\n\t\t} > \"$dir/Dockerfile\"\n\tdone\ndone\n"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 13.8408203125,
          "content": "#!/bin/bash\nset -Eeuo pipefail\n\nif [ \"${1:0:1}\" = '-' ]; then\n\tset -- mongod \"$@\"\nfi\n\noriginalArgOne=\"$1\"\n\n# allow the container to be started with `--user`\n# all mongo* commands should be dropped to the correct user\nif [[ \"$originalArgOne\" == mongo* ]] && [ \"$(id -u)\" = '0' ]; then\n\tif [ \"$originalArgOne\" = 'mongod' ]; then\n\t\tfind /data/configdb /data/db \\! -user mongodb -exec chown mongodb '{}' +\n\tfi\n\n\t# make sure we can write to stdout and stderr as \"mongodb\"\n\t# (for our \"initdb\" code later; see \"--logpath\" below)\n\tchown --dereference mongodb \"/proc/$$/fd/1\" \"/proc/$$/fd/2\" || :\n\t# ignore errors thanks to https://github.com/docker-library/mongo/issues/149\n\n\texec gosu mongodb \"$BASH_SOURCE\" \"$@\"\nfi\n\ndpkgArch=\"$(dpkg --print-architecture)\"\ncase \"$dpkgArch\" in\n\tamd64) # https://github.com/docker-library/mongo/issues/485#issuecomment-891991814\n\t\tif ! grep -qE '^flags.* avx( .*|$)' /proc/cpuinfo; then\n\t\t\t{\n\t\t\t\techo\n\t\t\t\techo 'WARNING: MongoDB 5.0+ requires a CPU with AVX support, and your current system does not appear to have that!'\n\t\t\t\techo '  see https://jira.mongodb.org/browse/SERVER-54407'\n\t\t\t\techo '  see also https://www.mongodb.com/community/forums/t/mongodb-5-0-cpu-intel-g4650-compatibility/116610/2'\n\t\t\t\techo '  see also https://github.com/docker-library/mongo/issues/485#issuecomment-891991814'\n\t\t\t\techo\n\t\t\t} >&2\n\t\tfi\n\t\t;;\n\n\tarm64) # https://github.com/docker-library/mongo/issues/485#issuecomment-970864306\n\t\t# https://en.wikichip.org/wiki/arm/armv8#ARMv8_Extensions_and_Processor_Features\n\t\t# http://javathunderx.blogspot.com/2018/11/cheat-sheet-for-cpuinfo-features-on.html\n\t\tif ! grep -qE '^Features.* (fphp|dcpop|sha3|sm3|sm4|asimddp|sha512|sve)( .*|$)' /proc/cpuinfo; then\n\t\t\t{\n\t\t\t\techo\n\t\t\t\techo 'WARNING: MongoDB requires ARMv8.2-A or higher, and your current system does not appear to implement any of the common features for that!'\n\t\t\t\techo '  applies to all versions ≥5.0, any of 4.4 ≥4.4.19'\n\t\t\t\techo '  see https://jira.mongodb.org/browse/SERVER-71772'\n\t\t\t\techo '  see https://jira.mongodb.org/browse/SERVER-55178'\n\t\t\t\techo '  see also https://en.wikichip.org/wiki/arm/armv8#ARMv8_Extensions_and_Processor_Features'\n\t\t\t\techo '  see also https://github.com/docker-library/mongo/issues/485#issuecomment-970864306'\n\t\t\t\techo\n\t\t\t} >&2\n\t\tfi\n\t\t;;\nesac\n\n# you should use numactl to start your mongod instances, including the config servers, mongos instances, and any clients.\n# https://docs.mongodb.com/manual/administration/production-notes/#configuring-numa-on-linux\nif [[ \"$originalArgOne\" == mongo* ]]; then\n\tnuma='numactl --interleave=all'\n\tif $numa true &> /dev/null; then\n\t\tset -- $numa \"$@\"\n\tfi\nfi\n\n# usage: file_env VAR [DEFAULT]\n#    ie: file_env 'XYZ_DB_PASSWORD' 'example'\n# (will allow for \"$XYZ_DB_PASSWORD_FILE\" to fill in the value of\n#  \"$XYZ_DB_PASSWORD\" from a file, especially for Docker's secrets feature)\nfile_env() {\n\tlocal var=\"$1\"\n\tlocal fileVar=\"${var}_FILE\"\n\tlocal def=\"${2:-}\"\n\tif [ \"${!var:-}\" ] && [ \"${!fileVar:-}\" ]; then\n\t\techo >&2 \"error: both $var and $fileVar are set (but are exclusive)\"\n\t\texit 1\n\tfi\n\tlocal val=\"$def\"\n\tif [ \"${!var:-}\" ]; then\n\t\tval=\"${!var}\"\n\telif [ \"${!fileVar:-}\" ]; then\n\t\tval=\"$(< \"${!fileVar}\")\"\n\tfi\n\texport \"$var\"=\"$val\"\n\tunset \"$fileVar\"\n}\n\n# see https://github.com/docker-library/mongo/issues/147 (mongod is picky about duplicated arguments)\n_mongod_hack_have_arg() {\n\tlocal checkArg=\"$1\"; shift\n\tlocal arg\n\tfor arg; do\n\t\tcase \"$arg\" in\n\t\t\t\"$checkArg\"|\"$checkArg\"=*)\n\t\t\t\treturn 0\n\t\t\t\t;;\n\t\tesac\n\tdone\n\treturn 1\n}\n# _mongod_hack_get_arg_val '--some-arg' \"$@\"\n_mongod_hack_get_arg_val() {\n\tlocal checkArg=\"$1\"; shift\n\twhile [ \"$#\" -gt 0 ]; do\n\t\tlocal arg=\"$1\"; shift\n\t\tcase \"$arg\" in\n\t\t\t\"$checkArg\")\n\t\t\t\techo \"$1\"\n\t\t\t\treturn 0\n\t\t\t\t;;\n\t\t\t\"$checkArg\"=*)\n\t\t\t\techo \"${arg#$checkArg=}\"\n\t\t\t\treturn 0\n\t\t\t\t;;\n\t\tesac\n\tdone\n\treturn 1\n}\ndeclare -a mongodHackedArgs\n# _mongod_hack_ensure_arg '--some-arg' \"$@\"\n# set -- \"${mongodHackedArgs[@]}\"\n_mongod_hack_ensure_arg() {\n\tlocal ensureArg=\"$1\"; shift\n\tmongodHackedArgs=( \"$@\" )\n\tif ! _mongod_hack_have_arg \"$ensureArg\" \"$@\"; then\n\t\tmongodHackedArgs+=( \"$ensureArg\" )\n\tfi\n}\n# _mongod_hack_ensure_no_arg '--some-unwanted-arg' \"$@\"\n# set -- \"${mongodHackedArgs[@]}\"\n_mongod_hack_ensure_no_arg() {\n\tlocal ensureNoArg=\"$1\"; shift\n\tmongodHackedArgs=()\n\twhile [ \"$#\" -gt 0 ]; do\n\t\tlocal arg=\"$1\"; shift\n\t\tif [ \"$arg\" = \"$ensureNoArg\" ]; then\n\t\t\tcontinue\n\t\tfi\n\t\tmongodHackedArgs+=( \"$arg\" )\n\tdone\n}\n# _mongod_hack_ensure_no_arg '--some-unwanted-arg' \"$@\"\n# set -- \"${mongodHackedArgs[@]}\"\n_mongod_hack_ensure_no_arg_val() {\n\tlocal ensureNoArg=\"$1\"; shift\n\tmongodHackedArgs=()\n\twhile [ \"$#\" -gt 0 ]; do\n\t\tlocal arg=\"$1\"; shift\n\t\tcase \"$arg\" in\n\t\t\t\"$ensureNoArg\")\n\t\t\t\tshift # also skip the value\n\t\t\t\tcontinue\n\t\t\t\t;;\n\t\t\t\"$ensureNoArg\"=*)\n\t\t\t\t# value is already included\n\t\t\t\tcontinue\n\t\t\t\t;;\n\t\tesac\n\t\tmongodHackedArgs+=( \"$arg\" )\n\tdone\n}\n# _mongod_hack_ensure_arg_val '--some-arg' 'some-val' \"$@\"\n# set -- \"${mongodHackedArgs[@]}\"\n_mongod_hack_ensure_arg_val() {\n\tlocal ensureArg=\"$1\"; shift\n\tlocal ensureVal=\"$1\"; shift\n\t_mongod_hack_ensure_no_arg_val \"$ensureArg\" \"$@\"\n\tmongodHackedArgs+=( \"$ensureArg\" \"$ensureVal\" )\n}\n\n# _js_escape 'some \"string\" value'\n_js_escape() {\n\tjq --null-input --arg 'str' \"$1\" '$str'\n}\n\n: \"${TMPDIR:=/tmp}\"\njsonConfigFile=\"$TMPDIR/docker-entrypoint-config.json\"\ntempConfigFile=\"$TMPDIR/docker-entrypoint-temp-config.json\"\n_parse_config() {\n\tif [ -s \"$tempConfigFile\" ]; then\n\t\treturn 0\n\tfi\n\n\tlocal configPath\n\tif configPath=\"$(_mongod_hack_get_arg_val --config \"$@\")\" && [ -s \"$configPath\" ]; then\n\t\t# if --config is specified, parse it into a JSON file so we can remove a few problematic keys (especially SSL-related keys)\n\t\t# see https://docs.mongodb.com/manual/reference/configuration-options/\n\t\tif grep -vEm1 '^[[:space:]]*(#|$)' \"$configPath\" | grep -qE '^[[:space:]]*[^=:]+[[:space:]]*='; then\n\t\t\t# if the first non-comment/non-blank line of the config file looks like \"foo = ...\", this is probably the 2.4 and older \"ini-style config format\"\n\t\t\t# mongod tries to parse config as yaml and then falls back to ini-style parsing\n\t\t\t# https://github.com/mongodb/mongo/blob/r6.0.3/src/mongo/util/options_parser/options_parser.cpp#L1883-L1894\n\t\t\techo >&2\n\t\t\techo >&2 \"WARNING: it appears that '$configPath' is in the older INI-style format (replaced by YAML in MongoDB 2.6)\"\n\t\t\techo >&2 '  This script does not parse the older INI-style format, and thus will ignore it.'\n\t\t\techo >&2\n\t\t\treturn 1\n\t\tfi\n\t\tif [ \"$mongoShell\" = 'mongo' ]; then\n\t\t\t\"$mongoShell\" --norc --nodb --quiet --eval \"load('/js-yaml.js'); printjson(jsyaml.load(cat($(_js_escape \"$configPath\"))))\" > \"$jsonConfigFile\"\n\t\telse\n\t\t\t# https://www.mongodb.com/docs/manual/reference/method/js-native/#std-label-native-in-mongosh\n\t\t\t\"$mongoShell\" --norc --nodb --quiet --eval \"load('/js-yaml.js'); JSON.stringify(jsyaml.load(fs.readFileSync($(_js_escape \"$configPath\"), 'utf8')))\" > \"$jsonConfigFile\"\n\t\tfi\n\t\tif [ \"$(head -c1 \"$jsonConfigFile\")\" != '{' ] || [ \"$(tail -c2 \"$jsonConfigFile\")\" != '}' ]; then\n\t\t\t# if the file doesn't start with \"{\" and end with \"}\", it's *probably* an error (\"uncaught exception: YAMLException: foo\" for example), so we should print it out\n\t\t\techo >&2 'error: unexpected \"js-yaml.js\" output while parsing config:'\n\t\t\tcat >&2 \"$jsonConfigFile\"\n\t\t\texit 1\n\t\tfi\n\t\tjq 'del(.systemLog, .processManagement, .net, .security, .replication)' \"$jsonConfigFile\" > \"$tempConfigFile\"\n\t\treturn 0\n\tfi\n\n\treturn 1\n}\ndbPath=\n_dbPath() {\n\tif [ -n \"$dbPath\" ]; then\n\t\techo \"$dbPath\"\n\t\treturn\n\tfi\n\n\tif ! dbPath=\"$(_mongod_hack_get_arg_val --dbpath \"$@\")\"; then\n\t\tif _parse_config \"$@\"; then\n\t\t\tdbPath=\"$(jq -r '.storage.dbPath // empty' \"$jsonConfigFile\")\"\n\t\tfi\n\tfi\n\n\tif [ -z \"$dbPath\" ]; then\n\t\tif _mongod_hack_have_arg --configsvr \"$@\" || {\n\t\t\t_parse_config \"$@\" \\\n\t\t\t&& clusterRole=\"$(jq -r '.sharding.clusterRole // empty' \"$jsonConfigFile\")\" \\\n\t\t\t&& [ \"$clusterRole\" = 'configsvr' ]\n\t\t}; then\n\t\t\t# if running as config server, then the default dbpath is /data/configdb\n\t\t\t# https://docs.mongodb.com/manual/reference/program/mongod/#cmdoption-mongod-configsvr\n\t\t\tdbPath=/data/configdb\n\t\tfi\n\tfi\n\n\t: \"${dbPath:=/data/db}\"\n\n\techo \"$dbPath\"\n}\n\nif [ \"$originalArgOne\" = 'mongod' ]; then\n\tfile_env 'MONGO_INITDB_ROOT_USERNAME'\n\tfile_env 'MONGO_INITDB_ROOT_PASSWORD'\n\n\tmongoShell='mongo'\n\tif ! command -v \"$mongoShell\" > /dev/null; then\n\t\tmongoShell='mongosh'\n\tfi\n\n\t# pre-check a few factors to see if it's even worth bothering with initdb\n\tshouldPerformInitdb=\n\tif [ \"$MONGO_INITDB_ROOT_USERNAME\" ] && [ \"$MONGO_INITDB_ROOT_PASSWORD\" ]; then\n\t\t# if we have a username/password, let's set \"--auth\"\n\t\t_mongod_hack_ensure_arg '--auth' \"$@\"\n\t\tset -- \"${mongodHackedArgs[@]}\"\n\t\tshouldPerformInitdb='true'\n\telif [ \"$MONGO_INITDB_ROOT_USERNAME\" ] || [ \"$MONGO_INITDB_ROOT_PASSWORD\" ]; then\n\t\tcat >&2 <<-'EOF'\n\n\t\t\terror: missing 'MONGO_INITDB_ROOT_USERNAME' or 'MONGO_INITDB_ROOT_PASSWORD'\n\t\t\t       both must be specified for a user to be created\n\n\t\tEOF\n\t\texit 1\n\tfi\n\n\tif [ -z \"$shouldPerformInitdb\" ]; then\n\t\t# if we've got any /docker-entrypoint-initdb.d/* files to parse later, we should initdb\n\t\tfor f in /docker-entrypoint-initdb.d/*; do\n\t\t\tcase \"$f\" in\n\t\t\t\t*.sh|*.js) # this should match the set of files we check for below\n\t\t\t\t\tshouldPerformInitdb=\"$f\"\n\t\t\t\t\tbreak\n\t\t\t\t\t;;\n\t\t\tesac\n\t\tdone\n\tfi\n\n\t# check for a few known paths (to determine whether we've already initialized and should thus skip our initdb scripts)\n\tif [ -n \"$shouldPerformInitdb\" ]; then\n\t\tdbPath=\"$(_dbPath \"$@\")\"\n\t\tfor path in \\\n\t\t\t\"$dbPath/WiredTiger\" \\\n\t\t\t\"$dbPath/journal\" \\\n\t\t\t\"$dbPath/local.0\" \\\n\t\t\t\"$dbPath/storage.bson\" \\\n\t\t; do\n\t\t\tif [ -e \"$path\" ]; then\n\t\t\t\tshouldPerformInitdb=\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\tfi\n\n\tif [ -n \"$shouldPerformInitdb\" ]; then\n\t\tmongodHackedArgs=( \"$@\" )\n\t\tif _parse_config \"$@\"; then\n\t\t\t_mongod_hack_ensure_arg_val --config \"$tempConfigFile\" \"${mongodHackedArgs[@]}\"\n\t\tfi\n\t\t_mongod_hack_ensure_arg_val --bind_ip 127.0.0.1 \"${mongodHackedArgs[@]}\"\n\t\t_mongod_hack_ensure_arg_val --port 27017 \"${mongodHackedArgs[@]}\"\n\t\t_mongod_hack_ensure_no_arg --bind_ip_all \"${mongodHackedArgs[@]}\"\n\n\t\t# remove \"--auth\" and \"--replSet\" for our initial startup (see https://docs.mongodb.com/manual/tutorial/enable-authentication/#start-mongodb-without-access-control)\n\t\t# https://github.com/docker-library/mongo/issues/211\n\t\t_mongod_hack_ensure_no_arg --auth \"${mongodHackedArgs[@]}\"\n\t\t# \"keyFile implies security.authorization\"\n\t\t# https://docs.mongodb.com/manual/reference/configuration-options/#mongodb-setting-security.keyFile\n\t\t_mongod_hack_ensure_no_arg_val --keyFile \"${mongodHackedArgs[@]}\"\n\t\tif [ \"$MONGO_INITDB_ROOT_USERNAME\" ] && [ \"$MONGO_INITDB_ROOT_PASSWORD\" ]; then\n\t\t\t_mongod_hack_ensure_no_arg_val --replSet \"${mongodHackedArgs[@]}\"\n\t\tfi\n\n\t\t# \"BadValue: need sslPEMKeyFile when SSL is enabled\" vs \"BadValue: need to enable SSL via the sslMode flag when using SSL configuration parameters\"\n\t\ttlsMode='disabled'\n\t\tif _mongod_hack_have_arg '--tlsCertificateKeyFile' \"$@\"; then\n\t\t\ttlsMode='allowTLS'\n\t\tfi\n\t\t_mongod_hack_ensure_arg_val --tlsMode \"$tlsMode\" \"${mongodHackedArgs[@]}\"\n\n\t\tif stat \"/proc/$$/fd/1\" > /dev/null && [ -w \"/proc/$$/fd/1\" ]; then\n\t\t\t# https://github.com/mongodb/mongo/blob/38c0eb538d0fd390c6cb9ce9ae9894153f6e8ef5/src/mongo/db/initialize_server_global_state.cpp#L237-L251\n\t\t\t# https://github.com/docker-library/mongo/issues/164#issuecomment-293965668\n\t\t\t_mongod_hack_ensure_arg_val --logpath \"/proc/$$/fd/1\" \"${mongodHackedArgs[@]}\"\n\t\telse\n\t\t\tinitdbLogPath=\"$(_dbPath \"$@\")/docker-initdb.log\"\n\t\t\techo >&2 \"warning: initdb logs cannot write to '/proc/$$/fd/1', so they are in '$initdbLogPath' instead\"\n\t\t\t_mongod_hack_ensure_arg_val --logpath \"$initdbLogPath\" \"${mongodHackedArgs[@]}\"\n\t\tfi\n\t\t_mongod_hack_ensure_arg --logappend \"${mongodHackedArgs[@]}\"\n\n\t\tpidfile=\"$TMPDIR/docker-entrypoint-temp-mongod.pid\"\n\t\trm -f \"$pidfile\"\n\t\t_mongod_hack_ensure_arg_val --pidfilepath \"$pidfile\" \"${mongodHackedArgs[@]}\"\n\n\t\t\"${mongodHackedArgs[@]}\" --fork\n\n\t\tmongo=( \"$mongoShell\" --host 127.0.0.1 --port 27017 --quiet )\n\n\t\t# check to see that our \"mongod\" actually did start up (catches \"--help\", \"--version\", slow prealloc, etc)\n\t\t# https://jira.mongodb.org/browse/SERVER-16292\n\t\ttries=30\n\t\twhile true; do\n\t\t\tif ! { [ -s \"$pidfile\" ] && ps \"$(< \"$pidfile\")\" &> /dev/null; }; then\n\t\t\t\t# bail ASAP if \"mongod\" isn't even running\n\t\t\t\techo >&2\n\t\t\t\techo >&2 \"error: $originalArgOne does not appear to have stayed running -- perhaps it had an error?\"\n\t\t\t\techo >&2\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tif \"${mongo[@]}\" 'admin' --eval 'quit(0)' &> /dev/null; then\n\t\t\t\t# success!\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\t(( tries-- ))\n\t\t\tif [ \"$tries\" -le 0 ]; then\n\t\t\t\techo >&2\n\t\t\t\techo >&2 \"error: $originalArgOne does not appear to have accepted connections quickly enough -- perhaps it had an error?\"\n\t\t\t\techo >&2\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tsleep 1\n\t\tdone\n\n\t\tif [ \"$MONGO_INITDB_ROOT_USERNAME\" ] && [ \"$MONGO_INITDB_ROOT_PASSWORD\" ]; then\n\t\t\trootAuthDatabase='admin'\n\n\t\t\t\"${mongo[@]}\" \"$rootAuthDatabase\" <<-EOJS\n\t\t\t\tdb.createUser({\n\t\t\t\t\tuser: $(_js_escape \"$MONGO_INITDB_ROOT_USERNAME\"),\n\t\t\t\t\tpwd: $(_js_escape \"$MONGO_INITDB_ROOT_PASSWORD\"),\n\t\t\t\t\troles: [ { role: 'root', db: $(_js_escape \"$rootAuthDatabase\") } ]\n\t\t\t\t})\n\t\t\tEOJS\n\t\tfi\n\n\t\texport MONGO_INITDB_DATABASE=\"${MONGO_INITDB_DATABASE:-test}\"\n\n\t\techo\n\t\tfor f in /docker-entrypoint-initdb.d/*; do\n\t\t\tcase \"$f\" in\n\t\t\t\t*.sh) echo \"$0: running $f\"; . \"$f\" ;;\n\t\t\t\t*.js) echo \"$0: running $f\"; \"${mongo[@]}\" \"$MONGO_INITDB_DATABASE\" \"$f\"; echo ;;\n\t\t\t\t*)    echo \"$0: ignoring $f\" ;;\n\t\t\tesac\n\t\t\techo\n\t\tdone\n\n\t\t\"${mongodHackedArgs[@]}\" --shutdown\n\t\trm -f \"$pidfile\"\n\n\t\techo\n\t\techo 'MongoDB init process complete; ready for start up.'\n\t\techo\n\tfi\n\n\t# MongoDB defaults to localhost-only binding\n\thaveBindIp=\n\tif _mongod_hack_have_arg --bind_ip \"$@\" || _mongod_hack_have_arg --bind_ip_all \"$@\"; then\n\t\thaveBindIp=1\n\telif _parse_config \"$@\" && jq --exit-status '.net.bindIp // .net.bindIpAll' \"$jsonConfigFile\" > /dev/null; then\n\t\thaveBindIp=1\n\tfi\n\tif [ -z \"$haveBindIp\" ]; then\n\t\t# so if no \"--bind_ip\" is specified, let's add \"--bind_ip_all\"\n\t\tset -- \"$@\" --bind_ip_all\n\tfi\n\n\tunset \"${!MONGO_INITDB_@}\"\nfi\n\nrm -f \"$jsonConfigFile\" \"$tempConfigFile\"\n\nexec \"$@\"\n"
        },
        {
          "name": "generate-stackbrew-library.sh",
          "type": "blob",
          "size": 4.5498046875,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ndeclare -A aliases=(\n\t[8.0]='8 latest'\n\t[7.0]='7'\n\t[6.0]='6'\n\t[5.0]='5'\n)\n\nself=\"$(basename \"$BASH_SOURCE\")\"\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\nif [ \"$#\" -eq 0 ]; then\n\tversions=\"$(jq -r 'to_entries | map(if .value then .key | @sh else empty end) | join(\" \")' versions.json)\"\n\teval \"set -- $versions\"\nfi\n\n# sort version numbers with highest first\nIFS=$'\\n'; set -- $(sort -rV <<<\"$*\"); unset IFS\n\n# get the most recent commit which modified any of \"$@\"\nfileCommit() {\n\tgit log -1 --format='format:%H' HEAD -- \"$@\"\n}\n\n# get the most recent commit which modified \"$1/Dockerfile\" or any file COPY'd from \"$1/Dockerfile\"\ndirCommit() {\n\tlocal dir=\"$1\"; shift\n\t(\n\t\tcd \"$dir\"\n\t\tfileCommit \\\n\t\t\tDockerfile \\\n\t\t\t$(git show HEAD:./Dockerfile | awk '\n\t\t\t\ttoupper($1) == \"COPY\" {\n\t\t\t\t\tfor (i = 2; i < NF; i++) {\n\t\t\t\t\t\tprint $i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t')\n\t)\n}\n\ngetArches() {\n\tlocal repo=\"$1\"; shift\n\tlocal officialImagesBase=\"${BASHBREW_LIBRARY:-https://github.com/docker-library/official-images/raw/HEAD/library}/\"\n\n\tlocal parentRepoToArchesStr\n\tparentRepoToArchesStr=\"$(\n\t\tfind -name 'Dockerfile' -exec awk -v officialImagesBase=\"$officialImagesBase\" '\n\t\t\t\ttoupper($1) == \"FROM\" && $2 !~ /^('\"$repo\"'|scratch|.*\\/.*)(:|$)/ {\n\t\t\t\t\tprintf \"%s%s\\n\", officialImagesBase, $2\n\t\t\t\t}\n\t\t\t' '{}' + \\\n\t\t\t| sort -u \\\n\t\t\t| xargs -r bashbrew cat --format '[\"{{ .RepoName }}:{{ .TagName }}\"]=\"{{ join \" \" .TagEntry.Architectures }}\"'\n\t)\"\n\teval \"declare -g -A parentRepoToArches=( $parentRepoToArchesStr )\"\n}\ngetArches 'mongo'\n\ncat <<-EOH\n# this file is generated via https://github.com/docker-library/mongo/blob/$(fileCommit \"$self\")/$self\n\nMaintainers: Tianon Gravi <admwiggin@gmail.com> (@tianon),\n             Joseph Ferguson <yosifkit@gmail.com> (@yosifkit)\nGitRepo: https://github.com/docker-library/mongo.git\nEOH\n\n# prints \"$2$1$3$1...$N\"\njoin() {\n\tlocal sep=\"$1\"; shift\n\tlocal out; printf -v out \"${sep//%/%%}%s\" \"$@\"\n\techo \"${out#$sep}\"\n}\n\nfor version; do\n\trcVersion=\"${version%-rc}\"\n\texport version rcVersion\n\n\tif ! fullVersion=\"$(jq -er '.[env.version] | if . then .version else empty end' versions.json)\"; then\n\t\tcontinue\n\tfi\n\n\tif [ \"$rcVersion\" != \"$version\" ] && [ -e \"$rcVersion/Dockerfile\" ]; then\n\t\t# if this is a \"-rc\" release, let's make sure the release it contains isn't already GA (and thus something we should not publish anymore)\n\t\trcFullVersion=\"$(jq -r '.[env.rcVersion].version' versions.json)\"\n\t\tlatestVersion=\"$({ echo \"$fullVersion\"; echo \"$rcFullVersion\"; } | sort -V | tail -1)\"\n\t\tif [[ \"$fullVersion\" == \"$rcFullVersion\"* ]] || [ \"$latestVersion\" = \"$rcFullVersion\" ]; then\n\t\t\t# \"x.y.z-rc1\" == x.y.z*\n\t\t\tcontinue\n\t\tfi\n\tfi\n\n\tversionAliases=(\n\t\t$fullVersion\n\t\t$version\n\t\t${aliases[$version]:-}\n\t)\n\n\tvariants=\"$(jq -r '.[env.version].targets.windows.variants | [\"\"] + map(\"windows/\" + .) | map(@sh) | join(\" \")' versions.json)\"\n\teval \"variants=( $variants )\"\n\n\tfor v in \"${variants[@]}\"; do\n\t\tdir=\"$version${v:+/$v}\"\n\t\tcommit=\"$(dirCommit \"$dir\")\"\n\n\t\tif [ -z \"$v\" ]; then\n\t\t\tvariant=\"$(jq -r '.[env.version] | .targets[.linux].suite' versions.json)\" # \"bionic\", etc.\n\t\telse\n\t\t\tvariant=\"$(basename \"$v\")\" # windowsservercore-1809, etc.\n\t\tfi\n\n\t\tvariantAliases=( \"${versionAliases[@]/%/-$variant}\" )\n\t\tvariantAliases=( \"${variantAliases[@]//latest-/}\" )\n\n\t\tsharedTags=()\n\t\tfor windowsShared in windowsservercore nanoserver; do\n\t\t\tif [[ \"$variant\" == \"$windowsShared\"* ]]; then\n\t\t\t\tsharedTags=( \"${versionAliases[@]/%/-$windowsShared}\" )\n\t\t\t\tsharedTags=( \"${sharedTags[@]//latest-/}\" )\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [[ \"$variant\" == 'windowsservercore'* ]] || [ -z \"$v\" ]; then\n\t\t\tsharedTags+=( \"${versionAliases[@]}\" )\n\t\tfi\n\n\t\tcase \"$v\" in\n\t\t\twindows/*)\n\t\t\t\t# this is the really long way to say \"windows-amd64\"\n\t\t\t\tvariantArches=\"$(jq -r '.[env.version] | .targets.windows.arches | map(\"windows-\" + . | @sh) | join(\" \")' versions.json)\"\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tvariantArches=\"$(jq -r '.[env.version] | .targets[.linux].arches | map(@sh) | join(\" \")' versions.json)\"\n\t\t\t\t;;\n\t\tesac\n\t\teval \"variantArches=( $variantArches )\"\n\n\t\tconstraints=\n\t\tif [ -n \"$v\" ]; then\n\t\t\tconstraints=\"$variant\"\n\t\t\tif [[ \"$variant\" == nanoserver-* ]]; then\n\t\t\t\t# nanoserver variants \"COPY --from=...:...-windowsservercore-... ...\"\n\t\t\t\tconstraints+=\", windowsservercore-${variant#nanoserver-}\"\n\t\t\tfi\n\t\tfi\n\n\t\techo\n\t\techo \"Tags: $(join ', ' \"${variantAliases[@]}\")\"\n\t\tif [ \"${#sharedTags[@]}\" -gt 0 ]; then\n\t\t\techo \"SharedTags: $(join ', ' \"${sharedTags[@]}\")\"\n\t\tfi\n\t\tcat <<-EOE\n\t\t\tArchitectures: $(join ', ' \"${variantArches[@]}\")\n\t\t\tGitCommit: $commit\n\t\t\tDirectory: $dir\n\t\tEOE\n\t\t[ -z \"$constraints\" ] || echo \"Constraints: $constraints\"\n\tdone\ndone\n"
        },
        {
          "name": "pgp-keys.json",
          "type": "blob",
          "size": 1.1435546875,
          "content": "{\n  \"dev\": {\n    \"url\": \"https://pgp.mongodb.com/server-dev.asc\",\n    \"fingerprints\": [\n      \"28DE23AF08040FB24C33F36381B0EBBBADCEA95C\"\n    ]\n  },\n  \"8.0\": {\n    \"url\": \"https://pgp.mongodb.com/server-8.0.asc\",\n    \"fingerprints\": [\n      \"4B0752C1BCA238C0B4EE14DC41DE058A4E7DCA05\"\n    ]\n  },\n  \"7.0\": {\n    \"url\": \"https://pgp.mongodb.com/server-7.0.asc\",\n    \"fingerprints\": [\n      \"E58830201F7DD82CD808AA84160D26BB1785BA38\"\n    ]\n  },\n  \"6.0\": {\n    \"url\": \"https://pgp.mongodb.com/server-6.0.asc\",\n    \"fingerprints\": [\n      \"39BD841E4BE5FB195A65400E6A26B1AE64C3C388\"\n    ]\n  },\n  \"5.0\": {\n    \"url\": \"https://pgp.mongodb.com/server-5.0.asc\",\n    \"fingerprints\": [\n      \"F5679A222C647C87527C2F8CB00A0BD1E2C63C11\"\n    ]\n  },\n  \"4.4\": {\n    \"url\": \"https://pgp.mongodb.com/server-4.4.asc\",\n    \"fingerprints\": [\n      \"20691EEC35216C63CAF66CE1656408E390CFB1F5\"\n    ]\n  },\n  \"4.2\": {\n    \"url\": \"https://pgp.mongodb.com/server-4.2.asc\",\n    \"fingerprints\": [\n      \"E162F504A20CDF15827F718D4B7C549A058F8B6B\"\n    ]\n  },\n  \"4.0\": {\n    \"url\": \"https://pgp.mongodb.com/server-4.0.asc\",\n    \"fingerprints\": [\n      \"9DA31620334BD75D9DCB49F368818C72E52529D4\"\n    ]\n  }\n}\n"
        },
        {
          "name": "pgp-keys.sh",
          "type": "blob",
          "size": 0.77734375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\nversions=\"$(jq -r 'keys_unsorted | map(@sh) | join(\" \")' pgp-keys.json)\"\neval \"set -- $versions\"\n\njson='{}'\n\nfor version; do\n\turl=\"https://pgp.mongodb.com/server-$version.asc\"\n\texport version url\n\tfingerprints=\"$(\n\t\tdocker run --rm --env url buildpack-deps:bookworm-curl bash -Eeuo pipefail -xc '\n\t\t\twget -O key.asc \"$url\" >&2\n\t\t\tgpg --batch --import key.asc >&2\n\t\t\tgpg --batch --fingerprint --with-colons | grep \"^fpr:\" | cut -d: -f10\n\t\t'\n\t)\"\n\texport fingerprints\n\tjson=\"$(jq <<<\"$json\" -c '\n\t\t.[env.version] = {\n\t\t\turl: env.url,\n\t\t\tfingerprints: (\n\t\t\t\tenv.fingerprints\n\t\t\t\t| rtrimstr(\"\\n\")\n\t\t\t\t| split(\"\\n\")\n\t\t\t),\n\t\t}\n\t')\"\ndone\n\njq <<<\"$json\" '\n\tto_entries\n\t| sort_by(.key | split(\".\") | map(tonumber? // .))\n\t| reverse\n\t| from_entries\n' > pgp-keys.json\n"
        },
        {
          "name": "update.sh",
          "type": "blob",
          "size": 0.130859375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\ncd \"$(dirname \"$(readlink -f \"$BASH_SOURCE\")\")\"\n\n./versions.sh \"$@\"\n./apply-templates.sh \"$@\"\n"
        },
        {
          "name": "versions.json",
          "type": "blob",
          "size": 10.3125,
          "content": "{\n  \"5.0\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%225.0.30%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"10/17/2024\",\n    \"githash\": \"966efda23d779a86c76c34e1b13e561d68f2bb37\",\n    \"linux\": \"ubuntu2004\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/5.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"F5679A222C647C87527C2F8CB00A0BD1E2C63C11\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-5.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian10\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:buster-slim\",\n        \"suite\": \"buster\"\n      },\n      \"debian11\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bullseye-slim\",\n        \"suite\": \"bullseye\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"Client\",\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.30-signed.msi\",\n        \"sha256\": \"acabc07cba2e1b4a8bc2a852715a21ca29cae0f08a0dc157d54c1049f586fe45\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"5.0.30\"\n  },\n  \"5.0-rc\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%225.0.31%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"12/19/2024\",\n    \"githash\": \"e341c22ae81226decb4ae08a36363c08b23d64cd\",\n    \"linux\": \"ubuntu2004\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/5.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"28DE23AF08040FB24C33F36381B0EBBBADCEA95C\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-dev.asc\"\n      },\n      {\n        \"fingerprints\": [\n          \"F5679A222C647C87527C2F8CB00A0BD1E2C63C11\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-5.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian10\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:buster-slim\",\n        \"suite\": \"buster\"\n      },\n      \"debian11\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bullseye-slim\",\n        \"suite\": \"bullseye\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"Client\",\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.31-rc0-signed.msi\",\n        \"sha256\": \"96ebfde8a9540459d8a46e8ba6afabd9dc9ee61e700d8c956a6d98b78511f954\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"5.0.31-rc0\"\n  },\n  \"6.0\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%226.0.19%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"10/17/2024\",\n    \"githash\": \"a7ada5ff3a4d8a1e2ed88f86bd6b3d1d16cb43c6\",\n    \"linux\": \"ubuntu2204\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/6.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"39BD841E4BE5FB195A65400E6A26B1AE64C3C388\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-6.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian10\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:buster-slim\",\n        \"suite\": \"buster\"\n      },\n      \"debian11\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bullseye-slim\",\n        \"suite\": \"bullseye\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"ubuntu2204\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:jammy\",\n        \"suite\": \"jammy\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.19-signed.msi\",\n        \"sha256\": \"2d9f5555d820c1b6a3f3177f0a73a4f9e9b3a7f1275d2aa3122a2ecc3a1b31a2\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"6.0.19\"\n  },\n  \"6.0-rc\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%226.0.20%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"12/11/2024\",\n    \"githash\": \"ef4efd469fb0c5626c629c4f0f21398c9b5dd08f\",\n    \"linux\": \"ubuntu2204\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/6.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"28DE23AF08040FB24C33F36381B0EBBBADCEA95C\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-dev.asc\"\n      },\n      {\n        \"fingerprints\": [\n          \"39BD841E4BE5FB195A65400E6A26B1AE64C3C388\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-6.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian10\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:buster-slim\",\n        \"suite\": \"buster\"\n      },\n      \"debian11\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bullseye-slim\",\n        \"suite\": \"bullseye\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"ubuntu2204\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:jammy\",\n        \"suite\": \"jammy\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.20-rc3-signed.msi\",\n        \"sha256\": \"4c4688f61b8bce42885b8db64ea4fa4d27ab265b056e8d1b715409ed371f3070\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"6.0.20-rc3\"\n  },\n  \"7.0\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%227.0.16%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"12/11/2024\",\n    \"githash\": \"18b949444cfdaa88e30b0e10243bc18268251c1f\",\n    \"linux\": \"ubuntu2204\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/7.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"E58830201F7DD82CD808AA84160D26BB1785BA38\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-7.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian11\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bullseye-slim\",\n        \"suite\": \"bullseye\"\n      },\n      \"debian12\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bookworm-slim\",\n        \"suite\": \"bookworm\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"ubuntu2204\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:jammy\",\n        \"suite\": \"jammy\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-7.0.16-signed.msi\",\n        \"sha256\": \"88fe05d7f324e72b9d17cbfe9bde652053c398efc7cffc0249c944faf4f32b34\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"7.0.16\"\n  },\n  \"7.0-rc\": null,\n  \"8.0\": {\n    \"changes\": \"https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20%3D%20%228.0.4%22%20ORDER%20BY%20status%20DESC%2C%20priority%20DESC\",\n    \"date\": \"11/27/2024\",\n    \"githash\": \"bc35ab4305d9920d9d0491c1c9ef9b72383d31f9\",\n    \"linux\": \"ubuntu2404\",\n    \"notes\": \"https://docs.mongodb.org/master/release-notes/8.0/\",\n    \"pgp\": [\n      {\n        \"fingerprints\": [\n          \"4B0752C1BCA238C0B4EE14DC41DE058A4E7DCA05\"\n        ],\n        \"url\": \"https://pgp.mongodb.com/server-8.0.asc\"\n      }\n    ],\n    \"targets\": {\n      \"debian12\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"image\": \"debian:bookworm-slim\",\n        \"suite\": \"bookworm\"\n      },\n      \"ubuntu2004\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:focal\",\n        \"suite\": \"focal\"\n      },\n      \"ubuntu2204\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:jammy\",\n        \"suite\": \"jammy\"\n      },\n      \"ubuntu2404\": {\n        \"arches\": [\n          \"amd64\",\n          \"arm64v8\"\n        ],\n        \"image\": \"ubuntu:noble\",\n        \"suite\": \"noble\"\n      },\n      \"windows\": {\n        \"arches\": [\n          \"amd64\"\n        ],\n        \"features\": [\n          \"MiscellaneousTools\",\n          \"Router\",\n          \"ServerNoService\"\n        ],\n        \"msi\": \"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-8.0.4-signed.msi\",\n        \"sha256\": \"52d30392e6767eb48c03fc9886b831da5a282af7aba49cc46f45c6b0f85280cb\",\n        \"variants\": [\n          \"windowsservercore-ltsc2022\",\n          \"windowsservercore-1809\",\n          \"nanoserver-ltsc2022\",\n          \"nanoserver-1809\"\n        ]\n      }\n    },\n    \"version\": \"8.0.4\"\n  },\n  \"8.0-rc\": null\n}\n"
        },
        {
          "name": "versions.sh",
          "type": "blob",
          "size": 6.974609375,
          "content": "#!/usr/bin/env bash\nset -Eeuo pipefail\n\nshell=\"$(\n\twget -qO- 'https://downloads.mongodb.org/current.json' \\\n\t| jq -r '\n\t\t[\n\t\t\t.versions[]\n\n\t\t\t# filter out download objects we are definitely not interested in (enterprise, rhel, etc)\n\t\t\t| del(.downloads[] | select(\n\t\t\t\t(\n\t\t\t\t\t.edition == \"base\"\n\t\t\t\t\tor .edition == \"targeted\"\n\t\t\t\t)\n\t\t\t\tand (\n\t\t\t\t\t.target // \"\"\n\t\t\t\t\t| (\n\t\t\t\t\t\ttest(\"^(\" + ([\n\t\t\t\t\t\t\t\"debian[0-9]+\", # debian10, debian11, etc\n\t\t\t\t\t\t\t\"ubuntu[0-9]{4}\", # ubuntu2004, ubuntu1804, etc\n\t\t\t\t\t\t\t\"windows.*\" # windows, windows_x86_64, windows_x86_64-2012plus, etc\n\t\t\t\t\t\t] | join(\"|\")) + \")$\")\n\t\t\t\t\t\tand (\n\t\t\t\t\t\t\t# a few things old enough we do not want anything to do with them /o\\\n\t\t\t\t\t\t\ttest(\"^(\" + ([\n\t\t\t\t\t\t\t\t\"debian[89].*\",\n\t\t\t\t\t\t\t\t\"ubuntu1[0-9].*\"\n\t\t\t\t\t\t\t] | join(\"|\")) + \")$\")\n\t\t\t\t\t\t\t| not\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t| not))\n\n\t\t\t| {\n\t\t\t\tversion: (\n\t\t\t\t\t# convert \"4.4.x\" into \"4.4\" and \"4.9.x-rcY\" into \"4.9-rc\"\n\t\t\t\t\t(.version | split(\".\")[0:2] | join(\".\"))\n\t\t\t\t\t+ if .release_candidate then \"-rc\" else \"\" end\n\t\t\t\t),\n\t\t\t\tmeta: .,\n\t\t\t}\n\n\t\t\t# filter out EOL versions\n\t\t\t# (for some reason \"current.json\" still lists all these, and as of 2021-05-13 there is not an included way to differentiate them)\n\t\t\t| select(.version as $v | [\n\t\t\t\t# https://www.mongodb.com/support-policy/lifecycles\n\t\t\t\t\"3.0\", # February 2018\n\t\t\t\t\"3.2\", # September 2018\n\t\t\t\t\"3.4\", # January 2020\n\t\t\t\t\"3.6\", # April 2021\n\t\t\t\t\"4.0\", # April 2022\n\t\t\t\t\"4.2\", # April 2023\n\t\t\t\tempty\n\t\t\t] | index($v) | not)\n\n\t\t\t# filter out so-called \"rapid releases\": https://docs.mongodb.com/upcoming/reference/versioning/\n\t\t\t# \"Rapid Releases are designed for use with MongoDB Atlas, and are not generally supported for use in an on-premise capacity.\"\n\t\t\t| select(\n\t\t\t\t(.version | split(\"[.-]\"; \"\")) as $splitVersion\n\t\t\t\t| ($splitVersion[0] | tonumber) >= 5 and ($splitVersion[1] | tonumber) > 0\n\t\t\t\t| not\n\t\t\t)\n\t\t]\n\n\t\t# in case of duplicates that map to the same \"X.Y[-rc]\", prefer the first one (the upstream file is typically in descending sorted order, so we do not need to get much more complicated than this)\n\t\t# *not* doing this was actually totally fine/sane up until 2024-08-14, because prior to that there were never any duplicates in the upstream file so everything \"just worked\"\n\t\t# on 2024-08-14, upstream released 7.0.14-rc0, but (accidentally?) left 7.0.13-rc1 listed in the file, and without this fix, we prefer the later entry due to how we export the data below\n\t\t| unique_by(.version)\n\n\t\t# now convert all that data to a basic shell list + map so we can loop over/use it appropriately\n\t\t| \"allVersions=( \" + (\n\t\t\tmap(.version | ., if endswith(\"-rc\") then rtrimstr(\"-rc\") else . + \"-rc\" end)\n\t\t\t| unique\n\t\t\t| map(@sh)\n\t\t\t| join(\" \")\n\t\t) + \" )\\n\"\n\t\t+ \"declare -A versionMeta=(\\n\" + (\n\t\t\tmap(\n\t\t\t\t\"\\t[\" + (.version | @sh) + \"]=\"\n\t\t\t\t+ (.meta | @json | @sh)\n\t\t\t) | join(\"\\n\")\n\t\t) + \"\\n)\"\n\t'\n)\"\neval \"$shell\"\n\nversions=( \"$@\" )\nif [ ${#versions[@]} -eq 0 ]; then\n\tversions=( \"${allVersions[@]}\" )\n\tjson='{}'\nelse\n\tversions=( \"${versions[@]%/}\" )\n\tjson=\"$(< versions.json)\"\nfi\n\nfor version in \"${versions[@]}\"; do\n\texport version\n\n\tif [ -z \"${versionMeta[$version]:+foo}\" ]; then\n\t\techo >&2 \"warning: skipping/removing '$version' (does not appear to exist upstream)\"\n\t\tjson=\"$(jq <<<\"$json\" -c '.[env.version] = null')\"\n\t\tcontinue\n\tfi\n\t_jq() { jq <<<\"${versionMeta[$version]}\" \"$@\"; }\n\n\t#echo \"$version: $fullVersion\"\n\t_jq -r 'env.version + \": \" + .version'\n\n\t# download the Windows MSI sha256 (so we can embed it)\n\tmsiUrl=\"$(_jq -r '.downloads[] | select(.target | test(\"^windows\")) | .msi // \"\"')\"\n\t[ -n \"$msiUrl\" ]\n\t[[ \"$msiUrl\" != *$'\\n'* ]] # just in case they do something wild like support windows-arm64 :D\n\t# 4.3 doesn't seem to have a sha256 file (403 forbidden), so this has to be optional :(\n\tmsiSha256=\"$(wget -qO- \"$msiUrl.sha256\" || :)\"\n\tmsiSha256=\"${msiSha256%% *}\"\n\texport msiUrl msiSha256\n\n\tjson=\"$(\n\t\t{\n\t\t\tjq <<<\"$json\" -c .\n\t\t\t_jq --slurpfile pgpKeys pgp-keys.json '{ (env.version): (\n\t\t\t\t$pgpKeys[0] as $pgp\n\t\t\t\t| (env.version | rtrimstr(\"-rc\")) as $rcVersion\n\t\t\t\t| with_entries(select(.key as $key | [\n\t\t\t\t\t# interesting bits of raw upstream metadata\n\t\t\t\t\t\"changes\",\n\t\t\t\t\t\"date\",\n\t\t\t\t\t\"githash\",\n\t\t\t\t\t\"notes\",\n\t\t\t\t\t\"version\",\n\t\t\t\t\tempty\n\t\t\t\t] | index($key)))\n\t\t\t\t+ {\n\t\t\t\t\tpgp: [\n\t\t\t\t\t\tif env.version != $rcVersion then\n\t\t\t\t\t\t\t# the \"testing\" repository (used for RCs) has a dedicated PGP key (but still needs the \"release\" key for the release line)\n\t\t\t\t\t\t\t$pgp.dev\n\t\t\t\t\t\telse empty end,\n\n\t\t\t\t\t\t$pgp[$rcVersion],\n\n\t\t\t\t\t\tempty\n\t\t\t\t\t],\n\t\t\t\t\ttargets: (\n\t\t\t\t\t\treduce (\n\t\t\t\t\t\t\t.downloads[]\n\t\t\t\t\t\t\t| .target |= sub(\"^windows.*$\"; \"windows\")\n\t\t\t\t\t\t) as $d ({}; $d.target as $t |\n\t\t\t\t\t\t\t.[$t].arches |= (. + [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t# mapping from \"current.json\" arch values to bashbrew arch values\n\t\t\t\t\t\t\t\t\t\"aarch64\": \"arm64v8\",\n\t\t\t\t\t\t\t\t\t\"arm64\": \"arm64v8\",\n\t\t\t\t\t\t\t\t\t\"s390x\": \"s390x\",\n\t\t\t\t\t\t\t\t\t\"x86_64\": \"amd64\",\n\t\t\t\t\t\t\t\t}[$d.arch] // (\"unknown:\" + $d.arch)\n\t\t\t\t\t\t\t] | sort)\n\t\t\t\t\t\t\t| if $t | test(\"^(debian|ubuntu)\") then\n\t\t\t\t\t\t\t\t.[$t].image = (\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"debian10\": \"debian:buster-slim\",\n\t\t\t\t\t\t\t\t\t\t\"debian11\": \"debian:bullseye-slim\",\n\t\t\t\t\t\t\t\t\t\t\"debian12\": \"debian:bookworm-slim\",\n\t\t\t\t\t\t\t\t\t\t\"debian13\": \"debian:trixie-slim\",\n\t\t\t\t\t\t\t\t\t\t\"debian14\": \"debian:forky-slim\",\n\t\t\t\t\t\t\t\t\t\t\"ubuntu1604\": \"ubuntu:xenial\",\n\t\t\t\t\t\t\t\t\t\t\"ubuntu1804\": \"ubuntu:bionic\",\n\t\t\t\t\t\t\t\t\t\t\"ubuntu2004\": \"ubuntu:focal\",\n\t\t\t\t\t\t\t\t\t\t\"ubuntu2204\": \"ubuntu:jammy\",\n\t\t\t\t\t\t\t\t\t\t\"ubuntu2404\": \"ubuntu:noble\",\n\t\t\t\t\t\t\t\t\t}[$t] // \"unknown\"\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t| .[$t].suite = (\n\t\t\t\t\t\t\t\t\t.[$t].image\n\t\t\t\t\t\t\t\t\t| gsub(\"^.*:|-slim$\"; \"\")\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\telse . end\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t\t| .targets.windows += {\n\t\t\t\t\tmsi: env.msiUrl,\n\t\t\t\t\tsha256: env.msiSha256,\n\t\t\t\t\tvariants: [\n\t\t\t\t\t\t\"windowsservercore-ltsc2022\",\n\t\t\t\t\t\t\"windowsservercore-1809\",\n\t\t\t\t\t\t\"nanoserver-ltsc2022\",\n\t\t\t\t\t\t\"nanoserver-1809\"\n\t\t\t\t\t],\n\t\t\t\t\tfeatures: ([\n\t\t\t\t\t\t# https://github.com/mongodb/mongo/blob/r6.0.0/src/mongo/installer/msi/wxs/FeatureFragment.wxs#L9-L85 (no Client)\n\t\t\t\t\t\t# https://github.com/mongodb/mongo/blob/r4.4.2/src/mongo/installer/msi/wxs/FeatureFragment.wxs#L9-L92 (no MonitoringTools,ImportExportTools)\n\t\t\t\t\t\t\"ServerNoService\",\n\t\t\t\t\t\tif [ \"5.0\" ] | index(env.version | rtrimstr(\"-rc\")) then\n\t\t\t\t\t\t\t\"Client\"\n\t\t\t\t\t\telse empty end,\n\t\t\t\t\t\t\"Router\",\n\t\t\t\t\t\t\"MiscellaneousTools\",\n\t\t\t\t\t\tempty\n\t\t\t\t\t] | sort),\n\t\t\t\t}\n\t\t\t\t# ignore anything that does not support amd64\n\t\t\t\t| del(.targets[] | select(.arches | index(\"amd64\") | not))\n\t\t\t\t| .linux = (\n\t\t\t\t\t# automatically choose an appropriate linux target, preferring (in order):\n\t\t\t\t\t# - more supported architectures\n\t\t\t\t\t# - debian over ubuntu\n\t\t\t\t\t# - newer release over older\n\t\t\t\t\t.targets\n\t\t\t\t\t| to_entries\n\t\t\t\t\t| [ .[] | select(.key | test(\"^(debian|ubuntu)\")) ]\n\t\t\t\t\t| sort_by([\n\t\t\t\t\t\t(.value.arches | length),\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t.key\n\t\t\t\t\t\t\t| if startswith(\"ubuntu\") then\n\t\t\t\t\t\t\t\t1\n\t\t\t\t\t\t\telif startswith(\"debian\") then\n\t\t\t\t\t\t\t\t2\n\t\t\t\t\t\t\telse 0 end\n\t\t\t\t\t\t),\n\t\t\t\t\t\t(.key | sub(\"^(debian|ubuntu)\"; \"\") | tonumber), # 10, 11, 2004, 1804, etc\n\t\t\t\t\t\t.key\n\t\t\t\t\t])\n\t\t\t\t\t| reverse[0].key\n\t\t\t\t)\n\t\t\t\t| .\n\t\t\t) }'\n\t\t} | jq -cs add\n\t)\"\ndone\n\njq <<<\"$json\" -S . > versions.json\n"
        }
      ]
    }
  ]
}