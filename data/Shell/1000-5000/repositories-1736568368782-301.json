{
  "metadata": {
    "timestamp": 1736568368782,
    "page": 301,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sonic2kk/steamtinkerlaunch",
      "stars": 2235,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0078125,
          "content": ".vscode/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.591796875,
          "content": "# Contributing\nWe are always looking for new contributors! SteamTinkerLaunch has a lot of parts and a lot of features, so there's always something to contribute. \n\n## How to Contribute\nSteamTinkerLaunch is basically a huge Bash script. If you know any Bash, feel free to jump in and look around the code. It might seem a little daunting at first but just play around and you'll get the hang of it. I also recommend reading through the `steamtinkerlaunch.log` file. The log for the most recent launch can be found in `/dev/shm/steamtinkerlaunch`. This can give you a sense for the flow of the script and how all the functions connect together.\n\nGiven that SteamTinkerLaunch is a Linux utility, you will probably have a smoother time developing on Linux. This includes on Steam Deck.\n\n## Where to Contribute\nYou don't have to be a developer to get involed with SteamTinkerLaunch! Here are some ideas on where contributions would be welcome:\n- Reporting bugs and suggesting issues on the [issue tracker](https://github.com/sonic2kk/steamtinkerlaunch/issues).\n- Fixing bugs you encounter or bugs listed on the issue tracker.\n- Helping improve existing features, especially with ModOrganizer 2 and Vortex Mod Manager integration.\n- Optimisation improvements\n- Suggest improvements to the wiki's documentation.\n- Update any existing translations or submit a new translation.\n\n## Submitting Pull Requests\nSo you've made a feature and you're ready to submit a PR - Awesome! Where applicable please outline your changes and rationale to help with the review process, please don't open blank PRs.\n\n### Standards\nA good PR will target a specific area or specific feature, and have a clear improvement on that area. If your PR addresses a specific ticket on the issue tracker, feel free to mention it so that the issue can be automatically closed upon merge.\n\nReviewing PRs may take time, and to help with this please consider the size and scope of your PRs before submission. There is no hard and fast rule on how to scope your PRs, but it would be slightly preferable to submit several small PRs for easier review rather than one large PR.\n\nYou are free to open draft PRs as well if your feature is still in the works but not quite ready for a full review yet. Feel free to ask for advice or review on specific elements in a draft PR.\n\n### Naming\nThere are no strict rules on how to name or format your pull requests. Just try to make it descriptive, informative and keep it clean :-)\n\n### Versioning\n**Note:** Version strings don't have to be updated when submitting PRs with no code updates. You're still free to do so, but it isn't really necessary if you're not touching `steamtinkerlaunch`. It is cleaner for me though! :-) \n\nBefore a Pull Request can be merged, the `PROGVERS` should be bumped. This value controls how config files are versioned, and how new data is pulled into them. Usually, `PROGVERS` is set to the current `major.minor` version, and then the current date plus 1 at the end. Dates follow the ISO date standard. If the current date is already used, you can adjust the revision number. The version major and minor strings don't need to be changed by you, *only the date needs to be changed*.\n\nThat means, if you're developing a feature for SteamTinkerLaunch v15.2 on on August 14th 2025, you would set the string as `v15.2.20250414-1`. If this date was already used, you would change the `-1` to be `-2` in this case, or `-3` and so on. Take a look around commits, and multiple commits in the same day, to see the diff on how `PROGVERS` is bumped. As examples, take a look at [`62aec11`](https://github.com/sonic2kk/steamtinkerlaunch/commit/62aec1124e19798509d203c6e28c24b28ac11157) for a version bump example, and its follow-up [`c2071ea`](https://github.com/sonic2kk/steamtinkerlaunch/commit/c2071ea044277bd87a02aa51764ac88b42aae298) for a revision bump example.\n\nDuring development, you can set `PROGVERS` to any value you want, but you may want to suffix it with the branch name in brackets. In the above example, if your branch is called `awesomer-steamtinkerlaunch`, then your version string during development might be `v15.2.20250414-1 (awesomer-steamtinkerlaunch)`. Before merging, however, this should be cleaned up once all feedback is addressed. You may also update the string during a rebase.\n\nSee also: **[Development Tips/Testing your Development Version](#testing-your-development-version)**.\n\n### Commit History\nYou can open a Pull Request with several commits, GitHub's \"Squash and Merge\" option is usually used when merging PRs.\n\nMerge commit names may be adjusted from the Pull Request title in an attempt to make the purpose clearer. Please try to name your pull requests descriptively, and if you'd _really_ prefer no rename, please mention so in your description.\n\n### Translations\nIf you edit any of the language files when contributing, add the string to **all** the other language files *or* update the string in other language files too if it is untranslated. For example, if you add a string to `english.txt`, and that same string is untranslated in `dutch.txt`, just copy the English string into `dutch.txt`.\n\nThe placement of the strings does not matter but try to keep related strings grouped together where possible. \n\nYou are also free to translate the string, if you speak the language. But if not, the English string will be fine.\n\n## Development Tips\nThis section has some tips and guidance to help with writing code for SteamTinkerLaunch.\n\n### Use ShellCheck\n**Note**: ShellCheck v0.9.0 is **NOT** supported due to enforcing an extended data analysis engine. ShellCheck v0.10.0 allows this to be disabled, and SteamTinkerLaunch automatically sets a directive to disable it. You can also disable it manually when running ShellCheck by using `shellcheck --extended-analysis=false steamtinkerlaunch`.\n\nThere is an awesome utility called [ShellCheck](http://shellcheck.net/) which helps ensure shell code is bug-free. It is strongly recommended to use this when developing for SteamTinkerLaunch, it's a good way to catch bugs and write well structured code.\n\nThere may be rare instances where ShellCheck is a bit *too* helpful. In cases like that, you can add a `shellcheck disable` check to your code. In Pull Requests and/or in a comment near that section, please note the reason for disabling that ShellCheck warning.\n\nFor more information on what causes ShellCheck issues, each of its error/warning/etc has a wiki page that can give information on how to resolve the problem. \n\n### Clearing Temp Files\nBefore running development builds, it can be a good idea to clear out the `/dev/shm/steamtinkerlaunch` folder. Before each execution you can run `rm -rf /dev/shm/steamtinkerlaunch`.\n\nIf you want to test SteamTinkerLaunch from a \"clean\" slate, you can optionally use this Python script by [tetoNidan](https://github.com/tetoNidan) to remove any SteamTinkerLaunch related files: https://gist.github.com/tetoNidan/27223269c35cb922988b6b05858d0f37/ - This may be useful to do if you want to test SteamTinkerLaunch on another machine from as fresh of a state as possible.\n\n### Testing your Development Version\nThere are a few ways to test features you're developing for SteamTinkerLaunch. One of the first things you should do is change the `PROGVERS` at the top of the script. For development purposes you can set this to anything you like, as this will help you ensure you are definitely running the development version of SteamTinkerLaunch. You could append `-dev` to the end of the `PROGVERS`, for example.\n\nTo run your development version of SteamTinkerLaunch, you can simply run `./steamtinkerlaunch` to execute the script. You can check the version with `./steamtinkerlaunch version`.\n\nTo run your development version of SteamTinkerLaunch through Steam, you can run `./steamtinkerlaunch compat add` and then launch your game through Steam. You shouldn't need to restart Steam for this change to take effect, as it should just change the symlink in Steam's `compatibilitytools.d` folder to point to your development script.\n\nOnce you're done with development, you can go back to using your regular SteamTinkerLaunch version in one of the following ways depending on how you installed SteamTinkerLaunch:\n- For package manager installations, root installs (with `sudo make install`), or if SteamTinkerLaunch is otherwise on your `PATH` (like on Steam Deck with ProtonUp-Qt), you can run `steamtinkerlaunch compat add` from **outside** of your SteamTinkerLaunch development folder. This will point the symlink in Steam's `compatibilitytools.d` folder back to the original script and not your development script.\n- For non-root installs, locale the folder where your original SteamTinkerLaunch script is stored and run `./steamtinkerlaunch compat add`. This will point the symlink in Steam's `compatibilitytools.d` folder to the script you are currently executing instead of the development script.\n  \nYou can then verify that you are using the correct version again by running SteamTinkerLaunch through Steam and checking the version on the Main Menu.\n\n### Text Editors\nYou can use any text editor you like to develop SteamTinkerLaunch, since it is just a Bash script and ShellCheck will do the linting work for you. If you need some recommendations, [Kate](https://apps.kde.org/kate/), [KWrite](https://apps.kde.org/kwrite/) and [Geany](https://www.geany.org/) have been tested and work very well. [VSCodium](https://vscodium.com/) has also been tested, however note that VSCodium's default Bash language server and syntax highlighting often breaks. This has not been observed in other text editors.\n\n### Navigation and Logging\nSteamTinkerLaunch is a big script. Like, **really** big. To help you navigate around, you should search the language files for a string and copy the string's key (e.g., `GUI_MO2MODE`) and use your text editor's \"Find\" function to locate that string. It might happen that the string appears in multiple places, but this can help serve as a good starting point for finding the area of the code that you're wanting to work on.\n\nAs mentioned, using the `steamtinkerlaunch.log` file in `/dev/shm/steamtinkerlaunch` can be really useful when getting started. Each log statement is in the format `DATETIME STATEMENT_TYPE - FUNCNAME - LOG_STATEMENT`. Each log starts with the current date and time from your system (e.g. `Mon 31 Oct 00:00:00 UTC 2022`). After this is the type of statement, denoting whether it's a `WARN`ing, or `INFO`rming, or an `ERROR`. Then the last part of each log is the actual log message itself, such as `started SteamTinkerLaunch from /path/to/script`. An example log message might look like this: `Mon 31 Oct 00:00:00 UTC 2022 initAID - Set AID from STEAM_COMPAT_APP_ID to '1454400'`.\n\nIf you want to help trace how your code is executing, you can add your own logging statements with the `WRITELOG` function. For example: `writelog \"INFO\" \"${FUNCNAME[0]} - This is a log message\"`. This will log an `INFO` that says `This is a log message`. Using `${FUNCNAME[0]}` is what puts the function name your code is executing from into the logging message. \n\n## Translations\nAny contributions related to translations are always welcome, whether it's an update for untranslated strings in an existing language, an overhaul to improve an existing translation, or a brand new translation! The current maintainer of SteamTinkerLaunch only speaks English, so you are more than welcome to contribute a PR to add a translation.\n\nTo update a translation, open the translation file and start updating the strings. If you need a reference, the `english.txt` translation file is probably the most correct and up-to-date so it could be a good reference point on how to translate a given string.\n\nTo start writing a new translation, it is recommended to use `english.txt` as your base as this is the most up-to-date translation available. Duplicate this file and start translating the strings. As there are hundreds of strings you don't have to update all of them, but **don't** remove the strings you cannot or have not translated. If you run into this, just leave the string untranslated.\n\nIn future, you are always welcome to come back and improve your translation. More and more strings will be added as SteamTinkerLaunch grows, and translations can quickly become outdated. Don't be afraid to keep an eye on the repository and submit PRs to update the translation strings, even if it's only one or two lines each time.\n\n### Using Steam Client Strings\nSome strings in use by SteamTinkerLaunch are taken from other sources, including the Steam Client. SteamDatabase is a useful resource that contains frequently-updated information extracted from the Steam Client itself including [localisation information](https://github.com/SteamDatabase/SteamTracking/tree/master/ClientExtracted/steamui/localization). By checking the `shared_<langname>.json` files you can see the strings in use by the Steam Client.\n\nThese JSON files use a different format to what is used by SteamTinkerLaunch's language files, so to bridge the gap, a Python snippet is provided below to convert strings copied and pasted from the SteamDatabase JSON files mentioned above, to the format used by SteamTinkerLaunch's language files. Simply paste the strings into a file called `strings.txt` in the same directory as the Python script file, and it will print out the converted strings. These can then be used to overwrite any existing strings with these keys.\n\n```python\n# Might be more appropriate to rewrite this in Bash at some point, huh?\nwith open('strings.txt') as instrings:\n    for s in instrings:\n        keyval_split = s.split(':')\n\n        string_key = keyval_split[0].strip()\n        string_val = keyval_split[1].strip()[:-1]\n\n        formatted_string_key = string_key.replace('\"', '').upper()\n\n        print(f'{formatted_string_key}={string_val}')\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.8466796875,
          "content": "ifeq ($(PREFIX),)\n    PREFIX := /usr\nendif\n\n.PHONY: build install\n\nbuild:\n\ninstall:\n\tsed \"s:^PREFIX=\\\"/usr\\\":PREFIX=\\\"$(PREFIX)\\\":\" -i steamtinkerlaunch\n\tinstall -Dm755 steamtinkerlaunch -t \"$(PREFIX)/bin\"\n\n\tinstall -d \"$(PREFIX)/share/steamtinkerlaunch\"\n\tcp -r collections eval guicfgs lang misc \"$(PREFIX)/share/steamtinkerlaunch\"\n\n\tinstall -Dm644 README.md -t \"$(PREFIX)/share/doc/steamtinkerlaunch\"\n\tinstall -Dm644 \"misc/steamtinkerlaunch.desktop\" -t \"$(PREFIX)/share/applications\"\n\tinstall -Dm644 \"misc/steamtinkerlaunch.svg\" -t \"$(PREFIX)/share/icons/hicolor/scalable/apps\"\n\nuninstall:\n\trm -f \"${PREFIX}/share/icons/hicolor/scalable/apps/steamtinkerlaunch.svg\"\n\trm -f \"${PREFIX}/share/applications/steamtinkerlaunch.desktop\"\n\trm -rf \"${PREFIX}/share/doc/steamtinkerlaunch\"\n\n\trm -rf \"${PREFIX}/share/steamtinkerlaunch\"\n\n\trm -f \"${PREFIX}/bin/steamtinkerlaunch\"\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.515625,
          "content": "# Steam Tinker Launch\n[![GitHub version](https://img.shields.io/github/v/tag/sonic2kk/steamtinkerlaunch?label=version&style=flat-square)](https://github.com/sonic2kk/steamtinkerlaunch/releases/latest)\n[![GitHub stars](https://img.shields.io/github/stars/sonic2kk/steamtinkerlaunch.svg?style=flat-square)](https://github.com/sonic2kk/steamtinkerlaunch/stargazers)\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/sonic2kk/steamtinkerlaunch?style=flat-square)\n[![GitHub contributors](https://img.shields.io/github/contributors/sonic2kk/steamtinkerlaunch.svg?style=flat-square)](https://github.com/sonic2kk/steamtinkerlaunch/graphs/contributors)\n[![aur votes](https://img.shields.io/aur/votes/steamtinkerlaunch?label=aur%20votes&style=flat-square)](https://aur.archlinux.org/packages/steamtinkerlaunch)\n[![GitHub issues](https://img.shields.io/github/issues/sonic2kk/steamtinkerlaunch.svg?style=flat-square)](https://github.com/sonic2kk/steamtinkerlaunch/issues)\n[![GitHub license](https://img.shields.io/github/license/sonic2kk/steamtinkerlaunch.svg?style=flat-square)](https://github.com/sonic2kk/steamtinkerlaunch/blob/dev/LICENSE)\n\n## What is SteamTinkerLaunch?\n\n<img align=\"left\" width=\"64\" height=\"64\" src=\"https://github.com/frostworx/repo-assets/blob/master/pics/steamtinkerlaunch-logo_64px.png\" alt=\"**SteamTinkerLaunch** is a Linux wrapper tool for use with the Steam client\">\n\n**Steam Tinker Launch** is a versatile Linux wrapper tool for use with the Steam client which allows for easy graphical configuration of game tools, such as [GameScope](https://github.com/sonic2kk/steamtinkerlaunch/wiki/GameScope), [MangoHud](https://github.com/sonic2kk/steamtinkerlaunch/wiki/MangoHud), [modding tools](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Modding) and a bunch more. It supports both games using Proton and native Linux games, and works on both X11 and Wayland.\n \nAs described by _/u/TaylorRoyal23_ on [r/linux_gaming](https://www.reddit.com/r/linux_gaming/comments/ud58i2/comment/i6i3yf9/?utm_source=share&utm_medium=web2x&context=3):\n\n> _\"An incredible wrapper with a menu that lets you easily toggle and modify various settings for games on Linux.\nAnything from proton versions, to startup and exit scripts, proton/dxvk/etc. settings, FSR, reshade,\nand even options for various tools like gamemode, replay-sorcery, gamescope, etc. Tons more too.\nI just set my default proton version to \"steam tinker launcher\" and then every game launches\nwith a 2 second menu that allows you to easily change any of the settings.\nIf you don't press any buttons it just goes with the defaults and launches the game.\nThe menus can get a little confusing but it consolidates it all in one place and is way more simple\nthan trying to remember dozens of commands for various settings that one might need.\"_\n\n![Main Menu](https://user-images.githubusercontent.com/7917345/231897862-401c8702-af1b-4a51-9ace-8a3f04ca2cf2.png)\n\n## What Does It Do?\nSteamTinkerLaunch offers a huge variety of features, too many to list in this Readme. Please see the [Features List](https://github.com/sonic2kk/steamtinkerlaunch/wiki#features) and their associated wiki pages for a full breakdown. However, here are some of the key features offered by SteamTinkerLaunch. Note that some of these features may not work with Flatpak Steam!\n\n| Feature | Description |\n| ------- | ----------- |\n| Custom Per-Game Environment Variables | Set custom environment variables on a per-game basis. Useful for adding command-line tweaks for various games. |\n| Custom Game Executable | Change the executable that Steam launches. Useful for custom game launchers/mod launchers.<br /><br />This option is extremely flexible, allowing for launching a custom executable with a game, instead of the game, before the game or after the game. See the [Custom Program wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Custom-Command) for usage. |\n| Easy installation of Winetricks verbs | SteamTinkerLaunch can apply the necessary steps to install, for example, `dotnet48` or later in a Proton prefix, which can fix common issues with GUI tools running through Proton.<br /><br />It is **highly recommended** to install `dotnet48` using a community flavour of Proton such as GE-Proton or Proton 5.0. You will also want to ensure your Winetricks version is up-to-date. |\n| [ModOrganizer 2](https://github.com/ModOrganizer2/modorganizer) Support | Installs and sets up mod installation and organization tool ModOrganizer 2. Includes browser and command line integration for handling NXM links with `xdg-open`.<br /><br />See our [ModOrganizer 2 wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Mod-Organizer-2) and [modding wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Modding) for more details. |\n| [Vortex Mod Manager](https://www.nexusmods.com/about/vortex/) Support | Installs and sets up Nexus Mods' mod management tool Vortex Mod Manager. Includes browser and command line integration for handling NXM links with `xdg-open`.<br /><br />See our [Vortex wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Vortex) and [modding wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Modding) for more details. |\n| [SpecialK](https://github.com/SpecialKO) Support | Utility for enhancing and fixing common problems with Windows games.<br /><br />See our [SpecialK wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/SpecialK) for usage. May require additional [Optional Dependencies](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#optional-dependencies). |\n| [ReShade](https://reshade.me/) Support (Proton/Wine Only) | Supports the use of ReShade shaders to enhance the visual quality of Windows games. Note that ReShade does not support native Linux games.<br /><br />See our [ReShade wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/ReShade) for usage and information on using **ReShade** and **SpecialK** together. |\n| [Hedge Mod Manager](https://github.com/thesupersonic16/HedgeModManager) support | Supports automatic installation of the Open-Source Modern Sonic game mod manager as well as attempting to install workarounds for various games that require it.<br/><br/>Due to the nature of this tweaks relying on Winetricks some manual intervention may be required in some instances. Please see the [SteamTinkerLaunch Hedge Mod Manager wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Hedge-Mod-Manager) for details. |\n| Custom Wine/Proton Download | Manages downloading custom Proton and Wine releases, such as GloriousEggroll's popular Proton flavour [GEProton](https://github.com/GloriousEggroll/proton-ge-custom). These versions are installed and managed by SteamTinkerLaunch. (**Requires `jq` to be installed!**)<br /><br />See our wiki pages on [Custom Proton Versions](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Download-Custom-Proton) and [Custom Wine Versions](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Download-Custom-Wine) for more details. |\n\nTo find out about the latest release, check out the [stable release changelog](https://github.com/sonic2kk/steamtinkerlaunch/releases/latest). To find out about the latest bleeding-edge development changes not yet in a stable build, check out the [full changelog](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Changelog).\n\n## How Do I Use It?\n### General usage\nSteam Tinker Launch works with Linux native games and games using Proton, however some Windows-only utilities (such as [ReShade](https://github.com/sonic2kk/steamtinkerlaunch/wiki/ReShade)) are only available for Proton games. SteamTinkerLaunch also supports Non-Steam Games so long as they are launched through the Steam client.\n\nThere are two ways to use SteamTinkerLaunch through Steam, either as a Compatibility Tool (intended for Proton games) or as a Launch Option (intended for native Linux games). Only **one** of these options should be used per game.\n\n#### Steam Compatibility Tool (**Proton Games**)\nUsing SteamTinkerLaunch as a [compatibility tool](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Compatibility-Tool) is the intended way of using it with Proton games. Once SteamTinkerLaunch is installed, force it as a compatibility tool for your chosen game from the list of compatibility tools. You can also set SteamTinkerLaunch as the default compatibility tool for all applications from the Steam Play settings of the Steam client. Keep in mind that if you force SteamTinkerLaunch as a compatibility tool, Steam will always download the Windows release of the game.\n\n#### Steam Launch Option (**Native Linux Games**)\nUsing SteamTinkerLaunch as a [Launch Option](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Launch-Option) is the intended way of using it with native Linux games. You can enable SteamTinkerLaunch as a launch option\n\n```sh\nsteamtinkerlaunch %command%\n```\n\nOn some platforms such as [Steam Deck](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Deck), using SteamTinkerLaunch as a launch option may require you to add it to your path. Refer to your distributions documentation on how to add the script to your path, as this can vary between distributions and shells. If you installed SteamTinkerLaunch via [ProtonUp-Qt](https://github.com/sonic2kk/steamtinkerlaunch/wiki/ProtonUp-Qt) it will added to your path for you, though you may still have to set the path to `$HOME/stl/prefix/steamtinkerlaunch` as described on the [Launch Option wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Launch-Option).\n\nIt is possible to use SteamTinkerLaunch as a launch option for Proton games, but this is **not** the intended use-case.\n\n### Game-Specific Use\nWhen starting a game, a small [Wait Requester](#Wait-Requester) dialog will pop up. This will allow you to access the Main Menu either by pressing the button or pressing the spacebar, or skip to launching the game. By default, the dialog will only stay for two seconds before it times out and launches the game, but this can be configured in the SteamTinkerLaunch settings.\n\n![Wait Requester](https://user-images.githubusercontent.com/7917345/231898092-86a0441e-c82e-4ec1-aff1-15de236fbf56.png)\n\nThe Main Menu is the springboard to tinkering with your game options. See the [wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Main-Menu) for more information on the options it provides. \n\n### Command Line\nSteamTinkerLaunch has several [command line options](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Command-Line) which can be useful outside Steam, such as for installing modding tools. You can run `steamtinkerlaunch help` for a full list of available commands, or if SteamTinkerLaunch is not in your path you can run `sh steamtinkerlaunch help` from the folder where you downloaded SteamTinkerLaunch. \n\n## How Do I Install It?\nSteamTinkerLaunch can be installed in a few different ways depending on your platform and needs. Please refer to the [Installation wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation) for detailed installation instructions.\n\n| Platform | Notes |\n| -------- | ----- |\n| Package Manager | Preferred installation method. See distribution package status below, though this list may not be exhaustive.<br />Many thanks to all package maintainers!<br /><br />[![Packaging status](https://repology.org/badge/vertical-allrepos/steamtinkerlaunch.svg)](https://repology.org/project/steamtinkerlaunch/versions)<br /><br />Refer to the [Installation Wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#package-manager) for more information on available packages. |\n| [ProtonUp-Qt](https://github.com/sonic2kk/steamtinkerlaunch/wiki/ProtonUp-Qt) | As of v2.7.3, [ProtonUp-Qt](https://github.com/DavidoTek/ProtonUp-Qt) has support for SteamTinkerLaunch. This should allow you to install SteamTinkerLaunch regardless which distribution you are using **including Steam Deck**. See the [Installation wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#protonup-qt) and our [ProtonUp-Qt wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/ProtonUp-Qt) for more details.<br /><br />Outside of Steam Deck, ensure you have met the relevant SteamTinkerLaunch [hard dependencies](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#hard-dependencies). |\n| Manual Installation | SteamTinkerLaunch supports **system-wide** (root) and **local** (non-root) manual installation. [See Installation Wiki notes](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#manual-installation) for setup and details. |\n| [Steam Deck](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Deck) | See [Installation Wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#steam-deck) for Steam Deck specific installation instructions. |\n| [Steam Flatpak](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Steam-Flatpak) | See [Installation Wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#steam-flatpak) for setup instructions on using Steam Flatpak and SteamTinkerLaunch.<br><br>**NOTE:** This is **only** for Flatpak Steam. |\n| Other | See [Installation Wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Installation#distro-specific) for any distro-specific installation instructions. |\n\n## Press\nSeveral great people have mentioned SteamTinkerLaunch on their platforms/channels. Many thanks to all who have covered SteamTinkerLaunch!\n\n| Name | Press |\n| ---- | ----- |\n| **[podiki](https://boilingsteam.com/author/podiki/)** (also a SteamTinkerLaunch contributor) | [Wrote a huge article about SteamTinkerLaunch on BoilingSteam](https://boilingsteam.com/supercharge-steam-with-steamtinkerlaunch-stl)! |\n| **[ekianjo](https://boilingsteam.com/author/ekianjo/)** | [Wrote up a Q&A on BoilingSteam](https://boilingsteam.com/steam-tinker-launcher-making-tinkering-much-easier) with SteamTinkerLaunch creator Frostworx! |\n| **[Hex DSL](https://www.youtube.com/c/HexDSL)** | Made a [YouTube video](https://www.youtube.com/watch?v=rdXQRMwMfPE) showcasing SteamTinkerLaunch |\n| **[tuxfoo](https://www.youtube.com/channel/UCWpoyqSBIXtylRLFgP3PFfg)** | Made a [YouTube video](https://www.youtube.com/watch?v=l1KjIANTIKs) showcasing SteamTinkerLaunch\n| **[Linux Game Cast](https://linuxgamecast.com/)** | Mentioned SteamTinkerLaunch on their [casts](https://www.youtube.com/watch?v=djuZdnE83fE&t=436s) [several](https://www.youtube.com/watch?v=yVsTMhx8E7c&t=983s) [times](https://www.youtube.com/watch?v=qhybhTGV3mA&t=1279s), and [counting]((https://linuxgamecast.com/2021/11/linux-game-cast-484-yami-pedro))! |\n| **[Kevin Wammer](https://overkill.wtf/author/kevin/)** | Wrote [this article](https://overkill.wtf/steam-deck-steam-tinker-launch-stl/) |\n| **[Starlogical from HiTechLoLife](https://www.youtube.com/c/HiTechLoLife)** | Created [this video](https://www.youtube.com/watch?v=4FRU2fuvLlw) describing SteamTinkerLaunch |\n| **[joker1007](https://joker1007.hatenablog.com)** (Japanese) | Wrote a [huge article](https://joker1007.hatenablog.com/entry/2022/11/28/014825) on SteamTinkerLaunch for Japanese users |\n\n \n## Configuration\nWhen SteamTinkerLaunch is started for the first time, it will create its default [configuration](#Configuration) structure (usually in `~/.config/steamtinkerlaunch`). All [Configuration Files](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Configuration-Files) are self-contained documents and are always growing, and as a result some options may be missing. If you find a configuration option that is not documented, please request it on the [issue tracker](https://github.com/sonic2kk/steamtinkerlaunch/issues). You may even write the documentation yourself and a collaborator can add it.\n\nFor a general overview what can be configured, you check the [wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki), or simply browse through the \n[Main Menu](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Main-Menu), which covers almost everything available. If you want to get an overview of SteamTinkerLaunch's features, and you find the huge [wiki](https://github.com/sonic2kk/steamtinkerlaunch/wiki) too overwhelming,\nyou might want to check out the [articles and videos](#Press) created by members of the community.\n\n### Configuration with Text Editors\nAs mentioned, almost everything can be configured from the [Main Menu](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Main-Menu), but optionally you can edit SteamTinkerLaunch's global and per-game configuration files with a graphical text editor for a more granular approach. Before diving into editing with a text editor, it might be a good idea to start by exploring the configuration options in the [Main Menu](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Main-Menu), and then diving in and tweaking with a text editor.\n\nFor more information on SteamTinkerLaunch's specific configuration files, see the [Configuration Files wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Configuration-Files).\n\nFor information on where SteamTinkerLaunch stores downloaded files, see the [Downloads wiki page](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Downloads).\n\n## Troubleshooting\n### Logs\nLogs are written into the `LOGDIR` as defined in the [Global Menu](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Global-Menu) or [Global Config](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Configuration-Files#Global-Config) (by default, this is usually `~/.config/steamtinkerlaunch/logs/`). The verbosity of the logfile depends on the `WRITELOG` variable, where `0` is no logging, `1` is less verbosity and `2` is most verbosity.\n\nSteamTinkerLaunch produces a number of logs, including game-specific log files. For logs that have a Steam AppID in them (such as Proton logs), there is usually a symlink for the log file with the game's name to make it easier to identify logs. \n\nSteamTinkerLaunch may also store additional logging information in `/dev/shm/steamtinkerlaunch`.\n\nAs well as logs, there is a wiki page for [troubleshooting](https://github.com/sonic2kk/steamtinkerlaunch/wiki/Troubleshooting) which lists some problems a few users have faced and some known issues.\n\n## Disclaimer\nKeep in mind that you are using SteamTinkerLaunch at your own risk and that you are responsible for the third party programs that you launch with it. SteamTinkerLaunch is not affiliated with Valve Corporation or Steam.\n\n## Contributing\nSteamTinkerLaunch is always looking for new contributors. See [CONTRIBUTING.md](https://github.com/sonic2kk/steamtinkerlaunch/blob/master/CONTRIBUTING.md) for some more information on how to contribute to the project.\n\n## License\nSteamTinkerLaunch is licensed under the GNU General Public License v3.0. See [LICENSE](https://github.com/sonic2kk/steamtinkerlaunch/blob/master/LICENSE) for more information.\n"
        },
        {
          "name": "collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "eval",
          "type": "tree",
          "content": null
        },
        {
          "name": "guicfgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "steamtinkerlaunch",
          "type": "blob",
          "size": 1078.2744140625,
          "content": "#!/usr/bin/env bash\n# shellcheck source=/dev/null\n# shellcheck extended-analysis=false\n\n### project ###\n\nPREFIX=\"/usr\"\nPROGNAME=\"SteamTinkerLaunch\"\nNICEPROGNAME=\"Steam Tinker Launch\"\nPROGVERS=\"v14.0.20241228-1\"\nPROGCMD=\"${0##*/}\"\nPROGINTERNALPROTNAME=\"Proton-stl\"\nSHOSTL=\"stl\"\nGHURL=\"https://github.com\"\nAGHURL=\"https://api.github.com\"\nPROJECTPAGE=\"$GHURL/sonic2kk/${PROGNAME,,}\"\nPPW=\"$PROJECTPAGE/wiki\"\nCURWIKI=\"$PPW\"\nSTARTDEBUG=1\nONSTEAMDECK=0\n\n### internal dependencies ###\n#STARTINTDEPS\nGIT=\"git\"\nPGREP=\"pgrep\"\nPIDOF=\"pidof\"\nPKILL=\"pkill\"\nTAR=\"tar\"\nUNZIP=\"unzip\"\nWGET=\"wget\"\nXDO=\"xdotool\"\nXPROP=\"xprop\"\nXRANDR=\"xrandr\"\nXWININFO=\"xwininfo\"\nXXD=\"xxd\"\n#ENDINTDEPS\n\n### (optionally) used programs ###\nGAMEMODERUN=\"gamemoderun\"\nGAMESCOPE=\"gamescope\"\nNYRNA=\"nyrna\"\nSTEAM=\"steam\"\nRECO=\"resetcollections\"\nSTERECO=\"$STEAM ${STEAM}://${RECO}\"\nSTRACE=\"strace\"\nWINECFG=\"winecfg\"\nWICO=\"wineconsole\"\nSYSWINETRICKS=\"winetricks\"\nREPLAY=\"replay-sorcery\"\nINNOEXTRACT=\"innoextract\"\nCABEXTRACT=\"cabextract\"\nLSUSB=\"lsusb\"\nJQ=\"jq\"\nCONVERT=\"convert\"\nIDENTIFY=\"identify\"\nRSYNC=\"rsync\"\nCONTY=\"conty.sh\"\nSEVZA=\"7za\"\nPERES=\"peres\"\nGDB=\"gdb\"\nXDGMIME=\"xdg-mime\"\nXDGO=\"xdg-open\"\nOBSCAP=\"obs-gamecapture\"\n\nCHECKHMD=1\nX32D=\"x32dbg\"\nX64D=\"x64dbg\"\nFACO=\"favorites.conf\"\nMENSO=\"menusort.conf\"\nMENUBLOCK=\"menublock.conf\"\nDSHM=\"/dev/shm\"\nSTLSHM=\"$DSHM/${PROGNAME,,}\"\nMTEMP=\"$STLSHM/menutemp\"\nSTLICON=\"$STLSHM/${PROGNAME,,}-steam-checked.png\"\nNOICON=\"$STLSHM/empty.png\"\nFAVPIC=\"$STLSHM/fav.jpg\"\nDFDIR=\"$STLSHM/desktopfiles\"\nCLOSETMP=\"$STLSHM/${PROGNAME,,}-closing.tmp\"\nPROTBUMPTEMP=\"$STLSHM/protonbump.tmp\"\nKILLSWITCH=\"$STLSHM/KillSwitch\"\nTEMPLOG=\"$STLSHM/${PROGNAME,,}.log\"\nPRELOG=\"$STLSHM/prelog.log\"\nAPPMALOG=\"$STLSHM/listAppManifests.log\"\nGGDLOG=\"$STLSHM/getGameData.log\"\nWINRESLOG=\"$STLSHM/winres.log\"\nSHADLOG=\"$STLSHM/shaderupdate.log\"\nGWIDFILE=\"$STLSHM/${PROGNAME,,}-sbsgwid\"\nPIDLOCK=\"$STLSHM/pid.lock\"\nLAMOINST=\"$STLSHM/LastMOInst.txt\"\nGDBGAMERUN=\"$STLSHM/gdbgamerun.sh\"\nGDBRUN=\"$STLSHM/gdbrun.sh\"\nVRINITLOCK=\"$STLSHM/vrinit.lock\"\nIGCSINITLOCK=\"$STLSHM/igcsinit.lock\"\nVRINITRESULT=\"$STLSHM/vrinit.conf\"\nVWRUN=\"$STLSHM/vwrun.txt\"\nSTELILIST=\"$STLSHM/SteamLibraries.txt\"\nUUUPATCH=\"${PROGNAME,,}-uuu-patch\"\nUUUPATCHCOMMAND=\"$STLSHM/${UUUPATCH}.sh\"\nGCD=\"GameCfgDiffers\"\nOVFS=\"openvr_fsr\"\nOVRA=\"openvr_api.dll\"\nOVRMOD=\"openvr_mod.cfg\"\nGWXTEMP=\"$STLSHM/gamewinXID.txt\"\nTRAYCUSC=\"$STLSHM/customscript\"\nTEMPGPIDFILE=\"$STLSHM/gamepid.txt\"\nSTLSETENTRIES=\"$STLSHM/setentries.txt\"\nCLOSEVARS=\"$STLSHM/closevars.txt\"\nSTLRAWENTRIES=\"$STLSHM/rawentries.txt\"\nSTLNOBLOCKENTRIES=\"$STLSHM/noblockentries.txt\"\nSTLCATSORTENTRIES=\"$STLSHM/catsortentries.txt\"\nUPWINTMPL=\"$STLSHM/upwintmpl.txt\"\nSTLMINWIN=\"$STLSHM/minwin.txt\"\nSTLMENUVALBLOCKCFG=\"$STLSHM/$MENUBLOCK\"\nVARSIN=\"$STLSHM/vars-in.txt\"\nFUPDATE=\"$STLSHM/fupdate.txt\"\nSTPAVARS=\"$STLSHM/steampaths.txt\"\nPROTONCSV=\"$STLSHM/ProtonCSV.txt\"\nLOGINUSERSCSV=\"$STLSHM/LoginUsersCSV.txt\"\nSWRF=\"$STLSHM/SWR.txt\"\nUWRF=\"$STLSHM/UWR.txt\"\nEWRF=\"$STLSHM/EWR.txt\"\nNOSTSGDBIDSHMFILE=\"$STLSHM/NOSTSGDBID.txt\"\nNON=\"none\"\nNOPE=\"nope\"\nTMPL=\"template\"\nDLWINEVERSION=\"$NON\"\nGAMENAME=\"$NON\"\nEARLYUSEWINE=0\nFAVMENU=\"$MTEMP/favmenu\"\nGAMEMENU=\"$MTEMP/gamemenu\"\nGAMETEMPMENU=\"$MTEMP/gametemplmenu\"\nGLOBALMENU=\"$MTEMP/globalmenu\"\nGAMMENU=\"Game Menu\"\nSETMENU=\"Settings Menu\"\nFAVOMENU=\"Favorite Menu\"\nLOSE=\"Local Settings\"\nAPDA=\"Application Data\"\nAPD=\"AppData\"\nADRO=\"$APD/Roaming\"\nADLO=\"$APD/Local\"\nADLOLO=\"$APD/LocalLow\"\nEAGA=\"EA Games\"\nLAGA=\"Larian Studios\"\nBIOW=\"BioWare\"\nSAGE=\"Saved Games\"\nCDPR=\"CD Projekt Red\"\nLSAD=\"$LOSE/$APDA\"\nRUNCONTY=\"$NON\"\nWINX=\"800\"\nWINY=\"600\"\nF1ACTION=\"bash -c OpenWiki\"\nF1ACTIONCG=\"bash -c setColGui\"\nBTS=\"backup-timestamp\"\nDUMMYBIN=\"echo\"\nSTLAIDSIZE=\"12\"\nINFLATPAK=0\nWDIB=\"wine-discord-ipc-bridge\"\nFIXGAMESCOPE=0\nSMALLDESK=0\nVTX_DOTNET_ROOT=\"c:\\\\Program Files\\\\dotnet\\\\\\\\\"\nSTLQUIET=0\n\n# Hardcoded SLR AppID for native games -- See `setSLRReap`\n# TODO refactor to be array for native AIDs? Some games (CS2) can use SLR 3.0\n# We should allow the user to choose whether to use SLE 1.0 or 3.0 for native games\nSLRAID=\"1070560\"\nDEFWINEDPI=\"96\"\nWINEDPIVALUES=\"${DEFWINEDPI}!120!150!240\"\nSGDBTIMEOUT=\"15\"\nSGDBRETRIES=\"5\"\n\n### default vars ###\n\nif [ -z \"$XDG_CONFIG_HOME\" ]; then\n\tSTLCFGDIR=\"$HOME/.config/${PROGNAME,,}\"\t\t\t\t\t\t\t\t\t\t\t\t\t# either hardcoded config dir\nelse\n\tSTLCFGDIR=\"$XDG_CONFIG_HOME/${PROGNAME,,}\"\t\t\t\t\t\t\t\t\t\t\t\t# or in XDG_CONFIG_HOME if the user set the variable\nfi\n\n#486\nfunction wip {\nif [ -z \"$XDG_CACHE_HOME\" ]; then\n\tSTLCACHEDIR=\"$HOME/.cache/${PROGNAME,,}\"\nelse\n\tSTLCACHEDIR=\"$XDG_CACHE_HOME/${PROGNAME,,}\"\nfi\n\nif [ -z \"$XDG_DATA_HOME\" ]; then\n\tSTLDATADIR=\"$HOME/.local/share/${PROGNAME,,}\"\nelse\n\tSTLDATADIR=\"$XDG_DATA_HOME/${PROGNAME,,}\"\nfi\n}\n\nSYSTEMSTLCFGDIR=\"$PREFIX/share/${PROGNAME,,}\"\t\t\t\t\t\t\t\t\t\t\t\t# systemwide config dir\nBASELOGDIR=\"$STLCFGDIR/logs\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# base logfile dir\nDEFLOGDIR=\"$BASELOGDIR/${PROGNAME,,}\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# default logfile dir\n\nif [ -z \"$LOGDIR\" ]; then\n\tLOGDIR=\"$DEFLOGDIR\"\nfi\n\nLOGDIRID=\"$LOGDIR/id\"\n\nLOGDIRTI=\"$LOGDIR/title\"\nSTLPROTONLOGDIR=\"$BASELOGDIR/proton\"\nSTLPROTONIDLOGDIR=\"$STLPROTONLOGDIR/id\"\nSTLPROTONTILOGDIR=\"$STLPROTONLOGDIR/title\"\nSTLDXVKLOGDIR=\"$BASELOGDIR/dxvk\"\nSTLWINELOGDIR=\"$BASELOGDIR/wine\"\nSTLVKD3DLOGDIR=\"$BASELOGDIR/vkd3d\"\nSTLGLLOGDIR=\"$BASELOGDIR/gamelaunch\"\nSTLGLLOGDIRID=\"$STLGLLOGDIR/id\"\nSTLGLLOGDIRTI=\"$STLGLLOGDIR/title\"\nPLAYTIMELOGDIR=\"$BASELOGDIR/playtime\"\nSTLGAMEDIR=\"$STLCFGDIR/gamecfgs\"\nSTLGUIDIR=\"$STLCFGDIR/guicfgs\"\nSTLGAMEDIRID=\"$STLGAMEDIR/id\"\nSTLCUSTVARSDIR=\"$STLGAMEDIR/customvars\"\nSTLGAMEDIRTI=\"$STLGAMEDIR/title\"\nSTLCOLLECTIONDIR=\"$STLCFGDIR/collections\"\nSTLREGDIR=\"$STLCFGDIR/regs\"\nSTLDLDIR=\"$STLCFGDIR/downloads\"\nSTLBACKDIR=\"$STLCFGDIR/backup\"\nBACKEX=\"$STLBACKDIR/exclude\"\nHIDEDIR=\"$STLCFGDIR/hide\"\nSTLTEMPDIR=\"$STLCFGDIR/temp\"\nCODA=\"compatdata\"\nSTLCOMPDAT=\"$STLCFGDIR/$CODA\"\nMETADIR=\"$STLCFGDIR/meta\"\nGEMETA=\"$METADIR/id/general\"\nCUMETA=\"$METADIR/id/custom\"\nEVMETAID=\"$METADIR/eval/id\"\nEVMETASKIPID=\"$EVMETAID/skip\"\nEVMETACUSTOMID=\"$EVMETAID/custom\"\nEVMETAADDONID=\"$EVMETAID/addon\"\nEVMETATITLE=\"$METADIR/eval/title\"\nEVMETAOLD=\"$METADIR/eval/old\"\nEVALSC=\"evaluatorscript\"\nGECUST=\"get-current-step\"\nISCRI=\"iscriptevaluator\"\nLIINPA=\"linux_install_path\"\nSTEWOS=\"Steamworks Shared\"\nLECO=\"legacycompat\"\nFRSTATE=\"$STLSHM/firuState.txt\"\nTIGEMETA=\"$METADIR/title/general\"\nTICUMETA=\"$METADIR/title/custom\"\nDRC=\"drive_c\"\nDRCU=\"$DRC/users\"\nSTUS=\"steamuser\"\nPUBUS=\"Public\"\nSUBADIR=\"$STLBACKDIR/$STUS\"\nSUBADIRID=\"$SUBADIR/id\"\nSUBADIRTI=\"$SUBADIR/title\"\nRSSUB=\"reshade-shaders\"\nWTDLDIR=\"$STLDLDIR/winetricks\"\nDLWT=\"$WTDLDIR/src/winetricks\"\nSTLSHADDIR=\"$STLDLDIR/shaders\"\nSHADREPOLIST=\"$STLSHADDIR/repolist.txt\"\nSHADERREPOBLOCKLIST=\"$STLSHADDIR/repoblocklist.txt\"\nTWEAKDIR=\"$STLCFGDIR/tweaks\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the parent directory for all user tweakfiles\nUSERTWEAKDIR=\"$TWEAKDIR/user\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the place for the users own main tweakfiles\nTWEAKCMDDIR=\"$TWEAKDIR/cmd\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# dir for scriptfiles used by tweakfiles\nSBSTWEAKDIR=\"$TWEAKDIR/sbs\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# directory for optional config overrides for easier side-by-side VR gaming\nMO2DLDIR=\"$STLDLDIR/mo2\"\nHMMDLDIR=\"$STLDLDIR/hedgemodmanager\"\nHMMVERFILE=\"$HMMDLDIR/hmmver.txt\"\nCONTYDLDIR=\"$STLDLDIR/conty\"\nX64DBGDLDIR=\"$STLDLDIR/$X64D\"\nGEOELFDLDIR=\"$STLDLDIR/geo11\"\nWDIBDLDIR=\"$STLDLDIR/${WDIB}\"\nEWDIB=\"${WDIB//-}\"\nRUNWDIB=\"$WDIBDLDIR/${EWDIB}.exe\"\nLGEOELFSYM=\"$GEOELFDLDIR/latest\"\nCUSTOMFALLBACKPIC=\"$STLDLDIR/custom-fallback.png\"\nVTX=\"vortex\"\nVOGAT=\"${VTX}games.txt\"\nSTLVORTEXDIR=\"$STLCFGDIR/$VTX\"\nVORTEXDLDIR=\"$STLDLDIR/$VTX\"\nVORTSETCMD=\"$STLSHM/vortset.cmd\"\nVTST=\"$STLSHM/vsetup.txt\"\nSPEK=\"SpecialK\"\nSPEKDLDIR=\"$STLDLDIR/${SPEK,,}\"\nFWS=\"FlawlessWidescreen\"\nFWSDLDIR=\"$STLDLDIR/${FWS,,}\"\nYADAIDLDIR=\"$STLDLDIR/yadappimage\"\nDOTN=\"dotnet\"\nMO2=\"mo2\"\nSTLMO2DIR=\"$STLCFGDIR/$MO2\"\nSTLMO2DLDATDIR=\"$STLMO2DIR/dldata\"\nMO=\"ModOrganizer\"\nHMM=\"HedgeModManager\"\nHMMNICE=\"Hedge Mod Manager\"\nHMMSTABLE=\"stable\"\nHMMDEV=\"nightly\"\nHMMAUTO=\"auto\"\nHMMDF=\"$HMM-${PROGNAME,,}.desktop\"\nHMMDFDL=\"$HMM-${PROGNAME,,}-dl.desktop\"\nHMMDFPA=\"$HOME/.local/share/applications/$HMMDF\"\nHMMDFDLPA=\"$HOME/.local/share/applications/$HMMDFDL\"\nMORDIR=\"$DRC/Modding\"\nMOERDIR=\"$MORDIR/MO2\"\nMOERPATH=\"$MOERDIR/${MO}.exe\"\nSTLHMMDIR=\"$STLCFGDIR/${HMM,,}\"\nDOCS=\"Documents\"\nMYDOCS=\"My $DOCS\"\nMYGAMES=\"My Games\"\nPLACEHOLDERAID=\"31337\"\nPLACEHOLDERGN=\"Placeholder\"\nDPRS=\"Depressurizer\"\nDPRSDLDIR=\"$STLDLDIR/${DPRS,}\"\nDEPS=\"Dependencies\"\nDEPSGE=\"${DEPS}Gui.exe\"\nDEPSDLDIR=\"$STLDLDIR/${DEPS,}\"\nDEPSLATDIR=\"$DEPSDLDIR/latest\"\nDEPSL64=\"$DEPSLATDIR/64/$DEPSGE\"\nDEPSL32=\"$DEPSLATDIR/32/$DEPSGE\"\nMAHU=\"mangohud\"\nMANGOAPP=\"mangoapp\"\nMAHUCFGDIR=\"$STLCFGDIR/$MAHU\"\nMAHUCID=\"$MAHUCFGDIR/id\"\nMAHUCTI=\"$MAHUCFGDIR/title\"\nMAHUTMPL=\"$MAHUCFGDIR/$MAHU-${PROGNAME,,}-template.conf\"\nMAHULOGDIR=\"$BASELOGDIR/$MAHU\"\nMAHULID=\"$MAHULOGDIR/id\"\nMAHULTI=\"$MAHULOGDIR/title\"\nPFX86=\"Program Files (x86)\"\nPFX86S=\"$PFX86/Steam\"\nAPIN=\"appinfo\"\nSLO=\"Steam Launch Option\"\nSOMEPOPULARWINEPAKS=\"dotnet4 quartz xact\"\nSOMEWINEDEBUGOPTIONS=\"-all,+steam,+vrclient,+vulkan\"\nDEFSGDBHERODIMS=\"3840x1240,1920x620\"\nDEFSGDBBOXARTDIMS=\"600x900\"\nDEFSGDBTENFOOTDIMS=\"920x430,460x215\"\nSGDBHASFILEOPTS=\"skip!backup!replace\"\nSGDBTYPEOPTS=\"static!animated!static,animated!animated,static\"\nSGDBTAGOPTS=\"any!true!false\"\nSGDBHEROSTYLEOPTS=\"alternate,blurred,material\"\nSGDBLOGOSTYLEOPTS=\"official,white,black,custom\"\nSGDBGRIDSTYLEOPTS=\"alternate,blurred,white_logo,material,no_logo\"\nSGDBTNFTSTYLEOPTS=\"alternate,blurred,white_logo,material\"\nGETSTAID=\"99[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]99\"\n\nSTLGAMES=\"$STLCFGDIR/games\"\nSTLGDESKD=\"$STLGAMES/desktop\"\nSTLIDFD=\"$STLGAMES/desktopfiles\"\nSTLISLDFD=\"$STLGAMES/sldesktopfiles\"\nSTLAPPINFOIDDIR=\"$STLGAMES/$APIN\"\nSTLGHEADD=\"$STLGAMES/header\"\nSTLGSAD=\"$STLGAMES/standalone\"\nSTLGICONS=\"$STLGAMES/icons\"\nSTLGDECKCOMPAT=\"$STLGAMES/deckinfo\"\nSTLGICO=\"$STLGICONS/ico\"\nSTLGZIP=\"$STLGICONS/zip\"\nSTLGPNG=\"$STLGICONS/png\"\nSTLGSAPD=\"$STLGSAD/titles\"\nSTLGSACD=\"$STLGSAD/$CODA\"\nSTLGPEVKD=\"$STLGAMES/pev\"\nMO2INSTFAIL=\"$STLSHM/${MO}-failed.txt\"\nABSGAMEEXEPATH=\"$NON\"\nGEOELF=\"geo-11\"\nISORIGIN=0\n\n#STLGSCPTD=\"$STLGAMES/scripts\"\nNOGAMES=\",70_2260196511,228980,858280,961940,1054830,1070560,1113280,1245040,1391110,1420170,\"\n# Taken from GE-Proton7-24 changelog, removing some duplicates\nWINE_FSR_CUSTOM_RESOLUTIONS=(\n\t# 1080p\n\t\"960x540\"\n\t\"1129x635\"\n\t\"1280x720\"\n\t\"1477x831\"\n\n\t# 2K\n\t\"1506x847\"\n\t\"1706x960\"\n\t\"1970x1108\"\n\n\t# Ultra-Wide\n\t\"1720x720\"\n\t\"2024x847\"\n\t\"2293x960\"\n\t\"2646x1108\"\n\n\t# 4K\n\t\"1920x1080\"\n\t\"2259x1270\"\n\t\"2560x1440\"\n\t\"2954x1662\"\n\n\t# 32:9 (5120x1440) -- Samsung Neo G9\n\t\"2560x720\"\n\t\"3012x847\"\n\t\"3413x960\"\n\t\"3839x1108\"\n)\n\n# Hex patterns for various blocks in shortcuts.vdf that we can grep for -- Casing matters!\nSHORTCUTVDFFILESTARTHEXPAT=\"0073686f7274637574730000300002\"  # Bytes for beginning of the shortcuts.vdf file\nSHORTCUTVDFENTRYBEGINHEXPAT=\"00080800.*?0002\"  # Pattern for beginning of shortcut entry in shortcuts.vdf -- Beginning of file has a different pattern, but every other pattern begins like this\nSHORTCUTSVDFENTRYENDHEXPAT=\"000808\"  # Pattern for how shortcuts.vdf blocks end\nSHORTCUTVDFAPPIDHEXPAT=\"617070696400\"  # 'appid'\nSHORTCUTVDFNAMEHEXPAT=\"(014170704e616d6500|6170706e616d6500)\"  # 'AppName' and 'appname'\nSHORTCUTVDFEXEHEXPAT=\"000145786500\"  # 'Exe' ('exe' is 6578650a if we ever need it)\nSHORTCUTVDFSTARTDIRHEXPAT=\"0001537461727444697200\"  # 'StartDir'\nSHORTCUTVDFICONHEXPAT=\"000169636f6e00\"  # 'icon'\nSHORTCUTVDFENDPAT=\"0001\"  # Generic end pattern for each shortcut.vdf column\n\nfunction setGNID {\n\t# only keep alphabet chars\n\tINGN=\"$(tr -cd '[:alnum:]' <<< \"${1^^}\")\"\n\tINGN=\"${INGN//[[:digit:]]/}\"\n\tMIDNUMSIZE=$((STLAIDSIZE -4))\n\n\tif [ \"${#INGN}\" -gt \"$MIDNUMSIZE\" ]; then\n\t\tINGN=\"${INGN:0:MIDNUMSIZE}\"\n\tfi\n\n\twhile [ \"${#INGN}\" -lt \"$MIDNUMSIZE\" ]; do\n\t\tINGN=\"${INGN}A\"\n\tdone\n\n\tALPHARR=(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z)\n\n\tfunction numberOut {\n\t\tfor n in \"${!ALPHARR[@]}\"; do\n\t\t\tif [ \"${ALPHARR[$n]}\" == \"$1\" ]; then\n\t\t\t\tNUM=\"$((n +1))\"\n\t\t\t\tif [ \"$NUM\" -gt 9 ]; then\n\t\t\t\t\tprintf \"%s\" \"${NUM:1:1}\"\n\t\t\t\telse\n\t\t\t\t\tprintf \"%s\" \"${NUM:0:1}\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone\n\t}\n\n\tfunction outNum {\n\t\ti=0\n\t\twhile [ \"$i\" -lt \"${#1}\" ]; do\n\t\t\tnumberOut \"${1:$i:1}\"\n\t\t\ti=$((i+1))\n\t\tdone\n\t\tprintf \"\\n\"\n\t}\n\n\tMIDNUM=\"$(outNum \"$INGN\")\"\n\techo \"99${MIDNUM}99\"\n}\n\nfunction initAID {\n\tSTLPLAY=0\n\tif [ -n \"$STEAM_COMPAT_APP_ID\" ]; then\n\t\tAID=\"$STEAM_COMPAT_APP_ID\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID from STEAM_COMPAT_APP_ID to '$AID'\" \"P\"\n\tfi\n\n\tif [ -z \"$AID\" ] || [ \"$AID\" -eq \"0\" ]; then\n\t\t# shellcheck disable=SC2154\t\t# SteamAppId comes from Steam\n\t\tif [ -z \"$SteamAppId\" ]; then\n\t\t\tif grep -q \"^play\" <<< \"$@\" && [ -n \"$2\" ] && [ -z \"$3\" ] && [ \"$2\" != \"gui\" ] && [ \"$2\" != \"ed\" ]; then\n\t\t\t\tSTLPLAY=1\n\t\t\t\tif [ \"$2\" -eq \"$2\" ] 2>/dev/null ; then\n\t\t\t\t\tAID=\"$2\"\n\t\t\t\telif [ -f \"$2\" ]; then\n\t\t\t\t\tGN=\"${2##*/}\"\n\t\t\t\t\tAID=\"$(setGNID \"$GN\")\"\n\t\t\t\tfi\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID to '$PROGCMD' ID '$AID'\" \"P\"\n\t\t\telif grep -q \"^play\" <<< \"$@\" && [ -f \"$3\" ]; then\n\t\t\t\tSTLPLAY=1\n\t\t\t\tGN=\"${3##*/}\"\n\t\t\t\tAID=\"$2\"\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID to '$PROGCMD' ID '$AID'\" \"P\"\n\t\t\telse\n\t\t\t\tAID=\"$PLACEHOLDERAID\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID to PLACEHOLDERAID '$AID'\" \"P\"\n\t\t\tfi\n\t\telse\n\t\t\tif [ \"$SteamAppId\" -eq \"0\" ]; then\n\t\t\t\tAID=\"${STEAM_COMPAT_DATA_PATH##*/}\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID from STEAM_COMPAT_DATA_PATH '$STEAM_COMPAT_DATA_PATH' to '${STEAM_COMPAT_DATA_PATH##*/}', because SteamAppId is '$SteamAppId'\" \"P\"\n\t\t\telse\n\t\t\t\tAID=\"$SteamAppId\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set AID to SteamAppId '$SteamAppId' coming from Steam\" \"P\"\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ -n \"$STEAM_COMPAT_DATA_PATH\" ]; then\n\t\tOSCDP=\"$STEAM_COMPAT_DATA_PATH\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set OSCDP to STEAM_COMPAT_DATA_PATH '$STEAM_COMPAT_DATA_PATH'\" \"P\"\n\tfi\n}\n\nSTLFAVMENUCFG=\"$STLCFGDIR/$FACO\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# optional config (in fact just a list with variables) which holds all entries for the individual favorites menu\nSTLMENUSORTCFG=\"$STLCFGDIR/$MENSO\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# holds the category sort order for all menus\nSTLMENUBLOCKCFG=\"$STLCFGDIR/$MENUBLOCK\"\n#STARTEDITORCFGLIST\nSTLDEFGLOBALCFG=\"$STLCFGDIR/global.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t# global config\nSTLDEFGAMECFG=\"$STLCFGDIR/default_template.conf\"\t\t\t\t\t\t\t\t\t\t\t# the default config template used to create new per game configs - will be auto created if not found\nGLOBCUSTVARS=\"$STLCUSTVARSDIR/global-custom-vars.conf\"\t\t\t\t\t\t\t\t\t\t# global config file for user defined custom variables\n\nfunction setSDCfg {\nSTLSDLCFG=\"$STLCFGDIR/steamdeck.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Steam Deck config\n}\n\nfunction setAIDCfgs {\nSTLGAMECFG=\"$STLGAMEDIRID/$AID.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the game specific config file which is used by the launched game - created from $STLDEFGAMECFG if not found\nTWEAKCFG=\"$USERTWEAKDIR/$AID.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the game specific shareable config tweak overrides\nSBSTWEAKCFG=\"$SBSTWEAKDIR/$AID.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the game specific shareable config sbs tweak overrides\nLOGFILE=\"$LOGDIRID/$AID.log\"\nGAMECUSTVARS=\"$STLCUSTVARSDIR/$AID.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t# game specific config file for user defined custom variables\n}\n\nSTLURLCFG=\"$STLCFGDIR/url.conf\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# url config\nCUSTOMPROTONLIST=\"$STLCFGDIR/protonlist.txt\"\t\t\t\t\t\t\t\t\t\t\t\t# plain textfile with additional user proton versions\nVORTEXSTAGELIST=\"$STLVORTEXDIR/stages.txt\"\t\t\t\t\t\t\t\t\t\t\t\t\t# plain textfile with Vortex Stage directories - one per Steam Library partition\nSEENVORTEXGAMES=\"$STLVORTEXDIR/$CODA/seen$VOGAT\"\nEXGLOB=\"$BACKEX/exclude-global.txt\"\n#ENDEDITORCFGLIST\n\nSTLLANGDIR=\"$STLCFGDIR/lang\"\nSTLDEFLANG=\"english\"\n\nSTLDXVKDIR=\"$STLCFGDIR/dxvk\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# base dxvk config dir from where default per game configs are automatically parsed\nISGAME=0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# 1=game was launched, 2=windows game, 3=linux game\nWFEAR=\"waitforexitandrun\"\nSA=\"steamapps\"\nSAC=\"$SA/common\"\nL2EA=\"link2ea\"\nCTD=\"compatibilitytools.d\"\nSLR=\"SteamLinuxRuntime\"\nSTERU=\"steam-runtime\"\nBIWI=\"bin/wine\"\nDBW=\"dist/$BIWI\"\nFBW=\"files/$BIWI\"\nSTLPROTDIR=\"$STLCFGDIR/proton\"\nSTLPROTCOMPDATDIR=\"$STLPROTDIR/$CODA\"\nSTLPROTSTUSDIR=\"$STLPROTDIR/$STUS\"\nSTLPROTPUBUSDIR=\"$STLPROTDIR/$PUBUS\"\nSTLEARLYPROTCONF=\"$STLPROTDIR/earlyproton.conf\"\nPROCU=\"proton/custom\"\nCTVDF=\"compatibilitytool.vdf\"\nTOMA=\"toolmanifest.vdf\"\nLIFOVDF=\"libraryfolders.vdf\"\nSCV=\"sharedconfig.vdf\"\nAIVDF=\"$APIN.vdf\"\nAITXT=\"$APIN.txt\"\nAAVDF=\"appcache/$AIVDF\"\nAPVDF=\"appcache/packageinfo.vdf\"\nUSDA=\"userdata\"\nSCVDF=\"shortcuts.vdf\"\nSRSCV=\"7/remote/$SCV\"\nLCV=\"localconfig.vdf\"\nCOCOV=\"config/config.vdf\"\nLUCOV=\"config/loginusers.vdf\"\nSCSHVDF=\"screenshots.vdf\"\nSCRSH=\"760/$SCSHVDF\"\nLASTRUN=\"$LOGDIR/lastrun.txt\"\nSAIT=\"steam_appid.txt\"\nDXGI=\"dxgi.dll\"\nD3D9=\"d3d9.dll\"\nD3D11=\"d3d11.dll\"\nD3D47=\"d3dcompiler_47.dll\"\nOGL32=\"opengl32.dll\"\nAUTO=\"auto\"\nD3D47DLDIR=\"$STLDLDIR/${D3D47%.*}\"\nSPEKDLLNAMELIST=\"$AUTO!$DXGI!$D3D9!$D3D11!$OGL32\"\nRESHADEDLLNAMELIST=\"$DXGI!$D3D9!$D3D11!$OGL32!$DXGI,$D3D9\"\nSOMEWINEDLLOVERRIDES=\"dinput8=n,b!dxgi=n,b!d3d9=n,b!${D3D47//.dll}=n,b!xaudio2_7=n,b\"\nRS_DX_DEST=\"$DXGI\"\nRS_D9_DEST=\"$D3D9\"\nRESH=\"ReShade\"\nRSSU=\"${RESH}_Setup\"\nRSINI=\"${RESH}.ini\"\nRSTXT=\"${RESH}.txt\"\nIGCS=\"IGCSInjector\"\nUUU=\"UniversalUE4Unlocker\"\nLFM=\"launchFavMenu\"\nLGAM=\"launchGameMenu\"\nLGATM=\"launchGameTemplateMenu\"\nLGLM=\"launchGlobalMenu\"\nLCM=\"launchCategoryMenu\"\nHEADLINEFONT=\"larger\"\nFONTSIZES=\"!xx-small!x-small!small!smaller!medium!large!larger!!x-large!xx-large!\"\nSREG=\"system.reg\"\nNSGA=\"non-steam game\"\nFSGDBA=\"FetchSteamGridDBArtwork\"\nSGA=\"set game artwork\"\nBTVP=\"$DRC/Program Files/Black Tree Gaming Ltd/${VTX^}\"\nVTXRAA=\"resources/app.asar\"\nRABP=\"${VTXRAA}.unpacked/bundledPlugins\"\n\n# make SC happy:\nGUI_CUSTOMCMD=\"\"\n################\n\nfunction setSteamPath {\n\tHSR=\"$HOME/.steam/root\"\n\tHSS=\"$HOME/.steam/steam\"\n\n\tif [ -z \"${!1}\" ]; then\n\t\tif [ -e \"${HSR}/${2}\" ]; then\n\t\t\t# readlink might be better in both STPAs here to be distribution independant, possible side effects not tested!\n\t\t\tSTPA=\"$(readlink -f \"${HSR}/${2}\")\"\n\t\t\texport \"$1\"=\"$STPA\"\n\t\t\techo \"$1=\\\"$STPA\\\"\" >> \"$STPAVARS\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set '$1' to '$STPA'\"\n\t\telif [ -e \"${HSS}/${2}\" ]; then\n\t\t\tSTPA=\"$(readlink -f \"${HSS}/${2}\")\"\n\t\t\texport \"$1\"=\"$STPA\"\n\t\t\techo \"$1=\\\"$STPA\\\"\" >> \"$STPAVARS\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set '$1' to '$STPA'\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$2' not found for variable '$1' in '$HSR' or '$HSS'!\"\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$1' already defined as '${!1}'\"\n\t\techo \"$1=\\\"${!1}\\\"\" >> \"$STPAVARS\"\n\tfi\n}\n\nfunction setSteamPaths {\n\tif [ -f \"$STPAVARS\" ] && grep -q \"^SUSDA\" \"$STPAVARS\" ; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Reading Steam Path variables from '$STPAVARS'\"\n\t\tloadCfg \"$STPAVARS\" X\n\telse\n\t\tsetSteamPath \"SROOT\"\n\t\tmkProjDir \"$SROOT/$CTD\"\n\t\tsetSteamPath \"SUSDA\" \"$USDA\"\n\t\tsetSteamPath \"DEFSTEAMAPPS\" \"$SA\"\n\t\tsetSteamPath \"DEFSTEAMAPPSCOMMON\" \"$SAC\"\n\t\tsetSteamPath \"CFGVDF\" \"$COCOV\"\n\t\tsetSteamPath \"LOGUVDF\" \"$LUCOV\"\n\t\tsetSteamPath \"LFVDF\" \"$SA/$LIFOVDF\"\n\t\tsetSteamPath \"FAIVDF\" \"$AAVDF\"\n\t\tsetSteamPath \"PIVDF\" \"$APVDF\"\n\t\tsetSteamPath \"STEAMCOMPATOOLS\" \"$CTD\"\n\t\tsetSteamPath \"ICODIR\" \"steam/games\"\n\n\t\tif [ -z \"$STEAM_COMPAT_CLIENT_INSTALL_PATH\" ]; then\n\t\t\texport STEAM_COMPAT_CLIENT_INSTALL_PATH=\"$SROOT\"\n\t\t\techo \"STEAM_COMPAT_CLIENT_INSTALL_PATH=\\\"$SROOT\\\"\" >> \"$STPAVARS\"\n\t\tfi\n\n\t\tif [ -f \"$STLDEFGLOBALCFG\" ] && grep -q \"^STEAMUSERID=\" \"$STLDEFGLOBALCFG\" ; then\n\t\t\tSTEAMUSERID=\"$(grep \"^STEAMUSERID=\" \"$STLDEFGLOBALCFG\" | grep -o \"[[:digit:]]*\")\"\n\t\t\tSTUIDPATH=\"$SUSDA/$STEAMUSERID\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Parsing Steam UserID from global config as '$STEAMUSERID' -- STUIDPATH is now '$STUIDPATH'\"\n\t\telse\n\t\t\tif [ -d \"$SUSDA\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Trying to determine Steam UserID and userdata path\"\n\n\t\t\t\tSTEAMUSERID=\"\"\n\t\t\t\tSTUIDPATH=\"\"\n\n\t\t\t\t# Try to set the path to the userdata folder (this contains grids, shortcuts.vdf, etc)\n\t\t\t\t# fillLoginUsersCSV will fall back to taking the first userdata folder in the Steam userdata dir and will set it to MostRecent=1\n\t\t\t\t# if it doesn't get any matches in loginusers.vdf, so we don't have to do the fallback here\n\t\t\t\tif [ ! -f \"$LOGINUSERSCSV\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Filling Users CSV\"\n\t\t\t\t\tfillLoginUsersCSV\n\t\t\t\tfi\n\n\t\t\t\t# Try to find the Steam Userdata folder and current Steam UserID based on generated LoginUsersCSV\n\t\t\t\t# This allows us to select the currently logged in user as the Steam User we want to use, meaning\n\t\t\t\t# we will use their userdata directory.\n\t\t\t\t#\n\t\t\t\t# If the currently logged in user changes we will then be able to use their userdata directory instead\n\t\t\t\t# This allows us to use the correct userdata folder for the currently logged in user by default when\n\t\t\t\t# there are multiple Steam user accounts logged into the same machine\n\t\t\t\t#\n\t\t\t\t# See also: https://github.com/sonic2kk/steamtinkerlaunch/issues/1140\n\t\t\t\twhile read -r loginuser; do\n\t\t\t\t\tLOGINUSERCSVSHORTAID=\"$( echo \"${loginuser}\" | cut -d ';' -f2  )\"\n\t\t\t\t\tLOGINUSERCSVMOSTRECENT=\"$( echo \"${loginuser}\" | cut -d ';' -f3  )\"\n\n\t\t\t\t\t# if the loginuser loop variable is the MostRecent in loginusers.vdf, then:\n\t\t\t\t\t# - set the current Steam User ID to the Short UserID\n\t\t\t\t\t# - set the Steam userdata path to the base path + the Short UserID\n\t\t\t\t\tif [ \"${LOGINUSERCSVMOSTRECENT}\" -eq 1 ]; then\n\t\t\t\t\t\tSTEAMUSERID=\"${LOGINUSERCSVSHORTAID}\"\n\t\t\t\t\t\tSTUIDPATH=\"${SUSDA}/${STEAMUSERID}\"\n\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found MostRecent Steam User '${STEAMUSERID}' from '${LOGINUSERSCSV}' - STUIDPATH is now '${STUIDPATH}'\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\tdone < \"$LOGINUSERSCSV\"\n\n\t\t\t\t# Since fillLoginUsersCSV should handle the fallback for us, if we still have no matches,\n\t\t\t\t# assume no users found at all, meaning no users are logged in!\n\t\t\t\t# This will cause problems, so log a warning\n\t\t\t\t#\n\t\t\t\t# Hopefully this never happens under normal usage... We should always be able to find the Steam User\n\t\t\t\tif [ -z \"${STEAMUSERID}\" ] || [ -z \"${STUIDPATH}\" ]; then\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not find any logged in Steam users in '$LOGINUSERSCSV' (are any users logged in?) - other variables depend on it, expect problems!\" \"E\"\n\t\t\t\telif [ ! -d \"${STUIDPATH}\" ]; then\n\t\t\t\t\t# If we were able to get the Most Recent Steam user but the userdata path for this user with this UserID does not actually exist, something has gone horribly wrong!\n\t\t\t\t\t# One possible but unlikely scenario is that the MostRecent user in LognUsersCSV file was removed from the Steam Client, so the userdata path would no longer exist\n\t\t\t\t\t# Users should remove /dev/shm/steamtinkerlaunch if the accounts or Steam Client config changes in any way so this would only be a temporary issue\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Built Steam userdata path for User ID '${STEAMUSERID}' at path '${STUIDPATH}', but this path does not exist! This will probably cause problems!\" \"E\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Steam '$USDA' directory not found, other variables depend on it - Expect problems\" \"E\"\n\t\t\tfi\n\t\tfi\n\n\t\tSUIC=\"$STUIDPATH/config\"\n\t\tFLCV=\"$SUIC/$LCV\"\n\n\t\t{\n\t\techo \"STUIDPATH=\\\"$STUIDPATH\\\"\"\n\t\techo \"STEAMUSERID=\\\"$STEAMUSERID\\\"\"\n\t\techo \"SUIC=\\\"$SUIC\\\"\"\n\t\techo \"FLCV=\\\"$FLCV\\\"\"\n\t\t} >> \"$STPAVARS\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found SteamUserId '$STEAMUSERID'\"\n\tfi\n}\n\nfunction setAwkBin {\n\tif [ -z \"$AWKBIN\" ];then\n\t\tif [ -x \"$(command -v \"gawk\")\" ]; then\n\t\t\tAWKBIN=\"gawk\"\n\t\t\tif [ -z \"$1\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$AWKBIN' as an 'awk' variant. It should work without any issues, because 'gawk' was tested completely\"\n\t\t\tfi\n\t\telif [ -x \"$(command -v \"mawk\")\" ]; then\n\t\t\tAWKBIN=\"mawk\"\n\t\t\tif [ -z \"$1\" ]; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Only found '$AWKBIN' as an 'awk' variant. It might be incompatible in several functions, as only 'gawk' was tested completely!\"\n\t\t\tfi\n\t\telif [ -x \"$(command -v \"awk\")\" ]; then\n\t\t\tAWKBIN=\"mawk\"\n\t\t\tif [ -z \"$1\" ]; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Only found '$AWKBIN' as an 'awk' variant. It might be incompatible in several functions, as only 'gawk' was tested completely!\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -z \"$AWKBIN\" ];then\n\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No 'awk' variant found, but at least one is required (best would be 'gawk') - Can't continue\" \"E\"\n\t\t\texit\n\t\telse\n\t\t\texport AWKBIN=\"$AWKBIN\"\n\t\tfi\n\tfi\n}\n\nfunction awk {\n\tif [ -z \"$AWKBIN\" ];then\n\t\tsetAwkBin \"X\"\n\tfi\n\t\"$AWKBIN\" \"$@\"\n}\n\nfunction OpenWikiPage {\n\tif [ -n \"$1\" ]; then\n\t\tif grep -q \"$PPW\" <<< \"$1\"; then\n\t\t\tWIKURL=\"$1\"\n\t\telse\n\t\t\tWIKURL=\"$PPW/$1\"\n\t\tfi\n\telse\n\t\tif [ -n \"$CURWIKI\" ]; then\n\t\t\tWIKURL=\"$CURWIKI\"\n\t\tfi\n\tfi\n\n\tif [ -n \"$WIKURL\" ]; then\n\t\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\t\t# Only open wiki on Steam Deck Game Mode\n\t\t\tif [ \"$FIXGAMESCOPE\" -eq 0 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening wiki URL '$WIKURL' using xdg-open on Steam Deck since Yad AppImage does not have WebKit support\"\n\t\t\t\t\"$XDGO\" \"$WIKURL\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Running in Steam Deck Game Mode - Opening wiki page using xdg-open here may not work or may have undesired results - Skipping\"\n\t\t\tfi\n\t\telse\n\t\t\tTITLE=\"${PROGNAME}-Wiki\"\n\t\t\tpollWinRes \"$TITLE\"\n\t\t\t\"$YAD\" --window-icon=\"$STLICON\" --title=\"$TITLE\" --on-top --center \"$WINDECO\" --html --uri=\"$WIKURL\" \"$GEOM\" >/dev/null 2>/dev/null\n\t\tfi\n\tfi\n}\n\nfunction OpenWiki {\n\t\"${PROGCMD}\" wiki \"$CURWIKI\"\n}\n\nexport -f OpenWiki\n\nfunction StatusWindow {\n\tYAD=yad\n    TITLE=\"${PROGNAME}-$3\"\n    pollWinRes \"$TITLE\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - for '$1'\"\n\n    RUNFUNC=\"$2\"\n    $RUNFUNC |\n    while read -r line; do\n\t\techo \"# ${line}\";\n\tdone | \"$YAD\" --window-icon=\"$STLICON\" --title=\"$TITLE\" --on-top --progress --progress-text=\"$1...\" --pulsate --center --no-buttons --auto-close \"$WINDECO\" \"$GEOM\"\n}\n\nfunction setColGui {\n\tHAVCOL=0\n\tif grep -q \"^COLCOUNT\" \"$CURGUICFG\"; then\n\t\tCCR=\"$(grep \"^COLCOUNT\" \"$CURGUICFG\" | cut -d '=' -f2)\"\n\t\tCURCOL=\"${CCR//\\\"}\"\n\t\tHAVCOL=1\n\telse\n\t\tCURCOL=1\n\tfi\n\n\texport CURWIKI=\"$PPW/Gui-Columns\"\n\n\tTITLE=\"${FUNCNAME[0]}\"\n\tWTR=\"${CURGUICFG##*/}\"\n\tWINTITLE=\"${WTR//.conf}\"\n\tSELCOL=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --center --form --separator=\"\\n\" --field=\"Columns in $WINTITLE\":NUM \"$CURCOL\" --title=\"$TITLE\" \"$GEOM\")\"\n\n\tif [ -z \"$SELCOL\" ] || [ \"$SELCOL\" -eq 0 ]; then\n\t\tSELCOL=1\n\tfi\n\n\tif [ \"$HAVCOL\" -eq 0 ]; then\n\t\techo \"COLCOUNT=\\\"$SELCOL\\\"\" >> \"$CURGUICFG\"\n\telse\n\t\tif [ \"$CURCOL\" -ne \"$SELCOL\" ]; then\n\t\t\tsed \"s:COLCOUNT=\\\"$CURCOL\\\":COLCOUNT=\\\"$SELCOL\\\":g\" -i \"$CURGUICFG\"\n\t\tfi\n\tfi\n}\nexport -f setColGui\n\nfunction dlCheck {\n\tfunction chkFile {\n\t\tif [ \"$FLCHK\" == \"stat\" ]; then\n\t\t\tISCHK=\"$(\"$FLCHK\" -c%s \"$DLDST\" | cut -d ' ' -f1)\"\n\t\telse\n\t\t\tISCHK=\"$(\"$FLCHK\" \"$DLDST\" | cut -d ' ' -f1)\"\n\t\tfi\n\t\tCHKTXT=\"$(strFix \"$NOTY_CHK\" \"$FLCHK\" \"$DLDST\")\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $CHKTXT\"\n\t\tnotiShow \"$CHKTXT\" \"S\"\n\n\t\tif [ \"$ISCHK\" == \"$INCHK\" ];then\n\t\t\tCHKTXT=\"$(strFix \"$NOTY_CHKOK\" \"$FLCHK\" \"${DLDST##*/}\" \"$ISCHK\")\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $CHKTXT\"\n\t\t\tnotiShow \"$CHKTXT\" \"S\"\n\t\telse\n\t\t\tCHKTXT=\"$(strFix \"$NOTY_CHKNOK\" \"${DLDST##*/}\" \"$ISCHK\" \"$INCHK\")\"\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - $CHKTXT\"\n\t\t\tnotiShow \"$CHKTXT\" \"S\"\n\t\tfi\n\t\tsleep 2\n\t}\n\n\tDLSRC=\"$1\"\n\tDLDST=\"$2\"\n\tFLCHK=\"$3\"\n\tDLTITLE=\"$4\"\n\tINCHK=\"$5\"\n\n\tif [ \"$FLCHK\" != \"C\" ]; then\n\t\tif [ -f \"$DLDST\" ] && [ \"$FLCHK\" != \"X\" ]; then\n\t\t\tchkFile\n\t\telse\n\t\t\tif [ \"$DLTITLE\" != \"$NON\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $DLTITLE\"\n\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$DLDST\")\" \"S\"\n\t\t\t\tif grep -q \"show-progress\" <<< \"$(\"$WGET\" --help)\" && [ \"$ONSTEAMDECK\" -eq 0 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$WGET -q --show-progress $DLSRC -O $DLDST'\"\n\t\t\t\t\t\"$WGET\" -q --show-progress \"$DLSRC\" -O \"$DLDST\" 2>&1 | sed -u -e \"s:\\.::g;s:.*K::g;s:^[[:space:]]*::g\" | grep -v \"SSL_INIT\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$WGET -q $DLSRC -O $DLDST'\"\n\t\t\t\t\t\"$WGET\" -q \"$DLSRC\" -O \"$DLDST\" 2>&1 | sed -u -e \"s:\\.::g;s:.*K::g;s:^[[:space:]]*::g\" | grep -v \"SSL_INIT\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\t\"$WGET\" -q \"$DLSRC\" -O \"$DLDST\" 1>/dev/null 2>&1\n\t\t\tfi\n\t\tfi\n\telse\n\t\tFLCHK=\"$1\"\n\t\tDLDST=\"$2\"\n\t\tINCHK=\"$4\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Only checking already downloaded file '$DLDST'\"\n\t\tchkFile\n\tfi\n\n\tif [ -n \"$INCHK\" ] && [ \"$INCHK\" != \"$NON\" ]; then\n\t\tif [ \"$FLCHK\" == \"X\" ]; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON2\" \"$DLDST\")\" \"S\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $(strFix \"$NOTY_DLCUSTOMPROTON2\" \"$DLDST\")\"\n\t\telif [ \"$FLCHK\" != \"C\" ]; then\n\t\t\tchkFile\n\t\tfi\n\tfi\n}\n\nfunction getGamePic {\n\tif [ \"$DLGAMEDATA\" -eq 1 ] && [ \"$STLPLAY\" -eq 0 ]; then\n\t\tDLPIC=\"$1\"\n\t\tif [[ ( ! -f \"$DLPIC\" || ! -s \"$DLPIC\" ) && \"$STLPLAY\" -eq 0 ]]; then\n\t\t\tDLTITLE=\"Downloading picture for game '$(basename \"${1//.jpg/}\")'\"\n\t\t\tdlCheck \"$2\" \"$DLPIC\" \"X\" \"$DLTITLE\"\n\t\tfi\n\tfi\n}\n\nfunction getGameName {\n\tif [ -n \"$GN\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using 'GN' as Game Name: '$GN'\"\n\t\tGNRAW=\"$GN\"\n\telif [ -f \"$STLGAMEDIRID/$1.conf\" ]; then\n\t\tGNRAW=\"$(grep \"#GAMENAME\" \"$STLGAMEDIRID/$1.conf\" | cut -d '=' -f2)\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found Game Name '$GNRAW' in '$STLGAMEDIRID/$1.conf'\"\n\telif grep -q \"_${1}\\.\" <<< \"$(listAppManifests)\" ; then\n\t\tAPPMA=\"$(grep \"_${1}\\.\" <<< \"$(listAppManifests)\")\"\n\t\tif [ -f \"$APPMA\" ]; then\n\t\t\tGNRAW1=\"$(grep \"\\\"name\\\"\" \"$APPMA\" | awk -F '\"name\"' '{print $NF}')\"\n\t\t\tGNRAW=\"$(awk '{$1=$1};1' <<< \"$GNRAW1\")\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found Game Name '$GNRAW' in '$APPMA'\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - file '$APPMA' not found\"\n\t\tfi\n\telif [ -f \"$STLAPPINFOIDDIR/${1}.bin\" ]; then\n\t\tGNRAW=\"$(getAppInfoData \"$AID\" \"name\")\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found Game Name '$GNRAW' in '$STLAPPINFOIDDIR/${1}.bin'\"\n\telse\n\t\tif [ \"$DLGAMEDATA\" -eq 1 ]; then\n\t\t\tAPIURL=\"https://api.steampowered.com/ISteamApps/GetAppList/v2\"\n\t\t\tAPIDL=\"$STLDLDIR/SteamApps.json\"\n\t\t\tMAXAGE=1440\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading gamedata for '$1'\"\n\n\t\t\tif [ ! -f \"$APIDL\" ] || test \"$(find \"$APIDL\" -mmin +\"$MAXAGE\")\"; then\n\t\t\t\tdlCheck\t\"$APIURL\" \"$APIDL\" \"X\" \"Downloading $APIDL\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -f \"$APIDL\" ]; then\n\t\t\tif [ ! -x \"$(command -v \"$JQ\")\" ]; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Can't get data from '$APIDL' because '$JQ' is not installed\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching Game Name for '$1' in $APIDL\"\n\t\t\t\tGNRAW=\"$(\"$JQ\" \".applist.apps[] | select (.appid==$1) | .name\" \"$APIDL\")\"\n\n\t\t\t\tif [ -n \"$GNRAW\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found Game Name '$GNRAW' in $APIDL\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - file '$APIDL' not found\"\n\t\tfi\n\tfi\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Outgoing game name is '${GNRAW//\\\"/}'\"\n\n\tGAMENAME=\"${GNRAW//\\\"/}\"\n}\n\nfunction writeDesktopFile {\n\tDESTDTF=\"$2\"\n\tDESTPIC=\"$3\"\n\n\tif [ -f \"$DESTDTF\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - $DESTDTF already exists\"\n\telse\n\t\tgetGameName \"$1\"\n\t\tif [ -z \"$GAMENAME\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not find gamename for game id '$1'\"\n\t\telif [ -n \"$GAMENAME\" ] && [ \"$GAMENAME\" != \"$NON\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating '$DESTDTF' for '$GAMENAME' ($1)\"\n\t\t\t{\n\t\t\t\techo \"[Desktop Entry]\"\n\t\t\t\techo \"Name=${GAMENAME//\\\"/}\"\n\t\t\t\techo \"Comment=$DF_COMMENT\"\n\t\t\t\techo \"Exec=steam steam://rungameid/$1\"\n\t\t\t\techo \"Icon=$DESTPIC\"\n\t\t\t\techo \"Terminal=false\"\n\t\t\t\techo \"Type=Application\"\n\t\t\t\techo \"Categories=Game;\"\n\t\t\t} >> \"$DESTDTF\"\n\t\tfi\n\tfi\n}\n\nfunction createDesktopIconFile {\n\tif [ \"$1\" -eq \"$1\" ] 2>/dev/null; then\n\t\tAID=\"$1\"\n\telse\n\t\tAID=\"$(getIDFromTitle \"$1\")\"\n\tfi\n\n\tWANTGPNG=\"$STLGPNG/${AID}.png\"\n\n\tif [ \"$STLPLAY\" -eq 1 ]; then\n\t\tmkProjDir \"$STLISLDFD\"\n\t\tINTDTFILE=\"$STLISLDFD/$AID.desktop\"\n\telse\n\t\tmkProjDir \"$STLIDFD\"\n\t\tINTDTFILE=\"$STLIDFD/$AID.desktop\"\n\tfi\n\n\tif [ -f \"$INTDTFILE\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have an internal desktop file '$INTDTFILE'\"\n\telse\n\t\tif [ -n \"$AID\" ] && [ ! -f \"$WANTGPNG\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Don't have a desktop icon yet - trying to create it\"\n\t\t\tif [ \"$STLPLAY\" -eq 1 ]; then\n\t\t\t\tif [ -n \"$4\" ]; then\n\t\t\t\t\tGAMENAME=\"$3\"\n\t\t\t\t\tHAVEPA=\"$4\"\n\t\t\t\t\tstandaloneGameIcon \"$WANTGPNG\" \"$AID\" \"$GAMENAME\" \"$HAVEPA\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Not enough arguments passes to create an icon - got '$*'\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tgetGameIcon\n\t\t\tfi\n\t\tfi\n\n\t\t# create desktop file internally for optionally using it on the desktop\n\t\tif [ -f \"$WANTGPNG\" ] && [ ! -f \"$INTDTFILE\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating $INTDTFILE\"\n\t\t\tif [ \"$STLPLAY\" -eq 1 ]; then\n\t\t\t\tif [ -n \"$4\" ]; then\n\t\t\t\t\tGAMENAME=\"$3\"\n\t\t\t\t\tHAVPA=\"$4\"\n\t\t\t\t\tstandaloneDesktopFile \"$INTDTFILE\" \"$WANTGPNG\" \"$AID\" \"$GAMENAME\" \"$HAVEPA\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Not enough arguments passes to create a desktopfile - got '$*'\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twriteDesktopFile \"$AID\" \"$INTDTFILE\" \"$WANTGPNG\"\n\t\t\tfi\n\t\tfi\n\tfi\n\n\t# set desktop file mode from command line:\n\tif [ -f \"$INTDTFILE\" ] && [ \"$CREATEDESKTOPICON\" -eq 0 ] && [ -n \"$2\" ]; then\n\t\tCREATEDESKTOPICON=\"$2\"\n\tfi\n\n\t# copy the desktop file to the system\n\tif [ -f \"$INTDTFILE\" ] && [ \"$CREATEDESKTOPICON\" -ne 0 ]; then\n\t\tif [ \"$CREATEDESKTOPICON\" -eq \"1\" ] || [ \"$CREATEDESKTOPICON\" -eq \"3\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating desktop icon for '$AID' on the desktop\"\n\t\t\tcp \"$INTDTFILE\" \"$HOME/Desktop/\" 2>/dev/null\n\t\tfi\n\n\t\tif [ \"$CREATEDESKTOPICON\" -eq \"2\" ] || [ \"$CREATEDESKTOPICON\" -eq \"3\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating desktop icon for '$AID' for the desktop application menu\"\n\t\t\tcp \"$INTDTFILE\" \"$HOME/.local/share/applications/\" 2>/dev/null\n\t\tfi\n\tfi\n}\n\nfunction getOwnedHexAids {\n\tif [ -z \"$PIVDF\" ]; then\n\t\tsetSteamPaths\n\tfi\n\n\tif [ -f \"$PIVDF\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching in '$PIVDF' for HexAids\"\n\t\tHAIDS=\"61707069647300023000\"\n\t\t\"$XXD\" -c \"$(wc -c \"$PIVDF\")\" -p \"$PIVDF\" | sed -E \"s:$HAIDS:\\n$HAIDS:g\" | grep -o \"$HAIDS.\\{0,6\\}\" | sed \"s:$HAIDS::\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$PIVDF' not found\"\n\tfi\n}\n\nfunction getOwnedAids {\n\tmkProjDir \"$STLSHM\"\n\tOAIDLIST=\"$STLSHM/owned-aids.txt\"\n\tif [ ! -f \"$OAIDLIST\" ]; then\n\t\twhile read -r line; do\n\t\t\tgetAidFromHexAid \"$line\" >> \"$OAIDLIST\"\n\t\tdone <<< \"$(getOwnedHexAids)\"\n\n\t\tsort -n -u \"$OAIDLIST\" -o \"$OAIDLIST\"\n\tfi\n\n\tif [ -f \"$OAIDLIST\" ]; then\n\t\tcat \"$OAIDLIST\"\n\tfi\n}\n\nfunction getAidFromHexAid {\n\tunset REVAID\n\twhile read -r line; do\n\t\tREVAID=\"$REVAID${line}\"\n\tdone <<< \"$(fold -2 <<< \"$1\" | tac)\"\n\tprintf \"%d\\n\" \"0x$REVAID\"\n}\n\nfunction getHexAidForAid {\n\tunset HEXAID\n\tif [ -f \"$GEMETA/$1.conf\" ]; then\n\t\tloadCfg \"$GEMETA/$1.conf\" X\n\tfi\n\n\tif [ -n \"$HEXAID\" ]; then\n\t\tif [ -z \"$2\" ]; then\n\t\t\techo \"$HEXAID\"\n\t\tfi\n\telse\n\t\tHXTST=\"$(printf '%x\\n' \"$1\" | fold -w2 | tail -n1)\"\n\n\t\tif [ \"${#HXTST}\" -eq 1 ]; then\n\t\t\tSHEX1=\"$(printf '0%x\\n' \"$1\" | fold -w2 | tac)\";\n\t\telse\n\t\t\tSHEX1=\"$(printf '%x\\n' \"$1\" | fold -w2 | tac)\";\n\t\tfi\n\n\t\twhile read -r line; do\n\t\t\tHEXAID=\"$HEXAID${line}\"\n\t\tdone <<< \"$SHEX1\"\n\n\t\tif [ -z \"$2\" ]; then\n\t\t\techo \"$HEXAID\"\n\t\tfi\n\t\ttouch \"$FUPDATE\"\n\t\ttouch \"$GEMETA/$1.conf\"\n\t\tupdateConfigEntry \"HEXAID\" \"$HEXAID\" \"$GEMETA/$1.conf\"\n\tfi\n}\n\nfunction getRawAppIDInfo {\n\tAIIDRAW=\"$STLAPPINFOIDDIR/${1}.bin\"\n\n\tif [ -z \"$FAIVDF\" ]; then\n\t\tsetSteamPaths\n\tfi\n\n\tif [ -z \"$LOGRAWINFO\" ]; then\n\t\tLOGRAWINFO=1\n\tfi\n\n\tif [ -s \"$AIIDRAW\" ] && [ -z \"$2\" ]; then\n\t\tif [ -z \"$LOGRAWINFO\" ]; then\n\t\t\tLOGRAWINFO=1\n\t\tfi\n\n\t\tif [ \"$LOGRAWINFO\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found raw $APIN file '$AIIDRAW'\"\n\t\tfi\n\telse\n\t\tif [ -n \"$2\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating raw $APIN file '$AIIDRAW'\"\n\t\tfi\n\n\t\tif [ ! -s \"$AIIDRAW\" ]; then\n\t\t\trm \"$AIIDRAW\" 2>/dev/null\n\t\tfi\n\n\t\tHEXAID=\"$(getHexAidForAid \"$1\")\"\n\t\tHAID=\"02617070696400\"\n\n\t\tSHMAIVDF=\"$STLSHM/${AIVDF//\\.vdf/\\.hex}\"\n\t\tif [ ! -f \"$SHMAIVDF\" ]; then\n\t\t\t\"$XXD\" -c \"$(wc -c \"$FAIVDF\")\" -p \"$FAIVDF\" \"$SHMAIVDF\"\n\t\tfi\n\t\tsed -E \"s:$HAID:\\n$HAID:g\" \"$SHMAIVDF\" | grep \"^${HAID}${HEXAID}00\" | \"$XXD\" -r -p - \"$AIIDRAW\"\n\tfi\n}\n\nfunction getAppInfoData {\n\t# $1=AID; $2=category; optional $3=skip stdout; optional $4=force writing metadata again\n\tif [ -n \"$2\" ] && [ \"$STLPLAY\" -eq 0 ]; then\n\t\tAILIST=\"$GLOBALMISCDIR/$AITXT\"\n\t\tif ! [ -f \"$AILIST\" ]; then\n\t\t\tSCRIPTDIR=\"$( realpath \"$0\" )\"\n\t\t\tSCRIPTDIR=\"${SCRIPTDIR%/*}\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No '$AITXT' found in Global Misc Dir '$GLOBALMISCDIR', checking for one in the script dir '$SCRIPTDIR'\"\n\t\t\tif [ -f \"$SCRIPTDIR/misc/$AITXT\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$AITXT' in '$SCRIPTDIR/misc' - Using this\"\n\t\t\t\tAILIST=\"$SCRIPTDIR/misc/$AITXT\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not find '$AITXT' in script directory - giving up\"\n\t\t\tfi\n\t\tfi\n\n\t\tif grep -q \"$2\" \"$AILIST\"; then\n\n\t\t\tUPDAT=\"${2^^}\"\n\t\t\tunset \"$UPDAT\"\n\n\t\t\tif [ -f \"$GEMETA/$1.conf\" ]; then\n\t\t\t\tloadCfg \"$GEMETA/$1.conf\" X\n\t\t\tfi\n\n\t\t\tif [ -n \"${!UPDAT}\" ] && [ -z \"$4\" ]; then\n\t\t\t\tif [ -z \"$3\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Got value '${!UPDAT}' for '$UPDAT' from '$GEMETA/$1.conf'\"\n\t\t\t\t\techo \"${!UPDAT}\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tLOGRAWINFO=0\n\t\t\t\tgetRawAppIDInfo \"$1\"\n\t\t\t\tSRCHEX=\"$STLAPPINFOIDDIR/$1.bin\"\n\n\t\t\t\tif [ -f \"$SRCHEX\" ]; then\n\t\t\t\t\tif [ -z \"$3\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Retrieving data for '$2' from '$SRCHEX'\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tHVAR=\"$(echo -n \"$2\" | \"$XXD\" -ps)\"\n\t\t\t\t\tunset HXOUT\n\n\t\t\t\t\tif [ \"$2\" == \"metacritic_score\" ]; then\n\t\t\t\t\t\tUPVALHX=\"$(\"$XXD\" -c \"$(wc -c \"$SRCHEX\")\" -p \"$SRCHEX\" | sed -E \"s:$HVAR:\\n$HVAR:g\" | grep \"^$HVAR\" | head -c \"$(( $(wc -c <<< \"$HVAR\") + 3))\" | tail -c2)\"\n\t\t\t\t\t\tif [ -n \"$UPVALHX\" ]; then\n\t\t\t\t\t\t\tUPVAL=\"$((16#$UPVALHX))\"\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\tOCOUNT=0\n\t\t\t\t\t\tZCOUNT=0\n\t\t\t\t\t\twhile read -r line; do\n\t\t\t\t\t\t\tif [ \"$line\" == \"01\" ]; then\n\t\t\t\t\t\t\t\tOCOUNT=$((OCOUNT+1))\n\t\t\t\t\t\t\t\tif [[ \"$OCOUNT\" -eq 2 ]]; then\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\telif [ \"$line\" == \"00\" ] ; then\n\t\t\t\t\t\t\t\tZCOUNT=$((ZCOUNT+1))\n\t\t\t\t\t\t\t\tif [[ \"$ZCOUNT\" -eq 2 ]]; then\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tHXOUT=\"$HXOUT$line\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone <<< \"$(\"$XXD\" -c \"$(wc -c \"$SRCHEX\")\" -p \"$SRCHEX\" | sed -E \"s:01$HVAR:\\n01$HVAR:g\" | grep \"^01$HVAR\" | fold -2)\"\n\t\t\t\t\t\tUPVALHX=\"${HXOUT//${HVAR}00/}\"\n\t\t\t\t\t\tUPVALHX1=\"${UPVALHX//${HVAR}/}\"\n\t\t\t\t\t\tUPVALHXO=\"${UPVALHX1%*00}\"\n\n\t\t\t\t\t\tUPVAL=\"$(\"$XXD\" -r -p - <<< \"$UPVALHXO\")\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tif [ -n \"$UPVAL\" ]; then\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\ttouch \"$GEMETA/$1.conf\"\n\t\t\t\t\t\tupdateConfigEntry \"$UPDAT\" \"$UPVAL\" \"$GEMETA/$1.conf\"\n\t\t\t\t\t\tif [ -z \"$3\" ]; then\n\t\t\t\t\t\t\techo \"$UPVAL\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$2' is not in '$AILIST'\"\n\t\tfi\n\tfi\n}\n\nfunction writeAllAIMeta {\n\tif [ -n \"$1\" ] && [ \"$1\" -eq \"$1\" ]; then\n\t\tif [ -n \"$2\" ]; then\n\t\t\trm \"$STLAPPINFOIDDIR/${1}.bin\" 2>/dev/null\n\t\tfi\n\t\tAILIST=\"$GLOBALMISCDIR/$AITXT\"\n\t\twhile read -r line; do\n\t\t \tgetAppInfoData \"$1\" \"$line\" X \"$2\"\n\t\tdone < \"$GLOBALMISCDIR/$AITXT\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - need SteamAppId as arg 1\"\n\tfi\n}\n\nfunction getGameIcon {\n\tfunction IcotoPng {\n\t\tif [ -x \"$(command -v \"$CONVERT\" 2>/dev/null)\" ]; then\n\t\t\tif [ -x \"$(command -v \"$IDENTIFY\" 2>/dev/null)\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Determining largest ico in '$WANTGICO' using '$IDENTIFY'\"\n\t\t\t\tLICO=\"$(\"$IDENTIFY\" \"$WANTGICO\" | sort -n -k3 | tail -n1 | grep -oP '\\[\\K[^\\]]+')\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Command '$IDENTIFY' not found, using first ico in '$WANTGICO'\"\n\t\t\t\tLICO=\"0\"\n\t\t\tfi\n\n\t\t\tif [ -z \"$LICO\" ] || [ \"$LICO\" -ne \"$LICO\" ] 2>/dev/null; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No specific ico found using the first one in '$WANTGICO'\"\n\t\t\t\tLICO=\"0\"\n\t\t\tfi\n\n\t\t\tif [ \"$LICO\" -eq \"$LICO\" ] 2>/dev/null; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Converting ico '$LICO' in '$WANTGICO' to '$WANTGPNG' using command: $CONVERT ${WANTGICO}[${LICO}] $WANTGPNG\"\n\t\t\t\t\"$CONVERT\" \"${WANTGICO}[${LICO}]\" \"$WANTGPNG\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Command '$CONVERT' not found, so converting '$WANTGICO' to '$WANTGPNG' is not possible - skipping\"\n\t\tfi\n\t}\n\n\tfunction getIco {\n\t\tWANTGICO=\"$STLGICO/${AID}.ico\"\n\t\tif [ -f \"$WANTGICO\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have game ico '$WANTGICO'\"\n\t\t\tIcotoPng\n\t\telse\n\t\t\tICONAME=\"$(getAppInfoData \"$AID\" \"clienticon\")\"\n\t\t\tif [ -n \"$ICONAME\" ]; then\n\t\t\t\tICOPATH=\"$ICODIR/${ICONAME}.ico\"\n\t\t\t\tif [ -f \"$ICOPATH\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found ico for '$AID' under '$ICOPATH'\"\n\t\t\t\t\tcp \"$ICOPATH\" \"$WANTGICO\"\n\t\t\t\t\tIcotoPng\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Absolute path for Steam ico '$ICONAME' not valid - skipping\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not find the icon name for '$AID' in $APIN - skipping\"\n\t\t\tfi\n\t\tfi\n\t}\n\n\tfunction extractGZip {\n\t\tBIGGESTPNG=\"$(\"$UNZIP\" -l \"$WANTGZIP\" | grep \"\\.png\" | sort -n | tail -n1 | awk -F ':[0-9][0-9]   ' '{print $NF}')\" # weak 'awk' might break here(?)\n\t\tif [ -n \"$BIGGESTPNG\" ];then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracting biggest png file '$BIGGESTPNG' in archive '$WANTGZIP' to '$WANTGPNG'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $UNZIP -dqq ${WANTGPNG//.png} $WANTGZIP $BIGGESTPNG\"\n\t\t\t\"$UNZIP\" -q -d \"${WANTGPNG//.png}\" \"$WANTGZIP\" \"$BIGGESTPNG\"\n\t\t\tmv \"${WANTGPNG//.png}/$BIGGESTPNG\" \"$WANTGPNG\"\n\t\t\trm -rf \"${WANTGPNG//.png}\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not determine the biggest png file in archive '$WANTGZIP'- skipping\"\n\t\tfi\n\t}\n\n\tif [ -z \"$AID\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Don't have a Steam gameid - skipping\"\n\telse\n\t\tWANTGPNG=\"$STLGPNG/${AID}.png\"\n\t\tif [ -f \"$WANTGPNG\" ]; then\n\t\t\twritelog \"Info\" \"${FUNCNAME[0]} - Already have game icon png '$WANTGPNG' - nothing to to\"\n\t\telse\n\t\t\tif [ -z \"$ICODIR\" ]; then\n\t\t\t\tsetSteamPaths\n\t\t\tfi\n\n\t\t\tif [ ! -d \"$ICODIR\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Steam ico directory not found - skipping\"\n\t\t\telse\n\t\t\t\tWANTGZIP=\"$STLGZIP/${AID}.zip\"\n\t\t\t\tif [ -f \"$WANTGZIP\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have game icon zip '$WANTGZIP' - extracting\"\n\t\t\t\t\textractGZip \"$WANTGZIP\" \"$WANTGPNG\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looking for icon hash in $APIN\"\n\n\t\t\t\t\tLICONZIP=\"$(getAppInfoData \"$AID\" \"linuxclienticon\")\"\n\t\t\t\t\tif [ -n \"$LICONZIP\" ]; then\n\t\t\t\t\t\tLICONPATH=\"$ICODIR/${LICONZIP}.zip\"\n\t\t\t\t\t\tif [ -f \"$LICONPATH\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found icon zip for '$AID' under '$LICONPATH'\"\n\t\t\t\t\t\t\tcp \"$LICONPATH\" \"$WANTGZIP\"\n\t\t\t\t\t\t\textractGZip \"$WANTGZIP\" \"$WANTGPNG\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Absolute path for Steam icon zip '$LICONZIP' not valid - trying to find ico instead\"\n\t\t\t\t\t\t\tgetIco\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not find the icon zip for '$AID' in $APIN - trying to find ico instead\"\n\t\t\t\t\t\tgetIco\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction getGameData {\n\tif ! grep -q \",${1},\" <<< \"$NOGAMES\" && [ \"$STLPLAY\" -eq 0 ]; then\n\t\tDLPIC=\"$STLGHEADD/$1.jpg\"\n\t\tif [ ! -f \"$DLPIC\" ] || [ ! -s \"$DLPIC\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading picture '$DLPIC' from '$STASSURL/$1/header.jpg'\" \"X\" \"$GGDLOG\"\n\t\t\tgetGamePic \"$DLPIC\" \"$STASSURL/$1/header.jpg\"\n\t\tfi\n\n\t\tDESTDTF=\"$STLGDESKD/$1.desktop\"\n\t\tif [ ! -f \"$DESTDTF\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating desktopfile '$DESTDTF'\" \"X\" \"$GGDLOG\"\n\t\t\twriteDesktopFile \"$1\" \"$DESTDTF\" \"$DLPIC\"\n\t\tfi\n\tfi\n}\n\nfunction getParsableGameList {\n\tif [ -z \"$SUSDA\" ] || [ -z \"$STUIDPATH\" ]; then\n\t\tsetSteamPaths\n\tfi\n\tif [ -d \"$SUSDA\" ]; then\n\t\tSC=\"$STUIDPATH/$SRSCV\"\n\t\tAPPI=\"Apps\"\n\t\tAPPO=\"StartMenuShortcutCheck\"\n\t\tLIST=\"$(awk \"/$APPI/,/$APPO/\" \"$SC\" | grep -v \"$APPI\\|$APPO\" | awk '{printf \"%s+\",$0} END {print \"\"}' | sed 's/\"[0-9][0-9]/\\n&/g')\"\n\t\tLISTCNT=\"$(wc -l <<< \"$LIST\")\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$LISTCNT' parsable Game Entries in '$SC'\"\n\t\tif [ \"$LISTCNT\" -eq 0 ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No game found in any Steam collection\"\n\t\tfi\n\t\techo \"$LIST\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$SUSDA' not found - this should not happen! - skipping\"\n\tfi\n}\n\nfunction getInstalledGamesFromCollection {\n\tCAT=\"$1\"\n\n\tif [ -n \"$CAT\" ]; then\n\t\twhile read -r CATAID; do\n\t\techo \"$CATAID\"\n\t\tdone <<< \"$(getParsableGameList | grep \"\\\"$CAT\\\"\" | sed \"s:\\\"::g\" | sort -n | cut -d '+' -f1)\"\n\tfi\n}\n\nfunction listInstalledGameIDs {\n\twhile read -r APPMA; do\n\t\tgrep -Eo \"[[:digit:]]*\" <<< \"${APPMA##*/}\"\n\tdone <<< \"$(listAppManifests)\"\n}\n\nfunction getGameDataForInstalledGames {\n\tif [ \"$(listInstalledGameIDs | wc -l)\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No installed games found!\"\n\telse\n\t\twhile read -r CATAID; do\n\t\t\tif [ -n \"$CATAID\" ]; then\n\t\t\t\tgetGameData \"$CATAID\"\n\t\t\tfi\n\t\tdone <<< \"$(listInstalledGameIDs)\"\n\tfi\n}\n\nfunction listSteamShortcutGameIDs {\n\tif haveAnySteamShortcuts ; then\n\t\twhile read -r SCVDFE; do\n\t\t\tparseSteamShortcutEntryAppID \"$SCVDFE\"\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No Steam shortcuts found!\"\n\tfi\n}\n\nfunction checkSGDbApi {\n\tif [ -z \"$SGDBAPIKEY\" ] || [ \"$SGDBAPIKEY\" == \"$NON\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No SteamGrid Api Key found - Get one at 'https://www.steamgriddb.com/profile/preferences/api/' (requires a SteamGridDB account) and see the SteamGridDB wiki page for guidance on how to supply the API key.\"\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - and save it in the Global Config ('SGDBAPIKEY')\"\n\t\treturn 1\n\telse\n\t\treturn 0\n\tfi\n}\n\n## Generic function to fetch some artwork from SteamGridDB based on an endpoint\n## TODO: Steam only officially supports PNGs, test to see if WebP works when manually copied, and if it doesn't, we should try to only download PNG files\n## TODO: Add max filesize option? Some artworks are really big, we should skip ones that are too large (though this may mean many animated APNG artworks will get skipped, because APNG can be huge)\nfunction downloadArtFromSteamGridDB {\n\tif checkSGDbApi && [ \"$STLPLAY\" -eq 0 ]; then\n\t\t# Required\n\t\tSEARCHID=\"$1\"  # ID to search on (should be either Steam AppID or Game ID, but we just pass it to the endpoint given)\n\t\tSEARCHENDPOINT=\"$2\"  # Endpoint which should either be an endpoint for Steam games (Steam AppID endpoint) or Non-Steam Games (SGDB Game ID Endpoint)\n\t\tSGDBFILENAME=\"${3:-SEARCHID}\"  # Name to give to file i.e. \"124123p.png\" (can't use ${SEARCHID}${SUFFIX} because SearchID may not be the AppID) -- Defaults to just using passed AppID\n\n\t\t# Optional\n\t\tSEARCHSTYLES=\"$4\"\n\t\tSEARCHDIMS=\"$5\"\n\t\tSEARCHTYPES=\"$6\"\n\t\tSEARCHNSFW=\"$7\"\n\t\tSEARCHHUMOR=\"$8\"\n\t\tSEARCHEPILEPSY=\"$9\"\n\n\t\tSGDBHASFILE=\"${10:-SGDBHASFILE}\"  # Option to override action to take when file already exists\n\t\tFORCESGDBDLTOSTEAM=\"${11}\"  # Option to force downloading artwork to Steam Grid folder\n\n\t\tSGDB_ENDPOINT_STR=\"${SEARCHENDPOINT}/$(echo \"$SEARCHID\" | awk '{print $1}' | paste -s -d, -)?\"\n\t\t# Only include query params if provided\n\t\t# e.g.: \"?styles=${SEARCHSTYLES}&dimensions=${SEARCHDIMS}&types=${SGDBTYPES}&nsfw=${SEARCHNSFW}&humor=${SEARCHHUMOR}\"\n\t\tif [ -n \"$SEARCHSTYLES\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&styles=${SEARCHSTYLES}\"\n\t\tfi\n\t\tif [ -n \"$SEARCHDIMS\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&dimensions=${SEARCHDIMS}\"\n\t\tfi\n\t\tif [ -n \"$SEARCHTYPES\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&types=${SEARCHTYPES}\"\n\t\tfi\n\t\tif [ -n \"$SEARCHNSFW\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&nsfw=${SEARCHNSFW}\"\n\t\tfi\n\t\tif [ -n \"$SEARCHHUMOR\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&humor=${SEARCHHUMOR}\"\n\t\tfi\n\t\tif [ -n \"$SEARCHEPILEPSY\" ]; then\n\t\t\tSGDB_ENDPOINT_STR+=\"&epilepsy=${SEARCHEPILEPSY}\"\n\t\tfi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Outgoing SteamGridDB endpoint is: $SGDB_ENDPOINT_STR\"\n\n\t\t# TODO break into reusable function for both this and `getSGDBGameIDFromTitle`?\n\t\t# If the whole batch has no grids we get a 404 and wget gives an error. --content-on-error ensures we still get the response json and the following logic still works\n\t\tRESPONSE=\"$(\"$WGET\" --timeout=\"${SGDBTIMEOUT}\" --tries=\"${SGDBRETRIES}\" --content-on-error --header=\"Authorization: Bearer $SGDBAPIKEY\" -q \"$SGDB_ENDPOINT_STR\" -O - 2> >(grep -v \"SSL_INIT\"))\"\n\t\tif ! \"$JQ\" -e '.success' 1> /dev/null <<< \"$RESPONSE\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - The server response wasn't 'success' for this batch of requested games.\"\n\t\tfi\n\n\t\t# catch single grid without downloads\n\t\tRESPONSE_LENGTH=$(\"$JQ\" '.data | length' <<< \"$RESPONSE\")\n\t\tif [ \"$RESPONSE_LENGTH\" = 0 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No grid found to download - maybe loosen filters?\"\n\t\t\techo \"Could not find artwork on SteamGridDB to save with filename '$SGDBFILENAME' -- Check the log for details\"\n\t\tfi\n\n\t\t# TODO: This could be handled by the http return value - 200 is single-part - 207 is multi-part\n\t\t# Rewrite response object to fit the following loop if the response isn't multi-part\n\t\tif \"$JQ\" -e \".data[0].url\" 1> /dev/null <<< \"$RESPONSE\"; then\n\t\t\tRESPONSE=\"{\\\"success\\\":true,\\\"data\\\":[$RESPONSE]}\"\n\t\t\tRESPONSE_LENGTH=1\n\t\tfi\n\n\t\tfor i in $(seq 0 $((\"$RESPONSE_LENGTH\" - 1))); do\n\t\t\t# match the current json array member against the appid list, this assumes we get the same order back we put in before\n\t\t\tif ! \"$JQ\" -e \".data[$i].success\" 1> /dev/null <<< \"$RESPONSE\"; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - The server response for '$SEARCHID' wasn't 'success'\"\n\t\t\tfi\n\t\t\tif ! URLSTR=$(\"$JQ\" -e -r \".data[$i].data[0].url\" <<< \"$RESPONSE\"); then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No grid found to download for '$SEARCHID' - maybe loosen filters?\"\n\t\t\tfi\n\n\t\t\tGRIDDLURL=\"${URLSTR//\\\"}\"\n\t\t\tif grep -q \"^https\" <<< \"$GRIDDLURL\"; then\n\t\t\t\tDLSRC=\"${GRIDDLURL//\\\"}\"\n\n\t\t\t\tif [ \"$SGDBDLTOSTEAM\" -eq 1 ] || [ \"$FORCESGDBDLTOSTEAM\" -eq 1 ]; then\n\t\t\t\t\tif [ -z \"$SUSDA\" ]; then\n\t\t\t\t\t\tsetSteamPaths\n\t\t\t\t\tfi\n\t\t\t\t\tif [ -d \"$SUIC\" ]; then\n\t\t\t\t\t\tGRIDDLDIR=\"${SUIC}/grid\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tGRIDDLDIR=\"$STLDLDIR/steamgriddb\"\n\t\t\t\tfi\n\n\t\t\t\tmkProjDir \"$GRIDDLDIR\"\n\t\t\t\tDLDST=\"${GRIDDLDIR}/${SGDBFILENAME}.${GRIDDLURL##*.}\"  # Makes filename like <appid>.<org_extension>, which could be something like \"70_logo.png\" (with full path preceding this, so something like \"~/Games/Grids/Half-Life/70_logo.png\")\n\t\t\t\tSTARTDL=1\n\n\t\t\t\tif [ -f \"$DLDST\" ]; then\n\t\t\t\t\tif [ \"$SGDBHASFILE\" == \"skip\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Download of existing file is set to '$SGDBHASFILE' - doing nothing\"\n\t\t\t\t\t\tSTARTDL=0\n\t\t\t\t\telif [ \"$SGDBHASFILE\" == \"backup\" ]; then\n\t\t\t\t\t\tBACKDIR=\"${GRIDDLDIR}/backup\"\n\t\t\t\t\t\tmkProjDir \"$BACKDIR\"\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Backup existing file into '$BACKDIR', because SGDBHASFILE is set to '$SGDBHASFILE'\"\n\t\t\t\t\t\tmv \"$DLDST\" \"$BACKDIR\"\n\t\t\t\t\telif [ \"$SGDBHASFILE\" == \"replace\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Replacing existing file '$DLDST', because SGDBHASFILE is set to '$SGDBHASFILE'\"\n\t\t\t\t\t\trm \"$DLDST\" 2>/dev/null\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [ \"$STARTDL\" -eq 1 ]; then\n\t\t\t\t\tdlCheck \"$DLSRC\" \"$DLDST\" \"X\" \"Downloading '$DLSRC' to '$DLDST'\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No grid found to download for '$SEARCHID' - maybe loosen filters?\"\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\n# Takes in an Steam AppID or list of Steam AppIDs and downloads (hero, logo boxart) for each one - only supports Steam AppIDs as we can't easily map SteamGridDB Game IDs and Non-Steam Game AppIDs\n# For Steam games, the AppID is the ID we search on; for Non-Steam Games, we search on a specific Game ID\n# In future, we could make a separate function for this\nfunction getSteamGridDBArtwork {\n\t# Download artwork with given parameters for each ID passed in\n\t# Split into batches of 100 games - too many and cloudflare blocks requests because of a too big header file\n\twhile mapfile -t -n 100 ary && ((${#ary[@]})); do\n\t\tSGDBSEARCHAID=$(printf '%s\\n' \"${ary[@]}\")\n\n\t\tcommandlineGetSteamGridDBArtwork --search-id=\"$SGDBSEARCHAID\" --steam\n\tdone <<< \"${1}\"\n}\n\n# GUI frontend for below 'commandlineGetSteamGridDBArtwork'\nfunction getSteamGridDBArtworkGUI {\n\tFSGDBAWFILENAMEAPPID=\"$1\"\n\tAID=\"$FSGDBAWFILENAMEAPPID\"  # AID needed for setShowPic\n\n\tFSGDBAW_HEADERTITLE=\"$( getTitleFromID \"$AID\" \"1\" ) ($AID)\"  # Display title and AppID for clarity in case showPic is not present/unclear\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting the Gui for SteamGridDB Artwork selection for '$AID'\"\n\n\texport CURWIKI=\"$PPW/SteamGridDB\"\n\tTITLE=\"${PROGNAME}-$FSGDBA\"\n\tpollWinRes \"$TITLE\"\n\tsetShowPic\n\n\t# AppID passed from commandline is used as --filename-appid\n\t# User can provide Steam AppID, SteamGridDB Game ID, or Game Name (used to attempt to fetch SteamGridDB Game ID)\n\t# - Steam AppID is prioritised if provided\n\t# - commandlineGetSteamGridDBArtwork is set to fall back to SteamGridDB Game ID if Game Name doesn't return anything, so passing both is fine\n\t# SGDBHASFILE will use the global option by default and populate the dropdown with the relevant option, just like the command does\n\t# It will use the Global Menu default, but also allows the user to specify a different action this time\n\t#\n\t# FSGDBAW = Fetcch SteamGridDB ArtWork :-)\n\tFSGDBAWGUISET=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --form --scroll --center --on-top \"$WINDECO\" \\\n\t--title=\"$TITLE\" --separator=\"|\" --image=\"$SHOWPIC\" \\\n\t--text=\"$(spanFont \"$(strFix \"$GUI_FSGDBAW\" \"$FSGDBAW_HEADERTITLE\")\" \"H\")\\n${DESC_FSGDBAW}\" \\\n\t--field=\" \":LBL \" \" \\\n\t--field=\"$GUI_FSGDBAWAPPID!$DESC_FSGDBAWAPPID ('FSGDBAWAPPID')\" \"${FSGDBAWAPPID/#-/ -}\" \\\n\t--field=\"$GUI_FSGDBAWGAMEID!$DESC_FSGDBAWGAMEID ('FSGDBAWGAMEID')\" \"${FSGDBAWGAMEID/#-/ -}\" \\\n\t--field=\"$GUI_FSGDBAWSEARCHNAME!$DESC_FSGDBAWSEARCHNAME ('FSGDBAWSEARCHNAME')\" \"${FSGDBAWSEARCHNAME/#-/ -}\" \\\n\t--field=\"$GUI_SGDBHASFILE!$DESC_SGDBHASFILE ('FSGDBAWHASFILE')\":CB \"$(cleanDropDown \"${SGDBHASFILE/#-/ -}\" \"${SGDBHASFILEOPTS}\")\" \\\n\t--field=\"$GUI_FSGDBAWAPPLYARTWORK!$DESC_FSGDBAWAPPLYARTWORK ('FSGDBAWAPPLYARTWORK')\":CHK \"1\" \\\n\t--button=\"$BUT_CAN\":0 --button=\"$BUT_DONE\":2 \"$GEOM\")\"\n\n\tcase $? in\n\t\t0) writelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_CAN'\" ;;\n\t\t2)\n\t\t\t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_DONE'\"\n\t\t\t\tmapfile -d \"|\" -t -O \"${#FSGDBAWARR[@]}\" FSGDBAWARR < <(printf '%s' \"$FSGDBAWGUISET\")\n\n\t\t\t\tFSGDBAWAPPID=\"${FSGDBAWARR[1]}\"\n\t\t\t\tFSGDBAWGAMEID=\"${FSGDBAWARR[2]}\"\n\t\t\t\tFSGDBAWSEARCHNAME=\"${FSGDBAWARR[3]}\"\n\t\t\t\tFSGDBAWHASFILE=\"--${FSGDBAWARR[4]}-existing\"  # i.e. turns 'replace' into '--replace-existing'\n\t\t\t\tFSGDBAWAPPLYARTWORK=\"$( retBool \"${FSGDBAWARR[5]}\" )\"\n\n\t\t\t\tif [ -z \"${FSGDBAWAPPID}\" ] && [ -z \"${FSGDBAWGAMEID}\" ] && [ -z \"${FSGDBAWSEARCHNAME}\" ]; then\n\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - You must pass at least a Steam AppID, SteamGridDB Game ID, or SteamGridDB Game Name\"\n\t\t\t\t\techo \"You must pass at least a Steam AppID, SteamGridDB Game ID, or SteamGridDB Game Name\"\n\t\t\t\t\tnotiShow \"$NOTY_FSGDBAWINVALID\"\n\t\t\t\t\treturn\n\t\t\t\tfi\n\n\t\t\t\tnotiShow \"$( strFix \"$NOTY_FSGDBAW\" \"$FSGDBAW_HEADERTITLE\" )\"\n\n\t\t\t\tFSGDBAWGAMETYPEFLAG=\"--nonsteam\"  # Default to non-steam, since Game ID and Game Name will use SGDB /game/ endpoint\n\t\t\t\tif [ -n \"$FSGDBAWAPPID\" ]; then\n\t\t\t\t\tFSGDBAWGAMETYPEFLAG=\"--steam\"  # Only use SGDB Steam game endpoint if we pass a Steam AppID to search for artwork on\n\t\t\t\t\tFSGDBAWSEARCHID=\"${FSGDBAWAPPID}\"\n\t\t\t\telse\n\t\t\t\t\tFSGDBAWSEARCHID=\"${FSGDBAWGAMEID}\"\n\t\t\t\tfi\n\n\t\t\t\tFSGDBAWAPPLYARTWORKFLAG=\"--apply\"  # Checkbox is defaulted to 1 (enabled), so default flag to '--apply'\n\t\t\t\tif [ \"$FSGDBAWAPPLYARTWORK\" -eq 0 ]; then\n\t\t\t\t\tFSGDBAWAPPLYARTWORKFLAG=\"--no-apply\"\n\t\t\t\tfi\n\n\t\t\t\t# Execute actual fetching of artwork, could probably put notifier here\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Executing 'commandlineGetSteamGridDBArtwork --search-id=\\\"${FSGDBAWGAMEID}\\\" --search-name=\\\"${FSGDBAWSEARCHNAME}\\\" --filename-appid=\\\"${FSGDBAWFILENAMEAPPID}\\\" \\\"${FSGDBAWHASFILE}\\\" \\\"${FSGDBAWGAMETYPEFLAG}\\\"'\"\n\t\t\t\tcommandlineGetSteamGridDBArtwork --search-id=\"${FSGDBAWSEARCHID}\" --search-name=\"${FSGDBAWSEARCHNAME}\" --filename-appid=\"${FSGDBAWFILENAMEAPPID}\" \"${FSGDBAWHASFILE}\" \"${FSGDBAWAPPLYARTWORKFLAG}\" \"${FSGDBAWGAMETYPEFLAG}\"\n\t\t\t}\n\tesac\n}\n\n# Used to get either Steam or Non-Steam artwork depending on a flag -- Used internally and for commandline usage\nfunction commandlineGetSteamGridDBArtwork {\n\tSGDBENDPOINTTYPE=\"steam\" # assume Steam game by default (search Steam AppID endpoint)\n\tGSGDBA_HASFILE=\"$SGDBHASFILE\"  # Optional override for how to handle existinf file (downloadArtFromSteamGridDB defaults to '$SGDBHASFILE')\n\tGSGDBA_APPLYARTWORK=\"$SGDBDLTOSTEAM\"\n\tGSGDBA_SEARCHNAME=\"\"\n\tGSGDBA_FOUNDGAMEID=\"\"  # ID found from SteamGridDB endpoint using GSGDBA_SEARCHNAME\n\tfor i in \"${@}\"; do\n\t\tcase $i in\n\t\t\t--search-id=*)  # ID to hit SteamGridDB API endpoint with (for Steam games this is the AppID which we will also use as filename)\n\t\t\t\tGSGDBA_APPID=\"${i#*=}\"\n\t\t\t\tGSGDBA_FILENAME=\"${GSGDBA_APPID}\"  # By default, file will be named <appid> with a suffix for each grid type (only non-steam games need this overridden since they search on Game ID and not Steam AppID)\n\t\t\t\tshift ;;\n\t\t\t--search-name=*)\n\t\t\t\tGSGDBA_SEARCHNAME=\"${i#*=}\"  # Optional SteamGridDB Game Name -- Will use this to try and find matching SteamGridDB Game Art\n\t\t\t\tshift ;;\n\t\t\t--steam)\n\t\t\t\tSGDBENDPOINTTYPE=\"steam\"  # used to generate the correct endpoint to hit, defaults to /heroes/game but this will make it heroes/steam\n\t\t\t\tshift ;;\n\t\t\t--nonsteam)\n\t\t\t\tSGDBENDPOINTTYPE=\"game\"\n\t\t\t\tshift ;;\n\t\t\t--filename-appid=*)\n\t\t\t\tGSGDBA_FILENAME=\"${i#*=}\"  # AppID to use in filename (Non-Steam Games need a different AppID)\n\t\t\t\tshift ;;\n\t\t\t## Override Global Menu setting for how to handle existing artwork\n\t\t\t## in case user wants to replace all existing artwork, default STL setting is 'skip' and will only copy files over to grid dir if they don't exist, so user can easily fill in missing artwork only)\n\t\t\t--replace-existing)\n\t\t\t\tGSGDBA_HASFILE=\"replace\"\n\t\t\t\tshift ;;\n\t\t\t--backup-existing)\n\t\t\t\tGSGDBA_HASFILE=\"backup\"\n\t\t\t\tshift ;;\n\t\t\t--skip-existing)\n\t\t\t\tGSGDBA_HASFILE=\"skip\"\n\t\t\t\tshift ;;\n\t\t\t## Flag to force downloading to SteamGridDB folder (used for addNonSteamGame internally)\n\t\t\t--apply)\n\t\t\t\tGSGDBA_APPLYARTWORK=\"1\"\n\t\t\t\tshift ;;\n\t\t\t--no-apply)\n\t\t\t\tGSGDBA_APPLYARTWORK=\"0\"\n\t\t\t\tshift ;;\n\t\tesac\n\tdone\n\n\t# If we pass a name to search on and we get a Game ID back from SteamGridDB, set this as the ID to search for artwork on\n\tif [ -n \"$GSGDBA_SEARCHNAME\" ]; then\n\t\tif [ -n \"$GSGDBA_FILENAME\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching SteamGridDB for game name matching '$GSGDBA_SEARCHNAME'\"\n\t\t\tGSGDBA_FOUNDGAMEID=\"$( getSGDBGameIDFromTitle \"$GSGDBA_SEARCHNAME\" )\"\n\t\t\tif [ -n \"$GSGDBA_FOUNDGAMEID\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found game name matching '$GSGDBA_SEARCHNAME' with Game ID '$GSGDBA_FOUNDGAMEID' -- Using this Game ID to search for SteamGridDB Game Art\"\n\t\t\t\tGSGDBA_APPID=\"$GSGDBA_FOUNDGAMEID\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Forcing endpoint type as --nonsteam since we're searching with a found SteamGridDB Game ID\"\n\t\t\t\tSGDBENDPOINTTYPE=\"game\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - You must provide a filename AppID when searching with SteamGridDB Game Name\"\n\t\t\techo \"You must provide a filename AppID when searching with SteamGridDB Game Name\"\n\t\tfi\n\tfi\n\n\tSGDBSEARCHENDPOINT_HERO=\"${BASESTEAMGRIDDBAPI}/heroes/${SGDBENDPOINTTYPE}\"\n\tSGDBSEARCHENDPOINT_LOGO=\"${BASESTEAMGRIDDBAPI}/logos/${SGDBENDPOINTTYPE}\"\n\tSGDBSEARCHENDPOINT_BOXART=\"${BASESTEAMGRIDDBAPI}/grids/${SGDBENDPOINTTYPE}\"\t # Grid endpoint is used for Boxart and Tenfoot, which SteamGridDB counts as vertical/horizontal grids respectively\n\n\t# Download Hero, Logo, Boxart, Tenfoot from SteamGridDB from given endpoint using given AppID\n\t# On SteamGridDB tenfoot called horizontal Steam grid, so fetch it by passing specific dimensions matching this -- Users can override this, but default is what SteamGridDB expects for the tenfoot sizes\n\tif [ \"$SGDBDLHERO\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading Hero artwork, because SGDBDLHERO is '$SGDBDLHERO'\"\n\t\tdownloadArtFromSteamGridDB \"$GSGDBA_APPID\" \"$SGDBSEARCHENDPOINT_HERO\" \"${GSGDBA_FILENAME}_hero\" \"$SGDBHEROSTYLES\" \"$SGDBHERODIMS\" \"$SGDBHEROTYPES\" \"$SGDBHERONSFW\" \"$SGDBHEROHUMOR\" \"$SGDBHEROEPILEPSY\" \"$GSGDBA_HASFILE\" \"$GSGDBA_APPLYARTWORK\"\n\tfi\n\tif [ \"$SGDBDLLOGO\" -eq 1 ]; then\n\t\t# Logo doesn't have dimensions, so it's left intentionally blank\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading Logo artwork, because SGDBDLLOGO is '$SGDBDLLOGO'\"\n\t\tdownloadArtFromSteamGridDB \"$GSGDBA_APPID\" \"$SGDBSEARCHENDPOINT_LOGO\" \"${GSGDBA_FILENAME}_logo\" \"$SGDBLOGOSTYLES\" \"\" \"$SGDBLOGOTYPES\" \"$SGDBLOGONSFW\" \"$SGDBLOGOHUMOR\" \"$SGDBLOGOEPILEPSY\" \"$GSGDBA_HASFILE\" \"$GSGDBA_APPLYARTWORK\"\n\tfi\n\tif [ \"$SGDBDLBOXART\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading Boxart (Steam Vertical Grid) artwork, because SGDBDLBOXART is '$SGDBDLBOXART'\"\n\t\tdownloadArtFromSteamGridDB \"$GSGDBA_APPID\" \"$SGDBSEARCHENDPOINT_BOXART\" \"${GSGDBA_FILENAME}p\" \"$SGDBBOXARTSTYLES\" \"$SGDBBOXARTDIMS\" \"$SGDBBOXARTTYPES\" \"$SGDBBOXARTNSFW\" \"$SGDBBOXARTHUMOR\" \"$SGDBBOXARTEPILEPSY\" \"$GSGDBA_HASFILE\" \"$GSGDBA_APPLYARTWORK\"\n\tfi\n\tif [ \"$SGDBDLTENFOOT\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading Tenfoot (Steam Horizontal Grid) artwork, because SGDBDLTENFOOT is '$SGDBDLTENFOOT'\"\n\t\tdownloadArtFromSteamGridDB \"$GSGDBA_APPID\" \"$SGDBSEARCHENDPOINT_BOXART\" \"${GSGDBA_FILENAME}\" \"$SGDBTENFOOTSTYLES\" \"$SGDBTENFOOTDIMS\" \"$SGDBTENFOOTTYPES\" \"$SGDBTENFOOTNSFW\" \"$SGDBTENFOOTHUMOR\" \"$SGDBTENFOOTEPILEPSY\" \"$GSGDBA_HASFILE\" \"$GSGDBA_APPLYARTWORK\"\n\tfi\n\n\techo \"$GSGDBA_APPID\" > \"$NOSTSGDBIDSHMFILE\"  # Store ID in case other functions need it (i.e. addNonSteamGame) -- Little hacky, would rather return this somehow...\n}\n\nfunction getGridsForOwnedGames {\n\tif checkSGDbApi; then\n\t\twhile read -r OWNSTGAAID; do\n\t\t\tgetSteamGridDBArtwork \"$OWNSTGAAID\"\n\t\tdone <<< \"$( getOwnedAids )\"\n\tfi\n}\nfunction getGridsForInstalledGames {\n\tif checkSGDbApi; then\n\t\tif [ \"$(listInstalledGameIDs | wc -l)\" -gt 0 ]; then\n\t\t\twhile read -r INSTGAAID; do\n\t\t\t\tgetSteamGridDBArtwork \"$INSTGAAID\"\n\t\t\tdone <<< \"$( listInstalledGameIDs )\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No installed games found!\"\n\t\tfi\n\tfi\n}\nfunction getGridsForNonSteamGames {\n\tif ! haveAnySteamShortcuts ; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No Non-Steam Games found, skipping\"\n\t\techo \"No Non-Steam Games found, not downloading grids\"\n\n\t\treturn\n\tfi\n\n\tif checkSGDbApi; then\n\t\t# Get Non-Steam Game Name + ID\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Fetching artwork for all Non-Steam Games\"\n\n\t\t# Back up shortcuts.vdf in case something goes wrong...\n\t\tSCPATH=\"$STUIDPATH/config/$SCVDF\"\n\t\tcp \"$SCPATH\" \"${SCPATH//.vdf}_${PROGNAME}_backup.vdf\" 2>/dev/null\n\n\t\twhile read -r SCVDFE; do\n\t\t\tSVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\t\t\tSVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating artwork for game '$SVDFENAME ('$SVDFEAID')'\"\n\t\t\techo \"Updating artwork for game '$SVDFENAME ('$SVDFEAID')'\"\n\n\t\t\tcommandlineGetSteamGridDBArtwork --search-name=\"$SVDFENAME\" --filename-appid=\"$SVDFEAID\" --nonsteam\n\n\t\t\tCMDLINEGETSGDBARTAID=\"$( cat \"$NOSTSGDBIDSHMFILE\" )\"\n\t\t\tgetSteamGridDBNonSteamIcon \"$SVDFEAID\" \"$CMDLINEGETSGDBARTAID\"\n\t\t\tSVDFEICON=\"$( findNonSteamGameIcon )\"  # Return icon path )\"\n\t\t\tif [ -n \"$SVDFEICON\" ]; then  # Need this check because sometimes we don't get anything back from SGDB i.e. unknown name\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found icon for game '${SVDFENAME} (${SVDFEAID})' at '$SVDFEICON'\"\n\t\t\t\teditSteamShortcutEntry \"$SVDFEAID\" \"icon\" \"$SVDFEICON\"\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n}\n\n# Search SteamGridDB endpoint using game title and return the first (best match) Game ID\nfunction getSGDBGameIDFromTitle {\n\tSGDBSEARCHNAME=\"$1\"\n\n\tif [ -n \"$SGDBSEARCHNAME\" ]; then\n\t\tSGDBSEARCHENDPOINT=\"${BASESTEAMGRIDDBAPI}/search/autocomplete/${SGDBSEARCHNAME}\"\n\t\tif checkSGDbApi; then\n\t\t\tSGDBSEARCHNAMERESP=\"$( \"$WGET\" --timeout=\"${SGDBTIMEOUT}\" --tries=\"${SGDBRETRIES}\" --content-on-error --header=\"Authorization: Bearer $SGDBAPIKEY\" -q \"$SGDBSEARCHENDPOINT\" -O - 2>  >(grep -v \"SSL_INIT\") )\"\n\t\t\tif \"$JQ\" -e '.success' 1> /dev/null <<< \"$SGDBSEARCHNAMERESP\"; then\n\t\t\t\tif [ \"$( \"$JQ\" '.data | length' <<< \"$SGDBSEARCHNAMERESP\" )\" -gt 0 ]; then\n\t\t\t\t\tSGDBSEARCH_FOUNDNAME=\"$( \"$JQ\" '.data[0].name' <<< \"$SGDBSEARCHNAMERESP\" )\"\n\t\t\t\t\tSGDBSEARCH_FOUNDGAID=\"$( \"$JQ\" '.data[0].id' <<< \"$SGDBSEARCHNAMERESP\" )\"\n\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searched SteamGridDB for name '$SGDBSEARCHNAME'\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SteamGridDB return Game ID '$SGDBSEARCH_FOUNDGAID' and name '$SGDBSEARCH_FOUNDNAME'.\"\n\t\t\t\t\techo \"$SGDBSEARCH_FOUNDGAID\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - No game name was returned for this request -- Check if this game name works on SteamGridDB's website search\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - The server response wasn't 'success' for this request.\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No game name given.\"\n\t\techo \"No game name given.\"\n\tfi\n}\n\n# Remove artwork for single game based on AppID, or all grids\nfunction removeSteamGrids {\n\tRMGAMEGRID=\"${1,,}\"  # Should be Steam AppID or \"all\"\n\tSGGRIDDIR=\"${STUIDPATH}/config/grid\"\n\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No parameter given, cannot remove artwork, skipping\"\n\t\techo \"You must provide either a Steam AppID to remove artwork for, or specify 'all' to remove all game artwork\"\n\tfi\n\n\tif [ \"$1\" == \"all\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing grid artwork for all Steam games\"\n\t\techo \"Removing grid artwork for all Steam games...\"\n\t\trmDirIfExists \"${SGGRIDDIR}\"\n\t\tmkdir \"${SGGRIDDIR}\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Finished removing grid artwork for all Steam games\"\n\telse\n\t\t# Find any grid artwork for AppID -- Have to use find and use it on each artwork name because we don't want to match AppIDs which contain other AppIDs\n\t\t# i.e. searching for '140*' would return matches with '1402750' as well\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing any grid artwork for game with AppID '$1'\"\n\t\tfind \"${SGGRIDDIR}\" -name \"${RMGAMEGRID}_hero.*\" -exec rm {} \\;  # Hero\n\t\tfind \"${SGGRIDDIR}\" -name \"${RMGAMEGRID}_logo.*\" -exec rm {} \\;  # Logo\n\t\tfind \"${SGGRIDDIR}\" -name \"${RMGAMEGRID}p.*\" -exec rm {} \\;  # Boxart\n\t\tfind \"${SGGRIDDIR}\" -name \"${RMGAMEGRID}.*\" -exec rm {} \\;  # Tenfoot\n\t\tfind \"${SGGRIDDIR}\" -name \"${RMGAMEGRID}_icon.*\" -exec rm {} \\;  # Icon (custom STL name for Non-Steam Games)\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Finishedd removing grid artwork for game with AppID '$1' -- Assuming 'find' found any artwork in the first place\"\n\tfi\n\n\techo \"Finished removing grid artwork, restart Steam for the changes to fully take effect.\"\n}\n\nfunction getDataForAllGamesinSharedConfig {\n\twhile read -r CATAID; do\n\t\tgetGameData \"$CATAID\"\n\tdone <<< \"$(getParsableGameList | cut -d '+' -f1 | sed \"s:\\\"::g\" | grep \"[0-9]\" | sort -n)\"\n}\n\nfunction getActiveSteamCollections {\n\tgetParsableGameList | grep \"\\\"tags\\\"\" | awk -F '{+' '{print $NF}' | sed 's/\\\"/'$'\\\\\\n/g' | sort -u | grep -i \"^[a-z]\"\n}\n\nfunction createCollectionMenus {\n\t# create launcher menu for all installed games\n\tDFIDIR=\"$DFDIR/installed\"\n\tmkProjDir \"$DFIDIR\"\n\n\tif [ \"$(listInstalledGameIDs | wc -l)\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No installed games found!\"\n\telse\n\t\twhile read -r CATGAME; do\n\t\t\tif [ -n \"$CATGAME\" ] && [ ! -h \"$DFIDIR/$CATGAME.desktop\" ] && [ -f \"$STLGDESKD/$CATGAME.desktop\" ]; then\n\t\t\t\tln -s \"$STLGDESKD/$CATGAME.desktop\" \"$DFIDIR\"\n\t\t\tfi\n\t\tdone <<< \"$(listInstalledGameIDs)\"\n\tfi\n\n\t# create launcher menu for collection '$1'\n\tif [ -n \"$1\" ] && [ \"$1\" == \"update\" ] && [ \"$(find \"$DFDIR\" -name \"*.desktop\" | wc -l)\" -gt 0 ]; then\n\t\tfind \"$DFDIR\" -name \"*.desktop\" -exec rm {} \\;\n\tfi\n\n\tif [ \"$(find \"$DFDIR\" -name \"*.desktop\" | wc -l)\" -eq 0 ]; then\n\t\twhile read -r CAT; do\n\t\t\tDFCDIR=\"$DFDIR/$CAT\"\n\t\t\tmkProjDir \"$DFCDIR\"\n\t\t\twhile read -r CATGAME; do\n\t\t\t\tif [ -f \"$STLGDESKD/$CATGAME.desktop\" ]; then\n\t\t\t\t\tif [ ! -h \"$DFCDIR/$CATGAME.desktop\" ]; then\n\t\t\t\t\t\tln -s \"$STLGDESKD/$CATGAME.desktop\" \"$DFCDIR\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tdone <<< \"$(getInstalledGamesFromCollection \"$CAT\")\"\n\t\tdone < <(getActiveSteamCollections)\n\tfi\n}\n\nfunction listSteamLibraries {\n\tfunction getBIF {\n\t\tlocal REGEX='\"(BaseInstallFolder[^\"]*|path)\"\\s+\"(.*)\"\\s*$'\n\t\tin=\"$1\"\n\t\tif [[ $in =~ $REGEX ]] && [ -n \"${BASH_REMATCH[2]}\" ]; then\n\t\t\techo \"${BASH_REMATCH[2]}/$SA\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Failed to parse Base Install Folder from '$in'\"\n\t\tfi\n\t}\n\n\tfunction listSLs {\n\t\tif [ -f \"$CFGVDF\" ] || [ -f \"$LFVDF\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching appmanifest files in '$CFGVDF' and '$LFVDF'\" \"X\" \"$APPMALOG\"\n\t\t\twhile read -r BIF; do\n\t\t\t\tgetBIF \"$BIF\"\n\t\t\tdone <<< \"$(grep \"\\\"BaseInstallFolder\\|\\\"path\\\"\" \"$CFGVDF\" \"$LFVDF\" 2>/dev/null)\" | sort -u\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Neither file CFGVDF '$CFGVDF' nor file LFVDF '$LFVDF' found - this should not happen! - skipping\"\n\t\tfi\n\t}\n\n\tMAXAGE=360\n\tif [ ! -f \"$STELILIST\" ] || test \"$(find \"$STELILIST\" -mmin +\"$MAXAGE\")\"; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - (Re-)creating '$STELILIST'\"\n\t\trm \"$STELILIST\" 2>/dev/null\n\t\tlistSLs | sort -u > \"$STELILIST\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - not recreating already available '$STELILIST'\"\n\tfi\n}\n\nfunction setSteamLibraryPaths {\n\twhile read -r lpath; do\n\t\t# Ignores library folders if they are not valid directories -- This var comes from Steam but apparently can still have invalid library folders, maybe Steam bug?\n\t\tif [ ! -d \"$lpath\" ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Library folder '$lpath' does not seem to be a valid directory, even though this comes from Steam itself - Ignoring, but please report if this is invalid or causes issues\"\n\t\t\tcontinue\n\t\tfi\n\n\t\tif [ -z \"$STEAM_COMPAT_LIBRARY_PATHS\" ]; then\n\t\t\tSTEAM_COMPAT_LIBRARY_PATHS=\"$lpath\"  # This var should come from Steam, even the Proton script uses it\n\t\telse\n\t\t\tif ! grep -q \"$lpath\" <<< \"$STEAM_COMPAT_LIBRARY_PATHS\" ; then\n\t\t\t\tSTEAM_COMPAT_LIBRARY_PATHS=\"$STEAM_COMPAT_LIBRARY_PATHS:$lpath\"\n\t\t\tfi\n\t\tfi\n\n\t\twhile read -r cmpath; do\n\t\t\tif [ -n \"$cmpath\" ]; then\n\t\t\t\tif [ -z \"$STEAM_COMPAT_MOUNTS\" ]; then\n\t\t\t\t\tSTEAM_COMPAT_MOUNTS=\"$cmpath\"\n\t\t\t\telse\n\t\t\t\t\tif ! grep -q \"$cmpath\" <<< \"$STEAM_COMPAT_MOUNTS\" ; then\n\t\t\t\t\t\tSTEAM_COMPAT_MOUNTS=\"$STEAM_COMPAT_MOUNTS:$cmpath\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [ -z \"$STEAM_COMPAT_TOOL_PATHS\" ]; then\n\t\t\t\t\tSTEAM_COMPAT_TOOL_PATHS=\"$cmpath\"\n\t\t\t\telse\n\t\t\t\t\tif ! grep -q \"$cmpath\" <<< \"$STEAM_COMPAT_TOOL_PATHS\" ; then\n\t\t\t\t\t\tSTEAM_COMPAT_TOOL_PATHS=\"$STEAM_COMPAT_TOOL_PATHS:$cmpath\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone <<< \"$(find \"$lpath\" -mindepth 2 -maxdepth 2 -type d \\( -name \"Proton\" -o -name \"$STEWOS\" -o -name \"${SLR}*\" \\))\"\n\tdone < \"$STELILIST\"\n\n\texport STEAM_COMPAT_LIBRARY_PATHS\n\texport STEAM_COMPAT_MOUNTS\n\texport STEAM_COMPAT_TOOL_PATHS\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - STEAM_COMPAT_LIBRARY_PATHS set to '$STEAM_COMPAT_LIBRARY_PATHS'\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - STEAM_COMPAT_MOUNTS set to '$STEAM_COMPAT_MOUNTS'\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - STEAM_COMPAT_TOOL_PATHS set to '$STEAM_COMPAT_TOOL_PATHS'\"\n}\n\nfunction listAppManifests {\n\tfunction findAppMa {\n\t\tif [ -d \"$1\" ]; then\n\t\t\tfind \"$1\" -mindepth 1 -maxdepth 1 -type f -name \"appmanifest_*.acf\"\n\t\tfi\n\t}\n\n\t# getBIF takes a string containing a BaseInstallFolder or path and returns the\n\tfunction getBIF {\n\t\t# REGEX needs to be a variable, quoted string literals are not treated as regexps by test\n\t\t# BASH_REMATCH[1] will be the key (BaseInstallFolder* or path)\n\t\t# BASH_REMATCH[2] will be the value (the actual steam library folder)\n\t\tlocal REGEX='\"(BaseInstallFolder[^\"]*|path)\"\\s+\"(.*)\"\\s*$'\n\t\tin=\"$1\"\n\n\t\t# Test the regex against input, then print the extracted path to stdout\n\t\tif [[ $in =~ $REGEX ]] && [ -n \"${BASH_REMATCH[2]}\" ]; then\n\t\t\techo \"${BASH_REMATCH[2]}/$SA\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Failed to parse Base Install Folder from '$in'\"\n\t\tfi\n\t}\n\n\tfunction listAllAppMas {\n\t\tif [ -d \"$DEFSTEAMAPPS\" ]; then\n\t\t\tfindAppMa \"$DEFSTEAMAPPS\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$DEFSTEAMAPPS' not found - this should not happen! - skipping\"\n\t\tfi\n\n\t\tif [ -f \"$CFGVDF\" ] || [ -f \"$LFVDF\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching appmanifest files in '$CFGVDF' and '$LFVDF'\" \"X\" \"$APPMALOG\"\n\t\t\twhile read -r BIF; do\n\t\t\t\tfindAppMa \"$(getBIF \"$BIF\")\"\n\t\t\tdone <<< \"$(grep \"\\\"BaseInstallFolder\\|\\\"path\\\"\" \"$CFGVDF\" \"$LFVDF\" 2>/dev/null)\" | sort -u\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Neither file CFGVDF '$CFGVDF' nor file LFVDF '$LFVDF' found - this should not happen! - skipping\"\n\t\tfi\n\t}\n\n\tlistAllAppMas | sort -u\n}\n\nfunction createCollectionList {\n\tfunction listCAT {\n\t\twhile read -r CATMENU; do\n\t\t\techo \"${CATMENU##*/}\"\n\t\tdone <<< \"$(find \"$DFDIR\" -mindepth 1 -maxdepth 1 -type d)\"\n\t}\n\tCATLIST=\"$(listCAT | sort -u | tr '\\n' '!' | sed \"s:^!::\" | sed \"s:!$::\")\"\n}\n\nfunction setGeom {\n\tGEOM=\"--geometry=${WINX}x${WINY}+${POSX}+${POSY}\"\n}\n\nfunction pollWinRes {\n\tTITLE=\"$1\"\n\tPOSX=0\n\tPOSY=0\n\tunset COLCOUNT\n\n\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\tSCREENRES=\"1280x800\"\n\t\tWINX=1280\n\t\tWINY=800\n\t\tsetGeom\n\telse\n\t\tSCREENRES=\"$(getScreenRes r)\"\n\tfi\n\n\tif [ -z \"$SCREENRES\" ]; then  SCREENRES=\"any\"; fi\n\n\tif [ \"$FIXGAMESCOPE\" -eq 0 ]; then  # skip this if FIXGAMESCOPE is 1 - so for now only if running in GameMode on the Steam Deck\n\t\tTEMPL=\"template\"\n\t\tGAMEGUICFG=\"$STLGUIDIR/$SCREENRES/${AID}/${TITLE}.conf\"\n\t\tTEMPLGUICFG=\"$STLGUIDIR/$SCREENRES/${TEMPL}/${TITLE}.conf\"\n\t\tGLOBTEMPLGUICFG=\"$GLOBALSTLGUIDIR/$SCREENRES/${TEMPL}/${TITLE}.conf\"\n\n\t\tmkProjDir \"${GAMEGUICFG%/*}\"\n\t\tmkProjDir \"${TEMPLGUICFG%/*}\"\n\n\t\tif [ -f \"$TEMPLGUICFG\" ] && [ ! -f \"$GAMEGUICFG\" ]; then\n\t\t\tloadCfg \"$TEMPLGUICFG\" X\n\t\t\tsetGeom\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using GEOM '$GEOM' from '$TEMPLGUICFG'\" \"$WINRESLOG\"\n\t\telif [ -f \"$GLOBTEMPLGUICFG\" ] && [ ! -f \"$GAMEGUICFG\" ]; then\n\t\t\tloadCfg \"$GLOBTEMPLGUICFG\" X\n\t\t\tsetGeom\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using GEOM '$GEOM' from '$GLOBTEMPLGUICFG'\" \"$WINRESLOG\"\n\t\telif [ -f \"$GAMEGUICFG\" ]; then\n\t\t\tloadCfg \"$GAMEGUICFG\" X\n\t\t\tsetGeom\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using GEOM '$GEOM' from '$GAMEGUICFG'\" \"$WINRESLOG\"\n\t\telse\n\t\t\ttouch \"$GAMEGUICFG\"\n\t\t\techo \"WINX=\\\"$WINX\\\"\" > \"$GAMEGUICFG\"\n\t\t\techo \"WINY=\\\"$WINY\\\"\" >> \"$GAMEGUICFG\"\n\n\t\t\tif [ -z \"$GEOM\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using harmless '--center' as variable 'GEOM', because there are multiple side-effects in yad if the string is empty\"\n\t\t\t\tGEOM=\"--center\"\n\t\t\tfi\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating initial '$GAMEGUICFG' with unused default values\" \"$WINRESLOG\"\n\t\tfi\n\tfi\n\n\tif [ -n \"$2\" ]; then\n\t\tDEFCOL=\"$2\"\n\telse\n\t\tDEFCOL=1\n\tfi\n\n\tif [ -z \"$COLCOUNT\" ]; then\n\t\tif [ \"$ONSTEAMDECK\" -eq 0 ]; then\n\t\t\tupdateConfigEntry \"COLCOUNT\" \"$DEFCOL\" \"$GAMEGUICFG\"\n\t\tfi\n\t\tCOLCOUNT=\"$DEFCOL\"\n\tfi\n\n\tCURGUICFG=\"$GAMEGUICFG\"\n\texport CURGUICFG=\"$CURGUICFG\"\n\n\tif [ \"$FIXGAMESCOPE\" -eq 0 ]; then\n\t\tupdateWinRes \"$TITLE\" \"$GAMEGUICFG\" \"$TEMPLGUICFG\" &\n\tfi\n}\n\nfunction openGameLauncher {\n\tfunction GLgui {\n\t\tLISTDIR=\"$DFDIR/$1\"\n\t\tif [ -d \"$LISTDIR\" ] && [ \"$(find \"$LISTDIR\" -name \"*.desktop\" | wc -l)\" -ge 1 ]; then\n\t\t\t\"$YAD\" --f1-action=\"$F1ACTION\" --icons --window-icon=\"$STLICON\" --read-dir=\"$LISTDIR\" \"$WINDECO\" --title=\"$TITLE\" --single-click --keep-icon-size --center --compact --sort-by-name \"$GEOM\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No games found in '$LISTDIR' or directory itself not found\"\n\t\tfi\n\t}\n\n\tif grep -q \"update\" <<< \"$@\"; then\n\t\tcreateCollectionMenus \"update\"\n\telse\n\t\tcreateCollectionMenus \"dummy\"\n\tfi\n\n\tif [ \"$(find \"$DFDIR\" -name \"*.desktop\" | wc -l)\" -eq 0 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No desktop file found in '$DFDIR'\"\n\t\tif [ \"$1\" == \"auto\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found argument 'auto'. Automatically creating/downloading required data for all installed games found\"\n\t\t\tgetGameDataForInstalledGames\n\t\t\tif [ -n \"$2\" ] && [ \"$2\" == \"update\" ]; then\n\t\t\t\tcreateCollectionMenus \"$2\"\n\t\t\telse\n\t\t\t\tcreateCollectionMenus \"dummy\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Either add argument 'auto' to automatically create/download required data or check '$PROGCMD --help'\"\n\t\t\texit\n\t\tfi\n\tfi\n\n\texport CURWIKI=\"$PPW/Game-Launcher\"\n\tTITLE=\"${PROGNAME}-Launcher\"\n\tpollWinRes \"$TITLE\"\n\n\tif [ -z \"$1\" ] || [ \"$1\" == \"auto\" ] || [ \"$1\" == \"update\" ]; then\n\t\tGLgui \"installed\"\n\telse\n\t\tif [ \"$1\" == \"menu\" ]; then\n\t\t\tcreateCollectionList\n\t\t\tCATMENU=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --center \"$WINDECO\" --form --scroll --separator=\"\\n\" --quoted-output \\\n\t\t\t--text=\"$(spanFont \"$GUI_CHOOSECAT\" \"H\")\" \\\n\t\t\t--field=\"$GUI_CHOOSECATS\":CB \"$(cleanDropDown \"installed\" \"$CATLIST\")\" \\\n\t\t\t--title=\"$TITLE\" \"$GEOM\"\n\t\t\t)\"\n\n\t\t\tif [ -n \"${CATMENU//\\'}\" ]; then\n\t\t\t\tGLgui \"${CATMENU//\\'}\"\n\t\t\tfi\n\t\telif [ \"$1\" == \"last\" ]; then\n\t\t\tif [ -f \"$LASTRUN\" ]; then\n\t\t\t\tPREVAID=\"$(grep \"^PREVAID\" \"$LASTRUN\" | cut -d '=' -f2)\"\n\t\t\t\tif [ -n \"$PREVAID\" ]; then\n\t\t\t\t\tAID=\"${PREVAID//\\\"}\"\n\t\t\t\t\tif [ -f \"$STLGDESKD/$AID.desktop\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$1' selected, so opening splash for '$STLGDESKD/$AID.desktop'\"\n\t\t\t\t\t\tDFCDIR=\"$DFDIR/last\"\n\t\t\t\t\t\tmkProjDir \"$DFCDIR\"\n\t\t\t\t\t\tcp \"$STLGDESKD/$AID.desktop\" \"$DFCDIR\"\n\t\t\t\t\t\tGLgui \"$1\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$1' selected, but file '$STLGDESKD/$AID.desktop' not found\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\telif [ -d \"$DFDIR/$1\" ]; then\n\t\t\tGLgui \"$1\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Steam Collection '$1' not found in '$DFDIR'\"\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Only found '$(ls \"$DFDIR\")'\"\n\t\tfi\n\tfi\n}\n\nfunction DBGMS {\n\techo \"$(date) - $1\" >> \"$STLSHM/DBGMS.txt\"\n}\n\nfunction resetAID {\n\tif [ -n \"$1\" ]; then\n\t\tif [ -n \"${1##*[!0-9]*}\" ]; then\n\t\t\tAID=\"$1\"\n\t\telse\n\t\t\tif [ \"$1\" == \"last\" ]; then\n\t\t\t\tif [ -f \"$LASTRUN\" ]; then\n\t\t\t\t\tPREVAID=\"$(grep \"^PREVAID\" \"$LASTRUN\" | cut -d '=' -f2)\"\n\t\t\t\t\tif [ -n \"$PREVAID\" ]; then\n\t\t\t\t\t\tAID=\"${PREVAID//\\\"}\"\n\t\t\t\t\t\tPREVGAME=\"$(grep \"^PREVGAME\" \"$LASTRUN\" | cut -d '=' -f2)\"\n\t\t\t\t\t\tif [ -n \"$PREVGAME\" ]; then\n\t\t\t\t\t\t\tGN=\"${PREVGAME//\\\"}\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tAID=\"$PLACEHOLDERAID\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\t# should not happen, but just in case it is still empty, set the placeholders\n\tif [ -z \"$AID\" ]; then\n\t\tAID=\"$PLACEHOLDERAID\"\n\tfi\n\n\tif [ \"$AID\" == \"$PLACEHOLDERAID\" ]; then\n\t\tGN=\"$PLACEHOLDERGN\"\n\tfi\n\tsetAIDCfgs\n}\n\nfunction setGN {\n\tif [ -z \"$GN\" ]; then\n\t\tgetGameName \"$1\"\n\t\tGN=\"$GAMENAME\"\n\tfi\n}\n\nfunction createSymLink {\n\tif [ ! -L \"$3\" ] && [ -e \"$2\" ]; then\n\t\tln -s \"$2\" \"$3\"\n\t\twritelog \"INFO\" \"$1 - Set symlink from '$2' to '$3'\"\n\telse\n\t\tif [ -L \"$3\" ] && [ -z \"$4\" ]; then\n\t\t\twritelog \"INFO\" \"$1 - Symlink '$3' already exists\"\n\t\tfi\n\n\t\tif [ ! -e \"$2\" ]; then\n\t\t\twritelog \"INFO\" \"$1 - '$2' does not exists\"\n\t\tfi\n\tfi\n}\n\nfunction linkLog {\n\tif [ -z \"$GN\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping symlinking logfile - no valid game name found\"\n\telse\n\t\tcreateSymLink \"${FUNCNAME[0]}\" \"$LOGFILE\" \"$LOGDIRTI/$GN.log\"\n\tfi\n}\n\nfunction setGlobalAIDCfgs {\n\tGLOBALSBSTWEAKCFG=\"$GLOBALSBSTWEAKS/$AID.conf\"\n\tGLOBALTWEAKCFG=\"$GLOBALTWEAKS/$AID.conf\"\n}\n\nfunction setCompatDataTitle {\n\tif [ \"$STORECOMPDATTITLE\" -eq 1 ] && [ -n \"$OSCDP\" ]; then\n\t\tmkProjDir \"$STLCOMPDAT\"\n\t\tCOMPDATTITLE=\"$STLCOMPDAT/$GN\"\n\t\tif readlink \"$COMPDATTITLE\" >/dev/null ; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Symlink $COMPDATTITLE already exists\"\n\t\t\tif [ \"$(readlink \"$COMPDATTITLE\")\" == \"$OSCDP\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Symlink '$COMPDATTITLE' already points to the correct directory '$OSCDP'\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Symlink '$COMPDATTITLE' points to '$(readlink \"$COMPDATTITLE\")' which is not the correct directory '$OSCDP' - renewing!\"\n\t\t\t\trm \"$COMPDATTITLE\"\n\t\t\t\tcreateSymLink \"${FUNCNAME[0]}\" \"$OSCDP\" \"$COMPDATTITLE\"\n\t\t\tfi\n\t\telse\n\t\t\tcreateSymLink \"${FUNCNAME[0]}\" \"$OSCDP\" \"$COMPDATTITLE\"\n\t\tfi\n\tfi\n}\n\nfunction setGameVars {\n\tgetGameOS \"$@\"\n\t# common\n\tif [ -n \"$STEAM_COMPAT_INSTALL_PATH\" ]; then\n\t\tEFD=\"$STEAM_COMPAT_INSTALL_PATH\"\n\telse\n\t\tEFD=\"$(dirname \"$GP\")\"\n\tfi\n\n\tGFD=\"$(awk -F 'common' '{print $1}' <<< \"$EFD\")common/$(awk -F 'common' '{print $NF}' <<< \"$EFD\" | cut -d'/' -f2)\" # f.e. used for vortex symlinks\n\tGN=\"$(grep -oE 'common/[^\\/]+' <<< \"$EFD\" | awk -F 'common/' '{print $NF}')\"\t\t\t\t# THIS is hopefully the proper game name\n\n\tif [ -z \"$STEAM_COMPAT_TOOL_PATHS\" ] || [ \"$STEAM_COMPAT_TOOL_PATHS\" == \"\" ]; then\n\t\tHAVESCTP=0\n\telse\n\t\tHAVESCTP=1\n\t\tORG_STEAM_COMPAT_TOOL_PATHS=\"$STEAM_COMPAT_TOOL_PATHS\"\n\tfi\n\n\tif [ -n \"$STEAM_COMPAT_INSTALL_PATH\" ]; then\n\t\tSTECOSHAPA=\"$STEAM_COMPAT_SHADER_PATH\"\n\tfi\n\n\t# maybe loop through all paths possibly in STEAM_COMPAT_LIBRARY_PATHS?\n\tif [ -d \"$STEAM_COMPAT_LIBRARY_PATHS\" ]; then\n\t\tAPPMAFE=\"${STEAM_COMPAT_LIBRARY_PATHS}/appmanifest_${AID}.acf\"\n\telse\n\t\tAPPMAFE=\"$(listAppManifests | grep -m1 \"${1}.acf\")\"  # this should cover it though as well already\n\tfi\n\n\tREAPSESTR=\"reaper SteamLaunch\"\n\tif grep -q \"$REAPSESTR\" <<< \"$@\"; then\n\t\tHAVEREAP=1\n\telse\n\t\tHAVEREAP=0\n\tfi\n\n\tif grep -q \"$SLR\" <<< \"$@\"; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found SLR is launch option\"\n\t\tHAVESLR=1\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No SLR is in launch option\"\n\t\tHAVESLR=0\n\tfi\n\n\tINSTLSTR=\"${PROGNAME}/${PROGCMD}\"\n\tif grep -q \"$INSTLSTR\" <<< \"$@\"; then\n\t\tHAVEINSTL=1\n\telse\n\t\tHAVEINSTL=0\n\tfi\n\n\t# first put the initial command line into an array - who knows if we need it again\n\twhile read -r INGARG; do\n\t\tmapfile -t -O \"${#INGCMD[@]}\" INGCMD <<< \"$INGARG\"\n\tdone <<< \"$(printf \"%s\\n\" \"$@\")\"\n\n\t# then put the reaper command into an array, as it is the first command in the line\n\tif [ \"$HAVEREAP\" -eq 1 ]; then\n\t\tFOUNDREAP=0\n\t\twhile read -r INGARG; do\n\t\t\tif [ \"$FOUNDREAP\" -eq 0 ]; then\n\t\t\t\tmapfile -t -O \"${#REAPCMD[@]}\" REAPCMD <<< \"$INGARG\"\n\t\t\t\tif [ \"$INGARG\" == \"--\" ]; then\n\t\t\t\t\tFOUNDREAP=1\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tmapfile -t -O \"${#WIPAGCMD[@]}\" WIPAGCMD <<< \"$INGARG\"\n\t\t\tfi\n\t\tdone <<< \"$(printf \"%s\\n\" \"${INGCMD[@]}\")\"\n\telse\n\t\twhile read -r INGARG; do\n\t\t\tmapfile -t -O \"${#WIPAGCMD[@]}\" WIPAGCMD <<< \"$INGARG\"\n\t\tdone <<< \"$(printf \"%s\\n\" \"${INGCMD[@]}\")\"\n\tfi\n\tTHISREAP=\"${REAPCMD[*]}\"\n\tTHISREAP=\"${THISREAP% SteamLaunch*}\"\n\tif [ -z \"$LASTREAP\" ] || { [ -n \"$LASTREAP\" ] && [ \"$LASTREAP\" != \"$THISREAP\" ];}; then\n\t\tupdateConfigEntry \"LASTREAP\" \"$THISREAP\" \"$STLDEFGLOBALCFG\"\n\tfi\n\n\t# if the SLR is called from command line put it into an array as well\n\tif [ \"$HAVESLR\" -eq 1 ]; then\n\t\tFOUNDSLR=0\n\t\twhile read -r ORGARG; do\n\t\t\tif [ \"$FOUNDSLR\" -eq 0 ]; then\n\t\t\t\tmapfile -t -O \"${#RUNSLR[@]}\" RUNSLR <<< \"$ORGARG\"\n\t\t\t\tif [ \"$ORGARG\" == \"--\" ]; then\n\t\t\t\t\tFOUNDSLR=1\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tmapfile -t -O \"${#WIPBGCMD[@]}\" WIPBGCMD <<< \"$ORGARG\"\n\t\t\tfi\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPAGCMD[@]}\")\"\n\telse\n\t\twhile read -r ORGARG; do\n\t\t\tmapfile -t -O \"${#WIPBGCMD[@]}\" WIPBGCMD <<< \"$ORGARG\"\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPAGCMD[@]}\")\"\n\tfi\n\n\tif [ -z \"$LASTSLR\" ] || { [ -n \"$LASTSLR\" ] && [ \"$LASTSLR\" != \"${RUNSLR[*]}\" ];}; then\n\t\tupdateConfigEntry \"LASTSLR\" \"${RUNSLR[*]}\" \"$STLDEFGLOBALCFG\"\n\tfi\n\n\t# put the proton path into an array as well if provided from command line\n\tif [ \"$HAVEINPROTON\" -eq 1 ]; then\n\t\tFOUNDIPRO=0\n\t\twhile read -r ORGARG; do\n\t\t\tif [ \"$FOUNDIPRO\" -eq 0 ]; then\n\t\t\t\tmapfile -t -O \"${#INPROTCMD[@]}\" INPROTCMD <<< \"$ORGARG\"\n\t\t\t\tif [ \"$ORGARG\" == \"$WFEAR\" ]; then\n\t\t\t\t\tFOUNDIPRO=1\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tmapfile -t -O \"${#WIPCGCMD[@]}\" WIPCGCMD <<< \"$ORGARG\"\n\t\t\tfi\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPBGCMD[@]}\")\"\n\n\t\tif [ \"${INPROTCMD[-1]}\" == \"$WFEAR\" ]; then\n\t\t\tunset \"INPROTCMD[-1]\"  # removing last INPROTCMD element as it is '$WFEAR'\n\t\tfi\n\n\t\tINPROTV=\"$(setProtonPathVersion \"${INPROTCMD[*]}\")\"\n\telse\n\t\twhile read -r ORGARG; do\n\t\t\tmapfile -t -O \"${#WIPCGCMD[@]}\" WIPCGCMD <<< \"$ORGARG\"\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPBGCMD[@]}\")\"\n\tfi\n\n\t# put the own $PROGCMD command into an array if provided from command line\n\tif [ \"$HAVEINSTL\" -eq 1 ]; then\n\t\tFOUNDINSTL=0\n\t\twhile read -r ORGARG; do\n\t\t\tif [ \"$FOUNDINSTL\" -eq 0 ]; then\n\t\t\t\tmapfile -t -O \"${#INSTLCMD[@]}\" INSTLCMD <<< \"$ORGARG\"\n\t\t\t\tif [[ \"$ORGARG\" =~ $INSTLSTR ]]; then\n\t\t\t\t\tFOUNDINSTL=1\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tmapfile -t -O \"${#WIPDGCMD[@]}\" WIPDGCMD <<< \"$ORGARG\"\n\t\t\tfi\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPCGCMD[@]}\")\"\n\telse\n\t\twhile read -r ORGARG; do\n\t\t\tmapfile -t -O \"${#WIPDGCMD[@]}\" WIPDGCMD <<< \"$ORGARG\"\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPCGCMD[@]}\")\"\n\tfi\n\n\t# SLRCT = Steam Linux Runtime from Compatibility Tool\n\t# Refers to instances where the SLR comes in the launch command for a game\n\t# This can happen if you launch a game with SLR 1.0 or 3.0 selected as a compatibility tool, as Steam\n\t# will give the launch command wrapped with the SLR.\n\t#\n\t# See setSLRReap for implementation on how we use this\n\tif grep -q \"$SLR\" <<< \"${WIPDGCMD[@]}\"; then\n\t\tHAVESLRCT=1\n\telse\n\t\tHAVESLRCT=0\n\tfi\n\n\tif [ \"$HAVESLRCT\" -eq 1 ]; then\n\t\tFOUNDSLR=0\n\t\twhile read -r ORGARG; do\n\t\t\tif [ \"$FOUNDSLR\" -eq 0 ]; then\n\t\t\t\tmapfile -t -O \"${#RUNSLRCT[@]}\" RUNSLRCT <<< \"$ORGARG\"\n\t\t\t\tif [ \"$ORGARG\" == \"--\" ]; then\n\t\t\t\t\tFOUNDSLR=1\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tmapfile -t -O \"${#ORGFGCMD[@]}\" ORGFGCMD <<< \"$ORGARG\"\n\t\t\tfi\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPDGCMD[@]}\")\"\n\telse\n\t\twhile read -r ORGARG; do\n\t\t\tmapfile -t -O \"${#ORGFGCMD[@]}\" ORGFGCMD <<< \"$ORGARG\"\n\t\tdone <<< \"$(printf \"%s\\n\" \"${WIPDGCMD[@]}\")\"\n\tfi\n\n\t# what is left now is the game executable and its command line arguments - splitting\n\n\tFOUNDORGGCMD=0\n\twhile read -r ORGARG; do\n\t\tif [ \"$FOUNDORGGCMD\" -eq 0 ]; then\n\t\t\tmapfile -t -O \"${#ORGGCMD[@]}\" ORGGCMD <<< \"$ORGARG\"\n\t\t\tif [[ \"$ORGARG\" =~ $GP ]]; then\n\t\t\t\tFOUNDORGGCMD=1\n\t\t\tfi\n\t\telse\n\t\t\tmapfile -t -O \"${#ORGCMDARGS[@]}\" ORGCMDARGS <<< \"$ORGARG\"\n\t\tfi\n\tdone <<< \"$(printf \"%s\\n\" \"${ORGFGCMD[@]}\")\"\n\n\tif [ \"${ORGGCMD[0]}\" == \"$WFEAR\" ]; then\n\t\t# removing first ORGGCMD element as it is '$WFEAR'\n\t\tunset \"ORGGCMD[0]\"\n\tfi\n\n\tif [ -z \"$GAMEEXE\" ]; then\n\t\tGAMEEXE=\"${ORGGCMD[*]}\"\n\t\tGAMEEXE=\"${GAMEEXE##*/}\"\n\tfi\n}\n\nfunction getGameOS {\n\tfunction setLin {\n\t\tif [ -f \"$OSCHECKGAMEEXE\" ]; then\n\t\t\tGP=\"$OSCHECKGAMEEXE\"\n\t\telse\n\t\t\tGPRAW=\"$(printf \"%s\\n\" \"$@\" | grep -m1 \"$SAC\")\"\n\t\t\tif grep -q \"/./\" <<< \"$GPRAW\"; then\n\t\t\t\tGP=\"${GPRAW//\\/.\\//\\/}\"\n\t\t\telse\n\t\t\t\tGP=\"$GPRAW\"\n\t\t\tfi\n\t\tfi\n\t\tABSGAMEEXEPATH=\"$GP\"\n\t\tGE=\"${GP##*/}\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# the game executable\n\t\tISGAME=3\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# no STEAM_COMPAT_DATA_PATH, so it is no windows game\n\t}\n\n\tfunction setWin {\n\t\tif [ -f \"$OSCHECKGAMEEXE\" ]; then\n\t\t\tGP=\"$OSCHECKGAMEEXE\"\n\t\telse\n\t\t\tGP=\"$(printf \"%s\\n\" \"$@\" | grep -v \"proton\\|$SLR\" | grep -m1 \"$SAC\")\"\t\t\t\t# the absolute game path of the windows game exe\n\t\tfi\n\t\tABSGAMEEXEPATH=\"$GP\"\n\t\tGPFX=\"$STEAM_COMPAT_DATA_PATH/pfx\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t# currently used WINEPREFIX\n\t\tGE=\"$(awk -F '.exe' '{print $1}' <<< \"${GP##*/}\")\"\t\t\t\t\t\t\t\t\t\t# just the windows game exe name\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$GE' determined to be a Windows Game\"\n\t\tISGAME=2\n\t}\n\tif [ \"$STLPLAY\" -eq 0 ]; then\n\t\tif [ \"$ABSGAMEEXEPATH\" == \"$NON\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting game OS detection\"\n\n\t\t\twhile read -r INGARG; do\n\t\t\t\tif grep -q \"$STEAM_COMPAT_INSTALL_PATH\" <<< \"$INGARG\"; then\n\t\t\t\t\tOSCHECKGAMEEXE=\"$INGARG\"\n\t\t\t\tfi\n\t\t\t\tmapfile -t -O \"${#OSCHECKINGCMD[@]}\" OSCHECKINGCMD <<< \"$INGARG\"\n\t\t\tdone <<< \"$(printf \"%s\\n\" \"$@\")\"\n\n\t\t\tif [ -n \"$STEAM_COMPAT_DATA_PATH\" ]; then\n\t\t\t\tif grep -q \"$L2EA\" <<< \"$@\"; then\n\t\t\t\t\tISORIGIN=1\n\t\t\t\tfi\n\n\t\t\t\tif [ \"$ISORIGIN\" -eq 1 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$L2EA' in the command line, so this is a Windows game!\"\n\t\t\t\t\tsetWin \"$@\"\n\t\t\t\telif [ -f \"$OSCHECKGAMEEXE\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Making some checks on '$OSCHECKGAMEEXE' to determine the OS version of the game\"\n\t\t\t\t\tif grep -q \"shell script\" <<< \"$(file \"$(realpath \"$OSCHECKGAMEEXE\")\")\" || grep -q \"ELF.*.LSB\" <<< \"$(file \"$(realpath \"$OSCHECKGAMEEXE\")\")\" ; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like this is a Linux game!\"\n\t\t\t\t\t\tsetLin \"$@\"\n\t\t\t\t\telif grep -q \"PE32\" <<< \"$(file \"$OSCHECKGAMEEXE\")\"; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like this is a Windows game!\"\n\t\t\t\t\t\tsetWin \"$@\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not determine OS version of '$OSCHECKGAMEEXE' (add check?), so assuming this is a Windows game\"\n\t\t\t\t\t\tsetWin \"$@\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not extract the full game binary path from the incoming game launch command, so assuming this is a Windows game!\"\n\t\t\t\t\tsetWin \"$@\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - STEAM_COMPAT_DATA_PATH is not defined, so this is either a Linux Game or no game was started at all\"\n\t\t\t\tsetLin \"$@\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ISGAME is already set to '$ISGAME' - nothing to determine\"\n\t\tfi\n\tfi\n}\n\nfunction setCustomGameVars {\n\t# there doesn't seem to be a possibility to distinguish game platform based on given variables, so using at least a basic arch check on the exe:\n\tGP=\"$(printf \"%s\\n\" \"$@\" | grep -v \"$WFEAR\" | head -n1)\"\n\n\tgetGameOS \"$@\"\n\n\tGE=\"$(awk -F '.exe' '{print $1}' <<< \"${GP##*/}\")\"\n\tEFD=\"$(dirname \"$GP\")\"\n\t# need to just guess here, because of missing fix strings\n\tGFD=\"$EFD\"\n\tGN=\"$GE\"\n\n\t# Allows custom programs to use SLR and force it from the toolmanifest\n\tUSESLR=1\n\tHAVESLR=0\n\n\twhile read -r ORGARG; do\n\t\tmapfile -t -O \"${#ORGGCMD[@]}\" ORGGCMD <<< \"$ORGARG\"\n\tdone <<< \"$(printf \"%s\\n\" \"$@\")\"\n\tif [ \"${ORGGCMD[0]}\" == \"$WFEAR\" ]; then\n\t\tunset \"ORGGCMD[0]\"  # removing first ORGGCMD element as it is '$WFEAR'\n\tfi\n}\n\nfunction prepareGUI {\n\tWINDECO=\"--undecorated\"\n\tif [ -n \"$USEWINDECO\" ]; then\n\t\tif [ \"$USEWINDECO\" -eq 1 ]; then\n\t\t\tWINDECO=\"--decorated\"\n\t\telif [ \"$USEWINDECO\" -eq 0 ] && [ \"$XDG_SESSION_TYPE\" == \"wayland\" ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Disabling Yad window decorations does nothing on Wayland!\"\n\t\tfi\n\tfi\n}\n\nfunction createLanguageList {\n\tfunction listLANG {\n\t\twhile read -r RSPF; do\n\t\t\tTLANG=\"${RSPF//.txt/}\"\n\t\t\tTLANG=\"${TLANG##*/}\"\n\t\t\tprintf '%s!' \"$TLANG\"\n\t\tdone <<< \"$(find \"$STLLANGDIR\" -name \"*.txt\")\"\n\n\t\twhile read -r RSPF; do\n\t\t\tTLANG=\"${RSPF//.txt/}\"\n\t\t\tTLANG=\"${TLANG##*/}\"\n\t\t\tprintf '%s!' \"$TLANG\"\n\t\tdone <<< \"$(find \"$GLOBALSTLLANGDIR\" -name \"*.txt\")\"\n\t}\n\tLANGYADLIST=\"$(listLANG)\"\n}\n\nfunction loadLangFile {\n\tlocal SCRIPTDIR\n\tlocal LOCALLANGFILE\n\n\tif [ -n \"$1\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Language from command line is '$1'\" \"P\"\n\n\t\tLANGFILENAME=\"$1\"\n\t\tif [ -z \"$GLOBALSTLLANGDIR\" ]; then\n\t\t\tGLOBLANG=\"$SYSTEMSTLCFGDIR/lang/\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SYSTEMSTLCFGDIR is '$SYSTEMSTLCFGDIR'\" \"P\"\n\t\telse\n\t\t\tGLOBLANG=\"$GLOBALSTLLANGDIR\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - GLOBALSTLLANGDIR is '$GLOBALSTLLANGDIR'\" \"P\"\n\t\tfi\n\n\t\tif [ -f \"$LANGFILENAME\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading command line langfile '$LANGFILENAME'\" \"P\"\n\t\t\tsource \"$LANGFILENAME\"\n\t\t\tSTLLANG=\"$(cut -d '.' -f1 <<< \"${LANGFILENAME##*/}\")\"\n\t\t\tLAFI=\"$STLLANGDIR/${STLLANG}.txt\"\n\t\t\tif [ ! -f \"$LAFI\" ]; then\n\t\t\t\tmkProjDir \"$STLLANGDIR\"\n\t\t\t\tcp \"$LANGFILENAME\" \"$LAFI\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Command line language '$LANGFILENAME' is no file - trying to find its absolute path\" \"P\"\n\n\t\t\tLAFI=\"$STLLANGDIR/${LANGFILENAME}.txt\"\n\n\t\t\tSCRIPTDIR=\"$( realpath \"$0\" )\"\n\t\t\tSCRIPTDIR=\"${SCRIPTDIR%/*}\"\n\t\t\tLOCALLANGFILE=\"$SCRIPTDIR/lang/${LANGFILENAME}.txt\"\n\n\t\t\tif [ -f \"$LAFI\" ]; then\n\t\t\t\t# If langfile in ~/.config/steamtinkerlaunch/lang exists, and we have a langfile installed globally or in the scriptdir, update the user-installed langfile\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found user-installed $LAFI, attempting to update it\"\n\t\t\t\tUPDATELANGFILEPATH=\"\"\n\t\t\t\tif [ -f \"$SYSTEMSTLCFGDIR/lang/${LANGFILENAME}.txt\" ]; then\n\t\t\t\t\tUPDATELANGFILEPATH=\"$SYSTEMSTLCFGDIR/lang/${LANGFILENAME}.txt\"  # Globally installed langfile (or stlprefix langfile on steam deck) - This one takes priority as it is assumed to be the most up to date\n\t\t\t\telif [ -f \"$LOCALLANGFILE\" ]; then\n\t\t\t\t\tUPDATELANGFILEPATH=\"$LOCALLANGFILE\" # langfile from scriptdir (on steam deck first-time install this would be the install directory)\n\t\t\t\tfi\n\n\t\t\t\tif [ -n \"$UPDATELANGFILEPATH\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found lang file to replace the existing user-installed file with under '$UPDATELANGFILEPATH'\"\n\t\t\t\t\tchmod +w \"$LAFI\" #Ensure write permissions before removing\n\t\t\t\t\trm \"$LAFI\"\n\t\t\t\t\tcp \"$UPDATELANGFILEPATH\" \"$LAFI\"\n\t\t\t\t\tchmod -R +w \"$STLLANGDIR\" #Ensure write permissions for next update!\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No lang file to replace existing user-installed file with, not updating langfile\"\n\t\t\t\tfi\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading found user-installed $LAFI\" \"P\"\n\t\t\t\tsource \"$LAFI\"\n\t\t\t\tSTLLANG=\"$(cut -d '.' -f1 <<< \"${LANGFILENAME##*/}\")\"\n\t\t\telif [ -f \"$LOCALLANGFILE\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading language file from script directory '$LOCALLANGFILE'\"\n\t\t\t\tsource \"$LOCALLANGFILE\"\n\t\t\t\tSTLLANG=\"$(cut -d '.' -f1 <<< \"${LOCALLANGFILE##*/}\")\"\n\t\t\telse\n\t\t\t\tLAFI=\"$GLOBLANG/${LANGFILENAME}.txt\"\n\n\t\t\t\tif [ -f \"$LAFI\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading found system wide $LAFI\" \"P\"\n\t\t\t\t\tsource \"$LAFI\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Language file '$LAFI' could not be found\" \"P\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction loadLanguage {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - First load the default language '$STLDEFLANG' to make sure all variables are filled\"\n\tloadLangFile \"$STLDEFLANG\"\n\n\t# Prevents loadLanguage from creating the global.conf too early when it may be missing values\n\t# i.e. loadLanguage may be called before setSteamPaths, which can result in creating paths without the required Steam path variables set yet\n\t#      This can happen with Luxtorpead, where the LUXTORPEDACMD may be written out before `setSteamPaths` has been called to set `STEAMCOMPATTOOL`\n\tif [ -f \"$STLDEFGLOBALCFG\" ]; then\n\t\tsaveCfg \"$STLDEFGLOBALCFG\" X\n\t\tloadCfg \"$STLDEFGLOBALCFG\" X\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading STLLANG from '$STLDEFGLOBALCFG'\"\n\n\tARGSLANG=\"$(awk -F 'lang=' '{print $2}' <<< \"$@\" | cut -d ' ' -f1)\"\n\tif [ -n \"$ARGSLANG\" ]; then\n\t\tSTLLANG=\"$ARGSLANG\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - STLLANG from command line' is '$STLLANG'\"\n\n\telif [ -f \"$STLDEFGLOBALCFG\" ]; then\n\t\tSTLLRAW=\"$(grep \"^STLLANG\" \"$STLDEFGLOBALCFG\" | cut -d '=' -f2)\"\n\t\tSTLLANG=\"${STLLRAW//\\\"/}\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - STLLANG from '$STLDEFGLOBALCFG' is '$STLLANG'\"\n\telse\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not determine STLLANG\"\n\tfi\n\n\tif [ -n \"$STLLANG\" ] && [ \"$STLLANG\" != \"$STLDEFLANG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Now load the language file '$STLLANG'\"\n\t\tloadLangFile \"$STLLANG\"\n\t\ttouch \"$FUPDATE\"\n\t\tupdateConfigEntry \"STLLANG\" \"$STLLANG\" \"$STLDEFGLOBALCFG\"\n\tfi\n\n\tif [ -z \"$DESC_STLLANG\" ]; then # example variable, if it is empty it means no language file was loaded above\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - ###############################\" \"E\"\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No language file could be loaded! For the initial setup at least one file (default english) is required\" \"E\"\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - You can ether copy a valid file to '$STLLANGDIR' or '$SYSTEMSTLCFGDIR/lang' or provide an absolute path via command line using the lang= option\" \"E\"\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - ###############################\" \"E\"\n\t\texit\n\tfi\n}\n\nfunction setProtonPathVersion {\n\tif [ -n \"$INPROTV\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using directly known '$INPROTV' as Proton Version for '$1'\"\n\t\techo \"$INPROTV\"\n\telse\n\t\tif [ -n \"$1\" ]; then\n\t\t\tPRTPATH=\"$1\"\n\t\t\tCTVDF=\"$(dirname \"$PRTPATH\")/$CTVDF\"\n\t\t\tPPV=\"$(dirname \"$PRTPATH\")/version\"\n\t\t\tif [ -f \"$CTVDF\" ]; then\n\t\t\t\tPROTVOUT=\"$(grep \"display_name\" \"$CTVDF\" | grep -v \"e.g.\" | sed \"s:\\\" \\\":\\\";\\\":g\" | cut -d ';' -f2)\"\n\t\t\telif [ -f \"$PPV\" ]; then\n\t\t\t\tPROTVOUT=\"$(awk '{print $2}' < \"$PPV\")\"\n\t\t\tfi\n\n\t\t\tif [ -z \"$PROTVOUT\" ]; then\n\t\t\t\t# if no useful version was provided - hardcode it here:\n\t\t\t\tif grep -q \"Proton 3.7\" <<<\"$PRTPATH\"; then\n\t\t\t\t\tPROTVOUT=\"proton-3.7-8\"\n\t\t\t\telse\n\t\t\t\t\t# fallback if everything fails - in the rare cases where this unknown proton version is used this might cause problems\n\t\t\t\t\t# if you need it open an issue and it will get a hardcoded entry as well\n\t\t\t\t\tPROTVOUT=\"proton-unknown-$((900 + RANDOM % 100))\"\n\t\t\t\tfi\n\t\t\tfi\n\t\t\t#writelog \"INFO\" \"${FUNCNAME[0]} - Setting the Proton Version for '$1' to '${PROTVOUT//\\\"/}'\"\t# checking $PROTONCSV should be enough\n\t\t\techo \"${PROTVOUT//\\\"/}\"\n\t\tfi\n\tfi\n}\n\nfunction fillProtonCSV {\n\tif [ -n \"$1\" ]; then\n\t\tprotonfileV=\"$1\"\n\telse\n\t\tprotonfileV=\"$(setProtonPathVersion \"$PROTBIN\")\"\n\tfi\n\n\tif [ -n \"$protonfileV\" ]; then\n\t\tPCSV=\"\\\"${protonfileV//\\\"/}\\\";\\\"$(readlink -f \"$PROTBIN\")\\\"\"\n\t\tif [[ ! \" ${ProtonCSV[*]} \" =~ $PCSV ]]; then  # $PCSV can always be read if interested\n\t\t\tmapfile -t -O \"${#ProtonCSV[@]}\" ProtonCSV <<< \"$PCSV\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$PCSV' is already in the Proton array\"\n\t\tfi\n\tfi\n}\n\n## Get internal name for a Proton version, first by checking for a 'compatibilitytool.vdf' file in its root directory, then for a Proton version file\n## Right now this is only used by addNonSteamGame\n## TODO at some point maybe we should store this in the ProtonCSV as well? Then the format would be 'versionfilename;protonpath;internalname'\nfunction getProtonInternalName {\n\t## Tools are not necessarily guaranteed to have this comment, but I checked several and they all had it:\n\t## - SteamTinkerLaunch (naturally)\n\t## - All GE-Proton8 releases\n\t## - Standard Proton-tkg releases\n\t## - Luxtorpeda\n\t##\n\t## Steam Linux Runtime 1.0 (scout) / Native Linux Steam Linux Runtime is identified as 'steamlinuxruntime'\n\t## No idea where the Steam Client gets this from, maybe it's just hardcoded, I couldn't find a string anywhere in the SteamLinuxRuntime installation folder or the 'appmanifest_1070560.acf'\n\tfunction getProtonInternalNameVdf {\n\t\tCTVPATH=\"$1\"\n\t\tif [ -f \"$CTVPATH\" ]; then\n\t\t\tgrep -i \"// internal\" \"$CTVPATH\" | sed 's-// Internal name of this tool--' | xargs\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not find compatibilitytool.vdf file for Proton version at '$CTVPATH'\"\n\t\t\techo \"\"\n\t\tfi\n\t}\n\n\t## Get the Proton version version text file\n\tfunction getProtonInternalNameVersionFile {\n\t\tPPVPATH=\"$1\"\n\t\tif [ -f \"$PPV\" ]; then\n\t\t\tawk '{print $2}' < \"$PPV\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not find Proton version file at '$PPVPATH'\"\n\t\tfi\n\t}\n\n\t## Check if the path provided is for a Valve Proton version, by making some assumptions around the directory structure\n\tfunction checkIsValveProton {\n\t\tVPP=\"$1\"  # Valve Proton Path\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Checking if Proton version at '$VPP' is a Valve Proton version\"\n\t\t# We used to check only for 'dist', but Proton 9.0 onwards (including Experimental & Hotfix) use 'files' instead of 'dist'\n\t\t# The only assumption we can make for a Valve Proton version now is if it's missing the compatibilitytools.vdf file, since\n\t\t# They Valve Proton can have either 'files' or 'dist'\n\t\t#\n\t\t# The main thing we *need* to check for is \"$VPP/$CTVDF\" (compatibilitytools.vdf in the compat tool folder), as all\n\t\t# third-party compat tools should have this and Valve Proton versions do not (their info is stored in appinfo.vdf internal to Steam)\n\t\t# The checks for 'files' and 'dist' are just for sanity to make sure this is a valid Proton version altogether\n\t\tif [[ ! -f \"$VPP/$CTVDF\" && ( -d \"$VPP/dist\" || -d \"$VPP/files\" ) ]]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like we have a Valve Proton release here\"\n\t\t\treturn 0\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Doesn't look like a Valve Proton release, directory structure doesn't match\"\n\t\t\treturn 1\n\t\tfi\n\t}\n\n\t## Build the Valve Proton internal name based on its version + some hardcoding for Experimental and Hotfix\n\tfunction getValveProtonInternalName {\n\t\tBASEPRTNAM=\"$1\"\n\t\tINTPROTNAM=\"proton_\"\n\t\tFINALINTPROTNAM=\"\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Building Proton version internal name using version information\"\n\t\tPRTVERS=\"$( echo \"${BASEPRTNAM%-*}\" | cut -d '-' -f2 )\"  # Turn proton-8.0-3c into proton-8.0, then into 8.0\n\n\t\tPRTMAJORVERS=\"$( echo \"$PRTVERS\" | cut -d '.' -f1 )\"  # Get minor version e.g. '8' from '8.0', '4' from '4.11'\n\t\tPRTMINORVERS=\"$( echo \"$PRTVERS\" | cut -d '.' -f2 )\"  # Get minor version e.g. '0' from '8.0', '11' from '4.11'\n\n\t\t## If minor vers > 0, we need to include it in the internal name -- Defaults to just major version\n\t\tINTPROTVERSUFFIX=\"${PRTMAJORVERS}\"\n\t\tif [ \"$PRTMINORVERS\" -gt 0 ]; then\n\t\t\tINTPROTVERSUFFIX+=\"${PRTMINORVERS}\"\n\t\tfi\n\n\t\tFINALINTPROTNAM=\"${INTPROTNAM}${INTPROTVERSUFFIX}\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Final Internal Proton name for given Proton name '$BASEPRTNAM' string is '$FINALINTPROTNAM'\"\n\t\techo \"$FINALINTPROTNAM\"\n\t}\n\n\tPROTCSVSTR=\"$1\"\n\n\tPRTVERS=\"$( echo \"$PROTCSVSTR\" | cut -d ';' -f1 )\"\n\tPRTPATH=\"$( echo \"$PROTCSVSTR\" | cut -d ';' -f2 )\"\n\tPRTPATHDIR=\"$( dirname \"$PRTPATH\" )\"\n\n\tCTVDFPA=\"$PRTPATHDIR/$CTVDF\"\n\tPPV=\"$PRTPATHDIR/version\"\n\n\tINTPROTNAME=\"$( getProtonInternalNameVdf \"$CTVDFPA\" )\"  # First attempt to get the internal name from compatibilitytool.vdf\n\tif [ -n \"$INTPROTNAME\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Got Proton Internal name '$INTPROTNAME' from '$CTVDFPA'\"\n\t\techo \"$INTPROTNAME\"\n\telif [[ $PRTVERS == experimental* ]]; then  # Experimental hardcode\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like we have Proton Experimental -- Hardcoding internal name 'proton_experimental'\"\n\t\techo \"proton_experimental\"\n\telif [[ $PRTVERS == hotfix* ]]; then  # Hotfix hardcode\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like we have Proton Hotfix here -- Hardcoding internal name to 'proton_hotfix'\"\n\t\techo \"proton_hotfix\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not get internal Proton name for '$PRTVERS' from '$CTVDF' - Maybe it didn't have this file\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Checking if we have a Valve Proton version here to build the internal name from\"\n\n\t\tif checkIsValveProton \"$PRTPATHDIR\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Seems we have a Valve Proton version, building internal name manually\"\n\t\t\tgetValveProtonInternalName \"$PRTVERS\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Doesn't seem like we have a Valve Proton version\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Still could not find Proton internal name from '$CTVDF' - Giving up and falling back to the Proton version, some tools use this as their internal name\"\n\t\t\techo \"$PRTVERS\"\n\t\tfi\n\tfi\n}\n\nfunction printProtonArr {\n\tprintf \"%s\\n\" \"${ProtonCSV[@]//\\\"/}\"\n}\n\nfunction prettyPrintProtonArr {\n\tfor PV in \"${ProtonCSV[@]//\\\"/}\"\n\tdo\n\t\tPVNAME=$( echo \"$PV\" | cut -d ';' -f1 )\n\t\tPVPATH=$( echo \"$PV\" | cut -d ';' -f2 )\n\n\t\tif [ -n \"$1\" ]; then\n\t\t\tif [ \"$1\" == \"name\" ] || [ \"$1\" == \"n\" ]; then\n\t\t\t\tprintf \"%s\\n\" \"$PVNAME\"\n\t\t\telif [ \"$1\" == \"path\" ] || [ \"$1\" == \"p\" ]; then\n\t\t\t\tprintf \"%s\\n\" \"$PVPATH\"\n\t\t\tfi\n\t\telse\n\t\t\tprintf \"%s -> %s\\n\" \"$PVNAME\" \"$PVPATH\"\n\t\tfi\n\n\tdone\n}\n\nfunction delEmptyFile {\n\tif [ -f \"$1\" ]; then\n\t\tif [ \"$(wc -l < \"$1\")\" -le 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing empty file '$1'\"\n\t\t\trm \"$1\" 2>/dev/null\n\t\tfi\n\tfi\n}\n\nfunction rmDupLines {\n\tif grep -q \"gawk\" <<< \"$AWKBIN\"; then\n\t\tgawk -i inplace '!visited[$0]++' \"$1\"\n\telse\n\t\tawk '!seen[$0]++' \"$1\" > \"$STLSHM/${FUNCNAME[0]}\"\n\t\tcp \"$STLSHM/${FUNCNAME[0]}\" \"$1\"\n\t\trm \"$STLSHM/${FUNCNAME[0]}\" 2>/dev/null\n\tfi\n}\n\nfunction getProtNameFromPath {\n\tgrep \"$1\" \"$PROTONCSV\" | cut -d ';' -f1\n}\n\nfunction getAvailableProtonVersions {\n\t# skip this function if a linux game was started\n\tif [ \"$ISGAME\" -eq 2 ] || [ -n \"$2\" ]; then\n\t\t# ...and if USEWINE is enabled\n\t\tif [ -n \"$USEWINE\" ] && [ \"$USEWINE\" -eq 1 ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - USEWINE is enabled - skipping this function\"\n\t\telif [ -f \"$STLGAMECFG\" ] && grep -q \"USEWINE=\\\"1\\\"\" \"$STLGAMECFG\" ; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - USEWINE is enabled in the to-be-loaded gameconfig '$STLGAMECFG' - skipping this function\"\n\t\t\t# could still be enabled via steamcollection, but this would be an overkill here, as ${FUNCNAME[0]} is non-fatal\n\t\telse\n\t\t\tdelEmptyFile \"$PROTONCSV\"\n\n\t\t\t# find new proton versions in CUSTPROTEXTDIR\n\t\t\tif [ ! -f \"$CUSTOMPROTONLIST\" ] || [ \"$(find \"$CUSTPROTEXTDIR\" -mindepth 1 -maxdepth 1 -type d | wc -l)\" -gt \"$(wc -l < \"$CUSTOMPROTONLIST\")\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating protonlist '$CUSTOMPROTONLIST' with possible new proton versions from '$CUSTPROTEXTDIR'\"\n\t\t\t\tfind \"$CUSTPROTEXTDIR\" -type f -name \"proton\" >> \"$CUSTOMPROTONLIST\"\n\t\t\tfi\n\n\t\t\tif [ ! -f \"$PROTONCSV\" ] || { [ -n \"$1\" ] && [ \"$1\" = \"up\" ]; } || [ \"$1\" == \"F\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Initially creating an array with available Proton versions\"\n\n\t\t\t\t# following symlinks (find -L) and using maxdepth 2 to avoid duplicates caused by _(user created)_ symlinks\n\n\t\t\t\t# user installed compatibilitytool:\n\t\t\t\tif [ -d \"$STEAMCOMPATOOLS\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in STEAMCOMPATOOLS '$STEAMCOMPATOOLS'\"\n\t\t\t\t\twhile read -r PROTBIN; do\n\t\t\t\t\t\tif [ -f \"$PROTBIN\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found proton directory: '$PROTBIN'\"\n\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone <<< \"$(find -L \"$STEAMCOMPATOOLS\" -mindepth 2 -maxdepth 2 -type f -name \"proton\")\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Directory STEAMCOMPATOOLS '$STEAMCOMPATOOLS' not found - skipping\"\n\t\t\t\tfi\n\n\t\t\t\tif [ -n \"$STEAM_EXTRA_COMPAT_TOOLS_PATHS\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in STEAM_EXTRA_COMPAT_TOOLS_PATHS '$STEAM_EXTRA_COMPAT_TOOLS_PATHS'\"\n\t\t\t\t\twhile read -r extrapath; do\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching for Proton version in '$extrapath'\"\n\t\t\t\t\t\twhile read -r PROTBIN; do\n\t\t\t\t\t\t\tif [ -f \"$PROTBIN\" ]; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found proton directory: '$PROTBIN'\"\n\t\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone <<< \"$(find -L \"$extrapath\" -mindepth 2 -maxdepth 2 -type f -name \"proton\")\"\n\t\t\t\t\tdone <<< \"$(tr ':' '\\n' <<< \"$STEAM_EXTRA_COMPAT_TOOLS_PATHS\")\"\n\t\t\t\telse\n\t\t\t\t\tif [ -d \"$SYSSTEAMCOMPATOOLS\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in SYSSTEAMCOMPATOOLS '$SYSSTEAMCOMPATOOLS'\"\n\t\t\t\t\t\twhile read -r PROTBIN; do\n\t\t\t\t\t\t\tif [ -f \"$PROTBIN\" ]; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found proton directory: '$PROTBIN'\"\n\t\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone <<< \"$(find -L \"$SYSSTEAMCOMPATOOLS\" -mindepth 2 -maxdepth 2 -type f -name \"proton\")\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Directory SYSSTEAMCOMPATOOLS '$SYSSTEAMCOMPATOOLS' not found - skipping\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\t# official proton versions installed via Steam in default SteamLibrary\n\t\t\t\tif ! grep -q \"\\\"path\\\".*.\\\"$SROOT\\\"\" \"$LFVDF\"; then\n\t\t\t\t\tif [ -d \"$DEFSTEAMAPPSCOMMON\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in DEFSTEAMAPPSCOMMON '$DEFSTEAMAPPSCOMMON'\"\n\t\t\t\t\t\twhile read -r protondir; do\n\t\t\t\t\t\t\tPROTBIN=\"$protondir/proton\"\n\t\t\t\t\t\t\tif [ -f \"$PROTBIN\" ]; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found proton directory: '$protondir'\"\n\t\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone <<< \"$(find -L \"$DEFSTEAMAPPSCOMMON\" -mindepth 2 -maxdepth 2 -type f -name \"proton\")\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Directory DEFSTEAMAPPSCOMMON '$DEFSTEAMAPPSCOMMON' not found - this should not happen! - skipping\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\t# official proton versions installed via Steam in additional SteamLibrary Paths\n\t\t\t\tif [ -f \"$CFGVDF\" ] || [ -f \"$LFVDF\" ]; then\n\t\t\t\t\tif ! grep -q \"BaseInstallFolder\\|\\\"path\\\"\" \"$CFGVDF\" \"$LFVDF\" 2>/dev/null; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No additional Steam Libraries configured in '$CFGVDF' or '$LFVDF' - so no need to search in there\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in additional SteamLibrary Paths\"\n\t\t\t\t\t\twhile read -r protondir; do\n\t\t\t\t\t\t\tPROTBIN=\"$protondir/proton\"\n\t\t\t\t\t\t\tif [ -f \"$PROTBIN\" ]; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found proton directory: '$protondir'\"\n\t\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tdone <<< \"$(while read -r SLP; do if [ -d \"${SLP//\\\"/}/$SAC\" ]; then find \"${SLP//\\\"/}/$SAC\" -mindepth 1 -maxdepth 1 -type d -name \"Proton*\"; fi; done <<< \"$(grep \"BaseInstallFolder\\|\\\"path\\\"\" \"$CFGVDF\" \"$LFVDF\" 2>/dev/null | rev | cut -f1 | rev | sort -u)\")\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Neither file CFGVDF '$CFGVDF' nor file LFVDF '$LFVDF' found - this should not happen! - skipping\"\n\t\t\t\tfi\n\n\t\t\t\t# custom Proton List:\n\t\t\t\tif [ -f \"$CUSTOMPROTONLIST\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding Proton versions found in CUSTOMPROTONLIST '$CUSTOMPROTONLIST'\"\n\n\t\t\t\t\trmDupLines \"$CUSTOMPROTONLIST\"\n\t\t\t\t\tsed '/^$/d' -i \"$CUSTOMPROTONLIST\"\n\n\t\t\t\t\twhile read -r PROTLINE; do\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Checking line '$PROTLINE' in '$CUSTOMPROTONLIST'\"\n\n\t\t\t\t\t\tif grep -q \";\" <<< \"$PROTLINE\"; then\n\t\t\t\t\t\t\tPROTBIN=\"$(cut -d ';' -f2 <<< \"$PROTLINE\")\"\n\t\t\t\t\t\t\tPROTVERS=\"$(cut -d ';' -f1 <<< \"$PROTLINE\")\"\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding '$PROTVERS' to the list\"\n\t\t\t\t\t\t\tfillProtonCSV \"$PROTVERS\"\n\t\t\t\t\t\telif [ -f \"$PROTLINE\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - File '$PROTLINE' exists - adding it to the list\"\n\t\t\t\t\t\t\tPROTBIN=\"$PROTLINE\"\n\t\t\t\t\t\t\tfillProtonCSV\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing invalid line '$PROTLINE' from '$CUSTOMPROTONLIST'\"\n\t\t\t\t\t\t\tmapfile -t -O \"${#ProtonMissing[@]}\" ProtonMissing <<< \"$PROTLINE\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone <<< \"$(grep -v \"^#\" \"$CUSTOMPROTONLIST\")\"\n\n\t\t\t\t\t# remove files from custom list which do not exist (anymore)\n\t\t\t\t\tif [ -n \"${ProtonMissing[0]}\" ]; then\n\t\t\t\t\t\twhile read -r NOPROT; do\n\t\t\t\t\t\t\tsed \"/${NOPROT//\\//\\\\/}/d\" -i \"$CUSTOMPROTONLIST\"\n\t\t\t\t\t\tdone <<< \"$(printf \"%s\\n\" \"${ProtonMissing[@]}\")\"\n\t\t\t\t\t\tunset ProtonMissing\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating an array with available Proton versions using the file '$PROTONCSV' which was created during a previous run\"\n\t\t\t\tmapfile -t -O \"${#ProtonCSV[@]}\" ProtonCSV < \"$PROTONCSV\"\n\t\t\tfi\n\t\t\tprintProtonArr > \"$PROTONCSV\"\n\t\t\trmDupLines \"$PROTONCSV\"\n\t\tfi\n\tfi\n}\n\nfunction setDefaultCfgValues {\n\n\tfunction setDefaultCfgValuesurl {\n\t\tif [ -z \"$PROJECTPAGE\" ]\t\t\t\t\t\t; then\tPROJECTPAGE=\"$GHURL/sonic2kk/steamtinkerlaunch\"; fi\n\t\tif [ -z \"$CP_PROTONTKG\" ]\t\t\t\t\t\t; then\tCP_PROTONTKG=\"$GHURL/Frogging-Family/wine-tkg-git\"; fi\n\t\tif [ -z \"$CP_PROTONGE\" ]\t\t\t\t\t\t; then\tCP_PROTONGE=\"$GHURL/GloriousEggroll/proton-ge-custom\"; fi\n\t\tif [ -z \"$CP_PROTONSTL\" ]\t\t\t\t\t\t; then\tCP_PROTONSTL=\"$GHURL/sonic2kk/steamtinkerlaunch-tweaks\"; fi\n\t\tif [ -z \"$DL_D3D47_64\" ]\t\t\t\t\t\t; then\tDL_D3D47_64=\"https://lutris.net/files/tools/dll/$D3D47\"; fi\n\t\tif [ -z \"$DL_D3D47_32\" ]\t\t\t\t\t\t; then\tDL_D3D47_32=\"http://dege.freeweb.hu/dgVoodoo2/bin/D3DCompiler_47.zip\"; fi\n\t\tif [ -z \"$RESHADEDLURL\" ]\t\t\t\t\t\t; then\tRESHADEDLURL=\"https://reshade.me/downloads\"; fi\n\t\tif [ -z \"$RESHADEPROJURL\" ]\t\t\t\t\t\t; then\tRESHADEPROJURL=\"https://github.com/crosire/reshade\"; fi\n\t\tif [ -z \"$VORTEXPROJURL\" ]\t\t\t\t\t\t; then  VORTEXPROJURL=\"$GHURL/Nexus-Mods/${VTX^}\"; fi\n\t\tif [ -z \"$DXVKURL\" ]\t\t\t\t\t\t\t; then\tDXVKURL=\"$GHURL/doitsujin/dxvk\"; fi\n\t\tif [ -z \"$XLIVEURL\" ]\t\t\t\t\t\t\t; then\tXLIVEURL=\"$GHURL/ThirteenAG/Ultimate-ASI-Loader/releases/download/v4.61/Ultimate-ASI-Loader.zip\"; fi\n\t\tif [ -z \"$STASSURL\" ]\t\t\t\t\t\t\t; then\tSTASSURL=\"https://steamcdn-a.akamaihd.net/steam/apps\"; fi\n\t\tif [ -z \"$WINETRICKSURL\" ]\t\t\t\t\t\t; then\tWINETRICKSURL=\"$GHURL/Winetricks/winetricks\"; fi\n\t\tif [ -z \"$X64DBGURL\" ]\t\t\t\t\t\t\t; then\tX64DBGURL=\"$GHURL/x64dbg/x64dbg/releases/tag/snapshot\";fi\n\t\tif [ -z \"$BASESTEAMGRIDDBAPI\" ]\t\t\t\t\t; then\tBASESTEAMGRIDDBAPI=\"https://www.steamgriddb.com/api/v2\";fi\n\t\tif [ -z \"$CONTYRELURL\" ]\t\t\t\t\t\t; then\tCONTYRELURL=\"$GHURL/Kron4ek/Conty/releases\"; fi\n\t\tif [ -z \"$MO2PROJURL\" ]\t\t\t\t\t\t\t; then  MO2PROJURL=\"$GHURL/ModOrganizer2/modorganizer\"; fi\n\t\tif [ -z \"$HMMPROJURL\" ]                         ; then  HMMPROJURL=\"$GHURL/thesupersonic16/HedgeModManager\"; fi\n\t\tif [ -z \"$SPEKPROJURL\" ]\t\t\t\t\t\t; then  SPEKPROJURL=\"$GHURL/SpecialKO/SpecialK\"; fi\n\t\tif [ -z \"$CW_KRON4EK\" ]\t\t\t\t\t\t\t; then\tCW_KRON4EK=\"$GHURL/Kron4ek/Wine-Builds/releases\"; fi\n\t\tif [ -z \"$CW_LUTRIS\" ]\t\t\t\t\t\t\t; then  CW_LUTRIS=\"$GHURL/lutris/wine/releases\"; fi\n\t\tif [ -z \"$CW_WINEGE\" ]\t\t\t\t\t\t\t; then  CW_WINEGE=\"$GHURL/GloriousEggroll/wine-ge-custom/releases\"; fi\n\t\tif [ -z \"$IGCSZIP\" ]\t\t\t\t\t\t\t; then\tIGCSZIP=\"$GHURL/FransBouma/InjectableGenericCameraSystem/releases/download/IGCSInjector_102/IGCSInjector_v102.zip\"; fi\n\t\tif [ -z \"$UUUURL\" ]\t\t\t\t\t\t\t\t; then\tUUUURL=\"https://framedsc.github.io/GeneralGuides/universal_ue4_consoleunlocker.htm#downloading-the-uuu\"; fi\n\t\tif [ -z \"$OVRFSRURL\" ]\t\t\t\t\t\t\t; then\tOVRFSRURL=\"$GHURL/fholger/$OVFS/releases\"; fi\n\t\tif [ -z \"$DPRSRELURL\" ]\t\t\t\t\t\t\t; then\tDPRSRELURL=\"$GHURL/${DPRS}/${DPRS}/releases\"; fi\n\t\tif [ -z \"$DEPURL\" ]\t\t\t\t\t\t\t\t; then\tDEPURL=\"$GHURL/lucasg/${DEPS}/releases\";fi\n\t\tif [ -z \"$SPEKURL\" ]\t\t\t\t\t\t\t; then\tSPEKURL=\"https://sk-data.special-k.info/\";fi\n\t\tif [ -z \"$SPEKGHURL\" ]\t\t\t\t\t\t\t; then\tSPEKGHURL=\"$GHURL/${SPEK}O/${SPEK}/releases\";fi\n\t\tif [ -z \"$SPEKCOMPURL\" ]\t\t\t\t\t\t; then\tSPEKCOMPURL=\"https://www.pcgamingwiki.com/wiki/List_of_games_compatible_with_Special_K#Compatibility_list\";fi\n\t\tif [ -z \"$FWSURL\" ]\t\t\t\t\t\t\t\t; then\tFWSURL=\"https://www.${FWS,,}.org/fws\";fi\n\t\tif [ -z \"$YAIURL\" ]\t\t\t\t\t\t\t\t; then\tYAIURL=\"$GHURL/sonic2kk/steamtinkerlaunch-tweaks/releases/download\"; fi\n\t\tif [ -z \"$WINERELOADURL\" ]\t\t\t\t\t\t; then\tWINERELOADURL=\"https://gist.githubusercontent.com/rbernon/cdbdc1b0e892f91e7449fcf3dda80bb7/raw/d8cf549bf751d99ed0fe515e36f99ff5c01b7287\"; fi\n\t\tif [ -z \"$GEOELFURL\" ]\t\t\t\t\t\t\t; then\tGEOELFURL=\"http://helixmod.blogspot.com/2022/06/announcing-new-geo-11-3d-driver.html\"; fi\n\t\tif [ -z \"$WDIBURL\" ]\t\t\t\t\t\t\t; then\tWDIBURL=\"$GHURL/0e4ef622/$WDIB/releases\"; fi\n\t}\n\n\tfunction setDefaultCfgValuesglobal {\n\t\tif [ -z \"$STLLANG\" ]\t\t\t\t\t\t\t; then\tSTLLANG=\"$STLDEFLANG\"; fi\n\t\tif [ -z \"$SKIPINTDEPCHECK\" ]\t\t\t\t\t; then\tSKIPINTDEPCHECK=\"0\"; fi\n\t\tif [ -z \"$STRACEDIR\" ]\t\t\t\t\t\t\t; then\tSTRACEDIR=\"$LOGDIR\"; fi\n\t\tif [ -z \"$LOGDIR\" ]\t\t\t\t\t\t\t\t; then\tLOGDIR=\"$DEFLOGDIR\"; fi\n\t\tif [ -z \"$LOGLEVEL\" ]\t\t\t\t\t\t\t; then\tLOGLEVEL=\"2\"; fi\n\t\tif [ -z \"$RESETLOG\" ]\t\t\t\t\t\t\t; then\tRESETLOG=\"1\"; fi\n\t\tif [ -z \"$STLEDITOR\" ]\t\t\t\t\t\t\t; then\tSTLEDITOR=\"$(command -v \"geany\")\"; fi\n\t\tif [ -z \"$MAXASK\" ]\t\t\t\t\t\t\t\t; then\tMAXASK=\"3\"; fi\n\t\tif [ -z \"$BROWSER\" ]\t\t\t\t\t\t\t; then\tBROWSER=\"$(command -v \"firefox\")\"; fi\n\t\tif [ -z \"$NOTY\" ]\t\t\t\t\t\t\t\t; then\tNOTY=\"$(command -v \"notify-send\")\"; fi\n\t\tif [ -z \"$NOTYARGS\" ]\t\t\t\t\t\t\t; then\tNOTYARGS=\"-i $STLICON -a $PROGNAME\"; fi\n\t\tif [ -z \"$USENOTIFIER\" ]\t\t\t\t\t\t; then\tUSENOTIFIER=\"1\"; fi\n\t\tif [ -z \"$NETMON\" ]\t\t\t\t\t\t\t\t; then\tNETMON=\"$(command -v \"netstat\")\"; fi\n\t\tif [ -z \"$NETOPTS\" ]\t\t\t\t\t\t\t; then\tNETOPTS=\"-taucp -W\"; fi\n\t\tif [ -z \"$NETMONDIR\" ]\t\t\t\t\t\t\t; then\tNETMONDIR=\"$LOGDIR\"; fi\n\t\tif [ -z \"$VRVIDEOPLAYER\" ]\t\t\t\t\t\t; then\tVRVIDEOPLAYER=\"$(command -v \"vr-video-player\")\"; fi\n\t\tif [ -z \"$GLOBALCOLLECTIONDIR\" ]\t\t\t\t; then\tGLOBALCOLLECTIONDIR=\"$SYSTEMSTLCFGDIR/collections\"; fi\n\t\tif [ -z \"$GLOBALMISCDIR\" ]\t\t\t\t\t\t; then\tGLOBALMISCDIR=\"$SYSTEMSTLCFGDIR/misc\"; fi\n\t\tif [ -z \"$GLOBALSBSTWEAKS\" ]\t\t\t\t\t; then\tGLOBALSBSTWEAKS=\"$SYSTEMSTLCFGDIR/misc/sbstweaks\"; fi\n\t\tif [ -z \"$GLOBALTWEAKS\" ]\t\t\t\t\t\t; then\tGLOBALTWEAKS=\"$SYSTEMSTLCFGDIR/tweaks\"; fi\n\t\tif [ -z \"$GLOBALEVALDIR\" ]\t\t\t\t\t\t; then\tGLOBALEVALDIR=\"$SYSTEMSTLCFGDIR/eval\"; fi\n\t\tif [ -z \"$GLOBALSTLLANGDIR\" ]\t\t\t\t\t; then\tGLOBALSTLLANGDIR=\"$SYSTEMSTLCFGDIR/lang\"; fi\n\t\tif [ -z \"$GLOBALSTLGUIDIR\" ]\t\t\t\t\t; then\tGLOBALSTLGUIDIR=\"$SYSTEMSTLCFGDIR/guicfgs\"; fi\n\t\tif [ -z \"$BOXTRONCMD\" ]\t\t\t\t\t\t\t; then\tBOXTRONCMD=\"/usr/share/boxtron/run-dosbox\"; fi\n\t\tif [ -z \"$BOXTRONARGS\" ]\t\t\t\t\t\t; then\tBOXTRONARGS=\"--wait-before-run\"; fi\n\t\tif [ -z \"$ROBERTACMD\" ]\t\t\t\t\t\t\t; then\tROBERTACMD=\"$STEAMCOMPATOOLS/roberta/run-vm\"; fi\n\t\tif [ -z \"$ROBERTAARGS\" ]\t\t\t\t\t\t; then\tROBERTAARGS=\"--wait-before-run\"; fi\n\t\tif [ -z \"$LUXTORPEDACMD\" ]\t\t\t\t\t\t; then\tLUXTORPEDACMD=\"$STEAMCOMPATOOLS/luxtorpeda/luxtorpeda.sh\"; fi\n\t\tif [ -z \"$LUXTORPEDAARGS\" ]\t\t\t\t\t\t; then\tLUXTORPEDAARGS=\"wait-before-run\"; fi\n\t\tif [ -z \"$RSVERS\" ]\t\t\t\t\t\t\t\t; then\tRSVERS=\"5.9.1\"; fi\n\t\tif [ -z \"$USERSSPEKVERS\" ]\t\t\t\t\t\t; then  USERSSPEKVERS=\"1\"; fi\n\t\tif [ -z \"$RSSPEKVERS\" ]\t\t\t\t\t\t\t; then  RSSPEKVERS=\"5.4.2\"; fi\n\t\tif [ -z \"$AUTOBUMPRESHADE\" ]\t\t\t\t\t; then\tAUTOBUMPRESHADE=\"0\"; fi\n\t\tif [ -z \"$DOWNLOAD_RESHADE\" ]\t\t\t\t\t; then\tDOWNLOAD_RESHADE=\"1\"; fi\n\t\tif [ -z \"$RESHADESRCDIR\" ]\t\t\t\t\t\t; then\tRESHADESRCDIR=\"$STLDLDIR/reshade\"; fi\n\t\tif [ -z \"$D3D47_64\" ]\t\t\t\t\t\t\t; then\tD3D47_64=\"${D3D47//./_64.}\"; fi\n\t\tif [ -z \"$D3D47_32\" ]\t\t\t\t\t\t\t; then\tD3D47_32=\"${D3D47//./_32.}\"; fi\n\t\tif [ -z \"$RS_64\" ]\t\t\t\t\t\t\t\t; then\tRS_64=\"ReShade64.dll\"; fi\n\t\tif [ -z \"$RS_32\" ]\t\t\t\t\t\t\t\t; then\tRS_32=\"ReShade32.dll\"; fi\n\t\tif [ -z \"$RS_64_VK\" ]\t\t\t\t\t\t\t; then\tRS_64_VK=\"ReShade64.json\"; fi\n\t\tif [ -z \"$RS_32_VK\" ]\t\t\t\t\t\t\t; then\tRS_32_VK=\"ReShade32.json\"; fi\n\t\tif [ -z \"$DLSHADER\" ]\t\t\t\t\t\t\t; then\tDLSHADER=\"1\"; fi\n\t\tif [ -z \"$SAVESETSIZE\" ]\t\t\t\t\t\t; then\tSAVESETSIZE=\"1\"; fi\n\t\tif [ -z \"$STARTMENU\" ]\t\t\t\t\t\t\t; then\tSTARTMENU=\"Menu\"; fi\n\t\tif [ -z \"$YADFORCEXWAYLAND\" ]                   ; then  YADFORCEXWAYLAND=\"0\"; fi\n\t\tif [ -z \"$USEWINDECO\" ]\t\t\t\t\t\t\t; then\tUSEWINDECO=\"1\"; fi\n\t\tif [ -z \"$HEADLINEFONT\" ]\t\t\t\t\t\t; then\tHEADLINEFONT=\"larger\"; fi\n\t\tif [ -z \"$USETRAYICON\" ]\t\t\t\t\t\t; then\tUSETRAYICON=\"1\"; fi\n\t\tif [ -z \"$USEGAMEPICS\" ]\t\t\t\t\t\t; then\tUSEGAMEPICS=\"1\"; fi\n\t\tif [ -z \"$USECUSTOMFALLBACKPIC\" ]\t\t\t\t; then\tUSECUSTOMFALLBACKPIC=\"0\"; fi\n\t\tif [ -z \"$GITHUBUSER\" ]\t\t\t\t\t\t\t; then\tGITHUBUSER=\"$NON\"; fi\n\t\tif [ -z \"$DLGAMEDATA\" ]\t\t\t\t\t\t\t; then\tDLGAMEDATA=\"1\"; fi\n\t\tif [ -z \"$DLSTEAMDECKCOMPATINFO\" ]\t\t\t\t; then  DLSTEAMDECKCOMPATINFO=\"1\"; fi\n\t\tif [ -z \"$USEPDBRATING\" ]\t\t\t\t\t\t; then\tUSEPDBRATING=\"1\"; fi\n\t\tif [ -z \"$PDBRATINGCACHE\" ]\t\t\t\t\t\t; then\tPDBRATINGCACHE=\"1\"; fi\n\t\tif [ -z \"$DLWINETRICKS\" ]\t\t\t\t\t\t; then\tDLWINETRICKS=\"0\"; fi\n\t\tif [ -z \"$AUTOLASTPROTON\" ]\t\t\t\t\t\t; then\tAUTOLASTPROTON=\"1\"; fi\n\t\tif [ -z \"$AUTOPULLPROTON\" ]\t\t\t\t\t\t; then\tAUTOPULLPROTON=\"1\"; fi\n\t\tif [ -z \"$CUSTPROTDLDIR\" ]\t\t\t\t\t\t; then\tCUSTPROTDLDIR=\"$STLDLDIR/$PROCU\"; fi\n\t\tif [ -z \"$CUSTPROTEXTDIR\" ]\t\t\t\t\t\t; then\tCUSTPROTEXTDIR=\"$STLCFGDIR/$PROCU\"; fi\n\t\tif [ -z \"$WINEDLDIR\" ]\t\t\t\t\t\t\t; then\tWINEDLDIR=\"$STLDLDIR/wine\"; fi\n\t\tif [ -z \"$WINEEXTDIR\" ]\t\t\t\t\t\t\t; then\tWINEEXTDIR=\"$STLCFGDIR/wine\"; fi\n\t\tif [ -z \"$USEVORTEXPROTON\" ]\t\t\t\t\t; then\tUSEVORTEXPROTON=\"$NON\"; fi\n\t\tif [ -z \"$VORTEXCOMPDATA\" ]\t\t\t\t\t\t; then\tVORTEXCOMPDATA=\"$STLVORTEXDIR/$CODA\"; fi\n\t\tif [ -z \"$VORTEXDOWNLOADPATH\" ]\t\t\t\t\t; then\tVORTEXDOWNLOADPATH=\"$STLVORTEXDIR/downloads\"; fi\n\t\tif [ -z \"$USEVORTEXPRERELEASE\" ]\t\t\t\t; then\tUSEVORTEXPRERELEASE=\"0\"; fi\n\t\tif [ -z \"$VORTEXUSESLR\" ]\t\t\t\t\t\t; then  VORTEXUSESLR=\"1\"; fi\n\t\tif [ -z \"$VORTEXUSESLRPOSTINSTALL\" ]\t\t\t; then  VORTEXUSESLRPOSTINSTALL=\"0\"; fi\n\t\tif [ -z \"$DISABLEVORTEXAUTOUPDATE\" ]\t\t\t; then\tDISABLEVORTEXAUTOUPDATE=\"0\"; fi\n\t\tif [ -z \"$USEVORTEXCUSTOMVER\" ]\t\t\t\t\t; then\tUSEVORTEXCUSTOMVER=\"0\"; fi\n\t\tif [ -z \"$VORTEXCUSTOMVER\" ]\t\t\t\t\t; then\tVORTEXCUSTOMVER=\"$NON\"; fi\n\t\tif [ -z \"$VORTEXDEVICESCALEFACTOR\" ]\t\t\t; then  VORTEXDEVICESCALEFACTOR=\"1\"; fi\n\t\tif [ -z \"$DISABLE_AUTOSTAGES\" ]\t\t\t\t\t; then\tDISABLE_AUTOSTAGES=\"0\"; fi\n\t\tif [ -z \"$NOSTEAMSTLDEF\" ]\t\t\t\t\t\t; then\tNOSTEAMSTLDEF=\"0\"; fi\n\t\tif [ -z \"$SGDBAPIKEY\" ]\t\t\t\t\t\t\t; then\tSGDBAPIKEY=\"$NON\"; fi\n\t\tif [ -z \"$SGDBDLTOSTEAM\" ]\t\t\t\t\t\t; then\tSGDBDLTOSTEAM=\"0\"; fi\n\t\tif [ -z \"$SGDBHASFILE\" ]\t\t\t\t\t\t; then\tSGDBHASFILE=\"skip\"; fi\n\t\tif [ -z \"$SGDBAUTODL\" ]\t\t\t\t\t\t\t; then\tSGDBAUTODL=\"$NON\"; fi\n\t\tif [ -z \"$SGDBDLHERO\" ]\t\t\t\t\t\t\t; then  SGDBDLHERO=\"1\"; fi\n\t\tif [ -z \"$SGDBDLLOGO\" ]\t\t\t\t\t\t\t; then  SGDBDLLOGO=\"1\"; fi\n\t\tif [ -z \"$SGDBDLBOXART\" ]\t\t\t\t\t\t; then  SGDBDLBOXART=\"1\"; fi\n\t\tif [ -z \"$SGDBDLTENFOOT\" ]\t\t\t\t\t\t; then  SGDBDLTENFOOT=\"1\"; fi\n\t\tif [ -z \"$SGDBHERODIMS\" ]\t\t\t\t\t\t; then  SGDBHERODIMS=\"$DEFSGDBHERODIMS\"; fi\n\t\tif [ -z \"$SGDBHEROTYPES\" ]\t\t\t\t\t\t; then  SGDBHEROTYPES=\"static\"; fi\n\t\tif [ -z \"$SGDBHEROSTYLES\" ]\t\t\t\t\t\t; then  SGDBHEROSTYLES=\"$SGDBHEROSTYLEOPTS\"; fi\n\t\tif [ -z \"$SGDBHERONSFW\" ]\t\t\t\t\t\t; then  SGDBHERONSFW=\"any\"; fi\n\t\tif [ -z \"$SGDBHEROHUMOR\" ]\t\t\t\t\t\t; then  SGDBHEROHUMOR=\"any\"; fi\n\t\tif [ -z \"$SGDBHEROEPILEPSY\" ]\t\t\t\t\t; then  SGDBHEROEPILEPSY=\"false\"; fi\n\t\tif [ -z \"$SGDBLOGOTYPES\" ]\t\t\t\t\t\t; then  SGDBLOGOTYPES=\"static\"; fi\n\t\tif [ -z \"$SGDBLOGOSTYLES\" ]\t\t\t\t\t\t; then  SGDBLOGOSTYLES=\"$SGDBLOGOSTYLEOPTS\"; fi\n\t\tif [ -z \"$SGDBLOGONSFW\" ]\t\t\t\t\t\t; then  SGDBLOGONSFW=\"any\"; fi\n\t\tif [ -z \"$SGDBLOGOHUMOR\" ]\t\t\t\t\t\t; then  SGDBLOGOHUMOR=\"any\"; fi\n\t\tif [ -z \"$SGDBLOGOEPILEPSY\" ]\t\t\t\t\t; then  SGDBLOGOEPILEPSY=\"false\"; fi\n\t\tif [ -z \"$SGDBBOXARTDIMS\" ]\t\t\t\t\t\t; then  SGDBBOXARTDIMS=\"$DEFSGDBBOXARTDIMS\"; fi\n\t\tif [ -z \"$SGDBBOXARTTYPES\" ]\t\t\t\t\t; then  SGDBBOXARTTYPES=\"static\"; fi\n\t\tif [ -z \"$SGDBBOXARTSTYLES\" ]\t\t\t\t\t; then  SGDBBOXARTSTYLES=\"$SGDBGRIDSTYLEOPTS\"; fi\n\t\tif [ -z \"$SGDBBOXARTNSFW\" ]\t\t\t\t\t\t; then  SGDBBOXARTNSFW=\"any\"; fi\n\t\tif [ -z \"$SGDBBOXARTHUMOR\" ]\t\t\t\t\t; then  SGDBBOXARTHUMOR=\"any\"; fi\n\t\tif [ -z \"$SGDBBOXARTEPILEPSY\" ]\t\t\t\t\t; then  SGDBBOXARTEPILEPSY=\"false\"; fi\n\t\tif [ -z \"$SGDBTENFOOTDIMS\" ]\t\t\t\t\t; then  SGDBTENFOOTDIMS=\"$DEFSGDBTENFOOTDIMS\"; fi\n\t\tif [ -z \"$SGDBTENFOOTTYPES\" ]\t\t\t\t\t; then  SGDBTENFOOTTYPES=\"static\"; fi\n\t\tif [ -z \"$SGDBTENFOOTSTYLES\" ]\t\t\t\t\t; then  SGDBTENFOOTSTYLES=\"$SGDBTNFTSTYLEOPTS\"; fi\n\t\tif [ -z \"$SGDBTENFOOTNSFW\" ]\t\t\t\t\t; then  SGDBTENFOOTNSFW=\"any\"; fi\n\t\tif [ -z \"$SGDBTENFOOTHUMOR\" ]\t\t\t\t\t; then  SGDBTENFOOTHUMOR=\"any\"; fi\n\t\tif [ -z \"$SGDBTENFOOTEPILEPSY\" ]\t\t\t\t; then  SGDBTENFOOTEPILEPSY=\"false\"; fi\n\t\tif [ -z \"$STORECOMPDATTITLE\" ]\t\t\t\t\t; then\tSTORECOMPDATTITLE=\"1\"; fi\n\t\tif [ -z \"$CUSTCONTY\" ]\t\t\t\t\t\t\t; then\tCUSTCONTY=\"$NON\"; fi\n\t\tif [ -z \"$UPDATECONTY\" ]\t\t\t\t\t\t; then\tUPDATECONTY=\"1\"; fi\n\t\tif [ -z \"$LOGPLAYTIME\" ]\t\t\t\t\t\t; then\tLOGPLAYTIME=\"1\"; fi\n\t\tif [ -z \"$YAD\" ]\t\t\t\t\t\t\t\t; then\tYAD=\"$(command -v \"yad\")\"; fi\n\t\tif [ -z \"$DPRSCOMPDATA\" ]\t\t\t\t\t\t; then\tDPRSCOMPDATA=\"$STLCFGDIR/${DPRS,}/$CODA\"; fi\n\t\tif [ -z \"$USEDPRSPROTON\" ]\t\t\t\t\t\t; then\tUSEDPRSPROTON=\"$NON\"; fi\n\t\tif [ -z \"$DPRSUSEVDFSYMLINKS\" ]\t\t\t\t\t; then\tDPRSUSEVDFSYMLINKS=\"0\"; fi\n\t\tif [ -z \"$DPRSPAUTOUP\" ]\t\t\t\t\t\t; then\tDPRSPAUTOUP=\"0\"; fi\n\t\tif [ -z \"$DEPSAUTOUP\" ]\t\t\t\t\t\t\t; then\tDEPSAUTOUP=\"0\"; fi\n\t\tif [ -z \"$MO2COMPDATA\" ]\t\t\t\t\t\t; then\tMO2COMPDATA=\"$STLMO2DIR/$CODA\"; fi\n\t\tif [ -z \"$HMMCOMPDATA\" ]                        ; then  HMMCOMPDATA=\"$STLHMMDIR/$CODA\"; fi\n\t\tif [ -z \"$HMMDLVER\" ]                           ; then  HMMDLVER=\"$HMMSTABLE\"; fi\n\t\tif [ -z \"$USEMO2PROTON\" ]\t\t\t\t\t\t; then\tUSEMO2PROTON=\"$NON\"; fi\n\t\tif [ -z \"$USEMO2CUSTOMINSTALLER\" ]\t\t\t\t; then  USEMO2CUSTOMINSTALLER=\"0\"; fi\n\t\tif [ -z \"$MO2CUSTOMINSTALLER\" ]\t\t\t\t\t; then  MO2CUSTOMINSTALLER=\"$NON\"; fi\n\t\tif [ -z \"$USEHMMPROTON\" ]                       ; then  USEHMMPROTON=\"$NON\"; fi\n\t\tif [ -z \"$USETERM\" ]\t\t\t\t\t\t\t; then\tUSETERM=\"$(command -v \"xterm\")\"; fi\n\t\tif [ -z \"$TERMARGS\" ]\t\t\t\t\t\t\t; then\tTERMARGS=\"-e\"; fi\n\t\tif [ -z \"$USEGLOBALWINEDPI\" ]\t\t\t\t\t; then  USEGLOBALWINEDPI=\"0\"; fi\n\t\tif [ -z \"$GLOBALWINEDPI\" ]\t\t\t\t\t\t; then  GLOBALWINEDPI=\"$DEFWINEDPI\"; fi\n\t}\n\n\tfunction setDefaultCfgValuesdefault_template {\n\t\tif [ -z \"$KEEPSTLOPEN\" ]\t\t\t\t\t\t; then\tKEEPSTLOPEN=\"0\"; fi\n\t\tif [ -z \"$USESLR\" ]\t\t\t\t\t\t\t\t; then\tUSESLR=\"1\"; fi\n\t\tif [ -z \"$FORCESLR\" ]\t\t\t\t\t\t\t; then\tFORCESLR=\"0\"; fi\n\t\tif [ -z \"$IGNORECOMPATSLR\" ]\t\t\t\t\t; then\tIGNORECOMPATSLR=\"0\"; fi\n\t\tif [ -z \"$USEREAP\" ]\t\t\t\t\t\t\t; then\tUSEREAP=\"1\"; fi\n\t\tif [ -z \"$FORCEREAP\" ]\t\t\t\t\t\t\t; then\tFORCEREAP=\"0\"; fi\n\t\tif [ -z \"$USEPROTON\" ]\t\t\t\t\t\t\t; then\tUSEPROTON=\"$(getDefaultProton)\"; fi\n\t\tif [ -z \"$REDIRCOMPDATA\" ]\t\t\t\t\t\t; then\tREDIRCOMPDATA=\"disabled\"; fi\n\t\tif [ -z \"$REDIRSTEAMUSER\" ]\t\t\t\t\t\t; then\tREDIRSTEAMUSER=\"disabled\"; fi\n\t\tif [ -z \"$ONLYPROTMAJORREDIRECT\" ]              ; then  ONLYPROTMAJORREDIRECT=\"0\"; fi\n\t\tif [ -z \"$AUTOBUMPGE\" ]\t\t\t\t\t\t\t; then\tAUTOBUMPGE=\"0\"; fi\n\t\tif [ -z \"$AUTOBUMPPROTON\" ]\t\t\t\t\t\t; then\tAUTOBUMPPROTON=\"0\"; fi\n\t\tif [ -z \"$USECUSTOMCMD\" ]\t\t\t\t\t\t; then\tUSECUSTOMCMD=\"0\"; fi\n\t\tif [ -z \"$CUSTOMCMD\" ]\t\t\t\t\t\t\t; then\tCUSTOMCMD=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$CUSTOMCMD_ARGS\" ]\t\t\t\t\t\t; then\tCUSTOMCMD_ARGS=\"$NON\"; fi\n\t\tif [ -z \"$ONLY_CUSTOMCMD\" ]\t\t\t\t\t\t; then\tONLY_CUSTOMCMD=\"0\";\tfi\n\t\tif [ -z \"$FORK_CUSTOMCMD\" ]\t\t\t\t\t\t; then\tFORK_CUSTOMCMD=\"0\";\tfi\n\t\tif [ -z \"$EXTPROGS_CUSTOMCMD\" ]\t\t\t\t\t; then  EXTPROGS_CUSTOMCMD=\"0\"; fi\n\t\tif [ -z \"$CUSTOMCMD_USESLR\" ]\t\t\t\t\t; then  CUSTOMCMD_USESLR=\"1\"; fi\n\t\tif [ -z \"$CUSTOMCMDFORCEWIN\" ]\t\t\t\t\t; then  CUSTOMCMDFORCEWIN=\"0\"; fi\n\t\tif [ -z \"$WAITFORCUSTOMCMD\" ]\t\t\t\t\t; then\tWAITFORCUSTOMCMD=\"0\"; fi\n\t\tif [ -z \"$INJECT_CUSTOMCMD\" ]\t\t\t\t\t; then\tINJECT_CUSTOMCMD=\"0\"; fi\n\t\tif [ -z \"$INJECTWAIT\" ]\t\t\t\t\t\t\t; then\tINJECTWAIT=\"0\";\tfi\n\t\tif [ -z \"$USEIGCS\" ]\t\t\t\t\t\t\t; then\tUSEIGCS=\"0\"; fi\n\t\tif [ -z \"$UUUSEIGCS\" ]\t\t\t\t\t\t\t; then\tUUUSEIGCS=\"0\"; fi\n\t\tif [ -z \"$IGCSWAIT\" ]\t\t\t\t\t\t\t; then\tIGCSWAIT=\"0\"; fi\n\t\tif [ -z \"$UUUSEPATCH\" ]\t\t\t\t\t\t\t; then\tUUUSEPATCH=\"0\"; fi\n\t\tif [ -z \"$UUUPATCHWAIT\" ]\t\t\t\t\t\t; then\tUUUPATCHWAIT=\"0\"; fi\n\t\tif [ -z \"$UUUSEVR\" ]\t\t\t\t\t\t\t; then\tUUUSEVR=\"0\"; fi\n\t\tif [ -z \"$GAMEARGS\" ]\t\t\t\t\t\t\t; then\tGAMEARGS=\"$NON\"; fi\n\t\tif [ -z \"$HARDARGS\" ]\t\t\t\t\t\t\t; then\tHARDARGS=\"$NOPE\"; fi\n\t\tif [ -z \"$USEGAMEMODERUN\" ]\t\t\t\t\t\t; then\tUSEGAMEMODERUN=\"0\";\tfi\n\t\tif [ -z \"$USEGAMESCOPE\" ]\t\t\t\t\t\t; then\tUSEGAMESCOPE=\"0\"; fi\n\t\tif [ -z \"$USEGAMESCOPEWSI\" ]\t\t\t\t\t; then  USEGAMESCOPEWSI=\"0\"; fi\n\t\tif [ -z \"$GAMESCOPE_ARGS\" ]\t\t\t\t\t\t; then\tGAMESCOPE_ARGS=\"--\"; fi\n\t\tif [ -z \"$USEOBSCAP\" ]\t\t\t\t\t\t\t; then\tUSEOBSCAP=\"0\"; fi\n\t\tif [ -z \"$USEZINK\" ]\t\t\t\t\t\t\t; then\tUSEZINK=\"0\"; fi\n\t\tif [ -z \"$USEPRIMERUN\" ]\t\t\t\t\t\t; then\tUSEPRIMERUN=\"0\"; fi\n\t\tif [ -z \"$TOGSTEAMWEBHELPER\" ]\t\t\t\t\t; then\tTOGSTEAMWEBHELPER=\"0\"; fi\n\t\tif [ -z \"$USEMANGOHUD\" ]\t\t\t\t\t\t; then\tUSEMANGOHUD=\"0\"; fi\n\t\tif [ -z \"$USEMANGOAPP\" ]\t\t\t\t\t\t; then\tUSEMANGOAPP=\"0\"; fi\n\t\tif [ -z \"$MAHUBIN\" ]\t\t\t\t\t\t\t; then\tMAHUBIN=\"$(command -v \"$MAHU\")\"; fi\n\t\tif [ -z \"$MAHUARGS\" ]\t\t\t\t\t\t\t; then\tMAHUARGS=\"$NON\"; fi\n\t\tif [ -z \"$MAHUDLSYM\" ]\t\t\t\t\t\t\t; then  MAHUDLSYM=\"0\"; fi\n\t\tif [ -z \"$LDPMAHU\" ]\t\t\t\t\t\t\t; then\tLDPMAHU=\"0\"; fi\n\t\tif [ -z \"$MAHUVAR\" ]\t\t\t\t\t\t\t; then\tMAHUVAR=\"0\"; fi\n\t\tif [ -z \"$USEMANGOHUDSTLCFG\" ]\t\t\t\t\t; then\tUSEMANGOHUDSTLCFG=\"0\";\tfi\n\t\tif [ -z \"$VULKANPOSTPROCESSOR\" ]\t\t\t\t; then  VULKANPOSTPROCESSOR=\"$NON\"; fi\n\t\tif [ -z \"$RUN_NYRNA\" ]\t\t\t\t\t\t\t; then\tRUN_NYRNA=\"0\"; fi\n\t\tif [ -z \"$RUN_REPLAY\" ]\t\t\t\t\t\t\t; then\tRUN_REPLAY=\"0\";\tfi\n\t\tif [ -z \"$RUN_X64DBG\" ]\t\t\t\t\t\t\t; then\tRUN_X64DBG=\"0\";\tfi\n\t\tif [ -z \"$X64DBG_ATTACHONSTARTUP\" ]\t\t\t\t; then  X64DBG_ATTACHONSTARTUP=\"1\"; fi\n\t\tif [ -z \"$RUN_GDB\" ]\t\t\t\t\t\t\t; then\tRUN_GDB=\"0\";\tfi\n\t\tif [ -z \"$USE_WDIB\" ]\t\t\t\t\t\t\t; then\tUSE_WDIB=\"0\";\tfi\n\t\tif [ -z \"$USEVORTEX\" ]\t\t\t\t\t\t\t; then\tUSEVORTEX=\"0\"; fi\n\t\tif [ -z \"$WAITVORTEX\" ]\t\t\t\t\t\t\t; then\tWAITVORTEX=\"2\"; fi\n\t\tif [ -z \"$RUN_VORTEX_WINETRICKS\" ]\t\t\t\t; then\tRUN_VORTEX_WINETRICKS=\"0\"; fi\n\t\tif [ -z \"$RUN_VORTEX_WINECFG\" ]\t\t\t\t\t; then\tRUN_VORTEX_WINECFG=\"0\";fi\n\t\tif [ -z \"$CHANGE_PULSE_LATENCY\" ] \t\t\t\t; then\tCHANGE_PULSE_LATENCY=\"0\"; fi\n\t\tif [ -z \"$STL_PULSE_LATENCY_MSEC\" ]\t\t\t\t; then\tSTL_PULSE_LATENCY_MSEC=\"60\"; fi\n\t\tif [ -z \"$TOGGLEWINDOWS\" ]\t\t\t\t\t\t; then\tTOGGLEWINDOWS=\"0\"; fi\n\t\tif [ -z \"$RUN_WINETRICKS\" ]\t\t\t\t\t\t; then\tRUN_WINETRICKS=\"0\"; fi\n\t\tif [ -z \"$WINETRICKSPAKS\" ]\t\t\t\t\t\t; then\tWINETRICKSPAKS=\"$NON\"; fi\n\t\tif [ -z \"$RUN_WINECFG\" ]\t\t\t\t\t\t; then\tRUN_WINECFG=\"0\"; fi\n\t\tif [ -z \"$USEWINE\" ]\t\t\t\t\t\t\t; then\tUSEWINE=\"0\"; fi\n\t\tif [ -z \"$WINEVERSION\" ]\t\t\t\t\t\t; then\tWINEVERSION=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$WINEDEFAULT\" ]\t\t\t\t\t\t; then\tWINEDEFAULT=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$USEWICO\" ]\t\t\t\t\t\t\t; then\tUSEWICO=\"0\"; fi\n\t\tif [ -z \"$VIRTUALDESKTOP\" ]\t\t\t\t\t\t; then\tVIRTUALDESKTOP=\"0\"; fi\n\t\tif [ -z \"$VDRES\" ]\t\t\t\t\t\t\t\t; then\tVDRES=\"$NON\"; fi\n\t\tif [ -z \"$USEBOXTRON\" ]\t\t\t\t\t\t\t; then\tUSEBOXTRON=\"0\"; fi\n\t\tif [ -z \"$USEROBERTA\" ]\t\t\t\t\t\t\t; then\tUSEROBERTA=\"0\"; fi\n\t\tif [ -z \"$USELUXTORPEDA\" ]\t\t\t\t\t\t; then\tUSELUXTORPEDA=\"0\"; fi\n\t\tif [ -z \"$REGEDIT\" ]\t\t\t\t\t\t\t; then\tREGEDIT=\"0\"; fi\n\t\tif [ -z \"$USEGEOELF\" ]\t\t\t\t\t\t\t; then\tUSEGEOELF=\"0\"; fi\n\t\tif [ -z \"$AUTOGEOELF\" ]\t\t\t\t\t\t\t; then\tAUTOGEOELF=\"0\"; fi\n\t\tif [ -z \"$RESHADE_DEPTH3D\" ]\t\t\t\t\t; then\tRESHADE_DEPTH3D=\"0\"; fi\n\t\tif [ -z \"$USERESHADE\" ]\t\t\t\t\t\t\t; then\tUSERESHADE=\"0\"; fi\n\t\tif [ -z \"$CUSTOMCMDRESHADE\" ]\t\t\t\t\t; then\tCUSTOMCMDRESHADE=\"0\"; fi\n\t\tif [ -z \"$RESHADEUPDATE\" ]\t\t\t\t\t\t; then\tRESHADEUPDATE=\"0\"; fi\n\t\tif [ -z \"$CREATERESHINI\" ]\t\t\t\t\t\t; then  CREATERESHINI=\"1\"; fi\n\t\tif [ -z \"$RSOVRD\" ] \t\t\t\t\t\t\t; then  RSOVRD=\"0\"; fi\n\t\tif [ -z \"$RSOVRVERS\" ] \t\t\t\t\t\t\t; then  RSOVRVERS=\"$RSVERS\"; fi\n\t\tif [ -z \"$RESHADEDLLNAME\" ]\t\t\t\t\t\t; then  RESHADEDLLNAME=\"$DXGI\"; fi\n\t\tif [ -z \"$CHOOSESHADERS\" ]\t\t\t\t\t\t; then\tCHOOSESHADERS=\"0\"; fi\n\t\tif [ -z \"$ALTEXEPATH\" ]\t\t\t\t\t\t\t; then\tALTEXEPATH=\"/tmp\"; fi\n\t\tif [ -z \"$ARCHALTEXE\" ]\t\t\t\t\t\t\t; then\tARCHALTEXE=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$USEOPENVRFSR\" ]\t\t\t\t\t\t; then\tUSEOPENVRFSR=\"0\"; fi\n\t\tif [ -z \"$RUNSBSVR\" ]\t\t\t\t\t\t\t; then\tRUNSBSVR=\"0\"; fi\n\t\tif [ -z \"$RUNSBS\" ]\t\t\t\t\t\t\t\t; then\tRUNSBS=\"0\"; fi\n\t\tif [ -z \"$VRVIDEOPLAYERARGS\" ]\t\t\t\t\t; then\tVRVIDEOPLAYERARGS=\"--flat\"; fi\n\t\tif [ -z \"$SBSZOOM\" ]\t\t\t\t\t\t\t; then\tSBSZOOM=\"1.0\"; fi\n\t\tif [ -z \"$SBSVRGEOELF\" ]\t\t\t\t\t\t; then\tSBSVRGEOELF=\"0\"; fi\n\t\tif [ -z \"$SBSVRRS\" ]\t\t\t\t\t\t\t; then\tSBSVRRS=\"0\"; fi\n\t\tif [ -z \"$SBSRS\" ]\t\t\t\t\t\t\t\t; then\tSBSRS=\"0\"; fi\n\t\tif [ -z \"$MINVRWINH\" ] \t\t\t\t\t\t\t; then\tMINVRWINH=\"640\"; fi\n\t\tif [ -z \"$WAITFORTHISPID\" ]\t\t\t\t\t\t; then\tWAITFORTHISPID=\"$NON\"; fi\n\t\tif [ -z \"$WAITEDITOR\" ]\t\t\t\t\t\t\t; then\tWAITEDITOR=\"2\"; fi\n\t\tif [ -z \"$HELPURL\" ]\t\t\t\t\t\t\t; then\tHELPURL=\"$NON\"; fi\n\t\tif [ -z \"$CREATEDESKTOPICON\" ]\t\t\t\t\t; then\tCREATEDESKTOPICON=\"0\"; fi\n\t\tif [ -z \"$STEAMAPPIDFILE\" ]\t\t\t\t\t\t; then\tSTEAMAPPIDFILE=\"0\"; fi\n\t\tif [ -z \"$CHECKCOLLECTIONS\" ]\t\t\t\t\t; then\tCHECKCOLLECTIONS=\"1\"; fi\n\t\tif [ -z \"$BACKUPSTEAMUSER\" ]\t\t\t\t\t; then\tBACKUPSTEAMUSER=\"0\"; fi\n\t\tif [ -z \"$RESTORESTEAMUSER\" ]\t\t\t\t\t; then\tRESTORESTEAMUSER=\"$NON\"; fi\n\t\tif [ -z \"$USESUSYM\" ]\t\t\t\t\t\t\t; then\tUSESUSYM=\"0\"; fi\n\t\tif [ -z \"$USEGLOBSUSYM\" ]\t\t\t\t\t\t; then\tUSEGLOBSUSYM=\"0\"; fi\n\t\tif [ -z \"$STRACERUN\" ]\t\t\t\t\t\t\t; then\tSTRACERUN=\"0\"; fi\n\t\tif [ -z \"$STRACEOPTS\" ]\t\t\t\t\t\t\t; then\tSTRACEOPTS=\"-f -t -e trace=file\"; fi\n\t\tif [ -z \"$USENETMON\" ]\t\t\t\t\t\t\t; then\tUSENETMON=\"0\"; fi\n\t\tif [ -z \"$BLOCKINTERNET\" ]\t\t\t\t\t\t; then\tBLOCKINTERNET=\"0\"; fi\n\t\tif [ -z \"$USE_STLDXVKCFG\" ]\t\t\t\t\t\t; then\tUSE_STLDXVKCFG=\"0\"; fi\n\t\tif [ -z \"$DXVK_HUD\" ]\t\t\t\t\t\t\t; then\tDXVK_HUD=\"0\"; fi\n\t\tif [ -z \"$DXVK_LOG_LEVEL\" ]\t\t\t\t\t\t; then\tDXVK_LOG_LEVEL=\"$NON\"; fi\n\t\tif [ -z \"$DXVK_LOG_PATH\" ]\t\t\t\t\t\t; then\tDXVK_LOG_PATH=\"$STLDXVKLOGDIR\"; fi\n\t\tif [ -z \"$DXVK_SCALE\" ]\t\t\t\t\t\t\t; then\tDXVK_SCALE=\"1.0\"; fi\n\t\tif [ -z \"$DXVK_FPSLIMIT\" ]                      ; then  DXVK_FPSLIMIT=\"none\"; fi\n\t\tif [ -z \"$DXVK_ASYNC\" ]\t\t\t\t\t\t\t; then\tDXVK_ASYNC=\"0\"; fi\n\t\tif [ -z \"$DXVK_HDR\" ]\t\t\t\t\t\t\t; then  DXVK_HDR=\"0\"; fi\n\t\tif [ -z \"$PROTON_LOG\" ]\t\t\t\t\t\t\t; then\tPROTON_LOG=\"0\"; fi\n\t\tif [ -z \"$PROTON_LOG_DIR\" ]\t\t\t\t\t\t; then\tPROTON_LOG_DIR=\"$STLPROTONIDLOGDIR\"; fi\n\t\tif [ -z \"$USEWINEDEBUGPROTON\" ]\t\t\t\t\t; then\tUSEWINEDEBUGPROTON=\"0\"; fi\n\t\tif [ -z \"$WINE_LOG_DIR\" ]\t\t\t\t\t\t; then\tWINE_LOG_DIR=\"$STLWINELOGDIR\"; fi\n\t\tif [ -z \"$PROTON_DEBUG_DIR\" ]\t\t\t\t\t; then\tPROTON_DEBUG_DIR=\"/tmp\"; fi\n\t\tif [ -z \"$PROTON_USE_WINED3D\" ]\t\t\t\t\t; then\tPROTON_USE_WINED3D=\"0\"; fi\n\t\tif [ -z \"$PROTON_NO_D3D11\" ]\t\t\t\t\t; then\tPROTON_NO_D3D11=\"0\"; fi\n\t\tif [ -z \"$PROTON_NO_D3D10\" ]\t\t\t\t\t; then\tPROTON_NO_D3D10=\"0\"; fi\n\t\tif [ -z \"$PROTON_NO_ESYNC\" ]\t\t\t\t\t; then\tPROTON_NO_ESYNC=\"0\"; fi\n\t\tif [ -z \"$PROTON_NO_FSYNC\" ]\t\t\t\t\t; then\tPROTON_NO_FSYNC=\"0\"; fi\n\t\tif [ -z \"$ENABLE_WINESYNC\" ]\t\t\t\t\t; then\tENABLE_WINESYNC=\"0\"; fi\n\t\tif [ -z \"$PROTON_ENABLE_NVAPI\" ]\t\t\t\t; then\tPROTON_ENABLE_NVAPI=\"0\"; fi\n\t\tif [ -z \"$PROTON_HIDE_NVIDIA_GPU\" ]\t\t\t\t; then\tPROTON_HIDE_NVIDIA_GPU=\"1\"; fi\n\t\tif [ -z \"$STL_VKD3D_CONFIG\" ]\t\t\t\t\t; then\tSTL_VKD3D_CONFIG=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_DEBUG\" ]\t\t\t\t\t; then\tSTL_VKD3D_DEBUG=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_SHADER_DEBUG\" ]\t\t\t\t; then\tSTL_VKD3D_SHADER_DEBUG=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_LOG_FILE\" ]\t\t\t\t\t; then\tSTL_VKD3D_LOG_FILE=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_VULKAN_DEVICE\" ]\t\t\t; then\tSTL_VKD3D_VULKAN_DEVICE=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_FILTER_DEVICE_NAME\" ]\t\t; then\tSTL_VKD3D_FILTER_DEVICE_NAME=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_DISABLE_EXTENSIONS\" ]\t\t; then\tSTL_VKD3D_DISABLE_EXTENSIONS=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_TEST_DEBUG\" ]\t\t\t\t; then\tSTL_VKD3D_TEST_DEBUG=\"0\"; fi\n\t\tif [ -z \"$STL_VKD3D_TEST_FILTER\" ]\t\t\t\t; then\tSTL_VKD3D_TEST_FILTER=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_TEST_EXCLUDE\" ]\t\t\t\t; then\tSTL_VKD3D_TEST_EXCLUDE=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_TEST_PLATFORM\" ]\t\t\t; then\tSTL_VKD3D_TEST_PLATFORM=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_TEST_BUG\" ]\t\t\t\t\t; then\tSTL_VKD3D_TEST_BUG=\"$NON\"; fi\n\t\tif [ -z \"$STL_VKD3D_PROFILE_PATH\" ]\t\t\t\t; then\tSTL_VKD3D_PROFILE_PATH=\"$NON\"; fi\n\t\tif [ -z \"$USEDLSS\" ]\t\t\t\t\t\t\t; then\tUSEDLSS=\"0\"; fi\n\t\tif [ -z \"$USERAYTRACING\" ]\t\t\t\t\t\t; then\tUSERAYTRACING=\"0\"; fi\n\t\tif [ -z \"$PROTON_FORCE_LARGE_ADDRESS_AWARE\" ]\t; then\tPROTON_FORCE_LARGE_ADDRESS_AWARE=\"1\"; fi\n\t\tif [ -z \"$PROTON_DUMP_DEBUG_COMMANDS\" ]\t\t\t; then\tPROTON_DUMP_DEBUG_COMMANDS=\"0\"; fi\n\t\tif [ -z \"$CLEANPROTONTEMP\" ]\t\t\t\t\t; then\tCLEANPROTONTEMP=\"0\"; fi\n\t\tif [ -z \"$WINE_FULLSCREEN_INTEGER_SCALING\" ]\t; then\tWINE_FULLSCREEN_INTEGER_SCALING=\"0\"; fi\n\t\tif [ -z \"$WINE_FULLSCREEN_FSR\" ]\t\t\t\t; then\tWINE_FULLSCREEN_FSR=\"0\"; fi\n\t\tif [ -z \"$WINE_FULLSCREEN_FSR_STRENGTH\" ]\t\t; then\tWINE_FULLSCREEN_FSR_STRENGTH=\"2\"; fi\n\t\tif [ -z \"$WINE_FULLSCREEN_FSR_MODE\" ]\t\t\t; then  WINE_FULLSCREEN_FSR_MODE=\"none\"; fi\n\t\tif [ -z \"$WINE_FULLSCREEN_FSR_CUSTOM_MODE\" ]\t; then  WINE_FULLSCREEN_FSR_CUSTOM_MODE=\"none\"; fi\n\t\tif [ -z \"$USEPERGAMEWINEDPI\" ]\t\t\t\t\t; then  USEPERGAMEWINEDPI=\"0\"; fi\n\t\tif [ -z \"$PERGAMEWINEDPI\" ]\t\t\t\t\t\t; then  PERGAMEWINEDPI=\"$DEFWINEDPI\"; fi\n\t\tif [ -z \"$STLWINEDEBUG\" ]\t\t\t\t\t\t; then\tSTLWINEDEBUG=\"-all\"; fi\n\t\tif [ -z \"$STLWINEDLLOVERRIDES\" ]\t\t\t\t; then\tSTLWINEDLLOVERRIDES=\"$NON\"; fi\n\t\tif [ -z \"$USERSTART\" ]\t\t\t\t\t\t\t; then\tUSERSTART=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$USERSTOP\" ]\t\t\t\t\t\t\t; then\tUSERSTOP=\"$DUMMYBIN\"; fi\n\t\tif [ -z \"$AUTOCONTY\" ]\t\t\t\t\t\t\t; then\tAUTOCONTY=\"0\"; fi\n\t\tif [ -z \"$USECONTY\" ]\t\t\t\t\t\t\t; then\tUSECONTY=\"0\"; fi\n\t\tif [ -z \"$CRASHGUESS\" ]\t\t\t\t\t\t\t; then\tCRASHGUESS=\"60\"; fi\n\t\tif [ -z \"$ONLYWICO\" ]\t\t\t\t\t\t\t; then\tONLYWICO=\"0\"; fi\n\t\tif [ -z \"$GAMESCREENRES\" ]\t\t\t\t\t\t; then\tGAMESCREENRES=\"$NON\"; fi\n\t\tif [ -z \"$FIXSYMLINKS\" ]\t\t\t\t\t\t; then\tFIXSYMLINKS=\"0\"; fi\n\t\tif [ -z \"$UNSYMLINK\" ]\t\t\t\t\t\t\t; then\tUNSYMLINK=\"0\"; fi\n\t\tif [ -z \"$DELPFX\" ]\t\t\t\t\t\t\t\t; then\tDELPFX=\"0\"; fi\n\t\tif [ -z \"$RUN_DEPS\" ]\t\t\t\t\t\t\t; then\tRUN_DEPS=\"0\"; fi\n\t\tif [ -z \"$SORTGARGS\" ]\t\t\t\t\t\t\t; then\tSORTGARGS=\"0\"; fi\n\t\tif [ -z \"$MO2MODE\" ]\t\t\t\t\t\t\t; then\tMO2MODE=\"disabled\"; fi\n\t\tif [ -z \"$WAITMO2\" ]\t\t\t\t\t\t\t; then\tWAITMO2=\"2\"; fi\n\t\tif [ -z \"$MO2SILENTMODEEXEOVERRIDE\" ]\t\t\t; then  MO2SILENTMODEEXEOVERRIDE=\"$NON\"; fi\n\t\tif [ -z \"$USESPECIALK\" ]\t\t\t\t\t\t; then\tUSESPECIALK=\"0\"; fi\n\t\tif [ -z \"$SPEKDLLNAME\" ]\t\t\t\t\t\t; then  SPEKDLLNAME=\"$AUTO\"; fi\n\t\tif [ -z \"$USERESHSPEKPLUGIN\" ]\t\t\t\t\t; then  USERESHSPEKPLUGIN=\"1\"; fi\n\t\tif [ -z \"$USESPEKD3D47\" ]\t\t\t\t\t\t; then  USESPEKD3D47=\"1\"; fi\n\t\tif [ -z \"$SDLUSEWAYLAND\" ]\t\t\t\t\t\t; then  SDLUSEWAYLAND=\"0\"; fi\n\t\tif [ -z \"$STLRAD_PFTST\" ]                       ; then  STLRAD_PFTST=\"none\"; fi\n\t\tif [ -z \"$SPEKVERS\" ]\t\t\t\t\t\t\t; then\tSPEKVERS=\"stable\"; fi\n\t\tif [ -z \"$AUTOSPEK\" ]\t\t\t\t\t\t\t; then\tAUTOSPEK=\"0\"; fi\n\t\tif [ -z \"$USEFWS\" ]\t\t\t\t\t\t\t\t; then\tUSEFWS=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PELDD\" ]\t\t\t\t\t\t; then\tUSEPEV_PELDD=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PEPACK\" ]\t\t\t\t\t\t; then\tUSEPEV_PEPACK=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PERES\" ]\t\t\t\t\t\t; then\tUSEPEV_PERES=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PESCAN\" ]\t\t\t\t\t\t; then\tUSEPEV_PESCAN=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PESEC\" ]\t\t\t\t\t\t; then\tUSEPEV_PESEC=\"0\"; fi\n\t\tif [ -z \"$USEPEV_PESTR\" ]\t\t\t\t\t\t; then\tUSEPEV_PESTR=\"0\"; fi\n\t\tif [ -z \"$USEPEV_READPE\" ]\t\t\t\t\t\t; then\tUSEPEV_READPE=\"0\"; fi\n\t}\n\n\t\"${FUNCNAME[0]}$1\"\n}\n\nfunction saveCfg {\n\n\tfunction saveCfgurl {\n\n\t\tsetDefaultCfgValues \"$2\"\n\n\t\tif [ -f \"$1\" ]; then\n\t\t\tupdateConfigFile \"$1\" \"${FUNCNAME[0]}\" \"$3\"\n\t\telse\n\t\t\t#STARTsaveCfgurl\n\t\t\t{\n\t\t\techo \"## config Version: $PROGVERS\"\n\t\t\techo \"##########################\"\n\t\t\techo \"## Url Config:\"\n\t\t\techo \"##########################\"\n\t\t\techo \"PROJECTPAGE=\\\"$PROJECTPAGE\\\"\"\n\t\t\techo \"##########################\"\n\t\t\techo \"## Proton GE DL URL\"\n\t\t\techo \"CP_PROTONGE=\\\"$CP_PROTONGE\\\"\"\n\t\t\techo \"## Proton TKG DL URL\"\n\t\t\techo \"CP_PROTONTKG=\\\"$CP_PROTONTKG\\\"\"\n\t\t\techo \"## Proton STL DL URL\"\n\t\t\techo \"CP_PROTONSTL=\\\"$CP_PROTONSTL\\\"\"\n\t\t\techo \"## Wine Kron4ek URL\"\n\t\t\techo \"CW_KRON4EK=\\\"$CW_KRON4EK\\\"\"\n\t\t\techo \"## Lutris Wine URL\"\n\t\t\techo \"CW_LUTRIS=\\\"$CW_LUTRIS\\\"\"\n\t\t\techo \"## Wine-GE URL\"\n\t\t\techo \"CW_WINEGE=\\\"$CW_WINEGE\\\"\"\n\t\t\techo \"## d3d47 64bit DL URL \"\n\t\t\techo \"DL_D3D47_64=\\\"$DL_D3D47_64\\\"\"\n\t\t\techo \"## d3d47 32bit DL URL\"\n\t\t\techo \"DL_D3D47_32=\\\"$DL_D3D47_32\\\"\"\n\t\t\techo \"## Dxvk Project URL\"\n\t\t\techo \"DXVKURL=\\\"$DXVKURL\\\"\"\n\t\t\techo \"## ${RESH} DL URL\"\n\t\t\techo \"RESHADEDLURL=\\\"$RESHADEDLURL\\\"\"\n\t\t\techo \"## ${RESH} Project URL\"\n\t\t\techo \"RESHADEPROJURl=\\\"$RESHADEPROJURL\\\"\"\n\t\t\techo \"## ${VTX^} Project URL\"\n\t\t\techo \"VORTEXPROJURL=\\\"$VORTEXPROJURL\\\"\"\n\t\t\techo \"## Xlive DL URL\"\n\t\t\techo \"XLIVEURL=\\\"$XLIVEURL\\\"\"\n\t\t\techo \"## Steam Asset URL\"\n\t\t\techo \"STASSURL=\\\"$STASSURL\\\"\"\n\t\t\techo \"## winetricks URL\"\n\t\t\techo \"WINETRICKSURL=\\\"$WINETRICKSURL\\\"\"\n\t\t\techo \"## x64dbg URL\"\n\t\t\techo \"X64DBGURL=\\\"$X64DBGURL\\\"\"\n\t\t\techo \"## SteamGridDB Api URL\"\n\t\t\techo \"BASESTEAMGRIDDBAPI=\\\"$BASESTEAMGRIDDBAPI\\\"\"\n\t\t\techo \"## Conty DL URL\"\n\t\t\techo \"CONTYRELURL=\\\"$CONTYRELURL\\\"\"\n\t\t\techo \"## Mod Organizer 2 Project URL\"\n\t\t\techo \"MO2PROJURL=\\\"$MO2PROJURL\\\"\"\n\t\t\techo \"## HedgeModManager Project URL\"\n\t\t\techo \"HMMPROJURL=\\\"$HMMPROJURL\\\"\"\n\t\t\techo \"## SpecialK Project URL\"\n\t\t\techo \"SPEKPROJURL=\\\"$SPEKPROJURL\\\"\"\n\t\t\techo \"## $DPRS DL URL\"\n\t\t\techo \"DPRSRELURL=\\\"$DPRSRELURL\\\"\"\n\t\t\techo \"## $DEPS URL\"\n\t\t\techo \"DEPURL=\\\"$DEPURL\\\"\"\n\t\t\techo \"## $SPEK URL\"\n\t\t\techo \"SPEKURL=\\\"$SPEKURL\\\"\"\n\t\t\techo \"## $SPEK GH URL\"\n\t\t\techo \"SPEKGHURL=\\\"$SPEKGHURL\\\"\"\n\t\t\techo \"## $SPEK compatibility URL\"\n\t\t\techo \"SPEKCOMPURL=\\\"$SPEKCOMPURL\\\"\"\n\t\t\techo \"## $FWS DL URL\"\n\t\t\techo \"FWSURL=\\\"$FWSURL\\\"\"\n\t\t\techo \"## $YAD appimage url\"\n\t\t\techo \"YAIURL=\\\"$YAIURL\\\"\"\n\t\t\techo \"## wine reload URL\"\n\t\t\techo \"WINERELOADURL=\\\"$WINERELOADURL\\\"\"\n\t\t\techo \"## $GEOELF url\"\n\t\t\techo \"GEOELFURL=\\\"$GEOELFURL\\\"\"\n\t\t\techo \"## $WDIBURL url\"\n\t\t\techo \"WDIBURL=\\\"$WDIBURL\\\"\"\n\t\t\t} >> \"$1\"\n\t\t\t#ENDsaveCfgurl\n\t\tfi\n\t}\n\n\tfunction saveCfggui {\n\n\t\tsetDefaultCfgValues \"$2\"\n\n\t\tif [ -f \"$1\" ]; then\n\t\t\tupdateConfigFile \"$1\" \"${FUNCNAME[0]}\" \"$3\"\n\t\telse\n\t\t\t#STARTsaveCfggui\n\t\t\t{\n\t\t\techo \"## config Version: $PROGVERS\"\n\t\t\techo \"##########################\"\n\t\t\techo \"## Settings Selection GUI:\"\n\t\t\techo \"WINX=\\\"$WINX\\\"\"\n\t\t\techo \"WINY=\\\"$WINY\\\"\"\n\t\t\techo \"POSX=\\\"$POSX\\\"\"\n\t\t\techo \"POSY=\\\"$POSY\\\"\"\n\t\t\t} >> \"$1\"\n\t\t\t#ENDsaveCfggui\n\t\tfi\n\t}\n\n\tfunction saveCfgglobal {\n\n\t\tsetDefaultCfgValues \"$2\"\n\n\t\tif [ -f \"$1\" ]; then\n\t\t\tupdateConfigFile \"$1\" \"${FUNCNAME[0]}\" \"$3\"\n\t\telse\n\t\t\t#STARTsaveCfgglobal\n\t\t\t{\n\t\t\techo \"## config Version: $PROGVERS\"\n\t\t\techo \"##########################\"\n\t\t\techo \"## $DESC_STLLANG\"\n\t\t\techo \"STLLANG=\\\"$STLLANG\\\"\"\n\t\t\techo \"## $DESC_SKIPINTDEPCHECK\"\n\t\t\techo \"SKIPINTDEPCHECK=\\\"$SKIPINTDEPCHECK\\\"\"\n\t\t\techo \"## $DESC_YAD\"\n\t\t\techo \"YAD=\\\"$YAD\\\"\"\n\t\t\techo \"## $DESC_CUSTPROTDLDIR\"\n\t\t\techo \"CUSTPROTDLDIR=\\\"$CUSTPROTDLDIR\\\"\"\n\t\t\techo \"## $DESC_CUSTPROTEXTDIR\"\n\t\t\techo \"CUSTPROTEXTDIR=\\\"$CUSTPROTEXTDIR\\\"\"\n\t\t\techo \"## $DESC_CUPROTOCOMPAT\"\n\t\t\techo \"CUPROTOCOMPAT=\\\"$CUPROTOCOMPAT\\\"\"\n\t\t\techo \"## $DESC_WINEDLDIR\"\n\t\t\techo \"WINEDLDIR=\\\"$WINEDLDIR\\\"\"\n\t\t\techo \"## $DESC_WINEEXTDIR\"\n\t\t\techo \"WINEEXTDIR=\\\"$WINEEXTDIR\\\"\"\n\t\t\techo \"## $DESC_USEGLOBALWINEDPI\"\n\t\t\techo \"USEGLOBALWINEDPI=\\\"$USEGLOBALWINEDPI\\\"\"\n\t\t\techo \"## $DESC_GLOBALWINEDPI\"\n\t\t\techo \"GLOBALWINEDPI=\\\"$GLOBALWINEDPI\\\"\"\n\t\t\techo \"## $DESC_AUTOLASTPROTON\"\n\t\t\techo \"AUTOLASTPROTON=\\\"$AUTOLASTPROTON\\\"\"\n\t\t\techo \"## $DESC_STRACEDIR\"\n\t\t\techo \"STRACEDIR=\\\"$STRACEDIR\\\"\"\n\t\t\techo \"## $(strFix \"$DESC_LOGDIR\" \"$PROGNAME\")\"\n\t\t\techo \"LOGDIR=\\\"$LOGDIR\\\"\"\n\t\t\techo \"## $DESC_LOGLEVEL\"\n\t\t\techo \"LOGLEVEL=\\\"$LOGLEVEL\\\"\"\n\t\t\techo \"## $DESC_RESETLOG\"\n\t\t\techo \"RESETLOG=\\\"$RESETLOG\\\"\"\n\t\t\techo \"## $DESC_STLEDITOR\"\n\t\t\techo \"STLEDITOR=\\\"$STLEDITOR\\\"\"\n\t\t\techo \"## $DESC_MAXASK\"\n\t\t\techo \"MAXASK=\\\"$MAXASK\\\"\"\n\t\t\techo \"## $DESC_BROWSER\"\n\t\t\techo \"BROWSER=\\\"$BROWSER\\\"\"\n\t\t\techo \"## $DESC_USENOTIFIER\"\n\t\t\techo \"USENOTIFIER=\\\"$USENOTIFIER\\\"\"\n\t\t\techo \"## $DESC_NOTY\"\n\t\t\techo \"NOTY=\\\"$NOTY\\\"\"\n\t\t\techo \"## $DESC_NOTYARGS\"\n\t\t\techo \"NOTYARGS=\\\"$NOTYARGS\\\"\"\n\t\t\techo \"## $DESC_NETMON\"\n\t\t\techo \"NETMON=\\\"$NETMON\\\"\"\n\t\t\techo \"## $DESC_NETOPTS\"\n\t\t\techo \"NETOPTS=\\\"$NETOPTS\\\"\"\n\t\t\techo \"## $DESC_NETMONDIR\"\n\t\t\techo \"NETMONDIR=\\\"$NETMONDIR\\\"\"\n\t\t\techo \"## $DESC_VRVIDEOPLAYER\"\n\t\t\techo \"VRVIDEOPLAYER=\\\"$VRVIDEOPLAYER\\\"\"\n\t\t\techo \"## $DESC_GLOBALSBSTWEAKS\"\n\t\t\techo \"GLOBALSBSTWEAKS=\\\"$GLOBALSBSTWEAKS\\\"\"\n\t\t\techo \"## $DESC_GLOBALTWEAKS\"\n\t\t\techo \"GLOBALTWEAKS=\\\"$GLOBALTWEAKS\\\"\"\n\t\t\techo \"## $DESC_GLOBALCOLLECTIONDIR\"\n\t\t\techo \"GLOBALCOLLECTIONDIR=\\\"$GLOBALCOLLECTIONDIR\\\"\"\n\t\t\techo \"## $DESC_GLOBALMISCDIR\"\n\t\t\techo \"GLOBALMISCDIR=\\\"$GLOBALMISCDIR\\\"\"\n\t\t\techo \"## $DESC_GLOBALEVALDIR\"\n\t\t\techo \"GLOBALEVALDIR=\\\"$GLOBALEVALDIR\\\"\"\n\t\t\techo \"## $DESC_GLOBALSTLLANGDIR\"\n\t\t\techo \"GLOBALSTLLANGDIR=\\\"$GLOBALSTLLANGDIR\\\"\"\n\t\t\techo \"## $DESC_GLOBALSTLGUIDIR\"\n\t\t\techo \"GLOBALSTLGUIDIR=\\\"$GLOBALSTLGUIDIR\\\"\"\n\t\t\techo \"## $DESC_BOXTRONCMD\"\n\t\t\techo \"BOXTRONCMD=\\\"$BOXTRONCMD\\\"\"\n\t\t\techo \"## $DESC_BOXTRONARGS\"\n\t\t\techo \"BOXTRONARGS=\\\"$BOXTRONARGS\\\"\"\n\t\t\techo \"## $DESC_ROBERTACMD\"\n\t\t\techo \"ROBERTACMD=\\\"$ROBERTACMD\\\"\"\n\t\t\techo \"## $DESC_ROBERTAARGS\"\n\t\t\techo \"ROBERTAARGS=\\\"$ROBERTAARGS\\\"\"\n\t\t\techo \"## $DESC_LUXTORPEDACMD\"\n\t\t\techo \"LUXTORPEDACMD=\\\"$LUXTORPEDACMD\\\"\"\n\t\t\techo \"## $DESC_LUXTORPEDAARGS\"\n\t\t\techo \"LUXTORPEDAARGS=\\\"$LUXTORPEDAARGS\\\"\"\n\t\t\techo \"## $DESC_DOWNLOAD_RESHADE\"\n\t\t\techo \"DOWNLOAD_RESHADE=\\\"$DOWNLOAD_RESHADE\\\"\"\n\t\t\techo \"## $DESC_RSVERS\"\n\t\t\techo \"RSVERS=\\\"$RSVERS\\\"\"\n\t\t\techo \"## $DESC_AUTOBUMPRESHADE\"\n\t\t\techo \"AUTOBUMPRESHADE=\\\"$AUTOBUMPRESHADE\\\"\"\n\t\t\techo \"## $DESC_RESHADESRCDIR\"\n\t\t\techo \"RESHADESRCDIR=\\\"$RESHADESRCDIR\\\"\"\n\t\t\techo \"## $DESC_D3D47_64\"\n\t\t\techo \"D3D47_64=\\\"$D3D47_64\\\"\"\n\t\t\techo \"## $DESC_D3D47_32\"\n\t\t\techo \"D3D47_32=\\\"$D3D47_32\\\"\"\n\t\t\techo \"## $DESC_RS_64\"\n\t\t\techo \"RS_64=\\\"$RS_64\\\"\"\n\t\t\techo \"## $DESC_RS_32\"\n\t\t\techo \"RS_32=\\\"$RS_32\\\"\"\n\t\t\techo \"## $DESC_RS_64_VK\"\n\t\t\techo \"RS_64_VK=\\\"$RS_64_VK\\\"\"\n\t\t\techo \"## $DESC_RS_32_VK\"\n\t\t\techo \"RS_32_VK=\\\"$RS_32_VK\\\"\"\n\t\t\techo \"## $DESC_DLSHADER\"\n\t\t\techo \"DLSHADER=\\\"$DLSHADER\\\"\"\n\t\t\techo \"## $DESC_SAVESETSIZE\"\n\t\t\techo \"SAVESETSIZE=\\\"$SAVESETSIZE\\\"\"\n\t\t\techo \"## $DESC_STARTMENU\"\n\t\t\techo \"STARTMENU=\\\"$STARTMENU\\\"\"\n\t\t\techo \"## $DESC_HEADLINEFONT\"\n\t\t\techo \"HEADLINEFONT=\\\"$HEADLINEFONT\\\"\"\n\t\t\techo \"## $DESC_YADFORCEXWAYLAND\"\n\t\t\techo \"YADFORCEXWAYLAND=\\\"$YADFORCEXWAYLAND\\\"\"\n\t\t\techo \"## DESC_USERSSPEKVERS\"\n\t\t\techo \"USERSSPEKVERS=\\\"$USERSSPEKVERS\\\"\"\n\t\t\techo \"## $DESC_RSSPEKVERS\"\n\t\t\techo \"RSSPEKVERS=\\\"$RSSPEKVERS\\\"\"\n\t\t\techo \"## $DESC_USEWINDECO\"\n\t\t\techo \"USEWINDECO=\\\"$USEWINDECO\\\"\"\n\t\t\techo \"## $DESC_USETRAYICON\"\n\t\t\techo \"USETRAYICON=\\\"$USETRAYICON\\\"\"\n\t\t\techo \"## $DESC_USEGAMEPICS\"\n\t\t\techo \"USEGAMEPICS=\\\"$USEGAMEPICS\\\"\"\n\t\t\techo \"## $DESC_USECUSTOMFALLBACKPIC\"\n\t\t\techo \"USECUSTOMFALLBACKPIC=\\\"$USECUSTOMFALLBACKPIC\\\"\"\n\t\t\techo \"## $DESC_GITHUBUSER\"\n\t\t\techo \"GITHUBUSER=\\\"$GITHUBUSER\\\"\"\n\t\t\techo \"## $DESC_DLGAMEDATA\"\n\t\t\techo \"DLGAMEDATA=\\\"$DLGAMEDATA\\\"\"\n\t\t\techo \"## $DESC_DLSTEAMDECKCOMPATINFO\"\n\t\t\techo \"DLSTEAMDECKCOMPATINFO=\\\"$DLSTEAMDECKCOMPATINFO\\\"\"\n\t\t\techo \"## $DESC_USEPDBRATING\"\n\t\t\techo \"USEPDBRATING=\\\"$USEPDBRATING\\\"\"\n\t\t\techo \"## $DESC_PDBRATINGCACHE\"\n\t\t\techo \"PDBRATINGCACHE=\\\"$PDBRATINGCACHE\\\"\"\n\t\t\techo \"## $DESC_DLWINETRICKS\"\n\t\t\techo \"DLWINETRICKS=\\\"$DLWINETRICKS\\\"\"\n\t\t\techo \"## $DESC_USEVORTEXPROTON\"\n\t\t\techo \"USEVORTEXPROTON=\\\"$USEVORTEXPROTON\\\"\"\n\t\t\techo \"## $DESC_VORTEXCOMPDATA\"\n\t\t\techo \"VORTEXCOMPDATA=\\\"$VORTEXCOMPDATA\\\"\"\n\t\t\techo \"## $DESC_VORTEXDOWNLOADPATH\"\n\t\t\techo \"VORTEXDOWNLOADPATH=\\\"$VORTEXDOWNLOADPATH\\\"\"\n\t\t\techo \"## $DESC_USEVORTEXPRERELEASE\"\n\t\t\techo \"USEVORTEXPRERELEASE=\\\"$USEVORTEXPRERELEASE\\\"\"\n\t\t\techo \"## $DESC_VORTEXUSESLR\"\n\t\t\techo \"VORTEXUSESLR=\\\"$VORTEXUSESLR\\\"\"\n\t\t\techo \"## $DESC_VORTEXUSESLRPOSTINSTALL\"\n\t\t\techo \"VORTEXUSESLR=\\\"$VORTEXUSESLRPOSTINSTALL\\\"\"\n\t\t\techo \"## $DESC_DISABLEVORTEXAUTOUPDATE\"\n\t\t\techo \"DISABLEVORTEXAUTOUPDATE=\\\"$DISABLEVORTEXAUTOUPDATE\\\"\"\n\t\t\techo \"## $DESC_USEVORTEXCUSTOMVER\"\n\t\t\techo \"USEVORTEXCUSTOMVER=\\\"$USEVORTEXCUSTOMVER\\\"\"\n\t\t\techo \"## $DESC_VORTEXCUSTOMVER\"\n\t\t\techo \"VORTEXCUSTOMVER=\\\"$VORTEXCUSTOMVER\\\"\"\n\t\t\techo \"## $DESC_VORTEXDEVICESCALEFACTOR\"\n\t\t\techo \"VORTEXDEVICESCALEFACTOR=\\\"$VORTEXDEVICESCALEFACTOR\\\"\"\n\t\t\techo \"## $(strFix \"$DESC_DISABLE_AUTOSTAGES\" \"$PROGNAME\")\"\n\t\t\techo \"DISABLE_AUTOSTAGES=\\\"$DISABLE_AUTOSTAGES\\\"\"\n\t\t\techo \"## $DESC_NOSTEAMSTLDEF\"\n\t\t\techo \"NOSTEAMSTLDEF=\\\"$NOSTEAMSTLDEF\\\"\"\n\t\t\techo \"## $DESC_SGDBAPIKEY\"\n\t\t\techo \"SGDBAPIKEY=\\\"$SGDBAPIKEY\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBDLHERO\"\n\t\t\techo \"SGDBDLHERO=\\\"$SGDBDLHERO\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBDIMS\"\n\t\t\techo \"SGDBHERODIMS=\\\"$SGDBHERODIMS\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBTYPES\"\n\t\t\techo \"SGDBHEROTYPES=\\\"$SGDBHEROTYPES\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBSTYLES\"\n\t\t\techo \"SGDBHEROSTYLES=\\\"$SGDBHEROSTYLES\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBNSFW\"\n\t\t\techo \"SGDBHERONSFW=\\\"$SGDBHERONSFW\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBHUMOR\"\n\t\t\techo \"SGDBHEROHUMOR=\\\"$SGDBHEROHUMOR\\\"\"\n\t\t\techo \"## Hero $DESC_SGDBEPILEPSY\"\n\t\t\techo \"SGDBHEROEPILEPSY=\\\"$SGDBHEROEPILEPSY\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBDLLOGO\"\n\t\t\techo \"SGDBDLLOGO=\\\"$SGDBDLLOGO\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBTYPES\"\n\t\t\techo \"SGDBLOGOTYPES=\\\"$SGDBLOGOTYPES\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBSTYLES\"\n\t\t\techo \"SGDBLOGOSTYLES=\\\"$SGDBLOGOSTYLES\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBNSFW\"\n\t\t\techo \"SGDBLOGONSFW=\\\"$SGDBLOGONSFW\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBHUMOR\"\n\t\t\techo \"SGDBLOGOHUMOR=\\\"$SGDBLOGOHUMOR\\\"\"\n\t\t\techo \"## Logo $DESC_SGDBEPILEPSY\"\n\t\t\techo \"SGDBLOGOEPILEPSY=\\\"$SGDBLOGOEPILEPSY\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBDLBOXART\"\n\t\t\techo \"SGDBDLBOXART=\\\"$SGDBDLBOXART\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBDIMS\"\n\t\t\techo \"SGDBBOXARTDIMS=\\\"$SGDBBOXARTDIMS\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBTYPES\"\n\t\t\techo \"SGDBBOXARTTYPES=\\\"$SGDBBOXARTTYPES\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBSTYLES\"\n\t\t\techo \"SGDBBOXARTSTYLES=\\\"$SGDBBOXARTSTYLES\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBNSFW\"\n\t\t\techo \"SGDBBOXARTNSFW=\\\"$SGDBBOXARTNSFW\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBHUMOR\"\n\t\t\techo \"SGDBBOXARTHUMOR=\\\"$SGDBBOXARTHUMOR\\\"\"\n\t\t\techo \"## Boxart $DESC_SGDBEPILEPSY\"\n\t\t\techo \"SGDBBOXARTEPILEPSY=\\\"$SGDBBOXARTEPILEPSY\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBDLTENFOOT\"\n\t\t\techo \"SGDBDLTENFOOT=\\\"$SGDBDLTENFOOT\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBDIMS\"\n\t\t\techo \"SGDBTENFOOTDIMS=\\\"$SGDBTENFOOTDIMS\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBTYPES\"\n\t\t\techo \"SGDBTENFOOTTYPES=\\\"$SGDBTENFOOTTYPES\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBSTYLES\"\n\t\t\techo \"SGDBTENFOOTSTYLES=\\\"$SGDBTENFOOTSTYLES\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBNSFW\"\n\t\t\techo \"SGDBTENFOOTNSFW=\\\"$SGDBTENFOOTNSFW\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBHUMOR\"\n\t\t\techo \"SGDBTENFOOTHUMOR=\\\"$SGDBTENFOOTHUMOR\\\"\"\n\t\t\techo \"## Tenfoot $DESC_SGDBEPILEPSY\"\n\t\t\techo \"SGDBTENFOOTEPILEPSY=\\\"$SGDBTENFOOTEPILEPSY\\\"\"\n\t\t\techo \"## $DESC_SGDBDLTOSTEAM\"\n\t\t\techo \"SGDBDLTOSTEAM=\\\"$SGDBDLTOSTEAM\\\"\"\n\t\t\techo \"## $DESC_SGDBHASFILE\"\n\t\t\techo \"SGDBHASFILE=\\\"$SGDBHASFILE\\\"\"\n\t\t\techo \"## $DESC_SGDBAUTODL\"\n\t\t\techo \"SGDBAUTODL=\\\"$SGDBAUTODL\\\"\"\n\t\t\techo \"## $DESC_STORECOMPDATTITLE\"\n\t\t\techo \"STORECOMPDATTITLE=\\\"$STORECOMPDATTITLE\\\"\"\n\t\t\techo \"## $DESC_CUSTCONTY\"\n\t\t\techo \"CUSTCONTY=\\\"$CUSTCONTY\\\"\"\n\t\t\techo \"## $DESC_UPDATECONTY\"\n\t\t\techo \"UPDATECONTY=\\\"$UPDATECONTY\\\"\"\n\t\t\techo \"## $DESC_LOGPLAYTIME\"\n\t\t\techo \"LOGPLAYTIME=\\\"$LOGPLAYTIME\\\"\"\n\t\t\techo \"## $DESC_DPRSCOMPDATA\"\n\t\t\techo \"DPRSCOMPDATA=\\\"$DPRSCOMPDATA\\\"\"\n\t\t\techo \"## $DESC_USEDPRSPROTON\"\n\t\t\techo \"USEDPRSPROTON=\\\"$USEDPRSPROTON\\\"\"\n\t\t\techo \"## $DESC_DPRSUSEVDFSYMLINKS\"\n\t\t\techo \"DPRSUSEVDFSYMLINKS=\\\"$DPRSUSEVDFSYMLINKS\\\"\"\n\t\t\techo \"## $DESC_DPRSPAUTOUP\"\n\t\t\techo \"DPRSPAUTOUP=\\\"$DPRSPAUTOUP\\\"\"\n\t\t\techo \"## $DESC_DEPSAUTOUP\"\n\t\t\techo \"DEPSAUTOUP=\\\"$DEPSAUTOUP\\\"\"\n\t\t\techo \"## $DESC_MO2COMPDATA\"\n\t\t\techo \"MO2COMPDATA=\\\"$MO2COMPDATA\\\"\"\n\t\t\techo \"## $DESC_USEMO2PROTON\"\n\t\t\techo \"USEMO2PROTON=\\\"$USEMO2PROTON\\\"\"\n\t\t\techo \"## $DESC_USEMO2CUSTOMINSTALLER\"\n\t\t\techo \"USEMO2CUSTOMINSTALLER=\\\"$USEMO2CUSTOMINSTALLER\\\"\"\n\t\t\techo \"## $DESC_MO2CUSTOMINSTALLER\"\n\t\t\techo \"MO2CUSTOMINSTALLER=\\\"$MO2CUSTOMINSTALLER\\\"\"\n\t\t\techo \"## $DESC_HMMCOMPDATA\"\n\t\t\techo \"HMMCOMPDATA=\\\"$HMMCOMPDATA\\\"\"\n\t\t\techo \"## $DESC_USEHMMPROTON\"\n\t\t\techo \"USEHMMPROTON=\\\"$USEHMMPROTON\\\"\"\n\t\t\techo \"## $DESC_HMMDLVER\"\n\t\t\techo \"HMMDLVER=\\\"$HMMDLVER\\\"\"\n\t\t\techo \"## $DESC_USETERM\"\n\t\t\techo \"USETERM=\\\"$USETERM\\\"\"\n\t\t\techo \"## $DESC_TERMARGS\"\n\t\t\techo \"TERMARGS=\\\"$TERMARGS\\\"\"\n\n\t\t\t} >> \"$1\"\n\t\t\t#ENDsaveCfgglobal\n\t\tfi\n\t\tupdateEditor \"$1\"\n\t}\n\n\tfunction saveCfgdefault_template {\n\n\t\tsetDefaultCfgValues \"$2\"\n\n\t\tif [ -f \"$1\" ]; then\n\t\t\tupdateConfigFile \"$1\" \"${FUNCNAME[0]}\" \"$3\"\n\t\telse\n\t\t\t#STARTsaveCfgdefault_template\n\t\t\t{\n\t\t\techo \"## config Version: $PROGVERS\"\n\t\t\techo \"##########################\"\n\t\t\techo \"## $DESC_KEEPSTLOPEN\"\n\t\t\techo \"KEEPSTLOPEN=\\\"$KEEPSTLOPEN\\\"\"\n\t\t\techo \"## $DESC_USESLR\"\n\t\t\techo \"USESLR=\\\"$USESLR\\\"\"\n\t\t\techo \"## $DESC_FORCESLR\"\n\t\t\techo \"FORCESLR=\\\"$FORCESLR\\\"\"\n\t\t\techo \"## $DESC_IGNORECOMPATSLR\"\n\t\t\techo \"IGNORECOMPATSLR=\\\"$IGNORECOMPATSLR\\\"\"\n\t\t\techo \"## $DESC_USEREAP\"\n\t\t\techo \"USEREAP=\\\"$USEREAP\\\"\"\n\t\t\techo \"## $DESC_FORCEREAP\"\n\t\t\techo \"FORCEREAP=\\\"$FORCEREAP\\\"\"\n\t\t\techo \"## $DESC_USEPROTON\"\n\t\t\techo \"USEPROTON=\\\"$USEPROTON\\\"\"\n\t\t\techo \"## $DESC_REDIRCOMPDATA\"\n\t\t\techo \"REDIRCOMPDATA=\\\"$REDIRCOMPDATA\\\"\"\n\t\t\techo \"## $DESC_REDIRSTEAMUSER\"\n\t\t\techo \"REDIRSTEAMUSER=\\\"$REDIRSTEAMUSER\\\"\"\n\t\t\techo \"## $DESC_ONLYPROTMAJORREDIRECT\"\n\t\t\techo \"ONLYPROTMAJORREDIRECT=\\\"$ONLYPROTMAJORREDIRECT\\\"\"\n\t\t\techo \"## $DESC_AUTOBUMPGE\"\n\t\t\techo \"AUTOBUMPGE=\\\"$AUTOBUMPGE\\\"\"\n\t\t\techo \"## $DESC_AUTOBUMPPROTON\"\n\t\t\techo \"AUTOBUMPPROTON=\\\"$AUTOBUMPPROTON\\\"\"\n\t\t\techo \"## $DESC_USECUSTOMCMD\"\n\t\t\techo \"USECUSTOMCMD=\\\"$USECUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_CUSTOMCMD\"\n\t\t\techo \"CUSTOMCMD=\\\"$CUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_CUSTOMCMD_ARGS\"\n\t\t\techo \"CUSTOMCMD_ARGS=\\\"$CUSTOMCMD_ARGS\\\"\"\n\t\t\techo \"## $DESC_ONLY_CUSTOMCMD\"\n\t\t\techo \"ONLY_CUSTOMCMD=\\\"$ONLY_CUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_FORK_CUSTOMCMD\"\n\t\t\techo \"FORK_CUSTOMCMD=\\\"$FORK_CUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_EXTPROGS_CUSTOMCMD\"\n\t\t\techo \"EXTPROGS_CUSTOMCMD=\\\"$EXTPROGS_CUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_CUSTOMCMD_USESLR\"\n\t\t\techo \"CUSTOMCMD_USESLR=\\\"$CUSTOMCMD_USESLR\\\"\"\n\t\t\techo \"## $DESC_CUSTOMCMD_FORCEWIN\"\n\t\t\techo \"CUSTOMCMDFORCEWIN=\\\"$CUSTOMCMDFORCEWIN\\\"\"\n\t\t\techo \"## $DESC_WAITFORCUSTOMCMD\"\n\t\t\techo \"WAITFORCUSTOMCMD=\\\"$WAITFORCUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_INJECT_CUSTOMCMD\"\n\t\t\techo \"INJECT_CUSTOMCMD=\\\"$INJECT_CUSTOMCMD\\\"\"\n\t\t\techo \"## $DESC_INJECTWAIT\"\n\t\t\techo \"INJECTWAIT=\\\"$INJECTWAIT\\\"\"\n\t\t\techo \"## $DESC_USEIGCS\"\n\t\t\techo \"USEIGCS=\\\"$USEIGCS\\\"\"\n\t\t\techo \"## $DESC_UUUSEIGCS\"\n\t\t\techo \"UUUSEIGCS=\\\"$UUUSEIGCS\\\"\"\n\t\t\techo \"## $DESC_IGCSWAIT\"\n\t\t\techo \"IGCSWAIT=\\\"$IGCSWAIT\\\"\"\n\t\t\techo \"## $DESC_UUUSEPATCH\"\n\t\t\techo \"UUUSEPATCH=\\\"$UUUSEPATCH\\\"\"\n\t\t\techo \"## $DESC_UUUPATCHWAIT\"\n\t\t\techo \"UUUPATCHWAIT=\\\"$UUUPATCHWAIT\\\"\"\n\t\t\techo \"## $DESC_UUUSEVR\"\n\t\t\techo \"UUUSEVR=\\\"$UUUSEVR\\\"\"\n\t\t\techo \"## $DESC_GAMEARGS\"\n\t\t\techo \"GAMEARGS=\\\"$GAMEARGS\\\"\"\n\t\t\techo \"## $DESC_HARDARGS\"\n\t\t\techo \"HARDARGS=\\\"$HARDARGS\\\"\"\n\t\t\techo \"## $DESC_USEGAMEMODERUN\"\n\t\t\techo \"USEGAMEMODERUN=\\\"$USEGAMEMODERUN\\\"\"\n\t\t\techo \"## $DESC_USEGAMESCOPE\"\n\t\t\techo \"USEGAMESCOPE=\\\"$USEGAMESCOPE\\\"\"\n\t\t\techo \"## $DESC_GAMESCOPE_ARGS\"\n\t\t\techo \"GAMESCOPE_ARGS=\\\"$GAMESCOPE_ARGS\\\"\"\n\t\t\techo \"## $DESC_USEOBSCAP\"\n\t\t\techo \"USEOBSCAP=\\\"$USEOBSCAP\\\"\"\n\t\t\techo \"## $DESC_USEZINK\"\n\t\t\techo \"USEZINK=\\\"$USEZINK\\\"\"\n\t\t\techo \"## $DESC_USEPRIMERUN\"\n\t\t\techo \"USEPRIMERUN=\\\"$USEPRIMERUN\\\"\"\n\t\t\techo \"## $DESC_TOGSTEAMWEBHELPER\"\n\t\t\techo \"TOGSTEAMWEBHELPER=\\\"$TOGSTEAMWEBHELPER\\\"\"\n\t\t\techo \"## $DESC_USEMANGOHUD\"\n\t\t\techo \"USEMANGOHUD=\\\"$USEMANGOHUD\\\"\"\n\t\t\techo \"## $DESC_USEMANGOAPP\"\n\t\t\techo \"USEMANGOAPP=\\\"$USEMANGOAPP\\\"\"\n\t\t\techo \"## $DESC_MAHUBIN\"\n\t\t\techo \"MAHUBIN=\\\"$MAHUBIN\\\"\"\n\t\t\techo \"## $DESC_MAHUARGS\"\n\t\t\techo \"MAHUARGS=\\\"$MAHUARGS\\\"\"\n\t\t\techo \"## $DESC_MAHUDLSYM\"\n\t\t\techo \"MAHUDLSYM=\\\"$MAHUDLSYM\\\"\"\n\t\t\techo \"## $DESC_LDPMAHU\"\n\t\t\techo \"LDPMAHU=\\\"$LDPMAHU\\\"\"\n\t\t\techo \"## $DESC_MAHUVAR\"\n\t\t\techo \"MAHUVAR=\\\"$MAHUVAR\\\"\"\n\t\t\techo \"## $DESC_USEMANGOHUDSTLCFG\"\n\t\t\techo \"USEMANGOHUDSTLCFG=\\\"$USEMANGOHUDSTLCFG\\\"\"\n\t\t\techo \"## $DESC_VULKANPOSTPROCESSOR\"\n\t\t\techo \"VULKANPOSTPROCESSOR=\\\"$VULKANPOSTPROCESSOR\\\"\"\n\t\t\techo \"## $DESC_RUN_NYRNA\"\n\t\t\techo \"RUN_NYRNA=\\\"$RUN_NYRNA\\\"\"\n\t\t\techo \"## $DESC_RUN_REPLAY\"\n\t\t\techo \"RUN_REPLAY=\\\"$RUN_REPLAY\\\"\"\n\t\t\techo \"## $DESC_RUN_X64DBG\"\n\t\t\techo \"RUN_X64DBG=\\\"$RUN_X64DBG\\\"\"\n\t\t\techo \"## $DESC_X64DBG_ATTACHONSTARTUP\"\n\t\t\techo \"X64DBG_ATTACHONSTARTUP=\\\"$X64DBG_ATTACHONSTARTUP\\\"\"\n\t\t\techo \"## $DESC_RUN_GDB\"\n\t\t\techo \"RUN_GDB=\\\"$RUN_GDB\\\"\"\n\t\t\techo \"## $DESC_USE_WDIB\"\n\t\t\techo \"USE_WDIB=\\\"$USE_WDIB\\\"\"\n\t\t\techo \"## $DESC_USEVORTEX\"\n\t\t\techo \"USEVORTEX=\\\"$USEVORTEX\\\"\"\n\t\t\techo \"## $DESC_WAITVORTEX\"\n\t\t\techo \"WAITVORTEX=\\\"$WAITVORTEX\\\"\"\n\t\t\techo \"## $DESC_RUN_VORTEX_WINETRICKS\"\n\t\t\techo \"RUN_VORTEX_WINETRICKS=\\\"$RUN_VORTEX_WINETRICKS\\\"\"\n\t\t\techo \"## $DESC_RUN_VORTEX_WINECFG\"\n\t\t\techo \"RUN_VORTEX_WINECFG=\\\"$RUN_VORTEX_WINECFG\\\"\"\n\t\t\techo \"## $DESC_CHANGE_PULSE_LATENCY\"\n\t\t\techo \"CHANGE_PULSE_LATENCY=\\\"$CHANGE_PULSE_LATENCY\\\"\"\n\t\t\techo \"## $DESC_STL_PULSE_LATENCY_MSEC\"\n\t\t\techo \"STL_PULSE_LATENCY_MSEC=\\\"$STL_PULSE_LATENCY_MSEC\\\"\"\n\t\t\techo \"## $DESC_TOGGLEWINDOWS\"\n\t\t\techo \"TOGGLEWINDOWS=\\\"$TOGGLEWINDOWS\\\"\"\n\t\t\techo \"## $DESC_RUN_WINETRICKS\"\n\t\t\techo \"RUN_WINETRICKS=\\\"$RUN_WINETRICKS\\\"\"\n\t\t\techo \"## $DESC_WINETRICKSPAKS\"\n\t\t\techo \"WINETRICKSPAKS=\\\"$WINETRICKSPAKS\\\"\"\n\t\t\techo \"## $DESC_RUN_WINECFG\"\n\t\t\techo \"RUN_WINECFG=\\\"$RUN_WINECFG\\\"\"\n\t\t\techo \"## $DESC_USEWINE\"\n\t\t\techo \"USEWINE=\\\"$USEWINE\\\"\"\n\t\t\techo \"## $DESC_USEWICO\"\n\t\t\techo \"USEWICO=\\\"$USEWICO\\\"\"\n\t\t\techo \"## $DESC_WINEVERSION\"\n\t\t\techo \"WINEVERSION=\\\"$WINEVERSION\\\"\"\n\t\t\techo \"## $DESC_WINEDEFAULT\"\n\t\t\techo \"WINEDEFAULT=\\\"$WINEDEFAULT\\\"\"\n\t\t\techo \"## $DESC_VIRTUALDESKTOP\"\n\t\t\techo \"VIRTUALDESKTOP=\\\"$VIRTUALDESKTOP\\\"\"\n\t\t\techo \"## $DESC_VDRES\"\n\t\t\techo \"VDRES=\\\"$VDRES\\\"\"\n\t\t\techo \"## $DESC_USEBOXTRON\"\n\t\t\techo \"USEBOXTRON=\\\"$USEBOXTRON\\\"\"\n\t\t\techo \"## $DESC_USEROBERTA\"\n\t\t\techo \"USEROBERTA=\\\"$USEROBERTA\\\"\"\n\t\t\techo \"## $DESC_USELUXTORPEDA\"\n\t\t\techo \"USELUXTORPEDA=\\\"0\\\"\"\n\t\t\techo \"## $DESC_REGEDIT\"\n\t\t\techo \"REGEDIT=\\\"$REGEDIT\\\"\"\n\t\t\techo \"## $DESC_USEGEOELF\"\n\t\t\techo \"USEGEOELF=\\\"$USEGEOELF\\\"\"\n\t\t\techo \"## $DESC_AUTOGEOELF\"\n\t\t\techo \"AUTOGEOELF=\\\"$AUTOGEOELF\\\"\"\n\t\t\techo \"## $DESC_RESHADE_DEPTH3D\"\n\t\t\techo \"RESHADE_DEPTH3D=\\\"$RESHADE_DEPTH3D\\\"\"\n\t\t\techo \"## $DESC_USERESHADE\"\n\t\t\techo \"USERESHADE=\\\"$USERESHADE\\\"\"\n\t\t\techo \"## $DESC_CUSTOMCMDRESHADE\"\n\t\t\techo \"CUSTOMCMDRESHADE=\\\"$CUSTOMCMDRESHADE\\\"\"\n\t\t\techo \"## $DESC_RESHADEUPDATE\"\n\t\t\techo \"RESHADEUPDATE=\\\"$RESHADEUPDATE\\\"\"\n\t\t\techo \"## $DESC_CREATERESHINI\"\n\t\t\techo \"CREATERESHINI=\\\"$CREATERESHINI\\\"\"\n\t\t\techo \"## $DESC_RESHADEDLLNAME\"\n\t\t\techo \"RESHADEDLLNAME=\\\"$RESHADEDLLNAME\\\"\"\n\t\t\techo \"## $DESC_RESHADEOVERRIDETOGGLE\"\n\t\t\techo \"RSOVRD=\\\"$RSOVRD\\\"\"\n\t\t\techo \"## $DESC_RESHADEOVERRIDEVERSION\"\n\t\t\techo \"RSOVRVERS=\\\"$RSOVRVERS\\\"\"\n\t\t\techo \"## $DESC_CHOOSESHADERS\"\n\t\t\techo \"CHOOSESHADERS=\\\"$CHOOSESHADERS\\\"\"\n\t\t\techo \"## $DESC_ALTEXEPATH\"\n\t\t\techo \"ALTEXEPATH=\\\"$ALTEXEPATH\\\"\"\n\t\t\techo \"## $DESC_ARCHALTEXE\"\n\t\t\techo \"ARCHALTEXE=\\\"$ARCHALTEXE\\\"\"\n\t\t\techo \"## $DESC_USEOPENVRFSR\"\n\t\t\techo \"USEOPENVRFSR=\\\"$USEOPENVRFSR\\\"\"\n\t\t\techo \"## $DESC_RUNSBSVR\"\n\t\t\techo \"RUNSBSVR=\\\"$RUNSBSVR\\\"\"\n\t\t\techo \"## $DESC_VRVIDEOPLAYERARGS\"\n\t\t\techo \"VRVIDEOPLAYERARGS=\\\"$VRVIDEOPLAYERARGS\\\"\"\n\t\t\techo \"## $DESC_SBSZOOM\"\n\t\t\techo \"SBSZOOM=\\\"$SBSZOOM\\\"\"\n\t\t\techo \"## $DESC_SBSVRGEOELF\"\n\t\t\techo \"SBSVRGEOELF=\\\"$SBSVRGEOELF\\\"\"\n\t\t\techo \"## $DESC_SBSVRRS\"\n\t\t\techo \"SBSVRRS=\\\"$SBSVRRS\\\"\"\n\t\t\techo \"## $DESC_SBSRS\"\n\t\t\techo \"SBSRS=\\\"$SBSRS\\\"\"\n\t\t\techo \"## $DESC_MINVRWINH\"\n\t\t\techo \"MINVRWINH=\\\"$MINVRWINH\\\"\"\n\t\t\techo \"## $DESC_WAITFORTHISPID\"\n\t\t\techo \"WAITFORTHISPID=\\\"$WAITFORTHISPID\\\"\"\n\t\t\techo \"## $DESC_WAITEDITOR\"\n\t\t\techo \"WAITEDITOR=\\\"$WAITEDITOR\\\"\"\n\t\t\techo \"## $DESC_STEAMAPPIDFILE\"\n\t\t\techo \"STEAMAPPIDFILE=\\\"$STEAMAPPIDFILE\\\"\"\n\t\t\techo \"## $DESC_CHECKCOLLECTIONS\"\n\t\t\techo \"CHECKCOLLECTIONS=\\\"$CHECKCOLLECTIONS\\\"\"\n\t\t\techo \"## $DESC_BACKUPSTEAMUSER\"\n\t\t\techo \"BACKUPSTEAMUSER=\\\"$BACKUPSTEAMUSER\\\"\"\n\t\t\techo \"## $DESC_RESTORESTEAMUSER\"\n\t\t\techo \"RESTORESTEAMUSER=\\\"$RESTORESTEAMUSER\\\"\"\n\t\t\techo \"## $DESC_USESUSYM\"\n\t\t\techo \"USESUSYM=\\\"$USESUSYM\\\"\"\n\t\t\techo \"## $DESC_USEGLOBSUSYM\"\n\t\t\techo \"USEGLOBSUSYM=\\\"$USEGLOBSUSYM\\\"\"\n\t\t\techo \"## $DESC_USE_STLDXVKCFG\"\n\t\t\techo \"USE_STLDXVKCFG=\\\"$USE_STLDXVKCFG\\\"\"\n\t\t\techo \"## $(strFix \"$DESC_DXVKVARS\" \"$DXVKURL\")\"\n\t\t\techo \"DXVK_HUD=\\\"$DXVK_HUD\\\"\"\n\t\t\techo \"## $DESC_DXVK_LOG_LEVEL\"\n\t\t\techo \"DXVK_LOG_LEVEL=\\\"$DXVK_LOG_LEVEL\\\"\"\n\t\t\techo \"## $DESC_DXVK_LOG_PATH\"\n\t\t\techo \"DXVK_LOG_PATH=\\\"$DXVK_LOG_PATH\\\"\"\n\t\t\techo \"## $DESC_DXVK_SCALE\"\n\t\t\techo \"DXVK_SCALE=\\\"$DXVK_SCALE\\\"\"\n\t\t\techo \"## $DESC_DXVK_FPSLIMIT\"\n\t\t\techo \"DXVK_FPSLIMIT=\\\"$DXVK_FPSLIMIT\\\"\"\n\t\t\techo \"## $DESC_DXVK_ASYNC\"\n\t\t\techo \"DXVK_ASYNC=\\\"$DXVK_ASYNC\\\"\"\n\t\t\techo \"## $DESC_DXVK_HDR\"\n\t\t\techo \"DXVK_HDR=\\\"$DXVK_HDR\\\"\"\n\t\t\techo \"## $DESC_STRACERUN\"\n\t\t\techo \"STRACERUN=\\\"$STRACERUN\\\"\"\n\t\t\techo \"## $DESC_STRACEOPTS\"\n\t\t\techo \"STRACEOPTS=\\\"$STRACEOPTS\\\"\"\n\t\t\techo \"## $DESC_USENETMON\"\n\t\t\techo \"USENETMON=\\\"$USENETMON\\\"\"\n\t\t\techo \"## $DESC_BLOCKINTERNET\"\n\t\t\techo \"BLOCKINTERNET=\\\"$BLOCKINTERNET\\\"\"\n\t\t\techo \"## $DESC_PROTON_LOG\"\n\t\t\techo \"PROTON_LOG=\\\"$PROTON_LOG\\\"\"\n\t\t\techo \"## $DESC_PROTON_LOG_DIR\"\n\t\t\techo \"PROTON_LOG_DIR=\\\"$PROTON_LOG_DIR\\\"\"\n\t\t\techo \"## $DESC_USEWINEDEBUGPROTON\"\n\t\t\techo \"USEWINEDEBUGPROTON=\\\"$USEWINEDEBUGPROTON\\\"\"\n\t\t\techo \"## $DESC_PROTON_DUMP_DEBUG_COMMANDS\"\n\t\t\techo \"PROTON_DUMP_DEBUG_COMMANDS=\\\"$PROTON_DUMP_DEBUG_COMMANDS\\\"\"\n\t\t\techo \"## $DESC_PROTON_DEBUG_DIR\"\n\t\t\techo \"PROTON_DEBUG_DIR=\\\"$PROTON_DEBUG_DIR\\\"\"\n\t\t\techo \"## $DESC_PROTON_USE_WINED3D\"\n\t\t\techo \"PROTON_USE_WINED3D=\\\"$PROTON_USE_WINED3D\\\"\"\n\t\t\techo \"## $DESC_PROTON_NO_D3D11\"\n\t\t\techo \"PROTON_NO_D3D11=\\\"$PROTON_NO_D3D11\\\"\"\n\t\t\techo \"## $DESC_PROTON_NO_D3D10\"\n\t\t\techo \"PROTON_NO_D3D10=\\\"$PROTON_NO_D3D10\\\"\"\n\t\t\techo \"## $DESC_PROTON_NO_ESYNC\"\n\t\t\techo \"PROTON_NO_ESYNC=\\\"$PROTON_NO_ESYNC\\\"\"\n\t\t\techo \"## $DESC_PROTON_NO_FSYNC\"\n\t\t\techo \"PROTON_NO_FSYNC=\\\"$PROTON_NO_FSYNC\\\"\"\n\t\t\techo \"## $DESC_ENABLE_WINESYNC\"\n\t\t\techo \"ENABLE_WINESYNC=\\\"$ENABLE_WINESYNC\\\"\"\n\t\t\techo \"## $DESC_PROTON_ENABLE_NVAPI\"\n\t\t\techo \"PROTON_ENABLE_NVAPI=\\\"$PROTON_ENABLE_NVAPI\\\"\"\n\t\t\techo \"## $DESC_PROTON_HIDE_NVIDIA_GPU\"\n\t\t\techo \"PROTON_HIDE_NVIDIA_GPU=\\\"$PROTON_HIDE_NVIDIA_GPU\\\"\"\n\t\t\techo \"## $DESC_USEDLSS\"\n\t\t\techo \"USEDLSS=\\\"$USEDLSS\\\"\"\n\t\t\techo \"## $DESC_USERAYTRACING\"\n\t\t\techo \"USERAYTRACING=\\\"$USERAYTRACING\\\"\"\n\t\t\techo \"## $DESC_PROTON_FORCE_LARGE_ADDRESS_AWARE\"\n\t\t\techo \"PROTON_FORCE_LARGE_ADDRESS_AWARE=\\\"$PROTON_FORCE_LARGE_ADDRESS_AWARE\\\"\"\n\t\t\techo \"## $DESC_WINE_FULLSCREEN_INTEGER_SCALING\"\n\t\t\techo \"WINE_FULLSCREEN_INTEGER_SCALING=\\\"$WINE_FULLSCREEN_INTEGER_SCALING\\\"\"\n\t\t\techo \"## $DESC_WINE_FULLSCREEN_FSR\"\n\t\t\techo \"WINE_FULLSCREEN_FSR=\\\"$WINE_FULLSCREEN_FSR\\\"\"\n\t\t\techo \"## $DESC_WINE_FULLSCREEN_FSR_STRENGTH\"\n\t\t\techo \"WINE_FULLSCREEN_FSR_STRENGTH=\\\"$WINE_FULLSCREEN_FSR_STRENGTH\\\"\"\n\t\t\techo \"## $DESC_USEPERGAMEWINEDPI\"\n\t\t\techo \"USEPERGAMEWINEDPI=\\\"$USEPERGAMEWINEDPI\\\"\"\n\t\t\techo \"## $DESC_PERGAMEWINEDPI\"\n\t\t\techo \"PERGAMEWINEDPI=\\\"$PERGAMEWINEDPI\\\"\"\n\t\t\techo \"## $DESC_CLEANPROTONTEMP\"\n\t\t\techo \"CLEANPROTONTEMP=\\\"$CLEANPROTONTEMP\\\"\"\n\t\t\techo \"## $DESC_STLWINEDEBUG\"\n\t\t\techo \"STLWINEDEBUG=\\\"$STLWINEDEBUG\\\"\"\n\t\t\techo \"## $DESC_STLWINEDLLOVERRIDES\"\n\t\t\techo \"STLWINEDLLOVERRIDES=\\\"$STLWINEDLLOVERRIDES\\\"\"\n\t\t\techo \"## $DESC_WINE_LOG_DIR\"\n\t\t\techo \"WINE_LOG_DIR=\\\"$WINE_LOG_DIR\\\"\"\n\t\t\techo \"## $DESC_USERSTART\"\n\t\t\techo \"USERSTART=\\\"$USERSTART\\\"\"\n\t\t\techo \"## $DESC_USERSTOP\"\n\t\t\techo \"USERSTOP=\\\"$USERSTOP\\\"\"\n\t\t\techo \"## $DESC_AUTOCONTY\"\n\t\t\techo \"AUTOCONTY=\\\"$AUTOCONTY\\\"\"\n\t\t\techo \"## $DESC_USECONTY\"\n\t\t\techo \"USECONTY=\\\"$USECONTY\\\"\"\n\t\t\techo \"## $DESC_CRASHGUESS\"\n\t\t\techo \"CRASHGUESS=\\\"$CRASHGUESS\\\"\"\n\t\t\techo \"## $DESC_ONLYWICO\"\n\t\t\techo \"ONLYWICO=\\\"$ONLYWICO\\\"\"\n\t\t\techo \"## $DESC_GAMESCREENRES\"\n\t\t\techo \"GAMESCREENRES=\\\"$GAMESCREENRES\\\"\"\n\t\t\techo \"## Default Help URL\"\n\t\t\techo \"HELPURL=\\\"$HELPURL\\\"\"\n\t\t\techo \"## Desktop Icon Mode\"\n\t\t\techo \"CREATEDESKTOPICON=\\\"$CREATEDESKTOPICON\\\"\"\n\t\t\techo \"## $DESC_FIXSYMLINKS\"\n\t\t\techo \"FIXSYMLINKS=\\\"$FIXSYMLINKS\\\"\"\n\t\t\techo \"## $DESC_UNSYMLINK\"\n\t\t\techo \"UNSYMLINK=\\\"$UNSYMLINK\\\"\"\n\t\t\techo \"## $DESC_DELPFX\"\n\t\t\techo \"DELPFX=\\\"$DELPFX\\\"\"\n\t\t\techo \"## $DESC_RUN_DEPS\"\n\t\t\techo \"RUN_DEPS=\\\"$RUN_DEPS\\\"\"\n\t\t\techo \"## $DESC_SORTGARGS\"\n\t\t\techo \"SORTGARGS=\\\"$SORTGARGS\\\"\"\n\t\t\techo \"## $DESC_WAITMO2\"\n\t\t\techo \"WAITMO2=\\\"$WAITMO2\\\"\"\n\t\t\techo \"## $DESC_MO2SILENTMODEEXEOVERRIDE\"\n\t\t\techo \"MO2SILENTMODEDESC_MO2SILENTMODEEXEOVERRIDE=\\\"$MO2SILENTMODEDESC_MO2SILENTMODEEXEOVERRIDE\\\"\"\n\t\t\techo \"## $DESC_MO2MODE\"\n\t\t\techo \"MO2MODE=\\\"$MO2MODE\\\"\"\n\t\t\techo \"## $DESC_USESPECIALK\"\n\t\t\techo \"USESPECIALK=\\\"$USESPECIALK\\\"\"\n\t\t\techo \"## $DESC_SPEKDLLNAME\"\n\t\t\techo \"SPEKDLLNAME=\\\"$SPEKDLLNAME\\\"\"\n\t\t\techo \"## $DESC_USERESHSPEKPLUGIN\"\n\t\t\techo \"USERESHSPEKPLUGIN=\\\"$USERESHSPEKPLUGIN\\\"\"\n\t\t\techo \"## $DESC_USESPEKD3D47\"\n\t\t\techo \"USESPEKD3D47=\\\"$USESPEKD3D47\\\"\"\n\t\t\techo \"## $DESC_SDLUSEWAYLAND\"\n\t\t\techo \"SDLUSEWAYLAND=\\\"$SDLUSEWAYLAND\\\"\"\n\t\t\techo \"## $DESC_STLRAD_PFTST\"\n\t\t\techo \"STLRAD_PFTST=\\\"$STLRAD_PFTST\\\"\"\n\t\t\techo \"## $DESC_SPEKVERS\"\n\t\t\techo \"SPEKVERS=\\\"$SPEKVERS\\\"\"\n\t\t\techo \"## $DESC_AUTOSPEK\"\n\t\t\techo \"AUTOSPEK=\\\"$AUTOSPEK\\\"\"\n\t\t\techo \"## $DESC_USEFWS\"\n\t\t\techo \"USEFWS=\\\"$USEFWS\\\"\"\n\t\t\techo \"## $DESC_USEPEV_PELDD\"\n\t\t\techo \"USEPEV_PELDD=\\\"$USEPEV_PELDD\\\"\"\n\t\t\techo \"## $DESC_USEPEV_PEPACK\"\n\t\t\techo \"USEPEV_PEPACK=\\\"$USEPEV_PEPACK\\\"\"\n\t\t\techo \"## $DESC_USEPEV_PERES\"\n\t\t\techo \"USEPEV_PERES=\\\"$USEPEV_PERES\\\"\"\n\t\t\techo \"## $DESC_USEPEV_PESCAN\"\n\t\t\techo \"USEPEV_PESCAN=\\\"$USEPEV_PESCAN\\\"\"\n\t\t\techo \"## DESC_USEPEV_PESEC\"\n\t\t\techo \"USEPEV_PESEC=\\\"$USEPEV_PESEC\\\"\"\n\t\t\techo \"## $DESC_USEPEV_PESTR\"\n\t\t\techo \"USEPEV_PESTR=\\\"$USEPEV_PESTR\\\"\"\n\t\t\techo \"## $DESC_USEPEV_READPE\"\n\t\t\techo \"USEPEV_READPE=\\\"$USEPEV_READPE\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_CONFIG\"\n\t\t\techo \"STL_VKD3D_CONFIG=\\\"$STL_VKD3D_CONFIG\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_DEBUG\"\n\t\t\techo \"STL_VKD3D_DEBUG=\\\"$STL_VKD3D_DEBUG\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_SHADER_DEBUG\"\n\t\t\techo \"STL_VKD3D_SHADER_DEBUG=\\\"$STL_VKD3D_SHADER_DEBUG\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_LOG_FILE\"\n\t\t\techo \"STL_VKD3D_LOG_FILE=\\\"$STL_VKD3D_LOG_FILE\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_VULKAN_DEVICE\"\n\t\t\techo \"STL_VKD3D_VULKAN_DEVICE=\\\"$STL_VKD3D_VULKAN_DEVICE\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_FILTER_DEVICE_NAME\"\n\t\t\techo \"STL_VKD3D_FILTER_DEVICE_NAME=\\\"$STL_VKD3D_FILTER_DEVICE_NAME\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_DISABLE_EXTENSIONS\"\n\t\t\techo \"STL_VKD3D_DISABLE_EXTENSIONS=\\\"$STL_VKD3D_DISABLE_EXTENSIONS\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_TEST_DEBUG\"\n\t\t\techo \"STL_VKD3D_TEST_DEBUG=\\\"$STL_VKD3D_TEST_DEBUG\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_TEST_FILTER\"\n\t\t\techo \"STL_VKD3D_TEST_FILTER=\\\"$STL_VKD3D_TEST_FILTER\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_TEST_EXCLUDE\"\n\t\t\techo \"STL_VKD3D_TEST_EXCLUDE=\\\"$STL_VKD3D_TEST_EXCLUDE\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_TEST_PLATFORM\"\n\t\t\techo \"STL_VKD3D_TEST_PLATFORM=\\\"$STL_VKD3D_TEST_PLATFORM\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_TEST_BUG\"\n\t\t\techo \"STL_VKD3D_TEST_BUG=\\\"$STL_VKD3D_TEST_BUG\\\"\"\n\t\t\techo \"## $DESC_STL_VKD3D_PROFILE_PATH\"\n\t\t\techo \"STL_VKD3D_PROFILE_PATH=\\\"$STL_VKD3D_PROFILE_PATH\\\"\"\n\t\t\t} >> \"$1\"\n\n\t\t\t#ENDsaveCfgdefault_template\n\t\tfi\n\t}\n\n\tSCFG=\"$(basename \"${1//.conf/}\")\"\n\t\"${FUNCNAME[0]}$SCFG\" \"$1\" \"$SCFG\" \"$2\"\n\n\tif grep \"$STLCFGDIR\" \"$1\" >/dev/null ; then\n\t\twritelog \"UPDATE\" \"${FUNCNAME[0]} - Replacing '$STLCFGDIR' with 'STLCFGDIR' in '$1'\"\n\t\tsed \"s:$STLCFGDIR:STLCFGDIR:g\" -i \"$1\"\n\tfi\n}\n\nfunction notiShow {\n\tif [ \"$ONSTEAMDECK\" -eq 1 ] && [ \"$FIXGAMESCOPE\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Skipping notifier on SteamDeck Game Mode\"\n\t\tUSENOTIFIER=0 # might avoid a 2nd try during this session\n\telif [ \"$STLQUIET\" -eq 1 ]; then\n\t\tUSENOTIFIER=0\n\telse\n\t\tif [ -n \"$2\" ] && [ \"$2\" == \"X\" ]; then\n\t\t\tif [ -z \"$NOTY\" ]; then\n\t\t\t\tNOTY=\"$(command -v \"notify-send\")\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$USENOTIFIER\" ] && [ \"$USENOTIFIER\" -eq 1 ] && { [ -z \"$2\" ] || { [ -n \"$2\" ] && [ \"$2\" != \"S\" ]; };} || { [ -n \"$2\" ] && [ \"$2\" == \"X\" ]; }; then\n\t\t\tif [ -x \"$(command -v \"$NOTY\")\" ]; then\n\t\t\t\tif [ -z \"${NOTYARGSARR[0]}\" ]; then\n\t\t\t\t\tmapfile -d \" \" -t -O \"${#NOTYARGSARR[@]}\" NOTYARGSARR < <(printf '%s' \"$NOTYARGS\")\n\t\t\t\tfi\n\t\t\t\t\"$NOTY\" \"${NOTYARGSARR[@]}\" \"$1\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Warning - '$NOTY' not found - disabling notifier\"\n\t\t\t\tUSENOTIFIER=0\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$2\" ] && [ \"$2\" == \"S\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Message '$1' should go to StatusWindow\"\n\t\t\techo \"$1\"\n\t\tfi\n\tfi\n}\n\nfunction strFix {\n\tSTRIN=\"$1\"\n\tif [ -z \"$2\" ]; then\n\t\techo \"$STRIN\"\n\telse\n\t\tSTRIN2=\"${STRIN//XXX/$2}\"\n\t\tSTRIN3=\"${STRIN2//YYY/$3}\"\n\t\tSTRIN4=\"${STRIN3//ZZZ/$4}\"\n\t\techo \"${STRIN4//QQQ/$5}\"\n\tfi\n}\n\nfunction getProtPathFromCSV {\n\tdelEmptyFile \"$PROTONCSV\"\n\tif [ ! -f \"$PROTONCSV\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating '$PROTONCSV'\"\n\t\tgetAvailableProtonVersions \"up\" X\n\tfi\n\n\tif [ -f \"$PROTONCSV\" ]; then\n\t\tgrep \"^$1\" \"$PROTONCSV\" | sort -nr | head -n1 | cut -d ';' -f2\n\tfi\n}\n\nfunction setRunWineServer {\n\tif [ \"$ISGAME\" -eq 2 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Initiated from '$1'\"\n\n\t\tif [ -n \"$USEPROTON\" ] && [ ! -f \"$(getProtPathFromCSV \"$USEPROTON\")\" ] && [ \"$HAVEINPROTON\" -eq 0 ]; then\n\t\t\tfixProtonVersionMismatch \"USEPROTON\" \"$STLGAMECFG\"\n\t\tfi\n\n\t\tif [ -z \"$RUNPROTON\" ] && [ \"$HAVEINPROTON\" -eq 1 ]; then\n\t\t\tRUNPROTON=\"${INPROTCMD[*]}\"\n\t\tfi\n\n\t\tif [ -z \"$RUNPROTON\" ]; then\n\t\t\tsetRunProtonFromUseProton\n\t\tfi\n\n\t\tCHECKWINED=\"$(dirname \"$RUNPROTON\")/$DBW\"\n\t\tCHECKWINEF=\"$(dirname \"$RUNPROTON\")/$FBW\"\n\t\tif [ -f \"$CHECKWINED\" ]; then\n\t\t\tRUNWINE=\"$CHECKWINED\"\n\t\t\tRUNWINESERVER=\"${RUNWINE}server\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set the wine binary for proton in path '$RUNPROTON'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - to '$RUNWINE'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - and wineserver to '$RUNWINESERVER'\"\n\t\telif [ -f \"$CHECKWINEF\" ]; then\n\t\t\tRUNWINE=\"$CHECKWINEF\"\n\t\t\tRUNWINESERVER=\"${RUNWINE}server\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Set the wine binary for proton in path '$RUNPROTON'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - to '$RUNWINE'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - and wineserver to '$RUNWINESERVER'\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Couldn't find the wine binary for the proton in path '$RUNPROTON' - falling back to 'wine' for plain RUNWINE and 'wineserver' for RUNWINESERVER\"\n\t\tfi\n\tfi\n}\n\nfunction setNewProtVars {\n\tif [ \"$ISGAME\" -eq 2 ] && [ \"$USEWINE\" -eq 0 ]; then\n\t\tif [ \"$HAVEINPROTON\" -eq 1 ]; then\n\t\t\tif [ -z \"$RUNWINESERVER\" ]; then\n\t\t\t\tsetRunWineServer \"${FUNCNAME[0]}\"\n\t\t\tfi\n\t\telse\n\t\t\t# arg1 is absolute proton path\n\t\t\tif [ \"$HAVEINPROTON\" -eq 0 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Setting new Proton Variables based on '$1'\"\n\t\t\t\tRUNPROTON=\"$1\"\n\t\t\t\tCHECKWINED=\"$(dirname \"$RUNPROTON\")/$DBW\"\n\t\t\t\tCHECKWINEF=\"$(dirname \"$RUNPROTON\")/$FBW\"\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Continuing with RUNPROTON='$RUNPROTON'\"\n\n\t\t\t\tPDTGZ=\"proton_dist.tar.gz\"\n\t\t\t\tif [ ! -f \"$CHECKWINED\" ] && [ ! -f \"$CHECKWINEF\" ] && [ -f \"$(dirname \"$RUNPROTON\")/$PDTGZ\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Wine binary not found, but a proton archive '$PDTGZ' - extracting now\"\n\t\t\t\t\tmkProjDir \"$(dirname \"$RUNPROTON\")/dist\"\n\t\t\t\t\t\"$TAR\" xf \"$(dirname \"$RUNPROTON\")/$PDTGZ\" -C \"$(dirname \"$RUNPROTON\")/dist\" 2>/dev/null\n\t\t\t\tfi\n\n\t\t\t\tPROTONVERSION=\"$(setProtonPathVersion \"$RUNPROTON\")\"\n\t\t\t\tUSEPROTON=\"$PROTONVERSION\"\n\n\t\t\t\tsetRunWineServer \"${FUNCNAME[0]}\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Using Steam Proton '$FIRSTUSEPROTON' instead of ${PROGNAME,,} Proton '$USEPROTON', because '$PROGCMD' was used as '$SLO'\"\n\t\t\t\tnotiShow \"$(strFix \"$NOTY_SETNEWPROTVARS\" \"$FIRSTUSEPROTON\")\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ \"$USEWINEDEBUGPROTON\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$STLWINEDEBUG' as Proton 'WINEDEBUG' parameters, because 'USEWINEDEBUGPROTON' is enabled\"\n\t\t\texport WINEDEBUG=\"$STLWINEDEBUG\"\n\t\tfi\n\n\t\tif [ -n \"$STLWINEDLLOVERRIDES\" ] && [ \"$STLWINEDLLOVERRIDES\" != \"$NON\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$STLWINEDLLOVERRIDES' as 'WINEDLLOVERRIDES' parameter\"\n\t\t\texport WINEDLLOVERRIDES=\"$WINEDLLOVERRIDES;$STLWINEDLLOVERRIDES\"\n\t\tfi\n\tfi\n}\n\n# in case you wonder NOP='Newest Official Proton'\nfunction getNOP {\n\tcreateProtonList\n\tNEWESTPROTRAW=\"$(printProtonArr | grep \"^proton-[0-9].\" | sort -nr | head -n1)\"\n\n\tif [ \"$1\" == \"p\" ]; then\n\t\tcut -d ';' -f2 <<< \"$NEWESTPROTRAW\"\n\telif [ \"$1\" == \"v\" ]; then\n\t\tcut -d ';' -f1 <<< \"$NEWESTPROTRAW\"\n\tfi\n}\n\nfunction setNOP {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Selecting newest official Proton available\"\n\tNOPPATH=\"$(getNOP \"p\")\"\n\tif [ -n \"$NOPPATH\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$NOPPATH'\"\n\t\tNEWPROPA=\"$( dirname \"$NOPPATH\" )\"\n\t\tNEWPROPA=\"${NEWPROPA%*/}\"\n\t\tNEWPROPA=\"${NEWPROPA##*/}\"\n\t\tnotiShow \"$(strFix \"$NOTY_WANTPROTON2\" \"$NEWPROPA\" \"$USEPROTON\")\"\n\n\t\tsetNewProtVars \"$NOPPATH\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Haven't found anything\"\n\tfi\n}\n\nfunction needNewProton {\n\tif [ \"$HAVEINPROTON\" -eq 0 ]; then\n\t\tgetAvailableProtonVersions \"up\"\n\t\texport CURWIKI=\"$PPW/Proton-Versions\"\n\t\tTITLE=\"${PROGNAME}-NeedNewProtonVersion\"\n\t\tpollWinRes \"$TITLE\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No Proton Version was found - opening a requester to choose from one\"\n\t\tcreateProtonList\n\n\t\tPICKPROTON=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --center \"$WINDECO\" --form --scroll --separator=\"\\n\" --quoted-output \\\n\t\t--text=\"$(spanFont \"$GUI_NEEDNEWPROTON\" \"H\")\" \\\n\t\t--field=\"$GUI_NEEDNEWPROTON2\":CB \"$(cleanDropDown \"${USEPROTON/#-/ -}\" \"$PROTYADLIST\")\" \\\n\t\t--title=\"$TITLE\" \"$GEOM\")\"\n\n\t\tif [ -n \"$PICKPROTON\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected Proton Version $PICKPROTON\"\n\t\t\tsetNewProtVars \"$(getProtPathFromCSV \"$PICKPROTON\")\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No Proton Version was selected - try again\"\n\t\t\t\"${FUNCNAME[0]}\"\n\t\tfi\n\tfi\n}\n\nfunction dlCustomProton {\n\tif [[ -n \"$CUPROTOCOMPAT\" && \"$CUPROTOCOMPAT\" -eq 1 ]]; then\n\t\tCUPROEXTDIR=\"$STEAMCOMPATOOLS\"\n\telse\n\t\tCUPROEXTDIR=\"$CUSTPROTEXTDIR\"\n\tfi\n\n\tCPURL=\"${1//\\\"/}\"\n\tCPURLFILE=\"${CPURL##*/}\"\n\tDSTDL=\"$CUSTPROTDLDIR/$CPURLFILE\"\n\tif [ ! -f \"$DSTDL\" ]; then\n\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$CPURL\")\" \"S\"\n\t\tDLCHK=\"X\"\n\t\tINCHK=\"$NON\"\n\t\t# only \"-STL\" and \"GE\" proton have a sha512sum\n\t\tif grep -q \"\\-GE\" <<< \"$CPURLFILE\" || grep -q \"GE-\" <<< \"$CPURLFILE\" || grep -q \"\\-STL\" <<< \"$CPURLFILE\"; then\n\t\t\tDLCHK=\"sha512sum\"\n\t\t\tINCHK=\"$(\"$WGET\" -q \"${CPURL%%.tar*}.${DLCHK}\" -O - 2> >(grep -v \"SSL_INIT\") | cut -d ' ' -f1)\"\n\t\tfi\n\t\tdlCheck \"$CPURL\" \"$DSTDL\" \"$DLCHK\" \"Downloading '$CPURL' to '$CUSTPROTDLDIR'\" \"$INCHK\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - File '$DSTDL' already exists - nothing to download\"\n\t\tif [ -z \"$2\" ]; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON4\" \"$CPURLFILE\")\"\n\t\tfi\n\tfi\n\n\tPROTNAMERAW=\"${CPURLFILE%%.tar*}\"\n\tPROTNAME=\"${PROTNAMERAW//.zip/}\"\n\tif [ -d \"$CUPROEXTDIR/$PROTNAME\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - directory '$CUPROEXTDIR/$PROTNAME' already exists - nothing to extract\"\n\telse\n\t\t# only \"-STL\" and \"GE\" proton have a sha512sum\n\t\tif grep -q \"\\-GE\" <<< \"$CPURLFILE\" || grep -q \"GE-\" <<< \"$CPURLFILE\" || grep -q \"\\-STL\" <<< \"$CPURLFILE\"; then\n\t\t\tDLCHK=\"sha512sum\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - checking if the checksum of the already downloaded file is correct '${CPURL%%.tar*}.${DLCHK}'\"\n\t\t\tINCHK=\"$(\"$WGET\" -q \"${CPURL%%.tar*}.${DLCHK}\" -O - 2> >(grep -v \"SSL_INIT\") | cut -d ' ' -f1)\"\n\t\t\tdlCheck \"$DLCHK\" \"$DSTDL\" \"C\" \"$INCHK\"\n\t\tfi\n\n\t\tif grep -q \"\\.tar\\.\" <<< \"$DSTDL\"; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON5\" \"$CPURLFILE\")\" \"S\"\n\n\t\t\tPROTRELPATH=\"$(\"$TAR\" -tf \"$DSTDL\" 2>/dev/null | grep \"proton$\" 2>/dev/null )\"\n\t\t\tif [ -n \"$PROTRELPATH\" ]; then\n\t\t\t\tif grep -q \"^proton$\" <<< \"$PROTRELPATH\"; then\n\t\t\t\t\tEXTDEST=\"$CUPROEXTDIR/$PROTNAME\"\n\t\t\t\t\tPROTFULLPATH=\"$EXTDEST/$PROTRELPATH\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Archive is a tarbomb - creating parent directory '$EXTDEST' as extract dest dir\"\n\t\t\t\t\tmkProjDir \"$EXTDEST\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Archive contains proton in subdirectory '$PROTRELPATH'\"\n\t\t\t\t\tPROTFULLPATH=\"$CUPROEXTDIR/$PROTRELPATH\"\n\t\t\t\t\tEXTDEST=\"$CUPROEXTDIR\"\n\t\t\t\tfi\n\n\t\t\t\tif [ -f \"$PROTFULLPATH\" ]; then\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - The destination path '$PROTFULLPATH' already exists - looks like '$DSTDL' was already extracted before\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON3\" \"$CPURL\")\" \"S\"\n\t\t\t\t\t\"$TAR\" xf \"$DSTDL\" -C \"$EXTDEST\" 2>/dev/null\n\t\t\t\t\tgetAvailableProtonVersions \"up\"\n\t\t\t\t\ttouch \"$PROTBUMPTEMP\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON6\" \"$DSTDL\")\" \"S\"\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Archive doesn't seem to contain a 'proton' file\"\n\t\t\tfi\n\t\telif grep -q \"\\.zip$\" <<< \"$DSTDL\"; then\n\t\t\tif grep -q \"proton$\" <<< \"$(\"$UNZIP\" -l \"$DSTDL\" 2>/dev/null)\"; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Archive contains proton\"\n\t\t\t\tSUBDIR=\"$(basename \"${DSTDL//.zip/}\")\"\n\t\t\t\tPROTRELPATH=\"$SUBDIR/proton\"\n\t\t\t\tPROTFULLPATH=\"$CUPROEXTDIR/$PROTRELPATH\"\n\t\t\t\tif [ -f \"$PROTFULLPATH\" ]; then\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - The destination path '$PROTFULLPATH' already exists - looks like '$DSTDL' was already extracted before\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON3\" \"$CPURL\")\" \"S\"\n\t\t\t\t\t\"$UNZIP\" \"$DSTDL\" -d \"$CUPROEXTDIR/$SUBDIR\" 2>/dev/null\n\t\t\t\t\tgetAvailableProtonVersions \"up\"\n\t\t\t\t\ttouch \"$PROTBUMPTEMP\"\n\t\t\t\t\tnotiShow \"$GUI_DONE\" \"S\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON6\" \"$CPURL\")\" \"S\"\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Archive doesn't seem to contain a 'proton' file\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Don't know how to extract \"\n\t\tfi\n\tfi\n\n\trm \"$PROTONCSV\" 2>/dev/null\n\n\tif [ -f \"$PROTFULLPATH\" ]; then\n\t\taddCustomProtonToList \"$PROTFULLPATH\"\n\tfi\n}\n\nfunction createDLProtList {\n\tif [ ! -x \"$(command -v \"$JQ\")\" ]; then\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - 'jq' is not installed - Can't generate list of online Proton versions\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Generating list of online available custom Proton builds\"\n\n\t\tPROTDLLIST=\"$STLSHM/ProtonDL.txt\"\n\t\tMAXAGE=360\n\n\t\tif [ ! -f \"$PROTDLLIST\" ] || test \"$(find \"$PROTDLLIST\" -mmin +\"$MAXAGE\")\"; then\n\t\t\trm \"$PROTDLLIST\" 2>/dev/null\n\t\t\twhile read -r CPURL; do\n\t\t\t\tif grep -q \"$GHURL\" <<< \"${!CPURL}\"; then\n\t\t\t\t\tSRCURL=\"${!CPURL}\"\n\t\t\t\t\tSRCURL=\"${SRCURL//\\/releases}\"\n\t\t\t\t\tSRCURL=\"${SRCURL//$GHURL/$AGHURL\\/repos}\"\n\t\t\t\t\tSRCURL=\"${SRCURL}/releases\"\n\n\t\t\t\t\t\"$WGET\" -q \"$SRCURL\" -O - | \"$JQ\" -r '.[].assets[].browser_download_url' | grep \"tar.gz\\|tar.xz\" | grep -v \"Yad\\|7.x\" >> \"$PROTDLLIST\"\n\t\t\t\tfi\n\t\t\tdone <<< \"$(grep \"^CP_\" \"$STLURLCFG\" | cut -d '=' -f1)\"\n\t\tfi\n\tfi\n\n\tdelEmptyFile \"$PROTDLLIST\"\n\n\tif [ ! -f \"$PROTDLLIST\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Could not generating list of online available custom Proton builds - Probably $GHURL changed something\"\n\telse\n\t\tunset ProtonDLList\n\t\tunset ProtonDLDispList\n\n\t\twhile read -r CPVERS; do\n\t\t\tmapfile -t -O \"${#ProtonDLList[@]}\" ProtonDLList <<< \"$CPVERS\"\n\t\t\tmapfile -t -O \"${#ProtonDLDispList[@]}\" ProtonDLDispList <<< \"${CPVERS##*/}\"\n\t\tdone < \"$PROTDLLIST\"\n\tfi\n}\n\nfunction dlCustomProtonGUI {\n\tcreateDLProtList\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening dialog to choose a download\"\n\n\tDLPROTLIST=\"$(printf \"!%s\\n\" \"${ProtonDLDispList[@]//\\\"/}\" | tr -d '\\n' | sed \"s:^!::\" | sed \"s:!$::\")\"\n\texport CURWIKI=\"$PPW/Download-Custom-Proton\"\n\tTITLE=\"${PROGNAME}-DownloadCustomProton\"\n\tpollWinRes \"$TITLE\"\n\n\tif [ -z \"$DLPROTON\" ]; then\n\t\tDLPROTON=\"${ProtonDLDispList[0]}\"\n\tfi\n\n\tDLDISPCUSTPROT=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t--title=\"$TITLE\" \\\n\t--text=\"$(spanFont \"$GUI_DLCUSTPROTTEXT\" \"H\")\" \\\n\t--field=\" \":LBL \" \" --separator=\"\" \\\n\t--field=\"$GUI_DLCUSTPROTTEXT2!$GUI_DLCUSTPROTTEXT\":CBE \"$(cleanDropDown \"${DLPROTON/#-/ -}\" \"$DLPROTLIST\")\" \\\n\t\"$GEOM\"\n\t)\"\n\n\tif [ -n \"${DLDISPCUSTPROT}\" ]; then\n\t\tif grep -q \"^http\" <<< \"${DLDISPCUSTPROT}\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - The URL '$DLDISPCUSTPROT' was entered manually - downloading directly\"\n\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton ${DLDISPCUSTPROT}\" \"DownloadCustomProtonStatus\"\n\t\telse\n\t\t\tDLURL=\"$(printf \"%s\\n\" \"${ProtonDLList[@]}\" | grep -m1 \"${DLDISPCUSTPROT}\")\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '${DLDISPCUSTPROT}' was selected - downloading '$DLURL'\"\n\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton ${DLURL}\" \"DownloadCustomProtonStatus\"\n\t\tfi\n\n\t\tcreateProtonList\n\tfi\n}\n\nfunction openSteamGridDir {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Steam Grid directory\"\n\t\"$XDGO\" \"$STUIDPATH/config/grid\"\n}\n\n# Set artwork for Steam game by copying/linking/moving passed artwork to steam grid folder\nfunction setGameArt {\n\tfunction applyGameArt {\n\t\tGAMEARTAPPID=\"$1\"\n\t\tGAMEARTSOURCE=\"$2\"  # e.g. /home/gaben/GamesArt/cs2_hero.png\n\t\tGAMEARTSUFFIX=\"$3\"  # e.g. \"_hero\" etc\n\t\tGAMEARTCMD=\"$4\"\n\n\t\tSGGRIDDIR=\"$STUIDPATH/config/grid\"\n\t\tGAMEARTBASE=\"$( basename \"$GAMEARTSOURCE\" )\"\n\t\tGAMEARTDEST=\"${SGGRIDDIR}/${GAMEARTAPPID}${GAMEARTSUFFIX}.${GAMEARTBASE#*.}\"  # path to filename in grid e.g. turns \"/home/gaben/GamesArt/cs2_hero.png\" into \"~/.local/share/Steam/userdata/1234567/config/grid/4440654_hero.png\"\n\n\t\tif [ -n \"$GAMEARTSOURCE\" ]; then\n\t\t\tif [ -f \"$GAMEARTDEST\" ]; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Existing art already exists at '$GAMEARTDEST' - Removing file...\"\n\t\t\t\trm \"$GAMEARTDEST\"\n\t\t\tfi\n\n\t\t\tif [ -f \"$GAMEARTSOURCE\" ]; then\n\t\t\t\t$GAMEARTCMD \"$GAMEARTSOURCE\" \"$GAMEARTDEST\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Successfully set game art for '$GAMEARTSOURCE' at '$GAMEARTDEST'\"\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Given game art '$GAMEARTSOURCE' does not exist, skipping...\"\n\t\t\tfi\n\t\tfi\n\t}\n\n\tGAME_APPID=\"$1\"  # We don't validate AppID as it would drastically slow down the process for large libraries\n\n\tSETARTCMD=\"cp\"  # Default command will copy art\n\tfor i in \"$@\"; do\n\t\tcase $i in\n\t\t\t-hr=*|--hero=*)\n\t\t\t\tSGHERO=\"${i#*=}\"  # <appid>_hero.png -- Banner used on game screen, logo goes on top of this\n\t\t\t\tshift ;;\n\t\t\t-lg=*|--logo=*)\n\t\t\t\tSGLOGO=\"${i#*=}\"  # <appid>_logo.png -- Logo used e.g. on game screen\n\t\t\t\tshift ;;\n\t\t\t-ba=*|--boxart=*)\n\t\t\t\tSGBOXART=\"${i#*=}\"  # <appid>p.png -- Used in library\n\t\t\t\tshift ;;\n\t\t\t-tf=*|--tenfoot=*)\n\t\t\t\tSGTENFOOT=\"${i#*=}\"  # <appid>.png -- Used as small boxart for e.g. most recently played banner\n\t\t\t\tshift ;;\n\t\t\t--copy)\n\t\t\t\tSETARTCMD=\"cp\"  # Copy file to grid folder -- Default\n\t\t\t\tshift ;;\n\t\t\t--link)\n\t\t\t\tSETARTCMD=\"ln -s\"  # Symlink file to grid folder\n\t\t\t\tshift ;;\n\t\t\t--move)\n\t\t\t\tSETARTCMD=\"mv\"  # Move file to grid folder\n\t\t\t\tshift ;;\n\t\tesac\n\tdone\n\n\tapplyGameArt \"$GAME_APPID\" \"$SGHERO\" \"_hero\" \"$SETARTCMD\"\n\tapplyGameArt \"$GAME_APPID\" \"$SGLOGO\" \"_logo\" \"$SETARTCMD\"\n\tapplyGameArt \"$GAME_APPID\" \"$SGBOXART\" \"p\" \"$SETARTCMD\"\n\tapplyGameArt \"$GAME_APPID\" \"$SGTENFOOT\" \"\" \"$SETARTCMD\"\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Finished setting game art for '$GAME_APPID'. Restart Steam for the changes to take effect.\"\n\techo \"Finished setting game art for '$GAME_APPID'. Restart Steam for the changes to take effect.\"\n}\n\n# Shows the Yad GUI for selecting artwork to pass to setGameArt\nfunction setGameArtGui {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting the GUI for setting game artwork\"\n\n\tif [ -z \"$SUSDA\" ] || [ -z \"$STUIDPATH\" ]; then\n\t\tsetSteamPaths\n\tfi\n\n\texport CURWIKI=\"$PPW/Custom-Game-Artwork\"\n\tTITLE=\"${PROGNAME}-$SGA\"\n\tpollWinRes \"$TITLE\"\n\n\tSGAGAMENAME=\"Unknown Game\"\n\tif [ -n \"$1\" ]; then\n\t\tSGAGAMENAME=\"$( getTitleFromID \"$1\" \"1\" )\"\n\t\tif [ -z \"$AID\" ] || [ \"$AID\" -eq \"$PLACEHOLDERAID\" ]; then\n\t\t\tAID=\"$1\"\n\t\tfi\n\tfi\n\n\tsetShowPic\n\n\tSGASETACTIONS=\"copy!link!move\"\n\tSGASET=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t--title=\"$TITLE\" --separator=\"|\" --image=\"$SHOWPIC\" \\\n\t--text=\"$(spanFont \"$( strFix \"$GUI_SGATITLE\" \"$SGAGAMENAME\" \"$1\" )\" \"H\")\\n$GUI_SGATEXT\" \\\n\t--field=\" \":LBL \" \" \\\n\t--field=\"$GUI_SGAHERO!$DESC_SGAHERO ('SGAHERO')\":FL \"${SGAHERO/#-/ -}\" \\\n\t--field=\"$GUI_SGALOGO!$DESC_SGALOGO ('SGALOGO')\":FL \"${SGALOGO/#-/ -}\" \\\n\t--field=\"$GUI_SGABOXART!$DESC_SGABOXART ('SGABOXART')\":FL \"${SGABOXART/#-/ -}\" \\\n\t--field=\"$GUI_SGATENFOOT!$DESC_SGATENFOOT ('SGATENFOOT')\":FL \"${SGATENFOOT/#-/ -}\" \\\n\t--field=\"$GUI_SGASETACTION!$DESC_SGASETACTION ('SGASETACTION')\":CB \"$( cleanDropDown \"copy\" \"$SGASETACTIONS\" )\" \\\n\t--button=\"$BUT_CAN\":0 --button=\"$BUT_DONE\":2 \"$GEOM\" )\"\n\n\tcase $? in\n\t\t0)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_CAN'\" ;;\n\t\t2)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_DONE'\"\n\t\t\tmapfile -d \"|\" -t -O \"${#SGASETARR[@]}\" SGASETARR < <(printf '%s' \"$SGASET\")\n\t\t\tSGAHERO=\"${SGASETARR[1]}\"\n\t\t\tSGALOGO=\"${SGASETARR[2]}\"\n\t\t\tSGABOXART=\"${SGASETARR[3]}\"\n\t\t\tSGATENFOOT=\"${SGASETARR[4]}\"\n\t\t\tSGACOPYMETHOD=\"${SGASETARR[5]}\"\n\n\t\t\tsetGameArt \"$1\" --hero=\"$SGAHERO\" --logo=\"$SGALOGO\" --boxart=\"$SGABOXART\" --tenfoot=\"$SGATENFOOT\" \"--${SGACOPYMETHOD}\"\n\tesac\n}\n\nfunction CustomFallbackPicture {\n\tif [ \"$USECUSTOMFALLBACKPIC\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using custom fallback picture if possible and required\"\n\n\t\tif [ ! -f \"$CUSTOMFALLBACKPIC\" ]; then\n\t\t\tif [ -n \"$GITHUBUSER\" ] && [ \"$GITHUBUSER\" != \"$NON\" ]; then\n\t\t\t\tdlCheck \"$GHURL/${GITHUBUSER}.png\" \"$CUSTOMFALLBACKPIC\" \"X\" \"Downloading github avatar for user '$GITHUBUSER' to use as custom fallback picture\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -f \"$CUSTOMFALLBACKPIC\" ]; then\n\t\t\tSHOWPIC=\"$CUSTOMFALLBACKPIC\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SHOWPIC' as custom fallback picture\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No custom fallback picture found - using internal picture instead\"\n\t\tfi\n\tfi\n}\n\n# This could use a bit of a rewrite\nfunction setShowPic {\n\tGRIDBANNER=\"$( find \"$STUIDPATH/config/grid\" -iname \"${AID}_hero.*\" -type f -exec realpath {} \\; | head -n1  )\"\n\n\tif [ \"$STLPLAY\" -eq 1 ] && [ -f \"$STLGPNG/${AID}.png\" ]; then\n\t\tSHOWPIC=\"$STLGPNG/${AID}.png\"\n\telif [ \"$USEGAMEPICS\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Determining game picture\"\n\t\tif [ -s \"$STLGHEADD/$AID.jpg\" ]; then\n\t\t\tSHOWPIC=\"$STLGHEADD/$AID.jpg\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SHOWPIC' as game picture\"\n\t\telse\n\t\t\tSHOWPIC=\"$STLICON\"\n\t\t\tCustomFallbackPicture\n\n\t\t\tif [ ! -f \"$STLGHEADD/$AID.jpg\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SHOWPIC' as fallback picture, because '$STLGHEADD/$AID.jpg' doesn't exist\"\n\t\t\telif [ ! -s \"$STLGHEADD/$AID.jpg\" ]; then\n\t\t\t\t# If we have a 0bytes file and we get here, try replace it with GRIDBANNER\n\t\t\t\tif [ -z \"$SUSDA\" ] || [ -z \"$STUIDPATH\" ]; then\n\t\t\t\t\tsetSteamPaths\n\t\t\t\tfi\n\t\t\t\t# CUSTPIC replaced with GRIDBANNER, because CUSTPIC expects PNG\n\t\t\t\tCUSTPIC=\"$STUIDPATH/config/grid/${AID}_hero.png\"\n\t\t\t\tif [ -f \"$GRIDBANNER\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found custom game picture under '$GRIDBANNER'\"\n\t\t\t\t\tif [ -x \"$(command -v \"$CONVERT\" 2>/dev/null)\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Replacing the empty '$STLGHEADD/$AID.jpg' file with a scaled down version and using that\"\n\t\t\t\t\t\t\"$CONVERT\" \"$GRIDBANNER\" -resize \"460x215!\" \"$STLGHEADD/$AID.jpg\"\n\t\t\t\t\t\tSHOWPIC=\"$STLGHEADD/$AID.jpg\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Command '$CONVERT' not found, so scaling the custom game picture is not possible - skipping\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SHOWPIC' as fallback picture, because '$STLGHEADD/$AID.jpg' has zero bytes\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Leaving '$STLGHEADD/$AID.jpg' as is to avoid another download attempt\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Feel free to replace it with a custom picture\"\n\t\t\t\tfi\n\t\t\telif [[ ( ! -f \"$STLGHEADD/$AID.jpg\" || ! -s \"$STLGHEADD/$AID.jpg\" ) && -n \"$GRIDBANNER\" ]]; then\n\t\t\t\t# If banner image still doesn't exist, use grid folder one (i.e. non-steam games)\n\t\t\t\t# Find custom image in grid folder and store resized image at '$STLGHEADD/<org_image_name_with_extension>'\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using hero image found in Steam Grid folder - '$GRIDBANNER'\"\n\t\t\t\tCUSTPIC=\"$GRIDBANNER\"\n\t\t\t\t\"$CONVERT\" \"$CUSTPIC\" -resize \"460x215!\" \"$STLGHEADD/${AID}.jpg\"\n\t\t\t\tSHOWPIC=\"$STLGHEADD/${AID}.jpg\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\tSHOWPIC=\"$NOICON\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SHOWPIC' as invisible picture\"\n\tfi\n}\n\nfunction addCustomProtonToList {\n\tif [ -f \"$1\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Received directly the file as argument\"\n\t\tif [ -n \"$2\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Received '$2' as Proton Version\"\n\t\t\tOUTNEWCUSTPROT=\"$2;$1\"\n\t\telse\n\t\t\tOUTNEWCUSTPROT=\"$1\"\n\t\tfi\n\telse\n\t\tNEWCUSTPROT=\"$1\"\n\n\t\tif grep -q \"||\" <<< \"$NEWCUSTPROT\"; then\n\t\t\tif grep -q \"|http\" <<< \"$NEWCUSTPROT\"; then\n\t\t\t\tCPURLWIP=\"$(tr '|' '\"' <<< \"$NEWCUSTPROT\" | sed \"s:\\\"http:\\\";\\\"http:g\")\"\n\t\t\t\tCPURL=\"$(cut -d ';' -f2 <<< \"$CPURLWIP\")\"\n\t\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton ${CPURL}\" \"DownloadCustomProtonStatus\"\n\t\t\telse\n\t\t\t\tCPWIP=\"$(tr -s '|' <<< \"$NEWCUSTPROT\" | tr '|' '\"')\"\n\t\t\t\tif [ -f \"${CPWIP//\\\"/}\" ]; then\n\t\t\t\t\tOUTNEWCUSTPROT=\"$CPWIP\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\tif grep -q \"|http\" <<< \"$NEWCUSTPROT\"; then\n\t\t\t\tCPURLWIP=\"$(tr '|' '\"' <<< \"$NEWCUSTPROT\" | sed \"s:\\\"http:\\\";\\\"http:g\")\"\n\t\t\t\tCPURL=\"$(cut -d ';' -f2 <<< \"$CPURLWIP\")\"\n\t\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton ${CPURL}\" \"DownloadCustomProtonStatus\"\n\t\t\telse\n\t\t\t\tCPWIP=\"$(tr '|' '\"' <<< \"$NEWCUSTPROT\" | sed \"s:\\\"/:\\\";\\\"/:g\")\"\n\t\t\t\tCPWIPF=\"$(cut -d ';' -f2 <<< \"$CPWIP\")\"\n\t\t\t\tif [ -f \"${CPWIPF//\\\"/}\" ]; then\n\t\t\t\t\tOUTNEWCUSTPROT=\"$CPWIP\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ -n \"$OUTNEWCUSTPROT\" ] ; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding '$OUTNEWCUSTPROT' to '$CUSTOMPROTONLIST'\"\n\t\techo \"$OUTNEWCUSTPROT\" >> \"$CUSTOMPROTONLIST\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - (Re-)creating the internal List of available Proton-Versions\"\n\t\tgetAvailableProtonVersions \"up\" X\n\tfi\n}\n\nfunction dlLatestGE {\n\tcreateDLProtList\n\n\tif [ -n \"${ProtonDLList[0]}\" ]; then\n\t\tif [ \"$1\" == \"latestge\" ] || [ \"$1\" == \"lge\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading latest Proton GE\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading latest custom Proton ${ProtonDLDispList[0]//\\\"/}\"\n\t\tfi\n\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton ${ProtonDLList[0]//\\\"/} $2\" \"DownloadCustomProtonStatus\"\n\telse\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Could not create list of downloadable Proton-Versions\"\n\tfi\n}\n\nfunction dlCustomProtonGate {\n\tif [ -z \"$1\" ]; then\n\t\tdlCustomProtonGUI\n\telse\n\t\tif grep -q \"^http\" <<< \"$1\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$1' is an URL - sending directly to dlCustomProton\"\n\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton $1\" \"DownloadCustomProtonStatus\"\n\t\telse\n\t\t\tif [ \"$1\" == \"latest\" ] || [ \"$1\" == \"l\" ] || [ \"$1\" == \"latestge\" ] || [ \"$1\" == \"lge\" ]; then\n\t\t\t\tdlLatestGE \"$1\"\n\t\t\telif [ \"$1\" == \"latesttkg\" ] || [ \"$1\" == \"ltkg\" ]; then\n\t\t\t\tcreateDLProtList\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading latest Proton TKG\"\n\t\t\t\tStatusWindow \"$GUI_DLCUSTPROT\" \"dlCustomProton $(printf \"%s\\n\" \"${ProtonDLList[@]}\" | grep -im1 \"tkg\")\" \"DownloadCustomProtonStatus\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Don't know what to do with argument '$1'\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction addCustomProton {\n\tif [ -z \"$1\" ]; then\n\t\tif [ ! -f \"$CUSTOMPROTONLIST\" ]; then\n\t\t\t{\n\t\t\techo \"# List of custom proton paths, which are not stored in the usual default locations (see README)\"\n\t\t\techo \"# (optionally with identifying name (f.e. proton version) as field one)\"\n\t\t\techo \"# Files can be added by using the '$PROGCMD' command line or the GUI (or manually of course)\"\n\t\t\techo \"# Two valid examples:\"\n\t\t\techo \"# \\\"Proton-47.11-FWX-3\\\";\\\"/random/path/to/a/custom/binary/proton\\\"\"\n\t\t\techo \"# \\\"/random/path/to/a/custom/binary/proton\\\"\"\n\t\t\techo \"# (In the first example \\\"Proton-47.11-FWX-3\\\" will be used as identifying proton version\"\n\t\t\techo \"# in the second example the identifying proton version will be searched in '$CTVDF'\"\n\t\t\techo \"# and 'version' files in the besides the given proton binary.\"\n\t\t\techo \"# When no proton version could be found, the selected file will be marked as invalid and removed at once)\"\n\t\t\techo \"################################################\"\n\t\t\t} > \"$CUSTOMPROTONLIST\"\n\t\tfi\n\t\texport CURWIKI=\"$PPW/Custom-Proton-Autoupdate\"\n\t\tTITLE=\"${PROGNAME}-AddCustomProton\"\n\t\tpollWinRes \"$TITLE\"\n\n\t\tNEWCUSTPROT=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t\t--title=\"$TITLE\" \\\n\t\t--text=\"$(spanFont \"$GUI_ADDCUSTOMBINARY\" \"H\")\" \\\n\t\t--field=\" \":LBL \" \" \\\n\t\t--field=\"$GUI_PROTONVERSIONNAME!$DESC_PROTONVERSIONNAME\" \"Proton-\" \\\n\t\t--field=\"$GUI_CUSTOMPROTONBINARY\":FL \"proton\" --file-filter=\"$GUI_PROTONFILES (proton)| proton\" \\\n\t\t\"$GEOM\"\n\t\t)\"\n\n\t\taddCustomProtonToList \"$NEWCUSTPROT\"\n\telse\n\t\tif grep -q \"proton$\" <<< \"$1\"; then\n\t\t\tif [ -f \"$1\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$1' is a path to an existing 'proton' file - adding to the Custom Proton List\"\n\t\t\t\taddCustomProtonToList \"$@\"\n\t\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - File '$1' does not exist - skipping\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction saveMenuEntries {\n\tSAVMENUCAT=\"$1\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Saving changed Settings\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Clearing Results array with '${#Results[@]}' elements\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Pulling values from tempfile '$MKCFG'\"\n\tunset Results\n\tmapfile -t -O \"${#Results[@]}\" Results < \"$MKCFG\"\n\n\tfor i in \"${!Results[@]}\"; do\n\t\tONUM=\"$((i +1))\"\n\t\tVAL=\"${Results[$i]}\"\n\n\t\tRAWENT=\"$(sed \"${ONUM}q;d\" \"${SAVMENUCAT}-${TMPL}\")\"\n\t\tVAR=\"$(grep -oP \"\\('\\K[^\\')]+\" <<< \"$RAWENT\")\"\n\n\t\tif [ -n \"$VAL\" ]; then\n\t\t\tif grep -q \"MENU_GAME\" <<< \"$RAWENT\"; then\n\t\t\t\tif [ \"$SAVMENUCAT\" == \"$GAMETEMPMENU\" ]; then\n\t\t\t\t\tSAVECFG=\"$STLDEFGAMECFG\"\n\t\t\t\telse\n\t\t\t\t\tSAVECFG=\"$STLGAMECFG\"\n\t\t\t\tfi\n\t\t\telif grep -q \"MENU_URL\" <<< \"$RAWENT\"; then\n\t\t\t\tSAVECFG=\"$STLURLCFG\"\n\t\t\telif grep -q \"MENU_GLOBAL\" <<< \"$RAWENT\"; then\n\t\t\t\tSAVECFG=\"$STLDEFGLOBALCFG\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No valid configfile determined for VAR='$VAR' WRITEVAL='$WRITEVAL' - this is an error!\"\n\t\t\tfi\n\t\t\tVALUNQ=\"${VAL//\\'/}\"\n\t\t\tWRITEVAL=\"${VALUNQ/# -/-}\"\n\n\t\t\tif [ -n \"$VAR\" ] && [ -z \"$WRITEVAL\" ] && [ -n \"$SAVECFG\" ]; then\n\t\t\t\tWRITEVAL=\"$NON\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Value for '$VAR' is empty - automatically setting '$NON'\"\n\t\t\tfi\n\n\t\t\tif [ -n \"$VAR\" ] && [ -n \"$WRITEVAL\" ] && [ -n \"$SAVECFG\" ]; then\n\t\t\t\tupdateConfigEntry \"$VAR\" \"$WRITEVAL\" \"$SAVECFG\"\n\t\t\tfi\n\t\tfi\n\tdone\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Done with Saving changed Settings\"\n}\n\nfunction saveNewRes {\n\tif [ \"$SAVESETSIZE\" -eq 1 ] && [ -n \"$3\" ]; then\n\t\tSNEWW=\"$1\"\n\t\tSNEWH=\"$2\"\n\t\tCFG=\"$3\"\n\t\ttouch \"$CFG\"\n\t\tupdateConfigEntry \"WINX\" \"$SNEWW\" \"$CFG\"\n\t\tupdateConfigEntry \"WINY\" \"$SNEWH\" \"$CFG\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Saved new resolution '${SNEWW}x${SNEWH}' in '$CFG'\" \"$WINRESLOG\"\n\tfi\n}\n\nfunction updateThisWinTemplate {\n\tif [ -f \"$UPWINTMPL\" ] && [ -f \"$2\" ]; then\n\t\tcp \"$2\" \"$STLGUIDIR/$SCREENRES/${TEMPL}/${1}.conf\"\n\t\trm \"$UPWINTMPL\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updated Window Template '$STLGUIDIR/$SCREENRES/${TEMPL}/${1}.conf' with '$2'\" \"$WINRESLOG\"\n\t\tnotiShow \"$(strFix \"$NOTY_TEMPLUP\" \"$1\")\"\n\tfi\n}\n\nfunction updateWinRes {\n\tif [ -z \"$SAVESETSIZE\" ] || [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\tSAVESETSIZE=0\n\tfi\n\n\tif [ \"$SAVESETSIZE\" -eq 1 ]; then\n\t\tWNAM=\"$1\"\n\t\tCFG=\"$2\"\n\t\tTEMPLGUICFG=\"$3\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting resolution-poll for '$GAMEGUICFG' with incoming '${WINX}x${WINY}'\" \"$WINRESLOG\"\n\n\t\tORGW=\"${WINX}\"\n\t\tORGH=\"${WINY}\"\n\t\tNEWW=\"${WINX}\"\n\t\tNEWH=\"${WINY}\"\n\n\t\tMAXWAIT=3\n\t\tCOUNTER=0\n\n\t\twhile ! \"$XWININFO\" -name \"$WNAM\" -stats >/dev/null 2>/dev/null; do\n\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\" \"$WINRESLOG\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Timeout waiting for Window '$WNAM'\" \"$WINRESLOG\"\n\t\t\t\treturn\n\t\t\tfi\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for Window '$WNAM'\" \"$WINRESLOG\"\n\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\tsleep 1\n\t\tdone\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Window '$WNAM' is running - polling the resolution\" \"$WINRESLOG\"\n\n\t\twhile true; do\n\t\t\tSRES=\"$(\"$XWININFO\" -name \"$WNAM\" -stats 2>/dev/null | awk '$1==\"-geometry\" {print $2}' | cut -d '+' -f1)\"\n\t\t\tif grep -q \"x\" <<< \"$SRES\"; then\n\t\t\t\tPREVW=\"$NEWW\"\n\t\t\t\tPREVH=\"$NEWH\"\n\n\t\t\t\tTNEWW1=\"${SRES%x*}\"\n\t\t\t\tTNEWW=\"${TNEWW1%%-*}\"\n\n\t\t\t\tTNEWH1=\"${SRES#*x}\"\n\t\t\t\tTNEWH=\"${TNEWH1%%-*}\"\n\n\t\t\t\tif [ \"$TNEWW\" -ne \"$ORGW\" ] || [ \"$TNEWH\" -ne \"$ORGH\" ]; then\n\t\t\t\t\tif [ \"$TNEWW\" != \"$PREVW\" ] || [ \"$TNEWH\" != \"$PREVH\" ]; then\n\t\t\t\t\t\tif [ -n \"${TNEWW##*[!0-9]*}\" ] && [ -n \"${TNEWH##*[!0-9]*}\" ]; then\n\t\t\t\t\t\t\tNEWW=\"$TNEWW\"\n\t\t\t\t\t\t\tNEWH=\"$TNEWH\"\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found new Window Resolution '${NEWW}x${NEWH}' for Window '$WNAM'\" \"$WINRESLOG\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping found false-positive size '${NEWW}x${NEWH}'\"\t\"$WINRESLOG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tsleep 1\n\t\t\telse\n\t\t\t\tif [ \"$NEWW\" -ne \"$ORGW\" ] || [ \"$NEWH\" -ne \"$ORGH\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - The Window '$WNAM' was closed - saving the last seen resolution '${NEWW}x${NEWH}' into config '$CFG'\" \"$WINRESLOG\"\n\t\t\t\t\tsaveNewRes \"$NEWW\" \"$NEWH\" \"$CFG\"\n\t\t\t\t\tif [ ! -f \"$TEMPLGUICFG\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating template '$TEMPLGUICFG' with the same resolution '${NEWW}x${NEWH}'\" \"$WINRESLOG\"\n\t\t\t\t\t\tcp \"$CFG\" \"$TEMPLGUICFG\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - The Window '$WNAM' was closed - the resolution didn't change - nothing to do\" \"$WINRESLOG\"\n\t\t\t\tfi\n\n\t\t\t\tupdateThisWinTemplate \"$TITLE\" \"$CFG\"\n\n\t\t\t\treturn\n\t\t\tfi\n\t\tdone\n\tfi\n}\n\nfunction updateEditor {\n\tCFG=\"$1\"\n\n\tloadCfg \"$CFG\" X\n\tif grep -q \"$XDGO\" <<< \"$STLEDITOR\" || [ ! -f \"$STLEDITOR\" ] ; then\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$XDGO' selected as editor or configured editor not found - trying to find an installed editor installed\"\n\t\tif [ -x \"$(command -v \"$XDGMIME\" 2>/dev/null)\" ]; then\n\t\t\tXDGED=\"$(command -v \"$(\"$XDGMIME\" query default text/plain | cut -d '.' -f1)\" 2>/dev/null)\"\n\t\t\tif [ -x \"$XDGED\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $XDGMIME points to '$XDGED', which also exists\"\n\t\t\t\tFOUNDEDITOR=\"$XDGED\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -z \"$FOUNDEDITOR\" ]; then\n\t\t\tif [ -x \"$(command -v \"geany\")\" ]; then\n\t\t\t\tFOUNDEDITOR=\"$(command -v \"geany\")\"\n\t\t\telif [ -x \"$(command -v \"gedit\")\" ]; then\n\t\t\t\tFOUNDEDITOR=\"$(command -v \"gedit\")\"\n\t\t\telif [ -x \"$(command -v \"leafpad\")\" ]; then\n\t\t\t\tFOUNDEDITOR=\"$(command -v \"leafpad\")\"\n\t\t\telif [ -x \"$(command -v \"kwrite\")\" ]; then\n\t\t\t\tFOUNDEDITOR=\"$(command -v \"kwrite\")\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$FOUNDEDITOR\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - changing STLEDITOR to '$FOUNDEDITOR' in '$CFG'\"\n\t\t\tupdateConfigEntry \"STLEDITOR\" \"$FOUNDEDITOR\" \"$CFG\"\n\t\t\tloadCfg \"$CFG\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No valid editor found - will fall back to '$XDGO'.\"\n\t\tfi\n\tfi\n}\n\nfunction setGPfxFromAppMa {\n\tif [ -n \"$2\" ] && [ -f \"$2\" ]; then\n\t\techo \"${2%/*}/$CODA/$1/pfx\"\n\telse\n\t\tif [ -z \"$GPFX\" ]; then\n\t\t\tAPPMAFE=\"$(listAppManifests | grep -m1 \"${1}.acf\")\"\n\t\t\tif [ -n \"$APPMAFE\" ]; then\n\t\t\t\tif [ ! -d \"$APPMAFE\" ]; then\n\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - '$APPMAFE' is no valid directory - probably function 'listAppManifests' requires a fix here!\"\n\t\t\t\telse\n\t\t\t\t\tAMF=\"${APPMAFE##*/}\"\n\t\t\t\t\tGPFX=\"${APPMAFE%/*}/$CODA/$1/pfx\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found WINEPREFIX '$GPFX' in '$AMF'\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\tif [ -z \"$GPFX\" ] && [ -n \"$AMF\" ] && [ -z \"$2\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not retrieve WINEPREFIX from '$AMF'\"\n\tfi\n}\n\nfunction getGameTextFiles {\n\tsetGPfxFromAppMa \"$AID\"\n\tunset GameTxtFiles\n\n\tif [ -d \"$GPFX/$DRCU/$STUS\" ]; then\n\t\t# an option to parse user-contributed per game config lists with the actual config files instead of searching for any textfile would be easy\n\t\tEXID=\"$HIDEDIR/hide-${AID}.txt\"\n\t\ttouch \"$EXID\"\n\t\tSKIPGTF=0\n\n\t\tif [ -n \"$1\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching for at least one editable textfile in '$GPFX/$DRCU/$STUS'\"\n\t\t\tfind \"$GPFX/$DRCU/$STUS\" -type f -exec grep -Iq . {} \\; -print -quit >/dev/null\n\t\telse\n\t\t\twhile read -r gtxtfile; do\n\t\t\t\twhile read -r skip; do\n\t\t\t\t\tif grep -q \"$skip\" <<< \"$gtxtfile\"; then\n\t\t\t\t\t\tSKIPGTF=1\n\t\t\t\t\tfi\n\t\t\t\tdone < \"$EXID\"\n\n\t\t\t\tif [ \"$SKIPGTF\" -eq 0 ]; then\n\t\t\t\t\tGameTxtFiles+=(\"$gtxtfile\")\n\t\t\t\telse\n\t\t\t\t\tSKIPGTF=0\n\t\t\t\tfi\n\t\t\tdone <<< \"$(find \"$GPFX/$DRCU/$STUS\" -type f -exec grep -Iq . {} \\; -print)\"\n\t\tfi\n\tfi\n}\n\nfunction getAvailableCfgs {\n\tunset CfgFiles\n\twhile read -r cfgfile; do\n\t\tif [ -f \"${!cfgfile}\" ]; then\n\t\t\tCfgFiles+=(\"${!cfgfile}\")\n\t\tfi\n\tdone <<< \"$(sed -n \"/^#STARTEDITORCFGLIST/,/^#ENDEDITORCFGLIST/p;/^#ENDEDITORCFGLIST/q\" \"$0\" | grep -v \"^#\" | grep -v \"LOGFILE\" | grep \"=\" | cut -d '=' -f1)\"\n\n\tgetGameTextFiles \"X\"\n}\n\nfunction confirmReq {\n\tQUESTION=\"$2\"\n\tTITLE=\"${PROGNAME}-$1\"\n\tpollWinRes \"$TITLE\"\n\tsetShowPic\n\n\t\"$YAD\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center --on-top \"$WINDECO\" --title=\"$TITLE\" --text=\"$(spanFont \"$QUESTION\" \"H\")\" \"$GEOM\"\n\techo \"$?\"\n}\n\nfunction EditorDialog {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Editor Dialog\"\n\n\tresetAID \"$1\"\n\tloadCfg \"$STLGAMECFG\" X\n\tgetAvailableCfgs\n\n\tif [ \"$BACKUPSTEAMUSER\" -eq 1 ]; then\n\t\tEXID=\"$BACKEX/exclude-${AID}.txt\"\n\t\tif [ -f \"$EXID\" ]; then\n\t\t\tCfgFiles+=(\"$EXID\")\n\t\tfi\n\tfi\n\n\tHIDEID=\"$HIDEDIR/hide-${AID}.txt\"\n\tif [ -f \"$HIDEID\" ]; then\n\t\tCfgFiles+=(\"$HIDEID\")\n\tfi\n\n\tif [ -f \"$MAHUTMPL\" ]; then\n\t\tCfgFiles+=(\"$MAHUTMPL\")\n\tfi\n\n\tMHIC=\"$MAHUCID/${AID}.conf\"\n\tif [ -f \"$MHIC\" ]; then\n\t\tCfgFiles+=(\"$MHIC\")\n\tfi\n\n\tgetGameTextFiles\n\tCfgFiles+=(\"${GameTxtFiles[@]}\")\n\n\tif [ -f \"$LOGFILE\" ]; then\n\t\tCfgFiles+=(\"$LOGFILE\")\n\tfi\n\n\tREVALSC=\"$EVMETAID/${EVALSC}_${AID}.vdf\"\n\tCEVALSC=\"$EVMETACUSTOMID/${EVALSC}_${AID}.vdf\"\n\tAEVALSC=\"$EVMETAADDONID/${EVALSC}_${AID}.vdf\"\n\n\tif [ -f \"$REVALSC\" ]; then\n\t\tCfgFiles+=(\"$REVALSC\")\n\tfi\n\n\tif [ -f \"$CEVALSC\" ]; then\n\t\tCfgFiles+=(\"$CEVALSC\")\n\tfi\n\n\tif [ \"$UUUSEIGCS\" -eq 1 ] || [ \"$USEIGCS\" -eq 1 ]; then\n\t\tIGCSINI=\"$EFD/${IGCS}.ini\"\n\t\tif\t [ -f \"$IGCSINI\" ]; then\n\t\t\tCfgFiles+=(\"$IGCSINI\")\n\t\tfi\n\tfi\n\n\tif [ \"$UUUSEPATCH\" -eq 1 ] || [ \"$UUUSEVR\" -eq 1 ]; then\n\t\tUUUPATCHFILE=\"$(find \"$MEGAMEDIR\" -name \"$UUUPATCH\")\"\n\t\tif\t[ -f \"$UUUPATCHFILE\" ]; then\n\t\t\tCfgFiles+=(\"$UUUPATCHFILE\")\n\t\tfi\n\tfi\n\n\tif [ \"$USERESHADE\" -eq 1 ] || [ \"$USESPECIALK\" -eq 1 ]; then\n\t\tsetFullGameExePath \"FGEP\"\n\t\twhile read -r inifile; do\n\t\t\tif [ -f \"$inifile\" ]; then\n\t\t\t\tCfgFiles+=(\"$inifile\")\n\t\t\tfi\n\t\tdone <<< \"$(find \"$FGEP\" -mindepth 1 -maxdepth 1 -type f -name \"*.ini\")\"\n\tfi\n\n\tif [ \"$USEOPENVRFSR\" -eq 1 ]; then\n\t\tOVRFP=\"$EFD/${OVFS}-${SHOSTL}-enabled.txt\"\n\t\tif [ -f \"$OVRFP\" ]; then\n\t\t\tOVRMODF=\"$EFD/$(grep \"$OVRMOD\" \"$OVRFP\")\"\n\t\t\tif [ -f \"$OVRMODF\" ]; then\n\t\t\t\tCfgFiles+=(\"$OVRMODF\")\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ -f \"$AEVALSC\" ]; then\n\t\tCfgFiles+=(\"$AEVALSC\")\n\tfi\n\n\tif [ -f \"$STLPROTONIDLOGDIR/steam-${AID}.log\" ]; then\n\t\tCfgFiles+=(\"$STLPROTONIDLOGDIR/steam-${AID}.log\")\n\tfi\n\n\tif [ -f \"$STLDXVKLOGDIR/${GE}_d3d11.log\" ]; then\n\t\tCfgFiles+=(\"$STLDXVKLOGDIR/${GE}_d3d11.log\")\n\tfi\n\n\tif [ -f \"$STLDXVKLOGDIR/${GE}_dxgi.log\" ]; then\n\t\tCfgFiles+=(\"$STLDXVKLOGDIR/${GE}_dxgi.log\")\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Found ${#CfgFiles[@]} available Config Files - opening Checklist\"\n\texport CURWIKI=\"$PPW/Editor-Menu\"\n\tTITLE=\"${PROGNAME}-Editor\"\n\tpollWinRes \"$TITLE\"\n\n\tsetShowPic\n\n\tEDFILES=\"$(while read -r f; do\techo \"FALSE\"; echo \"$f\"; done <<< \"$(printf \"%s\\n\" \"${CfgFiles[@]}\" | sort -u)\" | \\\n\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center \"$WINDECO\" --list --checklist --column=Edit --column=ConfigFile --separator=\"\\n\" --print-column=\"2\" \\\n\t--text=\"$(spanFont \"$(strFix \"$GUI_EDITORDIALOG\" \"$SGNAID\")\" \"H\")\" --title=\"$TITLE\" --button=\"$BUT_EDIT\":0 --button=\"$BUT_HIDE\":2 --button=\"$BUT_OD\":4 --button=\"$BUT_DEL\":6 --button=\"$BUT_CAN\":8 \"$GEOM\")\"\n\tcase $? in\n\t\t0)  {\n\t\t\t\tif [ -n \"$EDFILES\" ]; then\n\t\t\t\t\tif [ -n \"$HELPURL\" ] && [ \"$HELPURL\" != \"$NON\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening the url '$HELPURL' in the browser\"\n\t\t\t\t\t\tcheckHelpUrl \"$HELPURL\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tif [ -z \"$STLEDITOR\" ] || [ \"$STLEDITOR\" -eq \"$NON\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No editor found or selected. Falling back to '$XDGO'\"\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - If you find games fail to close try setting an editor manually\"\n\t\t\t\t\t\tSTLEDITOR=$XDGO\n\t\t\t\t\tfi\n\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Editor '$STLEDITOR' with selected Config Files\"\n\t\t\t\t\tmapfile -t -O \"${#EdArr[@]}\" EdArr <<< \"$EDFILES\"\n\t\t\t\t\t\"$STLEDITOR\" \"${EdArr[@]}\"\n\t\t\t\t\tunset EdArr\n\t\t\t\t\t# kill browser if it was opened with the editor:\n\t\t\t\t\tif [ -n \"$KILLBROWSER\" ]; then\n\t\t\t\t\t\tif [ \"$KILLBROWSER\" -eq 1 ]; then\n\t\t\t\t\t\t\t\"$PKILL\" -f \"$BROWSER\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t}\n\t\t;;\n\t\t2)  {\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected HIDE 1\"\n\t\t\t\tif [ -n \"$EDFILES\" ]; then\n\t\t\t\t\tHIDELIST=\"$HIDEDIR/hide-${AID}.txt\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected HIDE - Hiding all selected files from the EditorList by adding them to the Exclude list '$HIDELIST'\"\n\t\t\t\t\techo \"$EDFILES\"\t >> \"$HIDELIST\"\n\t\t\t\t\tsort -u\"$HIDELIST\" -o \"$HIDELIST\"\n\t\t\t\t\tsed \"/^ *$/d\" -i \"$HIDELIST\"\n\t\t\t\tfi\n\t\t\t}\n\t\t;;\n\t\t4)\n\t\t\tif [ -x \"$(command -v \"$XDGO\" 2>/dev/null)\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected Open Directory - Opening the directory containing the first selected file using '$XDGO'\"\n\t\t\t\tmapfile -t -O \"${#EdArr[@]}\" EdArr <<< \"$EDFILES\"\n\t\t\t\t\"$XDGO\" \"$(dirname \"${EdArr[0]}\")\"\n\t\t\t\tunset EdArr\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$XDGO' not found - can't open the directory\"\n\t\t\tfi\n\t\t;;\n\t\t6)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected Delete\"\n\t\t\tRSEL=\"$(confirmReq \"Ask_Delete_Selected_Files\" \"$GUI_DELSEL\")\"\n\t\t\tif [ \"$RSEL\" -eq 0 ]; then\n\t\t\t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Confirmed deletion of all selected files\"\n\t\t\t\tmapfile -t -O \"${#EdArr[@]}\" EdArr <<< \"$EDFILES\"\n\t\t\t\trm \"${EdArr[@]}\" 2>/dev/null\n\t\t\t\tunset EdArr\n\t\t\t}\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected CANCEL - Not deleting the files\"\n\t\t\tfi\n\t\t;;\n\t\t8)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected CANCEL\"\n\t\t;;\n\tesac\n\n\tgoBackToPrevFunction \"${FUNCNAME[0]}\" \"$2\"\n}\n\nfunction goBackToPrevFunction {\n\tIAM=\"$1\"\n\tPREV=\"$2\"\n\n\tif [ \"$IAM\" != \"$PREV\" ]; then\n\t\tif [ -z \"$3\" ]; then\n\t\t\tMYGOBACK=1\n\t\telse\n\t\t\tMYGOBACK=\"$3\"\n\t\tfi\n\n\t\tif [ -z \"$PREV\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$IAM' closed\"\n\t\telse\n\t\t\tif [ \"$PREV\" != \"$NON\" ] && [ \"$MYGOBACK\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$IAM' closed - Going back to the '$PREV'\"\n\t\t\t\t\"$PREV\" \"$AID\" \"$IAM\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$IAM' closed\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Took a wrong road somewhere - '$IAM' and '$PREV' - leaving\"\n\tfi\n}\n\nfunction closeTrayIcon {\n\tnotiShow \"$(strFix \"$NOTY_CLOSETRAY\" \"$YADTRAYPID\")\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Closing TrayIcon '$YADTRAYPID'\"\n\tkill \"$YADTRAYPID\" 2>/dev/null\n}\n\nfunction cleanYadLeftOvers {\n\tcloseTrayIcon\n}\n\nfunction GETALTEXEPATH {\n\tif [ -n \"$ALTEXEPATH\" ] && [ \"$ALTEXEPATH\" != \"/tmp\" ]; then\n\t\tif [ -d \"$ALTEXEPATH\" ]; then\n\t\t\techo \"$ALTEXEPATH\"\n\t\telif [ -d \"$EFD/$ALTEXEPATH\" ]; then\n\t\t\techo \"$EFD/$ALTEXEPATH\"\n\t\tfi\n\tfi\n}\n\n#STARTIEX\nfunction TrayIconExports {\n\texport XWI=\"$XWININFO\"\n\texport XDO=\"$XDO\"\n\texport PROGCMD=\"$PROGCMD\"\n\n\texport -f writelog\n\texport AID=\"$AID\"\n\n\texport GPFX=\"$GPFX\"\n\texport KILLSWITCH=\"$KILLSWITCH\"\n\texport -f killProtonGame\n\texport -f PauseGame\n\texport EFD=\"$EFD\"\n\texport GAMEWINDOW=\"$GAMEWINDOW\"\n\texport UPWINTMPL=\"$UPWINTMPL\"\n\texport TRAYCUSC=\"$TRAYCUSC\"\n\n\tif [ -n \"$(GETALTEXEPATH)\" ]; then\n\t\tSHADDESTDIR=\"$(GETALTEXEPATH)\"\n\tfi\n\n\texport SHADDESTDIR=\"$SHADDESTDIR\"\n\n\tKPFX=\"$GPFX\"\n\tif [ \"$USEWINE\" -eq 1 ]; then\n\t\tsetWineVars\n\t\tKPFX=\"$GWFX\"\n\tfi\n\n\tif [ ! -f \"$RUNWINE\" ]; then\n\t\tsetRunWineServer \"${FUNCNAME[0]}\"\n\tfi\n\n\texport RUNWINESERVER=\"$RUNWINESERVER\"\n\n\tif [ -n \"$KPFX\" ]; then\n\t\techo \"WINEPREFIX=\\\"$KPFX\\\" \\\"$RUNWINESERVER\\\" -k\" > \"$KILLSWITCH\"\n\t\tif [ \"$USEMANGOAPP\" -eq 1 ]; then\n\t\t\techo \"$PKILL -f \\\"$MANGOAPP\\\"\" >> \"$KILLSWITCH\"\n\t\tfi\n\t\techo \"touch $CLOSETMP\" >> \"$KILLSWITCH\"\n\t\tchmod +x \"$KILLSWITCH\"\n\tfi\n\n\texport SHADDESTDIR=\"$SHADDESTDIR\"\n\texport -f TrayShaderMenu\n\texport -f TrayVR\n\texport -f TrayPickWin\n\texport -f TraySRC\n\texport -f TrayUWT\n\texport -f TrayLCS\n\texport -f TrayGameFiles\n\texport -f TrayMO2\n\texport -f TrayProtonList\n\texport -f TrayOpenIssue\n}\n#ENDIEX\n\nfunction openTrayIcon {\n\tsetShadDestDir\n\n\tif [ -z \"$1\" ]; then\n\t\t# loading gameconfig here, as some vars might have to be exported\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - LoadCfg: $STLGAMECFG\"\n\t\tloadCfg \"$STLGAMECFG\"\n\tfi\n\n\tif [ \"$ONSTEAMDECK\" -eq 1 ] && [ \"$FIXGAMESCOPE\" -eq 1 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping TrayIcon on SteamDeck Game Mode\" \"X\"\n\telse\n\t\tif [ -z \"$YADTRAYPID\" ] && [ \"$USETRAYICON\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening trayIcon:\" \"X\"\n\n\t\t\t# variables and functions used by exported functions below\n\n\t\t\t# functions for the trayIcon Menu\n\t\t\tfunction killProtonGame {\n\t\t\t\t\"$KILLSWITCH\"\n\t\t\t}\n\n\t\t\tfunction PauseGame {\n\t\t\t\tPAUSEPID=\"$(sleep 5 && \"$XDO\" getactivewindow getwindowpid)\"\n\t\t\t\t# idea taken with friendly permission from $GHURL/Ilazki:\n\t\t\t\tGAMESTATE=\"$(ps -q \"$PAUSEPID\" -o state --no-headers)\"\n\t\t\t\tGAMESIG=\"-STOP\"\n\n\t\t\t\tif [ \"$GAMESTATE\" = \"T\" ] ; then\n\t\t\t\t\tGAMESIG=\"-CONT\"\n\t\t\t\tfi\n\n\t\t\t\tkill \"$GAMESIG\" \"$PAUSEPID\"\n\t\t\t}\n\n\t\t\tfunction TrayShaderMenu {\n\t\t\t\t\"$PROGCMD\" update gameshaders \"$SHADDESTDIR\"\n\t\t\t}\n\n\t\t\tfunction TrayVR {\n\t\t\t\tif [ -z \"$GAMEWINDOW\" ]; then\n\t\t\t\t\tGAMEWINDOW=\"$(sleep 2 && \"$XWI\" -stats | grep ^\"$XWI\" | tail -n1 | cut -d '\"' -f2)\";\n\t\t\t\tfi\n\n\t\t\t\tif [ -n \"$GAMEWINDOW\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: picked '$PICKWINDOWNAME'\"\n\t\t\t\t\t\"$PROGCMD\" \"vr\" \"$PICKWINDOWNAME\" \"$AID\" \"s\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - TrayIcon: Didn't find a game window name to open in vr\"\n\t\t\t\tfi\n\t\t\t}\n\n\t\t\tfunction TrayPickWin {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Executing Window Pick command for game '$GN '$AID'\"\n\t\t\t\t\"$PROGCMD\" \"pw\" \"$AID\" \"$GN\"\n\t\t\t}\n\n\t\t\tfunction TraySRC {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Executing command '$STEAM ${STEAM}://${RECO}'\"\n\t\t\t\t\"$PROGCMD\" \"src\"\n\t\t\t}\n\n\t\t\tfunction TrayUWT {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Triggering Window Template Update\"\n\t\t\t\ttouch \"$UPWINTMPL\"\n\t\t\t}\n\n\t\t\tfunction TrayLCS {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Triggering Launch custom script\"\n\t\t\t\t\"$TRAYCUSC\"\n\t\t\t}\n\n\t\t\tfunction TrayGameFiles {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Executing Game Files command for game '$GN '$AID'\"\n\t\t\t\t\"$PROGCMD\" \"gf\" \"$AID\"\n\t\t\t}\n\n\t\t\tfunction TrayMO2 {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Starting standalone $MO instance\"\n\t\t\t\t\"$PROGCMD\" \"mo2\" \"start\"\n\t\t\t}\n\n\t\t\tfunction TrayProtonList {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Updating list of available Proton versions\"\n\t\t\t\t\"$PROGCMD\" \"proton\" \"list\"\n\t\t\t}\n\n\t\t\tfunction TrayOpenIssue {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TrayIcon: Open Issue Tracker with User's Default Browser\"\n\t\t\t\t\"$PROGCMD\" \"openissue\"\n\t\t\t}\n\n\t\t\tTrayIconExports\n\n\t\t\t# actually open the actual trayIcon\n\t\t\tGDK_BACKEND=x11 \"$YAD\" --image=\"$STLICON\" --notification --item-separator=\",\"\\\n\t\t\t--menu=\"$TRAY_KILLSWITCH,bash -c killProtonGame \\\n\t\t\t|$TRAY_PAUSE,bash -c PauseGame \\\n\t\t\t|$TRAY_SHADER,bash -c TrayShaderMenu \\\n\t\t\t|$TRAY_VR,bash -c TrayVR \\\n\t\t\t|$TRAY_PICKWINDOW,bash -c TrayPickWin \\\n\t\t\t|$TRAY_SRC,bash -c TraySRC \\\n\t\t\t|$TRAY_UWT,bash -c TrayUWT \\\n\t\t\t|$TRAY_LCS,bash -c TrayLCS \\\n\t\t\t|$GUI_GAFI,bash -c TrayGameFiles \\\n\t\t\t|$TRAY_UPL,bash -c TrayProtonList \\\n\t\t\t|$FBUT_GUISET_MO,bash -c TrayMO2 \\\n\t\t\t|$TRAY_OPENISSUE,bash -c TrayOpenIssue\" \\\n\t\t\t--text=\"$TRAY_TOOLTIP\" >/dev/null 2>/dev/null &\n\t\t\tYADTRAYPID=\"$!\"\n\t\tfi\n\tfi\n}\n\nfunction createProtonList {\n\tdelEmptyFile \"$PROTONCSV\"\n\tif [ ! -f \"$PROTONCSV\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looking for available Proton versions\"\n\t\tgetAvailableProtonVersions \"up\" X\n\tfi\n\n\tif [ \"$ISGAME\" -eq 2 ] || [ -n \"$1\" ] ; then\n\t\tPROTYADLIST=\"$(printf \"!%s\\n\" \"${ProtonCSV[@]//\\\"/}\" | sort -u | cut -d ';' -f1 | tr -d '\\n' | sed \"s:^!::\" | sed \"s:!$::\")\"\n\tfi\n}\n\nfunction createDropdownLists {\n\tcreateProtonList\n\tcreateWineList\n\tcreateLanguageList\n}\n\nfunction favoritesMenuEntries {\n\tif [ -f \"$STLFAVMENUCFG\" ]; then\n\t\tunset FavSel\n\t\tmapfile -t -O \"${#FavSel[@]}\" FavSel < \"$STLFAVMENUCFG\"\n\telse\n\t\tFAVMENUCFG=\"$GLOBALMISCDIR/$FACO\"\n\n\t\tif [ -f \"$FAVMENUCFG\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using global favorites preset for preselecting some entries\"\n\t\t\tmapfile -t -O \"${#FavSel[@]}\" FavSel < \"$FAVMENUCFG\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Global favorites preset '$FAVMENUCFG' not found - starting with zero preselection\"\n\t\t\tdeclare -a FavSel\n\t\tfi\n\tfi\n\n\twhile read -r ENTRY; do\n\t\tGE=\"GUI_${ENTRY}\"\n\t\tDE=\"DESC_${ENTRY}\"\n\t\tif [ -z \"${!GE}\" ]; then\n\t\t\tGEOUT=\"no description\"\n\t\telse\n\t\t\tGEOUT=\"${!GE}\"\n\t\tfi\n\n\t\tif [ -z \"${!DE}\" ]; then\n\t\t\tDEOUT=\"no description\"\n\t\telse\n\t\t\tDEOUT=\"${!DE}\"\n\t\tfi\n\n\t\tif grep -q \"^$ENTRY$\" <<< \"$(printf \"%s\\n\" \"${FavSel[@]}\")\"; then\n\t\t\techo TRUE\n\t\t\techo \"$GEOUT\"\n\t\t\techo \"$ENTRY\"\n\t\t\techo \"$DEOUT\"\n\t\telse\n\t\t\techo FALSE\n\t\t\techo \"$GEOUT\"\n\t\t\techo \"$ENTRY\"\n\t\t\techo \"$DEOUT\"\n\t\tfi\n\tdone <<< \"$(sort \"$STLSETENTRIES\")\"\n}\n\nfunction favoritesMenu {\n\tif [ -z \"$2\" ]; then\n\t\tBACKFUNC=\"$NON\"\n\telse\n\t\tif [ \"$2\" == \"setGuiFavoritesSelection\" ]; then\n\t\t\tBACKFUNC=\"MainMenu\"\n\t\telse\n\t\t\tBACKFUNC=\"$2\"\n\t\tfi\n\tfi\n\n\tif [ -f \"${FAVMENU}-${TMPL}\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found an autoconfigured favorites menu template '${FAVMENU}-${TMPL}' - using it directly\"\n\t\topenCustMenu \"$1\" \"$BACKFUNC\" \"Favorites\" \"$FAVMENU\" \"$LFM\"\n\telse\n\t\tif [ ! -f \"$STLFAVMENUCFG\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No Favorites defined yet - opening Favorites Selection\"\n\t\t\trm \"${FAVMENU}-${TMPL}\" 2>/dev/null\n\t\t\tsetGuiFavoritesSelection \"$AID\" \"${FUNCNAME[0]}\"\n\t\tfi\n\n\t\tif [ -f \"$STLFAVMENUCFG\" ]; then\n\t\t\tTEMPF=\"${FAVMENU}-${TMPL}_w1\"\n\t\t\ttouch \"$TEMPF\"\n\t\t\twhile read -r savfav; do\n\t\t\t\tSAVCAT=\"CAT_$(grep \"'$savfav'\" \"$STLRAWENTRIES\" | grep -oP '#CAT_\\K[^`]+')\"\n\t\t\t\tFAVHEADL=\"$(grep \"#HEAD\" \"$STLRAWENTRIES\" | grep \"$SAVCAT\")\"\n\t\t\t\tFAVHEAD=\"HEAD_$(grep -oP '#HEAD_\\K[^`]+' <<< \"$FAVHEADL\")\"\n\t\t\t\tif ! grep -q \"$FAVHEAD\" \"$TEMPF\" && [ \"$SAVCAT\" != \"CAT_\" ]; then\n\t\t\t\t\techo \"$FAVHEADL\" >> \"$TEMPF\"\n\t\t\t\tfi\n\n\t\t\t\tgrep \"'$savfav'\" \"$STLRAWENTRIES\" >> \"$TEMPF\"\n\t\t\tdone < \"$STLFAVMENUCFG\"\n\n\t\t\tgetFilteredEntries \"$TEMPF\" >> \"${FAVMENU}-${TMPL}\"\n\n\t\t\trm \"$TEMPF\" 2>/dev/null\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$(wc -l < \"${FAVMENU}-${TMPL}\")' selected Favorites - opening the Menu now\"\n\t\t\topenCustMenu \"$1\" \"$BACKFUNC\" \"Favorites\" \"$FAVMENU\" \"$LFM\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Still no Favorites defined - skipping\"\n\t\tfi\n\tfi\n}\n\nfunction listAllSettingsEntries {\n\tif [ -f \"$STLSETENTRIES\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$STLSETENTRIES' already exists - nothing to do\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating '$STLSETENTRIES'\"\n\t\twhile read -r ENTRY; do\n\t\t\techo \"$ENTRY\" | tee -a \"$STLRAWENTRIES\" >/dev/null\n\t\t\tgrep -oP \"\\('\\K[^\\')]+\" <<< \"$ENTRY\" | tee -a \"$STLSETENTRIES\" >/dev/null\n\t\tdone <<< \"$(sed -n \"/^#STARTSETENTRIES/,/^#ENDSETENTRIES/p;/^#ENDSETENTRIES/q\" \"$0\" | grep \"\\--field\")\"\n\tfi\n}\n\nfunction spanFont {\n\tSTRIN=\"$1\"\n\n\tif [ \"$2\" == \"H\" ]; then\n\t\tFOSI=\"$HEADLINEFONT\"\n\t\tFOWE=\"bold\"\n\tfi\n\n\tSPIN=\"<span font_size='$FOSI' font_weight='$FOWE'>\"\n\tSPOUT=\"</span>\"\n\techo \"$SPIN$STRIN$SPOUT\"\n}\n\nfunction AllSettingsEntriesDummyFunction {\n#STARTSETENTRIES\n\techo \\\n--field=\"$(spanFont \"$GUI_OPTSGUI\" \"H\")\":LBL \"SKIP\" `#CAT_Gui` `#HEAD_Gui` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STLLANG!$DESC_STLLANG ('STLLANG')\":CB \"$(cleanDropDown \"${STLLANG/#-/ -}\" \"$LANGYADLIST\")\" `#CAT_Gui` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STARTMENU!$DESC_STARTMENU ('STARTMENU')\":CB \"$(cleanDropDown \"${STARTMENU/#-/ -}\" \"Editor!Favorites!Game!Menu\")\" `#CAT_Gui` `#MENU_GLOBAL` \\\n--field=\"     $GUI_WAITEDITOR!$DESC_WAITEDITOR ('WAITEDITOR')\":NUM \"${WAITEDITOR/#-/ -}\" `#CAT_Gui` `#MENU_GAME` \\\n--field=\"     $GUI_MAXASK!$DESC_MAXASK ('MAXASK')\":NUM \"${MAXASK/#-/ -}\" `#CAT_Gui` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SAVESETSIZE!$DESC_SAVESETSIZE ('SAVESETSIZE')\":CHK \"${SAVESETSIZE/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_TOGGLEWINDOWS!$DESC_TOGGLEWINDOWS ('TOGGLEWINDOWS')\":CHK \"${TOGGLEWINDOWS/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USETRAYICON!$DESC_USETRAYICON ('USETRAYICON')\":CHK \"${USETRAYICON/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USENOTIFIER!$DESC_USENOTIFIER ('USENOTIFIER')\":CHK \"${USENOTIFIER/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_HEADLINEFONT!$DESC_HEADLINEFONT ('HEADLINEFONT')\":CB \"$(cleanDropDown \"${HEADLINEFONT/#-/ -}\" \"$FONTSIZES\")\" `#CAT_Gui` `#MENU_GLOBAL` \\\n--field=\"     $GUI_YADFORCEXWAYLAND!$DESC_YADFORCEXWAYLAND ('YADFORCEXWAYLAND')\":CHK \"${YADFORCEXWAYLAND/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEWINDECO!$DESC_USEWINDECO ('USEWINDECO')\":CHK \"${USEWINDECO/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_DLGAMEDATA!$DESC_DLGAMEDATA ('DLGAMEDATA')\":CHK \"${DLGAMEDATA/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_DLSTEAMDECKCOMPATINFO!$DESC_DLSTEAMDECKCOMPATINFO ('DLSTEAMDECKCOMPATINFO')\":CHK \"${DLSTEAMDECKCOMPATINFO}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEGAMEPICS!$DESC_USEGAMEPICS ('USEGAMEPICS')\":CHK \"${USEGAMEPICS/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USECUSTOMFALLBACKPIC!$DESC_USECUSTOMFALLBACKPIC ('USECUSTOMFALLBACKPIC')\":CHK \"${USECUSTOMFALLBACKPIC/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GITHUBUSER!$DESC_GITHUBUSER ('GITHUBUSER')\":CBE \"${GITHUBUSER/#-/ -}\" `#CAT_Gui` `#MENU_GLOBAL` \\\n--field=\"     $GUI_CHECKCOLLECTIONS!$DESC_CHECKCOLLECTIONS ('CHECKCOLLECTIONS')\":CHK \"${CHECKCOLLECTIONS/#-/ -}\" `#CAT_Gui` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSGRID\" \"H\")\":LBL \"SKIP\" `#CAT_SteamGridDB` `#HEAD_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDLTOSTEAM!$DESC_SGDBDLTOSTEAM ('SGDBDLTOSTEAM')\":CHK \"${SGDBDLTOSTEAM/#-/ -}\" `#CAT_SteamGridDB` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBAPIKEY!$DESC_SGDBAPIKEY ('SGDBAPIKEY')\":CBE \"${SGDBAPIKEY/#-/ -}\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBHASFILE!$DESC_SGDBHASFILE ('SGDBHASFILE')\":CB \"$(cleanDropDown \"${SGDBHASFILE/#-/ -}\" \"${SGDBHASFILEOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBAUTODL!$DESC_SGDBAUTODL ('SGDBAUTODL')\":CB \"$(cleanDropDown  \"${SGDBAUTODL/#-/ -}\" \"$NON!after_game!before_game!no_meta\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDLHERO!$DESC_SGDBDLHERO ('SGDBDLHERO')\":CHK \"${SGDBDLHERO/#-/ -}\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDIMS!$DESC_SGDBDIMS ('SGDBHERODIMS')\":CBE \"$(cleanDropDown \"${SGDBHERODIMS/#-/ -}\" \"${DEFSGDBHERODIMS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBTYPES!$DESC_SGDBTYPES ('SGDBHEROTYPES')\":CBE \"$(cleanDropDown \"${SGDBHEROTYPES/#-/ -}\" \"${SGDBTYPEOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBSTYLES!$DESC_SGDBSTYLES ('SGDBHEROSTYLES')\":CBE \"$(cleanDropDown \"${SGDBHEROSTYLES/#-/ -}\" \"${SGDBHEROSTYLEOPTS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBNSFW!$DESC_SGDBNSFW ('SGDBHERONSFW')\":CBE \"$(cleanDropDown \"${SGDBHERONSFW/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBHUMOR!$DESC_SGDBHUMOR ('SGDBHEROHUMOR')\":CBE \"$(cleanDropDown \"${SGDBHEROHUMOR/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBEPILEPSY!$DESC_SGDBEPILEPSY ('SGDBHEROEPILEPSY')\":CBE \"$(cleanDropDown \"${SGDBHEROEPILEPSY/#-/ -}\" \"$SGDBTAGOPTS\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDLLOGO!$DESC_SGDBDLLOGO ('SGDBDLLOGO')\":CHK \"${SGDBDLLOGO/#-/ -}\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBTYPES!$DESC_SGDBTYPES ('SGDBLOGOTYPES')\":CBE \"$(cleanDropDown \"${SGDBLOGOTYPES/#-/ -}\" \"${SGDBTYPEOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBSTYLES!$DESC_SGDBSTYLES ('SGDBLOGOSTYLES')\":CBE \"$(cleanDropDown \"${SGDBLOGOSTYLES/#-/ -}\" \"${SGDBLOGOSTYLEOPTS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBNSFW!$DESC_SGDBNSFW ('SGDBLOGONSFW')\":CBE \"$(cleanDropDown \"${SGDBLOGONSFW/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBHUMOR!$DESC_SGDBHUMOR ('SGDBLOGOHUMOR')\":CBE \"$(cleanDropDown \"${SGDBLOGOHUMOR/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBEPILEPSY!$DESC_SGDBEPILEPSY ('SGDBLOGOEPILEPSY')\":CBE \"$(cleanDropDown \"${SGDBLOGOEPILEPSY/#-/ -}\" \"$SGDBTAGOPTS\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDLBOXART!$DESC_SGDBDLBOXART ('SGDBDLBOXART')\":CHK \"${SGDBDLBOXART/#-/ -}\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDIMS!$DESC_SGDBDIMS ('SGDBBOXARTDIMS')\":CBE \"$(cleanDropDown \"${SGDBBOXARTDIMS/#-/ -}\" \"${DEFSGDBBOXARTDIMS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBTYPES!$DESC_SGDBTYPES ('SGDBBOXARTTYPES')\":CBE \"$(cleanDropDown \"${SGDBBOXARTTYPES/#-/ -}\" \"${SGDBTYPEOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBSTYLES!$DESC_SGDBSTYLES ('SGDBBOXARTSTYLES')\":CBE \"$(cleanDropDown \"${SGDBBOXARTSTYLES/#-/ -}\" \"${SGDBGRIDSTYLEOPTS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBNSFW!$DESC_SGDBNSFW ('SGDBBOXARTNSFW')\":CBE \"$(cleanDropDown \"${SGDBBOXARTNSFW/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBHUMOR!$DESC_SGDBHUMOR ('SGDBBOXARTHUMOR')\":CBE \"$(cleanDropDown \"${SGDBBOXARTHUMOR/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBEPILEPSY!$DESC_SGDBEPILEPSY ('SGDBBOXARTEPILEPSY')\":CBE \"$(cleanDropDown \"${SGDBBOXARTEPILEPSY/#-/ -}\" \"$SGDBTAGOPTS\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDLTENFOOT!$DESC_SGDBDLTENFOOT ('SGDBDLTENFOOT')\":CHK \"${SGDBDLTENFOOT/#-/ -}\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBDIMS!$DESC_SGDBDIMS ('SGDBTENFOOTDIMS')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTDIMS/#-/ -}\" \"${DEFSGDBTENFOOTDIMS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBTYPES!$DESC_SGDBTYPES ('SGDBTENFOOTTYPES')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTTYPES/#-/ -}\" \"${SGDBTYPEOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBSTYLES!$DESC_SGDBSTYLES ('SGDBTENFOOTSTYLES')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTSTYLES/#-/ -}\" \"${SGDBTNFTSTYLEOPTS//,/\\!}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBNSFW!$DESC_SGDBNSFW ('SGDBTENFOOTNSFW')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTNSFW/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBHUMOR!$DESC_SGDBHUMOR ('SGDBTENFOOTHUMOR')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTHUMOR/#-/ -}\" \"${SGDBTAGOPTS}\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"     $GUI_SGDBEPILEPSY!$DESC_SGDBEPILEPSY ('SGDBTENFOOTEPILEPSY')\":CBE \"$(cleanDropDown \"${SGDBTENFOOTEPILEPSY/#-/ -}\" \"$SGDBTAGOPTS\")\" `#CAT_SteamGridDB` `#MENU_GLOBAL` \\\n--field=\"$(spanFont \"$GUI_OPTSHMM\" \"H\")\":LBL \"SKIP\" `#CAT_HMM` `#HEAD_HMM` `#MENU_GLOBAL` \\\n--field=\"     $GUI_HMMDLVER!$DESC_HMMDLVER ('HMMDLVER')\":CB \"$(cleanDropDown \"${HMMDLVER/#-/ -}\" \"$HMMSTABLE!$HMMDEV\")\" `#CAT_HMM` `#MENU_GLOBAL` \\\n--field=\"     $GUI_HMMCOMPDATA!$DESC_HMMCOMPDATA ('HMMCOMPDATA')\":DIR \"${HMMCOMPDATA/#-/ -}\" `#CAT_HMM` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEHMMPROTON!$DESC_USEHMMPROTON ('USEHMMPROTON')\":CB \"$(cleanDropDown \"${USEHMMPROTON/#-/ -}\" \"$PROTYADLIST\")\" `#CAT_HMM` `#MENU_GLOBAL` \\\n--field=\"$(spanFont \"$GUI_OPTSMISC\" \"H\")\":LBL \"SKIP\" `#CAT_Misc` `#HEAD_Misc` `#MENU_GAME` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_KEEPSTLOPEN!$DESC_KEEPSTLOPEN ('KEEPSTLOPEN')\":CHK \"${KEEPSTLOPEN/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USECUSTOMCMD!$DESC_USECUSTOMCMD ('USECUSTOMCMD')\":CHK \"${USECUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTOMCMD!$DESC_CUSTOMCMD $GUI_ECHOPLAC ('CUSTOMCMD')\":FL \"${OPCUSTPATH/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTOMCMD_ARGS!$DESC_CUSTOMCMD_ARGS ('CUSTOMCMD_ARGS')\" \"$( printf \"%s\" \"${CUSTOMCMD_ARGS/#-/ -}\" )\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_FORK_CUSTOMCMD!$DESC_FORK_CUSTOMCMD ('FORK_CUSTOMCMD')\":CHK \"${FORK_CUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_EXTPROGS_CUSTOMCMD!$DESC_EXTPROGS_CUSTOMCMD ('EXTPROGS_CUSTOMCMD')\":CHK \"${EXTPROGS_CUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTOMCMD_USESLR!$DESC_CUSTOMCMD_USESLR ('CUSTOMCMD_USESLR')\":CHK \"${CUSTOMCMD_USESLR/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_ONLY_CUSTOMCMD!$DESC_ONLY_CUSTOMCMD ('ONLY_CUSTOMCMD')\":CHK \"${ONLY_CUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTOMCMD_FORCEWIN!$DESC_CUSTOMCMD_FORCEWIN ('CUSTOMCMDFORCEWIN')\":CHK \"${CUSTOMCMDFORCEWIN/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WAITFORCUSTOMCMD!$DESC_WAITFORCUSTOMCMD ('WAITFORCUSTOMCMD')\":NUM \"${WAITFORCUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_INJECT_CUSTOMCMD!$DESC_INJECT_CUSTOMCMD ('INJECT_CUSTOMCMD')\":CHK \"${INJECT_CUSTOMCMD/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_INJECTWAIT!$DESC_INJECTWAIT ('INJECTWAIT')\":NUM \"${INJECTWAIT/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEIGCS!$DESC_USEIGCS ('USEIGCS')\":CHK \"${USEIGCS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_UUUSEIGCS!$DESC_UUUSEIGCS ('UUUSEIGCS')\":CHK \"${UUUSEIGCS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_IGCSWAIT!$DESC_IGCSWAIT ('IGCSWAIT')\":NUM \"${IGCSWAIT/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_UUUSEPATCH!$DESC_UUUSEPATCH ('UUUSEPATCH')\":CHK \"${UUUSEPATCH/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_UUUPATCHWAIT!$DESC_UUUPATCHWAIT ('UUUPATCHWAIT')\":NUM \"${UUUPATCHWAIT/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USERSTART!$DESC_USERSTART $GUI_ECHOPLAC ('USERSTART')\":FL \"${USERSTART/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_USERSTOP!$DESC_USERSTOP $GUI_ECHOPLAC ('USERSTOP')\":FL \"${USERSTOP/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_GAMEARGS!$DESC_GAMEARGS ('GAMEARGS')\" \"${GAMEARGS/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_SORTGARGS!$DESC_SORTGARGS ('SORTGARGS')\":CHK \"${SORTGARGS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_HARDARGS!$DESC_HARDARGS ('HARDARGS')\":CBE \"$(cleanDropDown \"${HARDARGS/#-/ -}\" \"$ARGUMENTS\")\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_SLOARGS!$DESC_SLOARGS ('SLOARGS')\":RO \"${SLOARGS/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_CHANGE_PULSE_LATENCY!$DESC_CHANGE_PULSE_LATENCY ('CHANGE_PULSE_LATENCY')\":CHK \"${CHANGE_PULSE_LATENCY/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STL_PULSE_LATENCY_MSEC!$DESC_STL_PULSE_LATENCY_MSEC ('STL_PULSE_LATENCY_MSEC')\":NUM \"${STL_PULSE_LATENCY_MSEC/#-/ -}\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_LOGLEVEL!$DESC_LOGLEVEL ('LOGLEVEL')\":CB \"$(cleanDropDown \"${LOGLEVEL/#-/ -}\" \"0!1!2\")\" `#CAT_Misc` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RESETLOG!$DESC_RESETLOG ('RESETLOG')\":CHK \"${RESETLOG/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STEAMAPPIDFILE!$DESC_STEAMAPPIDFILE ('STEAMAPPIDFILE')\":CHK \"${STEAMAPPIDFILE/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SKIPINTDEPCHECK!$DESC_SKIPINTDEPCHECK ('SKIPINTDEPCHECK')\":CHK \"${SKIPINTDEPCHECK/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_NOSTEAMSTLDEF!$DESC_NOSTEAMSTLDEF ('NOSTEAMSTLDEF')\":CHK \"${NOSTEAMSTLDEF/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STORECOMPDATTITLE!$DESC_STORECOMPDATTITLE ('STORECOMPDATTITLE')\":CHK \"${STORECOMPDATTITLE/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_LOGPLAYTIME!$DESC_LOGPLAYTIME ('LOGPLAYTIME')\":CHK \"${LOGPLAYTIME/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_CRASHGUESS!$DESC_CRASHGUESS ('CRASHGUESS')\":NUM \"${CRASHGUESS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_HELPURL!$DESC_HELPURL ('HELPURL')\":CB \"$(cleanDropDown \"${HELPURL}\" \"${HUYLIST}${NON}\")\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_CREATEDESKTOPICON!$DESC_CREATEDESKTOPICON ('CREATEDESKTOPICON')\":NUM \"${CREATEDESKTOPICON}!0..3\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_GAMESCREENRES!$DESC_GAMESCREENRES ('GAMESCREENRES')\":CBE \"$(cleanDropDown \"${GAMESCREENRES/#-/ -}\" \"$(printf \"%s\\n\" \"$(listScreenRes | tr '\\n' '!')\")$NON\")\" `#CAT_Misc` `#MENU_GAME` \\\n--field=\"     $GUI_TOGSTEAMWEBHELPER!$DESC_TOGSTEAMWEBHELPER ('TOGSTEAMWEBHELPER')\":CHK \"${TOGSTEAMWEBHELPER/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEGEOELF!$DESC_USEGEOELF ('USEGEOELF')\":CHK \"${USEGEOELF/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOGEOELF!$DESC_AUTOGEOELF ('AUTOGEOELF')\":CHK \"${AUTOGEOELF/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEFWS!$DESC_USEFWS ('USEFWS')\":CHK \"${USEFWS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USETERM!$DESC_USETERM ('USETERM')\":FL \"${USETERM/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_TERMARGS!$DESC_TERMARGS ('TERMARGS')\" \"${TERMARGS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RUNSBS!$DESC_RUNSBS ('RUNSBS')\":CHK \"${RUNSBS/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SDLUSEWAYLAND!$DESC_SDLUSEWAYLAND ('SDLUSEWAYLAND')\":CHK \"${SDLUSEWAYLAND/#-/ -}\" `#CAT_Misc` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STLRAD_PFTST!$DESC_STLRAD_PFTST ('STLRAD_PFTST')\":CBE \"$(cleanDropDown \"${STLRAD_PFTST/#-/ -}\" \"none!gpl!sam!rt!emulate_rt!rtwave64!video_decode\")\"  `#CAT_Misc` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSPROTON\" \"H\")\":LBL \"SKIP\" `#CAT_Proton` `#HEAD_Proton` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEPROTON!$DESC_USEPROTON ('USEPROTON')\":CB \"$(cleanDropDown  \"${USEPROTON/#-/ -}\" \"$PROTYADLIST\")\" `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_USESLR!$DESC_USESLR ('USESLR')\":CHK \"${USESLR/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_FORCESLR!$DESC_FORCESLR ('FORCESLR')\":CHK \"${FORCESLR/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_IGNORECOMPATSLR!$DESC_IGNORECOMPATSLR ('IGNORECOMPATSLR')\":CHK \"${IGNORECOMPATSLR/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEREAP!$DESC_USEREAP ('USEREAP')\":CHK \"${USEREAP/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_FORCEREAP!$DESC_FORCEREAP ('FORCEREAP')\":CHK \"${FORCEREAP/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOLASTPROTON!$DESC_AUTOLASTPROTON ('AUTOLASTPROTON')\":CHK \"${AUTOLASTPROTON/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_REDIRCOMPDATA!$DESC_REDIRCOMPDATA ('REDIRCOMPDATA')\":CB \"$(cleanDropDown \"${REDIRCOMPDATA/#-/ -}\" \"disabled!single-proton!global-proton\")\" `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_REDIRSTEAMUSER!$DESC_REDIRSTEAMUSER ('REDIRSTEAMUSER')\":CB \"$(cleanDropDown \"${REDIRSTEAMUSER/#-/ -}\" \"disabled!symlink!restore-backup\")\" `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_ONLYPROTMAJORREDIRECT!$DESC_ONLYPROTMAJORREDIRECT ('ONLYPROTMAJORREDIRECT')\":CHK \"${ONLYPROTMAJORREDIRECT/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOBUMPGE!$DESC_AUTOBUMPGE ('AUTOBUMPGE')\":CHK \"${AUTOBUMPGE/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOBUMPPROTON!$DESC_AUTOBUMPPROTON ('AUTOBUMPPROTON')\":CHK \"${AUTOBUMPPROTON/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USESPECIALK!$DESC_USESPECIALK ('USESPECIALK')\":CHK \"${USESPECIALK/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SPEKVERS!$DESC_SPEKVERS ('SPEKVERS')\":CB \"$(cleanDropDown \"${SPEKVERS/#-/ -}\" \"stable!nightly!custom\")\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SPEKDLLNAME!$DESC_SPEKDLLNAME ('SPEKDLLNAME')\":CBE \"$( cleanDropDown \"${SPEKDLLNAME/#-/ -}\" \"$SPEKDLLNAMELIST\" )\" `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_USERESHSPEKPLUGIN!$DESC_USERESHSPEKPLUGIN ('USERESHSPEKPLUGIN')\":CHK \"${USERESHSPEKPLUGIN/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USESPEKD3D47!$DESC_USESPEKD3D47 ('USESPEKD3D47')\":CHK \"${USESPEKD3D47/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOSPEK!$DESC_AUTOSPEK ('AUTOSPEK')\":CHK \"${AUTOSPEK/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_LOG!$DESC_PROTON_LOG $HOME/steam-$AID.log ('PROTON_LOG')\":CHK \"${PROTON_LOG/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_LOG_DIR!$DESC_PROTON_LOG_DIR ('PROTON_LOG_DIR')\":DIR \"${PROTON_LOG_DIR/#-/ -}\" `#CAT_Proton` `#SUB_Directories` `#MENU_GAME` \\\n--field=\"     $GUI_USEWINEDEBUGPROTON!$DESC_USEWINEDEBUGPROTON ('USEWINEDEBUGPROTON')\":CHK \"${USEWINEDEBUGPROTON/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_NO_D3D10!$DESC_PROTON_NO_D3D10 ('PROTON_NO_D3D10')\":CHK \"${PROTON_NO_D3D10/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_NO_D3D11!$DESC_PROTON_NO_D3D11 ('PROTON_NO_D3D11')\":CHK \"${PROTON_NO_D3D11/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_NO_ESYNC!$DESC_PROTON_NO_ESYNC ('PROTON_NO_ESYNC')\":CHK \"${PROTON_NO_ESYNC/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_NO_FSYNC!$DESC_PROTON_NO_FSYNC ('PROTON_NO_FSYNC')\":CHK \"${PROTON_NO_FSYNC/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_ENABLE_WINESYNC!$DESC_ENABLE_WINESYNC ('ENABLE_WINESYNC')\":CHK \"${ENABLE_WINESYNC/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_ENABLE_NVAPI!$DESC_PROTON_ENABLE_NVAPI ('PROTON_ENABLE_NVAPI')\":CHK \"${PROTON_ENABLE_NVAPI/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_HIDE_NVIDIA_GPU!$DESC_PROTON_HIDE_NVIDIA_GPU ('PROTON_HIDE_NVIDIA_GPU')\":CHK \"${PROTON_HIDE_NVIDIA_GPU/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEDLSS!$DESC_USEDLSS ('USEDLSS')\":CHK \"${USEDLSS/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_USE_WINED3D!$DESC_PROTON_USE_WINED3D ('PROTON_USE_WINED3D')\":CHK \"${PROTON_USE_WINED3D/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_DEBUG_DIR!$DESC_PROTON_DEBUG_DIR ('PROTON_DEBUG_DIR')\":DIR \"${PROTON_DEBUG_DIR/#-/ -}\" `#CAT_Proton` `#SUB_Directories` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_DUMP_DEBUG_COMMANDS!$DESC_PROTON_DUMP_DEBUG_COMMANDS ('PROTON_DUMP_DEBUG_COMMANDS')\":CHK \"${PROTON_DUMP_DEBUG_COMMANDS/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PROTON_FORCE_LARGE_ADDRESS_AWARE!$DESC_PROTON_FORCE_LARGE_ADDRESS_AWARE ('PROTON_FORCE_LARGE_ADDRESS_AWARE')\":CHK \"${PROTON_FORCE_LARGE_ADDRESS_AWARE/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USE_STLDXVKCFG!$DESC_USE_STLDXVKCFG ('USE_STLDXVKCFG')\":CHK \"${USE_STLDXVKCFG/#-/ -}\" `#CAT_Proton` `#SUB_Dxvk` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_HUD!$DESC_DXVK_HUD ('DXVK_HUD')\":CBE \"$(cleanDropDown \"${DXVK_HUD/#-/ -}\" \"0!1\")\" `#CAT_Proton` `#SUB_Dxvk` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_LOG_LEVEL!$DESC_DXVK_LOG_LEVEL ('DXVK_LOG_LEVEL')\":CB \"$(cleanDropDown \"${DXVK_LOG_LEVEL/#-/ -}\" \"none!error!warn!info!debug\")\" `#CAT_Proton` `#SUB_Dxvk` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_LOG_PATH!$DESC_DXVK_LOG_PATH ('DXVK_LOG_PATH')\":DIR \"${DXVK_LOG_PATH/#-/ -}\" `#CAT_Proton` `#SUB_Directories` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_SCALE!$DESC_DXVK_SCALE ('DXVK_SCALE')\" \"${DXVK_SCALE/#-/ -}\" `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_FPSLIMIT!$DESC_DXVK_FPSLIMIT ('DXVK_FPSLIMIT')\":CBE \"$(cleanDropDown \"${DXVK_FPSLIMIT/#-/ -}\" \"none!30!60!75!90!120!144!165!240\")\"  `#CAT_Proton` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_ASYNC!$DESC_DXVK_ASYNC ('DXVK_ASYNC')\":CHK \"${DXVK_ASYNC/#-/ -}\" `#CAT_Proton` `#SUB_Dxvk` `#MENU_GAME` \\\n--field=\"     $GUI_DXVK_HDR!$DESC_DXVK_HDR ('DXVK_HDR')\":CHK \"${DXVK_HDR/#-/ -}\" `#CAT_Proton` `#SUB_Dxvk` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTPROTDLDIR!$DESC_CUSTPROTDLDIR ('CUSTPROTDLDIR')\":DIR \"${CUSTPROTDLDIR/#-/ -}\" `#CAT_Proton` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_CUSTPROTEXTDIR!$DESC_CUSTPROTEXTDIR ('CUSTPROTEXTDIR')\":DIR \"${CUSTPROTEXTDIR/#-/ -}\" `#CAT_Proton` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_CUPROTOCOMPAT!$DESC_CUPROTOCOMPAT ('CUPROTOCOMPAT')\":CHK \"${CUPROTOCOMPAT/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USESUSYM!$DESC_USESUSYM ('USESUSYM')\":CHK \"${USESUSYM/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEGLOBSUSYM!$DESC_USEGLOBSUSYM ('USEGLOBSUSYM')\":CHK \"${USEGLOBSUSYM/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_FIXSYMLINKS!$DESC_FIXSYMLINKS ('FIXSYMLINKS')\":CHK \"${FIXSYMLINKS/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_UNSYMLINK!$DESC_UNSYMLINK ('UNSYMLINK')\":CHK \"${UNSYMLINK/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DELPFX!$DESC_DELPFX ('DELPFX')\":CHK \"${DELPFX/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_BACKUPSTEAMUSER!$DESC_BACKUPSTEAMUSER ('BACKUPSTEAMUSER')\":CHK \"${BACKUPSTEAMUSER/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RESTORESTEAMUSER!$DESC_RESTORESTEAMUSER ('RESTORESTEAMUSER')\":CB \"$(cleanDropDown \"${RESTORESTEAMUSER/#-/ -}\" \"$NON!ask-always!ask-if-dst-has-no-backup-timestamp!ask-if-unsure!restore-always!restore-if-backup-timestamp-is-newer!restore-if-dst-has-no-backup-timestamp!restore-if-dst-is-empty\")\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CLEANPROTONTEMP!$DESC_CLEANPROTONTEMP ('CLEANPROTONTEMP')\":CHK \"${CLEANPROTONTEMP/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPDBRATING!$DESC_USEPDBRATING ('USEPDBRATING')\":CHK \"${USEPDBRATING/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_PDBRATINGCACHE!$DESC_PDBRATINGCACHE ('PDBRATINGCACHE')\":NUM \"${PDBRATINGCACHE/#-/ -}\" `#CAT_Proton` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"$(spanFont \"$GUI_OPTSVKD3D\" \"H\")\":LBL \"SKIP\" `#CAT_VKD3D` `#HEAD_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_USERAYTRACING!$DESC_USERAYTRACING ('USERAYTRACING')\":CHK \"${USERAYTRACING/#-/ -}\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_CONFIG!$DESC_STL_VKD3D_CONFIG ('STL_VKD3D_CONFIG')\":CB \"$(cleanDropDown \"${STL_VKD3D_CONFIG/#-/ -}\" \"$NON!vk_debug!skip_application_workarounds!dxr!dxr11!force_static_cbv!single_queue!no_upload_hvv!force_host_cached!no_invariant_position\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_DEBUG!$DESC_STL_VKD3D_DEBUG ('STL_VKD3D_DEBUG')\":CB \"$(cleanDropDown \"${STL_VKD3D_DEBUG/#-/ -}\" \"$NON!err!info!fixme!warn!trace\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_SHADER_DEBUG!$DESC_STL_VKD3D_SHADER_DEBUG ('STL_VKD3D_SHADER_DEBUG')\":CB \"$(cleanDropDown \"${STL_VKD3D_SHADER_DEBUG/#-/ -}\" \"$NON!err!info!fixme!warn!trace\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_LOG_FILE!$DESC_STL_VKD3D_LOG_FILE ('STL_VKD3D_LOG_FILE')\":CBE \"$(cleanDropDown \"${STL_VKD3D_LOG_FILE/#-/ -}\" \"$NON!$STLVKD3DLOGDIR\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_VULKAN_DEVICE!$DESC_STL_VKD3D_VULKAN_DEVICE ('STL_VKD3D_VULKAN_DEVICE')\":CBE \"$(cleanDropDown \"${STL_VKD3D_VULKAN_DEVICE/#-/ -}\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_FILTER_DEVICE_NAME!$DESC_STL_VKD3D_FILTER_DEVICE_NAME ('STL_VKD3D_FILTER_DEVICE_NAME')\":CBE \"$(cleanDropDown \"${STL_VKD3D_FILTER_DEVICE_NAME/#-/ -}\")\" `#CAT_VKD3D` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STL_VKD3D_DISABLE_EXTENSIONS!$DESC_STL_VKD3D_DISABLE_EXTENSIONS ('STL_VKD3D_DISABLE_EXTENSIONS')\":CBE \"$(cleanDropDown \"${STL_VKD3D_DISABLE_EXTENSIONS/#-/ -}\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_TEST_DEBUG!$DESC_STL_VKD3D_TEST_DEBUG ('STL_VKD3D_TEST_DEBUG')\":NUM \"${STL_VKD3D_TEST_DEBUG}!0..2\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_TEST_FILTER!$DESC_STL_VKD3D_TEST_FILTER ('STL_VKD3D_TEST_FILTER')\":CB \"$(cleanDropDown \"${STL_VKD3D_TEST_FILTER/#-/ -}\" \"$NON!clear_render_target\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_TEST_EXCLUDE!$DESC_STL_VKD3D_TEST_EXCLUDE ('STL_VKD3D_TEST_EXCLUDE')\":CB \"$(cleanDropDown \"${STL_VKD3D_TEST_EXCLUDE/#-/ -}\" \"$NON!test_root_signature_priority,test_conservative_rasterization_dxil\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_TEST_PLATFORM!$DESC_STL_VKD3D_TEST_PLATFORM ('STL_VKD3D_TEST_PLATFORM')\":CB \"$(cleanDropDown \"${STL_VKD3D_TEST_PLATFORM/#-/ -}\" \"$NON!wine!windows!other\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_TEST_BUG!$DESC_STL_VKD3D_TEST_BUG ('STL_VKD3D_TEST_BUG')\":CBE \"$(cleanDropDown \"${STL_VKD3D_TEST_BUG/#-/ -}\" \"$NON!0\")\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"     $GUI_STL_VKD3D_PROFILE_PATH!$DESC_STL_VKD3D_PROFILE_PATH ('STL_VKD3D_PROFILE_PATH')\":DIR \"${STL_VKD3D_PROFILE_PATH/#-/ -}\" `#CAT_VKD3D` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSSHADER\" \"H\")\":LBL \"SKIP\" `#CAT_Shader` `#HEAD_Shader` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USERESHADE!$DESC_USERESHADE ('USERESHADE')\":CHK \"${USERESHADE/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTOMCMDRESHADE!$DESC_CUSTOMCMDRESHADE ('CUSTOMCMDRESHADE')\":CHK \"${CUSTOMCMDRESHADE/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DOWNLOAD_RESHADE!$DESC_DOWNLOAD_RESHADE ('DOWNLOAD_RESHADE')\":CHK \"${DOWNLOAD_RESHADE/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RESHADEUPDATE!$DESC_RESHADEUPDATE ('RESHADEUPDATE')\":CHK \"${RESHADEUPDATE/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CREATERESHINI!$DESC_CREATERESHINI ('CREATERESHINI')\":CHK \"${CREATERESHINI/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RESHADEOVERRIDETOGGLE!$DESC_RESHADEOVERRIDETOGGLE ('RSOVRD')\":CHK \"${RSOVRD/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RSVERS!$DESC_RSVERS ('RSVERS')\" \"${RSVERS/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USERSSPEKVERS!$DESC_USERSSPEKVERS ('USERSSPEKVERS')\":CHK \"${USERSSPEKVERS/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RSSPEKVERS!$DESC_RSSPEKVERS ('RSSPEKVERS')\" \"${RSSPEKVERS/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_AUTOBUMPRESHADE!$DESC_AUTOBUMPRESHADE ('AUTOBUMPRESHADE')\":CHK \"${AUTOBUMPRESHADE/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RS_32!$DESC_RS_32 ('RS_32')\" \"${RS_32/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RS_64!$DESC_RS_64 ('RS_64')\" \"${RS_64/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RS_32_VK!$DESC_RS_32_VK ('RS_32_VK')\" \"${RS_32_VK/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RS_64_VK!$DESC_RS_64_VK ('RS_64_VK')\" \"${RS_64_VK/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_D3D47_32!$DESC_D3D47_32 ('D3D47_32')\" \"${D3D47_32/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_D3D47_64!$DESC_D3D47_64 ('D3D47_64')\" \"${D3D47_64/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RESHADEOVERRIDEVERSION!$DESC_RESHADEOVERRIDEVERSION ('RSOVRVERS')\":CBE \"$(cleanDropDown \"${RSOVRVERS/#-/ -}\" \"$RESHADEVERSIONS\")\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_RESHADEDLLNAME!$DESC_RESHADEDLLNAME ('RESHADEDLLNAME')\":CBE \"$(cleanDropDown \"${RESHADEDLLNAME/#-/ -}\" \"$RESHADEDLLNAMELIST\")\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_ARCHALTEXE!$DESC_ARCHALTEXE ('ARCHALTEXE')\":FL \"${ARCHALTEXE/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_ALTEXEPATH!$DESC_ALTEXEPATH ('ALTEXEPATH')\":DIR \"${ALTEXEPATH/#-/ -}\" `#CAT_Shader` `#SUB_Directories` `#MENU_GAME` \\\n--field=\"     $GUI_RESHADESRCDIR!$DESC_RESHADESRCDIR ('RESHADESRCDIR')\":DIR \"${RESHADESRCDIR/#-/ -}\" `#CAT_Shader` `#SUB_ReShade` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RESHADE_DEPTH3D!$DESC_RESHADE_DEPTH3D ('RESHADE_DEPTH3D')\":CHK \"${RESHADE_DEPTH3D/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DLSHADER!$DESC_DLSHADER ('DLSHADER')\":CHK \"${DLSHADER/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_CHOOSESHADERS!$DESC_CHOOSESHADERS ('CHOOSESHADERS')\":CHK \"${CHOOSESHADERS/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SBSRS!$DESC_SBSRS ('SBSRS')\":CHK \"${SBSRS/#-/ -}\" `#CAT_Shader` `#SUB_Checkbox` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_VULKANPOSTPROCESSOR!$DESC_VULKANPOSTPROCESSOR ('VULKANPOSTPROCESSOR')\":CB \"$( cleanDropDown \"${VULKANPOSTPROCESSOR/#-/ -}\" \"$NON!vkBasalt\" )\" `#CAT_Shader` `#MENU_GAME` \\\n--field=\"$(spanFont \"$PROGNAME $GUI_PATHS\" \"H\")\":LBL \"SKIP\" `#CAT_Paths` `#HEAD_Stl` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_GLOBALCOLLECTIONDIR!$DESC_GLOBALCOLLECTIONDIR ('GLOBALCOLLECTIONDIR')\":DIR \"${GLOBALCOLLECTIONDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALMISCDIR!$DESC_GLOBALMISCDIR ('GLOBALMISCDIR')\":DIR \"${GLOBALMISCDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALSBSTWEAKS!$DESC_GLOBALSBSTWEAKS ('GLOBALSBSTWEAKS')\":DIR \"${GLOBALSBSTWEAKS/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALTWEAKS!$DESC_GLOBALTWEAKS ('GLOBALTWEAKS')\":DIR \"${GLOBALTWEAKS/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALSTLLANGDIR!$DESC_GLOBALSTLLANGDIR ('GLOBALSTLLANGDIR')\":DIR \"${GLOBALSTLLANGDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALEVALDIR!$DESC_GLOBALEVALDIR ('GLOBALEVALDIR')\":DIR \"${GLOBALEVALDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALSTLGUIDIR!$DESC_GLOBALSTLGUIDIR ('GLOBALSTLGUIDIR')\":DIR \"${GLOBALSTLGUIDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $PROGNAME $GUI_LOGDIR!$(strFix \"$DESC_LOGDIR\" \"$PROGNAME\") ('LOGDIR')\":DIR \"${LOGDIR/#-/ -}\" `#CAT_Paths` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"$(spanFont \"$GUI_OPTSTOOLS\" \"H\")\":LBL \"SKIP\" `#CAT_Tools` `#HEAD_Tools` `#MENU_GAME` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_USEGAMEMODERUN!$DESC_USEGAMEMODERUN ('USEGAMEMODERUN')\":CHK \"${USEGAMEMODERUN/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEMANGOHUD!$DESC_USEMANGOHUD ('USEMANGOHUD')\":CHK \"${USEMANGOHUD/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEMANGOAPP!$DESC_USEMANGOAPP ('USEMANGOAPP')\":CHK \"${USEMANGOAPP/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_MAHUVAR!$DESC_MAHUVAR ('MAHUVAR')\":CHK \"${MAHUVAR/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_MAHUBIN!$DESC_MAHUBIN ('MAHUBIN')\":FL \"${MAHUBIN/#-/ -}\" `#CAT_Tools` `#MENU_GAME` \\\n--field=\"     $GUI_MAHUARGS!$DESC_MAHUARGS ('MAHUARGS')\":CBE \"${MAHUARGS/#-/ -}!no_display!fps_limit=60,show_fps_limit!ram,vram!battery,battery_icon,gamepad_battery,gamepad_battery_icon!arch!gamemode!vsync!gl_vsync!vulkan_driver!wine\" `#CAT_Tools` `#MENU_GAME` \\\n--field=\"     $GUI_MAHUDLSYM!$DESC_MAHUDLSYM ('MAHUDLSYM')\":CHK \"${MAHUDLSYM}\" `#CAT_Tools` `#MENU_GAME` \\\n--field=\"     $GUI_LDPMAHU!$DESC_LDPMAHU ('LDPMAHU')\":CHK \"${LDPMAHU/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEMANGOHUDSTLCFG!$DESC_USEMANGOHUDSTLCFG ('USEMANGOHUDSTLCFG')\":CHK \"${USEMANGOHUDSTLCFG/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEGAMESCOPE!$DESC_USEGAMESCOPE ('USEGAMESCOPE')\":CHK \"${USEGAMESCOPE/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_GAMESCOPE_ARGS!$DESC_GAMESCOPE_ARGS ('GAMESCOPE_ARGS')\" \"${GAMESCOPE_ARGS/#-/ -}\" `#CAT_Tools` `#MENU_GAME` \\\n--field=\"     $GUI_USEOBSCAP!$DESC_USEOBSCAP ('USEOBSCAP')\":CHK \"${USEOBSCAP/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEZINK!$DESC_USEZINK ('USEZINK')\":CHK \"${USEZINK/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPRIMERUN!$DESC_USEPRIMERUN ('USEPRIMERUN')\":CHK \"${USEPRIMERUN/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_NYRNA!$DESC_RUN_NYRNA ('RUN_NYRNA')\":CHK \"${RUN_NYRNA/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_REPLAY!$DESC_RUN_REPLAY ('RUN_REPLAY')\":CHK \"${RUN_REPLAY/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEBOXTRON!$DESC_USEBOXTRON ('USEBOXTRON')\":CHK \"${USEBOXTRON/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_BOXTRONCMD!$DESC_BOXTRONCMD ('BOXTRONCMD')\":FL \"${BOXTRONCMD/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_BOXTRONARGS!$DESC_BOXTRONARGS ('BOXTRONARGS')\" \"${BOXTRONARGS/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEROBERTA!$DESC_USEROBERTA ('USEROBERTA')\":CHK \"${USEROBERTA/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_ROBERTACMD!$DESC_ROBERTACMD ('ROBERTACMD')\":FL \"${ROBERTACMD/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_ROBERTAARGS!$DESC_ROBERTAARGS ('ROBERTAARGS')\" \"${ROBERTAARGS/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USELUXTORPEDA!$DESC_USELUXTORPEDA ('USELUXTORPEDA')\":CHK \"${USELUXTORPEDA/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_LUXTORPEDACMD!$DESC_LUXTORPEDACMD ('LUXTORPEDACMD')\":FL \"${LUXTORPEDACMD/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_LUXTORPEDAARGS!$DESC_LUXTORPEDAARGS ('LUXTORPEDAARGS')\" \"${LUXTORPEDAARGS/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USE_WDIB!$DESC_USE_WDIB ('USE_WDIB')\":CHK \"${USE_WDIB/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STLEDITOR!$DESC_STLEDITOR ('STLEDITOR')\":FL \"${STLEDITOR/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_BROWSER!$DESC_BROWSER ('BROWSER')\":FL \"${BROWSER/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_NOTY!$DESC_NOTY ('NOTY')\":FL \"${NOTY/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_NOTYARGS!$DESC_NOTYARGS ('NOTYARGS')\" \"${NOTYARGS/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USENETMON!$DESC_USENETMON ('USENETMON')\":CHK \"${USENETMON/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_NETMON!$DESC_NETMON ('NETMON')\":FL \"${NETMON/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_NETOPTS!$DESC_NETOPTS ('NETOPTS')\" \"${NETOPTS/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_NETMONDIR!$DESC_NETMONDIR ('NETMONDIR')\":DIR \"${NETMONDIR/#-/ -}\" `#CAT_Tools` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_BLOCKINTERNET!$DESC_BLOCKINTERNET ('BLOCKINTERNET')\":CHK \"${BLOCKINTERNET/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STRACERUN!$DESC_STRACERUN ('STRACERUN')\":CHK \"${STRACERUN/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STRACEDIR!$DESC_STRACEDIR ('STRACEDIR')\":DIR \"${STRACEDIR/#-/ -}\" `#CAT_Tools` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_STRACEOPTS!$DESC_STRACEOPTS ('STRACEOPTS')\" \"${STRACEOPTS/#-/ -}\" `#CAT_Tools` `#MENU_GAME` \\\n--field=\"     $GUI_AUTOCONTY!$DESC_AUTOCONTY ('AUTOCONTY')\":CHK \"${AUTOCONTY/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USECONTY!$DESC_USECONTY ('USECONTY')\":CHK \"${USECONTY/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_CUSTCONTY!$DESC_CUSTCONTY ('CUSTCONTY')\":FL \"${CUSTCONTY/#-/ -}\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_UPDATECONTY!$DESC_UPDATECONTY ('UPDATECONTY')\":CHK \"${UPDATECONTY/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RUN_X64DBG!$DESC_RUN_X64DBG ('RUN_X64DBG')\":CHK \"${RUN_X64DBG/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_X64DBG_ATTACHONSTARTUP!$DESC_X64DBG_ATTACHONSTARTUP ('X64DBG_ATTACHONSTARTUP')\":CHK \"${X64DBG_ATTACHONSTARTUP/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_GDB!$DESC_RUN_GDB ('RUN_GDB')\":CHK \"${RUN_GDB/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DPRSCOMPDATA!$DESC_DPRSCOMPDATA ('DPRSCOMPDATA')\":DIR \"${DPRSCOMPDATA/#-/ -}\" `#CAT_Tools` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEDPRSPROTON!$DESC_USEDPRSPROTON ('USEDPRSPROTON')\":CB \"$(cleanDropDown \"${USEDPRSPROTON/#-/ -}\" \"$PROTYADLIST\")\" `#CAT_Tools` `#MENU_GLOBAL` \\\n--field=\"     $GUI_DPRSUSEVDFSYMLINKS!$DESC_DPRSUSEVDFSYMLINKS ('DPRSUSEVDFSYMLINKS')\":CHK \"${DPRSUSEVDFSYMLINKS/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_DPRSPAUTOUP!$DESC_DPRSPAUTOUP ('DPRSPAUTOUP')\":CHK \"${DPRSPAUTOUP/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_RUN_DEPS!$DESC_RUN_DEPS ('RUN_DEPS')\":CHK \"${RUN_DEPS/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DEPSAUTOUP!$DESC_DEPSAUTOUP ('DEPSAUTOUP')\":CHK \"${DEPSAUTOUP/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEPEV_PELDD!$DESC_USEPEV_PELDD ('USEPEV_PELDD')\":CHK \"${USEPEV_PELDD/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_PEPACK!$DESC_USEPEV_PEPACK ('USEPEV_PEPACK')\":CHK \"${USEPEV_PEPACK/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_PERES!$DESC_USEPEV_PERES ('USEPEV_PERES')\":CHK \"${USEPEV_PERES/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_PESCAN!$DESC_USEPEV_PESCAN ('USEPEV_PESCAN')\":CHK \"${USEPEV_PESCAN/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_PESEC!$DESC_USEPEV_PESEC ('USEPEV_PESEC')\":CHK \"${USEPEV_PESEC/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_PESTR!$DESC_USEPEV_PESTR ('USEPEV_PESTR')\":CHK \"${USEPEV_PESTR/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEPEV_READPE!$DESC_USEPEV_READPE ('USEPEV_READPE')\":CHK \"${USEPEV_READPE/#-/ -}\" `#CAT_Tools` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSURLS\" \"H\")\":LBL \"SKIP\" `#CAT_Urls` `#HEAD_Urls` `#MENU_URL` \\\n--field=\"     $GUI_PROJECTPAGE!$(strFix \"$DESC_PROJECTPAGE\" \"$PROGNAME\") ('PROJECTPAGE')\" \"${PROJECTPAGE/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CP_PROTONTKG!$DESC_CP_PROTONTKG ('CP_PROTONTKG')\" \"${CP_PROTONTKG/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CP_PROTONGE!$DESC_CP_PROTONGE ('CP_PROTONGE')\" \"${CP_PROTONGE/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CP_PROTONSTL!$DESC_CP_PROTONSTL ('CP_PROTONSTL')\" \"${CP_PROTONSTL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CW_KRON4EK!$DESC_CW_KRON4EK ('CW_KRON4EK')\" \"${CW_KRON4EK/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CW_LUTRIS!$DESC_CW_LUTRIS ('CW_LUTRIS')\" \"${CW_LUTRIS/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CW_WINEGE!$DESC_CW_WINEGE ('CW_WINEGE')\" \"${CW_WINEGE/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_DL_D3D47_64!$DESC_DL_D3D47_64 ('DL_D3D47_64')\" \"${DL_D3D47_64/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_DL_D3D47_32!$DESC_DL_D3D47_32 ('DL_D3D47_32')\" \"${DL_D3D47_32/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_RESHADEDLURL!$DESC_RESHADEDLURL ('RESHADEDLURL')\" \"${RESHADEDLURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_VORTEXRELURL!$DESC_VORTEXRELURL ('VORTEXPROJURL')\" \"${VORTEXPROJURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_DXVKURL!$DESC_DXVKURL ('DXVKURL')\" \"${DXVKURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_XLIVEURL!$DESC_XLIVEURL ('XLIVEURL')\" \"${XLIVEURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_STASSURL!$DESC_STASSURL ('STASSURL')\" \"${STASSURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_WINETRICKSURL!$DESC_WINETRICKSURL ('WINETRICKSURL')\" \"${WINETRICKSURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_X64DBGURL!$DESC_X64DBGURL ('X64DBGURL')\" \"${X64DBGURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_STEAMGRIDDBAPI!$DESC_STEAMGRIDDBAPI ('BASESTEAMGRIDDBAPI')\" \"${BASESTEAMGRIDDBAPI/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_CONTYRELURL!$DESC_CONTYRELURL ('CONTYRELURL')\" \"${CONTYRELURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_MO2DLURL!$DESC_MO2DLURL ('MO2PROJURL')\" \"${MO2PROJURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_HMMDLURL!$DESC_HMMDLURL ('HMMPROJURL')\" \"${HMMPROJURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_SPEKPROJURL!$DESC_SPEKPROJURL ('SPEKPROJURL')\" \"${SPEKPROJURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_DPRSRELURL!$DESC_DPRSRELURL ('DPRSRELURL')\" \"${DPRSRELURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"     $GUI_DEPURL!$DESC_DEPURL ('DEPURL')\" \"${DEPURL/#-/ -}\" `#CAT_Urls` `#MENU_URL` \\\n--field=\"$(spanFont \"$GUI_OPTSVR\" \"H\")\":LBL \"SKIP\" `#CAT_VR` `#HEAD_VR` `#MENU_GAME` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_SBSVRGEOELF!$DESC_SBSVRGEOELF ('SBSVRGEOELF')\":CHK \"${SBSVRGEOELF/#-/ -}\" `#CAT_VR` `#SUB_Checkbox` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_SBSVRRS!$DESC_SBSVRRS ('SBSVRRS')\":CHK \"${SBSVRRS/#-/ -}\" `#CAT_VR` `#SUB_Checkbox` `#SUB_ReShade` `#MENU_GAME` \\\n--field=\"     $GUI_RUNSBSVR!$DESC_RUNSBSVR ('RUNSBSVR')\":CHK \"${RUNSBSVR/#-/ -}\" `#CAT_VR` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_SBSZOOM!$DESC_SBSZOOM ('SBSZOOM')\" \"${SBSZOOM/#-/ -}\" `#CAT_VR` `#MENU_GAME` \\\n--field=\"     $GUI_MINVRWINH!$DESC_MINVRWINH ('MINVRWINH')\":NUM \"${MINVRWINH/#-/ -}\" `#CAT_VR` `#MENU_GAME` \\\n--field=\"     $GUI_VRVIDEOPLAYER!$DESC_VRVIDEOPLAYER ('VRVIDEOPLAYER')\":FL \"${VRVIDEOPLAYER/#-/ -}\" `#CAT_VR` `#MENU_GLOBAL` \\\n--field=\"     $GUI_VRVIDEOPLAYERARGS!$DESC_VRVIDEOPLAYERARGS ('VRVIDEOPLAYERARGS')\" \"${VRVIDEOPLAYERARGS/#-/ -}\" `#CAT_VR` `#MENU_GAME` \\\n--field=\"     $GUI_WAITFORTHISPID!$DESC_WAITFORTHISPID ('WAITFORTHISPID')\" \"${WAITFORTHISPID/#-/ -}\" `#CAT_VR` `#MENU_GAME` \\\n--field=\"     $GUI_UUUSEVR!$DESC_UUUSEVR ('UUUSEVR')\":CHK \"${UUUSEVR/#-/ -}\" `#CAT_VR` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEOPENVRFSR!$DESC_USEOPENVRFSR ('USEOPENVRFSR')\":CHK \"${USEOPENVRFSR/#-/ -}\" `#CAT_VR` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSVORTEX\" \"H\")\":LBL \"SKIP\" `#CAT_Vortex` `#HEAD_Vortex` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEVORTEX!$DESC_USEVORTEX ('USEVORTEX')\":CHK \"${USEVORTEX/#-/ -}\" `#CAT_Vortex` `#MENU_GAME` \\\n--field=\"     $GUI_VORTEXDEVICESCALEFACTOR!$DESC_VORTEXDEVICESCALEFACTOR ('VORTEXDEVICESCALEFACTOR')\" \"${VORTEXDEVICESCALEFACTOR/#-/ -}\" `#CAT_Vortex` `#MENU_GLOBAL` \\\n--field=\"     $GUI_WAITVORTEX!$DESC_WAITVORTEX ('WAITVORTEX')\":NUM \"${WAITVORTEX/#-/ -}\" `#CAT_Vortex` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_VORTEX_WINETRICKS!$DESC_RUN_VORTEX_WINETRICKS ('RUN_VORTEX_WINETRICKS')\":CHK \"${RUN_VORTEX_WINETRICKS/#-/ -}\" `#CAT_Vortex` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_VORTEX_WINECFG!$DESC_RUN_VORTEX_WINECFG ('RUN_VORTEX_WINECFG')\":CHK \"${RUN_VORTEX_WINECFG/#-/ -}\" `#CAT_Vortex` `#MENU_GAME` \\\n--field=\"     $GUI_USEVORTEXPRERELEASE!$DESC_USEVORTEXPRERELEASE ('USEVORTEXPRERELEASE')\":CHK \"${USEVORTEXPRERELEASE/#-/ -}\" `#CAT_Vortex` `#SUB_Checkbox` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_DISABLEVORTEXAUTOUPDATE!$DESC_DISABLEVORTEXAUTOUPDATE ('DISABLEVORTEXAUTOUPDATE')\":CHK \"${DISABLEVORTEXAUTOUPDATE/#-/ -}\" `#CAT_Vortex` `#SUB_Checkbox` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_VORTEXUSESLR!$DESC_VORTEXUSESLR ('VORTEXUSESLR')\":CHK \"${VORTEXUSESLR#-/ -}\" `#CAT_Vortex` `#SUB_Checkbox` `#MENU_GLOBAL`  \\\n--field=\"     $GUI_VORTEXDOWNLOADPATH!$DESC_VORTEXDOWNLOADPATH ('VORTEXDOWNLOADPATH')\":DIR \"${VORTEXDOWNLOADPATH/#-/ -}\" `#CAT_Vortex` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_VORTEXCOMPDATA!$DESC_VORTEXCOMPDATA ('VORTEXCOMPDATA')\":DIR \"${VORTEXCOMPDATA/#-/ -}\" `#CAT_Vortex` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEVORTEXPROTON!$DESC_USEVORTEXPROTON ('USEVORTEXPROTON')\":CB \"$(cleanDropDown \"${USEVORTEXPROTON/#-/ -}\" \"$PROTYADLIST\")\" `#CAT_Vortex` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEVORTEXCUSTOMVER!$DESC_USEVORTEXCUSTOMVER ('USEVORTEXCUSTOMVER')\":CHK \"${USEVORTEXCUSTOMVER#-/ -}\" `#CAT_Vortex` `#SUB_checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_VORTEXCUSTOMVER!$DESC_VORTEXCUSTOMVER ('VORTEXCUSTOMVER')\":CBE \"$( cleanDropDown \"${VORTEXCUSTOMVER/#-/ -}\" \"v1.8.0!v1.7.0!v1.6.0!$NON\" )\" `#CAT_Vortex` `#SUB_checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_DISABLE_AUTOSTAGES!$(strFix \"$DESC_DISABLE_AUTOSTAGES\" \"$PROGNAME\") ('DISABLE_AUTOSTAGES')\":CHK \"${DISABLE_AUTOSTAGES/#-/ -}\" `#CAT_Vortex` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_VORTEXUSESLRPOSTINSTALL!$DESC_VORTEXUSESLRPOSTINSTALL ('VORTEXUSESLRPOSTINSTALL')\":CHK \"${VORTEXUSESLRPOSTINSTALL#-/ -}\" `#CAT_Vortex` `#SUB_Checkbox` `#MENU_GLOBAL`  \\\n--field=\"$(spanFont \"$GUI_OPTSWINE\" \"H\")\":LBL \"SKIP\" `#CAT_Wine` `#HEAD_Wine` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEWINE!$DESC_USEWINE ('USEWINE')\":CHK \"${USEWINE/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINEVERSION!$DESC_WINEVERSION ('WINEVERSION')\":CBE \"$(cleanDropDown \"${WINEVERSION/#-/ -}\" \"$WINEYADLIST\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_WINEDEFAULT!$DESC_WINEDEFAULT ('WINEDEFAULT')\":CBE \"$(cleanDropDown \"${WINEDEFAULT/#-/ -}\" \"$WINEYADLIST\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_WINETRICKS!$DESC_RUN_WINETRICKS ('RUN_WINETRICKS')\":CHK \"${RUN_WINETRICKS/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_DLWINETRICKS!$DESC_DLWINETRICKS ('DLWINETRICKS')\":CHK \"${DLWINETRICKS/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_WINETRICKSPAKS!$DESC_WINETRICKSPAKS ('WINETRICKSPAKS')\":CBE \"$(cleanDropDown \"${WINETRICKSPAKS/#-/ -}\" \"$SOMEPOPULARWINEPAKS\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_RUN_WINECFG!$DESC_RUN_WINECFG ('RUN_WINECFG')\":CHK \"${RUN_WINECFG/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_REGEDIT!$DESC_REGEDIT ('REGEDIT')\":CHK \"${REGEDIT/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_VIRTUALDESKTOP!$DESC_VIRTUALDESKTOP ('VIRTUALDESKTOP')\":CHK \"${VIRTUALDESKTOP/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME`  \\\n--field=\"     $GUI_VDRES!$DESC_VDRES ('VDRES')\":CBE \"$(cleanDropDown \"${VDRES/#-/ -}\" \"$(printf \"%s\\n\" \"$(listScreenRes | tr '\\n' '!')\")$NON\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_USEWICO!$DESC_USEWICO ('USEWICO')\":CHK \"${USEWICO/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_STLWINEDEBUG!$DESC_STLWINEDEBUG ('STLWINEDEBUG')\":CBE \"$(cleanDropDown \"${STLWINEDEBUG/#-/ -}\" \"$SOMEWINEDEBUGOPTIONS\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_STLWINEDLLOVERRIDES!$DESC_STLWINEDLLOVERRIDES ('STLWINEDLLOVERRIDES')\":CBE \"$(cleanDropDown \"${STLWINEDLLOVERRIDES/#-/ -}\" \"$SOMEWINEDLLOVERRIDES\")\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"     $GUI_WINE_FULLSCREEN_INTEGER_SCALING!$DESC_WINE_FULLSCREEN_INTEGER_SCALING ('WINE_FULLSCREEN_INTEGER_SCALING')\":CHK \"${WINE_FULLSCREEN_INTEGER_SCALING/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINE_FULLSCREEN_FSR!$DESC_WINE_FULLSCREEN_FSR ('WINE_FULLSCREEN_FSR')\":CHK \"${WINE_FULLSCREEN_FSR/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINE_FULLSCREEN_FSR_STRENGTH!$DESC_WINE_FULLSCREEN_FSR_STRENGTH ('WINE_FULLSCREEN_FSR_STRENGTH')\":NUM \"${WINE_FULLSCREEN_FSR_STRENGTH/#-/ -}!0..5\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINE_FULLSCREEN_FSR_MODE!$DESC_WINE_FULLSCREEN_FSR_MODE ('WINE_FULLSCREEN_FSR_MODE')\":CBE \"$(cleanDropDown \"${WINE_FULLSCREEN_FSR_MODE/#-/ -}\" \"none!performance!balanced!quality!ultra\")\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINE_FULLSCREEN_FSR_CUSTOM_MODE!$DESC_WINE_FULLSCREEN_FSR_CUSTOM_MODE ('WINE_FULLSCREEN_FSR_CUSTOM_MODE')\":CBE \"$(cleanDropDown \"${WINE_FULLSCREEN_FSR_CUSTOM_MODE/#-/ -}\" \"none!$(printf \"%s!\" \"${WINE_FSR_CUSTOM_RESOLUTIONS[@]}\" | sed 's/!$//')\")\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_WINEDLDIR!$DESC_WINEDLDIR ('WINEDLDIR')\":DIR \"${WINEDLDIR/#-/ -}\" `#CAT_Wine` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_WINEEXTDIR!$DESC_WINEEXTDIR ('WINEEXTDIR')\":DIR \"${WINEEXTDIR/#-/ -}\" `#CAT_Wine` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_WINE_LOG_DIR!$DESC_WINE_LOG_DIR ('WINE_LOG_DIR')\":DIR \"${WINE_LOG_DIR/#-/ -}\" `#CAT_Wine` `#SUB_Directories` `#MENU_GAME` \\\n--field=\"     $GUI_ONLYWICO!$DESC_ONLYWICO ('ONLYWICO')\":CHK \"${ONLYWICO/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_USEGLOBALWINEDPI!$DESC_USEGLOBALWINEDPI ('USEGLOBALWINEDPI')\":CHK \"${USEGLOBALWINEDPI/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_GLOBALWINEDPI!$DESC_GLOBALWINEDPI ('GLOBALWINEDPI')\":CBE \"$( cleanDropDown \"${GLOBALWINEDPI/#-/ -}\" \"$WINEDPIVALUES\" )\" `#CAT_Wine` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEPERGAMEWINEDPI!$DESC_USEPERGAMEWINEDPI ('USEPERGAMEWINEDPI')\":CHK \"${USEPERGAMEWINEDPI/#-/ -}\" `#CAT_Wine` `#SUB_Checkbox` `#MENU_GAME` \\\n--field=\"     $GUI_PERGAMEWINEDPI!$DESC_PERGAMEWINEDPI ('PERGAMEWINEDPI')\":CBE \"$( cleanDropDown \"${PERGAMEWINEDPI/#-/ -}\" \"$WINEDPIVALUES\" )\" `#CAT_Wine` `#MENU_GAME` \\\n--field=\"$(spanFont \"$GUI_OPTSMO2\" \"H\")\":LBL \"SKIP\" `#CAT_MO2` `#HEAD_Vortex` `#MENU_GAME` `#MENU_GLOBAL` \\\n--field=\"     $GUI_MO2COMPDATA!$DESC_MO2COMPDATA ('MO2COMPDATA')\":DIR \"${MO2COMPDATA/#-/ -}\" `#CAT_MO2` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEMO2PROTON!$DESC_USEMO2PROTON ('USEMO2PROTON')\":CB \"$(cleanDropDown \"${USEMO2PROTON/#-/ -}\" \"$PROTYADLIST\")\" `#CAT_MO2` `#MENU_GLOBAL` \\\n--field=\"     $GUI_USEMO2CUSTOMINSTALLER!$DESC_USEMO2CUSTOMINSTALLER ('USEMO2CUSTOMINSTALLER')\":CHK \"${USEMO2CUSTOMINSTALLER/#- -}\" `#CAT_MO2` `#SUB_Checkbox` `#MENU_GLOBAL` \\\n--field=\"     $GUI_MO2CUSTOMINSTALLER!$DESC_MO2CUSTOMINSTALLER ('MO2CUSTOMINSTALLER')\":FL \"${MO2CUSTOMINSTALLER/#-/ -}\" `#CAT_MO2` `#SUB_Directories` `#MENU_GLOBAL` \\\n--field=\"     $GUI_MO2MODE!$DESC_MO2MODE ('MO2MODE')\":CB \"$(cleanDropDown \"${MO2MODE/#-/ -}\" \"disabled!gui!silent\")\" `#CAT_MO2` `#MENU_GAME` \\\n--field=\"     $GUI_WAITMO2!$DESC_WAITMO2 ('WAITMO2')\":NUM \"${WAITMO2/#-/ -}\" `#CAT_MO2` `#MENU_GAME` \\\n--field=\"     $GUI_MO2SILENTMODEEXEOVERRIDE!$DESC_MO2SILENTMODEEXEOVERRIDE ('MO2SILENTMODEEXEOVERRIDE')\":CBE \"$(cleanDropDown \"${MO2SILENTMODEEXEOVERRIDE/#-/ -}\" \"$MO2SILENTMODEEXEPROFILES\" )\" `#CAT_MO2` `#MENU_GAME` \\\n#ENDSETENTRIES\n}\n\nfunction rmCfgTemp {\n\tif [ -n \"$MKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Deleting and resetting MKCFG '$MKCFG' - triggered from '$1'\"\n\t\trm \"$MKCFG\" 2>/dev/null\n\t\tunset \"MKCFG\"\n\tfi\n}\n\nfunction mkCfgTemp {\n\trmCfgTemp \"${FUNCNAME[0]}\"\n\tMKCFG=\"$(mktemp \"$STLSHM/menu.XXXXXXXX\")\"\n}\n\nfunction prepareMenu {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Menu\"\n\tGOBACK=1\n\n\tloadCfg \"$STLDEFGLOBALCFG\"\n\tloadCfg \"$STLGAMECFG\"\n\tloadCfg \"$STLURLCFG\"\n\n\tresetAID \"$1\"\n\tcreateGameCfg\n\tsetGN \"$1\"\n\n\tif [ -z \"$GN\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No game name found for '$AID' - this should not happen\"\n\t\texit\n\tfi\n\tcreateDropdownLists\n\tgetAvailableCfgs\n}\n\nfunction openGameMenu {\n\tprepareMenu \"$@\"\n\tif [ -z \"$2\" ]; then\n\t\tFUNC=\"$NON\"\n\telse\n\t\tFUNC=\"$2\"\n\tfi\n\tPARGUI=\"${FUNCNAME[0]}\"\n\topenMenu \"$AID\" \"$FUNC\" \"$STLGAMECFG\" \"0\" \"$GAMEMENU\" \"$LGAM\" \"$SHOWPIC\" \"EMPTY\" \"EMPTY\" \"$(strFix \"$GUI_SETHEAD1\" \"$SGNAID\")\" \"MENU_GAME\"\n}\n\nfunction openGameDefaultMenu {\n\tprepareMenu \"$@\"\n\tif [ -z \"$2\" ]; then\n\t\tFUNC=\"$NON\"\n\telse\n\t\tFUNC=\"$2\"\n\tfi\n\tPARGUI=\"${FUNCNAME[0]}\"\n\topenMenu \"$AID\" \"$FUNC\" \"$STLDEFGAMECFG\" \"0\" \"$GAMETEMPMENU\" \"$LGATM\" \"$NOICON\" \"EMPTY\" \"EMPTY\" \"$GUI_SETHEAD2\" \"MENU_GAME\"\n}\n\nfunction openGlobalMenu {\n\tprepareMenu \"$@\"\n\tautoBumpReShade\n\tif [ -z \"$2\" ]; then\n\t\tFUNC=\"$NON\"\n\telse\n\t\tFUNC=\"$2\"\n\tfi\n\tPARGUI=\"${FUNCNAME[0]}\"\n\topenMenu \"$AID\" \"$FUNC\" \"$STLDEFGLOBALCFG\" \"0\" \"$GLOBALMENU\" \"$LGLM\" \"$NOICON\" \"EMPTY\" \"EMPTY\" \"$GUI_SETHEAD3\" \"MENU_GLOBAL\"\n}\n\nfunction startSteamGame {\n\tif [ \"$ISGAME\" -ge 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting game\"\n\telse\n\t\tif [ \"$ISGAME\" -ne 1 ] && [ \"$AID\" != \"$PLACEHOLDERAID\" ]; then\n\t\t\tSTEAMARGS=(-applaunch \"$AID\")\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - -------- starting game $AID in steam --------\" \"E\"\n\t\t\tFINALSTARTCMD=(\"$STEAM\" \"${STEAMARGS[@]}\")\n\t\t\tstartGame \"${FINALSTARTCMD[@]}\" 2>/dev/null >/dev/null &\n\t\tfi\n\tfi\n}\n\nfunction openCustMenu {\n\tMYCAT=\"$3\"\n\tMYMENU=\"$4\"\n\tMYFUNC=\"$5\"\n\n\tprepareMenu \"$@\"\n\n\tcreateGameCfg\n\tcreateDropdownLists\n\n\tTITLE=\"${PROGNAME}-${MYCAT}\"\n\tpollWinRes \"$TITLE\" 1\n\n\tsetShowPic\n\tcp \"$SHOWPIC\" \"$FAVPIC\"\n\n\tmkCfgTemp \"${FUNCNAME[0]}\"\n\n\tif [ \"$2\" == \"$NON\" ]; then\n\t\tBUT0=\"$BUT_EXIT\"\n\t\tGOTO=\"Exit\"\n\telse\n\t\tBUT0=\"$BUT_BACK\"\n\t\tGOTO=\"$2\"\n\tfi\n\n\tBUT2=\"$BUT_MAINMENU\"\n\tBUT4=\"$BUT_RELOAD\"\n\tBUT6=\"$BUT_SAVERELOAD\"\n\tBUT8=\"$BUT_SAVEPLAY\"\n\tBUT10=\"$BUT_PLAY\"\n\n\tMYTMPL=\"${MYMENU}-${TMPL}\"\n\n\tif [ \"$MYCAT\" == \"Favorites\" ]; then\n\t\tMYTEXT=\"$(strFix \"$GUI_FAVORITESMENU\" \"$SGNAID\")\"\n\telse\n\t\tMYTEXT=\"$(strFix \"$GUI_CATMENU\" \"$SGNAID\" \"$MYCAT\")\"\n\t\tif [ ! -f \"$MYTMPL\" ]; then\n\t\t\tgrep \"CAT_${MYCAT}\" \"$STLRAWENTRIES\" > \"$MYTMPL\"\n\t\tfi\n\tfi\n\n\t# shellcheck disable=SC2028 # doesn't like the newline seperator, but it is valid\n\t{\n\t\techo \"function $MYFUNC {\"\n\t\techo \"\\\"$YAD\\\" --columns=\\\"$COLCOUNT\\\" --f1-action=\\\"$F1ACTIONCG\\\" --text=\\\"$(spanFont \"$MYTEXT\" \"H\")\\\" \\\\\"\n\t\techo \"--title=\\\"$TITLE\\\" --image \\\"$FAVPIC\\\" --image-on-top --window-icon=\\\"$STLICON\\\" --center \\\"$WINDECO\\\" --form --separator=\\\"\\\\n\\\" --quoted-output \\\\\"\n\t\techo \"--button=\\\"$BUT0\\\":0 --button=\\\"$BUT2\\\":2 --button=\\\"$BUT4\\\":4 --button=\\\"$BUT6\\\":6 --button=\\\"$BUT8\\\":8 --button=\\\"$BUT10\\\":10 $GEOM \\\\\"\n\t\tcat \"$MYTMPL\"\n\t\techo \"--scroll\"\n\t\techo \"}\"\n\t} >\"$MYMENU\"\n\n\tsource \"$MYMENU\"\n\n\tif [ -z \"$MYFUNC\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Seems like some arguments are missing - got '$*'\"\n\telse\n\t\t\"$MYFUNC\" > \"$MKCFG\"\n\t\tcase $? in\n\t\t0)  {\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT0\" \"Category '$MYCAT' Menu\" \"$GOTO\"\n\t\t\t\tif [ \"$GOTO\" == \"Exit\" ]; then\n\t\t\t\t\tGOBACK=0\n\t\t\t\t\tcloseSTL \" ######### STOP EARLY $PROGNAME $PROGVERS #########\"\n\t\t\t\t\texit\n\t\t\t\telse\n\t\t\t\t\trmCfgTemp \"${FUNCNAME[0]}\"\n\t\t\t\tfi\n\t\t\t}\n\t\t;;\n\t\t2) \t{\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT2\" \"Category '$MYCAT' Menu\" \"$SETMENU\"\n\t\t\t\tMainMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t\t}\n\t\t;;\n\t\t4) \t{\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT4\" \"Category '$MYCAT' Menu\" \"restart Menu\"\n\t\t\t\tGOBACK=0\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Reload Configs and restart Category '$MYCAT' Menu\"\n\t\t\t\tif [ \"$SAVESETSIZE\" -eq 1 ] ; then\tsleep 1;\tfi\n\t\t\t\t\"${FUNCNAME[0]}\" \"$@\"\n\t\t\t}\n\t\t;;\n\t\t6) {\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT6\" \"Category '$MYCAT' Menu\" \"restart Menu\"\n\t\t\t\tGOBACK=0\n\t\t\t\tsaveMenuEntries \"$MYMENU\"\n\t\t\t\tif [ \"$SAVESETSIZE\" -eq 1 ] ; then\tsleep 1;\tfi\n\n\t\t\t\tif [ \"$MYCAT\" == \"$GCD\" ];then\n\t\t\t\t\tsetGameCfgDiffs\n\t\t\t\tfi\n\t\t\t\t\"${FUNCNAME[0]}\" \"$@\"\n\t\t\t}\n\t\t;;\n\t\t8) \t{\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT8\" \"Category '$MYCAT' Menu\" \"Game Start\"\n\t\t\t\tGOBACK=0\n\t\t\t\tsaveMenuEntries \"$MYMENU\"\n\t\t\t\tstartSteamGame\n\t\t\t}\n\t\t;;\n\t\t10)\t{\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT10\" \"Category '$MYCAT' Menu\" \"Game Start\"\n\t\t\t\tGOBACK=0\n\t\t\t\tstartSteamGame\n\t\t\t}\n\t\t;;\n\t\tesac\n\t\trmCfgTemp \"${FUNCNAME[0]}\"\n\t\tgoBackToPrevFunction \"${FUNCNAME[0]}\" \"$2\" \"$GOBACK\"\n\tfi\n}\n\nfunction setGuiSortOrder {\n\tif [ ! -f \"$STLMENUSORTCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$STLMENUSORTCFG' missing\"\n\t\tgetCatsFromCode > \"$STLMENUSORTCFG\" 2>/dev/null\n\tfi\n\texport CURWIKI=\"$PPW/Gui-Sort-Order\"\n\tTITLE=\"${PROGNAME}-SortCategories\"\n\tpollWinRes \"$TITLE\"\n\n\tNEWSORT=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --center --on-top \"$WINDECO\" \\\n\t\t--list --editable --column \"Category\" --separator=\"\" --print-all \\\n\t\t--title=\"$TITLE\" --text=\"$(spanFont \"$GUI_SORTCAT\" \"H\")\" \"$GEOM\" < \"$STLMENUSORTCFG\")\"\n\tcase $? in\n\t\t0) \t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Clicked OK - Saving new sortorder into '$STLMENUSORTCFG'\"\n\t\t\t\techo \"$NEWSORT\" > \"$STLMENUSORTCFG\"\n\t\t\t}\n\t\t;;\n\t\t1)\t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Clicked Cancel\"\n\t\t\t}\n\t\t;;\n\tesac\n}\n\nfunction setGuiFavoritesSelection {\n\texport CURWIKI=\"$PPW/Favorites-Menu\"\n\tTITLE=\"${PROGNAME}-FavoritesSelection\"\n\tpollWinRes \"$TITLE\"\n\n\tsetShowPic\n\n\tFAVENTRIES=\"$(favoritesMenuEntries | \\\n\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center \"$WINDECO\" --list --checklist \\\n\t--column=\"$GUI_ADD\" --column=\"$GUI_DESC\" --column=\"$GUI_VAR\" --column=\"LongDesc\" --separator=\"\\n\" --print-column=\"3\" --tooltip-column 4 --hide-column 4 \\\n\t--text=\"$(spanFont \"$GUI_FAVORITESSEL\" \"H\")\" --title=\"$TITLE\" \"$GEOM\")\"\n\tcase $? in\n\t\t0)  {\n\t\t\t\tif [ -n \"$FAVENTRIES\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating '$STLFAVMENUCFG' with selected Favorites\"\n\t\t\t\t\techo \"${FAVENTRIES[@]}\" > \"$STLFAVMENUCFG\"\n\t\t\t\t\tsort -u \"$STLFAVMENUCFG\" -o \"$STLFAVMENUCFG\"\n\t\t\t\t\trm \"${FAVMENU}-${TMPL}\" 2>/dev/null\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Nothing selected\"\n\t\t\t\tfi\n\t\t\t}\n\t\t;;\n\t\t1)  {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected CANCEL - creating empty '$STLFAVMENUCFG' to skip asking again\"\n\t\t\t\ttouch \"$STLFAVMENUCFG\"\n\t\t\t}\n\t\t;;\n\tesac\n\n\tgoBackToPrevFunction \"${FUNCNAME[0]}\" \"$2\"\n}\n\nfunction setGuiBlockSelection {\n\texport CURWIKI=\"$PPW/Gui-Hide-Categories\"\n\tTITLE=\"${PROGNAME}-EntryBlockSelection\"\n\tpollWinRes \"$TITLE\"\n\n\tBLENTRIES=\"$(createBlockYadList | \\\n\t\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --center --list --checklist \\\n\t--column=\"$GUI_HIDE\" --column=\"$GUI_DESC\" --separator=\" \" --print-column=\"2\" \\\n\t--text=\"$(spanFont \"$GUI_BLOCKSEL\" \"H\")\" --title=\"$TITLE\" \"$GEOM\")\"\n\tcase $? in\n\t\t0)  {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating '$STLMENUBLOCKCFG' with selected blocks\"\n\t\t\t\twhile read -r blentry; do\n\t\t\t\t\tif grep -q \"$blentry\" <<< \"$(printf '%s\\n' \"$BLENTRIES\")\"; then\n\t\t\t\t\t\tupdateConfigEntry \"$blentry\" \"TRUE\" \"$STLMENUBLOCKCFG\"\n\t\t\t\t\telse\n\t\t\t\t\t\tupdateConfigEntry \"$blentry\" \"FALSE\" \"$STLMENUBLOCKCFG\"\n\t\t\t\t\tfi\n\t\t\t\tdone <<< \"$(grep -v \"^#\" \"$STLMENUBLOCKCFG\" | cut -d '=' -f1)\"\n\n\t\t\t\tcheckEntryBlocklist\n\t\t\t}\n\t\t;;\n\t\t1)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected CANCEL\"\n\t\t;;\n\tesac\n\n\tgoBackToPrevFunction \"${FUNCNAME[0]}\" \"$2\"\n}\n\nfunction setGameCfgDiffs {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Getting changes between game config and default\"\n\tCHTEMP=\"$STLSHM/${AID}_cfgchanges.txt\"\n\tcomm -13 <(grep -v \"^#\" \"$STLDEFGAMECFG\" | grep \"=\" | sort -u) <(grep -v \"^#\" \"$STLGAMECFG\" | grep \"=\" | sort -u) > \"$CHTEMP\"\n\trm \"$MTEMP/$GCD\" \"$MTEMP/$GCD-${TMPL}\" 2>/dev/null\n\n\twhile read -r change; do\n\t\tGVAR=\"${change%=*}\"\n\t\tTVAL=\"$(grep \"^${GVAR}=\" \"$STLDEFGAMECFG\" | cut -d '=' -f2)\"\n\t\tTVALO=\"${TVAL//\\\"/}\"\n\t\tif [ -n \"$TVAL\" ];then\n\t\t\tFRLI=\"$(sed -n \"/^#STARTSETENTRIES/,/^#ENDSETENTRIES/p;/^#ENDSETENTRIES/q\" \"$0\" | grep \"'$GVAR'\")\"\n\t\t\tFRL1=\"${FRLI//\\')/\\') - $GUI_TEMPVAL $TVALO}\"\n\t\t\techo \"$FRL1\" >> \"$MTEMP/$GCD-${TMPL}\"\n\t\tfi\n\tdone < \"$CHTEMP\"\n\tsed '/^$/d' -i \"$MTEMP/$GCD-${TMPL}\"\n}\n\nfunction setGuiCategoryMenuSel {\n\texport CURWIKI=\"$PPW/Category-Menus\"\n\tTITLE=\"${PROGNAME}-CategorySelection\"\n\tpollWinRes \"$TITLE\"\n\n\tsetShowPic\n\n\tCATDD=\"$(cleanDropDown \"${GCD}\" \"$(getCatsFromCode | tr '\\n' '!' | sed \"s:^!::\" | sed \"s:!$::\")\")\"\n\n\tSELECTCAT=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center \"$WINDECO\" --form --separator=\"\\n\" \\\n\t--text=\"$(spanFont \"$(strFix \"$GUI_CATSEL\" \"$PROGNAME\")\" \"H\")\" \\\n\t--title=\"$TITLE\" --field=\" $GUI_CAT!$(strFix \"$GUI_CATSEL\" \"$PROGNAME\")\":CB \"$CATDD\" \"$GEOM\")\"\n\tcase $? in\n\t\t0)  {\n\t\t\t\tif [ \"$SELECTCAT\" == \"$GCD\" ]; then\n\t\t\t\t\tsetGameCfgDiffs\n\t\t\t\tfi\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$SELECTCAT' - Opening Category Menu\"\n\t\t\t\topenCustMenu \"$AID\" \"${FUNCNAME[0]}\" \"$SELECTCAT\" \"$MTEMP/$SELECTCAT\" \"$LCM\"\n\t\t\t}\n\t\t;;\n\t\t1)  {\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Nothing selected - going to the $SETMENU\"\n\t\t\t\tMainMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t\t}\n\t\t;;\n\tesac\n}\n\nfunction clickInfo {\n\twritelog \"INFO\" \"$1 - Clicked '$2' - '$3'\"\n\twritelog \"INFO\" \"$1 - exiting '$4' and opening '$5'\"\n}\n\nfunction getLaPl {\n\tif [ -f \"$PLAYTIMELOGDIR/$GN.log\" ]; then\n\t\techo \"<b>$GUI_LASTPLAYED</b> $(tail -n1 \"$PLAYTIMELOGDIR/${GN}.log\")\"\n\tfi\n}\n\nfunction fixShowGnAid {\n\tlocal PRETTYGAMENAME\n\n    # Temp workaround to fix some games not launching because of locale bugs, particularly on Steam Deck\n    # Not limited to Steam Deck since this could prevent future bug reports\n    # May cause other bugs so keep an eye on this, but probably this is broken because of KDE not correctly setting all locales? Seems to affect KDE on Arch primarily\n    if [ -n \"$LANG\" ]; then\n        export LC_ALL=\"$LANG\"  # $LANG should always be defined, unless locales are VERY broken\n    fi\n\n\t# Will use \"real\" game name if it exists, e.g. \"NieR:Automata\" instead of NieRAutomata\n\tPRETTYGAMENAME=\"$( getTitleFromID \"$AID\" \"1\" )\"\n\tif [ -n \"$PRETTYGAMENAME\" ]; then\n\t\tSGNAID=\"$PRETTYGAMENAME ($AID)\"\n\t\tSGNAID=\"${SGNAID//&/+}\"\n\telif [ -n \"$GN\" ]; then\n\t\tSGNAID=\"$GN ($AID)\"\n\t\tSGNAID=\"${SGNAID//&/+}\"\n\telse\n\t\tSGNAID=\"$PLACEHOLDERGN ($PLACEHOLDERAID)\"\n\tfi\n}\n\nfunction fixShow {\n\techo \"${1//&/+}\"\n}\n\n## This function exists because previously, ReShade and ReShade+SpecialK were thought to need separate directories\n## This is not the case; ReShade DLLs still go into the game folder with SpecialK, but are unnnamed, so both have the same SHADDESTDIR\nfunction setShadDestDir {\n\tautoCollectionSettings\n\n\tsetFullGameExePath \"SHADDESTDIR\"\n}\n\nfunction refreshProtList {\n\tif [ -f \"$PROTBUMPTEMP\" ]; then\n\t\trm \"$PROTONCSV\" 2>/dev/null\n\t\tunset ProtonCSV\n\t\trm \"$PROTBUMPTEMP\" 2>/dev/null\n\t\tcreateProtonList X\n\tfi\n}\n\nfunction MainMenu {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Preparing to load Main Menu\"\n\n\tcreateDLReShadeList\n\tcreateMO2SilentModeExeProfilesList\n\tprepareMenu \"$@\"\n\n\tsetShowPic\n\n\tsetHuyList\n\tsetOPCustPath\n\n\tfixCustomMeta \"$CUMETA/$AID.conf\" # will be removed again later\n\tloadCfg \"$CUMETA/$AID.conf\" X\n\tloadCfg \"$GEMETA/$AID.conf\" X\n\n\texport CURWIKI=\"$PPW/Main-Menu\"\n\tTITLE=\"${PROGNAME}-MainMenu\"\n\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\tpollWinRes \"$TITLE\" 2\n\telse\n\t\tpollWinRes \"$TITLE\" 4\n\tfi\n\tfixShowGnAid\n\n\tif [ -z \"$STEAMDECKCOMPATRATING\" ]; then\n\t\tprepareSteamDeckCompatInfo  # Only fetches data once, we might already have it from askSettings so don't fetch again - Minor optimisation\n\tfi\n\n\tLAPL=\"$(getLaPl)\"\n\tSETHEAD=\"$(spanFont \"${PROGNAME} (${PROGNAME,,}) - ${PROGVERS} \\n \\n$SGNAID\" \"H\")\"\n\n\tTT_OPENURL=\"Help Url Gui\"\n\n\t# Last played date/time with STL\n\tif [ -n \"$LAPL\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Game Info Gotten!\"\n\t\tSETHEAD=\"${SETHEAD}\\n<i>$LAPL</i>\"\n\tfi\n\n\t# Game config file info\n\t# TODO hide if no gamecfgs - Maybe this check needs an overhaul?\n\tSETHEAD=\"${SETHEAD}\\n<i>(${#CfgFiles[@]} $GUI_EDITABLECFGS)\\n($GUI_EDITABLEGAMECFGS)</i>\"\n\n\t# Show Steam Deck compatibility on Main Menu when in Steam Deck Desktop Mode\n\tif [ \"$SMALLDESK\" -eq 1 ]; then\n\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SDCR}:</b> $STEAMDECKCOMPATRATING\"\n\tfi\n\n\tif [ \"$SMALLDESK\" -eq 0 ]; then\n\t\tif [ -n \"$DEVELOPER\" ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n\\n<b>${GUI_DEV}:</b> $DEVELOPER\"\n\t\tfi\n\n\t\tif [ -n \"$PUBLISHER\" ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_PUB}:</b> $PUBLISHER\"\n\t\tfi\n\n\t\tprepareProtonDBRating\n\t\tgetGameFiles \"$AID\"\n\t\tsetGameFilesArray\n\t\tTT_GAFI=\"$( printf \"<u>%s</u>\" \"${GUI_GAFI}\" )\"\n\t\tTT_GAFI=\"${TT_GAFI}$(for i in \"${!GamFiles[@]}\"; do printf \"\\n<b>%s</b>: %s\" \"${GamDesc[$i]}\" \"${GamFiles[$i]}\"; done)\"\n\n\t\t# Only shown on the Game Files tooltip\n\t\tif [ -n \"$METACRITIC_SCORE\" ] && ! grep -q \"${GUI_MCS}\" \"$PDBRAINFO\"; then\n\t\t\techo \"<b>${GUI_MCS}:</b> $METACRITIC_SCORE\" >> \"$PDBRAINFO\"\n\t\tfi\n\n\t\tif [ -n \"$OSLIST\" ] && ! grep -q \"${GUI_OSL}\" \"$PDBRAINFO\"; then\n\t\t\techo \"<b>${GUI_OSL}</b>: $OSLIST\" >> \"$PDBRAINFO\"\n\t\tfi\n\n\t\tif [ -f \"$PDBRAINFO\" ] && grep -q \"[0-9]\" \"$PDBRAINFO\" ;then\n\t\t\tSETHEAD=\"$SETHEAD \\n$(cat \"$PDBRASINF\")\"\n\t\t\tTT_OPENURL=\"$(cat \"$PDBRAINFO\")\"\n\t\tfi\n\n\t\tif [ -n \"$STEAMDECKCOMPATRATING\" ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SDCR}:</b> $STEAMDECKCOMPATRATING\"\n\t\tfi\n\n\t\tif [ -L \"$GPFX/$DRCU/$STUS\" ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SSU}:</b> symlink to $(readlink \"$GPFX/$DRCU/$STUS\")\"\n\t\tfi\n\n\t\tif [ \"$ISORIGIN\" -eq 1 ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SGW}:</b> Origin interfering\"\n\t\telse\n\t\t\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SGW}:</b> $(fixShow \"$GAMEWINDOW\")\"\n\t\t\tfi\n\t\tfi\n\n\t\t# Fetch game exe from metadata files if not defined yet\n\t\tif [ -z \"$GAMEEXE\" ]; then\n\t\t\tGAMEEXE=\"$( basename \"$( getGameExe \"$AID\" \"1\" )\" )\"\n\t\tfi\n\t\tif [ -n \"$GAMEEXE\" ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SGE}:</b> $GAMEEXE\"\n\t\tfi\n\n\t\tif [ \"$ISORIGIN\" -eq 1 ]; then\n\t\t\tSETHEAD=\"$SETHEAD \\n<b>${GUI_SGA}:</b> Origin $L2EA url\"\n\t\telse\n\t\t\tif [ \"${#ORGCMDARGS[@]}\" -ge 1 ]; then\n\t\t\t\tSETHEAD=\"$( printf \"%s \\n<b>%s</b> %q\" \"${SETHEAD}\" \"${GUI_SGA}\" \"${ORGCMDARGS[*]}\" )\"\n\t\t\tfi\n\t\tfi\n\tfi\n\t# filter html incompatible chars here\n\t#SETHEAD=\"${SETHEAD//&/+}\"\n\n\tcreateProtonList X\n\n\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --scroll --center --window-icon=\"$STLICON\" --form --center \"$WINDECO\" --title=\"$TITLE\" \\\n\t--text=\"$SETHEAD\" \\\n\t--columns=\"$COLCOUNT\" --f1-action=\"$F1ACTIONCG\" --separator=\"\" \\\n\t--field=\"$FBUT_GUISET_DCP\":FBTN \"$(realpath \"$0\") dcp\" \\\n\t--field=\"$FBUT_GUISET_DW\":FBTN \"$(realpath \"$0\") dw\" \\\n\t--field=\"$FBUT_GUISET_RECREATEPFX\":FBTN \"$(realpath \"$0\") ccd \\\"$AID\\\" \\\"s\\\"\" \\\n\t--field=\"$FBUT_GUISET_WDC\":FBTN \"$(realpath \"$0\") wdc \\\"$AID\\\"\" \\\n\t--field=\"$FBUT_GUISET_WTSEL\":FBTN \"$(realpath \"$0\") wt \\\"$AID\\\"\" \\\n\t--field=\"$FBUT_GUISET_ADDNSGA!$TT_ADDNSGA\":FBTN \"$(realpath \"$0\") ansg\" \\\n\t--field=\"$FBUT_GUISET_CREATEEVALSC\":FBTN \"$(realpath \"$0\") cfi \\\"$AID\\\"\" \\\n\t--field=\"$FBUT_GUISET_OTR!$TT_OTR\":FBTN \"$(realpath \"$0\") otr \\\"$AID\\\"\" \\\n\t--field=\"$FBUT_GUISET_DXHSEL\":FBTN \"$(realpath \"$0\") dxh \\\"$AID\\\"\" \\\n\t--field=\"$FBUT_GUISET_SHADERREPOS!$TT_SHADERREPOS\":FBTN \"$(realpath \"$0\") update shaders repos\" \\\n\t--field=\"$FBUT_GUISET_UPSHADER!$TT_UPSHADER\":FBTN \"$(realpath \"$0\") update gameshaders \\\"$SHADDESTDIR\\\"\" \\\n\t--field=\"$FBUT_GUISET_FAVSEL!$TT_FAVSEL\":FBTN \"$(realpath \"$0\") fav \\\"$AID\\\" set\"\\\n\t--field=\"$FBUT_GUISET_BLOCKCAT\":FBTN \"$(realpath \"$0\") block\" \\\n\t--field=\"$FBUT_GUISET_SORTCAT!$TT_SORTCAT\":FBTN \"$(realpath \"$0\") sort\" \\\n\t--field=\"$FBUT_GUISET_OPURL!$TT_OPENURL\":FBTN \"$(realpath \"$0\") hu \\\"$AID\\\" X\" \\\n\t--field=\"$FBUT_GUISET_GASCO!$TT_GASCO\":FBTN \"$(realpath \"$0\") gs \\\"$AID\\\" \\\"$GN\\\"\" \\\n\t--field=\"$FBUT_GUISET_VORTEX!$TT_VORTEX\":FBTN \"$(realpath \"$0\") vortex gui\" \\\n\t--field=\"$FBUT_GUISET_MO!$TT_MO\":FBTN \"$(realpath \"$0\") mo2 start\" \\\n\t--field=\"$FBUT_GUISET_GETSLR!$TT_GETSLR\":FBTN \"$(realpath \"$0\") getslrbtn \\\"$AID\\\"\" \\\n\t--field=\"$GUI_GAFI!$TT_GAFI\":FBTN \"$(realpath \"$0\") gf \\\"$AID\\\"\" \\\n\t--button=\"$BUT_EXIT\":0 \\\n\t--button=\"$BUT_GUISET_CATMENUSHORT\":4 \\\n\t--button=\"$BUT_GM\":6 \\\n\t--button=\"$BUT_DGM\":8 \\\n\t--button=\"$BUT_GLM\":10 \\\n\t--button=\"$BUT_FAV\":12 \\\n\t--button=\"$BUT_EDITORMENU\":14 \\\n\t--button=\"$BUT_PLAY\":16 \\\n\t\"$GEOM\"\n\tcase $? in\n\t0)  {\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_EXIT\" \"$SETMENU\" \"Exit\"\n\t\t\tGOBACK=0\n\t\t\tcloseSTL \" ######### STOP EARLY $PROGNAME $PROGVERS #########\"\n\t\t\texit\n\t\t}\n\t;;\n\t4) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_GUISET_CATMENUSHORT\" \"$SETMENU\" \"Category Menu Selection\"\n\t\t\trefreshProtList\n\t\t\tsetGuiCategoryMenuSel \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t6) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_GM\" \"$SETMENU\" \"$GAMMENU\"\n\t\t\trefreshProtList\n\t\t\topenGameMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t8) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_DGM\" \"$SETMENU\" \"Game Default Menu\"\n\t\t\trefreshProtList\n\t\t\topenGameDefaultMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t10) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_GLM\" \"$SETMENU\" \"Global Menu\"\n\t\t\trefreshProtList\n\t\t\topenGlobalMenu \"$AID\" \"${FUNCNAME[0]}\" \"1\"\n\t\t}\n\t;;\n\t12) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_FAV\" \"$SETMENU\" \"Favorites\"\n\t\t\trefreshProtList\n\t\t\tfavoritesMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t14) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_EDITORMENU\" \"$SETMENU\" \"EditorDialog\"\n\t\t\tEditorDialog \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t16) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_PLAY\" \"$SETMENU\" \"Game\"\n\t\t\tGOBACK=0\n\t\t\tstartSteamGame\n\t\t}\n\t;;\n\tesac\n\n\tgoBackToPrevFunction \"${FUNCNAME[0]}\" \"$2\" \"$GOBACK\"\n}\n\nfunction createBlockYadList {\n\tcheckEntryBlocklist\n\twhile read -r block; do\n\t\tBLCAT=\"${block%=*}\"\n\t\tBLVALR=\"${block#*=}\"\n\t\tBLVAL=\"${BLVALR//\\\"/}\"\n\t\tif [ \"$BLVAL\" -eq 1 ] ; then\n\t\t\techo TRUE\n\t\t\techo \"$BLCAT\"\n\t\telse\n\t\t\techo FALSE\n\t\t\techo \"$BLCAT\"\n\t\tfi\n\tdone <<< \"$(grep -v \"^#\" \"$STLMENUBLOCKCFG\" | grep \"=\")\"\n}\n\nfunction getCatsFromCode {\n\tsed \"s:CAT_:\\nCAT_:g\" \"$STLRAWENTRIES\" | grep \"^CAT_\" | cut -d '`' -f1 | cut -d '_' -f2 | sort -u\n}\n\nfunction updateMenuSortFile {\n\tif [ -f \"$STLMENUSORTCFG\" ] && [ -s \"$STLMENUSORTCFG\" ]; then\n\t\twhile read -r catent; do\n\t\t\tif ! grep -q \"^$catent\" \"$STLMENUSORTCFG\"; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding missing Category '$catent' to '$STLMENUSORTCFG'\"\n\t\t\t\techo \"$catent\" >> \"$STLMENUSORTCFG\"\n\t\t\tfi\n\t\tdone <<< \"$(getCatsFromCode)\"\n\tfi\n}\n\nfunction checkEntryBlocklist {\n\t# create blocklist with disabled categories\n\tif [ ! -f \"$STLMENUBLOCKCFG\" ]; then\n\t\techo \"#All enabled categories will be hidden in the menus\" >\"$STLMENUBLOCKCFG\"\n\t\twhile read -r block; do\n\t\t\techo \"${block}=\\\"0\\\"\" >> \"$STLMENUBLOCKCFG\"\n\t\tdone <<< \"$(getCatsFromCode)\"\n\tfi\n\n\tif [ -f \"$STLMENUBLOCKCFG\" ]; then\n\t\t# autoadding new (commented out) categories\n\t\twhile read -r block; do\n\t\t\tif ! grep -q \"^${block}\" \"$STLMENUBLOCKCFG\"; then\n\t\t\t\techo \"${block}=\\\"0\\\"\" >> \"$STLMENUBLOCKCFG\"\n\t\t\tfi\n\t\tdone <<< \"$(getCatsFromCode)\"\n\n\t\t# create validity check file\n\t\tif [ ! -f \"$STLMENUVALBLOCKCFG\" ]; then\n\t\t\tcp \"$STLMENUBLOCKCFG\" \"$STLMENUVALBLOCKCFG\"\n\t\tfi\n\n\t\t# if validity check file differs - remove temporary menu files\n\t\tif ! cmp -s \"$STLMENUBLOCKCFG\" \"$STLMENUVALBLOCKCFG\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing temp menufiles in '$STLSHM'\"\n\t\t\tfind \"$MTEMP\" -maxdepth 1 -type f -name \"*menu*\" -exec rm {} \\;\n\t\t\tcp \"$STLMENUBLOCKCFG\" \"$STLMENUVALBLOCKCFG\"\n\t\tfi\n\tfi\n}\n\nfunction getFilteredEntries {\n\tif [ -z \"$1\" ]; then\n\t\tINLIST=\"$STLRAWENTRIES\"\n\telse\n\t\tINLIST=\"$1\"\n\tfi\n\n\t# first remove blocked entries\n\tif grep -q \"=\\\"1\\\"\" \"$STLMENUBLOCKCFG\"; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Excluding blocked elements from '$STLMENUBLOCKCFG'\"\n\t\tunset BlockCats\n\t\twhile read -r line; do\n\t\t\tmapfile -t -O \"${#BlockCats[@]}\" BlockCats <<< \"CAT_${line}\"\n\t\tdone <<< \"$(grep \"=\\\"1\\\"\" \"$STLMENUBLOCKCFG\" | cut -d '=' -f1)\"\n\n\t\twhile read -r outline; do\n\t\t\tINCAT=\"CAT_$(grep -oP '#CAT_\\K[^`]+' <<< \"${outline}\")\"\n\t\t\tif [[ ! \"${BlockCats[*]}\" =~ $INCAT ]]; then\n\t\t\t\techo \"$outline\" >> \"$STLNOBLOCKENTRIES\"\n\t\t\tfi\n\t\tdone < \"$INLIST\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No blocked elements found in '$STLMENUBLOCKCFG' - working with '$INLIST'\"\n\t\tcp \"$INLIST\" \"$STLNOBLOCKENTRIES\"\n\tfi\n\n\t# now the sort order\n\tif [ ! -f \"$STLMENUSORTCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$STLMENUSORTCFG' missing - creating a default one\"\n\t\tgetCatsFromCode > \"$STLMENUSORTCFG\" 2>/dev/null\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Sort config '$STLMENUSORTCFG' found - sorting\"\n\n\twhile read -r line; do\n\t\tif [ -n \"$line\" ]; then\n\t\t\tgrep \"\\`#CAT_${line}\\`\" \"$STLNOBLOCKENTRIES\" >> \"$STLCATSORTENTRIES\"\n\t\tfi\n\tdone < \"$STLMENUSORTCFG\"\n\tcat \"$STLCATSORTENTRIES\"\n\trm \"$STLNOBLOCKENTRIES\" 2>/dev/null\n\trm \"$STLCATSORTENTRIES\" 2>/dev/null\n}\n\nfunction splitMenu {\n\tARGSPLIT=\"$1\"\n\tMYTMPL=\"$2\"\n\tif [ \"$ARGSPLIT\" -gt 0 ]; then\n\t\tFUCO=\"$(wc -l < \"$MYTMPL\")\"\n\t\tCUTCO=$((FUCO / 2 ))\n\t\tRESTCO=$((FUCO - CUTCO))\n\t\thead -n \"$CUTCO\" \"$MYTMPL\" > \"${MYTMPL}_${ARGSPLIT}\"\n\n\t\tif [ \"$ARGSPLIT\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ARGSPLIT is set to '$ARGSPLIT' - so using first half of '$MYTMPL' for the menu\"\n\t\t\thead -n \"$CUTCO\" \"$MYTMPL\" > \"${MYTMPL}_${ARGSPLIT}\"\n\t\t\tmv \"${MYTMPL}_${ARGSPLIT}\" \"$MYTMPL\"\n\t\telif [ \"$ARGSPLIT\" -eq 2 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ARGSPLIT is set to '$ARGSPLIT' - so using second half of '$MYTMPL' for the menu\"\n\t\t\thead -n \"$CUTCO\" \"$MYTMPL\" | grep \"#HEAD\" | tail -n 1 > \"${MYTMPL}_${ARGSPLIT}\"\n\t\t\ttail -n \"$RESTCO\" \"$MYTMPL\" >> \"${MYTMPL}_${ARGSPLIT}\"\n\t\t\tmv \"${MYTMPL}_${ARGSPLIT}\" \"$MYTMPL\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ARGSPLIT is set to '$ARGSPLIT' - so using the whole '$MYTMPL' for the menu\"\n\t\tfi\n\tfi\n}\n\nfunction createMenu {\n\tARGSPLIT=\"$1\"\n\tARGMENU=\"$2\"\n\tARGFUNC=\"$3\"\n\tARGPIC=\"$4\"\n\tUNUSED=\"$5\"\n\tARGCOLS=\"$6\"\n\tARGTITLE=\"$7\"\n\tARGPCMD=\"$8\"\n\tARGSPAT=\"$9\"\n\n\tNEEDARG=\"9\"\n\n\tMYTMPL=\"${ARGMENU}-${TMPL}\"\n\n\tif [ \"$#\" -ne \"$NEEDARG\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Need $NEEDARG arguments and got '$#':\"\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - '$*'\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - got '$#' elements: '$*'\"\n\tfi\n\n\tif [ ! -f \"$MYTMPL\" ] || [ ! -s \"$MYTMPL\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating menu template '$MYTMPL'\"\n\t\tgetFilteredEntries \"$STLRAWENTRIES\" | grep \"$ARGSPAT\" > \"$MYTMPL\"\n\t\trmDupLines \"$MYTMPL\"\n\t\tsplitMenu \"$ARGSPLIT\" \"$MYTMPL\"\n\tfi\n\n\tif [ \"$ARGPCMD\" == \"$NON\" ]; then\n\t\tQBUT0=\"$BUT_EXIT\"\n\telse\n\t\tQBUT0=\"$BUT_BACK\"\n\tfi\n\n\tTITLE=\"${PROGNAME}-$ARGFUNC\"\n\n\techo \"\" >\"$ARGMENU\"\n\t# shellcheck disable=SC2028 # doesn't like the newline seperator, but it is valid\n\t{\n\t\techo \"function $ARGFUNC {\"\n\t\techo \"\\\"$YAD\\\" --columns=\\\"$COLCOUNT\\\" --f1-action=\\\"$F1ACTIONCG\\\" --text=\\\"$(spanFont \"$ARGTITLE\" \"H\")\\\" \\\\\"\n\t\techo \"--title=\\\"$TITLE\\\" --image \\\"$ARGPIC\\\" --image-on-top --window-icon=\\\"$STLICON\\\" --center \\\"$WINDECO\\\" --form --separator=\\\"\\\\n\\\" --quoted-output \\\\\"\n\t\techo \"--button=\\\"$QBUT0\\\":0 --button=\\\"$BUT_MAINMENU\\\":2 --button=\\\"$BUT_RELOAD\\\":4 --button=\\\"$BUT_SAVERELOAD\\\":6 --button=\\\"$BUT_SAVEPLAY\\\":8 --button=\\\"$BUT_PLAY\\\":10 $GEOM \\\\\"\n\t\tcat \"$MYTMPL\"\n\t\techo \"--scroll\"\n\t\techo \"}\"\n\t} >>\"$ARGMENU\"\n}\n\nfunction openMenu {\n\tARGID=\"$1\"\n\tARGPCMD=\"$2\"\t\t# \"$9\"\n\tARGLOADCFG=\"$3\"\n\t# most args for createMenu:\n\tARGSPLIT=\"$4\"\n\tARGMENU=\"$5\"\n\tARGFUNC=\"$6\"\n\tARGPIC=\"$7\"\n\tUNUSED=\"$8\"\n\tARGCOLS=\"$9\"\n\tARGTITLE=\"${10}\"\n\tARGSPAT=\"${11}\"\n\n\tresetAID \"$ARGID\"\n\tcreateGameCfg\n\tsetGN \"$ARGID\"\n\tcreateDropdownLists\n\n\tmkCfgTemp \"${FUNCNAME[0]}\"\n\n\tif [ \"$LOADCFG\" == \"$STLGAMECFG\" ] ; then\n\t\tsetShowPic\n\tfi\n\n\tloadCfg \"$ARGLOADCFG\" X\n\n\tTITLE=\"${PROGNAME}-$ARGFUNC\"\n\tpollWinRes \"$TITLE\"\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting createMenu \\\"$ARGMENU\\\" \\\"$ARGFUNC\\\" \\\"$ARGPIC\\\" \\\"$UNUSED\\\" \\\"$ARGCOLS\\\" \\\"$ARGTITLE\\\" \\\"$ARGPCMD\\\" \\\"$ARGSPAT\\\"\"\n\tcreateMenu \"$ARGSPLIT\" \"$ARGMENU\" \"$ARGFUNC\" \"$ARGPIC\" \"$UNUSED\" \"$ARGCOLS\" \"$ARGTITLE\" \"$ARGPCMD\" \"$ARGSPAT\"\n\n\tsource \"$ARGMENU\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Currently used tempfile is '$MKCFG'\"\n\t\"$ARGFUNC\" > \"$MKCFG\"\n\n\tcase $? in\n\t0) \t{\n\t\t\tif [ \"$ARGPCMD\" == \"$NON\" ]; then\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$QBUT0\" \"$GAMMENU\" \"Exit\"\n\t\t\t\tGOBACK=0\n\t\t\t\tcloseSTL \" ######### STOP EARLY $PROGNAME $PROGVERS #########\"\n\t\t\t\texit\n\t\t\telse\n\t\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$QBUT0\" \"$GAMMENU\" \"$ARGPCMD\"\n\t\t\t\t\"$ARGPCMD\" \"$AID\" \"${FUNCNAME[0]}\"\n\t\t\tfi\n\t\t}\n\t;;\n\t2)  {\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_MAINMENU\" \"$FAVOMENU\" \"$SETMENU\"\n\t\t\tMainMenu \"$AID\" \"${FUNCNAME[0]}\"\n\t\t}\n\t;;\n\t4) \t{\n\t\t\tGOBACK=0\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_RELOAD\" \"$FAVOMENU\" \"$PARGUI\"\n\t\t\tif [ \"$SAVESETSIZE\" -eq 1 ] ; then\tsleep 1;\tfi\n\t\t\t\"$PARGUI\" \"$AID\" \"$ARGPCMD\" \"$ARGSPLIT\"\n\t\t}\n\t;;\n\t6) \t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_SAVERELOAD\" \"$FAVOMENU\" \"$PARGUI\"\n\t\t\tGOBACK=0\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Saving config '$ARGLOADCFG' and restart '$PARGUI' GUI\"\n\t\t\tsaveMenuEntries \"$ARGMENU\"\n\t\t\tif [ \"$SAVESETSIZE\" -eq 1 ] ; then\tsleep 1;\tfi\n\t\t\t\"$PARGUI\" \"$AID\" \"$ARGPCMD\" \"$ARGSPLIT\"\n\t\t}\n\t;;\n\t8)  {\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_SAVEPLAY\" \"$FAVOMENU\" \"Game Start\"\n\t\t\tGOBACK=0\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Saving config '$ARGLOADCFG' and starting the game\"\n\t\t\tsaveMenuEntries \"$ARGMENU\"\n\t\t\tstartSteamGame\n\t\t}\n\t;;\n\t10)\t{\n\t\t\tclickInfo \"${FUNCNAME[0]}\" \"$?\" \"$BUT_PLAY\" \"$FAVOMENU\" \"Game Start\"\n\t\t\tGOBACK=0\n\t\t\tstartSteamGame\n\t\t}\n\t;;\n\tesac\n}\n\nfunction writelog {\n#DBGMS \"IN - $2\"\n# LOGLEVEL=0: disable log\n\n# LOGLEVEL=1: log only:\nLOGONE=\"404,ERROR,SKIP,WARN,CREATE\"\n\n# LOGLEVEL=2: log also - including:\n#LOGTWO=\"HACK,INFO,NEW,UPDATE,WAIT\"\n\n\tif [ -n \"$4\" ] && [ \"$3\" == \"X\" ] && grep -q \".log\" <<< \"$4\"; then\n\t\techo \"$(date) $1 - $2\" | tee -a \"$4\" >/dev/null\n\telse\n\t\tif [ -z \"$LOGLEVEL\" ]; then\n\t\t\tLOGLEVEL=2\n\t\tfi\n\n\t\tif [ \"$LOGLEVEL\" -eq 1 ]; then\n\t\t\tif grep -q \"$1\" <<< \"$LOGONE\"; then\n\t\t\t\tif [ -z \"$LOGFILE\" ]; then\n\t\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$TEMPLOG\" >/dev/null\n\t\t\t\telse\n\t\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$TEMPLOG\" \"$LOGFILE\" >/dev/null\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\tif [ \"$LOGLEVEL\" -eq 2 ]; then\n\t\t\tif [ -z \"$LOGFILE\" ]; then\n\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$TEMPLOG\" >/dev/null\n\t\t\telse\n\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$TEMPLOG\" \"$LOGFILE\" >/dev/null\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$3\" ]; then\n\t\t\tif [ \"$3\" == \"E\" ]; then\n\t\t\t\techo \"$(date) $1 - $2\"\n\t\t\telif [ \"$3\" == \"P\" ] && [ -f \"$PRELOG\" ]; then\n\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$PRELOG\" >/dev/null\n\t\t\telif grep -q \".log\" <<< \"$3\"; then\n\t\t\t\techo \"$(date) $1 - $2\" | tee -a \"$3\" >/dev/null\n\t\t\tfi\n\t\tfi\n\tfi\n#DBGMS \"OUT - $2\"\n}\n\n# generic git clone/pull function\nfunction gitUpdate {\n\tGITDIR=\"$1\"\n\tGITURL=\"$2\"\n\tif [ -d \"$GITDIR/.git\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Pulling '$GITURL' update in '$GITDIR'\"\n\n\t\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\t\tLD_PRELOAD=\"/usr/lib/libcurl.so.4\" \"$GIT\" --work-tree=\"$GITDIR\" --git-dir=\"$GITDIR/.git\" pull --rebase=false &> \"$STLSHM/${FUNCNAME[0]}-SteamDeck-${GITDIR##*/}\"\n\t\telse\n\t\t\t\"$GIT\" --work-tree=\"$GITDIR\" --git-dir=\"$GITDIR/.git\" pull --rebase=false &> \"$STLSHM/${FUNCNAME[0]}-${GITDIR##*/}\"\n\t\tfi\n\telse\n\t\tmkProjDir \"$GITDIR\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Cloning '$GITURL' in '$GITDIR'\"\n\n\t\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\t\tLD_PRELOAD=\"/usr/lib/libcurl.so.4\" \"$GIT\" clone \"$GITURL\" \"$GITDIR\" &> \"$STLSHM/${FUNCNAME[0]}-SteamDeck-${GITDIR##*/}\"\n\t\telse\n\t\t\t\"$GIT\" clone \"$GITURL\" \"$GITDIR\" &> \"$STLSHM/${FUNCNAME[0]}-${GITDIR##*/}\"\n\t\tfi\n\tfi\n}\n\nfunction fetchGitHubTags {\n    PROJURL=\"$1\"\n    N=\"$2\"\n\n    RELEASESURL=\"${PROJURL}/releases\"\n    TAGSURL=\"${PROJURL}/tags\"\n\n    TAGSGREP=\"${RELEASESURL#\"$GHURL\"}/tag\"\n\n    mapfile -t BASETAGS < <(\"$WGET\" -q \"${TAGSURL}\" -O - 2> >(grep -v \"SSL_INIT\") | grep -oE \"${TAGSGREP}[^\\\"]+\" | sort -urV | grep -m \"$N\" \"$TAGSGREP\")\n    for TAG in \"${BASETAGS[@]}\"; do\n        basename \"$TAG\"\n    done\n}\n\n# Just for fun ;)\nfunction getSeasonalGreeting {\n\tCURRDATE=\"$( date +\"%d-%m\" )\"\n\tif [ \"$CURRDATE\" = \"25-12\" ];then\n\t\techo \"Happy Holidays!\"\n\telif [ \"$CURRDATE\" = \"31-12\" ] || [ \"$CURRDATE\" = \"01-01\" ]; then\n\t\techo \"Happy New Year!\"\n\telif [ \"$CURRDATE\" = \"31-10\" ]; then\n\t\tTM=\"$( date +\"%H:%M\" )\"\n\t\tif [ \"$TM\" = \"00:00\" ]; then\n\t\t\techo \"Happy Halloween, it's the witching hour!\"\n\t\telse\n\t\t\techo \"Happy Halloween!\"\n\t\tfi\n\tfi\n}\n\nfunction migrateCfgOption {\n\t# temporary function to update specific configuration options - will vary depending on the current steamtinkerlaunch version and mostly won't be used at all\n\tif [ \"$1\" == \"$STLGAMECFG\" ]; then\n\t\t# update dxvk config handling:\n\t\tif grep -q \"^#STLDXVKCFG\" \"$STLGAMECFG\" && ! grep -q \"^STLDXVKCFG\" \"$STLGAMECFG\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Commenting in STLDXVKCFG in '$STLGAMECFG' automatically\"\n\t\t\tsed \"s:^#STLDXVKCFG:STLDXVKCFG:g\" -i \"$STLGAMECFG\"\n\t\tfi\n\n\t\tif [ -z \"$STLDXVKCFG\" ]; then\n\t\t\tSTLDXVKLINE=\"$(grep \"^STLDXVKCFG\" \"$STLGAMECFG\")\"\n\t\t\tSTLDXVKLINE=\"${STLDXVKLINE//\\\"/}\"\n\t\t\tSTLDXVKLINE=\"${STLDXVKLINE//STLCFGDIR/$STLCFGDIR}\"\n\t\t\tif [ -n \"$STLDXVKLINE\" ]; then\n\t\t\t\texport \"${STLDXVKLINE?}\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -z \"$STLDXVKCFG\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Variable 'STLDXVKCFG' could not be found - giving up\"\n\t\telse\n\t\t\tif [ -z \"$STLGAMECFG\" ]; then\n\t\t\t\tsetAIDCfgs\n\t\t\tfi\n\n\t\t\tif grep -q \"^STLDXVKCFG\" \"$STLGAMECFG\" && ! grep -q \"^USE_STLDXVKCFG=\\\"1\\\"\" \"$STLGAMECFG\"; then\n\t\t\t\tif [ -f \"$STLDXVKCFG\" ]; then\n\t\t\t\t\tif [ \"$(wc -l < \"$STLDXVKCFG\")\" -eq 1 ] && grep \"^NOTE\" \"$STLDXVKCFG\"; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Empty placeholder config '$STLDXVKCFG' found - not enabling USE_STLDXVKCFG automatically\"\n\t\t\t\t\telif [ \"$(wc -l < \"$STLDXVKCFG\")\" -gt 1 ] || { [ \"$(wc -l < \"$STLDXVKCFG\")\" -eq 1 ] && ! grep \"^NOTE\" \"$STLDXVKCFG\"; }; then\n\t\t\t\t\t\tmkProjDir \"$STLTEMPDIR\"\n\t\t\t\t\t\tDXVKMIGLIST=\"$STLTEMPDIR/dxvkcfg.txt\"\n\t\t\t\t\t\ttouch \"$DXVKMIGLIST\"\n\t\t\t\t\t\tif grep -q \"^$AID$\" \"$DXVKMIGLIST\"; then\n\t\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - STLDXVKCFG was already updated for '$AID' before\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found STLDXVKCFG in '$STLGAMECFG' being used, so automatically enabling USE_STLDXVKCFG\"\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tUSE_STLDXVKCFG=1\n\t\t\t\t\t\t\tupdateConfigEntry \"USE_STLDXVKCFG\" \"$USE_STLDXVKCFG\" \"$STLGAMECFG\"\n\t\t\t\t\t\t\techo \"$AID\" > \"$DXVKMIGLIST\"\n\t\t\t\t\t\tfi\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Unknown constellation - shouldn't happen\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - File '$STLDXVKCFG' does not exist - nothing to do\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\t# specialk replace \"old\" version\n\t\tif [ \"$SPEKVERS\" == \"discord\" ] || [ \"$SPEKVERS\" == \"old\" ] || [ \"$SPEKVERS\" == \"latest\" ] || [ \"$SPEKVERS\" == \"default\" ] || [ \"$SPEKVERS\" == \"test\" ]; then\n\t\t\tSPEKVERS=\"stable\"\n\t\t\ttouch \"$FUPDATE\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Automatically updating variable SPEKVERS from 'old' to '$SPEKVERS' in '$STLGAMECFG'\"\n\t\t\tupdateConfigEntry \"SPEKVERS\" \"$SPEKVERS\" \"$STLGAMECFG\"\n\t\tfi\n\n\t\t# stop MO2MODE from being 'none' in weird scenarios -- Issue was confirmed to be exclusive to SteamOS and may be a (temporary?) SteamOS regression\n\t\tif [ \"$MO2MODE\" == \"$NON\" ]; then\n\t\t\tMO2MODE=\"disabled\"\n\t\t\ttouch \"$FUPDATE\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ModOrganizer 2 variable MO2MODE is somehow '$NON' -- Defaulting this to 'disabled'\"\n\t\t\tupdateConfigEntry \"MO2MODE\" \"$MO2MODE\" \"$STLGAMECFG\"\n\t\tfi\n\n\t\t# collections update\n\t\tif [ -n \"$CHECKCATEGORIES\" ] && [ \"$CHECKCATEGORIES\" -eq 1 ]; then\n\t\t\tCHECKCOLLECTIONS=\"$CHECKCATEGORIES\"\n\t\t\ttouch \"$FUPDATE\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Automatically updating variable CHECKCOLLECTIONS from old variable CHECKCATEGORIES\"\n\t\t\tupdateConfigEntry \"CHECKCOLLECTIONS\" \"$CHECKCOLLECTIONS\" \"$STLGAMECFG\"\n\t\tfi\n\n\t\t# ReShade changes -- Combine USERESHADE and RESHADE_INSTALL into one option (ensure USERESHADE matches whatever value INSTALL_RESHADE had now that they are equivalent)\n\t\tif [ -n \"$INSTALL_RESHADE\" ] && [ \"$INSTALL_RESHADE\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found legacy 'INSTALL_RESHADE' with value '$INSTALL_RESHADE' -- disabling as this is no longer used\"\n\t\t\tINSTALL_RESHADE=0\n\t\t\tUSERESHADE=1\n\n\t\t\t# If INSTALL_RESHADE was ever on, disable it and force USERESHADE to 1 as these options are equivalent now\n\t\t\ttouch \"$FUPDATE\"\n\t\t\tupdateConfigEntry \"INSTALL_RESHADE\" \"$INSTALL_RESHADE\" \"$STLGAMECFG\"\n\t\t\tupdateConfigEntry \"USERESHADE\" \"$USERESHADE\" \"$STLGAMECFG\"\n\t\tfi\n\n#486\nfunction wip {\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Upcoming file migration. Some files in '$STLCFGDIR' will soon be migrated to '$STLDATADIR' or '$STLCACHEDIR' - see #486\"\n\n\t\tif [ \"$(df -P \"$STLCFGDIR\" | awk 'END{print $NF}')\" == \"$(df -P \"$STLCACHEDIR\" | awk 'END{print $NF}')\" ];then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$STLCACHEDIR' is on the same partition like '$STLCFGDIR'\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$STLCACHEDIR' is on a different partition like '$STLCFGDIR' - need to check if there's enough space for migrating\"\n\t\t\tOLDSTLDLDIR=\"$STLCFGDIR/downloads\"\n\t\t\tNEWSTLDLDIR=\"$STLCACHEDIR/downloads\"\n\t\t\tOLDDLDIRSIZE=\"$(du -sb \"$OLDSTLDLDIR\" | awk 'END{print $1}')\"\n\t\t\tDLDIRSIZE=\"$(df -k --output=avail \"$NEWSTLDLDIR\" | tail -n1)\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - OLDDLDIRSIZE is '$OLDDLDIRSIZE'; DLDIRSIZE is '$DLDIRSIZE'\"\n\t\tfi\n}\n\tfi\n}\n\nfunction loadCfg {\n\tCFGFILE=\"$1\"\n\n\tif [ -f \"$CFGFILE\" ]; then\n\n\t\t# disable logging here when the program just started (cosmetics)\n\t\tif [ -z \"$2\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$CFGFILE' START\"\n\t\tfi\n\n\t\tif [ \"$CFGFILE\" == \"$STLGAMECFG\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading game config '$CFGFILE'\"\n\t\tfi\n\n\t\twhile read -r line; do\n\t\t\tif [ -n \"$line\" ]; then\n\t\t\t\tEXPORTLINE=\"${line//\\\"/}\"\n\t\t\t\tEXPORTLINE=\"${EXPORTLINE//STLCFGDIR/$STLCFGDIR}\"\n\t\t\t\texport \"${EXPORTLINE?}\"\n\t\t\tfi\n\t\tdone <<< \"$(grep -v \"^#\\|^$\" \"$CFGFILE\")\"\n\n\t\t# config migration #XXXXXXXXXXXXXX\n\t\tmigrateCfgOption \"$CFGFILE\"\n\n\t\t# disable logging here when the program just started (cosmetics)\n\t\tif [ -z \"$2\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$CFGFILE' STOP\"\n\t\tfi\n\tfi\n}\n\nfunction extWine64Run {\n\tif [ \"$USEWINE\" -eq 0 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Command in Proton WINEPREFIX is: WINE=\\\"$RUNWINE\\\" WINEARCH=win64 WINEDEBUG=\\\"$STLWINEDEBUG\\\" WINEPREFIX=\\\"$GPFX\\\" $*\"\n\t\tWINE=\"$RUNWINE\" WINEARCH=win64 WINEDEBUG=\"$STLWINEDEBUG\" WINEPREFIX=\"$GPFX\" \"$@\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Command in Wine WINEPREFIX is: WINE=\\\"$RUNWINE\\\" WINEARCH=\\\"$RUNWINEARCH\\\" WINEDEBUG=\\\"$STLWINEDEBUG\\\" WINEPREFIX=\\\"$GWFX\\\" $*\"\n\t\tWINE=\"$RUNWINE\" WINEARCH=\"$RUNWINEARCH\" WINEDEBUG=\"$STLWINEDEBUG\" WINEPREFIX=\"$GWFX\" \"$@\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\tfi\n}\n\nfunction extProtonRun {\n\tMODE=\"$1\"\n\tPROGRAM=\"$2\"\n\tPROGARGS=\"$3\"\n\tEXTPROGRAMARGS=\"$4\"  # e.g. args like GameScope/GameMode taken from `buildCustomCmdLaunch` for ONLY_CUSTOMCMD\n\tEXTWINERUN=0\n\tEXTPROTUSESLR=\"${5:-0}\"  # Should extProtonRun fetch and use SLR (default to 0 -- turned off)\n\n\tif [ \"$USEWINE\" -eq 1 ] && [[ ! \"$WINEVERSION\" =~ ${DUMMYBIN}$ ]] && [ \"$WINEVERSION\" != \"$NON\" ]; then\n\t\tEXTWINERUN=1\n\tfi\n\n\tsetRunProtonFromUseProton\n\n\t# could help here:\n\tif [ ! -f \"${RUNPROTON//\\\"/}\" ]; then\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$USEPROTON' seems outdated as the executable ${RUNPROTON//\\\"/} wasn't found\"\n\t\tfixProtonVersionMismatch \"USEPROTON\" \"$STLGAMECFG\"\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Continuing with RUNPROTON='$RUNPROTON'\"\n\n\tif [ ! -f \"$RUNPROTON\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - When this error occurs, probably the configured Proton (or a similar) version is no longer available.\"\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Because the RUNPROTON '$RUNPROTON' isn't ready here yet - please open an issue when you made sure it is set to an existing one and the error persists\"\n\telse\n\t\tif [ -z \"$PROGARGS\" ] || [ \"$PROGARGS\" == \"$NON\" ]; then\n\t\t\tRUNPROGARGS=\"\"\n\t\telse\n\t\t\tmapfile -d \" \" -t -O \"${#TMP_RUNPROGARGS[@]}\" TMP_RUNPROGARGS < <( printf \"%q\" \"$PROGARGS\" )\n\n\t\t\t# Basically check for and join paths that contain spaces because above mapfile will strip them\n\t\t\t# TODO: This does NOT work with paths that use forward slashes\n\t\t\tfor i in \"${!TMP_RUNPROGARGS[@]}\"; do\n\t\t\t\t# Remove trailing backslash, i.e. turn `--launch\\` into `--launch`\n\t\t\t\tTMP_RUNPROGARGS[i]=\"${TMP_RUNPROGARGS[i]%\\\\}\"\n\n\t\t\t\t# If the last seen element in the array ended with a backslash, assume\n\t\t\t\t# this is an incomplete path and join them\n\t\t\t\t#\n\t\t\t\t# This is not perfect as valid paths that just end with backslashes will not work,\n\t\t\t\t# but we can document this on the wiki\n\t\t\t\t#\n\t\t\t\t# i.e. \"Z:\\this\\is\\a\\path\\ MY_VAR=2\" will not work, but \"Z:\\this\\is\\a\\path MY_VAR=2\" will work\n\t\t\t\tif [[ $LASTRUNPROGARG = *\"\\\\\" ]]; then\n\t\t\t\t\t# Remove 'i-1' (previous element), because 'i' (current element) will contain 'i-1'\n\t\t\t\t\tunset \"TMP_RUNPROGARGS[i-1]\"\n\t\t\t\t\tTMP_RUNPROGARGS[i]=\"${LASTRUNPROGARG} ${TMP_RUNPROGARGS[i]}\"\n\t\t\t\tfi\n\t\t\t\tLASTRUNPROGARG=\"${TMP_RUNPROGARGS[i]}\"\n\t\t\tdone\n\n\t\t\t# Generate new array with null strings removed.\n\t\t\tmapfile -t -O \"${#RUNPROGARGS[@]}\" RUNPROGARGS < <( printf \"%s\\n\" \"${TMP_RUNPROGARGS[@]}\" | grep -v \"^$\" )\n\t\tfi\n\n\t\tFWAIT=2\n\n\t\t# mirrors above RUNPROGARGS\n\t\t# TODO what if we try to pass paths with spaces? This could be problematic here...\n\t\tif [ -z \"$EXTPROGRAMARGS\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No external program args here it seems\"\n\t\t\tRUNEXTPROGRAMARGS=( \"\" )\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like we got some external program args, '${EXTPROGRAMARGS}'\"\n\t\t\tmapfile -d \" \" -t -O \"${#RUNEXTPROGRAMARGS[@]}\" RUNEXTPROGRAMARGS < <(printf '%s' \"$EXTPROGRAMARGS\")\n\t\tfi\n\n\t\t# Have to set SLR in extProtonRun because we can't pass the array to the function\n\t\t# Hopefully unsetting is safe and doesn't mean places that need the SLR will lose it from this 'unset'\n\t\tif [ \"$EXTPROTUSESLR\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - EXTPROTUSESLR is '$EXTPROTUSESLR' -- Attempting to find and use SLR with extProtonRun\"\n\n\t\t\tunset \"${SLRCMD[@]}\"\n\t\t\tsetSLRReap\n\t\tfi\n\n\t\t# append SLR to beginning of RUNEXTPROGRAMARGS, if SLR is defined\n\t\t# TODO this is the exact same logic as in launchCustomProg (except the log messages are slightly different), is there any way to share it?\n\t\tif [ -n \"${SLRCMD[*]}\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Gotten Steam Linux Runtime for Proton launch, using RUNEXTPROGRAMARGS array to contain it and add it to launch command\"\n\n\t\t\tOLDRUNEXTPROGRAMARGS=( \"${RUNEXTPROGRAMARGS[@]}\" )\n\n\t\t\tunset \"${RUNEXTPROGRAMARGS[@]}\"\n\t\t\tRUNEXTPROGRAMARGS=( \"${SLRCMD[@]}\" )\n\n\t\t\t# OLDRUNEXTPROGRAMARGS should only contain one item, the passed args for the custom command\n\t\t\t# if the first item here is not empty, assume we have to include the old pass args in the new array\n\t\t\t#\n\t\t\t# if blank, it means OLDRUNEXTPROGRAMARGS was most likely empty (or started with a blank element, which would cause a crash anyway)\n\t\t\t# so we can just create RUNEXTPROGRAMARGS with the SLR as the only element\n\t\t\tif [ -n \"${OLDRUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Seems like some arguments were given to the custom command, including them alongside the Steam Linux Runtime arguments\"\n\t\t\t\tRUNEXTPROGRAMARGS+=( \"${OLDRUNEXTPROGRAMARGS[@]}\" )\n\t\t\tfi\n\t\telif [ -z \"${SLRCMD[*]}\" ] && [ \"$CUSTOMCMD_USESLR\" -eq 1 ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Attempted to fetch Steam Linux Runtime but failed to find one!\"\n\t\tfi\n\t\tunset \"${SLRCMD[@]}\"\n\n\t\t# TODO pass \"$EXTPROGRAMARGS\" to programs running with Wine as well(?)\n\t\t# TODO refactor a bit to be a little cleaner if possible\n\t\t# TODO it should be possible to pass PROTON_LOG to these Proton commands, however this also requries SteamGameId to be set -- This is not defined outside of Steam AND inside of Steam it would conflict with an actual Game ID if used\n\t\t#      if we want to use PROTON_LOG we need the ability to pass in PROTON_LOG=? and a custom SteamGameId that is only set for these program runs\n\t\t#      i.e. a default SteamGameId could be `extProtonRun`, but launchCustomProg could pass `customcommand`.\n\t\t#\n\t\t#      This would be tricky to add, but would be nice to have!\n\t\tCUSTPROGNAME=\"$( basename \"$PROGRAM\" )\"\n\t\tif [ \"$MODE\" == \"F\" ]; then  # Forked Proton/Wine 'normal' custom program\n\t\t\tif [ -n \"${RUNPROGARGS[0]}\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$PROGRAM' with arguments '${RUNPROGARGS[*]}' forked into the background\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS_WINE\" \"$CUSTPROGNAME\" )\"; extWine64Run \"$PROGRAM\" \"${RUNPROGARGS[@]}\") &\n\t\t\t\telse\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS\" \"$CUSTPROGNAME\" )\"; \"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\telse\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS\" \"$CUSTPROGNAME\" )\"; \"$RUNPROTON\" run \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$PROGRAM' forked into the background\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_WINE\" \"$CUSTPROGNAME\" )\"; extWine64Run \"$PROGRAM\") &\n\t\t\t\telse\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED\" \"$CUSTPROGNAME\" )\"; \"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\telse\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED\" \"$CUSTPROGNAME\" )\"; \"$RUNPROTON\" run \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\tfi\n\t\telif [ \"$MODE\" == \"FC\" ]; then  # Forked Proton/Wine 'command line' custom program\n\t\t\tif [ -n \"${RUNPROGARGS[0]}\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$WICO $PROGRAM' with arguments '${RUNPROGARGS[*]}' forked into the background\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS_WINE\" \"$CUSTPROGNAME\" )\"; extWine64Run \"$RUNWICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\") &\n\t\t\t\telse\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS\" \"$CUSTPROGNAME\" )\"; \"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\telse\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_ARGS\" \"$CUSTPROGNAME\" )\"; \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$WICO $PROGRAM' forked into the background\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED_WINE\" \"$CUSTPROGNAME\" )\"; extWine64Run \"$RUNWICO\" \"$PROGRAM\") &\n\t\t\t\telse\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED\" \"$CUSTPROGNAME\" )\"; \"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\telse\n\t\t\t\t\t\t(sleep \"$FWAIT\"; notiShow \"$( strFix \"$NOTY_CUSTPROG_FORKED\" \"$CUSTPROGNAME\" )\"; \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\") &\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\tfi\n\t\telif [ \"$MODE\" == \"R\" ]; then  # Regular (no fork/wait/etc) Proton/Wine custom program\n\t\t\tif [ -n \"${RUNPROGARGS[0]}\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$PROGRAM' with arguments '${RUNPROGARGS[*]}' regularly\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_ARGS_WINE\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\textWine64Run \"$PROGRAM\" \"${RUNPROGARGS[@]}\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_ARGS\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t\"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\"$RUNPROTON\" run \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$PROGRAM' regularly\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_WINE\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\textWine64Run \"$PROGRAM\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - \\\"${RUNEXTPROGRAMARGS[*]}\\\" \\\"$RUNPROTON\\\" run \\\"$PROGRAM\\\"\"\n\t\t\t\t\t\t\"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" waitforexitandrun \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\"$RUNPROTON\" run \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\tfi\n\t\telif [ \"$MODE\" == \"RC\" ]; then  # Regular (no fork/wait/etc) Proton/Wine 'command line' custom program\n\t\t\tif [ -n \"${RUNPROGARGS[0]}\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$WICO $PROGRAM' with arguments '${RUNPROGARGS[*]}' regularly\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_ARGS_WINE\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\textWine64Run \"$RUNWICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_ARGS\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t\"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" \"${RUNPROGARGS[@]}\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$WICO $PROGRAM' regularly\"\n\t\t\t\trestoreOrgVars\n\t\t\t\tif [ \"$EXTWINERUN\" -eq 1 ]; then\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG_WINE\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\textWine64Run \"$RUNWICO\" \"$PROGRAM\"\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_CUSTPROG_REG\" \"$CUSTPROGNAME\" )\"\n\t\t\t\t\tif [ -n \"${RUNEXTPROGRAMARGS[0]}\" ]; then\n\t\t\t\t\t\t\"${RUNEXTPROGRAMARGS[@]}\" \"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\"$RUNPROTON\" run \"$WICO\" \"$PROGRAM\" 2>&1 | tee \"$STLSHM/${FUNCNAME[0]}.log\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\temptyVars \"O\" \"X\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction getWindowHeight {\n\tWINID=\"$1\"\n\t\"$XWININFO\" -id \"$WINID\" -stats | awk '$1==\"-geometry\" {print $2}' | cut -d '+' -f1 | cut -d 'x' -f2\n}\n\nfunction getLatestGeoElf {\n\tGEOELFDLURL=\"$(\"$WGET\" -q \"$GEOELFURL\" -O - 2> >(grep -v \"SSL_INIT\") | sed $'s/<a href=/\\\\\\n/g' | grep \"^\\\"https\" | grep \"\\.zip\" | grep -oP '\"\\K[^\"]+' | grep -m1 https)\" # maybe make less fragile later :)\n\tGEOELFFILE=\"${GEOELFDLURL##*/}\"\n\tCURGEOELF=\"${GEOELFDLURL##*+v}\"\n\tCURGEOELF=\"${CURGEOELF%.*}\";\n\n\tCURGEOELFDIR=\"$GEOELFDLDIR/$CURGEOELF\"\n\tmkProjDir \"$CURGEOELFDIR\"\n\n\tGEODSTD=\"$CURGEOELFDIR\"\n\tGEODSTF=\"$GEODSTD/$GEOELFFILE\"\n\n\tif [ -f \"$GEODSTF\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Already have '$GEODSTF' - skipping download\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloading '$GEOELFDLURL' to '$GEODSTF'\"\n\t\tdlCheck \"$GEOELFDLURL\" \"$GEODSTF\" \"X\" \"Downloading '$GEOELFFILE'\"\n\t\t\"$UNZIP\" -q \"$GEODSTF\" -d \"$GEODSTD\" 2>/dev/null\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracted '$GEODSTF' to '$GEODSTD'\"\n\t\tif [ -L \"$LGEOELFSYM\" ]; then\n\t\t\trm \"$LGEOELFSYM\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating symlink '$LGEOELFSYM' pointing to '$CURGEOELFDIR'\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating symlink '$LGEOELFSYM' pointing to '$CURGEOELFDIR'\"\n\t\tfi\n\t\tln -s \"$CURGEOELFDIR\" \"$LGEOELFSYM\"\n\t\tcp \"$(find \"$GEODSTD\" -name \"*Version*\")\" \"$GEODSTD/${GEOELF}-version.txt\"\n\tfi\n}\n\nfunction configureGeoElf {\n\tfunction installGeo {\n\t\tfunction copyGeo {\n\t\t\trm \"$GEOELFENA\" 2>/dev/null\n\t\t\twhile read -r file; do\n\t\t\t\tcp \"$file\" \"$GEOELFDDIR\"\n\t\t\t\techo \"${file##*/}\" >> \"$GEOELFENA\"\n\t\t\tdone <<< \"$(find \"$LGEOELFSYM/$1\" -mindepth 1 -maxdepth 1 -type f)\"\n\n\t\t\t# not sure yet if (ShaderFixes) subdirectory is even required - maybe implement later TODO?\n\t\t\t#\t\t\twhile read -r dir; do\n\t\t\t#\t\t\t\tmkdir \"$GEOELFDDIR/${dir##*/}\"\n\t\t\t#\t\t\tdone <<< \"$(find \"$LGEOELFSYM/$1\" -mindepth 1 -type d)\"\n\t\t\t# ...\n\n\t\t\tcp \"$LGEOELFSYM/${GEOELF}-version.txt\" \"$GEOELFDDIR\"\n\t\t\techo \"${GEOELF}-version.txt\" >> \"$GEOELFENA\"\n\t\t}\n\n\t\tif [ ! -d \"$LGEOELFSYM/$1\" ] || [ \"$AUTOGEOELF\" -eq 1 ]; then\n\t\t\tgetLatestGeoElf\n\t\tfi\n\n\t\tif [ -d \"$LGEOELFSYM/$1\" ]; then\n\t\t\tif [ -f \"$GEOELFENA\" ]; then\n\t\t\t\tif [ \"$AUTOGEOELF\" -eq 1 ]; then\n\t\t\t\t\tGEOELFVI=\"$(cat \"$GEOELFDDIR/${GEOELF}-version.txt\")\"\n\t\t\t\t\tGEOELFVA=\"$(cat \"$LGEOELFSYM/${GEOELF}-version.txt\")\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installed $GEOELF version is '$GEOELFVI', latest downloaded version is '$GEOELFVA'\"\n\t\t\t\t\t# no need to check the newer version directly, because latest is either equal or newer\n\t\t\t\t\tif [ \"$GEOELFVI\" != \"$GEOELFVA\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing new $GEOELF version '$GEOELFVA'\"\n\t\t\t\t\t\tcopyGeo \"$1\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installed $GEOELF version '$GEOELFVI' is identical to the latest downloaded version '$GEOELFVA' - nothing to do\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - $GEOELF is already installed in the game dir and autoupdate is disabled - nothing to do\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing geo-11 drivers from '$LGEOELFSYM/$1' to '$GEOELFDDIR'\"\n\t\t\t\tcopyGeo \"$1\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$LGEOELFSYM' could not be found - can't enable $GEOELF\"\n\t\t\tUSEGEOELF=0\n\t\tfi\n\t}\n\n\tGEOELFDDIR=\"$EFD\"\n\tsetFullGameExePath \"GEOELFDDIR\"\n\tGEOELFENA=\"$GEOELFDDIR/${GEOELF}_enabled.txt\"\n\n\tif [ \"$USEGEOELF\" -eq 1 ]; then\n\t\tif [ \"$USECUSTOMCMD\" -eq 1 ] && [ -f \"$CUSTOMCMD\" ]; then\n\t\t\tARCHEXE=\"$CUSTOMCMD\"\n\t\telse\n\t\t\tARCHEXE=\"$GP\"\n\t\tfi\n\n\t\tif [ \"$(getArch \"$ARCHEXE\")\" == \"32\" ]; then\n\t\t\tinstallGeo \"x32\"\n\t\telif [ \"$(getArch \"$ARCHEXE\")\" == \"64\" ]; then\n\t\t\tinstallGeo \"x64\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not determine the architecture of '$GP' - not installing '$GEOELF'\" \"E\"\n\t\tfi\n\telse\n\t\tif [ -f \"$GEOELFENA\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $GEOELF was previously enabled, so removing all its files from '$GEOELFDDIR'\"\n\t\t\twhile read -r file; do\n\t\t\t\tRMFILE=\"$GEOELFDDIR/$file\"\n\t\t\t\tif [ -f \"$RMFILE\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing '$RMFILE'\"\n\t\t\t\t\trm \"$GEOELFDDIR/$file\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$RMFILE' missing - nothing to do\" \"E\"\n\t\t\t\tfi\n\t\t\tdone < \"$GEOELFENA\"\n\t\t\trm \"$GEOELFENA\"\n\t\tfi\n\tfi\n}\n\nfunction initSteamVR {\n\tif [ \"$RUNSBSVR\" -eq 1 ]; then\n\t\tSVRJUSTSTARTED=0\n\t\tSTEAMVRARGS=(-applaunch 250820)\n\n\t\tif \"$PGREP\" -a \"vrcompositor\" >/dev/null ; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like SteamVR is already running - skipping this function\"\n\t\telse\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - This function might be removed as it blocks exiting the launched game\"\n\n\t\t\tif ! \"$PGREP\" -a \"vrcompositor\" >/dev/null ; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Vrcompositor not running, so starting SteamVR now:\"\n\t\t\t\tif ! \"$STEAM\" \"${STEAMVRARGS[@]}\" 2>/dev/null >/dev/null ; then\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Starting SteamVR FAILED - skipping SBS-VR\"\n\t\t\t\t\techo \"RUNSBSVR=\\\"0\\\"\" > \"$VRINITLOCK\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Started SteamVR\"\n\t\t\t\t\tSVRJUSTSTARTED=1\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif ! \"$PGREP\" -a \"vrstartup\" >/dev/null ; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No vrstartup process running\"\n\t\t\telse\n\t\t\t\tif [ \"$SVRJUSTSTARTED\" -eq 1 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SteamVR initializing\"\n\t\t\t\t\twhile true; do\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for end of vrstartup\"\n\t\t\t\t\t\tif ! \"$PGREP\" -a \"vrstartup\" >/dev/null ; then\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Vrstartup found, but we didn't start SteamVR before! - skipping SBS-VR - just in case\"\n\t\t\t\t\techo \"RUNSBSVR=\\\"0\\\"\" > \"$VRINITLOCK\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\tif [ \"$SVRJUSTSTARTED\" -eq 1 ]; then\n\t\t\t\twhile true; do\n\t\t\t\t\tif ! \"$PGREP\" -a \"vrstartup\" >/dev/null ; then\n\t\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - No vrstartup instance running\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for end of vrstartup\"\n\t\t\t\tdone\n\t\t\tfi\n\n\t\t\tif [ \"$SVRJUSTSTARTED\" -eq 1 ]; then\n\t\t\tMAXWAIT=10\n\t\t\tCOUNTER=0\n\t\t\t\twhile ! \"$PGREP\" -a \"vrcompositor\" >/dev/null; do\n\t\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - timeout waiting for SteamVR - exit\"\n\t\t\t\t\t\t\"$PKILL\" -f \"$VRVIDEOPLAYER\"\n\t\t\t\t\t\techo \"RUNSBSVR=\\\"0\\\"\" > \"$VRINITLOCK\"\n\t\t\t\t\t\texit 1\n\t\t\t\t\tfi\n\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Sec $COUNTER/$MAXWAIT waiting for vrcompositor\"\n\t\t\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\t\t\tsleep 1\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - we didn't start SteamVR before so no need to wait for vrcompositor\"\n\t\t\tfi\n\n\t\t\tif \"$PGREP\" -a \"vrcompositor\" >/dev/null ; then\n\t\t\t\twhile true; do\n\t\t\t\t\tif ! \"$PGREP\" -a \"vrstartup\" >/dev/null ; then\n\t\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - No vrstartup instance running - looks good\"\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfi\n\t\t\t\t\tsleep 1\n\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for end of vrstartup\"\n\t\t\t\tdone\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Success - SteamVR running\"\n\t\t\t\tsleep 1 # better safe than sorry\n\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - SteamVR start failed - vrcompositor still not running - skipping SBS-VR!\"\n\t\t\t\techo \"RUNSBSVR=\\\"0\\\"\" > \"$VRINITLOCK\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction dlOvrFSR {\n\tfunction getLatestOVRFSR {\n\t\tbasename \"$(\"$WGET\" -q \"$OVRFSRURL\" -O - 2> >(grep -v \"SSL_INIT\") | grep -E 'releases.*download.*zip' | cut -d '\"' -f2 | head -n1)\"\n\t}\n\n\tDLDST=\"$STLDLDIR/$OVFS\"\n\tmkProjDir \"$DLDST\"\n\tOVRFSRZIP=\"$(getLatestOVRFSR)\"\n\tFSR1=\"${OVRFSRZIP//openvr_}\"\n\tFSRV=\"${FSR1%.*}\"\n\n\tif [ ! -f \"$DLDST/$OVRFSRZIP\" ]; then\n\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$OVRFSRZIP\")\" \"S\"\n\t\tdlCheck \"${OVRFSRURL}/download/$FSRV/$OVRFSRZIP\" \"$DLDST/$OVRFSRZIP\" \"X\" \"Downloading '$OVRFSRZIP'\"\n\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON2\" \"$OVRFSRZIP\")\" \"S\"\n\tfi\n\n\tif [ ! -s \"$DLDST/$OVRFSRZIP\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Downloaded file '$DLDST/$OVRFSRZIP' is empty - removing\"\n\t\trm \"$DLDST/$OVRFSRZIP\" 2>/dev/null\n\telse\n\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON3\" \"$OVRFSRZIP\")\" \"S\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Download of '$OVRFSRZIP' to '$DLDST' was successful\"\n\t \tOMSRC=\"$DLDST/$OVRMOD\"\n\t \tif [ -f \"$OMSRC\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing old '$OMSRC'\"\n\t\t\trm \"$OMSRC\" 2>/dev/null\n\t \tfi\n\t \tOASRC=\"$DLDST/$OVRA\"\n\t \tif [ -f \"$OASRC\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing old '$OASRC'\"\n\t\t\trm \"$OASRC\" 2>/dev/null\n\t \tfi\n\n\t \t\"$UNZIP\" -q \"$DLDST/$OVRFSRZIP\" -d \"$DLDST\" 2>/dev/null\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracted '$OVRFSRZIP' to '$DLDST'\"\n\tfi\n}\n\nfunction checkOpenVRFSR {\n\tOVRFSENA=\"${OVFS}-${PROGNAME,,}-enabled.txt\"\n\tOVRFP=\"$EFD/$OVRFSENA\"\n\tOVRAO=\"openvr_api.orig.dll\"\n\n\tif [ \"$USEOPENVRFSR\" -eq 1 ]; then\n\t\tOVRPATH=\"$(find \"$EFD\" -name \"*$OVRA\" | head -n1)\"\n\t\tif [ -f \"$OVRPATH\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$OVRA' under '$OVRPATH'\"\n\t\t\tOVRASRC=\"$STLDLDIR/$OVFS/$OVRA\"\n\t\t\tif [ ! -f \"$OVRASRC\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No $OVFS source dll found under '$OVRASRC' - Trying automatic download\"\n\t\t\t\tStatusWindow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$OVRFSRZIP\")\" \"dlOvrFSR\" \"DownloadOvrFSRStatus\"\n\t\t\tfi\n\n\t\t\tif [ ! -f \"$OVRASRC\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Still no $OVFS source dll found under '$OVRASRC' - automatic download failed!\"\n\t\t\telse\n\t\t\t\tOVRDIR=\"${OVRPATH%/*}\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Moving original '$OVRPATH' to $OVRDIR/$OVRAO\"\n\t\t\t\tmv \"$OVRPATH\" \"$OVRDIR/$OVRAO\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Copying '$OVRASRC' to '$OVRPATH'\"\n\t\t\t\tcp \"$OVRASRC\" \"$OVRPATH\"\n\t\t\t\techo \"${OVRPATH//$EFD/}\" > \"$OVRFP\"\n\n\t\t\t\tOVRMODSRC=\"$STLDLDIR/$OVFS/$OVRMOD\"\n\t\t\t\tif [ -f \"$OVRMODSRC\" ]; then\n\t\t\t\t\tif [ ! -f \"$OVRFP\" ]; then\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - No install 'log' found - should not happen here!\"\n\t\t\t\t\telse\n\t\t\t\t\t\tOVRMODDST=\"${OVRPATH%/*}/$OVRMOD\"\n\t\t\t\t\t\tif [ -f \"$OVRMODDST\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Moving '$OVRMODDST' to '${OVRMODDST}_old'\"\n\t\t\t\t\t\t\tmv \"$OVRMODDST\" \"${OVRMODDST}_old\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Copying '$OVRMODSRC' to '$OVRMODDST'\"\n\t\t\t\t\t\tcp \"$OVRMODSRC\" \"$OVRMODDST\"\n\t\t\t\t\t\techo \"${OVRMODDST//$EFD/}\" >> \"$OVRFP\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\tif [ -f \"$OVRFP\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$OVFS' installation (hopefully) succeeded!\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - USEOPENVRFSR is enabled, but no OVRA found in '$EFD'\"\n\t\tfi\n\telse\n\t\tif [ -f \"$OVRFP\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found old '$OVFS' installation in '$EFD' - Removing\"\n\t\t\twhile read -r line; do\n\t\t\t\tif grep -q \"$OVRA\" <<< \"$line\"; then\n\t\t\t\t\tOVRAOP=\"$EFD/${line//$OVRA/$OVRAO}\"\n\t\t\t\tif [ -f \"$OVRAOP\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Restoring original $OVRA from '$OVRAOP'\"\n\t\t\t\t\t\tmv \"$OVRAOP\" \"$EFD/$line\" 2>/dev/null\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No '$OVRAOP' found to restore\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing '$EFD/$line'\"\n\t\t\t\t\trm \"$EDF/$line\" 2>/dev/null\n\t\t\t\tfi\n\t\t\tdone < \"$OVRFP\"\n\t\t\trm \"$OVRFP\" 2>/dev/null\n\t\tfi\n\tfi\n}\n\nfunction getGamePidFromFile {\n\tif [ -z \"$GAMEWINPID\" ] && [ -f \"$TEMPGPIDFILE\" ]; then\n\t\tloadCfg \"$TEMPGPIDFILE\"\n\t\trm \"$TEMPGPIDFILE\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Got GAMEWINPID '$GAMEWINPID' from temp file\"\n\tfi\n}\n\nfunction getGamePidFromWindowName {\n\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\t# xdotool at least doesn't like '(' and ')', so cutting them out as a partial match should be enough\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Trying to get the PID of the window '$GAMEWINDOW'\"\n\t\tTESTPID=\"$(\"$XWININFO\" -name \"${GAMEWINDOW//\\\"/}\" -wm | grep \"Process id:\" | awk -F 'Process id: ' '{print $2}' | cut -d ' ' -f1)\"\n\t\tif [ -n \"$TESTPID\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found the PID '$TESTPID' for the window '$GAMEWINDOW'\"\n\t\t\techo \"$TESTPID\"\n\t\tfi\n\tfi\n}\n\nfunction GAMEPID {\n\tif\t[ \"$USECUSTOMCMD\" -eq 1 ] && [ \"$ONLY_CUSTOMCMD\" -eq 1 ]; then\n\t\t\"$PGREP\" -a \"\" | grep \"${CUSTOMCMD##*/}\" | grep \"Z:\" | grep \"\\.exe\" | grep -v \"CrashHandler\" | cut -d ' ' -f1 | tail -n1\n\telse\n\t\tif [ -n \"$WAITFORTHISPID\" ] && [ \"$WAITFORTHISPID\" != \"$NON\" ]; then\n\t\t\tGAMPI=\"$(\"$PIDOF\" \"$WAITFORTHISPID\" | cut -d ' ' -f1)\"\n\t\telse\n\t\t\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\t\t\tGAMPI=\"$(\"$XWININFO\" -name \"${GAMEWINDOW//\\\"/}\" -wm | grep \"Process id:\" | awk -F 'Process id: ' '{print $2}' | cut -d ' ' -f1)\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found gamewindow '$GAMEWINDOW' PID $GAMPI\"\n\t\t\telse\n\t\t\t\t# very likely this needs to be improved/changed\n\t\t\t\tGAMPI=\"$(\"$PGREP\" -a \"\" | grep \"$GE\" | grep \"Z:\" | grep \"\\.exe\" | grep -v \"CrashHandler\" | cut -d ' ' -f1 | tail -n1)\"\n\t\t\tfi\n\t\tfi\n\t\techo \"$GAMPI\"\n\tfi\n}\n\nfunction waitForGamePid {\n\tif [ -n \"$WAITFORTHISPID\" ] && [ \"$WAITFORTHISPID\" != \"$NON\" ]; then\n\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for alternative process WAITFORTHISPID '$WAITFORTHISPID'\"\n\telif [ \"$USECUSTOMCMD\" -eq 1 ] && [ \"$ONLY_CUSTOMCMD\" -eq 1 ]; then\n\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for custom process CUSTOMCMD '$CUSTOMCMD'\"\n\tfi\n\n\twhile [ -z \"$(GAMEPID)\" ]; do\n\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for game process $(GAMEPID)\"\n\t\tsleep 1\n\tdone\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Game process found at $(GAMEPID)\"\n}\n\nfunction getGameWinXIDFromPid {\n\tGPID=\"$1\"\n\twhile read -r WINS; do\n\t\tif [ \"$(\"$XPROP\" -id \"$(printf 0x%x'\\n' \"$WINS\")\" | grep \"_NET_WM_STATE(ATOM)\" -c)\" -ge 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found a controllable windowid\"\n\t\t\tWSIZ=\"$(getWindowHeight \"$WINS\")\"\n\t\t\tif [ \"$WSIZ\" -lt \"$MINVRWINH\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$(printf 0x%x'\\n' \"$WINS\")' height is less than $MINVRWINH - this is very likely not the game window - skipping\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} Found window id $(printf 0x%x'\\n' \"$WINS\") for '$GE' running with PID '$GPID'\"\n\t\t\t\techo \"$WINS\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tfi\n\tdone <<< \"$(\"$XDO\" search --pid \"$GPID\")\"\n}\n\nfunction getGameWinNameFromXid {\n\t\"$XDO\" getwindowname \"$1\"\n}\n\nfunction getGameWindowPID {\n\tif [ \"$MO2MODE\" == \"gui\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping check for window pid, because MO2MODE is '$MO2MODE'\"\n\tfi\n\n\tif [ -n \"$GAMEWINPID\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Already have the GAMEWINPID '$GAMEWINPID'\"\n\t\techo \"$GAMEWINPID\"\n\n\t\treturn\n\tfi\n\n\tMAXWAIT=20\n\tCOUNTER=0\n\tTESTPID=\"$NON\"\n\tWASCLOSED=0\n\n\ttouch \"$PIDLOCK\"\n\n\twhile [ \"$COUNTER\" -lt \"$MAXWAIT\" ]; do\n\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\tWASCLOSED=1\n\t\t\tbreak\n\t\tfi\n\t\tTESTPID=\"$(\"$XDO\" getactivewindow getwindowpid)\"\n\t\tSYMCWD=\"$(readlink \"/proc/$TESTPID/cwd\")\"\n\t\tSYMEXE=\"$(readlink \"/proc/$TESTPID/exe\")\"\n\n\t\tif [ -z \"$TESTPID\" ]; then\n\t\t\tcontinue\n\t\tfi\n\n\t\tif [ -n \"$HAVPA\" ]; then\n\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for game 'HAVPA' '$HAVPA' - leaving loop\"\n\t\t\tFOUNDWIN=\"$YES\"\n\t\t\tbreak;\n\t\telif [ -n \"$EXECUTABLE\" ] && [ \"$EXECUTABLE\" == \"$(cat \"/proc/$TESTPID/comm\")\" ]; then\n\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for game 'EXECUTABLE' '$EXECUTABLE' - leaving loop\"\n\t\t\tFOUNDWIN=\"$YES\"\n\t\t\tbreak;\n\t\telif [ -n \"$GE\" ] && [ \"$GE\" == \"$(cut -d '.' -f1 < \"/proc/$TESTPID/comm\")\" ]; then\n\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for game executable 'GE' '$GE' - leaving loop\"\n\t\t\tFOUNDWIN=\"$YES\"\n\t\t\tbreak;\n\t\telse\n\t\t\t# might not even be required anymore - maybe remove later:\n\t\t\tif [[ \"$SYMCWD\" == \"$EFD\" ]] && [[ \"$SYMEXE\" != *\"$YAD\"* ]]; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for CWD '$SYMCWD' with EXE '$SYMEXE' - leaving loop\"\n\t\t\t\tFOUNDWIN=\"$YES\"\n\t\t\t\tbreak;\n\t\t\tfi\n\t\t\tif [ -n \"$STEAM_COMPAT_CLIENT_INSTALL_PATH\" ] && [[ \"$SYMCWD\" == \"$STEAM_COMPAT_CLIENT_INSTALL_PATH\" ]] && [[ \"$SYMEXE\" != *\"$YAD\"* ]]; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for STEAM_COMPAT_CLIENT_INSTALL_PATH '$SYMCWD' with EXE '$SYMEXE' - leaving loop\"\n\t\t\t\tFOUNDWIN=\"$YES\"\n\t\t\t\tbreak;\n\t\t\tfi\n\t\tfi\n\n\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Sec $COUNTER/$MAXWAIT Game Window with pwd '$EFD' not yet in front\"\n\t\tCOUNTER=$((COUNTER+1))\n\t\tsleep 1\n\tdone\n\n\trm \"$PIDLOCK\" 2>/dev/null\n\n\tif [ \"$FOUNDWIN\" == \"$YES\" ]; then\n\t\tif [ \"$TESTPID\" == \"$NON\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - FAIL - Found PID returned but it is empty: '$TESTPID'\"\n\t\tfi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found PID '$TESTPID' for running exe '$(readlink \"/proc/$TESTPID/exe\")'\"\n\t\techo \"$TESTPID\"\n\telif [ \"$WASCLOSED\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - timeout waiting for '$EFD' window\"\n\t\techo \"$NON\"\n\tfi\n}\n\nfunction storeGameWindowNameMeta {\n\tGAMEWINDOW=\"$1\"\n\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ] && [ \"$STLPLAY\" -eq 0 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found game window name '$GAMEWINDOW' - saving into metadata file '$GEMETA/$AID.conf' for game '$MGNA ($AID)'\"\n\t\ttouch \"$FUPDATE\"\n\t\ttouch \"$GEMETA/$AID.conf\"\n\t\tupdateConfigEntry \"GAMEWINDOW\" \"$GAMEWINDOW\" \"$GEMETA/$AID.conf\"\n\tfi\n}\n\nfunction pickGameWindowNameMeta {\n\tif [ -n \"$1\" ]; then\n\t\tAID=\"$1\"\n\tfi\n\tif [ -n \"$2\" ]; then\n\t\tGN=\"$2\"\n\tfi\n\tfixShowGnAid\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Picking 'GAMEWINDOW' for '$SGNAID'\"\n\n\tGAMEWINXID=\"$(printf 0x%x'\\n' \"$(\"$XDO\" selectwindow)\")\"\n\tGAMEWINDOW=\"$(\"$XDO\" getwindowname \"$GAMEWINXID\")\"\n\tstoreGameWindowNameMeta \"$GAMEWINDOW\"\n\tif [ -n \"$AID\" ]; then\n\t\tnotiShow \"$(strFix \"$NOTY_PICKWINS\" \"$GAMEWINDOW\" \"$GN\" \"$AID\")\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Picked 'GAMEWINDOW $GAMEWINDOW' for '$SGNAID'\"\n\telse\n\t\tnotiShow \"$(strFix \"$NOTY_PICKWINN\" \"$GAMEWINDOW\")\"\n\tfi\n}\n\n# General function for the \"steamtinkerlaunch list <arg> function\"\n# Can take two types of commands:\n# - `steamtinkerlaunch list owned/installed/non-steam` - Returns \"Game Name (AppID)\"\n# - `steamtinkerlaunch list owned/installed/non-steam id/name/path/full` - Returns either AppID, Game Name, Game Paths, or all in the format \"Game Name (AppID) -> /path/to/game\"\n#\n# This function is not very efficient, Non-Steam Games in particular are inefficient because we read shortcuts.vdf each time we want to parse info\n# We parse it once to get the IDs, then again in each `getTitleFromID` and `getGameDir` call. This makes it pretty slow\n# It works for now, but in future we should enhance it\n#\n# One potential way to enhance this function is to split it out into a separate function for each filter type, but we would need\n# to consider how this function is used by other parts of the codebase and if that could be disruptive.\nfunction listSteamGames {\n\tfunction getGameCount {\n\t\tTOTALGAMESOWNEDPRINTFSTR=\"\"\n\n\t\tif [ \"$LSFILTER\" == \"owned\" ] || [ \"$LSFILTER\" == \"o\" ]; then\n\t\t\tTOTALGAMESOWNEDPRINTFSTR=\"Total games owned\"\n\t\telif [ \"$LSFILTER\" == \"non-steam\" ] || [ \"$LSFILTER\" == \"nsg\" ]; then\n\t\t\tTOTALGAMESOWNEDPRINTFSTR=\"Total Non-Steam Games in library\"\n\t\telse\n\t\t\tTOTALGAMESOWNEDPRINTFSTR=\"Total games installed\"\n\t\tfi\n\n\t\tprintf \"${TOTALGAMESOWNEDPRINTFSTR}: %s\\n\" \"${#LISTAIDSARR[@]}\"\n\t}\n\n\tLSFILTER=\"$1\"  # e.g. \"owned\", \"installed\", \"non-steam\"\n\tLSTYPE=\"$2\"  # e.g. \"id\", \"name\", \"path\", \"count\", \"full\"\n\tLISTAIDS=\"\"\n\n\tSEARCHSTEAMSHORTCUTS=\"0\"\n\n\tif [ \"$LSFILTER\" == \"owned\" ] || [ \"$LSFILTER\" == \"o\" ]; then\n\t\tLISTAIDS=\"$( getOwnedAids )\"\n\telif [ \"$LSFILTER\" == \"installed\" ] || [ \"$LSFILTER\" == \"i\" ]; then\n\t\tLISTAIDS=\"$( listInstalledGameIDs )\"\n\telif [ \"$LSFILTER\" == \"non-steam\" ] || [ \"$LSFILTER\" == \"nsg\" ]; then\n\t\tLISTAIDS=\"$( listNonSteamGameIDs )\"\n\t\tSEARCHSTEAMSHORTCUTS=\"1\"  # Only search Steam Shortcuts if we passed that filter type\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Unknown argument passed to 'list' command - '$LSFILTER'\"\n\t\techo \"unknown argument passed to 'list' command - '$LSFILTER'\"\n\n\t\texit\n\tfi\n\n\tif [ -z \"$LISTAIDS\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No games found for given filter '$LSFILTER'\"\n\t\techo \"No games found for filter '$LSFILTER'.\"\n\n\t\texit\n\tfi\n\n\treadarray -t LISTAIDSARR <<<\"$LISTAIDS\"\n\n\tif [ \"$LSTYPE\" == \"id\" ]; then\n\t\tfor AID in \"${LISTAIDSARR[@]}\"; do\n\t\t\techo \"$AID\"\n\t\tdone\n\telif [ \"$LSTYPE\" == \"name\" ]; then\n\t\tfor AID in \"${LISTAIDSARR[@]}\"; do\n\t\t\tgetTitleFromID \"${AID}\" \"${SEARCHSTEAMSHORTCUTS}\"\n\t\tdone\n\telif [ \"$LSTYPE\" == \"path\" ]; then\n\t\tif [ \"$LSFILTER\" == \"owned\" ] || [ \"$LSFILTER\" == \"o\" ]; then\n\t\t\techo \"Cannot use 'path' option when returning 'owned' games, as not all owned games will have an installation path!\"\n\t\t\techo \"Use another option instead, or leave blank to only return path for games which have an installation path.\"\n\n\t\t\texit\n\t\tfi\n\t\tfor AID in \"${LISTAIDSARR[@]}\"; do\n\t\t\tgetGameDir \"$AID\" \"1\" \"${SEARCHSTEAMSHORTCUTS}\"\n\t\tdone\n\telif [ \"$LSTYPE\" == \"count\" ]; then\n\t\tprintf \"\\n%s\\n\" \"$( getGameCount )\"\n\telif [ \"$LSTYPE\" == \"full\" ] || [ -z \"$LSTYPE\" ]; then  # This is the default if id/name/path/full is not passed\n\t\tfor AID in \"${LISTAIDSARR[@]}\"; do\n\t\t\tGAMDIR=\"$( getGameDir \"$AID\" \"\" \"${SEARCHSTEAMSHORTCUTS}\" )\"\n\t\t\tGAMDIREXISTS=$?\n\n\t\t\t# Only display game dir if the game is installed, i.e. if getGameDir does not return 1\n\t\t\t# This means we won't return an error if we're returning OWNED games, as some owned games may not have paths\n\t\t\tif [ \"$GAMDIREXISTS\" -eq 1 ]; then\n\t\t\t\tGAMNAM=\"$( getTitleFromID \"$AID\" \"${SEARCHSTEAMSHORTCUTS}\" )\"\n\t\t\t\tGAMNAMEXISTS=$?\n\t\t\t\tif [ \"$GAMNAMEXISTS\" -eq 1 ]; then\n\t\t\t\t\techo \"$AID\"  # Game name unknown, probably never installed before? Just return AppID in this case\n\t\t\t\telse\n\t\t\t\t\techo \"$GAMNAM ($AID)\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\techo \"$GAMDIR\"\n\t\t\tfi\n\t\tdone\n\n\t\tprintf \"\\n%s\\n\" \"$( getGameCount )\"  # Show total for \"full\"\n\tfi\n}\n\n# TODO do we want a way to specify that this function should only return Steam or Non-Steam AppIDs?\nfunction getIDFromTitle {\n\tSEARCHSTEAMSHORTCUTS=\"${2:-0}\"  # Default to not searching Steam shortcuts\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No game title was provided to search on -- Nothing to do!\"\n\t\techo \"A Game Title (part of it might be enough) is required as argument\"\n\n\t\treturn 1\n\tfi\n\t# Check installed game appmanifests for name matches\n\tFOUNDMATCHES=()\n\n\t# Steam games\n\twhile read -r APPMA; do\n\t\tAPPMATITLE=\"$( getValueFromAppManifest \"name\" \"$APPMA\" )\"\n\t\tif [[ ${APPMATITLE,,} == *\"${1,,}\"* ]]; then\n\t\t\tAPPMAAID=\"$( basename \"${APPMA%.*}\" | cut -d '_' -f2 )\"\n\t\t\tFOUNDGAMNAM=\"$( printf \"%s\\t\\t(%s)\" \"$APPMAAID\" \"$APPMATITLE\" )\"  # Doing it this way makes tabs even for some reason\n\t\t\tFOUNDMATCHES+=( \"$FOUNDGAMNAM\" )\n\t\tfi\n\tdone <<< \"$( listAppManifests )\"\n\n\t# Steam shortcuts\n\tif [ \"$SEARCHSTEAMSHORTCUTS\" -eq \"1\" ] && haveAnySteamShortcuts ; then\n\t\twhile read -r SCVDFE; do\n\t\t\tSVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\t\t\tSVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\n\t\t\tif [[ ${SVDFENAME,,} == *\"${1,,}\"* ]]; then\n\t\t\t\tFOUNDGAMNAM=\"$( printf \"%s\\t\\t(%s)\" \"$SVDFEAID\" \"$SVDFENAME\" )\"\n\t\t\t\tFOUNDMATCHES+=( \"$FOUNDGAMNAM\" )\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n\n\tif [ \"${#FOUNDMATCHES[@]}\" -gt 0 ]; then\n\t\tprintf \"%s\\n\" \"${FOUNDMATCHES[@]}\"\n\telse\n\t\techo \"Could not find AppID for name '$1'.\"\n\tfi\n}\n\nfunction getTitleFromID {\n\tSEARCHSTEAMSHORTCUTS=\"${2:-0}\"  # Default to not searching Steam shortcuts\n\tFOUNDGAMETITLE=\"\"\n\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Did not get an AppID to search on -- Nothing to do!\"\n\t\techo \"A Game ID is required as argument\"\n\n\t\treturn 1;\n\tfi\n\n\t# Search meta file if we have one for Game Title\n\tif [ -f \"$GEMETA/${1}.conf\" ]; then\n\t\tif grep -q \"^NAME\" \"$GEMETA/${1}.conf\"; then\n\t\t\tFOUNDGAMETITLE=\"$( grep \"^NAME\" \"$GEMETA/${1}.conf\" | cut -d '\"' -f2 )\"\n\t\telse\n\t\t\tFOUNDGAMETITLE=\"$( getAppInfoData \"$1\" \"name\" )\"\n\t\tfi\n\tfi\n\n\t# Try to get title from Steam appmanifest if we didn't find Game Title in meta file\n\tif [ -z \"$FOUNDGAMETITLE\" ]; then\n\t\tGAMEMANIFEST=\"$( listAppManifests | grep -m1 \"appmanifest_${1}.acf\" )\"\n\n\t\tif [ -n \"$GAMEMANIFEST\" ]; then\n\t\t\tFOUNDGAMETITLE=\"$( getValueFromAppManifest \"name\" \"$GAMEMANIFEST\" )\"\n\t\tfi\n\tfi\n\n\t# If we still haven't found the Game Title in the game meta file or appmanifest, check Steam Shortcuts if the option is enabled and if we have any\n\tif [ -z \"$FOUNDGAMETITLE\" ] && [ \"$SEARCHSTEAMSHORTCUTS\" -eq \"1\" ] && haveAnySteamShortcuts ; then\n\t\twhile read -r SCVDFE; do\n\t\t\tSVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\t\t\tSVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\n\t\t\tif [ \"$SVDFEAID\" -eq \"$1\" ]; then\n\t\t\t\tFOUNDGAMETITLE=\"$SVDFENAME\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n\n\t# If we didn't find the name in the STL meta file, Steam appmanifest, or shortcuts.vdf, give up\n\tif [ -z \"$FOUNDGAMETITLE\" ]; then\n\t\techo \"No Title found for '$1'\"\n\t\treturn 1\n\tfi\n\n\techo \"$FOUNDGAMETITLE\"\n}\n\n# Relies on game executable existing in STL meta file (i.e. any game launched before with STL)\nfunction getGameExe {\n\tSEARCHSTEAMSHORTCUTS=\"${2:-0}\"  # Default to not searching Steam shortcuts\n\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Called getGameExe without AppID -- Nothing to do!\"\n\t\techo \"A Game ID is required as argument\"\n\n\t\treturn 1\n\tfi\n\n\tINAID=\"$1\"\n\tEXE=\"\"\n\tNOTFOUNDSTR=\"No Executable or SteamTinkerLaunch file found for '$1'\"\n\n\t# Try to get appid from game name -- If multiple values, just pick first one\n\tif ! [ \"$INAID\" -eq \"$INAID\" ] 2>/dev/null; then\n\t\tINAID=\"$( getIDFromTitle \"$INAID\" | head -n1 )\"\n\t\tINAID=\"$( trimWhitespaces \"${INAID%(*}\")\"\n\tfi\n\n\tEXEGAMNAM=\"$( getTitleFromID \"$INAID\" )\"\n\n\t# Try to get game EXE from STL meta file\n\tif [ -n \"$INAID\" ] && [ -f \"$GEMETA/${INAID}.conf\" ]; then\n\t\t# Some games might only have \"EXECUTABLE\" in their meta conf file\n\t\tEXE=\"$(grep \"^EXECUTABLE\" \"$GEMETA/${INAID}.conf\" | cut -d '\"' -f2)\"\n\t\tif [ -z \"${EXE}\" ]; then\n\t\t\tEXE=\"$(grep \"^GAMEEXE\" \"$GEMETA/${INAID}.conf\" | cut -d '\"' -f2)\"\n\t\tfi\n\n\t\tif [ -n \"$EXE\" ]; then\n\t\t\tEXE=\"$EXEGAMNAM ($INAID) -> $( getGameDir \"$INAID\" \"only\" )/$EXE\"\n\t\tfi\n\tfi\n\n\t# Search on game shortcuts if EXE still not found\n\tif [ -z \"$EXE\" ] && [ \"$SEARCHSTEAMSHORTCUTS\" -eq 1 ] && haveAnySteamShortcuts ; then\n\t\t# Have to search on all shortcuts because we need to check game name as fallback\n\t\twhile read -r SCVDFE; do\n\t\t\tSCVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\t\t\tSCVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\t\t\tSCVDFEEXE=\"$( parseSteamShortcutEntryExe \"$SCVDFE\" )\"\n\n\t\t\tif [ \"$SCVDFEAID\" -eq \"$1\" ] 2>/dev/null || [[ ${SCVDFENAME,,} == *\"${1,,}\"* ]]; then\n\t\t\t\tSCVDFEEXE=\"${SCVDFEEXE#\\\"}\"\n\t\t\t\tEXE=\"$SCVDFENAME ($SCVDFEAID) -> ${SCVDFEEXE%\\\"}\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n\n\techo \"${EXE:-$NOTFOUNDSTR}\"\n}\n\nfunction getCompatData {\n\tSEARCHSTEAMSHORTCUTS=\"${2:-0}\"  # Default to not searching Steam shortcuts\n\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - No AppID or Game Title provided -- Nothing to do!\"\n\t\techo \"A Game ID or Game Title is required as argument\"\n\n\t\treturn 1\n\tfi\n\n\t# SteamTinkerLaunch stores a symlinkk to the prefix of each game launched with it,\n\t# so if we have this folder we can try to find if we have a symlink to the desired game's prefix as it may be faster\n\tif [ -d \"$STLCOMPDAT\" ]; then\n\t\t# Skips games which have ';' in the name (i.e. \"ROBOTICS;NOTES\"), as this throws off the 'cut' command, and instead we fall back to the getGameDir check\n\t\tif [ \"$1\" -eq \"$1\" ] 2>/dev/null; then  # This is for AppID check (-eq will fail if not integer expression)\n\t\t\twhile read -r \"complink\"; do\n\t\t\t\tTEST=\"$(readlink \"$complink\" | grep \"/$1$\")\"\n\t\t\t\tif [ -d \"$TEST\" ] && ! [[ \"${complink##*/}\" == *\";\"* ]]; then\n\t\t\t\t\tFCOMPDAT=\"${complink##*/};$TEST\"\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone <<< \"$(find \"$STLCOMPDAT\")\"\n\t\telse  # This is for Game Name checks\n\t\t\tTEST=\"$(find \"$STLCOMPDAT\" -iname \"*${1}*\" | head -n1)\"\n\t\t\tif [ -n \"$TEST\" ] && ! [[ \"${TEST##*/}\" == *\";\"* ]]; then\n\t\t\t\tFCOMPDAT=\"${TEST##*/};$(readlink \"$TEST\")\"\n\t\t\tfi\n\t\tfi\n\n\t\t# If we found a matching compatdata, return it here\n\t\tif [ -n \"$FCOMPDAT\" ]; then\n\t\t\tCOMPATGAMENAME=\"$( echo \"$FCOMPDAT\" | cut -d \";\" -f 1 )\"\n\t\t\tCOMPATGAMEPATH=\"$( echo \"$FCOMPDAT\" | cut -d \";\" -f 2 )\"\n\t\t\tCOMPATGAMEAID=\"$( basename \"$COMPATGAMEPATH\" )\"\n\n\t\t\techo \"${COMPATGAMENAME} (${COMPATGAMEAID}) -> ${COMPATGAMEPATH}\"\n\n\t\t\treturn 0\n\t\tfi\n\tfi\n\n\tunset FCOMPDAT\n\n\t# If no symlink found in STL dir, check the game's library folder, with fallback to the Steam root library folder (i.e. Non-Steam Games)\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not find compatdata named in STL symlink dir, searching with getGameLibraryFolder...\"\n\tSEARCHGAMEDIR=\"$( getGameDir \"$1\" )\"\n\n\tCOMPATGAMESTR=\"\"  # Final output string\n\tNOTFOUNDSTR=\"No $CODA dir found for '$1'\"\n\tCOMPATGAMEPATH=\"${SEARCHGAMEDIR##*-> }\"\n\tif [ -d \"$COMPATGAMEPATH\" ]; then\n\t\tCOMPATGAMENAME=\"$( echo \"${SEARCHGAMEDIR%(*}\" | xargs )\" # e.g. TEKKEN 7\n\t\tCOMPATGAMEAID=\"$( echo \"$SEARCHGAMEDIR\" | grep -oE '\\([^)]+\\)' | tail -n1 | sed 's:(::g;s:)::g' )\"  # e.g. 389730\n\n\t\tLIFOCOMPATDIR=\"$( realpath \"$COMPATGAMEPATH/../../$CODA/$COMPATGAMEAID\" )\"\n\t\tSROOTCOMPATDIR=\"$SROOT/$SA/$CODA/$COMPATGAMEAID\"\n\n\t\tCOMPATDATADIR=\"$( [ -d \"$LIFOCOMPATDIR\" ] && echo \"$LIFOCOMPATDIR\" || echo \"$SROOTCOMPATDIR\" )\"\n\t\tif [ -d \"$COMPATDATADIR\" ]; then\n\t\t\tCOMPATGAMESTR=\"$COMPATGAMENAME ($COMPATGAMEAID) -> $COMPATDATADIR\"\n\t\tfi\n\tfi\n\n\t# Check Steam Shortcuts for games never launched with STL\n\tif [ ! -d \"$SEARCHGAMEDIR\" ] && [ \"$SEARCHSTEAMSHORTCUTS\" -eq 1 ] && haveAnySteamShortcuts ; then\n\t\twhile read -r SCVDFE; do\n\t\t\tSCVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\t\t\tSCVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\n\t\t\t## If we have a match, build a hardcoded compatdata pointing at the Steam Root compatdata dir and if it exists, return that\n\t\t\t## Seems like this is always where Steam generates compatdata for Non-Steam Games\n\t\t\t## may instead be primary drive which defaults to Steam Root, but for now looks like Steam Root is the main place, so should work most of the time\n\t\t\tif [ \"$SCVDFEAID\" -eq \"$1\" ] 2>/dev/null || [[ ${SCVDFENAME,,} == *\"${1,,}\"* ]]; then\n\t\t\t\tSCVDFECODA=\"$SROOT/$SA/$CODA/${SCVDFEAID}\"\n\t\t\t\tif [ -d \"$SCVDFECODA\" ]; then\n\t\t\t\t\tCOMPATGAMESTR=\"$SCVDFENAME ($SCVDFEAID) -> $SCVDFECODA\"\n\t\t\t\tfi\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n\n\techo \"${COMPATGAMESTR:-$NOTFOUNDSTR}\"\n}\n\n# Credit to StackOverflow community wiki\nfunction trimWhitespaces {\n\tINSTR=\"$*\"\n\tINSTR=\"${INSTR#\"${INSTR%%[![:space:]]*}\"}\"  # remove leading whitespace characters\n\tINSTR=\"${INSTR%\"${INSTR##*[![:space:]]}\"}\"  # remove trailing whitespace characters\n\techo \"$INSTR\"\n}\n\n# Extracts a value from a given App Manifest file path\nfunction getValueFromAppManifest {\n\tKEY=\"$1\"\n\tAPPMA=\"$2\"\n\tEXTVAL=\"$( grep -m1 \"$KEY\" \"$APPMA\" | sed \"s-\\t- -g;s-\\\"${KEY}\\\"--g;s-\\\"--g\" )\"  # xargs gets angry when names have single quotes, e.g. \"Shantae and the Pirate's Curse\"\n\n\ttrimWhitespaces \"$EXTVAL\"\n}\n\n# Returns game install directory in the format \"Game (AppID) -> /path/to/gamefolder\"\nfunction getGameDir {\n\tONLYPATH=\"$2\"\n\tSEARCHSTEAMSHORTCUTS=\"${3:-0}\"  # Default to not searching Steam shortcuts\n\tFOUNDINSTEAMSHORTCUTS=0\n\n\t# Exit early if no search name/appid is given\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Missing GameID or Game Title to search on -- Nothing to do!\"\n\t\techo \"A Game ID or Game Title is required as argument\"\n\n\t\treturn 1\n\tfi\n\n\t# First assume user entered AppID, then if no AppManifest found, try get AppID from name and search on that\n\tSEARCHMANIFEST=\"$( listAppManifests | grep -m1 \"appmanifest_${1}.acf\" )\"\n\tif [ -z \"$SEARCHMANIFEST\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not find App Manifest with entered argument '$1' - Assuming it is a game title and trying to find its AppID from title\"\n\t\tSEARCHGETIDFROMTITLE=\"$( getIDFromTitle \"$1\" | head -n1 )\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - called 'getIDFromTitle' for argument '$1', it returned '$SEARCHGETIDFROMTITLE'\"\n\t\tSEARCHAID=\"$( echo \"$SEARCHGETIDFROMTITLE\" | cut -d \"(\" -f 1 | xargs)\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracted AppID from 'getIDFromTitle' result is '$SEARCHAID' - Searching for App Manifest with this AppID\"\n\n\t\tSEARCHMANIFEST=\"$( listAppManifests | grep -m1 \"appmanifest_${SEARCHAID}.acf\" )\"\n\n\t\t# This nesting is ugly, but only exists for logging purposes\n\t\tif [ -z \"$SEARCHMANIFEST\" ]; then\n\t\t\tif [ \"$SEARCHSTEAMSHORTCUTS\" -eq 0 ]; then\n\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Could not find game directory for '$1' - Maybe it is not installed\"\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not find game directory for '$1' - Will search on Steam Shortcuts next\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found matching App Manifest '$SEARCHMANIFEST'\"\n\t\tfi\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found matching App Manifest file for presumed entered AppID '$1' - Manifest file is '$SEARCHMANIFEST'\"\n\tfi\n\n\tAPPMAINSTDIR=\"$( getValueFromAppManifest \"installdir\" \"$SEARCHMANIFEST\" 2>/dev/null )\"\n\tAPPMALIBFLDR=\"$( dirname \"$SEARCHMANIFEST\" )\"\n\tGAMINSTDIR=\"$APPMALIBFLDR/common/$APPMAINSTDIR\"\n\tMUSINSTDIR=\"$APPMALIBFLDR/music/$APPMAINSTDIR\"  # Fixes a not found error for installed soundtracks\n\n\t# If still not found, optionally search Steam shortcuts\n\tif [ ! -d \"$GAMINSTDIR\" ] && [ \"$SEARCHSTEAMSHORTCUTS\" -eq 1 ] && haveAnySteamShortcuts ; then\n\t\twhile read -r SCVDFE; do\n\t\t\tSCVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\t\t\tSCVDFENAME=\"$( parseSteamShortcutEntryAppName \"$SCVDFE\" )\"\n\t\t\tSCVDFEEXE=\"$( parseSteamShortcutEntryExe \"$SCVDFE\" )\"\n\n\t\t\t## If we have a match, build a hardcoded compatdata pointing at the Steam Root compatdata dir and if it exists, return that\n\t\t\t## Seems like this is always where Steam generates compatdata for Non-Steam Games\n\t\t\t## may instead be primary drive which defaults to Steam Root, but for now looks like Steam Root is the main place, so should work most of the time\n\t\t\tif [ \"$SCVDFEAID\" -eq \"$1\" ] 2>/dev/null || [[ ${SCVDFENAME,,} == *\"${1,,}\"* ]]; then\n\t\t\t\tAPPMAGN=\"${SCVDFENAME}\"\n\t\t\t\tAPPMAAID=\"${SCVDFEAID}\"\n\t\t\t\tGAMINSTDIR=\"$( dirname \"${SCVDFEEXE}\" )\"  # Could still fail if EXE dir no longer exists, but edge case\n\n\t\t\t\t# TODO make this a function later, we use this a lot\n\t\t\t\tGAMINSTDIR=\"${GAMINSTDIR#\\\"}\"\n\t\t\t\tGAMINSTDIR=\"${GAMINSTDIR%\\\"}\"\n\n\t\t\t\tFOUNDINSTEAMSHORTCUTS=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone <<< \"$( getSteamShortcutHex )\"\n\tfi\n\n\t# Exit now if we didn't find the game directory\n\tif [ ! -d \"${GAMINSTDIR}\" ] && [ ! -d \"${MUSINSTDIR}\" ]; then\n\t\techo \"Could not find install directory for '$1'\"\n\t\treturn 1\n\tfi\n\n\t# Don't fetch these if we found and set the information already from a Steam shortcuts, since we already set these variables if we found a Steam shortcut\n\t# We don't get here if we didn't find a game dir for either a Steam game or shortcut\n\tif [ \"$FOUNDINSTEAMSHORTCUTS\" -eq 0 ]; then\n\t\tAPPMAGN=\"$( getValueFromAppManifest \"name\" \"$SEARCHMANIFEST\" )\"\n\t\tAPPMAAID=\"$( getValueFromAppManifest \"appid\" \"$SEARCHMANIFEST\" )\"\n\tfi\n\n\tif [ -z \"$ONLYPATH\" ]; then\n\t\tprintf \"%s (%s) -> %s\\n\" \"$APPMAGN\" \"$APPMAAID\" \"$GAMINSTDIR\"\n\telse\n\t\tprintf \"%s\\n\" \"$GAMINSTDIR\"  # Only output path, used by \"listSteamGames\"\n\tfi\n}\n\n### BEGIN BINARY VDF FUNCTIONS ###\n\n# Convert Steam Shortcut AppID from hex to 32bit unsigned integer\nfunction convertSteamShortcutAppID {\n    SHORTCUTAPPIDHEX=\"$1\"\n    SHORTCUTAPPIDLITTLEENDIAN=\"$( echo \"$SHORTCUTAPPIDHEX\" | tac -rs .. | tr -d '\\n' )\"\n    echo \"$((16#${SHORTCUTAPPIDLITTLEENDIAN}))\"\n}\n\n# Convert shortcuts.vdf hex to text with nullbyte stripped\nfunction convertSteamShortcutHex {\n\tprintf \"%s\" \"$1\" | xxd -r -p | tr -d '\\0'\n}\n\n# Get the raw, unparsed hex for an entry from shortcuts.vdf\nfunction getSteamShortcutEntryHex {\n\tSHORTCUTSVDFINPUTHEX=\"$1\"  # The hex block representing the shortcut\n\tSHORTCUTSVDFMATCHPATTERN=\"$2\"  # The pattern to match against in the block\n\n\tprintf \"%s\" \"$SHORTCUTSVDFINPUTHEX\" | grep -oP \"${SHORTCUTSVDFMATCHPATTERN}\\K.*?(?=${SHORTCUTVDFENDPAT})\"\n}\n\n# Parse a hex shortcuts.vdf entry based on a start pattern and convert to text - Unfortunately does not work for appid\nfunction parseSteamShortcutEntryHex {\n\tSHORTCUTSVDFINPUTHEX=\"$1\"  # The hex block representing the shortcut\n\tSHORTCUTSVDFMATCHPATTERN=\"$2\"  # The pattern to match against in the block\n\n\tconvertSteamShortcutHex \"$( getSteamShortcutEntryHex \"$SHORTCUTSVDFINPUTHEX\" \"$SHORTCUTSVDFMATCHPATTERN\" )\"\n}\n\n# Find shortcut entry by AppID and return the hex\nfunction findSteamShortcutByAppID {\n\tSHORTCUTENTRYAID=\"$1\"\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching for shortcut entry with AppID '$SHORTCUTENTRYAID'\"\n\twhile read -r SCVDFE; do\n\t\tSVDFEAID=\"$( parseSteamShortcutEntryAppID \"$SCVDFE\" )\"\n\t\tif [ \"$SVDFEAID\" -eq \"$SHORTCUTENTRYAID\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found shortcut entry with AppID '$SHORTCUTENTRYAID'\"  # Updating it how?\n\t\t\techo \"$SCVDFE\"\n\t\t\tbreak\n\t\tfi\n\tdone <<< \"$( getSteamShortcutHex )\"\n}\n\nfunction replaceSteamShortcutEntryValue {\n\tSHORTCUTSVDFENTRY=\"$1\"\n\tSHORTCUTSVDFMATCHPATTERN=\"$2\"\n\tSHORTCUTSVDFNEWVAL=\"$3\"\n\n\tSHORTCUTSVDFOLDVAL=\"$( getSteamShortcutEntryHex \"$SHORTCUTSVDFENTRY\" \"$SHORTCUTSVDFMATCHPATTERN\" )\"  # Get the value without start and end bytes\n\tSHORTCUTSVDFOLDCOL=\"$( printf \"%s\" \"$SHORTCUTSVDFENTRY\" | grep -oP \"${SHORTCUTSVDFMATCHPATTERN}.*?${SHORTCUTVDFENDPAT}\" )\"  # Get value with start and end bytes\n\tSHORTCUTSVDFNEWCOL=\"${SHORTCUTSVDFOLDCOL//\"$SHORTCUTSVDFOLDVAL\"/\"$SHORTCUTSVDFNEWVAL\"}\"\n\n\t# Handle blank entries by simply hardcoding old entry and building new entry\n\tif [ -z \"$SHORTCUTSVDFOLDVAL\" ]; then\n\t\tSHORTCUTSVDFOLDCOL=\"${SHORTCUTSVDFMATCHPATTERN}${SHORTCUTVDFENDPAT}\"\n\t\tSHORTCUTSVDFNEWCOL=\"${SHORTCUTSVDFMATCHPATTERN}${SHORTCUTSVDFNEWVAL}${SHORTCUTVDFENDPAT}\"\n\tfi\n\n\tSHORTCUTNEWENTRY=\"${SHORTCUTSVDFENTRY//\"$SHORTCUTSVDFOLDCOL\"/\"$SHORTCUTSVDFNEWCOL\"}\"\n\n\tprintf \"%s\" \"$SHORTCUTNEWENTRY\" | tr -d '\\0'\n}\n\n## Takes a shortcut appid, finds the shortcut entry, updates the given column value, replaces the hex for that section in the hex for the shortcuts.vdf file, writes out updated hex to new file\nfunction editSteamShortcutEntry {\n\tSCPATH=\"$STUIDPATH/config/$SCVDF\"  # TODO make this a globally accessible path instead of hardcoding it everywhere\n\n\tSHORTCUTENTRYAID=\"$1\"  # i.e. 23435463\n\tSHORTCUTCOLUMN=\"$2\"  # i.e. \"appname\"\n\tSHORTCUTNEWVAL=\"$( xxd -p -c 0 <<< \"$3\" )\"  # i.e. \"New Name\" but in hex\n\n\tSHORTCUTSCONTENT=\"$( getSteamShortcutsVdfFileHex )\"\n\tSHORTCUTSENTRY=\"$( findSteamShortcutByAppID \"$SHORTCUTENTRYAID\" )\"\n\n\t## Find bytes that represent the column in shortcuts.vdf\n\tSHORTCUTEDITSTARTBYTES=\"\"\n\tcase $SHORTCUTCOLUMN in\n\t\t\"appid\")\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - AppID not supported, skipping\"\n\t\t\tshift ;;\n\t\t\"appname\")\n\t\t\tSHORTCUTEDITSTARTBYTES=\"${SHORTCUTVDFNAMEHEXPAT}\"\n\t\t\tshift ;;\n\t\t\"Exe\")\n\t\t\tSHORTCUTEDITSTARTBYTES=\"${SHORTCUTVDFEXEHEXPAT}\"\n\t\t\tshift;;\n\t\t\"StartDir\")\n\t\t\tSHORTCUTEDITSTARTBYTES=\"${SHORTCUTVDFSTARTDIRHEXPAT}\"\n\t\t\tshift ;;\n\t\t\"icon\")\n\t\t\tSHORTCUTEDITSTARTBYTES=\"${SHORTCUTVDFICONHEXPAT}\"\n\t\t\tshift ;;\n\tesac\n\n\tif [ -z \"$SHORTCUTEDITSTARTBYTES\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Unknown or unsupported column name '$SHORTCUTCOLUMN', skipping\"\n\t\treturn\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Proceeding to edit '$SHORTCUTCOLUMN' field of shortcut '$SHORTCUTENTRYAID'\"\n\n\t# Replace original entry's value bytes with new bytes, then replace the old bytes in the entire shortcuts file with the new bytes and write it out\n\tSHORTCUTNEWENTRY=\"$( replaceSteamShortcutEntryValue \"$SHORTCUTSENTRY\" \"$SHORTCUTEDITSTARTBYTES\" \"$SHORTCUTNEWVAL\" )\"\n\tSHORTCUTSCONTENT=\"${SHORTCUTSCONTENT//\"$SHORTCUTSENTRY\"/\"$SHORTCUTNEWENTRY\"}\"\n\n\t# Write out new bytes with bad 0a byte removed (causes issues when reading paths etc, so strip it out)\n\techo \"$SHORTCUTSCONTENT\" | sed 's/0a//g' | xxd -r -p > \"$SCPATH\"\n}\n\n# Get shortcuts.vdf hex and grep each entry using start and end patterns (including a special case for the beginning of shortcuts.vdf)\nfunction getSteamShortcutHex {\n\tSCPATH=\"$STUIDPATH/config/$SCVDF\"\n\tgetSteamShortcutsVdfFileHex | grep -oP \"(${SHORTCUTVDFFILESTARTHEXPAT}|${SHORTCUTVDFENTRYBEGINHEXPAT})\\K.*?(?=${SHORTCUTSVDFENTRYENDHEXPAT})\"  # Get entire shortcuts.vdf as hex, then grep each entry using the begin and end patterns for each block\n}\n\n# Get full shortcuts.vdf hex including all start and end bytes -- Used for editing shortcuts.vdf\nfunction getSteamShortcutsVdfFileHex {\n\tSCPATH=\"$STUIDPATH/config/$SCVDF\"\n\txxd -p -c 0 \"$SCPATH\"\n}\n\nfunction listNonSteamGameIDs {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Reading all Non-Steam AppIDs from shortcuts.vdf\"\n\twhile read -r SCVDFE; do\n\t\tparseSteamShortcutEntryAppID \"$SCVDFE\"\n\tdone <<< \"$( getSteamShortcutHex )\"\n}\n\nfunction haveAnySteamShortcuts {\n\tif [ \"$( getSteamShortcutHex | wc -c )\" -gt 0 ]; then\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n}\n\n# Grep and convert AppID from a given block of hex representing a shortcut entry in shortcuts.vdf by taking the first 8 bytes\nfunction parseSteamShortcutEntryAppID {\n\tconvertSteamShortcutAppID \"$( printf \"%s\" \"$1\" | grep -oP \"${SHORTCUTVDFAPPIDHEXPAT}\\K.{8}\" )\"\n}\n\n### Functions to get information from specific parts of the shortcuts VDF ###\nfunction parseSteamShortcutEntryAppName {\n\tparseSteamShortcutEntryHex \"$1\" \"${SHORTCUTVDFNAMEHEXPAT}\"\n}\n\nfunction parseSteamShortcutEntryExe {\n\tparseSteamShortcutEntryHex \"$1\" \"${SHORTCUTVDFEXEHEXPAT}\"\n}\n\nfunction parseSteamShortcutEntryStartDir {\n\tparseSteamShortcutEntryHex \"$1\" \"${SHORTCUTVDFSTARTDIRHEXPAT}\"\n}\n\nfunction parseSteamShortcutEntryIcon {\n\tparseSteamShortcutEntryHex \"$1\" \"${SHORTCUTVDFICONHEXPAT}\"\n}\n\n### END BINARY VDF FUNCTIONS ###\n\nfunction getGameWindowName {\n\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Already have the gamewindow name: '$GAMEWINDOW' - skipping\"\n\t\trm \"$PIDLOCK\" 2>/dev/null\n\telse\n\t\trm \"$TEMPGPIDFILE\" 2>/dev/null\n\n\t\tif [ -n \"$GPFX\" ]; then\n\t\t\tSYSREG=\"$GPFX/$SREG\"\n\t\t\tif [ ! -f \"$SYSREG\" ] ; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - Waiting for the pfx '$GPFX' to be full created\"\n\t\t\tfi\n\n\t\t\twhile [ ! -f \"$SYSREG\" ]; do\n\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tsleep 1\n\t\t\tdone\n\t\tfi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No gamewindow name stored in metadata '$GEMETA/$AID.conf' yet. Trying to find it now\"\n\t\tFOUNDWIN=\"$NON\"\n\t\tGAMEWINPID=\"$(getGameWindowPID)\"\n\t\tif [ -n \"$GAMEWINPID\" ] ; then\n\t\t\tif [[ \"$GAMEWINPID\" == \"$NON\" ]] ; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No valid game window PID found\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found valid game window PID '$GAMEWINPID'\"\n\t\t\t\techo \"GAMEWINPID=\\\"$GAMEWINPID\\\"\" > \"$TEMPGPIDFILE\"\n\n\t\t\t\tGAMEWINXID=\"$(getGameWinXIDFromPid \"$GAMEWINPID\")\"\n\t\t\t\tif [ -n \"$GAMEWINXID\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found game window XID '$GAMEWINXID'\"\n\t\t\t\t\tstoreGameWindowNameMeta \"$(getGameWinNameFromXid \"$GAMEWINXID\")\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction getCfgHeader {\n\techo \"#########\"\n\techo \"#GAMENAME=\\\"$GAMENAME\\\"\"\n\techo \"#GAMEEXE=\\\"$GAMEEXE\\\"\"\n\techo \"#GAMEID=\\\"$AID\\\"\"\n\techo \"#PROTONVERSION=\\\"$PROTONVERSION\\\"\"\n\techo \"#########\"\n}\n\nfunction SBSrunVRVideoPlayer {\n\tSBSVRWINNAME=\"vr-video-player\"\n\n\tif [ \"$RUNSBSVR\" -eq 1 ]; then\n\t\tif [ -z \"$GAMEWINXID\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - GAMEWINXID is empty\"\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - forcefully killing game with $PKILL -9 '$GAMEWINPID' - should exit this script as well\"\n\t\t\tgetGamePidFromFile\n\t\t\t\"$PKILL\" -9 \"$GAMEWINPID\"\n\t\telse\n\t\t\tif [ -z \"$VRVIDEOPLAYERARGS\" ];\tthen\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - no VRVIDEOPLAYERARGS '$VRVIDEOPLAYERARGS'\"\n\t\t\tfi\n\n\t\t\tmapfile -d \" \" -t -O \"${#RUNVRVIDEOPLAYERARGS[@]}\" RUNVRVIDEOPLAYERARGS < <(printf '%s' \"$VRVIDEOPLAYERARGS\")\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$VRVIDEOPLAYER' with args '${RUNVRVIDEOPLAYERARGS[*]}' for windowid '$GAMEWINXID'\"\n\n\t\t\tGWIDDEC=\"$((\"$GAMEWINXID\"))\"\n\t\t\techo \"GWIDDEC=$GWIDDEC\" > \"$GWIDFILE\"\n\n\t\t\tsleep 1\t# ugly, but it might need a bit...\n\n\t\t\tif [ -z \"$SBSZOOM\" ]; then\n\t\t\t\t\"$VRVIDEOPLAYER\" \"${RUNVRVIDEOPLAYERARGS[@]}\" \"$GAMEWINXID\" 2>/dev/null &\n\t\t\telse\n\t\t\t\t\"$VRVIDEOPLAYER\" \"${RUNVRVIDEOPLAYERARGS[@]}\" --zoom \"$SBSZOOM\" \"$GAMEWINXID\" 2>/dev/null &\n\t\t\tfi\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for '$VRVIDEOPLAYER' window '$SBSVRWINNAME' for GAMEWINXID '$GAMEWINXID'\"\n\n\t\t\tMAXWAIT=20\n\t\t\tCOUNTER=0\n\n\t\t\twhile ! \"$XWININFO\" -name \"$SBSVRWINNAME\" -stats >/dev/null 2>/dev/null; do\n\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - timeout waiting for '$VRVIDEOPLAYER' - exit\"\n\t\t\t\t\t\"$PKILL\" -f \"$VRVIDEOPLAYER\"\n\t\t\t\t\tRUNSBSVR=0\n\t\t\t\t\texit 1\n\t\t\t\tfi\n\t\t\t\tif ! \"$PGREP\" -f \"$VRVIDEOPLAYER\" ; then\n\t\t\t\t\tif [ \"$COUNTER\" -ge 3 ]; then\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - '$VRVIDEOPLAYER' not running (crashed?) no need to wait for its window to appear - exit\"\n\t\t\t\t\t\tRUNSBSVR=0\n\t\t\t\t\t\texit 1\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$VRVIDEOPLAYER' not running yet - waiting a bit longer\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - WAIT - '$COUNTER/$MAXWAIT' sec waiting for '$VRVIDEOPLAYER' window '$SBSVRWINNAME'\"\n\t\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\t\tsleep 1\n\t\t\tdone\n\n\t\t\t# player windowid:\n\t\t\tSBSVRWID=$(\"$XWININFO\" -name \"$SBSVRWINNAME\" -stats | grep \"^$XWININFO\" | awk -F 'id: ' '{print $2}' | cut -d ' ' -f1)\n\n\t\t\tif [ -n \"$SBSVRWID\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Pressing w in '$VRVIDEOPLAYER' window '$SBSVRWINNAME' to adjust view: '$XDO windowactivate --sync $SBSVRWID key w'\"\n\t\t\t\t\"$XDO\" windowactivate --sync \"$SBSVRWID\" key w\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Activating game window with id '$GAMEWINXID' for input\"\n\t\t\t\t\"$XDO\" windowactivate --sync \"$GAMEWINXID\" click 1\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - WARN - SBSVRWID '$SBSVRWID' is empty!\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping because RUNSBSVR was set to 0\"\n\tfi\n}\n\nfunction SBSinitVRVideoPlayer {\n\tif [ \"$RUNSBSVR\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping because RUNSBSVR was set to 0\"\n\t\treturn\n\tfi\n\n\tif [ -z \"$GAMEWINXID\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not find GAMEWINXID -- Skipping\"\n\t\treturn\n\tfi\n\n\tif [ \"$GAMEWINXID\" == \"0x0\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} GAMEWINXID '$GAMEWINXID' is invalid - skipping VR\"\n\t\tRUNSBSVR=0\n\t\treturn\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} Using the gamewindow id '$GAMEWINXID' for stereoscopic 3D VR\"\n\tSBSrunVRVideoPlayer\t\"$GAMEWINXID\" 2>/dev/null &\n}\n\nfunction SBSstopVRVideoPlayer {\n\tif [ \"$RUNSBSVR\" -eq 1 ]; then\n\n\t\tMAXWAIT=20\n\t\tCOUNTER=0\n\t\twhile [ -z \"$GAMEWINPID\" ]; do\n\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - timeout waiting for Game process - exit\"\n\t\t\t\tbreak\n\t\t\tfi\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Don't have a Game process GAMEWINPID yet - waiting\"\n\t\t\tgetGamePidFromFile\n\t\t\tGAMEWINPID=\"$(getGamePidFromWindowName)\"\n\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\tsleep 1\n\t\tdone\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for game process '$GAMEWINPID' to finish...\"\n\n\t\tif ! \"$PGREP\" -a \"vrcompositor\" >/dev/null ; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - vrcompositor not running but it should - bailing out DRYRUN\"\n\t\tfi\n\n\t\ttail --pid=\"$GAMEWINPID\" -f /dev/null\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Game process '$GAMEWINPID' finished - closing '$VRVIDEOPLAYER'\"\n\n\t\tif [ -f \"$GWIDFILE\" ]; then\n\t\t\tsource \"$GWIDFILE\"\n\t\t\tGWIDTXT=\"/tmp/${VRVIDEOPLAYER##*/}_${GWIDDEC}\"\n\n\t\t\tif [ -f \"$GWIDTXT\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$GWIDTXT' found\"\n\t\t\t\tupdateConfigEntry \"SBSZOOM\" \"$(cat \"$GWIDTXT\")\" \"$SBSTWEAKCFG\"\n\t\t\t\trm \"$GWIDTXT\" >/dev/null 2>/dev/null\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - GWIDTXT '$GWIDTXT' not found - skipping\"\n\t\t\tfi\n\t\t\trm \"$GWIDFILE\" >/dev/null 2>/dev/null\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - GWIDFILE '$GWIDFILE' not found - skipping\"\n\t\tfi\n\n\t\t\"$PKILL\" -f \"$VRVIDEOPLAYER\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - -------- finished SBS-VR --------\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping because RUNSBSVR was set to 0\"\n\tfi\n}\n\nfunction waitForGameWindowName {\n\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have a Game Window '$GAMEWINDOW'\"\n\telse\n\t\tMAXWAIT=20\n\t\tCOUNTER=0\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for parallel process to find the Game Window\"\n\n\t\twhile [ -f \"$PIDLOCK\" ]; do\n\t\t\tif [ -f \"$CLOSETMP\" ] || [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\tsleep 1\n\t\tdone\n\n\t\tCOUNTER=0\n\n\t\twhile ! grep -q \"^GAMEWINDOW\" \"$GEMETA/$AID.conf\"; do\n\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Giving up waiting for GAMEWINDOW to appear in the game metadata '$GEMETA/$AID.conf'\"\n\t\t\t\tbreak\n\t\t\tfi\n\n\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - WAIT - '$COUNTER/$MAXWAIT' sec waiting for GAMEWINDOW to appear in game metadata '$GEMETA/$AID.conf'\"\n\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\tsleep 1\n\t\tdone\n\t\tloadCfg \"$GEMETA/$AID.conf\" X\n\n\t\tif [ -n \"$GAMEWINDOW\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Parallel process found Game Window '$GAMEWINDOW'\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Parallel process didn't find a Game Window GAMEWINDOW\"\n\t\tfi\n\tfi\n}\n\nfunction getGameWindowXID {\n\tif [ -n \"$GAMEWINXID\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have the windowid '$GAMEWINXID'\"\n\telse\n\t\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\t\tGAMEWINXID=\"$(\"$XWININFO\" -name \"${GAMEWINDOW//\\\"/}\" -stats | grep \"^$XWININFO\" | awk -F 'id: ' '{print $2}' | cut -d ' ' -f1)\"\n\t\t\tif [ -n \"$GAMEWINXID\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found windowid '$GAMEWINXID' for the windowname '$GAMEWINDOW'\"\n\t\t\tfi\n\t\tfi\n\t\tif [ -z \"$GAMEWINXID\" ]; then\n\t\t\tif [ -n \"$GAMEWINPID\" ]; then\n\t\t\t\tGAMEWINXID=\"$(getGameWinXIDFromPid \"$GAMEWINPID\")\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Don't have a game pid '$GAMEWINPID' to detect the windowid GAMEWINXID\"\n\t\t\tfi\n\t\t\tif [ -n \"$GAMEWINXID\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found windowid '$GAMEWINXID' for the game pid '$GAMEWINPID'\"\n\t\t\tfi\n\t\tfi\n\tfi\n\tif [ -n \"$GAMEWINPID\" ]; then\n\t\techo \"$GAMEWINPID\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Failed to detect the windowid GAMEWINXID\"\n\tfi\n}\n\nfunction waitForGameWindowXid {\n\tif [ -n \"$GAMEWINXID\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have the game window XID '$GAMEWINXID'\"\n\telse\n\t\tif [ -n \"$GAMEWINDOW\" ] && [ \"$GAMEWINDOW\" != \"$NON\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for a window GAMEWINXID of the game window '$GAMEWINDOW'\"\n\t\t\tMAXWAIT=20\n\t\t\tCOUNTER=0\n\t\t\twhile ! \"$XWININFO\" -name \"${GAMEWINDOW//\\\"/}\"; do\n\t\t\t\tif [ -f \"$CLOSETMP\" ]; then\n\t\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - ${PROGNAME,,} is just closing - leaving loop\"\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\t\tif [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Giving up waiting for GAMEWINXID\"\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\n\t\t\t\twritelog \"WAIT\" \"${FUNCNAME[0]} - WAIT '$COUNTER/$MAXWAIT'\"\n\t\t\t\tsleep 1\n\t\t\t\tCOUNTER=$((COUNTER+1))\n\t\t\tdone\n\t\telif [ -n \"$GAMEWINPID\" ]; then\n\t\t\tGAMEWINXID=\"$(getGameWinXIDFromPid \"$GAMEWINPID\")\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Can't wait for the windowid GAMEWINXID without either a valid GAMEWINDOW or GAMEWINPID\"\n\t\tfi\n\n\t\tGAMEWINXID=\"$(\"$XWININFO\" -name \"${GAMEWINDOW//\\\"/}\" -stats | grep \"^$XWININFO\" | awk -F 'id: ' '{print $2}' | cut -d ' ' -f1)\"\n\n\t\tif [ -n \"$GAMEWINXID\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found the game window id '$GAMEWINXID'\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Didn't find a game window id GAMEWINXID\"\n\t\tfi\n\tfi\n}\n\nfunction initSBSVR {\n\tif [ \"$RUNSBSVR\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Checking if VR is available\"\n\t\ttouch \"$VRINITLOCK\"\n\t\tcheckHMDPresent\n\t\tinitSteamVR\n\t\tmv \"$VRINITLOCK\" \"$VRINITRESULT\"\n\tfi\n}\n\nfunction startSBSVR {\n\tif [ \"$RUNSBSVR\" -eq 0 ]; then\n\t\treturn\n\tfi\n\n\tMAXWAIT=20\n\tCOUNTER=0\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Waiting for parallel process to detect VR HMD presence\"\n\n\twhile [ -f \"$VRINITLOCK\" ]; do\n\t\tif [ -f \"$CLOSETMP\" ] || [[ \"$COUNTER\" -ge \"$MAXWAIT\" ]]; then\n\t\t\tbreak\n\t\tfi\n\t\tCOUNTER=$((COUNTER+1))\n\t\tsleep 1\n\tdone\n\n\tloadCfg \"$VRINITRESULT\"\n\trm \"$VRINITRESULT\"\n\n\tif [ \"$RUNSBSVR\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - VR mode was cancelled, because the parallel process could not initialize VR\"\n\t\treturn\n\tfi\n\n\tif [ -f \"$SBSTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading SBS configfile '$SBSTWEAKCFG' to get current values\"\n\t\tloadCfg \"$SBSTWEAKCFG\"\n\tfi\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Preparing VR launch for '$AID'\"\n\twaitForGameWindowName\n\twaitForGameWindowXid\n\tSBSinitVRVideoPlayer\n\tSBSstopVRVideoPlayer\n\n\n}\n\nfunction checkHMDPresent {\n\tif \"$PGREP\" -a \"vrcompositor\" >/dev/null ; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like SteamVR is already running - skipping this function\"\n\t\treturn\n\tfi\n\n\tif [ \"$CHECKHMD\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping, as '$LSUSB' was not found\"\n\t\treturn\n\tfi\n\n\tUUDEV=\"/lib/udev/rules.d\"\n\tEUDEV=\"/etc/udev/rules.d\"\n\tSVR=\"steam-vr\"\n\tNOVRP=\"1142\"\n\tFOUNDHMD=0\n\n\tSVRRULE=\"$(find \"$UUDEV\" -name \"*$SVR*\")\"\n\tif [ -z \"$SVRRULE\" ]; then\n\t\tSVRRULE=\"$(find \"$EUDEV\" -name \"*$SVR*\")\"\n\tfi\n\n\tif [ -n \"$SVRRULE\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found $SVR udev rule - trying to find one of the VR devices before starting SteamVR\"\n\n\t\twhile read -r line; do\n\t\t\tIDV=\"$(cut -d ',' -f3 <<< \"$line\" | grep -oP '\"\\K[^\"]+')\"\n\t\t\tIDP=\"$(cut -d ',' -f4 <<< \"$line\" | grep -v \"$NOVRP\" | grep -oP '\"\\K[^\"]+')\"\n\t\t\tif [ -n \"$IDV\" ] && [ -n \"$IDP\" ]; then\n\t\t\t\tIDVP=\"$IDV:$IDP\"\n\t\t\t\tif \"$LSUSB\" | grep -q \"$IDVP\"; then\n\t\t\t\t\tFOUNDHMD=1\n\t\t\t\tfi\n\t\t\tfi\n\t\tdone < \"$SVRRULE\"\n\telse\n\t\techo \"no $SVR udev rule found\"\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - No $SVR udev rule found. As it might be stored under a different name, this is just a warning\"\n\tfi\n\n\tif [ \"$FOUNDHMD\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found $SVR hardware using '$LSUSB' - continuing\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No $SVR hardware found using '$LSUSB' - cancelling the SteamVR start\"\n\t\tRUNSBSVR=0\n\t\techo \"RUNSBSVR=\\\"0\\\"\" > \"$VRINITLOCK\"\n\tfi\n\n}\n\n# start game in side-by-side VR:\nfunction checkSBSVRLaunch {\n\tif [ \"$1\" != \"$NON\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Incoming gamewindow name is '$1'\"\n\t\tRUNSBSVR=1\n\tfi\n\n\tif [ -z \"$RUNSBSVR\" ] || [ \"$RUNSBSVR\" -eq 0 ]; then\n\t\treturn\n\tfi\n\t# override game configs with a sbs-tweak config if available:\n\t# first look for a global tweak:\n\tif [ -f \"$GLOBALSBSTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - VR using overrides found in '$GLOBALSBSTWEAKCFG'\"\n\t\tloadCfg \"$GLOBALSBSTWEAKCFG\"\n\tfi\n\n\t# then for a user tweak - (overriding the global one):\n\tif [ -f \"$SBSTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - VR using overrides found in '$SBSTWEAKCFG'\"\n\t\tloadCfg \"$SBSTWEAKCFG\"\n\tfi\n\n\t# start the whole side-by-side process:\n\tif [ \"$1\" != \"$NON\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${FUNCNAME[0]} - Using argument 1 as GAMEWINDOW '$GAMEWINDOW'\"\n\t\texport GAMEWINDOW=\"$1\"\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - ${FUNCNAME[0]} - Starting VRlaunch for '$AID'\"\n\tif [ \"$RUNSBSVR\" -eq 1 ]; then\n\t\tinitSBSVR &\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR - RUNSBSVR is '$RUNSBSVR' which is invalid - setting to 0\"\n\t\tRUNSBSVR=0\n\tfi\n\n}\n\nfunction checkSBSLaunch {\n\tif [ \"$RUNSBS\" -eq 0 ]; then\n\t\treturn\n\tfi\n\n\t# first look for a global tweak:\n\tif [ -f \"$GLOBALSBSTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using SBS overrides found in '$GLOBALSBSTWEAKCFG'\"\n\t\tloadCfg \"$GLOBALSBSTWEAKCFG\"\n\tfi\n\n\t# then for a user tweak - (overriding the global one):\n\tif [ -f \"$SBSTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using SBS overrides found in '$SBSTWEAKCFG'\"\n\t\tloadCfg \"$SBSTWEAKCFG\"\n\tfi\n\n}\n\nfunction dld3d47 {\n\tfunction dld3d4732 {\n\t\tdlCheck \"$DL_D3D47_32\" \"$D3D47DLDIR/${D3D47//.dll/.zip}\" \"X\" \"Downloading '$D3D47_32' into '$D3D47DLDIR'\"\n\t\tfind \"$DLDST\" -size 0 -delete\n\t\t\"$UNZIP\" \"$DLDST\" -d \"$D3D47DLDIR\" 2>/dev/null\n\t\tmv \"$D3D47DLDIR/$D3D47\" \"$D3D47DLDIR/$D3D47_32\" 2>/dev/null\n\t}\n\n\tfunction dld3d4764 {\n\t\tif [ ! -f \"$D3D47DLDIR/$D3D47_64\" ]; then\n\t\t\tdlCheck \"$DL_D3D47_64\" \"$D3D47DLDIR/$D3D47_64\" \"X\" \"Downloading '$D3D47_64' into '$D3D47DLDIR'\"\n\t\t\tfind \"$D3D47DLDIR/$D3D47_64\" -size 0 -delete\n\t\tfi\n\t}\n\tmkProjDir \"$D3D47DLDIR\"\n\tdld3d47\"$1\"\n}\n\nfunction installd3d47dll {\n\tD3D47DESTPATH=\"$2/$D3D47\"\n\n\tif [ \"$USESPEKD3D47\" -eq 0 ] && [ \"$USESPECIALK\" -eq 1 ]; then  # We need to check if SpecialK is enabled so we don't end up removing this if it's installed for ReShade\n\t\t# User has disabled d3dcompiler_47 for use with SpecialK -- Check if it's installed and tracked by us, and if so, remove it!\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - USESPEKD3D47 is '$USESPEKD3D47'\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - D3D47DESTPATH is '$D3D47DESTPATH'\"\n\t\tif [ -f \"$SPEKENA\" ]; then\n\t\t\t# DLL exists in game files and SpecialK tracked file is present\n\t\t\tif grep -qw \"$D3D47DESTPATH\" \"$SPEKENA\"; then\n\t\t\t\t# DLL exists and is present in SpecialK tracking file, assume this is ours and remove it!\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found tracked '$D3D47' DLL at '$D3D47DESTPATH' -- Assuming this is ours and removing it!\"\n\t\t\t\trm \"$D3D47DESTPATH\"  # Remove DLL file\n\t\t\t\tsed -i \"s#${D3D47DESTPATH}##g\" \"$SPEKENA\"  # Remove tracked D3D47 DLL (apparently sed doesn't like using delete with paths, so we use substituion)\n\t\t\tfi\n\t\tfi\n\telif [ ! -f \"$D3D47DESTPATH\" ]; then\n\t\tif [ ! -f \"$D3D47DLDIR/$1\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Sourcefile '$D3D47DLDIR/$1' missing - trying to download\"\n\t\t\tdld3d47 \"32\"\n\t\t\tdld3d47 \"64\"\n\t\tfi\n\n\t\tif [ ! -f \"$D3D47DLDIR/$1\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Sourcefile '$D3D47DLDIR/$1' still missing - skipping this file\"\n\t\telse\n\t\t\t# We should only copy the DLL and write to the DLL tracking file if the DLL is not already in the destination folder\n\t\t\tcp \"$D3D47DLDIR/$1\" \"$D3D47DESTPATH\" >/dev/null 2>/dev/null\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Copied '$D3D47DLDIR/$1' to '$2/$D3D47'\"\n\t\t\tif [ \"$USESPECIALK\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Writing '$D3D47DESTPATH' to '$SPEKENA'\"\n\t\t\t\techo \"$D3D47DESTPATH\" >> \"$SPEKENA\"\n\t\t\telif [ \"$USERESHADE\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Writing '$D3D47' to '$2/$RSTXT'\"\n\t\t\t\techo \"$D3D47\" >> \"$2/$RSTXT\"\n\t\t\t\tsort \"$2/$RSTXT\" -u -o \"$2/$RSTXT\"\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Function was called but neither ReShade nor SpecialK was specified -- No need to write out to a file that we're tracking this DLL\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Destfile '$D3D47DESTPATH' already exists - skipping\"\n\tfi\n}\n\nfunction autoBumpReShade {\n\tRSVERSLATEST=\"$( fetchGitHubTags \"$RESHADEPROJURL\" \"1\" )\"\n\tRSVERSLATEST=\"${RSVERSLATEST//v/}\"\n\tif [ \"$AUTOBUMPRESHADE\" -eq 1 ] && [[ \"$RSVERS\" < \"$RSVERSLATEST\" ]]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found newer version of '$RESH' - Updating '$RSVERS' to '$RSVERSLATEST\"\n\t\ttouch \"$FUPDATE\"\n\t\tupdateConfigEntry \"RSVERS\" \"$RSVERSLATEST\" \"$STLDEFGLOBALCFG\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$RSVERS' is the latest version of '$RESH' - not updating\"\n\tfi\n}\n\nfunction createDLReShadeList {\n\tif ! ping -q -c1 github.com &>/dev/null; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Can't reach GitHub, so not attempting to fetch ReShade versions list\"\n \t\tRESHADEVERSIONS=\"none\"\n\telse\n\t\tRSVERSONLINE=\"$( fetchGitHubTags \"$RESHADEPROJURL\" \"3\" )\"\n\t\tRSVERSONLINE=\"${RSVERSONLINE//$'\\n'/!}\"\n\t\tRSVERSONLINE=\"${RSVERSONLINE//$!/}\"\n\t\tRSVERSONLINE=\"${RSVERSONLINE//v/}\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found the following '$RESH' versions online '$RSVERSONLINE'\"\n\t\tRESHADEVERSIONS=\"$RSOVRVERS!$RSVERSONLINE!4.91!3.4.1\"\n\tfi\n}\n\nfunction dlReShade {\n\tif [ -z \"$1\" ]; then\n\t\tDLVERS=\"$RSVERS\"\n\telse\n\t\tDLVERS=\"$1\"\n\tfi\n\n\tDLDST=\"${RESHADESRCDIR}/${RSSU}_${DLVERS}.exe\"\n\tRSSETUP=\"${RESHADEDLURL}/${RSSU}_${DLVERS}.exe\"\n\n\tdlCheck \"$RSSETUP\" \"$DLDST\" \"X\" \"Downloading $RSSU\"\n\techo \"$DLVERS\" > \"${DLDST//.exe/.log}\"\n\n\tif [ ! -s \"$DLDST\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Downloaded file '$DLDST' is empty - removing\"\n\t\trm \"$DLDST\" 2>/dev/null\n\telse\n\t\t\"$UNZIP\" -qo \"$DLDST\" -d \"$RESHADESRCDIR/${DLVERS}\" 2>/dev/null\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Downloaded and extracted ${RESH}-v${DLVERS} file '$DLDST'\"\n\tfi\n}\n\nfunction overrideReShadeVersion {\n\t## ReShade version priority is as follows:\n\t## 1. Game Menu Override version ('RSOVRVERS') -- Only applies if 'RSOVRD' checkbox is toggled on\n\t## 2. SpecialK ReShade Override version ('RSSPEKVERS') -- Only applies if ReShade+SpecialK are used together, and if '$USERSSPEKVERS' checkbox is toggled on\n\t## 3. Global Menu ReShade version ('RSVERS')\n\n\tif [ \"$RSOVRD\" -eq 1 ]; then  # Game Menu ReShade Override version -- Takes priority over Global ReShade version AND SpecialK ReShade version\n\t\tif [[ ! \"$RSOVRVERS\" = \"$RSVERS\" ]]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Overriding global '$RESH' version '$RSVERS' with '$RSOVRVERS'\"\n       \t\tRSVERS=\"$RSOVRVERS\"\n   \t\telse\n       \t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$RESH' Override version and '$RESH' global version match - Not overriding\"\n   \t\tfi\n\telif [ \"$USESPECIALK\" -eq 1 ] && [ \"$USERESHADE\" -eq 1 ] && [ \"$USERSSPEKVERS\" -eq 1 ] && [ \"$USERESHSPEKPLUGIN\" -eq 1 ]; then  # Global Menu ReShade version to load when ReShade is loaded via SpecialK\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Overriding global '$RESH' version '$RSVERS' with SpecialK ReShade version override '$RSSPEKVERS' as it is enabled and ReShade+SpecialK are enabled together\"\n\t\tRSVERS=\"$RSSPEKVERS\"\n\telse\n    \twritelog \"SKIP\" \"${FUNCNAME[0]} - '$RESH' override is disabled - Skipping\"\n\tfi\n}\n\n# prepare reshade files if not found:\nfunction prepareReshadeFiles {\n\toverrideReShadeVersion\n\tif [ \"$DOWNLOAD_RESHADE\" -eq 1 ]; then\n\twritelog \"INFO\" \"${FUNCNAME[0]} - DOWNLOAD_RESHADE enabled\"\n\t\tif [ ! -f \"$D3D47DLDIR/$D3D47_32\" ]; then dd\n\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$D3D47DLDIR/$D3D47_32' missing - downloading\"\n\n\t\t\tif [ ! -d \"$RESHADESRCDIR\" ]; then\n\t\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$RESHADESRCDIR' does not exist - trying to create it\"\n\t\t\t\tmkProjDir \"$RESHADESRCDIR\"\n\t\t\tfi\n\t\tfi\n\t\tdld3d47 \"32\"\n\t\tdld3d47 \"64\"\n\n\t\t#Check if ReShade file are missing\n\t\tif [ ! -f \"$RESHADESRCDIR/$RSVERS/$RS_64\" ] || [ ! -f \"$RESHADESRCDIR/$RSVERS/$RS_32\" ]; then\n\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$RESHADESRCDIR/$RSVERS/$RS_64' and/or '$RS_32' missing - downloading\"\n\t\t\tdlReShade\n\t\tfi\n\n\t\tif [ ! -f \"$RESHADESRCDIR/$RSVERS/$RS_64_VK\" ] || [ ! -f \"$RESHADESRCDIR/$RSVERS/$RS_32_VK\" ]; then\n\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$RESHADESRCDIR/$RSVERS/$RS_64_VK' and/or '$RS_32_VK' missing - downloading\"\n\t\t\tdlReShade\n\t\tfi\n\n\t\t#Check if ReShade file is zero bytes\n\t\tif [ ! -s \"$RESHADESRCDIR/$RSVERS/$RS_64\" ] || [ ! -s \"$RESHADESRCDIR/$RSVERS/$RS_32\" ]; then\n\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$RESHADESRCDIR/$RSVERS/$RS_64' and/or '$RS_32' corrupted - downloading\"\n\t\t\tdlReShade\n\t\tfi\n\t\tif [ ! -s \"$RESHADESRCDIR/$RSVERS/$RS_64_VK\" ] || [ ! -s \"$RESHADESRCDIR/$RSVERS/$RS_32_VK\" ]; then\n\t\t\twritelog \"404\" \"${FUNCNAME[0]} - '$RESHADESRCDIR/$RSVERS/$RS_64_VK' and/or '$RS_32_VK' corrupted - downloading\"\n\t\t\tdlReShade\n\t\tfi\n\n\t\tif [ \"$RESHADEUPDATE\" -eq 1 ]; then\n\t\t\tif [ -f \"${RESHADESRCDIR}/${RSSU}.log\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found ${RESH} download log '${RESHADESRCDIR}/${RSSU}.log'\"\n\t\t\t\tif [ \"$RSVERS\" != \"$(cat \"${RESHADESRCDIR}/${RSSU}.log\")\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Last downloaded is ${RESH} version '$(cat \"${RESHADESRCDIR}/${RSSU}.log\")' is not equal to the latest available ${RESH} version '$RSVERS' - updating\"\n\t\t\t\t\tdlReShade\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\t# make sure Depth3D is even wanted\n\tif [ \"$RESHADE_DEPTH3D\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - RESHADE_DEPTH3D enabled\"\n\t\tStatusWindow \"$GUI_DLSHADER\" \"dlShaders depth3d\" \"DownloadShadersStatus\"\n\tfi\n}\n\nfunction SHADSRC {\n\techo \"$STLSHADDIR/${1,,}\"\n}\n\nfunction createShaderRepoList {\n\tSHADREPOURL=\"https://www.pcgamingwiki.com/wiki/${RESH}\"\n\tMAXAGE=1440\n\n\tif [ ! -f \"$SHADREPOLIST\" ] || test \"$(find \"$SHADREPOLIST\" -mmin +\"$MAXAGE\")\"; then\n\t\t# if this breaks, we'll use bundled static url list instead\n\t\t\"$WGET\" -q \"$SHADREPOURL\" -O - 2> >(grep -v \"SSL_INIT\") | sed -n '/Repository</,/table>/p' | grep \"^<td>\" | awk 'ORS=NR%3?FS:RS' | grep -v \"https://blues\" | sed \"s:<td><a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=::; s:</a></td> <td>:;:; s:</td> <td>:;:; s:\\\">:\\\";:; s:<br />: :; s: ;:;:; s:/tree/master::; s:/reshade/Shaders::\" > \"$SHADREPOLIST\"\n\tfi\n\n\tRCL=\"repocustomlist.txt\"\n\tSHADREPOCUSTOMLIST=\"$STLSHADDIR/$RCL\"\n\n\tif [ ! -f \"$SHADREPOCUSTOMLIST\" ]; then\n\t\tcp \"$GLOBALMISCDIR/$RCL\" \"$SHADREPOCUSTOMLIST\"\n\tfi\n\n\tif [ -f \"$SHADREPOCUSTOMLIST\" ]; then\n\t\tcat \"$SHADREPOCUSTOMLIST\" >> \"$SHADREPOLIST\"\n\t\tsort -u \"$SHADREPOLIST\" -o \"$SHADREPOLIST\"\n\tfi\n\n\tsed '/^$/d' -i \"$SHADREPOLIST\"\n}\n\nfunction unblockrssub {\n\tif grep -q \"^${RSSUB}$\" \"$SHADERREPOBLOCKLIST\"; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing essential '${RSSUB}' from the shader blocklist '$SHADERREPOBLOCKLIST'\"\n\t\tgrep -v \"^${RSSUB}$\" \"$SHADERREPOBLOCKLIST\" > \"$STLSHM/SHADERREPOBLOCKLIST_tmp.txt\"\n\t\tmv \"$STLSHM/SHADERREPOBLOCKLIST_tmp.txt\" \"$SHADERREPOBLOCKLIST\"\n\tfi\n}\n\nfunction dlShaders {\n\tcreateShaderRepoList\n\ttouch \"$SHADERREPOBLOCKLIST\"\n\tunblockrssub\n\n\tif [ -z \"$1\" ]; then\n\t\tif [ \"$DLSHADER\" -eq 1 ]; then\n\t\t\twhile read -r SHADLINE; do\n\t\t\t\tSHADURL=\"$(cut -d ';' -f1 <<< \"$SHADLINE\")\"\n\t\t\t\tSHADNAM=\"$(cut -d ';' -f2 <<< \"$SHADLINE\")\"\n\t\t\t\tif ! grep -qi \"^${SHADNAM}$\" \"$SHADERREPOBLOCKLIST\"; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating $SHADNAM\"\n\t\t\t\t\tnotiShow \"$(strFix \"$NOTY_DLSHADERS\" \"$SHADNAM\")\" \"S\"\n\t\t\t\t\tgitUpdate \"$(SHADSRC \"$SHADNAM\")\" \"${SHADURL//\\\"/}\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping $SHADNAM\"\n\t\t\t\tfi\n\t\t\tdone < \"$SHADREPOLIST\"\n\t\t\tnotiShow \"$GUI_DONE\" \"S\"\n\t\tfi\n\telse\n\t\tif [ \"$1\" == \"list\" ]; then\n\t\t\twhile read -r SHADLINE; do\n\t\t\t\tSHADNAM=\"$(cut -d ';' -f2 <<< \"$SHADLINE\")\"\n\t\t\t\techo \"\\\"${SHADNAM,,}\\\"\"\n\t\t\tdone < \"$SHADREPOLIST\" | sort\n\t\telif [ \"$1\" == \"repos\" ]; then\n\t\t\tShaderRepoDialog\n\t\telse\n\t\t\tSHADURL=\"$(grep -i \";$1;\" \"$SHADREPOLIST\" | cut -d ';' -f1)\"\n\t\t\tif [ -n \"$SHADURL\" ]; then\n\t\t\t\tgitUpdate \"$(SHADSRC \"$1\")\" \"${SHADURL//\\\"/}\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Invalid shader $1\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction ShaderRepoDialog {\n\tcreateShaderRepoList\n\tunblockrssub\n\tfixShowGnAid\n\texport CURWIKI=\"$PPW/Shader-Repositories\"\n\tTITLE=\"${PROGNAME}-${FUNCNAME[0]}\"\n\tpollWinRes \"$TITLE\"\n\n\tsetShowPic\n\n\tREPOPICKS=\"$(\n\twhile read -r SHADLINE; do\n\t\tSHADURL=\"$(cut -d ';' -f1 <<< \"$SHADLINE\")\"\n\t\tSHADNAM=\"$(cut -d ';' -f2 <<< \"$SHADLINE\")\"\n\t\tSHADAUT=\"$(cut -d ';' -f3 <<< \"$SHADLINE\")\"\n\t\tSHADDES=\"$(cut -d ';' -f4 <<< \"$SHADLINE\")\"\n\n\t\tif grep -qi \"^${SHADNAM}$\" \"$SHADERREPOBLOCKLIST\"; then\n\t\t\techo FALSE\n\t\telse\n\t\t\techo TRUE\n\t\tfi\n\n\t\techo \"$SHADURL\"\n\t\techo \"$SHADNAM\"\n\t\techo \"$SHADAUT\"\n\t\techo \"$SHADDES\"\n\tdone < \"$SHADREPOLIST\" | \\\n\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center \"$WINDECO\" --list --checklist --column=\"$GUI_USE\" --column=\"$GUI_URL\" --column=\"$GUI_NAME\" --column=\"$GUI_AUTH\" --column=\"$GUI_DESC\" --separator=\"\" --print-column=\"3\" \\\n\t--text=\"$(spanFont \"$(strFix \"$GUI_SHADREPDIALOG\" \"$SGNAID\")\" \"H\")\" --title=\"$TITLE\" --button=\"$BUT_CAN:0\" --button=\"$BUT_SELECT:2\" \"$GEOM\")\"\n\tcase $? in\n\t\t0)\t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_CAN' - Cancelling selection\"\n\t\t\t}\n\t\t;;\n\t\t2)\t{\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_SELECT' - Saving Selection\"\n\n\t\t\t\tif [ -z \"$REPOPICKS\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Nothing selected\"\n\t\t\t\t\tREPOPICKS=\"\"\n\t\t\t\telse\n\t\t\t\t\trm \"$SHADERREPOBLOCKLIST\" 2>/dev/null\n\t\t\t\t\twhile read -r SHADLINE; do\n\t\t\t\t\t\tSHADNAM=\"$(cut -d ';' -f2 <<< \"$SHADLINE\")\"\n\t\t\t\t\t\tif ! grep -q \"$SHADNAM\" <<< \"$REPOPICKS\"; then\n\t\t\t\t\t\t\techo \"${SHADNAM,,}\" >> \"$SHADERREPOBLOCKLIST\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone < \"$SHADREPOLIST\"\n\t\t\t\t\ttouch \"$SHADERREPOBLOCKLIST\"\n\t\t\t\t\tsort -u \"$SHADERREPOBLOCKLIST\" -o \"$SHADERREPOBLOCKLIST\"\n\t\t\t\t\tunblockrssub\n\t\t\t\tfi\n\t\t\t}\n\t\t;;\n\tesac\n}\n\nfunction setFullGameExePath {\n\tif [[ ( \"$USECUSTOMCMD\" -eq 1 && -f \"$CUSTOMCMD\" && \"$CUSTOMCMDRESHADE\" -eq 1 ) || \"$ONLY_CUSTOMCMD\" -eq 1 ]]; then\n\t\t# Use Alternative EXE Path if defined instead of custom command path\n\t\t# We should only use the custom command directory if no alternatiive EXE path is defined, and\n\t\t# we should prioritise the alt path if it is defined\n\t\tDEFINEDALTEXEPATH=\"$(GETALTEXEPATH)\"\n\t\tFGEP=\"${DEFINEDALTEXEPATH:-${CUSTOMCMD%/*}}\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using the directory '$FGEP' of the used custom command as absolute game exe path\"\n\n\t\tif [ \"$CUSTOMCMDRESHADE\" -eq 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - User enabled 'CUSTOMCMDRESHADE' - Using custom command directory with exe as ReShade installation directory\"\n\t\tfi\n\n\t\texport \"$1\"=\"$FGEP\"\n\telse\n\t\tif [ \"$USECUSTOMCMD\" -eq 1 ] && [ ! -f \"$CUSTOMCMD\" ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - User enabled Custom Command, but custom command at '$CUSTOMCMD' is not a file!\"\n\t\tfi\n\n\t\tif [ \"$CUSTOMCMDRESHADE\" -eq 0 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - User did not enable 'CUSTOMCMDRESHADE' - Using the game's exe directory as the ReShade installation directory\"\n\t\tfi\n\t\tsetShaderDest\n\t\tif [ -n \"$SHADDESTDIR\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using SHADDESTDIR '$SHADDESTDIR' for '$1'\"\n\t\t\texport \"$1\"=\"$SHADDESTDIR\"\n\t\telif [ -n \"$EFD\" ]; then\n\t\t\tloadCfg \"$GEMETA/$AID.conf\" X\n\t\t\tif [ -z \"$EXECUTABLE\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using the base game directory '$EFD' as absolute game exe path - probably never reached?\"\n\t\t\t\texport \"$1\"=\"$EFD\"\n\t\t\telse\n\t\t\t\tif [ \"$ISORIGIN\" -eq 1 ] && grep -q \"$L2EA\" <<< \"$EXECUTABLE\" ; then\n\t\t\t\t\tMYMETA=\"$EVMETAID/${EVALSC}_${AID}.vdf\"\n\t\t\t\t\tif [ -f \"$MYMETA\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Origin game detected - looking for the real executable name instead of the used command '$EXECUTABLE'\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"ORIGINEXE\" \"$EXECUTABLE\" \"$GEMETA/${AID}.conf\" # unused, but who knows what it is good for later\n\t\t\t\t\t\t# shellcheck disable=SC1003\n\t\t\t\t\t\tEXECUTABLE=\"$(grep \"Uninstall\" \"$MYMETA\" -A10 | grep \"DisplayIcon\" | awk -F '\\\\' '{print $NF}')\"\n\t\t\t\t\t\tEXECUTABLE=\"${EXECUTABLE//\\\"}\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"EXECUTABLE\" \"$EXECUTABLE\" \"$GEMETA/${AID}.conf\"\n\t\t\t\t\t\tGAMEEXE=\"${EXECUTABLE//.exe}\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"GAMEEXE\" \"$GAMEEXE\" \"$GEMETA/${AID}.conf\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Origin game detected - but $EVALSC file $MYMETA not found - can't look for original game name\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Using some weird old function to determine the absolute exe path - please report, this should never be reached\"\n\t\t\t\tfi\n\n\t\t\t\tif grep -q \"\\\\\\\\\" <<< \"$EXECUTABLE\"; then\n\t\t\t\t\tRELEX=\"${EXECUTABLE//\\\\//}\"\n\t\t\t\t\tFGEP=\"${EFD}/${RELEX%/*}\"\n\t\t\t\t\tif [ ! -d \"$FGEP\" ] && [ -d \"$EFD\" ]; then\n\t\t\t\t\t\tif grep -q \"/\" <<< \"${RELEX%/*}\"; then\n\t\t\t\t\t\t\tFGEP=\"${EFD}\"\n\t\t\t\t\t\t\twhile read -r subdir; do\n\t\t\t\t\t\t\t\tFGEP=\"$(find \"$FGEP\" -iname \"$subdir\")\"\n\t\t\t\t\t\t\tdone <<< \"$(tr '/' '\\n' <<< \"${RELEX%/*}\")\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tFGEP=\"$(find \"${EFD}\" -iname \"${RELEX%/*}\")\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\n\t\t\t\t\tif [ -d \"$FGEP\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$FGEP' as absolute game exe path\"\n\t\t\t\t\t\texport \"$1\"=\"$FGEP\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction setShaderDest {\n\tif [ -z \"$SHADLOGGED\" ]; then\n\t\tSHADLOGGED=0\n\tfi\n\n\tif [ -n \"$(GETALTEXEPATH)\" ]; then\n\t\tSHADDESTDIR=\"$(GETALTEXEPATH)\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Overriding SHADDESTDIR to '$SHADDESTDIR' because ALTEXEPATH is set to '$ALTEXEPATH'\"\n\tfi\n\n\tif [ -z \"$SHADDESTDIR\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Determining Shader destination directory SHADDESTDIR\"\n\t\tif [ -z \"$1\" ] || [ \"$1\" == \"last\" ]; then\n\t\t\tif [ \"$ABSGAMEEXEPATH\" != \"$NON\" ]; then\n\t\t\t\tSHADDESTDIR=\"${ABSGAMEEXEPATH%/*}\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using variable ABSGAMEEXEPATH for Shader destination directory '$SHADDESTDIR'\"\n\t\t\telse\n\t\t\t\tresetAID \"last\"\n\t\t\t\tif [ -f \"$LASTRUN\" ] && grep -q \"$AID\" \"$LASTRUN\"; then\n\t\t\t\t\tABSGAMEEXEPATH=\"$(grep \"^PREVABSGAMEEXEPATH\" \"$LASTRUN\" | cut -d '=' -f2)\"\n\t\t\t\t\tABSGAMEEXEPATHDIR=\"${ABSGAMEEXEPATH%/*}\"\n\t\t\t\t\tif [ -d \"${ABSGAMEEXEPATHDIR//\\\"/}\" ]; then\n\t\t\t\t\t\tSHADDESTDIR=\"${ABSGAMEEXEPATHDIR//\\\"/}\"\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using last PREVABSGAMEEXEPATH variable from '$LASTRUN' for Shader destination directory '$SHADDESTDIR'\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Found PREVABSGAMEEXEPATH variable in '$LASTRUN' but its directory does not exist\"\n\t\t\t\t\tfi\n\t\t\t\telse\n\t\t\t\t\tnotiShow \"$NOTY_NOAIDNOPREV\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using argument '$1' for Shader destination directory '$SHADDESTDIR'\"\n\t\t\tif [ -f \"$1\" ]; then\n\t\t\t\tSHADDESTDIR=\"$(dirname \"$1\")\"\n\t\t\telse\n\t\t\t\tSHADDESTDIR=\"$1\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$SHADDESTDIR\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using Shader destination directory '$SHADDESTDIR'\"\n\t\tfi\n\tfi\n\n\tif [ -n \"$SHADDESTDIR\" ] && [ \"$SHADLOGGED\" -eq 0 ] ; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Shader destination directory is '$SHADDESTDIR'\"\n\t\tSHADLOGGED=1\n\tfi\n}\n\nfunction disableThisGameShaderRepo {\n\tRMREP=\"$1\"\n\tif [ -n \"$2\" ]; then\n\t\tSHADDESTDIR=\"$2\"\n\telse\n\t\tsetShaderDest\n\tfi\n\n\tif [ -z \"$RSDSTS\" ]; then\n\t\tRSDST=\"$SHADDESTDIR/$RSSUB\"\n\t\tRSDSTS=\"$RSDST/Shaders\"\n\t\tRSDSTT=\"$RSDST/Textures\"\n\t\tRSDSTE=\"$RSDST/enabled\"\n\tfi\n\n\tif [ -n \"$RMREP\" ] && [ -f \"$RSDSTE/$RMREP\" ]; then\n\t\tnotiShow \"$(strFix \"$NOTY_SHADDIS\" \"$RMREP\")\"\n\n\t\t# removed disabled shaders\n\t\tif [ -d \"$RSDSTS\" ]; then\n\t\t\twhile read -r syml; do\n\t\t\t\tif [[ \"$(readlink \"$syml\")\" =~ $RMREP ]]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing shader symlink '$syml' from deactivated repo '$RMREP'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\trm \"$syml\"\n\t\t\t\tfi\n\t\t\tdone <<< \"$(find -L \"$RSDSTS\")\"\n\t\tfi\n\t\t# removed disabled textures\n\t\tif [ -d \"$RSDSTT\" ]; then\n\t\t\twhile read -r syml; do\n\t\t\t\tif [[ \"$(readlink \"$syml\")\" =~ $RMREP ]]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing texture symlink '$syml' from deactivated repo '$RMREP'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\trm \"$syml\"\n\t\t\t\tfi\n\t\t\tdone <<< \"$(find -L \"$RSDSTT\")\"\n\t\tfi\n\t\trm \"$RSDSTE/$RMREP\"\n\tfi\n}\n\nfunction enableThisGameShaderRepo {\n\tSELREPO=\"$1\"\n\tREPDIR=\"$STLSHADDIR/$SELREPO\"\n\n\tif grep -q \"^${SELREPO}$\" \"$SHADERREPOBLOCKLIST\"; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - The selected repo '$SELREPO' is in the block list '$SHADERREPOBLOCKLIST'\" \"X\" \"$SHADLOG\"\n\telse\n\t\tif [ -n \"$2\" ]; then\n\t\t\tSHADDESTDIR=\"$2\"\n\t\telse\n\t\t\tsetShaderDest\n\t\tfi\n\n\t\tif [ ! -d \"$REPDIR\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - The directory '$REPDIR' for the selected repo '$SELREPO' does not exist\" \"X\" \"$SHADLOG\"\n\t\telse\n\t\t\tif [ -z \"$RSDSTS\" ]; then\n\t\t\t\tRSDST=\"$SHADDESTDIR/$RSSUB\"\n\t\t\t\tRSDSTS=\"$RSDST/Shaders\"\n\t\t\t\tRSDSTT=\"$RSDST/Textures\"\n\t\t\t\tRSDSTE=\"$RSDST/enabled\"\n\n\t\t\t\tmkProjDir \"$RSDSTS\"\n\t\t\t\tmkProjDir \"$RSDSTT\"\n\t\t\t\tmkProjDir \"$RSDSTE\"\n\t\t\tfi\n\n\t\t\tif [ -f \"$RSDSTE/$SELREPO\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Repo '$SELREPO' is already activated for the game\" \"X\" \"$SHADLOG\"\n\t\t\telse\n\t\t\t\tnotiShow \"$(strFix \"$NOTY_SHADENA\" \"$SELREPO\")\"\n\t\t\t\t# updating shaders\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating shaders for activated repo '$SELREPO'\" \"X\" \"$SHADLOG\"\n\t\t\t\tSHADERSRC=\"$(find \"$REPDIR\" -type d -iname \"Shaders\")\"\n\t\t\t\tif [ -n \"$SHADERSRC\" ]; then\n\t\t\t\t\twhile read -r shaderfile; do\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating symlink '$RSDSTS/${shaderfile##*/}' for shader '$shaderfile'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\tln -s \"$shaderfile\" \"$RSDSTS/${shaderfile##*/}\" 2>/dev/null\n\t\t\t\t\tdone <<< \"$(find \"$SHADERSRC\" -mindepth 1 -maxdepth 1)\"\n\t\t\t\t\ttouch \"$RSDSTE/$SELREPO\"\n\t\t\t\tfi\n\n\t\t\t\t# updating textures\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating textures for activated repo '$SELREPO'\" \"X\" \"$SHADLOG\"\n\t\t\t\tTEXTURESRC=\"$(find \"$REPDIR\" -type d -iname \"Textures\")\"\n\t\t\t\tif [ -n \"$TEXTURESRC\" ]; then\n\t\t\t\t\twhile read -r texfile; do\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating symlink '$RSDSTT/${texfile##*/}' for texture '$texfile'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\tln -s \"$texfile\" \"$RSDSTT/${texfile##*/}\" 2>/dev/null\n\t\t\t\t\tdone <<< \"$(find \"$TEXTURESRC\" -mindepth 1 -maxdepth 1)\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction GameShaderDialog {\n\ttouch \"$SHADERREPOBLOCKLIST\"\n\n\tsetShaderDest \"$1\"\n\n\tRSDST=\"$SHADDESTDIR/$RSSUB\"\n\tRSDSTS=\"$RSDST/Shaders\"\n\tRSDSTT=\"$RSDST/Textures\"\n\tRSDSTE=\"$RSDST/enabled\"\n\n\tif [ -f \"$SHADLOG\" ]; then\n\t\trm \"$SHADLOG\" 2>/dev/null\n\tfi\n\n\tif [ \"$SHADDESTDIR\" != \"$NON\" ]; then\n\t\tmkProjDir \"$RSDSTS\"\n\t\tmkProjDir \"$RSDSTT\"\n\t\tmkProjDir \"$RSDSTE\"\n\tfi\n\n\tif [ -d \"$RSDST\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Shader Selection Dialog for dir '$RSDST'\"\n\n\t\tSHADDLLAST=\"$STLSHADDIR/lastdl.txt\"\n\t\tMAXAGE=1440\n\n\t\tif [ ! -f \"$SHADDLLAST\" ] || test \"$(find \"$SHADDLLAST\" -mmin +\"$MAXAGE\")\"; then\n\t\t\tStatusWindow \"$GUI_DLSHADER\" \"dlShaders\" \"DownloadShadersStatus\"\n\t\t\techo \"$(date) - ${FUNCNAME[0]}\" > \"$SHADDLLAST\"\n\t\tfi\n\n\t\texport CURWIKI=\"$PPW/Shader-Management\"\n\t\tTITLE=\"${PROGNAME}-Shader\"\n\t\tpollWinRes \"$TITLE\"\n\n\t\tsetShowPic\n\n\t\tunset AVAILREPOS\n\t\tunset SELREPOS\n\t\tunset UNSELREPOS\n\n\t\t# appending a ';' to the reponames to prevent cutting the wrong, similar filename\n\t\tmapfile -d \"|\" -t -O \"${#AVAILREPOS[@]}\" AVAILREPOS <<< \"$(find \"$STLSHADDIR\" -mindepth 1 -maxdepth 1 -not -empty -type d -printf \"%p;\\n\")\"\n\n\t\tSELREPOS=\"$(while read -r repo; do REPONAME=\"${repo##*/}\"; if [ -f \"$RSDSTE/${REPONAME//;}\" ]; then\techo TRUE ; echo \"${REPONAME//;}\"; else echo FALSE ; echo \"${REPONAME//;}\" ;fi ; done <<< \"$(printf \"%s\\n\" \"${AVAILREPOS[@]}\")\" | \\\n\t\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --center \"$WINDECO\" --list --checklist --column=\"$GUI_ADD\" --column=Shader-Repo --separator=\" \" --print-column=\"2\" \\\n\t\t--text=\"$(spanFont \"$(strFix \"$GUI_SHADERDIALOG\" \"${RSDST##*/}\")\" \"H\")\" --title=\"$TITLE\" \"$GEOM\")\"\n\t\tcase $? in\n\t\t\t0)  {\n\t\t\t\t\tUNSELREPO=( \"${AVAILREPOS[@]}\" )\n\n\t\t\t\t\tif [ -n \"${SELREPOS[0]}\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - At least one repo was enabled, so automatically enabling required repo '$RSSUB'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\tSELREPOS=( \"${SELREPOS[@]}\" \"$RSSUB\" )\n\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Activating shaders for enabled repos\" \"X\" \"$SHADLOG\"\n\n\t\t\t\t\t\twhile read -r SELREPO; do\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Enabled: $SELREPO\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\t\tunset REPDIR\n\t\t\t\t\t\t\tenableThisGameShaderRepo \"$SELREPO\"\n\t\t\t\t\t\t\tREPDIR=\"$STLSHADDIR/${SELREPO};\"\n\t\t\t\t\t\t\tUNSELREPO=( \"${UNSELREPO[@]/$REPDIR}\" )\n\n\t\t\t\t\t\tdone <<< \"$(printf \"%s\\n\" \"${SELREPOS[@]}\")\"\n\t\t\t\t\tfi\n\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Deactivating shaders for disabled repos\" \"X\" \"$SHADLOG\"\n\n\t\t\t\t\twhile read -r UNSEL; do\n\t\t\t\t\t\tif [ -n \"$UNSEL\" ] && [ \"$UNSEL\" != \";\" ]; then\n\t\t\t\t\t\t\tunset RMREP\n\t\t\t\t\t\t\tRMREP=\"${UNSEL//;}\"\n\t\t\t\t\t\t\tRMREP=\"${RMREP##*/}\"\n\t\t\t\t\t\t\tif [ \"$RMREP\" != \"$RSSUB\" ]; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Disabled: $RMREP\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\t\t\tdisableThisGameShaderRepo \"$RMREP\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone <<< \"$(printf \"%s\\n\" \"${UNSELREPO[@]}\")\"\n\n\t\t\t\t\tif [ -z \"${SELREPOS[0]}\" ] && [ -f \"$RSDSTE/$RSSUB\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No repo was enabled, so also disabling the repo '$RSSUB'\" \"X\" \"$SHADLOG\"\n\t\t\t\t\t\tdisableThisGameShaderRepo \"$RSSUB\"\n\t\t\t\t\tfi\n\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Deactivating shaders for blocked repos\" \"X\" \"$SHADLOG\"\n\t\t\t\t\twhile read -r BLOCKREP; do\n\t\t\t\t\t\tdisableThisGameShaderRepo \"$BLOCKREP\"\n\t\t\t\t\tdone < \"$SHADERREPOBLOCKLIST\"\n\t\t\t\t}\n\t\t\t;;\n\t\t\t1)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected CANCEL\"\n\t\t\t;;\n\t\tesac\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Dest Dir '$SHADDESTDIR' does not exist and could not be created - skipping\"\n\t\tif [ -z \"$SHADDESTDIR\" ]; then\n\t\t\tSHADDESTDIR=\"$NON\"\n\t\tfi\n\t\tnotiShow \"$(strFix \"$NOTY_MISSDIR\" \"$SHADDESTDIR\")\"\n\tfi\n\n\tif [ -n \"$2\" ];\tthen \"$2\";\tfi\n}\n\nfunction getArch {\n\t# maybe remove reduntant lines later\n\tif [ \"$(file \"$1\" | grep -c \"PE32 \")\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for '$1' is 32bit\"\n\t\techo \"32\"\n\telif [ \"$(file \"$1\" | grep -c \"PE32+ \")\" -eq 1 ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for '$1' is 64bit\"\n\t\techo \"64\"\n\telse\n\t\tif [ \"$(find \"$(dirname \"$1\")\" -name \"*.exe\" | wc -l)\" -ge 0 ]; then\n\t\t\tTESTEXE=\"$(find \"$(dirname \"$1\")\" -name \"*.exe\" | head -n1)\"\n\t\t\tif [ \"$(file \"$TESTEXE\" | grep -c \"PE32 \")\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for bundled '$TESTEXE' for '$1' is 32bit\"\n\t\t\t\techo \"32\"\n\t\t\telif [ \"$(file \"$TESTEXE\" | grep -c \"PE32+ \")\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for bundled '$TESTEXE' for '$1' is 64bit\"\n\t\t\t\techo \"64\"\n\t\t\tfi\n\t\telif [ \"$(find \"$(dirname \"$1\")\" -name \"*.dll\" | wc -l)\" -ge 0 ]; then\n\t\t\tTESTDLL=\"$(find \"$(dirname \"$1\")\" -name \"*.dll\" | head -n1)\"\n\t\t\tif [ \"$(file \"$TESTDLL\" | grep -c \"PE32 \")\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for bundled '$TESTDLL' for '$1' is 32bit\"\n\t\t\t\techo \"32\"\n\t\t\telif [ \"$(file \"$TESTDLL\" | grep -c \"PE32+ \")\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Architecture for bundled '$TESTDLL' for '$1' is 64bit\"\n\t\t\t\techo \"64\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not detect architecture for '$1' directly or indirectly\"\n\t\tfi\n\tfi\n}\n\nfunction chooseShaders {\n\tif [ \"$CHOOSESHADERS\" -eq 1 ]; then\n\t\tsetShadDestDir\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Shader Menu - shader destination path is '$SHADDESTDIR'\"\n\t\tGameShaderDialog \"$SHADDESTDIR\"\n\tfi\n}\n\n# Sort & add given ReShade DLL name to our tracked list of ReShade DLLs, if it is not already present\nfunction appendToRSTXT {\n\tif ! [ -f \"$INSTDESTDIR/$RSTXT\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$INSTDESTDIR/$RSTXT' does not already exist -- Will create a new file\"\n\t\ttouch \"$INSTDESTDIR/$RSTXT\"\n\tfi\n\n\tif ! grep -qw \"$1\" \"$INSTDESTDIR/$RSTXT\"; then\n\t\techo \"$1\" >> \"$INSTDESTDIR/$RSTXT\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Added '$1' to list of tracked ReShade DLLs at to '$INSTDESTDIR/$RSTXT'\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ReShade DLL '$1' already on list of tracked ReShade DLLs at '$INSTDESTDIR/$RSTXT' - Nothing to do.\"\n\tfi\n\n\tsort \"$INSTDESTDIR/$RSTXT\" -u -o \"$INSTDESTDIR/$RSTXT\"\n}\n\n# $2 used to specify NOD3D9 wehn we copied both DXGI and D3D9 DLLs, but we no longer do that, so $2 is unused\n# Last refactored for: https://github.com/sonic2kk/steamtinkerlaunch/pull/881\nfunction installRSdll {\n\tRSDLLNAMECONFLICTFOUND=0\n\n\t# Manage creating backup if untracked DLL with our selected ReShade DLL name already exists at location\n\t# This function could be changed in future to take the path as a parameter as well, but that was not important at time of writing\n\tfunction manageDuplicateRSDLL {\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - DLL with name '$1' found in game dir '$INSTDESTDIR' but is not tracked by us - This is possibly a game/mod DLL\"\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Backing up DLL at '$INSTDESTDIR/$1' to '$INSTDESTDIR/${1}.bak' and moving our ReShade DLL anyway\"\n\n\t\tif [ -f \"$INSTDESTDIR/${1}.bak\" ]; then\n\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - ERROR: Back-up DLL name '${1}.bak' already exists -- This is probably a very bad thing!\"\n\t\tfi\n\n\t\tmv \"$INSTDESTDIR/$1\" \"$INSTDESTDIR/${1}.bak\" 2>/dev/null\n\t\tcp \"$RESHADESRCDIR/$RSVERS/$2\" \"$INSTDESTDIR/$1\" >/dev/null 2>/dev/null\n\t}\n\n\tif [ ! -f \"$INSTDESTDIR/$1\" ] || [ \"$1\" == \"F\" ]; then\n\t\tif [ ! -f \"$RESHADESRCDIR/$RSVERS/$3\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Sourcefile '$RESHADESRCDIR/$RSVERS/$3' missing - skipping this file\"\n\t\telse\n\t\t\t# Installing DLL for the first time\n\t\t\tcp \"$RESHADESRCDIR/$RSVERS/$3\" \"$INSTDESTDIR/$1\" >/dev/null 2>/dev/null\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Copied '$RESHADESRCDIR/$RSVERS/$3' to '$INSTDESTDIR/$1'\"\n\t\tfi\n\telse\n\t\t# Check for ReShade DLL name conflicts\n\t\tif [ -f \"$INSTDESTDIR/$1\" ] && [ -f \"$INSTDESTDIR/$RSTXT\" ] && ! grep -qw \"$1\" \"$INSTDESTDIR/$RSTXT\"; then\n\t\t\tRSDLLNAMECONFLICTFOUND=1\n\t\tfi\n\n\t\tif [ \"$RESHADEUPDATE\" -eq 0 ]; then\n\t\t\tif [ \"$RSDLLNAMECONFLICTFOUND\" -eq 1 ]; then\n\t\t\t\t# DLL with name matching our ReShade DLL name exists, but was not installed by us (missing from ReShade.txt) - Backing up existing DLL and installing ReShade DLL anyway\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ReShade update is DISABLED\"\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Specified ReShade DLL name conflict detected!\"\n\n\t\t\t\tmanageDuplicateRSDLL \"$1\" \"$3\"  # 1 = target ReShade DLL name, 3 = ReShade DLL name from STL downloads folder to copy with the name specified in $1\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Destfile '$INSTDESTDIR/$1' already exists and is tracked by us, but not checking the installed version, because RESHADEUPDATE is '$RESHADEUPDATE'\"\n\t\t\tfi\n\t\telse\n\t\t\tif grep -q \"${RSVERS%%_*}\" <<< \"$(strings \"$INSTDESTDIR/$1\" | grep \"^Initializing\")\"; then\n\t\t\t\t# Existing ReShade DLL found and matches our selected version -- Don't update\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Destfile '$INSTDESTDIR/$1' already exists and looks up-to-date - skipping this file\"\n\t\t\telse\n\t\t\t\tif [ \"$RSDLLNAMECONFLICTFOUND\" -eq 1 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ReShade update is ENABLED\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Specified ReShade DLL name conflict detected!\"\n\n\t\t\t\t\tmanageDuplicateRSDLL \"$1\" \"$3\"  # 1 = target ReShade DLL name, 3 = ReShade DLL name from STL downloads folder to copy with the name specified in $1\n\t\t\t\telse\n\t\t\t\t\t# DLL either does not already exist or if it does, it's in the ReShade.txt file\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Destfile '$INSTDESTDIR/$1' already exists, but has a different version or is not a ReShade DLL - updating\"\n\t\t\t\t\tcp \"$RESHADESRCDIR/$RSVERS/$3\" \"$INSTDESTDIR/$1\" >/dev/null 2>/dev/null\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\n# install reshade:\nfunction installReshade {\n\tif [ \"$USERESHADE\" -eq 1 ]; then\n\t\tprepareReshadeFiles\n\t\tsetShadDestDir  # Have to use setShadDestDir because setShadDest will use ABSGAMEEXEPATH which is not Custom Command\n\n\t\tINSTDESTDIR=\"$SHADDESTDIR\"\n\n\t\t# Default ReShade DLL name to use to dxgi.dll if no DLL name is provided\n\t\tif [ -z \"$RESHADEDLLNAME\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - RESHADEDLLNAME is blank - Defaulting to '$DXGI'\"\n\t\t\tRESHADEDLLNAME=\"$DXGI\"\n\t\tfi\n\n\t\t# checking for previous dll conficts between $RS_DX_DEST and $RS_D9_DEST\n\t\t# note: modern ReShade uses \"ReShade_exenamehere.log\", and old versions use \"dxgi.log\" (if ReShade dll is named dxgi.dll). we support both names.\n\t\tRESHADE_CONFLICTS=$(find \"$INSTDESTDIR\" -maxdepth 1 \\( -name \"${RS_DX_DEST//.dll/.log}\" -or -name \"ReShade_*.log\" \\) -print0 | xargs -0 -r grep -l \"Another ReShade instance was already loaded from\" | wc -l)\n\t\tif [ \"$RESHADE_CONFLICTS\" -ge 1 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found $RS_DX_DEST conflict with $RS_D9_DEST\"\n\t\t\tif [ -f \"$INSTDESTDIR/$RS_D9_DEST\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing $RS_D9_DEST\"\n\t\t\t\trm \"$INSTDESTDIR/$RS_D9_DEST\"\n\t\t\telse\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - $RS_D9_DEST not found\"\n\t\t\tfi\n\n\t\t\tif [ -z \"$NOD3D9\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Blocking re-installation of '$RS_D9_DEST' by setting NOD3D9=1 in '$STLGAMECFG'\"\n\t\t\t\tupdateConfigEntry \"NOD3D9\" \"1\" \"$STLGAMECFG\"\n\t\t\t\texport NOD3D9=1\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No conflict found in old logfiles\"\n\t\tfi\n\n\t\tgetReShadeExeArch\n\n\t\tif [ -d \"$INSTDESTDIR\" ]; then\n\t\t\t# Get ReShade DLL names from comma separated list -- User will probably mostly only pass one, but this will handle cases where they might want multiple (ex: d3d9, opengl32)\n\t\t\tRSDLLNAMEARR=()  # Make sure the array of DLL names is always reset when installReshade is called, to avoid duplicate entries\n\t\t\tmapfile -d \",\" -t -O \"${#RSDLLNAMEARR[@]}\" RSDLLNAMEARR < <(printf '%s' \"$RESHADEDLLNAME\")\n\n\t\t\tfor CUSTRSDLL in \"${RSDLLNAMEARR[@]}\"; do\n\t\t\t\t# Append extension if no extension in DLL\n\t\t\t\tif ! [[ $CUSTRSDLL == *.* ]]; then\n\t\t\t\t\tCUSTRSDLL=\"${CUSTRSDLL}.dll\"\n\t\t\t\tfi\n\t\t\tdone\n\n\t\t\t# Check architecture to know which ReShade DLL architectures to copy over\n\t\t\tif [ \"$(getArch \"$CHARCH\")\" == \"32\" ]; then\n\t\t\t\t#32bit:\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing 32bit ${RESH} as '$CHARCH' is 32bit\"\n\t\t\t\tRSD3D47DLL=\"$D3D47_32\"\n\t\t\t\tRSARCHDLL=\"$RS_32\"\n\t\t\telif [ \"$(getArch \"$CHARCH\")\" == \"64\" ]; then\n\t\t\t\t#64bit:\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing 64bit ${RESH} as '$CHARCH' is 64bit\"\n\t\t\t\tRSD3D47DLL=\"$D3D47_64\"\n\t\t\t\tRSARCHDLL=\"$RS_64\"\n\t\t\telse\n\t\t\t\t#feelsbad.jpg:\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR in ${RESH} installation - no file information detected for '$CHARCH' or any 'neighbor file' - setting USERESHADE=0 for this session\"\n\t\t\t\texport USERESHADE=0\n\t\t\tfi\n\n\t\t\t# Common conditional to install either 32bit/64bit ReShade DLLs, since process is same, just different DLL names\n\t\t\t# USESPECIALK check needed because we can't use custom DLL names when using SpecialK -- It expects the raw ReShade32/ReShade64 DLL names\n\t\t\t#\n\t\t\t# Only install ReShade \"normally\" if (ReShade is on and SpecialK is off) or (if ReShade+SpecialK are on and ReShade SpecialK Plugin is disabled)\n\t\t\tif [[ ( \"$USERESHADE\" -eq 1 && \"$USESPECIALK\" -eq 0 ) || ( \"$USERESHADE\" -eq 1 && \"$USESPECIALK\" -eq 1 && \"$USERESHSPEKPLUGIN\" -eq 0 ) ]]; then\n\t\t\t\tremoveReShadeSpecialKInstallation \"1\"  # Remove any existing ReShade SpecialK Plugin installation so we can replace it with a 'regular' ReShade install\n\n\t\t\t\t# Check to make sure none of our ReShade names conflict with SpecialK -- This will abort install, and is the only place we need to abort install\n\t\t\t\tif [ \"$USESPECIALK\" -eq 1 ] && [ \"$USERESHSPEKPLUGIN\" -eq 0 ]; then\n\t\t\t\t\tgetSpecialKGameRenderApi\n\t\t\t\t\tSPEKREALDLLNAME=\"$( basename \"$SPEKDST\" )\"\n\t\t\t\t\tfor CUSTRSDLL in \"${RSDLLNAMEARR[@]}\"; do\n\t\t\t\t\t\tif [[ \"$CUSTRSDLL\" = \"$SPEKREALDLLNAME\" ]] && [ -f \"$SPEKREALDLLNAME\" ] && [ ! -f \"$INSTDESTDIR/$RSTXT\" ]; then\n\t\t\t\t\t\t\t# If our ReShade DLL matches the chosen SpecialK DLL name, if the SpecialK DLL is already in the game files, and if it's not a ReShade DLL (i.e. RSTXT doesn't exist), assume we have a SpecialK conflict\n\t\t\t\t\t\t\t# If ReShade+SpecialK are installed fresh at the same time, ReShade is installed early, and this logic prevents logging that ReShade won't be installed because it conflicts with SpecialK\n\t\t\t\t\t\t\t# Which is incorrect because it's detecting our installed ReShade DLLs as SpecialK DLLs\n\t\t\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - SpecialK is enabled and the chosen ReShade DLL name conflicts with the SpecialK DLL name -- Not installing ReShade\"\n\t\t\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_SPEKRESHDLLCONFLICT\" \"$SPEK\" \"$RESH\" )\"\n\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\tfi\n\t\t\t\t\tdone\n\t\t\t\tfi\n\n\t\t\t\t# actual ReShade DLL name (either d3d9/d3d11/dxgi, or a custom user selected name)\n\t\t\t\t# notiShow \"$NOTY_RESHADEINSTALLING\"\n\t\t\t\tfor CUSTRSDLL in \"${RSDLLNAMEARR[@]}\"; do\n\t\t\t\t\tinstallRSdll \"$CUSTRSDLL\" \"0\" \"$RSARCHDLL\"\n\t\t\t\tdone\n\n\t\t\t\t#d3d47 - Required for ReShade\n\t\t\t\t# NOTE 25/08/23: *Is* it still required?\n\t\t\t\tinstalld3d47dll \"$RSD3D47DLL\" \"$INSTDESTDIR\"\n\n\t\t\t\t# Rewrite the ReShade TXT file to ensure it only has our installed ReShade DLLs\n\t\t\t\tif [ -f \"$RSTXT\" ]; then\n\t\t\t\t\trm \"$RSTXT\"\n\t\t\t\tfi\n\n\t\t\t\t# Add d3dcompiler_47 and custom ReShade DLL names, removing any non-ReShade DLLs (ensures previously entered DLL names get removed and not incorrectly tracked as ReShade DLLs)\n\t\t\t\t# appendToRSTXT \"$D3D47\"\n\t\t\t\tfor CUSTRSDLL in \"${RSDLLNAMEARR[@]}\"; do\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Writing '$CUSTRSDLL' to '$RSTXT'\"\n\t\t\t\t\tappendToRSTXT \"$CUSTRSDLL\"\n\t\t\t\tdone\n\t\t\telse\n\t\t\t\tif [ \"$USERESHADE\" -eq 1 ] && [ \"$USESPECIALK\" -eq 1 ]; then\n\t\t\t\t\t# End here, as ReShade Installation code will be handled by SpecialK\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - USERESHADE and USESPECIALK are enabled together, and ReShade is being used as a Plugin, skipping custom ReShade DLL name as SpecialK needs specific ReShade DLL names\"\n\t\t\t\tfi\n\t\t\tfi\n\n\t\t\t# This makes sure if we updated any DLL names in RSDLLNAMEARR to end with '.dll' that these are written out to the game config file\n\t\t\t# Doing this ensures we don't end up with the array containing 'dxgi.dll' but the config file value being 'dxgi' (if the user left out the extension)\n\t\t\t# This is not strictly necessary but I wanted this consistency -- It's also why we loop through RSDLLNAMEARR twice :-)\n\t\t\ttouch \"$FUPDATE\"\n\t\t\tCONFIGRSDLLNAMESTR=\"$( printf '%s,' \"${RSDLLNAMEARR[@]}\" )\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating RESHADEDLLNAME config entry to include any potentially-updated ReShade DLL names so they all end with '.dll' if no extension was provided\"\n\t\t\tupdateConfigEntry \"RESHADEDLLNAME\" \"${CONFIGRSDLLNAMESTR%,}\" \"$STLGAMECFG\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - INSTDESTDIR '$INSTDESTDIR' not found\"\n\t\tfi\n\tfi\n}\n\n# Remove ReShade files (i.e. to replace with SpecialK)\nfunction removeReShadeInstallation {\n\tKEEPRESHADEINI=\"${1:-0}\"\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - INSTDESTDIR is '$INSTDESTDIR'\"\n\n\twhile read -r RSDLLREMOVEFILE; do\n\t\tRSDLLREMOVEPATH=\"${INSTDESTDIR}/$RSDLLREMOVEFILE\"\n\t\tif [ -f \"$RSDLLREMOVEPATH\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing non-SpecialK ReShade DLL from '$RSDLLREMOVEPATH'\"\n\t\t\trm \"$RSDLLREMOVEPATH\"\n\t\tfi\n\tdone < \"$INSTDESTDIR/$RSTXT\"\n\n\tif [ -f \"$INSTDESTDIR/$RSINI\" ] && [ \"$KEEPRESHADEINI\" -eq 0 ]; then\n\t\trm \"$INSTDESTDIR/$RSINI\"\n\tfi\n\n\tif [ -f \"$INSTDESTDIR/$RSTXT\" ]; then\n\t\trm \"$INSTDESTDIR/$RSTXT\"\n\tfi\n}\n\n# Remove ReShade SpecialK Plugin installation (i.e. to replace it with non-plugin installation)\nfunction removeReShadeSpecialKInstallation {\n\tKEEPRESHADEINI=\"${1:-0}\"\n\n\t# DLLs and JSON files\n\tRESHSPEKREMOVEDLLS=( \"$INSTDESTDIR/$RS_32\" \"$INSTDESTDIR/${RS_32//.dll/.json}\" \"$INSTDESTDIR/$RS_64\" \"$INSTDESTDIR/${RS_64//.dll/.json}\" )\n\tfor RESHSPEKREMOVEDLL in \"${RESHSPEKREMOVEDLLS[@]}\"; do\n\t\trmFileIfExists \"$RESHSPEKREMOVEDLL\"\n\tdone\n\n\t# INI file\n\tif [ \"$KEEPRESHADEINI\" -eq 0 ]; then\n\t\trmFileIfExists \"$INSTDESTDIR/$RSINI\"\n\tfi\n}\n\nfunction installDepth3DReshade {\n\tSHADERPOOL=\"depth3d\"\n\n\tif [ \"$RESHADE_DEPTH3D\" -eq 1 ]; then\n\t\tStatusWindow \"$GUI_DLSHADER\" \"dlShaders $SHADERPOOL\" \"DownloadCustomProtonStatus\"\n\t\tsetShadDestDir\n\t\tenableThisGameShaderRepo \"$SHADERPOOL\"\n\tfi\n}\n\n# Get archiecture of executable that ReShade is being used for, so we know which DLL to copy (32bit/64bit)\nfunction getReShadeExeArch {\n\tif [ -n \"$ARCHALTEXE\" ] && [[ ! \"$ARCHALTEXE\" =~ ${DUMMYBIN}$ ]]; then\n\t\tCHARCH=\"$ARCHALTEXE\"\n\telse\n\t\tCHARCH=\"$GP\"\n\tfi\n}\n\n# Install steps for ReShade and SpecialK are a bit different\nfunction installReshadeForSpecialK {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing ReShade DLLs for use with SpecialK (DLLs will not be renamed so SpecialK can read them)\"\n\n\t# Raw copy ReShade DLLs using installRSdll -- Should make integrating things like ReShade update easier\n\t# These DLLSs are not tracked, we should be tracking them in ReShade.txt so toggling ReShade off correctly removes them\n\t# When turning ReShade off we should also check the DLL names and if SpecialK is no longer in use, to clean up a SpecialK+ReShade install (i.e. if using ReShade64.dll but SpecialK is off, just remove instead of renaming to .dll_off)\tinstallRSdll \"$RS_32\" \"0\" \"$RS_32\"\n\tgetReShadeExeArch\n\n\t# Very similar logic used for installReshade\n\tif [ \"$(getArch \"$CHARCH\")\" == \"32\" ]; then\n\t\t# Remove any existing ReShade DLLs so they can be replaced with SpecialK ones\n\t\t# TODO check if INI needs renamed someway\n\t\tremoveReShadeInstallation \"1\"  # Remove any existing ReShade installation\n\n\t\t#32bit\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing 32bit ${RESH} for ${SPEK} as '$CHARCH' is 32bit\"\n\t\tinstalld3d47dll \"$D3D47_32\" \"$INSTDESTDIR\"\n\t\tinstallRSdll \"$RS_32\" \"0\" \"$RS_32\"\n\t\tinstallRSdll \"${RS_32//.dll/.json}\" \"0\" \"${RS_32//.dll/.json}\"\n\telif [ \"$(getArch \"$CHARCH\")\" == \"64\" ]; then\n\t\tremoveReShadeInstallation \"1\"  # Remove any existing ReShade installation\n\n\t\t#64bit\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing 64bit ${RESH} for ${SPEK} as '$CHARCH' is 64bit\"\n\t\tinstalld3d47dll \"$D3D47_64\" \"$INSTDESTDIR\"\n\t\tinstallRSdll \"$RS_64\" \"0\" \"$RS_64\"\n\t\tinstallRSdll \"${RS_64//.dll/.json}\" \"0\" \"${RS_64//.dll/.json}\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ERROR in ${RESH}+${SPEK} installation - no file information detected for '$CHARCH' or any 'neighbor file' - setting USERESHADE=0 for this session\"\n\t\texport USERESHADE=0\n\tfi\n}\n\n# Helper to create ReShade INI\nfunction createReShadeINI {\n\tif [ \"$CREATERESHINI\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - ReShade INI creation is disabled (CREATERESHINI is '$CREATERESHINI') -- Skipping\"\n\t\treturn\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating ReShade INI file\"\n\n\tif [ -f \"$FRSINI\" ]; then\n\t\tif grep -q \"EffectSearchPaths=.\\$RSSUB\\Shaders\" \"$FRSINI\"; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Already have '$FRSINI' with default paths pointing to '$RSSUB'\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Found a '$FRSINI' without default paths pointing to '$RSSUB' - not touching it\"\n\t\tfi\n\telse\n\t\tif [ -f \"$FRSOINI\" ] && grep -q \"EffectSearchPaths=.*$RSSUB.*Shaders\" \"$FRSOINI\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Re-enabling previously disabled '$FRSOINI'\"\n\t\t\tmv \"$FRSOINI\" \"$FRSINI\"\n\t\telse\n\t\t\t# This used to use echo but was changed to use printf to address ShellCheck SC2028\n\t\t\t# In testing using both echo and printf produced the same string result, but if this causes issues we can re-evaluate\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating initial '$FRSINI' with default paths pointing to '$RSSUB'\"\n\t\t\t{\n\t\t\t\techo \"[GENERAL]\"\n\t\t\t\tprintf \"EffectSearchPaths=.\\\\%s\\Shaders\\n\" \"$RSSUB\"\n\t\t\t\tprintf \"TextureSearchPaths=.\\\\%s\\Textures\\n\" \"$RSSUB\"\n\t\t\t\techo \"PreprocessorDefinitions=RESHADE_DEPTH_LINEARIZATION_FAR_PLANE=1000.0,RESHADE_DEPTH_INPUT_IS_UPSIDE_DOWN=0,RESHADE_DEPTH_INPUT_IS_REVERSED=1,RESHADE_DEPTH_INPUT_IS_LOGARITHMIC=0\"\n\t\t\t} > \"$FRSINI\"\n\t\tfi\n\tfi\n}\n\nfunction checkReshade {\n\tsetShadDestDir\n\n\tRSLIST=\"$SHADDESTDIR/$RSTXT\"\n\tRSOLIST=\"${RSLIST}_off\"\n\tFRSINI=\"$SHADDESTDIR/$RSINI\"\n\tFRSOINI=\"$SHADDESTDIR/${RSINI}_off\"\n\n\t# TODO remove later:\n\tRSENABLED=\"${RESH}-${PROGNAME,,}-enabled.txt\"\n\tRSDISABLED=\"${RESH}-${PROGNAME,,}-disabled.txt\"\n\t# this doesn't cover all migration constellations, but better than nothing\n\tif [ \"$USERESHADE\" -eq 1 ] && [ -f \"$SHADDESTDIR/$RSENABLED\" ]; then\n\t\tmv \"$SHADDESTDIR/$RSENABLED\" \"$RSLIST\"\n\t\tif [ -f \"$SHADDESTDIR/$RS_DX_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_DX_DEST\"; then\n\t\t\techo \"$RS_DX_DEST\" >> \"$RSLIST\"\n\t\tfi\n\n\t\tif [ -f \"$SHADDESTDIR/$RS_D9_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_D9_DEST\"; then\n\t\t\techo \"$RS_D9_DEST\" >> \"$RSLIST\"\n\t\tfi\n\t\tsort \"$RSLIST\" -u -o \"$RSLIST\"\n\telif [ \"$USERESHADE\" -eq 1 ] && [ -f \"$SHADDESTDIR/$RSDISABLED\" ]; then\n\t\tmv \"$SHADDESTDIR/$RSDISABLED\" \"$RSOLIST\"\n\t\tif [ -f \"$SHADDESTDIR/$RS_DX_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_DX_DEST\"; then\n\t\t\techo \"$RS_DX_DEST\" >> \"$RSOLIST\"\n\t\tfi\n\n\t\tif [ -f \"$SHADDESTDIR/$RS_D9_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_D9_DEST\"; then\n\t\t\techo \"$RS_D9_DEST\" >> \"$RSOLIST\"\n\t\tfi\n\t\tsort \"$RSOLIST\" -u -o \"$RSOLIST\"\n\tfi\n\n\tif [ \"$USERESHADE\" -eq 1 ]; then\n\t\tcreateReShadeINI\n\n\t\t# EXPERIMENTALLY RE-ENABLED\n\t\t# NOTE that this has no ReShade updating or version override checks, so it is missing many features that regular ReShade has!\n\t\tif [ \"$USESPECIALK\" -eq 1 ] && [ \"$USERESHSPEKPLUGIN\" -eq 1 ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Both '$SPEK' and '$RESH' are enabled.\" \"E\"\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - This has historically caused crashes, but has been experimentally re-enabled!\"\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Manual intervention may be required to fix crashes, such as renaming the SpecialK DLL to fix the SpecialK UI, or running dos2unix on INI files to fix crashes\"\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - For more information, see: https://github.com/sonic2kk/steamtinkerlaunch/issues/894\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using ${RESH} and $SPEK together\"\n\t\t\tmkProjDir \"$SHADDESTDIR\"\n\t\t\tinstallReshadeForSpecialK\n\t\telse\n\t\t\tif [ -f \"$RSOLIST\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${RESH} has been disabled previously using '${PROGNAME,,}' - enabling it now\"\n\t\t\t\twhile read -r rsdll; do\n\t\t\t\t\tif [ -f \"$SHADDESTDIR/${rsdll}_off\" ]; then\n\t\t\t\t\t\tmv \"$SHADDESTDIR/${rsdll}_off\" \"$SHADDESTDIR/$rsdll\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$SHADDESTDIR/${rsdll}_off' was supposed to be reenabled, but the file is missing\"\n\t\t\t\t\tfi\n\t\t\t\tdone < \"$SHADDESTDIR/${RSTXT}_off\"\n\t\t\t\tmv \"$RSOLIST\" \"$RSLIST\"\n\t\t\tfi\n\n\t\t\tif [ ! -f \"$SHADDESTDIR/$D3D47\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - USERESHADE is '$USERESHADE' - looks like ${RESH} is not yet installed in '$SHADDESTDIR' - installing because USERESHADE is enabled\"\n\t\t\t\tinstallReshade\n\t\t\tfi\n\n\t\t\tif [ -f \"$FRSINI\" ] && [ ! -f \"$RSLIST\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Looks like ${RESH} was installed previously using '${PROGNAME,,}' without creating '$RSLIST' - recreating it now\"\n\t\t\t\tinstallReshade F\n\t\t\tfi\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Setting WINEDLLOVERRIDES for ${RESH}: dxgi=n,b;d3d9=n,b;${D3D47//.dll}=n,b;d3d11=n,b;opengl32=n,b;${RESHADEDLLNAME//.dll}=n,b\"\n\t\t\tWINEDLLOVERRIDES=\"$WINEDLLOVERRIDES;dxgi=n,b;d3d9=n,b;${D3D47//.dll}=n,b;d3d11=n,b;opengl32=n,b;${RESHADEDLLNAME//.dll}=n,b\"\n\t\t\tif [ \"$USESPECIALK\" -eq 1 ] && [ \"$USERESHSPEKPLUGIN\" -eq 1 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding SpecialK DLL name to WINEDLLOVERRIDES because it is enabled and 'USERESHSPEKPLUGIN' is also enabled\"\n\t\t\t\tWINEDLLOVERRIDES+=\";$( basename \"$SPEKDST\" )=n,b\"\n\t\t\tfi\n\t\t\texport WINEDLLOVERRIDES=\"$WINEDLLOVERRIDES\"\n\t\tfi\n\telse\n\t\tif [ -f \"$FRSINI\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${RESH} has been disabled by the user, so renaming '$FRSINI' to '$FRSOINI'\"\n\t\t\tmv \"$FRSINI\" \"$FRSOINI\"\n\t\tfi\n\n\t\tif [ -f \"$RSLIST\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${RESH} has been installed previously with '${PROGNAME,,}' - disabling it now\"\n\t\t\twhile read -r rsdll; do\n\t\t\t\tif [ -f \"$SHADDESTDIR/${rsdll}\" ]; then\n\t\t\t\t\tmv \"$SHADDESTDIR/$rsdll\" \"$SHADDESTDIR/${rsdll}_off\"\n\t\t\t\telse\n\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - '$SHADDESTDIR/${rsdll}' was supposed to be disabled, but the file is already missing\"\n\t\t\t\tfi\n\t\t\tdone < \"$RSLIST\"\n\t\t\tmv \"$RSLIST\" \"$RSOLIST\"\n\t\tfi\n\n\t\tif [ \"$USESPECIALK\" -eq 0 ]; then\n\t\t\tif [ -f \"$SHADDESTDIR/$RS_DX_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_DX_DEST\"; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Found unknown '$RESH' dll '$RS_DX_DEST' in '$SHADDESTDIR'\"\n\t\t\tfi\n\n\t\t\tif [ -f \"$SHADDESTDIR/$RS_D9_DEST\" ] && grep -q \"$RESH\" \"$SHADDESTDIR/$RS_D9_DEST\"; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Found unknown '$RESH' dll '$RS_D9_DEST' in '$SHADDESTDIR'\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction extSpek {\n\tSRCARCH=\"$1\"\n\tSPEXT64=\"$SPEKDLDIR/$SPEKVERS/${SPEK}64.dll\"\n\n\tif [ -f \"$SPEXT64\" ] && [ \"$AUTOSPEK\" -eq 0 ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Already have '$SPEXT64' - skipping extraction\" \"E\"\n\telse\n\t\tif [ ! -f \"$SRCARCH\" ]; then\n\t\t\tSRCARCH=\"${SRCARCH//lK/l_K}\"\n\t\tfi\n\t\tif [ -f \"$SRCARCH\" ]; then\n\t\t\tSRCARCHEXT=\"${SRCARCH##*.}\"\n\t\t\tif [ \"$SRCARCHEXT\" = \"zip\" ]; then  # zip archive from GitHub Actions (downloaded from nightly.link URL)\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracting '$SRCARCH' into '$SPEKDLDIR/$SPEKVERS' using '$UNZIP'\"\n\t\t\t\t\"$UNZIP\" -o \"$SRCARCH\" -d \"$SPEKDLDIR/$SPEKVERS\"\n\t\t\telse  # else assume 7zip\n\t\t\t\tif [ -x \"$(command -v \"$SEVZA\")\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Extracting '$SRCARCH' to '$SPEKDLDIR/$SPEKVERS'\" \"E\"\n\t\t\t\t\t\"$SEVZA\" x \"$SRCARCH\" -o\"$SPEKDLDIR/$SPEKVERS\" 2>/dev/null\n\t\t\t\telse\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Can't extract '$SRCARCH', because '$SEVZA' wasn't found!\" \"E\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\n# Get latest artifact download link from nightly.link\nfunction getLatestNightlyLinkArtifactURL {\n\tNIGHTLYLINKURL=\"$1\"\n\tNIGHTLYLINKURLPAT=\"$2\"\n\n\t\"$WGET\" -q \"${NIGHTLYLINKURL}\" -O - 2> >(grep -v \"SSL_INIT\") | grep -oP \"${NIGHTLYLINKURLPAT}\" | head -n1  # Grep all links matching this pattern and pick the first one (should only be one anyway)\n}\n\n# Use innoextract to extract SpecialK32/64.dll from executable\nfunction extractSpecialKEXE {\n\tPOSSIBLESPEKEXE=\"$1\"\n\tif  [ -x \"$(command -v \"$INNOEXTRACT\")\" ]; then\n\t\tSPEKEXESPEK32PATH=\"app/${SPEK}32.dll\"\n\t\tSPEKEXESPEK64PATH=\"app/${SPEK}64.dll\"\n\n\t\tSPEKEXEFILESLIST=\"$( \"$INNOEXTRACT\" \"--list\" \"$POSSIBLESPEKEXE\" )\"\n\n\t\tif grep -q \"$SPEKEXESPEK32PATH\" <<< \"$SPEKEXEFILESLIST\" && grep -q \"$SPEKEXESPEK64PATH\" <<< \"$SPEKEXEFILESLIST\"; then\n\t\t\tnotiShow \"$( strFix \"$NOTY_USESPEKCUSTOMEXE\" \"$( basename \"$POSSIBLESPEKEXE\" )\" )\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found valid SpecialK executable to extract\"\n\t\t\t# Extract EXE, select and move DLLs to SPEKVERS folder, remove all innoextract files\n\t\t\t\"$INNOEXTRACT\" -m -s -d \"$SPEKDLDIR/$SPEKVERS\" \"$POSSIBLESPEKEXE\"\n\n\t\t\tmv \"$SPEKDLDIR/$SPEKVERS/$SPEKEXESPEK32PATH\" \"$SPEKDLDIR/$SPEKVERS\"\n\t\t\tmv \"$SPEKDLDIR/$SPEKVERS/$SPEKEXESPEK64PATH\" \"$SPEKDLDIR/$SPEKVERS\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Successfully extracted '${SPEK}32.dll' and '${SPEK}64.dll' from '$( basename \"$POSSIBLESPEKEXE\" )'\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - SpecialK executable did not contain both '$SPEKEXESPEK32PATH' and '$SPEKEXESPEK64PATH' -- Not extracting\"\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Cannot extract custom SpecialK EXE because dependency '$INNOEXTRACT' is missing!\"\n\tfi\n}\n\nfunction dlSpecialK {\n\tif [ -n \"$1\" ]; then\n\t\tSPEKVERS=\"$1\"\n\tfi\n\n\tSPEKARC=\"${SPEK}.7z\"\n\n\tmkProjDir \"$SPEKDLDIR/$SPEKVERS\"\n\tmkProjDir \"$SPEKDLDIR/custom\"  # Ensure custom is here, in case user downloads SpecialK and then wants to use custom -- Very minor QoL\n\n\tif [ \"$SPEKVERS\" == \"stable\" ]; then\n\t\tSPEKDLURL=\"$SPEKURL$SPEKARC\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using Stable SpecialK download URL '$SPEKDLURL'\"\n\telif [ \"$SPEKVERS\" == \"nightly\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using SpecialK Nightly release, fetching from nightly.link\"\n\n\t\tSPEKAPIURLPATH=\"${SPEKPROJURL//$GHURL}\"\n\t\tSPEKNIGHTLYHASH=\"$( fetchLatestGitHubActionsBuild \"${AGHURL}/repos${SPEKAPIURLPATH}\" 1 \"Builds\" 0 | cut -d ';' -f2 )\"  # Get commit hash for latest SpecialK artifact from only success workflows named \"Builds\"\n\t\tSPEKNIGHTLYURL=\"https://nightly.link${SPEKAPIURLPATH}/workflows/build-windows/main\"\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK GitHub Actions hash is '$SPEKNIGHTLYHASH'\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK nightly.link URL is '$SPEKNIGHTLYURL'\"\n\n\t\tSPEKNIGHTLYURLPATTERN=\"${SPEKNIGHTLYURL}.*?${SPEKNIGHTLYHASH}[a-zA-Z0-9].zip(?=\\\")\"  # Hash in archive name is 8 chars, but fetchLatestGitHubActionsBuild only returns 7, so accept one extra alphanumeric character when parsing name\n\t\tSPEKDLURL=\"$( getLatestNightlyLinkArtifactURL \"$SPEKNIGHTLYURL\" \"$SPEKNIGHTLYURLPATTERN\" )\"\n\t\tSPEKARC=\"$( basename \"$SPEKDLURL\" )\"  # Need to make sure the archive name uses the nightly archive name, which isn't fixed\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK DL URL is '$SPEKDLURL'\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK Archive name from DL URL is '$SPEKARC'\"\n\telif [ \"$SPEKVERS\" == \"custom\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK version '$SPEKVERS' selected, not downloading anything\"\n\telse\n\t\tSPEKDLURL=\"$SPEKGHURL/download/SK_${SPEKVERS//./_}/$SPEKARC\"\n\tfi\n\n\tSPEKDL=\"$SPEKDLDIR/$SPEKVERS/$SPEKARC\"\n\n\tSPEK32SRC=\"$SPEKDLDIR/$SPEKVERS/${SPEK}32.dll\"\n\tSPEK64SRC=\"$SPEKDLDIR/$SPEKVERS/${SPEK}64.dll\"\n\n\tSPEK32BASE=\"${SPEK}32.dll\"\n\tSPEK64BASE=\"${SPEK}64.dll\"\n\n\t## For custom SpecialK, we either use existing placed DLLs or attempt to extract them from a SpecialK EXE\n\t## If we have no custom exe and no SpecialK32/64 DLL pair, SpecialK will not be installed\n\tif [ \"$SPEKVERS\" == \"custom\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Custom SpecialK version selected -- Looking for manually placed SpecialK DLLs or EXE to extract them from\"\n\t\tPOSSIBLECUSTOMSPEKEXE=\"$( find \"$SPEKDLDIR/$SPEKVERS\" -type f -name \"*.exe\" -print -quit )\"\n\t\tPOSSIBLECUSTOMSPEKEXE=\"$( realpath \"$POSSIBLECUSTOMSPEKEXE\" )\"\n\n\t\tif [ -f \"$SPEK32SRC\" ] && [ -f \"$SPEK64SRC\" ]; then\n\t\t\tnotiShow \"$NOTY_USESPEKCUSTOMDLL\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '${SPEK}32.dll' and '${SPEK}64.dll' -- Using this as SpecialK version\"\n\t\telif [ -f \"$POSSIBLECUSTOMSPEKEXE\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found possible SpecialK EXE '$POSSIBLECUSTOMSPEKEXE' -- Attempting to extract SpecialK DLLs from this executable\"\n\t\t\textractSpecialKEXE \"$POSSIBLECUSTOMSPEKEXE\"\n\t\tfi\n\telse  # download SpecialK\n\t\tif [ ! -f \"$SPEK32SRC\" ] && [ ! -f \"$SPEK64SRC\" ]; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$SPEK\")\"\n\t\t\tdlCheck \"$SPEKDLURL\" \"$SPEKDL\" \"X\" \"Downloading '$SPEKDLURL' to '$SPEKDLDIR'\"\n\t\t\textSpek \"$SPEKDL\"\n\t\telif [ \"$AUTOSPEK\" -eq 1 ] && { [ \"$SPEKVERS\" == \"stable\" ] || [ \"$SPEKVERS\" == \"nightly\" ] ;}; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - AUTOSPEK is enabled and SPEKVERS is '$SPEKVERS' - so looking for $SPEK updates\" \"E\"\n\t\t\tnotiShow \"$(strFix \"$NOTY_DLCUSTOMPROTON\" \"$SPEK\")\"\n\t\t\tdlCheck \"$SPEKDLURL\" \"$SPEKDL\" \"X\" \"Downloading '$SPEKDLURL' to '$SPEKDLDIR'\"\n\t\t\textSpek \"$SPEKDL\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Already have the SpecialK DLLs, nothing to update\" \"E\"\n\t\tfi\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Cleaning up SpecialK version folder '$SPEKDLDIR/$SPEKVERS'\"\n\t# Clean up everything that isn't SPEK32SRC and SPEK64SRC\n\tfor SPEKVERDIRFILE in \"$SPEKDLDIR/$SPEKVERS\"/*; do\n\t\tSPEKVERDIRFILEBASENAME=\"$( basename \"$SPEKVERDIRFILE\" )\"\n\t\tSPEKVERDIRFILEREALPATH=\"$( realpath \"$SPEKVERDIRFILE\" )\"  # Just in case\n\t\tif [ \"$SPEKVERDIRFILEBASENAME\" != \"$SPEK32BASE\" ] && [ \"$SPEKVERDIRFILEBASENAME\" != \"$SPEK64BASE\" ]; then\n\t\t\trmFileIfExists \"$SPEKVERDIRFILEREALPATH\"\n\t\t\trmDirIfExists \"$SPEKVERDIRFILEREALPATH\"\n\t\tfi\n\tdone\n\n\t# Check to make sure DLLs are still satisfied\n\tif [ -f \"$SPEK32SRC\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$SPEK32SRC' is ready\" \"E\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$SPEK32SRC' is missing!\" \"E\"\n\tfi\n\n\tif [ -f \"$SPEK64SRC\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$SPEK64SRC' is ready\" \"E\"\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$SPEK64SRC' is missing!\" \"E\"\n\tfi\n}\n\n## Get rendering API from PCGamingWiki compatibility list\n## This is missing some supported games (such as NieR:Replicant and Monster Hunter World) but is generally a good reference point\n##\n## For compatibility reasons we use d3d11.dll as the SpecialK DLL name for Direct3D 11 games, as this seems to be more compatible than dxgi.dll on Linux -- Mainly when it comes to using ReShade and SpecialK\n## ReShade and SpecialK work better together for Direct3D 11 games if we use d3d11.dll as the name\n##\n## Behaviour is this:\n## - If we find Direct3D 11 as the rendering API for our game, use d3d11.dll as the SpecialK DLL name\n## - If we find an unknown rendering API for our game, use dxgi.dll as a fallback\n## - If we cannot find our game in the list, assume D3D11 and fall back to d3d11.dll\n##    - TODO this point is not ideal, we should add an API override at some point\nfunction getSpecialKGameRenderApi {\n\tSPEKCOMP=\"$SPEKDLDIR/${SPEK}_compat.html\"\n\tMAXAGE=1440\n\tif [ ! -f \"$SPEKCOMP\" ] || test \"$(find \"$SPEKCOMP\" -mmin +\"$MAXAGE\")\"; then\n\t\tdlCheck \"$SPEKCOMPURL\" \"$SPEKCOMP\" \"X\" \"Downloading '$SPEKCOMP'\"\n\tfi\n\n\tif [[ -n \"$SPEKDLLNAME\" ]] && [[ \"$SPEKDLLNAME\" != \"$AUTO\" ]]; then\n\t\t# Use custom SpecialK DLL name if we're not using 'auto' OR if the DLL name field is blank\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - User selected SpecialK DLL override name '$SPEKDLLNAME' - Will attempt to use this as the SpecialK DLL name\"\n\t\tFOUNDSPEKDLLNAME=\"$SPEKDLLNAME\"\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching Render Api for '$GN' in '$SPEKCOMP'\"\n\t\tRAPI=\"$(sed -n \"/id=\\\"Compatibility_list\\\"/,$ p\" \"$SPEKCOMP\" | grep -A1 \"${GN// /\\*.\\*}\" | tail -n1 | cut -d '>' -f2 | cut -d '<' -f1)\"\n\t\tif [ -n \"$RAPI\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found Render Api '$RAPI'\"\n\t\t\tif [ \"$RAPI\" == \"Direct3D 12\" ]; then\n\t\t\t\tFOUNDSPEKDLLNAME=\"$DXGI\"\n\t\t\telif [ \"$RAPI\" == \"Direct3D 11\" ]; then\n\t\t\t\tFOUNDSPEKDLLNAME=\"$D3D11\"\n\t\t\telif [ \"$RAPI\" == \"Direct3D 9\" ]; then\n\t\t\t\tFOUNDSPEKDLLNAME=\"$D3D9\"\n\t\t\telif [ \"$RAPI\" == \"OpenGL\" ]; then\n\t\t\t\tFOUNDSPEKDLLNAME=\"$OGL32\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Unknown Render Api '$RAPI' - assuming 'Direct3D 11'\"\n\t\t\t\tFOUNDSPEKDLLNAME=\"$DXGI\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not find Render Api - assuming 'Direct3D 11'\"\n\t\t\tFOUNDSPEKDLLNAME=\"$DXGI\"\n\t\tfi\n\tfi\n\n\tSPEKDST=\"$SPEKDDIR/$FOUNDSPEKDLLNAME\"\n\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK DLL install path is '$SPEKDST'\"\n}\n\n## Example to get key UsingWine under section [Compatibility.General] in dxgi.ini and change it from False toTrue\n## writeValueToIni \"Compatibility.General\" \"UsingWINE\" \"false\" \"true\" \"dxgi.ini\"\nfunction writeValueToIni {\n\tINISECTION=\"$1\"  # i.e Compatibility.General\n\tINIKEY=\"$2\"  # i.e. UsingWINE\n\tINIFROMVAL=\"$3\"  # value to change from, i.e. false\n\tINITOVAL=\"$4\"  # value to change to i.e. true\n\tINIFILE=\"$5\"  # i.e. dxgi.ini\n\n\tININEWSTR=\"${INIKEY}=${INITOVAL}\"\n\n\tif [ -f \"$INIFILE\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found the ini file '$INIFILE' - setting '$ININEWSTR' under '$INISECTION'\" \"E\"\n\t\tif grep -q \"$INIKEY=$INIFROMVAL\" \"$INIFILE\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Setting '$INIKEY' in the config to '$INITOVAL'\" \"E\"\n\t\t\tsed \"s:$INIKEY=$INIFROMVAL:$ININEWSTR:\" -i \"$INIFILE\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding a new entry '$INIKEY' in the ini, because it is missing\" \"E\"\n\t\t\tif grep -q \"$INISECTION\" \"$INIFILE\"; then\n\t\t\t\t# Just key=val is missing\n\t\t\t\tsed \"/\\[$INISECTION\\]/a $ININEWSTR\" -i \"$INIFILE\"\n\t\t\telse\n\t\t\t\t# Heading and key=val missing\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Creating new section '$INISECTION' with '$ININEWSTR' in '$INIFILE'\"\n\n\t\t\t\t{\n\t\t\t\t\techo \"[$INISECTION]\"\n\t\t\t\t\techo \"$ININEWSTR\"\n\t\t\t\t\techo \"\"\n\t\t\t\t} >> \"$SPEKINI\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not find INI file at '$INIFILE'\"\n\tfi\n}\n\nfunction prepareSpecialKIni {\n\tSPEKDLLNAMEFORINI=\"$( basename \"$SPEKDST\" )\"\n\tSPEKINI=\"${SPEKDLLNAMEFORINI//.dll/.ini}\"  # Name INI after chosen SpecialK DLL name\n\n\tCOGE=\"Compatibility.General\"\n\tUWI=\"UsingWINE\"\n\n\tROSD=\"Render.OSD\"\n\tSIVC=\"ShowInVideoCapture\"\n\n\tif [ -n \"$SPEKINI\" ]; then\n\t\tif [ ! -f \"$SPEKINI\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK INI '$SPEKINI' does not exist, creating initial blank INI\"\n\t\t\ttouch \"$SPEKINI\"\n\t\tfi\n\n\t\twriteValueToIni \"$COGE\" \"$UWI\" \"false\" \"true\" \"$SPEKINI\"  # SpecialK may already detect and set this appropriately now\n\t\twriteValueToIni \"$ROSD\" \"$SIVC\" \"true\" \"false\" \"$SPEKINI\"  # Seems to be needed to prevent crashing sometimes\n\tfi\n}\n\nfunction useSpecialK {\n\tfunction installSpekDll {\n\t\tSPEKSRC=\"$1\"\n\t\tSPEKDLLCONFLICTFOUND=0\n\t\tSHOULDINSTALLSPEK=1\n\t\tSPEKD3D47DLL=\"$4\"\n\t\tSPEKD3D47DLLPATH=\"${SPEKDDIR}/${D3D47}\"  # this will always be named /path/to/d3dcompiler_47, because we name the DLL differently on move, we don't need to keep the architecture in the DLL name\n\t\tSPEKDLLEXPORTNAME=\"$( basename \"$SPEKDST\" )\"  # Make sure we use an actual name and not 'auto'\n\n\t\tif [ \"$USERESHADE\" -eq 1 ] && [ -f \"$SPEKDDIR/$RSTXT\" ] && [ \"$USERESHSPEKPLUGIN\" -eq 0 ]; then\n\t\t\t## ReShade is already installed and in use, and ReShade+SpecialK have selected DLL names conflict\n\n\t\t\t## Check each entered ReShade DLL name and see if any conflict with the entered SpecialK DLL name\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ReShade is installed and not loaded as SpecialK plugin -- Checking for DLL naming conflicts\"\n\t\t\tmapfile -d \",\" -t -O \"${#SPEKRSDLLNAMECHECKARR[@]}\" SPEKRSDLLNAMECHECKARR < <(printf '%s' \"$RESHADEDLLNAME\")\n\n\t\t\tSPEKREALDLLNAME=\"$( basename \"$SPEKDST\" )\"  # Makes sure we don't compare against 'auto'\n\t\t\tfor SPEKRSCHECKDLL in \"${SPEKRSDLLNAMECHECKARR[@]}\"; do\n\t\t\t\tif [[ \"$SPEKRSCHECKDLL\" == \"$SPEKREALDLLNAME\" ]] && [ -f \"$SPEKRSCHECKDLL\" ]; then\n\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - ReShade is enabled and the chosen SpecialK DLL name conflicts with the ReShade DLL name -- Not installing SpecialK\"\n\t\t\t\t\tnotiShow \"$( strFix \"$NOTY_SPEKRESHDLLCONFLICT\" \"$RESH\" \"$SPEK\" )\"\n\t\t\t\t\tSPEKDLLCONFLICTFOUND=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tdone\n\n\t\t\tif [ -f \"$SPEKDST\" ] && [ -f \"$SPEKENA\" ] && grep -qw \"$SPEKDST\" \"$SPEKENA\"; then\n\t\t\t\tif [ \"$AUTOSPEK\" -eq 1 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating existing tracked SpecialK DLLs\"\n\t\t\t\t\tremoveSpekDlls  # Remove existing SpecialK DLLs so we can update them, if auto-update SpecialK is enabled\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK is installed, tracked, and up-to-date -- Nothing to do\"\n\t\t\t\t\tSHOULDINSTALLSPEK=0\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK loading normally\"\n\t\t\t# Check to see if SpecialK DLL already exists and is not tracked by us\n\t\t\t# There's probably scope to make installRSdll generic so it applies for both ReShade+SpecialK\n\t\t\tif [ ! -f \"$SPEKDST\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No SpecialK DLL installation found, installing as normal\"\n\t\t\telif [ -f \"$SPEKDST\" ] && ! grep -qw \"$SPEKDST\" \"$SPEKENA\"; then\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - The chosen SpecialK DLL name already exists at '$SPEKDST' but is not tracked by us -- This may cause issues!\"\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Attempting to back up existing found DLL with name '$SPEKDST' so that we can install SpecialK\"\n\n\t\t\t\tSPEKDLLBAKNAM=\"$SPEKDST.bak\"\n\t\t\t\tif [ -f \"$SPEKDLLBAKNAM\" ]; then\n\t\t\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Backup DLL name already exists at '$SPEKDST/$SPEKDLLBAKNAM', cannot move this DLL to allow SpecialK to install -- Not installing SpecialK\"\n\t\t\t\t\tnotiShow \"$NOTY_SPEKDLLCONFLICT\" \"X\"\n\t\t\t\t\tSPEKDLLCONFLICTFOUND=1\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Moving existing DLL '$SPEKDST' to '$SPEKDLLBAKNAM' so we can install SpecialK without conflicts\"\n\t\t\t\t\tmv \"$SPEKDST\" \"$SPEKDLLBAKNAM\"\n\t\t\t\tfi\n\t\t\telif [ -f \"$SPEKDST\" ] && [ -f \"$SPEKENA\" ] && grep -qw \"$SPEKDST\" \"$SPEKENA\"; then\n\t\t\t\tif [ \"$AUTOSPEK\" -eq 1 ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating existing tracked SpecialK DLLs\"\n\t\t\t\t\tremoveSpekDlls  # Remove existing SpecialK DLLs so we can update them, if auto-update SpecialK is enabled\n\t\t\t\telse\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - SpecialK is installed, tracked, and up-to-date -- Nothing to do\"\n\t\t\t\t\tSHOULDINSTALLSPEK=0\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\n\t\t# Make sure we don't track DLL renames\n\t\trmFileIfExists \"$SPEKENA\"\n\t\ttouch \"$SPEKENA\"\n\n\t\tif [ \"$SPEKDLLCONFLICTFOUND\" -eq 0 ] && [ \"$SHOULDINSTALLSPEK\" -eq 1 ]; then\n\t\t\tinstalld3d47dll \"$SPEKD3D47DLL\" \"$SPEKDDIR\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Installing '${SPEKSRC##*/}' as '$GP' is $2-bit\" \"E\"\n\t\t\tnotiShow \"$NOTY_SPECIALKINSTALLING\"\n\t\t\tcp \"$SPEKSRC\" \"$SPEKDST\"\n\t\t\techo \"$SPEKDST\" >> \"$SPEKENA\"\n\t\t\tif [ -f \"${SPEKSRC//dll/pdb}\" ]; then\n\t\t\t\tSPEKPDB=\"${SPEKSRC##*/}\"\n\t\t\t\tSPEKPDB=\"${SPEKPDB//dll/pdb}\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Also installing debugging '$SPEKPDB'\" \"E\"\n\t\t\t\tcp \"${SPEKSRC//dll/pdb}\" \"$SPEKDDIR\"\n\t\t\t\techo \"$SPEKDDIR/$SPEKPDB\" >> \"$SPEKENA\"\n\t\t\tfi\n\t\t\tprepareSpecialKIni  # Moved here so this is created only once we confirm SpecialK can be installed\n\t\telif [ \"$SPEKDLLCONFLICTFOUND\" -eq 0 ] && [ \"$SHOULDINSTALLSPEK\" -eq 0 ]; then\n\t\t\t# In this scenario, SpecialK is already installed so we don't need to install it, so write out the DLL name to the SPEKENA file to ensure we don't end up with a blank file\n\t\t\t# We can't always write out to the file unconditionally as SPEKDLLCONFLICTFOUND means SpecialK wasn't installed\n\t\t\techo \"$SPEKDST\" >> \"$SPEKENA\"  # SpecialK DLL\n\t\t\techo \"$SPEKD3D47DLLPATH\" >> \"$SPEKENA\"  # d3d47 DLL\n\n\t\t\tinstalld3d47dll \"$SPEKD3D47DLL\" \"$SPEKDDIR\"\n\n\t\t\tprepareSpecialKIni  # Needed here to update some values that may only exist after first launch\n\t\telif [ \"$SPEKDLLCONFLICTFOUND\" -eq 1 ]; then\n\t\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Could not install SpecialK -- DLL naming conflict was found\"\n\t\tfi\n\n\t\tif [ \"$SPEKDLLCONFLICTFOUND\" -eq 0 ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Setting WINEDLLOVERRIDES for ${SPEK}: dxgi=n,b;d3d9=n,b;${D3D47//.dll}=n,b;d3d11=n,b;opengl32=n,b;${SPEKDLLEXPORTNAME//.dll}=n,b\"\n\t\t\texport WINEDLLOVERRIDES=\"$WINEDLLOVERRIDES;dxgi=n,b;d3d9=n,b;${D3D47//.dll}=n,b;d3d11=n,b;opengl32=n,b;${SPEKDLLEXPORTNAME//.dll}=n,b\"\n\t\tfi\n\t}\n\n\t# Manage installing 32bit/64bit SpecialK DLL\n\tfunction installSpekArchDll {\n\t\tif [ \"$USECUSTOMCMD\" -eq 1 ] && [ -f \"$CUSTOMCMD\" ]; then\n\t\t\tARCHEXE=\"$CUSTOMCMD\"\n\t\telse\n\t\t\tARCHEXE=\"$GP\"\n\t\tfi\n\n\t\tif [ \"$(getArch \"$ARCHEXE\")\" == \"32\" ]; then\n\t\t\tinstallSpekDll \"$SPEK32SRC\" \"32\" \"x86\" \"$D3D47_32\"\n\t\telif [ \"$(getArch \"$ARCHEXE\")\" == \"64\" ]; then\n\t\t\tinstallSpekDll \"$SPEK64SRC\" \"64\" \"x64\" \"$D3D47_64\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Could not determine the architecture of '$GP' - not installing '$SPEK'\" \"E\"\n\t\tfi\n\t}\n\n\tSPEKDDIR=\"$EFD\"\n\tsetFullGameExePath \"SPEKDDIR\"\n\tSPEKENA=\"$SPEKDDIR/${SPEK}_enabled.txt\"\n\n\t# Ensure SpecialK DLL name ends with '.dll', even if we're not using SpecialK\n\tif [ -n \"$SPEKDLLNAME\" ] && ! [[ $SPEKDLLNAME == *.* ]]; then\n\t\t# Don't rename DLL if we're using \"auto\"\n\t\tif [[ ! \"$SPEKDLLNAME\" == \"${AUTO}\" ]]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Renaming SPEKDLLNAME to '${SPEKDLLNAME}.dll'\"\n\t\t\tSPEKDLLNAME=\"${SPEKDLLNAME}.dll\"\n\t\telif [[ \"$SPEKDLLNAME\" == \"${AUTO}.dll\" ]]; then\n\t\t\tSPEKDLLNAME=\"$AUTO\"\n\t\tfi\n\n\t\ttouch \"$FUPDATE\"\n\t\tupdateConfigEntry \"SPEKDLLNAME\" \"$SPEKDLLNAME\" \"$STLGAMECFG\"\n\tfi\n\n\tif [ \"$USESPECIALK\" -eq 1 ]; then\n\t\tif [ \"$AUTOSPEK\" -eq 1 ] && { [ \"$SPEKVERS\" == \"stable\" ] || [ \"$SPEKVERS\" == \"nightly\" ];}; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating $SPEK in the gamedir because AUTOSPEK is enabled\"\n\t\tfi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${SPEK} is enabled - Installing dlls if required\"\n\t\tdlSpecialK\n\n\t\tgetSpecialKGameRenderApi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$SPEKDST' as $SPEK destination dll\"\n\n\t\tinstallSpekArchDll\n\telse\n\t\tif [ -f \"$SPEKENA\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - ${SPEK} was enabled before, removing existing $SPEK dlls\"\n\t\t\tremoveSpekDlls\n\t\t\tif [ \"$USERESHADE\" -eq 1 ]; then\n\t\t\t\tremoveReShadeSpecialKInstallation \"1\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction removeSpekDlls {\n\twhile read -r spekdll; do\n\t\trm \"$spekdll\" 2>/dev/null\n\tdone < \"$SPEKENA\"\n\trm \"$SPEKENA\" 2>/dev/null\n}\n\nfunction getUsedVars {\n\twhile read -r line; do\n\t\tif grep -q -v \"^#\" <<< \"$line\"; then\n\t\t\tawk -F '=' '{print $1}' <<< \"$line\"\n\t\tfi\n\tdone <\"$1\"\n}\n\nfunction getScreenRes {\n\tfunction widthList {\n\t\t\"$XRANDR\" --verbose | grep \"\\*\" -A2 | grep -oP 'width\\K[^start]+'\n\t}\n\n\tfunction heightList {\n\t\t\"$XRANDR\" --verbose | grep \"\\*\" -A2 | grep -oP 'height\\K[^start]+'\n\t}\n\n\tfunction getRes {\n\t\tif grep -q \"^[0-9]*$\" <<< \"$FOUNDW\" && grep -q \"^[0-9]*$\" <<< \"$FOUNDH\"; then\n\t\t\tFOUNDRES=\"${FOUNDW}x${FOUNDH}\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Detected screen resolution '$FOUNDRES'\" \"X\"\n\t\t\techo \"$FOUNDRES\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Screen resolution for width '$FOUNDW' and height '$FOUNDH' is invalid\" \"X\"\n\t\tfi\n\t}\n\n\tHCNT=\"$(wc -l <<< \"$(widthList)\")\"\n\tif [ \"$HCNT\" -eq 1 ] || [ \"$HCNT\" -gt 2 ]; then\n\t\tFOUNDW=\"$(widthList | head -n1 | tr -dc '0-9')\"\n\t\tFOUNDH=\"$(heightList | head -n1 | tr -dc '0-9')\"\n\telse\n\t\tXCUT=\"$(\"$XRANDR\" --listactivemonitors | grep -Eo \"\\+[1-9][[:digit:]]*\\+\" | grep -Eo \"[[:digit:]]*\")\"\n\t\tMPOS=\"$(\"$XDO\" getmouselocation --shell | head -n1 | cut -d '=' -f2)\"\n\t\tif [ \"$MPOS\" -gt \"$XCUT\" ]; then\n\t\t\tFOUNDW=\"$(widthList | tail -n1 | tr -dc '0-9')\"\n\t\t\tFOUNDH=\"$(heightList | tail -n1 | tr -dc '0-9')\"\n\t\telse\n\t\t\tFOUNDW=\"$(widthList | head -n1 | tr -dc '0-9')\"\n\t\t\tFOUNDH=\"$(heightList | head -n1 | tr -dc '0-9')\"\n\t\tfi\n\tfi\n\n\tif [ \"$1\" == \"w\" ]; then\n\t\tif grep -q \"^[0-9]*$\" <<< \"$FOUNDW\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found screen width '$FOUNDW'\" \"X\"\n\t\t\techo \"$FOUNDW\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Screen width '$FOUNDW' is invalid\" \"X\"\n\t\tfi\n\telif [ \"$1\" == \"h\" ]; then\n\t\tif grep -q \"^[0-9]*$\" <<< \"$FOUNDH\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found screen height '$FOUNDH'\" \"X\"\n\t\t\techo \"$FOUNDH\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Screen height '$FOUNDH' is invalid\" \"X\"\n\t\tfi\n\telse\n\t\tgetRes\n\tfi\n}\n\nfunction listScreenRes {\n\twhile read -r lres; do\n\t\techo \"${lres%*[[:blank:]]}\" | cut -d ' ' -f1\n\tdone <<< \"$(\"$XRANDR\" --verbose | grep \"+VSync$\")\" | sort -nur\n}\n\nfunction setInitWinXY {\n\tDEFRESSHM=\"$STLSHM/defres.txt\"\n\tif [ -f \"$DEFRESSHM\" ] ; then\n\t\tloadCfg \"$DEFRESSHM\" X\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '${WINX}x${WINY}' from config '$DEFRESSHM'\"\n\telse\n\t\tif [ \"$ONSTEAMDECK\" -eq 1 ]; then\n\t\t\tWINX=\"1280\"\n\t\t\tWINY=\"800\"\n\t\telse\n\t\t\tSCRW=\"$(getScreenRes w)\"\n\t\t\tSCRH=\"$(getScreenRes h)\"\n\t\t\tWINX=$(( SCRW * 3 / 4))\n\t\t\tWINY=$(( SCRH * 3 / 4))\n\t\tfi\n\n\t\t{\n\t\techo \"WINX=\\\"$WINX\\\"\"\n\t\techo \"WINY=\\\"$WINY\\\"\"\n\t\t} >> \"$DEFRESSHM\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '${WINX}x${WINY}' as default resolution for all windows without a configured resolution\"\n\tfi\n}\n\nfunction setNewRes {\n\tSCREENRES=\"$(getScreenRes r)\"\n\tif [ \"$GAMESCREENRES\" != \"$NON\" ] && [ \"$GAMESCREENRES\" != \"$SCREENRES\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Setting screen resolution to '$GAMESCREENRES' using '$XRANDR'\" \"X\"\n\t\t\"$XRANDR\" -s \"$GAMESCREENRES\"\n\tfi\n}\n\nfunction setPrevRes {\n\tif [ \"$GAMESCREENRES\" != \"$NON\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Returning to previous screen resolution via '$XRANDR -s 0'\" \"X\"\n\t\t\"$XRANDR\" -s 0\n\tfi\n}\n\nfunction customUserScriptStart {\n\tif [ -n \"$USERSTART\" ] && [[ ! \"$USERSTART\" =~ ${DUMMYBIN}$ ]]; then\n\t\tif [ -x \"$USERSTART\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting custom user startscript '$USERSTART'\"\n\t\t\tif [ \"$USEWINE\" -eq 0 ]; then\n\t\t\t\t\"$USERSTART\" \"1\" \"$AID\" \"$GP\" \"$GPFX\" &\n\t\t\telse\n\t\t\t\t\"$USERSTART\" \"1\" \"$AID\" \"$GP\" \"$GWFX\" &\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Custom user startscript '$USERSTART' not found or not executable\"\n\t\tfi\n\tfi\n}\n\nfunction customUserScriptStop {\n\tif [ -n \"$USERSTOP\" ] && [[ ! \"$USERSTOP\" =~ ${DUMMYBIN}$ ]]; then\n\t\tif [ -x \"$USERSTOP\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting custom user stopscript '$USERSTOP'\"\n\t\t\tif [ \"$USEWINE\" -eq 0 ]; then\n\t\t\t\t\"$USERSTOP\" \"0\" \"$AID\" \"$GP\" \"$GPFX\" &\n\t\t\telse\n\t\t\t\t\"$USERSTOP\" \"0\" \"$AID\" \"$GP\" \"$GWFX\" &\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Custom user stopscript '$USERSTOP' not found or not executable\"\n\t\tfi\n\tfi\n}\n\nfunction editorSkipped {\n\tif [ -z \"$MAXASK\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Maximal editor requester count MAXASK not defined - skipping\"\n\telse\n\t\tif ! grep -q \"^ASKCNT\" \"$STLGAMECFG\"; then\n\t\t\tSETASKCNT=1\n\t\t\tupdateConfigEntry \"ASKCNT\" \"$SETASKCNT\" \"$STLGAMECFG\"\n\t\telse\n\t\t\tSETASKCNT=$(($(grep \"ASKCNT\" \"$STLGAMECFG\" | cut -d '=' -f2 | sed 's/\\\"//g') +1))\n\t\t\tupdateConfigEntry \"ASKCNT\" \"$SETASKCNT\" \"$STLGAMECFG\"\n\t\tfi\n\n\t\tASKCNT=\"$SETASKCNT\"\n\n\t\tif [ \"$ASKCNT\" -ge \"$MAXASK\" ]; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_CANCELREQ1\" \"$MAXASK\" \"$GN\" \"$AID\")\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - 'ASKCNT $ASKCNT' reached 'MAXASK $MAXASK' - disabling requester and resetting counter\"\n\t\t\tupdateConfigEntry \"WAITEDITOR\" \"0\" \"$STLGAMECFG\"\n\t\t\tupdateConfigEntry \"ASKCNT\" \"0\" \"$STLGAMECFG\"\n\t\telif [ \"$ASKCNT\" -lt \"$MAXASK\" ]; then\n\t\t\tnotiShow \"$(strFix \"$NOTY_CANCELREQ2\" \"$ASKCNT\" $((MAXASK - ASKCNT)) \"$GN\" \"$AID\")\"\n\t\tfi\n\tfi\n}\n\nfunction checkWaitRequester {\n\tif [ -f \"$EWRF\" ] ; then\n\t\tif grep -q \"^WAITEDITOR=\\\"0\\\"\" \"$STLGAMECFG\"; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Re-enabling Wait Requester in '$STLGAMECFG', because '$EWRF' was found\"\n\t\t\tupdateConfigEntry \"WAITEDITOR\" \"2\" \"$STLGAMECFG\"\n\t\tfi\n\t\trm \"$EWRF\"\n\tfi\n\n\tif [ -f \"$UWRF\" ] ; then\n\t\tif [ -f \"$SWRF\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Stop skipping Wait Requester, because '$UWRF' was found\"\n\t\t\trm \"$SWRF\"\n\t\tfi\n\t\trm \"$UWRF\"\n\tfi\n}\n\nfunction askSettings {\n\tif ! grep -q \"^WAITEDITOR=\\\"0\\\"\" \"$STLGAMECFG\"; then\n\t\tif [ -f \"$SWRF\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping Wait-Requester because skip file was found under '$SWRF'\"\n\t\telse\n\t\t\t# open editor requester\n\t\t\tif grep -q \"^WAITEDITOR\" \"$STLGAMECFG\"; then\n\t\t\t\tWEDGAME=\"$(grep \"^WAITEDITOR\" \"$STLGAMECFG\"| cut -d '=' -f2)\"\n\t\t\t\tWAITEDITOR=\"${WEDGAME//\\\"/}\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using game specific requester timeout '$WAITEDITOR'\"\n\t\t\tfi\n\n\t\t\twriteAllAIMeta \"$AID\" &\n\n\t\t\tif [ \"$WAITEDITOR\" -gt 0 ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Opening Requester with timeout '$WAITEDITOR'\"\n\n\t\t\t\tgetAvailableCfgs\n\t\t\t\tfixShowGnAid\n\t\t\t\texport CURWIKI=\"$PPW/Wait-Requester\"\n\t\t\t\tTITLE=\"${PROGNAME}-OpenSettings\"\n\t\t\t\tpollWinRes \"$TITLE\"\n\n\t\t\t\tsetShowPic\n\n\t\t\t\tif [ \"$STARTMENU\" == \"Editor\" ]; then\n\t\t\t\t\tREQQEST=\"$GUI_ASKOPENED\"\n\t\t\t\t\tREQBUT=\"$BUT_EDITORMENU\"\n\t\t\t\t\tLAUNCHMENU=\"EditorDialog\"\n\t\t\t\telif [ \"$STARTMENU\" == \"Favorites\" ]; then\n\t\t\t\t\tREQQEST=\"$GUI_ASKOPENFAV\"\n\t\t\t\t\tREQBUT=\"$BUT_FAV\"\n\t\t\t\t\tLAUNCHMENU=\"favoritesMenu\"\n\t\t\t\telif [ \"$STARTMENU\" == \"Game\" ]; then\n\t\t\t\t\tREQQEST=\"$GUI_ASKOPENGAM\"\n\t\t\t\t\tREQBUT=\"$BUT_GM\"\n\t\t\t\t\tLAUNCHMENU=\"openGameMenu\"\n\t\t\t\telse\n\t\t\t\t\tREQQEST=\"$GUI_ASKOPENSET\"\n\t\t\t\t\tREQBUT=\"$BUT_MAINMENU\"\n\t\t\t\t\tLAUNCHMENU=\"MainMenu\"\n\t\t\t\tfi\n\n\t\t\t\tASKSETSTLVERS=\"<b>${PROGNAME} ${PROGVERS}</b>\"\n\n\t\t\t\tLAPL=\"$(getLaPl)\"\n\n\t\t\t\tPDBROUT=\"\"\n\t\t\t\tprepareProtonDBRating\n\t\t\t\tif [ -f \"$PDBRASINF\" ];then\n\t\t\t\t\tPDBROUT=\"$(cat \"$PDBRASINF\")\"\n\t\t\t\tfi\n\n\t\t\t\t# Tested and this should not break Non-Steam Games - Open an issue if it does!\n\t\t\t\tprepareSteamDeckCompatInfo\n\t\t\t\tif [ ! -f \"$STLGDECKCOMPAT/${AID}-deckcompatrating.json\" ] && [ \"$DLSTEAMDECKCOMPATINFO\" -eq 1 ]; then\n\t\t\t\t\t# If the Steam Deck compat rating json doesn't exist, assume something messed up e.g. offline or JQ is not installed\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Could not retrieve Steam Deck compatibility rating, defaulting to $STEAMDECKCOMPAT_UNKNOWN - Maybe '$JQ' is missing or we are offline?\"\n\t\t\t\tfi\n\n\t\t\t\tif [ -n \"$STEAMDECKCOMPATRATING\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Fetched Steam Deck compatibility info, will show on wait requester\"\n\t\t\t\t\tSTEAMDECKCOMPATOUT=\"<b>$GUI_SDCR:</b> ${STEAMDECKCOMPATRATING:$STEAMDECKCOMPAT_UNKNOWN}\"\n\t\t\t\tfi\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Steam Deck compatibility rating string is '$STEAMDECKCOMPATOUT'\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Preparing to show Wait Requester\"\n\n\t\t\t\t\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t\t\t\t--title=\"$TITLE\" \\\n\t\t\t\t--text=\"$(spanFont \"$ASKSETSTLVERS\" \"H\")\\n\\n$(spanFont \"$SGNAID - $REQQEST\" \"H\")\" \\\n\t\t\t\t--field=\"<i>$PDBROUT</i>\":LBL \\\n\t\t\t\t--field=\"<i>$STEAMDECKCOMPATOUT</i>\":LBL \\\n\t\t\t\t--field=\"<i>$LAPL</i>\":LBL \\\n\t\t\t\t--field=\"<i>(${#CfgFiles[@]} $GUI_EDITABLECFGS)</i>\":LBL \\\n\t\t\t\t--field=\"<i>($GUI_EDITABLEGAMECFGS)</i>\":LBL \\\n\t\t\t\t--button=\"$REQBUT\":0 \\\n\t\t\t\t--button=\"$BUT_SKIP\":1 \\\n\t\t\t\t--timeout=\"$WAITEDITOR\" \\\n\t\t\t\t--timeout-indicator=top \\\n\t\t\t\t\"$GEOM\"\n\n\t\t\t\tWAITREQRESULT=$?\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Wait Requester result was '$WAITREQRESULT'\"\n\n\t\t\t\tcase $WAITREQRESULT in\n\t\t\t\t\t0)  {\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected $REQBUT - Starting $SETMENU\"\n\t\t\t\t\t\t\"$LAUNCHMENU\" \"$AID\"\n\t\t\t\t\t\t}\n\t\t\t\t\t;;\n\t\t\t\t\t1)  writelog \"INFO\" \"${FUNCNAME[0]} - Selected $BUT_SKIP - Starting game without opening the $SETMENU\"\n\t\t\t\t\t\teditorSkipped ;;\n\t\t\t\t\t70) writelog \"INFO\" \"${FUNCNAME[0]} - TIMEOUT - Starting game without opening the $SETMENU\" ;;\n\t\t\t\t\t*) {\n\t\t\t\t\t   writelog \"WARN\" \"${FUNCNAME[0]} - Wait Requester returned unknown exit code '${WAITREQRESULT}' - Defaulting to opening the $SETMENU\"\n\t\t\t\t\t   \"$LAUNCHMENU\" \"$AID\"\n\t\t\t\t\t   }\n\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\tfi\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping Wait-Requester because WAITEDITOR is 0 in '$STLGAMECFG'\"\n\tfi\n}\n\n# create project dir $1 - no idea what the former arg2 was good for :)\nfunction mkProjDir {\n\tmkdir -p \"$1\" 2>/dev/null >/dev/null\n}\n\n# create project dirs\nfunction createProjectDirs {\n\tmkProjDir \"$STLCFGDIR\"\n\tmkProjDir \"$STLLANGDIR\"\n\tmkProjDir \"$LOGDIRID\"\n\tmkProjDir \"$LOGDIRTI\"\n\tmkProjDir \"$STLPROTONIDLOGDIR\"\n\tmkProjDir \"$STLPROTONTILOGDIR\"\n\tmkProjDir \"$STLDXVKLOGDIR\"\n\tmkProjDir \"$STLWINELOGDIR\"\n\tmkProjDir \"$STLGLLOGDIRID\"\n\tmkProjDir \"$STLGLLOGDIRTI\"\n\tmkProjDir \"$STLGAMEDIRID\"\n\tmkProjDir \"$STLGAMEDIRTI\"\n\tmkProjDir \"$STLCOLLECTIONDIR\"\n\tmkProjDir \"$TWEAKDIR\"\n\tmkProjDir \"$USERTWEAKDIR\"\n\tmkProjDir \"$TWEAKCMDDIR\"\n\tmkProjDir \"$SBSTWEAKDIR\"\n\tmkProjDir \"$STLDLDIR\"\n\tmkProjDir \"$STLSHADDIR\"\n\tmkProjDir \"$STLVORTEXDIR\"\n\tmkProjDir \"${STLVORTEXDIR}/downloads\"\n\tmkProjDir \"$RESHADESRCDIR\"\n\tmkProjDir \"$CUSTPROTDLDIR\"\n\tmkProjDir \"$CUSTPROTEXTDIR\"\n\tmkProjDir \"$WINEDLDIR\"\n\tmkProjDir \"$WINEEXTDIR\"\n\tmkProjDir \"$STLGAMES\"\n\tmkProjDir \"$STLGDESKD\"\n\tmkProjDir \"$STLIDFD\"\n\tmkProjDir \"$STLGHEADD\"\n\tmkProjDir \"$STLGICO\"\n\tmkProjDir \"$STLGZIP\"\n\tmkProjDir \"$STLGPNG\"\n\tmkProjDir \"$STLAPPINFOIDDIR\"\n\tmkProjDir \"$HIDEDIR\"\n\tmkProjDir \"$VORTEXCOMPDATA\"\n\tmkProjDir \"$GEMETA\"\n\tmkProjDir \"$MO2COMPDATA\"\n\tmkProjDir \"$STLVKD3DLOGDIR\"\n\tmkProjDir \"$GEMETA\"\n\tmkProjDir \"$CUMETA\"\n\tmkProjDir \"$TIGEMETA\"\n\tmkProjDir \"$TICUMETA\"\n\tmkProjDir \"$STLCUSTVARSDIR\"\n\tmkProjDir \"$STLGDECKCOMPAT\"\n}\n\n# add missing config entries to configfile $1 using seperator $2:\nfunction updateConfigFile {\n\n\tif [ -z \"$1\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Expected configfile as argument 1\"\n\telse\n\t\tCFGFILE=\"$1\"\n\t\tSEP=\"$2\"\n\n\t\t# disable logging temporarily when the program just started (cosmetics)\n\t\tif [ -n \"$3\" ]; then\n\t\t\tORGLOGLEVEL=\"$LOGLEVEL\"\n\t\t\tLOGLEVEL=0\n\t\tfi\n\n\t\tif grep \"$STLCFGDIR\" \"$CFGFILE\" >/dev/null ; then\n\t\t\twritelog \"UPDATE\" \"${FUNCNAME[0]} - Replacing '$STLCFGDIR' with 'STLCFGDIR' in '$CFGFILE'\"\n\t\t\tsed \"s:$STLCFGDIR:STLCFGDIR:g\" -i \"$CFGFILE\"\n\t\tfi\n\n\t\tif grep -q \"config Version: $PROGVERS\" \"$CFGFILE\"; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Config file '$CFGFILE' already at version '$PROGVERS'\"\n\t\telse\n\t\t\tOLDVERS=\"$(grep \"config Version\" \"$CFGFILE\" | awk -F ': ' '{print $2}')\"\n\n\t\t\tif [ -n \"$OLDVERS\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating '$CFGFILE' from '$OLDVERS' to '$PROGVERS'\"\n\t\t\t\tsed \"s/config Version: $OLDVERS/config Version: $PROGVERS/\" -i \"$CFGFILE\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Updating '$CFGFILE' to '$PROGVERS'\"\n\t\t\t\tsed \"1s/^/##########################\\n/\" -i \"$CFGFILE\"\n\t\t\t\tsed \"1s/^/## config Version: $PROGVERS\\n/\" -i \"$CFGFILE\"\n\t\t\tfi\n\n\t\t\tUPFROMTMPL=0\n\t\t\tif [ \"$CFGFILE\" == \"$STLGAMECFG\" ] && [ -f \"$STLDEFGAMECFG\" ]; then\n\t\t\t\tUPFROMTMPL=1\n\t\t\tfi\n\n\t\t\twhile read -r RAWLINE; do\n\t\t\t\tLCAT=\"$(cut -d '=' -f1 <<< \"$RAWLINE\")\"\n\t\t\t\tLVAL=\"$(cut -d '=' -f2 <<< \"$RAWLINE\")\"\n\t\t\t\tif ! grep \"^${LCAT}=\" \"$CFGFILE\" >/dev/null ; then\n\t\t\t\t\twritelog \"UPDATE\" \"${FUNCNAME[0]} - Entry '$LCAT' is missing in '$CFGFILE' - adding it now!\"\n\t\t\t\t\tif [ \"$UPFROMTMPL\" -eq 1 ]; then\n\t\t\t\t\t\tOUTVAL=\"$(grep \"^${LCAT}=\" \"$STLDEFGAMECFG\" | cut -d '=' -f2)\"\n\t\t\t\t\t\tOUTVAL=\"${OUTVAL//\\\"}\"\n\t\t\t\t\telse\n\t\t\t\t\t\tif grep -q \"\\\\$\" <<< \"$LVAL\"; then\n\t\t\t\t\t\t\tif grep -q \"WINX$\\|WINY\\|POSX\\|POSY$\" <<< \"$LVAL\"; then\n\t\t\t\t\t\t\t\tVARNAM=${LVAL//\\$/DEF}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tVARNAM=${LVAL//\\$/}\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tOUTVAL=${!VARNAM}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tOUTVAL=\"$LVAL\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tOUTVAL=\"${OUTVAL//$STLCFGDIR/STLCFGDIR}\"\n\t\t\t\t\tADDLINE=\"$LCAT=\\\"$OUTVAL\\\"\"\n\t\t\t\t\twritelog \"UPDATE\" \"${FUNCNAME[0]} - Adding line '$ADDLINE'\"\n\t\t\t\t\techo \"$ADDLINE\" >> \"$CFGFILE\"\n\t\t\t\tfi\n\t\t\tdone <<< \"$(sed -n \"/#START$SEP/,/#END$SEP/p;/#END$SEP/q\" \"$0\" | awk -F 'echo ' '{print $2}' | grep -v \"\\\"##\" | awk '{$1=$1};1' | sed '/^[[:space:]]*$/d'| sed 's/\\\"//g' | sed 's/=\\\\/=/g' | sed 's/\\\\$//g')\"\n\t\tfi\n\n\t\t# re-enable logging\n\t\tif [ -n \"$3\" ]; then\n\t\t\tLOGLEVEL=\"$ORGLOGLEVEL\"\n\t\tfi\n\tfi\n}\n\nfunction linkGameCfg {\n\tif [ -z \"$GN\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Skipping symlinking config - no valid game name found\"\n\telse\n\t\tcreateSymLink \"${FUNCNAME[0]}\" \"$STLGAMECFG\" \"${STLGAMEDIRTI}/${GN}.conf\"\n\tfi\n}\n\n# create game configs:\nfunction createGameCfg {\n\n\tif [ -f \"$STLGAMECFG\" ]; then\n\t\t# add missing config entries in the default global config:\n\t\tupdateConfigFile \"$STLGAMECFG\" \"saveCfgdefault_template\"\n\telse\n\t\tupdateConfigEntry \"CUSTOMCMD\" \"$DUMMYBIN\" \"$STLDEFGAMECFG\"\n\t\tgetGameName \"$AID\"\n\t\tif [ -n \"$GAMENAME\" ] && [ \"$GAMENAME\" != \"$NON\" ]; then\n\t\t{\n\t\techo \"## config Version: $PROGVERS\"\n\t\techo \"##########################\"\n\t\techo \"#########\"\n\t\techo \"#$PROGNAME $PROGVERS\"\n\t\techo \"#########\"\n\t\tgetCfgHeader\n\t\techo \"## set the default config file for DXVK_CONFIG_FILE which is used when found - defaults to config found in $STLDXVKDIR\"\n\t\techo \"STLDXVKCFG=\\\"$STLDXVKDIR/$AID.conf\\\"\"\n\t\tgrep -v \"config Version\" \"$STLDEFGAMECFG\"\n\t\t} >> \"$STLGAMECFG\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No game name found for '$AID' - does the game exist?\"\n\t\tfi\n\tfi\n\tlinkGameCfg\n}\n\n# override game configs with a tweak config if available:\nfunction checkTweakLaunch {\n\tif [ -z \"$TWEAKCMD\" ]; then\n\t\tTWEAKCMD=\"\"\n\tfi\n\n\tif [ -f \"$GLOBALTWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using overrides found in '$GLOBALTWEAKCFG'\"\n\t\tnotiShow \"$(strFix \"$NOTY_GLOBALTWEAK\" \"$GLOBALTWEAKCFG\")\"\n\t\tloadCfg \"$GLOBALTWEAKCFG\"\n\tfi\n\n\t# then user config - (overriding the global one)\n\tif [ -f \"$TWEAKCFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using overrides found in '$TWEAKCFG'\"\n\t\tloadCfg \"$TWEAKCFG\"\n\tfi\n\n\tif [ -n \"$TWEAKCMD\" ]; then\n\t\t# tweak command defined\n\t\tif [ -f \"$TWEAKCMD\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found TWEAKCMD '$TWEAKCMD'\"\n\t\t\tRUNTWEAK=\"$TWEAKCMD\"\n\t\telif [ -f \"$TWEAKCMDDIR/$TWEAKCMD\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found TWEAKCMD '$TWEAKCMD' in '$TWEAKCMDDIR'\"\n\t\t\tRUNTWEAK=\"$TWEAKCMDDIR/$TWEAKCMD\"\n\t\telif [ -f \"$GFD/$TWEAKCMD\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found TWEAKCMD '$TWEAKCMD' in '$GFD'\"\n\t\t\tRUNTWEAK=\"$GFD/$TWEAKCMD\"\n\t\tfi\n\t\t# tweak command found\n\n\t\tif [ -n \"$RUNTWEAK\" ]; then\n\n\t\t\tif grep -q \"^TWEAKFILE\" \"$RUNTWEAK\"; then\n\t\t\t\t# dependency for tweak command defined\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - TWEAKFILE configured in $RUNTWEAK as dependency - checking if the file exists in gamedir - relative to the gameexe\"\n\t\t\t\tTWEAKFILE=\"$(grep \"^TWEAKFILE\" \"$RUNTWEAK\" | awk -F 'TWEAKFILE=' '{print $2}')\"\n\t\t\t\tif [ -f \"$EFD/$TWEAKFILE\" ]; then\n\t\t\t\t\t# dependency for tweak command found\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found tweakcmd dependency in $EFD/$TWEAKFILE - starting the tweakcmd now\"\n\t\t\t\t\t# start tweak command\n\t\t\t\t\t\"$RUNTWEAK\"\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $RUNTWEAK finished\"\n\t\t\t\telse\n\t\t\t\t\t# dependency for tweak command not found\n\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Configured TWEAKFILE $TWEAKFILE not found - skipping launch of the tweakcmd $TWEAKCMD\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\t# start tweak command\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - No TWEAKFILE configured in $RUNTWEAK as dependency - starting the tweakcmd regularly now\"\n\t\t\t\t\"$RUNTWEAK\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $RUNTWEAK finished\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Configured TWEAKCMD $TWEAKCMD not found - can't start it\"\n\t\tfi\n\tfi\n}\n\nfunction genDefIcon {\n\tif [ ! -f \"$STLICON\" ]; then\n\t\tbase64 -d <<< \"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAMAAACdt4HsAAAAZlBMVEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHByAgIAAAAD///8AAACfn5+AgIC/v78QEBDv7+9gYGBQUFCvr6/Pz88wMDAgICDf399wcHBAQECPj4/mYUh/AAAAEXRSTlMAYICf778gj3DfUEAwz48gEPfJjAsAAAKXSURBVFjDnZfpetsgFEQtW17jtGVAgNBi9/1fsiDz5dbBTKLMH286xwgBFzaSa7Pdbi+Hzc9y+NXikffmJ/wp4pM3xvQWOF9X8zugH1yIgqD0BDSreRucsUixxvloWMsP8wiMsQXpZdDrDMfIqwljp1K6CdaVhsv2VZaL3oBBqVvv1CPOT059NjR4nbf42xlGlckG4dO/qKF7yoh9asCkVM0gvLFWq0/xAK6xB26KGDKv1WCR7lLieowex80enWKGzC+A/SsKbeFdF+8BUIoaMh8TJlivuxjtLWyIXwFJQA3Cx+gROaN2SgTMsPCSOZiYMMe3WdDCEYNPfD0ObezEQFrAeRViJ57gOc/icdocgJnw80z4GTikudjXed6GHru0mLUwhCcGg/awzFRAV3li0MBFxnqVFwOfbZrwgGa8GEpeDJQXQ8mPoxgIL4ay/+RdjRdDwUPFQAwVXgzClwJowovhmYd3zkMMVV4MwuNmeizpzS0bCC+rvw5IWcb3HTH3ZdQuCZlnRVZHakm3cNnUAYsr8bsqnnuBtUAjpqF8TKUPpIcayseUT0H4L55iTjkOhOfjSAyFIPN8JEuKuSA8nUsSmY0Fz2ZzaSh4sp5UDMLzFa1mEL5muJB1V/j6qix1oYwWvlYXpDLR6kQq0wGg5W9OPKmNUp1JG2h13iOs4cv9QQvHec93KCv2SEXW7tK4gO8TieC7O9XX6bD/9l75ZW44frVb54YJ8Xz2DkN4ajDY5xPLc7t64alhAN4+zkwq3B+dOd9hhWeGweIopzZlgN4E0yN+4Kuu8Lv/z43KfNQSX1v3vZKED15OrtoYo52e6pVn0hkfemC3+ux8PQO2jxf5CWhPzz/+3p6/cXpv3vHIefsnf/UP3QHUzgWHsSYAAAAASUVORK5CYII=\" > \"$STLICON\"\n\tfi\n\n\tif [ ! -f \"$NOICON\" ]; then\n\t\tbase64 -d <<< \"R0lGODlhAQABAIAAAP///wAAACH5BAEAAAAALAAAAAABAAEAAAICRAEAOw==\" > \"$NOICON\"\n\tfi\n}\n\nfunction createDefaultCfgs {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - START\"\n\n\tcreateProjectDirs\n\n\tloadLanguage \"$@\"\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - setSteamPaths:\"\n\tsetSteamPaths\n\n\tsaveCfg \"$STLDEFGLOBALCFG\" X\n\tloadCfg \"$STLDEFGLOBALCFG\" X\n\tsaveCfg \"$STLURLCFG\" X\n\tloadCfg \"$STLURLCFG\" X\n\tprepareGUI\n\tgenDefIcon\n\n\tcreateProjectDirs\n\tgetGameOS \"$@\"\n\tdelEmptyFile \"$PROTONCSV\"\n\n\tif [ \"$HAVEINPROTON\" -eq 0 ]; then\n\t\tif [ \"$ISGAME\" -eq 2 ] || [ ! -f \"$PROTONCSV\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - createProtonList:\"\n\t\t\tcreateProtonList X\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - createProtonList end\"\n\t\telif [ \"$ISGAME\" -ne 2 ] && [ -f \"$PROTONCSV\" ]; then\n\t\t\tmapfile -t -O \"${#ProtonCSV[@]}\" ProtonCSV < \"$PROTONCSV\"\n\t\tfi\n\tfi\n\n\tcheckStartMode\n\tsaveCfg \"$STLDEFGAMECFG\" X\n\tcreateProjectDirs\n\tsetGlobalAIDCfgs\n\tlistAllSettingsEntries\n\tcheckEntryBlocklist\n\tupdateMenuSortFile\n\twritelog \"INFO\" \"${FUNCNAME[0]} - STOP\"\n}\n\n# updates or creates option $1 with value $2 in configfile $3:\nfunction updateConfigEntry {\n\tCFGCAT=\"$1\"\n\tCFGVALUE=\"$2\"\n\tCFGFILE=\"$3\"\n\n\tif [ \"$CFGCAT\" == \"CUSTOMCMD\" ] && [ \"$CFGFILE\" == \"$STLDEFGAMECFG\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Emptying '$CFGCAT' for '$STLDEFGAMECFG'\"\n\t\tCFGVALUE=\"$DUMMYBIN\"\n\tfi\n\n\tif [ -z \"$3\" ]; then\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Expected 3 arguments - only got $*\"\n\telse\n\t\tif [ ! -f \"$CFGFILE\" ]; then\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Configfile '$CFGFILE' does not exist - skipping config update\"\n\t\telse\n\t\t\tif [ -n \"$CFGVALUE\" ]; then\n\t\t\t\tif [ \"$CFGVALUE\" == \"TRUE\" ]; then\n\t\t\t\t\tCFGVALUE=\"1\"\n\t\t\t\telif [ \"$CFGVALUE\" == \"FALSE\" ]; then\n\t\t\t\t\tCFGVALUE=\"0\"\n\t\t\t\tfi\n\n\t\t\t\tif [ \"$CFGVALUE\" == \"DUMMY\" ]; then\n\t\t\t\t\tCFGVALUE=\"\"\n\t\t\t\tfi\n\n\t\t\t\t# Help prevent expanding incoming config values by escaping them (i.e. when using with sed)\n\t\t\t\tESCAPED_CFGVALUE=\"$( printf \"%s\\n\" \"$CFGVALUE\" | sed 's/\\\\/\\\\\\\\/g' )\"\n\n\t\t\t\t# only save value if it changed\n\t\t\t\t# sed needs escaped string because otherwise it'll expand escape sequences in strings with backslashes\n\t\t\t\t# i.e. config values with Windows paths, '\\home\\test' will have '\\t' expanded as a tab character\n\t\t\t\t# We have to use the regular one for echo though.\n\t\t\t\tif { [ \"${!CFGCAT}\" != \"$CFGVALUE\" ] && [ \"${!CFGCAT}\" != \"${CFGVALUE//$STLCFGDIR/STLCFGDIR}\" ];} || [ -f \"$FUPDATE\" ]; then\n\t\t\t\t\tCFGVALUE=\"${CFGVALUE//$STLCFGDIR/STLCFGDIR}\"\n\t\t\t\t\tif [ \"$(grep -c \"#${CFGCAT}=\" \"$CFGFILE\")\" -eq 1 ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Option '$CFGCAT' commented out in config '${CFGFILE##*/}' - activating it with the new value '$CFGVALUE'\"\n\t\t\t\t\t\tsed -i \"/^#${CFGCAT}=/c$CFGCAT=\\\"$ESCAPED_CFGVALUE\\\"\" \"$CFGFILE\"\n\t\t\t\t\telif [ \"$(grep -c \"^${CFGCAT}=\" \"$CFGFILE\")\" -eq 0 ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$CFGCAT' option missing in config '${CFGFILE##*/}' - adding a new line\"\n\t\t\t\t\t\techo \"$CFGCAT=\\\"$CFGVALUE\\\"\" >> \"$CFGFILE\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Option '$CFGCAT' is updated with the new value '$CFGVALUE' in config '${CFGFILE##*/}'\"\n\t\t\t\t\t\tsed -i \"/^${CFGCAT}=/c$CFGCAT=\\\"$ESCAPED_CFGVALUE\\\"\" \"$CFGFILE\"\n\t\t\t\t\tfi\n\t\t\t\t\trm \"$FUPDATE\" 2>/dev/null\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tCFGCAT=\"\"\n\tCFGVALUE=\"\"\n\tCFGFILE=\"\"\n}\n\n# autoapply configuration settings based on the steam collections the game is in:\nfunction autoCollectionSettings {\n\tif [ \"$CHECKCOLLECTIONS\" -eq 1 ] && [ \"$STLPLAY\" -eq 0 ]; then\n\t\tif [ -z \"$SUSDA\" ] || [ -z \"$STUIDPATH\" ]; then\n\t\t\tsetSteamPaths\n\t\tfi\n\t\tif [ -d \"$SUSDA\" ]; then\n\t\t\tSC=\"$STUIDPATH/$SRSCV\"\n\n\t\t\tif [ ! -f \"$SC\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - File '${SC##*/}' not found in steam userid dir - skipping\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Searching collections for game '$AID' in '$SC'\"\n\t\t\t\twhile read -r SCAT; do\n\t\t\t\t\tGLOBALSCATCONF=\"$(find \"$GLOBALCOLLECTIONDIR\" -type f -iname \"$SCAT.conf\")\"\n\n\t\t\t\t\t# Should we break after a file to load is found? Is there benefit to loading another file?\n\t\t\t\t\tif [ -f \"$GLOBALSCATCONF\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Global Config '$GLOBALSCATCONF' found - loading its settings\"\n\t\t\t\t\t\tloadCfg \"$GLOBALSCATCONF\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Global Config '$GLOBALSCATCONF' not found - skipping\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tSCATCONF=\"$(find \"$STLCOLLECTIONDIR\" -type f -iname \"$SCAT.conf\")\"\n\n\t\t\t\t\tif [ -f \"$SCATCONF\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Collections Directory Config '$SCATCONF' found - loading its settings\"\n\t\t\t\t\t\tloadCfg \"$SCATCONF\"\n\t\t\t\t\telse\n\t\t\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Collections Directory Config '$SCATCONF' not found - skipping\"\n\t\t\t\t\tfi\n\n\t\t\t\t\tSCATCMD=\"$TWEAKCMDDIR/$SCAT.sh\"\n\t\t\t\t\tif [ -f \"$SCATCMD\" ]; then\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Steam-Collection user command '$SCATCMD' found - executing\"\n\t\t\t\t\t\tif [ \"$USEWINE\" -eq 0 ]; then\n\t\t\t\t\t\t\t\"$SCATCMD\" \"$AID\" \"$EFD\" \"$GPFX\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\"$SCATCMD\" \"$AID\" \"$EFD\" \"$GWFX\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\tdone <<< \"$(sed -n \"/\\\"$AID\\\"/,/}/p;\" \"$SC\" | sed -n \"/\\\"tags\\\"/,/}/p\" | sed -n \"/{/,/}/p\" | grep -v '{\\|}' | cut -d '\"' -f4)\"\n\t\t\tfi\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - '$SUSDA' not found - this should not happen! - skipping\"\n\t\tfi\n\tfi\n}\n\nfunction stracerun {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting stracerun\"\n\twaitForGamePid\n\twritelog \"INFO\" \"${FUNCNAME[0]} - $STRACE -p $(GAMEPID) $STRACEOPTS -o $STRACEDIR/$AID.log\"\n\tmapfile -d \" \" -t -O \"${#RUNSTRACEOPTS[@]}\" RUNSTRACEOPTS < <(printf '%s' \"$STRACEOPTS\")\n\t\"$STRACE\" -p \"$(GAMEPID)\" \"${RUNSTRACEOPTS[@]}\" -o \"$STRACEDIR/$AID.log\"\n}\n\nfunction checkStraceLaunch {\n\tif [ -n \"$STRACERUN\" ]; then\n\t\tif [ \"$STRACERUN\" -eq 1 ]; then\n\t\t\tstracerun &\n\t\tfi\n\tfi\n}\n\nfunction netrun {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting network traffic monitor\"\n\n\twaitForGamePid\n\n\tif [ -n \"$NETMONDIR\" ]; then\n\t\tif [ ! -d \"$NETMONDIR\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - $NETMON dest directory $NETMONDIR does not exist - trying to create it\"\n\t\t\tmkProjDir \"$NETMONDIR\"\n\t\tfi\n\n\t\tif [ -d \"$NETMONDIR\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Writing network traffic for $AID int dest directory $NETMONDIR\"\n\t\t\tif [ -f \"$NETMONDIR/$AID-$NETMON.log\" ]; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Removing old $NETMONDIR/$AID-$NETMON.log\"\n\t\t\t\trm \"$NETMONDIR/$AID-$NETMON.log\"\n\t\t\tfi\n\t\t\tmapfile -d \" \" -t -O \"${#RUNNETOPTS[@]}\" RUNNETOPTS < <(printf '%s' \"$NETOPTS\")\n\t\t\t\"$NETMON\" \"${RUNNETOPTS[@]}\" | grep \"wineserver\" | grep -v \"localhost\\|0.0.0.0\" >> \"$NETMONDIR/$AID-$NETMON.log\"\n\t\telse\n\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - $NETMON dest directory $NETMONDIR still does not exist - skipping\"\n\t\tfi\n\telse\n\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - $NETMON dest directory variable NETMONDIR is empty\"\n\tfi\n}\n\nfunction checkNetMonLaunch {\n\tif [ \"$USENETMON\" -eq 1 ]; then\n\t\tif [ -n \"$NETMON\" ]; then\n\t\t\tnetrun &\n\t\tfi\n\tfi\n}\n\nfunction checkXliveless {\n\tif [ -n \"$NOGFWL\" ]; then\n\t\tif [ \"$NOGFWL\" -eq 1 ]; then\n\t\t\trm -rf \"$GPFX/$DRC/$PFX86/Microsoft Games for Windows - LIVE\"\n\t\t\trm -rf \"$GPFX/$DRC/Program Files/Common Files/Microsoft Shared/Windows Live\"\n\t\t\t# option for USEWINE probably not really required\n\t\t\tWLID=\"WLIDSvcM.exe\"\n\t\t\tif \"$PGREP\" \"$WLID\" >/dev/null; then\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - GFWL starts '$WLID' directly after installation and it never exists - killing it now\"\n\t\t\t\t\"$PKILL\" -9 \"$WLID\"\n\t\t\tfi\n\n\t\t\tXLIVEDLL=\"xlive.dll\"\n\t\t\tXLDL=\"$STLDLDIR/xlive/\"\n\t\t\tXLDST=\"$XLDL/$XLIVEDLL\"\n\t\t\tmkProjDir \"$XLDL\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Game '$SGNAID' needs '$XLIVEDLL' - checking\"\n\t\t\tif [ -f \"$EFD/$XLIVEDLL\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - Found '$XLIVEDLL' in dir $EFD - nothing to do\"\n\t\t\telse\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - '$XLIVEDLL' not found in gamedir '$EFD'\"\n\t\t\t\tif [ ! -f \"$XLDST\" ]; then\n\t\t\t\t\tdlCheck \"$XLIVEURL\" \"$XLDST\" \"X\" \"'$XLDST' not found - downloading automatically from '$XLIVEURL'\"\n\t\t\t\t\t\"$UNZIP\" \"$XLDL/${DLURL##*/}\" -d \"$XLDL\"\n\t\t\t\t\tif [ -f \"$XLDL/dinput8.dll\" ]; then\n\t\t\t\t\t\tmv \"$XLDL/dinput8.dll\" \"$XLDST\"\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\t\tif [ -f \"$XLDST\" ]; then\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found '$XLIVEDLL' in '$XLDL' - copying into gamedir '$EFD'\"\n\t\t\t\t\tcp \"$XLDST\" \"$EFD\"\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\nfunction setGameScopeVars {\n\tfunction getGameScopeArg {\n\t\tARGS=\"$1\"  # e.g. \"$GAMESCOPE_ARGS\"\n\t\tUNESCAPED_FLAG=\"$2\"\n\t\tFLAG=\"${2//-/\\\\-}\"  # e.g. \"--hdr-enabled\" becomes \"\\-\\-hdr\\-enabled\"\n\t\tVAR=\"$3\"  # e.g. \"$GSHDR\"\n\t\tTRUEVAL=\"$4\"  # e.g. \"1\" (on UI)\n\t\tDEFVAL=\"$5\"  # e.g. \"0\" (on UI)\n\t\tARGTYPE=\"${6,,}\"  # e.g. \"chk\", \"cb\", etc (matches Yad widget types mostly)\n\n\t\t# Set values for undefined arguments\n\t\tif [ -n \"$VAR\" ]; then\n\t\t\treturn\n\t\tfi\n\n\t\t# If the flag is not in the args string, return the default value for display purposes\n\t\tif ! grep -qw \"$FLAG\" <<< \"$ARGS\"; then\n\t\t\techo \"$DEFVAL\"\n\t\t\treturn\n\t\tfi\n\n\t\tif [[ $ARGTYPE =~ \"cb\" ]] || [[ $ARGTYPE =~ \"num\" ]]; then\n\t\t\t# Get the value given to the argument as the enabled/selected value, e.g. get '2' from '-U 2' if we passed '-U'\n\t\t\t# If the value does not contain only numbers (with or without decimals) then this will be blank and we return the default value 'DEFVAL'\n\t\t\tGSPARSEDARGVAL=\"$( tr ' ' '\\n' <<< \"$ARGS\" | grep -wA1 \"$FLAG\" | tail -n1 )\"\n\n\t\t\t# Don't validate parsed value for combobox, this is free-text and could be anything \n\t\t\tif ! [[ $ARGTYPE =~ \"num\" ]]; then\n\t\t\t\techo \"$GSPARSEDARGVAL\"\n\t\t\t\treturn\n\t\t\tfi\n\n\t\t\t# If we get passed an invalid GameScope commandline argument where a flag that is supposed to be followed by a NUMBER is not,\n\t\t\t# we could end up returning the next argument, e.g. `-s -f` would return `-s` if we didn't include the `grep -P`\n\t\t\t# Using the `grep -P` we filter out potential garbage returned by the rest of the parsing.\n\t\t\t#\n\t\t\t# We are most likely to encounter problems without this `grep -P` when it comes to the `GSINTRES` and `GSSHWRES`,\n\t\t\t# as if these are blank we end up displaying 'x'.\n\t\t\t#\n\t\t\t# For comboboxes that can display text, we will just have to assume we are passed a valid string, as freetext comboboxes could contain\n\t\t\t# anything and we cannot/should not try to assume what is valid for them in this way.\n\t\t\t# This logic only exists to filter out non-numerical values for flags which expect to be given a numerical argument\n\t\t\t#\n\t\t\t# For more background, see: https://github.com/sonic2kk/steamtinkerlaunch/pull/1152#issuecomment-2316286429\n\t\t\tGSPARSEDARGNUMVAL=\"$( echo \"${GSPARSEDARGVAL}\" | grep -P \"^([\\d]+)(?:\\.([\\d]{1,2}?))?$\" )\"\n\t\t\tif [ -n \"${GSPARSEDARGNUMVAL}\" ]; then\n\t\t\t\techo \"$GSPARSEDARGNUMVAL\"\n\t\t\telse\n\t\t\t\techo \"$DEFVAL\"\n\t\t\tfi\n\t\telif [[ $ARGTYPE =~ \"path\" ]] || [[ $ARGTYPE =~ \"txt\" ]]; then\n\t\t\t# Get value given to arguments with two dashes, like `--`\n\t\t\techo \"$ARGS\" | sed 's:--:\\n--:g' | grep -wA1 \"$FLAG\" | sed \"s:${UNESCAPED_FLAG}::g;s:-:\\n-:g\" | head -n1 | xargs\n\t\telse\n\t\t\techo \"$TRUEVAL\"\n\t\tfi\n\t}\n\n\tfunction getGameScopeGeneralOpts {\n\t\t# GameScope Show Resolution (corresponds to -W, -H options, uppercase) -- Actual GameScope window size (defaults to 1280x720) -- Dropdown\n\t\t# Although this is a combobox, we still use \"num\" as the `getGameScopeArg` type because we want numeric validation\n\t\tGSSHOWRESARGWIDTH=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-W\" \"$GSSHOWRESARGWIDTH\" \"\" \"1280\" \"num\")\"\n\t\tGSSHOWRESARGHEIGHT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-H\" \"$GSSHOWRESARGHEIGHT\" \"\" \"720\" \"num\")\"\n\n\t\tGSSHWRES=\"${GSSHOWRESARGWIDTH}x${GSSHOWRESARGHEIGHT}\"\n\n\t\t# GameScope Internal Resolution (corresponds to -w, -h options, lowercase) -- Resolution that games see (defaults to 1280x720) -- Dropdown\n\t\t# Although this is a combobox, we still use \"num\" as the `getGameScopeArg` type because we want numeric validation\n\t\tGSINTRESARGWIDTH=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-w\" \"$GSINTRESARGWIDTH\" \"\" \"1280\" \"num\")\"\n\t\tGSINTRESARGHEIGHT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-h\" \"$GSINTRESARGHEIGHT\" \"\" \"720\" \"num\")\"\n\n\t\tGSINTRES=\"${GSINTRESARGWIDTH}x${GSINTRESARGHEIGHT}\"\n\n\t\t# Default internal resolution to $NON ('none') if blank -- Ensures we don't pass invalid resolution to GameScope\n\t\tif [ -z \"$GSINTRES\" ]; then  GSINTRES=\"$NON\"; fi\n\n\t\t# Default show resolution to $NON ('none') if blank -- Ensures we don't pass invalid resolution to GameScope\n\t\tif [ -z \"$GSSHWRES\" ]; then  GSSHWRES=\"$NON\"; fi\n\n\t\t# Focused Frame Rate Limit -- Dropdown\n\t\tGSFLR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-r\" \"$GSFLR\" \"\" \"$UL\" \"cb\")\"\n\n\t\t# Unfocused Frame Rate Limit -- Dropdown\n\t\tGSFLU=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-o\" \"$GSFLU\" \"\" \"$UL\" \"cb\")\"\n\n\t\t# Fullscreen (-f) -- Checkbox\n\t\tGSFS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-f\" \"$GSFS\" \"1\" \"0\" )\"\n\n\t\t# Borderless Window (-b) -- Checkbox\n\t\tGSBW=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-b\" \"$GSBW\" \"1\" \"0\" )\"\n\n\t\t# Steam Integration (-e) -- Can fix some strange bugs with some peripherals -- Checkbox\n\t\tGSSE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-e\" \"$GSSE\" \"1\" \"0\" )\"\n\n\t\t# Force windows to be fullscreen inside the nested dislay (--force-windows-fullscreen) -- Checkbox\n\t\tGSFWF=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--force-windows-fullscreen\" \"$GSFWF\" \"1\" \"0\" )\"\n\n\t\t# Force grab cursor -- Keeps cursor inside GameScope nested display -- Checkbox\n\t\tGSFGC=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--force-grab-cursor\" \"$GSFGC\" \"1\" \"0\" )\"\n\n\t\t# Force grab keyboard -- Keeps keyboard input locked to GameScope nested display -- Checkbox\n\t\tGSFGK=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-g\" \"$GSFGK\" \"1\" \"0\" )\"\n\n\t\t# Orientation (--force-orientation) -- Can be either 'left', 'right', 'normal', 'upsidedown' (Defaults to 'normal') -- Dropdown\n\t\t# NOTE: Passing this normally to GameScope (e.g. `gamescope --force-orientation upsidedown -- supertuxkart`) doesn't seem to do anything?\n\t\tGSFOOR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--force-orientation\" \"$GSFOOR\" \"\" \"$GSNORM\" \"cb\")\"\n\n\t\t# Custom cursor image (--cursor) -- File picker\n\t\tGSENABLECUSTCUR=\"0\"\n\t\tGSCURSOR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--cursor\" \"$GSCURSOR\" \"\" \"\" \"path\" )\"\n\t\tif [ -n \"$GSCURSOR\" ]; then  GSENABLECUSTCUR=\"1\"; fi\n\n\t\t# Mouse Sensitivity (-s) -- Spinner\n\t\tGSMOUSESENSITIVITY=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-s\" \"$GSMOUSESENSITIVITY\" \"\" \"1.0\" \"num\" )\"\n\n\t\t# There is a `--cursor-scale-height` option, but at time of writing (15/02/23) this doesn't seem to do anything - We can add it in future, but not now\n\t\t# There is a `--framerate-limit` option, but I am not totally sure how it differs from -r/-o -- I tested it out and the behaviour seemed identical? Maybe one works in both nested/embedded and the other doesn't, not sure...\n\t}\n\n\tfunction getGameScopeFilteringOpts {\n\t\t# Equivalent to check for --fsr-sharpness or --sharpness, so should work fine\n\t\tif grep -q \"\\-\\-filter\" <<< \"$(\"$(command -v \"$GAMESCOPE\")\" --help 2>&1)\"; then\n\t\t\tGSNEWFILTERMODE=1  # Even though it's called NEWFILTERMODE, it also applies to scaling - Naming is hard\n\t\tfi\n\n\t\t# Default scale/filter to none to be safe\n\t\tif [ \"$GSNEWFILTERMODE\" -eq 1 ]; then\n\t\t\t## !!These are the newer flags for checking filter/scale!!\n\t\t\t#\n\t\t\t# Filtering option (-F) -- Combobox (replaces old individual Nearest/FSR/NIS options)\n\t\t\tGSFLTR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-F\" \"$GSFLTR\" \"\" \"$NON\" \"cb\" )\"\n\n\t\t\t# Scaling option (-S) -- Combobox (replaces old individual Integer Scaling option)\n\t\t\tGSSCALE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-S\" \"$GSSCALE\" \"\" \"$NON\" \"cb\" )\"\n\t\telse\n\t\t\t## !!These are legacy flags with individual switches!!\n\t\t\t## These values are checked for and used to apply the correct filter selection\n\t\t\t## on the UI (i.e. passing -U will select FSR for the filter dropdown)\n\t\t\t##\n\t\t\t## Scale\n\t\t\t# Integer scaling (-i)\n\t\t\tGSIS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-i\" \"$GSIS\" \"1\" \"\" )\"\n\t\t\tif [ -n \"$GSIS\" ]; then\n\t\t\t\tGSSCALE=\"integer\"  # This is hardcoded but /shrug, this is probably not going to matter when parsing a legacy GameScope switch\n\t\t\tfi\n\n\t\t\t## Filtering (no default values so that if these aren't in the gamescope args, they are -z)\n\t\t\t# Nearest Neighbor (-n)\n\t\t\tGSNN=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-n\" \"$GSNN\" \"nearest\" \"\" )\"\n\n\t\t\t# FidelityFX 1.0 enabled (-U)\n\t\t\tGSFSR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-U\" \"$GSFSR\" \"fsr\" \"\" )\"\n\n\t\t\t# NVIDIA Image Scaling v1.0.3 (-Y) -- Checkbox\n\t\t\tGSNIS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-Y\" \"$GSNIS\" \"nis\" \"\" )\"\n\n\n\t\t\t# This copies the way GameScope prioritises the check (see parse_upscaler_filter in GameScope main.cpp)\n\t\t\t# This maps the old-style filter switches (-U, -Y, -n) to the GameScope dropdowns\n\t\t\t# Eventually this will no longer be needed, once a suitable length of time has passed, but for now it exists to serve as backwards compatibility for users between GameScope versions.\n\t\t\t# Once `-F`/`-S` are standard, we can remove this code\n\t\t\tif [ -n \"$GSNN\" ]; then\n\t\t\t\tGSFLTR=\"nearest\"\n\t\t\telif [ -n \"$GSFSR\" ]; then\n\t\t\t\tGSFLTR=\"fsr\"\n\t\t\telif [ -n \"$GSNIS\" ]; then\n\t\t\t\tGSFLTR=\"nis\"\n\t\t\tfi\n\t\tfi\n\n\t\t# AMD FidelityFX 1.0 / NVIDIA Image Sharpening upscaler value -- Spinner\n\t\tGSFSRS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--fsr-sharpness\" \"$GSFSRS\" \"\" \"2\" \"num\" )\"\n\n\t\t# Max Scale Factor -- No idea how this option actually works, the documentation is a bit sparce but Steam Deck seems to default it to 2 (https://github.com/Plagman/gamescope/issues/588#issue-1338038588)\n\t\tGSMSF=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-m\" \"$GSMSF\" \"\" \"0\" \"num\" )\"\n\n\t\t# ReShade Effect File Path (--reshade-effect) -- File picker\n\t\tGSRSEP=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--reshade-effect\" \"$GSRSEP\" \"\" \"\" \"path\" )\"\n\n\t\t# ReShade Technique IDX (index?) (--reshade-technique-idx) -- Spinner\n\t\tGSRSTI=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--reshade-technique-idx\" \"$GSRSTI\" \"\" \"0\" \"num\" )\"\n\t}\n\n\tfunction getGameScopeHDROpts {\n\t\t# HDR (--hdr-enabled) -- Checkbox\n\t\tGSHDR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-enabled\" \"$GSHDR\" \"1\" \"0\" )\"\n\n\t\t# HDR Wide Gammut for SDR (--hdr-wide-gammut-for-sdr) - Checkbox\n\t\tGSHDRWGFS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-wide-gammut-for-sdr\" \"$GSHDRWGFS\" \"1\" \"0\" )\"\n\n\t\t# HDR SDR Content Nits (--hdr-sdr-content-nits) -- Defaults to 400 -- Numberbox\n\t\tGSHDRSCNITS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-sdr-content-nits\" \"$GSHDRSCNITS\" \"1\" \"0\" )\"\n\n\t\t# HDR Inverse Tone Mapping Enabled (--hdr-itm-enable) -- Checkbox\n\t\tGSHDRITM=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-itm-enable\" \"$GSHDRITM\" \"1\" \"0\" )\"\n\n\t\t# HDR Inverse Tone Mapping SDR NITs (--hdr-itm-sdr-nits) -- Spinner\n\t\t# Default: 100 nits\n\t\t# Max: 1000 nits\n\t\t#\n\t\t# We default to 0 though in case a user doesn't want to use it, so we won't pass when this is 0\n\t\tGSHDRITMSDRNITS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-itm-sdr-nits\" \"$GSHDRITMSDRNITS\" \"\" \"0\" \"num\" )\"\n\n\t\t# HDR Inverse Tone Mapping Target NITs (--hdr-itm-target-nits) -- Spinner\n\t\t# Default: 1000 nits\n\t\t# Max: 10000 nits\n\t\t#\n\t\t# Like `GSHDRITMSDRNITS`, we default to 0 because we don't want to always pass a value\n\t\tGSHDRITMTGTNITS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-itm-target-nits\" \"$GSHDRITMTGTNITS\" \"\" \"0\" \"num\" )\"\n\n\t\t# There is a --sdr-gamut-wideness option which takes a (float?) value between 0 and 1. Not sure how this is used or what the default is,\n\t\t# so it is not added for now, but it could be added in future if requested/once more is known about it\n\t}\n\n\tfunction getGameScopeVROpts {\n\t\t# There are some other GameScope VR options:\n\t\t# * --vr-overlay-physical-width\n\t\t# * --vr-overlay-physical-curvature\n\t\t# * --vr-overlay-physical-pre-curve-pitch\n\t\t#\n\t\t# These options are probably very bespoke and not important to the average user, especially the physcial width option which takes a value in metres!\n\t\t# Usage on these options is also a bit unclear, probably documented in the GameScope source but not sure -We could add these in future if it is requested\n\n\t\t# Enable OpenVR (--openvr) -- Checkbox\n\t\tGSVR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--openvr\" \"$GSVR\" \"1\" \"0\" )\"\n\n\t\t# SteamVR Explicit Name (--vr-overlay-explicit-name) -- Textbox\n\t\tGSVREXNA=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-explicit-name\" \"$GSVREXNA\" \"\" \"\" \"txt\" )\"\n\n\t\t# SteamVR Default Name when no window title available (--vr-overlay-default-name) -- Textbox\n\t\tGSVRDEFNAM=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-default-name\" \"$GSVRDEFNAM\" \"\" \"\" \"txt\" )\"\n\n\t\t# SteamVR Overlay Key String (--vr-overlay-key) -- Textbox\n\t\tGSVROVERLAYKEY=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-key\" \"$GSVROVERLAYKEY\" \"\" \"\" \"txt\" )\"\n\n\t\t# SteamVR Overlay Icon (--vr-overlay-icon) -- Similar to cursor picker -- File picker\n\t\tGSVRICONENABLE=\"0\"\n\t\tGSVRICON=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-icon\" \"$GSVRICON\" \"\" \"\" \"path\" )\"\n\t\tif [ -n \"$GSVRICON\" ]; then  GSVRICONENABLE=\"1\"; fi\n\n\t\t# Focus VR overlay immediately (--vr-overlay-show-immediately) -- Checkbox\n\t\tGSVRSHOIMM=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-show-immediately\" \"$GSVRSHOIMM\" \"1\" \"0\" )\"\n\n\t\t# Enable SteamVR Control Bar (--vr-overlay-enable-control-bar) -- Checkbox\n\t\tGSVRCONTROLBAR=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-enable-control-bar\" \"$GSVRCONTROLBAR\" \"1\" \"0\" )\"\n\n\t\t# Enable SteamVR Keyboard Button on Control Bar (--vr-overlay-enable-control-bar-keyboard) -- Checkbox\n\t\tGSVRCONTROLBARKEYBOARD=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-enable-control-bar-keyboard\" \"$GSVRCONTROLBARKEYBOARD\" \"1\" \"0\" )\"\n\n\t\t# Enable SteamVR Close Button on Control Bar (--vr-overlay-enable-control-bar-close) -- Checkbox\n\t\tGSVRCONTROLBARCLOSE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-enable-control-bar-close\" \"$GSVRCONTROLBARCLOSE\" \"1\" \"0\" )\"\n\n\t\t# VR Trackpad Scroll Speed (--vr-scrolls-speed) -- Spinner\n\t\tGSVRSCROLLSSPEED=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-scrolls-speed\" \"$GSVRSCROLLSSPEED\" \"\" \"8.0\" \"num\" )\"\n\n\t\t# Show SteamVR Overlay as Modal (--vr-overlay-modal) -- Checkbox\n\t\tGSVRMODAL=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--vr-overlay-modal\" \"$GSVRMODAL\" \"1\" \"0\" )\"\n\t}\n\n\tfunction getGameScopeEmbeddedOpts {\n\t\t# Default action on touch (--default-touch-mode) -- Dropdown\n\t\t# --------------------\n\t\t# 0: hover\n\t\t# 1: leftclick\n\t\t# 2: rightclick\n\t\t# 3: middleclick\n\t\t# 4: passthrough\n\t\t#\n\t\t# More information in the GameScope commit that added it: https://github.com/Plagman/gamescope/commit/39c9e93e0c0539d4c767e1be1c96e0d38778af12\n\t\tGSDEFTOUCHMODE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--default-touch-mode\" \"$GSDEFTOUCHMODE\" \"\" \"${GSDEF}\" \"cb\" )\"\n\t\tcase $GSDEFTOUCHMODE in\n\t\t\t0) GSDEFTOUCHMODE=\"${GSHOVER}\" ;;\n\t\t\t1) GSDEFTOUCHMODE=\"${GSLEFTCLICK}\" ;;\n\t\t\t2) GSDEFTOUCHMODE=\"${GSRIGHTCLICK}\" ;;\n\t\t\t3) GSDEFTOUCHMODE=\"${GSMIDDLECLICK}\" ;;\n\t\t\t4) GSDEFTOUCHMODE=\"${GSPASSTHRU}\" ;;\n\t\tesac\n\n\t\t# Enable Immediate Flips (--immediate-flips) -- Probably equivalent to the Steam Deck's \"allow tearing\" option -- Checkbox\n\t\tGSIMMEDIATEFLIPS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--immediate-flips\" \"$GSIMMEDIATEFLIPS\" \"1\" \"0\" )\"\n\n\t\t# Enable Adaptive Sync / VRR (--adaptive-sync) -- Checkbox\n\t\tGSADAPTIVESYNC=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--adaptive-sync\" \"$GSADAPTIVESYNC\" \"1\" \"0\" )\"\n\n\t\t# Preferred GameScope Output in order of preference -- Not sure how exactly this should be passed and it can take N number of outputs - For this reason we just give the user a textbox and let them enter their displays manually\n\t\tGSPREFOUT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-O\" \"$GSPREFOUT\" \"\" \"\" \"txt\" )\"\n\n\t\t# GameScope DRM Mode Generation algorithm to use -- GameScope takes either \"cvt\" or \"fixed\", but we will have a \"default\" option in the dropdown which means we will ignore the flag altogether\n\t\tGSDRMMODE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--generate-drm-mode\" \"$GSDRMMODE\" \"\" \"$GSDEF\" \"cb\")\"\n\t}\n\n\tfunction getGameScopeAdvancedOpts {\n\t\t# Path to write GameScope statistics to (--stats-path) -- File picker\n\t\t# '-T' option is also availsble, but we have to use '--stats-path' because of how 'getGameScopeArg' works\n\t\tGSSTATSPATHENABLE=\"0\"\n\t\tGSSTATSPATH=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--stats-path\" \"$GSSTATSPATH\" \"\" \"\" \"path\" )\"\n\t\tif [ -n \"$GSSTATSPATH\" ]; then  GSSTATSPATHENABLE=\"1\"; fi\n\n\t\t# Backend for GameScope to use (--backend) -- Dropdown\n\t\tGSBACKEND=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--backend\" \"$GSBACKEND\" \"\" \"auto\" \"cb\" )\"\n\n\t\t# Amount of time in milliseconds to wait before hiding the cursor (-C) -- Spinner\n\t\tGSHIDECURSORDELAY=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"-C\" \"$GSHIDECURSORDELAY\" \"\" \"0\" \"num\" )\"\n\n\t\t# Disables direct scan-out (--force-composition) -- Checkbox\n\t\tGSFORCECOMP=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--force-composition\" \"$GSFORCECOMP\" \"1\" \"0\" )\"\n\n\t\t# Draw debug hud (--debug-hud) -- Checkbox\n\t\tGSDEBUGHUD=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--debug-hud\" \"$GSDEBUGHUD\" \"1\" \"0\" )\"\n\n\t\t# Force HDR support flag (--hdr-debug-force-support) -- Checkbox\n\t\tGSFORCEHDRSUPPORT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-debug-force-support\" \"$GSFORCEHDRSUPPORT\" \"1\" \"0\" )\"\n\n\t\t# Force HDR output on display (--hdr-debug-force-output) -- Will look terrible if unsupported -- Checkbox\n\t\tGSFORCEHDROUTPUT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--hdr-debug-force-output\" \"$GSFORCEHDROUTPUT\" \"1\" \"0\" )\"\n\n\t\t# Prefer Vulkan device for compositing (--prefer-vk-device) -- Checkbox\n\t\tGSPREFERVKDEVICE=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--prefer-vk-device\" \"$GSPREFERVKDEVICE\" \"1\" \"0\" )\"\n\n\t\t# Expose Wayland (--expose-wayland) -- Checkbox\n\t\tGSWAYLAND=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--expose-wayland\" \"$GSWAYLAND\" \"1\" \"0\" )\"\n\n\t\t# Realtime Scheduling (--rt) -- Checkbox\n\t\tGSRT=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--rt\" \"$GSRT\" \"1\" \"0\" )\"\n\n\t\t# Headless (--headless) -- Checkbox\n\t\tGSHDLS=\"$( getGameScopeArg \"$GAMESCOPE_ARGS\" \"--headless\" \"$GSHDLS\" \"1\" \"0\" )\"\n\t}\n\n\t# Set storage vars\n\tUL=\"unlimited\"\n\tFSRS_STR=\"\\-\\-fsr\\-sharpness\"\n\tGSNORM=\"normal\"\n\tGSFOOROPTS=\"left!right!${GSNORM}!upsidedown\"\n\tGSFLTROPTS=\"$NON!linear!nearest!fsr!nis!pixel\"\n\tGSSCALEOPTS=\"$NON!auto!integer!fit!fill!stretch\"\n\tGSDEF=\"default\"\n\tGSHOVER=\"hover:0\"\n\tGSLEFTCLICK=\"leftclick:1\"\n\tGSRIGHTCLICK=\"rightclick:2\"\n\tGSMIDDLECLICK=\"middleclick:3\"\n\tGSPASSTHRU=\"passthrough:4\"\n\tGSTOUCHMODES=\"${GSDEF}!${GSHOVER}!${GSLEFTCLICK}!${GSRIGHTCLICK}!${GSMIDDLECLICK}!${GSPASSTHRU}\" # Corresponds to 0,1,2,3,4 respectively internally by GameScope -- Default is ingored and the flag is not passed to GameScope\n\tGSDRMMODES=\"${GSDEF}!cvt!fixed\"\n\tGSNEWFILTERMODE=0  # Whether gamescope uses -U/-Y/-n/-i (legacy) or -F/-S (new)\n\tGSBACKENDOPTS=\"auto!sdl!wayland!drm!headless!openvr\"\n\n\t# Get values for UI elements based on existing GameScope args\n\tgetGameScopeGeneralOpts\n\tgetGameScopeFilteringOpts\n\tgetGameScopeHDROpts\n\tgetGameScopeVROpts\n\tgetGameScopeEmbeddedOpts\n\tgetGameScopeAdvancedOpts\n}\n\nfunction GameScopeGui {\n\tif [ -n \"$1\" ]; then\n\t\tAID=\"$1\"\n\t\tsetAIDCfgs\n\tfi\n\n\tif [ -n \"$2\" ]; then\n\t\tGN=\"$2\"\n\t\tfixShowGnAid\n\tfi\n\n\t# Setup Yad UI stuff\n\tloadCfg \"$STLGAMECFG\"\n\texport CURWIKI=\"$PPW/GameScope\"\n\tTITLE=\"${PROGNAME}-${FUNCNAME[0]}\"\n\tpollWinRes \"$TITLE\"\n\tsetShowPic\n\tsetGameScopeVars  # Get values for UI elements below\n\n\t# GameScope Yad options form\n\tGASCOS=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --image \"$SHOWPIC\" --image-on-top --scroll --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t\t\t--title=\"$TITLE\" --separator=\"|\" \\\n\t\t\t--text=\"$(spanFont \"$(strFix \"$GUI_GASCOSET\" \"$SGNAID\")\" \"H\")\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSGENERALSET\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSINTRES!$DESC_GSINTRES ('GSINTRES')\":CBE \"$(cleanDropDown \"${GSINTRES//\\\"}\" \"$(printf \"%s\\n\" \"$(\"$XRANDR\" --current | grep \"[0-9]x\" | awk '{print $1}' | grep \"^[0-9]\" | tr '\\n' '!')\")\")\" \\\n\t\t\t--field=\"$GUI_GSSHWRES!$DESC_GSSHWRES ('GSSHWRES')\":CBE \"$(cleanDropDown \"${GSSHWRES//\\\"}\" \"$(printf \"%s\\n\" \"$(\"$XRANDR\" --current | grep \"[0-9]x\" | awk '{print $1}' | grep \"^[0-9]\" | tr '\\n' '!')\")\")\" \\\n\t\t\t--field=\"$GUI_GSFLR!$DESC_GSFLR ('GSFLR')\":CBE \"$(cleanDropDown \"${GSFLR//\\\"}\" \"30!60!90!120!$UL\")\" \\\n\t\t\t--field=\"$GUI_GSFLU!$DESC_GSFLU ('GSFLU')\":CBE \"$(cleanDropDown \"${GSFLU//\\\"}\" \"30!60!90!120!$UL\")\" \\\n\t\t\t--field=\"$GUI_USEGAMESCOPE!$DESC_USEGAMESCOPE ('USEGAMESCOPE')\":CHK \"${USEGAMESCOPE/#-/ -}\" \\\n\t\t\t--field=\"$GUI_GSFS!$DESC_GSFS ('GSFS')\":CHK \"$GSFS\" \\\n\t\t\t--field=\"$GUI_GSBW!$DESC_GSBW ('GSBW')\":CHK \"$GSBW\" \\\n\t\t\t--field=\"$GUI_GSSE!$DESC_GSSE ('GSSE')\":CHK \"$GSSE\" \\\n\t\t\t--field=\"$GUI_GSFWF!$DESC_GSFWF ('GSFWF')\":CHK \"$GSFWF\" \\\n\t\t\t--field=\"$GUI_GSFGC!$DESC_GSFGC ('GSFGC')\":CHK \"$GSFGC\" \\\n\t\t\t--field=\"$GUI_GSFGK!$DESC_GSFGK ('GSFGK')\":CHK \"$GSFGK\" \\\n\t\t\t--field=\"$GUI_GSFOOR!$DESC_GSFOOR ('GSFOOR')\":CB \"$(cleanDropDown \"${GSFOOR}\" \"${GSFOOROPTS}\")\" \\\n\t\t\t--field=\"$GUI_GSENABLECUSTCUR!$GUI_GSENABLECUSTCUR ('GSENABLECUSTCUR')\":CHK \"$GSENABLECUSTCUR\" \\\n\t\t\t--field=\"$GUI_GSCURSOR!$DESC_GSCURSOR ('GSCURSOR')\":FL \"${GSCURSOR/#-/ -}\" \\\n\t\t\t--field=\"$GUI_GSMOUSESENSITIVITY!$DESC_GSMOUSESENSITIVITY ('GSMOUSESENSITIVITY')\":NUM \"${GSMOUSESENSITIVITY/#-/ -}\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSFILTERINGSET\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSFLTR!$DESC_GSFLTR ('GSFLTR')\":CBE \"$(cleanDropDown \"${GSFLTR}\" \"${GSFLTROPTS}\")\" \\\n\t\t\t--field=\"$GUI_GSSCALE!$DESC_GSSCALE ('GSSCALE')\":CBE \"$(cleanDropDown \"${GSSCALE}\" \"${GSSCALEOPTS}\")\" \\\n\t\t\t--field=\"$GUI_GSFSRS!$DESC_GSFSRS ('GSFSRS')\":NUM \"${GSFSRS/#-/ -}:!0..20\" \\\n\t\t\t--field=\"$GUI_GSMSF!$DESC_GSMSF ('GSMSF')\":NUM \"$GSMSF\" \\\n\t\t\t--field=\"$GUI_GSRSEP!$DESC_GSRSEP ('GSRSEP')\":FL \"${GSRSEP//\\\"}\" \\\n\t\t\t--field=\"$GUI_GSRSTI!$DESC_GSRSTI ('GSRSTI')\":NUM \"${GSRSTI/#-/ -}\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSHDRSET\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSHDR!$DESC_GSHDR ('GSHDR')\":CHK \"$GSHDR\" \\\n\t\t\t--field=\"$GUI_GSHDRWGFS!$DESC_GSHDRWGFS ('GSHDRWGFS')\":CHK \"$GSHDRWGFS\" \\\n\t\t\t--field=\"$GUI_GSHDRSCNITS!$DESC_GSHDRSCNITS ('GSHDRSCNITS')\":NUM \"${GSHDRSCNITS/#-/ -}\" \\\n\t\t\t--field=\"$GUI_GSHDRITM!$DESC_GSHDRITM ('GSHDRITM')\":CHK \"$GSHDRITM\" \\\n\t\t\t--field=\"$GUI_GSHDRITMSDRNITS!$DESC_GSHDRITMSDRNITS ('GSHDRITMSDRNITS')\":NUM \"${GSHDRITMSDRNITS/#-/ -}\" \\\n\t\t\t--field=\"$GUI_GSHDRITMTGTNITS!$DESC_GSHDRITMTGTNITS ('GSHDRITMTGTNITS')\":NUM \"${GSHDRITMTGTNITS/#-/ -}\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSVRSET\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSVR!$DESC_GSVR ('GSVR')\":CHK \"$GSVR\" \\\n\t\t\t--field=\"$GUI_GSVREXNA!$DESC_GSVREXNA ('GSVREXNA')\" \"$GSVREXNA\" \\\n\t\t\t--field=\"$GUI_GSVRDEFNAM!$DESC_GSVRDEFNAM ('GSVRDEFNAM')\" \"$GSVRDEFNAM\" \\\n\t\t\t--field=\"$GUI_GSVROVERLAYKEY!$DESC_GSVROVERLAYKEY ('GSVROVERLAYKEY')\" \"$GSVROVERLAYKEY\" \\\n\t\t\t--field=\"$GUI_GSVRICONENABLE!$DESC_GSVRICONENABLE ('GSVRICONENABLE')\":CHK \"$GSVRICONENABLE\" \\\n\t\t\t--field=\"$GUI_GSVRICON!$DESC_GSVRICON ('GSVRICON')\":FL \"${GSVRICON//\\\"}\" \\\n\t\t\t--field=\"$GUI_GSVRSHOIMM!$DESC_GSVRSHOIMM ('GSVRSHOIMM')\":CHK \"$GSVRSHOIMM\" \\\n\t\t\t--field=\"$GUI_GSVRCONTROLBAR!$DESC_GSVRCONTROLBAR ('GSVRCONTROLBAR')\":CHK \"$GSVRCONTROLBAR\" \\\n\t\t\t--field=\"$GUI_GSVRCONTROLBARKEYBOARD!$DESC_GSVRCONTROLBARKEYBOARD ('GSVRCONTROLBARKEYBOARD')\":CHK \"$GSVRCONTROLBARKEYBOARD\" \\\n\t\t\t--field=\"$GUI_GSVRCONTROLBARCLOSE!$DESC_GSVRCONTROLBARCLOSE ('GSVRCONTROLBARCLOSE')\":CHK \"$GSVRCONTROLBARCLOSE\" \\\n\t\t\t--field=\"$GUI_GSVRSCROLLSSPEED!$DESC_GSVRSCROLLSSPEED ('GSVRSCROLLSSPEED')\":NUM \"$GSVRSCROLLSSPEED\" \\\n\t\t\t--field=\"$GUI_GSVRMODAL!$DESC_GSVRMODAL ('GSVRMODAL')\":CHK \"$GSVRMODAL\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSEMBEDDEDSET\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSDEFTOUCHMODE!$DESC_GSDEFTOUCHMODE ('GSDEFTOUCHMODE')\":CB \"$(cleanDropDown \"${GSDEFTOUCHMODE}\" \"${GSTOUCHMODES}\")\" \\\n\t\t\t--field=\"$GUI_GSIMMEDIATEFLIPS!$DESC_GSIMMEDIATEFLIPS ('GSIMMEDIATEFLIPS')\":CHK \"$GSIMMEDIATEFLIPS\" \\\n\t\t\t--field=\"$GUI_GSADAPTIVESYNC!$DESC_GSADAPTIVESYNC ('GSADAPTIVESYNC')\":CHK \"$GSADAPTIVESYNC\" \\\n\t\t\t--field=\"$GUI_GSPREFOUT!$DESC_GSPREFOUT ('GSPREFOUT')\" \"\" \\\n\t\t\t--field=\"$GUI_GSDRMMODE!$DESC_GSDRMMODE ('GSDRMMODE')\":CB \"$(cleanDropDown \"${GSDRMMODE}\" \"${GSDRMMODES}\")\" \\\n\t\t\t--field=\"$(spanFont \"$GUI_GSADVOPTIONS\" \"H\")\":LBL \"SKIP\" \\\n\t\t\t--field=\"$GUI_GSBACKEND!$DESC_GSBACKEND ('GSBACKEND')\":CBE \"$(cleanDropDown \"${GSBACKEND}\" \"${GSBACKENDOPTS}\")\" \\\n\t\t\t--field=\"$GUI_GSSTATSPATHENABLE!$DESC_GSSTATSPATHENABLE ('GSSTATSPATHENABLE')\":CHK \"$GSSTATSPATHENABLE\" \\\n\t\t\t--field=\"$GUI_GSSTATSPATH!$DESC_GSSTATSPATH ('GSSTATSPATH')\":DIR \"${GSSTATSPATH//\\\"}\" \\\n\t\t\t--field=\"$GUI_GSHIDECURSORDELAY!$DESC_GSHIDECURSORDELAY ('GSHIDECURSORDELAY')\":NUM \"${GSHIDECURSORDELAY/#-/ -}\" \\\n\t\t\t--field=\"$GUI_GSFORCECOMP!$DESC_GSFORCECOMP ('GSFORCECOMP')\":CHK \"$GSFORCECOMP\" \\\n\t\t\t--field=\"$GUI_GSDEBUGHUD!$DESC_GSDEBUGHUD ('GSDEBUGHUD')\":CHK \"$GSDEBUGHUD\" \\\n\t\t\t--field=\"$GUI_GSFORCEHDRSUPPORT!$DESC_GSFORCEHDRSUPPORT ('GSFORCEHDRSUPPORT')\":CHK \"$GSFORCEHDRSUPPORT\" \\\n\t\t\t--field=\"$GUI_GSFORCEHDROUTPUT!$DESC_GSFORCEHDROUTPUT ('GSFORCEHDROUTPUT')\":CHK \"$GSFORCEHDROUTPUT\" \\\n\t\t\t--field=\"$GUI_GSPREFERVKDEVICE!$DESC_GSPREFERVKDEVICE ('GSPREFERVKDEVICE')\":CHK \"$GSPREFERVKDEVICE\" \\\n\t\t\t--field=\"$GUI_GSWAYLAND!$DESC_GSWAYLAND ('GSWAYLAND')\":CHK \"$GSWAYLAND\" \\\n\t\t\t--field=\"$GUI_GSRT!$DESC_GSRT ('GSRT')\":CHK \"$GSRT\" \\\n\t\t\t--field=\"$GUI_GSHDLS!$DESC_GSHDLS ('GSHDLS')\":CHK \"$GSHDLS\" \\\n\t\t\t--field=\"$GUI_USEGAMESCOPEWSI!$DESC_USEGAMESCOPEWSI ('USEGAMESCOPEWSI')\":CHK \"$USEGAMESCOPEWSI\" \\\n\t\t\t--button=\"$BUT_CAN:0\" --button=\"$BUT_DGM:2\" --button=\"$BUT_DONE:4\" \"$GEOM\"\n\t\t\t)\"\n\t\t\tcase $? in\n\t\t\t\t0)\t{\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_CAN' - Exiting\"\n\t\t\t\t\t}\n\t\t\t\t;;\n\t\t\t\t2)  {\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_DGM' - Resetting GameScope options to default\"\n\t\t\t\t\t\tGameScopeReset\n\t\t\t\t\t\tGameScopeGui\n\t\t\t\t    }\n\t\t\t\t;;\n\t\t\t\t4)\t{\n\t\t\t\t\t\t## TODO This section could still be simplified a bit further probably\n\n\t\t\t\t\t\t# Get selected GameScope options\n\t\t\t\t\t\tmapfile -d \"|\" -t -O \"${#GSARR[@]}\" GSARR < <(printf '%s' \"$GASCOS\")\n\n\t\t\t\t\t\t# Use \"relative positioning\" type system by calculating the position/index of each heading, and using this to get the values at a given index in the GSARR array\n\t\t\t\t\t\t# for example GSFILTERHEADING=16, then the first element will be GSFILTERHEADING + 1\n\t\t\t\t\t\t# This is ${GSARR[17]}, but if we were to add another option to the General settings, we would only need to bump GSGENERALOPTSLEN to 16\n\t\t\t\t\t\tGSGENERALHEADING=0  # Index in GSARR of General heading label\n\t\t\t\t\t\tGSGENERALOPTSLEN=15\n\n\t\t\t\t\t\tGSFILTERINGHEADING=$(( GSGENERALHEADING +  GSGENERALOPTSLEN + 1 )) # Index in GSARR of Filtering heading label\n\t\t\t\t\t\tGSFILTERINGOPTSLEN=6\n\n\t\t\t\t\t\tGSHDRHEADING=$(( GSFILTERINGHEADING + GSFILTERINGOPTSLEN + 1 ))\n\t\t\t\t\t\tGSHDROPTSLEN=6\n\n\t\t\t\t\t\tGSVRHEADING=$(( GSHDRHEADING + GSHDROPTSLEN + 1 ))\n\t\t\t\t\t\tGSVROPTSLEN=12\n\n\t\t\t\t\t\tGSEMBEDDEDHEADING=$(( GSVRHEADING + GSVROPTSLEN + 1 ))\n\t\t\t\t\t\tGSEMBEDDEDOPTSLEN=5\n\n\t\t\t\t\t\tGSADVANCEDHEADING=$(( GSEMBEDDEDHEADING + GSEMBEDDEDOPTSLEN + 1 ))\n\t\t\t\t\t\t# GSADVANCEDOPTSLEN=12  # Commented because Shellcheck gets angry about this being unused, but it is a good reference\n\n\t\t\t\t\t\t# GSARR[0] is the General heading\n\t\t\t\t\t\tGSINTRES=\"${GSARR[$GSGENERALHEADING + 1]}\"\n\t\t\t\t\t\tGSSHWRES=\"${GSARR[$GSGENERALHEADING + 2]}\"\n\t\t\t\t\t\tGSFLR=\"${GSARR[$GSGENERALHEADING + 3]}\"\n\t\t\t\t\t\tGSFLU=\"${GSARR[$GSGENERALHEADING + 4]}\"\n\t\t\t\t\t\tUSEGAMESCOPE=\"${GSARR[$GSGENERALHEADING + 5]}\"\n\t\t\t\t\t\tGSFS=\"${GSARR[$GSGENERALHEADING + 6]}\"\n\t\t\t\t\t\tGSBW=\"${GSARR[$GSGENERALHEADING + 7]}\"\n\t\t\t\t\t\tGSSE=\"${GSARR[$GSGENERALHEADING + 8]}\"\n\t\t\t\t\t\tGSFWF=\"${GSARR[$GSGENERALHEADING + 9]}\"\n\t\t\t\t\t\tGSFGC=\"${GSARR[$GSGENERALHEADING + 10]}\"\n\t\t\t\t\t\tGSFGK=\"${GSARR[$GSGENERALHEADING + 11]}\"\n\t\t\t\t\t\tGSFOOR=\"${GSARR[$GSGENERALHEADING + 12]}\"\n\t\t\t\t\t\tGSENABLECUSTCUR=\"${GSARR[$GSGENERALHEADING + 13]}\"\n\t\t\t\t\t\tGSCURSOR=\"${GSARR[$GSGENERALHEADING + 14]}\"\n\t\t\t\t\t\tGSMOUSESENSITIVITY=\"${GSARR[$GSGENERALHEADING + 15]}\"\n\t\t\t\t\t\t# GSARR[16] is the Filtering heading\n\t\t\t\t\t\tGSFLTR=\"${GSARR[$GSFILTERINGHEADING + 1]}\"\n\t\t\t\t\t\tGSSCALE=\"${GSARR[$GSFILTERINGHEADING + 2]}\"\n\t\t\t\t\t\tGSFSRS=\"${GSARR[$GSFILTERINGHEADING + 3]}\"\n\t\t\t\t\t\tGSMSF=\"${GSARR[$GSFILTERINGHEADING + 4]}\"\n\t\t\t\t\t\tGSRSEP=\"${GSARR[$GSFILTERINGHEADING + 5]}\"\n\t\t\t\t\t\tGSRSTI=\"${GSARR[$GSFILTERINGHEADING + 6]}\"\n\t\t\t\t\t\t# GSARR[23] is the HDR heading\n\t\t\t\t\t\tGSHDR=\"${GSARR[$GSHDRHEADING + 1]}\"\n\t\t\t\t\t\tGSHDRWGFS=\"${GSARR[$GSHDRHEADING + 2]}\"\n\t\t\t\t\t\tGSHDRSCNITS=\"${GSARR[$GSHDRHEADING + 3]}\"\n\t\t\t\t\t\tGSHDRITM=\"${GSARR[$GSHDRHEADING + 4]}\"\n\t\t\t\t\t\tGSHDRITMSDRNITS=\"${GSARR[$GSHDRHEADING + 5]}\"\n\t\t\t\t\t\tGSHDRITMTGTNITS=\"${GSARR[$GSHDRHEADING + 6]}\"\n\t\t\t\t\t\t# GSARR[30] is the VR heading\n\t\t\t\t\t\tGSVR=\"${GSARR[$GSVRHEADING + 1]}\"\n\t\t\t\t\t\tGSVREXNA=\"${GSARR[$GSVRHEADING + 2]}\"\n\t\t\t\t\t\tGSVRDEFNAM=\"${GSARR[$GSVRHEADING + 3]}\"\n\t\t\t\t\t\tGSVROVERLAYKEY=\"${GSARR[$GSVRHEADING + 4]}\"\n\t\t\t\t\t\tGSVRICONENABLE=\"${GSARR[$GSVRHEADING + 5]}\"\n\t\t\t\t\t\tGSVRICON=\"${GSARR[$GSVRHEADING + 6]}\"\n\t\t\t\t\t\tGSVRSHOIMM=\"${GSARR[$GSVRHEADING + 7]}\"\n\t\t\t\t\t\tGSVRCONTROLBAR=\"${GSARR[$GSVRHEADING + 8]}\"\n\t\t\t\t\t\tGSVRCONTROLBARKEYBOARD=\"${GSARR[$GSVRHEADING + 9]}\"\n\t\t\t\t\t\tGSVRCONTROLBARCLOSE=\"${GSARR[$GSVRHEADING + 10]}\"\n\t\t\t\t\t\tGSVRSCROLLSSPEED=\"${GSARR[$GSVRHEADING + 11]}\"\n\t\t\t\t\t\tGSVRMODAL=\"${GSARR[$GSVRHEADING + 12]}\"\n\t\t\t\t\t\t# GSARR[43] is the Embedded heading\n\t\t\t\t\t\tGSDEFTOUCHMODE=\"${GSARR[$GSEMBEDDEDHEADING + 1]}\"\n\t\t\t\t\t\tGSIMMEDIATEFLIPS=\"${GSARR[$GSEMBEDDEDHEADING + 2]}\"\n\t\t\t\t\t\tGSADAPTIVESYNC=\"${GSARR[$GSEMBEDDEDHEADING + 3]}\"\n\t\t\t\t\t\tGSPREFOUT=\"${GSARR[$GSEMBEDDEDHEADING + 4]}\"\n\t\t\t\t\t\tGSDRMMODE=\"${GSARR[$GSEMBEDDEDHEADING + 5]}\"\n\t\t\t\t\t\t# GSARR[49] is the Advanced heading\n\t\t\t\t\t\tGSBACKEND=\"${GSARR[$GSADVANCEDHEADING + 1]}\"\n\t\t\t\t\t\tGSSTATSPATHENABLE=\"${GSARR[$GSADVANCEDHEADING + 2]}\"\n\t\t\t\t\t\tGSSTATSPATH=\"${GSARR[$GSADVANCEDHEADING + 3]}\"\n\t\t\t\t\t\tGSHIDECURSORDELAY=\"${GSARR[$GSADVANCEDHEADING + 4]}\"\n\t\t\t\t\t\tGSFORCECOMP=\"${GSARR[$GSADVANCEDHEADING + 5]}\"\n\t\t\t\t\t\tGSDEBUGHUD=\"${GSARR[$GSADVANCEDHEADING + 6]}\"\n\t\t\t\t\t\tGSFORCEHDRSUPPORT=\"${GSARR[$GSADVANCEDHEADING + 7]}\"\n\t\t\t\t\t\tGSFORCEHDROUTPUT=\"${GSARR[$GSADVANCEDHEADING + 8]}\"\n\t\t\t\t\t\tGSPREFERVKDEVICE=\"${GSARR[$GSADVANCEDHEADING + 9]}\"\n\t\t\t\t\t\tGSWAYLAND=\"${GSARR[$GSADVANCEDHEADING + 10]}\"\n\t\t\t\t\t\tGSRT=\"${GSARR[$GSADVANCEDHEADING + 11]}\"\n\t\t\t\t\t\tGSHDLS=\"${GSARR[$GSADVANCEDHEADING + 12]}\"\n\t\t\t\t\t\tUSEGAMESCOPEWSI=\"${GSARR[$GSADVANCEDHEADING + 13]}\"\n\n\t\t\t\t\t\t# Build the GameScope arguments string\n\t\t\t\t\t\tunset GAMESCOPE_ARGS\n\t\t\t\t\t\tGAMESCOPE_ARGS=\"\"\n\t\t\t\t\t\t\n\t\t\t\t\t\t# Internal width/height (-w, -h) broken out from string like '1280x720'\n\t\t\t\t\t\t# NOTE: In future if `GSINTW` is blank but `GSINTH` is set, we could calculate a corresponding 16:9 width like GameScope does\n\t\t\t\t\t\tGSINTW1=\"${GSINTRES%x*}\"\n\t\t\t\t\t\tGSINTW=\"${GSINTW1%%-*}\"\n\t\t\t\t\t\tGSINTH1=\"${GSINTRES#*x}\"\n\t\t\t\t\t\tGSINTH=\"${GSINTH1%%-*}\"\n\n\t\t\t\t\t\t# Show width/height (-W, -H) broken out from string like '1280x720'\n\t\t\t\t\t\t# NOTE: In future if `GSINTW` is blank but `GSINTH` is set, we could calculate a corresponding 16:9 width like GameScope does\n\t\t\t\t\t\tGSSHWW1=\"${GSSHWRES%x*}\"\n\t\t\t\t\t\tGSSHWW=\"${GSSHWW1%%-*}\"\n\t\t\t\t\t\tGSSHWH1=\"${GSSHWRES#*x}\"\n\t\t\t\t\t\tGSSHWH=\"${GSSHWH1%%-*}\"\n\n\t\t\t\t\t\t### GENERAL OPTIONS ###\n\t\t\t\t\t\tif [ -n \"$GSINTW\" ] && [ -n \"$GSINTH\" ]                         ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -w ${GSINTW} -h ${GSINTH}\"; fi\n\t\t\t\t\t\tif [ -n \"$GSSHWW\" ] && [ -n \"$GSSHWH\" ]                         ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -W ${GSSHWW} -H ${GSSHWH}\"; fi\n\t\t\t\t\t\tif [ \"$GSFLR\" -eq \"$GSFLR\" ] 2>/dev/null                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -r ${GSFLR}\"; fi\n\t\t\t\t\t\tif [ \"$GSFLU\" -eq \"$GSFLU\" ] 2>/dev/null                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -o ${GSFLU}\"; fi\n\t\t\t\t\t\tif [ \"$GSFS\" == \"TRUE\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -f\"; fi\n\t\t\t\t\t\tif [ \"$GSBW\" == \"TRUE\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -b\"; fi\n\t\t\t\t\t\tif [ \"$GSSE\" == \"TRUE\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -e\"; fi\n\t\t\t\t\t\tif [ \"$GSFWF\" == \"TRUE\" ]                                       ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --force-windows-fullscreen\"; fi\n\t\t\t\t\t\tif [ \"$GSFGC\" == \"TRUE\" ]                                       ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --force-grab-cursor\"; fi\n\t\t\t\t\t\tif [ \"$GSFGK\" == \"TRUE\" ]                                       ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -g\"; fi\n\t\t\t\t\t\tif [ -f \"$GSCURSOR\" ] && [ \"$GSENABLECUSTCUR\" == \"TRUE\" ]       ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --cursor '${GSCURSOR}'\"; fi\n\t\t\t\t\t\tif [ \"$GSMOUSESENSITIVITY\" -gt 1 ]\t\t\t\t\t\t\t; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -s ${GSMOUSESENSITIVITY}\"; fi\n\t\t\t\t\t\tif [ ! \"$GSFOOR\" == \"$GSNORM\" ] && [ -n \"$GSFOOR\" ]             ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --force-orientation ${GSFOOR}\"; fi  # Only force orientation if option other than default 'normal' is selected\n\t\t\t\t\t\t### GENERAL OPTIONS END ###\n\n\t\t\t\t\t\t### FILTERING OPTIONS ###\n\t\t\t\t\t\t# Used to control whether to apply --sharpness since there are various conditions where\n\t\t\t\t\t\t# this could be true (new -F option but ONLY if we pass fsr/nis, or legacy -U/-S option)\n\t\t\t\t\t\tGSAPPLYSHARPNESS=0\n\t\t\t\t\t\tif [ ! \"$GSFLTR\" == \"$NON\" ] && [ -n \"$GSFLTR\" ]; then\n\t\t\t\t\t\t\t# Pass -F if available for current GameScope version, otherwise pass legacy switches\n\t\t\t\t\t\t\tif [ \"$GSNEWFILTERMODE\" -eq 1 ]; then\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -F ${GSFLTR}\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t# Only manages -U/-Y/-n, because those were the only filtering switches available\n\t\t\t\t\t\t\t\t# we don't have any other to account for with older GameScope versions -- If a different\n\t\t\t\t\t\t\t\t# option is selected for GSFLTR, then we just don't pass any flags\n\t\t\t\t\t\t\t\t#\n\t\t\t\t\t\t\t\t# Even though with legacy options, all 3 of these could be passed, the -F flag won't support this and neither\n\t\t\t\t\t\t\t\t# will the UI, so we only support selecting 1\n\t\t\t\t\t\t\t\tif [ \"$GSFLTR\" == \"nearest\" ]; then\n\t\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -n\"\n\t\t\t\t\t\t\t\telif [ \"$GSFLTR\" == \"fsr\" ]; then\n\t\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -U\"\n\t\t\t\t\t\t\t\telif [ \"$GSFLTR\" == \"nis\" ]; then\n\t\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -Y\"\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\tif [ \"$GSFLTR\" == \"fsr\" ] || [ \"$GSFLTR\" == \"nis\" ]; then  # CASE SENSITIVE\n\t\t\t\t\t\t\t\tGSAPPLYSHARPNESS=1\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\n\t\t\t\t\t\tif [ ! \"$GSSCALE\" == \"$NON\" ] && [ -n \"$GSSCALE\" ]; then\n\t\t\t\t\t\t\tif [ \"$GSNEWFILTERMODE\" -eq 1 ]; then\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -S ${GSSCALE}\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t# This is the only legacy scale switch, -i\n\t\t\t\t\t\t\t\tif [ \"$GSSCALE\" == \"integer\" ]; then\n\t\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -i\"\n\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\n\t\t\t\t\t\tif [ ! \"$GSMSF\" == \"0\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -m ${GSMSF}\"; fi # Ignore Max Scale Factor if 0\n\t\t\t\t\t\tif [ \"$GSFSRS\" -eq \"$GSFSRS\" ] 2>/dev/null && [ \"$GSAPPLYSHARPNESS\" -eq 1 ]; then\n\t\t\t\t\t\t\t# Sharpness Value should only be passed if FSR or NIS is enabled\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Adding sharpness parameter to the gamescope arguments:\"\n\t\t\t\t\t\t\tif grep -q \"$FSRS_STR\" <<< \"$(\"$(command -v \"$GAMESCOPE\")\" --help 2>&1)\"; then\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - using '--fsr-sharpness ${GSFSRS}'\"\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --fsr-sharpness ${GSFSRS}\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - using '--sharpness ${GSFSRS}'\"\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --sharpness ${GSFSRS}\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\n\t\t\t\t\t\tif [ -f \"$GSRSEP\" ]                                        \t\t; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --reshade-effect '${GSRSEP}'\"; fi\n\t\t\t\t\t\tif [ ! \"$GSRSTI\" == \"0\" ]                              \t\t\t; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --reshade-technique-idx ${GSRSTI}\"; fi\n\t\t\t\t\t\t## FILTERING OPTIONS END ###\n\n\t\t\t\t\t\t### HDR OPTIONS ###\n\t\t\t\t\t\t# Possible to check if any HDR displays available and warn if not?\n\t\t\t\t\t\tif [ \"$GSHDR\" == \"TRUE\" ]; then\n\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-enabled\";\n\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - GameScope HDR enabled, forcing DXVK_HDR=1\"\n\t\t\t\t\t\t\texport DXVK_HDR=1\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ \"$GSHDRWGFS\" == \"TRUE\" ]; then\n\t\t\t\t\t\t\t# Don't enable GSHDRWGFS if GSHDR is not enabled first\n\t\t\t\t\t\t\tif [ \"$GSHDR\" == \"TRUE\" ]; then\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-wide-gammut-for-sdr\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - GSHDRWGFS (--hdr-wide-gammut-for-sdr) option for GameScope enabled but HDR was not enabled - Ignoring as this option would have no effect\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ ! \"$GSHDRSCNITS\" == \"400\" ]; then\n\t\t\t\t\t\t\t# Only pass value if nits != 400 && HDR enabled (400 is the default)\n\t\t\t\t\t\t\tif [ \"$GSHDR\" == \"TRUE\" ] && [ \"$GSHDRWGFS\" == \"TRUE\" ]; then\n\t\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-sdr-content-nits ${GSHDRSCNITS}\"\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - GSHDRSCNITS (--hdr-sdr-content-nits) option for GameScope was set but HDR and SDR were not enabled - Ignoring as this option would have no effect\"\n\t\t\t\t\t\t\tfi\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - GSHDRSCNITS (--hdr-sdr-content-nits) option for GameScope was left at default 203 - GameScope should use this anyway - Ignoring as this option would have no effect\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ \"$GSHDRITM\" == \"TRUE\" ]                                    ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-itm-enable\"; fi\n\t\t\t\t\t\tif [ ! \"$GSHDRITMSDRNITS\" == \"0\" ]                              ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-itm-sdr-nits ${GSHDRITMSDRNITS}\"; fi\n\t\t\t\t\t\tif [ ! \"$GSHDRITMTGTNITS\" == \"0\" ]                              ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-itm-target-nits ${GSHDRITMTGTNITS}\"; fi\n\t\t\t\t\t\t### HDR OPTIONS END ###\n\n\t\t\t\t\t\t### VR OPTIONS ###\n\t\t\t\t\t\tif [ \"$GSVR\" == \"TRUE\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --openvr\"; fi\n\t\t\t\t\t\tif [ \"${#GSVREXNA}\" -gt 0 ]                                     ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-explicit-name '${GSVREXNA}'\"; fi  # Don't set explicit name if it's blank\n\t\t\t\t\t\tif [ \"${#GSVRDEFNAM}\" -gt 0 ]                                   ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-default-name '${GSVRDEFNAM}'\"; fi  # Don't set default name if it's blank\n\t\t\t\t\t\tif [ \"${#GSVROVERLAYKEY}\" -gt 0 ] \t\t\t\t\t\t\t\t; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-key '${GSVROVERLAYKEY}'\"; fi  # Don't set overlay key if it's blank\n\t\t\t\t\t\tif [ -f \"$GSVRICON\" ] && [ \"$GSVRICONENABLE\" == \"TRUE\" ]        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-icon '${GSVRICON}'\"; fi\n\t\t\t\t\t\tif [ \"$GSVRSHOIMM\" == \"TRUE\" ]                                  ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-show-immediately\"; fi\n\t\t\t\t\t\tif [ \"$GSVRCONTROLBAR\" == \"TRUE\" ]                              ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-enable-control-bar\"; fi\n\t\t\t\t\t\tif [ \"$GSVRCONTROLBARKEYBOARD\" == \"TRUE\" ]                      ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-enable-control-bar-keyboard\"; fi\n\t\t\t\t\t\tif [ \"$GSVRCONTROLBARCLOSE\" == \"TRUE\" ]                         ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-enable-control-bar-close\"; fi\n\t\t\t\t\t\tif [ \"$GSVRSCROLLSSPEED\" -gt 8 ]                                ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-scrolls-speed ${GSVRSCROLLSSPEED}\"; fi  # 8.0 is the default value\n\t\t\t\t\t\tif [ \"$GSVRMODAL\" == \"TRUE\" ]                                   ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --vr-overlay-modal\"; fi\n\t\t\t\t\t\t### VR OPTIONS END\n\n\t\t\t\t\t\t### EMBEDDED OPTIONS ###\n\t\t\t\t\t\t# Don't pass default touch mode option if we left at default\n\t\t\t\t\t\tif [ ! \"${GSDEFTOUCHMODE}\" == \"${GSDEF}\" ] && [ -n \"${GSDEFTOUCHMODE}\" ]; then\n\t\t\t\t\t\t\t# Get the corresponding number that should be passed to GameScope from the number in the dropdown string, e.g. gets \"0\" from \"hover:0\"\n\t\t\t\t\t\t\tSELECTEDTOUCHMODE=\"$( echo \"$GSDEFTOUCHMODE\" | cut -d \":\" -f 2 )\"\n\t\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --default-touch-mode ${SELECTEDTOUCHMODE}\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ \"$GSIMMEDIATEFLIPS\" == \"TRUE\" ]                            ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --immediate-flips\"; fi\n\t\t\t\t\t\tif [ \"$GSADAPTIVESYNC\" == \"TRUE\" ]                              ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --adaptive-sync\"; fi\n\t\t\t\t\t\tif [ \"${#GSPREFOUT}\" -gt 0 ]                                    ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -O ${GSPREFOUT}\"; fi  # Don't pass preferred output(s) if the textbox is blank\n\t\t\t\t\t\t# EMBEDDED OPTIONS END\n\n\t\t\t\t\t\t## ADVANCED OPTIONS ###\n\t\t\t\t\t\tif [ ! \"$GSBACKEND\" == \"auto\" ]                                 ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --backend ${GSBACKEND}\"; fi  # Don't pass GameScope Backend if left at \"auto\"; GameScope defaults to this anyway\n\t\t\t\t\t\tif [ ! \"$GSDRMMODE\" == \"${GSDEF}\" ] && [ -n \"$GSDRMMODE\" ]      ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --generate-drm-mode ${GSDRMMODE}\"; fi  # Don't pass DRM mode if \"default\"\n\t\t\t\t\t\tif [ -d \"$GSSTATSPATH\" ] && [ \"$GSSTATSPATHENABLE\" == \"TRUE\" ]  ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --stats-path '${GSSTATSPATH}'\"; fi\n\t\t\t\t\t\tif [ ! \"$GSHIDECURSORDELAY\" == \"0\" ]                            ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} -C ${GSHIDECURSORDELAY}\"; fi  # Ignore cursor delay if it's 0\n\t\t\t\t\t\tif [ \"$GSFORCECOMP\" == \"TRUE\" ]                                 ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --force-composition\"; fi\n\t\t\t\t\t\tif [ \"$GSDEBUGHUD\" == \"TRUE\" ]                                  ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --debug-hud\"; fi\n\t\t\t\t\t\tif [ \"$GSFORCEHDRSUPPORT\" == \"TRUE\" ]                           ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-debug-force-support\"; fi\n\t\t\t\t\t\tif [ \"$GSFORCEHDROUTPUT\" == \"TRUE\" ]                            ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --hdr-debug-force-output\"; fi\n\t\t\t\t\t\tif [ \"$GSPREFERVKDEVICE\" == \"TRUE\" ]                            ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --prefer-vk-device\"; fi\n\t\t\t\t\t\tif [ \"$GSWAYLAND\" == \"TRUE\" ]                                   ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --expose-wayland\"; fi\n\t\t\t\t\t\tif [ \"$GSRT\" == \"TRUE\" ]                                        ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --rt\"; fi\n\t\t\t\t\t\tif [ \"$GSHDLS\" == \"TRUE\" ]                                      ; then  GAMESCOPE_ARGS=\"${GAMESCOPE_ARGS} --headless\"; fi\n\t\t\t\t\t\t### ADVANCED OPTIONS END ###\n\n\t\t\t\t\t\t# Remove trailing whitespace and append '--'\n\t\t\t\t\t\tGAMESCOPE_ARGS=\"${GAMESCOPE_ARGS# } --\"\n\n\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Saving configured GAMESCOPE_ARGS '$GAMESCOPE_ARGS' into '$STLGAMECFG'\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"GAMESCOPE_ARGS\" \"$GAMESCOPE_ARGS\" \"$STLGAMECFG\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"USEGAMESCOPE\" \"$USEGAMESCOPE\" \"$STLGAMECFG\"\n\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\tupdateConfigEntry \"USEGAMESCOPEWSI\" \"$USEGAMESCOPEWSI\" \"$STLGAMECFG\"  # GAMESCOPE_WSI_ENABLE=1 option, since its an env var and not a gamescope flag we save it to game config\n\t\t\t\t\t}\n\t\t\t\t;;\n\t\t\tesac\n}\n\nfunction GameScopeReset {\n\t# This resets the options on the GUI to blank, but when the UI is re-loaded the options are set again to their menu defaults\n\t# once the \"Done\" button is pressed e.g. the resolutions default to 1280x720\n\tGAMESCOPE_ARGS=\"$NON\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"GAMESCOPE_ARGS\" \"$GAMESCOPE_ARGS\" \"$STLGAMECFG\"\n\tsetGameScopeVars  # This needs to be called to fix empty dropdown values for some reason (even though it should get called from GameScopeGui /shrug)\n}\n\nfunction StandaloneProtonGame {\n\tfunction SapRun {\n\t\tif [ \"$SAPRUN\" == \"TRUE\" ]; then\n\t\t\tRUNSAPPROTON=\"$(getProtPathFromCSV \"$SAPPROTON\")\"\n\t\t\tif [ ! -f \"$RUNSAPPROTON\" ]; then\n\t\t\t\tRUNSAPPROTON=\"$(fixProtonVersionMismatch \"SAPPROTON\" \"$STLGAMECFG\" X)\"\n\t\t\tfi\n\n\t\t\tif [ ! -f \"$RUNSAPPROTON\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No executable for selected Proton '$SAPPROTON' found\"\n\t\t\telif [ ! -f \"$SAPEXE\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No executable found\"\n\t\t\telif [ ! -d \"$SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\twritelog \"SKIP\" \"${FUNCNAME[0]} - No $CODA dir found\"\n\t\t\telse\n\t\t\t\tif [ -z \"$SAPARGS\" ]; then\n\t\t\t\t\tRUNSAPARGS=\"\"\n\t\t\t\telse\n\t\t\t\t\tmapfile -d \" \" -t -O \"${#RUNSAPARGS[@]}\" RUNSAPARGS < <(printf '%s' \"$SAPARGS\")\n\t\t\t\tfi\n\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Starting '$SAPEXE' with '$SAPPROTON' with STEAM_COMPAT_DATA_PATH '$SAP_COMPAT_DATA_PATH'\"\n\t\t\t\tSTEAM_COMPAT_DATA_PATH=\"$SAP_COMPAT_DATA_PATH\" \"$RUNSAPPROTON\" run \"$SAPEXE\" \"${RUNSAPARGS[@]}\"\n\t\t\tfi\n\t\tfi\n\t}\n\n\tfunction SapGui {\n\t\texport CURWIKI=\"$PPW/Standalone-Proton\"\n\t\tTITLE=\"${PROGNAME}-StandaloneProtonGame\"\n\t\tpollWinRes \"$TITLE\"\n\n\t\tSAPGAMELIST=\"$(find \"$STLGSAPD\" -type f -exec basename {} .conf \\; | tr '\\n' '!')\"\n\n\t\tif [ -z \"$SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\tSAP_COMPAT_DATA_PATH=\"$STLGSACD/${PROGNAME,,}-$((10000 + RANDOM % 10000))\"\n\t\t\tmkProjDir \"$SAP_COMPAT_DATA_PATH\"\n\t\t\tIN_SAP_COMPAT_DATA_PATH=\"$SAP_COMPAT_DATA_PATH\"\n\t\tfi\n\n\t\tPROTPARTS=\"$(\"$YAD\" --f1-action=\"$F1ACTION\" --window-icon=\"$STLICON\" --form --center --on-top \"$WINDECO\" \\\n\t\t--title=\"$TITLE\" \\\n\t\t--text=\"$(spanFont \"$GUI_SAPTEXT\" \"H\")\" \\\n\t\t--field=\" \":LBL \" \" --separator=\"|\" \\\n\t\t--field=\"$GUI_SAPGAME!$DESC_SAPGAME\":CBE \"$(cleanDropDown \"${SAPGAME}\" \"$SAPGAMELIST\")\" \\\n\t\t--field=\"$GUI_SAPPROTON!$DESC_SAPPROTON\":CB \"$(cleanDropDown \"${SAPPROTON//\\\"}\" \"$PROTYADLIST\")\" \\\n\t\t--field=\"$GUI_SAP_COMPAT_DATA_PATH!$DESC_SAP_COMPAT_DATA_PATH\":DIR \"${SAP_COMPAT_DATA_PATH//\\\"}\" \\\n\t\t--field=\"$GUI_SAPEXE!$DESC_SAPEXE\":FL \"${SAPEXE//\\\"}\" \\\n\t\t--field=\"$GUI_SAPARGS!$DESC_SAPARGS\" \"${SAPARGS//\\\"}\"\\\n\t\t--field=\"$GUI_SAPRUN!$DESC_SAPRUN\":CHK \"$SAPRUN\" \\\n\t\t--button=\"$BUT_CAN:0\" --button=\"$BUT_LOAD:2\" --button=\"$BUT_RUN:4\" \"$GEOM\"\n\t\t)\"\n\t\tcase $? in\n\t\t\t0)\t{\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_CAN' - Exiting\"\n\t\t\t\t\tif [ -d \"$IN_SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\t\t\trmdir \"$IN_SAP_COMPAT_DATA_PATH\"\n\t\t\t\t\tfi\n\t\t\t\t}\n\t\t\t;;\n\t\t\t2)\t{\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_LOAD'\"\n\t\t\t\t\tmapfile -d \"|\" -t -O \"${#SAPARR[@]}\" SAPARR < <(printf '%s' \"$PROTPARTS\")\n\t\t\t\t\tSAPGAME=\"${SAPARR[1]}\"\n\t\t\t\t\twritelog \"INFO\" \"Loading '${STLGSAPD}/${SAPGAME}.conf' and starting the gui ${FUNCNAME[0]}\"\n\t\t\t\t\tloadCfg \"${STLGSAPD}/${SAPGAME}.conf\"\n\n\t\t\t\t\tif [ \"$IN_SAP_COMPAT_DATA_PATH\" != \"$SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\t\t\tif [ -d \"$IN_SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - User chose an own COMPAT_DATA_PATH, removing autocreated '$IN_SAP_COMPAT_DATA_PATH'\"\n\t\t\t\t\t\t\trmdir \"$IN_SAP_COMPAT_DATA_PATH\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\n\t\t\t\t\t\"${FUNCNAME[0]}\"\n\t\t\t\t}\n\t\t\t;;\n\t\t\t4)\t{\n\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Selected '$BUT_RUN' - Exiting\"\n\t\t\t\t\tunset SAPARR\n\t\t\t\t\tmapfile -d \"|\" -t -O \"${#SAPARR[@]}\" SAPARR < <(printf '%s' \"$PROTPARTS\")\n\t\t\t\t\tSAPGAME=\"${SAPARR[1]}\"\n\t\t\t\t\tSAPPROTON=\"${SAPARR[2]}\"\n\t\t\t\t\tSAP_COMPAT_DATA_PATH=\"${SAPARR[3]}\"\n\t\t\t\t\tSAPEXE=\"${SAPARR[4]}\"\n\t\t\t\t\tSAPARGS=\"${SAPARR[5]}\"\n\t\t\t\t\tSAPRUN=\"${SAPARR[6]}\"\n\n\t\t\t\t\tif [ \"$IN_SAP_COMPAT_DATA_PATH\" != \"$SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\t\t\tif [ -d \"$IN_SAP_COMPAT_DATA_PATH\" ]; then\n\t\t\t\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - User chose an own COMPAT_DATA_PATH, removing autocreated '$IN_SAP_COMPAT_DATA_PATH'\"\n\t\t\t\t\t\t\trmdir \"$IN_SAP_COMPAT_DATA_PATH\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\n\t\t\t\t\tif [ -n \"$SAPGAME\" ];then\n\t\t\t\t\t\tSAPCFG=\"${STLGSAPD}/${SAPGAME}.conf\"\n\n\t\t\t\t\t\ttouch \"$FUPDATE\" \"$SAPCFG\"\n\t\t\t\t\t\tupdateConfigEntry \"SAPGAME\" \"$SAPGAME\" \"$SAPCFG\"\n\t\t\t\t\t\tif [ -n \"$SAPPROTON\" ];then\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tupdateConfigEntry \"SAPPROTON\" \"$SAPPROTON\" \"$SAPCFG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ -n \"$SAP_COMPAT_DATA_PATH\" ];then\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tupdateConfigEntry \"SAP_COMPAT_DATA_PATH\" \"$SAP_COMPAT_DATA_PATH\" \"$SAPCFG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ -n \"$SAPEXE\" ];then\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tupdateConfigEntry \"SAPEXE\" \"$SAPEXE\" \"$SAPCFG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ -n \"$SAPARGS\" ];then\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tupdateConfigEntry \"SAPARGS\" \"$SAPARGS\" \"$SAPCFG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\t\tif [ -n \"$SAPRUN\" ];then\n\t\t\t\t\t\t\ttouch \"$FUPDATE\"\n\t\t\t\t\t\t\tupdateConfigEntry \"SAPARGS\" \"$SAPARGS\" \"$SAPCFG\"\n\t\t\t\t\t\tfi\n\t\t\t\t\tfi\n\t\t\t\t\tSapRun\n\t\t\t\t}\n\t\t\t;;\n\t\tesac\n\t}\n\n\tcreateProtonList X\n\n\tmkProjDir \"$STLGSAPD\"\n\tSAPGUI=1\n\tSAPRUN=\"TRUE\"\n\n\tif [ -n \"$1\" ] && [ -z \"$2\" ] && [ -f \"${STLGSAPD}/${1}.conf\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading '${STLGSAPD}/${1}.conf' silently\"\n\t\tloadCfg \"${STLGSAPD}/${1}.conf\"\n\t\tSAPGUI=0\n\t\tSapRun\n\telif [ -n \"$1\" ] && [ ! -f \"${STLGSAPD}/${1}.conf\" ]; then\n\t\tif [ \"$1\" == \"list\" ]; then\n\t\t\tfind \"$STLGSAPD\" -type f -exec basename {} .conf \\;\n\t\t\tSAPGUI=0\n\t\t\tSAPRUN=\"FALSE\"\n\t\telse\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using '$1' as game title\"\n\t\t\tSAPGAME=\"$1\"\n\t\tfi\n\telif [ -n \"$1\" ] && [ -n \"$2\" ] && [ -f \"${STLGSAPD}/${1}.conf\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading '${STLGSAPD}/${1}.conf' and starting the gui\"\n\t\tloadCfg \"${STLGSAPD}/${1}.conf\"\n\t\tSAPGUI=1\n\telif [ -z \"$1\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Only starting plain gui\"\n\tfi\n\n\tif [ \"$SAPGUI\" -eq 1 ]; then\n\t\tSapGui\n\tfi\n}\n\nfunction getWinecfgExecutable {\n\t# Check if we have a systemwide Winecfg\n\tif [ -x \"$(command -v \"$WINECFG\")\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using Winecfg found at '$WINECFG'\"\n\t\tOTWINECFGEXE=\"$WINECFG\"\n\telse\n\t\t# Try to use winecfg with Proton executable\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Trying to use Winetrickks with game Proton version\"\n\t\tif [ -z \"$RUNPROTON\" ]; then\n\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - RUNPROTON is empty - '$RUNPROTON' - Maybe this is not a Proton game?\"\n\t\telse\n\t\t\tWINECFGBASEPATH=\"$(dirname \"$RUNPROTON\")\"\n\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - RUNPROTON is '$RUNPROTON'\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - WINECFGBASEPATH is '$WINECFGBASEPATH'\"\n\n\t\t\tif [ -d \"$WINECFGBASEPATH\" ]; then\n\t\t\t\tOTWINECFGEXE=\"$( find \"$WINECFGBASEPATH\" -name \"winecfg.exe\" | head -n1 )\"\n\t\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using Winecfg found at '$OTWINECFGEXE'\"\n\t\t\telse\n\t\t\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not find directory name for Proton version '$RUNPROTON' - This probably shouldn't happen! - Could not get Winecfg executable to run\"\n\t\t\tfi\n\t\tfi\n\tfi\n}\n\n# Extracted from part of setModWine\n# Does not handle Proton version mismatches but this should hopefully be handled before game launch -- a PR would be welcome for this until I get around to it :-)\nfunction getWineBinFromProtPath {\n\tINPROTON=\"$1\"\n\n\tCHECKDNWINED=\"$(dirname \"$INPROTON\")/$DBW\"  # Valve Proton structure\n\tCHECKDNWINEF=\"$(dirname \"$INPROTON\")/$FBW\"  # GE-Proton structure\n\n\tFWINEVAR=\"\"\n\tif [ -f \"$CHECKDNWINED\" ]; then\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - CHECKDNWINED is a file -- '${CHECKDNWINED}' -- Looks like we have a Valve Proton here\"\n\t\tFWINEVAR=\"$CHECKDNWINED\"\n\telif [ -f \"$CHECKDNWINEF\" ]; then\n\t\tFWINEVAR=\"$CHECKDNWINEF\"\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - CHECKDNWINEF is a file -- '${CHECKDNWINEF}' -- Looks like we have a GE-Proton here\"\n\telse\n\t\twritelog \"ERROR\" \"${FUNCNAME[0]} - Could not find Wine binary for Proton '$INPROTON' - can't continue\"\n\tfi\n\n\techo \"$FWINEVAR\"\n}\n\n# These functions will always use the game Proton version instead of the Proton version in the dropdown\n# I don't think there's a way for us to get the Proton version in this dropdown to use with the game\n#\n# Having these as primary menu buttons would mean the dialog would close and the user would have to re-open the one-time run menu to run their game\n# The tradeoff for now is having them set the Proton version by changing the game version before going to the one-time menu, and then they can run Winetricks\n#\n# I think this is a better tradeoff than having the menu close, as the amount of users who would change the Proton version are probably minimal\n# compared to the users who would be annoyed by the dialog closing\n\n\n\n# These two winecfg and winetricks functions need to be updated to accomodate a passed in AppID from the command line\n# - needs to be able to get game config / proton versions\n# - handle cases where a Proton version is not set for a game that has never been launched with STL\n# - abort for native games (may need to check executable for this?)\nfunction oneTimeWinecfg {\n\tOTPROT=\"$( getProtPathFromCSV \"$USEPROTON\" )\"\n\tOTWINE=\"$( getWineBinFromProtPath \"$OTPROT\" )\"\n\n\tif [ -z \"$GPFX\" ]; then\n\t\tgetGameFiles \"$AID\"  # Potentially fix GPFX not being set in some situations\n\tfi\n\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Running OneTime Winecfg with Wine '$RUNWINE'\"\n\n\tif [ -z \"$RUNPROTON\" ]; then\n\t\tRUNPROTON=\"$OTPROT\"  # Makes getWinecfgExecutable happy\n\tfi\n\n\tgetWinecfgExecutable\n\tWINEDEBUG=\"-all\" WINEPREFIX=\"$GPFX\" \"$OTWINE\" \"$OTWINECFGEXE\" # GPFX is not defined on Steam Deck for some reason? Need to fix, then this should work\n}\n\n# Needs updated to accomodate a passed in AppID from the command line\nfunction oneTimeWinetricks {\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Getting Winetricks binary\"\n\tchooseWinetricks\n\tif [ ! -x \"$(command -v \"$WINETRICKS\")\" ]; then\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - Could not run one-time Winetricks because Winetricks is not installed - Skipping\"\n\telse\n\t\tOTPROT=\"$( getProtPathFromCSV \"$USEPROTON\" )\"\n\t\tOTWINE=\"$( getWineBinFromProtPath \"$OTPROT\" )\"\n\n\t\tif [ -z \"$GPFX\" ]; then\n\t\t\tgetGameFiles \"$AID\"  # Potentially fix GPFX not being set in some situations\n\t\tfi\n\n\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Running OneTime Winetricks for prefix '$GPFX'\"\n\n\t\tWINE=\"$OTWINE\" WINEPREFIX=\"$GPFX\" \"$WINETRICKS\"  # GPFX is not defined on Steam Deck for some reason? Need to fix, then this should work\n\tfi\n}\n\n# Does the shared setup for one-time run commandline and GUI functions\nfunction setOneTimeRunVars {\n\tif [ -n \"$1\" ]; then\n\t\tAID=\"$1\"\n\t\tsetAIDCfgs\n\tfi\n\tloadCfg \"$STLGAMECFG\"\n\n\tif [ -z \"$STEAM_COMPAT_DATA_PATH\" ]; then\n\t\tMETCFG=\"$CUMETA/${AID}.conf\"\n\t\tif [ -f \"$METCFG\" ]; then\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Loading Metadata '$METCFG'\"\n\t\t\tfixCustomMeta \"$METCFG\" # will be removed again later\n\t\t\tloadCfg \"$METCFG\"\n\t\tfi\n\n\t\tif [ -n \"$WINEPREFIX\" ] && [ -d \"$WINEPREFIX\" ]; then\n\t\t\tSTEAM_COMPAT_DATA_PATH=\"${WINEPREFIX%/*}\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Found STEAM_COMPAT_DATA_PATH '$STEAM_COMPAT_DATA_PATH'\"\n\t\tfi\n\tfi\n\n\t# Since we can use OTR with native Linux games, we just warn when there is no STEAM_COMPAT_DATA_PATH\n\tif [ -z \"$STEAM_COMPAT_DATA_PATH\" ]; then\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - STEAM_COMPAT_DATA_PATH could not be determined - This may mean we're running a native Linux game here, in which case this can be safely ignored.\"\n\t\twritelog \"WARN\" \"${FUNCNAME[0]} - If you need to use a Windows executable you'll have to use One-Time Run with a Windows game, or the Windows release of this game.\"\n\tfi\n}\n\nfunction OneTimeRunReset {\n\t# Reset all One-Time Run variables with the dummy value (easier than removing them, which should be unnecessary)\n\twritelog \"INFO\" \"${FUNCNAME[0]} - Restoring defaults for One Time Run variables\"\n\n\t# Remove config file entries -- Blank entries will act as \"(none)\" for files/paths, \"false\" for checkboxes, and the\n\t# Proton version is handled already with a mismatch check\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTPROTON\" \"DUMMY\" \"$STLGAMECFG\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTEXE\" \"DUMMY\" \"$STLGAMECFG\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTARGS\" \"DUMMY\" \"$STLGAMECFG\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTUSEEXEDIR\" \"DUMMY\" \"$STLGAMECFG\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTFORCEPROTON\" \"DUMMY\" \"$STLGAMECFG\"\n\ttouch \"$FUPDATE\"\n\tupdateConfigEntry \"OTSLR\" \"DUMMY\" \"$STLGAMECFG\"\n\n\t# Unset variables to ensure values are cleared on the UI\n\tunset \"$OTPROTON\"\n\tunset \"$OTEXE\"\n\tunset \"$OTARGS\"\n\tunset \"$OTUSEEXEDIR\"\n\tunset \"$OTFORCEPROTON\"\n\tunset \"$OTSLR\"\n}\n\n# Called when a user passes arguments for onetimerun\n# TODO a way to use default game Proton version, either if '--proton' is not supplied or if '--proton=\"default\"'?\n# TODO add a way to use PROTON_LOG with custom command?\nfunction commandlineOneTimeRun {\n\tsetOneTimeRunVars \"$1\"\n\t# Get incoming arguments\n\tOTRUNDIR=\"$( pwd )\"  # Default to current script directory\n\tUSEEXEDIR=0\n\tOTFORCEPROTON=0\n\tOTSLR=0\n\tOTRESET=0\n\tfor i in \"$@\"; do\n\t\tcase $i in\n\t\t\t--exe=*)\n\t\t\t\tOTEXE=\"$( realpath \"${i#*=}\" )\"\n\t\t\t\tshift ;;\n\t\t\t--proton=*)\n\t\t\t\t# Needed for saving to work, since RUNOTPROTON gets overridden with Proton path from CSV\n\t\t\t\tRUNOTPROTON=\"${i#*=}\"\n\t\t\t\tOTPROTON=\"$RUNOTPROTON\"\n\t\t\t\tshift ;;\n\t\t\t--workingdir=*)\n\t\t\t\tPASSEDRUNDIR=\"${i#*=}\"\n\t\t\t\tif [ -n \"$PASSEDRUNDIR\" ] && [ -d \"$PASSEDRUNDIR\" ]; then  # Ensure working directory exists\n\t\t\t\t\tOTRUNDIR=\"$PASSEDRUNDIR\"\n\t\t\t\tfi\n\t\t\t\tshift ;;\n\t\t\t--useexedir)\n\t\t\t\tUSEEXEDIR=1\n\t\t\t\tshift ;;\n\t\t\t--args=*)\n\t\t\t\tOTARGS=\"${i#*=}\"\n\t\t\t\tshift ;;\n\t\t\t--forceproton)\n\t\t\t\tOTFORCEPROTON=1\n\t\t\t\tshift ;;\n\t\t\t--useslr)\n\t\t\t\tOTSLR=1\n\t\t\t\tshift ;;\n\t\t\t--save)\n\t\t\t\tOTSAVE=\"TRUE\"\n\t\t\t\tshift ;;\n\t\t\t--default)\n\t\t\t\tOneTimeRunReset\n\t\t\t\tOTRESET=1\n\t\t\t\tshift ;;\n\t\tesac\n\tdone\n\n\t# When default is passed, all other options are ignored, as it should be used standalone\n\t# (and priamrily internally for the defaults button)\n\tif [ \"$OTRESET\" -eq 1 ]; then\n\t\treturn\n\tfi\n\n\t# Ensure EXE is given and that directory to run the exe in is valid, and also ensure we have a valid Proton version to run the exe with\n\t# TODO refactor to flatten\n\tif [ -n \"$OTEXE\" ] && [ -f \"$OTEXE\" ]; then  # Valid executable required (Windows executable or Linux executable/file/etc, not really an EXE for Linux but oh well - Naming is hard!)\n\t\tif [ \"$USEEXEDIR\" -eq 1 ]; then  # Use EXE dir as working dir\n\t\t\tOTRUNDIR=\"$( dirname \"$OTEXE\" )\"\n\t\t\twritelog \"INFO\" \"${FUNCNAME[0]} - Using executable directory '$OTRUNDIR' as working directory\"\n\t\tfi\n\n\t\tif [ -d \"$OTRUNDIR\" ]; then  # Working directory needs to be valid\n\t\t\t# Don't check executable type if OTFORCEPROTON\n\t\t\tif [ \"$OTFORCEPROTON\" -eq 1 ]; then\n\t\t\t\tISWINDOWSEXE=1\n\t\t\telse\n\t\t\t\tISWINDOWSEXE=\"$(file \"$OTEXE\" | grep -c \"PE32\")\"  # TODO how do things like .bat scripts work here?\n\t\t\tfi\n"
        }
      ]
    }
  ]
}