{
  "metadata": {
    "timestamp": 1736568204437,
    "page": 48,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenVPN/easy-rsa",
      "stars": 4109,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1669921875,
          "content": "easyrsa3/pki\neasyrsa3/vars\neasyrsa3/safessl-easyrsa.cnf\neasyrsa3/unit?tests\neasyrsa-unit-tests.sh\neasyrsa-unit-tests-help.sh\ndist-staging\n.DS_Store\ntest-deps/*\nshellcheck\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 1.2744140625,
          "content": "Easy-RSA -- A Shell-based CA Utility\n====================================\n\nCopyright (C) 2013 by the Open-Source OpenVPN development community\n\nEasy-RSA 3 license: GPLv2\n-------------------------\n\nAll the Easy-RSA code contained in this project falls under a GPLv2 license with\nfull text available in the Licensing/ directory. Additional components used by\nthis project fall under additional licenses:\n\nAdditional licenses for external components\n-------------------------------------------\n\nThe following components are under different licenses; while not part of the\nEasy-RSA source code, these components are used by Easy-RSA or provided in\nplatform distributions as described below:\n\n### OpenSSL\n\n  OpenSSL is not linked by Easy-RSA, nor is it currently provided in any release\n  package by Easy-RSA. However, Easy-RSA is tightly coupled with OpenSSL, so\n  effective use of this code will require your acceptance and installation of\n  OpenSSL.\n\n### Additional Windows Components\n\n  The Windows binary package includes mksh/Win32 and unxutils binary components,\n  with full licensing details available in the distro/windows/Licensing/\n  subdirectory of this project. mksh/Win32 is under a MirOS license (with some\n  additional component licenses present there) and unxutils is under a GPLv2\n  license.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 19.1103515625,
          "content": "Easy-RSA 3 ChangeLog\n\n3.2.2 (TBD)\n\n   * Forbid self-signed certificate from being expired/renewed/revoked (ab45ae7) (#1274)\n   * Rename global option --ssl-conf (DEPRECATED) to --ssl-cnf (c788423) (#1270)\n   * bugfix: Save and Restore $EASYRSA_SSL_CONF for compound commands (7cdb14d) (#1270)\n   * bugfix: Always use locate_support_files() after secure_session() (d530bc3) (#1270)\n   * bugfix: easyrsa-tools.lib: renew, write full metadata to temp-file (b47d2af) (#1267)\n   * Introduce new command 'revoke-issued' (38bf2d8) (#1266)\n     Commands 'revoke' and 'revoke-issued' are identical.\n     Command 'revoke' can ONLY be used in batch mode.\n   * vars.example: Remove $EASYRSA_PKI (8ee8dcf) (#1262)\n     There is no effect on existing 'vars' files.\n   * easyrsa-tools.lib: Move to 'easyrsa3' directory (d30b688) (#1259)\n     This now includes 'easyrsa-tools.lib' in the distribution tarballs.\n   * Upgrade easyrsa-tools.lib to version 322 - As of command 'renew-ca'\n   * easyrsa-tools.lib: Introduce new command 'renew-ca' (ba32b0d) (#1255)\n   * easyrsa-tools.lib: show-expire, allow --days to be zero (a1033a5) (#1254)\n   * Command 'help': Ignore EASYRSA_SILENT (8804d6b) (#1249)\n   * bugfix: easyrsa-tools.lib: renew SAN, remove excess word 'Address' (af17492) (#1251)\n   * New global variable 'EASYRSA_DISABLE_INLINE' (ad257ab) (#1245)\n   * bugfix: revoke, renew: Remove pki/inline/private/$file.inline (febef85) (#1244)\n     Initial bug report #1242 (Minor)\n     Stop removing old credentials file pki/$file.creds (a871e9c)\n   * Add LibreSSL version 4 to supported SSL Libraries (7df616b) (#1240)\n   * sign-req: Allow custom X509 Types (2ee08cc) (#1238)\n   * Remove redundant file index.txt.attr (da3c249) (#1233)\n\n3.2.1 (2024-09-13)\n\n   * inline: Add decimal value for cert. serial (Linux Only) (b33038e) (#1222)\n   * Always exit with error for unknown command options (Except nopass) (#1221)\n     (build-ca: b2f7912); (gen-req: 07f21d3); (build_full(): 0ff7f4c);\n     (export_pkcs(): 2c51288); (set-pass: 1266d4e)\n   * Integrate Easy-RSA TLS-Key for use with 'init-pki soft' (03d9dc2) (#1220)\n     Note: Inline files that contain private key data are now created in sub-dir\n     'pki/inline/private'.\n   * easyrsa-tools.lib, show-expire: Add CA certificate to report (a36cd54) (#1215)\n   * inline: OpenVPN TLS Keys inlining for TLS-AUTH, TLS-CRYPT-V1 (6e9e4a2) (#1185)\n     Note: Command inline only writes directly to inline file not stdout.\n   * easyrsa-tools.lib: OpenVPN TLS Key gen. TLS-AUTH, TLS-CRYPT-V1 (cf0da16) (#1185)\n   * easyrsa-tools.lib: expire_status_v2() (show-expire version 2) (1e43bf5) (#1214)\n   * sign-req: Require 128bit serial number (806ee19) (#1213)\n   * Move command 'verify-cert' to Tools-lib; drop 'verify' shortcut (ddbf304) (#1209)\n   * Windows secure_session(): Ensure $secured_session dir is created (d99b242) (#1203)\n   * Switch to '-f' for file existence (6ab98c9..a02f545) (#1201)\n   * inline: Move auto-inline from build_full() to sign_req() (823f70f) (#1201)\n   * gen-crl: Create additional CRL in DER format (69df0d8) (#1198)\n   * self-sign: Allow Edwards Curve based keys (81b749b) (#1197)\n   * Re-enable command 'renew' (version 2): Requires EasyRSA Tools (30fe311) (#1195)\n   * bug-fix: revoke: Pass the correct certificate location (24d5514)\n   * vars.example: Add flags for auto-SAN and X509 critical attribute (a41dfcc)\n   * Global option --eku-crit: Mark X509 extendedKeyUsage as critical (ca09211)\n   * sign-req: Add critical and pathlen details to confirmation (deae705) (#1182)\n   * export-p12: Automatically generate inline file (9d90370) (#1181)\n   * Introduce global option --auto-san, use commonName as SAN (5c36d44) (#1180)\n   * Introduce global option --san-crit, mark SAN critical (dd69f50) (#1179)\n   * Introduce new global options: --ku-crit and --bc-crit (b79abee) (#1176)\n   * gen-req: Always check for existing request file (7eab98e) (#1177)\n   * revoke/revoke-expired/-renewed: Keep duplicate certificate (3da7f66) (#1177)\n   * revoke-expired/-renewed: Keep req/key files for resigning (4537ae7) (#1177)\n   * revoke: Add abbreviations for optional 'reason' (a88ccc7) (#1173)\n   * build-ca: Allow use of --req-cn without batch mode (b77a0fb) (#1170)\n   * gen-req: Re-enable use of --req-cn (5cf8c46) (#1170)\n   * write: Change syntax, target as file, not directory (722ce54) (#1165)\n\n3.2.0 (2024-05-18)\n\n   * Revert ca76697: Restore escape_hazard() (b1e9d7a) (#1137)\n   * New X509 Type: 'selfsign' Internal only (999533e) (#1135)\n   * New commands: self-sign-server and self-sign-client (9f8a1d1) (#1127)\n   * build-ca: Command 'req', remove SSL option '-keyout' (4e02c8a) (#1123)\n   * Remove escape_hazard(), obsolete (ca76697)\n   * Remove command and function display_cn(), unused (be8f400) (#1114)\n   * Introduce Options to edit Request Subject during command 'sign-req'\n     Global Option: --new-subject -- Command 'sign-req' option: 'newsubj'\n     First proposed in: (#439) -- Completed: (83b81c7) (#1111)\n   * docs: Update EasyRSA-Renew-and-Revoke.md (f6c2bf5) (#1109)\n   * Remove all 'renew' code; replaced by 'expire' code (9d94207) (#1109)\n   * Introduce commands: 'expire' and 'revoke-expired' (a1890fa) (#1109)\n   * Keep request files [CSR] when revoking certificates (6d6e8d8) (#1109)\n   * Restrict use of --req-cn to build-ca (0a46164) (#1098)\n   * Remove command 'display-san' (Code removed in 5a06f94) (50e6002) (#1096)\n   * help: Add 'copyext'; How to use --copy-ext and --san (5a06f94) (#1096)\n   * Allow --san to be used multiple times (5a06f94) (#1096)\n   * Remove default server subject alternative name (0b85a5d) (#576)\n   * Move Status Reports to 'easyrsa-tools.lib' (214b909) (#1080)\n   * export-p12, OpenSSL v1.x: Upgrade PBE and MAC options (60a508a)\n     (#1084 - Based on #1081)\n   * Windows: Introduce 'Non-Admin' mode (c2823c4) (#1073)\n   * LibreSSL: Add fix for missing 'x509' option '-ext' (96dd959) (#1068)\n   * Variable heredoc expansion for SSL/Safe Config file (9c5d423) (#1064)\n\n   Branch-merge: v3.2.0-beta2 (#1055) 2024/01/13 Commit: d51d79b\n\n   * Always use here-doc version of openssl-easyrsa.cnf (2a8c0de)\n     Only use here-doc if the current version is recognised by sha256 hash.\n     The current file is NEVER deleted (60216d5). Partially revert: 2a8c0de\n   * export-p12: New command option 'legacy'. OpenSSL V3 Only (f8514de)\n     Fallback to encryption algorithm RC2_CBC or 3DES_CBC\n   * export-p12: Always set 'friendlyName' to file-name-base (da9e594)\n   * Update OpenSSL to 3.2.0 (03e4829)\n\n   Branch-merge: v3.2.0-beta1 (#1046) 2023/12/15 Commit: 7120876\n\n   * Important note: As of Easy-RSA version 3.2.0-beta1, the configuration files\n     `vars.example`, `openssl-easyrsa.cnf` and all files in `x509-types` directory\n     are no longer required. Package maintainers can omit these files in the future.\n     All files are created as required and deleted upon command completion.\n     `vars.example` is created during `init-pki` and placed in the fresh PKI.\n     These files will be retained for downstream packaging compatibility.\n\n   * Rename X509-type file `code-signing` to `codeSigning` (1c6b31a)\n     The original file will be retained as `code-signing`, however, the automatic\n     X509-types creation will name the file `codeSigning`. This effectively means\n     that both are valid X509-types, until `code-signing` is dropped.\n   * init-pki: Always write vars.example file to fresh PKI (66a8f3e)\n   * New command 'write': Write 'legacy' files to stdout or files (c814e0a)\n   * Remove command 'make-safe-ssl': Replaced by command 'write safe-cnf' (c814e0a)\n   * New Command 'rand': Expose easyrsa_random() to the command line (6131cbf)\n   * Remove function 'set_pass_legacy()' (7470c2a)\n   * Remove command 'rewind-renew' (72b4079)\n   * Remove command 'rebuild' (d6953cc)\n   * Remove command 'upgrade' (6a88edd)\n\n   Branch-merge: v3.2.0-alpha2 (#1043) 2023/12/7 Commit: ed0dc46\n   * Remove EASYRSA_NO_VARS; Allow graceful use without a vars file (3c0ca17)\n\n   Branch-merge: v3.2.0-alpha1 (#1041) 2023/12/2 Commit: 42c2e95\n   * New diagnostic command 'display-cn' (#1040)\n   * Expand renewable certificate types to include code-signing (#1039)\n\n3.1.7 (2023-10-13)\n   * Rewrite vars-auto-detect, adhere to EasyRSA-Advanced.md (#1029)\n     Under the hood, this is a considerable change but there are no user\n     noticeable differences. With the exception of:\n     Caveat: The default '$PWD/pki/vars' file is forbidden to change either\n             EASYRSA or EASYRSA_PKI, which are both implied by default.\n   * EasyRSA-Advanced.md: Correct vars-auto-detect hierarchy (#1029)\n     Commit: ecd65065e3303da78811278a154ef7a969c2777b\n             EASYRSA/vars is moved to a higher priority than a default PKI.\n             vars-auto-detect no longer searches 'easyrsa' program directory.\n   * gen-crl: preserve existing crl.pem ownership+mode (#1020)\n   * New command: make-vars - Print vars.example (here-doc) to stdout (#1024)\n   * show-expire: Calculate cert. expire seconds from DB date (#1023)\n   * Update OpenSSL to 3.1.2\n\n3.1.6 (2023-07-18)\n   * New commands: 'inline' and 'x509-eku' (#993)\n     inline: Build an inline file for a commonName\n     x509-eku: Extract X509v3 extended key usage from a certificate\n   * Expose serial-check, display-dn, display-san and default-san to\n     command line. (#980) (Debugging functions, which remain undocumented)\n   * Expand default status to include vars-file and CA status (#973)\n   * sign-req: Allow the CSR DN-field order to be preserved (#970)\n\n3.1.5 (2023-06-10)\n   * Build Update: script now supports signing and verifying\n   * Automate support-file creation (Free packaging) (#964)\n   * build-ca: New command option 'raw-ca', abbreviation: 'raw' (#963)\n\n     This 'raw' method, is the most reliable way to build a CA,\n     with a password, without writing the CA password to a temp-file.\n\n   This option completely replaces both methods below:\n\n   * build-ca: New option --ca-via-stdin, use SSL -pass* argument 'stdin' (#959)\n     Option '--ca-via-stdin' offers no more security than standard method.\n     Easy-RSA version 3.1.4 ONLY.\n\n   * build-ca: Replace password temp-files with file-descriptors (#955)\n     Using file-descriptors does not work in Windows.\n     Easy-RSA version 3.1.3 ONLY.\n\n3.1.4 (2023-05-23)\n   * build-ca: New option --ca-via-stdin, use SSL -pass* argument 'stdin' (#959)\n   * build-ca: Revert manual CA password method to temp-files (#959)\n     Supersedes #955\n\n     Release v3.1.3 was fatally flawed, it would fail to build a CA under Windows.\n     Release v3.1.4 is specifically a bugfix ONLY, to resolve the Windows problem.\n\n     See the following commits for further details:\n     5d7ad1306d5ebf1588aef77eb3445e70cf5b4ebc\n         build-ca: Revert manual CA password method to temp-files\n     c11135d19b2e7e7385d28abb1132978c849dfa74\n         build-ca: Use OpenSSL password I/O argument 'stdin'\n     27870d695a324e278854146afdac5d6bdade9bba\n         build-ca: Replace password temp-file method with file-descriptors\n         Superseded by 5d7ad13 above.\n\n3.1.3 (2023-05-19)\n   * build-ca: Replace password temp-files with file-descriptors (#955)\n     Superseded by #959\n   * Replace --fix-offset with --startdate, --enddate (#918)\n   * Introduce option -S|--silent-ssl: Silence SSL output (#913)\n   * Only create a random serial number file when expected (#896)\n   * Always verify SSL lib, for all commands (#877)\n   * Option --fix-offset: Adjust off-by-one day (#847) Superseded (#918)\n   * Update OpenSSL to v3.0.8\n\n3.1.2 (2023-01-13)\n   * build-full: Always enable inline file creation (#834)\n   * Make default Edwards curve ED25519 (#828)\n   * Allow --fix-offset to create post-dated certificates (#804) Superseded (#918)\n   * Introduce command 'set-pass' (#756)\n   * Introduce global option '--nopass|--no-pass' (#752)\n   * Introduce global option '--notext|--no-text' (#745)\n   * Command 'help': For unknown command, exit with error (#737)\n   * Find data-files in the correct order (#727 - Reported #725)\n   * Update OpenSSL to 3.0.7 for Windows distribution\n\n3.1.1 (2022-10-13)\n   * Remove command 'renewable' (#715)\n   * Expand 'show-renew', include 'renewed/certs_by_serial' (#700)\n   * Resolve long-standing issue with --subca-len=N (#691)\n   *  ++ NOTICE: Add EasyRSA-Renew-and-Revoke.md (#690)\n   * Require 'openssl-easyrsa.cnf' is up to date (#695}\n   * Introduce 'renew' (version 3). Only renew cert (#688)\n   * Always ensure X509-types files exist (#581 #696)\n   * Expand alias '--days' to all suitable options with a period (#674)\n   * Introduce --keep-tmp, keep temp files for debugging (#667)\n   * Add serialNumber (OID 2.5.4.5) to DN 'org' mode (#606)\n   * Support ampersand and dollar-sign in vars file (#590)\n   * Introduce 'rewind-renew' (#579)\n   * Expand status reports to include checking a single cert (#577)\n   * Introduce 'revoke-renewed' (#547)\n   * update OpenSSL for Windows to 3.0.5\n\n3.1.0 (2022-05-18)\n   * Introduce basic support for OpenSSL version 3 (#492)\n   * Update regex in grep to be POSIX compliant (#556)\n   * Introduce status reporting tools (#555 & #557)\n   * Display certificates using UTF8 (#551)\n   * Allow certificates to be created with fixed date offset (#550)\n   * Add 'verify' to verify certificate against CA (#549)\n   * Add PKCS#12 alias 'friendlyName' (#544)\n   * Support multiple IP-Addresses in SAN (#564)\n   * Add option '--renew-days=NN', custom renew grace period (#557)\n   * Add 'nopass' option to the 'export-pkcs' functions (#411)\n   * Add support for 'busybox' (#543)\n   * Add option '--tmp-dir=DIR' to declare Temp-dir (Commit f503a22)   \n\n3.0.9 (2022-05-17)\n   * Upgrade OpenSSL from 1.1.0j to 1.1.1o (#405, #407) \n      - We are building this ourselves now.\n   * Fix --version so it uses EASYRSA_OPENSSL (#416)\n   * Use openssl rand instead of non-POSIX mktemp (#478)\n   * Fix paths with spaces (#443)\n   * Correct OpenSSL version from Homebrew on macOs (#416)\n   * Fix revoking a renewed certificate (Original PR #394)\n     Follow-up commit: ef22701878bb10df567d60f2ac50dce52a82c9ee\n   * Introduce 'show-crl' (d1993892178c5219f4a38d50db3b53d1a972b36c)\n   * Support Windows-Git 'version of bash' (#533)\n   * Disallow use of single quote (') in vars file, Warning (#530)\n   * Creating a CA uses x509-types/ca and COMMON (#526)\n   * Prefer 'PKI/vars' over all other locations (#528)\n   * Introduce 'init-pki soft'  option (#197)\n   * Warnings are no longer silenced by --batch (#523)\n   * Improve packaging options (#510)\n   * Update regex for POSIX compliance (#556)\n   * Correct date format for Darwin/BSD (#559)\n\n3.0.8 (2020-09-09)\n   * Provide --version option (#372)\n   * Version information now within generated certificates like on *nix\n   * Fixed issue where gen-dh overwrote existing files without warning (#373)\n   * Fixed issue with ED/EC certificates were still signed by RSA (#374)\n   * Added support for export-p8 (#339)\n   * Clarified error message (#384)\n   * 2->3 upgrade now errors and prints message when vars isn't found (#377)\n\n3.0.7 (2020-03-30)\n   * Include OpenSSL libs and binary for Windows 1.1.0j\n   * Remove RANDFILE environment variable (#261)\n   * Workaround for bug in win32 mktemp (#247, #305, PR #312)\n   * Handle IP address in SAN and renewals (#317)\n   * Workaround for ash and no set -o echo (#319)\n   * Shore up windows testing framework (#314)\n   * Provide upgrade mechanism for older versions of EasyRSA (#349)\n   * Add support for KDC certificates (#322)\n   * Add support for Edward Curves (#354, #350)\n   * Add support for EASYRSA_PASSIN and EASYRSA_PASSOUT env vars (#368)\n   * Add support for RID to SAN (#362)\n\n3.0.6 (2019-02-01)\n   * Certificates that are revoked now move to a revoked subdirectory (#63)\n   * EasyRSA no longer clobbers non-EASYRSA environment variables (#277)\n   * More sane string checking, allowing for commas in CN (#267)\n   * Support for reasonCode in CRL (#280)\n   * Better handling for capturing passphrases (#230, others)\n   * Improved LibreSSL/MacOS support\n   * Adds support to renew certificates up to 30 days before expiration (#286)\n     - This changes previous behavior allowing for certificate creation using\n       duplicate CNs.\n\n3.0.5 (2018-09-15)\n   * Fix #17 & #58: use AES256 for CA key\n   * Also, don't use read -s, use stty -echo\n   * Fix broken \"nopass\" option\n   * Add -r to read to stop errors reported by shellcheck (and to behave)\n   * Remove overzealous quotes around $pkcs_opts (more SC errors)\n   * Support for LibreSSL\n   * EasyRSA version will be reported in certificate comments\n   * Client certificates now expire in 3 year (1080 days) by default\n\n3.0.4 (2018-01-21)\n    * Remove use of egrep (#154)\n    * Integrate with Travis-CI (#165)\n    * Remove \"local\" from variable assignment (#165)\n    * Other changes related to Travis-CI fixes\n\t* Assign values to variables defined previously w/local\n    * Finally(?) fix the subjectAltName issues I presented earlier (really\n      fixes #168)\n\n3.0.3 (2017-08-22)\n    * Include mktemp windows binary\n    * copy CSR extensions into signed certificate\n\n\n3.0.2 (2017-08-21)\n    * Add missing windows binaries\n\n\n3.0.1 (2015-10-25)\n    * Correct some packaging errors\n\n\n3.0.0 (2015-09-07)\n\n    * cab4a07 Fix typo: Hellman\n        (ljani: Github)\n\n    * 171834d Fix typo: Default\n        (allo-: Github)\n\n    * 8b42eea Make aes256 default, replacing 3des\n        (keros: Github)\n\n    * f2f4ac8 Make -utf8 default\n        (roubert: Github)\n\n\n3.0.0-rc2 (2014/07/27)\n\n    * 1551e5f docs: fix typo\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 7ae44b3 Add KNOWN_ISSUES to stage next -rc release\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * a0d58b2 Update documentation\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 5758825 Fix vars.example with proper path to extensions.temp\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 89f369c Add support to change private key passphrases\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 49d7c10 Improve docs: add Upgrade-Notes; add online support refs\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * fcc4547 Add build-dist packaging script; update Building docs\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * f74d08e docs: update Hacking.md with layout & git conventions\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 0754f23 Offload temp file removal to a clean_temp() function\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * 1c90df9 Fix incorrect handling of invalid --use-algo option\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * c86289b Fix batch-mode handling with changes in e75ad75\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * e75ad75 refine how booleans are evaluated\n        (Eric F Crist <ecrist@secure-computing.net>)\n\n    * cc19823 Merge PKCS#7 feature from pull req #14\n        (Author: Luiz Angelo Daros de Luca <luizluca@tre-sc.gov.br>)\n        (Modified-By: Josh Cepek <josh.cepek@usa.net>)\n\n    * 8b1fe01 Support OpenSSL-0.9.8 with the EXTRA_EXTS feature\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * d5516d5 Windows: make builds easier by using a matching dir structure\n        (Josh Cepek <josh.cepek@usa.net>)\n\n    * dc2e6dc Windows: improve external checks and env-var help\n        (Josh Cepek <josh.cepek@usa.net>)\n\n3.0.0-rc1 (2013/12/01)\n\n    * The 3.x release is a nearly complete re-write of the 2.x codebase\n\n    * Initial 3.x series code by Josh Cepek <josh.cepek@usa.net> -- continuing\n    maintenance by the OpenVPN community development team and associated\n    contributors\n\n    * Add ECDSA (elliptic curve) support, thanks to Steffan Karger\n    <steffan@karger.me>\n"
        },
        {
          "name": "KNOWN_ISSUES",
          "type": "blob",
          "size": 0.3818359375,
          "content": "For a full list of issues, please visit the GitHub issue tracker at\nhttps://github.com/OpenVPN/easy-rsa/issues\n\n* EasyRSA tools, MKSH and mkdir.exe, *may* not work with Windows 11.\n  Requires further investigation.\n\n* OpenSSL 3.x does not appear to work on Windows 7.  Please use EasyRSA v3.0.9\n  if you intend on using Windows 7.  Note that Windows 7 is no longer supported\n  by Microsoft.\n"
        },
        {
          "name": "Licensing",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.62890625,
          "content": "[![CI](https://github.com/Openvpn/easy-rsa/actions/workflows/action.yml/badge.svg)](https://github.com/Openvpn/easy-rsa/actions/workflows/action.yml)\n# Overview\n\neasy-rsa is a CLI utility to build and manage a PKI CA. In layman's terms,\nthis means to create a root certificate authority, and request and sign\ncertificates, including intermediate CAs and certificate revocation lists (CRL).\n\n# Downloads\n\nIf you are looking for release downloads, please see the releases section on\nGitHub. Releases are also available as source checkouts using named tags.\n\n# Documentation\n\nFor 3.x project documentation and usage, see the [README.quickstart.md](README.quickstart.md) file or\nthe more detailed docs under the [doc/](doc/) directory. The .md files are in Markdown\nformat and can be converted to html files as desired for release packages, or\nread as-is in plaintext.\n\n# Getting help using easy-rsa\n\nCurrently, Easy-RSA development co-exists with OpenVPN even though they are\nseparate projects. The following resources are good places as of this writing to\nseek help using Easy-RSA:\n\nThe [openvpn-users mailing list](https://lists.sourceforge.net/lists/listinfo/openvpn-users)\nis a good place to post usage or help questions.\n\nUsers of GitHub can report problems to the Easy-RSA `issues` list.\n\n# Branch structure\n\nThe easy-rsa master branch is currently tracking development for the 3.x release\ncycle. Please note that, at any given time, master may be broken. Feel free to\ncreate issues against master, but have patience when using the master branch. It\nis recommended to use a release, and priority will be given to bugs identified in\nthe most recent release.\n\nThe prior 2.x and 1.x versions are available as release branches for\ntracking and possible back-porting of relevant fixes.\n\nBranch layout is:\n\n    master             <- Active: v3.2.x - Rolling.\n    v3.<N>.<N>-<LABEL>    Active: Development branches.\n    testing               Sandbox: Subject to change without notice.\n    v3.1.8                Sunset: Bugfix only for v3.1.7\n\n    The following are NOT compatible with OpenSSL version 3:\n\n    v3.0.6                Inactive: Archived.\n    v3.0.5                Inactive: Archived.\n    v3.0.4                Inactive: Archived.\n    release/3.0           Inactive: Archived.\n    release/2.x           Inactive: Archived.\n    release/1.x           Inactive: Unmaintained.\n\nLICENSING info for 3.x is in the [COPYING.md](COPYING.md) file\n\n## Contributing\n\nPlease refer to: [doc/EasyRSA-Contributing.md](doc/EasyRSA-Contributing.md)\n\n# Code style, standards\n\nWe are attempting to adhere to the POSIX standard, which can be found here:\n\nhttps://pubs.opengroup.org/onlinepubs/9699919799/\n"
        },
        {
          "name": "README.quickstart.md",
          "type": "blob",
          "size": 3.2568359375,
          "content": "Easy-RSA 3 Quickstart README\n============================\n\nThis is a quickstart guide to using Easy-RSA version 3. Detailed help on usage\nand specific commands can be found by running ./easyrsa -h.  Additional\ndocumentation can be found in the doc/ directory.\n\nIf you're upgrading from the Easy-RSA 2.x series, there are Upgrade-Notes\navailable, also under the doc/ path.\n\nSetup and signing the first request\n-----------------------------------\n\nHere is a quick run-though of what needs to happen to start a new PKI and sign\nyour first entity certificate:\n\n1. Choose a system to act as your CA and create a new PKI and CA:\n\n        ./easyrsa init-pki\n        ./easyrsa build-ca\n\n2. On the system that is requesting a certificate, init its own PKI and generate\n   a keypair/request. Note that init-pki is used _only_ when this is done on a\n   separate system (or at least a separate PKI dir.) This is the recommended\n   procedure. If you are not using this recommended procedure, skip the next\n   import-req step.\n\n        ./easyrsa init-pki\n        ./easyrsa gen-req EntityName\n\n3. Transport the request (.req file) to the CA system and import it. The name\n   given here is arbitrary and only used to name the request file.\n\n        ./easyrsa import-req /tmp/path/to/import.req EntityName\n\n4. Sign the request as the correct type. This example uses a client type:\n\n        ./easyrsa sign-req client EntityName\n\n5. Transport the newly signed certificate to the requesting entity. This entity\n   may also need the CA cert (ca.crt) unless it had a prior copy.\n\n6. The entity now has its own keypair, signed cert, and the CA.\n\nSigning subsequent requests\n---------------------------\n\nFollow steps 2-6 above to generate subsequent keypairs and have the CA return\nsigned certificates.\n\nRevoking certs and creating CRLs\n--------------------------------\n\nThis is a CA-specific task.\n\nTo permanently revoke an issued certificate, provide the short name used during\nimport:\n\n        ./easyrsa revoke EntityName\n\nTo create an updated CRL that contains all revoked certs up to that point:\n\n        ./easyrsa gen-crl\n\nAfter generation, the CRL will need to be sent to systems that reference it.\n\nGenerating Diffie-Hellman (DH) params\n-------------------------------------\n\nAfter initializing a PKI, any entity can create DH params that needs them. This\nis normally only used by a TLS server. While the CA PKI can generate this, it\nmakes more sense to do it on the server itself to avoid the need to send the\nfiles to another system after generation.\n\nDH params can be generated with:\n\n        ./easyrsa gen-dh\n\nShowing details of requests or certs\n------------------------------------\n\nTo show the details of a request or certificate by referencing the short\nEntityName, use one of the following commands. It is an error to call these\nwithout a matching file.\n\n        ./easyrsa show-req EntityName\n        ./easyrsa show-cert EntityName\n\nChanging private key passphrases\n--------------------------------\n\nRSA and EC private keys can be re-encrypted so a new passphrase can be supplied\nwith one of the following commands depending on the key type:\n\n        ./easyrsa set-rsa-pass EntityName\n        ./easyrsa set-ec-pass EntityName\n\nOptionally, the passphrase can be removed completely with the 'nopass' flag.\nConsult the command help for details.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "distro",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "easyrsa3",
          "type": "tree",
          "content": null
        },
        {
          "name": "op-test.sh",
          "type": "blob",
          "size": 11.4462890625,
          "content": "#!/bin/sh\n#\n# Downloads the run_unit_tests.sh file from easyrsa-unit-tests repo\n# and executes that - allows for disconnected testing from the easy-rsa\n# repo with TravisCI.\n\n# log\nlog () {\n\t[ \"$disable_log\" ] && return\n\tif printf '%s\\n' \"* $*\"; then\n\t\treturn\n\telse\n\t\techo \"printf failed\"\n\t\texit 9\n\tfi\n} # => log ()\n\n# clean up\nclean_up () {\n\tif [ \"$no_delete\" ]; then\n\t\tlog \"saved final state..\"\n\telse\n\t\tlog \"op-test: clean_up\"\n\t\tif [ \"$EASYRSA_NIX\" ]; then\n\t\t\t[ \"$keep_eut\" ] || rm -f \"$utest_bin\"\n\t\t\t[ \"$keep_sc\" ] || rm -f \"$sc_bin\"\n\t\t\t[ \"$keep_ssl\" ] || rm -f \"$ssl_bin\"\n\t\tfi\n\tfi\n} # => clean_up ()\n\n# curl download and openssl hash\n# wing it ..\ncurl_it () {\n\t#log \"BEGIN: curl_it\"\n\tif [ \"$#\" -eq 2 ]; then\n\t\tfile=\"$1\"\n\t\thash=\"$2\"\n\telse\n\t\tlog \"> Usage: <file> <hash>\"\n\t\treturn 1\n\tfi\n\n\tif [ \"$enable_curl\" ]; then\n\t\t: # ok\n\telse\n\t\tlog \"> curl disabled\"\n\t\treturn 0\n\tfi\n\n\t# valid target\n\tcase \"$file\" in\n\teasyrsa-unit-tests.sh|easyrsa-unit-tests-help.sh)\n\t\tunset -v require_hash\n\t;;\n\tshellcheck|openssl)\n\t\trequire_hash=1\n\t;;\n\t*)\n\t\tlog \"> invalid target: $file\"\n\t\treturn 1\n\tesac\n\n\t# download\n\tif [ \"$enable_curl\" ]; then\n\t\tlog \"> download: ${gh_url}/${file}\"\n\t\tcurl -SO \"${gh_url}/${file}\" || \\\n\t\t\tlog \"> download failed: ${file}\"\n\telse\n\t\tlog \"> curl disabled\"\n\tfi\n\n\t# hash download\n\tif [ \"${require_hash}\" ]; then\n\t\tif [ -e \"${file}\" ]; then\n\t\t\tlog \"> hash ${file}\"\n\t\t\ttemp_hash=\"$(openssl sha256 \"${file}\")\"\n\t\t\t#log \"temp_hash: $temp_hash\"\n\t\t\t#log \"hash     : $hash\"\n\t\t\tif [ \"$temp_hash\" = \"$hash\" ]; then\n\t\t\t\t: # OK - hash is good\n\t\t\telse\n\t\t\t\tlog \"> hash failed: ${file}\"\n\t\t\t\treturn 1\n\t\t\tfi\n\t\telse\n\t\t\tlog \"> file missing: ${file}\"\n\t\t\treturn 1\n\t\tfi\n\telse\n\t\tif [ -e \"${file}\" ]; then\n\t\t\t: # ok - file is here\n\t\telse\n\t\t\tlog \"> file missing: ${file}\"\n\t\t\treturn 1\n\t\tfi\n\tfi\n} # => curl_it ()\n\n################################################################################\n\n# RUN unit test\nrun_unit_test ()\n{\n\tif [ \"${utest_bin_ok}\" ] && [ \"${ssl_bin_ok}\" ]; then\n\n\t\t# Start unit tests\n\t\tlog \">>> BEGIN unit tests:\"\n\t\t[ \"$no_delete\" ] && export SAVE_PKI=1\n\n\t\tif [ \"${dry_run}\" ]; then\n\t\t\tlog \"<<dry-run>> sh ${utest_bin} ${verb} $use_passwords\"\n\t\t\testat=1\n\t\telse\n\t\t\tlog \">>>>>>: sh ${utest_bin} ${verb}\"\n\t\t\tif sh \"${utest_bin}\" \"${verb}\" \"$use_passwords\"; then\n\t\t\t\tlog \"OK\"\n\t\t\t\testat=0\n\t\t\t\tif [ \"$EASYRSA_BY_TINCANTECH\" ]; then\n\t\t\t\t\tsh \"${utest_help_bin}\" \"${help_verb}\" \"$use_passwords\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tlog \"FAIL\"\n\t\t\t\testat=1\n\t\t\tfi\n\t\tfi\n\t\tlog \"<<< END unit tests:\"\n\t\tunset SAVE_PKI\n\telse\n\t\tlog \"unit-test abandoned\"\n\t\testat=1\n\tfi\n} # => run_unit_test ()\n\n########################################\n\n## DOWNLOAD unit-test\ndownload_unit_test () {\n\t# if not present then download unit-test\n\ttarget_file=\"${utest_file}\"\n\ttarget_hash=\"${utest_hash}\"\n\tif [ \"$enable_unit_test\" ]; then\n\t\tif [ -e \"${ERSA_UT}/${target_file}\" ]; then\n\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t# version check\n\t\t\tif \"${ERSA_UT}/${target_file}\" version; then\n\t\t\t\tutest_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\tutest_bin_ok=1\n\t\t\t\texport ERSA_UTEST_CURL_TARGET=localhost\n\t\t\telse\n\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\tfi\n\t\telse\n\t\t\t# download and basic check\n\t\t\tlog \"curl_it ${target_file}\"\n\t\t\tif curl_it \"${target_file}\" \"${target_hash}\"; then\n\t\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t\t# functional check - version check\n\t\t\t\tif \"${ERSA_UT}/${target_file}\" version; then\n\t\t\t\t\tutest_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\t\tutest_bin_ok=1\n\t\t\t\t\texport ERSA_UTEST_CURL_TARGET=online\n\t\t\t\t\tunset -v keep_eut\n\t\t\t\telse\n\t\t\t\t\tlog \"version check failed: ${target_file}\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tlog \"curl_it ${target_file} - failed\"\n\t\t\tfi\n\t\tfi\n\t\t[ \"$utest_bin_ok\" ] || log \"undefined: utest_bin_ok\"\n\t\tlog \"setup unit-test - ok\"\n\telse\n\t\tlog \"unit-test disabled\"\n\tfi # => shellcheck\n}\n## DOWNLOAD unit-test\n\n## DOWNLOAD unit-test-help\ndownload_unit_test_help () {\n\t# if not present then download unit-test-help\n\ttarget_file=\"${utest_help_file}\"\n\ttarget_hash=\"${utest_hash}\"\n\tif [ \"$enable_unit_test\" ]; then\n\t\tif [ -e \"${ERSA_UT}/${target_file}\" ]; then\n\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t# version check\n\t\t\tif \"${ERSA_UT}/${target_file}\" version; then\n\t\t\t\tutest_help_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\tutest_help_bin_ok=1\n\t\t\t\texport ERSA_UTEST_CURL_TARGET=localhost\n\t\t\telse\n\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\tfi\n\t\telse\n\t\t\t# download and basic check\n\t\t\tlog \"curl_it ${target_file}\"\n\t\t\tif curl_it \"${target_file}\" \"${target_hash}\"; then\n\t\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t\t# functional check - version check\n\t\t\t\tif \"${ERSA_UT}/${target_file}\" version; then\n\t\t\t\t\tutest_help_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\t\tutest_help_bin_ok=1\n\t\t\t\t\texport ERSA_UTEST_CURL_TARGET=online\n\t\t\t\t\tunset -v keep_eut\n\t\t\t\telse\n\t\t\t\t\tlog \"version check failed: ${target_file}\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tlog \"curl_it ${target_file} - failed\"\n\t\t\tfi\n\t\tfi\n\t\t[ \"$utest_help_bin_ok\" ] || log \"undefined: utest_help_bin_ok\"\n\t\tlog \"setup unit-test-help - ok\"\n\telse\n\t\tlog \"unit-test-help disabled\"\n\tfi # => shellcheck\n}\n## DOWNLOAD unit-test-help\n\n################################################################################\n\n## USE shellcheck\n\n# Run shellcheck\nrun_shellcheck () {\n\tif [ \"$enable_shellcheck\" ] && [ \"$sc_bin_ok\" ] && [ \"$EASYRSA_NIX\" ]; then\n\t\t# shell-check easyrsa3/easyrsa\n\t\tif [ -e easyrsa3/easyrsa ]; then\n\t\t\tif \"${sc_bin}\" -s sh -S warning -x easyrsa3/easyrsa; then\n\t\t\t\tlog \"shellcheck easyrsa3/easyrsa completed - ok\"\n\t\t\telse\n\t\t\t\tlog \"shellcheck easyrsa3/easyrsa completed - FAILED\"\n\t\t\tfi\n\t\telse\n\t\t\tlog \"easyrsa binary not present, not using shellcheck\"\n\t\tfi\n\n\t\t# shell-check dev/easyrsa-tools.lib\n\t\tif [ -e dev/easyrsa-tools.lib ]; then\n\t\t\tif \"${sc_bin}\" -s sh -S warning -x dev/easyrsa-tools.lib; then\n\t\t\t\tlog \"shellcheck dev/easyrsa-tools.lib completed - ok\"\n\t\t\telse\n\t\t\t\tlog \"shellcheck dev/easyrsa-tools.lib completed - FAILED\"\n\t\t\tfi\n\t\telse\n\t\t\tlog \"dev/easyrsa-tools.lib not present, not using shellcheck\"\n\t\tfi\n\n\t\t# shell-check easyrsa-unit-tests.sh\n\t\tif [ -e easyrsa-unit-tests.sh ]; then\n\t\t\tif \"${sc_bin}\" -s sh -S warning -x easyrsa-unit-tests.sh; then\n\t\t\t\tlog \"shellcheck easyrsa-unit-tests.sh completed - ok\"\n\t\t\telse\n\t\t\t\tlog \"shellcheck easyrsa-unit-tests.sh completed - FAILED\"\n\t\t\tfi\n\t\telse\n\t\t\tlog \"easyrsa-unit-tests.sh binary not present, not using shellcheck\"\n\t\tfi\n\telse\n\t\tlog \"shellcheck abandoned\"\n\tfi\n}\n## USE shellcheck\n\n########################################\n\n## DOWNLOAD shellcheck\ndownload_shellcheck () {\n\t# if not present then download shellcheck\n\ttarget_file=\"${sc_file}\"\n\ttarget_hash=\"${sc_hash}\"\n\tif [ \"$enable_shellcheck\" ] && [ \"$EASYRSA_NIX\" ]; then\n\t\tlog \"setup shellcheck\"\n\t\tif [ -e \"${ERSA_UT}/${target_file}\" ]; then\n\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t\"${ERSA_UT}/${target_file}\" -V || \\\n\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\tsc_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\tsc_bin_ok=1\n\t\t\tlog \"shellcheck enabled\"\n\t\telse\n\t\t\t# download and basic check\n\t\t\tlog \"curl_it ${target_file}\"\n\t\t\tif curl_it \"${target_file}\" \"${target_hash}\"; then\n\t\t\t\tlog \"curl_it ${target_file} - ok\"\n\t\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t\t# functional check\n\t\t\t\tif \"${ERSA_UT}/${target_file}\" -V; then\n\t\t\t\t\tsc_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\t\tsc_bin_ok=1\n\t\t\t\t\tunset -v keep_sc\n\t\t\t\telse\n\t\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\t\tfi\n\t\t\t\tlog \"shellcheck enabled\"\n\t\t\telse\n\t\t\t\tlog \"curl_it ${target_file} - failed\"\n\t\t\tfi\n\t\tfi\n\tfi\n\n\t## DOWNLOAD shellcheck\n}\n\n################################################################################\n\n## DOWNLOAD openssl-3\ndownload_opensslv3 () {\n\t# if not present then download and then use openssl3\n\ttarget_file=\"${ssl_file}\"\n\ttarget_hash=\"${ssl_hash}\"\n\tif [ \"$enable_openssl3\" ] && [ \"$EASYRSA_NIX\" ]; then\n\t\tif [ -e \"${ERSA_UT}/${target_file}\" ]; then\n\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t# version check 'openssl version'\n\t\t\t\"${ERSA_UT}/${target_file}\" version || \\\n\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\tssl_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\tssl_bin_ok=1\n\t\t\t# Set up Easy-RSA Unit-Test for OpenSSL-v3\n\t\t\texport EASYRSA_OPENSSL=\"${ssl_bin}\"\n\t\telse\n\t\t\t# download and basic check\n\t\t\tlog \"curl_it ${target_file}\"\n\t\t\tif curl_it \"${target_file}\" \"${target_hash}\"; then\n\t\t\t\tlog \"curl_it ${target_file} - ok\"\n\t\t\t\t[ -x \"${ERSA_UT}/${target_file}\" ] || \\\n\t\t\t\t\tchmod +x \"${ERSA_UT}/${target_file}\"\n\t\t\t\t# functional check - version check 'openssl version'\n\t\t\t\tif \"${ERSA_UT}/${target_file}\" version; then\n\t\t\t\t\tssl_bin=\"${ERSA_UT}/${target_file}\"\n\t\t\t\t\tssl_bin_ok=1\n\t\t\t\t\tunset -v keep_ssl\n\t\t\t\t\t# Set up Easy-RSA Unit-Test for OpenSSL-v3\n\t\t\t\t\texport EASYRSA_OPENSSL=\"${ssl_bin}\"\n\t\t\t\telse\n\t\t\t\t\tlog \"version check failed: ${ERSA_UT}/${target_file}\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tlog \"curl_it ${target_file} - failed\"\n\t\t\tfi\n\t\tfi\n\n\t\t\tlog \"OpenSSL-v3 enabled\"\n\n\telse\n\t\tif [ \"$EASYRSA_NIX\" ]; then\n\t\t\tlog \"System SSL enabled\"\n\t\t\tssl_bin=\"openssl\"\n\t\t\tssl_bin_ok=1\n\t\telse\n\t\t\tlog \"Windows, no OpenSSL-v3\"\n\t\t\tlog \"System SSL enabled\"\n\t\t\tssl_bin=\"openssl\"\n\t\t\tssl_bin_ok=1\n\t\tfi\n\tfi\n} # => ## DOWNLOAD openssl-3\n\n################################################################################\n\n\t# Register clean_up on EXIT\n\t#trap \"exited 0\" 0\n\t# When SIGHUP, SIGINT, SIGQUIT, SIGABRT and SIGTERM,\n\t# explicitly exit to signal EXIT (non-bash shells)\n\ttrap \"clean_up\" 1\n\ttrap \"clean_up\" 2\n\ttrap \"clean_up\" 3\n\ttrap \"clean_up\" 6\n\ttrap \"clean_up\" 15\n\n\nunset -v disable_log verb no_delete \\\n\t\tenable_unit_test enable_shellcheck enable_openssl3\n\nkeep_sc=1\nkeep_ssl=1\nkeep_eut=1\n\n# Set by default\nenable_unit_test=1\nenable_curl=1\nEASYRSA_NIX=1\n\nwhile [ -n \"$1\" ]; do\n\tcase \"$1\" in\n\t--no-log)\t\t\tdisable_log=1 ;;\n\t'')\t\t\t\t\tverb='-v' ;;\n\t-v)\t\t\t\t\tverb='-v' ;;\n\t-vv)\t\t\t\tverb='-vv' ;;\n\t-sc)\t\t\t\tenable_shellcheck=1 ;;\n\t-o3)\t\t\t\tenable_openssl3=1 ;;\n\t-p)\t\t\t\t\tuse_passwords='-p' ;;\n\t-dr)\t\t\t\tdry_run=1 ;;\n\t-nt|--no-test)\t\tunset -v enable_unit_test ;;\n\t-nc|--no-curl)\t\tunset -v enable_curl ;;\n\t-nd|--no-delete)\tno_delete=1 ;;\n\t-w|--windows)\t\texport EASYRSA_WIN=1; unset -v EASYRSA_NIX ;;\n\t*)\n\t\tlog \"Unknown option: $1\"\n\t\texit 9\n\tesac\n\tshift\ndone\n\nlog \"Easy-RSA Unit Tests:\"\n\n# Layout\nERSA_UT=\"${PWD}\"\n\n# Sources\ngh_url='https://raw.githubusercontent.com/OpenVPN/easyrsa-unit-tests/master'\n\nutest_file='easyrsa-unit-tests.sh'\nunset -v utest_bin utest_bin_ok\nutest_hash='no-hash'\n\nutest_help_file='easyrsa-unit-tests-help.sh'\nunset -v utest_help_bin utest_help_bin_ok\n#utest_hash='no-hash'\nhelp_verb=\"-vv\"\n\nsc_file='shellcheck'\nunset -v sc_bin sc_bin_ok\n# v 0.8.0\n#sc_hash='SHA256(shellcheck)= f4bce23c11c3919c1b20bcb0f206f6b44c44e26f2bc95f8aa708716095fa0651'\n\n# v 0.9.0\nsc_hash='SHA256(shellcheck)= 7087178d54de6652b404c306233264463cb9e7a9afeb259bb663cc4dbfd64149'\n\nssl_file='openssl'\nunset -v ssl_bin ssl_bin_ok\n# v 3.0.3\n#ssl_hash='SHA256(openssl)= a0aed8b4aec1b72ca17c8a9ab04e10d829343a12cb5e7f8f6ae73e6f2ce026fd'\n\n# v 3.0.5\n#ssl_hash='SHA256(openssl)= 341d278423aeecbaa2b057b84b5501dd492c8f7e192c5bb9c66a260dbc022a4c'\n\n# v 3.0.7\n#ssl_hash='SHA256(openssl)= 606f8fb9d6ac7993c2f68efba8c4f022e128a8e9ab1a0921e4941d9f88a7bb5b'\n\n# v 3.1.0\nssl_hash='SHA256(openssl)= 85b562891087d4c64868d8d1f0a381407d8e23fb66c37ce9baad55cf57edbc04'\n\n# Here we go ..\n\ndownload_shellcheck\ndownload_opensslv3\ndownload_unit_test\ndownload_unit_test_help\n\nrun_shellcheck\nrun_unit_test\n\n# No trap required..\nclean_up\n\n################################################################################\n\nlog \"estat: $estat ${dry_run:+<<dry run>>}\"\nexit $estat\n\n# vim: no\n"
        },
        {
          "name": "release-keys",
          "type": "tree",
          "content": null
        },
        {
          "name": "wop-test.bat",
          "type": "blob",
          "size": 1.17578125,
          "content": "@echo off\r\n\r\nIF \"%1\"==\"/SL\" (set SAVE_LAYOUT=1) ELSE set SAVE_LAYOUT=0\r\n\r\nset SYS_ARCH=test\r\nIF %PROCESSOR_ARCHITECTURE%==x86 set SYS_ARCH=win32\r\nIF %PROCESSOR_ARCHITECTURE%==x86_64 set SYS_ARCH=win64\r\nIF %PROCESSOR_ARCHITECTURE%==AMD64 set SYS_ARCH=win64\r\nIF %SYS_ARCH%==test (\r\n\techo Fatal Error: Unknown PROCESSOR_ARCHITECTURE\r\n\tset SYS_ARCH=\r\n\texit /B 1 )\r\n\r\nset WORK_DIR=%cd%\r\nmkdir \"%WORK_DIR%\\easyrsa3\\bin\"\r\ncopy  \"%WORK_DIR%\\distro\\windows\\bin\\*\" \"%WORK_DIR%\\easyrsa3\\bin\"\r\ncopy  \"%WORK_DIR%\\distro\\windows\\%SYS_ARCH%\\*\" \"%WORK_DIR%\\easyrsa3\\bin\"\r\ncopy  \"%WORK_DIR%\\distro\\windows\\EasyRSA-Start.bat\" \"%WORK_DIR%\\easyrsa3\\EasyRSA-Start.bat\"\r\nPATH=%PATH%;%WORK_DIR%\\easyrsa3\\bin;C:\\PROGRA~1\\openssl\r\n\r\ncmd /C \"easyrsa3\\bin\\sh.exe wop-test.sh\"\r\nIF ERRORLEVEL 1 (\r\n\techo Error occurred, Exit 1\r\n\texit /B 1 )\r\n\r\nREM Success ..\r\n\tIF %SAVE_LAYOUT% EQU 0 (\r\n\t\techo rmdir /S /Q \"%WORK_DIR%\\easyrsa3\\bin\"\r\n\t\trmdir /S /Q \"%WORK_DIR%\\easyrsa3\\bin\"\r\n\t\techo del /Q \"%WORK_DIR%\\easyrsa3\\EasyRSA-Start.bat\"\r\n\t\tdel /Q \"%WORK_DIR%\\easyrsa3\\EasyRSA-Start.bat\"\r\n\t\tREM echo del \"%WORK_DIR%\\easyrsa3\\.rnd\"\r\n\t\tREM del /Q \"%WORK_DIR%\\easyrsa3\\.rnd\"\r\n\t) ELSE echo NOTICE; Saved Layout\r\n\r\nset SAVE_LAYOUT=\r\nset SYS_ARCH=\r\n"
        },
        {
          "name": "wop-test.sh",
          "type": "blob",
          "size": 2.1025390625,
          "content": "#!/bin/sh\n# shellcheck disable=SC2161,SC1091\n\n# This script is a frontend designed to create & launch a POSIX shell\n# environment suitable for use with Easy-RSA. mksh/Win32 is used with this\n# project; use with other POSIX shells for Windows may require modification to\n# this wrapper script.\n\ncd easyrsa3 || { echo \"ERROR: Cannot find easyrsa3 directory\"; exit 1; }\n\nsetup_path=\"${EASYRSA:-$PWD}\"\nexport PATH=\"$setup_path;$setup_path/bin;$PATH\"\nexport HOME=\"$setup_path\"\n\n# This prevents reading from a user's .mkshrc if they have one.\n# A user who runs mksh for other purposes might have it\nexport ENV=\"/disable-env\"\n\n# Verify required externals are present\nextern_list=\"which awk cat cp mkdir printf rm\"\nfor f in $extern_list; do\n\tif ! which \"${f}.exe\" >/dev/null 2>&1; then\n\t\techo \"\"\n\t\techo \"FATAL: EasyRSA Shell init is missing a required external file:\"\n\t\techo \"  ${f}.exe\"\n\t\techo \"  Your installation is incomplete and cannot function without the required\"\n\t\techo \"  files.\"\n\t\techo \"\"\n\t\techo \"  Press enter to exit.\"\n\t\t#shellcheck disable=SC2162\n\t\tread\n\t\texit 1\n\tfi\ndone\n\n# set_var is defined as any vars file needs it.\n# This is the same as in easyrsa, but we _don't_ export\nset_var() {\n        var=\"$1\"\n        shift\n        value=\"$*\"\n        eval \"$var=\\\"\\${$var-$value}\\\"\"\n} #=> set_var()\n\n# Check for a usable openssl bin, referencing vars if present\n[ -r \"vars\" ] && EASYRSA_CALLER=1 . \"vars\" 2>/dev/null\nif [ -z \"$EASYRSA_OPENSSL\" ] && ! which openssl.exe >/dev/null 2>&1; then\n\techo \"WARNING: openssl isn't in your system PATH. The openssl binary must be\"\n\techo \"  available in the PATH, defined in the 'vars' file, or defined in a\"\n\techo \"  named environment variable. See README-Windows.txt for more info.\"\nfi\n\n[ -f \"$setup_path/easyrsa\" ] || {\n\techo \"Missing easyrsa script. Expected to find it at: $setup_path/easyrsa\"\n\texit 2\n}\n\n# Set prompt and welcome message\nexport PS1='\nEasyRSA Shell\n# '\necho \"\"\necho \"Welcome to the EasyRSA 3 Shell for Windows.\"\necho \"Easy-RSA 3 is available under a GNU GPLv2 license.\"\necho \"\"\necho \"Invoke './easyrsa' to call the program. Without commands, help is displayed.\"\n\ncd ..\n\n./op-test.sh -w -p -v\n"
        }
      ]
    }
  ]
}