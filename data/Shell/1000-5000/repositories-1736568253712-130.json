{
  "metadata": {
    "timestamp": 1736568253712,
    "page": 130,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mvscode/frps-onekey",
      "stars": 3234,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.080078125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.59765625,
          "content": "\n## Frp服务端一键配置脚本，脚本默認获取Frp最新版本  \n## Frp server one-click configuration script. The script obtains the latest Frp version by default\n\n[![GitHub Repo][repo-shield]][repo-url]\n[![Stars][stars-shield]][stars-url]\n[![Forks][forks-shield]][forks-url]\n\n[repo-shield]: https://img.shields.io/badge/GitHub-mvscode%2Ffrps--onekey-brightgreen?style=flat-square&logo=github\n[repo-url]: https://github.com/mvscode/frps-onekey\n[stars-shield]: https://img.shields.io/github/stars/mvscode/frps-onekey.svg?style=flat-square&logo=github&color=yellow\n[stars-url]: https://github.com/mvscode/frps-onekey/stargazers\n[forks-shield]: https://img.shields.io/github/forks/mvscode/frps-onekey.svg?style=flat-square&logo=github&color=green\n[forks-url]: https://github.com/mvscode/frps-onekey/network/members\n\n\n*Frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。*\n\n* Detail(详情)：fatedier[<img alt=\"github\" src=\"https://img.shields.io/badge/github/fatedier/frp-8da0cb?style=for-the-badge&labelColor=555555&logo=github\" height=\"16\">](https://github.com/fatedier/frp)\n* Script author（脚本原作者）：clangcn [<img alt=\"github\" src=\"https://img.shields.io/badge/github/clangcn/onekey_install_shell-8da0cb?style=for-the-badge&labelColor=555555&logo=github\" height=\"16\">](https://github.com/clangcn/onekey-install-shell)\n\n## Frps-Onekey-Install-Shell For CentOS/Debian/Ubuntu/Fedora (32bit/64bit)\n\n### Install（安装）\n\n#### Gitee\n```Bash\nwget https://gitee.com/mvscode/frps-onekey/raw/master/install-frps.sh -O ./install-frps.sh\nchmod 700 ./install-frps.sh\n./install-frps.sh install\n```\n#### Github\n```Bash\nwget https://raw.githubusercontent.com/mvscode/frps-onekey/master/install-frps.sh -O ./install-frps.sh\nchmod 700 ./install-frps.sh\n./install-frps.sh install\n```\n\n\n### Uninstall（卸载）\n```Bash\n./install-frps.sh uninstall\n```\n### Update（更新）\n```Bash\n./install-frps.sh update\n```\n### Server management（服务管理器）\n```Bash\nUsage: /etc/init.d/frps {start|stop|restart|status|config|version}\n```\n \n## Script ChangeLog\n---------------------------------------\n\n### [1.0.7] - 2024-07-24\n\n#### Added\n* Add progress bar for download frps tar file \n[Issue 101](https://github.com/mvscode/frps-onekey/issues/101)\n\n#### Fixed\n* fix typo\n\n### [1.0.6] - 2024-06-25\n\n#### Added\n* Add new server os to support, RHEL,Rocky,AlmaLinux OS.\n\n* Add new server os on frps.init file\n\n#### Fixed\n* fix check server os version script bug\n\n### [1.0.5] - 2024-06-19\n\n#### Added\n* Add quic of transport protocol support,server port default same as https port.\n\n* Add user-defined functions for the kcp bind port,server port default same as bind port.\n\n#### Fixed\n* Fix the script under frps server start faild still install complete bug.\n\n### [1.0.4] - 2024-06-18\n\n#### Updated\n* Add trace option at log level, default is info\n\n* Update shell update function, ask the user if they want to update\n\n#### New\n* frps support transport heartbeatTimeout = 90, default is enable\n\n### [1.0.3] - 2024-06-16\n\n#### Amendment\n* Amend function name to frps\n\n#### Changed\n* Change curl command to get server ip from wget command [Issue 117](https://github.com/mvscode/frps-onekey/issues/117)\n\n### [1.0.2] - 2024-06-13\n\n#### Update\n* Update frp server config format to follow up the latest version.\n  ```\n  bind_addr --> bindAddr\n  bind_port --> bindPort\n  kcp_bind_port --> kcpBindPort\n  etc..\n  ```\n\n### [1.0.1] - 2024-06-07\n\n#### Changed\n* frps program config file change to frps.toml from frps.int\n\n\n\n\n\n\n\n \n\n \n  \n"
        },
        {
          "name": "frps.init",
          "type": "blob",
          "size": 4.5263671875,
          "content": "#! /bin/bash\n# chkconfig: 2345 55 25\n# Description: Startup script for frps on Debian. Place in /etc/init.d and\n# run 'update-rc.d -f frps defaults', or use the appropriate command on your\n# distro. For CentOS/Redhat run: 'chkconfig --add frps'\n#=========================================================\n#   System Required:  CentOS/Debian/Ubuntu/Fedora (32bit/64bit)\n#   Description:  Manager for frps, Written by Clang\n#   Mender：MvsCode\n#=========================================================\n### BEGIN INIT INFO\n# Provides:          frps\n# Required-Start:    $all\n# Required-Stop:     $all\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: starts the frps\n# Description:       starts frps using start-stop\n### END INIT INFO\n\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\nProgramName=\"frps\"\nProgramPath=\"/usr/local/frps\"\nNAME=frps\nBIN=${ProgramPath}/${NAME}\nCONFIGFILE=${ProgramPath}/frps.toml\nSCRIPTNAME=/etc/init.d/${NAME}\nversion=\"2024\"\nprogram_version=`${BIN} --version`\nRET_VAL=0\n\n[ -x ${BIN} ] || exit 0\nstrLog=\"\"\nfun_frps()\n{\n    echo \"\"\n    echo \"+---------------------------------------------------------+\"\n    echo \"|     Manager for ${ProgramName}, Author Clang, Mender MvsCode      |\"\n    echo \"+---------------------------------------------------------+\"\n    echo \"\"\n}\n\nfun_check_run(){\n    PID=`ps -ef | grep -v grep | grep -i \"${BIN}\" | awk '{print $2}'`\n    if [ ! -z $PID  ]; then\n        return 0\n    else\n        return 1\n    fi\n}\nfun_load_config(){\n    if [ ! -r ${CONFIGFILE} ]; then\n        echo \"config file ${CONFIGFILE} not found\"\n        return 1\n    fi\n}\nfun_start()\n{\n    if [ \"${arg1}\" = \"start\" ]; then\n      fun_frps\n    fi\n    if fun_check_run; then\n        echo \"${ProgramName} (pid $PID) already running.\"\n        return 0\n    fi\n    fun_load_config\n    echo -n \"Starting ${ProgramName}(${program_version})...\"\n    ${BIN} -c ${CONFIGFILE} >/dev/null 2>&1 &\n    sleep 1\n    if ! fun_check_run; then\n        echo \"start failed\"\n        return 1\n    fi\n    echo \" done\"\n    echo \"${ProgramName} (pid $PID)is running.\"\n    return 0\n}\n\nfun_stop(){\n    if [ \"${arg1}\" = \"stop\" ] || [ \"${arg1}\" = \"restart\" ]; then\n      fun_frps\n    fi\n    if fun_check_run; then\n        echo -n \"Stoping ${ProgramName} (pid $PID)... \"\n        kill $PID\n        if [ \"$?\" != 0 ] ; then\n            echo \" failed\"\n            return 1\n        else\n            echo \" done\"\n        fi\n    else\n        echo \"${ProgramName} is not running.\"\n    fi\n    return 0\n}\nfun_restart(){\n    fun_stop\n    fun_start\n}\nfun_status(){\n    PID=`ps -ef | grep -v grep | grep -i \"${BIN}\" | awk '{print $2}'`\n    if [ ! -z $PID ]; then\n        echo \"${ProgramName} (pid $PID) is running...\"\n    else\n        echo \"${ProgramName} is stopped\"\n        exit 0\n    fi\n}\ncheckos(){\n    if grep -Eqi \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        OS=CentOS\n    elif grep -Eqi \"Red Hat Enterprise Linux\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux\" /etc/*-release; then\n        OS=RHEL\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        OS=Fedora\n    elif grep -Eqi \"Rocky\" /etc/issue || grep -Eq \"Rocky\" /etc/*-release; then\n        OS=Rocky\n    elif grep -Eqi \"AlmaLinux\" /etc/issue || grep -Eq \"AlmaLinux\" /etc/*-release; then\n        OS=AlmaLinux\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        OS=Debian\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        OS=Ubuntu\n    else\n        echo \"Unsupported OS. Please use a supported Linux distribution and retry!\"\n        exit 1\n    fi\n}\nfun_config(){\n    if [ -s ${CONFIGFILE} ]; then\n        vi ${CONFIGFILE}\n    else\n        echo \"${ProgramName} configuration file not found!\"\n        return 1\n    fi\n}\nfun_version(){\n    echo \"${ProgramName} version ${program_version}\"\n    return 0\n}\nfun_help(){\n    ${BIN} --help\n    return 0\n}\n\narg1=$1\n[  -z ${arg1} ]\ncase \"${arg1}\" in\n    start|stop|restart|status|config)\n        fun_${arg1}\n    ;;\n    [vV][eE][rR][sS][iI][oO][nN]|-[vV][eE][rR][sS][iI][oO][nN]|--[vV][eE][rR][sS][iI][oO][nN]|-[vV]|--[vV])\n        fun_version\n    ;;\n    [Cc]|[Cc][Oo][Nn][Ff]|[Cc][Oo][Nn][Ff][Ii][Gg]|-[Cc]|-[Cc][Oo][Nn][Ff]|-[Cc][Oo][Nn][Ff][Ii][Gg]|--[Cc]|--[Cc][Oo][Nn][Ff]|--[Cc][Oo][Nn][Ff][Ii][Gg])\n        fun_config\n    ;;\n    [Hh]|[Hh][Ee][Ll][Pp]|-[Hh]|-[Hh][Ee][Ll][Pp]|--[Hh]|--[Hh][Ee][Ll][Pp])\n        fun_help\n    ;;\n    *)\n        fun_frps\n        echo \"Usage: $SCRIPTNAME {start|stop|restart|status|config|version}\"\n        RET_VAL=1\n    ;;\nesac\nexit $RET_VAL\n"
        },
        {
          "name": "generate-certs.sh",
          "type": "blob",
          "size": 2.4892578125,
          "content": "#!/bin/bash\n\n# 创建证书存放目录\nmkdir -p /etc/pki/tls/frp/ca\nmkdir -p /etc/pki/tls/frp/frps\nmkdir -p /etc/pki/tls/frp/frpc\n\n# 创建 OpenSSL 配置文件\ncat > /etc/pki/tls/frp/my-openssl.cnf << EOF\n[ ca ]\ndefault_ca = CA_default\n[ CA_default ]\nx509_extensions = usr_cert\n[ req ]\ndefault_bits        = 2048\ndefault_md          = sha256\ndefault_keyfile     = privkey.pem\ndistinguished_name  = req_distinguished_name\nattributes          = req_attributes\nx509_extensions     = v3_ca\nstring_mask         = utf8only\n[ req_distinguished_name ]\n[ req_attributes ]\n[ usr_cert ]\nbasicConstraints       = CA:FALSE\nnsComment              = \"OpenSSL Generated Certificate\"\nsubjectKeyIdentifier   = hash\nauthorityKeyIdentifier = keyid,issuer\n[ v3_ca ]\nsubjectKeyIdentifier   = hash\nauthorityKeyIdentifier = keyid:always,issuer\nbasicConstraints       = CA:true\nEOF\n\n# 生成默认 CA\necho \"====> Generating CA key and certificate\"\nopenssl genrsa -out /etc/pki/tls/frp/ca/ca.key 2048\nopenssl req -x509 -new -nodes -key /etc/pki/tls/frp/ca/ca.key -subj \"/CN=example.ca.com\" -days 5000 -out /etc/pki/tls/frp/ca/ca.crt\n\n# 生成服务器证书\necho \"====> Generating server key and certificate\"\nopenssl genrsa -out /etc/pki/tls/frp/frps/server.key 2048\nopenssl req -new -sha256 -key /etc/pki/tls/frp/frps/server.key \\\n    -subj \"/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com\" \\\n    -reqexts SAN \\\n    -config <(cat /etc/pki/tls/frp/my-openssl.cnf <(printf \"\\n[SAN]\\nsubjectAltName=DNS:localhost,IP:${defIP}\")) \\\n    -out /etc/pki/tls/frp/frps/server.csr\nopenssl x509 -req -days 365 -sha256 \\\n    -in /etc/pki/tls/frp/frps/server.csr -CA /etc/pki/tls/frp/ca/ca.crt -CAkey /etc/pki/tls/frp/ca/ca.key -CAcreateserial \\\n    -extfile <(printf \"subjectAltName=DNS:localhost,IP:${defIP}\") \\\n    -out /etc/pki/tls/frp/frps/server.crt\n\n# 生成客户端证书\necho \"====> Generating client key and certificate\"\nopenssl genrsa -out /etc/pki/tls/frp/frpc/client.key 2048\nopenssl req -new -sha256 -key /etc/pki/tls/frp/frpc/client.key \\\n    -subj \"/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com\" \\\n    -reqexts SAN \\\n    -config <(cat /etc/pki/tls/frp/my-openssl.cnf <(printf \"\\n[SAN]\\nsubjectAltName=DNS:localhost\"))\\\n    -out /etc/pki/tls/frp/frpc/client.csr\nopenssl x509 -req -days 365 -sha256 \\\n    -in /etc/pki/tls/frp/frpc/client.csr -CA /etc/pki/tls/frp/ca/ca.crt -CAkey /etc/pki/tls/frp/ca/ca.key -CAcreateserial \\\n    -extfile <(printf \"subjectAltName=DNS:localhost\") \\\n    -out /etc/pki/tls/frp/frpc/client.crt\n\necho \"Certificate generation completed.\""
        },
        {
          "name": "install-frps.sh",
          "type": "blob",
          "size": 48.001953125,
          "content": "#!/bin/bash\n\n# Set the PATH variable\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nexport PATH\n\n# Set environment variables\nexport FRPS_VER=\"$LATEST_RELEASE\"\nexport FRPS_VER_32BIT=\"$LATEST_RELEASE\"\nexport FRPS_INIT=\"https://raw.githubusercontent.com/mvscode/frps-onekey/master/frps.init\"\nexport gitee_download_url=\"https://gitee.com/mvscode/frps-onekey/releases/download\"\nexport github_download_url=\"https://github.com/fatedier/frp/releases/download\"\nexport gitee_latest_version_api=\"https://gitee.com/api/v5/repos/mvscode/frps-onekey/releases/latest\"\nexport github_latest_version_api=\"https://api.github.com/repos/fatedier/frp/releases/latest\"\n\n# Program information\nprogram_name=\"frps\"\nversion=\"1.0.7\"\nstr_program_dir=\"/usr/local/${program_name}\"\nprogram_init=\"/etc/init.d/${program_name}\"\nprogram_config_file=\"frps.toml\"\nver_file=\"/tmp/.frp_ver.sh\"\nstr_install_shell=\"https://raw.githubusercontent.com/mvscode/frps-onekey/master/install-frps.sh\"\n\n# Function to check for shell updates\nshell_update() {\n    # Clear the terminal\n    fun_frps \"clear\"\n\n    # Echo a message to indicate that we're checking for shell updates\n    echo \"Checking for shell updates...\"\n\n    # Fetch the remote shell version from the specified URL\n    remote_shell_version=$(wget --no-check-certificate -qO- \"${str_install_shell}\" | sed -n '/^version/p' | cut -d'\"' -f2)\n\n\t# Check if the local version is lower than the remote version\n\tif [[ \"${version}\" < \"${remote_shell_version}\" ]]; then\n\t# Echo a message to indicate that a new version has been found\n\techo -e \"${COLOR_YELOW}Found a newer version!${COLOR_END}\"\n\techo\n\t# Echo the local and remote versions\n\techo -e \"${COLOR_BLUE}Local version: ${version}${COLOR_END}\"\n\techo -e \"${COLOR_GREEN}Remote version: ${remote_shell_version}${COLOR_END}\"\n\techo\n\t# Ask user if they need to update\n\tread -p \"Update the latest script version? [y/N] \" -n 1 -r\n\techo\n\tif [[ $REPLY =~ ^[Yy]$ ]]; then\n\techo\n\n\t# Echo a message to indicate that we're updating the shell\n\techo -n \"Updating shell...\"\n\n\t# Attempt to download the new version and overwrite the current script\n\tif ! wget --no-check-certificate -qO \"$0\" \"${str_install_shell}\"; then\n\t\t# Echo a message to indicate that the update failed\n\t\techo -e \" [${COLOR_RED}failed${COLOR_END}]\"\n\t\techo\n\t\texit 1\n\telse\n\t\t# Echo a message to indicate that the update was successful\n\t\techo -e \" [${COLOR_GREEN}OK${COLOR_END}]\"\n\t\techo\n\t\t# Echo a message to instruct the user to re-run the script\n\t\techo -e \"${COLOR_GREEN}Please re-run${COLOR_END} ${COLOR_PINK}$0 ${frps_action}${COLOR_END}\"\n\t\techo\n\t\texit 1\n\tfi\n    else\n\t# If user chooses not to update, continue with the script\n\t    echo\n\t    echo -e \"${COLOR_YELOW}Continuing with the current script...${COLOR_END}\"\n\tfi\nfi\n}\nfun_frps(){\n    local clear_flag=\"\"\n    clear_flag=$1\n    if [[ ${clear_flag} == \"clear\" ]]; then\n        clear\n    fi\n    echo \"\"\n    echo \"+------------------------------------------------------------+\"\n    echo \"|    frps for Linux Server, Author Clang, Mender MvsCode     |\" \n    echo \"|      A tool to auto-compile & install frps on Linux        |\"\n    echo \"+------------------------------------------------------------+\"\n    echo \"\"\n}\nfun_set_text_color(){\n    COLOR_RED='\\E[1;31m'\n    COLOR_GREEN='\\E[1;32m'\n    COLOR_YELOW='\\E[1;33m'\n    COLOR_BLUE='\\E[1;34m'\n    COLOR_PINK='\\E[1;35m'\n    COLOR_PINKBACK_WHITEFONT='\\033[45;37m'\n    COLOR_GREEN_LIGHTNING='\\033[32m \\033[05m'\n    COLOR_END='\\E[0m'\n}\n# Check if user is root\nrootness(){\n    if [[ $EUID -ne 0 ]]; then\n        fun_frps\n        echo \"Error:This script must be run as root!\" 1>&2\n        exit 1\n    fi\n}\nget_char(){\n    SAVEDSTTY=`stty -g`\n    stty -echo\n    stty cbreak\n    dd if=/dev/tty bs=1 count=1 2> /dev/null\n    stty -raw\n    stty echo\n    stty $SAVEDSTTY\n}\n# Check Server OS\ncheckos(){\n    if grep -Eqi \"CentOS\" /etc/issue || grep -Eq \"CentOS\" /etc/*-release; then\n        OS=CentOS\n    elif grep -Eqi \"Red Hat Enterprise Linux\" /etc/issue || grep -Eq \"Red Hat Enterprise Linux\" /etc/*-release; then\n        OS=RHEL\n    elif grep -Eqi \"Fedora\" /etc/issue || grep -Eq \"Fedora\" /etc/*-release; then\n        OS=Fedora\n    elif grep -Eqi \"Rocky\" /etc/issue || grep -Eq \"Rocky\" /etc/*-release; then\n        OS=Rocky\n    elif grep -Eqi \"AlmaLinux\" /etc/issue || grep -Eq \"AlmaLinux\" /etc/*-release; then\n        OS=AlmaLinux\n    elif grep -Eqi \"Debian\" /etc/issue || grep -Eq \"Debian\" /etc/*-release; then\n        OS=Debian\n    elif grep -Eqi \"Ubuntu\" /etc/issue || grep -Eq \"Ubuntu\" /etc/*-release; then\n        OS=Ubuntu\n    else\n        echo \"Unsupported OS. Please use a supported Linux distribution and retry!\"\n        exit 1\n    fi\n}\n# Get version\ngetversion(){\n    local version\n    if [[ -f /etc/os-release ]]; then\n        source /etc/os-release\n        version=\"$VERSION_ID\"\n    elif [[ -f /etc/redhat-release ]]; then\n        version=$(grep -oE \"[0-9.]+\" /etc/redhat-release)\n    else\n        version=$(grep -oE \"[0-9.]+\" /etc/issue)\n    fi\n\n    if [[ -z \"$version\" ]]; then\n        echo \"Unable to determine version\" >&2\n        return 1\n    else\n        echo \"$version\"\n    fi\n}\n# Check server os version\ncheck_os_version(){\n    local required_version=$1\n    local current_version=$(getversion)\n    \n    if [[ \"$(echo -e \"$current_version\\n$required_version\" | sort -V | head -n1)\" == \"$required_version\" ]]; then\n        return 0  # when current version > required version\n    else\n        return 1  # when current version < required version\n    fi\n}\n# Check OS bit\ncheck_os_bit() {\n    local arch\n    arch=$(uname -m)\n\n    case $arch in\n        x86_64)      Is_64bit='y'; ARCHS=\"amd64\";;\n        i386|i486|i586|i686) Is_64bit='n'; ARCHS=\"386\"; FRPS_VER=\"$FRPS_VER_32BIT\";;\n        aarch64)     Is_64bit='y'; ARCHS=\"arm64\";;\n        arm*|armv*)  Is_64bit='n'; ARCHS=\"arm\"; FRPS_VER=\"$FRPS_VER_32BIT\";;\n        mips)        Is_64bit='n'; ARCHS=\"mips\"; FRPS_VER=\"$FRPS_VER_32BIT\";;\n        mips64)      Is_64bit='y'; ARCHS=\"mips64\";;\n        mips64el)    Is_64bit='y'; ARCHS=\"mips64le\";;\n        mipsel)      Is_64bit='n'; ARCHS=\"mipsle\"; FRPS_VER=\"$FRPS_VER_32BIT\";;\n        riscv64)     Is_64bit='y'; ARCHS=\"riscv64\";;\n        *)           echo \"Unknown architecture\";;\n    esac\n}\n# Disable selinux\ndisable_selinux(){\n    if [ -s /etc/selinux/config ] && grep 'SELINUX=enforcing' /etc/selinux/config; then\n        sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n        setenforce 0\n    fi\n}\npre_install_packs(){\n    local wget_flag=''\n    local killall_flag=''\n    local netstat_flag=''\n    wget --version > /dev/null 2>&1\n    wget_flag=$?\n    killall -V >/dev/null 2>&1\n    killall_flag=$?\n    netstat --version >/dev/null 2>&1\n    netstat_flag=$?\n    if [[ ${wget_flag} -gt 1 ]] || [[ ${killall_flag} -gt 1 ]] || [[ ${netstat_flag} -gt 6 ]];then\n        echo -e \"${COLOR_GREEN} Install support packs...${COLOR_END}\"\n        if [ \"${OS}\" == 'CentOS' ]; then\n            yum install -y wget psmisc net-tools\n        else\n            apt-get -y update && apt-get -y install wget psmisc net-tools\n        fi\n    fi\n}\n# Random password\nfun_randstr(){\n    strNum=$1\n    [ -z \"${strNum}\" ] && strNum=\"16\"\n    strRandomPass=\"\"\n    strRandomPass=`tr -cd '[:alnum:]' < /dev/urandom | fold -w ${strNum} | head -n1`\n    echo ${strRandomPass}\n}\nfun_getServer(){\n    def_server_url=\"github\"\n    echo \"\"\n    echo -e \"Please select ${COLOR_PINK}${program_name} download${COLOR_END} url:\"\n    echo -e \"[1].gitee\"\n    echo -e \"[2].github (default)\"\n    read -e -p \"Enter your choice (1, 2 or exit. default [${def_server_url}]): \" set_server_url\n    [ -z \"${set_server_url}\" ] && set_server_url=\"${def_server_url}\"\n    case \"${set_server_url}\" in\n        1|[Ga][Ii][Tt][Ee][Ee])\n            program_download_url=${gitee_download_url};\n            choice=1\n            ;;\n        2|[Gg][Ii][Tt][Hh][Uu][Bb])\n            program_download_url=${github_download_url};\n            choice=2\n            ;;\n        [eE][xX][iI][tT])\n            exit 1\n            ;;\n        *)\n            program_download_url=${github_download_url}\n            ;;\n    esac\n    echo    \"-----------------------------------\"\n    echo -e \"       Your select: ${COLOR_YELOW}${set_server_url}${COLOR_END}    \"\n    echo    \"-----------------------------------\"\n}\nfun_getVer(){\n    echo -e \"Loading network version for ${program_name}, please wait...\"\n    case $choice in\n        1)  LATEST_RELEASE=$(curl -s ${gitee_latest_version_api} | grep -oP '\"tag_name\":\"\\Kv[^\"]+' | cut -c2-);;\n        2)  LATEST_RELEASE=$(curl -s ${github_latest_version_api} | grep '\"tag_name\":' | cut -d '\"' -f 4 | cut -c 2-);;\n    esac\n    if [[ ! -z \"$LATEST_RELEASE\" ]]; then\n        FRPS_VER=\"$LATEST_RELEASE\"\n        echo \"FRPS_VER set to: $FRPS_VER\"\n    else\n        echo \"Failed to retrieve the latest version.\"\n    fi\n    program_latest_filename=\"frp_${FRPS_VER}_linux_${ARCHS}.tar.gz\"\n    program_latest_file_url=\"${program_download_url}/v${FRPS_VER}/${program_latest_filename}\"\n    if [ -z \"${program_latest_filename}\" ]; then\n        echo -e \"${COLOR_RED}Load network version failed!!!${COLOR_END}\"\n    else\n        echo -e \"${program_name} Latest release file ${COLOR_GREEN}${program_latest_filename}${COLOR_END}\"\n    fi\n}\nfun_download_file(){\n    # download\n    if [ ! -s ${str_program_dir}/${program_name} ]; then\n        rm -fr ${program_latest_filename} frp_${FRPS_VER}_linux_${ARCHS}\n\techo -e \"Downloading ${program_name}...\"\n\techo \"\"\n        curl -L --progress-bar \"${program_latest_file_url}\" -o \"${program_latest_filename}\" 2>&1 | show_progress\n\techo \"\"\t\t\n\tif [ $? -ne 0 ]; then\n        echo -e \" ${COLOR_RED}Download failed${COLOR_END}\"\n\texit 1\n    fi\n\t\n    # Verify the downloaded file exists and is not empty\n    if [ ! -s ${program_latest_filename} ]; then\n      echo -e \" ${COLOR_RED}Downloaded file is empty or not found${COLOR_END}\"\n      exit 1\n    fi\t\t\n      echo -e \"Extracting ${program_name}...\"\n      echo \"\"\n\t  \n      tar xzf ${program_latest_filename}\n      mv frp_${FRPS_VER}_linux_${ARCHS}/frps ${str_program_dir}/${program_name}\n      rm -fr ${program_latest_filename} frp_${FRPS_VER}_linux_${ARCHS}\n    fi\n\t\n    chown root:root -R ${str_program_dir}\n    if [ -s ${str_program_dir}/${program_name} ]; then\n        [ ! -x ${str_program_dir}/${program_name} ] && chmod 755 ${str_program_dir}/${program_name}\n    else\n      echo -e \" ${COLOR_RED}failed${COLOR_END}\"\n      exit 1\n    fi\n}\n# Helper function to format the progress bar\nshow_progress() {\n  local TOTAL_SIZE=1000000  # Assume total size is 1000000 bytes\n  local CURRENT_SIZE=0   # Initial download size is 0 bytes\n  local GREEN='\\033[1;32m'\n  local NC='\\033[0m'  # No Color\n\n  while [ $CURRENT_SIZE -lt $TOTAL_SIZE ] || [ $PERCENTAGE -lt 100 ]; do\n    PERCENTAGE=$(awk \"BEGIN {printf \\\"%.0f\\\", $CURRENT_SIZE*100/$TOTAL_SIZE}\")\n\n    if ! [[ \"$PERCENTAGE\" =~ ^[0-9]+$ ]] ; then\n      PERCENTAGE=0\n    fi\n\n    local completed=$((PERCENTAGE / 2))\n    local remaining=$((50 - completed))\n\n    if [ $PERCENTAGE -eq 100 ]; then\n      completed=50\n      remaining=0\n    fi\n\n    printf \"\\r${GREEN}%2d%% [\" \"$PERCENTAGE\"\n    for ((i = 0; i < completed; i++)); do\n     if [ $i -eq $((completed - 1)) ]; then\n      printf \">\"\n     else\n      printf \"=\"\n     fi\n    done\n    for ((i = 0; i < remaining; i++)); do\n      printf \" \"\n    done\n      printf \"]${NC}\"\n\n    CURRENT_SIZE=$((CURRENT_SIZE + $((RANDOM % 50000 + 1))))\n    sleep 0.05\n  done\n\n  echo -e \"\\nDownload complete!\"\n}\n\nfunction __readINI() {\n INIFILE=$1; SECTION=$2; ITEM=$3\n _readIni=`awk -F '=' '/\\['$SECTION'\\]/{a=1}a==1&&$1~/'$ITEM'/{print $2;exit}' $INIFILE`\necho ${_readIni}\n}\n\n# Check port\nfun_check_port(){\n    port_flag=\"\"\n    strCheckPort=\"\"\n    input_port=\"\"\n    port_flag=\"$1\"\n    strCheckPort=\"$2\"\n    if [ ${strCheckPort} -ge 1 ] && [ ${strCheckPort} -le 65535 ]; then\n        checkServerPort=`netstat -ntulp | grep \"\\b:${strCheckPort}\\b\"`\n        if [ -n \"${checkServerPort}\" ]; then\n            echo \"\"\n            echo -e \"${COLOR_RED}Error:${COLOR_END} Port ${COLOR_GREEN}${strCheckPort}${COLOR_END} is ${COLOR_PINK}used${COLOR_END},view relevant port:\"\n            netstat -ntulp | grep \"\\b:${strCheckPort}\\b\"\n            fun_input_${port_flag}_port\n        else\n            input_port=\"${strCheckPort}\"\n        fi\n    else\n        echo \"Input error! Please input correct numbers.\"\n        fun_input_${port_flag}_port\n    fi\n}\nfun_check_number(){\n    num_flag=\"\"\n    strMaxNum=\"\"\n    strCheckNum=\"\"\n    input_number=\"\"\n    num_flag=\"$1\"\n    strMaxNum=\"$2\"\n    strCheckNum=\"$3\"\n    if [ ${strCheckNum} -ge 1 ] && [ ${strCheckNum} -le ${strMaxNum} ]; then\n        input_number=\"${strCheckNum}\"\n    else\n        echo \"Input error! Please input correct numbers.\"\n        fun_input_${num_flag}\n    fi\n}\n# input configuration data\nfun_input_bind_port(){\n    def_server_port=\"5443\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}bind_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default Server Port: ${def_server_port}):\" serverport\n    [ -z \"${serverport}\" ] && serverport=\"${def_server_port}\"\n    fun_check_port \"bind\" \"${serverport}\"\n}\nfun_input_dashboard_port(){\n    def_dashboard_port=\"6443\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}dashboard_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default : ${def_dashboard_port}):\" input_dashboard_port\n    [ -z \"${input_dashboard_port}\" ] && input_dashboard_port=\"${def_dashboard_port}\"\n    fun_check_port \"dashboard\" \"${input_dashboard_port}\"\n}\nfun_input_vhost_http_port(){\n    def_vhost_http_port=\"80\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}vhost_http_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default : ${def_vhost_http_port}):\" input_vhost_http_port\n    [ -z \"${input_vhost_http_port}\" ] && input_vhost_http_port=\"${def_vhost_http_port}\"\n    fun_check_port \"vhost_http\" \"${input_vhost_http_port}\"\n}\nfun_input_vhost_https_port(){\n    def_vhost_https_port=\"443\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}vhost_https_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default : ${def_vhost_https_port}):\" input_vhost_https_port\n    [ -z \"${input_vhost_https_port}\" ] && input_vhost_https_port=\"${def_vhost_https_port}\"\n    fun_check_port \"vhost_https\" \"${input_vhost_https_port}\"\n}\nfun_input_log_max_days(){\n    def_max_days=\"15\" \n    def_log_max_days=\"3\"\n    echo \"\"\n    echo -e \"Please input ${program_name} ${COLOR_GREEN}log_max_days${COLOR_END} [1-${def_max_days}]\"\n    read -e -p \"(Default : ${def_log_max_days} day):\" input_log_max_days\n    [ -z \"${input_log_max_days}\" ] && input_log_max_days=\"${def_log_max_days}\"\n    fun_check_number \"log_max_days\" \"${def_max_days}\" \"${input_log_max_days}\"\n}\nfun_input_max_pool_count(){\n    def_max_pool=\"50\"\n    def_max_pool_count=\"5\"\n    echo \"\"\n    echo -e \"Please input ${program_name} ${COLOR_GREEN}max_pool_count${COLOR_END} [1-${def_max_pool}]\"\n    read -e -p \"(Default : ${def_max_pool_count}):\" input_max_pool_count\n    [ -z \"${input_max_pool_count}\" ] && input_max_pool_count=\"${def_max_pool_count}\"\n    fun_check_number \"max_pool_count\" \"${def_max_pool}\" \"${input_max_pool_count}\"\n}\nfun_input_dashboard_user(){\n    def_dashboard_user=\"admin\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}dashboard_user${COLOR_END}\"\n    read -e -p \"(Default : ${def_dashboard_user}):\" input_dashboard_user\n    [ -z \"${input_dashboard_user}\" ] && input_dashboard_user=\"${def_dashboard_user}\"\n}\nfun_input_dashboard_pwd(){\n    def_dashboard_pwd=`fun_randstr 8`\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}dashboard_pwd${COLOR_END}\"\n    read -e -p \"(Default : ${def_dashboard_pwd}):\" input_dashboard_pwd\n    [ -z \"${input_dashboard_pwd}\" ] && input_dashboard_pwd=\"${def_dashboard_pwd}\"\n}\nfun_input_token(){\n    def_token=`fun_randstr 16`\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}token${COLOR_END}\"\n    read -e -p \"(Default : ${def_token}):\" input_token\n    [ -z \"${input_token}\" ] && input_token=\"${def_token}\"\n}\nfun_input_subdomain_host(){\n    def_subdomain_host=${defIP}\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}subdomain_host${COLOR_END}\"\n    read -e -p \"(Default : ${def_subdomain_host}):\" input_subdomain_host\n    [ -z \"${input_subdomain_host}\" ] && input_subdomain_host=\"${def_subdomain_host}\"\n}\nfun_input_kcp_bind_port(){\n    def_kcp_bind_port=\"${serverport}\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}kcp_bind_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default kcp bind port: ${def_kcp_bind_port}):\" input_kcp_bind_port\n    [ -z \"${input_kcp_bind_port}\" ] && input_kcp_bind_port=\"${def_kcp_bind_port}\"\n    fun_check_port \"input_kcp_bind_port\" \"${input_kcp_bind_port}\"\n}\nfun_input_quic_bind_port(){\n    def_quic_bind_port=\"${input_vhost_https_port}\"\n    echo \"\"\n    echo -n -e \"Please input ${program_name} ${COLOR_GREEN}quic_bind_port${COLOR_END} [1-65535]\"\n    read -e -p \"(Default quic bind port: ${def_quic_bind_port}):\" input_quic_bind_port\n    [ -z \"${input_quic_bind_port}\" ] && input_quic_bind_port=\"${def_quic_bind_port}\"\n    fun_check_port \"input_quic_bind_port\" \"${input_quic_bind_port}\"\n}\npre_install_frps(){\n    fun_frps\n    echo -e \"Check your server setting, please wait...\"\n\techo \"\"\n    disable_selinux\n\n    # Check if the frps service is already running\n    if pgrep -x \"${program_name}\" >/dev/null; then\n    echo -e \"${COLOR_GREEN}${program_name} is already installed and running.${COLOR_END}\"\nelse\n    echo -e \"${COLOR_YELOW}${program_name} is not running or not install.${COLOR_END}\"\n    echo \"\"\n    read -p \"Do you want to re-install ${program_name}? (y/n) \" choice\n\techo \"\"\n    case \"$choice\" in\n      y|Y)\n        echo -e \"${COLOR_GREEN} Re-installing ${program_name}...${COLOR_END}\"\n        ;;\n      n|N)\n        echo -e \"${COLOR_YELOW} Skipping installation.${COLOR_END}\"\n\t\techo \"\"\n\t\texit 1\n        ;;\n      *)\n        echo -e \"${COLOR_YELOW}Invalid choice. Skipping installation. ${COLOR_END}\"\n\t\techo \"\"\n\t\texit 1\n        ;;\n    esac\n        clear\n        fun_frps\n        fun_getServer\n        fun_getVer\n        echo -e \"\"\n        echo -e \"Loading You Server IP, please wait...\"\n        defIP=$(curl -s https://api.ipify.org)\n        echo -e \"You Server IP:${COLOR_GREEN}${defIP}${COLOR_END}\"\n        echo -e \"\"\n        echo -e \"————————————————————————————————————————————\"\n        echo -e \"     ${COLOR_RED}Please input your server setting:${COLOR_END}\"\n        echo -e \"————————————————————————————————————————————\"\n        fun_input_bind_port\n        [ -n \"${input_port}\" ] && set_bind_port=\"${input_port}\"\n        echo -e \"${program_name} bind_port: ${COLOR_YELOW}${set_bind_port}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_vhost_http_port\n        [ -n \"${input_port}\" ] && set_vhost_http_port=\"${input_port}\"\n        echo -e \"${program_name} vhost_http_port: ${COLOR_YELOW}${set_vhost_http_port}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_vhost_https_port\n        [ -n \"${input_port}\" ] && set_vhost_https_port=\"${input_port}\"\n        echo -e \"${program_name} vhost_https_port: ${COLOR_YELOW}${set_vhost_https_port}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_dashboard_port\n        [ -n \"${input_port}\" ] && set_dashboard_port=\"${input_port}\"\n        echo -e \"${program_name} dashboard_port: ${COLOR_YELOW}${set_dashboard_port}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_dashboard_user\n        [ -n \"${input_dashboard_user}\" ] && set_dashboard_user=\"${input_dashboard_user}\"\n        echo -e \"${program_name} dashboard_user: ${COLOR_YELOW}${set_dashboard_user}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_dashboard_pwd\n        [ -n \"${input_dashboard_pwd}\" ] && set_dashboard_pwd=\"${input_dashboard_pwd}\"\n        echo -e \"${program_name} dashboard_pwd: ${COLOR_YELOW}${set_dashboard_pwd}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_token\n        [ -n \"${input_token}\" ] && set_token=\"${input_token}\"\n        echo -e \"${program_name} token: ${COLOR_YELOW}${set_token}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_subdomain_host\n        [ -n \"${input_subdomain_host}\" ] && set_subdomain_host=\"${input_subdomain_host}\"\n        echo -e \"${program_name} subdomain_host: ${COLOR_YELOW}${set_subdomain_host}${COLOR_END}\"\n        echo -e \"\"\n        fun_input_max_pool_count\n        [ -n \"${input_number}\" ] && set_max_pool_count=\"${input_number}\"\n        echo -e \"${program_name} max_pool_count: ${COLOR_YELOW}${set_max_pool_count}${COLOR_END}\"\n        echo -e \"\"\n        echo -e \"Please select ${COLOR_GREEN}log_level${COLOR_END}\"\n        echo    \"1: info (default)\"\n        echo    \"2: warn\"\n        echo    \"3: error\"\n        echo    \"4: debug\"\n        echo    \"5: trace\"\n        echo    \"-------------------------\"\n        read -e -p \"Enter your choice (1, 2, 3, 4, 5 or exit. default [1]): \" str_log_level\n        case \"${str_log_level}\" in\n\t\t\t1|[Ii][Nn][Ff][Oo])\n\t\t\t\tstr_log_level=\"info\"\n\t\t\t\t;;\n\t\t\t2|[Ww][Aa][Rr][Nn])\n\t\t\t\tstr_log_level=\"warn\"\n\t\t\t\t;;\n\t\t\t3|[Ee][Rr][Rr][Oo][Rr])\n\t\t\t\tstr_log_level=\"error\"\n\t\t\t\t;;\n\t\t\t4|[Dd][Ee][Bb][Uu][Gg])\n\t\t\t\tstr_log_level=\"debug\"\n\t\t\t\t;;\n\t\t\t5|[Tt][Rr][Aa][Cc][Ee])\n\t\t\t\tstr_log_level=\"trace\"\n\t\t\t\t;;\n\t\t\t[eE][xX][iI][tT])\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tstr_log_level=\"info\"\n\t\t\t\t;;\n\t\tesac\n\t\techo -e \"log_level: ${COLOR_YELOW}${str_log_level}${COLOR_END}\"\n\t\techo -e \"\"\n        fun_input_log_max_days\n        [ -n \"${input_number}\" ] && set_log_max_days=\"${input_number}\"\n        echo -e \"${program_name} log_max_days: ${COLOR_YELOW}${set_log_max_days}${COLOR_END}\"\n        echo -e \"\"\n        echo -e \"Please select ${COLOR_GREEN}log_file${COLOR_END}\"\n        echo    \"1: enable (default)\"\n        echo    \"2: disable\"\n        echo \"-------------------------\"\n        read -e -p \"Enter your choice (1, 2 or exit. default [1]): \" str_log_file\n        case \"${str_log_file}\" in\n            1|[yY]|[yY][eE][sS]|[oO][nN]|[tT][rR][uU][eE]|[eE][nN][aA][bB][lL][eE])\n                str_log_file=\"./frps.log\"\n                str_log_file_flag=\"enable\"\n                ;;\n            0|2|[nN]|[nN][oO]|[oO][fF][fF]|[fF][aA][lL][sS][eE]|[dD][iI][sS][aA][bB][lL][eE])\n                str_log_file=\"/dev/null\"\n                str_log_file_flag=\"disable\"\n                ;;\n            [eE][xX][iI][tT])\n                exit 1\n                ;;\n            *)\n                str_log_file=\"./frps.log\"\n                str_log_file_flag=\"enable\"\n                ;;\n        esac\n        echo -e \"log_file: ${COLOR_YELOW}${str_log_file_flag}${COLOR_END}\"\n        echo -e \"\"\n        echo -e \"Please select ${COLOR_GREEN}tcp_mux${COLOR_END}\"\n        echo    \"1: enable (default)\"\n        echo    \"2: disable\"\n        echo \"-------------------------\"         \n        read -e -p \"Enter your choice (1, 2 or exit. default [1]): \" str_tcp_mux\n        case \"${str_tcp_mux}\" in\n            1|[yY]|[yY][eE][sS]|[oO][nN]|[tT][rR][uU][eE]|[eE][nN][aA][bB][lL][eE])\n                set_tcp_mux=\"true\"\n                ;;\n            0|2|[nN]|[nN][oO]|[oO][fF][fF]|[fF][aA][lL][sS][eE]|[dD][iI][sS][aA][bB][lL][eE])\n                set_tcp_mux=\"false\"\n                ;;\n            [eE][xX][iI][tT])\n                exit 1\n                ;;\n            *)\n                set_tcp_mux=\"true\"\n                ;;\n        esac\n        echo -e \"tcp_mux: ${COLOR_YELOW}${set_tcp_mux}${COLOR_END}\"\n        echo -e \"\"\n        echo -e \"Please select ${COLOR_GREEN}transport protocol support${COLOR_END}\"\n        echo    \"1: enable (default)\"\n        echo    \"2: disable\"\n        echo \"-------------------------\"  \n        read -e -p \"Enter your choice (1, 2 or exit. default [1]): \" str_transport_protocol\n        case \"${str_transport_protocol}\" in\n            1|[yY]|[yY][eE][sS]|[oO][nN]|[tT][rR][uU][eE]|[eE][nN][aA][bB][lL][eE])\n                set_transport_protocol=\"enable\"\n\t\t\t\tfun_input_kcp_bind_port\n        [ -n \"${input_port}\" ] && set_kcp_bind_port=\"${input_kcp_bind_port}\"\n        echo -e \"${program_name} kcp_bind_port: ${COLOR_YELOW}${set_kcp_bind_port}${COLOR_END}\"\n        echo -e \"\"\n\t\t\t    fun_input_quic_bind_port\n        [ -n \"${input_port}\" ] && set_quic_bind_port=\"${input_quic_bind_port}\"\n        echo -e \"${program_name} quic_bind_port: ${COLOR_YELOW}${set_quic_bind_port}${COLOR_END}\"\n        echo -e \"\"\n                ;;\n            0|2|[nN]|[nN][oO]|[oO][fF][fF]|[fF][aA][lL][sS][eE]|[dD][iI][sS][aA][bB][lL][eE])\n                set_transport_protocol=\"disable\"\n\t\t\t\tset_kcp_bind_port=0\n                set_quic_bind_port=0\n                ;;\n            [eE][xX][iI][tT])\n                exit 1\n                ;;\n            *)\n                set_transport_protocol=\"enable\"\n\t\t\t\tfun_input_kcp_bind_port\n        [ -n \"${input_port}\" ] && set_kcp_bind_port=\"${input_kcp_bind_port}\"\n        echo -e \"${program_name} kcp_bind_port: ${COLOR_YELOW}${set_kcp_bind_port}${COLOR_END}\"\n        echo -e \"\"\n\t\t\t    fun_input_quic_bind_port\n        [ -n \"${input_port}\" ] && set_quic_bind_port=\"${input_quic_bind_port}\"\n        echo -e \"${program_name} quic_bind_port: ${COLOR_YELOW}${set_quic_bind_port}${COLOR_END}\"\n        echo -e \"\"\n                ;;\n        esac\n        echo -e \"transport protocol support: ${COLOR_YELOW}${set_transport_protocol}${COLOR_END}\"\n        echo -e \"\"\n\n        echo \"============== Check your input ==============\"\n        echo -e \"You Server IP      : ${COLOR_GREEN}${defIP}${COLOR_END}\"\n        echo -e \"Bind port          : ${COLOR_GREEN}${set_bind_port}${COLOR_END}\"\n        echo -e \"vhost http port    : ${COLOR_GREEN}${set_vhost_http_port}${COLOR_END}\"\n        echo -e \"vhost https port   : ${COLOR_GREEN}${set_vhost_https_port}${COLOR_END}\"\n        echo -e \"Dashboard port     : ${COLOR_GREEN}${set_dashboard_port}${COLOR_END}\"\n        echo -e \"Dashboard user     : ${COLOR_GREEN}${set_dashboard_user}${COLOR_END}\"\n        echo -e \"Dashboard password : ${COLOR_GREEN}${set_dashboard_pwd}${COLOR_END}\"\n        echo -e \"token              : ${COLOR_GREEN}${set_token}${COLOR_END}\"\n        echo -e \"subdomain_host     : ${COLOR_GREEN}${set_subdomain_host}${COLOR_END}\"\n        echo -e \"tcp mux            : ${COLOR_GREEN}${set_tcp_mux}${COLOR_END}\"\n        echo -e \"Max Pool count     : ${COLOR_GREEN}${set_max_pool_count}${COLOR_END}\"\n        echo -e \"Log level          : ${COLOR_GREEN}${str_log_level}${COLOR_END}\"\n        echo -e \"Log max days       : ${COLOR_GREEN}${set_log_max_days}${COLOR_END}\"\n        echo -e \"Log file           : ${COLOR_GREEN}${str_log_file_flag}${COLOR_END}\"\n        echo -e \"transport protocol : ${COLOR_GREEN}${set_transport_protocol}${COLOR_END}\"\n        echo -e \"kcp bind port      : ${COLOR_GREEN}${set_kcp_bind_port}${COLOR_END}\"\n        echo -e \"quic bind port     : ${COLOR_GREEN}${set_quic_bind_port}${COLOR_END}\"\n        echo \"==============================================\"\n        echo \"\"\n        echo \"Press any key to start...or Press Ctrl+c to cancel\"\n\n        char=`get_char`\n        install_program_server_frps\n    fi\n}\n# ====== install server ======\ninstall_program_server_frps(){\n    [ ! -d ${str_program_dir} ] && mkdir -p ${str_program_dir}\n    cd ${str_program_dir}\n    echo \"${program_name} install path:$PWD\"\n\n    echo -n \"config file for ${program_name} ...\"\n    \n# Write the configuration to the frps config file\n\ncat << EOF > \"${str_program_dir}/${program_config_file}\"\n\nbindAddr = \"0.0.0.0\"\nbindPort = ${set_bind_port}\n\n# udp port used for kcp protocol, it can be same with 'bindPort'.\n# if not set, kcp is disabled in frps.\nkcpBindPort = ${set_kcp_bind_port}\n\n# udp port used for quic protocol.\n# if not set, quic is disabled in frps.\nquicBindPort = ${set_quic_bind_port}\n\n# Specify which address proxy will listen for, default value is same with bindAddr\n# proxyBindAddr = \"127.0.0.1\"\n\n# quic protocol options\n# transport.quic.keepalivePeriod = 10\n# transport.quic.maxIdleTimeout = 30\n# transport.quic.maxIncomingStreams = 100000\n\n# Heartbeat configure, it's not recommended to modify the default value\n# The default value of heartbeatTimeout is 90. Set negative value to disable it.\ntransport.heartbeatTimeout = 90\n\n# Pool count in each proxy will keep no more than maxPoolCount.\ntransport.maxPoolCount = ${set_max_pool_count}\n\n# If tcp stream multiplexing is used, default is true\ntransport.tcpMux = ${set_tcp_mux}\n\n# Specify keep alive interval for tcp mux.\n# only valid if tcpMux is true.\n# transport.tcpMuxKeepaliveInterval = 30\n\n# tcpKeepalive specifies the interval between keep-alive probes for an active network connection between frpc and frps.\n# If negative, keep-alive probes are disabled.\n# transport.tcpKeepalive = 7200\n\n# transport.tls.force specifies whether to only accept TLS-encrypted connections. By default, the value is false.\n# transport.tls.force = false\n\n# transport.tls.certFile = \"server.crt\"\n# transport.tls.keyFile = \"server.key\"\n# transport.tls.trustedCaFile = \"ca.crt\"\n\n# If you want to support virtual host, you must set the http port for listening (optional)\n# Note: http port and https port can be same with bindPort\nvhostHTTPPort = ${set_vhost_http_port}\nvhostHTTPSPort = ${set_vhost_https_port}\n\n# Response header timeout(seconds) for vhost http server, default is 60s\n# vhostHTTPTimeout = 60\n\n# tcpmuxHTTPConnectPort specifies the port that the server listens for TCP\n# HTTP CONNECT requests. If the value is 0, the server will not multiplex TCP\n# requests on one single port. If it's not - it will listen on this value for\n# HTTP CONNECT requests. By default, this value is 0.\n# tcpmuxHTTPConnectPort = 1337\n\n# If tcpmuxPassthrough is true, frps won't do any update on traffic.\n# tcpmuxPassthrough = false\n\n# Configure the web server to enable the dashboard for frps.\n# dashboard is available only if webServerport is set.\nwebServer.addr = \"0.0.0.0\"\nwebServer.port = ${set_dashboard_port}\nwebServer.user = \"${set_dashboard_user}\"\nwebServer.password = \"${set_dashboard_pwd}\"\n# webServer.tls.certFile = \"server.crt\"\n# webServer.tls.keyFile = \"server.key\"\n# dashboard assets directory(only for debug mode)\n# webServer.assetsDir = \"./static\"\n\n# Enable golang pprof handlers in dashboard listener.\n# Dashboard port must be set first\n# webServer.pprofEnable = false\n\n# enablePrometheus will export prometheus metrics on webServer in /metrics api.\n# enablePrometheus = true\n\n# console or real logFile path like ./frps.log\nlog.to = \"${str_log_file_flag}\"\n# trace, debug, info, warn, error\nlog.level = \"${str_log_level}\"\nlog.maxDays = ${set_log_max_days}\n# disable log colors when log.to is console, default is false\n# log.disablePrintColor = false\n\n# DetailedErrorsToClient defines whether to send the specific error (with debug info) to frpc. By default, this value is true.\n# detailedErrorsToClient = true\n\n# auth.method specifies what authentication method to use authenticate frpc with frps.\n# If \"token\" is specified - token will be read into login message.\n# If \"oidc\" is specified - OIDC (Open ID Connect) token will be issued using OIDC settings. By default, this value is \"token\".\nauth.method = \"token\"\n\n# auth.additionalScopes specifies additional scopes to include authentication information.\n# Optional values are HeartBeats, NewWorkConns.\n# auth.additionalScopes = [\"HeartBeats\", \"NewWorkConns\"]\n\n# auth token\nauth.token = \"${set_token}\"\n\n# userConnTimeout specifies the maximum time to wait for a work connection.\n# userConnTimeout = 10\n\n# Max ports can be used for each client, default value is 0 means no limit\n# maxPortsPerClient = 0\n\n# If subDomainHost is not empty, you can set subdomain when type is http or https in frpc's configure file\n# When subdomain is test, the host used by routing is test.frps.com\nsubDomainHost = \"${set_subdomain_host}\"\n\n# custom 404 page for HTTP requests\n# custom404Page = \"/path/to/404.html\"\n\n# specify udp packet size, unit is byte. If not set, the default value is 1500.\n# This parameter should be same between client and server.\n# It affects the udp and sudp proxy.\n# udpPacketSize = 1500\n\n# Retention time for NAT hole punching strategy data.\n# natholeAnalysisDataReserveHours = 168\n\n# ssh tunnel gateway\n# If you want to enable this feature, the bindPort parameter is required, while others are optional.\n# By default, this feature is disabled. It will be enabled if bindPort is greater than 0.\n# sshTunnelGateway.bindPort = 2200\n# sshTunnelGateway.privateKeyFile = \"/home/frp-user/.ssh/id_rsa\"\n# sshTunnelGateway.autoGenPrivateKeyPath = \"\"\n# sshTunnelGateway.authorizedKeysFile = \"/home/frp-user/.ssh/authorized_keys\"\nEOF\n    echo \" done\"\n\n\techo -n \"download ${program_name} ...\"\n\trm -f ${str_program_dir}/${program_name} ${program_init}\n\tfun_download_file\n\techo \"Done\"\n\techo \"\"\n\techo -n \"download ${program_init}...\"\n\tif [ ! -s ${program_init} ]; then\n\t\tif ! wget  -q ${FRPS_INIT} -O ${program_init}; then\n\t\t\techo -e \" ${COLOR_RED}failed${COLOR_END}\"\n\t\t\texit 1\n\t\tfi\n\tfi\n\t[ ! -x ${program_init} ] && chmod +x ${program_init}\n\techo \" done\"\n\n\techo -n \"setting ${program_name} boot...\"\n\t\n\t[ ! -x ${program_init} ] && chmod +x ${program_init}\n\t\n\tif [ \"${OS}\" == 'CentOS' ]; then\n\t\tchmod +x ${program_init}\n\t\tchkconfig --add ${program_name}\n\telse\n\t\tchmod +x ${program_init}\n\t\tupdate-rc.d -f ${program_name} defaults\n\tfi\n\t\n\techo \" done\"\n\n\t[ -s ${program_init} ] && ln -sf ${program_init} /usr/bin/${program_name}\n\n\t# Start the frps service\n\t${program_init} start\n\n\t# Check if the frps service started successfully\n\tif pgrep -x \"${program_name}\" >/dev/null; then\n\t\techo \"${program_name} service started successfully.\"\n\t\tfun_frps\n\t\techo -e \"${COLOR_GREEN}\n\t┌─────────────────────────────────────────┐\n\t│   frp service started successfully.     │\n\t└─────────────────────────────────────────┘\n\t┌─────────────────────────────────────────┐\n\t│  Installation completed successfully.   │\n\t└─────────────────────────────────────────┘${COLOR_END}\"\n\techo \"\"\n\telse\n\t\techo -e \"${COLOR_RED}\n\t┌─────────────────────────────────────────┐\n\t│   frp service failed to start.          │\n\t└─────────────────────────────────────────┘\t\n\t┌─────────────────────────────────────────┐\n\t│ Installation failed, Please re-install. │\n\t└─────────────────────────────────────────┘${COLOR_END}\"\n\techo \"\"\n\t# Remove the installed service\n    if [ \"${OS}\" == 'CentOS' ]; then\n        chkconfig --del ${program_name}\n    else\n        update-rc.d -f ${program_name} remove\n    fi\n\t\t\texit 1\nfi\n    # Print the frps configuration\n    echo \"\"\n    echo \"Congratulations, ${program_name} install completed!\"\n    echo \"================================================\"\n    echo -e \"You Server IP      : ${COLOR_GREEN}${defIP}${COLOR_END}\"\n    echo -e \"bind port          : ${COLOR_GREEN}${set_bind_port}${COLOR_END}\"\n    echo -e \"vhost http port    : ${COLOR_GREEN}${set_vhost_http_port}${COLOR_END}\"\n    echo -e \"vhost https port   : ${COLOR_GREEN}${set_vhost_https_port}${COLOR_END}\"\n    echo -e \"token              : ${COLOR_GREEN}${set_token}${COLOR_END}\"\n    echo -e \"subdomain_host     : ${COLOR_GREEN}${set_subdomain_host}${COLOR_END}\"\n    echo -e \"tcp mux            : ${COLOR_GREEN}${set_tcp_mux}${COLOR_END}\"\n    echo -e \"Max Pool count     : ${COLOR_GREEN}${set_max_pool_count}${COLOR_END}\"\n    echo -e \"Log level          : ${COLOR_GREEN}${str_log_level}${COLOR_END}\"\n    echo -e \"Log max days       : ${COLOR_GREEN}${set_log_max_days}${COLOR_END}\"\n    echo -e \"Log file           : ${COLOR_GREEN}${str_log_file_flag}${COLOR_END}\"\n    echo -e \"transport protocol : ${COLOR_GREEN}${set_transport_protocol}${COLOR_END}\"\n    echo -e \"kcp bind port      : ${COLOR_GREEN}${set_kcp_bind_port}${COLOR_END}\"\n    echo -e \"quic bind port     : ${COLOR_GREEN}${set_quic_bind_port}${COLOR_END}\"\t\n    echo \"================================================\"\n    echo -e \"${program_name} Dashboard     : ${COLOR_GREEN}http://${set_subdomain_host}:${set_dashboard_port}/${COLOR_END}\"\n    echo -e \"Dashboard port     : ${COLOR_GREEN}${set_dashboard_port}${COLOR_END}\"\n    echo -e \"Dashboard user     : ${COLOR_GREEN}${set_dashboard_user}${COLOR_END}\"\n    echo -e \"Dashboard password : ${COLOR_GREEN}${set_dashboard_pwd}${COLOR_END}\"\n    echo \"================================================\"\n    echo \"\"\n    echo -e \"${program_name} status manage : ${COLOR_PINKBACK_WHITEFONT}${program_name}${COLOR_END} {${COLOR_GREEN}start|stop|restart|status|config|version${COLOR_END}}\"\n    echo -e \"Example:\"\n    echo -e \"  start: ${COLOR_PINK}${program_name}${COLOR_END} ${COLOR_GREEN}start${COLOR_END}\"\n    echo -e \"   stop: ${COLOR_PINK}${program_name}${COLOR_END} ${COLOR_GREEN}stop${COLOR_END}\"\n    echo -e \"restart: ${COLOR_PINK}${program_name}${COLOR_END} ${COLOR_GREEN}restart${COLOR_END}\"\n    exit 0\n}\n############################### configure ##################################\nconfigure_program_server_frps(){\n    if [ -s ${str_program_dir}/${program_config_file} ]; then\n        vi ${str_program_dir}/${program_config_file}\n    else\n        echo \"${program_name} configuration file not found!\"\n        exit 1\n    fi\n}\n############################### uninstall ##################################\nuninstall_program_server_frps(){\n    fun_frps\n    if [ -s ${program_init} ] || [ -s ${str_program_dir}/${program_name} ] ; then\n        echo \"============== Uninstall ${program_name} ==============\"\n        str_uninstall=\"n\"\n        echo -n -e \"${COLOR_YELOW}You want to uninstall?${COLOR_END}\"\n        read -e -p \"[Y/N]:\" str_uninstall\n        case \"${str_uninstall}\" in\n        [yY]|[yY][eE][sS])\n            echo \"\"\n            echo \"You select [Yes], press any key to continue.\"\n            str_uninstall=\"y\"\n            char=`get_char`\n\n            # Stop frps server\n            ${program_init} stop\n\n            rm -f ${program_init} /var/run/${program_name}.pid /usr/bin/${program_name}\n            rm -fr ${str_program_dir}\n            echo \"${program_name} uninstall success!\"\n            ;;\n        *)\n            echo \"\"\n            str_uninstall=\"n\"\n            esac\n        if [ \"${str_uninstall}\" == 'n' ]; then\n            echo \"You select [No],shell exit!\"\n        fi\n    else\n        echo \"${program_name} Not install!\"\n    fi\n    exit 0\n}\n############################### update ##################################\nupdate_config_frps(){\n    if [ ! -r \"${str_program_dir}/${program_config_file}\" ]; then\n        echo \"config file ${str_program_dir}/${program_config_file} not found.\"\n    else\n        search_dashboard_user=`grep \"dashboard_user\" ${str_program_dir}/${program_config_file}`\n        search_dashboard_pwd=`grep \"dashboard_pwd\" ${str_program_dir}/${program_config_file}`\n        search_kcp_bind_port=`grep \"kcp_bind_port\" ${str_program_dir}/${program_config_file}`\n\t\tsearch_quic_bind_port=`grep \"quic_bind_port\" ${str_program_dir}/${program_config_file}`\n        search_tcp_mux=`grep \"tcp_mux\" ${str_program_dir}/${program_config_file}`\n        search_token=`grep \"privilege_token\" ${str_program_dir}/${program_config_file}`\n        search_allow_ports=`grep \"privilege_allow_ports\" ${str_program_dir}/${program_config_file}`\n        if [ -z \"${search_dashboard_user}\" ] || [ -z \"${search_dashboard_pwd}\" ] || [ -z \"${search_kcp_bind_port}\" ] || [ -z \"${search_quic_bind_port}\" ] || [ -z \"${search_tcp_mux}\" ] || [ ! -z \"${search_token}\" ] || [ ! -z \"${search_allow_ports}\" ];then\n            echo -e \"${COLOR_GREEN}Configuration files need to be updated, now setting:${COLOR_END}\"\n            echo \"\"\n            if [ ! -z \"${search_token}\" ];then\n                sed -i \"s/privilege_token/token/\" ${str_program_dir}/${program_config_file}\n            fi\n            if [ -z \"${search_dashboard_user}\" ] && [ -z \"${search_dashboard_pwd}\" ];then\n                def_dashboard_user_update=\"admin\"\n                read -e -p \"Please input dashboard_user (Default: ${def_dashboard_user_update}):\" set_dashboard_user_update\n                [ -z \"${set_dashboard_user_update}\" ] && set_dashboard_user_update=\"${def_dashboard_user_update}\"\n                echo \"${program_name} dashboard_user: ${set_dashboard_user_update}\"\n                echo \"\"\n                def_dashboard_pwd_update=`fun_randstr 8`\n                read -e -p \"Please input dashboard_pwd (Default: ${def_dashboard_pwd_update}):\" set_dashboard_pwd_update\n                [ -z \"${set_dashboard_pwd_update}\" ] && set_dashboard_pwd_update=\"${def_dashboard_pwd_update}\"\n                echo \"${program_name} dashboard_pwd: ${set_dashboard_pwd_update}\"\n                echo \"\"\n                sed -i \"/dashboard_port =.*/a\\dashboard_user = ${set_dashboard_user_update}\\ndashboard_pwd = ${set_dashboard_pwd_update}\\n\" ${str_program_dir}/${program_config_file}\n            fi\n            if [ -z \"${search_kcp_bind_port}\" ];then \n                echo -e \"${COLOR_GREEN}Please select transport protocol support${COLOR_END}\"\n                echo \"1: enable (default)\"\n                echo \"2: disable\"\n                echo \"-------------------------\"  \n                read -e -p \"Enter your choice (1, 2 or exit. default [1]): \" str_transport_protocol\n                case \"${str_transport_protocol}\" in\n                    1|[yY]|[yY][eE][sS]|[oO][nN]|[tT][rR][uU][eE]|[eE][nN][aA][bB][lL][eE])\n                        set_transport_protocol=\"enable\"\n                        ;;\n                    0|2|[nN]|[nN][oO]|[oO][fF][fF]|[fF][aA][lL][sS][eE]|[dD][iI][sS][aA][bB][lL][eE])\n                        set_transport_protocol=\"disable\"\n                        ;;\n                    [eE][xX][iI][tT])\n                        exit 1\n                        ;;\n                    *)\n                        set_transport_protocol=\"enable\"\n                        ;;\n                esac\n                echo \"transport protocol support: ${set_transport_protocol}\"\n                def_kcp_bind_port=( $( __readINI ${str_program_dir}/${program_config_file} common bind_port ) )\n                if [[ \"${set_transport_protocol}\" == \"disable\" ]]; then\n                    sed -i \"/^bind_port =.*/a\\# udp port used for transport protocol, it can be same with 'bind_port'\\n# if not set, transport protocol is disabled in frps\\n#kcp_bind_port = ${def_kcp_bind_port}\\n\" ${str_program_dir}/${program_config_file}\n                else\n                    sed -i \"/^bind_port =.*/a\\# udp port used for transport protocol, it can be same with 'bind_port'\\n# if not set, kcp is disabled in frps\\nkcp_bind_port = ${def_kcp_bind_port}\\n\" ${str_program_dir}/${program_config_file}\n                fi\n            fi\n            if [ -z \"${search_tcp_mux}\" ];then\n                echo \"# Please select tcp_mux \"\n                echo \"1: enable (default)\"\n                echo \"2: disable\"\n                echo \"-------------------------\"  \n                read -e -p \"Enter your choice (1, 2 or exit. default [1]): \" str_tcp_mux\n                case \"${str_tcp_mux}\" in\n                    1|[yY]|[yY][eE][sS]|[oO][nN]|[tT][rR][uU][eE]|[eE][nN][aA][bB][lL][eE])\n                        set_tcp_mux=\"true\"\n                        ;;\n                    0|2|[nN]|[nN][oO]|[oO][fF][fF]|[fF][aA][lL][sS][eE]|[dD][iI][sS][aA][bB][lL][eE])\n                        set_tcp_mux=\"false\"\n                        ;;\n                    [eE][xX][iI][tT])\n                        exit 1\n                        ;;\n                    *)\n                        set_tcp_mux=\"true\"\n                        ;;\n                esac\n                echo \"tcp_mux: ${set_tcp_mux}\"\n                sed -i \"/^privilege_mode = true/d\" ${str_program_dir}/${program_config_file}\n                sed -i \"/^token =.*/a\\# if tcp stream multiplexing is used, default is true\\ntcp_mux = ${set_tcp_mux}\\n\" ${str_program_dir}/${program_config_file}\n            fi\n            if [ ! -z \"${search_allow_ports}\" ];then\n                sed -i \"s/privilege_allow_ports/allow_ports/\" ${str_program_dir}/${program_config_file}\n            fi\n        fi\n        verify_dashboard_user=`grep \"^dashboard_user\" ${str_program_dir}/${program_config_file}`\n        verify_dashboard_pwd=`grep \"^dashboard_pwd\" ${str_program_dir}/${program_config_file}`\n        verify_kcp_bind_port=`grep \"kcp_bind_port\" ${str_program_dir}/${program_config_file}`\n\t\tverify_quic_bind_port=`grep \"quic_bind_port\" ${str_program_dir}/${program_config_file}`\n        verify_tcp_mux=`grep \"^tcp_mux\" ${str_program_dir}/${program_config_file}`\n        verify_token=`grep \"privilege_token\" ${str_program_dir}/${program_config_file}`\n        verify_allow_ports=`grep \"privilege_allow_ports\" ${str_program_dir}/${program_config_file}`\n        if [ ! -z \"${verify_dashboard_user}\" ] && [ ! -z \"${verify_dashboard_pwd}\" ] && [ ! -z \"${verify_kcp_bind_port}\" ] && [ ! -z \"${verify_tcp_mux}\" ] && [ -z \"${verify_token}\" ] && [ -z \"${verify_allow_ports}\" ];then\n            echo -e \"${COLOR_GREEN}update configuration file successfully!!!${COLOR_END}\"\n        else\n            echo -e \"${COLOR_RED}update configuration file error!!!${COLOR_END}\"\n        fi\n    fi\n}\nupdate_program_server_frps() {\n    fun_frps \"clear\"\n\n    if [ -s \"$program_init\" ] || [ -s \"$str_program_dir/$program_name\" ]; then\n        echo \"============== Update $program_name ==============\"\n        update_config_frps\n        checkos\n        check_os_version\n        check_os_bit\n        fun_getVer\n\n        remote_init_version=$(wget -qO- \"$FRPS_INIT\" | sed -n '/^version/p' | cut -d\\\" -f2)\n        local_init_version=$(sed -n '/^version/p' \"$program_init\" | cut -d\\\" -f2)\n        install_shell=\"$strPath\"\n\n        if [ -n \"$remote_init_version\" ]; then\n            if [ \"$local_init_version\" != \"$remote_init_version\" ]; then\n                echo \"========== Update $program_name $program_init ==========\"\n                if ! wget \"$FRPS_INIT\" -O \"$program_init\"; then\n                    echo \"Failed to download $program_name.init file!\"\n                    exit 1\n                else\n                    echo -e \"${COLOR_GREEN}${program_init} Update successfully !!!${COLOR_END}\"\n                fi\n            fi\n        fi\n\n        [ ! -d \"$str_program_dir\" ] && mkdir -p \"$str_program_dir\"\n        echo -e \"Loading network version for $program_name, please wait...\"\n        fun_getServer\n        fun_getVer >/dev/null 2>&1\n        local_program_version=\"$($str_program_dir/$program_name --version)\"\n        echo -e \"${COLOR_GREEN}$program_name local version $local_program_version${COLOR_END}\"\n        echo -e \"${COLOR_GREEN}$program_name remote version $FRPS_VER${COLOR_END}\"\n\n        if [ \"$local_program_version\" != \"$FRPS_VER\" ]; then\n            echo -e \"${COLOR_GREEN}Found a new version, update now!!!${COLOR_END}\"\n            \"$program_init\" stop\n            sleep 1\n            rm -f /usr/bin/$program_name \"$str_program_dir/$program_name\"\n            fun_download_file\n\n            if [ \"$OS\" == 'CentOS' ]; then\n                chmod +x \"$program_init\"\n                chkconfig --add \"$program_name\"\n            else\n                chmod +x \"$program_init\"\n                update-rc.d -f \"$program_name\" defaults\n            fi\n\n            [ -s \"$program_init\" ] && ln -s \"$program_init\" /usr/bin/$program_name\n            [ ! -x \"$program_init\" ] && chmod 755 \"$program_init\"\n            \"$program_init\" start\n            echo \"$program_name version $($str_program_dir/$program_name --version)\"\n            echo \"$program_name update success!\"\n        else\n            echo -e \"no need to update !!!${COLOR_END}\"\n        fi\n    else\n        echo \"$program_name Not install!\"\n    fi\n    exit 0\n}\n\nclear\nstrPath=$(pwd)\nrootness\nfun_set_text_color\ncheckos\ncheck_os_version\ncheck_os_bit\npre_install_packs\nshell_update\n\n# Initialization\naction=$1\nif [ -z \"$action\" ]; then\n    fun_frps\n    echo \"Arguments error! [$action ]\"\n    echo \"Usage: $(basename \"$0\") {install|uninstall|update|config}\"\n    RET_VAL=1\nelse\n    case \"$action\" in\n    install)\n        pre_install_frps 2>&1 | tee /root/${program_name}-install.log\n        ;;\n    config)\n        configure_program_server_frps\n        ;;\n    uninstall)\n        uninstall_program_server_frps 2>&1 | tee /root/${program_name}-uninstall.log\n        ;;\n    update)\n        update_program_server_frps 2>&1 | tee /root/${program_name}-update.log\n        ;;\n    *)\n        fun_frps\n        echo \"Arguments error! [$action ]\"\n        echo \"Usage: $(basename \"$0\") {install|uninstall|update|config}\"\n        RET_VAL=1\n        ;;\n    esac\nfi\n"
        }
      ]
    }
  ]
}