{
  "metadata": {
    "timestamp": 1736568287794,
    "page": 187,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ServiceStack/redis-windows",
      "stars": 2723,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.298828125,
          "content": "Redis on Windows\n================\n\nThis project contains the binary releases of MS Open Tech redis port of windows as well as a vagrant configuration for redis letting you run the native version of Redis in a Virtual Box VM.\n\nWhilst it's recommended to use [Redis](http://redis.io) on Linux in production, it is often useful for developers on Windows platforms to have their own local version of redis running to develop with. \n\nThe 3 most popular ways of running redis on windows is to use the binary releases of [Microsoft's native port of redis](https://github.com/msopentech/redis), but as this is an unofficial port it always lags behind the latest official development of redis on Linux/OSX. \n\nThanks to [Vagrant](http://www.vagrantup.com/) you can choose to run the latest linux version inside a Virtual Box Linux VM where you'll be able to run the official native version of redis.\n\nOr if you have the latest version of **Windows 10** you can install [Bash on Ubuntu on Windows](https://msdn.microsoft.com/en-us/commandline/wsl/about) which will let you run the official version of Redis on Ubuntu on Windows :) This is our preferred approach as it lets you run native Ubuntu binaries on Windows more efficiently than running Linux in a VM:\n\n## Option 1) Install Redis on Ubuntu on Windows\n\n#### [Install Windows Subsystem for Linux (WSL)](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)\n\n 1) From Start, search for **Turn Windows features on or off** (type `turn`)\n 2) **Select Windows Subsystem for Linux (beta)**\n\n![](https://raw.githubusercontent.com/ServiceStack/Assets/master/img/redis/install-wsl.png)\n\nOnce installed you can run bash on Ubuntu by typing **bash** from a Windows \nCommand Prompt. To install the latest version of Redis we first need to install \nsome prerequisites:\n\n    $ sudo apt-get update\n    $ sudo apt-get install make\n    $ sudo apt-get install gcc\n\nThen follow the [official installation guide](https://redis.io/topics/quickstart) \nto download, build and install the latest stable version. **NOTE:** Installing \nthe binaries using `make install` will not work. You need to copy them manually \nto `/usr/bin` (just like described in the guide, except that they use \n`/usr/local/bin` - which is the problem).\n\nYou'll then be able to launch redis with:\n\n    $ redis-server --daemonize yes\n\nWhich will run redis in the background freeing your shell so you can play with it using the redis client:\n\n    $ redis-cli\n    $ 127.0.0.1:6379> SET foo bar\n    OK\n    $ 127.0.0.1:6379> GET foo\n    \"bar\"\n\nWhich you can connect to from within bash or from your Windows desktop using the [redis-cli native Windows binary from MSOpenTech](#option-3-running-microsofts-native-port-of-redis).\n\n## Option 2) Running the latest version of Redis with Vagrant\n\n#### 1. [Install Vagrant on Windows](http://docs.vagrantup.com/v2/getting-started/)\n\n#### 2. Download the [vagrant-redis.zip](https://raw.github.com/ServiceStack/redis-windows/master/downloads/vagrant-redis.zip) vagrant configuration\n\n    wget https://raw.github.com/ServiceStack/redis-windows/master/downloads/vagrant-redis.zip\n\n#### 3. Extract `vagrant-redis.zip` in any folder, e.g. in `c:\\vagrant-redis`\n\n#### 4. Launch the Virtual Box VM with `vagrant up`\n\n    cd c:\\vagrant-redis\n    vagrant up\n\nThis will launch a new Ubuntu VM instance inside Virtual Box that will automatically install and start the latest stable version of redis.\n\n_The vagrant configuration was originally from [JasonPunyon/redishobo](https://github.com/JasonPunyon/redishobo) and has been modified to use the latest stable release of Redis._\n\n## Option 3) Running Microsoft's native port of Redis\n\nThese 64-bit binary releases are created by building the [Microsoft's native port of redis](https://github.com/msopentech/redis) which have also been published on [NuGet](http://www.nuget.org/packages/redis-64), but as it's more convenient we provide a zip of the 64-bit binaries here.\n\n#### MS Open Announcements\n\n  - [MSOpenTech Redis on Windows 3.0 Release Notes](https://raw.githubusercontent.com/MSOpenTech/redis/3.0/Redis%20on%20Windows%20Release%20Notes.md)\n  - [MSOpenTech Redis on Windows 2.8 Release Notes](https://raw.githubusercontent.com/MSOpenTech/redis/2.8/Redis%20on%20Windows%20Release%20Notes.md)\n  - [MSOpenTech's Redis on Windows](https://github.com/ServiceStack/redis-windows/blob/master/docs/msopentech-redis-on-windows.md)\n  - [Updates Released for Redis on Windows (2.8.4)](http://msopentech.com/blog/2014/03/24/updates-released-redis-windows/)\n\n### Current Version: 3.0.503 (June 28, 2016)\n\n#### 1. Download the [redis-latest.zip](https://github.com/ServiceStack/redis-windows/raw/master/downloads/redis-latest.zip) native 64bit Windows port of redis\n\n    wget https://github.com/ServiceStack/redis-windows/raw/master/downloads/redis-latest.zip\n\n#### 2. Extract `redis64-latest.zip` in any folder, e.g. in `c:\\redis`\n\n#### 3. Run the `redis-server.exe` using the local configuration\n\n    cd c:\\redis\n    redis-server.exe redis.windows.conf\n\n#### 4. Run `redis-cli.exe` to connect to your redis instance\n\n    cd c:\\redis\n    redis-cli.exe\n\n#### 5. Start playing with redis :)\n\n    redis 127.0.0.1:6379> SET foo bar\n    OK\n    redis 127.0.0.1:6379> KEYS *\n    1) \"foo\"\n    redis 127.0.0.1:6379> GET foo\n    \"bar\"\n    redis 127.0.0.1:6379>\n\n------\n\nThe MSOpenTech of Redis adds some useful extensions for better integration with Windows:\n\n#### Running Redis as a Service\n\nIf you installed Redis using the MSI package, then Redis was already installed as a Windows service. Nothing further to do. \nIf you would like to change its settings, you can update the redis.windows-service.conf file and then restart the Redis \nservice (Run -> services.msc -> Redis -> Restart). \n\nDuring installation of the MSI you can either use the installer’s user interface to update the port that Redis listens to and the firewall exception or run it silently without a UI. The following examples show how to install from the command line:\n\n#### default install (port 6379 and firewall exception ON):\n\n    msiexec /i Redis-Windows-x64.msi \n\n#### set port and turn OFF firewall exception:\n\n    msiexec /i Redis-Windows-x64.msi PORT=1234 ADD_FIREWALL_RULE=\"\"\n\n#### set port and turn ON firewall exception:\n\n    msiexec /i Redis-Windows-x64.msi PORT=1234 ADD_FIREWALL_RULE =1\n\n#### install with no user interface:\n\n    msiexec /quiet /i Redis-Windows-x64.msi\n    \nIf you did not install Redis using the MSI package, then you still run Redis as a Windows service by following these instructions:\n\nIn order to better integrate with the Windows Services model, new command line arguments have been introduced to Redis. \nThese service arguments require an elevated user context in order to connect to the service control manager. \nIf these commands are invoked from a non-elevated context, Redis will attempt to create an elevated context in which to execute these commands. \nThis will cause a User Account Control dialog to be displayed by Windows and may require Administrative user credentials in order to proceed.\n\n#### Installing the Service\n\n    --service-install\n\nThis must be the first argument on the redis-server command line. Arguments after this are passed in the order they occur to Redis when the service is launched. \nThe service will be configured as Autostart and will be launched as \"NT AUTHORITY\\NetworkService\". Upon successful installation, a success message will be displayed and Redis will exit.\n\nThis command does not start the service.\n\nFor instance:\n\n    redis-server --service-install redis.windows.conf --loglevel verbose\n\n#### Uninstalling the Service\n\n    --service-uninstall\n\nThis will remove the Redis service configuration information from the registry. Upon successful uninstallation, a success message will be displayed and Redis will exit.\nThis does command not to stop the service.  \n\nFor instance:\n\n    redis-server --service-uninstall\n\n#### Starting the Service\n\n    --service-start\n\nThis will start the Redis service. Upon successful startup, a success message will be displayed and Redis service will be started.\n\nFor instance:  \n\n    redis-server --service-start\n\n#### Stopping the Service\n\n    --service-stop\n\nThis will stop the Redis service. Upon successful termination, a success message will be displayed and Redis will exit.\n\nFor instance:\n\n    redis-server --service-stop\n\n#### Naming the Service\n\n    --service-name name\n\nThis optional argument may be used with any of the preceding commands to set the name of the installed service. This argument should follow the service-install, service-start, service-stop or service-uninstall commands, and precede any arguments to be passed to Redis via the service-install command. \nThe following would install and start three separate instances of Redis as a service:\n\n    redis-server --service-install –service-name redisService1 –port 10001\n    redis-server --service-start –service-name redisService1\n    redis-server --service-install –service-name redisService2 –port 10002\n    redis-server --service-start –service-name redisService2\n    redis-server --service-install –service-name redisService3 –port 10003\n    redis-server --service-start –service-name redisService3\n\n## [Redis Vue](http://templates.servicestack.net/docs/web-apps#redis-vue)\n\nRedis Vue is a simple, lightweight, versatile Redis Admin UI developed using [Vue](https://vuejs.org/v2/guide/) and [ServiceStack .NET Core Web Apps](http://templates.servicestack.net/docs/web-apps). It supports Redis's core **Strings**, **Lists**, **Sets**, **Sorted Sets** and **Hash** data structures and custom Redis commands with its entire functionality contained in a single [/app/index.html](https://github.com/NetCoreWebApps/Redis/blob/master/app/index.html) using the dynamic [ServiceStack Templates](http://templates.servicestack.net/) language, making it easy to customize and further enhance.\n\n### [Live Demo](http://redis.web-app.io) - http://redis.web-app.io\n\n[![](http://templates.servicestack.net/assets/img/screenshots/redis.png)](http://redis.web-app.io)\n\n#### Download for Windows, OSX and Linux https://github.com/NetCoreWebApps/Redis\n\n## [Redis React Browser](https://servicestack.net/redis-react)\n\nRedis React is a simple user-friendly UI for browsing data in Redis servers which takes advantages of the complex\ntype conventions built in the ServiceStack.Redis Client to provide a rich, human-friendly UI for navigating related datasets, enabling a fast and fluid browsing experience for your Redis servers.\n\n#### [Live Demo](http://redisreact.servicestack.net/#/)\n\n[![](https://raw.githubusercontent.com/ServiceStack/Assets/master/img/livedemos/redis-react/home.png)](http://redisreact.servicestack.net/#/)\n\n#### Windows, OSX and Linux downloads available from [Redis React Home Page](https://github.com/ServiceStackApps/RedisReact#download)\n\n## [Configure Redis Sentinel Servers](https://github.com/ServiceStack/redis-config)\n\n[![Instant Redis Setup](https://raw.githubusercontent.com/ServiceStack/Assets/master/img/redis/instant-sentinel-setup.png)](https://github.com/ServiceStack/redis-config)\n\nSee the\n[redis config project](https://github.com/ServiceStack/redis-config) for a quick way to setup up \nthe minimal \n[highly available Redis Sentinel configuration](https://github.com/ServiceStack/redis-config/blob/master/README.md#3x-sentinels-monitoring-1x-master-and-2x-slaves)\nincluding start/stop scripts for instantly running multiple redis instances on a single (or multiple) \nWindows, OSX or Linux servers. \n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "downloads",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}