{
  "metadata": {
    "timestamp": 1736568612235,
    "page": 681,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pgexperts/pgx_scripts",
      "stars": 1389,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5029296875,
          "content": "Copyright (c) 2014, PostgreSQL Experts, Inc.\n    and Additional Contributors (see README)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of pgx_scripts nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3427734375,
          "content": "pgx_scripts\n===========\n\nA collection of useful little scripts for database analysis and administration, created by our team at PostgreSQL Experts.\n\nbloat\n=====\n\nQueries to estimate bloat in tables and indexes.\n\nindex_bloat_check.sql\n---------------------\n\nAn overhauled index bloat check.  Lists indexes which are likely to be bloated and estimates bloat amounts.  Requires PostgreSQL > 8.4, superuser access, and a 64-bit compile.  Only works for BTree indexes, not GIN, GiST, or more exotic indexes.  Still needs cleanup.\n\ntable_bloat_check.sql\n---------------------\n\nAn overhauled table bloat check.  Lists tables which are likely to be bloated and estimates bloat amounts.  Requires PostgreSQL >= 8.4 and a 64-bit compile.  Cannot estimate bloat for tables containing types with no stats functions (such as original JSON).\n\nno_stats_table_check.sql\n------------------------\n\nQuery to list all tables which have \"no stats\" columns and thus can't be estimated.\n\n\nkill_idle\n=========\n\nkill_idle_91.sql\n----------------\n\nA stored procedure which kills idle transactions on PostgreSQL versions 8.3 to 9.1.  Intended to be called by a cron job.  Takes idle time, polling time, and exempted user list parameters.  Outputs pipe-delimited text with the data about the sessions killed.\n\nkill_idle_93.sql\n----------------\n\nA stored procedure which kills idle transactions on PostgreSQL versions 9.2 and later.  Intended to be called by a cron job.  Takes idle time and exempted user list parameters.  Outputs JSON with the data about the sessions killed.\n\nIndexes\n=======\n\nVarious queries to introspect index usage.\n\nfk_no_index.sql\n---------------\n\nQueries for foreign keys with no index on the referencing side.  Note that you don't always want indexes on the referencing side, but this helps you decide if you do.\n\nduplicate_indexes_fuzzy.sql\n---------------------------\n\nCheck indexes and looks at whether or not they are potentially duplicates.  It does this by checking the columns used by each index, so it reports lots of false duplicates for partial and functional indexes.\n\nneeded_indexes.sql\n------------------\n\nChecks for tables which are getting too much sequential scan activity and might need additional indexing.  Reports in four groups based on table size, number of scans, write activity, and number of existing indexes.\n\nunneeded_indexes.sql\n--------------------\n\nChecks for indexes with relatively light usage stats, for possible removal.\n\nLocks\n=====\n\nTools and a set of queries to analyze lock-blocking.\n\ntransaction_locks.sql\n---------------------\n\nRequires: Postgres 9.2+\n\nLists waiting transaction locks and what they're waiting on, if possible.\nIncludes relation and query information, but realistically needs to be\naccompanied by full query logging to be useful.  Needs to be run\nper active database.\n\ntable_locks.sql\n---------------\n\nLists direct locks on tables which conflict with locks held by other sessions.  Note that table\nlocks are often short-lived, and as a result this will often result in zero rows.\n\n\nAdditional Contributors\n=======================\n\nIn addition to the staff of PostgreSQL Experts, we are indebted\nto:\n\n* The authors of the check_postgres.pl script, especially \n  Greg Sabino Mulainne, for supplying the\n  original bloat queries on which our bloat queries are based.\n* Andrew Gierth for help on various system queries.\n* ioguix for collaborating on bloat calculation math."
        },
        {
          "name": "bloat",
          "type": "tree",
          "content": null
        },
        {
          "name": "columns",
          "type": "tree",
          "content": null
        },
        {
          "name": "duplicate_indexes",
          "type": "tree",
          "content": null
        },
        {
          "name": "indexes",
          "type": "tree",
          "content": null
        },
        {
          "name": "kill_idle",
          "type": "tree",
          "content": null
        },
        {
          "name": "locks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pgbouncer",
          "type": "tree",
          "content": null
        },
        {
          "name": "slony",
          "type": "tree",
          "content": null
        },
        {
          "name": "vacuum",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}