{
  "metadata": {
    "timestamp": 1736568766008,
    "page": 881,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cisagov/log4j-affected-db",
      "stars": 1119,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": "# This file specifies intentionally untracked files that Git should ignore.\n# Files already tracked by Git are not affected.\n# See: https://git-scm.com/docs/gitignore\n\n## Python ##\n__pycache__\n.mypy_cache\n.python-version\n"
        },
        {
          "name": ".mdl_config.yaml",
          "type": "blob",
          "size": 1.376953125,
          "content": "---\n\n# Default state for all rules\ndefault: true\n\n# MD003/heading-style/header-style - Heading style\nMD003:\n  # Enforce the ATX-closed style of header\n  style: \"atx_closed\"\n\n# MD004/ul-style - Unordered list style\nMD004:\n  # Enforce dashes for unordered lists\n  style: \"dash\"\n\n# MD013/line-length - Line length\nMD013:\n  # Do not enforce for code blocks\n  code_blocks: false\n  # Do not enforce for tables\n  tables: false\n\n# MD024/no-duplicate-heading/no-duplicate-header - Multiple headings with the\n# same content\nMD024:\n  # Allow headers with the same content as long as they are not in the same\n  # parent heading\n  allow_different_nesting: true\n\n# MD029/ol-prefix - Ordered list item prefix\nMD029:\n  # Enforce the `1.` style for ordered lists\n  style: \"one\"\n\n# MD033/no-inline-html - Inline HTML\nMD033:\n  # The h1 and img elements are allowed to permit header images\n  allowed_elements:\n    - h1\n    - img\n\n# MD035/hr-style - Horizontal rule style\nMD035:\n  # Enforce dashes for horizontal rules\n  style: \"---\"\n\n# MD046/code-block-style - Code block style\nMD046:\n  # Enforce the fenced style for code blocks\n  style: \"fenced\"\n\n# MD049/emphasis-style - Emphasis style should be consistent\nMD049:\n  # Enforce asterisks as the style to use for emphasis\n  style: \"asterisk\"\n\n# MD050/strong-style - Strong style should be consistent\nMD050:\n  # Enforce asterisks as the style to use for strong\n  style: \"asterisk\"\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.8525390625,
          "content": "---\ndefault_language_version:\n  # force all unspecified python hooks to run python3\n  python: python3\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n      - id: check-case-conflict\n      - id: check-executables-have-shebangs\n      - id: check-json\n      - id: check-merge-conflict\n      - id: check-toml\n      - id: check-xml\n      - id: debug-statements\n      - id: detect-aws-credentials\n        args:\n          - --allow-missing-credentials\n      - id: detect-private-key\n      - id: end-of-file-fixer\n        exclude: files/(issue|motd)\n      - id: mixed-line-ending\n        args:\n          - --fix=lf\n      - id: pretty-format-json\n        args:\n          - --autofix\n      - id: requirements-txt-fixer\n      - id: trailing-whitespace\n\n  # Text file hooks\n  - repo: https://github.com/igorshubovych/markdownlint-cli\n    rev: v0.32.2\n    hooks:\n      - id: markdownlint\n        args:\n          - --config=.mdl_config.yaml\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v3.0.0-alpha.4\n    hooks:\n      - id: prettier\n  - repo: https://github.com/adrienverge/yamllint\n    rev: v1.28.0\n    hooks:\n      - id: yamllint\n        args:\n          - --strict\n\n  # GitHub Actions hooks\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: 0.18.4\n    hooks:\n      - id: check-github-actions\n      - id: check-github-workflows\n\n  # Shell script hooks\n  - repo: https://github.com/cisagov/pre-commit-shfmt\n    rev: v0.0.2\n    hooks:\n      - id: shfmt\n        args:\n          # Indent by two spaces\n          - -i\n          - '2'\n          # Binary operators may start a line\n          - -bn\n          # Switch cases are indented\n          - -ci\n          # Redirect operators are followed by a space\n          - -sr\n  - repo: https://github.com/detailyang/pre-commit-shell\n    rev: 1.0.5\n    hooks:\n      - id: shell-lint\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": "# Already being linted by pretty-format-json\n*.json\n# Already being linted by mdl\n*.md\n# Already being linted by yamllint\n*.yaml\n*.yml\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.4892578125,
          "content": "---\nextends: default\n\nrules:\n  # yamllint does not like it when you comment out different parts of\n  # dictionaries in a list. You can see\n  # https://github.com/adrienverge/yamllint/issues/384 for some examples of\n  # this behavior.\n  comments-indentation: disable\n\n  # Enforcing this rule would be complicated for auto-generated data right now.\n  line-length: disable\n\n  # yamllint doesn't like when we use yes and no for true and false,\n  # but that's pretty standard in Ansible.\n  truthy: disable\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.3408203125,
          "content": "# Welcome #\n\nWe're so glad you're thinking about contributing to this open source\nproject!  If you're unsure or afraid of anything, just ask or submit\nthe issue or pull request anyway.  The worst that can happen is that\nyou'll be politely asked to change something.  We appreciate any sort\nof contribution, and don't want a wall of rules to get in the way of\nthat.\n\nBefore contributing, we encourage you to read our CONTRIBUTING policy\n(you are here), our [LICENSE](LICENSE), and our [README](README.md),\nall of which should be in this repository.\n\n## Issues ##\n\nIf you want to report a bug or request a new feature, the most direct\nmethod is to [create an\nissue](https://github.com/cisagov/log4j-affected-db/issues) in this\nrepository.  We recommend that you first search through existing\nissues (both open and closed) to check if your particular issue has\nalready been reported.  If it has then you might want to add a comment\nto the existing issue.  If it hasn't then feel free to create a new\none.\n\n## Pull requests ##\n\nIf you choose to [submit a pull\nrequest](https://github.com/cisagov/log4j-affected-db/pulls), you will\nnotice that our continuous integration (CI) system runs a fairly\nextensive set of linters and syntax checkers.  Your pull request may\nfail these checks, and that's OK.  If you want you can stop there and\nwait for us to make the necessary corrections to ensure your code\npasses the CI checks.\n\nIf you want to make the changes yourself, or if you want to become a\nregular contributor, then you will want to set up\n[pre-commit](https://pre-commit.com/) on your local machine.  Once you\ndo that, the CI checks will run locally before you even write your\ncommit message.  This speeds up your development cycle considerably.\n\n### Creating a pull request ###\n\nInstructions for creating a pull request using the GitHub Web UI can be found\nin [`PULL-EXAMPLE.md`](PULL-EXAMPLE.md).\n\n### Setting up pre-commit ###\n\nThere are a few ways to do this, but we prefer to use\n[`pyenv`](https://github.com/pyenv/pyenv) and\n[`pyenv-virtualenv`](https://github.com/pyenv/pyenv-virtualenv) to\ncreate and manage a Python virtual environment specific to this\nproject.\n\n#### Installing and using `pyenv` and `pyenv-virtualenv` ####\n\nOn the Mac, we recommend installing [brew](https://brew.sh/).  Then\ninstallation is as simple as `brew install pyenv pyenv-virtualenv` and\nadding this to your profile:\n\n```bash\nexport PYENV_ROOT=\"$HOME/.pyenv\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\neval \"$(pyenv init --path)\"\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n```\n\nFor Linux, Windows Subsystem for Linux (WSL), or on the Mac (if you\ndon't want to use `brew`) you can use\n[pyenv/pyenv-installer](https://github.com/pyenv/pyenv-installer) to\ninstall the necessary tools. Before running this ensure that you have\ninstalled the prerequisites for your platform according to the\n[`pyenv` wiki\npage](https://github.com/pyenv/pyenv/wiki/common-build-problems).\n\nOn WSL you should treat your platform as whatever Linux distribution\nyou've chosen to install.\n\nOnce you have installed `pyenv` you will need to add the following\nlines to your `.bash_profile` (or `.profile`):\n\n```bash\nexport PYENV_ROOT=\"$HOME/.pyenv\"\nexport PATH=\"$PYENV_ROOT/bin:$PATH\"\neval \"$(pyenv init --path)\"\n```\n\nand then add the following lines to your `.bashrc`:\n\n```bash\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n```\n\nIf you want more information about setting up `pyenv` once installed, please run\n\n```console\npyenv init\n```\n\nand\n\n```console\npyenv virtualenv-init\n```\n\nfor the current configuration instructions.\n\nIf you are using a shell other than `bash` you should follow the\ninstructions that the `pyenv-installer` script outputs.\n\nYou will need to reload your shell for these changes to take effect so\nyou can begin to use `pyenv`.\n\nFor a list of Python versions that are already installed and ready to\nuse with `pyenv`, use the command `pyenv versions`.  To see a list of\nthe Python versions available to be installed and used with `pyenv`\nuse the command `pyenv install --list`.  You can read more\n[here](https://github.com/pyenv/pyenv/blob/master/COMMANDS.md) about\nthe many things that `pyenv` can do.  See\n[here](https://github.com/pyenv/pyenv-virtualenv#usage) for the\nadditional capabilities that pyenv-virtualenv adds to the `pyenv`\ncommand.\n\n#### Creating the Python virtual environment ####\n\nOnce `pyenv` and `pyenv-virtualenv` are installed on your system, you\ncan create and configure the Python virtual environment with these\ncommands:\n\n```console\ncd log4j-affected-db\npyenv virtualenv <python_version_to_use> log4j-affected-db\npyenv local log4j-affected-db\npip install --upgrade pip setuptools wheel pre-commit\n```\n\n#### Installing the pre-commit hook ####\n\nNow setting up pre-commit is as simple as:\n\n```console\npre-commit install\n```\n\nAt this point the pre-commit checks will run against any files that\nyou attempt to commit.  If you want to run the checks against the\nentire repo, just execute `pre-commit run --all-files`.\n\n## Public domain ##\n\nThis project is in the public domain within the United States, and\ncopyright and related rights in the work worldwide are waived through\nthe [CC0 1.0 Universal public domain\ndedication](https://creativecommons.org/publicdomain/zero/1.0/).\n\nAll contributions to this project will be released under the CC0\ndedication. By submitting a pull request, you are agreeing to comply\nwith this waiver of copyright interest.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4013671875,
          "content": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>\n"
        },
        {
          "name": "PULL-EXAMPLE.md",
          "type": "blob",
          "size": 3.806640625,
          "content": "# Pull Request Example #\n\nThank you for contributing to CISA's Log4j-affected-db GitHub Repository! Please\nfollow the steps listed below in order to add a product to the public\nrepository. **Note:** To assure the accuracy of data please only include\nproducts that have official advisories or alerts that verify the product's\nvulnerability status to  [CVE-2021-4104](https://nvd.nist.gov/vuln/detail/cve-2021-4104),\n[CVE-2021-44228](https://nvd.nist.gov/vuln/detail/CVE-2021-44228),\n[CVE-2021-45046](https://nvd.nist.gov/vuln/detail/CVE-2021-45046),\nand/or [CVE-2021-45105](https://nvd.nist.gov/vuln/detail/CVE-2021-45105?s=09).\n\n**Step 1:** Go to the [cisagov data .yml files](https://github.com/cisagov/log4j-affected-db/tree/develop/data/)\nand choose the appropriate file to include your updates.\nThe files are separated alphabetically based on the first letter of the\nvendor name. For example, 'CISA' would be located in\n[`cisagov_C.yml`](https://github.com/cisagov/log4j-affected-db/blob/develop/data/cisagov_C.yml).\n\n**Step 2:** Click the file edit button.\n\n**Step 3:** Add the blank template to the **.yml** file for new entries and fill\nit out with the correct data.\n\nBlank template:\n\n```yml\n  - vendor: ''\n    product: ''\n    cves:\n      cve-2021-4104:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-44228:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-45046:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-45105:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n    vendor_links:\n      - ''\n    notes: ''\n    references:\n      - ''\n    last_updated: ''\n```\n\n**Step 4:** Verify the new entry was entered before and/or after the prior and\nnext entries.\n\n- If you are adding it to the beginning of the file, ensure you are pasting\nit after `software:` and before the next entry starting with `- vendor:`.\n- If you are adding it to the end of the file, ensure the entry ends before\nthe file is closed out with `...`.\n\n**Step 5:** When you add content to the file, remove the `''` or `[]` for fields\nwhich are replaced with values (strings `''` or lists `[]` should be replaced as\nshown in the example below, with list values on the following line(s) starting\nwith hyphen(s) `-`). The symbols should only remain used when fields remain\nempty. For example, `fixed_versions: []` in our example below remains as is,\ngiven there are no patched versions available for this entry.\n\n**Note:** not all fields have to be updated.\n\nEntry example:\n\n```yml\n  - vendor: Example Vendor\n    product: Example Product\n    cves:\n      cve-2021-4104:\n        investigated: false\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-44228:\n        investigated: true\n        affected_versions:\n          - <=8.4.6\n          - <=8.5.3\n          - <=8.6.4\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-45046:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n      cve-2021-45105:\n        investigated: ''\n        affected_versions: []\n        fixed_versions: []\n        unaffected_versions: []\n    vendor_links:\n      - https://www.example.org/\n    notes: Contains vulnerable code but not likely to get\n      unauthenticated user input to the log4j component.\n    references:\n      - ''\n    last_updated: '2021-12-14T00:00:00'\n```\n\n**Step 6:** Validate that your data follows the appropriate format and proceed\nwith submitting the pull request.\n\nFor any additional questions feel free to [submit an Issue](https://github.com/cisagov/log4j-affected-db/issues).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8720703125,
          "content": "# CISA Log4j (CVE-2021-44228) Vulnerability Guidance #\n\nThis repository provides\n[CISA's guidance](https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance)\nand an overview of related software regarding the Log4j vulnerability\n(CVE-2021-44228). CISA urges users and administrators to upgrade to Log4j 2.17.1\n(Java 8), 2.12.4 (Java 7) and 2.3.2 (Java 6), and review and monitor the\n[Apache Log4j Security Vulnerabilities webpage](https://logging.apache.org/log4j/2.x/security.html)\nfor updates and mitigation guidance.\n\nThe information in this repository is provided \"as is\" for informational\npurposes only and is being assembled and updated by CISA through\ncollaboration with the broader cybersecurity community.  Inquire with the\nmanufacturer or their respective online resources for the most up-to-date\ninformation regarding any specific product listed. CISA does not endorse\nany commercial product or service, including any subjects of analysis.\nAny reference to specific commercial products, processes, or services by\nservice mark, trademark, manufacturer, or otherwise, does not constitute\nor imply their endorsement, recommendation, or favoring by CISA.\n\n## Official CISA Guidance & Resources ##\n\n- [CISA Apache Log4j Vulnerability Guidance](https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance)\n- [CISA ED 22-02: Apache Log4j Recommended Mitigation Measures](https://www.cisa.gov/uscert/ed-22-02-apache-log4j-recommended-mitigation-measures)\n- [CISA ALERT (AA21-356A): Mitigating Log4Shell and Other Log4j-Related Vulnerabilities](https://www.cisa.gov/uscert/ncas/alerts/aa21-356a)\n- [Emergency Directive 22-02 Mitigate Apache Log4j Vulnerability](https://www.cisa.gov/emergency-directive-22-02)\n- [Statement from CISA Director Easterly on “Log4j” Vulnerability](https://www.cisa.gov/news/2021/12/11/statement-cisa-director-easterly-log4j-vulnerability).\n\n## CISA Current Activity Alerts ##\n\n- [Mitigating Log4Shell and Other Log4j-Related Vulnerabilities](https://www.cisa.gov/uscert/ncas/current-activity/2021/12/22/mitigating-log4shell-and-other-log4j-related-vulnerabilities)\n- [CISA Issues ED 22-02 Directing Federal Agencies to Mitigate Apache Log4j Vulnerabilities](https://www.cisa.gov/uscert/ncas/current-activity/2021/12/17/cisa-issues-ed-22-02-directing-federal-agencies-mitigate-apache)\n- [Apache Releases Log4j Version 2.15.0 to Address Critical RCE Vulnerability Under Exploitation](https://www.cisa.gov/uscert/ncas/current-activity/2021/12/10/apache-releases-log4j-version-2150-address-critical-rce)\n- [CISA Creates Webpage for Apache Log4j Vulnerability CVE-2021-44228](https://www.cisa.gov/uscert/ncas/current-activity/2021/12/13/cisa-creates-webpage-apache-log4j-vulnerability-cve-2021-44228)\n\nNational Vulnerability Database (NVD) Information: [CVE-2021-44228](https://nvd.nist.gov/vuln/detail/CVE-2021-44228)\n\n## CISA Mitigation Guidance ##\n\nWhen updates are available, agencies must update software\nusing Log4j to the newest version, which is the most\neffective and manageable long-term option. Where\nupdating is not possible, the following mitigating\nmeasures can be considered as a temporary solution\nand apply to the entire solution stack.\n\n- **Disable Log4j library.** Disabling software using the\nLog4j library is an effective measure, favoring\ncontrolled downtime over adversary-caused issues.\nThis option could cause operational impacts and limit\nvisibility into other issues.\n- **Disable JNDI lookups or disable remote codebases.**\nThis option, while effective, may involve\ndeveloper work and could impact functionality.\n- **Disconnect affected stacks.** Solution stacks not\nconnected to agency networks pose a dramatically\nlower risk from attack. Consider temporarily\ndisconnecting the stack from agency networks.\n- **Isolate the system.** Create a “vulnerable network”\nVLAN and segment the solution stack from the\nrest of the enterprise network.\n- **Deploy a properly configured Web Application\nFirewall (WAF) in front of the solution stack.**\nDeploying a WAF is an important, but incomplete,\nsolution. While threat actors will be able to\nbypass this mitigation, the reduction in alerting\nwill allow an agency SOC to focus on a smaller\nset of alerts.\n- **Apply micropatch.** There are several micropatches\navailable. They are not a part of the official\nupdate but may limit agency risk.\n- Report incidents promptly to CISA and/or the FBI\n[here](https://www.cisa.gov/uscert/report).\n\nFor more information regarding CISA recommended mitigation measures please visit\n[here](https://www.cisa.gov/uscert/ed-22-02-apache-log4j-recommended-mitigation-measures).\n\n## Contributing ##\n\nWe welcome contributions!  Please see [`CONTRIBUTING.md`](CONTRIBUTING.md) for\ndetails.\n\n### Creating a pull request ###\n\nInstructions for creating a pull request using the GitHub Web UI can be found\nin [`PULL-EXAMPLE.md`](PULL-EXAMPLE.md).\n\n## Software List ##\n\nTo view the full list of vendors & software [click here](./software_lists/README.md).\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "software_lists",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}