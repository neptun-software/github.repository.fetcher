{
  "metadata": {
    "timestamp": 1736568780778,
    "page": 908,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "1995chen/dnf",
      "stars": 1093,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": "Kubernetes.md",
          "type": "blob",
          "size": 4.0419921875,
          "content": "# Kubernetes 部署DNF\n\n## Yaml\n\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: dnf\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 10G\n\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: dnf\ndata:\n  dnf_public_ip: 192.168.0.203\n  gm_lander_version: \"20180307\"\n\n---\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: dnf\ndata:\n  mysql_root_password: ODg4ODg4ODg=\n  gm_account: Z21fdXNlcg==\n  gm_password: Z21fcGFzcw==\n  gm_connect_key: NzYzV1hSQlczUEZUQzNJWFBGV0g=\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: dnf\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: dnf\n  template:\n    metadata:\n      labels:\n        app: dnf\n    spec:\n      restartPolicy: Always\n      nodeName: centos-02\n      volumes:\n      - name: dnf\n        persistentVolumeClaim:\n          claimName: dnf\n      # 【不可删除】，docker等容器运行时默认较小，需要增加才能保证运行\n      - name: memory\n        emptyDir:\n          medium: Memory\n          sizeLimit: 8Gi\n\n      containers:\n      - name: dnf\n        imagePullPolicy: IfNotPresent\n        image: 1995chen/dnf:centos5-2.1.4.fix1\n        ports:\n        - name: mysql\n          containerPort: 3306\n          protocol: TCP\n          hostPort: 3000 \n        - name: gate-tcp1\n          containerPort: 7600\n          protocol: TCP\n          hostPort: 7600\n        - name: gate-tcp2\n          containerPort: 881\n          protocol: TCP\n          hostPort: 881\n        - name: channel-tcp1\n          containerPort: 7001\n          protocol: TCP\n          hostPort: 7001\n        - name: channel-udp1\n          containerPort: 7001\n          protocol: UDP\n          hostPort: 7001\n        - name: game-tcp1\n          containerPort: 10011\n          protocol: TCP\n          hostPort: 10011\n        - name: game-tcp2\n          containerPort: 10052\n          protocol: TCP\n          hostPort: 10052\n        - name: game-udp1\n          containerPort: 11011\n          protocol: UDP\n          hostPort: 11011\n        - name: game-udp2\n          containerPort: 11052\n          protocol: UDP\n          hostPort: 11052\n        - name: relay-tcp1\n          containerPort: 7200\n          protocol: TCP\n          hostPort: 7200\n        - name: relay-udp1\n          containerPort: 7200\n          protocol: UDP\n          hostPort: 7200\n        - name: stun-udp1\n          containerPort: 2311\n          protocol: UDP\n          hostPort: 2311\n        - name: stun-udp2\n          containerPort: 2312\n          protocol: UDP\n          hostPort: 2312\n        - name: stun-udp3\n          containerPort: 2313\n          protocol: UDP\n          hostPort: 2313\n        env:\n        - name: TZ\n          value: \"Asia/Shanghai\"\n        - name: PUBLIC_IP\n          valueFrom:\n            configMapKeyRef:\n              key: dnf_public_ip\n              name: dnf\n        - name: DNF_DB_ROOT_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              key: mysql_root_password\n              name: dnf\n        - name: GM_ACCOUNT\n          valueFrom:\n            secretKeyRef:\n              key: gm_account\n              name: dnf\n        - name: GM_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              key: gm_password\n              name: dnf\n        - name: GM_LANDER_VERSION\n          valueFrom:\n            configMapKeyRef:\n              key: gm_lander_version\n              name: dnf\n        - name: GM_CONNECT_KEY\n          valueFrom:\n            secretKeyRef:\n              key: gm_connect_key\n              name: dnf\n        volumeMounts:\n        - mountPath: /data\n          name: dnf\n          subPath: data\n        - mountPath: /var/lib/mysql\n          name: dnf\n          subPath: mysql\n        - mountPath: /home/neople/game/log\n          name: dnf\n          subPath: log\n        - mountPath: /dev/shm\n          name: memory\n```\n\n## 一些说明\nyaml中\"nodeName: centos-02\"是为了固定在一个节点上运行，实际运行时，这块按照实际需要修改。\n\nConfigMap中的dnf_public_ip为实际运行节点的内网/公网IP\n\n如果使用Netbird则不需要固定在某个固定节点\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 CircleCI\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.66015625,
          "content": "# 地下城与勇士容器版本\r\n\r\n[![CircleCI](https://dl.circleci.com/status-badge/img/circleci/5hFbZLArT4z93ByaTYNZ2x/RreRQeCp7yaWKmcyWrNDEs/tree/main.svg?style=svg&circle-token=CCIPRJ_Sg2B4EQQ3NGhtpCzrE5BgJ_cf6d6666bb4468d097db9ad01858ed43608eea82)](https://dl.circleci.com/status-badge/redirect/circleci/5hFbZLArT4z93ByaTYNZ2x/RreRQeCp7yaWKmcyWrNDEs/tree/main)\r\n[![Docker Image](https://img.shields.io/docker/pulls/1995chen/dnf.svg?maxAge=3600)](https://hub.docker.com/r/1995chen/dnf/)\r\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://raw.githubusercontent.com/1995chen/dnf/master/LICENSE)\r\n\r\n## Contact US\r\nFor cooperation and suggestions please contact chenl2448365088@gmail.com or yzd315695355@gmail.com\r\n\r\n## 说明\r\n\r\n该项目是将地下城与勇士(毒奶粉、DNF、DOF)整合成一个 Docker 镜像的项目 如果想实际部署，则只需要拷贝其中的[部署文件夹](deploy)即可，即 deploy 目录。本项目使用官方 CentOS\r\n6.9 为基础镜像，通过增加环境变量以及初始化脚本实现 应用的快速部署。\r\n\r\n感谢 xyz1001 大佬提供`libhook.so`优化CPU占用 [源码](https://godbolt.org/z/EKsYGh5dv)\r\n\r\n站库分离详见 [XanderYe/dnf](https://github.com/XanderYe/dnf)\r\n\r\n如果觉得本项目和[XanderYe/dnf](https://github.com/XanderYe/dnf)对你有帮助，可以点一下 Star 支持下我们，谢谢。\r\n\r\n## 2.1.5 Release Plan \r\n```\r\n1. 支持假人\r\n2. 通过插件支持几款登陆器\r\n```\r\n\r\n## 自动化构建\r\n\r\n该项目已经接入 CircleCI，会自动化构建每一个版本。\r\n\r\n## 部署流程\r\n\r\n### CentOS 6/7 安装 Docker\r\n\r\n先升级 yum 源\r\n\r\n```shell\r\nyum update -y\r\n```\r\n\r\n下载 docker 安装脚本\r\n\r\n```shell\r\ncurl -fsSL https://get.docker.com -o get-docker.sh\r\n```\r\n\r\n运行安装 docker 的脚本\r\n\r\n```shell\r\nsudo sh get-docker.sh\r\n```\r\n\r\n启动 docker\r\n\r\n```shell\r\nsystemctl enable docker\r\nsystemctl restart docker\r\n```\r\n\r\n关闭防火墙\r\n\r\n```shell\r\nsystemctl disable firewalld\r\nsystemctl stop firewalld\r\n```\r\n\r\n关闭 selinux\r\n\r\n```shell\r\nsudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config\r\n```\r\n\r\n### 配置虚拟内存（若内存不足 8GB）\r\n\r\n[参考文献](https://www.cnblogs.com/EasonJim/p/7777904.html)\r\n\r\n创建 Swap 文件\r\n\r\n```shell\r\nwhich /usr/bin/fallocate && /usr/bin/fallocate --length 8GiB /var/swap.1 || /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=8000\r\nmkswap /var/swap.1\r\nswapon /var/swap.1\r\nsed -i '$a /var/swap.1 swap swap default 0 0' /etc/fstab\r\n```\r\n\r\n查看系统是否已启用 Swap\r\n\r\n```shell\r\nsysctl vm.swappiness\r\n```\r\n\r\n如果输出最后的数字不为 0，则代表已经启用 Swap，可不做处理。\r\n\r\n如果输出最后的数字为 0，则使用下面的命令添加 Swap 配置（设定为比起内存，优先使用 Swap）\r\n\r\n```shell\r\n# 其中的 100 也可以进行修改，100 代表尽可能使用虚拟内存，0 代表尽可能使用物理内存\r\n# 物理内存远快于虚拟内存，但对于 DNF 服务来说，个位数玩家在玩时，基本体会不到差异\r\nsed -i '$a vm.swappiness = 100' /etc/sysctl.conf\r\n```\r\n\r\n重新启动服务器，或执行以下命令使 Swap 配置生效：\r\n\r\n```shell\r\nsysctl -p\r\n```\r\n\r\n## 拉取镜像\r\n\r\n[所有镜像版本可点击查看(记得点赞三连，帮助更多人了解到该镜像)](https://hub.docker.com/repository/docker/1995chen/dnf)\r\n\r\n以下命令任选一个，可拉取镜像到本机\r\n\r\n```shell\r\ndocker pull 1995chen/dnf:centos5-2.1.4.fix1\r\ndocker pull 1995chen/dnf:centos6-2.1.4.fix1\r\n# 如何您需要使用 CentOS7 作为基础镜像的特殊需求,可以使用:\r\ndocker pull 1995chen/dnf:centos7-2.1.4.fix1\r\n# 国内镜像无法拉取请使用(完整复制下面两行命令执行)\r\ndocker pull registry.cn-hangzhou.aliyuncs.com/1995chen/dnf:centos7-2.1.4.fix1 && docker tag registry.cn-hangzhou.aliyuncs.com/1995chen/dnf:centos7-2.1.4.fix1 1995chen/dnf:centos7-2.1.4.fix1\r\n```\r\n\r\n## 简单启动\r\n\r\n```shell\r\n# 创建一个目录，保存游戏的数据、PVF、日志等，这里以保存到 /data 为例\r\n# 2.1.0 及之后的版本，在首次启动时会自动初始化 mysql 数据\r\nmkdir -p /data/log /data/mysql /data/data\r\n\r\n# 启动服务\r\n# PUBLIC_IP 为公网IP地址，如果在局域网部署则用局域网IP地址，按实际需要替换\r\n# GM_ACCOUNT 为登录器用户名，建议替换\r\n# GM_PASSWORD 为登录器密码，建议替换\r\n# DNF_DB_ROOT_PASSWORD 为 mysql root 密码，容器启动时会自动将 root 用户的密码修改为此值\r\n# WEB_USER 为 supervisor web 管理页面用户名\r\n# WEB_PASS 为 supervisor web 管理页面密码（可以访问 PUBLIC_IP:2000 来访问进程管理页面）\r\n# --shm-size=8g【不可删除】，docker默认为64M较小，需要增加才能保证运行\r\n# 注意，最后的 1995chen/dnf:centos5-2.1.4.fix1 部分中的 centos5，你在上一步拉取得哪个版本，则应替换为哪个版本\r\ndocker run -d -e PUBLIC_IP=x.x.x.x -e WEB_USER=root -e WEB_PASS=123456 -e DNF_DB_ROOT_PASSWORD=88888888 -e GM_ACCOUNT=gmuser -e GM_PASSWORD=gmpass -v /data/log:/home/neople/game/log -v /data/mysql:/var/lib/mysql -v /data/data:/data -p 2000:180 -p 3000:3306/tcp -p 7600:7600/tcp -p 881:881/tcp -p 7001:7001/tcp -p 7001:7001/udp -p 10011:10011/tcp -p 11011:11011/udp -p 10052:10052/tcp -p 11052:11052/udp -p 7200:7200/tcp -p 7200:7200/udp -p 2311-2313:2311-2313/udp --cap-add=NET_ADMIN --hostname=dnf --cpus=1 --memory=1g --memory-swap=-1 --shm-size=8g --name=dnf 1995chen/dnf:centos5-2.1.4.fix1\r\n```\r\n\r\n## docker-compose部署[群晖推荐]\r\n\r\n[Yaml文件](deploy/dnf/docker-compose.yaml)\r\n\r\n## k8s启动\r\n\r\n[部署文档](Kubernetes.md)\r\n\r\n## 如何确认已经成功启动\r\n\r\n1.查看日志 log  \r\n├── siroco11  \r\n│ ├── Log20211203-09.history  \r\n│ ├── Log20211203.cri  \r\n│ ├── Log20211203.debug  \r\n│ ├── Log20211203.error  \r\n│ ├── Log20211203.init  \r\n│ ├── Log20211203.log  \r\n│ ├── Log20211203.money  \r\n│ └── Log20211203.snap  \r\n└── siroco52  \r\n├── Log20211203-09.history  \r\n├── Log20211203.cri  \r\n├── Log20211203.debug  \r\n├── Log20211203.error  \r\n├── Log20211203.init  \r\n├── Log20211203.log  \r\n├── Log20211203.money  \r\n└── Log20211203.snap  \r\n查看Logxxxxxxxx.init文件(其中xxxxxxxx为当天时间,需要按实际情况替换),四国的初始化日志都在这里  \r\n成功出现四国后,日志文件大概如下,四国初始化时间大概1分钟左右,请耐心等待  \r\n[root@centos-02 siroco11]# tail -f Log$(date +%Y%m%d).init  \r\n[09:40:23]    - RestrictBegin : 1  \r\n[09:40:23]    - DropRate : 0  \r\n[09:40:23]    Security Restrict End  \r\n[09:40:23] GeoIP Allow Country Code : CN  \r\n[09:40:23] GeoIP Allow Country Code : HK  \r\n[09:40:23] GeoIP Allow Country Code : KR  \r\n[09:40:23] GeoIP Allow Country Code : MO  \r\n[09:40:23] GeoIP Allow Country Code : TW(CN)  \r\n[09:40:32] [!] Connect To Guild Server ...  \r\n[09:40:32] [!] Connect To Monitor Server ...  \r\n\r\n2.查看进程  \r\n在确保日志都正常的情况下,需要查看进程进一步确定程序正常启动  \r\n[root@centos-02 siroco11]# ps -ef |grep df_game  \r\nroot 16500 16039 9 20:39 ? 00:01:20 ./df_game_r siroco11 start  \r\nroot 16502 16039 9 20:39 ? 00:01:22 ./df_game_r siroco52 start  \r\nroot 22514 13398 0 20:53 pts/0 00:00:00 grep --color=auto df_game  \r\n如上结果df_game_r进程是存在的,代表成功.如果不成功可以重启服务  \r\n\r\n3.查看进程管理页面\r\n可以通过访问http://PUBLIC_IP:2000端口来访问进程管理页面,可以在\r\n页面上点击dnf:game_siroco11或dnf:game_siroco52进程的Tail -f来查看日志。\r\n\r\n## 重启服务\r\n\r\n该服务占有内存较大，极有可能被系统杀死,当进程被杀死时则需要重启服务  \r\n重启服务命令\r\n\r\n```shell\r\ndocker restart dnf\r\n```\r\n\r\n或在进程管理页面(http://PUBLIC_IP:2000页面手动重启相关进程)。\r\n\r\n## 默认的网关信息\r\n\r\n```shell\r\n网关端口: 881\r\n通讯密钥: 763WXRBW3PFTC3IXPFWH\r\n登录器版本: 20180307\r\n登录器端口: 7600\r\nGM账户: gmuser\r\nGM密码: gmpass\r\n```\r\n\r\n## 可选的环境变量\r\n当容器用最新的环境变量启动时，以下所有的环境变量，包括数据库root密码都会立即生效\r\n需要更新配置时只需要先停止服务\r\n```shell\r\ndocker stop dnf\r\ndocker rm dnf\r\n```\r\n然后用最新的环境变量设置启动服务即可\r\n```shell\r\n# 自动获取公网地址[默认为false]\r\nAUTO_PUBLIC_IP\r\n# 公网或局域网IP地址\r\nPUBLIC_IP\r\n# GM管理员账号\r\nGM_ACCOUNT\r\n# GM管理员密码\r\nGM_PASSWORD\r\n# GM连接KEY(自定以密钥请使用网关生成的密钥，因为密钥有格式限制，不符合格式的密钥会导致登录器一致卡在网关连接那里)\r\nGM_CONNECT_KEY\r\n# GM登录器版本\r\nGM_LANDER_VERSION\r\n# DNF数据库root密码\r\nDNF_DB_ROOT_PASSWORD\r\n# DNF数据库game密码（必须8位）\r\nDNF_DB_GAME_PASSWORD\r\n# supervisor web页面用户名\r\nWEB_USER\r\n# supervisor web页面密码\r\nWEB_PASS\r\n# ddns开关,默认为false,打开配置为true\r\nDDNS_ENABLE\r\n# ddns域名\r\nDDNS_DOMAIN\r\n# Netbird服务器地址\r\nNB_MANAGEMENT_URL\r\n# Netbird初始化KEY\r\nNB_SETUP_KEY\r\n```\r\n统一登陆器5.x版本，需要添加hosts，否则无法进入频道\r\n```shell\r\nPUBLIC_IP(你的服务器IP)  start.dnf.tw\r\n```\r\n请注意PUBLIC_IP手动设置后AUTO_PUBLIC_IP、DDNS、Netbird都会默认禁用。\r\n\r\n如果需要使用AUTO_PUBLIC_IP、DDNS、Netbird需要设置PUBLIC_IP=''\r\n\r\n最后需要注意的是PUBLIC_IP、AUTO_PUBLIC_IP、DDNS和Netbird只会有一个生效。\r\n\r\n## 更换/新增频道\r\n[点击查看更换频道教程](UpdateChannel.md)\r\n\r\n## FAQ\r\n1.点击网关登录，没反应，不出游戏（请透过Garena+执行）\r\n* A: windows7需要用管理员权限运行网关，windows10请不要用管理员权限运行网关\r\n* A: 无法使用虚拟机Console、VNC等访问Windows。\r\n* A: WIN+R输入dxdiag检查显示-DirectX功能是否全部开启。\r\n* A: 没有覆盖客户端补丁。\r\n\r\n2.服务端不出五国\r\n* A: 机器内存不够，swap未配置或配置后未生效，通过free -m查看swap占用内存\r\n* A: 服务器磁盘空间是否足够\r\n* A: 如果更换过PVF,请确保PVF是未加密的，而且需要同步更换对应的等级补丁\r\n* A: 机器内存低于2G可以尝试修改--shm-size=2g或1g\r\n* A: swap占用为0，通过free -m查看swap使用率，通过sysctl -p查看设置是否正确，设置正确依旧swap占用为0，需要重启服务器。\r\n\r\n3.镜像运行报错\r\n* A: 尝试更换其他镜像\r\n* A: 部分阉割系统可能不支持--cpus, --memory, --memory-swap, --shm-size尝试去除这些配置\r\n\r\n4.生成网关时出现非法字符提示\r\n* A: 默认用户名密码gm_user,gm_pass中带有下划线\"_\",与统一6.x版本的网关不兼容，可以尝试使用5.x版本网关或者更换默认网关用户名和密码\r\n\r\n5.灰频道或频道点击无法进入\r\n* A: 检查Linux服务端防火墙是否关闭\r\n* A: 检查云服务器厂商相关端口是否放开\r\n* A: 客户端windows是否配置hosts\r\n* A: PUBLIC_IP是否填错，windows需要能够访问到这个配置的PUBLIC_IP\r\n* A: 使用统一补丁需要检查网关生成的登陆器的IP\r\n* A: 使用Dof7.6补丁需要检查DNF.toml中的IP\r\n\r\n6.点击登录后报错（请重新安装Init）\r\n* A: PVF加密错误，需要重新加密PVF\r\n* A: 使用Dof7.6补丁，需要恢复成未加密PVF\r\n\r\n7.统一网关无法连接到数据库\r\n* A: 数据库默认端口3000，用户名使用root，密码默认88888888 ,请确保3000端口在云服务厂商配置里放开\r\n\r\n8.接收频道信息失败\r\n* A: 检查Linux服务端防火墙是否关闭\r\n* A: 检查云服务器厂商相关端口是否放开\r\n* A: 五国未成功跑出\r\n\r\n9.登陆器版本过期,请下载最新登陆器\r\n* A: 生成登录器，需要和【网关设置】中登录器版本一致\r\n\r\n10.正在连接网关，登陆器无法连接网关\r\n* A: 检查Linux服务端防火墙是否关闭\r\n* A: 检查云服务器厂商相关端口是否放开\r\n* A: 五国未成功跑出\r\n\r\n11.新建角色键盘无法输入\r\n* A: 与客户端有关，部分客户端没优化好会出现这个问题\r\n* A: windows7下需要用管理员权限运行启用中文输入法程序（可以加群问群友），或使用系统自带英文输入法\r\n* A: windows10需要使用系统自带的英文输入法\r\n* A: 使用Dof7.6补丁\r\n\r\n12.如何挂载DP\r\n* A: 不需要挂载DP，默认已经使用DP\r\n\r\n13.没有固定公网IP\r\n* A: 环境变量AUTO_PUBLIC_IP 可以启动容器时自己获取公网ip，自动重启的话需要自己写脚本去检测并重启容器\r\n* A: 客户端使用统一网关登录器+DOF7补丁，支持域名配置；统一补丁貌似不能用域名\r\n\r\n## 客户端地址下载\r\n链接：https://pan.baidu.com/s/10RgXFtpEhvRUm-hA98Am4A?pwd=fybn 提取码：fybn\r\n\r\n### 统一网关下载\r\n链接：https://pan.baidu.com/s/1Ea80rBlPQ4tY5P18ikucfw?pwd=bbd0 提取码：bbd0\r\n\r\n### Dof7补丁下载\r\n链接：https://pan.baidu.com/s/1rxlGfkfHTeGwzMKUNAbSlQ?pwd=ier2 提取码：ier2\r\n\r\n## 沟通交流\r\n\r\nQQ 1群：852685848(已满)\r\n\r\nQQ 2群：418505204(已满)\r\n\r\nQQ 3群：954929189\r\n\r\n欢迎各路大神加入。一起完善项目，成就当年梦，800万勇士冲！\r\n\r\n(群内没有任何的收费项目)\r\n\r\n## 学习资料\r\n\r\nDNF 玲珑学习网：https://daf.linglonger.com\r\n\r\n## 申明\r\n```\r\n虽然支持外网，但是千万别拿来开服。只能拿来学习使用!!!\r\n虽然支持外网，但是千万别拿来开服。只能拿来学习使用!!!\r\n虽然支持外网，但是千万别拿来开服。只能拿来学习使用!!!\r\n```\r\n\r\n## 🤝 特别感谢\r\n特别感谢 JetBrains 为本项目赞助 License\r\n\r\n[![Jetbrains](https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg?_gl=1*ng7jek*_ga*NTA3MTc0NTg3LjE2NDEwODQzMDI.*_ga_V0XZL7QHEB*MTY0MjU1NzM4OC40LjEuMTY0MjU1ODI0Mi4w)](https://jb.gg/OpenSourceSupport)\r\n"
        },
        {
          "name": "UpdateChannel.md",
          "type": "blob",
          "size": 3.8388671875,
          "content": "# 更换频道\n\n## 修改频道配置文件\n\n进入频道配置文件目录\n```shell\ncd /data/data/conf.d\n```\n\n频道配置介绍,默认的频道配置如下:\n```shell\n# channel 配置,理论上你不应该修改这块配置\n[program:channel]\ncommand=/bin/bash -c \"/data/channel/start_channel.sh\"\ndirectory=/home/neople/channel\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/channel.log\nredirect_stderr=true\ndepend=bridge\n\n# ch.11频道[普通频道]配置\n[program:game_siroco11]\ncommand=/bin/bash -c \"/data/channel/start_siroco.sh 11 3\" # 启动命令 11为频道编号 3为普通频道 默认会自动使用10011端口\ndirectory=/home/neople/game\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/game_siroco11.log # 日志存放位置\nredirect_stderr=true\ndepend=zergsvr\n\n# ch.52频道[决斗场频道]配置\n[program:game_siroco52]\ncommand=/bin/bash -c \"/data/channel/start_siroco.sh 52 5\"  # 启动命令 52为频道编号 5为决斗场频道 默认会自动使用10052端口\ndirectory=/home/neople/game\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/game_siroco52.log # 日志存放位置\nredirect_stderr=true\ndepend=game_siroco11\n\n[group:dnf_channel]\nprograms=channel,game_siroco11,game_siroco52 # 需要在这里注册所有频道\npriority=999\n```\n\n# 新增频道\n\n这里我们假设新增22频道,配置文件变更如下:\n```shell\n[program:channel]\ncommand=/bin/bash -c \"/data/channel/start_channel.sh\"\ndirectory=/home/neople/channel\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/channel.log\nredirect_stderr=true\ndepend=bridge\n\n[program:game_siroco11]\ncommand=/bin/bash -c \"/data/channel/start_siroco.sh 11 3\"\ndirectory=/home/neople/game\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/game_siroco11.log\nredirect_stderr=true\ndepend=channel\n\n[program:game_siroco22]\ncommand=/bin/bash -c \"/data/channel/start_siroco.sh 22 3\"\ndirectory=/home/neople/game\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/game_siroco22.log\nredirect_stderr=true\ndepend=channel\n\n[program:game_siroco52]\ncommand=/bin/bash -c \"/data/channel/start_siroco.sh 52 5\"\ndirectory=/home/neople/game\nuser=root\nautostart=true\nautorestart=true\nstopasgroup=true\nkillasgroup=true\nstdout_logfile=/data/log/game_siroco52.log\nredirect_stderr=true\ndepend=channel\n\n[group:dnf_channel]\nprograms=channel,game_siroco11,game_siroco52,game_siroco22\npriority=999\n```\n最终要的是我们需要将新增的game_siroco52加入到[group:dnf_channel]组内!!!\n\n## 开放端口\n\n由于我们新增了22频道，频道程序会自动使用10022端口，因此我们需要停止并移除docker容器，然后新增端口映射后再次启动\n```shell\n# 停止docker容器\ndocker stop dnf\n# 移除docker容器\ndocker rm dnf\n# 启动docker容器\n# 11022:11022/udp参数，来开放10022频道端口\ndocker run -d -e PUBLIC_IP=x.x.x.x -e WEB_USER=root -e WEB_PASS=123456 -e DNF_DB_ROOT_PASSWORD=88888888 -e GM_ACCOUNT=gmuser -e GM_PASSWORD=gmpass -v /data/log:/home/neople/game/log -v /data/mysql:/var/lib/mysql -v /data/data:/data -p 2000:180 -p 3000:3306/tcp -p 7600:7600/tcp -p 881:881/tcp -p 7001:7001/tcp -p 7001:7001/udp -p 10011:10011/tcp -p 11011:11011/udp -p 10022:10022/tcp -p 11022:11022/udp -p 10052:10052/tcp -p 11052:11052/udp -p 7200:7200/tcp -p 7200:7200/udp -p 2311-2313:2311-2313/udp --cap-add=NET_ADMIN --hostname=dnf --cpus=1 --memory=1g --memory-swap=-1 --shm-size=8g --name=dnf 1995chen/dnf:centos5-2.1.4.fix1\n```\n这里启动命令我们新增了-p 10022:10022/tcp -p 11022:11022/udp,该参数的作用就是映射新的频道端口。\n如果你开的是33频道，拿对应的端口参数就是:-p 10033:10033/tcp -p 11033:11033/udp。\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.171875,
          "content": "# 构建基础镜像\ndocker build -f $(pwd)/build/DnfBase -t 1995chen/centos:6.9 $(pwd)\n# 构建DNF服务\ndocker build -f $(pwd)/build/Dockerfile -t 1995chen/dnf:latest $(pwd)\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "other",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "台服dnf服务架构.docx",
          "type": "blob",
          "size": 2389.8994140625,
          "content": null
        }
      ]
    }
  ]
}