{
  "metadata": {
    "timestamp": 1736568252974,
    "page": 128,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jessfraz/dotfiles",
      "stars": 3245,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".Xdefaults",
          "type": "blob",
          "size": 0.0107421875,
          "content": ".Xresources"
        },
        {
          "name": ".Xprofile",
          "type": "blob",
          "size": 0.0244140625,
          "content": "#!/bin/sh\n\nxcompmgr -c &\n"
        },
        {
          "name": ".Xresources",
          "type": "blob",
          "size": 5.37109375,
          "content": "! vim: set ft=xdefaults:\n! Set $TERM variable\nURxvt.termName: rxvt-unicode\n\n!! drop in Solarized colorscheme for Xresources/Xdefaults\n\n!!SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   L*A*B      RGB         HSB\n!!--------- ------- ---- -------  ----------- ---------- ----------- -----------\n!!base03    #002b36  8/4 brblack  234 #1c1c1c 15 -12 -12   0  43  54 193 100  21\n!!base02    #073642  0/4 black    235 #262626 20 -12 -12   7  54  66 192  90  26\n!!base01    #586e75 10/7 brgreen  240 #585858 45 -07 -07  88 110 117 194  25  46\n!!base00    #657b83 11/7 bryellow 241 #626262 50 -07 -07 101 123 131 195  23  51\n!!base0     #839496 12/6 brblue   244 #808080 60 -06 -03 131 148 150 186  13  59\n!!base1     #93a1a1 14/4 brcyan   245 #8a8a8a 65 -05 -02 147 161 161 180   9  63\n!!base2     #eee8d5  7/7 white    254 #e4e4e4 92 -00  10 238 232 213  44  11  93\n!!base3     #fdf6e3 15/7 brwhite  230 #ffffd7 97  00  10 253 246 227  44  10  99\n!!yellow    #b58900  3/3 yellow   136 #af8700 60  10  65 181 137   0  45 100  71\n!!orange    #cb4b16  9/3 brred    166 #d75f00 50  50  55 203  75  22  18  89  80\n!!red       #dc322f  1/1 red      160 #d70000 50  65  45 220  50  47   1  79  86\n!!magenta   #d33682  5/5 magenta  125 #af005f 50  65 -05 211  54 130 331  74  83\n!!violet    #6c71c4 13/5 brmagenta 61 #5f5faf 50  15 -45 108 113 196 237  45  77\n!!blue      #268bd2  4/4 blue      33 #0087ff 55 -10 -45  38 139 210 205  82  82\n!!cyan      #2aa198  6/6 cyan      37 #00afaf 60 -35 -05  42 161 152 175  74  63\n!!green     #859900  2/2 green     64 #5f8700 60 -20  65 133 153   0  68 100  60\n\n#define S_base04        #00171d\n#define S_base03        #002b36\n#define S_base02        #073642\n#define S_base01        #586e75\n#define S_base00        #c1cacd\n#define S_base0         #839496\n#define S_base1         #93a1a1\n#define S_base2         #eee8d5\n#define S_base3         #fdf6e3\n#define S_yellow        #b58900\n#define S_orange        #cb4b16\n#define S_red           #dc322f\n#define S_magenta       #d33682\n#define S_violet        #6c71c4\n#define S_blue          #268bd2\n#define S_cyan          #2aa198\n#define S_green         #859900\n\n*background:            S_base04\nURxvt*background:       [90]S_base04\n*foreground:            S_base00\n*depth:                 32\n!!*fading:                40\n!!*fadeColor:             S_base03\n*cursorColor:           S_base1\n*pointerColorBackground:S_base01\n*pointerColorForeground:S_base1\n\n\n!! black dark/light\n*color0:                S_base02\n*color8:                S_base03\n\n!! red dark/light\n*color1:                S_red\n*color9:                S_orange\n\n!! green dark/light\n*color2:                S_green\n*color10:               S_base01\n\n!! yellow dark/light\n*color3:                S_yellow\n*color11:               S_base00\n\n!! blue dark/light\n*color4:                S_blue\n*color12:               S_base0\n\n!! magenta dark/light\n*color5:                S_magenta\n*color13:               S_violet\n\n!! cyan dark/light\n*color6:                S_cyan\n*color14:               S_base1\n\n!! white dark/light\n*color7:                S_base2\n*color15:               S_base3\n\n*utf8:                  1\n*saveLines:             999999\n\n!-- Xft settings -- !\n! Setting dpi here messes up the xrandr and xorg settings.\nXft.dpi:        192\nXft.rgba:       rgb\nXft.autohint:   0\nXft.lcdfilter:  lcddefault\nXft.hintstyle:  hintfull\nXft.hinting:    1\nXft.antialias:  1\n\n! -- Fonts -- !\nURxvt.font: xft:IBM Plex Mono:style=Regular:pixelsize=24:antialias=true:hinting=full,\\\n            xft:Noto Color Emoji,\\\n            xft:Symbola:pixelsize=24:antialias=true:hinting=full\nURxvt.boldFont: xft:IBM Plex Mono:style=Bold:pixelsize=24:antialias=true:hinting=full,\\\n                xft:Noto Color Emoji,\\\n                xft:Symbola:pixelsize=24:antialias=true:hinting=full\nURxvt.italicFont: xft:IBM Plex Mono:style=Italic:pixelsize=24:antialias=true:hinting=full,\\\n                xft:Noto Color Emoji,\\\n                xft:Symbola:pixelsize=24:antialias=true:hinting=full\nURxvt.boldItalicFont: xft:IBM Plex Mono:style=Bold Italic:pixelsize=24:antialias=true:hinting=full,\\\n                xft:Noto Color Emoji,\\\n                xft:Symbola:pixelsize=24:antialias=true:hinting=full\nURxvt.letterSpace: 0\n\n!!*faceSize:              10\n*bellIsUrgent:          true\n\n!! scroll\n!! do not scroll with output\nURxvt*scrollTtyOutput:      false\n!! scroll in relation to buffer (with mouse scroll or Shift+Page Up)\nURxvt*scrollWithBuffer:     true\n!! scroll back to the bottom on keypress\nURxvt*scrollTtyKeypress:    true\n\n!! scrollback buffer\nURxvt.secondaryScreen:  1\nURxvt.secondaryScroll:  0\nURxvt.secondaryWheel:   1\n\n!! scrollbar\n*scrollBar:             false\n\nURxvt*termName:         rxvt\n\n!! clickable urls\nURxvt.perl-ext-common:      default,matcher,selection-to-clipboard,clipboard\nURxvt.url-launcher:         /usr/bin/xdg-open\nURxvt.matcher.button:       1\nURxvt.url-select.underline: true\n\n!! copy paste\nURxvt.clipboard.autocopy:   true\nURxvt.clipboard.copycmd:    xclip -i -selection clipboard\nURxvt.clipboard.pastecmd:   xclip -o -selection clipboard\n\n!! disable default bindings for Control-Shift\nURxvt.iso14755: false\nURxvt.iso14755_52: false\n\n!! Control-Shift-C for copy\nURxvt.keysym.C-C: perl:clipboard:copy\nURxvt.keysym.C-V: perl:clipboard:paste\nURxvt.keysym.Control-v: perl:clipboard:paste\n\n!! get option over to work\nURxvt.keysym.M-Left:        \\033[1;5D\nURxvt.keysym.M-Right:       \\033[1;5C\nURxvt.keysym.Control-Left:  \\033[1;5D\nURxvt.keysym.Control-Right: \\033[1;5C\n"
        },
        {
          "name": ".aliases",
          "type": "blob",
          "size": 5.2626953125,
          "content": "#!/bin/bash\n\n# Use neovim for GitHub Copilot.\nalias vim=\"nvim\"\n\n# Check for various OS openers. Quit as soon as we find one that works.\nfor opener in browser-exec xdg-open cmd.exe cygstart \"start\" open; do\n\tif command -v $opener >/dev/null 2>&1; then\n\t\tif [[ \"$opener\" == \"cmd.exe\" ]]; then\n\t\t\t# shellcheck disable=SC2139\n\t\t\talias open=\"$opener /c start\";\n\t\telse\n\t\t\t# shellcheck disable=SC2139\n\t\t\talias open=\"$opener\";\n\t\tfi\n\t\tbreak;\n\tfi\ndone\n\n# Linux specific aliases, work on both MacOS and Linux.\npbcopy() {\n\tstdin=$(</dev/stdin);\n\tpbcopy=\"$(which pbcopy)\";\n\tif [[ -n \"$pbcopy\" ]]; then\n\t\techo \"$stdin\" | \"$pbcopy\"\n\telse\n\t\techo \"$stdin\" | xclip -selection clipboard\n\tfi\n}\npbpaste() {\n\tpbpaste=\"$(which pbpaste)\";\n\tif [[ -n \"$pbpaste\" ]]; then\n\t\t\"$pbpaste\"\n\telse\n\t\txclip -selection clipboard\n\tfi\n}\n\n# Easier navigation: .., ..., ...., ....., ~ and -\nalias ..=\"cd ..\"\nalias ...=\"cd ../..\"\nalias ....=\"cd ../../..\"\nalias .....=\"cd ../../../..\"\nalias ~=\"cd ~\" # `cd` is probably faster to type though\nalias -- -=\"cd -\"\n\n# Shortcuts\nalias dl=\"cd ~/Downloads\"\nalias g=\"git\"\nalias h=\"history\"\nalias gc=\". /usr/local/bin/gitdate && git commit -v \"\n\n# Detect which `ls` flavor is in use\nif ls --color > /dev/null 2>&1; then # GNU `ls`\n\tcolorflag=\"--color\"\nelse # OS X `ls`\n\tcolorflag=\"-G\"\nfi\n\n# List all files colorized in long format\n# shellcheck disable=SC2139\nalias l=\"ls -lhF ${colorflag}\"\n\n# List all files colorized in long format, including dot files\n# shellcheck disable=SC2139\nalias la=\"ls -lahF ${colorflag}\"\n\n# List only directories\n# shellcheck disable=SC2139\nalias lsd=\"ls -lhF ${colorflag} | grep --color=never '^d'\"\n\n# Always use color output for `ls`\n# shellcheck disable=SC2139\nalias ls=\"command ls ${colorflag}\"\nexport LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'\n\n# Always enable colored `grep` output\nalias grep='grep --color=auto '\n\n# Enable aliases to be sudo’ed\nalias sudo='sudo '\n\n# Get week number\nalias week='date +%V'\n\n# Stopwatch\nalias timer='echo \"Timer started. Stop with Ctrl-D.\" && date && time cat && date'\n\n# IP addresses\nalias pubip=\"dig +short myip.opendns.com @resolver1.opendns.com\"\nalias localip=\"sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\\\\.){3}[0-9]*' | grep -Eo '([0-9]*\\\\.){3}[0-9]*' | grep -v '127.0.0.1'\"\nalias ips=\"sudo ifconfig -a | grep -o 'inet6\\\\? \\\\(addr:\\\\)\\\\?\\\\s\\\\?\\\\(\\\\(\\\\([0-9]\\\\+\\\\.\\\\)\\\\{3\\\\}[0-9]\\\\+\\\\)\\\\|[a-fA-F0-9:]\\\\+\\\\)' | awk '{ sub(/inet6? (addr:)? ?/, \\\"\\\"); print }'\"\n\n# Flush Directory Service cache\nalias flush=\"dscacheutil -flushcache && killall -HUP mDNSResponder\"\n\n# View HTTP traffic\nalias sniff=\"sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'\"\nalias httpdump=\"sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \\\"Host\\\\: .*|GET \\\\/.*\\\"\"\n\n# Canonical hex dump; some systems have this symlinked\ncommand -v hd > /dev/null || alias hd=\"hexdump -C\"\n\n# OS X has no `md5sum`, so use `md5` as a fallback\ncommand -v md5sum > /dev/null || alias md5sum=\"md5\"\n\n# OS X has no `sha1sum`, so use `shasum` as a fallback\ncommand -v sha1sum > /dev/null || alias sha1sum=\"shasum\"\n\n# Trim new lines and copy to clipboard\nalias c=\"tr -d '\\\\n' | xclip -selection clipboard\"\n\n# URL-encode strings\nalias urlencode='python -c \"import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);\"'\n\n# Merge PDF files\n# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`\nalias mergepdf='/System/Library/Automator/Combine\\ PDF\\ Pages.action/Contents/Resources/join.py'\n\n# Intuitive map function\n# For example, to list all directories that contain a certain file:\n# find . -name .gitattributes | map dirname\nalias map=\"xargs -n1\"\n\n# One of @janmoesen’s ProTip™s\nfor method in GET HEAD POST PUT DELETE TRACE OPTIONS; do\n\t# shellcheck disable=SC2139,SC2140\n\talias \"$method\"=\"lwp-request -m \\\"$method\\\"\"\ndone\n\n# Kill all the tabs in Chrome to free up memory\n# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description\nalias chromekill=\"ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill\"\n\n# Lock the screen (when going AFK)\nalias afk=\"i3lock -c 000000\"\n\n# vhosts\nalias hosts='sudo vim /etc/hosts'\n\n# copy working directory\nalias cwd='pwd | tr -d \"\\r\\n\" | xclip -selection clipboard'\n\n# copy file interactive\nalias cp='cp -i'\n\n# move file interactive\nalias mv='mv -i'\n\n# untar\nalias untar='tar xvf'\n\n# Pipe my public key to my clipboard.\nalias pubkey=\"more ~/.ssh/id_ed25519.pub | xclip -selection clipboard | echo '=> Public key copied to pasteboard.'\"\n\n# Pipe my private key to my clipboard.\nalias prikey=\"more ~/.ssh/id_ed25519 | xclip -selection clipboard | echo '=> Private key copied to pasteboard.'\"\n\n# Blender\nalias blender='/Applications/Blender.app/Contents/MacOS/Blender'\n\n# CAD exchanger\nalias cad_exchanger='/Applications/CAD\\ Exchanger.app/Contents/MacOS/ExchangerConv'\n"
        },
        {
          "name": ".bash_profile",
          "type": "blob",
          "size": 0.2197265625,
          "content": "#!/bin/bash\n\n# Load .bashrc, which loads: ~/.{bash_prompt,aliases,functions,path,dockerfunc,extra,exports}\nif [[ -r \"${HOME}/.bashrc\" ]]; then\n\t# shellcheck source=/dev/null\n\tsource \"${HOME}/.bashrc\"\nfi\n\n. \"$HOME/.cargo/env\"\n"
        },
        {
          "name": ".bash_prompt",
          "type": "blob",
          "size": 3.521484375,
          "content": "#!/bin/bash\n# Shell prompt based on the Solarized Dark theme.\n# Screenshot: http://i.imgur.com/EkEtphC.png\n# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles\n# iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.\n# vim: set filetype=sh :\n\nif [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then\n\texport TERM='gnome-256color';\nelif infocmp rxvt-unicode-256color >/dev/null 2>&1; then\n\texport TERM='rxvt-unicode';\nelif infocmp xterm-256color >/dev/null 2>&1; then\n\texport TERM='xterm-256color';\nfi;\n\nprompt_git() {\n\tlocal s='';\n\tlocal branchName='';\n\n\t# Check if the current directory is in a Git repository.\n\tif [ \"$(git rev-parse --is-inside-work-tree &>/dev/null; echo \"${?}\")\" == '0' ]; then\n\n\t\t# check if the current directory is in .git before running git checks\n\t\tif [ \"$(git rev-parse --is-inside-git-dir 2> /dev/null)\" == 'false' ]; then\n\n\t\t\tif [[ -O \"$(git rev-parse --show-toplevel)/.git/index\" ]]; then\n\t\t\t\tgit update-index --really-refresh -q &> /dev/null;\n\t\t\tfi;\n\n\t\t\t# Check for uncommitted changes in the index.\n\t\t\tif ! git diff --quiet --ignore-submodules --cached; then\n\t\t\t\ts+='+';\n\t\t\tfi;\n\n\t\t\t# Check for unstaged changes.\n\t\t\tif ! git diff-files --quiet --ignore-submodules --; then\n\t\t\t\ts+='!';\n\t\t\tfi;\n\n\t\t\t# Check for untracked files.\n\t\t\tif [ -n \"$(git ls-files --others --exclude-standard)\" ]; then\n\t\t\t\ts+='?';\n\t\t\tfi;\n\n\t\t\t# Check for stashed files.\n\t\t\tif git rev-parse --verify refs/stash &>/dev/null; then\n\t\t\t\ts+='$';\n\t\t\tfi;\n\n\t\tfi;\n\n\t\t# Get the short symbolic ref.\n\t\t# If HEAD isn’t a symbolic ref, get the short SHA for the latest commit\n\t\t# Otherwise, just give up.\n\t\tbranchName=\"$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \\\n\t\t\tgit rev-parse --short HEAD 2> /dev/null || \\\n\t\t\techo '(unknown)')\";\n\n\t\t[ -n \"${s}\" ] && s=\" [${s}]\";\n\n\t\techo -e \"${1}${branchName}${blue}${s}\";\n\telse\n\t\treturn;\n\tfi;\n}\n\ncloud=\"\"\nif [[ -f /proc/cpuinfo ]] && grep -q \"^flags.* hypervisor\" /proc/cpuinfo && [[ ! -d \"/mnt/c/Windows/\" ]]; then\n\tcloud=\"☁️ \"\nfi\n\nif tput setaf 1 &> /dev/null; then\n\ttput sgr0; # reset colors\n\tbold=$(tput bold);\n\treset=$(tput sgr0);\n\t# Solarized colors, taken from http://git.io/solarized-colors.\n\tblack=$(tput setaf 0);\n\tblue=$(tput setaf 33);\n\tcyan=$(tput setaf 37);\n\tgreen=$(tput setaf 64);\n\torange=$(tput setaf 166);\n\tpurple=$(tput setaf 125);\n\tred=$(tput setaf 124);\n\tviolet=$(tput setaf 61);\n\twhite=$(tput setaf 15);\n\tyellow=$(tput setaf 136);\nelse\n\tbold='';\n\treset=\"\\\\e[0m\";\n\t# shellcheck disable=SC2034\n\tblack=\"\\\\e[1;30m\";\n\tblue=\"\\\\e[1;34m\";\n\tcyan=\"\\\\e[1;36m\";\n\tgreen=\"\\\\e[1;32m\";\n\t# shellcheck disable=SC2034\n\torange=\"\\\\e[1;33m\";\n\t# shellcheck disable=SC2034\n\tpurple=\"\\\\e[1;35m\";\n\tred=\"\\\\e[1;31m\";\n\tviolet=\"\\\\e[1;35m\";\n\twhite=\"\\\\e[1;37m\";\n\tyellow=\"\\\\e[1;33m\";\nfi;\n\n# Highlight the user name when logged in as root.\nif [[ \"${USER}\" == \"root\" ]]; then\n\tuserStyle=\"${red}\";\nelse\n\tuserStyle=\"${blue}\";\nfi;\n\n# Highlight the hostname when connected via SSH.\nif [[ \"${SSH_TTY}\" ]]; then\n\thostStyle=\"${bold}${cyan}\";\nelse\n\thostStyle=\"${cyan}\";\nfi;\n\n# Set the terminal title to the current working directory.\nPS1=\"\\\\[\\\\033]0;\\\\w\\\\007\\\\]\";\nPS1+=\"\\\\[${bold}\\\\]\\\\n\"; # newline\nPS1+=\"\\\\[${userStyle}\\\\]\\\\u\"; # username\nPS1+=\"\\\\[${white}\\\\] at \";\nPS1+=\"\\\\[${hostStyle}\\\\]${cloud}\\\\h\"; # host\nPS1+=\"\\\\[${white}\\\\] in \";\nPS1+=\"\\\\[${green}\\\\]\\\\w\"; # working directory\nPS1+=\"\\$(prompt_git \\\"${white} on ${violet}\\\")\"; # Git repository details\nPS1+=\"\\\\n\";\nPS1+=\"\\\\[${white}\\\\]\\$ \\\\[${reset}\\\\]\"; # `$` (and reset color)\nexport PS1;\n\nPS2=\"\\\\[${yellow}\\\\]→ \\\\[${reset}\\\\]\";\nexport PS2;\n"
        },
        {
          "name": ".bashrc",
          "type": "blob",
          "size": 5.326171875,
          "content": "#!/bin/bash\n# ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\ncase $- in\n\t*i*) ;;\n\t*) return;;\nesac\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# If set, the pattern \"**\" used in a pathname expansion context will\n# match all files and zero or more directories and subdirectories.\n#shopt -s globstar\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && export LESSOPEN=\"|lesspipe %s\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n\tdebian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n\txterm-color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\nforce_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n\tif [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n\t\t# We have color support; assume it's compliant with Ecma-48\n\t\t# (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n\t\t# a case would tend to support setf rather than setaf.)\n\t\tcolor_prompt=yes\n\telse\n\t\tcolor_prompt=\n\tfi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n\tPS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n\tPS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\n\txterm*|rxvt*)\n\t\tPS1=\"\\\\[\\\\e]0;${debian_chroot:+($debian_chroot)}\\\\u@\\\\h: \\\\w\\\\a\\\\]$PS1\"\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n\t# shellcheck disable=SC2015\n\ttest -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n\talias ls='ls --color=auto'\n\talias dir='dir --color=auto'\n\talias vdir='vdir --color=auto'\n\n\talias grep='grep --color=auto'\n\talias fgrep='fgrep --color=auto'\n\talias egrep='egrep --color=auto'\nfi\n\n# Add an \"alert\" alias for long running commands.  Use like so:\n#\tsleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n\tif [[ -f /usr/share/bash-completion/bash_completion ]]; then\n\t\t# shellcheck source=/dev/null\n\t\t. /usr/share/bash-completion/bash_completion\n\telif [[ -f /etc/bash_completion ]]; then\n\t\t# shellcheck source=/dev/null\n\t\t. /etc/bash_completion\n\telif [[ -f /usr/local/etc/bash_completion ]]; then\n\t\t# shellcheck source=/dev/null\n\t\t. /usr/local/etc/bash_completion\n\tfi\nfi\nif [[ -d /etc/bash_completion.d/ ]]; then\n\tfor file in /etc/bash_completion.d/* ; do\n\t\t# shellcheck source=/dev/null\n\t\tsource \"$file\"\n\tdone\nfi\n\n# We do this before the following so that all the paths work.\nfor file in ~/.{bash_prompt,aliases,functions,path,dockerfunc,extra,exports}; do\n\tif [[ -r \"$file\" ]] && [[ -f \"$file\" ]]; then\n\t\t# shellcheck source=/dev/null\n\t\tsource \"$file\"\n\tfi\ndone\nunset file\n\n# Start the gpg-agent if not already running\nif ! pgrep -x -u \"${USER}\" gpg-agent >/dev/null 2>&1; then\n\tgpg-connect-agent /bye >/dev/null 2>&1\nfi\ngpg-connect-agent updatestartuptty /bye >/dev/null\n# use a tty for gpg\n# solves error: \"gpg: signing failed: Inappropriate ioctl for device\"\nGPG_TTY=$(tty)\nexport GPG_TTY\n# Set SSH to use gpg-agent\nunset SSH_AGENT_PID\nif [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then\n\tif [[ -z \"$SSH_AUTH_SOCK\" ]] || [[ \"$SSH_AUTH_SOCK\" == *\"apple.launchd\"* ]]; then\n\t\tSSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\"\n\t\texport SSH_AUTH_SOCK\n\tfi\nfi\n\n# Case-insensitive globbing (used in pathname expansion)\nshopt -s nocaseglob\n\n# Append to the Bash history file, rather than overwriting it\nshopt -s histappend\n\n# Autocorrect typos in path names when using `cd`\nshopt -s cdspell\n\n# Enable some Bash 4 features when possible:\n# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`\n# * Recursive globbing, e.g. `echo **/*.txt`\nfor option in autocd globstar; do\n\tshopt -s \"$option\" 2> /dev/null\ndone\n\n# Add tab completion for SSH hostnames based on ~/.ssh/config\n# ignoring wildcards\n[[ -e \"$HOME/.ssh/config\" ]] && complete -o \"default\" \\\n\t-o \"nospace\" \\\n\t-W \"$(grep \"^Host\" ~/.ssh/config | \\\n\tgrep -v \"[?*]\" | cut -d \" \" -f2 | \\\n\ttr ' ' '\\n')\" scp sftp ssh\n\n# source kubectl bash completion\nif hash kubectl 2>/dev/null; then\n\t# shellcheck source=/dev/null\n\tsource <(kubectl completion bash)\nfi\n\n# get the gh completions\nif hash gh 2>/dev/null; then\n\teval \"$(gh completion -s bash)\"\nfi\n\n# get the kittycad completions\nif hash kittycad 2>/dev/null; then\n\teval \"$(kittycad completion -s bash)\"\nfi\n\n# get the rustup completions\nif hash rustup 2>/dev/null; then\n\teval \"$(rustup completions bash)\"\nfi\n\n\n# source travis bash completion\nif [[ -f \"${HOME}/.travis/travis.sh\" ]]; then\n\t# shellcheck source=/dev/null\n\tsource \"${HOME}/.travis/travis.sh\"\nfi\n\n\n"
        },
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerfunc",
          "type": "blob",
          "size": 30.0458984375,
          "content": "#!/bin/bash\n# Bash wrappers for docker run commands\n\nexport DOCKER_REPO_PREFIX=jess\n\n#\n# Helper Functions\n#\ndcleanup(){\n\tlocal containers\n\tmapfile -t containers < <(docker ps -aq 2>/dev/null)\n\tdocker rm \"${containers[@]}\" 2>/dev/null\n\tlocal volumes\n\tmapfile -t volumes < <(docker ps --filter status=exited -q 2>/dev/null)\n\tdocker rm -v \"${volumes[@]}\" 2>/dev/null\n\tlocal images\n\tmapfile -t images < <(docker images --filter dangling=true -q 2>/dev/null)\n\tdocker rmi \"${images[@]}\" 2>/dev/null\n\tmapfile -t images < <(docker images -q 2>/dev/null)\n\tdocker rmi \"${images[@]}\" 2>/dev/null\n\tdocker system prune -f\n}\ndel_stopped(){\n\tlocal name=$1\n\tlocal state\n\tstate=$(docker inspect --format \"{{.State.Running}}\" \"$name\" 2>/dev/null)\n\n\tif [[ \"$state\" == \"false\" ]]; then\n\t\tdocker rm \"$name\"\n\tfi\n}\nrmctr(){\n\t# shellcheck disable=SC2068\n\tdocker rm -f $@ 2>/dev/null || true\n}\nrelies_on(){\n\tfor container in \"$@\"; do\n\t\tlocal state\n\t\tstate=$(docker inspect --format \"{{.State.Running}}\" \"$container\" 2>/dev/null)\n\n\t\tif [[ \"$state\" == \"false\" ]] || [[ \"$state\" == \"\" ]]; then\n\t\t\techo \"$container is not running, starting it for you.\"\n\t\t\t$container\n\t\tfi\n\tdone\n}\n# creates an nginx config for a local route\nnginx_config(){\n\tserver=$1\n\troute=$2\n\n\tcat >\"${HOME}/.nginx/conf.d/${server}.conf\" <<-EOF\n\tupstream ${server} { server ${route}; }\n\tserver {\n\tserver_name ${server};\n\n\tlocation / {\n\tproxy_pass  http://${server};\n\tproxy_http_version 1.1;\n\tproxy_set_header Upgrade \\$http_upgrade;\n\tproxy_set_header Connection \"upgrade\";\n\tproxy_set_header Host \\$http_host;\n\tproxy_set_header X-Forwarded-Proto \\$scheme;\n\tproxy_set_header X-Forwarded-For \\$remote_addr;\n\tproxy_set_header X-Forwarded-Port \\$server_port;\n\tproxy_set_header X-Request-Start \\$msec;\n}\n\t}\n\tEOF\n\n\t# restart nginx\n\tdocker restart nginx\n\n\t# add host to /etc/hosts\n\thostess add \"$server\" 127.0.0.1\n\n\t# open browser\n\tbrowser-exec \"http://${server}\"\n}\n\n#\n# Container Aliases\n#\napt_file(){\n\tif [[ -n \"$(which apt-file)\" ]]; then\n\t\t\"$(which apt-file)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t--name apt-file \\\n\t\t\t${DOCKER_REPO_PREFIX}/apt-file\n\tfi\n}\nalias apt-file=\"apt_file\"\naudacity(){\n\tdel_stopped audacity\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--device /dev/snd \\\n\t\t--group-add audio \\\n\t\t--name audacity \\\n\t\t${DOCKER_REPO_PREFIX}/audacity\n}\naws(){\n\tif [[ -n \"$(which aws)\" ]]; then\n\t\t\"$(which aws)\" \"$@\"\n\telse\n\t\tdocker run -it --rm \\\n\t\t\t-v \"${HOME}/.aws:/root/.aws\" \\\n\t\t\t--log-driver none \\\n\t\t\t--name aws \\\n\t\t\t${DOCKER_REPO_PREFIX}/awscli \"$@\"\n\tfi\n}\naz(){\n\tdocker run -it --rm \\\n\t\t-v \"${HOME}/.azure:/root/.azure\" \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/azure-cli \"$@\"\n}\nbees(){\n\tdocker run -it --rm \\\n\t\t-e NOTARY_TOKEN \\\n\t\t-v \"${HOME}/.bees:/root/.bees\" \\\n\t\t-v \"${HOME}/.boto:/root/.boto\" \\\n\t\t-v \"${HOME}/.dev:/root/.ssh:ro\" \\\n\t\t--log-driver none \\\n\t\t--name bees \\\n\t\t${DOCKER_REPO_PREFIX}/beeswithmachineguns \"$@\"\n}\ncadvisor(){\n\tdocker run -d \\\n\t\t--restart always \\\n\t\t-v /:/rootfs:ro \\\n\t\t-v /var/run:/var/run:rw \\\n\t\t-v /sys:/sys:ro  \\\n\t\t-v /var/lib/docker/:/var/lib/docker:ro \\\n\t\t-p 1234:8080 \\\n\t\t--name cadvisor \\\n\t\tgoogle/cadvisor\n\n\thostess add cadvisor \"$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' cadvisor)\"\n\tbrowser-exec \"http://cadvisor:8080\"\n}\ncheese(){\n\tdel_stopped cheese\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/Pictures:/root/Pictures\" \\\n\t\t--device /dev/video0 \\\n\t\t--device /dev/snd \\\n\t\t--device /dev/dri \\\n\t\t--name cheese \\\n\t\t${DOCKER_REPO_PREFIX}/cheese\n}\nchrome(){\n\t# add flags for proxy if passed\n\tlocal proxy=\n\tlocal map\n\tlocal args=$*\n\tif [[ \"$1\" == \"tor\" ]]; then\n\t\trelies_on torproxy\n\n\t\tmap=\"MAP * ~NOTFOUND , EXCLUDE torproxy\"\n\t\tproxy=\"socks5://torproxy:9050\"\n\t\targs=\"https://check.torproject.org/api/ip ${*:2}\"\n\tfi\n\n\tdel_stopped chrome\n\n\t# one day remove /etc/hosts bind mount when effing\n\t# overlay support inotify, such bullshit\n\tdocker run -d \\\n\t\t--memory 3gb \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/Downloads:/root/Downloads\" \\\n\t\t-v \"${HOME}/Pictures:/root/Pictures\" \\\n\t\t-v \"${HOME}/Torrents:/root/Torrents\" \\\n\t\t-v \"${HOME}/.chrome:/data\" \\\n\t\t-v /dev/shm:/dev/shm \\\n\t\t-v /etc/hosts:/etc/hosts \\\n\t\t--security-opt seccomp:/etc/docker/seccomp/chrome.json \\\n\t\t--device /dev/snd \\\n\t\t--device /dev/dri \\\n\t\t--device /dev/video0 \\\n\t\t--device /dev/usb \\\n\t\t--device /dev/bus/usb \\\n\t\t--group-add audio \\\n\t\t--group-add video \\\n\t\t--name chrome \\\n\t\t${DOCKER_REPO_PREFIX}/chrome --user-data-dir=/data \\\n\t\t--proxy-server=\"$proxy\" \\\n\t\t--host-resolver-rules=\"$map\" \"$args\"\n\n}\nconsul(){\n\tif [[ -n \"$(which consul)\" ]]; then\n\t\t\"$(which consul)\" \"$@\"\n\telse\n\t\tdel_stopped consul\n\n\t\t# check if we passed args and if consul is running\n\t\tlocal state\n\t\tstate=$(docker inspect --format \"{{.State.Running}}\" consul 2>/dev/null)\n\t\tif [[ \"$state\" == \"true\" ]] && [[ \"$*\" != \"\" ]]; then\n\t\t\tdocker exec -it consul consul \"$@\"\n\t\t\treturn 0\n\t\tfi\n\n\t\tdocker run -d \\\n\t\t\t--restart always \\\n\t\t\t-v \"${HOME}/.consul:/etc/consul.d\" \\\n\t\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t\t--net host \\\n\t\t\t-e GOMAXPROCS=2 \\\n\t\t\t--name consul \\\n\t\t\t${DOCKER_REPO_PREFIX}/consul agent \\\n\t\t\t-bootstrap-expect 1 \\\n\t\t\t-config-dir /etc/consul.d \\\n\t\t\t-data-dir /data \\\n\t\t\t-encrypt \"$(docker run --rm ${DOCKER_REPO_PREFIX}/consul keygen)\" \\\n\t\t\t-ui-dir /usr/src/consul \\\n\t\t\t-server \\\n\t\t\t-dc neverland \\\n\t\t\t-bind 0.0.0.0\n\n\t\thostess add consul \"$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' consul)\"\n\t\tbrowser-exec \"http://consul:8500\"\n\tfi\n}\ncura(){\n\tdel_stopped cura\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/cura:/root/cura\" \\\n\t\t-v \"${HOME}/.cache/cura:/root/.cache/cura\" \\\n\t\t-v \"${HOME}/.config/cura:/root/.config/cura\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/dri \\\n\t\t--name cura \\\n\t\t${DOCKER_REPO_PREFIX}/cura\n}\ndcos(){\n\tdocker run -it --rm \\\n\t\t-v \"${HOME}/.dcos:/root/.dcos\" \\\n\t\t-v \"$(pwd):/root/apps\" \\\n\t\t-w /root/apps \\\n\t\t${DOCKER_REPO_PREFIX}/dcos-cli \"$@\"\n}\nfigma() {\n\tdel_stopped figma\n\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--name figma \\\n\t\t${DOCKER_REPO_PREFIX}/figma-wine bash\n}\nfirefox(){\n\tdel_stopped firefox\n\n\tdocker run -d \\\n\t\t--memory 2gb \\\n\t\t--net host \\\n\t\t--cpuset-cpus 0 \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-v \"${HOME}/.firefox/cache:/root/.cache/mozilla\" \\\n\t\t-v \"${HOME}/.firefox/mozilla:/root/.mozilla\" \\\n\t\t-v \"${HOME}/Downloads:/root/Downloads\" \\\n\t\t-v \"${HOME}/Pictures:/root/Pictures\" \\\n\t\t-v \"${HOME}/Torrents:/root/Torrents\" \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/snd \\\n\t\t--device /dev/dri \\\n\t\t--name firefox \\\n\t\t${DOCKER_REPO_PREFIX}/firefox \"$@\"\n\n\t# exit current shell\n\texit 0\n}\nfleetctl(){\n\tdocker run --rm -it \\\n\t\t--entrypoint fleetctl \\\n\t\t-v \"${HOME}/.fleet://.fleet\" \\\n\t\tr.j3ss.co/fleet \"$@\"\n}\ngcalcli(){\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/.gcalcli/home:/home/gcalcli/home\" \\\n\t\t-v \"${HOME}/.gcalcli/work/oauth:/home/gcalcli/.gcalcli_oauth\" \\\n\t\t-v \"${HOME}/.gcalcli/work/gcalclirc:/home/gcalcli/.gcalclirc\" \\\n\t\t--name gcalcli \\\n\t\t${DOCKER_REPO_PREFIX}/gcalcli \"$@\"\n}\ndgcloud(){\n\tdocker run --rm -it \\\n\t\t-v \"${HOME}/.gcloud:/root/.config/gcloud\" \\\n\t\t-v \"${HOME}/.ssh:/root/.ssh:ro\" \\\n\t\t-v \"$(command -v docker):/usr/bin/docker\" \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t--name gcloud \\\n\t\t${DOCKER_REPO_PREFIX}/gcloud \"$@\"\n}\ngimp(){\n\tdel_stopped gimp\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/Pictures:/root/Pictures\" \\\n\t\t-v \"${HOME}/.gtkrc:/root/.gtkrc\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--name gimp \\\n\t\t${DOCKER_REPO_PREFIX}/gimp\n}\ngitsome(){\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t--name gitsome \\\n\t\t--hostname gitsome \\\n\t\t-v \"${HOME}/.gitsomeconfig:/home/anon/.gitsomeconfig\" \\\n\t\t-v \"${HOME}/.gitsomeconfigurl:/home/anon/.gitsomeconfigurl\" \\\n\t\t${DOCKER_REPO_PREFIX}/gitsome\n}\nhollywood(){\n\tdocker run --rm -it \\\n\t\t--name hollywood \\\n\t\t${DOCKER_REPO_PREFIX}/hollywood\n}\nhtop(){\n\tif [[ -n \"$(which htop)\" ]]; then\n\t\t\"$(which htop)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t--pid host \\\n\t\t\t--net none \\\n\t\t\t--name htop \\\n\t\t\t${DOCKER_REPO_PREFIX}/htop\n\tfi\n}\nhtpasswd(){\n\tdocker run --rm -it \\\n\t\t--net none \\\n\t\t--name htpasswd \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/htpasswd \"$@\"\n}\nhttp(){\n\tdocker run -t --rm \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/httpie \"$@\"\n}\nimagemin(){\n\tlocal image=$1\n\tlocal extension=\"${image##*.}\"\n\tlocal filename=\"${image%.*}\"\n\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/Pictures:/root/Pictures\" \\\n\t\t${DOCKER_REPO_PREFIX}/imagemin sh -c \"imagemin /root/Pictures/${image} > /root/Pictures/${filename}_min.${extension}\"\n}\nirssi() {\n\tdel_stopped irssi\n\t# relies_on notify_osd\n\n\tdocker run --rm -it \\\n\t\t--user root \\\n\t\t-v \"${HOME}/.irssi:/home/user/.irssi\" \\\n\t\tirssi \\\n\t\tchown -R user /home/user/.irssi\n\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/.irssi:/home/user/.irssi\" \\\n\t\t--read-only \\\n\t\t--name irssi \\\n\t\tirssi\n}\njohn(){\n\tlocal file\n\tfile=$(realpath \"$1\")\n\n\tdocker run --rm -it \\\n\t\t-v \"${file}:/root/$(basename \"${file}\")\" \\\n\t\t${DOCKER_REPO_PREFIX}/john \"$@\"\n}\nkernel_builder(){\n\tdocker run --rm -it \\\n\t\t-v /usr/src:/usr/src \\\n\t\t-v /lib/modules:/lib/modules \\\n\t\t-v /boot:/boot \\\n\t\t--name kernel-builder \\\n\t\t${DOCKER_REPO_PREFIX}/kernel-builder\n}\nkeypassxc(){\n\tdel_stopped keypassxc\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-v /usr/share/X11/xkb:/usr/share/X11/xkb:ro \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v /etc/machine-id:/etc/machine-id:ro \\\n\t\t--name keypassxc \\\n\t\t${DOCKER_REPO_PREFIX}/keepassxc\n}\nkicad(){\n\tdel_stopped kicad\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/kicad:/root/kicad\" \\\n\t\t-v \"${HOME}/.cache/kicad:/root/.cache/kicad\" \\\n\t\t-v \"${HOME}/.config/kicad:/root/.config/kicad\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/dri \\\n\t\t--name kicad \\\n\t\t${DOCKER_REPO_PREFIX}/kicad\n}\nkvm(){\n\tdel_stopped kvm\n\trelies_on pulseaudio\n\n\t# modprobe the module\n\tmodprobe kvm\n\n\tdocker run -d \\\n\t\t--tmpfs /var/run \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-v \"${HOME}/kvm:/root/kvm\" \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--link pulseaudio:pulseaudio \\\n\t\t-e PULSE_SERVER=pulseaudio \\\n\t\t--group-add audio \\\n\t\t--name kvm \\\n\t\t--privileged \\\n\t\t${DOCKER_REPO_PREFIX}/kvm\n}\nlibreoffice(){\n\tdel_stopped libreoffice\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/slides:/root/slides\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--name libreoffice \\\n\t\t${DOCKER_REPO_PREFIX}/libreoffice\n}\nlpass(){\n\tdocker run --rm -it \\\n\t\t-v \"${HOME}/.lpass:/root/.lpass\" \\\n\t\t--name lpass \\\n\t\t${DOCKER_REPO_PREFIX}/lpass \"$@\"\n}\nlynx(){\n\tif [[ -n \"$(which lynx)\" ]]; then\n\t\t\"$(which lynx)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t--name lynx \\\n\t\t\t${DOCKER_REPO_PREFIX}/lynx \"$@\"\n\tfi\n}\nmasscan(){\n\tdocker run -it --rm \\\n\t\t--log-driver none \\\n\t\t--net host \\\n\t\t--cap-add NET_ADMIN \\\n\t\t--name masscan \\\n\t\t${DOCKER_REPO_PREFIX}/masscan \"$@\"\n}\nmc(){\n\tcwd=\"$(pwd)\"\n\tname=\"$(basename \"$cwd\")\"\n\n\tdocker run --rm -it \\\n\t\t--log-driver none \\\n\t\t-v \"${cwd}:/home/mc/${name}\" \\\n\t\t--workdir \"/home/mc/${name}\" \\\n\t\t${DOCKER_REPO_PREFIX}/mc \"$@\"\n}\nmpd(){\n\tdel_stopped mpd\n\n\t# adding cap sys_admin so I can use nfs mount\n\t# the container runs as a unpriviledged user mpd\n\tdocker run -d \\\n\t\t--device /dev/snd \\\n\t\t--cap-add SYS_ADMIN \\\n\t\t-e MPD_HOST=/var/lib/mpd/socket \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /etc/exports:/etc/exports:ro \\\n\t\t-v \"${HOME}/.mpd:/var/lib/mpd\" \\\n\t\t-v \"${HOME}/.mpd.conf:/etc/mpd.conf\" \\\n\t\t--name mpd \\\n\t\t${DOCKER_REPO_PREFIX}/mpd\n}\nmutt(){\n\t# subshell so we dont overwrite variables\n\t(\n\tlocal account=$1\n\texport IMAP_SERVER\n\texport SMTP_SERVER\n\n\tif [[ \"$account\" == \"riseup\" ]]; then\n\t\texport GMAIL=$MAIL_RISEUP\n\t\texport GMAIL_NAME=$MAIL_RISEUP_NAME\n\t\texport GMAIL_PASS=$MAIL_RISEUP_PASS\n\t\texport GMAIL_FROM=$MAIL_RISEUP_FROM\n\t\tIMAP_SERVER=mail.riseup.net\n\t\tSMTP_SERVER=$IMAP_SERVER\n\tfi\n\n\tdocker run -it --rm \\\n\t\t-e GMAIL \\\n\t\t-e GMAIL_NAME \\\n\t\t-e GMAIL_PASS \\\n\t\t-e GMAIL_FROM \\\n\t\t-e GPG_ID \\\n\t\t-e IMAP_SERVER \\\n\t\t-e SMTP_SERVER \\\n\t\t-v \"${HOME}/.gnupg:/home/user/.gnupg:ro\" \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t--name \"mutt-${account}\" \\\n\t\t${DOCKER_REPO_PREFIX}/mutt\n\t)\n}\nncmpc(){\n\tdel_stopped ncmpc\n\n\tdocker run --rm -it \\\n\t\t-v \"${HOME}/.mpd/socket:/var/run/mpd/socket\" \\\n\t\t-e MPD_HOST=/var/run/mpd/socket \\\n\t\t--name ncmpc \\\n\t\t${DOCKER_REPO_PREFIX}/ncmpc \"$@\"\n}\nneoman(){\n\tdel_stopped neoman\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--device /dev/bus/usb \\\n\t\t--device /dev/usb \\\n\t\t--name neoman \\\n\t\t${DOCKER_REPO_PREFIX}/neoman\n}\nnes(){\n\tdel_stopped nes\n\tlocal game=$1\n\n\tdocker run -d \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--device /dev/dri \\\n\t\t--device /dev/snd \\\n\t\t--name nes \\\n\t\t${DOCKER_REPO_PREFIX}/nes \"/games/${game}.rom\"\n}\nnetcat(){\n\tdocker run --rm -it \\\n\t\t--net host \\\n\t\t${DOCKER_REPO_PREFIX}/netcat \"$@\"\n}\nnginx(){\n\tdel_stopped nginx\n\n\tdocker run -d \\\n\t\t--restart always \\\n\t\t-v \"${HOME}/.nginx:/etc/nginx\" \\\n\t\t--net host \\\n\t\t--name nginx \\\n\t\tnginx\n\n\t# add domain to hosts & open nginx\n\tsudo hostess add jess 127.0.0.1\n}\nnmap(){\n\tif [[ -n \"$(which nmap)\" ]]; then\n\t\t\"$(which nmap)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t--net host \\\n\t\t\t${DOCKER_REPO_PREFIX}/nmap \"$@\"\n\tfi\n}\nnotify_osd(){\n\tdel_stopped notify_osd\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t--net none \\\n\t\t-v /etc \\\n\t\t-v /home/user/.dbus \\\n\t\t-v /home/user/.cache/dconf \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--name notify_osd \\\n\t\t${DOCKER_REPO_PREFIX}/notify-osd\n}\nalias notify-send=notify_send\nnotify_send(){\n\trelies_on notify_osd\n\tlocal args=${*:2}\n\tdocker exec -i notify_osd notify-send \"$1\" \"${args}\"\n}\nnow(){\n\tdocker run -it --rm \\\n\t\t-v \"${HOME}/.now:/root/.now\" \\\n\t\t-v \"$(pwd):/usr/src/repo:ro\" \\\n\t\t--workdir /usr/src/repo \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/now \"$@\"\n}\nopenscad(){\n\tdel_stopped openscad\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v \"${HOME}/openscad:/root/openscad\" \\\n\t\t-v \"${HOME}/.config/OpenSCAD:/root/.config/OpenSCAD\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/dri \\\n\t\t--name openscad \\\n\t\t${DOCKER_REPO_PREFIX}/openscad\n}\nopensnitch(){\n\tdel_stopped opensnitchd\n\tdel_stopped opensnitch\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t--net host \\\n\t\t--cap-add NET_ADMIN \\\n\t\t-v /etc/machine-id:/etc/machine-id:ro \\\n\t\t-v /var/run/dbus:/var/run/dbus \\\n\t\t-v /usr/share/dbus-1:/usr/share/dbus-1 \\\n\t\t-v \"/var/run/user/$(id -u):/var/run/user/$(id -u)\" \\\n\t\t-e DBUS_SESSION_BUS_ADDRESS \\\n\t\t-e XAUTHORITY \\\n\t\t-v \"${HOME}/.Xauthority:$HOME/.Xauthority\" \\\n\t\t-v /tmp:/tmp \\\n\t\t--name opensnitchd \\\n\t\t${DOCKER_REPO_PREFIX}/opensnitchd\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v /usr/share/X11:/usr/share/X11:ro \\\n\t\t-v /usr/share/dbus-1:/usr/share/dbus-1 \\\n\t\t-v /etc/machine-id:/etc/machine-id:ro \\\n\t\t-v /var/run/dbus:/var/run/dbus \\\n\t\t-v \"/var/run/user/$(id -u):/var/run/user/$(id -u)\" \\\n\t\t-e DBUS_SESSION_BUS_ADDRESS \\\n\t\t-e XAUTHORITY \\\n\t\t-v \"${HOME}/.Xauthority:$HOME/.Xauthority\" \\\n\t\t-e HOME \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t-e XDG_RUNTIME_DIR \\\n\t\t-v /etc/passwd:/etc/passwd:ro \\\n\t\t-v /etc/group:/etc/group:ro \\\n\t\t-v /tmp:/tmp \\\n\t\t-u \"$(id -u)\" -w \"$HOME\" \\\n\t\t--net host \\\n\t\t--name opensnitch \\\n\t\t${DOCKER_REPO_PREFIX}/opensnitch\n}\nosquery(){\n\trmctr osquery\n\n\tdocker run -d --restart always \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t\t-v /etc/os-release:/etc/os-release:ro \\\n\t\t--net host \\\n\t\t--ipc host \\\n\t\t--pid host \\\n\t\t-e OSQUERY_ENROLL_SECRET \\\n\t\t--name osquery \\\n\t\t--privileged \\\n\t\t${DOCKER_REPO_PREFIX}/osquery \\\n\t\t--verbose \\\n\t\t--enroll_secret_env=OSQUERY_ENROLL_SECRET \\\n\t\t--docker_socket=/var/run/docker.sock \\\n\t\t--host_identifier=hostname \\\n\t\t--tls_hostname=\"${OSQUERY_DOMAIN}\" \\\n\t\t--enroll_tls_endpoint=/api/v1/osquery/enroll \\\n\t\t--config_plugin=tls \\\n\t\t--config_tls_endpoint=/api/v1/osquery/config \\\n\t\t--config_tls_refresh=10 \\\n\t\t--disable_distributed=false \\\n\t\t--distributed_plugin=tls \\\n\t\t--distributed_interval=10 \\\n\t\t--distributed_tls_max_attempts=3 \\\n\t\t--distributed_tls_read_endpoint=/api/v1/osquery/distributed/read \\\n\t\t--distributed_tls_write_endpoint=/api/v1/osquery/distributed/write \\\n\t\t--logger_plugin=tls \\\n\t\t--logger_tls_endpoint=/api/v1/osquery/log \\\n\t\t--logger_tls_period=10\n}\npandoc(){\n\tif [[ -n \"$(which pandoc)\" ]]; then\n\t\t\"$(which pandoc)\" \"$@\"\n\telse\n\t\tlocal file=${*: -1}\n\t\tlocal lfile\n\t\tlfile=$(readlink -m \"$(pwd)/${file}\")\n\t\tlocal rfile\n\t\trfile=$(readlink -m \"/$(basename \"$file\")\")\n\t\tlocal args=${*:1:${#@}-1}\n\n\t\tdocker run --rm \\\n\t\t\t-v \"${lfile}:${rfile}\" \\\n\t\t\t-v /tmp:/tmp \\\n\t\t\t--name pandoc \\\n\t\t\t${DOCKER_REPO_PREFIX}/pandoc \"${args}\" \"${rfile}\"\n\tfi\n}\npivman(){\n\tdel_stopped pivman\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--device /dev/bus/usb \\\n\t\t--device /dev/usb \\\n\t\t--name pivman \\\n\t\t${DOCKER_REPO_PREFIX}/pivman\n}\npms(){\n\tdel_stopped pms\n\n\tdocker run --rm -it \\\n\t\t-v \"${HOME}/.mpd/socket:/var/run/mpd/socket\" \\\n\t\t-e MPD_HOST=/var/run/mpd/socket \\\n\t\t--name pms \\\n\t\t${DOCKER_REPO_PREFIX}/pms \"$@\"\n}\npond(){\n\tdel_stopped pond\n\trelies_on torproxy\n\n\tdocker run --rm -it \\\n\t\t--net container:torproxy \\\n\t\t--name pond \\\n\t\t${DOCKER_REPO_PREFIX}/pond\n}\nprivoxy(){\n\tdel_stopped privoxy\n\trelies_on torproxy\n\n\tdocker run -d \\\n\t\t--restart always \\\n\t\t--link torproxy:torproxy \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-p 8118:8118 \\\n\t\t--name privoxy \\\n\t\t${DOCKER_REPO_PREFIX}/privoxy\n\n\thostess add privoxy \"$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' privoxy)\"\n}\npulseaudio(){\n\tdel_stopped pulseaudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t--device /dev/snd \\\n\t\t-p 4713:4713 \\\n\t\t--restart always \\\n\t\t--group-add audio \\\n\t\t--name pulseaudio \\\n\t\t${DOCKER_REPO_PREFIX}/pulseaudio\n}\nrainbowstream(){\n\tdocker run -it --rm \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/.rainbow_oauth:/root/.rainbow_oauth\" \\\n\t\t-v \"${HOME}/.rainbow_config.json:/root/.rainbow_config.json\" \\\n\t\t--name rainbowstream \\\n\t\t${DOCKER_REPO_PREFIX}/rainbowstream\n}\nregistrator(){\n\tdel_stopped registrator\n\n\tdocker run -d --restart always \\\n\t\t-v /var/run/docker.sock:/tmp/docker.sock \\\n\t\t--net host \\\n\t\t--name registrator \\\n\t\tgliderlabs/registrator consul:\n}\nremmina(){\n\tdel_stopped remmina\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t-v \"${HOME}/.remmina:/root/.remmina\" \\\n\t\t--name remmina \\\n\t\t--net host \\\n\t\t${DOCKER_REPO_PREFIX}/remmina\n}\nricochet(){\n\tdel_stopped ricochet\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--device /dev/dri \\\n\t\t--name ricochet \\\n\t\t${DOCKER_REPO_PREFIX}/ricochet\n}\nrstudio(){\n\tdel_stopped rstudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-v \"${HOME}/fastly-logs:/root/fastly-logs\" \\\n\t\t-v /dev/shm:/dev/shm \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--device /dev/dri \\\n\t\t--name rstudio \\\n\t\t${DOCKER_REPO_PREFIX}/rstudio\n}\ns3cmdocker(){\n\tdel_stopped s3cmd\n\n\tdocker run --rm -it \\\n\t\t-e AWS_ACCESS_KEY=\"${DOCKER_AWS_ACCESS_KEY}\" \\\n\t\t-e AWS_SECRET_KEY=\"${DOCKER_AWS_ACCESS_SECRET}\" \\\n\t\t-v \"$(pwd):/root/s3cmd-workspace\" \\\n\t\t--name s3cmd \\\n\t\t${DOCKER_REPO_PREFIX}/s3cmd \"$@\"\n}\nscudcloud(){\n\tdel_stopped scudcloud\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v /etc/machine-id:/etc/machine-id:ro \\\n\t\t-v /var/run/dbus:/var/run/dbus \\\n\t\t-v \"/var/run/user/$(id -u):/var/run/user/$(id -u)\" \\\n\t\t-e TERM \\\n\t\t-e XAUTHORITY \\\n\t\t-e DBUS_SESSION_BUS_ADDRESS \\\n\t\t-e HOME \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t-v /etc/passwd:/etc/passwd:ro \\\n\t\t-v /etc/group:/etc/group:ro \\\n\t\t-u \"$(whoami)\" -w \"$HOME\" \\\n\t\t-v \"${HOME}/.Xauthority:$HOME/.Xauthority\" \\\n\t\t-v \"${HOME}/.scudcloud:/home/jessie/.config/scudcloud\" \\\n\t\t--device /dev/snd \\\n\t\t--name scudcloud \\\n\t\t${DOCKER_REPO_PREFIX}/scudcloud\n\n\t# exit current shell\n\texit 0\n}\nshorewall(){\n\tdel_stopped shorewall\n\n\tdocker run --rm -it \\\n\t\t--net host \\\n\t\t--cap-add NET_ADMIN \\\n\t\t--privileged \\\n\t\t--name shorewall \\\n\t\t${DOCKER_REPO_PREFIX}/shorewall \"$@\"\n}\nskype(){\n\tdel_stopped skype\n\trelies_on pulseaudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--link pulseaudio:pulseaudio \\\n\t\t-e PULSE_SERVER=pulseaudio \\\n\t\t--security-opt seccomp:unconfined \\\n\t\t--device /dev/video0 \\\n\t\t--group-add video \\\n\t\t--group-add audio \\\n\t\t--name skype \\\n\t\t${DOCKER_REPO_PREFIX}/skype\n}\nslack(){\n\tdel_stopped slack\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--device /dev/snd \\\n\t\t--device /dev/dri \\\n\t\t--device /dev/video0 \\\n\t\t--group-add audio \\\n\t\t--group-add video \\\n\t\t-v \"${HOME}/.slack:/root/.config/Slack\" \\\n\t\t--ipc=\"host\" \\\n\t\t--name slack \\\n\t\t${DOCKER_REPO_PREFIX}/slack \"$@\"\n}\nspotify(){\n\tdel_stopped spotify\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--security-opt seccomp:unconfined \\\n\t\t--device /dev/snd \\\n\t\t--device /dev/dri \\\n\t\t--group-add audio \\\n\t\t--group-add video \\\n\t\t--name spotify \\\n\t\t${DOCKER_REPO_PREFIX}/spotify\n}\nssh2john(){\n\tlocal file\n\tfile=$(realpath \"$1\")\n\n\tdocker run --rm -it \\\n\t\t-v \"${file}:/root/$(basename \"${file}\")\" \\\n\t\t--entrypoint ssh2john \\\n\t\t${DOCKER_REPO_PREFIX}/john \"$@\"\n}\nsshb0t(){\n\tdel_stopped sshb0t\n\n\tif [[ ! -d \"${HOME}/.ssh\" ]]; then\n\t\tmkdir -p \"${HOME}/.ssh\"\n\tfi\n\n\tif [[ ! -f \"${HOME}/.ssh/authorized_keys\" ]]; then\n\t\ttouch \"${HOME}/.ssh/authorized_keys\"\n\tfi\n\n\tGITHUB_USER=${GITHUB_USER:=jessfraz}\n\n\tdocker run --rm -it \\\n\t\t--name sshb0t \\\n\t\t-v \"${HOME}/.ssh/authorized_keys:/root/.ssh/authorized_keys\" \\\n\t\tr.j3ss.co/sshb0t \\\n\t\t--user \"${GITHUB_USER}\" --keyfile /root/.ssh/authorized_keys --once\n}\nsteam(){\n\tdel_stopped steam\n\trelies_on pulseaudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /etc/machine-id:/etc/machine-id:ro \\\n\t\t-v /var/run/dbus:/var/run/dbus \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-v \"${HOME}/.steam:/home/steam\" \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--link pulseaudio:pulseaudio \\\n\t\t-e PULSE_SERVER=pulseaudio \\\n\t\t--device /dev/dri \\\n\t\t--name steam \\\n\t\t${DOCKER_REPO_PREFIX}/steam\n}\nt(){\n\tdocker run -t --rm \\\n\t\t-v \"${HOME}/.trc:/root/.trc\" \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/t \"$@\"\n}\ntarsnap(){\n\tdocker run --rm -it \\\n\t\t-v \"${HOME}/.tarsnaprc:/root/.tarsnaprc\" \\\n\t\t-v \"${HOME}/.tarsnap:/root/.tarsnap\" \\\n\t\t-v \"$HOME:/root/workdir\" \\\n\t\t${DOCKER_REPO_PREFIX}/tarsnap \"$@\"\n}\ntelnet(){\n\tdocker run -it --rm \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/telnet \"$@\"\n}\ntermboy(){\n\tdel_stopped termboy\n\tlocal game=$1\n\n\tdocker run --rm -it \\\n\t\t--device /dev/snd \\\n\t\t--name termboy \\\n\t\t${DOCKER_REPO_PREFIX}/nes \"/games/${game}.rom\"\n}\nterraform(){\n\tif [[ -n \"$(which terraform)\" ]]; then\n\t\t\"$(which terraform)\" \"$@\"\n\telse\n\t\tdocker run -it --rm \\\n\t\t\t-v \"${HOME}:${HOME}:ro\" \\\n\t\t\t-v \"$(pwd):/usr/src/repo\" \\\n\t\t\t-v /tmp:/tmp \\\n\t\t\t--workdir /usr/src/repo \\\n\t\t\t--log-driver none \\\n\t\t\t-e GOOGLE_APPLICATION_CREDENTIALS \\\n\t\t\t-e SSH_AUTH_SOCK \\\n\t\t\t${DOCKER_REPO_PREFIX}/terraform \"$@\"\n\tfi\n}\ntor(){\n\tdel_stopped tor\n\n\tdocker run -d \\\n\t\t--net host \\\n\t\t--name tor \\\n\t\t${DOCKER_REPO_PREFIX}/tor\n\n\t# set up the redirect iptables rules\n\tsudo setup-tor-iptables\n\n\t# validate we are running through tor\n\tbrowser-exec \"https://check.torproject.org/\"\n}\ntorbrowser(){\n\tdel_stopped torbrowser\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/snd \\\n\t\t--name torbrowser \\\n\t\t${DOCKER_REPO_PREFIX}/tor-browser\n\n\t# exit current shell\n\texit 0\n}\ntormessenger(){\n\tdel_stopped tormessenger\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t--device /dev/snd \\\n\t\t--name tormessenger \\\n\t\t${DOCKER_REPO_PREFIX}/tor-messenger\n\n\t# exit current shell\n\texit 0\n}\ntorproxy(){\n\tdel_stopped torproxy\n\n\tdocker run -d \\\n\t\t--restart always \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-p 9050:9050 \\\n\t\t--name torproxy \\\n\t\t${DOCKER_REPO_PREFIX}/tor-proxy\n\n\thostess add torproxy \"$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' torproxy)\"\n}\ntraceroute(){\n\tif [[ -n \"$(which traceroute)\" ]]; then\n\t\t\"$(which traceroute)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t--net host \\\n\t\t\t${DOCKER_REPO_PREFIX}/traceroute \"$@\"\n\tfi\n}\ntransmission(){\n\tdel_stopped transmission\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/Torrents:/transmission/download\" \\\n\t\t-v \"${HOME}/.transmission:/transmission/config\" \\\n\t\t-p 9091:9091 \\\n\t\t-p 51413:51413 \\\n\t\t-p 51413:51413/udp \\\n\t\t--name transmission \\\n\t\t${DOCKER_REPO_PREFIX}/transmission\n\n\n\thostess add transmission \"$(docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' transmission)\"\n\tbrowser-exec \"http://transmission:9091\"\n}\ntravis(){\n\tdocker run -it --rm \\\n\t\t-v \"${HOME}/.travis:/root/.travis\" \\\n\t\t-v \"$(pwd):/usr/src/repo:ro\" \\\n\t\t--workdir /usr/src/repo \\\n\t\t--log-driver none \\\n\t\t${DOCKER_REPO_PREFIX}/travis \"$@\"\n}\nvirsh(){\n\trelies_on kvm\n\n\tdocker run -it --rm \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /run/libvirt:/var/run/libvirt \\\n\t\t--log-driver none \\\n\t\t--net container:kvm \\\n\t\t${DOCKER_REPO_PREFIX}/libvirt-client \"$@\"\n}\nvirtualbox(){\n\tdel_stopped virtualbox\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--privileged \\\n\t\t--name virtualbox \\\n\t\t${DOCKER_REPO_PREFIX}/virtualbox\n}\nvirt_viewer(){\n\trelies_on kvm\n\n\tdocker run -it --rm \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix  \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-v /run/libvirt:/var/run/libvirt \\\n\t\t-e PULSE_SERVER=pulseaudio \\\n\t\t--group-add audio \\\n\t\t--log-driver none \\\n\t\t--net container:kvm \\\n\t\t${DOCKER_REPO_PREFIX}/virt-viewer \"$@\"\n}\nalias virt-viewer=\"virt_viewer\"\nvisualstudio(){\n\tdel_stopped visualstudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix  \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--device /dev/dri \\\n\t\t--name visualstudio \\\n\t\t${DOCKER_REPO_PREFIX}/vscode\n}\nalias vscode=\"visualstudio\"\nvlc(){\n\tdel_stopped vlc\n\trelies_on pulseaudio\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t-e GDK_SCALE \\\n\t\t-e GDK_DPI_SCALE \\\n\t\t-e QT_DEVICE_PIXEL_RATIO \\\n\t\t--link pulseaudio:pulseaudio \\\n\t\t-e PULSE_SERVER=pulseaudio \\\n\t\t--group-add audio \\\n\t\t--group-add video \\\n\t\t-v \"${HOME}/Torrents:/home/vlc/Torrents\" \\\n\t\t--device /dev/dri \\\n\t\t--name vlc \\\n\t\t${DOCKER_REPO_PREFIX}/vlc\n}\nwatchman(){\n\tdel_stopped watchman\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/Downloads:/root/Downloads\" \\\n\t\t--name watchman \\\n\t\t${DOCKER_REPO_PREFIX}/watchman --foreground\n}\nweematrix(){\n\tdel_stopped weematrix\n\n\tdocker run --rm -it \\\n\t\t--user root \\\n\t\t-v \"${HOME}/.weechat:/home/user/.weechat\" \\\n\t\t${DOCKER_REPO_PREFIX}/weechat-matrix \\\n\t\tchown -R user /home/user/.weechat\n\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/.weechat:/home/user/.weechat\" \\\n\t\t-e \"TERM=screen\" \\\n\t\t--name weematrix \\\n\t\t${DOCKER_REPO_PREFIX}/weechat-matrix\n}\nweeslack(){\n\tdel_stopped weeslack\n\n\tdocker run --rm -it \\\n\t\t--user root \\\n\t\t-v \"${HOME}/.weechat:/home/user/.weechat\" \\\n\t\t${DOCKER_REPO_PREFIX}/wee-slack \\\n\t\tchown -R user /home/user/.weechat\n\n\tdocker run --rm -it \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v \"${HOME}/.weechat:/home/user/.weechat\" \\\n\t\t--name weeslack \\\n\t\t${DOCKER_REPO_PREFIX}/wee-slack\n}\nwg(){\n\tdocker run -i --rm \\\n\t\t--log-driver none \\\n\t\t-v /tmp:/tmp \\\n\t\t--cap-add NET_ADMIN \\\n\t\t--net host \\\n\t\t--name wg \\\n\t\t${DOCKER_REPO_PREFIX}/wg \"$@\"\n}\nwireshark(){\n\tdel_stopped wireshark\n\n\tdocker run -d \\\n\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t-v /tmp/.X11-unix:/tmp/.X11-unix \\\n\t\t-e \"DISPLAY=unix${DISPLAY}\" \\\n\t\t--cap-add NET_RAW \\\n\t\t--cap-add NET_ADMIN \\\n\t\t--net host \\\n\t\t--name wireshark \\\n\t\t${DOCKER_REPO_PREFIX}/wireshark\n}\nwrk(){\n\tdocker run -it --rm \\\n\t\t--log-driver none \\\n\t\t--name wrk \\\n\t\t${DOCKER_REPO_PREFIX}/wrk \"$@\"\n}\nykman(){\n\tdel_stopped ykman\n\n\tif [[ -n \"$(which ykman)\" ]]; then\n\t\t\"$(which ykman)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t\t--device /dev/usb \\\n\t\t\t--device /dev/bus/usb \\\n\t\t\t--name ykman \\\n\t\t\t${DOCKER_REPO_PREFIX}/ykman bash\n\tfi\n}\nykpersonalize(){\n\tdel_stopped ykpersonalize\n\n\tif [[ -n \"$(which ykpersonalize)\" ]]; then\n\t\t\"$(which ykpersonalize)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t\t--device /dev/usb \\\n\t\t\t--device /dev/bus/usb \\\n\t\t\t--name ykpersonalize \\\n\t\t\t${DOCKER_REPO_PREFIX}/ykpersonalize bash\n\tfi\n}\nyubico_piv_tool(){\n\tdel_stopped yubico-piv-tool\n\n\tif [[ -n \"$(which yubico-piv-tool)\" ]]; then\n\t\t\"$(which yubico-piv-tool)\" \"$@\"\n\telse\n\t\tdocker run --rm -it \\\n\t\t\t-v /etc/localtime:/etc/localtime:ro \\\n\t\t\t--device /dev/usb \\\n\t\t\t--device /dev/bus/usb \\\n\t\t\t--name yubico-piv-tool \\\n\t\t\t${DOCKER_REPO_PREFIX}/yubico-piv-tool bash\n\tfi\n}\nalias yubico-piv-tool=\"yubico_piv_tool\"\n"
        },
        {
          "name": ".exports",
          "type": "blob",
          "size": 1.2041015625,
          "content": "#!/bin/bash\n\n# Set bash as our shell, idk why anyone would use something else ;)\nshell=\"$(which bash)\";\nexport SHELL=\"$shell\";\n\n# Make vim the default editor\nexport EDITOR=/usr/bin/vim;\nexport TERMINAL=\"urxvt\";\n\n# Larger bash history (allow 32³ entries; default is 500)\nexport HISTSIZE=50000000;\nexport HISTFILESIZE=$HISTSIZE;\nexport HISTCONTROL=ignoredups;\n# Make some commands not show up in history\nexport HISTIGNORE=\" *:ls:cd:cd -:pwd:exit:date:* --help:* -h:pony:pony add *:pony update *:pony save *:pony ls:pony ls *\";\n\n# Prefer US English and use UTF-8\nexport LANG=\"en_US.UTF-8\";\nexport LC_ALL=\"en_US.UTF-8\";\n\n# Don’t clear the screen after quitting a manual page\nexport MANPAGER=\"less -X\";\n\nexport DBUS_SESSION_BUS_ADDRESS\nDBUS_SESSION_BUS_ADDRESS=unix:path=/var/run/user/$(id -u)/bus;\n\nexport TODOTXT_DEFAULT_ACTION=ls\n\n# hidpi for gtk apps\nexport GDK_SCALE=1.5\nexport GDK_DPI_SCALE=0.5\nexport QT_DEVICE_PIXEL_RATIO=1.5\n\n# turn on go vendoring experiment\nexport GO15VENDOREXPERIMENT=1\n\nexport DOCKER_CONTENT_TRUST=1\n\n# if it's an ssh session export GPG_TTY\nif [[ -n \"$SSH_CLIENT\" ]] || [[ -n \"$SSH_TTY\" ]]; then\n\tGPG_TTY=$(tty)\n\texport GPG_TTY\nfi\n\n# set xdg data dirs for dmenu to source\nexport XDG_DATA_DIRS=/usr/share/\n"
        },
        {
          "name": ".fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".functions",
          "type": "blob",
          "size": 14.0234375,
          "content": "#!/bin/bash\n\n# Simple calculator\ncalc() {\n\tlocal result=\"\"\n\tresult=\"$(printf \"scale=10;%s\\\\n\" \"$*\" | bc --mathlib | tr -d '\\\\\\n')\"\n\t#\t\t\t\t\t\t└─ default (when `--mathlib` is used) is 20\n\n\tif [[ \"$result\" == *.* ]]; then\n\t\t# improve the output for decimal numbers\n\t\t# add \"0\" for cases like \".5\"\n\t\t# add \"0\" for cases like \"-.5\"\n\t\t# remove trailing zeros\n\t\tprintf \"%s\" \"$result\" |\n\t\t\tsed -e 's/^\\./0./'  \\\n\t\t\t-e 's/^-\\./-0./' \\\n\t\t\t-e 's/0*$//;s/\\.$//'\n\telse\n\t\tprintf \"%s\" \"$result\"\n\tfi\n\tprintf \"\\\\n\"\n}\n\n# Create a new directory and enter it\nmkd() {\n\tmkdir -p \"$@\"\n\tcd \"$@\" || exit\n}\n\n# Make a temporary directory and enter it\ntmpd() {\n\tlocal dir\n\tif [ $# -eq 0 ]; then\n\t\tdir=$(mktemp -d)\n\telse\n\t\tdir=$(mktemp -d -t \"${1}.XXXXXXXXXX\")\n\tfi\n\tcd \"$dir\" || exit\n}\n\n# Create a .tar.gz archive, using `zopfli`, `pigz` or `gzip` for compression\ntargz() {\n\tlocal tmpFile=\"${1%/}.tar\"\n\ttar -cvf \"${tmpFile}\" --exclude=\".DS_Store\" \"${1}\" || return 1\n\n\tsize=$(\n\tstat -f\"%z\" \"${tmpFile}\" 2> /dev/null; # OS X `stat`\n\tstat -c\"%s\" \"${tmpFile}\" 2> /dev/null # GNU `stat`\n\t)\n\n\tlocal cmd=\"\"\n\tif (( size < 52428800 )) && hash zopfli 2> /dev/null; then\n\t\t# the .tar file is smaller than 50 MB and Zopfli is available; use it\n\t\tcmd=\"zopfli\"\n\telse\n\t\tif hash pigz 2> /dev/null; then\n\t\t\tcmd=\"pigz\"\n\t\telse\n\t\t\tcmd=\"gzip\"\n\t\tfi\n\tfi\n\n\techo \"Compressing .tar using \\`${cmd}\\`…\"\n\t\"${cmd}\" -v \"${tmpFile}\" || return 1\n\t[ -f \"${tmpFile}\" ] && rm \"${tmpFile}\"\n\techo \"${tmpFile}.gz created successfully.\"\n}\n\n# Determine size of a file or total size of a directory\nfs() {\n\tif du -b /dev/null > /dev/null 2>&1; then\n\t\tlocal arg=-sbh\n\telse\n\t\tlocal arg=-sh\n\tfi\n\t# shellcheck disable=SC2199\n\tif [[ -n \"$@\" ]]; then\n\t\tdu $arg -- \"$@\"\n\telse\n\t\tdu $arg -- .[^.]* *\n\tfi\n}\n\n# Use Git’s colored diff when available\nif hash git &>/dev/null ; then\n\tdiff() {\n\t\tgit diff --no-index --color-words \"$@\"\n\t}\nfi\n\n# Create a data URL from a file\ndataurl() {\n\tlocal mimeType\n\tmimeType=$(file -b --mime-type \"$1\")\n\tif [[ $mimeType == text/* ]]; then\n\t\tmimeType=\"${mimeType};charset=utf-8\"\n\tfi\n\techo \"data:${mimeType};base64,$(openssl base64 -in \"$1\" | tr -d '\\n')\"\n}\n\n# Create a git.io short URL\ngitio() {\n\tif [ -z \"${1}\" ] || [ -z \"${2}\" ]; then\n\t\techo \"Usage: \\`gitio slug url\\`\"\n\t\treturn 1\n\tfi\n\tcurl -i https://git.io/ -F \"url=${2}\" -F \"code=${1}\"\n}\n\n# Start an HTTP server from a directory, optionally specifying the port\nserver() {\n\tlocal port=\"${1:-8000}\"\n\tsleep 1 && open \"http://localhost:${port}/\" &\n\t# Set the default Content-Type to `text/plain` instead of `application/octet-stream`\n\t# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)\n\tpython -c $'import SimpleHTTPServer;\\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\\nmap[\"\"] = \"text/plain\";\\nfor key, value in map.items():\\n\\tmap[key] = value + \";charset=UTF-8\";\\nSimpleHTTPServer.test();' \"$port\"\n}\n\n# Compare original and gzipped file size\ngz() {\n\tlocal origsize\n\torigsize=$(wc -c < \"$1\")\n\tlocal gzipsize\n\tgzipsize=$(gzip -c \"$1\" | wc -c)\n\tlocal ratio\n\tratio=$(echo \"$gzipsize * 100 / $origsize\" | bc -l)\n\tprintf \"orig: %d bytes\\\\n\" \"$origsize\"\n\tprintf \"gzip: %d bytes (%2.2f%%)\\\\n\" \"$gzipsize\" \"$ratio\"\n}\n\n# Syntax-highlight JSON strings or files\n# Usage: `json '{\"foo\":42}'` or `echo '{\"foo\":42}' | json`\njson() {\n\tif [ -t 0 ]; then # argument\n\t\tpython -mjson.tool <<< \"$*\" | pygmentize -l javascript\n\telse # pipe\n\t\tpython -mjson.tool | pygmentize -l javascript\n\tfi\n}\n\n# Run `dig` and display the most useful info\ndigga() {\n\tdig +nocmd \"$1\" any +multiline +noall +answer\n}\n\n# Query Wikipedia via console over DNS\nmwiki() {\n\tdig +short txt \"$*\".wp.dg.cx\n}\n\n# UTF-8-encode a string of Unicode symbols\nescape() {\n\tlocal args\n\tmapfile -t args < <(printf \"%s\" \"$*\" | xxd -p -c1 -u)\n\tprintf \"\\\\\\\\x%s\" \"${args[@]}\"\n\t# print a newline unless we’re piping the output to another program\n\tif [ -t 1 ]; then\n\t\techo \"\"; # newline\n\tfi\n}\n\n# Decode \\x{ABCD}-style Unicode escape sequences\nunidecode() {\n\tperl -e \"binmode(STDOUT, ':utf8'); print \\\"$*\\\"\"\n\t# print a newline unless we’re piping the output to another program\n\tif [ -t 1 ]; then\n\t\techo \"\"; # newline\n\tfi\n}\n\n# Get a character’s Unicode code point\ncodepoint() {\n\tperl -e \"use utf8; print sprintf('U+%04X', ord(\\\"$*\\\"))\"\n\t# print a newline unless we’re piping the output to another program\n\tif [ -t 1 ]; then\n\t\techo \"\"; # newline\n\tfi\n}\n\n# Show all the names (CNs and SANs) listed in the SSL certificate\n# for a given domain\ngetcertnames() {\n\tif [ -z \"${1}\" ]; then\n\t\techo \"ERROR: No domain specified.\"\n\t\treturn 1\n\tfi\n\n\tlocal domain=\"${1}\"\n\techo \"Testing ${domain}…\"\n\techo \"\"; # newline\n\n\tlocal tmp\n\ttmp=$(echo -e \"GET / HTTP/1.0\\\\nEOT\" \\\n\t\t| openssl s_client -connect \"${domain}:443\" 2>&1)\n\n\tif [[ \"${tmp}\" = *\"-----BEGIN CERTIFICATE-----\"* ]]; then\n\t\tlocal certText\n\t\tcertText=$(echo \"${tmp}\" \\\n\t\t\t| openssl x509 -text -certopt \"no_header, no_serial, no_version, \\\n\t\t\tno_signame, no_validity, no_issuer, no_pubkey, no_sigdump, no_aux\")\n\t\techo \"Common Name:\"\n\t\techo \"\"; # newline\n\t\techo \"${certText}\" | grep \"Subject:\" | sed -e \"s/^.*CN=//\"\n\t\techo \"\"; # newline\n\t\techo \"Subject Alternative Name(s):\"\n\t\techo \"\"; # newline\n\t\techo \"${certText}\" | grep -A 1 \"Subject Alternative Name:\" \\\n\t\t\t| sed -e \"2s/DNS://g\" -e \"s/ //g\" | tr \",\" \"\\\\n\" | tail -n +2\n\t\treturn 0\n\telse\n\t\techo \"ERROR: Certificate not found.\"\n\t\treturn 1\n\tfi\n}\n\n# `v` with no arguments opens the current directory in Vim, otherwise opens the\n# given location\nv() {\n\tif [ $# -eq 0 ]; then\n\t\tvim .\n\telse\n\t\tvim \"$@\"\n\tfi\n}\n\n# `o` with no arguments opens the current directory, otherwise opens the given\n# location\no() {\n\tif [ $# -eq 0 ]; then\n\t\txdg-open .\t> /dev/null 2>&1\n\telse\n\t\txdg-open \"$@\" > /dev/null 2>&1\n\tfi\n}\n\n# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring\n# the `.git` directory, listing directories first. The output gets piped into\n# `less` with options to preserve color and line numbers, unless the output is\n# small enough for one screen.\ntre() {\n\ttree -aC -I '.git' --dirsfirst \"$@\" | less -FRNX\n}\n\n# Call from a local repo to open the repository on github/bitbucket in browser\n# Modified version of https://github.com/zeke/ghwd\nrepo() {\n\t# Figure out github repo base URL\n\tlocal base_url\n\tbase_url=$(git config --get remote.origin.url)\n\tbase_url=${base_url%\\.git} # remove .git from end of string\n\n\t# Fix git@github.com: URLs\n\tbase_url=${base_url//git@github\\.com:/https:\\/\\/github\\.com\\/}\n\n\t# Fix git://github.com URLS\n\tbase_url=${base_url//git:\\/\\/github\\.com/https:\\/\\/github\\.com\\/}\n\n\t# Fix git@bitbucket.org: URLs\n\tbase_url=${base_url//git@bitbucket.org:/https:\\/\\/bitbucket\\.org\\/}\n\n\t# Fix git@gitlab.com: URLs\n\tbase_url=${base_url//git@gitlab\\.com:/https:\\/\\/gitlab\\.com\\/}\n\n\t# Validate that this folder is a git folder\n\tif ! git branch 2>/dev/null 1>&2 ; then\n\t\techo \"Not a git repo!\"\n\t\texit $?\n\tfi\n\n\t# Find current directory relative to .git parent\n\tfull_path=$(pwd)\n\tgit_base_path=$(cd \"./$(git rev-parse --show-cdup)\" || exit 1; pwd)\n\trelative_path=${full_path#$git_base_path} # remove leading git_base_path from working directory\n\n\t# If filename argument is present, append it\n\tif [ \"$1\" ]; then\n\t\trelative_path=\"$relative_path/$1\"\n\tfi\n\n\t# Figure out current git branch\n\t# git_where=$(command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null\n\tgit_where=$(command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null\n\n\t# Remove cruft from branchname\n\tbranch=${git_where#refs\\/heads\\/}\n\tbranch=${branch#remotes\\/origin\\/}\n\n\t[[ $base_url == *bitbucket* ]] && tree=\"src\" || tree=\"tree\"\n\turl=\"$base_url/$tree/$branch$relative_path\"\n\n\n\techo \"Calling $(type open) for $url\"\n\n\topen \"$url\" &> /dev/null || (echo \"Using $(type open) to open URL failed.\" && exit 1);\n}\n\n# Get colors in manual pages\nman() {\n\tenv \\\n\t\tLESS_TERMCAP_mb=\"$(printf '\\e[1;31m')\" \\\n\t\tLESS_TERMCAP_md=\"$(printf '\\e[1;31m')\" \\\n\t\tLESS_TERMCAP_me=\"$(printf '\\e[0m')\" \\\n\t\tLESS_TERMCAP_se=\"$(printf '\\e[0m')\" \\\n\t\tLESS_TERMCAP_so=\"$(printf '\\e[1;44;33m')\" \\\n\t\tLESS_TERMCAP_ue=\"$(printf '\\e[0m')\" \\\n\t\tLESS_TERMCAP_us=\"$(printf '\\e[1;32m')\" \\\n\t\tman \"$@\"\n}\n\n# Use feh to nicely view images\nopenimage() {\n\tlocal types='*.jpg *.JPG *.png *.PNG *.gif *.GIF *.jpeg *.JPEG'\n\n\tcd \"$(dirname \"$1\")\" || exit\n\tlocal file\n\tfile=$(basename \"$1\")\n\n\tfeh -q \"$types\" --auto-zoom \\\n\t\t--sort filename --borderless \\\n\t\t--scale-down --draw-filename \\\n\t\t--image-bg black \\\n\t\t--start-at \"$file\"\n}\n\n# get dbus session\ndbs() {\n\tlocal t=$1\n\tif [[  -z \"$t\" ]]; then\n\t\tlocal t=\"session\"\n\tfi\n\n\tdbus-send --$t --dest=org.freedesktop.DBus \\\n\t\t--type=method_call\t--print-reply \\\n\t\t/org/freedesktop/DBus org.freedesktop.DBus.ListNames\n}\n\n# check if uri is up\nisup() {\n\tlocal uri=$1\n\n\tif curl -s --head  --request GET \"$uri\" | grep \"200 OK\" > /dev/null ; then\n\t\tnotify-send --urgency=critical \"$uri is down\"\n\telse\n\t\tnotify-send --urgency=low \"$uri is up\"\n\tfi\n}\n\n# build go static binary from root of project\ngostatic(){\n\tlocal dir=$1\n\tlocal arg=$2\n\n\tif [[ -z $dir ]]; then\n\t\tdir=$(pwd)\n\tfi\n\n\tlocal name\n\tname=$(basename \"$dir\")\n\t(\n\tcd \"$dir\" || exit\n\texport GOOS=linux\n\techo \"Building static binary for $name in $dir\"\n\n\tcase $arg in\n\t\t\"netgo\")\n\t\t\tset -x\n\t\t\tgo build -a \\\n\t\t\t\t-tags 'netgo static_build' \\\n\t\t\t\t-installsuffix netgo \\\n\t\t\t\t-ldflags \"-w\" \\\n\t\t\t\t-o \"$name\" .\n\t\t\t;;\n\t\t\"cgo\")\n\t\t\tset -x\n\t\t\tCGO_ENABLED=1 go build -a \\\n\t\t\t\t-tags 'cgo static_build' \\\n\t\t\t\t-ldflags \"-w -extldflags -static\" \\\n\t\t\t\t-o \"$name\" .\n\t\t\t;;\n\t\t*)\n\t\t\tset -x\n\t\t\tCGO_ENABLED=0 go build -a \\\n\t\t\t\t-installsuffix cgo \\\n\t\t\t\t-ldflags \"-w\" \\\n\t\t\t\t-o \"$name\" .\n\t\t\t;;\n\tesac\n\t)\n}\n\n# go to a folder easily in your gopath\ngogo(){\n\tlocal d=$1\n\n\tif [[ -z $d ]]; then\n\t\techo \"You need to specify a project name.\"\n\t\treturn 1\n\tfi\n\n\tif [[ \"$d\" == github* ]]; then\n\t\td=$(echo \"$d\" | sed 's/.*\\///')\n\tfi\n\td=${d%/}\n\n\t# search for the project dir in the GOPATH\n\tmapfile -t path < <(find \"${GOPATH}/src\" \\( -type d -o -type l \\) -iname \"$d\"  | awk '{print length, $0;}' | sort -n | awk '{print $2}')\n\n\tif [ \"${path[0]}\" == \"\" ] || [ \"${path[*]}\" == \"\" ]; then\n\t\techo \"Could not find a directory named $d in $GOPATH\"\n\t\techo \"Maybe you need to 'go get' it ;)\"\n\t\treturn 1\n\tfi\n\n\t# enter the first path found\n\tcd \"${path[0]}\" || return 1\n}\n\ngolistdeps(){\n\t(\n\tif [[ -n \"$1\" ]]; then\n\t\tgogo \"$@\"\n\tfi\n\n\tgo list -e -f '{{join .Deps \"\\n\"}}' ./... | xargs go list -e -f '{{if not .Standard}}{{.ImportPath}}{{end}}'\n\t)\n}\n\n# get the name of a x window\nxname(){\n\tlocal window_id=$1\n\n\tif [[ -z $window_id ]]; then\n\t\techo \"Please specifiy a window id, you find this with 'xwininfo'\"\n\n\t\treturn 1\n\tfi\n\n\tlocal match_string='\".*\"'\n\tlocal match_qstring='\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"' # NOTE: Adds 1 backreference\n\n\t# get the name\n\txprop -id \"$window_id\" | \\\n\t\tsed -nr \\\n\t\t-e \"s/^WM_CLASS\\\\(STRING\\\\) = ($match_qstring), ($match_qstring)$/instance=\\\\1\\\\nclass=\\\\3/p\" \\\n\t\t-e \"s/^WM_WINDOW_ROLE\\\\(STRING\\\\) = ($match_qstring)$/window_role=\\\\1/p\" \\\n\t\t-e \"/^WM_NAME\\\\(STRING\\\\) = ($match_string)$/{s//title=\\\\1/; h}\" \\\n\t\t-e \"/^_NET_WM_NAME\\\\(UTF8_STRING\\\\) = ($match_qstring)$/{s//title=\\\\1/; h}\" \\\n\t\t-e \"\\${g; p}\"\n}\n\ngovendorcheck() {\n\t# shellcheck disable=SC2046\n\tvendorcheck -u ./... | awk '{print $NF}' | sed -e \"s#^github.com/jessfraz/$(basename $(pwd))/##\"\n}\n\nrestart_gpgagent(){\n\t# Restart the gpg agent.\n\techo \"Restarting gpg-agent and scdaemon...\"\n\techo -e \"\\tgpg-agent: $(pgrep gpg-agent) | scdaemon: $(pgrep scdaemon)\"\n\n\techo \"Killing processes...\"\n\t# shellcheck disable=SC2046\n\tkill -9 $(pgrep scdaemon) $(pgrep gpg-agent) >/dev/null 2>&1\n\techo -e \"\\tgpg-agent: $(pgrep gpg-agent) | scdaemon: $(pgrep scdaemon)\"\n\n\tgpgconf --reload gpg-agent\n\tgpg-connect-agent updatestartuptty /bye >/dev/null 2>&1\n\n\techo \"Restarted gpg-agent and scdaemon...\"\n}\n\ngitsetoriginnopush() {\n\tgit remote set-url --push origin no_push\n}\n\nget_cad_exchanger_token() {\n\tresp=$(curl -XPOST -sSL -H \"Authorization: Basic $CAD_EXCHANGER_REQUEST_TOKEN\" \\\n        -H \"Content-Type: application/json\" \\\n        -d '{\"grant_type\":\"client_credentials\",\"scope\":\"data:read data:write data:create data:convert data:share viewer:read\"}' \\\n\t\thttps://cloud.cadexchanger.com/api/v1/oauth2/token)\n\techo \"$resp\" | jq --raw-output '.access_token'\n}\n\ncad_upload_folder_contents() {\n\ttoken=$(get_cad_exchanger_token)\n\t# Run this inside the folder with all the files.\n\tdir_name=\"rack-$(date '+%Y-%m-%d')\"\n\t# Create the folder\n\tresp=$(curl -sSL -XPOST -H \"Authorization: Bearer ${token}\" \\\n        -H \"Content-Type: application/json\" \\\n        -d '{\"folder\": {\"name\":\"'\"${dir_name}\"'\", \"parentFolder\":\"'\"${CAD_EXCHANGER_PARENT_FOLDER}\"'\"}}' \\\n\t\thttps://cloud.cadexchanger.com/api/v1/folders)\n\tfolder_id=$(echo \"$resp\" | jq --raw-output '.folder.id')\n\n\tfor file in *.{SLDPRT,SLDASM}; do\n\t\t# Upload the file to the folder\n\t\techo \"Uploading $file...\"\n\t\tset -x\n\t\tcurl -sSL -XPOST -H \"Authorization: Bearer ${token}\" \\\n        \t-F \"parentFolder=${folder_id}\" \\\n        \t-F \"data=@${file}\" \\\n        \thttps://cloud.cadexchanger.com/api/v1/files\n\t\tset +x\n\tdone\n}\n\ncad_convert_rack_files_to_collada() {\n\ttoken=$(get_cad_exchanger_token)\n\t# Get the file we want.\n\tresp=$(curl -sSL -H \"Authorization: Bearer ${token}\" \\\n\t\t\"https://cloud.cadexchanger.com/api/v1/files?name[startsWith]=OXC0000040\")\n\track_files=$(echo \"$resp\" | jq --raw-output '.files[] | @base64')\n\n\t# Iterate over the files.\n\tfor row in $rack_files; do\n    \t_jq() {\n     \t\techo \"${row}\" | base64 --decode | jq -r \"${1}\"\n    \t}\n\n   \t\tfile_id=$(_jq '.id')\n   \t\tfile_name=$(_jq '.name')\n\t\tif [[ \"$file_name\" == *SLDASM ]]; then\n\t\t\techo \"\"\n\t\t\techo \"Converting file $file_name to collada...\"\n\n\t\t\t# Get the status of the file.\n\t\t\techo \"File status:\"\n\t\t\tresp=$(curl -sSL -H \"Authorization: Bearer ${token}\" \\\n\t\t\t\t\"https://cloud.cadexchanger.com/api/v1/files/${file_id}\")\n\t\t\trevision_id=$(echo \"$resp\" | jq --raw-output '.file.activeRevision')\n\t\t\techo \"$resp\" | jq .\n\n\t\t\t# Get the status of the revison.\n\t\t\techo \"Revision status:\"\n\t\t\tcurl -sSL -H \"Authorization: Bearer ${token}\" \\\n\t\t\t\t\"https://cloud.cadexchanger.com/api/v1/filerevisions/${revision_id}\" | jq .\n\n\t\t\t# Convert the file to COLLADA.\n\t\t\techo \"Conversion response:\"\n\t\t\tcurl -sSL -XPOST -H \"Authorization: Bearer ${token}\" \\\n\t\t\t\t-H \"Content-Type: application/json\" \\\n\t\t\t\t-d '{\"format\": \"collada\", \"extension\": \"dae\"}' \\\n\t\t\t\t\"https://cloud.cadexchanger.com/api/v1/files/${file_id}/convert\" | jq .\n\t\tfi\n\tdone\n}\n"
        },
        {
          "name": ".gitconfig",
          "type": "blob",
          "size": 9.6474609375,
          "content": "[alias]\n\n\t# View abbreviated SHA, description, and history graph of the latest 20 commits\n\tl = log --pretty=oneline -n 20 --graph --abbrev-commit\n\n\t# View the current working tree status using the short format\n\ts = status -s\n\n\t# Show the diff between the latest commit and the current state\n\td = !\"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat\"\n\n\t# `git di $number` shows the diff between the state `$number` revisions ago and the current state\n\tdi = !\"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d\"\n\n\t# Pull in remote changes for the current repository and all its submodules\n\tp = !\"git pull; git submodule foreach git pull origin master\"\n\n\t# Checkout a pull request from origin (of a github repository)\n\tpr = !\"pr() { git fetch origin pull/$1/head:pr-$1; git checkout pr-$1; }; pr\"\n\n\t# Clone a repository including all submodules\n\tc = clone --recursive\n\n\t# Commit all changes\n\tca = !git add -A && git commit -av\n\n\t# Switch to a branch, creating it if necessary\n\tgo = \"!f() { git checkout -b \\\"$1\\\" 2> /dev/null || git checkout \\\"$1\\\"; }; f\"\n\n\t# Color graph log view\n\tgraph = log --graph --color --pretty=format:\"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n\"\n\n\t# Show verbose output about tags, branches or remotes\n\ttags = tag -l\n\tbranches = branch -a\n\tremotes = remote -v\n\n\t# Amend the currently staged files to the latest commit\n\tamend = commit --amend --reuse-message=HEAD\n\n\t# Credit an author on the latest commit\n\tcredit = \"!f() { git commit --amend --author \\\"$1 <$2>\\\" -C HEAD; }; f\"\n\n\t# Interactive rebase with the given number of latest commits\n\treb = \"!r() { git rebase -i HEAD~$1; }; r\"\n\n\t# Find branches containing commit\n\tfb = \"!f() { git branch -a --contains $1; }; f\"\n\n\t# Find tags containing commit\n\tft = \"!f() { git describe --always --contains $1; }; f\"\n\n\t# Find commits by source code\n\tfc = \"!f() { git log --pretty=format:'%C(yellow)%h\t%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f\"\n\n\t# Find commits by commit message\n\tfm = \"!f() { git log --pretty=format:'%C(yellow)%h\t%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f\"\n\n\t# Remove branches that have already been merged with master\n\t# a.k.a. ‘delete merged’\n\tdm = \"!git branch --merged | grep -v '\\\\*' | xargs -n 1 git branch -d; git remote -v update -p\"\n\n\t# List contributors with number of commits\n\tcontributors = shortlog --summary --numbered\n\n\tlg = log --color --decorate --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an (%G?)>%Creset' --abbrev-commit\n\n\tmdiff = \"!f() { git stash | head -1 | grep -q 'No local changes to save'; x=$?; git merge --no-commit $1 &>/dev/null; git add -u &>/dev/null; git diff --staged; git reset --hard &>/dev/null; test $x -ne 0 && git stash pop &>/dev/null; }; f\"\n\n\t# Codereview aliases\n\tchange = codereview change\n\tgofmt = codereview gofmt\n\tmail = codereview mail\n\tpending = codereview pending\n\tsubmit = codereview submit\n\tsync = codereview sync\n\n\t# from seth vargo https://gist.github.com/sethvargo/6b2f7b592853381690bfe3bd00947e8f\n\tunreleased = \"!f() { git fetch --tags && git diff $(git tag | tail -n 1); }; f\"\n\tup = !git pull origin master && git remote prune origin && git submodule update --init --recursive\n\tundo = !git reset HEAD~1 --mixed\n\ttop = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20\n\n\t# from trevor bramble https://twitter.com/TrevorBramble/status/774292970681937920\n\talias=!git config -l | grep ^alias | cut -c 7- | sort\n\n\t# from myles borins https://github.com/TheAlphaNerd/Dot-files/blob/master/.gitconfig\n\t# github broke some workflow... this will make it less painful\n\tpatchit = \"!f() { echo $1.patch | sed s_pull/[0-9]*/commits_commit_ | xargs curl -L | git am --whitespace=fix; }; f\"\n\t# patchit = \"!f() { curl -L $1.patch | git am --whitespace=fix; }; f\"\n\tpatchit-please = \"!f() { echo $1.patch | sed s_pull/[0-9]*/commits_commit_ | xargs curl -L | git am -3 --whitespace=fix; }; f\"\n\t# patchit-please = \"!f() { curl -L $1.patch | git am -3 --whitespace=fix; }; f\"\n\n[apply]\n\n\t# Detect whitespace errors when applying a patch\n\twhitespace = fix\n\n[core]\n\n\t# Use custom `.gitignore` and `.gitattributes`\n\texcludesfile = ~/.gitignore\n\tattributesfile = ~/.gitattributes\n\n\t# Treat spaces before tabs and all kinds of trailing whitespace as an error\n\t# [default] trailing-space: looks for spaces at the end of a line\n\t# [default] space-before-tab: looks for spaces before tabs at the beginning of a line\n\twhitespace = space-before-tab,-indent-with-non-tab,trailing-space\n\n\t# Make `git rebase` safer on OS X\n\t# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>\n\ttrustctime = false\n\teditor = nvim\n\n[color]\n\n\t# Use colors in Git commands that are capable of colored output when\n\t# outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)\n\tui = auto\n\n[color \"branch\"]\n\n\tcurrent = yellow reverse\n\tlocal = yellow\n\tremote = green\n\n[color \"diff\"]\n\n\tmeta = yellow bold\n\tfrag = magenta bold # line info\n\told = red # deletions\n\tnew = green # additions\n\n[color \"status\"]\n\n\tadded = yellow\n\tchanged = green\n\tuntracked = cyan\n\n[diff]\n\n\t# Detect copies as well as renames\n\trenames = copies\n\n[help]\n\n\t# Automatically correct and execute mistyped commands\n\tautocorrect = 1\n\n[merge]\n\n\t# Include summaries of merged commits in newly created merge commit messages\n\tlog = true\n\n[push]\n\t# change to maching for machines with older versions of git 1.x.x\n\tdefault = simple\n\tautoSetupRemote = true\n\n[url \"git@github.com:github\"]\n\n\tinsteadOf = \"https://github.com/github\"\n\tinsteadOf = \"github:github\"\n\tinsteadOf = \"git://github.com/github\"\n\n[url \"git@github.com:\"]\n\n\tpushInsteadOf = \"https://github.com/\"\n\tpushInsteadOf = \"github:\"\n\tpushInsteadOf = \"git://github.com/\"\n\n[url \"git://github.com/\"]\n\n\tinsteadOf = \"github:\"\n\n[url \"git@gist.github.com:\"]\n\n\tinsteadOf = \"gst:\"\n\tpushInsteadOf = \"gist:\"\n\tpushInsteadOf = \"git://gist.github.com/\"\n\n[url \"git://gist.github.com/\"]\n\n\tinsteadOf = \"gist:\"\n\n# Uncomment if you want fetch to also get all github pull requests, this is rather\n# large on big repos.\n#[remote \"origin\"]\n\t#fetch = +refs/pull/*/head:refs/remotes/origin/pull/*\n\n[commit]\n\tgpgsign = true\n[pull]\n\trebase = true\n[user]\n\tname = Jess Frazelle\n\temail = github@jessfraz.com\n\tsigningkey = 18F3685C0022BFF3\n[github]\n\tuser = jessfraz\n[filter \"lfs\"]\n\tclean = git-lfs clean -- %f\n\tsmudge = git-lfs smudge -- %f\n\tprocess = git-lfs filter-process\n\trequired = true\n[safe]\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n\tdirectory = /home/user/src\n[init]\n\tdefaultBranch = main\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4072265625,
          "content": "*~\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n.uuid\n\n.extra\n.gitconfig\n.gnupg\n!.gnupg/gpg*.conf\n.i3/logfile\n.irssi/away.log\n.irssi/config*\n.irssi/nicknames_whitelist\n.irssi/otr\n.irssi/saved_colors\n.irssi/scripts/autorun/blocker.pl\n.irssi/startup\n.rainbow_oauth\n.nginx/conf.d/*\n"
        },
        {
          "name": ".gnupg",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gtkrc",
          "type": "blob",
          "size": 0.818359375,
          "content": "GtkPaned::handle-size             = 6\nGimpDockWindow::default-height    = 300\nGimpDock::font-scale              = 0.8333\nGimpMenuDock::minimal-width       = 200\nGimpDockWindow::menu-preview-size = dialog\nGimpToolPalette::tool-icon-size   = dialog\nGimpToolPalette::button-relief    = none\nGimpDockbook::tab-border          = 0\nGimpDockbook::tab-icon-size       = dialog\nGimpColorNotebook::tab-border     = 0\nGimpColorNotebook::tab-icon-size  = dialog\nGimpDeviceEditor::handle-size     = 12\nGimpDockable::content-border      = 2\nGimpEditor::content-spacing       = 2\nGimpEditor::button-spacing        = 2\nGimpEditor::button-icon-size      = dialog\nGimpDataEditor::minimal-height    = 96\nGtkDialog::content-area-border    = 0\nGtkDialog::button-spacing         = 6\nGtkDialog::action-area-border     = 12\nGimpUnitComboBox::appears-as-list = 0\n"
        },
        {
          "name": ".i3",
          "type": "tree",
          "content": null
        },
        {
          "name": ".inputrc",
          "type": "blob",
          "size": 1.494140625,
          "content": "# Make Tab autocomplete regardless of filename case\nset completion-ignore-case on\n\n# List all matches in case multiple possible completions are possible\nset show-all-if-ambiguous on\n\n# Immediately add a trailing slash when autocompleting symlinks to directories\nset mark-symlinked-directories on\n\n# Use the text that has already been typed as the prefix for searching through\n# commands (i.e. more intelligent Up/Down behavior)\n\"\\e[B\": history-search-forward\n\"\\e[A\": history-search-backward\n\n# Do not autocomplete hidden files unless the pattern explicitly begins with a dot\nset match-hidden-files off\n\n# Show all autocomplete results at once\nset page-completions off\n\n# If there are more than 200 possible completions for a word, ask to show them all\nset completion-query-items 200\n\n# Show extra file information when completing, like `ls -F` does\nset visible-stats on\n\n# Be more intelligent when autocompleting by also looking at the text after\n# the cursor. For example, when the current line is \"cd ~/src/mozil\", and\n# the cursor is on the \"z\", pressing Tab will not autocomplete it to \"cd\n# ~/src/mozillail\", but to \"cd ~/src/mozilla\". (This is supported by the\n# Readline used by Bash 4.)\nset skip-completed-text on\n\n# Allow UTF-8 input and output, instead of showing stuff like $'\\0123\\0456'\nset input-meta on\nset output-meta on\nset convert-meta off\n\n# Use Alt/Meta + Delete to delete the preceding word\n\"\\e[3;3~\": kill-word\n\n## enable Alt-arrows\n\"\\e[1;5D\": backward-word ### Alt left\n\"\\e[1;5C\": forward-word ### Alt right\n"
        },
        {
          "name": ".irssi",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mpd.conf",
          "type": "blob",
          "size": 14.3115234375,
          "content": "# An example configuration file for MPD.\n# Read the user manual for documentation: http://www.musicpd.org/doc/user/\n# or /usr/share/doc/mpd/user-manual.html\n\n\n# Files and directories #######################################################\n#\n# This setting controls the top directory which MPD will search to discover the\n# available audio files and add them to the daemon's online database. This \n# setting defaults to the XDG directory, otherwise the music directory will be\n# be disabled and audio files will only be accepted over ipc socket (using\n# file:// protocol) or streaming files over an accepted protocol.\n#\nmusic_directory     \"nfs://10.0.1.156/volume1/Media/iTunes/Music\"\n#\n# This setting sets the MPD internal playlist directory. The purpose of this\n# directory is storage for playlists created by MPD. The server will use \n# playlist files not created by the server but only if they are in the MPD\n# format. This setting defaults to playlist saving being disabled.\n#\nplaylist_directory      \"/var/lib/mpd/playlists\"\n#\n# This setting sets the location of the MPD database. This file is used to\n# load the database at server start up and store the database while the \n# server is not up. This setting defaults to disabled which will allow\n# MPD to accept files over ipc socket (using file:// protocol) or streaming\n# files over an accepted protocol.\n#\ndb_file         \"/var/lib/mpd/tag_cache\"\n# \n# These settings are the locations for the daemon log files for the daemon.\n# These logs are great for troubleshooting, depending on your log_level\n# settings.\n#\n# The special value \"syslog\" makes MPD use the local syslog daemon. This\n# setting defaults to logging to syslog, otherwise logging is disabled.\n#\nlog_file            \"/var/log/mpd/mpd.log\"\n#\n# This setting sets the location of the file which stores the process ID\n# for use of mpd --kill and some init scripts. This setting is disabled by\n# default and the pid file will not be stored.\n#\npid_file            \"/var/log/mpd/pid\"\n#\n# This setting sets the location of the file which contains information about\n# most variables to get MPD back into the same general shape it was in before\n# it was brought down. This setting is disabled by default and the server \n# state will be reset on server start up.\n#\nstate_file          \"/var/lib/mpd/state\"\n#\n# The location of the sticker database.  This is a database which\n# manages dynamic information attached to songs.\n#\nsticker_file                   \"/var/lib/mpd/sticker.sql\"\n#\n###############################################################################\n\n\n# General music daemon options ################################################\n#\n# This setting specifies the user that MPD will run as. MPD should never run as\n# root and you may use this setting to make MPD change its user ID after\n# initialization. This setting is disabled by default and MPD is run as the\n# current user.\n#\nuser                \"mpd\"\n#\n# This setting specifies the group that MPD will run as. If not specified\n# primary group of user specified with \"user\" setting will be used (if set).\n# This is useful if MPD needs to be a member of group such as \"audio\" to\n# have permission to use sound card.\n#\ngroup                          \"audio\"\n#\n# This setting sets the address for the daemon to listen on. Careful attention\n# should be paid if this is assigned to anything other then the default, any.\n# This setting can deny access to control of the daemon. Choose any if you want\n# to have mpd listen on every address\n#\n# For network\n#bind_to_address     \"localhost\"\n#\n# And for Unix Socket\nbind_to_address        \"/var/lib/mpd/socket\"\n#\n# This setting is the TCP port that is desired for the daemon to get assigned\n# to.\n#\n#port               \"6600\"\n#\n# This setting controls the type of information which is logged. Available \n# setting arguments are \"default\", \"secure\" or \"verbose\". The \"verbose\" setting\n# argument is recommended for troubleshooting, though can quickly stretch\n# available resources on limited hardware storage.\n#\n#log_level          \"default\"\n#\n# If you have a problem with your MP3s ending abruptly it is recommended that \n# you set this argument to \"no\" to attempt to fix the problem. If this solves\n# the problem, it is highly recommended to fix the MP3 files with vbrfix\n# (available as vbrfix in the debian archive), at which\n# point gapless MP3 playback can be enabled.\n#\n#gapless_mp3_playback           \"yes\"\n#\n# Setting \"restore_paused\" to \"yes\" puts MPD into pause mode instead\n# of starting playback after startup.\n#\n#restore_paused \"no\"\n#\n# This setting enables MPD to create playlists in a format usable by other\n# music players.\n#\n#save_absolute_paths_in_playlists   \"no\"\n#\n# This setting defines a list of tag types that will be extracted during the \n# audio file discovery process. The complete list of possible values can be\n# found in the mpd.conf man page.\n#metadata_to_use    \"artist,album,title,track,name,genre,date,composer,performer,disc\"\n#\n# This setting enables automatic update of MPD's database when files in \n# music_directory are changed.\n#\n#auto_update    \"yes\"\n#\n# Limit the depth of the directories being watched, 0 means only watch\n# the music directory itself.  There is no limit by default.\n#\n#auto_update_depth \"3\"\n#\n###############################################################################\n\n\n# Symbolic link behavior ######################################################\n#\n# If this setting is set to \"yes\", MPD will discover audio files by following \n# symbolic links outside of the configured music_directory.\n#\n#follow_outside_symlinks    \"yes\"\n#\n# If this setting is set to \"yes\", MPD will discover audio files by following\n# symbolic links inside of the configured music_directory.\n#\nfollow_inside_symlinks     \"yes\"\n#\n###############################################################################\n\n\n# Zeroconf / Avahi Service Discovery ##########################################\n#\n# If this setting is set to \"yes\", service information will be published with\n# Zeroconf / Avahi.\n#\n#zeroconf_enabled       \"yes\"\n#\n# The argument to this setting will be the Zeroconf / Avahi unique name for\n# this MPD server on the network.\n#\n#zeroconf_name          \"Music Player\"\n#\n###############################################################################\n\n\n# Permissions #################################################################\n#\n# If this setting is set, MPD will require password authorization. The password\n# can setting can be specified multiple times for different password profiles.\n#\n#password                        \"password@read,add,control,admin\"\n#\n# This setting specifies the permissions a user has who has not yet logged in. \n#\n#default_permissions             \"read,add,control,admin\"\n#\n###############################################################################\n\n\n# Database #######################################################################\n#\n\n#database {\n#       plugin \"proxy\"\n#       host \"other.mpd.host\"\n#       port \"6600\"\n#}\n\n# Input #######################################################################\n#\n\ninput {\n        plugin \"curl\"\n#       proxy \"proxy.isp.com:8080\"\n#       proxy_user \"user\"\n#       proxy_password \"password\"\n}\n\n#\n###############################################################################\n\n# Audio Output ################################################################\n#\n# MPD supports various audio output types, as well as playing through multiple \n# audio outputs at the same time, through multiple audio_output settings \n# blocks. Setting this block is optional, though the server will only attempt\n# autodetection for one sound card.\n#\n# An example of an ALSA output:\n#\naudio_output {\n    type        \"alsa\"\n    name        \"My ALSA Device\"\n#   device      \"hw:0,0\"    # optional\n#   mixer_type      \"hardware\"      # optional\n#   mixer_device    \"default\"   # optional\n#   mixer_control   \"PCM\"       # optional\n#   mixer_index \"0\"     # optional\n}\n#\n# An example of an OSS output:\n#\n#audio_output {\n#   type        \"oss\"\n#   name        \"My OSS Device\"\n#   device      \"/dev/dsp\"  # optional\n#   mixer_type      \"hardware\"      # optional\n#   mixer_device    \"/dev/mixer\"    # optional\n#   mixer_control   \"PCM\"       # optional\n#}\n#\n# An example of a shout output (for streaming to Icecast):\n#\n#audio_output {\n#   type        \"shout\"\n#   encoding    \"ogg\"           # optional\n#   name        \"My Shout Stream\"\n#   host        \"localhost\"\n#   port        \"8000\"\n#   mount       \"/mpd.ogg\"\n#   password    \"hackme\"\n#   quality     \"5.0\"\n#   bitrate     \"128\"\n#   format      \"44100:16:1\"\n#   protocol    \"icecast2\"      # optional\n#   user        \"source\"        # optional\n#   description \"My Stream Description\" # optional\n#   url             \"http://example.com\"    # optional\n#   genre       \"jazz\"          # optional\n#   public      \"no\"            # optional\n#   timeout     \"2\"         # optional\n#   mixer_type      \"software\"              # optional\n#}\n#\n# An example of a recorder output:\n#\n#audio_output {\n#       type            \"recorder\"\n#       name            \"My recorder\"\n#       encoder         \"vorbis\"                # optional, vorbis or lame\n#       path            \"/var/lib/mpd/recorder/mpd.ogg\"\n##      quality         \"5.0\"                   # do not define if bitrate is defined\n#       bitrate         \"128\"                   # do not define if quality is defined\n#       format          \"44100:16:1\"\n#}\n#\n# An example of a httpd output (built-in HTTP streaming server):\n#\n#audio_output {\n#   type        \"httpd\"\n#   name        \"mpd\"\n#   encoder     \"vorbis\"        # optional, vorbis or lame\n#   port        \"8000\"\n#   bind_to_address \"0.0.0.0\"               # optional, IPv4 or IPv6\n#   quality     \"5.0\"           # do not define if bitrate is defined\n#   bitrate     \"128\"           # do not define if quality is defined\n#   format      \"44100:16:1\"\n#   max_clients     \"0\"                     # optional 0=no limit\n#}\n#\n# An example of a pulseaudio output (streaming to a remote pulseaudio server)\n# Please see README.Debian if you want mpd to play through the pulseaudio\n# daemon started as part of your graphical desktop session!\n#\n#audio_output {\n#   type        \"pulse\"\n#   name        \"My Pulse Output\"\n#   server      \"remote_server\"     # optional\n#   sink        \"remote_server_sink\"    # optional\n#}\n#\n# An example of a winmm output (Windows multimedia API).\n#\n#audio_output {\n#   type        \"winmm\"\n#   name        \"My WinMM output\"\n#   device      \"Digital Audio (S/PDIF) (High Definition Audio Device)\" # optional\n#       or\n#   device      \"0\"     # optional\n#   mixer_type  \"hardware\"  # optional\n#}\n#\n# An example of an openal output.\n#\n#audio_output {\n#   type        \"openal\"\n#   name        \"My OpenAL output\"\n#   device      \"Digital Audio (S/PDIF) (High Definition Audio Device)\" # optional\n#}\n#\n## Example \"pipe\" output:\n#\n#audio_output {\n#   type        \"pipe\"\n#   name        \"my pipe\"\n#   command     \"aplay -f cd 2>/dev/null\"\n## Or if you're want to use AudioCompress\n#   command     \"AudioCompress -m | aplay -f cd 2>/dev/null\"\n## Or to send raw PCM stream through PCM:\n#   command     \"nc example.org 8765\"\n#   format      \"44100:16:2\"\n#}\n#\n## An example of a null output (for no audio output):\n#\n#audio_output {\n#   type        \"null\"\n#   name        \"My Null Output\"\n#   mixer_type      \"none\"                  # optional\n#}\n#\n# If MPD has been compiled with libsamplerate support, this setting specifies \n# the sample rate converter to use.  Possible values can be found in the \n# mpd.conf man page or the libsamplerate documentation. By default, this is\n# setting is disabled.\n#\n#samplerate_converter       \"Fastest Sinc Interpolator\"\n#\n###############################################################################\n\n\n# Normalization automatic volume adjustments ##################################\n#\n# This setting specifies the type of ReplayGain to use. This setting can have\n# the argument \"off\", \"album\", \"track\" or \"auto\". \"auto\" is a special mode that\n# chooses between \"track\" and \"album\" depending on the current state of\n# random playback. If random playback is enabled then \"track\" mode is used.\n# See <http://www.replaygain.org> for more details about ReplayGain.\n# This setting is off by default.\n#\n#replaygain         \"album\"\n#\n# This setting sets the pre-amp used for files that have ReplayGain tags. By\n# default this setting is disabled.\n#\n#replaygain_preamp      \"0\"\n#\n# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.\n# By default this setting is disabled.\n#\n#replaygain_missing_preamp  \"0\"\n#\n# This setting enables or disables ReplayGain limiting.\n# MPD calculates actual amplification based on the ReplayGain tags\n# and replaygain_preamp / replaygain_missing_preamp setting.\n# If replaygain_limit is enabled MPD will never amplify audio signal\n# above its original level. If replaygain_limit is disabled such amplification\n# might occur. By default this setting is enabled.\n#\n#replaygain_limit       \"yes\"\n#\n# This setting enables on-the-fly normalization volume adjustment. This will\n# result in the volume of all playing audio to be adjusted so the output has \n# equal \"loudness\". This setting is disabled by default.\n#\n#volume_normalization       \"no\"\n#\n###############################################################################\n\n\n# Character Encoding ##########################################################\n#\n# If file or directory names do not display correctly for your locale then you \n# may need to modify this setting.\n#\nfilesystem_charset      \"UTF-8\"\n#\n# This setting controls the encoding that ID3v1 tags should be converted from.\n#\nid3v1_encoding          \"UTF-8\"\n#\n###############################################################################\n\n\n# SIDPlay decoder #############################################################\n#\n# songlength_database:\n#  Location of your songlengths file, as distributed with the HVSC.\n#  The sidplay plugin checks this for matching MD5 fingerprints.\n#  See http://www.c64.org/HVSC/DOCUMENTS/Songlengths.faq\n#\n# default_songlength:\n#  This is the default playing time in seconds for songs not in the\n#  songlength database, or in case you're not using a database.\n#  A value of 0 means play indefinitely.\n#\n# filter:\n#  Turns the SID filter emulation on or off.\n#\n#decoder {\n#       plugin                  \"sidplay\"\n#       songlength_database     \"/media/C64Music/DOCUMENTS/Songlengths.txt\"\n#       default_songlength      \"120\"\n#       filter \"true\"\n#}\n#\n###############################################################################\n"
        },
        {
          "name": ".path",
          "type": "blob",
          "size": 3.228515625,
          "content": "#!/bin/sh\n\n# go path\nexport GOPATH=\"${HOME}/.go\"\n\n# update path\nexport PATH=/usr/local/bin:${PATH}:/sbin:/usr/local/sbin\n\n# add go path\nexport PATH=\"/usr/local/go/bin:${GOPATH}/bin:${PATH}\"\n\n# add rust path\nexport PATH=\"${HOME}/.cargo/bin:${PATH}\"\n\n# add bcc tools path\nexport PATH=\"/usr/share/bcc/tools:${PATH}\"\n\n# add gnubin for mac\nexport PATH=\"/usr/local/opt/gnu-sed/libexec/gnubin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:${PATH}\"\n\n# add scdaemon\nexport PATH=\"/usr/lib/gnupg:${PATH}\"\n\n# add gnu getopt\nexport PATH=\"/usr/local/opt/gnu-getopt/bin:${PATH}\"\n\n# add mysql\nexport PATH=\"/opt/homebrew/opt/mysql-client/bin:${PATH}\"\n\n# update cdpath\nexport CDPATH=${CDPATH}:${GOPATH}/src/github.com:${GOPATH}/src/golang.org:${GOPATH}/src\n\n# The next line updates PATH for the Google Cloud SDK.\n# shellcheck source=/dev/null\nif [ -f \"${HOME}/.google-cloud-sdk/path.bash.inc\" ]; then . \"${HOME}/.google-cloud-sdk/path.bash.inc\"; fi\n\n# The next line enables shell command completion for gcloud.\n# shellcheck source=/dev/null\nif [ -f \"${HOME}/.google-cloud-sdk/completion.bash.inc\" ]; then . \"${HOME}/.google-cloud-sdk/completion.bash.inc\"; fi\n\nexport PATH=\"${HOME}/.google-cloud-sdk/bin:${PATH}\"\n\n# update path for gnu coreutils, make & find on darwin\nexport PATH=/usr/local/opt/coreutils/libexec/gnubin:${PATH}\nexport MANPATH=/usr/local/opt/coreutils/libexec/gnuman:${MANPATH}\nexport PATH=/usr/local/opt/make/libexec/gnubin:${PATH}\nexport MANPATH=/usr/local/opt/make/libexec/gnuman:${MANPATH}\nexport PATH=/usr/local/opt/findutils/libexec/gnubin:${PATH}\nexport MANPATH=/usr/local/opt/findutils/libexec/gnuman:${MANPATH}\n\n# update path for Chromium depot_tools\nexport PATH=\"${PATH}:${HOME}/depot_tools\"\n\n# Add bash completion for Chromium depot_tools\n# shellcheck source=/dev/null\nif [ -f \"${HOME}/depot_tools/git_cl_completion.sh\" ]; then . \"${HOME}/depot_tools/git_cl_completion.sh\"; fi\n\n# Homebrew\nexport PATH=\"/opt/homebrew/bin:${PATH}\"\nexport PATH=\"/opt/homebrew/sbin:${PATH}\"\nexport LIBRARY_PATH=\"/opt/homebrew/lib:${LIBRARY_PATH}\"\nexport LDFLAGS=\"${LDFLAGS} -L/opt/homebrew/lib\"\nexport CPPFLAGS=\"${CPPFLAGS} -I/opt/homebrew/include\"\n\n# shellcheck source=/dev/null\nif [ -r \"/opt/homebrew/etc/profile.d/bash_completion.sh\" ]; then . \"/opt/homebrew/etc/profile.d/bash_completion.sh\"; fi\n\n# OpenSSL\nexport PATH=\"/opt/homebrew/opt/openssl/bin:${PATH}\"\nexport LDFLAGS=\"${LDFLAGS} -L/opt/homebrew/opt/openssl/lib\"\nexport CPPFLAGS=\"${CPPFLAGS} -I/opt/homebrew/opt/openssl/include\"\nexport OPENSSL_ROOT_DIR=\"/opt/homebrew/opt/openssl\"\nexport PKG_CONFIG_PATH=\"/opt/homebrew/opt/openssl/lib/pkgconfig:${PKG_CONFIG_PATH}\"\n\n# MySQL\nexport MYSQL_INCLUDE_DIR=\"/opt/homebrew/opt/mysql-client/include/mysql\"\n\n# LLVM\nexport PATH=\"/opt/homebrew/opt/llvm/bin:${PATH}\"\n\n# Boost\nexport BOOST_INCLUDE_DIR=\"/opt/homebrew/include\"\n\n# CXXFLAGS\nCXXFLAGS=\"${CXXFLAGS} -stdlib=libc++ -Wno-deprecated-declarations -Wno-deprecated -framework CoreFoundation\"\n\n# opam configuration\ntest -r \"${HOME}/.opam/opam-init/init.sh\" && . \"${HOME}/.opam/opam-init/init.sh\" > /dev/null 2> /dev/null || true\n\n# bun\nexport BUN_INSTALL=\"$HOME/.bun\"\nexport PATH=$BUN_INSTALL/bin:$PATH\n\n. \"$HOME/.cargo/env\"\nexport RUST_SRC_PATH=\"$(rustc --print sysroot)/lib/rustlib/src/rust/src\"\nexport DYLD_LIBRARY_PATH=\"$(rustc --print sysroot)/lib:$DYLD_LIBRARY_PATH\"\n\n"
        },
        {
          "name": ".rainbow_config.json",
          "type": "blob",
          "size": 0.08984375,
          "content": "{\n    \"IMAGE_ON_TERM\": false, \n    \"IMAGE_RESIZE_TO_FIT\": false, \n    \"THEME\": \"solarized\"\n}"
        },
        {
          "name": ".tmux.conf",
          "type": "blob",
          "size": 1.716796875,
          "content": "set -g default-terminal \"screen-256color\"\n# change prefix command to C-z\nset -g prefix C-z\nunbind C-b\nbind C-z last-window\nbind z send-prefix\n\n# Turn on mouse support\nsetw -g mouse on\n\n# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right\nset -g terminal-overrides \"xterm*:XT:smcup@:rmcup@:kUP5=\\eOA:kDN5=\\eOB:kLFT5=\\eOD:kRIT5=\\eOC\"\n\n# Scroll History\nset -g history-limit 30000\n\n# Set ability to capture on start and restore on exit window data when running an application\nsetw -g alternate-screen on\n\n# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.\nset -s escape-time 50\n\n# setup | and - for window splitting\nunbind %\nbind | split-window -h\nbind - split-window -v\n\n# colors\nset -g default-terminal \"screen-256color\"\n\n# title\nset -g set-titles on\nset -g set-titles-string '#T'\n#set -g status-justify centre\n\n# start window numbering at 1 for easier switching\nset -g base-index 1\nsetw -g pane-base-index 1\n\n# start numbering at 1\nset -g base-index 1\n\n# default statusbar colors\nset-option -g status-bg colour0\nset-option -g status-fg colour7\nset-option -g status-attr default\n\n# default window title colors\nset-window-option -g window-status-fg colour6\nset-window-option -g window-status-bg default\n#set-window-option -g window-status-attr dim\nset-window-option -g automatic-rename on\n\n# active window title colors\nsetw -g window-status-current-format \"|#I:#W|\"\nset-window-option -g window-status-current-fg colour4\nset-window-option -g window-status-current-bg default\n#set-window-option -g window-status-current-attr bright\n\n# pane border\nset-option -g pane-border-fg colour235 #base02\nset-option -g pane-active-border-fg colour240 #base01\n\n"
        },
        {
          "name": ".urxvt",
          "type": "tree",
          "content": null
        },
        {
          "name": ".xsessionrc",
          "type": "blob",
          "size": 0.541015625,
          "content": "#!/bin/sh\n#\n## ~/.xsessionrc\n#\n## Executed by startx (run your window manager from here)\n\nif [ -d /etc/X11/xinit/xinitrc.d ]; then\n\tfor f in /etc/X11/xinit/xinitrc.d/*; do\n\t\tif [ -x \"$f\" ]; then\n\t\t\t# shellcheck source=/dev/null\n\t\t\t. \"$f\"\n\t\tfi\n\tdone\n\tunset f\nfi\n\n# run Xprofile\nif [ -f ~/.Xprofile ]; then\n\t# shellcheck source=/dev/null\n\t. ~/.Xprofile\nfi\n\n# run Xmodmap\n[ -f ~/.Xmodmap ] && xmodmap ~/.Xmodmap\n\n# run local xhost\nxhost local:root\n\n# uncomment this if not using a login manager\n# so i3 will start correctly\nexec i3 -V >> ~/.i3/logfile 2>&1\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Jessie Frazelle\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.5986328125,
          "content": "SHELL := bash\n\n.PHONY: all\nall: bin usr dotfiles etc ## Installs the bin and etc directory files and the dotfiles.\n\n.PHONY: bin\nbin: ## Installs the bin directory files.\n\t# add aliases for things in bin\n\tfor file in $(shell find $(CURDIR)/bin -type f -not -name \"*-backlight\" -not -name \".*.swp\"); do \\\n\t\tf=$$(basename $$file); \\\n\t\tsudo ln -sf $$file /usr/local/bin/$$f; \\\n\tdone\n\n.PHONY: dotfiles\ndotfiles: ## Installs the dotfiles.\n\t# add aliases for dotfiles\n\tfor file in $(shell find $(CURDIR) -name \".*\" -not -name \".gitignore\" -not -name \".git\" -not -name \".config\" -not -name \".github\" -not -name \".*.swp\" -not -name \".gnupg\"); do \\\n\t\tf=$$(basename $$file); \\\n\t\tln -sfn $$file $(HOME)/$$f; \\\n\tdone; \\\n\tgpg --list-keys || true;\n\tmkdir -p $(HOME)/.gnupg\n\tfor file in $(shell find $(CURDIR)/.gnupg); do \\\n\t\tf=$$(basename $$file); \\\n\t\tln -sfn $$file $(HOME)/.gnupg/$$f; \\\n\tdone; \\\n\tln -fn $(CURDIR)/gitignore $(HOME)/.gitignore;\n\tgit update-index --skip-worktree $(CURDIR)/.gitconfig;\n\tmkdir -p $(HOME)/.config;\n\tln -snf $(CURDIR)/.i3 $(HOME)/.config/sway;\n\tmkdir -p $(HOME)/.local/share;\n\tln -snf $(CURDIR)/.fonts $(HOME)/.local/share/fonts;\n\tln -snf $(CURDIR)/.bash_profile $(HOME)/.profile;\n\tif [ -f /usr/local/bin/pinentry ]; then \\\n\t\tsudo ln -snf /usr/bin/pinentry /usr/local/bin/pinentry; \\\n\tfi;\n\tmkdir -p $(HOME)/Pictures;\n\tln -snf $(CURDIR)/central-park.jpg $(HOME)/Pictures/central-park.jpg;\n\tmkdir -p $(HOME)/.config/fontconfig;\n\tln -snf $(CURDIR)/.config/fontconfig/fontconfig.conf $(HOME)/.config/fontconfig/fontconfig.conf;\n\txrdb -merge $(HOME)/.Xdefaults || true\n\txrdb -merge $(HOME)/.Xresources || true\n\tfc-cache -f -v || true\n\n# Get the laptop's model number so we can generate xorg specific files.\nLAPTOP_XORG_FILE=/etc/X11/xorg.conf.d/10-dell-xps-display.conf\n\n.PHONY: etc\netc: ## Installs the etc directory files.\n\tsudo mkdir -p /etc/docker/seccomp\n\tfor file in $(shell find $(CURDIR)/etc -type f -not -name \".*.swp\"); do \\\n\t\tf=$$(echo $$file | sed -e 's|$(CURDIR)||'); \\\n\t\tsudo mkdir -p $$(dirname $$f); \\\n\t\tsudo ln -f $$file $$f; \\\n\tdone\n\tsystemctl --user daemon-reload || true\n\tsudo systemctl daemon-reload\n\tsudo systemctl enable systemd-networkd systemd-resolved\n\tsudo systemctl start systemd-networkd systemd-resolved\n\tsudo ln -snf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf\n\tLAPTOP_MODEL_NUMBER=$$(sudo dmidecode | grep \"Product Name: XPS 13\" | sed \"s/Product Name: XPS 13 //\" | xargs echo -n); \\\n\tif [[ \"$$LAPTOP_MODEL_NUMBER\" == \"9300\" ]]; then \\\n\t\tsudo ln -snf \"$(CURDIR)/etc/X11/xorg.conf.d/dell-xps-display-9300\" \"$(LAPTOP_XORG_FILE)\"; \\\n\telse \\\n\t\tsudo ln -snf \"$(CURDIR)/etc/X11/xorg.conf.d/dell-xps-display\" \"$(LAPTOP_XORG_FILE)\"; \\\n\tfi\n\n.PHONY: usr\nusr: ## Installs the usr directory files.\n\tfor file in $(shell find $(CURDIR)/usr -type f -not -name \".*.swp\"); do \\\n\t\tf=$$(echo $$file | sed -e 's|$(CURDIR)||'); \\\n\t\tsudo mkdir -p $$(dirname $$f); \\\n\t\tsudo ln -f $$file $$f; \\\n\tdone\n\n.PHONY: test\ntest: shellcheck ## Runs all the tests on the files in the repository.\n\n# if this session isn't interactive, then we don't want to allocate a\n# TTY, which would fail, but if it is interactive, we do want to attach\n# so that the user can send e.g. ^C through.\nINTERACTIVE := $(shell [ -t 0 ] && echo 1 || echo 0)\nifeq ($(INTERACTIVE), 1)\n\tDOCKER_FLAGS += -t\nendif\n\n.PHONY: shellcheck\nshellcheck: ## Runs the shellcheck tests on the scripts.\n\tdocker run --rm -i $(DOCKER_FLAGS) \\\n\t\t--name df-shellcheck \\\n\t\t-v $(CURDIR):/usr/src:ro \\\n\t\t--workdir /usr/src \\\n\t\tjess/shellcheck ./test.sh\n\n.PHONY: help\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.419921875,
          "content": "# dotfiles\n\n[![make test](https://github.com/jessfraz/dotfiles/workflows/make%20test/badge.svg)](https://github.com/jessfraz/dotfiles/actions?query=workflow%3A%22make+test%22+branch%3Amaster)\n\n**Table of Contents**\n\n<!-- toc -->\n\n- [About](#about)\n  * [Installing](#installing)\n  * [Customizing](#customizing)\n- [Resources](#resources)\n  * [`.vim`](#vim)\n- [Contributing](#contributing)\n  * [Running the tests](#running-the-tests)\n\n<!-- tocstop -->\n\n## About\n\n### Installing\n\n```console\n$ make\n```\n\nThis will create symlinks from this repo to your home folder.\n\n### Customizing\n\nSave env vars, etc in a `.extra` file, that looks something like\nthis:\n\n```bash\n###\n### Git credentials\n###\n\nGIT_AUTHOR_NAME=\"Your Name\"\nGIT_COMMITTER_NAME=\"$GIT_AUTHOR_NAME\"\ngit config --global user.name \"$GIT_AUTHOR_NAME\"\nGIT_AUTHOR_EMAIL=\"email@you.com\"\nGIT_COMMITTER_EMAIL=\"$GIT_AUTHOR_EMAIL\"\ngit config --global user.email \"$GIT_AUTHOR_EMAIL\"\nGH_USER=\"nickname\"\ngit config --global github.user \"$GH_USER\"\n\n###\n### Gmail credentials for mutt\n###\nexport GMAIL=email@you.com\nexport GMAIL_NAME=\"Your Name\"\nexport GMAIL_FROM=from-email@you.com\n```\n\n## Resources\n\n### `.vim`\n\nFor my `.vimrc` and `.vim` dotfiles see\n[github.com/jessfraz/.vim](https://github.com/jessfraz/.vim).\n\n## Contributing\n\n### Running the tests\n\nThe tests use [shellcheck](https://github.com/koalaman/shellcheck). You don't\nneed to install anything. They run in a container.\n\n```console\n$ make test\n```\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "central-park.jpg",
          "type": "blob",
          "size": 8575.044921875,
          "content": ""
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gitignore",
          "type": "blob",
          "size": 1.66015625,
          "content": "##\n# OS X\n##\n.DS_Store\n.AppleDouble\n.LSOverride\nxcuserdata\nPods\nkeyrace-mac.xcworkspace/\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n##\n# Linux\n##\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*<Paste>\n\n##\n# Vim\n##\n# swap\n[._]*.sw[a-z]\n[._]sw[a-z]\n# session\nSession.vim\n# temporary\n.netrwhist\n*~\n# auto-generated tag files\ntags\n\n##\n# C\n##\n# Object files\n*.o\n*.ko\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n\n# depends/gen\n*.gen.c\n*.pic.d\n*.pie.d\n*.o.depends\n\n##\n# C++\n##\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n# Fortran module files\n*.mod\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n##\n# Go\n##\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n_obj\n_test\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\n# python virtual env\n.venv\n\n# linux kernel debs\nlinux-*.deb\n\n.yarnrc.yml\n.yarn/\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.45703125,
          "content": "#!/bin/bash\nset -e\nset -o pipefail\n\nERRORS=()\n\n# find all executables and run `shellcheck`\nfor f in $(find . -type f -not -path '*.git*' -not -name \"yubitouch.sh\" | sort -u); do\n\tif file \"$f\" | grep --quiet shell; then\n\t\t{\n\t\t\tshellcheck \"$f\" && echo \"[OK]: successfully linted $f\"\n\t\t} || {\n\t\t\t# add to errors\n\t\t\tERRORS+=(\"$f\")\n\t\t}\n\tfi\ndone\n\nif [ ${#ERRORS[@]} -eq 0 ]; then\n\techo \"No errors, hooray\"\nelse\n\techo \"These files failed shellcheck: ${ERRORS[*]}\"\n\texit 1\nfi\n"
        },
        {
          "name": "usr",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}