{
  "metadata": {
    "timestamp": 1736568316139,
    "page": 231,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jpetazzo/dind",
      "stars": 2508,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0029296875,
          "content": "*~\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.509765625,
          "content": "FROM ubuntu:14.04\nMAINTAINER jerome.petazzoni@docker.com\n\n# Let's start with some basic stuff.\nRUN apt-get update -qq && apt-get install -qqy \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    lxc \\\n    iptables\n    \n# Install Docker from Docker Inc. repositories.\nRUN curl -sSL https://get.docker.com/ | sh\n\n# Install the magic wrapper.\nADD ./wrapdocker /usr/local/bin/wrapdocker\nRUN chmod +x /usr/local/bin/wrapdocker\n\n# Define additional metadata for our image.\nVOLUME /var/lib/docker\nCMD [\"wrapdocker\"]\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.41796875,
          "content": "# Docker-in-Docker\n\nThis recipe lets you run Docker within Docker.\n\n![Inception's Spinning Top](spintop.jpg)\n\nThere is only one requirement: your Docker version should support the\n`--privileged` flag.\n\n\n## A word of warning\n\nIf you came here because you would like to run a testing system like\nJenkins in a container, and want that container to spin up more containers,\nthen please read this [blog post](\nhttp://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/)\nfirst. Thank you!\n\n\n## Another word of warning\n\nThis work is now obsolete, thanks to the [combined](\nhttps://github.com/docker/docker/pull/15596) [efforts](\nhttps://github.com/docker-library/official-images/blob/master/library/docker)\nof some amazing people like @jfrazelle and @tianon, who also \nare black belts in the art of putting IKEA furniture together.\n\nIf you want to run Docker-in-Docker today, all you need to do is:\n\n```bash\ndocker run --privileged -d docker:dind\n```\n\n... And that's it; you get Docker running in Docker, thanks to\nthe official Docker image, in its \"Docker-in-Docker\" flavor.\nYou can then connect to this Docker instance by starting\nanother Docker container linking to the first one (which is\na pretty amazing thing to do).\n\nFor more details about the `docker:dind` official image,\nexplanations about how to use it, customize it to use\nspecific storage drivers, and other tidbits of useful\nknowledge, check [its documentation on the Docker Hub](\nhttps://hub.docker.com/_/docker/).\n\n\n## If you read past this paragraph ...\n\n... Then you're probably an archaeologist, a masochist, or both.\n\nSeriously, though: the information below is here mostly\nfor historical value, or if you want to understand how those\nthings work under the hood.\n\nYou've been warned!\n\n\n## Quickstart\n\nBuild the image:\n```bash\ndocker build -t dind .\n```\n\nRun Docker-in-Docker and get a shell where you can play, and docker daemon logs\nto stdout:\n```bash\ndocker run --privileged -t -i dind\n```\n\nRun Docker-in-Docker and get a shell where you can play, but docker daemon logs\ninto `/var/log/docker.log`:\n```bash\ndocker run --privileged -t -i -e LOG=file dind\n```\n\nRun Docker-in-Docker and expose the inside Docker to the outside world:\n```bash\ndocker run --privileged -d -p 4444 -e PORT=4444 dind\n```\n\nNote: when started with the `PORT` environment variable, the image will just\nthe Docker daemon and expose it over said port. When started *without* the\n`PORT` environment variable, the image will run the Docker daemon in the\nbackground and execute a shell for you to play.\n\n### Daemon configuration\n\nYou can use the `DOCKER_DAEMON_ARGS` environment variable to configure the\ndocker daemon with any extra options:\n```bash\ndocker run --privileged -d -e DOCKER_DAEMON_ARGS=\"-D\" dind\n```\n\n## It didn't work!\n\nIf you get a weird permission message, check the output of `dmesg`: it could\nbe caused by AppArmor. In that case, try again, adding an extra flag to\nkick AppArmor out of the equation:\n\n```bash\ndocker run --privileged --lxc-conf=\"lxc.aa_profile=unconfined\" -t -i dind\n```\n\nIf you get the warning:\n\n````\nWARNING: the 'devices' cgroup should be in its own hierarchy.\n````\n\nWhen starting up dind, you can get around this by shutting down docker and running:\n\n````\n# /etc/init.d/lxc stop\n# umount /sys/fs/cgroup/\n# mount -t cgroup devices 1 /sys/fs/cgroup\n````\n\nIf the unmount fails, you can find out the proper mount-point with:\n\n````\n$ cat /proc/mounts | grep cgroup\n````\n\n## How It Works\n\nThe main trick is to have the `--privileged` flag. Then, there are a few things\nto care about:\n\n- cgroups pseudo-filesystems have to be mounted, and they have to be mounted\n  with the same hierarchies than the parent environment; this is done by a\n  wrapper script, which is setup to run by default;\n- `/var/lib/docker` cannot be on AUFS, so we make it a volume.\n\nThat's it.\n\n\n## Important Warning About Disk Usage\n\nSince AUFS cannot use an AUFS mount as a branch, it means that we have to\nuse a volume. Therefore, all inner Docker data (images, containers, etc.)\nwill be in the volume. Remember: volumes are not cleaned up when you\n`docker rm`, so if you wonder where did your disk space go after nesting\n10 Dockers within each other, look no further :-)\n\n\n## Which Version Of Docker Does It Run?\n\nOutside: it will use your installed version.\n\nInside: the Dockerfile will retrieve the latest `docker` binary from\nhttps://get.docker.io/; so if you want to include *your* own `docker`\nbuild, you will have to edit it. If you want to always use your local\nversion, you could change the `ADD` line to be e.g.:\n\n    ADD /usr/bin/docker /usr/local/bin/docker\n\n\n## Can I Run Docker-in-Docker-in-Docker?\n\nYes. Note, however, that there seems to be a weird FD leakage issue.\nTo work around it, the `wrapdocker` script carefully closes all the\nfile descriptors inherited from the parent Docker and `lxc-start`\n(except stdio). I'm mentioning this in case you were relying on\nthose inherited file descriptors, or if you're trying to repeat\nthe experiment at home.\n\n[kojiromike/inception](https://github.com/kojiromike/inception) is\na wrapper script that uses dind to nest Docker to arbitrary depth.\n\nAlso, when you will be exiting a nested Docker, this will happen:\n\n```bash\nroot@975423921ac5:/# exit\nroot@6b2ae8bf2f10:/# exit\nroot@419a67dfdf27:/# exit\nroot@bc9f450caf22:/# exit\njpetazzo@tarrasque:~/Work/DOTCLOUD/dind$\n```\n\nAt that point, you should blast Hans Zimmer's [Dream Is Collapsing](\nhttp://www.youtube.com/watch?v=imamcajBEJs) on your loudspeakers while twirling\na spinning top.\n"
        },
        {
          "name": "alpine",
          "type": "tree",
          "content": null
        },
        {
          "name": "archlinux",
          "type": "tree",
          "content": null
        },
        {
          "name": "binary",
          "type": "tree",
          "content": null
        },
        {
          "name": "fedora",
          "type": "tree",
          "content": null
        },
        {
          "name": "opensuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "spintop.jpg",
          "type": "blob",
          "size": 36.4501953125,
          "content": null
        },
        {
          "name": "wrapdocker",
          "type": "blob",
          "size": 3.625,
          "content": "#!/bin/bash\n\n# Ensure that all nodes in /dev/mapper correspond to mapped devices currently loaded by the device-mapper kernel driver\ndmsetup mknodes\n\n# First, make sure that cgroups are mounted correctly.\nCGROUP=/sys/fs/cgroup\n: {LOG:=stdio}\n\n[ -d $CGROUP ] ||\n\tmkdir $CGROUP\n\nmountpoint -q $CGROUP ||\n\tmount -n -t tmpfs -o uid=0,gid=0,mode=0755 cgroup $CGROUP || {\n\t\techo \"Could not make a tmpfs mount. Did you use --privileged?\"\n\t\texit 1\n\t}\n\nif [ -d /sys/kernel/security ] && ! mountpoint -q /sys/kernel/security\nthen\n    mount -t securityfs none /sys/kernel/security || {\n        echo \"Could not mount /sys/kernel/security.\"\n        echo \"AppArmor detection and --privileged mode might break.\"\n    }\nfi\n\n# Mount the cgroup hierarchies exactly as they are in the parent system.\nfor SUBSYS in $(cut -d: -f2 /proc/1/cgroup)\ndo\n        [ -d $CGROUP/$SUBSYS ] || mkdir $CGROUP/$SUBSYS\n        mountpoint -q $CGROUP/$SUBSYS ||\n                mount -n -t cgroup -o $SUBSYS cgroup $CGROUP/$SUBSYS\n\n        # The two following sections address a bug which manifests itself\n        # by a cryptic \"lxc-start: no ns_cgroup option specified\" when\n        # trying to start containers withina container.\n        # The bug seems to appear when the cgroup hierarchies are not\n        # mounted on the exact same directories in the host, and in the\n        # container.\n\n        # Named, control-less cgroups are mounted with \"-o name=foo\"\n        # (and appear as such under /proc/<pid>/cgroup) but are usually\n        # mounted on a directory named \"foo\" (without the \"name=\" prefix).\n        # Systemd and OpenRC (and possibly others) both create such a\n        # cgroup. To avoid the aforementioned bug, we symlink \"foo\" to\n        # \"name=foo\". This shouldn't have any adverse effect.\n        echo $SUBSYS | grep -q ^name= && {\n                NAME=$(echo $SUBSYS | sed s/^name=//)\n                ln -s $SUBSYS $CGROUP/$NAME\n        }\n\n        # Likewise, on at least one system, it has been reported that\n        # systemd would mount the CPU and CPU accounting controllers\n        # (respectively \"cpu\" and \"cpuacct\") with \"-o cpuacct,cpu\"\n        # but on a directory called \"cpu,cpuacct\" (note the inversion\n        # in the order of the groups). This tries to work around it.\n        [ $SUBSYS = cpuacct,cpu ] && ln -s $SUBSYS $CGROUP/cpu,cpuacct\ndone\n\n# Note: as I write those lines, the LXC userland tools cannot setup\n# a \"sub-container\" properly if the \"devices\" cgroup is not in its\n# own hierarchy. Let's detect this and issue a warning.\ngrep -q :devices: /proc/1/cgroup ||\n\techo \"WARNING: the 'devices' cgroup should be in its own hierarchy.\"\ngrep -qw devices /proc/1/cgroup ||\n\techo \"WARNING: it looks like the 'devices' cgroup is not mounted.\"\n\n# Now, close extraneous file descriptors.\npushd /proc/self/fd >/dev/null\nfor FD in *\ndo\n\tcase \"$FD\" in\n\t# Keep stdin/stdout/stderr\n\t[012])\n\t\t;;\n\t# Nuke everything else\n\t*)\n\t\teval exec \"$FD>&-\"\n\t\t;;\n\tesac\ndone\npopd >/dev/null\n\n\n# If a pidfile is still around (for example after a container restart),\n# delete it so that docker can start.\nrm -rf /var/run/docker.pid\n\n# If we were given a PORT environment variable, start as a simple daemon;\n# otherwise, spawn a shell as well\nif [ \"$PORT\" ]\nthen\n\texec dockerd -H 0.0.0.0:$PORT -H unix:///var/run/docker.sock \\\n\t\t$DOCKER_DAEMON_ARGS\nelse\n\tif [ \"$LOG\" == \"file\" ]\n\tthen\n\t\tdockerd $DOCKER_DAEMON_ARGS &>/var/log/docker.log &\n\telse\n\t\tdockerd $DOCKER_DAEMON_ARGS &\n\tfi\n\t(( timeout = 60 + SECONDS ))\n\tuntil docker info >/dev/null 2>&1\n\tdo\n\t\tif (( SECONDS >= timeout )); then\n\t\t\techo 'Timed out trying to connect to internal docker host.' >&2\n\t\t\tbreak\n\t\tfi\n\t\tsleep 1\n\tdone\n\t[[ $1 ]] && exec \"$@\"\n\texec bash --login\nfi\n"
        }
      ]
    }
  ]
}