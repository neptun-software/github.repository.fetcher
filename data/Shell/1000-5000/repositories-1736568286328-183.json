{
  "metadata": {
    "timestamp": 1736568286328,
    "page": 183,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tmux-plugins/tmux-yank",
      "stars": 2755,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3583984375,
          "content": "# EditorConfig: http://EditorConfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.md]\nmax_line_length = 76\nindent_size = 4\ntrim_trailing_whitespace = true\n\n[Vagrantfile]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\n\n\n[{*.sh,*.tmux}]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3125,
          "content": "# The linguist directives are for https://github.com/github/linguist\n\n*.md   text eol=lf whitespace=blank-at-eol\n*.sh   text eol=lf whitespace=blank-at-eol diff=php\n*.tmux text eol=lf whitespace=blank-at-eol diff=php\n\nVagrantfile text eol=lf linguist-vendored\nvideo/* linguist-documentation\n\n# Binary Types\n*.png binary\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".vagrant/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.546875,
          "content": "sudo: required\nlanguage: bash\nservices:\n  - docker\n\nscript:\n- \"./citest\"\n\nnotifications:\n  email: false\n  pushover:\n    on_success: change\n    on_failure: always\n    api_key:\n      secure: gWoqAqGyBbO6mcKbHkt29jJZ7ElOfct2C5WPfliBARl8ImCE0HE6CEGdK25i29mjfIxXWp3HITsRawuauZDN8nCZ9srO+0wr7OWAcZuhDW6mDmKNLX2y4eR4lK21MsMpLIHqA48hYXkHVKSHR7TDG88A/0MRXoTb5gcuPDJMqPk=\n    users:\n      secure: dIUBBbi8R7cOcwBQ8guLsq+M8vBXcSAu9vKUVEqToSHoWap4fTl4QSZpyhzxLy6uSNRwg1u20xVSlEAPee2Z+efzZQtA0I9bRTkcAMbzH65+sWKgMsEMJoHrqlCr7FvX4c+UMW9sWlRLoH52oN3ilCQNy2beI8mWqE4gAGxD4aA=\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.1708984375,
          "content": "Change Log\n==========\n\n[master]\n--------\n\n### Added\n\n-   Mouse support, controlled by `yank_with_mouse` and `yank_selection_mouse`\n    (@keidax)\n\n[v2.3.0] 2018-02-01\n-------------------\n\n### Added\n\n-   Tmux 2.4 support (@docwhat, @edi9999)\n-   Windows Subsystem for Linux (WSL) support via `clip.exe` (@lukewang1024)\n-   \"copy pane current directory\" feature (@bruno-)\n-   `yank_line` and `yank_pane_pwd` fork to prevent xclip from hanging Tmux (@leoalekseyev)\n*   `yank_line` no longer cares if you use emacs or vi in copy-mode.\n\n### Fixed\n\n-   Detect git builds of tmux version ≥ 2.4 (@maximbaz PR#89)\n\n[v2.2.0] 2015-10-12\n-------------------\n\n### Added\n\n-   Support for custom copy command (if `xclip` and others aren't\n    accessible, and you want to have your custom copy command)\n-   Cygwin support via `putclip` command\n\n[v2.1.0] 2015-06-17\n-------------------\n\n### Added\n\n-   Add support for `xsel` on Linux (@ctjhoa)\n-   Support for shell `vi` mode (@xnaveira)\n\n### Updated\n\n-   Make `reattach-to-user-namespace` on OS X optional (@bosr)\n-   Deprecate <kbd>Alt</kbd>–<kbd>y</kbd>\n\n[v2.0.0] 2014-12-06\n-------------------\n\n### Fixed\n\n-   Change copy mode \"put selection\" key binding to <kbd>Y</kbd> so that vi\n    mode <kbd>Control</kbd>–<kbd>y</kbd> is not overridden.\n\n[v1.0.0] 2014-12-06\n-------------------\n\n### Added\n\n-   Show error message if plugin dependencies aren't installed.\n-   Vagrant setup for manually testing Linux.\n\n### Updated\n\n-   `README`\n    -   Related plugin list\n    -   Instructions on updating `xclip` for Linux.\n\n### Removed\n\n-   The screen-cast is moved into `screencast` branch.\n\n[v0.0.4] 2014-07-29\n-------------------\n\n### Updated\n\n-   `README` documentation; including a screen-cast.\n\n[v0.0.3] 2014-06-29\n-------------------\n\n### Added\n\n-   Wait when doing \"yank line\" when using a remote shell (`ssh`, `mosh`) to\n    ensure screen is updated.\n\n### Fixed\n\n-   Handle `yank-line` when used on the last line of buffer: copy multiple\n    lines.\n-   `yank-line` never yanks 'newline' char for multiple-line commands in\n    shell (this is actually tmux/bash bug).\n\n### Updated\n\n-   Code cleanup.\n\n[v0.0.2] 2014-06-25\n-------------------\n\n### Updated\n\n    - `README`\n\n### Added\n\n    - In OS X: Check if `reattach-to-user-namespace` is installed.\n    - \"copy current command line\" feature.\n\n[v0.0.1] 2014-06-24\n-------------------\n\n-   First working version.\n\nNotes\n-----\n\nThis change log is kept in <http://keepachangelog.com/> format.\n\n  [master]: https://github.com/tmux-plugins/tmux-yank/compare/v2.3.0...HEAD\n  [v2.3.0]: https://github.com/tmux-plugins/tmux-yank/compare/v2.2.0...v2.3.0\n  [v2.2.0]: https://github.com/tmux-plugins/tmux-yank/compare/v2.1.0...v2.2.0\n  [v2.1.0]: https://github.com/tmux-plugins/tmux-yank/compare/v2.0.0...v2.1.0\n  [v2.0.0]: https://github.com/tmux-plugins/tmux-yank/compare/v1.0.0...v2.0.0\n  [v1.0.0]: https://github.com/tmux-plugins/tmux-yank/compare/v0.0.4...v1.0.0\n  [v0.0.4]: https://github.com/tmux-plugins/tmux-yank/compare/v0.0.3...v0.0.4\n  [v0.0.3]: https://github.com/tmux-plugins/tmux-yank/compare/v0.0.2...v0.0.3\n  [v0.0.2]: https://github.com/tmux-plugins/tmux-yank/compare/v0.0.1...v0.0.2\n  [v0.0.1]: https://github.com/tmux-plugins/tmux-yank/commits/v0.0.1\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "Copyright (C) 2014, 2017 Bruno Sutic\nCopyright (C) 2017 Christian Höltje\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.576171875,
          "content": "[![Build\nStatus](https://travis-ci.org/tmux-plugins/tmux-yank.svg?branch=master)](https://travis-ci.org/tmux-plugins/tmux-yank)\n[![GitHub\nrelease](https://img.shields.io/github/release/tmux-plugins/tmux-yank.svg)](https://github.com/tmux-plugins/tmux-yank/releases)\n[![GitHub\nissues](https://img.shields.io/github/issues/tmux-plugins/tmux-yank.svg)](https://github.com/tmux-plugins/tmux-yank/issues)\n\ntmux-yank\n=========\n\nCopy to the system clipboard in [`tmux`](https://tmux.github.io/).\n\nSupports:\n\n-   Linux\n-   macOS\n-   Cygwin\n-   Windows Subsystem for Linux (WSL)\n\nInstalling\n----------\n\n### Via TPM (recommended)\n\nThe easiest way to install `tmux-yank` is via the [Tmux Plugin\nManager](https://github.com/tmux-plugins/tpm).\n\n1.  Add plugin to the list of TPM plugins in `.tmux.conf`:\n\n    ``` tmux\n    set -g @plugin 'tmux-plugins/tmux-yank'\n    ```\n\n2.  Use <kbd>prefix</kbd>–<kbd>I</kbd> install `tmux-yank`. You should now\n    be able to `tmux-yank` immediately.\n3.  When you want to update `tmux-yank` use <kbd>prefix</kbd>–<kbd>U</kbd>.\n\n### Manual Installation\n\n1.  Clone the repository\n\n    ``` sh\n    $ git clone https://github.com/tmux-plugins/tmux-yank ~/clone/path\n    ```\n\n2.  Add this line to the bottom of `.tmux.conf`\n\n    ``` tmux\n    run-shell ~/clone/path/yank.tmux\n    ```\n\n3.  Reload the `tmux` environment\n\n    ``` sh\n    # type this inside tmux\n    $ tmux source-file ~/.tmux.conf\n    ```\n\nYou should now be able to use `tmux-yank` immediately.\n\nRequirements\n------------\n\nIn order for `tmux-yank` to work, there must be a program that store data in\nthe system clipboard.\n\n### macOS\n\n-   [`reattach-to-user-namespace`](https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard)\n\n**Note**: Some versions of macOS (aka OS X) have been reported to work\nwithout `reattach-to-user-namespace`. It doesn't hurt to have it installed.\n\n-   OS X 10.8: Mountain Lion – *required*\n-   OS X 10.9: Mavericks – *required*\n-   OS X 10.10: Yosemite – *not required*\n-   OS X 10.11: El Capitan – *not required*\n-   macOS 10.12: Sierra – *required*\n-   macOS 10.14: Mojave - *required*\n-   macOS 10.15: Catalina - *not required*\n\nThe easiest way to use `reattach-to-user-namespace` with `tmux` is use to\nuse the [`tmux-sensible`](https://github.com/tmux-plugins/tmux-sensible)\nplugin.\n\nTo use it manually, use:\n\n``` tmux\n# ~/.tmux.conf\nset-option -g default-command \"reattach-to-user-namespace -l $SHELL\"\n```\n\nIf you have `tmux` 1.5 or newer and are using\n[iTerm2](https://www.iterm2.com/) version 3 or newer then the <kbd>y</kbd>\nin `copy-mode` and mouse selection will work without `tmux-yank`.\n\nTo enable this:\n\n1.  Go into iTerm2's preferences.\n2.  Go to the \"General\" tab.\n3.  Check \"Applications in terminal may access clipboard\"\n4.  In `tmux`, ensure `set-clipboard` is turned on:\n\n    ``` sh\n    $ tmux show-options -g -s set-clipboard\n    set-clipboard on\n    ```\n\n#### [HomeBrew](https://brew.sh/) (recommended)\n\n``` sh\n$ brew install reattach-to-user-namespace\n```\n\n#### MacPorts\n\n``` sh\n$ sudo port install tmux-pasteboard\n```\n\n### Linux\n\n-   `xsel` (recommended) or `xclip` (for X).\n-   `wl-copy` from [wl-clipboard](https://github.com/bugaevc/wl-clipboard) (for Wayland)\n\nIf you have `tmux` 1.5 or newer and are using `xterm`, the <kbd>y</kbd> in\n`copy-mode` and mouse selection will work without `tmux-yank`. See the\n`tmux(1)` man page entry for the `set-clipboard` option.\n\n#### Debian & Ubuntu\n\n``` sh\n$ sudo apt-get install xsel # or xclip\n```\n\n#### RedHat & CentOS\n\n``` sh\n$ sudo yum install xsel # or xclip\n```\n\n### Cygwin\n\n-   (*optional*) `putclip` which is part of the `cygutils-extra` package.\n\n### Windows Subsystem for Linux (WSL)\n\n-   `clip.exe` is shipped with Windows Subsystem for Linux.\n\nConfiguration\n-------------\n\n### Key bindings\n\n-   Normal Mode\n    -   <kbd>prefix</kbd>–<kbd>y</kbd> — copies text from the command line\n        to the clipboard.\n\n        Works with all popular shells/repls. Tested with:\n\n        -   shells: `bash`, `zsh` (with `bindkey -e`), `tcsh`\n        -   repls: `irb`, `pry`, `node`, `psql`, `python`, `php -a`,\n            `coffee`\n        -   remote shells: `ssh`, [mosh](http://mosh.mit.edu/)\n        -   vim/neovim command line (requires\n            [vim-husk](https://github.com/bruno-/vim-husk) or\n            [vim-rsi](https://github.com/tpope/vim-rsi) plugin)\n\n    -   <kbd>prefix</kbd>–<kbd>Y</kbd> — copy the current pane's current\n        working directory to the clipboard.\n\n-   Copy Mode\n    -   <kbd>y</kbd> — copy selection to system clipboard.\n    -   <kbd>Y</kbd> (shift-y) — \"put\" selection. Equivalent to copying a\n        selection, and pasting it to the command line.\n\n\n### Default and Preferred Clipboard Programs\n\ntmux-yank does its best to detect a reasonable choice for a clipboard\nprogram on your OS.\n\nIf tmux-yank can't detect a known clipboard program then it uses the\n`@custom_copy_command` tmux option as your clipboard program if set.\n\nIf you need to always override tmux-yank's choice for a clipboard program,\nthen you can set `@override_copy_command` to force tmux-yank to use whatever\nyou want.\n\nNote that both programs _must_ accept `STDIN` for the text to be copied.\n\nAn example of setting `@override_copy_command`:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @custom_copy_command 'my-clipboard-copy --some-arg'\n# or\nset -g @override_copy_command 'my-clipboard-copy --some-arg'\n```\n\n### Linux Clipboards\n\nLinux has several cut-and-paste clipboards: `primary`, `secondary`, and\n`clipboard` (default in tmux-yank is `clipboard`).\n\nYou can change this by setting `@yank_selection`:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @yank_selection 'primary' # or 'secondary' or 'clipboard'\n```\n\nWith mouse support turned on (see below) the default clipboard for mouse\nselections is `primary`.\n\nYou can change this by setting `@yank_selection_mouse`:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'\n```\n\n### Controlling Yank Behavior\n\nBy default, `tmux-yank` will exit copy mode after yanking text. If you wish to\nremain in copy mode, you can set `@yank_action`:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default\n```\n\n### Mouse Support\n\n`tmux-yank` has mouse support enabled by default. It will only work if `tmux`'s\nbuilt-in mouse support is also enabled (with `mouse on` since `tmux` 2.1, or\n`mode-mouse on` in older versions).\n\nTo yank with the mouse, click and drag with the primary button to begin\nselection, and release to yank.\n\nIf you would prefer to disable this behavior, or provide your own bindings for\nthe `MouseDragEnd1Pane` event, you can do so with:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @yank_with_mouse off # or 'on'\n```\n\nIf you want to remain in copy mode after making a mouse selection, set\n`@yank_action` as described above.\n\n### vi mode support\n\nIf using `tmux` 2.3 or older *and* using vi keys then you'll have add the\nfollowing configuration setting:\n\n``` tmux\n# ~/.tmux.conf\n\nset -g @shell_mode 'vi'\n```\n\nThis isn't needed with `tmux` 2.4 or newer.\n\n### Screen-cast\n\n[![screencast\nscreenshot](/video/screencast_img.png)](https://vimeo.com/102039099)\n\n**Note**: The screen-cast uses <kbd>Control</kbd>–<kbd>y</kbd> for\n\"put selection\". Use <kbd>Y</kbd> in `v2.0.0` and later.\n\n### Other tmux plugins\n\n-   [tmux-copycat](https://github.com/tmux-plugins/tmux-copycat) - a plugin\n    for regular expression searches in tmux and fast match selection\n-   [tmux-open](https://github.com/tmux-plugins/tmux-open) - a plugin for\n    quickly opening highlighted file or a URL\n-   [tmux-continuum](https://github.com/tmux-plugins/tmux-continuum) -\n    automatic restoring and continuous saving of tmux environment.\n\n### License\n\n[MIT](LICENSE.md)\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.275390625,
          "content": "VAGRANTFILE_API_VERSION = '2'\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = 'precise32'\n  config.vm.box_url = 'http://files.vagrantup.com/precise32.box'\n\n  config.vm.provision 'shell', path: 'vagrant_provisioning.sh'\n\n  config.ssh.forward_x11 = true\nend\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0244140625,
          "content": "theme: jekyll-theme-slate"
        },
        {
          "name": "citest",
          "type": "blob",
          "size": 0.4404296875,
          "content": "#!/bin/bash\n\nset -euo pipefail\n\ncd \"$(dirname \"$0\")\"\n\nbash_scripts=(\n    yank.tmux\n    scripts/*.sh\n)\n\nset -x\ndocker run \\\n    --rm \\\n    --volume=\"${PWD}:/mnt:ro\" \\\n    --workdir=\"/mnt\" \\\n    bash:latest \\\n    bash -Dn \"${bash_scripts[@]}\"\n\ndocker run \\\n    --rm \\\n    --volume=\"${PWD}:/mnt:ro\" \\\n    --workdir=\"/mnt\" \\\n    koalaman/shellcheck:stable \\\n    --shell=bash \\\n    --external-sources \\\n    --color=always \\\n    \"${bash_scripts[@]}\"\n\n# EOF\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "vagrant_provisioning.sh",
          "type": "blob",
          "size": 0.3828125,
          "content": "#!/usr/bin/env bash\n\nsudo apt-get update\nsudo apt-get install -y git-core expect vim xclip\nsudo apt-get install -y python-software-properties software-properties-common\n\n# install latest Tmux 1.9a\nsudo add-apt-repository -y ppa:pi-rho/dev\nsudo apt-get update\nsudo apt-get install -y tmux=1.9a-1~ppa1~p\n\n# configure X11 for xclip testing\necho \"export DISPLAY='IP:0.0'\" >>/home/vagrant/.bashrc\n"
        },
        {
          "name": "video",
          "type": "tree",
          "content": null
        },
        {
          "name": "yank.tmux",
          "type": "blob",
          "size": 4.2587890625,
          "content": "#!/usr/bin/env bash\n\nCURRENT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\nSCRIPTS_DIR=\"${CURRENT_DIR}/scripts\"\nHELPERS_DIR=\"${CURRENT_DIR}/scripts\"\n\n# shellcheck source=scripts/helpers.sh\nsource \"${HELPERS_DIR}/helpers.sh\"\n\nclipboard_copy_without_newline_command() {\n    local copy_command=\"$1\"\n    printf \"tr -d '\\\\n' | %s\" \"$copy_command\"\n}\n\nset_error_bindings() {\n    local key_bindings key\n    key_bindings=\"$(yank_key) $(put_key) $(yank_put_key)\"\n    for key in $key_bindings; do\n        if tmux_is_at_least 2.4; then\n            tmux bind-key -T copy-mode-vi \"$key\" send-keys -X copy-pipe-and-cancel \"tmux display-message 'Error! tmux-yank dependencies not installed!'\"\n            tmux bind-key -T copy-mode \"$key\" send-keys -X copy-pipe-and-cancel \"tmux display-message 'Error! tmux-yank dependencies not installed!'\"\n        else\n            tmux bind-key -t vi-copy \"$key\" copy-pipe \"tmux display-message 'Error! tmux-yank dependencies not installed!'\"\n            tmux bind-key -t emacs-copy \"$key\" copy-pipe \"tmux display-message 'Error! tmux-yank dependencies not installed!'\"\n        fi\n    done\n}\n\nerror_handling_if_command_not_present() {\n    local copy_command=\"$1\"\n    if [ -z \"$copy_command\" ]; then\n        set_error_bindings\n        exit 0\n    fi\n}\n\n# `yank_without_newline` binding isn't intended to be used by the user. It is\n# a helper for `copy_line` command.\nset_copy_mode_bindings() {\n    local copy_command=\"$1\"\n    local copy_wo_newline_command\n    copy_wo_newline_command=\"$(clipboard_copy_without_newline_command \"$copy_command\")\"\n    local copy_command_mouse\n    copy_command_mouse=\"$(clipboard_copy_command \"true\")\"\n    if tmux_is_at_least 2.4; then\n        tmux bind-key -T copy-mode-vi \"$(yank_key)\" send-keys -X \"$(yank_action)\" \"$copy_command\"\n        tmux bind-key -T copy-mode-vi \"$(put_key)\" send-keys -X copy-pipe-and-cancel \"tmux paste-buffer -p\"\n        tmux bind-key -T copy-mode-vi \"$(yank_put_key)\" send-keys -X copy-pipe-and-cancel \"$copy_command; tmux paste-buffer -p\"\n        tmux bind-key -T copy-mode-vi \"$(yank_wo_newline_key)\" send-keys -X \"$(yank_action)\" \"$copy_wo_newline_command\"\n        if [[ \"$(yank_with_mouse)\" == \"on\" ]]; then\n            tmux bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X \"$(yank_action)\" \"$copy_command_mouse\"\n        fi\n\n        tmux bind-key -T copy-mode \"$(yank_key)\" send-keys -X \"$(yank_action)\" \"$copy_command\"\n        tmux bind-key -T copy-mode \"$(put_key)\" send-keys -X copy-pipe-and-cancel \"tmux paste-buffer -p\"\n        tmux bind-key -T copy-mode \"$(yank_put_key)\" send-keys -X copy-pipe-and-cancel \"$copy_command; tmux paste-buffer -p\"\n        tmux bind-key -T copy-mode \"$(yank_wo_newline_key)\" send-keys -X \"$(yank_action)\" \"$copy_wo_newline_command\"\n        if [[ \"$(yank_with_mouse)\" == \"on\" ]]; then\n            tmux bind-key -T copy-mode MouseDragEnd1Pane send-keys -X \"$(yank_action)\" \"$copy_command_mouse\"\n        fi\n    else\n        tmux bind-key -t vi-copy \"$(yank_key)\" copy-pipe \"$copy_command\"\n        tmux bind-key -t vi-copy \"$(put_key)\" copy-pipe \"tmux paste-buffer -p\"\n        tmux bind-key -t vi-copy \"$(yank_put_key)\" copy-pipe \"$copy_command; tmux paste-buffer -p\"\n        tmux bind-key -t vi-copy \"$(yank_wo_newline_key)\" copy-pipe \"$copy_wo_newline_command\"\n        if [[ \"$(yank_with_mouse)\" == \"on\" ]]; then\n            tmux bind-key -t vi-copy MouseDragEnd1Pane copy-pipe \"$copy_command_mouse\"\n        fi\n\n        tmux bind-key -t emacs-copy \"$(yank_key)\" copy-pipe \"$copy_command\"\n        tmux bind-key -t emacs-copy \"$(put_key)\" copy-pipe \"tmux paste-buffer -p\"\n        tmux bind-key -t emacs-copy \"$(yank_put_key)\" copy-pipe \"$copy_command; tmux paste-buffer -p\"\n        tmux bind-key -t emacs-copy \"$(yank_wo_newline_key)\" copy-pipe \"$copy_wo_newline_command\"\n        if [[ \"$(yank_with_mouse)\" == \"on\" ]]; then\n            tmux bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe \"$copy_command_mouse\"\n        fi\n    fi\n}\n\nset_normal_bindings() {\n    tmux bind-key \"$(yank_line_key)\" run-shell -b \"$SCRIPTS_DIR/copy_line.sh\"\n    tmux bind-key \"$(yank_pane_pwd_key)\" run-shell -b \"$SCRIPTS_DIR/copy_pane_pwd.sh\"\n}\n\nmain() {\n    local copy_command\n    copy_command=\"$(clipboard_copy_command)\"\n    error_handling_if_command_not_present \"$copy_command\"\n    set_copy_mode_bindings \"$copy_command\"\n    set_normal_bindings\n}\nmain\n"
        }
      ]
    }
  ]
}