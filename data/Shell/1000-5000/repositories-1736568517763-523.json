{
  "metadata": {
    "timestamp": 1736568517763,
    "page": 523,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyOQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lxqt/lxqt",
      "stars": 1665,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.015625,
          "content": "build\nnbproject\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 2.8720703125,
          "content": "[submodule \"libfm\"]\n\tpath = libfm\n\turl = ../../lxde/libfm.git\n\tbranch = master\n[submodule \"menu-cache\"]\n\tpath = menu-cache\n\turl = ../../lxde/menu-cache.git\n\tbranch = master\n[submodule \"liblxqt\"]\n\tpath = liblxqt\n\turl = ../liblxqt.git\n\tbranch = master\n[submodule \"libqtxdg\"]\n\tpath = libqtxdg\n\turl = ../libqtxdg.git\n\tbranch = master\n[submodule \"lxqt-about\"]\n\tpath = lxqt-about\n\turl = ../lxqt-about.git\n\tbranch = master\n[submodule \"lxqt-powermanagement\"]\n\tpath = lxqt-powermanagement\n\turl = ../lxqt-powermanagement.git\n\tbranch = master\n[submodule \"pcmanfm-qt\"]\n\tpath = pcmanfm-qt\n\turl = ../pcmanfm-qt.git\n\tbranch = master\n[submodule \"libsysstat\"]\n\tpath = libsysstat\n\turl = ../libsysstat.git\n\tbranch = master\n[submodule \"lxqt-runner\"]\n\tpath = lxqt-runner\n\turl = ../lxqt-runner.git\n\tbranch = master\n[submodule \"lxqt-policykit\"]\n\tpath = lxqt-policykit\n\turl = ../lxqt-policykit.git\n\tbranch = master\n[submodule \"lxqt-panel\"]\n\tpath = lxqt-panel\n\turl = ../lxqt-panel.git\n\tbranch = master\n[submodule \"lxqt-openssh-askpass\"]\n\tpath = lxqt-openssh-askpass\n\turl = ../lxqt-openssh-askpass.git\n\tbranch = master\n[submodule \"lxqt-notificationd\"]\n\tpath = lxqt-notificationd\n\turl = ../lxqt-notificationd.git\n\tbranch = master\n[submodule \"lxqt-config\"]\n\tpath = lxqt-config\n\turl = ../lxqt-config.git\n\tbranch = master\n[submodule \"obconf-qt\"]\n\tpath = obconf-qt\n\turl = ../obconf-qt.git\n\tbranch = master\n[submodule \"lximage-qt\"]\n\tpath = lximage-qt\n\turl = ../lximage-qt.git\n\tbranch = master\n[submodule \"lxqt-globalkeys\"]\n\tpath = lxqt-globalkeys\n\turl = ../lxqt-globalkeys.git\n\tbranch = master\n[submodule \"lxqt-menu-data\"]\n\tpath = lxqt-menu-data\n\turl = ../lxqt-menu-data\n\tbranch = master\n[submodule \"lxqt-qtplugin\"]\n\tpath = lxqt-qtplugin\n\turl = ../lxqt-qtplugin.git\n\tbranch = master\n[submodule \"lxqt-session\"]\n\tpath = lxqt-session\n\turl = ../lxqt-session.git\n[submodule \"lxqt-admin\"]\n\tpath = lxqt-admin\n\turl = ../lxqt-admin.git\n[submodule \"lxqt-sudo\"]\n\tpath = lxqt-sudo\n\turl = ../lxqt-sudo\n[submodule \"libfm-qt\"]\n\tpath = libfm-qt\n\turl = ../libfm-qt\n\tbranch = master\n[submodule \"pavucontrol-qt\"]\n\tpath = pavucontrol-qt\n\turl = ../pavucontrol-qt\n[submodule \"qtermwidget\"]\n\tpath = qtermwidget\n\turl = ../qtermwidget\n[submodule \"qterminal\"]\n\tpath = qterminal\n\turl = ../qterminal\n[submodule \"lxqt-build-tools\"]\n\tpath = lxqt-build-tools\n\turl = ../lxqt-build-tools\n[submodule \"lxqt-themes\"]\n\tpath = lxqt-themes\n\turl = ../lxqt-themes\n[submodule \"lxqt-archiver\"]\n\tpath = lxqt-archiver\n\turl = ../lxqt-archiver\n[submodule \"qps\"]\n\tpath = qps\n\turl = ../qps\n[submodule \"screengrab\"]\n\tpath = screengrab\n\turl = ../screengrab\n[submodule \"qtxdg-tools\"]\n\tpath = qtxdg-tools\n\turl = ../qtxdg-tools\n[submodule \"xdg-desktop-portal-lxqt\"]\n\tpath = xdg-desktop-portal-lxqt\n\turl = ../xdg-desktop-portal-lxqt\n\tbranch = master\n[submodule \"libdbusmenu-lxqt\"]\n\tpath = libdbusmenu-lxqt\n\turl = ../libdbusmenu-lxqt\n[submodule \"lxqt-wayland-session\"]\n\tpath = lxqt-wayland-session\n\turl = ../lxqt-wayland-session\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 2.2216796875,
          "content": "cmake_minimum_required(VERSION 3.0.2 FATAL_ERROR)\nproject(LXQt)\n\nmessage(STATUS \"Building in SuperBuild mode. Builds all non optional LXQt CMake projects at\\n once. Autotools/Automake based projects not yet supported.\")\nif (NOT DEFINED CMAKE_PREFIX_PATH AND NOT DEFINED ENV{CMAKE_PREFIX_PATH})\n    message(FATAL_ERROR \"CMAKE_PREFIX_PATH environment variable not set. When configuring for the first time, make sure CMAKE_PREFIX_PATH is set to the root of the build directory. It can be done by passing it to cmake as an command line parameter (e.g. cmake -DCMAKE_PREFIX_PATH=path_to_your_build_dir ..) OR by setting the CMAKE_PREFIX_PATH environment variable (e.g. export CMAKE_PREFIX_PATH=path_to_your_build_dir ..).\")\nendif()\n\noption(UPDATE_TRANSLATIONS \"Update source translation translations/*.ts files\" OFF)\n\noption(LXQT_BUILD_OBCONF_QT \"Build OBConfQt\" Yes)\noption(LXQT_BUILD_QTERMWIDGET \"Build QTermWidget\" Yes)\noption(LXQT_BUILD_QTERMINAL \"Build QTerminal\" Yes)\noption(LXQT_BUILD_LXIMAGE_QT \"Build LXImageQt\" Yes)\noption(LXQT_BUILD_QPS \"Build QPS\" Yes)\noption(LXQT_BUILD_SCREENGRAB \"Build ScreenGrab\" Yes)\n\nadd_subdirectory(lxqt-build-tools)\nadd_subdirectory(lxqt-menu-data)\nadd_subdirectory(libqtxdg)\nadd_subdirectory(liblxqt)\nadd_subdirectory(libsysstat)\nadd_subdirectory(libfm-qt)\nadd_subdirectory(lxqt-themes)\nadd_subdirectory(lxqt-session)\nadd_subdirectory(lxqt-qtplugin)\nadd_subdirectory(lxqt-globalkeys)\nadd_subdirectory(lxqt-notificationd)\nadd_subdirectory(lxqt-about)\nadd_subdirectory(lxqt-config)\nadd_subdirectory(lxqt-admin)\nadd_subdirectory(lxqt-openssh-askpass)\nadd_subdirectory(lxqt-panel)\nadd_subdirectory(lxqt-policykit)\nadd_subdirectory(lxqt-powermanagement)\nadd_subdirectory(lxqt-runner)\nadd_subdirectory(pcmanfm-qt)\nadd_subdirectory(lxqt-sudo)\nadd_subdirectory(pavucontrol-qt)\nadd_subdirectory(lxqt-archiver)\nadd_subdirectory(xdg-desktop-portal-lxqt)\n\nif (LXQT_BUILD_OBCONF_QT)\n    add_subdirectory(obconf-qt)\nendif()\n\nif (LXQT_BUILD_QTERMWIDGET)\n    add_subdirectory(qtermwidget)\nendif()\n\nif (LXQT_BUILD_QTERMINAL)\n    add_subdirectory(qterminal)\nendif()\n\nif (LXQT_BUILD_LXIMAGE_QT)\n    add_subdirectory(lximage-qt)\nendif()\n\nif (LXQT_BUILD_QPS)\n    add_subdirectory(qps)\nendif()\n\nif (LXQT_BUILD_SCREENGRAB)\n    add_subdirectory(screengrab)\nendif()\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 0.0146484375,
          "content": "CONTRIBUTING.md"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.26171875,
          "content": "Contributing to LXQt\n====================\n\nThe LXQt team is always looking for contributors. Everyone is welcome to join,\nwhether they are a developer, translator or user.\n\n\nCode contributions\n------------------\n\nLXQt uses Git as a version control system. All our code is available online (https://github.com/lxqt).\nPull Requests directly from Github are accepted.\n\nFor more information on git, see the official website:\n  https://git-scm.com/\n\nPlease make sure you adhere to the project's styleguide when proposing changes.\n\nA more in-depth document for aspiring contributors is located on the LXQt wiki:\n  https://github.com/lxqt/lxqt/wiki/Contributing-code\n\nAlso see Github's guide on Contributing to Open Source:\n  https://guides.github.com/activities/contributing-to-open-source/\n\n\nTranslations\n------------\n\nWe use [Weblate](https://translate.lxqt-project.org) for all our translations. \nQtLinguist will still work.\n\nSee further instructions in [wiki page Translation](https://github.com/lxqt/lxqt/wiki/Translation).\n\n\n\nBug reports\n-----------\n\nAll our issues are tracked on Github.\nPlease file all general LXQt bug reports on the general LXQt bug tracker:\n  https://github.com/lxqt/lxqt/issues.\n\nSome components and independent apps have their own issue tracker on GitHub:\n* components: libqtxdg (https://github.com/lxqt/libqtxdg/issues),\n  libsysstat (https://github.com/lxqt/libsysstat/issues),\n  menu-cache (https://github.com/lxde/menu-cache/issues)\n* GUI tools, applications:\n  ObConf-Qt (https://github.com/lxqt/obconf-qt/issues),\n  PCManFM-Qt (https://github.com/lxqt/pcmanfm-qt/issues),\n  LXImage-Qt (https://github.com/lxqt/lximage-qt/issues)\n* web site lxqt-project.org (https://github.com/lxqt/lxqt.github.io/issues)\n\n\nFinancial contributions\n-----------------------\n\nPlease consider financial donations towards LXQt. Those are necessary for running our server and related infrastructure.\n\nSee [the OpenCollective page](https://opencollective.com/lxqt) for more information.\n\n\nOther\n-----\n\nFor anything else, you can always drop by our Discussions and say hello!\n  https://github.com/lxqt/lxqt/discussions. \n\nIf you prefer messengers (all bridged except #lxqt-dev):\n* Channels #lxqt and #lxqt-dev on irc.oftc.net\n* Matrix: https://matrix.to/#/#lxqt:matrix.org\n* Telegram: https://t.me/lxqtofficial\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.01171875,
          "content": "## LXQt\n\nLXQt is the next generation of LXDE, the Lightweight Desktop Environment. It is the product of the\nmerge between Razor-qt and LXDE-Qt.\n\n\n## About this repository\nThis is a superproject which contains all LXQt components.\nAfter checking out this repo please do the following to initialize git submodules.\n\n    git submodule init\n    git submodule update --remote --rebase\n\nNote: We require git >= 1.8.5\n\n## Contributing\n\nIf you are interested in helping or joining LXQt, please take a look at our\n[CONTRIBUTING document](https://github.com/lxqt/lxqt/blob/master/CONTRIBUTING.md)\n\n\n## Translation\n\nTranslations can be done in <a href=\"https://translate.lxqt-project.org/\">LXQt-Weblate</a>.\n\n<a href=\"https://translate.lxqt-project.org/\">\n<img src=\"https://translate.lxqt-project.org/widgets/lxqt-desktop/-/287x66-grey.png\" alt=\"Translation status\" />\n</a>  \n\n--- \n\n<a href=\"https://translate.lxqt-project.org/\">\n<img src=\"https://translate.lxqt-project.org/widgets/lxqt-desktop/-/multi-auto.svg\" alt=\"Translation status\" />\n</a>\n"
        },
        {
          "name": "build_all.sh",
          "type": "blob",
          "size": 0.466796875,
          "content": "#!/bin/sh\n\n# various options for cmake based builds:\n# CMAKE_BUILD_TYPE can specify a build (debug|release|...) build type\n# LIB_SUFFIX can set the ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}\n#     useful fro 64 bit distros\n# LXQT_PREFIX changes default /usr/local prefix\n#\n# example:\n# $ LIB_SUFFIX=64 ./build_all.sh\n# or\n# $ CMAKE_BUILD_TYPE=debug CMAKE_GENERATOR=Ninja CC=clang CXX=clang++ ./build_all.sh\n# etc.\n\n./build_all_autotools_projects.sh\n\n./build_all_cmake_projects.sh\n"
        },
        {
          "name": "build_all_autotools_projects.sh",
          "type": "blob",
          "size": 1.5810546875,
          "content": "#!/bin/sh\n\n# various options for cmake based builds:\n# CMAKE_BUILD_TYPE can specify a build (debug|release|...) build type\n# LIB_SUFFIX can set the ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}\n#     useful fro 64 bit distros\n# LXQT_PREFIX changes default /usr/local prefix\n# LXQT_JOB_NUM Number of jobs to run in parallel while building. Defaults to\n#   whatever nproc returns.\n#\n# example:\n# $ LIB_SUFFIX=64 ./build_all.sh\n# or\n# $ CMAKE_BUILD_TYPE=debug CMAKE_GENERATOR=Ninja CC=clang CXX=clang++ ./build_all.sh\n# etc.\n\nif [ -n \"$LXQT_JOB_NUM\" ]; then\n    JOB_NUM=\"$LXQT_JOB_NUM\"\nelif which nproc > /dev/null; then\n    # detect processor numbers (Linux only)\n    JOB_NUM=`nproc`\nelse\n    # assume default job number of 1 (non-Linux systems)\n    JOB_NUM=1\nfi\necho \"Make job number: $JOB_NUM\"\n\nif env | grep -q ^LXQT_PREFIX= ; then\n\tPREF=\"--prefix=$LXQT_PREFIX\"\nelse\n\tPREF=\"\"\nfi\n\n# autotools-based projects\n\n# build libfm-extras\necho\necho\necho \"Building: libfm extras into ${PREF:-<default>}\"\necho\ncd \"libfm\"\n(./autogen.sh $PREF --enable-debug --without-gtk --disable-demo && ./configure $PREF --with-extra-only && make -j$JOB_NUM && sudo make install) || exit 1\ncd ..\n\n\nAUTOMAKE_REPOS=\" \\\n\tmenu-cache\"\n\n\nfor d in $AUTOMAKE_REPOS\ndo\n\techo \"\\n\\nBuilding: $d into ${PREF:-<default>}\\n\"\n\tcd \"$d\"\n\t(./autogen.sh && ./configure $PREF && make -j$JOB_NUM && sudo make install) || exit 1\n\tcd ..\ndone\n\n\n# build libfm\necho\necho\necho \"Building: libfm into ${PREF:-<default>}\"\necho\ncd \"libfm\"\n(./autogen.sh $PREF --enable-debug --without-gtk --disable-demo && ./configure $PREF && make -j$JOB_NUM && sudo make install) || exit 1\ncd ..\n"
        },
        {
          "name": "build_all_cmake_projects.sh",
          "type": "blob",
          "size": 2.341796875,
          "content": "#!/bin/sh\n\n# various options for cmake based builds:\n# CMAKE_BUILD_TYPE can specify a build (debug|release|...) build type\n# LIB_SUFFIX can set the ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}\n#     useful for 64 bit distros\n# LXQT_PREFIX changes default /usr/local prefix\n# LXQT_JOB_NUM Number of jobs to run in parallel while building. Defauts to\n#   whatever nproc returns.\n# DO_BUILD flag if components should be built (default 1)\n# DO_INSTALL flag if components should be installed (default 1)\n# DO_INSTALL_ROOT flag if rights should be elevated during install (default 1)\n#\n# example:\n# $ LIB_SUFFIX=64 ./build_all.sh\n# or\n# $ CMAKE_BUILD_TYPE=debug CMAKE_GENERATOR=Ninja CC=clang CXX=clang++ DO_INSTALL=0 ./build_all_cmake_projects.sh\n# etc.\n\n. ./cmake_repos.list\n\nif [ -n \"$LXQT_JOB_NUM\" ]; then\n    JOB_NUM=\"$LXQT_JOB_NUM\"\nelif which nproc > /dev/null; then\n    # detect processor numbers (Linux only)\n    JOB_NUM=`nproc`\nelse\n    # assume default job number of 1 (non-Linux systems)\n    JOB_NUM=1\nfi\necho \"Make job number: $JOB_NUM\"\n\nif [ -n \"$CMAKE_BUILD_TYPE\" ]; then\n\tCMAKE_BUILD_TYPE=\"-DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE\"\nelse\n\tCMAKE_BUILD_TYPE=\"-DCMAKE_BUILD_TYPE=debug\"\nfi\n\nif [ -n \"$LXQT_PREFIX\" ]; then\n\tCMAKE_INSTALL_PREFIX=\"-DCMAKE_INSTALL_PREFIX=$LXQT_PREFIX\"\nelse\n\tCMAKE_INSTALL_PREFIX=\"\"\nfi\n\nif [ -n  \"$CMAKE_GENERATOR\" ]; then\n\t#echo \"x$CMAKE_GENERATOR\"\n\tif [ \"$CMAKE_GENERATOR\" = \"Ninja\" ]; then\n\t\tCMAKE_MAKE_PROGRAM=\"ninja\"\n\t\tCMAKE_GENERATOR=\"-G $CMAKE_GENERATOR -DCMAKE_MAKE_PROGRAM=$CMAKE_MAKE_PROGRAM\"\n\tfi\nfi\n\n[ -n \"$CMAKE_MAKE_PROGRAM\" ] || CMAKE_MAKE_PROGRAM=\"make\"\n\nif [ -n \"$LIB_SUFFIX\" ]; then\n\tCMAKE_LIB_SUFFIX=\"-DLIB_SUFFIX=$LIB_SUFFIX\"\nelse\n\tCMAKE_LIB_SUFFIX=\"\"\nfi\n\n[ -n \"$DO_BUILD\" ] || DO_BUILD=1\n\n[ -n \"$DO_INSTALL\" ] || DO_INSTALL=1\n\n[ -n \"$DO_INSTALL_ROOT\" ] || DO_INSTALL_ROOT=1\n\n\nALL_CMAKE_FLAGS=\"$CMAKE_BUILD_TYPE $CMAKE_INSTALL_PREFIX $CMAKE_LIB_SUFFIX $CMAKE_GENERATOR\"\n\nfor d in $CMAKE_REPOS $OPTIONAL_CMAKE_REPOS\ndo\n\techo \"\\n\\nBuilding: $d using externally specified options: $ALL_CMAKE_FLAGS\\n\"\n\tmkdir -p \"$d/build\" \\\n\t\t&& cd \"$d/build\" \\\n\t\t|| exit 1\n\tif [ \"$DO_BUILD\" = 1 ]; then\n\t\tcmake $ALL_CMAKE_FLAGS .. && \"$CMAKE_MAKE_PROGRAM\" -j$JOB_NUM || exit 1\n\tfi\n\tif [ \"$DO_INSTALL\" = 1 ]; then\n\t\tif [ \"$DO_INSTALL_ROOT\" = 1 ]; then\n\t\t\tsudo \"$CMAKE_MAKE_PROGRAM\" install || exit 1\n\t\telse\n\t\t\t\"$CMAKE_MAKE_PROGRAM\" install || exit 1\n\t\tfi\n\tfi\n\tcd ../..\ndone\n"
        },
        {
          "name": "clean_all_cmake_projects.sh",
          "type": "blob",
          "size": 0.12890625,
          "content": "#!/bin/sh\n\n. ./cmake_repos.list\n\nfor d in ${CMAKE_REPOS} ${OPTIONAL_CMAKE_REPOS}\ndo\n\techo \"removing $d/build\"\n\trm -rf $d/build\ndone\n"
        },
        {
          "name": "cmake_repos.list",
          "type": "blob",
          "size": 0.5712890625,
          "content": "CMAKE_REPOS=\" \\\n\tlxqt-build-tools \\\n\tlibqtxdg \\\n\tqtxdg-tools \\\n\tliblxqt \\\n\tlibdbusmenu-lxqt \\\n\tlibsysstat \\\n\tlxqt-menu-data \\\n\tlibfm-qt \\\n\tlxqt-themes \\\n\tpavucontrol-qt \\\n\tlxqt-about \\\n\tlxqt-admin \\\n\tlxqt-config \\\n\tlxqt-globalkeys \\\n\tlxqt-notificationd \\\n\tlxqt-openssh-askpass \\\n\tlxqt-policykit \\\n\tlxqt-powermanagement \\\n\tlxqt-qtplugin \\\n\tlxqt-session \\\n\tlxqt-sudo \\\n\tpcmanfm-qt \\\n\tlxqt-panel \\\n\tlxqt-runner \\\n\tlxqt-archiver \\\n\tlxqt-wayland-session \\\n\txdg-desktop-portal-lxqt\"\n\nOPTIONAL_CMAKE_REPOS=\" \\\n\tobconf-qt \\\n\tlximage-qt \\\n\tqtermwidget \\\n\tqterminal \\\n        qps \\\n\tscreengrab\"\n"
        },
        {
          "name": "libdbusmenu-lxqt",
          "type": "commit",
          "content": null
        },
        {
          "name": "libfm",
          "type": "commit",
          "content": null
        },
        {
          "name": "libfm-qt",
          "type": "commit",
          "content": null
        },
        {
          "name": "liblxqt",
          "type": "commit",
          "content": null
        },
        {
          "name": "libqtxdg",
          "type": "commit",
          "content": null
        },
        {
          "name": "libsysstat",
          "type": "commit",
          "content": null
        },
        {
          "name": "lximage-qt",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-about",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-admin",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-archiver",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-build-tools",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-config",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-globalkeys",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-menu-data",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-notificationd",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-openssh-askpass",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-panel",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-policykit",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-powermanagement",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-qtplugin",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-runner",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-session",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-sudo",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-themes",
          "type": "commit",
          "content": null
        },
        {
          "name": "lxqt-wayland-session",
          "type": "commit",
          "content": null
        },
        {
          "name": "menu-cache",
          "type": "commit",
          "content": null
        },
        {
          "name": "obconf-qt",
          "type": "commit",
          "content": null
        },
        {
          "name": "pavucontrol-qt",
          "type": "commit",
          "content": null
        },
        {
          "name": "pcmanfm-qt",
          "type": "commit",
          "content": null
        },
        {
          "name": "qps",
          "type": "commit",
          "content": null
        },
        {
          "name": "qterminal",
          "type": "commit",
          "content": null
        },
        {
          "name": "qtermwidget",
          "type": "commit",
          "content": null
        },
        {
          "name": "qtxdg-tools",
          "type": "commit",
          "content": null
        },
        {
          "name": "screengrab",
          "type": "commit",
          "content": null
        },
        {
          "name": "uninstall_all_cmake_projects.sh",
          "type": "blob",
          "size": 0.4580078125,
          "content": "#!/bin/sh\n\nINSTALL_MANIFEST=\"install_manifest.txt\"\n\n. ./cmake_repos.list\n\nfor d in ${CMAKE_REPOS} ${OPTIONAL_CMAKE_REPOS}\ndo\n    INSTALL_MANIFEST_FULL_PATH=\"${d}/build/${INSTALL_MANIFEST}\"\n    if [ -f \"${INSTALL_MANIFEST_FULL_PATH}\" ]\n    then\n        echo \"Uninstalling component ${d} ,,,\"\n        xargs rm -f < \"${INSTALL_MANIFEST_FULL_PATH}\" || exit $?\n    else\n        echo \"${d}: ${INSTALL_MANIFEST} not found, component probably wasn't installed\" >&2\n    fi\ndone\n"
        },
        {
          "name": "xdg-desktop-portal-lxqt",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}