{
  "metadata": {
    "timestamp": 1736568504273,
    "page": 497,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5OQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ChimeraOS/chimeraos",
      "stars": 1718,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0693359375,
          "content": "*.SRCINFO\n*.img.tar.xz\n*.img\n.cache/*\noutput/*\nrootfs/etc/makepkg.conf\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.171875,
          "content": "FROM greyltc/archlinux-aur:latest\nLABEL contributor=\"shadowapex@gmail.com\"\nCOPY rootfs/etc/pacman.conf /etc/pacman.conf\nRUN echo -e \"keyserver-options auto-key-retrieve\" >> /etc/pacman.d/gnupg/gpg.conf && \\\n  # Cannot check space in chroot\n  sed -i '/CheckSpace/s/^/#/g' /etc/pacman.conf && \\\n  pacman-key --init && \\\n  pacman --noconfirm -Syyuu && \\\n  pacman --noconfirm -S \\\n  arch-install-scripts \\\n  btrfs-progs \\\n  fmt \\\n  xcb-util-wm \\\n  wget \\\n  pyalpm \\\n  python \\\n  python-build \\\n  python-flit-core \\\n  python-installer \\\n  python-hatchling \\\n  python-markdown-it-py \\\n  python-setuptools \\\n  python-wheel \\\n  sudo \\\n  && \\\n  pacman --noconfirm -S --needed git && \\\n  echo \"%wheel ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n  useradd build -G wheel -m && \\\n  su - build -c \"git clone https://aur.archlinux.org/pikaur.git /tmp/pikaur\" && \\\n  su - build -c \"cd /tmp/pikaur && makepkg -f\" && \\\n  pacman --noconfirm -U /tmp/pikaur/pikaur-*.pkg.tar.zst\n\n# Auto add PGP keys for users\nRUN mkdir -p /etc/gnupg/ && echo -e \"keyserver-options auto-key-retrieve\" >> /etc/gnupg/gpg.conf\n\n# Add a fake systemd-run script to workaround pikaur requirement.\nRUN echo -e \"#!/bin/bash\\nif [[ \\\"$1\\\" == \\\"--version\\\" ]]; then echo 'fake 244 version'; fi\\nmkdir -p /var/cache/pikaur\\n\" >> /usr/bin/systemd-run && \\\n  chmod +x /usr/bin/systemd-run\n\n# substitute check with !check to avoid running software from AUR in the build machine\n# also remove creation of debug packages.\nRUN sed -i '/BUILDENV/s/check/!check/g' /etc/makepkg.conf && \\\n  sed -i '/OPTIONS/s/debug/!debug/g' /etc/makepkg.conf\n\nCOPY manifest /manifest\n# Freeze packages and overwrite with overrides when needed\nRUN source /manifest && \\\n  echo \"Server=https://archive.archlinux.org/repos/${ARCHIVE_DATE}/\\$repo/os/\\$arch\" > /etc/pacman.d/mirrorlist && \\\n  pacman --noconfirm -Syyuu; if [ -n \"${PACKAGE_OVERRIDES}\" ]; then wget --directory-prefix=/tmp/extra_pkgs ${PACKAGE_OVERRIDES}; pacman --noconfirm -U --overwrite '*' /tmp/extra_pkgs/*; rm -rf /tmp/extra_pkgs; fi\n\nUSER build\nENV BUILD_USER \"build\"\nENV GNUPGHOME  \"/etc/pacman.d/gnupg\"\n# Built image will be moved here. This should be a host mount to get the output.\nENV OUTPUT_DIR /output\n\nWORKDIR /workdir\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0810546875,
          "content": "MIT License\n\nCopyright (c) 2019 Alesh Slovak, Wouter Wijsman, Thomas Wilhelm-Stein\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.spdx",
          "type": "blob",
          "size": 1.9814453125,
          "content": "SPDXVersion: SPDX-2.1\nDataLicense: CC0-1.0\nDataFormat: SPDXRef-1\nSPDXID: SPDXRef-DOCUMENT\nDocumentName: ChimeraOS\nDocumentNamespace: http://spdx.org/spdxdocs/chimeraos-2024\nCreator: Person: D.A.Pelasgus \nCreated: 2024-10-02T12:00:00Z\nLicenseListVersion: 3.9\n\n##### Package Information #####\nPackageName: ChimeraOS\nSPDXID: SPDXRef-Package\nPackageVersion: 1.0.0\nPackageFileName: ChimeraOS\nPackageSupplier: Organization: ChimeraOS\nPackageOriginator: Organization: ChimeraOS\nPackageDownloadLocation: https://chimeraos.org/download\nPackageLicenseConcluded: MIT\nPackageLicenseDeclared: MIT\nPackageCopyrightText: Copyright (c) 2024 ChimeraOS\n\n##### License Information #####\nLicenseID: MIT\nLicenseName: MIT License\nExtractedText: |\n    MIT License\n    \n\tCopyright (c) 2019 Alesh Slovak, Wouter Wijsman, Thomas Wilhelm-Stein\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\nLicenseCrossReference: https://opensource.org/licenses/MIT\nLicenseComment: This is the standard MIT License used by ChimeraOS.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.189453125,
          "content": "<!--Author: D.A.Pelasgus-->\n<p align=\"center\"><img src=\"assets/logo.svg\" alt=\"ChimeraOS\" style=\"width: 150px;\" /></p>\n\n[![status](https://img.shields.io/badge/status-stable-%23961937.svg?style=for-the-badge)](https://github.com/chimeraos/install-media/releases/latest)\n[![License](https://img.shields.io/badge/License-MIT-%23961937.svg?style=for-the-badge)](https://github.com/ChimeraOS/chimeraos/blob/master/LICENSE)\n[![Chat Server](https://img.shields.io/badge/chat-discord-%23961937.svg?style=for-the-badge)](https://discord.gg/fKsUbrt)\n[![website](https://img.shields.io/badge/website-chimeraos.org-%23961937.svg?style=for-the-badge)](https://chimeraos.org)\n[![Made with Love](https://img.shields.io/badge/made_with-❤-%23961937.svg?style=for-the-badge)](https://chimeraos.org)\n\nBringing the console experience to pc.\n\n> [!CAUTION]\n> DO NOT DOWNLOAD DIRECTLY FROM THE RELEASES PAGE.\n> THIS IS NOT INSTALLATION MEDIA.\n\n> [!IMPORTANT]\n> To download use the following link:\n> [ChimeraOS website](https://chimeraos.org)\n\n> [!NOTE]\n> Instantly turn any PC into a gaming console.\n> \n> Thousands of games, dozens of platforms.\n> \n> Fully controller compatible interface.\n> \n> Automatic updates that stay out of the way.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "aur-pkgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-image.sh",
          "type": "blob",
          "size": 8.2607421875,
          "content": "#! /bin/bash\n\nset -e\nset -x\n\nif [ $EUID -ne 0 ]; then\n\techo \"$(basename $0) must be run as root\"\n\texit 1\nfi\n\nBUILD_USER=${BUILD_USER:-}\nOUTPUT_DIR=${OUTPUT_DIR:-}\n\n\nsource manifest\n\nif [ -z \"${SYSTEM_NAME}\" ]; then\n  echo \"SYSTEM_NAME must be specified\"\n  exit\nfi\n\nif [ -z \"${VERSION}\" ]; then\n  echo \"VERSION must be specified\"\n  exit\nfi\n\nDISPLAY_VERSION=${VERSION}\nLSB_VERSION=${VERSION}\nVERSION_NUMBER=${VERSION}\n\nif [ -n \"$1\" ]; then\n\tDISPLAY_VERSION=\"${VERSION} (${1})\"\n\tVERSION=\"${VERSION}_${1}\"\n\tLSB_VERSION=\"${LSB_VERSION}　(${1})\"\n\tBUILD_ID=\"${1}\"\nfi\n\nMOUNT_PATH=/tmp/${SYSTEM_NAME}-build\nBUILD_PATH=${MOUNT_PATH}/subvolume\nSNAP_PATH=${MOUNT_PATH}/${SYSTEM_NAME}-${VERSION}\nBUILD_IMG=/output/${SYSTEM_NAME}-build.img\n\nmkdir -p ${MOUNT_PATH}\n\nfallocate -l ${SIZE} ${BUILD_IMG}\nmkfs.btrfs -f ${BUILD_IMG}\nmount -t btrfs -o loop,compress-force=zstd:15 ${BUILD_IMG} ${MOUNT_PATH}\nbtrfs subvolume create ${BUILD_PATH}\n\n# copy the makepkg.conf into chroot\ncp /etc/makepkg.conf rootfs/etc/makepkg.conf\n\n# bootstrap using our configuration\npacstrap -K -C rootfs/etc/pacman.conf ${BUILD_PATH}\n\n# copy the builder mirror list into chroot\nmkdir -p rootfs/etc/pacman.d\ncp /etc/pacman.d/mirrorlist rootfs/etc/pacman.d/mirrorlist\n\n# copy files into chroot\ncp -R manifest rootfs/. ${BUILD_PATH}/\n\nmkdir ${BUILD_PATH}/own_pkgs\nmkdir ${BUILD_PATH}/extra_pkgs\n\ncp -rv aur-pkgs/*.pkg.tar* ${BUILD_PATH}/extra_pkgs\ncp -rv pkgs/*.pkg.tar* ${BUILD_PATH}/own_pkgs\n\nif [ -n \"${PACKAGE_OVERRIDES}\" ]; then\n\twget --directory-prefix=/tmp/extra_pkgs ${PACKAGE_OVERRIDES}\n\tcp -rv /tmp/extra_pkgs/*.pkg.tar* ${BUILD_PATH}/own_pkgs\nfi\n\n\n# chroot into target\nmount --bind ${BUILD_PATH} ${BUILD_PATH}\narch-chroot ${BUILD_PATH} /bin/bash <<EOF\nset -e\nset -x\n\nsource /manifest\n\npacman-key --populate\n\necho \"LANG=en_US.UTF-8\" > /etc/locale.conf\nlocale-gen\n\n# Disable parallel downloads\nsed -i '/ParallelDownloads/s/^/#/g' /etc/pacman.conf\n\n# Cannot check space in chroot\nsed -i '/CheckSpace/s/^/#/g' /etc/pacman.conf\n\n# update package databases\npacman --noconfirm -Syy\n\n# Disable check and debug for makepkg on the final image\nsed -i '/BUILDENV/s/ check/ !check/g' /etc/makepkg.conf\nsed -i '/OPTIONS/s/ debug/ !debug/g' /etc/makepkg.conf\n\n# install kernel package\nif [ \"$KERNEL_PACKAGE_ORIGIN\" == \"local\" ] ; then\n\tpacman --noconfirm -U --overwrite '*' \\\n\t/own_pkgs/${KERNEL_PACKAGE}-*.pkg.tar.zst \nelse\n\tpacman --noconfirm -S \"${KERNEL_PACKAGE}\" \"${KERNEL_PACKAGE}-headers\"\nfi\n\n# install own override packages\npacman --noconfirm -U --overwrite '*' /own_pkgs/*\nrm -rf /var/cache/pacman/pkg\n\n# install packages\npacman --noconfirm -S --overwrite '*' --disable-download-timeout ${PACKAGES}\nrm -rf /var/cache/pacman/pkg\n\n# install AUR packages\npacman --noconfirm -U --overwrite '*' /extra_pkgs/*\nrm -rf /var/cache/pacman/pkg\n\n# Install the new iptables\n# See https://gitlab.archlinux.org/archlinux/packaging/packages/iptables/-/issues/1\n# Since base package group adds iptables by default\n# pacman will ask for confirmation to replace that package\n# but the default answer is no.\n# doing yes | pacman omitting --noconfirm is a necessity \nyes | pacman -S iptables-nft\n\n# enable services\nsystemctl enable ${SERVICES}\n\n# enable user services\nsystemctl --global enable ${USER_SERVICES}\n\n# disable root login\npasswd --lock root\n\n# create user\ngroupadd -r autologin\nuseradd -m ${USERNAME} -G autologin,wheel,plugdev\necho \"${USERNAME}:${USERNAME}\" | chpasswd\n\n# set the default editor, so visudo works\necho \"export EDITOR=/usr/bin/vim\" >> /etc/bash.bashrc\n\necho \"[Seat:*]\nautologin-user=${USERNAME}\n\" > /etc/lightdm/lightdm.conf.d/00-autologin-user.conf\n\necho \"${SYSTEM_NAME}\" > /etc/hostname\n\n# enable multicast dns in avahi\nsed -i \"/^hosts:/ s/resolve/mdns resolve/\" /etc/nsswitch.conf\n\n# configure ssh\necho \"\nAuthorizedKeysFile\t.ssh/authorized_keys\nPasswordAuthentication no\nChallengeResponseAuthentication no\nUsePAM yes\nPrintMotd no # pam does that\nSubsystem\tsftp\t/usr/lib/ssh/sftp-server\n\" > /etc/ssh/sshd_config\n\necho \"\nLABEL=frzr_root /var       btrfs     defaults,subvolid=256,rw,noatime,nodatacow,nofail                                                                                                                                                                                                                      0   0\nLABEL=frzr_root /home      btrfs     defaults,subvolid=257,rw,noatime,nodatacow,nofail                                                                                                                                                                                                                      0   0\nLABEL=frzr_root /frzr_root btrfs     defaults,subvolid=5,rw,noatime,nodatacow,x-initrd.mount                                                                                                                                                                                                                0   2\noverlay         /etc       overlay   defaults,x-systemd.requires-mounts-for=/frzr_root,x-systemd.requires-mounts-for=/sysroot/frzr_root,x-systemd.rw-only,lowerdir=/sysroot/etc,upperdir=/sysroot/frzr_root/etc,workdir=/sysroot/frzr_root/.etc,index=off,metacopy=off,comment=etcoverlay,x-initrd.mount    0   0\n\" > /etc/fstab\n\necho \"\nLSB_VERSION=1.4\nDISTRIB_ID=${SYSTEM_NAME}\nDISTRIB_RELEASE=\\\"${LSB_VERSION}\\\"\nDISTRIB_DESCRIPTION=${SYSTEM_DESC}\n\" > /etc/lsb-release\n\necho 'NAME=\"${SYSTEM_DESC}\"\nVERSION=\"${DISPLAY_VERSION}\"\nVERSION_ID=\"${VERSION_NUMBER}\"\nBUILD_ID=\"${BUILD_ID}\"\nPRETTY_NAME=\"${SYSTEM_DESC} ${DISPLAY_VERSION}\"\nID=${SYSTEM_NAME}\nID_LIKE=arch\nANSI_COLOR=\"1;31\"\nHOME_URL=\"${WEBSITE}\"\nDOCUMENTATION_URL=\"${DOCUMENTATION_URL}\"\nBUG_REPORT_URL=\"${BUG_REPORT_URL}\"' > /usr/lib/os-release\n\n# install extra certificates\ntrust anchor --store /extra_certs/*.crt\n\n# run post install hook\npostinstallhook\n\n# record installed packages & versions\npacman -Q > /manifest\n\n# preserve installed package database\nmkdir -p /usr/var/lib/pacman\ncp -r /var/lib/pacman/local /usr/var/lib/pacman/\n\n# move kernel image and initrd to a defualt location if \"linux\" is not used\nif [ ${KERNEL_PACKAGE} != 'linux' ] ; then\n\tmv /boot/vmlinuz-${KERNEL_PACKAGE} /boot/vmlinuz-linux\n\tmv /boot/initramfs-${KERNEL_PACKAGE}.img /boot/initramfs-linux.img\n\tmv /boot/initramfs-${KERNEL_PACKAGE}-fallback.img /boot/initramfs-linux-fallback.img\nfi\n\n# clean up/remove unnecessary files\nrm -rf \\\n/own_pkgs \\\n/extra_pkgs \\\n/extra_certs \\\n/home \\\n/var \\\n\nrm -rf ${FILES_TO_DELETE}\n\n# create necessary directories\nmkdir -p /home\nmkdir -p /var\nmkdir -p /frzr_root\nmkdir -p /efi\nEOF\n\n#defrag the image\nbtrfs filesystem defragment -r ${BUILD_PATH}\n\n# copy files into chroot again\ncp -R rootfs/. ${BUILD_PATH}/\nrm -rf ${BUILD_PATH}/extra_certs\n\necho \"${SYSTEM_NAME}-${VERSION}\" > ${BUILD_PATH}/build_info\necho \"\" >> ${BUILD_PATH}/build_info\ncat ${BUILD_PATH}/manifest >> ${BUILD_PATH}/build_info\nrm ${BUILD_PATH}/manifest\n\n# freeze archive date of build to avoid package drift on unlock\n# if no archive date is set\nif [ -z \"${ARCHIVE_DATE}\" ]; then\n\texport TODAY_DATE=$(date +%Y/%m/%d)\n\techo \"Server=https://archive.archlinux.org/repos/${TODAY_DATE}/\\$repo/os/\\$arch\" > \\\n\t${BUILD_PATH}/etc/pacman.d/mirrorlist\nfi\n\nbtrfs subvolume snapshot -r ${BUILD_PATH} ${SNAP_PATH}\nbtrfs send -f ${SYSTEM_NAME}-${VERSION}.img ${SNAP_PATH}\n\ncp ${BUILD_PATH}/build_info build_info.txt\n\n# clean up\numount -l ${BUILD_PATH}\numount -l ${MOUNT_PATH}\nrm -rf ${MOUNT_PATH}\nrm -rf ${BUILD_IMG}\n\nIMG_FILENAME=\"${SYSTEM_NAME}-${VERSION}.img.tar.xz\"\nif [ -z \"${NO_COMPRESS}\" ]; then\n\ttar -c -I'xz -8 -T4' -f ${IMG_FILENAME} ${SYSTEM_NAME}-${VERSION}.img\n\trm ${SYSTEM_NAME}-${VERSION}.img\n\n\tsha256sum ${SYSTEM_NAME}-${VERSION}.img.tar.xz > sha256sum.txt\n\tcat sha256sum.txt\n\n\t# Move the image to the output directory, if one was specified.\n\tif [ -n \"${OUTPUT_DIR}\" ]; then\n\t\tmkdir -p \"${OUTPUT_DIR}\"\n\t\tmv ${IMG_FILENAME} ${OUTPUT_DIR}\n\t\tmv build_info.txt ${OUTPUT_DIR}\n\t\tmv sha256sum.txt ${OUTPUT_DIR}\n\tfi\n\n\t# set outputs for github actions\n\tif [ -f \"${GITHUB_OUTPUT}\" ]; then\n\t\techo \"version=${VERSION}\" >> \"${GITHUB_OUTPUT}\"\n\t\techo \"display_version=${DISPLAY_VERSION}\" >> \"${GITHUB_OUTPUT}\"\n\t\techo \"display_name=${SYSTEM_DESC}\" >> \"${GITHUB_OUTPUT}\"\n\t\techo \"image_filename=${IMG_FILENAME}\" >> \"${GITHUB_OUTPUT}\"\n\telse\n\t\techo \"No github output file set\"\n\tfi\nelse\n\techo \"Local build, output IMG directly\"\n\tif [ -n \"${OUTPUT_DIR}\" ]; then\n\t\tmkdir -p \"${OUTPUT_DIR}\"\n\t\tmv ${SYSTEM_NAME}-${VERSION}.img ${OUTPUT_DIR}\n\tfi\nfi\n"
        },
        {
          "name": "manifest",
          "type": "blob",
          "size": 8.4658203125,
          "content": "#! /bin/bash\n\nexport VERSION=\"47\"\nexport SYSTEM_DESC=\"ChimeraOS\"\nexport SYSTEM_NAME=\"chimeraos\"\nexport USERNAME=\"gamer\"\nexport SIZE=\"12000MB\"\nexport ARCHIVE_DATE=$(date -d 'yesterday' +%Y/%m/%d)\nexport WEBSITE=\"https://chimeraos.org\"\nexport DOCUMENTATION_URL=\"https://chimeraos.org/about\"\nexport BUG_REPORT_URL=\"https://github.com/ChimeraOS/chimeraos/issues\"\n\nexport KERNEL_PACKAGE=\"linux-chimeraos\"\nexport KERNEL_PACKAGE_ORIGIN=\"local\"\n\nexport PACKAGES=\"\\\n\taccountsservice \\\n\tacpi_call-dkms \\\n\talsa-firmware \\\n\talsa-utils \\\n\tamd-ucode \\\n\tbash-completion \\\n\tbroadcom-wl-dkms \\\n\tbzip2 \\\n\tcifs-utils \\\n\tcpupower \\\n\tdiffutils \\\n\tdkms \\\n\tdistrobox \\\n\tdmidecode \\\n\tdosbox \\\n\tefibootmgr \\\n\tepiphany \\\n\tethtool \\\n\tevtest \\\n\tfakeroot \\\n\tffmpeg \\\n\tfile \\\n\tffmpegthumbnailer \\\n\tfirejail \\\n\tflatpak \\\n\tfmt \\\n\tfuse-zip \\\n\tfuse2 \\\n\tfwupd \\\n\tgit \\\n\tgnome-browser-connector \\\n\tgnome-console \\\n\tgnome-control-center \\\n\tgnome-disk-utility \\\n\tgnome-keyring \\\n\tgnome-menus \\\n\tgnome-session \\\n\tgnome-shell \\\n\tgnome-software \\\n\tgnome-system-monitor \\\n\tgnome-text-editor \\\n\tgnome-tweaks \\\n\tgst-plugin-pipewire \\\n\tgvfs-smb \\\n\tgvfs-nfs \\\n\tgzip \\\n\thaveged \\\n\thtop \\\n\tintel-gpu-tools \\\n\tintel-media-driver \\\n\tintel-ucode \\\n\tintel-undervolt \\\n\tless \\\n\tlib32-curl \\\n\tlib32-fontconfig \\\n\tlib32-freetype2 \\\n\tlib32-libgpg-error \\\n\tlib32-libnm \\\n\tlib32-libxinerama \\\n\tlib32-libxcrypt-compat \\\n\tlib32-mangohud \\\n\tlib32-openal \\\n\tlib32-pipewire \\\n\tlib32-sdl2 \\\n\tlib32-systemd \\\n\tlib32-vulkan-icd-loader \\\n\tlibcurl-gnutls \\\n\tlibidn11 \\\n\tlibretro-beetle-pce-fast \\\n\tlibretro-beetle-psx-hw \\\n\tlibretro-citra \\\n\tlibretro-desmume \\\n\tlibretro-dolphin \\\n\tlibretro-flycast \\\n\tlibretro-genesis-plus-gx \\\n\tlibretro-kronos \\\n\tlibretro-mesen-s\\\n\tlibretro-mgba \\\n\tlibretro-mupen64plus-next \\\n\tlibretro-nestopia \\\n\tlibretro-picodrive \\\n\tlibretro-ppsspp \\\n\tlibretro-shaders-slang \\\n\tlibretro-snes9x \\\n\tlibxcrypt-compat \\\n\tlibxss \\\n\tlightdm \\\n\tlinux-firmware \\\n\tliquidctl \\\n\tlogrotate \\\n\tlrzip \\\n\tloupe \\\n\tlshw \\\n\tmangohud \\\n\tmesa-demos \\\n\tmodemmanager \\\n\tnano \\\n\tnautilus \\\n\tnetworkmanager \\\n\tnfs-utils \\\n\tnoto-fonts-emoji \\\n\tnss-mdns \\\n\tnvidia-open-dkms \\\n\topencl-nvidia \\\n\tlib32-opencl-nvidia \\\n\tnvidia-utils \\\n\tlib32-nvidia-utils \\\n\tnvidia-prime \\\n\topenal \\\n\topenrazer-daemon \\\n\topenssh \\\n\tp7zip \\\n\tpipewire \\\n\tpipewire-alsa \\\n\tpipewire-jack \\\n\tpipewire-pulse \\\n\tpodman \\\n\tpulsemixer \\\n\tpython \\\n\tpython-notify2 \\\n\tqtractor \\\n\tretroarch \\\n\trsync \\\n\tsmbclient \\\n\tsof-firmware \\\n\tsshfs \\\n\tsteam \\\n\tsudo \\\n\ttar \\\n\ttree \\\n\tttf-liberation \\\n\tunace \\\n\tunrar \\\n\tunzip \\\n\tusb_modeswitch \\\n\tusbutils \\\n\tvim \\\n\tvulkan-icd-loader \\\n\twavpack \\\n\twget \\\n\twhich \\\n\twireplumber \\\n\twireless-regdb \\\n\twqy-zenhei \\\n\txdg-desktop-portal \\\n\txdg-desktop-portal-gnome \\\n\txdg-desktop-portal-wlr \\\n\txdg-user-dirs-gtk \\\n\txf86-video-amdgpu \\\n\txorg-server \\\n\txz \\\n\tzip \\\n\"\n\nexport PACKAGE_OVERRIDES=\"\\\n\thttps://github.com/ChimeraOS/linux-chimeraos/releases/download/v6.12.8-chos1-1/linux-chimeraos-6.12.8.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/linux-chimeraos/releases/download/v6.12.8-chos1-1/linux-chimeraos-headers-6.12.8.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-mesa-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-opencl-rusticl-mesa-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-vulkan-intel-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-vulkan-mesa-layers-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-vulkan-radeon-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/lib32-vulkan-swrast-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/mesa-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/opencl-rusticl-mesa-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/vulkan-intel-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/vulkan-mesa-layers-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/vulkan-radeon-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://github.com/ChimeraOS/mesa-chimeraos/releases/download/24.3.3-chos1-1/vulkan-swrast-1--24.3.3.chos1-1-x86_64.pkg.tar.zst \\\n\thttps://archive.archlinux.org/repos/2023/06/28/extra/os/x86_64/libretro-pcsx2-11900-2-x86_64.pkg.tar.zst \\\n\thttps://archive.archlinux.org/packages/l/libretro-mame/libretro-mame-85763-1-x86_64.pkg.tar.zst \\\n\"\n\n# Each entry is the clone url (https://aur.archlinux.org/{AUR_PACKAGE}.git)\n# Which is often the same as the package name but it can be different.\n# Check on the AUR webpage if you are unsure\nexport AUR_PACKAGES=\"\\\n\tasusctl \\\n\tayaneo-platform-dkms-git \\\n\tayn-platform-dkms-git \\\n\tbcm20702a1-firmware \\\n\tboxtron \\\n\tchimera \\\n\tchimeraos-device-quirks \\\n\tdowngrade \\\n\tevdev-keepalive \\\n\tfrzr \\\n\tgamescope-plus \\\n\tgamescope-session-steam-git \\\n\tgamescope-session-steam-plus-git \\\n\tgpd-fan-driver-dkms-git \\\n\thhfc-git \\\n\thid-msi-claw-dkms-git \\\n\tlegendary \\\n\tlibretro-dosbox-pure-git \\\n\tlibretro-opera-git \\\n\tlibretro-prosystem-git \\\n\tlibretro-stella2014-git \\\n\tlibretro-virtualjaguar-git \\\n\tlinux-firmware-valve \\\n\tkanit-font \\\n\tnintendo-udev \\\n\topengamepadui-bin \\\n\topengamepadui-session-git \\\n\tpikaur \\\n\tpowerstation-bin \\\n\tpython-gbopyrator \\\n\tpython-vdf \\\n\trtl8812au-dkms-git \\\n\trtl8814au-dkms-git \\\n\trtl8821au-dkms-git \\\n\tryzenadj-git \\\n\tsteam_notif_daemon \\\n\tsteam-powerbuttond-git \\\n\tsteam-removable-media-git \\\n\twyvern \\\n\txpadneo-dkms-git \\\n\tzenergy-dkms-git \\\n\"\n\nexport SERVICES=\"\\\n\tNetworkManager \\\n\tavahi-daemon \\\n\tbluetooth \\\n\tbluetooth-workaround \\\n\tfstrim.timer \\\n\thaveged \\\n\thome-swapfile.swap \\\n\tinputplumber \\\n\tlightdm \\\n\tnvidia-powerd \\\n\tpowerstation \\\n\tsteam-powerbuttond \\\n\tsshd \\\n\tsystemd-timesyncd \\\n\tswapfile \\\n\"\n\nexport USER_SERVICES=\"\\\n\tchimera.service \\\n\tpipewire \\\n\tsteam-patch.service \\\n\tchimera-cart-monitor.service \\\n\"\n\nexport FILES_TO_DELETE=\"\\\n\t/boot/initramfs-linux-fallback.img \\\n\t/usr/share/SFML \\\n\t/usr/share/doc \\\n\t/usr/share/gtk-doc \\\n\t/usr/share/help \\\n\t/usr/share/man \\\n\"\n\npostinstallhook() {\n\t# Add sudo permissions\n\tsed -i '/%wheel ALL=(ALL:ALL) ALL/s/^# //g' /etc/sudoers\n\techo \"${USERNAME} ALL=(ALL) NOPASSWD: /usr/bin/dmidecode -t 11\n\t\" >/etc/sudoers.d/steam\n\techo \"${USERNAME} ALL=(ALL) NOPASSWD: /usr/bin/chimera-session-use-gamescope\n\t${USERNAME} ALL=(ALL) NOPASSWD: /usr/bin/chimera-session-use-lightdm\n\t${USERNAME} ALL=(ALL) NOPASSWD: /usr/share/chimera/bin/power-tool\n\t\" >/etc/sudoers.d/chimera\n\n\t# download and add racing wheel udev rules\n\tpushd /usr/lib/udev/rules.d\n\tcurl -L -O https://raw.githubusercontent.com/berarma/oversteer/master/data/udev/99-fanatec-wheel-perms.rules\n\tcurl -L -O https://raw.githubusercontent.com/berarma/oversteer/master/data/udev/99-logitech-wheel-perms.rules\n\tcurl -L -O https://raw.githubusercontent.com/berarma/oversteer/master/data/udev/99-thrustmaster-wheel-perms.rules\n\tpopd\n\n\t# Remove build tools for slimmer image\n\trm /usr/share/libalpm/hooks/70-dkms-install.hook\n\trm /usr/share/libalpm/hooks/70-dkms-upgrade.hook\n\trm /usr/share/libalpm/hooks/71-dkms-remove.hook\n\tpacman --noconfirm -Rnsdd make gcc dkms ${KERNEL_PACKAGE}-headers\n\n\t# remove dolphin shortcut to not clutter up the desktop\n\trm /usr/share/applications/dolphin-emu.desktop\n\n\t# clean up desktop shortcuts\n\tsed -i -e 's/Name=Steam (Runtime)/Name=Steam/' /usr/share/applications/steam.desktop\n\tfind /usr/share/applications/* |\n\t\tgrep -v org.chimeraos.Gamescope.desktop |\n\t\tgrep -v org.chimeraos.app.desktop |\n\t\tgrep -v org.gnome.Console.desktop |\n\t\tgrep -v org.gnome.DiskUtility.desktop |\n\t\tgrep -v org.gnome.FileRoller.desktop |\n\t\tgrep -v org.gnome.Nautilus.desktop |\n\t\tgrep -v org.gnome.Settings.desktop |\n\t\tgrep -v org.gnome.Software.desktop |\n\t\tgrep -v org.gnome.TextEditor.desktop |\n\t\tgrep -v steam.desktop |\n\t\txargs -I {} sh -c \"echo NoDisplay=true >> {}\"\n\n\t# force -steamdeck option in desktop mode to prevent constant steam updates\n\tsed -i 's,Exec=/usr/bin/steam-runtime,Exec=/usr/bin/steam-runtime -steamdeck,' /usr/share/applications/steam.desktop\n\n\t# set permissions for intel_gpu_top and gamescope\n\tsetcap cap_perfmon=+ep /usr/bin/intel_gpu_top\n\tsetcap 'CAP_SYS_NICE=eip' /usr/bin/gamescope\n}\n"
        },
        {
          "name": "output",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "rootfs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}